{
    "title": "Lady in Red Pt. 02 Ch. 17",
    "pages": [
        "Steve was surprised only by how quickly Gwen's detractors had managed to set things in motion. He had expected the 'dance' to begin during the summer recess. He was already feeling quite irritated when he was stopped by a TV reporter as he made his way through the airport.\n\n\"Can you shed any light on these ethics violation accusations? What exactly is Gwen Anderson being accused of? Can you tell us that much?\"\n\n\"I can explain a few things,\" replied Steve with a seemingly calm demeanor. \"There are certain members of Congress that believe that Gwen's popularity is threatening to them, or diminishes them in some way. \n\n\"Gwen is the most ethical, honest person I know. This whole thing isn't really about ethics. Hell, most of these people in Congress wouldn't recognize ethical behavior if it bit them in the ass.\n\n\"This town is about money, power, and influence. Gwen has all three and that upsets certain politicians that have less. Gwen's worked hard to make our company a success. That hard work has gained her considerable power and influence here in the U.S., and in other nations. She didn't buy it, like so many politicians try to do, but earned it by performing remarkable acts of courage, generosity, and kindness. \n\n\"We will not enter into this fray unprepared. As soon as the battle lines become clear, those unwise individuals that are leading this witch-hunt will rue the day they decided to question Gwen's ethics, integrity, or honesty. Uncle Sam has trained me in the art of war. We'll counter attack with vigor, and without mercy. I'd caution those that join against Gwen in this ill-fated fiasco that they'll not come out unscathed.\" \n\n\"Are you implying that you consider this investigation akin to actual war?\" questioned the amazed reporter.\n\n\"No, I'm not implying it. I'm stating outright that this is an unprovoked attack, which is an act of war by almost any definition. We will respond accordingly. Political blood will be shed.\"\n\n\"Are you threatening the politicians that are questioning Congresswoman Anderson's behavior in the House?\" pursued the stunned reporter.\n\n\"That would depend on how you look at it. If promising to reveal truths, expose corruption, and quite possibly force some members of Congress from office for malfeasance and outright illegal activities is considered a threat, then it would seem that I am. I simply consider it a promise. We look forward to literally cleaning House.\" \n\n\"You're an officer in the U.S. military. Can you even say these things without landing in serious trouble yourself?\" was the final question posed to Steve.\n\n\"Why would we officers be trained to fight, and taught to defend honor, freedom, our way of life, as well as the Constitution, if we were expected to ignore threats to loved ones? I feel strongly that this is one of the reasons I worked to become an officer in the U.S. Navy, and it's what the American people expect from me. I will support Gwen to my last breath. America will accept nothing less from me, and quite frankly, neither will I!\n\n\"I'd ask viewers that wish to support Gwen in this upcoming kangaroo court to visit our web page, LadyinRedProductions.com to find contact information. They can use it to report any suspected unethical activity by elected officials in Washington. We'll take it from there.\"\n\nSteve ended the interview at that point. It was rushed past editors and played on the evening news along with the story of Gwen being investigated for ethics violations.\n\n\"Do you believe what your boyfriend just did?\" asked Charlotte as she, Gwen, and some friends watched Steve's interview. \"He's come out fighting. That's for sure! It doesn't pay to insult or attack Gwen Anderson in any way. He came across as very calm but extremely determined. I wonder what the fallout from this will be.\"\n\n\"We decided that once this started, we'd be on the offensive. We've had people working on this matter for weeks now, and we've gathered some pretty damning information,\" admitted Gwen. \"But I never expected Steve to fire the first salvos. I hope he doesn't get into trouble. He sure does get upset when anyone tries to hurt me, doesn't he?\"\n\nThe next morning found Steve seated in front of a very irate Senator Chatham. \"I've had a dozen calls already this morning. Every last one of them was from a member of Congress that wants you disciplined, at the very least! There's pressure on the Navy to court martial you. They want President Hanson to denounce you and Gwen, or at least distance himself from you both. Some of my advisors are telling me to jettison you as far and as fast as I possibly can. You've opened a real can of worms.\"\n\n\"I warned you that I'd support Gwen come hell or high water,\" responded Steve. \"You're the one that told me this was coming and to be prepared. I didn't just come up with those statements on the spur of the moment. I've been thinking about it for weeks. \n\n\"I won't blame you if you distance yourself from me. I'm a big boy and I'll accept any punishment my superiors deem appropriate. I will not ignore attacks on Gwen. You can take that to the bank.\"\n\n\"I didn't say I was going to follow that advice,\" countered Senator Chatham. \"I'm still hearing all sorts of praise about your efforts after that tornado. FEMA hasn't even responded yet and your company has a good portion of the recovery work already done. No one has ever seen a private company move so fast and so effectively. Hell, no company has ever even considered helping on the scale that yours did. It was amazing.\n\n\"I'm going to confer with the President about this matter in a few minutes. It'll be on speaker since he wants to talk with you directly. Stay in that chair and wait!\" insisted the senior Senator from Tennessee before leaving the office.\n\nSteve remained quiet as he watched Senator Chatham's staff struggle to handle the large volume of phone calls that were pouring in. Fifteen minutes later, the Senator returned. She and Steve were the only two in her office.\n\n\"Mr. President, this is Senator Chatham. Lieutenant Hammer is the only other person in attendance. I've already mentioned to him some of the pressures you're facing from his 'declaration of war' yesterday evening.\"\n\n\"Steve, how are you?\" asked President Hanson by way of a conversation starter. \"That was some pretty slick work your company did over the weekend in Tennessee. That required a great deal of planning and a considerable investment.\"\n\n\"Yes, sir. My brother-in-law, Army Ranger Captain Jason Hunter, graduated West Point with an engineering degree. He's retired from the military now and working very hard to prepare our company's response to emergencies across the nation and possibly around the world. That was our first major test. We did some things wrong and we're expecting to improve for next time.\"\n\n\"I'm very familiar with his record. I'm not surprised that he was able to design such a well conceived strategy,\" replied Hanson. \"You've done a great service to the people of Tennessee and this nation.\n\n\"That said, you must realize that your response to Ms. Anderson's situation has placed your superiors in a difficult situation. Members of the military do not speak their minds to the press, especially if it's contrary to the will of Congress, or the President,\" stated Hanson firmly. \n\n\"I understand that, Sir. I am prepared to accept any and all punishment the Navy administers, but I will always respond when Gwen is attacked,\" declared Steve just as firmly.\n\n\"And it's that chivalry, that desire to protect your lady that makes this so difficult,\" replied President Hanson. \"Television and the internet can't stop talking and writing about it. The average man on the street is solidly behind you both, while Suzy Homemaker feels that you're Sir Lancelot and Sir Walter Raleigh all rolled into one.\n\n\"My advisors think you've overstepped your bounds this time. They tell me that you and Gwen can't survive the kind of campaign that certain powerful members of Congress will wage against you. They want me to cut my losses, as well as any ties that I have with you. \n\n\"The Kremlin will announce later today that you and Gwen are going to serve as best man and maid of honor at Vlad Novokov's wedding. Talk about timing! That information will fuel the distrust some people have of Gwen and you. It looks like a perfect storm and my advisors are telling me to pull in my head, batten the hatches, and wait for it to pass.\"\n\nNeither Steve nor Senator Chatham wanted to interrupt the president as he spoke, so they remained silent and waited for him to continue.\n\n\"Unlike almost everyone else in Washington, I have no political ambitions after January. That actually removes some of the stress of this situation. This may also be the most nonpartisan movement I have ever experienced in my many years in Washington. Some powerful members of both parties are uncomfortable with Gwen's influence, as well as the speed at which it's been increasing. She doesn't play by their rules. She can't be intimidated, bought, or cajoled into doing things their way.\n\n\"My gut feeling is that some very powerful people are about to receive a lesson in civics, the American tradition of hard work, honesty, and the strength of public opinion. \n\n\"I'm going to come out in support of Gwen, without equivocation, or misgivings. I'll not allow the Navy to punish you in any way, Steve. I'll be very honest here. My wife is your biggest fan. She's convinced that you two will come out on top, and be stronger than ever. I can't remember the last time she was wrong about something like this. She feels so strongly about it that she insists we support you, to the point of gambling with my legacy, and betting it on you and Gwen. I tend to agree with her.\"\n\n\"Mr. President? Am I hearing you correctly? You're going to publicly stand behind Gwen Anderson and Steve Hammer in this battle? You realize that it's a huge risk, and many of your advisors will not be pleased. Nor will some members of your cabinet. You may lose some good people over this,\" cautioned Senator Chatham.\n\n\"I admit that it'll be interesting. There'll be some very big winners, as well as some very big losers when the dust settles. My wife and I feel that those of us in Gwen's camp will be the big winners, but only time will tell. Are you prepared to state your position, Senator?\" asked the President.\n\n\"I've thought about nothing else for the past twelve hours,\" answered Senator Chatham. \"When I came in this morning, my staff was divided about how to handle this. The younger members were adamant that Gwen and Steve represented the best in America and deserved my support. The older, career minded people wanted me to tell the public that I felt Steve needed space and time to work through this issue; that I was cutting ties with him to give him the space he needs.\"\n\n\"That seems very fair, Senator,\" interrupted Steve. \"Thanks for the opportunity...\n\n\"Allow me to finish my meanderings!\" insisted Senator Chatham. \"Mr. President, I was with Steve and Gwen and their friends in Paris a few short months ago. I've seen what happens when the two of them are together, working the crowd, including world leaders. Steve saved my life and probably a dozen others when he caught that grenade and fired it back into that speeding car. What he accomplished seemed impossible. How they both interact with world leaders, and in what high esteem they are held is difficult for me to even comprehend. Steve conducted himself very well during the negotiations with Russia and Ukraine. It was something to see.\n\n\"Add that I woke up Sunday morning to see him on TV leading volunteers in my home state to help victims of a tornado, and to learn that his company provided all kinds of relief and helped save lives and property; I feel I have no choice but to support Gwen and Steve to the bitter end. What kind of person would I be if I remained on the sidelines while two of the finest, most powerful voices for peace in the world today are attacked by these political jackals?\n\n\"I've decided to address my colleagues as soon as possible and declare my position. I like to think that it will help convince some others to join me.\"\n\n\"Mr. President. Senator Chatham. Gwen will be delighted to hear about your support. I thank you both for your confidence and trust, and assure you that we will do everything possible to earn it,\" responded Steve with considerable emotion.\n\n\"Steve, you've already earned it, many times over,\" replied President Hanson. \"You've made me look good on several occasions and now those chickens have come home to roost. You and Gwen will play a very big role in the future of this country. I'm sure of that, and I'm equally certain that this nation will be the better for it.\" \n\nAbout the same time as Steve was speaking with President Hanson and Senator Chatham, Charlotte answered their house phone at Stanford. She quickly called to Gwen. \"It's Secretary Rosen! He wants to speak with you.\"\n\nOnce Gwen picked up the phone, Rosen began. \"Gwen, I saw Steve's interview last night. I could have told those idiots that Steve would fight for you if they tried to smear your name. I learned that lesson the hard way!\n\n\"I'm calling to let you know that I'm going to come out strongly in support of you in this debacle in Congress. As you know, I resigned from the Cabinet and I've declared my candidacy for president. \n\n\"My wife insisted that I not only support you, but call you to let you know that I am. She feels that you're going to kick butt and take names in this looming battle. I happen to think she's right. \n\n\"\u00cd know you said that you wouldn't come out in support of any candidate, but I want to make certain that you know where I stand on this matter. I am not sitting on the fence. There's no waffling. You have my best wishes and total support. \n\n\"My wife thinks that the sun rises and sets on Steve. His adamant support of you, and the fact that he pretty much threatened those that wish you harm raised her opinion of him even higher. She keeps telling me to watch how he conducts himself and try to act the same way,\" finished Rosen.\n\n\"I can't tell you how pleased I am that you called and offered your support,\" responded Gwen. \"Steve sure did make his feelings known, didn't he? I think women like it when a man is willing to risk it all to protect his lady, and Steve certainly did that. I appreciate that you called and I wish you the best in your campaign.\" \n\n\"It's begun,\" observed Charlotte as Gwen hung up the phone. \"Remember that the plan is for me to keep you focused on your studies and let the others take care of things. With Steve, Paula, Ashley, Kate, and Stephanie fighting for you in Washington, I'd say things look pretty good. Just let them handle it while you concentrate on school.\" \n\nIt wasn't all good news. Several members of the House appeared on the morning news shows and expressed concern about Gwen remaining so active in her company and in entertainment while serving in Congress. They suggested that she was using her position to increase her personal wealth\n\nThey were even more vocal about Steve and his efforts to 'strong-arm' them into abandoning their duties as public servants and turn a blind eye to Gwen's questionable behavior. Congressmen Bill Simpson went so far as to suggest that Gwen 'lacked the moral fiber' required to serve in the House of Representatives after seeing her performance on the Oscars and her 'inappropriate' commercials on the Super Bowl broadcast. He went so far as to call her a 'modern day harlot'.\n\nWhen Steve reached Gwen's D.C. office a little after ten that morning, he found Ashley calmly directing her staff on how to handle the phone calls that had begun to pour in. She even instructed one staffer to place an ad on Graigslist to hire temporary people to answer phones. Several reporters were waiting for Ashley to finish up so they could question her. \n\nWhen they saw Steve walk in, they rushed to ask him the questions that had been intended for Ashley. \"Please wait for Ashley,\" insisted Steve. \"I spoke to the press last night and I'm still hearing about it.\"\n\nAshley soon joined Steve and began fielding questions. She did an excellent job and Steve found himself grateful for her calm, thoughtful responses. Then a reporter asked about Congressman Simpson's remark about how Gwen was a modern day harlot and lacked the moral fiber to serve in the House.\n\n\"Are you sure that Mr. Simpson actually made that statement?\" asked Ashley as anger flashed across her face. \"Even Mr. Simpson wouldn't be that foolish.\"\n\nOne of the reporters pulled the interview up on his iPad and played it for Steve and Ashley. Then he asked, \"Do you care to respond to Congressman Simpson's comments?\"\n\nEven as angry as Ashley was, she could easily tell that Steve was livid. His face was red and his hands were clenched tightly into fists. She arched an eyebrow to Steve and he nodded in return. The exchange between the two did not go unnoticed by the reporters.\n\n\"Okay, my response to the foolish statements by Congressman Simpson is in a locked file. Please give me a moment to retrieve it,\" requested Ashley as she unlocked and opened a large filing cabinet. \n\nThe reporters could see that the cabinet was almost full of files. They were able to easily read the names of several members of Congress on the headers. Ashley pulled a small pile of papers out of a file clearly marked 'Bill Simpson'. She placed the file on her desk and then closed and locked the cabinet.\n\n\"Here's Gwen's response to Mr. Simpson's incredibly stupid insinuation that she lacked moral fiber,\" declared Ashley with obvious anger. \"Just last night, Steve Hammer warned what would happen to politicians that attacked Gwen's character or honesty. Obviously, Mr. Simpson heard him because I just saw how he ranted about Steve's nerve for almost a minute during his interview this morning just before he questioned Gwen Anderson's character. Now comes the reckoning. Mr. Simpson is about to enter into a world of hurt and he has no one to blame but his own hypocritical, sanctimonious, self serving ass!\"\n\nWith that statement, Ashley pulled packets from the files and handed one to each reporter. \"Be sure the self-righteous Mr. Simpson knows that this information is being handed out compliments of Gwen Anderson and Steve Hammer!\" \n\nThe reporters quickly thumbed through the files. A couple of whistles sounded as they began to digest the contents of the packet. \n\n\"I haven't read any of this, but a few of these pictures look pretty damning!\" observed a veteran reporter from a national network. \"Can you explain these pictures and some of these documents?\"\n\n\"You guys are the reporters, so dig into it. We've already done the leg work that a lot of your viewers would have expected from you, but that's okay. There's a flash drive in each packet with some video and more detailed explanations of the contents,\" pointed out Ashley. \"Now that I gave you a bone to chew on, please leave the office and let me get some work done.\" \n\n\"That poor, miserable bastard won't even know what hit him,\" grinned Ashley once she was alone with Steve. \"It couldn't happen to a more deserving guy. He's been in Congress forever, has seniority so he can pick what committees he wants to be on, acts like he's the second coming in public, yet does terrible things to people. I read the files and saw the videos and I feel confident that he'll rot in hell.\"\n\n\"So, how do you really feel about the guy?\" asked Steve with a crooked grin. \"Personally, I'm glad he gave us a reason to release that report. I would have hated to keep it private had he not attacked Gwen. I don't think that I could've done that. There are a couple more really bad characters in the House that will have to be exposed before too long, regardless of how this all plays out.\"\n\nNews organizations had a field day with the information Ashley had given to the reporters in her office. She was soon getting requests for copies from the news organizations that were not represented when she gave her interview in her office.",
        "By early afternoon, outraged citizens and a few of Simpson's fellow House members were demanding his resignation. Simpson doggedly refused to give in. At first he claimed it was all a lie manufactured by Gwen Anderson and her company to weaken her strongest critic. By the next day, he was claiming he was misunderstood, and was a victim. By Friday morning, he reluctantly admitted he needed professional help and resigned from the House in ignominy.\n\nThe speed of his political demise stunned Washington. On Wednesday morning, Bill Simpson had been one of the most powerful men on the Hill. By noon Friday, he had resigned in shame with his legacy in tatters and his reputation destroyed.\n\nSteve's interview was replayed constantly, especially on the cable news channels. Was he right to reveal Simpson's years of debauchery and the deviant behavior that he had forced on numerous women for over twenty years? Would Steve and Gwen have revealed what a monster Simpson really was if he hadn't made the tactical mistake of accusing Gwen of moral turpitude? \n\nThe politicians that wanted to investigate Gwen became noticeably more civil in their discussions about Gwen's activity, but refused to abandon their goals. By Thursday, the House Ethics committee had released their schedule relating to their investigation. Paula and Stephanie were to answer questions about Lady in Red Productions' finances on a Wednesday, April 22nd, less than two weeks into the future! The next day, they would return if there were more questions for them, and then Ashley would appear to respond to any inquiries about Gwen's actions while in office. Friday was reserved for Gwen to appear before the committee. \n\nPolls were taken repeatedly. Without exception, Gwen was supported by at least ninety percent of those questioned. Most people felt the charges were politically motivated and lacked any credibility. Bill hardy continued to insist that Gwen and Steve were communist sympathizers dedicated to the destruction of the United States. \n\nAmber Stahl requested an interview with Steve and Gwen, which they quickly granted. Steve and Amber flew to California to tape it. Gwen was desperately trying to get ahead on her studies since she would miss the following Friday's classes to appear in Washington and then travel for more than a week. Her finals were scheduled for mid May.\n\nStanford provided a very modern set in their media building for the interview. The three friends chatted amicably while they waited for the camera and sound people to declare everything was ready. Amber took a seat across from Gwen and Steve and the live interview began.\n\n\"Thanks for agreeing to be interviewed this evening. I know that you're both very busy, especially you, Gwen. Third year med students don't have a lot of spare time, so let's get started.\n\n\"Gwen, do you feel there is any basis for the investigation into your ethics by the House committee?\"\n\n\"Thanks for having us tonight, Amber. I feel that there are reasons for the investigation, and none of them are related to any wrong doing on my part,\" responded Gwen. \"I've been extremely fortunate in the friends I have made, the success of our movies and music, and having the love and support of hard working men and women in the U.S. and around the world. \n\n\"That success appears to have created more than a little resentment in Washington. These pathetic tactics are the response of desperate politicians. They either can't, or won't do better themselves, so they're trying to diminish my reputation and the good will Steve and I have worked so hard to achieve over the years.\"\n\n\"Steve,\" continued Amber as she turned her attention to him. \"You gave an interview the evening the ethics investigation was announced. You pretty much threatened to destroy anyone that attempted to harm Gwen in any way. The very next day Congressman Simpson stated on network television that Gwen 'lacked moral fiber and was a modern day harlot'. As soon as you heard that quote, you instructed Gwen's assistant to release a packet of damning information that essentially forced Mr. Simpson to resign his office within the week.\n\n\"How do you feel about being responsible for a man losing the office he held for over thirty years? Does it bother you in any way? Any second thoughts?\"\n\n\"I wasn't responsible for him resigning his position,\" declared Steve firmly. \"That was entirely his doing. His abuse of power and lack of common decency were his downfall. We would have eventually given the information to the press, regardless of his stand on Gwen's investigation. Once we discovered what a horrible person he was, and what terrible things he had done to innocent women, there was no option. I would expect that civil and criminal suits will be filed against him before long.\" \n\n\"It's a widely held belief that nothing ever happens fast in Washington. Yet, Mr. Simpson's entire career suffered a complete and total meltdown within a few days of his less than complimentary remarks regarding Gwen. Many in Washington were stunned by the speed of his departure from Congress. You are seen as Gwen's protector and the enforcer when strong measures are needed. Are you comfortable with that role?\" questioned Amber.\n\n\"I'm comfortable doing anything and everything in my power to assist and protect Gwen. Labels mean nothing to me. Gwen's future and her reputation mean everything,\" admitted Steve. \"I'll never stand idly by when Gwen's attacked.\"\n\n\"Let me point out that Steve didn't do any of this out of malice,\" added Gwen. \"Once we determined the sort of person we were dealing with, we all agreed that he needed to be exposed. Please don't think that Steve is some monster that crushes anyone that disagrees with us. He demands respect, and he's earned it. Those that engage in reasonable dialogue have nothing to fear. Insulting and demeaning me will always draw a strong reaction from Steve. That should be obvious to everyone by now.\"\n\n\"These hearings are being held awfully soon. Usually there are months between accusations and the actual hearings. How is it that your appearance before the ethics committee has been scheduled so quickly?\"\n\n\"I think that surprised the committee,\" responded Gwen. \"We received a request to appear, and were given a three month window. We simply chose the earliest possible date. We need no time to prepare. My friends, my family, my staff, and I are eager to defend and to move past this unnecessary political maneuver. Steve and I have a wedding to attend and two concerts in Europe scheduled for the very near future, as well as a hospital ground breaking in Moscow and a hospital dedication in Kiev. In the grand scheme of things, this is simply a minor irritation. I'm not a politician. I serve at the will of my constituents. I was not elected to please and appease the Washington political powers.\"\n\n\"That brings up another subject,\" segued Amber. \"Some very important and powerful people, including President Hanson and former Secretary Rosen have pretty much staked their political fortunes on you coming out on top in this battle. Senator Chatham has stated that she feels you will not only survive this investigation, but it will actually increase your influence.\n\n\"More than a few political pundits feel that you and Steve are now the most powerful couple in the world. Do you see yourselves as world leaders, king makers, the powers behind the throne, or anything similar?\"\n\n\"Honestly, I have trouble believing my eyes and ears when I watch Steve interact with the most powerful people in the world\" admitted Gwen with obvious pride. \"He stands eye-to-eye and toe-to-toe with them, and they respect him for it. I have no real influence in international politics, but Steve sure seems to. I guess the jury is still out about Steve being a king maker.\" \n\n\"President Hanson, Senator Chatham, Secretary Rosen, as well as several other high ranking politicians have announced their total support for you in this matter. Does that support help ease your mind?\"\n\n\"It truly does, Amber. I appreciate all of the politicians that have announced their support for me during this unpleasant time. I have to be honest about this, however. The phone calls, emails, texts, and words of encouragement I constantly receive from the hard working people of this country serve as an even better cure for the pain this situation has caused Steve and me, as well as my family and friends. I was elected by the people to serve in Washington. I've done my very best. They're the ones I answer to, and from whom I seek approval.\"\n\n\"As I mentioned earlier, Senator Chatham stated an interesting theory in her speech in the senate this past week when she very strongly endorsed your moral fiber and personal and business ethics. She predicted that this obvious attempt to impede, or even reverse the growth in your popularity would only serve to increase it,\" quoted Amber. \"Do you agree, Gwen?\"\n\n\"I really have no idea about that. I guess it's a possibility. It's also possible that things could turn out much worse for me. Senator Chatham's scenario is certainly preferable, at least to me,\" smiled Gwen.\n\n\"You two have been asked to be the best man and maid of honor at the wedding of Vlad Novokov and Anna Chekov. Many observers feel that you were both asked because of your prominence in politics and entertainment. You've only been with the Russian couple a few times. Critics say that they must have better, closer friends. How do you respond to that?\"\n\n\"We've been asked by very good friends to stand up for them at their wedding. It's an honor to be asked, and we're quite happy to help them celebrate their marriage in this manner. It would be extremely rude of us to question why we've been asked,\" reasoned Gwen. \"We're very pleased that we were, and we expect to have a great time!\"\n\n\"There are those that suggest that you and Steve are too close to the Russians and that you may be Communist sympathizers. How do you respond to that?\"\n\n\"That's such a stupid thing to suggest that we won't even give it the dignity of a response,\" stated Steve calmly as he dismissed Hardy's accusations. \"Only an idiot would come up with something that foolish.\"\n\n\"Your company responded to a tornado in Tennessee with amazing speed and obvious planning. Many victims, as well as rescue personnel involved in that tragedy credit your company with saving lives and restoring hope with your immediate response. Can we expect more of this type of effort on behalf of disaster victims?\"\n\n\"My sister and her husband, Lisa and Jason Hunter, head up our response efforts and they did an outstanding job,\" beamed Gwen. \"Our company is dedicated to helping less fortunate people, so the short answer is that we will continue to do what we can to assist those in need. We feel very strongly about that.\" \n\n\"One last question,\" continued Amber. \"Several veterans' groups have requested that they be allowed to use the National Mall for a rally next Friday, the same day that you are scheduled to appear before the ethics committee. That rally is being planned to show Washington how strongly they support you in this investigation. Will you be addressing your supporters Friday, Gwen?\" \n\n\"I haven't been asked, but I always try to make time for our citizens, especially veterans. If I'm asked, and if I get out of the hearing in time, I'd be proud to speak to my friends and supporters,\" assured Gwen with another dazzling smile.\n\n\"Thank you both for appearing with me tonight. We'll continue to cover this story as well as report next week's testimony to our viewers. I have no doubt that I'll be seeking more interviews from you both in the future,\" predicted Amber. \"From Stanford University, this is Amber Stahl wishing the viewers a good night.\"\n\nAfter the interview, Steve and Gwen had dinner at a local restaurant. They were given a semi-private table, but quite a few patrons found their way over to offer their support for Gwen and to wish her well. Steve and Gwen always smiled and treated well wishers with good humor and respect. \n\nWhen they returned to the house Gwen shared with Charlotte, they found the downstairs crowded with people. \"I kind of promised some friends and staff that they could stop in and meet you,\" admitted Gwen. \"You don't know what it's like to date the sexiest man alive. Women constantly ask me about you; sometimes they ask very personal questions.\"\n\n\"You seem to forget that I'm dating the sexiest woman alive,\" chuckled Steve. \"Are Gwen's boobs natural? Does she shave down there? Does she do oral? What's her favorite position?\"\n\n\"Men ask you about those things?\" asked a stunned Gwen. \"What do you tell them?\" \n\n\"Yes to all, and doggy style,\" responded Steve with a straight face.\n\n\"You tell people that?\" demanded Gwen hotly. \"That's personal and... oh, you're kidding, aren't you?\"\n\nSteve had a huge grin across his face as he pulled Gwen close and kissed her. \"I've been asked all of those questions over the years, mostly by old men and pimply faced kids. I find it best to simply ignore them. I sure can't be thumping every guy that wonders about your breasts or little kitty. I think they're always included in every American male's favorite fantasies.\"\n\n\"So you don't think I appeal to men from other countries,\" pouted Gwen just before Steve slapped her lightly on her ass.\n\nAs soon as they entered the house, conversation stopped. Charlotte walked up to Steve and kissed him hard and then declared, \"Thanks for keeping an eye on the guy for me, Gwen. I'll take care of him the rest of the night.\"\n\nAs soon as the laughter died down, Gwen introduced Steve to a very attractive woman. \"Dr. Palmer, may I introduce you to Steve Hammer. Steve, this is the surgeon I work under most of the time. I told you about her and what an excellent surgeon she is, remember?\"\n\n\"Of course,\" acknowledged Steve. \"You made Gwen cut some ribs off an injured man the first time she was in your operating room! I heard all about you.\"\n\n\"She really did quite well for her first time in OR,\" laughed Dr. Palmer. \"I was testing her a little. I knew how famous and wealthy she was, so I thought I'd find out how dedicated and determined she was to becoming a surgeon. The patient survived and is doing very well.\n\n\"Please call me Bonnie, by the way. When I told my daughter that I'd be meeting you tonight, she insisted that I get some pictures with you. Would you mind being in a couple photos with me?\" asked the doctor.\n\n\"Sure!\" replied Steve. \"Is your daughter in high school?\"\n\n\"She's a physician,\" laughed the woman. \"She graduated from med school several years ago.\"\n\n\"You're telling me that you gave birth when you were about ten and then managed to study hard enough to become a doctor?\" teased Steve.\n\n\"Gwen, you'll be getting all good reviews from me from here on out,\" proclaimed Dr. Bonnie Palmer as she beamed at Steve. \"I see how you're able to influence world leaders. You're a smooth one!\"\n\nA short time later, Gwen interrupted Steve's conversation with Dr. Palmer to introduce him to several students. \"These are some of the kids that received full scholarships from our company so they could attend Stanford. They wanted to thank you in person, because they're polite, and not because you're so handsome.\"\n\nSteve spent time speaking with the grateful students before Gwen led him around to make certain that he met everyone. Gwen noticed that Steve began to yawn and rub his eyes around ten PM. \n\n\"Steve's operating on Eastern Time and it's after one AM on the east coast. He's beginning to tire, so we're going to bed now. Thanks, everyone for your support and for stopping in tonight.\"\n\n\"But Gwen, you're not on Eastern Time, so why are you going to bed so early?\" asked a smirking Dr. Palmer.\n\n\"As a doctor, and more importantly, as a woman, I think you can answer that question without my help,\" retorted Gwen as she tugged Steve up the stairs. \"Goodnight, everyone!\"\n\nWednesday morning found Paula and Stephanie appearing before the House Ethics Committee. They were escorted into the hearing by Ted and Steve. Paula identified herself as the COO of Lady in Red Productions when asked her position as the questioning began. \n\nThe questioning was fairly benign for the first half hour. It all changed when a Representative Daniels from Idaho gained the floor. \"Mrs. Anderson, you should know that your company's power and wealth does not frighten me in any way. Mr. Hammer's threats cause me no concern. I'm here to seek the truth. It's that simple.\n\n\"What exactly is the net worth of Lady in Red Productions?\" demanded Congressman Daniels. \n\n\"At this time, we calculate our company to have a net worth of $1.958 billion,\" replied Paula in a matter of fact tone.\n\n\"You're telling me that this company, formed less than eight years ago, is valued at just under two billion dollars? That's a mind boggling number, Mrs. Anderson. How much of your company's money is in off-shore accounts? How much is hidden to avoid taxes in the United States?\"\n\n\"We have no monies of any kind in foreign accounts,\" replied Paula. \"We've made copies of all of the company's tax payments since it was formed. You'll see that any deductions we take are valid and we pay taxes at the highest rate under the current tax structure.\"\n\n\"Do you expect us to believe that?\" countered the congressman. \"Everyone knows that wealthy companies like yours hire teams of tax lawyers and accountants to find loopholes and other means of avoiding taxes.\"\n\nPaula remained silent as the congressman ranted a bit longer. Eventually, he quieted down and glared at Paula. \"Please answer my question!\"\n\n\"No,\" responded Paula carefully.\n\n\"You're refusing to answer a question?\" thundered the almost apoplectic representative.\n\n\"I'm not refusing anything. The answer to the question you posed was 'no'. I'm here to respond to all questions, regardless of how poorly they're phrased, or rude the questioner may be,\" assured Paula. \n\n\"What was the question that you answered in the negative?\" asked the confused congressman.\n\n\"I'm afraid I've already forgotten it,\" quipped Paula as laughter broke out across the chamber. \n\n\"How much money does each of the owners get paid?\" asked the red-faced representative.\n\n\"None of them are actually paid. They have no salary and no budget. The company pays for anything they want or need.\"\n\n\"Okay,\" grinned Daniels. \"Could you give us some examples?\"\n\n\"Lady in Red Productions has been covering Gwen's medical school expenses. That amount is about $172,000 so far. The hospital in Kiev was Gwen's idea. $287 million has been spent on that project. Operating expenses are estimated to be around $40 million per year once it is up and running, which will be covered by our company. Kate has had her first year law school bills covered by the company to the tune of $37,000, so far. Charlie and Jordan's wedding cost $72,000. \n\n\"Lisa has not asked for anything major yet, although the company paid for her wedding before she was an owner. Steve hadn't spent any money either, at least not until he committed us to pay for a state of the art hospital in Moscow. We've set aside $300 million for that project.\"\n\n\"What about all of the clothes, the travel expenses, the cars, motorcycles and lavish parties and hotel accommodations?\" demanded Daniels.\n\n\"Lady in Red Productions picks up all of those expenses,\" responded Paula.\n\nBy the time the hearing stopped for lunch, it was evident to most of the questioners that Paula was not going to be rattled or trapped into saying something harmful to Gwen's cause.\n\nAfter lunch, Stephanie was grilled about her knowledge of the business and just how much it profited from Gwen being in Congress. Representative Clark from New Mexico began the questioning. \n\n\"Can you tell us how much your company's income as increased year to year since Ms. Anderson assumed office?\"",
        "\"It has gone up 24% from the same period past year, Congressman Clark,\" answered Stephanie politely. \n\n\"Would it then be safe to say this? That being elected to Congress has been a huge windfall for Ms. Anderson and her company?\" continued the congressman.\n\n\"Quite the opposite, Sir,\" responded Stephanie with a smile. \"The previous year, our income had increased 28% over the same period of time. Serving in Congress has restricted Gwen's time and has seriously limited her ability to participate in our projects.\"\n\n\"You don't feel that by being elected to Congress, Ms. Anderson has increased her visibility and fame, thus increasing her income quite drastically?\" insisted the stubborn congressman.\n\n\"The stats do not lie, Sir,\" replied Stephanie. \"Gwen is actually diminishing her opportunities by serving in government. I would note, however, that the Ford dealership your family owns in New Mexico has seen an increase in sales of over fifty percent in each of the past three years, or since you were elected. In your opinion, what conclusion should we draw from those numbers?\"\n\n\"I am not the one being investigated!\" declared Clark heatedly. \"What my family business is doing is not under scrutiny by this committee!\"\n\n\"Which would beg the question; why not?\" replied Stephanie calmly. \"You imply that if Gwen's income increases while she's in office, she must be using the position for personal gain. Yet, your family has profited a great deal in the last three years, and it would seem that at least some of the reason for its recent financial success is because of your office. I'm simply wondering why your success is acceptable, while Gwen is being investigated. It doesn't appear to be a level playing field.\"\n\n\"I've given up my position in the family company while serving in Congress! Ms. Anderson has not. That's a huge difference,\" insisted the red faced Clark.\n\n\"In the past three years, your dealership has gained contracts to supply police cars to two cities in your district. The national park service in your district suddenly switched to Ford vehicles and purchased fourteen from your family. A national package delivery company placed an order for ten vans from your dealership within a month of you sponsoring the so-called 'Right to Ship' bill in Congress.\n\n\"I would humbly suggest that a cynical person might think there's a connection between your public service and the sudden success of your family's company in securing so many government contracts,\" offered Stephanie with some emotion. \"I admit that there are some unethical individuals in Congress. We actually agree on that much. However, Gwen is NOT one of them. Can you say the same, Mr. Congressman?\"\n\n\"Mr. Chairman, I demand this witness be cited for contempt!\" blurted the red faced Clark as he swung his attention to the committee chairman.\n\n\"Mr. Clark, you're not in a position to 'demand' anything from me,\" stated the crusty committee chairman. \"I've been an attorney for forty years and I'm still active in my law firm. We're having a very good year. Does that indicate that I'm lacking in ethics? What exactly is your point?\"\n\n\"My point is that I was asking questions about Ms. Anderson's income and this young woman decided to bring my family business into her response. I am not the one being investigated here!\"\n\n\"It appears to me that her answer was appropriate for the line of questioning,\" reasoned Chairman Fowler. \"You were intent on driving home the theory that if a member of Congress increased their income after they took office, it may well be the result of unethical behavior. She merely pointed out that many of us are in that very same boat. Do you have any further questions?\" \n\n\"Yes, I do. I've poured over these financials your company supplied for us. I do not see any stocks, bonds, or any holdings in other companies mentioned. Why is that?\"\n\n\"That one's easy. Lady in Red Productions has not purchased any sort of interest in any other company, except for some hospitals that were struggling financially. We donated large sums to help them right their ships with the proviso that veterans are always treated, regardless of financial status or insurance, and we have a representative sit on their board\" stated Stephanie proudly.\n\n\"We own no stock or interest of any kind in other businesses. That allows us to concentrate on our company and not make decisions based on the needs of other businesses. We're a family owned and operated business working to help less fortunate people.\"\n\nStephanie spent the entire afternoon responding to questions about the finances and intentions of Lady in Red Productions. None of the committee members managed to find any questionable actions that they could remotely suggest were unethical. As the afternoon was winding down, Congresswoman Carlton from New Hampshire made an observation and then asked a question.\n\n\"You've answered every question, most of the time without checking your notes. You appear to be remarkably well prepared for this investigation. Have you been practicing scripts and responses for these questions? I'm curious how you avoided gaffes of any kind.\"\n\n\"That's another easy question. I've had the honor of knowing Gwen my entire life. I've had the tremendous pleasure of knowing Steve Hammer for over seven years. I've learned a few things about integrity, honesty, pride and service by being with them and watching how they conduct their lives. I didn't spin anything today, and they wouldn't have wanted me to try. Their relationship with each other and with the rest of their family and friends is based on respect, honesty, and trust. Congress could not possibly have a better representative than Gwen Anderson!\"\n\nThe news that evening had sound bites of Paula and Stephanie testifying before the committee. Most observers felt that nothing had been revealed that would harm Gwen's standing in Congress.\n\nIt was also announced Wednesday evening that Gwen would be addressing her supporters Friday afternoon at the National Mall, immediately after testifying before the Ethics Committee. It was seen by many political observers as an effort by Lady in Red Productions to appear confident that Gwen would not be censured, and certainly not be recommended for expulsion by the committee.\n\nAshley was scheduled to testify on Thursday. She knew what to expect after watching the proceedings when Paula and Stephanie testified. Thursday morning, she entered the chambers dressed in a blue power suit and accompanied by Steve in his Navy dress uniform.\n\nThe first two hours featured questions about Gwen's voting record and why she had voted the way she had. Ashley expertly responded to each question, citing Gwen's reasons for her votes. Then it became more interesting, especially for those watching on TV.\n\n\"Has Ms. Anderson ever been promised political or financial favors for voting a particular way on an issue?' asked Representative Daniels.\n\n\"Yes, quite a few times, especially during her first few weeks in office,\" answered Ashley honestly.\n\n\"Can you tell this committee some of the perks offered to Ms. Anderson?\" questioned the congressman.\n\n\"I can tell you quite a few. Lobbyists offered her new cars, free vacations, donations to her favorite charities, and even a role in a movie to vote a certain way,\" revealed Ashley. \"Some politicians offered to trade votes on bills before Congress.\"\n\n\"And did she vote for any bills favored by the lobbyists that had tried to sway her?\" was the follow-up question.\n\n\"Oh, yes!\" answered Ashley quickly. \"Of course. She had no choice. Lobbyists on both sides of every major bill tried to buy or bribe her. Regardless of how she voted, she would always be pleasing some lobbyists, and disappointing as many more.\"\n\n\"Did she ever accept any of these 'gifts' from anyone? I recall that she was photographed on a beach shortly after the Keystone Pipeline vote. Everyone in Congress had been promised island vacations for voting with the big energy companies on that issue.\" \n\n\"Yes, that offer was on the table. Gwen hasn't had time for the beach since her New Year special. She declined that offer. She spent that period of time at Stanford studying. Their offer was for two weeks in a luxury hotel in either Hawaii or Dubai,\" stated Ashley matter-of-factly.\n\n\"You're telling us that her vote wasn't influenced by the gifts and promises of energy companies?\" grilled Representative Daniels.\n\n\"That's exactly what I'm saying. Her vote cannot be bought. Gwen was also offered a new Lincoln SUV hybrid by certain environmentalists to vote against the same bill. Oddly enough, you voted against that bill, and your sister began driving a new Lincoln hybrid just two weeks later. Not bad for a single mom working as a waitress with three children in school.\"\n\nDaniels stared at Ashley for several seconds as his face became very red. Finally, and with obvious effort to contain his anger, he told the chairman that he had no further questions.\n\nCongresswoman Carlton was next to question Ashley. \"Has Ms. Anderson determined if she will be running for re-election?\"\n\n\"I can tell you that she will not run for re-election,\" asserted Ashley. \"However, she will serve if her constituents honor her by re-electing her. She feels that it's her civic duty.\"\n\n\"Do you think she would stand a chance if this committee censured her?\" asked the representative from New Hampshire.\n\n\"My personal feeling is that the any action, pro or con, by this committee will garner Gwen even more votes. I've been reading the emails, letters, texts, and social media posts from folks back home. They're quite upset that Congress has singled out their representative, possibly the single brightest light in this institution, to harass and criticize. She's considered above reproach in her district, and across much of this great country.\n\n\"This feeble attempt to ruin her reputation will backfire across the entire House. Those members that have publicly opposed Gwen to the point of insulting and accusing her of improprieties will find themselves in difficult campaigns next election. These hearings have dramatically exposed the vast differences between Gwen and most of the other members of Congress. Voters across the country will realize that they deserve better, and they'll demand better. Dozens of representatives previously considered untouchable will be cast out.\" \n\n\"Will Lady in Red Productions throw a lot of money into unseating Congress members that appear to be less than supportive of Ms. Anderson,\" questioned an uneasy Representative Carlton.\n\n\"Obviously, I don't make those decisions, but I doubt it very much. Our company does not donate to any political parties or candidates. We don't campaign for or against candidates. Gwen's influence will be her constant and continuous efforts to serve with honor and to always vote for what she believes is best for this great nation. Her unselfish service and dedication to those less fortunate will set a new standard in Congress. Voters will begin rejecting self-serving, unethical politicians.\"\n\n\"I guess we know who you'll be voting for next election,\" chuckled Carlton before becoming more serious. \"It's well known that Ms. Anderson and Mr. Hammer are romantically involved, are business partners, and to be blunt, totally in love with each other. To your knowledge, does Mr. Hammer influence Ms. Anderson's vote?\"\n\n\"Absolutely!\" responded Ashley without hesitation. \"They have constant discussions about the bills that are coming up for a vote. Gwen always considers Steve's thoughts. She promised the voters that she would and she's kept her word.\"\n\n\"So Ms. Anderson always votes the way Mr. Hammer suggests?\" reasoned Congresswoman Carlton.\n\n\"Hardly!\" laughed Aashley. \"They've disagreed on at least three votes so far, that I'm aware of. The first time Gwen voted differently than Steve felt that she should, she was very concerned that he'd be angry with her. He assured her that he was proud of her for voting her convictions and spent the weekend wining and dining her to prove he wasn't upset. \n\n\"Since that vote, Gwen still listens to Steve's thoughts on any given issue, but she never worries about Steve being upset with her position, even if it differs from his,\" assured Ashley. \"You'd have to watch and listen to them to understand the level of trust and respect that have for each other. They don't always agree, but they always respect each other's opinion. It's amazing to see.\" \n\n\"Every witness we've had this week, including you, Ms. Summers, has exhibited an extremely detailed knowledge of personal and financial matters of the members of this committee. How have you gained this information, and do you plan on holding the committee hostage to ensure Ms. Anderson avoids punitive action?\"\n\n\"Absolutely not,\" answered Ashley calmly. \"We are simply pointing out the hypocrisy of investigating Gwen when many, if not most, members of Congress are guilty of far, far worse actions. Gwen has the greatest respect for the people that elected her and her only goal in Congress is to do her very best for her country. \"\n\nThe committee questioned Ashley the entire day, but reporters covering the event felt that the tone of the questions had changed noticeably by the afternoon. Members chose their words more carefully and avoided any personal attacks on Gwen. It had become evident that Lady in Red Productions had done its homework and knew a great deal about those members asking the questions. Near the end of the day, Chairman Fowler posed a question.\n\n\"Can you tell me Miss Summers, just how you expected to silence me if my line of questioning became insulting, or in some way damaging to Ms. Anderson? What would you have thrown at me?\"\n\n\"We have nothing we could use against you, Sir. You've served honorably and with distinction over your long career. You're actually one of Gwen's role models. Feel free to say what you will, everyone in our company has nothing but respect for you, and your record,\" responded Ashley with a big smile.\n\n\"My, that was... unexpected,\" admitted the surprisingly emotional Congressman. \"I thank you for your kind words. That anyone would consider an old man like me a role model is difficult to understand. I believe that wraps up questioning for today. Thank you, Ms. Summers.\"\n\nVincent Rosen had been campaigning in Philadelphia, when his wife excitedly grabbed his arm as soon he climbed on their tour bus. He could easily see that she had some kind of news.\n\n\"I just took a call from Gwen Anderson! She told me that if we were in Washington tomorrow, she'd thank you publicly for supporting her during her investigation.\"\n\n\"That would mean that I'd have to stop campaigning and get back to DC right away,\" worried Vincent Rosen. \"I'm starting to gain some headway here and I hate to lose whatever momentum I've managed to build up.\"\n\n\"Vincent, listen to me. You can talk to groups of ten, twenty, or a hundred people for a hundred years and still not have the impact of appearing on stage with Gwen Anderson and Steve Hammer! You supported her when she was first attacked by those stupid politicians. She's offering to pay off her debt tomorrow. I've read on the internet that they're anticipating between fifty and a hundred thousand people in Washington! If those people see that Gwen Anderson and Steve Hammer like you, your stock will shoot way up.\n\n\"The polls show that you're tied with two other candidates, and that's only because you jumped 5% in the polls when you came out supporting Gwen, while the others didn't. I've already told your secretary to change your schedule. We're heading for D.C. as soon as possible. This is going to be big tomorrow and we want you right in the middle of it!\"\n\nPaula marveled at her daughter as she and Ted followed Gwen and Steve into the large chamber. As Gwen approached her seat, she stopped and stepped close to Steve. She smiled and placed one hand on his chest as she spoke softly into his ear. Steve looked around the room briefly and returned his attention to Gwen. He grinned slightly as he responded quietly, which caused Gwen's smile to become even brighter.\n\nPaula had difficulty accepting the scene before her. Her daughter was testifying before a hearing to determine if she had behaved unethically while serving in Congress! Showing no apparent concern for her situation, she smiled and nodded to numerous people in the room. Each person lucky enough to receive a nod from Gwen broke into a huge grin. Steve was once again in his Navy dress uniform, while Gwen wore a red suit tailored to show off her amazing figure and her strong, shapely lower legs. The couple totally dominated the room as they moved to their seats. \n\nPaula and Ted sat directly behind the pair while Stephanie and Ashley sat to either side of Ted and Paula. Gwen was soon sworn in and the questioning began. Chairman Fowler welcomed Gwen, thanked her for her cooperation, and then asked Representative Daniels if he had questions for Gwen.\n\n\"I see that you're once again wearing red, Ms. Anderson. It would appear that you're promoting your company even as you appear at a hearing to determine if your behavior while in Congress has been ethical,\" began Daniels.\n\nGwen never indicated that she even heard Daniel's comment. She was looking over the members of the committee as she awaited an actual question.\n\n\"Don't you think most people would see your red outfit as an obvious effort to maintain and promote your image as 'The Lady in Red'? Do you feel that it's ethical behavior?\"\n\n\"Sir, to millions of people, I am 'The Lady in Red'. That's become my trademark. I've been wearing red long before I was elected to Congress, and shall continue to do so long after I leave these hallowed halls. But thank you for noticing,\" added Gwen with another smile.\n\n\"So you see nothing wrong with wearing red to these hearings, or whenever you're engaged in Congressional activities?\" persisted Daniels.\n\n\"Truthfully, questions about the color of my wardrobe seem incredibly senseless to me. I was elected to serve my constituents, and I have done that to the very best of my ability. The gentleman to my left serves in the U.S. Navy. He has shed blood to protect Americans and to serve his country. There are thousands more that have done the same outside this building right now. Wearing whatever color I choose is a right I enjoy because of the efforts and sacrifices of so many veterans and active military. I will not apologize to anyone for exercising that freedom.\"\n\n\"You've scheduled a speech to these supporters that have traveled to Washington. Isn't that taking advantage of the situation? Isn't that using your fame to garner more sales of your clothing line, selling more of your music, and increasing attendance at your movies?\" suggested Daniels.\n\n\"You and I see things differently. You look at everything as a means to personal gain. I look at it as thanking good people that have made a very real effort to support me in a difficult time. My movies, music, clothing line, and other endeavors are successful because we work to deliver a good product at a fair price. Is that unethical in your world? It certainly isn't in mine. \n\n\"You've made some headlines lately with a few of your speeches, Mr. Daniels. Weren't they given to promote your political future?\" asked Gwen. \"Yet your popularity pales in comparison with my boyfriend's. He doesn't give speeches. He doesn't campaign. When he makes a promise, it's a lead pipe cinch that he'll keep it. Just ask the parents of those two girls that were left behind in Colombia. Honesty, integrity, and strength with compassion have made him America's hero.\" \n\n\"I fail to see any connection between Mr. Hammer's popularity and your situation,\" replied Congressman Daniels. \"In fact, I might question the alleged popularity of you both. Did Lady in Red Productions pay your so-called supporters to travel to Washington? Did you cover travel expenses or promise perks of some kind?\"",
        "\"You've just insulted me, which I expected. You're floundering in the polls in your home district and you're trying to get some publicity. You're a desperate politician, and there are few things on the planet more pathetic!\" snapped Gwen with passion.\n\n\"But you've also insulted the thousands of veterans and hard working Americans that traveled here to exercise the very rights they've fought so hard for, and risked so much to protect and preserve. You'll lose your next election because you have no grasp of what Americans hold dear. It isn't money! It's freedom, honor, honesty, and fairness.\"\n\n\"I certainly had no intention of insulting our fine veterans,\" backpedaled the flustered congressman. \"Perhaps I phrased my question wrong. Why don't you tell us why people are flocking to Washington today to rally in your support?\"\n\n\"That seems pretty obvious,\" responded Gwen as she once again smiled. \"They care about their country. If I can be railroaded by some trumped up charges, what can happen to people with fewer resources than I have? These wonderful people are exercising their right to assembly, to peacefully express their opinions, as well as their displeasure. That's a right many of them fought to defend. I've found that lessons learned in military service usually carry over into civilian life, making veterans more willing to participate in protecting and maintaining freedoms and rights.\" \n\nRepresentative Carlton was the next to pose questions. \"Do you think it's appropriate and ethical to appear topless in movies, and even on TV on the Academy Awards show? Isn't it possible that you're sending the wrong message to today's youth? People are now able to see their congresswoman topless in movies.\"\n\n\"I was an actress before I was elected to Congress. Many of my constituents had seen my movies when they voted for me. My friend Billy joked that it would help me gain votes. Personally, I think this country would be better served if all of our government representatives revealed more. That would mostly mean the deals, bribes, threats, and motives that drive them to vote the way they do.\n\n\"I have some very moral, honest friends and family. They would tell me if I were behaving poorly. This guy sitting next to me is a straight arrow if there ever was one. I'd never do something that I thought would cause him embarrassment, and he hasn't complained so far. I think I'm okay with it all. I've come to realize that a girl could do worse than use me for a role model,\" finished Gwen.\n\nRepresentative Carlton then asked questions about the hospitals that Lady in Red funded and the relief efforts in Tennessee. Her final question pertained to Gwen's future goals.\n\n\"I hope to get my M.D. degree in just over a year and become a very competent pediatric surgeon. I hope that Steve asks me to marry him once I'm out of med school, and we have several children together. It would be great if we could still make some movies and perform on TV now and then,\" admitted Gwen. \"They're the goals I've set for myself.\"\n\nCarlton felt compelled to follow with one more question. \"You have no political aspirations? You don't expect to run for Congress again, or even the Senate?\"\n\n\"I dislike being labeled a politician and I have no plans to run for any office. If I am voted in for another term, I will serve. I would see that as an approval of my record during my first term. If I'm not returned to Congress, I'll still have many things to keep me busy,\" understated Gwen.\n\nRepresentative Clark was the next to question Gwen. \"You're not married, according to your biography, yet you speak publicly about sleeping with your boyfriend. Don't you think that this alone would cause others to question your ethics?\"\n\n\"Are you suggesting that if a twenty five year old woman has a monogamous sexual relationship with a man, she is immoral or unethical? There are many members of Congress that have had sex with people to whom they are not married. You're well aware of that, I'm sure. Tell me this, Congressman Clark, would you advocate banning from public service anyone that has engaged in sexual activities with a person, or persons, other than their spouse? I'm very interested in hearing your response.\"\n\n\"I'm aware of the strategy your entire team has of trying to shift the focus of this hearing to others. I am not here to respond to questions posed by you or anyone else. You admit to having sex with the man next to you and you are not married. Most god-fearing Americans consider you a loose woman, a tramp, if you will.\"\n\nGwen smiled as she instinctively placed a calming hand on Steve as he glared at Congressman Clark. \"Mr. Clark, you are an ass. Your remark is not based on any sort of poll, study, or even logical thought. You've just made a very serious mistake when you attacked me personally like that. This guy sitting next to me will make certain that you're back to selling used cars when your term is up. Government has no room for quacks living on the fringe that think God loves them more than everyone else, or that He speaks directly to them. \n\n\"My love affair with Steve Hammer is public record. I assure you that being in love with, and loved by Steve does not make me a bad person. It does make me very fortunate. It certainly hasn't harmed my popularity. I can understand how you might underestimate me, but you should know enough about Steve Hammer to realize that he represents what's good in America. He's a strong, macho guy that treats ladies and children gently and with respect. He doesn't posture and make nasty, snide remarks in an attempt to improve his popularity or notoriety. Underestimating Steve Hammer is pure folly!\n\n\"I was asked a few days ago if Steve and I were king-makers. I've been thinking about that question. I'm not certain if Steve is a king-maker or not, but he sure as heck can, and will, end careers of those that fall in his disfavor. This is not a threat. I am simply advising you to not waste a lot of time or money in trying to get re-elected. It won't be happening.\"\n\nRepresentative Clark was stunned by Gwen's response. She had just dismissed his political future. He was a rising star in his party. He was planning on running for governor after a few more terms in Congress. Now he was being told that he was politically dead!\n\n\"That's exactly why this hearing is necessary! You're trying to threaten and bully me into silence. That's not ethical. You think that having all of that money and rubbing elbows with other rich people makes you special. It doesn't! I'm on the side of God, and I will prevail.\"\n\n\"Wealth has nothing to do with this,\" assured Gwen as she sadly shook her head. \"It's your foolish pride, as well as your strange belief that God favors you over others that will be your downfall. We're all born equal and make our own way. You're simply not suited for public service. That much is obvious.\"\n\n\"Mr. Chairman! Can she speak to me like that? I'm not the one being investigated. Do I have to sit here and listen to these threats and slanderous remarks?\" demanded Clark of Chairman Fowler.\n\n\"No, of course not,\" answered the seasoned chairman with a straight face. \"You're free to leave at any time.\"\n\nClark's mouth dropped open at Chairman Fowler's remarks. His face flushed a brilliant red just before he gathered himself together, stood and stomped angrily from the chambers.\n\n\"I would guess that Mr. Clark is finished with his questions. We'll adjourn until one PM,\" declared the crusty chairman as he banged his gavel.\n\nReporters were gathered on the steps of the Capitol waiting for Gwen to leave for lunch. To avoid the hassle, she simply made her way to her office with Steve, while Paula, Ted, Stephanie, and Ashley followed right behind them.\n\n\"I'm hearing from people stationed out by the mall,\" reported Stephanie as the group ate sandwiches and drank juice and soda for lunch. \"We had those Jumbotrons set up by the time Gwen was sworn in this morning. Crews worked most of the night on them once we received permission to install them. \n\n\"The crowd is huge and it's still growing. I'm getting reports of almost a hundred thousand people milling around while watching the listening to the hearing on the huge screens. Every time Gwen finishes speaking, cheers go up. Clark was booed pretty badly after his outburst.\n\n\"President Hanson and his wife will be at the mall when you speak, Gwen. Secretary and Mrs. Rosen have advised us that they'll arrive shortly after noon and will be prepared to be thanked in a very public manner by you. Steve has Senator Chatham lined up to appear as well.\"\n\n\"Steve and I discussed this at some length, in case any of you are wondering why I asked Rosen and his wife to accept my thanks today. This goes no further,\" cautioned Gwen. \"We both feel he's the best candidate running for the White House. He's been having some difficulty gaining traction in the polls. He's yet to win a primary. We've decided to give him a boost, at least if appearing with Steve and me is as beneficial as we've been told.\"\n\n\"We've come to realize how much of an advantage it is to be on good terms with the President of the United States,\" added Steve with a wry grin. \"I could've been drummed out of the service for my outburst the night I was interviewed at the airport about Gwen's investigation. President Hanson intervened. We'll be involved in a lot of international efforts and having a friend in the White House could help smooth the way.\"\n\n\"So you have decided to become king-makers after all?\" marveled Paula. \"Your grandfather, William, insists that you two are the most powerful couple on the planet. It's difficult for me to accept, simply because I'm so close to you.\"\n\n\"Don't get too carried away, Mom,\" warned Gwen. \"We're just going to be friendly to him and see if it helps him in the polls. We can't commit to supporting a candidate at this point. If the guy we don't support gets elected, it could make our efforts more difficult, so we're playing it close to the vest for now.\"\n\n\"If the committee votes to censure you, Gwen, or possibly even expel you, your support might become a moot point,\" observed Ashley. \"I don't think it's very likely, but it ain't over until it's over.\"\n\n\"Gwen's in the catbird seat here,\" insisted Steve. \"They never should've had this hearing. They allowed envy and desire to overcome common sense. If they'd investigated any of the ridiculous accusations before deciding a hearing was needed, it would have all blown over. But this will all serve to strengthen Gwen's position in Congress. Look what happened to Simpson when he publicly insulted her. Clark will never get re-elected. I promise you that.\n\n\"Gwen will be seen as a truly beautiful, kind, thoughtful Congresswoman, that happens to have a miserable prick of a hatchet man by her side,\" predicted Steve. \"That'll be obvious to all by the time I finish burying Clark. Politicians' new found love for Gwen will be tempered with a dose of fear. That's a very effective combination.\" \n\n\"I'll be going on stage with Steve to thank everyone at the rally,\" continued Gwen. \"Then I'll ask Mom and Dad to come up and be recognized, followed by Ashley and Stephanie. People want to see more of you after your appearances at the hearings. Then I'll introduce and thank President and Mrs. Hanson, Senator Chatham and Secretary and Mrs. Rosen. We'll be very warm to the Hansons and Chatham. We haven't quite decided how friendly we want to be to the Rosens. We're testing the waters here to see if our friendship over this matter will make any difference in the polls. There are several primaries next week in the Northeast. If Rosen finishes better than a close third, we'll feel like we had some effect.\"\n\n\"As you know, Charlie and Jordan have the band ready to set up and play,\" continued Steve. \"They'll be ready to go within half an hour of when Gwen announces that we'd like to thank our supporters with an impromptu concert. We expect to come out way ahead after this stupid investigation concludes. A good concert with a big crowd will be a little display of Gwen's popularity and influence. This town is built on power, and Gwen's about to take her position near the top of that power structure.\"\n\n\"This sounds like a lot more than a couple of kids just trying to help people in need,\" observed Ted. \"Do you have long range plans you're not telling us?\"\n\n\"Right now, my plan is to solidify Gwen's position so she never has to go through this kind of crap again,\" stated Steve firmly. \"We've come to realize that no good deed goes unpunished, so we're taking steps to protect and strengthen our position. We're not trying to control people so much as to prevent them from hindering us in future efforts. They'll discover that when they leave us alone, we leave them alone. We've been a bit na\u00efve about politics and government, but we're fast learners.\" \n\n\"I'm just glad that you're on Gwen's side,\" stated Paula as she saw the determination in Steve's face. \"I 'm sure that Representative Clark will learn that you're much better to have as a friend than as an enemy.\"\n\nThe afternoon session produced no surprises. Gwen easily answered all questions without any hint of apology or wrong doing. At three thirty, none of the committee members had any more questions to pose.\n\n\"Is there a motion to recommend punitive action against Ms. Anderson?\" asked Chairman Fowler of the committee members as he surveyed the room while waiting to see if any of them wanted to pursue the matter.\n\n\"Ms. Anderson, I feel compelled to apologize for putting you through this charade,\" began Chairman Fowler when no member presented a motion. \"This hearing was unnecessary and ill advised. A few weeks ago, there were powerful members in Congress that demanded that we have a hearing on your conduct and ethics. The situation is far different today. Most of those critics have gone silent. One has resigned in shame. \n\n\"Lieutenant Hammer's willingness to challenge Congress in this matter was unexpected, but very sound strategy. This institution has at times, become self serving and quite hypocritical. Mr. Hammer made it clear that we'd be exposed for our faults and weaknesses if we insisted on placing any wrong-doing at your door. I think you both have done this nation a great service. It's my hope that we'll begin holding ourselves to a higher standard, and that the voters will demand it. You have thousands of people waiting to hear from you, so we won't hold you any longer. This meeting is adjourned!\"\n\nGwen stood and hugged Steve, her parents, Stephanie, and Ashley. Then she made her way to Chairman Fowler's seat. He stood as she approached and was both surprised and pleased when she hugged him and spoke to him briefly. Then she kissed the older man's cheek and returned to join Steve and the others.\n\nTravel was difficult, because of the huge influx of people in Washington. It took the group half an hour to reach the stage, but finally Gwen tugged Steve's hand as she led him up the steps while the crowd roared its approval. As was her style, Gwen spoke very briefly to the thousands that had been waiting for her.\n\n\"Thank you so much for showing up today! You have no idea how much your support means to me. I'm humbled, yet very proud. I have to thank the man standing here with me,\" was all she managed before the cheering and yelling drowned her voice out. \n\nSteve smiled and waved to the huge crowd that surrounded the stage as he held Gwen's hand. When the noise abated, Gwen introduced her parents as they made their way onto the stage. They had huge smiles and waved to the crowd. \n\nTed Anderson was extremely nervous as he looked over the ocean of faces cheering for him. He marveled at how comfortable Gwen was in front of the thousands of fans and supporters. He clutched Paula's hand and followed her lead by waving steadily.\n\nOnce again, Gwen waited until she could be heard. When Stephanie and Ashley were introduced, wolf whistles were heard along with the applause and cheers. Once again, Gwen signaled for the crowd to quiet down.\n\n\"Ladies and Gentlemen, there are a few people that came out in my support early on, and unequivocally. I want to thank them right now. Please welcome President and Mrs. Hanson!\"\n\nThe crowd gave the president a very warm welcome, even if it lacked the enthusiasm shown for Gwen, Steve, and family. President Hanson was greeted by Gwen with a long hug and a quick kiss on the cheek. At the same time, Mrs. Hanson had wrapped her arms around Steve as he stood at attention, and hugged him hard before pecking his cheek and then waving to the cheering crowd. She them moved to Gwen and the two women embraced as Steve and President Hanson shook hands, once the President allowed Steve to be 'at ease'.\n\nGwen allowed the crowd to carry on as long as its momentum lasted. Once the din began to let up, she announced, \"Please welcome Senator Chatham!\" The welcome for Steve's boss was surprisingly loud and long. She hugged Gwen and when she went to embrace Steve, he wrapped his arms around her and swung her around, much to the enjoyment of the crowd. When Steve set her back down, she was flushed, but had a huge smile on her face as she waved to the crowd.\n\nGwen once again addressed her supporters. \"All of the presidential candidates had asked for our support when they declared their candidacy. Then all but one went MIA when the accusations against me hit the fan. Just one announced presidential candidate offered me his unconditional support when this ethics debacle first began. I want to publicly thank Secretary Vincent Rosen and his wife, Cynthia, for their support during the past few weeks. Please give them a warm welcome!\" \n\nCynthia Rosen knew that her husband's campaign had been floundering. He had been considered the front runner for his party's nomination when he declared, but somehow failed to generate the support that he would need to gain the nomination and win the general election. When's Gwen's invitation to appear at the rally came, she had jumped at the opportunity.\n\nAs she stepped onto the stage with her husband, Cynthia Rosen, looked over the sea of faces. She knew in her heart that this was exactly what her husband needed to finally get his campaign off the ground. There were only a few months left before the convention and no clear front runner had been established.\n\nShe was certain that being seen by the public as friends of Gwen Anderson and Steve Hammer would be a huge boost! There was no one more loved and admired woman in Washington, or across the country, than Gwen Anderson. Steve Hammer had once again demonstrated how firm and determined he was and how much he would protect those he loved. His heroic exploits while still in high school and again as a US Navy SEAL marked him as a man worthy of respect, a man of action and honor.\n\nThe huge turnout in support of Gwen was proof of how highly she was regarded. Gwen and Steve formed a couple with influence like no other Cynthia Rosen had ever seen. She was delighted that Gwen had asked her husband to attend the rally. Gwen was sending a message to the voters, albeit a silent one. She and Steve liked Vincent Rosen, and that said a lot!\n\nAs Vincent Rosen strode across the stage to greet Gwen, his wife watched closely to see if her husband would get just a handshake, or a hug. When Gwen embraced Vincent Rosen warmly and then gave him a quick peck on the cheek, a delighted Cynthia Rosen wrapped her arms around Steve and hugged him tightly. \n\n\"Thanks so much for this opportunity,\" whispered an ecstatic Cynthia Rosen into Steve's ear. \"We won't forget this, believe me!\"\n\nGwen released Vincent and he stepped next to Steve to shake his hand heartily. Steve clapped the man on the shoulder as they shook while Gwen turned to embrace Mrs. Rosen.\n\n\"Vincent and I understand what you're doing here tonight and we both thank you for thinking of us. We owe you, big time!\" managed Cynthia Rosen as Gwen smiled and nodded knowingly. ",
        "Gwen took a hand of each and led them to the front of the stage. Cynthia Rosen quickly grabbed Steve's hand and tugged him along.\n\n\"The Rosens supported us when no other presidential candidates would. We appreciate their courage, their support, and their friendship,\" announced Gwen to the cheering crowd. \"I've invited them take seats next to my parents tonight. \n\n\"You folks came to Washington to help us, Steve and me, in a difficult time. We all know there were no pay-offs, no promises, nor any requests from us to come here today. We do have a request now, however. Would you care to be our guests for an impromptu concert; right here and right now?\"\n\nOnce again, Gwen had to wait several minutes for the din to abate. \"Then it's settled. We have trucks with food and beverages parked on several side streets. Food and drink are on us! My very good friends, who happen to be two of the finest people I have ever known, have agreed to join us tonight. Please welcome Jordan and Charlie Burns, and our band, as we set up for the festivities!\" \n\nAs the band began setting up, Cynthia Rosen spoke to Paula. \"I really enjoyed your appearance before the committee. You were very well prepared and handled it perfectly. You looked like you've been doing it all of your life. These young ladies next to you were really sharp. By the time they were done, most of the members of the committee were afraid to ask any probing questions for fear that they'd be exposed as hypocrites.\"\n\nThank you,\" replied Paula as she leaned close to the other woman be heard above the noise of the huge gathering. \"I thought I was nervous then, but look at all of the people out there. It looks like the crowd is getting larger by the minute. I've never been on stage when the kids performed and I'm extremely nervous, excited, and proud!\" \n\nGwen and Steve quickly climbed into a nearby van to change clothes. At five fifteen, Gwen and Jordan stepped to the front of the stage. \"Please everyone, stand and remove your hats,\" requested Jordan. \"We're going to start the party with our National Anthem. This is the greatest country in the world and you veterans the best of the best. We're super proud of you, of Gwen, and of being Americans!\"\n\nGwen and Jordan allowed the crowd to prepare and then joined in singing The Star Spangled Banner a cappella. The Jumbotrons had split screens showing various flags flying over the Capitol and the two beautiful women singing in perfect harmony. The applause was long and loud as Jordan and Gwen hurried to their positions. \n\nThe driving drum beat signaled the beginning of the concert as Gwen strutted front and center for 'We Will Rock You'. When she reached the lyrics 'You got mud on yo' face, you big disgrace, kickin' your can all over the place', her emotion poured through her singing. The audience had little doubt she was thinking of Representative Simpson, who had resigned in disgrace after attacking Gwen in the media.\n\nThe band moved right into 'We Are the Champions' as they usually did. Gwen once again made the lyrics personal. 'I've paid my dues, time after time, I've done my sentence, but committed no crime' had new meaning to Gwen and the crowd picked up on it immediately. \n\nCharlie gave Steve and Jordan a look that asked if they heard what he was hearing. They both nodded in understanding. Gwen was letting out her repressed emotions now that the hearing had ended. She was singing louder, stronger, and with more feeling that her friends had ever heard from her.\n\n'I've taken my bows\n\nAnd my curtain calls\n\nYou brought me fame and fortune\n\nAnd everything that goes with it\n\nI thank you all\n\nBut it's been no bed of roses\n\nNo pleasure cruise\n\nI consider it a challenge before\n\nThe whole human race\n\nAnd I ain't gonna lose!'\n\nThe audience had quickly sensed Gwen's intensity and responded with loud cheers. They joined in singing the 'We Are the Champions' part of the refrain as Gwen pranced around the stage waving her arms as she sang, urging the crowd to join her. It was clear that she included all of them as the champions of the day.\n\nWhen the song ended, the crowd erupted into the longest, loudest cheering and yelling that Charlie, Jordan, and Steve had ever experienced. They refrained from going to the next number until they felt the crowd was satisfied and finally began to settle down. Gwen bowed several times as she flashed her megawatt smile.\n\nAs they prepared to play their next selection, Charlie spoke to Jordan and Steve. \"We've got to pick up our game here or Gwen will bury us. She's on fire today!\" \n\nThe band broke into 'Rock This Town', since it had been so popular on the Oscars. Jordan was somewhat prepared for Gwen's enthusiasm and stayed right with her as they sang the first half of the song while Charlie and Steve played instruments. Steve did get to sing the part about 'look at me again and there's a-gonna be a fight'. Before the audience had stopped cheering, Charlie and Steve moved to the front and started in playing 'Well Dressed Man' as Gwen and Jordan sang it much as they had on the Oscars, but fully clothed, of course.\n\nAlways anxious to try different songs, Gwen sang \"Magic Man\" by Heart. The song included some great guitar work. Steve and Charlie played brilliantly as Jordan backed Gwen perfectly. The crowd loved it when Gwen grabbed her mother's hand and pulled her to the front of the stage as she sang 'Try, try, try to understand, he's a magic man, mama, he's a magic man!' as Paula smiled and nodded her head in understanding.\n\nGwen backed Jordan up on her songs, as Jordan did for Gwen. They had come to understand each other and to harmonize perfectly. Near the end of the show, they joined to sing 'The Look of Love'. The girls nailed it and the crowd gave an extended round of applause and cheering. It seemed that anything that Gwen and Jordan sang together was always enjoyed by their fans and this was one of the best efforts they had ever collaborated on.\n\nThe tone was set for the rest of the show. It was after ten by the time the final encore was finished. The Park Service estimated that there was over a million people spread around the mall and anywhere within hearing of the concert.\n\nGwen, Jordan, Steve, and Charlie were soaked with sweat by the time they finished. They were exhausted as they gathered their instruments and belongings to send to the hotel. \n\nVincent Rosen spoke to Ted and Paula as the friends were picking up. \"I've never seen a concert with that much energy and great music! It was incredible. Thanks to all of you for inviting us, and for allowing us to remain on stage. I don't think this city will ever be the same. Gwen owns this town now. Her enemies underestimated the power and influence she and Steve carry. By trying to bring her down, they've given her the perfect platform to increase her sphere. I'm just glad she isn't 35 yet, so she can't be elected president!\"\n\n\"We really appreciate the praise, Secretary Rosen,\" replied Ted with a proud smile. \"Paula and I have never been on stage for one of the kids' performances before and I can tell you that we're both amazed. They were hundreds of thousands of people watching and listening and it never even fazed them. They were fantastic, in my humble, unbiased opinion.\"\n\n\"We're going to have a small reception for friends at our hotel in half an hour,\" announced Steve as he approached the Rosens as they chatted with Ted and Paula. \"We'd be honored if you could find the time to stop in.\"\n\nCynthia Rosen was elated to receive an invitation to an affair for the inner circle of Steve and Gwen's friends. \"Vincent and I would be delighted to attend! We'll freshen up back home, and then stop in within the hour.\" \n\nA short while later, the group was gathered in a private dining room in their hotel. Steve immediately noticed that Ashley was escorted by Richard Drake. He had gained weight and looked considerably better than when Steve first met him. Steve made a point of intercepting the couple as they walked toward the buffet.\n\n\"Mr. Drake? I see that you're escorting Ashley this evening. I think it's important that you understand what is expected of a man that dates Ashley.\"\n\nAshley's face broke into a huge smile as she realized what Steve was about to do. Gwen and Paula had overheard Steve and turned their attention to Ashley and her friend as Steve spoke to them. \n\n\"You will not use alcohol to excess. You will not use any illegal drugs, or tobacco. You'll treat her with the respect that she deserves. You will do everything you can to keep her safe. If this seems too demanding, the door is over there and I suggest that you head for it immediately. If you accept these stipulations, you're welcome to stay.\"\n\n\"Mr. Hammer, I have the highest regard and respect for Ashley. I absolutely agree to your conditions without hesitation. I thank you for thinking enough of me to have this 'talk'. I know what an honor it has become,\" responded Richard Drake as he extended his hand to Steve.\n\nBefore he could take the man's hand, Ashley flung herself into Steve's arms and hugged him tightly. \"Oh, Steve! Thanks for caring so much about me. You're the best guy I've ever met.\"\n\nRichard Drake looked on calmly as Ashley kissed Steve with some passion before releasing him and explaining. \"I told Rich that he might be getting the 'talk' and what it meant. He knows how much I love you and understands how special it is, and he's fine with it!\" \n\n\"Just call me Steve. If you're with Ashley, you're a friend. But understand that I wasn't joking about treating her right. She's loved very much by Gwen and me and we'd be quite upset if anything happened to her. You don't want to upset Gwen if you can help it.\"\n\n\"I understand completely,\" assured Richard Drake. \"Please call me Rich. I know it's unwise to upset Ms. Anderson, but for some reason, I'm more concerned about finding myself on your bad side.\"\n\n\"Are you kidding?\" asked Gwen as she joined the conversation. \"Steve's just a big teddy bear. He's gentle and considerate all the time.\"\n\n\"I don't think former Congressman Simpson would agree with that,\" retorted Ashley. \"He had no idea what he was walking into when he attacked Gwen. Steve's extremely protective of his friends, family, and almost anyone needing help. It took Steve about a second to pull the plug on Simpson's career. It's not looking too promising right now for that dumb-ass, Clark, either.\"\n\nAlthough, Gwen and Steve had invited very few people, more than a few Washington insiders appeared at the entrance to the room, looking to speak to Steve and Gwen. It became quite apparent to Steve that they wanted to curry Gwen's favor. He contained his mirth as he watched some of the more powerful people in Washington congratulate Gwen and insist that they had supported her all along.\n\nFor her part, Gwen was polite and smiled a lot. She thanked everyone for supporting her, but declined to discuss any pending legislation or issues.\n\n\"I've had quite enough of politics this week,\" stated Gwen firmly. \"Steve and I are trying to relax a little before we leave for Russia Monday morning. We have a very busy couple of weeks scheduled and when I return, I'll have finals. I'll look into these issues as they are voted on.\"\n\nAs Steve watched and listened to Gwen over the course of the evening, he realized that she had subtlety changed since the ethics scandal had begun. She was firmer, less conciliatory, and even blunt at times. She was maturing and evolving and it was exciting for him to see.\n\nThey spent a fair amount of time with Vincent and Cynthia Rosen. They were photographed together and even questioned by the few reporters allowed to attend.\n\n\"Does this mean that you're supporting Vincent Rosen for president?\" asked a lady reporter to Gwen.\n\n\"It means that I very much appreciate their public support of me during this difficult time. Steve and I have not endorsed any candidate. We do consider Vincent and Cynthia to be friends. We're quite content leaving things at that, at least for now,\" responded Gwen.\n\nSteve was surprised to see Cheryl Baxter at the event. She was wearing a very smart looking dress and carrying an expensive camera. \n\n\"It's your company's camera, and dress, for that matter,\" revealed Cheryl with a big smile. \"You look surprised to see me. Gwen's asked me to come to Washington and then travel to Europe with your group. She loaned me this camera to use because my teachers insisted that I bring back lots of video of the exciting things you do all of the time. I'm making a video diary and it started this morning with Gwen's testimony.\n\n\"I've got to tell you that everyone back home was pissed that they'd try to accuse Gwen of wrong doing. They were also proud as heck at how you came out in her support that night at the airport and how that scum Simpson had to resign. Gwen's appearance at the hearing and her performance at the concert were amazing. She's really smart. I heard on the news that the two of you wield more power and influence than President Hanson and his wife, and I believe it. What's really hard for me to believe is that I'm here talking to you!\"\n\n\"Don't believe everything you hear. We're just like you and everyone else. We've been lucky now and then, but we understand how quickly it can all disappear,\" replied Steve. \"Thanks for coming with us. I'm sure that Ashley, Stephanie, or Gwen has told you that we'd like to look at any video you take before you let anyone else see it. We don't want anything too embarrassing showing up on YouTube.\"\n\n\"Yes, they all explained that to me and I'm fine with it. It's just an honor to be able to go to Russia and Ukraine with your group. I'll never do anything to hurt you or Gwen,\" promised Cheryl.\n\nThe next morning found Steve and Gwen joining family and friends for breakfast. Ashley was blushing as she sat next to Richard Drake. Steve stared at Ashley until she stood up blushing, and started to leave the room.\n\nSteve easily caught her elbow and turned her around. \"I'm happy for you, Ashley. He's a good man and you sure deserve one. I was just trying to tease you a little. You know I'd never hurt you on purpose.\"\n\n\"That's Steve's macho idea of humor,\" explained Gwen as she hugged her friend. \"I'm so happy for you! You know you'll have to tell me everything. Where's that adorable little Ingrid?\"\n\n\"Becky's taking care of her for us this weekend,\" responded a relieved Ashley. \"I was pretty nervous about the hearings and Rich volunteered to stay with me. He really does help me to relax.\"\n\n\"I'm sure he does,\" chuckled Steve. \"Are he and Ingrid going to be able to go to Europe with us this week?\"\n\n\"You're inviting them?\" asked a surprised Ashley. \"I'll make sure they're able to go! Thanks so much for being so understanding!\"\n\n\"If anyone's interested, today's Post filled its front page with articles about Gwen, although Steve was mentioned a few times. They seem to feel that it's huge that you two were so friendly to Vincent Rosen. There's an article devoted to that. There's another story on how Steve, with the help of Paula, Ashley, and me, shook Congress to its core with our knowledge of the committee members' financial and political dealings. They're calling it brilliant tactics and believe that Steve's the mastermind of planning the counter-attack. \n\n\"His military training is credited with helping him develop the strategy that worked so effectively. The bottom line in every story is that Gwen and Steve have proven themselves to be a force to be reckoned with in Washington. There's speculation that Clark won't even run for a second term, which would show more intelligence than he demonstrated at the hearing,\" concluded Stephanie sarcastically.\n\nSunday morning found Gwen and Steve appearing of Amber Stahl's 'Washington Insider' broadcast. They were gracious and humble with their responses to questions about their victory, their friendship with the Rosens, and their increasingly powerful position in a town that respects power above everything else. \n\nMonday morning saw the Red Lady filled with family and friends of Steve and Gwen as they prepared to fly to Moscow. Their entire inner circle had made arrangements to travel to Russia and attend the nuptials. It was to be a very large wedding and Vlad had assured them that they were welcome to bring as many friends as they wanted. He told them that he was delighted that they had agreed to be in his wedding party, and the numbers could easily be worked out.\n\nThey were transported from the airport to their hotel by several long limousines. There was a large crowd gathered in front of the hotel when they pulled up to the curb. Much to the consternation of security people, Steve and Gwen stepped out and began shaking hands with people.\n\nThat's when Gwen surprised Steve by speaking Russian to those she greeted! \"I thought it was time I learned Russian. We're going to be visiting here more often to see our hospital and Vlad and Anna. I took Russian for two years in undergraduate studies and I've worked my ass off with one of those 'learn to speak Russian in two weeks' courses for six months. It's finally paying off!\"\n\nSecurity finally managed to lead Steve and Gwen inside the hotel when Steve spotted Varvara Suchkov in the lobby. She smiled when she saw his look of recognition and rushed to embrace him.\n\n\"So you remembered me? I wondered if the famous Steve Hammer would recognize me. I have been following your exploits in the papers and internet. You and your lady are very famous and important in America now,\" grinned Varvara as she pulled Steve down for a kiss. \"That should help you remember me!\"\n\n\"Naomi and I had dinner with you and your parents a few weeks ago,\" laughed Steve. \"No man could forget you in, especially in that short period of time. You're as beautiful as ever!\"\n\n\"Gwen, your man is flirting with me,\" joked Varvara as she hugged Gwen tightly. \"He brought that beautiful woman to dinner at my parents' hotel and he never even noticed me. I see she is here again. Watch that one!\"\n\n\"Hey, I heard that!\" complained Naomi. \"Steve never took his eyes of you all night. He forgot I was even there.\"\n\n\"Don't worry,\" laughed Gwen as she spoke to the Russian. \"I keep an eye on her every minute, but I'm afraid that Steve does as well. This is her boyfriend, Jared White. Jared, meet Varvara Suchkov. You can see why Steve doesn't stray with Naomi. This big guy would break Steve in half.\"\n\n\"He is very big and strong, but I think breaking Steve in half may be a difficult task. I have seen the movies and read the stories about Steve Hammer. He is hard as steel, or so the reports claim. He may bend, but he does not break.\"\n\n\"See that, Gwen? She knows how hard Steve is. I think she's the one you need to watch around Steve,\" joked Naomi as Varvara suddenly caught Naomi's inference and blushed.\n\n\"I need to return to the reason I am here,\" observed the lovely Russian. \"Your entire group is invited to the Kremlin tomorrow evening to have dinner with Vlad and Anna. President Novokov will be in St. Petersburg, but will return in time to attend your concert. We will have a bus pick you up at five, Moscow time? Will this work for you?\"\n\n\"Of course it will!\" replied Steve. \"Please thank Vlad and Anna for us, and tell them that we look forward to seeing them again.\"\n\nCheryl was especially wide-eyed the next evening when they dined at the Kremlin. She recorded almost the entire meal. After everyone finished eating, she walked around the section opened to her, taking video of everything she could. Gwen had explained to everyone, including their hosts, that Cheryl was required to record as much of her trip as she could and report back to her high school when the journey was over.\n\nGwen, Jordan, Charlie, and Steve spent part of each day rehearsing for the concert scheduled for Thursday evening in Red Square. A stage had been erected and Lady in Red Productions had crews placing the Jumbotrons in strategic areas around Red Square. Part of the agreement was that they agreed to allow them to be used the next day by the Russians when their military proudly paraded through Moscow.",
        "\"McCartney had a great concert here, but I think we'll have a much bigger crowd,\" predicted Charlie. \"They love you guys here in Russia, and that was before we agreed to build a new hospital here. I'm betting Red Square will be packed for our show. Let's be sure we give them their money's worth!\"\n\n\"Since we aren't charging them anything, that shouldn't be too difficult,\" observed Stephanie. \"However, this concert is going to be on pay-per-view. They told me that it looks like they'll sell more tickets to this concert than anything else they've ever broadcast, so you'd better make it good. We want to sell a lot of tickets for the one next week in Kiev, too.\"\n\nThursday evening as Gwen, Jordan, Charlie, and Steve climbed to the stage, they heard the crowd begin to roar. By the time they walked to the front of the stage, the cheers, whistles, and applause was deafening. Steve looked over the crowd in amazement. Red Square was packed and many of the streets leading to it were also filled with people!\n\nHe began his introductions once the crowd quieted somewhat. Then he told the huge crowd that Gwen wanted to speak to them. Gwen smiled and briefly told them how much of an honor it was to perform in Red Square. Then she spoke about how much the new hospital would benefit the young and the poor. By that time, it became apparent to the crowd that Gwen was able to speak Russian! Murmurs were heard from the audience and soon it became loud approval of Gwen's linguistic skills.\n\nAs the cheering let up, the driving drum beat for 'We Will Rock You' began and once again, Gwen was strutting to the front of the stage, singing strongly and urging the crowd to join in. It quickly became obvious that many in the crowd spoke English, or else they were just very familiar with the song. \n\nFor whatever reason, the crowd seemed to especially enjoy 'Sharp Dressed Man'. Many in the crowd danced any place there was room as Charlie and Steve drove them to a fevered pitch with their guitar performance while Gwen and Jordan danced and shimmied all over the stage.\n\nAs had become their custom, the friends sang several songs in Russian, much to the delight of the crowd. Since Gwen now spoke the language, she was more comfortable converting more songs from English to Russian. She had practiced them all week and delivered them flawlessly. The concert was a huge success. The group performed several encores before they were finally able to leave the stage.\n\nSteve and Gwen sat with the Novokovs the next day during the May Day parade. Steve was careful to be polite, but to not act overly impressed with Russian military equipment. President Novokov understood perfectly and was often seen grinning at Steve's neutral appearance as the troops and weaponry paraded past the stage Steve and Gwen had performed on the prior evening.\n\nSteve was relieved when the parade was finally over. It lasted for hours that seemed like days to Steve and Gwen. They barely had time to freshen up before reporting to St. Basil's Cathedral for the wedding rehearsal. Vlad and Anna's ceremony would be one of the times when it would be used by the Russian Orthodox Church, rather than utilized as a museum. President Novokov was allowing more religious freedom as one of his government reforms and Anna's family members were practicing Orthodox Christians. \n\nRehearsal went well. President Novokov was in a very good mood as his only son prepared for his nuptials. He invited the wedding party to attend a private dinner in the Kremlin. He spent a lot of time speaking to Steve and Gwen. His delight in Gwen's command of Russian was evident. He beamed when he first heard her speak in his native language and spent much of the evening introducing her to his friends and family. Steve was not totally ignored, as many of the ladies present flocked around him to ask about his movies and recordings. He and Gwen exchanged glances and occasional shrugs as they did their best to be good guests.\n\nThe wedding itself was a very formal affair. The bride was stunning in a white gown, but Steve couldn't help but wonder if she regretted asking Gwen to be her bridesmaid. The reason he wondered was how stunning Gwen looked! She wore a red gown designed by a Russian woman known for her classic lines and traditional designs. All of the bridesmaids looked very attractive, but Steve could see that Gwen really stood out with her natural beauty.\n\nHe was extremely proud to escort Gwen down the aisle as the ceremony began. For her part, Gwen marveled at how very masculine, yet handsome Steve looked in his tuxedo. Those attending, as well as everyone tuned in on television, watched in awe as the couple preceded the bride and groom down the aisle. Their personalities and physical presence dominated the nuptials.\n\nOnce the lavish ceremony was completed, the bridal party was transported to a five hundred year old castle a short distance north of Moscow. There was going to be a small reception for the wedding party prior to the main reception. An even dozen photographers were capturing the moment for posterity. Drink was flowing and everyone was having a great time. \n\nGwen was in front of Steve as she stepped up to a carving station for a slice of filet mignon. She heard a loud yell. Then her server suddenly grabbed the front of her gown and pulled her forward as he swung his carving knife toward her heart!"
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "ethics",
        "stanford",
        "washington",
        "moscow",
        "hearing",
        "testimony",
        "influence",
        "power"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-17"
}