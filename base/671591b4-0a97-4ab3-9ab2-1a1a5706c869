{
    "title": "Ideal Suburbia Ch. 02b",
    "pages": [
        "This is a series of stories that are a sort of sequel to two text-adventure games. Each installment is a complete story on its own, but for a full understanding, the reader may want to start with Chapter 1.\n\nThis story is shorter than many in the series, acting as a bridge tale between other chapters. There is plenty of randiness, but not so much explicit activity. Hopefully, it is still a fun read.\n\n+++++\n\nMonday mid-afternoon, my phone buzzed as I sat at my desk. It was a text from a woman name Fyre, with her schedule for the week. I smiled, opened my calendar and dialed the office phone.\n\n\"Gus? Hey, it's me,\" I said genially to the pain in the ass that I was supposed to transform into a customer. \"Listen, Gus, I want to dig deeper into what I can do to make it worth it for you to do business with CKE. My schedule this week is full up during the day though, so can I take you out after work Tuesday or Thursday? We can have dinner and some drinks and you can tell me all your problems... What? Ha! Everybody has problems, Gus. If they didn't, they wouldn't need guys like me!\"\n\n\"Tuesday? Excellent. I'm thinking this new place I just found. Drinks are big and the menu looks, um, enticing. I'll pick you up at 5:30?\"\n\nI entered the appointment in my calendar and stepped out of my office to head to my next appointment. I stopped at the front lobby to chat with my fellow sales guy, Steve, about the tennis US Open, which was currently going on. There had been a particularly good women's round of 16 match the night before.\n\n\"That Traci is so much fun to watch,\" enthused Steve. \n\n\"Yeah,\" I agreed. \"I knew her back in college,\" I added, dangling the bait.\n\n\"No way! Really?\" exclaimed Steve loudly. He leaned in and asked in a lower voice, \"Was she as hot back then as she is now?\"\n\nI savored that thought for a moment. \"Oh yeah. Or almost.\"\n\n\"A few years of success and professional trainers helped huh?\" asked Steve. He really was a fan boy. \"What was she like?\"\n\n\"Aww, I don't want to make it seem like we spent a lot of time together,\" I replied. Then I looked him right in the eyes and added, \"But she did give incredible head.\"\n\nHis eyes widened in shock, then he grinned and shoved my a little. \"Bullshit artist!\"\n\n\"What's he bullshitting about now?\" asked a voice from behind us. We turned quickly, since that voice belonged to the boss, Cathy. She had just returned to the office and was carrying a bag from Victoria's Secret of all places. Cathy set some unusual rules for behavior at her company. The attitude was very relaxed, sometimes even a little bawdy. It worked because the iron rule was, no relationships or activities between any co-workers, and you could make any dirty comment you wanted, just never about another coworker, whether they were present or not.\n\nAccording to the rules, I had done nothing wrong, but the general male instinct when getting caught bragging by a beautiful woman is to redirect the conversation. \"Have a good lunch?\" I asked instead of answering.\n\n\"I did. And did some shopping. Want to see?\" she said happily. That took me a bit by surprise. Steve, who had been there longer was a little less caught off guard.\n\n\"Sure! Special occasion?\" he jumped in.\n\n\"Third date,\" Cathy said significantly, reaching in to the bag. She pulled out a frilly pink nothing of a teddy that was both practically transparent and cupless. Then she actually went and held the damn thing up against her body and wiggled a little bit before putting it back in the bag.\n\n\"Think he'll like it, guys?\" she asked over her shoulder as she left, not waiting for an answer. Steve and I just stood there, looking at each other, but not seeing anything, as we were both picturing that teddy on Cathy.\n\nThe next day, I arrived at Gus's company at 5:20, since if you are not early, you are late. The cocksucker of course left me waiting in the lobby until after six, with no apology. In the car, we talked about my impending move into my first house, and he actually had some decent advice for me about home ownership.\n\nHe looked at me sharply, but in no way objected when we pulled into the parking lot of the strip club. We got out and entered. I paid the exorbitant cover, and I procured us a large table with seats for any 'guests' that might join us. As luck would have it, the waitress I knew and liked from my prior visit passed by as we sat. \"Tina?\" I called. She turned and approached with happy recognition in her eye. We ordered drinks for starters and relaxed to watch the stage for a bit.\n\nThe dancers who shuttled on and off the stage and in and out of their clothes made for a simultaneously relaxing and stimulating show. At one point, Gus bestirred himself to approach a dancer on stage and slip her a few dollars, copping a feel off her thigh in the process. When he returned, I hauled a large stack of ones from my jacket pocket and placed it on the table between us. \"Sorry Gus! I should have told you that I brought plenty of tip money for both of us.\"\n\nDinner came and went. Gus of course fixated on the garlic chicken, and I had a time convincing him to order something else. I had been specifically instructed, after all. We discussed his company, past experience, needs, and wants. It was a perfectly normal business dinner, just surrounded by naked chicks of varying degrees of hotness. And it was very frustrating. There simply was no overwhelmingly strong business case to offer to place us ahead of or behind the competition, and while Gus certainly was better disposed toward me than before, he didn't like me enough to bestir his lazy ass to do all the paperwork necessary to give us a try, much less to shift his business to us for real.\n\nSeveral times during the meal, I had seen Fyre, the dancer I had been previously introduced to, orbit by behind Gus, giving me an inquiring eye. I shook her off each time until the meal was done, and I had ordered us another round of drinks. The next time she came by, I gave her a wink. Instead of approaching, she disappeared. I frowned in confusion, but then brightened.\n\nFyre reappeared with a friend in tow who was cute enough, but not in quite the league of the compact, stacked hottie herself. They approached our table and Fyre moved to Gus's side, caressing his shoulder, while her side girl moved toward me. \"Hello gentlemen! I'm Fyre, and this is my friend Georgia. Can we join you?\" Without waiting for permission, each grabbed an empty chair and pulled them up right next to each of us.\n\nFyre kept her eyes locked onto Gus, leaving me left to talk to Georgia on my own. Clearly tipped off, Tina chose that moment to arrive and ask me if I'd like to buy the ladies drinks. I quickly agreed, and they ordered something exorbitant with probably no actual booze in it.\n\nSipping her drink, Georgia leaned in to whisper in my ear. \"I think she's got him, don't you?\" she said, her hand resting itself on my thigh, a scant inch or two from my cock. I murmured agreement and appreciation as we watched Fyre get Gus increasingly worked up.\n\nA few minutes later, Tina reappeared to ask if Gus and I wanted refills, and I replied, \"You know what, how about I buy you some dessert, Gus?\"\n\n\"What? No, I don't need anything sweet. How about another...?\"\n\n\"Oh, I think you do need something sweet,\" I interrupted. \"Um, Fyre, is it? Yes, thanks. Fyre, how would you like to take my man Gus here back to the Champagne Room and take care of him like the VIP he is?\" Gus looked at me in happy surprise and I shrugged. \"I take care of my customers, Gus. Present and future.\"\n\nTina and I (and my corporate card) took care of the paperwork to pay for the room, and the fee I had agreed to with Fyre back when we first met, and Gus allowed himself to be bemusedly dragged off down the wide hallway toward the champagne rooms.\n\nI leaned back in the chair and relaxed. Mission very nearly accomplished. Time would tell.\n\n\"I don't think you need to worry about success,\" said Georgia. \"Fyre is a closer. She'll close your deal. In the meantime,\" she went on, sliding her hand up from my thigh to caress the increasing bulge in my pants, \"How about you and I head back to somewhere in the other room and see what I can do about this?\"\n\nTwo days later, I processed my expense report, making sure I had the morning free to deal with the reaction. Sure enough, within an hour I got a call from a very irritated Audrey in Accounting. \"What the hell is this expense report?\" she demanded without preamble when I answered the phone. I sighed, gathered the stuff I needed and reported to her office as she demanded. When I arrived in her office, I not only found Audrey, but Cathy as well!\n\nThis was going to be a little higher stakes than I had anticipated, but I smiled easily regardless. \"Hello Audrey! How are you?\" I asked breezily. \"Did I screw up the arithmetic on my expense report?\" Audrey was one of those essentially plain women whose appearance is either moderately attractive, or painfully dowdy, depending on how they dress. She almost universally went with the latter, alas. At least her face could be quite nice when she smiled. She was not smiling now.\n\nCathy leaned against the wall, saying nothing. She wore one of her beautifully tailored suits with the skirt just above the knees, and she had her elegant, gorgeous calves crossed as she watched Audrey and me, face betraying nothing. Nothing except that I'd been called into an office by an angry executive, only to find the owner there too.\n\n\"Four. Figures.\" Audrey said coldly. \"At a strip club?!?\" she added, temperature rising rapidly. \"What. The. Actual. Fuck? How did you decide it was appropriate to drag some guy to a cat house and get him laid?\"\n\nI replied calmly, with a look of brazen innocence. \"Now Audrey, I took a prospect out to a legitimate, licensed, local cabaret for dinner, drinks, and a show, as an exercise in personal relationship building.\" I smiled at her quietly.\n\nOut of the corner of my eye, I caught a brief quirk in corner of Cathy's mouth. I didn't know if she was amused at that bullshit, or at the way Audrey gawped like a beached fish. Audrey closed her mouth firmly, then shot a quick, wordless, \"Can you believe this fuckwit?\" look at Cathy, who returned her gaze blandly.\n\n\"After all,\" I went on, \"I've turned in expense reports for much more back in San Francisco while working with my big client there. And those were just for dinner at Chez Therese or The Apothecary.\"\n\n\"I remember,\" hissed Audrey. \"But you had revenue to justify it. A lot of revenue. Revenue to offset your profligacy. Even if the nature of this expense wasn't obscene, what the hell am I supposed to offset it against?\"\n\n\"Oh, I can help you with that!\" I exclaimed brightly, and pulled the papers from under my arm. \"I just got these in by courier.\" I laid the first two pages down. \"Here are immediate purchase orders of eighteen thousand dollars for number seven sheeting, and twenty four thousand for six different bearings in various quantities from our new customer, Gus. And this last sheet is our contract for the next year with him, with monthly minimum purchases in four product lines. I admit I did have to get more aggressive than I wanted on the pricing, but the discount is still two percent less than the maximum I was authorized to offer, so my commission checks should still be pretty decent.\" I laid the contract down gently on top of the POs.\n\nAudrey picked up the contract and read it wordlessly. \"Jesus,\" she said at last, giving me another hard, but this time just exasperated instead of hateful, look. \"How hot are the women at this club?\"\n\nI looked her straight in the eye and replied, \"Very.\"\n\nI turned to Cathy and said, \"I wanted to tell you last evening that I had the deal, but he is slippery, and I decided to wait until I had the paperwork signed before I did. You should have copies of it all in your email, and the POs are already headed to Distribution.\"\n\nI waited for either congratulations or The Axe. I didn't wait long. Cathy laughed and shook her head as she uncoiled from her post against the wall. As she walked by me toward the door, she wordlessly gave me a high five and was gone. I watched her go. It was very hard to not watch Cathy whenever she was walking away. It was always a very nice sight.\n\nI turned back to Audrey who was reading the contract once more. She looked up at me with a slightly shell-shocked smile. \"For Christ's sake, no more strip club expenses, please?\"\n\n\"I'd expect about three a year, at odd intervals, tagged to Gus.\" I said matter of factly.\n\nHer hand shook and crinkled the copy of the contract slightly. \"Fine. Please, please, please send me an email half an hour before you submit another expense report like this. I'll need time to go to the lounge and brew a double espresso before I read the next one.\""
    ],
    "authorname": "Publius68",
    "tags": [
        "strip club",
        "stripper",
        "business",
        "office",
        "customer",
        "office sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ideal-suburbia-ch-02b"
}