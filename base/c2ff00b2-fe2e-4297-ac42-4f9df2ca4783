{
    "title": "What Do I Do?",
    "pages": [
        "Chapter 1\n\n'Can I use your laptop?'\n\n'Yeah, of course, it's in my bag.'\n\nMolly rose up off the sofa and wandered over to the back door. She opened Peter's work bag and slipped the laptop case out. Walking back towards the sofa she unzipped the case and slid the laptop out. As she pulled it free, an envelope slipped out with it and dropped to the floor.\n\n'Oops,' she leaned over and retrieved the envelope. The sound of it caught Peter's attention. He looked up questioningly.\n\n'Sorry; this fell out,' Molly said as she sank back onto the sofa next to Peter and held the envelop out to him.\n\n'Oh yes,' he said, taking the paper, 'I'd forgotten about that.'\n\n'What is it?'\n\n'Beckie gave it to me straight after the lecture this morning,' Peter flipped it over and started to peel it open, 'I was in a bit of a hurry, so I just slid it in with the computer and then I'd forgotten about it.'\n\n'Well; difficult to keep up with fan-mail, I suppose,' Molly said with a sly sidelong glance, as she tapped on the keyboard.\n\n'Ha ha,' Peter responded dryly.\n\n'Did Katie eat those little yoghurts last weekend or did you?'\n\n'We both had them.'\n\n'She liked them then?'\n\n'Yeah, she ate some of it, but didn't seem wildly keen.'\n\n'She's going through a fussy food phase. Do you think she'd like these?' Molly pointed out a different brand of yogurt from the online shopping list.\n\n'Are you implying I know the mind of our fussy four year old?'\n\n'No more or less than me.'\n\n'Give it a go,' Peter returned to opening the envelope. 'I'll eat them if she doesn't.'\n\nPeter slid the letter out and took in the handwriting as Molly continued to tap away on the computer.\n\nDear Peter\n\nI just wanted to say thank you, for being a brilliant teacher. I'm amazed (and a little terrified) that I'm almost at the end of my degree, and I've been thinking back over the last three years.\n\n'Oh bless her,' Peter murmured.\n\nI've had the best time of my life, and that is in no small part thanks to you.\n\n'What?' Molly glanced over.\n\n'For your information, it is fan mail,' Peter replied, adopting a deliberately ironic tone of smugness.\n\n'Poor misguided girl,' Molly quipped without looking up.\n\nThere have been ups and downs and I thank you again for talking me out of leaving the course at the end of last year. You have been a rock of wisdom, advice and caring support. Thank you.\n\nThere is one other thing that I wanted to ask you. I don't really know how to ask! I certainly would never have the courage to say this in person, but I really do want to ask. I've been thinking about it for a while. So I'm being a coward and writing to you. I think you're one of the nicest people I've ever met and I completely trust you. It is a bit of a crazy idea! -- so you can just ignore this letter if you want to. I don't want to put you in an awkward position and I don't want to embarrass you. I'm sure I'm embarrassed enough for both of us! But you know I have landed this job in Bristol, largely thanks to you, so I'll be leaving pretty soon after the final essay hand-in. So it is now or never.\n\nThe thing is I'm a virgin and I would like you to be my first.\n\nBeckie\n\n'Errr,' Peter paused.\n\nHis eyes flicked back over the last line.\n\n'Has she stunned you with flattery?' Molly asked after a moment, sensing that Peter had finished reading.\n\n'Err. Not exactly.' Peter hinged the letter back closed.\n\nMolly looked up from the laptop and met Peter's eye. She frowned a questioning look, flicked her eyes down to the letter and then back up to his.\n\n'It goes off on a tangent at the end,' Peter said.\n\n'About what?'\n\nPeter stalled for a moment, indecisive.\n\n'See what you think,' he responded and passed his wife the letter.\n\nShe quickly started scanning through it. Peter could see the exact moment her eyes reached the last line. She also went over the last couple of sentences twice.\n\n'I see,' she said.\n\n'Yeah.'\n\nNeither of them said anything for a moment.\n\n'What the fuck am I going to do about this?' Peter asked.\n\n'Well it depends,' Molly replied.\n\n'On?' Peter responded.\n\n'Well; it depends doesn't it.'\n\nPeter slightly shook his head, with a questioning look.\n\n'You've had a couple of students come on to you before. The same way you dealt with them.' Molly focused back onto the laptop.\n\n'Well, yes, occasionally. But that's been like a come-on in person, like in a pub, when they've had a drink. This is...' he left it hanging.\n\n'This is what?' Molly said, whilst scrolling through the online shopping.\n\n'Well, it's,' he paused, 'it's a bit different isn't it? It's sort of calculated isn't it?'\n\n'You could ask David what to do.'\n\n'I'm not going to tell anyone else! Least if all my line manager. I'd die of embarrassment!'\n\n'Why?'\n\n'Well, I just would.'\n\nThe couple sat silently for a minute. Molly continued to tap items on the laptop. Peter re-read the letter.\n\n'It's a joke? They've gotten together and they're winding me up?'\n\n'No.'\n\n'No?'\n\n'No.'\n\n'Would you care to explain?' Peter responded with an unmissable hint of irritation in his voice, that he instantly regretted. Molly looked up at him.\n\n'Sorry.' He put his hand on her thigh. 'What makes you think it's not a joke?'\n\nMolly reached forward and put the laptop on the floor.\n\n'Peter, we've had this conversation before. When you first started this job; and we've skirted around it a couple of times since. Except you don't believe me. Which is very sweet.'\n\nShe put her hand on top of his.\n\n'You're a good-looking man. In your mid thirties. You're smart, funny and you care a lot about people. You work with young adults; a lot of whom are going to find you attractive. And you're an authority figure. A number of young girls, and boys, are going to find you very sexy.'\n\n'But I'm their teacher. I don't think of them like that,' Peter responded.\n\n'That makes no difference to what they think of you,' Molly stated, before quipping, 'honestly, for a so-called academic you can be very dense.'\n\n'That's true of most academics I would say.'\n\n'Have you given Beckie any signals that you're interested in her?'\n\n'No,' Peter responded quickly.\n\n'Then that's fine then isn't it?' Molly said, giving his hand a reassuring squeeze. 'As long as you've not led her on, you can let her down gently and that'll be that.'\n\n'Hmmm.'\n\n'Does she know you're married?'\n\n'Yes. They all know I'm married. It's not a secret. And I do wear my wedding ring,' Peter said, holding up his hand.\n\n'Is she good looking?'\n\nPeter paused nervously, whilst trying not to look nervous.\n\n'Why do you ask?'\n\nMolly detected the tone.\n\n'I'm not trying to catch you out. Neither of us are blind. We've both talked about people we find beautiful, in films and stuff.'\n\n'Yeah. It's a bit different when it's someone you actually know and not a film star.'\n\n'Yeah, but it's fine. Is she pretty?'\n\n'Yes. She is.'\n\n'Good. Then you can tell her, honestly, that she's very attractive, but that you are happily married. And that'll be that.'\n\nPeter paused, thinking.\n\n'Presumably that last bit is also true, so you can say that with honest sincerity as well?' Molly asked.\n\n'What?' Peter came back from his thoughts.\n\n'Happily married?'\n\nPeter shook his head as though to shake the distractions away and leaned in to kiss his wife.\n\n'Very happily,' he said, squeezing her thigh and then pushing a firm kiss onto her lips.\n\n'Good. Can I finish the shopping now? Why don't you put something short on to watch, whilst I finish this? Then I don't know about you, but I think I'll be ready for sleep.'\n\n'Yes, thank goodness it's Friday.'\n\nPeter flicked the TV on.\n\n*****\n\nAfter brushing their teeth, they went upstairs and stripped off. They slid under the bed covers and naturally adopted a well-used, familiar cuddling position. Peter on his back, Molly on her side, pressed up against him. He had one arm under her neck, with her head resting on his shoulder. It enabled him to reach round and down so that his hand rested on her bottom. She lay on her side with one arm draped across his chest. His free hand rested on top of hers.\n\nHe sighed a deep breath out as they lay still together.\n\n'You alright lovely?' she asked.\n\n'Yes. Fine. You?'\n\n'Yep.'\n\nHe squeezed her bottom and then began softly brushing his fingertips across each of her cheeks; feeling the smooth, firm roundness of her bum.\n\nShe slid her hand from under his and circled his chest.\n\n'You really are very sexy you know,' she whispered in his ear. 'It's no wonder you're beating students off with a stick.'\n\nHe glanced down at her in the gloom and playfully smacked her bottom.\n\n'Just saying,' she replied, as the circling movement of her hand wandered down from his chest to his abdomen, 'if I were one of you students, I'd have a go.'\n\nWith this last phrase she reached down and took hold of his penis. It was already fairly firm and quickly hardened up to fully erect as she held it.\n\nAs they cuddled each other, Molly gently played with his erection; she alternated between softly sliding her whole hand up and down the length of his shaft with gently teasing the underside of his cock-head with her fingertips. Occasionally she ran her fingers across his balls, making him twitch and murmur.\n\nHe enjoyed running has hand across her bottom; particularly sliding one finger softly up and down the crack between her cheeks.\n\nBoth were tired after a long week and neither had the energy for anything more active. After several minutes of loving caressing, Molly gave Peter's erection a firm squeeze, and then let it go.\n\n'Night night lovely,' she whispered, as she rolled into a comfy sleeping position.\n\n'Night gorgeous,' he replied contentedly, before they both drifted off to sleep.\n\n*****\n\nThe following day, at the playground, Molly called out to her daughter, 'be careful jumping on and off Katie. Don't push it too fast.'.\n\nMolly's friend Samantha added, 'you too Daniel,' to her little boy, who was trying to gauge a daring jump onto the spinning roundabout.\n\n'Still, at least we get a moment of peace; even if it is a precursor to phoning an ambulance,' Molly smiled as she sat down on the bench next to Samantha.\n\nThey sat watching their kids play. It was the short dip just after lunchtime, when most people were figuring out what to do with their Saturday afternoon. Consequently they had the playground to themselves.\n\n'What was it happened yesterday?' Samantha asked.\n\nMolly responded with a puzzled frown.\n\n'You said whilst we were walking over, you had a funny evening.'\n\n'Oh that; yes.' Molly gathered her thoughts before continuing. 'Well, I'll just have to make sure we always remain friends; because you know too much.'\n\n\"Ha! Of course,' Sam replied.\n\n'One of Peter's students asked him to have sex with her.'\n\n'Yikes. What did he say?'\n\n'No, it was by letter.'\n\n'What? I thought you meant a student had come on to him.'\n\n'No. She wrote to him.'\n\n'So he told you about it?'\n\n'I saw the letter.'\n\n'Oh right. I imagine Peter would die of embarrassment if it had been in person. He strikes me as, well, sort of modest, or na\u00efve I suppose.'\n\nThe two women kept an eye on their kids whilst they chatted.\n\n'He is,' Molly continued, 'I told him when he first started the job that he should be a bit careful with students getting a crush on him. But he dismissed it.'\n\n'Ha, not any more.'\n\n'Yep.'\n\n'Right, now tell me from the beginning,' Sam adopted a feigned businesslike manner, 'how did he bring it up?'\n\n'He didn't. It just sort of happened next to me. I borrowed his laptop and the letter fell out of his bag. He said that a student, Beckie, had given it to him earlier, after a lecture, and he had been in a hurry. So he had put it in his bag and then forgotten about it.'\n\n'So he opened it next to you?'\n\n'Yep.'\n\n'Poor boy. How did he react? Did he tell you, or did you ask what it was?'\n\n'Well, surprised really. Like you say, he is quite na\u00efve about this kind of thing. He thought it was a thank you letter. It's not far to the end of the academic year, so there's a whole year group preparing to fly the nest into the big wide world. And he often gets little thank you notes and the odd present.'\n\n'But instead, Beckie professed her undying love?'\n\n'No, err...'\n\n'No? Dear Peter, will you have sex with me please? Thank you very much.'\n\n'Sort of. Not exactly. She said that she's a virgin. She must be twenty one; or twenty two, if she took a gap year before uni.'\n\n'Oh bless her.'\n\nBoth of them instinctively lurched forward as they thought Daniel was about to fall off the roundabout. He managed to recover his balance, so the two mums sank back onto the bench.\n\n'Yeah I know. I feel for her actually,' Molly continued, 'I was twenty three my first time. I mean I'm glad now, but at the time I had a bit of a complex about it.'\n\n'I know, and they seem to start even younger these days,' Sam shook her head.\n\n'Exactly. She probably feels like she's the only girl her age who hasn't done it. She thanked Peter, basically for being a good teacher, and then asked him to be her first. She's basically latched on to him because she feels safe with him.'\n\n'And he's cute.'\n\n'Steady.'\n\n'He is. You can't deny it.'\n\n'Yeah,' Molly said wistfully.\n\nSam smiled.\n\nAfter a moment, Molly added, 'she's looking for someone to help her through her first time.'\n\n'Help her through,' Sam said grinning.\n\n'Sorry, I know I make it sound like torture.'\n\n'My first time practically was.'\n\nThey both laughed.\n\n'Yeah. I do feel for her. It must have taken a lot of courage to write.'\n\n'And?' Sam asked.\n\n'And what?'\n\n'Did you discuss it?'\n\n'Yeah a bit.' Molly thought for a moment. 'It was a bit tense to be honest. I think we were both a bit surprised. Neither of us quite knew what to say. He asked if she was joking. Like she'd been put up to it. But there was no way.'\n\n'And?' Sam persisted.\n\n'Well, it just sort of concluded. He's going to think how best to talk to her about it. I don't envy that.'\n\n'So you didn't actually discuss the answer to the question?'\n\n'What, you mean...?'\n\n'Yeah,' Sam stated flatly.\n\n'Sam! You're talking about my husband sleeping with someone else.'\n\n'Yeah, it's the twenty first century girl.'\n\nMolly gave her friend an incredulous look.\n\n'Hey, I'm just keeping an open mind,' Sam followed up.\n\n'He's not going to cheat on me.'\n\n'No; of course he's not. Would it be cheating? If you knew about it in advance?'\n\n'Yes.'\n\n'Why?'\n\n'Because...'\n\n'Because? If he did it behind your back, it would be cheating. Whereas if you knew about it, well...'\n\n'Well what?' Molly retorted\n\n'Look; all I'm questioning is that both of you have adopted a default position that the answer is no. Which is lovely, and probably to be expected. Really. Everyone who knows you two knows you're stupidly in love. Which is beautiful. I'm just saying that's not the same thing as sex. You two make love, but sex can be just for fun; between consenting adults.'\n\n'I'm stunned.'\n\n'Why?'\n\n'I just, never thought you would think like this.'\n\n'I'm not saying it's for everyone,' Sam elaborated, 'but since Tom died, you know my rule; if life throws you an potentially interesting opportunity, you should consider it, and not be stuck in a blinkered, cosy view of life.'\n\n'I know, but this is...' Molly began.\n\n'Just another of life's opportunities,' Sam interrupted. 'I'm not at all saying what you guys should do. I'm just pointing out that you appear to have made an assumption about what can and cannot happen. And I'm saying, why not discuss it?'\n\nThey both sat silently for a moment. The children had moved on to wandering around, picking up pebbles.\n\n'How long have you two been together?' Sam asked.\n\n'Sam. Don't go there. I don't need you making me feel insecure about whether Peter is satisfied with our sex life. I feel like we've only just got it back to something steady and comfortable. You know we struggled for ages after Katie was born.'\n\n'I'm not trying to make you feel insecure. Sorry if I have,' Sam said sincerely. 'In fact the only reason I could have this kind of conversation with you is because I can see how solid your relationship with Peter is. That's why I think you're safe to keep open minded.'\n\n'Okay, open mindedly, I'd feel like he was cheating on me,' Molly said with a hint of sarcasm. 'Even if I knew. Even if I said it was okay,' she added more seriously.\n\n'Fair enough,' Sam held her hands up. 'The answer is no then. But at least you actually thought about it properly.'\n\nThe two women sat and watched their children comparing and swapping stones.\n\n'Unless of course,' Samantha let the sentence hang.\n\n'Unless what? Molly asked dubiously.\n\n'Threesome.'\n\n'Sammie!' Molly exclaimed.\n\n'Do you think it would feel like cheating if you were with him?'\n\n'I don't think I am going to dignify that with an answer.'\n\nSam shrugged her shoulders, before saying, 'not a little bi-curious then?'\n\n'No.'\n\n'You've gone bright red sweetheart.'\n\n'Because you're embarrassing me.'\n\n'If you say so.'\n\nMolly stubbornly stared straight ahead, whilst trying to recompose herself.\n\n'Think about it,' Sam pushed on, 'it makes sense doesn't it? Neither of you is cheating on the other, because it's an activity you're sharing. You both get to enjoy the fun, rather than it being something one of you has and not the other. You both add a bit of spice to your sex life, mix it up, try something new, keep it fresh. And Beckie gets her first time. With, it has to be said, the nicest couple a girl to hope to meet. You can give her a woman's perspective on sex. It sounds like a fun night out for everyone.'\n\nMolly continued to stare straight ahead.\n\n'Well, it's just a thought,' Samantha concluded.\n\n*****\n\nThe rest of the weekend passed pleasantly enough, with a mix of routine jobs and playing with Katie.\n\nOn Sunday evening, Peter and Molly were watching the credits roll on a weekly TV drama. Peter had put Katie to bed whilst Molly had had a soak in the bath.\n\n'Do I have to go to work tomorrow?' Peter asked, along with a deep theatrical sigh.\n\n'Yeah, you probably better had,' Molly replied.\n\n'Why do weekends go so fast?'\n\nMolly shrugged. Peter drummed his fingers against his thighs for a minute.\n\n'Do you fancy going up to bed?' he asked.\n\n'Bit early,' Molly looked up.\n\n'I know. That's the idea.'\n\n'Erm, yeah, alright.'\n\n'Well I don't want to force you.'\n\nMolly smiled. 'Come on then.' She stood up, took his hand, and tried to pull him up off the sofa. He feigned stubborn resistance and stayed seated. Molly shrugged, let go of his hand and walked away towards the stairs. When she reached the doorway, she span on the spot and whipped her dressing gown wide open. Peter took in her whole naked body in one rapid sweep of the eye, and then leaped to his feet towards her. Just before he reached her, with his arms outstretched, she snapped the gown closed tight around herself.\n\n'Wait for it,' she purred as she pushed one finger firmly against Peter's chest.\n\nShe turned again and headed for the stairs. Peter followed close behind and enjoyed seeing her bottom wiggle back and forth as she climbed up each step.\n\nIn their room, they each habitually walked round to their own side of the bed. Peter began to undress as Molly climbed onto the bed. She laid down on her front, across the width of the mattress, with her feet hanging off the side, and her upper body propped up resting on her elbows. Peter paused undressing and looked down at his wife. Her head was at the height of his waist, right in front of him. Her thin silk gown, draped across her back and legs, had fallen open at the front, revealing her breasts. Her jutting nipples stood out prominently in contrast with the white bed sheet.",
        "'Carry on,' she instructed him to continue undressing.\n\nPeter pulled off his jeans and then socks, which left just his boxer shorts remaining. His growing erection pushed firmly against the material. He hesitated, looking at his wife, whose face was just inches in front of the bulge in the shorts.\n\n'Drop 'em,' she commanded.\n\nPeter hooked his thumbs into the waistband, pulled the fabric away, and dropped the underwear to the floor. His erection sprang out, firm, and twitching slightly in time with his heartbeat. It hovered barely an inch in front of Molly's nose.\n\n'Hmmm,' Molly purred. She tilted her head back and rocked forward on her arms, and took the head of his cock into her mouth.\n\n'Mmmm,' she purred again, sending tingling vibrations into his erection, which was now straining tighter and harder between her lips.\n\nShe gently pushed further forward, rolling his foreskin back with her mouth. She had revealed his frenulum and began to gently circle the little triangle of skin with her tongue. Peter had to fight hard to resist the urge to thrust forward into her mouth, as his penis tightened up to full hardness. Molly began rocking to and fro, just fractionally, to gently rub her lips around the edge of his bell, whilst softly licking the underside of it.\n\nPeter watched his wife's lips sucking on his cock, before something else caught his eye. He noticed Molly's buttocks, beneath her robe, were gently clenching and relaxing as she bobbed forwards and backwards. He reached down and pulled on the silky material. It slid up over her body, revealing her thighs, bottom and the dimples on her lower back.\n\nPeter became transfixed with the tensing and relaxing of Molly's firm, smooth cheeks, which squeezed together and parted in time with each stroking suck on his cock.\n\nMolly continued until she began to taste the tang of pre-cum, gently seeping onto her tongue and could tell from Peter's breathing and muscle contractions that he was closing in rapidly on the point of no return. She reached up and firmly took hold of his cock with one hand, as she released it from her mouth. She then let go of him completely and rocked back into a sitting position with her legs crossed in front of her. She slid the dressing gown off her shoulders and dropped it to the floor behind her.\n\nPeter consoled his slight disappointment at the end of the blowjob, by feasting his eyes on his wife's taught, slender torso and firm, round breasts. Each of her nipples was puckered into a hard, dark nub of arousal and her hair tickled down around her neck and shoulders.\n\nMolly gazed straight back at him. Her eyes wandered up and down, as he stood at the edge of the bed. He was not overly muscled, but had a lean, healthy body, with broad shoulders and just a hint of abdominal muscle catching the light.\n\nShe settled her gaze on his erection, which stood out proudly hot and hard. The dark red end of it was shiny with saliva.\n\nMolly looked him in the eye and whispered, 'come and get me.'\n\nPeter braced one knee on the mattress as he reached forward. He cupped both hands around Molly's head and kissed her. As the kiss grew deeper, he slid both hands down across her body, feeling her shoulders, the edges of her breasts, her waist, her hips and down onto her thighs.\n\nPeter broke the kiss and whispered, 'lie back.'\n\nMolly reclined onto the mattress as Peter slid his fingertips down her legs. He wrapped a hand around each of her ankles and as he withdrew back across the bed he pulled her legs uncrossed.\n\nMolly was now flat and stretched out on her back, across the bed, as Peter looked down at her.\n\nTaking her by surprise, Peter yanked her ankles up towards his shoulders, pulling her body towards himself.\n\nMolly let out a little shriek of surprise and delight as she was dragged across the bed.\n\nPeter kept a grip on her ankles as he held each of her legs straight, but spread wide, forming a Y shape in the air.\n\nSpread-eagled and laid bare, every part of Molly's body seemed to Peter to lead to one place. The little patch of trimmed, short hair that covered her pubic mound and the glistening, wet cleft between her legs.\n\nPeter sank to his knees, like a devout worshiper, and lowered Molly's feet until they rested on the floor, with one on each side of his hips. \n\nLeaning forward, he pushed his tongue flat against the lowest part of her vulva and then slid it wetly up across the full length of her petals. He licked right to the top and across the stiff little button of her clitoris. Molly let go of her held breath as a long, soft moan of pleasure.\n\nPeter's eyes journeyed up across her body; riding over the jutting bumps of her hips and across the flat expanse of her tummy. Up onto her chest, climbing the twin curves of her breasts; gliding up her long, smooth neck, over her jawline, past her lips and up to her eyes. He saw passion, desire and love, twinkling in her eyes.\n\nHe tipped his head back down between her legs and hungrily licked and nibbled at her womanhood. As he gradually focused his attention more and more upon her little bud of arousal, he watched up at her stiffened nipples rising and falling atop her chest. Her breathing mirrored the action of his tongue, as his movements became shorter and faster across her clitoris. Muscles across her body started twitching, and her face and chest flushed rosy red.\n\nShe reached down to him. He took hold of her hands and her orgasm rushed out from between her legs, flooding her body with energy. He held tight onto her hands; her back arched and her feet lifted off the floor in uncontrolled spasms of pleasure.\n\nHe held his lips around her clitoris, sucking in the taste, the smell, the ripples of movement and the heat of her arousal.\n\nAs her orgasm subsided, he tenderly caressed her petals with his tongue; licking the soft folds of flesh and waiting for her signal.\n\nIt came when she let go of his hands and pushed herself up into a sitting position. She wrapped her arms and legs around him and pulled herself into a deep embrace, pulling her whole body up against his.\n\nHis rose to his feet, lifting her up along with him. She held a little tighter as she rose up, clinging to his torso. He put one knee onto the mattress, twisted round, and lowered her onto the bed, with her head landing perfectly onto a pillow.\n\nHe lay on top of her now; with her arms and legs still wrapped around him, his penis pushed up firmly against her vulva. He gently rocked his hips; sliding his erection back and forth across her slippery skin.\n\nHe looked down into her eyes; she smiled softly up at him. He leaned in and engaged her in a deep kiss. Their tongues teased each other.\n\nShe unhooked her feet from behind his back and planted them down onto the bed, with her knees bent and her hips rolled slightly upward. He maneuvered his hips, sliding the tight, dark dome of his cock-head between her labia, until it settled into the groove at the entrance to her pussy.\n\n'Mmmm, yes,' she murmured as she felt him pressing against the opening of her vagina.\n\nHe gently rolled his hips, forcing the tip of his erection to stretch her open and push inside her.\n\nHe held himself there for a moment, savoring the sensation and enjoying the pleading look she gave him. Hovering at the top of her chasm, she wanted nothing else but for him to thrust deep into her and fill her up entirely.\n\nHe pushed a little further in. Then withdrew to the entrance.\n\nShe moaned a mix of pleasure and frustration.\n\nHe pushed in again, a little further than before, held still for a fraction of a second, then withdrew back to the entrance again.\n\nShe reached upwards, grabbed his bum and tried to pull him into her. He distracted her with a kiss. Her arms dropped back to her sides as she melted under his attention.\n\nHe continued his motion; sliding just a little further into her with each thrust, before withdrawing the full length back to the beginning.\n\nThe tease was intense for both of them. He was fighting every instinct to thrust himself fully into her tight embrace. She, knowing her husband's body well, ached to be stretched by his manhood once more. Knowing how totally he was able to fill her, she was held in tantalizing suspense of the full experience. \n\nSubtly at first, but then increasingly forcefully, as he pushed against the tight walls of her vagina, the head of his penis began to rub across the ridges of her g-spot.\n\nPeter enjoyed the effect this was having on his wife. Her breathing was quickening again, she was glowing a warm rosy pink, as hot blood rushed to her skin, trying to dissipate the mounting heat inside.\n\nPeter's sense of potency soared as he watched the effect he was having on this woman. He felt the familiar tightening at the root of his cock and knew has wasn't going to last much longer.\n\nIt was now a race against time. He wanted to see his wife ride another climax of pleasure.\n\nThe anticipation was his undoing.\n\nHe felt the final countdown begin. He could hold for just a couple more seconds.\n\nHis cock was pulled back, with the lips of her pussy clinging to the bulging head of his rod. He pushed his way in. Now he kept going and going. Pushing inch after inch inside her. He passed the point he had reached with the previous thrust and kept going on and on. He clenched his jaw, fighting to hold back just a little longer. The sensation, as he rubbed hard along her tight channel, stretching her open, was almost unbearable.\n\nShe knew this was the moment. She felt him pushing inexorably inside her. Deeper than he had yet been. Unstopping and unstoppable. He filled her completely. At the instant he could fit no more inside, his hips jabbed forward, pinning her down to the bed as she felt his cock throb and shoot his orgasm deep inside her.\n\nThe feeling overwhelmed her. She abandoned cohesive thought as her orgasm roared to the surface. Her whole body tensed beneath his. His weight held her down. Her vagina contracted hard around his cock, coinciding with his second pulsing contraction. They both felt the blast of hot semen as it shot from him to her. His balls tightened, squeezing out every droplet, as he fired jet after jet of silky cum.\n\nThey rode the waves of their orgasms together. The ripples of her pleasure continued for some time after he was spent, completely drained of energy and sucking in great lung-fulls of air to replenish his screaming muscles.\n\nThey clung tightly to each other, until their euphoria softened to a deeply intimate unity. He lay unmoving on top of her. She wrapped her legs around over his thighs and ran her hands softly up and down his back and buttocks.\n\nEventually he rolled to one side and wrapped his arms around her. She laid gentle kisses on his forehead, cheeks and lips and his breathing slowed and deepened as his body relaxed.\n\n*****\n\nIn the post-orgasmic glow of lovemaking, Molly and Peter held each other in a close embrace, enjoying the gentle motion of each other's breathing and the feel of their skin against each other.\n\nMolly shifted her position slightly to assume something closer to their usual bedtime cuddling position. Her head rested across his shoulder and one of her arms draped across his chest.\n\nMolly tingled all over, as sexual energy fizzled through her body. She felt alive and sparky, as though all of her senses were turned up to maximum sensitivity.\n\nPeter was calm; deeply relaxed and almost meditative. His body felt content and recuperative. His breathing was the only movement he made.\n\n'Have you thought any more about Beckie?' Molly whispered.\n\n'Hmmm?'\n\n'Have you thought any more about Beckie?'\n\nPeter slowly opened his eyes. 'No. Not... no.'\n\n'Hmmm.'\n\nMolly remained still.\n\n'What made that come to mind?' Peter murmured.\n\n'Oh, nothing. I don't know.'\n\nPeter closed his eyes again; unable to win the battle to keep them open.\n\n'Is it bothering you? I mean you don't have to worry about it. I'll deal with it,' he managed.\n\n'Not bothering me.'\n\n'Good.'\n\nMolly paused, thinking for a moment.\n\n'I guess I sympathize with her a bit,' she added.\n\nPeter struggled to stay focused on what Molly was saying. He opened his eyes, but they closed themselves again immediately. \n\n'Right,' he managed to murmur.\n\n'I think she was very brave to ask.'\n\n'Mmmm.'\n\n'It's quite a bold idea really.'\n\n'Uh huh.'\n\n'I just wondered if you had thought about what to say to her; as well as how to say it I mean. Whatever it is you'd like to do.'\n\nPeter frowned and gathered the last shreds of willpower to open his eyes and engage his brain.\n\n'Sorry, how do you mean?' he asked.\n\n'Don't worry. Let's talk about it tomorrow.'\n\nMolly pecked a kiss onto Peter's cheek and enjoyed feeling him drift off to sleep. Her senses and thoughts raced along for a while longer, before gradually slowing down as tiredness took hold. Her last few imaginings were an exotic blend of memories and fantasies, as her subconscious took her off to sleep and dream.\n\n*****\n\nChapter 2\n\nMonday morning, on the train on the way in to work, Peter sat pondering over a nagging half remembered memory. Molly had said something about Beckie last night; he just couldn't remember exactly what. He had a peculiar recollection about something she had said, but had been too close to sleep to stay focused.\n\nHe decided to send a text. Make sure everything was okay. He thought Molly was not the type to be jealous or insecure, but concluded that it was best to give some reassurance. There was no way he was gong to be unfaithful and he wanted her to be confident in that.\n\n[TEXT FROM PETER] Morning gorgeous. I've had an epiphany\n\nA minute or so later, Molly replied:\n\n[TEXT FROM MOLLY] Oh yes?\n\n[PETER] You are definitely the sexiest and most beautiful person in the world. I don't know how I didn't notice before\n\nAt home, recognising the pinging tone, Katie asked, 'Who's that texting Mummy?'\n\n'It's Daddy,' Molly replied.\n\n'What is he saying?'\n\n'He's telling me that I am beautiful.'\n\n'Why?'\n\n'Because he's being nice.'\n\n[MOLLY] Wrong\n\n'Daddy's nice,' Katie chirped.\n\n'Yeah.'\n\n[PETER]?\n\n'Can I text him Mummy?'\n\n\"Yes. Here you go.'\n\n[MOLLY] jfkeoslmtujjjjjcnfh\n\n[MOLLY] (from Katie)\n\n[PETER] :-) xxx\n\n'What did he say?'\n\n'He sent a smile and three kisses,; Molly explained.\n\n'Three kisses!'\n\n[MOLLY] The prize goes to you\n\n'Yep. You'll have to give him three when he gets home.'\n\n'No I won't. Huh. Don't like kisses.' Katie returned to playing with toys.\n\n[PETER] True. Can you live with being second best?\n\n[MOLLY] I'm taking the house and the car. You can keep Katie\n\n[MOLLY] Who \"don't like kisses\"\n\n[PETER] :-)\n\n[PETER] Sorry I fell asleep so fast last night. Someone wore me out...\n\n[MOLLY] X\n\n[PETER] Were you awake for long?\n\n[MOLLY] A bit\n\n[PETER] Anything on your mind?\n\n[MOLLY] This and that\n\n'Why is Daddy still texting you?'\n\n'He's asking me questions.'\n\n[PETER] Everything all right?\n\n'What questions?'\n\n'I think he's asking me about one of his students.'\n\n[MOLLY] Twenty questions?\n\n'What student?'\n\n'A girl called Beckie.'\n\n'Who's Beckie?'\n\n[PETER] Sorry\n\n'One of Daddy's students. At the school where he teaches.'\n\n'Is she nice?'\n\n'Erm. Yes, probably.'\n\n[PETER] I have a nagging feeling that you tried to talk to me about something, that's all. Whilst I was falling asleep\n\n'What is he saying now?'\n\n'He is asking about Beckie.'\n\n'Asking what?'\n\n'Just a second sweetheart, I'm just writing back.'\n\n[MOLLY] I asked if you had thought about Beckie's question\n\n'Asking what Mummy?'\n\n'He was asking if I had thought about Beckie.'\n\n'Is Beckie coming to play with me?'\n\n[PETER] Don't worry. I'll deal with it. Not quite sure how! Perhaps I can distract her with something else and avoid the topic!\n\n'No sweetheart, she's a grown-up.'\n\n'Jenny plays with me.'\n\n'Yes, Auntie Jenny is a friend of mine. That's why she comes to play with you.'\n\n[MOLLY] So you have decided what the answer should be?\n\n'Is Beckie going to play with Daddy?'\n\n'Erm. Well; Beckie would like to play with Daddy.'\n\n'Does Daddy not want to play?'\n\n[PETER] I don't know how to let her down gently\n\n'Daddy has sort of assumed he's not allowed to play. I'm trying to see if it might occur to Daddy to think again.'\n\n[MOLLY] You're going to break her heart then?\n\n'What does assumed mean?'\n\n'Erm; he has decided something without really thinking about it.'\n\n'Why?'\n\n'Because... Well because he's very lovely.'\n\n[PETER] I hope she doesn't burst into tears on me!\n\n'I love Daddy.'\n\n'I love Daddy too.'\n\n[MOLLY] So you're going to spoil her plan then?\n\n'When are we going to do gymnastics?'\n\n'Good question.'\n\nMolly looked at her watch.\n\n'Actually, very soon. Can we get you ready?'\n\nMolly set about gathering clothes for Katie to wear. When she had everything to hand she looked back at her phone. No message.\n\n'Come on then missy, let's get you dressed.'\n\nMolly was pulling a fresh t-shirt over Katie's head when her phone pinged again.\n\n[PETER] Oh I see. Ha ha ha. Could you give me a #joke I'm a bit slow this early in the day.\n\nKatie sighed loudly at hearing another text ping, 'now what?'\n\n'Daddy's being lovely again.'\n\n'What lovely?'\n\n'Well, he's very faithful.'\n\n'What is faithful?'\n\n'It sort of means he loves me very much.'\n\n'Me too?'\n\n'Yes he loves you very much too.'\n\n'Come on Mummy. Trousers.'\n\n'Sorry sweetheart. I'm just trying to think what to write to Daddy.'\n\n'What think?'\n\n'Well, I don't really know where I'm going with this. I'm being a bit devilish and I'm...'\n\n'What is devilish?'\n\n'Erm, sort of cheeky.'\n\n'What cheeky?'\n\n'Well, part of me is, curious, about playing with Beckie. But I don't really know what to think.'\n\n'Why?'\n\n'Erm. I'm a bit shy.'\n\n'I'm a bit shy sometimes.'\n\n'Yeah I know.'\n\n'But I'm brave too.'\n\n'Yes. You are. Me too.'\n\nMolly took a deep breath and typed.\n\n[MOLLY] I'm not joking #surprise\n\n'Trousers Mummy.'\n\n'Right. Trousers. Come here then.'\n\n[PETER] Actually I could perhaps fit her in this afternoon. Get the job over and done with. #wink\n\n'Huh! Daddy! We're doing trousers.'\n\n'Can you finish getting dressed?' Molly asked, 'you can do it on your own really can't you? See how quickly you can do it. Ready. Go.'\n\n[MOLLY] Sorry; I'm not free to join you this afternoon #wink\n\n[PETER] Naughty. You're no help at all. #spank\n\n'Finished Mummy!'\n\n'Well done.'\n\n'Gymnastics now?'\n\n'Yes. Go find your shoes.'\n\n[MOLLY] I've got to get Katie ready for gymnastics now\n\n[PETER] See you later X\n\n[MOLLY] Talk later. Think about it. X\n\nOn the train, Peter murmured to himself, 'think about it?'\n\n*****\n\nLater that evening, once Katie had been put to bed and was off to sleep, and all the daily jobs were done, Molly and Peter slumped down onto the sofa together.\n\n'Busy day?' Peter asked.\n\n'Fairly. We spent a long time at the playground after gymnastics, with most of the girls from the group.'\n\n'Uh huh.'\n\n'She's making some good friends.'\n\n'Oh good.'\n\n'You?'\n\n'Hmmm?'\n\n'Busy day?'\n\n'Oh. Err. Middling.'\n\n'Did you run into your secret admirer?'\n\n'No. Thank goodness.'\n\n'Hmmm.'\n\nPeter paused for a moment; unsure of the mood.\n\n'Are you okay with this Beckie thing?' he asked.\n\n'Yeah.'\n\n'Okay.'\n\nMolly held his look without adding anything.\n\n'It's just you've asked several times about it,' Peter continued.\n\n'I'm just thinking about it. That's all.'\n\n'Okay.'\n\n'Okay.'\n\n'Molly, I haven't done anything to bring this on.'\n\n'Oh no,' Molly leaned in and pulled him into a hug. She squeezed him tightly before pulling back and giving him a firm kiss on the lips.",
        "'I know you haven't lovely. I don't think that at all,' she added.\n\n'You know I love you and I'm not interested in anyone else?'\n\n'Yes,' she squeezed his hands, 'except Rachel Weisz.'\n\n'Yes,' the tension melted, 'obviously except Rachel Weisz.'\n\nThey both smiled and settled back into the sofa.\n\n'So what would you do if you got that letter from Ms Weisz?' Molly asked.\n\n'I'd be over to her place like a shot, before she changed her mind, obviously.'\n\n'Would you take me with you?'\n\n'I wouldn't want a chaperone.'\n\n'That's not what I had in mind.'\n\nPeter raised his eyebrows.\n\n'I think she's sexy too. I've said that before.'\n\n'You've said she's beautiful.'\n\n'Yes. Well she's sexy too.'\n\nPeter gave another wide-eyed look.\n\n'I can find women attractive, can't it?'\n\n'Yes, sorry, don't mind me.'\n\n'Me and Rachel. Are we not in classic male fantasy territory? In bed with two women?'\n\n'I suppose.'\n\n'You don't fancy it then?'\n\n'Nah. Think of the pressure. Hard enough to please one woman,' Peter said with a sly sidelong look.\n\nMolly smacked his arm.\n\nHe grinned.\n\n'Shall we go up to bed?' she asked.\n\n'Yeah, I guess. It's a school night.'\n\nThey brushed their teeth, checked the doors were locked and flicked off the lights. Molly stuck her head into Katie's room on the way past. In their bedroom they started both stripping off their clothes.\n\n'She okay?' Peter asked.\n\n'Sparko,' Molly replied, 'like this.' She threw he arms up and out wide, mimicking the way their daughter was asleep. Peter overtly ran his eyes across his wife's bare, uplifted breasts and quietly wolf whistled. Molly switched to a glamour photo pose, hands behind her head, and pushed her breasts out further.\n\n'Steady. I won't be able to keep my hands of you,' Peter warned.\n\n'Is that a promise?' Molly turned on the spot, looked over her shoulder with a cheeky smile, and wiggled her hips as she pulled her knickers down across her bottom.\n\n'Be careful what you wish for,' Peter said as he continued to unbutton his clothes.\n\nMolly looked away and sat down on the edge of the bed. She slid her knickers down her legs and tossed them over her shoulder. She judged it perfectly. They hit Peter square on the chest. He hurriedly removed the last of his clothes and turned the light off as Molly slipped under the duvet. As he joined her under the cover, she rolled over to him and they adopted their usual cuddling position. She ran her free hand across his shoulders and chest, and he circled his across her bottom.\n\n'Mmmm, hello sexy,' he whispered.\n\n'Hello gorgeous,' she replied, as she slid her hand down and took hold of his growing erection.\n\nShe gently stroked up and down the length of his shaft. He closed his eyes and enjoyed the feel of her body pressing against his and the attention she was giving him.\n\n'Can I ask you a question?' Molly whispered.\n\n'You can do anything you like whilst you're doing this to me,' he smiled.\n\n'You don't need to worry about what you answer. You can be honest.'\n\n'Okay,' he replied.\n\n'Do you want to have sex with Beckie?'\n\nPeter's eyes shot open and he angled his head down to look at his wife in the half-light. Molly kept gently stroking his erection.\n\n'Sorry?' he asked.\n\n'Do you want to have sex with Beckie?' Molly calmly repeated.\n\nPeter reached down and took hold of her hand, lifting it away from his penis. He wriggled his body over a fraction, causing Molly to lift her head up off his shoulder. He looked through the shadows, into his wife's eyes.\n\n'I'm not pursuing other women, Molly,' he said firmly, 'I am in love with you.'\n\nShe squeezed his hand in what she hoped was a reassuring way.\n\n'I know. That's not what I asked,' she whispered.\n\n'I thought this was bugging you.'\n\n'It's not what I asked.'\n\n'I am not pursuing other women. And I'm a bit worried that you think I...'\n\n'I'm totally sure you're not, Molly interrupted, 'I asked if you wanted to have sex with her.'\n\n'Well I think wanting suggests doing, Molls; or thinking about taking action to get the thing you want.'\n\n'Okay. Then, would you like to have sex with Beckie? Would you enjoy it?'\n\n'Can I turn the light on?' Peter said as he sat up and reached for the bedside lamp. Molly said yes just as he flicked it on. He turned back to face her, propped up on one elbow. He took hold of her hand as he said 'this, conversation, situation, thing, is freaking me out. What do I do?'\n\n'We've never discussed having sex with other people.'\n\n'No. We're married,' Peter said very slowly.\n\n'Yes, but some people have what's called an open marriage, and some people...'\n\n'Are you trying to tell me something? Because...'\n\n'No. God no. No. That's not what I'm saying. I have never had sex with anyone since we got together. I'm not engineering an opportunity to tell you I've had an affair.'\n\n'Okay.'\n\nMolly took a deep breath and tried to think what to say next.\n\n'All I'm saying,' she began, 'is we haven't actually discussed the options, of what Beckie has asked. We usually discuss, opportunities, that life sends our way. But we didn't actually discuss this.'\n\n'I didn't think there was any discussion to be had,' Peter said with a frown.\n\n'No, neither did I,' she squeezed his hand, 'at first. But then I thought about it a bit more.'\n\n'Right. Sorry; I'm really confused. Are you suggesting I should have sex with someone else?'\n\n'No. I'm not suggesting you should. I'm saying that we have never actually discussed anything like this being an option.'\n\nPeter gave a dubious look, 'well, because it's not, is it?'\n\n'We both assumed the same thing, straight off. Which is good,' Molly smiled, 'we're both on the same wavelength, by default.'\n\n'I am not at all comfortable with the idea of you sleeping with another guy.'\n\n'No! Neither am I! At all.'\n\n'Okay. Good. So?'\n\n'So; do you want to discuss?'\n\n'You want to discuss, me sleeping with other women?'\n\n'Yeah,' Molly said slowly, 'and I'm sort of surprising myself just saying that out loud, now.'\n\nPeter gave a slight shake of his head, 'I'm; surprised.'\n\n'We were just talking about you sleeping with Rachel Weisz.'\n\n'Yeah that's fantasy.'\n\n'Okay. But we can talk about our fantasies can't we?'\n\n'It's a bit different isn't it?'\n\n'Well, can we talk hypothetically?'\n\nPeter nodded.\n\n'Would you, hypothetically, have any fantasies about having sex with any of your students?'\n\n'No,' Peter answered promptly.\n\n'Okay. Is that too abstract or are you worried about hurting me?'\n\n'Yeah I am to be honest.'\n\n'I don't think there's any harm in telling me your fantasies lovely. Honestly telling me. I know you're not a weirdo, so I don't think you could say anything that would horrify me. And I know you're not going to act on a fantasy. The way you utterly didn't get what I've been hinting about, about what to do about Beckie, in many ways, that's what has given me the confidence to have this conversation.'\n\n'Okay, Peter said dubiously. 'I'm a bit uncomfortable, but okay.'\n\n'We could just forget all about this if you want. I just like to think that we have an open relationship. Open with each other I mean. That we can talk to each other about anything, and not make assumptions about what each of us wants to do with our lives. And that might include far-fetched fantasy type stuff; that we may never act on, or it's effectively impossible to act on. But maybe some things, we discover we can.'\n\n'Okay.'\n\n'Yeah?'\n\n'Yeah.'\n\n'So. Erm. Beckie then?' Molly asked again.\n\n'Uh huh.'\n\n'Do you find her attractive?'\n\n'Are you sure you're okay with this?'\n\n'Yes. Do you find her attractive?' Molly asked with more confidence.\n\n'Okay. Yes, I do. She is quite attractive.'\n\n'Sexy?'\n\n'Yes,' Peter replied slowly.\n\n'Okay. Erm. If we weren't together, a couple, would you think differently about how to respond to her letter?'\n\n'Yeah I guess. If I was single, I suppose I would think differently about it. Though I would be concerned about this circumstance. I'm not sure quite how she's thinking about this. To want to have sex with a guy, her teacher as well, but seemingly not want a relationship. I'm not sure that's, well, healthy.'\n\n'I understand where she's coming from.'\n\n'Really?'\n\n'Yeah. I don't think I would have ever been brave enough, at her age, to do what she has done. But I would possibly have thought about it.'\n\n'Really?'\n\n'Yeah. I didn't lose my virginity until quite late. Or at least, what I felt was quite late at the time. I'm glad now, but at the time it was huge deal. And the option to do it for the first time, but without it being someone who you're really interested in, from a relationship point of view, is quite appealing.'\n\n'So she wants me because I'm not interesting? That's thoroughly deflated my ego,' Peter said with a rye smile.\n\n'It's interest in a different way. If she finds someone that she'd like as a boyfriend, she doesn't want to be bad at sex with him, because it matters for their whole relationship. Whereas with someone like you, she trusts you, she finds you sexy, and she can be honest with you, that it's her first time. She's not under pressure to perform well, as it were. Or at least, not as much pressure as if it were with someone she was interested in romantically. You should be flattered actually.'\n\n'Hmmm.'\n\n'Does it not appeal to you? Young, virgin beauty throws herself at older man, for no strings attached sex. Does that not do something for you?'\n\n'Yeah. Okay, if I'm being honest, I suppose it does,' he paused, 'so?'\n\n'Go on,' she reassured him.\n\n'If I, erm, granted her request. Wouldn't that be cheating on you?'\n\n'If I didn't know about it, yes. And even if I did know about it, I think I would probably still feel you were cheating on me. You going off and doing it would feel like it was behind my back even if I knew about it.'\n\n'So this is definitely staying in the realm of hypothetical fantasy then. Because the last thing I want is you to feel like I'm cheating on you.'\n\n'You're lovely,' she leaned in and kissed him.\n\n'So. Conversation had. It's not a possibility.'\n\n'Hmmm,' Molly rolled her eyes in mock contemplation.\n\n'What?'\n\n'If I joined in, it wouldn't be behind my back.'\n\n'Molly!'\n\n'What?'\n\n'You're suggesting?'\n\n'A threesome.'\n\nPeter was stunned. He scrutinised his wife's face for any hint that she was winding him up. 'I never thought to hear you say that,' he said eventually.\n\n'What do you think? Does it tick any fantasy boxes?'\n\n'It sounds terrifying.'\n\n'I think it sounds like fun.'\n\n'You're actually considering this?' Peter asked open mouthed.\n\nMolly paused before answering, 'I'm, speculating, about what it would be like.'\n\n'Right.'\n\nThey lay together in silence for several minutes.\n\n'Have I horrified you?' Molly asked.\n\n'No. Not horrified. Definitely surprised though. I hadn't imagined you would think about anything like that.'\n\n'Uh huh. Speaking metaphorically, or in terms of sexual fantasy, does the idea appeal?'\n\nAfter a few moments thought, Peter replied, 'honestly, I can't really process it on any kind of realistic level. It's not something I ever expected to discuss with you.'\n\n'Okay. That's okay. It's gotten quite late. Perhaps we should go to sleep.'\n\n'Yeah, okay.' He gave her one last long look and then reached back and turned off the light. They both settled down to sleep.\n\nSeveral minutes passed.\n\nPeter normally fell asleep fairly quickly, so Molly knew his mind must have been ticking, for him to still be awake.\n\n'Are you thinking about it?' she asked.\n\n'Mmmm,' he responded.\n\nShe reached down quickly and found his cock.\n\nIt was rock hard.\n\nShe gave it a quick, affectionate squeeze; then gave him a kiss on the cheek, rolled over and tried to get to sleep.\n\n*****\n\nChapter 3\n\nAt the university, the lift doors opened and Peter stepped in. He raised his head from the book he was flicking through and looked straight into Beckie's eyes.\n\nIn surprise and instant panic, he broke contact and cast his eyes down. A brief moment later he realised he was looking directly at her breasts and he shot his eyes back up to hers.\n\n'Hi Beckie.'\n\n'Hi,' she replied quietly.\n\nThe lift doors closed. It made Peter jump, but gave him the excuse to turn slightly and face the control panel. He twirled his finger around above the buttons for a moment before selecting the eighth floor. He noticed that the seventh was already selected.\n\nThe lift began its ascent.\n\n'Did you...' they both began and stalled each other. They made eye contact again. Peter tried to adopt a relaxed smile. Beckie had blushed bright red. This stalled Peter again; the passionate colour instantly prompted a vivid memory of his wife's face when they had last made love.\n\nThe lifted jerked to a stop and the doors slid open.\n\nBeckie shrugged slightly and flashed another small smile as she stepped out onto the seventh floor.\n\nAs the doors began to close, Peter stepped in between them and called out to her. She turned on the spot and went a slightly stronger shade of red.\n\n'Beckie,' he said again, 'erm.'\n\n'You read my letter,' she replied.\n\nIt was neither entirely a statement nor a question.\n\n'Yes. And. To be honest, I haven't really thought what to say.'\n\nBeckie shifted her weight nervously and silently looked down at her feet.\n\nThe lift chimed, as Peter blocked the doors.\n\n'And, we don't want to talk in the corridor,' Peter let out a nervous puff of a laugh, 'but I will have a proper chat with you.'\n\nThe lift doors tried to close against him and he rather forcefully shoved them back.\n\nBeckie looked back up and nodded.\n\nPeter nodded, smiled and stuck his thumb out in the direction of the lift.\n\nBeckie twinkled a beautiful smile, turned and began walking away down the corridor.\n\nPrior to stepping back into the lift; before he realised what he was doing, Peter cast his eyes down across her departing form.\n\nIn an instant, he took in her long flowing hair and slender figure. Her jeans magnificently shaped her tight bottom and shapely legs as they walked away.\n\n'Oh goodness,' Peter said to himself, once the lift doors were safely shut.\n\n*****\n\n'What did you say?' Molly asked.\n\n'Well, not a lot, it was in the lift,' Peter replied.\n\n'Oh I see. Awkward.'\n\n'Fucking hell yes.'\n\n'So what did you actually say?'\n\n'Well, basically nothing in the lift. We were both so utterly embarrassed. She went bright red bless her. She got out a floor before me. I held the doors and said that I hadn't really thought yet what to say to her, but that we would have a proper chat. And that was it.'\n\n'Right.'\n\n'Molly,' Peter said, turning on the sofa to face her, 'sexual fantasies is one thing. And even keeping open minded about which of them might be able to be enacted in some way. But I cannot have sex with a student. It would be so unprofessional. And us talking about it has made it very difficult for me to focus at work.'\n\n'I understand. Sorry.'\n\n'It's okay. And I've still got to have a conversation with her.'\n\n'Hmmm.'\n\nThey sat together silently for a few moments.\n\n'Have you actually thought about making it a reality then?' Molly broke the silence.\n\nPeter didn't comment.\n\n'Being so embarrassed about it,' Molly continued very slowly, 'might suggest, that it's a fantasy, that, you might actually quite, like, to happen?'\n\nPeter could not decide how to respond.\n\n'Have you thought about it then?' he asked his wife.\n\n'Erm, yeah.'\n\nA red blush was now spreading slowly across Molly's face.\n\n'And what do you think?' Peter asked.\n\nMolly bit her lip, before saying very slowly, 'I quite like the idea. I think.'\n\nShe was watching her husband very closely to try and gauge his response.\n\n'The idea of being with you and another woman, at the same time. It's a bit of a turn on,' she concluded, and was very aware of the heat in her cheeks.\n\n'Yeah?' Peter held he gaze.\n\n'Yeah,' she confirmed with a hint of a smile.\n\n'Are you a little; bi-curious then?'\n\n'Wow, wham, there's that word,' Molly paused and took a breath before saying, 'I think I might be, yeah.'\n\nPeter now began to blush as well.\n\n'What you thinking?' Molly asked.\n\n'Erm. That's, interesting.'\n\n'What do you think about Beckie?'\n\n'Well. As we're being so candid. I did look at her a bit differently, earlier,' he said cautiously, 'with sort of different eyes on, if you know what I mean?'\n\n'Uh huh. And?'\n\n'She's very cute. She's got a sort of shy, quiet sexiness.'\n\n'She sounds nice.'\n\n'So, erm...' he began.\n\n'Now what?' they both concluded together.\n\nThey looked at each other and burst out giggling.\n\n'So, what about the idea of being in bed with both of us?' Molly asked, smiling but intent.\n\nPeter nodded slowly. 'I wouldn't say no, I think. You?'\n\n'Yes. I think I'm up for it.'\n\n'However,' Peter turned serious, 'although this is interesting, to sort of discover; there is no way I can sleep with a student. It would be so unprofessional. I mark her work.'\n\n'She might get a better mark,' Molly quipped.\n\n'Seriously.'\n\n'No, I know. But when does she finish being a student?'\n\n'The final hand-in is in four weeks.'\n\n'And when would you mark her work? So when would you sort of definitely be done with her as a student?'\n\n'Well, I could mark it the following week.'\n\n'And then after that, she would no longer be a student, just another adult. Free to spend time with whoever she likes. And vice versa, you with her.'\n\n'Hmmm,' Peter responded.\n\n'So, taking a stance that this idea as an actual possible reality then; does this change your thinking at all? Like could you actually go and see her and say yes then?'\n\n'Well I don't know that I would call this an actual possibility. She's not asked for a; you know.'\n\n'Threesome.'\n\n'Yeah that.\n\n'It's just a word.'\n\n'Yeah, one that carries a lot of meaning and one that I never thought I'd be using in any kind of serious conversation, until now.'\n\n'Well as we've recently discovered; you don't know until you ask. She might be up for it.'\n\n'And how the fuck am I going to work with her for the next four weeks? As her teacher. It'd be more than a bit weird, teaching her thinking I'm going to be having sex with her in the near future. I was bad enough in the lift. I felt like a tongue tied schoolboy.'\n\n'Perhaps I could talk to her about it?'\n\n'Right,' Peter said dubiously.\n\n'Well it might be better from me for a number of reasons actually. Firstly, it means I would meet her, and her me. We are talking about going to bed together.'\n\n'There is that,' Peter laughed.\n\n'I can sympathise with her situation, and talk to her about it probably easier than you can. It keeps some professional distance between you two until she's no longer a student. And she might be less embarrassed about talking to another woman.'\n\n'Hmmm, possibly.'\n\nThey both sat with their own thoughts for a while.\n\n'Oh fuck!' Peter suddenly burst out, 'I've just remembered she's in one of my lectures tomorrow.'\n\n'Well there's nothing you can do about it now.'\n\n*****\n\n'Peter, could I have a quick word, about my last essay?' Beckie asked as everyone was filing out the room.\n\n'Of course,' Peter managed to say calmly, despite his heart skipping a bit.\n\nThey slowly walked back into the middle of the room as the last of the other students departed.\n\n'Sorry, I just had to talk to you,' Beckie began. She was gently glowing a warm rosy colour again. Peter found it very attractive.\n\n'Sorry, I know you said you wanted to sort out a proper chat and I shouldn't be hassling you,' she continued.\n\n'It's okay,' Peter interrupted.\n\n'It's just, erm. Well I have no idea what you just said in the whole of that lecture!' She let out a beautiful burst of nervous laughter.",
        "'I've been feeling that I should chicken out and just ask you to forget about it. But I thought, actually, I've already done it now. So I just wanted to say, I'm serious. I really would like to. Well. Yeah. I'm serious.'\n\n'Okay. I think...' Peter began.\n\n'Can we actually talk about it. Or is it just a no. Because if it's no can you just say no and then that's that.'\n\n'Beckie, you know I'm married...'\n\n'Yes I know and I know you're too nice a person to cheat on your wife and I'm sorry I've even suggested that you might. So it's no then.'\n\n'No.'\n\n'Fine. That's fine,' she made moves to leave, 'I can go die in a hole now.'\n\n'No, I mean, not no, I mean...'\n\nAt that moment a small group of students burst into the room, for their next session.\n\nPeter spun and, rather more aggressively than he intended, shouted 'give me just a minute please.'\n\nHe turned back to Beckie in a fluster.\n\n'Can my wife talk to you about this?' he asked quietly.\n\n'You told her? She'll kill me,' Beckie said in alarm.\n\n'No not at all. Yes, I did tell her about it and she does not want to kill you. Erm. Please. Would you talk to her about it?'\n\n'Why?' Beckie asked, looking like a startled rabbit in car headlights.\n\n'Because, we thought it might help. She said that she understands how you feel.'\n\n'Really?'\n\n'Yes.'\n\nThere was a knock on the door. Peter looked over his shoulder and saw that it was another lecturer. He waved her in.\n\nHe turned back to Beckie and said, 'think about it and text me. You've got my number haven't you?'\n\n'Yeah.'\n\n'Okay. Catch you later.'\n\nAnd with that, Peter fled the room.\n\n*****\n\n'Hello lovely,' Molly picked up the phone.\n\n'Hi,' Peter said tersely.\n\n'You all right?'\n\n'No.'\n\n'What's up?'\n\n'I just told Beckie that you would speak to her.'\n\n'Oh. Shit.'\n\n'Yeah.'\n\n'So we're going with this then. I didn't think we had actually agreed to...'\n\n'Yes I know. I panicked.'\n\n'Why?'\n\n'She caught me after the lecture. And my students were leaving. And a bunch of other students were trying to come in. And you talking to her was the only plan that we'd formulated, so that's the plan that came to mind.'\n\n'Right.'\n\n'Sorry.'\n\n'Okay.'\n\n'Will you speak to her?'\n\n'Well I thought we would think about it and talk about it a bit more, before diving in with what we talked about last night.'\n\n'Yes, I know. I'm sorry.'\n\n'Still, I suppose I can talk to her and say no. If that's what we want.'\n\n'Yes, that's true.'\n\n'So when have I got to see her.'\n\n'Oh, no, I don't know. She didn't agree that she would speak to you. She's going to let me know.'\n\n*****\n\n[BECKIE] Hi Peter. If your wife is going to say no, I don't want to meet her. It's nice that she might want to explain, but I would rather you just text back that it's no. Beckie\n\nThe message arrived just as Molly was coming downstairs from having put Katie to bed.\n\n'Beckie just texted,' Peter said. 'And, can I just check, that you know several students have my mobile number, like there are loads, it's not that I just happen to have just Beckie's number.'\n\n'Yes I know. Don't worry. What does she say?' Molly asked.\n\n'She doesn't want to meet you if it's a no. Do you want to read it?'\n\nMolly took the phone and read the message.\n\n'Now what?' Peter asked.\n\n'Text back saying it's not a no.'\n\n'But then she'll assume it's a yes, won't she?'\n\n'Okay. Say we're undecided and would like to talk to her about it.'\n\nPeter paced around the kitchen, before saying, 'but then she may not agree, because it might end up a no.'\n\n'Well, if she does she does,' Molly shrugged, 'or tell her that we're leaning towards yes, but that I want to meet her to completely make up my mind.'\n\n'Then we're setting her up to think it's likely. She'll be more disappointed then if you don't like her.'\n\nMolly shrugged again, 'can't have it both ways.'\n\n'Okay. So keep it simple. Tell her we're undecided?'\n\n'Yep.'\n\n'We're undecided, or you're undecided?' Peter asked.\n\n'We are. It should be a joint decision.'\n\n'Yeah.'\n\nPeter's thumb hovered over his phone.\n\n'If I say this, then she will know that I am actually contemplating sleeping with her,' he looked up at his wife, 'am I?'\n\n'Are you?'\n\n'Yes, but in what feels like a very theoretical way up until now. If I tell her I am, then I kind of am for real.'\n\n'Yep.'\n\n'I could just say, okay it's a no, and that would be it.'\n\n'Uh huh.'\n\n'Do you want to do this? Are we going to do this? Actually. You see I have trouble just saying it! But I've got to. Are we actually considering, the two of us, sleeping with someone else; having sex? I don't know how much of us second guessing each other is affecting what we're saying, if you know what I mean?'\n\n'Why don't we both write down our answer, yes or no, to that question? And then neither of us has to answer first. So we're not influencing each other. If either of us says no, then that's the end of it.'\n\n'Okay.'\n\nPeter ripped a page out of a notepad and then tore it in half. He handed one piece to his wife.\n\n'I've only got one pen here,' he said.\n\n'There'll be a pencil in the living room, I'll go in there,' Molly responded.\n\n'Okay. Stay and write in there. I don't want to try and second guess your expression.'\n\n'Okay.'\n\nShe left.\n\n'And we're going to write honestly,' she called from the other room, 'and not worry about what each other will think of the answer?'\n\n'Okay,' he called back.\n\n'And the question is, are you considering a threesome? Not yes or no to do it, but yes or no to seriously consider actually doing it.'\n\nA tense minute passed.\n\n'How are you getting on?' Peter called.\n\n'I'm done,' Molly called back.\n\nPeter walked into the living room. 'Me to,' he said as he sat down next to his wife on the sofa.\n\n'Swap.'\n\nThey passed their folded notes to each other.\n\n'Okay, go on then.'\n\nThey both opened the notes.\n\nThey had both written yes.\n\nPeter let out a big sigh, 'that was tense.'\n\n'Yeah.'\n\nThe both looked at each other for a moment before Molly said, 'okay, so you're going to text her that it's not a no; we are undecided; and that's why I want to meet her?'\n\n'Right.' Peter confirmed.\n\n'And if she texts back that she doesn't want to meet me?'\n\n'Let's deal with the reply when it happens shall we?'\n\n'Yes. Yes. Go on then.'\n\nPeter typed out the message onto his phone.\n\n'Fucking hell,' he said, and pressed send.\n\n[PETER] It's not a no. We are undecided. That's why Molly wants to meet you, to discuss it.\n\nThey both sat next to each other, fidgeting and looking around their living room for several minutes.\n\n'This is silly,' Peter said eventually, 'she could take any amount of time to reply.'\n\n'Yes. Activity,' Molly said and stood up.\n\n'Yes, I'll do the washing up.'\n\nMolly set about tidying Katie's toys that were strewn across the floor. Just as Peter got the washing up gloves on and the water running, his phone buzzed.\n\nHe pulled the gloves off inside out and dropped them into the wet sink.\n\n'Bugger,' he swore as he pulled his phone out of his pocket.\n\nMolly was at his side, looking at his phone as he opened the message.\n\n[BECKIE] Are you sure she's not going to kill me?\n\n'Say yes,' Molly said as Peter already started typing it.\n\n[PETER] Yes. She is not angry with you at all. She just wants to talk\n\nThey both stood looking at the phone for thirty long seconds.\n\n[BECKIE] Okay. I'll meet her\n\n'Great,' Molly exhaled and put her arm around Peter. He turned and embraced her in a tight hug.\n\nOver the next fifteen minutes, texts buzzed back and forth, as they made arrangements for when and where to meet. They managed to arrange the day after next.\n\nJust when Peter and Molly were concluding that the conversation was done, another message arrived.\n\n[BECKIE] So you are actually considering it then?\n\n[PETER] Yes\n\n[BECKIE] You're amazing. Both of you. Thank you X\n\n*****\n\nChapter 4\n\n'Fuck, I'm nervous,' Molly said as she paced up and down. She was just around the corner from the caf\u00e9 where they had arranged to meet Beckie.\n\n'You'll be fine,' Peter said on the other end of the phone, 'Beckie's nice.'\n\n'Well I should hope so, considering what we're considering,' Molly tried to relieve some tension with humour. Peter laughed obligingly.\n\n'Right, it's time. I've got to go,' she said, 'are you sure about our decision?'\n\n'Yes.'\n\n'It's just it feels like we've gone fairly quickly from agreeing that we will consider it, to actually positively agreeing that we both want to do it. It's only been like a day from one to the other!'\n\n'I'm happy for you to make the final decision,' Peter assured her.\n\n'That scares me though. I don't want to have that responsibility on my own.'\n\n'No. Poor choice of words. I don't want you to feel like it's all your responsibility'\n\n'Hmmm,' Molly murmured.\n\n'Let's summarise what we talked about last night then. We both agree that marriage is about committing to go through life together and enjoying it together. So if we are going to try something new, if we do it together it's a strength of our marriage.'\n\n'Yes.'\n\n'We both think that variety is the spice of life. That variety keeps things interesting. And when it comes to sex, neither of us is unhappy with the other, at all. When it comes to sex, we both acknowledge that changing things about occasionally will keep it fresh and exciting, and as long as we try out new things together our own special intimacy with be maintained, as long as we're honest with each other.'\n\n'Yes.'\n\n'We both accept that being married, and being in love, doesn't make us blind to other people that we find attractive, and attractive in different ways.'\n\n'Yep.'\n\n'So, all of this so far, to me feels like we could have had this conversation, without having been prompted by this thing with Beckie, and we would have come to the same conclusions.'\n\n'Yep.'\n\n'So the new stuff, as it were, that we have learnt, from this situation, is actually that we have discovered, and correct me if I'm wrong, but basically you have discovered, having thought about it a bit, that there is something in you, that you have some element of sexual desire towards women. We are both open to the idea of you exploring this new found aspect of yourself. Is that fair?'\n\n'Yeah.'\n\n'We talked about me, and I don't have any bi-sexual interest. I'm only attracted to women. We talked about you possibly being interested in other men, but that although you find some other men sexy, you wouldn't want to actually act on it, because it would feel like cheating on me. You feel that you having sex with other women wouldn't feel like cheating because it's not as intimate as male-female intercourse. To put it bluntly, it's not like having another man inside you. When it comes to me having sex with other women, I also would not want to act on sexual attraction that I have to other women, because it would feel like cheating on you. But, if you were participating, and I knew you were enjoying it, then me having sex with another woman would be okay. It would be okay because I would enjoy the physical aspect of sex with another woman, because I enjoy variety; and emotionally it would be okay, because you would be attracted to both me and the other woman. So you would enjoying seeing me having fun with someone who you are also sexually excited by. Yeah?'\n\n'Yes.'\n\n'So basically, when we put all the pieces together. You find other women attractive. So do I. We both think variety, along with honesty, will keep our shared sex life alive and exciting. If we share new experiences together, it maintains our relationship and our private intimacy is not challenged. Therefore, it would be okay for us, together, to have a sexual experience with another woman that we are both attracted to.'\n\nPeter took in a big breath.\n\n'Is that where we're at?' he asked.\n\n'Yes, I think so.' Molly replied.\n\n'Where we stand right now then, is I find Beckie attractive and would be happy to share an experience with her and you. So I'm in on the deal, as it were. We don't yet know whether you find Beckie attractive and would want to share an experience. So in that sense, it's down to you to add the final piece of the puzzle, but this does not mean that you are making the decision about the whole thing. It's more like I've already got the info to do my part of the choice, but you haven't.'\n\n'Yes, okay, that makes sense.' Molly replied more confidently.\n\n'I'm happy for you to decide in the moment. Or not. You can always just meet and end it saying we're still undecided. But if you want to go for it and say yes, then go for it. You have my full support with whatever you do.'\n\n'Okay. I'd better go.'\n\n'Okay, good luck. Ring me when you're done. I'm just doing admin all afternoon.'\n\n'Okay. Speak to you later.'\n\n'I love you.'\n\n'I love you too.'\n\n'Bye.'\n\n'Bye.'\n\n'Bye.'\n\nMolly jammed the phone into her pocket and strode around to the caf\u00e9.\n\nPeter had chosen well. It wasn't too busy that she would have to be at a table too near anyone else, but it was busy enough for there to be a good background chatter.\n\nMolly scanned the place and didn't see anyone sitting alone. She went and bought a coffee and then sat at a table that was as secluded as possible, and where she could see the entrance.\n\nTwenty minutes later, she was about to leave, when the door opened and a young woman stepped in. Molly looked her up and down, taking in her whole appearance. She surprised herself at how decisively she found herself hoping that it was Beckie.\n\nThe newcomer looked around the caf\u00e9 and made eye contact with Molly, who gave a small smile. After a moment of hesitation she walked towards the table.\n\n'Are you Molly?\n\n'Yes. Beckie I assume?'\n\n'Hello,' Beckie said and stretched out her hand towards Molly.\n\nThey shook hands; Beckie taking slightly too firm a grip and shaking in a rather businesslike manner.\n\n'Can I get you a coffee?' Molly asked, when she got her hand back.\n\n'No thanks. I'm okay.'\n\n'Okay. Please have a seat,' Molly nodded at the chair opposite.\n\nAs she sat down, Molly imagined she could visually see the confidence evaporate away from this pretty young woman. She sat with her hands under the table and her eyes cast down. Molly could instantly understand what Peter had meant when he described her as having a shy sexiness. She was very pretty; her almond shaped face, with high cheekbones and delicate lips, was framed by a cascade of long, straight hair.\n\nBeckie sat staring intently at the centre of the table.\n\nMolly took a deep breath and said, 'I won't bite.'\n\nLooking up at Molly's warm smile, Beckie let out a small laugh.\n\n'Sorry. I'm a bit nervous.'\n\nMolly was struck by the beautiful, big eyes gazing at her. Accentuated by strong eyebrows, the eyes were deep and bright. They appeared vulnerable and passionate in equal amounts.\n\n'Me too,' Molly replied.\n\n'I never imagined this outcome. From my letter I mean.'\n\n'No! It's a strange new situation for me too.'\n\nThey both smiled at each other.\n\n'I don't really know what to say,' Molly began.\n\n'I'm amazed you wanted to talk to me. I thought you'd be angry,' Beckie said very quietly.\n\n'I'm not angry.'\n\n'I didn't think Peter would tell you.'\n\nBeckie suddenly added, 'though I didn't expect him to cheat on you. I was sure he wouldn't. He wouldn't do that. He's such a nice person. I don't know what I was thinking asking...'\n\n'It's fine,' Molly interrupted, 'I know he wouldn't cheat on me. His initial response was entirely to turn you down. It was me who talked him into considering it, sort of.'\n\nA flash of confusion registered on Beckie's features.\n\n'You're wondering why I would do that,' Molly said.\n\nBeckie nodded silently.\n\n'A friend of mine nudged me to be more open-minded. My initial response had been the same as Peter. Just to say no. But I thought about it a bit more, and discovered that something appealed to me. And I surprised myself to be honest.'\n\nBeckie listened intently. Molly quickly found that she had a very disarming way of maintaining a very intense eye contact.\n\n'So, I skirted around the subject with Peter,' Molly continued, 'and then we just sort of arrived at a similar conclusion. Also, I think I understand how you feel.'\n\n'You do?' Beckie chirped.\n\n'I think so. I was slightly older than you when I had my first time.'\n\n'Really? But you're so pretty?'\n\nMolly leaned in as she said, 'so are you.'\n\nThis caused Beckie to shrink down again. Her eyes dipped back down to the table and the rush of self-consciousness forced a small, nervous smile onto her lips.\n\nA thought suddenly occurred to Molly.\n\n'Beckie. Can I ask you a personal question? Have you had a bad experience with someone? A bad sexual experience I mean.'\n\n'I've never had much luck with boyfriends,' Beckie said with her eyes down, 'that's why I haven't lost it yet.'\n\n'Okay. What I mean is; has anyone ever forced you to do anything you didn't want to?' Molly asked softly.\n\nBeckie looked up.\n\n'No. No nothing like that. I've just had, well, all of my boyfriends, though that makes it sound like I've had loads, and I haven't; they've all wanted to go further than me.'\n\n'Okay,' Molly quietly let out a sigh of relief. 'I'm sorry I had to ask. It just occurred to me, that if you'd had, you know, an abusive experience, that this idea is probably not a good idea.'\n\n'No, I've not had anything like that thankfully. I was trying to think how it's come to this. I think perhaps that, for some reason I got quite a lot of attention from boys from quite an early age, well before I was sixteen, I just formed a habit of saying no. And I'm still saying no. But I can't keep saying no forever.'\n\nAs Beckie rushed through her explanation, Molly could see her eyes glistening slightly brighter with wetness.\n\n'That makes perfect sense. Plenty of girls...'\n\nMolly stopped herself, 'I'm sorry, I meant, women.'\n\n'That's okay. I feel like a girl,' Beckie whispered, and a big tear rolled suddenly down her cheek.\n\n'Oh sweetheart!' Molly exclaimed, instantly feeling her own eyes watering. She pulled her handbag up onto her lap and started rummaging around.\n\n'Here you go,' Molly said as she held out a tissue.\n\nBeckie looked up and blinked; it sent an equally big droplet rolling down the other cheek.\n\n'Thanks,' Beckie whispered as she dabbed her eyes.\n\n'Listen, there are plenty of women, just like you, who've not yet had their first time.'\n\n'I know,' Beckie sniffed, 'I just feel like the only one. And my flatmate shags like a rabbit, and.' Beckie slapped her hand over her mouth.\n\n'Sorry,' Beckie said through her fingers.\n\n'That's okay,' Molly smiled, 'I think we can speak fairly bluntly; given what we're here to discuss.'\n\nBoth women giggled.\n\n'I guess,' Beckie said and then took a few slow breaths, as she calmed down.\n\n'You said you had come to a conclusion?' she continued.\n\n'I did?'\n\n'You and Peter came to a similar conclusion?'\n\n'Oh yes. Erm,' Molly laughed nervously, 'time for me to talk bluntly I guess.'\n\nMolly took a deep breath. She looked at Beckie and then took the plunge.\n\n'Peter and I; would like to say yes to your request.'\n\n'Really?' Beckie's eyes lit up.\n\n'With a few conditions, yes.'\n\n'Okay.'\n\n'Obviously, it stays private. And also, it can only happen once you're no longer a student.'\n\n'Okay. That's okay,' Beckie said excitedly.\n\n'And, there was one other thing,' Molly took another deep breath, 'I want to be there too.'\n\n'Right,' Beckie hesitated, 'you mean?'\n\n'Yes. Because otherwise, it would feel like Peter was doing it behind my back. Whereas if I'm part of it, it wouldn't.'\n\n'That makes sense,' Beckie replied. She thought for a few moments, then continued, 'actually that's good. That's a good idea. I mean it's not what I imagined, but I'm happy with that. It'll be nice to have another woman in the room. Because I'm still a bit nervous, about, like, being in a room with a guy. And he wouldn't just be, like, hoping; he'd be expecting to do it. And if I chickened out, it would be a bit scary. I mean not that Peter would do anything I didn't want, I'm sure. But, do you know what I mean?'",
        "'I do, yes, that makes sense. Though, when I said I want to be there,' Molly hesitated. With a very dry mouth she continued, 'I didn't so much mean, in the same room, as, in the same bed.'\n\n'Oh.'\n\n'Ah, uh, erm,' Molly stuttered.\n\n'Are you? Into that, then?' Beckie asked.\n\n'Well.'\n\n'It's cool. I've got plenty of gay and bi friends.'\n\n'Oh I'm not. Err. Well. I don't really think of myself...'\n\n'So, you want all three of us to...' Beckie finished the sentence with a suggestive nod. At the same time her face grew slowly redder.\n\n'Well. How would you feel about that?' Molly asked.\n\n'Erm. Okay; I think,' Beckie replied.\n\nThe two women sat silently. Beckie twisted the tissue up in her hands and Molly did her best to hide behind slow sips of coffee. Both felt slightly flushed with warmth.\n\nBeckie looked up.\n\n'Will you do something for me, in return?' she asked.\n\n'Ask away,' Molly said.\n\nBeckie rapidly went bright red and cast her eyes around the cafe. She took a notebook and pencil out of her bag, tore a page out and wrote a few words down.\n\nShe slid the piece of paper across the table.\n\nWill you teach me how to do a good blowjob\n\nMolly smiled with surprise as she read it.\n\nShe looked up and said, 'yes. If you like.' She surprised herself at how decisively she said it.\n\nBeckie was still bright red and was chewing her bottom lip. She nodded.\n\n'One of my boyfriends was annoyed; we were kissing and he wanted to go further, all the way, but I said no. He said that the least I could do was give him,' Beckie paused, then nodded down at the paper, 'one of those. But I didn't want to. So I've not done that either.'\n\n'I see.'\n\n'I've only ever seen it in porn and, like, read about it in magazines and stuff. And I thought; I thought it would be a nice thank you for Peter. If you can show me how to do it well.'\n\nMolly laughed, 'you don't need to worry about doing anything to thank Peter. He's going to enjoy himself you know.'\n\n'Only if I'm any good,' Beckie muttered.\n\n'No, sweetheart, you don't need to worry about that. Really. And I'm happy to show you how I do it. Which is certainly not like porn by the way. No-one really does it like that, except in porn. And I'm sure Peter will happily be a guinea pig. What man wouldn't?'\n\n'Okay, thanks.'\n\nThe two women smiled at each other. It was a turning point in the meeting. The moment made them both begin to feel like they were on the same side, and could be friends.\n\n'Erm, Where is this going to happen? Because my flat is, err, quite small,' Beckie asked.\n\n'I don't think we should be at either of our homes. I think that would be too personal. Let's book a hotel room,' Molly replied.\n\n'Okay, yes.'\n\n'And now I tell you what. Why don't we call it a day for now? Rather than start committing to dates and things. Let's just go away and think for a bit. Make sure you're completely happy with what we've talked about. Then we can sort out the details later.'\n\n'Yes, that'd be cool.'\n\nThe two of them started to gather their things.\n\n'Thank you so much Molly. I can't believe how amazing you are,' Beckie smiled shyly.\n\n'Oh, well, I don't know about that,' Molly murmured.\n\n'Peter's really lucky. And me too. You're both so lovely,' Beckie said more confidently, 'what should I say to Peter? Like, I'm going to see him at uni and stuff.'\n\n'Probably don't talk about it at Uni.'\n\n'Yeah, okay.'\n\n'Not that you shouldn't talk to him if you want to of course. About this I mean, but I think it would perhaps be better to phone him rather than talk to him at work.'\n\n'Ha, I don't think of it as at work, but of course it is for him. You're right, I won't say anything.'\n\n'But do call if you want to. Either of us, I'll get Peter to text you my number. I think it's important we all talk about any questions or worries we have, rather than just marching into something that we're a little unsure of.'\n\n'Okay.'\n\n'Okay.'\n\nThey both stood up and picked up their bags.\n\n'Well it was nice to met you,' Molly said, not quite knowing how to round off the conversation. She was surprised as Beckie suddenly stepped forward and hugged her.\n\nThe unexpected embrace surprised Molly and made her acutely aware of the physical contact. As she returned the hug, one of her hands landed on a shoulder blade and the other pressed into Beckie's lower back, just at the point where it began to curve outwards towards her bottom. Molly felt firm breasts pressing against her own, and enjoyed Beckie's delicate, indefinable fragrance as she took in a breath.\n\n'Thank you,' Beckie whispered, and then pulled back from the embrace.\n\nMolly smiled, not knowing what best to say.\n\nBoth of them looked at each other for a moment before simultaneously letting out a small giggle.\n\n'Bye then,' Molly said, 'call me about anything.'\n\n'Thanks.'\n\nThe both walked to the door. Outside, they each instinctively reached out.\n\nTheir hands touched each other's for a brief moment, before they parted and walked away.\n\n*****\n\n'Hi, how did it go?' Peter asked.\n\n'She's lovely,' Molly replied, as she walked back towards the train station.\n\n'She is nice isn't she.'\n\n'She's very beautiful.'\n\n'Nearly as beautiful as you.'\n\n'Good answer.'\n\n'So what happened?' Peter asked.\n\n'We're on.'\n\n'Crikey.'\n\n'I know.'\n\n'So, you said yes? And she said yes?'\n\n'Yep.'\n\n'It's happening.'\n\n'Yep. I said we should both go away and think about it for a bit. But yes.'\n\n'And you said about you being there?'\n\n'Yep. She was a bit unsure at first, but then she came round to the idea. She'll feel a bit safer.'\n\n'Safer?'\n\n'Yes, in case she changes her mind at the last minute. Having me there means you won't pounce on her.'\n\n'I wouldn't do that.'\n\n'I know. And so does she. It's psychological safety.'\n\n'Right.'\n\n'And we did a deal.'\n\n'A deal?'\n\n'Yep. In exchange for me being there. She wants me to teach her how to give a blowjob.'\n\nMolly traveled several more paces.\n\n'Are you still there?' she asked.\n\n'Yes.'\n\n'Are you alright with that?'\n\n'Yeah, I guess.'\n\n'I didn't think you'd mind?'\n\n'No, I mean, of course not. Considering what else we're planning, that's like, yeah why not! I think it's just hit me.'\n\n'That we're actually really going to do it?'\n\n'Yeah. I mean having a threesome is one thing. I've never experienced that before, so thinking about it happening is completely abstract. Whereas I have experienced a blowjob, obviously. It's much more real. So thinking that Beckie is going to give me a blowjob is so much more real. Or really imaginable. It's made the whole thing hit me.'\n\n'I see what you mean,' Molly replied, 'I don't think it's hit me yet. Well, it sort of did in the caf\u00e9, but it kind of comes and goes.'\n\n'Yeah.'\n\n'We can still pull out.'\n\n'Yeah.'\n\n'Do you want to? Is it too weird?'\n\n'No. Erm. I just need to think a bit. In the mindset of reality.'\n\n'Okay. I'm just about at the train station. I'll see you later.'\n\n'Yeah okay.'\n\n'Alright, bye then.'\n\n'Bye.'\n\n'Bye.'\n\n*****\n\nChapter 5\n\nPeter and Molly talked about the arrangement on and off for the rest of the week. They both went up and down with how they felt about the situation. Friday evening came and both had gone up to bed fairly early. They had naturally adopted their usual cuddling position; Peter on his back and Molly lying on her side, pressed up against him. Both were naked; Peter had one hand resting on his wife's bottom, whilst Molly had a hand gently holding her husband's penis. The couple were comfortable sharing intimate sexual contact in this way, with neither of them feeling pressured to go any further. They often cuddled like this in the mornings, for a few minutes before getting up, or in the evening when neither of them had the energy or desire for more animated sexual activity. It was not unusual for one or both of them to fall asleep holding each other.\n\nAfter a few minutes of peaceful contemplation, Peter whispered, 'Molls, can I talk to you about something?'\n\n'Yeah,' she replied.\n\n'You have to promise you won't laugh?'\n\n'Okay.'\n\n'It's about Beckie, and, you know.'\n\n'Yeah.'\n\n'What if. Erm. When we're together,' he hesitated.\n\n'Yeah?'\n\n'What if I last, like, three seconds?'\n\nMolly was glad they had already turned off the lights. It hid her smile.\n\n'I don't think that'll happen,' she whispered.\n\n'Hmmm.'\n\n'You don't have that problem with me,' she said, and affectionately stroked his penis.\n\n'No but it's a bit different isn't it?'\n\n'I think you'll be fine.'\n\n'It's just with both of you there,' Peter continued.\n\n'Hmmm.'\n\n'Well, you know, with two women at the same time. I might get over excited.'\n\nMolly felt Peter's penis slowing swell under her hand. She resumed, almost reflexively, softly stroking up and down the length of it as she said, 'I think the situation will be so unusual, that it'll be enough of a distraction to not get too carried away too soon.'\n\n'Hmmm,' Peter murmured. 'Either that or I'll be so freaked out that I won't be able to get it up at all,' he added a moment later.'\n\nMolly let herself chuckle out loud this time.\n\n'That definitely won't be a problem. Even if it is at first, you won't be able to stay calm with both of us girls working our charms on you,' Molly said reassuringly, before cheekily adding, 'and if it takes you a while to, ahem, rise to the occasion, Beckie and I will amuse ourselves for a bit.'\n\n'Oh you will will you?' Peter asked. 'With a game of backgammon or something?'\n\n'Hmmm, no. I was thinking more about the two of us taking a shower, and getting each other all soapy and slippery.'\n\nPeter's penis swelled rapidly.\n\n'Oh I see. And I'll just have to sit quietly on my own will I?' he retorted, giving his wife's bottom a squeeze.\n\n'No. If you're good, you can watch us in the shower. After you've watched us both strip off that is,' Molly replied coyly.\n\n'Oh you are kind. Well I'm sure I'll be fine then.'\n\n'Actually, I've an idea' Molly interjected, 'in all seriousness; why don't we do the blowjob lesson first?'\n\n'Right?'\n\n'If Beckie gives you a blowjob and you cum quickly, we'll say it's because she was so good at it. It'll boost her confidence. Then you can have some recovery time, and then you last much longer if you've just cum recently. Also, if you do go the other way with the pressure of it, though I don't think you will, but if you take a while to get turned on, then that's fine too. It will give me plenty of time to show Beckie all different ways of licking you and sucking you...'\n\n'Molly, do you want to slow down a bit?' Peter asked between a couple of deep breaths.\n\n'What?'\n\n'You're, stroking me quite a bit.'\n\n'Oh,' Molly said, she realized that Peter's erection was now rock hard in her hand and that she had been absent-mindlessly stroking it whilst they talked. She stopped and held still. 'Sorry, I got carried away.'\n\nShe felt Peter's pulse, throbbing through his cock.\n\n'Were you thinking about Beckie?' she asked.\n\n'Errr.'\n\n'Were you imagining her giving you a blowjob?'\n\nShe felt him slightly tense up.\n\n'Molls.'\n\n'It's okay,' she said as she pressed her body more firmly against his, 'it's fine.'\n\nMolly started sliding her hand up and down Peter's erection again, as she slowly whispered into his ear, 'are you thinking about us both kneeling in front of you? I'll be telling her what you like. She'll be licking you. She'll be licking this.' Molly gave his cock an extra firm squeeze.\n\nMolly was again glad of the darkness. She had never talked so explicitly before and could feel herself blushing slightly as she did it. In a way she wanted to test her own emotional response, as she tried to vividly imagine watching another woman having such intimate contact with her husband.\n\n'I'll tell her to lick these too.' Molly danced her fingertips across Peter's balls, making him twitch.\n\n'I'll tell her to hold onto your cock, to hold you still.' She took a firm hold on his erection and angled it slightly downwards to apply a little pressure.\n\n'I'll tell her to hold you still, like this, while she runs her tongue over you. It'll be hot and wet and slippery.'\n\nMolly felt herself become increasingly aroused as she pictured the scene in her mind, and surprised herself with how erotic it felt. She slid her spare hand between her legs and cupped it over her vulva.\n\n'I'll be watching her do it,' Molly continued to whisper. She held Peter absolutely still with one hand and, with the other, began gently circling a finger around her clitoris.\n\nPeter had always tried to encourage his wife to touch herself more whilst they were making love, but she rarely did. He had often longed to see her squeeze her breasts or rub her clit. With her pressed up against him now he could sense the motion of her hand between her legs and feel the quickening of her breath. He realised what she was doing and his mind swirled in a blurry mix of fantasy and reality. His wife was talking dirty like she never had before and was masturbating as she described another woman giving him a blowjob. In his minds eye, Peter drew on memories of Beckie's firm, fit body and imagined how she would look naked as she knelt in front of him. He painted the scene with his wife kneeling naked alongside and wondered if she would touch herself again as she watched and issued instructions to their mutual student.\n\n'I'll tell her to stroke your balls with her other hand,' Molly continued to whisper between increasingly short breaths. She maintained her grip on Peter's erection and felt a bead of his pre-cum trickle down over her thumb.\n\nPeter gritted his teeth. He was hanging on the edge of an orgasm and felt the pressure building in the root of his cock.\n\nMolly tried to hold him still, but as she increased the speed of her own masturbation, her fist began to bob fractionally up and down his erection.\n\n'She will take you into her mouth. She might look up at you with those big beautiful eyes as she sucks the end of your cock.'\n\nPeter grunted as his cock throbbed and fired off a jet of cum. Molly began pumping him as she felt her own orgasm rising to the surface.\n\n'She'll keep sucking you as you cum. She'll feel your balls tighten in the palm of her hand.'\n\nPeter let out a load groan as the second contraction thrust out another spurt of cum.\n\nThe guttural noise of it tipped Molly over the edge. Her orgasm flooded through her and she rubbed her clitoris hard between her fingers.\n\nPeter's back arched as Molly pumped his cock hard through another three orgasmic contractions. She suppressed a yelp as her orgasm peaked. Peter had to reach down and grab her hand to hold it still, as she was tugging his cock so hard he could no longer take the over-stimulation.\n\nMolly moaned through the rest of her orgasm. She gradually eased off the speed against her clit and switched to long, firm strokes across her vulva. Peter held her tight with his arm wrapped around her and hand firmly squeezing her bum. His other hand held over the top of hers as she clasped his fading erection.\n\nThe couple gradually recovered their senses and calmed their breathing.\n\n'Good grief,' Peter eventually whispered.\n\nIt made Molly giggle. She pecked a kiss on his cheek and replied, 'this adventure is going to be fun.'\n\nThere held each other for a long time, before finally drifting off to sleep.\n\n*****\n\nOver the next couple of weeks, Molly and Beckie communicated a lot by text message. Initially, Molly asked if Beckie had had any second thoughts, to which the answer was no. So between them they set about arranging when and where their adventure was going to take place. They settled on a beautiful hotel and restaurant, having decided that it would be nice for the three of them to have dinner together first, before going up to the room. Molly booked two rooms, with an interconnecting door, so that anyone could back down and have somewhere private to retreat to if necessary. They were lucky to find they could book for a Saturday night that was after Beckie had ceased to be a student, but before she moved away; and also at a time when neither woman would be on her period. They were both on the pill, so thankfully had regular, routine cycles. Katie would stay with Molly's parents, under the excuse that the couple were going to the theatre and had decided to treat themselves with a hotel stay over.\n\nAt university, Peter and Beckie continued to run into each other, but didn't make any mention of their arrangement, other than a through a few blushing cheeks from both parties.\n\n*****\n\nChapter 6\n\nA couple of weeks before the date, Beckie had asked if Molly would like to go shopping with her; having noticed that the restaurant was quite fancy, she had decided to buy a new dress.\n\nThey met at a pre-arranged place, at an entrance to one of the big shopping centres in town.\n\nAs Molly approached the meeting place, she spotted Beckie sitting on a low wall, just outside. She also noticed the number of guys whose heads turned, to stay locked onto Beckie, as they walked past. Beckie was the epitome of street style chic, wearing chunky shoes along with form hugging jeans, strategically ripped at each knee and in one small patch, high up on the front of one thigh. Her upper half was encased in a tight, plain T-shirt and a tiny denim jacket, which came only half way down her back, accentuating the curve of her waist and hips. The look was completed by a pair of large sunglasses, pushed up on her head to hold back otherwise loose hair that flowed gently in the breeze.\n\nBeckie had not seen Molly approach through the crowd until she was just a few steps away. She smiled and jumped up to greet her when she noticed her final approach. The two women leaned in, intending to kiss cheek to cheek, but in the fluster of standing up and the angle of approach, Beckie leaned in the same direction as Molly. Their noses bumping together only just prevented their lips from meeting.\n\nThe two of them snapped their heads back reflexively and locked eyes.\n\nThe moment seemed to hang for an eternity.\n\nMolly's maturity gave her the edge in recovering from the social awkwardness.\n\n'Give me a hug,' she said cheerfully, and drew Beckie towards herself.\n\nThey hugged briefly.\n\nAs they separated, Molly theatrically flicked her eyes side to side and covered her mouth as she said, 'I don't think anyone noticed.'\n\nBeckie laughed and Molly smiled. The tension melted away.\n\n'I love that dress,' Beckie began.\n\n'Oh, thank you. I've had it ages actually.'\n\n'And those shoes are amazing.'\n\n'Thanks. I found these last holiday, and they're even super comfortable.'\n\n'Cool.'\n\n'Shall we hit the shops?' Molly asked, with an extra strong push of enthusiasm.\n\n'Yes, let's do it.'\n\n*****\n\nThey spent the next couple of hours exuberantly buzzing from shop to shop. It was a great way to bond and get to know each other. They discovered they had very similar tastes and were soon relaxed, chatting and laughing like friends.\n\nA couple of hours later, in a large department store, they hit lucky and found three possible outfits. One was a yellow peplum dress, with thin black stripes, horizontal across the bodice and vertical down the skirt. The second was a rich blue, asymmetrical midi dress; tailored to be a close fit around the torso and then float out freely around the legs with a generously cut flounce. The third was a burgundy red, embroidered lace shift dress, with black lining.\n\nThe two of them headed towards the changing rooms so that Beckie could try them on. Their route inadvertently took them through the lingerie section.\n\n'Molly. What should I wear underneath?' Beckie stopped and asked.\n\n'Whatever you're comfortable in,' Molly replied after a moment of hesitation.\n\nThe question had slightly disarmed her, as the relevance of it struck. The reality of their plan rose to the surface.",
        "'What would Peter like?' Beckie asked.\n\n'Erm. In general, he likes what I would describe as pretty underwear, that's fairly simple. He's never shown particular interest in stockings and suspenders and corsets and all that.'\n\n'Can we have a look around here for something?' Beckie cast her eyes around the aisles of lingerie.\n\n'Yes, if you like.'\n\nThey spent a bit of time browsing before selecting two bra and knickers sets, then continued towards the changing rooms.\n\nAt the entrance, the attendant asked, 'how many items please?'\n\n'Three of these,' Beckie held up her arm that carried the dresses, and then gestured to her other arm holding the undergarments, 'and two of these.'\n\n'Excellent. This way please. If you would like to try on the knickers, please do so over the top of your own underwear,' the attendant said as she led Beckie towards a free room.\n\nMolly stayed in the waiting area and smiled politely at the attendant when she returned.\n\nA few minutes later, she heard Beckie call, 'Molly. Can you come and look?'\n\n'Is that okay?' Molly asked the lady.\n\n'Of course,' the attendant said and waved her through.\n\nMolly walked down the aisle, past several closed doors before she found the open one with Beckie inside. She was modeling the blue dress.\n\n'What do you think?' Beckie asked, and slowly turned on the spot.\n\n'Very nice. It's a lovely shape and the colour really suits you.'\n\n'I like this one,' Beckie confirmed, 'Just a minute, I'll try the other.'\n\nBeckie closed the door. Molly stepped to one side of the aisle as the attendant led another customer to a room further down.\n\nA couple of minutes later, the door opened a crack and Beckie peeped out to see if Molly was still there. Seeing that she was, Beckie opened the door fully and revealed the red dress. She turned slowly on the spot again, alternating between looking in the mirror on the back wall of the room and towards Molly for a reaction.\n\n'I'm not so keen,' Molly said after a moment.\n\n'No, me neither,' Beckie smiled.\n\nMolly smiled back, relieved that she had got it right.\n\n'Right. Next,' Beckie said and pushed the door shut again.\n\nAnother couple of minutes and the door opened a crack again.\n\n'Is there anyone else out there?' Beckie asked.\n\nMolly looked up and down, 'not at the moment.'\n\n'Okay, shout if you see anyone coming.'\n\nMolly caught her breath as Beckie opened the door. She stood in nothing but bra and knickers. One of the sets she had taken to try on.\n\nMolly said nothing as her eyes rolled up and down Beckie's mostly naked body.\n\n'What do you think?' Beckie asked with a strong tone of nerves.\n\n'Sorry,' Molly stumbled, 'I was expecting the yellow dress.'\n\n'Oh, I tried that on first, but it didn't fit at all.'\n\n'Ah, someone's...' Molly suddenly tipped her head in a couple of short nods down the aisle; indicating there was someone coming.\n\nBeckie swung the door closed rapidly.\n\nWhen the other woman had passed, Molly gently knocked.\n\nBeckie stayed tucked behind the door as she opened it and said, 'why don't you come in; there's more space in here than out there anyway.'\n\nMolly stepped into the changing room, and Beckie closed the door and locked it behind her.\n\n'So what do you think of this set?' Beckie asked as she turned back around to face Molly.\n\nMolly's heart thudded in her chest. Confined in the small room, she was trying to focus on the lingerie, but her eyes were disobediently roaming across the expanse of skin on display.\n\nBeckie's legs were long, slender and smooth. Her thighs in particular could have come directly from the pages of a fashion magazine; including the immensely desirable gap between them, just below the pelvis. Her stomach was a flat expanse of toned skin, with just a hint of the abdominal muscles that crisscrossed under the surface. Elegant arms were connected by delicious collarbones, that in turn, drew the eye upwards along Beckie's long, graceful neck to her beautiful face.\n\n'Erm. Very nice. Comfortable?' Molly asked.\n\n'Yeah, okay. Will Peter like this?\n\n'I'm sure he will,' Molly replied.\n\n'Okay. I'll try the other set.'\n\nWith that, Beckie reached a hand up behind her back, and fiddled with the clasp.\n\nMolly panicked. Should she look away or turn around. Beckie was between her and the door, and she made no signs of moving aside.\n\nA moment later, the bra was unclipped and Beckie slid it fluidly down her arms.\n\nMolly couldn't help herself. Her eyes locked onto the naked breasts that had been exposed in front of her. Each was a perfect dome of flesh, punctuated by a dark pink, circular nipple. They were slightly larger than her own and Molly instantly found herself imagining how soft and firm they must feel.\n\nIn the next instant, Beckie hooked each of her thumbs into the knickers and swiftly slid them down her legs, doubling right over, down to the floor with them.\n\nMolly's breath caught in her throat. She quickly gave a small cough, hoping to hide the gasp she felt sure Beckie would have heard.\n\nAs Beckie stood back up to standing straight and flicked her hair back over the top of her head, Molly saw that the girl was wearing a small pair of white knickers; her own underwear that she had kept on underneath the lingerie.\n\nMolly instantly surged with relief, followed rapidly by a guilty disappointment.\n\nA quick sidelong glance into one of the room's mirrors confirmed to Molly that her cheeks were indeed as red as they felt. \n\nBeckie turned and sorted through the garments that were hanging on hooks on the back of the door.\n\nMolly's eyes followed the waterfall of long, straight hair that flowed down Beckie's back and contrasted with the curves of her body as they swept in at the waist and back out at the hips. The hair fell between delicate shoulder blades and down; the very ends reached just far enough to dangle between the two dimples on her lower back. The knickers turned out to be a thong, which drew a thin white line between her buttocks, disappearing between her legs and leaving the unblemished curve of each cheek bare to the eye.\n\nMolly had never consciously looked at another woman lustfully before, but now, with a stunningly beautiful and practically naked girl in front of her, she felt her own body respond with sexual arousal.\n\n'Good job it's warm in here,' Molly quipped, hoping to present an excuse for her flushed appearance.\n\nBeckie looked round and smiled sweetly before bending over to step into the next pair of knickers. Molly's eyes bored into the little triangle of white fabric that became visible between Beckie's legs.\n\nBeckie pulled the knickers up past her calves, across her thighs and over her bum, then settled the fabric around her hips. Still facing the door, she reached forward and took the matching bra and slipped it up over her shoulders.\n\n'Could you do me up?' she asked over her shoulder.\n\nMolly felt like the walls were closing in. She had no escape.\n\nShe stepped forward and tentatively took hold of the bra's clasps. Beckie swept her hair over her shoulder to clear the way.\n\nMolly's fingers brushed against the girl's back as she fastened the bra. The skin was so soft and warm to the touch. She felt an almost unstoppable urge to run her fingers down along the length of Beckie's spine.\n\nBeckie turned on the spot and looked a little surprised to find Molly still standing so close.\n\n'Sorry,' Molly muttered and hurriedly stepped backwards.\n\nBeckie held her arms slightly out; gestured at the lingerie she was wearing and gave a small smile.\n\nSuch an innocent smile, Molly thought, knowing that her own eyes, flicking from cleavage to crotch, were paying little attention to the lingerie, but rather more to the contents within.\n\n'Beautiful,' Molly stated.\n\n'This set?' Beckie asked.\n\n'What do you think?'\n\n'I think the blue dress, and this set matches it nicely.'\n\n'I agree.'\n\nBeckie beamed a dazzling smile. Molly smiled too, as her eyes continued to wander across Beckie's body.\n\n'Brilliant,' Beckie concluded. She paused momentarily, looking at Molly, before spinning back around on the spot, 'can you undo me?'\n\n'Ah, yes,' Molly stepped forward again, tearing her eyes off Beckie's thighs. She fiddled with the clasp; bumbling clumsily as she felt her fingers brush against the girl's skin again.\n\nWith the bra unclipped, Beckie suddenly reached behind her and managed to catch hold of Molly's wrists. Beckie pulled the other woman's hands around herself and pressed them flat against her tummy. She then slid the hands up her torso and onto her breasts, beneath the loose cups of the bra.\n\nMolly was frozen with surprise. Her heart pounded as she stood behind Beckie, reaching round and cupping her breasts. Each bosom filled her hands and was as full and firm and soft as Molly could have imagined.\n\nMolly felt her own nipples pucker up into tight little buds and she felt the wetness between her legs begin to seep into her underwear.\n\nSeveral seconds passed.\n\nNeither woman moved, until Beckie whispered, 'I'll get dressed now.'\n\nMolly realised in a sudden snap that Beckie was no longer holding her wrists. The younger woman's breasts bounced slightly as Molly suddenly released her hold on them. She withdrew her arms and stepped backwards until she bumped into the back wall of the changing room.\n\nBeckie casually put her own clothes back on. When she was fully dressed again, she turned around to face Molly. She was stood with her back to the wall; one arm wrapped tight around her waist and the other raised, with her hand clasped over her mouth. She was a fiery red colour and her eyes were focused on the floor.\n\n'You okay?' Beckie asked.\n\n'Yes.' Molly's eyes snapped up to meet Beckie's. She could not manage any more words.\n\n'You looked like you wanted to,' Beckie shrugged. 'I had a girlfriend at school; who came out to me. She used to look at me the same way you were.'\n\n'Beckie, I'm so sorry, I didn't mean to...' Molly spluttered.\n\n'It's okay. I don't mind,' Beckie interrupted. 'It's men I find scary,' she grinned.\n\nMolly let out a little laugh. It relieved some of the tension.\n\n'Jenny and, that's the girl from school, we fooled around a bit,' Beckie continued, 'nothing serious; just messing about. I know I'm not gay, but, well, I can sort of see the appeal.'\n\nMolly didn't know what to say.\n\n'Does Peter know you're bi?' Beckie asked.\n\n'Oh, erm, no. I mean; I don't even think of myself as, bi. I hadn't even thought about it until your letter. You think I'm bi?'\n\nBeckie shrugged.\n\n'I don't really know how I feel,' Molly whispered.\n\n'Well, you clearly love Peter.'\n\n'Yes, I really do.'\n\n'And, do you, like, have sex with him?'\n\n'Yes,' Molly blushed.\n\n'Cool. And you enjoy it?' Beckie asked tentatively. 'Or is it just like, because you're married?'\n\n'Oh no, it's great. Peter's amazing.'\n\n'Cool,' Beckie nodded, 'but you also, quite like, me?'\n\n'Yeah,' Molly barely whispered, and a small tear rolled down her cheek, 'what do I do?'\n\n'Oh Molly!' Beckie rushed forward and hugged her.\n\nMolly sobbed a bit, and then burst out laughing and said, 'I don't even know why I'm crying. I'm just a mess of muddled up emotions.'\n\n'It's okay,' Beckie said, patting her back. 'Do you want to call this thing off?' she added.\n\n'No,' Molly pulled away to look Beckie in the eye, 'no I don't.'\n\n'I would understand. I'm amazed you even considered it in the first place.'\n\n'Do you think I'm bi-sexual?' Molly asked earnestly.\n\n'I don't know,' Beckie began, 'you're clearly in love with Peter. Anyone who listens to you talk about him could tell that. But then you also have; an interest, shall we say, in girls. But who cares what it's called? Why label? Just be whoever you are. You clearly have a relationship, with Peter, that's strong enough for you to experiment a bit, and keep learning about who you are, and what you like. And that's good isn't it?'\n\nMolly blinked through teary eyes before saying, 'if I could think of way of saying it, without being massively patronizing, I'd say you're incredibly wise for someone your age.'\n\n'Oh, no, I'm not. I have my own hang-ups. A major one of which you know about,' Beckie laughed, 'otherwise we wouldn't both be in this room together!'\n\nBoth of them laughed.\n\n'Well we have a dress,' Beckie said cheerfully.\n\n'And some nice knickers,' Molly added.\n\n'Then the world can't be too bad. Shall we go buy them? Then, lunch?'\n\n'Right.'\n\n*****\n\nChapter 7\n\nThe night before the momentous day, Peter and Molly lay in bed together.\n\n'Nervous?' Molly asked.\n\n'Very,' Peter replied.\n\n'Me too.'\n\nThey held each other close.\n\n'Cold feet?' Molly asked again.\n\n'No,' Peter replied after a short pause, 'tempted, but no. You?'\n\n'No. Beckie said something very lovely when we were out shopping. Well, a couple of lovely things actually.'\n\n'Oh yes?'\n\n'She said people shouldn't worry about labels for what they are and should just be.'\n\n'She's a clever girl. I'm going to miss her as a student.\n\n'Uh huh.'\n\n'We've had some great discussions. Deeply philosophical at times.'\n\n'She also said how obvious it was how strong our relationship is.'\n\n'I think it is.'\n\n'Me too. I love you.'\n\n'I love you too.'\n\nThey both slightly shifted their hands on each others bodies and pulled each other tight for a moment.\n\n'Silly question,' Peter began, 'what are we actually going to do tomorrow? I mean; have dinner, go up to our room, all together, walk into the room, and?'\n\n'I don't know,' Molly half giggled.\n\n'Not just me then?'\n\n'Nope. I guess we'll just have to find out tomorrow.'\n\n*****\n\nChapter 8\n\nBeckie stepped out of the taxi and looked up at the grand, imposing fa\u00e7ade of the hotel. She took a deep breath and walked towards the giant, brass edged, glass doors. A smartly uniformed man nodded politely and effortlessly drew one of the doors open for her as she approached. As she stepped into the lobby her heart fluttered. She scanned the large interior space, seeing several people moving about, and some waiting, standing or sitting. She could not see Peter or Molly.\n\n'Good evening.'\n\nBeckie jumped. She had not noticed another smartly dressed member of staff approach her.\n\n'Sorry, ma'am. I didn't mean to startle you,' the man said.\n\nBeckie smiled and whispered 'that's okay.'\n\nThe gentleman smiled warmly and nodded slightly, 'good evening ma'am.'\n\n'Hello, erm, good evening.' Beckie felt like she must be bright red.\n\n'May I be of assistance?'\n\n'Oh, I'm, meeting friends here. I mean, I'm staying here, tonight,' Beckie's mouth had gone completely dry.\n\n'Miss Leemoth?' the man asked.\n\n'Yes,' Beckie replied, slightly taken aback.\n\n'Mr Brayshaw and his wife are waiting for you in the bar. May I take your bag?' he held out his hand.\n\n'Oh, yes, I need to check in.' Beckie was clinging to her small bag with both hands. The bag only contained a change of clothes and some overnight things, but she felt the need to hang onto something solid.\n\n'Mr Brayshaw has taken care that.'\n\n'Oh.'\n\n'I will have your bag taken up to your room?'\n\n'Sorry,' Beckie let out a half laughed breath, 'I'm not used to staying in such nice hotels as this.' She handed the bag over\n\nThe concierge smiled warmly, 'I'll show you to the bar.'\n\nAs they crossed the lobby, Beckie barely noticed her bag being handed to another member of staff.\n\n'You're having dinner here?' the concierge asked; knowing full well they were.\n\n'Yes,' Beckie replied.\n\n'Splendid. I'm sure you will enjoy it. Our chef has created an excellent summer menu.'\n\nBeckie smiled.\n\nThey entered the bar lounge. The concierge took a moment to ensure Beckie had spotted Peter and Molly at the bar before saying, 'good evening ma'am. I hope you enjoy your stay.'\n\nBeckie turned to him and smiled gratefully.\n\nHe nodded and departed back towards the entrance.\n\n*****\n\nPeter noticed Beckie, framed in the large marble archway entrance. Her long hair was held in elaborate loops and curls, with a single, long tress cascading down over the front of one shoulder. She wore a long, rich blue dress, which looked like it had been made for her. The way it fitted and enhanced her form was magical. The outfit was completed by a pair of silver heels; not toweringly high, but delicate and graceful.\n\nPeter held up a hand in greeting and Beckie began to make her way across the lounge. His eyes were fixated upon her. Half way across the room, he remembered his manners and stopped staring at the hourglass shape made by her breasts, waist and hips and held his eyes up, focused on her face. This did little to reduce his sense of voyeuristic scrutiny. Her features were breathtakingly beautiful. Her hair, her heart shaped face, delicate lips and large eyes, all combined to devastating affect.\n\nMolly smiled warmly as Beckie approached. The two women greeted each other first with an easy cheek to cheek kiss followed by a light hug.\n\nPeter's greeting was somewhat less fluid as he floundered between kissing, hugging and shaking hands. He cursed himself inwardly as he finally decisively leaned in to kiss Beckie's cheek. As he did so, his peripheral vision took in her graceful neck and collarbones, and he breathed in her delightful fragrance.\n\n'Would you like a drink?' he asked.\n\n'Yes, please. Could I have a white wine?'\n\n'Of course.' Peter was grateful for having a task to do.\n\n'Congratulations,' Molly squeezed Beckie's hand, 'you're a graduate now.'\n\n'Yes. Thank you. It's weird,' Beckie smiled.\n\n'What was your classification?'\n\n'Oh, well, I got a first,' Beckie replied modestly.\n\n'Of course you did,' Peter added as he handed her a glass of wine.\n\n'Thank you. Mostly thanks to you.'\n\n'Nonsense. That's the teachers' oldest deceit. If a student does badly they say, there's no helping some people, but if the student does well they take all the credit. I think it's got almost nothing to do with me.'\n\n'No, everyone says they couldn't have done it without you,' Beckie responded earnestly.\n\n'Ah, well, I...'\n\n'Don't flatter him too much,' Molly interrupted, 'or his head will grow to intolerable proportions.'\n\nBeckie grinned, 'I thought that was his brain.'\n\n'Ahem. I am still her ladies,' Peter smiled broadly.\n\nThey spent the next fifteen minutes or so chatting, mostly about Beckie's new job and what it involved, before moving through to the dining room for dinner.\n\nThey enjoyed a magnificent meal, with masterfully crafted main dishes, followed by petite, but luxuriously delicious desserts. All the while, they chatted freely across a range of topics, from education to art to world events. They laughed and talked without any thought but to good company.\n\nAfter the dessert dishes were cleared, the sommelier approached and asked if anyone would care for another drink.\n\n'No, but I could manage a coffee,' Peter requested and looked to the two ladies, who both nodded in agreement.\n\n'Certainly.'\n\n'Actually,' Molly suddenly said, 'could we take coffee in our room?'\n\n'Of course ma'am,' the sommelier replied. 'When you are ready, David will show you to your room,' he added and politely gestured to a member of staff standing near the doorway.\n\n'Thank you,' Molly waited a moment as the man departed, before saying, 'I thought it might be nice to relax with coffee by ourselves.'\n\nThe implications of adjourning to bedrooms were suddenly starkly clear to everyone. It dramatically changed the mood.\n\n'Good idea,' Peter put on a smile, 'these chairs are beautiful, but are a bit stiff backed aren't they.'\n\n'Yes, and I've chosen shoes that are also beautiful, but not all that comfy,' Molly quipped.\n\nBeckie remained quiet.\n\n'I booked two rooms, with adjoining doors,' Molly stated what everyone already knew, 'the photos on the website look beautiful. I hope they weren't photoshopped.'"
    ],
    "authorname": "Paul_Clowell",
    "tags": [
        "student",
        "virgin",
        "blowjob",
        "wife",
        "lesbian",
        "bi-sexual",
        "exposure",
        "first time",
        "explicit"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/what-do-i-do-3"
}