{
    "title": "The Fishing Trip",
    "pages": [
        "I want to Thank Nouh Bdee for all of the time  he provided in editing this story for me and for all the advice and insights he provided!\n\nIt was a beautiful morning: the sky was that Colorado Blue without a single cloud, the air was warm for this time of year and as I walked back to my apartment, I was on top of the world.\n\nMy name is Noah Conway. I had just completed my last final of my Junior year. More than a year ago, I had planned out how I was going to schedule my classes this year so that I would be finished with all my finals by Wednesday of finals week and then I was going to head off to the mountains for a fishing trip. I was now walking back to my apartment to do just that.\n\nWhile studying for the finals and taking some breaks, I packed up my camping and fishing gear so that once I finished with the finals, I could pack up any last minute things, grab some fast food and some ice and a package of hamburger and hit the road west.\n\nWhen I entered my apartment Tom, my roommate, greeted me with sleepy eyes, still dressed in his night clothes. He did not have any finals today until sometime this afternoon. Tom said,\"Are you really going to go fishing without me?\"\n\nI said \"Yeees. We had talked about this several times already.\" I said \" Your last final is late on Friday. I did that last year and is why I planned this Springs final schedule so carefully. I want some time to commune with nature before having to get back for my summer job!\"\n\nTom's response will not be repeated here.\n\nIt took me about 20 minutes to grab my last minute things: camera, fly rod and reel, my fly boxes, and cooler, and of course listen to Tom's moaning. I placed them all in the car and began my trek.\n\nI first stopped at a grocery store to get some ice, hamburger, bacon, eggs and a last minute splurge: a 6 pack of beer. I was going to have to limit my intake of beer on this trip, not for any reason other than I did not want the weight in my backpack. The way it was, my backpack was going to weigh over 40 pounds, not a pack that I would want to carry very far.\n\nI then drove through a fast food place for a quick meal--ya you know the one--and turned west toward the mountains. My plan was to drive to a remote stream I had come across last summer when, at the time, I did not have time to explore. The stream at the road crossing was at about 8000 ft elevation and went up from there. When I found it, I had stopped to look it over.\n\nI saw several trout in the time I was looking and I turned over several rocks to see what the insect population was like. There were quite a number of Caddis larva, mayfly nymphs and the ever present midge larva. My analysis suggested this would be a great place to spend a few days fishing, camping and hiking.\n\nI drove west and up. The tree population began to increase and to change. The Aspen were budded up with lots of leaves, their catkins ever present, then the evergreens began to become the dominant plant. The smell of pine was refreshing and stimulated my excitement. Ponderosa, Spruce and Lodgepole were growing tall and casting shade.\n\nI was a bit concerned about having time to pack in away from the road. I was hoping that two to four miles in I would be able to set up camp and to cook my special dinner before it got too dark. As the elevation got higher, the roads became more winding and my speed had to drop to accommodate. I really, really wanted to get there in one piece.\n\nFinally, I arrived and was able to find a parking place well off the road. I did not want my car clipped by some wandering driver. I moved the meat from the cooler into my backpack, put the six pack in there too, and began to hike up the stream.The insects were singing their evening song.\n\nAfter hiking about an hour, I decided that this location would have to be good enough.I was feeling stressed about the light running out. I stopped at an open area with room enough to set up my tent. I built a fire far enough away from the tent so that it would not be damaged or possibly catch fire from a spark. I set the tent and my sleeping bag on my ground cloth with the idea of keeping them dry.\n\nI removed the hamburger from the pack along with the prepared ingredients for my dinner. I took the beer to the stream to cool it. The water is melted snow so the beer should cool down quickly. I gathered some stones to make a fire circle and cleared out an area around the circle to prevent the fire spreading. I built a fire in the ring to build up a sufficient supply of coals to cook my meal.\n\nOnce the fire was going, I used downed aspen logs for my fuel source. They burn fast and hot. The problem can be that they burn too hot to cook with, but I would take that chance tonight; I was running out of light. I then opened my aluminum foil packet that contained my preparations for this meal. This would be my last non-freeze dried meal unless I caught some Brook Trout to eat. Of course, I was not counting the bacon and eggs for breakfast; that is a necessity.\n\nWhen I catch Rainbow or Cutthroat I always release them. Most of the time I release Brook Trout when I catch them, unless I'm camping. Brook Trout are an invasive species in these mountains so I favor their removal, but they are the most wonderful tasting fish I have ever eaten. Actually, Rainbows are invasive too, but I have never found their taste to come close to the sweetness of a brookie.\n\nGetting back to my meal preparations, I opened the foil packet that contained seasoned carrot slices and potato slices along with quite a number of onion slices. I made a patty from the raw hamburger meat and placed it on a layer of the vegetables in the foil. I then placed vegetables over the top of the meat and folded the foil to seal the package as best I could. I then placed the packet in the hot coals and covered with more hot coals.\n\nI moved over to set up my tent. It's a dome tent with a rain fly so it goes up fast. I placed the ground cloth on the floor for an added moisture barrier and threw my sleeping bag inside.\n\nI would not be placing my back pack or any food within the tent. I did not think I would have problems with bears, but I was not stupid enough to risk food in the tent. I hung my backpack and the food between two trees using the rope I brought for this purpose.\n\nThe sun had set about an hour previously and the drop in temperature was immediate. When the sun sets in these high altitudes, the warmth one feels comes directly from the sun. The thin air holds little heat. My work on the fire and the tent had kept me warm but now I was sitting and waiting for my meal to be cooked and I was getting cold. I found my jacket in the pack and put it on.\n\nAs the sky became darker, the glow of the fire and coals seemed to become brighter. I was sure that sufficient cooking time had not passed but I was hungry. The smell of the cooking meat was talking to my stomach. I found two sticks to use to flip my foil packet in the fire. I also fed the fire some more small sticks to keep the hot coal supply maintained.\n\nAs I was turning from the fire something caught my eye. I stopped quickly with a shot of adrenaline rushing into my body but then I realized it was a patch of stars shining through an opening in the canopy of tree branches. They were so intensely bright in the thin mountain air. I have seen it before, each time I camp in the mountains, but it never gets old. I looked up and just feasted my eyes while the wind through the tree and the sound of the insects fed my ears.\n\nI may have lost track of time because I became aware of a sizzling sound in the fire. This meant that my foil packet was leaking and if I wanted moisture in my meal as opposed to hard crisp food, it was time to eat.\n\nI opened one of my beers and caught a whiff of malt with a hint of hops from a dark malty brew I like so much. I opened my foil packet on my cook kit plate, burning my fingers and trying to avoid breathing in the hot steam. The edges had some burnt potatoes and carrots but as a whole, it looked pretty good. I ate the meal. It tasted wonderful and I washed the dishes(the few I had used), and then hung my backpack between two trees.\n\nI was beat and ready for bed, but when I climbed into the tent I realized that I had not set up my air mattress. It wasn't too big of a set back as it is self inflating, so I unrolled it and opened the valve. The air flowed in and I straightened things out in the tent as best I could. I did have a flashlight that I could hang from the top of the tent. I used the stuff sack from the sleeping bag both for my clothes storage and as a pillow. I laid down, stretched out, and smiled. My plan had come together. I very quickly fell asleep.\n\nWhen I awoke in the morning I had to go to the bathroom very badly. It was cold but I moved fast, dressed only in a tee shirt. I wanted to find a tree some distance from my camp to do my business, then get back to the tent and get dressed.\n\nTo save weight in my pack I did not bring my waders. My plan was to wet wade, which means I brought my wading boots and neoprene booties to wear on my feet but my pants would get wet if the water was deeper than a few inches. To address this issue I brought nylon fishing pants that would dry quickly and I wouldn't wear underwear as cotton drawers would stay wet all day. My shirt would also be of quick drying material with long sleeves and lots of pockets. This would protect me from both the sun and the bugs.\n\nOnce dressed, I built a fire and fried my bacon and eggs. The smell of campfire, bacon and pine makes one think of heaven. There are some things that are just a requirement when camping. Bacon and eggs are at the top of that list. Before setting out for a day of fishing, I did the dishes by heating some water on the fire.Somehow the smoke kept finding me, causing burning and watering eyes.\n\nI opened the tent window to air it out and I rehung the backpack. I was ready to leave camp and begin to fish by about 9:00am. Since the previous night had been cold, it would be some time before the insects started to do much moving and I decided to begin fishing with a streamer.\n\nThe flies I brought were limited to four boxes that would fit into the pockets of my shirt. One box of streamers, San Juan worms and egg patterns: this box would be the least used but would come in handy when needed. My other boxes of flies were: a box of Caddis patterns in larval, pupa and adult stages in multiple numbers and sizes; a box of Mayfly patterns in nymph and adult patterns of Trico, PMD and BWO (a Trico is a very small mayfly, the PMD is a Pale Morning Dun which is a little larger and light in color, and the BWO is Blue Winged Olive, a mayfly that is about 3/8\" to 1/2\" long and a wingspan of about 1\"); and a box containing Terrestrial patterns. This means they are insects that are usually found on land but sometimes end up in the water and thus are available to the fish for food. My favorite fly is in this category: the ant. Trout seem to love ants, maybe because they are so readily available. Ants love willows. Willows love water. The wind blows, the ant falls, and the trout have a feast.\n\nI soon decided to change to a foam bodied Caddis to both attract a trout and primarily to hold up the two flies that I would hang off of it. I tied the Caddis off the end of my 4X leader. I then tied about 18 inches of 5X tippet to the bend of the hook with a pheasant tail in size 18 on the other end. I again tied the tippet to the bend of this hook and added a midge larva in size 20 as the terminal fly. For those of you uninitiated, tippet is leader material and the measurement is the diameter of this material. 6X is thinner than 5X, etc. To add to the confusion, in tippet as the number increases the diameter decreases. In hook size, as the number gets bigger, the hook gets smaller. A size 20 midge larva is about 3/8 inches long and the hook gap is about 1/8 inch wide. The Caddis would float while the other two would sink.\n\nI began moving up stream casting my flies along cut banks, in back eddies, and along foam lines prospecting for trout. Things began slowly, but as the sun rose higher I could feel the air become warmer. The action increased and I was catching trout at a pretty good clip. I had one period where I caught a trout on five casts in a row.\n\nAt about 11:00am my poor night's sleep was catching up to me and I took a seat on a log. I was enjoying the fresh air, the wind through the trees, the smell of pine, and the beautiful blue sky. The scattered Aspen were just beginning to leaf out. I am afraid that I may have dozed off. I really do not know if I dozed off but a sound that did not belong startled me. I could not make out what it was, but I thought I would continue to fish my way up stream since it appeared the sound was coming from that direction.\n\nAs I moved up stream the sound became louder and after about 15 minutes I decided that it sounded like screams, squeals and laughter. Someone else had discovered my stream and had invaded my space. In my mind I was upset as I thought I had found this secluded sanctuary and would have it all to myself. These interlopers were up stream catching my fish and having fun that I should be having.\n\nI continued to fish my way upstream and as I moved closer the noise became clearer and my unexpected new reality became more interesting. The voices I heard appeared to be female. I decided I needed to investigate. The stream at this point was moving to my left and the voices seemed to be coming more from the right. I began to walk toward the voices and away from the stream.\n\nAs I became closer I again heard a loud scream followed by a happy laugh but I still could not see anything or anyone. I sought an easier pathway through the woods. I placed my fly rod against a tree with a distinct shape. I wanted to be able to find it again. I also left my necklace of fly fishing tools as they often made noise when I moved.\n\nI moved toward the voices. I slowly placed one foot in front of the other. When I got close enough to begin to see movement through the undergrowth and trees, I bent down and continued to move closer. As luck would have it there was a fallen tree in front of me that provided a great hiding place.\n\nWhen I put myself in what I thought was a great location, well hidden and close, I began to make out forms and shapes. As I shifted my location slightly, I managed to poke myself in the knee with a broken branch. I was still looking at my quarry through the pine branches and a growth of willows. As I looked and listened, I began to see three people. All were female and all were totally nude.\n\nThe stream had moved back right and I was on the opposite side of the stream from these women. They were busily engaged in attempts to splash each other with water. I had to move closer. I crawled under the fallen tree and up to the willows.\n\nThe women all seemed about my age.. One was brunette, one was blond and one was a color in between but her hair was the wettest, so it was hard to tell. They were all near the same height, but they had different body styles. From my point of view, they were all beautiful.\n\nThe brunette had the largest breasts, but not out of proportion to her body, and they defied gravity by pointing straight out. She was the largest of the girls but in no way overweight: she was just bigger. The Blond had a beautiful shapely behind and hair that came to the middle of her back. She was closest to me at this time and I could not see her front. The dark blond was of the slightest build and had breasts a bit smaller than the others. Those breasts bounced so beautifully when she ran and jumped and continued to defy gravity with their very pointy shape and tight nipples.\n\nMy eye balls almost fell out and rolled around in the leaf litter when the blond finally gave me her profile. The line of her breasts did not just drop off her shoulder, bulge out then drop to her nipple. Her profile showed a drop then a bulge with the line continuing outward and upward like a ski jump ramp. Her areola formed a puffy cone with her nipple at the end, then the line formed a re-curve back to her chest. Beautiful!! I was instantly in love! I know that sounds shallow but I am a college student.\n\nRight now the girls appeared to be resting and planning their next move as they were equidistant and panting heavily while keeping their eye on each other. Their pubic mound was also an area of great fascination for me. The brunette had a dark pubic area and the dark blond had a darkened pubic area that appeared to be about the same color as that of her hair but the blond either had very light or sparse pubic hair or no hair at all. I could not make it out from this distance and I was afraid of discovery if I attempted to move closer.\n\nThe blond began throwing water with her windmilling arms and hands at the brunette. The brunette moved into the stream toward me in an attempt to get away. She was moving right toward me and when the water hit her she turned her back to the blond and was looking right at the place where I hid. I froze and hoped. The action continued and to my relief moved away from my hiding place.\n\nI decided that I needed to back out of this spot before I was found. I wanted to meet these girls and did not think I would get many points from them for being caught spying. When the action of the water fight moved away and I thought the girls were not looking my way I backed out of the hiding place until the inevitable branch caught my shirt. I came to a stop and had to untangle myself before backing under the fallen tree.\n\nI crawled about 20 yards back the way I had come before gaining my feet and walking as quietly as possible to the hiding place for my fly rod and equipment. When I reached that tree I took my first good breath of air for some time. I could feel my heart beating fast.\n\nMy plan to meet them was to go back to what I was doing, fishing my way up stream. I returned to the stream and discovered mayflies lifting off the surface and trout sipping them off that same surface. I changed my fly set up to a BWO and an ant trailer; both are dry flies. I cast to an area where the water was in an eddy, moving in a circle behind a large rock. I saw the trout come up and take something close to my mayfly and then saw the mayfly move. I set the hook. The trout had taken the ant but I could not see it so relied on the movement of the top fly to tell me to set the ant hook.. It was a nice rainbow about 12 inches in length.\n\nI continued to move up stream and wondered about how the girls would react to my presence. If I caught them in the nude, it would probably inhibit our introduction. I decided to announce myself by doing a bit of hooting and hollering upon catching the next trout. I usually did not make noise when I had a strike or had a fish on but some friends of mine did, that's what gave me the idea. I wanted to get to know these girls: they were most interesting.\n\nI am by no means a ladies man. I have had only a few girlfriends scattered throughout my college career. I did manage to lose my virginity in high school to a girl I dated for several months. I had quite a number of female friends and we got along well and had great times but somehow only in a group.\n\nMy communications skills were very limited when on my own. I could have long conversations with girls when in a group and not find a single word to say when alone with one. Neither am I a hunk. I am 5 ft 9 inches tall and weigh 170 lbs. I wear glasses and have \"dirty blond\" hair. I swam on the swim team when in high school but was not otherwise athletic. I enjoy the outdoors and nature much more than sports. So, I wanted to meet these girls. They were in my element and I might be able to impress them in my element. They had certainly impressed me.",
        "In my daydreaming about the three girls I missed a number of strikes. The trout would take my fly and spit it out before I could react. My mind was not on fishing. I continued to move up stream and found myself at a point of about 30 yards from the bend in the stream that flowed where the girls were playing. It's funny; I did not notice if they had a campsite there or anything. I guess my eyes were elsewhere.\n\nI knew I had to concentrate on fishing or I would not be able to announce myself. A nice large trout answered my pleas. It raised up and took the mayfly. I set the hook and almost immediately sprang from the water. It jumped and ran and gave me every excuse to hoot and holler and I did. The trout made a long run up stream and I think I caught the view of one of the girls peeking out from the corner of the stream. I took great pains not to look at her but I do believe she was still nude. I landed the fish and released it by taking the hook out of its lip, I used barbless hooks, and held it in my net in the water for a time until it had recovered. I simply lowered the net deeper into the water and the trout swam away. It was a rainbow.\n\nI continued to move upstream and to fish but my nerves were frayed. As I reached the bend in the stream I continued to move up and then looked up to see the three girls about 20 more yards away. The sun was shining from behind them so I was not in a good position to see them very well. I stopped as if surprised and then raised my hat to them and said \"Hi\".\n\nThey were dressed in tee shirts and shorts and said \"Hi\" back. The area was open with only low brush and grass. The trees were not real close to the stream and a meadow was located on the opposite side of the stream from where I had observed the water fight. The sun was beating down and I was feeling very warm.\n\nThe blond girl was the closest to me and began to walk toward me so I walked to her. She had a big smile on her face so my anxiety about invading their space reduced. My mind also could not help but think about the erection I was dealing with and hoped it was not noticed. It did not help that as she walked to me it became obvious that the tee shirt was the only thing covering her chest and those magnificent breasts, a somewhat wet tee shirt at that.\n\nShe stepped up to me. \"My name is Julie, I've always wanted to fly fish.\"\n\nI smiled and thought, I can talk about fly fishing all day long, and relaxed even more. I said \"Hi, my name is Noah. I would love to teach you about fly fishing! I'm very glad to meet you.\" as I put out my hand to her.\n\nShe took my hand and I felt electricity throughout my whole body. I also noticed her smiling eyes for the first time. She invited me into their camp and introduced me to her friends. \"This is Barbara.\" Barbara was the brunette whose hand I then shook. \" This is Tammy.\" Tammy was the girl with the darker blond hair.\n\nI simply said \"Noah\" as I took their hands. I also noticed that they, too, only had tee shirts on and the sight was exciting. I then said to all of them \"I apologize for invading your camp. I didn't know anyone else was even in this forest. I was fishing my way up stream. I can walk around your camp if you'd like and continue on my way so I don't disturb you.\" I said this hoping upon hope that they would not take me up on my offer. Probably not a good strategy.\n\nLuck was with me as Julie said \"But I want to pick your brain about fly fishing now that I have the chance.\"\n\nI replied that I would be very happy to answer her questions. After all, I had been fishing since leaving my camp and could use a break.\n\nJulie led me over to a log in their camp and invited me to sit. I did. Julie started to ask me question after question about my equipment, about the fish I caught or fished for, about the physics of the casting of a fly line, about my flies and why I chose these flies and many more.\n\nThe two other girls wander over to the fire pit they had and added some small wood to their fire. They were also holding a conversation of their own. After some time the one call Barbara said to me, \"We were just about to fix lunch when you arrived, would you like to join us?\"\n\nBefore I could reply, Julie said \"Yes, Please stay, I have lots more questions.\"\n\nI then said \"Yes.\" In my mind I said a very loud \"YES!!!\" I then said, \"I would hate to eat your rations, though. I know this was a long hike from the road to carry your supplies. Why don't I just eat my granola bars while visiting with you?\"\n\nBarbara said \"Actually with the three of us carrying our stuff it was not too bad. And, we are only offering you a meal of reconstituted freeze dried beef stroganoff.\"\n\nI laughed.\n\nBarbara continued \"We discovered last night that one package was not enough food for the three of us but two packages was way too much.\"\n\nI thanked her for her invitation and said I would share my granola bars as dessert. I offered to help but they declined my offer, it seems they had a KP rotation and Barbara would be doing the cooking and said there was not a lot to do, \"Just add water\".\n\nJulie continued to ask me questions about fly fishing and I could not help but notice the movement of Barbara's chest under her tee shirt as she stirred the food. I also noticed all three girls were wearing shorts made from some kind of synthetic material. The shorts also seemed to have wide legs so I had to be careful not to stare.\n\nI also noticed what appeared to be a pair of panties hanging from their open tent flap. My conclusion was that it had caught on the zipper of the flap when they were thrown into the tent when the girls were quickly dressing for my arrival. The other obvious conclusion caused my erection to remind me of its presences. I suddenly noticed that I was inhaling a wonderful floral scent. A wind shift must have occurred. I looked around only to realize that Julie had moved a little closer.\n\nTammy asked me if I would like some coffee for lunch. I told her that I would love some since I hadn't taken the time to brew any when I got up this morning. This led to questions about my camp, where it was, how long I had camped there and more. I also learned in this exchange that they too had arrived on Wednesday with the plan to stay four nights.\n\nThe three of them were roommates at UNC finishing their sophomore year and wanted a getaway adventure before returning to summer jobs and classes. During this conversation I was served my plate. The beef Stroganoff was good if a bit salty. I shared with them how I had arranged my classes based on the final schedule so that I too could have this getaway before returning for a summer job.\n\nWe tspoke of majors, mine being Natural Resources Management and theirs being Elementary Education. I also learned that Julie and her family often camped but that this was a first time for Tammy and Barbara. They both said that they were enjoying this their first camping trip.\n\nWhen lunch was finished I offered to wash the dishes but was told that this would not be necessary. Julie asked me another question about how to cast a line and I suggested that I show her rather than just talk about it. Her reaction was exuberant and most entertaining for my eyes.\n\nStill acting as if I knew nothing of the earlier splashing in the stream, I suggested that we attempt a casting lesson right there at the camps location. Julie and I walked to the stream after I picked up my fly rod. I explained how the fly itself had no real weight to it so you were actually casting the line and that the fly was just along for the ride. I demonstrated a few casts, keeping the line short, about 15 ft of fly line and my 9 ft leader.\n\nI explained the casting motion and the 10 o'clock -- 2 o'clock motion of the casting arm. I then handed the fly rod to Julie and watched her attempt a cast. I had to work hard to concentrate on her casting arm, the scenery was pulling hard at my eyes. I was soon required to change tactics.\n\nI really needed to show her by moving up behind her and taking her right hand in my right hand. I asked her to relax her arm and allow me to make the cast but suggested that she should follow along with her arm. Her first cast wasn't great, so I asked her if she would mind if I put my left arm around her waist to better match our movement.\n\nThe moment I touched her soft tummy with my left hand, my erection began to raise its head again. I know I was enjoying this lesson far more than Julie possibly could . After about three casts, I reluctantly stepped away and allowed her to cast on her own. She did well. Next, I suggested that we attempt to actually catch a trout.\n\nJulie suggested that we move someplace else as she admitted that the three of them had earlier played in the water and probably frightened any trout in the area. We then moved upstream about 40 yards and I looked for some trout feeding. I did not see any but thought it would be a good opportunity for practicing the cast. I asked her to cast the fly onto the stream's surface at or close to the line of foam that was coming down the stream. It was located about 3 ft from the left bank. We were on that same left bank of the stream.\n\nShe cast the line and the fly landed with a bit of a splash along with several coils of line. I explained that she should plan to cast the fly over the location she wanted it to land and gravity would take it down gently. She tried several more times before achieving a cast that landed the fly gently. We did not get any strikes so continued to move up stream. I had to keep telling myself to concentrate on the cast, not her chest nor her beautiful behind.\n\nWe moved up the stream to an area where, again, the stream turned: this time to the left. I immediately noticed a trout on the other side of the stream taking a mayfly. The trout was located behind a rock that was showing above the surface, just off the opposite bank. I froze and knelt down. Julie, behind me, did the same. I then moved out of her way and back behind her to point to the rising trout. We watched as the trout again came up to take a mayfly. I told her to watch that trout and to tell me what she saw.\n\n\"I see a trout\"\n\nI explained better. \"I want you to look at the area around the trout and to think about how you are going to get your fly in position for the trout to take it.\"\n\n\"Oh!\"\n\nShe was still crouched down while I changed my position to flex my knees. I want you to know that what happened next was not planned. When I moved, I noticed that her tee shirt neckline was hanging away from her and my eyes caught what could only be described as the most beautiful breast I had ever seen. I lost track of time and of what I was doing. Luckily she touched me with her hand to get my attention without looking up to see where I was looking.\n\nShe whispered that she saw the trout would take a mayfly at a rate of about one per 8 --10 seconds. She also told me that mayflies would pass near its location unmolested in between that time. I asked her to pick out a mayfly that was floating upstream from the trout that she thought would be the next one eaten. After a time she said the one she picked out was about a foot above the trout when it came up for its next fly. I told her to then wait for the trout to take its next fly and then cast the fly to land one foot down stream from where she picked out the fly she had watched. She just laughed.\n\n\"Right!\"\n\nShe then told me that I should cast the fly and show her how it was done. I moved up past her and took the fly rod, asked her to step back just a bit and to the left so that I wouldn't hit her with my back cast. I waited until I thought the trout was about to take another fly and began my cast up and down the stream rather than in the direction of the trout. The trout took a fly and I changed direction of my cast to land the fly where I thought the next fly in line should be.\n\nWe waited for my fly to enter the zone. The trout came up and took a fly about 6 inches downstream of my fly. I allowed my fly to continue on its voyage so as not to disturbed the water and scare the trout. When far enough down stream so as not to frighten the trout, I picked up the fly and recast it.\n\nThis time I could not have asked for a better float. The fly came down stream and actually got caught in a little whirl pool created by the rock and the current. The fly made one rotation in the whirlpool and the trout came up and took it. I raised the rod tip to set the hook and the trout blasted out of the water.\n\nIt was an impressive and aggressive trout. After two acrobatic jumps into the air it shot upstream. I kept the line tight and put a little pressure on it but not too much. The idea is to tire the trout out, but too much pressure would pull out the hook. I was fishing with pretty small hooks.\n\nJulie was expressing her excitement both physically and verbally. I had to concentrate! Concentrate!! The trout soon tired and I was able to scoop it up in my net. I handed the net to Julie and told her to keep it in the water so as to injure the trout as little as possible.\n\nHer eyes were wide. \"It's Beautiful!!!\"\n\nShe placed the net in the water and got down on her knees to look at it. Her tee shirt again gaped open and I had to agree., \"Beautiful!!\"\n\nI was going to show her how to remove the hook to release the trout but the hook had already come out by itself. I told her to move the net back and forth in the water to provide water movement for the trout to gain oxygen via water moving over its gills. Her eyes were glued to the trout, a 14 inch Rainbow, and that allowed me the opportunity to continue to look at her beautiful breasts. Her nipples had become erect as had my own cock. After much longer than was necessary for the revival of the trout, I told her to just lower the net further in the water and allow the trout to swim out. She did and it did.\n\nI stood up as did Julie. She then grabbed my right arm and hugged it to her telling me how wonderful her experience was. She was looking into my eyes and I again saw the smile in those eyes. She may have said more but I was distracted by the warm presence of two breasts, soft and beautiful, squeezing my arm, and knowing the pressure on the back of my right hand was being caused by the touch of a lower part of her body. My erection was going to be a problem. My nylon fishing pants were all that existed between the great outdoors and my modesty.\n\nTo my disappointment, the hug ended all too soon. I asked her if she was ready to catch a trout and she answered in the affirmative. I picked up the fly rod and handed it to her. We then headed upstream a few yards. I noticed several trout sipping mayflies from the center of the stream along the foam line and thought this would be an easy cast for her. I moved aside and waved her forward, pointed out the trout and then knelt down. She knelt beside me.\n\nI explained that she should aim the fly to fall upstream of the most downstream heads, but not so far up as to allow the fly line to land near them. The leader was 9ft long so the target would be to land the fly about 4ft upstream of the trout heads: a large and easy target. Trout here were not being picky. The air was still and the sun was behind a cloud. She made her cast. The intense concentration on her face highlighted her beauty..\n\nThe fly landed in the target zone and was almost immediately taken by a trout. She set the hook a bit hard in her excitement, but didn't lose the fish. We had only a short line out, so I told her to move her left hand to the reel and slowly begin to reel in the trout. I warned her that if the trout began to run to let go of the reel. She brought the fish to my net like an expert. I took the rod from her and handed her the net.\n\nShe bent down to place the net into the water and allow the trout to revive. She asked me if we could keep it to eat and I had to explain that this fish was a Cutthroat, a threatened species and the need to return it to the water safely. She reached out and took the fly out of the trout's lip, pushed the net out into the water, moved it back and forth for a few seconds and then lowered it to allow the trout to swim out.\n\nShe then did something that I totally did not expect. She jumped up screaming in joy and gave me a kiss. The kiss developed and soon she was pressing her body into mine. I knew the instant that she recognized my erection. She seemed to stop pressing her body into mine and then pressed harder with the lower part of her body. Then she reached up and put her arms around my neck and in one motion lifted herself up and wrapped her legs around me.\n\nOur genitals were most definitely in contact through the two thin pieces of fabric that made up our clothing. She then began to rock her pelvis while still kissing me. I think she rocked only three times when she pulled me tight to her, broke the kiss and just shook. I thought I knew what was happening but could not be sure. I certainly knew what I was feeling and I was close to an orgasm of my own.\n\nSuddenly she dropped her legs to the ground, turned and walked away. I was stunned and it took me a few seconds before I was able to speak and ask her if something was wrong. She just kept walking away with her head down. I then asked her if I had done something to upset her, but she just kept on walking. I gathered up my fly rod and net and followed her. I did not run but walked fast. If I had done something to offend, running after her would probably make things worse but I was afraid that if I ignored the situation I would come off like a jerk..\n\nI saw her enter the camp with the other girls greeting her, but she seemed to be ignoring them. She went up to their tent and crawled in. When I reached the camp it was my intent to go over to talk to her but was intercepted by Tammy and Barbara. I said that I was not sure of what had happened, that she had caught a trout and was very excited about it and even kissed me but then suddenly left.\n\nI told them that I must have done something wrong but did not know what that might be. I again moved toward the tent but was again stopped by her two friends. Barbara told me to please go continue my fishing and that they would see to Julie. I did not like the idea but thought it my only choice. I nodded and turned to leave, then turned back and asked if they would apologize on my behalf to Julie.\n\nBarbara asked \"Will you be coming back this way, after you fish, on your way back to your camp?\" I told her that I was sure I could find a way around their camp so that I wouldn't disturb them. She told me I had misunderstood. She wanted to make sure that I stopped by on my return. I said I would.\n\nAs I walked back to where Julie and I had been fishing, I realized that I was bummed. I could not get Julie out of my mind and could not figure out what I had done wrong. Soon, or maybe not so soon, I realized that I had been walking upstream along the bank and not fishing. I had been deep in thought. I decided that I couldn't do anything about that situation at this point so I should get back to fishing. After all, that was the purpose of this trip.\n\nI sought out some rising trout and began to cast to them. I quickly caught one, landed, and released it. I then moved up stream a bit more. I continued like this for some time but then realized that I wasn't enjoying it. I was thinking about Julie: her beautiful breasts, her passion for fishing, her rubbing me. I wanted to be back with her. I was torn. I again moved upstream and threw a cast to a trout. I got a strike and brought it to the net. That was when I realized that it was a brook trout.\n\nI got an idea. I kept this trout and cast again in an attempt to catch more. In not too much time I had three more brook trout. I cleaned them and washed them good in the stream. I got out a plastic bag I carried in one of my shirt pockets and placed them in it.",
        "I began walking back downstream. I did not fish, I had a mission. When I drew close to the girls camp I became more stealthily. I did not want to return until I was sure Julie was back to, at least close to being herself. When I got there I immediately saw Julie up and about and seemed to be having fun with her friends so I began to walk more noisily with the thought that this would announce my return.\n\nWhen still somewhat distant from their camp one of them spotted me and waved. I took that to mean things were OK. When I got close I announced, \"The great hunter returns bearing gifts for the fine ladies!\" and I put the plastic bag forward. Tammy took it from me and looked inside. Her immediate reaction was, \"I thought you practiced catch and release?\" I said, \"I do, most of the time. Brook Trout,. They're delicious!\" She smiled at me and said, \"Well in that case, thank you, fine sir!\" and curtsied. She then turned to the others and said, \"Look what this fine hunter has brought to us fair maidens.\" The others laughed.\n\nJulie came up to me, looked into my eyes and said, \"I want to apologize for my behavior earlier today and I want you to know that I believe you did absolutely nothing wrong.\" My immediate thought was, And just what does that mean? Which behavior was she referencing her wonderful hug and kiss or her walking away from me? But I did not say that out loud. I didn't know her well enough to push and I certainly didn't want to return to that very uncomfortable place this afternoon.\n\nI said, \"Well fine lady, I truly accept your apology but please know that no apology was necessary. I'm just happy you are happy.\" She stood looking into my eyes a moment and I smiled at her. Then Barbara called us over to the fire and said we should make plans for how we would cook and eat these fine trout.\n\nNow that the tension had been reduced, at least the tension inside of me, I again noticed that the ladies clearly hadn't added underwear to their attire. The movement of the tee shirts was mesmerizing. I sat on the end of the log at the fire along with Barbara and Julie. Tammy moved to the fire and added some sticks. As she squatted at the fire pit her shorts leg fell in such a way that I was sure I saw pubic hair. I looked away quickly to avoid getting caught peeking. Barbara cleared her throat. \"Noah, we've been talking. We like you and want to invite you to move your camp and join us here.\" My mind immediately began singing \"Hallelujah\" .\n\nWhat I said was, \"How could I turn down such a generous invitation? Yes, I will move my camp here.\"\n\nI then looked at my watch and my face must have expressed concern as Julie interjected, \"I will help you move to save time and we can get back here for a trout dinner. Tammy has cooked fish for us before back in our apartment.\"\n\nTammy added, \"I don't have all the ingredients I would like but I can make it work\".\n\nI told them that I had planned on having fish on this trip and had ingredients and seasonings back at my camp.\"Actually the trout cooks fast so I don't see a problem waiting until we return before putting them on the fire.\"\n\nJulie and I set out to hike downstream to my camp. The sun was lower in the sky and shadows were being cast by the trees. I allowed her to take the lead--I liked the view. I wanted so much to find out what had happened this afternoon after she caught the trout. Well, I knew what happened, I just didn't know what happened!! We hiked the distance quickly. My camp was not as far as I thought. When not fishing, one need not follow every turn in the stream. We talked as we walked so I learned that she had one brother and one sister; both younger, both in high school. Her family camped often and also did some fishing using spinning equipment. I also learned that she didn't have a boyfriend. Great News!!!!\n\nWhen we reached camp, I began gathering up any loose items I had left out and lowered the backpack from the trees. Julie crawled into my tent and of course I watched her behind: beautiful. Julie pulled my sleeping bag from the tent and put it in the stuff sack. As she did so, her chest moved tantalizingly under her tee shirt. She also cleaned out the tent of any twigs and leaves that always seem to find their way into any tent. As she did this, I found myself staring down her neckline. I don't know how long I looked but when I realized what I was doing I quickly looked away, afraid that I would get caught.\n\nI helped her to collapse the tent and pull the poles out of the fabric. It then became very interesting from my point of view. We were folding the tent fabric on our knees. She rolled up the tent from her end. I held the other end of the fold tight and watched her crawl toward me. My eyes were not on the tent. Her tee shirt gaped open at the neckline and gave me a view I will never forget. Her beautiful breasts hung down and swayed from side to side as she rolled up the fabric. She kept getting closer and closer to me the more she rolled. She rolled right up to my hands and stopped. My face was less than a foot from those delicious breasts. The only thing that stopped me from being caught looking was her head blocking my view right at the end and then she said, \"Would you go get the tent bag?\"\n\nWe packed all my belongings into the backpack, inspected the camp, made sure again the fire pit had no live coals in it and began to head out. I then stopped. \"I forgot!\" I then moved over to the stream and reached down into the water and picked up the remains of my six pack of beer. I asked Julie if she would like one. She said she would love one, so we stopped and had a beer while sitting on a log. Julie said that she liked malty beers rather than the hoppy style. I let her know that she was exhibiting great intelligence. When we had finished our beers, I crushed the cans and stuffed them in my backpack.\n\nBefore I could pick up my pack again, Julie came over and gave me a kiss. \"Thank You.\" She then went and picked up her pack. My mind was in total confusion. What were the messages that she was sending? We moved somewhat slowly on this leg of the trip with my back loaded down. We took a somewhat different route back up steam thinking it would be easier with the pack. The result was that I often found myself looking up at a beautiful bum and the backs of two luscious legs. I will admit that I looked but was not able to see much when I attempted to see up the legs of her shorts, she was moving too fast.\n\nThere were times during the trip that I thought that she might be giving me a view on purpose. At one point she stopped to tie her shoe laces. She sat on a rock with her left leg up on another rock tying that lace. Her right leg was on the ground with the result that her legs were spread wide and the leg of the shorts gaped open. The view was beautiful but the long shadows cast by the sun on the trees made seeing details difficult.\n\nWhen she stood up she again came over to me and this time gave me a hug. \"I am so looking forward to you teaching me about fly fishing. I like the instructor too!\" My mind was singing very loudly. We got back to the girls camp in a lot less time than I had calculated. As we got close we could smell something delicious mixed with the sweet smell of smoke. I was hungry.\n\nWhen we arrived, the first thing I did was to find the butter and seasonings for the trout. Yes, butter is another one of those absolute necessities. I then looked for and found a place about 15 yards from the ladies' tent to set mine up. Julie again helped me with the tent. I again got some quick looks at her bare breasts but they were quick. That doesn't mean I didn't enjoy them. I oriented the door of the tent toward the fire. By the time the tent was up, the sleeping bag, ground cloth and mattress were in place. Tammy announced the trout were ready and dinner was being served. I grabbed my cook kit plate and tableware and moved over to the fire. Now there was most definitely a chill in the air and the snapping and popping of the fire added to the ambience along with the smoke.\n\nThe meal was great! Even the reconstituted broccoli, carrots and peas were great and the trout was special. It tasted even better than my memory of the last Brook Trout I ate the previous fall on a camping trip. The flesh was firm and pink and tasted sweet. My eyes were an issue however, I did not know where to look. My mind also was a muddle, I kept wondering when I was going to wake up from this dream. I, me, Noah Conway was sitting out in this mountain camp site with three beautiful coeds dressed only in shorts and tee shirts and I do mean Only, except for their shoes. I did not know if they had forgotten or did not mind showing their attributes to me.\n\nThe sun had dropped below the horizon while we had been eating and the temperature had dropped. The result showed on the ladies tee shirts as their nipples puckered. The atmosphere had greatly improved since this afternoon's incident, and we were telling stories of ourselves and about our families, and the ladies told stories about each other: much to the distress of the subject of the story. During the storytelling I noticed Julie's smiling eyes several times.\n\nAs we finished up dinner, I put some water on the fire to warm up for doing the dishes. I insisted that I would wash the dishes. Julie immediately said she would dry and I smiled inside. I thought this was a great sign. Barbara and Tammy sat close as the stories continued. The light continued to diminish and the stars became brighter. The fire burned down and gave off only a red glow.\n\nWhen camping I find that I am often ready for bed much earlier than when I am home and today was not any different. I think it was Tammy who yawned first and then it became an epidemic. We agreed to head off to bed as soon as I put the fire out with several kettles of water. The steam rolled off the fire pit as I added water. It was very dark except for the light of the stars. My eyes adjusted very quickly and I saw my tent and went to it. We all said goodnight to each other as I unzipped my flap and went inside.\n\nAt home I sleep in a tee shirt when it is cool and do the same when camping. I took the rest of my clothes and put them in the stuff sack for my pillow. I climbed into my sleeping bag and was sure I would be asleep as soon as my head hit that stuff sack. The smell of smoke from my clothing tickled my nose.\n\nI don't know if I fell asleep or for how long but movement outside caught my attention. Soon thereafter there was a scratching on my tent. I said, \"Is someone out there?\"\n\nA response came back in a whisper, \"Yes, can I come in?\"\n\nMy heart leaped as well as my penis. \"Yes!\" I knew it was Julie. I turned on the flashlight that was hanging from my tent roof. Her hand attempted to find the zipper tab but I found it first and unzipped the flap. She crawled in but when she looked up at me, it was Tammy. I could not keep from asking, \"What are you doing here?\"\n\nShe smiled at me and said \"We drew straws and I won!!\" I must have had a strange look on my face as she then said, \"Well, you know, I won --- You! - - For the night.\" My mouth must have opened and my jaw must have hit the ground. She then said meekly, \"I brought condoms.\" I could not help feeling disappointed and excited both. I have been fixating on Julie but here Tammy was offering herself to me. The question also crossed my mind, When did I become a prize???? Her body language and face were expressing discomfort, then suddenly she said, \"Oh, I almost forgot.\"\n\nShe turned around and went partially out of the tent then came back in holding a sleeping bag. She smiled at me with some sheepishness. To give me some time to process, I took the sleeping bag and unzipped it to make it into a blanket. I then used it to cover my bottom half while I got out of my bag and unzipped that. I spread out her bag as a bottom layer as best I could, invited her to climb on, and covered us with my bag.\n\nThis whole situation was very confusing to me. So many mixed signals: shy and reserved, yet she had come to my tent. She laid on her back very still and what appeared to be stiff. I laid down on my left side facing her. I had not found my tongue and she was not talking. Then I remembered the light and sat up and shut it off. I thought someone had to make the first move so I scooted a little closer to her and touched her right arm with my right hand and then ran it up and down the arm for a bit. I think I could feel her relax so scooted closer again and moved my left arm under her head, leaned over and kissed her.\n\nShe seemed to relax a lot at that point and kissed me back. I then moved my right arm over her and placed my hand on her left shoulder and while continuing the kiss rubbed up and down her arm. Her scent was very light with the hint of a peach. She moved toward me. I took that as a signal and moved my right hand onto her breast. It was too dark to see anything but I could feel her hard nipple push into my palm.\n\nI rubbed her breast through the cloth of her pajama top then lifted my palm away from the nipple. I kept my fingers on her breast and rubbed and massaged her while continuing to kiss her. She broke the kiss for air and I took that opportunity to move my kiss to her cheek and to her jaw. I followed her jaw line up to her ear and licked it. I could taste a bit of salt. I felt her shiver with her whole body. I did not know if that was a good shiver or not. I thought I would come back to that so moved on to kiss her neck.\n\nShe moved even closer. I moved my right arm down her body to the hem of the shirt and she seemed to tense and then relax as I moved my hand up inside her shirt back to her breast. This time I was inside her clothing touching her bare soft luscious skin. I continued to kiss her neck, moving lower while squeezing and rolling her nipple with my fingers. She wrapped her arms around my head and held me. My goal was to reach her breast with my mouth. I also then moved my hand down her body and began to slip my hand into her pants. She immediately became very stiff and pushed me away.\n\n\"I can't do this!\" She then rolled onto her hands and knees, moved to the tent flap, zipped it open, crawled out, and left.\n\nIf I felt confused before, now I was both confused and pissed big time. What the hell game was going on here? I resolved that whatever it was I was not playing any more. I would pack up my camp in the morning and leave. I zipped up the tent flap, feeling the goose bumps form from the cold air. I laid back into bed and tried to sleep. I was too wound up to sleep. I couldn't get comfortable. The ground had gotten harder. I couldn't get over my anger. I could not figure out the game.\n\nAs I lay there I began to wonder why I was so angry. I think I realized that I must be channeling Junior High and Sally Miller inviting me to a costume party where I showed up and was the only one in costume. I was the laughing butt of that joke for some time. Or, I was channeling my sophomore year in high school when Judy Hinton flirted with me at my locker and became very suggestive. When I began to reply she called me a pervert and a number of her friends just happened to be standing behind me and joined in the choir. I was called a pervert for weeks after by any of the friends I came upon.\n\nI don't know how much time passed and I don't think I fell asleep but at some point in time I heard scratching on my tent and a voice saying, \"Can I come in?\"\n\n\"No!\"\n\n\"Noah, I can understand why you might be upset and that's why I'm here. I want to explain.\"\n\n\"I am not interested!\"\n\nThere was a pause. \"Noah, I think you need the back story about us and how we got here before you judge us.\"\n\n\" I am not interested in playing whatever game the three of you are playing. I will be packing up and leaving in the morning.\"\n\n\"Noah, can I come in and tell you our story and why things happened today the way they did?\"\n\nI must admit to myself that I was becoming interested, but I didn't feel like admitting it to her. \"No!\"\n\nThen she started to tell me the story while standing outside my tent in the cold. I had figured out by this time that I was talking with Barbara. \"Tammy was dating a guy for 6 or 7 months, their relationship seemed to grow and over time Tammy decided that she wanted to give him her virginity but she wanted to have a good memory of the event rather than a quickie in the backseat of a car or some other forgettable place. Over the last month and a half of their being together he was becoming more and more aggressive and as a result she was becoming more and more resistant.\n\nOne night about two months ago they had a date. He came to our apartment to pick her up. Both Julie and I were about to leave for things we had planned so they apparently stayed in the apartment for some time after we left. I drove to my meeting only to realize that I had forgotten my presentation so turned around and drove back to the apartment to retrieve it. I walked in on Tammy crying and yelling \"NO! Not like this'' Please No!\" I couldn't ignore this and opened Tammy's room door. Tammy was on the bed fighting him and he was on top of her. They both looked up when I entered. One look and I told him to \"Get Out!\"\n\nHe left and for the rest of the evening I comforted Tammy. I kept thinking, had I not come back when I did, Tammy would have been raped. She hasn't had a date since and unfortunately, you were her first attempt at returning to normal. I apologize on her behalf and for myself as I encouraged her to come to your tent tonight.\" The following silence was deafening. My anger was gone. My self-righteousness was gone. My resolve was gone so when she said, \"Can I come in and tell you the rest of the background about us? It's really getting cold out here and I think you deserve the whole story.\"\n\n\"Yes.\" I sat up and turned on the light and then unzipped the flap. When she crawled in I got a look at her left breast through the neckline of her night gown but I felt guilty about it.\n\nBarbara entered the tent and found a place to sit. I reached over to zip the tent flap closed in an attempt to keep whatever heat there was in the tent. I was still in only my tee shirt so moved carefully not to expose myself. Barbara had to pull her nightgown up above her knees in order to be able to sit. When I looked at her it was clear that her nipples were either cold or she was turned on. I suspected the former. Once settled she began her story again.\n\n\"The three of us have not had great experiences with men of late. This camping trip was an attempt to clear our minds of men, refresh our souls and gain a new view of the world. You entered and got caught in this whirlwind. I will admit to you that we all find you very attractive, fun to be with, and not overly concerned about your macho persona. You seem to be comfortable in your own skin.\"\n\n\"Thank You!\"\n\n\"Julie seems particularly taken with you.\"\n\n\"So, why is it that she is not here and you are?\"\n\n\"That has to do with the rest of this background story.\" Every so often Barbara would shift positions a little, apparently attempting to find a more comfortable position. As she would shift, her nightgown would work its way a little further up her thighs. She was sitting with her legs bent at the knees, thighs a little apart, and leaning on one arm. Each time she moved, her breasts under the nightgown would also move and her erect nipples would draw attention to themselves. I tried not to stare or to allow my mind to wonder about what was under that gown but my body had other ideas and my erection was most definitely taking notice.\n\nBarbara continued her story. \"I dumped my last boyfriend about a month ago. We had been going together only a few weeks. Before that I had a number of boyfriends over this past school year. None seem to work out for more than a few dates. They generally communicate very quickly that they are not interested in me as a person, but only in my body. If you haven't noticed, I am also comfortable in my body and I think they come to the wrong conclusion.\"",
        "This time when she shifted positions she changed from sitting on her left cheek to sitting on her right. In the process I got a good look at her vagina. I was lying down and propped up on my elbow while she was sitting. I had a great angle. She was silent for a while and the thought crossed my mind that I had been caught looking. She then continued. \"Julie had a long time boyfriend from high school. She had been dating him most of their senior year and their freshman year in college. She was thinking that this relationship was the forever kind and then a little over a year ago she caught him cheating. She had become suspicious of him for some time prior to this but she walked in on them in bed in his dorm room. She has been a bitter woman since.\n\nShe ragged on men in general, been against any boyfriends I had and was always pointing out flaws in Tammy's boyfriend. She has been a one person bulldozer about men for the past year. Tammy and I were very tired of hearing her same old line about the evils of men. She has also been the driving force behind this camping trip. She has wanted the three of us to get away from men and their distractions for months. When first Tammy and then I broke up with our boyfriends there appeared to be no obstacles for agreeing to her getaway.\n\nWe planned out this camping trip over the last month of school and when we finished our last final Tuesday afternoon we packed and headed out early Wednesday morning. I don't know how she picked this place. She may have been here before because she knew exactly where she was going. We drove up in her Jeep and she knew when we arrived. With three of us packing our stuff we were able to reach this campsite and make it in one trip, traveling lightly. We spent the rest of the day making camp and finished our day by roasting marshmallows at the end of the day before we fell into bed.\"\n\nBarbara chose this time to shift positions again. This time she lifted her left knee and wrapped her arms around it to hold herself upright. Her pubic area was fully exposed to my eyes although the angle of her right leg blocked my view a little. I pulled my eyes away from that area and concentrated on looking into her eyes.\n\n\"You said Julie was a man hater?\"\n\n\"Yes, and I bet you are wondering about her reaction to you.\" I nodded. \"Well, so are Tammy and I. We could not believe her reaction to you when you walked into camp this morning and we have been confused by her behavior toward you all day. To be quite honest, Tammy and I have been planning a little payback for all her haranguing about men for the past year. We've become pretty tired of it. I'm afraid that you became part of that plan as well. Julie came to us this evening and informed us that she was going to come to your tent and ask you if she could spend the night in it with you.\" This information caused my whole body to react and my soul to sing.\n\nBarbara continued, \"We, Tammy and I, both said No. We reminded her of all the negative things she has been saying over the last year about men in general and our boyfriends specifically. Her response of course was to say that she was correct about our boyfriends. We finally got her to agree, she really did not have a choice, that we had three nights planned for camping left and that each of us, Tammy and myself, would get the opportunity to stay with you before she had her chance.\" While she was saying this she shifted again and gave me another look at her vagina and of course caused her breasts to move behind her gown. I was so busy looking, I did not notice the silence.\n\nWhen I did notice I realized I had been caught staring. When I realized I had been caught, I looked up into her eyes. She smiled and with one movement pulled her nightgown up over her head putting her whole nude body on display. She then said, \"Did I mention to you that I like Doggie style?\" She then lifted the top sleeping bag and slipped under it and beside me. She laid her head down on my stuff sack and again gave me her beautiful smile. With that I reached up and turned off the light and settled back down beside her. I moved to put my right arm under her head and the stuff sack and placed my left arm around her and pulled her close for a kiss.\n\nAs I pulled her close I could feel her breasts push into my chest. I could feel my erection push into her stomach and I could feel her legs touch mine. They were very cold. I began to rub her back, bottom and thighs to warm her up while I kissed her. I wrapped her legs in mine attempting to share my heat with her and I felt her wrap her cold hand and fingers around my erection and move it into a position along our stomachs so we could get closer. She also moaned a little. I wanted to get to know her body and to warm her up before I entered her beautiful vagina. I kissed her face and worked my way to her ears, her neck and then her chest. I squeezed her right breast with my left hand as I kissed and sucked on her left. As I moved down to her chest with my mouth her right hand was busy exploring my erection and balls: rubbing, squeezing, fondling.\n\nAfter a day of watching three sexy women bounce their breasts at me and do all kinds of things that turned me on, I was so afraid of losing my load very early in this exchange. It did not help my situation when she took my penis and began to rub the head of it against her very moist vaginal folds. She seemed to realize when I was close. She would stop rubbing it and pinch the base when I thought I was going to lose it. She would then return to rubbing it along her folds. To add to my excitement she would moan each time she moved it across her clitoris. Suddenly she rolled over and got up on her hands and knees then lowered her head and shoulders to the ground and told me to give it to her. Who was I to question that demand?\n\nI reached under the stuff sack and retrieved the condom that Tammy had brought, quickly opened it and put it on. I climbed behind her and moved in to place my very hard erection against her vagina. It was very moist and as I pushed forward I felt my head slide into her opening. It felt soft and warm and tight and delicious all at the same time. I just savored the feeling for a while before I began to move. I held her hips in my hands and pulled out until just the tip of my erection remained inside then slowly moved back in. They had been teasing me all day with their breasts and loose shorts and low necked tee shirts. It was my turn to get a little revenge and to savor this pussy.\n\nAs I slowly pushed in Barbara attempted to push back against me hard but I moved back with her to maintain my slow movement. I was right on the edge however and soon could not hold back. I pushed hard into her and reached around with my right hand for her clitoris. I did not want to touch it directly but rub it through the hood. The moment I touched the area her vaginal muscles contracted like a vice on my erection and I exploded. She was not far behind and we both soon collapsed to the ground. I attempted to stay inside her but I slid out as I softened.\n\nWe laid panting for some time. I grabbed a towel,removed the condom, and cleaned off my penis. I began to wipe her bottom but she took the towel and did it herself. We then cuddled and talked a little about our day. I said that I could not get the attempted rape of Tammy out of my mind and how angry it made me feel. We talked more about the three of them and in the process apparently fell asleep.\n\nI awoke sometime during the night or early morning to some discomfort in my penis. Morning wood had developed and I was crushed between our bodies at a bad angle. Then I felt Barbara move. I also felt her hand on my erection and then I felt her move her behind into my groin, take my erection and place it between her legs and close her top leg down upon it. Her hand remained and seemed to be pushing it against her pussy. I was no longer half asleep but fully awake. I lay there for some time to see what would happen. She began to rock her hips causing my erection to rub back and forth against her clit. I got harder. As she moved I began to feel the cap of my penis rub across the vaginal opening and then move back forward to her clit. I also heard moans. These may have been coming from me.\n\nEach time she rocked her hips forward and my penis was at her opening, I was so very tempted to move my hips just a little to change the angle so I would enter her on her next movement back. What a way to wake up in the morning! I did not take advantage but she did change her angle and this time I did enter her with just the cap. She froze at that point and I waited. She squeezed my erection two times before moving forward again and removing me from her entrance. By that time she knew I was awake so I rolled over enough to reach the second condom under the stuff sack and put it on. I then returned to my previous position.\n\nSoon she was again rocking her hips and rubbing my erection against her clit and her opening. After a few minutes or possibly an hour--time wasn't important at this point--she pushed me harder then close to her opening and I pushed inside. Now we shifted so I could move in and out of her beautiful opening. Her hand remained and began playing with my balls. I began thrusting harder and reached around her to hold her breast. I also began to roll and squeeze her nipple. We continued this movement until I began to feel her vaginal muscles contracting around me. Her orgasm stimulated mine and I came. We lay on our side, me staying inside her for as long as I could. Once I fell out, she rolled over and wrapped her arms around me and fell back to sleep.\n\nThe next time I awoke, I was alone. I heard quiet talking outside the tent from the area of the fire. I could also smell smoke so I concluded they were up and preparing for the day. I got up, cleaned off the condom, and then got dressed. When I left the tent I saw all three girls by the fire. I got up and took a walk into the woods to relieve myself and upon my return only two of the girls were still at the fire.\n\nTammy and Barbara were cooking bacon and eggs for breakfast but Julie was not in sight. I walked over to them to say good morning. We chatted about the beauty of the morning, the clouds, and many other small talk things, but nothing too serious. I noticed that they were dressed a bit differently today, probably due to the cool temperature. They each had on what I would describe as a long sleeved tee shirt and a pair of long underwear pants. The shirt was tucked in so the material pressed against their chests and gave their breasts a distinct outline. The pants were so skin tight that they left little to the imagination. Camel toes were being flashed on a regular basis. They had to know I could tell and must've dressed this way to taunt me.\n\nWhile we ate, they asked if I was planning on going fishing today. I said I was unless they had some jobs for me to help out with around camp. I kept waiting for Julie to return but she didn't. I helped clean the dishes and gathered some wood to keep the fire stockpiled, opened my tent so that it could air out, and hung both sleeping bags up to also air out. I also went to the stream with my filter pump and pumped two gallons of water through the ceramic filter for the day's supply of drinking water. While I was there Tammy came over. When I stood up she surprised me with a warm hug. When she pulled away I must have looked surprised because she burst into laughter.\n\n\"Not the reaction you expected after last night?\"\n\n\"I didn't know what to expect but not a hug.\"\n\nShe laughed again. \"I want to first apologize for my behavior last night when I left. Barb told me that she had shared our story and how you reacted and I wanted to thank you for your understanding.\"\n\n\"Tammy, it is I who needs to apologize for the male species and your treatment. I think the way you were treated is disgusting. It made my heart sick to think you had that experience.\"\n\nI then received another hug, one that went on for a while. I finished with the water, then gathered my fishing gear and left. I did not get too far when I heard someone calling me. I turned to find Barbara following and attempting to catch up. I stopped and moved back to her. She too gave me a great hug.\n\n\"I want to thank you for last night. It was fun after we got the serious stuff out.\"\n\n\"Well, Thank you for last night. I too had fun.\"\n\n\"There are two things I wanted to tell you. That I enjoyed last night and I enjoy your company but secondly, I want you to know that today I am going to be working on Tammy to come to your tent again tonight. I found you to be gentle and caring in your love making. As I told you Tammy is still a virgin and if I can get her to come to your tent I want to ask you to treat her well and make her first time something to remember with joy and without guilt.\"\n\nI was taken aback by this information and this offer. \"I am feeling very confused right now about my feelings and about this situation. I promise to spend the day thinking about it and let you know when I come back to camp.\" She smiled and I waved, turned, and headed upstream to do some thinking and fishing.\n\nI mindlessly hiked upstream to find some new areas to fish, mulling over the situation in which I found myself. Suddenly I realized I had been staring at my box of flies for a long time. I didn't want Tammy to come to my tent this evening. I wanted Julie. I was worried about how this situation was most likely destroying any chance Julie and I had to get together in any real way.. I did not know what to do. Julie wouldn't look at me much less talk to me. What was she thinking? What bear traps lay out there waiting for me to step into?\n\nA loud splash brought me back to the here and now. Something large must've come out of the water after some food to make that kind of splash. I lowered myself to create less of a silhouette and watched and waited. The sky was blue, with a few clouds, and the sun was warming things up nicely. It was not too long before a nice trout, which appeared to be a Rainbow, jumped out of the water chasing a Caddis into the air. Most of the time when you see that behavior a Caddis hatch is the reason.\n\nCaddis pupa move up through the water from the bottom using an air bubble for assistance. When they reach the surface they are able to break out of the case and immediately fly into the air to escape the chasing trout. Trout key in on these pupa as the insect is most available and most vulnerable during this time. The momentum of the trout propels it into the air when the Caddis flies away. This is not like the trout's behavior with mayflies, since they sit on the surface film for some time while they expand and dry their wings. I tied a #18 Elk Hair Caddis pattern on my line and followed it with an ant pattern, both dry flies.\n\nI did not see any obvious trout laying in wait. I began to cast my flies upstream, attempting to land them along a foam line in the current. I quickly hooked into a trout that took my fly and immediately headed for the bottom pulling my line with it. Then it suddenly reversed and headed to the surface, leaping out into the air a foot or two before falling back into the water for another run for the bottom.\n\nThe trout was trying to shake the hook or break the line. This trout was behaving as if it had been hooked before and knew the tricks. I must have had a good hook set and was able to keep the tension on the line low so that it did not break. The trout soon tired and I had it in my net. I removed the hook from its lip and began to move the net in the water to create a current to resupply the oxygen in the trout. I then lowered my net and the beautiful Rainbow swam away.\n\nCatching that trout brought me out of the funk I was in and I began to have a great day of fishing. I worked my way up stream casting my fly to the foam line. If I saw a waiting trout or a trout taking bugs off the surface, I would then cast to them. The sky had cleared and became clear and blue. A very slight breeze blew, making sounds through the trees. The air was clear, bright, and cool even with the sun so bright.\n\nI came upon a large group of willows that extended on both sides of the stream. They had grown back into the bank for a ways on my side of the stream. I decided to move left around them and once past them I moved back to the stream. There was a slight rise in the terrain where the willows stopped growing and I was able to easily begin to move around them. At the top of the rise I froze. Before me was a meadow with Aspens growing on the left side and the stream moving to the right on the right side. Close to the trees and not more than 10 yards in front of me was Julie lying on what appeared to be a sleeping bag, sunning herself and totally nude.\n\nI very slowly backed up and knelt down so as not to be seen. Had I conjured her up or was she real? I was sure she was real. What to do now? Did she choose this place knowing that I would be coming by or was this a total accident? What was her mood? If I approached her would she be embarrassed and make things worse between us or was it an invitation? I do not know how it came about but in my mind I have always thought of Julie in the long term. I did not want our relationship, if you would even call it that, a one night encounter so I did not want to mess this up any more than it was already.\n\nAs I debated with myself, I watched Julie. She was on her back with her feet toward me, off at a slight angle. With the rise in the terrain at my position, I could see her very well. Her legs were spread and I could see her shaved pussy. I also noticed her breasts were lying slightly to the side but that her nipples were most definitely poking up into the sky. I could see her chin but could not see her eyes. She chose that moment to rise up and roll over. I did not know whether to watch her behind or her breasts as they swung back and forth before she laid back down.\n\nI decided that discretion dictated that I back off and move around her so I slowly and carefully moved back down the incline and then moved down stream where I crossed to the other side and then moved cross country to return to the stream further up from the meadow. I had brought some energy bars with me today so did not return to camp for lunch but just stayed out there and kept fishing.\n\nOf course the situation back at camp and the lovely vision in the meadow remained on my mind.. I could not come up with a solution but decided that I would agree to allow Tammy to come to my tent that evening if she so desired. I also had some ideas about how I would create a safe environment for her if she did decide to join me that evening. I was still torn. Barbara had made effective arguments about my helping Tammy get over her attempted rape experience. At the same time I wanted Julie so badly it made me sick inside to think about what must be going through her head while I was sleeping with her roommates. I think she liked me and I knew I liked her a lot!!! Based on how we got along that first day I was sure we could make a long term relationship work, but we had this large elephant joining us in the forest.\n\nAs I entered camp I noticed that the three girls were at the fire. I could hear what sounded like a pretty intense conversation. Tammy and Julie had their backs to me and Barbara was the first to notice I had returned. She must have said something as the two other girls turned to look at me. For a moment Julie stayed seated and I thought she might stay. I wanted to talk with her so very much, but she soon stood up and walked away.\n\n\"Hi Julie\" I sped up my pace to catch her but Barbara interrupted.\n\n\"Don't!\"\n\nI quickly stopped. I looked at Barbara to see if she had any more for me. She just shook her head. \"She still is working things out and I suggest you not push her right now.\"",
        "I stopped and sat at the fire. \"I'm not the bad guy here! \"\n\n\"I know that and Tammy knows that and even Julie knows that. She is just trying to figure out her feelings! Her feelings about you and about Tammy and myself.\"\n\nTammy then asked me about my day and I shared some with them. Told them about the Caddis hatch and some of the fish I caught. When Tammy got up to go to her tent for some reason, Barbara asked if I had decided anything about this evening. I told her that I thought I had until I walked into camp and saw the tension between the three of them.\n\n\"So, what had you decided before you came into camp?\"\n\nI told her that I really wanted Julie to come to my tent this evening but that I understood what she was trying to accomplish with Tammy and that I understood it even if I did not like it. I further told her that if Tammy showed up at my tent that evening, that I would invite her in and would treat her with great respect and gentleness.\n\n\"Great!\"\n\nTammy then returned to the fire and we continued to talk about our day. I did not feel much like small talk so I grabbed the water filter and bottles and moved upstream away from camp to collect and filter some water for our drinking needs. My internal calm that I had just prior to reaching camp was gone and I wanted to see if I could get it back. I was in sight of camp and could see the activities of the camp, including the return of Julie. Tammy was taking her sleeping bag off the bush that I had thrown it over to air out, and Barbara and Julie sat talking at the fire. I saw Julie look in my direction but couldn't see her expression. I assumed that Barbara was sharing with her what I had said. I was feeling a great conflict: do I rush in and grab Julie to talk? Would that make things better or worse? By going along with Barbara, was I rejecting Julie and was that what was upsetting her? I needed more data and Julie was the one who could give it to me.\n\nI picked up the water jugs and filter and began to move back to camp. As I neared the fire, I closely watched Julie and thought she was going to bolt but she stayed seated. I moved carefully placing the filter in its place and the water jars in theirs. I then moved to the log and sat down. I looked at Julie and she was looking at me. I could see neither anger nor happiness on her face. I breathed a little easier.\n\n\"Julie, can we talk?\"\n\nShe shook her head. \"Noah, I do not like this situation either but as you told Barbara, I understand it intellectually. I think you should go along with Barbara's idea for Tammy for tonight and tomorrow we can talk.\" With that said, she got up and walked out of camp.\n\nI worked on the fire to get some hot coals built up in anticipation of cooking dinner. The girls all pitched in and began dinner preparations after Julie returned to camp. There was small talk going on between all four of us but no one was pushing the envelope to get into any subject that moved below the surface. We cooked up our reconstituted meal and the girls shared with me a little more about life at their school. They did ask me at one point about people I might know on their campus or people on mine that they knew.\n\nThere were few common acquaintances and those that were did not reach above the level of, \"I think I know of that person.\" As time passed and the light dimmed, the tension built rather than subsided. I felt everything was out of my control so I left the group and moved to my tent hoping for some down time to regain my, if not my happy place, at least a place I could relax. I stripped, climbed into my bag, put my clothes in the stuff sack and laid down to wait.\n\nWhile I waited I did hear some conversations but could not make out any words. I may have dozed off but a scratching at my tent did occur.\n\n\"Noah, This is Tammy, may I come into your tent?\"\n\nI got up and turned on the hanging flashlight. I had thought that by having the light on Tammy might feel a little more relaxed and safe. I then opened the flap and she crawled in wearing the same outfit she had on the previous night, a top and shorts of some kind of soft material. She then reached back out of the tent and pulled her sleeping bag into the tent. I then zipped the flap closed and sat back.\n\nWe just looked at each other for a moment and then I saw a bit of a smile which caused me to smile and then we just both laughed at the rather uncomfortable situation. I laid back with my head on my stuff sack and said, \"Tammy, I want you to feel safe and in control of everything, so I am going to lay back and I want you to take the opportunity to explore me as you wish. I will not attempt to touch you unless I receive permission from you. I do not know if you want to just talk for awhile, my goal is for you to have a good experience and go wherever you want tonight to go.\" She smiled and began to unroll her sleeping bag. It was already unzipped so she spread it out on the other side of the tent from me.\n\nWhile she was situating herself on the bag she said, \"I do want to hear about your day and what you were thinking about for this evening.\"\n\nI told her about a battle I had with a particularly wily trout, about the mixed up feelings I had about last night, and learning of her experiences. She interrupted to say that she appreciated my willingness to go along with the plan. With that she moved a little closer to me, wrapping her sleeping bag around her and laying down. She laid on her left side facing me so I rolled onto my right side to face her. She then leaned forward and kissed me and cuddled closer.\n\nShe told me about her day of being all mixed up in her feelings and of her fears. I inquired about what those fears might be but she was reserved in her answers. I suggested that she might be afraid of it hurting when I would enter her. She chuckled and said that was not it. She told me that she was a tomboy growing up and a bicycle crash when she was twelve plus her use of tampons did her hymen in some time ago. She said her doctor told her that she had lost it some time ago when she had her first female examination. She said her fears had more to do with what she might feel like after it was all over. We laid in silence for some time then.\n\nI felt her move a little closer and looked into her eyes. She was looking me in the eyes causing me to wonder what she was thinking. I then felt her hand touch my stomach. Her hand stopped at the touch and she continued to look into my eyes. I gave her a slight smile of encouragement and her hand again moved forward sliding up across my stomach and to my left side. I did not move and continued to smile. Her hand then moved up to my chest and across it. She stopped at my left nipple and squeezed. She then leaned forward and kissed me and as she held that kiss she moved her hand over my chest. She then leaned back and looked at me.\n\n\"It is different to be able to kiss someone without all the pulling and squeezing that usually goes along with it. It is kind of nice.\" She then smiled and said, \"Thanks for doing this, for providing this experience for me. I have never felt this much in control on any of my past dates.\"\n\nShe then moved forward and kissed me, this time wrapping her arms around my head and holding me tight. I still did not move or attempt to touch her. I did kiss back when she kissed me. After a moment, she sat up. Smiling, she lifted her top off over her head. Her beautiful breasts came into my view. Upon seeing them I realized that although I had seen them last night, I had not studied them and had not thought about them at any time today. They were the size of a small apple but perfect for her body and pert. They defied gravity by pointing forward in a rounded cone shape. Her nipples were hard.. I had to use great willpower not to reach out and touch them. They called out for touching and squeezing and kissing. Once her top had been set aside, Tammy looked at me with a slight smile. I took it as a signal that she was testing me to see if indeed I would not move in on her and take control away from her.\n\nAfter a time she laid back down and moved in close to me. She moved the sleeping bag material so that she could press her body up against me. She laid her head on my shoulder and wrapped her arms around me. Her right arm on my chest and her left under her and her hand under my shoulder. She again moved her hand around my chest, my arms, stomach and neck with periodic kisses on my mouth and cheek.\n\nAfter a time I got the impression that she was wanting to move her hand down to my erection but was hesitant. She would move her hand down my right leg and then sometimes over to my left leg and then back and up my right leg again and across my lower abdomen. Finally, I took her hand in my left hand and placed it on my erection. The hand stayed there. At first she just held it but then began to squeeze it with pulsing movement. She then began to explore it more and then sat up and pulled the sleeping bag back so as to see what it was she was feeling. She ran her hand over the erection inspecting and studying. She then switched hands and moved her right hand to my scrotum: feeling it, fondling and squeezing until I jumped. She then stopped and looked at me.\n\n\"Squeezing the balls can be very painful so I was a bit nervous.\"\n\nShe laughed. \"You're nervous!! It is both soft and hard at the same time and so much bigger around than a tampon and I have always heard about a man's balls but I have never known just what to expect, so I was exploring\"\n\n\"Explore all you want but just be careful on the squeeze part.\"\n\n\"OK!\"\n\nShe continued to sit, leaning forward with one of her hands on my penis and the other fondling my scrotum, rolling the balls around with her fingers. She then began to pump my erection up and down until she noticed the appearance of some pre-cum. She then touched that with the tip of her finger and brought it to her nose and smelled it, afterward turning to look at me with a smile that I interpreted as one of mischief. She moved to turn off the light.\n\nIn the dark I could not see for some time but did hear and feel her moving and then felt her climb on top of my legs, sitting on my thighs close to my knees with one leg on either side of me and her knees at my waist. While I was analyzing what I was feeling at her touch, I concluded that the movement I had felt earlier was her removing her shorts and that now she was completely naked and sitting on top of me. My erection bounced.\n\nShe began to move her bottom up my body until I felt her touch the underside of my erection with her lower abdomen and I felt hair tickle the base of my penis. She then stopped. We stayed this way for a while and then she moved again. She moved up my body some more and I felt my erection being pushed at the base so that it pointed toward my head. My eyes still had not totally adjusted to the dark but I was seeing shadows against the tent top. I could feel and see her moving. She continued to move up and now I felt the softness of her flower petals along with moisture on my erection.\n\nWhen she stopped moving up my body she was sitting on my erection, with moisture lubricating the situation. My holding power was being challenged. I did not want to lose control while I was giving her control of the situation. I took several deep breaths in an attempt to not explode into an orgasm before we had the opportunity to complete this exercise. She may have sensed my dilemma or she was having one of her own as I also heard panting and moaning coming from her. This pause lengthened and I then felt her roll a condom onto my erection.\n\nAfter a moment or two she again began to move. She moved forward about another inch and then reversed course; this time leaning forward as she moved her bottom back toward my legs. I suspected that she was rubbing her clitoris against my erect penis. She let out a long moan as she did this. She stopped her downward movement and again began to move up my body, this time putting more weight against my erection and increasing both the friction and the moisture. The moaning coming from her mouth and the speed of her movements both increased. I think I was also hearing the moisture noises as our genitals moved against each other. Her movements forward stopped before the tip of my erection might gain access to her vagina and her movements back included an even greater angle to her upper torso. I asked her if I might touch her breasts.\n\n\"Yes, Please!!\"\n\nI moved my arms up across the side of her butt, up the sides of her waist and torso and then slowly moved my fingers to her breasts. I very gently moved my fingertips around her breasts and across her nipples. I hadn't been fondling her breasts so very long when she moved her bottom up higher on the stroke and I felt the tip of my penis touch the opening to her vagina. She stopped still and waited. She must have been thinking about having me enter her. I know I sure was. I wanted to move my hips so very badly, but I had promised that this was her show. Instead, she moved her hips and slid her bottom back down without having me enter her. On the next stroke she again paused at the point of my entering her and again moved her hips and again moved back down.\n\nMeanwhile her verbal noises were again increasing in volume. I was sure that her friends in the other tent were also hearing her sounds. Her movements and the stopping at her entrance occurred quite a number of times. I didn't count. I was too busy concentrating on not exploding yet enjoying the ride.\n\nFinally, it happened. She moved forward up my body and up my erection with her soft moist flower and stopped when my tip was at her entrance. This time she moved her hips the opposite direction and I felt the tip of my erection just barely enter her.\n\nAn \"Oh god\" came from her mouth.\n\nShe then stopped but soon continued to move back down, forcing my erection into her vagina. She began to offer more words rather than just moans.\n\nWith each movement she would say, \"Oh so good\" or \"You're so big.\"\n\nEven with all the moisture, she was tight and I was in heaven. She would stop and rest, then move forward again, gaining ground before reversing, then pushing me in even further. After a time I was far enough that her back and forth movement was having a major effect on my ability to hold back. I began to move my hips back and forth. I also moved my hands away from her breasts and onto her hips to use my arm strength to assist in my thrusting. I don't think I was even all the way in when suddenly she began to shake with uncoordinated movements and fell against my chest. At that point I pushed myself into her as far as I could and exploded.\n\nShe continued to shake all over, and her vaginal muscles contracted repeatedly around my erection as I emptied myself into the condom. I was exhausted once my orgasm had played out, even though I had just laid there while Tammy had done all the work. I imagined that she must have been even more exhausted. That had been the most powerful orgasm I had ever experienced--not that I had a great number with which to compare. We laid there together. I was on my back and still inside of her; Tammy was on top with her head on my chest. I thought she had fallen asleep. I also began to worry that the longer we stayed like this my little swimmers could escape the condom and swim up her vagina seeking their destiny. I assumed she was on the pill but we had never discussed the subject. I reached my limit of worry and tried to wake her. I reached my left arm as far as I could into the corner of the tent attempting to find the small towel I had left there for this moment.\n\nTammy raised her head and looked at me, then said, \"Hi!\"\n\nI said hi back and moved the towel down to our junction. She lifted herself up and I attempted to catch any liquid that was released as we parted. Tammy then took the towel and cleaned herself and then returned the towel to me. I cleaned myself off and slid the bundle which included the condom out the bottom of the tent flap. Tammy then laid back down on her side facing me and her head on my shoulder. I wrapped my right arm around her and pulled her tight to me.\n\nShe kissed my chest. \"Thank you for allowing me to control things! I cannot explain in words just how much that meant to me and how very wonderful it was. WoW!!!\"\n\n\"You are most welcome. I thoroughly enjoyed the experience.\"\n\nShe laughed. \"I thought you might've\"\n\nShe then went quiet and I again thought that she had fallen asleep so I held her.\n\nI may have fallen asleep as I jumped a bit when she said, \"Noah!\" and raised her head.\n\n\"What?\"\n\n\"I have to go to the bathroom. Would you go with me?\"\n\nAfter I replied that I would, she sat up and swung around so her feet were close to the tent flap and then zipped it open. She apparently did not intend to dress prior to exiting the tent. She put her flip flops on and left the tent. I grabbed my foot ware and the toilet paper and also left the tent. She took my hand and we began to walk out of camp in the direction we used as our bathroom.\n\nWe walked for about 40 yards down a path that we had created with our traffic. When finished, we walked back to camp and to the stream where we rinsed our hands. We wiped our hands on a towel we had hanging on a branch for such purposes, and returned to the tent. Once inside we rearranged the sleeping bags and climbed in. We had gained a chill with our outing so cuddled to share and generate heat. I held her close to my body and ran my hands up and down her back and behind. I was enjoying this very much.\n\nI could feel myself warm up and was sure Tammy was warming as well when she lifted up her arms, looked at me and said, \" Noah, could we do it again?\"\n\n\"Yes!\" I rolled toward her and wrapped both arms around her, pulling her into a long and juicy kiss.\n\nWhen we broke the kiss she said, \"Would you make love to me and take control?\"\n\nI agreed and rolled her onto her back. I took a condom and rolled it into place then lifted myself up on my hands and knees and moved over top of her. I moved up over her face and began to kiss her, more pecks than kisses. I worked my way around her face, cheeks, ears, chin and neck. In the process I lowered my upper torso onto my elbows to be closer. I also began to move my kisses lower: to her shoulders, her upper chest, her upper arms. As I finished kissing an area, I would move down further. I kissed her below the breasts before I moved up between her mounds. I kissed down her left breast around the areola and suckled her nipple. The noises she made thrilled me. I worked my way down her body, not missing any spots until I came to her lower stomach.\n\nI moved away from her center and down her upper thighs. I moved my kisses from outside in and teased her, moving upward when on the inside of her thighs but not quite to her treasure. I moved down her left thigh and up her right. At this point her sounds, her movements, and her smells were pushing my limits. I was very hard and I wanted in.\n\nShe spread her knees and allowed me access to her beautiful flower. I kissed around her mound but again did not move into the center. Suddenly she grabbed my hair and pulled me up toward her face.\n\nWhen I got close to her mouth she said, \"I want you in me now\"\n\nI moved my hips and began probing with my erection. Rather than just enter her, I decided to move my right hand down between us, grab my erection and rub it up and down her vaginal lips. I continued my teasing until she again jerked on my hair and said, \"Now!\"\n\nI lined up my erection with her opening and pushed just a little. I couldn't resist using my right hand to rim her opening with the tip of my penis . She jerked and I relented. I slowly pushed myself into her, stopping often to reverse the process, and then continue to go deeper. Once all the way in, I paused to savor the feeling and then pulled out almost totally before pushing back into her. She was a very noisy lover and kept trying to wake the forest. We heard an owl hoot nearby.. She wrapped her legs around me and locked her ankles behind me. When she was in full blown orgasm, she clamped her legs and thighs around me and squeezed. I lost my load right then. The orgasm lasted forever, but not long enough. As we came down my muscles were mush. I tried very hard not to crush her with my weight. Finally, I rolled off of her and tried to catch my breath. At some point I was able to reach up and get the towel and hand it to her. When finished, she gave it to me. We then cuddled and fell asleep.",
        "I was awakened by kisses on my face, chest, and neck, and a hand on my erection. When she realized I was awake, she said, \"Again?\"\n\nI nodded. She felt around the pillow area for a condom but couldn't find one. I rolled over and up on my hands and knees and moved my sleeping bag, pillow, clothes and we still could not find one.\n\nI knew what to do. \"I think I have an idea you will like.\"\n\nShe looked at me with a question on her face. I told her to just lay back down on her back. I moved close to her, wrapped my arms around her, and began to kiss her. I followed a similar track as I had last night, moving slowly lower on her body until I reached her lower stomach. The softness of her skin and her body's response sent all kinds of thrills through me. I kissed around the top of her mound but avoided her clit. When I thought she was near ready I raised and parted her knees and then began the final assault by kissing along the inside of her thighs jumping from left to right and back again but closer to heaven each time.\n\nIt was too dark under the sleeping bag to see well, but I could imagine her juices flowing profusely. When I reached my goal I made my first touch with my tongue wide and flat at her anus then moved it up across her swollen lips and across her clit. The juices I gathered were plentiful and delicious and the noise she made would have awakened anyone not already awake. I continued to assault her precious assets. I pushed my tongue into her opening, wiggled it, and then moved to the clitoris. I circled her clit and then sucked on it. Her sounds increased in volume until suddenly she grabbed my head with both hands and pulled me into her as she clamped her thighs tight. I continued to wiggle my tongue as this was my only option. I could not breath and knew I would just have to wait out her orgasm before I could take a breath. Her whole body shuddered and then her thighs loosened enough to allow me some air.\n\nWe cleaned up as well as we could and began to get dressed. We heard noises outside that appeared to be close to the fire area. The other girls must be up and about. Tammy was the first dressed and out of the tent. I heard her greet the others and it sounded like she was smiling. I couldn't make out what she was saying but she sounded excited. I crawled out of the tent and saw all three girls talking in a group. I headed off into the woods to relieve myself. I believe I caught Julie's eyes as I turned and she didn't seem happy. Upon my return, Julie was nowhere in sight. I went to the stream to wash before making my way over to the fire.\n\nAs I approached I heard Tammy's voice. \"Well if she doesn't want to spend the night with him, I will!\"\n\nHer back was to me so I don't think I was supposed to hear this statement. I caught Barbara's eye and she looked to the ground. I said, \"Trouble in Paradise?\" That did not go over very well so I shut up. There was not a lot of conversation while I ate. The two girls did not eat at the same time. I didn't know if they had already eaten with Julie or were waiting until later. Tammy sat next to me and made it clear that she was not upset with me.\n\nTammy thanked me repeatedly for last night and told me how wonderful it was. She also lamented for not trying this new found activity earlier. Barbara was quiet and restless. I was definitely getting the message that I needed to go fishing and let the girls work things out. I washed my dishes, hung out my sleeping bag, picked up my equipment, and headed out.\n\nI decided to hike further from the camp than I had previously to explore new water and see what was out there. I also needed to burn off some of this negative energy I was feeling. My mind kept thinking about Julie's eyes this morning. I couldn't decide if they looked hurt or angry. I argued with myself, thinking I should have refused to sleep with Tammy last night. But, she told me to. She wanted to help Tammy. I did enjoy last night a great deal. Tammy turned out to be a very loud and enthusiastic lover.\n\nI hiked for about an hour without fishing and then spotted water that I just could not pass. I got low and crawled closer to the stream so that I could observe what the fish were doing. It was not long before I saw some smaller fish taking something off the surface. I noticed a cloud of dark bugs clustered over the water. I was sure that they would be Tricos, a mayfly that is very small and very prolific. When trout are keying in on these small insects, they usually ignore all other offerings. I tied on a BWO, a Griffith gnat, and a Trico Dun to do a little prospecting. Due to the foam line it was easy to find the feeding lane. I cast to it and waited. I soon caught several trout, all rainbows, and all about 10 inches long. If I wanted something bigger, I needed to explore more.\n\nMy mind wasn't really on fishing. I was frustrated. I had planned this trip for more than a year and now some women were messing it up for me. I laughed at myself. Enough playing the victim; I had a great deal to do with my situation and I needed to do something to fix it. If I could only talk with Julie, I hoped that we could fix things. I wanted to fix things so very much. I got my equipment organized and began to hike back. As I hiked, I thought, or more reminisced, about that first day when I heard the squealing and then saw the three beauties. I remembered Julie's beautiful breasts and how they moved. I remembered how she approached me when I came around the bend in the stream. Her eyes were the most memorable, but that tee shirt and how it moved is also indelibly etched in my brain. I remembered how much she seemed to enjoy fishing, and her wonderful reaction to having caught a trout.\n\nThe more I remembered, the more I was determined to fix things with her. My plan was to get back to the area I saw her in yesterday, when she was sunbathing. I hoped she was there. Even if she was nude when I got there, I was determined to have a conversation. As I hiked, I noticed some splashing and stopped to study the water. I saw a pretty good sized trout, so I stopped to see if I could catch it. I was casting across several different currents so it took some concentration to make sure the fly moved past the trout naturally.\n\nUnfortunately, my mind was not able to concentrate and my cast, my drift, and my position were not good and the trout did not take the fly. I tried a few more casts but managed to spook it. Ultimately, I continued on my hike back toward camp. As I approached the area where I saw Julie yesterday, I slowed down to survey the area. I did not want to miss her and walk right by. I searched and searched, but I only ended up disappointed. Julie wasn't there. I even circled back and looked around the willows to make sure. I continued toward camp but kept my eyes open.\n\nAgain, I heard a trout take a fly and went to investigate. This time the trout was on the opposite side of the steam. It was hunting by hiding behind a rock that was about a foot or so away from the bank. Water was flowing on both sides of the rock and creating an eddy when it came back together. This is where the trout was picking off its prey. I sat down on my side and well away from the stream.\n\nDue to the location of the trout on the opposite side and the multiple currents between us, I decided to use only one fly, an Elk hair Caddis pattern. Placing the fly about 12 inches up stream would not be the problem. Once the fly landed, the line would also land and all would begin moving downstream. The issue was that the line would move at a faster speed than the fly. When the line became tight, it would pull the fly away from the path that the trout was using. In addition, I was upstream of the trout so if I set the hook too soon, I would be pulling the fly right out of its mouth. I would have to wait until the trout headed back down in the water column to set the hook.\n\nI made my cast dropping the fly in a pretty good spot but I had not provided enough slack in the line to give the fly time to go down stream and enter the trout's feeding area. The line went tight and the fly was pulled out of position. I allowed the fly to continue for a few feet well past the trout. I then lifted my rod tip and picked the fly off the water. I then laid it down again upstream of the feeding trout. This time the slack looked good. The fly floated downstream and moved past the rock on my side. I saw it get caught in the eddy behind the rock when not far off to my right I heard a voice.\n\n\"Are you hungry?\" My concentration on the trout was so focused that I was startled by the sound. My body jerked which moved my right arm, which of course moved my fly rod and lifted the line and the fly. I also managed to trip over my own feet and began to fall forward. I saw out of the corner of my eye, the trout leap out of the water attempting to catch my fly as it lazily floated in the air toward me. The trout missed and the line and fly managed to hit me in the face. I did manage however to not fall onto my fly rod.\n\nThen I heard what sounded like a stifled giggle. Then I heard just a plain old laugh. As I lifted myself onto my hands and knees, I looked over to see Julie with her hands over her mouth and laughter in her eyes. I was really glad to see her and did not feel bad about the laughter at all. When I stood, I noticed that she had apparently set out a picnic.\n\nShe had a blanket on which she sat along with some food utensils and sandwiches. I found a place for my fly rod to set down and took my vest off and set it down then walked over and sat on the blanket as well. Julie was still trying hard to stifle her laughter, would begin to say something and then just laugh again. I just smiled and waited. My heart was singing. I did feast my eyes on her. Her eyes were sparkling and seemed to contain some moisture, she had on a tee shirt with clearly no bra, shorts. and by the way she was sitting with her thighs wide and bare feet tucked in at the knees, no panties. I quickly moved my eyes back to hers. This opportunity was sent from heaven and I was not going to screw it up by staring.\n\nI sat looking into her eyes and waiting for her to gather her composure. She eventually spoke. \"I wanted to apologize for my behavior this morning\" She waved her hand over the picnic. \"Now I need to apologize for startling you.\"\n\n\"No need, I am just glad we are talking.\"\n\nShe smiled. \"That is why I need to apologize for my behavior. I asked you to sleep with Tammy last night and then treated you badly when you did. Apparently, you did very well by the way.\"\n\nI looked at her quizzically and she clarified, \"Tammy cannot stop talking about it, in addition to all the noise last night that kept everyone awake!\" She paused and looked down. \"I kept thinking that it should have been me.\"\n\n\"I was thinking the same thing.\"\n\nShe looked up into my eyes and I saw tears along with sparkle. She leaned forward and gave me a quick kiss. I wanted so much to wrap her up in my arms and hold her, but she sat back and studied my eyes. \"Thank You!\"\n\nShe handed me a sandwich and some of the tension left me. We talked about my morning fishing and she had lots of questions about flies, water currents, and trout. I wanted to know about what happened back in camp that morning, but thought it best to allow it to come out at its own time. We talked about school and our plans for future careers. Then during a pause in the conversation she looked into my eyes and asked, \"Why did you not come talk to me yesterday?\" I didn't know which time she was talking about, and it must have shown. \"You know, when we were just up the stream from here a little.\"\n\n\"You knew I was there?\"\n\n\"Yes\" She drew out the word.\n\nI'm sure I turned red and stammered a bit. \"I wanted to talk with you so very much, but, I didn't know where we were or what you were thinking. I didn't want to do anything that would make things worse. If I had come across you and you had some clothes on, I can assure you, I would've approached you and talked. I was afraid that I would embarrass you and make things even more uncomfortable if I approached you at that point.\"\n\nShe then asked with a smile in her eyes, \"Did you enjoy what you saw?\"\n\nWithout hesitation I said, \"Yes, very much! Julie, you are so very beautiful!\"\n\n\"Thank You.\" She reached over to pull me in for a very sexy kiss.\n\nAfter I recovered, she talked about this being their last day and tonight their last night. Tomorrow they would be leaving to go back to campus. Both Tammy and Barbara needed to be back tomorrow night so they thought that they would pack up in the morning and plan on eating their last meal in camp at noon, then head out. I could feel the tension returning. I didn't want my time with Julie to be so short. Julie needed to be back on Tuesday evening for a conference she had been waiting for all year. This gave me an idea, but I held it back until a more opportune time.\n\nMy eyes wanted to wander, but I continued to concentrate on her eyes. Those eyes were always so very expressive. Throughout our lunch and conversation, she would move or change positions in ways that seemed to be for the purpose of giving me a peak at her assets. I have to admit I did take advantage of those opportunities. While we cleaned up the picnic, my eyes caught a glimpse of her left breast in its entirety through a very low cut neckline. I wondered, who would bring such a tee shirt camping? My mouth watered and my erection called out to me, I want attention.\n\nWhen we had packed and gotten ready to hike back to camp, I picked up my fishing gear and went to pick up some of the gear she had brought to the picnic. She set her stuff down and came over and stood right in front of me. I put the gear down and upon standing back up she put her hands around to the back of my head and pulled me into a kiss: a warm, juicy, soft kiss. When she broke it she said, \"Thanks, but we ladies still have some matters to work out and your presence would inhibit that. You go fishing and have fun. I will look forward to seeing you in about 3 hours.\"\n\nI decided it was time to offer my suggestion. \"It has always been my plan to leave here on Tuesday. It would not be out of my way to drop you off at your place on my way back to mine. Think about it!\" After pulling her in for a few more kisses and to just hold her for a bit, I watched her head out back to camp. I watched her go and wondered if there was a way for me to listen in on that conversation. I decided the risk of discovery was too great and the downside a cost I did not want to even think about. I picked up my gear and went back to hunting trout.\n\nI realized I had the time, so thought I would return to the area upstream that I had discovered this morning. There was a place where the incline decreased and a small meadow was nestled. Meadows are fertile areas for plants and thus insects. The trout like the slower water due to the need for a lower energy burn and with the plentiful food it would be a prime area for trout. If there were holes in the stream in that area, there would be lunkers holding there. I moved fast rather than fishing along the way, as I wanted to have plenty of time to explore. As I got close, I could see a spot that looked like what I remembered.\n\nI saw the stream flowing toward me through a grouping of large rocks. Immediately below the rocks, the water was tumbling where the incline changed. The slope was greater closer to me and flatter further up stream. When I reached this point, I stopped to assess the water and decided to tie on a large stonefly adult with a stonefly nymph as a dropper.\n\nMy first cast was to the water on my near side, up near the rocks. I allowed the flies to get into the tumbling water and be washed downstream. The dry floated along the foam line and moved gradually out of any feeding lane. I picked up my line and this time moved it further into the current. The dry had not moved more than a foot when it went under. A trout had apparently taken the dropper fly. I lifted my rod to set the hook, and the fight was on. The rather large Rainbow jumped out of the water and continued to somersault across the surface. I moved downstream with the fish and was soon able to bring it over to slower water and scoop it up with my net.\n\nIt was about an 18\" Rainbow in beautiful colors. This trout made such a show of itself that I was sure I wouldn't be able to pull another trout out of that area for a while but that didn't prevent me from trying. After about ten more attempts with no luck, I moved upstream to the front side of the large rocks.\n\nHere the water was slower, held back by the two large rocks. A pool formed here and I thought I saw a cruising lunker. I needed to change my fly for this trout as Stoneflies like the tumbling water and would not generally be found in a pool. I sat down and just spent some time watching. Again, I saw the cruising trout. It appeared to be circling the pool, looking for food, and coming to the surface periodically to pick off a small mayfly. I didn't want to move closer to verify that. I knew I would spook the trout. I stayed low and changed to a single BWO in size 18. I waited until the trout was on the opposite side of the pool and cast my fly with the hope of landing it on the surface, both softly and over the feeding lane the trout traveled through when on my side of the pool.\n\nThe fly landed softly but could have been just a little further out into the pool. I didn't want to lift the fly and try again until the trout had made its pass ,so I waited for the trout to return. Finally it came up past me from my right and headed in the direction of my fly. It moved on and passed my fly without taking it. It may have been my imagination but I thought I saw it move a little out of its previous lane toward my fly, but then it turned back. After the trout had left, I very carefully lifted my fly off the water and cast again.\n\nThis time it landed exactly where I wanted it. I had to wait for the trout. I waited for what seemed like forever, but the trout finally did return. It moved up the feeding lane and this time paused near my fly, but then moved on. I felt rejected. This time when I lifted my fly off the water I brought it back to me so I could change it. I decided to change to a beetle with an ant trailer. The pool was in a meadow, so terrestrial insects should be a common sight for a trout.\n\nAfter tying on the beetle and adding about 18\" of tippet, I tied on a red ant pattern. I cast these flies out over the pond and landed them in the same location as my previous cast and again I waited. I saw the trout approach out of the corner of my right eye. It entered my full vision moving right to left. As it neared my offering, it moved up closer to the surface and to my delight sipped in my ant. I waited just a bit to set the hook, wanting the trout to begin moving down into the deeper water and as a result giving the hook a better angle to grab on and hold. When I lifted my rod to set the hook, the trout went into overdrive shooting across the pool and away from me. It then began moving to my right toward the rocks at the bottom of the pool.\n\nThis put me at a disadvantage as now I would be not only fighting the trout but also the current at the lower end of the pool. Another fear crossed my mind that the trout would work its way into the current flowing between the two large rocks. If it was successful, it would be able to break off my line. My first reaction was to increase the pressure on the line to force it away from the rocks but I immediately knew this was a bad idea. I took a risk and I allowed the line to go slack. To my delight, the trout immediately stopped fighting and began to swim upstream. I moved my rod into a position so that the trout was again upstream of the rod tip and I added pressure to the line. The trout reacted immediately, this time moving upstream tricked into working against the line pressure pulling it downstream.",
        "Fighting the fish from this angle gave me the advantage. I was able to bring it close to shore and get it into my net. The trout was rather worn out as it sat docilely in the net while I picked the hook out of its lip. I kept the net in the water and waited for the trout to recover. I would test things by lowering the net. If the trout began to roll over, I would again raise the net to support it and keep it upright. On the third attempt the trout just slowly swam away and I had a feeling of great pride and happiness. I had tricked an obviously long lived trout and successfully returned it to fight another day.\n\nI continued to work my way up stream through the meadow picking up a few fish as I traveled. None were of the size I had released at the rocks. As I worked my way through the meadow I enjoyed the beauty and the solitude. I also wished Julie was with me. If I got a chance, I knew I would bring Julie here. She would love it.\n\nBy the time I reached the upper edge of the meadow, I realized that, calculating travel time, it would be more than the planned three hours before I would be able to return to camp. I began working my way back downstream. It was not my intent to rush; I still wanted to fish along the way. Even though I caught some more trout, none were as big as the two I caught at the lower edge of the meadow.\n\nAs I neared camp, I was covering ground that I had fished a number of times so I stopped less often to sample the waters. I soon began to hear the ladies as I approached camp. I came out of the Aspens that were near camp to see all three of them having a water fight.\n\nI also observed that they did not seem to be wearing any clothes. I stopped abruptly but then realized that I had seen all three of them naked with their knowledge so I continued into camp. I placed my gear near my tent and walked over to the fire area and sat on a log to watch. Julie was the furthest out in the stream and facing camp so the first to see me. She did not react but kept an eye on her opponents in this game, whose backs were to me.\n\nI was mesmerized by Julie and her breasts, they moved so gently, with such fluidity, that I could not take my eyes off them. The areolae were puffy; the nipples erect and calling to me. As she moved around the stream, throwing handfuls of water at her friends, her breasts moved and jumped and wiggled with grace. I was mesmerized by their ability to defy gravity. I had become so focused on them that I did not realize until I saw a sudden flash that she had moved closer to me and was throwing two handfuls of water at me.\n\nI moved just in time and only got hit by the edge of the water blast. I then noticed that the other ladies had also turned on me and were throwing water in my direction. I moved back far enough from the stream that I was out of range. We then reverted to verbal taunts, but I didn't get wet, and continued to enjoy the scenery. I also noticed a pair of the most expressive and beautiful eyes I have ever seen.\n\nAfter some time, the ladies ended their water fight, came to the bank, grabbed towels, and dried off. They still did not show any signs of modesty, to my great enjoyment. They all put dry shorts on, without bothering with underwear. Barbara and Julie each found a sweatshirt to put on. I am sure it was due to the cold water and chilly air that they wanted to warm up. Tammy, however, never bothered to put a top on and continued to display her bare chest. I also noticed that Julie was giving Tammy some not-too-welcoming looks. I wondered what was going on and thought again about the conversation the ladies needed to have earlier this afternoon.\n\nWe organized our plans for dinner; I would go gather some additional fire wood while the ladies mixed up our freeze dried meals and began to heat them. When I returned with wood, the kettles were on the fire. Tammy met me at the camp's edge, and took some of the smaller wood to add to the fire. While I separated the wood I had brought back by size and sawed the larger pieces into 16\" pieces, Tammy fed the wood she collected from me into the fire.\n\nApparently Barbara and Julie had set out plates, napkins, and utensils. Dinner was eclectic, since the ladies wanted to use up any odds and ends in their food supply. After all, this was their last evening meal on this camping trip and they wanted as few leftovers as possible.\n\nWhen Tammy announced that the food was ready, we each picked up a plate and took it to the fire. Tammy took the various kettles off the fire, placing them on the ground. I will admit that I had spent some time during this meal's preparation watching Tammy, and in particular her chest. I got caught by Julie a few times and was rewarded with a not-too-pleasant look. That is not to say that I didn't enjoy looking at Julie as she moved about the camp.\n\nI decided that it was only right that I wash the dishes tonight as a thank you to the ladies for their hospitality over the last several days. I took some of the pots to the stream and got some water to heat over the fire. It told the ladies to sit back and relax as I would do the clean up. There must have been some kind of secret signal as both Barbara and Tammy moved to their tent and later went for a walk while Julie sat down on the log and kept me company. She attempted to help several times but I told her that this was all mine.\n\n\"Washing the dishes is really not that hard,'' I told her. I wanted to give the pots and utensils a good scrubbing since they would be packed away once the ladies got home. Julie and I spoke of little things at first, such as how best to clean the pots or the best wood for a cook fire.\n\nThen after about 20 minutes and I was mostly finished with cleaning up, Julie said \"I am going to miss this place.\"\n\n\"I know I'll definitely miss my time with you girls.\"\n\nJulie smiled at me and then looked down. There was silence for a time and then I said, \"Let's celebrate our meeting. I just happen to have marshmallows in my pack. We could roast them over the fire as a parting treat for our party of friends. Julie jumped up and hugged me and began calling the girls. I went to my pack to get the marshmallows and then went off to harvest some roasting sticks.\n\nWe had our party and spirits seemed to get a boost. We laughed at stories about each other and shared thoughts of the future. We promised to keep in touch and just enjoyed each other's company. I kept an eye on each of the girls trying to assess their mood. Tammy and Barbara were both excited about getting back and telling friends of their adventure on their first camping trip. Julie seemed restless. I wondered if it was nervousness about tonight, regrets, or impatience.\n\nEarlier when I looked in my tent to get something, I noticed that she had apparently already moved her sleeping bag in and had our bed made. My conclusion from that was that she was looking forward to it but now I had my doubts. All doubts were dealt with when she walked over to my tent, stripped off all her clothes then announced that she was going to bed. She then zipped the tent open and crawled in. I think the rest of us got the message loud and clear. I looked to Barbara and she immediately said, \"Go, I will take care of the fire.\" I went over to the tent and thought why not and stripped off all my clothes before bending down and crawling into the tent.\n\nThe vision I saw when I entered the tent took my breath away. Julie was lying on my sleeping bag with hers pulled back to serve as our covers for the night. Her head was in her left hand with her elbow holding it up. She was slightly on her left side with her right leg bent, knee in the air and left leg bent and lying on the sleeping bag. She was most definitely sending me the message that she was open for me. After catching my breath, I turned and zipped the tent closed, but then immediately went to Julie and wrapped her in my arms. She then whispered to me, \"What took you so long?\"\n\nThe thought did cross my mind to say, Where have you been? I have been here waiting for you for three days! But I was smart enough not to go there. I just kissed her instead and wrapped her up in my arms and legs even more. I could not get enough of her and kept kissing her face, her nose, her cheeks, her mouth. I did reach back, grab her sleeping bag, and pull it over us. After we began to warm, I explored her neck and then made a move toward her wonderful breasts. This is when she stopped me.\n\nShe grabbed my head with both hands. \"Noah, we need to talk!\"\n\nI stopped moving and looked at her, or at least in the direction I thought was her head. By this time darkness had fallen.\n\n\"Noah, There are no more condoms!\"\n\nThis hit me like a bolt to the head but I felt it in my stomach. I felt sick! Neither of us said a word for some time.\n\n\"Julie, it would give me great pleasure to worship you, limited only by our imagination, and I most willingly pass on actual intercourse. I like you a lot! And I do not want to hurt you or do anything that might injure our future together.\"\n\nWith that she grabbed me with such force she bowled me over onto my back. It did not hurt that she had wrapped her arms around my head and crushed it into her luscious breasts. Once she allowed me to breath again she said, \"I have never had sex without a condom and have not had sex in the last year and I know I am clean. I am also on the pill.\"\n\nI heard a question in that statement so I said, \"I have never had sex without a condom and prior to two days ago have not had sex in the last 9 or so months. I also had a physical exam since the last time I had sex and I am clean too.\"\n\nI then asked, \"Was this one of the subjects of discussion at the girls meeting?\"\n\n\"Yes, it was. Apparently when they came up with their great plan to get revenge on me, they did not consider our supply of condoms.\"\n\nAfter a pause, she continued,, \"Noah, you are probably not the one to ask this, but would it be foolish for us to have intercourse without condoms?\"\n\n\" Julie, you are correct. I am not the one to ask that question and it is not helping my brain capacity in that arena when you have been rubbing yourself against me during this whole conversation.\"\n\nIn response, she wrapped her legs around my hips and trapped my erection between our bodies. She moved her hips to cause our groins to massage each other.\n\n\"I am so ready for you to be inside me. I want you Noah!\"\n\n\"I want you Julie! I have wanted you since I first laid eyes on you.\"\n\nShe moved her hips so that the tip of my erection was at her entrance and in one quick move I was inside her. It felt so very right. It was also very moist and very tight. I rolled her over onto her back and realized I was in only an inch or two. She was so warm and, did I say, tight.\n\nI stopped moving \"Julie, are you sure about this? We could still just explore each other without--\"\n\nShe didn't give me time to finish but used her legs around my back to drive me in all the way. I took that as my answer, and began to slowly move within her. I didn't get to move very much before I noticed that her vaginal muscles were milking me. She grabbed me even tighter with both her legs and arms, and began to moan and shake. I was driven to go as deep as I could and held on. Her orgasm was strong and violent. Her arms held me tight with my mouth at her neck. Her legs wrapped around my back squeezing me to her and into her while her whole body shook and her vagina crushed and milked my erection. It was so very good and probably due to my having had sex over the last few days, more than I have ever had, I was able to hold off my release and just enjoy hers.\n\nWhen the shaking eased her muscles did not. Her arms and legs continued to hold me tight and her vagina continued to milk me. After some time her arms and legs allowed me to move and I started moving my erection out and then into her again very slowly. I wanted this to last as long as it could. As I moved into her I realized that she was also moving her hips to the same rhythm; it felt wonderful. Now that I was able to move, I nibbled her ear lobe and kissed her neck, her nose, and her lips. I became lost in her. I had never been in a place like this before. I had this strange feeling of being so very excited and at peace at the same time.\n\nOver time I felt her excitement again build. Her muscles tightened, her vagina's movement became stronger and finally her vibrations became very intense. This time her orgasm triggered mine and all we could do was hang on. It felt so right.\n\nI don't know if we made noise or how long we held each other. All I know is that my muscles were exhausted when I came back from wherever it was that I had gone. I was afraid that I was crushing her and moved to get off of her but she said, \"No\" and held me tight. So I held her tight in my arms as well. I moved my elbows to take some of my weight off of her. As my awareness returned I realized that her vaginal muscles were still working to pull me in, to massage me, and to keep me aroused.\n\nWe finally pulled apart. I grabbed the towel and gave it to her to clean up. When she was done she gave it to me. We wrapped ourselves back up with each other. She then said, \"Noah, please tell me about you.\"\n\nWe talked for some time and the conversation was far reaching and so very easy. We talked of family, home towns, and incidents in our lives great and small and we held each other close. She seemed to enjoy rubbing her beautiful breasts back and forth across my chest. My erection returned. We were getting passionate again. Julie rolled me from my side onto my back. She lifted herself up off me and began to explore with her mouth. I was thoroughly enjoying it, so I laid back and let it happen. She kissed my face, my ears, my cheeks, and my neck and then began her trip lower. As she explored my chest her hair swept over my skin, giving me goosebumps and arousal. I raised my hands to her beautiful, luscious breasts, lightly touching and exploring them with just light touches from my fingertips. I was mesmerized with them and could not get enough: touching, squeezing, and rubbing them. They were so perky and firm.\n\nI noticed earlier they stood proudly even when Julie was on her back. When I rolled her nipples between my fingers, Julie gave me the gift of the most wonderful moans. Soon her exploration of my erection came to a quick end and she moved to lay her moist and supple flower on it, her knees and calves on each side of my hips and her hands on my chest. She made small hip rocking moves, rubbing her flower on the underside of my penis. She then lengthened the moves, moving the friction point of our bodies the full length of my erection.\n\nI could not see if her eyes were open but I could hear the moans and gasps and heavy breathing emanating from her. I could feel the increase in moisture between us and the greater speed of her movements. I was enjoying the feelings of her movement not only where our bodies were in contact but also in watching, even in the very dim light, the swaying of her breast just above me. I could not resist the opportunity to again touch them with my fingers: to feel their softness and their warmth. I enjoyed the sounds Julie created when I rolled them in my fingers. When I pinched her nipples she moved further up on me placing the tip of my penis at her entrance, paused there for a moment, and then impaled herself with my member.\n\nIf I was not in heaven previously, I most certainly was now. Despite our previous coupling her vaginal walls were tight and I immediately noted the vibrations and contractions emanating from her all along the length of my erection. Her movement increased in speed and the force to put me deep within her was great. With the combination of all these sensations, I couldn't last long. Her vagina clamped down on me and her whole body became a torrent of motion. She collapsed on my chest and I wrapped my arms around her to keep her in place. Our bodies shook together as I emptied myself within her. I continued to hold her while she continued to vibrate and while she recovered. She may have even fallen asleep for a time. When I began to soften the movement within her must have awakened her as she clamped her muscles around me.\n\n\"No!!! I want you to stay inside me!!!\"\n\nI pulled her sleeping bag over us while her vaginal walls continued to vibrate, squeeze, and hold me, and to keep me semi hard. We laid like that. We must have both fallen asleep wrapped in each other's arms, me embedded within her.\n\nI don't know how long I slept but when I awoke her hips were moving, her muscles were milking me, and it was still very dark. It did not take long for my erection to return and when it did her moaning returned as well. The only motion in this love session were her hips. She was still on top of me and I continued to hold her in my arms. Her hips moved very slowly up and down causing my new erection to move in and out of her only an inch or two.\n\nThe orgasm, when it came, was very pleasant, and soon I fell asleep again. When I awoke, my member was again being milked. In my half awake state I thought that again this was a hips only love session except I began to notice some differences. The action was all between my legs and then realized Julia was no longer on top of me. I also noticed that my scrotum and balls were also in the action and I could see light coming through the tent walls. This brought me fully awake when I realized it. I could then feel her hair tickling my thighs as she moved and the sucking action was different from that of her vagina. I also felt her vocalizations in my member when she made them. I don't know how long she was sucking on my penis but when I became fully aware, I again exploded. After all the action of the previous night, there was not much left to ejaculate but it felt wonderful.\n\nJulie opened the tent and left. I soon became aware of the smell of smoke along with that of bacon as it came into the tent. Even though I felt that I had not had a great deal of sleep, I got up. I pulled on a sweatshirt and pants before leaving the tent, grabbed my footwear and took a walk in the woods. Upon my return I saw that all the ladies were up and at the fire. They too were dressed in sweats. The mornings were nippy.\n\nWhen I reached the fire, the tension of the previous two mornings was not present. Each of the ladies wished me a good morning along with a smile. They were talking excitedly about the day. I was not feeling so good about it. Julie would be leaving today and I wanted more time with her. I was afraid that if she returned to her \"normal\" life that she would not have time for me even if we were able to hook up. Most of the talk however was about housekeeping.\n\nWhat we had left for breakfast, what tasks needed to be done before they left, when should they start back? Several times during this meal preparation, Julie came close to me and gave me a smile and a hug. At one point she told me she wanted to see me again. I told her that I felt the same. Deep inside I was afraid that it wouldn't happen: one of those things that was a good idea at the time but never happened. We sat together to eat and the conversation was lively. Barbara and Tammy were remembering some pranks they had played on another friend back at the dorm. When the meal was done, I policed the camp for items that may have been lost or misplaced outside of the immediate camp site and found a number of things which I returned to the girls. I was invited to go fishing and let them clean up their mess. They asked that I return for lunch however, as they wanted to say goodbye to me before they headed out.\n\nI grabbed my things and headed out moving upstream. I can't say my heart was in it. I kept reminding myself that this trip was to be for fishing, but in my heart I knew that I wanted to be back at camp. As I fished my way up stream, I also studied the terrain. I remembered that I saw a small stream entering the main one not too far from camp. I wanted to explore it to see if there might be some trout hiding within it. I finally found it and as it turned out, it was much further from camp than my memory suggested.",
        "I found a place to cross over the main stream and began to move up this tributary slowly and quietly. The stream actually widened and became more shallow the further I hiked until I came upon a beaver dam. Above the dam the stream formed a pool. I moved closer and saw some ripples from what I thought were trout feeding on the surface. To avoid scarring these trout, I moved back away from the stream and continued to move upstream. I also kept an eye on the pool for more trout action. When I got to a location where I could see into the water, I saw there was only one trout visible but it was a big one.\n\nAs I watched, it would circle the pool at a very slow pace picking something off the surface only very occasionally. The water was very slow and clear here. Any cast I made would be very obvious to the trout. I got down on my knees and changed the leader on my line to about 12 feet so that only leader would be on the water. I tied a terrestrial onto the end of the tippet, a beetle, and waited. My plan was to wait for the trout to get to the opposite side of the pool from my location and then cast the fly onto the water's surface at a point where the trout had passed in its previous circle. I made the cast and waited.\n\nI stayed low to reduce the likelihood of the trout seeing me but high enough so that I could see the trout as it came by. Finally the trout approached the fly location and I ensured that my line was as tight as possible without moving the fly. I tensed as the trout came closer to the fly. I noticed that it was a very good sized trout which also increased my tension. The trout was headed straight for my fly but then changed direction at nearly the last second to take something subsurface. I was disappointed but then thought I could pop my fly to make noise in the hope the trout would investigate. I moved the tip of my fly rod only a little but enough to cause the fly to make a little noise on the water surface.\n\nTo my great excitement, the trout turned around to investigate. I could see that it was not only coming back towards my fly but also was moving toward the surface. I saw the trout open its mouth but it was moving so very slowly that it seemed to take forever to take my fly. I have seen trout in still or slow water make a pass of a fly to examine it before deciding to eat it. I have also seen trout slap the fly with their tail drowning the insect and taking it below the surface. To my great joy, this trout ate my fly.\n\nI waited a second for the trout to turn away from me to lift my fly rod to set the hook. I did not want to pull the fly out of its mouth by setting too soon. The quiet beaver pond pool was instantly disrupted by trout's acrobatics. I stood and moved closer. This trout's performance was going to scare any other trout in the neighborhood, so my presence wasn't going to do any harm. This beautiful trout looked like a football. It apparently did not expend a lot of energy cruising the pool.\n\nIt turned out to be a rainbow with bright colors. Rainbows mate in the spring so this one was still exhibiting its mating colors. Once I had released the trout, I resumed my hike up the stream. Over the next hour, I was able to catch two more trout, much smaller than the one in the pool. But, the action was slow so I began to hike back toward the mainstream. When I was again on the larger stream I was debating about how soon to return to camp. I would be moving down stream so any fishing I did would have the problem of setting the hook slowly or positioning myself so that I could set it into the trout's mouth.\n\nI walked downstream looking for rising trout and foam lines where trout might be hunting. As I walked I realized that I was walking rather fast to be truly searching for trout. I slowed myself and tried to concentrate on looking at the water. After some time I realized I was moving fast again. I was covering areas where I had previously fished for trout but even so, I was moving too fast and had to admit to myself that I was no longer fishing and heading back to the camp.\n\nAfter resuming my hike back to camp I heard a rather loud splash. I froze and searched the water for waves. I began to move very slowly in an attempt to prevent vibrations from my feet reaching the trout. I took several slow steps and stopped to search the water again. I moved through the willows and stopped to search again. I heard a voice and stopped. At that moment Julie said, \"Are you hungry?\" This time I did not trip or fall. I turned in an attempt to find her. When I did, my heart stopped and I froze. What I saw was Julie laying back on her elbows, her left leg bent at the knee and foot on the blanket while her other leg was laying flat and spread away from its mate. She was also totally nude, dressed only in a smile.\n\nI dropped my fly rod, stripped off my vest and began to move toward her. I pulled my shirt over my head and knocked my hat to the ground as I had forgotten about it. I fell to my knees at her feet and just took in the vision. Julie continued to smile her very beautiful smile and I turned to mush inside. I devoured her with my eyes and could not get enough.\n\n\"You never answered me, are you hungry?\".\n\n\"Yes!\"\n\nI dropped down and nibbled on her left knee. I moved my nibbles to her thigh and slowly moved to the junction of her legs. When I had worked my mouth and teeth to within a few inches of her sex I moved to her right leg and worked toward her knee.\n\n\"Hey, you missed a spot.\"\n\nI smiled and moved back to her center. I paused and blew my breath on her beautiful flower. Julie's whole body shivered. A strong pleasant shiver also passed through my body. I moved back to her right thigh to resume my nibbling. This time I moved all the way to her big toe and nibbled and sucked on it. She was a bit ticklish on her foot and I just missed getting a black eye when she kicked and squealed. When I again had captured her right foot I began to move up her leg. Her inner thigh was so very soft and smooth that I had to pause and relish it. I moved my mouth to her center and again stopped just to admire. I could see her muscles contracting and moving her labia. I also noticed some moisture forming.\n\nI was mesmerized. Julie again indicated her impatience when her hips began to move and rock. I could not resist, I blew breath again on those very beautiful lips and again Julie shivered. I was mesmerized by her beauty, lost in it. I finally broke my trance and gave the fold created by the junction of her thigh and her mound a kiss. She was delicious. Julie both moaned and moved her pelvis. I backed away and then moved in to give the fold on her right side a kiss.\n\n\"Stop teasing!\"\n\nAfter a pause, I moved in to extend my tongue and licked her from anus to clit. As my tongue moved between her labia it picked up her luscious juice. She really was delicious. This time I received a long moan from Julie and she moved her hands to my hair. She did not attempt to control me unless I attempted to move away from her center, but then she held me fast. I nipped and sucked on her labia then ran my tongue through her slit. I pushed my tongue into her opening and flicked it for a bit. This was when Julie pulled my hair a bit more.\n\nI was avoiding her clit on purpose but Julie suddenly grabbed my head and pushed my mouth into place at her clit. She closed her thighs and trapped me in place. I could not even take a breath but only wiggle my tongue on her clit as she bucked and rolled. I could not even hear her sounds with her thighs tightly against my ears but I soon felt the vibrations as her orgasm racked her being. Finally her thighs loosened enough so that I could get an intake of air but could not move much more than that and wiggle my tongue. I had no problem with that.\n\nWhen her legs fell away from my head the pull on my hair increased as she was pulling me up her body toward her face. I did take the opportunity to kiss and nip her tummy and I of course stopped at her breasts for a nibble. She gave my hair a jerk to let me know to keep moving up. When I reached her mouth I gave it a quick kiss. That is when she said in a clipped voice, \"I want you in me!\".\n\nI of course wanted to oblige but still had my pants on. I told her this and she let me go. I moved as quickly as possible and only lowered my pants as my boots would take too long to remove. To my amazement upon entering her I could immediately feel her muscles vibrating against my erection. The warm and tight feelings were wonderful and I knew I could not last long. I did get three, maybe four pumps in when she again wrapped me up with her legs tight around me and her heels pushing into my lower back.\n\nHer body began to shake and her hips moved back and forth and her tight vagina pumped my cock. I exploded. My orgasm was powerful but did not last nearly as long as hers. When over she began to slowly relax her leg muscles but she did not let me go. She again wanted me to stay within her fine pussy. I did not want to collapse upon her with my weight so held myself up on my elbows while she continued to hold me with both her arms and legs.\n\nAs our breathing slowed I heard her say something. I lifted my head and asked her to repeat what she had said. She paused. \"I didn't realize I had said that out loud.\"\n\nI waited, and then she said, \"I don't want to leave you.\" She tightened her muscles around me.\n\nI looked into her eyes. \" I don't want you to leave either.\" After a pause I added, \"Would you be willing to stay with me the extra two days?\"\n\nShe smiled. \"What took you so long to ask?\" She tightened her muscles around me and gave me a deep kiss.\n\nWhen we broke the kiss we brainstormed the logistics of her staying. The girls had brought Julie's car but she did not see a problem with the other two driving back to their campus. Two days later, I would drive Julie back to campus. With excitement we gathered our belongings and began our return to camp. When we arrived Julie promptly announced that she was staying here with me for the extra two days. We would help them transport the camping equipment back to her car. Barbara could drive the two of them back to campus and I would bring Julie on Tuesday. She had a workshop on Tuesday evening that she had been planning to attend for a long time and did not want to miss. Tammy and Barbara just stared for a moment.\n\nBarbara asked, \"Did the two of you eat lunch?\". We just looked at each other and smiled.\n\nI said, \"Yes, we ate.\"\n\nJulie looked over the packed items and selected a few things to keep for our use at camp. She asked the other two girls where the fry pan was packed and was told it was in Barbara's pack. She opened that pack and withdrew the pan. It was a cast iron fry pan which is rather heavy, but a wonderful item to have at camp. We took a last look around, picked up the equipment, and hiked to Julie's car. It didn't take us long to reach her car but during the hike I enjoyed watching moving breasts under tee shirts and hints of camel toes when the girls had to step over obstructions on the trail.\n\nWhen we reached the car we packed all the equipment into the back compartment, and then Julie and I climbed into the back seat for a ride down the mountain about a mile to my car. We said our goodbyes and watched as Tammy and Barbara drove away. We then took a fly rod along with some other equipment from my car and began our return to camp. I kept Julie in the lead as I liked the view. We brought the additional equipment so that Julie would have what she needed to fly fish independent of me. I always carry extra. One never knows what might happen.\n\nWhen we got back to camp the sun was already setting so I started a fire while Julie prepared dinner. Once the fire was going I looked over the fishing equipment in case there were any adjustments necessary for the conditions on this stream. Julie announced that dinner was ready when I was finishing up with the fly rod. We sat across the fire from each other to eat our dinner.\n\nEach time I looked up from my plate Julie was looking at me with a beautiful smile. When dinner was finished, I gathered the dishes and washed them. Julie went to our tent and was arranging things. When I had finished, Julie had a blanket wrapped around her shoulders, sitting on a log by the fire. She invited me to join her. I sat beside her and she wrapped part of the blanket around my shoulders. I moved closer and we cuddled.. We couldn't stop smiling!.\n\nJulie looked at me. \"This is nice.\"\n\nI agreed by moving closer to her and gathering her in my arms. After some hugging and kissing, we slid off the log to the ground with our backs to the log. The evening was proving to be a bit cooler than the past several evenings so we wanted to be a bit closer to the fire. There was not a great deal of conversation taking place. I think we were both in deep thought and I know I was just absorbing this experience deep into my being.\n\nWe eventually put out the fire and moved to the tent. When I got there, Julie was already in the sleeping bags. I took off my clothes and climbed in with her and to my delight discovered that she was totally nude. I moved in to hold her close both to speed our warming and to enjoy her in my arms. We held each other close with arms and legs entwined and drifted off to sleep.\n\nWhen I awoke, Julie was already awake. She was in my arms and the rest of my body was wrapped around her. She said, \" It's about time you woke up and let me out of your tentacles.\"\n\nI smiled and asked, \" Does that mean you do not like being wrapped up in my arms?\" She rolled to face me and had a very big smile on her face. That smile matched mine. I then tightened my arms and leaned in to give her a kiss. She melted into me and kissed me back.\n\nAs the kiss intensified my morning wood became even harder. Julie noticed and began to rub it as best she could by moving her hips and thighs and kept that smile at full wattage. We gradually moved and shifted our bodies to allow me to enter her. I knew right away that I was not going to last. Her vaginal walls were wet and warm and pulsing as soon as I entered her. I didn't even need to move for the result to be a fantastic orgasm, at least for me, but I wanted to move, so that Julie would receive her due. Her response was immediate and left her legs wrapped around my middle and her heels locked behind my back. She pulled me into her and I did my best to wiggle my erection and rub the magic spots inside her. I realized that she was close to coming.\n\nHer heels pressed into me, her arms squeezed my upper body into her, and she kissed me hard as I lost myself in this wonderful oblivion. In my subconscious, I realized that she, too, was experiencing her orgasm. As I came out of my trance state I also realized that her orgasm was lasting far longer than mine and I just enjoyed holding her as she eventually came back down to earth.\n\nWe held each other for some time and our smiles never left our faces. I think we both knew that we had discovered something very special. I moved my hands over her and spent a long time squeezing and rubbing her breasts. I enjoyed rolling her nipples between my fingers. Her hand explored me as well but all too soon she pushed me away.\n\n\"Now you're just diddling.\" I must have had a question on my face. \"You were not concentrating on me or my body, your mind was elsewhere.\"\n\nI denied it of course, but my mind was not on her body. It was based on the wonder of what our future might look like and how much I wanted that future.\n\nShe put her clothes on so I did as well. We took our walk in the woods and had a fire going. I put water on to make coffee and Julie looked through our packs to see what we might make for breakfast. We agreed on pancakes with the blueberries we had left over from a previous breakfast. We also had some bacon to round out the meal. We ate quickly and cleaned up, hung our packs back up high, gathered our fishing equipment and began our hike up stream. We would attempt to find some fishing places we had not previously fished.\n\nWe hiked up stream for about an hour. As we walked we saw more and more surface activity. As the sun rose and the water warmed, the insects were increasing their action and the trout were actively hunting them. We also saw trout moving in the shallows.\n\nPretty soon we couldn't stand it any longer and stopped to rig our fly rods and tie on a fly. I chose a BWO for Julie and a small Caddis with an ant trailer for myself. We were at a section of stream where there was a riffle coming off a pool above it. I suggested to Julie that she cast her fly into the pool just above the line where the stream transitioned to the riffle. The idea was that the fly would come off the pool and appear to the trout as a natural hatching in the pool being swept into the current. Trout often hunt at the head of riffles. The trick is to place your fly line and leader in a position so that it doesn't scare the trout before the fly passes near the trout's location.\n\nI stood back and Julie cast her fly. She landed short but tried again. After several tries the fly landed about three feet from the left edge of the stream and began its drift downstream. It floated no more than three feet when a head came up and sipped it off the surface. She raised the rod tip a bit quickly and I was afraid that the hook would lose its grip in the trout's lip but it held and she landed a nice 12 inch Rainbow.\n\nIt was now my turn and I cast my flies at about the same location but a little further to the left. That float also resulted in a trout, one of about 9 inches. Julie laughed and joked about that all day. I loved knowing that the woman with whom I was beginning to fall in love was having a great time learning to enjoy my favorite pastime. We spent the morning fishing this way, each taking a turn to fish. If we caught a fish, lost a fish or cast three times without a fish, our turn was over. We had a great morning and by noon we were both hungry. We found a place to have our lunch. After we had eaten our lunch we laid back in the grass, watched the clouds, and talked about many things; mainly we talked about fishing.\n\nI noticed that Julie seemed to be drifting off and I couldn't resist. I slowly moved a little distance away from her, enough distance so when I took my gear and shirt off, I would not disturb her. I then moved back to her and at her feet began to kiss her ankles and slowly moved up from there. Sometimes she would move or swing an arm to brush away the pesky gnat she thought was bothering her but it did not take her long to fully awake and know just what I was up to.\n\nShe spread her legs to allow me more freedom of movement and provide more skin to kiss. When I reached the junction of her thighs she even raised her knees and spread her legs further. I used my tongue to reach under the \"leg\" of her shorts. I was able to lick along the crease between her labia and leg but that was difficult with the shorts she had on that day. When she realized it she quickly reached down, unbuckled the shorts, and stripped them off. I sat back and took in the most beautiful pussy in the known world.\n\nEventually I returned to my mission, licking and nibbling and sucking my way around her most beautiful flower. Julie rubbed my head and directed my movements until suddenly she raised her hips, holding my head firmly in place with her hands. Somehow she wrapped her legs around me and held my head with her thighs and just shook. I could feel liquid coming from her pussy along with vibrations and contractions on my tongue. As her climax decreased in intensity she relaxed her legs and my trip up her body resumed. I kissed every part of her that I could reach. Julie rewarded me with moans and squeezes. I enjoyed kissing her tummy and laid my head there for a short rest and to just absorb her beautiful being.",
        "I resumed my move up her body. I used my hands to lift her tee shirt and move it up off her wonderful breasts. When they became exposed to the air the nipples were tight and proud. I slowly worked my way around each breast kissing as I moved. With great effort I avoided kissing or touching the nipples and watched them and Julie and her reactions. I used my hands to caress and squeeze her breasts and slowly moved to roll the nipples between finger and thumb. I was again rewarded with moans and Julie wrapped her legs around me, this time at my waist. I then moved to suck her left nipple into my mouth and rolled it with my tongue and very carefully nibbled on it. She clamped me with her legs and pulled my hair.\n\nI thought this indicated that she wanted me to stop but when I did, she pulled my head back to her breast. I didn't want to play favorites so I moved to her right breast and gave it a similar treatment. I then moved up her chest, kissing all the way to her neck. The skin on her neck was so very soft and inviting so I spent some time there both kissing and nibbling. Finally I moved to her face and kissed her eyes, her nose, her forehead and finally her mouth. I lost myself in her mouth. Suddenly I found myself on my back and Julie was on top of me. She pulled her tee shirt off and threw it aside then pounced on my mouth.\n\nAfter some time kissing my cheeks, eyes, and nose, Julie began working her way down my body. As she moved she made sure to rub her breast against me and used her hands to touch and rub and pinch every area she could reach. When she reached my pants, she unbuckled the belt and undid my zipper so she could pull my pants down my legs. I hadn't taken the time to remove my boots so she did so. She had apparently gotten her shoes off at some point as she was barefoot now. Once the boots and pants had been pulled off, she began to slowly climb up my body.\n\nShe did not kiss or explore but acted more like a panther moving in on her prey. Once she was over me, looking down into my eyes, she lowered her hips and sat on my erection. It was encapsulated by her pussy lips. Slowly, very slowly, she began to slide up and then down my shaft, coating it in liquid and driving me crazy. She would moan at times, as I am sure she was rubbing her clitoris against my shaft. She would move up and I could feel the tip reaching her opening, but she would stop short of allowing me to enter her and reverse course. She would move down and lean toward me and tilt her hips to create maximum contact with her clit.\n\nAll this was happening very very slowly and she had a very big smile on her face while she looked into my eyes. Looking back I saw smiles in those oh-so-expressive eyes. Her hands were on my wrists so that I could not touch her. I could have broken them loose but this was her game and I did not want to detract from it. She moved up and down, rubbing my shaft with her pussy lips, and on the fourth or fifth or hundredth time she moved just a bit higher and allowed my erection to penetrate her opening. She then resumed her movement downward, this time forcing my erection into her body. She was so tight, so moist, so hot, and her vagina was already vibrating and milking my shaft. Her smile got even bigger.\n\nOnce I was all the way in, she stopped and lowered her body to mine. She released my wrists, put her hands under my shoulders, and squeezed me tight. I wrapped my arms around her and held her to me. Shortly she began to move her hips. She did this without lifting off my chest; she just worked her hips. I'm sure I only moved an inch in and out of her but the sensation was spectacular. I didn't last long and after my first contraction I noticed she too was having her orgasm. We lay there in that position and came down from our climaxes, continuing to hold each other.\n\nI don't know how long we stayed in that position but some time later Julie lifted herself up. Once she was standing she said, \"Let go fishing\" and we did. Julie had shown great progress and skill in the morning so I thought I should give her a little more space to fish on her own. We moved back to the water and I made sure she had all she needed then hiked up stream about 50 yards. I told her to fish upstream to the point where I began to fish, then hike past me about 50 yards and begin to fish again. I would do the same.\n\nDuring the afternoon we made several leap frogs past each other. Then I spotted a large Brown sipping off the surface. I immediately dropped low and began to move closer, even crawling at some points. The shape of the stream and the location of the trout was going to make this cast a difficult one. A trout that size has seen a lot of artificial flies and poor presentation. In order to catch him, I was going to have to make a perfect cast and have a perfect drift.\n\nWhen I got to the spot I thought was best I made a cast upstream along the bank with the intent to measure just how much line I would need. It was my intent to then change direction of the cast to land the fly in the perfect spot. The tall weed about 15 yards behind me was not part of my plan but it did reach out and grab my line. I had to lay my rod down and crawl back to the weed to untangle my fly. I moved back to my rod and took line in again to restart the process. Rather than try that same plan again, I decided to change positions to one further upstream. I attempted a cast but managed to drop the fly line right over the trout. This spooked him and he was gone.\n\nI had apparently gone into a trance and lost all sense of time and place. When I realized this I looked around for Julie and didn't see her. I also realized that I hadn't seen her in some time and didn't know if she was up- or downstream from me. I felt some panic. I chose to hike quickly upstream to the next bend and try to find her there. At this bend I could see quite a distance further upstream and didn't see her so decided to move downstream to find her. I moved quickly, not concerned with scaring trout with pounding feet.\n\nWhen I ran around a clump of willows, I saw her about 50 yards further downstream. I slowed to a walk. She was out in the stream casting apparently to a fish. As I got closer I realized that she must have had her own adventure with a trout as she was standing in the middle of the stream without a stitch of clothing. I could not take my eyes off her as I walked. I saw out of the corner of my eye her clothes hanging on a bush. They must be there to dry.\n\nJulie clearly was concentrating on a trout and I didn't want to spook it so I moved further from the steam in my trek to reach her. Suddenly she raised her fly rod and a trout jumped in the stream. From where I stood it appeared to be a large one. I was mesmerized by the vision I was seeing. Julie was fighting this trout with perfection and the trout was fighting back with leaps and runs and pauses. To top this off, Julie was totally nude with a fly rod held high. When the trout was showing signs of fatigue, I moved closer and picked up her net to assist in the landing of this trophy. Julie worked the trout toward the bank and me, slowly walking and working the trout. I was totally impressed how she kept that trout upstream of her. The trout came slowly to the net and I held it until Julie could take it from me.\n\nI held her rod as she squatted to keep the trout in the water as she removed the hook. Once unhooked I placed the rod on the bank and joined Julie in reviving the trout. I was looking at Julie more than the trout. Her breasts were perky, her nipples hard as she moved the net in the water to provide oxygen to the trout. I, of course, observed that her legs were spread to give me a great view. My body reacted and I could feel my blood pressure shoot up. She lowered the net into the water and the trout slowly moved out. The whole time Julie had a joyous smile on her face. She stood, came to me, and wrapped me in her arms. She then lifted herself up and wrapped her legs around my waist and pushed her hips into mine. I wrapped my arms around her and began to walk up the bank.\n\nJulie, talking very fast and with great excitement said,\" I saw this trout take a fly and crossed the stream to get closer and behind it so it was less likely to see me.\n\nI joked \"Stripping for the trout gave you an unfair advantage.\"\n\nJulie laughed, \"There was another trout that was huge! I attempted to sneak up on it, slipped on the rocks and fell in. It was warmer without the wet clothes.\"\n\n. All the while she was telling the story she was rubbing our groins together so my erection was ready for the talking to stop.\n\nMy arms were around her, holding some of her weight. She had her arms around behind my neck and shoulders. Then she did something I hadn't expected: she wrapped her arms around my head, pushing her breasts into my face and squeezing me to her. She laid her head on top of mine and said, \"Thank You for teaching me flyfishing. Thank you for being with me. Thank you for being you.\"\n\nI said in a rather weak voice, \"You are most welcome.\"\n\nShe then lowered herself to stand on the ground and began to take my fishing vest off and lifted my tee shirt over my head. She unbuckled my belt and pulled my pants down. I had to take my boots off in order to not be trapped in my pants. She laid me back and came into my arms. The grass was soft, though cool. We kissed and squeezed each other, to warm each other up of course.\n\nAfter making out, Julie began to move her lips around, kissing my face, my chest, my arms. It did not take me long to understand her plan and began formulating one of my own. When she first placed a kiss on the tip of my erection, I began to move so that I could reach her beautiful flower with my lips. She lay on top of me with her mouth on my erection and I with my head between her legs and kissing the soft, hot petals. I licked her juices and diddled my tongue at her clitoris. I pushed my tongue deep into her vagina and felt her contractions. She enveloped my erection and ran her tongue over every sensitive area she could find. I was holding her luscious buns in my hands. I ran my hands around those buns, down the sides of her thighs, and back up onto her back. I worked my hands under her and held her two beautiful breasts.\n\nIn our short time together, I learned that she loved to have her breasts touched and squeezed. She enjoyed her nipples being rolled and I took great pleasure in doing her this favor. The moment I rolled her nipples, she pushed her bottom into my face. I, of course, took advantage of this by moving my tongue as much as I could. When the pressure eased, I nibbled lightly on her pussy lips. When I knew my explosion was imminent, I attempted to reverse our bodies but she held fast and soon she was taking my seed into her mouth. Her orgasm came quickly. She squeezed my head with her thighs and her whole body shook. Every muscle in my body was limp with exhaustion. We laid in this position for our recovery, too exhausted to move for some time. When we did, Julie, who was on top, came back into my arms and we held each other as our breathing returned to normal.\n\nOnce recovered, we gathered our clothes and dressed, we gathered our gear and began our hike back to camp. We were both rather quiet as we walked. I do not know what Julie was thinking but I was thinking about this being our last night together and wondering about the future.\n\nWhen back at camp we built a campfire and once it was going, Julie began to prepare our meal while I organized our fishing gear. We had decided that tomorrow we would not be doing any fishing but cleaning the area to return it as close to a natural state as possible. When ready, Julie called me for dinner and we sat close: eating our meal of bits and pieces of previous meals. Our evening's cuisine consisted of a number of opened and partially used freeze dried meals.\n\nWe ate our meal sitting close together but without much talking. Periodically Julie would call up a memory of a fish she had played that day, but it seemed as if she were forcing herself to talk. When the food was eaten, I told Julie that I would do the dishes, since I knew she wanted to organize some of her things before we crawled into bed.\n\nOnce I had camp set for the night: fire out, dishes washed, food strung high between two trees; I climbed into the tent. I stripped down and crawled into the sleeping bags. Soon Julie came into the tent, stripped, and crawled in beside me and into my arms. We held each other tightly and talked about our day and how much fun each of us had. I felt myself jerk realizing that I must have fallen asleep. Julie took this as a sign and climbed on top of me, placed her head on my chest and her legs on either side of me and then slowly moved her body down mine until I was totally inside her.\n\nI wrapped her in my arms and we fell asleep together. During the night I was awakened by her vaginal muscles squeezing and milking my erection. Once I had an orgasm, I fell back to sleep. In the morning, I found myself wrapped around her, her back to my front, my legs over her legs and my hands in her hands. I lay there just absorbing her essence, breathing her in, holding her. When she awoke we wished each other a good morning. Then, Julie said nature was calling and she had to get up.\n\nThis morning's breakfast was pancakes with our remaining bacon. I washed the dishes as Julie gathered her things and began to pack. Once I had the dishes finished I too began to pack my things. I took every opportunity to look at Julie as she rolled her bag or stuffed her backpack. At one point she came over to me and just stood there not saying anything.\n\nWhen I stopped what I was doing she came close, put her arms around me and in one motion lifted herself up and wrapped her legs around my waist and then proceeded to devour my mouth. I took this opportunity to slide my hands under her shirt and slide them up and down her back. After this short interlude she dropped back onto her feet and resumed working. When I broke down the tent she came over to help fold it and roll it up. This again, gave me a great view down her shirt and upon her reaching me she gave me another tongue-wrenching experience.\n\nEven with all these play interludes, we were able to get our camp broken down, equipment picked up, fire drenched, and trash picked up in good time. We had left out some snack food for lunch prior to hiking ourselves and our equipment out to the road and to my car. The hike out seemed to take a lot out of us. We had to stop and rest a number of times. Of course these stops required us to become reacquainted. On the last stop I put my pack and the fly rods down and stepped over to Julie. After she had taken her pack off, I picked her up and sat down on a rock with her on my lap. I just hugged her to me and she whispered, \"I miss you already.\" I told her that I was already missing her, too. We made it to the car and loaded our stuff. Then, we began heading down the hill.\n\nDuring the drive we talked about plans to get together, to raise our spirits. We threw out ideas on things to do. My first day of work was tomorrow and I didn't know my schedule but we made tentative plans to see each other on the upcoming weekend. The new job wouldn't require me to work 24 hours a day. Julie had the conference this evening but was free until Friday when she would start her summer job.\n\nScheduling might become complicated, but we were determined to see each other as often as we could. When we neared Julie's campus, we looked for a place to eat. It would give us that much more time together. The Conference Julie had been planning on attending for so long would be starting in a little more than two hours. Eating and then dropping her off at her apartment would give her enough time to shower, dress and get to the meeting in time. We ate fast food and attempted to prepare ourselves for the break.\n\nWhen we reached her apartment, I carried her backpack to her door. We were in our goodbye embrace when the door opened. Both Tammy and Barbara were home and suggested that we come in. The two of them wanted to know all about our days after they had left but Julie was feeling time pressure and I did not feel like talking just then so I quickly found my way out and on my way back to my apartment another 30 miles away.\n\nWhen I arrived, Tom was there. He had just eaten his supper. He was excited to learn of my adventure, how was fishing, did I catch any really big ones, did I have enough food, did it rain or snow on my camp along with a hundred more questions. I just gave him some pat answers telling him that I was really tired and wanted to get my stuff unpacked and washed before it began to mold. As he continued to pepper me with questions, I emptied my backpack and made several piles of clothes to wash. I also opened my camping gear as best I could to air them out. I put the clothes in a couple of bags to carry to the laundry room in the basement. Tom, of course, went with me and continued with his questions.\n\nThere were times I had to stop in the middle of a response to avoid any suggestion that I had met others during my camping trip. I was too tired to get into that this evening and I knew Tom would be relentless if he got even a hint as to my adventure.\n\nWhen back in the apartment I finally convinced Tom that I needed some space and down time and he backed off. I took the clean clothes to my room and plugged into an audiobook on my I-pod to put my clothes away. I was turning my tent over to air the other side when Tom burst into my room. He was obviously excited about something. I took my ear buds out to hear what he was going on about. I hadn't heard what Tom had already said so was confused by his words and asked him to start over. He immediately said, \"There is a beautiful woman at the door asking for you and she does not have a bra on.\" Tom was rather excited about that fact. He then asked, \"Since when do you know such a beauty and why have you not told me about her? Does she have a friend?\"\n\n\"Did you invite her in?\"\n\nHe stopped and looked at me with a strange look and immediately left my room. I followed him to the living room. There I saw Julie standing in the doorway, still in the hall looking into our apartment and then at me. She was dressed in a blouse and short skirt and Tom had been correct, her nipples were reaching out and telling me that they were glad to see me. She smiled and looked a little apologetic.\n\nTom immediately said, \"Here's Noah, won't you come in?\"\n\nI said to Julie, \"Your conference?\"\n\nShe responded, \"It was not where I needed to be.\"\n\nThen Tom interrupted saying, \"Aren't you going to introduce me?\"\n\nI then looked into Julie's eyes and said, \"Julie, this is Tom, my roommate.\" I then turned to Tom and said, \"Tom, this is Julie, the future Mrs. Noah Conway.\"\n\nI immediately saw Tom's jaw drop to the floor. This action caused me to realize I had said something I had better replay in my head.\n\nWhen I did, terror ran through my veins. Did I just screw up Big Time and scare Julie off???\n\nI slowly turned to look at Julie's expressive eyes and saw both a bright smile and the beginning of some tears. She took a step toward me, wrapped her arms around me and lifted herself up to wrap her legs around my waist. I just turned and carried her into my room.\n\n<br >"
    ],
    "authorname": "BufoAmericanus",
    "tags": [
        "coed",
        "cunnilingus",
        "nudity",
        "outdoors",
        "roommates",
        "virgin"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-fishing-trip-9"
}