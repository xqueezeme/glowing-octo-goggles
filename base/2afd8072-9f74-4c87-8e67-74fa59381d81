{
    "title": "Earth - Tentacle Breeding Ground Ch. 03",
    "pages": [
        "Adam had a look of pure delight on his face.\n\n\"Whoa! Now who is THIS sexy beauty?\" He asked Steven. His eyes were nearly popping out of his head as he absent mindedly wiped saliva from his gaping mouth.\n\n\"Isn't she something else?\" Steven beamed proudly. \"And get a load of these curves. To be honest, I used to spend hours caressing her in bed before going to sleep.\"\n\n\"I can see why.\" Adam nodded in approval. \"That's basically every red-blooded man's dream. Mind if I hold her?\"\n\n\"I don't mind; just be careful. She requires a delicate touch.\" \n\nZoey, and A'luhr blinked in mild confusion as Adam approached Steven in a reverent manner. He gingerly took the hefty, black machine from Steven's outstretched arms and stared down upon it as if beholding a gorgeous woman - his eyes a mixture of admiration and lust. It looked a bit like a large spider, with eight propeller arms coming out of a central frame and a camera suspended below it. Zoey removed her glasses and tiredly rubbed her eyes.\n\n\"Boys and their toys...\" she groaned.\n\n\"It is... some form of sexual companion?\" A'luhr asked, clearly bewildered.\n\n\"It's his dumb drone.\" Zoey sighed. \"But it might as well be, given the way he talks about 'her'. I was wondering if he was ever going to get a chance to use it again, seeing as he risked his LIFE - might I remind you - to lug it along with him!\" She shot a nasty look at Steven who didn't even notice. He was still soaking-in Adam's praise.\n\n\"Excuse me, beloved sister, but a DUMB DRONE!?\" Steven rebuked with an offended tone, still not taking his eyes off of the man gleefully fondling his precious treasure. \"THIS is the Freefly Alta 8 Pro.\" He declared with an air of finality, clearly expecting this to elicit some sort of profound reaction from the two women. It did not.\n\n\"This... combination of words... is not familiar to me,\" A'luhr admitted. \"Is this perhaps some other language of your kind?\"\n\n\"You could say that.\" Zoey shrugged and shook her head sorrowfully. A white blur quickly moved past her shoulder and she put her glasses back on to better see what it was.\n\n\"No way! You have an eight rotor model!?\" Sarah gasped, bending over Adam's arms to get a better look at the drone while wiggling her limbs in barely-contained excitement. \"These are so expensive! I've been wanting to try one out for so long but never got a chance!\"\n\n\"Y-you're into drones?\" Adam asked, clearly taken aback.\n\n\"I-I mean... yeah?\" She replied, flustered. \"I'm just an amateur, but I use my cheap one to take pictures and stuff. N-nothing special!\" She let out an embarrassed little laugh and scratched her head. Adam took his eyes off of the drone for the first time since Steven had pulled it from its case. He furtively gazed at Sarah's reddened face with starry eyes.\n\n\"D... do you want to touch it...?\" He stammered at her.\n\n\"Excuse me, but shouldn't I be the one to decide th-!?\" Steven began to haughtily remark before Sarah swiftly moved in to put her hands on the drone. As she did so, her fingers brushed Adam's arm and they both reflexively jerked away from each other, a clear blush on both their faces.\n\n\"Hey! Watch it!\" Steven yelled, grabbing the precariously wobbling machine out of Adam's hands.\n\n\"G-get a room you two!\" Zoey awkwardly joked while trying to make it seem like it wasn't awkward at all. Sarah and Adam cleared their throats and let their eyes wander around the room in opposite directions. Steven began using his shirt to hastily polishing any fingerprints off of the drone's surface, unaware of the interaction between the two professors.\n\n\"How does this 'drone' assist us in destroying the Krinis queen?\" A'luhr asked, also unperturbed. \n\n\"It's an unmanned scouting and payload delivery device that can navigate around their nest while we watch from afar.\" Steven replied. He placed the drone on the floor and withdrew a control pad from the open case at his feet. \"You said the Krinis hunt looking for body heat and sounds, right? Well this beauty isn't exactly silent... but she IS cold.\"\n\n\"I see. That could work. The Krinis do not normally attack machinery, especially if they do not sense a threat.\" A'luhr's eyebrows quivered. \"However, it is hard to predict how they may react if it approaches the queen.\"\n\n\"But... it could work?\" Steven asked hopefully.\n\n\"Yes, I believe so.\" \n\n\"How exactly do you plan to get this thing near the alien queen, much less LAUNCH FIREWORKS with it!?\" Zoey crossed her arms in disbelief.\n\n\"Listen,\" Steven replied. \"A'luhr is a crazy-smart, advanced alien lady. Err... no offense...?\" he glanced at A'luhr.\n\n\"It is true.\" She replied with a smirk.\n\n\"Exactly.\" He smiled back. \"I bet she could supe' this baby up with her tech knowledge. It just needs to be able to emit enough of a spark to ignite the payload... and also be able to receive input over a very long distance, most likely.\"\n\n\"I see...\" Adam said, stroking his beard. \"A'luhr does that sound even remotely possible?\" All of the humans in the room turned to look at her with raised brows and cautiously optimistic expressions on their faces.\n\n\"I... suppose I could attempt such a feat,\" A'luhr said slowly. \"I am not considered particularly talented in engineering among my peers, but with the proper tools I am positive that I could at least make minor adjustments.\"\n\n\"Let me see what I have!\" Adam exclaimed. He jumped forward and excitedly led the group to the workshop as Steven folded the arms of his drone and gently placed it back into its case before following along.\n\n***\n\n\"These are... not the proper tools,\" A'luhr said with a barely disguised hint of disappointment in her voice. Everyone was huddled around a workbench where Adam had sprawled out an impressive collection of tools, gadgets, and devices - many of which Sarah could only guess at their purpose. As an engineer, Adam no doubt took pride in his workshop's prowess, so Sarah felt a sting of pity for him after seeing his dejected face react to A'luhr's words. \"These primitive rods and wires are all that you have?\" A'luhr continued, fingering through the pile of trinkets and materials.\n\n\"Yeah, well, I... um... left most of my good stuff back in my office on campus.\" Adam nervously chuckled, clearly trying to save face. A'luhr sighed. \n\n\"Let me see the starfire.\" She looked to Steven, who scrambled to grab his backpack. He pulled out a long cylinder with a cone on one end. Red, white, and blue stripes adorned the sides and little stars decorated the tip.\n\n\"This is the only real firework I have,\" Steven said. \"The rest are just sparklers.\" He produced a small handful of sticks from his backpack as well and laid them on the table next to the firework.\n\n\"Sparklers?\" A'luhr asked, one eyebrow twitching curiously. \n\n\"They're basically tiny sticks of 'starfire' that, well, spark, when ignited.\" Sarah chimed in. \"They're for entertainment and celebrations.\"\n\n\"It is amazing that your species fell to the Krinis so quickly despite having so much starfire available that you use it as a toy.\"\n\n\"Historically, our enemies have died when we blow them up.\" Sarah shrugged. \"Sorry that we didn't know their random weakness ahead of time.\" There was a bit of an edge in her tone. Though A'luhr had recently come down a bit from her high horse, she still sometimes let an air of superiority slip into her speech, which annoyed Sarah quite a bit. Especially as, last she checked (which was admittedly never), 'A'luhr's people had ALSO been defeated by the invaders, so the alien woman really didn't have much of a leg to stand on.\n\n\"Well, now is the chance to rectify those mistakes.\" A'luhr replied, seemingly unrecognizing the bitterness in Sarah's voice. \"I believe I will be able to make sufficient alterations to this device, but I may need to disassemble other technologies for their parts, if that is okay?\" She turned to Adam.\n\n\"Of course!\" He declared. \"You will find my bunker well-stocked in all manner of useful gadgets and tech!\" It was obvious that he was just eager to prove his usefulness to her after the earlier jab.\n\n\"Excellent.\" A'luhr's eyebrows swished back and forth as she moved to exit the room. \"The first object I will need to disassemble is that large rectangular monitor. I believe it is a 'television'. Come now, help me move it.\"\n\n\"Ah...\" Adam groaned. His determined expression melted into distress as he hurriedly followed A'luhr to help her kill his beloved big-screen.\n\n***\n\nA'luhr worked through the night, fiddling with the various tools and wirings at her disposal to modify the drone. The rest of the group spent their time assisting the effort by finding things she asked for, answering questions, and bringing her food. \n\nAt first, A'luhr was extremely hesitant to try the canned corn offered to her. Apparently it was very reminiscent of the droppings of a common animal back on her planet. However, once they convinced her to taste it, she immediately brightened up and enjoyed the sweet veggies. \n\nSarah was eager to ask A'luhr more about her home planet, but now was not the time, as the bellus woman needed to focus on her work. Zoey periodically checked in on her friends Diana and Arlo, but they remained asleep. Regardless, she still set small portions of food at the sides of their beds just in case. Though they were still trying to ration food, Adam had pointed out that if this operation went as planned, they wouldn't need to do so much longer. However, he still warned to not go crazy just in case things fell through, which is always possible with even the best-laid plans.\n\nSarah awoke the next morning to rapid knocking on the bedroom door. She groggily flopped out of bed, having gone to sleep still wearing her clothes... or what was left of them after her recent ordeal. Her pants and panties had been lost and Adam didn't exactly keep a wide variety of women's clothes in his man cave, so she had to make do with an extra pair of his boxer shorts and gray sweatpants. It wasn't her usual style, to say the least (though she did definitely appreciate how the sweatpants looked on Adam), but she threw her white lab coat on over her shoulders and headed to the door regardless. She patted down her bed head while Zoey tiredly fumbled around for her glasses on the bedside.\n\nOnce Sarah confirmed that Zoey was dressed, she opened the door to see Adam's scruffy face peering back at her. She never used to be into beards - she thought they just looked itchy - but recently she had been appreciative of the ruggedness that it offered to Adam's already angular face. She almost absentmindedly reached up to run her hand along his chin but stopped herself as he opened his mouth to speak.\n\n\"She thinks it should be good to go,\" Adam said as he turned and started walking down the hall. \"I guess the sooner we can get on with this little mission the better.\" He had been in a bit of a sour mood since seeing most of his expensive electronics plundered just for a scrap or two, but he knew it was for the greater good. It didn't stop the hurt, though. \n\n\"It's a shame we can't contact anyone else to let them know of the magnesium thing.\" Sarah yawned and stretched out the kinks in her neck and back. She looked back at Zoey who was eagerly bobbing along behind them and wished to go back to her age. Even though Sarah was still only in her late 20's, the effects of age were already becoming an inconvenient and inescapable reality. \n\n\"Yeah, well, it's a shame we can't contact anyone PERIOD any more these days.\" Adam sighed. \"I imagine most people either don't have power or are already captured. Still, I check the radio every day to make sure.\"\n\n\"I hope this works so we can go back to living our lives again...\" Zoey said in a sleepy voice.\n\n\"Whatever happens, our lives will never be the same, that's for sure,\" Adam replied. \"We've confirmed extraterrestrial life and might even have access to some of their tech. Humanity will either meet its end or its salvation depending on how we deal with these horny fucks.\" Zoey solemnly nodded in agreement. They made their way to the workstation and found Steven and A'luhr inside, standing around the newly upgraded drone.\n\nThe camera was now placed at the top of the drone's payload, with the bottom now holding a compartment that contained the firework. Several wires fed into the shell that served both to optimize power consumption and to ignite the fuse when needed. It was quite large and looked pretty makeshift, but A'luhr seemed happy with her work.\n\n\"The components all correctly operate individually,\" she said with confidence. \"Obviously, we have not been able to test the true functionality of the whole system seeing as we only have this one payload, but I have no reason to think it will fail.\"\n\n\"She's amazing!\" Steven shouted out, unable to contain his excitement any longer. \"She boosted the handling and battery life by a mile! I think I'm in love.\"\n\n\"Keep it in your pants,\" Adam said, patting him on the shoulder. \"You are literally not in her league.\" \n\n\"Your words are too kind.\" A'luhr put her fingers to her eyebrows in a similar manner as to when she introduced herself. \"I simply did the best with what I was given. Now, should we begin?\" The abruptness of her suggestion caught the rest of the group a little off guard. \n\n\"We're gonna' do it right now? Just like that?\" Zoey asked.\n\n\"There is no reason to delay.\" A'luhr stood, holding the drone. \"In fact, there are a great many reasons not to. The new queen could be born at any moment, so we must have our cake and eat it too.\" She glanced at Steven, who gave an awkward shake of his head. A'luhr's face fell a bit, having failed to correctly use the idiom, but Sarah knew this setback wouldn't stop her from trying again.\n\n\"How are the other two doing?\" Sarah inquired. \"Still asleep?\"\n\n\"Yep,\" Adam replied. \"Haven't touched their food either. I guess they must have really been tuckered out.\"\n\n\"Indeed,\" A'luhr affirmed. \"Being within the Krinis breeding grounds puts a heavy burden on the victim, both mentally and physically. Though disturbingly enough, some of their captives come to even enjoy it - as impossible as that sounds.\"\n\n\"It uhh... doesn't sound completely impossible.\" Steven coughed awkwardly. \"N-nevermind.\" His face reddened as Zoey suspiciously eyed him over. Sarah silently agreed with him.\n\nA'luhr and Adam worked together to bring the drone outside, all the while Adam complaining that he would have installed an elevator if he had known how much heavy lifting he was going to have to do down here. Meanwhile, Steven connected the drone's control panel to the monitoring room's displays so that everyone would be able to view the drone's feedback while he piloted it.\n\nLuckily, it had ceased raining in the night. That would have really put a damper on their plan, so even this small sliver of luck gave Sarah an optimistic feeling going forward. Adam and A'luhr returned to the monitoring room with Adam still grumbling, but with the excited look in his eyes betraying his true emotions. \n\nSteven flipped some switches and suddenly the several screens on the wall came alive, all working together to show one large composite display of what the drone was seeing.\n\n\"Even with the extended battery life, we don't have tons of time...\" Steven said in a strained voice. \"If it takes too long to find the queen, we might not have enough juice to get back... if we can even get there at all...\" Steven sniffed. \"So... so what I'm saying is that this could be the last time we ever see her... but it's our one and only shot... so she will at least have died a hero.\" \n\nHe looked up at the monitors and gave a small salute with a tear in his eye. He looked around the room, apparently expecting similar reactions, and everyone else embarrassedly did their own little salute to appease him - except for A'luhr, who didn't seem to fully understand what was going on.\n\n\"Are we all ready?\" Steven asked the group, still a bit choked up.\n\n\"This is your show now,\" Adam replied. \"I know you won't make me regret trashing my TV.\" He firmly planted a single pat on the younger man's back in that hearty way that men do to other men for some reason.\n\n\"Mom and dad will kill you if they find out you broke their latest birthday gift already.\" Zoey winked. \"So just pretend it's one of your live streams and do what you do best, okay?\"\n\n\"You mean annoy you?\" Steven teased.\n\n\"Okay, the thing you do SECOND best.\" Zoey rolled her eyes and laughed. \"Put on an awesome show for us.\"\n\n\"It's gonna be out of this world.\" Steven grinned and began to operate the controls as if performing an elegant dance that he had been practicing for his entire life. \n\n***\n\n\"That didn't take as long as expected,\" Steven said with a note of wonderment in his voice. \"She's so much faster than before!\" The drone had flown over the neighborhood rooftops and towards the metro entrance that they had previously witnessed being used a way into the hive. A few of the dragonfly creatures were seen in the sky, but they didn't seem to pay the drone any mind, instead keeping their focus on the ground for any unsuspecting prey.\n\n\"That's it right there.\" Adam pointed to a spot on the screen where a metro sign could barely be seen. It would have been easy to miss as it was almost entirely obscured by sticky, orange ichor. Steven piloted the drone down past the gooey strands and into the mouth of the tunnel. \n\nIt looked almost nothing like a metro entrance anymore, as all the surfaces were completely covered in several layers of slime, which gradually became writhing masses of fleshy tentacles. It gave the impression of being inside a living body, as the walls and floors gently pulsated and oozed what appeared to be more of the aphrodisiac \"nectar\".\n\n\"Good thing we are doing this remotely,\" Sarah gulped. \"I'm... I'm not sure how long I'd be able to stay... myself... while being in contact with that much of the... stuff...\" Her face reddened again, remembering how willing she had become to spread her legs and submit to pleasure simply after a minute or two of being covered in the viscous liquid.\n\n\"H-how bad was it...?\" Zoey sheepishly asked, nervously fidgeting in her chair. \"Did... did it hurt at all...? Wait, y-you don't have to answer that!\" She buried her blushing face in her hands.\n\n\"It's okay Zoey. It's important to share information, even if... not comfortable,\" Sarah replied. \"It was like I was trapped in my body, watching another woman who looked like me do all kinds of... acts.\" She gulped before continuing, \"but at the same time, I didn't want it to stop... I knew it was wrong but it didn't matter. Nothing mattered... other than trying to feel as good as possible... and help others feel the same. It was like a curtain had been lifted from my eyes to reveal the true possibilities of living and I needed to show everyone else that truth...?\" She awkwardly scratched at her still-messy hair. \"It's... well, hard to explain. But no... it, um, definitely didn't hurt.\" Sarah could feel her pulse in her ears from blushing so hard, but she laughed it off.\n\n\"That's... a little comforting, I guess...\" Zoey trailed off, looking at the door of the room. She had likely been worried about her family and Diana for a while now and hadn't really been able to find any source of reassurance until now.\n\n\"Shh! shh!\" Steven whispered. \"Ok guys, I need to concentrate now. It's getting kinda' messy in here, so can we keep the loud, erotic chatter to a minimum please?\" Zoey looked like she was about to smack her brother's head, but realized that could be a bad move and settled on simply crossing her arms and leaning back in her chair with a huff.\n\nHe was right, though. The tunnels WERE getting more complicated and strewn with various obstacles. Pillars of ichor rose from the ground all the way up to the ceiling, vines of tentacles draped over corridors, and, of course, hundreds of nude humans were trapped within, some with only their genitals or breasts exposed.",
        "Steven tried not to focus on the lewd scenes everywhere, hoping to maintain his composure and thus control on the drone. However, his willpower wasn't strong enough to prevent him from \"investigating\" some of the people he came across. Every wet orifice they could see was filled with a tentacle. Ass holes, pussies, mouths, and even, oddly enough, ears, had tendrils stuffing them. Transparent tentacles enveloped the rigid cocks and plump tits of the human livestock, languidly milking them of their white juices. \n\nSome of the captives strained energetically against their restraints, howling in pleasure, while others simply hung limp, letting out long, constant moans while drooling past the tentacles in their mouths. Still others didn't have a choice in movement at all, as only their asses were sticking obscenely out of the wall, held completely immobile by the hard ichor as tentacles plunged into their holes and sucked on their erect cocks or clits. It was clear which of the captives had been here longer than others.\n\n\"Follow the flow,\" A'luhr suddenly said, snapping everyone out of their muted stupor. \"Most of the fluids will be directly fed to the queen, so if we follow those tentacles, we should be able to find her.\" She gestured to some of the tentacles incorporated into the tunnel's surfaces. Sarah looked closely and noticed that they had the recently absorbed bodily fluids flowing through them, all in the same direction. \n\n\"Of course,\" A'luhr continued, \"Some of it is mixed with the Krinis's nectar to create nutritious sustenance for the livestock.\" As if to prove her point, the drone passed by a woman whose head was entirely covered by tentacles, except for her exposed mouth. A thick appendage detached from the ceiling above her and thrust into her throat, which seemed to happily welcome the invader. \n\nImmediately, thick streams of light-orange liquid could be seen coursing through the tentacle and into her mouth, some of it gushing past her lips and dribbling down to coat her voluptuous, jiggling boobs. The woman hungrily gulped down the fluid and loudly gasped as the tentacle pulled away from her mouth, leaving a thick trail of the juice that splattered down her pregnant belly and over her pussy lips, acting as even more lubricant for the three tentacles fighting for dominance in her messy cunt.\n\n\"Mmm-more! Please! MORE!\" The woman blindly begged into the air. Her voice was barely audible over the loud sounds of other captives pleading as they, too, were cut off from the vile-looking fluid. \"Fuck! Oh fuck! I need moRMPHHGH\" Her crazed cries were silenced as another tentacle suddenly filled her throat. It didn't seem to be feeding her the same stuff, but she greedily sucked on it with a dumb, happy smile on her barely visible face.\n\nThe drone moved onwards down what felt like miles of tunnels, with the same horrendous scenes playing out everywhere they looked. Steven had to stop the drone a few times to prevent it from running into the tentacles that moved around the area. \n\nOnce, he even narrowly avoided a sudden collision with dozens of small tentacles and a torrent of fluid that fell from the ceiling above. Tilting the camera up, several asses hanging from the ceiling came into view. Women were suspended in ichor cocoons, their legs up over their heads with only their genitals on display below. The only dripping holes that weren't filled with writhing tentacles were those that were giving birth.\n\nTo everyone's horror, they quickly realized that the deluge of squirming tendrils that the drone had dodged had been ejected from the gaping pussy of a woman above them, which was still oozing with the slime of her latest birthing. One tentacle hadn't fallen to the floor to wriggle away with its siblings. Instead it had latched onto the woman's swollen clit and was suckling it as if it were a nipple. The woman's slit flexed open and closed with the powerful orgasms still wracking her tightly bound body, but that didn't stop another thick, ribbed tentacle from plowing deep into the newly vacated hole to start the process all over again.\n\nEventually, the drone exited the maze of tunnels and found itself in a large clearing. The cavern looked as if something huge had scooped out the earth like ice cream and lined the crater with tentacles.\n\n\"Wh-what the...?\" Steven said in a breathless voice, almost forgetting to keep control of the drone to maneuver out of the way of the sudden, powerful ejaculation erupting out of a throbbing cock on a nearby wall. The spunk pooled on the fleshy surface of the ground below, where several of the newly birthed Krinis began to dunk their \"faces\" into it and drink deeply.\n\n\"The Krinis do not simply adopt the lands they consume,\" A'luhr explained. \"They also change it. As a subterranean species, it stands to reason that they are capable of forging their own tunnels. This one just seems to be... rather large.\"\n\nLarge was an understatement. The far walls of the vast underground chamber couldn't even be seen. The room sported hundreds of towering pillars of tentacles that supported the cave's structure. Lodged within the pillars were countless trapped humans, which also lined the floors and walls and even hung from the ceiling. Long streams of aphrodisiac nectar oozed from the top of the cavern, falling alongside the various sexual fluids that slowly leaked from the swaying dicks and juicy pussies of those trapped in the ceiling. \n\nThe surfaces of the chamber were all gently pulsating with a pinkish-orange bioluminescent glow, so even though they were miles underground, all of the lewd acts could still be plainly seen by the drone as it weaved by.\n\n\"It's... getting hard to follow the tubes...\" Steven moaned. \"There are just so many now...\"\n\nIt wasn't hard to see why that was the case. Many people were being milked like those in the hallways, as evidenced by the thousands of transparent tentacles carrying harvested cum and milk away from the captives and across the entire hive. Unlike the hallways, however, many people were in new positions. They saw men and women of various ages and ethnicities plastered together in the ichor or held with tentacles. Many were forced into 69 positions while encased within - some even with the same sex - and eagerly lapped and sucked at their partner's genitals while tentacles thrust in and out of their holes.\n\nThe drone passed by a man and two women suspended in the air by thick tentacles that held their limbs up over their heads. They were positioned facing each other in a tight circle so that their genitals were all touching. The man's foot long dick stood proudly next to the two six inch clits of his female companions. \n\nThey were all writhing in unison as a single transparent tentacle swallowed all three of the sensitive organs, sucking and squeezing them together. The clits swirled around the man's rigid shaft as they were all stroked together, until finally the man came and filled the tentacle sleeve with his seed. The semen was sucked away, but not before it sloshed around their genitals, creating an intensely lubed sensation. All three of them groaned and cried out as one as their sexes were endlessly sucked together. \n\nA nearby group of suspended humans were undergoing a different fate. A man was held spread-eagled parallel to the ground far below, facing the ceiling. A slender woman with enormous breasts was hanging upside down by her spread legs, with her face wedged between the man's legs. \n\nTentacles wrapped around her plump tits and slid them up and down around the man's large dick, which was nearly completely engulfed by the soft flesh. While the tendrils used her boobs to give the man a titjob, she busied herself by licking at his engorged, sagging balls and asshole, while a vibrating tentacle filled the latter.\n\nThe man's own mouth was not idle, as he greedily sucked and licked at the throbbing male genitals that were sticking out of the wall next to his face. The man in the middle came hard, his cum erupting out of him so powerfully that it managed to cover the woman's entire midsection and even splashed up to cover her pussy lips, which were being roughly parted by a thrusting tentacle nearly the girth of the man's arm.\n\nAs the drone moved on, a man's thrusting ass came into view, his limbs stuck in the pillar he was facing. A woman's face could be seen sticking out from the tentacles below him, her moist lips wrapped around the thick shaft of his manhood as she was forced to give the stranger a blowjob. The woman's own legs were peeking out from the pillar below. They were spread wide by tentacles, allowing another man's head, emerging from the pillar just like hers was, to hungrily feast on her wet pussy. He buried his tongue deep into her womanhood and grinded his nose against her exposed clit. This made her eyes roll back into her head and she sucked the other man's cock down into her throat with a new vigor.\n\nThere were countless instances of the captives being forced to fuck each other like this. One man had his arms and legs bound up behind him as he hung from a tentacle, leaving his massive cock and balls to swing freely below him. His head was almost completely wrapped in tentacles, save for his groaning mouth, depriving him of all of his senses. The tentacle rhythmically moved him along a wall where several women were stuck in various positions, each one with their gaping holes helpless to do anything but wait to be filled with cock. \n\nThe tentacles powerfully thrust the man into each of the women in turn, his huge shaft creating a bulge in their stomachs while his engorged balls loudly smacked against their tight, squirming asses. Each woman had her face exposed and lustfully watched as the man fucked her neighbor, eager for their turn and begging to be next. As his dick slid from one pussy and into another, the gallons of sticky cum that gushed from his previous partner would pour down onto the head of the woman below while some would trail along with him. It resulted in the entire wall becoming a web of semen connecting all of the twitching pussies that didn't even have a chance to fully dry before the man was brought back to the start to impale the women all over again.\n\nA similar scene was happening just below this. A woman was suspended by a tentacle with her legs up over her shoulders, forcing her vagina wide open. Like the man above her, she was subjected to sensory deprivation by tendrils covering her face, while others slithered along her crotch to spread her pussy lips apart.\n\nBelow her, dozens of men were lodged into the fleshy ground, with only their faces, torsos, and meaty erections visible. Their large cocks twitched and swayed back and forth, like a patch of flowers dancing in a gentle breeze. \n\nThe woman was positioned over each of the rigid rods one after another, being dropped down onto them each time. It reminded Sarah of a morbid crane-game like you might see in an arcade, except with far more accuracy. The woman's well-lubed, gaping cunt easily swallowed every cock that it was forced down onto, sliding up and down each length as the tentacle moved her ass for her to milk each man dry.\n\nNone of the men seemed even close to that point, however, as even though each one shot buckets of jizz into her, the flow never stopped. She would be lifted up off of a man's still painfully hard member and swung over to the next awaiting cock. Her dripping hole trailed cum and pussy juice across the faces of the men she had just fucked and down onto the next trembling shaft, which lubed it up for its next round of action.\n\nMost of the floor, however, was occupied by couplings of humans. Hundreds of men were stuck in the slimy ground with their backs forced into an arch and their hips raised high into the air, resulting in their hard manhoods being as exposed as possible. Each one was paired with a woman who was forced into a reverse cowgirl position by the tentacles. Each woman's back was bent forward so that her ass was spread wide for each man to crane his neck to watch while she feverishly rode his swollen cock. The cum of countless orgasms oozed along their shafts, squishing and spreading messily each time the woman's pussy slapped back down to take her partner's dick balls deep.\n\nTo Sarah's surprise, there were even some naked humans who weren't bound at all by tentacles. They were simply left to freely roam the room and fuck anyone they wanted. Some seemed to prefer to slide the tentacles off of the cocks or out of the pussies of those trapped in the walls and pillars, allowing for them to personally enjoy the newly exposed and slime-covered genitals. Many simply seemed content to engage in a large orgy where men and women all writhed amongst the tentacles with each other, filling any vacant hole or sucking any lonely breast they could find.\n\nSome even seemed to be using the tentacles as toys. One man pulled a moaning woman off of another guy and spun her around to face him. He had grabbed the suckling tentacles off of two nearby dicks in the wall and plunged them onto the woman's erect nipples. As they began to suck on the new flesh, he buried his face between her juicy tits and motorboated them with a happy, drunken look on his face. She threw her head back and moaned even louder as she began to finger herself. \n\nEventually, she pulled one of the tentacles off of her now lactating nipple and grabbed the man's hair, pulling his mouth to her breast and forcing him to feed. He did so without hesitation, squeezing her boobs with his hands and playing with them to make them jiggle and bounce in a deliciously lewd display. The woman used her other hand to reach around and firmly spank the man's firm ass, causing him to groan in pleasure.\n\nThe drone's light shone down on the sea of glistening nude bodies and its microphone was inundated with a chorus of moans, cries, and screams of absolute ecstasy. Suddenly, Steven piloted the drone sharply away in another direction and began to follow the guiding tentacles as closely as possible to block the obscene sights from the camera's view.\n\nThis sudden motion caught everyone by surprise, as they had been enraptured in watching the unrivalled display of hedonism. Even Zoey, who was covering her eyes with her hands, had ventured to peek between her fingers to witness the depraved acts on the screens. Her legs were squirming together ever so slightly.\n\n\"Wh-why did you do that...!?\" Zoey yelped, snapping out of her thoughts. \"What if you had... Stevie...?\" She had begun to berate him but her tone turned to one of concern after seeing the shocked and disgusted look on his rapidly paling face.\n\n\"It's, um... nothing,\" he stuttered. \"Just thought it best to focus on the objective... that's all. This place is getting to me.\" His voice came out thickly as if he had cottonmouth. Zoey let out a sigh and fell back into her chair. \n\nSarah had a suspicion as to why Steven had acted the way he did. Though she couldn't be sure, she thought she had caught a glimpse of Zoey and Steven's mother, whom she had met during orientation, energetically fucking a man she didn't recognize at all. Her golden hair was flying wildly in the air while her large tits swung back and forth from the force of the man thrusting into her ass doggie-style. Another man below her, who also didn't seem to be her husband, was eagerly ramming his thick rod deep into her golden-muffed pussy while he used his hands to play with her voluptuous boobs. Her tongue hung from her mouth as she panted in delight.\n\nIt was quickly put to better use, however, an athletic black woman suddenly grabbed her face and forced her into a steamy kiss, reaching down to help the man play with her tits while straddling his face to allow his mouth access to her own dripping cunt. She happily rode his face for a while before yanking their mother away from the men and pushing her down to begin frantically scissoring their wet pussies together. \n\nThe black woman's dark tufts of pubes perfectly blended with their mother's golden bush. Both of the men from before approached either woman from behind, reaching around to fondle their plump breasts as the juicy mounds bounced up and down from the two women's grinding motions.\n\nThere was no sign of Steven and Zoey's father, but it didn't seem too unlikely that he was also somewhere in the chamber, having his cock sucked and fucked by a mixture of horny women, men, and hungry tentacles. Sarah inwardly thanked Steven for shouldering the burden of having to witness that without allowing Zoey to be scarred by the sight.\n\n\"You've done a good job avoiding all the falling... debris,\" Sarah complimented. \"I have to say I'm a bit relieved that we haven't been hit by any, well, droppings.\" She coughed awkwardly and Zoey gagged a bit at the thought.\n\n\"You mean feces?\" A'luhr asked blandly. The rest of the group seemed hesitant to respond as if the question made them wildly comfortable. Sarah made a mental note that none of them seemed to have a scat fetish. \"You will not find any in the hive. Excrement is composed of wasted matter and nutrition, however the nectar that the Krinis produce is perfectly absorbed by the body to provide absolute maximum efficiency in keeping their livestock healthy. As such, you won't find the captives producing much waste, if any. It would be cleaned up rather quickly by the tentacles to avoid the outbreak of disease anyway.\" She gave a thoughtful look before slowly continuing. \"Despite their... aggressive means, the Krinis do value the lives and health of their cattle.\"\n\nThe notion of the nectar being this potent of a substance boggled Sarah's mind. Was such a thing even possible? Its abilities practically seemed like magic. It could alter body chemistry, modify various organs, affect the mind, and now it was revealed to be incredibly nutritious!? The last few months had really opened her eyes to how inferior her own race was when compared to the various extraterrestrials they had encountered. There was still so much to learn! \n\nFor a moment, she almost didn't want to destroy the Krinis, and to instead be able to witness and study them firsthand. Was this her true desire, or just the effects of the nectar still wearing off in her system? She wasn't sure, but the decision had already been made. After all of this was over, there would still likely be remains to study, so she would have to be content with that. She sighed. \n\n\"That said,\" A'luhr continued, \"I am not sure how good it... tastes. Though the captives do not seem to mind it that much...\" Sarah thought back to when she had ingested a relatively small amount of it. Her memories were fuzzy despite it being so recent, but she seemed to recall it tasting and smelling like a sweet, almost cloying, honey, with unearthly but attractive aromas and flavors mixed in. Though she was unsure as to how much of that was due to her altered state of mind at the time versus her actual senses. She gently licked her lips while staring off into space while lost in the memory.\n\n\"You okay...?\" Adam suddenly asked, hesitantly tapping Sarah on the shoulder. She blinked for the first time in almost a minute and gently shook her head to clear her thoughts, taking in a sharp breath of surprise. \n\n\"Y-yeah...!\" She stammered. \"I was just lost in thought thinking about how... incredible these aliens are. N-not in a positive way, just in a scientific way, you know?\"\n\n\"I getcha'.\" Adam nodded in understanding. \"It's taking a herculean effort to wait until this is all over to get A'luhr to show me some tricks. I STILL don't know how she got that socket wrench to do that.\" He shrugged. \"We're almost there. Eyes on the prize.\"\n\n\"Mmm...\" Sarah murmured in affirmation, returning her focus to the monitors. The drone seemed to be finally moving away from the tall pillars of tentacle-bound humans and towards a large clearing.",
        "\"What in the...\" Steven said again. To be fair, though, a nearly constant state of shock and wonderment would be expected when witnessing the seemingly impossible sights that the drone continued to record. A large hole, with a diameter equal to two football fields, split the ground below. The yawning chasm was only sparsely lit by weakly pulsating bioluminescence, leaving the bottom totally dark from the drone's point of view. The slithering tentacles along the floor of the cavern hung over the edge of the hole like a waterfall, continuing down the sides of the pit and giving it the appearance of a gigantic, grotesque throat.\n\n\"The fluids are being pumped down there, it seems.\" A'luhr pointed out, gesturing to the web of transparent tentacles that were carrying the collected juices down into the inky blackness. \n\n\"Are you kidding me!?\" Steven exclaimed. \"I've seen enough horror movies to know not to go down into gigantic dark pits! What if there's a crazy monster down there or something!?\" \n\n\"I don't really think we have much of a choice,\" Sarah replied. \"Besides, nothing has attacked the drone so far, so as long as you're careful, I imagine it will be fine. It's probably just a regular passage that leads to the lower tier of the hive.\" \n\n\"Sarah Cassidy is right,\" said A'luhr. \"There is no great beast lurking below, other than the queen, who alone is immobile and harmless.\" She suddenly looked unsure and gave a concerned glance towards the rest of the group. \"Unless... your planet has valkrids on it like mine does?\" \n\n\"Valkrids?\" Sarah raised a brow at the unfamiliar word.\n\n\"Gigantic worm-like beasts that consume everything in their path.\" A'luhr shuddered. \"One of them managed to decimate half of the Krinis hive on my planet, but it was eventually overwhelmed. One can only imagine how things would have turned out if more of those monsters had been present at the time.\" A'luhr had a distant, fearful look on her face. \n\n\"N-no...\" Zoey croaked. \"We, uh, don't have those here... thank god.\" She nervously fidgeted with the drawstring on her hoodie. \n\n\"Ok...\" Steven took a deep breath. \"I'm going in!\" The drone began to descend down into the pit. The slowly pulsating orange glow of the tentacles cast shadows from the slithering tentacles and gave the entire area a creepy, hellish atmosphere. \n\nThere weren't many captives here, as this seemed to be mostly a connector between chambers, but on occasion the drone's small light would illuminate an ass protruding from the wall, or a pair of swollen breasts being milked by tentacles, which made it even easier to follow the direction of the flow.\n\nAfter what felt like almost ten minutes of falling, the drone suddenly passed through the bottom of the hole and into another large, dimly lit chamber that, like all the others, seemed to have every surface covered in slimy ichor and tentacles. However, unlike the earlier areas, this one had several structures growing from the ground and the ceiling that seemed entirely composed of tentacles. Sarah continued to be amazed at just how versatile these creatures were. It reminded her of how fire ants created self-aggregations and she began to wonder what the extent of the Krinis' seemingly endless abilities were.\n\nThe dozens of structures hanging from the ceiling were shaped like uvulas, with bulbous lower sections being held up by thinner strands of ichor and tentacles. The shapes growing up from the ground looked like large mushrooms, except with the upside down caps, giving the impression of an elongated funnel. \n\nThe pulsating glow of the room was too weak to make out clear visuals, but dark outlines of shapes along the sides of the ceiling sacs could be seen as the drone passed by. Steven moved the drone's light back and forth as he went to ensure that he didn't run into anything, attempting to keep a good distance from the strange structures.\n\nSuddenly, a wet sputtering sound could be heard coming from one side of the drone, as a propeller started to fail, sending the machine awkwardly spiraling downwards.\n\n\"Shit!\" Steven yelled. \"Something hit us!\" He wrestled with the controller as he attempted to maintain altitude. With a flick of the joysticks, he lurched the drone in such a way that it dislodged whatever had been mucking up the propeller and it whirred to a halt only inches above what appeared to be a small pond at the top of one of the floor structures. The surface of the liquid rippled under the intense wind pressure from the propellers, but the way it sloshed made it appear to be thicker than water.\n\n\"Euhh...\" Zoey groaned. \"What IS this stuff? Wait, no, I don't want to know.\" She covered her eyes again.\n\n\"Ugh... this stuff is oozing all around us now!\" Steven grimaced. \"I need to get us out of here before any more of it hits us!\" He quickly located the nearest edge of the pond and managed to swerve the drone around more incoming streams of liquid that splashed down into the pool below. Once he was away from the surface of the pond and away from the dripping fluids, he turned the drone to get a \n\nbetter look at what was going on.\n\nThe group collectively gasped as the light hit the hanging structures behind them. There, protruding out of the sides of the giant hanging tentacle sacs, were hundreds of men's cocks and balls. They were all different sizes and ethnicities but each of them shared the common trait of being aggressively stroked by slippery, ribbed tentacles, while their hanging balls were sucked and teased by smaller tendrils. Lube-like slime messily sprayed into the air as the slick tentacles masturbated the throbbing shafts.\n\nAn almost constant rain of semen blasted from the tips of their twitching rods, while small vibrating feelers and brush-like tentacles roughly scoured each man's over sensitive glans. They were helpless to stop the torture, however, as other than their genitals, their entire bodies were completely enveloped in the writhing structure, rendering them completely immobile. The only other parts of them that were visible were their tongues hanging out of their barely exposed mouths that were constantly being pried open by tentacles like a ring gag. Low throaty moans and whimpers escaped their lips as they could do nothing but weakly twitch their cocks amidst the pleasure.\n\nThe overall effect of the squirting semen gave the entire structure the vague appearance of a showerhead, with the numerous ejaculating dicks delivering an endless stream of cum that dripped freely through the air in long, thick ropes and splashed down into what was now clearly a large collection bowl below each ceiling sac. There were dozens upon dozens of similar stalactite and stalagmite style pairings throughout the chamber, and each pool of cum was already overflowing, splashing down the sides of the mushroom-like structure and onto the ground below.\n\nExcept it wasn't just empty ground that the jizz was pouring down onto. The wet asses, tits, and pussies of countless women lined the floor around the bottoms of the structures in tight concentric circles. Their knees were all pulled back over their shoulders to fully expose their genitals and their limbs were all pinned in place inside of the fleshy ground. Many of them had greatly swollen stomachs that almost seemed on the brink of bursting, and it was clear why.\n\nSemi-transparent appendages snaked out from the bottoms of the mushroom-like structures, each one delivering a constant flow of gallons upon gallons of cum from the depths of the pool at the top and directly into the numerous gaping holes below. The warm white liquid sloppily gushed out of every woman's pussy, pooled in their asshole, and then dripped to the ground where baby tentacles eagerly sucked it up. \n\nEvery so often, the tentacles milking and squeezing their breasts would grow another appendage that would plunge into the awaiting mouths of the men far above, filling their throats with the combined fluids of alien nectar and human milk coming straight from the source. The sheer volume of the liquid resulted in some of the men coughing up a good amount of the milk, causing it to pour out of their mouths and down into the collection pools below, mixing with the sloshing semen.\n\nMuch in the same vein, T-shaped tentacles would occasionally rise up and engulf some of the men's fountaining cocks, channeling their cum down into the open mouths of the women below, making them choke and gag on the torrent of thick spunk so that it would bubble out of their mouth and down the sides of their cheeks. Many of the women were blindfolded by tentacles, but several had their eyes wide open, able to lustfully watch everything going on around them... when they weren't rolled up into their heads in pleasure from each powerful thrust of the tentacles stuffing their overflowing cunts.\n\n\"Th-that's all cum!?\" Adam choked out, unable to reign in his surprise after seeing the large pools and the veritable waterfalls drizzling down from almost every surface.\n\n\"LALALALA!\" Zoey started loudly singing to herself, plugging her ears with her thumbs while still keeping her hands over her eyes.\n\n\"Zoey, please shut up; I can't concentrate with you freaking out!\" Steven barked. His expression afterwards showed that his words had come out a bit harsher than he had intended. \"S-sorry... I'm just pretty tense from seeing, well, all this...\"\n\n\"S'okay...\" Zoey mumbled. \"I'll calm down... just... god can't this go any quicker?\"\n\n\"I can't risk accidentally running into any of this... stuff...\" Steven groaned, expertly piloting the drone away from yet another deluge of bodily fluids. \n\n\"I-I can't imagine what the purpose of this chamber is...\" Sarah muttered. \"It looks like it would just be for getting women pregnant with human babies...?\"\n\n\"That is most likely the goal, yes,\" A'luhr replied matter-of-factly. \"The Krinis will require that their livestock reproduce in order to maintain their numbers over time.\" Sarah was horrified at the thought, but realized it was the same as what humans did with their own livestock.\n\n\"Y-you can't mean they have children trapped in here!?\" Zoey stammered in fear and disgust. \"Babies even!?\" It was true that they hadn't seen any kids anywhere in the streets nor in the tunnels, but they had always attempted to repress their warped worries as to where they might all be. Now, however, it could no longer be ignored.\n\n\"I believe that they have your young stored away somewhere safe,\" A'luhr replied calmly. \"If you are worried about them having to undergo such an... ordeal... as the mature humans, I can offer some comfort. As I've said before, the Krinis's nectar, though potent, puts a considerable strain on the body. They have been observed to keep immature host species in incubator pods, keeping them in a deep sleep until their bodies have grown to a point where they can handle the nectar and be added to the nursery.\" A'luhr glanced at Zoey. \"Judging from the pheromones your body gives off, I imagine that you would be about that age.\"\n\n\"Ex-excuse me!?\" Zoey exclaimed, quickly smelling her arms and clothing for any offending odors. \"I am NOT giving off pheromones... erm... well... actually that does make sense...\" She sheepishly admitted. \n\n\"Is that what that smell is?\" Steven jokingly wrinkled his nose. Zoey kicked the back of his chair, which made him jerk forward a bit, but he was clearly expecting this sort of reaction, as his control over the drone barely wavered. \"Hey! Watch it! What if we fail to save the world all because you can't remember to shower?\" He continued to tease.\n\n\"I do SO shower!\" She grunted. \"That's rich coming from you! Besides, pheromones aren't something you just wash away. I'm just surprised that A'luhr, a species not even from this planet, is able to sense those of a human. Even humans often don't recognize it!\"\n\n\"Once my kind has been around others for a while, we find it easy to recognize their scents,\" A'luhr said, flourishing her eyebrows. \"Each of you has a unique profile.\" The humans in the room all gave looks of mild disinterest, but then furtively checked their own smell when they thought no one was looking. \n\nShowering wasn't a daily event these days, given the need to ration clean water, but they felt pretty confident that they were keeping clean the best they could. Unappealing odors had a tendency to hang in the stale air of the bunker, so they put considerable effort into hygiene.\n\n\"Hold on, something's happening...!\" Adam alerted the rest. He pointed to a corner of the screen where a woman was being gently pulled out of the ground by tentacles. As she rose, her exhausted body hung limply in the air and her legs swayed back and forth. Now that the tentacle filling her had been removed, all of the juices that had been trapped inside of her suddenly ejected from her well-used slit in a torrent of white and orange slime, spattering loudly to the ground below.\n\nThe group watched as her stomach slowly began to shrink down to a regular size like a deflating balloon. Eventually, the gushing fluids became a lazy drizzle and her legs we pulled open with no resistance whatsoever. A tentacle rose from the floor and very slowly pressed up into her moist womanhood. \n\nThe woman's body gently shuddered as the tentacle inside of her did its work. Everyone watched wide-eyed as a small orb of faint, warm orange light began to leisurely flow through the tentacle, leaving the woman's trembling pussy and travelling down along the length of the appendage across the floor.\n\nSoon after, the tentacle withdrew and the woman was returned to her original spot next to the others, her legs splayed apart up and over her head before being encased in the squishy ground once again. As tentacles began to refill her holes, Sarah and the rest of the group looked at each other in wonderment.\n\n\"Wh... what was that...?\" Adam gasped breathlessly. \n\n\"I could be wrong...\" Sarah said pensively. \"But I think the tentacle may have just extracted the zygote from her womb...?\"\n\n\"The what?\" Steven asked.\n\n\"The fertilized egg.\" Sarah explained. \"It must be moving it to those incubators that A'luhr mentioned... like a surrogate mother.\"\n\n\"So the women get pregnant but don't even give birth?\" Adam replied, his brows raised.\n\n\"That seems to be the case, yes.\" A'luhr affirmed. \"It likely allows for the most time-efficient breeding.\"\n\n\"I'd still be worried about all the mixed... fluids and stuff...\" Zoey shuddered. \"I can't imagine just how many STDs are being spread this way...\"\n\n\"Esteedees?\" A'luhr asked, tilting her head in a look of confusion.\n\n\"Diseases spread through contact with bodily fluids. They're not uncommon.\"\n\n\"Ah, I see. We eradicated those sorts of ailments centuries ago in our society.\" A'luhr gave a thoughtful look. \"But now that I think back, it did seem that other maladies were not shared amongst the captives. In fact, many of them seemed to be in perfect health, even more so than before being captured. How curious.\" \n\n\"Are you saying that the Krinis somehow have the ability to... to cure diseases?\" Sarah stammered, her mouth agape.\n\n\"It would not come as a shock to me.\" A'luhr gave a sort of shrugging motion with her eyebrows. \"They have been shown to be able to dramatically alter body chemistry, so it would stand to reason that they can adjust their livestock's biology in other ways to promote a healthy breeding pool.\"\n\n\"We... we can't just destroy them!\" Sarah cried, standing from her seat. \"Th-think of all the medical advancements we could attain by studying these creatures! Isn't there any way that we can capture the queen instead of killing her... or... or something!?\" A'luhr sadly shook her head.\n\n\"I do not see any way that we could safely do such a thing,\" A'luhr replied with a look of surprise on her face. \"I suppose using one of the impulse detonators directly on the queen herself could cause the entire nest to lose connection to her at the same time... but I have no idea what the consequences of such an event would be.\" She idly rubbed the last, small silver sphere attached to her hip.\n\n\"There are things more important than scientific advancements at stake here.\" Adam chided. \n\n\"Says the guy who freaked out when he heard an alien space ship had sunk into the ocean.\" Sarah retorted.\n\n\"Yeah, well, at least the ship isn't trying to take over the entire planet - and winning so far - mind you.\"\n\n\"Tsk...\" Sarah clicked her tongue. She knew it was foolish to try and safely study the creatures while also eliminating their grip on the Earth. She knew that. But still, it was hard to shake her own burning curiosity and the mild, creeping thought that she wanted to protect the queen.\n\n\"See, Sarah wants to save the Earth but also keep the Krinis around so we can learn from them.\" Steven said, turning to A'luhr. \"She wants to have her cake and eat it too. Get it?\" \n\n\"Ah...!\" A'luhr gave a knowing gesture as the light of realization sparked in her eyes.\n\n\"Alright alright, I get it.\" Sarah sighed and shrugged. \"Let's get this over with before I realize again how much of a waste it is to have to kill these things.\"\n\n\"But necessary... right?\" Adam probed.\n\n\"Right.\" Sarah nodded, still looking a little disappointed.\n\n\"The incubators would most likely be near the queen herself for safekeeping,\" A'luhr said. \"If we follow that egg, it may lead us directly to the queen's chamber.\"\n\n\"Ohh! Good idea!\" Steven agreed. \"Let's go!\" He maneuvered the drone along the floor as he followed after the moving orange glow. Soon, more orbs of light began to flow through the ground as well in the same direction, as other women were regularly being pulled from their restraints to go through the same unnerving \"birthing\" process.\n\nThe flow of tentacles lead down a narrow tunnel in the wall and away from the mass semen-collecting chamber. The drone was barely able to fit through the hole without bumping into the pulsating walls. Even though nothing had shown any aggression towards the drone so far, there was no telling what would happen if one of the sharp, whirring propellers were to slice into a wayward tentacle.\n\n\"It's just like playing 'Operation'.\" Steven said with a smug look.\n\n\"You always sucked at that game...\" Zoey groaned.\n\n\"I was just letting my little baby sister win.\" He shrugged. \"Behold my skills.\" He continued to deftly navigate down the ever-narrowing passage, grazing past a few hanging tentacles but never coming into contact with them.\n\n\"I'll admit that I'm impressed,\" Zoey said, crossing her arms.\n\n\"See? Your bro's more than just a handsome fa-\"\n\nAn ear-splitting screech erupted from the monitors almost as soon as the drone exited the tunnel and into the next clearing. Suddenly, several tentacles lashed out towards the loudly hovering machine.\n\n\"Ngh!\" Steven tensed up as he leaned forward over the controls to concentrate. He swerved and ducked past most of the assailing tendrils but one of them struck the underside and sent it spiraling through the air.\n\n\"This must be the deepest part of the nest!\" A'luhr exclaimed. \"They will attack anything foreign that makes a noise! You must quiet the device!\"\n\n\"Trying not to crash at the moment!\" Steven grunted, desperately mashing at the interface. \"There!\" He regained control at the last minute and dived into an alcove along the wall, quickly setting the drone down and killing the motors. Nobody made a noise for several minutes, as if concerned that the creatures would be able to hear them all the way from the bunker if they did.\n\n\"Did... did we get away...?\" Zoey quietly asked, breaking the silence.\n\n\"I... I think so... \" Steven panted. \"But FUCK me that was close. How are we going to keep going if we can't even move without being attacked?\"\n\n\"I can certainly see WHY they were attacking the drone...\" Sarah murmured, not answering Steven's pressing question. \"This is... definitely an incubation chamber.\"",
        "From where the drone was hidden, they could see a great deal of the well-lit cavern they were in. Like the other areas of the nest, all the surfaces were covered in slimy ichor and weaved-together tentacles. However, everything was pulsating much more frequently and rivers of fluids flowed through the tentacles in all directions. It was like being inside of a gigantic beating heart.\n\nLining the far walls of the chamber were countless women. Their breasts were enormous and being squeezed for milk by several tentacles each, but even larger still were their stomachs, which were grossly distended and showed the clear shapes of individual round bulges under the skin. Thick transparent tentacles were nestled into the women's dripping mounds, slowly pushing what appeared to be large, squishy orange spheres deep into their full wombs.\n\n\"Ovipositors!\" Zoey excitedly cried out, and then madly blushed as everyone turned to look at her in surprise. She covered her red face with her hood and incoherently mumbled something about the internet, slightly turning away from the staring faces.\n\n\"The Krinis are implanting the women with their own alien eggs...?\" Adam slowly asked in horror, focusing back on the monitors.\n\n\"Why are they doing that...?\" Sarah pondered. \"I thought they simply filled a woman's womb with their own seed and some sort of biological process occurred to grow the alien cells into those little tentacles while inside the body...? So why eggs all of a sudden?\"\n\n\"This I do not know...\" A'luhr hesitantly replied. \"Perhaps this is another part of the birthing process for their kind? Maybe it has a higher fertility rate? There will always be some things we do not fully understand about their behavior.\" \n\nSome of the pregnant women began to writhe and twitch in their restraints as orange fluid suddenly gushed out of their vaginas. The egg-filled tentacles quickly retracted and allowed the contents of their wombs to freely flow out onto the floor. Dozens of wiggling tentacles squeezed out of each spasming hole, several times larger than the ones they had seen being birthed elsewhere in the nest.\n\nA few smaller tentacles wormed their way out as well and slithered up to the women's erect clits to begin suckling on them. The tentacles milking their breasts moved away to allow even more of the newly birthed tentacles to wind their way up to the women's ample tits and directly nurse on their leaking nipples. The bound women shivered and moaned in response.\n\nThe egg-filled tentacles nudged some of the straggling newborns out of the dripping pussies so that they could re-enter the holes and begin the impregnation process all over again, sliding more of the jelly-like orbs up into the women's awaiting wombs. The group watched this process in a sort of trance, unable to tear their eyes away from the strangely erotic sight.\n\n\"Uh... guys...?\" Steven said in a hoarse voice, finally finding the will to regain control of the drone. \"Wh-what is that...?\" He had moved the camera to follow the rapidly flowing liquids within the tentacles to where they seemed to be congregating. Something enormous came into view as the camera focused on the spot.\n\n\"The queen...\" A'luhr whispered, a hint of wonder and reluctant respect in her voice. \n\nA gigantic tree-like structure stood in the center of the chamber. Innumerable tentacles weaved in and out of it like tree branches and a mesmerizing orange glow glittered from the ceiling above it as the fluids and human zygotes all seemed to be ingested into its mighty form. \n\nIn the center of the \"tree\" was a large, pulsating heart-like organ, with a vaguely humanoid shape entwined within. Several huge sacs of collected fluid ballooned out from the queen's roots, jiggling and heaving as if alive. It was a Lovecraftian monstrosity that was equally beautiful as it was horrific to behold. \n\n\"Th-THAT'S the queen!?\" Steven gasped. \"I was hoping for something a bit... sexier...\"\n\n\"In her youth, she is the only bipedal Krinis and does look a bit like ourselves,\" A'luhr replied. \"She always has command over the entire hive regardless of her form.\"\n\n\"Bipedal?\" Adam laughed. \"That looks more like a tree!\"\n\n\"This queen is fully grown. Once she has integrated with her new host planet, she evolves into the final form that you see here after taking in enough harvested nutrients,\" A'luhr explained in a tired voice. \"She grows to become immobile but now able to support her entire nest of sons, while her unborn daughter gestates inside. I imagine the eggs we are seeing also are coming from her as well.\"\n\n\"She's beautiful...\" Sarah said in a daze, gently touching the screen as she gazed at the ethereal sight.\n\n\"She's not really my type.\" Steven shrugged.\n\n\"Will our tiny little firework even tickle that giant thing?\" Zoey groaned.\n\n\"There's only one way to find out,\" Adam replied. \"Steven, you're gonna' have to make a break for it and take the first clear shot you get before you're attacked again.\"\n\n\"Umm... we might need to reconsider this plan a little...\" Sarah said, being the closest to the monitors and now peering intently into them.\n\n\"God, for the last time, Sarah, we HAVE to kill them!\" Adam yelled, irritation clearly evident in his voice.\n\n\"Yeah that's all fine,\" Sarah replied. \"But what if we accidentally kill THEM?\"\n\n\"What are you...?\" Adam's voice trailed off as he approached the screen. His face paled as he saw what was on them.\n\n\"A'luhr was right... this is where they are keeping the children...\" Sarah whispered.\n\nSurrounding the queen were hundreds of pillars that had large, opaque, glowing pods growing all along the sides like warts. The group had thought nothing of these at first as they didn't seem to be doing much, but as they watched, one of the pods suddenly stopped glowing and the film surrounding it suddenly tore away like an egg hatching, causing a rush of orange liquid to spill out and down the sides of the pillar. A tentacle gingerly reached into the now open pod and pulled a naked teenage boy, completely drenched in the slime, out and into the air.\n\nAs the slime continued to slowly slide off of his body, the boy's eyes cracked open and hazily looked around in an unaware manner. Suddenly another pod further down the chamber erupted in the same way, and this time a girl was pulled from within. Judging by the proportions of their bodies, Sarah pegged them to be around 18 or 19 years old. As the tentacles began to bring the dripping young bodies towards the queen, A'luhr spoke up.\n\n\"They incubate the youth in these wombs, it seems.\" She stood to get a better view of the screens alongside Adam and Sarah. \"It appears that they have been submerged in some weaker form of nectar, though their bodies themselves are untouched. I can only imagine that their minds succumbed to the will of the Krinis long ago...\"\n\nThe looks on the teens' faces certainly seemed to confirm this. Instead of struggling or showing signs of fear, they simply smiled at one another with calm faces and distant eyes. Suddenly, tentacles wormed their way out of the base of the queen's roots and began to entwine themselves around the freshly \"birthed\" nubile bodies.\n\nThe two teens didn't flinch as a needle delicately entered their necks, but their genitals certainly had a reaction. The boy's 5\" long erection rose to attention and the girl's nipples visibly hardened as a thin trail of wetness began to visibly run down her legs. More tentacles emerged from the queen and began to gently work the teens towards orgasm.\n\nThe boy's rigid nail was completely swallowed up by an appendage and rapidly stroked by an inner sleeve while dexterous exploring tendrils gently massaged his balls. Inside the stroking sleeve, several vibrating feelers could be seen circling under the base of his cockhead and winding their way up to cover every centimeter of it. They spun around the spongy tip of his penis, making sure to powerfully stimulate as much of the sensitive bulb as possible. \n\nMore of the small tentacles began to flick at his nipples and caress his neck and ears, causing him to involuntarily shudder. Another tongue-shape tentacle with warts on it slid back and forth along his tight backdoor, covering it with slime, before pushing up into it.\n\nSoon, the tentacles got their desired effect. The boy grunted in satisfaction as his body spasmed and began to shoot his first mature load deep into the tentacle throat. His semen was sucked directly into the pulsating heart of the queen, which seemed to grow slightly brighter afterwards.\n\nMeanwhile, the girl was also receiving the first climax of her new life. Suckers had attached to her relatively flat chest and were teasing and pulling on her rigid nipples, eliciting moans and squeals from her gaping mouth. \n\nA thick tentacle slid up between her legs, but instead of plunging inside as Sarah had come to expect, she was surprised to see the top of the appendage instead blossom into what looked like a transparent cup. It pressed against the tender lips of her vagina, completely encasing the supple mound. \n\nA gentle sucking motion began to occur as her vulva began to swell inside of the small chamber while the delicate lips of her labia became more exposed. Small feelers on the inside of the cup got to work peeling back her clitoral hood and allowing her stiff nub to get sucked on as well, pulling it taut. \n\nVibrating feelers began to caress her clit, gently squeezing and tugging on it while more of them began to slip into her dripping slit. Eventually, so many of the vibrating tentacles were stuffed into her twitching pussy that they equaled the girth of a full-grown man's shaft, if not larger. They began to thrust back and forth, dancing along her moist petals each time they moved by, twisting and writhing inside.\n\nShe, too, easily came like her male companion. Though her small tits didn't yet seem to yield much milk, the cone between her legs rapidly filled with her squirting juices as her hips bucked and thrashed from the earth-shattering orgasm she was enduring. Like the boy's cum before, her vaginal fluids were sucked away into the queen and visibly added to the creature's energy.\n\nThe two teens were gently lowered from the air, still coming down from the high of their first of many future orgasms. Content smiles graced their lips and their eyes sparkled happily in the glimmering light. \n\nHollow, tube-like appendages grew up from the ground and swallowed the two of them from feet to head. The outlines of their bodies were visible in the tight confines of the large tentacles as they began to quickly slide away from view and off to other parts of the nest.\n\n\"What was that all about...?\" Sarah asked, hoping A'luhr would have some kind of answer.\n\n\"I... am not sure,\" A'luhr slowly responded. \"I can make a guess, however. I imagine that the fluids extracted from the freshly matured youth are particularly potent, so the queen feeds directly from them to maximize their nutritional effects.\"\n\n\"That would make sense...\" Sarah sighed. \"What are we going to do, though? If we set off that firework, it might hit some of these pods or the teens hanging in the air...! And now that I think about it, what about all the other people suspended by tentacles? Once the queen dies, all of the Krinis will also die, right? So won't they drop people to their deaths!?\"\n\n\"Th-that's a good point...!\" Zoey cried. \"I didn't even think about that!\"\n\n\"I doubt that would happen,\" A'luhr assured them. \"The tentacles won't necessarily lose all strength and wither away, they will simply become immobile as they no longer have commands to follow. The nectar would stop flowing shortly after and we could begin to safely extract the captives without worrying about being attacked.\"\n\n\"And... and then we could study the remains!?\" Sarah squealed. \"Why didn't you say so before!? Let's kill that bitch!\" \n\n\"But what about the nearby pods!?\" Steven reminded her. \"How do we avoid those?\"\n\n\"We might just have to get lucky...\" Adam solemnly replied. \"And get as close as possible before firing.\"\n\n\"I... I guess...\" Steven's seemingly bottomless confidence from earlier was nowhere to be seen. \"I just don't want to be responsible for getting anyone else hurt...\" He looked away. Sarah wondered if he blamed himself for what had happened to his parents and Diana. It seemed there might have been more going on in his head all this time than she had realized.\n\n\"You got this.\" Zoey smiled, ruffling her brother's blonde hair. \"If there's anyone who is a master of shooting his load to women out of his league, it's you!\"\n\n\"H-hey!\" He yelled, but the laugh escaping his lips indicated that his sister's teasing had hyped him up some. \"Ok, yeah. I just need to make a beeline for it and fire away at the last possible second. This is standard fare for a pro-gamer like myself.\" He shrugged with a grin.\n\nHe wiped his sweaty palms on his jeans, licked his dry lips, and leaned forward towards the screens. His hands showed no hesitation as they alighted on the controls and slowly brought the drone back to life.\n\nThe tentacles that had been targeting the drone earlier had stopped investigating the area and had returned to idly slithering along the walls. Steven took a few more quick breaths to pump himself up and then gunned the drone towards the pulsating center of the queen's giant body. \n\n\"That's a weak point if I ever saw one!\" Steven shouted as he prepared to launch the firework. He pressed a button and a simple targeting display appeared on the controller's screen. It was little more than some graphics overlaid on the image, but it was better than nothing. \n\nAs the drone loudly whizzed by the incubation pillars, tentacles began to swiftly lash out in an attempt to strike it down. The drone dodged and spun through the air in an intricate dance. While it succeeded in avoiding the attacks, it also made it extremely difficult to aim the rocket. \n\n\"C'mon... c'mon... almost thereeee...\" Steven muttered to himself, a few beads of sweat starting to drip down his forehead. A tentacle suddenly latched onto one of the propeller arms and caused the drone to be yanked backwards. Steven slammed on the joystick and made the drone rapidly spin in place. The tentacle seemed caught off-guard by this motion and stretched a bit with the force of the pull, allowing the other propeller arms to circle into it and cleanly slice through the tendril, freeing the drone.\n\nThe tentacle immediately started to regenerate, but the drone was already zooming away, now only a few dozen yards away from the target. A blanket of darkness suddenly washed over the drone as countless tentacles filled the air above, blocking out the shimmering glow from the ceiling. They dived down at the drone like spears of flesh, creating an intricate web that the drone couldn't hope to pass through.\n\n\"FUCK!\" Steven yelled, scrambling to begin evasive maneuvers, but it was clear that it was a lost cause.\n\n\"You just gonna' have to do it now!\" Adam yelled. \"A few people getting injured is a small price to pay for saving the world!\"\n\n\"I get it!\" Steven roared back. \"In case you haven't noticed though, I'm doing my best just to fly straight here!\"\n\nThe wave of tentacles began to close in around the drone. The view of the queen was almost completely obstructed by the writhing mass headed their way. Suddenly, a flash of inspiration washed over Steven's face and the drone headed full speed towards a small opening in the tentacle net.\n\n\"What are you doing!?\" Shrieked Zoey. \"That's not gonna' fit! Turn around!\"\n\n\"I know what I'm doing!\" Steven yelled. \"Come ONNNNN!\" He hollered madly as the drone barreled towards the small gap. Then, just as it seemed like the drone's wide propeller arms were about to smash into the tentacles around the opening, he pressed a button and the arms all folded over the top of the drone like a camera's aperture. \n\nThe reduced radius of the drone allowed it to coast through the opening, but the propellers were no longer spinning, causing the drone to free fall towards the ground. The tentacles quickly reversed their course as Steven slammed his finger down on the controller to bring the drone's propellers back online.\n\nHe spun the drone 180 degrees and finally got a clear, unobstructed view of the queen's core, only ten or so yards away.\n\n\"NOW!\" Everyone yelled at Steven.\n\n\"Obviously!\" He grunted, and he triggered the firework. \n\nThe fuse took two seconds to ignite. Just as the firework was about to eject out of the payload, several tentacles rammed into the drone from all directions. The rocket fired off but the camera veered away as the drone was sent crashing into the ground below. Through the gaps in the web of tentacles covering the camera, they could see bright bursts of color and hear the iconic explosion of fireworks off screen. The last thing that the drone's microphone picked up before the feed cut to black was the sound of a pained screech reverberating through the queen's chamber.\n\nThe group sat there quietly, staring at the dark monitors. Steven's hands were madly shaking while still holding down the buttons on the controller. \n\n\"Did... did it work...?\" Zoey's small voice boomed in the silence.\n\n\"Let's find out!\" Adam said excitedly, shaking off the tension that had gripped the room. He flipped a switch on the terminal and the security camera feeds populated the monitors. \n\nSure enough, the screens showed dozens of tentacle drones stalking the streets and then suddenly coming to a stop mid stride, remaining motionless as the human captives seemed to hazily look about in confusion.\n\n\"Yes!\" Sarah pumped her fist happily. \"Steven, you crazy bastard, you did it!\" She went in for a high five with him as he jumped to his feet in celebration. Zoey ran over and hugged him while Adam laughed and patted him on the back. Finally, a wave of relief washed over the group. \n\n\"Something... is not right.\" A'luhr hesitantly interjected. \"Look there...\" She pointed to one of the monitors where one of the drones was slowly starting to twitch. They watched in despair as soon more and more drones began to jerk back to life, continuing on as if nothing had happened and sending the entrapped humans back into an orgasm-induced stupor.\n\n\"Wh-what happened!? It looked like it worked! Fuck!\" Steven yelled angrily, slamming his hand on the terminal.\n\n\"It seemed like the queen was indeed destroyed based on that reaction,\" A'luhr slowly spoke in a puzzled tone. \"There is no other way that the Krinis could continue to operate in unison like this. Unless...\" \n\n\"D-Diana?\" Zoey suddenly said from behind them.\n\nThey all turned around to see a naked Diana and Arlo standing in the doorway.\n\n\"Diana! Arlo! You woke up!\" Zoey started to run towards them, uncaring about their nudity, but came to a fumbling stop halfway there. \"Are you... feeling okay?\" She cautiously asked, having seen the empty, yet stern, looks on both of their faces.\n\n\"You shouldn't have done that.\" Diana spoke in a cold voice. \"We wanted to welcome you... but you would even kill your own mother?\"\n\n\"Wh-what are you saying, Di...?\" Zoey cried out, tears starting to form in her eyes. \"You're scaring me...\"\n\n\"Zoey get back!\" Sarah yelled, grabbing the girl by the arm as Diana suddenly reached down between her legs. With an emotionless face, she stuck her fingers up into her dripping vagina and pulled an eggplant-sized tentacle out from within, holding it up into the air above her head.\n\nA'luhr's eyes seemed to light up with realization and she jumped to her feet. \n\n\"We have to leave. NOW!\" She yelled barreling towards the two naked teenagers as the tentacle in Diana's hands suddenly writhed and let out a high pitched shriek that pierced through the air and echoed loudly through the bunker, reverberating deep into the surrounding earth.",
        "A'luhr forcefully knocked the two of them down and away from the door as she ran out into the hall. Arlo attempted to grab at her, but she easily overpowered the fit teen boy and pushed him away.\n\n\"HURRY!\" She roared. The rest of the group stood nonplussed for a moment before the reality of the situation started to seep in and their feet began to move to follow A'luhr, still in a bit of shock.\n\nSuddenly, the entire bunker began to violently shake, knocking them to the floor. BANG! BANG! Loud ramming thuds from outside the walls of the underground shelter began to ring out and deafen the group as they attempted to regain their footing. \n\n\"What the fuck is going on!?\" Adam yelled after A'luhr who was already nearing the exit hatch. \n\n\"The girl must have had a newborn Krinis inside of her this whole time!\" A'luhr shouted back. \"It is signaling to the rest of the nest; they know we are here!\"\n\n\"Shit!\" Steven cried out as a thick tentacle suddenly ripped through the steel wall next to him, narrowly missing his head. Everyone started to duck and weave along the hallways towards the exit as more and more of the appendages began to break through into their precious sanctuary.\n\nThe group all crowded into the exit hallway as Adam hit the switch to open the hatch. Further back in the bunker, they could hear Diana and Arlo excitedly welcoming the Krinis into the shelter, laughing gleefully as the tentacles reclaimed their horny bodies.\n\n\"No!\" Sarah screamed out from the back of the group. A tentacle had wrapped around her thigh and yanked her flailing body back down the hall.\n\n\"SARAH!\" Adam cried out, pushing past the others and rushing down the hall after her. \n\n\"ADAM!\" She shrieked. \"Help me!\" She attempted to grab onto furniture as the tentacle dragged her away, but its strong pull made her lose her grip every time. Adam dashed into the living room and grabbed the sword off the wall. \n\n\"GRAAHHH!!\" With a mad howl, he swung the decorative blade down at the tentacle holding Sarah's leg. It simply bounced off and went flying from his hand as another tentacle shot out and wrapped around his outstretched arm. \"FUCK!\" he roared, attempting to wrench his arm away.\n\nIt looked like all was lost as Sarah got reeled in closer and closer to the main mass of tentacles bleeding into the bunker. Some small tendrils had already begun to reach her and slither up the legs of her sweatpants. \n\nSuddenly, the smell of ozone wafted through the air and A'luhr leapt out of the hall, wielding a lit sparkler in either hand. She swung them down at the tentacles like daggers, easily cleaving through their flesh like a hot knife through butter. The seared ends of the tentacles bubbled painfully and turned to ash as she continued to hack away at the intruders until the two professors were freed from their assailants.\n\nThe sparklers suddenly fizzled out.\n\n\"These do not last as long as I had hoped.\" A'luhr remarked. \"Now I see why they are just toys.\" She grabbed the two humans and practically threw them to their feet. \"RUN!\" She struck another unused sparkler against her dagger and waved it in front of her, keeping the tentacles at bay while she backed up towards the exit.\n\nSteven and Zoey scrambled up the ladder first, followed by Sarah, and then Adam right behind her. A'luhr threw down the dying sparkler and jumped for the ladder, acrobatically vaulting up the rungs as tentacles crashed into the floor beneath her. She rocketed up through the hatchway and Adam quickly slammed it shut behind her, the metallic sounds of several tentacles colliding with the door immediately rang out from the other side.\n\n\"Go go go!\" Steven yelled as they ran down the street, heading to anywhere other than where they were. They sprinted past several Krinis drones that still seemed to be immobile, though the humans inside of them were gyrating in an attempt to grind their genitals against the squishy tentacles in a desperate attempt to seek stimulation. \n\n\"It looks like the new queen's control has not yet extended this far!\" A'luhr yelled to the rest of the group. \"We may still find a new place to hide before they come back to life!\"\n\n\"The NEW queen!?\" Sarah exclaimed. \n\n\"Yes, I fear we were a little too late... the newborn queen must have hatched and assumed control of the hive in the absence of her mother! We will consider a new plan once we are safe. For now, we must evade capture.\"\n\n\"The queen is dead, long live the queen.\" Steven ruefully groaned as they raced down the sidewalk looking for a safe place to lay low.\n\nDeep underground in the queen's chamber, a sudden movement agitated the smoke swirling in the air. A humanoid figure emerged from a pile of slime and ashes and picked up the wrecked frame of Steven's drone, staring down at it. The creature let out an ear-splitting shriek that drowned out the moans of pleasure filling the tunnels, and all of the tentacles in the area sprang back to life, ready to resume their lewd work and hunt for more prey. The new queen had five particular individuals in mind.\n\nEND OF PART 3"
    ],
    "authorname": "worldender",
    "tags": [
        "tentacles",
        "alien",
        "forced partners",
        "impregnation",
        "bondage",
        "sci-fi",
        "milking",
        "mind control",
        "seedbed",
        "mind break"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/earth-tentacle-breeding-ground-ch-03"
}