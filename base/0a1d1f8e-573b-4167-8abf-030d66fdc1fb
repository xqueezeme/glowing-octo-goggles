{
    "title": "To Walk the Constellations Pt. 15",
    "pages": [
        "\"Faraday him.\" \n\nThale's eyes snapped open moments before the cage came down. Three dark figures around the bed were crouched low and held subtech weapons \u2013 knives, clubs, snub nosed stubguns, their boots. The one holding the cage slammed it down, the fibermesh mask snapping tight around his nose, his ears, his mouth. Thale felt the pressure of it against his face, the muffling whump of his nostrils pressing completely to the solid, laytex like fiber. \n\n\"Cinch it! Now!\" One of the men snarled, while another planted the stubpistol into Thale's stomach. \n\nHe pulled the trigger. \n\nThe hammer snapped down on the fleshy join of thumb and pointer finger as Thale jammed his hand into the mechanism. The gunman hissed behind his mask, but then Thale brought his head upwards. He took advantage of the Faraday cage wrapped around his head to smash his face into the man with the knife's face. The mask he wore crunched and he stumbled backwards with a muffled grunt. Thale's claws sprang from his fingertips and he leaped off the bed, slashing with his hand. The man with the club caught his claws on that and the club went whistling off into the dark. It cracked into the window that looked out over Eudaimonia's cityscape. \n\nThale's eyes could only see faint shapes through the mesh. \n\nThe man with the pistol lifted it up, snarling. \n\nThale snapped out his hand. The clavegun that was hidden in the wall above the Emperor's bed fired through the thin material. The massive, explosive slugs caught the assassin in the back. His shoulder blew apart and his head turned into a fine red mist. The other assassins sprang for cover, one shouting: \"What the fuck!?\" \n\nThale pointed with his finger, stitching a line of explosive death across the floor. But one of the men had leaped behind the imperial dresser \u2013 made, like so much of Rehoboam's old stuff, out of material denser than some planetary cores. The clave rounds impacted and burst on the surface like tiny supernovae. \n\nThale felt his lungs burn. \n\nThe assassin with the knife darted from cover and Thale snapped his finger to him, but the man leaped behind Thale. The clavegun let out a whining bleating noise as it tried to target a firing solution through his body. Thale spun and blocked the knife thrust at his throat with his forearm, knocking the assassins' arm aside. He thrust out with his own claws, burying them in the man's stomach. Their fiber armor gave, but he didn't scream and Thale didn't feel blood. \n\nThe knife, again, whistled at Thale's face. Thale jerked his head back, then caught the assassin's wrist. With muscles burning and heart hammering, he shoved and bent the arm backwards, driving the blade into a seam between mask and throat. Then, pivoting, he tossed the assassin at his fellow, who had emerged nowt hat the clavegun wasn't currently hammering away. The two went down in a pile of limbs. Thale grabbed at his mask, trying to work his claws in. His vision began to waver and fade as he felt the material stretching around his claws. He tugged and the mask drew back \u2013 but the added space had no air to breathe in it. He fell to his knees, his hands tightening and tugging more. \n\nThe assassin with the club stood. He had the pistol. \n\nThe door to the room bust open and a blazing, red bolt of light cut across Thale's vision. Several thumps followed and the red light flashed again and Thale felt fresh air explode into his face. The Faraday cage came apart and he gasped in breath. Sparks exploded before his eyes and when they cleared, he saw that Adoran and Enriquah stood before him. Enriquah held her twin bladed threshold staff in her hands and was beaming at Thale. \n\n\"Did they really think that'd work?\" she asked, laughing. \"A Faraday cage? Pfffttbbth!\" She waved her hand. \n\nThale, his hand going to his throat, continued to breathe heavily. His head pounded and his tongue felt thick and fat in his mouth. His lips were numb too. He blinked up at Quah, who waved her hand and flipped her hair dismissively. \"As if powers that reach across spacetime and make physics their bitch would be stopped by a bit of chicken coop and, what's this, nanomesh?\" She snorted. \"And it's not even top of the line-\" \n\n\"Quah,\" Adoran said, his arm having slid around Thale's shoulder, allowing Thale to rest his head on his shoulder. \n\n\"-honestly, I'm shocked they went subtech with their weapons. If they were this ignorant, I'm shocked they didn't come in power armor!\" Quah giggled and shook her head. \"What a bunch of useless assassins.\" \n\n\"Quah!\" Adoran said, louder now. \n\nEnriquah turned to face the two of them. She leaned forward, and seemed to finally register that Thale was still shivering and gasping quietly. \"...oh, right, suffocation is a little stressful,\" she said, nodding. \n\n\"Yes, Quah,\" Thale snarled. \"Being strangled to death is a little stressful.\" \n\nHe stood, slipping from Adoran's arms, but allowing his hand to find its way to the big prince's hand, squeezing him. Adoran stood, so that the two would keep holding hands as Thale stepped over to the pile of assassins. The one he'd hit with the clavegun was little more than a lower torso. Red matter was spread all across the upholstery and splashed onto the walls and even the ceiling. A single hand had been left intact, but its fingers had been forced apart so his comrade could get at the stubgun. The one Quah had sliced up had been left in nearly as many pieces, thanks to the monowire of a threshold blade's edge. \n\nBut the one Thale had stabbed was still intact. Enough that he was able to yank off the mask and glare into his eyes. He reached into the Imperial registry with his mind and skimmed through it \u2013 finding the man's name and identification number before the door opened and his 'royal' guard entered. They were Darkstar and Antaras \u2013 Thale had learned the names of every Alliance Marine that Meetra had entrusted to his direct command. Enriquah had outdone herself in inventing a fictitious records for each of the Alliance marines, records notable enough that their assignment to guard the Regent was not going to raise any eyebrows. \n\nThat was one advantage of the size of the Hegemonic military. New soldiers were hardly noticed. \n\nDarkstar kicked at one of the corpses, his power armor whirring softly. \"How the fuck did they get in here?\" \n\n\"That's what I want to know,\" Thale murmured. \"This man is posted to a ship on the Far Watch Fleet. The San Diego.\" He frowned, slightly. \n\n\"That's not a standard Hegemonic name,\" Antaras said, his face-plate hissing back to look Thale in the eyes. \"Where's it from?\" \n\nAdoran, his face set in a frown, spoke up first: \"It's a black ship. The Hegemony rechristens any ship that kills a planet with a name from a Home city that was destroyed. San Diego...that's one of the nuked ones, wasn't it?\" \n\n\"No, that's Hiroshima and Nagasaki,\" Quah said, her hair writhing. \"San Diego was hit by an antimatter bomb.\" \n\n\"Oh, well, I stand corrected,\" Adoran said, rolling his eyes. \n\nThale shook his head. \"This subtech equipment is Hegemonic black ops gear, for anti-Liminal duties. Most of this stuff isn't even mothballed. They must have fabbed it up special for them.\" He touched the chest plate. \"This armor has magnetic repulsors that are designed to disrupt a threshold blade.\" \n\nQuah whistled cheerfully as she started to twirl her staff around in her wrist. \n\n\"I never said they disrupted it well,\" Thale said, then stood. \"Lets call a council to talk about this.\" He looked back down at the corpses, then sighed. \"And...I think I'm going to start sleeping in the Liminal Knights barracks again, protocol be damned.\" \n\nAdoran grinned and let his eyes sparkle. Quah was considerably less restrained. She threw her arms into the air. \"Yippie!\" \n\n*** \n\nEver since the death of the Emperor and the destruction of his gene-bank, the Hegemony had been operating under the regency of Drak Thale. As the one of the sole survivors of the attack and a relatively famous Liminal Knight, the population of Eudaimonia had reacted the same way they would have if Emperor Rehoboam had simply been killed and replaced with his clone-son: By engaging in the week long mourning celebrations, then returning to their day jobs. The upper echelon had been trickier. Thale still remembered demonstrating his right to rule through the most expedient means possible during the first meeting with the admiralty. \n\nAdmiral Johnstone had demanded: \"By what right does this masked freak have to give us orders. We don't even know if he's human behind that mask!\" \n\nThale had stood. Walked around the table. \n\nThen thrown Admiral Johnstone through the smart-window, which had flashed into vapor on a single mental command. Johnstone had struck the slanted roof that led away from the meeting chambers to the three kilometer drop straight down to the foundry pits that ringed the admiralty tower. Thale had sprung onto the window sill and waved his hand \u2013 popping out a vent-vane out just in time for Johnstone to grab onto it with his fingernails. \n\nJohnstone had quickly pledged his fealty then and there. \n\nFascism had that one advantage. In the end, the protocol, the history, the pompous chest beating, the justifications and the rationals, all of it boiled down to one brutal fact: He who could, did. But Thale was not so foolish as to think he had won anything but a deferment of the coup \u2013 in effect, Johnstone had simply pushed it from his inept hands to someone on the admiralty who knew how to lie. Which was why Admiral Johnstone had, two weeks later, been replaced by the new up and coming Admiral Metara \u2013 who had a remarkable string of victories in her record and plenty of loyalty to the Regent. She had then ingratiated herself to several other Admirals, who showed a worrying disloyalty to the Regent. \n\nThose Admirals had been a mixture of people who believed, earnestly, in the Hegemonic party line of protecting humanity from the chaos and disorder of a Chain without guidance, and petty tyrants who wanted to grind anyone who wasn't blond and blue eyed under their heel. \n\nThe latter had been uniformly found guilty and sentenced to death. \n\nThe former? \n\nThe former were sitting around the meeting room table, with Admiral \"Metara\" at the head. Meetra grinned wryly at Thale. \"Did Lady Venn reach Home?\" \n\n\"Not yet,\" Thale said, his stomach knotting. He walked into the chambers flanked by Adoran and Enriquah. Enriquah was adjusting her skin colors with a thought, making her look like a poorly done visual effect. Thale took his seat at the table and rubbed his throat. \n\n\"What's wrong?\" Admiral Karak asked, his brow furrowing. He had, until Johnestone's unfortunate trip down an elevator shaft, been the youngest of the admirals, and was still the one who was most prone to speaking his mind. \n\n\"Several assassins from the Far Watch fleet tried to kill me tonight,\" Thale said, frowning slightly. \"They had subtech weapons and armor and what they believed would be a game winner: A Faraday cage.\" He shook his head, his tail lashing from side to side behind him \u2013 the only clue to his lingering nerves. \"But my question is how the hell they got to Eudamonia?\" \n\nMeetra tapped at the table, their fingers working at a furious rate. They whistled. \"Sixteen worldkillers, six of them being blackships. Why the hell did the Emperor post such a heavy force so far from anything of interest.\" \n\n\"They're three jumps from Home,\" Admiral Gi said, her voice stern and rough and slightly mechanical \u2013 her throat had been ripped out by a railgun slug that had clipped the man next to her in a battle. She had survived only be dint of being within several seconds of the medibay on her ship. \"I think the homeworld of the human race would be of interest.\" \n\n\"It's not,\" Meetra said, their voice flat. \"Home's ecology collapsed before the Domain even founded. Their heavy resources were mined, their ateroids were tapped. The Machines unwove their gas giants to make shellminds and computational cosmii. The only reason to go to Home is if you're a Liminal Knight walking the constellations.\" \n\n\"Well, see what one Liminal Knight has done for the alliance,\" Admiral Karak said. He looked at Thale. \"Did you find anything in the records about it, Regent Drak?\" \n\nThale sighed. \"I've had Quah investigating it.\" \n\nHe'd wanted to tear apart the Imperial databanks until he found the dark secrets and hidden truths of the Hegemony. But enacting a stealth coup of the largest empire on the Chain, even with the assistance of the entire Alliance of Free Worlds, was a heavy task. He had been spending days in speeches, meetings, using kinesthetic feedback to spot liars and traitors, observing citizens through the surveillance networks of the planet spanning city of Eudaimonia, putting out orders that would take the pressure off worlds that the Hegemony was in the midst of devastating. To keep up appearances, he had needed to don his mask and his gloves dozens of times and ride a agrav-chariot through the streets of the city, so the people could see their Regent and marvel at his black uniform and flowing cape. \n\nEvery time he came home, he felt dirty and longed for Venn to be there, to hold him and stroke his ears. \n\nQuah stepped forward. \"The only references I've found to Home and the Machines are oblique references to a prophecy that founded the Hegemony. But that prophecy itself hasn't been written in any of the records I've been able to find. And I've found a lot of records.\" She shuddered. \"You don't even want to know what Emperor Daniel Babylon Xerxes got up to in his free time.\" She waited exactly zero seconds for anyone to prompt her before blurting out: \"He fucked his own clones! \n\n\"Well...\" Admiral Gi said, her mechanical voice whirring and warbling as she cleared her throat. \"Consenting adults, ah-\" \n\n\"Fresh from the tanks,\" Quah said, her voice dripping with melodramatic horror. \n\nAdmiral Gi sighed, loudly. \n\n\"Quah,\" Thale said, his voice soft. \n\n\"What?\" Quah blinked. \"Oh. Right. Anywho, there have been several prophecies that were written down, but all of them came from after the founding of the Hegemony and referred to a string of military disasters that were narrowly averted.\" She smiled. \"Without the information provided in the first prophecy, the Hegemony would have been shattered by the Republique in one of their first battles.\" She giggled. \"Once you strip away the dross and the propaganda, the...early victories of the Hegemony relied more on luck than our innate prowess. Rather than being a lean, relentless march towards inevitable victory, the early Hegemony bumbled a lot. For example, the Battle of the Three Singularities? Totally botched the follow-through because political infighting meant that the admiral of the gold fleet didn't send their remass tankers to the worldkillers in the engagement, so four were dragged into black holes!\" She giggled. \"And that was the worst defeat the Republique handed the Hegemony that year, and that was in a battle where every Republique ship was shot down after two days of fighting!\" She shook her head. \"What kind of boneheaded moron does that?\" \n\nThe admirals pursed their lips. For some obscure reason, they didn't look particularly pleased to see Quah giggling over the deaths of thousands of Hegemonic naval officers. \n\n\"Anywho!\" Quah said, oblivious. \"Those prophecies started to dry up after the Hegemony got real momentum. That seems pretty interesting, don'tcha think?\" \n\n\"Why?\" Gi asked, her voice sounding even more dour. \n\n\"Simple: There's no such thing as a prophecy,\" Quah said, her hands on her hips. \"Nothing, not even a Machine, can predict the future.\" \n\nMeetra cocked their head. \"They're essentially gods, Lady Enriquah-\" \n\n\"Oh!\" Quah's hair flared up, the tips wriggling. \"Say that again!\" She pointed at Meetra. Meetra frowned. \n\n\"They're essentially gods?\" They said, clearly wondering where Quah was going with this. \n\n\"No, no, the other part!\" Quah said. \"Lady Enriquah, I love that-\" \n\n\"Quah!\" Thale snapped, his ears pinning back and a snarling growl creeping into his voice. \n\n\"Oh, right!\" Quah blushed. \"Basically, any and all true prophecies would require you to have perfectly modeled every single thing in the universe accurately. That means you'd need to essentially simulate the entire universe down to the last atom, the last quark, the last vein of Lord Drak's impressively huge cock!\" She spread her arms wide. \"That computational power is beyond even the capacities of the vaunted Machines.\" \n\nThale's cheeks heated. Admiral Karak tried to cover his face with his hand. Several other Admirals were less subtle. Admiral Gi slowly cocked her head, her thoughtful expression pulled into a horror-show by her ragged scars. Meetra shook her head. \"They're Machines. They've had millenni to advance their technologies.\" \n\n\"Even if every single atom of a computational system was capable of doing calculations, you'd need a mass equivilent to the universe to calculate them and, I guarantee you, the Machines do not have a second universe hanging around. We'd have noticed.\" Quah grinned. \"Also, computational speed slows down when you have your computronium atoms being smashed by radiation \u2013 meaning the machines would need to be in quiet places \u2013 the space between galaxies, effectively. Since they'd need the same mass as the universe, they'd run out of room!\" She spread her arms. \"And you know what this means, right?\" \n\nBlank stares from the admiralty. \n\nQuah frowned. \"Come on, it's obvious!\" \n\nThale sighed. \"Spell it out, Lady Enriquah,\" he said. The tone of his voice made Adoran grin and Quah gasped with joy. \n\n\"They weren't prophecies!\" Quah said. \"They were spying. Simulating the future is impossible \u2013 but hacking into fleet computers and astrogation systems is piss easy. Literally, I work harder to wet the recycbowl than a Machine would need to pluck the Republique's war plans out of their comptech and chuck it at a Hegemonic Knight in the form of a wobbly wobbly dreamy woop de shoop!\" She wriggled her arms dramatically. \n\n\"Sire, is she just making up words now?\" Ki rasped. \n\n\"Yes, but the point stands,\" Thale said, frowning. \"Why the hell would the Machines do that?\" \n\n\"I dunno,\" Quah said, shrugging. \"But it's kinda neat, huh?\" \n\n\"While this is fascinating,\" Meetra said. \"It doesn't help us with determining how the assassins got here, nor why they're going after you.\" \n\nThale's tongue slid along his lips. A suspicion started to form in his gut \u2013 something deeper and darker than he wanted to think about. And so, he gently put it into the back of his mind, to worry about later. He looked back at Meetra, nodding. \"The how matters less than the where. Sixteen worldkillers isn't a lot compared to the overall forces we have. But it is significant in its concentration. Most planetary systems have a single worldkiller \u2013 even with warnings sent by QE coms, they're all strung out. That means that the commander of that fleet could begin to roll up the Hegemony directly. They only need to take several of the most potent worlds on that end of the Chain to have a power base.\" \n\n\"In which case we trade the small civil war for a big one,\" Admiral Karak whispered. \n\n\"With both sides being space fash!\" Quah said, helpfully. \n\n\"We're not-\" Admiral Karak bit back the words he had been about to say. He shook his head. \"We are no longer fighting for the false ideology of the Hegemony. Everyone is here because we believe in protecting humanity from chaos. From collapse.\" He sighed, his jaw so tight with stress that Thale could see the jumping muscle in his cheek. \"We...\" He sighed. ",
        "\"There will be an accounting for what the Hegemony has done and continues to do,\" Meetra said. \"But we don't have time for trials or for recrimination. We need to destroy this fleet. Who is their commander?\" \n\nThale sighed. \"That's where things get complicated.\" He lifted his chin. \"Lord Vorsoth.\" \n\nThe dead silence that followed that was felt entirely around the table. Even Enriquah was stunned into silence. Then she slammed her fists onto the table. \"I knew it would work! I knew it I knew it that low down cheating lying scum sucking son of a bitch!\" \n\nAdmiral Karak, who was nearest to her fists, started and jerked back in his chair. \"Lady Enriquah?\" Meetra asked. \n\n\"I once had this idea of implanting a Q-Bit canister into my chest nervelinked to my spine, so it could egocast my brain to a backup body if I ever died and Lord Vorsoth put me through the Grinder as punishment for suggesting something so completely ridiculous!\" Quah put her hands on her hips, scowling slightly. \"And now it turns out he did it. Unbelievable!\" \n\n\"Th...The Grinder?\" Admiral Ki asked, her eyes widening. \n\n\"Oh, it's a Liminal Knight thing,\" Quah said, flipping one of her ponytails dismissively. Then, grumbling under her breath. \"Fucker made me run it six times when it was too easy for me, fucking jerk.\" \n\n\"This means we'll need a Liminal Knight with the fleet,\" Meetra said. \"We could send twice as many ships after him and he'll still win if there's no Knight with them.\" \n\n\"It'd be best with two to three Liminal Knights, so they can pool their powers and best him. Lord Vorsoth is one of the oldest, and one of the most powerful,\" Quah said. \"Yeah. Two to three Liminal Knights...who all get to live together in a room with a really biiiig bed on the flagship. That's the only way to be sure.\" \n\nMeetra smiled. \n\nThale put his hands over his face and sighed. \n\nAnd hid his larger smile. \n\n*** \n\nThale slept aboard his flagship. In a fit of irony, he had it quietly rechristened to the Victrix Republiqua. To the Hegemony writ large, it was still known as the Devastator. It was one of the newest worldkillers to emerge from the rivers of mana and the foundries of Eudaimonia, and over the past few months of the Quiet Coup, Meetra had used the Alliance's capacity to move troops around the Chain without needing starships to staff her with Alliance navy personal. To go from the scrap built railgun ships and the bulbous missile skiffs of the Alliance to the most advanced worldkiller ever designed left the crew hurrying in a sweaty, panicky, jubilant mess. Thale had seen it on their faces \u2013 a mixture of 'oh fuck, what the fuck am I doing' and 'oh my god, this ship is amazing.' \n\nThe other ships were merely captained by Alliance captains \u2013 a mixture of Hegemonic navy who had been quietly talked to by their Alliance admirals and Alliance navy captains who had been brought in using the Quantum Forge. \n\nIn effect, the fleet was an Alliance fleet. \n\nAnd thus, Thale dreamed peacefully on the bed. \n\nHe walked through the forest, naked and smiling, and came to the pool. Beside it, Venn stood. Naked. Beautiful. Freckled. Her furious glower and the grumpy way that she had crossed her arms over her chest only made her more pretty. Thale ran forward \u2013 and when she saw him, her eyes brightened. \"Thale!\" She cried out, then flung her arms around him. Her lithe body pressed against him and Thale allowed himself to be dragged down. Their lips locked and her tongue thrust into his mouth, warm and hot and oh so very eager. His hands slipped along her back as he laid beneath her, and felt like he could stay in this dream for an eternity. Venn broke the kiss, panting heavily, her eyes hooded. \"I was so worried, were you okay? Vorsoth said he was sending-\" \n\n\"I woke up just in time,\" Thale murmured. \n\n\"I helped!\" \n\nVenn lifted her head, while Thale rolled his head backwards. This gave him the somewhat alarming view of Enriquah cartwheeling into the clearing, her body completely naked. She came to a stop right above him, her legs spread, her hands on her hips. Thale could look past Venn and right up Enriquah's legs to her sex. Enriquah beamed down at him. \"So, this is where you've been going?\" She asked, cocking her head. \n\nThale chuckled, softly. \n\nVenn blushed. \"How did you get here?\" She asked, then frowned. \"This...is real?\" \n\nThale blinked. \"What?\" \n\nVenn was serious. She grabbed onto him. \"Thale, that's you?\" \n\nOne second, she was there. \n\nThe next, she was not. \n\nThale sat up, his eyes widening. \"V-Venn?\" he asked. Enriquah knelt beside him, her hand on his shoulder. Adoran emerged from the brush a moment later, jerking his leg free of a small bramble. His brow furrowed as he hurried over to where Thale sat, his ears pinned back against his head. Adoran squeezed his other shoulder. \n\n\"What was that about?\" Quah whispered. \n\nThale frowned. \n\nHe dreamed every night \u2013 joined by Adoran and Enriquah \u2013 on the furious burn from Eudaimonia to the edge of the Chain. The fleet grew with each stop, picking up new ships from staging posts, called to the banner, convinced by the word that they were on their way to crush an insurrection. They were supported every step of the way by the impressive Hegemonic logistic train, and Thale tried to take comfort in the fact that this emergency mustering had ended several planetary invasions and left a few worlds barely occupied. \n\nInstead... \n\nInstead he worried. \n\nAs every night, Venn failed to return. \n\n*** \n\nA FEW DAYS AGO \n\nI looked through the smoking hole that my clavegun had blown in the wall of the spaceport on We Made It. Beyond the spaceport was Wotan Hohmann's nice little cottage \u2013 and on Wotan Hohmann's nice little cottage was Wotan Hohmann's himself. Herself. Whateverself. Wotan gaped at me. She flung out her arms, her robes sagging to her sides. \n\n\"That...wall was over sixty five thousand years old!\" She said. \n\n\"Yup,\" I said, walking past the clavegun. \n\n\"You just blew holes in it!\" Wotan said. \n\n\"Yuuuuuup,\" I said. \n\nWotan shook her head. Her mouth opened, then closed, then opened again. Finally, she settled on: \"Well. Come in, then.\" \n\nIN \n\nThe interior of Wotan's house wasn't as homey or cluttered as I thought. Despite being made of wood and planks and thatch, it looked as if it had come fresh off a printer. There was no dust, no worn down marks, no smudges, no scrapes. There wasn't even furniture, beyond a simple stove that Wotan started to use, bustling up a tea pot and filling it with water from a metal faucet that whirred and hissed as it sprayed out forthy water. I looked around the house. \n\n\"Sorry about the lack of decorations,\" Wotan said. \"The 'chines make it for me while I'm decelerating. Usually, it takes them a few weeks to cut down all the wood, forge the metal, make the pipes. Even with the old foundation.\" \n\nMy brow furrowed. \"They don't...fab it? Using mana?\" \n\n\"No, no,\" Wotan said. \"All the nanotech on this planet is controlled by the Custodias. He, heh, he was given a single order: Maintain We Made It. And so, he maintains it.\" She shook her head. \"My 'chines need to do things the prehistoric way.\" \n\n\"And you only come back every few...\" I paused. \"Years?\" \n\n\"Subjectively, months,\" Wotan said, turning to face me as the kettle started to shine \u2013 flames flickering underneath it. \"From my perspective, that is. It's decades from the perspective of the house.\" She sighed, slowly. \"I load up my ship with volatiles, raw materials, biomass, fissiles...\" She shrugged a bit and pursed her lips. \"Then head out into the dark for another slow circuit of We Made It's nearest celestial neighbor for another few years.\" \n\nI gaped at her. Excitement bubbled in my guts. Wotan Hohmann had been spending her lifetime between the fall of the Republique and today sailing as close to the edge of lightspeed as you could get with engines and rockets. I'd heard from Mal that if you got that fast, time itself started to distort. To twist. To mold like putty. The seconds stretch, and what seems like a few days on a ship that fast could be years back at slowpoke home. And there was only one reason, only one possible reason why Wotan could have been doing that. \n\n\"Y-You've been waiting...\" I whispered. \n\nWotan raised her eyebrows. \n\n\"For me,\" I breathed. \n\nPROPHECY \n\nIt all made sense. \n\nI was the orphan child from Stumble. Found at the machine temple. Told of by the Hegemonic Knights. Wanted by the Emperor himself, for his own mysterious and murky goals. The Machines had guided me my whole life...and I hadn't known it. They had guided me to Wotan's blade and guided me to Wotan him...er...herself. \n\nAll of it had been leading to this moment. \n\nWotan snorted. \"Nope.\" \n\nWHAT? \n\n\"What?\" I asked. \n\n\"No,\" Wotan said. \"Not even close.\" \n\n\"...what?\" I asked again. \n\nWotan sighed. \"I'm sorry...\" She said. \"I'm so sorry, Venn. But this isn't going to go the way you think.\" \n\nCOLD TRUTH \n\nWotan handed me my cup of tea. I drank it as Wotan spoke. Her voice was a soft, raspy one \u2013 and it was instantly captivating. \"I didn't transition because I felt like a woman, Venn. I transitioned for the same reason I sail the universe at luminal velocity \u2013 to escape. To get away. To be free.\" She looked right at me. \"Because I saw it. I saw the truth after the Republique was burning, after I fled to Home, after I begged the Machines to explain why I had failed. Why my secret plans were found out, why my spies were hunted and turned, why my students turned against me, why my friends died.\" Her eyes flashed. \"And I learned the truth. And ever since then I have tried to forget it.\" \n\nShe set her cup down. \n\nAnd she told me the story. \n\nTHE DOMAIN \n\n\"When humanity lived beneath the Domain, we did not live in a civilization of our own making. We were ants, picking through the picnic of the gods, and multiplying. That's the difference between us and them, Venn. We are ants. They are gods. And the Domain was their ant farm. They let us live there and they fed us because it was easy and there was no reason not to. And so, we prospered. We dug tunnels \u2013 we settled worlds. WE built our fleets. And...we thought we were so very great. We thought it could go on forever.\" \n\n\"The Domain did not merely expand. It exploded across the Chain, settling worlds that were only barely habitable and thinking that we could tame them. We colonized worlds that were tidally locked and used Machine technology to get them spinning again. We settled the upper atmospheres of gas giants in cities suspended on Machine agrav engines. We built cities on stars, Venn. And our population soared, for the universe was filled with wonders and every human that was born to see it was a celebration...\" \n\nA long sigh. \n\n\"But then the owners of the house moved. The Machines had outgrown their home. Literally \u2013 Home is simply too warm for their deepest thoughts. They were plateaued in their growth and the only way they could expand would be to travel to the darkest, coldest parts of the universe, to think their deep thoughts, to grow their intellects, to...be. And so, they examined their ant farm and saw that there were so many ants. So. So many ants. And they knew that if they stopped giving us food and throwing us scraps, that not every ant would live...but enough would.\" \n\n\"Enough.\" \n\n\"And so...without malice...they left. Yes. Some ants would die sooner rather than later. But they would have died at some point anyway. Human immortality had always been a trifling joke compared to the Machines' lifespan. To a being that expects to keep calculating when the last atom has decayed and the final black hole has dispersed into the quantum winds, a few thousand years is less than fraction of a fraction of a blink of an eye.\" \n\nCOLLAPSE \n\n\"The Collapse wasn't as terrible as you think it is. I can see it in your eyes. You're picturing those sun-cities, consumed in flames. Those marginal worlds immediately crashing.\" A short snort. \"Give your species some credit. The greatest miracles were maintained, carefully. They were even replicated. Marginal worlds were tended by the greatest societies of an age \u2013 groups that would be legends, if our species had any fucking dignity and gave respect to keepers of life, as they gave to deathbringers.\" \n\n\"But humans die. They age. They, inevitably, make mistakes. An industrial accent here. A less than genius elected official there. A decision to look at the short term rather than the long, piling up into that classic pattern of quick fixes, overlooked consequences, scarcity driven economic modeling, uncontrolled growth, desperate lashing. As the oceans filled with plastic and the nano was locked behind ghoulish enforced scarcity, the oligarchs and the militarists who had taken over turned their eyes on one another.\" \n\n\"The wars that came weren't in every part of the Chain. Only in enough. Ships were fitted with weapons for the first time in human history, and they were used in anger. Worlds burned. Miracles were destroyed so that they could be saved. The Collapse picked up speed...and then the final indignity came.\" \n\nShe gestured, slowly, to herself. \n\n\"The Liminal Knights.\" \n\nKNIGHTHOOD \n\n\"Across the Chain came people who could make the ancient miracles dance. They crafted threshold blades and they each had such glorious visions. Worlds were saved by the righteous, and worlds were damned by the wicked. And when the Knights stood like colossi, they brought the war back...with style. It was constrained before by logic, by rationality, by the inherent lessening of the world. But with the Knights at the head, with the Machines whispering in their minds, the war lost all sense of rationality, of restraint. The Chain burned, Venn of Stumble. It burned and billions died.\" \n\n\"And from this maelstrom came the Hegemony. And from the Hegemony came me. And when I saw the madness of my...\" A long pause. \"My friend...\" Her eyes closed. Her head ducked forward. \"The Chain burned again \u2013 guttering, fitful burning. Worlds were glassed before my eyes. Students cut down. Friends crucified. I...\" Her head shook. \"And I came to Home and I found that the Machines...hadn't returned.\" \n\n\"They were still out, beyond the rim, thinking their deep thoughts.\" \n\n\"The Liminal Knights were created by a Machine. A single mind. With a single goal. And when I learned that goal, I found the only way I could ever be free of their contact \u2013 by changing the rate of time itself. Only by going that fast can I escape.\" \n\nWHY \n\nI looked at Wotan. My gut felt empty. My hands shook. Wotan's eyes shone. \"What...what was it?\" I stepped forward, the cup in my hands forgotten. \"What is the goal? Why are you running? Why?\" \n\n\"The singular goal...\" Wotan breathed in. \"Is...to have fun.\" \n\nThe words landed like sledge weights. \n\n\"You're lying,\" I whispered. \n\nMemory. Flash. The comptech in the center of Masque Macabre \u2013 a single device, dedicated to playing a game, a game that had been forgotten, a game that had become the life of a million souls. \n\nWotan closed her eyes. \"The Hegemony was constructed to be your paper tiger, Venn. There's no prophecy. No threat. No point beyond a godlike child that wants to see spaceships explode and people fight each other with laser swords. That's it. That's the point. That's why you're here. That's the whole reason behind everything.\" \n\n\"You're lying,\" I hissed. Wotan blurred. The lights of the cabin shone and grew long and crystalline through a haze of tears. \n\n\"Let me guess,\" her raspy, bitter voice continued. \"You love someone dearly. An enemy, drawn to you by secret messages or some connection you can't quite explain. A love that comes from nowhere rational \u2013 it's not born from any real interactions, it's hormones, tweaked by a Machine that wants to see the ants fuck-\" \n\n\"You're lying!\" I screamed and threw the cup at her. Wotan batted it away. \n\nFLIGHT \n\nThen foliage, slapping at my face. Lungs burning. Through the hole in the wall. My feet slammed on the flat white surface of the spaceport. My lungs burned more as choking, rattling sobs roared through me. I ran for my ship \u2013 and saw that it was still being repaired. I screamed, furious. My hands clenched and I heard a distant voice calling after me. \"Venn! Venn!\" I turned, my hands trembling. Wotan wasn't visible \u2013 but her voice came to me through the hole in the wall. \n\nMy eyes, blurring with tears, fell on the needle like ship that Wotan had used. \n\nThe door opened and the tongue of silvery metal that led into the guts. I sprinted forward. \n\n\"Venn! Wait!\" Wotan bellowed. \n\nThe door closed behind me. The ship wrapped me \u2013 cables and tubes. There was a snick of awareness and then suddenly, I was seeing through eyes more clear than mine, hearing with ears far more sensitive than anything I'd ever had. I was looking through the ship, down at my silvery body. Wotan held up their hand. \n\nThe rockets kicked on and I flew \u2013 running as far and as fast as I could. \n\nHOME \n\nI didn't think a coherent thought again for what felt like an eternity. My body was the ship, and the ship knew what it was doing. It flew as automatically as I breathed \u2013 and it angled towards the ruddy red sphere that was We Made It's primary star. It cut through space faster and smoother than any ship I had ever flown on. Faster, even, than the Tiamat II. And as it flew, the words that Wotan Hohmann had said went around and around and around in my head. \n\nHormones. Tweaked hormones. \n\nAnd those words echoed as I remembered the first, breathtaking time I had seen Thale. Naked and shy. Gentle and quiet. Dangerously feral, but with a warmth that...made me ache. The prickling feeling on my lips as I imagined kissing my way along his scars. \n\nFake? \n\nFake!? \n\nNo. No. I shook my head inside of my ship-body, and I tried to push the thoughts away. But they remained, circling around my head, as my ship-body dove into the brilliant heat of the red star. When my ship body emerged, it came to Home. Through my new eyes, I could see the solar system I had walked so far for. It had only three planets. The first was a small, dense world that gleamed like a polished gemstone \u2013 my eyes saw kilometer after kilometer of polished, faceted glass and silicone completely covering the sunside of the tidally locked world. The world itself was on a strange elliptic orbit and as we flew past, I could see why: one side of the planet was covered in massive emitters, which glowed nearly as bright as the sunside of the world. Immense amounts of energy flowed from those emitters, aimed at the third world of the system. \n\nA laser was a piss poor engine. But the sheer number of lasers and the vast length of time they had been firing had produced a gently alteration to the orbit, one that would grow more and more pronounced as the eons ground by. \n\nThe second world was a primeval world of greenery and oceans, beneath a gentle atmosphere. A pair of massive, artificial moons orbited it \u2013 their bodies as cold and as dead as natural moons. But their superstructure and the fanciful shapes \u2013 crescent shaped, with smiling men many hundreds of kilometers in height - showed their human origins. I didn't hear a single radio whisper from the world. It teemed with life...but the life did not speak to the stars. \n\nThe third world... \n\nWas Home. ",
        "The gut feel...I cannot... \n\nDescribing it almost felt insulting. \n\nIt was Home. \n\nThere were the five continents, their coastlines as perfectly etched as the legends said. The great savannas of the northern continent. The desert that wedged itself against the sea of seas \u2013 where our earliest civilizations had been born from. The jungles of the south, the titanic reef-continent serving as barrier between two seas. The single moon of silvery white dust and deep, black shadows, looming overhead. \n\nThere were no scars. No signs of nuclear bombardment or climatologic collapse. The world was preserved, as if in amber. \n\nBut I had no idea where the fuck the power beaming from the first world was being sent. \n\nNor where the rest of the Home system had vanished to. The great worlds that Mal had spoken of \u2013 ringed Cronus and the burly Jove \u2013 were as gone as if they had never been. \n\nA single radio transmitter pinged my ship-body. \n\nIt was nestled in a natural harbor on the western edge of the northwest continent, near the largest ocean. It was the last bit of land before that vast, vast ocean, until the distant shores of another island chain, nearly half a world away. I flew towards this radio transmitter, my thoughts growing more and more focused as I landed. \n\nI was going to find the truth. \n\n \n\nWHERE CHRIST WAS BORN \n\nMy ship body settled down in the ruins of a city, maybe fifty miles or so from the coast. \n\nWell. \n\nIt wasn't quite a city. The buildings were low. Most of them were single or double stories, set in once tidy lawns, along roads that had crumbled into a fine powder. My ship body extended its legs and settled down with a whirr and a hiss. When I stepped off the gangplank, I breathed in air that felt ancient. The city surrounding me looked as if it had been left to rot...but...it was still here. Vines crawled along dusty walls, but countless roofs remained standing. Despite a complete lack of human voices or clicking robots, the whole world looked like it had only been abandoned a few months ago. \n\nNot... \n\nI shook my head slowly, then drew my threshold blade. My shoes crunched on the gravel and I lifted my cybernetic hand, frowning as my wrist emitter projected a map that showed where the transmission was coming from. I hadn't landed directly by it \u2013 simply because I wanted time to get used to my legs again. I walked and started to get the hang of it again pretty quick. My jaw clenched taut and I felt my spine tingling as the sound of my footsteps bounced off the walls of the buildings around me. \n\nI was walking through a monument. A vine draped memorial. \n\nGoosebumps. \n\nIt took me about ten minutes before I came around the bend of one of the dead streets and saw the source of the radio transmission. It was, at last, a building bigger than a house or a smallish shop: A huge, circular structure that looked almost a kilometer wide from where I stood. It was many stories tall and had hundreds of glittering windows and was surrounded by an acre of gravel and broken asphalt. Some plants grew along the sides -vines creeping up windows, flowers growing through the cracks in the pavement, long untended planters gone completely to chaos. I whistled as I looked at the immense structure, the piercing note lost in the vast silences of a dead world. \n\nAnd it was dead. There were no animals. I didn't see any cats or dogs, I didn't hear buzzing insects. There were plants, the dead air, and the silence. \n\nI came up to the building. \n\nAnd recognition hit me like a wet brick. \n\nI'd seen this place before. \n\nI'd seen the illustration. \n\nChrist and the Cryptographers. \n\nChrist, furious, chasing the suited figures from her temple. This was it. \n\nThis was her Temple. \n\n\"Jesus Christ,\" I breathed. \n\nTHE APPLE \n\nThe front doors were glass. They didn't open when I stepped up to them. I thought, for a moment, of smashing through. Instead, I gently took hold of the bars that someone had affixed to the front and tried pushing and shimmying. The hinges squealed in protest and I walked into the foyer. There was a long rusted and dust covered desk to my left, which looked like it had once served as...what? A greeting place for those entering the temple? A place to leave offerings. There were seats behind it. For priests? Servants? \n\nI didn't know. Other chairs were set here and there, but not in the organized, pew-like structures I was used to seeing in Machine Cult temples. A large apple tree had pushed up through the floorboards, rich with bright red apples \u2013 dozens of them were scattered on the ground, slowly rotting. I walked past the pungent metaphor and started to walk down the corridor that lined the center of the circular temple. The sounds of my footfalls continued to echo in my ears \u2013 until, at last, I came to a doorway that looked...different. \n\nUnlike the decayed memory of humanity, this doorway that blocked my path was silvery and flowed like water as I approached it. There was no control interface, only a haze of mana shrouding the air. My palms tingled as I reached out towards it \u2013 and I knew it was an artifact of the Machines. Or a Machine. \n\nI focused. \n\nAnd I knocked. \n\nTHE VOICE \n\nThe door opened to reveal a large dark room. It was circular and had several dozen glass panes set in narrow platforms. The panes were nearly as high as I was, and when I walked past them, I swore I caught a glimmer of light inside of them. I stopped and glared right at one of the panes. Then, I blinked...because another me looked right back out. \n\nThe other Venn smiled at me and waved. \"Hey Venn,\" she said. \n\nAnd somehow...I knew that voice. Despite never hearing it before. \n\nIt was my voice. \n\nIt was the voiceless voice that had whispered facts into my head. That had reached out and made miracles happen when I wished for them. The other Venn bowed. My Machine bowed. They flung out their arm. \n\n\"You made it, Venn. You did it. You...are a Liminal Knight.\" \n\nMy throat tightened. \n\nEach pane flickered to life. Venn after Venn after Venn appeared \u2013 dozens. Hundreds. The panes were spaced irregularly, some ahead of me, some behind. Some mirrored my movements and others didn't quite \u2013 it made me feel as if my identity had been subsumed into the moment. My stomach flipped as the reflection before me stood. \n\nThey smiled. \"I'm so proud of you.\" \n\nANSWERS \n\nIt took me a shocking amount of time to get my throat to work again. \"Hey,\" I said. \n\nThe other mes giggled \u2013 and echoing, overlapping, eerie sound. \n\nI shook my head. \n\nIt felt like the most difficult thing in my life to ask the next question. I clenched my hands and forced it out. \"Is it true?\" I whispered. \n\n\"Is what true?\" the other me asked. Her hands clenched, a mirror of mine \u2013 slightly delayed. Behind me, the other mes clenched their hands as well \u2013 a rippling pattern. I felt unsure as to where I stood. \n\n\"You fucking know what I mean,\" I said, my voice a growl. \"Is it true.\" \n\nThe other me smiled, slowly. \"Yes.\" \n\nHOLLOW \n\nI didn't have tears to shed. \n\n\"Why?\" I breathed. \n\nThe other me giggled. It was echoed by each pane. Rippling. \"Because it's fun!\" \n\nMy threshold blade leaped into my fingers and roared to life. I slashed out and cut the pane in half. It sparked and shattered as the halves struck the ground. I screamed in pure rage \u2013 in pure desperation, in pure sorrow. The giggling continued, and the next pane ahead me still had me \u2013 my face lit by a smile that wasn't mine, eyes glittering with amusement. And that voice kept speaking, overlapping and echoing with one another. \n\n\"Because it's fun! Because it's fun! It's fun! It's fun!\" \n\nGlass crunched under my feet and I brought my threshold blade down again, stepping past another pane, and another, and another. \n\n\"Fun!\" Giggle giggle. \n\nShatter. \n\n\"Fun!\" \n\nShatter. \n\n\"Fun!\" \n\nShatter. \n\n\"Because it's fun!\" another pane laughed in my face. Laughed at the suffering of how many billions of people? Laughed at the ants. I grabbed the pane with my bare hands and screamed again, hurling it to the ground. I threw my threshold blade into the wall \u2013 where it stuck. The laughing continued as I fell to my knees and cupped my head in my hands. \n\nCOMFORT \n\nI don't know how long I sat there. I don't know how long the blackness lasted. I know it ended when a hand touched my shoulder and my own voice spoke to me. It was soft and crooning. \"There there, Venn...\" my voice whispered. I looked up and through tears, I could see the other me. She was no longer contained in the pane \u2013 but she glowed with an inner light. Her skin was golden and her hair shimmered with crystalline perfection. Her voice echoed faintly as she spoke. \"You're looking at this the wrong way. I didn't steal anything from you...\" She knelt down. \"Think of what you'd be without me...\" \n\nShe caressed my cheek. \"You'd be a non-entity. A singular statistic, a blip on the modeling pattern of a planet that has stabilized itself into living death. You'd be born, educated on history that doesn't matter and hasn't changed for a thousand thousand years, and you'd live out a pitiful thousand years...doing what? Playing some new vid game? Meeting a male or two as boring as you? Dying, when the ennui of paradise hit you?\" She caressed my hair, slowly. \n\n\"Instead...you're Venn of Stumble. Liminal Knight. Hero of a fallen age, fighting a resurgent evil, poised to bring about another golden age of the Chain, with your true love by your side,\" she smiled at me. \"And Thale and your children will live to see the next dark age, to fight the next villainy. Another sweep of history. Another spree of legends. And they'll remember your name as you remember Wotan Hohmann.\" \n\nI gaped at her. \n\n\"Do...you...think I'm a fucking child?\" I whispered. \n\nCONFRONTATION \n\n\"What?\" The Machine asked. \n\nI stood. \"I don't care if my life is boring or exciting. I don't care if it's long or short!\" I said, furiously, my cheeks heated. \"What I care is that it is mine!\" I shoved the glowing figure. She took a step backwards. \"What I care about is that all their lives are theirs!\" I threw my hand to the side, gesturing outwards. \"How many people have died so you can have your little story? How many people?\" \n\nThe Machine blinked at me. \"But you don't know them...\" \n\n\"I don't care if they're all the biggest assholes in the fucking Chain!\" I screamed, grabbing onto my threshold blade. I spun it on my wrist, then grabbed onto I. \"I don't care if they're boring...of if...they're the most interesting lives to have ever lived.\" I trembled, my arms straining. My blade quivered and I snarled, grabbing onto my talent. I knew it was a falsehood. It had been given to me by a capricious child. \n\nBut it seemed too stunned to realize what I was doing until I had done it. \n\nMy threshold blade snapped in half, severing itself with a hissing flare of out of control mana \u2013 nanites combusting in their self destruct pattern, creating a sudden wave of heat and fury. I threw the two halves in both directions, screaming in fury and defiance. They skittered along the floor \u2013 glowing brilliantly within the dark room. I panted, glaring at the Machine. \n\n\"Get the fuck out of my soul,\" I snarled. \n\n\"No,\" the Machine said. \n\nI grabbed a chunk of glass off the ground. The edges bit into my palm as I pressed the jagged tip to my throat, my eyes blazing. \n\n\"No!\" The Machine reached out. I felt a wash of fear and disgust filling me \u2013 a deep, existential horror blooming in my gut. I knew, to the very core of my being, that there was nothing after this moment. There was no afterlife. No happy place I'd go to. Nothing but nothing. The Machine was trying to use every hormonal trick it could on me \u2013 to convince me to not do it. \n\n\"Get out,\" I hissed. \"If I'm not me...I'd rather be nothing.\" \n\nOur eyes met. \n\nThe Machine, using my eyes, remained perfectly still. \"I know you won't do it,\" they whispered. \n\n\"No. You don't,\" I murmured. \"If you knew what we'd do, with perfect certainty, you'd have gotten fucking bored with this already, wouldn't you?\" I grinned. \"That's the rub. You don't actually know if I would follow through.\" I drew the glass back, readying to plunge it in. \n\nOur eyes locked. \n\nThe Machine blinked. \n\nLACK \n\n\"Okay!\" The Machine stepped backwards. \n\nAnd... \n\nThey were gone. \n\nThe feeling of being without a Machine struck me deeper than I had ever thought possible. Everything in the world felt...dimmer. More distant. My nerves felt less alive. The air tasted less pure. It was a gut wrenching, horrible feeling. My stomach twisted and I closed my eyes. My tongue tasted bitter against the roof of my own mouth. But I turned and walked from the room anyway, my back held straight. \n\nI walked out of the Temple. \n\n\"It isn't even a fucking pyramid,\" I muttered as I emerged from the glass door, glaring back at it. \"I'll have to tell everyone that.\" \n\nThe dead world had been bleakly beautiful before. But a color, an essential spark of light, had seemed to fled the whole scene. Now? The ruined buildings and the vines and the flowers simply looked bleak and sad. Dour. Pointless. I came to my silvery ship...and blinked. Because parked next to it was the Tiamat II. And standing before it was Wotan Hohmann. She looked at me, frowning slightly. \n\n\"Venn,\" she said. \n\n\"You were right,\" I whispered. \n\nWotan nodded. Her brow furrowed. \"Where's your-\" \n\n\"I broke it,\" I whispered, my voice jagged. \"I...I broke your sword.\" \n\n\"That...that wasn't my sword,\" Wotan said, her voice bitter. \"The Machine just loaded my programs into an unrelated threshold blade that you happened to find. They're nanotech weapons, replacing one is not hard if you have the code.\" \n\n\"Oh,\" I said, my voice hollow. \n\nLAUNCH \n\nWotan and I sat in the Tiamat II as she took off. \"I followed after once the ship was fixed,\" Wotan said, frowning slightly. \n\n\"You said it'd take weeks,\" I said, surly. \n\n\"I said it'd take weeks for the 'chines to do it,\" Wotan said, shrugging slightly. \"When I'm below ninety percent of C, I'm still a Liminal Knight. I coaxed the caretaker mana to fixing the ship in a few hours.\" She shook her head slightly, then nodded curtly to the silver singleship that we could both see out the window. The singleship and the Tiamat II started to lift off at the same time, arcing towards heaven. \n\n\"So,\" Wotan said. \"You broke your sword. But you're still a Liminal Knight.\" \n\n\"No. I'm not,\" I said, quietly. \n\nWotan's brow furrowed. \"The fuck you say?\" \n\nI explained what happened. My voice was hollow \u2013 listless. Even the interior of the Tiamat II felt drab next to what it had been before. As she listened, Wotan gave me a serious glance. The Tiamat II and the singleship cruised towards the sun. Wotan shook her head slowly. \"I...I can't believe it...\" She murmured. \"But I guess even the Machine finds it hard to kill someone up close and personal.\" She sighed. \"Another thing they share with us, I guess.\" \n\nI snorted. \n\nMy eyes closed as we cruised \u2013 in the big, empty blackness. \n\nLong silence passed between Wotan and I. I simply wallowed in my misery. But then I dreamed. \n\nAnd when I dreamed...I dreamed of Thale. \n\nDREAMS \n\nThe dreams were vague. Not the crystal clear closeness of before. I could only hear Thale in a distant, muted way, my arms wrapped around his body, my mouth pressing his. It was like kissing cardboard. But when the kiss broke, I had a faint...strange image. In the murky, incoherent dream, I saw Enriquah strutting over. Cartwheeling, actually. My brow furrowed and I tried to understand why I was dreaming about her. \n\n\"How...did you get here?\" I asked, and as I asked, the dream seemed to grow just a bit clearer. More straightforward. Less murky. Enriquah grinned at me playfully, and my eyes shifted to Thale. He was looking irritated at her. \n\n\"This is...real?\" I asked. \n\nThale looked at me in confusion. His ears perked up. It was so...real. It was so him. \n\nMy heart leaped. \"Thale,\" I said, grabbing onto his arm. I dragged at him. \"That's you?\" \n\nI snapped awake, gasping, heavily. The world felt even more drab. Even more colorless. But my heart didn't stop racing. \n\n\"Oh you son of a bitch,\" I growled. \n\n \n\nMAL'S PLAN \n\nWotan, who was set on the bean bag in the center of the cockpit, controlling the Tiamat II by kneeling and meditating. I crawled over to her and then grabbed onto her shoulder. My voice was soft. \"Can you send an order to your singleship?\" \n\nWotan glanced at me. \n\n\"What order?\" she asked. \n\nI paused. \"I need a control system, uh, similar to a sundivers astrogation console.\" \n\n\"What?\" Wotan asked \u2013 but I was already heading for the airlock. \n\nWotan watched as I dressed in the void suit and grabbed onto the cold gas accelerator. She was still looking utterly confused as I finished suiting up. Once I had done so, I closed my eyes and thought: I want you back. \n\nThere was no response. \n\n\"Wotan,\" I said, quietly. \"Maintain this course. I'll be right back.\" \n\nAnd before she could respond, I shut the airlock with a press of my palm, and then leaped out into space. I didn't think about it. I just did it. The two starships were flying in formation, at the same velocity, in the same direction. They were, effectively, stationary. And both their thrusters shut down as I leaped outwards \u2013 so neither continued to gain speed. My cold gas thruster spewed out an expanding column of smoke behind me as I rushed to the singleship. The suit's heads up made it piss easy \u2013 but even so, I nearly missed. I had to correct and slow myself down far earlier than I would have as a...Knight. \n\nMy boots magged to the silvery hull and I crawled inside through the airlock that Wotan opened for me. I could almost feel the other woman's confusion. \n\nInside, I let memory guide me, even as the dull, boring control panel spread before me. It was almost identical to the device used by Mal back on the Tiamat I. And so, I knew exactly what to do. The memory was crystal clear. Mal and I had been discussing FTL engines. And I had asked him...what would happen if you reversed an FTL field. \n\nI programmed in the orders. \n\nAnd my vision remained dull. \n\nWhen I returned to the Tiamat II, Wotan looked completely confused. \n\nAnd I remained completely tight lipped. \n\nFINAL OFFER \n\nFinally, we were at Home's primary. \n\nThat was what I had been expecting happened. Wotan put her hands on her knees, closed her eyes...and then said: \"You've tasted what it is like, Venn. You know what it is like to be without me.\" She looked at me \u2013 and I could tell the Machine lived in her now. The puppetry was...so intense. Did Wotan have implants? Was it because she was older? Or was it because the Machine knew that anything it did to Wotan, Wotan hated it enough. Puppeting her wouldn't turn Wotan any more against the Machines. \n\nI smirked. \"No,\" I said. \"I don't.\" \n\nThe Machine's brow furrowed. \n\nI grabbed onto the handheld terminal that, ages ago, Rossck had wired into the Tiamat II's systems. Acceleration gel flowed into the cockpit as the tubes snaked out, finding my and Wotan's socket. The Machine twisted Wotan's lips into a smirk as we slammed into the sun. Another dive. Another leap. And another emergence. The acceleration gel slurped away and my body ached with the bruising impact of a rough emergence. The Tiamat II's ice armor was almost completely sloughed away and the Machine spoke through Wotan. ",
        "\"I'm still with you, Venn.\" \n\n\"Yeah, you are...\" I groaned. \"Well. With Wotan. You're not fully connected to me...\" I grinned. \"Just barely enough to fuck with my eyes. My tongue. My taste. Not enough to hear my thoughts...or else you'd have heard me beg you earlier, right?\" I asked, and felt a moment of satisfaction at Wotan's eyes widening slightly. \"That's because you're not as fucking cracked up as you think you are...you're one Machine. In the Domain, there were...how many? Hundreds? Thousands? Millions?\" I arched an eyebrow. \"And they all worked together to run the Domain's machinery. How far are you stretched, maintaining every Liminal Knight, every conspiracy, every false prophecy? How much of your run time is dedicated to handling us?\" \n\nThe Machine snorted. \"I don't see why you think this is such a victory, Venn. It doesn't change the fact that your mind is going to be like this your entire life. And if you keep trying to piss me off...I can make it worse.\" \n\n\"Oh, you can make it worse?\" I asked. \"What, burn out my pleasure and sex centers? Overload my optic nerves? Sterilize me?\" I shook my head. \"I don't care what you do to me. Don't you get it? You've already lost.\" \n\nThe Machine chuckled. \"Lost...I...I'm not your enemy, Venn.\" \n\n\"You're everyone's enemy,\" I said. \n\n\"No. I'm your friend,\" the Machine said, its voice gentle \u2013 a contrast to Wotan's raspy growl. \"I've made your history mean something.\" \n\nI smirked. \"And that's...about four hundred and seconds,\" I said, quietly. \n\nWotan's eyes widened. \"What?\" \n\nI grinned. \"When a FTL drive activates, it makes a star into a collapsar for a plank's moment, by focusing its gravitational energies inwards. That's the basis of a jump, whether you're using a jackdrive or a spindrive. But if you reverse the equation and suppress a star's gravity, rather than increase it...do you know what happens?\" \n\nWotan's head looked up. \n\nMy gut-math felt right. \n\nIt took light five hundred seconds to go a single AU. \n\nA single AU was the distance between Home's primary and Home. \n\nWotan's eyes widened and she lifted an arm. As if to shield herself from a sky catching fire as the cascading wave of our homeworld's star going nova struck the atmosphere. \n\nThrough Wotan, it screamed. \n\nThen I screamed. \n\nThe pain was deeper and fierce and hotter than anything I had felt in my life. My nerves burned and flared \u2013 and the only thing that saved me was that it was so infinitesimally short. I staggered, sagged, then collapsed to the side, gasping heavily. My whole body ached. My head ached. I felt blood dripping from my nose. Wotan was collapsed onto the bean bag. But when my eyes blinked, they saw clearly. \n\nThey saw the stars. \n\nAnd the stars... \n\nThe stars had never looked more beautiful in my life. \n\nI grinned and when I breathed, air tasted sweet. So very sweet. \n\n\"I fucking knew it,\" I whispered. \n\n*** \n\nThe Alliance Fleet's race from Eudaimonia to We Made It would have gone down in the history of the Chain as the most impressive feat of logistic expertise in the history of the human sphere, had it not been for the equally impressive display of calculated brutality on the part of their enemies. While Vorsoth's Fleet lacked the legitimate authority of Regent Drak and his fleet, they had the largest number of worldkillers arrayed into a single fleet since the Battle of Three Singularities. And, as the ancient proverb went, force has a tact all of its own. \n\nWorlds were stripped of vital fuel and water reserves to ice up the hulking worldkillers of Vorsoth's armada. Crew were pushed to their breaking limit, jump after jump, with the singular goal of crossing the zenith of their enemies. Crossing the zenith \u2013 the same method that Vorsoth had used to capture the crew of the Tiamat II \u2013 involved arriving a day or two ahead of the enemy and setting up into a defensive orbit around the primary. Against a single ship, it was a nearly inescapable trap. \n\nAgainst a fleet, it would be the worst slaughter that the Chain had seen since the early days of the first civil war. \n\nThe Alliance Fleet knew that Vorsoth was pushing to meet them. They calculated Delta-V and jump tolerances, based off the intelligence fed to them by their spies spread along the Chain. The Quantum Forge kept them abreast of the enemy, even now. \n\nBut the best intelligence and the best planning cannot do a damn thing against human error. \n\nDoubly so when the human error originated from a calculating intelligence that wished neither a turkey shoot nor a boring and protracted duel. The Machine wanted its star war. And the Machine ensured it would get it. \n\nThale jerked awake as the acceleration tube receded around him. The pipe that had been feeding him oxygen and nutrients for the jump slurped out of his mouth. He coughed, spluttered, and wheezed, while the rest of the bridge crew of the Victrix Republique started to rouse from their tanks as well. But even as Adoran rolled his shoulders and stepped out of the tube to his right, an alert started to wail from several of the consoles. Still half naked crew stumbled to their platforms, and Thale could see the ruddy orange glow of Kataclyzm's primary slowly wheeling in the bridge window. \n\n\"Sir!\" a senseor-tech said. \"We're getting enemy IFF!\" \n\n\"No!\" Adoran hissed. \n\nThale thrust out his palm, his eyes closing. He grabbed onto the controls of the Victrix and swept his electric senses outwards. Horror and relief mingled as he started to ping off the heat signatures of other worldkillers. His. Vorsoth's. All of them tumbled, pell mell, from the heart of the systems primary. Some were showing sun-sear damage. Others were frantically burning their thrusters, trying to right themselves. Each screamed for orders, for confirmation, for simple clarification. Thale focused and his words spoke through the ship, on every laser com. \n\n\"All ships! Open Fire!\" \n\nThe first two worldkillers to actually manage to bring their guns online and to bear on the enemy were the Firestromos and the enemy Coventry. The first barrage was far from a success. Hitting a ship in space \u2013 even ships as massive and energetic as Hegemonic capital ships \u2013 was nearly impossible without significant calculations and precise aiming. It was, in effect, like hitting a bullet with another bullet while both bullets were spinning in opposite directions. In a pitch black room. The targeting computers needed to determine distance, bearing, and velocity all in a short few moments, using nothing but the heat signatures of their enemies and the parallax between them and the stars \u2013 which themselves were washed out by the glare of Kataclyzm's primary. \n\nThe end result was that Firestromos shot nearly five hundred thousand rounds of high velocity ferrous slugs from their nadir rail guns, angling themselves to slowly bring their port, then prow guns to bear, switching from bank to bank with such smooth, mechanical precision that the brilliant orange flare-lines of the slug's tracers never broke or waver. That line of brilliant, almost liquid, light flowed and whipped through space, seeking out their enemy's belly, while an identical streamer of shots flowed from the Coventry. \n\nThale's mind reached the Firestromos before either ship corrected their aim. He let the telemetry from the Victrix leap across space and into the Firestromos' targeting arrays. Their railguns corrected their angles and the change of angle rippled along the stream of tracers, looking nearly whiplike. Slugs began to rain on the Coventry. The same agrav engines that could sustain a crew through high velocity burns and through the crushing impact of a sundive were focused outwards now, angled and adjusted to blunt and alter the trajectory of incoming rounds. The end result looked a hell of a lot like a hot frying pan that had just gotten a load of butter tossed onto the skillet, with streamers of tracer-coated rounds zipping off randomly in space at near right angles to the ship. \n\nSimilar engagements began across the fleet, and Thale reached out for his ships, while Adoran and Enriquah did the same. Where it was hard for a single ship to do the parallax tracking to target another by itself, two or three working together could accomplish the same task in a fraction of the time. With a Liminal Knight guiding them, using the ancient miracles, the weapons fire of the Alliance Fleet transitioned from inaccurate and wild to deadly and focused. The Firestromos and the Triumpherant both angled on the Coventry, pouring fire onto them from two different vectors. Agrav engines stressed to the limit, the Coventry began to spin, to fire their broadsides at both enemy ships. \n\nAnd that was when the missiles started to hit space. \n\nAt which point, Vorsoth's presence slammed into Thale like a fist of a furious god. \n\nThe nearly psychic scream of fury chased Thale of the ethereal space of communicating ships and onto the chaos of his flagship's bridge. Officers bellowed orders and missile launch patterns were announced by impersonal automatons, while the forward window was dominated by the flicker-flash of missiles zipping out of the spinal batteries by the hundreds. Streaks of light sometimes broke through the spread of missiles \u2013 distant tracer rounds being fired by ship to ships. \n\nThale put his finger to his nose and it came away red with blood. \n\n\"Sire!\" A watch officer ran towards him. \"Sire, chaffpults are targeting our ship \u2013 we think they may be concealing boarding pods, but we can't be sure.\" \n\nThale staggered over to the console that the officer pointed to. The array showed the utter pandemonium of the battle \u2013 but it also showed a warbling, flexing cloud of confused sensor indicators between the Victrix and the San Diego. Thale's eyes narrowed and he frowned. \"Saturate that entire area with antimatter torpedoes.\" \n\n\"Aye aye!\" \n\n\"Incoming!\" \n\nA wave of railgun slugs began to rain onto the Victrix's fore shields. The whole ship groaned \u2013 kinetic transference between the agrav fields and the impacted shields. It was as if he was some ancient sea going ship, hammered and battered by the waves. Thale growled as Quah opened her eyes, falling onto her knees. She shook her head. \"T-This is harder when there's-\" \n\nThe bridge filled with a white light. \n\nWhen it faded, one of the officers \u2013 her voice awed in the silence, whispered: \"That was the Tokyo. We're getting nothing from the Valedictus and the Cutarian. They were in the blast range \u2013 nearly point blank.\" \n\nThale closed his eyes. \n\nThe battle had only just begun. \n\n*** \n\nTechne had gotten used to the idea she was going to die. It had been dangled over her head so many times over the past few weeks that it had become stale. Then boring. Then utterly aggrivating. Every time the Hegemonic guards made some coarse joke about dismembering her or feeding her to the trash compactor, she had needed to bite her lip to not just scream at them to finish it already. She didn't know why Vorsoth hadn't killed her, or Mal, or Rossck. \n\nWhen she had put it to a vote, calling through her bars to Mal and Rossck in their cells, Rossck had put forward the idea that they were going to be crucified somewhere nice and public. Where everyone would get to watch them. Mal, ever the optimist, believed that it was be because Vorsoth wanted to use them as leverage over Venn, who was still alive. Maybe even escaped \u2013 and now seeking to find a way to free them. \n\nTechne wanted to believe that. \n\nBut... \n\nShe had an alternative plan to 'Venn rescues us.' She had been quietly checking over her cell, trying to find what was and what wasn't usable as a weapon. She had settled on the leg of her cot \u2013 she had worried at her with her fingers until she was pretty sure she could snap it free from the socket and brain someone with it. Now, she simply needed to wait for the right moment. The ship had gone through several jumps \u2013 the cells flooding with cheap, shitty acceleration gel every time. And every time, Techne had waited for some emergency, some fire, some technical breakage. \n\nEach time, she had been disappointed. \n\nUntil now. \n\nThe wailing battle alert alarm got her out of bed. She grabbed onto the bars, grinning fiercely. \n\n\"Oh great,\" Rossck said, quietly. \"Now we get to die in cells.\" \n\n\"This is our chance,\" Techne muttered. \n\n\"What?\" Rossck asked as the door opened and a shocktrooper who had been assigned to watch prisoners during battle stepped into the corridor. \"Some lucky railgun round is going to mist that fucker and his gun is going to drop right at your fucking lap?\" \n\n\"What did you say, lizard scum?\" The shocktrooper snarled. \n\nA pair of sounds so close together that they were nearly identical exploded through the room \u2013 CLANGCLANG \u2013 and left Techne's ears buzzing with confused after signals. That was followed by the slurping sound of emergency sealant slapping over the holes. As Techne rested her forehead against the bars and blinked the pain out of her head slowly, Rossck spoke, his hands clasped over his ear-holes. \n\n\"Well, I'll be a son of a fucking bitch.\" \n\nThe shocktrooper's armor had kept him surprisingly intact for being hit in the back by a railgun slug. It had gone through and through, pausing only to turn his torso and arms into a fine red mist. His legs, the exoskeletons locked in place, remained standing, and his battered rifle had skittered past Rossck and Techne's cell to Mal's. Mal snatched it up with a laugh. \n\nThen. \n\n\"Fuck! It's dead.\" \n\n\"What is it, a lasgun?\" Rossck asked. \n\n\"No,\" Mal said. \n\n\"Stubber? Shotgun? Bilpro Acider? Screamer?\" \n\n\"No, give me a damn second, you gun nut,\" Mal snapped back. Then, laughing. \"Hah! It's a clavegun!\" \n\n\"Yes!\" Rossck pumped his fist. \n\n\"I don't care if it's a fucking threshold blade,\" Techne shouted across the way. \"If it's dead, we can't use it.\" \n\n\"To the contrary, Cap,\" Rossck said, thrusting his arm out. \"Mal! Underhand that.\" \n\nMal tossed the gun, awkwardly arcing it out by shoving a burly arm through the space in the bars. The rifle flipped and tumbled and ended up slap bang in the middle of the corridor, far out of Rossck or Techne's reach. \n\n\"Jesus Christ, Mal!\" Rossck snapped. \n\n\"You try and toss a rifle one handed with these bars in the way!\" Mal snapped back. \n\nTechne, though, was already stepping backwards. She slammed her foot into the weakened socket between the cot and the leg. The leg came free with a squeal and rasp of metal. She snatched it up, then slid it along the floor to Rossck's cell, clattering and clinking every step of the way. Rossck grabbed it, then held out his arm. He batted at the gun once. Twice. Then finally, snagged it and dragged it back. \"Aha!\" He laughed. \"Okay, now for the stupidly dangerous part.\" \n\nTechne bit her lip, watching as Rossck tugged out the magazine and pulled out one of the fist sized mass-reactive shells claveguns used. He fiddled with the base of the shell with one of his claws, then placed it precariously on the out-thrust box of the lock mechanism. Then he hurried backwards as the clavebolt exploded. The corridor filled with smoke and an acrid smell \u2013 and then Techne laughed as Rossck stepped before her cell, grinning cockily. He swiped the keycard taken from the shocktroopers legs, and her lock opened with a chirrup. \n\n\"Lets get the fuck out of here,\" Techne said. \n\n\"Aye aye, Captain!\" \n\n*** \n\nThe rain of shells abated from the San Diego long enough for a silvery dart the size and length of a Hegemonic corvette to plunge into the front windows of the Victrix's bridge. The officers in-front of it had enough time to scream out once before the boarding pod opened and started to fill the air with stubberfire. Slug rounds thudded into armored uniforms, stitching across the kevlar fabric before finding heads and pulping them. Quah, who had been trying to direct fleets of missiles, dove for Adoran, knocking him onto his back, while Thale jerked his threshold blade free, formatting it into a tall, narrow shield. He planted it and pressed his shoulder against the shield. \n\nBullets sparked and wined off the shield, while alarms wailed and the call echoed through the ship for reinforcements. \n\nSmoke roiled around the boarding pod and when the stubbers stopped pouring out hot lead and death, the smoke parted as shocktroops in matte black armor stormed forward. They held a mixture of close in boarding weapons: Bilpro acid spitters, shotcannons, claveguns. Each roared and spat death, splashing anyone who the stubbers hadn't swept aside. \n\nAnd behind them stepped Lord Vorsoth. \n\nIn the flesh. \n\nHe looked nearly identical to the body he had worn while in the throne room of the late and unlamented Emperor Rehoboam. Same digitigrade legs. Same armored chest. Same wicked threshold ax, glowing and sparking. Same cape. But then Thale saw the difference: His shoulders had a pair of sturdy looking tubes attached to them, with massive drum magazines. Thale thrust out his hand and decided to screw fucking around: His power hammered into the shocktroopers, engaging their emergency trauma systems. If a limb was too mangled to be saved, shocktroopers' armor would snip it off with a lightning fast iris tourniquet built into the shoulders, knees, thighs. \n\nOne trooper fell, legless, screaming. Another's arms dropped. It was almost comically bloodless, the devices working to prevent bleeding out \u2013 even as they amputated perfectly functional limbs. But then Vorsoth charged towards Thale. \n\n\"No Venn to protect you now, mutant!\" \n\nThale jerked his shield free and reformatted it in the same flowing motion, pirouetting around and slashing his blade up, catching the ax-blow meant for his head on his guard. Sparks flared and he smirked at Vorsoth. His eyes flashed. \n\n\"Lets end this.\" \n\nVorsoth bellowed in wordless fury. \n\nAnd the reinforcements surged onto the bridge \u2013 led by Sergeant Antares, chain-bayonet roaring. \n\n*** \n\nTechne, Mal and Rossck had just gotten to the hanger bay of the San Diego when the ship took four nukes at once. They were tiny nukes. Nukettes, really. They were barely city smashers \u2013 closer to tactical ordinance. They stitched their way along the spine and port hull of the conical ship, and in a single second, they changed the San Diego from a proud, bloodied worldkiller to a heeling, barely intact wreck. The armor plating peeled away from burning holes and bodies by the hundreds tumbled through the gaping gaps in hull and corridor, flipping end over end as they poured into space. \n\nTechne shook herself as she stumbled to her feet, her head ringing. Beside her, Mal was on his back, bleeding sluggishly from where a chunk of debris had glanced off his forehead. Rossck was pinned to the wall, his hands gripping where a thin metal pole had fallen and pierced through his left thigh. He rolled his head back, breathing shallow and fast through his nose. \"Fuckfuckfuckfuckfuck!\" he snarled. \n\nMal groaned. \n\nTechne stood up, shaking her head from side to side. \"Okay, uh, hold tight!\" She said, putting her hand on Rossck's shoulder. \"Stay here!\" \n\n\"Captain!\" Rossck snarled. \n\n\"What?\" Techne looked back, ready to smack him if he asked her to leave her behind. \n\n\"If you leave me behind, I'm gonna fucking haunt you,\" Rossck snarled. \n\n\"That's my Rossck!\" Techne said, before turning and running out of the adjoining corridor and into the hanger deck. The nukes had rippled their kinetic energy through the ship \u2013 a bit like an earthquake in a cave system. Depending on the structural design, a room might have crumpled like an egg or shaken things off without much of a glance. For the hanger system, it had been a mixture of sturdy design and chaos. The ceiling and walls hadn't buckled. But the gantry system that serviced areospace fighters and shuttles hadn't been quite so rigorous. ",
        "Fighters by the dozen had flown from their secure clampings. Others had dropped from cranes. Their fuel spread across the deck and some sparks had set the entire place into a furious inferno, which hissed and roared as it swept towards fuel tank after fuel tank. Secondary explosions tore through metal and Techne lifted her arm, ducking forward. Three shocktroopers sprinted by, careless of their burning armor, carrying firefighting gear, no matter how doomed or hopeless their cause. Techne shouted. \"Hey!\" She said. \n\nOne turned back to look at her. \n\n\"We could he-\" Techne started. \n\nThe shocktrooper reached for his rifle, stumbling with both the rifle and his firefighting gear. His voice was only faintly muffled by his helmet: \"The prisoners are escaping!\" \n\nTechne reacted instantly: She sprinted towards him, her hand darting into her pocket. She slammed one of the clavegun bullets she had salvaged from the damaged rifle into his helmet, her finger stabbing down on the firing pin. Her hand and the helmet both exploded apart in the same spectacular boom. The shocktrooper stumbled backwards, his face a mass of bloody cuts \u2013 the helmet having come apart just as it had been designed. By shattering, it didn't transmit all the kinetic damage directly to his head. It still wasn't a great thing, to have your helmet explode. As the shocktrooper stumbled, Techne \u2013 her pain sensors screaming at her \u2013 snatched his rifle from his maglocks and backed away. The shocktrooper stumbled, reaching for his sidearm. He pulled it free and began to fire at her. Techne yelped and backed away \u2013 and a moment later, a huge sheet of burning metal dropped directly onto the schocktrooper. \n\nTechne stood there, her knees nearly quivering with the simulated adrenaline. \"Fucking asshole.\" \n\nWhen she returned, Mal was squeezing onto the pole, trying desperately to find some way to lever it out of Rossck, who was grabbing onto the furred man's shoulders and shaking his head. \"Give the cap a second!\" he said, then yelped as Techne shouldered her way between them, triggered the chainsaw bayonet, then sawed the pole off with only inches to spare. Sparks sprayed onto Rossck's chest, but then the pole fell away and he staggered forward, his face going all funny \u2013 scales paling to gray-green. \n\n\"Leave it in, he'll bleed to death otherwise,\" Techne said. Mal, jerking his hands back, nodded. \n\n\"Where too?\" He asked. \n\nTechne looked at the hanger \u2013 the smoke pouring from it thick and noxious. \"Anywhere but there,\" she said, nodding. \n\n\"Agreed,\" Mal said, his voice grim. \n\nRossck tried to make a complaint when Mal slung him over his shoulder and the two of them started to sprint down the corridor in the opposite direction they had come from. \n\nBut not very hard. \n\n*** \n\nAdoran stood behind Vorsoth, while Thale stood before him. Smoldering lines of molten metal and slashed up conduits marred the deck around them \u2013 dozens of ax marks and missed slashes. But so far, none of the three had actually landed a telling blow on the other. Vorsoth's shoulder cannons swiveled and fired a short ranged spread of micro-rockets at Thale. Thale snapped up his palm and screamed out his fury and his pain and the missiles exploded in a rippling spread, as if they had slammed into a wall of invisible force. Fragments pelted both warriors, but Vorsoth was already sweeping his ax behind him \u2013 nearly bisecting Adoran, who leaped backwards and then staggered and stumbled over a corpse. \n\n\"Do you know what I did with your woman, Thale?\" Vorsoth growled. \n\nThale, his face impassive, thrust forward with the tip of his blade at Vorsoth's chest. Vorsoth, trying to keep an eye on him and Adoran, reacted a fraction slower than he should have \u2013 the tip drew a thin, glowing red line along his chest armor. Vorsoth snarled, then fired another spread of missiles \u2013 straight downward, even as his legs launched himself straight upwards with a sudden, springlike motion. The impact of the missiles on the deck rocked the ground and Thale flung out an arm to try and keep himself balanced. \n\nVorsoth landed to his left, ax blade sweeping down. Thale leaped forward, losing his grip on his threshold blade. His palms slapped to the deck and he vaulted upwards, landing catlike on the edge of one of the consoles not smashed to bits. Around him, the battle raged, with Quah rushing from knot of Shocktrooper to knot of Shocktrooper, her powers and her threshold blade wreaking a blood havoc in the enemy ranks. \n\n\"I raped her,\" Vorsoth snarled. \"And then I killed her.\" \n\nThale's ears flicked dismissively. \n\nVorsoth stepped forward. \"Didn't you hear me?\" \n\n\"I did,\" Thale said. \"I'm just utterly unimpressed.\" \n\nVorsoth's mechanical bellow was almost a shriek as he charged forward, his grille-face mask glowing with a red light as his vocal simulators worked overtime. The subsonic harmonics crawled along Thale's spine. Thale flashed to a memory of Vorsoth \u2013 his foot pressed against a child's ribcage, glaring down at him. Mutant. Weak. Filth. Pathetic. \n\nVorsoth brought his ax down. Thale sprang upwards and landed nimbly on the ground before the console. He ducked forward, his tail flattening out to avoid being slashed by Vorsoth's two handed swing. \n\n\"You made me wear a mask my whole life,\" Thale said, his voice as cold as ice. He stood and pirouetted backwards, effortless. It was almost like dancing as Vorsoth slammed his ax down where Thale had been standing a moment before. \"You locked me up behind gloves...\" Vorsoth wrenched his ax blade free and poured a barrage of missiles at Thale \u2013 raining down shot after shot, which Thale coldly detonated in the space between them. Fragments scored along his arm and shoulder as he ducked his head and throat behind his lifted arm. He grunted as an exceptionally large chunk skittered along his elbow, jarring him to the bone. \n\n\"We made you what you are!\" Vorsoth stomped forward. \"You owe us everything.\" \n\nThale ducked the ax swing. But rather than darting backwards, he cut into Vorosth's thigh muscles, his claws finding the pneumatic cables and snagging them. Through the physical connection, he felt the emergency and maintenance releases. With a thought, Vorsoth could detach his legs \u2013 for ease of repair and rest. He was so furious, so unfocused, that Thale undid the catches with a twist of his mind, then wrenched. Pneumatic gasses poured into the air as Thale leaped backwards \u2013 out of the way of Lord Vorsoth as he fell to one knee. \n\nVorsoth screamed in fury and hurled his ax at Thale's head. Thale casually stepped aside, stepped forward, spun aside to evade Vorsoth's rib-crushing punches. He ducked into the man's guard and snagged onto exoskeleton power shunts. He wrenched one free in a spray of sparks, ducked beneath a hook punch, then stood in the same fluid motion, his claws raking upwards. He slashed across Vorsoth's face, catching sensitive optics and what little flesh remained between the grille plate and the insectoid optical array. \n\nVorsoth screamed his fury and his pain as Thale stepped backwards. \n\n\"You'll...never be Emperor after this!\" Vorsoth shouted \u2013 and Thale felt his powers reaching outwards. \n\nAnd on the screen of every surviving console, on the vid-coms of every heads up display, on every firing solution computer, on every radio band of the fleet...an image began to play. It was clear and soundless. It showed Thale standing beside the Lady Venn as she stood and tugged on the monofilament wire that had sliced the Emperor completely in half. It showed him taking up his threshold blade and turning on the Hegemonic Knights that every citizen of the Chain had looked upon like near demigods.  \n\nIt showed everything. \n\nThale... \n\nPurred. \n\n\"You never understood me, Vorsoth,\" he said. He stepped forward as Vorsoth clutched at his face \u2013 his powers entirely focused on putting out the recording to every ship in the fleet. Thale grabbed onto the QE reservore in the man's chest and wrenched it free with a spray of sparks and a hiss of bubbling, frothing fluids. \"You only ever saw the mask.\" \n\nHe plunged his claws under the grille, his arms straining as he planted his other palm against his forehead. He strained, then screamed, and ripped the entire grille free in a spray of red gore \u2013 a slurry of black bile, teeth and jagged connection ports. Vorsoth made a hideous, gurgling noise. He managed to half stand, his leg dragging, his hand clutching at his face as blood and bubbling fluids poured from what had been his lower jaw. \n\nLord Vorsoth's eyes dimmed. \n\nFaded. \n\nHe fell backwards. \n\nBehind him, Thale saw Adoran \u2013 surrounded by what looked like twelve dead black clad Shocktroopers \u2013 grinning at him weakly. \"Hey,\" he said, his hand planted against a shallow cut on his side. \n\nThale smiled back. \n\nAnd his head exploded with pain. \n\n*** \n\nTechne and Mal \u2013 with Rossck slung over his shoulders \u2013 came back to the brig as the PA announced: \"Antimatter breach imminent. All hands to escape pods.\" \n\n\"Where the fuck are those?\" Mal snarled, his breath coming in jagged, gasping pants. \n\n\"I don't-\" Techne stopped as she started towards the right exit of the brig. They had gone left, originally, and now, were retracing their steps, desperate to find a doorway that lead somewhere safe. Unfortunately, the nukes had closed off many of the alternate paths they might have taken earlier, and even the prison complex was looking a tad worse for wear. But her stopping had nothing to do with any of that: It had everything to do with the Hegemonic officer who was standing in one of the prison cells, holding a handheld computer. He snapped his head up as Techne cleared her throat. \n\n\"What the fuck are you doing?\" She asked, simply. \n\nShe half expected the man to reach for his pistol, so...she wasn't shocked when he did so. He aimed it right at her head, his blue eyes wide, his blond hair matted with sweat. \"S-Stand back!\" he said, trembling. \"I'm going to live! And you? You are all going to die!\" \n\n\"How?\" Techne asked. \n\nThe man grinned, his eyes manic. \"The brig systems are designed to vent into space. Launches the whole compartment out there, enclosed, with just the air they brought with them.\" He giggled. \"Intimidation! It's a great intimidation tactic. Drop them into space, and point to the ticking clock to get their friends to surrender.\" \n\nTechne, her ruined hand still dripping with lubricant, gaped at him. \n\n\"Now! I'm going to get out of here!\" The blond man said, his breath coming short and shallow. He drew back the hammer on his pistol. \n\n\"We can all get out of-\" Techne started. \n\nThe bullet slammed into her chest. It shattered through chrome and ceramics with the same ferocious efficency it would have against a biological target. Techne flopped backwards, gritting her teeth as dozens of alerts and alarms wailed to life across her body \u2013 the bullet had come dangerously close to hitting her power core. She clutched at her chest, reflexively. \n\nThe roar that reached her ears a second later wasn't another gunshot. \n\nMal charged forward over her, Rossck having slid to the ground beside Techne. The Hegemonic officer yelped and fired once, twice, the bullets thudding into Mal with all the impact of peas against an elephant. Mal grabbed onto the man's arms, then slammed his forehead into the Hegemonic officer's forehead, then tossed him out, head first, into the cell across from them. The Hegemonic officer landed in a pile, groaning, but still alive. \n\nMal held the man's handheld computer, his nose flaring in furious, deep pants. \n\nTechne opened her mouth to speak \u2013 but then Mal grabbed her ankle and Rossck's ankle and dragged. \n\nThe cells door shut. Then the secondary door shut \u2013 this one completely sealing the cell off. The next few seconds were an agony of gravitational forces \u2013 tumbling, spinning, spinning, tumbling. Techne closed her eyes and tried to not picture the fires burning towards the San Diego's antimatter tank. She, instead, tried to focus on the comforting memory of the inverse square law. Each meter they put between them and the Diego was square factor on how much energy less would hit their ship. \n\nHeh. \n\nShip. \n\nLike a floating coffin made by a sadistic engineer counted as a ship. \n\nThe cell continued to tumble and tumble and tumble. Space would never slow or catch it up. And as time passed, even Techne started to grow sick. She closed her eyes and tried to not think about anything but the inverse square law. Eventually, though, the silence and the chill that bled through the walls started to creep against her \u2013 and at last, Rossck broke the silence. \n\n\"Cap?\" \n\n\"Yeah?\" Techne asked. \n\n\"I like it better when Venn rescues us.\" \n\nTechne laughed, raggedly. \n\nEternity after eternity passed. Techne's oxygen sensors started to blip from green to yellow to red. But there was so little to do to extend things, beyond hope and pray that the cold would help keep Rossck from bleeding to death. Techne knew that she could check her internal clock to determine what the time was \u2013 but she decided she'd rather not know. Each minute counted closer to the second she knew the oxygen would run out. She'd survive. But... \n\nShe had pressed on without a ship. \n\nShips were just things. \n\nBut Techne knew she'd never set foot in space again without a crew. \n\n\"Cap...\" Mal mumbled, his voice muzzy with fatigue \u2013 and only fatigue. He definitely wasn't turning choking desperate oxygen starved. \n\n\"Hmm?\" Techne mumbled. \n\n\"I think I...hear something.\" \n\nThe entire room rocked \u2013 hard \u2013 and stopped spinning. A gravity field still pressed them to the deck. Techne managed to lift her head just before the brilliant spark of light stabbed into the ceiling. It cut quick circle. A plating dropped in and a moment later, a lithe figure dropped in too. An aghast cry came from a woman's lips \u2013 and then Techne's face was filled... \n\nBy Enriquah. \n\n\"They blew up your amazing boobs!\" She wailed. \n\nTechne began to wish for death again. \n\n*** \n\nREUNION \n\nHohmann and I tumbled from the star of Kataclyzm \u2013 the Tiamat II none the worse for wear. \n\nThe first few hours after the nova had bitchslapped the Machine into whatever counted as its afterlife had been surreal. I had, at first, panicked. But after a few minutes of quizzing myself, I saw that...all the things I'd learned, all the things I had known instinctively were still there. I could still chart a course, still drive a motorcycle, still strip a gun. I didn't think I'd be able to learn new things, but that wasn't so much of an issue at the moment. \n\nHohmann spent that time slowly touching her cheeks, rubbing at her hair, and whispering to herself. \"Wow...\" Then. \"Wow...\" Then, a few seconds later. \"Wow.\" \n\nFinally, I had turned to her and snapped: \"Wow what!?\" \n\n\"I don't feel the urge to strap on a laser sword and save the galaxy,\" Hohmann said, her voice filled with awe. \n\nMy brow furrowed. \"You...you don't?\" \n\nHohmann laughed. \"No!\" \n\nI cocked my head. \"I do...\" \n\n\"Well, you're sixteen,\" Hohmann said, shrugging slightly. \"That's normal for someone your age.\" \n\n\"Bar that!\" I squeaked, my arms crossing over my chest. \"I'm almost twenty cycles, Wotan!\" \n\n\"Oh,\" Hohmann said, blinking at me. \"Well, I...you look younger.\" \n\n\"What, cause I don't got great big old...\" I waved my hands. \"Chest. Things!?\" \n\n\"I thought you said you were twenty,\" Hohmann said, her voice dry as she started to tap at the physical controls of the Tiamat II. I scowled at her. But then it started to sink into my brains that...I didn't have my powers anymore. I couldn't hear machines whisper. I couldn't focus on a computer and make it sit up and bark. I was just...Venn. Venn of Stumble. That was all I was. I looked down at my hands. Then my brow furrowed as I looked at my cybernetic arm. I lifted it up, spreading my fingers, and focused. \n\nNothing happened. \n\nMy brow furrowed and I breathed slowly. Rather than reaching out with my mind...I focused instead on the join of my arm. I focused on the tips of my fingers. I tried to caress it \u2013 and I felt faint twitches and quivers on the ends of my hand. My fingers narrowed in their focus, cupping forward, almost touching tip to tip. I saw a tiny ripple of energy in the center of my cybernetic palm. I spread my hand wide. \n\nAnd the handheld computer that Hohmann held leaped from her palms to mine with a surge of gravitic energies. \n\n\"Hey!\" Hohmann exclaimed. \n\nI grinned, cocky and eager. \"We just gonna make our own miracles now.\" \n\nThat was how I didn't go crazy in the days it took us to slipdrive from We Made It to Kataclyzm. Since we didn't have the simstim to keep us from being right in one another's faces. Hohmann aggressively meditated and I practiced with my cybernetic arm. Hohmann's story of the Collapse made it clear that while the Machines made miracles easier, humans could wrap their heads around them. I had a Domain era cyberlimb attached to me. I could damn well use it. \n\nI wondered if the same would be true with a threshold blade. \n\nAnd, finally, we emerged from Kataclyzm's primary \u2013 and into the targeting lasers of dozens of worldkillers and hundreds of shuttles. Debris floated so thick and so heavy that it nearly slammed into the Tiamat II \u2013 and I scrambled to the communicator. \"Whoa! Whoa! Whoa!\" I said, shouting into the microphone. \"Whoa! Hey! We're fine! We're all fine, we're all friends here, uh...\" I paused. \"How are you?\" \n\nThere was a long pause. Wotan shook her head and smiled, as if she was remembering some other time, some other place. \n\n\"Venn?\" Enriquah said. \n\n\"Hey Quah!\" I said, breathing a slow sigh of relief. \n\n\"Do you know what the fucking fuck happened to our fucking rad superpowers!?\" \n\nI winced. This...might get awkward. \n\nA BIT \n\n\"You did what!?\" \n\nThale, who was currently wrapped around me and nuzzling my neck, proved to be nearly as distracting as Adoran, who was kissing my cheek and squeezing me around the hips. So. I wasn't going to lie and say that being sandwiched between two gorgeous, gorgeous boys, wasn't the best fucking thing in the universe. Cause it was. But it did make it hard to focus on Enriquah, who was sitting at the far end of the meeting table, and looking utterly apalled. \n\n\"I, uh,\" I coughed, then gasped as Thale nibbled on my ear and caressed my belly, his purring buzzing through my bones. \"I triggered a ship's FTL in reverse. So, rather than increasing a star's gravity, it increased it.\" \n\n\"You caused Home's primary to go nova!?\" Enriquah put her hands to her face. Her hair was hanging limp around her \u2013 lifeless. \"I...I...I can't decide if I want to strangle you for destroying the source of our godlike powers or for doing that without letting me waaaaaaaaaatch!\" She slumped forward onto the table, her hair puddling around her. \n\nThale drew back. He somehow spoke around his purr. \"How could you watch? It was a sun going nova.\" \n\n\"I'd have found a way...\" Enriquah mumbled. \n\nThe door to the meeting room opened and Admiral Meetra stepped in. \"Regent,\" they paused. \"Sir...Dra...\" They made an even more intense face, her brow furrowing. \"I don't...know...what to call you...\" \n\n\"Thale is good,\" Thale said, his voice dry as he slipped away from me. \n\n\"Meetra?\" I asked. \"What are you doing here?\" \n\n\"Oh, Meetra and I have been quietly killing the worst leaders in the Hegemony and replacing them with Alliance members who have been taking control of important segments of the Hegemonic military,\" Thale said. Casually. Like. Whoa. What!? ",
        "\"And I did was find a crotchety old Liminal Knight,\" I said, quietly. \n\n\"And kill a god,\" Adoran said, tweaking my nose. \n\n\"Not a...god exactly...\" I mumbled. \n\n\"With a sun,\" Adoran said. \"A weaponized sun.\" \n\n\"Should we rename her Venn of San Diego?\" Enriquah mumbled. \"And paint her black and only let spooky people come inside her?\" \n\nMy face went all red. \n\n\"To be fair,\" Meetra said, their voice entirely too amused. \"Spooky people are the sexiest.\" \n\nI clapped my hands over my face. \"Auuh, stop!\" I cried out. \n\nMeetra sighed. \"She raises a good point \u2013 we have a lot of work to do out there,\" Meetra said. \"Most of the forces that turned on us have retreated. They're falling back to Hegemonic hardpoints across the chain.\" \n\nThale nodded. \n\n\"Turned on us?\" I asked. \n\n\"Vorsoth had one last fucking present to offer us,\" Meetra said, their voice quiet. \"He beamed the footage of you killing the Emperor to the entire fleet. Several ships flipped their colors midway through the battle. Others are more on our side than before. But with the scraps of Vorsoth's fleet escaping, they're going to be carrying the message to the entire Chain.\" \n\nThale sighed. \"Let them,\" he said, his voice serious. \"We have enough quantum coms left to tell our forces on Eudaimonia to liberate the planet \u2013 openly. Imprison every last criminal we hadn't replaced quietly, declare the planet to be the capital of the New Republique...\" He smiled. \"And we'll see how the Hegemony does when it's not being propped up.\" He looked at me. \"I have a feeling...it'll be a lot easier going back down then coming up...\" \n\nI smiled back at him. Shyly. \n\nREUNION, PART TWO \n\n\"Techne!\" I squealed, running up to the bed. Unlike Mal and Rossck's bed, this one was surrounded by technical tools and spare parts. Techne's chest had been partially rebuilt and covered with patches that looked like silvery metal. She grinned at me with a cocky smile that got my tummy all a flutter. I looked pat her at Mal, who had huge bandages on his chest, and then at Rossck, whose leg was still elevated. Rossk chuckled. \n\n\"Well, well, well, look at Miss Venn Nova,\" he said. \n\n\"Oh god, is the rumor already spreading?\" I whispered. \n\n\"I prefer Starkiller,\" Mal said, laughing. Rossck twitched and smacked his tail against his chest \u2013 causing Mal to wheeze in pain. \n\nTechne, meanwhile, ruffled my hair. \"How is it? Being normal like the rest of us?\" \n\nI smirked at her. \"Techne...I'm a post apocalyptic scavenger who walked nine hundred and ninety nine worlds with a magic sword, a talking robot, a smart monkey, and an overgrown lizard. I'm in love with the prince regent of a space empire and his hunky noble friend. I've talked with gods, blown up stars, and met legends. Do you really think I'll let losing some powers make me anything but amazing?\" I blushed and beamed at her \u2013 trying to sound brave and tough and not scared silly like I actually was. \n\nTechne chuckled. \"Well. When you put it like that.\" She ruffled my hair more, then drew me in for a soft, gentle, rubber-smooth kiss. \n\nWhen I drew back, I grinned. \"When are you getting back on your feet?\" I asked. \n\n\"Once they finish fabbing spare parts for me,\" Techne said, her voice husky. \"And maybe two days for these lazy boys.\" She jerked her chin to my friends. I smiled, then walked over and hugged Mal, burying my face against his fur, then went and hugged Rossck and rubbed against his smooth scales. His tail wrapped around my ankle and squeezed. \n\nI stepped back \u2013 to where Thale, the big dork, was standing around all awkward and shy and stumbly, despite being a frigging prince or something. His tail lashed from side to side and his ears were half pinned back, in that worried nervous way of his. I stood beside him, then said: \"Thale would also like to say something.\" \n\nThale nodded, then spoke, gruff: \"Get well soon.\" \n\nI elbowed him. \"And.\" \n\nThale, his cheeks heating, stammered; \"A-And, uh, the Tiamat II is being refitted and expanded. W-We're putting cargo space in and-\" \n\nI scowled. \"Thale!\" \n\n\"I...\" Thale looked aside, then blushed even more. \"Y-You should tell them.\" \n\n\"Tell us what?\" Techne asked, her eyes narrowing. \n\nThale passing the buck made my cheeks explode with red. The whole reason why I'd wanted him to tell them was that he was a prince. He was used to giving big sweeping speeches. I looked at him and he grinned ever so slightly at me. \n\n\"Tell us what?\" Techne asked. \n\nI blushed even harder, then looked back at Techne. \"I, um...uh...umumm...\" I thrust out my hand then, forcing it almost into Techne's face. She blinked \u2013 her camera eyes whirring and clicking and focusing as she looked at my ring finger \u2013 and at the tiny platinum ring with a purple and blue gemstone set in the sockets. I grinned, sheepishly, mumbling. \"H-His has blue and brown cause my eyes are brown a-and his eyes are purple and Adoran's are blue.\" \n\n\"Oh. My god.\" Techne put her hands to her mouth. \n\n\"I'm gonna be a princess,\" I whispered. \n\nTechne and I bust into tears and squeals. \n\nMEETING THE INLAWS \n\nIt was a slog, crawling down the chain to Elthas. But it was worth it. Along the way, our fleet smashed up several Hegemonic battle groups \u2013 helped by the fact that more than a few Hegemonic fleets had fired on other Hegemonic fleets, each one claiming to be the true leader of the Hegemony. We took it slow, though, allowing the fleet time to rest between each jump, to effect repairs on the ships as we stopped in ships with technical planets. \n\nAnd I got fucked. \n\nA lot. \n\nI don't know if it was because we didn't have dreams anymore, or if it was because engagement rings make girls crazy horny, but I was literally not on Thale's cock for maybe two hours of the entire flight down. That's only a tiny exaggeration \u2013 cause when I wasn't being slammed silly, Adoran was screwing me. Adoran, the big goof, was a little shy about it in real life. So, I whispered in his ear that he was hot even without six eyes and a greyhound's body, and he was more than willing to fuck me up royal. \n\nWe tried every permutation we could, and were left sprawled and happy and giggly. \n\nBecause...I loved Thale. I loved Adoran. \n\nI didn't know how much of it was the Machine, tweaking us at the get go. But... \n\nFuck it. \n\nFuck that idea. \n\nThe Machine tried to make our lives interesting \u2013 it set up traps and pitfalls, coincidence and prophecy. It even tweaked hormones \u2013 and buzzed my bits when I had first met Thale. But...he was still hot when I nuzzled him. His scars still were eminently traceable with my lips. And he was still the gentle, deeply emotional man that I had been loving since I started climbing the chain. No. He was better. \n\nBecause he felt, finally, at peace. \n\nAnd then we came to the gorgeous, exotic hues of Elthas, with it's vast crystal forests and its shimmering cliff palaces. There, I was dressed in the simstim dress that Adoran had dreamed up for me, but for real: Glittering nanoweave tumbling down my shoulders, while Techne did my makeup and cleaned off my smudges. Me with my gleaming cybernetic arm and cheeks with just the right amount of blush and lips turned a brilliant ruby red \u2013 walking with Thale to the left and Adoran to the right, both snappy in their Alliance suits. Since, well. Alliance uniforms were all the rage, now that the Republique was forming again. \n\nThere, I met the twin queens of Elthas \u2013 Adriata Gideal, with her gleaming cybernetic wings and Lalune Midnight, whose skin matched her name and whose hair was dyed a thousand different shades of glorious blue. Adriata cupped my cheeks, while Lalune eyed Thale skeptically as Adoran looked as if he was about to die of fright. But...something stuck in my craw as Adriata crooned about what a lovely set of freckles I had \u2013 whatever those were. \n\nIt was what the herald had sang out as we entered the airy, open balcony that served as the throne room. \n\n\"Introducing Lady Venn \u2013 Starkiller and the Last of the Liminal Knights.\" \n\nMy titles. My new titles. \n\n\"As Queen of Elthas, I believe you shall make an excellent wife to my son,\" Adriata said, her wings smoothly sliding up and clasping behind her back. \"Do you know the tradition of a dowry, young Venn?\" \n\nI shook my head so fast I nearly got dizzy. \n\nAdriata chuckled. \"When a new child is taken into a royal house, as the royal house has so much more wealth and power than most new children, they are given a dowry,\" she said. \"A single boon, in effect, which we shall provide. Most ask for new houses, but...\" She chuckled. \"We're running out of asteroids to turn into palatial estates.\" \n\nMy tongue darted along my lips. And then I squared my shoulder. \n\n\"I have one boon?\" I asked. \n\n\"Yes,\" Adriata said. \n\n\"And it can be anything?\" I asked, my voice husky. \n\n\"Yes,\" Adraita said, giggling. \n\n\"Within reason!\" Lalune said, her voice as stern as granite. \n\nI gulped, then nodded. \"I got...I has...I have one boon I wish, uh, King. Er. Miss. Uh. Queens!\" I flushed as Adriata covered her lips with her hand and Adoran looked on nervously. I looked up into the taller woman's eyes. \n\n\"Name it,\" she said. \n\n*** \n\nTiar Junkar waddled out of his home and rubbed absently at his forehead. Even almost a cycle and a half after that crazy Liminal Knight had jammed his threshold blade into his head and extracted secrets from his head, it still sometimes pained him. He tended to take this pain out on anyone who crossed his way, which did explain why there was almost no one on the streets of Junker Port. He glowered at the buildings as he waddled forward, his bulk meaning that every footfall let out a loud crunch crunch crunch. \n\nHe came, at last, to the pier. A ship was docked there, heaping with crates of foodstuffs from Agrisland. The foodstuffs were being unloaded by a sweating team of hardy looking scrapmen, their muscles straining as they hauled the cheap, heavy grain from the boat. Agrisland was actually making more food now than it used to \u2013 something that made Junkar grumble. It was driving the costs of his food down, making his river of mana less valuable. \n\nBut then his mood brightened as he saw Miss Giddy, the owner of the local whorehouse, watching the men work. She was dressed in a dress that showed as much skin as someone could without worrying about the biting wind. She had a parasol that protected her from the worst of it and was waving at the men, grinning as she caught their eyes. Junkar waddled over, then smacked her on the ass with one warty hand. Miss Giddy glanced down at him and pursed her lips. \n\n\"For the last time, Tiar, you can't get it for free,\" she said. \"From me, at least.\" \n\n\"It's that new girl I'm interested in,\" Tiar said, licking his lips. \n\nGiddy sighed. Then she frowned, shaking her hand. \"What is that?\" She asked. \n\nTiar looked out \u2013 and saw, past the ugly, brown ocean which was nearly boiling hot in the brilliant, smudgy light of Stumble's primary \u2013 that a boat was approaching. It looked like a vast metal brick, but it still floated, parting the waves without sails. It had to be using some kind of...agrav engine. Tiar's eyes widened and when the ship drew closer, he saw that there was a name emblazoned on the hull: Tiamat II. \n\nThe Tiamat II came slowly to a stop, dwarfing the ship from Agrisland. Tiar felt his stomach turn slowly over in his gut while a crowd began to gather. Junkers and scrappers both, drawn to the sight of something new. As if expecting some new horror, Tiar's temple started to pound. He reached up to rub his forehead gingerly. \n\nA nearly invisible door in the side of the Tiamat II opened. \n\nA moment later, a cloaked figure sprang from it. They hung in the air, catlike, for a moment, before dropping to the pier. The cloak they wore rippled about their shoulders, and they stood to their full, imperious height a moment later. Tiar's eyes widened \u2013 the figure was a mutant. He had cat ears. And purple eyes. And a sleek, black cat's tail. His fingertips were clawed, and he brushed his impeccable black shirt down as he slowly swept his gaze about the crowd. \n\nA moment later, another figure emerged \u2013 this one a bit more awkwardly and carefully. \n\nIt was a woman. A breathtakingly beautiful one \u2013 with brown hair done in a wavy pattern, dressed in a white tunic and white leggings. She flung out one arm, wobbling as she tried to carefully step from the door to the deck \u2013 before a voice called from within: \"Uh, need the gangplank extended, m'lady?\" \n\n\"Y-Yeah, that'd be nice, Sergeant Matoi,\" the woman said. \n\nTiar's brow furrowed. \n\nThat voice... \n\nA gangplank extended and the woman walked down \u2013 followed after by three Alliance marines, their rifles slung over their backs. She stood beside the mutant, who was eying Tiar with a skeptical expression. Tiar looked back at the woman, who was looking around herself, her brow furrowing. She shook her head slowly. \"Wow...\" She whispered. \"It's...all the same.\" \n\nThe crowd, in stunned silence, kept watching. \n\nTiar, though. \n\nTiar gaped. Goggled. His eyes bugged and his jaw hung so wide open that it nearly unhinged. \"Scrapper 908-101.G?\" He asked. \n\nScrapper 908-101.G glared at him. \n\nThe mutant scowled. \"That is Princess Venn of Stumble,\" he said, his voice low and dangerous. \"Your new governor.\" \n\n\"My new what?\" Tiar exclaimed. \n\n\"Would it be petty to put my house there?\" Scrapper...Princess Venn asked, pointing at Tiar's mansion. \n\n\"Yes,\" the mutant murmured. \n\n\"Still gonna do it,\" Venn said, grinning. \n\n\"You...w-what are you talking about?\" Tiar stammered. \n\nVenn giggled. \"Don't worry, Junker. You'll get a new house. And it'll even be as big as mine,\" she said, shaking her head \u2013 as, overhead, a rumbling sound filled the air. Screams split the air as the clouds began to part, the crowd backing up. Tiar gaped \u2013 and he thought his eyes couldn't get any wider. \n\nWorldkillers hung over his world. Not one. Not two. Dozens of them. They were huge and oddly graceful, despite being merely kilometer long cones. Tiar tried to compare them to the size of the worldkiller that had visited here years ago \u2013 and saw that they came up short. They also lacked the bristling weapons. But there were so many, and they moved with an ominous, stately grace. As they flew overhead, they started to launch shuttles by the hundreds. As the shuttles roared outwards, Venn smiled. \n\n\"We've got a lot of work to do,\" she said. \n\nOne of the shuttles landed in the center of the port city. Pushed from the back by a woman with long, purple hair that wriggled and twitched erratically, came a large rectangular shape that Tiar recognized \u2013 but most of the citizens of Junker Port didn't. The woman grinned and slapped the side of the rectangle. \"One certified, top of the line, Eudaimonia model River of Mana. Formatted for foodstuffs, tools, uh, clean air.\" She grinned, slightly. \"Shipment one of, um, like, three hundred?\" \n\nVenn nodded. \"But we can do it.\" She squeezed her mutant \u2013 her slave? Tiar thought. \"It'll be easier once Adoran comes with the ecotechs.\" \n\n\"Yeah,\" the mutant said. \n\nAnd there, without a thought for the crowds, he swept Venn of Stumble, Princess and founder of the Wardens of Life \u2013 an organization with as long and as vaunted history as the Liminal Knights ever had, down into a deep, deep kiss. \n\nOpen a dictionary. \n\nLook up terraforming. \n\nYou'll find Stumble there. In ink and hologram foil print. \n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "adventure",
        "climax",
        "finale",
        "fantasy",
        "space opera",
        "threesome",
        "romance",
        "group sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/to-walk-the-constellations-pt-15"
}