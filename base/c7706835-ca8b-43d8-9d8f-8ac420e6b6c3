{
    "title": "After The Wife Walks In",
    "pages": [
        "Author's Notes: Recently I've been reading a lot of stories in this section and a few others, which deals with a guy getting lucky with a younger woman. May it be the sitter, the fox down the street, the best-friend's daughter, even their own children's girlfriend. Of course this is always while the wife is cluelessly off doing something else. A few close calls to spice things up, like women are unable to smell the musk of sex, and presto... you have an erotic story. So, I wondered, without going into the whole revenge thing, what would happen 'after the wife walks in' on the fun and games.\n\nSo, in this copywrited piece of adult fiction, I've taken a shot at what I think would happen in the recesses of my fertile imagination. As always, please remember all legal disclaimers apply etc. etc. etc... and don't forget to take a second to vote or a minute to comment or send feedback.\n\nEnjoy: \n\n*****\n\nTo say, I was as horny as a bitch in heat, would be fairly correct and yet a complete understatement. \n\nAt forty two, my students called me the grade bitch. You didn't get the grade unless you earned it. I know I had to earn every grade I received attending school. So, it is not my fault these kids today have gotten used to getting a free ride. In my opinion, I was teaching them several valuable life lessons all at the same time. And, the added curriculum didn't cost them anything extra.\n\nIt is a lesson I needed to re-educate my husband in as well. I understood when he was downsized from his work. I understood when the unemployment checks stopped coming. I stopped understanding when he was offered a job, but refused to work because the pay was beneath him. \n\nHell, it was a lot more than he was making now, since he wasn't making a damn dime. Oh, he thought he still needed his club fees paid, so he could network to find a real job. He also needed his car payment made. Add on his insurance or anything else he deemed necessary and you have over half of my check every month. But, working for twelve fifty an hour was beneath him.\n\nIt is a damn good thing that I inherited the house from my parents, or we'd be in a world of hurt. Fortunately I resisted his urging to get a mortgage against the property value. But, I won't go into all of that here. Right then I was horny and wanted sex in the worst way. It was something I noticed since I hit forty. My sex drive had gone berserk.\n\nAt first I wanted more sex. Then I wanted more sex in different places and positions. Then I bought my first vibrator so when he couldn't get it up. I wouldn't cheat on him. Then one day, I needed sex. It was no longer a want. \n\nI hoped I was keeping him happy. I mean if he was at home all day resting. He should be able to get his six inch penis hard when I got home and take care of business. It wasn't like the kids would interrupt; they were away at college or out in the working world themselves. I know our son loved the job that was beneath my husband and his wife thanks me every chance she gets because now they make enough for her to get pregnant.\n\nThinking of getting pregnant, damn that sounded like a great idea. Have my loving husband fuck me so hard he dislodges my IUD and knocks me up. Maybe I should just have it taken out instead and not tell him. Maybe having another child would get him off his ass and out working again. Since he would want to raise his child like he did our sons and daughter. Hey, it could happen!\n\n'Damn it...! Stop thinking like that or you'll stain the seat.' I thought as I pulled into our driveway. I looked in the mirror as the garage door closed. \"Not too bad for an old broad.\" I smiled at myself and applied my bright red; let me wrap my lips around your cock, lipstick. Sure there was a slight streak of grey at my part, but I earned every strand. So what, my tits didn't point skyward anymore. At least they weren't dragging the ground after nursing three kids. They were never huge, but they're not small either. I kept slim by swimming twice a week and running or walking the other three, during my two hour lunch break between my morning and afternoon classes.\n\nI took off my sensible shoes and slipped into my fuck-me pumps. I made sure my seams were lined up and my garter setting on my hips. I bit my lip as I took a seam ripper to the crotch of my panties. I didn't want to wait. As soon as I saw his hard on, I was going for a Pogo ride. We could always snuggle and make love later, after dinner, before I went to bed.\n\nI quietly opened the door and slipped in. I heard moans. 'Good he's watching porn... he'll already be hard.' I thought as I took off my jacket and set it aside. I walked through the kitchen, anticipating the royal romp I was going to get. I had my purse in my hand and was going to set it on the bar. \n\nThen everything changed.\n\n\"Oh shit... Oh fuck...! Fuck my ass Kevin, fuck it good baby! Damn you fill me up.\" My oldest son's ex-girlfriend was gasping as my loving husband Kevin had her bent over the back of my mother's floral wing backed couch. \"Harder... harder... fuck my ass harder!\" I pulled out my cell phone and started recording.\n\n\"Damn... I love your ass. I told you I was a better fucker.\" Kevin grunted and my ardor turned to ice. \"Who own this cock?\" He killed every chance of this being a onetime thing.\n\n\"It's my cock... in my ass... oh god I love it. Give me my cock... Give it to me!\" She begged and ordered at the same time. She was going to say something more, but she turned. \"OH FUCK...!\" Her eyes and mine met. Kevin must have thought he was doing a stellar job, because she was bucking; trying to get him out as panic infused her features. \n\n\"Oh shit I'm cuming, fuck yeah. Take it in your ass, like my bitch wife never will!\" Kevin killed our marriage and any chance of me ever giving him a dime if I could help it. It was like the vulgar would say; I wouldn't piss on him if he was on fire. \n\nI leaned the phone against my purse and went in and got two tall plastic cups of water. After that workout, they needed to hydrate so they could pack his shit and get the hell out of my house.\n\n\"Aren't you glad I talked you out of dating that pencil-dick son of mine, and how I was just the better fuck?\" Kevin panted as he leaned over the frightened girl.\n\n\"I'm so sorry...\" She gasped, looking at me. \"Kevin... Mrs. Nelson...?\" She tried to get up.\n\n\"Fuck that frigid cunt.\" Kevin said and kissed the girls back. It was odd. I didn't even remember her name. Oh well.\n\n\"If you had fucked me more, you wouldn't be so fucked now.\" I finally spoke. \"Here, you'll need this once you can pull your worm out of her. I mean, that was quite the workout dear!\" I set the cups of water on the bar. \"I'll be gone an hour. You'll both be gone before I get back!\" I picked up my phone as they scrambled, trying to cover themselves. \"Take what's yours only, or I'll ruin you in the divorce. I hope you two will be happy together.\" I slammed the door and raced back to my car.\n\nI needed to get out of there before he could try and say a word to me. I almost hit the Pierce's as they were walking their dogs. I waved at them and speed down the street. I made it three blocks before I couldn't see. I made it into the store parking lot before I had to open my door and spew out the contents in my stomach. I had given him over twenty years of faithfulness to have it end like this.\n\nI thank god that the young cop that showed up was a friend of my daughters. He helped me move my car out of the way, avoiding the vomit. He held me as I broke down. He kept asking me if I needed a medic and I insisted that I didn't. I couldn't answer him when he asked me what was wrong, but I didn't want it to become public knowledge of how big of a fool I was.\n\n\"Are you sure you are okay?\" He asked me again, as I was able to start to pull myself together.\n\n\"Yes... I'm so sorry.\" I wiped my face. \"I just found out that I'm getting a divorce.\" I shrugged.\n\n\"I'm so sorry Mrs. Nelson. I didn't know you were having problems.\" He handed me a bottle of water. \"Here drink this and rinse out your mouth.\" He offered and handed me a napkin. \"Ashley didn't say anything the last time I talked to her.\" He patted my shoulder and talked into his radio.\n\n\"I didn't know either... it was quite the shock, but I'll be okay.\" I tried to smile. I remember trying... and failing.\n\n\"Okay Mrs. Nelson, I'll follow you home and make sure you get there safely.\" He helped me get my feet back in the car and I blushed. Here I was, dressed up like some middle aged slut at the corner supermarket.\n\n\"Thank you Timothy.\" I fell back on my classroom demeanor. \"I should be okay as long as Mr. Nelson isn't there.\" I used another napkin, smearing the rest of my makeup and pulled out of the parking lot. I stopped three houses down. He was still there.\n\n\"Are you okay?\" Timothy asked, startling me.\n\n\"They're still there and I can't....\" I was on the verge of crying again.\n\n\"I'll take care of it.\" He said and started walking away. \"You stay there until me or another officer tells you its okay to come to the house.\" He slipped into his car and pulled up at the end of my driveway.\n\n\"Just what I need....\" I sighed. \"Now the neighbors will be bugging me constantly.\" Oh I could hear the rumors. I closed my eyes and waited. I refused to look as Timothy finished removing the garbage out of my house. I jumped when someone knocked on my window.\n\n\"Ma'am, we need you to come and make sure he didn't take anything he wasn't supposed to.\" A tall middle aged cop said to me through the window.\n\n\"Okay... as long as they're gone.\" I nodded and tried to start my already running car. Blushing, I put it in gear and pulled behind Timothy's car, since it was blocking the drive still. I got out and started to the door.\n\n\"Take a quick walk through and let us know if they took anything that they'd have to return.\" Timothy met me at the door. \n\nI walked though and saw the mess they made of my house. I avoided the living room. I went into my bedroom. The bed was a mess and his dresser had all the drawers open. I checked my jewelry case and noticed a ring missing. But it was one he bought, so she could have it. I hoped he made her happy. When I made it to the living room, I looked at the couch and noticed a small stain on the rug. I bolted to the bathroom and dry heaved for five minutes.\n\nTimothy was very nice to me and gave me some paperwork. \"Call my dad in the morning and he'll help you out.\" He handed me a card. \"Make a list of everything he took and its value. He might get to keep it, but it all adds up to the final split of the property.\" He shrugged. I guess this was old hat for him.\n\n\"Thank you Timothy. I should be okay... do you know a good locksmith?\" I looked at the front door and knew he still had a key.\n\n\"I can't recommend one... the job you know. But, my brother might know one.\" He took the card and scribbled a number on it. \"Give him a call and he'll help you Mrs. Nelson.\" I remembered the young rascal from them running around in my yard with my children.\n\n\"I will, thank you.\" I sighed and bit my lip while they were all pulled away to more important things. I was just another divorce in the millions that are filed every year.\n\nOne Year Later:\n\n\"Hey Marcy, my brother wants to know if you're going to the dance at church this weekend?\" Her co-worker Joyce asked as they walked down the hall.\n\n\"I'll never be that desperate Joyce. I'm divorced not diseased.\" She smiled at her friend.\n\n\"But you two have so much in common.\" Joyce walked next to her long time friend. \"You're divorced, he'd divorced. You both were cheated on and your ex's tried to rape you in court.\" She defended her logic.\n\n\"A match made in heaven... or is that hell?\" Marcella Estrada sighed. \"I just got rid of one unemployed, needy, grasping, pile of shit. Why would I ever want another one?\" She could still taste the bitterness in the back of her throat.\n\n\"At least you got to keep your house. I'll never get him out of my spare room if I don't find him someone decent to take care of him.\" She sighed dramatically.\n\n\"I already raised my kids. I don't need to be a mommy to a grown man.\" She wiggled her fingers as she entered her classroom. \"Okay students, put away the books, it's time for a pop-quiz.\" The door closed as Joyce sighed in frustration.\n\nAs the door closed, Kyle Miller had to adjust himself or have the object of his attention see him sporting a woody again. He didn't know what it was about his teacher that held him in thrall. She was good looking, if she let herself dress up occasionally. It wasn't like girls haven't been throwing themselves at him since he came home.\n\nBut, that was just the problem. They were girls, not women. Now Professor Estrada was all woman. Five seven, long dark hair and a real figure, even the stripe of grey set her apart from the crowd. And then there were those eyes. He knew she wouldn't be impressed with his story like the other girls were. He also figured that most of the girls wanted him not because he was such a great guy, but because he inherited his father's business and he could give them the life they desired.\n\nSo, there he sat. Thirty years old, fresh out of the Army, in charge of a business he had no clue how to run. His plan...? \n\nGo back to school and learn how to run it. At first, when he signed up; he found a class by a Mrs. Nelson. She was supposed to be the hardest teacher on campus. But, if she gave you a grade, you earned that grade. She wouldn't care if you were a veteran, or owned a multi-million dollar business. Only the work mattered. \n\nOn the first day, the name Ms. Estrada was written on the board. He was about to see if he was in the wrong glass. Then she walked in.... She was wearing real hosiery, not pantyhose. She had a bearing that demanded his full undivided attention.\n\n\"Mr. Miller, if you would be so kind to answer the question on the board?\" She snapped his attention back to the here and now.\n\n\"No one can answer that question Ma'am.\" He looked at the board. \"It would depend of the ethos of the individual and the situation involved. It's a trap question.\" He looked at her and squirmed.\n\n\"Given the stated parameters in the book, how would you, as an individual, handle the problem?\" She pressed, her left eyebrow lifted in challenge.\n\n\"I'd take the person in a private room and give him some wall to wall counseling, telling them if they ever did that again they'd not only be fired, but prosecuted. Labor laws be damned Ma'am.\" He smiled at her.\n\n\"Violence solves nothing.\" She started to say. \n\n\"Sorry Ma'am, but there you're wrong. Violence and or the threat of violence solves over ninety percent of all problems in the world. To believe anything different is to be deluding yourself. Recent history as example. Especially, when five of the top twenty businesses in the Fortune Five hundred, are part of the Military industrial complex, where violence is necessary to increase their profit margin.\"\n\n\"But it isn't what you'd want to base a business plan on.\" \n\n\"Why not...? The government does and they're still in business.\" The class chuckled. \n\n\"So, what did you do before you decided that you needed an education Mr. Miller?\" She was getting snippy.\n\n\"I killed people for the US Government Ma'am. Army... don't ask and I won't lie to you about it.\" Kyle smiled at her.\n\n\"Well fortunately, if you tried that in the civilian sector, you'll end up in prison for the rest of your life.\" She smiled tightly. \"Now, on to the next question... Mrs. Parker, what do you think the ramifications of dealing with an employee that you think is stealing but you do not have hard evidence?\" She walked past Kyle and he sighed.\n\nAt the end of the class, Marcella wanted her students to leave, to give her time to get back under control. She didn't want to admit the reaction she was having to the young man that had the nerve to question her so intelligently, if in a miss guided direction. She could feel his eyes on her as she moved around the classroom. \n\n\"Sorry Professor, I wasn't trying to bust your chops, but just answer the question honestly.\" Kyle came up behind her and made her jump. \"Sorry....\" He murmured.\n\n\"Mr. Miller, you startled me.\" She turned. \"What do I owe the pleasure of your patronage in my class, other than having the benefit of the GI bill to pay for your schooling?\" She wanted to set the tone for any conversations with him.\n\n\"I'm paying my own way Ma'am.\" He looked at her.\n\n\"Why business? Why not one of the law enforcement or security degrees? Wouldn't they sit better with your world view?\" She knew she was coming off like a cold bitch. She was doing it on purpose to get him to back off.\n\n\"Yeah well, if I didn't have to run the business that my father left me when he died, I might have looked into that. But, some things are just out of our control. And, although our world view might be different ma'am, I do live in reality. Like the reality that when I joined, I never thought that I'd have to go kill strangers for a living. But what the heck, it's a job and kept me off welfare and paying taxes.\" He might think she was a knock out, but he refused to put up with anyone's bullshit.\n\n\"I'm sorry Mr. Miller.\" She felt his words like stabs to her heart. \"It is easy for us who sit back here in academia to make judgments. It's totally different for those of you who had to live through it.\" She bit her lip, making sure she held eye contact rather than letting her eyes wander over his tight fit body. \"But yet again Mr. Miller, why my class?\" He had to know her reputation. Every student did.\n\n\"I signed up for Mrs. Nelson's class because I heard it was the hardest in the program. If I could pass that, then the rest would be easy.\" He shrugged. \"But, instead we got stuck with each other; and I finish what I start.\" He shrugged. \"Like my dad said, 'if you don't want the answer, don't ask me the question'.\" He shrugged at the question in her eyes.\n\n\"Then Mr. Miller, you are in the correct class. I'll see you next week.\" She knew she had to end this conversation or Joyce, who was looking on, might get ideas. That theory proved correct when she finally exited her class and the first question was.\n\n\"Who was the hunk you were verbally sparing with? I wouldn't kick him out of bed for, well... eating anything.\" She smiled wickedly. \"There might be hope for you yet Marcy.\" Joyce was the only person to get away with calling her that name. She heard her ex call her that once and it stuck.\n\n\"That was Mr. Miller. A student and we both know I do not date my students.\" She said sharply. \"He's a veteran and has recently taken over his father's business upon his demise.\" She didn't want to get flushed at his awkward praise of her class. But deep down it made her feel good to have him tell her he took the class because it was the hardest one at the school.\n\n\"So, not an over pampered brat, who couldn't find his ass with an instruction manual and a map. Interesting....\" Joyce smiled at her friend. \"This semester is going to be very interesting.\" She waved. \"See you tomorrow.\" She went off to her car to rush home to her husband who worshiped the ground she walked on.\n\nMarcella sighed and headed to the parking lot and tried to remember what that felt like. She was almost to her car when a voice she never wanted to hear again startled her. \n\n\"Marcy... what did you do to me? Do you know how much you embarrassed me in front of a client?\" He rushed up and was getting in her face.\n\n\"Kevin I have done nothing of the sort. We're divorced and you and what's her name, are supposed to be living happily ever after.\" She tried to move around him.\n\n\"They said my membership has been canceled at the club. I was ready to close the deal but I was kicked out of a club I've been a member at for over twenty years.\" He spit in his anger. \"What the fuck is the meaning of this bullshit, Marcy?\"",
        "\"Kevin, your dues were due three months ago. Since I am no longer your wife, and it wasn't awarded in the divorce, I don't pay your dues any longer. You and your younger concubine could have paid them at any time, but that is no longer my problem. Now, please excuse me, I'm tired and want to go home.\" She took a step.\n\n\"I'm talking to you god damn it!\" He grabbed her arm. \"You need to pay that bill and apologize to my client or I'm fucked. I have bills to pay, you stupid frigid cunt!\" He was shaking her.\n\n\"Let go of me Kevin.\" Marcella looked at her ex-husband and wondered when he turned into a lunatic. \n\n\"Are you going to pay the damn bill?\" He started again.\n\n\"You heard the lady, let go... asshole!\" At six one, when Kyle walked up he looked down at the older man.\n\n\"This is private business. Leave us alone!\" Kevin hissed, not taking his eyes off his target.\n\n\"Once you let go and Ms. Estrada is in her car, then I'll leave.\" Kyle took a step forward so he could intervene if needed.\n\n\"Who the hell do you think you are?\" He asked Marcy, but Kyle answered.\n\n\"I'm the son of a bitch that's going to kick your ass, if you don't let go of her arm.\" He put his hand on Kevin's shoulder. \"I'll count to three. One... two....\" His grip tightened on each number. He didn't have to say three.\n\n\"This isn't over Marcy.\" Kevin hissed as he stomped away.\n\n\"Are you okay...? Who was that asshole?\" Kyle looked at Marcella and saw the fear.\n\n\"That was Mr. Nelson, my ex-husband.\" She bit her lip. \"He keeps forgetting the ex part.\" She sighed and turned to thank her savior.\n\n\"Ah, I see.\" He smiled and tried to lighten the mood. \"And now I hope you see my point. Mr. Nelson wanted to do business with you, if you wanted him to or not. It was only the threat of greater violence that deterred him from getting violent with you.\" He tried to tease her. \"Hey, I didn't make the rules, I just live by them. Do you need me to follow you home, or call security?\" He saw her shaking.\n\n\"No, no thank you. I'll be fine. He was just irritated because I'm not paying his bills anymore.\" She tried to smile. \"He'll become reasonable once the shock wears off or I'll take him to court again. Or, I could remind him of a certain video of him and his new friend taken before we were divorced.\" She didn't know why she said that.\n\n\"Well, that confirmed a few things for me.\" He smiled at her raised brow. \"One, he's an idiot for cheating on you. Two, you're single... and three I'm interested. Take care Professor Estrada. You might want to park closer if you can, so he can't ambush you again.\" He gave her a jaunty salute and walked away as she tried to get her mouth to move.\n\nMarcella must have practiced her speech for Mr. Miller a thousand times over the weekend. She knew she had to set the ground rules. She couldn't get involved with a student, no matter how handsome or how many times he saved her from harm. She just couldn't allow herself to date a student, especially one who was that much younger than her. It was sordid. Something you might read out of one of those trashy bulk novels you could find that the checkout line and the grocery store. It could never happen in real life. Besides she was his teacher.\n\n*****\n\n\"So, tell me about this chick you're spacing on?\" His buddy was asking him when Kyle turned down chasing some local bar fly.\n\n\"She's not some bimbo you'd find in a place like this. She's a college professor. A fucking knock-out too.\" Kyle smiled.\n\n\"Oh, look who's getting all above us now. A couple of semesters of school and you're all better than us down here in the trenches.\" His friend slurred from the three drinks too many he had already.\n\n\"Dude, you're drunk.\" Kyle laughed and slapped his shoulder.\n\n\"Yeah well... I'm more drunk than I should be, but not as half as drunk as I want to be. Get another round, I have to piss.\" He ping ponged his way to the back of the bar where the facilities were. \n\nKyle looked at his friend and wondered if he remembered they weren't twenty anymore. All he knew was he had a meeting first thing Monday morning, to beat into the heads of the people who thought they should be running the business. It didn't seem to matter that he owned over sixty percent. If they wanted to keep it status quo until he learned enough to take it over, they needed to remember who the real boss was.\n\n\"So, I met this fox by the bathroom.\" His friend slurred as he stumbled back. \"I might take her home and show her a good time.\" He took the beer bottle and slogged it back. \"Catch'ya later dude, don't do anything I would.\" His friend bounced back to where he came from and Kyle tossed a couple of twenties on the bar.\n\n\"Leaving already Kyle?\" The waitress asked. \"I was hoping that we could talk once Paul left.\"\n\n\"Sorry Shirley, I have home work and a business to run. Maybe next time.\" He smiled good naturedly, knowing he didn't want any of what she was selling. He might want a family, but not a readymade family. As far as he knew, she had three kids from three different dads and he wasn't in line to be number four. \n\n*****\n\nMonday morning, Kyle was getting ready to use his dad's favorite silk tie to garrote the asshole at the other end of the table. He was droning on about profit share and market values. Everything he could think of to let Kyle know just how unprepared he was to take over the business. Kyle was getting tired of it.\n\n\"Are we still profitable? Is there any problems that need my immediate attention? If not, then copy me on the documents and I'll have my guy look over the numbers.\" He sighed, cutting off the old wind bag.\n\n\"Well the only other issue is the selloff of the stock, bringing your shares down fewer than fifty percent, where they should be.\" One back stabber said in a snide voice. \"We voted last week but you never showed up for that vote. We need you to....\"\n\n\"Who thinks they have the balls to make me sell my shares?\" He stood up. \"I own my five percent that I got when I was twenty one. I own my mother's twelve point whatever percent after she died from breast cancer. And I own the fifty two percent from my father's will. So unless I flunked math, I basically own this fucking company. You cannot get enough shares to think about a takeover or proxy battle. And you can't buy me out because I'm not selling! Whose brain fart was this any way?\" He looked down the table.\n\n\"We are the board of directors.\" The smart ass in the middle said. \"We've have put our years in. This is our company, not yours; just because your father stroked out on us.\" He stood up.\n\n\"Galen, was this your idea?\" Kyle pinned him with a stare.\n\n\"Of course. I deserve my extra shares. Not some snot nosed punk.\" He spit out and the rest of the men started shaking their heads.\n\n\"Cool, take your seven percent and get the fuck out of here. You're fired!\" Kyle shouted him down.\n\n\"You can't....\" He sputtered indignantly.\n\n\"Walk out or I'll forcibly kick you out. By the end of business, your shares will be transferred from voting shares to holding shares. Now, get the fuck out of my building!\" He took one step toward the man.\n\n\"We need seven members or the corporation folds.\" The old crone at the end of the table said as Galen fled the violence in Kyle's eyes.\n\n\"Darcy, get your ass in here.\" He slammed his fist on the intercom.\n\n\"Yes sir...?\" She scurried in, looked at him, and wondered what he did this time. \n\n\"How long have you been with the company?\" Kyle asked, knowing she was one of the first people his dad hired.\n\n\"I, um, was with the company before it was a company Kyle... um, sir.\" She remembered Kyle as a sweet little boy that would come in with his father. She kept a stash of candy in her drawer just in case he showed up.\n\n\"Good, sit down. You've been promoted to Galen's spot on the board.\" He looked at the men and they paled. \"All in favor sit down... all opposed get the fuck out!\" He was done with their bullshit. \"Motioned carried, next business!\"\n\nAfter the business meeting finished, Kyle was sitting in his dad's chair looking at Darcy. \"I hope I can trust you to keep me from fucking up too bad.\" He was tired of the petty bickering.\n\n\"If your mother was here, she'd wash your mouth out with soap young man.\" Darcy said, secure in the knowledge that Kyle would never fire her. He might shout and threaten, but just like his father, he would never fire her.\n\n\"Sorry Darcy, but those stuff shirts chapped my ass.\" Kyle sighed. \"I need to talk to Galen's assistant to see if she wants to follow her lover out of the building.\" He sighed and took off the tie.\n\n\"I'd say trapped paramour instead.\" Darcy quirked her brow. \"I'll take her if no one else will.\" Darcy offered knowing more than she was telling. There wasn't much Darcy didn't know about the business or the people working there.\n\n\"Let me talk to her first. You can stay if you want.\" Kyle rubbed his head and looked at the pile of homework he had to finish before school the next day. Darcy wondered how he was going to handle the timid Kristen. She didn't have to wait long. \n\n\"You know I canned Galen today... are you staying or are you following him out the building?\" Kyle asked bluntly.\n\n\"Kyle... glove the fist.\" Darcy said looking at Kristen.\n\n\"I'd rather stay sir, if I can.\" She was shaking and looked like she was going to faint.\n\n\"Then why were you having sex with a married man who was a member of the board?\" Kyle didn't take the hint. \n\n\"Because I'm a single mother of two and I can't afford to lose this job sir. I didn't have a choice and still have a job.\" Tears started falling.\n\n\"Kyle... don't make me come over there.\" Darcy said urgently. \"Look at the poor girl, she scared witless.\" She looked at Kyle and shook her head at him. He was so like his father it was scary.\n\n\"Why..? Are you really frightened of me?\" Kyle asked the woman.\n\n\"Speak truthfully, and you will not be punished.\" Darcy added, motioning for the woman to sit down before she fell down.\n\n\"I need the job and Galen said.... I couldn't ever think of finding a job that pays the same if he gave me a bad review... and my kids. And, and....\" She wrung her hands and tears started falling again.\n\n\"Did my father know?\" Kyle asked irritated.\n\n\"It didn't happen until Galen took over the corner office after your father passed away.\" She assured Kyle.\n\n\"So, he made you chose your job or sex? We're talking play for pay here, right?\" He looked at her trying to see if she was lying to him.\n\n\"Yes Sir. He, he, he... I can't talk about it, but he made me or I'd lose my job.\" She gasped. \n\n\"KYLE...! She thinks you're going to fire her.\" Darcy shouted at him. He saw her look and flinched back.\n\n\"Fire her; hell... you said you were going to take her on.\" He looked at Darcy. \"I just needed to know if I could trust her.\" He sat back. \"Kristen, I want you to write it all up and have it on my desk before you go home... no scratch that. Have it on Darcy's desk ASAP.\" He rubbed his head as the woman looked at Darcy with the question in her eyes. \n\n\"And what am I supposed to do with it?\" Darcy asked. \n\n\"Copy it; verify the facts so I can nail Galen to a tree if he ever tries to cause us problems. Then I want you to do an internal audit and see if any of the other ladies in the office have had to deal with the same kind of bullshit. If they have, I want the heads of the perpetrators on the front fence. This is your project and you answer only to me on it. Kristen should know who to talk to. Clean my house ladies; I don't want this filth in my business.\" \n\n\"What about me sir?\" Kristen asked confused.\n\n\"Talk to Darcy about that! She's your new boss. Darcy, look into some counseling if necessary. Just keep it legal and that as a company, we were not at fault. To press the point ladies, I want a memo out first thing tomorrow. If this shit is found, it means instant termination for cause. Handle the rest through HR.\" he waved off the problem as handled.\n\n\"He almost sounds like his father.' Darcy smiled. \"What if I didn't take the seat on the board?\"\n\n\"Watch it, or I'll make you chairman... err woman of the board.\" Kyle smiled of the first time. \"Hey, that might just....\"\n\n\"Don't even think about it.\" Darcy warned. \"Keep studying. You're doing great. I already have enough to explain.\" She smiled a Kyle, but he wasn't done.\n\n\"I want you to comb through the business and find me two other women who might be qualified and able to sit on the board. I think the top has been the good ole boy club for too long. But, I don't want to fuck over the business for trying to bring it into this century. Have the names on my desk by next board meeting just in case I have to have a repeat performance of today. Oh and don't forget to claim Galen's shares of voting stock. They go with the position and log his as holding stock before he can try and sell them to one of the other members or a competitor.\" \n\n\"What do you want me to put on his termination package?\" Darcy was scribbling in short hand.\n\n\"One, Kristen should be taking notes, not you. You are no longer a secretary, assistant, or whatever title you held when you came to work today. You are a senior vice president... title to be determined. Run it all through Gary and make it work. Kristen is your assistant as of this date and this time... come on Darcy you know the drill.\" He sighed and smiled at her. \"Practices inconsistent with the position he was holding. If he pushes, have it for harassment of female employees and whatever they call that bullshit he tried to pull in the meeting... not eligible for rehire.\"\n\n\"Severance package...?\" Kristen asked taking notes from Darcy and smiling for the first time since she walked in.\n\n\"None, zip, nada fucking dime, other that his pay as of this date and any accrued vacation.\" Kyle answered with some heat.\n\n\"He has a contract....\" Darcy said looking at Kyle with new eyes.\n\n\"And he violated it in more than once just today, in front of the board, and in his moral obligations to the company and co-workers. No wiggle room on this one girls. If he is a lying cheat in his marriage, then what's to stop him from being a lying cheat in my business? If it hits the oscillator, we'll help the wife, unless she has cheated too and then they can fend for themselves.\"\n\n\"But the morals clause hasn't been enforced for years.\" Kristen looked up shocked.\n\n\"It's there and I want it enforced completely. Go over it with Gary and make the necessary changes. Give everyone fair notice and then clean house. I wouldn't want to marry a cheat and I won't have them in my business. Just like with the military, no fraternization in the ranks. We can't charge them for adultery, but we sure the hell can fire someone for it.\"\n\n\"What if it has nothing to do with work?\" Darcy smiled at his old fashion attitude.\n\n\"A cheat is a cheat is a cheat...! Same goes for a thief. I don't want either one here.\" He looked at his books again. \"Anything else before I have to get out of here?\"\n\n\"What if you fall in love with someone at work?\" Kristen asked wide eyed.\n\n\"As long as they are not in the same command structure, and it doesn't affect work, I don't have a problem with it. But, I don't want another situation where a boss has the power to force someone into sex or lose their job. Darcy will be the head of that department. So, if she can do a transfer, then fine. If not, then someone needs to have to guts to be honest about what's happening. Look I know I'm running afoul with this, just use some common sense here. Run it all past Gary and let me know what going on before I sign and make it company policy.\"\n\n\"Why me Kyle...?\" Darcy wanted to know and still wondering what she was going to tell her husband.\n\n\"Because I know and trust you. You knew dad better than anyone here and I need someone I can trust doing this until can I finish school. Once I take full control of the business, we'll re-adjust if necessary.\" He opened the top button of the shirt that was strangling him. \"Now before anything else, I need to get out of this monkey suit and get to work.\" He waved them out and was shocked as they both got up quietly and headed to the door.\n\n\"Was his father that way?\" Kristen asked, looking at Kyle.\n\n\"And then some....\" Darcy smiled. \"You've only been here since William got sick the last time. Now, maybe we can get back to the way it's supposed to be.\" Darcy smiled as she closed the door.\n\nKyle was unaware that the sun had set and he needed to go home, when his door opened. \"God Damn-it kid! It's like William is still here.\" Gary, the company's lawyer and silent partner, said as he strode into Kyle's office. \"I'm going to have to get a junior officer in here to keep it all straight. You have no idea the confusing messages I had to sift through today.\" He sat on the edge of the big desk.\n\n\"Hey Gary, sorry I dumped the shit bucket on your head today.\" Kyle was tired but had ten more pages to go over.\n\n\"Shit bucket...\" He chuckled. \"I haven't had this much fun since before your dad got sick the first time.\" Gary smiled. \"Galen was nothing but a butt kisser from the get go. Give him an inch and his head ballooned up to where he thought he was god.\" He sighed. \"You have some of the other older members a bit worried though.\"\n\n\"As long as they work for the best interest of the business, their jobs and places are secure; until I can take over the day to day operations. If they try the bullshit like Galen, tell them to find a soft place to land.\" Kyle closed his book. \"Clancy is the only one I'd offer a golden handshake. He's earned it in my dad's book.\"\n\n\"I'll let him know. He's looking at retiring anyway.\" He moved some of Kyle's books out of his way. \"So, if I sent over Becky...? You know the one who looks like sex on a stick, to be your new assistant?\" Gary smiled evilly.\n\n\"After the fraternization clause I hit you over the head with... what an example that would set. Besides if rumors got started, her girlfriend would have my ass on a platter.\" He looked at Gary like he turned zombie all of a sudden.\n\n\"How did you...? Never mind, it was just a thought.\" Gary smiled. \"Take a bit of advice from an old friend. Don't let this business kill you. Go find someone who you want to go home to.\" \n\n\"Well I have my eye on someone, but right now, she thinks I'm beneath her notice.\" Kyle smiled. \"Working on it though...\"\n\n\"What's her name, I'll check her out.\" Gary perked up.\n\n\"Yeah right... a bit early for that Gary...\" Kyle chuckled. \"She will call me nothing but Mr. Miller, yet. Let me at least get to first base before your vetting her as my wife. And keep that pre-nup in the drawer.\" Kyle warned him.\n\n\"I'd never be so crass. I have more tact then that. Nothing would happen until I thought you were actually serious about her. So, who is she anyway?\" Gary asked when Kyle was reading a passage in one of his books.\n\n\"One of my professors.... God damn it Gary...! Leave it alone.\" Kyle was pissed and Gary was smiling. \n\n\"Well at least it's a place to start. Get some sleep. Cramming never really works. You have to be awake before you can retain the information. I used to take a series of naps so I had some sleep to take my tests.\" Gary waved and headed out the door. \n\n\"Thanks Gary, I'll have a hide-a-bed installed.\" He started putting his stuff away so he could go out and eat.\n\n\"Go home Kyle, I know it's hard, but it is your home. You don't have to stay in the company's condo. Renovate it, do what you have to, but go home.\" Gary said kindly.\n\n\"When I earn it, I'll take it back or sell it. I haven't decided yet.\" Kyle sighed and they walked out of the door and turned off the lights.\n\n*****\n\n\"So, I hear Kevin is being an ass again.\" Joyce and Marcella were walking the infield track. \"Why don't you just show your kids that video?\" She was breathing hard, but was able to keep up with her long legged friend.",
        "\"I will not stoop to his level. Our son Richie refuses to talk to him and I refuse to put a barrier in between him and his other children.\" She shrugged. \"No matter what he's done to me, he was a good father and I hope he remembers that before what's her name's baby is born.\" Her face twisted in pain.\n\n\"I know how to get a smile out of you.\" Joyce changed the subject. \"So, tell me about Mr. chiseled and intense in your class... you know the one, so don't even try it.\" She scoffed as Marcella looked like she was going to balk.\n\n\"That would be Mr. Miller, a solid B student.\" She said and looked over to the bleachers. \"And he looks like he is stalking me.\" She pointed.\n\n\"If I was single, he could stalk me any time.\" Joyce wiggled her eyebrows. \"Why don't you dump the frump mode you've been in and take him for a tumble? Might work some of the kinks out... as it were.\" Joyce smiled meaningfully.\n\n\"He is a student and I'm his teacher. How would that look?\" Marcella sighed and looked again. \"Where did he go?\" Kyle was nowhere to be seen.\n\n\"Oh, he's good.\" Joyce breathed. \"Made sure he was noticed and then made himself scarce. He's not a stalker sweetheart, he just making his intentions known without being an ass about it.\" \n\n\"I'm way too old to fall for a student. How very bad television. I don't need another soap opera.\" Marcella didn't want to think about what seeing him made her feel. She didn't want to think about the drop in her stomach when he was gone either. When they got back to where they left their towels and jackets, on each was sitting a rose. On Joyce's was a white rose; on Marcella's was a deep red one.\n\n\"He has style. You have to give him that. And a clear sense of propriety.\" Joyce said thoroughly impressed.\n\n\"What do you mean...?\" She sniffed her rose. It had been since forever since anyone brought her a flower.\n\n\"White for friendship, red for love.\" Joyce smiled. \"We got to get back, and let me know what Mr. Miller does next.\" They headed in opposite direction to get to their next classes.\n\nThat evening after class, and feeling his eyes on her the whole night, Marcella wasn't surprised to find him waiting at the corner of the building. \"Mr. Miller you do not need to walk me to my car after every class.\" She sighed and was thankful that he didn't listen to her.\n\n\"It is my pleasure to make sure you are not accosted on your way home Professor Estrada.\" He bowed and matched her steps. \"Besides I have a question I'd like to ask you about my class work.\"\n\n'Oh god, don't let him ask for a deference.' She thought, not wanting to hear the words from Kyle.\n\n\"In the substructure of a successful business, what is the true importance of the morality clause?\" Kyle asked to see how much of a mess he made of his father's business.\n\n\"That's not for a couple of chapters.\" She looked at him. \"Although true morality has seemed to go by the wayside; if you look closely; companies like Chick-A-Fila, Target, Wal-Mart and Sam's club, while Mr. Walden ran things. Were based on their moral code and re-investing into the local communities. I think that the lack of clear morals has precipitated many of the downfalls of these companies that thought they were too big to fail.\" Her arm tingled when they brushed against each other.\n\n\"What about clear and defined gender roles?\" Kyle asked wanting to put his arm around her. He could see them, taking long walks, talking about their days.\n\n\"I think it should be more about talent and ability. Ones gender, other than for reproduction, should have no bearing on where a person's abilities lay.\" She said and wanted to scoot closer and gather his radiating heat.\n\n\"Should a woman have to choose between family and business?\" Kyle asked, not wanting the conversation to end, even though they were standing by her car.\n\n\"That, Mr. Miller; is a topic for another time.\" She cracked a small smile. \"I have to get home and so do you. Don't forget the essay and I'll see you in a couple of days.\" She got in her car and started it. She backed out and drove away before she threw herself into his arms and captured the kiss she knew was there waiting for her.\n\nShe thought of Mr. Miller all the way home. She was still thinking about him when she walked into the house and the cold hit her in the gut. She looked at the completely different looking living room, but it didn't matter. No matter how many times she pained or rearranged the furniture, she could still see the old floral couch and them rutting like wild animals. Their words screamed in her head and she sighed at the stack of bills she had to sort through. \n\nShe was able to keep her house, but just barely. She had to borrow against her retirement to pay for his portion. She knew she had added ten more years before she was even close to finically secure as she was the day she caught them. She thought of the unfairness of it all. She didn't do anything wrong, but she was the one who ended up paying for his infidelity. The phone rang and she jumped.\n\n\"Hello Joyce, I just got home.\" She sighed.\n\n\"Sorry mom, it's just me. But, I need to ask you a favor.\" Her son's voice came over the receiver.\n\n\"Okay shoot.\" Marcella said and pulled out her box dinner, put it in the microwave and hit the button. \"I have three minutes until dinner.\"\n\n\"Are you eating one of those meals made out of cardboard again?\" Her son asked and sighed. \"Anyway, Carrie is pregnant again and we don't have the room or the money to get a bigger place. I was hoping if we could stay with you until we could save up some money for something bigger? It would only be for a little while.\" He promised her.\n\n\"Famous last words...\" Marcella smiled. Maybe that was her problem. Maybe the house was just too empty. They talked about it for an hour and well past the time her box dinner had been tossed in the trash. Marcella told her son to bring the family over on the weekend and they could talk about it some more. She said her goodbyes and hung up.\n\nThe next day when she went into her office, she saw a bouquet of flowers sitting by her door. She picked them up and like all women, sniffed their fragrance. She picked out the little card from the bright flowers and read the note.\n\n'I saw these and thought of you. Have a great day. Kyle.' She smiled and closed her door. Setting the flowers where she could see them, she went about grading her papers. She taught her morning class and was surprised to find Joyce in her office at lunch. \n\n\"Someone has an admirer.\" Joyce smiled. \"I grabbed a vase from my office to put these in some water when I noticed them starting to wilt.\" She arraigned them perfectly. \"So is this Kyle who I think he is?\" She looked over her shoulder.\n\n\"That would be an educated guess. He is listed as Miller, K on my sheet.\" She sat down setting her stuff off to the side.\n\n\"I bet you like to have him on your sheets.\" Joyce teased.\n\n\"Please... I'm old enough to be his mother probably.\" She sighed as the vase sparkled on her desk. \"I'm sure he can find more than enough company to keep his sheets occupied. I am not now or ever will be that desperate to date one of my students. Especially one like Mr. Miller. I would hate to think of my reputation if he got the highest grade in my class because we were seen together.\" She shook her head, trying to clear the picture of tangled sheets from her mind.\n\n\"Yeah, well from what I saw... don't stand around anything flammable when he walks you to your car. You both were throwing off sparks the other night.\" She smoothed down her cashmere sweater. And adjusted her Hermes scarf.\n\n\"He's been doing that since the incident with Kevin. He also asks some of the most intriguing questions.\" Marcella looked out her window and saw his vehicle. \"Speak of the devil.\" Her pulse jumped.\n\n\"Well, let's go for our walk. I bet I'll spot him before you do.\" Joyce laughed and started walking out the door.\n\n\"I need to nip this in the bud.\" Marcella sighed and dreading doing what she knew had to be done.\n\nJoyce looked at her friend like she had lost her sanity. \"Let's see how observant he is from afar.\" She took off her scarf and sweater and mixed them up with Marcella's jacket and muffler. She smiled when the items were in their proper place and a candy bar was on hers and a set of three chocolate hearts were on Marcella's.\n\nThe next evening, during class, she looked at Mr. Miller and wondered what was going on in his head. She looked at how he was sitting and noticed something that made her blush. 'He couldn't be that way because of me.' She tried to convince herself.\n\n\"Mr. Miller, I'd like a word with you after class.\" She finally said as everyone was gathering up their supplies and were heading out.\n\n\"Yes Ma'am?\" Kyle asked wetting his lips as he stood in front of her.\n\n\"It has come to my attention that you might have formed some kind of attachment to me.\" She held her breath hoping she didn't sound like a fool.\n\n\"And so...?\" Kyle asked, letting her have the control of the conversation for now.\n\n\"And, what do you foresee doing about this attraction?\" Marcella was out of her depth and she knew it.\n\n\"Ask you out on a date once I was sure you might return some of the attraction.\" Kyle shrugged.\n\n\"Do you realize how inappropriate that would be?\" She sighed as her middle went to mush. \"I am your teacher. I have the superior position. How would that look if it was in a business environment?\" She hated doing it, but boundaries were there for a very good reason.\n\n\"That is why I have kept everything above board and out in the open... thus far.\" He smiled. \"When the time is right, I'll ask, and hopefully you respond in the positive.\" He leaned forward, just into her personal space.\n\n\"That could never happen, Mr. Miller. I cannot date one of my students.\" Marcella hated to say it. She had actually started enjoying his presence in her class.\n\n\"Then I'll need a drop slip.\" Kyle shrugged.\n\n\"But you said you never back away from a challenge.\" She was shocked. He was her best student. He couldn't throw away all his hard work.\n\n\"If I drop your class I might have a chance of taking you out on a date. If, as you say, I'm one of your students and you'll never date me. The only logical conclusion I can make... is that I need to drop your class and take my chances on the aforementioned date. Since I will not be listed as one of your students any longer, I have a greater chance of success. It's all about priorities.\" He smiled at her, not backing off.\n\n\"You'd really do that just for the chance of a date with me\" She was stunned and flushed. \"Why...? I'm old enough to be your....\" She looked at Joyce's smiling face, looking into her class.\n\n\"Aunt...you're old enough to be my aunt.\" He stopped her thinking in the wrong direction. \"I wasn't planning on asking, until I passed your class on my own merits. But, if this is the way it has to be... so be it!\" He shrugged in indifference.\n\n\"Please, do not drop my class Mr. Miller. There are only three weeks left.\" Marcella finally said. \"I'll have to think long and hard about this conversation. I'll walk with my friend tonight. I'll see you next week Mr. Miller...please.\" \n\n\"If time and space are what you need, I'll be more than happy to give you a fair share of both. But please remember they are precious commodities, not to be squandered.\" He tilted his head. \"Goodnight Professor Estrada until I see you again.\" He strode out the room and nodded to Joyce as he passed, \"Ma'am\", and he was gone.\n\nHer heart raced and her head was filled with visions. She didn't know it filled her eyes with longing, which ensured Kyle's compliance. Marcella knew she needed to get some space to clear her head. Things that she had been able to suppress since that day in her living room, hit her right between the eyes and legs. She knew what her body wanted. Now she needed to figure out what she wanted.\n\n\"Don't even start....\" Marcella stopped Joyce from voicing her opinion.\n\n*****\n\nThe next morning, Kyle went into his office because the walls in his condo were closing in on him. He walked past what should have been an empty desk, but the seat was filled with a very pretty Becky.\n\n\"What are you doing here?\" He asked as he stopped for a second.\n\n\"Gary assigned me to you. He said you needed someone with my legal background as your assistant.\" She smiled at him. \"Something about conflicting messages.\" She looked, hoping for a clue to the cryptic message.\n\n\"I'm going to kill him.\" Kyle sighed. \"Call your girlfriend. Lunch, noon, my office; have something brought in.\" He shook his head and ignoring the gaping look Becky was giving him as he slammed his office door.\n\nAn hour later his phone buzzed. \"Yeah...?\" He answered irritable.\n\n\"Mr. Miller. Um, Jordan can't be here until after twelve thirty. Can I push back lunch?\" Her voice matched her person.\n\n\"That's fine... just remember I have a two o'clock and we'll be gravy.\" He released the button and dropped the phone. Within seconds he was back into his homework, marking quotes and writing notes.\n\nAt twelve thirty five, Becky opened the door and looked in. \"Where do you want me to set it up sir?\" There were two people behind her. One was short, dumpy, and fifty pounds overweight. The other was tall slim, had her head saved except for a small top knot that was dyed pink.\n\n\"The table will be fine.\" He looked at his books and closed them. He took out some cash and handed it to Becky. She smiled and handed it to the short dumpy one.\n\n\"Thank you. We'll let you know when we'll need your services again.\" Kyle was shocked. He didn't know why, but he was. \"Mr. Miller, this is Jordan, my....\" She blushed. \"We, um, live together.\" She hesitated since she didn't know that anyone knew about her and Jordan.\n\n\"Nice to meet you....\" Kyle shook her hand and noticed a small bit of paint that the tall woman missed on her hand. He motioned for them to sit. \"I thought we'd get this out in the open before tongues can wag and cause unnecessary problems.\" He sat down and received two very different stares.\n\n\"What going on Beck...?\" Jordon asked her mate. \"First the big promotion and now were having lunch with the owner.\" She was looking for any funny business\n\n\"What's going on, miss...? Jordan is it?\" He asked and then continued as she nodded. \"Is that I wanted you both to know that I know you are a couple. She got this promotion because our lawyer thinks I'm going to need her help as I transition over to taking over day to day control of the business. I didn't want any speculation or rumors messing up the works because Becky is a beautiful woman and I'm a single man.\" He took a big bite out of his sandwich. \"This is good.\" He mumbled around his food.\n\n\"Wow... okay... that was blunt.\" Jordan looked at me as Becky smiled and grabbed her hand under the table.\n\n\"Thank you Mr. Miller.\" Becky started.\n\n\"It's Kyle... Mr. Miller was my dad. Since we're working together, call me Kyle.\" He took a drink of the tea that was set in front of his place. \"Any questions...?\" He looked at them.\n\n\"Too many to think straight.\" Jordan answered. She took a bite and thought for a second. \"So I can come to company functions and we wouldn't have to hide our relationship\" She asked first.\n\n\"As long as decency is maintained, yeah I'd love to see you.\" He shrugged.\n\n\"What about benefits Mr., I mean Kyle?\" Becky asked, getting over the shock.\n\n\"What about them. Bring in valid paperwork and submit it. Dependants are covered as far as I know.\" Kyle took a bite and leaned back. \"That's why you have this job. Look into the legal ramification and do the right thing. Bring it to me or Gary before making any permanent changes.\" \n\n\"So, you support Gay Marriage?\" Jordon set down her sandwich and started re-wrapping it.\n\n\"I support marriage.\" Kyle corrected. \"I rather have you married than committing adultery. We have a strict morals clause here and I want everything on the up and up.\" He looked at the girls. \"If I know what's going on, then no one can hold it over your head. It keeps things cleaner in the long run.\" He shrugged as he continued eating.\n\n\"So, I could come here for lunch and visit Becky and do everything a normal couple would do?\" Jordan asked, looking for the trap.\n\n\"No make-out sessions in my office. No sex on the desk or in the elevators, but yeah. You're a couple and I expect you to act like a couple. If and when you get married, if you're not already, you'll have to sign a standard non-disclosure agreement. But that's normal too. We can't have what we do here to be public knowledge. Our competition would kill us if they knew what we were bidding. Let's face facts here. Becky will know everything worth knowing. She already knows more than I do. I can't afford for that information to get out.\"\n\n\"Um wow... Could I get a job here?\" Jordan joked, knowing she'd never give up her shop, for another nine to five job.\n\n\"Sorry no.\" Kyle startled them. \"Becky would be in your direct chain of command, since she's my assistant. We have a no fraternization clause as well. That's why we're having this lunch. So everyone knows the score and we can work accordingly.\"\n\n\"Wow... cool. Do what you have to Beck. You'll never find a better place for what you do.\" Jordan told Becky and kissed her quickly. \"I have to get back. Eva is in charge and we know what that can lead to. See you at home sweetie. Thanks for the lunch Kyle.\" She got up, gathered the remainder of her sandwich and exited, leaving Becky and I sitting there.\n\n\"Thank you Kyle... you don't know what it means to us.\" Becky smiled at Kyle. Her mother still wasn't talking to her because she moved in with Jordan.\n\n\"So, how long have you two been together? Oh, and I saw you at the mall one day. That's how I knew.\" Kyle said and finished his lunch as they talked.\n\n*****\n\nMarcella pushed Kyle harder than the rest of the class. She tore apart his answers just to see if he could think his way around it. She didn't want anyone to say he didn't earn his grade. She knew everyone in the class wondered what Kyle did to piss her off, but were happy it wasn't them. She caught herself thinking things she shouldn't be thinking as he sat there and just smiled at her as she ripped him a new one.\n\n\"Okay class, we have a pre-test to prepare for finals. Please remember this does count as part of your grade so be prepared.\" She sat behind her desk as the people groaned. \"You have until nine to finish.\" She gave them thirty extra minutes and she knew they'd need every second of it. \n\nShe couldn't sit still as she looked at her students. She kept her eyes moving so they wouldn't catch her looking at Kyle. She saw the lump in his pants and wondered what it felt like to have him make love to her. How it would feel to have that intimate connection again. She had to start wearing pads on the days he was there. She knew she didn't have a problem with feminine dryness.\n\n\"Time...!\" She called out and listened to the groans and complaints. \"Papers on my desk as you leave.\" She ordered. She was shocked when Kyle's was the first one there. She couldn't help herself. She thumbed through it. He had every question answered. He winked at her as he walked out.\n\n\"Don't forget Finals next week. There will only be one make up day, so no excuses.\" The rest of the class went past her in a blur. \n\nThat night for the first time in a long time, she took out one of her toys. She took her time to clean it. Fifteen minutes later, she was screaming out Kyle's name as her first climax in over a year ripped through her body. \n\n\"What am I going to do with you Mr. Miller?\" She panted, as the fan swirled air over her naked sweaty body.\n\nOver the weekend, Marcella helped her son Elias, his wife Carrie and their daughter Bonny; move into her house. For the first time she didn't feel the cold loneliness as the noise of her family surrounded her.",
        "The next week she did the hardest thing she could think of. Kyle set an invitation on her desk as he turned in his test. She handed it back to him. \"I'm sorry Mr. Miller, but not until after grades are posted.\" \n\nShe felt the parchment slip through her fingers and sighed as he nodded and walked away. Walking to her car, she felt his eyes on her as she got in. He might not have walked her, like they both wanted, but she knew he was there looking out for her. She didn't know how to feel about that.\n\nAfter he posted her grade sheet, With Kyle's A- at the top of the list, she stopped cold at her office door. In the center of her desk was the envelope. She slowly ran her fingers over it and bit her lip. She must have turned it over in her hands five times before Joyce's voice broke her concentration.\n\n\"So are you going to open it or sit there and admire it forever?\" She was leaning against the door. \"I was going to see if you wanted to go out for an end of the semester drink, but I think your mind is elsewhere.\" She smiled. \"From Mr. Miller I take it?\" She stepped in. \n\n\"I, I'm not sure.\" She sighed \"And to be honest I'm afraid to look. What if it's an invitation to a wedding or a funeral or something mundane like that? What if I pushed him away with how I treated him in class?\" She was nervous and didn't know why.\n\n\"What if you open the thing and quit being a coward.\" Joyce laughed. \"Here, I'll do it!\" She grabbed it from Marcella's hand and flipped it open. \"Ms. M. Estrada, you are cordially invited to an intimate dinner at Pascally's. Please RSVP. I hope to see you next Wednesday night at seven. K. Miller.\" She handed Marcy the invitation. \"He has class that's for sure.\"\n\n\"Pascally's is nice. Not too expensive, but not a burger shack either.\" Marcella was stunned. \n\n\"I'd be willing to bet, if your father was still alive, he'd asked him first. Talk about old time romance. He knows exactly what buttons to push.\" Joyce sat down. \"So, are you going?\" She put her hand on Marcy's arm.\n\n\"I shouldn't, but I think I am.\" Marcella smiled. \"I have to know what this is all about.\" She looked at her friend. \"I might even get a good dinner out of the deal.\" Her stomach dropped and her pulse raced.\n\n\"Good girl. I'll be close by in case he turns out to be a nutter. I doubt it, but you can't be too careful these days. It's about time Ross took me out for dinner again anyway.\"\n\nBy Wednesday night, Marcella was ready to break apart. \"Where are you going mom?\" Carrie asked as Marcella smoothed down her pleated skirt.\n\n\"I have a dinner date.\" Marcella sighed. \"It's been so long I don't know what to do.\" She smiled at Carrie.\n\n\"Just be yourself. If he's any type of man, you'll knock him dead.\" She hugged her mother-in-law. \"I'll keep a light on for you. Just go out and have fun. You've earned it.\" Carrie said all the things that she could remember needed to be said when she started dating her husband and was just as nervous.\n\nKyle on the other hand, was facing down his board again. \"Bill, I don't pull a salary from the business. Since the business is profiting from my education, it can pay for my tuition. Does anyone really have a problem with this?\" He was leaning on his fists so he wouldn't use them.\n\n\"I still don't see the need for you to have the main office. That space could be better used.\" Bill knew he couldn't back down. He earned that office and this up-start wasn't going to fuck him out of it.\n\n\"It was my father's, now it is my office. I'm not playing three card Monty with office space just to stroke your ego. Don't fuck with me on this Bill. I have your replacement already picked out. Just like Clancy's replacement is already being trained for his impending retirement. I might not have it all figured out, but trust. I know who owns this fucking business. So, if you want to keep your seat, sit the fuck down so I can get to my dinner date.\" Kyle refused to sit until after Bill was in his chair for over a minute.\n\n\"Gotcha...\" Gary smiled. He now knew who Kyle was going to see and how to go about seeing if this women was worthy of his attention. He had a promise to keep from a very old friend.\n\n\"Gentlemen, Mr. Miller is correct in his assessment. He is doing the work of an executive and holds the majority share. He has opened up enough shares for the necessary changes in management, but his shares will not dip under fifty five percent. He is Miller and Mott, and let us not forget it.\" Gary stood up. \"He has refused to pull a salary until he finishes his education and takes over complete control of the company. In his words he has to earn it! In my opinion, he has gone a long way in doing just that. Our stock is up and we have three great projects in the works. We are growing when other companies are shrinking. Our profit margin is solid and we hold no bad debt. And that... is what a senior executive should do for this company.\"\n\n\"But still...\" Bill tried again.\n\n\"Bill, you're beating a dead horse and Kyle wasn't joking. He has a list of replacements sitting on my desk. I'm vetting them now. He'd rather things stay stable until he knows everything he needs. But, he is prepared to do what is in the best interest of the company.\" He gave the infuriated man his best lawyer smile. \"Now, like Mr. Miller said. He has a previous engagement to attend to. I think we can close on that until next month.\" He needed Bill to stay until he could move some things around so it didn't hurt the business when Kyle booted his ass out the door. If he was lucky he might have two months.\n\n\"That is all.\" Kyle officially ended the meeting. He sighed and went back into his office. He looked at his watch and knew he needed to hurry.\n\n\"Let me show you why Bill wants this office so bad.\" Gary came in and pushed a button on the desk. A large section of the wall moved. Inside was a full bathroom with a shower and a closet. \n\n\"What the hell...?\" Kyle muttered as Gary walked past.\n\n\"Lucky for you, you're about the same size as your father. I'd have Becky send some of these out to have them altered to fit you. Save you a bundle from buying new.\" He pulled out a casual tan herringbone. \"This should do for tonight. It was a bit tight on William, so it should fit you fine. The ties are in the rack and cufflinks are in the second drawer. Have a good night.\" Before Kyle could say a word, Gary was out of the office as silently as he came in.\n\nKyle took a fast shower and found his father's bottles of Geoffrey Beene. It took a deep breath and breathed in the scent that was his father's. Splashing some on, he found a pair of tan slacks that fit. He looked in the drawer and found the set of links he had sent his dad from his first duty station. Of the thousands of dollars of sets there, they were displayed prominently. He put them on and found a solid green tie. Sighing, he looked in the mirror and checked himself.\n\nHe got there with three minutes to spare. He used the valet service and looked for his date. He stopped and took in her beauty. He had never seen her dress so well before. Everything she had on was sexy, demure and perfect.\n\n\"Ms. Estrada, I'm pleased you could make it.\" He spoke from behind her. \n\n\"Mr. Miller, you clean up nicely.\" She smiled at him. She sized up his attire and it fit with what she knew about him. It was nice, but not overly expensive. It looked custom fit, but with his build, he could make a bean bag look custom fit. She was glad she kept it subtle. She didn't want to overwhelm him with the trappings of a lifestyle she no longer lived.\n\nThey were ushered to their seats and the menus were placed. Kyle let the tension from the meeting flow out of him as he looked at her captivating eyes. She had long lashes that would sweep down and make him wonder what she looked like sleeping.\n\n\"Hello, I'm Carlos, your waiter. Would you like to look at the wine list? We have a vino-grappa, and a vino-blanka house wine, depending on the entree.\" He went through his spiel as they listened to him.\n\n\"A glass of Blush Zinfandel please.\" Marcella said and looked at her dinner companion.\n\n\"A Corona and lime please.\" Kyle said, not trusting his very limited knowledge of wine.\n\nThey chatted as they decided what to eat. Kyle kept having to adjust himself as Marcella would smile, feeling terrific that she could still do that to a man. Dinner was placed in front of them when Kyle finally started the information portion of the evening.\n\n\"My full name is Kyle Douglas Miller. My mother passed from cancer when I was in high school, and my father passed away last year from heart failure. I usually say he had a broken heart without my mom. I'm desperately trying to figure out his business before I drive in into the ground. I have a sister, but I haven't heard from her since the wake. She got what she wanted and bolted.\" He laughed. \"Sorry if that sounds like a mission brief, but that is what I'm used to.\"\n\n\"Well Kyle, I guess it could have been done another way, but it was effective.\" She smiled at him. \"Marcella Estrada... I might tell you my full name but not yet.\" She chuckled, hoping to take any sting out of her comment. \"I have three children. All grown... and one granddaughter with another grandchild on the way.\" She sighed. \"I was married for longtime until I caught him cheating on me. We divorced and I took back my maiden name.\" She put her napkin down. \"I'm sitting here wondering why someone like you would ever want to get to know someone like me.\" There, she said it.\n\n\"Why not... I'm thirty. Old enough to know what I like and I like what is sitting in front of me blushing.\" He chuckled as she blushed. \"I might have a kid from an ex-girlfriend, but I don't know for sure. She listed me with about ten other guys as the possible father. They haven't come after me for support, so I'm thinking not. If I do have a child, I'd like to raise them, but I'd never stay with a woman that needed more than me.\" He figured he might as well get that right out in the open.\n\n\"What type of business did your father leave you?\" She asked hoping to put the conversation onto a safer topic. She was shocked by the twelve year difference in their ages, well twelve and some months, since she was now forty three.\n\n\"A small aggregate business. I'm not sure of everything involved yet, but I'm getting closer. I work there until I can get my degree and fully take it over. My overhead isn't that bad so I can do both for now.\" He shrugged. From that point on the conversation floated from topic to topic. The conversation was intelligent and the company nice in a warm fuzzy way. Marcella had to keep pinching her leg to reassure herself this was real.\n\nWhen Kyle walked Marcella to the door of the restaurant, He leaned down and softly kissed her. \"I had a great time. I'd like to do it again sometime this weekend.\" He held her arms loosely.\n\n\"That would meet with my approval.\" She smiled and her face lit up. \"Dinner and Dancing Saturday evening?\" She wanted him to kiss her again.\n\n\"We can meet on campus at six.\" Kyle's pulse was throbbing. \"You make the arraignments and I'll be there.\" He kissed her again before handing his valet slip to one of the runners. She was still standing there as he pulled away. Her fingers touched her lips where he had kissed her.\n\n\"That was the most potent G rated kiss I've ever seen Marcy.\" Joyce walked up and hugged her friend. \"Ross and I are off; would you like to join us for drinks?\"\n\n\"What...? Oh, no... I think I'll just go home and....\" She bit her lip.\n\n\"You were taking notes I hope Ross.\" Joyce kissed her husband.\n\nLittle did any of them know just how many people were interested in their date? The management was pleased with the extra bump for their business on what was usually a slow night. They sat around and wondered who this couple was who garnered such attention.\n\nKyle got home and looked around his man pad and wondered if his might want to clean it up before Saturday... just in case. Marcella got home and floated in her bath tub reliving those two kisses over and over again. She couldn't wait for their next date. She just hoped that she could keep her hormones in check so she didn't come off looking like a slut.\n\nKyle spent the better part of a day cleaning the condo. He went from room to room making sure it would pass inspection. Every dish was in its place and every glass was dress right dress in the cupboard. He had all his laundry done and took his two suits out to the cleaners. He didn't worry about work. He knew Becky would call if there was a problem.\n\nMarcella changed her clothes ten times as Carrie and Bonny looked on and giggled. \"Do you mind if I bake some bread? I just love your convection oven.\" Carrie asked as she tried to keep up with Marcella's pacing.\n\n\"Do whatever you like dear. Think of it as your kitchen. I don't ever use it anymore.\" She primped in her mirror. \"How do I look? Not to slutty?' She spun around once.\n\n\"You look fantastic... So, I take it there is a chance of getting lucky tonight?\" Carrie laughed as Marcella blushed.\n\n\"Yes... no... I don't know. I might be late, and I might be early.\" She checked her lipstick one last time.\n\n\"Woo-hoo, don't forget the big stick...!\" Elias teased from the door. \"You better get going or you'll be late... when do I get to met him, being the resident male member of the family and all.\"\n\n\"This is only our second date. Besides, Kyle, well Kyle is a lot more man than you are right now dear. No offence intended, but still.\" She kissed her son and granddaughter before scurrying to her car.\n\nShe parked in her regular spot and looked around. She had never seen the campus on the weekend unless it was for an event. She smiled when she saw his car pull up. She opened her door. \n\n\"We can take mine or yours. Ladies choice...\" Kyle smiled. He was wearing a charcoal grey suit this time. Still in the moderately expensive category.\n\n\"How good are you at following directions?\" She asked him as she grabbed her clutch and got out of her car.\n\n\"I've never gotten lost... no matter how many times I've had to turn around.\" He got out and held her door open. \"I shall follow your directions even if they lead to the ends of the earth my Lady.\" He closed the door as she folded herself into his car.\n\n\"How well do you dance?\" She lifted an eyebrow as he got in.\n\n\"Well that would have to depend on what you call dancing. I can waltz without stepping on toes. I can do a mean box step. I might even do a decent boot scoot. But the gyrations they call dancing now... I'm a lost cause.\" He smiled. \"I can tiptoe through a pretty mean minefield too.\"\n\n\"A man of hidden talents.\" She looked at him, not knowing the tease from the truth. \"Just some old fogey dancing for me. I like my hearing too much to go to what the younger set call a club. Dinner is at Sparks at seven.\" She looked at him.\n\n\"On our way.' He pulled out and headed in the correct direction. \"My mom liked Sparks. Good food and the wait staff aren't snooty.\" He smiled.\n\n\"Yes, we must not have a snooty wait staff.\" Marcella smiled as her insides twisted into small knots.\n\nHours later, her feet were tired. Her belly was full of some great food and way too much wine. She didn't want the night to end. Marcella had forgotten how nice it was to go out and have fun for the sake of having fun. Kyle was the perfect Gentleman even though she could feel his reaction to her proximity. She remembered her daughter's poster that hung in her bedroom before she went to college.\n\nIt said, 'a good man is hard to find and a hard man is good to find'. It had some near naked body builder on it. Marcella thought she might have just found both.\n\n\"So my lovely, we have three choices.\" Kyle said as they stepped outside and tried to cool off.\n\n\"And what are those?\" She smiled at him and snuggled into his embrace.\n\n\"Your place, my place, or another place.\" He tucked her head under his chin.\n\n\"Why not back to my car?\" She asked wondering what he had on his mind.\n\n\"Because, you've had a bit too much fun to allow me to let you get behind the wheel of your car.\" He kissed the bridge of her nose. \"We can go to my place, but I have to warn you it is a man cave. We can go to your place and I could see where and how you live. Or, we can find a nice quiet place and talk until the sun comes up.\" She listened to his words and his heart beat in her ear.\n\n\"Well, then let's look at our options Mr. Miller.\" She slipped into her teacher mode. She had to or she was going to jump him right there. \"My place has my son, his wife and a three year old sitting vigil until I get home. Although I'd love to sit somewhere and watch the sunrise, I'm not really dressed for that activity.\" She pulled his face to her and kissed him like she had been dreaming of.\n\n\"So, um yeah... My place it is.\" He adjusted himself or he knew he wouldn't be able to drive. Kyle thought he must've broken all land speed records to the condo. He parked his car in the private parking lot and opened her door.\n\n\"This way and don't say I didn't warn you.\" He put his arm around her and walked her up to his unit. Marcella saw a midline condo unit. Look like one of those places that were investment properties that had a rotating door of students every semester. He opened the door and the smell of Pinesol and male wafted out at her. \n\n\"At least it is a clean man cave.\" She looked around and didn't think she'd find a speck of dust. \"You mother would be proud.\" She smiled at him.\n\n\"My mother would be appalled. She liked the lived in look. My drill instructor might be proud unless he found some dust on the light bulbs.\" The closed the door and gave her the grand tour. \"Most of this place is self explanatory, but it is enough for me right now, so this is home. Please, make yourself comfortable.\" \n\nSomething inside her snapped. \"You don't know what you are asking.\" She breathed and put a finger on his lips. \"It has been a long time since I've done this. Let me know if I make a mistake.\" She kissed him, but refused to let him pull her in. She wanted to be in control before all control left her.\n\nTo try and say Kyle hadn't hoped for this would be ridiculous. He prayed for this. He kept still as Marcella took off his jacket and placed it on the chair by the door. She took his cufflinks and put them in the breast pocket. She held his hands to stop them from reaching for his tie. Her slim fingers worked the knot and slipped it from his neck. She folded it and set it on the jacket. She loosened his belt and pulled out his shirt. She made it to the bottom button before her passion took over.\n\nKyle couldn't take any more. He scooped her up and kissed her like in his dreams. He carried her to his bed and thanked god he remembered to clean the sheets. His pulse was beating with a primal need of making this woman his and only his. He tried not to damage her clothes.\n\nHands, lips, fingers, and bodies meshed as they struggled together. Heat pounded and tension built. Marcella gasped out when he thrust into her. Her head swam with sensations as she willingly let him ravish her body. She knew she marked him as her center exploded outward. Her teeth found his hard neck as she nipped him to stop the scream from tearing out her throat.\n\nThere was no tenderness. There was only passion and long denied carnal need. He took, she took; they took. She gave, he gave; they gave. Her body responded to his every thrust. Her nipples craved his lips. Her hips relished each impact as they strained together. Friction built, eased by warm lubrication.\n\n\"OH MY GOD...!\" She screamed as they crested together. He pulled her and she pulled him. He couldn't hold back as her body demanded his seed. He tried, but the claws in his back refused to let him free of her body. He pumped and she clutched in a ritual as old as mankind.\n\n\"If that was out of practice, I'd relish the thought of when we find our rhythm.\" Kyle gasped for air as their bodies stayed tangled together on the torn sheets.",
        "\"I forgot how wonderful it felt to lose control like that.\" Marcella tried to catch her breath but didn't want his weight off her just yet.\n\n*****\n\nSaturday flowed into Sunday. Sunday morning, after their tryst in the shower, Marcella called her family to let them know she was okay and safe. She took their good natured ribbing as Kyle's hands were exploring her body. She couldn't remember when she had stood naked talking on the phone as her lover stoked her fires.\n\n\"I'll be home tonight.\" She promised as she hung up. \"If I can still move that is.\" She turned and captured Kyle's lips. \"Please tell me this isn't a one weekend fling.\" She nibbled down his neck and kissed his chest. \"Doesn't that thing ever go down?\" She felt him poke her and giggled.\n\n\"I'm sure over the next twenty years or so, you'll get it to go down a time or two.\" He picked her up as settled her in place as her legs wrapped around him. \n\n\"I am not going to be able to sit down.\" She winced as he speared into her. She was sensitive, but didn't want him to stop what he was doing. They didn't have to move, it was just the joy of being connected together. Marcella had to bite her lip as she sensitive parts were vibrated by her car all the way home.\n\nOver the next couple of weeks, she had started bringing a change of clothes to his condo. She knew he was doing the best he could and she was falling so fast she didn't care if he wasn't quite up to her level yet. He made up for it in so many other ways. The next thing she knew, almost half her wardrobe was at his place, as her children took over more and more of her house.\n\nShe knew she was in trouble the day Joyce came to get her. She was standing in her class, straightening the desks, as her fingers softly stroked the one where he sat. \"Oh dear, you've got it bad. Does he know you're in over your head?\" There was a look of concern on her face.\n\n\"We haven't made the declaration yet, but it will happen.\" Marcella smiled.\n\n\"I hate to pop the love bubble you're in, but the Dean wants to talk to you Marcy.\" She was frightened for her friend.\n\n\"What for...?\" She shook her head and went over her class schedule. Nothing unusual there, she thought.\n\n\"The sooner you get to him the sooner you'll know.\" Joyce pulled her out of the class room. \"I'll walk with you.\" She said as they quietly walked through the halls.\n\n\"Yes, you needed to talk to me Robert?\" Marcella was sitting across from the Dean, at his big old desk.\n\n\"Are you still upset that I had to pass you over as head of the department?\" He asked her.\n\n\"Not really... why?\" She wondered where that came from. \"I mean I am the senior professor, but I will not get into the politics of position.\" It hurt at first, but now she knew it was a blessing in disguise. \n\n\"When did you apply at Miller and Mott?\" He looked at her and knew the damage that would happen if she left the school.\n\n\"I haven't. I don't even know anyone over there.\" Marcella was shocked.\n\n\"I know that I haven't been in the business community as much as I used to. But, I know a vetting when it crosses my desk. From what I understand it came from Gary Mott himself.\" He looked at her for any wavering. He needed to know if they needed to call an emergency meeting. It would be a disaster if she left the school.\n\n\"We know they are in flux right now. They might just be fishing. Every since William Miller passed away last year, they have been restructuring. It is working though. Their stock is climbing.\" Something tickled the back of her brain, but she had to focus on Robert.\n\n\"Yes. They recently promoted a woman to the board. She's done a through house cleaning and there is pending litigation with one of the former board members.\" He sighed. \"You have to know we do know your contribution to the faculty.\" \n\n\"I thought Gary Mott was more the silent partner?\" It was just right there.\n\n\"We cannot afford to lose you. What is it going to take to keep you here and happy?\" He flinched, knowing he just gave her the upper hand.\n\n*****\n\nThat evening, she was tracing Kyle's ribs with her fingers. \"How was your day Kyle?\" She asked, wondering why that question never entered their mind until after they made love.\n\n\"Just another day in paradise. How's the family?\" He asked, running his fingers through her hair.\n\n\"Fine...\" She sighed. \"I'm thinking of dying it all black again, so I can look younger for you.\" She wanted to make him happy just to make him happy.\n\n\"Don't... I love you just the way you are.\" He kissed her head as her hands went still. She didn't know if her chest could contain her beating heart.\n\n\"Let me up love... I need to go to the restroom.\" She looked in his face and smiled. It was there. It wasn't just words. \"I had the most interesting conversation with my boss today.\" She had to change the subject or start crying happy tears.\n\n\"Oh, yeah... what was it about?\" He leaned back and watched her ass sway with her movements.\n\n\"He said someone at Miller and Mott was vetting me for a position. The only thing is, I've never applied at Miller and Mott though.\" She did her business and flushed the toilet.\n\n\"Oh, real subtle Gary... real subtle.\" He seethed. \"I ought to kick your ass.\"\n\n\"What was that honey?\" Marcella asked from the other room as she washed her hands.\n\n\"Nothing dear, just making some mental notes for work tomorrow.\" Lucky for him, her walking back into the room distracted him from his plots for vengeance.\n\nShe bit her lip as she slid back next to him. \"I wouldn't let a student get away with avoidance, so here goes.\" She took a deep breath. \"I love you Kyle Miller. I love you and I'm falling more in love with you every day.\" She looked at him to see his response.\n\n\"I love you too Marcella Estrada.\" He pulled her close. \"I've been waiting my whole life to find you.\" He kissed her and snuggled her into his arms. Everything else was forgotten as they made long, soft, peaceful, love to each other.\n\nThe next morning, Kyle watched her dress for work. \"God you're so beautiful.\" He sighed as she slipped into her sexy teacher outfit.\n\n\"I bet you say that to all your teachers.\" Marcella teased, while she applied her make-up. She felt shivers down her spine as he watched her.\n\n\"Do you have to go home tonight?\" Kyle asked dreading the night without her.\n\n\"My kids are starting to think you've kidnapped me. I have to make an appearance once in a while.\" She didn't have to move her head to see him laying there naked watching her. Her spine tingled as his body reacted.\n\n\"Well, you said they were basically taking over the house... why don't you just move in here with me? I hate it when you're not home when I get here.\" He had been thinking how to ask her for over a week.\n\n\"Kyle, honey... what would everyone think?\" She walked over to him and placed a finger on his lips. \"They would think I am your sugar momma or cougar and you are my cub or boy toy.\" She sighed.\n\nHe kissed her finger. \"I don't care what other people think. I only care about what you think. I'm in this for the long haul. When you're ready, let me know.\" He pulled her face down. \"Go to work before you are late. We can talk about this later.\" He kissed her tenderly and let her go.\n\n*****\n\nThat afternoon, Marcella was walking. \"He asked you to do what?\" Joyce asked stunned.\n\n\"To move in with him. He said he hates it when I'm not there when he comes home. I don't have the heart to tell him just how much I make. I could pay his rent five times over. I've checked how much those units go for.\" She bit her lip as thoughts tumbled in her mind.\n\n\"It isn't like you'd be living is squalor. If Carrie and Elias could take over your house payments, you could start rebuilding your retirement account.\" Joyce was thinking logically, since her friend couldn't when it came to this particular man.\n\n\"I love him.... I do! But I just don't know if he could get over the disparity of our wages. Some men get territorial over that. Kyle strikes me as one of those kinds.\" She sighed and fretted over what was the right thing to do.\n\n\"Ask yourself this.\" Joyce pushed her friend out of her comfort zone. \"Is where you live more important than who you live with? Are you really that shallow? From what I've seen, you have a man who loves you to death. Is where you live really that important?\" Marcella stopped.\n\n\"No, it isn't.\" It hit her in the head like a lead pipe. \"And if he loves me for me, he won't mind if we go find a place of our own even if I have to pay for most of it. He has a good job and works hard.\" It was finally clear to her.\n\n\"That's a girl. I knew you'd get it eventually.\" Joyce smiled at her friend.\n\nKyle was sitting at his desk when his cell rang. \"Yeah babe, what's up?\" He motioned Gary to be quiet. He wasn't done with him yet.\n\n\"Hi honey... I um, have a change of plans for this evening. I have to go talk to the kids, so I'll be home late. Is that okay with you?\" Marcella said quickly, before her class showed up. He could hear the breathless quality in her voice and felt the tug in his lap.\n\n\"Works for me babe. I'll have dinner ready and waiting.\" He smiled, liking the way she called it home. They said their I love you's and hung up. \"Now tell me again how you're more subtle than that Gary?\"\n\n\"Hey, when you pick them, you pick them!\" Gary smiled. \"She's tops in her field and would have been a chair or a dean if it wasn't for the glass ceiling. A bit of a messy divorce last year, but with the right pre....\"\n\n\"If you don't want your ass kicked.\" Kyle held a finger up. \"Forget that last word. If, and I do mean if, we get married. It will be as complete equals. I'm smart enough to protect the company. Hell, I learned most of what I know from her. I doubt it would hurt to have a business professor as a member of the family.\" He leaned back. \"Let me know when it's clear to give Bill the boot. I've had enough of his causing problems because he's butt hurt over this office.\" He changed the subject before he got mad again.\n\n\"Give me three weeks. I've already locked his shares and readied the transfer. Becky is on the watch for any voting shares going on the market.\" He sighed and looked at Kyle and saw his old friend. \"Time to make haste slowly. We have too many shares up for grabs right now and that never looks good.\" He thought it might be time for him to retire. He had lost too many friends over the last couple of years.\n\n\"What did the SEC want?\" Kyle rubbed his head.\n\n\"Same shit different day.' Gary shrugged. \"Looking for insider trading and making sure our percentage paperwork is up to snuff. They are always interested when you have fluxes like this. I set Darcy and Becky on him. Too much information and too much woman to remember it all.\" He smiled evilly. \"That was one frustrated bean counter.\" \n\n\"Keep it nice. We don't need issues with them.\" Kyle laughed. \"Hell, listen to me. Like you haven't been working them for the last thirty years.\" He chuckled. \"Pin my ears back when I do that again.\"\n\n\"Ye'suh massa.\" Gary laughed. \"I know what I'm doing son. But, your father would be proud of what you've managed to get done.\" Gary realized he was proud of Kyle too. \"Have a good night with your sexy professor.\" He waved and left the office.\n\nKyle was cooking lemon chicken over rice. It was one of his mom's favorite I'm getting home late meals. He had the rice covered and the chicken just cooked until it was tender. He watched the lemon sauce. He had the yellow food coloring ready for when it started to thicken. He heard the front door.\n\n\"Hi honey, I'm home.\" She called out. \"Sorry I'm so late.\" She came up and kissed him.\n\n\"Don't distract me woman.\" Kyle smiled. \"How did everything go?\"\n\n\"Fine... just fine.\" She smiled. \"The kids say hi... hey, that smells divine.\" She got a blast of the steam. \"I'm famished.\"\n\n\"Set the table and it'll be ready in a few minutes.\" He looked at Marcella and turned off the stove top. As she turned, he grabbed her and picked her up. He set her in the middle of the table and laid her down. Before she could shout in shock, he had his head buried under her skirt. He yanked the lace aside and buried his face in her scent.\n\n\"Oh god.... Don't stop.\" Marcella cried as her lover devoured her.\n\n\"Don't you know you are supposed to wait until after dinner for your dessert?\" Marcella was sitting on a towel as they ate naked. \"Who taught you to cook? This tastes great for it being almost cold.\" She took a bite as Kyle smiled.\n\n\"Her name's MaiLo'.\" He smiled at the memory. \"She runs the kitchen with an iron fist.\" He caught a drip of sauce from her lip.\n\n\"So, I wouldn't have to take over the kitchen chores then?\" She tried to bring the conversation to where it needed to be.\n\n\"We work as a team in everything. No assigned cores, not lists of things to get done. We work together, live together and love together.\" He kissed her fingers. \"So, that means yes?\" He held her eyes.\n\n\"Yes, I want to live with you. But there tings we need to talk about. But not sitting naked at the table.\" She smiled as her nipples hardened and his eyes glazed.\n\nThree nights later, she bolted from the bed. Her period had become sporadic over the last six months. She bit her lip as her stomach cramped and she knew there was no chance of pregnancy.\n\n\"You okay babe?\" A sleepy eyed Kyle stood at the door.\n\n\"Yeah, I just need some, um, supplies.\" She blushed and then felt faint. \"My cycle hit me hard this time is all.\" She grimaced in pain.\n\n\"Oh... that.\" He finally understood. \"Bullets or blankets...?\" He asked, remembering his mother during that time of the month.\n\n\"Both... extra absorbent.\" She looked between her legs and was surprised about the amount in the toilet.\n\nOver the next nine days, Kyle proved his love to Marcella with the new heating pad, back rubs, and tenderness, while she went through one of the worst periods since after giving birth. Marcella just chalked it up to menopause and sighed forlornly. She still had dreams and visions of having just one more child.\n\n*****\n\nA month later, she was having trouble keeping lunch down. Breakfast and dinner were fine, but lunch kept wanting to come back up. She went to the doctor and had a checkup. She did what the doctor said by keeping hydrated and eating smaller lunches. She thought it was just a stomach virus and it would pass.\n\nShe was cleaning up her room between classes when her cell rang in her purse. \"Hello...?\" She answered.\n\n\"Sorry to call you during work hours Ms. Estrada, but the doctor wanted me to check with you when it would be a good time to set the OB/GYN appointment?\" the young sounding lady asked.\n\n\"What appointment?\" She was confused. She didn't think she needed an appointment yet. Her bi-annual was coming up in a month or so.\n\n\"You insurance carrier needs the referral for the pregnancy specialist or they won't cover the extra costs. There is a good high risk team locally, but they are by referral only.\" She blathered on as Marcella grabbed a desk so she wouldn't fall down.\n\n\"I, I'm... I'm pregnant?\" She sputtered once she got the message of what the girl wasn't saying.\n\n\"Yes... didn't you now?\" The girl was stunned. \"It's still very early in the pregnancy, maybe three weeks. That's why we need to get the referral in. The sooner the better.\"\n\n\"I'll be there as soon as I can. Let me rearrange my afternoon.\" She was shaking.\n\n\"Okay, I'll let the doctor know.\" She chirped and disconnected the call.\n\n\"What's wrong Marcy?\" Joyce walked in and helped her friend to her desk.\n\n\"I'm pregnant!\" She was staring out the window. \"I need to... I need... I have to call Kyle. We have to go to the doctors.\" Her hand shook as she tried to hit the buttons to get Kyle on the phone.\n\n\"Here, let me do that.\" She punched the number three. \"I'll deal with your afternoon class.\" She handed Marcy the phone when is started ringing.\n\nKyle was in his office, dealing with Bill, Gary, and the issue. \"Bill, you are not ever getting this office. Get the fuck over it. I don't care what you say.\" Kyle was facing him down.\n\n\"I've more than earned it. I do have rights in this company.\" He was spouting when the phone rang.\n\n\"Hold on... I have to take this.\" He stood up and walked away. \"Hey sexy... what do I owe the pleasure?\" He needed the distraction.\n\n\"Kyle honey, I need to see you. We have to talk.\" He could hear the strain in her voice.\n\n\"What's wrong babe?\" He asked motioning his guests out of his office. Bill being an ass refused to move.\n\n\"We need to... I have to go to the... I'm pregnant!\" She said, putting Kyle on reaction mode.\n\n\"I'll be right there!\" In an instant he knew he had to get to her. He had to find out what she needed and he needed to plan accordingly. He turned to Gary. \"I'm out of here... She's pregnant.\" He grabbed his keys.\n\n\"We're not finished here. This is a business meeting. I don't care about some tramp you knocked up!\" Bill stepped in front of him.\n\nOnly because Gary was quicker, Bill wasn't harmed. \"He better not be here when I get back.\" Kyle said and ran out of the door.\n\nGary looked at Bill and sighed. \"You just fucked yourself Bill. Even I can't save you from that one. You just insulted the future wife of the CEO. You have an hour to clear your desk. I'll have your termination and stock transfer papers ready for you by then.\"\n\n\"You can't....\" Bill sputtered.\n\n\"Fucking watch me.\" His voice turned to steel. \"Or have you forgotten my last name. Let me remind you. I'm the Mott of Miller and Mott.\" Gary shoved the man out of Kyle's office and shut the door.\n\nKyle parked next to the curd, not caring about the ticket he might get. He ran down the hall towards her class. He didn't even remember if he turned off his car. \n\n\"She's in her office Mr. Miller.\" Joyce called to him before he barged in and made a spectacle of himself. He bound into her office and kneeled at her feet.\n\n\"Are you okay sweetheart?\" He was panting with his exertion.\n\n\"I'm fine now.\" She smiled at him. \"Are you mad at me?\" She didn't want him to be mad or feel like she was trapping him.\n\n\"For...?\" He was looking at her, his love flowing out of every pore of his being.\n\n\"Getting pregnant...\" He was so cute kneeling there. \"We haven't even settled the house issue and I drop this on you.\" She never knew love could go this deep.\n\n\"The house....\" He muttered. \"You need to go to the doctors you said?\" He wanted to scoop her up and carry her to his car.\n\n\"Yeah, they need to see us to get the referral to the group they want me to go see. They specialize in high risk and late in life pregnancies.\" She stroked his face. \"Shall we go?\" She wondered how long it would take him to move.\n\nHe whisked her to his car and made sure she was settled in her seat. \"Do we have a time for this appointment?\" He asked as he started the car.\n\n\"No, just sometime this afternoon.\" She smiled at him and wondered what was going through his head. She knew her priorities were looking for a bigger place. Something more suitable for raising a baby, her baby... their baby.\n\n\"Okay, we need to stop of at my office for a second. I need to get the paperwork for insurance and the keys to the house.\" He was shifting his decision making process as he went along.\n\n\"We can look at houses later honey. We might be awhile at the doctor's office.\" At least he was thinking houses. She just hoped they could afford something in a nice neighborhood with good school and all the amenities their child would need to grow up.\n\nKyle's brain was moving faster than he could keep up. He blindly pulled into his space and opened her door before she could undo her seat belt. Marcella saw the M. M. on the front doors and liked the office complex Kyle's business was in.\n\nHe escorted her to the back elevator and hit the top button. \"It'll only take a second.\" He pushed a number on his phone. \"Yeah Becky, we're on our way up. I'll need the proper insurance paperwork by the time I get there.\" He shoved his phone in his pocket as she looked at him strangely. ",
        "\"You get more flies with honey dear. Most secretaries don't like getting terse instructions like that.\" She said as the elevator lifted them to the top floor.\n\n\"I'm sure Gary told her what's up. He was there when you called.\" The door opened to a plush executive suite. The name Miller and Mott flashed before her eyes as Kyle whooshed into the office. \"Becky this is Marcella, the mother of my child. Where is the paperwork? We have to get to the doctors.\" He rushed past, leaving Marcella in Becky's capable hands.\n\n\"Would you like some water while panic boy looks what he needs?\" Becky smiled at the elegant woman standing in front of her desk. On the wall behind her was a framed copy of her diploma.\n\n\"Becky, where are those damn keys to the house?\" Kyle shouted as he rummaged over his desk.\n\n\"Top left drawer second compartment.\" Becky smiled and rolled her eyes.\n\nMarcella was stunned. Behind the beautiful granite desk was a picture of an older, pudgier version of her lover. The hair line had receded and the hair was thinner, but the resemblance was uncanny. She stepped forward to read the inscription. It read....\n\nWilliam Miller, CEO Miller and Mott Public opening at twenty five dollars a share.' Her eyes snapped to the door Kyle went through. On the plaque it said Kyle Miller Executive Officer. She saw his books for school scattered over his desk as he pulled out a set of keys and shoved them into his pocket.\n\n\"Here is the paperwork they'll need. If they have any questions, they can call Gary or Wanda in HR.\" Becky handed a packed of papers to Kyle. \"I already filled them out for you as much as I could.\" He grabbed the packet and was ready to head out. \"I need your signature on this first.\" She stopped him.\n\n\"What is it?\" He asked irritably.\n\n\"Bill's termination packet, Gary is buying him out, but he said it was worth it.\" She pushed the paper to the far side of her desk.\n\n\"As long as he's out of my building I don't care.\" He signed on the signature line and Becky notarized it. \"Let's go honey.\" He put his arm around Marcella and pulled her toward the doors.\n\n\"Nice meeting you. Maybe next time we can start getting to know one another.\" Becky called after them as Marcella waved.\n\nThe shocks came too fast for her to keep up. She was dating the CEO of one of the top business in the area and she didn't even know it. She thought she was a few steps above him, but in reality, he was leaps above her. He didn't work for Miller and Mott, he was Miller and Mott. All the little things that had been bugging her smashed to the forebrain with instant clarity. \n\n\"William Miller has two children. A daughter who is a model and semi-celebrity, and a son who joined the service to experience the real world before he stepped into his father's shoes.\" That article read so many years ago. When he had told her a small aggregate business, she thought construction. And, Miller and Mott wasn't a small business.\n\n\"How much are you worth Kyle?\" She finally asked as he hit the street.\n\n\"Personally, I don't know. The company just tipped over a hundred million.\" He shrugged. \"We'll double that once the three contracts with the government go through. But if they don't, we're still in good shape as far I know.\"\n\n\"Why didn't you tell me?\" She was getting pissed. \"You have a Princeton Law graduate as an assistant. You had my background checked and had me vetted!\" She couldn't look at him as her head swam with too much information. \n\n\"I didn't hide it. I won't actually take over the business until I get my degree. And No, I didn't. Gary did it without my permission. I gave him hell for it once I learned of it.\" He paid attention to his driving.\n\nShe was going to argue, but she had to admit, he didn't hide it. He didn't brag about it either. All the information was right in front of her. She had just never put it all together until then. \"You have some explaining to do later.\" She put her hand on his as everything washed over her.\n\nHours later, after she had been thoroughly gone over, she was being driven into a very exclusive neighborhood. \"Where are we going Honey?\" She was tired and wanted nothing more to lay down and snuggle.\n\n\"I need you to look over the house. If you don't like it, we can sell it and get something else.\" Kyle turned down what looked like a street, but ended at a gate. He pushed a button. \"I forgot the remote.\" He shrugged.\n\n\"Yes... who is it?\" A woman's voice came over the intercom.\n\n\"MaiLo', its Kyle... I forgot....\" He said but was cut off.\n\n\"Mr. Kyle... you come home. I'll open the gate.\" She said excitedly. \"Mr. Kyle is home... go get things ready.\" She said to someone else before the connection was lost.\n\nThe gate opened and Marcella got the next shock. In front of her was a beautiful estate. Manicured lawns, a large detached garage, which had cars in every spot, but the last one. Her house could fit in this one as a rattle. \n\n\"Who keeps all this up?\" She asked as they pulled into the curved drive.\n\n\"MaiLo' and her family.\" She remembered him telling her about how MaiLo' ran her kitchen with an iron fist. It didn't make sense at the time, but it was weird that he had grown up with a chef in the kitchen.\n\n\"Mr. Kyle, Mr. Kyle, you finally come home.\" A short woman with grey streaks in her long black hair came running out of the front door. \"Mr. Gary call. We make up room for you and mother of baby.\" She looked at Marcella. \"I am MaiLo' the house keeper. If you need anything, please just ask.\" She bowed once and then hugged Kyle like a long lost child.\n\nThe shocks didn't stop there. Marcella wondered what the hell she was getting into. When Kyle said MaiLo' and family... she thought of maybe five or so. There were fifteen of them. Each and every one of them had a job on the estate. She needed some time to think as Kyle and the family talked about changes to the house.\n\nShe walked past the open garage doors looking at the cars sitting there just begging to be driven. \"The Silver Shadow was my mom's, The Bentley my dad's. They're classics now.\" Kyle hugged her from behind. \"I've been offered a million each or five for the set, but I just can't let them go. My dad drove the Range Rover back and forth to work. It might be the best car for you and the baby.\" Marcella started shaking.\n\nShe was laughing and crying. \"I was thinking a nice rambling rancher in a good community. Something big enough for us and the baby but still affordable. Maybe a dog running around in the back yard, yapping and getting into mischief with our child.\"\n\n\"Don't say dog around MaiLo' she'll have a litter of Char Pei's tripping you before you can blink.\" Kyle laughed. \"Are you okay?\" He asked worried that this might be too much for her.\n\n\"I am more than okay.' She sighed, snuggling into his warm embrace.\n\n\"Good, then this might be the best time to ask you to wear this.\" He gently turned her. \"It was my mom's favorite.\" In his hand was brilliant Asscher Diamond solitaire. It had to be five carrots, sitting on a platinum and gold ring. \"I was hoping that our child's parents would be married when it comes into this world.\" He slipped the ring on her finger as she cried and nodded yes.\n\nShe wiped her tears and told him. \"It is Marcella Angelique Maria Teresa Constantine Estrada. Get it right at the ceremony or you're in a world of hurt.\" She kissed Kyle as he tried to absorb her full name.\n\nThe next semester:\n\nIt will be two more weeks until Jordan says the nursery will be finished and the paint smell is out of the house. MaiLo' insists we stay in the condo until she can get the house cleaned and ready for its new mistress and our baby. She is also making sure there is enough room for all the kids and grandkids to come visit for the holidays. My life has turned into a whirlwind, but I have never been happier. \n\nI gave my car to Carrie when we signed over the house. I was badgered into taking the Range Rover. By my loving husband, my son who drools every time he sees it, and the little woman who runs my new house with an iron fist. I am more than happy my old house is staying in the family. It was what my parents wanted.\n\nMy only complaint is that I have to go out and buy new shoes. It seems that the new puppy has a thing for my left shoe. If I take them off, even for a second, I'll find the left one scattered somewhere in the house, with MaiLo' chasing the dog, threatening her with death and destruction. She wants the puppy Cho, to be trained before the baby arrives. I just don't know who is training whom.\n\nKyle has one more semester until he finishes his program and takes over the company full time. He has been taking over more and more of the day to day decisions, with my and Becky's help. I made the mistake of looking up the net worth of my husband out of idle curiosity. I almost fainted and closed the page before anyone could know what I did. I didn't have to worry about my retirement any longer. \n\nSchool has started again and I was in mid lecture when a brash young man interrupted my speech on morality in the workplace. \n\n\"Professor Miller, why would personal morality have anything to do with corporate morality? It shouldn't matter what someone does in their personal life....\" Ah, the arrogance of youth.\n\nI was stunned for a second. I haven't become used to my new name yet. With an unconscious movement of my hand, I feel my ring press into my finger. Flicking the band with my thumb, I smile and poke the wind out of the brash student who was trying to impress one of the girls in the class.\n\n\"Mr. Jones; if you lie and cheat in your personal affairs; what is to stop you from cheating in your business affairs? What honest company would want someone who is a liar or has to cheat to get ahead? Let us take look at the current business practices and their costs to the business world as we know it today.\"\n\nI look down and see the starting of the bump that would soon announce to the world my happiness. Little flutters impact my insides, letting me feel the love that is growing inside of me. I can't wait to get home.\n\nEnd.\n\nPost Script:\n\nI hope you enjoied this story. I'm sorry if you were expecting a bit more in the sexual discriptivness, but my wife asked me to tone it down a little bit and see how it flowed. I suppose I should have warned you in the biginning, but wanted to see the responce wihtout forewarning. Plese let me know how I did by voting and or leaving feedback or comments.\n\nThanks again:\n\nMyhands316."
    ],
    "authorname": "Myhands316",
    "tags": [
        "mature woman",
        "cheating",
        "anal",
        "younger man",
        "teacher",
        "student",
        "older woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/after-the-wife-walks-in"
}