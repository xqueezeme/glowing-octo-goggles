{
    "title": "There and Back Again Ch. 127",
    "pages": [
        "Chapter One Hundred Twenty-Seven: Emergency Measures\n\nThe messenger opened his mouth, and the next words out of it would send me reeling.\n\n\"The ship carrying Her Maj-...er, I mean, Lady Anora, to Nevarra was scuttled. There were some survivors, but Lady Anora wasn't among them.\"\n\nThe four of us sitting in the dining room were in an immediate uproar, everyone yelling questions, until Alistair finally hollered over the din, silencing all of us. \"Alright, please, start at the beginning. When did this happen, what do we know, and who survived?\"\n\n\"I don't know all the details, though some may be in that letter.\" The messenger pointed at the envelope Aedan was holding. \"I know some of the crew survived, as well as Warden Loghain. He and some others were escorted back to Denerim to allow the details to be sorted out. It happened...oh, must have been ten or twelve days ago, now, but it took a while for word -- and the survivors -- to make it back to Denerim.\"\n\nAedan dismissed the messenger, ripping open then envelope once we were alone. He scanned the contents of the letter quickly as the rest of us speculated quietly.\n\n\"That bitch!\" I hissed. \"Did she arrange this? Maybe somehow she got off the ship first, faked her death so she could go stir up trouble for Cailan?\"\n\nAlistair's mouth sprang open in surprise. \"I hadn't even thought of that. Maker, what a mess!\"\n\n\"I wouldn't put it past her,\" Zevran agreed; \"she is devious, that one, yes? But she also has no shortage of enemies. There are any number of people who might think to gain favour with our illustrious monarch by assassinating his ex-wife.\"\n\nAedan started swearing loudly as he finished reading.\n\n\"Loghain survived, as did Erlina,\" he explained. \"It seems Riordan...didn't make it.\" His voice cracked, and I stifled a sad little whimper trying to escape. \"Cailan doesn't really know a lot of details yet, but it sounds relatively certain that Anora died. He's asked us to come back for support -- he doesn't sound like he's coping particularly well -- but also to decide what to do with Loghain.\"\n\nHe handed the letter to Alistair, and I read over my husband's shoulder; it was basically exactly what Aedan had said -- an appeal for help, with virtually no details provided other than that the survivors were being asked to stay in Denerim until we arrived. It didn't even say if Dougal had made it.\n\nAlistair pulled me in for a hug, and I reached out for Aedan's and Zev's hands as we all tried to mourn Riordan -- but briefly. It was clear we'd need to be leaving, and soon.\n\n\"I'll go pack for us,\" I told Alistair. \"How are we going to be travelling?\"\n\nHe and Aedan exchanged worried glances. \"I'd say horseback, but...\" Alistair trailed off, clearly reluctant to voice his lack of confidence in my riding abilities.\n\nI had no such qualms. I pouted. \"I'll never make it all the way to Denerim. I can barely get around the arena without bruising my ass!\"\n\n\"What if you double up?\" Aedan suggested. \"We can bring an extra horse to carry our packs, and the two of you can trade off to spare any one horse the double burden the entire way. And riding double will be easier on your ass,\" he added with a smirk.\n\nI groaned. \"Fine! Fine. Just so you know, I may have to deal with the sore ass, but you all have to put up with the whining. You guys go deal with the Wardens; I'll get us ready to leave.\"\n\nZevran followed me up the stairs to pack for himself and Aedan, while I began hunting for bags to put things in. Months of travelling by foot had made me efficient at packing, but this was different. If we were going to be at court, I'd need dresses, Alistair would need fancy clothes, and we'd both need shoes; we needed bedrolls and tents for the travel, not to mention food and water skins.\n\nVarel dropped in as I worked, wishing me a good trip. He made a recommendation that made a lot of sense, as much as I knew Alistair wasn't going to be happy about it. I'd known for some time that I was going to have to go to Soldier's Keep at least for a while. Leaving my seneschal to do everything was one thing, but I needed to at least drop in and approve everything he'd done, not to mention check up on my soldiers and the Wardens stationed there. On the way back from Denerim, after our visit with Cailan, was probably the best opportunity I was likely to get. Cailan had promised me another batch of soldiers, so I'd have protection while I travelled, and while it wasn't exactly on the way between Denerim and the Vigil, it wasn't that far out of the way either.\n\nI packed accordingly.\n\nZevran helped me arrange my bundles of things into packs a horse could carry, and we were both done before Alistair and Aedan finished giving instructions to the rest of the Wardens. Conrad was left in charge, as usual, with instructions to patrol the areas previously cleared, but not enter the Silverite mine or engage the Architect in any way. Scouting the Dragon Bone Wastes would wait until we got back from Denerim.\n\nWhen I mentioned my planned side-trip to Soldier's Peak, Aedan prepared Bel to head that way with a group of Nathaniel's soldiers; Bel would replace Faren, who had been at Soldier's Peak for months, and the soldiers and Faren together would be able to escort me from the Peak back to Amaranthine. Alistair wasn't happy about the planned separation -- neither am I, if I'm honest -- but he understood the necessity of it; he tried to find a way to justify coming along himself, but Aedan needed him. It wouldn't have worked.\n\nThe four of us loaded our things on Sadie, who was apparently to be 'my' horse, and then, fully armoured and armed, we all mounted. Alistair climbed first onto a huge, sleek, black horse unimaginatively named Midnight, and then pulled me up into his lap. Despite his borrowed plate armour and my leathers, it was an interesting, and definitely not objectionable way to ride, I decided. Alistair's strong arms wrapped around me from behind, his breath blowing my hair around, his legs somewhat cushioning mine, his groin pressed against my ass; I shifted, and he grunted softly in my ear.\n\n\"Behave,\" he commanded, the grin almost audible in his voice despite the sadness we were both feeling.\n\nI giggled. With a last wave, we headed out.\n\nAt first, Aedan kept a reasonable pace. Trotting, I discovered, was much easier to learn when snuggled up against someone you loved. In retrospect, after feeling Alistair's powerful legs moving, the rhythm was obvious, and soon I was bouncing along happily -- posting, evidently -- and enjoying the occasional frustrated groan from behind me as my ass grazed against Alistair over and over.\n\nWe hadn't gone far when we heard the sound of more hooves -- a single rider, from the gait, and coming up fast behind us. Nervous, for some reason, we all turned and reached for weapons just as a head of flaming red hair came into view.\n\n\"Leliana?\" I called, incredulous. She's leaving Nate?\n\nThe bard nodded at me, her answering smile not reaching her eyes. \"I think I may be able to be of use to you, yes?\"\n\n\"Leli...\"\n\n\"Not now, my friend, please?\"\n\nI could see she was barely holding on. If I pushed it, she was going to be crying, and I knew she wouldn't want that. I nodded slowly, and she pulled her horse in ahead of us, leading us at a brisk pace down the heavily wooded road. I met Aedan's worried gaze with one of my own; I silently promised to make sure she was alright later, once we'd camped.\n\nIf I'd thought trotting was fun, on a horse, it turned out cantering was better. Far smoother for the rider, cantering was the closest I'd felt to flying since leaving Earth. It reminded me somewhat of driving in a car with the windows open, and I reveled in the cool fall breeze whipping my hair back; Alistair enjoyed that less, and I soon tied it back. Galloping was even more fun, and I cackled with glee as we pelted down the road when we hit a nice, long straightaway. But we couldn't maintain that pace for long -- especially with one of the horses carrying two of us -- so most of the time we trotted, allowing the mounts to walk and catch their breath periodically.\n\nWe'd left mid-morning, but thanks to fresh horses, we made good time; Alistair and I traded horses halfway through the day, after repacking our stuff onto Midnight's back. We'd have to take it a bit slower, after the first day, if we didn't want to harm the animals, but Aedan figured we'd be able to make it to Denerim in just under three days. I'd spent most of the afternoon with Alistair coaching me, holding the reins, getting used to controlling a horse, developing instincts for what to do in different situations. I had a tendency to flail my feet when I got anxious, which naturally spurred the poor beast on instead of stopping it; it wasn't going to be an easy habit to break.\n\nCamp the first night was a nostalgic reminder of camps during the Blight. There were only five of us, but we laughed and joked around a meal of biscuit, jerky, and cheese. Leli volunteered to take first watch, and as we'd stopped late and ridden all day, we all collapsed into our tents with appreciation. I tried to stop and talk with Leliana, but she held up one hand before I'd even managed to say anything, and I took the hint, squeezing her fingers lightly and leaving her alone.\n\nAlistair and I both smelled like horse, and we were exhausted; despite both of our low-level arousal for much of the day from rubbing against each other suggestively, we just slept.\n\nThe next morning we discovered Leli hadn't woken anyone for watch; the bard had stayed awake all night, obviously hurting, and I was worried. She still wouldn't talk, walking briskly away when I tried to catch her in the woods after morning ablutions; I couldn't exactly chase her down, given the horrible, unexpected pain in my legs and hips. I'd underestimated how much riding would hurt, and I hobbled around the camp pitifully like an eighty-year-old. Everyone else was only somewhat stiff; I thought I'd cry if I had to get on another horse.\n\nZevran handed me one of the small healing potions he'd brought, anticipating my need, and I sighed gratefully as my achy muscles relaxed. I vowed to stretch better at the end of the day, and then did a few stretches while loading packs onto Sadie again. The second day continued like the first; we rode as quickly as we could without hurting the horses, covering an impressive amount of ground before camping again. This time we shooed Leliana off to her tent right after eating; the fatigued bard had been swaying in her saddle by the time we stopped. The rest of us took turns on watch, and had another peaceful, if too short, night.\n\nLeli didn't look much better rested the next morning; I'd taken a healing potion before even getting out of my bedroll, and so I cornered her after breakfast while the guys were packing our gear onto Sadie.\n\n\"Talk to me, Leli? Please? You're my best friend. Don't lock me out.\"\n\nThe bard sighed, taking my offered hand with a quick squeeze. \"I just...I need to talk to Dorothea.\"\n\nI looked at her closely. \"What does that mean? Are you leaving him? Or asking permission to be with him? And how does coming with us help -- aren't we going the wrong way? You could have taken a boat from Amaranthine.\"\n\nHer look got evasive, and I raised one eyebrow. Avoiding eye contact, she muttered, \"She's in Denerim.\"\n\n\"What?\"\n\n\"Dorothea is in Denerim. I got a message through the Chantry in Amaranthine. She's going to be Ferelden's next Grand Cleric, if Cailan will allow it.\"\n\n\"What?! That's not supposed to happen!\" My shout drew attention, and the guys looked over; I waved them off. \"Leli!\"\n\n\"I know. Cailan exiling Elemena has changed things. But I just got word that Dorothea was chosen, and has arrived in Denerim. I need to speak to her, Sierra. I need counsel. You are my friend, but it is to her that I owe-\"\n\n\"-Nothing. You don't owe someone something for being a decent person, Leli. I know she helped you escape when Marjolaine turned you in. That makes her not a monster, it doesn't make you beholden to her. I absolutely think you should talk to anyone you want to about this, but you don't owe her anything.\" I wrapped the bard in a hug, and she squeezed me back. \"How did you leave things with Nathaniel?\"\n\nShe flushed.\n\n\"Oh, no, Leli -- please say you didn't leave without telling him.\"\n\nShe gave me a startled look. \"Maker, no! Of course not. I told him I had something to do, and that I was not sure when I would be back. He let me go, and told me he would wait as long as it took.\"\n\nI resolved to hug Nate next time I saw him. \"That's so sweet!\"\n\nShe nodded shyly. \"I just...I hope I won't disappoint him. I told him I would understand if he moved on. I almost...I almost hope he does.\"\n\nI fake-punched her shoulder. \"Don't even say that!\"\n\nShe smiled slightly. \"Would you come with me to meet her?\"\n\n\"Dorothea?\" I considered. \"How much does she know about me?\"\n\n\"I was not able to get word out before the Landsmeet, not that I would have tried with everything we were up against. I have since told her I had a friend I thought she would like to meet. That is all. But Sierra...I would like to tell her everything. Of all the people in Thedas, she is perhaps the one who needs to know the most, yes?\"\n\n\"I'll think about it. That's all I can promise. I know you feel strongly about your beliefs, and I respect that, but there's a difference between faith and religion. The Chantry has a lot to answer for.\"\n\nThe redhead nodded. \"I know, and so will Dorothea. I plan to tell her everything I have seen -- surely the Maker never meant for elves and mages to be so mistreated, for those who are supposed to spread the Chant of Light to use their power for personal gain and politics. If she doesn't already know, I will make her see. If she is still to become the Divine, she needs to understand. This is why I'm torn -- I could do so much good for so many if I could work to change the Chantry from within!\"\n\nI smiled sadly at her. \"Or, you know, she could. The Left Hand of the Divine has a lot of power, but Dorothea actually will be the Divine...But from what I have seen and read, while she may have progressive views, she either could not, or would not do anything about it. I'm sorry, Leli, I know how you feel about her, but...\"\n\n\"Will you tell me what you know? You've implied such things before, but never told me the details.\"\n\nI sighed. \"I'll try. It's been a long time, and I was always more interested in this part of the story, the Blight and the Wardens -- I'm not sure how much detail I remember.\"\n\n\"Yes, well, handsome ex-templar Wardens have a way of distracting one, no?\"\n\nI giggled and blushed. \"That's not why!\" She raised her eyebrow at me artfully, and I rubbed my nose ruefully. \"Okay, that's not the only reason why.\" We both laughed.\n\nI rode with Leliana for part of the day, huddled behind her, allowing Alistair and me a reprieve from the arousal of rubbing up against each other; I spent the time telling her what I could remember about the Chantry from the second Dragon Age game, as well as the book \"Asunder\". I hadn't read any further into the future than that, if more books had been written, and the third game had only been a rumour when I came to Thedas. I told her about Meredith, mad with power and Lyrium; Elthina, hiding her almost criminal inaction and the insubordination of her underlings behind prayer and belief that things will happen 'the way the Maker wills'; Petrice, stirring hostilities with the Qunari in Kirkwall; the templar, Alrik, and his Tranquil Solution and mage abuse; Lord-Seeker Lambert, a zealot who was allowed to take over the Circle at Val Royeaux, and tried to cover up evidence that the Rite of Tranquility could be reversed. Lambert also annulled the Nevarran Accord, and slaughtered many of the Senior Enchanters at a Divine-sanctioned Conclave.\n\n\"At the end of the second game, you're in Kirkwall, working with a shady female Seeker looking for the Champion, presumably to lay the blame on for letting everything get so out of hand. Like there was really something she could have done, without knowing the future as I do.\"\n\n\"Which Seeker?\" she asked. \"There aren't that many women, and few that I would describe as 'shady'.\"\n\nI thought about it for a moment. \"Um, Cassandra, I think? She is -- will be? -- the Divine's Right Hand. She has an odd accent I didn't recognise.\"\n\n\"Cassandra Pentaghast?\" Leliana asked, her tone incredulous.\n\n\"Uh, could be? Young, pretty in a bitchy sort of way, dark brown hair?\"\n\nLeliana let out a musical peal of laughter. \"Cassandra, 'shady'? Tell me you're joking. I know her well; Cassandra would be the least likely person I can imagine to be described doing something 'shady'. Even her shadow could not truly be called shady.\"\n\n\"Well, I don't know, but she came to Kirkwall at the end of the game, captured my- uh, Hawke's friend Varric, interrogated him, possibly torturing him for the whereabouts of Hawke, and when he convinced her he didn't know, she held him prisoner until he told her everything he knew about Hawke and her friends.\" I giggled internally at the slip-up of calling Varric 'my' friend. Even after playing the game only once, it feels like he is.\n\nLeliana frowned.\n\n\"You don't believe me?\"\n\n\"Of course I do, my friend. I just cannot reconcile what you are telling me with the woman I know. Cassandra embodies everything that is good in the Seeker order. She saved the Divine from a plot within the Chantry to murder her; she believes in mage rights. Her lover is a mage! I cannot believe Cassandra would-\"\n\n\"It doesn't happen for another seven or eight years, Leliana. A lot can happen in eight years.\"\n\n\"I suppose.\" The bard was quiet for a while, clearly thinking.\n\nI broke the silence. \"Leli?\"\n\n\"Yes?\"\n\n\"Can I ask you something? You don't have to answer, but I'm just curious.\"\n\n\"Anything.\"\n\n\"Why were you really in Lothering?\"\n\nThe bard sighed. \"I did not lie to you, Sierra. I was just there as a lay-sister. After my escape...well, Mother Dorothea saw skills in me she needed, but I was floundering. I did not know who to trust, did not even trust my own faith. My belief in the Maker was too new, my anger too fresh. I was of no use, to myself or anyone else, and I endangered myself and others in my distress. Lothering was a place to let go of my past, to embrace my faith, to learn to trust in the Maker and his bride again. In order to make a difference, I needed to centre myself, to learn humility and piety, to trust my own judgement. I was meant to be there another year, perhaps two, but then the Blight, and my vision...\"\n\n\"And Dorothea thinks you're ready now?\"\n\n\"I do...I did. I was not exiled to Lothering. I was to stay there as long as I needed to, and my time there is over.\"\n\n\"But now?\" I asked.\n\n\"Now I am not certain. I am torn, Sierra. There is so much good I could accomplish, working for Dorothea, but my heart...\"\n\n\"...is with Nathaniel.\" I hugged her from behind, and she rested her head against mine briefly. \"I hope, whatever you decide, that you find happiness, Leli. Saving the world is admirable, but if you're unhappy at the end, it isn't going to be enough. I can say I have definitively learned that, this past year.\"\n\nShe laughed. \"I suppose I should take your word for it, at that.\"\n\n\"So tell me...you were always grilling me about Alistair; how's Nate been treating you?\"\n\nWe spent the rest of the morning giggling about our love lives, Leliana clearly relieved at the change of topic. Alistair rolled his eyes good-naturedly in our direction, guessing what we were talking about. His improved confidence, especially since the wedding, meant instead of being horrified, he was more bemused by the discussion.\n\nWe stopped at our former campsite outside Denerim, near a small lake, to get cleaned up before we entered the city; it was supper time, and chilly in the fall weather, so we took as little time as possible, each using my shower head and some of the soap I'd brought, drying off and redressing quickly. I was slightly disappointed, half hoping for some time to reacquaint myself intimately with my husband's gorgeous body, but the cold dissuaded me from that plan. It was probably the longest we'd gone without sex since the Archdemon, I reflected, and I was feeling a bit desperate.",
        "Obviously feeling the same disappointment, Alistair pulled me aside as I finished brushing my wet hair, dragging me behind a nearby boulder and kissing me senseless. One arm held me around the waist, pulling my unresisting body close as he thoroughly explored my lips; the other hand wove into my hair, tousling it completely, but I couldn't even bring myself to complain as I lost myself in the kiss.\n\n\"Tonight,\" he gasped, panting, when we came up for air.\n\nI couldn't have agreed more.\n\nFinally ready, we remounted and entered the city. It felt strange, after all the fanfare of the last few times we entered Denerim, to almost sneak in with no one the wiser. We trotted quickly through the city; the streets were quiet, as it was almost dark, and no one even seemed to notice us. Leliana peeled away from the rest of the group at the Chantry, promising to catch up with us in the morning; the rest of us continued on to the Palace.\n\nThe gates were closed when we rode up; Aedan climbed down to have a conversation with a cranky guard, who eyed us suspiciously and wouldn't open up; in the end, Alistair and I were announced as Prince and Princess Theirin, much to my dismay, but at least the gate was opened. The pomp and fanfare that had been missing on our ride through the city was suddenly back in full force. We ended up dismounting and parading through the courtyard, our bags being taken by servants as the horses were lead to the stables, and Alistair and I ended up leading Aedan and Zevran through a hastily assembled company of soldiers saluting us, up into the palace.\n\nI felt really awkward about the whole thing, standing stiffly and feeling uncomfortable, until a small voice broke through the shuffle of soldiers and servants around me.\n\n\"Sierra!\" Blake came barreling down a side hallway, dodging easily between armoured men and, to my surprise, throwing himself into my arms. He hasn't done that since Redcliffe.\n\nI hugged him, feeling him almost melt into me, and looked over at Alistair with concern. \"Blake! It's good to see you, kiddo. You okay?\"\n\nHe pulled back briefly, sending a tremulous smile to Alistair, Aedan, and Zevran. \"I'm fine. Really. But I'm so glad you're here.\" He glanced around and then went up on tiptoe, leaning in to whisper in my ear. \"I think the King's going mad.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-127"
}