{
    "title": "Secret Sins Ch. 05",
    "pages": [
        "Nipasinakoosewin \n\nMy Wednesday morning stroll was shorter than I would have liked. This was due to the fact that I hadn't gotten out to buy better walking shoes the night before. I'd stayed in instead, Donna and I slumbering in my bed after our bath until she left later that evening, when she was sure I was feeling better about myself. And I was. Wednesday morning, however, was another story. \n\nThe things she'd told me the night before, the reasons why I could be sure that Darren and Haley would never say anything and the whole lesson on the mechanics of salvation, were true and still held so in my mind. This wasn't exactly what was bothering me. The thing that had my mind completely occupied as I strolled the quiet, residential streets was a growing feeling that there was something... wrong. \n\nI wasn't sure what it was but, as much as I hated to admit it, it seemed to center around Donna. I hated to admit to that because of the way I'd come to see her. She was a great assistant, had been helping me out in ways that I couldn't have imagined, had become a great friend, (and more) and I was beginning to grow real feelings for her. What was more, I could still feel that connection between us, that strange, familial bond that went beyond our shared perversions that I couldn't quite put my finger on, and the more I got to know her, the stronger it became. \n\nBut, when it came to that, after a week and a day knowing her, what did I really know about her? Next to nothing. \n\nIn the meantime, while it was true that my first posting was turning out to be the time of my life, Donna being largely responsible for this, it also felt like my life was no longer under my control. It seemed more like she was the one who was in control, but I wasn't quite sure why I felt that way. Was it because of how she'd orchestrated the incredible events in the kitchen the day before? The way it was she who'd recruited the help of the Bennett family in the first place, or the way she was largely responsible for what we'd been able to get done on the house? \n\nThinking about it, I began to feel that it was all these factors combined, but what did this mean? Apart from the incestuous fun we'd had with the Bennett siblings, her involvement had proved to be nothing but good for me. True, we were having lesbian sex, a carnal act forbidden by God, but that was as much me as it was her. To be fair to her, she'd have put her top back on that day had I not intentionally discouraged her by removing my blouse before she could. For that matter, while she'd instigated the scene with Darren and Haley, I didn't exactly stop it, had in fact encouraged it by telling Haley to suck her own brother's cock. Donna herself had pointed this out to me but, on the other hand, could I really believe that Haley would have been giving her brother oral in my kitchen had I never met Donna? \n\nThe very memory of those events began turning me on as I walked, eyes cast down at the sidewalk ahead of me as many local inhabitants do. My arousal in itself seemed to vindicate Donna in some way, even though I knew that the answer to my last question was a resounding, 'No'. Brushing away my pussy tingling anticipation over what kind of 'transgressions' I'd be involved in that afternoon, I finally came around to the subject matter that I, for some reason, wanted to avoid. \n\nFor a non-Christian, Donna could sure preach some pretty good Christian reason. She obviously knew scripture and how to use it, and that did bother me as I remembered something one of my CFOT instructors said during my second year, Professional Ethics course about how even Satan could quote scripture, and much better than we could. Obviously, I'm not saying that I suspected Donna of being Satan in disguise, and I didn't even like making this comparison in my mind. It was only that I began to realize that I needed to look beyond my reliance on, and feelings for her. I had to keep in mind that I was the spiritual authority, and that her motivations as a non-Christian, given our sexual relationship and the events in the kitchen the day before, bore closer inspection. \n\nThese were difficult thoughts. It would have been much easier for me to simply allow her to lead me in the things she'd said, the reasoning she fed me. It would have been easier to allow her to satisfy my fears in order that some of my actions and the wanton desires that fueled them could be justified, but I had the spiritual responsibility of having to be more honest with myself than that. \n\nWalking along, my frowning face still cast down as I went, I was so deep in thought that I literally ran into someone. Startled out of my inner conflict, I looked up to behold a middle aged woman on the sidewalk. She was aboriginal, a mildly attractive, tall, overweight representative of her race, and she looked at me with surprise and curiosity. She was with an old man and, when I say this, I mean a very old man. Also aboriginal, his face looked like it had been carved out of rock, emotionless as he stood there staring at me from her side, his hand on her forearm for support while hers was at his elbow. \n\n\"Oh, I'm so sorry,\" I apologised. 'I was- I should be looking where I'm going.\" \n\n\"No, its okay,\" she said with a sudden smile, noting the uniform. \"You weren't the only one who wasn't looking where she was going. You okay?\" \n\n\"Yes, you?\" \n\nShe nodded, looking at my uniform again with a question mark in her features. \n\n\"My name is Lieutenant Watts,\" I said with a smile, sticking out my hand. \n\nLetting go of the staring old man's elbow, she took my hand, shook it and asked, \"Your mother named you 'Lieutenant'?\" \n\n\"Tara,\" I further introduced with a laugh. \n\nShe nodded and returned, \"I'm Lisa, and this is my grandpa, Albert.\" \n\n\"Pleased to meet you both,\" I said, nodding politely to the silent old Indian before adding, \"I've just moved to the neighbourhood, over on Rae Street. The Salvation Army has opened a Community Mission there, and-\" \n\nI was interrupted by the sound of her smartphone's ring. She offered an apologetic smile as she took it from her pocket to answer the call. After the word, \"Hello\", her entire, short conversation was conducted in Cree. She seemed undecided about something and, at one point, looked at me doubtfully before taking the phone from the side of her face to address me. \n\n\"Uh, could you do me a really big favour?\" \n\nI didn't know quite how to respond to that. A 'really big favour' could be anything, and I was understandably hesitant to agree to doing one for a complete stranger, but she went on to explain before I had to decide. \n\n\"I need to run a few streets over for something, but I can't take my grandpa. Could you please stay here with him for me? Ten minutes, tops. I promise.\" \n\nAlbert continued to stare as though I were the first white person he'd ever seen. \n\n\"Uh, well, I...\" \n\n\"You'd really be helping me out big time. This is my house right here,\" she told me, gesturing to the dilapidated looking, brown shingled structure behind her. Apparently she'd just been leaving home when I'd run into her at the end of her walk. \"You could sit in the shade on the front steps while you wait, and I promise I won't be gone long.\" \n\nI'll be honest here. I didn't have any experience with seniors and had no particular interest in gaining any. But it then occurred to me that my entire mission there in North Central was all about helping people, and here was someone asking for my help, so... \n\n\"Okay.\" \n\n\"Oh, great! Thank you so much,\" she said before turning to the elder at her side to convey something in Cree. \n\nHe made no reply but, when she was finished, Lisa looked back at me to say, \"He doesn't speak English, but he'll be okay. I really appreciate this, Tara, and I swear I'll be right back.\" \n\nAnd, with that, she was off, hurrying down the sidewalk, speaking into her phone again and leaving me alone with the old man who only continued to stare suspiciously at me. \n\nWith a nervous smile, I pointed at myself and said in a slightly loud voice, \"My name is Tara.\" \n\nNo reply, only more staring. \n\nPointing again, I repeated, \"Tara.\" \n\nStill no reply. \n\n\"O-kay,\" I cheerily acknowledged. \n\nAfter briefly looking around myself for someone who might know Cree and finding nobody, I visually located those shady front steps that Lisa had mentioned at the front of her abode. With silly hand gestures, I tried to convey to him that we should move there to wait but, as he only stared unnervingly in reply, there was no way to know if he got it. I went to take his arm to lead him there myself, but he pulled away, sudden surprise and maybe a little fear in his wooden features. \n\nI found this odd, but paid it little mind in the face of a growing irritation with the old man. So finally, I was left with no choice but to start up the walkway by myself, looking back with gestures for him to follow. He stood rooted to the spot until I got to the steps and sat, looking at him expectantly. I smiled at him, wondering if his eyesight was good enough to see it from the end of the short walk, and patted the spot beside me, a universal invitation that I figured he would understand. Without a word, he turned and began his way up the walk towards me. When he got to the front steps, however, he only stood there, just inside the shade and facing me as I once again became the object of his staring curiosity. This was more than just a little awkward. \n\nHaving given up on any meaningful interaction with Albert, I looked idly about me, at the street and the other houses lining it, beginning to wonder at what kind of person leaves her vulnerable, elderly grandparent with a total stranger in the first place. I mean, what was so important that she had to run off without him? For all I knew, she was off 'scoring a hit', as they say, and there I was, enabling her in a foolish attempt to be of help. \n\nWith a sigh, I settled my eyes back on Albert, wondering what kind of life he'd led. I wondered what kind of life he'd been born into and the changes he'd seen over his lifetime that brought his people to where they are now. I wondered if anybody had ever tried to tell him of Jesus Christ and the plentiful gifts of Spirit that He offered. After my painfully limited success with him to that point, I wasn't about to try. \n\nLooking around myself again, I tried to imagine the area as it might have been before white men had come, picturing the vast plains uninterrupted by the trees that we'd planted, the cities and roadways that we'd built, transmission towers and powerlines we'd strung, the clean air that we'd polluted. I supposed that these things were the price of civilization, the down sides to nice, heated homes in the winter, heated cars that could get us twenty miles across town in a half hour, or to the supermarket where an endless variety of food from all over the world awaited to be simply removed from the shelf and taken home. Alternatively, one could just get on their smartphone to call a taxi that would pull up to their front door to take them to the nearest hospital for modern medical care, or take a bus across town to work, gaining the paper currency that made the availability of all these things we take for granted possible. Of course, if one didn't have a job and was without means of gaining said paper currency, one would sooner or later end up living at another form of modern convenience, such as a Salvation Army homeless shelter. A great place for those who'd ruined their lives with drugs, alcohol, gambling and etcetera. If one couldn't find a place there, there was always the option of living in a filthy alleyway in a cardboard box while an uncaring populace walked right on by as though you didn't exist. So intent on their viciously competitive little lives, they'd turn a blind eye while you starved or froze to death in this wonderful age of convenience and modern miracles. \n\nLooking at Albert again, (Still staring suspiciously at me) I sighed, inwardly redefining the word 'civilization'. \n\nLisa finally returned, a plastic Sobeys bag filled with something or other in hand, and a smile for her grandfather and me. \n\n\"Sorry about that,\" she apologised, a little out of breath and perspiring in the summer morning heat. \"I really appreciate this, Tara.\" \n\n\"It's no problem,\" I replied, immensely grateful for her return as I rose to my feet, glancing at the Sobeys bag. \n\nFollowing my glance, her apologetic expression remained as she explained, \"A friend of mine from a few streets over. His freezer died and he had to get rid of all his deer meat before it spoiled. I couldn't take Grandpa 'cause he has two Pitbulls, and he really doesn't like dogs. Had a bad experience with them when he was a kid.\" \n\n\"Ah,\" I said, nodding and smiling, now feeling bad about my earlier, racist assumption that she was off buying drugs. \n\n\"Do you want some?\" she asked, gesturing to the bag she was holding with her free hand. \n\n\"Oh, no thank you,\" I replied. \"A little too gamey for me. I prefer pork.\" \n\nShe nodded as I stepped around her, preparing to leave by saying, \"Feel free to drop by the Mission any time you like.\" \n\n\"I will. And thanks again for looking after Grandpa.\" \n\n\"It was no problem,\" I assured. \"Goodbye, Albert.\" \n\nUp until then the old man had never taken his eyes off me, staring suspiciously, almost fearfully, but at my farewell gesture he raised his arm, pointing directly at me and said, \"Nipasinakoosewin!\" \n\nIt was his tone and the expression on his face that bothered me, as I obviously don't understand Cree. It was an expression of accusation, but I also read disgust and even fear in his features as he continued to point. Lisa's expression had also changed. Her eyes widened and she glanced at her grandfather before looking back to me, but closer this time, a wariness now in her eyes that hadn't been there before as Albert repeated himself more forcefully. \n\n\"Nipasinakoosewin!\" \n\n\"What- what's he saying?\" I asked with a faltering smile. \n\n\" ... Grandpa's old and... traditional. Sometimes... well, you know how old people are,\" she explained, her smile back, but phoney as a three Dollar bill as she took his elbow. \n\n\"But, what does it mean?\" I asked as she turned him around, he looking back at me with that expression still in his ancient face. \n\n\"Nothing,\" she answered, shaking her head with her phoney smile, making it abundantly clear that it was a lot more than nothing. \"Thanks again for looking after him.\" \n\nWhatever it meant, she now wanted away from me, was trying to hurry him up the stairs but, for someone as old as Albert, any hurried physical action was problematic in itself, providing me with the time to insist. \n\n\"What does it mean?\" \n\nMy tone was as demanding as it could be while standing on her property and, at the top of the steps, she turned while Albert began entry to their house. She hesitated with a smile that looked apologetic but, in reality, was still very uncomfortable as she answered me. \n\n\"It means... It means, 'abomination.'\" \n\nWe stared at one another for a brief moment, Albert just inside and turning around as Lisa continued to give me her phoney expression of assurance. \n\n\"He's very old,\" she offered. \n\nYet, she didn't say that he was senile or addled in any way, and her expression told me quite clearly that, very old or not, she took his accusation seriously. \n\n\"Wh... what does he mean, 'abomination'?\" I asked, starting to feel insulted and a little creeped out. \n\n\"It's nothing,\" she assured yet again, moving inside her house, turning to regard me with thinly veiled paranoia before adding, \"Thanks again for helping out, goodbye.\" \n\nAnd then the door was closed, the unmistakable sound of a lock turning leaving me in their front yard with more questions than answers. The curtains moved at the edge of the window, somebody from within waiting for the 'abomination' to leave their property. I continued to stand there as though there would be more until all there was left to me was to leave. \n\nOn my way down the sidewalk again, I looked back at the house a few times, still upset and disturbed by the incident. It wasn't until I was about halfway home, my feet aching more than ever, that I could finally shake the feeling that Albert's pointed claim had left on my mind. \n\n\"Stupid old man,\" I mumbled under my breath. \"He's the abomination. Probably back there dancing around a fire in his backyard right now, praying to tree spirits, or an interesting rock, or whatever.\" \n\nMy thoughts eventually began drifting back to Donna, but my attitude towards that situation had changed. Maybe it was just the incident with Lisa and Albert resetting my perspective, but I suddenly found myself wondering if my suspicions of Donna were misguided. As I'd earlier noted, she'd done nothing but help me since I'd met her and, as far as our lesbian relationship went, (abomination) that was, as I'd also earlier noted, just as much me as it was her. And didn't Darren and Haley deserve some blame in what had happened the day before? Donna was right in that they were both legally consenting adults and, when it came right down to it, if they didn't want to do the things they'd done, they didn't have to. Nobody was holding a gun to their heads. In fact, it was Haley who'd asked if she could touch her brother's cock to begin with. Wasn't it? And Darren didn't stop her. He was actually ogling her almost as much as he was Donna in the backyard before they'd come in. \n\nNo, things weren't always what they seemed and, though it never should have happened, it just did, and it wasn't really Donna's fault any more than it was mine, or Darren and Haley's. We all just got carried away. Really carried away, but I decided not to be so critical of the woman who was doing a very good job as my assistant and best friend. She didn't deserve it. \n\nThat being said, I'd also decided to be careful about getting so carried away again. Even disallowing the possibility that Darren and Haley would ever say anything, the house was Salvation Army property, a Community Ministry and, therefore, it was sort of public property. There was always the chance that someone could have come into the house, possibly even the back door. In fact, they wouldn't even have had to come through the back door, would have only had to look through the screen to see what was going on and, poof!, there goes my career. \n\nAnother reason I couldn't afford to get carried away was because, while Donna was correct in the fact that I'd been forgiven for all of my transgressions, including the ones that I would make, that didn't mean that I could go around committing them willy-nilly, still expecting my salvation to lay intact on judgement day. Grace doesn't work like that. \n\nYet, the memory of Darren's big, thick cock in my hand was a constant reminder of how much exciting fun willy-nilly could be. It was the first time in my life that I'd ever touched a cock, and the feel of it, it's wet, slippery heat, its soft hardness that was just so entrancingly good... \n\nI didn't get to lick it. I didn't get to suck on it like Donna and Haley did, to feel it on my tongue, in my mouth, to taste its precum and experience it's big, messy eruption, soiling my face and- \n\n\"Tara!\" I hissed under my breath, giving my head a mental shake. \n\nThe good thing about porn was that, up until I'd moved to Regina, it had always kept me from actually participating in sex, kept me satisfied and at least physically innocent, if not safe from my own fingers. Until recently, I'd never even thought of myself as one who would participate in a sexual situation, never even so much as fantasized about myself in one, but now that had changed. On the one hand, I was ashamed and disappointed in myself but, on the other, it was like my discovery of porn all over again. Just thinking of all the things I could do, had seen others doing in porn and could now conceivably do myself, was enough to make my stomach cramp with nervous anticipation, my heart beat faster, my pussy moisten with willing excitement. Oh, this was bad. So very bad. ",
        "Arriving home with my sore feet and electrified hormones, I shoved the front door open to be greeted by the sight of Joel and Donna in the front room. They'd obviously been hard at work there, a two-by-four skeleton of my future office half complete. \n\nBeing in the mood I was in that morning, I'd left early, before Donna could arrive. I didn't want to see or talk to her until I had a chance to work through things for myself, so I was nicely pleased to see her in a tight, black denim skirt with a mid-thigh hem and a saffron coloured, fancy tank top with black mesh covering a modest amount of visible cleavage. Standing there with a tall glass of orange juice in her hand, I could tell she wasn't wearing a bra by the sharp points her nipples created, but I didn't care. Aside from that, she looked good and decent, and a sudden urge to lick and nibble at her shapely tushie squashed any concern that her tastefully sexy outfit may have raised. \n\nLike Darren the day before, Joel was working in the heat without a shirt and, while his face wasn't particularly attractive, his body was in decent shape. His somewhat beefy pectorals and toned biceps shiny with sweat, he was just then shortening a piece of two-by-four with a chopper saw on a stand. I couldn't help noticing his legs and hips, braced for action in his snug blue jeans as he worked behind the saw, Donna watching him with an odd little grin. \n\nThey both looked up at my forced entrance, disturbing the half formed question in my mind of how big Joel's cock might be with their friendly smiles. \n\n\"Hey, Lieutenant!\" Donna cheerily called as Joel finished his cut. \"Missed you this morning.\" \n\n\"Sorry about that,\" I replied with a smile as Joel moved from behind the chopper saw. \"I wanted to get an early start.\" \n\nI was about to comment on all the work they'd gotten done, but the words caught in my throat when the big boner in Joel's jeans, now plainly visible, struck my awareness like a sledgehammer. \n\n\"Hey, Lieutenant,\" he greeted as though it wasn't on total display for the two women in the room. \n\n\"Uh-h, hi,\" I managed, hoping I wasn't as obvious as he was. \n\nApproaching with a wiggle in her hips that could have stopped a freight train, Donna only grinned at where my eyes were resting, offering, \"Why don't you um, cool down with this while I show you what we managed to get done?\" \n\nShe handed me her glass, the condensation running down the sides making the obviously cold contents even more desirable after the morning's heat and Joel's excitingly inappropriate display. With a grin of thanks, I accepted and tipped the glass to my lips. I'd actually taken three large gulps before the putrid taste stopped me. \n\n\"Gluueaaa!\" I practically gagged. \"What the-?\" \n\n\"Oh, yes, I added a little vodka,\" Donna explained with a slightly wicked grin. \n\nIt was disgusting. Momentarily forgetting about Joel's hardened condition, I looked at Donna like she was crazy before looking into the glass, wondering how in hell people could actually get addicted to the rancid stuff. And then I got the first idea as my mind suddenly began to feel lighter. \n\n\"First time she's had alcohol?\" Joel asked with a grin. \n\n\"She's been a very good girl,\" Donna sleazily replied. \"Take another drink, Sweetie pie.\" \n\nI only hesitated a moment before I did just that, curious about the admittedly pleasurable lightness within me that seemed to be growing. \n\n\"Uhhhggghhh!\" I gasped, the cold drink refreshing me even as the same putrid taste made me want to gag. \n\n\"All of it. Trust me, it'll be very refreshing on a hot day like this. It'll make you feel a lot better.\" \n\nAgainst my better judgement, I complied, somehow not throwing up when I finished the glass. \n\n\"Oh my goodness, that is so disgusting!\" I said to Joel's and Donna's approving grins. \n\n\"You get used to it,\" Donna assured as she took the empty glass and put it on the chopper-saw. \n\nShe then took me by the forearm as my head began to swim just a little. I found myself staring at Joel's crotch again, clamping down on a delirious giggle as I realized that the answer to my earlier, half formed question as to his cock size had been answered for me. (BIG) \n\nOnce again glancing down at that wonderful bulge in the front of his jeans, I said to him, \"Thanks so much for coming over here and helping us out with this, Joel. We really appreciate it a lot. We were expecting Darren and Haley.\" \n\n\"Yeah, the kids are out with their mother for the day, and I had some time to kill, so I figured I'd bring over the two-by-four.\" \n\n\"Then he offered to help out building the frames for the walls,\" Donna told me. \"Which is great, because it just so happens that he has this electrical saw and some other tools that are a big help.\" \n\nWith the sudden mental image of the tool in his jeans sliding in and out of Donna's mouth, I replied with, \"(giggle)\". Meanwhile, that glass of vodka and orange was still working on me and I had to privately admit that I was loving the effect. \n\nDonna gave me a naughty smile that suggested she could read minds. Joel, however, didn't seem to notice as he got into explaining what he'd done so far, which really wasn't necessary, but entertaining just the same. \n\n\"So, yeah, I got the frame for this wall done and up; got 'er nailed into the floor and ceiling. I hope this is gonna be big enough for you.\" \n\n\"Oh, it looks more than big enough for me,\" I replied, Donna's flashing smile telling me she'd gotten my double meaning. \n\n\"Well, I didn't want to take out too much room from the main area here, but I had to guess at enough space for a desk, maybe a shelf, or whatever. Me and Donna figured this would be good.\" \n\n\"Yes,\" Donna put in with a dirty grin for me, \"I think it's big enough to completely fill Lieutenant Watts's need.\" \n\nI managed to stifle a second giggle as I imagined his big cock slowly filling my wet pussy, a hot blush suddenly working its way from my midriff to cover my entire body at the thought of myself on my back, legs spread for him. Still, a part of myself advised caution. Considering what had happened the day before, who knew where this fun little game would go, and how was it that he could so casually stand around two ladies with a raging erection in his jeans? I mean, he had to feel it, had to know that we could see it. \n\nHe went on to say that he was currently putting the other wall frame together, gesturing to the pieces already laid out on the floor as Donna and I threw in sexually weighted comments, all of which seemed to go right over his head. It was possible that this was the gene pool where Darren got his limited intellect from, as well as his manhood, but that didn't explain his apparent unawareness of what was happening between his own legs. I suppose it was this unawareness that made it easier to dare more frequent and longer glances at his fat package. \n\nNeedless to say, I was quite turned on, and it wasn't hard to see that Donna was right there with me. The further our sexual innuendos went, the more aroused we became until Donna finally did the unthinkable. \n\n\"Oh, Joel...\" she said in an overly concerned voice while looking at his butt. \"You've got some sawdust on your ass. Wouldn't want to take that home and get it all over your couch, now would you?\" \n\nMy mouth opened in an awe struck smile as she began lightly brushing sawdust that probably wasn't even there from his backside. She gave me a naughty, daring smile as my heart sped up, her hand slowing to caress, then squeeze while her eyes blazed naughtiness at me. \n\n\"Oh, I-I guess not,\" he responded with a surprised grin, understanding this innuendo all too well. \n\n\"Look,\" I said in a voice I'd never heard from my throat before, thick and heavy with carnal desire as I reached out and brushed some imaginary dirt from the front of his jeans. \"You've got some more here...\" \n\nMy first touch was only at the top of his leg, but my mind leapt to Darren's cock, how good it had felt in my hand, how thrilling it was to pump it. Before I knew it, I was 'brushing sawdust' from the bulge in his jeans while he flinched and Donna watched most approvingly. Then I was caressing it, pressing as I moved my body closer. It was all happening so fast. The feel of it was incredible, even through his jeans. My trembling little fingers could perceive the details of his mighty shaft, its hardness and heat, the ridge of his cockhead and the mass of his balls as I groped and fondled at will. \n\n\"Open his pants up,\" Donna suggested with a low, slutty voice that dripped pussy juice. \n\n\"Yeah,\" I toned, immediately popping the button at the top of his jeans, then the rest of them to find that he wasn't wearing underwear. So I got to watch as his fat, wonderfully hard cock fell out through the wide open V of his fly. \"Ooooh, my goodness.\" \n\nJoel's manhood was only slightly longer than that of his sons, but also slightly less thick. My hand didn't hesitate. I encircled his throbbing shaft with my fingers, gripping it with an appreciative smile as Donna helped push his jeans down further. Precum pooled at the tip of his cockhead and I watched it as though in a daze, slowly stroking him while he started moaning. \n\n\"So hard,\" I commented, mostly to myself. \n\nAs Donna got his jeans down further, his balls came into view, big and full of cum, but I wanted to take my time. I wanted to explore his genetalia, to learn firsthand about this magnificent example of hardened penis, mine to do with as I wanted. The fact that he was a married man never even occurred to me as I used the index finger of my other hand to touch that puddle of precum, slowly rubbing it around and making him flinch so delightfully. \n\nCocking my head, I looked again at his balls, my lower lip in my teeth as I allowed my stroking hand to slip down there, cupping them while my other played with his head. I loved how he twitched and moaned, looking to his face as he stared wide eyed at me until I decided I wanted a closer look. \n\nA vague thought that I might ruin my sheer stockings ran unheeded through my mind as I got to my knees in front of him, and again began stroking his mighty shaft, now only inches from my face. \n\n\"Oh my, this is so beautiful,\" I murmured, looking up at Donna as she grinned knowingly down at me, her beautiful, golden hazel eyes encouraging me on, telling me it was all okay. \n\nHe flinched again and I looked down to watch another thick puddle of precum appear at the tip of his cockhead. Leaning forward just a little, I slowed my hand so that I could stick my tongue out to pick up that puddle of milky white goo. I was a little surprised at this, the fact that I'd done it without even thinking, but that surprise was overshadowed by the curiously pleasurable taste of his fluid. Holding his cock just beneath his head, I returned my tongue to its tip, sopping up the rest of it before allowing it to explore his helmet further. \n\n\"You are so hot,\" Donna breathed. \"Such a slutty little girl. Lick his cock, you fuckin' whore.\" \n\nOkay, that really turned me on. Maybe because I was so used to thinking of myself as a good Christian girl, a proper young woman of God in a respectable Salvation Army uniform, bible in hand, yet always so horny under the surface, so naughty with my collection of torrid porn videos and sex pics. With a moan, I touched my tongue to his balls and, like Haley did to her brother the day before, allowed my sopping wet tongue to slowly lather his cock all the way back up to its head where it found another puddle of tasty, gooey essence waiting. \n\n\"Mmmm...\" I commented, closing my eyes to enjoy for a moment the taste, even the very experience of what I was doing before opening them to regard Joel's cock. \n\nAfter only a brief hesitation, I opened my mouth and inserted his cockhead. My lips covered its ridges and I moaned again with the knowledge of how good it felt to be a naughty girl, twisting my lips around it as I wantonly sucked cock for the first time in my life. \n\n\"Mmmm... Mmmm... Mmmmmmm-(slurp)-Ummmmm...\" \n\nI wasn't the only one enjoying it. Joel was groaning louder now, jerking and twitching as I took in more of him, loving the feel of his shaft slipping and sliding past my pressing lips. I parted my knees further on the floor, suddenly realizing how wet my pussy was and that I was very quickly losing myself in this lewd and forbidden act of fellatio on my next door neighbour. \n\n\"Mmm! Gmmm! Mmmm-(slu-urp)-Mmmm?!\" \n\nI soon found that lots of saliva made things work a lot better and, though it seemed a bit unnatural to do what amounted to drooling all over, it was also strangely liberating and made my first cock sucking experience all the better. In fact, I was enjoying myself so much that I was totally unprepared when he yelped, his pelvis bucking as he erupted in my mouth. Shot after heavy shot of his hot, sticky cum squirted the insides of my mouth and I squealed to the feel of it, the taste different from his precum, but also better as I only sucked harder and faster. \n\nHe soon let out a desperate yell, backing up in an apparent effort to get away from me, but I wanted more. I grabbed his bare behind, holding him there as I felt his cum and a lot of my saliva leak from between his still hard member and my lips. I'd just had my first taste, and I only wanted more, but he somehow managed to get himself free of my mantrap just the same. The sticky, sinful mess in my mouth ran out and down my chin, soiling my blouse as I looked up at him in a daze, stunned at the reality of what I'd just done, even while regretful that he hadn't lasted very long. \n\nJoel seemed barely able to stand, a faraway look in his wide, strangely glazed eyes as he staggered a few steps away from my reach, almost falling down before he caught himself on the two-by-four frame he'd erected. \n\nDonna laughed, though her expression as she looked at me was anything but demeaning. She was as turned on by what had just happened as I was, her laugh borne of hormonally driven nerves. \n\n\"(Giggle!)\" I deliriously replied in kind. \n\n\"Can you even close your eyes, sweetie pie?\" Donna laughed. \n\nWe were upstairs in my bed. Donna, somehow knowing my need, sent Joel home before dragging me upstairs to hike my skirt and remove my panties, fingering and licking me until I came good and hard. Afterward, she'd helped me out of my blouse before going to the bathroom for a hot facecloth to clean my mouth, chin and neck of Joel's cum. \n\n\"I don't know,\" I replied, my heart still beating madly. I laughed, assuming, \"I guess I'll fall asleep at some point but, till then, I think I'm going to stay like this... I still can't believe that I've actually sucked cock!\" \n\n\"I was so proud when you groped him,\" she recalled. \n\n\"Proud?\" \n\n\"Well, yeah,\" she said. \"I mean, it was such a slutty thing to do, so far out from the behaviour that you're used to.\" \n\n\"Aint that the truth?\" I said, my smile diminishing, but only a little. \n\n\"You don't seem very upset by it,\" she observed. \"No offense, but I thought I'd be trying to talk you down from your own cross at this point.\" \n\n\"I know,\" I replied. \"I would have thought the same, but... I don't know. It probably seems stupid but, next to encouraging Darren and Haley to commit an act of incest with one another, it kinda doesn't seem like that big a deal. Yet, it so is.\" \n\n\"Because he's married, or because he's not married to you?\" \n\nIncredibly, the fact that he was married only came home to roost at that moment, when she'd mentioned it. Yes, I was aware of it before but, probably because of the alcohol, it just didn't really impact my mind before then, and my smile staled further as I shrugged my shoulders in reply. \n\n\"Well, he sure as hell didn't have a problem with it,\" she sighed, playing with the gray lace edging that topped the cup of my pale pink bra. \n\n\"No. No, he didn't. But, what I really thought was odd was how he was standing around down there with that incredible erection in his pants. I mean, he had to have known we could see it, and I'd think that most guys would try to... you know.\" \n\n\"Yeah, well guys think a little different than gals do. To them, it's a point of pride, especially for a man with a nice big dick like his. I'm not saying all guys are like that, but some guys will show themselves off like that. Just look at how many of them are getting into trouble these days for sending dick pics to girls on their phones.\" \n\n\"I guess,\" I agreed with a humoured grin. \"But, still... I mean, what if we'd been offended and we decided that we should tell his wife all about what a perv he is?\" \n\n\"Maybe he knew his wife wouldn't be offended?\" Maybe they're swingers?\" \n\n\" ... I never thought of that,\" I admitted, my smile getting wider as this possibility that helped to squash some of my guilt. \n\n\"But you're liking the idea.\" \n\n\"Donna!\" I guiltily complained. \n\n\"Don't even try to deny it,\" Donna laughed. \"By the way, it's only quarter to two.\" \n\n\"And?\" \n\n\"And what are we doing for the rest of the day...? Lieutenant?\" \n\nI declined answer, instead turning over and getting on top of her with a naughty grin, straddling her hips so I could hike her top to her neck, exposing her perfect, age defying breasts with their still erected nipples before going down on them. \n\nThe next day held another surprise for my return home from my morning stroll through the hood. It wasn't the rudimentary cross that somebody, assumedly Donna, had built from two-by-four and nailed to the wall in the front room. Rather, it was the presence of Sumitra and a good looking East Indian man who I'd assumed to be her husband. They were sitting in the kitchen, at the table with Donna as she read to them from a Bible. \n\n\"Oh, hi,\" She said, interrupting her reading with a smile that held more for me than anyone would ever know. \"You remember Sumitra Rahman from the other day? This is her husband, Debesh, and they've just converted to Christianity. Isn't that fabulous?!\" \n\nAs I said, another surprise, and frankly, I found this one as unexpected as Joel's hard cock ejaculating cum into my willing mouth. I looked from her to Sumitra and her husband, my mind trying to come up with something appropriate to say as they smiled, nodding politely and saying hello. \n\n\"Hello,\" I managed to greet back. \"Yeah, that's... that's great! Wow!\" \n\nLooking back to Donna, I could hardly believe this, finding it even harder to believe when she said, \"They've spent their entire lives as Muslims, never truly understanding Christ's message, never seeing Him as any more than the prophet Mohamed describes Him as, until today.\" \n\nI only nodded, again at a loss for words, staring at Donna with the knowledge that, while they happened, these conversions were far from the everyday. While loathe to admit it, most real Christians know that the average Muslim is far more dedicated to his faith than the average Christian is, and to see one converted to Christ is even less common than a Quebec separatist suddenly embracing federalism. \n\nMy other problem with this was that fact that Donna, a non-believer herself, had accomplished this. It bothered me on some level, the same one where she could school me on salvation, though I couldn't have said why. There are many instances throughout the Bible where God uses non-believers to accomplish his work, but it made me uncomfortable just the same, especially the fact that she seemed so adept at it. \n\nMy surprise and discomfort, however, flew right over the heads of Sumitra and her husband, assumedly because of the cultural gap that exists between immigrants and average Canadian citizens. Certain social nuances of human behaviour can be easily glossed over in such circumstances, and this is all that allowed me to recollect my composure in a timely fashion. ",
        "\"Well, that is great,\" I enthused, putting my own Bible on the table before asking, \"So, you two just came over and...?\" \n\n\"Yeah,\" Donna cheerily answered before they could, \"they came over to ask about the shield out front, and we got to talking. Next thing I knew, we were talking about our Saviour. One thing led to another, and...\" \n\nShe finished her explanation by holding her hand out, palm upwards in a gesture that center staged the two former Muslims who were nodding and smiling once again. \n\nAnd I hadn't a clue as to how to deal with this. Was I supposed to offer the Rahmans milk and cookies now? \n\n\"I think we should get a picture,\" Donna said, closing her Bible and getting out of her seat, Debesh's eyes falling on her perfectly rounded hips as she faced me, asking, \"Got your phone, Lieutenant?\" \n\nI admit that a lot of my concerns evaporated right there. The fact was that, at my meeting with Major Hurdle the next day, the one where I'd be exposing myself for him, this would go over better than the Bennetts volunteering their time. This was truly golden and, however Donna had accomplished this for me, it really didn't matter in light of how it would help to propel me to the rank of Major before age thirty. \n\nDonna assembled the cooperative Rahmans in front of the two-by-four cross in the front room with me between them and, with my smartphone, snapped a few shots. Still elated with Donna's/my sudden success, I didn't have to manufacture the smile my face displayed any more than did the Rahmans, but the real smile came when I saw the pictures. \n\nThere we were, standing in front of that cross against the stark, white background of the freshly painted wall, sunlight slashing in across us like God's divine light itself. It was, in a word, perfect. It couldn't get any better, and that grinning shot of me on the cover of Salvationist magazine suddenly seemed all the more real. All thanks to Donna Liski, assistant, friend and sexual delight. Looking at that picture and all that it would mean in Hurdle's office the next day, it seemed totally absurd that I was only minutes ago worrying about the hows and whys of Sumitra's and Debesh's conversion. \n\nLate Friday afternoon, the same slimy Booth Attendant buzzed me past the Waterston Centre's security area and into the administration section. He greeted me politely, professionally and with an underlying flirtatiousness that could never be pointed out at an employee evaluation. \n\nI liked it. \n\nWalking that corridor towards the office alcove, I was nervous about my imminent meeting with Major Hurdle, but also strangely giddy. It was like I was of two minds, the one represented by my uniform and all it stood for being the nervous one, and the 'supersexual' one who was suddenly obsessed with sucking cock being the giddy one. They fought for supremacy in the battleground of my gut as it cramped with my anticipation. \n\nFrom one of the doors along the corridor emerged Alessa Hurdle, giving my uniformed persona the edge as she closed the door behind her, a package of printer paper in her hand. She saw me almost immediately, issuing a surprised smile as her eyes performed a quick inspection of me, her resulting expression suggesting that I'd somehow failed as she spoke. \n\n\"Why, Lieutenant Watts, is it Friday again already?\" \n\n\"The weeks fly by,\" I said with a smile that was much more believable than hers. \"How are you, Major?\" \n\n\"Doing very well,\" she replied as we came face to face in the corridor. \"And yourself?\" \n\n\"Couldn't be better.\" \n\nThough her black slacks weren't particularly snug, her round hips and ass still looked very good in them, as good as her proud melons looked in her white Martha blouse because she had a body that would look good even if it were dressed in a burlap sack. Her regulation heels added to her natural height, effectively proportioning out her curves, and her blonde hair and makeup, done in almost a fifties, pinup style, helped her to look subtly sexy as hell while still coming off as totally decent. Judging by his wife and his obvious attraction to me, it was easy to see that the Major liked his women tall, blonde and fully developed. \n\nWhen it came to that, I myself had to brush away a sudden mental image of myself going down to my knees, pulling her slacks down and burying my face between her legs as I squeezed her tits until she squealed my name out in orgasmic ecstasy. \n\n\"So, how are things in North Central?\" she asked, the barest smirk implying that my position there was laughable compared to hers. \n\n\"That's what I'm here to talk to your husband about,\" I cheerily replied, sticking my chest out ever so slightly. \n\nHer smile faltered at that, and I mentally kicked myself. It wouldn't help me to make enemies in the ranks. Yes, she already disliked me, but there was no need to exacerbate that situation. Still, what was done was done, and I couldn't help taking pleasure in the older woman's sudden jealousy of me just the same. \n\n\"Is he in his office?\" I asked. \n\n\"I don't know,\" she said with a forced smile. \"I suppose you'll have to knock and find out. Good day, Lieutenant Watts.\" \n\nWith that less than subtle and pointless reminder of my place, she walked around me. I turned, watching that tush rock and roll down the corridor, exiting through the red security door through which I'd just entered. \n\nTurning with a self-satisfied little smirk of my own, I continued on down to the office alcove, again imagining myself pulling her slacks down, my hands all over that yummy posterior as Donna pulled her boobs out of her Martha blouse and bra to begin sucking at her nipples. \n\nEntering the alcove, I blushed slightly at this lurid fantasy, giving my head a subtle shake, yet smiling guiltily as I hissed under my breath, \"supersexual...\" \n\nThe Major's door was open, the only one in the alcove that was, and I stuck my head in while softly knocking on its surface with a nervous smile. There he was, behind his desk in his shirtsleeves, poring over something with a scowl that spoke either of concentration, or dissatisfaction. Probably the latter. He looked up with irritation, this expression changing to a warm smile the instant he saw me. \n\n\"Lieutenant, please come in,\" he graciously invited without getting out of his chair. \"Close and lock the door behind you.\" \n\nSecuring the door behind me as he'd instructed, I began removing my jacket almost without thinking as I approached his desk. \n\n\"How've you been?\" He asked while eying my bust line. \n\n\"Very good,\" I replied, my tone shaky as my nerves sped my heart. \"And you?\" \n\n\"Excellent,\" he said as I placed my jacket neatly on the back of the chair in front of his desk. \n\nAnd that's where I hesitated, my face reddening as I inwardly asked myself if this was really happening, if the two previous meetings I'd had in this office were really just dreams, and if I was about to commit a horrible mistake. It all seemed so unreal. \n\n\"You know what to do, Lieutenant,\" he said, reaffirming the past for me. \n\nWith a jerky nod, I reached for my collar to begin unbuttoning my blouse. He watched as I went down the front of it, my face flushing despite the fact that it wasn't nearly as hot in there as it was the previous Friday. When I reached the waistband of my skirt, having undone the last button that wasn't tucked in, I paused again. \n\n\"Take it right off, Lieutenant.\" \n\nI pulled my blouse out of my skirt and undid the last button with trembling fingers before pulling the front of it wide open, exposing the top of a very sexy, black lace merrywidow. My boobs were practically bursting from its extremely low cut, inadequate little bodice, their weight straining its tiny shoulder straps as I removed my blouse and draped it over the back of the chair. \n\nNow he was breathing harder, his eyes glued to my upper body as he instructed, \"Now your skirt.\" \n\nI was only a bit surprised at this, but nodded, so horny now and so under the spell of the situation that I would have done almost anything as I reached behind myself to lower the zipper at the back of my skirt. Then, shrugging my shoulders and thrusting my barely covered boobs, I hooked my thumbs in its waistband, slowly pushing my skirt downwards for him as I seductively wiggled my hips until it fell to the floor. The bottom of my Merrywidow only just covered my bellybutton, its connected garter straps adding strain to the shoulder straps as they kept hoisted my black stockings. In sharp contrast, my bright red, French cut, lace panties magnetized his attention as I took the waistband in my fingers, pulling them up as I stepped out of my skirt. Standing there with my feet slightly parted, I waited, the only thing left to my uniform now being the little black bowler hat with its red shield on the front, my blonde hair neatly up underneath it like that of a proper female Officer of the Salvation Army. \n\nAs he stared in awe, one of my shoulder straps fell down my upper arm, the strain from my garters immediately pulling it to my elbow to fully expose one of my boobs. As he helplessly ogled my young body, my heartrate climbed even further and I sucked in a sharp breath of surprise before debating as to whether or not I should fix this. I dared not to as my hormones clawed at my senses. \n\n\"Ohhh, Major,\" I toned in a small voice, partially begging him for mercy, partially telling him how turned on I was while wondering if his cock was hard. \n\nThis seemed to snap him out of his little trance. Still looking at my body, he cleared his throat twice before addressing me in a voice that was heavy with his desire for me. \n\n\"So, uh... what have you to report for this week, Lieutenant?\" \n\nI couldn't believe this. As much as I hate to use this recently way overused word, the only way I can describe the moment is as being totally surreal. My clitoris was so erect and hard that it could have competed with my nipples, one of which he could clearly see as my full globe hung out for his inspection. My pussy was already moist and a wave of tingles broke out along my inner thighs as I replied from my standing position in front of his desk. \n\n\"(Ahem) Uh... actually, I-I had a very good week, Sir.\" \n\n\"Tell me about it,\" he encouraged, licking his lips as he stared at my bared breast. \n\n\"Well, I got out. I mean, I went out and interacted with some of the locals as you instructed. I actually met quite- (ahem) - quite a few of them on my morning walks.\" \n\n\"And how did that go? How did they respond to you?\" \n\n\"Good for the most part,\" I informed. (abomination) \"They, uh... well, a lot of them are... It's hard to describe...\" \n\n\"Take your time, Lieutenant,\" he allowed with a leering grin at my midsection. \n\n\"(Giggle!)\" I helplessly reacted before stammering on with, \"Well, most of them, especially the aboriginals there, are, uhhh... acclimatized, I guess you could say.\" \n\n\"Acclimatized?\" \n\n\"Yes,\" I confirmed, taking a deep breath before nervously clarifying with, \"They seem stuck there. Their circumstances define them. When I leave the North Central area, I run across other people, obviously more successful people, whose demeanors are befitting of their circumstances. They're happy, friendly and polite. Those in North Central walk with their heads down, often without greeting others unless they know them. Of the ones I've met, I've encouraged them to drop by the Mission on Rae Street but, while they're outwardly friendly enough, that invitation is most often met with suspicion and sometimes apathy. It's as though they no longer even care about whether or not they're happy, like they've given up on the possibility.\" \n\n\"Hopelessness,\" he put in, actually looking at my face now. \n\n\"Yes,\" I agreed. \"Hopelessness. A lot of them have grown up there, as did their parents and relatives, and the idea of a life outside North Central, or even living in a cleaner, safer North Central isn't even within their ideological grasp.\" \n\n\"I see. So, what about those who weren't born there? The immigrants who are just starting out in this country, for example?\" \n\n\"Oh, they have hope,\" I relayed. \"A lot of them come from countries that are a lot worse than Canada. I mean, this is one of the choice countries of the world to live and, obviously, they didn't leave their own countries because things were good there, so they tend to be a lot more hopeful. In fact, even in 'the hood', as it's called, they seem to feel that they're better off than they were in their home countries. For example, I've been told by one East Indian couple that, where they're from, one could easily be murdered for the change in their pocket, so...\" \n\n\"I understand,\" Hurdle said, taking another good look at my lower curves before asking, \"So, should some of them show up at the Mission, what would be waiting for them there?\" \n\n\"Uh... well, it would depend on who it was. For example, if it were somebody new to Canada, I'd help them by talking about our culture, possibly helping them with their English skills if they needed it. Maybe all they'd need is encouragement, or someone among a city of total strangers who would take an interest in their lives and in what they're trying to accomplish for themselves. Of course, I'd be using scripture as precedence and support, but...\" \n\n\"But?\" he prodded. \n\n\"Sir... to be totally honest with you, the immigrants aren't the ones who have the real problems there. Again, they have hope. They have drive and, for the most part, they'll eventually move on to better lives. No, it's the aboriginals who need our help. As an example, I met a prostitute on my first little walkabout who was only a little older than I am, and the first thing she said to me was an offer to suck my pussy for five Dollars.\" \n\nThe moment this thoughtless choice of words left my mouth, I cringed, inwardly kicking myself, but he didn't seem phased. In fact, he raised a curious eyebrow, asking, \"And what did you say?\" \n\n\" ... I... Of course, I refused,\" I replied, surprised at his question, though perhaps I shouldn't have been at that point. \"I introduced myself, told her of the Mission on Rae Street and invited her to come by any time she liked if she needed someone to talk to, or just a safe place to rest, but she only asked if we had clean needles there. I had to tell her no, and that was it. I was of no use to her, so she just walked away. She's completely owned by her addiction, by the lifestyle that if forces, and stands as the proverbial posterchild for hopelessness. North Central grips these poor people so tightly, I sometimes wonder if we even can help them.\" \n\n\"Of course we can't,\" he said. \n\n\" ... E- Excuse me, Sir?\" I asked, again surprised. \n\n\"Lieutenant,\" he sighed, leaning back in his reclining office chair, once again speaking to my body, \"The fact is that we can't help anybody. Not really. People have to help themselves, have to have the will to help themselves. Now, we can help with that, talking to them, encouraging them, helping them to get involved with the programs that can support their efforts to clean up their lives, but this is a mountain that they themselves must climb. Only they can decide that they want to change their lives, only they can take the action that will bring that desire to fruition, and only they can guard against backsliding to the pits of their former despair. If we tell them they need to change, they resist out of the feeling of persecution. If we carry them up that mountain, they'll only fall back down to the base once we put their feet back on the ground because they haven't learned to keep their balance on their own. All we can do is guide them, Lieutenant.\" \n\n\"I understand,\" I said, nodding to this wisdom, somehow no longer much noticing that I was standing half naked before my supervising Officer. \n\n\"But, you've done well,\" he complimented. Very well. Is there anything else?\" \n\n\"Yes, Sir,\" I replied with an excited smile, having saved the best stuff for last. \"A family from next door, the Bennetts, have been helping out at the Mission, lending us...\" \n\nThe other strap of my slutty little merrywidow fell from my shoulder, slipping to my elbow as the first one had to allow my other boob out into the open. I looked down at them, reminded of the surreal situation I was participating in, suddenly so horny that I could barely think straight. \n\n\"Uhh...\" I mewled. \"My fuckin' titties...\" \n\nI have no idea why I'd said that. I could only look back at him, fearful of what his response to this might be, but he didn't seem to mind. In fact, going by his reaction, I'd say he loved it. \n\n\"(Ahem!) Uh, maybe you should, um, get on with your report?\" he suggested, shifting in his seat as though he were uncomfortable. \n\nI very much liked his momentary loss of composure, the sudden feeling of control that I perceived just then, becoming once again more comfortable with the situation. So, with both boobs now bared, a slutty little smile on my lips, I arched my back a little and continued. \n\n\"As I was saying, Sir, the Bennett family has been visiting and donating their time by helping out around the property, lending tools and donating materials. They're very nice people,\" I added, remembering how nice Joel's cum felt blasting the insides of my mouth two days before. \n\n\"That's great, Lieutenant,\" he enthused, though I strongly suspect that he was more enthused by my 'fuckin titties'. \"Did you get pictures?\" \n\n\"Oh, yes Sir,\" I practically gushed, beginning to actually enjoy the situation now. \"I have them here in my purse on a data stick for you, but that's not the best part.\" \n\n\"Do tell, Lieutenant.\" He pressed. \n\nThat's when I hit him with the Rahman's conversion. Of course, I'd had to tell him a slightly fictitious story that included my involvement, but he was delighted and, to his almost begging question as to whether or not I'd gotten pictures, I nodded my affirmation with a decidedly leering smile. \n\n\"Outstanding, Lieutenant, outstanding,\" he verbally applauded. \"You've done very, very well this week, a real credit to your uniform. Uh, I did notice another large deduction from your account though. Drywall and such...\" \n\n\"Oh, yes,\" I replied with an apologetic smile. \"Well, you see, there's no privacy door between the main, public level of the house and my upstairs quarters, which makes me a little uncomfortable. So, I ordered the supplies so that I could have Donna and Mr. Bennett build an office at the foot of the stairs, something else that I actually need. In addition, this also cuts off access to the basement from the main level and, considering some of our visitors and their unfortunate circumstances, I think that's a practical decision.\" \n\nI was relieved when he nodded, saying, \"So do I. So, how are you and Miss Liski making out?\" \n\nManaging not to giggle at his very appropriate double meaning, I replied, \"She's been instrumental in getting things done around there. You've hired a really great employee in Donna, Sir.\" \n\n\"That's good to know, but I asked how you two are making out together.\" \n\n\"Good,\" I told him. \"We get along very well. No problems at all.\" \n\n\"Well, I hope you're keeping in mind my advice to you about underlings.\" \n\n\"Yes, Sir.\" \n\n\"And it goes without saying that she shouldn't be told about our, uh... about the details of our little meetings?\" \n\n\"Of course not, Sir.\" \n\n\"Good. ... She's got very remarkable eyes, doesn't she?\" \n\n\" ... Yes, she does.\" \n\n\"Hm,\" he commented thoughtfully before instructing, \"Turn around, Lieutenant. Show me that beautiful ass.\" \n\n\"Yes, Sir,\" I complied, turning around, but looking back over my shoulder at him as I left my three inch heels spread on the floor, sticking my horny tushie out for him. He only sat there, taking in for several moments the bare view of a tushie that so many men have commented on in the past before he spoke. ",
        "\"My, my...\" he approved. \"What a beautiful young woman you are. Do you like to play with your pussy, Lieutenant?\" \n\n\"Oooh, yeah,\" I moaned, adding, \"I like to suck cock, too.\" \n\nHis breath caught in his throat at that, and I wondered if he was taking that as an offer. I also wondered if that was how I meant it as I reached around, taking the skimpy rear halves of my panties in my fingers to draw them into the soft valley of my tushie, pulling up as I moaned again. \n\n\"Oh, Major, I... I'm sooo horny... D-do you want me to pull my panties down? So you can see my-?\" \n\n\"Yes!\" his quick interruption croaked. \n\nSo I did, slowly dragging them down as he watched from behind, that still uniformed, inner part of my consciousness asking what in hell I was thinking as my supersexual half thrilled to what I was doing. When they were almost at the bottoms of my cheeks, I leaned over, spreading my feet even further as I pushed them down my thighs, exposing the spread lips of my wet pussy for him. \n\nLeaving them there, trapped beneath my garters, I supported myself with one hand on the back of the chair while using my other to tickle my pubic bush, asking in a low, breathy voice, \"Is your cock all nice and hard, Major Hurdle?\" \n\n\"Oh, yes!\" he assured. \n\nI smiled, allowing my finger to go lower, pressing my aching clitoris as I gasped, \"Oh! Oh!\" \n\n\"Turn around,\" he ordered with a satisfying desperation in his tone. \n\nI did, looking right at the Major as I now shamelessly stroked my clitoris right in front of him. His hand was in his fly, stroking himself off in his pants while he watched me play with myself. Needless to say, I loved that, moaning a little louder as my middle finger slipped up inside myself with a wet smacking sound, my mouth open in wanton self-pleasure as I began probing, jerking to my own filthy ministrations. \n\nAnd there I was, masturbating in front of my Commanding Officer. That totally surreal impression washed over me again, a thick membrane that covered my suddenly shameless sex drive as I drove myself closer and closer to climax. He was also getting closer, and I could practically read in his eyes the same sense of disbelief that this was actually happening. I found this curious, considering how he'd instigated and manipulated the situation, but the first throes of a crashing orgasm brought these and any other thoughts to a screeching halt in my brain. \n\nJerking violently, I managed to keep my voice down as I made short, grunting squeals as he watched. When he whimpered, eyes rolling, I knew he was also cumming, and it only made it all the better for me, though all the harder to contain my volume. \n\nWhen it was over, we just sort of looked at one another, our raging hormones having drained from our senses as we panted, collecting ourselves. Moments later, it wasn't without some discomfort that we straightened ourselves up, him zippering his fly, me pulling my panties back up to begin getting dressed. \n\nWe barely looked at each other when I left the data stick with the promised pictures on his desk, but I saw something that looked a lot like guilt when my eyes made brief contact with his. I knew the feeling but, as for myself, was surprised at only feeling a little of that all too familiar, soul crushing emotion just then. \n\nWe'd said our awkward goodbyes, and I was just touching the knob of his office door when he cleared his throat and stopped me with, \"One moment, Lieutenant...\" \n\nFacing him with a smile that was as guilty as it was innocent, I marvelled inwardly at how unperturbed I actually was as I listened further. \n\n\"There's an upcoming function... tomorrow night, actually. It's our seasonal Funraiser.\" \n\n\"Fun-raiser?\" I asked, my raised brow and tone suggesting that I may have misheard him. \n\n\"Yes,\" he said. \"That's what we call it. It's a little fundraising event that we put on four times per year, and I think you should attend. You've been doing exceptionally well at your posting, and this could be a big opportunity for you to funnel some much needed money to the Rae Street Mission.\" \n\n\"Um, are you going to be there?\" \n\n\"Yes.\" \n\n\"Okay. I mean, if you think I should, then I'll be there.\" \n\n\"Excellent,\" he replied with a satisfied smile that denied any improprieties between us before adding, \"Marilyn will give you the particulars. Good day, Lieutenant.\" \n\nI had to stop myself from speeding home. It wasn't as though there would be anything or anybody waiting there for me, but I was just so hyped after what I'd done in Hurdle's office that my mind and emotions were set to warp nine, and my body wanted to make the rest of the world catch up. \n\nArriving home alive and without any traffic tickets, I had to tone my wild grin down while getting out of the car so that the neighbours wouldn't think that Lieutenant Watts was crazy. Once inside, however, that wild grin came right back. \n\nIt was quarter past five and, as I'd expected, Donna had left for the day. Joel and his family had gone to Moosejaw for the weekend the day before but, with my help, my sexy assistant had not only finished framing in the walls of my office, but even got the drywall on them in the two days since his help. A solid interior door that Joel had contributed before he left leaned against the north wall of the front room, a new locking knob, still in its package, baseboard and trim piled beside it, but I wasn't about to tackle that stuff by myself. I wasn't even going to clean up. \n\nI climbed the stairs to my apartment, that perma-smile still firmly in place as I dropped my valise at the top of the stairs, at the same time spying a note taped to my fridge. Moving to my Kitchenette, I took a look. \n\nCall me. 'D' \n\nShe'd want to know how the meeting went. Before I left that afternoon, I think she was more excited about it than I was, going through my lingerie collection until she found the black Merrywidow and the bright red panties to go with it. She called it my 'other uniform' and watched me putting it on with gleeful eyes, telling me that if it weren't for the fact that there was something she'd had to take care of that evening, she'd stay and wait for me to return so she could get all the juicy details in person. \n\nI poured a nice, tall glass of orange juice for myself and brought it back to the sectional, placing it on the coffee table before retrieving my smartphone from the valise. Cuddled in the corner of my sectional, I was about to call her when the reality of what I'd just done finally hit me. \n\nI suppose I should have known the high wouldn't last forever, was surprised that it lasted as long as it had as I sat there, lower jaw sagging in personal shock at the fact that I'd just masturbated in front of my boss. \n\n\"Oh my... shhhit!\" \n\nBut a sliver of my smile remained. What was somehow worse was the fact that I still didn't really feel that much guilt, but only shock and shame at my behaviour. I know I should have been relieved, considering how bad my personal guilt trips could be, but it bothered me because it could only mean that I was becoming accustomed to this type of carnal behaviour, behaviour that was very unbefitting of a Salvation Army Officer. \n\n\"I've got to stop this,\" I told myself in the quiet of my living room. \"This... this is not me, and I've got to... Oh my God... I told him that I like to suck cock!\" \n\nI clamped my hand over my mouth as though there was someone there who could have heard my admission, staring wide eyed out my picture window at the gathering clouds on the horizon. But, as horrified as I was at my inexplicable, latent behaviour, a demented giggle filtered through my fingers. \n\nGetting back to my feet, I walked quickly to the stairs, descended to the main level and practically scampered to the kitchen. There, in the freezer, was what I expected to find, the bottle of vodka that the drink Donna had given me the day before had come from. \n\nBefore that day, I'd never had a drink in my life. I suppose I can contribute this to my parents and their example of total abstinence, or possibly the many first hand examples that I've seen over the years of how the stuff ruins people's lives. So, not having been in the habit of drowning my issues in the stuff, I nonetheless wanted- needed- that light feeling I now knew it offered. For the sake of my own sanity, I needed more giggle than horror. \n\nI returned upstairs with the bottle, a quart that looked mostly full, the red Smirnoff cap and label against the clear liquid aesthetically pleasing in some way. The first thing I did when I got upstairs was to head straight to my bedroom where I stripped out of my clothes, including my hat. Letting my hair down, I made my way back out to the kitchenette in my merrywidow and red panties, shoulder straps falling to my elbows once again, to make myself the second alcoholic drink of my life. I took it back to the cozy corner of my sectional, boobs hanging out, and curled up there with it, once again gazing out my window while my most latent inexcusable behaviour in the Major's office tied tight knots in my stomach, even while forcing an excited little smile to my lips. \n\nWhat was happening to me? \n\nBy the time I brought the second drink to my cozy corner, my stomach had settled, giving ground to my excited little smile, and I could personally attest to the mental healing properties of the time honoured medicine known as 'the screwdriver'. \n\nI called Donna, mindlessly playing with my nipples while relating what had happened at the Waterston Centre earlier that day to her waiting ear. Needless to say, she loved it, was completely blown away by it, especially the part where I told Hurdle that I like sucking cock. Thanks to the vodka, I could giggle at her reaction, reassured by it while the woman in uniform was effectively gagged, imprisoned somewhere within the confines of a Smirnoff bottle, pounding her fists against the unyielding plastic to get out before it was too late. \n\nBy the time I got off the phone, I was horny. Donna seemed to always have that effect on me, and I knew that the alcohol was amplifying that effect. I got up, mixing a third drink to take to the bathroom, noticing that I was staggering just a little on my way there. Looking at myself in the mirror above the sink, my nice big boobs proudly out and on full display, I grinned at the sight before me, the same sight that Major Hurdle had grown his cock with earlier that day. \n\n\"I'm a durdy girl... (Giggle!)\" \n\nI closed the door and began running the hot water for a bath. Hot baths, like always sleeping under the covers, was a habit one got used to when one lived in Iqaluit for too long, and the humid heat outside was of no matter. \n\nI thought of that, about my parents and where their convictions had gotten them opposed to my early successes to date. Well knowing why the Major wanted pictures, I could hardly wait for the next issue of Salvationist, wondering if my little ghetto Mission would be featured in it, or the next issue. Pouring a generous amount of bubble bath into the tub, I tried to imagine how the article would be written up and how close to the front cover it would be, how the pics would be arranged. \n\nThinking of those awesome pics, I smiled, leaving the steam filled bathroom to return to the front room. Smartphone in hand, I went back to the bathroom, closing the door behind me. After checking the water level, I opened my picture gallery to preview the pics that would soon let everyone know that Lieutenant Tara Watts wasn't just another pretty face. \n\nAnd there she was, smiling happily between the Rahmans, my first converts. I couldn't get over how perfect the picture looked with the light quality, the rough cross of two-by-four against the stark wall. It made me look like some brave missionary who'd gone off to some foreign land to win souls for Christ. A true spiritual crusader. \n\nSwiping a finger across the screen, I went back to the shot where Donna and I were posing in the front yard with the Bennetts, three of whom I'd actually had sex with. My heart sped up in remembrance of how much I enjoyed stroking Darren's cock, watching his sister suck on it, not to mention sucking his father's until he came right in my mouth. \n\nAnd Donna, God bless her, looked perfect. Her smile and sexy, yet decent attire in the picture would help to put such a 'Today's Salvation Army' face on my efforts. And those beautiful eyes... \n\nRecalling how even the Major had mentioned them, I enlarged the shot, moving it around and enlarging again to zoom in on her pretty face. Oddly enough, her eyes didn't quite come across in the picture. Yes, they were bright hazel, that almost golden colour that so strikingly offset her beautiful, thick black hair, but they lacked their true, striking presence in the picture. \n\nLooking closer, I noticed something else about them instead. Despite their bright colour, they were somehow dark. It was as though they were being back shadowed by her pupils. I zoomed closer, the high quality of my phone's camera not pixelating out as I peered into them. \n\nThey were black. Yes, they were still that beautiful shade of bright hazel, but they were somehow also black, and held no expression whatsoever. Two black holes that led straight to the very deepest pits of Hell. \n\nI jerked, letting go of my phone as though it were a poisonous snake. The hair on the back of my neck stood up and creeping tingles of fear raced down my back. I was so shocked, so suddenly frightened by what I'd seen that I barely registered the sight of my smartphone bouncing off the edge of the tub before disappearing beneath the thick layer of bubbles with a \"puloop!\" \n\n\"Shit!\" \n\nI stopped myself just before plunging my hand into the depths of the tub's water. The steam that filled the little bathroom at that point was a pretty good indicator as to how hot that water would be, and it wasn't as though I could have saved my phone with the three second rule anyway. \n\n\"Shit!\" I repeated, hurriedly turning the hot water off in favour of the cold. \n\nI waited impatiently, testing the water every fifteen seconds until the temperature was just bearable enough to begin searching beneath the bubbles with my hand. \n\nWhen I found it, swiping bubbles away from the black screen, I pressed the oblong button on the front and wasn't surprised to see nothing happen. \n\n\"Dammit!\" I hissed. \n\nQuickly removing the rubberized impact protector, I then removed the back panel, and then the battery. I dried the battery with a towel and buffed the exposed innards of the phone as well as I could before I began vigorously shaking it, trying to shake out as much water as I could until it slipped from my fingers, smashed against the edge of the tub and sprayed several parts of itself right back into the water. \n\nClosing my eyes, I took in a deep breath, letting it out in a long, resigned sigh before saying, \"For the love of God...\" \n\nI said nothing more, opening my eyes to look at the bubbles in defeat, the cold water faucet still driving water until I turned it off. There was no need to hurry as I scooped out the pieces, a broken electrical board, a shattered screen and other unidentifiable bits until I was reasonably sure I wouldn't cut myself. \n\nTossing it all into the garbage, and without even removing my lingerie, I stepped into the tub, sitting down in its glorious, hot depth. I took a large gulp of my screwdriver before soaking my facecloth in the hot water, then covering my face with it, closing my eyes and settling back to relax in the embrace of the wonderful heat. \n\nOutside, a loud crack of thunder preceded a sudden downpour, the roaring rain on the roof above me loud enough to drown out the rest of the world. I listened, allowing it, the vodka and the heat surrounding every inch of my body to blot out all my latent, excitingly wrong behaviour and even Donna's hellish eyes."
    ],
    "authorname": "Ameaner",
    "tags": [
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/secret-sins-ch-05"
}