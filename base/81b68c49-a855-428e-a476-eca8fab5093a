{
    "title": "Race among the Ruins",
    "pages": [
        "Author's note: Hi folks, as usual this is only a story. None of the people in it are real. I made them all up while I was out running or washing my car. Please don't read too much into their motives and motivations because again, it's only a story. Even in real life all of us are different and react differently to situations. If I got some of the technical things wrong forgive me, I'm not a historian and once again it's only a story. A long one. Thanks so much to the incredible Mikothebaby without whom you wouldn't be reading this. And remember, it's only a story. if you don't like it there'll be another one next week and you haven't wasted a dime. If I haven't told you guys and ladies of course this before I appreciate every one of you and I read every one of your comments and respect them all good or bad. Those comments kind of tell me where I should be going, somewhat. Anyway here we go...SS06 \n\n# # # # # # # # # # # # #\n\nAaron Anderson parked his Midnight blue 09 Anniversary Edition Mustang GT in the lot reserved for visiting professors and walked into the ballroom. He was, as usual, late. He'd been down at the docks again in one of those little dive bars throwing darts and hanging out with the locals. His wife, Stacy, who was vying to become a full professor here at Papalis University, had called to tell him that he was late.\n\nShe'd sounded really pissed, as usual, that he had missed the opening remarks at the dinner gala. \"We'll cover for you, as usual,\" she'd said with a really pissed off tone to her voice. We, meaning her and Bob would cover for him. Bob was Dr. Robert Thompson PHD. He was also Aaron's best friend since childhood. The two men had always been together and a big part of each other's lives except for that 5 year period that Bob had spent in Grad school and Aaron had spent in the navy.\n\nThey'd also pursued many of the same goals. Archaeology being the thing they both shared a passion for. Though they both loved it, they came at it from completely different angles. Bob was a scholar; he was big on research, charts, and documents. He'd spend months in a library researching a subject to find out all there was to know about it. Then he'd try to find it.\n\nAaron on the other hand just liked to get out and explore. He was a diver and a climber. He'd go anywhere on earth, if he thought something interesting might be waiting to be found.\n\nThough they were as close as brothers, their personalities were as different as their methodologies. Robert preferred his books, computers, and charts, but Aaron preferred people. Where Robert's often arrogant and condescending attitude put off a lot of people; Aaron could wander into a room full of strangers and emerge with several lifelong friends. People gravitated towards him and him towards them. This was a great trait to have, because quite often the locals would tell him things that weren't found in books or on the internet.\n\nMany times Robert and Aaron would head to some backwater town in search of an oddity or a piece of history and run into a dead end. Robert would end up frustrated and ready to quit, until some barmaid or mechanic told Aaron the truth of the local legend and where it had really taken place.\n\nLater, Robert would end up writing a paper on it and getting it published. As a result the two were a very successful team. While Robert might have been the more famous, he had to admit that most of what he was famous for was a result of things that Aaron had done.\n\nPapalis University had issued a challenge to Archaeological explorers. Every time the earth settled differently in this part of the world there were discoveries of ancient Greek artifacts. The university's staff realized that there were museums all over the world that would pay handsomely for authentic Greek or Roman antiquities. Since the university was in part funded by the Greek government, getting the clearances and paperwork necessary to sell or lease the artifact wasn't an un-surmountable hurdle.\n\nRobert had his eyes on a full professorship in the university and Aaron just wanted the chance to explore and be paid for it. They'd come here about a week ago to get the lay of the land. The gala tonight was where all of the treasure hunters who'd been invited by the museum would find out what was going on.\n\nRobert spent the week nervously going over everything he knew about Greek history. He'd wanted to be prepared to answer questions on any subject that might be asked about.\n\nHe'd asked Aaron to study with him and had been laughingly refused by his friend. \"Why would I even begin to think that I know more about Greek artifacts or Greek history than the Greeks do?\" asked Aaron. Aaron spent the week getting to know people around the university and the local town. He especially spent a lot of time around the shipyards and the marina. Stacy had spent the week sunning and shopping.\n\nAaron walked quickly towards the banquet hall and tried to tie his tie as he walked. A beautiful young woman stopped him at the door and smiled at him. \"May I?\" she asked pointing at his tie. Aaron smiled back and nodded.\n\nThe woman quickly tied his tie into a beautiful knot that Aaron never would have managed. At 6' 4\" and 220 pounds Aaron was not noted for his subtlety, but people just seemed to love him.\n\nAs she stepped back to admire her work, the woman took in the full picture. She gave Aaron the thumbs up sign and said, \"Go get em' cowboy.\" Aaron was speechless for a moment. There was something special about this woman. Besides her beauty she seemed to exude a sense of confidence that was beyond her years. \"I'm older than you think, cowboy,\" she said as if she'd read his thoughts.\n\n\"Why do you call me, \"Cowboy?\" he asked, smiling at her.\n\n\"First because that's what I sense about you,\" she said laughing. \"You're honest and strong, like the cowboys of old. Your car has a horse on the front of it. When I look at you, my senses say, \"Cowboy.\" She looked at him again. \"I like you Aaron, a lot. Good things will happen for you here in my isles. But there will be a bit of sadness as well. Don't look so strange, Cowboy. You're no stranger to the magic yourself.\" Aaron nodded he had a great deal of belief in the fact that something was looking out for him.\n\n\"Besides,\" she smiled as she turned to go. \"Your boots just give it away, don't they?\"\n\nAaron looked down. When he changed into the suit he'd forgotten to put on regular shoes. His black cowboy boots were so much more comfortable. He doubted that anyone would notice.\n\nHe made his way to the banquet room. There were people all around the room. Many of them he'd met already during the previous week. He spoke to and complemented many of them as he looked around. He ran into the Dean of the university, whom he'd played golf with and lost terribly to the previous morning.\n\n\"Hey Marty,\" Aaron said to Dean Rinehart. Aaron still thought it was funny for a German to be the Dean of a Greek university, but the world was constantly getting smaller.\n\n\"Hey Aaron,\" replied the Dean. \"I'd say you're a bit late, but it doesn't really matter, you haven't missed anything.\"\n\n\"I'm still having trouble moving around from that ass-kicking you gave me yesterday on the golf course,\" smirked Aaron. The Dean laughed and introduced Aaron to his wife. Aaron thought that was interesting as well. The Dean's wife was a dark haired Greek beauty. She was much younger than the Dean's 50 plus years. She was also the woman who'd fixed Aaron's tie.\n\n\"Your wife and your partner are around here somewhere,\" said the Dean. \"She's pretty, he's an insufferable ass.\"\n\n\"But he's a very smart insufferable ass, Dean,\" said Aaron. Aaron excused himself to go and look for Stacy and Bob. He circulated around the hall looking for Stacy's blond hair and svelte frame or Bob's thin body and balding head. He found neither. He went out onto one of the balconies for a breath of fresh air and found both of them, although he wished he hadn't.\n\n\"Wow, I guess he likes that a lot more than I do,\" said Aaron. \"But, as the saying goes, \"To each his own,\". And from now on, you're all his. I want nothing else to do with either of you. Stacy, you should try playing with his balls while you do that. I've heard that it can get him off really quickly. That way you can save the rest for later and come back inside before anyone who works for the university finds out what a WHORE you are.\"\n\nStacy quickly stood up and moved away from Bob, who tried to zip up his pants quickly and got himself caught painfully in the zipper. \"It's not what it looked like Honey,\" said Stacy stupidly as Bob screamed from the pain in his crotch.\n\n\"Wait,\" said Aaron holding up his hand. \"I'm not as smart as you two are, so it takes me a little longer to figure these things out. Now to me it looked like you were sucking his dick. So go ahead and tell me what was really happening.\"\n\nStacy just looked stupid. For a very educated woman who could speak multiple languages and lecture on a variety of subjects, it was unusual for her not to have something to say.\n\nRobert was trying not to move. He was hunched over trying to get the hair around his dick that was caught in his zipper loose. Every movement he made resulted in pain.\n\nAaron stepped towards him and punched him in the mouth so hard that he lost consciousness.\n\n\"Consider that a form of anesthetic, asshole,\" said Aaron. \"That way when you get to the emergency room they can cut your little dick loose without hurting you.\"\n\nAaron turned back to his speechless wife. \"Don't come back to the villa for an hour or so, please,\" he said to her. \"That way I can get my stuff and be gone by the time you two love birds get there.\"\n\n\"Aaron we need to talk about this,\" whined Stacy. \"It's not my fault. He's been hitting on me for months. We should talk about this now. Putting it off won't make it any easier.\"\n\n\"Uhn huh,\" said Aaron. \"Stacy you speak what, three of four languages? I'm sure you've learned to say \"No\" in at least one of them. And we have nothing to talk about. You and Robert have a lot in common; you're both educated people and smart as hell. You two have a lot more in common than you and I ever did. You'd think that with all of those brains though, one of you would have had the class to just tell me. I'd have wished you both the best and it wouldn't have had to be like this. I mean it makes sense, you two are near geniuses and I'm just a broken down ex-navy guy who likes to dive and look for shit. Maybe if you'd done it right we could have stayed friends.\" Aaron quickly took Stacy's arm and removed her wedding rings. She grabbed at him and tried to hug him but he pushed her away.\n\n\"No, please Honey. Don't do this, it was a mistake,\" Stacy cried. \"Aaron, I love you. Let me explain!\"\n\nAaron turned to leave and saw at least a third of the gathered guests watching the scene. He smiled at them and made his way through the crowd and left the banquet hall. He piloted his Mustang through the narrow streets and back to the villa they'd rented for their stay. He quickly loaded all of his clothing and personal items into the back of his car and its trunk. Then he moved his diving gear and equipment into the garage where it would be easier for him to get later without going into the house.\n\nHe drove around through the streets for a while. His phone rang over and over. Stacy called him several times that evening. He didn't take her calls or Robert's either. He did speak to a few of his new friends who wanted to comfort him after the embarrassing scene at the banquet. Robert played an especially low trick though. Apparently he'd spoken to his mother and had her call Aaron. After Aaron's own mother had died, he'd become very close to Robert's mom. Since the two of them were almost like brothers anyway, it made sense that they'd share a mom.\n\n\"Hi Ella,\" Aaron said into the phone. \"Can I call you in a few days? I'm not really going to be a good conversationalist right now.\"\n\n\"I just wanted to tell you that I'm sorry that you and Bobby are arguing, but you two need to talk it over and get the job done. That's what you two always do,\" said Ella.\n\n\"Ella, I don't see that as being possible this time,\" said Aaron. \"I think we're done, I don't see a way around this one.\"\n\n\"Okay,\" said Ella seriously. \"Aaron you're like my own son so I'm going to try to explain this to you. It's only a car.\"\n\n\"Ella, what are you talking about?\" asked Aaron.\n\n\"If you're this pissed at Bobby, I figured he must have scratched the Mustang. Or please don't tell me he wrecked it,\" said Ella.\n\n\"Ella, I caught Bob with Stacy, in public, at a banquet we went to for the university we're trying to work for.\"\n\nThere was silence on the phone line. Then Aaron broke it. \"Ella, I'll call you in a few days.\" \n\nAaron's next call came in a few moments later. He didn't recognize the number so he figured it was safe to answer.\n\n\"How are you feeling?\" said a deep feminine voice.\n\n\"Just fucking peachy,\" replied Aaron. \n\n\"My husband was right about your friend. He's an insufferable ass. But you're stronger than this...Bullshit. I have a feeling that you're going to be fine.\"\n\n\"Thanks,\" said Aaron. The events of the evening had beaten Aaron down. He was in the area around the docks. He'd probably been drawn here because he spent all of the past week here learning the lay of the land. He started looking for a motel or a hotel. \n\nHe found one that didn't look too bad. The most attractive thing about it was the big \"Vacancy\" sign that kept flashing off and on.The hotel was obviously supposed to be a Pirate themed Lodge. A big sign out front had a ship with a big vicious dog hanging from its yardarm. \n\nThe sign was supposed to read Hanging Dog Hotel in bright neon orange. Over the years the neon letters \"I, N and G\" had stopped glowing so now the sign appeared to read Hang Dog Hotel.\n\nIt was a big \"U\" shaped building with a pool and lounging area inside of the \"U.\" It really didn't make very much sense though for a hotel built this close to the ocean to have a pool. Why would anyone want to swim in chlorinated water when they could swim in the sea instead? It would only make sense for the very old or the very young. Aaron shook his head and headed for the front desk.\n\nA middle-aged Greek woman took his credit card and swiped it. He signed the register and she gave him a key. His room was on the second floor. His balcony over looked the pool. Even in the dark he could see that the pool was probably not in service.\n\nThe bellboy, a Greek teenager who was maybe fifteen, if that, came running up to Aaron's room. Aaron wondered why he'd bothered, since he'd already carried his own bags. The boy turned down the bed and then walked up to Aaron and stuck out his hand. \n\nThe boy was thin and wore his uniform badly. It was wrinkled and baggy and his pants, like teenagers' all over the planet sagged until you could see more than the top of his under shorts. His hair badly needed to be cut and his face was dirty. But the boy stood in front of Aaron with his legs clamped firmly together, his back ramrod straight and held out his hand with all of the dignity of an English butler. The picture was so incongruous that Aaron gave him a five dollar bill just for having the audacity to ask for the tip. The bellboy's near panhandling was the only thing to make Aaron smile all night.\n\nAaron collapsed on his bed fully dressed on top of the comforter. He turned out the lights and tried to make some kind of sense of this segment of his life. He'd been blindsided. That alone was unusual. He was the kind of man who could smell a storm at sea before the weather service radar showed it as a blip on their screens. He could also tell when to drop the stocks he invested in months before they went down. But he had not seen this coming. \n\nTo be fair to himself he hadn't been looking for it either. After all who was he supposed to be able to trust most in the world? The two people he expected to have his back more than anyone else on the fucking planet were the woman who'd sworn to be faithful and love him for the rest of their lives and the man he'd grown up with and treated like a brother.\n\nThe last thing in the world he expected was for either one of them to betray him. So when it turned out to be both of them, it just sucked all of the wind out of his sails. Maybe he might have believed that Stacy might get bored with him someday and cheat on him. But he'd always expected that if she did, he'd have his buddy Bob to help him get over it. \n\nOr if he and Bob's partnership floundered, then at least he'd have his wife to make it all feel better. But losing them both at the same time was devastating. Aaron had a lot of thinking to do. After all it had been Bob's idea to come here. Stacy had been all for the idea as well. When you thought about it though, maybe they'd already been together then. Aaron doubted that though because the two of them were working at cross purposes. Both of them wanted the only professorship that was being offered. Maybe Bob thought that if he got it, he'd make Stacy his assistant. And Aaron was sure that Stacy probably thought that she'd get the professorship and Aaron and Bob could both just do field work for the university. Well what they thought or what they wanted no longer mattered to Aaron. Fuck both of them. Maybe he should just head back home to the states. He'd look into shipping his car back home tomorrow. Then Aaron fell asleep.\n\nDr. Maria Clarridge awoke and looked around her dorm room. Her room-mate had already left the room, so she was alone. Then she heard the sound that had awakened her again. It was her cell phone. Who'd be calling her at this hour of the morning?\n\n\"Miss Clarridge?\" asked a voice from the phone. \"Or perhaps I should say Dr. Clarridge?\"\n\n\"Yes,\" said Maria in her very precise and very crisp English accent. She adjusted her glasses on her nose as she spoke.\n\n\"I'm sorry to be so blunt, but I've been told that you've been fired from your teaching assistant post and might be interested in another position. Would you be interested in something that might be perhaps eventually a better one?\"\n\n\"Who is this?\" asked Maria.\n\n\"I'm sorry. I thought that you'd recognized my voice. This is Elena Rinehart.\"\n\nMaria sat up sharply. Elena Rinehart was the Dean's wife. This was serious. \"Yes ma'am,\" she said.\n\n\"Great perhaps we can discuss this over lunch?\" said Elena. She gave Maria the time and the location and then hung up.\n\nMaria smiled. For the first time in a few days, she was actually happy. She might not have to go back to England after all.\n\nStacy Anderson stepped out of the shower and looked at herself in the mirror. She didn't like what she saw. There were lines on her face that hadn't been there only yesterday. It was probably only nerves. Okay, nerves brought on by guilt. She was a smart woman and she never expected herself to be in this kind of position. Aaron was always, always, late for anything that even faintly hinted towards respectability. How was she to know that he'd show up even fashionably late for the gala last night? It was unlike him to be even close to timely.\n\nShit, he hadn't come back to the villa last night at all. Where the hell was he? She'd intended to give him time to cool off and drive around in that car of his for a while. She figured then he'd show up and probably sleep in one of the other bedrooms for a while. She knew that it would probably take a while but that eventually he'd forgive her. He probably wouldn't trust her for a very long time but she'd seen couples recover from far worse. \n\nHer own parents had in fact. Her father had cheated on her mother for years. And then later on, her mother had an affair of her own. They'd still managed to stay together until her father died of cancer. ",
        "She just needed to talk to Aaron. She hadn't even actually had an affair. She'd just been flirting with Bob for the past week because she needed to convince him to let her have the professorship. Or at least name her as a part of their team so that she could be in the running for it. Bob had picked up a new research assistant who'd been let go from her position as a teaching aide, some young English girl; one of those nerdy types who wore big glasses and baggy clothes. The blowjob had been to reward Bob for firing the girl and letting Stacy have the research assistant credit. Though to be honest her flirting had hinted that she might reward him that way anyway. \n\nBy being on the team, Stacy would be able to submit an application for the professorship. If everything went as planned, she'd be the professor and Bob and Aaron could be explorers or treasure hunters as they'd always been.\n\nThough she and Bob both had doctorates, she had more teaching experience. Bob had more field experience though all he ever did was research and comb through records. It was actually Aaron who went and did the bulk of the actual field work. Diving, digging, and climbing were the things that he loved doing. The three of them would be a formidable team. The team just needed to be restructured so that three people all did their parts instead of two.\n\nStacy was only trying to break into the boys club, not break it up. In her mind they'd be perfect. Bob would do the research and figure out what they were going after. Aaron would go and get it and Stacy would teach and lecture about it later. It would have been perfect.\n\nIt really would have been, but now it was all fucked up. Not only was the team broken up, Stacy's marriage to a man who had always treated her well and respected her, whom she also happened to love, was in jeopardy. She had also destroyed a lifelong friendship between the two men. Aaron had disappeared on her. She was still shocked that he hadn't shown up. She was further shocked that Robert actually thought that something was going on between them. \n\nApparently he'd thought that her \"thank you for firing the bimbo\" blow job was the beginning of some kind of relationship. Nothing could have been further from the truth. Robert couldn't compete with her husband on any level. He wasn't as attractive. He didn't arouse her in any way and she didn't like him nearly as much. Except for on a purely intellectual level, they had nothing at all in common. He had to be delusional to even think it.\n\nAfter he'd gone to the hospital, where the emergency room doctors had numbed Bob's scrotum so they could remove it from the zipper he'd constantly used the term \"We\" in conversation. \"What are \"We\" going to do?\" he'd asked. \"How are \"We\" going to handle this?\" Didn't he now that there wasn't a \"We?\" Bob had always treated her like one of his students. Until now he'd had no respect for her. The funny thing was that now, the one man who did treat her like an equal, the one man who respected her for her brain as well as her body, wanted nothing to do with her.\n\nTo make things worse, she'd had to leave the gala with her head down. The embarrassment alone of her \"walk of shame,\" had nearly killed her. None of the people who'd seen them would have much respect for them after that. Especially damning had been the reaction from the Dean's wife. That smoldering, dark haired woman had looked at Stacy as if she could see into her soul and found her wanting.\n\nElena Rinehart had looked at her with almost pity in her eyes. Stacy had asked her if she knew where Aaron had gone off to. She'd posed the question just to break the awkward silence, but also to give the woman the impression that Stacy intended to find her husband and make things right with him. Stacy knew those Greek women were reported to be very family oriented, but then most women were.\n\nElena had looked back into Stacy's eyes and said with a smile, \"Don't worry about him. He'll be just fine. I'll see to it.\"\n\nRemembering the woman's tone and expression had brought chills to Stacy. Thinking back on it now, she had to find Aaron. It shouldn't be too hard to do. That car of his ought to stick out like a sore thumb. How many Mustangs could there be on a small island?\n\nStacy dried herself off and started to get dressed. She put on a flower patterned blouse and cargo shorts. She also planned on wearing her favorite shoes. They had a high wedge heel that really made her calves stand out. Stacy was tall and slender. She had a figure that looked great in a bikini. Her legs were long and thin and her waist was flat. Her very light sun bleached blond hair and her blue eyes were probably her best features. Aaron had never been able to deny her anything when she pouted a little and hit him with those baby blue eyes.\n\nJust as she started to put her shoes on, someone knocked at the door. Stacy hobbled over with one shoe on and the other one in her hand to answer it thinking that it might be Aaron.\n\nRobert stood or hunched on the other side of the door.\n\n\"Hello sweetheart,\" he said. His voice sounded dry and devoid of any emotion. \"I would have been here earlier but I had to wait for the pain killers to kick in. I didn't want to call because I didn't know whether your husband had come back or not. I can see that he hasn't. I can tell that because his other wife isn't parked in the driveway.\"\n\n\"So what do you want, Bob,\" asked Stacy.\n\n\"Oh don't be upset Angel. I know that this isn't the way that you wanted this to happen. To tell you the truth this isn't what I wanted either. I really want to avoid hurting Aaron. After all, he is my best friend and partner. But I guess the attraction between us was just too strong. Anyway I'm sure we'll pull all of this back together in time to get out there and find ourselves a chunk of history. After all this is business and we're all professionals. In fact, that's why I came.\"\n\n\"You came here to suggest that we bury the hatchet and let bygones be bygones?\" asked Stacy.\n\n\"No, I came here because we have a meeting to go to over at the university to discuss the amount of support they'll give us and what they want us to do,\" said Robert. \"If Aaron's not back the two of us will have to go alone. He's usually bored at these things anyway. My whole face has swollen up and my jaw hurts every time I speak. It's going to be an awkward meeting.\"\n\nStacy realized that she had no choice but to attend the meeting. She wanted to be considered a part of the team and not just Aaron's wife. Being at the meeting and expressing herself would get people to see her as a true partner in this. So instead of tracking down her husband like she wanted to, Stacy followed Robert to his car.\n\nMaria was buzzing with excitement. She couldn't believe this was happening to her. She'd been expecting for Elena to offer her a position as a teaching assistant or maybe a position as a gopher on one of the expeditions. To be truthful she'd have preferred the gopher job because she had literally, no field experience to speak of. Research assistant was totally out of her reach, but head researcher was more than a dream, it was a pure fantasy. Of course she'd have to sell her future partner on the idea. And judging from what Elena had told her of his life during the past twenty four hours she wasn't sure what state he'd be in, but time was short.\n\nMaria was sure she could handle it. She had four brothers and had helped a couple of them through some relatively rough break ups. They also had something in common. His former partner was the one who'd hired her as a research assistant just days after she'd lost her teaching assistant post and then fired her before she even started to work for him. So neither of them was very happy with Dr. Thompson.\n\nShe'd been let go by Professor Dilworth, after working for him for a semester and a half. It had been totally his fault. He'd decided to take his staff out to dinner at a nice restaurant to celebrate a local holiday. The restaurant's dress code meant that Maria couldn't wear her baggy clothing. She'd worn a formless sack dress that was nice but still loose enough to conceal her figure. \n\nMaria had been the subject of much unwanted attention since she started sprouting breasts. Her figure gave some men the idea that she was up for grabs. Her large breasts drew far too much unwanted attention to her. Her slim waist only served to make them seem even larger than they were. She wore the baggy clothing to make people think that maybe she was just fat.\n\nMaria also had contact lenses that she could wear, but the large unsightly glasses helped to make her less attractive and she always kept her longish curly honey colored hair tied back in a bun that was so tight and severe that it made her seem like a much older woman.\n\nWhen the professor and the other men on his staff took a look at her breasts they didn't care what the rest of her looked like. The very next day the professor himself started \"accidentally\" rubbing against her every time he could manage it. When he finally got the nerve to simply grab one of her breasts, Maria kneed him in his sensitive area so hard that he walked funny for a week. The next day he apologized very sincerely and told her it wouldn't happen again. She actually believed him.\n\nTwo weeks later he called all of his staff together and laid them all off. At first Maria thought that it was directed towards her, but she found out that he'd laid all of his staff off. He'd laid the men off as well as both women. That settled her down and made her think that it was just a cost cutting move.\n\nA few weeks after the layoff, Maria found out that she was the only one who hadn't been called back to work for the professor. In fact, the others had all been rehired less than a week after they were laid off.\n\nThen there had come the research assistant position with Dr. Thompson. Maria had just found out that Thompson had given her position to another woman whom he was reportedly sleeping with. He'd looked like the grabby type anyway.\n\nMaria slipped into the back of the meeting room and recorded every word that was said and also took notes. Elena had told her that her new partner would probably be out of sorts for a few days and they'd need to submit their research and a location in their bid for funding and resources from the museum. They'd only have 4 days to do their research and present their bid. The Dean would fund the best four teams. There were at least twelve teams here. Some of them were known for traveling all over the world to find things.\n\nThompson and Anderson had a great reputation in the field. Maria wondered how exactly this would work. It was quite possible that she'd end up on their team anyway. That was one of the possible situations that Elena had suggested to her. That T and A would put their problems behind them and work together. If that happened she'd probably be Anderson's assistant and the other woman, whoever she was, would be Thompson's.\n\nAs she looked around she saw Thompson and some woman at his side but didn't see Anderson at all. Not that she knew what he looked like. Elena had only told her that he was big and handsome. Maria nodded politely at Thompson and taking her notes left as soon as the meeting ended. She needed to find her new partner and get started on their bid ASAP. \n\nElena had told her that he and his wife had rented a villa just off of campus. She decided to start there. She got a ride with one of her friends and turned up an hour or so after the meeting. She walked up to the door and knocked on it. She waited for a few moment s and knocked again. The villa was in great shape, not that its current occupants had anything to do with that. There were some areas that could use a bit of sprucing up, but that was to be expected. Having a home of her own was one of the things that Maria looked forward to. She wanted it all. She wanted to have a successful career and balance it out with a home and family.\n\nThe career thing was looking up, but she still had yet to meet a man that she could truly say interested her. She'd had lots of first dates but very few second dates and hardly any third dates. It wasn't like she was a virgin or anything. But she seemed to draw out the weirdos. They all started out being her non-sexual friend, mostly because when they saw her in her normal working clothes they didn't see her as attractive. But as soon as she showed any interest in them and they got to see what she was really built like, all of the non-sexual friendships and interest in her as a person disappeared.\n\nThey went from, \"Hey friend, wanna play Modern Warfare,\" to \"Hey baby can I feel those tits,\" in the same breath. The older men, as professor Dilworth had shown, were no different.\n\nFinally a woman came to the door. She looked as though she recognized Maria, which was strange because Maria couldn't remember ever meeting her. Then her mind clicked. She was the woman who'd been with Dr. Thompson at the meeting.\n\n\"Can I help you?\" asked the woman. She was probably nearing forty and though pretty for her age, seemed to be kind of out of sorts at the moment. She was tall and slender. She also wasn't encumbered by Maria's heavy breasts. Maria would have died to be built like that.\n\n\"If you're looking for Robert, he doesn't live here and you won't find him here. I had nothing to do with him letting you go,\" said the woman. She couldn't seem to look Maria in the eyes.\n\n\"Actually, I was looking for Mr. Anderson,\" said Maria cheerfully. \"Is he here?\"\n\n\"No he isn't and why would you be looking for my husband?\" asked the woman. Maria had already decided that she didn't like her.\"\n\n\"Business,\" said Maria, and started to leave.\n\n\"What kind of business?\" Asked Stacy who was becoming more upset with each passing second.\n\n\"Nunya,\" said Maria.\n\n\"What the hell does that mean? Speak English,\" said the woman.\n\n\"It means that my reasons are none of your business,\" said Maria. \"Have a really nice day.\" Maria walked away and got back in her friend's waiting car and they sped off. She felt like a complete idiot. Elena had told her that Anderson and his wife were in the middle of some kind of tiff. Why the hell did she go to his house? She'd have to look for him in other places, but where?\n\nMaria called Elena and asked her where she might find Mr. Anderson. Elena thought about it for a second and told Maria that the island was a very small place. There weren't too many places he could hide and he was probably hiding. You start checking hotels and look for his car. He drives one of those loud sporty cars, the American one with the horse on the front. Elena told her that she'd also check on it and call her back.\n\nElena Rinehart was a strange woman, thought Maria. Though she didn't appear to be much older than Maria; her mannerisms often suggested a much older woman. Maria absent mindedly fingered the necklace that Elena had given her at their first meeting. Even stranger was the fact that the woman had made Maria promise not to ever take it off for as long as she was in the region.\n\n\"It will protect you,\" said Elena. It smacked of old world beliefs and witchcraft to Maria. How backwards could a University Dean's wife be? Oh well, Maria liked Elena and she'd given her word, so she wore the necklace. It was pretty anyway. \n\nNearly four hours later Elena called her back. \"It took a while to find him, even for me. Apparently the people here love that man already. He's definitely hurting over what happened at the gala.\" Elena told Maria what had happened and told her to keep it to herself. \"He has a room at the Hanging Dog Hotel down near the harbor,\" said Elena. \"You need to find him fast if you want to get on the team. From what I hear, Thompson will be ready with the team's bid in only a few days. If you're not signed on by then, you may still go out with them but it'll only be as a crew member, which won't get you any kind of credit. And I want you to have that.\"\n\nMaria borrowed the friend's car and headed for the harbor. Once there she walked around and asked directions to the Hanging Dog. It took a while for her to get over the fact that everyone she met wanted to ask about her accent. Then it took even longer to realize that no one actually called it the Hanging Dog. All of the locals called it the Hang Dog. She couldn't figure that one out but it didn't really matter. She went to the hotel. It was smaller than she expected and kind of seedy.\n\nIt was about 8 p.m. when she got there and just starting to get dark. The sun going down and the moon rising over the sea was really wonderful to look at. If Maria had time, she'd love to just take her shoes off and stroll along the beach. Of course, unlike in her dreams, she'd be doing it alone. But shit a beautiful ocean front stroll was a beautiful ocean front stroll. Whether she was with someone or not, it would still be a very special thing to remember someday.\n\nMaria sat at the bar and fended off some of the local gigolos who all thought that they'd sweep her off her feet, out of her panties and into the poor house in one evening.\n\n\"Oh my God, your accent is so wonderful, beautiful lady,\" said one truly inspired lothario.\n\n\"Look Romeo, get the fuck away from me,\" snapped Maria smiling. \"If you don't just turn around and leave, I'll scream \"Rape\" at the top of my God damned lungs.\" She said all of this in a voice that only he could hear while smiling the whole time.\n\n\"So sorry,\" he said just loud enough for the people in the immediate vicinity to hear. \"I did not realize that you were a lesbian.\"\n\nAfter that exchange, Maria was pretty much left alone. However, several women did come over to sit near her, but none of them made a move.\n\nMaria had begun to think that Elena had led her on a wild goose chase. After all what would a famous explorer be doing in a place like this? Everywhere she looked, there were the gigolos and a few whores plying their trade on the few tourists who'd ventured this far off from the typical tourist haunts. Most of the people here were only here to drink and relax. There had been a few musicians who played a song or two during the evening. Some played Gypsy type music while others had gone for the traditional Greek genre. Nearly all were met with a smattering of applause and a lot of disinterest. \n\nJust when Maria was about to leave, it happened. She'd drunk more than her usual amount of beer and had decided that she was going back to the dorm to pee. A big man came down the back staircase. He was well over six feet tall and though he was smiling, his eyes conveyed a sense of sadness deeper than anything Maria had ever seen. If it could be said about a man, he was beautiful. He had dirty blond hair and eyes as deep a shade of blue as the ocean outside. \n\nHe staggered into the bar area as if he was a little bit drunk. He was met by a round of catcalls. The funny thing about it was that though he seemed to be loved and accepted by all of the locals, he didn't look like one of them. He didn't appear to be Greek. He looked like an American. \n\nHe sat down in front of the bar and someone patted him on the back and stuck a drink down near him. The drink they gave him wasn't one of the tourist drinks or even the bottled liquor the bar served. It was in a pot or a jar. It appeared to be some type of Greek homebrew. He looked at it, sniffed it and titled his head back. His eyes got huge, which for some reason caused Maria to smile.\n\n\"Wow,\" he said in a really loud voice. \"That'll put hair on your chest.\" The crowd roared and Maria couldn't help but laugh at him too. For some reason she wanted to like the man as much as everyone else here did.\n\n\"Sing one Andy,\" yelled someone from the back. Now Maria knew what the man's name was. It was Andy, something or other. Someone handed the man a guitar that looked like it had seen better days. He made a few adjustments of the tuning pegs and strummed it. He tapped the back of the guitar and strummed it again.",
        "\"I think I've got the perfect song for this place and this crowd,\" he said. The crowd roared again. Maria was transfixed. As badly as she had to pee, she couldn't leave. Inwardly she hoped that the man couldn't sing. She hoped that he'd be as bad as the previous musicians had been so she could get the fuck out of there and go back to Elena for another tip, tomorrow. The Hanging Dog had been interesting but a dead end. Of course Maria could go and ask for the guest list. Or even knock on some of the doors. She'd try all of that tomorrow as soon as she took care of her bladder and had a good night's sleep to get rid of the alcohol she'd consumed. Aaron Anderson had better be worth the trouble it was taking to find him.\n\nThe man started to sing. He had a rich Baritone voice and was actually kind of good in a weird way. He didn't sing like rock stars, or great jazz musicians it was sort of like a cross between folk and country.\n\n\"I go in for singing. I do it for my pay.\" He sang.\n\nThe crowd seemed to really get into what he was singing. Maria hadn't ever heard the song before so she didn't know whether he was good or not. She'd missed the lyrics of th next line or two while she looked at him.\n\n\"With a few good friends and neighbors in to play the night time tunes,\" he sang. \"So pass the jar and that old guitar in this Hangdog Hotel room.\"\n\nThe crowd was screaming so loud after that line that Maria couldn't hear him anymore. She wondered if he'd ad-libbed it or if the song actually went that way. There was something about the man that just seemed to draw her in and make her feel comfortable. She reluctantly turned away and left the room, though she really wanted to stay. It wasn't just the song, it was the man himself. Though he was older than Maria, she was seriously attracted to him, which shocked her. But she had no time for dalliances; her future depended on the next few days. So, two things forced her to leave. One was the fact that she had to pee really badly, and the other was the fact that she wasn't going to find Aaron Anderson by sitting here listening to some wannabe folk singer, no matter how dreamy she found him.\n\nStacy Anderson sat at her desk and looked out over the sea. Though the villa wasn't near the water, it sat high enough on the hill that the sea was visible from nearly every room at the back of the house. Looking at the sea was comforting for her right now. She hated the water, but Aaron loved it so much. She was sure that somewhere out there he was looking out at the sea too. \n\nShe wondered where everything had gone wrong. Robert was treating her so differently now. He was acting as if there was something going on with them. And he was so arrogant. Why hadn't she ever seen that before? Ever since they'd left the meeting he'd had that smug little smile. He kept trying to find Aaron himself and he told her to keep calling him. It was so funny; he really thought that they'd find Aaron and find some way to get him to forgive both of them. Then business could go on as usual. Only it wouldn't be the way things had always been because he expected her to have sex with him behind Aaron's back.\n\nHis exact words had been, \"What he doesn't know won't hurt him.\" He acted like she was some whore. He really thought that she was the kind of woman who would fuck around on her husband. He made it seem like they'd share her. She'd be Aaron's wife in public and Robert's whore in private. The worst thing about it was the way he treated her. During the afternoon after that awful girl had left, he came over. His apartment wasn't big enough for him to keep all of his research material and charts in so Aaron had given him the use of their library on the first floor. He'd started looking up some of the local legends and things like that. He'd made up a list of things he was interested in and their possible locations. He needed to go out and talk to the locals about them. \n\nWhen she asked him when he intended to do that he'd told her that Aaron usually did that. Aaron had a way with people. \n\nShe asked him about getting a crew together and again he told her that Aaron usually did that too. The funniest thing about all of this was that for years Stacy had thought that Robert was the smart one. She'd really believed that he was just helping out his old friend. But now she was beginning to see that her husband had more than pulled his own weight. Maybe she'd chalked it up to the fact that she and Robert had a lot in common since both of them came at things from a purely academic perspective. \n\nBut what she noticed this afternoon, that unlike her husband, Robert never listened to any of her theories or ideas. He didn't treat her like a partner; he treated her like a servant. When he'd gotten bored he'd come over and started playing with her breasts like he owned them. At first Stacy was shocked. Her mind told her to tell him to get his fucking hands off of her. But then she realized that if Aaron never came back, as much as she hated Robert now, he might be useful.\n\nHer mind recoiled at the memory of his touch. His hands didn't caress her skin lovingly, he simply pawed her. It took her a while to figure out was the difference was. When Aaron did the very same things, his touch was meant to stimulate her, to get her aroused so he could make love to her. Though he enjoyed touching her himself, he did it in a way that she enjoyed it too.\n\nRobert on the other hand didn't care whether or not she got anything from the touch. He did it just to arouse himself so eventually when his nuts healed he could fuck her; whether or not she enjoyed it. This wasn't the sharing done by two people in love. It would just be something to do so he got off.\n\nShe felt like such a fool. And she wasn't alone in that knowledge. Everyone she ran into looked at her like they were laughing at her out of one side of their faces and spitting on her out of the other.\n\nThe worst thing about it was that she'd done it so casually. She'd never had any intention of ending her marriage. She'd only wanted to muscle her way into the boys club and be thought of as an equal. Her husband had always treated her that way, but it had been a sort of segregated equal. He had respected and welcomed her opinions and ideas, but only as an outsider. He and Robert were the company; she'd been at best a concerned colleague. \n\nComing to Greece and working for the university here gave them all a chance to fulfill their dreams. Instead of a partnership between the two friends, she'd wanted to be included. The quick blowjob she'd offered Robert had only been meant as a \"thank you\" for allowing her to be a part of things and possibly as a way to get him on her side for future endeavors. \n\nBut things had gone terribly wrong and now she had no idea where her husband was and Robert considered her his property. Even worse was the fact that for some reason the girl that Robert had fired was tracking her husband down. \"Business,\" she'd said. What kind of business could that girl have with Aaron?\n\nEven as Stacy considered the possibilities the doorbell rang again. Stacy ran to the door and then remembered that Aaron wouldn't have rung the bell since he had a key.\n\nRobert came in as soon as she opened the door. As she led him into the house he reached out and grabbed her ass. She jumped in surprise and glared at him. \"What's wrong baby? Aaron isn't here is he?\" he asked.\n\n\"No,\" she replied. \"I was just startled by it.\"\n\n\"I think I know where we want to explore and what we're looking for,\" he said. \"Did you get things settled with Aaron yet?\"\n\n\"He still hasn't come home yet,\" said Stacy. \"I don't know where he is or even where he slept last night. I'm about to go to bed alone for only the second night since we've been married.\"\n\n\"You don't have to go to bed alone,\" leered Robert.\n\n\"What if he came back while you were here?\" asked Stacy. \"Last time he saw you, he laid you out with one punch and he was in shock then. This time you probably wouldn't be nearly as lucky.\"\n\n\"Yeah, you're right,\" said Robert. \"Well, make some calls. Do whatever it takes just find him.\"\n\n\"But what do I do when I find him?\" asked Stacy. \"I can't make him come home. I can't make him speak to me or take me back. I can't make him forgive you or speak to you, let alone work with you. Just what are you expecting me to do?\"\n\n\"He's your husband, figure something out,\" said Robert.\n\nStacy watched as Robert left the house. He'd done it again. He'd told her that he'd decided where they needed to start their search. But he hadn't bothered to tell her where that was, or even what they were looking for. It was as if her opinions and ideas simply didn't register. And he'd simply grabbed her ass like it was his to play with whenever he wanted. Instead of getting better, her life was going south quickly.\n\nThe next morning Maria called Elena as soon as good manners would allow. She'd been up since just after six and had waited three hours to give the woman time to wake up and have breakfast.\n\n\"Mrs. Rinehart, are you sure I'll be able to find him at that hotel?\" she asked. \"It seems kind of run down. It doesn't seem like the kind of place a professor would hang out in.\"\n\n\"That's because he isn't a professor and he doesn't act like one,\" said Elena. \"All you have to do is go there and ask someone about him. I'm betting by now everyone there is his friend.\"\n\nMaria got dressed and went back to the Hanging Dog. She sat down at the deserted bar and asked the woman behind it if they served breakfast.\n\n\"Of course we do,\" said the woman.\n\n\"I'll have scrambled eggs and toast, with bacon or sausages,\" said Maria. \"And black coffee please.\"\n\n\"We don't have any of that on our breakfast menu,\" said the woman in a bored voice.\n\n\"What do you have?\" asked Maria.\n\n\"We have beer,\" said the woman.\n\n\"What else do you have?\" asked Maria.\n\n\"Beer,\" said the woman. \"We also have other types of liquor, but we don't serve them until after noon. This is a classy place after all.\"\n\n\"Do you know Aaron Anderson?\" asked Maria in frustration.\n\n\"Everyone knows double A,\" smiled the bartender. The smile was a little bit too broad for Maria's taste. She thought that the bartender might have too great a knowledge of the man she was looking for.\n\n\"Could you tell me where I might find him?\" asked Maria slipping into her most precise and clipped British accent.\n\n\"He's upstairs in his room. Its number 207,\" said the bartender. He probably won't wake up until later though because he got really drunk last night.\"\n\nMaria took the stairs and went up to the second floor. Once there she walked down the hall and looked at all of the numbers on the rooms. When she got to 207 the door was cracked so she just went in.\n\nShe looked around the room and found nothing spectacular. She looked at the form on the bed and was shocked. Aaron Anderson was the singer she'd been so taken with the previous evening. \n\nHe lay there half covered, still in the clothes he'd worn the previous day. His shirt was unbuttoned nearly to his waist revealing a muscular and lightly furred chest. Maria felt herself wondering what the rest of him looked like. His face was covered by about three days of accumulated beard growth, but it suited him. It made him look as if his appearance wasn't the most important thing in the world to him. Sure he could clean up if the situation warranted it, but other than that he was more interested in doing whatever he had to do. He'd probably get up, brush his teeth, shower and hit the streets. Maria loved it. She was tired as hell of primping, chest shaving, metro-sexual assholes.\n\nWithout even realizing she was doing it, Maria reached out to brush a wild lock of hair away from his face. Before her hand even got within range, his eyes snapped open and he grabbed her hand.\n\n\"Why are you in my room?\" he asked calmly. \n\n\"Th-th-the door was open,\" she said. \n\n\"But that doesn't give you the right to just come in, does it?\" he asked. She shook her head no.\n\n\"I've been looking for you for a couple of days,\" she said as if that explained it all. \"Mrs. Rinehart thought that I might be able to join your team and help out as your research assistant. I was supposed to work for your partner but he fired me before I even got a chance to start. He picked Dr. Anderson...Uhm your uhm wife as his assistant. Anyway, Elena, uhm Mrs. Rinehart thought that you might want an assistant too. We have to get started right away because we only have about 3 days left before the bids have to be in and the university will only finance five teams. There were fourteen teams at the meeting you missed. Some of them have already submitted their bids and proposals so time is short. We have to get together with the rest of the team and figure out what to put into our proposal and what our bid should be for equipment and such.\"\n\nMaria watched as he sat up in bed. He was still fully dressed. He even had his boots still on. He'd obviously just staggered into the room last night after drinking or whatever else he did to himself and just fell onto the bed. He could just as easily have simply fallen onto the floor. For some reason that she couldn't explain the thought of him falling onto the floor and hurting himself really bothered her.\n\nDuring the night he'd probably gotten a chill and just wrapped the blankets around himself and woke up that way. He was shaking his head at her.\n\n\"Which part are you shaking your head at?\" she asked.\n\n\"All of it,\" he said quietly. \"We don't have to do any of that stuff. I quit. I'm going home.\"\n\n\"May I?\" asked Maria pointing at the edge of the bed.\n\n\"Well, since you're extremely polite for a burglar, please do,\" smiled Aaron.\n\n\"Okay,\" she said sitting delicately on the edge of his bed. \"Mrs. Rinehart herself told me to find you and join your team. There had to be a reason why she told me to do that. She seems to know everything that's happening on this whole fucking island.\" Aaron's eyes lit up at her use of the American profane term. Her words had been delivered in that precise, clipped, British accent that he found remarkably attractive. The word \"fucking\" which she enunciated perfectly, even pronouncing the \"G\" stood out like a sore thumb. It actually cheered him up.\n\n\"There has to be a reason why she didn't simply send me to your partner,\" she continued. \n\n\"She thinks he's an asshole,\" said Anderson. \"I can't believe I defended that bastard the other night. Of course that was before I found out that she was right.\"\n\n\"Ooh, I've only met him once, but I quite agree with Elena. He's an arrogant prick. I believe she called him an insufferable asshole,\" said Maria.\n\n\"Well she's only had to deal with him for a few days,\" said Aaron. \"I've known him all of my life. He was my best friend besides being my partner.\"\n\n\"Was?\" asked Maria lifting one small eyebrow in surprise. \"It isn't often that you hear of a lifelong friendship going tits up in a matter of days.\"\n\nAs much as he was trying not to, Aaron found himself liking the lumpy little woman. Woman, he thought, she was barely more than a girl. She couldn't have been a day older than 24 or 25. Her glasses were the ugliest thing he'd ever seen. And she was shorter than he liked his women but still, there was something about her. He found himself wanting to talk.\n\n\"It wasn't a matter of days,\" he began. \"It was a matter of minutes.\" He continued talking until he'd told her the entire story about the night 3 days past, when he'd found Stacy and Robert together.\n\nHe poured out his heart to her and told her how much he'd loved Stacy and how awful it was to lose both her and his best friend at the same time. The only thing that would have been worse would have been to have lost his Mustang.\n\n\"That's awful,\" said Maria. \"What did she say when you spoke to her? How did she defend her actions? Did she say that it was just a one off thing? Was she drunk? Was she forced into it? Does she love him? What did she say?\"\n\n\"I haven't spoken to her since I caught them,\" he said.\n\n\"Well, what did he say?\" she asked \n\n\"He wasn't capable of speech, when I left them,\" smirked Anderson. Maria noticed that his eyes glinted dangerously.\n\n\"So you just slunk off into the bushes to die after that bastard took your toys away huh?\" asked Maria. \"Somehow after meeting you for only a few minutes, that doesn't seem like something you'd do. And you're just going to quit your career and go crying home with your tail between your legs?\"\n\n\"What do you think I should do?\" he asked. \"Not that I'm going to do it, but just out of curiosity. This isn't a reality TV series, you know. This is my life. I've been married to Stacy for 9 years. So catching her doing that, hurt me badly. I'm not exactly on my \"A\" game right now.\"\n\n\"Well you have 2 choices,\" said Maria. \"You can go back, talk to them and figure out what you're going to do. You have two choices there as well. One, you can take her back and forgive either one or both of them. Or you can just chuck the whole thing and get on with your life. Just go ahead and do what you really want to do.\"\n\n\"I guess deep down inside, I love Stacy and I'd kind of like to see things work out for us,\" said Aaron. Thanks uhm....\"\n\n\"Maria,\" she supplied.\n\n\"I'm going to go over to the villa and try to talk to Stacy now. She has a lot of explaining to do if we're going to stay married,\" said Aaron.\n\nAn hour later, Aaron was dressed and clean. He and Maria got into his Mustang and drove over to the villa. She was surprised by the reaction the car got as they drove through the early afternoon. When they got to the villa, Aaron got out. Maria told him she'd wait in the car to give him some privacy. \n\nAaron walked up to the front door but as he passed by the living room windows he stopped short. There on the sofa in the living room was Stacy. She was lying on her back staring at the ceiling as Robert Thompson fucked her. Rage colored Aaron's face as he watched Robert stroking in and out of Stacy. He kissed her on the cheek and it looked as if she smiled when he did it. \n\n\"Robert, I'm cumming,\" said Stacy, listlessly. That seemed strange to Aaron because his wife usually just screamed when she exploded. And she usually wrapped herself all over him because she just lost control of her limbs. Her hips movements weren't spasms as they usually were either. This was probably what she wanted anyway. Seeing her fucking his best friend was enlightening. It was calmer and more dignified than the sex that he had with Stacy. She probably liked that. She and Robert were much more classy people than Aaron would ever be. It was time to face the facts. They had a lot more in common than Stacy and Aaron would ever have. It wasn't just the degrees and education, this clinched it. They were simply more suited to each other than Aaron was to either of them. He wondered if she'd ever really loved him.\n\n\"Sorry,\" said a quiet voice beside him.\n\nAaron looked down and saw Maria standing next to him. He turned away a bit too late for her to miss seeing the tears running down his cheeks.\n\n\"Okay Maria, what do you do?\" asked Aaron looking at her seriously. He wiped his face and turned back towards his car. She ran to catch up with him.\n\n\"What do you mean what do I do?\" she asked. She was shocked by his abrupt change in demeanor. \"Uhm, I don't do what we were just looking at, if that's what you mean. Well I do, uhm do it. I mean...I don't do it with someone else's...Oh crap....\"\n\n\"Maria, what I want to know is what you specialize in?\" he said. She was still puzzled and her confused look made him rephrase his question.\n\n\"Work-wise,\" he said. \"In terms of your career what are your interests?\"\n\n\"Oh!\" she said. \"I want to be a professor of history.\"\n\n\"Great,\" he smirked. \"We just left two of those back in the villa. Are you sure you don't want to go back there and make history with them?\"",
        "\"Absolutely not,\" she said. \"I'd rather make history with you.\" Then she realized what she'd said as one of his eyebrows arched and he looked at her.\n\n\"Okay, you're my new researcher. Make a list of everything you'll need. I'll go and see how much it's going to cost to charter us a boat. You can start doing your research anytime you want,\" he said.\n\n\"Well shouldn't we wait for them to get done and confer with...\" before she had even finished her thought, he turned towards her faster than she'd have imagined possible.\n\n\"Maria, from this moment on we're on our own. I will no longer work with my former partner ever,\" he said. \"I will also no longer have anything to do with my former wife. I wish them well, but this is no longer about them, it's about moving forward. If you'd like to work with them, I'll write you a nice letter recommending your services but that's all I can do for you.\"\n\n\"Nope, I'm fine with you,\" she said realizing she'd done it again. \"It's just that I've never actually researched a project before. Actually I've never been on a field exploration at all. I've taught lots of classes, but that's all.\"\n\n\"Don't worry about it,\" said Aaron. \"Half of the time, Robert's research only got us in the ball park anyway. He only served to narrow down the entire planet to a specific area and sometimes not even that. Of course, he did give us a great idea of what we'd find but in this case it's really not about what we find is it?\"\n\n\"What do you mean?\" asked Maria.\n\n\"We aren't going out to look for a specific type of item,\" he said. \"And let's face it we're in Greece, we're going to find Greek and possibly Roman items. We already know that. We also know that the University will pay for the team that finds something. That team will also get the contract with the University for future exploration. That's what I'm interested in. If you want the professorship and we're successful, I'll do my best to help you get it. But this isn't really like normal field work, this is basically a race. \n\nThere are a bunch of different archaeological exploration teams racing through the ruins of Ancient Greece. To the winner goes the spoils and we're going to win.\" As he said this his smile lit up his face. Maria found herself wanting to believe, but she was sure that Dr. Thompson and Dr. Anderson would be doing far more thorough research than she was capable of and they had at least a three day head start.\n\n\"Okay partner, get busy,\" he said. \"Dig up any specifics you can and get a few friends who are willing to help us. They'll be paid of course, plus they'll have the experience to put on their resumes.\" He handed her a card with his cell phone number on it. \"Call me if anything comes up. If not, I'll meet you back at the Hang Dog this evening.\" He drove off leaving her in front of the hotel where she'd first found him.\n\nMaria nodded her head and headed back towards her friend's car. She was sure that Dana, the girl who owned the car, would want to help and she knew a couple of her class mates who'd kill for the chance. She also had to call Elena to keep her in the loop as to what was going on.\n\nAaron drove down towards the docks. He spent some time talking to some of the people he'd met and hung out with during the week. Within a couple of hours he had a crew and a boat that would be great for his purposes. He had the owner of the boat write out an estimate of the costs to charter the boat for a week. Aaron was going out stripped this time. He was not going to hire a huge comfortable research vessel with large staterooms and personal amenities. That was the way that Robert always liked to go. Aaron's boat would be equipped for two things exploration and speed. \n\nThe boat would have a few computers and scanning equipment for underwater viewing and subsurface radar. Aaron wanted to be able to thoroughly search any area he chose. He wouldn't skimp on equipment, but other than equipment he needed to find the fastest boat he could. No extra weight for leather couches or fancy woodwork. No movie screens and plasma televisions. No bathtubs, refrigerators or convection ovens.\n\nThe rest of the afternoon was spent on the phone. He'd made several phone calls back to the states to speak to his lawyer and had several processes going at the same time. Stacy had called him several times but he hadn't returned any of her messages. He'd really meant what he'd told Maria about how he wished his soon to be ex wife well, but he had nothing to say to her or Robert.\n\nStacy turned the shower on and stepped inside it. Her life over the past few days had gone to hell. She hadn't heard from her husband since the night of the gala. Somehow her idea to become a partner in her husband's career had backfired big time. She had to go along with whatever Robert wanted because he was her only friend here and also her only chance to salvage any of this fiasco.\n\nShe couldn't believe that she'd had sex with him. It had been awful. It actually wasn't awful, it was worse than awful. It had been nothing. Robert had just humped away at her, while she felt nothing. Part of it was the simple fact that Robert was nowhere near Aaron's physical size. Then there was the fact that Aaron had spent the last 9 years learning what she liked, so he knew just what to do to make her enjoy it. Robert on the other didn't seem to care whether or not she got anything out of it. Afterwards she'd just stayed there lying down on the bed feeling like the whore her husband had said she was. Was advancing her career worth this humiliation?\n\nAnyway, they were only a day away from the deadline for turning in their bids and proposals. Robert hadn't known what to look for in the boat because that was Aaron's area. They also hadn't been able to get any recommendations about their crew. They'd ended up hiring a captain who brought his own guys with him. Robert had been able to get a few University students to help with the diving but none of them had very much experience. Robert could dive but he wasn't very good at it. He'd have to this time though, to make sure that they weren't taken advantage of or cheated. Both of them were hoping that Aaron would show up.\n\nRobert had done a very good job researching the area and he thought that he had a few insights that no one else had. This whole situation had simply brought home exactly how much of a partnership they'd really had. They were stuck with inexperienced divers, a captain they didn't trust and crew who didn't respect them. In fact Stacy hadn't like the way the men looked at her at all. She was sure that Robert would be no protection if things got ugly, so she'd decided to stay ashore.\n\nAs yet another evening approached she sat on the balcony and watched the sea again. This time she couldn't help crying. This was not turning out anywhere near the way she'd wanted things to. She wanted to be a part of a well-known and respected educational institution and do important research in her field of Ancient history. \n\nNow she was basically her husband's partner's whore. If she was lucky she might get a position as one of Robert's assistants. If she wasn't lucky she might have to go home divorced, heartbroken, penniless and looking for another job. \n\nWhen she first got here one of the things that she was most assured of was her marriage. In her quest for career advancement, she'd risked that marriage and now wasn't even sure that it would survive. Robert told her that they'd tell Aaron whenever he showed up that they hadn't seen or spoken to each other since the gala. They'd tell him that they'd both started drinking a long time before he got there and had both been wasted. They both regretted their actions totally and had not been of sound mind when it happened. They would both beg his forgiveness and try to put the incident behind them.\n\nIt actually sounded somewhat logical and Aaron could probably relate to it since he'd gotten drunk a few times and done some really stupid things too. But as drunk as he got, she had to admit Aaron had never cheated on her and they were constantly around young attractive college girls.\n\nHe'd been so drunk once that he hadn't tied off a boat they'd rented and had caused several thousand dollars of damages when the boat floated away, but things like that were the extent of his drunken behavior.\n\nAs big and formidable as her husband was, he was an easy going guy who didn't carry grudges. Stacy was sure that once he got over being angry at her, he'd come back to her. Robert was also certain of that. \n\nStacy also knew that she was depending on Robert or her husband to stay here. She and Aaron had spoken several times since they'd arrived of settling down here. Papalis was the only University in the area and for some reason the Dean and his wife had taken a strong dislike to her. She doubted very seriously that the Dean would hire her on her own, no matter what her qualifications were. She wasn't very sure about how the Dean felt about Robert but she was sure that he liked Aaron. They'd played golf on several occasions the first week they were here.\n\nTwo days later, Stacy and Robert met in the large room where the gala had been held, with hundreds of others to await the selection of the teams that had been chosen. There was an air of nervousness in the room. Just waiting for the meeting to begin was very stressful. No one knew which bids had been accepted yet. But there were rumors that the selection process had been changed at the last minute.\n\nRobert and Stacy sat near the middle of the rows of chairs provided for the attendees. They sat apart from each other with several of the students who'd be working with them between them. Both were hoping for and expecting one of Aaron's last minute arrivals. Both of them had a sense of foreboding about this project. For Stacy, it was a feeling like her life had been going in the wrong direction ever since she'd had her first tryst with Robert.\n\nFor Robert, it was outright fear. This was probably the biggest challenge of his career thus far and he had no confidence in anything except for his research.\n\nThere must have been a thousand intricate little details that Aaron usually handled, that Robert had to try to do him-self. He'd tried to replace the captain and crew only to find out that he couldn't get anyone else on such short notice. If Aaron had been here things would be different. For some reason people liked Aaron. And the ones who didn't like him respected his physical size and strength.\n\nAfter the captain and his crew discovered that Robert had been trying to replace them, the level of trust between them had eroded further. Come on Aaron, get your ass in here thought Robert. You can have your whore back. She's not worth it.\n\nSuddenly the room got quiet. Robert looked up and saw the Dean step onto the stage at the front of the room. As he began to speak the room got totally quiet.\n\n\"We do this challenge every few years or whenever there's a need,\" said the Dean. \"This year besides the monetary benefits we're looking to augment our staff. This time it was particularly difficult to narrow the field down to the five choices, mostly because we had so many well done proposals. It created a problem for us because they were all also very similar. It would appear ladies and gentlemen that the internet and computers bring us closer every day. Some of your search areas overlap and many of them are within a few meters of each other. We've never had a group of results that were so similar since I've been Dean here.\" Everyone in the room looked around at each other even more nervously.\n\nRobert was shocked; he'd thought his research was unique. Suddenly Stacy leaned over the two students separating them and tapped him on his hand. He looked at her and she pointed over towards the wall on the left side of the room.\n\nHe felt better immediately when he noticed where she was pointing. The Dean's beautiful wife was leaning against the wall, but more importantly, next to her stood Aaron Anderson and he had his game face on.\n\nRobert had seen that look on Aaron's face literally hundreds of times when their backs were up against the wall and they'd always come through. Robert wanted to jump up and scream he was so happy, but he held it in. He was after all a professional. Both he and Stacy stared at Aaron wondering what they'd have to do to make things work out.\n\nRobert looked again and made eye contact with Aaron. Aaron gave him a slight nod of his head and turned back to listen to what the Dean was saying. Robert nodded back and noticed no anger in his friend's nod or on his face. Aaron was all business.\n\nStacy had noticed the nod between her husband and Robert. She tried to make eye contact with him too but he was concentrating on the Dean. He did seem to stop and talk to the Deans wife several times and the woman had rubbed his shoulders a couple of times. Stacy wasn't comfortable with the woman putting her hands on Aaron. When this meeting was over, she might just have to explain that to Mrs. Rinehart.\n\n\"Remember the plan,\" Stacy hissed to Robert. He simply nodded. Stacy was sure that Aaron was, despite his nod to Robert, still angry at them but as a professional was here to work. He hadn't so much as looked at her which meant that though he was willing to work with Robert, he wasn't as forgiving with her. It made sense because he'd always told her Robert was his best friend, but she was his heart. According to their plan whoever Aaron was ready to forgive, would intercede as much as possible for the other.\n\n\"So since the proposals were all so similar,\" continued the Dean. \"We used different criteria for our selections. Two of the teams were picked solely on the basis of their reputations. Dr. Thompson's team from the United States and the team led by Dr. Ishikawa from Japan and his partner Dr. Helen Chambers from England. We also picked a team comprised totally of students from our own University. The Team from Germany led by Herr Shtang was selected and finally the team from the Netherlands led...\" The rest of the Dean's words were cut off by loud cheers and groans. \n\nSuddenly a very shrill whistle cut through the air. Everyone looked around to find the source of the whistling. It was Elena Rinehart. She smiled and pointed back towards her husband on the stage.\n\n\"As I was saying,\" continued the Dean. \"Due to the similarity of all the proposals we eliminated some because they were simply too expensive and some because they were ridiculous. Others we felt were simply not based on sound reasoning. But we did decide strictly on faith and reputation to allow one more team into the challenge. The team led by Aaron Anderson, who was formerly the partner of Dr. Robert Thompson. Mr. Anderson's new researcher is Dr. Maria Clarridge of England, who recently graduated from our own University. One of the reasons we picked them was because the selection of Thompson Anderson was made based on both of their reputations. With them splitting up it was decided that it was only fair to allow them both to participate. There was also the fact that Mr. Anderson's bid was considerably cheaper than any other bid in the challenge and that they are the only group of the selected teams who are exploring a different area. Thank you very much for your participation thus far and good luck to those of you who are still involved.\"\n\nRobert was in shock. He'd known that Aaron had been angry, but this went beyond anything he'd thought possible. They'd been friends since they were 6 years old. They were closer to being brothers than friends. Robert's mother looked at Aaron as if he were her other son. They were family for Fuck's sake. Why would Aaron want to mess that up over a woman?\n\nStacy was in as much shock as Robert was. Maria Clarridge had to be that girl who'd come looking for Aaron the other day. Stacy was sure that the Dean's nosey wife had put the two of them together. It was even more obvious that the woman had designs on Aaron. She'd stuck Aaron with a brilliant but unattractive researcher who was a friend of hers. That way she could do whatever she was planning with Aaron with no competition.\n\nShe looked over at Robert to see what he was thinking and found that he was already trying to make his way over to where Aaron and the Dean's wife were still talking. The lumpy little woman was there too. Stacy noticed that a man had intercepted Robert and handed him some papers. Robert was suddenly angry and screaming at the man who simply nodded, smiled and turned away.\n\nStacy decided to let Robert deal with whatever was going on himself. It was probably something related to the equipment or personnel for the project. He hadn't sought her opinion on the research which was just as much her specialty as his, so let him deal with the bullshit details alone as well.\n\nStacy too turned towards the wall where Aaron had been standing. He, Mrs. Rinehart and the other woman were walking towards the exit with another young woman. This one was taller and less lumpy than Dr. Clarridge. She could be a threat. Stacy watched as the girl reached out and placed her hand on Aaron's lower back as she asked him a question. It was a supposedly innocent gesture but Stacy knew that when a woman wants to show interest in a man, one of the things she does is to find ways to touch him. This gets the guy used to her touch and makes him want more of it. But more importantly it tells other females in the area that the woman is marking her territory.\n\nStacy was beyond pissed. She'd kill that little bitch for daring to touch Aaron. This was simply going too far. She had to talk to her husband now. Robert came up behind her. He was fuming and about to say something when suddenly a young woman stepped in front of Stacy.\n\nThe girl was probably a college student and even more probably trying to get on their team or offer to be Stacy's assistant in exchange for a letter or a recommendation. \n\n\"Dr. Stacy Anderson?\" asked the girl in a bored voice. She was even chewing gum.\n\n\"Yes,\" said Stacy in an even more bored affectation. She took the papers the girl handed her and looked at them to see where she had to sign them. She could always accept the girl as an assistant and then let her go later.\n\n\"You've been served,\" said the girl walking away.\n\nStacy was in shock. Her life had suddenly gotten worse. She collapsed into a nearby chair. Robert stood glowering over her. \"This is all, your fucking fault,\" he bellowed. \"My best friend is taking me to court to formally dissolve our company and split the assets. He has also named me in your divorce. The scandal will definitely hurt my reputation among some of the old fuddy-duddies who fund grants for academic research. You've really fucked my life up Stacy, thanks.\"\n\n\"Robert, blow it out of your ass,\" shrieked Stacy. \"I don't give a good God damn about your money problems. My husband is divorcing me.\" Stacy took off in the direction that Aaron had been walking in. By the time she got outside he was already gone. All she could hear was the sound of the Mustang's exhaust system in the distance. \n\nMaria was packing all of the things she thought she'd need on the boat. She was really uneasy and angry for some reason. Actually it wasn't just unease or nervousness about the project. She was specifically pissed at Dana. She didn't actually have a reason to be angry at Dana but she was.\n\nDana came, flouncing into the room. She was happy but there was nothing unusual about that. Dana was the most happy-go-lucky person Maria knew. Nothing bothered Dana. Maria was sometimes jealous of her friend's ability to keep a positive attitude no matter what. \n\n\"We're going to have such a great time,\" said Dana. \n\n\"Some of us more than others,\" snapped Maria. \"Some of us have to work and our careers are on the line.\"\n\n\"Yeah, but if my career was on the line, at least I'd be lucky to have hot guys around to help me with it,\" said Dana cheerfully. \"That professor Anderson is hot. I can't wait to be stuck in the middle of the sea with him.\"",
        "\"Don't call him professor, he's not a teacher,\" snapped Maria. \"And I doubt that he'll have much time for fun. This is serious business and even if it wasn't, he's going through a divorce. And to tell you the truth I don't think you're his type.\"\n\n\"I'm every man's type,\" said Dana. \"But at least I know what you're pissed about now.\" She moved closer to Maria and sat down next to her friend. \n\n\"Does he know?\" asked Dana.\n\n\"Does he know what?\" asked Maria getting up and walking across the room.\n\n\"That you want to fuck his brains out?\" smiled Dana. \n\n\"I don't want to fuck his brains, or anything else out,\" said Maria.\n\n\"Well you like him then, don't you?\" asked Dana.\n\n\"What if I did? It wouldn't matter. He thinks of me as some kid who does his research although we haven't done any fucking research. I could really help him if he'd let me do more than busy work. I'm twenty seven fucking years old and he treats me like a kid. You're only twenty four and he treats you like a grown up.\"\n\n\"That's your fault,\" snapped Dana. \"Look at the way you dress. How do you expect him to treat you? Maria, he's around beautiful women all the time. His ex is probably pushing forty but she's attractive. Mrs. Rinehart is his friend. That woman is scary hot and so are you but you need to get in the game and stop hiding.\"\n\n\"I dress this way to...\" began Maria.\n\n\"Yeah I know,\" interrupted Dana. \"To keep the wolves away and make sure that people take you seriously as a historian and an educator. I've heard the speech two hundred fucking times. Your dowdy clothes and your glasses are like your force field. The problem with your force field though is that it keeps EVERYONE out, even the people you WANT to let in. I think you should turn off the force field and see if he's interested in keeping the wrong people away from you himself.\"\n\n\"But...\" said Maria.\n\n\"Look Maria, I'm your friend,\" said Dana. \"I always will be. So I'll leave the man alone. But I can't promise you that the other women around here will. There are all kinds of women at that sleazy hotel he stays at who are probably interested in him. If you don't let him know that you are too, someone will snap him up in a heartbeat. And you'll be kicking yourself worse than his stupid wife is.\"\n\nRobert banged on the villa's door. \"Stacy let me in,\" he said. \"We need to talk.\"\n\nStacy went to the door and looked out the window. When she saw Robert she started to walk away. He banged on the door again and she yanked it open.\n\n\"What the fuck do you want?\" she yelled. \"You've already flushed my life down the drain, what more do you need?\"\n\n\"Stacy, \"I\" didn't mess up your life. \"We\" messed up both of our lives. So \"We\" need to work together to fix them.\n\n\"How?\" asked Stacy. \n\n\"Leave that to me,\" said Robert. \"Just be ready to do whatever I tell you to, exactly when I tell you.\"\n\nA few hours later Maria and Dana were at the Hang Dog while Aaron sang a song. When he finished the song the crowd started shouting for him to sing Hang Dog Hotel.\n\nMaria had heard the song before but Dana hadn't and was amazed. She and Maria talked through the first verse but a woman sitting near them shushed them during the chorus.\n\n\"I believe in magic, a little monkey shine,\" sang Aaron. \"But the kind of hoe I can really row is playing a tune on time.\"\n\n\"He's pretty good,\" said Dana. \"He'll be able to sing your five kids to sleep.\"\n\n\"Unh unh,\" said Maria.\n\n\"You're not going to have kids with him?\" asked Dana.\n\n\"We're not stopping at five,\" smirked Maria.\n\nTwo tables away, Stacy frowned. \"Don't tell me you're jealous of the lumpy woman?\" asked Robert. They were both wearing hats and keeping their heads down hoping no one noticed them.\n\n\"I'm jealous of everyone who wants to take what's mine,\" snapped Stacy. \"There's no way that little whore is having anything with Aaron. And your plan, whatever it is, had better work.\"\n\n\"With a few good friends and neighbors in to play the night time tunes,\" sang Aaron. Then he stopped and the crowd sang in unison. \"So pass the jar and that old guitar in this Hang Dog hotel room.\"\n\nThey were all laughing and having a good time as Aaron worked his way through the crowd over to Maria's table.\n\n\"Aaron, don't you trust me?\" asked Maria.\n\n\"Of course,\" he said puzzled. \"What makes you think that I don't?\" \n\n\"Well, you haven't told me where we're going to dive,\" she said. \"That makes it seem like you don't trust me.\"\n\n\"I don't know where we're going yet,\" he said. \"But we will soon. Didn't you listen to the song; especially the part about magic?\"\n\n\"That's another thing,\" said Maria. \"When did you write that song? And what is all of this talk about magic. Between you and Elena Rinehart, I'm about sick of magic!\"\n\nAaron laughed. It was a rich deep laugh that ripped its way up from way down inside of him. It made the people around him want to laugh as well. But it made Stacy, who was relatively close to him, want to cry. How could her husband be laughing when she was in so much pain? She was tempted to go over to him and beg him to take her back. But Robert had led them away from the table before Aaron noticed them.\n\n\"I didn't write the song,\" said Aaron. \"It's a Gordon Lightfoot song. I think the guy who originally opened the hotel was a Gordon Lightfoot fan. The next owner kept the name intact, but went for the pirate theme.\"\n\n\"Did you hear that?\" Robert asked Stacy as soon as they got outside. Stacy took out her earplug at the same time that Robert took his out. The earpieces they wore were similar to the ones sold on the internet as \"Super Ears.\" They'd originally been developed for senior citizens whose hearing was failing. But now they were marketed to anyone who wanted to listen in on conversations that were too distant for normal hearing to pick up.\n\n\"I heard all of that shit,\" snapped Stacy. \"I've already told you there's no way I'm going to let that little bitch fuck my husband or have his babies. That's my job.\"\n\n\"Get the fuck out of here,\" laughed Robert. \"Stacy you're a PHD. You're a relatively decent historian and you're smart as hell. But you are not the mothering type. You're more like one of those spiders who eat their own young. I do think that in some strange way, you love Aaron, but he and everything else is secondary to your career ambitions. Look at how quickly you got on your knees for me. And anyway I wasn't talking about that. I was talking about the fact that he still really doesn't know where the hell he's diving. We're going to have to follow him.\"\n\n\"Why do we have to follow him?\" asked Stacy. \n\n\"Have you ever heard the expression, \"I'd rather be lucky than smart?\" asked Robert.\n\nStacy nodded her head. \"Aaron has this way of pinpointing the locations where we dive,\" said Robert. \"I do all of the research and narrow it down to the area, but at least 8 times out of 10 he looks around and says let's just dive here. And most of the time we find things right where he wants to dive. Right now I have the weirdest feeling that all of the other teams including us are barking up the wrong tree. I checked, and the area I found is the same one that everyone else wants to dive in. To be truthful it's the same area that everyone who comes here dives in. I now believe that area has been picked clean. I want to try somewhere else. So we're going to go along with our old pal. It's a bit of a gamble but like I said Aaron has this weird assed luck and I'd rather bet with him than against him.\"\n\nThe next morning Aaron, Maria and Dana met at the docks. Maria introduced Aaron to Sandra, Jared, Jordan, Mike and Steve. Sandra would take care of keeping records during the project. Jared and Jordan would be diving with Aaron. Mike would monitor the divers and the site on the electronic gear and Steve would handle maintaining all of the computers and gear. As they boarded the boat the hot Greek sun beamed down on them even though it was still very early in the morning.\n\nSandra and Dana were wearing swimsuits with cargo shorts over them. The boys were all wearing T-shirts and swim trunks. Maria had already started to bake in her baggy sweatshirt and long skirt.\n\nAcross the way, three sets of binoculars were trained on Aaron's boat.\n\n\"Follow them when they leave Captain,\" said Robert.\n\n\"Look at those legs,\" said the Captain.\n\nHe turned to Robert. \"You'd better hope they don't see us,\" he said.\n\n\"Why,\" asked Robert.\n\n\"He picked a good boat. The Sea Horse is one of the fastest boats around here. She's smaller than we are and lighter, but she has more than twice our horsepower and thrust,\" said the Captain. \"If he gets wind of us, he could leave us in the spray relatively easily. There are hundreds of small islands around here for him to hide in and he can maneuver through water that's too shallow for us.\"\n\nRobert just nodded and kept watching through the binoculars. Stacy watched the scene on the Sea Horse's deck and cursed under her breath. \"That little bitch,\" she snapped.\n\n\"Holy fuck! I fired HER?\" said Robert.\n\nOn board the Sea Horse, Sandra and Dana had taken off their shorts and were sunning themselves on the deck waiting to get underway. Some of the boats crew and the archaeological team were staring at the women. The sight of shapely young female bodies wasn't something that sailors got to see a lot. Even Aaron couldn't help looking. \n\nMaria saw his eyes and immediately went below deck. She decided then to fight fire with fire. When she came back up and told Aaron that the captain needed him, he almost fell overboard.\n\nMaria had taken her long hair down for once, the contrast between that and the way she usually looked was startling. She'd taken off her glasses and put her contacts in and her beautiful eyes were there to be seen. She'd added just a touch of lipstick and eye makeup. She looked like a different woman but the biggest change was that she was wearing a bikini that was just as tiny as the ones the other women were wearing. Maria's breasts were amazing. It became obvious why she didn't wear low cut clothing very often. No one would ever take her seriously. Her tight trim waist and rounded hips were equally attractive. She'd notice though, that Aaron didn't seem to be able to take his eyes off of her ass as she walked away from him. She'd file that away for future knowledge.\n\n\"Uhm, coming,\" said Aaron as he watched her walk towards the bridge. The jiggle in her walk was mesmerizing\n\n\"Are you now?\" asked Maria. Aaron almost lost his balance again.\n\nMaria linked her arm through his as they walked towards the bridge. She tingled at his touch and decided that for once dressing and acting like this, was worth it.\n\nStacy threw her binoculars down on the deck bending the frame and cracking one of the lenses. \"I'm going to kill that little bitch,\" she said.\n\n\"Well now we know why those baggy sweatshirts were so lumpy,\" said Robert. \"Do you think they're real?\" Stacy just screamed in frustration.\n\n\"Captain you know what to do,\" said Robert going below deck.\n\nOnce he was out of sight, Robert produced a small SAT phone. He quietly spoke into it and then returned to the deck. He pulled out a chart and told the Captain to go to a set of coordinates. Stacy went below deck and stayed there. She didn't like the way the crew or the Captain looked at her, especially since they'd spent time watching the women on Aaron's boat through the binoculars. More than ever she missed her husband. She really hoped that Robert's plan could get them back together.\n\nWith a sudden lurch the boat took off and from the way everything was rattling and shaking, as well as the motion from the waves, Stacy was sure they were making good time. She left the cabin that she shared with Robert and tried to find him on deck. She looked over and saw him standing by the rail. \n\nRobert looked up as Stacy approached and smiled. \"Stacy, I have a friend who will be contacting you soon. You'll know it's him because he'll mention me as \"our mutual friend.\" How well do you swim?\" he asked.\n\n\"Not very well,\" she said, wondering what he was talking about. \n\nRobert gestured to one of the crew members. He whispered something to the man, who abruptly left. He came back a few moments later with a moth eaten life jacket that was obviously not in good condition.\n\n\"Is this the best you have?\" asked Robert.\n\n\"Yeah it is,\" said the man. \"We don't use those things. We just keep a few of em' around for inspections.\"\n\n\"Stace, you'd better put this on. It'll be show time soon. According to our mutual friend they're underway, and their boat is way faster than this tub,\" said Robert. \"And remember we're partners, if you get happy and betray me. I'll let him know what was going on from the beginning. If I lose, we all lose.\"\n\n\"Robert, what the hell are you babbling about?\" asked Stacy.\n\n\"Your husband is on his way to pick you up,\" smirked Robert. \"He just doesn't know it yet. But remember we're in this together.\"\n\n\"I heard you the first time, Robert. I'm not an idiot,\" said Stacy. \"What do you mean Aaron is on his way to pick me up?\" she asked excitedly.\n\n\"Just watch, you'll see,\" smiled Robert. \"And you need to be surprised. It'll make the whole thing seem more real.\"\n\nThe ship started to slow down in the vicinity of a derelict looking island. There was no vegetation there and no life was apparent. It appeared to be just a rock that had forced its way up out of the sea during one of the region's frequent earthquakes. The ship dropped its anchor and its only movement was its rising and falling with the waves.\n\nAfter a few minutes a phone in Robert's pocket chirped. \"I didn't know cell phones worked this far out,\" said Stacy.\n\n\"They don't,\" said Robert. Then he yelled for the captain. \"Get the anchor up, we're going to be pulling out soon.\"\n\nStacy heard the clanking sound of a motor running that let her know the anchor was coming back up. \"All right places everyone,\" yelled Robert. Stacy had no idea what was going on.\n\n\"We only get one shot at this,\" yelled Robert. \"So if anyone fucks this up there won't be a bonus coming.\"\n\nStacy couldn't figure out what was going on. The members of the unsavory crew seemed to just be standing there. They weren't doing anything. But then, neither was Robert. He was just watching the water. Suddenly she noticed that in the distance there was a boat coming. She grabbed her binoculars but remembered that she'd broken them earlier. So she grabbed Robert's out of his hand. The boat that was approaching was the boat that Aaron was on. \"Can you see the boat?\" asked Robert.\n\n\"Just barely,\" said Stacy.\n\n\"That means that they can see us, but the sun is in their eyes so they won't be able to make anything out for a few minutes,\" said Robert.\n\nHe stood up and acted as if he was stretching before playing tennis. Then he straightened up and looked at the approaching boat. \"I have to time this just right,\" he said. \"I don't want you to get too wet.\"\n\nStacy was just about to ask him what the hell he was talking about. Her outfit was expensive. It was already being crushed and deformed by the smelly life jacket. She didn't want him to go splashing water all over her needlessly. He should have told her that they'd be splashing water so she could have changed.\n\n\"Action,\" yelled Robert. Suddenly there was yelling and screaming coming from the crew. They were banging pots and pans and on deck a fight had broken out. The other boat was just close enough that Stacy could see people on its deck without the binoculars. Then she thought she saw someone on their deck pointing at this ship. She leaned over the railing to see who it was, but couldn't make them out. All of a sudden the boat she was on started moving rapidly, but that was the least of her problems. Robert, who'd been standing near her, bumped her. She lost her balance and teetered wildly, near a section of the deck that had no safety rail. \n\n\"Watch it, I almost lost my balance,\" she yelled. \n\n\"Almost,\" said Robert and he pushed her again. This time Stacy couldn't hold on. She fell over the side and landed in the water. The life jacket, as bad as it looked, brought her sputtering towards the surface. As soon as she got her breath back she started screaming.\n\n\"Robert, you son of a bitch,\" she screamed at the top of her lungs. But it was too late. The boat was moving away from her at a fast clip.\n\nThe other boat was now heading in her direction. She waved at it. It took the Sea Horse about three minutes to get to her. \"Do you need help?\" asked a young moron from the deck. \n\n\"No, I'm just going to pull a ship out of my ass and float to safety,\" snapped Stacy. \"Of course I need help.\"\n\n\"Oh, I kind of wanted to see that,\" said the man.\n\nStacy just glared at him. They got a harness and threw it to her and winched her aboard the ship. As soon as she stepped aboard, Aaron walked away. Only the young man who'd spotted her in the first place and two girls remained. One of them smiled and looked friendly enough. The other was Maria Clarridge. Stacy was surprised at how attractive Maria had become. Though short of stature, the woman's breasts were incredible; which automatically put Stacy at a disadvantage. She'd often thought of having hers augmented, but Aaron hated fake boobs. \n\nMaria's legs, though short were sculptured, with just enough muscle to be noticed but not enough to be unattractive or masculine. She had a tiny waist and a nice bubble butt too. The thing that bothered Stacy the most was the fact that without her glasses the woman was quite pretty. It was like the girl had taken pains to disguise herself when they'd first met.\n\nMaria turned to the young man. \"Mr. Anderson says to show her to that spare room below deck next to the crew's quarters. Move a chair and a cot in there and make her as comfortable as possible, but keep her out of the way,\" she told him.\n\n\"Why do I have to do it?\" he asked. \n\n\"You fished her out of the sea, so she's your problem,\" said Maria, turning to leave.\n\nMaria joined Aaron and the captain on the bridge. Within a few moments both Stacy and the young man who'd rescued her were there as well.\n\nAaron had to admit it hurt him to have to look at Stacy. She was still every bit as beautiful to him as she was when he married her. The young man with her seemed to want to talk about something. But Aaron had trouble seeing anything other than his ex wife or his new assistant. In only a few days he'd come to have feelings for Maria, but he'd been with Stacy for so long. On the other hand As much as he loved Stacy he hated what she'd done to them. And sometimes you had to just move on.\n\n\"Aaron, Honey, thank you for saving me,\" said Stacy. \"We need to talk.\" Aaron noticed that as Stacy moved towards him, Maria positioned herself between them.\n\n\"It wasn't me who saved you, Stacy,\" said Aaron. \"It was the guy over there. I would have left you to drown. I'm sure if he hadn't pulled you out, someone else would have. There's an unwritten law against leaving people in the ocean, but in this case I'd probably have broken it,\" he said. \"Now if that's all, we're having an important meeting.\" He looked at the young man, expecting him to take her below. But for some reason he seemed to want to stay.\n\n\"Mr. Anderson, I need to talk to you about this,\" he said indicating Stacy. \"She knows how to get below, so I'll wait for you guys to get done talking.\"\n\nMaria stepped in. \"Jared, onboard a ship the first thing you have to learn is how to take orders. Aaron told you to take Dr. Anderson below. So, take Dr. Anderson below.\"\n\nJared nodded his head and complied. \"Okay,\" Aaron began. Maria held up her hand. Then she went over to the door and jerked it open suddenly. Both Jared and Stacy were standing just outside the door. \n\n\"Steve,\" bellowed Maria loudly enough that she could be heard all over the ship.",
        "\"Sorry,\" said Jared. \"She wouldn't leave and I'm wondering why I got stuck with the job of watching her. I came here to dive, not to serve as a babysitter or a prison guard.\"\n\n\"Well come on back in,\" said Maria nodding at Aaron. Aaron wondered what she was up to.\n\nSteve came running up to the bridge. \"Hey, Steve,\" said Maria. \"Remember what we were talking about before?\" Steve nodded and looked at her. \"Get your scanner and hurry back.\"\n\nSteve quickly left the room. \"Okay Jared, let's hear it,\" said Maria.\n\n\"Well Dr. Clarridge, you've heard it. I wanted to dive with Mr. Anderson. That's the main reason I came aboard. I don't think it's fair for me to be singled out, for something like this just because I happened to see a woman in the water.\"\n\n\"So if you were below checking on your diving gear, like you were supposed to be, how is it that you were even on deck to see her?\" asked Maria.\n\n\"I don't know,\" said Jared. \"It's just lucky I was.\"\n\n\"Yes, very lucky for me,\" added Stacy.\n\n\"I don't think it was luck at all,\" said Maria. \"Jared, I don't know you. I've had classes with all of the others. So why don't you tell me how you heard about our team.\" Before he could begin speaking Steve was back. He had some kind of electronic box.\n\n\"Isn't that a...\" began Aaron.\n\n\"It's a frequency analyzer,\" said Steve.\n\n\"Don't car thieves use those to steal your alarm codes,\" snapped Aaron thinking about his Mustang.\n\n\"Yes Mr. Anderson, but that's not the legitimate use of the device,\" said Steve.\n\n\"Earlier Steve was doing HIS JOB,\" said Maria, looking at Jared. \"And he noticed intermittent rogue signals. We thought at first that they might be cell phone usage among some of the guys. You know college students and cell phones. But we're out far enough that there aren't any cell signals. Then Steve noticed that the signals seemed to originate sometimes on this ship and other times from somewhere else. We couldn't figure it out. Steve thought that they might be radio signals or the weather band but the frequencies were way off. We got a bunch of those signals again just before that other boat dumped your EX wife in the ocean.\"\n\nAaron caught on immediately. He reached out and grabbed the young man in front of him so quickly that Jared had no time to react. He rummaged through the protesting boy's pockets until he found a small phone that was barely bigger than a cell phone.\n\n\"I've never seen a SAT phone this small before,\" he said. Aaron opened the phone and checked the call log. The last 6 calls were all to the same number. He hit redial and waited for the number to connect. \"Robert, you've blown it,\" he said. \"I'll be leaving your whore and your spy on the dock waiting for you. You should have waited a day to use them though. Maria and I haven't told anyone where we're diving yet. Today was only our shake-down cruise to test the equipment. I'll be notifying the university about the tactics you're using though.\" Then he opened the back of the phone and removed its battery.\n\n\"Mr. Anderson, it wasn't my fault,\" whined Jared. \"Dr. Thompson threatened to...\"\n\n\"Save it,\" said Aaron. \"Go below and take her with you.\" He looked at Stacy again and shook his head.\n\n\"Aaron, I'd have done anything for a chance to get close to you again,\" said Stacy. \"We've been together for too many years to let something this small break us up. We need to talk.\"\n\n\"Stacy, every time I see you lately, living without you gets easier. If you want to talk, get yourself a lawyer. Have him contact my attorney and we can talk during the settlement meetings. Other than that I have no wish to speak to you. You've made your position on me and our marriage very clear so I'm moving on with my life,\" said Aaron.\n\n\"It is not going to fucking happen Aaron,\" snapped Stacy. \"I know I made a big mistake, a giant one in fact. I put other things, like my career in front of us, and I shouldn't have. I regret it now. But there's no way in hell I'm going to give up on us. And there's even less chance of me letting Dr. Titties over there steal my husband.\"\n\n\"I didn't have to steal him you wrinkled old fossil,\" said Maria. It was kind of funny hearing her spewing insults in that British accent. \"You just handed him to me. Maybe if you had some breasts yourself, you wouldn't be in this position. And I don't know how you ever got your doctorate, did you fuck your way to that as well. You don't have the sense to see that you gave up a good man for a notorious womanizer. He has a reputation for screwing his assistants and then firing them.\"\n\n\"So now you're jealous because he screwed you and fired you, so you want to take it out on me by stealing my husband,\" shrieked Stacy.\n\n\"No, he never got to even try to screw me, but he wouldn't have been successful. He'd have failed just like the bastard before him did. He got rid of me before he even tried because he found a bigger whore that he liked better. Easier pickings I think,\" snapped Maria.\n\nThen the door to the bridge slammed open. \"Captain there's a storm headed our way,\" said a crewman. \"We'd better find someplace to tie up. There's no chance for us to outrun it.\" \n\nThe boat's engines revved up and propelled the boat through the water, faster than they'd been going. The Captain and Aaron searched the charts for an island or a secluded cove where the fury of the storm wouldn't be as bad.\n\nAaron pointed out an island on the chart that was very close to their last position. \"I should have thought of that myself,\" said the Captain. \"A lot of the fishermen in these parts steer clear of that island though. They say that weird things happen there.\"\n\n\"Any port in a storm,\" quipped Aaron. The waves seemed to be rising higher with every passing minute. Aaron suddenly noticed that Maria was leaning against him squeezing his hand. As he looked down and smiled, Stacy who was still standing there also, noticed it. She glared angrily at the two of them without saying anything.\n\n\"Maria, you've never been on a boat during a storm before have you?\" asked Aaron.\n\n\"Actually, I've never been on a boat before,\" she said quietly.\n\n\"Well, don't worry, we'll be fine. I'll make sure that nothing happens to you,\" said Aaron.\n\n\"Maybe you should save some of that reassurance for your wife,\" snapped Stacy. \"The one you swore to forsake all others for.\"\n\n\"You're not talking about the same EX wife who whored herself out to my EX best friend are you? Wouldn't that be kind of ironic?\" he asked.\n\n\"Aaron, get over it please. I love you, and it only happened once in all of these years and it was only a blow job, for god's sake. It's not like we fucked or anything. That would be grounds for divorce but a drunken blow job, come on. I've never claimed to be perfect, I already told you it was a mistake,\" said Stacy.\n\nSuddenly Maria burst out laughing. And Aaron just shook his head. \"Maria this isn't a good place for you right, now,\" said Aaron. \"Why don't you check on the others?\"\n\n\"What the hell was \"Booty Smurf\" laughing about?\" asked Stacy. \"She doesn't know anything about us or our marriage.\"\n\n\"Save your bullshit for someone who cares,\" snapped Aaron. \"That makes three fuck ups Stacy.\" Then he went below. Stacy followed him a few minutes after he left. Aaron came to an abrupt stop outside the crew's quarters. He accidentally bumped into Maria who was staring inside the room. A few minutes later Stacy bumped into him.\n\n\"Are the others Okay?\" Aaron asked Maria. \n\n\"Shhh,\" she said and then gestured with her head towards the room. \"Sandra and Jordan are in the Monitor room, still checking out the electronics as if nothing was wrong. Jared is out on the deck whining about how none of this was his fault to anyone who will listen. He wants to talk to you. Dana, Steve and Mike are kind of busy as you can see.\"\n\nAaron peered inside of the small room and sucked in his breath as he saw the young woman sucking one of the men's dicks, while the other thrust away between her legs. \"Well, let's let them be,\" said Aaron smiling.\n\n\"But isn't it kind of weird for her to be doing it with both of them?\" asked Maria. Aaron realized then, that despite the fact that she was more than halfway through her twenties, Maria was not very experienced when it came to sexual matters.\n\n\"We'll have a talk about things like that later,\" said Aaron gently.\n\n\"It had better be only a fucking talk!\" snapped Stacy from behind them. \n\n\"Sorry Stace,\" said Aaron. \"Are we blocking your way? Did you want to get in there, too?\"\n\n\"Aaron since the day we got married, no one has fucked me, except you,\" snapped Stacy.\n\n\"Four,\" said Aaron, looking into Stacy's eyes.\n\n\"Four what?\" asked Stacy. \"Aaron can't we go somewhere and just talk. I'm sure we can work this all out.\"\n\n\"Oh no,\" said Maria. \"There's no going off somewhere alone. How do I know you won't try to smuggle him onto your broom with you and fly him off somewhere?\"\n\n\"Shouldn't you go somewhere and put at least some clothes on?\" asked Stacy. \"First off, it's getting colder and secondly, you're scaring all of the God damned fish with those things.\"\n\n\"I am a little chilly,\" said Maria. \"But I'm also curious. You seem to be really interested in my breasts. You bring them up in every conversation. Is there something you're not telling us? But I should let you know, I've only done it once with a man. I have no interest at all in trying out a woman. But if I did, it would have to be a young and beautiful one, so I'm afraid you're off the list in both cases.\"\n\nMaria walked towards the cabin she shared with the other girls. Aaron watched her very carefully as she walked away. She turned and caught him watching her. Stacy slapped him on the shoulder angrily.\n\nThe Captain came down and told them that they'd reached the cove. There was a small secluded area that was tree lined and provided a shield from the wind on three sides. There was even a small pier that the fishermen used that was big enough for them to tie the ship to. The tires fastened on the side of the ship should make sure that if the wind shifted they'd be protected from smashing the hull to bits.\n\n\"We should be able to ride the storm out here but it's going to be a rough night,\" said the Captain. \"According to the weather service and the news, there was a small earthquake that shifted the bottom and caused the tides to change. Couple that with the winds and the rain and we're in for a fun time.\"\n\nAaron put on a slicker and went up on deck. He liked watching the movement of the water. No matter how rough it got. A few minutes after he got there Maria joined him. \"I brought you a complimentary Gourmet meal,\" she laughed. She handed him a bottle of beer and a paper plate with two slices of pizza on it. He looked at her quizzically as she sat down beside him. \n\n\"I noticed that this was the beer you always drink, when you aren't trying to get totally blitzed over your ex. And Mike works at a pizza place. He brought four large pizzas aboard with him. He froze them and we micro-waved a couple,\" she told him.\n\nShe sat down in the seat next to him on the rail. There were two Captain's chair-like seats that were bolted to the deck, side by side. There were two similar chairs on the other side of the boat. Fishermen loved them. They could strap into the seats just in case they caught a fish big enough to pull them overboard.\n\n\"Thanks Maria,\" said Aaron. \"And not just for the pizza and beer. How the hell did you find Dos Equis? The Hang Dog imported some for me.\"\n\n\"That's where I bought it from,\" she smiled.\n\n\"You've been taking care of me since this whole thing began...or ended,\" he said sadly. \"If it wasn't for you, I'd have still been trying to drink myself to death over Stacy. And if you hadn't been there, when I saw her the second time...\" he paused and took a sip of his beer to get himself together.\n\n\"Well, I'm just glad you were there,\" he said.\n\n\"There's something you need to know,\" she said. \n\n\"I know what you're going to say,\" he said. \"And I intend to do my best to make it through whatever ruins we find and bring back the best artifacts. And when I do, I'll ask the Dean to give you the professorship.\"\n\nWatching them from around the corner, Stacy bit her lip angrily to keep from saying anything. If Aaron gave that little bitch the professorship, which was highly possible because the Dean and his nosey wife both liked Aaron, Stacy would be without a job. She might be able to get a job as an assistant but that would be demeaning. That was even more reason that she needed to fix things with her husband. Where the hell was Robert when she needed him? She'd thought that Robert and she were smart but her husband seemed to be a step ahead of them, or to see through their games at every turn.\n\nThe worst part was that his spy had been caught. So Robert had no way of knowing what was going on. She was basically on her own. She'd have to win her husband back without Robert's help.\n\n\"That's not what I was going to say at all,\" said Maria. \"To be honest, when Elena sent me after you, I was interested in the professorship. After all, I have the degree that the job requires. Maybe I haven't had as much experience as Dr. Thompson or Dr. Anderson. And I hope you aren't offended by me saying this but, I don't have nearly the lack or morals that Dr. Anderson has either. I simply wouldn't do something like that to advance my career. Anyway, over the last few days I've discovered something that means more to me than the professorship.\"\n\n\"What?\" asked Aaron curiously. \"I thought that for all of you egg headed history types, the professorships were the Holy Grail.\"\n\n\"You don't have one and you're doing quite well,\" said Maria. \"Besides a professorship when you really look at it is just a job. I want a life and a career. I want to go after history and rediscover it. I want to bring those little pieces of history back to the world from wherever they're hidden. And I want the life that goes along with it. And I want to feel the way that I feel now, all the time.\"\n\n\"Sea sick,\" said Aaron, laughing. \n\nMaria turned and looked at him seriously. \"If that's a part of it, that's what I want,\" she said.\n\n\"But don't you think you're a little over-educated for that?\" asked Aaron. \"This isn't really the chosen career path of the average PHD.\"\n\n\"Don't be silly,\" she laughed. \"I don't care about the career path. I just want the life.\"\n\n\"Okay, now I'm confused,\" said Aaron. \"What's so special about the life?\"\n\n\"Aaron, it's the person that you share it with that makes the life. What I want is you. I'd never put a stupid job ahead of you. So if I'm going out on boats in the ocean, or climbing mountains, even though I'm afraid of heights, I just want to do it with you,\" said Maria.\n\n\"I'll fucking bet she wants to do it with you,\" screamed Stacy stepping onto the deck where they could see her. The rolling of the deck made it hard for her to keep her balance. \n\n\"Stacy, go below before you fall overboard,\" yelled Aaron.\n\n\"You just want me to leave so you can get comfortable with that little British bitch,\" screamed Stacy. \n\n\"Stacy, I just want you to be safe so I can get you into court and out of my life. But if you'd rather die by being swept overboard n the middle of a storm, that's fine with me,\" said Aaron. \"After all you're supposed to be the smart one.\"\n\n\"Aaron what happened to us?\" asked Stacy as the waves crashed into the side of the boat and pushed it against the small pier forcefully. \"Less than a month ago, we were perfectly happy.\"\n\n\"That was the problem, Stace,\" he said. \"I loved you so much, that I'd have done anything for you. Anything except share you. When I walked in on you and Robert, it broke my heart. I'm not sure I'll ever be able to get over that. So if you need a simple answer, it was you. Your ambition and need to get ahead at any cost happened to us, now all we can do is play out the cards we have.\"\n\nThe next morning the seas were calm. The boat headed back for its home berth. While there they reloaded the supplies they'd used including more Dos Equis and pizza. While there Aaron told the Dean and Elena about their adventures. She wasn't surprised by Robert's behavior. Under the threat of being expelled from the University, Jared came clean about what he'd been doing for Robert.\n\nAaron also got the news that Robert's ship hadn't come back in from the storm. Many thought that the boat had been caught in open water during the storm and had gone down.\n\nAaron and Maria met with the Captain just before they went out again. \n\n\"Okay, back to where we were before we were interrupted by the storm,\" said Aaron. \"I'm about to show you my secret method for finding the location we'll search.\"\n\nAs Maria and the Captain watched, Aaron took out a briefcase and removed an item from it. \n\n\"Do you need a data port to plug that into?\" asked Maria.\n\n\"It's not electronic Ria,\" said Aaron.\n\nHe placed the small flat board down on top of the chart of the region. Then he placed a small pointed object down on top of the board. Then he placed both of his hands on the pointer and closed his eyes. \n\n\"Wait, Ria you have to help me with this,\" he said. He grabbed her hands and placed them on the pointer with his. \"Close your eyes,\" he told her.\n\nMaria did as he told her. She closed her eyes and smiled. She'd noticed that he'd called her Ria twice. If he wanted to give her a nickname or make up his own name for her it was fine with her. In a way it meant that he was claiming her and she'd wear his mark any day.\n\nShe felt the little pointer move, it felt really strange. Maybe the tingles she felt were the result of her touching Aaron. Every time they were close, she tingled all over.\n\nSuddenly the pointer stopped. Aaron marked a dot at those coordinates on the chart. \"That's where we dive,\" he told the Captain.\n\nMaria's eyes snapped open. \"What is this thing,\" she asked. \"What about research? What about planning or tide tables?\"\n\n\"Remember the second verse of the song?\" asked Aaron. \"I believe in magic, a little monkey shine.\"\n\nMaria nodded. \"What magic?\" she asked. \"What is this thing?\"\n\n\"It's a Ouija board,\" smiled Aaron.\n\n\"How the hell is this going to work?\" she asked. \n\n\"Maria, all of the other teams are out there,\" he said softly. \"They had a nice head-start on us and impeccable research. The result is that they haven't found shit. Everyone has searched this area for centuries. Some people think that everything to be found here has already been found. What does it hurt to try something else? So I'll tell you what. You take the computers below deck. Do all of the research you want. We'll split the time we have left up between us. We'll spend half of it searching your location and the other half searching mine. Is that fair?\"\n\n\"In for a penny in for a pound,\" she said. \"We're partners and I believe in you no matter what. Whether we find the biggest cache of artifacts or nothing, we're in this together, but there has to be something at stake. If you're right and we find something there, then from now on you're in charge of us. What you say goes no matter what, from here on out, no questions asked. On the other hand, if we search there for our remaining five days and find nothing, I get to make two major decisions that you are not allowed to question, ever.\"\n\nAaron looked at her suspiciously. Since things had gone south with Stacy, he'd found himself unable to trust people as much as he once did.\n\nMaria's tiny hand was held out in front of him. \"Deal?\" she asked.\n\n\"Deal,\" he said quietly as he shook her hand.\n\nIt took barely over three hours to restock the boat and make preparations to leave again. Aaron had considered waiting until the following day to embark, but the eager young members of his team were raring to go in earnest. He caved in to their wishes because the sooner they got started the better. ",
        "The storm had actually worked in their favor. Some of the other teams who'd started before them, had either been damaged, delayed, or in the case of Robert's boat, lost.\n\nAaron felt bad that he didn't feel bad about Robert. The two men had been friends since boyhood. He should have felt something. He actually felt that Robert had gotten what he deserved. If Robert hadn't gotten involved with Stacy, they'd still be friends and Robert would be here with him right now. Even if Stacy had started things, Robert should have known enough to say \"no.\"\n\nSo with no spies, good spirits, and a clear conscience the crew went back out on the sea. What they didn't know was that the boat held one more passenger than they thought.\n\nAs darkness settled over the sea and the little boat headed towards the coordinates of their first dive, Aaron sat back in one of the fishing chairs that had become his favorite place to relax. Most of the young people were in the back near the dive platform listening to music and playing cards.\n\n\"Beer and pizza,\" said a voice just behind him. Aaron looked up and saw Maria standing near him with two plates and a couple of bottles of beer.\n\n\"Wouldn't you rather be back there with your friends?\" asked Aaron.\n\n\"Nope, I'm right where I want to be,\" smiled Maria. \"Besides aren't we supposed to be having some kind of talk? Anyway, I'm pretty sure that Sandra and Jordan are planning on watching a movie that they stole off of the internet, on the monitors. And I'm fairly certain that Dana, Mike and Steve will be engaging in a rematch of what we saw yesterday. In fact she may even be planning on asking a couple of members of the crew to join them. All of this time that we've been friends and I never knew what a whore she is.\"\n\nAaron laughed. \"She's not a whore, Ria.\"\n\n\"Oh, are you defending her?\" snapped Maria. \n\n\"She doesn't need defending,\" said Aaron quietly. \"There aren't any laws against what she does, and no one is getting hurt.\"\n\n\"Okay, so maybe I should go down there and join them then,\" snapped Maria. \"Since she isn't being a whore and no one is getting hurt.\"\n\n\"No, you shouldn't,\" snapped Aaron, grabbing Maria by her wrist and sitting her back down. \n\n\"Why shouldn't I?\" asked Maria. \"After all there's not much difference between Dana and I in your eyes. In fact, I'm actually 3 years older than she is. She's only 24. So if she isn't a whore, I wouldn't be either. And no one would be hurt.\"\n\n\"Look, Ria. A whore is someone who trades sex, for monetary gain or some other thing that they want or need,\" said Aaron. \"Dana isn't charging those guys any money or anything. And as far as I know she doesn't have a steady boyfriend, so no one is getting hurt. In fact she's actually helping the guys to relax.\"\n\n\"So, a good example of a whore then would be your ex wife, right?\" asked Maria. \"I still don't see why it's a bad idea for me to go down there with them.\"\n\n\"Then go,\" snapped Aaron. \"No one is stopping you.\"\n\nMaria stood up slowly and looked at Aaron. \"Maybe I will. After all if Dana is helping to relax the guys, they'd be even more relaxed if she had some help, especially since no one around here can think of a reason why I shouldn't go. You're pretty smart Aaron. Do you know any reason why I shouldn't?\"\n\nAaron folded his arms across his chest stubbornly. \"Can't think of a single reason why you shouldn't,\" he snapped. \"Enjoy yourself.\" He sat back and took a swig of his beer as Maria stormed off.\n\n\"They're all whores,\" he said to the sea. \"Fuck 'em all. I don't need a single one of them. All I need is my car, a boat and something to hunt for.\"\n\n\"You certainly told that little bitch where you stand,\" said Stacy stepping out of the darkness. \n\n\"What the fuck are you doing on my boat, Stacy?\" snapped Aaron. \"We put you ashore safe and sound. As of yet, we didn't even report your part in Robert's little plan to the university. Mostly because we weren't sure exactly what your part was. But stowing away on a boat will get you jail time. Is that what Robert's turned you into? Are you Dr. Convict PHD now?\"\n\n\"Robert didn't turn me into this, Aaron,\" said Stacy quietly. \"You did. Whether you can see it or not, I still love you so much it's crazy. I'm fighting as hard as I can for another chance but as hard as I fight, you're pushing me away even harder. And you have help. I can see now, how much you must have loved me Aaron, because I'm beginning to see what my betrayal did to you. Just as you can't see how much I still love you, you can't see how much that little girl does too. Good Lord Aaron, she was baiting you. She didn't want to go down to that orgy. All she wanted was for you to tell her not to go. I'd be willing to bet you one of those giant bras of hers that she isn't down there now. She's probably somewhere below deck crying her eyes out. That little girl hangs on your every word, Aaron. She isn't like me. I don't think she'd make the choices I made. But if you gave me another chance, I'd never make that choice again either.\"\n\nAaron just glared at Stacy as if her words had no effect on him. \"Aaron, do you know what it's like for a woman in my field?\" she asked. \"I've been in school since I was 5 years old. I know everyone starts school at that age, but Aaron I'm 38 now and I've only been done for three years. For the past three years I've been doing research and working towards my goal.\"\n\n\"Stacy everyone has goals,\" snapped Aaron. \"The only difference is what they're willing to give up getting them. In our case, you gave up me, our marriage, and our future for just a chance at something that really doesn't matter.\"\n\n\"Doesn't matter to you, Aaron,\" snapped Stacy. \"To me and a lot of other people it's their dream. Have you ever noticed that when we're on a campus, half of the students call you Professor Anderson?\" Aaron nodded. \"I know it pisses you off, but just think about what it does to me. I know that you work very hard at what you do Aaron. You're always going off to some jungle or some mountain or under the sea, but those are the things that you love doing. When we go to lecture somewhere, you're bored but it's what I dream of. I've earned the right to be a professor, but everyone assumes that I'm Professor Anderson's wife.\"\n\n\"So after dealing with it for too many years, I just decided that if I can't beat 'em, I may as well join them. The funny thing about it is that you accepted me with open arms. It was Robert that I had to prove myself to. I wish you could see how perfect this would have been for all of us, Honey. I'd get the professorship here and you and Robert would join the staff as archaeologists or hunters as you like to call yourself.\" Aaron pursed his lips and breathed out.\n\n\"But it all got fucked up, because Robert wanted the professorship as well. I really needed to get on his good side, Honey. So I started doing everything I could to woo him over to my point of view. You may not see it but I didn't do it because I don't love you. I did it because I do. I wanted us to be together, but as total equals. Just like you and Robert were. Although I think he realizes now that you guys were a little more equal than he ever suspected.\"\n\n\"So, Stace,\" said Aaron. \"If that was the truth then why didn't you just tell me what you wanted from the fucking beginning? I'd have spoken to Robert and I'm sure I could have gotten him to agree to it.\n\n\"Because I wanted to do something on my own,\" she said heatedly. \"What fucking good does it do me to break into the boys club if my husband had to let me in? If I'd thought that one blowjob would cause us to get a divorce, I never would have done it in a million years.\"\n\n\"Yet still you lie,\" said Aaron.\n\n\"What lie?\" asked Stacy. \"I swear that's all it was. I can even tell you why I chose to give him a blow job, if you'll listen.\" Aaron nodded his head.\n\n\"I gave him a blowjob because you don't really like them,\" she said. \"Whenever we have sex, if I start trying to go down there you pull me back up. After being married to you for such a long time I've learned what you like, Aaron. You like fucking me. You're probably the most romantic man I've ever met. You're totally into the whole two spirits becoming one thing. So in my mind I just figured that if I gave him something that you didn't want anyway, it wouldn't be that bad.\"\n\n\"You know Stacy; people are always talking about giving someone enough rope to hang themselves. I think your feet have stopped kicking and the rope has sawed its way through your throat now,\" said Aaron.\n\n\"What do you mean Aaron?\" asked Stacy.\n\n\"Stacy, the first day that Maria came to me, I was miserable about what you'd done. I really had no idea what I wanted to do about it, other than killing Robert. Maria convinced me that second day, after I'd sobered up a bit, to go and talk to you. She wanted me to see if we could patch things up and then go take care of business. She wanted to be a researcher on the team. Robert had fired her so she'd probably have been your assistant, or mine. More than likely yours since I don't really do research.\" He shrugged his shoulders and smiled at her. Stacy's mouth dropped open.\n\n\"She wanted you to talk to me?\" asked Stacy. Aaron just nodded. \n\n\"Anyway, we went up to the villa, and before I could open the door I saw you fucking Robert on the couch in the living room. But since then, you've lied to me three times about what you and he did. You fucked him on the couch in the house that you and I lived in. And this was after seeing how hurt I was by your first betrayal. If you loved me as much as you claim, how could you stand to do anything with someone else after hurting me that badly? Even now, you've made up another lie trying to justify giving him a blow job because you claim I don't like them. But the fact is that all along you fucked him too, or don't I like that either?\" Stacy's face just fell.\n\n\"Maybe it's just time for us to move on, Stace,\" said Aaron. \"There's no way for us to ever go back. With everything you've done and all of the lies you told, I could never trust you again. Let's just have a nice friendly, peaceful divorce before we lose respect for each other.\"\n\n\"But I....\" she began.\n\n\"Save it, Stace,\" said Aaron. \"There's no use beating a dead horse.\"\n\nAaron looked at his chronometer. It was far later than he'd expected. The conversation with his ex wife had taken longer than he thought. He headed down to his quarters. The Captain had given Aaron his cabin and was bunking with his crew. Aaron was the only one on the ship with a cabin of his own. The Captain would be on the helm with a couple of his crew members until they got to the dive site anyway. Then he'd sleep until they were ready to move on.\n\nAaron entered the darkened cabin and sat down on the edge of his berth. The bed seemed odd, the mattress didn't move the way it should have. Aaron took off his pants and boots and his socks. He was just about to take his shirt off when he heard a sigh. He flipped the light on and jumped back in surprise.\n\n\"What the hell,\" he exclaimed.\n\nMaria yawned and stretched her arms above her head. Aaron's dick hardened to the consistency of a diamond instantly as he gazed on her unfettered breasts.\n\n\"What are you yelling about?\" she asked.\n\n\"What are you doing in my bed?\" he asked. \n\n\"You told me to go join them,\" she said angrily. \"I decided to just fuck every man on the ship, and you're the last one.\" She folded her arms over her breasts, but it didn't work. Her arms were too tiny for it to be an effective deterrent. Aaron shook his head. She could tell that he didn't believe her.\n\n\"Okay, you're the first one,\" she tried. He shook his head again. \"Okay, you're the only one,\" she said. \"But that's my final offer.\"\n\nAaron laughed and got into the bed. He turned off the light and pulled the blanket over himself.\n\n\"Aren't we gonna?\" he heard.\n\n\"No,\" he said.\n\n\"Why not?\" asked Maria. \"I want to.\"\n\n\"I do too, Ria,\" said Aaron. \"But we need some time to figure things out. There's no rush. But I'd hate for us to do something that ruins what could have been a really great friendship or even more because we rushed into something that wasn't right.\"\n\n\"Aaron?\" she said.\n\n\"Yes, Dr. Clarridge,\" he breathed out.\n\n\"Can you just hold me then?\" she asked.\n\nOne of the things that Aaron always did was to wake up early. Unless he was drunk he was always awake before the sun came up. When Steve went looking for him at 6:45 a.m. the next morning, the sun was already up and half of the crew was having breakfast. They'd arrived at the dive site coordinates over an hour ago. Mike and Steve had eaten and were already beginning the scan of the sea floor and the undersea radar search.\n\nSteve knocked lightly on the door and got no answer. He opened the door and quickly closed it back. Dana came down the hallway and asked him if he'd seen Maria. He quickly turned red and nodded his head. \n\n\"Why are you acting so funny,\" Dana asked him. Steve pointed at the door and quickly went back to the monitor room. Sandra and Jordan came down the hallway next and ran into Dana. Mike was himself just coming below so he joined the crowd. They were all huddled together as Dana opened the door quietly and saw Maria and Aaron in the bed together. Obviously they'd gotten warm during the night and the blanket had been pushed back.\n\nAll of the men reacted immediately at the scene. Maria was snuggled up to Aaron, with one of his arms wrapped possessively around her. One of his hands cupped one of her huge breasts while her ass pressed against the front of his shorts. Dana quickly closed the door.\n\n\"Oh my fucking lord,\" said Mike. \"I've known that woman for four years and never realized she was built like that. \n\n\"Or that she was that pretty,\" added Jordan.\n\n\"It just takes the right guy to bring it out of you,\" quipped Dana.\n\nA short time later, Aaron, looking embarrassed and Maria smiling from ear to ear looked over Mike's shoulder.\n\n\"They could just be rocks,\" said Mike. \"That mini earthquake seemed to have stirred up the bottom. There's a lot of sediment obscuring our view. There's also a certain degree of parallax view inherent to our position.\"\n\nThe whole team and Stacy craned their necks back and forth between the squiggly lines on the radar screen and the EDVM.\n\n\"Of course with those types of striations forming in such a regular pattern, the possibility that they're not natural objects is greater than fifty percent,\" said Mike.\n\nDana, Sandra, Steve and Jordan all nodded their heads. Maria looked at Aaron with a blank look and grabbed his hand. Stacy pretended not to notice.\n\n\"Do any of you actually understand what he said?\" asked Aaron.\n\n\"Well, not really,\" said Dana.\n\n\"Some of it,\" said Steve.\n\n\"Not a fucking word,\" said Sandra.\n\n\"Dude, I'm just a diver,\" said Jordan. \"I'm still trying to figure out how Maria hid those titties from us for all of these years.\"\n\n\"Okay, fuck it, I'm going down there,\" said Aaron.\n\n\"Shouldn't we send a robo-cam down there first?\" asked Mike. \"We have no idea what's down there.\"\n\n\"We'll know as soon as I get down there,\" quipped Aaron. \"Coming, Jordan?\"\n\n\"Dude, I'm already wet,\" said Jordan.\n\n\"You aren't the only one,\" said Dana. Maria elbowed her friend in the side. Aaron and Jordan ran up to the main deck to start putting on their diving gear. \n\n\"I agree with Mike,\" said Maria. \"The area is unstable. What it there are mines, or sharks? We should send the robo-cam down first. I'm supposed to be your partner, so I should get some say in this. Jordan, I hired you so I can fire you.\"\n\nStacy gently pulled Maria by her shoulder. She looked at the younger woman and spoke to her very gently. \"This is the worst part,\" she said. \"It's not the searching and hoping to find something. It's not the time you've wasted when there's nothing there. It's watching him go off to do something that you know very damned well that he might not come back from.\" Maria looked at Stacy curiously and nodded her head.\n\n\"And it never, ever gets any easier,\" said Stacy. \"But you have to realize a few things. Number one, look at him; he's like a fucking kid at Christmas right now. This is what he does. All we can do is sit back and worry about him. He's going to do it anyway. If you put up enough of a fuss, he'll just stop letting you come along. Then you'll worry even more. Because you're not there with him. If you stop Jordan from going, then Aaron will have to go down there alone, but he'll still go. Is that what you want?\"\n\nMaria shook her head vigorously and tried not to cry. \"At least this time, I have you to worry with me,\" said Stacy. \"That asshole Robert never worried. He just sat his ass on the boat and waited for Aaron to go down there and bring him back the spoils. He never dove himself; he just watched, waited and cashed the fucking checks. You're going to have to get used to this Dr. Clarridge. Maybe we're not the brave ones or the adventurers, but it's just as painful to have to watch someone you love do something dangerous. So that's what we do, we watch and we wait until they're back safely.\" Stacy saw tears in the corners of the young woman's eye's and a never before activated maternal instinct took over.\n\n\"It's a good thing to give him something to let him know what he's coming back to,\" she smiled.\n\n\"But...we haven't...\"said Maria.\n\n\"You will,\" smirked Stacy. \"Trust me, when you guys finally get together, boy will you.\"\n\nMaria went over to Aaron and kissed him. The kiss took him by surprise, but he finally relaxed and kissed her back. The team all cheered as they watched the kiss.\n\n\"Uhm, can I check the feed on your cameras,\" asked Mike. \"That is, if someone is actually going under today. If you guys are just going to make PG-13 porn, I don't have to.\"\n\nAaron and Jordan slipped beneath the surface of the water and found themselves in a new world. Normally the waters here were so clear that you could see for a good distance. But the recent earthquake and storms had stirred up the bottom and a lot of silt was still floating and cycling through the water. It might take days for the sea to calm down again. As they descended through the water a few curious fish and other aquatic beings took notice of them. Luckily they didn't run into any sharks. According to most of the info they had on the area, there hadn't been a shark attack in this region in over 5 years, but no one wants to be the first.\n\nAs they neared the bottom Aaron noticed them first, a bunch of irregularly shaped items. As Mike had said they could be rocks. But as he got closer, he noticed that the item was sharp on some edges and rounded on others. It looked like some sort of decoration. It had been worn smooth by the currents of the sea, but he could barely make out what looked like a lion's head. He pointed at it and Jordan took a look at it.\n\nHe picked up a couple of the smaller items and put them in a pile so they could take them up with them when they went. \n\nAaron swam a few yards further and almost had a heart attack. What he'd thought might possible be some sort of irregularity in the sea floor was probably a log. He wondered what kind of wood it was and went to examine it. Aaron almost lost his breath. It wasn't a log at all it was a column or part of one. He'd discovered what might be the ruins of a building and quite possible a large one. He pointed upwards and Jordan got his meaning. They quickly gathered as many of the smaller items as they could carry and headed for the surface. They had to take their time surfacing to prevent getting the bends. It was all Aaron could do to keep from just jetting back to the surface to find out what he'd found.\n\nAn hour later, Aaron was changed and staring at the items he'd brought back from the sea floor. Both Maria and Stacy were as excited as hell. After very gently removing some of the accumulated patina from a couple of the objects the two had begun to try and classify them. They were obviously common items such as cups and part of a jar, but they were so old that both PhDs were having difficulty placing them to a specific period of time.",
        "\"Okay, Captain, let's get the fuck out of here,\" yelled Aaron happily.\n\n\"Aren't we going to go back and bring more items up?\" asked Maria.\n\n\"Nope there's too much down there,\" said Aaron. \"We're going to take what we have back to the Dean, and get a bigger more well equipped team to come back and fully catalog and explore the site. Don't worry; you'll have all of the fun you want looking at all of this stuff for a few months at least maybe years. That column we found was big. I don't think anyone else will find anything this big. I'm not sure anyone ever has.\"\n\n\"I'm sure we'll win the challenge and you'll get the professorship. I'll make sure of it,\" said Aaron.\n\n\"Yippee,\" said Maria sadly. \"I guess you won.\"\n\n\"No, Ria, we won,\" he said. \"This is what we set out to do. You and all of your friends will get all of the academic credit and all of that crap. I'll get to dive and find stuff. We all won.\"\n\n\"I was talking about OUR bet,\" said Maria. \"Somewhere along the way it became far more important than all of the rest of it.\"\n\nAaron looked at Maria curiously and then at Stacy. She too seemed to be very sad. Well there's no figuring out women, he thought.\n\nThe Captain radioed their location to the university. Once the university's liaison logged the coordinates of their discovery, he'd contact the Greek government to arrange for the necessary permits for exploring and diving and removing artifacts. At that time no other team had found anything. He urged them to come in with all due haste and bring samples of their discovery.\n\nThe boat was soon under way home. Almost two hours into the trip home, trouble struck. A small fast cutter cut across their bow. Three men with automatic weapons fired shots into the air and yelled over a megaphone for the ship to stand fast so they could be boarded. The Captain looked at Aaron. Two more small fast boats were positioned off their stern. A man in one of them had a rocket launcher. \n\nAs Aaron watched, the small boats held their positions. The men in the boats kept their weapons trained on the ship. \n\n\"Captain, do we have any weapons on-board?\" he asked.\n\n\"No sir,\" said the Captain. \"What would we even need weapons for? All we ever do is fishing and from time to time a diving excursion like your-selves. We've never had anything of value that we'd need to protect. \n\nAaron felt Maria grab his hand on one side and Stacy on the other. He'd heard stories of modern day pirates, but never expected them to be this close to any country's national borders. \n\n\"Captain, radio for help before they come aboard,\" said Aaron. \"It probably won't get here in time, but at least that way we know help will be coming. What we have to do is hope that they just take what they want and leave. Hopefully what they want is only money and material things.\"\n\nThe Captain slowly moved towards the bridge. Once he got there he did as Aaron had asked. He returned to Aaron's side a few minutes later. By then, a larger boat, one nearly the size of their own, was coming into view. Obviously the smaller boats were merely scouts for this one.\n\nAs the bigger boat drew near, the men in the smaller boats came closer. They tied the boats off one by one while the men in the other boats kept their weapons on the ship. Then the men came aboard. They were well trained. They gathered everyone aboard the ship into one area. \n\nThe men were rough looking, but without being dirty. They never spoke. They communicated by simply pointing and gesturing. Once Aaron and all of his people were together, two men came over from the bigger boat.\n\n\"Fucking pirates,\" spat the Captain viciously.\n\n\"We're not pirates,\" said the men's leader. \"We're privateers.\"\n\n\"What exactly is the difference?\" asked Aaron.\n\n\"If we were pirates,\" began the man. \"Then we'd be out to rape and pillage and hurt you and take everything you have. Finally, we'd hold whatever was left for ransom. Those two...he pointed at Stacy and Maria...would already be providing entertainment for myself and my client. The other two women would be passed around by my crew.\" He was silent for a few minutes and looked at Aaron.\n\n\"There's no need to say it, my friend,\" he said as he looked at Aaron. \"We would have to kill you to accomplish that. I can tell by the set of your jaw that a few of us would die in the attempt even though you are undermanned and unarmed.\" Aaron nodded his head.\n\n\"At any rate, we aren't pirates so our goals and methods are slightly different. We are very similar to what you'd call mercenaries. We hire out to a specific client for a specific task. We're very professional and don't kill or harm anyone unless it proves necessary. Under other circumstances you and I might have been friends.\"\n\n\"I doubt it,\" said Aaron.\n\n\"Never say never, my friend. The world is a strange place where anything can happen and often does,\" said the man, who was obviously the leader of the mercenaries. \"Tell me, what would you do if necessary to protect that one?\" He pointed at Maria again. \"If she was sick or injured and you needed money for food or medicine. What if the two of you had children and you simply could not find work? What would you do in this shitty economy to provide for those you hold dear?\" Despite himself Aaron nodded.\n\n\"Ah, a reasonable man,\" said the leader. \"And a realistic one as well. As I said before, under other circumstances, we could have been friends. Unfortunately, my current client is not such a man.\" As Aaron watched, his oldest and formerly dearest friend came aboard the ship.\n\nAaron bristled as he watched Robert step aboard.\n\n\"God damn it,\" said Robert. He looked over at the table where the smaller pieces that they brought up from the bottom sat. \"No one else has found shit. I have spies on all four of the other teams as well as the one I placed with you. I knew that you'd find something even though this area has supposedly been picked clean. I can't believe I fired her,\" he said pointing at Maria. \"She must be brilliant as well as pretty.\"\n\nHe crossed the deck and stood in front of Maria who leaned behind Aaron. He reached out and touched Maria's face and she shrank back from the contact. Aaron quickly snapped out his fist and floored Robert. Several of the men trained there weapons on him, but their leader waved his hand for them to stop.\n\n\"If you touch her again, I'll hit you even harder, you bastard,\" said Aaron.\n\n\"I have no intention of hurting her, old friend. On the contrary, I intend to take very good care of her. I have to, you see.\" said Robert. He walked over and patted Stacy on her ass. \"Hey, Stace,\" he said. \n\nStacy moved his hand. \"Hello asshole,\" she snapped.\n\n\"Yep, I figured it right,\" said Robert. He looked at the leader of the mercenaries. \"I told you, even though he's married to the tall slim one. He loves the little one with the big tits. She's the one you'll be taking. I'll be staying on board the ship with the rest of my friends.\"\n\n\"What friends?\" asked Aaron, heatedly. \"You have no friends aboard this ship.\"\n\n\"Oh yeah Aaron, you're all my team mates after all. You see, you and I have forgiven each other for what happened at the gala and we're all back together, like one big happy fucking family. At least that's what you're going to tell the university committee. We'll go back and we'll all share the credit for whatever you've found and I'll get my professorship, temporarily. Stacy, I'll even throw in an assistant position for you and support you for the next professorship that comes up. Of course I'll be gone before long so you can have mine.\"\n\n\"After I'm sure that you're going along with the plan, Aaron. I'll get your solemn word that you'll never breathe a word of our deal to anyone. I've known you for a long time Aaron. You've always been into that honor shit. I know that if you give me your word, you won't go back on it. So as soon as you give me your word and I've got my job secure, I'll let her go and you and she can sail off somewhere. I'm sorry to have to stoop to measures this low and for me it's really not about the position any more. What I really need is the fucking money.\"\n\nAaron just looked at him funny. \"Yes old friend,\" said Robert. \"I'm on the verge of being penniless.\"\n\n\"How?\" asked Aaron. \"We've made a lot of money over the past few years.\"\n\n\"Aaron, you and Stacy always lived within your means,\" said Robert. \"But I'm the famous one. I have to live in a lifestyle that my fame dictates. There were always trips, houses, women, and parties. From the looks of the things you've found here, when you take me back to the site, I'm sure there are many more artifacts there. You rushed back so you could get credit, involve the museum and get all of the legal permits and that kind of bullshit didn't you?\"\n\nAaron nodded.\n\n\"Well we're going to do things a bit differently this time. We're going to get all of your permits and all of that crap but we're only going to turn in the bigger pieces. Anything small enough to smuggle out under the nose of the officials or anything they haven't seen will be going to what we'll be calling, \"The secure Robert's fucking future fund.\" I'm tired of playing by the rules. I need a big ass chunk of cash to retire on. And if you breathe a word of any of this to anyone, I'll have whichever one of my men is watching Dr. Clarridge at the time; put several bullets between those huge tits.\" He smiled.\n\n\"Did you really think I'd trust you to keep your word, Aaron?\" he smirked. \"Oh I trust you, but I need reassurances as well. After I have my shit load of cash, I'll disappear and you can have your girlfriend back. I have had to modify my plans a bit. Originally it was going to be Stacy. I had to get her to trust me, so I let her give me that blowjob. But once you caught us, I knew that she'd be worthless to me. There was never a chance of you taking her back and we both knew it. You're too into that honesty and keeping your promises stuff. She was damaged goods as soon as her lips touched my dick. I tried to get her to do whatever she could to fix your marriage but she was pretty much useless to me once you found out.\"\n\n\"Now, this little one holds the key to both your heart and my future,\" said Robert. \"I'd love to try this one out too,\" he said. \"But if I did, we'd be back at the start. Or would we?\" Robert reached towards Maria and Aaron again moved faster than Robert could react to. He punched Robert in the side of the head so hard that Robert fell to the deck and got up with his eye swollen and his face bleeding.\n\nThis time none of the men reacted at all. They had no respect for Robert, though he was paying them.\n\n\"You'd better save your strength, old friend,\" laughed Robert, his lips bubbling blood. \"If you want to keep those tits safe you're going to be my little diving monkey for the next few weeks. If you refuse to do anything I tell you, you won't like the condition she'll be in when you get her back.\"\n\nHe just sat there and smiled. \"Take her,\" he said to the leader of the men. Then he made the biggest mistake he'd ever made. Just once more Robert reached towards Maria's breasts. Like most of the men present he had trouble taking his eyes away from them.\n\n\"Boy would I like to be that necklace,\" said Robert. \"I'd be snuggled into probably the warmest place on earth. Did you give that to her Aaron? It's nice.\"\n\nAt that moment the leader of the mercenaries stared at the necklace.\n\n\"Where did you get that necklace from?\" he asked Maria suddenly.\n\n\"A friend of mine, Elena Rinehart, gave it to me,\" said Maria. The look on the man's face changed suddenly. \"Let's go,\" he said to his men. He nodded at Aaron. \n\n\"Wait, you idiot,\" screamed Robert. \"You're supposed to take her with you.\"\n\nRobert followed the man and grabbed him by his shoulder. \"I'm the one who's paying you remember?\"\n\n\"We'll survive for a while on your deposit,\" he sneered. \"There are some things that are more important than money; family for one.\"\n\n\"I'll double your fee,\" said Robert.\n\n\"Elena Elizabetta is my cousin,\" sneered the man. \"In this area, crossing her or any of her friends can prove deadly. Besides you have no honor. And you openly spoke of stealing from my country and my government for your own selfish ends.\"\n\n\"Take me with you, then,\" yelled Robert as the men went over the side.\n\n\"I could not be responsible for your safety on any of my boats,\" said the man. \"My men hate you.\"\n\n\"Wait,\" said Aaron. \"Here's my number at the university. If you're serious about needing honest work to support your families, I have an idea. Call Elena and we'll arrange things.\"\n\nThe man nodded and left.\n\nAaron turned towards Robert and smiled the way a shark smiles at a smaller fish. Robert backed up to the rail, with terror written all over his face. Before Aaron could get to Robert though, Maria stepped between them. \"Aaron, he's not worth it,\" she said. \"If you beat him up too badly, you could go to jail for it.\"\n\n\"I'm not going to beat him up,\" said Aaron. \"I just want him off of my boat. I'm going to throw his ass over the side.\"\n\n\"But Aaron the pirates or whatever they were, are gone,\" said Stacy.\n\n\"He's a famous historian and PhD,\" snapped Aaron. \"He can stick out his thumb and hitch hike.\"\n\n\"Let me handle him,\" said Maria. \"We'll lock him in one of the storage compartments until the authorities arrive and then turn him over to them.\"\n\n\"We can't do that,\" said Aaron. \"If we do then we'll have to tell them about and describe the men he hired. They really did seem to be honorable men who were pushed by pride and circumstance into something they didn't want to do.\"\n\nMaria looked at Robert. He was cowering against the rail. She thrust her knee deeply into his crotch. \"That's for Stacy,\" she said. Then she slapped him across his face. \"That's for me.\"\n\n\"We'll turn him over to Elena,\" said Aaron. \"I'm sure she'll know what to do with him. For me the hardest part is going to be telling his mother what a dick he is.\"\n\nSix weeks later, the site exploration was nearly over. After taking all of the artifacts that could be found visually, the team had sifted the ground gently and found more. Then the structure of a small building had been found. Aaron's team divided the profits for the items the university turned over to the Greek government. Museums all over the world were inquiring about exhibition of the new artifacts and scholars and researchers from all over the world were coming in to see them.\n\nStacy was helping Maria to catalog all of the items and they were working with a few historians from the university and several museums to arrange displays. Stacy and Aaron had agreed to terms for an uncontested divorce. Stacy had assured him that if he ever wanted her back she'd be available.\n\nSecurity for the site had been provided by the former mercenaries, so nearly everyone was happy. Robert had simply been released. But the Dean had sent out a message to every major museum and university on the planet about his exploits. He'd also given the story to every major news outlet. Robert had to flee the country before the Greek authorities caught up to him. Despite his PhD, he'd never work in his field again.\n\n\"So Professor Clarridge,\" said Stacy. \"I'd like to thank you for hiring me to help with the project. But what are you going to do now? Do you think you could use a good assistant?\"\n\n\"Not one who'd constantly be trying to steal my fianc\u00e9 away from me at every turn,\" snapped Maria. \"And you know you'd do that, because you still love him.\"\n\n\"Very fucking much,\" said Stacy. \"Well, I guess I need to find myself a job then. I'll probably go back to the states even though I love it here.\"\n\n\"Then why don't you stay here, Stacy,\" said Maria. \"I'd love to have a friend here, even one who I have to watch every second and keep away from Aaron.\"\n\n\"Uhm, what would I live on?\" asked Stacy. \"My good looks? I'll never do anything like that again.\"\n\n\"Would you consider a job as a professor at a certain university?\" asked Maria.\n\n\"But that's your job and your dream,\" said Stacy.\n\n\"My old dream,\" said Maria. \"I have a new one. Do you remember when you told me about how hard it is to watch him go off and do the things he does?\"\n\nStacy nodded. \"You'll have to get used to it. I always wanted to teach about the things that he discovers and do lectures for groups of visitors and write papers on them.\"\n\n\"You see Stacy, that's where we're different,\" said Maria. \"And that's why you're going to be the professor.\"\n\nStacy just looked at Maria in shock. \"You're going to let me have the job of a lifetime?\" she asked. Maria smiled and nodded.\n\n\"What are you going to do, just stay home and have his babies?\" asked Stacy. \n\n\"Maybe in a few years,\" said Maria. \"But for right now, I'm taking diving lessons and climbing lessons. I don't want to just sit on the sidelines and wait for him. I don't want to talk about or lecture on Aaron discovering history. Aaron will never give up racing through the ruins, and I don't want to just wait and worry, so I'm going to be there with him every time he does.\"\n\nThe end"
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "mustang",
        "romance",
        "pirates",
        "adventure"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/race-among-the-ruins"
}