{
    "title": "Wicked Game Ch. 09",
    "pages": [
        "\"James? James Weathers?\"\n\nJames raised his head and looked into the bright blue eyes of Grace Wilding and her movie producer husband, J.T. Owens. Shit! He wiped the coffee from his mouth and slowly stood, giving her a gentle hug and shaking J.T.'s hand. \"How are you doing?\"\n\n\"Fine! What are you doing here?\"\n\n\"Vacationing.\"\n\n\"No, really.\"\n\nJames gave his best anchorman smile, his eyes chips of grey ice. \"I said I'm vacationing, Grace. Is there a problem with that?\"\n\n\"Yes, when everyone knows that you've never taken a vacation before. Are you heading back to rehab?\"\n\nJames felt himself losing control as he gritted his teeth, angry at himself for letting her get to him so easily. \"Grace, unlike you, I actually have a life.\"\n\n\"A life? Is that what you call it?\" She laughed, no, cackled like the witch she was. \"Drinking yourself silly every night is a life?\"\n\n\"I don't drink like that any more, Grace, and you know it.\"\n\n\"What do you do instead? Fuck every bimbo you can find till dawn?\"\n\nGrace's high-pitched laugh fell on Beverly's ears and she winced. She had heard most of the conversation and was pissed off for James. Why didn't he put her in her place? Why didn't he speak up for himself? It was obvious that she was going to have to take care of things for him.\n\n\"Hi, James!\" She breezed in, throwing her arms around his neck and giving him a long, deep kiss. She felt the surprise in his touch and did her best to convince him to relax, letting her tongue slide into his mouth and tickling his lips. \"Sorry, I'm late.\"\n\n\"That's okay.\" James fell into the ruse easily, his face still showing his shock. \"I hadn't eaten yet. Just had coffee.\"\n\n\"Who's your ... friend?\" Grace looked Beverly up and down, the last word dangling on her tongue like a bad taste. \n\n\"Beverly Johansson.\" Beverly extended her hand. Grace looked at her hand for several seconds, then when she reached out to take it, Beverly whirled into James' arms, smiling into his face. \"And you are?\"\n\n\"Grace Wilding, anchorwoman at WCHO.\"\n\n\"Oh, yes! I knew you looked familiar. You did that piece on Family Market, right?\"\n\nThe blood drained from Grace's hawk-like features. Everyone knew about the Family Market piece because of the interview that she did with Morton Zandee, owner of Family Market and now, well-known pedophile. Family Market catered to women and their children, providing the unheard-of service of child care in a grocery store. Once a day, Zandee would choose a lucky child to win a tour of the market and $25 worth of groceries. And somewhere between the loading dock and the cash register, the molestation would occur.\n\nGrace Wilding was well-known because her name was front and center when the scandal broke. Grace Wilding had witnessed the molestation of a child and hadn't reported it. She had saved the footage to use for future piece she was planning and one of the series producers had stumbled on it accidentally. Grace had been sacked but she sucked her way back to the anchor desk. The station owner, Clyde Bishop, loved oral sex and she was more than happy to provide him with it.\n\n\"Uh, yes.\"\n\n\"Yeah, I thought that was you.\" Beverly gave her a blindingly fake smile and turned her grin to James. \"I'm hungry, baby. It's time to feed me, Seymour.\"\n\nJames laughed, throwing his head back. He gathered his newspaper and left a five on the table for the waitress. \"If you'll excuse me, Grace, I have to feed my lady.\" He put his arm around Beverly's middle and left a speechless Grace Wilding in his wake. Once out of her hearing, he grabbed Beverly and spun her around. \"That was inspired!\"\n\nBeverly smiled. \"I hate white bitches like that. You should have handled your own business.\" She cocked her head to the side, looking at him. \"So, why didn't you play hammer and nail her to the wall?\" She watched as the happiness fled from James' face and surmised that this was something deeper than mere words. \"Why don't we get some breakfast and talk about it?\"\n\n\"Beverly, I really appreciate what you just did for me but ... \"\n\n\"James, \" Her voice was soft and motherly. \"If you don't open up to someone, you'll never get a chance to live that life you wanted.\"\n\nShe's right. So he was at a crossroads. He could continue on as he had been, living relationship to relationship, having no roots and no connections. Or he could choose to open himself up, to do the one thing he hadn't done since ... the accident. He trusted Beverly. He knew that she wouldn't share his personal information with anyone else. So ... So ... what do I do?\n\nJames Hawethorne Weathers lifted his weary eyes to the beautiful black woman and released a sigh that came from the depths of his soul. \"All right, Bev.\" Her smile was warm and grateful. \"But you may not like what you hear.\"\n\n\"You didn't like everything that I had to say, did you?\"\n\n\"No.\"\n\n\"Then let me do the same for you. Let me be your devil's advocate.\" Her lovely almond-shaped eyes met his. \"Let me help you, as you've helped me.\" \n\nBeverly held her hand out. She'd never had anyone seek out her advice before, unless it was where the best buffet place in town was. Warmth spread from the tips of her ears to her neck when he slipped his manicured hand into hers.\n\n\"Let's go.\"\n\n* * * * *\n\nShane almost smiled when Ashley waved at him. He took his plate of scrambled eggs, bacon, sausage and wheat toast to her table, dropping his napkin into his lap as he sat.\n\n\"I'm surprised to see you here.\"\n\nShe looked up. \"Why's that?\"\n\n\"Your lover's up there fucking her brother ... I mean, aren't you angry?\"\n\n\"No. Why should I be?\"\n\nShane just stared at her for a long moment. \"Because she's fucking someone else and it's a man.\"\n\n\"Shane, Kevin has been Kelly Jo's brother for a lot longer than our relationship. If it's meant to be, we'll be together.\"\n\nShane just shook his head. \"I can't believe you could be so calm about the whole situation.\"\n\nAshley smiled. \"That depends on what you let bother you.\" She shoveled some eggs into her mouth, then stood up, breaking into a huge smile. Kevin and Kelly Jo had entered the dining room and were striding, hand-in-hand, giving each other shy smiles. \"Wow, you guys look happy!\"\n\n\"We are.\" Kevin said, kissing the back of Kelly Jo's hand. \"She's made my dreams come true.\" He couldn't help but beam at his sister. Their lovemaking had only ended twenty minutes earlier when Nathan had come knocking, looking for the evidence. Kelly Jo was very happy to show him but turned down his offer to clean her out. When she turned to look at him, he knew that she had remembered her promise and that made him feel like a million dollars. She had been so patient with him, so filled with love and devotion ...\n\n\"Hey!\"\n\n\"Huh? Oh, sorry!\"\n\n\"Daydreaming?\" Kelly Jo asked, pressing a kiss on his mouth.\n\n\"No. Nightdreaming.\"\n\n\"Well, you'd better grab something to eat and sit down with what little strength you have left!\" Ashley laughed. \n\nKelly Jo came around the side of the table and took Ashley into her arms, giving her a hard embrace, then covering her sweet face with kisses. \"Oh, Ashley, it was so wonderful.\"\n\n\"I'm so glad for you.\"\n\n\"Glad for us.\" Kelly Jo touched her cheek lightly. \"I made Kevin a promise last night.\"\n\n\"A promise?\"\n\n\"Yes, that you and he would be the only people that I would ever make love with.\"\n\nAshley's eyes glittered with unshed tears. \"He didn't mind?\"\n\n\"Not at all. He knows that I love you and that's good enough for him.\"\n\nAshley smiled. \"He's a wonderful brother.\" She glanced across the table at Kevin, who was talking to Shane. He was also very handsome, she noticed. I wonder if he could love me.\n\n\"Yes, he is, darling.\" Kelly Jo moved close, nibbling on her ear. \"But I'm really anxious to put my tongue in your sweet pussy.\"\n\nAshley blushed. \"Well, then you'd better eat fast because I'm feeling a little neglected.\"\n\n\"Oh, really?\" Kelly Jo's hand dropped to Ashley's rear, rubbing and squeezing. \"I can easily solve that ... \"\n\nNathan's arrival was a splash of cold water on the happy group, especially when they saw the envelopes in his hand. \"Good morning.\" He smiled as they responded in kind. \"First, the money from last night's task.\" From his inside jacket pocket, he removed six envelopes and gave Kelly Jo and Kevin the two thickest and one each to Shane and Ashley. \"And now, Shane. Ashley. Please come with me.\"\n\nShane and Ashley gave each other a glance, then arose to follow the driver. Again, they went to the small room just off the dining room and Nathan handed them two larger envelopes, watching as each opened and read the invitation inside.\n\n\"By now, you should have had a nice breakfast and are ready to accomplish your eighth task on the scavenger hunt. The eighth task is to have someone masturbate you to an orgasm. Simple task? No. Shane and Ashley must be chosen to accomplish this task. The reward will be $4,500 dollars, with $1,800 for the non-participants. The proof required is a video recording of the acts. This proof must be shown to Nathan and will be destroyed immediately afterward. If you follow the instructions, you will receive the money upon completion.\"\n\nShane looked up, first at Ashley, then at Nathan. \"I'm in.\" He turned to Ashley. \"Are you okay with it?\" Ashley hadn't spoken for a long moment. An unbidden memory had arisen in her mind and she was struggling with the fear it had brought. She raised haunted eyes to Shane who touched her forearm gently. \"We'll be doing it together, Ash. You can trust me.\"\n\nAshley knew she could but her guts still twisted in knots just the same. She nodded to him. \"It's not you, Shane. It's me.\" She took a deep breath and looked back to Nathan. \"I'll do it.\"\n\nThe driver gave a nod. \"I've taken the liberty of leaving the camera and a box of toys in your room, Shane. It's up to you two where you want this to occur.\"\n\n\"My room's fine. Thanks, Nathan.\"\n\n\"Fine. Well, if you'll excuse me, I need to find Beverly and James.\" With those words, Nathan took his leave and Shane and Ashley gazed at each other for a long moment.\n\n\"Well ... \" Shane offered his arm. \"Shall we?\"\n\nAshley slipped her hand into the crook of his arm, grateful for his friendship as she tried to battle the demons behind her eyes.\n\n* * * * *\n\n\"I started drinking in college.\"\n\nBeverly and James sat together at a small table in a sheltered alcove of the dining room. Both had visited the breakfast buffet and had plates loaded with fruit, bacon, eggs, sausage and James had opted to splurge for pecan waffles. In addition, a waiter brought them a carafe each of orange and grapefruit juices and a hot tea for Beverly. She was stirring sugar into her Earl Grey when he began to speak.\n\n\"At first, it was just at the typical college parties. A couple of beers became a six pack. A six pack became a twelve pack. A twelve pack became a case ... \" James got an almost wistful look in his eyes. \"Then I joined the fraternity and discovered whiskey. That was the worst year of my life. I can't tell you anything that happened that entire year. It was all a drunken blur.\" He lifted a chunk of cantaloupe to his mouth and chewed thoughtfully. \"That year, I spent New Year's Eve in rehab in Florida. I finished college and started working and was doing pretty well until I met Anna.\"\n\n\"Anna?\"\n\n\"My wife.\" Seeing the look on Beverly's face, James quickly added, \"My ex-wife. I met Anna when I worked in Tallahassee. She was the morning anchor and almost ten years older than I was. And I was in love. Head-over-heels in love. Well, once we started dating, we were attending social functions for the station and I started drinking again.\"\n\n\"Why?\"\n\n\"All the heavy-hitters drank. The station owner always had a decanter of Jameson Irish Whiskey on his side desk and he always expected you to have a jolt with him when he had one. I couldn't say no. At least not to him.\" James took a long drink of his unsweetened grapefruit juice, then continued. \"I got sloshed at the wedding but then, so did everyone else, so I didn't feel bad. I found out days later that I had fucked the owner's wife in the broom closet during the reception but Anna never complained. I think I wasn't ready to get married because my drinking got worse. I was juggling the stress of work, the stress of working with my wife and fucking every warm body that came my way. Grace was just coming through then and we were peas in a pod. I quit fucking everyone else and fucked only her and my wife.\"\n\n\"Oh, James.\"\n\n\"I know, I know.\" He shook his head in agreement. \"I cheated. I was a rotten, alcoholic bastard. And I lost Anna because of that and my drinking. I came home one night and found her dead in the bathtub. She'd committed suicide.\"\n\nBeverly gasped. \"Oh, James!\"\n\n\"And I found out several days later that she had been pregnant with our first child.\" James had to stop at the point. His chest ached with the effort needed to keep his tears at bay. Beverly's soft hand on his helped to calm him and he covered it gratefully. \"I drank non-stop for the next ten years. I don't know how I managed it, but I moved up the ladder. I was a functioning alcoholic. I was always able to do my job and even did interviews, completely under the influence.\"\n\n\"What made you quit?\"\n\n\"I went to one of those psychology camps. You know, the ones that offer help with addictive behaviors?\"\n\n\"Yeah. I went to one of those once. Didn't work.\"\n\n\"Well, it helped me. I still drink but not as much and not as often.\" He smiled sadly. \"But I still think about Anna, about the daughter I could have had, about the life I could have had. I guess that's why I think about having that life again.\"\n\nBeverly gave him a gentle smile. \"There's nothing wrong with that, James. We all have dreams and desires.\"\n\n\"It just seems like I'm never able to make my dreams come true.\"\n\nShe was quiet for a long moment. \"What's standing in your way?\"\n\nJames thought for a moment, his eyes locking onto hers. \"I don't know.\" Tears welled and fell, quickly caught by his linen napkin. \"I just don't know.\"\n\n\"Excuse me.\" Nathan's words were soft and Beverly looked at him, still holding James' hand as the older man cried silently. \"These are for you.\"\n\n\"Thank you, Nathan.\" He touched his fingers to his hat, walking away and Beverly returned her attention to James.\n\n\"I'm sorry. I never cry.\"\n\n\"Don't be sorry, honey. Seems it was a long time coming.\" She touched his cheek gently, both in care and concern for him and in wonderment at the feelings that were coursing through her. \"Now come on. Let's finish our breakfast and do some horseback riding. I have ridden a horse since I was a kid.\"\n\n\"Neither have I.\" James' eyes began to brighten. \"The first time I rode one, the horse bucked me off and I landed in a huge pile of dung!\"\n\nWhen he threw his head back in laughter, Beverly knew that the worst had passed. James would be all right.\n\n* * * * *\n\nAshley sat down on the bed, watching Shane retrieve the camcorder and a large box from the table in the main room and bring it to where they were sitting. Ashley took the camcorder and set it up, aiming the viewfinder towards them and pressing the RECORD button.\n\n\"What's in the box?\"\n\n\"I don't know. Let's find out.\" Shane lifted the lid and both peered inside. \"Wow!\"\n\nInside the box was a large assortment of vibrators and dildos, in various colors, sizes and lengths. Shane pulled out a huge black one, his jaw hanging open.\n\n\"Holy shit! This is definitely a roto-rooter!\" His laughter was cut short by Ashley's answering silence. \"Ash, what's wrong?\"\n\nAshley was remembering again. One of Matthew's favorite items to use during sex were dildos. She recalled being assaulted over and over with one on a particular night. \"I don't like those things.\"\n\nThe words, why not?, were on the tip of his tongue but Shane bit them back. \"Here. Let me try something.\" He reached into the box and removed a bright pink vibrator. It was about seven inches in length and about an inch thick. He pushed the box aside, turned the knob on the dildo and turned to Ashley. \"Close your eyes and give me your arm.\"\n\n\"Shane ... \"\n\n\"Come on, Ash. Trust me.\"\n\nShe shivered in fear but closed her eyes, acknowledging her trust in him. She felt Shane's warm hand under her forearm, supporting her arm and then ... Ashley gasped at the sensation of the vibrator on the sensitive inside of her elbow. She felt the supple plastic crown move down her forearm toward her hand and she trembled. The feeling was exquisite.\n\n\"Lie back.\" Ashley's eyes flew open in fear but she saw Shane, remembered that she was safe and did as he asked.\n\nShane pushed her long hair away from her face and put the tip of the vibrator at the juncture of her ear and neck, slowly moving it down over her neck and pausing for the slightest moment over her pulsing veins before moving across her windpipe and over to the other ear. She let out an almost inaudible gasp but he heard it. He slid the head around the outline of her hair, across her cheek and onto her lips. \n\nAt first, she kept her lips clamped shut. He gently moved the plastic cock around the outside of her lips and slowly, she opened her mouth. He teased the soft pink insides of her lips and heard her soft moan. He moved the device down her chin now, following the line of her neck, then slid over her clothed left nipple. Ashley shouted at the sensation.\n\n\"Keep your eyes closed and take your top off, Ash.\"\n\nAshley sat up and pulled the thin sweater over her head, tossing it on the floor along with her bra. She felt the vibrator's rounded tip circle her nipple, its electrical buzzing making her skin tingle and her pussy moist. The tips moved across to her other nipple and she fought the urge to shout in delight. A deep tremble started low in her stomach and she squeezed her thighs together as an orgasm ripped through her.\n\nShane smiled at her response and set the vibrator down to unbutton and slide her jeans down. He saw the marks on her legs and ignored them, knowing how important it was to keep her in the moment. He left her thong on and laid the humming tip directly against her hidden clit, adding a little pressure. She screamed in release, her hands clutching the sheets as he stroked again and again. He pushed the underwear down, grinning at the wetness and slipped the head of the vibrator into her slit.\n\nAshley whimpered, every nerve ending on fire. She wanted that thick chunk of vibrating plastic deep inside her and Shane was teasing her. She gasped, whimpered and moaned as he maneuvered the vibrator around the lips of her pussy, over her throbbing clit and tormented her dripping hole. \"Shane, fuck me!\"\n\n\"Not yet. Be patient.\"\n\n\"I don't want to be patient!\"\n\nShane snickered as he reached in the box and took out two more items. He handed her a small dildo. \"Want something to do? Lick this.\" He watched as she took it and ran its tiny head along her lips, then began to tongue it. Meanwhile, Shane put some lube on another vibrator, this one smaller that the other and turned it on. \"Put your legs on my shoulders.\" He waited until she did it and plunged both vibrators into her pussy and asshole.\n\nAshley came so hard that no sound came out of her mouth, her clasping pussy tried to push the vibrator out but Shane held it tightly, pumping both and causing her to cum again and again. She lost count of how many times she orgasmed but she knew one thing. She intended to repay the favor.\n\nShane pulled the vibrators out of her grasping holes and laid next to her, wearing a big smile. \"Now, aren't you glad I told you to be patient?\"\n\nAshley sighed, her body still pulsing with pleasure. \"Shane, that was so good. You must have girls chasing you all over the place.\"\n\n\"Well, I do, but I don't really care.\" He put his hand on her stomach, gently massaging. \"I'm gay.\"",
        "\"Really?\"\n\n\"Yes.\"\n\n\"I wouldn't have guessed that about you.\"\n\nShane smiled. \"I hope you wouldn't!\" He smoothed the hair out of her face. \"I'm sure a gay quarterback is not exactly something my school's looking for.\"\n\n\"No, I guess not.\" She turned on her side. \"May I return the favor?\"\n\nShane's eyes darkened. \"You want to do me?\"\n\n\"Yeah, why not?\" Ashley touched his cheek. \"You did such a good job on me ... \"\n\n\"Ash, it's not necessary.\"\n\n\"Yes, it is,\" Ashley arose from the bed and rummaged around in the box, finding something he'd only seen in lesbian porno movies. His mouth hanging open, he watched as she strapped on a dildo harness and snapped the black dildo he'd seen earlier into place. \"Assume the position.\"\n\n\"Ashley ... \"\n\n\"Hey, you didn't let me talk back. Neither can you!\" She took out the new tube of lube and gave him an evil look. \"Take those clothes off and make it snappy!\"\n\nShane's heart thudded in his chest as he dropped his t-shirt, jeans and tidy whities on the floor. He felt strange being naked in front of her, but she was as naked as he was. His mouth watered at the sight of her lubing that huge black dick up and his already aching cock leaped.\n\n\"Get on all fours.\" Ashley watched as Shane flipped over and put his ass in the air, his hard cock swinging like a bell clapper between his legs and his pink pucker exposed for her. She squeezed some cold lube out onto his asshole and lined the big, black head up, flexing her hips forward and burying the dildo inside him. Shane groaned in pain, taking shallow breaths as he got used to the full feeling of the dildo. \"Like that, Shane?\"\n\n\"God, that feels so good!\"\n\n\"Unlike you, I didn't make you wait.\" She whispered, pulling out a bit and sliding in slowly. She reached under and gave his stiff dick a pull, eliciting a deep groan from him. \"I know what it feels like to want to cum and ... \"\n\n\"Oh, Ash.\" Shane gasped as she slid out and in again. His sperm-laden balls swung heavily, his thick cock within his hand. \"Please, just fuck me.\"\n\n\"Why should I? You didn't do that for me.\"\n\n\"You've got that lovely Kelly Jo Marcus to fuck. I'm alone.\"\n\nAshley thought for a moment. That much was true. \"All right, Shane. Just this once.\"\n\nShe put her hands on his butt and pressed inward, driving the soft plastic prick into his ass while one of her hands stroked his hanging meat. He was so turned on that he came almost immediately, spewing ropes of thick cum into his hand as she plowed his ass. Minutes later, she pulled the dildo from his ass, causing his long groan and laid next to his panting form. Shane stared at her dildo-wearing figure and suddenly a light went on in his head.\n\n\"What's wrong?\" Ashley asked, seeing the sudden change in her friend.\n\n\"Nothing. Nothing at all.\" He reached for the phone, his intention to call Nathan. \"Thank you, Ashley. You opened my eyes.\"\n\n\"Did I?\"\n\n\"Yes.\" Shane gave her a kiss on the cheek and took her into his arms with a smile. \"More than you know.\" "
    ],
    "authorname": "velvetpie",
    "tags": [
        "inside shane",
        "met anna",
        "shane stared",
        "beverly james",
        "shane smiled",
        "twelve pack",
        "tongue shane",
        "shane put",
        "turned ashley",
        "beverly knew"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/wicked-game-ch-09"
}