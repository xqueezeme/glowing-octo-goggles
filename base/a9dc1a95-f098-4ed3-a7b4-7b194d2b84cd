{
    "title": "My Journey Ch. 09",
    "pages": [
        "This is the ninth installment of My Journey. Although not necessary, this story will be more appreciated if you read Chapters 1 thru 8 first. Thank you to all who read my first eight submissions and provided feedback.\n\nThis is a work of erotic fiction, and all characters in this story are over the age of 18 years.\n\nSince it's been awhile, here's a list of the main characters:<br> Clark Pratt -- Middle aged patriarch<br> Tina Pratt -- Clark's female wife and mother of their children<br> Trish Pratt -- Transexual wife of Clark and Tina<br> Mark Pratt -- 18 year old son<br> Ellen Pratt -- 18 year old daughter<br> Whitney -- Mark's fianc\u00e9e and Ellen's bi lover\n\n~~~~\n\nThe remainder of the spring flew by and May was upon us before we knew it. The entire family was busy preparing for a very big weekend at the end of the month. Our twins, Mark and Ellen, and our \"adopted\" daughter Whitney would graduate on the last Saturday of May. Mark and Whitney would be married in a private ceremony at our home the following day, and Mark would be leaving for Marine Corp boot camp the following Saturday.\n\nMy wives, Tina and Trish, and I worked all month mailing invitations and preparing to host a pool party following the graduation ceremony. We weeded, edged, and re-mulched the flower beds. I cleaned the pool, trimmed trees and shrubs, and did general cleanup around the house. Our intense work paid off, and we had all of the difficult work done with a week to spare. That allowed us to spend time with the kids and prepare ourselves mentally for what I knew would be an emotional weekend.\n\nOn Wednesday, Whitney informed us that her mom and dad weren't doing anything for her graduation and asked if she could hang out at Mark's and Ellen's party on Saturday.\n\n\"We were kind of anticipating that Whitney,\" Tina confessed. \"so the invitations we sent out were for you, too. I hope you don't mind us being so... forward.\"\n\n\"Really? You did that for me?\"\n\n\"Of course we did! You're family sweetheart!\" answered Tina.\n\nWhitney threw her arms around Tina's neck and through her tears whispered \"I love you mom. Thank you for caring for me.\"\n\n\"Oh, my precious Whitney, it was the right thing to do!\"\n\n~~~~\n\nFor the entire week leading up to the party, our family refrained from indulging in any \"extra-curricular\" activity, preparing for the unannounced (but likely) after-the-party party.\n\nThe graduation ceremony itself was a dignified affair. The high school band (sans the seniors) muddled their way through numerous verses of \"Pomp and Circumstance\" as the graduates filed into the gymnasium and took their seats at the front of the sea of chairs.\n\nOnce the grads were all in their assigned places, the band croaked out \"The Star Spangled Banner\" and the seemingly endless stream of sugary sweet speeches began.\n\nOf course, it was still emotional for Tina, Trish, and me. Our youngest children were going to be leaving, and our lives would be forever different.\n\nMark and Ellen surprised us, and the administration, by holding hands and walking across the stage together to receive their diplomas. The three of us were thrilled to see the kids with gold cords around their necks, signifying their grade point average was in the top ten percent of their class. After receiving their diplomas, Mark and Ellen hugged on stage before he swept her off her feet and carried her down the steps back to their seats to the thunderous applause of their classmates and the laughter of the crowd.\n\nWe cheered for Whitney when her name was called, and she strode across the stage with the gold cords around her neck as well.\n\nNeedless to say, we were very proud parents that afternoon.\n\nFollowing the ceremony, we gathered outside for pictures. Ellen furiously snapped photos of her brother and classmates with the camera we had given her, and Trish and Tina clicked away with theirs.\n\n\"Let's go over by that grove of trees for a minute. I want to get a special picture with just Whitney\" Ellen instructed.\n\nSo we made our way to a clump of trees that separated us a little from the rest of the crowd and provided considerable privacy. Ellen and Whitney looked at each other, smiled and giggled.\n\nWith their backs to the rest of the crowd Whitney commanded \"Get those cameras ready!\"\n\nTrish and Tina looked through their viewfinders and started snapping photos.\n\n\"Are you ready?\" Ellen asked Whitney.\n\nWhitney could only smile as she and Ellen unzipped their gowns and opened them.\n\nThe two young ladies had the provocatively good taste to wear their gowns with just garters and stockings underneath. They stood wantonly, legs slightly spread and breasts on full display. Their smooth hairless pubis were engorged, indicating their aroused state.\n\nAs I looked on, the only thing I could hear over the pulse pounding in my ears was the non-stop clicking of the shutters on Trish's and Tina's cameras.\n\nWhitney and Ellen ate up the attention and reveled in the looks on our shocked faces. Before zipping back up the two young ladies turned toward each other (careful not to expose themselves to the crowd), slipped an arm around the others waist and kissed each other deeply, their adjacent breasts mashing together.\n\nThe cameras continued to click.\n\n\"I love you\" Ellen whispered.\n\n\"I love you too, Ellen\" Whitney replied.\n\nThey quickly zipped back up and went to join the rest of their friends as if nothing happened.\n\nThe three of us took a little longer to recover.\n\n\"So... That was...that was...pretty hot.\" Trish finally managed.\n\n\"Yes. Yes it was\" Tina offered.\n\nI didn't say anything. I was too busy trying to figure out how I was going to hide my erection.\n\nOnce the pictures with their friends were all done, we headed back to the house to entertain our expected guests.\n\nAfter our arrival back at the house I excused myself to take a quick shower so I could make sure I was \"clean\" for what might happen later. I donned some more comfortable clothes (shorts and a polo) and a pair of dark sunglasses, and I am thankful I did.\n\nA steady stream of guests came and left. Most were the kid's classmates but others were neighbors and acquaintances of ours. Our guests enjoyed plenty of food and some took advantage of the pool.\n\nI can't speak for Trish and Tina, but I endured an extended duration of heightened arousal as I watched attractive young men and women cavort in the pool and hit on Whitney, Ellen and Trish; advances that were either rebuffed or ignored. I even noticed that some of Mark's friends cast lingering glances at Tina. Tina also noticed the activity as I saw her frequently glancing in my direction throughout the afternoon.\n\nAs evening approached the crowds began to thin, eventually leaving only our \"family\". I went in the house and turned off all of the lights and locking the doors, giving indication to all that our party was over.\n\nWe did a cursory cleanup of the backyard so there would be less to do in the morning. Some of the work would have to wait because I had a gut feeling there were other celebratory activities that were yet to take place.\n\nDuring the clean-up I noticed that Mark and Whitney had gone into the house. If they were as affected by the day's activities as I was I could not blame them for seeking a little relief.\n\nAs I put away the last of the tables and chairs, I realized I was the only one in the backyard. The patio door opened and Mark joined me in the backyard. He looked flushed, as if he was embarrassed, but the lump in his shorts also indicated he was more than a little turned on. Mark sauntered over to the pool and sat down in a lounge chair.\n\n\"That was a great party dad. Thanks for putting it on\" he said.\n\n\"You're welcome Mark. It was a lot of fun for us too\" I replied.\n\nI finally took a moment to relax in a chair a few feet from Mark, my back to the pool. The sun was getting low in the late afternoon sky so I took off my shades and relaxed with my head back and my eyes closed.\n\nMy eyes fluttered open when I heard the patio door open. Once able to focus again I could see Trish, Tina, Ellen, Whitney, and surprise guest Brenda stride through the door and across the lawn toward the pool.\n\nIn my mind it was like watching a Victoria's Secret ad. Five gorgeous women, side by side with hips swaying, closing the distance between us. The scene was so sexy it seemed to play itself out in slow motion.\n\nAll five women sported an erection from between their legs. Tina and Ellen wore their Real-Doe strapless dildos and Whitney wore a realistic looking cock held in place by a \"jock strap\" type harness which left her incredibly beautiful pussy exposed and available. Trish's and Brenda's erections were, of course, their own and they were absolutely mouth-watering.\n\nIt was a stunning sight.\n\nTrish walked directly to Mark and took his hands in hers. She pulled him out of his chair and immediately dropped his shorts which he stepped out of. Trish threw her arms around Mark's neck and pressed her naked body firmly against his, their cocks rubbing against each other as she kissed him ferociously. Whitney approached Mark from behind and pressed her nude form against his back, sliding her strap-on between Mark's ass cheeks. Her hips rolled as she slipped the rubber cock against his asshole.\n\nBrenda, Tina, and Ellen walked straight toward me, all displaying looks of intense desire. Ellen took my hands and pulled me out of my chair. Tina was behind me and immediately dropped my shorts while Ellen pulled my polo over my head. I was now completely naked, surrounded by beautiful women with equally beautiful cocks.\n\nEllen stepped aside and Brenda quickly took her place, embracing me and placing her full, luscious lips against mine. Her hips thrust slightly forward and she rubbed her black cock against mine. Ellen moved behind Brenda, placed her Real-Doe in the crack of Brenda's ass and reached her hands between us to caress Brenda's firm tits and tweak her protruding chocolate nipples. Tina was behind me, her Real-Doe pressed firmly between my butt cheeks, her hands on Brenda's hips pulling the statuesque woman against me.\n\nTina's tongue snaked into my ear. Her breathing was heavy, almost desperate. She whispered \"Brenda has been waiting for this, honey\", her tongue plunging into me again as I groaned. Her head moved to the other side and she licked and sucked that ear as well.\n\n\"Do you want her to fuck you, honey?\" she asked in a throaty, faint whisper. \"Will you let her fuck your ass while I watch?\"\n\nBrenda continued to hump against me while she sucked and devoured my tongue. All I could do was groan into her mouth as Tina probed my sensitive ear with her tongue and pushed against my ass with her phallus.\n\nBrenda broke our kiss, placed her head next to mine and kissed my wife with her tongue before breathing \"I love the cock ring Clark.\" I had grown so accustomed to having it on I rarely thought of it anymore, but I was glad she noticed it. She again placed her mouth against mine and pressed her tongue into my mouth. Repositioning her face next to mine she pressed her smooth cheek against my cheek and whispered \"You want to suck my cock before I fuck you with it, don't you Clark?\" Again she invaded my mouth with her talented tongue. All I could do was groan and thrust my hips back at her. Her raging erection felt glorious rubbing against mine.\n\nBrenda shifted away from me and lowered herself to the grass. She leaned back on her elbows with her legs spread in wordless invitation, her magnificent black cock rose from her groin and rested on her flat tummy. Her cock was perfect on her. It was dark brown, the head being a couple of shades lighter than the shaft. It was the perfect blend of the masculine and the feminine.\n\n\"Show me you can suck cock as well as Trish says you can.\"\n\nThe brief break in the action gave me a chance to see what the other group was up to. Trish was still kissing Mark deeply, their tongues wrestling while Trish stroked Mark's cheek with her left hand and his throbbing cock with her right. Whitney was still behind Mark, her strap-on cock thrusting against him while she kissed his neck and pinched his nipples. I now knew why the two had disappeared during cleanup: Whitney had prepared Mark to take her dildo in his ass.\n\nAs if in a dream state I lowered myself to my knees in front of the black goddess. With my right hand I grasped the ebony cock in front of me causing Brenda to completely recline in the cool, lush grass. Ellen wasted no time straddling Brenda's face, the base of her cock resting on Brenda's chin. I stroked the impressive brown pole as I marveled at it's size. It was not huge, but it was bigger than mine or Trish's, both in length and circumference. When I heard Ellen groan from the pleasurable probing her ass was taking from Brenda's tongue, I lowered my mouth onto the mocha colored head and sucked while I continued to stroke the coffee colored shaft.\n\nI felt Tina kneel behind me and instinctively lowered my hips by spreading my knees apart.\n\n\"Oooh, such a good boy\" Tina cooed. \"We need to loosen you up a little before Brenda fucks you with that gorgeous cock.\" I felt Tina press the lubricated tip of her silicone cock against my ass. As the head slid into me I moaned on the cock in my mouth. Ellen stroked her faux cock as she rocked her hips against the tongue invading her backside.\n\nAs I pleasured the cock in my mouth I heard Trish praising Mark as she had done at Christmas. He was stroking Trish's clit now and she proclaimed how good his hands were before telling him \"We both know you regret not sucking my cock at Christmas. I want you to do it now. Show me you're a real man like your dad. Love my cock like your dad does, honey\".\n\nTrish made her way to the shallow pool and lay on her back, legs spread wide, her right hand grasping her beautifully hard penis. \"Make love to my cock with your mouth, sweetie\" she beckoned.\n\nMark knelt between her spread legs with his ass high in the air and took Trish's she-cock in his mouth and began to work it with his lips and tongue. Whitney moved behind Mark and kneeled down. \"While you're doing that lover, I'm going to make your ass mine!\" Whit applied a generous amount of lube to Mark and to her dildo before she began to feed her strap-on into her fianc\u00e9's virgin ass.\n\nAs the length of her cock eased into my son I heard her say \"I've wanted this for so long lover. Let me make you all mine. Give yourself to me honey! Let me make you MY man!\" Once her cock was buried completely inside him, she grabbed his throbbing erection with her still greasy right hand and stroked him while she slowly, lovingly plunged her cock in and out of his clutching ass.\n\nMark stopped sucking Trish just long enough to mutter \"Fuck me Whitney! Fuck me!\"\n\nTina was still sliding her silicone cock in and out of my ass while I sucked Brenda's meaty staff. Brenda voiced her appreciation for my efforts as she extricated herself from under Ellen and, holding my face in her hands, lifted my sucking mouth from her cock. Tina continued to fuck me.\n\n\"I want to cum inside you\" Brenda confessed.\n\nTina withdrew from my rectum and I crawled up Brenda's body until I straddled her waist. Tina wrapped her hand around the woman's penis and held it while I lowered myself onto it. Thank God Tina had loosened me up! Brenda's swollen clit stretched me out as it slid into my depths. Once she was all the way in I fell to her chest. My mouth sought her mouth, my tongue sought her tongue as I kept myself motionless, reveling in the sensation of having this beautiful woman's cock inside of me. Brenda was not moving either, reveling in the tightness of her newest lover's ass.\n\n\"Oh my God Clark, you look so hot with that black cock inside of you! How does it feel baby?\" Tina lustfully moaned, her voice dripping with arousal.\n\nI showed her by rocking my hips, allowing an inch or two of the wonderful cock to slide in and out of me.\n\nBreaking from my kiss with Brenda I sat up and raised my ass allowing Brenda to fuck me proper.\n\n\"You have become such a good little cock slut, Clark. Make her cum. Make her cum in your ass!\" Tina commanded. I was surprised by her words and her dominance.\n\nTina moved around to my right side and lowered her face to my painfully erect and oozing cock. She slurped it into her mouth and swirled her tongue around the head before releasing me and saying \"Ellen, honey? Get behind mommy and fuck her!\" Tina again took my length into her hot sucking mouth.\n\nTina still had her Real-Doe inserted in her pussy so Ellen slipped the business end of her silicone dong into her mom's ass, eliciting a deep, long groan of appreciation from Tina.\n\nLooking toward the other group to see what was going on I heard Mark groan repeatedly as jism spurted from the end of his cock into the water between Trish's splayed legs.\n\n\"OH! Honey! That didn't take long at all! You must have really liked that!\" Whitney pressed her tits against Mark's back kissing his neck and back. She stroked his now ultra-sensitive cock and thrust her hips into him. \"Tell me lover,\" she whispered in his ear \"was it the cock in your mouth or the one in your ass that got you off so fast?\"\n\nMark didn't answer her.\n\n\"I think it was the one in your ass.\" Whitney's thrusting slowed to a halt. \"What do you say we let Trish finish inside of you, hmm?\"\n\nWhitney withdrew her strap-on from Mark, Trish stood and got behind Mark, pushing him to his belly in the shallow pool. Trish straddled his butt, her saliva dripping cock between the young man's ass cheeks. With her right had she pushed her erection down, aligning it with Mark's stretched entrance and pushed her hips forward, sliding effortlessly into my son's recently fucked tunnel. Trish lowered her torso so her breasts were firmly pressed against Mark's back. \"You feel so good sweetie. I've wanted to make love to you like this for a very long time.\" She paused as she began to fuck Mark. His hips were rising slightly to meet her thrusts now, causing her to grin victoriously. \"You've wanted it too, haven't you?\" Mark did not answer. \"Do you like having Aunt Trish's cock inside of you? Is Aunt Trish's girl-cock gonna make you cum?\" Mark's only response was a moan as he exhaled. \"I want you to cum for me honey. Show me how much you love me and cum for me\" she encouraged as she began to really stroke her perfect she-cock in and out of our son.\n\nWhitney was behind Trish doing her best to lick my wife's asshole. Trish halted her fucking for a moment and looking over her shoulder said \"Whitney, would you be a dear and stick that cock of yours in me? I want you to fuck me while I make love to your fianc\u00e9.\"\n\n\"I thought you'd never ask!\" Whitney chimed as she took up position behind my transsexual wife and inserted her rubber prick into Trish's succulent, perfect asshole.\n\nOnce Whitney's cock was buried inside of Trish's rectum, they both began to thrust; Trish into Mark and Whitney into Trish.\n\nWhat an incredibly erotic and mind-blowing scene! My shemale wife was making anal love to our son while his fianc\u00e9 fucked her. I was being mercifully fucked by a gorgeous black shemale while my other wife sucked my cock and our daughter fucked her ass. \"What a great movie this would make\" I thought to myself.\n\nWhitney leaned into Trish's back and worked her hands under Trish to cup and fondle her tits while she drove into the pretty shemale's ass.\n\nTrish was still stroking in and out of Mark, her balls slapping against his perineum and her thrusts causing Mark's cock to rub against the pebbled surface of the pool floor.\n\n\"So good. So good. Fuck me. Fuck me.\" Mark babbled, almost incoherently.\n\n\"Oh Mark, honey, your ass feels so good around my cock. You're gonna make me cum sweetie. Will you cum with me Mark? I want you to cum with your Aunt Trish!\"",
        "\"Don't stop Aunt Trish. Don't stop making love to me. I'm so close. So close!\" he declared.\n\nWhitney was beginning to show signs of a pending orgasm as well. \"Cum for her Mark. I want to see the two of you cum together!\" she encouraged, her voice betraying her approaching orgasm.\n\nThe pebbled pool surface rubbing the sensitive underside of his cock and the delicious pleasure of Trish's cock in his ass was too much for Mark.\n\n\"He's gonna cum Aunt Trish. I can tell. Are you ready? Are you close?\" Whitney begged.\n\n\"Oh yes, oh yes! Fuck me Whit. Fuck my ass!\" Trish answered.\n\n\"Oh God! Oh GodohGodohGod!\" Mark exclaimed from his position on the bottom.\n\nTrish's long, deep thrusts became short, violent stabs as she ejaculated in her son's ass.\n\nWhitney convulsed against Trish's back as she too came just seconds later. I thought I could hear her ejaculate splashing into the pool.\n\nBrenda was now thrusting into me in earnest. Tina was fellating me as if it was her life support. Ellen continued to fuck her mom's ass from behind.\n\nI knew from experience that Ellen could cum just from using the Real-Doe. She came while fucking me with it a number of weeks ago, and when she pressed her breasts into her mom's back and reached around to grab Tina's tits I could see she was getting close. Ellen's long, deep strokes were replaced with short, violent thrusts that were so intense they caused Tina's Real-Doe to slap against her belly.\n\nEllen came first, her entire body shuddering in pleasure as she continued to fuck her mom. The combination of the sucking mouth on my cock and the fleshy probe plunging into me, rubbing my prostrate was too much and I released a torrent of semen into my wife's suctioning mouth. The pulsing of my sphincter around Brenda's cock (and the totally taboo experience) caused Brenda to go over the edge. With a torrent of dirty talk flowing from her mouth she deposited her cream into my thoroughly fucked ass as we both moaned from the pleasure of the sensation.\n\nTina released my cock and shouted \"Harder! HARDER! Don't stop honey! Fuck me! FUCK MEEEE!\" she wailed as her daughter-induced orgasm swept over her. Ellen continued to pump into her mom's ass until her orgasm subsided.\n\nTina then made her way out from under Ellen and pushed her daughter down to the grass. Tina was nearly frantic. She grasped the base of Ellen's real-Doe and removed the bulb from the young woman's vagina. Tina positioned herself between her daughter's legs and unceremoniously slipped her cock into the swampy pussy of the young woman.\n\n\"You fucked me sooo good honey!\" Tina praised before deeply kissing the beautiful young brunette and stroking her dildo in and out of the young woman's body.\n\n\"Oh my God mom! That was so good! So unbelievable! I loved fucking you like that!\" Ellen confessed before their mouths rejoined to resume their intimate kissing.\n\nI collapsed onto Brenda, her cock still embedded in my ass. I wrapped my arms around her neck and we kissed while I rocked my hips, allowing her slowly deflating cock to slip in and out through my sphincter. I relished the feel of her cock inside of me.\n\nOf course, Brenda's cock eventually deflated completely and slipped out of my well used ass. \"I'm disappointed in Trish. She lied to me\" Brenda said as she looked into my eyes.\n\n\"Really? That's not like Trish. What did she lie about?\" I asked.\n\n\"She told me you were a good fuck, and a good little cocksucker.\"\n\nA feeling of inadequacy was quick to rise up in me. Had I not satisfied this woman?\n\nSeeing the concern on my face, Brenda was quick to add \"You are a fantastic fuck and cocksucker. Trish and Tina are very lucky women.\"\n\nMy countenance returned at her compliment.\n\nAs Brenda and I continued to kiss and pet, our attention turned to the other group. Trish had pulled her spent cock out of Mark's ass and Whitney was reclining on her arms in the shallow pool, her legs slightly spread. Mark gently took Trish's face in his hands and kissed her softly on her lips. Trish opened her eyes and looked into Mark's. A growing smile crossed her face as she realized what Mark was telling her with that kiss.\n\n\"Thank you Mark. That was beautiful.\"\n\n\"Just like you\" he replied before making his way to Whitney. Mark knelt over her body, straddling her hips, and he lowered his cum filled ass on to her ever erect strap-on cock.\n\nWhitney's eyes were wide in surprise at Mark's initiation of this intimate act. Reaching behind himself he inserted two fingers from his right hand into Whitney's dripping pussy. As he fucked himself on the beautiful blonde's cock she stroked his firm manhood while he stroked her G spot with his fingers and strummed her clit with his thumb. \"I thought you might like to squirt while you fucked your man.\"\n\nWhitney had been turned on all day. Not only by what she, Mark, and Aunt Trish had done, but also by watching Brenda fuck me and Ellen fucking her mom. Now her fianc\u00e9 was riding her cock and finger fucking her sensitive pussy and stroking her engorged clit. It didn't take very long until her pussy was ejaculating steams of fluid into the air and splashing in to the pool. In fact, she was so turned on she came like this repeatedly until Mark came, squirting his seed on her breasts, tummy, and hand. It was impressive considering it was already his third cum of the day.\n\nTina had been making love to Ellen this whole time. I don't know if they even stopped kissing. I recall hearing Ellen moaning into her lover's mouth twice and Tina once. I assumed it was when they were cumming.\n\nEllen and her mom disengaged from their coupling after expressing their love for each other. Ellen joined Whitney and Mark in the shallow pool. I rolled off of Brenda and lay in the grass next to her. We kissed and played with each other's genitalia.\n\nTrish padded through the grass, and as she approached I rolled to my back and spread my legs to give her access. Trish lay on top of me and kissed me. \"She's good, isn't she?\" Trish inquired.\n\n\"She is,\" I agreed, before adding \"but I'd rather have your cock inside of me.\"\n\n\"Why's that?\" Trish asked.\n\n\"Because it's attached to the woman I love.\"\n\nWe kissed a kiss of soul mates.\n\nIn the meantime, Tina had positioned herself between Brenda's legs and was busy cleaning the black cock with her tongue and mouth. \"I think I might like to have this inside of me Brenda\" Tina panted before returning to her work of trying to arouse the now flaccid member.\n\nAfter having cum for the third time, Mark released Whitney's cock from his ass. He lay down in the shallow pool on his side next to the young woman and began to clean his semen from Whitney's firm breasts. Mark lavished her breasts with kisses and licks, paying a great deal of attention to her long, erect nipples. Ellen had reinserted her Real-doe and was now on top of Whitney between her spread legs. Ellen speared Whitney's bald pussy and began fucking her with gusto. Ellen grasped Whitney's strap-on and jerked it as she slid her own dildo in and out of the beautiful blonde's dripping gash. It didn't take Whitney long to cum again, and her expletive laced wail told us all she was enjoying the screwing Ellen was giving her.\n\nTina had coaxed life back into Brenda's spent member. Rolling to her back, Tina pulled Brenda on top of her into a missionary position. \"When was the last time you fucked a husband and wife the same day?\"\n\nBrenda answered with a devilish smile \"This will be the first time\" sinking her long, thick cock into my wife as the two kissed passionately. Tina then turned toward Trish and me with a look of shock and rapture on her face. Trish and I could only look back at her with knowing smiles on our faces. Brenda began sawing her impressive organ in and out of Tina's drenched pussy. Having just fucked, and been fucked by, her daughter, it didn't take Tina long to reach a crescendo and she came hard on the beautiful cock filling her pussy.\n\n\"In my ass. I want this in my ass!\" Tina cried. Brenda pulled out of the mature woman's pussy, raised Tina's legs and slid her thick cock into my wife's well fucked butt.\n\nTina was in heaven. Her eyes rolled back in her head as Brenda assaulted her back door with long, firm thrusts. Watching Brenda fuck my wife, I realized how good she was at this. She had great hip motion and was really giving Tina a thorough fucking.\n\nTrish and I watched Tina's face twist and contort with the pleasure she was receiving from this woman's cock. She seemed to be in the midst of a non-stop orgasm. At times the two of us were concerned that Tina wasn't breathing, but I realized it was the same type of thing that happened to me when I made love to Tina and Trish made love to my ass.\n\nWhile Trish and I continued to kiss and pet we heard Whitney cumming, again and again, on Ellen's dildo. \"You have to stop. I can't take any more. Please! Please! Oh F-U-U-U-UCK!\" she wailed again as Ellen brought her to another climax.\n\nEllen finally halted her assault on her lover's pussy and the two young women nuzzled as thy caught their breath.\n\n\"FUCK! That was unbelievable Ellen! I lost count of how many times I came!\" Whitney said.\n\n\"Seven\" Mark chimed in.\n\n\"What?\" Ellen and Whitney asked.\n\nMark, with a huge smile of satisfaction on his face said \"Seven. She made you cum seven times. That puts you right around twelve for the day.\"\n\nThe three of them laughed, hugged and kissed before Mark positioned himself behind his sister, removed the bulb of the Real-Doe from her and buried his face between her legs licking her pussy and asshole clean.\n\n\"Are you ready for me to cum in your ass Tina?\" Brenda asked. Tina was nearly catatonic from the near non-stop fucking she had enjoyed this evening.\n\n\"Oh God yes! Please Brenda! I want you to fill me with your cum!\"\n\nAfter a dozen more strokes, Brenda slammed her cock into Tina one last time and emptied her nuts into the deep recesses of my wife's bowels.\n\nBrenda grunted, and Tina wailed as she came again on Brenda's cock.\n\nA few minutes later seven sweaty bodies made their way into the cool water of the pool. Tina, Trish and I held each other, taking turns kissing and stroking the others. The women were all smiles about what had transpired this evening.\n\nAcross the pool in chest deep water, Mark was playfully tongue kissing Brenda. From the ripples being generated on the surface of the water, it was pretty obvious that they were stroking each other's cocks underwater. Whitney and Ellen broke from the kissing they were engaged in and moved to either side of Brenda where they kissed and nibbled her shoulders and neck while caressing the shemale's chocolate breasts and nipples.\n\nWhitney left Brenda's side and moved toward Tina, Trish, and me. When she reached us she silently extended her hand underwater and took hold of my hand. She pulled my hand toward her and placed it on the strap-on dildo still jutting from her groin. My hand automatically wrapped around the shaft and began stroking the rubber penis. Whitney pulled my face towards hers and kissed me deeply. She then moved her face to the side, pressed her tongue into my ear and whispered \"I want you, daddy.\"\n\nTrish and Tina gave me an approving smile before they began one of their \"soul exchanging\" kisses.\n\nWhitney led me to the shallow pool, my hand still grasping her strap-on cock. Again she probed my ear with her tongue. Then, in a desperate voice, she said \"Get on your back daddy.\"\n\nI was quick to comply. Despite being thoroughly fucked by Brenda and having cum in Tina's mouth, I was hard again as this nubile co-ed instigated another round of sex.\n\nOnce on my back, Whitney lowered herself onto my engorged tool, engulfing me within the warm depth of her body. She still wore her strap-on, and seeing her cock stroke against my belly as she rocked her hips against my cock was an unbelievable turn on.\n\nWhitney bent forward pressing her firm, youthful breasts into my chest, her head next to mine as she continued to rock on my tool. \"I really liked fucking Mark, daddy. I felt so powerful and in control. I think Mark liked it too!\"\n\n\"That would make him a Pratt, I guess.\"\n\nWhitney let out a little laugh. \"Your cock feels really good inside of me daddy.\" She paused, but didn't stop rolling her hips, causing my cock to slide in and out of her gripping pussy.\n\n\"Daddy?\" she asked.\n\n\"Yes, sweetheart?\"\n\n\"Daddy, will you still be my surrogate cock when Mark is gone?\"\n\n\"Of course Whitney. That's been long settled.\"\n\nWhitney started to bounce on my cock now, almost allowing it to come all the way out before falling back on it. \"You have no idea how happy that makes me!\" she said as she began to fuck me really hard. \"Daddy, after today I'm gonna need a surrogate ass to fuck too.\" Whitney slid up my cock allowing it's entire length to leave her pussy. \"You will be my ass surrogate, won't you daddy.\"\n\nIt wasn't a question, it was an assertion; a statement of fact. I knew my ass would be hers whenever she wanted it after Mark left. I nodded my assent.\n\nWhitney put my cock back in her pussy and rolled her hips on it for a few seconds before she got off of me, stood, and said \"On your knees then!\"\n\nI guess I didn't comply fast enough because she said through gritted teeth \"On.Your.KNEES.\"\n\nI complied. On my knees with legs spread wide, Whitney knelt behind me, lubed her strap-on, and slid the dildo effortlessly into my well fucked ass.\n\n\"Look! Whitney's fucking daddy!\" Ellen exclaimed.\n\nWhitney was stroking very lovingly in and out of my ass while she stroked my cock and whispered naughty things into my ear. \"Oh daddy! This is so fucking HOT! You really love having a woman fuck your ass, don't you? Look at you, you horny boy! Thrusting your ass back at me! You love this! You really love this!\"\n\n\"Oh God, Whit. Yes! I love being fucked like this. Fuck me little girl. Fuck your daddy!\"\n\nSuddenly my face was being pulled down until it was nestled in Ellen's bald pussy. \"Eat me daddy. Eat me while Whit fucks you!\"\n\nI was on my knees with my face buried in my daughter's pussy while I wantonly accepted my son's devastatingly sexy fianc\u00e9's strap-on dildo in my eager, clutching ass and I was absolutely loving it. The two beautiful young women had taken charge of the situation and were using me to get what they wanted and needed. I was more than happy to oblige.\n\nWhitney's erect nipples scraped against my back and her delicate fist pumped the length of my erection. My now achingly hard cock was leaking pre-cum like a faucet, lubricating the hand that was pleasuring me.\n\n\"This is hotter than you said it would be El!\" Whitney said to my daughter.\n\nWithout removing my mouth from Ellen's pretty pubis, I slipped two fingers into her slit and began stroking in and out of her succulent snatch.\n\n\"Fuck that feels good daddy! You look so hot when you take a cock daddy! I think I could cum just from watching Whit fuck you! Oh my God!\"\n\nWhitney was thoroughly enjoying herself too. I can't say if it was physical stimulation, or if she was getting off on the power she was wielding over me, but she was whimpering and cursing as she came and came while she fucked her fianc\u00e9's dad.\n\n\"I'm cumming!\" Ellen cried. \"Oh Fuck! Daddy! You're making me cum so hard! Aaargh! Fuck!\"\n\nEllen grasped the sides of my face and held me in contact with her spasming womanhood as her powerful orgasm consumed her. My tongue and fingers were coated in her thick, pearly cum. Ellen had never cum like this, at least not for me. I dined on her deliriously delicious drippings, making sure none of it was wasted.\n\nWhitney pulled her dildo out of me and my ass instantly longed to be filled by her again.\n\n\"Let's take this to the grass\" Whitney commanded.\n\nEllen scooted out from under my still writhing tongue. Whitney strode out of the shallow pool and lay on her back in the cool, lush grass.\n\n\"Ride me\" she demanded.\n\nI dutifully straddled the hips of this blonde vixen and took her length inside of me once again. Ellen positioned herself over Whitney's face, lowering her hips to her lover's searching tongue. Ellen moaned when Whitney's tongue and lips made contact with her enflamed sex, at the same time extending her hand to grasp my rigid staff. Her other arm reached around my neck and pulled me toward her. She thrust her tongue into my mouth while she fisted my cock and I worked Whitney's strap-on in and out of my hungry asshole.\n\nEllen relinquished her kiss just long enough to place her face next to mine, lick my ear and whisper \"I love you daddy.\" Her words were not the empty words fueled by runaway physical passion. They were deep, emotional words expressing the true depth of our relationship, not only as father and daughter, but of friends and lovers.\n\n\"I love you too, baby girl\" I confessed, before our tongues again intertwined in an exchange of passion that exists only between people who share a deep emotional bond.\n\nEllen's delicate, yet firm, stroking of my cock, coupled with Whitney's probing of my depths brought me to the point of no return, and I prepared to erupt all over these two beauties.\n\nEllen's lips separated from mine and she started to speak, but I interrupted her.\n\n\"I'm gonna cum Whitney.\"\n\n\"So am I! Oh Whitney baby, you're making us both cum!\" Ellen moaned.\n\nWhitney could not speak with Ellen's pussy plastered to her face, but the increased tempo of her thrusting into me indicated her approval.\n\nEllen's tongue was again in my mouth as she continued to stroke my cock and buck her hips against Whitney's writhing tongue. Ellen inhaled deeply, then stopped breathing. Her left arm still around my neck, she broke our kiss, pulled me tightly to her and released a deep, primal groan as she came on her lover's tongue. Ellen's release was so erotic that my orgasm quickly followed. Ellen's stroking fist and Whitney's pistoning cock pushed me over the edge and my cock erupted, spurting my juice all over the abdomens of the two luscious beauties sharing their bodies and passion with me.\n\nWhitney's hips bucked sharply against my ass and I surmised that she too had cum with us.\n\nEllen quickly dismounted her lover's face and licked her own pussy juice off of Whitney's lips and face before engulfing my sensitive cock in her mouth and removing the remnants of my orgasm from my tool.\n\nThe three of us collapsed into a satiated pile of quivering flesh, totally drained by the exertion of our tryst. Ellen took turns kissing Whitney and me, whispering how much she loved each of us and how good our romp was. I remained on top of Whitney, her dildo still embedded in my rectum.\n\nIn time our pulses and breathing resumed to much more normal levels, and we were able to survey what was happening beyond our own little reality.\n\nTina was on her back, her legs wrapped tightly around Mark's back as he slowly and deliberately pumped his cock into her greasy pussy. Tina's arms were around his neck. They gazed into each other's eyes as the young man made sweet, tender love to his mom. I think Tina was trying to memorize what it felt like to have her son inside of her, and to show him how much she truly loved him. Tomorrow he would be married, and in a week he would be in boot camp. It would likely be months before they would be able to again share this kind of intimacy.\n\nTrish was between Brenda's spread legs, their cocks rubbing against each other as they kissed each other playfully, taking every opportunity to check on the other's activities.\n\n\"I love watching Mark make love to his mom\" Whitney said, her fingers mindlessly stroking Ellen's breast and nipples. \"They're beautiful together.\"\n\nRaising my hips and releasing Whitney's plastic probe from it's lodging I was able to turn and get a better look at my wife and son coupling next to the pool. My timing was perfect as I was able to watch Tina begin to pant and thrust her hips against her son's pelvis, causing his cock to drive even deeper into her slippery core.",
        "Tina's shrieks of delight indicated Mark had taken her to her zenith as she orgasmed on his seemingly perpetually hard cock. Mark continued his thrusting. He had already cum at least three times, and I think he could have fucked for another hour. But Tina was pleading to for him to cum. \"I want to feel you explode inside of me honey! Cum inside of me Mark. Cum in your mommy's pussy!\"\n\nMark bore down, reaching deep inside of himself to force his fourth orgasm of the day. He was sweating, his brow furrowed in a look of determination to please his mom, to satisfy her needs. His thrusting became increasingly urgent causing his scrotum to slap noisily against his mom's ass. From our vantage point we could see Tina's abdominal muscles tensing and relaxing as she squeezed the cock inside of her with her vaginal walls.\n\nAfter one final penetrating thrust, Tina's eyes opened wide, and her cheeks tightened as her face broke into a satisfied smile. She could feel the sperm laden semen pulsing into the womb that had given birth to the young man that had just made love to her.\n\nMark lowered his face and lovingly kissed Tina's smiling mouth. \"I love you mom\" he said matter of factly.\n\n\"Oh I love you too. So very, very much\" Tina answered as they held each other in their post coital glow.\n\nWhitney stood and unbuckled the harness she had worn all evening. Ellen also got to her feet. The two women held hands and crossed the short distance between where we were and where Tina and Mark were.\n\nWhen Mark saw his bride-to-be approaching, he kissed his mom on the lips, causing them both to break into huge, joyous smiles. Mark rolled to his right and onto his back. Whitney quickly descended to her knees between Mark's legs and engulfed his deflating, though still engorged cock. She sucked the fragrant combination of his cum and Tina's pussy off of the softening spear, savoring the briny taste. Releasing his manhood from her mouth she crawled up his frame and kissed him passionately on the mouth. \"I love you completely, Mark Pratt\" she confessed before again devouring his mouth and tongue with hers.\n\nEllen prostrated herself between her mother's spread legs and proceeded to lap at the woman's well fucked slit and clit, extracting her brother's cum and savoring the taste and feel of the combined fluids dripping from her mother's opening. Tina could only sigh in appreciation of what her daughter's talented tongue was doing.\n\nI kissed my wife Tina while gently stroking her cheek with the back of my fingers. With all of the sincerity I possessed I managed to croak out an emotional \"I love you, Tina.\"\n\nTina's face lit up, and through her broad smile said \"I know you do Clark. I love you too.\"\n\nI kissed her one last time before shifting to my right. Trish was still on top of Brenda, and the two lovely shemales stroked and touched each other with the familiarity of old lovers. Without hesitation I pressed my face between Trish's ass cheeks and rimmed the most perfect asshole ever created. The suddenness of my action caused her to squeal and jump, eliciting laughter from both her and Brenda.\n\n\"I want some of that too!\" Brenda exclaimed as the two women shifted position.\n\nTrish and Brenda were side by side, both on their knees with their glorious asses high in the air. The pair turned to look at each other and kissed erotically while I alternated my oral attention on their exposed puckers. Brenda was especially appreciative when my tongue pushed through her ebony sphincter. \"I love it when a man does that!\" she pronounced.\n\nAll parties being satiated for the time being, we all realized it was getting late and a little bit chilly too. We had another important day ahead of us and Tina suggested we head into the house to warm up and rest. Tina extended an invitation for Brenda to spend the night.\n\n\"Thank you for the offer Tina. I would love to join you, but I'm afraid none of us would get much rest\" she answered.\n\nOnce inside, yet still naked, Brenda took turns saying goodbye to her new playmates, hugging and kissing each one of us. Brenda hugged me lovingly before dropping her right hand to my turgid cock and tongue kissing my willing mouth. \"I look forward to the day I get to feel this inside of me Clark\" she said as she gazed longingly into my eyes.\n\n\"I think I would like that too, Brenda\" I replied.\n\nReleasing me she stepped to Tina. The two embraced, their cheeks pressed tightly together. \"Thank you for allowing me to join in this special celebration Tina. I hope we are able to do it again\" Brenda said.\n\n\"It was our pleasure Brenda\" Tina said, taking a moment to stroke the woman's flaccid penis. \"I enjoyed this immensely\" she continued causing both to smile before pecking each other on the lips.\n\n\"Trish, honey, I hope you realize what a special, special thing you have here\" Brenda said in a slightly jealous tone.\n\n\"I do Brenda, I really do. I am blessed beyond measure and I know it\" Trish answered with great pride.\n\n\"Love them\" Brenda whispered.\n\n\"I do, and I will\" Trish promised.\n\nShe hugged and kissed Ellen and Whitney in turn. \"You are incredible young women. Both of you. I wish you both much success.\"\n\n\"Thank you Brenda\" was their simultaneous reply.\n\n\"Thank you for cumming and making our party memorable\" Ellen offered, her double entendre causing us all to smile.\n\nMark was the last one to receive a departing embrace. It seemed Brenda had an affinity for Mark as her goodbye with him was quite long. She kissed him aggressively, her arms pulling him close. His arms also wrapped around her back, his hands dropping to grope the firm globes of her ass. Their goodbye kiss was rapidly turning into a hot makeout session. Mark's legs spread and he was visibly pulling Brenda's groin into his. The two lovers were humping each other in front of us.\n\n\"I look forward to the day when we can do this again, Mark\" Brenda cooed.\n\n\"I would like that very much Brenda\" Mark confessed.\n\nWith a final longing gaze into Mark's eyes and a stroke of his drooling cock, Brenda dressed and departed, leaving us with the memories of a wild, intimate celebration.\n\nThe next day, Whitney and Mark were united in marriage in a romantic ceremony in our backyard. Ellen was Whitney's maid of honor, and Trish was Mark's best woman. Mark and I dressed in simple suits, white shirts, and the red ties we had worn for the family portrait. Whitney wore a very non-traditional off the shoulder knee length ivory wedding dress, complete with ivory hose and ivory heels. Trish, Tina, and Ellen wore the dresses they had worn for our family portrait and it was amazing how well they matched Whitney's dress.\n\nThe Supreme Court justice that had provided the name change proclamation performed the nuptials. Accompanying him was one of Trish's \"girlfriends\" who was one of the recipients of the judge's beneficence. She appeared to be older than Trish and though she was attractive, she could not hold a candle to the incredible beauty that Trish possessed.\n\nConspicuously missing were Whitney's parents. Not that we cared. We found them to be abrasive, and they were more than happy to have Whitney out of their hair. Whitney didn't seem to care either. After all, through our family she had found the true love, acceptance, and emotional support she had never received from her biological parents. We were her moms and dad now. (Even if our relationships had not become physical we would have taken her in. We did love the girl as if she was one of our own children. The sex was just a bonus.)\n\nFollowing the brief ceremony, we partook of a light meal, wedding cake, and champagne. Thankfully the judge and his date left shortly thereafter.\n\nTina, Trish, and I had planned a honeymoon for the newlyweds since Mark was leaving for boot camp in just a few days. They needed some time alone as husband and wife before our son left for San Diego.\n\nIt was late afternoon when the bride and groom pulled out of the driveway for a week at a luxury hotel.\n\nEllen, Trish, Tina and I stayed dressed in our good clothes and sat on the deck around the table, replaying the events of the last two days. It didn't take much discussion of our memories before I was aroused again. I found it hard to believe considering how much sex I had had the previous day, but nonetheless I had a tent in my trousers.\n\nI rose from my chair and began walking into the house. \"Where are you going?\" Tina asked.\n\n\"Upstairs\" was my one word reply.\n\nThe three lovely ladies all looked at each other, smiled, and followed me to the master bedroom.\n\nWithout going into detail, the rest of the afternoon was a blur of tangled limbs, exploring digits, lapping and probing tongues, and plenty of cock and dildo stuffed holes. We played into the night before falling asleep, a happy, closely knit family.\n\nThe next day Trish, Tina and I had to return to the regular grind of nine to five jobs. Following our weekend of incredibly fulfilling and emotional sex, it was difficult to settle back into the everyday routine. Well, it was for me anyway. I was constantly distracted by the memories of the erotic scenes I had witnessed and acts I had participated in. I was hoping to get home and rekindle some of the weekend's activities.\n\nWhen I did get home, I found the house empty. Ellen had written a note that Trish and Tina were going to the mall after work and not to expect them back before 9:00pm.\n\nI took the opportunity to go upstairs and change into some shorts before going outside and having a cigar. Once outside, I saw the house wasn't empty. Ellen was reclined on one of the chaise lounges soaking up some sun.\n\nShe was nude.\n\nApparently she had not noticed my presence until I lit my cigar. Once she smelled the fragrant smoke she turned her head slightly toward me and greeted me with a \"Hi daddy!\" through her beaming smile.\n\n\"Hi yourself sugar. Don't you think maybe you should have some clothes on out here?\"\n\n\"Nah. We were naked out here all day yesterday, and besides, you don't want me to have tan lines, do you daddy?\"\n\n\"I actually find tan lines to be very sexy. But I also admit that an all-over tan is pretty damn sexy too.\"\n\n\"You would like a woman with no tan daddy. You just like their naked bodies!\"\n\n\"True, very true!\"\n\n\"Daddy, I miss Whitney, and I'm bored.\"\n\n\"Honey! You have only been out of school for three days, and Whitney has only been gone for 24 hours! You're bored already? Don't you have any other friends you can invite over or do something with?\"\n\n\"I suppose I do. They're just not as fun as Whitney, that's all.\"\n\n\"Ellen sweetie, you really need to find more friends your own age. Whitney is married to your brother now, and at some point they are going to leave and start their own life and family.\"\n\n\"No they aren't. We've already discussed it and we are all staying here forever, even when Mark is done with the Marines. Whitney and I love you and our moms too much to ever give you up.\"\n\n\"That's very sweet baby girl, but it's not healthy. Someday you're going to want a family of your own too, and you'll need to find your soul-mate to be your husband.\"\n\n\"Soul-mate? Singular? Not a chance. I already have five soul-mates and I'm not going to have any fewer.\"\n\n\"OK sugar. We can talk more about this later.\"\n\n\"Thanks daddy. Oh, Daddy?\" she asked as she got off the lounge chair and walked toward the pool, swinging her sexy ass as she walked.\n\n\"Yes sugar?\"\n\n\"Come make love to me in the pool.\"\n\n~~~~\n\nThe rest of the week slowly got better. Ellen began spending more time with some friends, and Trish, Tina and I got back into our previous routine.\n\nOn Friday, Whitney and Mark returned from their honeymoon looking refreshed and still very happy and very much in love. They spent the night together in Trish's bedroom. We didn't hear anything all night, and I would like to think they spent their last night together telling each other how much they were loved, reassuring each other that everything would be fine, and how much they were looking forward to spending their lives together.\n\nWhy do I think that? Because that's what I would be doing.\n\nThe next day Mark left for boot camp, twelve weeks of intensive physical and mental conditioning. One of the recruiters showed up in a government issue Chevy Malibu to take him to the airport. It was an emotional sendoff. It was easier for Tina and me as we had done the same thing with John. But Trish, Whitney, and Ellen took it pretty hard. \"It's only three months\" I reminded them \"and then he'll be home for a while. Contingency plans are in place. We can, and will, endure this hardship, and we will be stronger for it!\"\n\nMy short combat general-like speech halted the tears and brought smiles to their faces.\n\n\"OK! You're right!\" they agreed.\n\nThat night we lay in bed. Trish and Tina were engaged in some gentle touching and kissing while I sat up reading an industry publication. There was a knock on the door just before it opened and Whitney poked her head in. \"Daddy?\" she asked.\n\n\"Yes, sweetheart?\" I inquired, causing the panty-less T-shirt clad young woman to walk into the room.\n\n\"Daddy, I know it's only been a day but... I need a surrogate. Can I borrow you?\" She lowered her right hand to her crotch and rubbed her pussy.\n\nI glanced over at my wives. They were all smiles, seeing the humor in how fast this blonde vixen needed a cock fix. Trish and Tina both smiled, cocked their heads and shrugged their shoulders. \"Go ahead stud. The girl needs a surrogate, and you made a promise!\" Tina said. She then turned back to Trish and said, \"Now, where were we?\" before kissing our wife lustfully.\n\nI rolled out of bed and followed Whitney downstairs and into the room she had shared with Mark. Laying on the bed was my daughter Ellen, a harnessed strap-on fixed to her lower body.\n\n\"I thought Whit needed a surrogate?\"\n\n\"Well daddy,\" Whitney started \"That was just a ruse. Tonight Ellen wants a replay of the other day, except she wants to fuck you while you eat me.\"\n\n\"On your knees, daddy.\" Ellen commanded.\n\nI complied.\n\n~~~~\n\nAnd so it went for the next twelve weeks. The women enthusiastically cultivated my slutty submissive side. Trish, Tina and I were frequently intimate, with Whitney and/or Ellen joining us at times. One did not have to look far for a willing partner when the \"need\" arose, and if any one of us was unfulfilled, it was our own damn fault.\n\n~~~~\n\nMark completed his basic training and flew home for ten days of leave before reporting to Camp Pendleton for SOI training.\n\nHis return was, of course, quite joyous. Even though Whitney's considerable sexual needs were met the entire time Mark was away, it did not take his new bride very long to whisk him away for an extended period of carnal debauchery.\n\nFor the most part, Mark and Whitney were inseparable for the week and a half he was home. Of course, the couple made time for us both in and out of the bedroom. The night before Mark left for California was an incestuous orgy of epic proportions.\n\nMark, Trish and Tina claimed the bed in the master bedroom while Whitney, Ellen and I took the bed in Trish's room. We decided it would be easier to swap partners if we were close, and being able to hear the expressions of pleasure would be an incredible turn on.\n\nWhitney and Ellen lay on either side of me, and we began our tryst lovingly kissing and caressing each other while my daughters stroked my cock, and I their beautiful bald pussies.\n\nWhitney was the first to express her desire and wantonly said \"I need your pussy, babe\". Ellen was quick to oblige, laying on her back allowing Whitney access to her proffered sex. I was surprised, yet thrilled, when Whitney assumed a 69 position with Ellen leaving her glorious ass exposed.\n\nAs quickly as I was physically able I was kneeling behind the sexy blonde, tongue probing her delectable ass while Ellen lapped at her prodigious pussy lips and turgid clit. My cock was as hard as college trigonometry and was dripping pre-cum on the sheets. When I heard \"Fuck me mom!\" from the other room I thought I was going to dump my load right then and there without any help from the girls.\n\n\"Put your cock in my ass daddy. Please fuck my ass! Please daddy!\" Whitney's plea brought me back to reality. Whitney spread her legs wider, giving both me and Ellen greater access to her charms. I pressed the engorged head of my cock against Whitney's lubricated little pucker and eased my way into her tight passage. I heard her moan into Ellen's gooey pussy as I bottomed out, my hips pressed firmly to her butt cheeks.\n\nI felt Ellen's petite hand grasp the base of my scrotum, and she gently squeezed and massaged my balls as I began sliding my root in and out of my daughter-in-law.\n\nBoth young women were moaning into each other's pussies as they munched on the other's muff without inhibition. Seeing my daughter eat another girl is an incredible sight, and when she began tightening her stomach, raising her hips into Whitney's mouth, I knew she was going to cum. Ellen had slipped two fingers into her sister-in-laws dewy snatch and was stroking her G-spot while lapping at her clit and I lovingly reamed her ass with my cock.\n\n\"YESYESYESYESYES!\" Whitney shrieked as she came all over Ellen's face, her clear ejaculate coating my thighs and Ellen's face, dripping off of us and soaking into the sheets. Whitney went back to the task of finishing Ellen while I continued to probe her womanly depths. Before long, Ellen's grip on my balls tightened, her legs squeezed Whitney's head, and her body contracted in the throes of a satisfying orgasm. I jabbed into Whitney a few more times before I could take no more and unleashed a torrent of hot white cum inside of my son's wife. As soon as I stopped pulsing in her rectum, Whitney slid forward slightly, releasing me from her cum drenched ass and sat straight up, her asshole directly over Ellen's mouth. Ellen didn't need to be told what to do and quickly began lapping my cum from her girlfriend.\n\nWhile the three of us were enjoying ourselves, on the king-sized bed in the other room Mark knelt between the spread legs of my shemale wife, sucking her delicious candy stick. Trish was playing with her tits, rolling the nipples between her fingers as her son made oral love to her. Tina was behind Mark, rimming him and stroking his hard, horny cock. She had already inserted her Real-Doe and was preparing Mark for her assault on his boy pussy.\n\nAs Tina slipped her silicone toy into her son's greedy ass, he moaned around the fleshy spear in his mouth. Tina lay on Mark's back, her full mammaries pressed into him and she reached around him to stroke his aching erection. Tina whispered \"I've wanted to do this for so long sweetie. I hope you enjoy mommy fucking you\" and began sawing her phallus into her son.\n\n\"Fuck me mom!\" Mark yelled before taking Trish's length back into his mouth and sucking her with all of his might. Tina's pistoning dildo had Mark moaning and groaning on the pretty shemale's sex as his ass was pleasured with the rigid veined shaft.\n\nThe taboo of the act coupled with the clitoral ridges and vibrating bulb in her vagina caused Tina to have a quick, powerful orgasm. She never stopped fucking Mark's ass or stroking his cock as she came. She felt Mark's penis become even harder and thicker in her hand. \"He's gonna cum Trish\" Tina whispered.\n\n\"Me too! Me tooooo! Unnngh!\" Trish replied, her girl-cock erupting in Mark's mouth. \"Suck my cock Mark! Ohhhhh FUCK!\" she cried.\n\nThe young Marine struggled to swallow the load of cum produced by the beauty in front of him. He was quickly overwhelmed by the erotic situation and physical stimulation he was receiving and soon reached his own powerful orgasm, his rich, fertile semen erupted from his cock. The initial volleys splashed against the bottom of his chin and the smooth cock and balls of his lover. As the squirts lessened in intensity, the remaining volleys fell harmlessly to the sheets below his writhing body.",
        "The three untangled from their coupling and repositioned to spoon and cuddle. Mark and Trish faced each other, their mouths and tongues engaged in a sensual kiss as they ground their pelvises and cocks together. Tina lay behind her son and slid her ever erect cock between the cheeks of his ass putting the perfect pleasurable pressure against his well fucked sphincter.\n\n\"Oh my God, that was so good. I love fucking you!\" Tina exclaimed.\n\n\"That was really hot mom! You're a natural when it comes to pleasing a man.\" Mark turned his head toward Tina and she devoured his mouth in a deep hungry kiss.\n\nTrish reached between her and Mark's bodies and began playing with his now limp member.\n\n\"Mmmm\" she hummed. \"Do you think maybe we can stiffen this up and get it inside me? You blew me so good I want to reward you with a good fuck. What do you think Marine? Got another round in ya?\"\n\n\"I will in a few minutes Aunt Trish. Sooner if you keep touching me like that\" Mark replied, his hands now massaging the breasts of the auburn haired woman in front of him. Completely out of character, Mark suddenly blurted \"You have very beautiful eyes Aunt Trish.\"\n\nSomewhat taken aback by his sudden confession, Trish gave Mark a shocked look and said \"Thank you! You've never noticed them before?\"\n\n\"Well, of course I've noticed them. I've just never appreciated them, until now.\"\n\nTrish wrapped her arms around the young man and fervently kissed him, filling his mouth with her eager tongue.\n\nTina kissed both of the lovers on the cheek. \"I'm going to go see what mischief our husband has been up to.\"\n\nTrish rolled Mark on his back and straddled his lower torso. Leaning forward and reaching between her legs she aimed Mark's hard cock at her waiting asshole.\n\nTina came into the room where Ellen, Whitney and I reclined on the bed, gently kissing, touching, and whispering to one another.\n\n\"Hi mom!\" Ellen chirped.\n\n\"Oh, hi mom.\" Whitney added.\n\n\"Are you enjoying yourselves?\" Tina asked with her hands on her slightly askew hips.\n\n\"Very much!\" Whitney answered.\n\n\"Mmm hmm!\" Ellen sang.\n\n\"Were they good girls baby?\" Tina directed toward me.\n\n\"If by 'good' you mean 'naughty', then they were very, very good girls\" I answered.\n\n\"If you'll excuse me for a minute, I want to see what my husband and your well hung wife are up to\" Whitney said before giving me, Ellen, and Tina a peck on the lips and prancing out of the bedroom.\n\n\"Mind if I take her place?\" Tina asked as she climbed onto the bed, not waiting for an answer. Tina embraced me, kissing me deeply. \"I love you Clark\" she confessed as she peered into my eyes. \"I love our family, I love what we share in this house. I love everything about our lives.\"\n\nEllen was beaming at her mom's words.\n\n\"I love you too. And I love where we are. I wouldn't change a thing\" I replied.\n\n\"I'd only change one thing\" Ellen offered.\n\n\"What's that sweetie?\" Tina asked.\n\n\"Instead of talking, I think we should be fucking.\"\n\nTina and I laughed and looked at each other. \"We've created a monster\" I said.\n\n\"Yes we have! But I happen to agree with her\" Tina replied before her hand joined her daughters on my inflating cock. \"Ellen honey, would you mind sitting on your daddy's face while I ride his big cock until I cum?\"\n\nEllen, like only a lithe young woman could do, swung her leg over me and settled her crotch over my waiting mouth. Tina straddled my hips and lowered her wet pussy onto my manhood. I slid easily into the mature woman's slippery slit and when her hips met mine she began grinding and gyrating on my cock.\n\n\"Can I have him next mom?\" Ellen asked.\n\n\"Of course you can!\" Tina answered before the two embraced, their mouths instinctively finding each other in a deep, loving kiss. Ellen began working her hips back and forth causing her gash to slide over my tongue, lips and chin. Tina was rolling and gyrating her hips against me, rubbing her clit against my pubic bone. I heard gentle mewing and saliva exchanging smacking as my daughter and her mom made love to each other as they made love to me.\n\nWhen Whitney entered the master bedroom she was not at all surprised to see Trish straddling her husband and slowly lowering her feminine body onto Marks's cock. Trish smiled at Whitney as Mark's cock made it's way into Trish's pussy. \"I couldn't wait. I needed him inside of me\" Trish confessed before lightly biting her lower lip in that saucy way that had become her trademark. Whitney didn't say a word, instead she lowered her face to Trish's hardening cock and engulfed it in her mouth while she was still climbing onto the bed. It was Whitney's way of saying \"No problem\".\n\n\"I love the way you kiss me mom\" Ellen panted as she took a breather. \"I love the way you touch my body. I love having you as a lover!\" she said before returning to my wife's lips. I don't know if Tina intended to respond, but obviously couldn't with Ellen's tongue in her mouth.\n\nAs Tina worked her pussy on my cock, I could feel her wetness and arousal increase. A stream of her sweet dew rolled down the base of my cock and over my balls, leaving behind a cool reminder of her arousal.\n\nEllen's hands had been busy working her mom's breasts and nipples. Ellen lowered her head to the ample bosom before her and nibbled the fleshy peaks while I nibbled and licked her fleshy petals and stamen. Ellen slowed the rocking of her hips forcing me to focus on licking her clit. I grasped her luscious globes in my hands, pulling her firm ass cheeks apart and giving my fingers access to her puckered hole. I wetted my middle finger with the sweet nectar of her gooey pussy and rubbed my digit on her starburst. My touching and rubbing of her tender anal flesh caused her slit to leak even more and her asshole to relax, welcoming the intruding finger.\n\nWith just the tip of my finger in her ass, Ellen began to pant and quake as she continued to mouth Tina's breasts and nipples. Ellen's hips now jerked involuntarily as she neared her climax. The tip of my finger popped in and out of her anus as I flicked at her swollen clit with my tongue. \"Oooooooh FUCK!\" she exclaimed as she clung to her mother with both arms. \"You're making me gush daddy!\" she said as again I was treated to tasty globs of her thick, creamy pussy juice. I licked and sucked her honey from her spasming pussy until her sensitive sex parts could take no more. \"You have to stop dad. Please stop! Too sensitive!\" she said. I could never get enough of this beautiful woman and refused to stop. In frustration Ellen climbed off of my face, creating an insurmountable distance between us.\n\nIn the other room, Trish was busy impaling herself on Mark's swollen member as Whitney fervently sucked the sensual shemale's clit. Trish was palming her own breasts as she surveyed the incredibly horny scene from her perch on top of Mark. Two fingers of Mark's left hand were busy exploring his wife's wet hole, curling to dance on the woman's sensitive G-spot, his thumb flicking at her prominent clit.\n\nWith the young Marine's cock in her ass, and her own cock enveloped in the wet, suctioning mouth of the Marine's beautiful wife, Trish went over the edge of pleasure and pumped her salty load into Whitney's mouth. Whitney swallowed hard, and soon was cumming herself, her ejaculate splashing on her husband's hand and the bed. Mark followed them. Trish's gripping rectum squeezing him as she came and the thrill he got from making his wife squirt triggered his release, coating Trish's bowels with his thick syrup.\n\nAfter recovering from their exertion, Trish, Whitney and Mark collapsed in a pile of sweaty flesh, kissing and whispering their appreciation and affection to one another.\n\nAfter giving each of the two young lovers an emotional kiss, Trish said \"I love you both so much and I would really like to stay, but you two need to be alone for the rest of the night.\" before climbing off the big bed and walking to the other room.\n\nWithout our daughter on my face, Tina fell forward, her arms on either side of my neck and her alarmingly erect nipples dragging across my chest. \"Give it to me!\" she demanded. My hands each grasped a handful of ass flesh to stabilize her as I began to fuck my cock up into her compliant body. I dipped my right hand down to the union of our genitals and slipped my middle finger into her alongside my cock. I moved my hand back and slipped the now lubricated appendage into her sexy smooth asshole. She moaned in appreciation at the intrusion. \"Like daughter like mother!\" I thought to myself.\n\nTina was wild now, thrusting her hips back against the duo of my members probing her holes. \"Fuck me Clark! Fuck me harder! So close so close so clo-o-o!\" she choked out before her climax enveloped her, copious amounts of her honey flowed from well fucked hole. I kept on pumping both probes into her, alternating the motions of my cock and finger. As I was about to release my essence into her she came for a second time. Her sphincter clenched around my finger and her vaginal walls squeezed my cock triggering my second ejaculation of the night.\n\nAs soon as I was drained, Ellen practically pushed Tina off of me and mounted my still hard and very sensitive penis.\n\n\"I've needed this inside of me all night\" she said and got busy bouncing up and down on my erection.\n\n\"I just came honey. I don't know how long I can keep it up.\"\n\nJust then Tina swung her leg over my face and placed her cum dripping pussy above my mouth and out of reach of my tongue. She looked intently between her hanging tits as rivulets of my recent deposit dribbled from her aroused and engorged labia and dripped into my waiting mouth. She then sat up, lowering her quim to my hungry lips so I could drink from her overflowing well. \"That'll keep him hard\" she said to Ellen before the two women engaged in a lustful tongue war before embracing each other and kissing in a not so parent child way.\n\nAnd Tina was right. I stayed hard enough, long enough for Ellen to get off again, but there was no way I was going to cum again so soon. I made Ellen cum, and that's all that mattered.\n\nJust as we finished our coupling, Trish entered the room and joined us on the bed. She kissed each one of us, telling us how much she loved us.\n\nWe fell asleep shortly after rearranging our bodies on the bed so we could all share in the closeness and intimacy of the moment.\n\nThe next morning we loaded Mark's gear into the car and said our goodbyes. Whitney was, of course, devastated that her husband would be gone for two more months after having a week and a half of intimacy with him. He reassured her that everything would be fine, and that she would be in good hands while he was gone. \"I love you with all that I am, Whit\" he said before taking his place in the passenger seat. His eyes never left hers.\n\nI drove him to the airport for his flight to California and his two month SOI training. He would be back again for a couple of weeks before leaving again for where ever his orders took him. Our goodbye at the airport was tough for both of us. I was proud of my son and what he had chosen to do, but I also felt bad that he had to leave his wife yet again.\n\nWe hugged each other close, tears rolling down my cheeks.\n\n\"Make us proud, Marine\" I encouraged.\n\n\"I will dad. Y'all take care of Whitney.\"\n\n\"We will.\"\n\nMy son turned to walk away.\n\n\"Hey Mark?\"\n\n\"Yeah dad?\"\n\n\"I love you son.\"\n\n\"I love you too.\"\n\nAnd then he was gone, disappearing into the sea of humanity that is today's ridiculous airport security.\n\nWhen I returned home, I found my four beautiful women freshly showered and in their pajamas on the king sized bed in the master bedroom. They were cuddling and consoling Whitney, reassuring her that she was truly loved and cared for.\n\nI'm no genius, but it didn't take a rocket scientist to realize that I was not needed in that place at that time. I gave each of the women a kiss and told each of them they were loved beyond measure. I then retreated to the clearing with a cigar and a bourbon, leaving my lovers in each other's arms to bond and to cement the beautiful relationships they had developed."
    ],
    "authorname": "npanxx",
    "tags": [
        "shemale",
        "tranny",
        "mom",
        "dad",
        "son",
        "daughter",
        "incest",
        "anal",
        "strapon"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-journey-ch-09"
}