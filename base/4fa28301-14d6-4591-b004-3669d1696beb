{
    "title": "Alpha Killer Ch. 11-15",
    "pages": [
        "Randall Meechum's POV \n\n\"Are you going to kiss her or kill her when you find her, Randall?\" \n\nI looked over and glared at my brother Bobby, who was looking out at the North Texas landscape flying by as we went north in Interstate 35. \"Not funny, Bobby. This woman has my head spinning.\" \n\n\"You always did have to do things the hard way. Leaving for the University of Texas, going to law school, joining the FBI. You've never accepted anything because of your heritage, you insisted on doing things on your own, to make your own name. You could have stayed with the Pack, taken a job on the ranch, and had my life, but Noooo... you have to do things on your own.\" \n\n\"I'm kid eight of ten, Bobby. You at least have youngest child syndrome. By the time I grew up, my older brothers and sisters had already ruined every experience I hoped to have. I couldn't have any parties after Dusty's buddies broke into Dad's liquor cabinet and threw up on his office carpet. I had to buy my own car because they'd already had six accidents before I got my permit. All the teachers in EVERY grade, as you well know, looked at me with the knowledge of what the seven before me had done in their classes.\" \n\n\"So what? I got all that PLUS what you did, and I got stuck with the Baby Princess who got whatever she wanted.\" He just wasn't going to let me get away with it. \n\n\"Well, Mommy DID love you best. One dimpled-cheek grin, and you got the last piece of pie, you little shit.\" \n\nHe busted out laughing. \"Damn, I knew it would come down to food with you.\" He looked back out the window. \"I'm glad Dad asked me to go keep an eye on you, I miss having you around.\" \n\n\"I think Dad was hoping you'd find a mate and get out of his house,\" I teased. \"If he wants to watch a horror film, he pulls up 'Failure to Launch.'\" \n\n\"Mom likes me there.\" He fiddled with the satellite receiver, looking for a better song. \"I just hope the woman Luna has for me is a no-drama woman. Good looking, great in the sack, loves family and comes from an allied Pack. I don't think I could handle a tenth of the difficulties you are going to have.\" \n\n\"I can't give her up without looking in her eyes and understanding who she is,\" I said. \"If she's beyond salvage, I'll do what I have to do. Like I told Dad, I'm not letting the Council torture her, and I'm not turning her over to the human authorities. You should have seen that place, Bobby. It turned my stomach to think of those poor girls being forced to live like that. If that was her sister in there, I don't have a problem with what she did. Hell, I would do the same thing if it was Bonnie who had been taken.\" \n\n\"One big difference I can think of,\" Bobby said. I looked over at him. \"You're nowhere close to the shooter Talia is. Three for three on head shots?\" I snorted. \"Don't even try to argue with me, I've seen you shoot.\" \n\n\"The professional in me admires her skills as much as the wolf in me is sad she had to develop them,\" I said. \"She's been through a lot.\" \n\n\"I hope it works out, Randall. You need a woman who can keep you on your toes.\" Unable to find a good song, he turned it off then leaned back in the seat. \"Dad sent us some information on the LaCrosse Pack and the Tomah Pack. How about I read it, then we quiz each other?\" \n\n\"May as well, it's a long, boring drive ahead of us.\" The more I learned of the LaCrosse Pack and how Talia's remaining family had behaved, the better I felt. Her grandfather still lived with the Pack, her grandmother having passed away a year after Talia was banished. Alpha Clark Grissom, the older brother of Talia's mother, and his mate Teri were respected Alphas. They were even rumored to have taken in Talia's friend Erica after she was kicked out of the Tomah pack for treason. \n\nThe Tomah pack just made me angry. I was convinced Alpha Todd was either responsible or complicit with the disappearance of Tania Stillwater, and I suspected him in the deaths of their parents. Pack politics and the Council had ensured any investigation was cursory, the deaths ruled an accident, the disappearance just a teen running away. \n\nIt was time that someone not involved did a real investigation, and I didn't care what the Council or the Packs thought about it. I had an active case where the Alpha Killer was implicated, and I was going to find out what happened to her. \n\nWe did tanks, alternating driving and sleeping so we could arrive late that night. I called the Alphas and told them we were close, and they sent a warrior out to meet us and lead us in. It was almost midnight, so by the time we paid our respects to the Alphas, we were taken to our rooms. \n\nThe next morning, we joined the Pack for breakfast. It wasn't a huge Pack, maybe sixty people, but they were close like a big family would be. The food was good, and the Alphas introduced us and said we would be visiting for a time as we looked for our mates. \n\nI could tell Bobby was disappointed he didn't sniff his mate out when we entered the room, but that didn't stop the she-wolves from coming up and saying hello. \"Maybe my sister and I can show you around the territory,\" a curvy young woman said after confirming we weren't mates. \n\n\"I'm sorry, I have to meet with the Alphas and their leadership, my Alpha has some things he wants me to bring to their attention,\" I politely declined. \n\n\"Renee, Rachel, show them around this morning but have them at my conference room by ten,\" Alpha Clark said. \"I'm sorry, but I can't get my senior leadership together any sooner because of previous engagements.\" \n\n\"Of course, Alphas. We will see you at ten.\" I asked him last night to meet with specific persons, and he agreed to have them there. Their land was much different than ours, but it was nice. They had land both in the backwaters of the Mississippi and in the forested hills and bluffs south of the small town. \"How hard is it to run with all these people around,\" I asked as we drove over the railroad tracks towards the islands that divided the backwaters below the dam. \n\n\"We usually avoid the river bottoms, too many boaters around in the summer. We normally run along the bluffs or in the woods at the base.\" My Jeep was having fun on the dirt trails, we even got some offroad action in. All too soon it was time to return to the Pack House. \n\nI walked into the room, Bobby behind me. I was shown to the base of the table, with my laptop in hand I asked if I could hook up to their 80\" LED screen. \"That's a little much for a mate hunt call, isn't it,\" Luna Teri said. She sat next to her mate at the head of the table. The Beta pair, Brad and Lori, and the Gamma pair, Michael and Sally, sat along the side opposite the television. On the other side, next to the Alpha, was Talia's grandfather. Bobby sat behind me on one of the chairs along the wall. \n\n\"I apologize for not being honest about my reasons for the visit, Luna, but I didn't want to alert anyone that my presence here was anything but a social call.\" I pulled my identification out of my pocket and handed it to the Gamma. He opened my FBI identification, his eyes got wide, then he passed it down. \"I've been in the FBI for four years now. Last week, the human trafficking task force I am assigned to was called in after a multiple murder in a seedy hotel in Fort Worth.\" \n\n\"Nasty business, that human trafficking,\" Beta Brad said. \"You wouldn't think it would be a problem this far from the cities, but they lure young girls in with drugs and attention.\" \n\n\"True, and sometimes it is worse. The killer took out the couple who was running the prostitution ring, and two of the johns. When I arrived, I caught a scent, and it was the killer. She was a werewolf.\" \n\n\"She? Murdering humans?\" \n\nI pulled up the file on my laptop and showed some of the crime scene photos. Their eyes got wide when they saw Dirk Carlson leaning against the wall with his throat torn out. \"Damn,\" Gamma Michael said. \"Shifted claws or hybrid form. So was this some rogue she-wolf?\" It wasn't common to have female rogues, they didn't last long without protection. \n\n\"Not just any she-wolf,\" I said. I flipped to the surveillance photo the Council had sent out. \"The Alpha Killer herself. She didn't run either, she had a room on the floor below; one of the officers interviewed her and recognized her photo. She had checked in the morning before and was in her room when the police arrived. That's why no one saw a killer flee.\" \n\n\"You're sure it was her?\" \n\n\"Yes, Alpha, I smelled her on the victim and followed her scent to the room. If that wasn't enough, she went three for three on head shots in the hallway. She was gone before I arrived, and the authorities don't suspect her.\" \n\nThe Beta female looked at me. \"You didn't tell them?\" \n\n\"No. I can't divulge my werewolf senses, and I don't want to have her arrested because Talia Stillwater is my mate.\" \n\nThe room exploded in noise, and half of them got up from their chairs. It took the Alpha growling to calm things down again. \"The Alpha Killer is your mate?\" \n\n\"Yes, Alpha. When I realized who she was, I asked my Father to obtain the Council files on her. The first tragedy to befall her was the kidnapping of her younger sister,\" I said. \n\n\"The Council and her Alpha said she ran off with someone,\" her grandfather said. \n\n\"As an investigator, I need to know the truth, and that is why I am here. I intend to investigate the kidnapping and the deaths of her parents, because these events led to her banishment and her new career. I need to know if my mate is a heartless criminal or a wronged female driven by vengeance.\" \n\nThere was silence for a moment. \"Tania was our niece, and there hasn't been a body, a sighting or a communication from her since that day,\" the Luna said. \"Her disappearance haunts me to this day.\" \n\n\"Do you have anything of hers with her scent still on it?\" \n\n\"Yes,\" the Luna said. \"I'll be right back.\" \n\nAs she left, the Alpha turned to me with anger in his eyes. \"Six months after my nieces were gone from the Tomah Pack, I got a call from Alpha Todd. He said he needed the space and had his people pack up all the personal effects of Tania, Talia and the previous Alphas. If I didn't want them, he was going to give them to Goodwill.\" His hands were turning white as he gripped the edge of the table. \"We sent a truck and had them brought here, they are all in storage in case they return.\" \n\n\"Was there any evidence to suggest she went voluntarily?\" \n\n\"Never, but there wasn't evidence she was forced either.\" \n\nThe Luna came back into the room, handing me a blouse in a plastic bag. When I opened it, the scent was still clear, and it confirmed my suspicions. I closed it back up and handed it back to my brother as she walked back to her seat. He took one sniff and ran out of the room with it. \"One of the things I found curious about the killings was that Talia went directly to a specific room where she killed a man who was with a woman and brought her out. The woman she rescued was young and blonde and according to interviews with the other girls, had been a sex slave for years.\" There were gasps and some of the ladies started to cry. \"It was her, Tania Stillwater. I recognize the scent.\" \n\n\"Her sister found her?\" The Luna was breaking down, her mate pulling her into his lap and comforting her. \n\n\"Yes. They're gone now, and I don't know if she'll contact you, but you are still Tania's family. I have to warn you, she's essentially human now. Whoever took her, killed her wolf too.\" It was a lot to take in after four years of not knowing anything. It didn't surprise me when the Luna ran for a garbage can and threw up. \n\n\"Anything else,\" the Alpha asked. \n\n\"If she comes here, she's going to need professional help. In addition to how she was used, she and the others were hooked on drugs to make them easier to control.\" \n\n\"We will take care of Tania if she comes to us, or if you find her,\" Alpha Clark promised. \"Talia too, no matter what the Council says.\" He looked at the others, who nodded. \"We will get them back, we will find those responsible and they will feel our teeth.\" \n\nAll the wolves in the room agreed, their family had been harmed and the wolves wanted blood. \"Randall, is your brother all right,\" the Luna asked. \n\n\"Bobby, where are you?\" \n\n\"Running it off, bro. I can't believe it. Luna gave me a mate like yours.\" \n\n\"What do you mean?\" \n\n\"That smell. Tania Stillwater is my mate.\" \n\nCh. 12 \n\nRandall Meechum's POV \n\nLaCrosse Pack House \n\nTania, the poor child who had been taken captive at fourteen and suffered four years of unspeakable hell, was my little brother's mate. \n\nFuck. \n\nHe had to come back here, we needed to talk. \"Come back here, we need to tell them about this and I'm not going to do it.\" I looked over at the room. \"Bobby went for a run. His wolf gets upset when we talk about what happened and he needed to let it out.\" \n\nAlpha Clark stood up, his wolf was forward as well. \"I think it would be good if all our wolves got out for a few minutes. Please, join me for a short run. We have much more to talk about, and my wolf is making it difficult because he just wants to run to Tomah and kill that bastard right now.\" I followed him and his leadership out of the room, and we pulled off our clothes and stacked them on the porch before shifting. My wolf shook out his fur, he was silver-grey with a black saddle and muzzle. Bobby ran up as I jumped off the porch, his wolf had more black coloration, but it was clear we were brothers. The Alphas took off for the woods, setting a fast pace. As guests, we ran in the middle behind the Alphas and Beta pair. We ran hard for about thirty minutes before we returned to the home and dressed again. \n\nWe all felt better as we returned to the conference room and closed the door. \"What do you need to find out what happened, Randall,\" the Alpha asked as we sat down. \n\n\"I want to interview as many people as I can who were around Tania at that time. I also want to interview each of you about what you remember about those days surrounding her disappearance through Talia's exile. Essentially, I'm treating this like a cold case, taking a fresh look at all the evidence and re-interviewing all the witnesses to see if I can find anything new.\" \n\n\"You'll have our full cooperation,\" the Alpha said. \"Beta Lori, please set him up with a room and clear your schedule, you'll be working with him while he is here. I need you to ensure he gets access to any Pack members he needs.\" \n\n\"If I may, Alphas,\" I interrupted. \"The last thing I need is for word to get out on what I am investigating. I would request that all of those who are interviewed be given an Alpha order not to talk about it, and we have a cover story for what I am doing.\" \n\n\"We can do that. Any ideas for a cover story?\" \n\n\"It's not unheard of for Packs to arrange for exchanges of people, you can be here to determine if such an exchange would be profitable between our Packs,\" Luna Teri said. \n\n\"That would work,\" I said. \"Especially if it was six months long and we came up from May to October, and your wolves came down from November to April. It would be easier to get volunteers in each Pack that way. We could be interviewing young people and leadership on what they would like to see in such an exchange.\" \n\n\"I'll handle that part,\" Bobby said. \"I'll make it a real project, and once Randall is done with them I will take over. That way if they are asked what we talked about, they can answer honestly.\" \n\nThere were a few more things we talked through, and I handed the Alpha a list of the people I already knew I wanted to interview. \"If you know anyone else who would be of help, please add them,\" I said. \n\nHe looked at the list. \"Michelle joined my Pack a few months after Todd took over along with her family, she is going to the University of Wisconsin-Lacrosse now. Everyone else works on Pack lands, so they won't be a problem, except Erica. She was outcast as a traitor, and we haven't seen...\" \n\nLuna Teri was glaring at him. \"They need to know,\" she said. \n\nThey carried on a conversation over the bond before he let out a long breath and looked at us again. \"Beta Brad will take you to see her while his mate works with Bobby to set up an office.\" \n\nI suspected they were helping her somehow, despite Council laws on those outcast as traitors, and I was glad for it. \"Was a missing-person report filed with human authorities?\" \n\n\"I filed one three days after she disappeared,\" her grandfather said. \"The detective came out and interviewed some people, but nothing ever came of it.\" \n\n\"That's curious,\" I said. \"Did they take DNA and fingerprint evidence as part of the investigation?\" \n\n\"I'm sure they did, why?\" \n\nI took a deep breath, this was deeper than I thought. \"When we ran Tania's fingerprints from the room she was in, they didn't come up in the FBI database. If a missing person report was filed, her DNA and fingerprints would set off all kinds of alarm bells.\" \n\n\"That FUCKER!\" Her grandfather figured it out first. \"He paid someone off!\" \n\n\"Or he swapped out the fingerprints and DNA with someone else,\" I said. \"This is good for me, I'll swing by the local Sheriff and find out about this case. I can say I'm following up on the missing woman from my Dallas case.\" \n\n\"What do you need from us, Randall,\" the Alpha said. \n\n\"Let me do my job and uncover evidence that can prove who did this. Only then can we capture and try the people responsible. If you go after Todd now, you could spark a war.\" \n\n\"It will be so,\" he said as he looked at his leadership. \"We don't do anything or say anything until he's had his chance.\" \n\nI had one more thing they needed to know, and it wasn't mine to say to I linked Bobby. \"Tell them who Tania is to you,\" I said. \"There is one more thing you should be aware of.\" I turned and looked back at Bobby. \n\n\"I apologize for running off earlier, but I was more than a little shocked. When I scented Tania's clothing, I recognized her as my mate.\" \n\n\"Oh Selene,\" Luna Teri said before breaking into a wide smile. \"Oh my, the Goddess has been busy. Two brothers mated to two sisters.\" \n\nBobby grinned, thrilled to know who his mate was. \"Yes, I am certain of it. I would humbly ask to be allowed to stay here, because if Tania returns to a Pack it will be here with her remaining family. I want to be here for her if she shows up.\" \n\n\"She's human,\" Beta Brad said. \"Your brother confirmed it in Fort Worth. You recognized the wolf in her scent from when she still had one, will she still be your mate without a wolf?\" \n\n\"My wolf does not care,\" he said. \"He has recognized her, he wants her, and he wants blood on his teeth as well for what happened to her. If she cannot fight for her revenge, he will do it for her.\" \n\n\"I will have to speak to your Alpha,\" Clark said. \"You should talk to him first.\" \n\n\"I am calling him as soon as we are done here,\" I said. \n\nLuna Teri looked at the clock. \"Lunch is in ten minutes, you should join us there. We will let the Pack know about your cover story. I think everything else, including your mates, should stay quiet.\" Lunch was a quiet affair, but the potential for an exchange to spend winter in Texas was well received. I'd told my father about it in our short conversation, and he could see a few Texas pack members wanting to escape the summer heat to go to Wisconsin. He'd been shocked to hear about Bobby's mate, and it made my own investigation even more important to my Pack. \n\nAfter the meal, Brad and I got in his pickup and drove to the southern edge of the territory, where a small cabin overlooked the river valley. The cabin was surrounded by gardens and greenhouses, and the scents of herbs and flowers filled the air. A young woman appeared at the door, her beauty marred by a scarred \"T\" on her left cheek. \"Erica, this is Randall Meechum of the Sulphur River Pack in Texas. The Alphas would ask that you answer some of his questions.\" ",
        "\"Of course, Beta. Pleased to meet you, Mr. Meechum. Please come in.\" \n\n\"Thank you. Call me Randall, please. It's an honor to meet you, Erica.\" I followed her into the cozy cabin, and as she walked in front of me I could see the crisscross pattern of whip scars on her back and shoulders. \n\nShe must have felt me staring. \"They don't bother me, Randall. I don't regret a one of them, and this Pack has accepted and protected me.\" She had us sit on her couch, then brought over a pitcher of lemonade and some glasses. The windows were open, letting the summer breeze through. \"No air conditioning here, it's off-the-grid power only,\" she said. \n\n\"I'm used to worse humidity in Texas,\" I said as I accepted a glass. \"You need to know a few things before we start, so you know why you can trust me,\" I said. I explained about my job, the murder investigation, and the discovery that Talia was my mate and Tania was my younger brother's mate. \n\n\"Wow,\" she said. \"Talia rescued her.\" She sat back in her chair, trying to process it all. \"What do you need?\" \n\n\"I don't know how to track down Talia, but I'm trying to figure out what really happened with Tania and their parents. I have my suspicions.\" \n\n\"You think Beta Todd was behind it all.\" I nodded. \"Talia didn't trust him, she thought something was wrong and she didn't want to mate him ever.\" She went through everything, from the day Tania disappeared to the Alpha challenge that resulted in Talia's exile. \n\n\"Why did you help her when the Alpha was clear about how it was forbidden?\" \n\n\"Talia was getting no help from anyone. The Pack didn't back her claim to Alpha, the Council dismissed her as a girl, and she didn't deserve her fate. All I wanted to do was to give her clothing and money so she could get away and make a life. She was my best friend, and I had to help.\" \n\n\"You're a loyal wolf,\" I said. \n\n\"Michelle was too, but her parents would have suffered if she did it. My family was gone, so I took the risk and lost.\" She traced the scar on her cheek. \"The Alphas collected me from the woods after I was cast out and brought me to their Pack. The healer used a cream to remove as much of the silver from the wounds as possible, but it was only enough to reduce the scarring from how bad it could have been. I stay here mostly, raising my plants and joining the Pack when there are no guests.\" \n\n\"Did the police talk to you?\" \n\n\"A detective talked to me and a few other girls who were at the beach, before Talia returned. We didn't know anything. She did a cool backflip off the rope swing, went back to her towel and we never saw her again.\" \n\n\"Did you follow her scent?\" \n\n\"Yes, up to the road, then we lost her. A bunch of us were searching for where it went when Beta Todd showed up in his Suburban. He shifted to wolf form and tracked her to the boundary line where her scent disappeared.\" \n\n\"Wait, none of you could trail her but he did?\" \n\nShe nodded. \"We could smell her at the border, there were some other wolves that weren't Pack there. We were too young to leave the Pack lands and search.\" \n\n\"Do you think Beta Todd could taken Tania and handed her over?\" \n\n\"Maybe. Talia suspected him but had no evidence.\" She finished her lemonade and set it down. \"Would you like another glass?\" \n\n\"No, thank you. Did you ever see Talia again after she was expelled from the Pack?\" \n\n\"No, never,\" she said, but her heartrate picked up and she was looking out the window, not at me. \n\n\"Try again, this time with the truth.\" \n\n\"I am telling you the truth.\" She was really panicking now. \n\n\"Tell me now, or I bring the Alphas in and we get to the bottom of it officially,\" I said. \n\n\"NO!\" She sank back into her chair. \"I promised never to tell anyone, please don't make me.\" She was begging me with her eyes. \n\n\"I will not tell anyone, but I need to know everything I can about what happened with my mate in the past four years. Please.\" \n\nShe let out a sigh and looked at her hands. \"The summer after she disappeared, Fourth of July weekend,\" she said. \"I wasn't leaving my gardens, there were humans everywhere on the river and the Pack had guests, so I had to stay away. I was sitting on my deck, watching the sun set over the bluffs, when I looked over and she was standing in the treeline. She asked me not to say anything, that no one could ever know she had shown up. I agreed, of course, I was beyond thrilled to see her again. All kinds of things had been going through my mind, wondering if my sacrifice was worth anything in the end.\" \n\n\"How did she look?\" \n\n\"She'd grown, and she looked stronger and more dangerous. Her scent was off.\" \n\n\"How?\" \n\n\"I don't really know, her base scent was there, her wolf, but something else. I blamed it on being out of the Pack because she wasn't marked or mated, I checked that.\" \n\n\"What did she say to you?\" \n\n\"She wanted to know what I knew about Tania's disappearance. She couldn't risk going to the Tomah Pack, and she had picked up my scent at the border and followed it in. We hugged, she thanked me endlessly and said how sorry she was for what happened to me afterwards.\" She started to cry. \"I didn't care. I told her everything I knew, and she gave me a phone number to call her if I learned anything about Tania that could help her find her.\" She got up and went to her desk, copying a number onto a Post-it Note. \"She said it wasn't a direct number, but I could leave a message and it would get to her.\" \n\n\"Did she say anything else that could help me?\" \n\n\"She said she had taken a blood vow under the full moon to avenge her sister.\" A blood vow under the moon's eye was sacred, it meant nothing else would be done until the vow was fulfilled. No Pack, Alpha, Mate or Family could stand in the way. \"She found people who were helping her train, and that when she was strong enough, she would find her and destroy those who took her. Her eyes were distant, like she was dead, it was unnerving.\" \n\n\"Did she say anything about why she was in Wisconsin again?\" \n\n\"She was given a job.\" I thought about it; on July 10<sup>th</sup>, the Alpha of a Pack in the Upper Peninsula of Michigan disappeared. His body was found four days later in neutral territory by his Pack. \n\nAn ace and king of spades were stuck in his mouth. \n\nCh. 13 \n\nRandall Meechum's POV \n\nI spent the next two days interviewing people on the list, slowly building the picture of what happened that day. Michelle was a big help, not so much that she provided any new information, but she was still friends with people in the Tomah Pack and got them to agree to meet her off Pack lands. The excuse was mountain biking on the trails near Sparta, and that was why I was taking a borrowed bike off the borrowed rack on the back of my Jeep. \n\nBobby had stayed behind, so I put on my gear and followed Michelle on the trail from the parking lot. We rode about five miles in until we found an overlook on the bluff, giving a great view of the rolling terrain around us. I heard some activity on the trail as we stood by the railing before the cliff, and a few minutes later two women and one man, all werewolves, rode up and stopped by the benches. The male was nervous, putting himself between the girls and the unfamiliar wolf who looked older and dangerous. \"Hi guys,\" Michelle said. \"This is Special Agent Randall Meechum of the FBI, he's looking into Tania's disappearance.\" \n\n\"He's one of us,\" the man said. \n\n\"I am,\" I said. My Alpha dominance was making them all nervous, so I tried to hold it back. \"I'm the eighth child of the Sulphur River Pack Alphas. Since I don't have to worry about being an Alpha or Beta heir, I went my own way and joined the FBI.\" \n\nIt was enough to relax them. \"How can we help,\" the teen boy said. \n\n\"I'm looking at her disappearance like a cold case investigator, re-interviewing everyone and looking for new evidence. If you don't mind, I'd like to talk to you each alone. And please, don't talk about my investigation with anyone, I don't want to tip off whoever did this that I am looking.\" \n\n\"The trail loops around, I'll take two with me and you can talk to Marty first,\" Michelle said. He nodded, and she put her helmet on. \"We'll be back in twenty minutes. Come on, Christine, Anna, let's go have some fun.\" They took off downhill on their bikes and moments later they disappeared from view. \n\nA little less than an hour later, I had finished with Marty and Christine. There wasn't any new information, but they confirmed what Erica and Michelle had told me; nobody scented her between the road above the beach and the Pack border. They didn't recognize the scents of the wolves at the border, and no other scents were there other than Todd's. It was Anna who made the trip worth it. \"Did anything about Beta Todd's behavior when he arrived at the road strike you as weird?\" \n\n\"Yeah. The scent trail Todd followed wasn't there. I'm a tracker, I've got one of the best noses in the Pack, and I was searching for half an hour up at the road before the Beta was even called. That scent disappeared, and the only way that happens is if she got into a car and drove away. I checked for hundreds of yards in every direction before he arrived.\" \n\nI paused, this was the strongest evidence yet. Most wolves could scent, but trackers were gifted with super-sensitive noses and bodies built for endurance. Her five-foot-ten body was built for cross-country running, she could probably run for days without stopping in wolf form. \"Did you scent Tania anywhere else?\" \n\nShe nodded. \"Beta Todd sent those of us who had followed him to the border back to the Pack House. On the way back, I picked up her scent again in his Suburban.\" \n\n\"Did you say anything?\" \n\n\"I asked him that night, he said he had given her a ride that morning.\" \n\nHmmm. \"Thank you, Anna.\" \n\n\"Mr. Meechum?\" I looked in her eyes. \"I know our Alpha is involved, and he needs to go. Things have not been good since he took over, and I'm praying I find my mate and move away before it gets worse,\" she said. \n\n\"I'm not letting this go,\" I said. \n\n\"I hope not, because I think my Alpha had Tania's parents killed to take over.\" \n\nI raised my eyebrow, wondering what she was talking about. \"The State Patrol ruled it an accident, the report said they swerved to avoid something, probably a deer, and went off the road into a tree.\" \n\n\"It's just my impression, but Todd didn't seem too broken up by the loss of his Alphas. Plus, I was thinking, what better way to get the Alphas to rush back than to tell them their daughter is missing? Occum's Razor, the simplest answer is the correct one.\" \n\n\"How does that work? He'd have to be working with someone else.\" \n\n\"Yes, because she has to be off Pack lands. We panic, he calls our Alphas and they race home, right into the ambush. He takes out the entire Alpha family and takes over.\" \n\nShe had the mind of a cop. \"Talia wasn't with her parents, though.\" \n\n\"Only because she was out water skiing with some other kids, and her parents didn't wait for her. They told her grandparents to bring her later. If she hadn't been out there, she would have been in the car too.\" \n\nShe had been thinking about this for years, and she was right. She just couldn't prove it. \"I need to look into that accident as well,\" I said. \"You should go to school and study law enforcement, you'd make a hell of a detective,\" I said. \n\nShe blushed. \"I start classes at UW-LaCrosse this fall. Michelle is going to work with her Alpha to see if my family can transfer to her Pack; if not, I'm going to ask permission to stay with her family while I go to school. I haven't picked a major, though.\" \n\n\"Thank you, Anna. You've been very helpful.\" My head was spinning as I thought about what she said. Was Beta Todd devious and power-hungry enough to pull off something like this? He'd ruined the lives of two innocent girls and may have killed their parents, just for an Alpha position. Motive and opportunity, I said to myself. \n\nThe others showed up and Michelle said goodbye before we rode back to my Jeep. \n\nTalia's POV \n\nNew Orleans Coven House \n\n\"So, she is over the worst of it,\" I asked as we closed the door on Tania's sleeping form in our guest room at the mansion. I'd spent the last week caring for her with the help of the staff and the doctor. \n\n\"Heroin withdrawal is not over quickly, but I think the worst of the symptoms is over,\" Doctor Anders said. \"She may experience strong cravings for the drug, nausea, fatigue, restlessness or depression. The past week has been difficult for her. The Suboxone has moderated the intensity of the withdrawal. You can't think this is over now, she can feel effects for months, and long-term sobriety rates are not encouraging.\" \n\n\"Can she travel?\" \n\n\"Not alone,\" she said. \"And she needs to continue her treatment wherever you take her. It's not just the heroin addiction; she's been through hell and needs ongoing counseling for the abuse she's endured.\" \n\nI nodded; I loved my sister, I wanted the best for her, but I couldn't give her the full-time care she needed. I had my own work to do, and some people were going to die on my claws soon. Alpha Todd was the easy one on the list, but he would be the last one I'd go after. I wanted Tania to watch the life drain from his eyes, and she wasn't strong enough for that. \n\n\"I'll need the records of your treatment of her,\" I said. \"I will ensure she gets all the help she needs when we get home.\" \n\nShe reached into her bag and removed a manila envelope. \"I expected you would ask for this. Jarrod told me you were a guest here.\" She handed me the records. \"I hope your sister is able to heal from this in time.\" \n\n\"Me too,\" I said as we reached the door. \"Thank you for your help.\" I let her out, closing the door behind me. \n\nMalcolm approached as I opened my eyes again. \"I will keep someone watching her, Jarrod needs to talk to you,\" he said. I nodded and headed for the downstairs entrance, going through the double doors since it was still an hour to sundown. Jarrod was waiting for me at the bottom of the stairs; I threw myself into his arms and cried. \n\nHe picked me up and brought me over to the couch, sitting down and holding me on his lap. Marcy came over and hugged my back, she had been my closest female friend since she rescued me at that gas station four years ago. It took a while until I was calm enough to talk again. \"I can't take care of her and avenge her at the same time,\" I finally confessed. \"And I vowed to avenge her.\" \n\n\"You did, and you are close to fulfilling that vow,\" Jarrod said. \"While you have been caring for your sister, we have been working as well.\" Vampires didn't need to sleep, so they could get a lot more done than I could in a day. \n\n\"Did you find her son?\" \n\n\"We think so. Of all the Packs in North America, only one has a single Alpha male heir who was born at about the right time for what happened to Tania, and no other male children.\" \n\n\"Why did you search that way?\" \n\n\"Tania said the man raped her to get an heir, meaning either he didn't have a living mate or his mate couldn't give him an heir. Alphas are most likely to be obsessed with an heir, since the Pack normally remains headed by the male bloodline. It's more likely they only have the one child, but it's also possible they have an older female child but don't consider her an adequate heir.\" \n\nI snorted. \"Like that would happen.\" \n\n\"We also ruled out Alphas who were unmated, as even a bastard child could inherit the Pack. The only reason for an Alpha to use a captive surrogate is that you don't want the Pack to know it didn't come from their Luna.\" \n\nI looked up and saw Eduardo had his computer hooked up to the large flat-screen TV on the wall. \"This is Alpha Justin Heranus of the Copper Mountain Pack in Colorado,\" he said. \"He's been mated for over seventy years to Rhoda. He found her when she turned eighteen and he was thirty.\" He moved to another photo, showing the two of them holding a baby in a blue blanket. \"Just over three years ago, he told his Pack that his mate was pregnant, but it was a high-risk pregnancy since she had multiple miscarriages over the years. He sent her to stay with her uncle, where their Pack had a specialist to care for her. She returned with a newborn baby boy they named Philip. This is what they look like in the official photo from the last Alpha Council summit.\" \n\nThe eyes... the hair... there was no doubt in my mind this was Tania's son. \"I'm going to fucking fillet him slowly, dip him in alcohol then let him heal and do it again,\" I said. This was my NEPHEW he had gotten by raping my sister when she was fourteen years old. I started to shake, my wolf wanted out. \n\n\"Relax,\" Jarrod said as he rubbed my back. I pushed back against my wolf; I wanted blood too, but we had to do this right. Finally, I was under control. \"Good.\" \n\nI was so glad the Covens kept tabs on the werewolves; the files Eduardo showed me on the Copper River pack. It was prosperous, owning a ski resort and outfitter in the rugged Rocky Mountains. Alpha Justin had not participated in the Vampire Wars of the late eighteenth century and had no known enemies. The Pack numbered over a hundred and twenty, living in cabins and a gated housing development in the valley near the resort. It wouldn't be easy to get at him, and it wasn't enough to just kill him. \n\nI didn't know how involved Luna Rhoda was, or other members of the Pack. It didn't make sense that you could capture a werewolf and hold her for at least a year, and not involve others. Rhoda came to mind, she had the most to gain by holding a surrogate hostage, and she was gone from the Pack for months. \"Tania is brokenhearted that her baby is gone,\" I said. \"I owe it to her to get him back. That's my first priority after she is safe.\" \n\n\"What about the Alphas?\" \n\n\"I'll take care of them after my family is safe. Alpha Todd will have to wait, he's not going anywhere.\" I stood up, walking over to the screen and looking at the photo of my nephew. My fingers went up to trace his cheek as a tear went down mine.  \n\n\"I've already talked to Daniel Steele of the Denver Coven. He's agreed to let Eduardo stay with them and set up surveillance on the Pack, and to bring some of our familiars to help,\" he said. \"Eduardo will make preparations, and when it is time, he can help with the takedown.\" \n\n\"No,\" I said. \"Watch, but don't interfere. I can't be seen as working with the Vampires, it would endanger their coven and all of you. I will not start a war over a werewolf matter.\" \n\n\"You're family, Talia.\" \n\n\"I know, and you've given me everything. I'll figure out a way after I get Tania back with our family in LaCrosse.\" \n\n\"There's one more complication you should know about,\" Eduardo said. \"That shooting back in Fort Worth has gotten a lot of attention, both from local police and the FBI. The investigation included this man.\" He put a photo up on the screen; he was young, strong and very good looking. \"His name is Randall Meechum.\" \n\nMeechum. \"Oh shit,\" I said. \n\n\"Yes. Randall is an FBI agent, but he's also the son of the Sulphur River Alphas. He was there that night, and you can bet he has your scent.\" \n\nFuck. Three years since I left this place for my first kill, and I'd never raised the interest of human authorities. Now the Council could use the FBI to find me and bring me to their justice. \"What should I do?\" \n\n\"If you see him, kill him,\" Jarrod said. \n\nCh. 14 \n\nTalia's POV \n\nNew Orleans Coven \n\nI stared at the FBI agent who was able to tie me to the killings in Fort Worth. \"Has he identified me to the human authorities?\" \n\n\"Not that we can tell,\" Eduardo said. \"The police haven't gone public with any suspects, and these weren't the kind of people that are missed. If they have your name or description, they're keeping it close to their chest.\" ",
        "\"What about the Council?\" \n\n\"There you aren't so lucky. We had a person call his office and ask for him, and she was told he was out sick and was not expected to return for a week or more. He's not at his apartment either, according to the doorman he left two days after the shooting. I think you have to assume he knows who you are, and he's looking for you for the Council, not the FBI.\" \n\nI let out a breath. \"Just fucking great,\" I said. \"It doesn't matter, the first thing I need to do is get Tania home and safe with our family. Once she's safe, I'll head to Denver.\" \n\n\"I want you to have some backup, especially with Meechum out there,\" Jarrod said. \"I want Marcy backing you up.\" \n\n\"I'm going up there on my motorcycle, there's no place for her,\" I said. \n\n\"She's flying to St. Paul tonight, the coven there will host her. As long as you arrange for the transfer after dark, she can watch your back.\" \n\nI thought about it, Marcie was a fierce fighter, second only to Jarrod, but could only be out with the sun down. \"Emergency only, I can't have her scent around the Pack or they'll freak out,\" I said. \n\n\"I'll stay well clear,\" she said. \"If you have to make a quick exit, I'll make sure you get away.\" \n\n\"The LaCrosse Pack wolves are family, I don't want them hurt.\" \n\n\"I'll just disable them, not kill them,\" she said. \"I don't want you hurt either. Have you given any thought as to how you are going to do this?\" \n\n\"Erica. She's near the Pack border, and Tania will trust her. If anything goes bad, I'm off Pack lands in minutes.\" We talked for a few more minutes, then I excused myself to go get some rest. \n\nThe next morning, Tania and I roared down the driveway and headed north for Wisconsin. \n\nRandall Meechum's POV \n\nSparta, Wisconsin \n\nI dropped Michelle off at a caf\u00e9 in Sparta to visit with her friends while I had some business of my own at the Monroe County Sheriff's Office. Tomah was actually a township, and the county seat was here. I showed my FBI identification to the Desk Sergeant and he put me in touch with their Missing Persons department. \n\nI shook Deputy Ben Dover's hand as he led me back to his desk. \"What can I do for you, Randall?\" \n\n\"I'm investigating a sex trafficking ring in Texas, and a name popped on one of the missing girls. One of the other girls said she was from here, but she wasn't in the Missing Persons database.\" \n\n\"Name and when she disappeared?\" \n\n\"Tania Stillwater, last seen July 18<sup>th</sup>, 2015.\" \n\n\"That was before I was an investigator, Deputy Richard Long had the desk back then. Let me see what is in the system.\" He typed a few things. \"Here we go. You want a printout?\" \n\n\"Please,\" I said. \n\nWhile the papers printed, we looked through the paperwork. \"Everything is filled out, but it never got filed,\" he said as he looked through it. That would explain why her fingerprints and DNA were never in the system. We looked through it, there were a few statements but no leads. \"The file was closed on July 23<sup>rd</sup> saying the victim had returned home.\" \n\n\"Who reported that?\" \n\n\"Her guardian, a Mr. Todd Aldridge.\" \n\nThat fucker. Finally, I had some direct evidence. \"Did Deputy Long interview her after she returned?\" \n\n\"I don't see an interview, he just closed the file.\" \n\n\"Can I speak to Deputy Long?\" \n\n\"He passed away last year, lung cancer.\" Shit. \n\n\"Thank you, Deputy. You've been very helpful.\" I took all the paperwork and put it in an envelope, then went down the hall and knocked on the Sheriff's door. I showed my identification and asked him for a moment. \"My investigation has taken a turn that involves your department,\" I said. \n\nI quickly explained how I had traced one of the victims in Fort Worth back here and found the Missing Persons report had never been filed nationally and had been closed out without actually interviewing the victim. \"Deputy Long may have been involved in a criminal sex trafficking conspiracy,\" I said. \"I can't interview him, obviously, but I need to dig into his finances and records and for that I'd like your cooperation.\" \n\n\"Of course,\" he said. \"It pisses me off to think such shoddy police work could have left that girl out there all this time with no one looking for her.\" He called down to Personnel and had Deputy Long's personnel file brought up. I recorded the banking information, I would need that for later. There was nothing in his file to raise any questions, so I thanked the Sheriff and headed across the Government Center to the courthouse. I was able to get a judge to sign a search warrant allowing me to search Deputy Long's phone records and banking records for the period between July 18<sup>th</sup> and August 18<sup>th</sup> of 2015. Warrant in hand and scanned and emailed to me, I walked back to my Jeep. I picked up Michelle and asked her to drive us back to the LaCrosse Pack. \n\nI called in to the office, directly to our technical staff. \"Annette, I have a search warrant I need help on,\" I said as I talked to the young tech whiz in the basement of our office. I emailed it to her, and she promised me she would get it going with the bank and the phone company. \"Just email me the results,\" I said. \n\n\"You're supposed to be resting, word is you've got pneumonia,\" she said. \n\n\"Well, I'm bored as hell, my Mom is smothering me and I can't get out of bed except to go to the bathroom, so humor me,\" I said, faking a cough at the end. \n\n\"All right, but rest up, we want you back healthy,\" she said with a giggle. I knew of her interest in me, but I never allowed myself to get involved with someone at work since it would never end well. Now that I knew my mate was out there, I had no interest in anyone else. I thanked her again and hung up. \n\nIt didn't take her long, by the time I was back in my room she had the cellphone and bank records. There were multiple calls between the 21<sup>st</sup> and the 23<sup>rd</sup> between Deputy Long and her grandfather, plus several with Beta Todd. The kicker was that on the 23<sup>rd</sup>, there was a five-thousand-dollar deposit into the Deputy's bank account from the Tomah Pack shell company. \n\nI took the printouts and walked to the Alpha offices. \"I've got the first hard evidence of Todd's involvement,\" I said as I laid out what I had found today. \n\n\"Is it enough to arrest him or take him to the Council?\" \n\nI shook my head no. \"It's evidence of his involvement in quashing the investigation, but he could turn around and say he killed the Sheriff's investigation because he didn't want them meddling in Pack business. I need something more to go to the Council. As for the human courts, I might be able to get him charged with bribery, but with the recipient dead it's tough to prove.\" \n\nHe sat back at his desk. \"It builds a case, and that is key to preventing a war when we go kill his ass,\" he said. \"What do you have left to do up here?\" \n\n\"Not a whole lot,\" I said. \"How is Bobby doing with the exchange plans?\" \n\nHe smiled. \"He's doing well, we have a half-dozen serious candidates. There are others interested in something longer if your father and I can work it out. It would add options for colleges beyond those available in this area.\" No Packs controlled territory where colleges were, but it was important to have a Pack around so you could have support and let your wolf out each weekend. If they stayed at my father's Pack, universities in the Dallas area would be possible. The other thing was that if your mate wasn't in your immediate area, a rotation would make it easier to visit other Packs across the country. \n\nLuna Teri walked in, carrying two Leinenkugel's beers with her. \"I thought you might want one before dinner,\" she said. \"It's been a long day for you,\" she said as she patted my shoulder and handed me one. \n\n\"Thank you, Luna,\" I said. \n\nShe went over to her mate, sitting on his lap she opened the beer and handed it to him before leaning back into his broad chest. \"Randall,\" she asked, \"Your brother has been working with us and reading as much as he can to learn how to deal with a woman coming out of the kind of abuse Tania has suffered. He's doing everything he can to prepare for her when he finds her,\" she said. \n\n\"Bobby's a good kid, he'll be a good mate for her,\" I said. \n\n\"And what are YOU doing to be a good mate for Talia when you find her?\" \n\nThe question hit me like a brick to the head. She was right; I'd been so busy doing the investigation, I hadn't prepared at all for my mate. Hell, I didn't know whether I'd kiss her or cuff her when I found her. \"I don't know what to do,\" I said. \"My Dad originally said to reject her, that she was damaged goods and would only bring me pain if I allowed the bond to grow. I can't do that, though. I have to look into her eyes and see what is there before I know what I must do.\" \n\n\"She's my niece, Randall. I won't allow her to be harmed on my lands.\" His voice was low and threatening. \n\n\"I could never hurt her,\" I said. \"I just don't know. She's not the bubbly sixteen-year-old girl everyone remembers. I've read the Council files, I've seen the photos of what she has done. She's under a Council death sentence already, and she killed four people in Fort Worth. Texas still has the death penalty.\" I paused and buried my head in my hands. \"What if she's too far gone? She's a trained killer, she waded through that hotel like she was shooting plates on the range. She must have smelled her sister, she went through them like a hot knife through butter. Straight to the room she was being held then back out.\" \n\n\"But she covered her tracks well,\" Teri said. \"The humans would never know, only your wolf senses could pick up where she had gone. Surely that means she is still rational and in control.\" \n\n\"That's almost scarier,\" I said. \"To be too young to buy a beer but have more than a dozen dead people in your wake already. I know Tania is going to have trouble adjusting, anyone would, but she was taken and forced into that life. Talia CHOSE to be a killer, and I don't know how or if I can bring her back. I don't even know if I can have a life with her if the Council gets their way.\" \n\nTeri got up and sank down in front of my chair, taking my hands. \"Then you have to show the Council that she's the one who was wronged and get them to reverse their decision. Prove she was justified in killing those Alphas. Force them to remove the bounty on her head. That's the only way this has a happy ending for you.\" \n\n\"You're right. About so many things,\" I said. \"If it's all right with you, I'd like to spend more time with Erica so I can learn more about my mate.\" \n\nTeri linked for a few moments then smiled. \"She would like you to pick up her dinner from the Pack kitchen and dine with her tonight. She'd be happy to talk about her best friend.\" \n\n\"Thank you, Alphas.\" I walked out and down the stairs towards the kitchens, a little bounce in my step. Yes, I had to solve the mystery of Tania's disappearance, but I also had to figure out my mate. I might only get a moment to convince her to give me a chance. \n\nTalia's POV \n\nWe had broken up the long ride into chunks, taking time to relax and see some sights along the way. Tania was coming out of her shell, the open road and the detox bringing back some of the fun-loving little sister I remembered. She still had nightmares, and she still avoided being close to men, but that was to be expected. I'd gotten helmets with Bluetooth, and we were able to talk easily while we rode north. \n\nWe crossed the Mississippi from Iowa to Wisconsin at Prairie du Chien, well downriver of LaCrosse, and stopped for dinner. I didn't want to get close to their Pack territory until it was dark. Our timing was perfect, the sun went down as we traveled north on Highway 35, turning onto a road that went within a mile of their territory border. Marcy was standing next to her sedan, ready to cover my exit if needed. I parked my bike facing the road, just out of sight and ready for a fast getaway if needed, and made sure my Glock was secure on my belt. \"You ready for this,\" I asked Tania as she stood by the trail in the light of the full moon. \n\n\"I get to see them again,\" she asked quietly. \n\n\"Our grandfather is here, Uncle Clark and Aunt Teri, plus Michelle and Erica are all in this Pack now,\" I said as I pulled her into a hug. \"They all love you and will take good care of you, they'll be with you as you heal.\" \n\nShe was crying as she looked up at me. \"I just got you back, I don't want to lose you again,\" she said before she buried her face in my shoulder. \n\n\"I know, sis, I know.\" I hugged her tight. \"I have to kill a few Alphas, and then I'll bring your son back to you. I can take care of myself.\" \n\n\"Unlike me,\" she said. \"I'm weak as a human.\" \n\n\"You're Tania Stillwater, you have Alpha blood and you are stronger than you think,\" I told her. \"I love you, Tania.\" \n\n\"I love you too. Let's do this.\" \n\nWe walked through the woods; she followed behind me, letting me lead her through the dark hills by her hand. I could sense the boundary as we passed it from the scents of Pack wolves on the trees and the trail from the patrols. \"We're on Pack lands now,\" I said. \"If anyone comes across us, I want you to sit down and ask to speak to Uncle Clark. Don't worry about me, I'll be taking off for my bike.\" \n\nShe stopped, forcing me to turn around. \"Why? Why can't you stay with me?\" \n\n\"I can't do that to them. The Alpha Council has an arrest warrant out for me, and if I am caught on their lands, they will be forced to turn me over or be removed as Alphas. I can't let them catch me, and I can't stay and talk with them. Erica doesn't count, she's technically not supposed to be there either, but that only matters to the Tomah Pack. I've been to her cabin once, and that's where I'll leave you.\" \n\nWe started walking again; the wind was from the south, so I couldn't scent what was coming. We walked up the last rise, and I could see her cabin. The lights inside were on, and I smiled and led Tania forward past the gardens. \n\nI froze when I heard the front door slam open. A big man rushed out onto the porch, Erica behind him. I pushed Erica aside while I drew my Glock. \"Don't move,\" I said. \n\n\"Hello, Talia,\" the big man said as he raised his hands. I kept the pistol centered on his chest, he kept walking towards me. He stepped into the light from the window, and I got a better look at his face. \n\nRandall Meechum. FBI. \n\nAs I realized who it was, the wind shifted and blew his scent to me. My wolf rushed forward in my head, wanting to smell him again. \"Mate,\" she said. \n\n\"NO!\" I couldn't do this, not HIM, not NOW. Taking aim, I pulled the trigger then turned and ran for the border. \n\nErica and Tania screamed, begging me to stop, but I didn't. I got on my Harley and got the hell out of there. \n\nCh. 15 \n\nTalia's POV \n\nNew Orleans, Four Years Earlier \n\nLast night I had sold out my kind and cast my future with a vampire. \n\nI had been woken from my nap and dressed for dinner, which was held just after sundown with Jarrod and his coven. Malcolm had sent one of the servants out as I slept with a list of my sizes, and she had returned with bags of clothes for my closet. As I was in the bathroom, Malcolm laid out an ice-blue dress and white heels, along with new lace lingerie and stockings. I felt like I was playing dress-up, a sixteen-year-old girl getting ready for Prom, but this was real. I checked my appearance in the mirror; the bruises and cuts were healing and were barely visible under the makeup I found on the vanity. \n\nThe food was excellent, as was the wine, and I quickly settled my nerves as the conversation flowed. Marceline had told me her story on the drive down, and the others were just as fascinating. Jarrod led off with his story. \n\n\"I was born in 701 A.D. in northern France; my father was a Knight in the service of his Duke, and I was brought up and trained by him to serve as well. It was a difficult time for France; the Muslim armies had taken Spain and were moving north into France, killing and plundering all who opposed them. It came to a head at the Battle of Tours in 732.\" \n\n\"You were a knight,\" I asked curiously. \n\n\"Not in the way you're thinking of, we didn't have cavalry then like they did. The Muslim army had stirrups, that let them fight from horseback in a way we couldn't. Charles Martel united the north of France and gathered twenty thousand men to stop the advance northward. My father and I were both sent to fight, we had horses to ride but we would fight from the ground with our swords. It was bad; few had armor or training, and the invaders had both plus experience and numbers. They outnumbered us three or four to one, but we had the high ground. They attacked over and over, but we pushed them back. The first night, I and a few other riders were sent on a mission.\" \n\nHe took another drink of wine, a far off look in his eyes. \"Twenty of us fell back to where our horses were and rode all night until we came upon the support camp of the Muslim army. We weren't many, but we raised a lot of hell; we burned food, slaughtered horses, killed the cooks and armorers. The fires were bright enough the invaders panicked, many of them rushing back to defend their supplies and their plunder. In the confusion, their leader was surrounded and killed, and our side ended up winning.\" \n\n\"That doesn't explain how you became a vampire.\" \n\nHe laughed. \"Back then, vampires loved the confusion of war. It made feeding on humans easy, and no one noticed another dead man who had bled out. Our group was burning food carts when the fighters returned on horseback. I fled into the woods, but I took two arrows, one to the leg and one in my lower back. I gave them the slip, but the wounds were severe. I made it to a burned-out church, where I dragged myself to the altar and waited to die.\" \n\n\"I fell asleep, sure I would not wake, but was woken by a pale-skinned man dressed in black. He asked me if I wanted to live, if I would serve him forever if he saved me. I agreed immediately, I had a wife and child to return to. When his fangs descended and he bit into my neck, I was horrified. He drained me, I felt my heart stop, then he ripped open his wrist and forced the blood down my throat. I woke up three days later, completely healed and with a thirst for blood. I needed to go home, and he let me, knowing what would happen.\" \n\n\"What did happen?\" \n\n\"I found my family, and my lust for blood caused me to kill them. Pierre knew it would happen, newborn vampires are volatile and prone to bloodlust, and he didn't want me to have anyone except him. I served Pierre for two centuries, learning how to hunt, how to control minds, and gaining in strength until he died in a battle with another Coven leader. I fled, moving throughout England and France, eventually forming my own coven here in New Orleans after I met and fell in love with Marceline.\" \n\nShe took his hand on the table, smiling up at him. \"Once we were in love, I agreed to change because the other option was to lose him as I aged. Now we have each other, and he's just as handsome as he was when he rescued me from those men,\" she said. \n\n\"Vampires have mates?\" I was shocked, I'd never been taught that. \n\n\"It's rare, and it isn't the same as with werewolves where we recognize them by scent,\" Jarrod said. \"It's more like human love, made more difficult by the isolation most vampires maintain for safety. Anastasia was a housekeeper and the first of our familiars, she became like family and agreed to the change. Eduardo is our most recent change, and his story is his own to tell.\" \n\nHe took a drink of wine. \"I was an orphan and learned from people I ran with how to steal,\" he said. \"I was a natural with computers and got a job with a security company that installed systems. I used it to case homes that I could rob later. Ten years ago, my company was installing alarms and cameras at this house.\" ",
        "I started laughing. \"You decided to rob Jarrod?\" \n\n\"Yeah, and to make it even more funny, I decided to make my move in the middle of the night when now one was sleeping,\" he said as everyone started laughing. \"I had the access codes for the basement, with that kind of security I figured the real valuable stuff was down there.\" \n\n\"It was,\" Jarrod said with a smile. \"He came down the stairs as Anastasia was feeding from one of our familiars. We couldn't let him go, and our ability to cloud minds does not include the ability to remove memories. We held him for a few days, and eventually realized that his skills would translate well to our kind. He's a whiz with technology and computers, something that we old people still struggle with.\" I had to laugh at that. \"He agreed to the change and has fit in well.\" \n\n\"Do you change many?\" \n\n\"No, it's not a good idea,\" Jarrod said as he sat back. \"The more vampires in your Coven, the harder it is to hide your existence. It's like a Pack hunting ground, but it's a city you hunt in. Vampires don't have a Pack link or Alpha command, so you only bring in people who will follow your leadership or it becomes a mess. Then there is logistics. Larger covens mean more feedings, more victims, more chances to get caught. I prefer to blend in and not attract attention, but that means using familiars. Same problem there; it's not easy to find good ones, and there's never enough. I bring servants in, building their loyalty first and finding those for whom our existence will be accepted. The rest are never here outside daylight hours.\" \n\n\"It sounds like a lot,\" I said. \n\n\"Our problems are like your own, we have to hide our nature while living amongst the humans.\" I was familiar with those, my parents taught us all it was better to die than to let our secret out. \n\nWe finished the dinner and moved to dessert, a molten lava cake. \"I have a question about our agreement, Jarrod,\" I said as I finished. \"I'm sixteen, and I just got my ass kicked by a man who's not even an Alpha. Even with training, I'm never going to be able to go toe to toe with a male Alpha who outweighs me by a hundred pounds and has a decade of fighting experience. Are you just setting me up to die?\" \n\nHe laughed, along with the others. \"You think I'd bring you into my family and send you out to die?\" It did sound silly. \"You are correct in that you will not be as large or experienced as the Alphas you will be taking on. We are going to train you constantly, making you an expert in combat in human and wolf form. We'll drill you until you are an expert shot with pistol and rifle. We'll teach you knife fighting and knife throwing. A year from now, you'll be the most lethal werewolf in the world.\" \n\nMy head couldn't accept it. \"Even if I train constantly, how does that fix my weight disadvantage?\" \n\n\"You are going to be more than a werewolf,\" he said. \"I'm going to change you.\" \n\nAlarm bells went off. \"You can't do that, vampire venom is certain death for a werewolf,\" I said as I got ready to flee. \n\n\"We'll use my blood to form the bond,\" he said. \"I'm not going to change you into a vampire, that won't work since you are already a supernatural being. Instead, I will inject my blood into you. The vampire DNA will combine with your own, giving you some vampire characteristics that will mesh with your human and wolf genes.\" \n\n\"Is that even possible?\" \n\n\"It's been done before. You will gain vampire speed and strength, even a little bit of our ability to influence human minds, but you won't be a vampire. Just a werewolf who likes her steak bloody.\" \n\n\"Anything else?\" \n\n\"The change is painful, incredibly painful and lasts for days. Most of the werewolves who take the change die before it is complete. I'm hoping that with your youth and your motivation for revenge, you'll have enough stubbornness to see it through. It is your choice, Talia, but you'll never be strong enough to fight them without it.\" \n\nHe didn't change me that night; instead, I traveled into the swamps, away from any humans, and found a place I could see the moon rise high above me. Slicing my finger with a silver knife, I wrote my vow to avenge the ones who had taken my sister and stolen my Pack in my own blood before burning it. The sacred vow complete, I changed and ran. \n\nThe next evening, I asked Jarrod to change me. He used a large syringe, transferring his own blood to my veins, pushing in the plunger until it was all inside me. \n\nIt burned like fire as it flowed up my arm, then into my chest, and I screamed as it pumped into my brain. \n\nThree days I spent in agony as the change tore through me. Jarrod and the Coven did all they could; when I was running a high fever, they covered me with ice. When I was curled up and shivering, they covered me with warm blankets. When I couldn't move, they held my hand and talked to me. \n\nWhen the fever finally broke, I was famished. I shifted into wolf form as they released a sheep into the garage, which had been emptied of vehicles. I tore into it, gorging myself on the warm, bloody flesh. The bloodlust exhausted itself an hour later, and I shifted back. I was covered in blood, and pieces of the sheep were scattered everywhere. \"That wasn't fun at all,\" I said as Jarrod stood over me. \n\n\"You survived, Talia. We're all proud of you.\" He held out his hand an I pulled myself up, surprising myself as I went four feet into the air before landing on my feet. \"You are much stronger than before, you will have to get used to everything again.\" He was right, my body almost hummed with energy. It was like learning to walk again as I moved towards the outdoor shower. \"Clean yourself off and we will start training,\" he said. \n\nIt took a lot of soap and scrubbing to get the blood off, then I dried and dressed in shorts and a sports bra with a T-shirt. Jerrod drove me out of the city as we worked on my senses; my smell and hearing was more sensitive than before. When we reached the forested area, I was set free, and I was FAST. It took most of the night to get used to it, the two of us running together, first in my wolf form then in human. Vampire speed and four-paw drive was a killer combination, and I loved it. \n\nI fell asleep on the way home."
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "mystery",
        "revenge",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-11-15"
}