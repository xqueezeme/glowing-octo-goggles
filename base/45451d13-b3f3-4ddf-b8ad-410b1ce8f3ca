{
    "title": "Rory and Sebastian Ch. 20",
    "pages": [
        "Author's Note: With apologies for the delay, there will not be that long a gap again and to confirm, I know some readers think that this story has \"dragged on\", but the intention behind this story is to look at a relationship that evolves and changes over many years! Thank you for all your comments.\n\n\n\n== From Sebastian's POV ==\n\nRory stepped into my car as a light drizzle of rain fell over the driveway leading up to his house. He was wearing a gray cashmere roundneck and his hair held a slight residue of the mist-like rain from outside. He gave a sigh of theatrical exhaustion as he sat in the passenger seat, and leant over to kiss me, peck me, very lightly on the lips. It was nice, it felt reassuring, but then that was probably why he had done it - to calm me down. When you love someone like that, I think you get into a weird kind of emotional infinity symbol of knowing how well they know you and they know you know that they know... I don't know. I'm rambling. Anyway!\n\n\"Hey,\" he said, breathlessly, after the kiss. He had dashed from the house without a coat or umbrella. Clearly he assumed we were staying in the car to talk, which was fine with me. There was more privacy that way, in case anyone yelled, cried or, like last night, ended up inside each other.\n\n\"Hey,\" I answered, turning the key. \"Who'd you tell your parents you were going out with tonight?\"\n\n\"You,\" he answered. \"Should I have lied?\"\n\n\"You told them it was me?\" I asked, half-looking at him but keeping my eyes on the dark country road as I turned out of his driveway. \"Rory!\"\n\n\"What?\"\n\n\"I assumed you'd lie to avoid questions. I thought you'd tell them you were hanging out with Robbie or Virginia, not me! Jesus, Rory, if I'd known you were going to tell the truth I'd've called to the door! Now I look like a d-bag who waits in the driveway and doesn't call up to the door to say hello to your parents. Fuck!\"\n\n\"Sebastian, they know you. And we're not back together, yet, so... calm down,\" he smiled, there was an incipit smile in everything he was saying. I hadn't forgotten he could be like this, but I'd forgotten what it was like when he did it; how it made me feel. He had a rare kind of charming condescension, an endearing emotional snobbery, something that arose through an innate and very loveable superiority, when he felt calm, certain and in control. He used it with particular effect when he had to stay calm for both of us. I wondered if he could sense how nervous I was. \n\nIt had all happened so quickly, from the accidental meeting in Edinburgh to the totally unexpected sex at the wedding the night before. And now, here I was; so very close to what I had wanted on some level for nearly two years. Having suppressed the desire to be with Rory Masterton for the best part of a year, it had all come flooding back to me and a nervous ticking metronome of panic was clicking away in my head at the thought that, having come so close and reawakened all those old feelings for him, for us, it wouldn't happen. What was he going to say if, or rather, when, I told him about how promiscuous I had been during our separation? Morally, it wasn't as if I had done anything wrong. We had been broken up for a long time when I first fucked somebody else and none of them had even remotely come close to usurping Rory's place in my heart. But we were at different universities now, separated more or less by the full breadth of the United Kingdom, and if Rory thought sleeping around was a compulsion, a habit that couldn't be broken, a cause for mistrust... It wasn't. I knew it wasn't. Zac Efron could have lubed up and begged for it and I'd've shrugged him off if Rory was free for so much as an afternoon coffee, but still, the doubt remained that Rory would know know that. Or not believe it.\n\n\"What's wrong?\" he asked from the gloom of the car. \"You're not as loquacious as usual.\"\n\n\"I'm shitting myself, Rory.\"\n\n\"Aren't you seductive?\"\n\n\"Seriously. You've no idea how nervous I am. Lame, right?\"\n\n\"Adorable, actually. Turn left here.\"\n\n\"Isn't straight on quicker?\"\n\n\"To where?\"\n\n\"To the grove.\"\n\nHe shrugged, \"The left's a better road.\"\n\n\"Maybe twist and turns just make the final destination feel like more of an accomplishment,\" I said, flashing a grin. He rolled his eyes and laughed, before staring out the window. \n\n\"Isn't it a horrible night? Weather-wise, I mean.\"\n\n\"It's December,\" I said. \"That sweater looks really good on you.\"\n\n\"Thank you.\"\n\n\"It'd look better off, though.\"\n\n\"Haha. You left a mark on me, you know, from last night.\"\n\n\"Well, that's just for all those dudes up at Saint Andrew's to know that you're mine now. Again. I dunno.\"\n\nI pulled into the grove, a parking lot that on a clear day had a beautiful view over the green trees of the Weald, but tonight it could have been looking into a blackhole once I switched the headlights off. Rory instinctively flicked the car locks on, a tribute to the traumatization he suffered everytime he was forced to watch a slasher movie. He looked over at me and smiled, \"Slasher movies,\" he explained. \n\nI nodded, \"I know, Rory.\"\n\n\"So...\" he said, angling towards me and unclicking his seat belt. He brought his right leg up to perch slightly on the chair and he stared at me. In the half-light being given off from my radio, his eyes swam with questions and the cheekbones of just-the-littlest-bit-too-thin face were beautifully lit up. Objectively, I knew Rory was never the most perfectly handsome guy in the world, but he had a way with him, maybe only I saw it, maybe only loves see it, I don't know, but he really could take my breath away. \n\nI turned to face him and sighed, \"Yeah.\"\n\n\"We have a lot to talk about.\"\n\n\"I love you,\" I said. \"I just wanted to get that out there. You've no idea how nervous and happy and excited and shitting myself with fear I've been since last night, Rory. I can't... I know we have a lot to talk about, but I'm so completely in love with you that I will do anything that needs to be done to make this work and I don't want to play any games, because that's not us, it's not you and I. I just, before anything was said, I wanted to say that.\" I smiled at him and he kissed me, hard, impulsively and the gearstick certainly got in his way, but he did it and I kissed him back. It wasn't sexual, it was just, well, I'm honestly not entirely sure how to describe it. When he separated from it, the calm he'd been wearing since he got into the car was rattled a little.\n\n\"I love you, too, Sebastian. I do, honestly, I know that...\" He stopped himself and took a breath. He bit the bottom of his lip slightly. \"We need to be able to talk about things though.There are things to talk about.\" I nodded and he launched straight in with his first question, \"The first thing being, I suppose, to ascertain how mad you are at me?\"\n\n\"I'm not mad at you. Why would I be mad?\"\n\n\"Don't do that. Don't let's ignore everything unpleasant now until six months down the line it becomes a huge thing that breaks us up a second time round. You know that you are mad at me on some level, you're bound to be angry. I got a little flash of it at the Balmoral when I brought up Evan and Sarah. And when you referred to me as a 'blast from the past.'\"\n\nJesus, he didn't miss a thing.\n\n\"So,\" he continued, \"talk to me. How angry are you? Say what you need to say.\"\n\nI could hear the incipient nerves that he was trying so desperately and masterfully to control. To anyone else, he would have appeared unflappably serene, but I knew this performance was a bit like a swan in motion with its feet paddling frantically beneath the surface.\n\n\"There have been times I've been angry at you, yes, of course, but they're not enough to keep me from wanting you. Of course they aren't! But Rory, I guess the thing that's always half-bothered me - and I know it shouldn't, because the rest of the time I know the answer - but, why did you do it? Maybe why's not even the right word; maybe 'how' is. That night, that party, it wasn't, I mean, fuck, I'm not going to say it was assault, but it wasn't consensual. I could barely stand and the guy just launched himself at me and, okay, you're looking down, I can tell you don't like hearing about it or imagining it, and I get that: if someone had done it to you, the image of it in my head would've killed me, it would've made me so fucking angry. But, Rory, the difference is I wouldn't have broken up with you over it, not in a million fucking years. I would've gone after the guy and beat the shit out of him, and that's not bullshit machismo: I would've done it and you know I would have. I could barely fucking stand and he... I just don't understand how you weren't able to see it from my point of view, because it wasn't like I was trying to pretend that it wasn't an awful thing to have happened or that I didn't understand why you were upset. And when you slapped me, punched me, whatever you want to call it and then you were in my arms, sobbing, in my arms because of something I had done, Jesus, Rory, you've no idea what that was like. It was the single most awful moment of my life, it felt like I'd been punched right in the heart, and I was trying so hard over the next few days to get you back, to hold on to what we had, but I just feeling you slip away from me, completely... It was fucking awful. And Rory, I loved you! I loved you so much and we had been through so much. You were my boyfriend, the guy I loved totally, and you were my best friend, too. It just seemed like it was so easy for you, and I know,\" I held my hand up to stop up when he open his mouth to protest that point, \"I know it wasn't so easy, but it was too easy for you. I couldn't have done what you did to us anymore than I could have walked to the moon. And then to cut me out completely... I just, fuck, I don't know. I don't know how you did it and part of me thinks, 'Shut your fat fucking mouth and don't ask any questions that'll stop him wanting to get back together with you again,' but the other part of me needs to know that you won't do it again ... I don't want to go through the rest of our relationship living with this fear that you could ditch me. That I'm an optional or an addition. I don't know.\" My voice quivered, broke with held-back tears, and I clenched my right fist and lightly thumped the steering wheel with it. \"Fuck. This is...\"\n\nThere was a long silence that was only broken when I said, \"Will you please say something?\" In response, he just shook his head and wiped his cheek. \"Don't cry, Rory,\" I said, reaching over and taking his hand. \"I'm not... I don't know where that came from. Don't cry.\"\n\n\"I'm fine. I'm dealing with trying to repress that for eighteen months, Sebastian, so give me a minute.\"\n\nAnother pregnant silence settled over the car, broken only by the rain as it evolved from a drizzle into a shower. The fingers of Rory's right hand were beating nervously against his leg, in an increasingly fast pace until they stopped and he lost the battle for self-control; a sob broke from his throat and his shoulders sagged. In a few minutes, the entire dynamic had changed and his calm, poised self-assurance had finally been irrecoverably shattered. \n\n\"Oh, Rory, don't,\" I reached over to him and putting my arm around his shoulder, pulled him in towards me. I felt a second of hesitation and then he went with it, allowing himself to be awkwardly guided over towards me. Instinctively, without thinking about it, the first endearment of the evening slipped from my mouth, \"Baby, shhh... come here.\" His face pressed into the crook of my neck and I could feel the tears on his cheek. \"Baby... Rory. It's... I love you.\"\n\n\"I love you so much,\" he cried, softly. \"I don't know what to say.\"\n\n\"You don't have to say anything.\"\n\n\"I do and you know I do!\"\n\nHe moved back to his seat and I rubbed his shoulder. \n\n\"I'm not saying this to make you feel worse, sweetheart, but you were weird, uneasy, I guess, about us going away to different colleges beforehand and I've always been worried that you - I don't want to say 'used' - but that what happened at that party sort of gave you an excuse, a reason, a legitimization, whatever, to...\"\n\nRory shook his head. \"No, Sebastian, that's not what it was, at least not consciously. You're so much better looking than I am that I was worried that when you went to uni there'd be people throwing themselves at you, left, right and centre, but I knew I was just going to have to get used to that idea and to trust you. And I did. I do. But when that happened, that kiss, something just snapped inside of me and I can't fully explain what that was, although I suppose I should try to. Everything just went into a kind of slightly manic overdrive. I was in therapy then, remember, counselling for my stupid eating thing...\"\n\n\"Rory, that's not stupid, by any stretch of the imagination...\"\n\n\"Anyway, it was a good thing to go through, but when you're in it, it kicks a hornets' nest. It strings you out while you're looking for answers and that stringing out gives you less of an even keel. To extend and distend the metaphor.\" A ghost of smile played on his lips at his inarticulateness, but it faded quickly as he tried to explain why he had behaved that way, though, as I'd said, a part of me already knew why. \"I was so fragile, panicky, I suppose, that when I heard about you and that guy I knew that if we went to university with that still hanging over us, it would drive me mad. And it would have, Sebastian. I can't tell you that it was the right thing to do morally, but pragmatically, on some level, I think it was. It was a reasonable reaction to a really shitty string of circumstances and I wish I could tell you that it hadn't been and I wish that I was half the boyfriend you are, were, will be, but I dropped the ball because I just didn't know how to play the game. I'm so sorry; you are...\"\n\n\"What?\" I prompted.\n\n\"The love of my life. You are. I think about you all the time and it took so much self-control not to text you or call you or Facebook you anytime I was down or upset or really happy. Even now, I just want your arms around me and to love you and make you happy. But I feel as if you need to shout at me, so that you can get these things off your chest?\"\n\n\"I don't want to shout at you, Rory, but before we go any further you should know that there were other guys at college. Quite a few.\"\n\n\"I know that,\" he said.\n\n\"How? Because you always thought I was a bit of a slut? I guess I've no reason to get pissed off about that, now.\"\n\nThe rain was getting much heavier outside. Driving back would be a nightmare.\n\n\"I know because people talk,\" Rory said, gently, \"and because I assumed you'd have... fun... at university, Sebastian, if you were single.\"\n\n\"It was just sex,\" I said. \"No one could ever replace you. Last night, when you were lying in front of me, naked, Rory, I couldn't believe how happy I was that you were there. I realized how much I'd missed it, you, how stupid it was to think that anyone could ever replace you. You're my guy. You always have been. Evan used to say that he knew him and Sarah were meant to be together after they broke up when he figured that random hook-ups meant nothing to him anymore, that they left him feeling a bit sickened, and wanting nobody but her. I feel that way and then some, now. I don't think what I did was wrong and I don't hate the guys I did it with, but even during it, there were times I was comparing it to you and nobody ever rose to the challenge of even seeming like a disadvantaged competitor. I love sex, but I love it with you more than anyone else and I love you more than it, me and pretty much anything else combined. I need you to trust me, because I want this to work and I want it to work in a way that makes you as happy as I can. I don't want you sitting in Saint Andrew's worrying about some guy throwing himself on me in London because, believe me, no matter how drunk I get I won't let that happen again and it'll always be you that I want. If you are ever in my arms sobbing again, Rory, I swear to God that I want to be sure that I didn't cause it. I want to be the one that wipes away your tears, not fucking causes them. And that sounds like something from a Ryan Gosling movie, but I do mean it and you know that. Don't you?\"\n\nHe nodded.\n\n\"Anyway,\" I prompted, \"you said last night that there had been other guys that you'd...\"\n\nI paused, why couldn't I finish the sentence? I wasn't a prude, I had a very matter of fact attitude to sex, particularly with him. I'd joked about it right after he got into the car. I'd just told him about my own sex life. But the words stuck in my throat; on some instinctive level I just could not bring myself to say \"had sex with\" in relation to Rory and somebody else. \n\n\"Had sex with?\" He finished, interlacing his fingers with mine. I nodded tersely. \"Yes,\" he said. \"There were two. The first one was awful. It wasn't you and it just felt... awful. I hated it. The second guy, it happened more regularly, obviously. I was actually on top for most of that one, which...\"\n\n\"For fuck's sake, Rory, I don't need the details.\"\n\n\"Sorry,\" he said, looking surprised by my tone. Which, I'll admit, was aggressive. Far more than I'd intended it to be, it just sort of fell out of me. I hated the idea of him with anyone else.\n\n\"I didn't give you details or numbers,\" I said, defensively.\n\n\"Well, that's probably because you couldn't count that high,\" Rory shot back. \"Sorry, I shouldn't have said. Why are you being so weird?\"\n\n\"The idea of you having sex with anyone else makes me really unhappy.\"\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"Well, if it makes you feel any better, the second guy, the regular one, wasn't a fuck-buddy or anything else. We were dating at the time.\"\n\nI think he knew as soon as he'd said it that it had made things a million times worse.\n\n\"You dated somebody else?\" I said, turning to look at him in full. He nodded and opened his mouth to say something, but I cut him off by repeating my original question.\n\n\"Yes.\"\n\n\"For how long?\"\n\nI didn't know what he was going to say but I certainly didn't expect the answer, \"Four months.\" It was like being punched in the gut and I was very nearly shouting at him, even though I knew I was being totally hypocritical and very rude. \n\n\"Four fucking months?! Rory, how is that even fucking possible? When I ran into you in Edinburgh - fuck it - when I ran into you in Edinburgh, I had kind of been seeing someone in London and when I say 'kind of being seeing someone', I mean that I had been occasionally going for dinner with him on a fairly fucking infrequent basis and that was the first time I'd been in any kind of regular even faintly romantic setting with anyone in the last eighteen months. I was still referring to you as someone I'd 'just broken up with' for about 9 months after you dumped me. And obviously my heart was never really in it with Daniel. The minute I saw you at the hotel, it was sayonara for him and me. I don't care if I never see him again and the second I got back to my friend's apartment in Edinburgh and he found out that it was you I'd ran into, even he knew that there was no way anyone could compete with you. That's the level that people at my college know about you, and they've never even met you! I never ... Rory, how could you date someone for four months? Date someone! What was the little fucker's name?\"\n\n\"You said you didn't want details,\" he said, firmly. I started to falter, my tone began to lose its belligerence; it wasn't fair the way I was reacting, especially when he'd taken the news that I'd fucked all around me with such comparative grace and tact. But this was worse, much worse; the idea of him snuggling into someone the way he used to with me, kissing them, smiling for them like we used to smile at each other, sharing jokes. It was primal and caveman-like, sure, but I felt so possessive and upset by the thought of it. ",
        "\"Did you love him?\"\n\n\"How could I love someone who wasn't you?\" He said it with such sincerity and total simplicity that it stopped me in my tracks. \"Please take my hand again,\" he asked, his voice rising and falling softly, undulating and pulling me in. I took his hand and he ran his free hand through the back of my hair. \n\n\"You mustn't be sad,\" he intoned. He'd said that to me once before, long before, and the tone was the same. Polished, elegant, flickering tones and lyrical smoothness. \"You mustn't be angry, my darling. It's happened now and it's in the past.\" \n\nI nodded. \n\n\"Talk to me,\" he commanded, beautifully.\n\nI shook my head and lifted my head, my heart skipped a beat and my hand tightened around his. We were together again, everything seemed to melt away for a moment. \"I love you.\"\n\n\"I love you, too, very, very much,\" he answered.\n\n\"It's just very hard for me to think of you as somebody else's boyfriend. Excruciating, actually, Rory.\"\n\n\"And it makes me want to vomit with fear at how much sex you've had. But it's happened, Sebastian, and we've come out of it still in love with each other. Haven't we?\"\n\n\"Of course we have. You're my guy,\" I repeated.\n\n\"And you're mine. All these things, they're not going to matter if we hold onto each other. If we talk about them now, we'll find a way through them. I don't want to be without you again and I never want to let you go.\"\n\nI smiled and the rain outside poured down harder. We stayed there for another forty-five minutes, I think, maybe a little longer. I drove him home and we began to laugh a little, at some memories and some random observations from the wedding the night before, the past and the future colliding nicely with each other. He shut down the idea of us formally reconciling there and then in the car, because he didn't want to restart the relationship in the car where we had both made each other cry. I understood that and when I dropped him off home, he kissed me on the cheek. After he left and I drove back to my house, his smell lingered in the car and I already missed him. By the time I got back, I had a text from him: -\n\n\"I love you. See you tomorrow at 11 xx\"\n\n***\n\n== From Rory's POV ==\n\nThe next day dawned cold and clear, with the air only just a little damp from the heavy rainfall the night before. It would lift as the day dragged on. The sky was clear. \n\nI can remember glancing out my bedroom window at half-past eight and feeling so completely elated. I can't explain why the news of Sebastian's other sexual partners didn't bother me too hysterically. In part, it was quite obviously because the gossip mill had given me a heads-up. I knew it was coming and I had mentally prepared myself by being firm with my own neuroses. After all, it had been my decision to end things and to maintain distance for so long. What had I expected: that he would remain a monk? Yes, of course, on some level there was a part of me that would have been overjoyed and immensely soothed if he could have told me honestly that there had been no-one else. Or, at the very least, only a very few. But I could be a realist when dragged to it. Sebastian was confident, handsome, a little cocky and very sexy. I hadn't asked him to take a vow of celibacy for me and I had no right to, either. When I sat down next to him in his car the night before, I had been holding myself in, steeling myself for the test of seeing how much damage had been done and how I would - or could - handle it. I had been surprised that it turned out that the real emotional damage, at least in the long-term, had been more on his end than mine. And he had taken the news of my relationship, that half-baked sequel to mine and his, far more painfully than I had taken the final confirmation of his active sex life.\n\nI stepped into my shower and adjusted the nozzle as the too-hot water caused me to start. I began to lather up and congratulated myself on remaining so calm about his other partners, in what must have been a sure-fire testament to my personal growth. I knew that running into any of the people he'd gone to bed with would hurt, but when would that happen? And even if it did and it was uncomfortable, uncomfortable things are a part of life: was any of it really worth not being with him, again? Was anything? \n\nI thought of Alisdair, Sebastian's temporary replacement. A lovely guy. Clever, elegant, funny, confident, but not Sebastian. In my eyes, who could compete? Whatever happened next, whatever had happened since, from the moment I had collided with him in the streets outside my hotel in Edinburgh, I had known that there was no going back. I had known it ever since Alisdair and I had broken up, or perhaps it's safer to say drifted apart, at the end of the summer term. I must have. On paper, Alisdair was perfect. I stepped out of the shower and glanced at myself in the mirror - naked and slightly wrinkled from the water. I steeled myself to look, inhaled and mentally steading myself. The love bites were still on my torso and I ran my fingers over them lightly. Had I ever, realistically, believed that there was any way I'd be completely happy away from Sebastian?\n\nAfter I was dressed - jeans, black sweater, newish shoes - I curled up in an armchair in my room and tried to read. There was already a text from Sebastian: \"Can we meet at 10? xx\"\n\n\"Sure,\" I responded, mentally panicking that he had changed his mind. \"Why? xx\" \n\nA few seconds later came the response: \"I just can't wait to be next to you again. Spent 2 much time apart. I feel like this text merits an emoji?\" \n\nI smiled and wrote back, \"I'd rather kill myself than use an emoji. 10 works fine. I can't wait to see you again.\"\n\nI can't remember what the book in my hands was. Some novel that on another day I might have enjoyed. I picked a wax jacket out of my wardrobe, scarf and gloves and walked down the stairs at 9.55. My brother Dermot, in the standard rugby sixth year boy's day-off ensemble of sweatpants and t-shirt, was in the sitting room just off from our entrance hall. The beautiful Christmas tree twinkled behind him, as he munched a bowl of cereal and watched TV.\n\n\"Where are you going?\" he asked, barely flicking his eyes away from his crappy show.\n\n\"Out,\" I replied.\n\n\"No shit, Raz. Who with?\"\n\n\"Pardon?\"\n\nDermot and I are nobody's fool and we could read each other and the rest of our family very well. He turned to look at me, his face now glowering with undisguised and knowing antipathy. \"Seriously? 'Pardon?' You clearly heard me.\"\n\nI rolled my eyes. \"Don't start, Dermot.\"\n\n\"He's a cunt.\"\n\nHe had swivelled in his armchair to engage fully in the conversation and I felt myself getting angry. The coat felt heavy over my arm. \"He is not a cunt,\" I answered, firmly. \"You liked him.\"\n\n\"Past being the operative tense.\"\n\n\"He didn't...\"\n\n\"He broke your heart.\" \n\n\"It was complicated.\"\n\n\"Nope,\" he said, angrily, \"it wasn't. You love him. I get that, whatever. But he's still a cunt, Rory. And he'll do it again.\"\n\n\"You don't even know if we're getting back together!\" I snapped. Why the fuck had I said that? It would just make telling him later even worse.\n\n\"I know you. When you didn't want to get back together with Sebastian Carson, you kept him as far away from you as you could. And since the wedding... For fuck's sake, Raz. You deserve better.\"\n\n\"I think I can be the judge of that, don't you?\"\n\n\"Yeah, you're right,\" Dermot said, with tidal-wave levels of sarcasm. \"I'm just your brother. Why the fuck should anything I say matter?\"\n\n\"Well try fucking acting like it then!\" I shouted. I swung the front door open, stepped out of the house and slammed the door behind me. Sebastian was getting out of his car in the driveway, determined to knock on the door this time. I had to give him points for manners and moxie.\n\n\"What's wrong?\" he asked, instinctively.\n\n\"Nothing,\" I lied. \"Where do you want to go?\"\n\nI was walking towards the car, but he crossed round and stood in front of me, taking my hand. \"You're shaking.\"\n\n\"Nothing, I'm just... Stupid family stuff. Can we go?\"\n\nHe glanced over at the house, then back to me: \"Sure.\" \n\nTo his credit, as we drove to the forest car park where, two years ago we'd gone walking and had rambunctious sex in the rain, Sebastian did not ask anymore questions. If there was anymore proof needed that he knew the argument had been about him, his silence was it. He was too good and too selflessly noble in a crisis to ask, \"Was it about me?\" in case it magnified the stress or put himself in the centre of attention. He kept up a steady stream of distracting chatter and it reminded me of how much I loved him: he wasn't an emotional voyeur. He knew when to get angry and when to get involved; he knew when to step back and let things slide. It's a rare skill. Like so many of his. \n\nWe drove past Saint Eustace's Church and I blessed myself. A fond and teasing smile tugged at the corners of his lips, but he said nothing. We reached the car park and stepped out in the freezing December air. He reached into the back for his own coat, tugging it on over a thick cableknit sweater he was wearing. \n\n\"So?\" He said, falling into step next to me as the winter sun splintered into light around us. \n\n\"So,\" I answered. An emotional call and response. I put my hand above my eyes to shield out some of the Sun's blinding glare. \n\n\"Are you my boyfriend again?\"\n\n\"Am I yours?\" Mary, Mother of God, that was a pathetic response! How cringe-inducing. Why did I say that? Fix it! \"Yes.\"\n\nA smile broke across his face. Both our faces. And he leant in to kiss me. I wish I could tell you that after so long it had been a moment of sublime melodrama, of angst and tears and passion, like the time he flung me up against the tree in the driving rain the first time we kissed. Or his plate-smashing loving fury at his uncle's cottage. But it wasn't. After eighteen months, the finale had been transformed into an intermission and it all slotted very gently back into place. We fell back in to one another, into each other, into us, on a cold crisp English winter's day and as I felt our fingers interlock as he kissed me, all I could do was devoutly thank God for bringing him back to me.\n\n***\n\nOur mutual friend Robbie took the news of our reunion even better than I had expected. Although Robbie had been angry on my behalf during our break-up and, with Virginia, even helped determine it in their own way, he had remained close to Sebastian, Seb, as he and everyone bar myself, his mother and Virginia, called him. Robbie was, I think, lad enough to sympathise with Sebastian with the benefit of hindsight. He smiled when I told him and clapped me on the shoulder, \"I think that's for the best,\" he grinned. \"I always hoped you two'd work it out eventually.\"\n\nVirginia was more sanguine, but hardly condemnatory. She raised the issue of the distance between Saint Andrew's and London, but, that aside, she simply asked how I felt about it, commented that she had felt sorry for Sebastian in her own way when we broke-up and said, with the kind of firm pragmatism I loved about her, that no-one knew a relationship better than the two people involved. Our \"In a relationship with\" moment on Facebook, a staple in the cyber age which Sebastian insisted upon honouring, drew dozens of likes but Dermot and I did not thaw to one another for at least a week and his non-like of the status was, to me, louder than the dozens who did click.\n\nMy brother point-blank refused to even acknowledge Sebastian's name in conversation, left the room when I told my parents we were dating again, went upstairs when he saw Sebastian pulling into our driveway and since I'd be damned before I'd climb down over this before he would, we were still technically on non-speakers with one another when we went to Midnight Mass with our family on Christmas Eve. \n\nAs the candles flickered in the gloom of the chapel, the heavy scent of incense swirled around us and Father Bridgeway intoned the Mystery of Faith, my father glanced down the pew to throw a reproving glance at Dermot and I, who were sitting next to each other but yet to even look in one another's direction until the Sign of Peace forced us to shake hands half-way through the service. \"God be with you,\" Dermot said, quietly.\n\n\"And also with you,\" I replied. \n\nHe half-smiled awkwardly and hunched over. Then he nudged my shoulder, \"Happy Christmas, Raz.\" \n\n\"Happy Christmas, Dermot.\"\n\n\"Hail Mary, Full of Grace,\" sang Father Ridgway, \"The Lord is with Thee! Blessed art thou amongst women and blessed is the fruit of Thy Womb, Jesus.\"\n\nAs we sang back, \"Holy Mary, Mother of God, pray for us sinners now and at the hour of our death,\" I saw my father nod with curt approval at the rapprochement between his two eldest.\n\n***\n\n===From Sebastian's POV===\n\nTwo days after Christmas, Evan sat opposite me at the local McDonald's, where we'd stopped en route home from the stables where our horses were stabled. I was starving and as we tucked into our food, he raised the subject of New Year's Eve. \n\n\"Have you two any plans?\"\n\nI nodded and swallowed, \"Yes and no. Dominic's having a big NYE part, but Rory got wind that Joshua Peterly is on the invite list and doesn't want to go.\"\n\n\"Is that the guy you used to hook-up with before him in school?\"\n\n\"Yup - shithead,\" I took a drink. \"I fucking hate the little dickhead, so I'm fine with staying in, too. All our friends are going to Dominic's and Rory thinks it'd be too aggro to start an alternative party all because of Joshua. So we're probably just going to stay in at ours. I've already said to Mom and Dad, and they're cool with it.\"\n\n\"That's probably for the best,\" Evan agreed. \"I think Sarah and I are going to spend a few hours there, then head over to her sister's for about 10.30.\"\n\n\"Awesome.\"\n\n\"Mom was so pleased you and Rory were back together,\" Evan grinned. \"You couldn't have asked for her to like him more, right?\"\n\nI smiled, \"Yeah, that was really nice. Jenny, too. His brother wasn't exactly thrilled, you know.\"\n\n\"How many does he have?\"\n\n\"Three,\" I answered, \"but the eldest, after him, Dermot's, in Upper Sixth now and I think he knew a bit more about what went on when we broke-up. I like Dermot, so it's a bit annoying, but I guess he was there to see how upset Rory was...\"\n\n\"I was there to see how upset you were and I don't dislike or blame Rory,\" my brother interjected, clearly a little riled on my behalf. \"Why does this kid feel the need to get involved?\"\n\n\"Same reason you feel the need to get involved now, Evan,\" I jibed.\n\n\"Fair,\" he laughed. \"Have you two spoken about visiting each other or how you're going to make it work when you go back for next semester?\"\n\nI swirled a fry around in barbeque sauce. \"We have. He's coming down to visit first and then we'll be together half-way through semester when we go to Leeds to visit Robbie for his birthday and then towards the end, I'll go stay with him for a few nights in Saint Andrew's. And Skype at least twice a week.\"\n\n\"Saint Andrew's is supposed to be really stunning,\" said Evan. \"You'll love it. History geek.\"\n\n\"Yeah, the only thing is, and it sounds fucking dumb, but Rory's ex-boyfriend lives in the halls next to his up there and apparently they have a lot of mutual friends. I'm kind of worried of what it will be like to meet him, because it's more or less impossible that we won't if everyone's going out together. And I'm not sure how I feel about it. It makes me really... I dunno...\"\n\n\"This is the guy he dated for a few weeks...\"\n\n\"... Four months...\"\n\n\"... when you two weren't together?\"\n\n\"Yup. I asked Robbie. The guy's name was Alisdair, does Theology, just like Rory. Robbie never met him, but...\"\n\n\"Seb, stop this. Don't let it get in your head as something to be paranoid about. He broke-up before you two started to get back together again, didn't he?\"\n\n\"Yeah, but...\"\n\n\"Then clearly it wasn't working for reasons totally unrelated to you! Do not make this a big thing. Especially since he has been nothing but very, very supportive and understanding of how many guys you hooked-up with when you two split-up. Look, Sarah dated two other guys when her and I broke up. Did I like it? Of course I fucking didn't, but it happened, it's life and you have to move on with it, you know? If you don't want Rory to fling your actions in your face, you can't make a big deal out of his. And Seb, look, even leaving aside relationship tactics, anyone can see when he's around you that he absolutely adores you. And the feeling's mutual. Listen to me, you met the one when you were eighteen years-old. I have a feeling, and my gut tells me I'm right, Rory is my future brother-in-law because you are going to marry your high school sweetheart. And that's incredible. You've got him back and this kid Alisdair, for all you know, might have no interest in Rory anymore. They dated for a few weeks, months, whatever, in their first year of college. That's hardly unusual! You're with the guy you love and who loves you. Don't freak out about anything. It's not like you!\"\n\nI smiled, \"Thanks, Evan. Are you going to finish those fries?\"\n\n\"Yeah, I am. Touch them, and I'll break your fucking fingers, dude.\"\n\n***\n\nJust after midnight, and the Auld Lang Syne, Rory and I slipped into my bedroom at my parents' house. I turned the main light on, walked over to my bedside table, turned the lamp on and Rory clicked the main light off. The room was bathed in its soft glow, flowing over the contours of Rory's face as he walked towards me. We kissed each other deeply and my hands went round his waist, pulling him in closer until he was pressed tightly against me. His trailed awkwardly up my back until they were on the back of my neck. \n\n\"Happy New Year, I suppose,\" he said, as we separated. My right hand snaked round to his front and went down to the crotch of his trousers, massaging his building thickness through the fabric. I pulled him back into me for another kiss and began slowly shuffling him backwards towards the bed, until he crumpled over onto it and I lowered myself in with him. I was hard and began to unbutton his shirt. When it had separated along the buttonholes and fallen on either side of his body, I stepped back and, looming over him, pulled my red Christmas sweater off and shucked it to one side. I was completely topless as I leaned back in towards him, but just before our lips locked again, his right hand came up to my chest and stopped me going any further.\n\n\"Wait,\" he said. I leaned back, supporting myself with my arms on either side of him. Beneath me, those big beautiful dark eyes of his were swimming with an emotion that even I couldn't decipher.\n\n\"What is it?\" I asked, softly, stopping down to kiss him gently on the side of his neck. But his right hand didn't go away and I was gently nudged back into my former position.\n\n\"I've just realised something,\" he said, in some kind of half-whisper. \n\n\"What, baby?\"\n\n'I've just sort of figured out... it's just sort of hit me that this is the last time I'll ever have sex with someone different again in my whole life. I know the wedding was, technically, but I didn't... I mean, this is definite. There'll never be anybody else as long as I live. I'm just very happy. I wanted to say it. I wanted you to know.\"\n\nI felt my lip quiver and my chest contract. My hand went round the back of his neck and pulled him in towards me again. My tongue slipped into his mouth possessively. His torso crushed his right hand, still there, into mine. Mid-kiss, I began to unbuckle his belt and yank off his trousers.\n\n\"Me too, Rory,\" I said, flipping him over onto his front, pulling off shoes, socks and boxers and pulling his ass cheeks apart. I began to lick his asshole, lubricating it up with my spit, by the time he was wet enough for me to slip a finger in there I angled myself until I was on top of him and I kept fingering him as I whispered in his ear: \"I love you so much and I will ask you to marry me one day.\"",
        "\"Just make it special,\" Rory quipped. \"How do you it may as well be a surprise, since we already know what the answer's going to be!\"\n\nI made love to him twice that night and again in the shower in the morning. At four a.m., as I was riding him bareback and his legs were draped over my shoulder, I planted two hickies on him as he bit down on the pillow, half-laughing and half-groaning at the juvenile gestures, and nervous of waking my parents up, four doors down. The next morning, I watched him as he slept and I pulled him, naked, into me, nuzzling my dick against his ass. I felt contented as he half-stirred next to me and that feeling lasted for the next week until it was time to separate. We drove together to London with Evan, who dropped Rory off at Heathrow for a flight north to Edinburgh. I felt nauseous as he pulled away from me to pass security. He turned round and smiled encouragingly, but there was pain in his smile as I think he realised just how upset I was to be away from him. We started texting by the time I was back in Evan's car and for the first few weeks, we kept up the schedule we'd agreed upon. \n\nBut the thought of Rory returning to halls adjacent to his ex-boyfriend gnawed away at me, despite Evan's words, Robbie's texts of encouragement and Helen, my Northern Irish flatmate's, joy that this guy who she'd never met had gotten back together with me. I guess my friends had heard so much about him that they couldn't help but know how excited I'd be that we were a couple again. But the images of Alisdair being near to Rory were not helped when I began a stupid perusal of his Facebook page; the guy was quite goodlooking and he had that compulsively well-bred look that the British upper-classes, English, Welsh, Northern Irish and Scottish, can all simultaneously pull off. \n\nRory's visit to me in London put Alisdair right out of my head for the time being. The only way to describe Rory that week was radiant, that charm that he used so self-consciously to make people enamoured with him was on full display, he was the life and soul of the party, he was funny, he was charming, he was interested in everything people had to say. Within fifteen minutes of meeting him, Helen liked him more than she liked me. I jest. Kind of. The only fly in the ointment was my flatmate Pete, who was good friends with Daniel, the guy I'd ditched the second I ran into Rory in Edinburgh and who had taken it very badly, to my surprise. Pete was chilly with Rory, which I thought was understandable but pretty unfair. Rory affected not to notice for the first two days but after repeated attempts at politeness, his cold snobbery reared its defensive head again and he repaid Pete's coldness with similar behaviour. \n\nSexually, Rory and I were right back to where we had started, with me always on top, and even throwing in a few new moves from what I had learned in his absence, most of which brought him screaming or cooing into cum-splattering - and we had a 50/50 split on blowjobs and rimming. The sex was fantastic and Helen gave me the cheekiest wink in the kitchen when she'd woken up the sound of Rory and I going at it one morning, when we assumed they had all left for class. I smirked and winked back. If Rory was making noise while I was making love, then I was doing my job right. \n\nWhen we met in Leeds, a few weeks later, a city between London and Edinburgh, there were a lot of our old schoolfriends around for Robbie's birthday. Because of the number of people showing up, there obviously wasn't room at Robbie's halls and so Rory and I had booked into a cheap and cheerful Travel Lodge room near the city center. I checked in first and he arrived an hour later; I swooped him up into arms, feeling how cold his cheeks were from the February air, and kissing him on the lips, before giving him a little peck on the nose. It was going to be a messy weekend, which we were both looking forward to, since the whole group hadn't properly been together since A-Level results' night at the end of final year, but it was also nice to have a room to ourselves and to spend a few hours on our own. \n\nAs I caught up on a paper I had to read for class, Rory lay on the bed with me, his head on my stomach, stretched out and reading \"Great Expectations\" by Charles Dickens, one of my favorite reads. I stroked his hair with my spare hand as we read in silence and from time to time, I'd glance down from my pages to look at him, engrossed in his novel, his eyes intensely focused on what he was reading. I loved him so much and it'd be a wonderful feeling telling him that my uncle had given us his cottage to stay in for a few days at the end of semester, so we'd be going right from my trip to visit him in Saint Andrew's south to the cottage. It was the same cottage in which we'd once argued, spectacularly, about his eating disorder, but here's hoping this time round it'd go a lot better. I couldn't wait. Rory has a quality that I've always loved, in which once you've achieved total familiarity, total comfort, with him, you're always kind of hankering to be back in that state again. \n\nThat day in Leeds, I planned to have sex with him before we went to meet the others; it turned me on to know we'd been that close only moments before he turned up so prim, so proper, so well put-together, with everyone else.\n\n\"You know he nearly changed the ending?\" he said, from his spot on my stomach.\n\n\"Dickens?\" I asked, although it seemed a fairly fucking obvious question.\n\nHe nodded, \"They very nearly didn't get together in the end.\"\n\n\"Hmmm. It doesn't make sense,\" I mused, \"that they'd just meet up in that garden and then not get together.\"\n\n\"I don't think they did meet in the garden in the original ending, actually,\" Rory said, adjusting his head slightly, for comfort's sake. \"They met in Piccadilly, or somewhere in London, I think, and they bumped into each other by accident but nothing ever came of the conversation. They kind of just admitted they'd loved each other once and moved on.\"\n\n\"Fuck, that's a depressing ending, after reading the whole book to find out they couldn't make it work and his whole life had been a lie.\"\n\n\"I know. Some people think the ending he went for was a cop-out, a play for popularity,\" Rory said, getting up to pour himself a glass of water, \"but I think he made the right choice. It makes more sense and sometimes it's best to listen to people.\"\n\n\"It doesn't even make sense, though, that they'd not get together.\"\n\n\"I know, but in the original ending, Estella had re-married in the time they were apart. She'd found someone else.\"\n\nRory resumed his place on my stomach and re-opened \"Great Expectations\". I felt a slight twinge of irrational hatred towards Alisdair again, a guy I'd never met.\n\n***\n\nSaint Andrew's is a beautiful place, set north of Edinburgh in the magnificent Scottish countryside, somewhere between a fantasy of Westeros and a Sir Walter Scott novel, and in the two years I dated and visited Rory there, I came to love it deeply. It's small, insular, with an air of a town slightly unsullied by the world beyond. You could kind of believe that Prince William and Kate Middleton had been able to fall in love there and get to know each other without the whole world knowing their business and stalking them the whole time. People were nice there, I liked it and even the biting cold that blasted through there at the tail-end of February when I first set foot there just seemed to add to how stunning the town was in its own rugged isolation. I had driven up, since we would need the car to make the very, very long journey to my uncle's and it would help with me having to take so many clothes and books from my student house at the end of semester, and likewise Rory's. I love driving, so I didn't mind too much and it felt great to wrap my arms around Rory when I got there.\n\nHe took me towards the residential halls where he was living. \"Do you like it?\" he asked. \n\n\"The town is beautiful. It's so different to London. Dumb point. An obvious one,\" I said, looking at him as we walked through his gates. \n\n\"Good different?\" he pressed. \"Or just a factual observation different?\"\n\n\"Good different, dickhead,\" I smiled. \"It feels more like a college town than London does.\"\n\n\"Well, that's not hard.\"\n\nI rolled my eyes at his cockiness and he swiped us in. We walked up two flights of stairs and I outright laughed in derision when he offered to carry my weekend bag for me.\n\n\"Rory, there have been nights out when I carry you home! I think it's safe to say I should be okay with this bag!\"\n\nAs he was turning the lock in his bedroom door, the door on the opposite side of the corridor opened and a tall, good-looking guy with sandy hair and a soft Edinburgh accent stepped out: \"Hey, Rory.\"\n\nRory glanced over his shoulder, \"Hello, Olly. Olly, this is Sebastian. Sebastian, this is my friend, Olly.\"\n\nOlly shook my hand with a firm and confident grip. \"So, you're the famous Sebastian?\" he smiled. \"We've heard a lot about you.\"\n\nI shot Rory a smirk, \"Really?\"\n\n\"Oh my God, how embarrassing,\" he sighed.\n\n\"Yeah, wee Razza here never stops talking about you,\" Olly teased.\n\n\"You are both incredibly annoying. If Erica came up and I told her that, would you thank me for it?\"\n\n\"But I'm not as in love with Erica as you are with Sebastian. Who could be?\"\n\nI laughed. This was on the one hand very, very nice to hear and on the other it was hilarious to see Rory getting teased by someone who wasn't me. \n\n\"Don't you have class to get to?\" Rory retorted, with a smile he was trying to hide.\n\n\"I do. Good to meet you, Sebastian, and I hope you two will be coming out for a few drinks for the end of term, pal?\"\n\n\"Definitely,\" I nodded, along with Rory. As Olly left and Rory opened the door, he held up his hand, \"Don't. I can't even bear to look at what your grin must look like.\"\n\nI shuffled in behind him, \"No, no. Just nice to hear that you've such good taste, baby.\"\n\n\"You're so pleased with yourself. Kiss me.\"\n\nI dropped my bag and kissed him. His hand affectionately rubbed my lower back until I pulled away to take in his room - impeccably tidy apart from a slightly crumpled bed sheet and a few books strewn across his desk, which had a fantastic view out the window of the town and countryside beyond it. \n\n\"I really hate to leave you right after you got here,\" he apologised, picking up a notepad, fountain pen and a copy of a medieval prayer book. \"But this lecture is mandatory.\"\n\n\"Don't worry about it! I'll take a nap when you're gone.\"\n\n\"Please don't masturbate in my bed.\"\n\n\"Haha. As if I'd waste good cum when I have you back in ninety minutes.\"\n\nRory winked and kissed me, before sweeping out the door. I unzipped my jacket, kicked off my shoes, peeled off my socks, wiggled my toes as they enjoyed their newfound freedom after hours of driving and lay back on Rory's single mattress. Well, this was going to be interesting for the next two nights. But any possibility of a much-needed nap was shot to shit about five minutes after Rory left by a knock on the door, which I bounced up to get, fixing a polite smile on my face and trying to look energised. I answered it to a curvy girl with a cloud of long blonde hair, immaculately glossed lips and a cableknit top half encased in a gilet, with matching knee-high riding boots and beige chinos.\n\n\"Fuck me sideways,\" she exhaled in an accent so preppy it could shame Rory and Virginia combined, \"you must be the boyfriend. You are absolutely delicious! Hi, I'm Rory's friend, Tessa. I live on the floor above.\"\n\n\"Sebastian,\" I smiled, proffering my hand, which she took. I liked this girl. \"Good to meet you. Rory's not in. He just left...\"\n\n\"I bet he's gone to a lecture,\" she sighed, popping into the room and sashaying past me. \"Oh, he's so diligent I can barely stand how much I adore him for it! So, when did you get in?\"\n\nHer eyes, even though they were blue, reminded me of Rory's in a way, because they were, right there and then, full of total interest in the person they were focussed on.\n\n\"About fifteen minutes ago,\" I answered, closing the door behind us. \"I drove up, so it's been a long day, but Saint Andrew's is ... gorgeous.\"\n\n\"Isn't it?\" Tessa asked, with passionate earnestness. She pointed to the chair at Rory's desk: \"May I?\" \n\n\"Please!\" I said. \"And yes, it's a big change to London. I was just saying that to Rory.\"\n\n\"I'll bet it is. And you drove up? That must have taken ages! And Rory says you two are off to a little house in the countryside once term is over? I think that's such a sweet idea and it's so great that you're here. I hope we can all show you a good time. Everyone's just dying, and I mean dying, to meet you, darling. Especially, or except, Alisdair - fuck knows which way he falls on the spectrum of expectation! You know about Alisdair, I assume? Or have I just put my foot in an error the size of a black hole?\"\n\nI enjoyed Tessa's no-bullshit approach to conversation and I was actually relieved someone had brought Alisdair up, since I couldn't really ask any of Rory's college friends in case they either reported back to him and everyone else that I was jealous, or they were close friends of my rival's, and let him know.\n\n\"Yeah,\" I muttered, ruefully. \"I've heard of him. What's he like?\"\n\n\"Oh good! I assumed you would have heard about him and Rory, one way or the other, and God knows that if I went somewhere and encountered my boyf's ex, I'd want to be filled in on him. Well, Alisdair is, how do I put this, and I like him, you know, but he's not a patch on you in the looks department. Not even close. Photographs don't do you justice,\" she enthused, breathlessly, \"you are just a total hunk! I'm into my 1980s' lingo at the minute.\" \n\nI laughed and took a seat on the bed. \n\n\"It's more that I have slight difficulty in imagining Rory with anyone else but me, which probably seems egotistical and douchey, but it's true. I mean, romantically. It's just a bit weird for me.\"\n\n\"It was never very passionate, although a lot of people had thought they'd get together at some point, especially people on their course, which is where they first met because Alisdair doesn't live in our halls and didn't back in first year, either. But, anyway, they sort of fizzled out at the end of the year and didn't keep in much touch when they went home. They were beige, together, and Razzy glows more about you in absence than he ever did when Alisdair was standing right next to him.\"\n\nI was grateful to Tessa and I really warmed to her candor. She was completely forthright, no beating about the bush, and I liked that, but this was the second or third time someone had told me that that Rory and Alisdair had fizzled into nothingness and it made me feel uneasy. On a rational and mundane level, I knew that it was a good sign, because it suggested a total lack of passion. However, the other side of me worried that it all sounded like loose ends, a story without an ending, with no firm reason why they would never think of getting back together. I cannot adequately explain, even to myself, what had happened to me in the two months since Rory and I got back together but it was not good. I was so happy when he was next to me, and so relieved, that I had become innately and terrifyingly conscious that this contentment was fragile. I could not shake the feeling that he would leave me again and these feelings of nervousness and insecurity were so new to me, so out of character, that I was processing them badly. I could tell that Rory was aware of them, to what extent he took them seriously I did not yet know, but because we saw each other in the flesh so infrequently the only signs of irritation I'd picked up on were the occasional eyeroll over Skype, but that's transitory, difficult to pick up on, and even harder to question or discuss. It's only when you're next to someone that it's real and that weekend at Saint Andrew's was likely to be the one where the issue boiled over, or rather, came out into the open. I knew I had to say something to him, but I didn't know what words to use. Nor how justified I was. Or how I could confess insecurity to him when he had managed to gamely suppress any signs of resentment or insecurity towards me, after I had slept with about ten times as many people as he had during our separation.\n\nAs we got ready to go out that night, I was standing topless before I pulled a t-shirt and rugby sweater on; I caught Rory staring at me. \n\n\"What?\" I asked, fondly.\n\n\"Nothing. Your body's different, since the first time we dated. I noticed it at the wedding, when all kinds of lust took over us, remember? You're just completely ripped. I thought once you stopped playing rugby so regularly it'd go the other way, but, you are ripped. It's the only word for you. I'm just getting used to the difference.\"\n\nI was a bit embarrassed and smiled, looking down as I fidgeted with my t-shirt. \n\n\"Is that it?\" Rory asked, incredulously. \"No, 'You'll thank me when I'm fucking you' response?\"\n\nI laughed, but Rory didn't press the conversation and I could feel him getting slightly annoyed, or confused, with my behavior. En route to his friend Tessa's room, he kept up the flow of conversation. It lasted for about two minutes, but I'd heard him do this before. At a dinner out one evening, when we'd fought over his quarrel with Joshua Peterly. Rory could just keep going with inane pleasantries and while he wasn't anywhere near as strained as he had been that night, there was faint trace of effort in his voice as he tried to cover up something he didn't fully understand but knew existed. As we rounded the corner to Tessa's room, there was a guy waiting to go in, who had just knocked and was standing in a tweed blazer, a white shirt, trousers and expensive-looking shoes. His hair was combed to one side and he was holding a bottle of wine in the hand boasting his familial signet ring. I knew from his photographs on Facebook that this was Alisdair. He was standing next to a tall ginger guy in bright green linen trousers, a kid who had the expression of someone permanently surprised by life. \n\n\"Good evening,\" Rory greeted them, in his brightest tone, a clear sign that damage control had already kicked in. \"Chaps, this is my boyfriend, Sebastian Carson; he's visiting from London for the end of term. Darling, this is Alisdair Paisley and Boris Aronson. They're both on my course.\"\n\nAlisdair looked faintly wounded by how he had been introduced in comparison to me, which I took as a sign that his feelings for him were not quite dead and that any disinterest in the relationship had flowed from Rory, rather than him. Boris extended his hand politely, \"Ah, I didn't know Rory was seeing anyone!\" he said with artless honesty.\n\n\"Yep,\" I answered, shaking his hand, then offering mine to Alisdair, who took it perfunctorily and asked how my journey from London had been. The door swung open to reveal Tessa in a cocktail dress, \"Sorry, guys, I had my hair wrapped in straighteners when you knocked. Come in, come in! I say, Boris, nifty trousers!\"\n\nOver the next forty minutes, we were joined in Tessa's room by Olly, who I'd met earlier, by Tessa's next-door neighbor Rita, a half-Sicilian girl who was so beautiful that she could legitimately have passed for a model and who was also one of the sweetest girls I'd ever had the privilege of meeting, then by Colby, a muscular Australian studying German and Spanish who was Olly's best friend; they shared an acid, teasing sense of humor that was quite like my own. And Colby's girlfriend, Monica, who was over visiting from her year abroad at university in Dublin. As the two outsiders, Monica and I chatted for a bit while the others caught up on Saint Andrew's news, but they were all very polite, and Olly and Colby both made a real effort to include me in the conversation. A lot of questions about Rory's school days were asked and I responded with the funniest stories I could think of, including a very good impression (if I say so myself) of the girls Rory was friends with in school - \"Oooh, we've met Virginia,\" Olly said. \"Who knew someone that beautiful could be so evil?\"",
        "\"Virginia's alright,\" I countered good-naturedly. \"She has my boy's back.\"\n\n\"I thought that was your territory,\" Colby countered and the room laughed. But out of the corner of my eye, I saw Alisdair look down uncomfortably. It was the first Rory-sex-joke of the evening and he hadn't liked it. But if Alisdair was a bit put-out by quips about Rory's current boyfriend, I was silently beginning to freak out at the figure of his ex. Nothing could have prepared me for the experience of meeting him; this guy was perfect. If you'd asked me to write down a list of qualities needed in someone who Rory should be with for the rest of his life who wasn't me, I would probably have written down something that the police could've used to track down Alisdair fucking Paisley. To begin with, he was handsome, in the way I told you about, that \"Country Life\" model of good looking. He had hazel eyes and a trim figure. He was an inch or so taller than Rory, so shorter than me, but taller was something Rory liked, one way or the other. He was immaculately well-mannered, very funny, he was studying Theology just like Rory was, he was well-dressed and he was clearly well-liked by nearly everyone in the room, with the possible exception of Colby, who I caught looking a bit bored when Alisdair was speaking, and Rita, who didn't seem to know him that well.\n\nWhen Rory got up to get a drink and Alisdair was talking to him at the desk where everyone had set their bottles, they even looked right together. They looked like Ralph Lauren's idea of the perfect gay couple and when Alisdair made a comment about one of their lecturers and Rory laughed, I felt sick. At the bar after Tessa's, Rory had noticed how quiet I was, how much I was avoiding him, \"What is wrong with you?\" he hissed under his breath. \n\n\"Nothing,\" I whispered. \"I just want you to enjoy the last night of semester with your friends.\"\n\nHe looked at me like he knew I was lying and that night when we got into bed, we were both so drunk and so tired that we fell asleep without fooling around. The next day, we had lunch with Tessa and Olly, then Rory showed me around the town. Things felt strained but essentially normal, but that night, after dinner, when Rory made a comment about how small his bed was, I suggested we set up the blow-up mattress and I sleep on it. He looked at me with a mixture of cold and quizzical, then said, \"Sure.\" If I'd hoped he'd put up a bit more of a fight to have me in his bed with him, that response jolted me out of it. I imagine he'd been much more enthusiastic about who went there all the nights he topped Alisdair. We left Saint Andrew's the next morning, after Rory's multiple goodbyes with everyone, without having had sex the entire time we were there. We took turns driving and to this day I honestly couldn't tell you what we talked about for all the hours we drove. It must have been total inane froth, none of which was helped by the arrival of a text from Alisdair as we drove south.\n\n\"Fuck,\" Rory said softly, after he read it. \"Alisdair left a textbook in my room and it's all locked up. Oh dear, I feel really bad now.\"\n\nI couldn't even bring myself to ask why the textbook was in his room. I assumed it was an innocent reason, but at that stage I wasn't upset because I thought Rory and Alisdair were messing around behind my back, I was in a strange and unhappy mental place because I couldn't quite believe that I'd met someone that could be so well-suited to Rory, and who he'd see day in and day out for the next two years. I felt nauseous, too, as images of them having sex danced across my mind with a newfound vibrancy courtesy of actually having met Alisdair in the flesh. The same flesh that Rory had made love to, fucked, in a way he'd only ever done with me once. This wasn't good; I was being totally unfair and equally pathetic, but it was happening, that's all I knew. I felt awful and I was trying desperately to pretend that I wasn't. For the first time, it was me trying to pretend that we could fake it till we could make it and, as I was to discover, I wasn't half as good at it as Rory was.\n\nHis nerves were wearing slightly thin as the evening sun set in the background of my uncle's cottage. Our last visit there had been so disastrous or at least angsty in its drama that this trip was supposed to exorcise the memories of it, but the first night there did not nothing to lift the curse. Dinner was fine, but by the time we got into bed, I knew something was wrong. Rory lay underneath me and we were going through the motions of preparing for sex, because if we didn't have it on the third night in a row we were together, we'd have to admit something was wrong and I could not face the prospect of having to say anything so weak and stupid to him as how I was currently feeling. But, to my total humiliation, I couldn't get hard. Rory pretended not to notice for a while, then he began to jerk me off, which didn't work and prompted him to go south to coat my limp dick with his spit. His movements were frantic, wantonly dirty, ineffective. I stayed completely flaccid and I was mortified. I couldn't get the image of him and Alisdair Paisley out of my head. As I looked at the top of his head bobbing up and down to no effect, I knew he was going to leave me. I knew I'd fucked up, that I'd been a dour, dull, boring cunt for the entire weekend and now I was soft or flat or whatever as a fucking pancake in bed with him. With me out of the way, he could have been banging Alisdair the last two nights and while I knew that on chronological grounds that wasn't true, given when they'd broken up, a tidal wave of self-loathing was crashing over me regardless of fact. I felt awful and eventually I pushed him off me.\n\n\"I'm sorry,\" I muttered, getting up out and off the bed. \"I'm sorry, I don't...\"\n\n\"Are you okay?\" he asked. \n\n\"Yeah. Don't be mad. Please.\"\n\nHe sat up in the bed to look at me, as I looked around for pyjama bottoms or boxers or something. I was the one uncomfortable with my own body and he was oblivious to his nudity; how was that for a role reversal?\n\n\"I'm not mad,\" he said, \"it happens...\"\n\n\"Has it ever happened to me in bed with you before? Ever? I'm usually nursing a semi when I begin to think of getting into bed with you. Fucks' sakes!\"\n\n\"You're tired...\"\n\n\"Just stop! Don't fucking patronize me, Rory, please!\" I shouted. \"Where are my boxers?\"\n\n\"Sebastian, this had better not be about what I think it is.\"\n\nHis voice was strained and I knew that one wrong move would unleash a lot of pent-up rage. I couldn't think though of the best way to play it, I just wanted him to tell me it'd be okay. \n\nI nodded and felt tears well up in my eyes. I was furious at myself, livid. Not because I would or should ever be embarrassed by crying in front of him, but because this incident specifically seemed so weak, so unjust and so deeply unattractive for him. \n\n\"I'm sorry,\" I whispered. \"I just can't....\"\n\n\"Alisdair?\" Rory asked, without any softening in his tone.\n\nI nodded. \"Yeah. You see, when I...\"\n\nBut Rory had leapt off the bed like an electric shock had shot through him and his whole body was tingling with rage. He flapped around, found his own pyjama bottoms and tugged them on in swift, terse, incompetent motions. He saw my underwear on the floor next to him and tossed them to me. I held them, buck naked and stared stupidly at him as he erupted in livid fury.\n\n\"Have you lost your fucking mind? Sebastian, have you gone mad? I dated him, briefly, months before you and I were even in contact again. Did you see anything flirtatious between us this week?\"\n\n\"No, not really, but...\"\n\n\"No,\" he corrected, still shouting. \"Not at all! Not, 'not really,' or 'not from you,' or 'not all the time,' or 'not from him.' Not. At. All! Have you any idea what it was like for me in London? Have you any fucking idea what it was like to go into that awful student house of yours then onto all those parties where the basis of probability indicated that I was probably near someone you'd had sex with? You couldn't even give me a fucking number when we talked about it in December; you couldn't even give me a fucking number! And now, you're so freaked out because I had sex with someone else, sorry, briefly dated someone else, that you can't get up and you've been so fucking weird with me anytime the thought of him crosses your mind and I can see when it does, you know, I'm not stupid. It's exhausting and it's not fair...\"\n\n\"I know it's not fair! But I can't help it.\"\n\n\"Try to!\"\n\n\"Rory...\"\n\n\"I have not once, not once!, brought up all the guys you took into bed in your first year and there are times when we're together where of course I wonder if I'm half as good as they are, but that's life, Sebastian. We broke up and life happened in the interim and it is so deeply and totally unfair for you to make me feel this bad, this disgusting, because my life happened as well. I am so angry at you. I'm so pissed off!\"\n\n\"Rory, will you please let me...\"\n\n\"I don't think I will. Now, either you are sleeping downstairs on the sofa tonight or I am, because I don't want to have to share a bed with you, me and your weird obsessive version of Alisdair. I'm so fucking tired. I had such a long term with so much work for class and just... Fuck it. I don't care.\" \n\nThat's the thing about kicking Rory over the edge, you never know when it's going to happen. I picked up a t-shirt, a pillow and walked out. He was glaring after me, his eyes crackling with anger and disappointment. As I reached the door, he asked, \"Are you not even going to put up a fight?\" But I was tired too at that point and embarrassed. I shrugged my shoulders to prevent my voice cracking if I spoke and went downstairs to the sofa, where I lay down and cried myself to sleep. I was single-handedly wrecking something I wanted so badly and when Rory came downstairs the next morning, he could have frozen water with the coldness emanating from him. He was so frigidly polite as he moved around the kitchen making breakfast for us. I lumbered upstairs to find some sweats. In the cold light of day, I was now a little annoyed at him for making me sleep on the couch like an old married couple squabbling in their twilight years and when I came back to the kitchen I had made up mind to say something to him when he burned his hand on the saucepan handle over the flickering gas hob. Instinctively, he turned to look for me as he hurt himself and that gesture, inconsequential and unthinking, reflexive and natural, meant so much to me. With equal instinct, I went over to him and guided him over to the sink to run his hand under cold water. I held it there, standing behind, pressed up against him and slowly brought my chin to rest on his shoulder. He didn't move his cheek to nuzzle against mine like he usually did, but he didn't pull away either and I felt the tension drain out of him. My balls were resting against his ass and I felt my dick begin to get hard.\n\n\"Jesus, Sebastian, now it rises.\"\n\nI laughed softly, \"Keep your hand under the water.\"\n\n\"I shouldn't have kicked you out...\"\n\n\"No, you shouldn't've.\"\n\n\"But I was angry.\"\n\n\"I am now. Keep your hand still.\"\n\n\"Did you sleep okay? Was it awful?\"\n\n\"Only because you weren't next to me.\" I paused. \"I cried myself to sleep.\"\n\nHe tried to turn to look at me, but I held him firm as the cool water cascaded over his hand. \"Let go,\" he commanded, softly. \"It's not that serious. Please.\"\n\nI released him and he turned to face me. I shrugged again, this time ruefully. \"It's true, I did.\"\n\n\"Sebastian, why?\"\n\n\"I can't explain why I'm so unhappy, Rory.\"\n\n\"Is it really just because of the thing with Alisdair?\" he asked disbelievingly, turning back for a second to turn the faucet off. I nodded. \"Sweetheart, I don't understand. Is it the thought of me having sex with him? The thought of me on top? Just dating someone else?\"\n\n\"The latter,\" I said, taking a few steps away and sighing. \"And you're right, it's ridiculous and it's totally unfair and I know it's stupid and illogical, and baby, I can't explain why I feel like this or why it's gotten to me so much. But you're mine and I adore you and I'm primal and dumb.\"\n\n\"What do you need me to say?\"\n\n\"You've already been completely wonderful, Rory. You've been more than loving, more than understanding, a better man than me.\"\n\n\"Sebastian...\"\n\n\"Rory, listen...\"\n\n\"No, you listen. I can't put into words how wrong you are to think that there could be anyone for me but you and if you think I'm better suited to Alisdair Paisley then that just shows that you don't know you as well as I do. You are perfect for me. You're the other half of my soul. And I'm Catholic, Sebastian, we take that kind of stuff seriously.\" A flash of a smile lit up his face before he pressed on. He swept over to the stove and, wrapping a towel around it, moved the saucepan of porridge off the hob and turned the gas off. \"You are everything. You're my boyfriend, you're my best friend, you're the first love, the last love, the only love. Alisdair is a nice guy, but that's it. You're the guy; you're my guy. You're definitely the one.\"\n\n=== From Rory's POV ===\n\nI wanted to ask him again, \"What else do you need me to do?\", but I worried that in his state of mind he'd construe every subsequent gesture as something done because he'd asked for it. In any case, this giant fool in the kitchen was the love of my life and I knew him better than anyone. It was time to take care of him and if I couldn't tell him, or yell him, out of how he was feeling, the only way to do it was to show him, all the time, that he was the one. He was being illogical and unjust considering his own behaviour, but saints are for praying to, not dating. Instinctively, I walked over to him, raised his head with my hands and kissed him. He took a second to respond and then pressed me up against the counter. Then, he pushed me off him abruptly and stepped back, \"Fuck me,\" he said, quietly, firmly, gazing into my eyes as he said it.\n\nThis was something I certainly had not expected. \"We don't... we don't do that.\"\n\n\"We did it once.\"\n\n\"And it was shit.\"\n\n\"If we are going to be together for the rest of our lives, we're going to have to mix it up a little, sweetheart, and I want you inside me. If you can do it with other people, you're going to learn to fucking do it to me. Got it?\" He pressed himself back up against me and I arched in towards him. His erection was throbbing through his sweats. \"Fuck me senseless,\" he ordered. \"I want to spend this whole day being your dirty little fuck-toy. I want you to pound in and out of me until my asshole is shaped like your bell end.\"\n\n\"Where did this come from?\" I asked incredulously. \"At least give me some warning.\"\n\nTruth be told, I was more than a little nervous about topping him again, but when he stepped away from me, yanked down his sweatpants and boxers in one go and yanked his t-shirt off over his head to then grab his dick and start jerking it, I thought I was going to pass out with lust. \"Please,\" he whispered, that old cocky tone of his that I was so in love with bubbling through into his voice. \"Please. Do me. Fuck me into next week, Rory.\"\n\n\"Wait...\"\n\n\"No fucking way. I don't want to lose this thing,\" he joked.\n\n\"I want to show you something.\"\n\n\"Unless it's pre-cum leaking out of your piss slit, I don't give a fuck.\"\n\nI took him by the hand and dragged him over to the table by the sofa where I'd left my iPad. I tapped in the pin and went into my photos, scrawling through to an album entitled J./O. I handed it to him, \"This is my wank bank,\" I joked. He scrawled through it; they were all photographs of him. He paused for a minute and looked up at me. \"I know it shouldn't seem like a romantic gesture, but I thought it'd help.\"\n\nHe shook his head in disagreement, \"I love that you have that,\" he said, and then flipped me back onto the sofa and launched himself on top of me. \n\n\"Aren't you going to be hungry with no breakfast?\" I giggled, as he began to pull my trousers off me.\n\n\"The only thing I'm hungry for is your ass, cock, cum and balls.\"\n\n\"Sebastian,\" I said softly into his right ear, \"I really am a little nervous about being on top again. I want to be good for you. As good as the others.\"\n\nHe hunched up and looked into my eyes, \"You'll be perfect, Rory. Just like you always are. Come on.\"\n\nHe took my hand and led me upstairs to the bedroom, where I stripped off and he dropped down to his knees to begin sucking my cock. Then as I kept stroking it, he pulled the lube from his weekend bag and coated my dick in it. He got down on all fours on the bed and pulled his ass cheeks apart, exposing his hole into total depravity.\n\n\"Fuck my cunt, Rory. I want to be totally dominated. I want to be your property.\"\n\nI'd have to have a soul of steel not to be turned on by the sight of that 6'4 wall of muscle and blond handsomeness, his erection jutting out proudly, angrily from between his legs, displayed in front of me, begging for it so unashamedly. And as I put my right hand on his waist, he turned to look over his shoulder: \"I'm your whore, Rory.\"\n\nI dived down and began to tongue his asshole, jerking my own dick as I did it. I had to stop once the amount of precum flying off it alerted me to an impending orgasm. \n\n\"Turn over,\" I ordered. He did. \"And spread your legs for me.\"\n\nHe put his hands beneath his knees and yanked his legs apart, giving me perfect access to his rosebud hole. I was down there for about ten minutes, addicted to the taste of his ass, a taste I fucking love. He was writhing above me, grunting and firing out a steady torrent of obscenities. I pulled away to climb on top of him to kiss him deeply; it turned him on further. \n\n\"You can't beat the taste of a whore's cunt,\" he quipped. \n\nI could see how turned on he was getting by the versatility we were displaying and I was, too. If you're going to do something, do it right. Get into it. It felt like all the ends we were still waiting to tie up, that it would naturally have taken this long to address with all the best will and intent in the world, were finally being resolved. I felt euphorically uninhibited with him, revelling in one of those swift turn arounds that happen in the best of relationships, I believe. I separated from the kiss and straddled his chest, grabbing his hair to pull him up to my cock. I fucked his face, and as he turned red and spit flew out of his mouth, his eyes rolled over with dazed animalistic happiness. After a minute or so, I pulled out.\n\n\"I have to fuck you now,\" I told him, and I kissed him again, as we both reached out to grab the lube. \n\n\"I'm so fucking happy,\" he purred, as I finger fucked his asshole and then brought the tip of my cock to his entrance. He arched his back and flung his legs in the air as I entered him, kissing him deeply. When the kiss broke and I was easing further and further into him, I reached down to twist one of his nipples, making him gasp with more pleasure. When my balls came to rest at his asshole, he looked at me and smiled, \"This is fucking perfect. Don't be gentle.\"\n\nI fucked him, it's the only way to describe it, until the point where his legs were bent so far back he had practically doubled over backwards and my tongue was permanently in his mouth, only leaving it to catch my breath.\n\n\"Is this perfect for you?\" he growled. \"Fuck, it's so good. Fucking stretch my hole. This is so fucking hot.\"\n\n\"I want you to ride me,\" I said, after a second's thought. \"I want to watch you fucking ride me.\"\n\n\"Anything you want, baby,\" he sighed. That big stud beneath me was soon on top of me as I lay flat on my back and he, after stuffing some lube into his hole with his fingers, lowered himself down on top of my dick and threw his head back sighing. He got into the rhythm of riding me in seconds, sliding back and forth, playing with my nipples and his, squeezing his chute and asshole around my cock as he went like a pro. I arched my head back and growled, swearing constantly. Shouting to the point I was thankful we were in the middle of nowhere, although in that moment I doubt I would have cared who heard us. I was totally lost in pleasure.",
        "Later, Sebastian pulled off me to get back on all fours as he'd been at the beginning and I entered him that way, sweat pouring off me. \"Fuck me like a bitch,\" he gasped hoarsely and I did just that until I held him firmly him place and erupted squirt upon squirt of cum up his passage. Resting on top of his back, I then pulled out and lay back, with my head off the side of the bed. \"Fuck my mouth,\" I begged. He did, getting up to stand over me and slide that huge cock of his into my mouth to fuck my throat like an asshole for all of the twenty seconds he lasted before spraying into my mouth and pulling out to coat parts of my face as well. \n\nWe lay next to each other in shattered exhaustion. The room wreaked off man sex and I couldn't catch my breath. \"That was fucking incredible,\" Sebastian said, after a minute. \n\nI laughed, \"It was, wasn't it?\"\n\n\"You're a fucking tiger,\" he smirked, rolling over to rest face-to-face next to me. \"Have you ever...\"\n\n\"Not like that,\" I said firmly. I raised my arm to let him nuzzle into my chest. He pulled the covers up as he came into me and we fell asleep like that, only waking up in the mid-afternoon, when we padded downstairs to get something to eat. The porridge lay congealed and unappetising in its saucepan and Sebastian made do with an enormous sandwich before I could tell he was getting horny again. He had me take him bent over the kitchen table, despite the fact that I thought it might start hurt. On our walk in the bracing chilly air that evening, when we didn't encounter a single soul, he turned to me and giggled, \"Your cum's still leaking out of my ass.\"\n\n\"You're disgusting.\"\n\n\"I fucking love sex with you,\" he smiled and he pulled me in towards him for a kiss. \"I fucking love you.\"\n\nBack at the cottage that evening, we had sex again, this time on the sofa as the fire crackled and a movie neither of us had much interest in played in the background. I rode him that time and we cuddled afterwards. \n\n\"I kind of like we've mixed the sex up a bit,\" I confessed. \"50/50 variance.\"\n\n\"Nah,\" he laughed, \"I say this just means we'll double the amount we're having.\" I dozed in his arms by the fire and I felt them tighten around me as I slipped into sleep. There was a lot we'd have to work on to make a long-distance relationship work, but I knew we'd made the right decision in getting back together and I was glad we'd had that fight. And especially that making up. Sebastian was the love of my life and the next year and a half until graduation were all about building on what we already had and taking nothing for granted. Life without him would be impossible. As I began to sleep, I'd already made up my mind to mix things up further by being the one who'd ask him to marry me, not the other way round, on the day after our college graduation."
    ],
    "authorname": "sebastiando",
    "tags": [
        "romance",
        "gay romance",
        "jock",
        "preppy",
        "bareback",
        "outdoors",
        "boyfriends",
        "gay love",
        "rimming",
        "british"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rory-and-sebastian-ch-20"
}