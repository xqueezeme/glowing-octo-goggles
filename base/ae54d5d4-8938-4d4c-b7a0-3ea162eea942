{
    "title": "Beyond the Were War Ch. 04",
    "pages": [
        "\"The dogs of war don't negotiate\nThe dogs of war won't capitulate\nThey will take and you will give\nAnd you must die so that they may live \"\n\n -Pink Floyd, \"The Dogs of War\"\n\n Gila Pack Territory\n\nNear the northern border\n\n Maria woke up quickly from her sleep, her muzzle rising from where it had been resting on Caleb's lap. Her ears were up, and she was searching about. The movement woke Caleb up and he shifted into wolf form, her alarm through the bond had been enough to wake his protective instinct.\n\n \"What is it?\" Caleb was also searching but heard nothing. \n\n \"Small engine, too small to be a car, probably all terrain vehicles. Coming our way fast.\" Maria's eyes were focused to the south, but Caleb didn't hear anything. \"Come on, let's get away from the cliff and get a better look.\" They both moved off silently to the southwest, heading for a rocky crag with plenty of places to hide. They shifted to human form when they reached his backpack and changed into clothes; Caleb turned away from her, knowing she would be self conscious over her body and its scars. When they had shorts and T-shirts on, he grabbed the pack and they walked up until they found a good spot to sit and wait.\n\n Caleb mind linked with the Pack members that were stationed around them, but no one knew anything or heard anything. It took ten minutes for an ATV to appear in the distance, with two riders. Caleb glanced at his mate. \"How the heck did you hear them that far away?\"\n\n \"I spent two years in a basement with occasional light and nothing to do. My only defense was my hearing. My wolf couldn't develop other things but our hearing is outstanding. I could hear everything that happened in that house.\"\n\n \"Didn't they know you were listening?\"\n\n \"I never let on I heard anything. Most of the times, I would lie there and not move, because moving meant I was healing and healing meant I could be used again. Focusing on what they were saying became my way to keep from going nuts. I would hear, catalog and remember everything. I knew if I ever got out I needed to be able to bear witness to what these guys did. Along the way I learned their deepest secrets.\"\n\n \"I just can't believe they would be so unconcerned with you.\"\n\n \"Well, they really didn't understand just how much I heard because they couldn't hear it. The house was a safe house and party house for upper level Cartel members. They said a lot of things they shouldn't. I don't think they thought I would ever leave there alive so they didn't guard themselves or what went on there.\"\n\n \"So what did you learn?\"\n\n \"Everything. Names of members and their duties. Phone numbers. Addresses. Safe houses. Distribution centers. Smuggling routes and timing. I heard it all and I kept it up here.\" She tapped her head. \"I know more about their operation than Juan does.\" \n\n Caleb recognized the ATV just as the scouts mind linked with the info. \"Our Alphas are coming. Robert and Renee Hastings. They are good people, you are safe with them. Robert was the wolf who came down the stairs to get you out of that place. Come on, I'll introduce you.\"\n\n Robert had just stopped as they made it off the rocks. He got off and gently lifted Renee off and set her beside him. Caleb waited for them to brush the dust off before he approached, his hand gently urging his mate forward. \"Alpha Robert, Alpha Renee, may I introduce my mate Maria.\" \n\n Maria stayed close by his side, nervously shifting from foot to foot as she felt the power of the Alphas before her. She didn't look up, her mother once told her that looking senior wolves in the eyes was a challenge and she didn't want to get in trouble. \"Thank you for bringing me to your Pack.\" When nothing was said, she looked up nervously. \"I'm sorry, I didn't grow up in a Pack, I don't know what I'm supposed to do.\"\n\n Renee walked up to her, slightly limping still, and put her hands on her shoulders. \"Welcome Maria to the Gila Pack.\" She gave her a hug, leaning in to get a good sniff of her neck. \"Since your mate is Pack, you are too. I'm so happy you are healing up and for Caleb, I just didn't expect you would have claimed each other so quickly!\"\n\n Maria's face turned deep red as she pulled the T-shirt over the mark that was at the juncture of her neck and shoulder. Caleb spoke up first. \"Yeah, Alpha, I didn't mean to do it so soon either but it happened and I couldn't be happier to have my mate at my side.\"\n\n Robert stayed back, he could smell how nervous she was and with everything she went through he didn't want to stress her more. He'd let her come to him. \"Congratulations you two. I'm happy to see you up and about, you gave us quite a scare.\"\n\n \"Thank you Alpha. I don't remember much of you, but I remember how my wolf settled down and felt safe when you got to me. I hadn't felt that since my father was alive.\" Robert smiled at her, sending warmth over the pack bond that was now formed since she had mated Caleb.\n\n \"Well, I meant to get you back home, and Renee can't run yet so if you can go with her, I need to speak to Caleb for a bit while we run home.\" Caleb went to say something but stilled at a look from his Alpha- there was something else going on.\n\n Turning to his mate, Caleb smiled and said, \"That's a good idea, Maria. You can get to know Renee on the way back and see the pack doctor to make sure everything is OK. I will be an hour or so behind you.\" \n\n Maria thought about it, she WAS hungry and Renee made her feel safe too. The run out here had been painful, riding back sounded better. She needed some time to think about this whole mate thing too. \"OK, I like the idea of being back before sunset. Will you come see me when you get back?\"\n\n \"Of course, I will be there before you get to bed. I love you Maria.\"\n\n Maria blushed, and turned to Renee who took her to the ATV and started it up. A minute later, they were on their way back.\n\n \"I'm sorry about this, Caleb, but I have to get her back to the Pack lodge and I needed time to speak to you without her around. She's been targeted by the Cartel, and they know she is here. Juan wants her back.\"\n\n Caleb let out a strangled growl before shifting into his wolf form and taking off after his mate. Robert expected this, so he shifted as well and chased after him. He let him exhaust himself in a sprint, then pulled alongside when his pace dropped to something more sustainable. \"We got information that the Cartel is planning to attack our Pack in the next 48 hours to get her back. They won't succeed. She is Pack and we protect our own.\"\n\n Caleb growled. \"Why would they care about her?\"\n\n \"We don't know, but he's spending a lot of money and hiring a lot of mercenaries to get her. It's a kidnapping plan, not an execution. He wants her alive.\"\n\n \"He will never get her. She will kill herself first.\"\n\n \"Why do you say that?\"\n\n \"When she saw me this afternoon, she thought I was one of them at first. She turned around and tried to jump off the cliff.\" It was silent for a while.\n\n \"So how did you stop her?\"\n\n \"I didn't. Her wolf took over because she knew I was her mate. I grabbed her neck just before she fell. I came so close to losing her, I'm still shaking when I think about it.\"\n\n \"Hell of a way to stake your claim on her.\"\n\n \"Yeah, she's scared and thinks she doesn't deserve love, that she has done terrible things. I'm making progress, but it will be a long time before we fully mate. I think she will freak if I go to my human form in bed with her again. She doesn't mind my wolf form, though.\"\n\n \"Keep using that then. Trust takes time to build, her wolf is on your side so that should help.\" They loped along in silence for a while, eating up the miles back to the house.\n\n \"Alpha, there's something else you should be aware of. She heard a lot when she was held in that basement, far more than they would know or suspect. If they knew she had that kind of information, they would kill her on sight.\" They could see the lights of the pack house in the distance. \"Where am I moving her to until this blows over?\"\n\n \"You aren't. She will stay at the pack house, and when the attack comes she can go to the safe room.\"\n\n \"Why wouldn't we hide her somewhere?\"\n\n \"Well, we can't protect her anywhere else with the numbers we can here. And the second thing is we WANT them to attack us, at a time and place we know, rather than when we don't. We know who the mercenaries are, what they are bringing and when it will be. We're taking those fuckers on, and they are dead men as soon as they cross into our territory.\"\n\n \"What about the leadership?\"\n\n \"Let's get past this attack first. I promise you though, if we capture anyone who was in on the abuse of your mate you two will get first crack at justice.\"\n\n Gila Pack House\n\nNew Mexico\n\n Renee helped Maria off the ATV and walked up from the driveway to the house. \"This is the main Pack House, it contains quarters for the Alphas, Betas and other senior leadership in the east wing. The west wing is administrative offices, meeting rooms and the like. The north wing contains bachelor quarters for the unmated wolves, guest rooms, and recreational facilities. The center portion has a dining hall and kitchen, along with the Pack meeting room. Since your mate is a Beta, you will have rooms here.\"\n\n \"This place is HUGE! How did you hide it during the war?\"\n\n \"In plain sight. It was a private timeshare resort according to all the paperwork and tax records. They just didn't know that all the timeshare owners were wolves. The Pack stayed out of the war as much as they could, and we are remote enough that we escaped notice.\" Renee wished their pack had been able to do that, but there were too many ties to the community back then and they were found out. She gave her a quick tour, ended up in the gardens behind the house. \"This is my favorite place to relax.\" Renee walked around the cactus garden that bordered a large pond hidden under a Japanese pagoda structure. \n\n Maria caught movement in the pond, moving to the edge she saw dozens of brightly colored large fish swimming about in the shaded waters. \"They are so beautiful!\" She watched as different ones swam by, some red and white, others red white and black, yellow, silver, black and white... no two were alike. The smallest were the size of her hand, while the largest were as long as her arm.\n\n \"They are koi, Japanese carp. Bred for their patterns, but I find them to be very relaxing to sit and watch. Here, take a handful of food and toss it in.\" Maria took the pellets and tossed them in the water in front of her. Immediately every fish in the pond made a beeline for her, fighting with each other in their haste to get the evening treat. Some almost came out of the water as they tried to climb over each other to get at them. \"Take a few pellets and hold them in the palm of your hand right at the water level.\" She did, and a huge yellow koi swam over and started to eat out of her hand, his mouth almost big enough to suck her hand into it. \"That's Sunny, she's my favorite. She'll give you a kiss if you lean over.\"\n\n \"I'm not going to get mated and then kiss a fish!\" She pulled her empty hand back out and took the disinfectant wipe Renee handed her. \"They are so beautiful.\"\n\n \"Come on up here, we can keep an eye on them while we eat dinner.\" She led her to a platform in the back which had a half dozen round tables, one of them was set with two dinners. \"I figured you would be hungry so I had dinner brought up here. We can sit and I can answer any questions you have.\" Maria was so hungry, she didn't speak for the first five minutes as she devoured the Tex-Mex spread before her.\n\n When she looked up at the amused face of her Alpha Bitch, she realized that she had been stuffing her face and ignoring her hostess. Her face turned red. \"I'm sorry, I was just so hungry...\"\n\n \"It's all right. I imagine this is quite a change for you.\" Maria looked scared for a moment. \"You don't have to go through what happened, the DEA sent over files and we have a good idea already. I just wanted you to know that our Pack is here to help you through this any way we can. If you feel like talking, come to me or any of the friends you will make. I know some things will be difficult to talk to your mate about, talking to another woman may help.\"\n\n Maria sat there thinking for a moment. \"My mother died before we could talk about what it meant to be a wolf. As a half-breed, a null, my Dad says she didn't know if I would ever shift. We stayed isolated during the war, and you are the first werewolves I've met outside of my Mom. So now.. I don't know anything. I don't know enough right now to ask questions.\"\n\n \"You will have them, though. Your mate is a good man, he will help you through the changes.\"\n\n \"I don't even know what it means to have a mate. This,\" she said touching the scar on her neck, \"happened when he grabbed me. I thought they had caught me again, that he was one of them, and I was going to kill myself. My wolf took over right before I could jump. She didn't want to die, she grabbed on to him and he saved her.\"\n\n \"Of course he did. Your wolf is also you, but your wolf sees things a little different. She recognizes her mate by his scent, and her instinct is to claim him and to be with him. Your human part was being self destructive so she took over to save you.\"\n\n \"So now he owns me or something?\"\n\n \"Well, he will be very possessive and protective of you, but it isn't ownership. He and his wolf love you and want to make you happy. He would cut his heart out before he would hurt you. And do you know what? You are starting to feel the same way about him.\"\n\n \"I am not!\"\n\n Renee laughed. \"I suppose that's why you only settled down in the clinic when he was with you. Your nightmares were so strong while you were out he had to climb up on the bed with you and hold you to stop them. Your wolf recognizes him, and is comfortable with him because she knows he is her other half. It's why you didn't freak out when he pulled you up, and why you were calm enough to fall asleep in his lap today. Search your feelings, you know it is true. Deep down, you trust him and you want him. That is the nature of the mate bond you have formed.\"\n\n Maria sat back and closed her eyes for a moment. \"He makes me feel warm inside, and safe. Other men make me nervous and afraid, but he doesn't.\" Renee just smiled. \"And... he's hot. I couldn't help peeking when he changed.\" She giggled and her face blushed as she thought about how her eyes had been so close to his privates when she was had her wolf head on his lap. He smelled so good, and it was all she could do not to stare. Or lick it to see what it tasted like. \"So how does mating work?\"\n\n \"Well, for two werewolves it is pretty simple. You recognize each other by smell, then mark each other by placing a bite on each others neck. That allows you to communicate by mental bond. The final step is to bite each other during sex. That opens up the full bond, you will be able to sense each other's thoughts, emotions and feelings. You will in effect merge minds with him, and for the rest of your lives you will be together.\"\n\n \"I don't know if I can love someone... you know, physically... after all I've been through. Every time I think about it, my mind is overwhelmed with memories, with pain, with humiliation. They've ruined me.\" She looked down at her half-eaten food, the tears coming to her face.\n\n \"It won't be easy, but you will never heal without the bond being complete. Your wolf will help you, she knows what you need. Your mate is patient, he will wait for you.\"\n\n \"I don't deserve him. He deserves something more than... this.\" She looked down at the scars that covered her body.\n\n Renee reached over and held her hand. \"Luna does not make mistakes. She gives you not just the mate you deserve, but the mate you need.\" Reaching up to wipe a tear away, she continued. \"The last two years for you has been horrible, but you have your whole life ahead of you. You can't let your past ruin your future. And he,\" she said while looking out to where the two wolves were making a rapid approach, \"is your future.\"\n\n Maria felt her insides warm as she watched the pair of wolves running towards them. The larger wolf shifted into human form at the edge of the garden and rushed in to pick his mate up bridal style. \"I have something to give you before you leave in the morning,\" Robert said with a grin. He said, \"Excuse me Maria,\" then turned for the doors.\n\n Renee reached a hand down just enough to cup his balls. \"I don't think my gift is ready yet.\"\n\n Robert didn't even slow down as he captured her lips with a short kiss. \"I'm pretty sure it will be ready by the time I get my gift unwrapped.\" Maria giggled at the Alpha pair as he carried her inside. They were clearly in love with each other and it made her long for someone like that. Her stare was interrupted when a cold nose pressed against her neck.\n\n \"Aiiee! Caleb! That's cold!\" Caleb tilted his wolf head to the right, his tongue lolling out as he panted from the exertion of the long run home.\n\n \"Marie, I'm going to go inside and get something to eat, maybe some dessert for us both. Will you wait for me here?\"\n\n \"Yes... can you bring out a juice for me? I just want to sit and watch the fish for a few minutes.\" Caleb trotted up to the house, changing into human form at the doors. She checked out his firm backside as he reached into a box containing clothing to get himself a T-shirt and shorts. Yes, she had a fine man right there.\n\n \"You know I can hear your thoughts now,\" he said with a grin. Marie blushed and turned away, walking to the side of the pond and finding the container of food. Maybe the fish could distract her from the feelings she was getting, feelings she wasn't comfortable in acting upon yet. He returned five minutes later with a huge sandwich, two pieces of cherry cheesecake and two large glasses of orange juice. \"Will you join me, love?\"\n\n Maria got up but couldn't bring herself to get closer than across the table from him. She set herself down in the chair, sitting so far back she had to lean forward to get the juice. \"I'm sorry... I just...\"\n\n \"It's OK. I'm just happy to be with you. Would it be easier if I changed back to wolf form?\"\n\n \"Yes, but not yet. I'm doing all right, I'm just skittish. Men around me haven't been good for me lately.\" She drained her juice and then picked up the cheesecake. \"Oh, man... this stuff is good!\"\n\n \"Julie has been on a baking kick lately. She ran the kitchens in our old Pack, and has gone a little nuts since she got to the pack house. She can't get over the size of the kitchen!\"\n\n \"What was your old pack like?\"\n\n \"It was... brutal. The old alpha ruled by intimidation and did what he wanted. I was so glad when Renee killed him.\"\n\n Maria looked shocked. \"Renee? Alpha Bitch Renee who I just ate dinner with?\"\n\n \"Yes, she's quite the fighter and a great leader. We were all so happy for her to find Robert. She got a second chance mate, something few wolves ever see. Her first mate was killed just a few days after they mated, leaving her pregnant with twins. Robert lost his mate a long time ago. They make a good couple, don't they?\"\n\n \"Yes... I didn't know that she had been through so much.\"\n\n \"That's not the all of it, but she's happy now. A strong Pack starts with a good Alpha pair, that sets the tone for the entire group.\" He looked down to see that all the food was gone and caught a yawn when she wasn't looking. \"I think it is time we get you to bed. I'd like to have you stay with me in my room, but if that makes you uncomfortable I can sleep outside the door.\"\n\n \"I can't be that close to you, but you can sleep in the room in wolf form. I think I can handle that. Just don't scare me by waking me up with you naked next to me.\"\n\n Caleb laughed. \"Yeah, that didn't work so well. I still have the bruise from where you kicked me.\" Maria put a shocked look on. \"That was my fault, I curled up by you in wolf form and shifted during the night. I'm actually impressed that you were able to take me out so quickly even while hurt. You're stronger than you think, Maria.\" He stood up and collected the dishes to take back in, then they walked to the house. ",
        "They stopped at the kitchen, then went to the wing where Caleb's room was. Maria became more and more nervous as they went, and Caleb could pick up on it. \"What is it, love?\"\n\n \"It's too much. Too many people, the walls are too close, the rooms feel like they are collapsing on us.\" Caleb turned around and led her back outside. \n\n \"I should have thought about that. After two years locked in a basement, you probably want to see the stars at night. I have the perfect place for you.\" He led her to the corner of the garden to a pergola, below it four cables suspended a queen size bed covered with pillows, gently rocking in the breeze. \"People sometimes use this to nap, but it will be perfect for you. There is an outdoor shower and bathroom right back there, if you start I'll find you some clothes and change the sheets for you.\"\n\n Maria smiled, this was PERFECT. She entered the bathhouse, taking a hot shower for the first time in years. As she washed the grime off her skin, uncovering the scars and bruises below, she thought back to what Renee had told her. It was time for her to live. Maybe even love. She felt clean and safe again. She dressed in the pajamas that had been left on the table just inside the door and slid on the flip flops with them. By the time she got back out, the bed was ready and she climbed in. It was kind of like a hammock, but she could see the garden and the stars starting to come out in the twilight. Caleb disappeared into the bathhouse and she listened to the sound of his shower. In the distance, a wolf let out a howl, then another answered it. She snuggled down into the covers as her wolf trotted out and laid down under the bed.\n\n She tried to sleep, but her wolf wasn't letting her. Her wolf wanted her mate. \"Caleb?\" He looked up at her. \"Can... can you come up here with me?\" She thought he grinned before he jumped up on the bed, starting it to rock. She opened the covers so he could lay down in front of her. Pulling them back up, she hugged his chest and buried her face in the fur on his neck. She quickly fell into a deep sleep.\n\n Cartel Operations Center\n\nNew Mexico\n\n \"Juan, the preparations have been made. The team will be ready to assault the pack house at noon tomorrow, as scheduled.\" Ramon was nervous, Juan had been paranoid about a potential traitor in the ranks since their safe house had been raided. He looked like he hadn't slept much.\n\n \"Good. I want you to send an emissary to meet with their Alpha at 11 am tomorrow. Give them one chance to hand her over, and if they don't we attack as scheduled. Make sure it is someone we can afford to lose.\"\n\n Gila Pack House\n\nNew Mexico\n\n Anna stood nervously before the door. After failing to catch the car speeding off with her mate, she had returned to the main house and started looking for answers. She asked every Beta she could find for his name, but the answer was the same- it was not their place to tell her. She was not going to let her mate slip through her fingers, though. That was why she was standing here, waiting for the sounds of lovemaking behind the door to end so she could interrupt. She could hear the moans, the screams of ecstasy, the slap of flesh against flesh, and it made her jealous. This was what she had always wanted for herself, someone who would love her like that, who would be made just for her.\n\n She waited silently for half an hour before she heard someone get off the bed and go into the bathroom. Now or never, she thought. She knocked on the door. \"Alphas? It's Anna. May I have a quick word with you please?\" She waited patiently, and soon there was a click of the door and Renee stood there in a robe. She smelled of sex and sweat and happiness.\n\n \"Come on in, Anna. What can we do for you?\" Robert walked out of the bathroom, silk boxers on, his strong build making for a dominant display.\n\n \"Alphas, I found my mate, but he left before I could see him.\"\n\n Robert walked over and cupped her face, smiling warmly. \"So that was why you were pestering my Betas all night.\" Anna lowered her head, embarrassed. \"I couldn't give you his name for a few reasons. First off, he is involved with us in some very important business and I can't have him distracted or interrupted. Second, he is human.\"\n\n \"You should know that this complicates mating quite a bit. It is very difficult for the wolf to hold back, but we have laws about this,\" said Renee. \"The last human we brought into the Pack was Linda Remington. Andy is a strong wolf, a Beta, yet he still defied Alpha command and mated without permission. He was kicked out of his old Pack for that. I'm sorry, we can't just turn you loose on him.\"\n\n Anna sighed; everyone knew about Andy and Linda, heck, it was on live TV. Her wolf was impatient, though. \"You won't keep him away from me, will you?\"\n\n Renee gave her a hug. \"Of course not, we just have to take things a lot slower and in a different manner than if he was a wolf. You can't just jump him and take him where he falls, as much as your wolf wants to. You have to get to know him as a person, get him to love you enough to agree to the mating, and the change if he wants that too. It could take months before you are fully mated.\" Anna started to shake, her wolf did not like the idea of her mate being out there, unmarked and unclaimed, and out of her arms. \"We will introduce you the next time he visits. His name is Enrique and he lives near El Paso. You will be allowed to date him if he wishes to do so, but those dates will be supervised discreetly. If you both come to us and ask for permission, we will give it to you, but he also needs to get permission from a human judge. To do so otherwise could expose you to charges of unlawful turning, and that could be a death sentence.\"\n\n Robert brought them both into his strong arms. \"We want this to happen for you, Anna. I command you not to bite or attempt to turn your mate until you have our permission to do so. Do you understand?\"\n\n \"Yes, Alphas, I understand I cannot bite or attempt to turn my mate without your permission.\" She hugged them back, her wolf basking in their attention. \"When can I meet him?\"\n\n Robert stepped back. \"We have to get past some things in the next few days before it will be safe to bring him here. If that doesn't work, we will get you to him. We won't stand in the way of you getting to know your mate. He is a good man and a friend to the pack, I would be honored to have him become your mate.\"\n\n Renee turned and walked her to the door. \"Enrique was born in Mexico and emigrated here as a child. His parents are dead, he lives alone in an apartment and works for the Government as a computer expert. He is single and there were no signs he is dating. He's not a fighter in the conventional sense, but in a more modern way he is a strong warrior. Go back to your room and dream about your mate, and figure out how you will handle the whole dating thing.\"\n\n \"Thank you Alpha Renee. Travel safely, and have a good visit with your old Pack.\"\n\n Renee closed the door and leaned back against it. \"They're dropping like flies, aren't they?\"\n\n Robert laughed. \"Yes, I think we need to get started on a Pack nursery soon. Our twins are just the start of a baby boom.\" He shucked his boxers and walked to the bathroom. \"I need a shower, why don't you join me and I'll get you cleaned up for bed?\"\n\n \"Why not?\" She tossed her robe onto the chair and walked into the shower behind him. He moved back out of the warm spray, allowing her to rinse off. Grabbing a washcloth, he put some of her soap on it- scent free, of course, since Werewolves hated strong smells- and began to wash her back. She quickly relaxed under his caresses as he finished her shoulders and arms and moved down to her legs. She leaned forward, her arms against the front wall, as the cloth worked its way back up to the junction of her legs. She expected him to linger there, but he cleaned it and kept going up. He moved it up her sides to her shoulders again, then back down. When he got to her tender breasts she thought he would linger there, like always, but he moved further down. He let the washcloth drop when her stomach was cleaned, his fingers splayed over the baby bump that was becoming more prominent now. He gently turned her around and sank down to kiss her belly. \n\n \"I can't believe how my life has changed, love. I have a mate again, I have babies on the way, my Pack is strong and getting stronger every day. Luna has truly blessed us as second mates.\" He pressed his cheek against her stomach, his hands wrapping around her waist as he began to cry. \n\n Renee hugged him to her. \"Yes, she has. There is a part of me that will forever be empty where he was, but there is another part I didn't know about that is now full with you. My babies gave me a reason not to kill myself, but you have given me a reason to live. I love you, Robert.\"\n\n She returned the favor, washing him gently, before they returned to the bed. They fell asleep entwined in each other. \n\n El Paso, Texas\n\nEnrique's apartment\n\n The alarm woke him at six. Enrique yawned, his flight had gotten in late last night and by the time he caught up on emails he only had a few hours to sleep. He dressed quickly, work would be veryi important today. Grabbing some chocolate donuts and an energy drink, he heading out to his car and drove to the base.\n\n He played with his badge as he walked into the non-descript building that housed the El Paso Information Center. It was a nervous habit, and he was right to be nervous. If anyone figured out what he was doing, he would be interred at a CIA black site before he could blink. He had too much access to too much information to even go to trial, they'd probably just make him disappear. It didn't matter, though- he was close to getting his revenge, and his new allies were strong enough to take Juan down.\n\n As he sat at his console, he went through the motions of his normal job, occasionally putting in the codes for the searches involving the attack on the Gila pack. He didn't get anything until after nine, but what he got was exactly what he was looking for. He didn't try to sneak anything out, he had a photographic memory and it wasn't like they needed proof. It was better just to move on to other searches for a few minutes before stepping out. \"Geoff, I'm going on a caffeine and sugar run. You need anything?\" Geoff looked up from his console next to him. \"Yeah, get me a cherry Slurpee and a king size Milky Way.\"\n\n Enrique walked out to his car and drove to the 7-11 on base. In the parking lot, he pulled out a burner phone and texted a single message: \"Aunt Mabel is stuck on Highway 60, she will be there about noon.\"\n\n A minute later came the reply. \"Thanks, we'll go pick her up.\"\n\n He hoped they were ready for what was coming.\n\n Gila Pack House\n\nNew Mexico\n\n Robert led the men into the house, their gear in cases and bags with them. The leader of them, a Beta named Will, broke off to go with Robert as the rest were led to their rooms. Renee, Michelle and a dozen other pregnant or unmated women were on their way to Montana. She had gotten a text they were taking off as they returned from the private airport, he was anxious without her but was glad she was out of the danger zone.\n\n When Robert led Will into the conference room with all the Betas, the talking stopped and they all stood while he went to the head of the table. With a nod, they sat down. A map of the territory was spread out on the table. Robert looked each in the eye before speaking. \"Are we ready?\"\n\n \"Yes, Alpha.\" His long time Beta, Daniel, was in charge of planning. \"We identified five different ways that a column of vehicles could reach the house. I have a Beta in charge of each one, and we have been burying explosives and setting up fighting positions in each since last night.\"\n\n \"Surveillance?\"\n\n \"Each approach has coverage by at least two Pack wolves with rifles, as well as our normal patrols. I have Omegas in surveillance positions providing 360 degree coverage of our territory. As soon as they make a move, we will know about it. I have a reserve force of 50 warriors here at the house ready to move out to meet them now that the Johnson Pack warriors are here. Another 30 are remaining to protect the safe room.\"\n\n Just then there was a beep from the cellphone in Robert's pocket. Aunt Mabel was coming. \"They are coming via Highway 40. They should be here at noon. Load up, we'll figure out where to put everyone when we get to the ambush point.\"\n\n Robert was almost to the vehicles when he was mind-linked by a sentry at the northern entrance. \"Alpha, there is a man here who insists he needs to see you. He said Juan Hernandez sent him with a message for you.\"\n\n Robert stopped and went back inside. \"Fine. Search him for weapons then escort him to my office.\" He mind linked his personal guard and let them know what was happening. He had to listen to the messenger to avoid tipping them off. He ordered Caleb to move Maria to the ceremonial area out of view of the house, he didn't want them anywhere near when a Cartel guy was here.\n\n It took twenty minutes for the guy to arrive. He looked slick, confident and deadly. \"Alpha Hastings, my name is Gabe. May we speak in private?\"\n\n \"Certainly, right this way.\" He left the link open to his guards and Betas. They sat in his office, and Robert offered him a whiskey. \"What can I do for you?\"\n\n \"My boss needs your help. He lost something a few days ago and he has information showing you now have it, and he would appreciate getting it back.\"\n\n \"What is it?\"\n\n \"A woman named Maria. She is very important to him.\"\n\n \"That's not a problem. Come on, we'll go get her.\" Robert got up and led their way out of the house. He could smell the confusion and panic in Gabe, he really didn't think they would roll over and let him have another wolf. He followed Robert over a small hill, below them was a circle of stones about twenty yards in diameter with sand in the middle. He could see a man and a woman on the far side. As they entered the circle, he recognized Maria. \"Maria, do you recognize this guy?\"\n\n \"Gabe Hernandez, deputy Operations director for the New Mexico sector. Married, two children, lives on Highland Drive in Albequerque. He is responsible for smuggling and distribution activities, but may lose his job soon because of the high capture rate of drugs. He also prefers anal sex, especially when he is choking the woman with a chain.\" Gabe paled as he looked around, the circle and the area behind him were now full of werewolves and the man next to Maria was boring a hole in his head with his eyes.\n\n \"Gabe, Maria is all yours. All you have to do is take her away from her mate, Caleb.\" At that, Caleb and Maria shifted into their wolves. Gabe tried to turn and run, but Robert grabbed him and tossed him into the middle of the challenge circle. The two wolves circled him, both snarling at him with their hackles up. Caleb rushed him, jumping for his face, and Gabe raised his hands to protect himself. Caleb bit deeply into his left forearm, his momentum spinning him around as he shook until loud snaps indicated his arm was broken. Gabe let out a scream, but it was interrupted when he saw Maria coming at him.\n\n Maria lunged low, her teeth spread wide as she reached his groin. He let out an ungodly wail as her sharp teeth tore at his balls, ripping them from his body. He saw them fall to the sand as her teeth continued to tear at him. His screaming was ended only when Caleb ripped his throat out.\n\n Robert smiled. If they wanted war, he'd give them a WAR."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolves",
        "werewolf",
        "pack",
        "war",
        "mate"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/beyond-the-were-war-ch-04"
}