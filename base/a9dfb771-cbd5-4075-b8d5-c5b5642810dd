{
    "title": "Vicious Rumours Pt. 02",
    "pages": [
        "Gladys pressed record and sat down in front of her camera in her bedroom. She had come straight from a day at school so she was still in her professional outfit, however strands of hair escaped her professional bun, her makeup was worn and her clothes a bit wrinkled, this was a video made in desperation. She stared at the camera without a cheeky grin, or a longing horniness, but a deep and real fear that she had never displayed before. Even when she had been doing streaks and tasks that were beyond her imagination, there was still a sense of excitement under her fear to drive her forward, now it was a shuddering terror, with the occasional sob as the reality of her predicament washed over her in waves.\n\n\"So, I'm making this video to address whoever subscribed to my SkankBank account. I bet you were as surprised to find out it was genuine as I was to find someone had figured out my secret. By now I'm sure you have watched the lion's share of my videos and feel amazing knowing my secrets. What I am here to do is propose an agreement of sorts. You see I never wanted anyone to actually watch me do those things, I just wanted a potential audience, and as I used my full name and the school I am the headmistress for, you have my future in the palm of your hand.\" Gladys took a deep shuddering breath.\n\n\"If these videos get a wider viewership, I will take everything down, deny everything and claim it was a lookalike. It may work, it may not work, but you will lose your all-access pass to my ass. However, if you keep my little secret, then there's no reason I can't keep uploading new videos, I daresay it might even improve my mood knowing that someone out there is watching me. So I'm going to spend tonight making duplicate accounts to prevent anyone else having the revelation you have had, and as long as the subscriber count stays at one, and as long as I receive no indication you are showing others my videos, you will continue to receive updates of my further fall into degradation.\" \n\nGladys knew she was taking a huge risk, she should have shut down her profile immediately but she had been stuck in a meeting all day and now, who knows how many screenshots they had. Hell, they could even have full copies of her videos if they were tech literate enough to get past SkankBank's anti-piracy measures. Her choice was to either cut to her losses and hope it didn't blow up in her face, or double down and hope that the ego of the person on the other end was large enough that they would keep her secret in exchange for exclusive access. As she took a few more sobbing breaths she realised that she had to overcome her fears and ask properly for this to have any chance of success.\n\n\"Hold on a second. I think I did this wrong\" She announced turning the camera off. When the camera was turned back on, it started on her surroundings, panning around the school staff room. She made sure to pause the camera for a moment on the clock to show it was only 5:30pm. Most teachers clocked out at 5pm and the night shift usually took their evening meal in a nearby pub that gave them a discount, but it was still possible that one lingering teacher could walk in. As the camera panned around it eventually landed on Gladys' naked body, slowly panning down from her neck, to her tits, to her torso to her pussy, allowing the viewer to read the pledge she had written on her body with felt tip pen.\n\n'I, Gladys Hardwick, headmistress of St. Bernard's Boarding School and incurable slut, pledge to continue to record and share my deviant behaviour in exchange for your discretion. I will be your exclusive wank toy for as long as you find my descent into horny madness enjoyable.' her pledge was signed with an X across her cunt. She panned the camera up to her face to blow her viewer a kiss and then turned the camera off.\n\n\u2026\n\nGladys spent the next few days in dread, she spent every night making more fake accounts and scouring porn sites for any rips of her videos. Her bat-like hearing was now focussed on anyone discussing anything that she had done. After a couple of days she started to believe that her follower must have agreed to her terms, which meant her hearing was now turned to trying to sniff out new rumours that she could use to produce content for her new fan.\n\n\"Urgh, every morning I have to peel gum off my shoe, why does that janitor still have a job?\" One of the boys complained.\n\n\"Maybe he's blackmailing headmistress Hardwick. After all, if anyone could walk in on her masturbating in the school, it would be him.\"\n\nGladys took a moment to imagine the Janitor looming over her with malice. 'What if he's the SkankBank follower?' she thought to herself. 'No, where would a janitor get \u00a32047 to fling at a SkankBank page on the off chance it isn't a scam?' Her mind buzzed thinking about the janitor and how he had to clean up all that graffiti because of her. \"There must be some way to thank him.\"\n\n\u2026\n\nGladys hit record on her phone and pointed it at herself. She was in the school corridors, however she was fully dressed.\n\n\"Hello mysterious subscriber, just a quick video to keep you up to date on my deviancy. I've decided the janitor deserves to see my naked body, of course he can't know it is me which is why last night I mocked this up.\" Gladys held up a piece of paper with the title 'KS3 Biology Worksheet.' filling the paper was an exercise commanding students to fill in the correct labels on the diagram above, a naked female body, the head cut off, standing impassively with a very familiar E-cup bust and curvy figure.\n\nAs if putting her naked body in a fake biology worksheet wasn't enough, Gladys had also taken the opportunity to cover the sheet with childish graffiti. Her breasts were labelled as 'slut udders', a crude disembodied penis sticking into her vagina, a cartoon head drawn on top of the body with a cock in its mouth. All drawn in pencil so it wouldn't obscure her naked body, just desecrate it.\n\nOnce she had a chance to show the worksheet to the camera, she placed it on the floor, face up, outside the biology class and retreated round the corner. The camera was placed so that half the screen caught the corridor and half caught Gladys' reaction as the janitor turned the corner with the vacuum cleaner.\n\nGladys had to clamp a hand over her mouth to keep herself from squealing as the janitor noticed the paper and reached over to pick it up before it could get stuck in his vacuum cleaner. He took a moment to stare at the sheet, letting out a little chuckle before tossing it in the bin and carrying on with his job. Gladys used the sound of the vacuum to sprint away giggling.\n\nThe camera cut out but then turned back on with Gladys now in a darkened office.\n\n\"I'm so excited after that I thought I would try one more thing. These cabinets hold the master copies of worksheets for teachers to photocopy when they want to set a class assignment. I figured the biology class could do with an additional worksheet, don't you?\" She asked the camera as she let the camera watch her place a freshly printed copy of her worksheet into the cabinet. \"Imagine, in the not too distant future, a teacher may end up photocopying and distributing my naked body to their class, none of them any the wiser that they will be staring at their Headmistress' tits.\" She squealed as she closed the cabinet door and switched off the camera.\n\n\u2026\n\nThe moment the janitor saw her naked body played over and over in Gladys' mind, but she also felt an undercurrent of worry that her adventure may not have been as exciting for her viewer as it was for her. She kept her ear to the ground for any especially juicy rumors. She hung out near the biology corridor as not only was she imagining the whole class seeing her worksheet, but she knew today was sex education that she knew would yield a comment or two.\n\n\"You put a condom on like that when the time comes your gonna have her eye out.\"\n\n\"No problem, I heard Hardwick can put it on me with her mouth.\"\n\n\"I heard Hardwick keeps all the condoms from sex ed. So I hope you left her a present.\"\n\n'What am I gonna do with a bunch of cucumber stretched condoms?' Gladys thought to herself, 'unless the teacher is negligent enough that they're all putting them on their cocks. Swing and a miss buddy.'\n\nAs they turned a corner she heard her name come up in another conversation.\n\n\"I heard she lives at the farm down the road now.\"\n\n\"Yeah the farmer mistook her for a cow and milked her udders until she squealed, now she has to go back and get milked every night.\"\n\nWhile Gladys considered the joy of being milked (even though basic biology told her it wouldn't achieve much seeing as she was neither pregnant nor prone to lactating), she thought even the most short sighted farmer would mistake her for a cow.\n\nThe search continued for a good rumour which came from a group of boys heading back from PE.\n\n\"It's downright sadistic asking us to climb that rope, it's impossible.\"\n\n\"Mr. Balham did it.\"\n\n\"Yeah but he's a gorilla in gym shorts, I'd like to see someone normal try it. Or at least get Hardwick to wiggle her fat ass up there, she hired that sadist.\"\n\n\"She can barely get those bitch tits of hers off the ground.\"\n\n\"Yeah but I bet if the rope was tied around those tits she'd have no trouble. Busty kinky bitch like that, I bet she's been hung by her tits before.\"\n\n\"That's not how tensile strength works, just because her tits are bigger doesn't mean...\" one of the boys began but the rest of the conversation was lost as Gladys' mind was already scheming.\n\n\u2026\n\nGladys stood naked in the middle of a darkened gym. She whispered to the camera but still her voice echoed around the cavernous space.\n\n\"Hello my special subscriber.\" She nervously began, \"one of my students postulated that I'm such a masochist slut, I must have hung from these massive tits before. I don't think it's possible for me to fully hang from them but I didn't get to where I am today by shying away from punishment.\" \n\nGladys proudly ran the camera over her setup. One of the climbing ropes stood at the ready, a series of smaller ropes dangling from it just above chest height. Below was an adjustable springboard for gymnastics, with a length of string attached to the adjustment lever on the side. She moved camera away to get a wide view, then by way of demonstration, Gladys stood on the springboard pulled on the string, in one direction then the other, showing that as she changed the firmness of the springs, her body rose and fell by a small enough margin to fine tune her height off the ground at will. She took a deep breath and prepared for what's ahead.\n\nThe smaller rope dangling off the climbing rope had been measured precisely for a very clear purpose, she began by standing on tiptoes and twisting the rope in a figure of eight round her breasts, then she looped the rope in a bigger loop to wrap both tits and squeeze them together, followed by another figure of eight with the excess rope being threaded through the middle and tied off on the climbing rope. Gladys knew the rope wasn't going anywhere now, every shuffle and wiggle made the ropes tighten, she looked at the camera and put a brave face on ready for the dreaded conclusion.\n\n\"Ready to see my whore tits get stretched?\" She announced, moaning as she slowly lowered herself off tiptoes, feeling her back arch as her breasts stretched upwards away from her body, the ropes tightening around them, bulging them outwards. With her feet flat on the springboard, her breasts were already feeling the pain, but Gladys estimated the pain was mainly coming from the constriction, and that barely any of her weight was being carried by her tortured tits.\n\nShe took the loop of string attached to the adjustment level and began to pull on it, slowly reducing the height of the springboard. She felt the rope constrict but more than that she felt an emerging hotness in the base of her chest, the feeling of her tied breasts starting to pull away from her body. She pulled the string a bit more and a squeak escaped her mouth as her tits screamed with the sudden new exertion. She started to rise back up onto her tiptoes, her body yearning to relieve the pressure on her increasingly warm breasts. She took the string in both hands and started to do a firm and continuous pull to keep the momentum going against objections from her pain receptors.\n\nGladys started breathing heavily, each exhale turning into a scream as the loosening breath met with the declining springboard to bring the extra weight on in waves, her breasts screaming in agony as she began to feel less and less of the tips of her toes touching the floor. When she felt she couldn't take it any more, she gave the string one last yank, one of her feet lifted off the floor and she then hung screaming and swaying for the benefit of the camera. In her mind she counted to ten as a not inconsiderable amount of her body weight pulled on her tits, she knew it was never going to be possible to be completely suspended this way but she couldn't help but feel that more of her weight was on her breasts than her feet.\n\nAfter her ten count she hastily untied her breasts and sighed with relief as the pressure was released and the colour drained out of them. She gave herself a moment to catch her breath before going back to the camera to show off her handiwork.\n\n\"Look at these tortured tits.\" She crooned, bending over so the camera could see them dangle in front of her, she desperately hoped that she hadn't actually stretched them, even though they felt that way at that moment.\n\n\u2026\n\nGladys spent a few days nursing her throbbing breasts back to health, she had not enjoyed that rumour but she at least hoped her mysterious observer had, at least enough to give her some time to direct and vet the rumours a bit better. The moment the dull ache in her breasts began to subside, she went back to her former favourite pastime of leaving breadcrumbs to her perversion. \n\nShe wanted to leave naked photos of herself on the school website, but she knew she wasn't the only one with admin access and the photos would be visible in the image library. Instead she set up a collage of photos from her SkankBank profile (with a link to the profile itself) behind a bot wall on a website she controlled with a large unwieldy domain name, unlisted and in no way guessable. She then set up redirects to her page to anyone who typed in the right browser extension on the school website. She started off with clever hexadecimal codes but in the end she went into overdrive until simply typing \"/slut\" \"/whore\" or \"/headmistressporn\" after the school web address would get someone to the collage.\n\nNext, to get the rumour mill going into overdrive, she ordered a multipack of sexy lacy underwear. Gladys felt she needed sexier underwear anyway but that wasn't the point. The point was to wear a pair every day, and then on any late night walk across the school campus, she would make sure to take off her sexy knickers and leave them somewhere conspicuous, knowing she would be the number one suspect. Right on cue the school rumour mill reacted.\n\n\"You see another pair of those lacy panties today. Left right on the gatepost to the dorms.\"\n\n\"You see the size of them. Only one ass would fit in panties that big. Those are definitely Hardwick's.\"\n\n\"Why do you think she's leaving her panties behind? You think she's getting fucked in front of our dorms?\"\n\n\"Or at least she's jilling-off and leaving us a present.\"\n\n\"I think she's more adventurous than that. I heard she's an exhibitionist slut. I bet she doesn't wear clothes around the house, and at first she just stripped at her front door but now she's started stripping further and further away.\"\n\nGladys thought about how easy that theory was to disprove, that they had only found her knickers was a clear sign that she wasn't doing that. But that didn't mean she couldn't start.\n\n\u2026\n\n\"Hello secret subscriber. I heard a most delicious rumour today that I had to put into action. I'm afraid it's not going to be a great experience for you but I hope the idea of it will tide you over until I am able to upload more interesting videos. The kids at school think I am naked all the time I'm not with them, it's a great idea, so I tried to decide whether I'm not allowed to wear clothes around the house, or I'm not allowed to wear clothes after 9pm. Then I thought, why not both?\" She spun the camera around to reveal she was in a classroom, the clock on the wall revealing it was 9:05, she then held the camera further away to show off her naked body sat in one of the student's chairs.\n\n\"Of course nobody is forcing me to do this, so I need to set a punishment for if I don't have my naked whore body on display when it should be. But I'm such a deviant slut, what could I possibly propose that I would consider a punishment? Then I remembered my fear when I found out I had a subscriber and I had an idea. For each minute I spend with clothes on, either in my house or between 9pm and 7am, I will reduce the subscription cost for my SpankBank account by \u00a31. That ought to keep me in check if I get ideas above my station and forget I'm a dirty whore who doesn't get to say no.\" The punishment was set the moment it left Gladys mouth, it didn't seem like much but she was planning on keeping this order going until the end of the school year, plus there were going to be situations where she needed to wear clothes after 9pm or in her house where she would just have to take the hit. Despite the risk, the fear and the frustration, Gladys was still overwhelmingly horny and ended her video masturbating for the camera in the classroom.\n\n\u2026\n\nThe new arrangement was tough on Gladys, it was easy on weeknights where she could go home early, and the occasional night shift where she could find a quiet corner to strip off. But there had already been a couple of infractions, some colleagues invited her to the pub for one of their birthday celebrations and she couldn't strip off until she had finally left and gotten out of sight from the pub at 10:46. She actually felt a tear trickle down her eye as she reduced the price from \u00a32047 to \u00a31941. There were a couple of occasions where, in a hurry, she quickly ran into her house to grab something then ran out again, putting the price down by a pound each time. \n\nHer house was out of the way enough that nobody went around there unless they were looking for her, so she felt comfortable moving her whole wardrobe into the garden shed so she would have somewhere to change outside the house where clothes were banned. She could have sworn she must have been spotted, she was spending an extreme amount of time naked around the campus, but if anyone had spotted her, they kept it to themselves.\n\nBut the most interesting development came on the back of her announcing that she would no longer be taking meetings in her home office, once again the rumour mill went wild.\n\n\"She's got to have converted her office into a sex room or something right?\"\n\n\"Either that or she had sex in it so much the whole room smells like her pussy and she's can't get the smell out.\"\n\n\"I heard that bitch loves to act like a dog when she is alone. That's why the office is out of action, she's converted it into her kennel.\"\n\nGladys quietly hummed with excitement.\n\n\u2026\n\nThe camera opened on Gladys' kitchen floor, Gladys on all fours to talk directly to the lens, her large hanging tits pressing against the laminate floor.\n\n\"So on the suggestion of my students, I am altering my nudity rules. When inside my house I am not just nude, I am a literal bitch. I have bought this collar that I am to wear at all times, and as you can see I now have a tail.\" Gladys showed off her red studded leather collar, then turned around so the camera could see her new buttplug with a tail sticking out of it. \"While in the house I will only walk on all fours, all toilet breaks to be taken in the back garden, and I'm going to sleep in a large dog cage I have set up in my office.\" All these plans were clearly making Gladys ravenous with embarrassment.",
        "\"Finally, any time I have a meal at home I will be eating it out of this dog bowl without my hands. Now I know what you're thinking, how am I supposed to cook food if I'm not allowed to stand on my hind legs? Well that's why I put these in a low cupboard.\" Gladys opened the cupboard to show the camera piles of tins of dog food she had stocked up on, she gave the camera a wild-eyed stare and decided the appropriate thing to do was to wag her tail. \"Naturally of course any time this little bitch is naughty and doesn't obey any of the rules I just laid out, I'm going to take \u00a31 off the subscription price on SpankBank. I'm sure you've already noticed the falling price. If it falls much further\u2026\" She ran her hands between her legs for a moment before remembering why she pressed record.\n\n\"I figured you'd want to watch me eat dog food for the first time, watch this little bitch suffer before she acquires a taste for meaty chunks in gravy.\" She pulled down the nearest tin and opened it, immediately recoiling at the smell as it hit her nose. She turned the tin upside down over the bowl and watched the chunks slop out with a wet thud. She gave the camera a look of disgust before lowering her face into the bowl and gingerly wrapping her mouth around the nearest chunk.\n\nGladys lifted her head up and desperately tried to suppress her overwhelming desire to retch. She became very aware of the smudge of gravy on her nose and the grainy meat resting on her tongue. She took a deep breath and bit down, chewing away, now actively gagging. Finally she swallowed her first mouthful.\n\n\"Yuck, urgh that was horrible. Absolutely disgusting.\" She paused for a moment to calm herself down. \"Want to see me do that again?\"\n\nIt was an arduous process but Gladys' resolve never faltered. One bite after another she choked down the foul bowl before licking the bottom clean and giving the camera a look of kinky achievement.\n\n\"Maybe on a diet of dog food I won't be such a fat slut in the future.\" She quipped as gravy dripped off her chin.\n\n\u2026\n\nGladys felt her double life was now fully cemented, the students had no idea that every night their headmistress went home and humiliated herself, living in her own home like a lowly dog. Despite her prediction, she never acquired a taste for dog food, in fact she found herself eating more and more meals outside her house so she could avoid the disgusting taste. Nevertheless when she did feel in the mood for humiliation, she at least got better at eating the disgusting mix without gagging. The novelty of the situation she put herself in took weeks to wear off to a point that she wasn't rubbing her pussy raw in erotic humiliation every day.\n\nShe allowed herself some time to swim in the fantasy, the need to upload more videos weighing on the back of her mind but not becoming pressing to her. Eventually the school calendar provided a supreme opportunity for mischief, and Gladys made sure to draft the assembly announcement accordingly.\n\n\"One more notice before you head back to classrooms, classes will finish early next Friday as we prepare for the annual St. Bernard's fundraiser. Invites have been sent to all parents and alumni for a night of dancing, fine dining, and a fantastic fundraising auction. Everything being auctioned off is listed on the school website, however we do have a couple of secret surprise lots, the only way to find out is to come, so if your parents haven't booked tickets yet make sure to let them know they are missing out. I will be making some video calls over the next couple of days to get as many people here as possible funding your future.\"\n\nNaturally the nature of the secret auction prizes was the subject of every rumour swirling around the school.\n\n\"I think we can all agree, one of the lots is getting to fuck Headmistress Hardwick.\"\n\n\"Maybe, but you remember economics, excess supply drops the price, a go on that loose cunt would barely raise a fiver.\"\n\n\"If that, who knows what else she shoves in there. I heard she's such a slut she uses her pussy as a purse.\"\n\n\"What does that even mean?\" A boy asked, a sentiment mirrored by Gladys.\n\n\"Never mind that, let's talk about what's actually reasonable, she can't auction off her pussy, but she can video call all the alumni wearing nothing below the navel\" Gladys quietly giggled, she planned to video call the alumni wearing nothing but a collar and a tail butt plug, doing everything in her power to keep her camera phone above the neck.\n\n\"Of course, I genuinely think maybe a whack or two with 'old thumper' on that colossal ass would be a nice auction item.\"\n\nGladys' eyes lit up. Old Thumper was a piece of school history, she had no idea how this kid knew about it. It had started as one of the oars on a boat that had won some rowing championship that was frightfully important at the time, broken, shortened and smoothed off it became a paddle used by various sports coaches to punish poor performance. Naturally that was eventually banned and it became more of a hazing and bonding experience for the sports clubs. Eventually it was completely retired but as the headmaster at the time was an alumni with a fondness for Old Thumper, the paddle remained in the trophy cupboard.\n\n\"So lot 1 would be a spanking with Old Thumper, lot 2, fucking her sloppy purse of a cunt. I reckon lot 3 would be a series of compromising photos, basically a free blackmail pack. Pay enough money and you get the headmistress as a slave.\"\n\n\"God, imagine trying to find out what she will say no to, then blackmailing her to do it anyway.\"\n\n\u2026\n\n\"Woof woof, hello subscriber.\" Gladys began, she had decided to film this video in her office, with her locked in her kennel. \"So I have an update and a proposition for you. Next Friday we're having the school fundraising auction. Seeing as it will only be adults I thought I would let my hair down a little, I'm going to wear a cute little outfit that is all kinds of revealing, one of the lots is going to be giving my big bottom ten of the best with Old Thumper. As well as that one person doesn't know it yet but if they win a lot they're also going to get emailed a naked photo of me. So lots to get worked up about, but that's not why I'm uploading this.\" Gladys paused for a long time, willing herself to move forward with what she had agreed.\n\n\"I keep calling myself a whore, and a slut, but how can I be when I have never even cheated on my husband. So I'm proposing that we meet and you fuck me. The night of the auction, loads of people will be coming and going to the main hall, nobody is going to notice someone sneaking in the back entrance if I leave the door unlocked. So I'm going to sneak away and lock myself in my office. There I am going to tie myself to my office chair and cover my eyes with a blindfold, I'm a piece of fuck meat I don't get to know your identity. The key to my office is going to be hidden underneath the fire extinguisher next to the back door. Let yourself in and then do whatever you want to me.\" The cage rattled a little as Gladys shuddered.\n\n\"I'm looking forward to you making me the whore everyone knows I am.\"\n\n\u2026\n\nGladys sat in her office, listening to the steady stream of arrivals for the fundraising event. Her night was planned but began with her staring down the pile of clothes she was torn over wearing. On the one pile, a schoolgirl's outfit, clearly a bit beyond cheeky but would go well with the paddle punishment. The other pile was a party outfit she had bought but never felt comfortable wearing. A purple strapless cocktail dress, heavily reinforced bust so it could be worn without a bra, tight darting in the middle to bring it close against her torso, and a skirt that hid very little of the thigh before the slit at the side dashed whatever modesty was left. The dress would of course be worn with tights and high heels but without underwear.\n\nGladys eventually decided on the cocktail dress as although it was scandalous it wasn't as overtly sexualised as the schoolgirl outfit, giving her more deniability. However half way through putting it on, she had an idea.\n\n'No reason I can't have a costume change before the Old Thumper lot.' she thought to herself, grabbing the schoolgirl outfit and bundling it into a bag to stash by the stage. 'You never know, someone might see me changing, get a good look at my sloppy coin purse.' Gladys had no idea why that phrase was sticking with her so much.\n\nGladys felt a lot of eyes on her as she went through the pleasantries of making the wealthy feel at home. The parents of current students had a mixed reaction to her dress, but the smattering of alumni who remembered her from their days as students were positively agog at the formerly stern matron being so relaxed and carefree in more ways than one.\n\nThe dinner was, as always, exceptional. The highly paid kitchen staff were given a chance to flex their cooking muscles without a constant eye on the budget and mass production, and so produced food that even the wealthiest among the guests found appealing. Finally Gladys got on stage and began the auction.\n\nThe auction was always a grab-bag of donated items, a mixture of high end marketing and alumni bragging that bought out fancy lots to raise plenty of cash. Gladys was acting as auctioneer and made sure to lean forward alluringly, her colossal cleavage inspiring plenty of high bids. The butterflies in her stomach gaining strength with every lot that passed.\n\n\"Sold to the debonair man with the green tie. Please make sure to give me your email address afterwards so I can send you the hotel tickets.\" Gladys announced, her mind racing that she was going to 'accidentally attach a picture meant for her husband' when she emailed him tomorrow. \"And now time for the final secret lot of the night, however this one takes a bit of preparation so I'll be right back.\"\n\nGladys' hands shook as she left the stage, she was aiming for bawdy but otherwise wholesome fun with this idea, but as she went through with it she started to worry that maybe it would go a bit far, maybe parents would complain. Nevertheless she soldiered onwards, quickly stripping down and putting on the ill-fitting schoolgirl outfit. The check skirt barely made it past her bottom and for a crazy moment she considered leaving the underwear behind, but her rational mind kicked in and she pulled on the schoolgirl bloomers before tying her hair into pigtails and strutting onto the stage, carrying Old Thumper over her shoulder.\n\nAt her first few steps all conversation was silenced in shock, then the hoots, whistles, and catcalls from the audience rose up to a deafening volume. It took her some time to convince them to quiet down so she could announce her final lot.\n\n\"You like my new outfit?\" She cheekily asked, watching the audience cheer with delight again. \"I used to wear something similar when I was a schoolgirl. Of course back then the worst punishment I would get for misbehaving was some lines, not like in the days of Old Thumper here. Raise your hands if you went to St. Bernard's when this was in use.\" A few of the older members of the audience knowingly raised their hands.\n\n\"Well for tonight's final lot, one of you lucky guys will get to give me 10 of the best with Old Thumper here, so where should we start the bidding?\" She asked, biting her lip at the enthusiastic murmurs in the crowd.\n\n\"Five thousand pounds\" yelled one of the older gentlemen who had raised his hand earlier to indicate he was very aware of what that paddle could do.\n\n\"Um\u2026 ten thousand pounds.\" A younger man yelled. Gladys recognised him as one of her former pupils who now owned a tech company.\n\n\"Do I hear eleven thousand?\" Gladys asked, astonished at the value being put on being the one to turn her bottom red. The bidding continued and Gladys became more and more astonished at how much her ass was worth. Eventually the bidding broke down to a wealthy gentleman sat next to a woman so red with rage she could only have been his wife, the former student, and a larger man she didn't recognise.\n\n\"Any advances on twenty thousand pounds?\" She asked, staring at the bidders. The former student cleared his throat and awkwardly spoke up.\n\n\"Err\u2026 I bid\u2026 forty thousand pounds.\" He announced to a mix of gasps and cheers. Gladys couldn't believe it, that was double her annual salary when she first started teaching, just to get to paddle her ass.\n\n\"Any advance of forty thousand\" she croaked out, the shaking heads of the other two bidders giving her an answer. \"Sold for forty thousand pounds, come on up Hugo.\" She announced, just remembering her former students name in time. He had a big grin on his face as he skipped to the stage and looked around curiously. She handed him Old Thumper and bent over the table that had previously held the other lots, holding her hand to her mouth like she was a cheeky pinup girl. Hugo hesitated and Gladys took the opportunity to lift up her skirt, the audience cheering at the sight of her bloomers.\n\nHugo brought Old Thumper down with a thwack and Gladys felt a red hot heat spread across her bottom. The audience cheered and Gladys blushed. But as the cheers faded, she heard an elderly gentleman airing his disagreement.\n\n\"No, no, no\u2026\" he yelled as he climbed to the stage, leaning heavily on a walking stick. \"As an old boy who has proudly felt the sting of Old Thumper, I'm telling you this won't do at all. No teacher ever gave me the option to keep my briefs on. I suppose it's not PC any more but how are kids going to learn if they don't feel the sting of willow on their bare bottoms?\" The crowd cheered, more at what they wanted to happen to Gladys than the aging man's outdated views on student discipline. Gladys put her hands over her face and squealed at the thought of what she had to do next.\n\nThe crowd went into a frenzy as Gladys hooked her hands around the elastic of her bloomers and pulled them to the floor, before retaking her place at the table and bending over to give the audience a clear view of her bare bottom. Old Thumper came down hard and the crowd cheered as they watched Gladys' asscheeks ripple with recoil. Gladys barely had time to scream before Hugo brought the paddle down again, causing more ripples of heat as the crowd cheered for more.\n\nTime seemed to stretch forever as Gladys drank in the pain and humiliation of her bare bottom being spanked in front of parents and former students. This wasn't a fantasy or a masturbation adventure, she truly was being exposed. After ten swats she immediately sprung up and pulled up her bloomers. She rushed off the stage towards her office, the guests mistook this for embarrassment and a bashful retreat, when in truth Gladys was eager to prepare herself for her mystery subscriber.\n\nGladys could still hear the commotion she left behind her as she snuck into her office and locked the door. She looked up at the clock.\n\n'shit, 10:48' she thought to herself, stripping off her clothes as fast as possible. 'I'll have to remember to take err\u2026 \u00a3108 off my subscriber cost when I next get to a computer.' She stood naked in her office looking, trying to think through what to do next. She had anticipated that she was going to have to tie herself up, and had provided some rope and elastic bands for the purpose, but she hadn't really come up with a game plan of how to do so. All she had really planned was the phrase 'do your worst' which she wrote on her pubis, and a condom she had stolen from the sex ed class that she left on her desk.\n\nFirst she sat on her office chair, her legs as wide as the armrests would allow, she could see this would definitely be a good way to tie herself up, but then she wondered if her legs would be far enough apart to accommodate a whole man between them. She tried bending her legs over the arm rests, it opened her much wider but meant her pussy was too far from the edge. As she shuffled around she almost slipped, but as she did she found herself falling into the perfect position.\n\nGladys ran a length of rope round the back of the chair, tying one end to each of her legs, forcing herself to contort into a bent double pose with her head at the base of the chair back, and her pussy and ass hanging off the edge of the chair. Next she tied her knees to the armrests to stop her simply lifting her legs over the seat back. She set up some elastic bands on the far end of the armrests, ready to lock her arms in place. However before she could do that final step, she wrapped a scarf around her head as a repurposed blindfold and plunged herself into darkness before wrapping her arms around the outside of the chair and slipping them into the elastic bands, holding them in place.\n\nGladys spent her time swimming in her helplessness. 'Any minute now a totally anonymous stranger is going to enter my office and fuck me and there's nothing I can do about it.' This wasn't strictly true, although the elastic bands held her in place, they were stretchy enough that she could pull her hands free if anything went wrong, but Gladys enjoyed herself more pretending that wasn't the case.\n\nThe position Gladys had tied herself in was not comfortable, her bottom still ached from her paddling and as she squirmed with discomfort, she worried that he may not actually be coming. She had rolled out the welcome mat but she didn't know for sure he agreed to her terms. She was so invested in overcoming her aversion to being a cheating whore, she never considered what it would do to her self-esteem to offer her body to a stranger and be turned down. She considered untying herself at that moment but her brain swimming in horny embarrassment told her to keep going.\n\nAfter what seemed like a lifetime, Gladys heard the telltale scratching of keys against the lock. She squirmed and moaned as she heard the door open and footsteps in her office. The man said nothing but she felt his hands roughly grab her breasts, kneading and jiggling them, toying with her. The man stopped groping her and she was once again left moaning with lust in a sea of darkness, she wondered what he must be doing now. Was he taking pictures for his private collection? Or maybe he was setting up something worse for her. Her question was answered when she felt him grab her hand and start wrapping rope around it, quickly following up with the other hand. He had been examining how she had tied herself up, figuring out how she planned to untie herself so he could make sure she was totally trapped.\n\nNext Gladys felt one of her office pens gliding over her chest, she tried to figure out what he was writing, but was distracted by the pure thrill of desecration. Next she felt him firmly grab the chair and begin to move her, the ground rumbling underneath her as the wheels transitioned from her plush carpet to the hardwood floors of the school corridor.\n\n\"Wait, what are you doing\u2026\" Gladys began to squeal. He calmly but firmly shushed her and to her surprise she found herself obeying. Eventually the rolling stopped, she couldn't tell where she was but every little sound echoed ominously. The man went back to roughly playing with her breasts, squeezing them as hard as he could, then sucking on her nipples until she thought they would pop. Just as her poor breasts were screaming for relief, she felt his cock begin to press against her vulnerable pussy.\n\nGladys was so wet she put up barely any resistance as she felt the cock slide into her. She moaned with embarrassment and fulfillment as the stranger began to thrust in and out of her, her orgasmic screams echoing in whatever room her captor had chosen for her ravishment. She was finally doing it, cheating on her husband, having anonymous sex, giving away her body like the whore her students thought she was.\n\n\"Yes, fuck me\u2026 fuck me like the dumb slut I am.\" She yelled as she felt the man surge inside of her. As he pulled his cock out she could tell he had worn the condom, however moments later he emptied the contents of the condom over her tits, wiping a little bit against her lips which she lapped at luxuriously. She could hear his heavy breathing as he pulled his trousers back up, then in a whisper, clearly trying to affect a generic accent and not give away his identity, her mysterious abuser said the only thing he was going to say to her that night.",
        "\"That blindfold counts as an item of clothing.\" Gladys then went wide-eyed with horror as she heard his footsteps walk away and into the night.\n\nGladys screamed. She was fully tied up, somewhere in the school, with cum drying on her tits, and a ticking clock that took \u00a31 off the subscription cost for her SkankBank for every minute it took for her to escape, not to mention if she didn't escape she would eventually be discovered, even if it was by the students or staff that found her tomorrow morning. Her mind was still foggy from her recent orgasms, even keeping her aroused at the prospect of being trapped and discovered but she knew she had to figure a way out of her predicament. \n\n'Come on Gladys, stop thinking about your sloppy coin purse and start thinking about self-preservation.' she thought to herself, even in dire straits wondering why that phrase seemed to be sticking in her head. She wriggled her limbs, trying to figure out which one had the most give in it. Her hands were thoroughly tied, he had made sure of that, but Gladys had tied her own legs in the middle of a fit of hornyness. She swayed from side to side and felt the rope slip a little on her left leg if she straightened it as far as she could.\n\nShe squirmed and rotated, screaming with the sudden necessity of a flexibility she had never had before, with an awkward grunt she felt the rope roll down to her ankle, stopped by the other rope she had looped around the chair. She gave her leg a long and painful flex until she felt one rope slip over the other and off her leg. The sudden looseness allowing her to free her other leg. Now she was sitting comfortably in her chair, her legs on the floor with a lot of tangled rope between them. Next Gladys got to work chewing at the ropes on her hands.\n\nIt took a lot of time, Gladys wasn't looking to chew through the rope, she was biting and pulling, trying to undo the knot with her mouth. It felt like hours before she caught a break and felt the rope loosen. She roared in triumph as she felt the rope fall to the floor, her newly freed hands ripping off the blindfold to see the full extent of her situation.\n\nGladys was in the entrance hallway, still with its fundraising decorations although now dark and quiet, just the other side of St. Bernard's iconic double doors. Had she been left here too long it was guaranteed she would be the centre of attention for anyone entering the building the next morning. She looked down and saw the dried cum flaking off her breasts, fluttering past where her subscriber had written the full URL of her SkankBank profile. Finally, with trepidation she looked at the clock on the wall. It was 1:39. Gladys did some quick calculations in her head and worked out her SkankBank subscription would be \u00a3279 cheaper from a single night of adventure. She shuddered, that would take her account cost to the brink of three figures.\n\nShe looked around at her surroundings, alone in the school, and she spotted one of the donation tins from the event.\n\n'I can't believe someone left one of these out, I better take the money back to my office' she thought to herself. 'maybe I could put it in my sloppy coin purse.' \n\nIn the darkness of the empty school, despite everything that had happened, Gladys prepared to fit as many coins as she could in her vagina, her commitment to fulfilling the rumours running even stronger than her exhaustion and the residual fear from what had just occurred. As she awkwardly staggered down the hall she had to wonder to herself.\n\n'Have I been totally broken?'\n\n\u2026\n\nEpilogue\n\nGladys had her phone on speakerphone as she looked at a bowl of dog food she had prepared for Saturday morning breakfast. One of the governor's had taken it upon himself to call regarding the events at the fundraiser.\n\n\"The auditorium was filled with people watching our headmistress, a position of power and respect, get her bare bottom spanked with a paddle. How did you think we were going to react?\" He ranted down the phone.\n\n\"With gratitude for doing whatever it took to raise money for the school. Forty thousand pounds, one cheeky lot in the auction and we can pay our kitchen staff until the end of the year.\"\n\n\"I suppose if it would raise money for the school it would be fine to put you on a street corner then?\" He asked, not realising the thought of that made Gladys' imagination run wild.\n\n\"Calm down Edmund, I'm not some kind of deviant\" Gladys lied, desperate to get the phone call over with so she could eat her dog food and masturbate in peace. \"I've seen worse in carry on movies, it was just a bit of bawdy fun.\n\n\"Unfortunately the other board members see it the same way, I think the runaway success of the fundraising event is dulling their sense of propriety. I look forward to next year's event where you raise as much money without selling your body.\"\n\n\"Next year I plan to raise double what I raised last night, just you wait and see.\" Gladys replied.\n\n\"You see after last night's performance that worries me. What are you going to do, convert our staff room into a brothel for the night? Nevermind I realise I'm not going to get through to you. Just make sure to give your John a call, he may have gotten your ass but we still haven't got the cheque.\" Edmund hung up before Gladys could reply. She sighed to herself, being forced into another task before she could eat breakfast, but as she was bringing up Hugo's contact details, her phone rang again, this time it was her husband.\n\nGladys had a conversation filled with the usual pleasantries, her husband a distant figure with her newfound double life. Once all the updates on family and the weather were done, her husband moved on to the reason he was calling.\n\n\"I was chatting with Greg this morning, and he tells me the fundraising event had an interesting lot in it last night.\"\n\n\"Ah yes, the Old Thumper thing.\"\n\n\"Jesus Gladys, what got into you? He even sent me a picture, my wife, dressed as a schoolgirl, getting spanked in front of an audience like a stripper in some unlicensed club.\" He began to yell.\n\n\"Calm down Nigel.\" Gladys cut in, trying to stop his anger from boiling over. \"It was just a bit of bawdy fun, plus it raised a lot of money for the school.\"\n\n\"Gladys, we are a power couple. With my links to business and your prestigious position, we can do anything we want. I was thinking of going into government one day. How do you think your 'bawdy fun' affects our future? As for money, we have plenty of money, you don't need to do that, just ask me.\"\n\n\"Nobody forced me, it was a bit of fun. How about you give me ten of the best with Old Thumper one day? I think you'll change your mind.\"\n\n\"We are so close to having the country in the palm of our hand. We don't need the press getting ahold of evidence of you being a deviant, it's not proper.\"\n\n\"Is that all you care about? Your image and your future? What if I wanted to be a deviant eh. I've spent my life being proper, what if I want to have my bottom spanked by someone?\" Gladys began to yell, hitting on a sore spot for Nigel that even before her double life her sexual fantasies were far too unusual for him, she had dragged him along with a tour of the tamest fetishes and even then felt his resentment the entire time.\n\n\"I can't talk to you when you're like this. How about I visit next month?\"\n\n\"Perfect, how would you feel if I had my nipples pierced for you by then?\" There was a long pause, filled with anger.\n\n\"I'll see you on the fourth of April.\" He curtly replied before hanging up.\n\nGladys growled in frustration, everything but their sex life was so perfect with Nigel, but her sex life was becoming such a big part of her identity she has no idea how the marriage was going to adapt. She went to eat her breakfast but remembered she still needed to call Hugo. She decided a video call from the neck up would get her in the mood for breakfast.\n\n\"Hello Hugo, sorry to ring on a Saturday, have you got a moment?\" Gladys asked sweetly.\n\n\"Oh sure, what can I do for you Mrs. Hardwick?\" He replied, somehow even more awkward and nervous than he had been paddling her bottom.\n\n\"Well it's about your successful bid last night. I'm not going to forget about it any time soon, but it looks like you have forgotten to send across the \u00a340,000 you pledged.\"\n\n\"Oh? I could have sworn I sent it across. Maybe I sent it to the wrong account, check all of your accounts.\" He suggested, hiz voice thick with nerves. Gladys made a supreme effort to keep her phone steady on her head as she opened her banking app and logged in.\n\n\"This is odd, it seems to have gone into my personal\u2026\" Gladys was stunned silent as she opened her account. In there was a deposit of \u00a340,000 made using the SkankBank tip jar feature. \"Wait, are you\u2026\"\n\n\"Your mysterious subscriber. Umm\u2026 yeah, sort of.\" Hugo admitted. \"The thing is SkankBank is one of the websites my tech company owns. All accounts with payments set at \u00a32047 get forwarded to manual moderation and I do that personally. So I've known about your account and been watching your videos since day one.\" The world seemed to spin around Gladys as she saw her former student looking at her with a familiar lust, but with far deeper knowledge. \"I only subscribed after I felt bad about watching your Christmas challenges without you knowing.\"\n\n\"So last night\u2026 that was you?\"\n\n\"Yeah. I can't believe I got to fuck you. Did you know I've had a crush on you since you first started working at St. Bernard's, it's probably the reason I gave so much attention and did so well at IT.\"\n\n\"Well I didn't paint you as the kind to tie me up further, fuck me in the entrance hallway then leave me to escape or be discovered.\"\n\n\"It wasn't that bad.\" Hugo quickly corrected. \"I was nearby, if you didn't untie yourself in an hour or so I would have come to free you. I'm sorry, you did say 'do your worst' and I just...\" Hugo splurged.\n\n\"Now, now Hugo. You don't need to apologise to me. If anything I should be apologising to you.\" Gladys put her phone down and backed away, getting to see the look on Hugo's face as he got a live view of his former teacher, naked but for a dog collar, butt-plug with a tail sticking out of her ass and pussy glistening with perverted anticipation. \"This dirty bitch got her filthy pussy juice all over your cock last night and I feel so bad about it. I was about to eat my dog food breakfast, but if you want, I could punish myself first?\"\n\nHugo seemed more embarrassed to be seen than Gladys, watching a video or even fucking her with a blindfold was one thing, but here was his childhood crush begging him to punish her. He cleared his throat.\n\n\"Um\u2026 yes, how dare you be such a slut.\" He badly acted along. \"You do deserve a punishment\u2026\" His pause was long and filled with a brain overloading with possibilities but no will to state any of them. Eventually Gladys decided that if she didn't step in she would starve to death first. She squeezed her nipples to fill her with naughty ideas and the drive to go through with them, before speaking up.\n\n\"I bet you think this cheating slut doesn't even deserve clean dog food. It would be so mean if you punished her by ordering her to piss in her breakfast before eating it.\" She growled with excitement.\n\n\"Oh my god yes, do that.\" Hugo replied, his cock in his hand. As Gladys squatted over her breakfast, her mind began to whirr with possibilities for her future.\n\n...\n\nThanks to everyone who submitted rumours on part 1, if I didn't feature one of yours they are either down to feature in part 3, or would require so much setup as to detract from the central plot, but I made sure everyone who commented had a least one of their rumours included (in one form or another). Please don't add any more rumours as part 3 has already got a plot in mind.\n\nThanks for everyone being so supportive of this story, I will try my best to get part 3 done as quickly as this one, so I can make sure to thoroughly destroy any remaining legacy goodwill that somehow survived this sequel to my highest rated story ever."
    ],
    "authorname": "Iwroteathing",
    "tags": [
        "exhibitionism",
        "pet play",
        "moral degeneration",
        "exposure",
        "degradation",
        "humiliation",
        "bdsm",
        "bondage",
        "bodywriting",
        "punishment"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/vicious-rumours-pt-02"
}