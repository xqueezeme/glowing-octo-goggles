{
    "title": "Milking The Bull Ch. 02",
    "pages": [
        "A.N. Chappy twooooo! \n\nFun stuffs ahead :3 thank you all as always for your patience with me while I complete these. Been such a chaotic several days, life just doesn't want me to write porn for some reason. \n\nThe Following Contains: More futa anthro bull lady on innocent little blonde femboy stuffs! Involving horse penis being stuffed into orifices of said femboy :D \n\nI hope you enjoy!\n\n*****\n\nThe cool water ran down Bailey's tired, hot, and sore body. Sweat, dirty and grime of the day washing away and the chilled temperature of the liquid feeling amazing on him. However, the dirt and sweat weren't the only dirty things being washed away down the drain...\n\nAll of Cathyl's heavy, thick, sloppy spunk ran off of him and whisked into the current of the shower water.\n\nAfter the 'incident' where she approached him like a mad woman, declaring that she needed to be milked, Bailey had a long walk back to his house. Or rather, more of a stiff waddle as he had both jazzed in his own pants and had the monstergirls, 'cream' running all over him. Not a single inch of his body went untouched by the gallon or so of hot spunk she blew everywhere. So he entered his home without really saying goodbye to Cathyl, he was trying desperately to keep his lips locked shut so that no more of the 'milk' from her balls would seep into them.\n\nFollowed by a long walk to the upstairs shower, trying hard to not touch anything in his house until he got to the bathroom, and now here he was. Long mop of golden locks drenched on his head, laying against him as he was completely cleaned of all the 'filth' from todays activities.\n\nHe was tired, he was achy, but the oddest thing of all...\n\nHe was really fucking horny!\n\n\"Uuuggghhh...\" He groaned, looking down at his naked body, the coolness of the stream made his nipples hard. And for some reason, did nothing to quell the raging hard-on he was sporting down below.\n\nEven though he had cum only an hour or so ago, having spent a ridiculously long time both walking to the shower and then being in said shower. His prick between his legs was standing upright, at its max hardness of five inches, begging for a round two with that gloriously tight grip that had graced it before.\n\nCathyl's rough treatment of him earlier, nearly forcing herself on him, the way she reached into his pants and just took what she wanted. It made Bailey's legs want to buckle, and her breasts... \"Oh my God...her breasts...\" Bailey had never seen a woman's tits literally right in his face before. Had never touched them, never kissed them, he was as much a virgin as one could be. Now he wouldn't be bothered right now if that's all that was on his mind, he probably already would've had some fun playing with himself to the thought of the tall, sexy monstergirl farmhand.\n\nBut there was something else on his mind that was keeping him from doing so, and that was what caused him to become such a white washed mess in the first place.\n\nHer giant fucking horse cock.\n\nThe huge appendage that flopped down in his face when Cathyl apparently had become too horny to deal with it anymore. Any other sane human being probably would've run for their life after that thing stared them straight in the face. But Bailey was too stunned in his post-orgasmic bliss to really realize the gravity of the situation that befell him. So he sat there...and did as she told.\n\nHe touched her, jerked off her cock until she moaned with the sexiest voice he had ever heard and blew him away with a torrent of hot white jizz. Hotter than the heat of the sun, and she fucking coated him in it.\n\nWhat was keeping Bailey from touching himself to the thought of her, was that giant dick she kept in her overalls. He wanted to just pretend it wasn't there, to act like it didn't happen, but the image of it making him go cross-eyed from its proximity to his face was stuck in his mind. Burned into it, and his boner wasn't going away...\n\n\"Oh...why?!\" Again he groaned, unable to get his penis to stop doing what it was doing. The whole situation had him freaked out beyond comparison, the first half of it was like living the dream! A tall, busty monstergirl backing him into a corner allowing him to play with her boobs, suck on them, and even got some actually really tasty milk. And then the latter half was what should've been considered by him to be the stuff of nightmares.\n\nBailey was one hundred percent straight, heck he agreed to take this summer job with the sole intent of getting into shape to attract ladies! He didn't accept it to get jerked off onto on his first day!\n\n\"Although that...technically isn't true...\" He thought, \"I was the one that was stroking her...so technically I...oh stop it!\" Finally fed up with how the shower wasn't helping, he twisted the handle to shut it down. Squeaky clean and no longer reeking of her heady seed, and pulled back the curtain.\n\nHis pale, small body dripping wet as he stepped out of the tub and walked naked across the bath mat to grab one of the towels hanging on the door rack. Immediately shoving his face into the fluffy, absorbent material and mumbling into it.\n\n\"Mrrrrfllmblmmmm!\" He didn't understand what was going on, he should've been so grossed out. Bailey wasn't into guys, so why did he...like it so much?\n\nAnd what the Hell was up with Cathyl!? Why did she have a cock!? Were all monstergirls like that? Was it part of their biology? If so wouldn't it be common knowledge among the populace?\n\nBut then again, monstergirls had only been integrated with humanity for so long, so they probably had plenty of secrets and things that humans didn't know about yet.\n\nEither way, Bailey was at a total loss of what to do with himself. He scrubbed his face roughly with the towel, followed by his wet hair, leaving it unbrushed and messy. Cause manly men don't bother making their hair pretty! Then the rest of his nude form followed suite, drying it off and leaving him refreshed and only a little damp. Then he tossed the towel into the dirty clothes hamper and walked out of the bathroom into his adjacent bedroom.\n\nApproaching the bed and dramatically throwing himself into it face first, the blankets hugging his naked body comfortingly. He planned on going to bed early tonight since he had to rise early again tomorrow, and he wasn't hungry at all, probably because he drank pint after pint of Cathyl's milk.\n\n\"Uggghh...I need to stop thinking about her.\" He mumbled into his pillow, rolling over to stare up at the ceiling. It was much easier said than done though, what happened today wasn't something that one could easily just brush off. He kept seeing her in his mind, hearing her voice, thinking about those hypnotic golden eyes...those huge breasts jiggling in his face...that big, fat, throbbing, hard cock... \"Aaaah! No!\" He grabbed one of his pillows and slammed it over his face, \"Sttp iitt...\"\n\nIt was so strange, so much so that he was actually actively trying to not be horny anymore. But every time that equine dick entered his mind he felt his own ache with a need for another release. Even now he wanted to close his thighs around it to hide the shame of his hard prick, but that would only make him feel worse. Since he was able to completely conceal his cock and balls with his thighs using very minimal effort.\n\nBut Cathyl? How in the heck she kept her massive tool hidden was some kind of miracle, he literally had no idea! It must've been the baggy overalls, otherwise that monster could've been spotted from a mile away...\n\n\"Stop thinking about it!\" He screamed at himself mentally, she really just wanted to forget today happened. But it wouldn't go away, Cathyl was haunting his mind, making his body feel hot despite the cold shower. He could still feel the gooey texture of her sperm slooooowly dripping down his face. Like an excellent moisturizer for his skin...he just wanted to rub it in all over...\n\n\"Ughh...God...\" Bailey put his pillow back and dropped his head back onto it. \"Hnnnnng!\" He moaned pitifully, \"I'm so hornyyyyyyyy...whyyyyyyy?\" He started whining. \"Go awaaaaayyy!\" Sitting up in bed on his elbows to curse his member. It twitched in response to his request, and an oddly pleasant pulsation seemed to radiate from his loins. Tingles spreading out all over him and enhancing the goosebumps that were already there. \"Nnf...\" Bailey bit his lip.\n\nEverything about her was so perfect, he could've sworn he was falling in love the second he laid eyes on her. The way she made his heart sore with her eyes, how she gave him butterflies in his tummy with her smile. And her body was just glorious, her tall stature, epic tits...if he was being honest, even her cock was perfect. So big...thick...and apparently her balls were loaded with more than enough cum to coat him from head to toe.\n\nHis fingers gripped the blankets tightly, and he felt his toes start to curl thinking about it. Some more twitching from his little prick, and he saw the first glint of his shiny precum beginning to spill out from his pink tip. \"Ooohhhh...I wanna cum...I wanna cum so bad...\" He had tried to ignore it, but this erection just wasn't going away. And what was worse, was that even though he wasn't touching it, every time he thought about Cathyl, waves of bliss seemed to ripple in his body like he was veeeery slooooowly masturbating. Even though he wasn't touching it at all!\n\n\"Uuuhhh...I'm going crazy...\" He put his hands over his eyes, his body starting to writhe and squirm. Even the blankets now seemed to set his nerves on fire, with how they smoothly glided along his silky flesh. What was happening!? Bailey had never been so horny before, \"I need to get rid of this! I can't...I can't take it!\" He sat up fully, looking down at his throbbing prick and spat in his hand. Then reached for it slowly, wrapping his fingers around it and feeling a liquid like arc up his body made of pure pleasure. \"Ooooooooooohhhhh...\" A long chesty moan came from him, his hand moving on its own to carefully stroke his aching boyhood.\n\nBailey had of course masturbated plenty of times before, he was a teenage boy of course! But this...this was different.\n\nIt felt fucking AMAZING!\n\nHe almost fell backwards, having to brace himself with his elbow to keep his body half sitting up while he played with himself. Fingers slowly and carefully stroking his cock, moving them in a milking motion to squeeze his very pleased penis.\n\n\"Mmmm...milking...\" He thought, tongue coming out to lick his lips. Remembering that warm, sweet taste he sucked from Cathyls breasts. And that even saltier taste he got from that glob of her- \"No! Nononono...don't think about that, don't think about that. Aaah...\" Bailey shook his head and squeezed his eyes shut while his hand continued it's motions. His little balls being pulled up as he stretched and tugged his smallish cock. \"Just...just think about her tits. Yes...her huge breasts...ooohh...\"\n\nHis legs slowly spread apart, thighs parting to give himself easier access, his mind now willingly filling with images of Cathyls heavenly upper body. \"Aaah...oooouuuuu...\" Bailey moaned allowed, again his fists crumpling up the blankets as he clutched them to vent his arousal. Limbs squirming and writhing while he basked in his pleasure.\n\n\"Beautiful...gorgeous breasts...oh fuck...I want them in my mouth...\" He remembered the taste of her hard nipples rolling on his tongue. The smooth creaminess of her milk as he washed over his taste buds. His hand began to move faster, and he could feel the river of precum spilling from his little cock, it slicked up his shaft and made quiet 'schlick' sounds with every stroke. \"Ohhhh God...so big...so beautiful...\" He focused on her tits, her smile, her piercing eyes staring down at him while he sucked...\n\nHis shapely hips beginning to buck up into his grasp, he gripped his tool so hard and his hand was beginning to fly into a blur of speed on it. Cherry sized balls bouncing excitedly with the speed of the jerking, like they were jumping for joy at being able to release their second pent up load of happiness for the day.\n\n\"Uuugghhh!\" Bailey squealed, feeling his belly beginning to tighten, images of Cathyls hands guiding him to bob his head. As he sucked...\n\nHe could hear her voice in his head, 'That's it...ohhhh fffuck...suck it boy...suck...'\n\n\"Ohh! Fuck!\" He felt his arm beginning to tire from his speedy motions but he kept going, too close to turn back now. The peak of his pleasure was approaching, his free hand reaching up to feel along his breast, grabbing and pinching one of his nipples. \"Ouu!\" Feeling particularly sensitive today to the touch. \"Yes...yes...yyyyessss!\"\n\n'Good boy...good boy...suck my cock...' Her giant horse dick being plowed into his tight mouth, fucking his face as she bucked her hips. The underside beginning to undulate as her load began to flow out, freely spilling into his slutty mouth...\n\n\"Fuuuuuuuuuucckk!\" Bailey squeaked, \"Hnnnnnngggguuugh!\" His climax hitting him before he could wish the thought away. And it seemed to only stoke the fire further inside him by sending earthquake like tremors of ecstasy up his tiny frame. Imagining that giant horse cock blowing down his throat, just filling his belly with an endless amount of her sperm. It sent him soaring over the edge.\n\nBailey's body spasmed, his hips lifting into the air as his back arched, neck craning backwards as his head fell into the pillow, and his snow white cum began to spurt out of his singing cock. Shooting long strings of his spunk into the air, only to have it come all the way back down and splatter all over his once clean body. He convulsed and twitched, humping the air from his almost bent in half position, had he ever been this flexible before? He couldn't recall and he didn't care, this was one of the most intense orgasms he'd had in a while.\n\nHis climax lasted a looooong time, he felt like he had squirted out nearly twenty jets of his jizz before his cock had finally began to settle down, and the roaring inferno of lust in his belly came down to a light simmer. And only a few more light aftershocks of bliss pulsed in his body before he felt all the strength leave him and Bailey collapsed onto his back. \"Haaaaahh...haaaaah...haaah...\" He heaved for breath, feeling completely drained and sticky all over. He covered himself in quite a bit of cum, definitely his biggest load in a long time.\n\nWeakly he raised his arm to look at his hand, and as expected, it was covered just like the rest of him in drops of his runny sperm. Not nearly as thick as Cathyls was, not as heady smelling, and not as much as her load.\n\n\"Oh...why do I keep thinking about it?\" He thought upset with himself, he had just cum to the thought of not only her cock. But the thought of...putting it in his mouth. Rather than her breast or ANY OTHER body part, her cock, he imagined her cock in his mouth.\n\nAnd it was really intense, and reeeeeeeeally good.\n\nHis hand fell back down onto his chest, landing in a few more droplets of his seed. \"Haah...how am I gonna keep up working here like this?\" He said aloud, subconsciously running his hand along his chest, rubbing his own spunk into the skin. Wishing that it wasn't his that he was playing with...\n\nThe Following Day\n\nBailey's night was still pretty restless, even after he finally satiated his desire, albeit not to his typical fantasies, but the deed was done. But still he tossed and turned quite a bit until finally managing to nod off, only for once again the blaringly loud alarm clock to rip him away from slumber, forcing him to start another day.\n\nHe dragged his sore body out of the comfort and protection of his bed, then got dressed in his farmhand attire. Once again ignoring his preferred choice of clothing, the tighter stuff that he had. If yesterday wasn't a damping agent enough on his mission to become stronger and manlier, he wasn't going to throw in the towel just yet. He took one extra quick glance at his booty before putting pants on. Not that it was an easy task to do so though.\n\nHe had such a bubble butt that even his normal underwear only partially concealed his ass cheeks. And it seemed like even these baggy pants had trouble getting around the large supple swell of his booty. He had to hop up and down to yank them up and over his hips, were they this tight yesterday? This was ridiculous! He ran his hand along the edge of one of said cheeks and sighed, if he bent over, he looked like a girl with how wide his hips were round his ass was. He needed to put muscle in other areas so his ass didn't look so damn sexy.\n\nNot that he was TOTALLY against having a sexy ass...but he wanted to get a girlfriend at some point. And women want manly men, of course!\n\nHe learned enough of the ropes yesterday so that he was confident he could do all the hard work again. Maybe with a little help from another farmhand, but probably not Cathyl. As beautiful as she was, the embarrassment from yesterday was probably going to be too much for either of them to see each other again too soon. So he wasn't expecting to see her today, if anything at least not up close enough to have a conversation.\n\nSo after he put on his hat, which thankfully was spared the torrent of Cathyls girl jizz since he took it off before the 'milking' happened. He headed for the door, grasping the handle and pulled it open.\n\n\"Well finally! Took Ya'll long enough, I've been waitin' on your rear-end for nearly an hour.\" She was there, right outside his door. Practically in the same spot he met her in yesterday, only minus the tackling.\n\nBailey's jaw hit the floor, she stood before him in all of her glory. Overalls like yesterday with her large hatchet over one shoulder, the other hand on her hip, and those golden orbs that instantly caused his sleeping cock to practically jump awake.\n\n\"C...C-Cathyl?\" Bailey stammered out. \"Wh-What are you d-doing here?\"\n\nShe narrowed her eyes and her shoulders slumped, \"Alright boy, now I understand that you might still be a little rattled from what happened after I begged ya' to milk me. So I feel it's probably for the best if we just face this head on and not let it impede the work flow we got goin on here on the farm.\" Bailey simply stared at her, still a little in shock at seeing her again so soon. \"Listen...I feel like we got off to a bit of a bad start, well...things seemed to be goin' alright until I went and jumped ya' in more ways then one.\" She sheepishly rubbed the back of her head, lowering her hatchet to one side. \"But I wanna make it up to ya', so I'll do a lotta the heavy liftin' today if it means we can be all squared up and just kinda...move on?\"\n\nAt first she was answered with silence, Bailey still staring, but no longer as shocked as he was when he first saw her. Now he was staring at...just her...\n\nThe target of his fantasy from last night, his eyes wandering over the huge swell her breasts put in the overalls she wore. The same black bikini on underneath them that she had on yesterday, he almost started to drool looking at them concealed like this. His gaze even began to wander downward, kind of half listening to her apology as they made their way to her belly, then lower than that to her crotch...\n\n\"Oh...wow...she's even more beautiful than yesterday...\" He slowly looked her up and down, his brain once again putting the image of what she kept tucked away between her legs into his mind. But this time he didn't shy away from the image, he didn't shake his head and try to get rid of it like before, turns out it was much harder to when she was just standing right there in front of him. \"God why does she have to be so attractive!?\"",
        "He was looking at her long legs, ending in hooved feet when he first noticed her hand appear at the top of his vision, curling a finger trying to signal him to look up. \"Oh Bailey?\" He blinked and his vision darted back up to her face, \"My eyes are up here hun.\"\n\nBailey flushed pink, \"I..! I'm sorry I...I didn't...\"\n\n\"Hmm...either my hormones are working their magic way sooner than I thought they would, or this boys got a little crush on me.\" She smirked at the thought. She had been standing outside the house for damn near an hour and fifteen minutes, nervously pacing back and forth and rehearsing her apology in her head a thousand times before he finally opened the door.\n\nCathyl had thought that she ruined whatever chance she had with the new boy by freaking going primal on him yesterday and not only forcing him to milk her tits, but molesting him, and forcing him to jerk off her damn cock. Revealing how she was a breeder monstergirl for the farm and showing him that she had no pussy, which is probably what he would've preferred, and instead had a big horse cock and two twin balls beneath it.\n\nShe was lucky enough he didn't B-line for the high hills when she whipped it out in front of him, but that didn't make it okay that she showered him in weeks of pent up lust. She hadn't cum THAT much in quite a long time, but she couldn't help it. She was use to her own rough hand jerking her cock, and she'd been so busy lately she just didn't have the time.\n\nBut feeling Bailey's soooo soft, supple hands gently touching her meat, she didn't have a chance. And from the pleasure she got, it was sooooooooooooooooo worth it.\n\nOnly in the aftermath, she was thinking that Bailey was gonna quit, and she had messed up her only chance at having someone to have a little fun and R&amp;R with. So she swallowed her pride and showed up here waiting for him.\n\nNow though, after seeing his reaction to her attempt at an apology, openly just staring at her voluptuous body. It all started to become clear to her.\n\nShe grinned at the realization, and she nearly face palmed at why she didn't see it before. His desire to bulk up and get all manly man like, his natural feminine body and incredible curvy ass. His quick and immediate reaction to her cock in his face, and his skills at handling it too. Plus now, he looked at her as if he wanted more, so it was obvious.\n\nThis little boy was a natural born butt slut in denial!\n\nCathyl almost wanted to jump for joy thinking about it, but kept her cool, knowing that this was still a delicate matter. It was one thing to actually find a boy who liked it in the butt as cute as Bailey. But it was extremely rare to find one that was in denial of the fact that he craved cock. Or more specifically...\n\nCathyl's girlcock...\n\nSo her plan from yesterday to help him work out all the 'right' muscles in his jobs on the farm as making even more sense to her now. And she quickly added a few new ideas to it in order to help cute little Bailey along.\n\nIt would be a delicate process, but Cathyl was confident that she could do it. She just needed to kick things off with a little trickery.\n\n\"I'm sorry, I didn't mean to...\" Bailey tried to apologize for checking her out, but Cathyl waved her hand.\n\n\"Oh don't you worry about it. I can hardly blame ya, I mean you saw my titties, and my other...parts. So who am I to judge if ya'll are a little curious.\" She said, dismissing the ogling. \"I'd rather have ya' be lookin' me up and down with that look rather than a one of disgust.\"\n\nBailey perked up at that, \"Oh nonono I'm not disgusted at all. I guess just...surprised is the better word for it?\"\n\nCathyl shrugged, \"Monstergirls are full of all kinds a surprises hun'. But anyway...sorry again for jumpin' ya yesterday, just got all worked up and couldn't help myself. Oh, and I also owe ya' a thank you, these damn things felt like they were bout to burst before you saved the day.\" She puffed out her chest a little bit, knowing that Bailey's eyes would lock onto them like a cat's on a laser pointer.\n\n\"O-Oh...um...you're...welcome?\" He stammered again.\n\nThe minotaur leaned her arm on the door frame, \"Well I s'pose I'll get right to it, \"do ya'll think you can work today? I'd understand if ya'll wanted a day off or somethin' like that.\"\n\n\"No I'm ok!\" Bailey shook his head, \"Again I guess yesterday I was just really surprised. But I can do the barn work that I have to. It's my job anyways so I can't just call it quits because we had a pretty...interesting rendezvous.\"\n\nShe smirked, \"Yeah, I found it pretty interesting myself too.\" Her smile lingered as did her eyes on the boy. Her was already pink in the face, but that look she gave him made him turn even pinker and he couldn't help but look away shyly.\n\n\"R...right...so...what's on the agenda for today then? Same stuff as yesterday or..?\" He asked, trying to change the subject.\n\nCathyl shook her head, \"I'll show ya what we gotta do, and like I said I'll do the heavy lifting for today. Oh and by the way...I believe your clothes got a little...well...messed up due to my...excessive...yeah?\" She asked as he walked out the door beside her. \"If ya'll want I can send over one of the other workers to pick up your clothes to run it through the laundry.\"\n\nBailey nodded, \"Um yeah, that would be nice.\"\n\nThe two of them then began their trek heading back to the farm to begin the days work. On the way though, Bailey noticed something in the air as he walked along. And Cathyl took note of him consistently sniffing the air a few times curiously and she smiled mischievously. It confused the young boy for a bit as he couldn't seem to pinpoint where it was coming from, but ever since he started walking with Cathyl...\n\nSomething smelled really good...\n\nHours Later\n\nCathyl was true to her promise that she would do most, if not all of the heavy lifting today. She chopped all the wood, carried the majority of the logs, hauled the heaviest sacks, lifted the larges hay bales, while Bailey was given much smaller items and objects to haul around. Of course that still managed to exhaust the poor thing, so much walking and lifting even with eighty percent of his work load being pawned off on the big, strong monstergirl.\n\nIt was another hot day with the blaring sun, so Bailey once again overheated in his heavy plaid shirt and tank top undershirt. He wanted to strip again, but we all know what that lead to yesterday. So he suffered in silence, sweating the day away as he practically dragged a burlap sack of potatoes into the barn.\n\n\"Ugghh...ggguuhh...rrrrgh...\" He grunted and groaned, adjusting his tight grip on the mouth of the bag so as to hold onto it. But his hands were raw despite the gloves he wore, and still sore from all the work he did yesterday. \"Oh God this place is gonna kill me.\" He whined, less than twenty feet from the open barn entrance now. Cathyl had already gone ahead of him, carrying four bags of potatoes on her arms like they were nothing.\n\nBailey didn't know much about farm work, but apparently their organic, homegrown crops sold really well in the public market, so a lot of the work wasn't just animal care and such, it was moving mass quantities of the crop back and forth between locations so it can be counted, sorted, cleaned, harvested and packaged for shipment. Much of his day went into these things, with the worst parts being hauling the product to where it needed to be. Then going back to where more of it was, bagging it up and hauling again, rinse and repeat about seven or eight times per type of food.\n\nThey produced so much on this farm, much to the detriment of exhausted Bailey.\n\nEventually though, he finally made it into the barn, his legs crying for rest, his hands burning, and his face drenched in sweat that was only made worse by the straw hat surly creating a puddle of perspiration on top of his head.\n\nBut he made it at last, and spotted the pile of bags all containing the oval shaped brown veggies, so he quickly made his way to them and ungracefully plopped his last bag down into it. \"Ugh! Haaaaah...finally...\" Out of the corner of his eye he spotted one of the water barrels they kept in the barn, which they used to refill the basins and troughs for the cattle. But at this moment Bailey didn't care, he darted for the barrel, throwing his gloves off his hands and instantly shoved his burning palms into the cold liquid. \"Aaaaaaaaahhhhh...\" He sighed happily feeling the refreshingly cold temperature coat his delicate hands, soothing them from their rough day.\n\nHe almost wanted to dunk his head in there too, but he reminded himself it was for the animals, and if he was spotted by Cathyl while doing it there was no way he'd live it down. But that also left him with a question in his mind...was he still trying to impress her?\n\nAgain he reminded himself the whole reason for taking this job, was to impress girls. So that he no longer was the feminine boy in school and all-around town who couldn't attract a lady no matter how hard he tried. But when he met Cathyl, she became the target of his intentions at first, he wanted to show off that he could be a hard worker, and try to get her to like him. It also helped that she was unrealistically gorgeous, with a nice tough girl undertone to her rugged appearance.\n\nBut then the milking happened, and although he was freaked out, she approached him today like nothing weird had happened at all. And apparently, she really liked it, well of course she did. He gave her a handjob for God's sake! But that brought him back to his original conflict, if she wasn't an ordinary girl...well, ordinary in the genitals department, did he still want to try and get her to like him like that?\n\nIt's not like he didn't enjoy what happened yesterday, she gave him his own little handy as well, and it was amazing! His spine tingled just at the thought of it, so he wasn't violated or taken against his will. He was just left with wondering if he would be able to get past the giant dong in her pants.\n\nSpeaking of which...he realized that he had been deep in thought about her for a while now, but didn't see her.\n\n\"You uhh...checking the water over there for traps or suomthin'?\" Cathyls voice came from around the corner. In the center of the barn there was a small mini-hut surrounded by lots of hay bales that she leaned around and watched Bailey dunking his hands from.\n\nHis head whipped in her direction, \"Uhmm...my...hands were...sore.\" He said, almost sounding like he wasn't even sure of the statement himself.\n\nBut still, it managed to get a chuckle out of Cathyl, \"Aww, well, second day out here's the hardest. You're hurtin' before you even start workin'.\" She said before taking a sip from the clear glass in her hand.\n\nFilled with a white liquid...\n\nAgain like clockwork, Bailey's eyes went right to what Cathyl wanted them to. \"Um..wha...what are you drinking?\"\n\nShe grinned, \"Just some milk...what? A girl can't enjoy her own brand?\" She took another sip, slurping audibly.\n\nFor some reason, Bailey's throat dried even more than it already had. He hadn't had anything to drink yet this morning, and he had been working all day in the hot sun. He needed to remind himself to bring a water bottle for tomorrow. But he also was reminded of what that milk tasted like...her breast milk pouring into his lips...\n\nAlthough he wasn't exactly craving a warm drink, he recalled that it was quite yummy. And his tongue poked out to lick his thirsty lips at the sight of it.\n\nCould he really muster up the courage to ask for it though? Obviously, it didn't take a genius to put two and two together and see the awkwardness of asking for milk from her after the other day.\n\nSo he instead tried to slyly sneak in a way of asking, \"Where um...where did you get that?\"\n\nShe nudged the hut to her side, \"The fridge in there, gotta store my milk somewhere hun. Goes bad if ya' let it boil in the sun all day. Why? Feelin' thirsty yourself? Wanna take a little break, without milkin' this time?\" Cathyl asked innocently and comedically enough.\n\n\"Yes actually, very.\" Bailey nodded, \"And I uhh...don't think I should drink this right?\" He lifted his dripping wet, now soothed, hands from the water barrel.\n\nThat actually made the minotaur giggle, \"Naw, that's just for the cows, and the twins on occasion.\"\n\n\"Twins?\"\n\n\"Don't ask.\" Cathyl turned to disappear into the hut for a moment as Bailey swung his hands around to air dry them, then followed after her. Before he could get around the corner though to see where she was, she reappeared in his view, now holding two cups in her hand. Both filled with a refreshing looking white fluid. She held the glass she hadn't been drinking from out to Bailey, \"Here ya'll go, wet your whistle.\" She sipped her glass again.\n\nBailey gladly accepted it, \"Thank you...\" But hesitated, holding the cup in two hands, thinking about how Cathyl had apologized to him earlier and he hadn't really talked to her about it. \"Um...Cathyl?\" He asked.\n\nCathyl felt her skin tingle as he paused with the cup in his hands, seeming to stare down into it. \"Yeah? What is it?\"\n\n\"About yesterday...\" he began.\n\n\"Phew...\"\n\n\"I wanted to say, it's okay about what happened. I mean, like I said earlier, I was really surprised and...definitely was caught off guard to find out you have a...you know.\" Cathyl nodded again, \"But, you're really nice and I know you were in pain yesterday. And I know little to nothing about how the monstergirl species functions so I probably could've handled it better too if I was better versed in all of this.\" His fingers tapped his glass, \"So...I guess I'm just saying, I'm glad that we're still working together and if you need help with the 'milking' again, I'll be happy to. Just as long as you maybe give me a warning first on how bad it is?\" Bailey made up his mind, he did still like Cathyl, and...maybe there was a way around the big girl she packed downstairs?\n\nBut even if there wasn't, she was still insanely pretty, and she was helping him get in shape, so he would help her if she needed him to. Purely for professional reasons of course, that's what he told himself. Not because he couldn't stop picturing her cock in his head...\n\nCathyl actually laughed at his statement, and again, Bailey found himself smiling too at the sound of her giggling. She had the cutest laugh for a big tough girl.\n\n\"Sure, I think I can do that.\" She glanced between Bailey's pretty blue eyes and his still untouched drink. \"Well, how bout we cheers to that?\" She offered, moving her cup a little forward.\n\nHe smiled wider, \"Sure!\" And he too brought his cup forward, clinking the glasses together and thankfully not noticing that his own 'milk' was a bit thicker that Cathyls in how it sloshed around in the glass.\n\n\"Drink up!\" She egged him on, raising her glass to her lips, watching over the rim as he brought his cup up to his own. Tilting the glass back and allowing the liquid to pour into his thirsty mouth and...\n\n'gllp'\n\nCathyl grinned.\n\nBailey was parched, so when the cool milk finally entered his mouth he happily began to guzzle it down. It tasted a little different from yesterday, probably just because it was chilled and not directly from her boobs. But it was still just as creamy and sweet, maybe a little salty too? Definitely unique, but he didn't mind, it was tasty and he was thirsty as heck, so he happily tilted the cup further and further back, swallowing every drop that entered his mouth until the cup was drained.\n\n\"Gllp...aaahhh...\" He sighed, refreshed, \"Thank you so much, can I have more?\" He asked, a sick part of him delighting in the fact that he was sampling her milk again, although he wasn't sucking her tits, it was still her milk. And something about that fact made a tingly feeling bloom in his lower belly.\n\nThe minotaur's eyebrows lifted as he said this, and looked at her with an eager smile on his face and batting long eyelashes hopefully. \"Wow...he didn't even notice! What a cutie!\" Her grin grew, \"Why of course you can hun, gimmie one sec.\" She said taking his glass and turning back to the little room in the hut. \"He enjoyed that one so much, I think I can skip straight to a thicker drink with this one...\"\n\nHappily Bailey walked over to the hay bales outside the hut and sat down, already feeling invigorated from ingesting something so yummy. It was strange, her milk was cool and yet it felt like it warmed his throat all the way down, even now he felt a pleasant heat in his belly. But not uncomfortably so like the weather made him feel, it was just...soothing. \"If her milk is always this good, I'll definitely help her with milking again! I mean, what's more manly then nursing on a hot girls big boobies?\" He snickered at the thought. His throat was definitely less parched now, but more milk definitely wouldn't hurt.\n\nSoon after Cathyl returned with another full cup containing a thick white substance, her glass was emptied so she only had the one glass this time. She approached Bailey's seated position so he had to look way up to see her face with her height. \"Here you go hun, down the hatch!\" Again she goaded him on, but was very eager to see how this drink was going to turn out.\n\nWith a gleeful smile, he reached up and accepted the offered glass. \"Thank you.\" Then without a second thought, he brought it to his lips and resumed drinking.\n\nOnly this time, after the first swallow, he again noticed something different. Something much different.\n\nThe liquid in this glass was waaaay thicker than her milk he just drank. It poured more like a pudding then an actual liquid, and when it reached his mouth he nearly had to chew it in order to swallow. The taste also wasn't bad, just different, still sweet, but saltier, and had a headiness to it that for some reason made him want to keep swallowing. He blinked a few times and looked into the cup, watching the thick, viscous fluid slowly drain into his mouth, but his throat wouldn't stop gulping. A musky scent came from the cup as well that only served to fuel his desire for more, he couldn't explain it, every instinct in his body just screamed, 'swallowswallowswallowswallow'.\n\nCathyl watched with her hands on her hips, a content, conniving smile on her lips as the boy drank down every drop. Only leaving a small circle of her 'milk' in a ring on the bottom, he glanced up at her with puffed out cheeks as his mouth was full with the last few gulps. \"Go on now...finish.\" She said calmly, not commanding him, but the way she looked down at him...he could feel her desire to watch him finish the rest of it. He knew she was wordlessly telling him to, and that's how he knew something was very wrong.\n\nBut he did it, he flexed his throat, and Cathyl watched his little neck swallow one gulp after the next. Drinking down all the thick, seed she had prepared for him.\n\nHe finished with another little, \"Ahh...\" This one though sounded a little less refreshed, and more relived. But he still licked his lips, catching the remaining salty residue on them.\n\n\"Was that good hun? Nice and yummy for ya'?\" She asked, her head tilting cutely to the side and her tone sounding suspiciously innocent. No point in lying though, even though he could tell this was not ordinary milk, it wasn't gross, it actually tasted pretty good. So he just nodded at her, \"Great...I'm glad to hear it Bailey...you want some more?\" She asked.\n\n\"Ummm...\" Bailey felt another non-temperature related heat rise to his face. Why was she looking at him like that? Her eyes looking him over similarly to how his gazed over her earlier today, only she was being much more intentional about it. \"Uhh I'm not sure if I should. Thank you but...\" He tried to think up an excuse as to why he shouldn't have more of it, it was good, and as he drank it, he wanted more and more. But if this was going where he was thinking it was going...he wasn't sure if he should.",
        "\"Aww...but you said it tasted good?\" She feigned a pout. \"Don't you like my milk?\"\n\n\"I-I do! I just...think maybe two cups is enough to keep me going for a little while?\" He tried to offer.\n\n\"Well...I think you'll change your mind when you see how good it tastes when it's straight from the source...\" She said slowly, her hands coming up to the buttons of her overalls.\n\nBailey's eyes widened, \"S-source?\"\n\nCathyl nodded, \"Mhm...\" And her thumbs undid the snaps, allowing her jean overalls to fall away, exposing both her black and white bikini top, and her hard horse cock to flop out.\n\n\"Ayye! Oookayyy...\" Bailey immediately tried to look away and shield his eyes, \"Oh geez here we go again.\" Cathyl giggled above him, immediately reaching down to grasp her thick equine dick. \"Cathyl..I uh...\" He cleared his throat, \"I...I don't think we should be doing this...\"\n\n\"Why not hun? You just said you liked the taste of my milk...don't you wanna have more of it?\" She said sweetly, her hand squeezing the base of her sheath and moving up to the fleshy part of her cock. \"You just drank about a cup and a half of my ball milk, and that wasn't even hot. Trust me, it's much better when it's hot...\" His suspicion was correct, he wasn't drinking milk, she must've either mixed it with her actual breast milk, or she just gave him straight up a cup of cum. \"Come on Bailey boy...doesn't it look good? Don't you like how my cock looks?\" She started talking dirty, her voice taking on such a sultry sound with her words that Bailey hadn't yet heard.\n\nIt sent a chill down his spine as he contemplated how to answer her. \"I...I...\" But before he could, her hand came down under his chin to tilt his face back to look at her. The giant phallus beside him now in his peripheral. \"Oh my God...\" Suddenly that sweet smell from earlier became muuuuch stronger now...\n\n\"I wanted you to put it in your mouth yesterday but...I just got so worked up...I hadn't cum in a looong time ya see?\" She went on, her hand coming up to start stroking what it could of his hair until the silly hat got in the way. Cathyl made quick work of picking it up and tossing it away so it wouldn't obstruct his face. \"And you just...handled me so well I just lost it. I needed to just cum right away and, so much of all my seed just went to waste like that, when it could've gone somewhere much more suited for it...\" Her hand played with a lock of messy blonde hair for a moment before she traced her index finger along his cheek to his pink lips.\n\nBailey's eyes were still locked on the monster protruding from below her abdomen. It was so big, so veiny and thick, the tip flared at the end with a piss slit big enough to fit Bailey's hole tongue in there.\n\n\"Could...could I stick my tongue in there? Oh wow...it smells so good...\" Such a strong musky scent that made his eyes want to roll back, it was clearly coming from her cock, but it seemed to be the strongest closer to her balls. The two huge orbs just reeking of her pheromones that washed over Bailey's senses. It was turning his brain to mush, making his mouth water and his throat becoming suddenly so dry again.\n\n\"Cathyl...I'm not...sure...I can...\" He tried to protest, feeling his resistance waning. What was going on? Every since he drank more of the special milk, he was getting horny, and now with her cock out like this, Bailey was soooooo turned on. Every word that drifted from Cathyls lips just sounded like liquid sex rolling over him. The smell of her huge cock made him just wanna rub it all over his fucking face and bathe in its scent. But he tried to hold back, forcing himself to remember why he was here and what he was doing.\n\n\"I don't want her cock...I don't want her cum...I don't want it...I don't...\"\n\nHe felt her hand continuing to pet his locks, \"Just take a good long...close up look baby...she's excited to see you again.\" Her voice went low, tempting the boy with little teases and flirts. \"She remembers how good you made her feel, and I think she wants to play with you again.\" A heart melting giggle came from Cathyl as she moved her hips closer to his face. The twenty-inch cock only a few inches away from him now in his still seated position.\n\nBailey looked at it like he was dying of thirst and he just found a big hose connected to an endless supply of life liquid. His tongue licked at his lips again, mouth watering so much he as worried he'd begin drooling. \"Cathyl...\" His voice weak, and getting weaker... \"It's...so...big...\" Was all he could say.\n\n\"Thank you babe...\" She said and pet his head one more time. \"Listen...I know you're a little at war with yourself right now. Why don't we just try something...\" She proposed. \"Get on your knees for me hun...\"\n\nHis heart was in his throat, Bailey could hear it from how loud it hammered. And his big blue orbs glanced nervously up at Cathyl, unsure of how to react. But she remained firm where she stood, placing both hands on her hips and waiting for him to comply.\n\nIt felt like forever, but slowly...like a good boy, Bailey obeyed. \"O...Okay...\" Shifting off his seat on the hay, and down onto his knees in front of her.\n\nCathyl took a step back so that her cock wouldn't be pointing far over his shoulder and instead, aiming directly at his pretty face.\n\n\"Good boy...\" She said, and if her voice sent shivers down his spine before, hearing her call him that made it outright tremble with desire. Just look at him, on his knees in front of this big cocked horned Minotaur, like she was a sex Goddess he was worshipping. \"Now, I want you to take both of your hands, and grab my cock...\"\n\nAgain there was a little hesitation on his part, but it felt like his body wasn't his own. His face felt incredibly hot, and his breathing was short and shallow. His hands moved being controlled by a force unknown to her giant schlong, like they had once before, and carefully he guided his fingers around the meaty pole. \"Holy fuck...it's so hot...so hard...\"\n\nCathyl moaned in approval has his little fingers gripped her shaft with such a nervous hold. This boy was so adorable, she couldn't wait to fuck his brains out. \"Well let's not get ahead of ourselves, gotta make him be honest with himself first.\"\n\n\"Okay hun, now...squeeze it.\" She ordered, and thankfully he seemed to be following her commands a little quicker now that he was slowly succumbing to the temptation of her. His hands tightened their grasp, and although her flesh had a bit of give to it, it was unimaginably hard.\n\nLike squeezing a hot steel rod, \"Gosh...this thing is like indestructible.\"\n\n\"Move your hands up and down it, milk me like you did yesterday...\" Her voice was calm but Cathyl was also melting inside. This was crazy, her plan was actually working, such a cute boy on her dick, gripping it and the tip soooooo close to his mouth. She wanted more than anything to just stuff it right in and make him hers. But she resisted and watched as he did as he was asked again, squeezing her shaft and stroking her length as she commanded.\n\nAt the tip of her cock, a large drop of clear shiny fluid suddenly spilled out as his hands got closer to her tip. Bailey actually gasped when he saw it come out, being so close it nearly landed on his face already. \"Her...precum...\" Even that was thick, like a clear syrup leaking from a large bottle with the cap open. Bailey's tongue wanted so badly to just stick out and lap it up. \"Oh God...why do I want it so bad. Her cum...nnf...fuck...I no...I don't want her cock...I don't...I don't want...\"\n\n\"See that there baby? That's how excited you got me?\" Cathyl chuckled, \"Your little hands feel so good...that's an early present for doing good. So you should go ahead and lick that up hun...\"\n\n\"Uuhhnn...\" Bailey audibly moaned hearing her say that, like he had been given the green light to go in and taste it.\n\n\"I don't...I don't want it...\"\n\n\"Go on...lick it up...\" Cathyl quietly encouraged, watching his adorable little tongue begin to sneak out of his lips, moving in towards her drop of precum that formed a string below her tip, threatening to drip down.\n\n\"I...don't...\"\n\nThe drop landed on his tongue, and the appendage swiped up the length of her flared cock head, catching the hole slimy trail on his taste buds.\n\n\"Oouuu...good boy...\"\n\n\"Ohhh God I want iiiit...\" Bailey's eyes nearly rolled back. Just that one little taste was enough to make his entire body shudder. He tingled everywhere, his grip tightening on her cock.\n\nCathyl smirked, \"Got ya...\"\n\n\"Now lick all up and down it baby...\" Without any hesitation this time, he listened to her, keeping his tongue extended, he dragged it all along the twenty loooong inches of cock meat. Tracing one blue vein in her shaft and having to shuffle forward a bit to make it down to her balls. \"Don't forget those too...that's where all your milk is gonna come from hun.\" She playfully added on.\n\nIt felt like any rationalizing Bailey had left in his consciousness was chucked out the window in favor of pure, primal instinct. Everything in his body just screamed at him to service that Queen cock, lick it all over, please it, make it feel good. Make it happy so it'll give you lots of yummy milk.\n\nHe licked down to the base, swiping his tongue a bit the further he traveled until he got to her large orbs, each one probably about the size of his fist. He inhaled deeply through his nose, \"Uuuuhhhhuhhhh...\" A long girly, trembling moan escaped his lips, but he didn't feel embarrassed about it at all. Just more horny, that incredible, heady scent radiating from her baby batter sack, it felt like he almost creamed in his pants just from the smell alone.\n\nAgain on instinct, he stuck his face right into the center of her nuts, shaking his head a bit and practically French kissing her balls.\n\n\"Oou!\" Cathyl squeaked in surprise, \"Wow, ya'll getting a little eager?\" His lips sucked on the smooth sack containing her orbs, pulling the flesh that he could fit into his mouth along with them. Then licked all over the balls, bouncing them on his tongue and rolling his moist appendage all over their surfaces. Cathyl closed her eyes, feeling more precum beginning to spill from her tip, \"Oooooouuu baby...good boy...yeah...play with Mama's nuts...uuunf...mix up all your milk baby...\"\n\nAnother guttural moan came from Bailey, he didn't even feel like himself right now, but at the same time it felt so natural. Like he was replaced with a whore in this moment, however it was the right thing to be. Confusing the young boy, but having no time to read into it further as he licked along the lower section of her shaft again. His face now even sweatier than before from the humid heat her balls produced.\n\nHe lathered up her shaft with all the spit his little tongue could muster, licking it everywhere like a succulent lollipop. All the way back up until he made it to the tip again, where another thick string of precum was drooping down. He quickly swiped it up with his tongue and lapped all the residual remains off of her tip, kissing and smooching it to get all of the precum there. He could feel her piss slit where the yummy, salty fluid was leaking, and his thought from earlier re-entered his mind.\n\nHis tongue probably could fit in there...and if that's where all her tasty juices were coming from...\n\nBailey didn't even finish rationalizing it before he stuck his tongue against the hole in her tip and pushed against it. Quickly squirming his way inside.\n\n\"Oh! Oooohhhh...\" Cathyl gasped at first from the sensation of feeling his little adventurous tongue wriggling around in her tip, then giggled at how quickly he was succumbing to her. \"Wow...you dirty boy...\" She grinned, releasing a relaxed sigh at the sensations. \"Hmm...but I think I'm done with the teasing. It's time for you to open up wide baby...\"\n\nBailey blinked up at her, but it was almost like everything was fuzzy, like he was seeing her in that same flowery field vision from the day before. Everything she said just sounded right, like if he did his absolute best to please her, he would be the most happy, lucky boy in the world. Making out with the tip of her cock and tonguing it like this...it felt so dirty...so slutty....so...good...\n\n\"Mmmmmmmm....\" Bailey let out a pretty whorish moan, his kisses becoming more and more open mouthed, sampling the taste of her equine tip, and slowly preparing himself to engulf it all like she said. He slathered it up with more spit and her spilling precum, licking and slobbering all over it to noises of approval from his Minotaur. Carefully working up the right about of lubrication to obey her command once again.\n\nOpening his mouth wider...and wider...until he felt his jaw ache and pressed the head of her cock against his mouth with a firm pressure. And with a little help from Cathyl pushing her hips forward...\n\n'Schlick!'\n\n\"Aaaaaaahaahaaahaha...\" Cathyl chuckled again at the wide eyed expression Bailey gave her as the flared cock head popped into his mouth, and with the widest part inside, several more inches of her cock immediately sank right in. \"Oooooohhhh yeeeeeaaahh...\" She moaned.\n\n\"Ho...holy fuck...\" Bailey thought, \"It's...in my mouth...\" He could feel her hips press forward again, and another few inches pushed in.\n\n\"Ooohh...wow...that's a fucking hot mouth of yours hun...ooh...that feels nice...\" Cathyl rolled her neck a bit, enjoying the warmth and moisture of his hole. The spongey tongue inside desperately lapping at the underside of her shaft as his jaw had to really stretch to accommodate her girth. \"Fuck baby...I wasn't sure you'd be able to do it but...oou! Looks like...you're a good little cock sucker ain't ya?\" She reached up to grab her breasts, squeezing the tit flesh hard to vent her arousal.\n\nBailey let out a guttural noise, \"Fuuuuuckk...\" Her continuously calling him baby, plus the little jab at the end calling him a cocksucker...he felt his legs tremble. \"Oh fuck yes...this cock tastes so good...\"\n\nHe turned his head a bit, trying to cram more of her into his mouth and forming a tight suction with his lips to pull her sweet flavor in. Both hands still on her base while he did his best to suck her huge size. Unfortunately he felt resistance of his gullet when he tried to go deeper, and he gagged preventing her from having access to his throat.\n\n\"Ahh...easy babe...don't worry, I'll help you go deeper. Just nurse a little for right now got it?\" She said and Bailey managed a nod, then went back to bobbing his head on the first fourth of her dick that he could fit. He'd seen plenty of porn movies and had an idea on how to handle a cock, but this wasn't a human penis. It was a giant, fat horse dick!\n\nSo he did his best, running his hands along her shaft, stroking her balls and watching them jiggle from his touches. Shaking his head more and sucking hard enough for his cheeks to go concave, trying to suck the life out of her dick.\n\n\"Mmmmm...\" Cathyl moaned in approval of every little thing he did, \"That's a good boy...\" She placed one hand on his head. \"Keep going...suck me good Bailey...\" Then placed the other on the back of his head.\n\nHer taste...her voice...her huge size...her smell...his spit slobbering and running along the sides of her cock and down his chin.\n\nBailey was going crazy, he felt like he could lose his mind on this dick, and he'd be perfectly happy with that. \"Uggh...so good...this is so good! Why do I love it so much...oh God...I want her to fuck my face!\" He thought rather dirtily, another whorish moan escaping his locked lips followed by more squishing spit and mouth sounds.\n\nHowever, it seemed Bailey's wish was about to come true as Cathyl suddenly said, \"Now...relax that throat of yours babe, and breathe through your nose...\"\n\n\"Hmm?\" Baley mumbled before, \"GLCKCKGGKK!\"\n\nBailey had never experienced having a baseball bat crammed down his neck before, but now it felt like he had. As Cathyl rammed her hips forward and her cock instantly breeched the weak defenses of Bailey's loosened throat, and plunged down into the depths of his tummy. A bulge forming on the spot from where his tight throat pipe had to stretch to hold the massive girth. His eyes bugged out of his head and his hands went to Cathyls thighs as his mouth replaced where they were on her dick.\n\nShe shoved her dick in deep...balls deep...in one fluid thrust.\n\n\"Ooooohhh now that's what I've been fucking waitin' for-oooh!\" Cathyl closed her eyes and looked towards the ceiling. Massive waves of bliss radiating throughout her as his hot tightness enveloped her cock. She hadn't experienced anything like this in far too long, a tight hole to cram her dick into. It was heaven, she didn't think she was gonna last too long, but she didn't care, she promised him some milk, and he was going to get it.\n\nTears began streaming down Bailey's face as his gag reflex tried to expel the intruder to no avail. \"GGGCHKK!\" He coughed, his hands clutching at the fabric of her jeans.\n\nCathyl chewed her bottom lip, \"Nnf...relax boy...oh...just hold on for me...I'll show ya' how a good boy sucks a cock...\" She chuckled. Her hands were still gripping his hair as she pulled him back, extracting a good few inches of her cock from her throat before shoving her hips forward again and jamming it back in. \"Unf! Awww yeeeeeahhh...\" She moaned, quickly settling into a rhythm and repeating this motion.\n\nBailey's watering eyes went crossed as he stared at the impressive tool pulling out and pushing back into his throat. All the while making disgusting throaty sounds of his esophagus being raped, \"Gcckglllckgaackkggckckcgllghckk!\"\n\nHer cock was pulled so far out, then rammed back, out and in, out and in. Her big balls patting his chin with every forward thrust as Cathyls face took one of pleasure and concentration. Using Bailey's throat hole for ecstasy, while Bailey was experiencing a mixture of suffering and delight.\n\nHe could barely breathe, only getting a few whiffs of air that was contaminated with the thick scent of her balls. She was all around him, she ruled his world, he was her tool for pleasure.\n\nAnd he was loving it. His little dick was practically cumming it had leaked so much, he was sure another pair of pants were soiled now. Eventually, he let his hands fall from her thighs, no longer even bothering to brace himself on them as she took what she wanted from his cute face.\n\n\"Nnf, ah, ah, haah, haah, mmm, mmm, mm! Oh...haaaah...\" Cathyl moaned and growled in beat with her thrusts. His throat was so tight, wrapped around her and squeezing tighter than any hole she had fucked before. This was the best oral she had ever experienced! That's when she remembered, he was a virgin. Never had any cock before in his life, \"Aaahahahaaa...\" She let out a slightly evil laugh at the sick delight of taking his oral innocence.\n\nAnd soon...the rest of it as well...\n\nBailey felt his world going blank, all that was important was her cock, and swallowing everything that he could. He had no idea how long she fucked his skull like this, but it felt like forever before she finally began to moan a bit of a higher pitch. Similar to how she did yesterday when she was almost ready...\n\n\"That's...it...baby...haaahhaahhhhh...fuck...oooh yes...aah! Are...ya'll ready? For..mmm...my fresh...hot...milk? Ahaha...\" She chuckled again, before reclining her head back once again, \"Oh...fuck it's comin' baby...ahh get ready...\"\n\n\"Oh God...her cum...\" Bailey's eyes began to roll back. \"Oh fuck...please...yes...\"\n\n\"Fffffuck...\" Cathyl tensed up and her thrusting reached a fever pitch until she held her cock in balls deep. \"UUUGGHHHHHH FUCK!\" She growled as her release finally boiled over from her nuts. Bailey just hung there, impaled face first on her dick as she came. He could feel the weight of her testicles on his chin. Flexing, pulsing and squeezing out her load, and then he felt the underside of her horse dick undulating. Her hot, thick streams of girl cum shooting up and out of her balls, travelling up her cock pipe and right down into his belly where she was sheathed. \"OOOOOHHHHHHHGHH....\" Another long low growl emerged for her climax.",
        "He could feel the searing heat travel from the top to the bottom of his neck as her seed began to pour away. Spraying like a geyser straight into his stomach, he actually put a hand over his belly as he felt the torrent of her spunk flowing in. Heating his tummy to a temperature hotter than the sun, while his throat could do nothing but helplessly gulp. And gulp, and gulp, and gulp.\n\nHer knuckles went white in his hair as she held him against her pelvis for the first few seconds of her orgasm, then proceeded to gyrate her hips more. Grinding into his face and humping to fuck her cum down his gullet.\n\nBailey's neck made very audible 'gllp, glllp, gllllp.' Noises, his esophagus flexing and undulating with every heavy swallow. There was so fucking much...he couldn't swallow it fast enough to keep it all in, and he felt the excessive white cream pooling up through his plugged throat pipe until it spilled back into his mouth and out his lips.\n\nDrooling down from his overflowing tunnel, it sloppily spilt down her nuts and his chin, all the while they continued to pulse and pump more of her baby batter into his filling up tummy.\n\n\"Ohhh...yesss...I love it...I love her cum...\" Bailey cupped his hands under his chin to try and catch as much of her delicious sperm that he could. He was lost in a haze of excitement, her hormones having practically melted his brain into a cum addict. And he wanted to make sure he got as many of those little swimmers in him as possible. The long strands of jizz landing in his cupped hands, puddling quickly as it practically burst from his poor abused lips.\n\n\"Uuuuuuuggggghhhhh!\" She groaned low, vocalizing her pleasure, feeling the last few heavy throbs of her cock. She must've felt maybe nineteen full, long, heavy ropes of cum rush out of her, and into the belly of her beautiful 'milk boy.' He must've had at least a gallon or so of her hot load in his stomach now. She giggled a bit, and slowly began to pull out, loving his velvety smooth passage clinging to her on her way out.\n\nAll the while, Bailey continued to drink, his hands on his belly feeling the skin there rise up a bit. Bulging his tummy ever so slightly and giving him the feintest belly bump. When only the tip remained in his mouth, he got a real good taste of her, the still hot paste running all over his taste buds. It filled his mouth with its strong, musky taste, thicker than her milk...and tasting soooooo much better...\n\nFinally her cock head popped out of his mouth, a little stream of her spunk spilling from his lips again as he heaved for air \"Gaaagh...aeehhhh...\" He moaned, his tongue staying extended and his mouth open as the thick syrupy fluid covered him again.\n\nCathyl stroked her meat a few more times after she began to come down from her high, \"Ooooohhh...aaaaaahhhh...\" She sighed happily, glancing down with content eyes at the mess she made of her cute farmhand.\n\nHe was quite the sight, steamy, smelly cum plastered all over his lips, chin, and his little tongue which was still extended out in a wide smile. His eyes were looking up at Cathyl like she was the most beautiful being in the universe, and the rest of him once again had plenty of cum still splattered all over his chest and legs. His tiny hands cupped under his face holding a nice puddle of her slimy love goo in them.\n\nDrenched on the outside, and tummy filled on the inside. He definitely was skipping supper a second time.\n\nCathyl took a deep, happy breath in through her nose, and out her mouth. \"Hmmm...well hun...how was it?\" She playfully waved her sort of limp cock in front of his face, loving how his head followed it back and forth. Hypnotized and following it with loopy, spunk drunk eyes. \"Like my milk from the source?\"\n\nBailey nodded, albeit a bit out of it. Then finally closed his mouth to flex his throat again and gulp what was in it down, then immediately after brought his hands to his lips and audibly slurped up all the remaining seed that landed there.\n\n\"Aaaah...\" He sighed, sounding like he just finished a refreshing drink and licked his lips. Then looked up at her with a happy smile, keeping his hands cupped out in front of her. \"More please?\"\n\n*****\n\nA.N. *Sips my milk with loud lewd slurping sounds*\n\nxD Thank you all for reading and lemme know how you liked it? More is on the way as Cathyl has yet to take Baileys innocence yet. But it won't be looooong ;) \n\nAlso some of you quickly caught on to the reference to her hormones entering his body, and since most of you know I don't consider it a spoiler but yes we will be going into slight feminization soon. Not like him growing a vagina and getting tits lol no not like that, but he's definitely be getting girlier and girlier :3 however he will remain a boy. \n\nLemme know what you think, are you excited for chapter three?? :DD I aaammmm \n\nNext Chapter: Meeting By Hay Bales "
    ],
    "authorname": "DamienDeath20",
    "tags": [
        "furry",
        "futa",
        "futa on male",
        "horse cock",
        "manga",
        "minotaur",
        "monstergirl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/milking-the-bull-ch-02"
}