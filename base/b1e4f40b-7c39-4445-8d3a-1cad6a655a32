{
    "title": "Confirming Carter Bk. 02 Daedalus Ch. 06",
    "pages": [
        "The Daedalus has been equipped with the Ancient's cloaking technology, and Caldwell leads a mission to scout the Wraith gathering. Sam and Tammy have a falling out, then some serious make up sex. Tammy shows the first negative signs to her exposure to Sam's blood, and Teyla welcomes Caldwell home as befits a hero...\n\n(-)\n\nConfirming Carter Book Two Daedalus\n\nChapter Six\n\nInterior-Conference Room, North Pier\n\n0825 Hours\n\n\"Zelenka has the cloaking equipment installed on the Apollo, but he says he needs another day to fine tune and test it.\" Caldwell was saying. \"We took her out on a few test runs last night after his people knocked off, and we didn't have any problems with the cloak. There were some performance issues though. I don't know if you can really stall a starship, but I think we came damn close.\"\n\n\"I would have thought you'd be beating on the table demanding we go, Steven.\" Carter said, leaning back in her chair. \"I'm glad I was wrong. But I read your report, you tried to drop out of hyperspace, come to a full stop, then fire at multiple targets while putting the ship in a reversing turn to starboard.\"\n\n\"Yes, maam. I can do that maneuver with the Daedalus, and we should be able to have both ships behave in a similar fashion.\" Caldwell said. \"And I'm not going to be sitting in the big chair on Apollo. I'm not going to put someone else's life on the line because I got in a hurry. We found out what the problem on that was. A power relay overloaded and took the sublight engines offline. Zelenka's people said the problem was with the relay, not something in the cloak that caused the problem.\"\n\n\"We'll let Zelenka make his adjustments, but if we can go safely sooner, I'd like to.\" Carter said. \"I wasn't here when you hit those Wraith ships last time, and I don't know what kind of dead spaces there are in a hive, but I'm betting that there are alot.\" \n\n\"Are you thinking about beaming nukes onboard some of them, while we hit the rest with beams and missiles?\" Sheppard asked. \"They threw up shields pretty quick the first time we did it, and we haven't gotten another shot since. They come out of hyperspace with shields at full power now.\"\n\n\"I'm thinking along those lines, but I'm not exposing either of my ships to that force. I'm thinking drop and dash.\" Carter said. \"Teyla's people are saying that there are twenty-seven hives, and dozens of cruisers now, gathered out there in the middle of nowhere, and they're thinking it's some kind of summit.\" \n\nShe leaned forward, looking back and forth between them. \"I'm thinking, that if you beam a nuke onto a few around the perimeter, when they go up, we'll get secondary's off the nearby hives and cruisers. If enough of them start going up, we may get the whole gaggle of them, without risking either ship, or wasting alot of ordinance.\"\n\n\"That's a ballsy move, Sam.\" O'Neill grinned. \"But what makes you think that they'll be unshielded when we get there? From what Teyla said, the Wraith are just as hostile to each other as they are everyone else.\"\n\n\"We're the first one's to put up any kind of fight against them in a long time, Jack. And I think what happened with the Replicator homeworld has a lot to do with this.\" Carter said. \"They're out there talking about us, and the Travelers. They're wondering what they're going to do now that there other space fairing races in Pegasus that can be a threat to them. Add to that the fact that the Hoffen drug has poisoned their food supply, and they have to be seeing things getting tight for them.\"\n\n\"I've talked to Teyla about the intel we're getting.\" Caldwell said, bringing up a star chart on the monitor. \"This is the area we're talking about. It's dead space, there are no planets or space gates for light years in any direction. The Travelers are sending scout ships that sit at the edge of their sensor range, keeping an eye on what's going on. So far, none of them have been detected.\"\n\n\"This gathering is more than ten percent of the Wraith ships that we, and the Travelers know about. And the head queen, the one they call the Primary is there, that's been confirmed.\" Caldwell continued. \"There's still more hives on the way it appears, so we may have a few days to get the Apollo ready, and make plans. The question I have is, do we want to try something on our own, or do we want to see if the Travelers will come on to help?\"\n\n\"No.\" Carter said. \"If we decide to do anything, I think our stealth approach is going to our best and safest bet. But we need our own recon, and a test. We need to see if they have shields up, and if we can get in close without being detected.\" She highlighted an area on the chart. \"Steven, if you dropped Daedalus out of hyperspace here, where it should be outside their sensor range, how long would it take you to get to that cluster of ships at max speed?\"\n\nCaldwell looked at the chart, then tapped his comm and spoke quietly for several moments. He made a few adjustments on his tablet, then looked up at her again.\n\n\"Marks says we can actually drop out here.\" Pointing to an area much closer to the Wraith ships. \"That's quite a bit closer than you suggest. Apparently we give the Wraith sensors too much credit.\" He said with a smile. \"I'm like to split the distance, and come out here.\" He highlighted an area on the map. \"Just to be safe. From there, we're looking at three hours in and back. Once we reach the cluster, we can use passive scans to check for shields and do a count of our own.\"\n\n\"That sounds like a plan. We're going to adjourn, and I'd like you to be ready to go by eleven hundred hours, sooner if you can. Teyla is going to want to go, and I told her that we'd send her when we did anything, but I've been thinking about that.\" Carter said. \"With the Wraith being able to detect her, and get into her head, she could present an unnecessary risk. But damn, having her on the scene would be valuable too.\"\n\n\"We've already talked about that, colonel.\" Caldwell said quietly. \"She understands the risk, and knows that she can't go. She doesn't like it, but she's accepting it. We've been going over the schematics we got from the Travelers, and she's pointed out places we can beam nukes in where they shouldn't be detected too quickly. If we work quickly, we should be able to have a dozen nukes on timers in place and be safely away before they start going off.\"\n\n\"Good. And thank you, Steven.\" Carter said as she stood up. \"Get going, and at the first sign of trouble, you get your ass out of there as fast as you can.\" She looked at Sheppard and O'Neill. \"I need a couple hours, but I'll want you two back here, and we might as well get Andi too. We need to look at what's going on with Anchorage.\"\n\nShe walked over and stopped Caldwell at the door, putting her arms around him, hugging him tightly. \"You be careful, Steven. No heroics, just go in, get what we want, and get out. You and your crew are more important than a few Wraith ships. We can always pick them off one at time if we have to.\"\n\n\"Yes, maam.\" Caldwell said with a smile. \"My boss already had that little talk with me. We'll be careful, And we'll be home soon.\"\n\n\"She did, did she?\" Carter laughed as she let him go. \"Well, in that case, let me say good luck, and good hunting.\"\n\nInterior-Kitchen\n\n1040 Hours\n\n\"Ops says the Daedalus is away. They left a few minutes ago.\" Tammy said as Carter and Ronin came into the room. \"And you left your comm on the table. Again. You don't have to wear it, but you do have to carry it with you.\" She handed her the headset as she sat down.\n\n\"Bitch, bitch, bitch! That's all you've done for two days.\" Carter laughed as she dropped the comm in her vest pocket. \"What's the matter, sweetie. You not gettin' enough lovin'?\" She laughed as she leaned over for a kiss.\n\nTammy kissed her, but it was just a light peck. \"And no, I'm not getting enough lovin', as you so quaintly put it. What do I have to do Sam? I try, but you're not interested. Is it the cameras? I can turn them off, all you have to...\"\n\n\"I'll be in the living room.\" Ronin said, then stepped out quickly.\n\n\"Jezzus, Tammy! Was that necess...\"\n\n\"Fuck you! I don't want to talk about it anymore. You're not gonna listen anyway!\" Tammy said as she stood up and stormed out.\n\nCarter stood up to follow her, but before she could, she saw Jennifer coming down the hall.\n\n\"Do you have a few minutes?\" Keller asked as she came into the room. \"And what's wrong with Tammy? She blew right by me, and didn't even say hello.\"\n\n\"I think we just had a fight.\" Carter said, then shook her head and looked at her. \"What did you need, Jenn?\"\n\n\"I've the got test results from the people we brought in from Cealacan. Of the three hundred ninety-four survivors, almost three hundred of them have the gene. We've already started the therapy, and had less than a dozen failures so far.\" Keller told her, handing her a tablet. \"We started them on the teaching machine too. Oh my god, Sam! You should have seen them when we told them that they would be able to read and speak ancient. The...\"\n\n\"Can you bring up the cameras on this thing?\" Carter asked, handing the tablet back to her.\n\n\"What? Sure, it only takes a second.\" Keller said as she tapped on the screen, then handed it back. \"Just touch the picture of the camera you want to see.\"\n\nCarter took the tablet and touched the picture of the bedroom, then the bathroom. Both were empty. She tried the office and living room, then the small bedroom. She was about to call Ronin and ask him where Tammy had gone, when she noticed that there were more images, but she had to scroll up to see them. She found her in the guest room. She was laying on the bed, propped up against a stack of pillows. Her pants were around her ankles, and she was holding a tablet with one hand. Her other hand was between her legs.\n\nSam started to laugh, then gasped as she zoomed in and saw that there were tears running down Tammy's cheeks. She looked over at Keller as she sat the tablet down and stood up.\n\n\"Come with me, Jenn.\" She said as she went into the hall. Ronin stood and turned toward her as they came into the living room. \n\n\"She's in there.\" He said quietly, pointing to the bedroom.\n\n\"I know.\" She told him. \"Clear everyone out, and lock the porter out. Wait downstairs, and lock the elevator too. Nothing but emergencies comes through. I'll let you know when we need you.\"\n\nRonin nodded and led Keller down the hall. She heard the elevator doors open and close, and she stood looking at the bedroom door for a moment.\n\n\"Can I come in?\" She asked from the door, looking over at Tammy.\n\n\"It's your house.\" Tammy said, not looking up from the screen.\n\n\"It's our house. Whatcha watchin'?\"\n\n\"A movie.\"\n\n\"Anybody I know in it?\" She asked as she unbuttoned her vest and shrugged it off her shoulders.\n\n\"Yeah. A couple of really hot bitches doin' all kinds of nasty stuff.\" Tammy said, trying not to smile. She glanced over at Sam quickly. \"I'd really like to fuck one of them.\"\n\n\"Yeah? You thinkin' about steppin' out on me?\" Sam said as she let her pants fall to the floor and stepped out of them. She crawled up on the bed slowly, letting her eyes run over Tammy's body. \"What's this bitch got that I don't?\" She asked.\n\nHer hand touched the buttons on Tammy's vest, and started opening them from the bottom up, She got three of them open, and was working on the fourth. \n\n\"You're not going to help me?\" She asked as the button slid free. Her hand moved up to the last one.\n\n\"No.\"\n\nShe opened it slowly, then pushed the vest to the side, smiling as her breasts came into view.\n\n\"Either of those sluts have titties as nice as yours?\" She asked as her hand slid over the firm, round globe of her breast. She teased the nipple with her thumb, running it in slow circles around the areole.\n\n\"One of 'em does. The others one's are kinda saggy.\" Tammy said as she began to breathe harder.\n\n\"Hey now! Watch it there, girlfriend.\" She paused, pinching her nipple between her fingertips. \"You are still my girlfriend. Aren't you?\"\n\nTammy turned and looked at her, and the look in her eyes made Sam's heart freeze. She took the tablet from her and tossed it on the bed, then reached down and pulled her pants off her feet. She moved up and lifted her so she could slip the vest off. Tammy didn't help her, and she lay back on the bed when Sam eased her down.\n\nShe stretched out over her, resting on her elbows, her legs spread outside Tammy's. Her face was inches from Tammy's. \n\n\"Can I kiss you?\"\n\n\"Yes.\"\n\nShe pressed her lips to Tammy's, closing her eyes and moaning as she did. She drew back when Tammy didn't respond, keeping her lips closed. She had kissed her back, but it was a chaste kiss, like you give a friend, not a lover.\n\nSo it's gonna be like that, is it? Carter thought.\n\nShe smiled at Tammy, rubbing her body up and down over her slowly. Their tits rubbed against each other, their nipples scraping across each other breasts. Tammy was breathing harder, and the look in her eyes was softening. Sam kissed her again, and her lips opened slightly, then closed around her tongue, nipping her lightly.\n\n\"Will you make love with me?\" Sam asked, stroking her hair gently.\n\n\"No.\" Tammy said, then after a moment, she added, \"You make love to me.\"\n\n\"Mmmmmm, can I? Let me see...what do I want to do first?\" She looked up at Tammy as she slid down her body. \"What would you like, sweetie?\" She asked as she nibbled on her neck, then dragged her tongue up under her chin. She pressed her lips to Tammy's again, and moaned as she responded, letting her lips part, her tongue dancing lightly with her own.\n\n\"Just love me, Sam.\" She whispered into her mouth as they kissed. \"I need you so much, baby. Please, don't let all this get in the way.\" She said as her arms came up and held her to her.\n\n\"I'm sorry, Tammy.\" Sam whispered as they began to kiss more eagerly. Their legs intertwined as they writhed against each other. \"I...\"\n\n\"Shut up and kiss me.\" Tammy said softly as her tongue darted into her mouth, making her gasp. \"Then fuck me, Sam. I need you so bad...\"\n\n\"Mmmmmm,\" Carter panted, kissing her back eagerly. She broke away and slid down her body, and ran her tongue under the spongy globe of her tit, then opened her mouth and sucked the nipple in hungrily. Her hand slipped down between her legs and dipped between the fleshy lips of her pussy, finding it warm and wet with her juices.\n\n\"Are you forgiving me, or was the movie that good?\" Sam laughed as she moved over to her other tit, taking it into her mouth as she pinched its twin between her fingers.\n\n\"It was a pretty good movie.\" Tammy panted as she arched her back, feeding her tit up at her face. \"The brunette was really hot! She had that blonde bimbo doi...Ooooohhh!\" She purred as Sam slipped three fingers into the cream soaked opening of her cunt and started stroking them in and out lazily.\n\n\"Mmmmm hmmmm. Didn't the blonde do anything right?\" She asked as she nipped at her stiff nipple lightly. Her fingers started moving faster, and she turned them so her fingertips brushed over the roof of her pussy, pressing against it firmly, and feeling a small bump growing under them.\n\nTammy was laying back, her eyes closed as she let Sam pleasure her. \"So good, Sam. Oh please, I need it...oh god, I need you so bad!\" She groaned as her hips started moving, arching up, trying to get her fingers deeper inside her.\n\nSam stroked her fingers in and out faster, stopping every few moments to rub her fingertips over her G-spot. The tender gland was already the size of a pea, and Tammy wriggled and squirmed on the bed, her hips arching up, trying to get more of her fingers inside her.\n\nHer hands were clutching her tits, squeezing and molding them as her fingers pinched her nipples. Sam dragged her tongue down her body slowly, darting it into her belly button, making her gasp.\n\nThe crisp curls of Tammy's pubes brushed her chin, then her lips as she continued down. Nipping at the soft curls, she tugged at them with her teeth, making Tammy whine softly in her throat. \n\n\"Cum baby.\" She whispered into the soft hairs. \"Give it to me. I need it Tammy. I need you to cum for me. I want to see it, feel it. Please?\"\n\nHer fingers settled on her G-spot, and she started rubbing it firmly, adding her thumb to her clit as she moved her fingers in tight circles over the growing gland. She dug her chin into her pubes as she looked up at her face, smiling as she felt Tammy's pussy quiver, then clench around her stroking fingers.\n\nTammy's head came up, her eyes wide as she stared down at her. Her mouth worked, but no words came out, and her eyes rolled up in her head as she shivered, grunting loudly, then screamed as she started to cum.\n\nWarm pussy juice spurted from her spasming pussy, soaking Sam's arm and the bed under her. Sam started stabbing her fingers in and out of her cumming cunt hole, slamming them in and out as fast as she could. Tammy screamed again, and her hips arched up off the bed, jerking down onto her probing fingers. She held the arch, her whole body rigid as she shuddered and jerked wildly.\n\nShe collapsed suddenly, falling limply to the bed, gasping for breath. Sam drew her fingers from her slowly, pushing her legs apart and pressing her mouth to her juice coated pussy slit. Her tongue lashed slowly around over the puffy lips of her pussy for a few seconds, then she raised up and climbed over her leg, sliding off the side of the bed.\n\n\"Get up.\" she said, taking Tammy's hand, pulling her to the side of the bed. \"Come on, get up. I'm not done with you yet.\" She said as she pulled her to her feet. Keeping her hand in her own, she led Tammy into the bathroom, and into the shower. Turning on the spray, she turned her under it slowly, then pushed her against the wall.\n\n\"Spread 'em.\" She said as she picked up a sponge glove, pumping soap on it, then stepping up close behind her. \"I said spread 'em, bitch! Now do it.\" She whispered huskily as she straddled her leg, grinding her pussy mound against her.\n\nTammy moaned as she slid her feet back, spreading them wider. She moaned again as Sam slid the soapy sponge over her tits, then dragged it slowly down over her tummy, stopping as she reached the close cropped vee of her pubes. She ran the glove up and down over the soft hairs, then slid it down quickly, brushing it over the clean shaved lips of her pussy, withdrawing it just as quickly.\n\n\"Noooooo.\" Tammy whimpered, humping back at her. \"Please.\"\n\n\"No what, baby?\" Sam whispered as she moved the glove back up over her stomach, running it over the heaving mounds of her tits again.\n\n\"Please...do...don't t...tease me.\" She said softly.\n\n\"Ohhhhhh, I wouldn't do that to you, Tammy. I love you.\" Sam whispered. \"I promise. I won't tease you.\" She smiled as she felt her sigh with relief. \n\n\"I'm going to torture you.\"\n\nTammy stiffened as her soapy fingers plunged between her legs and slipped between the swollen lips of her pussy. She grunted, her knees bending as Sam ground her fingers over her clit, mashing the stiff nubbin roughly into her body. \n\nTammy's legs started shaking as she started cumming again, and Sam held her tightly. Her fingers ground mercilessly over Tammy's clit, then slid off, catching it between her fingers. \"Do you like this, Tammy?\" She asked as she pinched her clit between her fingers, tugging on it, almost as if she was jerking on a tiny cock.\n\nTammy grunted, and her head bobbed up and down as she bent her knees more, opening her crotch completely to her fingers.\n\n\"Can you stay up if I let you go?\" Sam asked softly.\n\nTammy nodded, and Sam moved her hand around, sliding it up and down the crack of her ass, then pressed a soapy finger against the tight, wrinkled ring of her asshole. Tammy grunted, pushing her ass back as Sam started fucking her finger up her asshole slowly, moving her fingers back over her clit, strumming them up and down over the tender nubbin.",
        "\"Are we having fun yet?\" Sam grunted into her ear as she humped her pussy up and down on her leg.\n\n\"Oh god, yes!\" Tammy, moaned. \"Whatever you do, don't stop!\"\n\n\"Oh, I not done with you...not by a long shot!\" Sam laughed evilly. \"Cum. I want to feel your asshole cum on my fingers.\" \n\nShe let her finger slide slowly from Tammy's ass, and added another one, pressing them both against the tight hole, twisting them back and forth, forcing them up inside her slowly. Tammy rose up on her toes, then relaxed, settling back onto her feet. She was gasping for breath, her whole body shaking as she came over and over under Sam's skilled fingers.\n\nShe kept pressing her fingers deeper into Tammy's ass, and her fingers worked faster on her clit. She could feel that she was near the breaking point, her legs were shaking, and she kept inching closer to the wall. Sam helped her, pushing her feet toward the wall as her hands worked her over. She was finally pressed flat against the cool tiles, Sam's arm trapped between her body and the wall. She pressed against her, holding her up as Tammy threw her head back, shaking it from side to side, a long, loud moan coming from her mouth. \n\nTammy slumped against her, and Sam slipped her hand from between her legs, holding her around the waist as she eased her fingers from her ass. She held her hand over under the spray, rinsing it off, them put both arms around her, and moved her over under the spray.\n\nShe soaped up her hands and turned her around, running them gently up and down between the cheeks of her ass, then smeared soap all over both firm, round cheeks. She rinsed her off, then washed her hands again as Tammy leaned against her.\n\n\"Come on.\" Sam said, pulling her from the shower, leaving it running. She led her out of the bathroom, stopping when Tammy stumbled. She turned and picked her up, carrying her out of the bedroom, across the living room, and into the kitchen.\n\nShe laid her gently on the table, then opened the freezer, and grabbed a quart of chocolate ripple. She pulled the lid off and tossed it on the counter, then pulled Tammy down in front of her chair as she sat down, resting her legs on her own shoulders. She pressed her mouth to the juice slick slit and lashed it all around, darting it up into her leaking cunt hole, then slapping her clit lazily.\n\nTammy moaned, her head moving from side to side, then her eyes flew open and her head came up as Sam drew her head back and smeared fingers full of ice cream over her wide spread cunt slit.\n\n\"Oh God! Wh...what are...Ohhhhhh! It's cold!\" \n\nTammy moaned pitifully as Sam plastered her mouth to her sticky mound and started licking and sucking hungrily, lapping up the ice cream, then spreading her puffy pussylips and sluicing her tongue up and down lazily. She spread the lips of her pussy wider, centering her mouth over the juice dripping hole, locking her lips around it, and driving her tongue inside as she sucked eagerly at the dripping opening.\n\nTammy put her hands on the back of her head as her hips started moving, humping in slow movements up at her face. Sam pushed her legs higher, opening them wider. She fucked her tongue rapidly in and out, making loud snuffling noises as she panted through her nose. Tammy was moaning non-stop, her hands pressing her face harder into her juicing pussy. \n\nSam ate her eagerly, moaning happily as the rich, spicy girl cum spilled into her mouth. She kept eating her, and pressed her nose into her clit, scrubbing her face back and forth over the rigid nubbin. Tammy jerked, and her pussy spat a small spurt of juice into her mouth. She smiled, pulling back slightly, then puckered her lips and pressed them against Tammy's clit. Sam smiled as she blew a long, loud raspberry right onto her clit, the fluttery vibrations making Tammy jerk and heave under her mouth. \n\n\"Nnnngggggghhhhnnnnn!\" Tammy grunted, then collapsed on the table. Sam slid her legs off her shoulders and stood up, resting her hands on the table.\n\n\"Time to go, sweetie\" She sighed as she pulled her down, then off the table, getting behind her and walking her out into the living room. Tammy shuffled slowly in front of her, her body overwhelmed by what Sam was doing to her, but she prayed that she didn't stop.\n\n\"More?\" She mumbled as Sam led her over to the couch.\n\n\"Oh, you can bet yer sweet bottom there's more.\" Sam panted in her ear as she turned her and pushed her against the couch. \"Over ya go!\" She said as she bent her over the back of the couch and dropped to her knees behind her.\n\nForcing her feet wider apart, she spread the lips of Tammy's pussy and jammed her tongue up inside, darting it in and out, then moving her hands up, cupping the cheeks of her ass, spreading them apart with her fingers. \n\nTammy groaned as Sam's tongue stabbed at the wrinkled rosette of her asshole, swabbing the nimble labia all around over it. Sam moaned into her fragrant ass crack, surprised that she liked the musky taste of her asshole. Darting her tongue against the tight ring of muscle, she felt it slip through, making Tammy push her ass back against her face harder, bending her knees as she ground her ass in slow circles.\n\nSam reached up and took her hands, bringing them back, putting them on her ass. \n\n\"Hold 'em open.\" she grunted, then mashed her face back into her ass crack and started fucking her tongue harder into her asshole.\n\nTammy spread her asscheeks, holding them open as Sam rimmed her eagerly. She purred as she felt Sam's fingers wriggling up between her pussylips, then stroking up inside. She closed her eyes and shivered as she started rubbing her G-spot again, making her legs start to feel rubbery.\n\n\"Sam...I...I ca...\" She said.\n\n\"Shut up. I'm kissing you.\" Sam said into her ass, her tongue driving roughly up into her asshole. \n\nTammy shuddered, and a thick stream of pussy juice erupted from her as Sam ground her fingers onto her tender G-spot. Sam pulled back, plastering her mouth to her dripping pussy, sucking and licking frantically, her tongue lashing and laving madly as she stabbed it up inside her. Tammy screamed, a long, full throated shriek then seemed to go on forever, then fell over the back of the couch.\n\n\"Oh no ya don't.\" Sam said as she lifted her, getting her upright, then picking her up and carrying her through the bedroom, and into the bathroom. She sat her on the toilet, and squatted in front of her.\n\nSam lifted her chin, grinning when she saw that Tammy's eyes were glassy, and she was having trouble focusing. She stood up in front of her, tilting her head back. She stepped closer, spreading her legs and bending her knees as she pulled Tammy's face against her pussy.\n\n\"Eat me.\" She said softly. \"Make me cum, Tammy.\"\n\nTammy moaned into her sopping wet cunt slit and started eating her hungrily. Her hands came around and cupped the cheeks of Sam's ass, pulling her tighter to her. Her tongue lashed out, darting up into her, lapping and licking up the creamy girl cum as it poured out of her pussy.\n\nShe moved one hand around and stiffened three fingers, easing them into Sam's dripping pussy alongside her tongue. When she had them firmly seated, she moved her mouth up and locked her lips around her clit. She started pumping her fingers in and out, sucking eagerly on her clit as Sam ground her pussy down onto her face.\n\n\"Oh yeah! That's it. That's what mama likes.\" Sam grunted. \"Fuck me, Tammy. Hard! Oh god, he...here it comes...Oh shit! I...Cummmmmmiiinnngggg!\" She screamed, her legs shaking madly as she mashed her clit against Tammy's mouth. She shuddered and jerked as Tammy fucked her fingers in and out of her spasming cunt chute as fast as she could, nipping at her clit with her teeth at the same time.\n\n\"Enough!\" Sam shouted, pushing her away, and falling back toward the floor.\n\n\"Sam!\" Tammy screamed, then watched, amazed as she did a tumbling roll as she hit the floor, ending up on her knees. Her head hung down as she panted for breath, then came up, a sly smile creasing her lips.\n\n\"Almost done.\" she said as she got slowly to her feet. She came over and held out her hand to Tammy, helping her up. \"One more stop.\"\n\nLeading her into the bedroom, she sat on the edge of the bed, patting her lap lightly as she looked up at Tammy. When Tammy just looked at her, she grabbed her hand and pulled her down across her legs. She rested one hand on her back, and ran the other slowly over the soft, smooth skin of her ass.\n\n\"No, Sam. Please do...\" Tammy's eyes went wide as Sam brought her hand down on one cheek. She tried to move, to get up, but Sam had a leg hooked over hers, and her hand was pressing down on her back as she brought her hand down again and again, alternating cheeks as she spanked her.\n\nShe stopped after ten smacks, and rubbed her ass gently, soothing the tender flesh. Tammy's asscheeks were bright pink as Sam caressed them. She looked down at Tammy. \n\n\"Ready?\" She asked\n\n\"Please...\" \n\n\"Well, since you're asking do nicely.\" Sam said as she brought her hand down again, harder this time. She waited a few seconds, then brought her hand down on the other cheek. Another pause, then she moved to the other cheek. She continued like that for seven more strokes.\n\nShe stopped after ten strokes again, rubbing Tammy's bright red bottom gently. After a moment, she moved her leg and lifted her arm away. \n\n\"Stand up.\"\n\nTammy climbed off her lap and stood in front of her, her head down.\n\n\"Turn around.\"\n\nTammy looked at her for a moment, but turned quickly when Sam lifted an eyebrow.\n\nSam put her hands on her waist and slid them slowly down over her hips, then pulled her closer as she leaned forward. \n\n\"I love you.\" She whispered as she pressed her lips to one rosy red cheek. Then, \"I love you.\" as she kissed its twin.\n\n\"Get up on the bed.\" She said, pushing her away.\n\nTammy scrambled up on the bed and stretched out on her back, wincing as her tender bottom touched the cool sheets.\n\nCrawling up over her slowly, Sam smiled down into Tammy lust stunned eyes. \"Do you love me?\" She asked, running her tongue lightly across her lower lip.\n\nTammy nodded, not taking her eyes from Sam's.\n\nSam kissed her roughly, her lips grinding over Tammy's as her tongue snaked between her lips and slithered into her mouth. Tammy moaned, her tongue lashing back at it, then pulling back as she started sucking on it gently.\n\nSam pulled back, staring into her eyes. \"Do you love me?\" She asked again.\n\nTammy nodded again, and Sam kissed her again, her leg sliding up between Tammy's, her thigh grinding into her abused pussy mound, making her whimper. Warm liquid dripped down her leg as she drew it back. She raised her head, staring into Tammy's eyes again.\n\n\"Yes! I love you!\" Tammy said as Sam opened her mouth. \"Oh god! I love you so much, Sam!\" She said as she pulled her down onto her, hugging her tightly.\n\n\"I know baby, I know.\" Sam said softly. \"I love you too. And I'm sorry that I haven't been showing it.\" She looked at Tammy as she raised up over her. \"Now, are we going to have to do this again?\"\n\nTammy's eyes glowed, and a small smile crept across her face. \n\n\"Yes.\" She said.\n\nInterior-Dr. Samuels Suite\n\n1230 Hours\n\nAndi was going through the staffing requirement lists for the north pier complex when Jennifer called.\n\n\"Yeah Jenn, what can I do for you?\" She asked. She already had a pretty good idea what she wanted.\n\n\"Have you heard from Tammy or Sam?\" Keller asked. \"They had a fight, and Sam threw everyone out, and that was over two hours ago. I'm starting to get worried, and Ronin won't do anything. All he'll say is that she said she'd tell him when to come back!\"\n\n\"Then why don't you listen to him? I'm sure they're fine.\" Andi said lightly. \"Don't you have something you could be doing? I haven't seen a report on the Cealacan yet. I was expecting that yesterday. Do you have a status?\"\n\n\"Oh, seventy-five percent of them have the gene, and we already started the treatments.\" Keller said, sounding exasperated. \"Honestly, Andi! I don't understand you...\"\n\n\"Ever.\" Samuels finished for her, laughing hysterically at her own joke...\"Relax, Jenn. They had a little tiff, and now they're really having out. All over the house. They've been in a bedroom, a bathroom, the kitchen...now they're in the living room. I think Sam is winning, she has Tammy bent over the couch.\"\n\n\"Oh...my...gawd!! What is she...Noooooooo, she isn't!\" Jennifer breathed. \"I'll get those reports to you as soon as I can, Andi. We just had an emergency come in.\"\n\n\"Okay, Jenn. Have fun, and say hi to John for me!\" Samuels laughed\n\n\"I will...wait, aww shit!\" Keller said as she closed the channel.\n\nSamuels hit her comm and waited for the beep.\n\n\"Ronin?\" she said.\n\n\"Ronin.\"\n\n\"This is Dr. Samuels. I told Jennifer to leave you alone, and I just want you to know that Sam and Tammy are fine. They'll be with you in a little while.\"\n\n\"Thanks doc, I told her that.\" Ronin said. \"She just ran off. Do you need anything else?\"\n\n\"No, Ronin. Samuels out.\"\n\nSamuels moved the video back to just before Sam had entered the kitchen, then ran it back, stopping every ten minutes or so and frowned. She brought up the medical database, and looked at the mornings scan, then scrolled through the telemetry data from the bracelets.\n\nShe tapped her comm again.\n\n\"Jennifer? Are you near a computer, or do you have your tablet with you?\" She asked.\n\n\"Yeah, Andi. What do you need?\" Keller replied. \"What do you want me to look at?\n\nShe gave Keller the timestamps on the video and the telemetry, then waited for her to pull it up.\n\n\"I'll be right up.\" Keller said as she closed the channel.\n\nInterior-Dr. Samuels Suite\n\n1410 Hours\n\nThe alarm went off as they were going through the telemetry for the past week.\n\n\"Andi! Jennifer! Something's wrong with Tammy! I can't wake her up!\" Carter said, her voice shaking as she spoke.\n\n\"We're on the way, Sam!\" Keller said. \"Is she breathing? Have you checked her pulse? Do it now Sam, we're on the way.\"\n\n\"Oh god, she's not breathing.\" Carter said. \"I'm going to start CPR.\"\n\n\"Don't Sam, you may kill her.\" Samuels said. There was a long pause, then she came back on. \"She's only been down for a little over a minute. She should start coming around. We're in the elevator...\"\n\nA moment later Carter heard Ronin shout, \"Colonel?\"\n\n\"Bedroom!\" She called back, holding Tammy and rocking her. Tammy opened her eyes and looked up at her as Ronin, Andi and Jennifer came charging into the room.\n\n\"I need you to back up, Sam.\" Keller said as she got up on the bed, pushing her away as she tried to resist. She looked over her shoulder. \"Ronin, get her off the bed, and hold her. Do not let her go!\"\n\nRonin nodded, and Keller turn to Tammy.\n\n\"Tammy, I need to examine you. You're okay, but we need to check you out.\" Keller said calmly as she pushed her back on the bed. \"We'll explain in a minute, but you have to let me look at you.\"\n\n\"Blood pressure and heart rate are spiking.\" Samuels said as she watched the telemetry on her tablet. \"BP is two ten over one thirty, heart rate one forty.\"\n\n\"Hold her, Ronin! She's stronger than she looks!\" Keller said. \"Look at me, Tammy.\" She said as she shined a small light in her eyes, then leaned down and smelled her breath.\n\n\"Tammy, tell me where you are, and who I am.\" She said.\n\n\"I'm in my bedroom, and you're Jessica Keeler. You're a director.\" Tammy said.\n\n\"That's good, Tammy.\" Keller said, glancing over at Andi. \"Call Susan, tell her to get ready downstairs.\"\n\nShe turned back to Tammy. \"Can you tell me who that woman and the big man at the foot of the bed are, Tammy?\"\n\nTammy smiled. \"That's my girlfriend, Sam. I don't know him.\" \n\nA moment later, her eyes rolled up in her head and she went limp. Keller grabbed her wrist, and Samuels said, \"She's coding again.\"\n\n\"Pick her up, Ronin.\" Keller said. \"We're going down to thirty-one.\" She jumped off the bed and hit her comm, she started speaking softly as she walked out the door.\n\nRonin picked Tammy up and moved quickly across the room, and into the living room. When he got to the hall, he saw Keller holding the elevator open. As they stepped in, Ronin looked down and saw Tammy looking at him.\n\n\"What's happening, Ronin? Where are we going?\"\n\n\"You're sick. We're going to take care of you.\" He said softly, lifting her so she could put her arms around his neck.\n\n\"Thank...ugh...I...think I'm going to be sick.\" She groaned.\n\nThe elevator doors opened a moment later, and Ronin charged down the hall to the med center. The door was open, and Susan Arbann, one of the other nurses was standing just inside. She pointed at a bed, and Ronin laid Tammy out on it gently.\n\nKeller turned to Susan. \"I need the teaching machine, and the scanner. Have you been through the training on the scanner?\"\n\n\"No.\" Susan said. \"Dr. Samuels said we were going to wait. The teacher is right next door.\" She turned and went to the door, stepping aside as Carter and Samuels came through it, then stepped out behind them.\n\nSamuels went over to the bed, and Ronin stepped out, blocking Carter's path.\n\n\"No. Let them work.\" He said quietly. \"She knew me in the elevator. That's good.\"\n\n\"Sam, we need the scanner, it's over there somewhere.\" Keller said, waving at a corner of the room. She felt around Tammy's head, then slipped her telemetry bracelet off and tossed it to Samuels. \"Find out why that thing didn't go off.\"\n\nCarter turned around, spotting the scanner quickly. She went over and pushed it over to the bed, then stepped back beside Ronin. She slipped her hand into his, and looked up at him.\n\n\"She's going to be fine.\" He said. \"Did you make up?\"\n\nShe smiled and nodded, then turned back to watch Jennifer.\n\n\"Susan is getting the teacher.\" Keller said over her shoulder. \"Tammy is the only one that knows how to use the scanner, so I'm gonna need lessons. Be ready to set it up when she gets back.\"\n\n\"I can do it, Judy. Is Sam okay? Where is she?\" Tammy said, trying to sit up.\n\nCarter went over and stood next to the bed. \"I'm right here Tammy. You need to be quiet, okay? We need to find out what's happening to you.\"\n\nSamuels came over and slipped the bracelet back on Tammy's wrist. \"The alarms were turned off, that's the default setting. She just put it on, so we could take readings. It wasn't anyone's fault.\"\n\n\"What's happening to her?\" Carter asked.\n\nSamuels took her arm and led her across the room. Ronin followed, and Samuels looked up at him.\n\n\"I'm responsible for her.\" He said. \"I need to know what to do.\"\n\nSamuels nodded, and turned to Carter. \"She's been coding, five or six times a day, for at least the last three days. She goes flatline.\" She looked between Carter and Ronin. \"When it happens, she's clinically dead, for up to ninety seconds, and the episodes happen in quick succession. There will be two or three events in less than half an hour, and then she appears fine till the next one.\"\n\n\"How did we miss this, Andi? We're monitored and watched. And I'm wi...\" She stopped, looking up at Ronin, then back at Samuels. \"I've been away. And having her do what I can't cover. We've been doing different things. I haven't spent as much time with her over the last few days.\"\n\n\"It's not your fault, Sam. And she comes back, so I think it might be like what you went through. Her brain may be reconfiguring like yours did.\" Samuels said. \"I hope we're that lucky. Has she been anywhere where she could be exposed to radiation, like the power room, or your STM bridge?\"\n\n\"No, she knows that she can't do that.\" Carter said.\n\n\"Ronin? Has she?\"\n\n\"No, she's been to the north pier, and the Central Tower. Otherwise, she stays home and talks on her comm.\" He said.\n\n\"Has she been acting differently?\"\n\n\"She gets confused sometimes. And she sleeps at the kitchen table. She did that two or three times.\" He told her. \"Did I miss something?\"",
        "\"You can't miss what you don't know about. We didn't warn you about this threat.\" Samuels said. \"When she was sleeping at the table, was that when she seemed confused about things?\"\n\n\"Yeah. She called me Robert yesterday, then caught herself. That was right after one of those naps.\" He said. \"She acted normal a few minutes later.\"\n\n\"Jennifer, would you quit poking me? Let me up. I feel fine.\" Tammy said.\n\n\"Let her up, Jenn.\" Samuels said. \"I think the episode has passed.\"\n\n\"Why do you think that?\" Keller asked as she helped Tammy sit up, but she made her stay on the bed.\n\n\"Ronin said that she's been sleeping at the table in the kitchen, then acting confused when she wakes up, but it passes after a few minutes.\" Samuels said. \"She called you Jessica upstairs, and didn't know Ronin, now she knows your name, and he said she recognized him in the elevator.\"\n\n\"I haven't been sleeping at the table. I work in the kitchen alot, because I like it in there.\" Tammy said.\n\nSam came over and wrapped her arms around her, hugging her tightly. \"I was so scared, Tammy. I couldn't wake you up, so I hit the alarm, and then Andi and Jenn came in, and we brought you down here.\"\n\nShe turned and looked at Keller over her shoulder. \"Show us what's going on. And where is Susan with that machine? I want to know what's happening to her.\"\n\n\"She just called in, she had to go over to the north pier to get one. She's on the way back now. Five minutes, then we can get started.\" Keller said.\n\nCarter nodded. \"Then show us what you have.\"\n\nSamuels pulled the video feed up on the monitor on the wall and showed them the episodes that they had found. Then she brought up the telemetry. Tammy gasped as she watched the readouts flatline, then recover, again and again.\n\n\"Look at the timestamps. Most of the events are happening when you'd normally sleep, just like we think was happening to Sam.\" Samuels said. \"But there have been a few events, at least six, during the day, and they match up to when you collapse at the table.\"\n\n\"As luck would have it, you were alone, no one had eyes on the video feed, and the alarms on your bracelet weren't turned on. It was just bad luck that we missed it. I'm sorry.\"\n\n\"Like you said Andi, it wasn't anyone's fault, things just fell through the cracks. We know now, so let's see what we can do to help her.\" Carter said.\n\nSusan came in with the teaching machine, and Keller turned to Carter. \"I need lessons on the scanner, and we need to get more people trained on it. So you need to get more people trained on the teacher, or let me know when you can do it.\"\n\nShe turned to Susan. \"Run our scanner while we do this, we just need head shots.\"\n\nSusan nodded and pulled the scanner over, and helped Tammy lay back down on the table.\n\n\"Andi, get the scans for the last three weeks, we need to do a stare and compare, that's how Tammy spotted the change in Sam.\" Keller said, moving over to stand next to the teaching machine. \"We're missing something, and we need to find it.\"\n\n\"Send them to me, I'll train them on both. Do it in the morning.\" Carter told her as she brought up the teaching machine. She handed Keller a headset, and when she had it seated, hit the control button. \n\n\"Thirty seconds...\" She said after moment. She looked at Keller, watching her closely. \"Ten seconds...you're done.\"\n\nJennifer opened her eyes and shook her head. \"Wow. That was weird. There were all these colors, then...I can't describe it.\"\n\nKeller waited for Susan to finish with the scan, then moved the ancient machine closer, and positioned the arm over Tammy's head. She tapped on the panel, then looked up as an image appeared over the machine. She went through several views, rotating and turning it as she did.\n\n\"No merging like we saw with Sam.\" She said. She switched to another view, then expanded the image. \"I think I got something here.\"\n\n\"Me too.\" Samuels said as she put a series of images on the monitor. \"There's new tissue growth, just like with Sam. But it started before these events began, It looks like it's been happening for eight or nine days.\"\n\n\"Mostly in the frontal and parietal lobes?\" Keller asked. \"That's where I'm seeing activity. I've got activity in the brain stem too. I think that's why she's coding.\"\n\n\"So we know what's happening.\" Carter said. \"Now what are we going to do about it?\"\n\n\"The same thing we did with you, Sam.\" Tammy said as she pushed the scanner's arm out of the way and sat up. \"We wait, watch, and see what happens next.\"\n\n\"I wasn't done with that.\" Keller said.\n\n\"I am.\" Tammy said as she slid off the table. \"Andi, what's the frequency on these events? Are they increasing, decreasing, or steady?\"\n\n\"Decreasing. You had one last night, and two so far today.\" Samuels said. You had two the night before, then four before that, and three during the day Tuesday, three yesterday.\"\n\n\"Then all we can do is monitor and wait for the next one.\" Tammy said and she went over and put her arms around Sam. \"I'm okay, Sam. It's going to be alright, we just need to let it happen.\"\n\nCarter nodded, hugging her tighter.\n\n\"How much smarter am I, Andi.\" Tammy asked, looking at her over Sam's shoulder.\n\n\"I don't know if you're any smarter, but it looks there's eighteen percent more active neurons in the frontal, and nine percent in the parietal lobe. There's definitely more going on in there.\"\n\n\"I'm still smarter than you.\" Tammy told Sam softly as she stepped back. \"Can I go upstairs? It's cold in here.\"\n\nInterior-Kitchen\n\n1840 Hours\n\n\"Still nothing from Daedalus?\" Tammy asked as they sat a they kitchen table. She was eating rocky road out of the carton, and held a spoonful out to Sam. \"Want a bite? You haven't eaten anything. And we skipped lunch.\"\n\nCarter shook her head. \"Aren't you worried about this?\" She asked. \n\n\"Not really, and there's nothing I can do about it anyway, so why freak out?\" Tammy said lightly. She leaned closer, a big smile on her face. \"I had fun with you this morning. I'm gonna have to be bitchy more often. You licked my butt! You nasty!\"\n\n\"You did it to me first! There's where I got the idea.\" Carter laughed.\n\n\"Um...can I tell you something?\" Tammy said, looking down and digging her spoon around in her ice cream.\n\n\"Besides how much you liked getting spanked?\" Carter asked her, reaching over and dipping her own spoon in the carton.\n\n\"How? Noooooo, there's no way you could know that!\" Tammy said as she looked up, her eyes wide.\n\n\"It was written all over your face.\" Sam laughed. \"You liked me domming you, didn't you? When I was on top of you, asking you if you loved me, you wouldn't answer cuz you wanted me to push you.\"\n\n\"Not as a steady diet, but damn! That whole thing was fun!\" Tammy laughed. \"I thought we were just gonna cuddle after we made out in the bedroom, then BAM! You're dragging me all over the freekin' house!\"\n\n\"I actually carried you a couple times.\"\n\n\"I know! And you licked my butt! You stuck your ton...\"\n\n\"Oh for god's sake! Shut up! I don't want to hear that!\" Jennifer said as she came into the room.\n\n\"Hi Jenn!\" Tammy said. \"You got anything new? Am I gonna stay dead one of these times?\n\n\"Don't you even joke about that.\" Sam said softly.\n\n\"You're right. I'm sorry.\" Tammy said. \"Hey Jenn, did I tell that Sam stuck her tongue up my butt?\"\n\n\"No, but I heard you the first time you said it. So did Ronin, O'Neill, and Bra'tac.\" Keller said as she sat her tablet on the table. \"I'm going to get them something to drink. O'Neill damn near fell over laughing, but I don't think Bra'tac knows what it means.\"\n\n\"Did they bring Geraan?\" Tammy asked, getting to her feet, heading toward the door.\n\n\"Yeah, he's running all over the place. As usual.\" Keller said, shaking her head in disgust. \"I'm never having children, that kid is a terror!\"\n\n\"Geraan! Where is my mighty warrior?\" Tammy shouted as she ran into the living room. \n\nBra'tac pointed to the door of their bedroom, then watched her run into the room. His eyebrows raising when they heard a scream, followed by peals of laughter.\n\nO'Neill went over and stuck his head in the door, then grinned at them. \"You gotta see this.\" He said as he turned back to watch.\n\nCarter joined them at the door, and saw Tammy holding the boy by a wrist and an ankle, spinning around in circles, then lifting him and throwing him across the room to land laughing on the bed. Geraan leapt to his feet, shouting, \"Again!\" then jumping off the bed and running back over to her.\n\n\"She is feeling better?\" Bra'tac asked. \"We were told she was ill. Gravely ill.\"\n\n\"The kid was pretty shook up.\" O'Neill told her, going over to the couch. \"He moped around most of the afternoon. He really likes her.\"\n\n\"There's a problem, and we've identified it, but it looks like we're on the backside of it.\" Carter told them as they sat down. \"Her brain is reconfiguring, adding new cells and neurons. Our warning systems failed, and we didn't know that it had been going on, and we're hoping that she's coming to the end of it.\"\n\n\"I thought you weren't contagious?\" O'Neill said. \"Or did that change.\"\n\n\"No, I'm not contagious. We...we did this intentionally. I exposed her. We did transfusions so she could come with me.\" Carter said quietly. \"We both wanted it.\"\n\n\"This is truly an act of love.\" Bra'tac said.\n\n\"It's truly an act of lunacy, is what it is.\" O'Neill said. \"No one is sure that you're going to survive this, and you do this to her? What th...\" He stopped in mid-rant. \n\n\"I'm sorry. I just jumped way over the line, and I apologize.\" He said after a moment. \"I should just keep my mouth shut.\"\n\n\"It's okay, Jack.\" Tammy said as she walked over to the couch. \"Here, hold this.\" She said, throwing a squealing Geraan onto the couch between them. She went over and sat on the couch next to Sam.\n\nGeraan slid off the couch and ran around the table. He looked up at Sam, and when she nodded, he climbed up on the couch, and sat quietly between them.\n\n\"Why doesn't he do that with us?\" O'Neill asked Bra'tac.\n\n\"Because we do not rule, nor do we exhaust him as Lady Tammy does.\" Bra'tac smiled, nodding his thanks to her.\n\n\"He can stay with us, if you guys need a break.\" Tammy said, hugging the boy to her. She looked over at Carter. \"Is that okay, Sam? I can use some company. Ronin's not much of a talker.\"\n\n\"I would love to have Geraan stay with us.\" Sam smiled. \"If Master Bra'tac approves of course.\"\n\nGeraan looked at Bra'tac, who nodded. \"I cannot think of better hands to put him in. But is Lady...\"\n\n\"She's fine Master Bra'tac.\" Keller said as she came in with a tray. \"And we have our warning system in place now, so no harm will come to him. Actually, having him here may help her.\"\n\n\"Then it's settled. He stays here. What do you think of that Ger...Sonofabich. Look at that.\" O'Neill said, unable to believe his eyes.\n\nGeraan had his head in Tammy's lap, sound asleep. Sam scooted down on the couch and lifted his feet into her lap. \n\n\"You just have to have the touch, Jack.\" She said lightly. \"Was this just a social visit? Or did you have something for us?\"\n\n\"Oh, sorry. Daedalus checked in about an hour ago, just before they jumped into hyperspace They jumped early, so should be back in an hour or so.\" O'Neill told her. \"Caldwell said they cruised back and forth over and around that cluster for almost three hours, and got within a hundred meters of a dozen hives. The crazy bastard sat right on top of the Primary's hive for fifteen minutes, and got a complete scan of it. They hung around for another hour after that, doing scans on the perimeter, and there was no sign that anyone noticed them.\"\n\n\"Jezzus, I don't know if I'm gonna kiss him or kill him when he gets back.\" Carter said. \"I told him to be careful! I said, 'Don't take any unnecessary risks'. You were there, Jack. You heard me.\"\n\n\"I know, but we weren't in his shoes either.\" O'Neil told her. \"I remember Hammond telling us the same thing, but we had better intel once we were on the ground. Old Caldwell isn't going to risk his crew, I'm pretty sure he felt safe before he started getting stupid.\"\n\n\"Are any of them shielded? Or are they counting on numbers and the dart shield.\"\n\n\"They're sitting there wide open, Sam, like they don't have a care in the world. And Zelenka says Apollo is good to go, he says he got the kinks worked out.\" O'Neill laughed. \"It was all I could do to keep Sheppard from loading up and going chasing after Daedalus.\"\n\n\"You should have let him.\" Tammy said, stroking Geraan's hair gently. \"Then we'd be welcoming them home as champions, not sweating it out again, wondering what's going to happen when we do send them.\"\n\nInterior-Kitchen\n\n2005 Hours\n\n\"Col. Carter? Daedalus just came out of hyperspace, they're checking in.\" Chuck told her from the Ops Center.\n\n\"Can you patch me through, Chuck? And stay on. You'll need to do something for me.\"\n\n\"Yes, maam.\" There was pause, then. \"You're on.\"\n\n\"Steven?\"\n\n\"Yes, Colonel. Mission completed, I'll be down shortly to give you my report.\" Caldwell said, trying to keep the excitement out of his voice.\n\n\"That's fine, Steven. Would you put Maj. Marks on please?\"\n\n\"Ma'am?\"\n\n\"Just put Maj. Marks on, Steven.\"\n\n\"Marks.\" Came a voice a moment later.\n\n\"Major, this is Col. Carter. I'd like you to beam Col Caldwell to his quarters. Now. Ops will give you the coordinates. Oh, and tell him to stand up first. We can't have our returning hero land on his ass in his living room.\"\n\n\"Yes, Ma'am.\" Marks laughed. \"Wait one.\"\n\nShe switched channels. \"Teyla? He's on the way. Have fun.\" She said.\n\n\"Thank you, Samantha. Do not expect him early tomorrow.\" Teyla said. \"I will call you.\"\n\nShe was grinning as she switched back, and Marks was speaking. \"Package is away, ma'am. Upright and squawking.\"\n\n\"Good, and thank you major. He won't be squawking long.\" Carter laughed. \"Now would you be kind enough to bring my ship down, and put her on the east pier. And give the crew my love, and share my heartfelt thanks for their safe return. You've all done well today.\"\n\nInterior-Col. Caldwell's Suite, North Tower\n\n2010 Hours\n\nThe glare of an Asgard beam flared and faded, and Caldwell looked around. He was standing in his living room. The lights were dimmed, and candles filled the room with a warm glow.\n\n\"Welcome home, Steven.\" Teyla said softly from behind him.\n\nHe turned around and gasped when he saw her.\n\nShe was wearing a diaphanous green gown that hugged every curve. Her small breasts stood out sharply, the nipples almost poking through the tissue thin gown. The lush growth between her legs shone with pearly droplets of her juices.\n\n\"Among my people, it is customary for wives and mistresses to welcome warriors returning home from battle.\" She said, kneeling down and unlacing his boots, slipping one off, then the other. She stood, her fingers toying with the tab of his jumpsuits zipper. \"Alas, I am neither. Merely a lover.\" She pulled at the zipper, dragging it down slowly.\n\n\"You are not merely, anything, Ambassador.\" Caldwell said, looking down at her. \"And it would not befit a woman of your position to be anyone's mistress.\"\n\n\"This is true.\" She said as she pulled the zipper all the way down, then pushed the jumpsuit off his shoulders, easing it down his body. \"I also believe that you must seek the permission of your queen to take a wife. The commander of her navy may be required to marry for political purposes. Such unions are common.\"\n\n\"Such a union would not suit you. There is nothing common about you.\"\n\nCaldwell stepped out of the jumpsuit puddled at his feet. He flinched when she scraped her nails across his stomach, catching the top of his briefs with her fingers and tugging them down. She eased them over his hips, letting them fall to his feet, and he stepped out of them as well.\n\n\"You are pleased to see me?\" She said with a sly smile, looking down as her hand wrapped around the jutting shaft of his cock. \"I had feared that perhaps after so long a mission, you would be fatigued. It appears I may have been wrong.\"\n\n\"Your beauty rejuvenated me.\" He told her, his voice catching in his throat as her hand stroked slowly up and down. His eyes never left her face, mesmerized by her playful expression. \"As it always has.\"\n\n\"Flatterer.\" She smiled, laying her head against his chest. She inhaled, taking in his scent, then looked up at him. \"Will I suffice? In place of the wife and mistress you lack? Your deeds today require reward. I have asked your queen if I may serve you in her stead, and she has consented.\"\n\n\"Suffice? Yes.\" He said, bending suddenly, scooping her up in his arms. \"Serve me? No. You will always lay with me as my equal.\" he said as he carried her into the bedroom. Laying her gently on the bed, he started pushing the gown up over her legs, but stopped when he saw her frown. Smiling up at her, he climbed up over her and grasped the wispy material of her gown in his fingers and jerked, tearing it from her.\n\nThe front of the gown came away in his hand, and he leaned down, gripping her arms, pinning them to the bed as his mouth came down on her breast. Teyla gasped, arching up at him, her legs opening and wrapping themselves around him, pulling him toward her. \n\n\"No.\" He whispered as he moved down over her body, his tongue leaving a wet trail on her soft olive skin. \"A warrior deserves a feast, does he not?\" He smiled up at her. He pushed her legs apart as he moved his head between them, kissing the insides of her thighs, then inhaling her heady aroma as he pressed his face into the lush growth covering her loins. His tongue pressed between the lust swollen lips, making her moan.\n\n\"Oh yes, my lord.\" She moaned, her hands dropping to the back of his head as she arched her hips up at him. \"You may feast to your hearts content. And when you are sated, we will find other diversions to amuse you.\" \n\nCaldwell grunted, mashing his face into the sopping wet crease of her cunt, sucking hungrily. His tongue lashed and laved up and down over the dew coated lips, lapping up her spicy nectar. He ate her like a starving man at a banquet table, forcing her legs wider apart, his mouth opening and clamping around her fur fringed mound, trying to take all of her in at once.\n\nTeyla writhed under his oral assault, her head rocking back and forth. She gasped and panted for air as his tongue dance over her clit, then just as quickly moved away. She pulled at his head, trying to guide him back, but his tongue darted up inside her, lapping up her spendings from the source.\n\nShe grunted, humping up at him, trying to force more of his tongue inside her, then whined when he withdrew, taking the puffy lips of her pussy between his, sucking on them tenderly. \n\n\"Please my lord! Do not tease me!\" She groaned\n\n\"I am not teasing you woman, I am pleasing myself.\" He grunted roughly, nipping at her tender flesh with his teeth. \n\n\"Ohhhhhh! Yes, my lord!\" She squealed as he pressed his lips to her clit, sucking it into his mouth. He chewed at the stiff little nubbin with his lips, then dragged his tongue up the length of her drooling pussy slit, returning to her clit, nipping at it gently with his teeth.\n\nSliding his hands under her squirming asscheeks, he rolled suddenly, bringing her over on top of him, straddling his face. \"Feed me.\" He grunted into her loins, then pulled on the tight cheeks of her ass, plastering her pussy over his mouth.\n\n\"Yes, master!\" She panted, getting up on her knees over him, keeping her juicing pussy planted firmly on his mouth. She supported herself with one hand, and reached between her legs with the other, spreading the lips of her pussy with her fingers, then stroking her clit eagerly. \"Y...you seek nectar, my lord?\" She asked breathily, her fingers flashing frantically over the throbbing bud of her clit.\n\nHis stiff tongue stabbing up inside her gave her all the answer she needed, and she threw back her head and cried out as her orgasm swelled over her. Her hips jerked, and she ground her spasming cunt down onto his face as warm juices flowed from her, filling his mouth, and soaking his face.",
        "He held her tightly as she writhed and jerked above him, his mouth working hungrily, his tongue darting and slapping all around over and inside her. Teyla collapsed, tears streaming down her face as she surrendered to the overwhelming sensations battering her senses. Her body heaved as he jammed three fingers inside her, and she slammed her hips down on them, pumping up and down mindlessly, fucking herself on the stiff digits.\n\nCaldwell kept his mouth open under her, gathering up the spicy juices as they spewed from her.\n\n\"Oh! Mercy my lord.\" Teyla whimpered was she shuddered through a series of powerful orgasms. \"I will surely die if you continue! I must rest. Please!\"\n\nNot paying her any mind, he continued his feverish feasting on her lust enflamed loins. He withdrew his fingers, making her whine, then groan as he replaced them with his tongue. He slowed his frantic sucking, his hands relaxing their grip on her bruised bottom, as he let her ease down from the peak she was teetering on.\n\nHe finally pulled back, raising her off his face, guiding her down to lay over him. She stretched out over his body, planting kisses all over his face, then lifted her head, her eyes going wide as his cock slipped inside her of its own accord.\n\n\"Don't move.\" He whispered as she started wriggling, her hips beginning a slow up and down motion. \"Rest, lay with me. Just let me hold you.\"\n\nTeyla sighed, as she laid her head on his chest, her heart racing, her breath finally beginning to slow. \"Thank you, my lord. I will...\"\n\n\"Shhhhh, you pleased me, love. Rest.\" he said softly as held her. \"I'll speak to the queen in the morning.\"\n\nTeyla smiled, snuggling against him as she felt sleep overtaking her.\n\nInterior-Bedroom\n\n2110 Hours\n\nTammy stripped off Geraan's robe, then started unwrapping his breechclout.\n\n\"What are you doing?\" Sam asked as she came out of the bathroom.\n\n\"I'm getting him ready for bed.\"\n\n\"Do you think we should let him sleep naked? And are you going to let him sleep in here with us?\" Sam asked.\n\n\"Yes, and yes.\" Tammy said as she took the robe and clout into the bathroom and put them in the cleaner. \"It won't hurt him to sleep naked, but you can put him in a tank top if you want. I'm going to let him sleep with us for a few days, till he gets used to being here, then we can put him in the city side bedroom.\"\n\n\"But we sleep naked too, Tammy.\" Sam said. \"What if he...\"\n\n\"What? Gets a woodie? I kinda doubt that's gonna happen.\" Tammy laughed as she laid him out at the top of the bed, then put a big round pillow next to him. \"He sleeps up there, we sleep over here, I'm pretty sure we'll be safe.\"\n\n\"That's not what I meant.\" Sam laughed.\n\n\"I know, but there's no need to have him stuck with a body taboo when we both run around naked. It's natural, and it won't hurt him.\" Tammy said as she slid off the bed and came over to her. \"He's gonna be fine, Sam. And I like him. He sees the world in wonder, and I miss that. He can help us get that back I think, if we let him.\"\n\n\"I'd like that, I'm getting stuffy.\" Sam said as she hugged her gently. \"I'm gonna get some ice cream. Wanna come...I mean, would you like to join me?\"\n\n\"Tease.\" Tammy laughed. \"But yeah, that sounds good.\"\n\nInterior-Kitchen\n\n2130 Hours\n\nAndi was sitting at the kitchen table when they walked in. She was holding her tablet, and her eyes were moist as she ran her fingers lightly over the screen.\n\nTammy looked over her shoulder, and laughed. \"You watching us again, Andi?\" She asked.\n\n\"I never stopped.\" Samuels said, not taking her eyes off the screen. \"He's so beautiful, so innocent.\"\n\n\"You have kids, don't you Andi?\" Carter asked as she got out two cartons of ice cream, then held one out to Samuels. \"Want some, Andi?\" \n\n\"No, thank you. And yes, I do have kids.\" She said, sitting the tablet down. \"They're grown, a boy and a girl. We don't get to talk much these days.\"\n\n\"Hopefully, after things settle down, you could have them visit.\" Tammy said as she took a carton from Sam.\n\n\"Maybe, we'll have to see.\" Andi said lightly. \"I can't stay, I just wanted to make sure that you're doing okay, Tammy.\" She slid a tablet face down across the table and looked at her as she stood up. \"I'll be going. Try to get some rest.\"\n\nTammy picked up the tablet after she'd gone and turned it over. There was a post-it note on the screen with 'Kiss-n-make up' on it. She peeled it off, and saw that under it, there was an icon with the same name. She tapped the icon, and a video stated playing.\n\nTammy laughed, and stopped the video, then opened her email and sent Andi a short thank you note.\n\n\"What was so funny\" Sam asked.\n\n\"She made me a video.\"\n\n\"Of what?\" \n\n\"You and me. This morning.\"\n\nSam picked up the post-it, unfolding it and reading it. \"You didn't see everything.\" She said, handing her the note.\n\nThe note said, 'Some things, even porn, should be preserved'.\n\nInterior-Col. Caldwell's Suite, North Tower\n\n0230 Hours\n\n\"Do not move.\" Teyla whispered as she felt him stir under her. \"I will do everything.\"\n\nShe slithered up and down his body slowly, and Caldwell groaned when she squeezed her inner muscles, milking his stiff shaft gently, then more forcefully as she ground herself down on him. Her lips brushed lightly over his chest, and she took one of his small nipples between her lips, then nipped at it lightly with her teeth.\n\nCaldwell's hips moved, and she let him withdrawal, then on the instroke she clenched herself tightly around him, trapping him inside her. Closing her eyes, she fluttered her inner muscles up and down the length of him, and he jerked, his cock swelling and throbbing inside her. She felt the stiff shaft ripple as his cum surged up it, bursting from his cockhead, erupting inside her.\n\nTeyla moaned, burying her face in his chest as his outpouring filled her, and she kept him buried deep inside her. \"Yes, my lord, feed me now, fill my womb with your seed.\" She whispered as he emptied himself inside her.\n\n\"I...I don't know ho...how you do that.\" He panted, putting his arms around her and rocking her gently. \n\n\"And you needn't concern yourself.\" She whispered. \"You have done your duty, now sleep.\"\n\nInterior-Col. Carter's Suite, Bedroom\n\n0310 Hours\n\nSam opened her eyes and looked over at Tammy, smiling back when she saw her smiling at her.\n\n\"How long has be been there?\" She asked, nodding to Geraan.\n\nHe was sprawled out on her back, sound asleep.\n\n\"About an hour. He woke up crying and crawled over. He went right by you, I'm surprised you didn't notice.\" Tammy whispered.\n\n\"No, I didn't. Are you going to be able to sleep with him on you like that?\"\n\nTammy nodded. \"He weighs less than you, and I sleep with you laying on me all the time. Now I have two people that love me. It feels good.\"\n\n\"He looks so peaceful, not a care in the world.\"\n\n\"You look the same way when you're sleeping.\"\n\n\"Liar.\"\n\n\"Honest injun.\" Tammy said as she closed her eyes. \"Go back to sleep, he's going to be up early, and that'll be all she wrote.\"\n\n\"I love you.\" Sam said softly.\n\n\"I know, you can't help yourself.\" Tammy said with a smile.\n\nCarter closed her eyes, smiling to herself. You're right, I can't. She thought, as she let herself drift off to sleep. \n\n(-)\n\nThat's all for Chapter Six. Please read Chapter Seven for more of this story.\n\nI hope you liked this episode. Please post a comment so I know if I'm the right track with this..."
    ],
    "authorname": "RibaldWriter",
    "tags": [
        "romance",
        "intercourse",
        "lesbian",
        "intrigue",
        "sex",
        "love",
        "oral sex",
        "relationship",
        "love",
        "fun sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/confirming-carter-bk-02-daedalus-ch-06"
}