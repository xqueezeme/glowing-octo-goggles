{
    "title": "Lakeside Park",
    "pages": [
        "Author's Note:\n\nAs head of the HOA and part of the Minwack Falls Good Neighbours Society, Liz Roth knows what time Lakeside Park closes. But when the power goes out one evening and the storm inside her house ends up being more destructive than the ones raging outside, Liz decides it's time to start breaking the rules.\n\nThis story contains an older woman/younger man relationship as well as mentions of adultery and emotional manipulation. It is part of the When The Lights Go Out universe. These stories all revolve around the same event and have some connections, but are stand alone pieces. You can find a list of included stories in my bio.\n\n**\n\nAccording to town bylaws, Lakeside Park closed at ten p.m. every evening and reopened at six the following morning.\n\nI knew the bylaw well; living down the street from the park meant I'd had to put up with drunk teenagers leaving broken glass all over the sidewalk and would-be drug deals happening next to the playground equipment my daughter had enjoyed as a child. I'd called the Minwack Falls detachment of the provincial police more than once, and sure, maybe that made me that person, but when my husband Scott and I first got married, I'd been so certain that living across from a park was the best place to raise a family. Instead of admitting that I'd been a touch too insistent, I'd resolved to simply make it the safe and welcoming place I'd wanted it to be.\n\nRules were rules for a reason.\n\nThat night, though, I was feeling a touch rebellious, and I didn't even hesitate before striding past the sign warning that bylaw violations were subject to a two-hundred-dollar fine. If the lazy enforcement officers at the detachment even bothered coming out, I could easily remind them that they'd let more than one person off with a warning after I'd called them, and if they still insisted on fining me, Scott could pay the fucking thing.\n\nChances were slim anyone would call about me being in the park anyway. If anything, there would just be a ton of whispered rumours from the town gossip, Alice McGrady, and the chances of anyone believing that I, of all people, had put a toe out of line were slim anyway. Plus, given how dark it was, I would have been surprised if anyone could even see me.\n\nIt was strange, really, how unnatural the darkness seemed. It wasn't until the power went out and the second thunderstorm of the day had cleared up that I realized just how ubiquitous the yellow-bright glow of the streetlights was in Minwack Falls and how surreal the world seemed without it. Even in the middle of the night, I could usually look out and see the town I'd helped mold and maintain and celebrate, the yards I'd evaluated and fences I'd set standards for and the smooth, uncracked sidewalks I'd pressured the town council to fix. I could see what had amounted to my life's work, I could ignore the ugliness in my own life and see the beauty I'd poured myself into creating.\n\nI don't know why I decided the park was the right place to be. My house felt too big, too empty, too lonely, and for some reason, I thought leaving it to go to a bigger, emptier, lonelier place would help. The clouds had finally parted and the moon left a silver-slicked glow along the rain-soaked path that led into the park--asphalt, not concrete, since asphalt was the perfect mix of economical and aesthetically pleasing, as I'd argued to the town council--but it was barely enough to see by.\n\nStill, I walked, letting my eyes adjust and leaving nothing but the sound of softly splattering footsteps as my trail. Darkness coated the world, and the comfort of my sad little accomplishments disappeared beneath it.\n\n**\n\nThe power went out just as I was trying to decide if it was worth putting myself through eating the baked chicken, steamed broccoli, and rice I'd made for dinner.\n\nIt was done, of course, but Ramona was in the basement playing whatever video game she was playing to avoid talking to me, and Scott was working late--again--and instead of fighting about it--again--we were in a passive aggressive standoff where I was waiting for him to complain about the fact that dinner was overcooked every single night and he was waiting for me to complain about the fact that he was late... again.\n\nSomewhere along the line, I'd decided ignorance was bliss.\n\nBut, of course, then the power went out, so I was stuck with the slop I'd made for dinner. Scott got home from work, Ramona pulled her sullen self up from the basement, and I'd spent the rest of the night on my phone, helping coordinate assistance for people who needed it on the town Facebook page and sharing the latest updates from the electric company.\n\nI called them after we finished eating, when Ramona had disappeared from the table to do whatever she could to avoid working on her resume and Scott had disappeared to the living room to do God knows what. As I cleaned up the kitchen by the dim glow of one of our emergency lanterns, I cradled my phone on my shoulder.\n\nAt first they said they didn't have an estimate, which was, of course, unacceptable. I stayed on the line as the first representative I spoke with got her supervisor, then waited patiently as the supervisor got in touch with the field crew to find out if they had an estimate about when to expect the estimate. They told me they'd know in about half an hour as the storm was starting to let up. When forty-five minutes had passed and the website still hadn't been updated with an estimate, I called again.\n\n\"It's not as easy as we initially thought,\" the supervisor said. \"Lightning hit one of the--\"\n\n\"I'll be honest with you--\" I glanced at the piece of paper I'd been keeping notes on. \"--Sheila, I'm not overly concerned about what happened so much as I am about when our community can expect a restoration of services.\"\n\n\"I understand that, Mrs. Roth,\" Sheila said evenly. \"But the crew needs time to evaluate and until they do, we can't give an accurate idea of when service may be restored.\"\n\n\"They must have some idea,\" I argued. \"Like, an hour? Two hours? Three days? Even a rough estimate--\"\n\n\"It won't be in an hour,\" she said exasperatedly. \"For something like this, you can expect a minimum of eight to twelve hours of interrupted services. Based on the weather and the complexity they're working with, my guess is that you won't see power back until tomorrow morning. Is that the answer you're looking for?\"\n\n\"Yes, that was exactly what I needed to know,\" I said brightly. \"Thank you, Sheila. You've been exceptionally helpful.\"\n\n\"Uh... thanks,\" she said. \"I appreciate that. Please let me know if there's anything else we can assist you with, otherwise, we do apologize for the--\"\n\nAnd off she went into her on-script spiel. I listened politely, thanked her again, answered the quick two-minute customer service survey at the end of the call, and hung up. Taking a deep breath, I immediately switched back to the town Facebook page.\n\nUnfortunate news, everyone, I wrote. Now, please keep in mind this isn't set in stone and may change, but currently the electric company says we're looking at sometime tomorrow morning before the power is back.\n\nI went upstairs, informed my completely oblivious daughter that the storm had ended and the power wouldn't be back until the morning, and by the time I'd returned to the kitchen, the comments on the post had exploded.\n\nFuck! said the first one. This sucks balls.\n\nI reported that comment immediately. The Minwack Falls Facebook page was intended to be family-friendly.\n\nUgh. Happy Friday everyone, said the next.\n\nWell there goes dinner lol\n\nOh nooooooooooo. @Liz Roth, do you know if anyone has a generator or backup power or something? Jeremy's out of town and I'm stuck here with the baby and I have nothing to warm her bottles up and I'm panicking. Please, can anyone help me?\n\nWe have one, I replied quickly. It's going to be okay, Mallory. I'll DM you after I talk to Scott. In the meantime, anyone who has a generator or other supplies who is willing to help out your neighbours, please respond here. I'll get everyone in touch with each other.\n\nThe \"likes\" on that comment poured in instantly.\n\n\"Scott?\" I called, putting my phone on the kitchen table.\n\n\"Yep,\" came the distracted response.\n\nI sighed and went to the living room. He was lying on the couch, legs extended and his phone held up over his head, and didn't put it down or glance at me as I entered the room.\n\n\"Is there gas in the generator?\" I asked.\n\n\"Seriously, Liz?\"\n\n\"What?\"\n\n\"Let me guess.\" He put the phone down and sat up. \"I'm going to say yes, there's gas in the generator, and then your follow-up statement is gonna be 'Great, I volunteered you to bring the generator over to Alice McGrady's so she can watch the end of her soaps' or 'I told Loni she could use it to run the coffee shop' or--\"\n\n\"--or I said I'd talk to my husband because Mallory St. John's husband is out of town and she's on her own with a baby and no way to warm up milk,\" I finished.\n\n\"Exactly,\" he said. \"So now after I work my ass off all day, I have to haul the generator around because you feel the need to volunteer my services for anyone in town.\"\n\n\"I told one person I would talk to you to see if you could help,\" I replied. \"But it's fine. Mallory just won't be able to feed her baby because you're busy.\"\n\n\"So I look like a fucking monster. Thanks.\"\n\n\"I'll just tell her we're out of gas.\"\n\n\"Don't bother.\" Scott stood and tucked his phone into his pocket. \"I'll go help her with the fucking baby milk. Like, she couldn't just use her tits? Isn't that what they're for?\"\n\nI bit back my response, which was that I'd heard from Alice McGrady that Mallory was devastated about the fact that she wasn't able to breastfeed, and that he was being an absolute prick about something he didn't understand at all.\n\n\"Thank you,\" I said instead.\n\nStill, he grumbled and sniped and rolled his eyes the entire time he was loading up the brand-new gas-powered generator he'd absolutely insisted he needed when it went on sale just after Christmas, then slammed the front door before taking off down the street.\n\nMoments after he left, Ramona barrelled down the stairs. Without so much as a glance in my direction, she threw the pantry door open.\n\n\"What are you doing with all this?\" I asked as she rooted through the shelves.\n\n\"I'm going to the car so I can charge my Switch,\" came the muffled response.\n\nShe popped out with an armful of chips and Oreos. I looked at her, my mouth half-open. \"That's going to drain your car battery.\"\n\nRamona rolled her eyes in that exasperating way only teenagers seem to manage. \"I'll make sure I let it run for a bit.\"\n\nShe left the kitchen in a whirlwind before I could even ask about her resume. As the crack of the front door slamming behind her echoed in my chest cavity, I was struck again by just how different she'd become. It wasn't just the blue hair or the metal stud through her eyebrow or the heavy eye makeup and bright lipstick. It was everything: it was the amazing strength to stand up for herself and the infuriating inability to see the big picture. It was the rebellion I thought I'd avoided and the fear she'd get herself into trouble and the pride that she was so unapologetically herself.\n\nI'd seen signs of it during our weekly phone calls and her infrequent visits home, but it wasn't until I'd arrived to help her pack up her dorm room that I realized I had no idea who my daughter was anymore. It had been hard enough when she left and I saw just how much I relied on her. How hard it was to be trapped in this big house with nobody home.\n\nHow much I missed her.\n\nI told myself I'd go out to check on Ramona in a bit and kept watching the Facebook page for new posts. Of course, that meant as soon as my husband commented, I saw it.\n\nOne mama in distress saved! he wrote on the post. Who needs help next?\n\nIf you could bring the generator over so I could literally just open my garage door, I'd be so grateful, someone replied immediately.\n\nYou are literally the town angel, @Scott Roth.\n\nAmazing. This is why I LOVE Minwack Falls. Thank you, Scott!\n\nScott you're a total bro\n\nNah man, Scott wrote. We're all in this together. Gotta take care of our own, you know?\n\nPeople were getting help, I told myself. That's what mattered. It didn't matter that he'd snapped at me repeatedly and complained the entire time. It didn't matter that he was taking credit for my work. People were getting the help they needed and that was that.\n\nMy thoughts couldn't fill the total silence settling through my house. There was no quiet buzz of electronics and appliances; the shuffle of fidgeting and footsteps was gone, and all that was left was my own heartbeat and shallow breathing. I distracted myself the way I knew best: first pouring a large glass of wine and then pouring my heart into the community. Scott was the town hero, but behind the town hero is the person making sure requests for help don't get buried under the various accolades and ridiculous memes.\n\nThat was the rest of my evening. Half-empty words of praise, a mostly empty bottle of wine, and a completely empty house.\n\n**\n\nSeeing the group picnic area empty was eerie.\n\nI mean, sure, it was the middle of the night and no one was allowed in the park, but that meant it was one of the few times I'd seen it without people there. Instead of potluck-style dishes and paper plates on the tables, silver light reflected off the shallow gatherings of rainwater. Instead of laughter and screams as children explored the newly-upgraded playground equipment I'd spent three years fundraising for, all I could hear was the gentle splash of my footsteps on the pavement and the echoes of memories years gone.\n\nThe picnic area was prime real estate in the park because of the number of tables, the closeness of the playground, and the readily available access to the nearby Porta Potties. Hundreds upon thousands of birthday parties, BBQs, and other events had taken place there in the years I'd lived in Minwack Falls.\n\nIt was one of the busiest spots in the park, and as such, one of the least likely to attract trouble. There were often teenagers sitting on the tops of the picnic tables, loitering around and trying to act cool, but even I knew they were mainly harmless. Too many people could see them there, meaning the amount of trouble they were willing to get into was much lower.\n\nNo, it was the area down from the picnic space that attracted the most trouble. It was near the lake in the park--which was really more of a duck pond, but Lakeside had still stuck as the park name--surrounded by a grove of willows with the intent of making it a smaller, private sort of picnic area.\n\nIt didn't take a genius to figure out that the secluded spot would be a natural gathering place for people shying away from the staring eyes of the town.\n\nUnfortunately for them, I could see the path into the area from the living room of my house. For years, I'd battled with the town over Aaron Mulch, a deadbeat stoner who used it as his meeting point to sell weed. I'd called enforcement more than once after seeing teenagers stealing away through the trees to make out; it was one thing for me to turn a blind eye to the teenagers parked at the end of Drum Farm Lane, but another entirely to know what they were doing so close to where people's children played.\n\nI'd gone into the park for no reason but to get away from my house, so when my feet led me past the picnic area and towards that little grove of trees, it wasn't entirely planned. Something deep inside me wanted to hide, maybe, and that's why I walked towards the pond. The vast openness of the park wasn't shielding me from my thoughts or memories or brokenness, and so I needed that space, that tiny bubble, to collect myself and sit in the silence and just...\n\nJust think.\n\nIt was reckless. It was stupid. I was sheltered by the tiny problems in my tiny town. I mean, the worst I'd seen happen was a stoner selling weed--not even the bad drugs, just plain old cannabis--and teenagers doing what teenagers do. As a woman, I knew the fear that accompanied being alone at night, but I just... I'd done so much to make sure those things didn't happen in my town that I didn't even think about the fact that I was putting myself into a space even darker than the night surrounding me.\n\nAnd it was dark. So dark that as I entered the clearing, I could barely make out the shape of the picnic table in front of me. I did, though, and I walked over to it, and I collapsed onto the bench with my back to the tabletop and my head in my hands as it washed over me.\n\n\"It\" being pain, and heartbreak, and failure, and horribly crushing hopelessness that made tears prick in my eyes.\n\nAnd then, terror.\n\n\"So hey, don't freak out, but--\"\n\nI screamed.\n\n**\n\nOn Ramona's first birthday, I booked the group picnic space through the town office so I had all the proper permits. We didn't have a town coffee shop with Loni Perks's delicious baking yet, so I ordered the cake through the grocery store and made most of the food myself. Matching outfits, adorable party favours, a professional photographer... every last detail was perfect.\n\nIt had to be.\n\nI needed it to be.\n\nScott and I had married young. Well, I was young. I was twenty and he was twenty-six, but at the time, those years felt like nothing to me. I loved him, and he loved me, and that was what mattered.\n\nIt was a good thing I felt that way, because most people thought the age difference was what mattered more, and it was why I was absolutely determined to show everyone that they were wrong, that we were going to make it, that I could be everything Scott needed and more even though I was younger than him.\n\nMy determination only grew when Ramona came along two years into our marriage. Now I had to be the perfect mother in addition to the perfect wife. Scott had rolled his eyes as I fretted about her birthday party, but he didn't understand the pressure I was under. He didn't understand the whispers and the judgement and the constant questioning I had to put up with. His family, my family, his mother, my mother, the town in general... it was a lot for anyone to handle, let alone a mother still in her early twenties.\n\nStill, he indulged me as I made him wear a coordinating outfit and planned out every last detail. He obediently packed up the cooler and the various baby supplies I'd deemed necessary. As I was darting to the front door to bring another load of food out to the car, he caught me around the waist and pulled me in close.\n\n\"Relax, Liz,\" he whispered, pressing his forehead to mine.\n\n\"I don't have time to relax,\" I said, but he pressed against me harder and refused to stop kissing me until I started laughing.\n\n\"That's better,\" he teased, tracing his thumb along my lip. \"I miss this.\"\n\nThat gaze of his made me shiver breathlessly. \"Miss what?\"\n\n\"You,\" he said. \"Your smile. You and me just... you know.\" He pressed his hips forward. \"I miss having you whenever I want you.\"\n\n\"You still can,\" I said, giggling.\n\nHe flicked an eyebrow up, then looked towards the door and back at me. Try as I might, I couldn't stop myself from glancing at the clock in the hallway.\n\n\"See,\" he said, gentle frustration threaded through his voice. \"I don't get to have you whenever I want you. You've got us on a schedule.\"\n\nI swallowed hard and looked from the clock back at him. Ramona wasn't due to be up from her nap for another twenty-six minutes and if we were a couple of minutes late, I could just say that she'd been cranky when she woke up, as much as it would drive me crazy to be late because I hated when people with children used that as an excuse to be late for everything. But Scott missed me, and he wasn't exactly wrong since we certainly didn't have as much time together as we usually did, and--",
        "\"I'll load the car,\" he said when I didn't respond, letting go of my waist.\n\n\"Wait,\" I said, and when he turned back to me, I threw my arms around his neck and kissed him.\n\nWe didn't go to the bedroom. I tried to pretend it was because I wanted him so badly I couldn't wait one second longer, but both of us knew it was because I didn't want to wake Ramona. Scott didn't seem to care too much; strong arms tightened around me as he walked me back towards the table in the front entryway. As soon as I felt the edge of the table pressing against my back, he hiked my dress up around my waist and tugged my panties down. His lips captured mine as he unbuckled his belt, the hurried sounds of him working to get his cock out enough to make my skin tingle and my pussy drip.\n\n\"Up,\" he grunted, helping me onto the table before shoving my legs apart.\n\nWhen he sank himself inside me, I whimpered, clutching his shoulders as he exhaled loudly. He paused once his pelvis pressed against mine, his breath hot against my skin as his cock filled me.\n\n\"Fuck,\" he groaned softly. \"I miss this, Liz.\"\n\n\"Me too,\" I whispered.\n\nHe pressed his lips against mine, the walls of my pussy gripping every inch of his cock as he started slowly, then began moving harder, then began fucking me against the table in the hallway. I clung to him, heat rising up my neck and to my cheeks, shuddering as he hit all those deliciously wonderful spots that made electricity surge through my body. He buried his face against my neck, his teeth nipping at my skin as he sent me closer and closer to ecstasy, as his pelvis rubbed against my clit and made that pooling sense of bliss start to bubble and roll inside me.\n\nI tried to be quiet when I came.\n\nI failed.\n\nHe pressed a hand to my mouth as I lost control of my voice, as the pleasure inside me boiled over and manifested as a wavering sort of cry. I was still working to find my breath when Scott grunted and stilled as he shot a load of cum deep inside me, pulse after pulse of warmth filling me up as I writhed in his arms.\n\n\"Fuck,\" he murmured as he finished, resting heavily against me. \"We gotta do this more often. I want my wife again.\"\n\nI shivered as he pulled out, his cum dripping from my pussy. \"Maybe we should try for another.\"\n\nHe stopped and looked up at me. \"What?\"\n\nI felt my face turn red. \"I just mean when we were trying for Ramona, we... we did it a lot. So maybe that would... never mind.\"\n\nHe chuckled and kissed me again. \"Maybe in a while. Right now, one's a handful, wouldn't you say?\"\n\nI laughed and agreed and slipped off the table so I could pull my panties back up, then rushed upstairs to fix my hair and makeup. By some miracle, Ramona wasn't cranky when she woke, and Scott and I managed to get the car loaded so we could drive the two minutes to the parking lot closest to the picnic area only a few minutes later than I originally intended.\n\nOf course, because we were a few minutes late, Scott's parents were already in the parking lot waiting to help us set up, which meant they got to witness the crestfallen look on my face as I realized the picnic tables I'd booked were overrun by another party.\n\n\"It's fine,\" Scott said as he looked at me. \"We'll go to another spot.\"\n\n\"There isn't another spot with picnic tables!\" I hissed. \"I'm telling them to move.\"\n\n\"Liz--\"\n\n\"I booked them and paid for the permits and everything!\" I snapped. \"Those are my picnic tables and I'm not changing the party I spent weeks planning because someone else didn't bother to do the same thing!\"\n\nBefore he could respond, I got out of the car. Leaving Scott to get Ramona out of her car seat, I picked up my bag and marched across the parking lot to the nearest picnic table.\n\n\"Excuse me,\" I said as I approached. \"Whose party is this?\"\n\nA gorgeous woman with long, thick black hair turned towards me, a baby around Ramona's age in her arms.\n\n\"Well, my son's, technically,\" she said, shooting a warm smile at me. \"But seeing as he's only one, I guess I'm in charge.\"\n\n\"Great.\" I pulled the carefully clipped together permits out of my bag and held them up. \"I have this spot booked for my daughter's birthday party.\n\nThe smile on her face was replaced by alarmed confusion. \"Booked?\"\n\n\"Yes,\" I said evenly. \"The picnic space needs to be booked a minimum of ten days prior to an event and you need a permit if you want to have a grill.\" I motioned towards the bar-b-que they had set up next to the table. \"Which you most certainly don't, because I do.\"\n\n\"What's going on?\" A man came up and put his hand on the woman's back as he looked at me. \"Is there a problem?\"\n\n\"I didn't know we had to book the spot,\" the woman said, all traces of her smile gone. \"But everyone's here and we told them--\"\n\n\"I have an entire party full of people coming to this exact spot for my daughter's first birthday,\" I interrupted.\n\n\"Of course,\" the woman said. \"I'm sorry, I just... I didn't know and--\" Her voice cracked and she looked like she was about to start sobbing. \"I can't believe I did this.\"\n\n\"Monica, it's okay,\" the man said. \"We'll find another place to--\"\n\n\"It's not okay.\" She pressed her lips together and shook her head. \"I'm already months late with celebrating his birthday and now I've gone and screwed up--\"\n\n\"We delayed celebrating his birthday because you needed to have surgery,\" the man said patiently. \"He's one, he has no idea it's not his birthday, and he would much rather have his mother around for years to come anyway.\" The man looked up at me. \"You said your daughter's one?\"\n\n\"Yes,\" I said.\n\n\"Well, we have far too much food and there's plenty of space. How about we help feed your guests and we combine the parties?\"\n\nI frowned. \"But--\"\n\n\"That sounds excellent,\" Scott said from behind me. He had Ramona balanced on one hip and was holding a cooler in his other hand as he gave me a look. \"We have tons of food and cake and games. It's a beautiful day and if the kids are the same age, they'll probably end up being friends at school or something eventually.\"\n\n\"Really?\" the woman said hopefully, looking first at Scott and then at me with wide eyes. \"We'd be so grateful for that. Do you mind, Mrs....?\"\n\nI felt three sets of eyes on me. The thing was, I did mind. And maybe that made me sound like a horrible person, but I couldn't help it.\n\nI had planned the birthday a certain way. Now I was going to be responsible for adjusting everything on the fly because my husband wanted to be friendly and accommodating. But who was going to be the one changing how all the tables were set up? Who was the one who was going to be tracking whose food was whose and responsible for watching twice the amount of kids as I'd anticipated? Who was going to explain to those kids why some of them were getting certain goody bags and others weren't?\n\nIt was either that or be the monster who had to tell an upset-looking mom who'd had a rough couple of months that she couldn't have her son's birthday party even though it was already set up and ready to go.\n\n\"Liz Roth,\" I said, extending my hand to her. \"And not at all. It'll be a blast.\"\n\n\"You're an absolute angel.\" The woman reached out and shook my hand. \"I'm Monica Halliday. This is my husband, George, and our son, Ashton.\"\n\n**\n\n\"Lady, lady, please!\" someone was saying over the terror-wild pounding of my heart. \"I'm not going to hurt you, I was just--\"\n\n\"What the fuck are you doing here?\" I demanded shrilly. \"The park is closed!\"\n\n\"Uh, yeah,\" he replied. \"So what the fuck are you doing here?\"\n\nI paused, my mouth dry and my head light as I tried to catch my breath. From beside me, I saw the outline of a vaguely humanoid shape, but it was too dark to see any details.\n\n\"None of your business,\" I finally said. \"I-I'm going to... I'm gonna leave, I... if I don't get home, my husband will--\" I stopped suddenly, then swallowed the lump that had jumped into my throat. \"Scott w-will--\"\n\n\"I swear to God, I'm not gonna do anything.\" He was so close that I didn't know how I hadn't collapsed on top of him when I sat down. \"I didn't know anyone else would even be out this time of night, okay? Let me... I'm gonna scootch away a little and grab my cell phone from my pocket, okay? And I'm gonna turn the flashlight on so we can see each other.\"\n\nI should have just run. I didn't know who he was, sure, but he also didn't know who I was, and that meant he wouldn't be able to tell anyone I was in the park in the middle of the night and--\n\n\"Okay,\" I whispered.\n\nI heard movement, then saw a brief flash of light as he turned the screen of his phone on. Moments after that, the stark white light of his flashlight burned through the darkness and I blinked as my eyes adjusted.\n\nHis adjusted first, apparently.\n\n\"Mrs. Roth?\" he said incredulously.\n\nI blinked twice more as his face came into focus.\n\nThe man sitting beside me was in his early twenties and vaguely familiar. I didn't know much about him except that he was older than my daughter--if they'd been close in age, I would have recognized him as one of her classmates, and he certainly didn't look younger than her--and that I'd seen him around Minwack Falls.\n\nAnd I knew for certain I'd seen him around town. He had a very... distinctive sort of look, with stretched piercings through each of his ears, a hoop through his lip, and apparently--since his mouth was half-open as he gaped at me--a stud in his tongue. That night, he was wearing a hoodie with some sort of skull on the front, but I knew from seeing him skateboarding around the park that tattoos covered his arms and neck. He had blonde hair that was long on top but shaved on the sides and was staring at me with wide, round eyes.\n\nIn another universe, back before marriage and a baby and a town with bylaws and perfect lawns, the twenty-year-old version of me would have been intrigued by everything about him. At forty, the reaction was less intrigue and more... I wasn't sure what to call it.\n\n\"Liz Roth,\" I replied unsteadily. \"Just... just Liz, please. I'm sorry, I don't know your name.\"\n\n\"Jus--\" He started saying, then stopped. \"Um... I mean...\"\n\nI must have looked nervous, because he sighed and looked down at his hands.\n\n\"Justin Higgins,\" he said. \"Are you gonna call the cops on me again?\"\n\n\"I... what?\" I asked.\n\nHe glanced up at me, confused. \"You've called the guys down at the station on me like six times for being in the park after it closes.\"\n\n\"Well, you shouldn't be in the park after it closes,\" I said without thinking.\n\n\"Mm-hmm,\" Justin replied, raising his eyebrows.\n\nI felt my face go red. \"I didn't know it was you in the park. I just call when I see people who aren't supposed to be here. But I... I won't be calling them tonight.\"\n\nHe half-laughed. \"Right. Cool. They probably wouldn't come, anyway.\"\n\n\"Why?\"\n\n\"'Cause they're busy responding to a domestic incident,\" he said flatly. \"Which is why I'm here.\"\n\n\"What happened?\"\n\nHe shrugged. \"It's the chick who lives in the townhouse next to me. Her boyfriend or husband or whatever works out of town and came home to discover that she's not missing him as much as he's missing her, if you know what I mean.\"\n\n\"Oh.\"\n\n\"Yeah. But regardless of her being a cheater, that doesn't mean he gets to... you know. Hit her or whatever. So I called the police and they came down around the time she was trying to convince him that she'd mistaken the guy she was fucking for him because of the power outage.\" He shrugged again. \"It got a little loud and I wasn't really into listening to more of that soap opera, so I figured I'd come down here and--\"\n\nHe stopped again, and that was when I glanced down and saw the bag of weed clutched in his hand.\n\nIt wasn't illegal. The weed itself, I mean. In fact, I'd been a supporter of legalizing it. Sure, part of that was fond memories from my pre-married life when I could indulge in things like weed without anyone thinking twice about it, but it was more than that. Legalizing weed meant drug dealers like Aaron Mulch weren't necessary anymore and kids were less likely to be able to get their hands on it. However, I'd also been one of the many vocal supporters within the town itself that insisted weed should not be used on public property.\n\nI mean, if I couldn't have a glass of wine while picnicking in the park, why should someone be able to get high? Not to mention the smell or the litter. So sure, Justin wasn't doing anything wrong by having weed on him--besides being in the park after closing, of course--but lighting it up was firmly against the town bylaws.\n\n\"Changed your mind?\" he asked when I didn't say anything.\n\nIf it had been a few hours earlier, I might have. Well, actually, no. If it had been a few hours earlier, I would have already called the police on him and certainly wouldn't be sitting in a dark park with him, staring blankly at the dried buds he was holding. There would be no changing my mind because we would have never even reached this point of the conversation.\n\nBut that was before everything had changed.\n\n\"Split it with me and we'll call it even,\" I said.\n\nHe stared at me. \"Wanna repeat that? 'Cause I think I might be hearing things.\"\n\nI pressed my lips together, doing my best impression of Ramona's exasperatedly unimpressed face, and tilted my head towards the bag. \"I would like to have some of your cannabis, so if you would be so kind as to roll it up into smokeable form and share it with me, I won't tell the police we're both breaking the law by being in the park past closing time.\"\n\n\"Wha...\" Justin's head moved from side to side. \"Okay, what the fuck happened?\"\n\n\"Excuse me?\"\n\nHe folded his arms. \"You're Mrs. Roth. HOA lady and like, town ambassador. Unofficial judge of which people 'belong' in Minwack Falls. The type to call the cops on people for sitting in the park after ten p.m. Following rules is your thing. Everyone knows that.\"\n\nHeat was crawling up my neck. \"Your point?\"\n\n\"You just asked to smoke weed with me. Have you ever even smoked before?\"\n\n\"Once upon a time,\" I muttered, then shook my head. \"Never mind. It was a stupid thing to ask. I'll leave now.\"\n\n\"No, wait,\" he said, hesitating for half a second before grabbing my wrist as I made to stand up. \"Look, I'll share, Mrs--uh, Liz. You just threw me off a little but like, hell yeah, I'll split a joint with you. Just, you know, maybe you should like, also tell me what's wrong because I'm a little worried about you?\"\n\nThe uncertainty in his voice was cute, in a way, and I almost had to laugh. \"You came here to get away from listening to a soap opera, not to be involved in mine.\"\n\n\"Yeah, well...\" He let go of my wrist and fiddled with the bag of weed. \"The soap opera next door ends with me not being able to sleep because they either make up loudly or she bawls her eyes out loudly after they haul him off to the station. Pretty predictable finale. But something that gets you breaking the rules? This is a story I wanna hear.\"\n\nI laughed softly. \"How much time do you have?\"\n\nJustin flashed a bright grin at me and opened the baggy. \"I got all night, Liz.\"\n\n**\n\n\"Mommy, can you please leave me alone?\"\n\nI would never forget the look on Ramona's face as she looked up at me, eight-year-old eyebrows furrowed in a pained expression as she pleaded with me, just as I would never forget those words.\n\n\"Can you please leave me alone?\" she had said, but there were a thousand other words written beneath it.\n\n\"I want to do this by myself.\"\n\n\"I'm tired of having you here.\"\n\n\"It's embarrassing being the only kid whose mom volunteers every time.\"\n\n\"I don't need you anymore.\"\n\nShe hadn't said it to be mean or rebellious or defiant. The look on her face told me that much. Her tone was quiet and her voice wavered as she found her footing in standing up for herself and communicating her needs, and at the same time my heart was being crushed in my chest, I was so, so proud of her.\n\n\"Okay, Ra-Ra,\" I said.\n\n\"I'm sorry,\" she said quickly, her eyes starting to shine as her voice got smaller. \"I just sometimes want to do things on my own and--\"\n\n\"I get it, sweetie.\" I glanced around, then bent down and quickly kissed her on the head. \"Go have fun with track-and-field, and I'll let the teacher know I'm going home. Mrs. Halliday will pick you and Ashton up after school, okay?\"\n\nMonica Halliday and I shared pickup duties since we lived across the street from each other. In the years since that fateful first birthday party, our families had become reasonably friendly; Scott had been right about Ashton and Ramona being in the same class at school, and they played together often.\n\nRamona threw her arms around my neck, kissed me on the cheek, then practically sprinted towards her friends on the other side of the field. Straightening up, I spotted her teacher talking to one of the other volunteer moms near the high jump mats and tried to swallow the lump in my throat as I walked over to her.\n\nI'd never had a career.\n\nI'd had a job, of course. It was how I'd met Scott. Me, an eighteen-year-old waitress at a poorly run place with mediocre food and a tendency to hire their waitstaff based on how good their legs looked in a skirt over any meaningful qualifications, which was how I got the job with zero work experience. Him, the new general manager who took over a few months after I started when the owner of the restaurant group discovered the former general manager fucking one of the hostesses on top of a produce crate in the walk-in cooler. He'd been twenty-four then, and it was his first time managing a restaurant on his own, which he wasn't exceptionally pleased about; the only reason he was working there was that his father was the owner of the restaurant group and felt Scott needed more \"real\" experience before working with him on a higher level.\n\nBut being a waitress wasn't a career. It was supposed to be a way for me to earn enough money to get myself to university, but the moment Scott had walked in, I was smitten. And, for some reason, he'd been smitten with me.\n\nFor a few months, we simply flirted and teased each other. The chemistry was intense and obvious; long before we finally gave into it, the other restaurant staff joked about how I was going to be the boss's wife one day. I always rolled my eyes and shook my head, certain that it was all just for fun, that this handsome man who was older and better off and more clever than I was wouldn't actually want to be with me.\n\nThen there was one of those nights. Anyone in the restaurant industry knows about them; someone calls out and another person doesn't show, but somehow it's a blessedly slow night anyway, so you get lulled into a false sense of security and the manager starts cutting people as the night wears on. And then, it's just you, him, and one cook left and it's a half hour until close and suddenly the front door is chiming as table after table flows into the restaurant, and you're all scrambling to get people seated and fed and paid up as quickly as possible.\n\nAnd then the customers all leave, and Scott starts helping clean the kitchen as you clean the front of house, and that means the cook is able to leave first. And then it's just you and Scott, and he comes out to help you finish cleaning, and you realize you've never been completely alone together.\n\nSuddenly the conversations are more risque, and the tension is about as thick as the bulge in the front of his pants as you wipe the tables down just a little more suggestively, and before either of you know it, you're pressed against the bar with his tongue in your mouth and his hand under your bra and your skirt being worked up your hips as you try to unbuckle his belt. And then there's a hard, throbbing cock in your hands and your legs are spreading farther and farther as he helps you onto a bar stool, and then he's standing between them and pushing your panties to the side and shoving his cock inside you, and it's like nothing you've ever felt and you squirm, needing more, and more, and more.",
        "And as he fucks you against that bar stool, you cling to him, and you shatter in his arms as he whispers breathlessly how much he's wanted this, and how hard you make him, and how he's going to come way faster than he wants to but he's going to take you home and fuck you properly for the rest of your life because he already knows he wants you forever.\n\nWell, maybe some of those things weren't totally universal to the restaurant industry.\n\nBut in any case, that was how it was for me and Scott. We worked together, and I kept working at the restaurant as his dad finally hired a new general manager and got Scott a job working as part of the corporate group, and then we got married and Scott didn't want me working there anymore.\n\n\"You don't need to,\" he'd said as we were cuddling in bed one night after a long shift. \"You're my wife and I'm going to take care of you.\"\n\n\"Maybe I could go back to school,\" I'd suggested. \"I could get a business degree and then I could help you with the corporate stuff.\"\n\n\"I thought you wanted to have kids.\"\n\n\"Well, yes,\" I said.\n\n\"If you want a baby, let's start trying.\"\n\nI giggled as he rolled on top of me and kissed my neck. \"Right now?\"\n\n\"Damn straight, right now,\" he muttered, and then he was undressing me and caressing me and making love to me even though we both knew I would have to go off my birth control before anything happened.\n\nOnce we had Ramona, I didn't go back to work or to school or to anything.\n\nI'd always wanted more than one, but Ramona was more work than I'd thought, and I was already focusing so much on being a mom that I nearly forgot how to be a wife. We talked about trying for another but never actually worked towards it. Years went on and Ramona grew and as she got older and more independent, I needed to keep myself occupied, so I started volunteering at her school and in the community. That became my career, my calling, my purpose, until the day she pleaded with me to let her just be a normal kid whose mom wasn't around all the time.\n\n\"Mrs. Roth!\" Ramona's teacher said as I approached her at the high jump mats. \"How are you?\"\n\n\"Great, thanks,\" I said as convincingly as I could. \"Actually, I hope you don't mind, but I'm going to head home now. I have a, uh, a bit of a headache.\"\n\n\"Of course not!\" she said. \"You don't know how grateful I am for your volunteering but we can manage with the parents we have today. You just go home and feel better.\"\n\nI smiled. \"Thanks.\"\n\nShe patted my arm. \"I don't know what I'll do without you when Ramona starts fourth grade. You've made my life so much easier this year.\"\n\nI held it together for my drive home. The thing about small towns like Minwack Falls is that everyone recognizes everyone, so as much as I wanted to sit in my car and just start crying, I knew someone would see me. The last thing I wanted was someone to witness my breakdown and spread that information around town. So, as I drove, I blinked rapidly and breathed in through my nose and exhaled slowly through my mouth. It helped a bit, though by the time I turned down Park Road, tiny whimpering sounds were accompanying every breath as I fought to keep them steady.\n\nAnd then, all of that faded away.\n\nOur house had a somewhat strange setup. There was a two-car garage, but it was attached on the side, not at the front. The driveway had room for three cars to be parked, the final spot sort of in front of our living room window. Scott and I both parked in the garage--usually--leaving three parking spots on the driveway for guests.\n\nHowever, as Scott's truck was parked at an angle across the driveway in front of the garage, the only place I could park was the spot in front of the living room.\n\nIt wasn't alarming to see his truck in the middle of the day. Given how he was parked, my guess was he'd forgotten something and had stopped by to get it. After all, he wouldn't have expected me home in the middle of the day; he knew track-and-field day was an all-day event. More than anything, I was thankful to see his truck. It might not be especially common for him to stop at home, but I could use a sympathetic ear and a hug from my husband.\n\nIn hindsight, it's hard to believe how stupid I was.\n\nMy lip was trembling as I walked towards the front door, seconds away from being somewhere safe to have my breakdown. The door was unlocked and I let myself in, not making any particular effort to be quiet, though I didn't call out for him immediately as I usually would.\n\nThat was because he was also not making any particular effort to be quiet.\n\nAnd neither was she.\n\nI might have been too stupid to suspect what his truck being home in the middle of the day meant, but I figured out what was happening the moment the door closed behind me. My heart shut down; the sadness I'd been fighting on my drive home disappeared and instead of heartbreak, I felt nothing but numb realization.\n\nFor a heartbeat, I considered just waiting where I was, but standing there listening to them above me was far worse than just going and seeing it with my own eyes. There was no need to be quiet; there was no way they could hear me over the racket they were making. I put my purse in its usual place and slipped my shoes off, then walked up the stairs as the surrealness of the situation swirled around me.\n\nThe bedroom door was open; there was no reason to shut it, of course, since nobody was supposed to be there. Sticking out of the doorway was a pant leg; just beyond it was a bra; just beyond that was Scott's favourite blazer.\n\n\"Liz!\" someone gasped, and I looked up from the blazer to see two sets of eyes staring at me. My husband's were wide and full of guilt as he stopped with his dick buried inside of Monica Halliday, who was on all fours in front of him. He had a handful of her beautiful black hair in his fist, forcing her neck up so she couldn't look away from me, her tits thrust forward and my bedsheets curled between her fingers.\n\n\"Hi, Monica,\" I heard myself say. \"Would you excuse us for a moment? I need to speak with my husband.\"\n\n**\n\n\"Wait, isn't your kid in high school?\" Justin asked.\n\n\"She just finished her first year of university.\"\n\nHe was twisting the end of the joint as I held his cell phone up so he could see, but he stopped and looked up at me.\n\n\"Last time I checked, it was still Mrs. Roth.\"\n\nI nodded. He stared at me, opened his mouth, then closed it.\n\n\"Why?\" he finally asked.\n\n\"Why what?\"\n\nHe scoffed. \"You literally walked in on him with another woman and you stuck around?\"\n\n\"It's not that simple. We have a daughter and--\"\n\n\"Oh, sure, blame your kid for being stuck in a marriage where the only person who has less respect for you than your husband is yourself. Like, fuck.\" He shook his head. \"God, people will do anything to keep the suburban dream going, eh?\"\n\nMy throat felt tight and anger bloomed on my cheeks. \"I don't blame my daughter for anything, and she wasn't the reason I chose to stay. You're what, Justin? Like twenty-one?\"\n\n\"Twenty-three,\" he said indignantly. \"Almost twenty-four.\"\n\n\"And you're not married.\"\n\nHe rolled his eyes. \"So?\"\n\n\"So you don't know what you're talking about! You're still young enough that you think it's all just black and white.\"\n\nOne side of his lip pulled up in a disgusted sort of grimace. \"Right, I'm practically a newborn, so God forbid you explain anything to me.\"\n\n\"I wouldn't expect you to understand how--\"\n\n\"If you're not even gonna give it a go, how am I supposed to? But yeah, you know what, you're right. I don't fucking understand why you put up with someone treating you like that.\"\n\n\"You've already judged me for staying, so what fucking difference is it going to make if I explain why?\" I asked angrily.\n\nHe made to respond, then frowned as he thought it over.\n\n\"Okay, that's a good point,\" he said.\n\nI stared at the half-rolled joint but didn't say anything. After another moment, Justin sighed.\n\n\"Sorry,\" he said. \"Like, yeah. You're right. I just don't understand why you'd make that decision when you deserve better. No one should... people don't deserve to be cheated on, Liz.\"\n\n\"I didn't say it was a good decision,\" I said.\n\n\"You're right. I'm sorry. That was out of line.\"\n\n\"Thank you.\"\n\nHe sighed as he returned to rolling the joint. \"Jesus. And I thought I had it rough.\"\n\n\"You probably still did,\" I said. \"It's not a competition.\"\n\nHe smirked and lifted the joint in the air, studying it carefully.\n\n\"I guess,\" he said.\n\n\"What's the story there?\"\n\nHe shrugged. \"Typical shit. My dad walked out. My mom hit the wine a little too hard, and then the vodka, and then when that shit got too expensive, found a guy who'd buy the vodka for her. He moved us out here to live the middle-class-small-town dream but, of course, I'm her kid from her first marriage, so that's a black mark on me.\"\n\n\"Is that why you, um...\"\n\n\"Um what?\" he asked.\n\nHeat rose on my cheeks and I gestured at him. \"The, you know. Whole... look.\"\n\nHe burst out laughing. Light glinted off his piercings as he tossed his head back, then shook his head.\n\n\"You mean like, am I trying to piss my stepdad off by dressing like a good-for-nothing punk?\" he asked.\n\n\"No, I just--\" My face was burning in the darkness. \"I guess I'm old and uncool.\"\n\nHe was still chuckling, but he shook his head. \"Nah, it's all good. I guess I deserved that for judging you. Eye for an eye, man.\"\n\n\"I'm not judging you,\" I said.\n\n\"No?\" He raised an eyebrow. \"You'd call the cops on anyone you saw in the park, even if they didn't have tattoos and piercings and shit?\"\n\n\"Yes,\" I said. \"I would. I have.\"\n\nWhen he started laughing again, I couldn't help but join in.\n\n\"I wear what feels good,\" he finally answered. \"I dunno. I don't think anyone's ever straight-up asked me that before.\"\n\n\"Sorry,\" I said.\n\n\"Don't be.\" He dug into his pocket and pulled out a lighter. \"Anyway, I rented one of the townhouses with a couple other guys after I graduated and started apprenticing as a mechanic with Bill L'Arbour at his shop and life's been pretty good since then, so I don't have much to complain about.\" He put the joint between his lips and glanced at me. \"'Least not until I get married and try to live out the suburban dream, since that's apparently where it all goes to shit.\"\n\n\"Apparently,\" I agreed, watching as he lit up the joint.\n\nHe puffed on it, inhaling and holding his breath before letting out a plume of smoke, then held the joint out to me.\n\n\"Have you actually smoked weed before or were you just saying that?\" he asked skeptically.\n\nI had. I'd even smoked weed with Scott. But that was... well, Ramona was nineteen, and I'd had her when I was twenty-two, and I was pretty sure the last time Scott and I had smoked together was before our wedding so that would have been two years before that.\n\nSo of course, my bright idea to not respond and simply take a hit so I could exhale a bigger cloud than he had and prove I was at least a little bit cool completely backfired, and Justin burst out laughing as I coughed hard.\n\n\"Take it easy, Liz,\" he chuckled.\n\n\"I swear I have,\" I choked, trying to clear my throat. \"It's just been longer than I remembered, apparently.\"\n\n\"Apparently,\" he said. \"How long?\"\n\n\"Back in the day,\" I said, laughing softly as I handed the joint back to him. \"When I used to work at the restaurant. Before I got married.\"\n\nHe nodded as he took another drag. \"So what happened?\"\n\n\"What do you mean?\"\n\n\"Your husband cheated on you a decade ago. That's not why you chose tonight of all nights to go rogue and break the town bylaws to smoke weed with some punk.\"\n\nHe offered the joint to me. I stared at it, blinking at the dot of red heat on the end of it before shaking my head.\n\n\"Liz?\" Justin asked again a few moments later. \"What happened?\"\n\n**\n\nI woke up with a start, my heart racing and my eyes blind.\n\nBlinking, I tried to figure out why I couldn't make out even the slightest detail of my bedroom, only to be completely disoriented as darkness was replaced by light. Just as my eyes adjusted, it faded, and then the house shook as thunder boomed right above me.\n\nAnother storm.\n\nReality faded in slowly; I reached for my nightstand only to bash my hand against something hard and much closer than my nightstand usually was. It took a moment of feeling around for me to realize that it wasn't my nightstand, it was the coffee table, and I wasn't in my bedroom, I had fallen asleep on the living room couch.\n\nLightning flashed again and I rubbed my eyes.\n\n\"Ramona?\" I called.\n\nThere was no answer, but that wasn't unusual. I found my phone and flicked the flashlight on, intending to go up to her bedroom to make sure she was all right, but stopped dead as lightning flashed again and I glanced out the front window.\n\nHer car wasn't in the driveway.\n\n\"Ramona?\" I said again, as if repeating it louder would make her manifest when I was entirely certain she wasn't in the house.\n\nStill, I ran upstairs to check and then down to the basement. She wasn't there and, after taking a quick glance into the garage to see if his truck was there, neither was Scott. They had both left the house hours earlier; I wasn't quite sure when I'd fallen asleep, but it seemed unreasonable that neither of them had returned. Panicked, I called Ramona's phone, only for it to go to voicemail immediately.\n\n\"Ra-Ra, it's Mom,\" I said unnecessarily. \"I'm just checking in, your car's not in the driveway and it's about to storm again. Please let me know where you are. I love you.\"\n\nI hung up and immediately dialled Scott's number. It rang but went to voicemail as well.\n\nI didn't leave him a message, instead bolting to the door and grabbing my keys and purse. If Ramona wasn't going to answer, I needed to go find her before the rain started. It wasn't until I was wrenching the door to the garage open and mashing the opener to the left of the door that I realized the flaw in my plan; namely, the opener needed electricity to work and Scott had taken the generator with him.\n\nFor half a second, I considered ramming my car through the overhead door, but even I thought that seemed excessive.\n\nInstead, I returned to the house and tried calling Ramona again, and then again, and then finally called Scott again. When he still didn't answer, I hung up, bit my lip, and then brought up the town Facebook page. As much as I hated bringing attention to anything going wrong in my own life, if someone had seen Ramona around town, it would at least give me some peace.\n\nBut before I could even type that post, Scott's name seemed to jump out at me from my notifications. Frowning, I clicked on the highlight notification and it brought me to his latest comment from just over an hour earlier.\n\nEnough gas for one more stop! he had written. Who still needs help?\n\nI know I already had my turn, so if someone else needs help, don't worry about it, Mallory St. John had replied. But if you're available, I could totally use a warm bottle to get the baby to sleep, @Scott.\n\nGoing once... he replied seconds later.\n\nGoing twice...\n\nAlright everyone, going to @Mallory's for my last stop. Have a good night, all!\n\nAMAZING!!!! THANK YOU SO MUCH!!!! she wrote.\n\nI pressed my lips together.\n\nOver an hour earlier.\n\nHe seemed to have helped half the town since he'd left, but his last stop at Mallory's had taken at least an hour?\n\nHeart racing, I called Scott's phone again.\n\nAnd again.\n\nAnd again.\n\n**\n\n\"Why?\" I asked when he came down to the kitchen after Monica left.\n\n\"It was a mistake,\" he said.\n\n\"Why?\"\n\n\"It won't happen again.\"\n\n\"Why?\"\n\n\"I didn't mean to--\"\n\n\"Tell me why.\" My voice cracked.\n\nHe sighed. \"Why what?\"\n\n\"Why what?\" I repeated. \"Why are you fucking someone else? Why her? Why on our bed? Why... just fucking why, Scott!\"\n\nAgain and again, I asked him why. The truth was, it didn't matter.\n\nI wish I could say I was one of those resolute women who was set on leaving her husband the moment she found out he was sticking his dick in the one place he said he wouldn't: namely, another woman.\n\nI wish I could say I'd known my marriage was over the moment I'd walked in the door and heard Monica Halliday, our neighbour from across the street, the woman whose son had a joint first birthday party with my daughter, the woman I'd joked with a thousand times about how perfect it would be if our children grew up together and fell in love and got married one day, screaming his name as he drove himself inside her again and again.\n\nAt the very, very least, I wish I could say that Scott's pleading and begging and promises of the moon and the stars and everything in between had swayed me. I wish I could say he wore me down, that he talked me into staying, that I had been all set to tell him to get out of my house with nothing but a suitcase and his truck, that he could see our daughter on weekends and weekends only, that it was over until he convinced me to give him a second chance.\n\nBut that wasn't the truth. The truth was that I knew I wasn't leaving him the second I walked in the door.\n\nI don't know if Scott knew it. I don't think he did. He still begged and pleaded and cried; I pretended like I had to think about it, like I didn't already know in a day or two I was going to be sleeping beside him like I always did. There was never a moment that I truly intended to leave him.\n\nDivorce meant failure. Divorce meant all those people had been right; all the things they'd said about me being too young and flighty and immature to get married were true. It meant rumours and gossip around town, it meant losing everything I'd worked for, it meant starting over from scratch with nothing more than a high school diploma and a single job on my resume.\n\nMost of all, it meant losing the man I loved.\n\nBecause at the end of it all, that was it. I loved him.\n\nI thought I loved him.\n\nI blamed myself for what he did; I blamed my lack of attention to him; I blamed my inability to balance being a wife and a mother and a person dedicated to being involved in her community. I looked in the mirror and blamed the woman there for her hips being wider than they used to be, for her stomach being softer, for the bags under her eyes and the fact that she didn't do her makeup as often anymore.\n\nThrough my tears, I asked him if those were the reasons why. Through his tears, he swore up and down that they weren't.\n\n\"Why didn't you just ask me for a divorce?\" I whispered. \"Why did you have to cheat?\"\n\n\"Because I don't want a divorce.\"\n\nHe was sitting across the table from me, his head in his hands. When I looked up, his eyes followed, rimmed with red and full of shame and guilt.\n\n\"You don't want a divorce,\" I repeated. \"You want to fuck Monica Halliday but you don't want a divorce.\"\n\n\"I never have,\" he said. \"I thought things could change or... I've never stopped loving you. I swear to God, I've loved you every single moment since I've met you. I fucked up. I did something I can't take back. I hurt you. And I'm sorry. I'm so fucking sorry for it all. But I mean it, Liz. I fucking love you. I know I don't deserve a second chance but if--\"\n\nHis voice broke and I waited as he collected himself.\n\n\"If what?\" I pressed.\n\nHe opened his mouth, then closed it and shook his head. After taking a deep breath, he cleared his throat and looked up at me with eyes that were earnest and passionate and fiercely sincere.\n\n\"I will do anything to stay with you,\" he said. \"Whatever you... if you told me to go running naked down Main Street screaming that I'm a disgusting cheater who ruined his marriage to the best thing that ever happened to him, I would. Whatever you want, it's yours. Whatever you need me to do, I'll do it. Please, Liz.\"",
        "His voice broke again and my chin trembled.\n\n\"I need to think about it,\" I lied.\n\nHe agreed, because of course he did.\n\nI watched as he packed a small suitcase and booked a room at a motel in the next closest town. Already he was trying to be on his best behaviour; if he stayed in Minwack Falls, people would talk, and he knew how much I would hate having that kind of gossip surrounding us.\n\nWhen he went to leave, I reached for him without thinking and he reacted just as instinctively. His hand was almost caressing my cheek the way it always did when he kissed me goodbye before I realized what I was doing. I stiffened and he stopped, guilt flashing across his face as his hand dropped to his side.\n\n\"Talk to you tomorrow?\" he asked quietly.\n\nI nodded, unable to look at him. \"Sure.\"\n\n\"I love you,\" he said. \"Whatever you think, I swear I love you.\"\n\nFor a long time after he left, I sat at the kitchen table. My hands were folded in front of me as I tried to convince myself to leave him. And I tried, I really tried. I conjured up an image of Monica with her eyes wide and her tits thrust forward, shock across her face with my husband inside her. I forced myself to remember it, forced myself to picture that moment and relive it again and again until I had buried my head in my hands, my palms digging into my eyes as I tried to convince myself it was over.\n\nThat was how I was sitting when the door opened and Ramona walked in.\n\n\"Mom!\" she called, and I jumped violently and straightened up.\n\n\"Hey, Ra-Ra,\" I said, my voice high-pitched. \"How was school?\"\n\n\"Good!\" She burst into the kitchen and hugged me, her thin arms wrapped tighter than usual as I was reminded of what had brought me home early in the first place. \"I missed you.\"\n\nMy heart cracked.\n\n\"I missed you too,\" I whispered.\n\nShe let go of me and excitedly tore her backpack open, thrusting her school agenda at me as she pulled out a handful of track-and-field ribbons. Her eyes sparkled as she relived every moment I'd missed in a way that made me feel like I hadn't missed a single thing. When she was done, she thundered up the stairs to her bedroom to get changed and I distracted myself by opening her agenda. The teacher always sent home newsletters and other important things that Ramona would tuck into the little coil book for me.\n\nThat day, there was a newsletter, a form asking for fundraising volunteers, and a sealed green envelope that meant yet another birthday party invitation. The school's policy was to send invitations home discreetly so the kids who weren't invited didn't feel bad when some kids got invitations, so they always came in unmarked envelopes that the students were told should only be opened by their parents.\n\nI'd never been so thankful for that rule as I opened it.\n\nGAME ON!\n\nRamona Roth, you've been TARGETED for a LASER TAG MATCH to celebrate Ashton Halliday's 9TH BIRTHDAY!\n\nI stared at the words, bile rising in my throat. Before Ramona could return, I tore the invitation in half, then in half again, then a third time before hiding the pieces at the bottom of my purse.\n\nThat night, I told her Daddy had to go on a business trip and wouldn't be home. I tucked her in and brushed chestnut brown hair off her forehead so I could kiss it as she slept. I left her bedroom door open a crack the way she liked it, a sliver of warm light cutting through her room so her dreams were bright and cheerful.\n\nI left the door to the guest room open the same way, open just enough that the light from the hall kept too much of the darkness from overtaking me. I slept in that unfamiliar bed and looked out that unfamiliar window and after sending Ramona to school the next morning, I called Scott.\n\n\"Liz,\" he answered, breathless hope hidden in his voice.\n\n\"If I take you back, I need three things,\" I said.\n\n\"Name them. Whatever it is, I--\"\n\n\"First, no more cheating,\" I said, speaking over him.\n\n\"I swear.\"\n\n\"We go to counselling.\"\n\n\"Absolutely,\" he agreed.\n\nI bit my lip. \"And I want another baby.\"\n\nThere was an almost-imperceptible moment of silence.\n\n\"Anything,\" he said. \"I'll do anything, Liz.\"\n\n**\n\nA gale of wind gusted through the garage door as I wrenched it open, nearly knocking me off my feet.\n\nIn theory, opening the overhead door should have been easy. It had taken less than a minute of Googling to find instructions on disengaging the opener so I could use the bypass handle to manually lift the door.\n\nIn practice, however, it was a pain in the ass.\n\nI struggled with it for longer than I'd like to admit, but neither Scott nor Ramona had so much as texted me back. There was no other option; no one had responded to my overly formal Facebook post that just barely veiled how panicked I was that my daughter wasn't home, and I wasn't about to publicly admit that Scott still wasn't home after his last stop at Mallory's. Still, when I finally got the damn thing open, I was so caught off-guard by the sudden spray of rain that blew into the garage that I almost fell.\n\nI grabbed the side of my car, managing to steady myself as my heart sent adrenaline shooting through my body. The rain was a cool mist on my flushed face and I could feel my hair dancing around my head, tossed and tangled by twirling, howling wind.\n\nIt was a good thing I took that moment to catch my breath and look out at the blackness that made up the world around me, since as it turned out, Ramona hadn't gone far.\n\nHer parking spot was the one directly in front of the living room window so that Scott and I could park in the garage. For reasons that became incredibly clear as a lingering flash of lightning filled the sky, she had pulled her car off the driveway, but parked on the street just past the end of our property.\n\nThe rain was heavy on the roof of the garage and heavier still as it splashed on the concrete. The only thing I heard above the pounding rain was the wind, and the only thing I heard above that was the slamming of Ramona's car door.\n\nI caught flashes of moments I wasn't supposed to see: the sight of my blue-haired daughter popping out of the back of her car, helped by a tall, good-looking boy with familiar eyes and a bright smile.\n\nI couldn't hear the laughter pouring from her mouth, but I could see her head thrown back as she giggled, rain streaking down her face as Ashton Halliday pulled her close and kissed her.\n\nThe lightning faded and the world went black, and the next time it brightened, both of them were clutching their clothes to their chests as they ran completely nude across the street towards the Halliday's house.\n\nThat flash of lightning was thankfully much, much shorter, meaning that as I completely froze with shock, I didn't actually have to see much more than a quick glimpse of my naked daughter and her... what? Her boyfriend? Were they... she'd never mentioned him. As far as I knew, they weren't even friends anymore and hadn't been for years. Part of me felt guilty for that fact; it wasn't Ashton's fault his mom was a homewrecker, but... well.\n\nIt was hard to be around him when he had the same eyes that were burned into my mind after that day.\n\nI was so caught up in my shock about seeing her with Ashton that I barely had time to have an existential crisis about the fact that my daughter was old enough to be having sex. I had just enough time to panic about the fact that she was doing it in her car right on the street in front of our house and hope to God that she had used protection or birth control or something before Scott almost hit me with his truck.\n\nI had plenty of warning, of course. His headlights were on and as the only source of light besides the flashes in the sky, he wasn't exactly inconspicuous.\n\nI, however, was standing in a dark garage with the overhead door open, and he apparently didn't wonder even a little bit why the door was open before pulling forward into his usual spot. If I hadn't jumped out of the way and slammed myself against my car door, he would have probably crushed my foot.\n\n\"Liz?\" he asked as he jumped out of the truck. \"What the fuck are you doing?\"\n\n\"I... I was going to look for Ramona,\" I said.\n\nHe raised an eyebrow. \"Her car is right there.\"\n\n\"I know that now,\" I said, my voice cracking. \"She went out to charge her GameBoy and she...\"\n\nThe rest of the words got stuck in my throat.\n\n\"She what?\" he asked.\n\n\"I know where she is,\" I managed to say. \"So it's fine.\"\n\n\"So you freaked out about where our adult daughter was. If you would've just waited--\"\n\n\"Waited?\" I repeated. \"I tried calling you multiple times and--\"\n\n\"I was out helping half the town warm up their bottles and run their sump pumps and open their fucking garage doors,\" he snapped. \"Like you wanted me to, remember?\"\n\n\"I asked you to help Mallory,\" I said. \"You chose to stay out and help everyone else.\"\n\nHe sighed, throwing his hands up in exasperation. \"I can't win with you, can I? You want me to go out and help people. Then when I do, it takes too long and--\n\n\"Don't put words in my mouth,\" I said. \"You didn't answer your phone, so I did the next best thing I could. I never said--\"\n\n\"You were thinking it and you know it,\" he said.\n\n\"I was worried!\" I snapped. \"You and Ramona were both out and it was storming and neither of you even bothered answering your phones. All I knew was you were going to make one more stop at Mallory St. John's and that it apparently takes three times as long as any of your other stops to heat a bottle for her baby to go to bed.\"\n\nHis eyes glimmered in the dim light from the lantern and when he spoke, his voice was low and wary. \"What are you trying to say, Liz?\"\n\nMy hands were shaking as I curled them into fists. \"Nothing.\"\n\n\"Doesn't sound like nothing.\"\n\n\"I don't want to fight with you.\"\n\nHe stared at me steadily. \"Little late for that, isn't it?\"\n\nA muscle in my jaw twitched. \"What do you want me to say?\"\n\n\"What you're thinking,\" he demanded. \"Ask me the question I know you're dying to ask. Just fucking say it, Liz.\"\n\nMy lips were trembling so badly I almost couldn't spit the words out.\n\n\"Why were you with Mallory so long, Scott?\"\n\nThe switch from calm to explosive was almost instant.\n\n\"For fuck's sake!\" He slammed a hand against his truck and I stumbled backwards. \"How many times are you going to throw this in my face? It's been ten fucking years, Liz. Ten years and I haven't so much as put a goddamn toe out of line, and yet any time I don't pick up the phone as soon as you call or get stuck in traffic or spend a little too long taking a goddamn shit, you lose your mind.\"\n\n\"What else do you expect?\" The dim light swam in my eyes as they began to water. \"You cheated on me, Scott. It's hard not to wonder if you'd do it again.\"\n\n\"I fucking told you I wouldn't. I fucking said--\"\n\nWe had never fought about it like that before.\n\nWe had cried over his affair, multiple times. We had gone to counselling and reopened those wounds, again and again, ensuring that the scars would always be there even if we thought everything had been healed. We tried to come together again; for years, we worked at it, trying to get past what he'd done, pretending like we were stronger than ever even though both of us were shattering inside.\n\nBut we'd never fought about it like that.\n\nHe hurled words at me. Horrible things, hateful things, things that I couldn't bear to remember, let alone repeat. Words I'd never dreamed I'd hear anyone say, much less my husband. Things that confirmed every fear I'd ever had: that he'd stopped finding me attractive, that he resented me, that I'd made him feel lonely so he'd sought comfort with someone who actually wanted him. That it was my fault, that I'd been neurotic and stringent and impossible to live with. He picked at all those scars, gesturing at the pieces of me that I hated about myself.\n\n\"You should have ended it with me back then,\" he said at one point. \"I don't know why the fuck you didn't. Both of us knew it was fucking over.\"\n\n\"You begged me not to!\" I shouted back. \"You said you'd do anything!\"\n\n\"And I did everything I could!\" he snapped. \"I didn't so much as look at Monica fucking Halliday again, I went with you to the fucking counsellor and did all the goddamn role reversals and talking stick bullshit and that didn't fix anything.\"\n\nThose words made me recoil. \"It fixed a lot.\"\n\n\"It didn't do shit,\" he said bluntly. \"You know I could've fucked Mallory tonight, right? I didn't. I didn't so much as fucking touch her even though she wanted me.\"\n\n\"Would you like a ribbon?\" I asked sarcastically. \"Congratulations, you upheld your marriage vows. Shall I get us a bottle of champagne, too?\"\n\n\"You know, I thought I wanted things to work out, but I didn't think I'd be signing up for ten years of you being suspicious and not trusting me to wipe my own ass. I should have fucking known as soon as you gave me your conditions. What kind of person says she wants a friggin' baby when our marriage is on the rocks?\"\n\n\"You don't get to decide how long it takes to trust someone after they do that to you,\" I choked, my anger and my tears spilling over at the same time. \"I thought you loved me and that you'd understand it would take some fucking time to get over seeing you fuck another woman and you promised me we'd have another baby and--\"\n\n\"I had a vasectomy.\"\n\nEverything stopped.\n\nThe wind stopped.\n\nThe rain stopped.\n\nMy heart stopped, at least for a moment.\n\nThe words had fallen out of his mouth. Whether it was unintentional or he had pushed them, I didn't know, and it didn't matter. He stood in front of me, not surprised or regretful or ashamed but stubborn, heartbreakingly stubborn as he folded his arms across his chest.\n\nI don't know how he expected me to react. To be honest, I don't think he knew either. For a long, long moment, the world turned around us and I stared at my husband as I tried to process what he just said.\n\n\"When?\" I finally asked.\n\n\"What?\" he replied.\n\nIt took another long moment for me to get the words out. \"Before or after you promised me we'd have another baby?\"\n\nThe stubbornness on his face faded then; finally, something resembling shame flashed across it. Whether it was shame for his actions or for the fact that he'd told me something he probably intended to take to his grave, I didn't know.\n\n\"Why?\" he asked.\n\n\"Excuse me?\"\n\n\"Why do you want to know?\"\n\nMy mouth dropped open. \"Because... because I deserve to know.\"\n\nScott looked pained. \"It doesn't matter, Liz.\"\n\n\"Fuck you it doesn't matter!\" I shrieked, so sudden and so loud that he winced and stumbled backwards. \"Fuck you! It absolutely fucking matters. Did you start lying to me before you cheated and make that promise knowing full-well I wouldn't get pregnant, or did you get it after you promised me another baby so you didn't have to go through with it?\"\n\n\"Having another kid was a terrible idea but I didn't want to lose--\"\n\n\"Before or after, Scott?\"\n\nHe leaned against his truck door and looked up at the ceiling of the garage.\n\n\"After.\"\n\n**\n\nThe joint was long gone, the flashlight from the phone was off, and until he spoke, only the subtle sound of Justin's breathing and the surreal sensation of his presence in the darkness indicated that he was still there.\n\n\"This may be the understatement of the year,\" he finally said. \"But your husband's a dick.\"\n\nI half-laughed. \"Ex-husband.\"\n\nHe was silent, then a hesitant hand found mine in the dark. His sweaty palm tenderly embraced my fingers as his thumb swiped gently back and forth along my knuckles. Aside from the movement of his hand and the breeze rustling the willows around us, the world was still.\n\nHis touch was strangely nostalgic. There was a haunting familiarity to the way it made my heart flutter and my skin tingle, drumming up a vague memory of comfort and safety. At the same time, I felt like it should bother me, the way he was touching me. This was a man--a young man, a man just a bit older than my daughter--who I had only just met, whose name I had only just found out, who was now comforting me.\n\nI felt like I should think it wasn't quite right.\n\nBut I didn't.\n\n\"So you left?\" he asked gently.\n\nI stared at the space in front of me, my lips pressed together, almost blind in the darkness as a hot tear finally trickled down my cheek.\n\n\"No,\" I whispered.\n\nJustin's thumb stopped moving. \"You didn't, uh, kill him, did you?\"\n\nThere was a beat as the world turned and I processed what he'd asked, and then I nearly fell off the bench of the picnic table as I started howling with laughter.\n\n\"No,\" I giggled. \"I didn't... of course not.\"\n\n\"I mean, I just had to check,\" he said, laughing as he squeezed my hand. \"We've already wasted a ton of time smoking weed and chatting, so if we still have to go hide a body, we should really get on that.\"\n\n\"I didn't--Jesus, Justin, I'm not a murderer.\" I wiped my cheek with the hand he wasn't holding, then frowned. \"Wait, what do you mean, 'we'? You'd help me hide a body?\"\n\nI felt him shrug beside me. \"Not that I'm condoning killing people but, like... I dunno. I feel like you could use someone in your corner, you know?\"\n\nI opened my mouth, then closed it, then half-laughed again. \"That's... sweet of you.\"\n\n\"Don't get me wrong, I'm super glad you didn't kill anyone. I just...\" He paused, then sighed. \"What... what happened next?\"\n\nThat was the end of the laughter. I felt it fade from my body, tugged away by his words as the subtle judgement in his voice returned.\n\n\"He said he got a vasectomy because he didn't want a divorce but he thought I was crazy to want another kid as a condition for not leaving him,\" I said. \"Which... I mean, he's not wrong. I just...\"\n\nMy voice caught and Justin squeezed my hand. After a moment, I cleared my throat.\n\n\"I just... I didn't even know what to say. We tried, you know. After we... after. He must have gone right away because he... I wanted some time. But we tried. We tried for years. I saw doctors. And all that time he was lying.\" Another hot tear streaked down my cheek. \"He said he was going to leave and we could talk in the morning. I told him if he left, he could consider our marriage over. He said I needed time to calm down. I asked if he was just saying that so he had an excuse to go fuck Mallory St. John.\" My voice caught again and I coughed. \"I shouldn't have said that but I was so--\"\n\n\"--pissed, I get it,\" he finished. \"To be honest with you, Liz, I think you're allowed to be.\"\n\nI smiled sadly. \"Well, he stopped and looked at me. Then he said, 'You know what? Yeah, that's what I'm gonna do.' And then he got back into his truck and drove away.\"\n\nJustin's thumb wasn't moving across my knuckles anymore. There was a stiffness through his body, so tense that he was almost indiscernible from the wooden bench beneath us.\n\n\"So I just... watched,\" I continued softly. \"He drove off and I sat on the floor in the garage and just watched the storm. I didn't know what else to do. When the rain stopped I just... I needed to be somewhere else.\"\n\n\"So you came here,\" he finished.\n\nI nodded and for a while, neither of us spoke. I doubt Justin knew what to say and honestly, I couldn't blame him. He was... well. At his age, I was a new mom, but everyone had said I was too young and too immature and too irresponsible to be married and starting a family at that age. I should have been in school. I should have been starting a career. I should have slept around and met guys other than Scott and had fun and discovered who I was without him. Instead, at Ramona's first birthday party, I was twenty-three.\n\nJust twenty-three.",
        "Most certainly I wouldn't have known what to say if someone had told me all this when I was twenty-three. I was just past forty and still didn't know what to say, so there was no reason that Justin would, either.\n\nBut I was grateful for him all the same. I was grateful for the man holding my hand and listening as I explained how my life had tumbled around me. I was grateful that he had tattoos and piercings and a baggy hoodie that was completely unlike the put-together business attire my husband usually wore. I was grateful he was so different from anyone I knew, from the friends who I'd have to tell I was getting divorced, from the people who would whisper and gossip and stare.\n\nHe may not have known what to say, but I didn't need him to say anything. I just needed him to be.\n\nThe night passed around us as we sat. Eventually, Justin's thumb started moving across my knuckles again. When it did, it was like a switch, and I drew myself a little closer so I could lean my head against his shoulder. Nerves rolled in my stomach when he didn't move, and my mouth was open to apologize when I felt his cheek brush the top of my head as he relaxed against me.\n\nI probably shouldn't have enjoyed his closeness so much, given he was practically a stranger, but as I listened to the steady sound of his breath, I closed my eyes and pushed those worries away. For a while, all that mattered was his hand enveloping mine and the softness of his hoodie beneath my cheek and the darkness shielding us from the rest of the world.\n\n\"Being an adult sucks,\" Justin said suddenly.\n\n\"Yes,\" I replied, my eyes still closed.\n\n\"I never really understood why my dad left,\" he said, his voice so vulnerable that I opened my eyes again. \"Like, I just didn't get how someone could just stand up and walk away from it all, no looking back, no concern for all the damage they were doing. But now I'm sitting here ready to tell you to just fuckin' stand up and walk away from it all because damn, Liz.\" He squeezed my hand again. \"You know you can do that, right? You can just... walk away. If you want to, you can do that.\"\n\nA light breeze stirred, leaves rustling in the willows around us.\n\n\"I know,\" I said. \"But I have nothing to walk to.\"\n\n\"What do you mean?\"\n\nHe couldn't see my face, so the sad smile that crossed my lips wasn't for his benefit.\n\n\"This is my whole life,\" I said. \"I haven't had a job in almost twenty years. I never went to school. All I have to show for the past two decades is my daughter and a town that knows me as the person who'll call the cops on people being in the park after ten p.m.\"\n\n\"You have a hell of a lot more than that,\" he said. \"This town is what it is because of you.\"\n\n\"I don't think you can make a living by calling town hall three times a week to complain about the overgrown trees on Drum Farm Lane. Besides, I'm forty. I'm...\" My voice caught in my throat.\n\n\"You're what?\" he pressed.\n\n\"It's too late to start over.\"\n\nHe snorted, my head jostling slightly with the movement. \"It's not too late for shit. I mean, fuck. You want a career? There's a ton of shit you could do. Be a realtor. You could sell anyone on this town. Or go work at town hall and get the trees on Drum Farm Lane fixed yourself.\"\n\nMy laugh came out sounding watery. \"You make it sound so easy.\"\n\n\"It is easy. You're forty, Liz. You're not like, a year off of death's door or something.\"\n\n\"But it's a lot easier to say those things when you didn't waste twenty years of your life with someone,\" I said. \"Sure, I can start over. But that doesn't change--\"\n\nMy voice cracked again and I shook my head.\n\n\"Doesn't change what?\" he asked.\n\n\"If I could go back, I'd do it differently.\" A tear slipped out of my eye and down my cheek. \"I should have gone out and had fun and gone to school or something. Instead, I settled down with the first guy that came along thinking I was so ready to be in love and get married and have a family. I mean, I love my daughter more than anything. I just wish I'd lived a little more before I'd had her. Maybe I'd be a better mom.\"\n\n\"Don't say that,\" he said harshly. \"Every kid thinks their parents suck at some point. Doesn't mean you're a bad mom. You tried your best. Give yourself some fucking credit for that.\"\n\n\"But--\"\n\n\"No buts.\" The grip on my hand loosened, but before he let go, he turned so we were facing each other. The dim light from the sky reflected off his eyes just enough that I could see the passion in them. \"You tried. And yeah, it didn't work out, but you know what? Now it's time to try something else. It is not too late. My mom never said any inspirational shit growing up, but I had a teacher once who said the best time to plant a tree is ten years ago but the second best time to plant a tree is today. So plant your fuckin' tree, Liz.\"\n\nMy throat was tight with emotion, but not in a bad way.\n\n\"You're right,\" I said softly. \"I just--\"\n\nHe touched my knee, holding my gaze in the darkness. \"You're gonna be sad. That's okay. You're gonna wish things went differently. That's cool, too. Be sad. Be upset. You got every right to be. But don't let it stop you from getting back up and doing better. Look at you, you already started! Today it's being out in the park past ten p.m. Tomorrow, you... I dunno. Do something else crazy.\"\n\nI started giggling. \"Like what? Sit on top of the picnic table instead of on the bench?\"\n\n\"Hell yeah, Liz!\" He took my arm and wouldn't let go until we had moved to the top of the table, our feet resting on the wooden bench beneath us. \"There ya go. Carpe the fuck out of that diem.\"\n\nThere were still tears in my eyes and on my cheeks, but he drew a smile out of me like it was nothing. \"I'll be a rebel punk in no time.\"\n\n\"Totally.\" I could hear the grin in his voice. \"And then you know what you should do next?\"\n\n\"What?\"\n\n\"You should hook up with Mr. Halliday.\"\n\nMy mouth dropped open and I felt my eyes bulge. \"What?!\"\n\nJustin practically cackled. \"Yeah. You wanna live it up a little, so you should go crazy and have a wild rebound fling or something. And why not complete the set, you know? Go big and do something you'd never have even considered before, and on top of that, there's a little payback for Monica and a big 'fuck you' to your ex.\"\n\n\"Oh, yeah, right,\" I snorted. \"And a huge 'Oh my God, Mom, you've ruined my entire life' from my daughter.\"\n\n\"Oh, right,\" he said. \"I forgot she was fuc--\"\n\n\"And I'm still married,\" I interrupted hurriedly.\n\n\"You're separated. He's an ex.\"\n\nI smiled sadly. \"Even still, this is all assuming George Halliday would even want to hook up with me. Just because his wife is a cheater doesn't mean he is. And she...\"\n\n\"She what?\"\n\nThe memory of what Scott said to me in the garage would last forever. I knew that, as much as I didn't want to think of those words, that I'd never forget them. I hadn't repeated what he'd said to Justin, but that didn't change the fact that they were burned into my mind.\n\nAnd as much as part of me knew that it wasn't true, that what he'd said was out of anger and hate and hurt, it didn't change the fact that the man I'd spent most of my life with thought I was too unattractive to be faithful to and too crazy to have another baby with. The details didn't matter; the specifics of what he wasn't attracted to anymore didn't make any difference to the fact that Monica Halliday was beautiful and curvy and sensual, and I was... not.\n\n\"She's very pretty,\" I finally said to Justin. \"George would be crazy to want anyone else.\"\n\n\"You're very pretty, too.\"\n\nMy face burned and I laughed unintentionally, a high-pitched, disbelieving sound.\n\n\"I bet all the older women love you,\" I said, trying to control my voice.\n\n\"Not really,\" he said. \"I mean, Alice McGrady straight-up puts her purse under her shirt when I walk by her and that blonde lady with the three boys looks at me like I may actually be possessed by a demon.\"\n\n\"Well, I appreciate the flattery, then.\"\n\n\"It's not flattery,\" he said, almost offended. \"I don't bullshit people. You are pretty and everyone thinks so.\"\n\n\"They do not,\" I replied flatly.\n\n\"Uh, yeah, they do,\" he insisted. \"Look, I just said I don't bullshit people so I... I'm not gonna like... you know what people say. You're the by-the-book, follow-the-rules lady. But everyone also says you're a total--\"\n\nHe stopped suddenly and I was fairly certain his eyes had gone wide.\n\n\"Total what?\" I asked, confused.\n\nFor the first time, Justin sounded unsettled. \"Uh, just like... like really pretty.\"\n\nI raised an eyebrow, which apparently, he could see.\n\n\"Look, it just sounds a little, uh... vulgar, maybe.\"\n\n\"I thought you just said you don't bullshit people.\"\n\nHe sighed. \"You can't, like, guess?\"\n\n\"Hmm, let's see,\" I said sarcastically. \"I'm a total... buzzkill? I'm a total... narc? I'm a total bitch? I'm a total--\"\n\n\"MILF.\"\n\nMy mouth dropped open. It took a moment to process the word--well, acronym, really--and realize what he was saying. If he'd agreed with any of the examples I'd said, I wouldn't have been remotely surprised. I'd been called worse things to my face and far worse things by Scott that night. But a... that? Truthfully, I wasn't sure if I was flattered or offended.\n\nPart of me thought I should be offended, that I should protest that there was far more to me than my looks, that I wasn't some object to be labelled and defined based on my appearance.\n\nAnd part of me remembered that Scott had made me feel less than worthless because I didn't have the same body I did when I married him twenty years earlier.\n\nStill, I didn't quite know what to say.\n\n\"What?\" I whispered.\n\n\"You're a total MILF,\" Justin repeated. \"Trust me, there's a lot of... I mean, not to be like, tasteless, but people talk and... fuck, this is... look, the point is that you're hot and I'm not the only one who thinks so, okay?\"\n\nThere was a feeling in my chest that was familiar but faded, a sort of lightness that was reminiscent of something I used to feel, a reminder that was being prodded awake as I stared at the dim moonlight glinting off the hoop pierced through Justin's lip.\n\n\"You think so?\" I asked.\n\nHe apparently hadn't realized what he'd said.\n\n\"I... uh...\" he said. \"I mean, yeah, I... but I don't... I'm not gonna... ah, shit.\"\n\nI pressed my lips together, the lightness turning to a bubbling sort of delight. Through the darkness, I could just make out the expression on his face, though I filled in some of the details myself; namely, the pinkish tinge I imagined was on his cheeks. He looked equal parts nervous and embarrassed, though there was a hint of wariness as he shifted slightly away. I remembered his insistence and concern when I'd first stumbled into the picnic area that he wasn't going to do anything, that I was safe, that he wasn't going to hurt me.\n\nIt tore at my heart that he was so concerned. And it made me certain that I was safe.\n\n\"Maybe you have a point,\" I said quietly.\n\n\"I... uh, yeah.\" He cleared his throat. \"What, uh... what point is that?\"\n\nI smirked. \"Maybe I need to have... what was it? Wild rebound sex?\"\n\n\"I think I said 'fling,' actually,\" he said. \"But that's mostly what I meant.\"\n\n\"Right. I should do something totally crazy that I would've never done before.\"\n\n\"Exactly.\"\n\n\"Something I never would have considered. So I can live it up a little.\"\n\n\"Totally.\"\n\n\"Like having sex in public. In a park, for example.\"\n\nHe hesitated before speaking, his voice taking on a strained quality. \"Yeah, that would be a great example.\"\n\n\"And you think it should be with George Halliday?\"\n\n\"Well, it doesn't have to be George Halliday. It could be...\" He paused and I heard him swallow. \"...you know. Anyone.\"\n\n\"Anyone?\"\n\n\"Yeah, it...\" He stopped again, then let out a puff of breath. \"Okay, fuck it. I gotta ask. Are we playing a game here or are you just... like, are you implying we can hook up because I don't want to start flirting with you if that's gonna make you uncomfortable but like also, if you wanna have a rebound fuck on this picnic table, I am down for that one-hundred percent, but I don't want you to feel like--\"\n\nHe stopped speaking very suddenly, likely because I leaned forward, grabbed the front of his hoodie, and kissed him.\n\nI didn't put much thought into it. I couldn't put much thought into it. Mostly, I didn't want to put much thought into it. I wanted to kiss him. I wanted to be with someone who thought I was... whatever. Pretty. Hot. It didn't matter. I wanted the echo of the things Scott had said to me to go quiet, to become just a memory instead of an open wound.\n\nIt might have been sudden, and I probably should have thought it through a little more, considering Justin was closer in age to my daughter than he was to me and I'd only just met him and there was the whole thing with my entire life crashing down around me just a few hours earlier, but I didn't.\n\nI wanted to live a little, and Justin wanted to make that happen.\n\nThere wasn't even a second of uncertainty before he was kissing me eagerly. I couldn't hold back a smile as his mouth captured mine and his hand moved to the side of my face. He brushed my hair back, then cupped my cheek.\n\nIt was sweet, and it was tender, and I loosened my grip on his hoodie so I could pull myself closer to him. He shifted, twisting on the table to close even more of the gap between us and sliding his other arm around my waist so he could hold me as we kissed. His hand left my cheek, light fingers trailing down my jaw to my neck and making me shiver as they traced a careful pattern along my skin.\n\n\"You okay?\" he mumbled against my mouth.\n\n\"Mm-hmm.\"\n\nHe lingered against my mouth, his thumb following the path his fingers had just taken. \"You can tell me to stop if you're not.\"\n\n\"I'm okay.\" My lips brushed against his lip piercing as I spoke. \"Are you?\"\n\n\"Oh hell yes,\" he said, and I was laughing when he deepened the kiss again.\n\nEverything about him was so different. Certainly, the hoop in his lip made a difference, though it wasn't nearly as prominent as I'd expected. I could feel it, but that wasn't what made his kisses stand out. It was that and more; it was the softness of his lips and the shape of his mouth and the feel of his breath against mine. These were not lips I knew; these were not the same lips I'd spent twenty years kissing.\n\nHe didn't know what I liked; he didn't know that when he touched my neck like he had, it would send electricity shooting through me. He didn't know that when he slipped his tongue into my mouth, I would squirm just slightly because my panties were already starting to get wet. And he had no idea that when his hand tentatively moved from my waist to my ribs and I opened my eyes to see his pleading silently, I would move my hand on top of his so I could guide it up to my breast.\n\nHe discovered those things, his hands and his mouth exploring me and finding all those secret places that made me shift and sigh and shiver, and it was amazing to be part of that discovery. I felt the slightest vibration of a moan as his hand cupped my breast through my top, just barely squeezing at first, his confidence growing as I quietly urged him on.\n\nAs he explored, I explored, revelling in the unfamiliarity of his mouth. Delight washed over me as I grazed my teeth against his lip and he returned the action; arousal flooded me as I experimentally sucked on his lip ring and he groaned against my mouth. I was fairly certain that meant he liked it, but to be sure, I did it again.\n\n\"Oh fuck,\" he hissed, and his hand tightened on my breast.\n\nYes, he certainly seemed to like it.\n\nI played with his lip ring a bit more, flicking my tongue against it and letting excitement overtake me as his breathing quickened and he made soft, reserved noises. He kneaded my breast, his grip tightening and loosening and tightening again before he let go and cupped my cheek again.\n\n\"Promise you're sure about this?\" he murmured against my mouth.\n\n\"Very sure. Are you not?\"\n\nA puff of breath brushed my lips as he laughed. \"Oh, I'm fuckin' sure. This is like a freakin' wet dream. I just don't want you to think I'm like... you know.\"\n\n\"You're helping me live a little,\" I said, kissing him again. \"You know. Rebel. Act out. Stick it to the man, literally.\"\n\nThe feeling of him smiling against my mouth was addictive. I loved the way his laughter was muffled by my lips, the way he kept trying to kiss me even though he couldn't stop chuckling. It was fun, and it was exciting, and it made me pull myself even closer to him so I could feel more of his body against me.\n\nHis laughter faded as I did, though not in a bad way; it trailed into a little gasp that softened as I kissed him harder. The arm that was still around my waist held me tight and his hand left my cheek again. This time, though, it didn't stop on my breast or my ribs or my waist. This time, it traced a pattern down to the hem of my shirt. He pinched the fabric between his fingers, fidgeting with it hesitantly before his hand slipped beneath it.\n\n\"Yes,\" I whispered breathlessly, and felt his smile return.\n\nWhat his touch lacked in confidence, it made up for in eagerness. There was a certain clumsiness to the way his hand travelled around my back, something that wasn't quite inexperience but wasn't quite practiced. I relished it, leaned into it, adored the way he fumbled with the clasp of my bra. It was entirely new to me, a sensation I'd missed out on by getting married when I did, and I loved it.\n\nI loved it.\n\nHe let out a victorious hiss as my bra came loose, wasting no time before bringing his hand back around me so he could slip it under the cups. I gasped as he squeezed my breast again, his palm pressing my quickly hardening nipple. He shifted his grip and I whimpered softly as the hard little bud dragged along his hand, then cried out in electrified pleasure as he pinched it tightly. Justin smiled against my lips and repeated the action, then swept his thumb across my nipple.\n\nAs much as I was enjoying him playing with my breast, I wanted more, and the way we were sitting wasn't allowing for that. When I couldn't stand it any longer, I brought my hand to his wrist.\n\n\"Sit back,\" I whispered as I stopped him.\n\n\"I... am?\" he said.\n\nI giggled. \"More. Move back on the table and put your feet on the bench.\"\n\nHe did as directed, though he seemed confused until I crawled forward and onto his lap, steadying my legs on either side of his thighs. His breath caught in his throat, the reason clear as I lowered myself onto his lap and felt the prominent bulge in his jeans pressed against me.\n\n\"Is this okay?\" I asked lightly.\n\nHe didn't respond, just tugged me closer and kissed me again before burying his face in my chest. My breasts jostled against his face as I laughed, held in place by the strong arms around me as he nuzzled against me.\n\nThat only lasted for a moment; almost as soon as he pressed his face against me, he loosened his arms so he could lift the bottom of my shirt up. I brought it over my head and barely had time to register the cool humidity of the night air before he was tugging my bra off and pushing his face back into my breasts. I almost laughed at his eagerness, ready to tease him playfully for the way he was completely entranced by them, but he wasted no time before taking one of my nipples into his mouth.\n\nThere wasn't much in the way of thinking after that.\n\nHe sucked on my nipple desperately before teasing it with the metal stud in his tongue. The hard ball flicked against me and I cried out, shocked by the intense wave of arousal that coursed through my body. When he did it again, I squirmed in his lap, unable to stop myself from grinding against the hardness between my legs, and he groaned in response. A large hand came up to my ribs, holding me tightly as he feasted on my breasts, licking and sucking and driving me absolutely crazy with that damn addicting piercing in his mouth.",
        "After paying as much attention to that nipple as I could stand, Justin replaced his mouth with one hand and switched to the other side. He took a moment to kiss my cleavage and nip lightly at the side of my breast before taking as much of it into his mouth as he could. He lavished attention on me, gripping one breast as he explored the other thoroughly.\n\nThere was no doubt in my mind that he knew it felt amazing; I couldn't stop myself from moaning and rolling my hips, using his erection to relieve some of the maddening desire between my legs. He groaned, the noise vibrating against my skin and making his mouth all the more enticing.\n\nIf I'd left it up to him, he probably would have stayed there forever, my nipple in his mouth and my breasts in his hands as the darkness gave way to sunlight and the solitude of the park disappeared under the feet of joggers along the paths and families at the playground. It likely wouldn't have mattered to Justin one bit that people could see him, the way he was so completely dedicated to worshiping my breasts with his tongue and fingers and lips. And truthfully, it was almost impossible for me to stop him; my body was demanding attention elsewhere, but he felt so good that I almost accepted my inevitable future in a constant state of arousal as he clung to my chest.\n\nHowever, that place between my legs was very demanding.\n\nI ran my hand through his hair, then gently directed his face upwards. My nipple left his mouth reluctantly, but there was no lack of enthusiasm when his lips met mine again. I cupped his face, a hand on either side of his chin, kissing him hard before moving off his lap.\n\n\"What're you doing?\" he asked as I knelt on the bench in front of him.\n\n\"Taking your pants off,\" I replied.\n\n\"Oh,\" he said. \"Sweet.\"\n\nI laughed as I felt my way up his legs, relying mostly on touch rather than sight to find the waistband of his jeans. He didn't seem to mind, especially as my hands lingered over the bulge in his pants. I licked my lips and reached for the button of his jeans, undoing it easily before carefully unzipping his fly.\n\nJustin's eyes were on me, I was sure of it, but I didn't look up as I guided his jeans and boxers down, standing only briefly so I could pull them off his legs after he kicked one of his shoes off. As soon as they were, I returned to the bench, kneeling on the hard wood as I nestled between his legs. His breath seemed loud in the quiet park, underscored only by wind in the trees and the occasional croak of a frog, and even that seemed quiet compared to the sound he made when I trailed my fingers along his inner thigh and wrapped them around his cock.\n\nI licked my lips again, finally glancing up at him. I could just barely make out his eyes, which were wide and completely glued to me kneeling in front of him. I held his gaze, I stroked his cock once, twice, and a third time before finally looking away.\n\nHis cock was lovely, thick and hard and smooth in my hand. Already, it was leaking precum, and I took my time spreading it along his shaft as I explored every inch of him. Once I was done tracing every ridge and bump along his cock, I slowly leaned forward and pressed a kiss to the base of his shaft.\n\nHe inhaled sharply and his cock twitched in my hand; I smiled before licking the same spot, and then slightly lower, and then lower again until I was sweeping my tongue along his balls. His cock twitched again, harder this time, and I was almost surprised when a gentle hand reached down and brushed my hair away from the side of my head.\n\nI stayed there a little longer before making my way back up his shaft, using the tip of my tongue to trace teasing patterns along his cock. He held my hair back lightly, not pulling, not directing or guiding or urging me on, simply keeping it out of my way as I licked his cock.\n\nOnce I reached the tip, I licked up the precum that had collected there. I took my time exploring, tasting and teasing and learning what he sounded like when he was beyond turned on and almost ready to beg for more. He didn't, though, and whether it was because he was too strong to beg or thought things were already too good to be true or simply understood that it had been over twenty years since I'd gotten to explore a new cock for the very first time, I didn't know. In any case, it didn't matter, because he let me twirl my tongue around him all I wanted, cleaning up every drop of precum that spilled out. By the time I was ready to take him in my mouth, Justin was panting, and he couldn't quite control the volume of his groan as I wrapped my lips around the head of his cock.\n\n\"Oh, fuck yes,\" he breathed.\n\nIt was hard to smile with a cock in my mouth, but I glanced up at him hoping he could see the laughter and appreciation in my eyes. Slowly, I took more and more of him into my mouth, and then down my throat, and I didn't stop looking at him until the tip of my nose was pressed into the curls above his cock.\n\n\"Oh, fuck yes,\" he repeated, the words drawn out in a low whine.\n\nThe sound of him did things to me. Once upon a time, I'd enjoyed going down on Scott, but it had been a long time since it was something other than a general obligation. He didn't groan in appreciation when I took his cock down my throat. He didn't hold my hair back or whisper about how good my mouth felt or sigh when I cupped his balls gently. Justin did, and every single one of those things spurred me on until his hand was tightening in my hair involuntarily.\n\nHe was close; I knew he was close. The way his stomach was moving, the way his body jerked every so often... I was going to make him come, and as much as I wanted to taste him, I wasn't ready for it to be over. I sat back, my hand still wrapped around his shaft as I took him out of my mouth, his cock glistening with saliva in the moonlight as I looked up at him.\n\n\"If I let you come now, will you be ready to go again soon?\" I asked.\n\n\"Yes,\" he said, more loudly than he probably intended to. \"Fuck, Liz, I swear to God I'll be ready to go as soon as I can, I promise, just please... please. Please?\n\nIt was almost adorable in a hilarious sort of way, and I smiled before returning his cock to my mouth.\n\nHe exhaled loudly, groaning as I resumed the steady pace of shoving his cock down my throat. It didn't take much longer; he was almost at the edge when I'd stopped and was back there in almost no time at all. I felt his thighs twitch again and his hand tighten and he managed to choke out a warning that he was going to come about two seconds before I felt the tell-tale pulses of his cock as he spilled into my mouth.\n\nHis breath came in short, high-pitched gasps as he shot spurt after spurt of cum into my mouth. It was almost surprising to me how much he came; I don't think I'd ever been with someone who came as much as Justin did. Not that it was a complaint; I swallowed it all eagerly, enjoying the taste of him and the feel of it in my mouth and the way his cock erupted for me.\n\nCompletely for me.\n\nWhen I felt his muscles unclench and his legs relax, I took him out of my mouth again, pressing a final kiss to the tip of his cock before I looked up. His head was tilted back at first, but he looked down at me and smiled that heavy, post-orgasmic smile as he let go of my hair and brushed it away from my face again.\n\n\"That was fucking amazing,\" he said. \"Holy shit.\"\n\n\"Glad you enjoyed,\" I replied.\n\nHe snorted, then surprised me by leaning forward and kissing me heatedly. Without another word, he helped me up from the wooden bench, bringing me on top of the table again and directing me onto my back.\n\nIt wasn't the most comfortable place to fool around like we were, but that was the last thing on my mind as he took his hoodie off before kissing me again. He didn't linger long on my lips; after a quick kiss, he moved to my chin, then to my neck, then to my collarbone. He did linger on my breasts, though I couldn't fault him for that, but it wasn't until I writhed beneath him that he stopped playing with my sensitive nipples and resumed his path of kisses on my stomach.\n\nI tensed when he did; MILF or not, my stomach wasn't... well. It wasn't flat or smooth or tight like it had been years ago. Scott probably thought it was one of the ugliest parts of me, and even though I hadn't told Justin that, he seemed to understand it from the way I stiffened beneath him.\n\n\"I'll tell you you're beautiful if you want,\" he murmured, kissing a spot a few inches above my belly button as he put a large hand on either side of my waist. \"Or pretty, or gorgeous, or whatever way you want me to describe you. But honestly, Liz, if you left it up to me, the only thing I'd be able to say is that you're hot--\" He paused to kiss my stomach. \"--as--\" Another pause, this one to nuzzle my belly button. \"--fuck.\"\n\nMy pussy was dripping. It had been the whole time, of course, but the way he'd spoken as he appreciated the parts of me I couldn't had flooded me with a whole new wave of arousal. He discovered that soon after as he unbuttoned my pants and tugged them down, then peeled my panties away from my mound to discover my completely soaked slit. I propped myself up so I could watch as he dipped his face into my pussy, kissing it lightly before sliding his tongue between my folds.\n\nI tried to stifle my moan but failed spectacularly. Instead, I lay back, pressing one hand to my mouth as I reached down to play with Justin's hair while he licked me. Like everything so far, he was eager about it, lapping enthusiastically at my juices before focusing his attention elsewhere. He took his time discovering the things I liked; he kissed each spot between my legs as he worked to discover where the most sensitive ones were. By the time he moved up to my clit, I was whimpering, doing everything I could not to pull his hair and shove his face against me, my hand physically shaking as I held back.\n\nAs soon as he twirled his tongue around my clit, making sure that his tongue stud brushed against it, I failed again.\n\nJustin didn't seem to mind; I was fairly certain he was smiling as I ground myself against his face, whining helplessly as my mind fell to my body and demanded more, and more, and more. One of his hands moved to my thigh, pushing my legs further apart as the other moved to my pussy. He didn't wait before shoving two fingers inside me and I had to bite down on the base of my thumb to keep my shrieks of pleasure from echoing off the trees and lake.\n\nIt was only a short while later that I felt him pull away. I loosened my grip, murmuring half an apology as he sat up.\n\n\"Don't apologize,\" he said, and even in the dim light, I could see him grin. \"I just promised I'd be ready to fuck you as soon as I could and thought I'd give you the option to switch, if you wanted to.\"\n\n\"Yes,\" I said immediately.\n\nHe didn't need to be told twice. As soon as I agreed, he got to his knees and pulled himself over me. The heat from his body was second only to the heat on his lips, which were still slick with the taste of me. He kissed me hard, skin pressed to skin before he slipped a hand between us and adjusted his cock so it lined up with my pussy.\n\n\"You're sure you want to do this?\" he asked again.\n\n\"Please,\" I whispered. \"Yes, please.\"\n\nHe groaned, and then the tip of his cock was pushing between my pussy lips. I bit my lip, unable to stop myself from raising my hips. The moment his cock breached my entrance, I whimpered, and Justin groaned as he sank into me.\n\n\"Oh, God,\" I whispered.\n\n\"Fuck,\" he grunted. \"You feel good. You feel so fucking good, Liz.\"\n\nHe started moving, slowly at first, but neither of us were truly in the mood for slow. It was just enough for my pussy to get used to being stretched around him, for me to relish the feeling of him filling me, and then he began to fuck me.\n\nI clung to him, my nails digging into his back as he plunged inside me again and again and again. His breath was hot against my skin and loud in my ear, panting as our bodies slapped together in the night air. I moaned and he moved his lips to my neck, sucking lightly on the tender skin just above my collarbone.\n\nMy body was aching with the need for release. I could barely breathe, could barely think, barely knew what my own name was as Justin moved inside me. That feeling of ascent started and I whimpered, knowing what was coming, knowing how intense it would be, knowing I would fail completely when I came and that half of Minwack Falls would probably hear me screaming out in the night as bliss erupted from me.\n\n\"Close,\" I said, and he moaned.\n\n\"Yes, Liz,\" he whispered. \"Come for me. You're so fuckin' sexy. Let me feel you come all over my cock.\"\n\nI didn't intend to think of Scott at that moment, but I did.\n\nIt wasn't Justin's fault. It wasn't anyone's fault. It was the fact that I couldn't remember Scott ever begging me to come and the sudden realization that I couldn't remember if he'd ever called me sexy. It was the fact that I had someone else's cock inside me, that it wasn't the man I'd called my husband, that even though he was leaving me, it was still so recent that no one in the world besides the man currently fucking me even knew about it.\n\nAnd I don't know what it said about me that I loved that. That after everything Scott had said and done, after fucking at least two other women that I knew of, after lying to me for years and breaking promises he'd never intended to keep, someone else wanted me. Someone else wanted me to come on his cock. Someone else thought I was sexy, and Scott didn't, and that was okay because Scott was going to realize how badly he fucked up and that I didn't need him anymore.\n\nIt might take time, but I was going to be okay.\n\nI was going to be better than okay.\n\nMy orgasm was more than an eruption. It was more than an explosion. It was like every emotion that had filled me that day, every bit of sadness and anger and pain imploded at once, then burst out of me in a shower of energy that filled the world with an agonizing white light.\n\nThat was all in my mind, of course; the world was as dark as it had been as light pulsed through my vision, and when it slowly faded from my eyes, I was half-blind again. Justin was still fucking me, though he was in those moments when it was no longer about me but about him. His pace was unsteady and he was grunting, squeezing my breast as he used me to get closer and closer to his finish. Aftershocks of my orgasm were still rolling through me when those high-pitched gasps started again, and after a few intensely staggered thrusts, he pulled out and gripped his cock, stroking it frantically before I felt hot cum drenching my stomach.\n\nThe sound of my heart pounding in my ears slowly began to fade, giving way to the sound of my breath and his, and then to the quiet sounds of the night in the park around us.\n\n\"You all right?\" Justin asked a few moments later, exhaustion obvious in his voice.\n\n\"Very,\" I said.\n\nI saw the hint of a grin cross his face. \"Good. Me too.\"\n\n\"Good.\"\n\n\"I, uh, made a bit of a mess,\" he said, chuckling awkwardly.\n\nI closed my eyes, laughing softly as I arched my back in a relieving stretch. \"It's okay. I'm washable.\"\n\nMy eyes were still closed when he kissed me and I sighed, relaxed and comforted by his presence. I didn't know if Justin would ever know how much he'd done for me that night, but it meant the world.\n\nBefore I could tell him, though, the world almost shattered again.\n\n\"Who's there?\" called a deep, unfamiliar voice.\n\nStartled, we both turned in the direction of it. On the other side of the trees, the white beam of a flashlight was bobbing in the darkness.\n\nMy heart stopped.\n\n\"Oh no,\" I whispered.\n\n\"Shit,\" Justin hissed. \"Shit. Who the fuck called the cops? You're here!\"\n\nIt was almost hilarious. I almost laughed. But I was frozen, terrified, certain that the person on the other side of the trees was about to discover me naked on a picnic table with a man who wasn't my husband in Lakeside Park after ten p.m., all of which was very against the bylaws except maybe the part where the man wasn't my husband.\n\n\"Liz, come on,\" Justin said urgently. \"Come on, get up, you gotta hide.\"\n\n\"What?\" I asked.\n\nHe took my arm and practically wrenched me off the table. Our clothes were mostly piled together and he picked up mine, shoving them into my arms. I froze, still shocked, and Justin groaned before grabbing me and physically pushing me towards the trees.\n\n\"Hide,\" he hissed again as he marched me over. \"Don't make a sound.\"\n\nShocked, I ducked beneath one of the trees and ended up on the ground, trying not to cry out as a stick jabbed into my bare ass. I watched through the branches as Justin rushed back to the table and grabbed his jeans, pulled them on, and then hurled himself on top of the picnic table just as white light flooded the small clearing.\n\n\"Evening, Officer!\" he said brightly.\n\n\"Mr. Higgins,\" replied the officer, decidedly unimpressed. \"You know there isn't a punch card for getting caught in the park after it closes, right?\"\n\n\"Aw, come on, man,\" Justin said. \"The power's out, I just came out to, you know... enjoy the evening.\"\n\nThere was a long pause.\n\n\"Shirtless?\" the officer finally asked.\n\n\"I got a little warm,\" Justin said.\n\n\"It's the middle of the night.\"\n\n\"It was a hot day.\"\n\n\"Mm-hmm,\" the officer said, and my heart almost stopped again as the beam of the flashlight moved. \"And that?\"\n\nJustin's eyes followed the beam of light, as did mine, and my heart stopped again as I saw my bra sitting in the middle of the clearing.\n\n\"I dunno,\" Justin finally said. \"It was like that when I got here, probably. It's dark, dude, I couldn't see it.\"\n\n\"Right,\" the officer said, walking across the clearing and picking up my bra. \"So you're sitting in the park shirtless with a woman's bra off to the side insisting you stripped down because it was 'hot' in the middle of the night after a thunderstorm.\"\n\n\"Yeah, sounds like what I said,\" Justin replied.\n\n\"You know, one of these days, I'm gonna take you down to the station for this,\" the officer said. \"I'm a little tired of getting all these calls about people in the park after ten p.m.\"\n\nJustin snorted. \"Tell that to what's-her-face... you know, the one who's always calling about everything. Mrs., uh... Mrs. Roth, right? I dunno, dude, I think she just has it out for me.\"\n\nThe officer laughed. \"Great theory, but she wasn't the one who called tonight. I think it was Alice McGrady. Now come on, Justin. Get out of here and go home.\"\n\nJustin grabbed his hoodie and stood, following as the officer led him out of the clearing. Just before he left completely, he turned towards the spot I was hiding, grinned, and gave me a thumb's up.\n\nThen, he was gone.\n\nFor a long time, I sat beneath that willow tree. It was silent, and dark, and I stared at the vague outline of a picnic table across the clearing.\n\nI should have been relieved he covered for me. I should have been scolding myself, saying that I told myself so, that I deserved having Alice McGrady call the cops on me. I should have been silently grateful that I was being given a second chance, that no one had discovered me breaking the town bylaws and the regular laws by fucking a man nearly twenty years younger than me in a public park.\n\nBut I wasn't any of those things.\n\nI didn't know what I was.\n\nMy mind raced as I tried to figure out why Justin did what he did, why his instinct had been to protect me and hide me and let me walk away with my dignity. I mean, I certainly didn't feel dignified. I was naked and covered in cum from a man who was four years older than my daughter and decidedly not my husband--well, ex-husband--hiding beneath a tree with my clothes bundled in my arms, sans bra which was probably sitting in the front seat of the officer's cruiser by now.",
        "But he'd left me that option. He'd left me a way to leave Lakeside Park as Mrs. Roth, HOA lady and town ambassador, so I could go home to my comfortable house and my shattered marriage and my life of lies. He'd given me the chance to go back, to save face, to forget I'd been turned on when he called me a MILF and said I was hot and kissed my stomach.\n\nI should have been grateful, but I was...\n\nI was disappointed.\n\nSlowly, very slowly, I started to smile, and then had to press my lips together to stifle a laugh, and when that wasn't enough, clapped a hand over my mouth.\n\nLakeside Park held so many memories. It was the place where my marriage began to have its downfall at that birthday all those years ago. It was a place I'd spent time with my daughter before she hated me. I'd laughed with friends and had picnics and enjoyed the little slice of nature in the middle of town. It was the place of so many memories that I couldn't even remember all of them.\n\nIt was also the place I tried to keep perfect against its will. The place I'd watched from my window, the place I'd sent cops time after time to clear away people who weren't playing by my rules. And it never worked, did it? It never stopped people like Justin from returning, from rolling their eyes as someone told them to move along. It never stopped being a place of memories, even if those memories didn't fit the little box of perfection I thought they should.\n\nJustin was giving me the option to be Mrs. Roth again, but he hadn't needed to. I didn't want to be her. I had almost wanted the officer to discover me, to see me lying on my back on that table with Justin, living my life and breaking out of the box I'd placed myself in. I wanted to be discovered so I didn't have to be Mrs. Roth anymore, and didn't that just say everything?\n\nI would always be the person who wanted my little town to be beautiful, safer, and more welcoming. I loved Minwack Falls and I loved what it represented, even if it wasn't what I had. But I was not going to be the woman who stayed with a husband who didn't love her. I was not going to let my daughter see the woman I'd become and risk having her follow those footsteps. I was not going to let her learn that it was okay to be unhappy.\n\nIn fact, I was going to learn from her.\n\nThe memory of Ramona running across the street in the rain, naked as the day she was born and gleefully giggling with someone who I had to at least hope had slightly stronger morals than his mother, swam into my mind. I swallowed hard, then wriggled out from under the tree.\n\nSo she'd been naked. So she'd been running across the street in a storm. So she'd had sex in her car and hopefully had used a condom though it wasn't really my place to lecture her about that since I had just had unprotected sex with a total stranger.\n\nSo she'd been happy, and I could be, too.\n\nI stood up, drawing my shoulders back and holding my clothing against my hip. I brushed the leaves and dirt and twigs from my skin, glanced around the clearing, and then began to march towards the path.\n\nIt was time to be Liz again. It was time to show the world who I was, and what I could do, and that I didn't need Scott for any of it. I was the HOA lady, the town MILF, and the badass bitch who was going to walk down the street to my house completely naked, completely untouchable, completely in control of myself and my life and the world around me. I was Liz Roth and I could do anything.\n\nAt least, I could until I whimpered in terror and froze at the exit of the clearing, shaking like a leaf until I hurriedly tugged my clothing on with my face so red that I swore it was glowing in the darkness.\n\nOnce I had covered myself, I took a shaky breath. Maybe walking home naked was a little too much, but that was okay. It would take a little time and a lot of work, but I was going to be happy.\n\nAfter all, it was the second-best time to plant my tree.\n\n**\n\nSpecial thanks to norafares, chasten, and OneAuthor for proof-reading, as well as all the amazingly awesome people who beta read. Paul M, Kevin Matheny, centralsquareguy, KW, AG, PM, N, K, ED, KJ, MidNyt, and RP - thank you all for your support.\n\nThis story is part of the When The Lights Go Out universe but is also further connected to two companion pieces. If you enjoyed this story, you may also enjoy Save World Get Girl and Lips of an Angel (coming September 2021).\n\nThank you for reading!"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "older woman",
        "younger man",
        "milf",
        "outdoor sex",
        "power outage",
        "small town",
        "oral",
        "tongue ring",
        "drama",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lakeside-park"
}