{
    "title": "Farm",
    "pages": [
        "Hello to my new followers and those that might remember me from last time. While I generally wrote stories involving a brother/sister or mother/son (I haven't uploaded any for the latter yet), from what I remember, the following story did prove a little more popular than I thought it would be.\n\nSo I figured I'd upload it again as, I'll admit, I enjoyed writing it as well. Stories involving the outback and what I'd call 'proper Aussie blokes' reminds me of home.\n\nHope you enjoy. Comments and / or feedback appreciated as always.\n\n*****\n\n\"She's fucked, Bruce.\"\n\nI removed my hat and wiped the sweat from my forehead. The heat was sweltering out in the country. I looked around and could see the heat haze rise up from the ground, the only sound that of the occasional fly or mosquito, and the chorus of crickets and cicadas in the distance. I turned back to look at Mick, the man I trusted most on the farm.\n\n\"Is there anything you can do?\" I asked, more in hope than expectation.\n\nHe pointed as he spoke. \"You're going to have to replace that entire block and that alone would cost a small fortune. Thing's fucked, mate. Add to that, this thing is what? Thirty, forty years old. You need a new one, mate.\"\n\n\"You know I can afford it but...\" I paused, having to swallow down what I wanted to really say. \"You know...\"\n\n\"I know, mate, I know. But there comes a time when you have to let things go.\"\n\nI looked at him and chuckled. \"Going soft on me, Mick?\"\n\n\"I'm an old man now, Bruce. You know that.\" He removed his hat. \"I remember looking in the mirror and seeing jet-black hair.\"\n\n\"I'm getting a few grey's myself.\"\n\n\"Everything's getting old and worn out, it seems.\"\n\nI sighed and slammed the bonnet of the truck, swearing again to myself. \"Come on, we'll hitch it to the tractor and drag the fucker back to the garage.\"\n\nIt was going to be a long drive back. The only reason Mick could even find me is that every vehicle had GPS. The farm I'd inherited from my father upon his passing was enormous. I'm a man in my early 40s, single and happy with my life. To call me a farmer would be too simple. I did own an enormous farm, breeding cattle and sheep while also raising crops and fruit. In the outback, life was hard, the days were long but also rather simple. My father had left the farm to me in his will when he died when I was only 22. Mum had died a decade before, my father and I watching her waste away from a terminal illness.\n\nI didn't exactly live alone on the farm, I had numerous people helping me during various times of the years, and there were half a dozen other homesteads dotted around the landscape. Mick was one of those people, my dad's best friend and the man I still relied on most. He lived with his wife and son a couple of miles away from my house. I lived alone, both parents gone while my sister had left the farm when she was sixteen and had only ever returned twice, both times when I'd put our parents in the ground. I had next to nothing to do with my sister. We barely spoke. Not because I didn't like her, I just had little in common with her. I knew she had a couple of kids, a nephew and a niece, a different father for each, and I knew enough to know she was always in a different relationship. I've seen the kids more often than my sister as both had been sent to visit me by their mother a few times over the years. That would be a hard journey for any kid, as I live at least a thousand miles from the city they lived in and the nearest large town is a half hour drive away.\n\nBack at the farm, we parked the truck outside the garage, running a hand along its side and over its bonnet. I knew it was dead. One of the last links to my dad. I'd been with him when he'd bought it. The truck had been one hell of a workhorse, but it was now dead and I knew I'd just have to sell it for scrap. Mick just stood beside me, laying a hand on my shoulder.\n\n\"It's the last link, isn't it?\"\n\nI looked towards the house and nodded. \"It is except for that. I'll get online tonight and start looking for a new one.\"\n\n\"Online? You mean that internet thing?\"\n\nI laughed. \"Yes, Mick. You know that phone I gave you? That's got the internet thing too.\"\n\n\"I don't understand all this new-fangled technology. I thought a phone was just a phone. I barely understand that text messaging malarkey.\"\n\n\"I'll have to sit you down one day, Mick, and go through all this with you.\"\n\nHe dismissed that with a wave of the hand. \"I'll never understand it. My wife does one have those iPad things though. She loves it. Tried to get me to use it but I think I almost broke it.\"\n\n\"You're a man out of your time,\" I stated with a chuckle.\n\nWe headed towards the house, Mick's truck parked outside. The sun was getting low and the work day was over. A couple of my farmhands walked by, sharing a quick goodbye before they'd head home. Some lived close by, others lived in the nearest town.\n\n\"Want a beer?\" I asked.\n\n\"Sure. I could do with wetting my whistle. Been a bloody hot one today.\"\n\n\"It's always a hot one, Mick.\"\n\n\"I'm sure the weather is getting warmer.\"\n\n\"You're just getting old.\"\n\n\"Son of a bitch,\" he muttered through laughter.\n\nWe sat on the veranda, sucking down a couple of cold ones before Mick shook my hand and headed home in his truck. I wandered inside, cooked myself a simple meal before sitting in front of my computer. I did the usual things of checking my mail, reading a few bits of news before connecting to a messenger service. Once I was signed in, I noticed my niece was online so thought I'd say hello.\n\nBruceAlmighty: Hey Em.\n\nxxEms95xx: Hey Brucey\n\nBruceAlmighty: How's your day been?\n\nxxEms95xx: Oh, you know, another day in paradise. *sigh*\n\nBruceAlmighty: More problems with Mum?\n\nThat wasn't unusual. I was left with the feeling mother and daughter had never really got along, and their relationship had been deteriorating for years. I just dreaded each time we spoke as I knew it was getting worse.\n\nxxEms95xx: Not just her. Her new deadbeat boyfriend. I forget what number this one is.\n\nBruceAlmighty: I could say something but I've heard so... She's my sister by blood but... What's wrong?\n\nxxEms95xx: He's disgusting. He keeps trying things on with me and Mum just laughs.\n\nBruceAlmighty: What do you mean by 'trying things'?\n\nxxEms95xx: I think he wants to have sex with me. I feel trapped. I can't leave as I can't afford it, but Mum just says 'Well, you're of age now so why are you saying no?' Ugh, she's disgusting and he's worse.\n\nI had no idea things were getting that bad. We talked all the time, my niece and I. She had turned 19 a couple of months back but I'd watched her grow up for at least the past few years once I managed to get online. She would send me the occasional picture and she grew up from slightly awkward looking young girl into what even I'd to say was a beautiful young woman. Even though I hadn't seen her in person now for a few years, she was still family and I certainly didn't like hearing someone was trying to take advantage of her.\n\nBruceAlmighty: What about your brother? Where is he now?\n\nxxEms95xx: Other side of the country. He was smart and got out of here as soon as possible. He doesn't even speak to Mum now.\n\nI would have asked about her father, but neither my niece or nephew had anything to do with their fathers, both deadbeat guys in what sounded like a long list of deadbeats my sister decided to get with.\n\nBruceAlmighty: The offer to come here still stands.\n\nxxEms95xx: I know, Brucey, but I'm a city girl. I don't know what I'd do on a farm.\n\nBruceAlmighty: You'd be safe, that much I do know.\n\nI remembered the precocious little girl that visited me when she was only about five or six years old. Having next to nothing to do with kids, having two of them around the house was a real change but we bonded immediately. She spent two weeks running under my feet, which I didn't mind, as she showed an interest in nearly everything I did. Even at that young age, she seemed to see her mother for what she was as I remember the tears when she finally had to leave. It was one of the few times I've ever cried when the car carrying her drove away.\n\nShe'd been back every couple of years until about three or four years back. I could understand why she'd stopped coming, but I missed her and my nephew's presence, even if only for a couple of weeks a year.\n\nxxEms95xx: Let me think about it. Okay?\n\nBruceAlmighty: Of course. But my door is always open, to you or your brother anyway. You need me, you give me a call. I'll organise transport right away if necessary.\n\nxxEms95xx: Enough about me. What about you? Everything okay?\n\nBruceAlmighty: Can't complain though the old truck has finally upped and died.\n\nxxEms95xx: Grandad's truck? Oh, I'm so sorry, Brucey.\n\nBruceAlmighty: I'll go tell the old man tomorrow and share a shot of whiskey with him as we celebrate thirty years of service.\n\nxxEms95xx: lol. Are you serious?\n\nBruceAlmighty: They're here on the farm. I go see them sometimes, particularly when I want advice.\n\nxxEms95xx: They speak to you?!?!?!?\n\nBruceAlmighty: Of course not. But I know what he would say. And I know what he'd tell his granddaughter.\n\nxxEms95xx: And what would that be?\n\nBruceAlmighty: You'll always have a home here.\n\nWe talked a bit longer before she disappeared offline, saying she had an early start the next morning. As usual, I then looked up a bit of porn, had a five-knuckle shuffle before heading to bed myself. I lay back and thought about what it would be like to have someone else around the house. I had lived with others before, in one or two relationships that eventually fizzled out. If I was after some companionship, I'd head into the nearest town and one of the pubs. I knew nearly everyone as the population was only a couple of thousand or so. That sometimes made finding a partner for some horizontal Olympics awkward, though I'd generally find a woman willing to stick my dick in them. Not exactly a romantic way of putting it, but at the end of the night, sometimes a man and woman just wanted some no strings attached sex.\n\nThe next morning, I was out in one of the paddocks with Mick, herding the cows as some of them needed milking, when I mentioned my conversation with Emily the previous night.\n\n\"You invited her here?\" he asked, laughing away.\n\n\"I don't see a problem with that.\"\n\n\"What the fuck would she know about farming?\"\n\n\"She was rather enthusiastic the last couple of times she's been here.\"\n\n\"She was a kid then, Bruce. How old's she now? 18? 19?\"\n\n\"19.\"\n\nHe groaned. \"Ugh, I can picture it now. I've seen what girls her age are like on TV.\"\n\n\"It was only an offer at the end of the day. And she hasn't taken me up on it.\"\n\n\"Yet,\" Mick stated quietly. He removed his hat and wiped his brow. \"Though I suppose it would nice to have another young'un around here though.\"\n\n\"Things don't sound good at home. I'd just like to be that safety net if things get so bad she needs to escape.\"\n\n\"I'd ask but I don't really want to know either.\" Mick then paused. \"I remember the arguments your sister had with your father, particularly after your mother died. The man was grieving and she treated him like shit. I'll be honest with you, Bruce. I was happy the day she left. It gave your old man some peace in his final years.\"\n\n\"I remember.\"\n\nI understood why Mick sounded bitter. I think he was still convinced she drove my father to an early grave. Losing his wife at a young age diminished the zest for life he once had. Years of crossed words with his daughter, until she finally walked out of his life for good, destroyed him further. I did what I could to support, and I know he appreciated it, but I noticed that he seemed a little lost, I guess would be the right word for it. When he eventually dropped dead from a heart attack, no-one was surprised.\n\nWe didn't talk every day but, after being told things were so bad at home, I put in the extra effort to keep in touch with Emily over the next few days and weeks. She made no mention of anything untoward happening again though there was no doubt life was miserable for her, mentioning that she always left early for work and tried to come home as late as possible. I suggested she try and move in with a friend but apparently that wasn't even an option. She said that all she could do was wait it out and hope for the best.\n\nMiles from home one morning a few weeks later, I was with a few of my farmhands as we were marking sheep ready for the start of the shearing season. So busy yelling instructions, or enjoying a laugh and the banter I always had with the young lads, I barely heard my phone ring in my pocket.\n\n\"Boss, phone's ringing.\"\n\n\"Shit!\" I managed to fish it out of one of my pockets and looked at who was calling. My stomach fell as I couldn't remember the last time I'd even heard her voice. I clicked answer. \"Emily, what's wrong?\" I heard nothing but sobbing for around thirty seconds. \"Emily?\" I asked quietly.\n\n\"He tried to... He tried to...\"\n\nI knew exactly what she was trying to say. The temptation to get in my truck and drive to pick her up was almost overwhelming. \"Where are you right now?\"\n\n\"In the bathroom at work.\"\n\nI had to take charge of the situation. She needed to get out and she needed to get out now. I would have driven there if I could, but it would take longer than a day. \"Emily, I'm going to tell you what to do. You need to follow these instructions. Okay?\" I stated as gently as possible.\n\nI heard her sniff. \"Okay,\" she said quietly.\n\n\"Go home. Grab yourself a bag. Pack your things. Go to a hotel tonight, somewhere near the airport. I'll get online and book it for you, send you the details soon. Tomorrow morning, go to the check-in counter where you will be given a ticket. It will be a two-legged flight, as the local airstrip can only take Cessna's, so you'll swap planes about halfway. I'll be waiting for you at the airstrip when you land tomorrow.\"\n\n\"What if he's there?\"\n\n\"Call the police. Tell them what happened. Let me know if he is as I'll change the details. But you're coming here, no matter what.\"\n\n\"But Mum...\"\n\n\"Fuck your mother. If she's stood by as this happened, she's just as responsible. Go home now, Emily. Tell your boss you won't be in tomorrow, perhaps never again.\"\n\n\"Okay,\" she said quietly.\n\n\"Em?\"\n\n\"Yeah?\"\n\n\"You'll be fine. Remember, if either your mum or him is there, call the police.\"\n\n\"Okay.\"\n\n\"Call me when you get to the hotel.\"\n\n\"I will.\"\n\n\"Good girl. I'll see you tomorrow.\"\n\n\"Okay. I'll go now.\" I thought she was going to hang up. \"Brucey?\"\n\n\"Yeah?\"\n\n\"Thanks.\"\n\nI smiled despite the situation. \"No problem, kiddo. You just get here safely.\"\n\n\"I will. See you tomorrow.\" I heard another sniff as she disconnected. I noticed the looks from some of my farmhands. \"I'm heading back to the house. I have things to organise. You boys will be alright?\"\n\n\"Sure thing boss,\" one of my farmhands, Phil, replied, \"You go make sure she's alright.\"\n\nI raced back to the house, Mick wandering out of the garage as I slammed on the brakes, the truck sliding along the dirt. He could obviously see my mood and took a guess what it was about. \"She's coming, then?\"\n\n\"Swear to God, Mick, I'd drive there and kill him if I could. Never met the man. Wouldn't know him if he passed me in the street. But I'd wring his neck if given the opportunity.\"\n\n\"What are you doing now?\"\n\n\"I have things to organise.\"\n\nI sat down at my desk and sent Emily a text, asking if she was safe. She replied back immediately, stating no-one was home so she was packing a bag. I found a modestly priced hotel right next to the airport, booking a room and sending her the details. I then looked for a flight and, while there were not many options for the second leg, I managed to get her onto something reasonable. She wouldn't land until late the next day but I didn't think she'd mind. I sent her a text of all the details once everything was booked.\n\nOnline later that night, I saw she was logged on, figuring she maybe had a laptop and had connected to the hotel wi-fi.\n\nBruceAlmighty: Are you okay, Em?\n\nxxEms95xx: Feeling a little better knowing that I'm leaving.\n\nBruceAlmighty: Have you heard from your mother?\n\nxxEms95xx: Amazingly, I have. Though she was just wondering where I was, making absolutely no mention of what that bastard tried last night.\n\nBruceAlmighty: What did you tell her?\n\nxxEms95xx: That I've left and won't be coming back. I also made a call to the cops. She mentioned there had been a visit.\n\nBruceAlmighty: Good.\n\nxxEms95xx: Thanks for everything, Brucey. It means a lot.\n\nBruceAlmighty: As I said, no problem. You'll be safe and sound here, on that you have my word. Once you're settled in, we'll figure out what you can do.\n\nI spent the morning working with Mick in the garage before sorting out one of the spare bedrooms. I had nothing that would make it 'girly', though considering she was 19, I still didn't have a clue. But I'd take her into town after picking her up and let her pick out a few things to give the room a little more character. It could have done with a good paint but I'd have to do that later, if she wanted it.\n\nAfter a late lunch, I headed into town as I needed to grab a few things anyway, heading into the pub for a drink afterwards. Mick had joined me as he wanted to see Emily too, though he still wasn't entirely sure how she would adapt to life on the farm. I wasn't overly concerned as it would have to be something we'd discuss rather quickly.\n\nWe arrived at the airstrip rather early, Mick and I simply leaning back against the front of the truck, watching the sky for any sign of the plane. We didn't talk much. Neither of us needed to fill the silence with meaningless words. The silence was finally broken by the sound of an approaching turbo-prop engine, shielding my eyes from the sun to see the Cessna, a speck on the horizon.\n\nOnce landed, the Cessna parked up as the pilot disembarked and opened the door. Only one passenger stepped out. She placed a hat similar to mine on her head, an Akubra. She wore a long-sleeved check shirt, though had tied up the bottom of it, exposing her stomach. Figure hugging jeans while, rather sensibly, she wore a pair of boots. She reached back into the plane to retrieve a large rucksack, flinging it over her shoulder as she approached us.\n\n\"Well, I wasn't expecting that,\" Mick said quietly.\n\n\"You and me both...\"\n\nThen she saw me, squealed my name, dropped the bag and ran. Before I even knew what was going on, she'd jumped on me and nearly squeezed the air out of my lungs. After a few seconds, I figured I should probably complete the hug so wrapped my arms around her in return. Eventually she released me and I lowered her to the ground, looking up at me with wide brown eyes and she actually smiled.",
        "\"I wasn't expecting that sort of greeting,\" I stated with a chuckle, before gesturing to my right, \"And I'm sure you remember Uncle Mick.\"\n\n\"Of course!\" she exclaimed, hugging him too.\n\n\"I'll admit I was expecting some sort of city girl,\" Mick stated once he'd hugged her.\n\n\"Give me a little credit. I knew where I was heading.\"\n\n\"Well, yeah, but...\" I stated before trailing off and shrugging. \"It's good to see you.\"\n\nA broad grin appeared, her nose crinkling slightly. \"You too, Brucey.\"\n\nI laughed. \"Still with the Brucey? I remember you calling me that when you were knee-high to a grasshopper.\" I took a step back and looked her up and down. \"Now you've returned, well, a woman.\"\n\nShe blushed. \"Thanks,\" she said quietly.\n\nI grabbed her bag and threw it in the back of the truck. \"Come on, we'll head off. Do you need anything?\"\n\n\"No. I think I grabbed everything I needed,\" she said, clambering into the rear seat of the truck.\n\n\"We can head into town now if you do think of anything. I've set up a room for you but it's, well, lacking character,\" I explained, looking in her direction via the rear-view mirror.\n\n\"All I want is a hot shower and a good meal.\"\n\n\"You can have both once we're back at the house. Mick, want to bring the wife over for dinner?\"\n\n\"Sure thing. I'll drive home once we get back and head back to yours for, I dunno, 7ish?\"\n\n\"That'll be fine, mate. We'll have a barbeque.\"\n\n\"That's sounds awesome,\" Emily said behind me.\n\nThe three of us chatted about nothing of importance during the drive back to the farm, otherwise spending most of it in silence as Emily stared out the window. I had next to no idea what she must have been thinking, if she was already thinking this was a bad idea, if she'd settle into life on the farm, or if it was only a temporary situation before she figured out what to do next. She caught me once looking in the mirror and smiled at me, so I assumed she wasn't thinking it was a mistake just yet.\n\nMick headed off home once we were back at the farm. I escorted Emily inside and figured I should show her the room first, knowing she would definitely want to add her own character. I placed her rucksack on the bed as she threw her purse, phone and other bits from her pockets beside them.\n\n\"Um, I guess you may want me to paint it soon as... well, it could do with a little TLC but...\" I trailed off and shrugged again. Another little smile this time. Then, to my surprise, she burst into tears, walking towards me again. \"Something wrong?\" I asked rather stupidly, once I'd wrapped her in another hug, figuring I may be giving a few of them over the next few days.\n\nShe shook her head. \"No,\" she whispered, \"Just nice to know someone gives a shit about me.\"\n\n\"What the fuck has your mother done to leave you feeling like this? Apart from the obvious, of course.\" She looked up and I shook my head. \"Rhetorical question, don't worry.\" She placed her head on my chest again. \"You've got a home here for as long as you want, kiddo.\"\n\n\"I'm already left with the feeling that I don't want to leave.\"\n\n\"Well, that was quick,\" I retorted, unable to hide the chuckle.\n\n\"You know I'm going to be a mess for a while. I'll want to talk about... certain things,\" she added, taking a step back, probably to gauge my reaction.\n\nI ran a hand through my hair. \"Yeah, figured. Um...\"\n\n\"Not now, though.\"\n\n\"Look, I'll certainly listen but... I'm a simple man... Lived here alone for a few years now so...\"\n\n\"It's going to be a little strange for both of us.\" I just nodded. She smiled again, wiping her eyes. \"Once I'm settled in, perhaps I'll take you up on your offer. Make this a little more... homey.\"\n\n\"Girly?\"\n\nShe giggled and scoffed all at once. \"I'm not that bad.\"\n\nI shrugged again. \"As I said, this is your home and this will be your room. Do with it as you wish. You need anything, let me know and I can grab it. So, want the tour?\"\n\n\"Sure.\"\n\nShe was surprised how homely the house was inside as, while it didn't look exactly ramshackle from the outside, appearances would be deceiving. She was particularly impressed by the fact a single man kept his bathroom so clean, and by the kitchen, which was probably far more modern than she expected. Ending up on the rear veranda, I just gestured and stated everything she could see I owned. She took a seat as I grabbed a couple of beers from inside, sitting back and enjoying the silence.\n\n\"It's so quiet out here,\" she finally said.\n\n\"Bit different, is it?\"\n\n\"You ever been to a city?\"\n\n\"Once or twice. I'm like a fish out of water in places like that. Most nights, I just sit on this veranda and enjoy the serenity. The tranquillity. It's so peaceful out here. I don't understand why people feel the need to group together in towns and cities.\"\n\n\"Do you ever get lonely?\"\n\n\"Not really. I'm busy all day and enjoy the silence at night.\"\n\n\"What about a girlfriend though?\"\n\n\"Haven't found a woman yet who can handle the lifestyle. Doubt I ever will, in all honesty.\"\n\n\"Have you tried internet dating?\"\n\nI looked at her and noticed the smirk. \"God no. Listen, I don't need my niece trying to organise my love life. I'm content with how things are.\"\n\n\"If you say so,\" she stated, still smirking as she took a sip of beer.\n\nMick and his wife, June, appeared few minutes later, and I got the barbeque going not long afterwards. I cooked plenty of meat while I wasn't surprised that June had brought a pile of Tupperware, full of other things that would go well with a plate full of meat. Emily greeted 'Auntie' June with a warm hug, the two women soon nattering away as Mick joined me, doing the good bloke thing of supplying me with beer as I did my best not to burn everything.\n\nSitting down once everything was cooked, soon it was simply the sound of laughter echoing in the silence as the four of us shared stories, either recent or in the distant pass. As the sun dipped below the horizon, I also got a fire going to provide some light and warmth, particularly for Emily as I expected she'd find the difference in temperature a real surprise.\n\nMick and June eventually headed home as Emily and I headed inside out of the cold. Emily had a shower as I did my usual thing of getting online, though I would obviously forego a certain ritual considering I now had another person in the house. She eventually appeared behind me, wearing nothing but a small vest, with no obvious sign of a bra, and some very short shorts, which showed off her legs. I tried not let my eyes wander, remembering who she was.\n\n\"I'm ready for bed. I'm beat.\" I got to my feet and wasn't surprised that she wanted another hug. \"Thanks for everything.\"\n\n\"No worries,\" I stated. She looked up at me, another smile, as I kissed her forehead, \"As I said, you're home now.\"\n\nShe took a step back and I couldn't help notice that her nipples were hard. I quickly moved my eyes away, embarrassed that I'd even noticed. \"I'll see you in the morning.\"\n\n\"Yeah, sure thing, Em. Sleep well.\"\n\n\"I will.\"\n\nShe turned and I watched her walk away, her shorts almost painted on her arse. Once she'd disappeared, I ran a hand down my face before shaking my head clear of a couple of thoughts. Not entirely unpleasant except for the fact they were about my niece. After everything she had gone through, the last thing she needed was a pervy old uncle. Well, not exactly old but you know what I mean.\n\nI was up early the next morning as always, surprised that Emily appeared no more than fifteen minutes after I was up. I wasn't planning on doing too much work, it being a Sunday and the lone day of rest I rewarded myself with, but I still always woke at the same time. She sat down next to me and yawned, stretching at the same time that exposed her rather flat if not toned stomach. I kept my eyes firmly focused on my cup of coffee. Well, maybe I stole one or two glances.\n\nEventually she asked, \"What are the plans today? Do you work every day?\"\n\nI chuckled. \"I try not to. But no plans today. Is there anything that you'd like to do?\"\n\n\"Horses.\"\n\nMy chuckle turned into a laugh. \"Should have known. Remember how to ride?\"\n\n\"It's all in the thighs.\"\n\nShe said it in such a tone I almost spat out my coffee. I looked at her as she innocently drank her own coffee, meeting my eyes, and I knew she was smiling. \"Let me have a shower and we'll head out. Their paddock is only a short walk away.\"\n\nThe heat was already building once we headed outside. I was surprised to see Emily had come prepared, once again dressed in sensible clothing, though this time wearing shorts rather than jeans. I didn't blame her. I pointed out and explained certain features of the farm, such as where the milking and shearing was done, where most of the machinery was kept and other features of the farm. I was surprised at how keen an interest she showed, asking me plenty of questions along the way.\n\nA few of the horses were at the fence when we approached. Emily had brought along a few carrots and soon she had three of them eating out of the palm of her hand. Literally. We must have spent at least half an hour at the fence as she fed the horses or patted their noses and necks.\n\n\"Do you ride them?\" she wondered.\n\n\"Of course. When we're rounding up the herds, we do it the old fashioned way. Well, except for the helicopter. That helps us locate and round up the loose cows and bulls, then we drive them back this way.\"\n\n\"Can I do that one day?\"\n\n\"Seriously?\" I asked, unable to hide my surprise.\n\n\"Of course. If I'm going to live here, I'm going to earn my keep.\"\n\n\"I had no idea this sort of life interested you.\"\n\n\"Didn't my childish enthusiasm each time I've visited before not leave any sort of impression?\"\n\nI removed my hat and ran a hand through my hair. \"Well, it did, but I thought... Well, I thought it was precisely just because you were a kid.\"\n\n\"Why do you think I so readily accepted moving here?\" I shrugged. \"Of course, the most important reason was because of you, Brucey. You've always looked out for me, even when you're a thousand miles away.\"\n\nI could only smile before I asked, \"Want to go for a ride?\"\n\nHer smile matched my own. \"Sure.\" She looked over the horses. \"Which one, though?\"\n\n\"Take that chestnut one there,\" I stated, pointing. \"He's a good sort. Co-operative. And likes a canter.\"\n\nOnce we'd saddled the horses, we mounted and headed off. I had a general idea of where we should head, though didn't mention anything, hoping it would be at least a slight surprise. As we trotted along, Emily told me about what she'd been doing with her life. She'd done well at school but had chosen not to take further education, wanting to get out into the workforce and start making money. But, as I already knew, her home-life sucked and, despite working, she couldn't afford to buy a house, while even renting would have left her scraping to survive.\n\n\"What about your mother?\" I finally asked, hoping I wasn't opening up a major can of worms, adding \"You don't have to talk about the other night yet, either. That's on your own time. I merely wonder about my sister.\"\n\n\"Your sister. My mother.\" She chuckled bitterly. \"She's a bitch.\" She looked at me, gauging my reaction. I just nodded. \"She's done nothing but belittle me and my brother for years. Spent years destroying my self-confidence. I even contemplated... You know, ending it... Once or twice.\" Then she looked at me and smiled. \"Finally I had an escape. I just had to find the courage to finally leave.\"\n\n\"She work? Has a job?\"\n\nShe cracked up laughing. \"You're kidding, right. She's claiming some sort of government benefit. No idea what for.\"\n\n\"What about these men she's with?\"\n\n\"The current one does work but he also deals. The one before that was unemployed and I'm sure pimped her out. The one before that was simply a deadbeat. Used to bash her around a bit. The one before that... I think he's now in jail for armed robbery. One before that is in jail for murder. One before that, my father, or sperm donor, as I call him, lives on the other side of the country now. The one before that, my brother's sperm donor, was probably one of the better men she's been with, though that's not saying much considering...\"\n\n\"Fucking hell. Is she simply off the rails or what?\"\n\n\"No idea. All I know is that I've spent most of my teenage years fending for myself.\"\n\n\"I had no idea. I'm sorry.\"\n\n\"Don't apologise, Brucey. Not like I told you much about it. I couldn't because...\"\n\n\"You figured I'd worry?\"\n\n\"I knew you'd drive all the way into the city to collect me. And my brother.\"\n\n\"I'm tempted to say you should simply cut all contact with her.\"\n\n\"I will eventually.\"\n\n\"Does she know where you are?\" She shook her head. \"I wonder if she'll call me. Can't rightly remember the last time I actually spoke to her.\"\n\n\"You can tell her that I'm here if you want. I'm 19 years old. I no longer have to answer to her.\"\n\nThe land of the farm wasn't completely flat as we ended up traversing a series of rolling hills before we finally crested one that would give a spectacular view of what lay ahead. Much of the land was dry, though wasn't what people though as desert. There was plenty of grass as far as the eye could see, with small outcrops of trees. In the valley below ran a river that was full for the first time in years. I heard Emily gasp beside me as I knew she'd never seen it before.\n\n\"I had no idea it existed,\" she said quietly.\n\n\"The last time you were out here, this thing was barely a creek. But apparently there's been plenty of rain up in the mountains. News is that this will remain full for a long time to come. Good as we needed the rain.\"\n\n\"Is it safe to swim?\"\n\n\"Of course. It doesn't flow fast and is plenty deep. All you'll have to bring is your swimming costume.\"\n\n\"Good thing I brought a bikini or two.\" I looked at her as she shrugged. \"I figured I may get a little sun out this way.\"\n\n\"You'll get plenty, that's for sure. We'll definitely head back this way and you can have your swim.\"\n\n\"Will you join me?\"\n\n\"Sure. I love a good swim as much as the next man.\"\n\nWe turned our horses around and headed in a different direction, take a long circuit back towards the farm. We rode by some of the sheep, many of them definitely on the verge of requiring a good shear, Emily once again mentioning that she'd like to learn how to do that. We ended up in another paddock where some of the cattle was kept, joking that one of them may end up on our dinner plate one day.\n\n\"Good thing I'm not a vegetarian,\" she stated, taking everything in her stride.\n\nArriving back at the farm in time for a late lunch, I made us some sandwiches, with bread I actually made myself, that fact alone making quite a significant impression, or so it seemed. I don't bake but it's difficult to get certain things this far out and, considering I didn't want to drive into the nearest town all the time, I'd learned to do certain things for myself in the kitchen.\n\nI rarely watched TV but always treated myself to a few hours of an afternoon on a Sunday when I watched the football, always with a couple of beers and some snacks. I didn't expect Emily to have any interest whatsoever so was surprised when she took a seat next to me on the couch with a beer of her own. Asking what sort of football then who was playing, she seemed quite content to sit and watch beside me, asking the occasional question but otherwise watching in silence. I guess she wanted company as much as she wanted to keep me company.\n\nWhen the game was finished, I wasn't that surprised to hear her offer of making dinner. Unable to remember the last time anyone had made me dinner; I took her up on her kindly offer. I was polite enough to join her in the kitchen, watching from the table as she soon learned what was available in the pantry and the fridge and was soon cooking up a storm. I always cooked simple food, generally meat, potato and vegetables. It was obvious that Emily wasn't cooking the same sort of thing.\n\nI probably cleared my plate in five minutes after that first tasty bite. I was hungry but it was so goddamned tasty at the same time. I left her in a fit of giggles when I leaned back and burped.\n\n\"Sorry, used to living alone,\" I stated.\n\n\"I'll take it as a sign of appreciation for my cooking skills.\"\n\n\"You've got yourself a job right there, young lady. You were working in a kitchen, right?\"\n\n\"I was but they never took my skills seriously because I wasn't officially trained.\"\n\n\"If you can cook things like that, you have absolute free reign around my kitchen.\"\n\nShe smiled. \"I like to bake too.\"\n\n\"You're going to make one man very happy one day.\" Her cheeks flushed and I figured I'd embarrassed her. \"Just being honest, Em. A way to a man's heart is through his stomach.\"\n\n\"I was told the best way to keep a man happy is to simply feed him and fuck him.\"\n\nI looked at her, a face of innocence returned my way, before I burst into laughter. \"Yeah, that's what I meant too.\"\n\nI helped clear up, the two of us making a good team as everything used was cleaned, dried and put away, before we grabbed another beer each and sat on the veranda again. I think she already understood that it was a nightly ritual. We chatted a little bit but once again enjoyed the sound of silence, before I headed inside to have a shower.\n\nI thought nothing of walking from the bathroom to my room with just a towel around me but came to a stop when I bumped into Emily. I noticed her cheeks redden as she looked me up and down. \"Something wrong?\" I asked, drying my hair with another towel.\n\n\"No. No. It's just... I didn't expect...\"\n\n\"Oh... Sorry. I didn't think. I'll remember to wear a shirt or something next time.\"\n\n\"Oh... I'm not complaining. I'm definitely not complaining.\" Then she put a hand to her forehead. \"That sounded worse than it should have.\"\n\nI laughed. \"Guess this will take some time getting used to for both of us.\"\n\nShe turned to head into her room but stopped and looked back at me. \"You are a good looking man, Brucey. Leaves me wondering why you're single.\" I must have stood there, looking utterly dumbfounded, as she just smiled and said, \"Good night.\"\n\n\"Yeah, good night.\"\n\nThe next week flew by as it was the start of the shearing season, waking before dawn each morning for breakfast before we headed out to start gathering the sheep. As she'd said, Emily was soon getting involved with all the enthusiasm I expected. She found it tough as shearing sheep took a lot of physical effort, the little bastards always straining against your hold as you tried to get their woollen coats off. She was knocked on her arse more than once by an uncooperative sheep but impressed me and my men when she got straight back up, dusted herself down and tried again.\n\nAt the end of each long day, bodies covered in sweat and dirt, muscles aching from the exertion, we'd always share the cooking duties before sitting down for dinner. We'd then shower before sitting out on the veranda, enjoying a cold beer. The first couple of nights ended with Emily falling asleep in her chair. I had no problem lifting her up and carrying her to bed. At least she weighed less than a sheep. The second time it happened, she woke up as I carried her and she just gave me this smile that part of my brain couldn't help but misinterpret. But that's all it was. Just a smile. I just think that she was finally happy.\n\nSunday being our day off, we were still up early though at least after the sun was up. She actually cooked what can only be describe as a full English breakfast, a real treat considering I never cooked breakfast for myself. The plate put in front of me looked delicious but the kiss on the cheek was what surprised me most. \"This is for all the hard work this week. And for letting me feel like part of the gang,\" she added.",
        "\"Don't sell yourself short,\" I retorted, forking some bacon and egg into my mouth, making sure I'd swallowed before adding, \"You've done a bloody good job this week. You're a natural.\"\n\nShe sat down with her own plate, nowhere near as full as mine. \"I'm sure I was slowing you down.\"\n\nI shook my head. \"Not at all. And this will go on for a couple of weeks yet as we have thousands of the buggers to do, depending on time of year. And you've already spoken to most of the lads. They're a good sort.\"\n\n\"Well, at least they don't make a big deal of me being a girl.\"\n\n\"You're getting stuck in and doing a bloody good job while doing it. What's between your legs means fuck all in the grand scheme of things.\"\n\nShe grabbed my hand and gave it a squeeze. The smile on her face spoke volumes. \"Thank you,\" she said quietly.\n\n\"Trust me, if you weren't, I'd have told you. But you've got a good head on your shoulders. We might just need to put a bit of muscle on those arms of yours.\" She laughed at that. \"Want to head to the river today?\"\n\n\"That sounds great!\"\n\n\"We'll saddle up the horses. Take some lunch with us too. Make a real day of it.\"\n\n\"It's a date!\" I looked at her and smiled at the choice of words. I think she embarrassed herself as she clearly blushed. \"I mean...\"\n\n\"It's fine. Don't worry about it.\"\n\nWe made some sandwiches, adding a few bits of fruit as well, packing it all into a small bag before we changed and headed outside. Emily took the same horse she rode the previous weekend while I took my favourite black stallion. He could be an absolute bastard but I knew him well, and while he could be grumpy at times, he'd generally co-operate once I had him saddled.\n\nIt was a good couple of hours or so ride to the river, once again chatting about nothing important on the way until we crested the rise and the river came into view. Tying the horses to a nearby tree on arrival, I placed a blanket down, placing our bag of food on top of it as Emily stripped off. I'll admit I could do little else but stare when she stood in front of me in a black bikini, a thousand unsavoury thoughts filtering through my mind, plus involuntary blood flow to my crotch. I blinked rapidly and looked away for a moment before she walked towards the water. I watched her walk into it before she disappeared underneath.\n\n\"It's so cold!\" she cried upon surfacing.\n\n\"It can be a little deceiving,\" I muttered to myself, unsure if I meant the water or what my niece looked like without most of her clothes on.\n\n\"Are you coming or what?\" she called out, only her head now bobbing above the water.\n\nI spent a few seconds willing my erection to disappear before I stripped down to a pair of swimming shorts and joined her in the water. We just enjoyed the cool water for a time as the sun was properly beating down, thankful that we'd put on some sun-cream before leaving the house. After floating around for a while, she then swam towards me and wrapped me in a hug. She didn't say anything as she did and I couldn't help but feel her skin against my mine, and her perky breasts against my chest. I tried really, really hard but the body has a mind of its own and it wasn't long until I heard her gasp. I pulled away in an instant.\n\n\"Sorry.\"\n\n\"Don't be. I understand,\" she said quietly.\n\n\"You're my niece! But it's been a while since a near-naked woman hugged me like that. I'm sorry.\"\n\nShe swam towards me again and kissed my cheek. \"It's nothing to be ashamed about, Brucey. You should be glad it still works,\" she said, I figured teasing me at the same time.\n\nThat defused any tension as I burst into laughter. \"It works, trust me,\" I stated, not caring if she knew what I meant.\n\nShe just raised an eyebrow. \"Good to know.\"\n\nI didn't know what she meant by that and, to be honest, didn't really care. \"You're a beautiful young woman, Emily. Never doubt that.\"\n\nShe smiled again before she swam away and the tension completely disappeared. I just took a deep breath and calmed down. We eventually got out and sat on the blanket I'd brought, slowly eating through the lunch we'd prepared. Once our appetites were sated, we lay back on the blanket side by side after I'd popped an umbrella to at least give us a little bit of shade.\n\n\"Can I ask a personal question?\" she eventually asked.\n\n\"Sure.\"\n\n\"What do you look for in a woman?\"\n\nI scratched the stubble on my chin before replying. \"I honestly don't know. Nothing in particular, I guess. As I said, I'm a rather simple man. What you see is what you get. What I have no time for is drama. I guess I would like someone as simple as myself.\"\n\n\"What about looks?\"\n\n\"I'm not picky, to be honest. Sure, I have favourite features but, at my age, you don't let things like that spoil your choices.\"\n\n\"What about age?\"\n\n\"You're sure inquisitive,\" I replied, unable to stop my laugh.\n\n\"Just wondering.\"\n\n\"Age is just a number, I guess,\" I stated, with a shrug, \"Though I wouldn't want someone too much older than me. I'm not expecting kids at my age but you never know. Not too many young women could handle this life, though, as I've said before.\"\n\n\"Oh, you'd be surprised...\"\n\nI turned to face her and she immediately looked away. \"What do you mean?\" I wondered.\n\n\"Nothing.\" I heard the tone and I think she was embarrassed. So I left it alone.\n\n\"What about you? What do you look for?\"\n\n\"I want a man. A real man. Not a boy. Not someone who spends more time in the mirror doing his hair then me. Not someone who spends more time getting dressed than me. Or, heavens above, wears more make up than me.\"\n\nI burst into laughter again. \"Seriously? Guys do that nowadays?\"\n\n\"You'd be surprised. Then there are those who spend entire time worrying that he's going to offend me. I particularly hate white knights and so-called 'nice guys'. I can look after myself. I can understand wanting to defend me. Yes, I like to think I'm a somewhat modern woman but they often ask 'What do women want?' I'm quite simple. I just want a real man. Someone who'll protect and provide and, I tell you what, I'd spend my time keeping him happy.\"\n\n\"Feed him and fuck him, right?\"\n\n\"Spot on, Brucey.\"\n\n\"Sounds like you need a country boy, then. Plenty of 'manly' men around here, I guess, compared to city boys.\"\n\n\"Oh, definitely.\"\n\nI heard the tone again but thought nothing of it. Maybe she had her eye on one of the lads who worked for me already. If she told me who it was, I'd certainly try and introduce the two in a better setting. I picked good lads to work for me. They worked hard and were generally good boys. I knew they'd treat my niece the way she deserved to be treated. Though I'm not sure I'd want to know about them having sex in my house, particularly considering it had been a while since I'd had any.\n\nWithout a word, Emily got to her feet and bounced back down into the water, calling me to join her once again. I was ready to go to sleep but figured I could do with another dip. Thankfully she didn't come too close to me this time as I knew how my body was going to react if she touched me again. But we spent at least another hour in the water before we got out, dried ourselves off, dressed and, after packing our gear, mounted up and headed back to the house.\n\nIt had been a long day despite it being rather relaxing, so we didn't have much for dinner and eventually parked ourselves in front of the TV, leaving the lights off. It wasn't long before I was feeling rather sleepy as Emily practically snuggled into me in the end. I just wrapped an arm around her and gave her a cuddle. Eventually I could sense she was sleeping, noticing her eyes closed and her breathing rather regular so figured she was. Trying not to wake her, I gently lifted her off the couch and carried her into bed, making sure she was snug under the covers. I kissed her forehead and looked at her for a moment. Even while asleep, she had a little smile on her face. I took that as another sign that she was happy. Then her eyes opened briefly and the smile broadened.\n\n\"I love you.\"\n\n\"I love you too, sweetheart,\" I replied quietly, kissing her forehead again, \"Get some sleep. It's another busy week coming up.\"\n\nWalking to my own bedroom, I realised that was the first time she'd said those words to me since coming back. And certainly since she'd last been up to the farm. I understood the reasoning why. Apart from her brother, who lived even further away, I was the only family she had who cared about her. There was no doubt we were already close. I enjoyed having her presence in the house and I knew she was already enjoying life on the farm and the simplicity of life in general.\n\nIt was another long week of early rises and hours of shearing in the heat, leaving the pair of us exhausted once the sun went down. We'd always have dinner together and enjoy the nightly ritual of the veranda and a beer, but we'd generally head to bed early. It was probably the Thursday when I was reading a book and felt the need for a piss. I had to pass Emily's room on the way to the toilet and thought I heard something while on the way to the toilet. Desperate for a piss, I headed straight to the toilet. On the way back, I was sure I heard something again.\n\nI didn't want to invade her privacy but I was wondering what it was. Her door was slightly ajar, so I stayed out of sight and listened. There was no misunderstanding about what she was doing. I took a step back and thought to myself that I should just head straight to my bedroom. The other half wanted to listen. It was a conflict that was eventually won by the more carnal side, shall we call it. I stepped forward again and there was no missing the fact she was masturbating. And she was having one hell of a good time, from the sounds of it anyway. I felt my cock thicken but certainly wasn't going to join in. Well, I wouldn't do it at her door anyway.\n\nI listened for a good five or so minutes, to her moans and heavy breathing. And then she said something that completely startled me. She said my name. I don't know if she knew if I was there or not. But I certainly didn't misinterpret that. There was no-one else on my farm who shared my name. I was the only Bruce on the farm. I was the only Bruce in the nearest town. So, unless she knew a Bruce back in the city, she was thinking about me while masturbating. It was almost too much because part of me started to think very unsavoury thoughts.\n\nI quickly but quietly headed back to my room. I came no more than five minutes later, the only thoughts racing across my mind as I beat my meat being those of my niece. I felt disgusted with myself afterwards but also a little bit relieved. I wouldn't say there was any sort of sexual tension between us but, well, I'd certainly cracked a few erections around her while I was left with the feeling I was the sort of 'manly' man she looked for. I'll admit to feeling a little perplexed about everything. There was no missing that my niece was attractive. A beautiful young woman, as I'd told her before. But she was my niece and there are boundaries one doesn't cross. I certainly wouldn't want to betray the trust she'd put in me.\n\nBut, the other part of my mind was thinking that she clearly thought of me as some sort of sexual being, particularly if she was thinking about me while masturbating. Perhaps she was just lonely and needed a man to think about while she did so. The one thing I knew is that it was definitely not a subject we could discuss. I certainly didn't want to let her know I listened to her masturbate. I figured she did. Everyone did. But still...\n\nOn a Saturday, we only ever did a half day, everyone knocking off by lunchtime. If we had to do a full day, we only did light duties around the farm, making sure the important jobs were completed. Emily and I were busy clearing out one of the barns when I asked if she was interested in going into town that night.\n\n\"That sounds like fun. What sort of entertainment is available?\"\n\n\"You've got around half a dozen pubs. There's also the RSL, where you can get a decent feed, there are some pokies and they sometimes have a band on. If you're looking for some sort of nightclub, you're out of luck. You'd have to head to the city for that.\"\n\n\"Those have never interested me. Why don't we try one of the pubs and go from there?\"\n\nWe knocked off a couple of hours early because I figured 'Why the hell not?' We both showered and I figured, since I was going out on the town for the first time in quite a while, I'd dress nicely for it, putting on a good pair of jeans and a nice shirt. I even went all out and put on some aftershave, completing the look by wearing my good boots.\n\nWandering out into the front room, I was joined by Emily a few minutes later and she pretty much took my breath away, my mouth going dry as I looked her up and down. There was no missing the blush on her cheeks as my eyes simply devoured her. Sensible heels on her feet, long tanned legs, a summer dress that ended about halfway down her thighs, tight to her body and showing off her bust, and a bit of cleavage, and only thin straps over her shoulders, exposing her tanned skin. She wore faint make-up but she didn't really need it.\n\n\"What do you think?\" she asked, standing a little awkwardly as I stared at her in silence.\n\nI cleared my throat. \"You look gorgeous. I mean... You look stunning, Em.\"\n\nThe smile lit up her face. It probably lit up the entire room. She walked forward and kissed my cheek. Then I heard her sniff. \"Is that aftershave?\"\n\n\"Yeah.\"\n\nShe stepped back and crossed her arms. \"You think this is some sort of date?\"\n\nI noticed the smirk on her face. \"Not often I get to treat a young woman to a night on the town. Figured I should scrub up and smell nice at the same time. You ready to go?\"\n\n\"I am. Are you driving?\" I nodded. \"How will we get home?\"\n\n\"I'll try not to drink too much. The local coppers don't mind us driving a little over the limit. If we've both had too much, one of them will drive us home.\"\n\nShe raised both eyebrows in surprise. \"Really?\"\n\n\"Of course. Country coppers look after us locals. They certainly don't want to screw us over.\"\n\n\"I learn something new every day.\"\n\nWe arrived in town half an hour later, and it was busy. A couple of my favourite pubs were full to bursting. I wasn't sure if Emily wanted somewhere quiet, but she just grabbed my hand and we wandered into one of the better pubs in town. We managed to find a booth, not terribly surprised that Emily sat next to me, not across. We ordered some food, a couple of beers and spoke with each other, though we were visited by numerous people I knew. For some reason, whenever I introduced Emily, I never mentioned she was my niece. And she made no mention that I was her uncle. No-one said anything but I was left wondering if they thought she was my date. Considering I was easily double her age, that would certainly set tongues wagging, small country town and all.\n\nAfter dinner, we headed to a different pub which played a little music on a jukebox. Being a country town, the music tastes were simple. Either country, country rock, rock or blues. Emily surprised me yet again by choosing a few country tracks, then didn't surprise me by getting me to dance with her. I'm ready to admit that I have two left feet but, to my laughter, she wasn't exactly graceful either. No matter what, we were both having a great time, laughing away, and there were plenty of hugs being shared.\n\nWe ended up heading to a third pub, and then a fourth, before I suggested I'd better not keep drinking. It was already getting rather late but we were still enjoying ourselves, so we both switched to non-alcoholic drinks. I think it was probably midnight by the time we got back in my truck for the drive back to the farm. It was pitch black around us, the only illumination coming from the headlights.\n\n\"Stop for a moment,\" Emily requested after I'd driven a few minutes.\n\n\"Why? Are you sick?\"\n\n\"No. Just stop a moment.\" I brought the truck to a halt as she'd asked. \"Turn off the lights.\" I did that too as Emily opened her door and got out. I followed her, wondering what she was doing. Even though it was pitch black, it didn't take my eyes long to adjust and I could see she was looking up.\n\n\"They're so bright. So vivid. I didn't know there were so many.\"\n\n\"No light pollution out this way.\"\n\n\"It's beautiful,\" she whispered, wrapping an arm around me. I did the same thing in return. She eventually shivered and said, \"Take me home, Bruce.\"\n\nBruce. Not Brucey. Strange, but I thought nothing of it. The rest of the drive home took place without incident and in relative silence. After parking the truck, we headed inside and she grabbed a couple of beers out of the fridge, heading out to the veranda like normal. We continued to sit in contented silence until I was starting to feel a bit tired. I yawned to suggest I was ready for bed. She just looked at me and smiled.\n\nWe headed inside and stopped outside her room. \"I had a good time tonight.\"\n\n\"Me too,\" I said.\n\n\"Does the date get a kiss goodnight?\"\n\n\"Of course,\" I said, and I leaned down to kiss her cheek.\n\n\"No, I mean a real kiss.\"\n\n\"Em...\"\n\nShe laid a hand on my chest and, even in the darkness, I could read her eyes. \"Please kiss me.\"\n\n\"You're my...\"\n\n\"I know who I am. I don't care. And I know you find me attractive.\"\n\n\"Of course I do. But...\"\n\nShe took a step closer to me and ran a hand down my shaven cheek. I grabbed the hand and kissed her palm before she wrapped it around my neck. She then helped bend my face down to meet hers. She quickly licked her lips before mine met them. I knew I shouldn't be doing it. I knew it was wrong.\n\nBut, by god, it was good to kiss another female for the first time in what felt like years. The mind and body were on automatic pilot as I wrapped an arm around her waist and pulled her tight to my body. I was then surprised when she made the first move to introduce her tongue. I met her move and it wasn't long before I had her pressed against the wall and my erect cock pressed against her. I eventually had to break the kiss and meet her eyes, both of us breathing hard.\n\n\"We really shouldn't go any further,\" I whispered.\n\n\"But what if I want you to?\"\n\nI closed my eyes and tried to clear my mind of a thousand thoughts, all of them wrong. But most of them were also things that I probably would have wanted to happen too. The sexual tension between us had increased over the past week if not longer. \"Are you really sure about that, Em?\"\n\nShe kissed me softly on the lips. \"Yes. When you asked me about what man I wanted, I was describing you.\"\n\nHer mind was obviously decided already. But mine was in complete and utter turmoil. To make this sort of decision, to actually take the decision to sleep with my niece, of all people, required a clear head. \"Em, I need to think about this.\"\n\n\"Oh...\"\n\nI grabbed both her hands and squeezed them in reassurance. \"Emily, I can tell you've already made your mind up. This is what you want. But I need to think. Please give me that.\" Even in the darkness, I could sense the disappointment. Eventually she nodded. I released one of my hands and gently stroked her cheek before kissing her softly again. \"We'll talk about this in the morning when we have clear minds.\"\n\n\"My mind is already clear,\" she said quietly, almost a little defiantly. She reached up to kiss me again and I couldn't help lose control for another few seconds, the desire to have my way with her nearly overwhelming my self-control completely. But I again broke the kiss and let go of her. She seemed to understand that the moment was over. She walked to her door and opened it, not before turning back one last time. \"I know you heard me the other day when I was masturbating.\"\n\n\"Shit...\"\n\n\"Why do you think I said your name? I wanted you to know. I wanted you to come into my room.\"",
        "\"Em...\"\n\n\"Just so you know, I'm going to get naked and masturbate right now, thinking about you. Will you masturbate thinking about me? Will you join me in my room? I wonder...\" With that, she entered her bedroom, once again leaving her door ajar.\n\nI headed straight to my own bedroom, closing the door behind me. I sat on my bed and thought about things. A 19-year-old woman wanted me, a 40-something year old man. That woman happened to be my niece. Part of me needed to say no right away. It's just not possible. It's wrong. The other part of me, growing larger with each minute that passed, thought I should do it. She wanted me. I was warming to the idea of wanting her. But for our relationship to turn sexual? That's one hell of a big step considering we were related. We'd be breaking every taboo in the book.\n\nI didn't sleep much that night but rose early like normal. I was sitting in silence, drinking a coffee, my mind still processing the events of the previous night. I was soon joined by Emily, who made her own coffee before joining me at the table. She said morning and I grunted a reply, not to be rude but I wasn't sure what else to say or do.\n\n\"Any plans for today?\" she asked.\n\nI shrugged. \"None really except for the usual ritual of watching some football.\"\n\nI continued to just sip my coffee, not really giving her any eye contact, mostly because I didn't know what I'd do. \"Are you mad?\" she finally asked.\n\nI shook my head. \"No. I'm not mad. A little confused. No, very confused. But I'm not mad. I could never be mad.\"\n\n\"I meant every word.\"\n\n\"I know.\"\n\nI heard a sniff, finally turning my head to see her wipe a cheek. I moved my seat back and grabbed her hand. She got to her feet and sat on my lap, throwing her arms around me as I just hugged her. I was left thinking that she thought she knew what she wanted but was a little confused herself. When she'd settled down, our eyes met again and she returned a lopsided grin. I think I then surprised her by gently kissing her on the lips again. Only for a couple of seconds but it was long enough.\n\n\"Guess we should have that talk.\"\n\n\"Already?\" she asked in surprise.\n\n\"Didn't get much sleep so had a lot of time to think. Still thinking now, to be honest.\"\n\n\"What were you thinking about?\"\n\n\"The fact I would like to see what my niece looked like naked. What she'd look like on her knees. What she'd looked like underneath me. About how I'd spend every day trying to make her happy.\"\n\n\"Really?\" she asked almost timidly.\n\n\"I have only question, Emily.\" She nodded. \"Are you absolutely sure you want this? We're possibly crossing one hell of a line here. No-one can know about this. We keep this secret to our graves.\"\n\n\"One hundred percent,\" she stated adamantly.\n\nI nodded my head. \"Take a seat. I need to ask a couple of questions. We're adults here so I'm hoping...\"\n\n\"I'll answer whatever you need to know to make this work.\"\n\nShe met my eyes as she sat down again and I smiled, a grin from her returned. But she also knew I was being serious. And I knew I had to be blunt. \"You're 19 years old. Are you sexually active?\"\n\nShe blushed immediately. \"Yes. But... Only the one.\"\n\n\"You've only been with one man?\"\n\nShe scoffed. \"Boy, Bruce. He was my boyfriend at school. I eventually had sex with him just to see what the big deal was. He wasn't that good. I put out to keep him happy but I eventually ended it as...\" She trailed off but had a good idea why.\n\nI couldn't help laugh and she joined in with for a second, already defusing some of the tension. \"Fair enough. Are you on birth control?\"\n\nShe nodded. \"I am. The one decent thing my mother did for me was get one of those implants that you can get nowadays. I know it works because of said ex-boyfriend.\" She leaned forward. \"I know sex sucks for some men if they have to wear a condom,\" she added quietly.\n\n\"Like taking a shower with a raincoat on.\" She burst into a fit of giggles. \"It's true. But there's also a few good reasons why.\"\n\n\"I want to have sex with you,\" she blurted out.\n\n\"I know. I'll admit, the feeling is mutual.\" I watched the broad grin appear, but also her cheeks glow even brighter if possible. \"But we're taking this slowly, Em. You know how old I am. Half of my mind is saying this is a really bad fucking idea.\"\n\n\"But...?\"\n\n\"I know you love me in a way that's not the way a niece should love her uncle. I understand that. There's nothing I can do about it. You can't help the way you feel.\"\n\n\"Do you feel the same way?\" she asked hopefully.\n\nI looked at her in silence for a few seconds before I smiled and nodded. \"I love you in a way I definitely shouldn't.\" She sighed with relief before lowering her head, nodding. \"There is just one condition, and it's entirely in your hands.\"\n\n\"What is it?\"\n\n\"If, at any time, you want to end it, please tell me. Don't feel like you have to stay with me for no reason, particularly if your feelings for me change in any way. We're two adults. We obviously talk all the time. So if you're ever unhappy, tell me. I certainly don't want to take advantage. And no matter what, this will always be your home.\"\n\n\"You won't. I know what I want.\"\n\n\"I just want you to be sure.\"\n\n\"I've never been more sure of anything in my life, Bruce.\"\n\nWe finished the rest of our breakfast in silence before I told her I was going to take some time with myself outside, just to sort my mind out. She understood, saying she'd just watch a bit of TV. I headed out to the barn and sorted out the horses, unable to really concentrate on anything except what had occurred over the past twelve or so hours. My niece was a beautiful young woman. She had impressed me with how quickly she had adapted to life on the farm. She had a spark and enthusiasm that was infectious. Even old Mick was caught up by it.\n\nAnd she wanted me. Her uncle, twice her age and more, certainly starting to show a bit of wear and tear. A proper bloke, I guess, but I certainly wasn't romantic or anything. I was rather simple regarding the outlook of my life. And I definitely liked my life very simple. Getting involved with my niece, of all people, could potentially throw a real spanner in the works. But I'm not going to lie and say I didn't want her at the same time. Maybe some of that was to do with being a bit lonely. It was definitely to do with the fact she was gorgeous. I still couldn't wrap my mind around the fact that she wanted me, of all people. I'd probably never understand it.\n\nI headed back into the house for lunch to find Em already making some sandwiches. She turned as I approached her, looking at me in hope, rather than expectation. I figured I should put her mind at ease and make my feelings known as I grabbed her around the waist, pulled her close and kissed her. I felt the smile form on her lips for a second before we started a serious make-out session. It wasn't long until her hands were all over my body while I took a moment to feel her breasts, feeling her nipples harden immediately and she gasped I gently squeezed one.\n\nThen she lowered a hand to my cock and my breath caught. Then I shook my head. \"Not yet, Em. Not yet.\"\n\n\"Sorry.\"\n\n\"Never apologise. As I said, slow. I probably shouldn't have felt you up your tits.\"\n\nShe smiled. \"I'm not going to complain. About time I felt the hands of a real man grab them.\"\n\nI looked at my hands. They were calloused and scarred from years of hard work and graft. And that was despite wearing gloves half the time. I met her eyes, probably looking confused. She seemed to have this idea of what a man was that. I guess I fit her ideal. She grabbed my right hand and placed my palm against her left hand. To be fair, her hand was rather dainty compared to mine.\n\n\"One of your fingers is two of mine!\" she stated, before she lowered my ring and pinkie fingers, smirking at me, \"Imagine what you could do with just those two.\"\n\nI'll admit, I cracked up into laughter at that one, particularly her tone. I was beginning to gather just how much she wanted me to fuck her. She kissed me gently on the lips before turning around, continuing to make lunch. I grabbed us a couple of beers from the fridge, plus some packets of crisps from the cupboard, heading into the living room and flicking on the TV as I figured we'd still carry on the Sunday ritual.\n\nShe appeared a couple of minutes later with two plates of sandwiches, handing one to me before taking a seat on the couch as we watched the start of the game. We then sat back and drank our beers, Emily leaning into me, wrapping an arm around my chest. I think we were both talked out as we watched the game in near silence. I found it difficult to concentrate on the game at times, feeling her breasts press into me or her hand caress my chest, occasionally looking at me with a look in her eyes that I didn't misinterpret at all.\n\nWe made dinner together once the meal was over and, once that was eaten, carried out the usual ritual of sitting together on the veranda. We'd only had the single beer when she got to her feet, grabbed me by the hand and we headed inside. \"I'm going for a shower,\" she said, \"Then you can have one. Then we can go to bed.\"\n\nI smirked at the fact she was taking charge. Or, at least, she thought she was. I just patted her arse and told her I'd follow her in afterwards. I wandered into my bedroom and thought about where we would sleep. Would we start sleeping together, meaning actual sleep, not sex? To be honest, the idea of having just having company in my large bed was rather nice. I heard her bedroom door close but, once I was showered, she was sitting on my bed, waiting for my return. She was wearing a small vest and some very small shorts. She was about to learn something about me.\n\n\"I'll get in bed,\" she stated.\n\n\"So we're going to sleep in here?\" I asked, teasing her.\n\n\"Um, yeah. You've got the better bed.\"\n\nI laughed as I got ready for bed, switching on the bedside light before I joined her under the covers. I turned onto my side as she did the same thing. The first thing she did was run a hand up and down my chest. \"Real men have hair on there,\" she said quietly.\n\n\"It's not always a good thing. And it's genetic. There are some men who naturally don't have one.\"\n\n\"Well, I like it.\"\n\n\"You'd be disappointed if you didn't.\"\n\nShe laughed before she leaned forward and kissed me again. \"I also like your stubble,\" she whispered into my ear before hugging me. \"And you're naked,\" she added.\n\n\"I always sleep naked.\"\n\n\"I will too then.\"\n\nI laughed. \"You don't have to.\"\n\nShe pulled back and met my eyes. \"Don't you want to see me?\"\n\n\"Of course. But you don't have to change just because of me.\"\n\n\"I want you to see me.\"\n\n\"I'm not going to say no.\"\n\nHer top was the first thing to disappear very quickly and I know I definitely ogled her breasts. I didn't know much about sizes, but they were definitely a handful and perky. The wonder of youth. I guessed she may have been a C-cup, but didn't want to embarrass myself by appearing clueless and having to ask. Whatever the case, they were magnificent. She then kicked off the covers as she lowered her shorts. I noticed she kept pubic hair, though it was neat, wondering if she'd done that specifically for tonight. She then turned onto her side again to face me.\n\n\"What do you think?\"\n\nI looked down towards my crotch, as did she. Our eyes met again. \"I think that speaks volumes.\"\n\n\"Can I touch you?\" she asked quietly.\n\n\"Of course. But we're taking this slow, Em. I'm telling you right now. I'm not fucking you tonight.\"\n\n\"But you will eventually?\"\n\n\"Absolutely.\"\n\nFeeling her hand wrap around my cock was, well, let's just say I had to take a deep breath, though she was also cautious and curious at the same time. She pumped it a few times and, I swear, I nearly burst straight away. Her touch was delicate but I could also tell she was incredibly inexperienced. She leaned forward to kiss me as she continued to jerk my cock. It wasn't long before I had to tell her to stop.\n\n\"It's been a very long time since anyone else has done to me,\" I muttered.\n\n\"Are you going to cum?\"\n\n\"Definitely.\"\n\n\"You don't want to?\"\n\n\"Not yet.\"\n\nShe removed her hand and I took another couple of deep breaths, the urge to cum slowly disappearing. I kissed her again and gently stroked her side, wondering if she thought my hands were rough against her incredibly smooth skin. I gently moved away from her mouth and kissed her neck, hearing her breath quicken so I knew she definitely had an erogenous zone there. While I kissed her, I continued to stroke her body, brushing my hand over her breasts, feeling her incredibly hard nipples, running down her stomach before I brushed my hand over her pubic area.\n\nHer legs immediately parted and I could feel the heat from her sex. I didn't think that was possible but there was little doubt she was incredibly turned on. I placed a finger between her legs and it came away very wet. She moaned and shuddered at my touch.\n\n\"Oh my god,\" she stated, having to break my kiss.\n\n\"What?\"\n\n\"No-one's ever touched me down there.\"\n\n\"What? What about the ex?\"\n\n\"He was a pump and dump kind of guy.\"\n\n\"No foreplay?\"\n\nShe blushed. \"I'd give him the occasional hand-job. But he wasn't what anyone would call a considerate lover. He thought the idea of kissing me down there...\" She trailed off with a sigh, then looked me in the eyes. \"Another reason why I needed a real man.\"\n\nI smiled and gently ran my hand over her pubic area before I gently blushed her clit. She nearly fell off the bed at my touch before her lips crashed against mine. I figured I probably shouldn't do that again too quickly, so instead I gently teased her, running my hand up and down her thighs, in and around her sex before I inserted a finger. She moaned into my mouth at that as I gently pumped her. Even with just one finger, I could feel she was rather tight.\n\n\"Please don't stop,\" she said quietly.\n\nShe squeaked again as I moved my hand, inserted a second finger and I figured I may have found the right spot to touch. Upping the tempo, I made sure to move my hand in the right way as I stated to brush her clit. It wasn't long before, if it wasn't for the fact my hand was pumping into her cunt, people would have thought she was having a fit. She was being quiet for some reason, as she continued to exclaim 'Oh my God' numerous times, before she finally shuddered, the walls of her cunt clasping around my fingers as she came. She told me not to stop as I continued to pump my fingers into her, her lips barely leaving mine unless she needed to say something. She had a second orgasm rather quickly and I think nearly passed out as I slowed the pace of my fingers before finally stopping.\n\nI then shocked her by removing my fingers and, meeting her eyes, put them in my mouth. She actually blushed when I did that. \"I had no idea...\" she said, \"I've never had an orgasm like that... Well, no-one has ever touched me like that so...\" She kissed me, albeit gently. \"Thank you.\"\n\n\"I think you have a lot to learn.\"\n\n\"If it's anything like that, I'll be a very good pupil.\" I noticed the smirk and couldn't help but laugh. Then she looked down and noticed my still very erect cock. \"You haven't cum yet.\"\n\n\"It's fine. This was about you.\"\n\nShe stroked my cheek. \"This relationship won't be just about me. I will make you as happy as you make me.\" She ran her hand down my chest until she grabbed my cock. \"I'd like to give you a blowjob but I've never done it before.\"\n\n\"Your hand will be fine. You won't need to squeeze too hard. I'll let you know when I'm close.\"\n\nShe sat up as she started to jerk me off. Having someone else do it for me was a different experience. I'd had a few blowjobs over the years but no other woman had actually jerked me off. Emily soon had a good rhythm going, listening to my deep breathing, and I'll admit I started to talk a bit dirty. I noticed her blush as I told her how much I wanted to eat her pussy, then fuck her gently, then hard, then cum inside her.\n\n\"You'd do all that?\"\n\n\"Of course. But you were quiet while I helped you out. I wondered why?\"\n\n\"Whenever I used to, you know, we did it at his house. His family was always there.\"\n\n\"Now you can make as much noise as you want. Trust me, hearing a women scream and moan or talk dirty is a definite turn on. But, again, only if you're comfortable.\"\n\nShe just smiled. \"I'll remember that for next time.\" Then she smirked. \"Do you like my hand around your cock?\"\n\n\"Definitely, sweetheart. And I'm definitely going to cum soon.\" It wasn't a lie.\n\n\"Where will you, um, shoot?\"\n\n\"I generally use a towel.\"\n\n\"Would you like...\" She trailed off, blushing again.\n\n\"Would I like...?\"\n\n\"Would you like to cum on me? On my breasts? I've seen in movies...\"\n\n\"Do you want me to?\" She nodded. \"Okay.\"\n\nWe moved around until I was positioned where I'd cum straight onto her tits. She kept jerking me off and it wasn't long until I told her I was going to cum. She kept pumping as I shot a thick rope onto her chest, straight between her breasts, then another one that she aimed onto her breast, and another she aimed onto her other one. There was one more that landed more on her stomach before the fifth landed on her leg. I could only sit there on my knees, feeling sweaty as she actually giggled.\n\n\"That's so naughty,\" she said quietly, before she put a finger in of the streaks. \"I've never actually felt it before. It's warm.\" She noticed the quizzical look I gave. \"The ex always wore a condom despite my birth control. He was terrified I'd fall pregnant. What does it taste like?\"\n\nI couldn't help the laugh. \"I have no idea. I've never thought about trying it.\"\n\nShe then completely surprised me by scooping up a little bit of cum in a couple of her fingers, sniffing it, shrugging before looking me square in the eyes and putting it in her mouth. She didn't make a face as she swallowed. \"I've tasted worse.\"\n\n\"Do you want a towel to clean yourself up?\"\n\n\"I think we should go have a shower. I'm sweaty. You're sweaty. And now I'm covered in your cum.\"\n\nWe showered together, ensuring we were both very clean while also making out at the same time. She was absolutely gorgeous and I know I stared at her as she stood under the running water. And she knew I was staring. I swear she was ever more seductive, making sure washing herself down was erotic as possible. Even at my age, despite having just bust a nut, I felt my dick twitch a couple of times.\n\nWe dried each other off before we headed back to bed, Emily making absolutely no move to either get dressed or head to her own bedroom. There was already a new reality. And, I'll admit, I didn't mind at all. I lay back as she wrapped an arm around my chest and rested a leg between mine. She said I was warm, though she wasn't exactly cold herself. We didn't really say much. I just enjoyed the feeling of holding a young woman in my right arm. It was probably one of the best night's sleep I'd ever had.\n\nThe next morning over breakfast, I gently warned her that we had to act 'normal' around everyone, including Mick, who would be more liable than anyone to pick up on any subtle change in our relationship. It was going to be another long, hard week, but before we headed out, we shared another kiss and a hug before we turned back into 'uncle and niece.' I knew it was going to be difficult for both of us but it was the only way it was going to work.\n\nLife then took a turn for the strange on Thursday. I was supervising the shearing, Emily getting stuck in as usual, bantering away with the other lads, when my phone started to ring. To my utter shock, Mick laughing at me as my chin dropped, the name of my sister appeared on the screen.\n\n\"What the fuck does she want?\" I wondered aloud, \"I can't remember the last time I even spoke to her.\"",
        "\"You going to answer it?\" Mick asked.\n\n\"Guess I should. Though I already have a good idea what the call is about.\" I pressed accept. \"Hello.\"\n\n\"Is she with you, Bruce?\"\n\n\"Maggie! How delightful it is to hear your voice. It's been such a long time.\" Mick burst into laughter as I pulled a couple of faces.\n\n\"Don't be a fucking smartarse. Is she there?\"\n\n\"Is who here?\"\n\n\"Don't play fucking dumb with me. My daughter. Is she there?\"\n\n\"Might be. Why don't you call her?\"\n\n\"You think I haven't tried? She won't accept my calls. Won't answer my texts. But I know she's alive as I've asked her friends. She's been on social media.\"\n\n\"Maybe she wants nothing to do with you. She's 19 now, isn't she?\"\n\n\"She's still my daughter and I have a right to know where she is. Now are you going to answer the question or not?\"\n\nEmily could see I was on the phone and I gestured for to join me. I covered the speaker and told her it was her Mum and she wanted to know if she was with me. Emily simply said, \"Tell her. I don't give a shit.\"\n\n\"She is here. And she wants nothing to do with you.\"\n\n\"Put her on the phone, Bruce. Now.\"\n\n\"No, Maggie. I don't know who you're used to bossing around, but as far as I'm concerned, you can fucking do one. Emily is very happy living out here and has explicitly told me that she wants nothing to do with you or whatever dropkick fuckwit you happen to be fucking right now.\"\n\n\"How dare you!\"\n\n\"Maggie, I'm going to put this very simply. Fuck off and fuck you. Emily is a grown woman and can make her own decisions. Her decision is that she remains here living with me.\"\n\n\"If my daughter isn't returned to me, Bruce, I will come and get her.\"\n\n\"Just you fucking try it!\" Then I pressed end call and took a deep breath. \"Fucking bitch cunt. Fuck you. Fuck you. Fuck you.\" I put the phone back in my pocket and had to ball my fists as the urge to hit something was overwhelming.\n\n\"See what I mean?\" Emily said quietly.\n\n\"What did she say?\" Mick asked.\n\n\"She's threatening to drive out here to come and get her.\" I looked at Emily. \"I don't care if she brings a fucking army. You're not going anywhere unless you want to.\"\n\n\"I'm staying here.\"\n\n\"Do you think she'll come?\" Mick wondered.\n\nI looked at Emily. She finally nodded. \"She's a controlling bitch. She will hate the fact I've escaped her clutches.\"\n\n\"Jesus wept, this sounds like some sort of abuse,\" Mick stated, taking off his hat and wiping his brow.\n\nEmily met my eyes and returned a subtle shake of the head. I know what she meant as she had made one or two references to what had happened, though still hadn't told me the full story. I didn't ask as I had a good idea what. Whether she ever wanted to tell me the full detail was up to her and her alone. I managed to put the incident to the back of my mind and life continued as normal. We worked the rest of the week with Emily making no mention nor showing any concern about her mother appearing. If she did, we'd simply deal with it.\n\nDue to the hard work that left us exhausted at the end of each day, we didn't fool around much though we were already sharing a bed. Emily kept most of her things in her bedroom for appearances sake but, in the back of my mind, I thought it was obvious she was sleeping with me. By Friday, even though we were tired, there was no doubt we needed each other so, after dinner and the usual ritual of a drink on the veranda, we headed to bed.\n\nIt was still a little awkward as to who would make the first move, both of us still coming to terms with the new realities of our relationship. Understanding her inexperience, I figured I'd take the lead and I started to undress her, taking off her dress, leaving her in a bra and panties. I then lifted her up as she wrapped her legs around my hips as I kissed her, undoing her bra and freeing her breasts as I moved my mouth, clasping her right one in my mouth, smothering it in kiss, flicking her nipple with my tongue. It hardened immediately and she moaned rather loudly. I then did the same to her other breast, holding her up with one arm while using my free hand to play with her other breast.\n\nI lay her down on the bed, unwrapping her legs from around me and slid her panties down. I wasn't surprised that they were already wet. In fact, I was going to wring them as a joke but thought that may embarrass her, though her being wet was only a good thing, as far as I thought.\n\n\"What are you going to do?\"\n\n\"What do you think?\" I stated, getting down on my knees. I could smell her scent and couldn't wait to taste her. She actually got a little shy, perhaps concerned, as she closed her legs. I didn't want to force them open, so I got back up and leaned over her, making sure I smiled as I kissed her. \"Do you want me to?\" She nodded. \"So why did you close your legs?\"\n\n\"I'm a little worried I'll like it too much and pee.\"\n\n\"You won't. I'm not a woman, lay no claim to understanding the female orgasm, no man does. But I can make it happen, but you won't pee. It feels different, like when a man wants to cum.\" I shrugged. \"I think...\"\n\n\"I'm sorry. I must sound...\"\n\nI kissed her again. \"Never apologise. As I said, I'll teach you everything I can think of. We'll explore and learn about each other together. Okay?\"\n\nA small grin broadened as I moved my hand down towards her sex, her legs opening immediately. \"Good girl. Lie back and enjoy it. And make plenty of noise. Tell me what's good. Sex is a lot of verbal and non-verbal communication. I can read how your body reacts but tell me when something feels really good. I'll keep doing that.\"\n\n\"I like what you're doing now.\"\n\nI chuckled. \"I haven't even started yet.\"\n\nI kissed down her body, once again spending some time kissing and nibbling at her breasts, before I kissed down across her stomach, her scent wafting into my nose as I continued lower down. Her pubic hair also kept her scent and I looked her in the eyes as I inhaled. She actually giggled when I did that. \"You smell really good, sweetheart. I can't wait to taste you.\"\n\n\"Oh my God,\" she whispered.\n\n\"Do you want me to use my tongue?\" She nodded. \"Are you sure?\"\n\n\"Please eat me out.\"\n\nThat made me smile, hearing her use that exact phrase. And, naturally, I obliged my niece and savoured the taste of her pussy. She was absolutely soaking wet. I'd been with women who got wet when horny but my niece was something else. I drank her down like a man finding an oasis in the desert. I didn't leave a single piece of her sex untouched and listened to the noise she made. It took her a while to build confidence in making noise, whether it was to simply moan but she started to exclaim simple thing like 'Yes!' quite a lot and also 'Fuck that feels good.' I loved to hear that as I knew I was doing something right.\n\nListening to her breathing and seeing how her body was moving, I knew she was getting close so I switched and started to flick her clit. I was gentle at first but it drove her crazy straight away. \"Keep doing that! Keep doing that!\" I did as I was told and she started to tell me to go faster. So I went faster. I wrapped my arms around her thighs as she started to buck wildly in my face as she practically started to scream, glad the closest person was at least a couple of miles away. She pushed down into my face as I pressed a finger inside her to finish her off completely.\n\n\"Holy shit! Holy shit!\" she exclaimed, taking in deep breaths, as I continued to pleasure her. \"Aren't you going to stop?\" she asked with a giggle.\n\nI lifted my head for a second. \"Do you want me to?\" She shook her head. \"Then why would I want to stop?\"\n\n\"I love you.\"\n\n\"I love you too, sweetie. Now, lie back and enjoy it. And, if it gets too much, tell me to stop.\"\n\nShe continued to shudder and I wondered if I was perhaps doing too much. She did have another giggle, stating my stubble was starting to rub against her thighs, unaware that she had wrapped them around my head again. The only problem I currently had was the rock hard erection I really needed to do something with. Part of me really wanted to fuck my niece right now but I still didn't want to rush it. But I tried my best to ignore that as I continued to caress the pussy of Emily.\n\nEventually I felt a tap on top of my head, looking up to see her smiling. \"Okay,\" she stated, taking a deep breath, \"Okay. I don't think I can take any more of it for the time being.\"\n\nShe shuffled across the bed as I lay down next to her, wrapping an arm around and kissing her. She obviously tasted herself on my lips and I could feel how wet my chin was. \"You like doing that?\" she wondered.\n\n\"Real men eat pussy. Except if they're gay.\"\n\n\"Don't all guys, those who like women anyway, do it?\"\n\nI shrugged. \"Some guys don't. But I love it. Emily, all you would have to do is tap me on the shoulder and say 'Eat me' and I'd do it.\"\n\nShe laughed. \"I'll keep that in mind.\" She then kissed me and ran a hand down my chest before resting it on my cock. \"You're so hard.\"\n\n\"Because I'm incredibly turned on by the fact I just spent a long time with my tongue in the pussy of a 19-year-old. Most men my age would crawl over shattered glass for the opportunity.\"\n\n\"Would you like to stick that cock in me?\"\n\n\"I'd love nothing more. But not yet.\"\n\nShe kissed me. \"But I want you to,\" she said quietly.\n\nI took a deep breath. \"Are you sure?\"\n\nShe nodded emphatically. I wanted to fuck her. I had been prepared to wait but, if she wanted me, I certainly wasn't going to say no. She settled underneath me and looked at me with those wide eyes of hers. She looked so happy I didn't know what to think. She spread her legs as I positioned my cock at her entrance, taking another deep breath. I wasn't going to ask her verbally. I simply met her eyes. She beckoned me closer, kissing me gently. \"Please,\" she whispered, \"Please be inside me.\"\n\nI groaned so loudly as I slowly entered her that they must have heard me in the nearest town. I was glad she was so wet as she was incredibly tight. Once I was fully inside her, she wriggled, almost as if she was adjusting to my size. Then she laughed. \"You're so much bigger than I thought.\" Well, that's a compliment every man likes to hear. I kissed her as I slowly started to rock back and forth, simply doing everything I could think of not to fill her with cum after only thirty seconds.\n\n\"I'm not going to last long, sweetheart.\"\n\nShe kissed my cheek. \"That's okay, I've already had one hell of an orgasm. I think I owe you one now.\"\n\nI couldn't help but laugh, actually having to stop thrusting as we both descended into giggles. \"This is another thing, sweetie. Sex can be serious, it can be loving, it can be rough, but it should always be fun and enjoyable. There is definitely nothing wrong with laughter during the act. In fact, half the time it makes it better.\"\n\nShe just smiled and nodded as I started to gently thrust into her again. I had no idea when she last had sex, but being so inexperienced, I just wanted to ensure she enjoyed the act. She seemed to, as she soon closed her eyes and lay back, a smile on her face.\n\n\"Do you like my big cock inside you?\"\n\n\"Like you wouldn't believe!\"\n\n\"You like your uncle fucking you?\"\n\nShe opened her eyes and I noticed her blush. I stopped, wondering if I'd said the wrong thing. She obviously read my face and shook her head. \"No, it's not what you think.\" Then she smirked. \"How do you enjoy the warm pussy of your much younger, very innocent niece?\"\n\n\"Never had better.\"\n\n\"Well, I think you should cum inside it then.\"\n\nI couldn't help but kiss her. \"You've learned quickly.\"\n\n\"I'm just saying what I think. And I want you to cum inside me. I want to know what it feels like.\"\n\n\"Wrap your legs around me.\"\n\nShe did that as I grabbed a pillow, placed it under her butt and then thrust forward. \"Oh, fuck me!\" she cried, \"Oh fuck. Oh fuck.\"\n\n\"Good?\"\n\n\"Oh yes. Oh fuck me. Please fuck me.\"\n\nI think I now had permission to well and truly fuck my niece. I gave myself two minutes' maximum, if I was lucky, but considering my cock must have been hitting the right place, I'd be ecstatic if she orgasmed again. If she did, great. If she didn't, I don't think she would be too disappointed. With her legs wrapped tightly around me, I could still pump her hard and I simply savoured the feeling of her warm, wet pussy wrapped around my cock.\n\nMy timing was right. It was no more than two minutes before I warned her I was about to cum. She just wrapped her legs tighter and told me to fill her up. Obliging my niece, I groaned loudly, swearing to kingdom come that I'd fuck her every day for the rest of her life as I orgasmed. It was the best one of my life so far, feeling at least a half dozen spurts fill the womb of my niece. I then practically collapsed on top of her as she unwrapped her legs. I felt her hands wrap around me.\n\n\"Sweaty,\" she stated with another giggle, \"Hard work, was it?\"\n\n\"I'm not complaining,\" I stated, ready to get off her.\n\nShe grabbed me. \"No. Not yet. I like the feeling.\"\n\nIt took a while for my cock to actually completely soften, surprising myself again, though I just guessed it was the effect of the 19-year-old underneath me. But once it was completely soft, I finally moved, grabbing a towel, wiping myself down before offering it to Emily. \"Without a condom, it's messy,\" I explained.\n\n\"I remember sex ed at school,\" she stated, though kissed my cheek in thanks for caring.\n\nOnce we were all cleaned up, or as much as possible, we lay on our sides, simply looking at each other. I have no idea what I looked like but Emily looked happier than I'd ever seen. It surprised me that I'd ever have that effect on anyone, let alone a woman and in particular my niece. But life has a strange way of showing me that I know nothing about anything important. She moved a hand to my cheek and caressed my cheek, I assume feeling the rough of my stubble. I wondered what the inside of her thighs looked like. Probably rather red.\n\n\"We're definitely doing that again.\"\n\n\"I won't say no,\" I stated.\n\n\"Tomorrow night?\"\n\n\"We don't have to plan it. It will happen naturally.\" Then I paused. \"But, yes, definitely tomorrow night.\"\n\nIt wasn't long before she yawned from exhaustion, not just of the hard week of work, but I like to think the massive orgasm I gave her also helped. My eyes were already starting to close when I finally turned out the light and she moulded herself into my body as we went to sleep.\n\nThe next morning, I woke with the hardest morning wood I'd had in years. I usually get out of bed as soon as I wake up but I didn't this morning. My arm was still wrapped around Emily, her right arm around my chest, her right leg over my left. She was still fast asleep so I tried not to move and instead let her sleep. I'd probably only been awake ten minutes, unable to drift off because of my erection, when I felt her hand slide down my chest and trail a finger up my cock. I moved my head to face her, seeing her wide awake and a grin on her face. She reached up to kiss my cheek.\n\n\"Morning,\" she said quietly.\n\n\"Morning yourself,\" I replied, \"How do you feel?\"\n\nA broad smile appeared. \"I can't remember the last time I was this happy.\"\n\nI'll admit, my heart nearly burst at that. Not at just the words, but the tone. \"Life's that good?\"\n\n\"So good that I want to do something for you,\" she replied, gently grabbing my cock.\n\n\"Like what?\"\n\nShe leaned up to whisper in my ear. \"How would you like me to suck your cock?\" I was near speechless. I mean, I know I'd had sex with my niece the night before and I'd already gone down on her a couple of times. But the last time I'd had a blowjob? I had to search my mind. \"Do you want me to?\"\n\n\"Part of me wants to say fuck yes.\" I heard her giggle. \"But are you...\"\n\n\"I wouldn't offer if I didn't.\"\n\n\"Sorry, it's just... I haven't had an offer like that in years. You haven't done it before, have you?\"\n\nShe blushed and looked away, shaking her head. \"I never wanted to with him, considering how selfish he was.\" Then she looked at me again. \"But I'd love to try it with you, Bruce.\"\n\nShe manoeuvred until she was sitting on top of me and I could feel her warm cunt not far from my cock, the urge to grab her and thrust up filtering through my mind. My face must have been easy to read as she smiled at me, leaning down to gently kiss my lips. \"You want to fuck me again, don't you?\"\n\n\"Uh-huh.\"\n\n\"Maybe later. I want to suck your cock first.\"\n\n\"Okay.\"\n\nThe change in her attitude was already mind-boggling, though maybe some of it was just for show. We made out for a while as she lay on top of me. I moved my hands to her arse and may have used a finger to gently play with her pussy. She moaned into my mouth once or twice before she asked me to stop. She wanted to just do what she wanted this morning. I really couldn't say no.\n\nShe gently kissed down my stomach, ignoring the fact I was covered in fur, as she liked to joke, but it wasn't long until her head was down near my groin and she was looking at my cock, her right hand gently caressing it. I was thankful that I at least kept my pubic hair well-trimmed. Or, I had since Emily shared her feelings for me.\n\n\"I've seen in movies what they do but...\"\n\n\"It's okay, sweetie. As I've said, I'll give plenty of information about what feels good. You do what you think works and I'll certainly let you know.\"\n\nShe licked along my shaft at first and I groaned loudly, unable to remember the last time anyone had done that. She did that a few times, almost licking it like an ice cream as she gently jerked me off at the same time. Just the thought that my 19-year-old niece was currently pleasuring me in such a way was such a turn on I had to will myself not to finish too early. She then started to tongue the head of my cock before she sucked on just the first inch or so, I guess getting used to having something like my cock in her mouth and perhaps getting used to the taste. Considering I'd fucked her last night, I could only assume she could taste herself.\n\n\"That's good, Em. That's good.\"\n\nShe looked up at me and smiled before more of my cock disappeared into her mouth. I could feel her tongue at the same time and smiled. She knew what she was doing. Perhaps she'd read some tips? Slowly but surely, she continued to take a little bit more in her mouth until pretty much my entire cock disappeared and I felt her nose touch my groin. She looked up at me with just her eyes as she did so and I nearly came in her mouth then and there.\n\nI watched my cock reappear, it glistening with her spit, as she looked up at me. \"Good?\"\n\n\"Great, sweetie. But I'm not going to last much longer.\"\n\nShe smiled at that. \"Let me know when you want to cum.\"\n\n\"Do you want me to get a towel?\"\n\n\"Of course not. I'm going to take it in my mouth.\"\n\nI wanted to ask if she was sure, but I felt I shouldn't keep asking that. She sounded confident enough to do it so, if she wanted to, I wasn't going to stop her. Soon enough, her head was bobbing up and down on my cock as I felt one of her hands start to massage my balls. I almost smiled to myself when she did that, left thinking that she had definitely been reading up about what to do. There was one other thing I knew she could do, but figured she probably wouldn't do that. Or, at least, she might not yet, or I would have to suggest that and see how open-minded she was.\n\nI'd been holding back for a while but it was all too much. \"Honey, I'm going to cum.\" She didn't stop, just looked up at me with those beautiful eyes of her and tried to smile, despite my cock being in her mouth. \"I'm cumming,\" I groaned and soon I felt hot, sticky cum shoot from my cock into her mouth. She was surprised at the first shot; I think almost screaming but she kept her mouth almost suctioned around my cock as I felt a good four or five spurts. I then lay back down on the bed and almost wanted to start laughing, feeling a little giddy about what had just happened.",
        "Emily eventually hovered over my face with a grin though looking a little unsure. \"Was that good?\" she asked quietly.\n\nI gently grabbed the back of her head and brought her down for a kiss. \"That was wonderful, sweetie.\"\n\nShe blushed again. \"I read things to, you know, make it better.\"\n\n\"And practice makes perfect, right?\"\n\nShe giggled as she lay flat my chest again, feeling her hardened nipples against me as we made up. I moved my hands to cup her arse and once against my one finger to her pussy, gently teasing her. She smiled and kissed me hard. \"How long until you're hard again?\" she whispered.\n\n\"Honestly, with you, probably not too long.\"\n\n\"Good, because I would love you to be inside me again. But, for now, keep doing what you're doing.\"\n\nShe just stared into my eyes and my finger continued to diddle her, occasionally entering her, hearing her gasp when I did so. She was already very wet, and I'd occasionally bring my finger back and taste her. She blushed the first couple of times before surprising me the third time and put my finger in her mouth. Now that shocked me, my jaw falling open slightly.\n\n\"I just wanted to know,\" she stated with a slight shrug, before she moved my hand back towards her arse. She started to make those little moans I already loved, otherwise our mouths barely parted. It was gentle kissing as I fondled her, though I felt her body start to move against my finger. What surprised me even more was the fact I could feel my cock already started to harden slightly but I knew it would probably take bit longer.\n\nI wrapped a hand around her, holding her tight to me as I started to finger her faster. Her lips disappeared as she gasped and moaned loudly before she then kissed me, and kissed me hard, her tongue desperate for mine. But that barely lasted a few seconds before she had to moan loudly again.\n\n\"I need your cock inside me,\" she whispered.\n\n\"Just a bit longer, sweetie, but I'm not a young man anymore!\"\n\nShe giggled at that before, returning a rather seductive look, she sat up on me and reached behind, grabbing my cock. That pretty much did the trick, as a couple of minutes of her jerking me off had me hard as a rock once again. That impressed me alone considering. However, now that I was hard and she was roughly in position, she looked slightly unsure. So I gently gave her some instruction as she straddled my groin and positioned herself above my cock. I watched as the head of my cock then entered her, looking up to see her eyes closed but an enormous grin on her face, before she slowly lowered herself down until our groins touch.\n\n\"Oh god,\" she said quietly.\n\nShe then shuffled slightly, adjusting once again. I grabbed her by the hips but would let her control the pace. She opened her eyes and looked down at me.\n\n\"I love you, Bruce.\"\n\n\"I love you too, Em. More than you could imagine. You've made an old man blissfully happy.\"\n\nShe chuckled. \"You're not that old!\" Then she bent over as my hands moved to her arse. \"In fact, you're just the right age for a 19-year-old girl such as myself.\"\n\n\"The fact I'm fucking a 19-year-old is almost too much for my old heart.\"\n\nShe giggled again before leaning forward. \"It's even hotter that I'm your niece, isn't it?\"\n\nI thrust upward and heard the moan. \"Stop teasing,\" I gently warned, though not serious at all, \"Now, are you going to ride me or are you going to ride me?\"\n\nShe started to ride me, hands on my chest as she moved herself in such a way that even I knew I should be touching the right part of her insides, if you know what I mean. I didn't think I'd cum hard again so soon, despite being... hard, but there was no doubt she'd woken up horny, had taken great pleasure in sucking me off, and I know I'd got her even hotter as she lay on me.\n\nI gently started to thrust into her, hands holding her hips, hearing her gasp as I did so. She wasn't exactly bouncing up and down on me, she was more moving up and down my body. I moved one hand from her hip and moved it towards her crotch, looking for her clit. Just like she had, I'd done my fair share of reading over time and knew playing with that would help get her off. Once I gently touched it, she almost bounced off my groin.\n\n\"Too much?\"\n\nShe shook her head. \"Just a surprise,\" she breathed, \"Touch me again.\"\n\nI did as she requested and I gently started to play with her clit. Then she got loud, the first time she had done so since we started fooling around. Hearing her get loud was such a turn on that I just had to start properly fucking her, holding her tightly by the hip as I started to thrust faster. That caused her to get even louder. \"Oh, fuck. Yes. Oh, fuck me, Bruce.\"\n\nShe fell forward onto me, her lips looking for mine, as I moved my hand on her clit back to her hips. \"Just fuck me, Bruce. I'm going to cum.\"\n\nSo that's what I did. I fucked her hard and it wasn't long until she was making those sounds I already knew well that suggested an orgasm was close. She met my thrusts by lowering herself each time, the pair of us trying to kiss somewhat awkwardly, eager for all the contact possible. Then she placed her palms on my chests hard and started to properly bounce on my cock, then started to shout \"I'm going to cum. I'm going to cum.\" And then she came, and I felt my groin grow even wetter as she continued to bounce on my cock for at least a few more seconds before she finally collapsed on top of me, well and truly spent.\n\nI just wrapped both my arms around her, holding her tight, listening to her deep breaths, almost sure I could feel her heartbeat. We lay together in silence for a few minutes, eventually moving one of my hands to gently stroke her head. She finally looked at me, her eyes half-closed, I guess what I would call post-orgasmic bliss.\n\n\"That was awesome,\" she whispered.\n\n\"You've worn me out, sweetie. And we have work to do later!\"\n\nShe smirked. \"And you're complaining because...?\"\n\n\"No complaints at all. It was a great way to wake up.\"\n\nWe lay back for a few minutes, Emily making no move to actually get off me, before I suggested we should have a shower, get some breakfast and get on with the day. It being Saturday, we'd only work until a little after lunchtime anyway. Of course, we showered together, thankfully our appetites for each other sated for now, so we just washed each other down without it being terribly erotic. Emily then cooked us both breakfast, telling me to sit down whenever I tried to help.\n\nI found the week difficult. Not because of the work. The job was easy in comparison to having to keep our relationship secret. I think she found it easier than me, spending much of the day shearing sheep and enjoying the banter with the lads. As I supervised, I generally found my eyes wandering down her body, watching her muscles flex as she moved a sheep into place, the sheen of sweat across her body causing it to glow, her eyes usually meeting mine, full of mischief though obviously keeping her other thoughts at bay. We still talked as always, and made do with light touches on an arm, or the quick grab of a hand and a gentle squeeze.\n\nIt was only upon arriving home and shutting the door behind us that we could finally hug each other and cover each other in kisses. The nightly rituals continued. We ate dinner together, washed up, showered then sat on the veranda, enjoying a beer or two before we headed to bed. Feeling exhausted, we didn't always end up having sex. Usually we'd just end up cuddling together, enjoying the presence of the other. Hands would sometimes wander, and we'd at least get each other off, but after such a long day in the heat, intercourse was probably the last thing on our minds.\n\nOnce shearing season finished, at least for the current flock, we could all take a breath and I allowed everyone half a week to relax. Everyone still came into work to carry out the daily tasks, but it was simply to keep everything ticking over. Not feeling as exhausted as always, Emily and I made up for it and there was a period of at least five or six nights where we spent hours each night pleasuring each other. It was the most sex I'd had in one small period in years. That left me exhausted and probably grinning like a fool.\n\nI think it was probably about three months after Emily and I had started our physical relationship when I was outside, my head buried under the bonnet of one of my trucks as I tinkered with the engine, trying to figure out a misfire. I was no mechanic but I knew enough about engines to probably fix it. So involved in my work, I barely heard Mick approach, only knowing he was nearby when he cleared his throat.\n\nLooking up, he just nodded at me. \"Something on your mind, Mick?\"\n\nI continued to tinker as he cleared his throat again. \"Emily seems happy living here, doesn't she?\"\n\nI couldn't help the slight smile. \"She does. But she's told us what her home life was like. And what happened that night. She's loved, cared for and protected here. Not just by me. Those lads treat her right too. You too, Mick.\"\n\n\"Yeah, I do but, you see, there's something else, Bruce.\"\n\n\"What's on your mind, Mick?\"\n\n\"I don't claim to be a smart man, Bruce, and I don't know much about the ways of women but I'm not blind. I can see the way she looks at you.\" I almost dropped the spanner in my hand and tried to stop it shaking with nerves. \"That young girl, woman, is in love with you, Bruce.\"\n\nI chuckled, hoping I didn't sound nervous. \"Don't be daft, Mick.\"\n\n\"I'm being serious, Bruce. And...\" he trailed off.\n\nI finally looked at him. \"And?\" I wondered.\n\nHe removed his hat and ran a hand through his grey hair. \"Bruce, I'm your best mate and I need you to level with me here. Is there something going on between you and Emily?\"\n\nI chuckled again. \"She's my niece, Mick. Seriously, what are you asking here?\"\n\n\"The way that young woman looks at you, Bruce, is that of a woman who doesn't just love you, but is in love with you. And you look at her just the same. Oh, I'm sure you're doing your best not to show it, but I'm old enough to know the signs. My wife looks at me the same way.\" I finally stopped tinkering with the engine and turned towards him as he finally asked the question I feared. \"Bruce, are you sleeping with your niece?\"\n\nBefore I could reply, Emily came bounding out of the house, walking towards the pair of us. \"Lunch is ready,\" she announced as we looked her way. I noticed her face fall as no doubt mine was very easy to read. She came to halt a pace away. \"Something wrong, Bruce?\"\n\nI cleared my throat. \"Mick's just asked a question. I'm actually not sure what to say.\"\n\n\"What's the question, Uncle Mick?\"\n\n\"I've asked your uncle if he's sleeping with you. Is there anything you want to say, Emily?\"\n\nHer face gave nothing away as she stepped towards me, before taking my hand and kissing my cheek. I thought that would have been a dead give-away. I said nothing as Emily simply stated, \"I love my Brucey, Uncle Mick. Surely you realise how much he's done for me?\"\n\n\"Well, yeah, Em, but... the way you two...\"\n\n\"I'll be honest, Uncle Mick. My feelings for Brucey are probably a little more than what a niece should feel for someone, but that is on me only. Call it a stupid infatuation with an older man who has stepped up and done more for me than anyone ever. As for sleeping together, surely you don't believe Brucey would ever take advantage of me?\"\n\nIt hurt to hear she was almost taking any sort of blame for our close relationship. But I felt her squeeze my hand, almost as if saying 'It's okay.' I looked at Mick and felt guilty that he started to look... ashamed of what he'd asked. I looked at Emily as she returned my glance. I think my eyes pleaded for her to just move it on. She nodded slightly.\n\n\"Uncle Mick, I have a great deal of affection for Brucey. I love him more than anyone. But that doesn't mean we're doing things together that we shouldn't.\"\n\n\"I'm... I'm sorry.\"\n\n\"Don't apologise, Mick,\" I stated, \"Please don't. At least you care enough to ask if anything is going on.\"\n\nEmily just released my hand, stepped forward and hugged him. \"And I love you too, Uncle Mick.\" I saw the smile spread across his face as she squeezed him. \"You and Brucey have done nothing but look out for me, make sure I'm cared for and protected. I can never thank either of you enough.\"\n\nI think Mick was actually on the verge of cracking as he cleared his throat. \"You don't have to thank me, Em. And I think Bruce wouldn't hear of it either. I'm sorry. You just read things, then think you can interpret...\"\n\nShe squeezed him again. \"At least you care enough to ask. Brucey looks after me, Mick. That's all I want.\"\n\n\"Of course, kiddo. Of course.\"\n\nEm kissed his cheek before releasing him as Mick still wouldn't meet my eyes. I felt awful for lying, but there was no away that we could tell him the truth. But, for the first time in probably years, I stepped forward and hugged the old fella too. \"Don't worry about it, Mick. At least you're worried enough to ask,\" I stated quietly.\n\n\"It's only because I care about the both of you.\"\n\n\"I know, mate, I know.\"\n\nWe broke apart as I stepped back. Mick cleared his throat. \"Uncle Mick, why don't we have a barbecue tonight? We can just sit back and relax as a family.\"\n\nEm calling Mick 'family' would definitely have tugged at his heart-strings. He wasn't family by blood, but sometimes you don't have to be of blood to be considered family. Mick just grinned and nodded. \"That sounds swell, Em. I'll head back to the house and have June rustle up a couple of things. We'll be back later.\"\n\nMick headed off, leaving Em and I together alone. We waited until he'd disappeared before I turned to Emily. She'd played it so cool with Mick but her face when she turned to me was ghostly white. She just hugged me and started to cry. I could only hold her in my arms as she sobbed and wondered what the hell we were going to do.\n\n*****\n\nA/N -- When I wrote and uploaded this originally, I planned on just leaving it as a cliffhanger, as I simply didn't have any real plans to produce a sequel, simply because I wasn't sure what to do next. I might write a second chapter, but I don't want to make this into a long series."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "uncle",
        "niece",
        "uncle/niece",
        "incest",
        "taboo",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/farm-3"
}