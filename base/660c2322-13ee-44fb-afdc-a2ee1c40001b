{
    "title": "A Dragon's Tale Ch. 30",
    "pages": [
        "***I self-edit and admit editing isn't my greatest skill. I apologize in advance for anything I missed.***\n\n* * *\n\nCHAPTER 30: \"The only thing we have to fear, is fear itself\" \n\n* * *\n\nEthan slowly felt sleep leave his brain and smiled. He was finally back on the Argo with his wives where they all belonged. Somewhere deep down, he felt some irritation that Kendra wasn't right next to him though. He didn't understand why, nor why it aggravated him so much. The only thing he could think of was how his dragon side had seethed at her absence last night. The dragon wanted to drag her in here and force her to have sex with him via compulsion.\n\nHe pushed the thought away and focused on his surroundings, enjoying the simple pleasure of feeling his wives' naked skin....\n\nWait.\n\nAs he lay there with his eye closed, he realized that he was feeling something that he'd basically never felt before. Or at least not in his dragon body when waking up with his wives around him. He was feeling cloth pressed up against him, and it wasn't the sheets either. He cracked an eye open and a massive smile crept onto his face.\n\nIn front of him was a mess of red hair that slowly faded to blonde at the tips. Her blue eyes were hidden by delicate eyelids topped with long lashes, and her mouth was formed into the barest hint of a smile. Her breathing was slow, contented, and peaceful. She looked a vision of loveliness; a redheaded angel who was among the most delightful women he'd ever met.\n\nHe took a deep breath and let it out through his smiling lips. He was really going to enjoy having Rachel as his wife.\n\n*Good morning sir.* Alana's mental voice said directly to him, probably so she wouldn't wake his other wives.\n\nHe had never heard her so happy.\n\nHe lifted his head to see that the wood elf was cradled in Rachel's arms and had a magnificent smile on her face; a massive smile that was would also be appropriate for a post-orgasmic haze.\n\n*Morning princess.* He said with a wink, then added in a mischievous tone: *Whatever could be making you so happy this morning?*\n\nShe sighed. *I thought this day would never come; I've dreamed of it for so long.*\n\nHe chuckled, shaking the three of them slightly, then reached up and tucked a wayward lock of the redhead's hair behind her small ears. She had beautiful ears; very shapely and delicate.\n\n\"Hmm?\" Rachel muttered in her sleep, though she seemed to be waking.\n\n\"Good morning beautiful.\" He whispered into her ear.\n\n\"Goo' morn' 'gly.\" She mumbled.\n\nHe chuckled again. \"What brings you here?\"\n\n\"Hmm?\" She mumbled as she started to do that waking-yawning-stretching thing some people do when they wake up.\n\n\"Good morning Rachel.\" Alana said softly.\n\nThe redhead smiled contentedly. \"Good morning Alana...\" Her eyes flew open and she sat bolt upright, looking around wildly. \"Wha...? How...?\"\n\nEthan and Alana laughed, and the sound woke his other two wives. Beth and Taloni started yawning sleepily while Rachel looked completely shocked and out of sorts.\n\n\"How did I...?\" She looked around, then looked down and sighed -- probably in relief -- when she saw she was still wearing her red dress. The lower portion of her dress had ridden up a bit in her sleep, exposing the lower half of two very slender and shapely thighs.\n\n\"I'm guessing you sleepwalked.\" Ethan said between chuckles.\n\n\"Rachel!\" Taloni and Beth exclaimed at the same time. His two youngest wives dove forward, hugging her from both sides.\n\n\"I'm so glad you're here!\" Beth said beaming.\n\n\"I knew you'd make it!\" Taloni said with an equally exuberant expression.\n\nRachel glanced at the two of them, then Alana -- all three of whom were completely naked -- and then she went beet red and looked up at the ceiling, snapping her eyes shut as she did so.\n\n\"Ladies, you might want to cover up a bit; I think you're making Rachel a bit uncomfortable.\" He said when he noticed the likely reason for her embracement.\n\nThe two blondes disengaged and all three of his wives pulled the sheets up.\n\n\"Thank you.\" Rachel said as her face returned to a more normal color, resembling her hair tips more than the roots. She looked around and averted her eyes a bit. \"Sorry.\"\n\n\"For what?\" He asked.\n\n\"Um, for...\" She looked around at the bed, then at him.\n\nHe reached up and took both her hands. She didn't resist his gentle pull as he raised them up. \"Rachel, let me be perfectly clear; you never need to apologize for being in bed with me. Ever. Understand?\"\n\nShe nodded, still looking sheepish but also smiling.\n\n\"Now, as much as I love having you here, you should probably get going...\" He cocked his head to one side. \"...or maybe I should; anyway, it's bad luck for the groom to see the bride on the wedding day before the ceremony.\"\n\nAll the girls stared opened-mouthed at him.\n\n\"What?\" He asked.\n\n\"Bad luck to see the bride...\" Alana stared at him mouth agape.\n\n\"...on the wedding day before the ceremony?\" Rachel finished looking equally thunderstruck.\n\n\"Well that explains it; I've been wondering for ages.\" Beth nodded.\n\n\"Yes, it makes so much more sense now.\" Taloni added.\n\n\"What does?\" He looked around at them, feeling like he was completely missing something.\n\n\"If the groom doesn't see the bride on the wedding day before the ceremony starts, the marriage is doomed to failure; everyone knows that.\" Alana said like she was explaining that two plus two equals four.\n\n\"If that never happens on your world, no wonder they have such a high divorce rate.\" Rachel said in much the same manner as a person who'd just realized that water was wet and deserts were dry.\n\nHe burst out laughing.\n\nThe girls all stared at him.\n\n\"Culture shock.\" He finally said when he'd stopped laughing. \"Why is a marriage doomed if they don't meet before the wedding?\"\n\nAlana opened her mouth to respond, then closed it and cocked her head to one side. \"I don't know.\"\n\n\"It's an old custom.\" Beth explained. \"From back when the couple would often meet on the wedding day. It gave the groom a chance to inspect the bride and make sure he wanted to marry her.\"\n\n\"And they often pray together so Illuminar will bless their marriage.\" Taloni added.\n\nBeth gasped aloud. \"Ethan, you never told us about your meeting with Illuminar!\"\n\n\"You didn't?\" Rachel asked looking very surprised.\n\nHe shook his head. \"I was waiting until I could tell all of you together... including you.\"\n\n\"Aww.\" Rachel teared up slightly.\n\n\"Come here.\" He said opening his arms, which she fell into.\n\n\"...but what happened with Illuminar?\" Beth prompted impatiently.\n\nHe glanced at her, the blonde's boundless curiosity getting the better of her as usual. She was so cute when she was curious, especially with the way her 'curious face' made her dimples stood out.\n\nHe smiled at her. \"Maybe not the time angel; it is Rachel's wedding day.\"\n\nShe nodded, averting her eyes as she did so. \"I'm sorry Dominus.\"\n\n\"No need to be sorry.\" He replied kindly. \"I'm just saying that I don't need to explain now.\"\n\n\"Actually, I'd like it if you did.\" The redhead said.\n\n\"Oh?\" He let go of her slightly to look into her beautiful blue eyes.\n\n\"I'm really curious about what happened and...\" She paused a second, seemingly searching for more reasons. \"...and I'll be better able to concentrate on the wedding if I know.\"\n\nHe raised an eyebrow.\n\n\"Please?\" His teenaged bride-to-be asked.\n\n\"Okay.\" He nodded, thinking that there was probably more too it, but not wanting to push right now. Fortunately, his stomach rumbled moments later. \"But let's make it after breakfast.\"\n\n* * *\n\n\"I can take that bowl if you're done.\" Sarah said pleasantly when she saw that one of the inn's customers had finished his breakfast.\n\nThe man mumbled a word of thanks and held it out to her. He was one of the two types of patrons that she really liked. The first type was like him, who were polite and minded their own business. The second type were like Selene, and they were all too rare. They were the pleasant ones who treated her nicely and were kind to her. She wished they had more of them. Sadly, many of the people who came through seemed nervous and unsure about her. She was pretty sure it was because word of her problem had spread far and wide over the years.\n\nShe let her shoulders slump as she went to the next table, where a young woman was sitting. She was clad in a white linen dress and something about her seemed to glow slightly. Her heart shaped face was the picture of perfect femininity, and something about her just seemed warm and relaxing; like a flickering candle shining in a dark room.\n\n\"Oh, thank you.\" The woman in white said when Sarah collected her now empty bowl, which she had already pushed away from herself. She had treated Sarah perfectly and not given her so much as a suspicious look.\n\n\"You're welcome.\" Sarah replied with as much sweetness as she could muster.\n\n\"Are you okay?\" The luminous woman asked. Her voice had a comforting, almost musical quality about it.\n\nI'm... I've been better.\" She admitted.\n\nThe woman pulled a chair out so Sarah could sit next to her. \"Do you want to talk about it?\"\n\nThe innkeeper's daughter hesitated a moment, and then shook her head. \"I have chores to do.\"\n\n\"Okay.\" The woman in the white dress replied kindly. \"Well, I hope things get better for you.\"\n\n\"Thank you.\" She smiled, her dark mood lifting slightly at the other woman's kindness. She added the luminous woman's empty bowl to the other one she was carrying and took them into the kitchen. She started humming a Hymn to Illuminar as she washed them to try and cheer herself up. She wasn't sure why, but that usually seemed to cheer her up.\n\nThe singing eventually morphed into a prayer. \"Illuminar -- blessed be you -- thank you for sending Selene here. Please keep her safe and, if it's not too much trouble, I would really like it if she could come back for my wedding. I know you're busy with more important things, but I would really like her to be there when I marry Rindrin.\"\n\nShe looked at the bowls as she set them down to dry, trying not to think of her wedding day.\n\nRindrin wasn't a bad guy, and Sarah was grateful that he was willing to marry her. She had no ill feelings for him, but wasn't attracted to him either. She would try to be the best wife she could of course, but wished it would be with a man she loved. At least she would be married though; she had thought her problem would prevent that for the longest time.\n\nFortunately, it wasn't likely that her problem would manifest if she was at home being a housewife. She wanted to venture out into the world and see what it offered, but that wasn't a good idea with her problem. She didn't want to hurt anyone else because of it; she'd hurt too many people already. At least being at home, and maybe being a mother, nothing bad would happen. She smiled, and thought about that for several moments.\n\nShe was shaken from her reverie by movement outside the window.\n\nHmm.\n\nThat was odd.\n\nAt least dozen horses were cantering into the little outpost and her eyes went wide at the unusual sight. She ran to the back door and opened it to get a better view. It was indeed over a dozen horsemen riding in close formation. All were clad from head to toe in chainmail, and each had a conical helmet to add further protection to his head. Each had an arming sword at his side, some had seven-foot short spears, and all of them also carried a heater shield.\n\nIn the center of the formation was the only man not clad in chainmail. Instead, he was wearing the finest robes that Sarah had ever seen. She wasn't sure, but guessed that they probably cost more than what the inn made in a year. He had a sword at his side also and the hilt had a large gemstone embedded in it that was probably worth enough to buy the outpost and everything in it.\n\nShe wondered who he was for a moment...\n\nThat's when she noticed the banners.\n\nThe lead horseman and the trailing horseman each had a handheld flagpole affixed to his saddle and held steady by one of the rider's hands. The flag had a green background with a stylized white mountain in the center. That was the flag of...\n\nHer mouth fell open as her stomach clenched.\n\nShe could feel the color draining from her face\n\nWhat was he doing here?\n\nShe turned and fled back inside, running to find her father. He needed to know. Neither of them had ever met the man before, but it couldn't be a good sign that he was here.\n\n\"Father!\" She called loudly as she entered the main room of the inn, startling some of the guests.\n\n\"What?\" He said in his usual defeated tone.\n\n\"Father, soldiers are riding into the outpost; it's Lord Farbrottan and his men!\"\n\nEveryone in the room froze.\n\nNo one moved for several seconds as everyone's eyes went wide.\n\nThen there was a mad scramble. Everyone stood up at once, leaving everything behind and starting for the door. They all stopped when they heard the horses thundering to it and saw them come to a stop through the front windows. All the patrons turned as one towards the back door, but -- judging by the whinnying of horses -- that too appeared to be covered by the soldiers.\n\nIt appeared the inn had been surrounded.\n\nThe various travelers seemed unsure what to do, and then all of them fled to the communal sleeping area; retreating as far away as possible away from the new arrivals.\n\nSarah took a deep breath and let it out slowly.\n\nShe had to keep calm. That was the only thing that would do. If she got too scared then... she didn't even want to think about the trouble that her problem would cause. Unfortunately, her present situation was going to make that incredibly difficult.\n\nShe gulped as the inn's door started to open.\n\n* * *\n\nEthan swallowed down the last bite of breakfast and washed it down with swig of water. The entire crew of the Argo was sitting around the fire, plus Selene and Kendra. Anthiel, Serif, and Raklan were fairly quiet this morning, though the latter occasionally let out a loud belch. Rachel was on Ethan's right side with Alana next to her; and Beth on his left side with Taloni next to her. The Fey teen was also sitting next to Kendra, who still looked wary and a bit uncomfortable.\n\nSandwiched in between Kendra and Anthiel was Selene, the FBI agent who'd caused so much trouble for them on Earth. He couldn't help but be curious about what she was doing here. She was clearly sharp and perceptive, but for her to be here in the Ten Kingdoms...\n\nHmm.\n\nIt was definitely odd.\n\nThe woman was gorgeous; drop dead gorgeous and she had wearing a very plain, light grey dress, no makeup, and her silky, caramel-colored hair wasn't styled either. Just as she was, she could easily do well in a modeling competition. She was an inch or two taller than he was in normal posture at maybe 5' 9\", but thanks to his Dragon anatomy he could easily stand up taller and still have an inch or two on her.\n\nShe was slender without being too thin; her breasts were full without being too large; her legs were long, slender and toned; and she had a perfect hourglass figure. She had the classic look of a Brazilian supermodel with just a hint of oriental ancestry; Japanese maybe. The combination made her look very exotic in addition to being jaw-droppingly beautiful.\n\nHe found himself wondering why a woman who was that attractive had decided to become an FBI agent. With her looks and smarts, she could've done almost anything. It was interesting that the FBI was her chosen profession in light of that.\n\n*She is beautiful, isn't she.* Alana thought to them all.\n\n*She is.* Taloni said wistfully.\n\n*I wish I had her... well, her everything.* Beth added.\n\nAll three sounded a bit dejected.\n\n*Ladies, I'm not blind and she is gorgeous; but no one is more attractive to me than you girls.*\n\nThey all sighed as one.\n\nRachel, Kendra and Selene all looked at them.\n\n\"It takes some getting used to.\" Anthiel explained with a smile. \"He can talk to them telepathically and sometimes they talk amongst themselves in public, and then react without us knowing what was said.\"\n\n\"What's that like?\" Selene asked.\n\n\"Amazing.\" Alana said at the same time that Kendra said \"Annoying.\"\n\nAlmost everyone laughed. Even the corners of Kendra's mouth twitched up a bit.\n\n\"So, Agent Dawson,\" Ethan began, intending to ask about her story.\n\n\"Not agent anymore.\" She replied with a hint of bitterness in her voice.\n\n\"Oh?\"\n\n\"Things got rough for me right after you left Earth.\" She shook her head with an ironic smile. \"I never thought I'd say a sentence like that before... what? Three weeks ago? That's about when I saw you leave Earth right?\"\n\n\"About that.\" He nodded.\n\n\"Twenty two days.\" Rachel confirmed.\n\nSelene shook her head in disbelief. \"It's still so weird.\"\n\n\"It does get easier.\" He offered.\n\n\"I hope so.\"\n\n\"So Miss Dawson, how'd you end up in the Ten Kingdoms?\" He asked.\n\n\"It's a long story, and I wouldn't want to interrupt the pending nuptials.\" She nodded towards Rachel, then frowned. \"Isn't it bad luck to see the bride on her wedding day?\"\n\nEthan and his wives laughed, and then they explained about the different custom here in the Ten Kingdoms.\n\n\"Huh, weird.\" The Brazilian woman shrugged when they finished.\n\n\"I know, right?\" Ethan nodded.\n\n\"Um, I don't mind if you tell the story.\" Rachel said to Selene. \"I'm rather curious myself and we have plenty of time.\"\n\nHe looked at the redhead, but she didn't meet his eye.\n\nHmm.\n\nWas she stalling on purpose? She certainly seemed ecstatic about being bonded to him, so it wasn't that. The only thing that he could think of was the issue she'd brought up before, about how their relationship would work since she didn't want anyone telling her what to do. That was probably what it was; she was probably stalling so she didn't have to deal with that.\n\nHe was shaken from his reverie by the Brazilian woman though.\n\n\"While we're on the topic of stories.\" Selene interjected. \"I'd love to hear how you started a human on Earth, came here, apparently became a dragon, disguised yourself as a human, and then went back to Earth; especially how you got back to Earth.\"\n\n\"You want to go back?\" Beth asked.\n\n\"Definitely.\"\n\n\"Serif, Raklan.\" Anthiel said. \"We're going to have a crew meeting downstairs.\"\n\n\"What? Why?\" Raklan rumbled. \"I'm comfortable right here.\" He said while his eyes flicked to Selene's body.\n\n\"Now.\" Anthiel said firmly.\n\nThe hulking crewman scowled. \"But we've never had a--\"\n\nSerif cleared his throat.\n\nThe larger crewman started grumbling under his breath and then stood up.\n\n\"But Anthiel, what about the Argo?\" Taloni asked. \"Doesn't someone need to mind the helm?\"\n\n\"Yes.\" The high elf looked pointedly at the Fey. \"And fortunately she's becoming a proficient airship pilot who is more than capable of checking our heading every half hour.\"\n\nTaloni gulped as her wings fluttered nervously.\n\n\"You'll do fine honey; you can handle it.\" Ethan assured her.\n\nTee still looked nervous, but she nodded. Anthiel, Serif, and Raklan all went below decks, leaving Ethan, Alana, Beth, Taloni, Rachel, Kendra, and Selene sitting on the around the coals that remained from breakfast fire. Ethan couldn't help but think that he was surrounded by beautiful women, and enjoyed the feeling very much.\n\nEven Kendra -- who probably had never taken any pains on her appearance -- had a 'girl-next-door' kind of beauty that was subtle, but seemed to grow over time. Her jet black hair wasn't tied back this morning, and it fell in thick waves down just past her shoulders. Her eyes were deep brown, if a bit mistrustful. She had a vaguely Latina look about her, though perhaps with hint of Mediterranean that complimented it. Her skin looked heavily tanned, but healthy nevertheless.\n",
        "\"So, how do we do this?\" Selene asked.\n\n\"You tell us your story, and then we'll tell you ours?\" Ethan suggested.\n\n\"Works for me.\" She replied.\n\nHe was a bit surprised that Kendra was still sitting there and hadn't already headed for the hills, so to speak. The dragon huntress had glanced at her airship occasionally so he knew it was on her mind, yet she was still sitting with them.\n\nCurious.\n\n* * *\n\nSarah felt her stomach clench as the soldiers piled in, swords drawn. They looked around and Sarah started to feel her fear rising, and with it...\n\nShe gulped.\n\nNo.\n\nNot now.\n\nNot with Lord Farbrottan here.\n\nThe soldiers started moving through the inn, clearly checking for ambushes or men who were lying in wait. They weren't very subtle about it either, carelessly knocking aside anything that got in their way. They rounded up everyone in the inn, including Sarah and her father, and put them in the center of the main room, guarding them like prisoners. The soldiers were clad head to toe in chainmail, and each had his sword drawn.\n\n\"Hey.\" A musical voice said as comforting hand rested on her shoulder. She looked back and saw that the woman in white was standing behind her. \"It'll be okay.\"\n\n\"I hope so.\" Sarah whispered. If she couldn't keep her fear under control, it would be bad.\n\nVery bad.\n\n\"What's your name?\" The luminous woman asked.\n\n\"Sarah.\"\n\n\"My name is Gabriella; I'm pleased to meet you.\"\n\n\"Likewise.\" The girl managed to reply, and even managed a tiny smile. For some reason, she could feel her fear being held at bay while she talked to the luminous woman, which was good. If it stopped being held back... She didn't even want to think about it.\n\n\"What's your favorite hymn from the Book of Light?\" Gabriella asked.\n\n\"The seventy seventh one.\"\n\n\"Let's say it together quietly.\" The luminous woman said as the soldiers continued their search.\n\n\"Um, Illuminar is my Shepherd, I shall not fear.\" She said with a trembling breath. She didn't even want to even consider what would happen if she let her fear get the best of her. She didn't want these soldier's blood on her hands, and what they might do to her father afterward in retribution...\n\nShe didn't want to think about it.\n\nShe faltered in her quotation.\n\nGabriella took it up. \"I when lie down to sleep, Illuminar protects me. When I rise up, He sustains me.\" She prodded Sarah gently to continue it.\n\nThe girl took a deep breath. \"I will not fear, though ten thousand assail me on every side.\"\n\n\"Area clear!\" One of the soldiers shouted.\n\n\"When I walk in death's shadow, I will fear no evil because Illuminar is with me.\" Gabriella whispered softly into her ear.\n\nSarah whimpered, but somehow she hadn't lost to her fear yet; her problem hadn't manifested...\n\n...yet.\n\nIt was a minor miracle.\n\nThe door banged open and Lord Farbrottan walked in. He was fairly average height, but thin and slightly seedy looking despite the finery he wore. He had frown lines seemingly etched into his face and he wore a scowl that looked as natural on his face as mud on a pig. His eyes were shifty too, like he was constantly wary for new threats that might appear out of nowhere.\n\n\"Where's the innkeeper's daughter?\" He barked.\n\nAs one, every patron in the inn stepped away from Sarah except Gabriella, who took her hand and gave it a gentle squeeze. For some reason, the guards didn't seem to notice the luminous woman.\n\n\"If you trust Illuminar and don't fear; it will all turn out fine. I promise.\" She said with absolute conviction.\n\nGabriella didn't step back.\n\n\"Chain her.\" Lord Farbrotton commanded.\n\nSarah whimpered as one of the men came forward and roughly pulled her away from the others. Another guard produced two sets of iron manacles and fastened one around her wrists and the other around her ankles. They had done so around one of the pillars that held the roof up, so she was well and truly trapped; chained to the building itself.\n\nHow she hadn't already lost it to her problem was completely beyond her. At every other point in her life, she would have already because of the fear.\n\nShe shuddered.\n\nOnce she was secured, Lord Farbrottan seemed to relax slightly. \"Now, it was reported that associates of the fugitive dragon were seen here. Who knows of this?\"\n\nNo one spoke.\n\nThe lord scowled deeper and rested his hand on the pommel of his jewel-encrusted sword. \"If your tongues don't work, then you have no need of them.\"\n\n\"I...\" Sarah started to say, but he rounded on her.\n\n\"Silence demon!\" He spat at her as he drew his sword and pointed it at her. \"Or your next word will be your last. I'll not have those who cavort with Saidow spawn muttering foul spells around me.\"\n\nShe whimpered, but otherwise remained silent.\n\n\"Now, who knows of the fugitive dragon?\" He said, rounding on the other patrons, and not bothering to sheathe his sword. All looked extremely afraid except for Gabriella. She was completely ignoring him, and instead keeping her gaze on Sarah. For some reason, that was really comforting and made her feel less afraid.\n\n\"Two of his wives were here about three days ago.\" The innkeeper finally said.\n\n\"What of the dragon himself?\"\n\n\"He was never here.\"\n\nLord Farbrottan scowled even more deeply as he regarded Sarah's father. The girl felt herself starting to grow even more fearful, and knew what was would come next if that continued: her problem would manifest. A part of her didn't even mind. A part of her felt safe because she knew that they couldn't hurt her once she lost control... But those around her were a different story.\n\nAnd the repercussions for attacking a lord -- both for her and others -- were too horrible to entertain.\n\nAs her fear rose, Gabriella caught her eye and spoke in a gentle, relaxing tone that no one else seemed to hear. \"Don't fear; trust Illuminar and it will all turn out fine. I promise.\"\n\nShe held on, but barely.\n\nFinally, Lord Farbrottan seemed to decide that the innkeeper was telling the truth. \"Why didn't you detain the fugitive's wives? They're wanted as well.\"\n\n\"Look at me my Lord.\" He replied, indicating his haggard and overweight body. \"I'm no match for seasoned warriors.\"\n\n\"Then your daughter? Why didn't she?\" The Lord snapped back. \"The girl's unholy alliance with Illuminar's enemy surely gives her the power.\"\n\n\"Her... her condition comes and goes. Most of the time, she's like any other girl.\"\n\nFarbrottan looked down his nose at the innkeeper, glaring derisively. Finally, he glanced at two of the soldiers. \"Flog him, and then remain at this inn until the dragon returns and slaughter the beast. I want reports every week or it'll be your heads.\"\n\nWith that, he sheathed his sword, turned on his heel and strode out, taking the entire entourage with him; minus those two soldiers. Once he had left, the soldiers turned towards the innkeeper.\n\n\"Sorry old man, but I got my orders.\" One of them said.\n\n\"Let me get the whip.\" The other said, turning and walking out through the door.\n\nSarah could feel the fear and fury burning within her. Out of the corner of her eye, she saw Gabriella looking at her, offering a way to calm down.\n\nBut her father was in danger...\n\nShe glanced at the luminous woman.\n\n\"Trust Him and it will all turn out fine. I promise.\" Gabriella flicked her eyes up towards heaven, and no one else seemed to hear her speak.\n\nSarah hesitated, wanting to trust Illuminar with everything in her, but also fearing for her father. He wasn't in the best of health and if they truly did flog him...\n\nHer lip began to tremble.\n\n\"Keep your eyes on me, and your trust in Him.\" Gabriella said kindly and gently, but firmly.\n\nSarah swallowed, wanting to keep her eyes on the luminous woman's calming presence -- wanting to remain calm so her problem didn't manifest -- but that wasn't what her father needed right now. He needed to be protected and her problem provided a way to do that. It had helped her in situations like this before, and it could again.\n\n\"That's not a good solution.\" Gabriella said while slowly shaking her head. \"It will only cause more pain in the end.\"\n\nSarah hesitated, feeling her fear and anger bubbling up to the point of overflowing. She somehow knew that keeping her focus on the luminous woman would keep her problem in check. It would restrain it and prevent it from manifesting. She wanted to keep it from manifesting, but she was worried about what would happen to her father if she did.\n\nThe door opened and the other soldier returned.\n\nBehind him, she could see and hear the other soldiers cantering out of the outpost; leaving as suddenly as they'd come. The returning soldier was carrying a cat-o-nine-tails. It was a short handle with nine leather straps and little metal bits of at the ends of them. They metal bits would dig into her father's flesh, cutting and scarring him. The wounds might get infected, and if they did...\n\nHer breath hitch as she looked at Gabriella, who was slowly shaking her head. \"Don't do it. Your father will be fine; keep your eyes on me and your trust in Him.\"\n\nSarah swallowed, her fear reaching critical mass. If she didn't do something now, her father would be flogged. If she kept her eyes on Gabriella, she could stay calm and restrain her problem... but then her father might not survive. He'd been so good to her and she... She swallowed hard. She couldn't let anything happen to him. A tear ran down her cheek and she felt a profound sense of sadness as she finally decided.\n\nShe let her eyes slip from Gabriella.\n\nHer fear bubbled over and it started.\n\nHer hands balled into fists and she wrenched them apart. The iron chains warped and then broke; being woefully inadequate to resist the supernatural strength that now coursed through her. Her last thought before she completely lost control was a prayer to Illuminar that He would forgive her.\n\n* * *\n\n\"Seven!\"\n\nEthan winced as his wives plus Kendra and Selene all chorused the same word at the same time as he reached that point in recounting his conversation with Illuminar.\n\nSelene had told her story, and then Ethan and company had told theirs. For some reason, he hadn't felt like it was a good idea to hold anything back. He wasn't sure why, but he hadn't. Selene and Kendra had gotten as much as he could remember, helped by his wives. Kendra had even chimed in in a few places, supplying a few details he hadn't noticed.\n\nIt was odd that the dragon huntress was taking part.\n\nShe seemed to have relaxed a bit and appeared to be enjoying sitting around with everyone, though for some reason she appeared to be quite conflicted too. The corners of her mouth even twitched upwards occasionally, but mostly her face was a determinedly unreadable mask that nevertheless slipped rather often.\n\n\"Seven wives.\" Alana breathed. \"Oh dear Illuminar in heaven, why?\"\n\n\"He said it was because you wanted sisters.\" Ethan replied. \"He said that He chose six other women who would be the perfect sisters for you, and each other, and the perfect wives for me. He said each one would add something to the whole.\"\n\nAll eyes turned to the wood elf.\n\n\"What?\" She said slightly defensively. \"I thought being one of seven sisters would be amazing.\" She paused, and then added slightly under her breath. \"I still do.\"\n\n\"Master can handle seven wives.\" Taloni said confidently. \"Illuminar wouldn't have given him seven wives if he couldn't.\"\n\n\"I wonder what that would be like; being one of seven wives.\" Beth mused.\n\n\"I've never had any brothers or sisters.\" Rachel made a thoughtful sound. \"Yes, seven sounds like a lot of wives, but I wouldn't mind having six sisters.\"\n\n\"Thank you.\" Alana said, taking her hand and giving it a squeeze. Ethan noticed that the wood elf hung on for a fraction of a second longer than strictly necessary though.\n\n\"I would like to say that you're all full of it...\" Selene shook her head in disbelief. \"...but I don't think you are.\"\n\n*He's full of something...* Alana thought to them, a sensual smile on her face.\n\nHis wives blushed, but got similar looks.\n\n\"Oh for the love of Illuminar, would you cut that out!\" Kendra snapped. \"Seriously; it's nauseating.\"\n\nTaloni looked at her reprovingly.\n\nOddly, the dragon huntress seemed to wilt slightly under the reproving gaze of the much younger, much less powerful, and much less worldly Fey girl. Kendra seemed to shrink slightly in shame, which was odd. Ethan didn't think he'd ever seen her do that; or at least not since she'd apologized.\n\n\"I've got to go.\" The dragon huntress stood. \"I know the rest of the story anyway.\"\n\n\"Thank you for all your help Kendra. We might not be alive without you.\" Ethan replied standing also, and his wives followed suit.\n\n\"You're welcome, but it just means I owe you a tiny bit less.\" The dragon huntress grumbled. \"Also, don't forget your loot.\"\n\n\"Oh, right.\" They all walked over to her airship and he grabbed the dragon skin and the bag of dragon scales and set them down on the deck, after which the dragon huntress jumped into her airship.\n\n\"Do you really need to leave Kendra?\" Taloni asked.\n\n\"I can't stay.\"\n\n\"Why?\" Ethan asked\n\n\"I owe you too much.\" She replied quietly, not quite meeting his eye. Something about her tone and body language was very... Hmm. He couldn't place it.\n\n\"Ethan, this is dragon leather and dragon scales.\" Alana said in awe as she looked at them. \"Where did you get these?\"\n\n\"During the escape.\" He said and then explained briefly about finding them, finishing the story in short order. Curiously, Kendra didn't leave while he did this. He thought that she would've left, but she didn't. She stayed on her airship and listened, even though she had been present for all of it.\n\nHmm.\n\n\"You'll need a smith who knows how to work this.\" Beth said. \"They're super rare.\"\n\n\"There's probably one at Nalatia right?\" Ethan replied.\n\nKendra scoffed. \"Elves? Elves can work steel incredibly well, and even make it enchantable by mixing it with enchantable materials without losing strength. But you'll need a dwarf for dragon steel. The dwarves almost never share the secret with anyone. Even my Dragon Slayer bow was made by dwarves.\"\n\n\"Is there a dwarven smith in Nalatia?\" He asked.\n\n\"I doubt it.\" Rachel replied. \"Dwarves and wood elves don't exactly hate each other, but their cultures are so different that they don't get along well. Dwarves tend to be blunt and candid about everything, whereas wood elves... well, you yourself had troubles with their honor culture. They just clash a lot and so don't mix very much.\"\n\n\"That makes sense.\" He admitted.\n\n\"What about that dwarf in Arcanum that put the head on your warhammer?\" Selene suggested. \"Didn't one of you say that he mentioned making weapons from dragon scales?\" The Brazilian women then shook her head. \"Oh God, I can't believe I just said that; this world is trippy.\"\n\n\"Yeah, it's pretty wild.\" Ethan agreed. \"Like I said though; it does get easier.\"\n\n\"I hope so.\" She woman replied as she shook her head in amusement. \"I'm talking about a dwarf turning dragon scales into weapons.\"\n\n\"Graflex is a master smith.\" Kendra offered. \"I used to know some people who had weapons made by him; they were excellent weapons and I know he's worked dragon steel before.\"\n\nEthan frowned. \"I promised I'd go back to Nalatia, so I'd rather not take a two-week round trip to Arcanum to get a new spear made, but I really need a new one.\"\n\n\"Kendra, could you take the dragon scales to Arcanum?\" Taloni asked.\n\n\"Why Kendra?\" Ethan looked at the Fey feeling very confused. This might be the first time she'd ever suggested that Kendra leave.\n\n\"Because Kendra decided to leave anyway, I just want to her to come back.\" The Fey teen replied simply and utterly without guile.\n\nKendra blinked a few times and appeared to be concealing the fact that she'd just gotten slightly choked up.\n\n\"Would you be willing to?\" He asked the dragon huntress.\n\nShe hesitated. \"I was hoping to make a clean break.\"\n\n\"How about this.\" He offered. \"If you do this one favor for me, I'll say we're square. You'll no longer owe me anything and can go about your life as you see fit, not feeling indebted to me at all.\"\n\n\"Really?\"\n\nEthan did his best 'Shrek' imitation. \"Really really.\"\n\nSelene chuckled.\n\n\"Please do Kendra.\" Taloni asked. \"I'd like to see you at least once more.\"\n\nThe Dragon huntress hesitated for several seconds before nodding her head. \"Okay, I'll take the dragon scales to Graflex, get him to forge them, and then deliver it to you. In return, we'll be square; neither will owe the other anything.\"\n\n\"Deal.\" Ethan offered his hand and they shook on it, thought the dragon huntress shuddered a bit at his touch, and not in a good way. She also put her hand on her stomach, apparently trying not to vomit after they finished the handshake.\n\nHe tried not to take that personally.\n\n\"Good, then I'm leaving.\" She said the moment that he handed her the bag of dragon scales.\n\nTaloni flew onto the tiny airship and gave Kendra a huge hug. The dragon huntress really did get choked up this time. She held onto the tiny Fey like her life depended on it. He was struck by the memory of the oppressive sense of loneliness that he'd felt from her when they'd bonded. That in turn made him recall how she'd chimed into the story at breakfast, and how she'd looked like she had a modicum of happiness as she sat around the breakfast fire with the rest of them.\n\n\"Kendra, wait.\" Ethan said when Taloni had let go of her.\n\n\"What?\" The raven haired woman asked.\n\n\"I never thought I'd say this, but you're welcome to visit the Argo anytime.\"\n\nShe blinked.\n\n\"I mean it.\" He confirmed. \"I know we've spent a lot of time trying to kill each other, but not anymore and it's obvious that you care for Taloni. So yeah, you've earned a standing invitation; you're welcome to visit the Argo any time.\"\n\nKendra stared at him.\n\nShe frowned and cocked her head to one side, then opened her mouth to speak before closing it again. She did this twice more before stopping and just looking at him.\n\n\"Why?\" She finally said. \"I don't understand.\"\n\n\"To be honest, I'm not sure I do either.\" He admitted. \"But the offer stands. You're welcome to visit any time.\"\n\nShe nodded her head slowly and pursed her lips before speaking. \"Thank you.\" He noticed that her eyes momentarily flicked towards the area where they had eaten breakfast.\n\nApparently, she had enjoyed it a lot.\n\n\"I um... I don't know how much I'll see you after I return though.\" Kendra said. \"I mean, I assume you won't stay at Nalatia forever and if-- I mean when I need to leave...\" She frowned, not looking happy at the idea. He knew the odds of them just randomly running into each other were pretty slim; they didn't exactly have cellphones here.\n\nTaloni looked morose at the idea of Kendra departing for good.\n\nEthan took a deep breath and then figured that since he'd already invited her to the Argo, he might as well go the distance. \"I know you and Taloni would be heartbroken if you didn't see each other again, so how about this: you know how we have our telepathic network setup right?\" He had just explained it while recounting the story, so she should.\n\n\"Yes, and...?\" She said suspiciously.\n\n\"Why don't you connect to it?\"\n\nKendra shook her head. \"Not on your life.\"\n\n\"Hold on.\" He said. \"Remember, you can block all of us out so we can't hear you, and you can't hear us. I've done that before, so you can too.\"\n\n\"Why would I connect if I'm just going to block you out?\"\n\n\"Because then you can talk to us whenever you want, and no one can overhear if you contact us. Think about it, if you sail away and something happens, how will you ever find Taloni again?\"\n\nThe dragon huntress eyed him suspiciously for several seconds, then nodded her head slightly in concession and made a thoughtful sound.",
        "\"Please Kendra?\" Taloni asked. \"Then we could see each other again even after you return, and I can talk to you too. I mean, all of master's other wives will hear when I do talk to you, but wouldn't that be wonderful?\"\n\n\"It'll give you options.\" Rachel pointed out. \"You don't need to take advantage of those options, but you'll have them.\"\n\nKendra stared at them for several seconds before speaking. \"And you won't be able to hear my thoughts?\"\n\n\"We couldn't anyway.\" Ethan replied. \"I can only hear the thoughts that my wives purposely send to me. I can feel their emotions, but not hear their thoughts unless they want to share them.\"\n\nHis wives nodded in agreement.\n\n\"Can I undo it if I want to?\" Kendra asked.\n\n\"Um, I don't know; I never tried.\" He cocked his head to one side.\n\nMoments later, he felt Rachel's 'mind tunnel' disconnect from him, only to reconnect a few seconds later.\n\n\"Yup, you can disconnect.\" The redhead confirmed. \"I just tried it.\"\n\n\"Hmm.\" The dragon huntress mused.\n\n\"It can't hurt, can it?\" Taloni said. \"I would be really sad if we got separated. What if we had to leave Nalatia suddenly? How would you find us again?\"\n\n\"And if they did need to leave Nalatia without warning, how would you bring back the dragon scale weapon thingy?\" Selene added.\n\nEveryone looked at her.\n\n\"What?\"\n\n\"Dragon steel.\" Rachel said with an amused smile. \"It's called dragon steel once the scales been forged together.\"\n\n\"Yeah, that.\" The Brazilian woman said, then turned to Kendra. \"How would you bring it back to Ethan if he had to leave suddenly and you couldn't find him? Wouldn't that just leave you further in his debt because you'd be sailing around with his weapons?\"\n\n\"That's a good point.\" The dragon huntress conceded.\n\n\"Please Kendra.\" Taloni said. \"I'd hate to never see you again.\"\n\n\"Yeah, that would be awful.\" The raven haired woman nodded, then added sternly. \"But you all need to stay away from my thoughts; I'm not letting anyone in.\"\n\n\"No one?\" Ethan raised his eyebrow and glanced at his Fey wife.\n\n\"I don't think I can only let specific people in, so...\"\n\n\"Okay, but I hope you do at some point.\" Taloni said brightly. \"You really wouldn't believe how lovely all of master's wives are; I know you'd like them.\"\n\n\"Maybe; we'll never know.\" Kendra replied, then closed her eyes and looked like she was concentrating.\n\nAbout a minute later, Ethan felt her connect to his mental fortress, and then moments after that to the antechamber 'below' it which allowed them to all talk to each other at once.\n\n*Can you hear me?* He thought to her.\n\nNothing.\n\nHe wasn't too surprised because they hadn't been bonded very long, and he got the distinct impression that she'd walled off all possibility of contact before she'd connected.\n\n\"There, happy.\" She said.\n\nIt wasn't a question.\n\nEthan looked around at his four wives and smiled broadly. \"Yeah; yeah I am.\"\n\nKendra gave him an odd look, then untied her canoe-sized airship from the Argo. \"Bye.\"\n\nAnd then her airship shot upward as its sails unfurled.\n\n\"That was... abrupt.\" Selene commented.\n\n\"That's Kendra.\" He shrugged.\n\n\"Please don't say that master. She's nice, just lonely. Besides...\" The Fey teen got a mischievous smile on her face. \"...I'm so glad you trust Kendra implicitly master.\"\n\n\"I do?\" He raised his eyebrow.\n\n\"Well, you did just convince her to sail off with the incredibly valuable dragon scales and probably didn't even consider the possibility that she might steal them. You must really trust her for the idea to not even occur to you.\"\n\nHe cocked his head to one side.\n\nHuh.\n\nDamn, Taloni was right. He hadn't even thought of the possibility. It had literally never occurred to him that Kendra might abscond with the dragon scales and not return. Not even once.\n\nInteresting.\n\n* * *\n\nSarah felt herself slowly come back to consciousness, feeling the comforting support of her mattress underneath her. For a brief moment she felt the light on her eyelids and was worried that she'd overslept.\n\nThen she remembered.\n\nShe remembered all of it. She remembered breaking the chains around her wrists and ankles. She remembered lunging at the soldier who was advancing on her father. And she remembered... She gulped and shut her eyes tighter, as if that would prevent her from remembering the two soldier's looks of terror as they left the land of the living.\n\nShe felt like her heart was breaking in half.\n\nShe wanted to forget that the whole thing had happened. She wanted it to never have happened in the first place. She had tried; she had tried so hard to resist, but in the end she'd needed it. She needed her problem to solve another problem. She hadn't trusted Illuminar, but instead she had...\n\nHad...\n\nShe sniffled.\n\nMoments later, she felt a comforting hand on her forehead and her father's voice coming across very softly. \"Sarah, are you okay?\"\n\n\"No Papa.\" She whispered, still not wanting to open her eyes. \"No, I...\"\n\nShe rolled away and pulled the covers over her head, trying in vain to block out the world. Sadly, cotton sheets and a worn quilt did little to block out anything. She wanted to block out everything; everything at all, everything in the whole world.\n\n\"You saved me.\" He said softly.\n\nShe nodded, not wanting to answer.\n\n\"Rindrin took the bodies to bury them.\" Her father said. \"He insisted on helping.\"\n\n\"He did?\" She asked, still holding the covers over her head and keeping her eyes tightly shut.\n\n\"He did.\"\n\nShe nodded again, glad that her betrothed cared enough to help, and glad that she'd saved her father... but not that way. Any way but that way; any way but her problem.\n\n\"I tried Papa.\" She finally said. \"I prayed to Illuminar -- blessed be He -- every single day. I prayed that He would make me good. I'm sorry.\"\n\n\"I wish I knew how to help you Sari.\"\n\nShe half smiled at his use of her childhood nickname. She hadn't been able to say her own name when she was young, and 'Sari\" was all she could get out. It had stuck as a nickname until... until her problem had entered the portrait and life had gotten grim.\n\n\"I tried dear girl; I really did.\" His voice sounded like it was cracking. \"We went to all those temples, saw all those priests.\"\n\n\"I know Papa.\" She whispered back.\n\nShe finally opened her eyes and pulled the covers down enough that she could see the sky outside her window. Laying there, looking up into the sky where Illuminar's heavens were supposed to be, she felt... she felt almost betrayed. She had tried to seek Him her whole life and now this had happened to her.\n\n\"Please help me.\" She whispered to the heavens. \"Please.\"\n\nThen she closed her eyes and begged for sleep to take her.\n\n* * *\n\nEthan watch Kendra's airship start to turn and marveled at how much he'd apparently grown to trust the woman that had tried to kill him so many time.\n\nIrony.\n\n\"Oh, Ethan, this is... this is amazing.\" Alana breathed from behind him so he turned towards her. Her hand was on the dragon hide they had recovered, and he guessed that she was assessing its properties for enchanting. \"I've never felt dragon leather before; there's so much room for enchantment here.\"\n\n\"Oh?\"\n\n\"Yes.\" She nodded. \"There are so many options too. Self-repair, a hardening and stiffening enchantment for armor, fire resistance.\" She looked up at him. \"Even a strength-enhancing enchantment like Kendra has.\"\n\nHe grinned. \"Strength-enhancing? I like the sound of that.\"\n\n\"Me too.\" Beth sighed wistfully as she looked at his biceps.\n\n\"It would make amazing armor.\" Rachel added.\n\n\"I could definitely use some.\" He agreed, thinking back to all the times he'd been wounded so far. As he thought about it, he realized he was wounded almost every time he fought someone, and sometimes badly. Getting his bicep sliced while fighting Kendra in the Arena and being impaled by Gonorran stood out, but he'd suffered numerous smaller wounds too.\n\n\"Hey, could I make it so I can summon the armor like I do with my hammer?\" He asked, thinking of the times he'd been ambushed. Plus, the memory of Tony Stark calling his armor in Iron Man 3 was igniting his imagination. That would be awesome.\n\n\"Sure, but then you'd still have to put it on.\" Alana replied, raining on his parade.\n\n\"Really?\"\n\n\"Yes.\" Beth interjected. \"Armor needs to be properly fitted and attached or it will just slide around. Think about having a metal tube on your upper arm and trying to fight with it sliding all around. That's what it would be like.\"\n\n\"Yeah, that wouldn't work.\" He sighed.\n\n\"What if you summoned it and then just held it in place with the summoning spell?\" Selene suggested.\n\nAll his wives laughed.\n\n\"What? It wouldn't work?\" The ex-FBI agent asked.\n\n\"It would work, but it would also drain his mana very fast.\" Rachel replied. \"It doesn't take too much mana to summon something, but constantly using mana to hold it there would deplete your mana very fast. Then multiply that by...\" She frowned, clearly counting. \"...at least twenty pieces of armor for good coverage -- maybe up to fifty or sixty if you articulate the hands -- he'll run out of mana very fast. He'll be defenseless when he does run out because then the armor will fall to the ground.\"\n\n\"Oh, okay that makes sense.\" The caramel-haired woman replied.\n\n\"But couldn't we enchant it to stick?\" Ethan persisted. \"So I could summon it and then it sticks to me when it hits somehow?\"\n\nAlana shook her head. \"No, that would work because...\" She trailed off. \"Well actually... Hmm.\"\n\n\"What?\" He said.\n\n\"It's never been done because you'd need to enchant a part of the person, which obviously isn't possible, but you're a dragon so... hmm.\"\n\n\"I like that 'hmm'; that makes it sound like a possibility.\" He started grinning.\n\n\"Well, there are activatable enchantments that'll make two things stick together pretty strongly.\" Alana said. \"They could stick to a part of your body and they wouldn't slide around. They might get dislodged -- maybe -- but you could just summon them back into place.\"\n\n\"They probably wouldn't get dislodged.\" Rachel interjected. \"Armor pieces usually wrap around the body in some way or another, so they should stay put.\"\n\n\"Good point.\" The wood elf replied nodding.\n\nEthan rubbed his hands together excitedly. \"This is starting to sound like a possibility.\"\n\n\"Why doesn't Ethan just enchant himself instead of adding armor?\" Selene asked. \"I mean, you all said that dragons can do that right?\"\n\n\"It would take too long.\" Alana replied. \"A living dragons can stack a lot more enchantments into his scales than I can into these because of a living dragon's natural harmonics. However, while a living dragon can make his scales far stronger and harder than a mage can enchant them after he's dead, there's a downside. It takes a lot more mana for a dragon to enchant himself effectively. Living dragon scales can become far stronger, but it takes far more mana.\"\n\n\"I can confirm that.\" Ethan nodded. \"I'd love to get there eventually, but this armor would be a great stop-gap solution until I do.\"\n\n\"I'd feel much better knowing you are well protected master.\" The Fey teen leaned up against him.\n\nHe put his arm around her. \"Me too.\"\n\n\"Me three.\" Alana said.\n\n\"Me four.\" Beth and Rachel said at the same time.\n\nHe chuckled and then turned to the redheaded teen. \"Speaking of number four, don't we have an event tonight?\"\n\nRachel -- so interested and outspoken mere moments before -- suddenly seemed a bit subdued as she nodded.\n\n\"Ladies, can I have a minute to talk with the bride?\" He said to the assembled crew.\n\nThey all either nodded or assented, so he reached out and took Rachel's hand. The redhead accepted his hand and didn't resist his gentle pull as he led her to the front of the ship.\n\n* * *\n\nSarah was floating dreamily down the center aisle of a beautiful chapel wearing the most magnificent white wedding dress. Everyone from her childhood was there smiling at her. Her father was guiding her down the aisle, looking trim and fit as he always had in her youth. Up at the altar, Selene was dressed in the most magnificent maid of honor dress, and Alana and Beth were bridesmaids waiting next to her; all of them were smiling at her and welcoming her forward.\n\nHer groom was also up there, looking dashing in his... well she couldn't quite make his clothing out, but it was very nice. She couldn't quite make out his face either, but he had wings and scales. It was the dragon; the dragon who'd rescued her from her life and the problem that had plagued her for so long.\n\nSuddenly, her father stopped and looked at her, disapproval written all over her face. \"Wait, you still have your problem?\"\n\n\"No, I... I don't think so.\" She stammered.\n\nThe whole room erupted in whispers and murmurs. The brown-haired girl caught snippets of conversation that went like \"I thought she'd taken care of that.\", and \"How could she get married with a problem like that?\" and even \"She's got a lot of nerve!\"\n\n\"Wait, no; I'm better now.\" She pleaded to everyone, her eyes filling with tears.\n\nNo one listened.\n\nThe congregants all turned and started walking away. Selene looked at her with pity, shook her head and then left. Alana and Beth looked horrified as they chased after Selene, barely taking the time to cast a reproving look backwards. Even Ethan -- the prophet of Illuminar Himself -- shook his head at her and turned away. Suddenly, the room was completely empty and she was left all alone, crying on the floor in her wedding dress, which was now somehow very dirty and tattered.\n\nShe couldn't believe it.\n\nHer problem had cost her everything. Not even a prophet of Illuminar would look at her. She felt stained; sullied... unclean. She felt like Illuminar Himself had abandoned her. And while she would never stop trying to serve Him, she wished He would help her.\n\nShe needed Him to help her.\n\n\"Sarah.\" A comforting feminine voice said.\n\nShe turned her head to see the loveliest woman that she'd ever seen standing there. She was clad entirely in robes of the purest white. Her clothes and skin seemed to shine like the sun, but with the warmth of a flickering candle. She looked to be about Sarah's own age, but that simply wasn't possible. She had the beautiful face of a young woman untouched by age, but the eyes and presence of someone ancient and full of wisdom. Her heart-shaped face was the picture of perfect femininity and was beautifully framed by her long hair that was probably blonde but looked white, probably because of the light. She had a soft smile on her face that instantly made Sarah feel comfortable and safe.\n\nShe thought she recognized the woman, but it took her a moment. \"Gabriella?\"\n\n\"Yes dear girl.\"\n\nSuddenly, this didn't seem like a normal dream to Sarah. Suddenly, the whole thing felt more real than the nightmare she'd been enduring.\n\n\"This is real.\" Gabriella assured her.\n\n\"You were at the inn earlier but now you're...\" She averted her eyes, realizing what the luminous woman might be. \"Are you...\"\n\n\"A messenger of Illuminar -- blessed be He.\" She nodded. \"Commonly called an angel, yes.\"\n\n\"Why?\" She whispered, desperate to know the answer to her most burning question. \"Why do I have my problem? I always wanted to serve Illuminar. I always tried to...\" Her breath caught. \"Why did He do this to me?\"\n\n\"Dear girl, He didn't do this to you.\" Gabriella said kindly.\n\n\"He didn't?\"\n\n\"No.\" She shook her head. \"The men who kidnapped you and summoned your 'problem' were wicked men, using Illuminar's gift of free will to do unspeakable evil. That's the downside of free will; many use it to commit unspeakable evil.\"\n\n\"But couldn't Illuminar have stopped them?\" Sarah asked.\n\n\"Of course He could; He could've stopped every evil act ever committed with less effort than you use to blink...\" She replied. \"...but then what of free will? To stop every act of evil would require violating free will, which Illuminar -- blessed be He -- won't do. But He did help you Sarah, you just didn't know it.\"\n\n\"He did?\"\n\nGabriella nodded. \"The men who kidnapped you had planned to force themselves on you before the ceremony; He prevented that. They were trying to summon one of Saidow's greater minions, but He also prevent that; instead he only allowed a weaker demon to possess you. Had a stronger one possessed you, you would rarely be yourself.\"\n\n\"Oh.\" Sarah replied, having never thought of that before. Yes it had been bad, but it could've been so much worse if... She gulped.\n\n\"He prevents so many horrible tragedies before they happen.\" The luminous woman continued. \"Every near miss attributed to luck, every burst of intuition that something is wrong or dangerous, and every time a tragedy is averted; that is the God of Light protecting His children.\"\n\n\"But so many bad things happen anyway.\"\n\n\"Yes.\" Gabriella nodded sadly. \"Yes, men abuse their free will and ignore the commands of Illuminar -- blessed be He -- to do wicked things. Men abusing the gift of free will would've already destroyed mankind a thousand times over if the God of Light wasn't always working behind the scenes, preventing horrible atrocities every day. But instead of being praised for the countless protections He offers, the God of Light is often reviled and hated for not violating man's free will to prevent the few tragedies that do occur. Or at least, they are 'few' in comparison to the many He prevents.\"\n\n\"Oh.\" Sarah said, not sure what to make of that.\n\n\"He is also responsible for the good things.\" Gabriella added. \"There are literally dozens of portals in the Ten Kingdoms through which Selene could've passed. Illuminar ensured that she came through the one that is near you, so that you could meet her.\"\n\nThe innkeeper's daughter managed a small smile. \"I really appreciated that, especially since...\" She trailed off, thinking about her problem.\n\n\"What happened to you was an evil tragedy perpetrated by wicked men.\" Gabriella acknowledged with a mournful expression. \"Sadly, many men use their free will for evil purposes, and too often innocents get ensnared.\"\n\n\"Innocents?\" Sarah swallowed.\n\nCould the angel mean her?\n\n\"I do mean you Sarah.\" Gabriella nodded. \"Do you remember the prayer you prayed after you escaped?\"\n\nShe nodded. \"I asked that Illuminar would use me to help someone do good things in the world -- despite my problem -- and I wanted to marry the best husband I could.\"\n\n\"Illuminar -- blessed be He -- heard your prayer.\"\n\nSarah blinked.\n\nThen her eyes started filling with tears for quite another reason.\n\n\"Really?\" She whispered in disbelief. \"He heard me?\"\n\n\"He did, and He was touched by your sincere desire to do good even after your tragedy.\"\n\n\"He was?\"\n\nIt seemed too good to be true.\n\nShe had spent the years since getting her problem thinking that she was unclean; tainted and not worthy of the God of Light. She'd often wondered if He even heard her prayers because she was afflicted with her problem. She didn't know if Illuminar still loved someone who'd been tainted as she was. She had hoped so, but hadn't been sure.\n\n\"Sarah.\" Gabriella knelt down and looked deep into her eyes. \"You are a precious daughter of the Most High God of Light, and He loves you very much.\"\n\nSarah felt her eyes fill with happy tears as the angel's words sank into her ears; into her heart and soul. Suddenly, she knew them to be true deep in her core. She knew that Illuminar -- the almighty, all-righteous, and perfectly pure God of Light -- she knew that He loved her and cared deeply about her.\n\n\"Thank you.\" She said, feeling a bit of peace in her soul.\n\n\"You're welcome.\" Gabriella smiled. \"Precious daughter of Illuminar -- blessed be He -- I'm here because you need to know something. I have a message for you, and one you'll need to remember in the days ahead.\"",
        "\"Oh?\"\n\nGabriella forward and wrapped her arms around Sarah in a hug. Something about the hug -- just the angel's mere presence -- was so incredibly comforting. The angel almost looked sad as she spoke to the girl in her soft, comforting, and almost musical voice. \"Your life will become extremely hard soon; harder than it has ever been, and harder than it will ever be again... but. But after the hardest part of your life -- after you feel like giving up because you can see no way out -- things will get so, so much better for you. You will be so happy that some days you will wake up scarcely believing that your life is that wonderful.\"\n\n\"Really?\" Sarah asked hopefully.\n\n\"Yes, I promise.\" Gabriella assured her, still holding her. \"Illuminar -- blessed be He -- has decided to grant your wish; your prayer. You will be a part of great things which will bring great good, and get a wonderful husband in the process.\"\n\nSarah wanted to say something, but she couldn't. Her brain didn't seem to work and she just couldn't believe what she was hearing.\n\n\"But... but my father betrothed me to Rindrin.\" She finally said.\n\n\"Yes he did.\" Gabriella replied, and gave her a tight squeeze. \"Perhaps you've under estimated how good of a husband Rindrin would be, or perhaps Illuminar -- blessed be He -- has something else in store for you. Either way, trust Him.\"\n\n\"Okay.\" She whispered\n\nStill the angel held her.\n\nIt was wonderful.\n\n\"Why will life get hard?\" Sarah asked, feeling like her life had been very hard already, especially given her problem.\n\n\"Because you turned to your problem for the solution instead of trusting Illuminar.\" Gabriella said kindly and without condemnation. \"Just like you can't touch a hot stove without getting burned, so you cannot attack soldiers without repercussions. Regardless of how much you love the God of Light, your actions still have consequences.\"\n\n\"But... but they were going to...\" She thought about her father and his poor health; he wouldn't have survived.\n\n\"Illuminar -- blessed be He -- promised me that your father would have emerged unscathed.\" Gabriella said kindly. \"If you had trusted Him and kept your eyes on me, all would've been well.\"\n\n\"I...\" Sarah swallowed. \"I tried.\"\n\n\"I know.\" Gabriella had a nearly heartbreaking look of sympathy on her face. \"Illuminar -- blessed be He -- sent me to help to you control your fear so you might have a chance to avoid your actions, which you will end up deeply regretting. He isn't mad at you for trying to resist and failing. But just as you can't kick a hornets' nest without being stung, so you cannot attack soldiers without them retaliating when their comrades learn of it. Actions still have consequences; that's another price of free will.\"\n\n\"So, I ruined everything?\" She started to tear up again.\n\n\"No dear girl, remember the promise that I just gave you. Illuminar -- blessed be He -- can see the beginning from the end; what is, and what will be. His promises are sure, for He has already seen them come to pass. The free choices of all involved will lead to His promise being fulfilled. If you had chosen to trust Him, their choices would still have led to the same outcome, only with much less pain for you.\" Gabriella gave her a comforting extra squeeze. \"I wish you had trusted; you've been through so much already.\"\n\nThe whole time, the angel was holding her.\n\nShe felt loved.\n\nShe felt comforted.\n\nShe felt safe.\n\n\"I wish I had too.\" Sarah finally said. \"Thank you for giving me a chance, even if I didn't take it. I'm sorry.\"\n\n\"Illuminar -- blessed be He -- has already forgiven you.\" Gabriella said gently, gave her another comforting squeeze, and then the hug broke.\n\nAs Gabriella stood, Sarah noticed that her dress -- which had been tattered and dirty -- was no longer dirty in some places. In fact, every place that Gabriella or her clothes had touched her, all the filthiness seemed to have burned away.\n\nShe looked up at the angel confused.\n\n\"I am a servant of the Sacred Fire; a wielder of the flame of Gan'eden.\" The angel replied. \"As long as I remain in the God of Light's service, darkness cannot affect me. For can darkness overcome light? Rather, isn't it darkness banished by the light?\"\n\nSarah smiled, recognizing that last bit as a quote from the Book of Light.\n\n\"Could...\" She looked down and saw that Gabriella's touch had removed the stains from her clothing. Could she also remove the stain of her problem?\n\n\"No dear girl, I'm afraid I cannot.\" Gabriella replied.\n\n\"Why not?\"\n\n\"I cannot tell you dear girl, for I don't know; my Lord hasn't told me.\" Gabriella shook her head sadly. \"But He did give me this assurance for you: 'it will all be okay in the end; if it's not okay, it's not the end'. And all His promises are true, for He has already seen them come to pass.\"\n\nSarah felt a smile creep onto her face.\n\nThat was a promise she could live with.\n\n* * *\n\nKendra sat in her airship and looked around, wondering what it would be like to still be on the Argo and listening to everyone talking. She'd never experienced anything like that breakfast and the conversation that followed. It had been so... so...\n\nShe couldn't think of a word.\n\n'Homey' perhaps.\n\nCertainly it had been comfortable and probably the best breakfast she'd ever had, and not because of the ship's food either. She glanced at the bag full of dragon scales and found herself glad that she would have to return to the Argo at least once more. Admittedly she was mostly glad because of Taloni, but she'd be lying to herself if she said she didn't enjoy being around everyone else too.\n\nEven Ethan.\n\nHaving spent several days non-stop in his company, she knew in her bones that he was a good man-- err, dragon. He'd been kind to her too, inviting her back to visit the Argo even after everything she'd done. How could he be so nice? It didn't make sense. She'd never met anyone that forgiving and that kind. She really hadn't. Of course, she'd spent most of her life around unforgiving trainers or working in the field with rough men, so perhaps that wasn't a surprise.\n\nWhat was a surprise is what Anthiel had pointed out the previous night. She couldn't understand how she hadn't seen it before. How could she not have realized that she had been imagining herself in the place of Ethan's other wives?\n\nShe shuddered slightly as her stomach roiled.\n\nWell, at least she was still repulsed by him; that was something. Still, she could put up with his company to be on the Argo with everyone. She had a standing invitation to visit, and it occurred to her that she might actually take him up on that someday.\n\nMaybe more than once.\n\n* * *\n\n\"What's wrong?\" Ethan asked his bride-to-be. He found himself having to constantly remind himself that despite how powerful and mature she was for her age, the redhead was still only nineteen. She was still a teenage girl. A very mature teenage girl, but a teenage girl nonetheless.\n\n\"I don't want to promise to obey you.\" Rachel replied, though she didn't meet his eyes.\n\n\"That's it? Oh, I'll tell Anthiel to drop that from the vows.\"\n\nShe took a deep breath. \"It won't matter though. It really won't.\"\n\n\"Well, I'm not exactly ordering my wives around all the time.\" He pointed out.\n\n\"No, but they listen to you all the same.\"\n\nFor some reason, he got the sense that she had more that she wanted to say. \"And...?\" He prompted.\n\n\"I met Gabriella. Did I ever tell you that?\"\n\n\"No, when?\"\n\n\"Just after Kyrupto attacked.\" She replied. \"She came to me after I had two dreams, one right after another. The first dream showed me what my life could be like if I married you, the second dream showed what would likely happen if I didn't. Gabriella and I talked about why in a polygynous marriage, the wives will tend to follow the husband, and he will tend to get the final say. It's baked into the sweet roll as they say, but I don't like it. I don't like it at all.\"\n\nEthan had been about to disagree, but as he thought about it he saw that she was right. His wives did follow him without him asking them too. He guessed that was partly because of his dragon side, but he highly doubted it was entirely because of that.\n\n\"I'm not sure I can 'unbake' that sweet roll.\" He admitted. \"I'm pretty sure that if I ordered my wives to stop following my orders, that's the only order they wouldn't obey.\"\n\nRachel made a sound somewhere between an exhale, a chuckle, and sigh. They she looked up at him, emotional walls down and looking very vulnerable. Her deep blue eyes looked large and something akin to scared or hurt, but not quite either. Perhaps scared of being hurt? She opened her mouth to speak, but seemed have trouble finding words.\n\n\"Take your time.\" He said gently, then looked at her pointedly and winked. \"I've got a spectacular view to distract me while I wait.\"\n\nShe cracked a smile, but only for a moment. Finally, she seemed to find her voice. \"What do you know about horse training?\"\n\n\"Only a bit, why?\"\n\n\"Because there's a process that's... do you know how they teach a horse to carry a rider?\"\n\n\"Only a little.\" He replied. He had a vague inkling where she might be going with this, and didn't like it.\n\n\"It's done by putting a rider on his back and letting the horse fight and buck for all he's worth until he realizes that he can't shake the rider. They literally need to 'break' the horse's spirit to get him to accept a rider, which is why they call it 'breaking a horse'.\"\n\nHe didn't respond, deciding to let her finished rather than assuming he knew what she was going to say. He was pretty sure he knew, but he wanted to hear it from her before he had his say; and he definitely had some things to say.\n\nShe looked down and didn't quite meet his eye as she spoke. \"You need to break the horse before he can be useful, otherwise he'll constantly fight the rider. The horse will be useless and the rider might get hurt if the horse rebels. I can't let that happen, I can't...\" He voice cracked slightly. \"I can't let you get hurt because I'm... I'm not...\" She took a deep breath and didn't seem to be able to finish the thought.\n\n\"Broken?\" He offered.\n\nShe nodded.\n\n\"Can I let you in on a little secret?\"\n\nShe nodded again, and glanced up at him for a split second before looking down again. The fear in her young eyes was almost palpable.\n\n\"I don't want to 'break' you.\"\n\n\"But you need to.\" She whispered, her voice wavering as she spoke.\n\n\"I didn't need to 'break' Alana, Beth, or Taloni; what makes you think I need to 'break' you?\"\n\n\"Because I'm not like them.\" She swallowed hard. \"They don't mind following you; having you be their lord. They wanted it; yearned for it. I... I don't.\"\n\n\"Have you considered that maybe that's a good thing?\"\n\n\"Oh?\" She glanced up, a sliver of hope in her eyes.\n\n\"Time and again I've asked you for advice, and time and again you've given good advice. I don't want all my wives to march in lock-step with me because I'm not after drones who make babies. I actually like that all my wives have distinct personalities. I actually like that all my wives have their own opinions. I have no desire to 'break' them because I like them just as they are.\"\n\n\"Really?\" She asked sounding hopeful.\n\n\"Well, one of my wives is a virgin and I'd like to fix that, but otherwise...\" He winked at her.\n\nShe blushed and half smiled.\n\n\"But I'm going to fight you.\" She said after several seconds, her expression becoming vulnerable and serious again. \"I'm going to fight you, and disagree with you, and...\" She swallowed, seemingly not able to finish her sentence.\n\n\"Okay, first of all, I don't mind when you disagree; I really don't. Do you remember when Taloni suggested that she fly out to meet Kendra and I shot that idea down without a discussion, and then you objected to me doing that?\"\n\nShe nodded.\n\n\"That was a good thing. Sure you could've been more respectful about it, but I'm definitely glad you said something.\"\n\n\"Why are you fighting me on this?\" She shook her head. \"You know what needs to be done, why won't you do it? I know you can make your wives do things just by looking at them. No one should have that kind of control, and I'm going to fight you unless...\" She took slow, deep, shuddering breath. \"...unless you 'break' me.\"\n\nHe shook his head. \"Ain't gonna happen.\"\n\n\"You need to.\"\n\n\"Well I won't. Ever.\"\n\nShe swallowed hard and turned away, but didn't walk away. Instead she took a step towards the Argo's railing and leaned on it, apparently in thought.\n\n\"I don't want to be a bad wife.\" She finally said with her back to him. \"I don't want to make things harder for you and your other wives, and I definitely don't want to create tension because I'm the only one who's not following you.\"\n\n\"If I recall correctly, that time you pointed out that I shouldn't dismiss Taloni's idea, you were actually voicing what everyone else was thinking. That doesn't create tension, it actually diffuses it.\"\n\nShe sighed, back still turned. \"Why must you make this so hard? You need to do it and I...\" Her breath hitched. \"I don't like knowing what's coming and being made to wait for it. Can't we just get it over with?\"\n\nHe walked the railing beside her; close enough to be friendly, but far enough to give her a bit of space. \"No, because I won't do it.\"\n\n\"You have to, otherwise -- like an unbroken horse -- I won't... I mean, I can't...\" Her voice faltered and then failed her.\n\nHe turned and leaned one elbow on the railing so he was facing her. \"You know, there's more than one way to break a horse.\"\n\nShe glanced at him confused. \"Oh?\"\n\n\"Yeah, I don't know much about it, but I don't think that they always use the brute force method on Earth anymore.\"\n\n\"How can you be sure?\"\n\n\"Because I did some website work for a horse business one time.\" He replied. \"One of the services they offered was a 'gentle breaking'. From the short description, it sounded like they introduced things more slowly and gently with the goal of having the horse enjoy being ridden, rather than trying to 'break' the horse.\"\n\nHe restrained a grin at what Alana, Beth, and even Taloni would say about 'being ridden' in a certain context.\n\n\"I don't think that'll work with me.\" Rachel hung her head so that her hair obscured her face.\n\nHe sighed.\n\n\"Rachel, I'm going to let you in on secret that's not-so-secret; I like you. I like you just the way you are. In fact, if you remained just as you are right now for the rest of our lives, I would still happily marry you.\"\n\nShe didn't respond for several seconds, and her voice was a soft whisper when she did. \"Just as I am?\"\n\n\"Yes.\" He stated firmly. \"We all have room to grow and mature, so I'm not really talking about that. What I mean is that if you stayed the same, stubborn, independent woman that you are now for the rest of our lives, I'd still happily marry you.\"\n\nShe slowly shook her head. \"But that won't work; you know it won't work.\"\n\n\"Why? Why wouldn't it work?\"\n\nShe glanced at him, her eyes sad and vulnerable. \"Because at some point -- especially given how dangerous our lives can be -- at some point we're going to disagree. You'll want to do one thing and I'll want to do another.\"\n\n\"And...?\" He prompted.\n\n\"And what happens then?\"\n\n\"We'll talk it out.\"\n\n\"What if there isn't time?\" She countered. \"What if we're ambushed again and you issue some instructions, like you did to Alana, Beth, and Taloni when Lord Delmar attacked. What if you do that, but I don't want to listen?\"\n\nHe frowned; she did have a point.\n\n\"You see it, don't you?\" She pressed. \"When seconds count, we can't waste them arguing. Militaries need one general, not two generals. Two generals will just fight each other and then nothing will get done and the war will be lost.\"\n\n\"Hmm, I suppose you have a point.\" He conceded. \"However, I'm still not willing to 'break' you. I'm just not. I won't do it; I refuse to.\"\n\n\"A good general disciplines his soldiers.\" Rachel pointed out.\n\n\"I don't see you as a soldier though; I see my wise redhead more like an advisor.\" He countered. \"An advisor with an unbroken spirit seems like she'd be more useful, wouldn't you say?\"\n\n\"Maybe?\" She didn't sound convinced.\n\n\"Rachel, I can make any of my wives -- except Alana -- do whatever I want with a look.\" He pointed out.\n\n\"Wait, you can't compel Alana?\"\n\n\"Nope.\" He shook his head. \"Well I can, but she can fight me off if she wants. She says it isn't easy, but she can. My dragon side tried to use that ability on her once or twice and she beat it. Anyway, do you know how often I've used that ability without my dragon side's influence?\"\n\n\"No.\"\n\n\"Like, twice.\" He paused. \"Okay, like twice outside the bedroom, and inside it's more like foreplay than anything else.\"\n\nHer cheeks got slightly pink as she nodded.\n\n\"I used it to help Taloni with her fear of flying, but didn't make her do anything; I just helped calm her down a bit when she was scared. I also used it on Beth, but again didn't make her do anything. I used it to help her with some... some personal issues. I think that's it, but I feel like I'm forgetting one...\" He frowned, then shrugged. \"Anyway, the point is that I don't go around compelling my wives, even though I can. Beth and Taloni can't even hope to resist me and I still don't use that ability very often, and I have no intention of starting with you.\"\n\n\"But you like when they follow you.\" Rachel countered.\n\n\"I won't lie, I love that my wives voluntarily follow me and that there isn't a constant struggle for power. I had that with my ex and it was a nightmare. But my wives and I disagree like any other married people do; the difference is that I make sure we talk it out, not just enforce my will on them. I certainly don't go around compelling them all the time; far from it.\"\n\n\"Really?\"\n\n\"Yes.\" He nodded. \"If you'll pardon the innuendo, I'd rather you enjoy being ridden, rather than 'break' you and have you merely be resigned to being ridden.\"\n\nShe gave him a small smile and her cheeks got a bit pinker as she replied softly. \"I don't mind the innuendo.\"\n\n\"Good, because it'll never stop.\" He winked.\n\n\"I've noticed.\"\n\nThere was several seconds of comfortable silence, then she looked at him. Oddly, she seemed both more and less vulnerable at the same time. Like her walls were down but she wasn't so... so raw; so scared of being hurt. Perhaps 'open' was the best way to describe it. She didn't have her constant 'tough girl' persona on, but she didn't seem like she was quite as worried about getting hurt either.\n\nIt was good to see.\n\nShe bit her lip, then opened her mouth to speak, then closed it again. She frowned slightly, and he knew she was deep in thought. He could almost see the wheels turning in her head, though he had no idea what they were turning towards.\n\nAfter about thirty seconds, she finally spoke. \"So, you want me to be me, and you won't force me to follow you?\"\n\n\"Yes I want you to be you, and no I won't force you. I'd love it if you chose to follow me, but I won't force you to.\"\n\nShe nodded slowly. \"Hmm.\"\n\n\"What?\"\n\n\"That still doesn't solve the 'two generals' problem.\"\n\n\"Not generally, no.\" He said with a wink.\n\nShe gave a half chuckle and rolled her eyes slightly. \"Do you constantly tease all your wives like this?\"\n\n\"Pretty much.\" He nodded.\n\nShe leaned one elbow on the Argo's railing and mirrored his posture. She looked at him for several seconds with an expression somewhere between curious and confused. \"You don't want to solve the 'two generals' problem?\"\n\n\"I'd love to solve it, I just don't like your solution.\"\n\nShe nodded and gave him an understanding smile. \"If I'm being honest, neither do I.\"\n\n\"I never would've guessed.\" He grinned.\n\nShe seemed lost in thought for several seconds before speaking again. \"You love it if I chose to...\" She frowned and then made a thoughtful sound. He wanted to ask what she was thinking, but knew her well enough to let her speak in her own time.",
        "Finally, she did. \"Well, since you won't 'break' me, I can only think of one solution. I'm not sure I like it, but it's the only one that I see.\"\n\n\"Oh?\"\n\n\"Yes.\" She nodded and seemed to be deep in thought. \"I had a dream that we were married and I called you... I mean, I was a bit more...\" She paused for a moment, searching his eyes for something, though he didn't know what. Her deep blue eyes were wide and innocent, walls down and looking very vulnerable, but not hurt, and thankfully not scared either.\n\nShe took several seconds of pensive silence before speaking again. \"It just occurred to me that the dream gave me a glimpse of a potential future life where I was more... more submissive and yet I remember being happy.\" She looked confused. \"I remember not minding it.\"\n\n\"Oh?\"\n\nShe grinned sheepishly. \"I might've even liked it a little.\"\n\nEthan almost felt his jaw drop.\n\nWhat?\n\nHe worked his jaw for a moment before his mouth decided to speak without input from his confused brain. \"And in other news, water is dry, up is down, and dragons hate gold.\"\n\nShe chuckled. \"I know it's weird, but it's true. And if that dream really was from Illuminar, and if it really did portray what the future could be like... Hmm.\"\n\n\"What?\"\n\n\"I think...\" She hesitated. \"I think there's something I'd like to try.\"\n\nHe gave her a quizzical look.\n\n\"I mean, I was happy in the dream and Gabriella did say that's what my future could be like...\" She seemed to be talking to herself as much as him. \"So maybe it would be okay?\"\n\n\"Oh?\"\n\n\"Yes, I think I might try something, if that's okay with you.\"\n\nHe cocked his head to one side. \"Try what?\"\n\n\"I might try...\" She hesitated for a moment, then continued. \"I might try being more like I was in the dream, because I was definitely happy.\"\n\n\"Oh?\"\n\n\"Yes my...\" She closed her eyes, took a deep breath, and let it out slowly. \"Yes, my...\" She took another deep breath. \"...yes my lord.\"\n\nHis eyes nearly bugged out of his head. \"My lord?\"\n\nShe nodded. \"We can't be fighting all the time, and since you won't 'break' me...\" She looked at him with a smile, as if an idea had just occurred to her. \"You know, you might've just gently 'broken' me by being gentle and refusing to 'break' me.\"\n\nHe smiled. \"You don't look 'broken' to me.\"\n\n\"No, in fact I'm...\" She blushed scarlet.\n\n\"You're...?\" He prompted\n\n\"...I'm... I'm eager to be ridden.\" She blushed furiously and then continued before he could reply, like she was trying to get it out before she wouldn't be able to. \"In the dream I was okay with following you; with submitting to you. I was even happy while doing it, and I think the dream was from Illuminar. So I think I could...\"\n\nShe closed her eyes, took a deep breath, and let it out slowly. \"I mean, I'd like to try if that's okay with you... my lord.\"\n\nShe looked a little scared.\n\nNot super scared, but a bit scared.\n\nShe was no less open, but the vulnerability was back; the fear of being hurt was back, though greatly blunted. His mind went back to their previous conversations and how she'd been adamant that she didn't want a lord. Now she was calling him hers. He knew it was hard for her and he could tell that she was extremely nervous, somewhat apprehensive, and a bit scared. Not the trembling 'I might die' kind of scared though. It was a deeper fear of something more intimate and personal; a fear of getting hurt or being taken advantage of.\n\n\"Rachel, I really appreciate what you're saying, what you're trying to do. Seriously, I know how hard that must be for you. But you know I'm not asking that of you, right? You know I wouldn't ask that of you, right?\"\n\n\"I know.\" She said quietly. \"But I trust you Ethan. If you were any other man I'd be fighting you like dragon defending its hoard. But you... you're you. I trust you.\"\n\nShe smiled.\n\nShe still looked slightly scared, but the fear had morphed more into nervousness; and she also looked hopeful and trusting too. \"You just refused to force me even though I asked you to -- I practically begged you to. I remember being happy in the dream, and I think it might work. I might be okay with it, but only with you. I couldn't be with anyone else, but with you...\" She smiled slightly through her nervousness. \"...with you I think I could be okay.\"\n\n\"Are you sure?\" He asked.\n\nShe nodded. \"Yes my...\" She closed her eyes again and took another breath. When she opened them she looked just as nervous, open, and vulnerable; but also determined. \"Yes my lord, I'm sure.\"\n\n\"I'm honored.\" He said truthfully. \"I realize that this doesn't come easily for you and you don't say it lightly. I'm really and truly honored, and I promise I'll never intentionally betray that trust.\"\n\nShe smiled. \"Thank you my lord, I'm glad to hear it.\"\n\n\"That sounds really strange coming from you, you know that?\" He said as he returned her smile.\n\n\"Honestly, it feels a bit weird saying it.\" She agreed. \"I hope it will grow on you my lord; on both of us.\"\n\nHe could feel his cock starting to stir at the fairly extreme level of respect she was showing him. While she had rarely been disrespectful, there was something different coming from her now. It was the same level of respect -- almost reverence -- that he often felt from his other wives. While she wasn't as subservient as Taloni, nor as submissive as Beth, nor as deferential as Alana, she was in the ballpark.\n\nHowever, she was doing this her own way.\n\nThe way she did it was calmer and more refined; more intentional perhaps. While his other three wives had naturally fallen into the role, she was actively choosing it. Somehow, that showed on her demeanor, which was rapidly becoming calmer and more peaceful without being less open. She had more quite reserve and resolve about this than his other wives, and somehow that suited her. Perhaps she was right; perhaps it would grow on both of them.\n\n\"It's already making one part of me grow...\" He smiled at her.\n\n\"I'm glad to hear I can do that my lord.\" She cocked her head to one side. \"Maybe if I say it a lot it'll feel more natural. It doesn't exactly feel unnatural, but it does feel like something is missing.\"\n\n\"I have an idea what it might be.\" He nodded, thinking back to how all his wives had given him their nicknames after he taken them to bed. He suspected it would come a lot more naturally to her after that, but of course he wasn't sure.\n\n\"Oh?\"\n\nHe nodded. \"I'll tell you tomorrow.\" He didn't want her to anticipate the change because she would over-analyze everything and be waiting for it. She had a tendency towards analysis-paralysis which might completely ruin her wedding night for her, which he definitely didn't want.\n\nShe opened her mouth, and he could tell by her body language that she was going to disagree and ask him to tell her now, but then she stopped. She closed her mouth and nodded. \"Okay.\"\n\n\"That's it? No disagreement?\"\n\n\"No my lord. You have a good reason, right?\"\n\nHe nodded. \"I think so.\"\n\n\"Then I'm going to trust you. Your other wives are already deliriously happy, so you must be doing something right.\"\n\n\"I appreciate the trust, just let me know if you ever think I'm making a bad move.\" Then he winked. \"I'd hate to lose my wise redhead as an advisor.\"\n\n\"You won't.\" She smiled and then glanced back towards the rear of the Argo. \"I should probably start getting ready for tonight.\"\n\n\"I can't wait.\" He smiled.\n\nShe blushed slightly as she smiled back. \"Neither can I my lord; neither can I.\"\n\n* * *\n\nSelene was standing on the Argo's weather deck and feeling a bit useless. It seemed like everyone else had some useful thing they were doing, but she didn't.\n\nApparently Rachel had always wanted to get married at sunset, and so they were setting up for that. Alana, Beth, Taloni, and Rachel were off in a field somewhere looking for flowers for the redhead's wedding tonight. The Argo had stopped and dropped anchor so they could. Though, with the Argo being anchored much of the day it would probably delay their return to Nalatia by a day.\n\nEthan and Serif were at the front of the ship, playing with some leather from the ship's hold. The crewman appeared to know a great deal about both arms and armor, and was helping Ethan plan out how to make the armor pieces for his upcoming suit of enchanted dragon-leather armor. He had already cut several pieces from regular leather and was shaving them down so they fit the dragon properly. It looked like they were going to make the whole suit in regular leather as a pattern before cutting into the incredibly valuable dragon skin, which made sense.\n\nAnthiel was up on the quarterdeck filling out some ships logs, and Selene didn't want to bother the high elf while she was busy. Raklan was... well he was terrible company and was sleeping below decks anyway. He might be good for some sparing, but she didn't want to get in the way of the wedding prep with sword practice.\n\nSo she was bored.\n\nAnd being ignored.\n\nOkay, not ignored, but certainly not the center of attention and it felt weird. Not bad weird, just weird. No one was deliberately ignoring her, but -- given her beauty -- she tended to find herself at the center of attention more often than not. Now was one of those 'not' times and she didn't know what to do. She couldn't decide if that made her self-centered or not.\n\nFinally, she wandered over to Ethan and Serif.\n\n\"There's always a compromise.\" Serif was explaining. \"Since we're dealing with solid plates and not chainmail, you can't fully cover every part of your body and still have full mobility.\"\n\n\"Yeah, that makes sense.\" Ethan replied. \"Plus, we only have a limited amount of dragon leather to enchant.\"\n\n\"The breastplate should only cover the ribcage for mobility, and have fairly substantial cutouts for the arms for the same reason.\" Serif continued. \"The shoulder is then protected by paldrons, which bridge the gap between the torso and the rerenbraces on the upper arms.\"\n\n\"How do you armor the stomach then?\" Selene asked.\n\n\"Usually chainmail because it has a high level of protection, but also allows movement.\" Serif replied. \"Some have experimented with overlapping metal plates, but it's not common.\"\n\n\"We don't have any chainmail, or enough dragon skin to make overlapping plates though, and I'd hate to get disemboweled.\" He thought for a moment. \"Well, since the armor is sticking to me not hanging, could I use a small plate that would ride up over the breastplate if I bent at the waist?\"\n\n\"Like the Mandalorian?\" Selene asked.\n\n\"Exactly.\" Ethan grinned, and then explained what that looked like to Serif, who nodded.\n\n\"That could work.\" The crewman replied.\n\nEthan grinned broadly. \"This is the way.\"\n\nSelene chuckled as she echoed him. \"This is the way.\"\n\nShe mostly listened while the two men hammered out the details of the armor. Neither man ignored her while working, nor was she made to feel excluded. However, she did have a distinct sense of being an outsider. Not because they were giving off that impression -- they weren't -- but because there was so much going on and she knew about so little about any of it, and didn't have a part in any of it.\n\nShe sighed.\n\n\"Feeling a little displaced?\" Anthiel asked when Selene had wandered up to the quarterdeck for the fifth time.\n\n\"A little.\" She admitted.\n\nOut on the deck, Serif and Ethan were cutting some more regular leather to make patterns for cutting the dragon leather armor. The girls were down below. Having returned with a lot of flowers, they were now apparently weaving them into something for the wedding later.\n\n\"Can I make a suggestion?\" The high elf offered.\n\n\"Please.\"\n\n\"Go below decks and offer to help.\"\n\n\"I'd love to help, but I don't know anything about flowers or weaving and I'd hate to get in the way.\" Selene replied. \"They all seem like they're having a good time and I wouldn't want to crash the bachelorette party, you know? I'd hate to be rude.\"\n\n\"Have you ever helped with a wedding?\"\n\n\"A few.\"\n\n\"Is there usually so much help that the bride is turning down help?\"\n\n\"Never.\" The Brazilian woman laughed.\n\n\"You're pretty sharp; I'm sure you can learn quickly and I know they would appreciate the help. They are some of the sweetest, kindest women I've ever known; they'll make you feel welcome.\" Anthiel assured her.\n\n\"Okay, I'll do that; thank you.\"\n\n\"You're welcome.\" She nodded, then returned to her logbooks.\n\nSelene walked down to the weather deck, glancing at Ethan for a few moments as she did so. Like a typical man, he was working on creating armor on his wedding day. Okay, it was his fourth wedding day, but the principle still stood.\n\nMen.\n\nShe shook her head and walked down into the darker lower deck. The lower deck was primarily lit by portholes placed at regular intervals along the ship's sides. While it wasn't exactly dim, it wasn't bright either. It didn't take long to find the bridal party as their cheerful talk and laughter made it easy.\n\n\"So why haven't you tried?\" Taloni asked Rachel as Selene drew closer.\n\n\"It's kind of dangerous, and I don't know nearly enough about magic to attempt it safely.\" The redhead replied.\n\nSelene walked into the forward section, just aft of the bedrooms where the women were. It looked like a flower bomb had gone off. The four women were braiding what looked like wreaths of flowers, and also a few long lines that she guessed where going to hang on the railings where they had the ceremony.\n\n\"Hi Selene.\" Beth said as the Brazilian woman poked her head in. \"What's up?\"\n\n\"Hi.\" The Brazilian woman replied. \"Um, did you need any help?\"\n\nAll four girls got identical looks of relief as Alana exclaimed. \"Praise Illuminar.\"\n\n\"Yes please!\" Rachel gushed. \"I wasn't sure how we were going to get through all of this.\"\n\nTaloni jumped up and led the caramel-haired woman into their circle and started showing her how to braid the flowers together.\n\n\"So, what's dangerous?\" She asked when she was settled and braiding.\n\n\"Becoming an arch mage.\" Rachel said after hesitating for a moment.\n\n\"What's an arch mage?\"\n\n\"Arch mages are like regular mages, except that they can pull mana directly through the barrier to the Ether in near unlimited quantities.\" Rachel explained as she focused on starting another flower braid.\n\n\"Wait, I thought any mage could do that?\" Selene responded as she concentrated on her own.\n\n\"Sort of, but not really.\" Alana said. \"Think of regular mages like trying to get water from a thick cloth bag that's almost waterproof, but not quite. The water comes out a bit faster if you squeeze it to force the water out, but not very fast. Becoming an arch mage is like punching a small hole in the bag, letting you get as much as you want.\"\n\n\"Ah, you'd get pretty wet though.\" The Brazilian woman nodded.\n\n\"Which is why it's dangerous.\" The bride replied. \"It takes a powerful spell to breach the Ether's barrier, and it's easy to use a spell that's too powerful, make a breech that's too big, and then kill yourself with an overload of magical energy.\"\n\n\"Yeah, that sounds bad.\" Selene said.\n\n\"About half of all mages that attempt to become arch mages die in the attempt.\" Beth offered, then looked at the redhead. \"I hope you don't try; I'd hate to lose you.\"\n\n\"I would hate to lose you too, but I'd also hate to see you give up on your dream.\" Alana said as she looked fondly at Rachel.\n\nSelene didn't say anything, but definitely caught a glimpse of something. Unless she was much mistaken, her 'gaydar' was going off. It looked like the wood elf had a thing for the redhead. She wondered if Ethan knew, and what he might think about it if he did.\n\n\"Also, don't let me forget to trigger the color change enchantment on your dress.\" Alana said to the bride.\n\n\"I can't believe you thought that far ahead.\" Rachel shook her head.\n\n\"I had a feeling.\" The wood elf smiled back. \"The color change is temporary will only work once, so I'll do it right before the ceremony starts. You'll be a bride in white, and then it'll go back your normal red by the morning.\"\n\n\"Thank you.\" The redhead said sincerely as she gently touched Alana's hand, and then gave it a tiny, almost imperceptible stoke with her thumb. \"I really appreciate how wonderful you've been.\"\n\nSelene suppressed a smile. It seemed like the attraction went both ways, even though she guessed that the bride probably hadn't realized it yet.\n\n* * *\n\nAlana sighed as Ethan took his place at the very rear of the Argo's quarterdeck. He looked so handsome and the fact that he was about to marry her best friend brought a smile to her cheeks that she simply couldn't keep down. She kept wanting to pinch herself to make sure that she was awake and that this wasn't just a dream.\n\n\"You really are happy about this, aren't you?\" Selene asked as she finished tying the last of the flower garlands into place on the railing.\n\n\"I am.\" She sighed.\n\n\"I don't get it.\" The gorgeous woman replied. \"I mean, I'm happy for you and all, but I don't get it.\"\n\n\"Well, look at it this way. Imagine that your best friend found the most wonderful man you could possibly think of and they loved each other. Wouldn't you be happy if they got married?\"\n\n\"Yeah.\"\n\n\"It's the same thing, only that wonderful man happens to be my husband.\"\n\n\"Which is the part I don't get.\" The Brazilian woman replied. \"If I even saw my husband look at another woman I would bean him.\"\n\n\"Bean him?\" The wood elf frowned. \"Like, you would feed him a lot of beans or something?\"\n\nSelene chuckled. \"No, I mean hit him.\"\n\nAlana shook her head. \"I don't understand that at all, but okay.\"\n\n\"To each his own.\" Selene shrugged and then wandered over to the rear of the quarterdeck to fix more flowers. She passed by Ethan and gave him an odd look.\n\n\"What?\" He asked.\n\n\"Fourth time's the charm huh?\" The Brazilian woman said wryly.\n\n\"I like weddings.\" He winked, then added with a twinkle in his eye. \"Five bucks says I can score will all the bridesmaids.\"\n\nShe rolled her eyes, finished with the garland, and then went back down to the main weather deck. Beth and Taloni passed her on the stairs coming up and took positions just to Alana's right and a little behind her in the traditional bridesmaids' arrangement. They were followed by Anthiel, who took up a position at the very rear of the Argo's quarterdeck in the center, ready to officiate. She also had a stringed instrument in her hands, and would provide some of the music too.\n\nThe wood elf took a deep breath and let it out slowly.\n\nWas this real?\n\nWas this really happening?\n\nShe just couldn't believe that she was standing at the place where one of her fondest wishes in life was about to be fulfilled. Her husband was about to marry her best friend. She was so incredibly happy for both of them that it felt like her heart was full to bursting. It seemed too good to be true.\n\nIn the back of her mind she was trying not to overly anticipate the fact that Rachel would be joining Ethan's other wives in bed from now on, except the wedding night. His current wives had talked it over and agreed that -- just like all of them -- Rachel should have him to herself for the first night.\n\nAfter that though...\n\nThe bed would be rather crowded and so they'd all be forced to sleep close to each other. Plus, they never lasted the night with clothes on... Her loins began to itch slightly as she contemplated waking up with the redhead naked next to her, touching her and snuggling with her. She well recalled the time the two of them had woken up together in the hammock on Taloni's wedding night. It had been among the best feelings in her life, and she was about to experience it every night from now on.\n\nIt didn't seem real.\n\n\"Beth, could you pinch me?\" She whispered.\n\nThe blonde look surprised. \"Why?\"\n\n\"I need to make sure I'm not dreaming.\"",
        "Beth gave her a quizzical look, then shrugged and gave her arm a small pinch.\n\nThe wood elf winced.\n\nYup, definitely still awake.\n\nOut of the horizon, the sun was just about to touch the horizon. Rachel had been very specific that she wanted the ceremony to start just as the sun touched the horizon. It was something symbolic about the sun setting on her single life, and waking up the next morning with the sun having risen on her married life. It was a tradition that Alana had never heard before, but she liked it.\n\n\"It's time.\" Anthiel announced loudly, then brought her stringed instrument up and began to softly play.\n\n* * *\n\nKendra was ready to kick herself.\n\nInstead of running full sail towards Arcanum to get rid of her debts to Ethan, she was sitting motionless high in the sky with her sails furled and her enchanted telescope out. She'd braced it on the side of her tiny canoe-sized airship and was watching a wedding.\n\nShe didn't even know why she was.\n\nOld intelligence gathering habits maybe.\n\nThe sun was just about to touch the horizon when the high elf pilot began to play. Rachel exited the captain's cabin in a white dress that looked suspiciously like her red one recolored. She gracefully walked up the steps to the quarterdeck and even from this distance, the dragon huntress could see that the woman was nearly glowing in happiness.\n\nUnbidden, a vision of her in a similar dress floated into her mind. She was nearly floating up the same staircase, towards the same people, and towards the same groom.\n\nShe shook her head as her stomach protested.\n\nThat was stupid.\n\nYet she didn't look away and the vision persisted despite her attempts to banish it.\n\n* * *\n\nRachel could hardly believe that this was happening. She kept wanting to ask Alana to pinch her to make sure that she wasn't dreaming. If there was a way she could've without disrupting the wedding, she would have. She had just stopped in front of Ethan, who was grinning broadly at her.\n\nHer heart fluttered slightly.\n\nAnthiel gave her a knowing smile and began. \"Dearly beloved, we are gathered here today in the sight of Illuminar and these witnesses to join these two in holy matrimony.\"\n\nThis was it.\n\nShe was not only bonded, but in a few moments she was going to be married too; fully, officially, and properly married. She couldn't believe how surreal it was now that it was finally happening. She'd only met him two months ago, and really only a month and a half ago since she'd initially been under the influence of the will-breaker ring. Yet here she was, about to promise herself to him -- to follow and obey him -- for the rest of her life.\n\nShe was finally okay with that.\n\nTheir talk earlier had greatly comforted her, and while she still didn't like the idea of having a lord, she thought she could take it because it was Ethan. Sweet, wonderful, caring Ethan. He was looking at her like he'd been gifted an entire vault full of gold. His smile and the twinkle in his eyes made her heart sing, and she finally felt free to respond without reservation.\n\nIt was wonderful.\n\nAnthiel turned to him. \"Do you Ethan, with full knowledge and consent; take this woman, Rachel, to be your wife in the covenant of marriage? Do you swear to keep and provide for her all of your days, committing to treat her with honor, love, and respect in all circumstances to the best of your ability, and allow only death to separate you?\"\n\n\"I do.\" He said as he looked her, eyes shining with happiness.\n\nThe high elf turned to the bride. \"Do you Rachel, with full knowledge and consent, give yourself to this man Ethan, to be his wife in the covenant of marriage? Do you swear to follow him for all of your days--\"\n\n\"And obey.\" Rachel interrupted before she realized that her mouth had even opened. Apparently Ethan had talked to the ship's pilot to strike 'obey' from the vows like he'd suggested.\n\n\"Are you sure?\" He asked.\n\nShe nodded, no longer interested in modified wedding vows. It was scary and made her very nervous, but she trusted him not to take advantage of her. She had literally never been more apprehensive in her life, but she was determined anyway. He was a good man; he would treat her right even if she promised to obey him.\n\nAnthiel looked at Ethan, waiting for a response.\n\nHe nodded, so the high elf began again. \"Do you Rachel, with full knowledge and consent, give yourself to this man, Ethan, to be his wife in the covenant of marriage? Do you swear to follow and obey him for all of your days, committing to give yourself only to him; and to the best of your ability treat him with honor, love, and respect in all circumstances, and allow only death to separate you?\"\n\n\"I do.\" She replied softly\n\nShe'd never been more sure of anything in her life, yet the butterflies in her stomach hadn't completely settled at the idea of obeying him.\n\n\"Then in the name of Illuminar, I now pronounce you husband and wife. Ethan, you may kiss your bride.\"\n\nHe stepped close, right into her personal space and put his face close to hers.\n\nShe froze.\n\nHer brain seemed to have completely locked-up at the realization that she was about to have her very first kiss in a moment.\n\nHow does one kiss?\n\nShe cast around in her mind frantically trying to remember anything she'd heard on the topic, but her brain wouldn't cooperate. Her brain which usually ran a mile a minute suddenly seemed as slow as molasses in mid-winter.\n\n\"Do you know how long I've been waiting for this?\" He whispered softly as he leaned in slightly.\n\nTheir lips were mere inches apart.\n\nThe bride worked her jaw for a moment trying desperately to make a sound; any sound.\n\n\"You okay?\" He asked in concern, pausing.\n\nShe couldn't answer, her brain having frozen in panic at what was about to happen. She'd never done anything physical intimate with a man before. Not like this. She'd snuggled with Ethan but this was a whole other level of intimacy that she didn't know how to deal with; she didn't how to respond.\n\nShe felt movement behind her and felt a warm, soft, slender hand slide into hers and give it a gentle, reassuring squeeze.\n\n\"Take a deep breath Rachel.\" Alana said gently. \"It'll be okay, just breathe.\"\n\nShe did and felt herself calm down a bit. Alana's hand started to retract, but the bride held on for dear life; clinging to her comforting presence to make her brain keep working.\n\nShe saw Ethan's eyes flick to Alana in the tell-tale way they often did during a telepathic conversation, then her husband -- her brain froze even harder as she realized that had a husband -- he leaned forward and kissed her.\n\nIt was wonderful.\n\nHer brain didn't unlock so much as turn into a puddle of gooey, happy, mush. He was at once tender and caring, as well as strong and assertive. She felt his hand slide around her waist and pull her front into his and she didn't resist. It felt strange to have his entire front pressed up against hers, but it also felt good too. She was acutely aware that his hips were also pressed against hers, and her breasts were pressing into his chest.\n\nHer brain froze harder as her body slowly started reacting.\n\nHe pulled away after several seconds, gave her an adoring look, and then planted a tender kiss on her forehead. She sighed softly and leaned into it slightly, her brain having finally decided to loosen up a bit.\n\nShe was still holding Alana's hand.\n\n* * *\n\nAlana took a small sip of the cider as she looked around the deck at the makeshift wedding reception. The bride and groom were dancing on the weather deck; or rather the bride was dancing and the groom was trying desperately to do more than fumble around trying to match her.\n\nTaloni and Beth were dancing together, with the blonde taking the man's roles as the two teens giggled about how awkward it was that she kept trying to slip back into the woman's role. Selene was watching from the railing directly opposite the wood elf, and the Brazilian woman looked both confused and like she was enjoying herself. Serif was keeping Raklan in line as usual, and Anthiel was playing a little jig for the dancers.\n\nThe food was mostly just their best ship's food, but it was good and the mood was merry.\n\nAlana reached down and put a hand over her womb. \"You'll belong to a good family little one.\"\n\n*Talking to the baby already?* Ethan asked telepathically as the dance ended.\n\nShe nodded. *You're going to be a great father.\"\n\n*I hope so.*\n\n*You will be. You'll have to be, given how many kids you'll probably have.*\n\n*Holy shit, I hadn't thought about that.* He clapped his head to his forehead, prompting confused looks from his other wives, as they had been talking directly and not to everyone else. They all congregated around the wood elf, with Ethan leading Rachel by the hand. She seemed very happy and content to be led. When they'd congregated, Ethan explained what they had been talking about.\n\n\"I mean, how many kids do you ladies want?\" He asked.\n\n\"As many as you're willing to give me master.\" Taloni said with a dreamy look in her eye.\n\n\"Yes please.\" Beth echoed, looking down at her flat stomach. \"I could really use to put on a few pounds in this area Dominus, if you could help me with that.\" She moved her hand through the air like she was caressing a nine-month-pregnant belly.\n\n\"I'm with Taloni.\" Alana said. \"My womb is yours for as many kids as you'll be willing to let me carry for you.\"\n\nThe wood elf couldn't help but notice Rachel blush, so she turned towards her. \"How about you?\"\n\n\"I um...\" The bride glanced towards the captain's cabin. \"I honestly don't know. At least one. It might depend on how crowded things get.\"\n\n\"And sir, don't forget your other wives.\"\n\n\"Seven... oh man.\" He shook his head. \"If you all only want two, that's still fourteen kids.\"\n\n\"I like to have a lot more if that's okay with you master.\"\n\nEthan took a deep breath and exhaled slowly. \"What's a lot?\"\n\n\"At least four or five master, if it's okay.\"\n\nAlana and Beth both sighed in unison, the blonde clearly liking the idea as much as she herself did.\n\n\"That's thirty to thirty-five kids.\" Ethan said as his eyes bugged out.\n\n\"You're assuming that some of use won't want more... sir.\" Alana said almost coyly.\n\n\"I couldn't ever get to know that many kids.\" He said.\n\n\"Perhaps you could spread them out?\" Rachel suggested. \"Some say that Ithlan's wives lived much longer than their respective races would ordinarily live. We all might have more time than is usual for non-elven women.\"\n\n\"I hadn't thought about our lifespans.\" Ethan frowned. \"How long do dragons usually live?\"\n\n\"A few hundred years.\" Beth replied. \"There are stories of incredibly old dragons reaching four hundred, but that's rare.\"\n\nHe looked around at them, shock on his face. \"But what about... You're sure you ladies will live longer?\" He looked at his two human brides and his Fey one in alarm.\n\nRachel shrugged, looking unsure.\n\n\"Oh, I forgot.\" Beth replied brightly. \"I did a lot of reading on Ithlan when I was young. It's not common knowledge, but his wives did live a long time. His first wife was a human who reached two or three hundred years old depending on the account, and she aged more like an elf than a human.\"\n\nEthan breathed a gigantic sigh of relief. \"Oh thank God for that.\"\n\nSuddenly, Beth gasped and covered her mouth. \"I hadn't realized... we're going to live for...\" She looked around at them. \"We're going to be old.\"\n\n\"But that means we'll have time for plenty of kids...\" Alana said with a sly smile, a gentle itch forming in her nether regions.\n\n\"Not until this situation with Lord Delmar is dealt with.\" Ethan said. \"After that, I'd be more than happy to make you all mothers.\"\n\nAs one, all his wives sighed.\n\n\"Speaking of becoming mothers, I think one of us needs to practice.\" The wood elf said with a twinkle in her eye as she looked at the bride.\n\nRachel blushed.\n\nEthan extended his hand towards her. \"Shall we?\"\n\nShe bit her lip, then nodded and took his hand.\n\n\"Will you all be okay below decks?\" He asked the rest of them.\n\n\"Of course, go.\" Alana urged. She wasn't sure why, but the idea of her husband finally making love to her best friend was one of the most appealing things that had ever crossed her mind. The only thing that could make it better was if she was there for it, but knew that wouldn't happen; no matter how much she wanted it to.\n\nEthan gave a gentle tug on the redhead's hand and they started towards the captain's cabin.\n\n* * *\n\nEthan closed the door behind him, feeling a bit odd that his constant bed companions wouldn't be next to him tonight. He had gotten used to waking up with all of them, but he felt like Rachel deserved a wedding night that was all her own.\n\nShe really was amazing, even if he'd taken a while to see it. She was courageous, having launched herself into harm's way countless times to save them. She was kind, having been an incredible friend to his other wives, and especially Alana. She was clever and wise, often coming up with brilliant solutions to their problems and giving great advice.\n\nYet for all that, she was still only nineteen.\n\nMature for her age, but still only nineteen.\n\nHe found himself constantly having to remind himself of that because she often acted very mature. She had the characteristic nervousness of a teenage girl about to do something with a boy for the first time. She was beautiful too, and he gave her the once over in her formerly-red-but-temporarily-white dress. It still accentuated her figure marvelously. That combined with her personality...\n\nHe felt a smile creep onto his face.\n\n\"What?\" She asked. Her one hand was across her body holding the opposite elbow and she appeared to be chewing on her cheek slightly.\n\n\"You.\" He grinned broadly. \"It's kind of funny, I didn't even realize how much I came to really trust and rely on until I'd been doing so for a long time. You kind of snuck up on me, you know?\"\n\nShe gave him a small smile. \"Yeah, yeah I know what that's like.\"\n\n\"You're nervous.\" He observed.\n\nShe nodded. \"I've never done anything like this before.\"\n\n\"Like I told Beth on her wedding night, it's like most things; you start without any experience and get better as you go.\"\n\nThe redhead nodded, but kept shifting her balance back and forth on her feet and fidgeting with her hair, her dress, and almost anything else within reach. She didn't seem to know what to do with her eyes either.\n\nHe took her hands and spoke softly. \"Hey, it'll be okay. I promise.\"\n\nShe nodded, but didn't look reassured.\n\nHe marveled at her ability to charge necromancers, attack arch mages, and challenge dragons, but be scared on her wedding night.\n\n\"You're overthinking this, aren't you?\" He said trying not to smile too widely in amusement.\n\nShe hesitated, then nodded.\n\n\"Brain going a million miles a minute? Can't catch a thought except to panic a bit?\"\n\nAnother nod.\n\n\"Well, let's see if we can get you out of your head then.\"\n\n\"How are you going to--\"\n\nHe cut her off with kiss. It was slow and tender at first, yet she almost resisted slightly. He persisted, and her resistance faded but didn't disappear altogether. He pulled back slightly and looked into her wide blue eyes.\n\n\"I'm not used to that.\" She whispered. \"I like it, but I keep feeling like... like...\" She averted her eyes.\n\nHe reached up and stroked her cheek with the back of his finger. She leaned into his hand slightly and let out a soft, almost imperceptible sigh.\n\n\"Like what?\"\n\n\"I don't know.\" He looked at him again and bit her lip. \"Could you do that again?\"\n\nHe leaned forward a kissed her gently. She returned the kiss hesitantly, almost pulling back slightly; but at the same time she seemingly subconsciously pressed her front up against his. She was clearly turned on, but also clearly more nervous than any of his other wives had been the first time.\n\nTheir kiss broke and she closed her eyes, then licked her lips in an almost absent-minded way. \"I can see why the others like doing that.\"\n\n\"They're not the only ones.\" He grinned.\n\n\"Do they all kiss differently?\" She seemed both curious and like she was stalling and he let her, deciding that pushing her would be a bad idea.\n\n\"A little bit, it's hard to explain though.\"\n\n\"Do I... I mean, I've only done it a few times, but am I... am I okay at it?\" She looked up at him, all walls down and looking completely open and vulnerable; not like she was scared, but more like she was trying not to hide herself from him. He knew how hard that was for her and appreciated it all the more because of that.\n\nHe winked at her. \"You know, I might need a larger sample size just to be sure...\"\n\nShe smiled. \"May I kiss you?\"\n\n\"You never need to ask.\"\n\n\"Never?\"\n\n\"Never.\"\n\nShe nodded, then leaned forward, hesitated for a moment, and then gently planted a tender kiss on his lips.\n\n* * *\n\nOf all the things Rachel was good at, being in the moment wasn't one of them. She was trying desperately to calm her mind and stop it from simultaneously running a million miles a minute and completely freezing.\n\nKissing Ethan helped.\n\nA lot.\n\nHer mind didn't exactly go blank, but the sensation was extremely diverting. She pulled back from her short kiss and before she'd realized what she was doing, she licked her lips again. She didn't know why she kept doing that. It wasn't the taste, though the taste wasn't bad. It wasn't the sensation, though the sensation was wonderful. It was something else. Something of him that he'd left on her. She liked that for some reason. She liked it rather a lot. She just couldn't figure out what it was.\n\nSuddenly, he scooped her into his arms and she yelped slightly.\n\n\"What are you doing?\" She asked as she wrapped her arms around his neck.\n\n\"Enjoying my bride.\" He said. \"Or rather, the adorable way her nose scrunches slightly when she's thinking deeply or overthinking.\"\n\n\"It does?\"\n\nHe nodded. \"Adorably so.\"\n\nHe set her down on the bed and her brain seemed to lock up slightly. This was all too new; too different. He had followed her down so he was partially laying on top of her and her entire body was freaking out. She'd never felt anything like it before, well unless you counted when she woke up with Alana in the hammock that one morning. But for some reason, that had been different. The wood elf had had an incredible calming effect on her -- like with the wedding kiss earlier -- but Ethan was making her tense... and nervous... and a few parts of her tingly in ways she'd never felt before.\n\nShe was yanked back to the present when Ethan's fingertips slid down her face onto her slender neck, and then began to touch her upper chest. She sighed in contentment as her body luxuriated in the sensation while her brain stubbornly continued its freak out. She felt herself get slightly stiff even as her body both screamed for more and wanted to run away.\n\nEthan gaze her a piecing look for a second, then resumed his fingertip exploration.\n\nShe sighed; thank Illuminar.\n\nFor a moment, she'd been worried that he'd stop after she'd tensed up.\n\nHe felt her collarbone, and she closed her eyes enjoying the sensation. For some reason, she'd always found collarbones to be especially intimate to touch. She wasn't sure why. His finger trailed over to her left shoulder and slipped almost imperceptibly under the fabric of her dress.\n\nShe froze.\n\nHer birthmark; He would see her birthmark.\n\nSuddenly her stomach was twisted up in knots as she realized that she'd completely forgotten about it. She had always been ashamed of it and worried about what her future husband might say when he saw it. Now he was about to.\n\n\"What's wrong?\" He asked looking concerned.\n\nShe worked her mouth soundlessly.\n\n\"It's okay, you can tell me.\"\n\nShe couldn't.",
        "She couldn't admit it. It was stupid that she couldn't, but she couldn't.\n\n\"I'm going to try and calm you down a bit, if you don't mind?\" He said.\n\nShe nodded, not know how he could accomplish that.\n\nHe looked her directly in the eye and suddenly Rachel felt something she'd only felt once before, from Kyrupto. She felt his will meet hers.\n\n\"Take a deep breath.\" He said, and something about his eyes made it nearly impossible to resist... nearly. Some part of her brain fought, and fought hard. He had never compelled her before, and some part of her realized that he was only do it now to help calm her down and she herself was grateful. However, her brain didn't seem to have gotten the letter.\n\nBut her brain fought.\n\nIt fought hard.\n\nIt was hard; very hard, but she instinctively fought tooth and nail to resist... and she did. However, Ethan completely stopped trying to compel her the moment her resistance mounted.\n\n\"Well, that's two.\" He chuckled.\n\n\"Two what?\"\n\n\"Two of my wives I can't compel.\"\n\n\"But I didn't really resist; you stopped when I started fighting.\"\n\nHe shook his head. \"I didn't have to push hard to tell. You've got the same force of will that Alana does, and that's saying a lot.\"\n\nShe nodded, not sure what to make of that. Why just Alana and her? It could be personality, but something told the redheaded mage that there was more to it than that. Something hidden component that she and the wood elf possessed that the others didn't.\n\n\"Well, at least you're relaxed.\" He smiled.\n\nSuddenly, Rachel was very aware that the man she'd fallen head over heels with was partially laying on top of her. And unless she was much mistake, she felt a bulge in his hip region that was almost certainly...\n\nShe froze.\n\n\"Why did I open my mouth?\" Ethan shook his head. \"About the only thing that seemed to have calmed you down earlier was... Hmm.\" He eyed her curiously. \"Would you be up for trying something a little... unconventional? It might help you relax a bit.\"\n\n\"Like what?\"\n\nHis eyes twinkled.\n\n* * *\n\nAlana laid back in one of the four hammocks in the ladies area of the crew quarters. One was of course Anthiel's and another Selene's which left only two for herself, Beth and Taloni. The two younger girls had insisted on sharing a hammock so they could talk about something, which left Alana in the hammock that Rachel usually occupied.\n\nIt still smelled like her.\n\nThe wood elf took a deep breath and smiled.\n\nSoon.\n\nJust one more night and then she would be in the same bed as the wonderful redhead for the rest of their lives. One more dawn, one more day; one day more. She sighed; she was really looking forward to--\n\n*Alana, are you still awake?* Ethan thought to her.\n\n*Yes, why?*\n\n*Could you come up to the captain's cabin for a minute if you're not doing anything.*\n\n*Sure, but why?* She replied, her heart skipping a beat.\n\n*I'll explain when you get here.*\n\n*Okay, be there soon.*\n\nIt took most of Alana's considerable willpower not to leap out of her hammock and sprint to the captain's cabin. Instead, she settled for slipping out of the room at what she felt was a normal pace. Thankfully, Beth and Taloni were too busy talking to notice. She slipped out of the ladies area and made her way aft to the stairs up to the weather deck.\n\n\"Something wrong?\" Selene asked when she emerged.\n\n\"I don't think so.\" She shrugged.\n\nSelene gave her knowing look. \"The blushing bride having a few problems only the maid of honor can solve?\"\n\n\"Matron of honor.\" Alana corrected with a sly smile. \"I was speaking from first-hand experience the other day.\"\n\nThe gorgeous Brazilian woman looked confused.\n\n\"When I said that as good as he is on the battlefield, he's even better in bed.\" The wood elf left the caramel-haired beauty speechless as she slipped into the captain's cabin.\n\n\"Hi.\" She said.\n\n\"Hey, thanks for coming.\" Ethan smiled at her.\n\nHe was sitting on the edge of the bed with Rachel sitting sideways with her legs across his lap. The redhead was fully-clothed and leaning on his shoulder in pose that was more tenderly intimate than a prelude to lovemaking. She looked really nervous about something, but also incredibly content leaning against him.\n\n\"What's...? I mean, why did you want to see me?\"\n\n\"Well.\" He kissed the redhead's forehead and she sighed in response. \"My lovely bride has a terrible case of the nerves and you had an excellent calming influence earlier. I thought you could again for a few minutes.\"\n\n\"She is lovely.\" Alana agreed before she could stop herself.\n\nRachel stood up and gave the tiny wood elf a hug. \"Thank you for coming.\" She whispered into the brunette's ear.\n\n\"I'm happy to help.\" She replied softly, a bit more aware than she might otherwise be that the redhead's lips were right next to her ear. \"What's got you so nervous?\"\n\nRachel glanced at Ethan, then back at the wood elf. He rolled his eyes with a smile, then covered his ear and began to hum a strange tune.\n\n\"I know it's stupid, but it's my birthmark.\" The bride said after a moment's hesitation.\n\nAlana felt her lips spread into a wide smile. \"You have a birthmark too?\"\n\n\"Wait, you have one?\"\n\n\"Yup, on my left shoulder.\" The wood elf hitched up her dress slightly and then pulled the left shoulder down far enough to reveal her birthmark. It was a small, round birthmark and slightly larger than a large coin. It was dark grey-brown and looked vaguely like tiny dragon scales.\n\nRachel's mouth fell open.\n\n\"What?\" The wood elf asked.\n\nThe redhead mutely hitched her dress up slightly and also pulled the left shoulder of the dress down to expose her own left shoulder to the wood elf, though not Ethan who was behind her. Alana felt her jaw drop as she looked at it. The two birthmarks were identical.\n\nAbsolutely identical.\n\nSame size.\n\nSame shape.\n\nSame placement.\n\nSame dragon scale-like appearance.\n\nSame everything.\n\nThe two women looked at each other, then at each other's birthmark, then back at each other. Alana could see in her best friend's eyes that she was as confused as the elf herself was. It didn't make any sense; how could they have two identical birthmarks? Alana had heard that hers was hereditary, but knew almost nothing else about it. Further, there was no chance that Rachel was related to her. Elven ears were incredibly persistent traits that lasted at least ten generations, if not longer. The redhead clearly didn't have elven blood in her since her ears were very round and incredibly cute.\n\n\"Ladies, is there something you want to share with the whole class?\" Ethan asked.\n\nAlana took a step sideways so he could see her birthmark as Rachel turned around, the shock of the discovery apparently making her forget to be self-conscious.\n\n\"Holy shit.\" He breathed as he looked from one naked shoulder to the other.\n\nRachel bit her lip as she glanced at Ethan's reaction and then at her birthmark. Apparently her self-consciousness was back.\n\n\"Identical birthmarks on two of the most beautiful shoulders I've ever seen.\" He whistled, then his eyes twinkled. \"It's like you two are a matching set.\"\n\nThey both blushed.\n\nHe stood and stepped over to them, the reach out and brushed his finger over each one's birthmark in turn. \"They're the same. That's either an incredible coincidence, or... Hmm.\"\n\n\"You don't...\" Rachel looked down, then looked up at him again. \"You don't think it's ugly?\"\n\nAlana couldn't help but smile at the profound dichotomy that was her best friend. She was capable of being the bravest person the wood elf had ever met, and yet also the most timid when it came to matters of the heart.\n\nIrony.\n\n\"Well, let me take a closer look.\" He stepped forward and gently bent her back slightly, pushing her shoulder up so he could see it more easily. He looked her in the eye for just a moment, and then leaned down and gave her birthmark a tender, loving kiss.\n\nRachel moaned at the same time that her body stiffened slightly. Alana reached out and took her hand and she seemed to relax a bit. Ethan then started kissing all around the bride's birthmark, eliciting more than one soft sigh and moan from her.\n\nAlana smiled; she recognized all the signs of a woman who was itching for more. She continued holding the redhead's hand as the bride started arching her neck to give him better access. He had already kissed all the way up her collarbone and was now starting on the soft, smooth, tender skin of her neck.\n\nEverything in the wood elf wanted to stay, but she wanted the redhead to have a wedding night all her own. The rest of them had had their own, and she deserved no less. She made to leave, but Rachel gripped her hand more tightly as she tried to pull away.\n\n\"Stay?\" The redhead whispered in an almost pleading voice.\n\nAlana blinked. \"Are you sure?\"\n\nRachel looked down at Ethan. \"Can she; please?\"\n\nHe looked at his first wife, a twinkle in his eye as he thought to her. *I assume -- given your attraction to her -- that you have no objection?*\n\nAlana choked back some happy tears. *None sir.*\n\nHe looked at the redhead. \"She can stay, if you lift up your arms so I can take off your dress.\"\n\nRachel froze. \"You'll see me in my underthings.\"\n\n\"And much less not long after.\" He nodded. \"That is the general idea.\"\n\nRachel nodded, but didn't move.\n\n\"It'll be okay, I promise.\" Alana said. She reached down and gently prodded the bride's arms upwards. Slowly, the redheaded teen raised them until they were above her head.\n\n\"I'm going to take your dress off.\" Ethan said matter-of-factly.\n\nShe nodded and closed her eyes, a tiny whimper escaping her mouth that was either anticipatory or worried; probably both. He reached down and touched the redhead's legs at the knee, just under the hem of her dress.\n\nShe shuddered in pleasure.\n\nHe slowly slid his hands up her slender legs, taking the dress with it. He move almost tortuously slowly, lightly brushing his fingertips over her slender thighs. Alana was sure they were the most beautiful thighs in existence. Rachel was trembling slightly even as an occasional whimper or sigh of pleasure escaped her lips. She was wiggling her hips to make things easier for their husband and clearly wanted this, but also clearly was very nervous.\n\nEthan's hands reached her hips, exposing the wrap the redhead had around her nether regions. He lingered for a moment, brushing his fingertips laterally across the redheaded teen's unsullied hips.\n\nShe moaned.\n\nHe moved his hands higher, exposing her flat, toned stomach. Alana would've given almost anything to have her hands were Ethan's hands were, but resisted. This was about them and she wanted to help, but not interfere. Well, she wanted to interfere but wouldn't; this was too important to their relationship and she didn't want to get in the way.\n\nHis fingers went higher, exposing the bottom of the wrap around her breasts. Rachel stiffened slightly, but didn't fight him. Alana could tell that she was both aching to be naked and dreading it, though knowing her best friend the former was definitely winning.\n\nEthan lifted the dress still higher and finally off her head. Rachel lowered her arms, one across her breasts covering them and the other covering her mound. Both were already covered with cloth, but apparently she was still self-conscious. Ethan shook his head, and Alana felt a hint of dragon across their bond. His tone became more commanding, though no less loving.\n\n\"Arms up.\"\n\nRachel bit her lip and hesitated, but eventually obeyed, resting her forearms across the top of her head to keep them as low as possible. Alana took her hand again, and Rachel clenched it like she was holding on for dear life.\n\nEthan looked at the wrap around her breasts for a moment before reaching out and grabbing the end-point, which was tucked in to secure it. He gave it a tug so it came loose and held it in his hand. Instantly Rachel sighed, which turned into a long moan. Her eyes became a bit hooded in lust, but she was still holding onto the wood elf's hand like a lifeline.\n\nEthan gently pulled the wrap with one hand as he raised his other hand and made a twirling motion with his finger, indicating that she should turn. Rachel slowly started turning on the spot, her hands raised as the wrap's many revolutions slowly came undone; each turn exposing more of her breasts.\n\nAfter a half dozen, the wrap finally fell free just as Rachel was directly facing Alana.\n\nThe wood elf couldn't help but stare.\n\nRachel was bigger than herself, Beth, or Taloni, but not exactly huge. Perhaps it was because her arms were above her head, but they seemed to scream 'touch me'. They were gracefully curved in a way that none of Ethan's other wives were, and perhaps it was because of the size. The nipples were standing proudly erect, and not from the cold. Around them, the areola seemed to frame them and make them even more enticing.\n\nThe only reason the wood elf was able to resist staring longer -- and even touching them -- was because the redhead was still turning. She finished the turn to face Ethan, and immediately started moving her arms to cover herself.\n\nThe dragon growled softly and shook his head.\n\nHer arms froze at about face level, her breasts protruding proudly and facing him.\n\nHe licked his lips.\n\nShe moaned.\n\nHe reached out with a single hand, finger extended and his claw sliding from its sheath.\n\nRachel whimpered as he touched the side of her breast with the smooth back of the claw. Its smoothness raised goosebumps on the redhead's skin as he traced it lightly down; the sharp point not facing her sensitive flesh, but present nonetheless. He reached the curve of her hip and then -- deft and quick as could be -- he rotated the claw around, hooked it under the wrap that covered her mound, and sliced downwards.\n\nThe wrap fell to the floor.\n\nShe was completely naked.\n\n* * *\n\n\"Wow.\" Ethan breathed as he looked at Rachel.\n\nAlana had an absolutely perfect figure, Beth had the best legs you could imagine, and Taloni had gorgeous wings; but Rachel's standout feature was her breasts. Literally. They were absolutely perfect. He had literally never seen such a magnificent set anywhere, ever. Not in real life or porn.\n\nHe'd once heard that the perfect breasts had a 45:55 ratio, where the nipple was pointing up in a way that was inviting. He'd never really understood what that meant until this very moment. Something about them was seemingly begging to be touched, stroked, and lovingly caressed. It was almost like they were calling to him; and in a stronger way that his other wives' breasts did. The nipples were small and hard in arousal, and were pointing directly at him, again, beckoning him in. While she certainly wasn't huge, she had enough breat to comfortably fill his hand.\n\nThe rest of her body was incredibly lovely. Her legs were slender, toned, and long. Her hips flared invitingly, her lower set of lips protruded slightly, hanging open like a flower ready to be pollenated. Her waist was narrow, her breasts were again absolutely perfect, and her face...\n\nEthan felt his dragon side retreat a little bit as he saw the expression on her lovely face. She seemed to be both basking in his adoration of her body and yet a little bit scared too.\n\n\"Yes, I definitely like what I see.\" He said in answer to her unasked question.\n\n\"Even...?\" She glanced at her birthmark on the one side, and then to her other shoulder.\n\nHe'd forgotten.\n\nThere was a faint, telltale ripple in the skin of her right shoulder that betrayed a minor burn scar; a souvenir from their fight with Gonorran.\n\n\"I actually like the birthmark, and the scar...\" He hung his head slightly. \"That's my fault.\"\n\n\"No, I'm glad you attacked, and I was right there with you.\" Rachel replied, though she had moved her arms so she was covering herself. \"We saved those kids from a potentially awful fate.\"\n\n\"I still feel bad about it though.\"\n\n\"There's one way you could 'make it up' to me.\" Rachel said softly but she was shivering and he could feel both arousal and trepidation over their bond. \"It is my wedding night.\"\n\nHe smiled. \"You want to?\"\n\nShe looked a bit scared, but squeezed Alana's hand and nodded. \"I do. I mean, I'm really nervous; but that just because I've never done it before. I promise I'll be better next time.\"\n\nHe gave her a small smile. \"I won't complain about improvement, but so far I've been nothing but happy.\"\n\n\"Really?\"\n\nHe nodded. \"Really.\"\n\nHe walked out and scooped her up into his arms. She yelped slightly and covered herself with her hands, then paused, and very slowly, very hesitantly moved them to expose herself to his eyes. Her own eyes had a question in them, and one he realized that she needed an answer for. He took several seconds to look at the naked teen in his arms before he looked her in the eyes again and spoke.\n\n\"Perfection.\"\n\nShe relaxed into him and sighed.\n\n\"I can go now.\" His wood elven bride offered tentatively.\n\nRachel and Ethan both look at her, then each other. He could tell -- he wasn't sure how, his dragon side perhaps -- but he could tell that the redhead didn't want the elf to leave. She really didn't want Alana to leave, and there was a bit of silent pleading in her eyes as the bride looked at him.\n\n\"Actually, why don't you stay if you don't mind.\" He replied.\n\n\"Oh?\"\n\n\"Yeah, in case Rachel gets nervous again.\" He said aloud and then thought to her. *I'm 99% sure she wants you to stay, and you seem to calm her down a lot. Knowing her, she probably won't need help to relax in bed after tonight, but she would probably really appreciate your help this first time.\"\n\nAlana beamed. \"Okay.\"\n\nEthan took a step towards the bed, leaned over, and gently deposited his naked teen bride on it. He lowered himself along with her so he ended up leaning over her.\n\nRachel glanced down at her naked body and gave him an embarrassed smile. \"I keep wanting to cover myself up.\"\n\nHe nodded, then looked at Alana. \"Be a dear and take the bride's hands.\"\n\nHe looked pointedly at the head of the bed, and the wood elf sat down so her back was against the headboard. Rachel took a few deep breaths.\n\n\"If I give her my arms, I won't be able to cover myself.\"\n\n\"No, you won't.\" He said matter-of-factly.\n\nShe bit her lip, and then slowly raised her arms and put them above her head, placing them in Alana's own hands. His new bride was laying on her back completely exposed to him, resting her hands in his first wife's hands and the brunette held them both tenderly and securely. He legs were partially spread so that he was between them, but not quite splayed open in invitation.\n\n\"Make me.\" Rachel whispered suddenly.\n\n\"Make you...?\" He prompted.\n\n\"Make me ready for you.\" The redhead said in a voice barely above a whisper. \"I'm too tense because I don't know what to expect, and I'm going to get stuck in my head. Can you...\" She looked down, then back at him. \"Can you... um, 'make me ready' for you?\"\n\n\"I can, but is that what you really want?\"\n\n* * *\n\nRachel stared into Ethan's cat-like eyes as she pondered his question. Of course it wasn't what she wanted; what she wanted was to be able to relax and enjoy this properly... but she couldn't. Her brain wouldn't let her. She knew that after tonight it would probably be fine, but tonight everything was too new; too different. She wanted to be able to give herself to him without help, but she knew herself well enough to know that right now, she really needed help.\n\n\"Yes.\" She said softly. \"Yes it is.\"\n\nSomething in his eyes changed, and it wasn't just the compulsion. Something of the dragon peeked out too, though Ethan was still clearly driving the show. Suddenly, she was helpless to move her eyes or look away. She tried to blink, but couldn't keep her eyes closed when she did. In the back of her mind, she was measuring the force of the dragon's will against her own. She was comparing and contrasting his will with her own and deciding whether or not she could resist him.",
        "She could.\n\nBarely, but she could. It would take most of her willpower, but he had been right; she could resist his compulsion if she wanted to...\n\n...but she didn't want to.\n\nInstead she used all her willpower in quite another direction, and one she'd new tried before. She used all her willpower to not fight him. Perhaps because of her upbringing, the strict father, or the willbreaker ring, but she had always fought for control. Now she was fighting to not fight for control. It was harder than it sounded...\n\n...until she felt what Ethan was pushing at her.\n\n...until she felt the emotions coming over their bond.\n\nShe'd never felt them this strong before, never felt how he felt about her before. He adored her. He loved her. He was enraptured and entranced by her. The strength of his affection or her made her jaw drop. All of this poured over their bond, and she felt her body respond.\n\nAlmost without meaning to, she felt herself spread her legs open wider. She'd never done that before and it scared her, but it seemed the only appropriate response.\n\nHe wanted her.\n\nNot just her body, not just her mind, not just her insights nor her magical power.\n\nHer.\n\nJust her.\n\nAll of her.\n\nA powerful feeling began to sweep over her body. Her breathing became shallower. Suddenly, it felt like every part of her body was on fire and begging to be touched. She found herself arching her back towards his hands and torso, desperate for him to touch her anywhere.\n\nHe did.\n\nHe roamed his hands over her body, tantalizing her with sensations that she didn't even know existed. This was nothing like when she touched herself; this was on a whole different level. They weren't even comparable. She tried moving her hands to reciprocate, to touch him, but she couldn't. Alana was still holding them, and holding them quite firmly.\n\nShe settled for raising her legs up and cradling them around him, letting the inside of her thighs rub up against his sides.\n\nShe moaned.\n\nShe adjusted the way her legs were touching him, trying to find the best angle; the greatest pleasure for them both. She tried a few different angels before she realized that she was pulling herself out of the moment to try and improve the moment.\n\nThen his eyes changed.\n\nShe felt a new command buried in them besides the flood of sensations that were turning her into a writhing pool of pleasure. She felt her legs -- seemingly of their own volition -- leave his sides and lay flat on the bed, spread widely for him. Her thighs protested heavily at the loss of sensation, but there was nothing she could do to change it unless she directly fought Ethan's will with her own.\n\nShe didn't want to do that.\n\n\"I'm taking complete control.\" The dragon growled softly as Ethan lovingly caressed her breast.\n\n\"Yes my lord.\" She whispered in response, shocked to find that the title now felt natural; normal; right.\n\nAlana had her hands, Ethan had her body, and the dragon had her mind. She was completely helpless and totally out of control. She could've fought it if she wanted to. She could've beaten the compulsion that was keeping her completely immobile and out of control. She could feel that she could beat it... if she wanted to.\n\nShe didn't want to.\n\n\"Don't think, just feel.\" The dragon, or perhaps Ethan, whispered into her ear.\n\n\"Yes my lord.\" She replied, and gave herself to the sensation that were coursing through her body.\n\nIt was overwhelming.\n\nShe had control of nothing for the first time in her life and was the happiest she had ever been. Ethan's hands and tongue were seemingly everywhere at once, touching every part of her at once. No, it was more than that. He not only was touching her body, he was also suffusing her mind. He was all around her physically, all around her mentally and--\n\n\"This will sting slightly.\" Ethan whispered\n\n\"What will-- Ow!\" She hissed as she felt his massive cock slam into her nether lips, spreading them wide, breaking her maidenhood, and filling her fuller than she'd ever felt in her entire life in a single thrust. She had no idea it was possible to feel this full. Almost on instinct, she healed the tiny wound from the breaking of her hymen, instantly banishing any stinging sensation. Once that was gone...\n\nIt was amazing.\n\nIn the back of her mind, she was glad he'd given her almost no warning. If she had, she surely would've tensed up and made it hurt. She smiled at him, glad that he knew her so well.\n\n\"Thank you my lord.\" She breathed, not even able to comprehend how incredible it felt to have him inside of her at last. It was more personal, more intimate, and more pleasurable than she ever would've guessed it could ever be.\n\nThen he moved.\n\nHe pulled back, only to thrust firmly into her again.\n\nShe moaned.\n\nHer entire body was on fire and begging for release. It was like someone had poured flaming oil into her veins as the sensations coursed through her, looking for any place to express themselves, but there wasn't one to be found. He continued thrust deeply into her with long, full deep strokes; fast enough to keep her simmering, but not fast enough for her to boil over.\n\n\"Please, please my lord.\" She whispered through the moans and sighs that seemed to be constantly escaping her lips.\n\nThe dragon just smiled.\n\nShe moaned in frustration, but couldn't look away because he was still compelling her. She couldn't move her body because his will held her in a gentle grip of iron. She couldn't move her arms because Alana was still holding her hands; both of them. Though, in the wood elf's case she wasn't holding them firmly anymore. She was holding them so gently a child could've broken free, but nothing in the world would've induced the bride to move her hands from the gentle embrace of her best friend.\n\nThat's when Rachel realized that Ethan's repeated thrusting had been pushing her up on the bed until her head was literally laying on Alana's lap. She had been so distracted by the sensations that had been -- and still were -- coursing through her body that she hadn't realize they she was so close with the delightful wood elf. Her back was on the wood elf's legs, her was head in her lap, and her hands were in Alana's\n\nShe wouldn't have it any other way.\n\nFor some reason, it just felt right and fitting that she was leaning against the wood elf while their husband took her the first time. She looked into the dragon's eyes, realizing he had almost certainly planned it this way. He was so kind, so caring, and so tender.\n\nHer brain almost spasmed as she crested another wave of pleasure, so close to going over but lacking that one final bit of sensation to push her into the bliss the dragon had been driving her towards for the last... she didn't know. An hour? A week? An eternity?\n\nThen without warning, Alana leaned down and planted a tender kiss on her forehead.\n\nShe came.\n\nHard.\n\n* * *\n\nAlana had been in bed with Ethan long enough to recognize when another woman was on the verge of orgasm. Rachel was. She hadn't gone over yet, but he was keeping her right on the edge. He could probably push her over whenever he wanted, but he seemed to enjoy keeping her there.\n\n*Kiss her.* The dragon commanded.\n\nThe brunette froze. *What?*\n\n\"Kiss. Her. Now.* The dragon repeated.\n\nThe wood elf felt herself freeze up even more. Kiss Rachel? Now? While she was in the middle of... The idea was so appealing that she hit a plateau similar to Rachel's almost instantly. She wanted nothing more than to lean down and press her lips to the redhead's.\n\nBut could she?\n\nShould she?\n\n*Now!* The dragon commanded with such force and urgency that she just didn't feel right ignoring him.\n\nShe started leaning down, but at the last moment changed targets and planted a tender kiss on the redhead's forehead.\n\nRachel came.\n\nHard.\n\nShe arched her back and opened her mouth in a silent scream as the dragon released her from compulsion. Her eyes rolled back in her head and she clasped Alana's hand hard. Her hips started bucking against Ethan's and she tightened her legs around him, seemingly trying to pull him deeper into her even as she also pulled the wood elf closer too.\n\nRachel kept herself in that position of rapturous pleasure for several seconds before she flopped back onto the bed and started writhing slightly; her hips nearly vibrating they were shaking so much. She let go of Alana with one of her hands and wrapped the other hand around Ethan and pulled herself closer to him.\n\nShe never let go of Alana's other hand.\n\nThe wood elf felt her heart nearly melt at that. The redhead had never even tried to let go of her other hand; she was still holding it as firmly as ever she had. Something inside of her just... just... there were no words to describe how indescribably happy that simple act had made her. It made her even happier because she knew it wasn't done with foresight, but on instinct. Rachel's instinct had been to keep hold of her with one hand and Ethan with the other.\n\nShe sighed.\n\nAfter nearly a minute of the redhead writhing on the bed, she slowed and laid still. Ethan had stopped thrusting and she lay breathing heavily, but otherwise motionless. She took several deep breaths with her head totally relaxed onto the wood elf's lap as she recovered.\n\nAfter several more seconds, she opened her eyes. By happy chance, or maybe on purpose, Rachel was looking right into Alana's eyes when she opened them.\n\nThey were shining with happiness.\n\nShe gave the wood elf a small smile as they looked at each other, and that second seemed to stretch out into an eternity. For some reason, she saw a change in the bride. She seemed at once both weaker and stronger; more frail and more resilient at the same time.\n\nIt was as if her walls were down and she was taking no pains to keep them down, but rather right now -- with the two of them them -- 'down' was the natural state of her walls. There was a deep level of trust there that Alana had never seen before, even as close as they had been. For some reason, she knew that Rachel's trust extended to Ethan as well.\n\nRachel seemed to come to herself and looked down at him.\n\n\"Hi beautiful.\" He said softly. It was Ethan, and no longer the dragon.\n\n\"Hi ugly.\" She replied affectionately, tracing her finger along his face.\n\nAlana chuckled.\n\nThe redhead look up at her and smiled sheepishly. \"Okay, now I get why you and the others disappear in here with Ethan so much.\"\n\nAlana looked fondly at the two people she loved most in all the world. \"Yeah, it's pretty great.\"\n\nRachel looked down at the slightly sweaty sheen that was covering her whole body, not to mention the various fluids that were now leaking from her. \"I'm a mess.\"\n\n\"A beautiful mess.\" Ethan leaned down and gave her a tender kiss, which she returned without hesitation, nervousness, or anxiety. It was a slow, heartfelt kiss which spoke more of loving and tender affection than sensual passion, and this despite the fact that his probably now softening cock was still inside of her.\n\nRachel closed her eyes as they kissed, and only opened them several seconds after the kiss broke.\n\nShe sighed. \"Do you kiss all your wives that way?\"\n\nHe shrugged. \"I'm not sure; let me see.\" He leaned forward a bit and planted a similarly tender kiss on Alana's lips. She returned it with interest as normal, though she couldn't help but notice that there was the barest hint of a flavor on his lips she she'd never tasted before.\n\nA very feminine flavor.\n\nThe wood elf moaned into the kiss slightly, and not just because the love of her life was kissing her; though obviously that helped.\n\n\"So yes.\" Rachel said sleepily, and then yawned.\n\n\"I um...\" Alana hesitated, not wanting to say what she felt like she should say, but feeling like Rachel deserved to have Ethan to herself on her wedding night. \"I should probably get going.\"\n\nRachel almost reflexively tightened her grip on the wood elf's hand, which she'd never let go of. \"You don't have to.\" She said softly, her pretty blue eyes appeared to genuinely like having her there.\n\n\"You heard the bride.\" Ethan smiled. \"Unless you want to go...\"\n\n\"No.\" She said quickly. \"No I...\" She smiled. \"...I wouldn't mind staying.\"\n\n\"Good, becau... becau...\" Ethan yawned. \"Because I'm beat.\"\n\nHe slipped out of Rachel and flopped down on the bed. Rachel rolled just slightly so she was on her side facing him and laid her head on his chest. Alana slid down and laid on her back, with the redhead's back facing her. She was a little disappointed for only a few seconds before Rachel readjusted a few times and then turned to face the brunette, using his bicep for a pillow.\n\n\"Thank you.\" Rachel said softly as her pretty eyelids began to droop. \"I'm not sure I would've been able to... you know, without you here.\"\n\n\"I was happy to.\" She replied.\n\n\"You're good friend.\" The Redhead mumbled as her eyes fluttered closed.\n\n\"So are you.\" She whispered back.\n\nRachel -- in her nearly asleep state -- reached out an arm and flopped it affectionately across the wood elf's torso.\n\nAlana sighed.\n\nHer best friend had finally married her husband, she'd been there on their wedding night, and now the bride was nearly snuggling with her. Her husband was on the ravishing redhead's other side and Alana herself had a tiny life growing in her womb.\n\nShe smiled as her eyelids grew heavy.\n\nRight now, life was perfect.\n\n* * *\n\nCHAPTER 30 EPILOUGE\n\nGraflex the dwarf flopped down on a bench in his workshop and scratched his tired feet. It had been another long, boring day. Not for the first time -- in fact it was probably more like the tenth time that day -- he cursed Magistrate Haglath for making business difficult for him. The tyrant refused to catch the plague, or trip out of a tower window, or simply drown underneath the weight of his own corruption.\n\nThe dwarf glanced around the shop, scowling at the lack of both customers and challenges in Arcanum. He had the Magistrate to thank for the former, but the latter had been the case no matter where he was lately. He'd moved here years ago hoping that someone would come up with a challenge for his skills, but alas--\n\nDing, ding.\n\nThe bell by the door rang.\n\nHe sighed, then stood and walked out front again. He hadn't even lit the forge all day and hoped someone would want him to make something interesting. He wasn't holding his breath though.\n\nStanding just inside the door was a woman with long blonde hair who was wearing a dress that was frankly a little too white to be normal. Plus, she was skinny like all other human women. He would never understand what human men saw in a woman who couldn't bench-press at least two hundred pounds without much effort. Still, he supposed she was probably attractive by human standards. She almost seemed to almost glow a bit and she had a calming presence.\n\n\"Hellos Graflex.\" The woman said in a slightly musical voice that for some reason made him feel... Hmm; he felt slightly less irritable.\n\nStrange.\n\n\"What'd ya want?\" He grumbled.\n\n\"My name if Gabriella, and I want to place an order for someone else, consisting of these.\" She handed him a rolled up scroll.\n\nHe harrumphed. It was never a good thing when customers brought scrolls with their own designs. They always wanted the wrong things with too much fanciness and not nearly enough practicality. He had half a mind to turn her down, but figured it couldn't hurt to look before he told her that she was wasting his time and talents with a stupid design.\n\n\"Oh, I don't think you'll be disappointed.\" She said in an amused voice, like she knew something that he didn't.\n\nHe unrolled the scroll, expecting to be disappointed at the designs, but he wasn't. All three of them were...\n\nHmm.\n\nThey were...\n\nHmm...\n\n\"Satisfied?\" The woman asked with a knowing smile that seemed to brighten the shop a bit.\n\n\"These are interesting.\" He admitted. \"This warhammer head on the right isn't too unusual, but these other two... Hmm.\" He stared at the center design for several seconds. \"It seems perfectly normal at first glance, but that addition at the rear changes everything. And this left one... I've never seen a spear like that before.\"\n\n\"I would like a blunt practice version of this one made from steel.\" She indicated the center design. \"But otherwise I want one of each, all made from dragon steel.\"\n\nHe scoffed. \"You'd have to skin a whole dragon -- probably two -- to get enough scales for all these.\"\n\n\"The center part of the spear should have a lead core with a dragon steel outer layer.\"\n\nHe scoffed again. \"That'll still take at least a whole dragon's worth of scales.\" He sniffed the air. \"You don't have any on you, or at least not enough.\"\n\nThe luminous woman smiled. \"Well, about that...\"\n\nTO BE CONTINUED...\n\n***I am floored by the response to the last chapter. Seriously. As I write this, it's #1 in the Sci-Fi/Fantasy hall of fame! I'm so glad you all enjoy this story. Rest assured, I enjoy writing it at least as much as you enjoy reading it and there's plenty more coming. Again, thank you so much. ***\n\n***I'd also like to extend a very special thanks to someone who didn't want to be credited by name, so \"Anonymous\", (you know who you are) thank you so much for your support. I really appreciate it. ***\n\nSTORY TAGS: dragon, magic, medieval, elf, teen, romance, virgin, harem, cuckquean"
    ],
    "authorname": "Antiproton",
    "tags": [
        "dragon",
        "magic",
        "medieval",
        "elf",
        "teen",
        "romance",
        "virgin",
        "harem",
        "cuckquean"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-dragons-tale-ch-30"
}