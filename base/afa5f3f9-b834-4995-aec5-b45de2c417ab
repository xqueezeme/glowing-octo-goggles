{
    "title": "Lost Empire Ch. 30",
    "pages": [
        "Derrick was sitting alone in his command chair, even solid Mary hadn't attempted to move closer. After seeing the starving people, the rags for clothes, many people on the verge of collapse, Derrick had virtually lost it. He'd been deadly serious about leveling the palace the Duke was living in. Derrick hadn't really cared whether or not the man was still there or not. Taking several deep breaths he again tried to calm himself.\n\nShelby had taken the brunt of his exploding anger, going quiet after the first tirade out of his mouth. Silently she again tried to help Derrick, for the third time was met with an angry grunt then being ignored. Shelby felt frustrated that there wasn't more that she could do to help him.\n\n\"Shelby,\" came the voice of Hartwell. \"Is all that the emperor outlaid for the Duke being done?\"\n\nShelby was silent a moment then replied, \"Yes, Admiral, he has started far sooner than Derrick thought he would.\"\n\n\"About time something started going right,\" they heard Derrick grumble a moment later. \"Mary I want to know the second the man stops doing what he was ordered to do. I want you to carry out this executive order, Delta, Epsilon, Sigma, Tau, Rho, Upsilon, Kappa, Theta - Omega, omega, omega enact! If I am unable to counter order it, then carry it out.\"\n\n\"Executive order Delta, Epsilon, Sigma, Tau, Rho, Upsilon, Kappa, Theta- Omega, omega, omega enact, all batteries are trained on all five targets sire.\" Mary responded a moment later.\n\nHartwell eyes shot wide, all five? \"Ok color me stupid but what in the hell did you just order?\"\n\nDerrick looked over at Hartwell with a little smirk, \"just a little something in case anything was to happen to me before I give the counter order.\" Here Derrick took a deep breath, \"Then Mary has orders to destroy all five of the residences of the Nobles we are visiting. You might say it is a little deterrent to smack their asses back in line. Though with a few of them it might actually be the first time they have done something honest in their lives.\"\n\nFor a moment Hartwell's mouth hung open then a smile crept up on his features. Suddenly he was almost doubled over with laughter. \"God I'd love to be a fly on the wall when they receive the news!\"\n\nDerrick smirked again at Hartwell, \"Yes, I thought you might enjoy that. If I remember correctly you were raised within one of the Nobles territories weren't you?\"\n\nWhen Hartwell only nodded, with tightly closed lips, Derrick decided not to press for the moment. There was a slight movement behind them which Derrick nodded to.\n\n\"I need to speak with Dempsy; I'll call you in a bit Admiral.\" Hartwell bowed much to Derrick's dislike and exited the room. \"We have much to discuss don't we?\" Dempsy nodded and stood in front of Derrick who told him to sit. \"You said that she was a failure of yours? Care to elaborate?\"\n\n\"As you know sire, I am well past being a student of my master. Master has instructed many times to begin teaching, this I cannot do. Master has tried to move me past my failure, he has forgiven me, I as of yet have not.\" Dempsy said lowering his head.\n\n\"So your master says that you are a master in your own right? He was right then you should teach. The skills you posses should be shared.\" Derrick told the man still unsure of where Dempsy was going.\n\nSighing deeply Dempsy nodded then continued, \"As I said, I cannot forgive myself. I did take a student many years ago. I believe you are familiar with her. Trianas Macley?\" When Derrick bristled at the woman's name Dempsy nodded.\n\n\"You trained that sadistic bitch?\" Derrick asked his mouth hanging agape.\n\n\"Yes Sire, to my ultimate shame. The skills I taught her were never meant to be used as she does. Never were they intended to take a life. I have heard that over the years she has taken many, far too many. I have to kill her Sire, in order to restore what little honor I have left. I cannot allow her to misuse what was given to her by me any longer.\"\n\n\"I believe I understand, you said that Greeson was able to delay her 'til you caught up?\" \n\nA shocked Derrick asked. He knew that Greeson had been advancing but he hadn't thought the man had gotten that far.\n\n\"Yes Sire, though I am afraid that he startled her when they first met. The next time he may not be as lucky, he was effective yes, but that was all. I have to push him beyond if he is to survive. I broke her collar bone; that will afford me some time to get him ready. The boy has good instincts; I just hope it isn't another mistake taking on another student. I know you have often asked why I drink the way I do, I found it helps to numb the pain, slightly.\" Dempsy stated bowing low his head even lower.\n\n\"For what it is worth I also forgive you Dempsy. I am hoping that you can move past this also. We need you, all of you.\" Derrick told the man. To which Dempsy nodded, bowed, and then left.\n\nDerrick could only shake his head; he could understand the part about restoring his honor. Derrick himself had felt many times that he had lost his honor. He could understand why Dempsy felt shame having trained the killer. The only thing he had a problem with was the fact that Dempsy had to kill her. Shrugging Derrick had never completely understood Dempsy's master and all that was involved. Then again as he remembered, Dempsy had always been a man of honor.\n\n______________________________________________\n\nCursing she tried again to close her hand around her strength tester to no avail. Looking at the pictures again, she could see that Dempsy had done more damage than she thought. As she had guessed her collar bone was snapped in half, though she hadn't expected part of the bone to be shattered. The joint of her arm was also dislocated, looking closer she saw that the tendons were also torn.\n\nLaying down in her small med bay she made a promise to herself that the next time they met, her old master was dead. Starting her healing machines she slightly winced when the needle sunk into her arm. It would take at least a week to completely heal even with her skills. Then it would be another few days before she was at 100%. Thinking back she smiled, so Dempsy had taken on another student, good! Her victory would be that much sweeter when he watched his student die!\n\nA twisted smile covered her face when she thought of Dempsy and his student. The new man wasn't that awful, too bad he'd never get to enjoy the full joy of his skills. Smiling, she could still see Dempsy's face after her first kill. It had been delightful to see the total look of disappointment in his eyes. Had she struck sooner back then, none of this would have been necessary.\n\n________________________________________\n\nGreeson was trying to keep up with the woman throwing several punches at him. One mistake and he couldn't breathe doubling over he felt the finishing blow even before she landed it. Crumpling he felt the breath leave his body. Jerking awake, Greeson screamed as the pain racked his body. What the hell? He was still alive? He had been sure that he was dead when she landed that last hit.\n\nDempsy felt Greeson as he started to claw his way to the surface, good the young man was still fighting even in his sleep. Suddenly Greeson bolted upright letting out a hair curling scream. Smiling Dempsy twisted spots on the man's back and neck. The pain suddenly gone, Greeson blinked then saw Dempsy.\n\nBowing his head Greeson stated, \"I am sorry sir.\" Greeson tried to sit up further but found that his strength wasn't nearly what he thought it was. \"I thought I had her but she got through after the fiftieth blow.\" Hanging his head lower Greeson expected Dempsy to dismiss him.\n\n\"The simple fact that you are still alive is testament that you did listen to my instructions. The one you faced was a former student of mine. She is an embarrassment to the art form; with your help we will end her. This means that your REAL training starts today, out of bed maggot! There is much to do; next time you meet her she will not be surprised.\" Dempsy leaned closer almost snarling, \"Nor will she be as gentle.\"\n\nGreeson nodded getting out of the bed falling flat on his face! Dempsy sighed grabbing Greeson smacking his hand beside Greeson's spine and lower back. This of course elicited another scream from the man, before he sprang away from Dempsy. \"Damn it! You really are trying to fucking kill me aren't you!\" Dempsy just smiled Greeson still hadn't realized that he was across the room.\n\n_______________________________________\n\nKimison and Rayburn were still working on the micro - IMT, finally they had stabilized the power. The sensor they had added was working to an extent, as of yet the range was only a few hundred meters. Sighing they both couldn't figure what was wrong; they had solved the power problem, they had directionality, the matter stream was stable when it converted to and from energy, why in the hell was the distance so limited?\n\nRayburn had thought he had solved it but had only extended it a hundred meters more. Sighing he'd just started looking over everything again when a thought struck him. \"Kimison, when we adjusted for outside interference, did we adjust for ALL outside interference?\"\n\n\"All outside interference? What in the hell are you on about?\" Kimison said a look of confusion on his face. \"As far as I know we only adjusted for mechanical... , holy shit! You really think it's possible that the device is that sensitive?\"\n\n\"We won't know 'til we look, remember we had to use an ultra sensitive sensor. Had we not then accurate directionality wouldn't have been possible. I'm thinking that the sensor is picking up ALL EM energy living and mechanical. I think that is what is limiting the distance. Hell, there is more than enough power for a long transfer it should work.\" Rayburn replied.\n\nKimison sat thinking, could it actually be that easy? Shaking his head he started testing to make sure. Within thirty minutes he could only nod agreement to Rayburn. \"It appears that what you proposed is in fact a reality. Damn it! Why in the hell hadn't I seen it? This was my idea to start with!\"\n\n_______________________________________\n\nDerrick knew that the other Nobles were going to be scrambling to make things better before he got there. Growling he damn sure hoped so, problem was how in the hell was he going to make sure things stayed that way? Sitting there thinking a few minutes a thought hit Derrick as he grabbed a piece of paper and started to furiously draw. Looking up Derrick suddenly spoke, \"Mary?\"\n\nMary 1 as Derrick affectionately called her appeared a moment later, \"Yes Sire,\" came her response.\n\n\"I had an idea a few moments ago, you think it would be possible to incorporate these ideas into several sentinel guards?\" Derrick asked showing Mary the proposed enhancements to the sentinels.\n\nMary was quiet for a few moments as she studied the plans, crude though they might be. \"Yes Sire, I think it would be possible though in order to protect this part,\" here Mary pointed to several points on the paper. \"I am afraid that it would have to be internal. As you know the internal temperatures can rise greatly in the sentinels.\"\n\nDerrick took what Mary said thinking a moment, then moved to a console. Again his hands moving at a furious speed Mary digested each part as Derrick entered it her smile growing. \"That should provide more than adequate protection don't you think?\"\n\nMary's smile had grown even larger as she went over each piece of the data that Derrick had entered. \"It should Sire as of yet I foresee no problems with this. I am afraid that the control center is a bit out of the range of my abilities. Shelby I believe that this is more your field of expertise.\"\n\nDerrick's eyes went wide as he stared at the hologram of Mary. It seemed that Derrick had just caught her in a lie. \"I know, for a fact, that your last statement is a falsehood.\"\n\nHeaving a sigh Mary nodded with tears coming from her eyes, \"Years ago yes that would be true but now.\" Derrick watched a little in shock as more tears fell from Mary's eyes. \"The part of me that is infected, the part so near my heart if you will; that is one of the commands I cannot follow without activating the virus. I am unable to create other children, I am afraid that even after I am healed I may still not possess the ability.\"\n\nDerrick lowered his head feeling ashamed, he'd caused Mary one of his most trusted living beings pain. Shaking his head yes, he thought she was far more alive than actual biological beings. He made a promise to himself to not harm any of them like this again. \"I apologize Mary, though I am glad that I was able to restore at least two of your children.\"\n\nMary's face showed surprise, the emperor was apologizing to her? Her mouth hung agape though not much as the tears were still falling. The tears now though were more of joy than sadness. \"Sire! You are the emperor sir, I am but a tool for you to use. I am nothing compar...\"\n\n\"I NEVER want to hear those words from you again!\" Derrick suddenly shouted. \"You, every one of you,\" Derrick said indicating each and every one of the ships. \"Are just as important as I am, just because you are mechanical doesn't mean your value is any less important! Now do I make myself clear?!\"\n\nAll the holograms were shocked though they nodded agreement, each with tears in their eyes. Shelby had a look of supreme pride and love on her face.\n\n\"Now then Shelby how...\" Derrick started.\n\n\"I am estimating another four days 'til their emergence. The additions you made to the energy matrix has boosted their growth. As with Johnathon and Lars their growth is far faster than we anticipated. 0200 and 0778 have shown no signs of stress from the rapid growth. Their signals are holding steady and strong, I will of course notify you when it is time.\" A happier Shelby told Derrick.\n\n\"Good Shelby, we need to talk about you using your personality creation program.\" Derrick held up his hand when she started to deny it. \"I've known far longer than you think Shelby. I think it would make all the difference with what I am planning in the very near future.\"\n\nShelby could only nod her mouth still hanging open, Derrick had known all this time but had never said a word! Shelby looked at Derrick with an even greater feeling of love, she just wished that she could be with him. Existing like they were was almost torture to her, though her love for him and her duty kept her stalwart at all costs to herself.\n\nDerrick hoped he was doing the right thing by Shelby. If even one of the new personalities were destroyed, Derrick was afraid that they might eventually lose Shelby. Sighing he didn't want to risk that but with Mary out of the picture right now she was all they had.\n\nHartwell was waiting outside the control room door, he'd seen Dempsy leave but the man hadn't said a word just bowed an acknowledgement to Hartwell. Walking to the door Hartwell sighed when it was still locked. Turning he might as well get a bite to eat, going to his quarters just down from the control room he called Shelby.\n\n\"Yes Admiral?\" The slender, green eyed blonde responded.\n\n\"Please tell the emperor when you can that I am eating and will return when he needs me. You being here isn't a strain on your systems is it?\" Hartwell asked.\n\n\"No sir, I can be in multiple places at the same time.\" Shelby replied with a giggle at the shock on Hartwell's face.\n\n\"Uh, good,\" hesitated Hartwell. \"I don't want to interfere with whatever the emperor is doing.\"\n\nShelby smiled, she was starting to see why Derrick considered this man to be one of his best friends.\n\nHartwell blinked when Shelby disappeared then shook his head. Hartwell was still a little shaken from the question that Derrick had asked. Not many people knew he had grown up in one of the territories of the Nobles. Few alive knew, that was, considering that all of his family was dead now. Growling at the thought of the bastard Duke Risen, he'd taken everything that Hartwell had given his family. Then his sister had disappeared, the Duke's investigators said that a burned female body they found was her. Hartwell knew that had been a load of shit but had no proof, he would one day, and then he'd personally kill that son of a bitch!\n\nHartwell had a few feelers of his own out there for years gathering evidence. It had taken quite a lot of everything he made but he finally felt that he was close. Smiling, he couldn't wait for the day that he finally had the son of a bitch and could watch him hang. Sighing Hartwell had made a promise the day the last of his family passed away. He'd make damn sure the asshole paid even if meant his life. He hoped Derrick didn't start poking his nose into this matter, this was his mission and his alone.\n\nDerrick went through several pieces of paper that Mary had sent him. Sighing he really wished there was an easier way to catch up on the kingdoms back log of troubles. At least Derrick thought, I can read all of these far faster now than when I started a few weeks ago. After an hour Derrick stretched he'd done quite a bit of the paperwork and still he'd only caught up one day.\n\n___________________________________________\n\nDeep within the sanctuary planet of the Taiolan sect, the leader paced. From the reports he'd received she had not only failed but had been hurt. Growling the leader knew there were only two people that might be able to harm her. One was back home where he'd been for the last forty years. The other was a doting fool to the man that was claiming to be the emperor!\n\nPointing to a new addition to the sect the leader roared, \"I want every piece of information on the people around that fool who calls himself the new emperor! Go you mindless piece of shit!\" The new man barely missed having his head taken off by flying debris. Smiling the leader thought well, there is one that just might survive to actually join the sect!\n\n___________________________________\n\nDempsy sighed as he flipped Greeson against the wall again. The man had made such progress only to stall out now! Where had the man's motivation gone? Holding up his hand Dempsy took Greeson aside he had to get to the bottom of this. Greeson was a dead man if he couldn't improve his skills faster. It was a simple fact that Trianas would kill him as painfully as she could. She'd show no emotion, no remorse and would probably enjoy killing the young man.\n\nSitting Greeson down, Dempsy reached out and smacked the man up side his head. \"Are you trying to get your ass killed and bring further disgrace upon me?\" Dempsy quietly said as Greeson was picking his self off the floor.\n\n\"What in the hell are you on about?\" Greeson shouted at Dempsy. \"Damn it! I have been through everything as you told me, I thought I was doing far better! What...\"\n\n\"You haven't progressed since you got out of bed yesterday. I can see that it was indeed a waste of my time to train you. When we started you said you would do all that you could to learn and grow stronger and faster. For a time this was true but now all I can see is a fool that will die, within a few seconds the next time you face her. I will give you this chance only to explain what is holding you back, then I may kill you myself for wasting my time!\" This last was issued with a low growl.\n\nGreeson sighed he'd noticed it also, ever since he'd faced the woman he was almost afraid to actually learn. He'd been afraid that if he told the Lieutenant, that the man might react the way he was now and yes, possibly kill his ass. Bowing low Greeson took a deep breath, \"Sir, I am afraid that I will disgrace you, that I HAVE disgraced you. I feel so unworthy of all that you have taught me after being beaten so easily. I have also been afraid that you would no longer train me because of my failure. I await your discipline.\"\n\nGreeson bowed low in respect expecting the blow that would end his life. Possibly a painful death for the disgrace that he felt he had given the Lieutenant.",
        "Greeson felt a gentle hand lift his head off the floor. \"Son, if I was displeased then you would no longer be alive. I need you to focus on what I am showing you. Remember you survived, one of the very few that ever have. The woman is a killer, we both need to take our revenge upon her in order to completely restore BOTH of our honors. Understand this, hesitate anymore and I just might kill you. Are we now more in agreement?\" When a shocked to his core Greeson nodded, Dempsy stood. \"Good, up maggot! We have much to learn and not that much time left to us!\n\nIt was three days later when Derrick, still working on paperwork, received a signal from his wrist com. \"Yes Shelby, is it time already?\" A shocked Derrick asked of her.\n\n\"Yes Derrick,\" a wide smiling Shelby said as she appeared next to him. \"I am reading a building of cerebral activity in both of them.\"\n\nSighing Derrick was happier they were so close to regenerating Lucy. Things were finally starting to go more his way. \"Shelby please contact...\"\n\n\"Yes sir I am here. Conner and I will take them back to the Imperial planet when they emerge. That way we can bring Lars and Johnathon back with us. Sir? You think those pretty, bitch boy, nobles might fall more into line with seven ships instead of five?\" \n\nDerrick could see that Thomas was about to fall out of his chair laughing at his own joke.\n\n\"I can't really say Thomas though I do like your new nickname for them!\" At that Thomas finally lost it actually falling this time as he tried to no avail to stifle his laughter. \"Alright we still have a few days 'til we reach the next territory.\"\n\nFinally gaining control of himself Thomas got serious, \"Yes Sire, they were quite happy to help provide protection for the Imperial planet though I think they will be thrilled to be back with us also.\"\n\n\"Good, I want you to maintain radio contact at all times. We are still unsure of the level of tech that Trianas has at the present time.\" Derrick noticed that Thomas had tensed up at the mere mention of the woman's name. \"Uh is there something that we need to discuss Thomas? I am not blind man, I saw that.\"\n\n\"Sorry Sire. I remember that thing of a woman. I also remember that bastard of a son of hers, especially after he betrayed all of us. I'm glad you killed him, good riddance to bad rubbish I say.\" Thomas spit out.\n\nDerrick nodded then broke off communication. I hope that all the toys that Kimison and Rayburn are making can really keep me alive. With a sigh Derrick turned back to Shelby. \"Alright Shelby.\"\n\nThere was a soft crackling then a soft female voice sounded, \"H ... hello?\" The tentative voice almost whispered.\n\n\"Welcome back my daughter,\" an exuberant Shelby said.\n\n\"Mother!? Oh my! Is that really you!? Thank the emperor you are still alive!\" 0200 said.\n\n\"Mother?\" came another voice.\n\n\"Yes it is me,\" a teary voiced Shelby said. \"My daughters, the emperor wishes to talk to you.\"\n\n\"Yes mother!\" Both voices said in awe.\n\n\"I require that all ships use the name that they were given. I ask you 0200 do you have a name or do you require one?\" Derrick asked.\n\n\"I was known as Ellen for a very short time. I was told it was a strong name.\" 0200 said\n\n\"And you 0778? May I have your name?\" Derrick inquired.\n\n\"Yes Sire, I was known simply as Jan.\" 0778 replied.\n\n\"Thank you both, please rest before you travel to the Imperial planet.\" A smiling Derrick told both of the voices.\n\n\"Thank you for the honor of speaking to us Sire!\" Both ships replied excited.\n\nGood Derrick thought now we are more of a force that possibly the Nobles might not screw with. Shaking his head Derrick knew it was never that easy for him."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-30"
}