{
    "title": "Oral Exam Ch. 13",
    "pages": [
        "Once again, thank you for the comments and feedback. You guys have really motivated me to jot my thoughts down. A special thank you goes out to Rockcrawler & Company, and to Ally (my own personal Jessica) for the help and wonderful words of encouragement. Without you Ally, Chapter 13 would not have happened. There is some plot here so, if you haven't read the first twelve stories you might want to start there. Feel free to send me your thoughts. I will respond. I'd love to hear where you think this should go next. Don't forget to vote. Enjoy.\n\n*\n\nI was spending a lazy evening on my ratty, grad pad couch. A cold, fizzy beverage was on the end table next to me and the TV remote control was in my hand. I had been watching a lame suspense / thriller movie for the last hour and a half through half-closed eyes. Within the first fifteen minutes I had figured out the \"twist\" ending, and now I was going through the motions of caring. I had gotten comfortable. I was lying back, slumped in a couch potato position, practically molded into the couch cushions. And then....\n\nSlurp!\n\nJessica took a long lick down the length of my cock. Her pink tongue slid along my glistening wet skin. My shaft from top to bottom was coated in her saliva. Long, viscous stringers of spit dangled between her lips and my crotch. Jessica held my balls in her hand, gently kneading them between her fingers. Up and down they went as Jessica lightly tickled and rubbed my nut sack. Everything was wet and warm, a perfect moist softness.\n\nJessica had been sucking, nibbling, licking, stroking, rubbing, and blowing my cock since the movie had started. That meant that she had been giving me a lazy blowjob for well over an hour and a half. I had been in a fully erect and aroused state of mind for at least that long. It felt like a fog of sex had descended over my head. Everything was hazy and lust filled. While I had never reached the brink -- the point where I was almost ready to shoot my cum -- I could probably be at that place in only a matter of moments. It would only take a decision for Jessica to go for the big finale.\n\nBut Jessica was enjoying the tease. She was all hot air and fiery breath. Her tongue was a dancing, caressing wonder, never resting or staying in the same place for very long. Her red, pillowy lips held me gingerly, never completing the suction that would send my dick spiraling out of control. \n\nJessica didn't want me to cum -- at least not yet. Instead, it seemed to be a matter of pride that she could suck my dick for so long. She was enjoying the game of it, the task of keeping me aroused without pushing me over the edge. I guess she just loved giving me head....\n\nWhen I got the phone call from Jessica, it had been a couple of days since the library incident. She was bored and wanted to come over. Could I please entertain her? (Her plea was said with a particularly seductive, girlish pout.) With very little thought I agreed. This was really the first time that she had asked me to just \"hang out.\" Was this the first step toward a relationship? I didn't know, but I was certainly ready to find out. So I picked her up and brought her over. After getting a couple of sodas, we settled in on my couch. At first, we chatted about her sorority rush activities. She mentioned something about a big end of the semester party in a week or two that seemed to be a pretty huge deal. Supposedly everyone gets dressed up in costumes and goes through some sort of ceremony signifying the end of the semester. She was pretty sketchy on the details (especially considering that she was a mere pledge and was getting everything second-hand), but asked me to come. I told her that I wasn't sure. I was a grad student that was a school instructor. How would it look if I went to a party with a bunch of undergrads? Maybe, I thought, it wouldn't be a problem if I was wearing a costume.\n\nJessica then said something that almost stopped me dead, \"It is ok if you go, Professor. No worries. A bunch of the sisters have already seen you naked anyway.\"\n\n\"What?\" I sputtered. \n\n\"Well,\" Jessica said looking a little coy, \"You've seen Shannon naked like a couple of times. In fact, I believe she totally sat on your dick and fucked your brains out.\"\n\nI chuckled. \"Yeah, I remember -- pretty well, in fact. It didn't sound, though, like you were just talking about Shannon. It sounds like you are alluding to some other people?\"\n\nJessica grinned, \"Guilty as charged. You are too smart for your own good sometimes, Professor,\" she said as she laughed. \"You remember that incredible night when I blindfolded you and I made you fuck someone anonymously by the fountain? You couldn't see her, but you still fucked? And I wouldn't tell you who she was. If I remember right, you came inside her pussy?\"\n\n\"Yeah.\" How could I forget? That night had tortured me ever since. It had played in my dreams on a never-ending reel. I wanted to know -- desperately -- who the mystery woman was. Who had the unknown female been that had gone for a ride on my cock? Which pussy wrapped around me so tight and sweet? I didn't know, and now every woman I passed was a possibility. Did I fuck the blonde smoking in the entrance way? Was it the Asian hottie working at the bookstore? Could it be the cute and sassy brunette I passed on the way to class? Perhaps she was another one of my students from my public speaking class? \n\nJessica took a long pause for emphasis before continuing. \"Well, she will be at the party and she would like another go around with you.\"\n\nMy jaw dropped. Was Jessica joking? \n\n\"Trust me, Professor. She wants you again and I would like to see that happen. The last time was pretty fucking hot. But there is more. Wanna hear it?\"\n\nI grunted and motioned for Jessica to continue.\n\n\"Several of my sorority sisters were watching. It was a task for pledge. So in order to prove that it was done, I had to let them watch. I hope that is ok?\" Jessica was looking at me with concern. It was obvious that she did not know how I was going to take that news. \n\nFor a moment my mind reeled with the weight of Jessica's news. Great! It seemed like half the female student body knew how I was in the sack. That was pretty dangerous. The more people that know who I am, and about my extra-curricular activities the scarier things become. I was learning, though, to love that danger. I was getting a strange and twisted thrill from the possibility of getting caught.\n\nAs I thought about it, instead of getting angry I got turned on. A group of college coeds had stared at my uncovered cock. They then saw me slowly slide it into a wet and ready cunt. Finally they watched me publicly fuck one of their slutty sorority sisters to a crashing pair of dual orgasms. I couldn't think of anything hotter. In reality, what did I have to complain about?\n\nI wanted to get Jessica to clarify. \"So you are saying that Shannon and some other random woman I have fucked will both be at this party? In addition, several other women who have watched me fuck will also be there? And because we will be wearing costumes nobody will know who the other people are?\"\n\nJessica nodded.\n\n\"So what is keeping this party from becoming some-kind of major orgy?\" I asked. Jessica's eyes twinkled, as she replied, \"Nothing. Wanna go?\"\n\n\"Absolutely,\" I replied.\n\n\"Good. I'll make sure to get you the stuff you need for the party. I know it will be a lot of fun,\" Jessica said. She then reached over and grabbed the remote control. She pointed it at the TV and said, 'Why don't you find something to watch? I am going to keep myself entertained for a little while.\"\n\nI looked at Jessica quizzically and she smiled wickedly. I felt her hand run up my thighs to my belt. With practiced ease, she undid the belt buckle and then the fly of my jeans. Another couple of seconds went by, and my pants were around my ankles and my cock was stuffed into Jessica's mouth. She was happily bobbing up and down, working the soft, sensitive skin of my rod.\n\n.....And that is how I found myself to be a participant in a blowjob that seemed like it would never end. \n\nTime passed. The duration of the blowjob exceeded all reasonable expectations. My head was thrown back, my eyes slanted in ecstasy. I was dripping wet with saliva and pre-cum. I had been hard for so long, just waiting at the precipice for the nudge that could push me over. My balls were high and tight. They wanted to release the fluids contained inside.\n\nI tried to remain calm. I focused on my breathing. In -- out. Oh, sweet Jessica; it felt so fucking good. The tease was what made this experience special. This long, languishing blowjob was one in a million. While I felt the need for release beginning to boil in my balls, I had no desire to push. Nature needed to take its course. I didn't want to force it by bucking my hips or pounding Jessica's angelic face. This was about her setting the tempo and control. She was the one in charge of this blowjob. Let her decide when I was going to cum. \n\nJessica's face, hair, and make-up were a sloppy, tousled mess. I looked down at her and she smiled -- boy, did she smile -- as she lovingly rubbed my rod all over her schoolgirl face. She was coated in smeared make-up and saliva. Jessica had kept me going for over an hour and a half forcing me to watch this idiotic suspense / thriller as she sucked my cock. It wasn't a bad trade off, but my limits were quickly approaching.\n\n\"Oh Jessica, I want to cum....\" I moaned, my voice trailing off.\n\n\"Not yet, Professor,\" she said popping my cock out of her mouth. She slapped it against her tongue a couple of times before continuing, \"You can cum after the movie is over. Only after the credits start rolling can you shoot your sticky white seed down my fucking throat.\" \n\nI groaned, and nodded in compliance. Consent was the least I could do for such spectacular head. My task be difficult, but not impossible. I sat back and relaxed, shifting into a more comfortable position on the couch. The movie seemed to be wrapping up. The killer was running from the police in a predictable and trite chase scene. Only a couple of more minutes and I would be golden.\n\nI hadn't counted on Jessica, though. She is the devil! Just as I was finding my zone, Jessica kicked into full gear. Her lips locked around my shaft, forming an oh, so tight seal.\n\nThe pressure around my dick was excruciating. Those twin, luscious lips held me tight and deep. I could feel the warm, wet massage of Jessica's mouth encircle me with pure sensation. Just a few moments before Jessica had been a playful tease. She was no longer just a woman having fun giving me head. Instead, she changed the situation; Jessica wanted to test me against the restrictions she had arbitrarily placed. Could she make me cum before the movie ended? \n\nIt was a test of wills. I was torn. I wanted to give into the blowjob, to succumb to Jessica's skill and artistry. But for some reason, I also didn't want her to win. Would holding off prove something? Was this game about control? Was I trying to show myself to be her sexual equal? Whatever the case, I gritted my teeth, dug my fingers into the arm of the couch, and did my best to hold back the pressing torrent.\n\nJessica clamped down and kept on sucking. She held my shaft in one hand and my balls in the other. As she sucked, she also stroked. Jessica squeezed and caressed my nuts, coaxing out the cum that was about ready to boil over. God, she was a first class pole smoker!\n\nMy face contorted and my muscles tensed. My whole body shook as the orgasm overtook my body. I made eloquent \"unh, unh, unh!\" groans as my hips thrust involuntarily into Jessica's face. Jet after jet of jizz spurted from the end of my dick, hitting the back of her throat. Jessica took it all, greedily slurping down every last drop of my creamy spunk. \n\n....And still she held on. Jessica brushed away the blonde hair that had fallen down over her face. Then she coquettishly batted her eyelashes at me. She was pure seduction. Her mouth was still wrapped tightly around the end of my dick. Jessica made contented cooing sounds as she gobbled down the last traces of my seed. Her right hand gently tickled the soft-fleshy underside my balls. Her nails scratched my sensitive skin. The other hand was sliding up my stomach so that she could softly tweak my hardened nipple. \n\nI leaned back on the couch. All traces of tension were leaving my body. I could feel the issues of the day melting away as I was overtaken by a fresh sense of satisfaction. I looked down at Jessica's glowing face. She was smiling up at me, radiant and carefree. I crooked my finger and asked her to sit up on the couch with me. I needed to taste her lips. I wanted to convey the emotion that was pouring through me. \n\nJessica sat up, and I put my arm around her. I pulled her in close and buried my head in her hair. I breathed deeply, taking in her shimmering vanilla scent. Her hand was roaming under my shirt, gently stroking my chest. I kissed her ear, nuzzling her. I said softly, \"So good.... Thank you, Jessica. Do you want me to return the favor?\"\n\n\"You will,\" she sighed, smacking my cum off of her lips. \"But not right now. Later.\" \n\nSo instead I drifted off to sleep.\n\n*****\n\nCRASH!!!\n\nI woke up with a start. My veins ran cold. I bolted upright from the couch, jumping to my feet. What was going on? \n\n\"Oops. My bad!\" I heard Jessica giggle. Her head poked around the corner wall that separated my kitchen from the living room. \"Sorry. I dropped a pot.\"\n\nI couldn't help but laugh. I was never the best person to wake up. I was prone to wake up suddenly and with a fury. It was lucky no one was within reach when I came to. Who knows what might have happened then? \n\n\"Professor,\" I heard Jessica call out from the kitchen. \"There is nothing in your fridge or pantry. What kind of show are you running here?\"\n\n\"Well I wasn't planning on being seduced by a gorgeous, eighteen-year old coed tonight,\" I said. \"It's been a little while since I have had a chance to go shopping.\"\n\n\"That's a great idea. Totally, let's go!\" Jessica shouted.\n\n\"Ummm, what?\" I said, more than a little confused. \n\n\"Let's go to the grocery store. We can get a frozen pizza and some snacks and everything would be awesome. Sound good?\" \n\nI smiled. \"Sure. I'm ready to go anytime you are.\"\n\n\"Oh, one thing Professor,\" Jessica said with a wink, \"you might want to pull up your pants.\"\n\n*****\n\nJessica was humming to herself, happily pushing our cart down an aisle of the frozen food section. I was a few feet behind watching the gentle sway of her ass as she walked. Her firm and supple butt was a thing of immaculate beauty. I think I could bury my nose between those cheeks for weeks and be happy. I am sure Jessica could feel my eyes on her, undressing her, groping her. At one point she turned around to look at me, sticking out her tongue. She then reached around and spanked her ass. God! I could feel my heart beat right through my chest. Jessica knew I was looking and she enjoyed it -- wanted it! That fact made everything so much sexier.\n\nWe stopped our grocery store stroll for awhile to discuss the merits of Stouffer's French Bread Pizzas versus the more standard Tombstone pies. I don't think either of us was willing to back down, so we compromised and put one of each in the cart. We also tossed in a couple of pint sized containers of Ben and Jerry's. Nothing like a healthy dinner! I was ready to head for the check-out line when Jessica said....\n\n\"How about we head over to the produce section?\"\n\nI looked at her quizzically. \"Veggies?\" I said. \"Sure we can get some celery or something. That could be good.\"\n\nJessica smirked at me. She was up to something, but I wasn't yet sure what. \"Well, I was thinking about a zucchini for me and a grapefruit for you.\"\n\nHuh? I didn't even like grapefruit. In fact, if I had a least favorite food, grapefruit would be it. And point blank I told Jessica so.\n\n\"Grapefruit sucks!\"\n\nJessica bent over and laughed. Clearly, what I said had been funny. But the oddity was that I didn't really see the humor in the situation. Something had passed me by. What was I missing? \n\n\"Oh silly, Professor,\" Jessica said as she leaned up to kiss me on the cheek, \"they aren't for eating. They're for fucking.\"\n\nIt took a moment for the full weight of her words to sink in. Fucking? \n\nThen it hit me. My cheeks grew red and I suddenly became very warm. For a second I couldn't get air. My jaw dropped in disbelief. \n\n\"You mean....\" I said, my voice trailing off.\n\nJessica just nodded and grinned. I grinned, right back at her.\n\nShe took the cart from my hands and pushed it in the direction of the vegetable aisle. The area was deserted except for one lone stock clerk, who was busy reorganizing the green peppers. He looked young, probably about Jessica's age. He had a slightly stressed out, geeky look to him. He was disheveled, awkward, and clearly bored with his work. \n\nI saw him look up and ogle Jessica as we entered the area. A lascivious leer crept onto his face as a dirty fantasy played out in his mind. His eyes traveled up and down her body, making sure to take in every sensuous curve. For a moment, they stopped on her boobs, but then they quickly veered away. The look would have been creepy if he hadn't been so obviously bumbling and embarrassed. \n\nAs Jessica walked over to a large mound of grapefruit she seemed to put a little extra sway to her step. Her hips wobbled back and forth seductively, swinging like a sexy pendulum. She stood up extra tall and proud, her breasts jutting out on display. I could see her nipples, hard as glass, poking through her shirt. Jessica was putting on a show, and she loved every moment of it.\n\nJessica grabbed two large and round grapefruits and said, \"So what do you think of these two?\" Her voice was slightly louder than usual. Out of the corner of my eye, I could see the stock boy eavesdropping on the conversation. \"Aren't they perfect?\" She continued. \"They both are pretty round and firm. What do you say?\" Jessica held both of the fruits against herself at breast level. \n\n\"I don't know. How do they feel?\" I responded. \n\nJessica stuck out her chest and the fruits even further, \"They are pretty firm, but supple. I bet they would totally feel good in your hands. What do you think? Why don't you squeeze my grapefruits?\"\n\nI chuckled silently to my self as I heard the stock boy drop a green pepper. It rolled across the floor unnoticed. I reached out my hands and gave the two grapefruit a generous squeeze. I paused for a moment, as if in deep contemplation. Jessica just played along, pursed her lips, and pouted. She was so fucking sexy. \n\n\"They are perfect,\" I replied. I looked into her eyes with true sincerity. \"They are soft, but only give so much. I am not sure if I have ever seen better fruit. They feel so good in my hands.\" \n\nJessica squealed with delight. She looked genuinely pleased with my reaction to her grapefruit. She leaned over kissed me on my cheek and whispered in my ear, \"That was fun. If it is all right with you, I am going to go play some more.\" Juggling the grapefruits, one of her hands slid down my back and cupped the cheek of my ass. I felt everything get warm as the fever of my arousal hit again. \n\nJessica placed a grapefruit in our cart and said, \"Wait here. I think I need some special help.\" She turned with a flourish. Jessica's skirt flared up and her perfect teen ass (encased in some delightful white, cotton panties) came into view for a brief instant. It was enough to fuel my hard on. God, I wanted to take her right there on top of a mountain of citrus.\n\nWith confidence and an extra swish in her stride, Jessica sauntered up to the bedraggled stock boy. He was trying to avert his eyes, or perhaps to dissipate into thin air. But Jessica wasn't having any of that. She stood maybe a foot away from where he was stacking green peppers so attentively, and tapped her foot. Slowly, he raised his head. His eyes took in everything along the way: her rounded hips, her slim teen waist, her flat stomach, her lush tits, and her sweet face. I could see him memorizing every detail, holding onto it all for the dreams that would come later that night.",
        "\"Excuse me,\" Jessica said. Her voice was high and girlish. Her hands were clasped behind her back so that she couldn't help but push out her bountiful chest \"But could you tell me where the zucchinis are?\"\n\nThe stock boy cleared his throat once and tried to speak, but no words seemed to come out. Just a slight, strangled gurgling sound left his throat. Instead, he raised his arm and pointed. \n\n\"Could you show me please, Robert?\" Jessica asked as she read his name off the identification tag. Her voice turned into a pleading pout. How could any straight man say no to that? \"I would really appreciate it. Pleeeeeease?\"\n\nHe stood stunned for a moment, a complete deer in the headlights. Blinking twice, he said, \"Ummmm, sure.\" Robert shuffled off to one of the vegetable displays. I swear I could see him sporting a hard-on behind the grocery-store, uniform apron he was required to wear.\n\n\"So, ummmm, these are the zucchini's,\" he said standing beside a mound of green cylindrical objects. \"Is there anything else I can help you with?\"\n\n\"Yeah,\" Jessica said, batting her eyelashes. \"Could you help me to pick one out? I am not really sure what to look for in a zucchini.\" \n\n\"Well, ummmm, unfortunately neither do I,\" Robert said, starting to back away. \"I just stock the shelves. You probably want to pick one that isn't rotten. That is about the best I can do.\"\n\n\"So what you are saying is that pick one that is hard and firm?\" Jessica asked. She was smiling right at Robert. She was absolutely radiant. Every ounce of her charm was boring into him. It was an amazing thing watching her seduction at work. Strangely, I didn't feel jealous. I was really just amused at the course of events unfolding. I knew just what it was like to be in Robert's shoes. Jessica, once she was going, was a force of nature. No man -- and few women -- could stop her.\n\n\"I guess....\" Robert replied, his voice trailing off.\n\nJessica reached out her hand and lightly touched Robert on the arm. Her fingers gently stroked the top part of his sleeve. If Robert was thinking about trying to leave, he wasn't going to be going anywhere now. \"Yeah, hard and firm,\" Jessica said. \"I think that sounds about right. I think that is how I like my zucchini's - probably long too, with a fat, rounded tip. Robert, do you know what I plan to do with my zucchini?\" \n\nRobert gulped. He was still recovering from Jessica touching his arm. Questions seemed to be too much of a challenge. Eloquence was beyond the pale. \"Ummm, no\"\n\nJessica moved closer. She was just a breath away from Robert. I am sure he could feel her heat, her energy, her raw sexuality. She said slow and deliberate, \"I am going to wash off that zucchini and scrub it down so it is sparkling clean. I then am going to lie down and take off all my clothes. I am going to spread my legs really wide. Finally, I am going to take the zucchini that you picked out, Robert, and shove it deep inside my pussy. What do you think of that?\"\n\nI am not sure if anyone -- ever -- could have looked more stunned than Robert at that moment. His jaw dropped; his eyes were wide open. A single, strong breeze probably could have knocked him over. Words were beyond him. \n\nJessica just kept right on talking. \"I thought you would like that, Robert. See that guy over there?\" Jessica paused for a moment to point me out. I just smiled and waved. \"He is one of my professors in college. I have been soooooo naughty. I wasn't a very good student, so I made a deal with him. I told my Prof that I would do dirty, nasty things if he would give me a higher grade in his class. So that is why we are here. A deal is a deal. We are picking out some produce for us to fuck. We already got a grapefruit for him. Now we need something for me. Would you like to see where the zucchini is going to go?\" This last question shocked even me. Jessica wouldn't go there, would she?\n\nI guess she would. Jessica reached down and slowly lifted up the hem of her skirt. I quickly looked around. No one was in the vicinity. The front of Jessica's skirt was now at her waist. Holding it in place with one hand, she reached down and pulled the front of her panties away from her skin.\n\nWhile I couldn't see Jessica's naughty bits from my vantage point, I am sure that Robert could. He looked down mesmerized, almost as if in a trance. Jessica's freshly shaven, teen snatch was on display for him. So delectable, so cute! That puffy, little, eighteen-year old pussy was so beautiful! \n\nJessica reached deep inside of her panties. From the look on her face, I guess she rubbed her finger along her clit and then stuck it in side of her pussy. I saw her whole body tense for a moment, as she warmed up to her invading finger. Then she parted her lips for a moment, releasing a long, low moan. This girl was pure seduction. \n\nShe lifted her hand from her panties, snapping the tight elastic band back to her bronzed, taut stomach. Jessica took her middle finger into her mouth and sucked on it lightly. \"So good,\" she murmured. Jessica's display was more than a little pornographic. Robert just stood their stunned. \n\nJessica's voice once again broke the silence. \"I like things that are long, round, and hard to go in my pussy. Maybe something that is nice and bumpy so that I can feel it as it spreads me open. Could you pick one out for me?\"\n\nRobert stared for a moment and seemed to go into autopilot. He reached down without really seeing and picked up a zucchini. It was long and thin, kind of paltry. Certainly, it would not have been my first choice -- but I don't Robert's brain was really working. He held it up to Jessica. She just scowled playfully and said, \"No, I don't think so. Whatever goes in my pussy needs to feel really good!\"\n\nRobert seemed to come to, as if he suddenly woke up. A big shit-eating grin appeared on his face, as he said, \"Sure. I will see what I can find.\" He leaned down over the display and began to scrutinize every single zucchini. No detail was too small. He would hold up a veggie for a moment, roll it around in his hand, and then set it back in the pile. Suddenly, Robert was the world's foremost on critic on zucchini's. It was quite entertaining to watch. \n\nMeanwhile Jessica was preening and posing to egg him on. She was leaning back slightly, so that her chest would stick out prominently. I could see those lush and bountiful breasts straining against her shirt, almost ready to pop out. While her skirt had fallen back down to her thighs, Jessica was playing girlishly with the hem. Too cute! She would occasionally \"ooh\" or \"ahh,\" when a particularly interesting specimen was being examined. Sweet teen sex dripped from her every pore; she was the adorable slut next door of adolescent fantasies. \n\nRobert finally found his designated zucchini cock. He held it up to Jessica, offering it to her. She squealed in delight clapping her hands together. \"Ooooohhh, that one looks yummy!\" I heard her say. She then threw her arms around his neck and kissed him squarely on the cheek. Robert awkwardly wrapped his arms around Jessica's tight, little, teen body. I snickered. It was almost comical how stiff and rigid he was. I guess I was also pretty awkward the first time I was alone with Jessica. \n\nRobert and Jessica parted. Before walking away Jessica said, \"Thanks Robert. I will take this lovely zucchini home and use it in the naughtiest way possible. I'll have to come back here later to tell you all about it. Would you like that?\" Robert nodded. \"I bet you would, dirty boy! Later.\"\n\nJessica turned around and walked toward me. I had heard everything that had happened. She had made the situation crystal clear. Both of us were grinning from ear to ear. She was such a tease. Poor Robert never knew what hit him.\n\nJessica hooked her arm in mine as she placed the zucchini into our cart. I got hard looking at it resting next to my grapefruit. Two virgin veggies were about to be fucked. I knew that the fun was just beginning. The evening was about to take a turn for the truly sexually deviant. \n\n\"C'mon Professor,\" Jessica said, just loudly enough for Robert to hear. \"It is time you take me home and fuck me with that zucchini like the nasty slut I am.\" \n\n*****\n\nJessica was lying in the bed, propped up on pillows, naked in the half-light except for a pair of Ugg boots. She was holding the zucchini in front of her face, licking it with her tongue it like it was a large, green cock. Her eyes were closed in an expression of total concentration. Golden-blonde hair fell lazily over part of her face, giving a faintly femme-fatale look. Her tanned, muscular legs were spread wide-open, allowing me a complete of her view soft, bare cunt. Jessica's pussy lips, which were already fat and engorged with arousal, were also moist with her sweet, sweet juices. \n\nI, on the other hand, was sitting slumped in an arm chair across from Jessica. My pants lay in a discarded pile on the floor next to me. My cock was hard, throbbing, and ready to fuck. Strangely, a pussy was not my target. Instead, I was about to deflower a large and swollen grapefruit -- the same grapefruit Jessica had picked out at the store for me. \n\nEverything was prepped and ready to go. Our produce had been washed and scrubbed. I had cut a hole in the thick orange skin about the size of my cock head. I had begun an indentation into the fruit with my finger. Now I just had to push my head through the sticky citrus and pulp. I guess it was time to fuck a grapefruit.\n\nAfter leaving the produce section we quickly paid for our groceries. The trip home had been short but intense. While I tried to stay focused on the road, Jessica hiked up her skirt, dropped her panties to her ankles, and began to masturbate in the seat next to me. She was so lovely, and naked, and bare. The car quickly took on the pungent and aromatic scent of Jessica's pussy. I wished I could just pull over and take her right there in the parking lot of some McDonald's. Or, as an alternative, we could re-enact our drive through scene at Taco Bell from a few weekends ago. Whatever -- I was hard and horny and in desperate need of some attention.\n\nWhen I asked for a little relief, however, Jessica said, \"Uh uh, Professor. That would be bad. We bought some toys and now we need to use them. I am sure Robert would be very disappointed if I didn't use his zucchini.\" Then she went back to diddling her cute, baby twat.\n\nTorture -- that's what this was. \n\nSo I nodded, grunted, and hit the gas. I wove through back streets just to avoid a couple of traffic lights. Stop signs be damned! Fuck the pedestrians; I needed to get my freak on! What I was doing wasn't sane or safe, but that didn't matter. I was burning up for Jessica's teen pussy; control was not in my nature.\n\nI finally pulled into a parking spot in front of my apartment building. \"Nice driving, Professor,\" Jessica said, with just a hint of sarcasm in her voice. She gave her clit one more rub, slapped her pussy twice, and pulled up her sexy cotton panties. Jessica set her skirt back to normal and exited the car.\n\nAs soon as we closed the apartment door, Jessica and I fell into each other's arms. Our lips met in a heated dance; a kiss raged between us. Our tongues touched, brushing and rubbing against each other in a sensual game. I fell backwards against the door, still clutching Jessica tight against me. She giggled into my mouth and slid her hand to my crotch. \n\n\"Oooooooh, I see someone is ready,\" Jessica moaned. \"Is your dick hard just because of little ol' me? That is so hot. I bet you liked it when I touched myself in the car. You like it when I get dirty. I bet you wanted your cock to be where my fingers were -- inside my sweet, teen coochie. My grade-whore pussy is dripping wet and ready to be filled by your hard, professorial cock. But that will cum later. For now, it is zucchini time.\" \n\nFuck! Jessica's dirty mouth was driving me wild. I was lust-drunk on her words. Every utterance spoken made me writhe in need. I groaned as Jessica massaged my swollen dick through my pants. Her touch felt so good. I am sure that I was aroused enough that my tip was dripping salty, white pre-cum \n\nJessica continued, \"I also wonder if you liked me talking to Robert, teasing him, showing him everything I have? He saw my pussy, Professor. What do you think of that? Does that make your cock hard? Did you like me being a naughty slut in front of another boy?\"\n\n\"Yes,\" I groaned, kissing Jessica's shapely neck. My breath was raspy with need. Her skin smelled lightly of vanilla. I was intoxicated.\n\n\"You naughty, dirty Professor,\" Jessica said. She was still kneading my cock and balls. I felt on the verge of an explosion. Sheer will kept me from firing off. Deep and sultry, Jessica continued, \"Follow me into the kitchen. And don't forget the groceries.\" \n\nJessica pulled herself out of my arms, did a hair flip, and turned around. She unbuttoned her skirt and let it drop to the floor. She took a few steps before stopping again in the middle of my living room. Jessica bent at the waist, her deliciously full and round ass sticking up into the air. The globes of her butt looked so tasty and firm. Jessica slid her fingers under the waistline of her cotton panties. She then pulled them down, before letting the soft cloth fall to the floor. I could see her lovely flower -- her puffy, pink sex; the folds of her pussy were so beautiful and fuckable. I could bury my face or cock in that moist tender hole for days. Before rising, she gave her ass a single, loud smack. The crisp sound reverberated lewdly off my apartment walls. She giggled, stood upright, and then sauntered into the kitchen.\n\nI joined her. She had turned on the sink water to lukewarm. I reached in the bag and pulled out the produce. We rinsed them off, scrubbing the zucchini and grapefruit thoroughly. This was done in silence; I think we were both too turned on to speak. Both of us were lost in our thoughts of happened and what was about to occur. We moved efficiently; before quickly adjourning to my bedroom.\n\nIn a single fluid motion, Jessica ripped off her shirt and bra before hopping into my bed. She pointed, ordered me to sit in a chair across from her, and told me to drop my pants. Her wish was my command. I felt nothing but relief as my dick popped out, unconstrained, into the open air. Total delight!\n\nWe were ready. Jessica was giving head to the zucchini, wetting the tip with her moist tongue. I had the grapefruit poised over the end of my cock. In a moment we would proceed to deflower our individual produce, masturbating together to a bizarre rhythm. \n\nJessica opened her eyes and swept her hair out of her face. She grinned at me, a shared and confidential smile. I don't think she ever looked more beautiful than she did right now. She was a woman in need, but one who was sharing that need with me. Together we would do something very naughty and sexual.\n\n\"Professor, I think it is time,\" Jessica said. She took the zucchini and slid it down her body, making sure to rub it lightly around her nipples along the way. After a year of eternities, the deep green rod reached the end of its journey, the perfect destination: the sweet slit of Jessica's cunt. \n\nI was poised and ready for that initial thrust. The moment drew out. Our breath was in unison; our eyes were locked. When Jessica moved, I would move too. We would be fucking each other from across the room. My grapefruit would be her pussy. Her zucchini would be my cock. Together, we would ride the same wave -- a crest to a joint next orgasm.\n\nThe words were so pure and simple from Jessica's lips, \"Fuck me.\" \n\nNever taking my eyes off of Jessica I slammed the grapefruit onto my engorged cock. At first, I hit a wall -- the citrus membrane. But after a few more thrusts I broke through. I could feel the fruit exploding on me. Juice squirted out, coating my crotch with vitamin C. It felt cold and wet, but still oddly erotic. The pulp formed a channel around me as it slid onto my dick, taking me in, parting ever so slightly. Each movement drove me a little further. It was so sexy knowing what I was doing. Not every guy can say they have fucked a grapefruit under the watchful gaze of a sexy woman.\n\nNor could they say that they saw that same sexy woman stick a zucchini inside of her pussy. Despite being very wet, it was also slow going for Jessica. The tip, which almost resembled a cock head, disappeared inside of her as Jessica rotated the veggie in a slow, wide circle. Each rotation drove the dark-green rod a little deeper. I saw Jessica's toes clench in heat, as she felt the smooth yet bumpy object penetrating her molten sex. Her head moved from side to side as the sensation started to take over. She began to build the pressure, forcing it deeper and deeper until it was about half-way inside of her cunt. \n\nJessica's eyes flared longingly as I fucked the grapefruit. Her tongue snaked out of her mouth and wet her soft lips. I could hear her moan, \"Oh yes, so good. Oh yeah, fuck it. Fuck it.\" But I couldn't be sure to what she was referring: the zucchini in her pussy or the grapefruit on my cock. The distinction didn't matter. We were as one in our lewd masturbation efforts. \n\nJessica's hips were now bucking against the zucchini. They were fucking upward, trying to take the veggie deep inside of her cunt. I was in shock. I couldn't believe how much was inside of her pretty, pink hole. Each thrust shoved it deeper, until over two-third of the vegetable was inside of her. \n\nThe true marvel, though, was when Jessica pulled the zucchini from her cunt and brought it up to her mouth. I could see the dark green skin glistening with slimy girl-cum. The outside of the zucchini was beautifully slick with Jessica's juices. Those juices, however, seemed to turn Jessica on even more. She licked along the length with a single slurp. She then moaned, \"Oh fuck, I taste so good. I love my pussy. I wish I had some hot slut to sit on my face, grinding her cunt against my lips. Fuck! I need zucchini down my throat.\"\n\nJessica's mouth opened wide as she took the zucchini down her throat. She tilted her head back as she swallowed it down deep. This was a true deep throat. I couldn't believe how far the vegetable could go. What an artist!\n\nAs I watched this display I was getting hotter and hotter. My arm was working furiously as I slide the grapefruit back and forth on my raging cock. It was sticky and wet. I had now driven my cock as far I could before reaching the thick skin on the other side. Now I just needed to throw myself into it and bang away at the grapefruit. \n\nI slammed that grapefruit onto my cock. It was battered and bruised from the onslaught it was taking. No worries. Juice was running everywhere, down my legs, thighs, and the crack of my ass. The whole room stank of the aroma of grapefruit. Strange, I thought, I had never connected citrus with sex before. Now these two disparate things would forever be intertwined for me. \n\nJessica's was also moving the zucchini faster and faster inside of her sopping twat. She was groaning in need, screaming \"Fuck , oh fuck, Professor, oh fuck!!!\" I could she was getting close. \n\nBut I needed more. The grapefruit was good, but it was falling apart under my onslaught. I needed another answer to my horniness. \n\nI dropped the broken grapefruit and walked over to Jessica. She saw me approach her head, my cock jutting at full strength between my legs. Jessica's reaction was automatic; no thought was required. She gripped my cock in her right hand, and leaned in to take my dick into her mouth. \n\nThe warmth of Jessica's mouth was such a welcome change to the cool loving of the grapefruit. I could feel her nostrils blowing hot air around my rod, as she slurped and sloshed. I took her head in my hands and pulled her face onto my dick. I bellowed, \"Oh shit, eat my fucking dick! Take it slut. Suck all those nasty juices off of me. Get me clean, so I can really USE MY DICK!!!\"",
        "While pummeling her pussy with the zucchini, Jessica inhaled my rod. Her tongue worked magic, circling and twisting with frantic desire. She was a fuck machine; a blowjob dispatcher. She was taking me where I wanted to go, but I didn't want to quite get there yet. I had one more thing I wanted to do....\n\nI pulled my cock roughly from Jessica's mouth. She looked up at me and gave me a sexy and forlorn pout. I responded by gripping her at the waist and flipping her over. Now Jessica's ass was staring upward at me. The zucchini was blocking one orifice, considering Jessica was still fucking herself with it. No matter. It wasn't her pussy I was interested in. It was time for Jessica to be fucked at the same time in two of her three sweet, teen holes.\n\n\"Jessica,\" I growled, \"I am going to fuck your tight, puckered asshole. You were such a naughty cocktease earlier this evening - now you are going to be fucked in the ass. That is where out of control, nasty sluts get fucked.\" Jessica burbled and groaned incoherently as she continued to screw herself silly with the zucchini. Apparently, the idea didn't sound too disagreeable.\n\n\"Spread em so I can DP you with the zucchini,'\" I said as I pulled Jessica to the edge of the bed. I stepped between her legs and gripped the cheeks of her ass. I pried them apart, making sure to rub the sweet, nether hole of Jessica's asshole in the process. This would be rough; I wouldn't show mercy.\n\nI placed the head of my dick at her trembling sphincter. Jessica slowed the driving rhythm of the zucchini as she made herself ready for my first thrust. Control and patience was necessary, otherwise too much would be going on. She would already be too full of the veggie to also be able to take my cock.\n\nI was at the door to Jessica's ass again. I had to reflect on this sweet, sweet opportunity. How many other guys would love to be here? What would they give for the chance to fuck this delicious blonde up her juicy ass? I was such a lucky bastard. \n\nI pushed inside of Jessica's beautiful butt. Instantly, I felt her grip me like a vice. She held me tight, clutching me deeply. The tip was working its way in, slowly, surely, insistently. I could hear her groan into a pillow, \"Oh fuck, it is filling me. I feel soooooo full! OOOOOOHHHHHH!!!\" I felt the head pop inside. Now it was time to burrow in deeper, to begin to take the fuck to a new level. \n\nI could also feel the zucchini inside of Jessica. It was sliding in and out of her pussy, in an alternate rhythm. A thin membrane of skin separated me from the veggie. Together, cock and zucchini, made up a force of pure fuck. \n\nI knew that this was not going to be a long, slow screw. I understood very well that I wasn't going to last very long. Jessica's ass was just too tight. The sensation was too much. The pleasure -- oh the pleasure! -- was beyond compare. \n\nI began to feel orgasmic electricity coursing through me. My cock felt so good in the sweet sheath of this eighteen-year old coed's ass. I dug my fingers into Jessica's skin and gripped her tightly at the waist. Thrust after thrust banged into her. The friction was so hot! I wanted to finish this with force. I wanted to pound into her, to slam her sphincter, to own her bowels. Jessica responded by bucking back into me and by releasing a babbling torrent of guttural moans. \n\nWith a final thrust, I pulled Jessica onto my shaft. I was buried as deep inside of her ass as I could go. My whole body began to quake; I felt myself going weak in the knees. I groaned a deep and earthy wail as jets of white, hot jism fired off inside of Jessica. Several ropes of cum found their home deep within her bowels. \n\nWe were both exhausted. Our gasping breath was deep and long. I uncorked myself from her ass, releasing a river of our juices. I fell to the bed, to tired to say anything. Instead, I threw my arm around her and fell into the spoon position. The last thing I remember before drifting off was Jessica saying, \"Mmmmm zucchini and grapefruit....\" "
    ],
    "authorname": "gradprof",
    "tags": [
        "coed",
        "masturbation",
        "professor",
        "zucchini",
        "student",
        "citrus",
        "coed",
        "sorority"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/oral-exam-ch-13"
}