{
    "title": "A New Georgy-Girl Ch. 03 - Echoes",
    "pages": [
        "This is the final part of Georgy and Tyler's story, and it's just that, a story, so I hope you read and enjoy it that way; there's no moral, no parable, no point being made, just me uploading my mind and hopefully sharing something you'll like. All characters indulging in adult activities are over 18, and no animals were harmed in the course of creating this story, not even a single cat-poop eating weasel.\n\nIf you liked this story please vote and/or comment, and if you didn't, please tell me why and I'll try to do better next time. If you email me and would like a reply, please don't forget to include a return address, I do reply to all feedback, even if it's to say thank you, I don't agree with your comment, but I'm still grateful you took the time to send it.\n\nBig thanks to Handley Page for reading through and sanity-checking me, occasionally i do need it and he provides the necessary background of reality we al need, so many, many thanks, HP!\n\nbeachbum1958\n\n_____________________________________________\n\nPart 1: It Begins\n\nIt all began, like so many things, innocently enough; Georgy and I were getting ready to survey a couple of potential projects while Aunt Kay and Megan, the children's nanny got them ready for school and pre-school; normally Georgy and Megan did it, or on her days off I did, because Aunt Kay was eighty-one now, and while still spry and fit, just wasn't up to managing three boisterous, outspoken hooligans like my brood when they got out of hand. This morning was different, though; the vendor was catching a flight to Canada that afternoon so if we wanted to nail him down we had to be there on the bounce, which meant dumping the school run on Megan and heading down there hot-foot.\n\nGeorgy, of course, was consumed with guilt; looking after our kids was the be-all and end-all of her life, but we also had a business to run, and she was the one who mattered when it came to acquisitions and planning, not me; I was just there for the heavy lifting. Georgy was the negotiator and final say, and those two properties were something she'd set her heart on the second she'd spotted them and realised what a money-spinner they could be, as well as a showpiece for us and what we did.\n\n\"Mummy, don't want to go to school, wanna come with you an' daddy!\" grumbled the middle child, my little girl Edie, the spitting image of her grandmother; every time I looked at her I saw my mum; the same big, grey-hazel eyes, that mop of auburn curls, the same firm chin, the same rosebud lips, and the same firm expression, and that same 'don't you dare mess with me!' line in her forehead when she didn't get her own way. I could stare at her all day, just loving her and seeing my mum back with us again. Her older brother Jamie and baby brother Jerome adored her and would do anything for her, she had them wrapped around her little finger, but she knew she was daddy's girl through and through. \n\nJamie had Georgy's striking looks and all of her calm temperament; those distinctive grey eyes and pale complexion, and that tell-tale mop of jet-black hair made him stand out in any crowd; he was a natural leader, whether playground games or exploring the house with Edie and Jerry in tow, and his sense of fun easily equalled his mother's. \n\nJerry was my little clone, my eyes, my hair, my independence, and my stubborn streak. If Aunt Kay could be made to admit to a favourite (and I think Torquemada would have had a tough time of it, to be honest) then she would have picked him; I think he reminded her of my own father, whom she'd helped raise from a little boy. I'd see her sometimes with Jerry on her lap staring at a photo of my father and flicking her gaze back over Jerry, obviously seeing my father in him.\n\n\"Poppet, you can't come with me, I'm going to see a creepy old house, there's going to be dust and cobwebs and spiders and cat-poop, you don't want to step in cat-poop do you?\" said Georgy, straight-faced and serious while I hid my face, because I can't lie to the kids, they know all my tells.\n\n\"Yuck Mummy, why are you going to a poopy-house!?\" she squealed, her face wrinkled up with disgust.\n\n\"Daddy and I might want to buy it and fix it, and if we do, we're going to have to clean it up and get rid of all the spiders and cat-poop, and there might even be dirty, sneaky weasels hiding behind the wardrobes and maybe eating the cat-poop!\" she finished dramatically.\n\nEdie stared in wide-eyed horror at the thought of cat-poop and dirty, filthy, nasty weasels eating it; if there's one way to distract a child, I've learned, it's to tell them something vaguely disgusting and let them fill in the gaps; it worked for Georgy, and now it was working on our daughter.\n\n\"I don't want to come with you Mummy, 'spose I see a weasel and it licks me?\" she breathed, \"Mummy, 'sposing it licks me with its tongue all covered in cat-poop? Eeee, yeeuck, that's horrible!\"\n\n\"So you'd rather go to school, baby?\" coaxed Georgy, and Edie nodded, wide-eyed and lip quivering in case she saw a dirty, cat poop-eating weasel. I had to hand it to Georgy; the way she came up with this stuff was near-genius level, because I wouldn't have been able to keep a straight face...\n\nGeorgy roundly kissed all the kids, so did I, slipping Megan a little sweetshop money to treat the kids when she picked them up, and beat feet out of there before Jamie told Edie that there was no such thing as cat poop-eating weasels and she started up again with the wanting to come with us.\n\n\"That was amazing, baby, you're so good at it!\" I grinned, pulling Georgy close so I could kiss her and squeeze her squeezable bottom.\n\n\"I got it from you, Ty, don't you remember?\" she grinned, \"You told me I must never go into the old scullery by myself because that's where your umpteen-times great grandfather murdered Grizelda the milkmaid and stuffed her body up the chimney, and she came back as a brain-eating zombie so the family kept her locked in there, when all along that's where you used to sneak out at night through the old dairy!\"\n\nI laughed out loud, I'd completely forgotten about that, probably because I'd never habitually tortured my little sister the way all my friends used to with theirs.\n\n\"See, Tyler, if you managed to control that silly smirk of yours you'd be able to lie to the kids like a grand master, but you can't, you tell them stuff while you're grinning like a chimp and they just go \"oh here we go, daddy's lying again!\" whereas I learned from your mistakes; that's why I'm the boss of you!\" she grinned, grabbing my crotch and almost making me trip over.\n\nEight years married, three kids, and she can still make me want her at the drop of a hat. At some point in my life I did something so right I'm being rewarded forever; life, for me, didn't get any better.\n\n*****\n\nThe two properties we went to see proved to be exactly what Georgy was looking for, although she didn't let on; no point in tipping off the vendor how interested we really were. The owner, a little old lady somewhere in Canada had inherited the two houses, on adjoining plots, in the 1950's and done nothing with them since. Now she was getting on for 100 and her distant family were hoping to sell up and add something (hopefully) significant to the fortune they were expecting to inherit from her. The vendor, one of her estate trustees, was willing to be more realistic; in his view the properties were unliveable, quite unsellable in normal markets, and probably better off being demolished, because the site was potentially more useful as a car park than a living space; trying to manage or renovate them from Nova Scotia was just not feasible, and quite frankly, in his opinion they were more of a liability than an asset, so a reasonable offer would secure. Once he sold them he could get the family off the old lady's back, and we could do what we liked with them. Everyone wins.\n\nI already knew that planning permission to build a parking structure was not going to happen, so no developers were going to be sniffing around; the houses were in a conservation area, which meant restorations or new builds had to harmonise or blend in seamlessly with the surroundings, but best of all, they were not listed, and probably wouldn't be, given that none of the other more period-representative properties in the immediate vicinity were listed either. That's not to say we had a free hand, either; in the words of the Planning Department, any work we did on any properties had to 'reflect and engage with the vernacular of the immediate environs' and pass their strict approvals procedure, which I knew we could easily do.\n\nThat meant no black privacy plate glass and concrete modernist additions or uPVC double-glazed conservatories tacked on to the sides of them, and no awful, overblown mock-Tudor 'stockbroker' town-house conversions complete with faux half-timbering; the surrounding properties were some quite magnificent Georgian, Regency, and mid-Victorian detached mansions and townhouses, so that was the vernacular, which was fine by us; that's what we did, after all.\n\nGeorgy was the negotiator in our partnership, so while she haggled I strolled around with my camera taking shots of the walls and chimneys, looking for cracks or subsidence, or signs of sagging, water damage and rising or falling damp, whether or not the window and door apertures were true and square, and comparing roof heights and square along the fa\u00e7ade of the building. There was one large crack in the brickwork of the first house where the wall had separated along the brick courses rather than through the centre of the bricks, and, to check for movement, when we first scoped out the house I'd cemented a series of thin glass slides across the crack in various orientations. \n\nA month later they were all still intact, no cracking or shattering, so I knew the wall wasn't moving, but a full structural survey would confirm that. If there was movement, we had a budget contingency for underpinning, so I wasn't too concerned. Otherwise I just wandered around, snapping away and letting the house talk to me, which was my way of working out whether I wanted it or if we should walk away.\n\nGeorgy found me at the back of the second house, measuring the ground heights and the square of the back wall with a laser tape measure. She looked smug, which meant she had good news.\n\n\"Kiss me, baby, we're in business!\" she grinned. \"Subject to survey, the houses are ours; there's a lot of work, and the structures seem to be sound, both houses, but the survey should confirm that. The vendor is looking for a quick sale, so I beat him down to what I think is a fair price; to be honest, I got them for a lot less than I'd bargained for, and he got more than he was expecting so we're both happy. In fact, I'm feeling so happy I think you should take me home and keep me going, don't you, Soldier-Boy?\"\n\nHer innocent, wide-eyed stare and ingenuous smile was more than I was prepared to pass up, so I dragged her back to the car with unseemly haste and only token resistance on her part. Georgy knows how to get my motor running, and it was revving up at the red-line; she was definitely getting the best of me when we got home! \n\n*****\n\nAunt Kay greeted us as we came in, her raised eyebrow all too eloquent as she asked \"I take it everything went well?\"\n\nGeorgy grinned and pulled me along behind her.\n\n\"Like clockwork, Aunt Kay, and now Willie and I have to go and iron out some fine details, so don't hold lunch for us, please, we've got things to do!\"\n\nAunt Kay smiled that knowing smile she got whenever Georgy told her we'd be 'busy' and patted my hand.\n\n\"Okay, darlings, just remember, Megan's picking some stuff up for me in Woodbury but she'll be collecting the kids from school in a couple of hours, so lock your door, sweethearts, you don't want any... distractions... while you're 'busy' do you?\"\n\nGeorgy planted a quick kiss on her cheek and headed for the main stairs, my hand held firmly in hers as we sedately headed upstairs; if Aunt Kay hadn't been standing there watching I probably have been racing Georgy up the stairs, tickling her as I chased her, damn; still, there was always tomorrow...\n\nGeorgy raced me to our bedroom and darted inside, dodging around the bed and giggling as she continued to dodge me, but I was wise to this one, and I suddenly dived across the bed, grabbed her around the waist and dragged her back onto the bed with me.\n\n\"Not fair!\" she complained, giggling as I tickled her, the one thing she had no defence against. \"No, no, Tyler don't you dare no, stop it, I swear I'll, no Tyler, quit it!\" she gurgled as I had most of my wicked way with her, but the best was yet to come.\n\n\"Stop it Tyler, please, no more...\" she begged, so I kissed her.\n\n\"Get naked and it's a deal...\"I growled in her ear, before sticking my tongue in and making her shriek and wriggle madly to try and escape.\n\n\"Okay, okay, you win, you big bully!\" she grinned, so I kissed her again as I fumbled with the button on her jeans while she kicked off her ankle boots.\n\n\"You're a bad, shameless man, Tyler Wilmot...\" she chided me even as she popped the button on my jeans, and as I slid backwards off the bed I grabbed the hem of her jeans and slid them off with me. As always, I took a long, happy moment to appreciate her legs. Georgy has long, supple equestrian's legs, perfectly formed and not at all over-muscled, just toned and firm and model-flawless, and I could look at them all day long. Of course, I'd rather look at the rest of her too, and she wasted no time in sliding off her polo shirt and tossing it dramatically across the room so I could indulge. She shook out her hair like a supermodel and posed for me in just her flimsy little panties and sexy, lacy bra. Even after three children she still had small, perfect, pouty little breasts and the picture of her like that, with cute, mismatched little socks to complete the look made me feel horny as hell. \n\n\"Strip, soldier, that's an order!\" she barked, her eyes dancing with glee, so I did, in not-quite unseemly haste, while she watched and licked her lips. I keep myself in shape, a construction site is no place to be flabby and out of condition in, so I was nicely muscled, although not obsessive about it, and Georgy licking her lips as I stripped was all the affirmation I needed; as long as she liked what she saw, that was good enough for me.\n\nI made to climb onto the bed with her but she stopped me, pointing at my shorts.\n\n\"I said 'strip', are you deaf, soldier?\" she growled, eyes twinkling with suppressed laughter, but I shook my head. \n\n\"If you want them off so badly, come and take them off yourself!\" I sneered, making her sneer right back at me before she darted across the bed, grabbed the waistband, and yanked my shorts down.\n\n\"Hmm, not bad, I suppose it'll have to do...\" she mused, so I tackled her once again and kissed her, while deftly unhooking her bra and slipping it off.\n\n\"Gotcha!\" I grinned, rolling over so she was on top of me. \"C'mere, you!\"\n\nGeorgy wriggled on top of me, grinning naughtily, which was fine by me; having my beautiful wife and sexy best friend grinding on me was all to the good as far as I was concerned, plus it meant I could slide her panties off much easier; there's always a silver lining, if you know where to look... \n\n\"Now I've got you where I want you, I expect you to take full advantage of me, got that?\" she grinned, rubbing noses with me as she ground her pussy against my aching cock.\n\n\"Your word is my command, oh Star of Mine Evening Delight and Moon of my desire!\" I straight-faced even as my hands slipped down to fondle and pull her bottom-cheeks apart.\n\n\"Ooh, Tyler you naughty man...do it again!\" she giggled, so I obliged, making her sigh and grind against me all over again.\n\n\"You're such a bad man, Willie, I don't know why I put up with you...oh, wait, yes I do!\" \n\nWith that she slid her knees either side of me and sat up, posting on top of me as she slid her slick, damp pussy against my rigid cock. I could tell it was getting to her, her eyes were closing and a pink flush was creeping down her neck and suffusing her chest area.\n\n\"Will, please...\"she murmured, gasping as I thrust against her, making her eyes fly open. I slid my hands up her thighs to her waist, planning on flipping her over, but she shook her head.\n\n\"N-no, Willie, I w-want to drive...\" she stammered, grinding herself even more definitely against me as her small, perfect breasts danced. I didn't argue because damn, she looked hot and clicked my meter over to 'full overload' when she took charge!\n\nGeorge grinned lasciviously at me as she rode me like a slo-mo Texas bar bull.\n\n\"Dirty soldier-boy like this, yes? Do more for ten dollar extra, you pay me I do bad things you betcha!\" she pidginned at me, momentarily distracting me from the mesmerising sight of her sexy little nipples circling as her boobs danced.\n\nI was totally entranced with her; every time with my Georgy-Girl is like the first time, it's always new, always hot, and overloads my brain, and that's how it was just then.\n\n\"Please, Georgy...\" I groaned, desperate to make love with my sexy wife. Georgy played a little longer, no doubt enjoying the expression of agonised lust on my face before taking pity on the poor suffering soldier. I felt her raise up slightly, and then suddenly I was engulfed in her hot, most snugness as she slid me into her, slowly, slowly lowering herself onto me until I was completely embedded in her.\n\n\"Better, Ty?\" she whispered, before once more rotating her hips and riding me, squeezing me with her internal muscles as she gyrated on top of me. Neither of us can take this for long, Georgy gets off on being in the driving seat, at making me come more or less at her whim, and I get to watch her whole body shake and quiver, which means I have a helluva time holding back. It's our favourite game, we both know the rules, and nobody loses.\n\nGeorgy had long given up the sensuous hip-rolling that made her whole body quiver and flex, now she was just pounding herself down onto me, while I was doing quadratic equations and target triangulation calculations in my head to keep me from just exploding inside her; I wanted to keep us on the edge as long as possible, my favourite thing in the whole world is pleasing my girl, and I wanted to keep pleasuring her as long as possible. Georgy gasped through a firecracker string of mini-orgasms but I somehow held on, I wanted her to remember why our afternoon delight was such an important place for us. \n\n\"Ooohhh Will, yess, yesss, YESSS!\" she screamed as the big one hit, and that was it for me; I came so hard my cockhead actually burned with the pressure jetting into her, long, thrilling spurts that nearly turned me inside out, filling my girl with my essence.\n\nGeorgy slumped down bonelessly on me, utterly spent, her heart thundering and her breath whistling through her teeth. I was in no better shape; my ears were still popping and crackling from that massive climax and my arms felt limp as wet spaghetti. With the last of my strength I rolled onto my side so Georgy could slide off me and rest in the hollow of my arm. \n\nI don't know how long I slept, not very long according to the mantel clock; it was only 4:30, which wasn't late at all, until a stray thought filtered through the post-coital lassitude; it was 4:30, the kids' school gave out at 3:30, and it was a only a short drive away; they should have been home, had their tea, and be creating bedlam by now, but the house was silent. Georgy stirred, looking at me sleepily.\n\n\"Baby-girl, where's the kids?\" I murmured, and her eyes snapped open as she jerked upright.\n\n\"It's half-past four, where are they Ty?\" she gasped, before jumping out of bed, slipping on a pair of panties and tugging a simple shift dress over her head as she made a beeline for the door.",
        "\"Kids, where are you? Jamie, Edie, Jerry, where are you?\" she yelled as she bounded down the stairs and dashed into the dining room with me close on her heels. No kids, no TV, no sign of their usual tea-time chaos, and the same in the family room, no schoolbags and coats or drawings to put on the fridge. Georgy was beginning to panic.\n\n\"Children, babies, where are you, please come out, it's not funny!\" she begged, an edge of hysteria in her voice. I looked out onto the driveway, no sign of the Ford B-Max MPV we'd bought for the school run. I was beginning to panic now; I tried Megan's phone, it rang to voicemail, ditto the phone in the MPV; what the hell was going on? Megan was the children's nanny, she was supposed to be immediately available anytime one of us called, that's what we paid her for, but she wasn't answering her phone, and no-one was picking up the car phone.\n\nJust then Aunt Kay came down the corridor from the other end of the house looking worried.\n\n\"Will, Georgy, it's after half-past four, where are Megan and the children? They should have been home nearly an hour ago...\"\n\nGeorgy grabbed Aunt Kay's hands, her eyes wild.\n\n\"Where's my children, Aunt Kay, why aren't they here, they should be here now, Aunt Kay...\"\n\nAunt Kay looked worriedly at me but I'd just had a thought and pinged the car phone with the 'Find My Phone' app. It was showing the phone location as just outside Woodbury, near the kids' school.\n\n\"Come on Georgy, I know where the car is, let's go...\"\n\nI drove the Jeep, Georgy was jittering and having borderline hysterics by then, not that I blame her, I nearly was too, but I tried to keep on top of it. The GPS locator 'pinged', and the red line was showing a narrow lane, so I took it, and there was the Ford, about a hundred yards in, nosed into a hedge, the taillights shattered and the rear bumper and tailgate crushed and dented.\n\nI slid to a halt, but Georgy beat me to the punch, leaping out before the car had even stopped moving and running to the side of the MPV, to tug wildly at the dented, locked rear door. I was right behind her, seeing my children still strapped in their car-seats in the back in the back seat, and the pale, frightened face of Megan as she huddled in the rear seat foot-well, her arms around the frightened, hysterical children.\n\nI blipped the locks with Georgy's set of keys and yanked the door open and immediately all four of them started crying and babbling hysterically. Georgy unclipped and grabbed Jerry, who was almost incoherent, herself crying and gabbling, while I tried to help Megan out, but she was obviously in shock, and she wouldn't let go of the children; she fought me off in her determination to protect the children from whatever had happened here. I pulled out my phone, intending to call the police but no signal; we were in a dead-spot, which explained why no-one had called us, and poor Megan had refused to leave the children to go find help against whatever had happened here.\n\nGeorgy handed Jerry to me and tried to get Megan to let the kids up, to understand she and the children were safe, while Jerry hugged my neck so tightly it felt like he was choking me, but I didn't care, my baby boy was obviously seriously spooked. As Georgy spoke soothingly, quietly to her, the poor girl slowly relaxed, hugging Georgy as a storm of tears burst from her. She clutched Georgy as she trembled, almost falling out of the back of the MPV, which gave me room to unclip and scoop the kids out, all three of them holding me tightly as they sobbed hysterically. \n\nWe couldn't stay here, whoever had done this might be back, so Georgy sat on the grass verge, Jerry and Edie on her lap, Jamie in her arms, and both of them hugging Megan as I made short work of transferring the child-seats into the back seat of the Jeep, then took Jamie and strapped him in, then Edie, Georgy handed me Jerry, and hustled Megan into the front seat; she and Georgy would share the seat and seatbelt for the short drive home. \n\nAs soon as I hit the main road, two bars popped up on my phone, so I gave it to Georgy for her to call the police and tell them what had happened. Megan never said yea or nay, she was still in shock, but I had to know what had happened, who'd done this, and why; those dents in the driver's side and passenger door weren't impact prangs from another car; someone had tried to batter those doors open, to get to either my children or Megan; who, why, what did they want, and, more to the point, were they coming back to finish what they'd started? Home first; we were safe there, the kids would be safe there, when we got home we could puzzle this out; right now, drive, and drive safely, precious cargo in the back, get them home, then try and work out who'd do this to my kids, and why.\n\n*****\n\nI pulled up right in front of the central portico, and Georgy and Megan tumbled out, running around to the other side of the car to grab the kids out of the door facing the house and hustle them inside while I watched our back-trail in case anyone was following. The kids were still scared, they'd been through a terrifying experience and they could see how tense I was, even though Georgy was trying to calm them down and make a game of it, telling them jokes and silly stories about daddy fighting weasels all morning. As the family disappeared inside, a pair of West Mercia Police patrol cars, blue lights flaring, screeched into the driveway, and a Police Support Unit Mercedes Benz Sprinter van slid across the gates, blocking the driveway. \n\nThe face I saw climbing out of the first police car drew a sigh of relief from me; Charlie Bowen, Police Superintendent, my former platoon commander back in the sand, and Edie's Godfather. I could see the anger on his face even if he tried to hide it, he loved my kids, and Edie loved her Godfather, and the thought someone had tried to harm them had infuriated him, that was obvious. \n\n\"How are the kids, Will, how are they taking it?\" he demanded as he approached me at a run. \n\n\"Talk to me, Will, what's the SP?\" he said as led me a little way away from the rest of his uniforms. \"My lads are going to follow form, there's a specialist on her way who deals with children traumatised by attempted kidnappings, which is how we have to approach this, so we'll wait for her, but tell me what you know, and how you got to the kids.\"\n\n\"Not much to say, honestly. The kids are fine, scared, shaken up, but unharmed, maybe your psych girl can dig out of them what happened, I haven't tried yet; just make sure she goes easy; they're only small. I can tell you what I know, which isn't much. Georgy and I came back home from a day on one of the sites, fell asleep, and woke up after 4, and that's when we realised the kids weren't home yet. I knew Megan was in town to collect them, but calling her phone or the carphone failed, I found the carphone on GPS and it led us to the minivan.\"\n\nMy voice shook as what had so nearly happened to my children hit me.\n\n\"Someone rammed them, Charlie, someone forced them off the road, and tried to get to the kids; thank God for the side-impact protection, it kept them safe and the doors held. The van is pretty badly dented up but they were unharmed. Megan's in shock, I found her in the rear footwell, her arms wrapped around the kids, she actually fought me off, all she wanted to do was protect my kids; if I could give her a medal I would, she earned it today, believe me...\"\n\nCharlie looked at me curiously.\n\n\"Will, this wasn't an attempted kidnapping. Think about it: they battered and clubbed the doors hard enough to dent them, but all they had to do to get to the kids was smash the glass and pop the doors. Why didn't they do that? I'll tell you why; they were sending you a message: 'Look how easily we can get to you'. This is personal, Will, someone's after you, and today was just them showing you where your weaknesses are. They know by now you'll probably have worked it out, so they're going to try something else. They're getting inside your head, Will, and they'll be back, I guarantee it, question is, when, and what will they do next? You need to call this in, Will, you know who, get them down here ASAP.\"\n\n*****\n\nThe psychologist-person tried to interview the kids but they'd had enough and clammed up, peering at her suspiciously from behind Georgy like three scared mice. Eventually Georgy had had enough of her and her questions too and shooed her out, she was just spooking the kids even more and they were tired, strung-out, scared, hungry, and in no mood for anything except their Mummy and me. When the cops finally left, except for the police car parked prominently by the main gate, we gathered in the dining-room for a family pow-wow over dinner. Feeding the kids took our minds off the events earlier, but they weren't far from our thoughts. \n\nWhen dinner was done, Jamie, for once, allowed his mother to hold and hug him on her lap, Edie of course was snuggled on my lap, and Jerry was wrapped tight around his Aunt Kay, his favourite spot.\n\n\"What happens next, children?\" asked Aunt Kay, rocking Jerry like the infant he actually was, \"this is not over is it? Are the people who did this coming back for more, and how are we going to stop them next time?\"\n\nGeorgy shook her head slightly, rolling her eyes imperceptibly at the children.\n\n\"Daddy and Uncle Charlie made some calls, and guess what babies?\" she sing-songed brightly, no trace of stress or worry in her voice; a small part of me wondered how she did that, because I was trying manfully to hold a deep, killing rage down inside me; someone had tried to harm my kids!\n\nThe kids looked at her curiously.\n\n\"Uncle Andy and Uncle Rex are coming for a visit, they want to see you kids and maybe take you all on a little adventure, would you like that?\"\n\nAndy 'Jarhead' Simmons and Rex 'Bonzo' Miller were my two Scimitar ARV (Armed Reconnaissance Vehicle) crew from back in the sand, they'd had my back numerous times when things got hairy, and we'd been shot up, blown-up, and bailed out together three times. We'd made it back alive, alone and unsupported, to the Bastion in one of the most dangerous places in the world solely because we'd trusted each other, and now I needed them again. They were my Best Man and Groomsman, and, more importantly, Jamie and Jerry's Godfathers, and the two most capable, reliable, soldiers I knew. They'd be furious that my kids, their godchildren, had been attacked; with them on hand we'd have more than a fair chance against whoever was behind all this.\n\nThe kids' eyes lit up and loud, happy chatter suddenly filled the room; Bonzo and Jarhead spoil them relentlessly, and let them get away with stuff I'm obliged to damp down because Georgy wouldn't approve, even if I had no problem with it, and generally let them rampage on them; they're their favourite playmates and never, ever scold them. Of course they went wild, their excitement off the scale knowing that Uncle Andy and Uncle Rex were on the way. I could see the dark in their eyes dissipating and winked at Georgy; once again she'd said exactly the right thing to get the kids perked up and being kids again; I wished I knew how she did that, but honestly I'm just grateful she knew how at all.\n\nGeorgy hugged Jamie to her, something he hates, because he's a big boy now, and kissed him, again something he was publicly allergic to, and spoke to the kids. \n\n\"They said they'd be here in the morning, so why don't you all go to bed, it's late, and when you wake up in the morning, Uncle Andy and Uncle Rex will be here, and we can all have some fun, yes?\"\n\nCue complaints, 'Mummy, I'm not sleepy', 'no, Mummy, don't wanna go to bed', 'not tired', the usual kid fussing at bedtime, but Georgy and Aunt Kay packed them off to bed. Normally Megan would help with the 'bath/teeth/PJ's/tuck-in/story' cycle, but she was still in shock, so Aunt Kay helped while I prowled around downstairs letting my anger free where the kids wouldn't see it. \n\nWhen Georgy eventually came back down I'd finished punching throw-pillows and fingering the horrendous medieval killing implements lining the walls and promising mayhem, and I was ready to have a rational conversation. Georgy, however, had other things on her mind.\n\n\"Find them, Tyler, find the men who did this; they terrorised my babies, how fucking DARE they! Promise me, Tyler Wilmot; whatever it takes, however you do it, I want them found and I want them punished for what they did. They attacked my children! They have to pay, promise me!\"\n\nI pulled her close to me, feeling her body taut as a bowstring; she was beyond furious, someone had threatened her babies and the mother bear was out and looking for blood. Also, she'd called me by my proper name, something she almost never does, telling me just how serious she was. I held her close, feeling her stiff and unyielding against me as the fury worked its way through her. Georgy is the most placid, most even-tempered person I know, and it shocked me just how angry she was (although, thinking about it, I shouldn't have been), but eventually she relaxed, slumping bonelessly against me. It was then I realised she was crying softly, her body trembling as fear and reaction replaced cold fury.\n\n\"Will, they came so close...they're just babies, and those men, they...they...oh God Will, supposing they'd got to them, supposing they'd hurt my babies, Willie, how can I...oh my God, my children, what if they'd... thank you God, thank you...\"\n\nAll the hysteria and fright she'd hidden so well from the kids was coming out, and all I could do was hold her and help her level-off; our kids were safe, those men had scared them, but they were unharmed. That didn't mean I was going to let it go, oh no sir. I was going to find them and pay them back; they'd come after my children, now they were going to discover just what kind of hornet's nest they'd stirred up! \n\n\"They didn't get to them, baby, the kids are safe, that's all that matters, they're safe, Georgy-Girl,\" I murmured, stroking her glorious hair as she huddled on my lap, \"Bonzo and Jarhead will be here in the morning and we'll take a shufti around, see if we can pick up any clues who they are or what they want. Where are the kids right now?\"\n\nGeorgy wiped her eyes on my shirt and turned to look up at me. My heart broke at the look on her face; today had very nearly been a mother's worst nightmare and the ravages showed on her face, in her eyes.\n\n\"They're all in the nursery, I wanted them close by tonight, poor Megan insisted on staying with them, so she's on an airbed on the floor in there with them, and Aunt Kay's sleeping in the room on the other side of our room; I want all the family in one place tonight, not all over the house, okay, baby?\"\n\nI pulled her in closer to me.\n\n\"Good thinking, I'll sleep better knowing the kids are just a few feet away. And talking of sleeping, it's been a fraught day, let's go to bed, I'm feeling kind of twitchy right now and I need to be near the kids.\"\n\n*****\n\nI woke with a start in the wee small hours and had to smile; all three kids were in bed with us, Jerry wrapped in his mother's arms, Edie in the crook of my arm, and Jamie snuggled down between his little brother and sister, his fingers intertwined with Georgy's. I grinned and pulled the covers up over all five of us; at least right then and there my family was safe and secure, and that was good enough for me.\n\n*****\n\nI was awakened by a child landing on my midriff.\n\n\"Daddy-Daddy-Daddy-wake-up-Daddy-wake-up!\" chanted Edie, \"Mummy says breakfast is ready come on daddy, come on!\"\n\nPouring myself out of bed, the best I could manage at that point, seemed to be the only way to quieten her down, so I did, stumbling into the en-suite to brush my teeth and splash some cold water on my face to wake me up, then a quick tickle for my little girl before hoisting her into my arms to carry her down to have breakfast.\n\nThe boys were already tucking into their favourite breakfast, shredded wheat with milk, a spoon of honey, and a dollop of clotted cream, and there was a beguiling scent of bacon in the air, good, breakfast for grownups too. Aunt Kay and Georgy brought in chargers loaded with bacon, sausages, fried eggs, and toast. I looked quizzically at Georgy; surely she didn't expect me to eat all of that? She caught my expression and grinned. \n\n\"Bonzo and Jarhead just pulled up outside, perfect timing, as usual, so tuck in, what you don't eat they will. Tuck in.\"\n\nAunt Kay opened the door just in time for Bonzo to pick her up and spin her around, making her laugh with pleasure. The kids saw them and promptly forgot their breakfasts, instead mobbing their two favourite people. We tried talking over the noise of three excited children but gave up, instead settling for a cooked breakfast with Edie and Jerry sitting on the guys' laps and sharing the occasional bite. While they indulged the kids Bonzo and Jarhead exchanged glances with Georgy and me, reading the concern in Georgy's eyes and expression when the kids weren't looking.\n\nBy mutual agreement, we four retired to the sitting-room while Aunt Kay took the children up to get them dressed. I needed to fill them in on what had happened, and what it meant. I also couldn't help seeing that Jarhead had a Clansman PRC 349 personal role radio handset tucked inside his Multicam jacket, and a Push-to-talk headset around his neck. WTF?\n\nRex got the ball rolling.\n\n\"So Will, Sunray (Charlie's call-sign back in the day) shared some of his suspicions which is why we came hot-foot; when Georgy called me Sunray had already given me the SP, and I agree; if they'd really wanted to hurt the kids they could have easily have gotten to them. No, this is someone with a score to settle, and he's showing you how easily he can get to you. Whoever he is, this guy means business.\"\n\nAndy spoke up. \n\n\"We had a chin-wag about it last night, and all the way down here. I think we need to get you guys out of here; whoever's gunning for you knows where you are, he knows how to get to you, and he's not going to stop at terrorising the kids. Bonzo's right: whoever he is, he means business. I have a Sat-phone with Sunray's number on speed-dial, he's expecting a call soon to say we're out of here, so better start getting mounted up, Will.\"\n\nI had been racking my brains trying to come up with a name, maybe someone who hadn't liked one of our property deals, although if that were the case it would have been easier to just contact a solicitor and file for a review with the County Court and the planning committee, not resort to terrorising children. I needed to think this through, to try and come up with someone, anyone who had that kind of grudge. I stood up to go and pour myself a glass of water, and caught sight of Jamie standing in the doorway. As I turned to ask him what he wanted, I felt something stir my hair, and heard the 'tink!' of the window breaking even as the 18th-century Meissen shepherdess on the mantelpiece shattered into a thousand pieces. \n\nMoving on instinct alone, I dived for the floor, yanking Georgie down with me, wrapping her in my arms as I rolled us both against the wall right under the window. I'd been shot at enough times out in the sandbox to know that someone was taking pot-shots at me, and the safest place was right under the window, up against the thick, solid stone wall of the old building; no bullet in the world was getting through two feet of Portland stone.\n\nEven as I hit the floor, Bonzo leaped forward and grabbed Jamie, cradling him in his arms as he rolled into the hallway and out of any sight-line of whoever was shooting at us. It didn't stop them, though; a fusillade of shots shattered both sitting-room windows, raking the wall opposite and splintering the ornate Elizabethan walnut panelling. ",
        "\"JAMIE!!\" shrieked Georgy, struggling to get away from me.\n\n\"He's OK, Georgy, I've got him, he's safe!\" shouted Bonzo, \"Stay where you are, he can't get to you there, Jamie's under the stairs with me, just stay there, don't move!\" \n\nJarhead had hit the floor too, diving behind the big Chesterfield sofa, pulling his headset and boom mike into place as he hit the ground.\n\n\"Sunray, Sunray, this is Foxtrot Victor Romeo Two-Niner I say again, Foxtrot Victor Romeo two-niner call-sign Jarhead, Mayday, Mayday, Mayday, incoming fire, unknown shooter or shooters, no casualties, there are children here, I say again, there are children here, we are taking fire, requesting bailout ASAP, this is a priority Alpha, I say again, we are taking fire, requesting priority Alpha bailout ASAP, Foxtrot Victor Romeo Two Niner EXFIL.\"\n\nBonzo out in the hallway, smack in the centre of the building and out of any possible harm's way with Jamie, called out to Aunt Kay.\n\n\"Mrs. K, Mrs. K, get the children and Megan away from the windows NOW! All of you, stay up there, don't move around, lie down on the floor in the hall, don't try and come down the stairs, I'll come get you all, repeat DO NOT go near the windows, just lie flat on the floor. The police are on their way, stay there and don't move until I say so!\" \n\nThe shots had stopped, and in the ringing silence all I could hear was Jamie crying, and Georgy crying and struggling, glaring at me because I was holding her close to me and not letting her go to him.\n\n\"No, don't, he's waiting to see movement, stay put, sweetheart! Jamie's Ok, Bonzo's got him, he's safe where he is; please, wait, the police are on their way, don't give him a target.\"\n\nGeorgy suddenly stopped struggling, instead slumping against me, crying hysterically.\n\n\"Who's doing this Will, what do they want? They tried to kill you, that bullet was aimed at you, they missed, but supposing he hadn't? He's trying to kill you Will, why, who is he, what have we ever done to deserve this?\"\n\nI held my mouth; I wished to God I knew.\n\nThe sound of sirens, police two-tones came from the distance, lots of sirens, and then they were louder, and blue flashing lights were reflecting off the walls as the police vehicles pulled up outside the house.\n\n\"Hello the house, this is the police!\" and a rapid tattoo of knocking at the door let us know the police were at the door. Bonzo opened the door, and a squad of the West Midlands Police Armed Response Unit, in their distinctive black body armour and NOMEX overalls, and black MICH2000 tactical helmets, with SIG SG551 folding-stock carbines dived into the room and took up station either side of the windows. \n\n\"Injuries?\" enquired the sergeant in charge of the squad.\n\n\"None here,\" replied Bonzo, \"two children and two adults on the upper floor, check them out...\" \n\nA pair of armed officers peeled off and took the stairs two at a time, calling out as they ran upstairs. Jamie ran crying into the room and jumped into Georgy's arms before Bonzo could stop him, and then suddenly Edie and Jerry were there too and I could hold my children again, and that's when the reaction set in. The police discreetly looked the other way while I fell apart, and then suddenly Aunt Kay was there to hug us all as I cradled my wife and children, and yes, there were tears; I'd suffered nightmares not knowing if my children were safe, horrific visions of them lying silent and motionless upstairs, harmed by that madman, running through my mind, and to know they were safe, and in my arms, I have no words. \n\nCharlie came rushing into the room, eye-counted us all, and sagged in relief.\n\n\"Thank fuck, Will, all the way here I...\" he choked, hunkering down to ruffle the kids' hair and squeeze Georgy's knee. Edie clambered out of my lap and hugged him, her Godfather and best friend, and the tears ran down his cheeks as he hugged her close. After a few longer, heartfelt hugs, and a kiss to the top of her head he handed her back to me and nodded silently at the door. I gave our daughter back to Georgy, who gathered her in, and followed Charlie out of the room. We walked in silence all the way to dad's old study in the upper branch of the 'E' the house was built like, and that's when he lost it.\n\n\"FUCKING BASTARD, FUCKER SHOT AT CHILDREN, HE'S GOING TO FUCKING DIE, I SWEAR!\" He yelled, slamming his fist down on dad's desk, \"How fucking dare he, on my watch, he does this, first he attacks the children then he shoots at them, I'm going to fucking disembowel that cunt, how fucking dare he!\"\n\nI hugged him close as he shook with rage; Charlie was one of my oldest friends, the kids meant the world to him, he'd carried them when they were newborns and played with them all their lives, and someone had put them in mortal danger; he was incandescent with rage, but still not as furious as I was. Whoever was doing this was a dead man; Charlie was constrained by law to apprehend him and have him sent for trial; not me. The first chance I got, he was going to die, painfully. The bastard came after my children, they could have died! He was going to pay, whoever he was.\n\nCharlie looked like a man with a serious problem.\n\n\"Will, this whole situation is going to blow up on us; if the press gets hold of this it will be bad, they'll be yelling about terrorist incidents and 'Radical Islamic terror groups' and God knows what other fucking nonsense and making two and two into twenty-two and in the middle of it all this fucking madman is going to slip away until he's ready to try again. If the Chief Constable and the Chief Superintendent are pressed too hard by the media, they're going to turn to the Home Secretary, and he'll be answering questions in Parliament and laying blame anywhere he can and it's going to be a fucking media shit-show with you and the kids right in the middle of it. I can't allow that, so we'll do it this way: Bonzo and Jarhead are part of a specialist MoD group, SRG, security operatives who manage special projects for the military and certain branches of government; they were here too, they were under assault, which makes this their show.\"\n\nHe shook his head resignedly.\n\n\"If you allow them to step in front of this, it becomes an SRG, and in all likelihood SIS-SAS, joint-operation, then it's immediately covered by The Official Secrets Act. That means immediate and total media clampdown, no word of this gets out, and you get SRG and the SAS watching your backs and looking for whoever's behind this. How does that lie with you?\"\n\nI had to stop dead and think about it; so many people here already knew what had gone down, how could Charlie suddenly make this to not have happened?\n\n\"What about us, Charlie, where do we all go? We can't stay here, we can't be put in police protective custody indefinitely, how do we get eyes off us?\"\n\nCharlie actually grinned, although it was more of a rictus.\n\n\"All my lot have, at one time or another, signed The Official Secrets Act, they know how to keep their mouths shut if they want to keep their jobs and stay out of court, and when I say court I'm talking about being debriefed by a bunch of faces at Spook-Central, not the county court or the Crown court, so I guarantee when they leave here they'll forget what they saw, who was here, and what happened. They're already aware of the presence of at least two SRG officers so they know there's something else going on here. They won't talk.\"\n\nJust then Jarhead knocked and walked in.\n\n\"Will, Charlie, we need to arrange for a rapid bug-out, we've got a couple of safe locations, unless you've got a better idea, Will; I don't like the idea of hanging around here too much longer, we need to bail ASAP out before they brew us up again.\"\n\n\"Let me get Georgy and the kids sorted and we'll get our stuff together, give us thirty minutes and we'll be packed and ready, I know where we're going...\"\n\nPart 2: Withdraw and Regroup\n\nLeaving the house had been a bit of a wrench but we had no real choice, and we managed it okay without too many frayed tempers or teary outbursts. Luckily we'd retrieved the children's car-seats from the wrecked B-Max, they went into one of the nondescript estate Toyota Land Cruisers parked in the rear garage, and a bunch of suitcases and flight-bags stuffed with clothes, favourite toys, laptops and tablets went in the other one. Megan and Aunt Kay were both coming with us; after the way she'd defended the kids there was no way on God's earth I was cutting Megan loose to fend for herself, plus the kids loved her and she wouldn't be parted from them anyway. \n\nJarhead arranged to have an SRG-bonded contractor in to repair the damage to the house and provide 24/7 security while the house was empty, and his boss would very shortly be having a little chat with the school and the local education authority about the kids' absence and impressing upon them how it never happened, that issues of national security were at stake, and just how dim a view those higher up would take of any discussion of it by anybody at all. With that we set off, I drove the car with the kids, with Georgy riding shotgun, and Jarhead drove the other Land Cruiser with Aunt Kay and Megan for company. Bonzo was going to follow about ten minutes behind us in Georgy's battered but reliable old Land Rover Defender, keeping his distance and watching our back-trail.\n\nOur destination was one of the properties I'd inherited from my father's estate, a pretty, 6-bedroomed cottage (actually, two cottages knocked together into one) in a secluded valley in The Peak District. Georgy and I had vacationed there as a sort of short honeymoon just before Jamie was born, and she'd always wanted to come back and spend more time there; I just don't think our current trip and the reasons behind it were quite what she had in mind back then! \n\nThe house was just the right size, big enough to hold all of us comfortably and for the kids to rampage around in, and small enough to pick up easily. There was even a genuine cottage herb garden and surrounding wildflower meadows; the valley itself was one of those smooth parabolic valleys scooped out by a glacier during the Ice Age, with rounded valley bottom, and wide, gently sloping sides all the way up to a clear horizon, a mile or so wide and several miles longer along its main axis, ample space for the kids to play, explore, and roam around in, and, much more to my liking, no nearby tree-line, just flat, open meadow-land off into the distance, clear visibility for a full three-sixty. \n\nGeorgy was unhappy at first. Of course she was; she loved her home, she'd grown up there, all her favourite and most familiar things were there, but the plus side was this was more like an extended holiday, or at least the kids thought so, and it wasn't a permanent change; we'd go home one day, sooner rather than later if we could get that bloody lunatic, whoever he was, off our backs. \n\nThe cottage was fully stocked with the basic domestic necessities, things like household appliances, saucepans, skillets, and baking sheets, silverware, tableware, bed-linens, quilts, pillows, and fluffy bathrobes. There was even a backup generator and a full fuel-oil tank for the hot water heater and central heating. Georgy and I had always meant to go back there and spend an extended holiday, but then pregnancy, work, and family life had put a hold on that, but we'd always kept the place spick and span and ready to go if we ever managed to get a week away from work. I never guessed in a million years we'd be using it as a hideaway from a lunatic who had a homicidal hatred of us for reasons unknown... \n\nThe kids were quiet at first, and Georgy kept giving me worried glances; the three of them were usually just this side of bloody rowdy, and to see them so subdued worried me more that I wanted to let on, but I could see Georgy was worried too; what had that terrifying incident done to them, especially Jamie, who'd seen his mother and I huddling against a wall while someone shot at us?\n\nAfter a couple of hours Georgy had had enough of the silence from the back seat, and made me pull over onto the wide grass verge. \n\n\"Ty, I think the kids need to stretch their legs,\" she told me, mugging furiously, and I agreed just as phony-heartily, jumping out and unbuckling the children's seat harnesses so they could run around in the warm sunshine. Jerry and Edie seemed to be relatively unaffected by what had happened; they'd been safe upstairs when Georgy and I had been pinned down, but Jamie, usually the adventurous, outgoing one, wouldn't go with Georgy as she and the two little ones pointed out and laughed at rabbits and cows in the fields and all the Hedge-Sparrows and songbirds flitting in and out of the Hawthorn hedgerows, cautious of the Harriers hovering high above the fields. \n\nFor the first time in a very long time Jamie slipped his hand into mine and clung on tight, refusing to leave my side. He didn't even object when I picked him up, something he hates with a passion; instead he clung tightly to my neck, and I realised he was crying. I nodded at Georgy's worried glance and sauntered around the car with him, taking him out of sight of the two little ones as they played and ran around on the grass with Georgy.\n\n\"Do you want to tell me about it, son?\" I urged him, sitting on the tailgate with him in my arms. Jamie said nothing, just cried softly, so I let him, obviously he had something he needed to cry out, so I waited, holding him close until he was ready to talk. It distressed me that my little boy was so distressed; Jamie never cries, he's a confident, calming influence on the two younger ones even though he's only seven years old, but now he was just my little boy and he needed to cry. Jamie is Jamie; when he's ready to share, he does.\n\nAfter a few more minutes I sensed he'd stopped crying, so I pulled a Kleenex out of the travel bag and wiped his eyes while he blew his nose. Once he was cleaned up I pulled him against me, letting him listen to my voice in my chest as I talked, the way he'd liked to sleep when he was small.\n\n\"You want to tell me about it, son?\" I asked, feeling him nod against me, so I let him speak, telling me all about it.\n\n\"Daddy, was that man trying to kill you and Mummy? Was he going to kill Mummy? Why?\" he murmured. Right, so that was what this was about. I thought so.\n\nJamie tucked his head further in under my chin, his favourite spot when he was a toddler, so he could feel my voice rumbling in my chest and listen to my heartbeat.\n\n\"No, no he wasn't, he was just trying to scare us, me and Mummy. I don't know why he wanted to scare us, but Uncle Rex, and Uncle Andy, and me, when we get you all nice and comfy and settled-in where we're going, we're going to find out.\"\n\n\"Were you scared, daddy?\" he asked, and I told him the truth. \n\n\"Yes, Jamie, just a little bit, but Mummy was very scared, he frightened her and that scared me, and then I saw you, and you could have been hurt by accident and that scared me even more; that's why Uncle Rex grabbed you and hid you under the stairs, so you'd be safe, just in case.\"\n\n\"You stopped Mummy being scared didn't you, Daddy?\" he asked, and I had to smile.\n\n\"I think so, Jamie; actually, though, she stopped being scared when she knew you were okay; you're her big-boy, and she always wants you to be safe and happy, that's her job; to be your Mummy and love you, and Edie, and Jerry and make you all happy.\" \n\n\"And we have to love Mummy and keep her safe and make her happy too, don't we daddy?\" he asked me, and I had to grin, almost bursting with pride; how did I get so lucky with this kid? I ruffled his hair affectionately and for once he didn't shake his head in annoyance and smooth his hair back again; instead he grinned back at me, all trace of tears or fear gone from his eyes. I knew another hug wasn't going to happen; he wouldn't like that, he wasn't a huggy-clingy kid at all, so I squeezed his shoulder, man-to-man stuff he'd appreciate.\n\n\"That's right, Jamie; you and me, our job is to keep Mummy and Edie and Jerry and Aunt Kay and Megan safe; you ready to help me, son?\"\n\nHis grey eyes sparkled.\n\n\"Let's do it, Daddy, let's take mummy somewhere far away so she can be safe and we can look after her!\"\n\nI shook hands solemnly with him. \"It's a deal, now you better go and give her a hug; Mummy's still very worried about you.\"\n\nHe slid off me and ran around the car, and when I peered around the car he was kneeling on Georgy's lap as she sat cross-legged on the grass, hugging her while he kissed her, her glance at me just a little puzzled at the sudden display of affection, but I could see she was more than happy to lap it up.\n\nWhen we finally herded the kids back into the car after one last look at the really interesting caterpillar, and confirming the clutch of pheasants across the road were indeed pheasants, just like the ones Edie and Jerry chased around in the grounds back home every day, and one last look at the sheep in the field next to us, and lots of \"no Jerry, leave that poor frog alone, no you can't have him, no he won't like living in your pocket, put him down,\" or \"yes, that is a cow, baby-girl, yes it is very pretty, no, you can't ride it like a pony, no, we can't get you one right now, maybe Mummy will get you a pony later on,\" etc. and got them strapped-in, they were all three chattering nineteen to the dozen like they always did, jumping around from subject to subject at random. \n\nGeorgy slipped into her seat and squeezed my knee. I grinned at her and she glanced back at the kids, once more their usual, noisy selves, and leaned over to whisper \"I don't know how you did it, but thank you!\" before kissing me Georgy-style, which meant she put a lot of effort into it, which of course brought a barrage of '\"Ew, daddy, yuk!\" and loud kissy noises and giggles from the peanut gallery. Georgy grinned happily; our kids were back.\n\n\"Let's get them settled in and I can thank you properly!\" she grinned, winking lewdly, \"It's been a strange day, I think I'm going to need some normal soon, you get my drift, Tyler Wilmot?\"\n\nI did indeed; suddenly it seemed a long, long way to the Peak District...\n\n*****\n\nThe children loved the cottage, immediately staking-out their claims to their own favourite places, the things they wanted to do, places they wanted to explore, things they wanted to see. Our living arrangements were easy to decide; Georgy and I, the kids, and Megan in one half of the house, Bonzo, Jarhead, and Aunt Kay in their own rooms in the other half of the house. The kids got the master bedroom but there was no friction over the three of them sharing a room; Jamie had his own bedroom back home, and Jerry and Edie each had their own beds in the nursery, but you could bank on finding them both fast asleep together every morning; they slept better that way, so we never made a thing out of it. All in all, the three of them were quite happy to 'rough it' for the duration.\n\nGeorgy and my room was on one side of the kids' room and Megan's room on the other side, with a connecting door to the kid's room she insisted on wedging open; even here, a long way from what had happened at home she wouldn't be separated from the children. The kids were under the impression we were on holiday, and, to be honest, that's what it felt like. As far as I was concerned, the happier they were to be here, the less likely they were to think about or brood on what had happened back there.\n\nObviously, there were no stores in the house; other than the people we paid to clean the place once a week and do essential maintenance no-one had been here since before Jamie was born, so our first priority was getting in some supplies. The nearest village was about five miles away, in the next valley, and the first shopping trip reminded me why you should never take hungry kids through a supermarket. ",
        "After emptying out the shopping cart for the third time and putting all the chocolate bars, potato chips, doughnuts, chocolate biscuits, Mars Bars, sweets, dog food (Jerry couldn't read the labels on cans yet, but he liked the nice doggie pictures) and unidentifiable junk back on the shelves, I finally got the message and took Edie and Jerry on a walk on the village green with a candy-bar each to look at the duck-pond while Georgy did some actual grocery shopping. Jamie elected to stay close to her, obviously taking his new job of keeping his mummy safe very seriously. Watching him hold her hand tightly and intently watch everyone who came too close made me grin. Good lad. \n\nWe had a pair of mid-sized chest freezers back at the house and six adults to feed, as well as three faddy children and their bird-like appetites; our mission was to fill the pantry and freezers with enough real food that we didn't need to keep going back and forth to the store and leaving the house undefended if whoever was stalking us should suddenly show up. When I finally rendezvoused with Georgy she had three shopping carts stacked high with produce, canned food, dry goods, and frozen food, a mountain of frozen meat, and a couple of secret shopping bags bulging with treats for the kids. Georgy knew how to dole out sweets and 'treats' aka junk food sparingly; I'd tried in the past but the looks on their little faces defeated me and I usually took the coward's way and caved in, so she managed their junk-food ration because I patently couldn't.\n\nAfter dinner it took Georgy, Aunt Kay, and Megan to bathe the kids (or in Jamie's case trust, but verify...) and get them in their PJ's and into bed, and keep them there. The events of the day, the long drive, and then the frenzy of running around exploring the cottage, and of course, having Megan and two overgrown juvenile delinquents like Bonzo and Jarhead around to play with meant it took longer than usual for them to spin-down and finally conk-out. \n\nThey eventually did, though, and we breathed a sigh of relief. I'd picked up a few cases of IPA for the boys and me, some port for Aunt Kay, and a bottle of Bacardi for Georgy, so it was a relief to sit back peacefully, just the two of us, with a favourite little something to drink, and decompress after the events of the day.\n\nGeorgy gathered up her robe and snuggled in closer to me, her preamble to having a little chat, so I waited to hear what was on her mind.\n\n\"How do you think this will affect them, Will? All that noise and gunfire, and armed police everywhere; what's it going to do to them?\"\n\nI slipped the neck of her robe down so I could rub her shoulders and massage her neck.\n\n\"Honestly? I think they'll be okay,\" I said, working my thumbs into the back of her neck, something she especially likes. \"Edie and Jerry didn't really see anything, just some police and a lot of noise; Jerry might have seen their guns, so now he probably wants one too, but it's Jamie who'll be most affected, in my opinion; he saw you and I pinned down and bullets everywhere, and then Bonzo tackling him and giving him body-cover out in the hallway, but you know what? Scared as he was, he's still more angry than anything else.\" \n\nI grinned behind her back at the memory of Jamie watching over his mother in the supermarket.\n\n\"We had a little 'men of the house' chat while you were playing with the others, and he's decided it's his job to look after you, all of you, when I'm not around. Remember his trailing around in the store with you? That was him being your guardian while I was away. He's a brave kid; we did alright with him, with all of them. Mum and Dad would be so proud of them all.\"\n\nGeorgy sighed as the massage took effect on her, relaxing back against me.\n\n\"He's you, haven't you worked that out yet, babe? Jamie may look just like Daddy, but everything else is pure you, just as I remember you when we were young; you were just like that when you were young, so happy, and solemn, and brave and silly, and sweet and naughty, and so much fun to be around, and how he is with Edie and Jerry; he looks out for them because he wants to, not because he has to, just like you did with me. He's just like you, babe.\"\n\nShe reached up and pulled my head down so she could kiss me.\n\n\"And I wouldn't have it any other way. He's pure Wilmot through and through, Daddy all over him, and you all through him, the best of both parts of my life, and a thousand years of being bred to face front and do the right thing standing behind him. You're right; we did do okay by him, by all of them.\" \n\nShe squeezed my hand and kissed my fingertips.\n\n\"I'm tired now, there's a nice bed up there with our name on it, and you and I have unfinished business. Let's go, Will.\"\n\n*****\n\nI woke in the bright sunshine to Georgy kissing me as she climbed back into bed with me, shucking her robe as she did so.\n\n\"Morning, Mister Sleepy, the kids were up with the lark, they've had their breakfast, and Megan, Rex, and Andy have taken them for a ramble, Aunt Kay's pottering around in the herb garden and tutting at the state of the flowerbeds, so it's just you and me, so what do you wanna do, Soldier-Man?\"\n\nHer hand slipping under the covers made it clear what SHE wanted to do, so I bowed to the inevitable.\n\n\"C'mere you!\" I growled, grabbing her and listening to her giggle-squeal as I dragged her into my den of sin and iniquity. The night before we'd just fallen into bed and that's all she wrote; much as I wanted to ravage my lovely wife a little, the emotional and physical strains of the day had finally caught up with us, and a soft, warm bed and an even softer, warmer Georgy had lulled me like no lullaby ever could have; our heads hit the pillows and we were out like lights, for the best night's sleep I could ever remember. As far as I was concerned, someone owed someone a certain amount of mutual explorations, and the best part was it didn't matter who.\n\n\"I'm sorry, Georgy, I'm sorry I dragged you all the way here, I'm sorry the kids had to be so frightened, I'm sorry we have to hide all the way up here away from everything we know; I'll make it up to you, Georgy-Girl, I swear.\"\n\nGeorgy wrapped herself around me, nuzzling and nibbling my neck and jaw-line, something I find very hard to resist when she's all warm and naked and that...\n\n\"Oh pish, tosh, and pshaw, Will!\" she murmured, \"you took the whole family away from a dangerous place, Will, you did what you had to do, it was the right thing to do, so stop apologising, although, if you reeeaally want to make amends for something, I might know a couple of eensy-weensy, teeny-tiny little ways to get started, Soldier-Man...\"\n\nWith that, her warm little hand squeezed me meaningfully, and what had been on the way to a respectable stand suddenly grew into a solid, blue-steel erection, achingly hard and ready for action.\n\nGeorgy grinned happily and slid on top of me so she could kiss me properly. Georgy is, my opinion, the world's best kisser, she puts her heart, soul, and full imagination into it, and it shows; when she plants a pucker on me my mercury goes all the way to the top and pops the thermometer every time, and that's how it was this time too.\n\nWhether it lasted ten seconds or two hours, I always knew I'd been properly kissed, and my friend down below knew all about it, too; he was doing everything but baying for her, and I was one step behind on that; my Georgy-Girl seriously turns me on and I wanted her right then and there. Luckily she was right up there with me on that...\n\n\"Oooh Will, what have I found?\" she teased, grinding her slick labia against my engorged cock, \"Feels like you've been hiding something from me! You wanna tell me what it is? Aw, go-on, you know you want to, confession's good for the soul, you naughty, naughty Soldier-man! Tell me a secret, and if you do, mummy might have a sweetie for you...\"\n\nI was in agony; her sweet, sexy voice, the things she was saying, the way she was rubbing herself against me like a cat in heat, the look of phoney innocence in her big, beautiful grey eyes, and her wicked, wanton, inviting smile, all these things together were tying me in knots; God I wanted her so badly!\n\nGeorgy leaned down and brushed my lips with the softest, lightest possible kiss, a gossamer angel's feather falling against my lips.\n\n\"I love you Tyler Wilmot,\" she whispered, \"my husband, my protector, the father of my children, and the man I love more than anything in this world. Love me now, Will, make love to me, remind me why I love you so much!\" \n\nAs her lips met mine I rolled onto my side, holding her against me as I did so. Georgy never broke our kiss as her arms snaked around my neck, holding me even closer as our kiss went on and on. Kissing Georgy is one of my greatest pleasures in life. The electric thrill of her lips against mine, unchanging in intensity, yet never the same each time we kissed. Sensations and feelings I had no words for surged through me as yet another undiscovered part of her made itself felt in each kiss and drew me even deeper into her. I love her in ways I could spend a lifetime describing and never once getting even close to the truth of her; she gave my life meaning.\n\nHolding her naked, satin-smooth skin against my body inflamed me even more; after nearly eight years of marriage not one second has passed that I've never been less than completely besotted and aroused by her; for me, making love to my Georgy-Girl is a gift to myself I could never better, nor would I ever want to, and so it was then. My erection, already teased almost beyond endurance just by her naked presence was demanding her, my body would not be denied, and, seeing that same need and hunger in her eyes was the thing I needed.\n\n\"Love me, my husband, make love to me!\" she murmured, her legs drifting apart under me, readying herself for me.\n\n\"Don't you want to...?\" I asked, but she just grinned, that sweet, sexy grin that had captivated me so many years before.\n\n\"Later, Soldier-Man, I don't need it, I'm ready...\"\n\nAs we kissed her I slid into her in one smooth thrust. Georgy gasped, her hands grabbing my upper-arms as she lifted her hips to meet me, willingly taking me in, loving me back the way I was loving her. I love to make love slowly to Georgy, to take my time and live the experience. She loves that I take my time, make it about us, not just sport and gratification; I could never do that to her. I'm supremely grateful she chose to link her life so intimately to mine and I try and make sure she knows that always, but especially when we make love.\n\n\"Ohh, Will, yesss, that's it, yess, like that ooohhh yess...\" she chanted as her orgasm approached, until:\n\n\"OOOhhh Yesss, yess, yes baby ooohhhGGGOODDD! YESS!\" she gasped, her breath whistling through clenched teeth as she tightened around me. That was it for me; I couldn't hold back a moment longer and groaned as what felt like my whole heart and soul poured into her. My ears popped and my eyesight dimmed with the force of my climax rushing through me and taking over my life, long, thrilling, satisfying jets of spunk pumping into her, draining me dry. \n\nI slumped down, just enough wit left in me to roll away so I didn't crush her as I collapsed bonelessly, utterly spent. Making love to Georgy always does this to me, that connection we share drawing everything I feel for her out of me every time we connect in this way. Making love to the love of my life is truly the best feeling in the world. \n\nGeorgy rolled against me with a contented sigh.\n\n\"Love you, Soldier-Man...\" she murmured, smiling as she kissed her fingertip and dabbed the end of my nose with it. I kissed her, enjoying all over again the sensation of her lips against mine.\n\n\"Love you too, pretty girl!\"\n\nGeorgy snuggled herself closer into me, wrapping my arms around herself and pulling the covers up around us, making a warm cocoon for just the two of us. The warm scent of her hair and the feel of her curls against my cheek, her warmth, and her soft, regular breathing, all conspired to send me back to deep, contented sleep.\n\n*****\n\nI woke up slowly, drowsy and ready for a lazy, extended lie-in, instead opening my eyes to see Edie staring fixedly at me, shocking me awake. There was no sign of Georgy. Edie hasn't quite grown out of that unnerving, laser-focused, unblinking infant-stare that little ones seem to do instinctively, and seeing it burning into me at close range first thing when opening my eyes is always a bit of a shock.\n\n\"Daddy, get up, it's late, Mummy said we can only explore if you come along so get up, pleeease?\" \n\nI grabbed her and tickled her a little, kissed her a lot, my usual 'good morning' with her, and sent her on her way with a pat on the bottom. Something smelled nice, just not me, so shower first, then find out what the agenda for the day was.\n\n*****\n\nThe days blended together so seamlessly it began to feel like we'd never been anywhere else but the cottage, and never had a life anywhere else; long, golden days of summer spent picnicking with the children, rough and tumbling with them in the meadows, being fascinated by how fascinated they were by the wildlife that surrounded us, the hundreds of rabbits that dotted the meadows at twilight nibbling the grass, or watching the swifts wheeling and darting over the pond and flying back into their nests like little upside-down igloos tucked up under the eaves of the barn, or lying enthralled with them by the pond, watching the newts and salamanders creeping around under the surface, and the tiny, bright green flogs paddling around in the shallows. \n\nThe children grew wise to the ways of the badgers and foxes that ambled across the fields at twilight, and learned how to sit silently and watch as moles threw up their little hills as they dug their way across the meadows, or watched in fascination as stoats and weasels stalked rabbits. They loved to dip for minnows and stickleback in the little beck that meandered along the valley floor, and the large brown crayfish they trapped with their dipping-nets and the makeshift reed creels Jarhead made for them were always suitably admired and eaten with gusto when their Aunt Kay cooked them up. \n\nExpeditions to the lip of the valley with the children so they could play and collect pine-cones in the fir and pine plantations running down into the adjoining valley were one of their favourite pastimes, that and watching the cows and sheep graze along the valley sides, and following the cow-men to the local dairy to watch the evening milking, and smiling as they helped the dairymen spread rich silage, the pungent fermented grass for the cows to munch on as they were milked. \n\nWe didn't neglect their schooling, though; Megan and Georgy concentrated on teaching Jerry to read and helping him and Edie with basic numeracy skills. Jamie had brought along his favourite 'Biggles' adventure stories, and had developed a fondness for Marryat's 'Children of The New Forest', which stirred an interest in history. He'd never really thought of his home as particularly interesting, it was just where he lived, but now he was interested in who he was, where his family was from, and what that snarling leopard on my signet ring and on his mother's large, ornate ruby signet ring back at home signified. \n\nHe'd sit enthralled as his uncles told him tales of famous battles, and tales of heroes, of battles won and lost, of Richard the Lion-heart, of Owen Glyndwr and Prince Llewellyn and their hopeless fight to keep Wales free and independent, Edward The Black Prince, Wellington, Nelson, and Rex's favourite, Chard and Bromhead and the 139 soldiers of 24th Foot and their defence of Rourkes Drift against 4,500 Zulu warriors. \n\nHe learned about more than just British martial history, though; he learned about Sam Houston, James Wolfe and Montcalm, Dearborn and his riflemen at Saratoga, Lee and Sherman, Custer and The Little Bighorn, and tales of the Gurkha's and the Chindits, of Douglas Bader, the Spitfire pilot who'd lost both his legs but still fought in the Battle of Britain and became a fighter Ace and Wing Commander, and Guy Gibson and his men, the Dam Busters, who'd flown the Bouncing Bombs into the German dams to try and shorten the war. They held him spellbound as they shared their heroes and their passion for martial history with him. I also noticed Megan seemed to be spending a lot of time with Jarhead, and I mentioned it to Georgy, who smiled that secret smile she does so well.\n\n\"Well why not, Will? She's a pretty girl, Andy's not exactly repulsive, I'm sure she realised a while back that there's more to life than hiding away from civilisation and bringing up other people's children. Ignore it, babe, she's old enough to know what she's doing.\"\n\nIt was an idyllic existence, so much so that we pretty much forgot the reason we were there in the first place. Georgy had lost that air of tense watchfulness, and I had stopped my habitual night-time patrols around the valley; night after night I found no evidence that anyone was keeping tabs on us, and there had been no further incidents back at our home. The SRG team holed up at the house checked-in nightly with Jarhead or Bonzo to report that they had nothing to report, and SRG's sister alphabet agencies had reported no intercepted chatter concerning us or our whereabouts. \n\nWith peace breaking out all around us, I began to grow complacent, and started to believe that because nothing had happened, nothing was going to happen; whoever was stalking us had gone; they'd lost us and given up. I said as much to Jarhead, and for the first and only time ever, he literally chewed my ears off.\n\n\"What is wrong with you, LT, did you just decide to become stupid? How long are you going to stay here? Forever? Because you can't, those kids need to go back to school, they need other kids around them, and you have a business to run and a life away from here. The people in the next valley, the people in the village, all the farms around here, they all know you're here, how long do you think it will be before it gets back to the wrong people? We don't know who's after you, we think it's probably not some crazed Jihadist group with a bone to pick against former soldiers; that doesn't mean there aren't other crazies out there with a fucked-up reason or grudge all of their own. Look at you. You're out of condition, lazy, getting a belly on you, that's not who you are. Shape up Will, this life can't last forever; those crazy fuckers, whoever they are, haven't forgotten you, and sooner or later they're coming calling!\"\n\nThat night I looked at myself naked in the bathroom mirror and saw what I'd become. Jarhead was right; I was doughy, flabby, so far out of condition I couldn't believe I'd let it happen to myself; I'd mocked Max Preece for being a fat little bastard, now I wasn't far behind him, and I disgusted myself. How the hell could I have let this happen? How could I look after my family when I couldn't even look after myself? \n\nI swore there and then that it was time to change; no more snacking, no more picnics and fry-ups, no more beer, no more lazing around, and no more driving; the valley was four miles long give or take, not that big as these things go, and less than half of my morning run every day at Sandhurst. A daily hike from one end to the other and back again should be a simple way to start me back into a proper fitness regime and trim some of the flab off.\n\nI'd never really exercised methodically before, I'd never needed to; working on the houses with Georgy gave me all the bending, stretching, running around, and heavy lifting and carrying I needed to maintain my peak fitness. I used to be proud of the fact I was 'military-fit' not 'gym-fit', and somehow I'd let that go, slipping instead into a life of ease; come the morning, that was going to stop. I slipped my shorts on and climbed into bed, and Georgy, who should have been asleep, wriggled up close to me. She looked at me, smiled that sweet, enigmatic smile of hers, my smile, and kissed me gently.",
        "\"Thank you, baby, I was waiting for you to realise what was happening. Oatmeal for breakfast for you from now on, and no sugar, okay, sweetie? And no more fried breakfasts, sweets, and snacks; you're going to eat healthily from now on.\"\n\nI stared at her. How the dickens did she know what I was thinking?\n\n\"Georgy, I...\" I began, and she patted my chest.\n\n\"I heard Andy this evening, sweetheart; I loved you when you were so fit and trim, Will, and I love you to death now, but I wasn't going to say anything, you had to see if for yourself; what kind of wife would I be if I shamed and belittled you, even in private? I wanted you to see it for yourself, I wanted the boys to tell you, they can say things to you I would never say in a million years, and now you know and you're doing something about it. You and the boys go and do your thing, get yourself back in the shape you think you should be in, and I'll feed you properly and wait for my fighting-fit Soldier-Man to show up again! How does that sound, babe?\" \n\nI hugged her tightly.\n\n\"I don't deserve you, Georgy, and thank you for not saying anything!\" I murmured. \"Starting tomorrow, Andy and Rex are going to start putting me through my paces again; I let myself go, and that's on me, so I have to fix it, and the boys will take me through it. Time to start walking the ramparts again, baby-girl, Andy woke me up just in time.\"\n\nGeorgy looked worried.\n\n\"Why, what have you heard? Is everything...?\" but I kissed her to calm her questions.\n\n\"No, nothing at all, it's just we've kind of forgotten why we're here in the first place; Andy reminded me that the world hasn't gone away, and we need to keep our guard up; it's all gone quiet, and they don't know what that means. Whatever it is, I can't protect you and the kids by being a fat, lazy, useless slob, so tomorrow, that ends.\" \n\n\"Thank you, Will; knowing you're back on-guard makes me feel really secure; only you do that to me, baby, not Andy, not Rex, not the whole British Army; only you. Nice and early, yes?\"\n\n\"Up with the larks,\" I promised her, and I meant it too; the coming days were going to see some serious changes around here. \n\n*****\n\nGetting back into shape was at least fifty times more strenuous than just staying in shape had been; muscles had softened, endurance had faded, my wind was blown, and anything like real effort brought me out in rivers of sweat. My first run with Andy, just a mile along the valley floor, felt like running the obstacle course at Bulford Camp with lead weights strapped to me; I could barely stagger back to the cottage at the end of it. I couldn't believe I had made so much effort for so little gain; God, I was a mess! When the lads weren't running me into a gasping, sweaty ruin, it was calisthenics, vigorous, high-impact, army-style calisthenics, no mercy, no respite. \n\nTheir schedule was simple, and punishing; twenty jump-squats then rest, then twenty more, then crunches, twenty-five at a time, and any complaints got me another twenty-five, burpees, ten at a time, steadily increasing push-ups, starting with ten, and gradually working up to tranches of twenty-five in between all the other exercises they had me doing. \n\nIt was way more intense than the Annual Fitness Test (or CFT, 'combat fitness test' as it was still called by the older squaddies) I'd been required to pass at Bulford, and I thought at the time that had been brutal enough; this was worse; that was just once a year, this torture was every day. I literally crawled into bed at night, and fell out of it in the mornings, my legs wobbling and throbbing with the effort of walking, because my thigh and calf-muscles were so stressed and sore, to go back out there and do it all again, and more. \n\nThe torture went on until it stopped being torture; muscles eventually hardened, endurance ramped up to nearly my pre lazing-around levels, and it became less like a chore and more like a vigorous daily workout, but it had taken two weeks of intense effort, all day every day. On the plus side, though, I had finally stopped limping and staggering around the house and found myself more energetic and not dragged out and dog-tired at the end of each day.\n\nWhen Andy was satisfied that my endurance and muscle-tone were improved enough to take it was when the real torture started. Rex had pulled the 'Clansman' vehicle radio from his government-issue Discovery 4x4 back at the house and brought it along with him; it weighed twenty-five kilos (about fifty-five pounds, about the same as a fully-packed infantry Bergen backpack) and thoughtfully came with a backpack and webbing body-straps. Guess what he strapped on my back and made me take for a run? \n\nOk, it was a walk at first, albeit a brisk one; no-one, unless they're some kind of super-fit gym-rat or Gurkha (and believe me, I'd trained with them, they were made of spring steel and whalebone, no-one in their right mind can do what they do, it's just freaky...) is going to take off from a standing start with that much weight strapped to their back. The run was coming later; all he was doing was getting me used to the weight again. I'd had to do this every year as part of the required fitness regime, it was just a case of letting my body remember and acclimatise all over again to the weight and what it did to my balance. \n\nAndy galvanised me by reminding me that all those empty, battered old suits of armour standing around my home like weird, extra-large umbrella stands weighed fifty pounds or more each, and yet my ancestors, who were obviously much shorter and slighter built than me going, by the size of their armour, walked around in them for days on end, ran, jumped, and climbed on horseback wearing them, and fought hand-to-hand battles swinging a four-pound sword for hours in one hand and holding a ten-pound solid steel shield in the other; if they could do that then so could I and not make such a bloody song and dance about it!\n\nWalking the three miles to the other end of the valley and back again with that weight on my back was tiring, but I was surprised that I wasn't drop-dead exhausted; two weeks earlier they'd have had to bring me back on a wheelbarrow, that was how far out of condition I'd let myself become. Now, I was tired, yes, and a hot soak would have been welcome, but I certainly wasn't feeling like I was at death's door. Andy grinned as he helped me unload the backpack.\n\n\"Take a rest, LT, fifteen minutes, then ten Burpees, full pack, five minutes, and ten more, you know the drill. Don't look at me like that; be grateful it's not twenty-five push-ups with Jamie on your back as well! Believe it or not, you'll thank me one day for all this. Tomorrow we're jogging up to the ridge and back, same order, let's see how well you do running uphill in a debris field with that weight on your back, so when you're done grab a hot soak, get a good meal, carbs, you're going to need them, and hit your pit, early start tomorrow!\"\n\nI couldn't quite resent his sadism in working me so hard; once upon a time, just a few short weeks ago, astonishingly enough, I would have taken all he could throw at me and just shrugged it off; that it was such hard work was entirely my own fault, so I bit my tongue and got on with it. \n\nThe fact I was no longer an exhausted wreck pleased Georgy no end; she wasn't crass enough to snark at me because of the lack of \"horizontal discussions\" in the bedroom, she knew I was trying to regain what I'd lost through my own slothfulness and letting my guard down. She saw day after a day how wrecked I was after being put through my paces over and over again; most nights I could barely raise a weak grin, let alone anything else! \n\nHowever, as exhaustion tailed off, other things began to make themselves felt again; night after night Georgy massaged my aching muscles and joints, she could see that the old me was returning, and I could feel her massages and rubdowns becoming less therapeutic and more personal; my obviously increased fitness and trimmed-down body was getting to her, and not at all in a bad way!\n\nBelieve me, I hadn't lost any desire for her; quite the opposite, in fact. Georgy occupies my mind roughly 100% of the time, and the fact I wasn't making any kind of moves on her wasn't down to anything except sheer exhaustion, but as the workouts and running became less exhausting my mind and body started to feel other, more primal urges. Georgy still looked like the sexy, horse-riding university graduate I'd fallen in love with, marriage and three children had left no evidence of anything other than that a seriously hot girl had turned into a seriously hot 'yummy-mummy'. Climbing into bed with her night after night too physically tired to do anything except cuddle down and pass out was taking its toll on me too. \n\nHowever, things DO change, and my changed fitness and lack of tiredness left me room to ponder other things, and so it was that one night, after lights-out, I reached for her, and it wasn't to check if she was still breathing, if you get my drift.\n\n\"No baby, rest, poor you, you were so tired earlier...\" she demurred, so I pulled her close and kissed her meaningfully. Holding Georgy close always generates a welter of emotions and urges within me and colour my perception of her; wife, mother of my children, lover, partner, best friend, and, something I tend to let drop into the background hum of other feelings and emotions she arouses in me, baby sister I've loved totally and unreservedly since earliest days. I've never felt any conflict in me between all the many things she is to me, because Georgy is my all, she's everything to me and all I need to sustain me; she's my soul's deepest need, and the basis of all life as I understand it.\n\n\"I was tired then; I'm not tired now, Georgy!\" I grinned, and her hopeful grin and the naughty gleam in her eyes were all I could have hoped for.\n\n\"Why sir, this is all so sudden, I hardly know where to put my face!\" she giggled, batting her eyelashes coquettishly, \"My husband might be back at any moment now, for shame! I must know your intentions, sir, for I have a name and reputation to maintain!\" \n\nI wrapped my arms around her and rolled onto my back, taking her with me so I could squeeze and jiggle her bottom a little \n\n\"My intentions, young lady, are, alas, strictly dishonourable, but you'll love every second of it!\" I leered, and Georgy grinned happily, tweaking my rapidly erecting cock.\n\n\"Glad to hear it, Will, it's about fucking time!\" she leered right back at me, grinding herself against me and making me gasp at the sudden pressure. \"Do things to me Will, do bad, bad things, it's been so long...\"\n\n\"What are you waiting for, babe, you're there...\" I gasped, bursting with need for her, but she shook her head and kissing me, her mane of black curls forming a net around the two of us as we kissed.\n\n\"No Will, make love to me, please baby, I need you so much!\" she murmured, slipping off me to once more lie by my side.\n\nI slid down the bed, intending to play a little, maybe taste her goodies and give her more of a treat, but she stopped me.\n\n\"No Will, I mean it, I'm ready now; God, I've been ready for weeks! You have no idea, just... just do it, I'm about to burst!\"\n\nTo hear is to obey, and as I kissed her I slowly slid into her. God she was hot! The expression on her face told me all I needed to know about what she was feeling as we slowly made love, and that's what we were doing: making love. Georgy is my wife, my lover, the absolute centre of my universe, and everything I do with her is done with love (with a healthy dose of lust mixed in, too; she is seriously hot, after all...) and even if she wasn't already my girl I'd be making plans to waylay her and make her my girl; that's what she did to me.\n\nThere was no way this was going to be a prolonged, leisurely bout of lovemaking; nearly three weeks enforced abstinence had put an edge on me that would make a Japanese katana look blunt as a rolling-pin by comparison, and Georgy was obviously feeling it too. Our movements quickly moved from the gentle pace I thought we'd take to wild, almost frenzied coupling as the weeks of doing without her took their toll. All too soon she was kissing me wildly, humping and hunching against me as I plunged in and out of her.\n\nThe end, when it came, was all, and more, we were hoping it would be; Georgy grabbed a pillow and jammed her face into it as she screamed like a banshee, her pussy tightening around me and rippling like a hand squeezing and milking me. I couldn't hold back any longer, bellowing into the pillow as I came like a fire-hose, those weeks of pent-up need bursting out of me again and again, draining me dry as the strength poured out of me like a broken vessel.\n\nI collapsed next to her, utterly and completely drained, my body surrendered entirely to the languid, sweet sorrow of la petite mort, the 'little death' of post-orgasmic bliss. Georgy seemed to be in no better condition; her chest heaved as she lay with her eyes shut tight, tear tracks running down her cheeks. I reached for her, and her eyes flicked open, and her beautiful smile lit up her face.\n\n\"Hello Soldier-man...\" she murmured, gently stroking my face, \"Welcome back, I missed you!\" I smiled at her gentle jab, and she lifted the pillow and giggled.\n\n\"Look what I did, Willie...\" and I had to grin; she'd bitten a hole clean through the pillowcase, \"I think we better cut back a little, I only have so many pillowcases!\"\n\nI wrapped my arms around her and held her close; whatever was coming, at least one thing remained firm and unchanging: Georgy and I were still as tight as ever, and whatever happened, we were going to see it through together.\n\nPart 3: Si Vis Pacem, Para Bellum\n\nThe days blurred and melted together as summer rolled on into the first flush of autumn and the kids were starting to check the blackberry bushes daily, waiting for the day Georgy said they could go blackberry picking. That was about the extent of their worries, and Georgy, Aunt Kay, Megan, and the guys worked tirelessly to ensure it remained that way. My routine remained unchanged at first, exercising had become more or less habitual, and my days and nights were idyllic, spending the days with the kids, and nights once more making slow, wonderful love with my beautiful Georgy-Girl. \n\nHowever, as in all things, change had to come, and my bouts of exercise ramped up step by step as my fighting fitness slowly returned, and so the guys kept me busy, always pushing myself to gain back every molecule of fitness and conditioning I'd lost, and more, making me far fitter and better conditioned than even in my army days. \n\nBut under it all were the nagging doubts that Jarhead had put there; why had it all gone quiet, and what was coming next? I was starting to get feelings I'd hoped I'd never feel again, edgy, back-of-the-neck, prickling, up on tiptoes feelings I thought I'd left behind in the sandbox. Jarhead was right; nothing was happening, and it was all wrong. Something was up, something bad, and it was heading our way. \n\nJarhead and Bonzo didn't let anything slip, but I could tell they were on-edge too; the banter dropped off as the air of wary watchfulness I remembered so well from back in the sand crept over all three of us. Even Aunt Kay could feel it; I noticed she'd developed the habit of not letting the kids stray and play more than a hundred yards from the house and safety, and Georgy wasn't immune to it, either; she knew we were still targets, but she kept that down and away from the kids, leaving the real worrying to Andy, Rex, and me, at least when the kids were around. \n\nWhen we were alone, though, is when she would share her fears and I would try and comfort her as best I could, and she would relax; she knew that she and the children were my world, and that I would move Heaven and earth to keep them safe; I had promised her my life for theirs, and she knew I meant it. \n\nI was finally back at my peak fitness, taking my turn at night to roam around the stand-off perimeter we'd set, the closest we could ever allow intruders to approach, wary and watchful. Military routine slipped back into place, my experiences in Helmand and memories of how bad it could be if we let our guard down, all my training and experience came to the fore again; we were under attack, never mind the valley was peaceful as a church; trouble was coming and we couldn't afford to cease our vigilance.\n\nAnd so, when the people who had forced us here finally showed up, we were neither unprepared nor caught with our pants down, something I think they'd been banking on. To be honest, it was more or less completely the other way round...\n\n*****\n\nAndy, Rex, and I had developed a routine of being not-at-all-obviously on guard, mostly so as not to spook the kids, and we rotated shifts through the nights; if I was on nights, I'd patrol around three nights all night with an encrypted radio handset and voice-activated headset mike and a night-vision monocular while one dozed on the obscenely comfortable couch in the family room with a headset active in case I called, and the other got his head down for a full night's sleep. After my nights on guard, I'd sleep through the day while the other two took turns during daylight hours walking the perimeter we'd set or watching over the family and we'd swap rotas every three days. \n\nWhen I was on nights, Georgy, Aunt Kay, and Megan kept the kids and their brand of bedlam out of the house with nature-watching, collecting polished pebbles and quartz, feathers, pine cones, and interesting flowers for arts and crafts, dipping minnows and crayfish from the stream, reading and storytelling, and playing and running around in the meadows under Rex or Andy's watchful eye. The story given to the kids was that daddy had been up watching TV and chatting all night, so he was having a lie-in. It worked, mostly, although Jamie was brighter than the average bear and pretty early-on figured something was up, if not exactly what. \n\nIt was while I was back on the night rota that I spotted them, what looked like a late-model Nissan Patrol gingerly crawling down the Eastern escarpment, showing no lights and with the engine off. The valley, a wide, flat curve carved by a glacier during the last Ice Age was almost a perfect parabolic reflector, magnifying sounds along its entire length; it was such an effective echo chamber I could stand on the Western ridge watching the kids on the Eastern side through binoculars, over a mile away, and whistle to them and they'd look around to see if they could spot me. A car engine, especially a big diesel, would echo and reverberate up and down the entire length and breadth of the valley.\n\nThe valley sides were littered with rocks ranging from house-brick sized to gigantic boulders, all dropped by the melting glacier, with long ridges of moraine, mounded banks of loose jumbled gravel and crushed stone debris picked up and carried miles from their origin by the glacier and dumped in piles by the melt. Making the sides of the valley even more treacherous for any kind of vehicle were long, deep gouges, parallel trenches cut deeply into the landscape by the gigantic boulders, like stone-age monoliths weighing hundreds of tons, that the glacier had dragged along as it flowed down the valley, carving out the landscape as it is today before abandoning them when it melted.\n\n\"Jarhead, wake Bonzo, incoming...\" I murmured, shrouding the mike with my hand so my voice didn't carry, \"Time to get busy. Wake Georgy and Megan, and get the family into the cellar, stat.\"\n\n\"Copy that, LT, complying,\" he replied, \"how many, Will?\"\n\n\"One SUV, they're coming in no lights, engine off, down along the Eastern slope, ranging-in at four kilometres...mark; they're free-wheeling it, trying to be all sneaky and stealthy. Tell me we're dealing with pro's here, please...\"",
        "\"It sure seems like it, doesn't it?\" he chuckled. \"Come on back in, got some kit for you, let's make these fuckwits feel all warm and welcome...\"\n\nI was only about two hundred yards out, so I was back in the barn in minutes. Bonzo was up and out with us by now, using the night-vision scope to track our visitors who were just now learning why free-wheeling downhill through a post-glacial debris-field with no lights in the pitch dark was such a bad idea. Bonzo kept up a running commentary while Andy and I kitted-up.\n\n\"They're going to be over any second... now, and there they go, rolling down the slope, oh look, right into a trench, that looked like such fun, they're piling out, there's one...two...three...four...five, no wait, one's trapped, so four of them. They're sort of heading this way, but there's oh, look, more trenches, they're not having much luck out there, silly bastards, maybe a broken leg or two will teach them to come calling like civilised people...\"\n\nWhile Rex was keeping an eye on our guests I was strapping on a Warrior Recon SAPI plate-carrier, a lightweight chest armour vest with a ceramic trauma plate, while Andy held a new-issue Virtus helmet and Mandible-guard, something I'd seen but never been issued with, for me. He then handed me an Osprey belt and Blackhawk drop-leg tactical holster complete with Glock 17 and two clips. I stared at him and he grinned.\n\n\"What? They tried to shoot you before, they shot at Georgy, so they're probably not coming back to play patty-cake, so stop wittering and just fucking put it on and remember, centre-mass, double-tap. These things are accurate to about fifteen yards, after that who knows, so I'm going to be levelling the playing field a little. Take these, you may need them,\" as he tucked a razor-sharp American K-Bar knife into one of my vest's webbing loops, a pair of TAC gloves with Kevlar-armoured knuckle protectors, and a handful of half-inch wide zip-ties. \n\nHe hefted a carbine and my envy-factor shot through the roof; it was an L1198A1 CQB carbine (Canadian C8 Diemaco) the UK Special Forces weapon of choice, with suppressor, LASER Illuminator/pointer, Mini Red-Dot reflex sight, and a Trijicon ACOG (advanced combat optical gunsight) telescopic sight, not the SUSAT standard optical sight; I couldn't be sure, but I thought it could probably make the tea and predict Lotto numbers too, all it needed was a slingshot and I would probably have asked it to marry me... \n\nI was silent in awe and deep, deep jealousy; I'd always wanted one back in the sand, not the crappy, cranky, unreliable SA-80 with the equally crappy bayonet apparently made of tinfoil and compressed snot they'd saddled us with, but the Regiment boys who'd just started carrying them wouldn't let us crawler jockeys even touch them, let alone fire them. \n\n\"Where do you get this stuff from, Andy?\" I asked him, \"What the Hell do you do?\"\n\nAndy carried on checking his weapon as he talked.\n\n\"Rex and I are what they call Targeters, intelligence integrators and human ops planners with SRG; we're part of the SIS, the secret intelligence service, but we're not MI6 or Military Intelligence; we're something else entirely. Sometimes we work with both agencies, but we don't answer to them and I'm not going to talk about it here; let's just say that right now we have an interest in these people and leave it at that. Got that?\" \n\nI nodded, not really understanding, wondering if I'd ever really known my two former crewmen at all.\n\n\"We're going to try and capture them, right, and get the police up here and they can take them in, right?\" I asked, not happy at being handed a live-fire weapon and told to use it; my army days were long over, and this was rural England, the Peak District, an officially designated Area of Outstanding Natural Beauty, not the Panshir Valley or Dodge City.\n\n\"If you say so,\" said Rex neutrally as he gave me an unreadable, one raised-eyebrow stare and handed me a Personal-Role radio and PTT headset, standard fire-team squad comms we'd all used back in the sand. \n\n\"Look LT, we need to interrogate these numbskulls when we're done, so I promise, nothing lethal, not if we can possibly avoid it, okay? Now get your comm-link on, and remember, LT, only five-hundred metres range, so stay close,\" as he keyed his mike, watching my radio-set flash the 'comm.' signal. \n\n\"Good, all working. We know where they're coming from, let's wait until they get to the perimeter and see what their intentions are. What?\" he grinned at Andy's expression, \"Maybe they're just coming in to say 'sorry for troubling us and we'll be on our way now,' you never can tell. But, just in case they're feeling all pumped-up and dangerous...' he clipped a red-dot sight to his pistol, a suppressed Sig P226, and buffed it with his sleeve. I pointed out to him that \"silencers\" are actually illegal, and he shrugged.\n\n\"So is shooting at defenceless families, so we can be nice, or we can kick their arses for them; I favour option two, and if they don't like it then fuck 'em, they started it. This isn't the school playground, Will, I'm not Mary-fucking-Poppins, and I'm not here to play nice. Remember that Latin phrase you used to chuck around back in the sand, 'Si vis pacem, para bellum' If you would have peace, prepare for war?\" \n\nRex pulled up his sleeve and it was tattooed on his inner forearm. \"They brought this, not us, remember that; they want to come here and fuck with us so we'll fuck 'em properly, end of.\" \n\nHe took in my expression and grinned. \"Okay, okay, we'll hold back on the lethal force if we can, but no promises, happy now?\"\n\nAndy slid back the charging handle on his carbine, cocking the bolt, and nodded as he grinned wolfishly; they were both obviously primed and ready for this. Me, I went along with it because I had no other choice; we were in a private war, God alone knew why, and they'd given us no way out of this. These men were coming here for us, for me, they'd put my family in mortal danger, and my friends were right, this was not of our doing and we had to end it now or it would never end. Four of them against three of us, but even if they still had whatever they'd been shooting at us with back at the house, we had three massive advantages; we were trained combat veterans, we had the kind of scary American firepower they could only dream of, and we knew where they were...\n\n\"Okay LT, get buckled-up, they're nearly at the stand-off perimeter, let's go piggy-hunting. Jarhead's spotting, you on the left, I'll take the right, Jarhead will talk us in, radio-silence now, mute your handset comm-tone and just blip your mike to reply. Let's go.\"\n\nIt felt like one of the more dangerous patrols I'd made back in the day; the same sense of impending danger, the weight of the plate-carrier and ballistic plate recalling my Osprey armour back then, the feel of the TAC holster strapped around my leg, the Bowman headset pressing against the inner rim of my combat helmet, and the feel of the helmet chin-strap strapped tight under the jaw guard but no GPMG, no Minimi machine gun, not even a hated SA-80, just a handgun, two clips, and a knife. \n\nIt was a moonless, starless, overcast night and darker than a coal-mine at midnight and I was completely blind, reduced to gingerly feeling my way along and shuffling carefully along rather than risking stepping on a loose rock and going arse over kettle; that would be disastrous, the sound would instantly alert our guests to where I was. \n\nBonzo had the night-vision scope, and Jarhead was coaching me with the HMNVS night vision gear mounted on his helmet; all I had was his voice in my ear guiding me around the large boulders and broken piles of rock out to the perimeter we'd set, so it was pretty slow going, but we'd done this stuff before a lifetime ago, and it was coming back to me.\n\n\"Hold it there, Will; you're 300 metres out, there's a large boulder nine o'clock, two metres, one of them's alone there, looks like he's maybe carrying a sawn-off shotgun of some sort. Ease up to your left and put your hand out...there. He's right opposite you on the other side of that boulder; hold it for just a sec, hold it...hold it...hold it, okay go!\"\n\nI slipped around the rock, feeling my way along and listening for any sound that gave his position away.\n\n\"Stop there, Will...I don't...fucking idiot's just put down the shotgun, he's taking a piss against the boulder, what the fuck...? Take him out Will, he's doing my head in, with his cock in his hand he's gonna be easy meat. Do it.\"\n\nNow I could hear the sound of the man urinating, the splashing shockingly loud in the dead silence; I could even hear him whistling under his breath as he talked to his dick, so good, while he was concentrating on tinkling and not sprinkling his attention was elsewhere, which was all I needed. I eased up behind him and slammed my fist against the back of his head as hard as I could, my Kevlar armoured-knuckles taking all the impact. \n\nThe wet, crunching sound of his face smacking into the rock was muted by the fact I followed-through and kept my forearm on the back of his head, pressing his face hard against the rock. He folded without a sound, either dead or deeply asleep, but I took no chances and, working solely by touch, zip-cuffed his hands securely behind his back even as I mused that if he was dead, what a sad thing it was to go while you were busy going. The added Insurance of his socks jammed tightly in his mouth and a long zip-tie wrapped tightly around his head to hold the gag in place meant he was out of the game. That left three against three, good odds in anyone's book.\n\nThe sound of Jarhead chuckling came to me.\n\n\"Will, oh Will, whatever are we going to do with you? You could have let him finish taking a piss you know; I mean really, what kind of animal are you? Now it's all down his leg, poor guy, what is his mummy going to say...\"\n\nI blipped my PTT twice to let him know I'd heard him, and waited for him to guide me further.\n\n\"Turn left from your present position...slowly...hold it there, the other three are now on your ten o'clock, twenty metres, I think they think they're in a skirmish line, but they're too close together, maybe they think they'll be able to sneak into the house via the garden if they stay bunched up. One's got a long rifle of some sort, looks like an FN SLR, the other two have sawn-off shotguns, Bonzo is going to show them what a stupid idea that is. Large boulder two paces dead ahead, stay down, Bonzo's making his move.\"\n\nI crouched, muting the 'schlick-schick' of the pistol with my palm as I slowly slid back the slide and cocked it, and waited for instructions, and then I heard the soft, sneezing 'Pop! Pop! Pop!' of a suppressed firearm somewhere off in the distance and a scream of pain.\n\n\"Bonzo took out one shotgun, they're huddled down, trying to fix the shooter. Move in, stay low, and don't kill anyone unless you have to, I want these fuckers on a rack. Go!\"\n\nI moved in the direction indicated by the groans and whispered curses, letting Andy guide me in until I heard breathing. Jeez, I was right on top of them! \n\nThey must have heard me just as I heard them, and a dark, vague figure loomed up in front of me. I fired on instinct alone, the way I'd been trained, two shots, 'double-tap' right in the centre of the vague form even as I dropped and rolled. I'd shut my eyes as I fired, trying not to dazzle myself with the muzzle flash and lose whatever minimal night-vision I had, but I knew I'd hit home, the wet, meaty thud of the two rounds hitting his body had done their job. I heard a clatter as he dropped whatever he'd been carrying, and stretching out my hand I discovered what indeed felt like an old SLR; was this the shooter who'd shot my house up and nearly killed Georgy and Jamie, and how had he got hold of such a lethal relic? \n\nFor a split second rage washed over me and I was tempted to shove my pistol in his mouth and let him have two more rounds but from the sounds of it, he was already past any vengeance I could take. So much for me flapping my lips about being civilised and getting the police involved; when it came to it I'd killed a man without hesitation, and yes, he'd come to kill me, and yes, he'd attacked my home, but that still didn't make it any less wrong, or me any better than him.\n\nNow there was only one left of the four now that three of them were hors de combat, (plus the idiot trapped in the overturned Nissan, but he wasn't going anywhere) and I had to hope Jarhead and Bonzo had him fully zeroed in, because I still couldn't see fuck-all. He, on the other hand couldn't fail to know exactly where I was. Basic training took over; if my position was known then change it, stay down, stay silent, and wait for my opportunity. Crouching low, one hand brushing the ground to feel for any large stones or trip hazards, I scrambled as silently as I could to move away from where the last remaining killer would have seen my muzzle flashes.\n\n\"I know you're here, Wilmot, I can hear you moving around...\" came his voice, shockingly loud in the pitch darkness, apparently just a few yards from me. \"I'm going to kill you for what you did, and then I'm going to fuck that pretty wife of yours and kill her too, what do you think of that, rich-boy?\"\n\nIf he thought threatening Georgy was going to make me give away my position he was sadly mistaken. By now Jarhead and Bonzo had him dead to rights, they were probably moving in closer as he spoke.\n\n\"What's the matter, Wilmot, too scared to face a real man?\" he taunted me, but my mother didn't raise any fools and I knew what he was trying to do, so I stayed mum; every time he spoke I zeroed into him even more accurately.\n\n\"Going to kill you, rich-boy, kill everyone you know, those three rugrats of yours, fuck your wife like a whore, and burn your fucking house to the ground, you hear me, you fucker? I'm going to make you pay for what you did to my family, can you hear me?\" \n\nOkay, that made no sense; who the fuck was he, and what had I ever done to his family? Nothing came to mind, not that I cared; this psycho was after my family, time to shut this down. From my prone position I raised the pistol, aiming for where I guessed he was, and squeezed off a single round, rolling away even as I fired. He cursed and the boom of his shotgun nearly deafened me as he fired at my muzzle flash. At that close range the shot was still a dense cloud, it hadn't spread out yet and it passed harmlessly over and to one side of me. At the same time I heard two pops, one after the other, the sound of more suppressed rounds and he screamed, falling heavily. I heard the shotgun clatter as he dropped it, and another 'Pop', and he screamed again.\n\nIt was my chance, and I dived onto him, sweeping the shotgun away as I punched where I guessed his face was. I heard and felt the crunching sound as my armoured glove broke his nose, before I jammed the barrel of the Glock in his mouth as hard as I could, probably breaking some of his teeth with the force I rammed it in.\n\n\"Lie still you shit-head or I'll blow your fucking head apart!\" I gritted, but it was just bravado; he was down and the boys were right behind me, judging by the red dot in the middle of his forehead.\n\n\"Good one, LT,\" laughed Andy, flicking on his helmet-mounted LED torch so I could get a good look at whoever this psycho was. And I knew him! The first time I'd seen that ugly mug I'd been slamming a van door on it; this was one of the three men who'd invaded my home, tied up Georgy and Aunt Kay, and planned to murder them when they found the money that monkey's cock Max Preece had told them was hidden in the house. He hadn't looked so tough standing in the dock the last time I'd seen him when the judge sent him and his two confederates to jail.\n\n\"Get off him, LT, I want to talk to this piece of crap, take the gun out of his mouth, we're going to have a little chat!\"\n\nWith my pistol jammed in his eye I slid off him and stepped back even as Andy pressed his boot against his neck.\n\n\"Now listen here, dumbo, you're going to stand up nice and slow, like; any sudden moves and my friend out there is going to blow your balls off, understand? Upsy-daisy, there's a good boy!\"\n\n\"I can't, you shot me in the legs!\" he whined.\n\n\"Oh fuck off,\" grinned Andy, \"just a couple of flesh wounds, don't be such a fucking cry-baby, on your feet, now!\"\n\n\"I'm hurt...\" he whined, \"I need a doctor...\"\n\n\"You can get up, or I can put a bullet through your fucking mouth, you and your mate. Now get up and walk or I'll shoot you now and tomorrow you'll be somewhere in the North Sea feeding the crabs, take your pick, you worthless cunt, because we're done here, and I'm not telling you again.\" \n\nHe lay still, staring up at Andy and me, and I grinned and nodded at his groin. He shrieked when he saw the red dot centred on his crotch. Andy keyed his mike and spoke to Bonzo.\n\n\"Count of three, Bonzo then take your shot, I'm done with this prick, the other one's still alive, we don't need this joker.\"\n\nMy home-invader/wannabe assassin struggled to his feet and glared at us; I guess he wasn't that badly hurt after all, except for the oozing hole in his upper right arm, and I'm sure he didn't need that arm to stand up anyway. Andy grinned encouragingly at him.\n\n\"See, I knew you could do it, now get weaving, and remember; I see anything I don't like and you're a dead man.\" He clicked his PTT mike. \n\n\"Bonzo? Let's make our guest comfortable. Move it, you; fucking walk or die right here, right now, it's up to you and I don't really care which; we've still got your other mates to talk to and we're not going to carry you...\"\n\nAs we approached the house I saw a torch flicker from the barn area, so we angled that way, our prisoner gasping and stumbling, making such a big deal over a couple of teeny little bullet nicks. Bonzo hit the lights in the barn and I manhandled our captive to the sturdy wooden chair in the middle of the floor, pressing my cocked pistol against his left eyeball while Bonzo bound him securely to the chair with heavy-duty zip-ties.\n\n\"Right, start talking, tough guy, who the fuck are you and why are you pulling this shit? And just so you know, any answers I don't like and I'll cut you somewhere painful, starting with your dick, so talk; what the fuck is your problem, and why this family?\"\n\n\"Andy,\" I broke in, \"I know this bastard; he and two other men invaded our home, tied up and threatened Georgy and Aunt Kay, looking for some money that loser Max Preece told them was in the house. I took them out and they were arrested.\"\n\nI nudged the bound man with my foot.\n\n\"I was there in court when they sentenced you three dickheads; I know you got fourteen years, just like the other two. That was only eight years ago, how the fuck are you here now?\"\n\n\"Good behaviour!\" he snarled, \"They released us after serving half our sentences, and we came to pay you back! I don't care if you call the police, if I go back to jail I'm still coming back for you and your fucking family; you killed my brother!\"\n\nI shook my head.\n\n\"Nope, wasn't me; you came uninvited into my home, your threatened my family, I beat the shit out of all three of you, you got what you deserved, but I didn't kill anyone; mashed their balls and broke their faces, maybe; I'll hold my hands up to that, but all three of you fuckwits were alive and breathing when the judge sentenced you, I was there. So no, I didn't kill anyone...at least, not then; tonight, your two mates out there, maybe, like I care. You come to my house and threatened my family, you shouldn't expect a warm welcome. Bonzo?\"\n\n\"His friend with the shotgun is alive, just really unhappy; a bullet through each knee and his right arm will do that to you. He's strapped to a boulder out there, I suppose he might get away if he can manage to run with a three-hundred pound rock strapped to his back and no knees, but don't hold your breath. The other two are deader than dogshit, well done Will; maybe you should come and work with us part time, we could use you...\"",
        "\"No thanks, I like working on old houses and going home every night with Georgy, so I'll pass, but thanks for the offer. What about these two, him and that bloke out there, and that idiot trapped in the Nissan, what's next?\"\n\n\"Oh, they're not going to prison, at least not if we can help it...\" he grinned as he hunkered down in front of our prisoner. \"No, we have somewhere a lot more...entertaining in mind. What's your name, anyway?\"\n\nThe man just glared at him, so Bonzo sighed theatrically, and pulled a K-Bar out of the back of his belt. As Bonzo leaned down our guest hawked and spat in Bonzo's face. \n\n\"Fuck you, I'm not scared of you fuckers; I did seven years in Long Lartin, there's nothing you can do to me, I'll happily go back, and when I come out I'm coming right back and fucking finishing this!\"\n\nBonzo wiped his face off, grinned, and patted him on the knee, and suddenly he had his K-Bar knife point in the pouch of skin right under his left eye, a tiny trickle of blood starting where the razor-sharp knife had just nicked the skin.\n\n\"I warned you, fucknuts, apparently you don't listen too well; I hear Long Lartin turns out three kinds of ex-cons; dimwits, halfwits, and fuckwits; which one are you?\"\n\n\"I want a solicitor, now, you can't hold me like this; if I've been arrested then I'm entitled to see a solicitor...\n\nBonzo grinned at him and wiped the knife clean on his shirt.\n\n\"You hold on to that, sunshine, maybe it'll keep you going. The thing is, you're not under arrest; if we were the police then we'd have pay attention to your rights. Unfortunately for you, you don't have any, nope, not a single one. You committed an armed assault on agents of Her Majesty's government, members of Her Majesty's Special Services, no less; that's known as 'domestic terrorism', or treason, if we really want to push it. We do. Assaulting us was an attack on the Crown we swore to defend, and we really don't like shit like that, it upsets us, and when we get upset, we get a little bit indiscriminate.\" \n\nHe patted Kevin's shoulder commiseratingly.\n\n\"Add to that the fact the Home Office in general and the Home Secretary in particular really, really, really doesn't like people pulling shit like that; it annoys him, his wife was killed in a terrorist atrocity and he likes to throw the book at home-grown scumbags like you, things like whole-of-life incarceration in solitary confinement a long way from family, and friends, and daylight, just for starters. So this is what's going to happen; you and your two mates are not going to jail, oh no; you're not going anywhere near a nice comfy police cell or a courtroom; you're going somewhere not very nice a long way away from anywhere and you'll be questioned as often and for as long as we deem sufficient, in a place no one knows about, where you'll soon be forgotten entirely...except by us, of course.\"\n\nHis smiling expression didn't waver as he spoke, in sharp contrast to the mounting horror on our prisoner's face.\n\n\"Think about this, Kev; where you're going there are no guards you can subvert or cultivate, no locks you can pick, no calendars, no lights, no TV, no visitors, no ping-pong tables or basket weaving, no lawyers, they just get in the way of the truth, and slop food, twelve-hundred calories a day, just enough to stop you dying of malnutrition, constant, fixed temperature of sixty degrees and no clothes, and no light for twenty-three and a half hours a day, just like our American cousins do, only they do it somewhere nice and warm, maybe tropical, like Guantanamo, or somewhere out in the desert.\" \n\nHis smile was wintry now, with no trace of compassion or pity.\n\n\"We don't have anything half as nice, Kevin, and, if by some fluke you do manage to escape, you won't get far; if we don't get you the bears or hypothermia will; it will actually be quite instructive to watch you try and survive naked in the Arctic; who knows, they might even let you make the attempt, you know, just to see what happens, a sort of object lesson to the other full-time losers like you we have stashed in other places.\" \n\nHe stood up and unclipped the magazine from his Sig, unscrewed the suppressor, and cleared the breech before placing the handgun in a plastic cleaning tray.\n\n\"The thing is, Kevin, you're going to answer any questions we choose to ask; you'll offer to sell your family for a chocolate bar, a pair of socks, a blanket to cover yourself with, food that tastes like food, and you'll never be allowed to leave; once that door closes behind you, it's closed permanently. I bet you're sorry for being such a pointless arsehole now, aren't you? Too bad it's too late. Actions have consequences Kevin, and you're about to explore them in full. I hope you think it was worth it.\"\n\nThe clatter of a helicopter overhead made Bonzo grin happily.\n\n\"Here they are, Kevin, your ride's here, right on schedule. Enjoy it, you'll never again see or hear anything we don't want you to. Don't worry, though, we'll keep you healthy; don't want you getting sick, after all. No, we want you to live the experience to the fullest, so we'll keep you alive and healthy. It's almost Zen, really; we'll keep you alive and unharmed until you're sick of each day that passes, each day will be exactly the same as every other day, and when you do finally go, a long, long time from now, you'll fully understand and appreciate just how much you lost, how much you threw away, and how little you mean to us. Have a long and pointless life, Kev.\"\n\nBonzo caught my expression and blank-faced me.\n\n\"Suck it up, Will; no-one ever accused us of being nice guys. Trash like this get to find out the hard way just who and what we are, and the price you pay for pissing us off. You want chivalrous behaviour? Then build a round table and recruit a bunch of white knights pure of heart and intent, and when you find out that doesn't work and it all goes to shit give us a call. Good men do bad things for good reasons all the time, that's how the real world works, and you may not like it, but that's how it is, and it will never change. You and families like yours sleep undisturbed in their beds because people like us make sure it's safe to do so.\" \n\nHe stepped up to me and helped me unclip the plate-carrier and retrieve the Glock and TAC-holster.\n\n\"Our American colleagues have a saying: 'The price of peace is eternal vigilance'; that's never been more true than now; whether it's rogue nation-states or lone groups with a grudge; if we need to, we will respond, we will teach them that our borders and our people are inviolate and we will do anything to make sure it remains that way. We took an oath to defend our country and all that it stands for, and we'll do it any way we have to.\"\n\nGod I was glad they'd never recruited me; the thought of having to think and feel like that, the cynical outlook I'd have developed, the cavalier way they could dismiss a man's life turned me off completely. Family life and Georgy by my side, that was more than enough to make my life complete, I had no crusades left unfinished, and no battles left unfought; my war was over.\n\n*****\n\nA group of heavily-armed and masked soldiers with no insignias or squad badges trooped into the barn; I didn't know who they were, but I did know what they were; they had 'regiment', SAS, written all over them. Andy and Rex talked with their CO which left me out of the loop, so I took the opportunity to ask Wells just why he'd said I killed his brother. \n\nAccording to him, his younger brother, the intruder I'd clobbered and stashed in the hidden stairwell hadn't adapted well to life in prison, and two years into his sentence took his own life in his cell.\n\n\"And how is that my fault, exactly?\" I queried, and actually had to step back from the glare of hate he blasted at me.\n\n\"He was my little brother, I was supposed to look after him, you made sure he went to that place, he died there because of you. You killed him!\"\n\nI shook my head.\n\n\"Nope, not my circus not my monkey; you bunch of apes came to my house to rob and kill my family; you got what you deserved, and so what if your brother topped himself? His actions put him there, not mine. If he couldn't take the consequences he should have stayed home that day and we wouldn't be here now. You live by the sword you die by the sword. If anyone's to blame it's you; you came to my house to kill us, now you're paying for it. You're going away for good, two men are dead and another is crippled for life, and you gained nothing by it. Wherever they lock you up I hope you have just oodles of fun and a long, shitty life.\"\n\nTwo of the masked soldiers covered Bonzo with more of the CQB carbines Andy had brandished earlier, confirming their identity as SAS, while he cut Wells' bonds. They then dragged him to his feet, ignoring his begging them not to do this, his apologies, his promises to be good, his claims that he was in pain, spun him around and handcuffed him, jammed a ball-gag in his mouth, and yanked a black hood down over his head. When they drag/marched him outside, I saw two other men in custody, likewise cuffed and hooded, one on a stretcher, being bundled into an unmarked Bell 212 helicopter. Two black body-bags were also unceremoniously dumped aboard.\n\n\"What happens now, Rex?\" I asked, and he nodded at the grounded helicopter.\n\n\"Those idiots are going bye-bye after a medic's looked at their injuries. That's it for them, they'll no longer exist; it's what happens when you pick the wrong fight and lose. The bodies will probably be 'de-badged'; that means any possible way of identifying them will be removed and their remains weighted and dumped far out at sea. Other than that it's 'need to know' and you don't need to know, so change the subject, Will.\"\n\n*****\n\nThe helicopter took off, taking Kevin and his friends to their new lives, and I will admit to feeling a tiny twinge of compassion, but not much, and not for long; they'd come to kill me, they'd blamed me for their own failings and come for revenge and failed, and now they were going to suffer the consequences for years to come. I can't say I was sorry to have that worry out of my life.\n\nI went back into the barn with Andy and Rex, and we started packing up all the gear they'd brought out, stashing everything in anonymous fibreglass transit cases racked up in the back of Georgy's Land Rover. We worked quickly, in silence, no conversation was necessary, dawn was breaking and the kids would be around in a few minutes; they had already had their night disturbed by being taken into the cellar, they didn't need to see any of that stuff and start asking questions I wasn't quick enough to lie my way out of. \n\nI was busy packing the radio comms equipment when I looked up and Georgy was standing in the barn doorway. She absolutely took my breath away, limned as she was in the golden-pink dawn-light, slim and willowy and looking like a dryad, a fairytale wood-nymph in her gauzy white robe and modest nightgown, her hair unbound and billowing in a mass of ebony curls. She seemed to glow, her pale skin almost ethereally translucent in the pale golden light bathing her, almost as if the dawn light and moonbeams had conspired together to make the perfect woman, the personification of morning beauty and grace and show her to me. All I could do was stare and wonder at her beauty, and thank whatever listens to our prayers that she chose me at all.\n\n\"Will, is it over now, baby? I heard noises...gunshots, and there was a helicopter, what happened? Did they come here? Who were they?\"\n\nAndy nodded, so I handed my packing to him and gathered her in.\n\n\"Yes Georgy, they did come here; it was that same lot that from back before we got married. One of them committed suicide in prison and they blamed us, so they came looking for revenge. The people Rex and Andy work for sent in the cavalry, they bailed us out, and the short version is: they rounded them up and took them away; they're gone for good. They won't ever be coming back.\"\n\nI would give her the full story when there was no chance of the kids overhearing us, those same kids I could see watching us through the dining room windows. I didn't want them to know what I'd done, and maybe glorifying it, or worse, hating me for it; the full story would come for them when they were old enough to know the why's and wherefore's, and understand the choices we'd had to make this night.\n\n*****\n\nThe three of us were allowed to sleep undisturbed through the day while Megan and Aunt Kay kept the kids occupied. For the first time in a long, long time I slept deeply and well, no dreams of what we'd done, none of the nightmares and no revived bad memories of what had happened in the sandbox that I'd been plagued with when I'd first returned from that place. Georgy stayed with me, she'd been up all night distracting the children from what she was sure was happening and making the whole 'camping in the cellar' an adventure for them, and for the first time since this whole odyssey had begun, she'd slept completely peacefully, her mind finally at rest. When I woke, refreshed and fully at ease, it was to Georgy's quizzical stare.\n\n\"What really happened last night, Will?\" she murmured, \"It's just you and me here, and you've never lied to me before, don't start now, please.\"\n\nI sighed resignedly; I'd expected this moment to come soon, just not this soon. I'd had every intention of sharing with Georgy, I kept nothing from her, ever, and this was too big to try and sugar-coat and let time diminish, I'd just needed to do it in my own time, in my own way. She was right though; even lying by omission was still lying, and I loved her far too much to ever do that to her.\n\n\"Before I say anything, Georgy, please understand I never wanted any of this, I never went looking for this, and none of what happened was any of my doing. Can you understand that, baby?\" \n\nShe looked deeply into my eyes, holding my eyes as she searched for any hint of holding back or deception and after a few seconds of her very own probing 'Georgy-stare' nodded her head. \n\n\"I understand, Will; you know you can tell me everything and I won't judge you. You said it had to do with those three men who broke into the house back then, what did they want now, why did they come after us? Just tell me, Will, I'm ready.\"\n\nI took a deep breath and began.\n\n\"They were brothers, one of them couldn't cut it in prison and he killed himself. The other two blamed me, and they came back with some friends to kill me, and probably you and the kids too. Andy and Rex work for the government, one of the security agencies, and when they shot the house up, because they were there at the time, it was seen as an attack on the agency. The guys wanted us out of the firing line, somewhere safe that they could see any intruders coming from a long way away, and I brought us here. You know how we prepared for any eventuality, how the guys got me back in shape, well it paid-off last night.\"\n\nGeorgy cupped my face in her soft little hands, her face calm but shock and fear in her eyes at learning she and the kids were being targeted too.\n\n\"Go on, please baby, finish it...\" she murmured.\n\n\"They came last night, five of them, armed. We were ready for them, all that night-patrol stuff we've been doing finally paid off. Andy had some kit, stuff I've used before way back in the day, and we got into it with them out in the dark. Andy and Rex had night-scopes and they were able to talk me right up to them, just like we'd done back when we'd been brewed-up out in Helmand and had to dodge the Taliban find our way back to MOB Lashkar Gah. We captured three of them, Rex put two of them down, injured, and there was one trapped in their overturned jeep. The other two...\" I paused, not knowing how to say it.\n\n\"Go on, baby, it's alright...\" murmured Georgy.\n\n\"That gunfire you heard, that was me. I killed them, two of them, Georgy; they came to kill my family and I killed them, I'm so sorry, I didn't want to, they gave me no choice, it was so quick, if I could have...\" but she put her finger on my lip, silencing me. \n\n\"Stop it, Will, just stop it. Those men came to kill us; you were a soldier once, and you stopped them the only way you knew how. Don't ever apologise for keeping your family safe any way you could. Listen to yourself, baby; what you did is what any father would do to protect his children, it's what your father would have done for you, and what daddy would have done for me. We're safe because of you, remember that. Remember what daddy used to say? \"He who lives by the sword shall die by the sword\"? They got what they deserved for trying to harm my children. You did the right thing, my Soldier-Man, and I'm proud of you.\"\n\nI looked directly into her eyes and saw nothing but truth and love there, no drawing away from me, no blaming me for the blood on my hands, just trust, and faith in me, and love. I had truly struck the jackpot with this girl. Georgy smiled at me, and kissed me just once, a feather-light peck on the lips.\n\n\"Anyway, as I was trying to say before you got all facey-grabby on me, the people Rex and Andy work for, that helicopter you heard last night, they came in and cleaned-up, took the... them away, and the three who survived are in for a tough time a long way from anywhere, but they asked for it. We're officially off the hook, baby; it's over for good.\" \n\n\"So now the baddies have been dealt with, and we're not in any more danger, can I ask one question?\"\n\nI smiled and nodded, pretty certain I knew what she was going to ask.\n\n\"Can we go home now, Ty? We've been here all summer long, the kids have had the best summer-holiday they could ever have had, but the new school term starts week after next week, only ten days away, and the kids need to go back, well not so much Jerry, he's still pre-Reception, but definitely Edie and Jamie. I miss work, too; we should have all the Land Registry title-search and conveyancing on the two new project houses completed by now and the houses ready for us to get stuck into, and I was thinking I might get a small pony for Edie, maybe a Shetland, she keeps asking and I think she's ready. I miss my horses, too, Willie; I need a good, long horseback ramble, my thigh-muscles need some work. Let's go home, please?\"\n\nFrom what I could tell, her thighs felt just fine to me, just as sleek and firm and satiny as ever, and a little exploration soon uncovered other things that felt just as firm and juicy.\n\n\"Stop it Ty, not unless you mean it!\" she play-scolded me, so I ignored her; I had my hands on a delectably naked Georgy-Girl all of my own and I wasn't letting go...\n\n\"Quit it, Will, let me just go and lock the door at least...\" she giggled, squirming delightfully, so I reluctantly let go of her, and she slid out of bed in a luscious whirl of long, pale limbs and wild black hair, darting over to the door and flicking the catch before bounding back into bed with me. I caught her mid-air, rolling over with her so I could smother her with kisses and gentle tickles, making her giggle even as she kissed me back just as wildly.\n\n\"Are trying to do things to me, you naughty soldier-boy?\" she teased, pouting in a way I found totally irresistible, before once again tempting me with her silvery, tinkling giggle. I responded by slipping my hands down from her waist to hold, squeeze, and then pull apart, her tight little bottom-cheeks, something I know she likes.\n\n\"Oooohhh you bad man, Tyler Wilmot, naughty, naughty... do it again!\" she giggled, so I did, enjoying hearing her sigh as she ground against me.\n\n\"Eat me, Will; taste me and eat me...\" she murmured, urging me to do what I'd already had every intention of doing, so I kissed and licked my way down her body, enjoying the clean, sexy smell of her skin unmasked by soap or deodorant, just the fresh scent of clean skin. Georgy sighed and relaxed, quivering slightly as I worked my way down her body, swirling my tongue-tip in her sexy little navel before exploring further. Georgy trims but she doesn't denude, and the feel of my tongue-tip brushing through her soft curls is one of my greatest pleasures. Georgy stirred and murmured, soft, liquid sounds, as I swirled my tongue through the silky, lush forest of her Mons, before delving between the rich-tasting folds of her labia, making her start and gasp with pleasure.",
        "\"Oh God yes, Will...\" she murmured, twining her fingers in my hair, holding me against her as I feasted on her damp succulence, the taste and scent of her driving me mad with desire for her, until I pressed my tongue flat against the hard nub of her clitoris and sucked. Georgy thrust her mons hard against my probing mouth as she came, a spray of her sweet, tangy juices filling my mouth and coating my lips as she convulsed, her scream muffled by the pillow she held over her face. She shuddered again and again as her climax ripped through her, wracking her body and wrenching sobbing moans from her again and again.\n\nShe dropped back, her chest heaving and her face, neck, and shoulders flushed in the aftermath of her gigantic orgasm. I slid up next to her, and her arms snaked around me, pulling me close so she could kiss me some more.\n\n\"I taste nice, Soldier-man!\" she smiled, her eyes big and sparkling with unshed tears, and blurry in the haze of post-orgasmic languor, \"you just know I'll be wanting some more of that, Will! You do me so good, Mister Wilmot; Mrs. Wilmot requests the pleasure of a return bout, if you're up to it, hot-shot Soldier-Man!\" \n\nI fondled her taut little bottom and grinned as she sighed happily.\n\n\"But of course, milady; didn't I promise you every day and three times on Saturdays? I'm a Wilmot, we always keep our word!\"\n\nAs we kissed she fondled me, getting me ready, like I needed it; just being around her had me ready, and the scent of her hair, the scent of her skin combined with the sweet tang of her fresh summer sweat, the musk of her arousal, the taste of her lingering in my mouth, all these things were doing serious things to me. I wanted her so badly, and she knew what she wanted too, and so she slid on top of me, her knees parting so she sat astride me, before lifting up and fumbling me into position, and sinking down on me with a long, tremulous, satisfied sigh.\n\nI knew what I wanted to do with her, we'd done this dance so many times before but still, each time felt like a new experience; there was nothing jaded or same old-same old for me when it came to making love to my Georgy-Girl, and so it was then; as she sank down on me, so my hands slid around her tiny waist, before slipping down to hold and squeeze her delightfully taut cheeks, holding her against me as I made love to the love of my life. Her head sank down, her lustrous black hair forming a net around us as we kissed, our lips and tongues connecting even as our bodies did.\n\nI don't know how long we moved together, but even perfect pleasure has its limits, and so our movements grew faster, more frantic as our mutual arousal ramped ever higher, until:\n\n\"Oh God, I can't...I can't...again, oh God...again...yesss, yess, yesss, YESSS! YESS! GOOODDD, YEESSS!!\" she yelled as she climaxed again, taking me with her, milking me as I came in what felt like endless spurts, jet after hot jet of spunk, filling her to overflowing, on and on, as she quivered atop me, her pussy clenching and squeezing me dry.\n\nGeorgy collapsed bonelessly on top of me, her heart thudding against mine, which was going like a trip-hammer in perfect counterpoint to hers. We lay together, muscles quivering and twitching until the last surging echoes of our mutual climaxes ebbed and died away in us, our heartbeats slowed, and our breathing normalised. \n\nGeorgy finally raised her head to smile blearily at me.\n\n\"And that's just one reason I keep you around, Soldier-Man!\" she murmured, before laying her head back on my chest and dozing off literally before she'd finished speaking. \n\nI grinned, slowly slid her off me so as not to wake her, gathered her in, and tucked the bedclothes around her before I too fell asleep, secure in the knowledge our troubles, at least those involving revenge-fuelled, shaven-headed psycho's, were finally over.\n\n*****\n\nBreakfast next morning was interesting; the kids, after their usual 'jump on daddy's groin, it's time to wake him up' morning exercise sat in a quiet semi-circle, watching me carefully; obviously Jamie had worked out that it was about time to go home and prepped the other two, so they all sat there watching me like three little owls, unblinking and suspicious.\n\n\"Children, we've had a lovely summer, haven't we?\" prompted Georgy, getting nothing back but mistrustful looks and doubtful glances, \"but summer holidays are over now, and you have to go back to school...I know, I know...\" at the howls of protest.\n\n\"No, don' wanna school, like it here, there's fishies and wabbitses and moo-cows and sheeps!\" sobbed Edie, starting Jerry off too, while Jamie looked grim, but resigned, like he'd known what was coming but he still didn't have to like it. They stared imploringly at me, knowing I usually caved-in when they started on me, but this time I stuck to my guns; summer was over, and school was drawing near, and Georgy had me pinned with that eyebrow...\n\n\"Come on, guys, don't you miss being at home?\" I cajoled them, \"Edie, all your toys are there, and Jerry, your bike is there too, and don't you want to see your friends again? And Jamie, don't you want to see Ronnie, and Mikey, and Brian? I thought you guys wanted to explore the secret passages in the house?\" (Jamie was convinced a house as old as ours was riddled with secret passages; there weren't any, but he never stopped trying to find them anyway, and I didn't have the heart to tell him...)\n\nI could see the light of adventure kindle in his eyes as I reminded him of his quest, and I knew he was back on my side. Edie and Jerry would follow his lead, and we'd hopefully have an easy transition back to our real lives and our jobs and business.\n\nWith that settled and out of the way, Georgy packed the kids off to get all their clothes together so she could do a final wash and pack, and search under the beds and dressers for lost socks, Lego, toy cars, and storybooks, empty out all the closets and dressers, and tally up what food we had in the pantry and freezers, and what we were going to do with it. In the midst of this outbreak of domesticity I attempted to quietly sneak off to have a chin-wag with Andy and Rex before we got split up for the drive home, but she had other ideas entirely.\n\n\"Just you wait there, Wilmot, you and I have things to talk about!\" she grinned, pointing at the overstuffed armchair, \"Sit, Will, and stay there!\"\n\nWith that she bustled off into the kitchen, returning with a pair of steaming coffee mugs.\n\n\"Right, Will, we need to sort some things out, things to do with the house, the business, family, you know, fun stuff!\"\n\nI nodded, intrigued as to where she was going. She lounged back and looked at me over the top of her mug.\n\n\"First off, babe, the business is going to have to take a back-seat for me for a while, so when we get home, when we gear up to get those two houses moving, you'll have to get the best team you can put together and manage them by yourself because I'm not going to be available on-site at all; pretty soon I'll have something much, much more important to take care of, and you'll have to manage the kids, or at least help me, Aunt Kay, and Megan more...\"\n\nI cocked an eyebrow at her.\n\n\"What's more important than getting the kids settled back in and the business back on track?\" I asked, and she gave me her trademark 'Georgy' smile.\n\n\"Well I'm not sure yet if it's a boy or a girl, but it's definitely a lot more important than any old restoration business right now!\"\n\nMy head stopped dead right then as what she said slowly sank in and started to come together, until suddenly it all went off with a bang.\n\n\"What...when...are you...when...how...\" I stammered while she watched me floundering with her Georgy/mummy/grown-up smile, an indulgent expression that was coming to be more common these days when she spoke to me now that I thought about it...\n\n\"When is probably around Easter next year, I make it April fifteenth but the clinic back home will work it out better, 'when' is almost any time in July, you randy beast, and don't worry, I'm fine, three kids already so another one should be a doddle. I always wanted four children, I told you once, a long time ago, and I hope it's a girl so she can have Jerry as her big brother to look out for her, just like Edie's got Jamie. We'll work it out nearer the day, Will, but for now let's just get back home and get our lives back.\"\n\nEpilogue:\n\nSettling back into our lives and way of life was pretty much a bump-free doddle; SRG had kept the School Board and the local Education Committee firmly off our backs by invoking the Official Secrets Act, which effectively killed any interest in our sudden departure and any curiosity regarding the reasons behind it, and our business interests, left as they were in the hands of our legal team, had been humming along quite happily without us, so we were able to slot back in almost seamlessly. \n\nThe only one of the kids who had more than an inkling was Jamie, and I trusted him to be smart enough to keep his lip zipped. By the time Christmas rolled around, the smaller ones had completely forgotten what a tumultuous summer we'd had, the bullet damage to the sitting room Renaissance stained-glass windows and priceless Elizabethan walnut panelling had been invisibly patched and repaired, and no signs remained to show the house had recently been the target of an armed assault.\n\nAndy and Rex dropped by occasionally, as time and projects allowed, to visit with Georgy and me and spoil the kids outrageously, and Andy and Megan low-key rekindled their romance, but other than that, no visible memories of our traumatic summer remained to haunt us.\n\nGeorgy and I put together a trustworth, mind-reading team of craftsmen and specialist restorers and kept going our usual way, with me on-site with the team, and Georgy remaining at home watching the designs, costs, finishes, and standards; it was a model that worked through three pregnancies and had kept us in the black for years.\n\nAs before, we'd relied heavily on Mid-Georgian and High-Regency style and influences to dress and present the houses, with Georgy's own special eye for period detail picking out the things that stopped the houses being 'good enough' pastiches and instead elevated them to the authentic, 'Wow!' category. We accepted offers well in excess of 65% over asking price by bidders who were determined to live in the kind of style, elegance, and presence the houses projected, all because of Georgy's impeccable taste and flawless sense of period and presentation.\n\nThe baby was born Easter Sunday, the same week both houses were dressed and photographed for sale. Georgy presented me with a beautiful daughter, 7lbs of red-faced, screaming wonderfulness. Even just a few minutes old I could see her eerie resemblance to Georgy, her puff of glossy sable hair and those distinctive Lassiter grey eyes; my new baby girl was exactly what I'd always wanted, a miniature replica of Georgy to grace and bless the next generation, and I wouldn't have changed it for the world. Georgy smiled tiredly and brushed her lips across our newest child's pink little forehead.\n\n\"You make beautiful babies, Georgy-Girl!\" I grinned, thinking that, tired and wrung out as she was after nine hours of labour, she was still the most beautiful thing I'd ever seen.\n\n\"Her name's Eloise, Will,\" smiled Georgy sleepily, \"I want her to have a French name, for mummy, she can be 'Ellie'; can you hear it now? Both our girls, Edie and Ellie; I think mummy would like that.\"\n\nI gently swabbed her flushed, sweaty face with a cool Wet-Wipe and brushed a few errant strands of hair back from her face so I could study her all over again, my favourite pastime.\n\n\"You're right; I think mum would like it very much indeed. Go to sleep now Georgy-Girl, don't you worry about a thing, and when you wake up I'll still be here.\"\n\nAnd I was.\n\n*****\n\nFINIS."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother and sister",
        "incest",
        "love",
        "taboo",
        "revenge",
        "tyler and georgy",
        "escape and pursuit",
        "army buddies",
        "bonzo and jarhead"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-new-georgy-girl-ch-03-echoes"
}