{
    "title": "Speech and Debate Pt. 13",
    "pages": [
        "Hello Readers! Apologies that this chapter took a little longer than expected. As you can see, the chapters are actually getting longer and longer each time. This is the longest one yet! There are still more chapters on the way...and two spin off series coming as well.\n\nDISCLAIMER: The following fictional story deals with sex among males. If you are offended by such material, are too young, or reside in an area where it is not allowed, depart. Though not observed in this story, care enough about yourself and humankind to practice safe sex.\n\nThe author retains all rights. No reproductions or links to other sites are allowed without the author's consent.\n\n~D. A. M.~\n\n****************************************\n\nThe Great Outdoors: A Trip to the Falls\n\nby D A Mackey\n\n\n\nI will freely admit that I giggled like an immature child when Daniel parked the Jeep in front of a Dick's Sporting Goods mega store. I couldn't help it. I know it is just a name, but come on: Dick's? \n\nA store devoted to entirely stereotypically masculine pursuits like camping and fishing and hunting and they choose to name the place... Dick's. It's humorous at any age or maturity level. I don't care what you say, it is. \n\n\"Grow up, baby,\" Daniel chided me gently. \n\nBut even my manly muscle-bound boyfriend (or whatever label he fit at that point) couldn't completely hide his own smirking grin. \n\nDick's. \n\nHA!\n\nDaniel wore a sleeveless cut off t-shirt that showed off his well defined arms and shoulders and hinted at the mounding muscles of his chest. A pair of very loose fitting black basket ball shorts and white running shoes completed his casual ensemble. He seemed to glow a little in the morning sun, his Italian heritage already changing his skin tone to a deep bronze tan anyone would envy.\n\nAnyone who wasn't nearly translucently pale, like myself. My best hope was for a shade of red that would eventually fade into a slightly less reflective white. I never really \"tanned.\" I just dimmed a bit. \n\n\"You lead the way, babe,\" I said. \"I want to watch you walk.\"\n\nI patted his ass and watched it shake a bit beneath the faux silken shorts. I growled low in my throat and kissed him quickly on the cheek, glancing around to see if anyone had noticed my public display of affection. No one seemed to be looking at us so I repeated the pat on the other cheek.\n\n\"You're a perv. And I love you,\" Daniel smiled broadly and returned my little peck on the cheek.\n\nThe big boxy store was well lit with huge fluorescent lamps, a massive air circulation system and wide aisles stuffed to the brim with every imaginable outdoor item one could possibly think of. Well, if one wasn't naturally more inclined to a Victorian novel over a fishing rod, that is. \n\nDaniel and I strolled the aisles, up and down, chatting aimlessly about this and that. Daniel pushed the big neon orange shopping cart in front of him and I walked easily behind him. Every now and then, he would grab something from the shelf and toss it into the basket. I wasn't paying the slightest bit of attention to what he was collecting for us. I was much more focused on the boy doing the grabbing.\n\nHe was so sure of himself, so at his ease in that bastion of manliness and capitalism. There were maybe three women that I could see in the entire store; the rest of our fellow customers were big burly men in various types and styles of camouflage, complete with trucker caps and bushy unkempt beards. Peppered here and there I could see the tall, muscular country boys in their early 20's, the kind of guys that feature prominently in 1970's era gay porn. \n\nIn my well fitted jeans and tight white t-shirt, I was having flash backs to the first day of high school, when I realized that I was very different from most of the people around me. But Daniel didn't seem to notice. Didn't seem to care. \n\nHe rambled about nothing and everything that popped into his head. He asked about my Valedictorian speech, what I was wearing to graduation, if we should go to Ian's after-graduation party at his parents' lake house, wether I liked the great outdoors, if I'd ever been camping. \n\n(I had. I was a boy scout in my younger days until it became apparent that my interests lay more in the scouts themselves and not what they were trying to teach me. Hey, a lot of people have a thing for uniforms. Those little khaki short shorts were sexy. I apologize for nothing!)\n\nAlong the back wall, Daniel grabbed two pairs of water proof hiking boots and tossed them into the cart.\n\n\"Why do you need two pairs of boots for one weekend?\" I asked.\n\nDaniel just laughed to himself and continued to search the items on the wall, as if his coming response was par-for-the-course obvious.\n\n\"One pair for me, one pair for you, silly.\"\n\n\"You don't have to buy me anything, baby,\" I said, slightly perplexed. \"I can just wear my tennis shoes.\"\n\nDaniel nonchalantly waved me off with a flick of his wrist, never looking back at me. But I imagined I could picture the proud and content smile that he wore as he strolled lazily ahead of me. It made me melt a little bit inside. He enjoyed being able to do these types of things for me.\n\n\"Okay,\" I said quietly. \n\nI was smiling at Daniel's broad back, enjoying the way his wide shoulders and back tapered to his slim taut waist, the way his bubble butt glided smoothly beneath the mesh polyester of his shorts, ever hinting at the possibility of a glimpse of the bare skin it covered but never following through with the tease. \n\nSuddenly, I felt that familiar tingle between my shoulders, that sixth sense that Southern women like to say means \"someone is walking over your grave.\" Time traveling colloquialisms aside, I was sure that someone was watching me. \n\nI turned and saw a tall man with a big bushy beard staring at me. Imagine if Santa Claus had a brother who enjoyed shooting the flying reindeer with a double gauged shot gun. He was staring at me, his lips pursed into a tight line. He shook his head slightly, muttered something under his breath and returned his attention to the gloves he'd removed from a hook on the wall. \n\n\"Ignore him, baby,\" Daniel said from behind me. \n\nI hadn't heard him cease his pleasant chatter, but his palm on the small of my back snapped me back to reality. I turned from the bearded spectator and smiled at Daniel, nodding to let him know I was okay. Just a little shaken.\n\nThough I was on edge and on the lookout for danger for the remainder of our shopping excursion, Daniel continued to fill the cart with everything from backpacks to a massive tent with two rooms and an awning. \n\nTWO ROOMS? In a tent? \n\nI idly wondered what our fore fathers, who had hiked the Oregon trail in covered wagons with oxen and mules would have thought of a $ 350.00 tent. \n\nMary has dysentery. \n\nWould you like to ford the river?\n\nYou can only carry 2000 lbs.\n\nWould you like to purchase a 350 dollar tent that you will most likely only use once over the next year?\n\nBut Daniel didn't even blink when the cashier told him the total. (I won't repeat that number here, as it still gives me heart palpitations.) He handed her a shiny silver rectangle of plastic, which she swiped with what I was sure was envy in her eyes. Daniel just spent her entire monthly salary in the space of an hour without so much as a moments' hesitation. I smiled at her and tried to convey my thanks and apologies in my expression. \n\nWhat I was apologizing for, I had no idea. \n\nDaniel was excited. He seemed very much like me on the first day of school by the time we got home to his house and unloaded the haul. He bounced on his toes, a movement I was very approving of considering the way it made his calves tense and his butt bounce. We laid it all out in the back yard, arrayed so we could see it in all of its newly purchased glory.\n\n\"So,\" Daniel said, his hands on his hips, looking down and surveying his purchases, \"we should set up the tent and some of the other stuff so we can get you used to it.\" \n\nHis arm snaked around my waist and he pulled me tight to him. He kissed me on the gentle curve of my neck and I shivered a bit. I rested my hand on his ass and squeezed. It was becoming a natural reaction to his touch, and I loved that.\n\nHe was just so adorable and excited about all the camping gear and new outdoor accoutrement. I didn't have the heart to tell him that I'd been camping dozens of times with the Scouts and my family as well. He was obviously enjoying the rare opportunity to teach me something, after months of me being the \"smart one.\" \n\nHe had, of course, taught me much much more than he would ever know, changed my life in so many irrevocable and ultimately positive ways. But he was never one to take credit for his own amazingness. \n\n\"We'll probably be in some kind of camp ground, I'm sure,\" he said, \"but if we were going out on our own, remember to always pitch camp near water, on flat ground. Think about where the rain water might run off, ya know?\"\n\nI nodded and smiled at him, taking in everything he was saying even though I already knew it.\n\nIt only took us fifteen minutes to set up the massive tent Daniel had bought for us. \n\nThe dark green monstrosity was ten feet by ten feet with a huge zip up door, mesh lined windows at every side, and a second \"room\" that clipped to the ceiling poles and four rivets in the tarpoline floor. The entire thing smelled of plastic and chemicals, so Daniel unzipped the windows and let the late spring breeze flow through and wash away some of the \"new tent\" smell. \n\nDaniel sat down on the floor of the tent and patted the space beside him, motioning me to sit with him. I did and snuggled in to him. He leaned his head on my shoulder and sighed lightly.\n\n\"Sometimes, I wonder what it would be like to just give it all up. Go live in the woods somewhere a hundred miles from the nearest neighbor. Pull a Thoreau and go full tilt, 'On Walden Pond.' You ever think about that?\"\n\n\"Of course. All the time. I think everyone does at some point.\"\n\n\"Would you come with me?\"\n\nI wound my fingers through his and pulled them to my lips to lightly kiss the back of his hand.\n\n\"I wouldn't do it without you.\"\n\nWe sat like that for a while, watching the afternoon sunlight dance in and around the leaves of the massive oak trees, listening to his breathing lengthen and his body mold into mine.\n\n\"I love you so much,\" he whispered. \n\nI lay back and pulled him down to me, tilting his face up to mine and kissing him. He sighed into our kiss and snuggled into me.\n\n\"I love you too, Daniel.\"\n\nHe laid his head on my chest and put his arm over my torso, his palm flat over my heart, his firm body pressed along my side. I lazily ran my fingers through his hair and stared at the roof of our new tent. \n\nDaniel's Mamma woke us up for dinner several hours later. The sun was nearly below the horizon and twilight had replaced brightness, painted the sky with broad strokes in deep purples and lilacs. \n\nDaniel and I were still in the exact same position.\n\nThe next morning, if pre-sunrise can legitimately be called morning, Daniel and I parked the Jeep in the Senior parking lot at school. I was on my second travel mug of strong black coffee, thanks to Daniel's ever- prepared Mamma, and was just beginning to feel almost human. \n\nThere were six large white vans in a long line. Coach B and several parent volunteer chaperones were packing the various tents and bags into the back of the vehicles. Our classmates, all 55 of them, were milling about the parking lot, chatting and sipping red bulls or Starbucks to-go cups.\n\n\"Dude,\" Ian started, walking up to us, \"you guys are almost late. I called us a place in the second van. Hurry the fuck up.\"\n\nGordon and Tall Paul shuffled behind him like some kind of extras in a zombie movie: pale, grumpy, and distracted. \n\n\"How are you so damned perky?\" I growled at Ian, sipping the heavenly black liquid and letting it slowly course through my veins, feeling more alive with every passing moment.\n\nIan shrugged and smiled.\n\n\"Dunno. Just a morning person I guess.\"\n\n\"I hate you.\"\n\n\"Ditto,\" Gordon added, finally catching up to our little group.\n\nDaniel unloaded our gear and stacked it behind the second van, waiting to be packaged in the trunk. When he was finished, he placed an arm around my waist.\n\n\"He's super cute, but he can be a real bitch in the morning, guys. Give him an hour or two and he'll be back to his usually charming self.\"\n\nI scowled at him, but my anger faded when he kissed my neck gently and grabbed my hand to lead me to the van entrance.\n\n\"It's weird getting into one of these things and not be headed to an away game, right?\" Tall Paul offered as Ian hopped lightly, despite his bulk, into the van and headed towards the long back seat.\n\nI grumbled and nodded, pushing Paul up to sit next to Ian's massive body. Daniel pushed me forward gently and I groaned while I took my seat next to Paul. Daniel soon sat next to me along the window of the back row and patted my leg, letting his hand rest lightly on my thigh. He had dressed me in an old pair of his khaki shorts that morning so his skin made contact with mine and made me shiver a bit.\n\n\"Hands, boys,\" Paul teased. \"No touching until we get there.\"\n\n\"Fuck off, I'll touch him if I want to,\" Daniel shot back, not cruelly but in the playful banter I'd come to recognize as an integral part of the Jock Language.\n\nI turned and childishly stuck my tongue out at Paul. He snorted a laugh. \n\n\"Fine, fine,\" he said throwing his hands up in surrender. \n\n\"As you were, gentlemen.\"\n\nDaniel grabbed my hand and slipped his strong fingers between mine, squeezed tightly, and rested them on his lap.\n\n\"And where am I supposed to sit?\" Gordon drawled, even more so than usual. \n\nHe was not a morning person either. Ian patted the seat in front of us, indicating that Gordon was to take that open space in the second row.\n\n\"Sorry buddy, only room for four of us in the back. You sit here and I'll give you a shoulder massage.\" \n\nThat seemed to tickle him to no end and he giggled and squirmed, delighted. For someone with shoulders as broad as Ian's, a giggle and squirm meant that the rest of us were often bumped and prodded rather violently. \n\nI wanted to punch him. No one had the right to be that active and perky before the sun was above the horizon. No matter how many visible abdominals they may possess.\n\n\"Deal,\" Gordon said, climbing in and taking the seat. He shrugged his shoulders and readied himself for Ian's promised massage. \"Get to rubbing, ass hole.\"\n\nI was slumbering lightly on Daniel's shoulder before we even left the parking lot. I woke up about two hours later, about half way through the four hour trip. My coffee was cold and disgusting when I took a sip, but I listened contently as Daniel pointed out the sights, our caravan winding slowly towards our destination. \n\nIt was just reaching mid-morning when the vans were finally unpacked, turned around, and rumbling back towards campus, stranding us in the mountains for the weekend. Some of my female classmates watched the vans disappear around a bend in the gravel road as if they were watching their sweethearts march off to war in some bygone era. Some were blanched completely white, clutching their quilted purses to their chests with claw like, white-knuckled well-manicured fingers. I wondered how long those manicures would last up here.\n\nWho got their nails done before spending a weekend in the woods? \n\nAt least I didn't look like them. Or so I hoped. Tired and groggy, yes? Afraid for my life and jumping and squealing any time an insect came within three feet of me... thankfully, not. Instead of jumping about, I contented myself with staring death glares at the bugs and small woodland creatures, classmates included, who dared come within my sphere of influence. Remarkably, it seemed to work and I was left largely unmolested. Better for everyone involved if I was left alone until my caffeine had taken full effect.\n\nDaniel lugged all of our equipment down the marked path towards the camp ground, about 100 yards into the woods.\n\nThere was a large stone lined circular fire pit with wooden logs in a hexagonal seating area around it. The entire area in a 20 yard radius from the central stone fire pit was essentially flat, cleared of all brush and undergrowth, and dotted with tall pine trees that left plenty of open space for pitching individual tents.\n\n\"Ladies, to the right! Gentlemen, to the left!\" Coach B barked loudly as we began to ramble in and about the campground. He waved his thick arms to indicate which gender should head in which direction. Parent chaperones were staking their claims at regular intervals between the assembling small groups of students, making sure to pepper the adults evenly between us youngsters.\n\n\"Where are you gonna put down?\" Paul asked Daniel, as if it was the most common question upper middle class white teenagers asked on a daily basis. \n\n\"Head over there,\" Daniel said, jerking his head to the far left side of the available space. \n\nWe ended up on the outside edge of the grounds, right were the undergrowth started to reclaim the forrest floor. Daniel faced the doorway to the big tent so that we could see the fire pit. Ian took a place to our left, Paul to the right. Daniel pulled a small pup tent from one of the bags, a basic two person affair with no standing room, and put it directly in front of the entrance to the big green tent.\n\n\"What's that for?\" Ian asked. \"Aren't you two sharing the big one?\"\n\nI was wondering much the same thing, so I stood from unpacking and waited for Daniel to answer.\n\n\"Of course we are. But they don't have to know that.\" He jerked his head towards the nearest parent chaperone, dressed head to toe in designer cammo that had to cost more than my car. The designer label was stitched in thread of gold above the left breast; I couldn't help but shake my head in resigned disbelief.\n\n\"You actually brought a decoy tent?\" Gordon twittered while nailing in the ground stakes to his own small blue tent.\n\nI tried to stifle my smile but it was pointless. \n\nDaniel had thought far enough ahead as to bring along a secondary tent, granting us a little more space between our sanctuary and the rest of the camp. \n\nIt was sweet. And practical! \n\nWe stored our equipment and my unnecessary sleeping bag in the small tent. If you didn't stare too closely, it looked very much as if there was a teenaged boy ready to occupy the small space. And it left the vast majority of the big two room tent open for our use...whatever that might end up being. \n\nWhen all four domiciles were erected and complete, it did feel like a semi-isolated area all our own. \n\nThe decoy tent was our little buffer zone. Our big pavilion towered over the three smaller ones that surrounded it. I felt like a knight with his entourage of squires, set up for combat on some medieval battlefield. If there had been tarps and plastics and brightly dyed fabrics not found in nature during that particular epoch. \n\nKaty confidently sauntered towards our little gathering, picking her way past pine cones and small sticks as if she was walking a runway in Milan. Never mind that she wore tan suede hiking boots (with a small raised heel, I noticed. Where had she found semi high heeled hiking boots?!) and small short shorts. Imagine Elly-Mae Clampet goes camping, if Elly-Mae took semi annual shopping trips to Rodeo Drive with an American Express Black Card.\n\nI stared at her, a little confused.\n\n\"Katy?\" I asked, \"What are you doing here?\"\n\nShe arched an eyebrow at me and my stomach dropped. \n\nOld habits. \n\n\"If you must know, Coach B and my father had a little chat and came to a gentlemen's agreement that I should be able to join you guys despite being held back last year. Is that alright by you, Mr. Curious?\"",
        "I nodded and felt my face draining of all blood.\n\n\"Easy there, girl,\" Ian interjected. \"He was just asking is all.\"\n\nKaty's easy smile returned almost instantly and she flounced happily past me with a gentle pat on the shoulder.\n\n\"It's all good, boys,\" she chirped happily. \"You guys certainly lucked out, huh? The boys on the left girls on the right thing doesn't really apply to you at this point does it? You're lucky. Gonna be a dry weekend for the rest of us, so to speak. If any of those bitches over there were worth the effort, I'd be tempted to switch teams for the weekend myself.\"\n\n\"I'm afraid it doesn't quite work like that,\" Daniel informed her. \n\nShe shrugged.\n\n\"Look at me?\" \n\nShe did a little turn for us, arms wide out to her sides.\n\n\"You really think if I tried, I couldn't convince at least one of them over there to climb mount Katy?\"\n\nPaul and Gordon looked like they were going to explode, their eyes wide, jaws slack. I'll never understand the straight male obsession with the idea of lesbian interaction. Ian shook his head and smiled down at Katy like a proud older brother to his little sister.\n\n\"I'm sure you can get whatever you set your mind to,\" I offered, hoping the ego boost would go some distance towards making up for my first outburst.\n\nShe smiled at me and patted my cheek sweetly, if a little harder than she may have absolutely NEEDED to.\n\n\"Aren't you just the sweetest,\" she drawled with her best bedroom eyes. I could see how that look could be effective. Gender be damned. \"We're going hiking in an hour, apparently. See you boys soon!\"\n\nShe flitted away through the woods like some kind of fairy; a fairy with an impressive expense account.\n\n\"I kinda feel bad for the rest of the Upper School. That one is going to be a handful next year,\" Ian remarked, inclining his chin towards Katy's retreating back.\n\n\"Anything will be an improvement on Amy,\" Paul added.\n\n\"Amen to that,\" Gordon slurred, sounding a little more awake. I wished that my own liquid wake up aid would start to take effect. I still felt half asleep, despite the fresh air and change of scenery. \n\n\"Where is she, by the way?\" Daniel asked. \"I didn't see her in the parking lot when we left.\"\n\nOur group looked up from setting up our little area and searched the campground for any sign of our former social Queen. \n\nWe found her far on the opposite side of the camp, as much distance as possible between our oasis and hers while still remaining actually inside the designated area. Her blonde hair glistened like gold in the morning sunlight, pulled into a high ponytail. \n\nShe was trying to set up her tent on her own. People streamed passed her, going about their business and setting up their own areas, completely ignoring the struggling and alone Amy.\n\nShe looked flustered. I doubted she had ever had to do something like this on her own. She had always had a cadre of compatriots around her at all times for as long as I'd known her. She was isolated now. I know I shouldn't have cared, but my heart went out to her. I know what it was like to be invisible and walk through life like a ghost amongst the living. \n\n\"Should we go and help her?\" I asked quietly. \"Look at her. She's trying to use rocks to hold down the corners of her tent! Even I know more than that. She's gonna LITERALLY die or get eaten by a bear if someone doesn't help her, she's basically an INFANT!\"\n\nIan placed a hand on my shoulder and squeezed gently, halting my rising rant.\n\n\"You really are a great guy aren't you?\" he said respectfully. \"She treated you like garbage and you still worry about her. I don't think I would if I were you.\"\n\nDaniel's arm slid around my waist and he pulled me close to him. He pulled me down to him and kissed me lightly on my cheek.\n\n\"You are a great guy. But I don't think she's ready for that just yet. She'll be okay. See, Mrs. Swope is already there helping her out.\"\n\nThe middle aged parent chaperone had taken notice of Amy's struggle and was attempting to help her. Her daughter, however, refused to look directly at Amy and instead stood in a small group of three other girls who whispered behind their hands as they relished Amy's continued downfall. \n\n\"Come on, baby. Let's get ready for the hike okay?\" Daniel cajoled demurely, leading me gently towards our tent. \n\nThe new tent chemical smell was lessened from our airing out but by no means was it gone. Daniel lead me inside and zipped up the front flap. We were alone for the first time since arriving. Well, as alone as one can be when a millimeter thick sheet of polyester was all that separated us from the outside world.\n\nDaniel wrapped his arms around my waist and pulled my body close to his, pressing our hips together and tilting his head up to kiss me, long and passionately.\n\n\"Mmmm. I've been wanting to do that for hours now,\" he whispered.\n\n\"You can do it again if you want. I won't mind.\"\n\nHe kissed me again.\n\nMy heart leapt in my chest. I hugged his body closer to me, trying to pull him into me as much as possible. I was seriously contemplating skipping this hike and spending the time with Daniel in our little sanctuary. Maybe if we were really quiet they would forget about us and leave us behind.\n\n\"TEN MINUTES!\" Coach B bellowed from outside. \"At the fire pit in ten minutes folks! Chaperones keep an eye on your charges! TEN MINUTES!\"\n\nSo much for skipping the hike. \n\n\"We should get dressed babe,\" Daniel said, his fingers coming to the hem of my shirt. I instantly missed the feel of his arms around my waist, but only for a moment. He gently lifted the shirt over my head and dropped it to the floor. His placed his hands palm down on my chest and leaned in to kiss me again.\n\nHis kiss moved to the side of my neck, flowing slowly downward, across my bare collar bone. My head fell back and my eyes closed, letting the dappled green tinted sunlight dance behind my lids. He kissed down my chest, my abs, kneeling before me. His fingers slipped beneath my waistband and he lowered my pants and boxer briefs to the floor; I stepped out of them easily. \n\nHis kisses went lower, down my pelvis, brushing gently on the pale smooth skin of my hips and upper thighs. My fingers tangled into his black locks and I bit my lower lip to keep from sighing. \n\nMy cock started to swell and thicken, exposed now to the open mountain air. Daniel's soft lips came ever closer to my manhood, kissing at my trimmed pubes and the base of my cock.\n\n\"Fuck,\" I sighed, unable to stop it.\n\nDaniel kissed my hardening cock and looked up at me, his big brown eyes glimmering in the green- tinted sunlight like some kind of magical fire. \n\nHe opened his lips ever so slightly and lowered his mouth to lightly flick the tip of his tongue over the head of my cock, taking the small drop of crystal liquid onto his tongue, making sure I watched as that piece of me joined with him.\n\nHe rose gracefully from his crouch and kissed me softly, one hand on my cheek and the other finding its home on my exposed ass cheek. I ground myself into him and felt my passions rising. \n\n\"I bought something I think you will like. For me to wear, I mean,\" he whispered into me, breaking our kiss. \"You want to see it?\"\n\nIt took me a while to respond. I had to shake the hazy fog that always formed when Daniel and I touched, like a bubble that took shape around us and shut out the entire world and made everything else in existence seem far away and unimportant. Even time flowed differently in that bubble. What seemed like two seconds in the bubble could be hours in the real world. I was getting better at managing that. But he was just so damned...perfect.\n\n\"Hmm?\" I mumbled, before his question finally sank in, \"yes. \n\nSure. What did you get.\"\n\nDaniel smiled mischievously, kissed me quickly and bent to his backpack. When he stood he held a rather small square of khaki fabric that I assumed were supposed to be shorts.\n\n\"I went to the Boy Scout store and bought a pair of their little short shorts. I had to search for them forever; I think they've moved to the longer pairs of the green ones now, but I finally found these. I thought you might like them?\" \n\nHe let the question hang in the air for bit, an uncharacteristic hint of insecurity in his voice.\n\n\"Put them on,\" I said, my voice cracking and showing far too much excitement than I'd meant to.\n\nDaniel's shirt seemed to fly from his torso like magic. His shorts followed quickly and he stood in his jock strap, preparing to step into the little khaki shorts.\n\n\"Stop!\" I commanded. \n\nDaniel looked up at me, frozen with one leg raised. \n\n\"What?\"\n\n\"Just let me look at you for a minute,\" I said, finding it hard to catch my breath. I'd seen him naked hundreds of times before, but sometimes a change of scenery can make all the difference. He seemed to ooze a new kind of masculine energy that I hadn't felt before. The nearness of nature and our removal from civilization made him seem somehow more primal than I had ever noticed. It was a highly pleasing realization.\n\nDaniel stood straight and tightened his muscles for me, making his pecs bounce a bit. His eyes blazed with a wicked light that let me know we could start something right then and there that would leave us both breathless and exhausted for hours. \n\nIf we didn't have to meet our classmates in less than five minutes.\n\n\"You like what you see, huh?\" he teased me, doing a little turn to show me the curve of his spectacular ass, cupped and lifted by the thick white elastic of his jock. \n\nI nodded.\n\n\"Well, my dirty minded love, you are just going to have to wait.\"\n\n\"Do I have to?\" I whined petulantly.\n\nDaniel snorted a small laugh and leaned over to kiss me quickly.\n\n\"I promise I will make the wait worth your while, baby. Okay?\"\n\n\"Fine,\" I conceded. \"If I must. But I won't be happy about it.\"\n\nDaniel stepped into his little shorts and lifted them to his hips, fastening the bronze buttons. My jaw dropped. They hugged his legs tightly, straining over his thick thighs, coming down just to the middle of them. His ass looked like he was trying to shoplift two cantaloupes out of a grocery store in the back of his pants. \n\n\"I'll take that as a good sign.\"\n\n\"Yeah. Yeah, good sign,\" I breathily mummbled.\n\nDaniel tossed a pair of cargo shorts in my direction and a white tank top for each of us. He chose a pair of black bikini briefs for me to wear underneath. It took some doing to stuff my hard cock into the paltry cotton fabric, but soon enough my shaft was pressed along my hip to the best of my ability. \n\nDaniel kissed me and patted my ass playfully.\n\n\"Ready babe?\"\n\n\"Ready as I'll ever be.\"\n\nIan was right outside our door when he unzipped the flap. He had a grin on his face that went from ear to ear and he was obviously struggling not to laugh.\n\n\"First, those shorts are amazing, dude,\" he said to Daniel, who promptly punched him in the gut. \"And second, your tent casts some very interesting shadows. Like the worlds most erotic gay shadow puppet show. Where did you hide that monster cock of yours David?\"\n\nHe barked a laugh and doubled over in a fit of giggles. For my part, I blushed bright scarlet. \n\n\"Get your mind out of the gutter and come on. Everyone is already at the fire pit,\" Daniel admonished. \n\nCoach B was quite the outdoorsman, it seemed, and he had picked a trail for our first hike that would lead to what he said were some of the most spectacular views this area of the Blueridge had to offer. \n\nThe trail was not very wide, only allowed us to walk side by side in groups of two at the most, sometimes narrowing in sections so that I had to walk behind Daniel with Ian behind me. I didn't mind in the slightest. Those shorts he'd bought left very little to the imagination. \n\nIn fact, I had to fight my erection for the first hour of our hike.\n\nOur little group hung to the very back of the long line of our classmates. We chatted amiably about everything from the upcoming graduation to my Valedictorian speech and our plans for the summer. \n\nAround midday we reached an open space where the entire group rested on the fallen logs and ate the brown bag lunches that Coach B had prepared. Wooden trail signs pointed to the various directions we could go: Outlook Point, Blue Water Falls, Church Creek Mill Trail. \n\nI sat beside Daniel and ate my peanut butter and jelly sandwich happily, my thigh pressed into his. Ian joked about and showed off by dead lifting some boulders from the ground in an unnecessary display of his superior strength. As if the fact that his arms were bigger around than my chest wasn't enough to hammer that point home already. \n\nIt was after one of these displays that Ian noticed me staring in the direction of one of our classmates.\n\nHe sat alone on a log and hunched in on himself a bit. He stared about nervously, eyes darting back and forth as if expecting someone or something to come for him at any moment. \n\nGod, but I remembered that look. I hated that I remembered it so vividly. I'd lived with that look as my near permanent state of being for years until just a few months ago. His brain was going full force right now, expecting something to happen to him, something most likely bad. \n\nI knew him, of course. We were a small class, we all knew everyone. \n\nJustin was like me: on academic scholarship, very bright, intelligent and a loner. He was tall, about 6 feet, and somehow seemed to be both etherial and sturdy at the same time. With a head of strawberry blonde curls that hung nearly to his eyes in perfect ringlets, he looked like something from a fairy fantasy painting, as if he should have a pair of dragonfly wings sprouting between his shoulder blades. His skin was pale and dusted with freckles but not overly so; his eyes were wide and open and so brightly green as to be almost off putting. Even his black rimmed glasses did nothing to obscure the intense emerald hue. \n\n\"Justin!\" Ian called across the semi open space.\n\nJustin looked up, his bright green eyes going wide as dinner plates and his already pale skin draining even more.\n\nIan patted the open space on the log between us.\n\n\"Come join us, buddy.\"\n\nI watched the shock play across Justin's features, weighing the pros and cons of taking Ian up on his offer. Ian patted the log again.\n\n\"Come on, dude. We won't bite.\"\n\nJustin rose on obviously shaky legs and crossed the space to stand before us. He sank to the log between me and Ian. Every ligament in his legs was tensed and his spine was straight as an arrow.\n\n\"Hi,\" he said quietly in a pleasantly deep baritone voice.\n\n\"Hey,\" Daniel said from my other side. \"You having a good hike so far?\"\n\nJustin's eyes were still wide, but to his credit, he nodded and answered that he was, yes.\n\n\"You wanna hike with us?\" Ian asked abruptly and with a great deal of gusto.\n\nJustin's full mouth hung open a bit and he seemed at a loss for words.\n\n\"It's alright,\" I assured him with a gentle pat on his knee. \n\n\"Ian's great. I know what you are thinking right now, and you don't need to worry about it. You aren't going to be thrown off the side of the cliff or anything. Promise.\"\n\nJustin smiled at me, still a little nervous. He had a beautiful smile, perfectly straight teeth. I vaguely recalled that there had been a few years when poor Justin had been a victim of that most dreaded social malady: braces, complete with head gear. It looked like it had paid off.\n\n\"Totally,\" Ian said, throwing a huge arm around Justin's shoulder, \"you can be my hiking buddy, okay? Those two are glued at the hip, obviously,\" he indicated me and Daniel, \"and Paul and Gordon may as well be siamese twins.\"\n\n\"Asshole,\" Paul and Gordon said in tandem, proving Ian's point and making us all laugh. \n\nEven Justin, who relaxed visibly.\n\n\"Sure. I mean, if you don't mind?\"\n\n\"I insist,\" Ian responded.\n\nWhen our lunches were finished and our group was cleaned up and ready to return to the trail, Gordon pulled us to the side excitedly.\n\n\"I just asked Coach B if we could go on a side trail, ya know, explore a little,\" he informed us. \"He just rolled his eyes and turned his back. You know what that means. What he doesn't see he can't stop! Come on! Let's go to the Falls!\"\n\nIt didn't take our now expanded group long to decide that The Falls would be a much more interesting hike than remaining with the rest of the class. We busied ourselves with absolutely nothing while the rest of the class and the chaperones started up the trail to the lookout. \n\nCoach B even called the chaperone in charge of leading up the rear of the line up to talk to him at the head of the group, giving us ample opportunity to slip away.\n\nI would have to remember to thank the man for his tacit understanding. Who would have thought that I'd come to admire an athletics coach so highly?\n\nGordon led the way down the trail that lead to the falls. It sloped sharply downwards, much steeper and more difficult than the easy stroll the rest of our classmates were taking.\n\nPaul followed behind him with me and Daniel in the middle and Ian at the end, making sure that Justin didn't fall behind or feel left out. \n\nAt several points we had to jump from boulder to boulder, using each other to pull us from one place to another. It was fun to watch Justin fly like a rag doll over the small ravines and crash into Ian's muscled torso with a yelp. Ian smiled broadly each time, steadied our new companion and then continued on. Justin seemed to be in a state of perpetual blush, which only served to make him even more otherworldly.\n\nThe sound of moving water soon became clear. At first it was like a fly in the distance, only dimly registered, but with every step we took it grew louder and louder until it dominated the soundscape. \n\nWe rounded one giant boulder and suddenly there it was. The trail simply ceased at the stone lined bank of the river. One moment we were in the forrest and the next, at the river bank. It flowed quickly over large stones jutting from the surface, making small whirlpools and little white caps here and there. \n\nOff to the left was the object of the trail: the falls. They were about 40 feet tall, maybe more; and they were stunning. The water flowed over the rim of the higher bluff and crashed into the wide pool below, a placid swimming hole about 50 feet across.\n\n\"That's more like it!\" Ian exclaimed as he pushed past me and the rest of the crew, driving to the head of the line. \n\nAs he barreled past us he tore his t shirt over his head, kicking off his shoes and socks. In a flash, his fingers undid the button on his shorts and he pushed them to the ground. There he stood in all of his naked glory, back to the group, muscles rippling, caressed by the midday sun and the spray. He spread his arms wide and lifted his face to the sun to take it all in. Then promptly climbed to a massive boulder and dove head first into the dark swimming hole.\n\n\"HEY!\" we all shouted as one, all except for Justin who stood staring dumbstruck where Ian's naked flesh had disappeared beneath the surface.\n\nFor a breathless moment, we all stared at where Ian had disappeared. My brain was going crazy! What if he had hit his head on an hidden rock? You don't just jump without looking! He was built like a brick shit house and a Greek God, but that didn't make him ACTUALLY immortal.\n\nHis smiling face broke the surface some 30 feet out in the center of the pool and he raised his arms above his head with a characteristic whoop of excitement!\n\n\"Oh man! That's awesome! It's deep and the water feels great, you guys. What are you waiting for?\"\n\n\"You absolute jack ass! You could have been killed!\" I scolded. Before I could stop myself, I found my wrist backed to my waist, hip cocked, and one finger wagged right toward where Ian's head and shouldered bobbed above the water.",
        "\"Sorry Mom!\" Ian chided sarcastically, treading water. \"Come in! It feels amazing.\"\n\nI noticed my pose. \n\nYep. It's true even at that age. No matter how hard you try, you will eventually become your mother.\n\nIan leaned back and floated on the surface of the water, his nakedness now truly visible. His average cock was semi hard, sticking above the waters surface; the sunlight on his mounded torso coupled with the glistening wet skin made an impressive sight.\n\n\"Jesus,\" I heard Justin breathe behind me.\n\n\"Don't let him worry you, Bud. He does stupid stuff like that all the time.\" I clasped him on the shoulder and caught a glimpse of an interesting development from the corner of my eye. He was trying to hide it, but Justin's pants were definitely tenting out in front.\n\n\"And don't worry about that either,\" I said, nodding to his growing erection.\n\nJustin blushed and studied the stony riverbank intently. \n\n\"Alright, dumbass!\" Gordon called, rapidly adding his clothes to the haphazard pile that Ian had left in his wake. \n\nPaul was not far behind him. In seconds two more naked teen bodies slipped beneath the surface of the calm pool, followed by the sounds of splashing and boyish laughter.\n\n\"You coming, baby?\" Daniel asked, coming to check on me.\n\n\"You go ahead, I'll be there in just a second.\"\n\n\"Don't make me wait too long.\"\n\nHe kissed me quickly and then scampered off to join our friends, his clothing flying off him as he ran.\n\nI turned back to Justin and found him staring at me as if I'd suddenly grown a second head.\n\n\"Oh fuck,\" I said, suddenly realizing what he must be thinking right now. \"Sorry, dude. Totally forgot that you don't know about any of this.\"\n\n\"Ummm...,\" Justin squirmed. \n\n\"So, Daniel and I are kinda...together. A couple? Ya know? I hope that doesn't freak you out any?\"\n\n\"No!\" Justin squeaked quickly. \"No, no it's not that. I just....I mean I never suspected that...I mean, he's Daniel! And you two are?\"\n\n\"Yeah, I know the feeling. Sometimes I wonder if I'm dreaming myself. But there you have it.\"\n\nWe watched the four boys horsing around in the pool for a bit, the occasional flash of bare ass rising above the water as they fought and jockeyed for position against each other. \n\n\"Wow. Just...wow,\" Justin sighed, shaking his head and beginning to price it.\n\n\"They are great guys. Really. I never expected them to be. I mean you know what I mean being a....a nerd, like me. No offense.\"\n\n\"None taken. And it's not that...well not entirely.\"\n\n\"What's the matter then?\"\n\nJustin pointed to his crotch, indicating his now very obvious boner.\n\n\"So?\" I said, \"I've got one too. So do they.\"\n\nAs if he knew I needed his help, Daniel floated on his back in the pool for a moment, his uncut cock sticking straight out, hard as a rock above the surface, his full balls floating lazily between his legs. I indicated Daniel's condition to Justin as proof positive of my previous assertion.\n\n\"JUSTIN!\" Ian called from the water, turning from the horseplay to gaze at the two nerds still standing fully clothed on the riverbank. \"Come on dude! What are you waiting for?\"\n\nJustin looked to me, his fear and questions still fighting his obvious excitement for dominance over his features.\n\n\"Go on.\"\n\nJustin gathered himself visibly, sighed heavily, and then removed his shirt. His body was long and lean, similar to Paul's but somewhat less defined. His skin seemed to glow in the sunlight. Unless I missed my guess, I thought I saw Ian's eyes widen a little bit. Justin's shorts joined his shirt on the ground and to his credit, he didn't try to cover his erection. \n\nAnd he had no need to.\n\nHe outstripped everyone there except for me. And he came damned close to giving me a good run for my money. He looked to be about my length, only a little less thick, but still far and away bigger than any of the jocks who stared at him from the swimming hole.\n\n\"Holy shit!\" Ian gulped. \"Dude! What do they feed you nerds?! Maybe I should have read more as a child, or something. For fuck's sake, David, dude, he's almost as big as you!\"\n\nJustin turned to me and smirked a small smile, apparently growing a little more at ease with the entire situation. \n\nBeing hung like we were did go a long way in making that transition a smoother experience. He handed me his glasses, which I placed carefully on a rock on top of a pile of discarded clothes. With a final steadying breath, he dove from the rocks and surfaced quickly.\n\nBefore he had time to brush his red-gold curls back from his face, Ian's arms encircled him from behind and lifted him from the water for a moment, tossing him from side to side like a rag doll. Justin's long thick cock flopped against his hips as Ian jerked him around.\n\n\"Took you long enough, bud!\" He joked, mussing Justin's sodden curls and swimming lazily around him. \n\nI couldn't help but think of a lioness circling her prey. Justin had no idea what was coming for him.\n\n\"New for me is all,\" Justin admitted shyly.\n\nI smiled to myself and watched the five of them splashing contentedly in the water. Like the hyper organized guy I was raised to be, I collected the abandoned clothes and folded them neatly into piles on a large rock. I added my own clothes to the piles and stood on the diving rock for a moment. It was fun to watch a new reaction to seeing my cock for the first time. It stood out in front of me, hard and straight, bouncing slightly to my heartbeat. \n\nJustin's mouth hung open a little. \n\nI missed that. The jocks, at least those there at the moment, were already growing used to my size and girth. It was always a welcome ego boost. I dove into the water to join my friends, happy that they were my friends, that I finally had friends. I didn't want to lose that, not yet. I wasn't ready to face that. So I let the cool water wash away any fears for the future, what might come my way, and reveled in the moment.\n\nFor most of the distance across the swimming hole, I was able to stand flat footed on the smooth and semi-slimy river rocks that lined the bottom and have my head and shoulders above the surface. In the center of the pool, we discovered areas where the depth dropped off and we had to tread water to remain afloat.\n\nIt was heartening to see Justin begin to relax and splash back when the guys played around with him. He laughed and played and seemed to loosen up, easing into himself a bit, gaining a bit of the self confidence the jocks already had in spades. \n\nDaniel and I swam lazily, floating on our backs, our fingers entwined as we let the sun warm our skin, our cocks still hard and pointing towards the clear blue sky. It felt amazing to be so exposed, so vulnerable and yet so secure. Anyone could have walked by that trail and found six skinny dipping teenaged boys horsing around in the cool waters at the base of the waterfall. \n\nBut I didn't care. I was happy. Daniel's fingers in mine, that was all that mattered, the cool water making all worry seem pointless.\n\nWe had floated towards the waterfall, the spray raining down on our upturned faces. We stood and I felt his arms around my waist, on my ass cheeks, squeezing firmly and pressing his hard cock into my own beneath the water. \n\n\"Isn't kissing your boyfriend beneath a waterfall supposed to be some kind of fantasy?\" Daniel teased, wiping a strand of hair from my eyes.\n\n\"I don't know.\" I replied, \"Why doesn't my boyfriend kiss me and find out?\"\n\nHe smiled at me, that crooked half smile that still sent me shaking inside and out. His lips pressed to mine and he sucked the air from my lungs, long and slow. His tongue danced over mine, hot and wet, strong and forceful, contrasting so sharply with the cool spray of the waterfall that I thought it must turn to steam on my skin. \n\nI was so wrapped up in the electric shock his kiss sent down my spine that I didn't even notice his hand leave my firm ass until he grasped my hard cock in an underhanded grip.\n\n\"Ahhh,\" I moaned into our kiss, my head falling back, blinding myself with the sunlight. \n\nI regained my composure quickly and returned to kiss him fiercely, my fingers clawing at his skin as he slowly manipulated my cock beneath the water. \n\nOur kisses grew in intensity, faster and faster, keeping time with his increasing speed on my shaft. I slid my hand down the curve of his smooth ass, feeling the strength of the muscles tensing and releasing just beneath the surface. I pressed my middled finger to the valley between his cheeks and slid it between his mounds, feeling him relax and arch his lower back slightly. I pressed my finger tip to his puckered opening lightly and pushed.\n\n\"Oh god, baby,\" he moaned, breaking our kiss, and burying his stubbly chin in the crook of my neck. He kissed me lightly as he fought the pleasure I could bring him with just one finger. \"God I want to so badly, but the other guys? Won't that...\"\n\n\"What other guys?\" I teased. \n\nI of course knew they were still there, but the sounds of their splashing and horse play still echoed off the rocks. \"They aren't paying us any attention, baby.\"\n\nI pressed my finger tip inside his hole firmly, feeling him open for me and squeeze.\n\n\"Ahhhhh, oh god, yes...,\"\n\nHe wound his arms around my neck, letting go of his grip on my cock. I pressed inside him again, a little more firmly, grinding my cock against his and sinking into him up to my second knuckle. I felt his whole body shiver against me, a ripple that ran from his chest to his toes.\n\n\"Again,\" he moaned.\n\nI pressed my finger all the way inside.\n\n\"FUCK! Yes!\"\n\nDaniel suddenly turned his head this way and that, as if he was looking for something. He found it quickly.\n\n\"Over there. That rock. Come on.\"\n\nDaniel moaned when my finger left his hole but he walked with quick determination towards a large nearly flat rock that protruded from the surface of the water, about 15 feet from the edge of the falls. When we reached it, he turned and quickly lifted me by my hips and sat me down hard on the smooth cold surface of the boulder. \n\nThe water was shallower there, only coming to just below Daniel's belly button. Where he sat me on the boulder, I was completely out of the water, only my calves and below still dangling into the pool. My cock stood straight up, pointing right at the sky.\n\nDaniel grabbed my shaft in his strong grip and jerked me slowly, the water making his job a little easier.\n\n\"Can they see us?\" he asked, looking into my eyes as he gently stroked me, as if my answer to his question would determine what we would do next.\n\nI turned to see if I could see the other guys. I could, but just barely. \n\nThis section of the pool was semi-secluded by a large tree that had fallen at the edge, its branches providing a screen of sorts. I could make out our other four companions through the branches, but I had to focus to tell them apart.\n\n\"Only if they are looking for us,\" I said.\n\n\"How long do you think before they notice we've slipped away?\" Daniel raised an eyebrow as he bent forward and kissed the sensitive head of my cock, pressing it to his full pouted lips while starting straight at me.\n\nI immediately pressed out a drop of precum. \n\nDaniel knew just how intensely hot that view was for me: my cock in his fist, the head pressed to his kissing lips while his deep brown eyes begged me for more. And to top it off, from my elevated position, I could see straight down the gentle curve of his spine to the twin globes of perfection that seemed to float from the surface of the calm water like a gay man's Excalibur. He was bent at a 90 degree angle at the waist, leaning forward to lick and suck at my cock while I watched his bare ass wriggle back and forth, just partially visible above the water.\n\n\"Does it matter how long? Please baby?\" I pleaded with him.\n\nHe smirked at me, quirked one arched brow at me, opened his mouth and slowly took me inside him.\n\nI eased back onto my elbows as I felt myself slide into Daniel's throat. His tongue worked slowly and deliberately, mimicking the lazy haze of the afternoon sunlight. His mouth was hot and tight, sucking on my shaft with increasing pressure. His fingers still gripped the base of my cock and jerked me slowly while he bobbed down my length. He took me inside him until I felt my cock head press into the back of his throat. His other hand cupped and rolled my balls slowly, tugging from time to time.\n\nHe moaned around his full mouth and pressed more of me into his throat, opening easily. He'd gotten practiced at taking all of my length. I watched his ass wiggle and thrust on the surface of the pool, sending small ripples out all around him.\n\n\"Oh!\" a voice suddenly squeaked. \"Sorry, I ...I...I,\"\n\nJustin had swum around the fallen tree and come across our little show. \n\nI couldn't help but giggle thinking of just what Justin must have witnessed: Daniel's bubble butt in full view, his tight hole winking at him over the surface of the water, the back of his dark haired head slowly moving up and down on my long cock.\n\nDaniel pulled off of me and turned, holding my shaft firmly in his grip to find Justin's shocked face. The poor kid had gone through a lot today. I felt for him.\n\n\"Hey, bud. Don't worry! Okay. We should have waited. Didn't mean to freak you out,\" Daniel said, giving Justin his best charming smile. \n\nI watched that smile take effect on him, smoothing his shock and awe to a dumbfounded slack jawed blankness.\n\nAhhh, how well I knew that look. \n\nIan swam up beside Justin and quickly assessed the situation.\n\n\"Did they put on a little show for you, Bud?\" he asked to the still dazed new companion. \"They have a tendency to do that.\"\n\n\"Uhh, umm..., sorry, I just...\" Justin mumbled, trying to find words, any words. \n\n\"Didn't seem to upset you too bad, huh?\" Ian hinted, glancing down beneath the water towards Justin's crotch. \"Little Justin seems to like it.\"\n\nThat did the trick. \n\nJustin lost his dazed and confused look and went straight to mortified blushing in a heartbeat.\n\n\"Sorry!\"\n\n\"For what?\" Ian asked. \"I think it's kinda impressive.\"\n\nIan raised himself from the water a bit, standing to his full height, the water coming just to his waist. He broadened his chest and puffed himself out, his abs tightening and his massive chest dancing, erect nipples standing out like dark quarters on the broad planes.\n\nHe didn't wait for Justin to adjust and acclimate to Ian's display. It was DESIGNED to shock and awe, and it worked on Justin as it did on everyone else. \n\nIan reached across and grabbed Justin's hard length under the water.\n\nI thought the poor guy was going to pass out right there. His eyes fluttered closed and his mouth opened. His fingers shot forward and grabbed at Ian's massive forearm, digging in hard to the smooth hairless skin. I watched small ripples begin to form around my fellow nerd as Ian slowly jerked his cock beneath the surface.\n\n\"See? No need to worry. Shit dude, you have one hell of a cock.\"\n\nWhatever came our of Justin's mouth cannot be qualified as actual human speech. \n\n\"Come on.\"\n\nIan walked towards us, Justin's cock still in his fist, leading the poor boy by his shaft like a puppy on a leash. Justin plodded along behind him. Ian winked at me before he lifted Justin from the water as if he weighed no more than a sack of flour. Justin plopped down beside me on the flat rock and stared blankly before him.\n\nI put my hand on the small of his back, trying to shake him from the stupor so he could truly appreciate what was about to happen. I was shocked that Ian was doing this myself. I had sensed he was curious, but never expected he would be so...direct...in exploring that curiosity.\n\n\"Follow my lead dude,\" Daniel said to his friend with a wink, the two of them side by side in the water, between the open legs of two other guys.\n\n\"Oh, I think I'll take to this like a fish to water,\" Ian joked with a laugh.\n\nIn tandem, both jocks leaned forward and started to pleasure two nerd cocks on the shores of a river beneath a mountain waterfall.\n\n\"What the fuck is going on?\" I heard Justin whisper in utter confusion.\n\nI giggled a bit and rubbed the small of his back gently. He flinched a little at the contact.\n\n\"Just go with it. Relax. Feels good right?\"\n\nJustin's eyes fluttered and he moaned loudly.\n\n\"Oh, god yes. I've never....this is... I'm a... god, that feels...,\"\n\nHis brain was running in a million directions at once. But I caught his drift. \n\nI would have to ask him when his cock wasn't buried in Ian's throat and his brain was back inside his skull, but I was pretty sure that this was his first sexual experience of any kind. Ever. \n\nJustin was a virgin. \n\nHe would have some serious bragging rights for the rest of his life now: Ian was going to be his first. You could do worse. 99% of the rest of the world DID do worse, by default.\n\nDaniel worked my cock faster, using his hands and tongue to jerk and suck me at once. Ian mirrored him. I watched Justin's features change, watched the pleasure and intense shock play on his face. They seemed to be mirroring my own. \n\n\"Yeah, baby,\" I urged Daniel on, \"that feels amazing. Take it all...god, yes. Take my cock all the way.\"\n\nDaniel obliged and slowly pressed my cock deep into his throat until his nose rested on my pubes. I felt his muscles throbbing along my entire length. The tip of his tongue flicked at my balls in rapid motion.\n\n\"Oh FUCK!\" Justin screamed, watching my cock disappear inch by inch into Daniel's beautiful mouth. Without warning Ian yelped around Justin's cock and pulled back quickly. Ropes of Justin's bright white cum hit Ian full in the face, splashing into his smooth skin.\n\nBefore he had finished, Justin was apologizing profusely, repeating \"Sorry, I'm so sorry,\" over and over again. \n\nOn the other hand, watching Ian get a full load of teen boy juice plastered on his face was enough for me to spew a huge jet of precum down Daniel's throat. My love was used to it and swallowed my offering easily, never stopping his gentle work on me.\n\n\"Hey, hey! No worries!\" Ian tried to calm Justin, placing his big palm in the center of Justin's chest, \"I don't mind.\"\n\nHe licked his lips, tasting a little bit of Justin's seed.\n\n\"Mmm. You taste pretty good dude,\" Ian said with a wink. \"Come on, slide down, bud. It's fine, I promise.\" \n\nIan reached his arms towards Justin, urging him to slide from the wide flat rock and rejoin him in the water. Justin seemed unsure at first, but Ian crooked his fingers and smiled. Justin pushed himself off the rock and began to slide towards Ian's waiting arms. \n\nIan caught him easily and lifted him the rest of the way down, easing him back into the water slowly. He let Justin's body slide down his own torso, his still hard cock pressed between Ian's pecs and then down his abs until Justin was finally face to face with my massive friend.\n\n\"Your eyes are really pretty,\" Ian said, pushing a red-gold curl from Justin's forehead. \"Never seen eyes so green in all my life. Thanks for letting me do that, okay? You wanna watch something real fun?\"\n\nJustin nodded, obviously still stunned. Ian still had white streaks of cum across his face.\n\n\"Your face is,...I'm sorry I didn't know that I would.... So quickly, I mean. It just felt so....I'm so sorry,\" Justin mumbled.\n\nIan used a thick finger to wipe a glob of Justin's seed from his cheek. He brought it to his lips and sucked it clean.\n\n\"I don't mind. Watch how the real masters do it, okay? That was my first attempt, but these two have been fucking for months now. They can teach us a thing or two.\"\n\nDaniel had never ceased his working on my cock and I had tried to split my attention between the electric sparks he was forcing through my body and the burgeoning relationship that had just blossomed out of absolutely nowhere between Ian and Justin.",
        "But Daniel's patience with my fractured attention had come to an end. \n\nI felt his hand on my ankles. He lifted my legs from the water and bent my knees, placing the soles of my feet on the flat rock. At the same time he took all of my cock deep into his throat and tightened his muscles around me. \n\nWith my knees bent and Daniel placed below me on the rock, he had a direct eye level view of my opening. \n\nHe only gave me a knowing, mischievous glance up through his thick eyelashes. No other warning. His thick index finger suddenly invaded my hole in a single thrust and arched upward hard. He knew exactly where my spot was now and he pressed it over and over.\n\n\"Ahhhhh! Fuck! Oh, god. Oh, god!\" I screamed. \n\nMy arms lost the strength to hold myself up and I fell back to the smooth surface of the rock. My vision flashed to white. I had no choice but to stare straight at the sun high above. My eyes closed tightly against the blinding glare and the intense pleasure.\n\nDaniel drew my slick cock from his throat and used his free hand to jerk my cock, pulling it down between my legs so that it pointed straight up.\n\n\"Oh fuck yes, Baby. Finger my hole. Faster!\"\n\nI writhed against his finger. I tried to fuck myself against his hand but the rock was hard to move against. Daniel blasted in and out of me, faster and faster, his grip on my cock mirroring his work on my hole.\n\n\"You want me to fuck that tight ass?\" Daniel growled at me.\n\n\"Fuck my hole, oh god.\" I panted.\n\nHe added another finger and I screamed like a wild animal, my fists beat at the hard rock beneath me, my hips thrusting into the open air.\n\n\"Cum for me baby. Show them how it's done. Shoot that huge load for me.\"\n\nDaniels two fingers worked in and out, twisting and stretching my hole.\n\n\"I'm gonna...fuck baby...I can't..ahhh....I'm...\"\n\nI think I hit my head pretty hard on the rock as my orgasm overtook me. Daniel had pushed a third finger in and my body erupted. My neck lost all strength to help up my head, my blood pumped loudly in my ears, echoing inside my skull and drowning out even the sound of the waterfall crashing against the rocks only 15 feet away. I felt my balls pull up almost entirely inside my body as Daniel's fingertips pressed into my spot hard and long with intense pressure. \n\n\"Oh my god!\" \n\nI don't know who said that. It could have been me. Probably was. Also very possible that it was the assembled crowd who watched the first volley spew from my long thick member. I know that I felt at least three streams of heavy hot cum leave my cock before the first one actually splashed down onto my stomach. Daniel had aimed it straight into the air.\n\n\"Yeah baby. Fuck that's hot.\"\n\nI panted on the rock, unable to catch my breath or lift my head to face my friends. \n\nI felt myself slowly settling back into my body, the sun warming me and bringing me back to life after what felt like a long long time. I felt Daniel lift me from the rock, taking my entire limp body weight in his arms and sliding me into the water. The cold shock of it brought me fully back to my senses by the time my feet settled on the smooth rocks on the bottom.\n\n\"Wow,\" Justin sighed. \n\nHis cock was still hard, pointing towards his face, about four inches of it sticking above the water like an erotic snorkel.\n\nDaniel kissed me gently and held me close to his body, steadying me against his chest and taking some of my weight until my strength returned fully.\n\n\"That was awesome baby,\" I sighed contentedly, leaning my head on Daniel's shoulder. \"Ian, you still have cum on your face.\" \n\nIan grinned, scooped some water in his cupped hands, and washed his face quickly.\n\n\"Better?\"\n\nI nodded.\n\n\"Thanks again,\" Justin whispered. \n\nHe rose on his toes and brushed a quick peck against Ian's cheek, his lips just barely making contact before he pulled back and stared at the water. Ian's eyes went wide for an instant, but he recovered quickly.\n\nHe snaked his big muscled arm around Justin's slim waist and pulled him a little closer to his side. \n\nThey made quite the pair: the huge, built, tan, muscle god and the slim fairy like being he seemed to be protecting in his arms. \n\n\"Thank YOU, dude,\" he replied sincerely. \n\nI wasn't entirely sure, but I think Ian was actually blushing! At the very least, he was a little nervous. He couldn't meet Justin's gaze, but stared at the water instead. I hadn't seen him truly nervous around another person in a very long time. \n\n\"What time is it?\" Daniel asked to no on in particular.\n\nWe all shrugged.\n\n\"Probably getting close to the time to head back, I guess,\" Ian replied. \"We should dry off and start heading back soon.\"\n\nDaniel led the way, walking slowly around the shallow edge of the pool to where I'd left our clothes folded on the rocks. We all followed him. \n\nI couldn't help but ogle him from behind as he climbed towards the bank. The water streamed down his broad back and over his perfect ass. He ran his fingers through his hair and shook himself dry as much as he could. He found a wide, empty, sunny spot along the slowly flowing river and sat down easily. I sat beside him. Ian and Justin took seats beside us.\n\nI laid back, my still hard cock flopping against my stomach. Daniel cozied up next to me, his head on my chest and my arm over his shoulder, my palm flat on the trimmed chest hair. \n\nTo my surprise, Justin mirrored our position, snuggling up to Ian's bulk. His fingers traced Ian's smooth skin and ran over the bumps and mounds of his abs, getting ever closer to his shaved prick but never quite reaching for it. \n\n\"Don't you all look comfy cozy.\" Gordon slurred from above us. He stood with his back the sun, obscuring his face. Tall Paul stood next to him.\n\n\"Shut up and dry off. We gotta get back to camp soon.\"\n\nThe pair sat down and laid back on the other side of Daniel.\n\nMy fingers brushed against Daniel's nipple and I felt him shiver against my side.\n\n\"Sorry, babe.\" I said. \n\nI wasn't REALLY sorry. I flicked his nipple again.\n\n\"Mmmm. Do that again.\"\n\nI tweaked his hard nipple and he moaned, pressed his lips to my neck and kissed the sensitive skin.\n\n\"I didn't cum yet...\" Daniel whispered.\n\n\"Awwww,\" I cooed gently. \"Is someone feeling left out?\"\n\nI reached between his legs and found his cock ready for me. I grasped the smooth silky skin of his shaft and tugged gently, watching his foreskin cover his engorged head and then roll back again.\n\n\"Yes, baby,\" he whispered, \"jerk my cock for me.\"\n\nI leaned down and turned his face up to meet mine, kissing him gently. The sun on our bare skin felt amazing and life affirming. Daniel's cock throbbed in my grip as I worked him up and down.\n\n\"You didn't....you know...either, did you?\" Justin asked Ian quietly.\n\n\"You don't have to....ohhh,shit...\" Ian moaned. \n\nGood for Justin. \n\nIf the heavy breathing coming from beside me was any indication, he had worked up enough courage to take Ian's rock hard tool in his hand.\n\n\"Well if ya'll are gonna do it, might as well,\" Gordon said.\n\nThough Daniel's heavy breathing and ever increasing pants and moans into my ear were more than enough to spur me on, I would be lying if I said the other three cocks being worked on either side of me didn't help set the mood.\n\n\"Yeah baby...faster....I'm getting close,\" Daniel breathed.\n\n\"You want to shoot that hot load for me, babe?\" I teased. \n\n\"You want this hot cock buried in my tight nerd boy ass?\"\n\n\"Oh fuck, keep going.\"\n\n\"Ditto,\" Ian growled.\n\n\"Cum for me baby,\" I prodded, jerking Daniel's gorgeous cock faster and faster, working my thumb over his head and gathering his precum, smoothing it over his silkky tanned skin. \"Give me that load. I want it. Cum for me.\"\n\n\"Oh god...faster...don't stop...I'm gonna...oh god.\"\n\nI felt Daniel's cock expand in my grip, felt the thick vein that ran along the underside of his manhood throbbing. I shot forward and placed my lips around his hard cock head. With two more strokes, he unloaded into my mouth.\n\nI swallowed him as he shot, stream after stream of thick hot seed hitting my throat and coating my tongue.\n\n\"Oh holy fuck! You don't have to, Oh FUCK!\" Ian bellowed behind me.\n\nI turned my gaze, Daniel's cock still spewing it's last blasts onto my tongue, and saw that Justin had swallowed almost half of Ian's shaft and was taking his thick jizz in his mouth with natural ease. And obviously enjoying it. His cock throbbed and bobbed between his long lean thighs, leaking another thick load down his shaft without him even touching himself. \n\nWe lay there for several long minutes, letting the setting afternoon sunlight dry our skin, evaporating the cool droplets of river water and our cum, leaving wide streaks of chalky white on our thighs and chests like salt on the roads after a blizzard. \n\nWell, those of us who didn't have someone to give our loads too anyway. Paul and Gordon, Justin and I, all bore the marks of our pleasure. Daniel and Ian were free of the stains. I caught them both looking at the others, admiring our badges of orgasm while we re dressed in the neatly folded piles of clothes I'd organized before we began our aquatic adventure. \n\nThe trek back up to the place were the trail diverged and we'd climbed down to the falls was MUCH more difficult to journey on the uphill. \n\nI was a sweaty mess of limp hair and heaving chest, aching legs and back muscles when we finally crested the final hurdle nearly an hour later. More than a few times, Daniel had had to physically stop me from tumbling head over heels down the steep path when I lost my balance or misjudged a leap between two large rocks or roots. \n\nIan kept Justin directly in front of him. \n\nI may not be the most coordinated or athletically gifted person to have walked this green earth, but compared to Justin, I was an Olympian. He fell backwards into Ian's chest and waiting arms more times than I could count. \n\nNo one could be that clumsy! I got the feeling that he was feigning his missteps just to be rescued again and again by the wall of strength and stability that lumbered watchfully behind him. And his efforts were not going unpaid. Every time Ian managed to steady the tumbling nerd once more, set him back two feet on the ground, he would look down and smile warmly. And Justin's impossibly green eyes smiled back.\n\nOh yes, something was definitely brewing there. \n\nFinally, we were safely at the top, hands on our knees and attempting to catch our breaths. Even Ian sucked in giant gulps of air that made his chest appear almost obscenely large. I noticed the bulge in Justin's shorts as he watched the big lout from the corner of his eye. \n\nWe were discussing which direction to turn in order to find our hiking classmates, when a growing noise from off to the left, where the path lead to the lookout point, answered the question for us. \n\nQuickly, we moved a few yards back down the Falls Trail and edged behind a large rock. The first of the group we'd abandoned for the detour came into view on the flat ground above. \n\n\"No stopping! All downhill! Chaperones to the front! Almost there!\" Coach B barked. \n\nThe group was going at a very rapid clip, Coach B attempting to beat the setting sun. It still stood well above the tree line, but when it sank behind in a few short hours, darkness would fall quickly. \n\nWhen the final student scrambled past, our group bounded back up the Falls Trail and rejoined the tail end of the departing line. We waited for a moment to see if we'd been discovered. \n\nNo one turned or paid us the slightest mind. \n\nApparently, they didn't teach a class on chaperoning before they let parents sign up for the job. \n\nNever mind that, it all worked in our favor; we arrived back in camp and walked to our little enclave as if none of our afternoon detour had happened. Justin came with us, I was happy to see, urged by Ian's big hand on the willowy smaller boy's shoulder.\n\nWhile the rest of us dressed and readied ourselves to join the group around the campfire for roasted hot dogs and S'mores, as was traditional, Ian helped Justin disassemble his tent from a section about 30 yards away and reassemble it right next to his own, within the bounds of our little protective clique enclosure. \n\nIt really was a lovely evening. \n\nI was surrounded on all sides by friends, Daniel pressed close by me on the fallen log seat. How strange it was to think that if I'd never had spent that first night with my Daniel in Boston, all those weeks ago, if we'd never become what we'd become, I would still be here: but how different that would have been! I would be on the end of that log, closest to the chaperones, staring at the flames, lost in my own thoughts, trying to remain small and unnoticed, quiet and unassuming. \n\nInstead, know I smiled and laughed and let myself relax among people who had truly come to know me. \n\nJustin seemed to be lost in some similar daydreams. Every now and then his bright green eyes would go misty and wide, the leaping oranges and yellows of the fire pit playing across their glassy bright surface; in those moments he was far away, looking down on what was happening to him, as if it were a dream. I remembered that feeling. \n\nBy the time the Coach was ready to start telling the expected assortment of stereotypical camp fire ghost stories ( the man with the hook for the hand, etc.) Daniel scooted from the log at my side and shuffled between my thighs, his upper arms resting across my legs and his head falling back to my stomach. \n\nTwo or three sets of eyes widened when they noticed his move. \n\nI saw one or two of the girls turn their heads and begin the raise their eyebrows and mouth things to their closest companions. Katy noticed as well. She was on the far edge of the ring, nearly directly opposite from our group. She stood abruptly and moved to the outside edge of the circle, like she was \"It\" in our grade-level wide game of Duck-Duck-Goose. She started walking deliberately towards us, her head down. I watched her lips moving silently as she came nearer. At the same time, I saw the eyes of every person she passed suddenly go a little wider, a little rounder. Sometimes their mouths hung open just a bit. As she passed them, they shook it off and began to stare intently, anywhere but in our direction.\n\n\"That should do it. You're welcome boys!\" Katy sighed as if she'd just spent a tiring afternoon mowing the lawn and needed a refreshing glass of lemonade.\n\n\"What did you do to them?\" I asked. \"Are you a witch or something? Are they gonna be okay? Look at em! No one is even looking within five feet of us.\"\n\nKaty giggled.\n\n\"I simply told them all that the things I know about each and every one of them might accidentally find their way into the yearbook if they didn't shut the fuck up, grow the fuck up, and leave other people's business to themselves.\"\n\n\"You threatened them?\" Daniel asked, a little taken aback, but still lying comfortably between my legs. I let my fingers graze the sides of his temples, feeling his silky hair move beneath my fingertips.\n\n\"It's not a threat. Just a reminder. Simple reminder is all.\" \n\nDaniel raised his eyebrow at her.\n\n\"Hey! I can't help it. I have a certain position socially now, alright? There are rules and stuff. You can't expect me to become Little Miss Goody Two Shoes overnight, okay? Geeze! At least I'm using my powers of darkness for good, right?\"\n\nDaniel couldn't help but smile at that. Neither could I.\n\n\"We appreciate it, Katy,\" I confessed sincerely.\n\nWhatever she had done worked like a charm. No one paid us or our group any attention whatsoever. Not even when Coach B announced it was time to adjourn to our tents until morning.\n\nDaniel wasted zero time in removing layers of clothing as we walked. By the time we passed the buffer tent, where my bags were stored and I was supposedly spending this evening, he had a pile of shoes, socks, shirt, and belt; and he held up his unbuttoned and unzipped shorts with one hand. He tossed the entire contraption in the little tent. He didn't even both to zip it back up.\n\n\"Someone's in a hurry,\" I joked. \"Slow down, babes. There's no rush. We have all night.\"\n\nDaniel kicked his shorts free and stood in the doorway of our big green tent. He was in only his white jock strap. \n\nIt seemed to glow in the moonlight, beckoning to me. He reached casually between his thighs and cupped his full nuts in one large hand, squeezing them and lifting them towards me.\n\n\"Well, I can't argue with that!\" \n\nMy clothes joined his in the decoy tent. I, however, took the time to zip it up, just in case. No need to tempt fate or whatever furry critters roamed around at night.\n\nI joined Daniel in the entrance of the tent, my arms moving around his waist, feeling the soft hairs of his stomach and my cock already rising to meet what was sure to begin any moment.\n\n\"Hey,\" Ian interjected as my lips brushed across Daniel's cheek. \"Mind if we join you guys?\"\n\nHe asked the question sheepishly, eyes downcast. \n\nWhen he noticed the state of our undressing and obvious arousal, he quickly averted his eyes.\n\n\"Oh! Sorry. Didn't mean to...interrupt...Shit. Sorry, dudes.\"\n\nJustin held a rolled sleeping bag to his chest and shuffled nervously behind Ian. He looked as if he would bolt any moment.\n\n\"Why can't you use your own tent?\" Daniel asked, resting his hand on my ass and squeezing hard. My eyes bulged, but other than that, I think I did a good job of hiding my arousal.\n\n\"I...well, I didn't measure it first. It's too small. Our feet stick out...I mean...MY feet stick out the end.\"\n\n\"Dumbass,\" Daniel grumbled. \n\nHe sighed high and dramatically.\n\n\"Get in, then. But I make no promises that you aren't going to see things you might not want to. Our tent, our rules. You stay, you stay quiet. Understood?\"\n\nIan and Justin both nodded as their smiles broadened. \n\nDaniel jerked his head, and Justin and Ian scooted into the large tent as Daniel zipped us up inside for the evening. \n\nDaniel had zipped together two sleeping bags for us to make one giant two person arrangement. Even as big as it was, it only took up about a third of the overall interior space. Daniel climbed in the far corner, nearest the back wall and I scooted in beside him, laying facing towards the middle of the tent. I pulled his big arm over my chest and cuddled back into him, levered on one elbow, my head in my hand. Daniel kissed the nape of my neck and I wound my finger into his and held our entwined grip to my chest, feeling the rise and fall of it and the steady drumming of my heart through our grasp.\n\nJustin arranged his sleeping bag next to mine, towards the center. Ian placed his behind that, along the opposite wall. It was a nerd sandwich on Jock bread. So to speak. \n\nJustin lay on his side, facing me. The much broader and hulking form of Ian rose like a large hill behind him, mirroring Daniel and I. However, Ian did not touch the fairy like strawberry blonde. Just hovered behind him. Justin was tense, anticipating a touch, craving it, but scared it would come; just as frightened that it wouldn't.\n\nI winked at him reassuringly. \n\nHe smiled back and bit his lower lip. \n\nI nuzzled back into Daniel and felt his growing hardness press into my ass. I ground myself slowly into him, urging him on as my hand lead his to wander down my chest to my stomach and over the bulge in my tight underwear. \n\nMy eyes fluttered closed, but before they did I saw Justin's green glowing eyes, still so bright even in the dim verdant moonlight that filtered through the wall of the ten. They widened a bit and his full lips parted.\n\nDaniel ground himself into me. His fingers unwound from mine and continued to press into my skin. He worked them under the elastic of my waistband, inching closer and closer to my cock, over the trimmed pubes until he grasped me in his warm, rough fingers.",
        "\"Mmmm...yesss...,\" I moaned, thrusting myself into him. My arm came up to press his lips to the small of my neck. I turned so I was flat on my back and Daniel hovered above me. I laced my fingers behind his neck.\n\n\"Want to show these guys how it's really done?\" I teased him, pushing my now hard cock firmly into his vice grip. \n\nI pulled him down to kiss me. His mouth opened for me and in an instant the other boys disappeared. \n\nMy fingers grabbed for the muscles of Daniel's back, down his spine and to his ass. I felt it clench and unclench as he ground into my hips. I could just make out the growing wet spot as his precum began to seep through his underwear and mine, reaching my skin.\n\n\"Fuck this...I can't stand it...Can I kiss you, please?\" Ian suddenly blurted out from somewhere in the void that surrounded us.\n\nDaniel and I froze in the middle of our kiss. Our eyes both turned to look at our companions. Ian was raised on one massive arm. \n\nHe looked down at Justin, who lay flat on his back, his eyes wide, his mouth open and working, no sound coming out.\n\n\"Say something Justin,\" I whispered, trying to jumpstart the boy.\n\nJustin nodded. Just the tiniest movement of his head towards his chest.\n\nIan leaned in and kissed him long and slow. I heard the air leave Justin's lungs, saw him go rigid as a board before he gave in and melted into Ian's kiss. \n\nSlowly, as if on strings controlled from somewhere high above him, Justin's long arms floated from the floor and hooked behind Ian's thick neck. I doubt he actually could have pulled the muscle god in any direction, but Ian took the hint and sank onto Justin's lithe form slowly. \n\n\"That didn't take long...,\" Daniel whispered at my ear, his voice full of knowing mischief.\n\n\"Hush, you, \" I scolded and slapped him playfully on the ass. \"I think it's sweet.\"\n\nDaniel kissed me gently.\n\n\"Nothing like another couple to bring out the competitive side in me. Shall we?\"\n\nDaniel gracefully moved one of his hairy legs over me so that he was more fully on top of me.\n\n\"Let's get these pesky clothes off first,\" I giggled in anticipation. \n\nI pushed his jock below muscled ass and we both wiggled and maneuvered to remove our last remaining clothing. In the process, our double bag became mostly unzipped, the protective top layer flung back to reveal our nakedness to the rest of the tent.\n\nJustin and Ian didn't even notice. \n\nThe wet tongue sounds coming from beside us said that those two probably wouldn't notice if a Grizzly bear decided to take up residence with us for the night. Justin looked like he was trying to climb inside the large muscled boy, his lean lanky limbs and long fingers searching for somewhere, anywhere on his muscled form to grab on to.\n\nTheir separate sleeping bags were not helping the situation. \n\nIan soon took care of that obstacle with rather too much force than was called for. \n\nA great loud ripping noise tore through the tent as Ian yanked Justin's bag open with one hand. I heard a distinct tear. At the very least, the zipper was stripped. \n\nBut the result was that Justin's pale naked skin shone in the green light, his massive prick contained only by a pair of white cotton briefs. Ian looked down at him, watching his small chest rise and fall, the almost Elven proportions and long graceful lines of his body making the new boy seem positively otherworldly. Even his red-gold hair arranged on his pillow like something from a fantasy novel. \n\nJustin yelped when Ian growled low in his chest before he pushed his mouth to his fast and passionate. \n\nDaniel smiled and retuned to kissing me. \n\nI soon forgot the ball of limbs and lust that was writhing beside me as his lips pressed to my collar bones, sucking lightly, the tip of his tongue flicking gently over my skin.\n\nHe kept his grip on my cock and slowly stroked me as he worked down my chest. He took one nipple into his mouth and bit down hard and firm, his teeth making my chest rise from the floor as I pressed his head to my breast. My cock leaked in his hands. He rubbed the clear liquid into my shaft with one wide thumb.\n\nMy Daniel kissed and licked past my belly button and on the tender space where my hips joined. \n\n\"I want you to make love to me baby,\" he whispered. \n\nI watched his soft brown eyes, tinted green and glimmering in the moonlight, gaze up at me from between my legs for the second time that day. He kissed the base of my shaft.\n\n\"Will you fuck me tonight. Long and slow?\" \n\nHe kissed further up, pelting inch after inch of my sensitive underside with his gentle kisses.\n\n\"Push this big thick cock deep inside me? Let me feel you fill me up? Hmm?\"\n\nHis tongue flicked between his lips as he darted it over and around the slit of my cock, gathering some of my fluid to his lips and mixing it with his saliva.\n\n\"Please? Baby?\"\n\nHe opened his mouth and sucked gently on the very tip of my cock, his lips pursed around me, my cock outlined on their soft surface.\n\nI couldn't find words. These jocks could apparently reduce us nerd to speechlessness with ease. I took a page from Justin's playbook. \n\nI nodded.\n\nI saw Daniel's mouth curve up in a wicked half smile half smirk before his body became a blur. One moment he was resting on his knees between my legs and the next, the perfect globes of his ass were just centimeters from my face, his hot tight hole begging me to get him ready.\n\n\"Get me wet, baby. Ready for that huge cock...,\" Daniel moaned, turning to look at me from over his shoulder, pressing his ass back towards me as if daring me to make the next move.\n\nI grabbed at his waist and pulled him down onto me. My tongue found the sweet space between his cheeks and I flicked and circled him at lightning speed. Daniel thrust his hips back into my tongue, fucking himself against me face as I worked him in and out. His spine straightened and he grabbed my cock in both of his hands as if to steady himself. He jerked slowly and rocked back and forth against my onslaught. \n\nI gasped when I felt my cock disappear inside his throat. Daniel took me nearly to the base. I screamed in pleasure but never took my lips from his tight hole. I spread his cheeks as wide as I could between my hands and kissed and rimmed him while he sucked me deep inside.\n\nWe didn't realize how loud we were. \n\nDaniel had my cock firmly in his throat and my face was buried deep inside his muscular bubble butt when we noticed that the tent had gone silent. We turned our gaze a bit to find Justin's thick straight cock in Ian's grip, but both boys staring directly at us.\n\n\"Sorry,\" Justin murmured when he noticed that we had noticed them. \"Keep going.\"\n\nDaniel pulled off my cock. It shone slick and wet and glistening in the air.\n\n\"You liked that huh?\" Daniel asked. He moved one hand to his own cock and slowly stroked his hard uncut cock for them, squeezing a jet of precum from it to fall to my chest.\n\nIan nodded in answer to Daniel's question.\n\n\"Then you'll love this.\" Daniel grinned.\n\nHe flipped around just as fast as he'd done before, this time straddling my hips and facing me. He leaned over me on one arm, reached behind him with the other and grabbed my cock in a reverse grip.\n\nHe lead my cock to his hole and wiggled it over the surface. His eyes rolled back and he moaned, looking down at me.\n\n\"I'm so tight tonight baby. God, I want your cock inside me. Go slow okay?\"\n\nHe pressed his hips back and I felt my cock head pop inside him, squeezed tightly by his hot chute.\n\n\"Ohhh, fuck yes,\" he moaned. \n\nJustin and Ian both gasped. \n\nSlowly Daniel sank down my shaft, taking each thick inch deep into him. His head fell back and his eyes closed, his lip clenched between his teeth and he concentrated. I felt myself ensconced, held motionless firmly by him. I pressed past the hard ball of nerves inside him and watched him shiver when it did. He settled onto my hips and breathed deeply to adjust.\n\nWhen he stared down at me, his eyes were clouded with lust, that fullness and animal satisfaction that only comes from joining completely with the one you desire most. \n\n\"Make love to me, David,\" he quavered on shaky limbs. \"Oh god, you feel so good inside me. Fuck!\"\n\nHe fell forward, his torso collapsing onto mine, his face buried in the top of my shoulder. His hard cock, pressed between our stomachs, leaked a steady sticky sweetness onto our skins. \n\nSlowly at first, I thrust my hips up into Daniel, pushing him from the floor, feeling the weight of his lower body sink him even deeper onto my cock. \n\n\"Oh god, please...more,\" he whined into my neck, softly kissing my earlobe.\n\nI pulled back and thrust up more quickly. I felt his ass clench around me and spasm when I brushed his prostate.\n\n\"Again.\"\n\nIn and out.\n\nEach time I thrust back inside him, Daniel seemed to raise a little bit from his collapse onto my chest. As if each thrust of my cock ratcheted his spine straighter and straighter, like tightening a screw. \n\nIn short order he was straight upright again, his hands palm down on my chest as he rocked in complete synchronicity with my thrusts.\n\nHis uncut cock pointed to the roof, but he didn't touch himself. My fingers dug hard into his hips, pushing him upwards so I could get a deeper angle and then pulling him down to settles. My cock felt like I moved through silk and steel. His ass gripped and released in measured waves. \n\n\"Oh god. Fuck me baby. Fuck me!\" Daniel babbled over and over.\n\n\"Does it hurt?\" Ian mumbled meekly.\n\nDaniels eyes shot open and he stared off to his right. \n\nHis eyes were wild and harried with pleasure. He never stopped his rocking, never stopped the measured pull and tug on my shaft, milking my cock with his entire body. I tried to focus on Ian's question, but \n\nDaniel was making it very difficult.\n\n\"Does it look like it...ohhhh, my god.\" \n\nDaniel's fingers clenched on my chest as a wave overtook him. \n\nHe leaked a huge jet of precum onto my chest and growled like a panther as he rode the wave. My cock pulsed a twin stream of lubrication deep inside of him as well. \n\n\"It's amazing...,\" he finished. He leaned in to kiss me.\n\n\"Fuck,\" Ian mumbled. If Daniel moved like lightning, Ian moved like molasses. \n\nBut each move was deliberate and unstoppable. He rolled onto his back and easily scooped Justin up from the ground beside him, tossing him almost fully into the air. He landed on top of Ian, his small body not even coming close to covering the wide mass of muscle and bulk beneath him. Justin's hands looked almost like a dolls on the broad planes of his hairless chest.\n\nBefore Justin could adjust to the new position,Ian leaned forward and kissed him quickly.\n\nDaniel still undulated on top of me in slow rocking waves, but the thrusts were more shallow now. We were both engrossed in the pair beside us, but still unwilling to totally cease our own building passion.\n\n\"I want to...I mean...would you? For me?\" Ian mumbled.\n\nJustin hesitated. \n\nHe looked like a bird, his green eyes darting this way and that, trying to see if he could escape.\n\n\"You don't have to it you don't want to, I just...\"\n\n\"I want to!\" Justin blurted. \n\nHe leaned in to kiss Ian quickly on the lips. \n\nIan looked a little dazed but Justin continued.\n\n\"It's just...I haven't...I mean...I'm still a...virgin. I don't want to do it.....bad ya know? What if I'm...\"\n\nHe trailed of. \n\nIan raised a big hand to cup the side of his face.\n\n\"Hey. I am too. A virgin. With this. Don't worry though. If you want, I'm sure it will be...\"\n\n\"It will be wonderful,\" I finished for him.\n\nDaniel squeezed his muscles all over my cock, buried to the hilt inside him and I shivered, giving a little extra weight to my words. I knew of where I spoke.\n\n\"Just go slow okay?\" Ian asked.\n\nGently, he reached between himself and Justin and jerked Justin's ample cock a few times, using his precum to get him slick and wet. He guided Justin's cock head slowly to his ass. His knees raised slightly towards his chest, Justin's thin body almost becoming lost between his tree-trunk thighs.\n\nWell I certainly hadn't been expected THAT to be the starting point for Ian. \n\nMaybe I was still holding on to some of my own stereotyped, but if I'd been a betting man, I would have wagered the house with no reservations that Ian would have wanted to be the one to fuck Justin's high tight virgin ass. Apparently, Ian was more curious than I'd realized.\n\n\"Oh fuck...That's intense.\"\n\n\"Push out,\" Daniel offered. \n\nThough Ian could never know it, as he instructed his friend, Daniel's own body followed his advice, pushing out and squeezing me back in, sending jolts of electricity through my body as he rode me slowly. I inched ever closer towards release.\n\n\"Oh my god! Oh god...oh it's so big.\" Ian moaned. \n\nJustin's face was a mask of blankness, his eyes wide and staring his jaw slack. I couldn't see it, but I imagined his thick straight, milky complected cock, so close to my own in proportions, pushing ever deeper in Ian's virgin ass. \n\nThey both must have been on fire!\n\nAs if to prove me false, Ian's massive body shivered hard, convulsing on the ground. His eyes rolled back in his head and the breath left his body. His arms came above his head and he relaxed entirely into it.\n\n\"Keep going. Oh god, I never expected it to feel like.....Ahhhhh!\"\n\nIan's cock suddenly shot a huge stream of precum that landed on his chin.\n\n\"Oh god. Oh fucking god, what was that?\" Ian asked with a little panic in his tone, his eyes harried.\n\n\"That,\" Daniel informed his, slowly raising himself up along my pulsing shaft to mirror the experience for Ian, \"was your prostate.\" \n\nDaniel dragged my cock head over his own prostate and moaned loudly.\n\n\"Cool huh?\" he panted, beaming as if showing his friend something really cool he'd found in the woods. A discovery he couldn't wait to share with his best bud.\n\n\"Oh god. Oh god. Keep going, give me all of it. Oh fuck, your cock feels amazing. Oh god, please. Fuck it's so big. So full!\" Ian urged Justin on. Ian was apparently, a verbal bottom. It's never the one's you think, huh?\n\nJustin still seemed dazed but pushed the last few centimeters of his impressive manhood into Ian's willing ass.\n\n\"Justin,\" Daniel breathed, picking up the pace of his rocking a bit. \n\nJustin still stared blankly down at Ian beneath him, now impaled on his cock and squirming in unabashed delight.\n\n\"Justin! Hey buddy?\"\n\n\"Hm?\" Justin asked, his eyes coming to focus.\n\n\"Follow my pace okay? Out...\"\n\nDaniel rose off my hips, pulling himself out until just my cock head remained inside his tight ring, squeezed firmly.\n\n\"In...\"\n\nHe lowered himself down.\n\nJustin followed suit.\n\nIan lost his fucking mind. \n\nHe babbled incoherently on the ground so loudly we had to shush him. Still, he could not control his volume.\n\n\"Justin!\" Daniel hissed, \"make him shut up before someone hears us!\"\n\n\"How?!\" Justin nearly panicked.\n\nFor his credit, he still never stopped mirroring the in and out pace of Daniel's work on my cock, still slowly pounding his monster member in and out of Ian's now de-flowered ass.\n\n\"Figure it out!\"\n\nJustin leaned in to kiss Ian, hot and quick. \n\nIt had the desired effect. Justin soon found he was nearly crushed beneath Ian's strength. His legs wound around the smaller mans waist and pulled him down, his hands clasped tight on his bare ass, easily cupping each cheek with room to spare. But at least his moans were stifled to a mere grumble.\n\nDaniel kissed me as the two couples synched our rhythms. \n\n\"I want you to cum in my ass, baby,\" Daniel whispered in my ear. \"Give me that load okay? Fuck me till you cum!\"\n\nHe began to rock harder on my hips, his pace increasing.\n\nJustin kept up. The moans grew louder and louder.\n\n\"Oh yeah, baby,\" Daniel groaned, \"I'm getting so close. Fuck me baby. God I love you so much. Fuck me!\"\n\nFaster and faster we rocked.\n\nI felt myself growing closer. Daniel's ass began to spasm in waves, rocketing over my body in unknowable ripples. He clenched tight and held me there, not seeming able to control when he loosened again, just riding the high points until the finally built up and he crashed back down to relaxing.\n\n\"I'm gonna cum baby,\" I whispered, the sound rising through my clenching chest. \"Oh god I can't stop it.\"\n\n\"Cum in me, David.\"\n\nDaniel kissed me and his tongue worked into my mouth.\n\nThe first shot felt like I might actually do him some kind of internal damage. It splashed into him so hard, I felt it rebound and work down my shaft. Daniel clenched tightly, his eyes going wide.\n\nHe pulled back from our kiss, his spine straight, my chest the place his fingers dug in for support.\n\nHis cock jerked once, twice, his mouth open, his face raised to the unseen moon outside.\n\nSuddenly, long thin fingers appeared around his olive skin. They encircled him entirely, a ghostly ring around his darkly tanned cock. \n\nThey squeezed once and I only had a blink to process that Justin had reached over to finish Daniel off, before the first volley of his hot white cream splashed into my face. \n\nI jerked, but opened my mouth in time for Justin to aim Daniel's second blast at my tongue. \n\nIt hit me, hot and sweet, tasting just as I'd remembered my Daniel. My second and third gushed filled my lover to the brim. I felt my seed leaking from his ass, dripping down my now-tight balls and falling to the red plaid interior flannel of the sleeping baf.\n\n\"Fuck!\" Justin whispered, his fingers unwinding from Daniel's cock.\n\nI replaced them instantly with my own. \n\nI kept my mouth open to receive any more of Daniel's juices I could milk from him, swallowing everything he'd given me gratefully.\n\n\"I can't stop...I'm gonna,...\" Justin tried to speak through his clenched teeth, his eyes shut just as tight as he fought the inevitable.\n\n\"Do it. Inside. Please...\" Ian growled.\n\nJustin's eyes shot wide and I watched the bliss overtake Ian as his first lover poured himself deep inside.\n\nIt was as if each jet of Justin's thick cum coating his insides filled Ian's awe struck gaze more and more. His mouth hung open and a low harsh guttural sound grumbled from his chest.\n\nSuddenly, a wet splashing sound slammed into the tent wall above Ian's head. \n\nMicroseconds later, a second and third shot rang like the popping of gunfire or the splash of heavy rain.\n\nIan's cock twitched uncontrollably as he shot his load hand's free over his own head, eventually covering his face and finally coating his heaving chest. His nipples stood out now like snow covered mountains on the wide Savanna, glistening wetly with his orgasm.\n\nIan's body went limp beneath Justin's frozen thrust. His eyes rolled in the back of his head and he fell to the ground, each ligament loosening as he seemed to almost melt into the floor.\n\nJustin hovered on the verge of panic. \n\nSlowly, Ian's eyes fluttered and he returned to his senses.\n\n\"I...I...I....Oh god, I can't breathe...I...Oh dear god in heaven...\"\n\nHe panted harder than I could ever remember him panting from any of our workout sessions. It was rare for something to exhaust him or push him to his limits. Normally his limits seemed super human as it was. \n\nBut Justin had done it.\n\nDaniel slowly pulled himself off of my still sensitive cock, keeping my load buried tightly inside him. He arranged himself behind me agains, snuggling up tight and working his slick, cum covered cock between my bare ass cheeks. I wiggled into him, loving the feel of him there, even if we lacked the energy to flip flop at the moment.\n\nIan easily picked up Justin from between his legs, essentially bench pressing the smaller boy and laying him down beside him so that we once again formed a nerd sandwich on Jock bread, two couples facing each other. \n\nThis time, however, Ian's arm mirrored Daniels and rested on the gentle curve of Justin's slender hips, his thick finger tips just barely brushing the red-gold pubes that sheltered his softening prick, slick still with the load Ian, too, held inside him.",
        "\"But...I'm not gay...right?\" Justin wondered allowed, even as his fingers played with the hairless skin of Ian's taut forearm across his chest.\n\n\"Does it matter?\" Ian asked, kissing Justin's neck and snuggling up closer to him. Justin reacted without thought, cozying closer.\n\n\"Doesn't it?\"\n\n\"Did you enjoy yourself?\" Daniel asked demurely.\n\nJustin nodded, dipping his eyes to the tent floor but pushing his ass back into Ian's hips even further.\n\n\"Me too,\" Ian added.\n\n\"Then just enjoy it,\" I finished.\n\n\"Yeah,\" Ian echoed. \"So shush up and go to sleep, Nerd.\"\n\nHe teased Justin even as he hugged him tightly to his chest. Through the doubt and fear Justin must have just realized he faced, he couldn't help but smile.\n\nJust as quickly as the new pair had matched the speed of our lovemaking, so too did we each begin to mirror the lengthening breaths of the others. Justin cuddled close to Ian, Daniel pressed to my back, pulling me deeply into him.\n\nIn that little ten foot by ten foot space, our little sanctuary, there weren't any more barriers. Nothing separated the nerds from the jocks. Nothing kept one person from another. It was our little place now. A place where we were just people, people exploring the feelings and emotions that ruled our primal selves. I would be eternally grateful for small spaces like that.\n\nIn the darkness, as my eyes continued to adjust, I found Justin's bright green eyes staring into mine. The two of us looked at each other for a long while, each so like the other. I could vividly recall what it had felt like to be him, where he was right then. I hoped that he would be as half as lucky as I had been.\n\n\"Thanks,\" Justin mouthed silently at me.\n\nI nodded quietly and closed my eyes.\n\nDaniel kissed me softly on the back of my neck.\n\n\"I love you baby,\" he drawled slowly in my ear.\n\n\"I love you too.\"\n\nI fell asleep, in that safe little space, that little garden of Eden in the middle of a pinewood forrest. I fell asleep in the arms of a man I loved and who loved me in return. The crickets took up their orchestrations in the warm summer night. How different this all could have been, I thought as my mind floated off into dreamland. \n\nHow lucky I am.\n\nHow loved.\n\nHow....not alone.\n\nI would have to remember that. For always."
    ],
    "authorname": "DAMackey",
    "tags": [
        "gay",
        "top",
        "botom",
        "jock",
        "nerd",
        "outdoors",
        "waterfall",
        "tent",
        "camping",
        "highschool"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-13"
}