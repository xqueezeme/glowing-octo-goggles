{
    "title": "The Ravishing",
    "pages": [
        "Author's Note: My stories usually have a plot or what I fondly believe to be one. This one is a bit different - a cameo; the fictional equivalent of a quickie; a little teaser of ... well, just sex. I hope you enjoy it.\n\n*****\n\n\"Strip!\"\n\nThe word made her flinch, but she obeyed quietly, her head bowed, her trembling fingers undoing the buttons of her blouse. I was draped casually over the couch in a crisp white shirt, soft gray trousers and suede shoes. I knew, as did she, that her downcast eyes were a pretence, a frail attempt at a false modesty that both of us knew would melt at the barest touch, a faint brush of my lips on her flesh. I waited patiently until she was completely naked.\n\n\"Get on the bed!\" I ordered.\n\nShe rushed to obey. She lay on her back, her arms by her sides, her thighs slightly parted. I could sense that she wanted to spread them wider, to lay herself open to my eyes. The muscles of her inner thighs were rippling from the temptation. But she resisted the impulse. She didn't want to seem such a slut ... at least not so soon. I slid a pillow under her hips, widening the fork of her thighs. Her eyes told me all that I needed to know. She was grateful ... grateful that she had been splayed open, grateful that she could now offer herself without embarrassment, without seeming too greedy. \n\nFor a long moment, my eyes drank in the glorious vision laid out before me -- of her, naked, eager, impatient, her shoulder length hair spread out in a rich brown halo around her face ... a face so innocent, so empty of guile. The soft mounds of her breasts were heaving as her parted lips softly sucked in air. The flat planes of her stomach were fluttering and her long legs were twitching restlessly. As I looked down upon her, mesmerized by her youth and her beauty, greedily committing to memory every inch of her naked length, it seemed to me almost an act of sacrilege to take that sublime flesh. But I knew that it was what both of us wanted -- that delicious act of violation.\n\nWhen I lashed her wrists and her ankles to the bedposts, pulling her limbs taut, stretching her open in a wide X, she whimpered in anticipation of what was to come. \n\nBut then, what was to come? \n\nThe dark limpid pools of her eyes were fixed unwaveringly on me and I could almost see the wheels turn in her busy little mind. Were my fingers going to plunge into her hungry little hole? Or was my tongue going to explore her weeping depths? Or was my throbbing flesh going to soak itself in her juices? Well, I wasn't telling. She would find out soon enough.\n\nI dipped my forefinger into her slit and ran it from stem to stern, splitting her open. It was just the way I liked it ... wet and pink and glistening. As the tip of my finger drew tiny circles around the rim of her hole, she moaned and her hips arched off the sheets aching for penetration. Maybe that's what she thinks she's going to get -- my fingers sliding into her cunt, fucking her to a froth. I let her believe that for a while longer before I withdrew my finger and rubbed her juices into the dark brown circles of her nipples. They puckered, their hard little peaks aching for attention.\n\nI leaned down and drew her right nipple softly between my lips and licked it clean of her juices. She groaned at the ineffable delicacy of my tongue tasting her flesh. And then I began to gently chew her nipple. She whimpered and arched her back as much as her bonds would allow. I felt my cock twitch inside the prison of my trousers. There was something unbearably sweet, almost heartrending, about the way she quietly offered me her warm pliant flesh. By the time I did the same for her left nipple, her body was jerking in its bonds.\n\nI shifted downwards and slowly peeled open the petals of her cunt, exposing the soft inner flesh. I could see the hunger in her eyes and the suspense. She was wondering how she was going to be taken tonight. For a long moment, I gazed at the wet glistening flesh of her swollen cunt, at the thick outer lips and the delicate inner ones, at the fleshy stem of her clit and the pink serrated hole dripping with her juices. Soon, looking wasn't enough. I traced the rim of her hole with the fleshy pad of my forefinger until her hips began to surge hoping for more. I didn't want to disappoint her. I sank my finger with excruciating slowness into the wet, pulsing depths of her cunt.\n\nFor a few minutes, I merely curled my finger inside her warm passage, tickling its walls, learning its curves, stroking its flesh. When her moans, so full of yearning, told me that she needed more, I slid a second finger into that warm velvet glove. And then I began to fuck her willing flesh, not hard and fast, but slow and methodical like a beginner learning the keys of a grand piano.\n\nWhen her body began to writhe and her hips to rise off the pillow, I withdrew my fingers, wet and dripping, from her cunt. I waited for her to look at me and then drew my fingers, slick with her juices, between my lips and stripped them dry. She groaned at the dark eroticism of my fingers disappearing into my mouth and at the promise that the hungry circle of my lips held for her and for her flesh.\n\nI leaned down to lick her juices which had seeped into the crack of her ass. As my tongue drifted softly across the velvety skin of her bottom and that crease where it melts into her thighs, she shivered. I was so close to the heat radiating from her cunt that I could feel my hair drift across its surface tickling the rim of her opening. She could barely contain her growing excitement and her tight little ass was now bouncing on the pillow, its surface now damp with her juices.\n\nI suppressed a smile at her eagerness and dipped my lips into her cunt and began to suck ... the fleshy outer lips, the pink inner petals, the glistening flesh in the shadow between, all the tiny folds and crevices which had flowered open at the unexpected attention. When I had relearned the achingly familiar geography of her cunt, I buried my tongue in her hole. I was thirsty. I slurped the juices which had pooled there and which flowed afresh to coat the sinuous, flicking muscle of my tongue. I tongue fucked her softly ... tenderly ... for what must have seemed to her like eternity. I wanted to turn her mind into mush, into a thick soup of wanton lust; to make her forget what it was like ... ever ... not to have a soft intruder in her aching passage.\n\nHer poor clit had never felt so ignored. It was erect and quivering, its pink engorged tip peeking out of its fleshy hood. When I blew a gentle breath over the hungry stem, she moaned and her ass lifted off the sheets offering me the gift of her succulent flesh. I was sorely tempted ... for a fleeting second ... before I dipped lower to lick her juices off the soft brown rim of her anus. There was a lot to lick off and it was clearly going to take me a while. I ran my tongue slowly over the ridges and folds radiating from that core of darkness, gently teasing the sticky wetness from the tiny nooks and crannies between. She was now moaning steadily, half mad with lust. Just the way I wanted her.\n\nWhen I was done with her quivering nether hole which was pulsing its pleasure at that gentle ravishment, I resurfaced. I fixed my eyes on her face and reveled in the sudden pleasure that flooded it as my thumb and forefinger eased back completely the silken hood of her clit. Her hips were surging in her eagerness. She was going to be finished at last ... or so she thought. \n\nMy lips were close enough to warm her aching nub with my breath. When my tongue emerged from the soft oval of my mouth, she moaned, her lips quivering with anticipation and need. They almost touched ... my inquisitive tongue and her hungry clit. They were so close that the air seemed to snap and crackle between their soft trembling tips. Or was it just my aching, screaming need for her that made my tongue tingle?\n\nWhen I abandoned her clit without the consolation of a single lick, she made little sounds of distress in the back of her throat. She was too far gone to voice her anguish in words. I held her eyes with mine, savoring the desperate plea in their dark stormy depths. Too soon, my pet, I whispered, way too soon. \n\nWhen she felt the cold of the metal against her puckered flesh, her eyes widened in surprise and she gasped. She glanced down quickly at the silver orb that I was rolling gently over her swollen nipple. It was glinting wickedly in the light. The light pressure of my fingers on the orb flattened the engorged surface of her sensitive peaks. As I kneaded them gently, she moaned. I rolled the silver egg down the slope of her breast, over the curve of her ribs and along the crease of her stomach. By the time it dipped into her navel and then slid over the soft flesh of her mound, she was shivering with anticipation. \n\nHer lips were already parted and I had no trouble sliding the metal toy into the valley between them. I rolled it over and over in her folds, soaking its surface in her juices. It came off her sopping flesh with a wet squelch, thick ribbons of her cream dripping from its surface to form a tantalizing web in which I swear my soul was trapped. Finally, I nudged her liquid opening with its rounded tip. Her eyes widened as she watched the silver egg stretch open the mouth of her cunt and slip into her tight passage. I gently pushed with my fingers until it disappeared and the lips of her hungry little hole closed around its slick surface. I had it where I wanted it, poised snugly against that knot of nerves and muscle on the wall of her cunt that I knew so well. It was just waiting to be awakened.\n\nWhen I got up from the bed and folded myself into the chair that I had placed at its foot, she looked at me questioningly. I glanced down at the small rectangular panel in my hands. It had a switch and eight buttons -- numbered from 1 to 8. I threw the switch and pressed 2. \n\nThe silver egg came alive in her cunt. She drew in a sharp breath as the egg began to vibrate gently, massaging the walls of her pussy. The intensity was low. I was going to let her build up -- from a warm sense of well being ... to mild arousal ... to aching need ... to screaming, shaking lust -- until she was a wild untamed animal in my bed. But that was some time away.\n\nWhen her hips began bouncing on the pillow as she sought more stimulation, I pressed 4. \n\nHer body jerked upwards at the sharp rise in intensity, the ripe mounds of her breasts wobbling as she shook in the storm of her need. She looked delicious. I watched impassively as her body began to scale the curve of its arousal and small mewling sounds began to leak from her lips. She knew better than to beg. She knew that would merely awaken the devil in me, that it would merely tempt me to make her hunger and to ache until her mind grayed out from stimulation that she could no longer endure without release.\n\nI was pleased by her hunger and her restraint. I pressed 6. \n\nHer body stretched taut, struggling to come to terms with this terrible ... delightful ... alien object dancing in her flesh. Her juices were leaking around it and dribbling out of her cunt to pool in the crease of her ass. And then suddenly, while her body was jerking like a marionette gone mad, she saw me get up to leave and panic bubbled from her throat.\n\n\"Where are you going?\" she moaned. \n\n\"Oh, just to fix myself a drink,\" I replied casually, \"would you like one?\" \n\nShe shook her head and looked at me as though I had taken leave of my senses. When I reached the door, I half turned and tossed the words at her over my shoulder almost as an afterthought, \"Don't you dare cum while I'm gone.\"\n\nI knew that was wicked. I knew that her first instinct would be clench her muscles in an effort not to cum. Big mistake ... when you have a twitching, throbbing metal egg in your cunt. I made my drink with practiced efficiency. I didn't want to hurry, but I also knew that I couldn't take too long about it.\n\nAs I leaned on the doorframe and looked into her stricken eyes, I knew that my little ruse had worked. My baby had clenched her tight little pussy over that thrumming orb and gone crazy. I flicked the remote out of my pocket and switched it off. She was breathing in ragged gasps. I sat beside her as I sipped my drink slowly, meditatively. \n\n\"Would you like a sip?\" I asked. \n\nShe nodded, her lips too dry to form the words. I gently placed a hand behind her head to lift her up and placed the rim of the glass against her lips. I watched as the amber liquid seeped into her mouth. I watched her throat rise and fall as she swallowed. \n\nI lowered her head to the sheets, placed the glass on the bedside table and pressed 8.\n\nHer body rose in a long liquid arc as the egg exploded into shimmering throbbing life inside her cunt. And then she began to beg. My little baby could no longer stop herself.\n\n\"Please ...,\" she gasped in a strangled voice. \n\n\"Please what, honey?\" I asked quietly. \n\n\"Please ... finish me.\"\n\nHer cunt was splayed open like a hothouse flower, the pink stem of her clit hard and throbbing, free of its thick fleshy hood. I knew that all it would take was a long wet lick on that trembling nub or a soft, gentle stroke with the pad of my thumb. Perhaps even my tongue washing over one hard puckered nipple would be enough. I decided to ask her what she wanted.\n\n\"What would you like, my pet? Would you like me to suck your hungry little clit into my mouth or do you want my fingers to pet you, my little kitten?\"\n\n\"Suck me ... suck me,\" she moaned, her broken voice singing the anthem of her desire. \n\nI won't deny that I was tempted, but I suddenly decided that I wanted to watch her face as she came. \n\n\"No ... I don't think so,\" I whispered, turning away. \n\nHer lips split in a wail that was other worldly, hunger congealed, and her head rolled back, laying bare the soft expanse of her throat.\n\nShe didn't see the silver bullet in my hand. She didn't hear it come to throbbing life. But she felt it ... Oh, God, she felt it ... as it kissed her clit and trapped her aching flesh against the dancing egg in her cunt. Her eyes snapped open and she screamed as the pleasure took her and her body whipped on the sheets.\n\nThere is nothing more beautiful, I thought, than a woman flailing in silken bonds, trying to wrench herself free as the waves of her orgasm washed over her body. And there is nothing more erotic than fucking her afterwards, while the muscles of her cunt are still fluttering like the wings of a baby bird taking flight.\n\nBut before I ravished her bound helpless body, there was something else I wanted to do. I lifted away the silver bullet which was still shuddering against her clit and watched her shiver as the cool air in the room tickled her sensitive stem. Wouldn't do to let her catch her death of cold. If her flesh needed warming, I would be happy to help. I bent down and gently placed the flat of my tongue against the length of her swollen nub. It was like sticking my tongue in the mains. The vibrations of the egg buried in her cunt ripped through her flesh, through the lightning conductor of her clit and tickled the slick surface of my supple muscle as I tasted her. I held still for a moment allowing the flavor of her juices to explode on my taste buds and then I began to lick. There's nothing that I enjoy more than listening to the music of her moans. And tonight she was going to sing for me ... for a very long time.\n\n*****"
    ],
    "authorname": "fantasy123",
    "tags": [
        "light bondage",
        "vibrating egg",
        "oral sex",
        "fingerfucking",
        "control"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-ravishing"
}