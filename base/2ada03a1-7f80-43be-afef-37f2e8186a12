{
    "title": "A Long Time Coming Ch. 04",
    "pages": [
        "Alex was taking Jade to The Grove for their first official date. Neither of them had been out on the town since meeting at the very same place. Although they spent as much time as they could together, they agreed to slow things down. Jade needed the time to get accustomed to having Alex in her life without the distraction of sex, not that it was easy for either of them. Briana was spending the weekend at Judy's. Now Jade was ready to resume a more intimate relationship with Alex. \n\nShe thought long and hard about what to wear and settled on something simple; a short form fitting emerald green dress. It showed off her legs to perfection. The dress had thin shoulder straps and a scooped neckline that showed only a hint of the top of breasts. With pearl accessories, she was set. Alex wore dark dress slacks, a dress shirt and a sports jacket.\n\nThere was already a substantial crowd when they entered the club. By twelve thirty the place would be packed. Alex hoped to be on his way home with Jade shortly after that. \n\nHe and Jade mingled a bit, stopping to talk to people Alex knew and then moving on. They danced to a few slow tunes and generally acted like a couple in love. It was just shy of twelve O'clock when they ran into Cameron and his date, Lauren. \n\nComing up behind Alex, Cameron tapped his brother on the shoulder.\n\n\"Hey Brother, how's it going?\" he inquired with a wicked smirk when he saw Jade.\n\n\"It's going great,\" Alex answered before introducing Jade to Lauren. \n\n\"A pleasure to see you again, Jade,\" Cameron said.\n\n\"Nice seeing you again too, Cam,\" she replied fondly, noticing how tightly his date was clinging to him. \n\n\"Have you known each other long?\" Lauren asked Cameron, surprised at Jade's familiarity with him.\n\n\"I met Jade at my parents; she's Mom's assistant,\" Cameron explained.\n\n\"You haven't run away,\" he said to Jade, \"so I assume you're enjoying the work. Mom's a sweetheart, but she can be a bit of a dragon when something isn't done to her liking.\"\n\n\"I love working for her. She's a little intimating at times, but we seem to work well together. So, no sign of the dragon yet,\" Jade teased.\n\nCameron chuckled. \"That's great.\"\n\n\"How long are you going to be here?\" Alex interjected. \n\n\"We'll be around for another hour and then we're calling it a night,\" Cameron said. \n\n\"By the way, Mom and Dad are here,\" he threw out, grinning at Alex before taking Lauren by the hand and bidding them goodnight. \n\n\"Alex, maybe we should leave,\" Jade entreated. \n\nShe didn't know what his parents would think of their relationship and wasn't eager to find out in a public place. After all, she was the hired help, not someone in their social circle.\n\n\"Sweetheart, there's nothing to be worried about,\" Alex said, caressing her back. \"I only wanted to solidify our relationship before I introduced you to them; now is as good a time as any. We won't go looking for them, but if we run into them, then we'll make our relationship known. Ok?\"\n\nStroking his chest, she sighed and relented, \"Ok, baby.\"\n\nAlex's eyebrow arched. That was the first time Jade had referred to him with an endearment. He liked it; it meant she was taking possession of him. He was hers in her mind and heart. \n\nThey were dancing a half hour later when Alex heard his name being called. Looking up from Jade's sultry eyes, he encountered his mother and father. He felt Jade stiffen in his arms and then she relaxed as he held her closer.\n\n\"Mom, Dad,\" he greeted. \n\nAt his mother's purposeful look he said, \"Jade and I have been together for a few weeks.\"\n\n\"Why didn't you tell us?\" she asked, taking note of how he phrased his announcement.\n\nAdam chuckled before giving her a reminder.\n\n\"Mom, when have I ever offered information about my relationships?\"\n\n\"Huh!\" she grunted. \"Well, never and you always said very little when asked. But we know Jade.\" \n\n\"That was reason enough not to say anything. I didn't want you cutting off my head if I screwed up and you lost an assistant,\" he pointed out. \n\n\"You've inherit your good sense from me son; I don't think you had anything to worry about,\" Jacob pitched in. \n\nTurning to Jade Diana said, \"I'm sorry we're talking over you dear, but since my son became a grown man we've had to pry information out of him or use our spies,\" she teased.\n\n\"It wasn't entirely his fault,\" Jade said, relieved. \"I didn't know what you'd think of us being together since I'm working for you.\"\n\n\"Well, it's a surprise, I must admit,\" Diana said. \"I didn't have a clue that you were interested in each other. As for working for me, that doesn't matter, dear. What matters is that my son is happy and you are happy with him. From the looks of it, I'd say that was covered.\"\n\nJade flushed at the knowing look in her eyes. \n\n\"Now that everything is out in the open, we'll leave you two alone to enjoy the rest of the evening,\" Jacob said taking Diana's arm and steering her away from them. \n\nJade sighed and leaned against Alex. She conceded, \"That wasn't bad at all.\"\n\nHe softly brushed his lips against her forehead. \"Mom really likes you, Dad too. If I mess this up, I'm in trouble.\" \n\n\"Well, I don't see that happening,\" Jade stated with conviction and a small smile. \n\n*\n\nOn the way to Alex's place, he kept one hand on the steering wheel and the other on her thigh. Just that touch managed to send warm tingles through her body. They hadn't made love for weeks, but that didn't mean Jade hadn't thought about it often. She was now almost dizzy with anticipation. \n\nWhen they finally arrived at his home, Jade was as jittery as she had been the first time.\n\nAfter entering the great room, from a hidden wall panel Alex bathed the area in mood lighting and turned on the stereo. He took off his jacket and after Jade sat comfortably on the sofa, poured Camus Cognac in a snifter for himself and sparkling apple juice for Jade in a wine glass. She had no moral issue with alcohol; she just didn't like the taste. \n\nShe sat in the circle of his arms and enjoyed the music and the warmth of his body. By the time she finished her drink she'd transitioned from nervous to amorous. She placed her glass on the coffee table and took the drink from a surprised Alex, placing it on the table as well. Standing up, she tugged on his hand urging him to his feet. \n\nArching his eyebrow, he smiled and asked, \"Are you going to have your way with me now?\"\n\nJade pulled him close, wrapping both arms around his waist. Breathing in the woodsy scent of his cologne and the earthy scent of man, she responded. \"Ummmm, I certainly hope so.\" \n\nAlex quickly stepped back from her and hoisted her up and over his shoulder in a fireman's carry. \n\n\"Alex!\" she squeaked. \"Put me down. I feel like a piece of meat.\" \n\nSlapping her butt, he retorted, \"You are a piece of meat; a fine ass piece of meat at that.\" \n\nHe continued on to the bedroom, not setting her back on her feet until they were beside his bed.\n\nQuickly, he undressed her, but Jade suddenly wasn't of a mind to hurry. She tugged his shirt out of his slacks, slowly unbuttoned it and slid it off of his broad shoulders. Once his chest was bared, she felt the silky pelt of hair, stroking it all over and murmuring her pleasure. Alex's penis joined the party, slowly rising to the occasion, as it were. \n\nWith care, she unbuckled his belt and slipped it out of the loops. Once it was off, she popped open the button at the top of his slacks and looked up at him. His eyes were intent on her breasts which sported large dark flinty nipples.\n\nUnable to stop himself, Alex stroked her breasts with his thumbs. His eyes caught her gaze when he lifted her ample bosom and her breath seized in her throat. He could feel the heat of her body and didn't know how long he could endure her slow seduction.\n\nJade unzipped his slacks and pulled them down to his knees revealing his silky navy blue briefs. His cock was long and hard, straining to be released. She rubbed her hand along his length, from the base to the head, humming as she stroked over the spot wet formed by his pre-cum. \n\nHer pussy was moist and throbbing, threatening to distract her from her game plan.\n\nShe needed Alex so badly.\n\nIt was time to ramp up the pace.\n\nQuickly she pulled his briefs down and gently urged him rearward until the back of his knees hit the bed. With a peck on his lips and a light pressure on his chest, she ordered, \"Sit.\" \n\nAlex grinned and dutifully sat.\n\nJade knelt to take off his shoes and socks and removed his briefs and slacks completely. She rose and for a moment she just stood there looking at him; a magnificent naked specimen of manhood and all hers. \n\nPushing him back so that he laid across the bed, she crawled on top of him and straddled his waist. \n\n\"Hands behind your head,\" she commanded, smiling.\n\nAlex eyes darkened as he did as she instructed. \n\n\"Damn, you're sexy, baby. Use me,\" he whispered.\n\nJade leaned forward and stroked up and down his chest with both hands, from his shoulders to his belly. She watched as his beautiful blue eyes shone with desire. His chest heaved as his ardor increased and more pre-cum oozed from the wide slit of his penis. \n\n\"Jade,\" he groaned. \n\nWhen he had her full attention, he said, \"I love you, baby, more than I ever thought possible. This isn't just sex, we're making love.\"\n\nStunned, Jade gasped.\n\n\"I love you too, Alex. You're everything I've ever wanted or needed in a man.\"\n\nLeaning down, she tenderly kissed his lips, pressing her body against his, the hair on his chest rasping her sensitive nipples. Forgetting her order, Alex slid one hand under her hair to hold her head, deepening the kiss, while the other hand roamed up and down her back. \n\nThen, breaking the connection, he whispered, \"Love you, baby.\"\n\nJade, taking charge for a moment longer, held his head as she kissed him with a thoroughness that left both of them breathless. Sliding her tongue into his mouth, she engaged his in an erotic dance of passion. Alex loved the feel of her hot breath and the taste of her mouth. \n\nRolling over, he moved up the bed and placed Jade underneath his straining body. Stroking her wet, slippery folds with his fingers, he was treated to a flood of juices that made his cock jerk.\n\nHe murmured words of love as he slid a long finger past the glistening folds into the humid channel of her feminine core. As her breathing increased, he added another finger, gliding along on her flowing juices. Languidly he stroked, building the fire, testing her heat and desire. \n\nSoon he was stroking her with his thumb teasing her clitoris. Jade's entire body was in flames as her orgasm neared and she gasped at the burgeoning pleasure. \n\n\"Alex...Alex... ooooooh...ooooh, baby...baby... ahhh...baby...faster...faster. So close... aggggggghhhhh, Alexxxxxx!\" \n\nShe screamed in the throes of a swirling climax just as Alex urgently got to his knees, held his cock at it base and slipped the head into her spasming pussy. Slowly and with some effort, he steadily slid all the way to the base, firmly seating himself in her tight pussy.\n\nTaking only a few seconds for Jade to adjust to his girth, he started plunging into her at a dizzying pace, taking her higher still. Faster and harder he plunged in and out until he threw back his head and shouted his own release.\n\nCum spewed from his cock, easing her trail to ecstasy, drenching her with his white hot seed.\n\n*\n\nJade awakened to a feeling of complete bliss. Even before she was fully conscious, she was aware of Alex's hands caressing her body. She stretched while he continued his ministrations, feeling a luscious ache in her core, his penis hot and hard against her buttocks.\n\n\"Good Morning,\" he whispered, kissing her shoulder.\n\n\"Mmmm. Morning, Alex.\" \n\nTurning to face him, Jade shuddered as the hair on his chest tickled her nipples. She breathed in deeply, taking in the scent of their love making. Sex was an awesome smell. \n\n\"What are our plans for today,\" she asked as she stroked his chest.\n\n\"After I have hot sweaty sex with you again, I thought breakfast and then more hot sweaty sex,\" Alex grinned.\n\n\"That sounds wonderful,\" Jade said almost drowning in the pools of his deep blue eyes. \"I love your body. It's smooth in places, silky hair in others and hard through and through. I love having you inside of me.\" \n\n\"Good thing, too,\" Alex replied, \"because I intend to be in you as often as I can manage.\" \n\n\"Let's do it!\" Jade said eagerly.\n\nLaughing, she climbed on top of him, seating herself on his erection; she tilted her hips so that he slid into her slowly, but straight to the balls. Rocking urgently she rode both of them into sweet oblivion.\n\n* \n\nThey snoozed after their morning lovemaking and then shared a shower which resulted in Alex taking her hard and fast against the shower wall. He had a lot of stamina, not that Jade was complaining. To the contrary, she was enjoying every minute of it. She had never felt so loved or so free to express her love. \n\nAfter the shower they both talked to Briana on the phone.\n\nLater, they sank down onto the sofa. Not in the mood to dress, they wore nothing more than fluffy white terry robes. It made a comfortable spacious lounging place to bask in their love for each other. In this intimate setting they shared a plate of fresh fruit and talked about their feelings amid kisses and tender caresses. \n\nIt was some time later before they could think of other things. \n\n\"Oh, I forgot to tell you, I have a five day seminar the first week of October, in Gainesville,\" Alex said. \"It's part of my continuing education. I'm not looking forward to a whole week without you, but I know you can't take off work or take Briana out of school. Even if you could, you'd be alone most of the day.\n\n\"Do you have these often?\" Jade asked, nibbling on her bottom lip, already getting anxious about being separated from him so soon.\n\n\"It's mandatory that I do forty hours a year. This particular seminar will fill that requirement in the one week,\" Alex explained. \n\nSighing, Jade admitted, \"I'm going to miss you so much, but you're right, I couldn't miss work. The event planning has picked up a lot since the middle of summer. Besides, it's too early in the year to take Briana out of school for an entire week and I wouldn't want to leave her.\"\n\n\"I'm going to miss you both, but especially our time together. Why don't you and I just fill up on love now while we have the chance,\" Alex said, and then with a growl, he pushed Jade onto her back while frantically opening her robe.\n\n* \n\nSunday afternoon they headed over to Judy's house to pick up Briana. On the way Jade casually mentioned that Briana's pre-school, Kids Learning Academy, was having a meet and greet for the parents on the twentieth.\n\n\"Is Jackson going to be there?\" Alex asked.\n\n\"Not likely,\" Jade said. \"He hasn't seen her in three months and I have no reason to believe he would be interested in coming. I stopped a while back trying to guilt him into seeing Briana. Even when he did spend time with her, he wasn't all that pleasant to have around.\"\n\nAlex was thoughtful for a few moments before he spoke.\n\n\"Since he's not going to be there, would you mind if I came?\"\n\nShe looked at him surprised.\n\n\"You don't need to give me that look,\" he chuckled, \"you know I'm crazy about Briana. I want to see what they're teaching her and how she's doing in school.\" \n\n\"She's crazy about you, too,\" Jade said. \"As for the meet and greet, I'd love it if you came with us.\"\n\n\"Ok, I'll put it on my calendar,\" he promised.\n\n* \n\nThey stayed a while at Judy's talking to her and her husband, Terrance. They got to Jade's apartment around five o'clock. Alex took her overnight bag out of the car while she got Briana's. They didn't pay any attention to the car pulling in a few parking spaces down.\n\nBriana grabbed Alex's hand and looked up at him smiling. \n\nSeeing the obviously happy couple with the child, the man exiting the car frowned. \n\nAs they headed to the apartment, Jade heard her name being called. \n\n\"Hey, Jade!\" \n\n\"Damn,\" she thought, \"why today of all days?\" \n\nJade turned, watching Jackson leisurely walk toward them. Immediately she noticed that he was wearing what looked to be new clothes, several gold chains and new high top sneakers. \n\n\"Probably purchased by his mother or some sugar mama,\" she surmised.\n\nMentally shaking her head, she thought, \"This man is not my problem anymore, thank God.\"\n\nThey waited as Jackson approached. When he was close enough, he reached down to touch Briana's cheek, but she turned her head and backed up into Alex. \n\n\"What's the matter, baby. You're not happy to see Daddy. I know I was gone for a while, but I'm here now,\" he said. \n\nGetting no response, he glared at Jade, obviously pissed. \n\n\"I was in the area and decided to stop by on Saturday. Your car was here, but you didn't answer the door. I thought you were just trying to avoid me, but your neighbor said you were gone for the weekend,\" Jackson said giving Alex the once over.\n\n\"Was there something in particular you wanted, Jackson?\" \n\nJade didn't intend to give him any explanation of where she spent her time. She was glad he hadn't bothered to call her cell phone; he would have found a way to ruin her weekend. \n\n\"I wanted to see Briana,\" he said.\n\n\"Well, you can see her now,\" she said, gritting her teeth.\n\nThe last thing she wanted was to spend time with him, but she didn't want to give him any reason to say she wouldn't let him see his daughter. However, she would have liked it if he'd had a better attitude. \n\n\"Come on, baby, let's go inside,\" Alex said to Jade. \n\nBriana was still clutching his hand.\n\nJackson's head snapped back and his eyes flashed when he heard Alex call Jade baby. He didn't like the way Briana was clinging to him either.\n\nJade unlocked the door and they all went inside. \n\nJackson turned to Jade once they were in the living room.\n\n\"Who's the dude?\" he asked with a sullen glance toward Alex.\n\n\"The dude is Alex McCord,\" Alex responded, holding out his hand to Jackson after he put down Jade's bag.\n\nJackson looked at his hand and reluctantly shook it when he noticed Briana watching. \n\nJade invited him to sit on the sofa hoping his visit would be a short one. \n\n\"Can I get anyone a drink?\" She asked.\n\n\"I want some juice, Mommy,\" Briana said following Jade into the kitchen. \n\n\"No.\" Jackson said bluntly.\n\n\"What about you Alex?\" \n\n\"Nothing for me, baby,\" he said.\n\nWhile Jade poured Briana's drink, Jackson decided to satisfy his curiosity about Alex. \n\n\"When did you meet Jade?\" he asked.\n\nAlex didn't see a reason not to indulge in a little chit chat, but he knew one thing for sure, he was not leaving Jade and Briana alone with this guy. \n\n\"A few months back,\" Alex answered coolly.\n\n\"Is this serious or something?\" Jackson asked with a frown.\n\n\"Why do you ask? Are you still interested in Jade?\" Alex questioned softly, cutting to the chase.\n\n\"Look, man,\" Jackson said with a bit of an attitude, \"I just want to know since you look like you spend time around my daughter.\" \n\nNot batting an eye, Alex said, \"I assure you that I'm no threat to Briana. Feel free to Google me. That's Alex J. McCord, Attorney at Law.\" \n\nLeaning forward and keeping his voice low and calm, he asked, \"Anything else?\"\n\nJackson didn't know if he wanted to tell Alex to go to hell or punch him. But he thought better of doing either and simply said petulantly, \"No.\"\n\nJade was watching the exchange in the kitchen, but couldn't make out what they were saying. She was hoping it wouldn't get heated, especially in front of Briana. \n\nAlex knew exactly why Jackson was questioning his relationship with Jade and it had nothing to do with Briana. The man was likely just realizing that his access to Jade, even in a superficial way, was closed. ",
        "Deciding to get back to the reason he'd come by, Jackson called Briana to him. She was reluctant to go. Jade give her a little nudge and said, \"Go ahead, baby.\"\n\nBriana went and stood in front of Jackson where he sat on the sofa. He took her little hands in his. Although she didn't pull away, she didn't give any sign that she was responsive to his touch either. \n\nJackson was feeling frustrated, especially with Alex watching. Alex, sensing the situation and not wanting to escalate the hostilities, got up and joined Jade in the kitchen. As much as he disliked the man, Jackson was Briana's father.\n\n\"How would you like to go to the park with my Mom and me next Saturday?\" Jackson asked. \n\nPulling her hands out of his, Briana said, \"No thank you. I want to stay here with Mommy and Alex.\"\n\nJackson was livid, but he wasn't going to make a scene. The last time he got angry with Jade and yelled at her, it was a long time before Briana would even come near him. He knew that he didn't spend enough time with her, but he still couldn't handle having a kid. He'd asked her about going to the park, but the truth was, he was relieved that she said no. It was his mother's idea anyway. \n\nAfter Briana gave her answer, Jackson glanced over to the kitchen to see if Jade and Alex were listening, but he might as well not have been in the place, they only had eyes for each other.\n\n\"Fuck him. Fuck her,\" he thought.\n\nAlex had his arms around Jade and they were whispering to each other. He didn't need to ask if they were sleeping together, it was obvious and it grated on his nerves. She'd look at him like that once, but that was a long time ago. \n\nJade had been crazy about Jackson from the time they met, but all that ended when he rejected her after she got pregnant. He tried to rekindle the relationship, but she had moved on without him. He thought he could just see her whenever he wanted without having to deal with the child, but she'd put the kibosh to that idea.\n\nSince there was no further reason for him to stay, Jackson got to his feet and cleared his throat, \"Ahem!\"\n\nGetting their attention, he said, \"I need to get going.\" \n\nAs he headed to the door, Jade left Alex's arms to escort him out. \n\nLooking over Jade's shoulder, Jackson saw Briana go over to Alex and held up her arms. When he scooped her up, she put her arm around his neck and started talking to him. Jackson couldn't hear what she said, but Alex was smiling.\n\nAt the door, Jade said, \"Please say hello to your mother for me.\"\n\n\"Why?\" Jackson retorted. \"You don't care about my Mom. You haven't seen her since we broke up.\"\n\n\"Jackson,\" Jade said, praying for patience, \"I know you're itching to start a fight, but I'm not going to argue with you. Neither of you have given me any reason to believe she wanted to see me. You know my phone number, she could have easily called if she wanted to see me or Briana and I would have been willing to make time for her.\n\n\"It's always on your time table,\" Jackson grumbled.\n\n\"Whose time table is it supposed to be on?\" Jade hissed tired of him playing the victim. \n\nTaking a deep calming breath, she continued.\n\n\"I'm Briana's mother and I have to work.\" She tried to keep her voice low, but Alex could tell the goodbye was taking longer than it should.\n\n\"Is everything all right, sweetheart?\" he called from the kitchen. \n\nJade opened the door and called back, \"Yes, everything is fine, Alex.\" \n\nTurning to Jackson, she said, \"Call and let me know when you want to see Briana again.\"\n\n\"What for, she doesn't want to be with me,\" he said like a sullen child.\n\n\"It's up to you,\" Jade sighed biting back a retort.\n\n\"Goodbye, Jackson.\" \n\nAlex sat Briana down in a chair and whispered something to her, to which she nodded. \n\nHe then walked toward Jade and Jackson. Jackson thought it was a good time to make his exit. He walked out the door without another word and Jade closed it behind him. \n\nLeaning back against the door, she sighed again. \n\nAlex gathered her into his arms and hugged her tightly. \n\n\"You sure you're ok, baby?\" he whispered.\n\n\"Yes,\" she murmured.\n\n\"Mommy, can I have a popsicle?\" Briana called from her seat at the table, effectively breaking Jade's sober mood.\n\n\"No, sweetie,\" she said, \"you just had a glass of juice. But you can have one after dinner.\"\n\n\"Ok, Mommy,\" Briana answered as she got up from the table and headed to the living room to watch cartoons. \n\n*\n\nOn the drive home Jackson had time to think.\n\nHe had a good set up at home. Now and then he would pretend to be looking for a job, but eventually he'd have to find one, even if only temporarily. He'd work for a few weeks or months and then quit. He'd tell his mother that he was laid off or make up some other excuse that didn't include taking the blame. \n\nHe knew his mother would continue to support him as long as it looked like he needed it. What she didn't provide in the way of material things, his girlfriends did. He was a good looking guy with no shortage of women. He had it made and not having to pay child support was a bonus. He was the envy of most of his friends. \n\nDespite his women, Jackson was jealous of Alex. \n\nHe was loathed to admit it, but he knew it was true. He'd never seen Jade with another man in the years since they split. He'd liked her, maybe loved her, but he just hadn't wanted to be around a kid for long. But seeing her with Alex had revived some dormant feelings of possessiveness. \n\nIt didn't help matters that his mother was stuck on having a relationship with her granddaughter and nagging him in the process. \n\nHe hadn't been honest with his mother, not by a long shot. \n\nShe'd asked him on numerous occasions to bring Briana over, but he always made up an excuse and it mostly involved Jade refusing. She wanted to have a relationship with her granddaughter, but Jackson knew that would just lead to her wanting him to take more responsibility for his daughter. \n\nTruth be known, it wasn't just Briana. He always made it a point never to date women with children, particularly after he'd made the mistake of doing that once. They always took up the woman's time and always needed something. \n\nThe one exception had been Tina Lewis and that was because she was so fine, he had to have her. In the beginning it was all good. She got a babysitter who took the kids to the park before he came over. But eventually she started complaining about the expense. In the end, all the whining wasn't worth the effort or the pleasure and he dumped her. \n\nTo make sure that he didn't have anymore little mistakes, he always wore a condom, even when the women said they were on the pill. He just didn't trust them. One was more than he wanted, he wasn't going to be anyone else baby's daddy. \n\nWhen he thought of Jade with another man and a white man at that, he got angry all over again. He thought that there were more than enough black men for her to choose from, but apparently they weren't good enough. On the heels of that thought was the realization that he would have been jealous no matter the color of the man's skin. \n\n\"Yeah,\" he thought, \"fuck both of them.\" \n\n* \n\nThe next couple of weeks were hectic for both Alex and Jade. Alex was engrossed in a case that was set for trial; a contract dispute between J.C. Reynolds Inc. and their international partners, Townes-Wellington Construction. \n\nThe lawyer who represented Reynolds when the contract was drawn up two years earlier was in prison for assaulting his ex-girlfriend. He was indicted just before the contract dispute blew up. Alex was recommended to Reynolds by a mutual friend, another attorney, Michael Lewis, who was not familiar with contract law, let alone international contract law.\n\nJade and Mrs. McCord were in the middle of planning a charity dinner. Again, Jade would be sending out the invitations and answering any questions about the event, but she was also charged with working with an event planning company to coordinate the details for the dinner. \n\nMrs. McCord was working on the guest list and planning another, smaller event that would be held three weeks later at the country club. \n\n*\n\nA week later\n\nBy Wednesday morning, Jade had everything at work pretty much under control. She was now looking forward to spending some time alone with Alex.\n\nSince she and Alex got together, Briana was more times than not spending her after school hours with Judy giving her parents a little break. He mother still took her to school, but Judy picked Briana up in the afternoon when she got Lisa. Although her parents enjoyed having their granddaughter, at Judy's she had a playmate in Lisa and her parents had more time to make their own plans. They both were active and had a fairly large circle of friends. \n\nHer mother was still pressing to meet Alex. Jade knew she wouldn't be able to put that meeting off much longer, but she wasn't prepared for it right then. However, she decided to talk to Alex about it sometime during the following week. \n\nAlthough she and Alex kept in touch by phone, they hadn't actually seen each other all week. He was putting in some long hours in the evenings, either working at the office or at home. When he called he sounded tired, but he promised to spend time together over the weekend.\n\nOn Friday Jade's mother called to ask if Briana could stay with them after school the following week and then stay over the weekend. They missed their granddaughter. She agreed knowing that Briana loved being with them. Besides, she'd get to have some alone time with Alex. The irony of the situation wasn't lost of Jade. Just when she'd gotten another job, in part to spend more time with her daughter, she'd gotten a social life. \n\nIt was still a win for both of them. She was able to spend evenings and most weekends with Briana, but unlike when she was with Rollins, she was now able to enjoy them. That meant that she could give her daughter her full attention with they played games or worked on school projects, sometimes with Alex. \n\nJade and Alex spent a few weekends alone and went out on the town from time to time, but a good deal of their time together was spent with Briana who seemed to blossom under the attention she was getting from Alex. \n\n* \n\nAfter picking Briana up, they headed to the Bob Evans near Judy's house. They were seated waiting for the waitress, when Jade brought up the subject of Briana staying with her grandparents on the weekend.\n\n\"Briana, I talked to Mom about you spending time with them after school next week and the weekend. Would you like that?\"\n\nNodding, Briana said, \"Yes. I like staying with them. I like staying at Lisa's too, but I haven't stayed with Grandma and Poppy for a while.\" \n\nThen, pulling on her pigtail, she said, \"I miss Alex, too. When is he coming over to our house?\"\n\n\"You'll get to see Alex soon. He had a lot of work to do this week and couldn't come over. I'm sure he misses you too,\" Jade said.\n\n\"I liked playing with him. He smells good and I like it when he reads me a bedtime story, just like a real daddy. Lisa's daddy reads her stories all the time,\" Briana said, with an innocence only children have, but Jade felt the longing behind the words. \n\nBriana's reference to a 'real daddy' shocked Jade, but she didn't say anything. She knew Briana was attached to Alex, but she didn't know she was starting to think of him as a father figure. Neither of them had known him for a long time, but she acknowledged that it was more than enough time for her daughter to learn to love him. A few months were a long time for a child. \n\nSighing inwardly, Jade prayed for things to work out for both of them. In the meantime, she decided not to make a big deal of Briana's statement. \n\n\"Alex loves reading to you, baby. I'm sure he would read you a story whenever you wanted,\" Jade said.\n\nBriana nodded, but before she could say anything the waitress appeared to take their orders. \n\nJade placed the orders and while they waited for their meal, Briana regaled her with Lisa's antics. In the middle of one of the stories, she got a call on her cell phone. It was Alex.\n\n\"Hello?\"\n\n\"Hi, sweetheart, I'm on my way over to your place. I finished work early and thought we'd go out to dinner with Briana.\"\n\n\"Oh! We're already at dinner, Alex. I decided to treat Briana to Bob Evans since she's going to be at my folks this coming weekend. \n\n\"Which Bob Evans?\" he asked.\n\n\"It's the one on fourth; a few blocks from Judy's house.\" \n\n\"Ok, baby, I'll join you there. I'm about ten minutes away. Order me the pot roast sandwich platter and iced tea,\" he requested. \n\n\"All right, Alex, I'll see you soon.\" \n\nWhen Jade put her cell phone back in her bag, she smiled at her daughter knowing that she had been listening intently.\n\n\"Alex is going to join us for dinner.\"\n\n\"Yay!\" Briana said enthusiastically. \n\nJade signaled to the waitress who came over and took the additional order with a request to hold their meals until Alex arrived. \n\nBriana took up where she left off on her story, but it only took a few minutes for Jade's mind to drift as she thought about the last night she spent with Alex. It wasn't very long after that when she felt her heat rise. As she tried to tamp down those feelings Alex walked through the door. \n\nBriana was first to catch sight of him.\n\n\"There he is, Mommy!\" she shouted. \n\nJade shushed her as her voice carried across the room. She noticed that Alex smiled when he saw them. She also noticed heads turning to look at him, but it's the women gazes that lingered. \n\nHe was sexy, no doubt about it. He'd worn a 3-piece gray suit to work, but had taken off the jacket. As he strode across the room toward them, Jade couldn't help appreciating how tall and board shouldered he was. His waist was trim and he had a butt that begged to be stroked. She blushed as she recalled that she had, in fact, stroked that supremely fine hard ass. \n\nWhen he arrived at the table, he slid into the booth next to Briana and across from Jade. \n\nTaking Jade's hand, he brought it to his lips and kissed it, before saying, \"Hi, sweetheart.\"\n\nJade looked into his dark smoldering eyes and almost melted into a puddle right there. \n\n\"Hi,\" she said shyly. \n\nHell, they were in a public place and this gorgeous man had just kissed her hand. That was damn sexy.\n\nGlancing at Briana, he said, \"Hi, princess. Glad to see me?\"\n\nBriana nodded and said, \"Yep. I missed you and I asked mommy about you. I'm glad you came to eat with us.\"\n\n\"I missed you, too,\" he said. \"Tell me what you've been doing at Lisa's.\" \n\nJade shook her head as Briana launched into her adventures and misadventures with Lisa during the week. Alex listened intently, occasionally asking questions. When he caught Jade watching him, her eyes soft and her beautiful lips curved into a smile, he winked at her, making her eyes widen and she blushed like a giddy school girl. \n\nThe meal was a sweet intimate occasion. Jade felt like they were a family; how could Briana not think of Alex and daddy in the same sentence? He was attentive, genuinely interested in what she had to say and loving. He was everything she had wanted Jackson to be.\n\nAfter dinner they drove to Jade's place in their separate cars. Briana stayed up longer than usual and watched television while Jade and Alex cuddled on the sofa. \n\nAt nine o'clock Briana had her bath and afterward she was put to bed. After saying her prayers, she asked Alex to read her a bedtime story, one she'd heard many times before from the Dora the Explorer series. Alex read in a soft even tone and half way through the book, Briana was asleep. He and Jade both kissed her before closing the door behind them. \n\nOnce Jade and Alex were alone, she curled up in his lap on the sofa. Stroking the side of his face, she leaned in to kiss him softly. Alex grunted and deepened the kiss, his hand caressing her hip and buttocks. Soon, his tongue slipped into her mouth and he heard her moan as her tongue dueled with his. For long minutes, they indulged their hunger for the taste of each other. \n\nWhen their ardor heightened, Alex unbuttoned Jade's blouse and slipped his hand in to caress her plump breasts through the lace bra. Finding that the bra had a front closure, he eagerly opened the eye hooks and pulled it aside allowing her breasts to spill out. \n\nJade panted, grinding her bottom into his erection, groaning more urgently as he pinched her throbbing nipples.\n\n\"Alex,\" she moaned on a ragged breath.\n\nSliding his mouth down her smooth tender neck, he sucked and then licked the flesh, his breathing just as harsh as hers.\n\n\"What is it, sweetheart? What do you want?\" he growled, the words muffled by the slide on his lips down to her breasts. \n\nFighting to find her voice, Jade said, \"I...I want...I..ooooh, Alex.\" she wailed as his hand found it's way under her skirt to caress her pussy through her wet panties.\n\n\"I want too, baby,\" he averred. \n\n\"I want you riding my dick. I want you screaming...\" he trailed off as he slipped a finger into her pussy and her walls clinched around it.\n\n\"Fuck, baby. I have to have you. Now!\" \n\nAlex slipped her off his lap and tried to gain some control so that he could please both of them. The way he was feeling, he was likely to shoot his load the minute his dick felt her slickness.\n\nQuickly, taking her hand, he pulled Jade to her feet and strode into her bedroom. After closing the door and locking it, he undressed her, then himself. \n\nHis head was swimming with the heady scent of her arousal.\n\nAfter urging her to sit on the bed, Alex knelt on the floor before her. He spread her feet apart to give himself full access to the source of that glorious aroma. Pushing gently on her chest he ordered with a grin, \"Lay back, baby. I'm going to be here for awhile.\" \n\nWith those words, her pussy throbbed and gushed in pleasure. Leaning back on her elbows, Jade watched and waited. She didn't have to wait long.\n\nAlex lifted both of her legs onto his shoulders, and then curved his hands around her thighs to hold them open as he lowered his head. As he watched her watching him, he sank his lips into the sweet nectar bathing the entrance to her womanly core.\n\nJade's hips lifted at the pressure from Alex's lips, and she squealed with delight. She lost all thought as his mouth made a feast of her pussy with his tongue thrusting, seeking the source of her liquid essence. \n\nJade fell flat on her back almost swooning, unable to hold herself upright.\n\nGrabbing his hair, she groaned and mewled, thrashing her head from side to side, trying to squeeze his head in the vice of her thighs. But Alex held her open, licking and then taking tiny bites on her swollen clitoris.\n\nThoroughly, he covered the entire area, not wanting to come up, even to breath. But, he did manage, barely, and then plunged right back down into the sweetest taste he'd ever had of a woman.\n\nAlex wasn't drowning; he was flying, higher than he'd ever flown from this act. He could not get enough and she obliged him by continually flooding his mouth with her honeyed sap. \n\nFor her part, Jade was holding on for dear life, her hands twined in his thick silky hair, her body bowing as she felt the tentacles of orgasm taking hold. Suddenly, Alex flicked her clit with his tongue and then took it between his lips and sucked, hard. \n\nJade screamed and buck as her climax shot through her body and her pussy throbbed relentlessly. Still he held on sucking as she screamed long, seemingly endlessly, until she could offer no more.\n\nHer mouth gaped open, but no sound emanated from it. \n\nFinally, as she came down slowly, Alex eased up, licking and soothing her tender clitoris, then kissing her inner thighs as she released her grip on his hair and her arms fell to the bed.\n\nAlex was on fire, his cock hard and aching, needing his own release. Getting to his feet, he urged Jade further up the bed. He then knelt on the bed and wrapped her legs around his hips. ",
        "She watched him with hooded eyes as he leaned down to kiss her lips. She tasted herself, the eroticism of it causing an ache in the pit of her stomach. When Alex pulled back she licked her bottom lip and smiled at him.\n\n\"I love you, Alex. More than I ever knew I could love a man. I need you so much.\" She panted, stroking his powerful arms.\n\nCaressing her inner thighs, Alex smiled and said, \"You're all that I ever wanted and more, baby. I will love you until my dying day.\" \n\nTaking his cock in his hand, he placed the tip at her entrance, and watched her eyes flutter then close. He pushed the big head in and waited for her to adjust, feeling her muscles twitch. After a few moments, he pushed forward inch by inch, straining against the tightness. Opening her eyes, Jade watched as he bottomed out in her pussy, her swollen walls pulsing, clinging to his shaft.\n\nSlowly he thrust in and out, her vaginal juices aiding the progress of his engorged cock. Jade's breath came in increasingly short pants, her hands squeezing her breasts and pinching her turgid nipples as she became more aroused. \n\nWatching her, Alex felt his cock expand. \n\nTaking hold of her thighs, he held them up as he started thrusting into her heated channel, increasing the speed as his own desire rose. Thrusting his hips faster and harder, he felt his balls pulling up as his cum rose through the shaft of his aching cock.\n\nJade's vaginal walls clutched at him more rapidly as another orgasm approached. Alex thrusts became shorter, quicker, jerky as his body started to stiffen in anticipation of delivering a rush of hot sperm into its natural receptacle. \n\nJade was almost there, almost. She could feel the tingling in her pussy, her breasts were overly sensitive, her nipples hard and throbbing. Then, suddenly, Alex changed the direction of his thrusts and her body arched as she shrieked, bucking as she came again. Delirious with desire, she came and came, shouting in breathtaking pleasure. \n\nJade withered in ecstasy, but when the flames in her body eventually diminished to sparks, she felt Alex pick up the pace again, thrusting viciously. Immediately, her desire was rekindled, rising higher and higher as he stroked in and out of her pussy. Just as she thought she couldn't go any higher her brain blinked and she went hurling into a sea of glorious rapture.\n\nRight behind her, Alex cock jerked, spewing out cum in jet after jet. He continued to thrust through their climax, never wanting to stop, but knowing it would end all too soon. Still he plunged into the hot vortex of her sex, until she had drained him of every drop of his seed.\n\nSatisfied, they slowly slipped into sleep, still entwined."
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "wm/bf",
        "erotic",
        "relationship"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/a-long-time-coming-ch-04-1"
}