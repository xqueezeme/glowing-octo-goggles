{
    "title": "The Cult",
    "pages": [
        "=====================\n\nCult 101: Defining Your Cult's Purpose and Establishing Moral Authority\n\nAlright, this one's a little 'out there' and I imagine I may piss off a few people along the way. Remember, it's only a joke, so lets not get too crazy. \n\nThis is an entry in the April Fools Story Contest, 2016. I hope you enjoy it. \n\n=====================\n\nI held Bethany close. \"Can you hear it?\"\n\nShe gazed at me with those huge milk chocolate eyes. \"He's speaking to you now?\"\n\n\"Speaking doesn't adequately describe it. It's a total experience. My entire body is resonating with His message. It's hard to believe you can't feel it.\"\n\n\"What's He saying?\" she asked hesitantly.\n\n\"If you can't hear it, perhaps it's not meant to be.\" I pulled away, unwrapping her arms, and leaned back in the couch.\n\nThe poor girl was almost in tears. She got up and stood before me, head bowed in sorrow.\n\nI shook my head, displaying my disappointment in her. \"I believe in you, Bethany. Now you need to believe. We'll keep trying until you get it, or until I can't go on.\" I pulled open my shirt, baring my chest, and laid back on the couch turning partly on my side. I patted the space beside me, making room for her. \"This time, relax. Open yourself to the message. Don't listen with your ears, listen with your body and soul, absorb it through your skin. Take your time.\" She came closer, and I stopped her. \"Take off your slippers.\"\n\nBethany was wearing the t-shirt she slept in, and cute fuzzy slippers. She kicked off her slippers and slid next to me. I enveloped her in my arms and held her while she stretched out beside me. She was tense, her arms folded over her chest. \"Relax, open yourself, and listen.\"\n\nShe loosened up, her arms opening to me. I stroked her hair softly, brushing across her temple. It took a minute or so, and then I felt her tense up.\n\n\"Relax,\" I reminded her.\n\n\"I ... I heard something.\" Her voice quivered with excitement.\n\n\"Good. What did you hear?\"\n\n\"I don't know. It was too soft.\"\n\n\"Keep listening. Feel it with your entire being. The message is deafening. It's screaming out from every pore of my skin.\" I rolled further onto my back, pulling her on top of me, embracing her. I held her close, her forehead pressed against my lips, my hands holding her head still. \"Open yourself. Abandon all other thoughts. Feel the message.\"\n\nShe squirmed. \"My skin's burning.\"\n\n\"It's the message. Let it through. Relax. Accept it.\"\n\nShe trembled, lying as still as possible, her legs aligned with mine. \"It's there. A whisper,\" she murmured. \"I can almost make it out.\" She shifted, rubbing her legs against mine. \"My legs are tingling.\"\n\n\"They're receiving the message. You're receiving it. Keep listening.\"\n\nShe was on the verge of crying again from frustration. \"Why? Why can't I hear it?\" Abruptly she sat up, peeling off her shirt, exposing her full breasts to me. \n\n\"Bethany, our covenant ...\"\n\n\"Please, Joshua,\" she begged, plaintively. \"I need to feel more of your skin against mine, to receive the message. Please.\"\n\nI looked at her sternly, while she pleaded, before slowly nodding. She lay atop me, her breasts pressing against my chest, her panty covered pubis firm against my crotch. I could feel myself starting to respond to her near nakedness.\n\n\"Thank you, Joshua. I'm sorry I'm not more open.\"\n\nI moved her slightly, positioning her so that as much of our bodies were in contact as possible. I scooted her upward so our faces were pressed together. Then I reached for her head, turning her face, staring into her eyes. \"Listen, child. You have to listen! I can't take much more of this, it's screaming through me, trying to get out. It's deafening.\"\n\nI held her face in my hands, gazing into her eyes, our mouths millimeters apart, our breath shared.\n\nI almost smiled when her eyes grew wide. \"I, I hear it, Joshua. It's louder now.\"\n\n\"What is it saying?\" \n\nHer face scrunched up in misery. \"I ... I still can't understand it. It's so close, Joshua, so close. Dear God, my skin is burning!\"\n\n\"Perhaps it's not to be. We can't get much closer than this.\"\n\nShe struggled with the listening, concentrating hard, her eyes squeezed tight. \"Just a little more, that's all I need.\" Her body writhed against mine, straining.\n\n\"Enough, Bethany. Your entire body is touching mine. You're still not open enough. I'm sorry.\"\n\nThe tears slowly rolled down her cheek. \"Can we, Joshua? Can we try just a little more?\"\n\n\"I don't see how. If you can't hear it now, I don't know if you ever will. It's exhausting. Perhaps I was wrong.\"\n\nShe squirmed off of me and pulled her panties off, sitting there naked. \"Joshua, I'm so close. I can hear it, I can.\" She reached for my shorts, hesitating. \"Please, let me do this. I have to know.\"\n\nI pushed her away. \"Enough!\" I barked at her. \"You know my feeling about this.\"\n\nShe bowed her head. \"Please, Joshua.\" The tears were streaming down her face.\n\nI stood before her. \"NO! I will not forsake my vow because you're weak.\" I was clearly hard. \"This is not His will. If you can't hear Him, that's your failure, not mine.\"\n\nShe ran from the room, grabbing her shirt, sobbing openly.\n\nI got up and went to the bar, made myself a stiff drink, then sat back and relaxed. I'd give her about 30 minutes, then I'd get ready for her epiphany.\n\n* * *\n\nLess than an hour passed before I was in the bedroom she shared with her sister. There were no doors, but I knocked on the door-sill. \"Bethany, may I come in?\"\n\nShe sat up, and I saw she was still upset. She nodded. \"Of course, Joshua. I'm sorry about earlier.\"\n\nI nodded in greeting to Lilith lying on her bed a few feet away. I thought she'd be asleep, but I was mistaken. That wasn't going to change anything. Her face lit up. \"Good evening, Joshua.\"\n\n\"Good evening, Lilith,\" I said, before returning my attention to the night's target.\n\nI sat beside Bethany and took her hand in mine. \"I was wrong. I presumed to know His intention, but I didn't listen myself. If you would like, we can try that again. His Will is mine.\"\n\nShe clasped my hand in both of hers, lifting it to her lips and kissing it. \"Oh, thank you, thank you!\" I leaned in to hug her, and she clung to me desperately. \"Is He ... is the message there for me?\"\n\nI nodded and removed my robe, leaving me naked. \"Whatever you need for me to do to help you, I will. As He commands, so I obey.\" I reclined on her bed and watched her hurriedly remove her shirt. She was naked beneath it. \n\nShe climbed on top of me, our bodies connecting for our entire length. I was already stiffening. I brought my legs together, and hers opened naturally, her knees outside mine.\n\nI held her head in mine, our noses pressed beside each other. I stared deeply into her eyes. \"It's too much for me, the message is too loud. I ... I'm going to let Him in totally. It's difficult for me, overwhelming, but I believe it's necessary for you to achieve openness.\" I sighed deeply. \"I wish it wasn't so difficult.\"\n\n\"Thank you, Joshua. I'm sorry; I'm trying the best as I can.\" \n\nI nodded. \"I may not seem like I'm here, but I am, deep inside. I trust you, Bethany. Open yourself, and hear His word.\" I pulled her face down to mine, our mouths connecting, open, sharing our breath, but nothing else. I closed my eyes and held her head in my hands tightly. Then I pulled back and opened myself to her actions. \n\nShe was squirming against me, the heat irritating her skin. She couldn't stop moving, and the actions made me harder. I felt her tense up when the message started. As it faded, I could feel her struggling to stay in contact with me, her legs squeezing and rubbing against mine.\n\nShe pulled her mouth away from my slack lips. \"Joshua, I'm hearing it. It's one sound, repeated over and over.\"\n\nI didn't move, giving no indication I heard her. \"Joshua, help me! Please, it's so close! I can feel it through every pore in my body.\" I felt her wriggle, and my hardness pressed between her legs. Her hand moved between us, and she whispered, \"Forgive me,\" before she slid me home, moaning softly as my full length entered her.\n\nShe tried to lay still on me, then pressed her lips back against mine, her tongue invading my mouth. It was time.\n\nI held her head tightly, and she cried out. \"LOVE! It's LOVE Joshua! That's His message!\"\n\nI brought my eyes back into focus and smiled. \"It is. Unconditional Love. I'm so pleased you were able to accept His gift. Honored He chose me as the vessel of His message.\"\n\nI let my hands slide down her body, caressing her soft back. \"What do you think it means?\"\n\nShe was holding me tightly, bathed in euphoria. \"He loves me.\"\n\n\"Of course he does. But His messages are never simple. They are layered with meaning. Like His parables. This message is for you alone. What else do you think it means?\"\n\nI touched her softly and moved slowly inside of her, easing in and out as gently as I could. She sighed, her hips rolling with me, taking me. \"Unconditional love. We should love one another.\"\n\n\"Do you love me, Bethany?\" I asked, lengthening my stroke inside of her. \"As I love you? As He loves you?\"\n\nShe trembled. \"Completely. With every fiber of my soul.\"\n\n\"And do you love your sisters?\"\n\n\"I love them all.\"\n\n\"So is that all there is to the message?\" My hands continued caressing her young butt cheeks while I quietly plumbed her depths.\n\n\"No there's more. I know it,\" she said with absolute conviction. Bethany sat up, sinking down on my cock. She ground against me her eyes closed, before moving back and forth. \"It's not enough to feel it. You have to show it. It's why I couldn't hear the message until my body was one with yours. I'm sorry Joshua. But I had to.\" She looked at me, her lip quivering. \"I'm so, so sorry I did this to you. I know it's wrong. It's against everything you've taught me.\"\n\n\"Shhh. I was wrong. And I've been corrected. Your temple is weak, and you needed this. I understand now. How can I deny you, when it's His design? He knew this is what you needed, and I am His vessel. If this is what's required of me, how can I do other than accept His will?\"\n\n\"Joshua.\" She whispered my name reverently. \"Joshua, Joshua, Joshua.\" She pressed her lips to mine and started thrusting back feverishly.\n\nI adjusted the setting on my ring and pressed it to her temple again while we kissed. Her eyes opened wide, and I felt a huge orgasm pulse through her body. She tore her lips off of mine, and screamed, \"LOVE!\"\n\nAfter that, I turned down the message and took my time delivering it to her personally. I lay atop her, kissing her, feeling my own desire building, unable to hold back any more. Right before I came, I held my hands to her head, pressing the face of the ring against her temple, set to the highest setting. Her eyes rolled back in her head and she clutched me close while I came explosively inside of her.\n\nIt took a long time for her to slowly retreat from the dazzling peak of excitement she'd attained. I rolled off and held her while she cried for me. When her breathing calmed, and I felt her body relax in slumber, I disentangled myself from her limbs.\n\nLilith was lying on her bed, turned sideways. She was still watching us. I went to her and sat on the edge of her bed. She was looking at me in obvious wonder.\n\n\"Take care of her, hearing Him for the first time can be overwhelming,\" I said, reaching out and stroking her hair.\n\n\"Will I be able to hear Him someday?\"\n\n\"It's not my decision. But I believe so.\"\n\nHer hand crawled out from under the sheets and settled on my thigh. \"Will it be like that?\"\n\nI leaned over her, turning partly, my arm on her far side. \"I can't know. It's the first time I've been a channel for His message. That was what Bethany needed. Your needs may be different.\"\n\nHer hand moved higher, brushing against my balls. \"It was amazing to watch. I could see His spirit filling her. She was glowing with the power. I want to feel that. Please, Joshua.\"\n\nExciting words from a virgin but the time wasn't right. I bent over her face and kissed her on the forehead. \"I will intercede as much as I can. But it's His decision.\"\n\nShe pulled her covers aside, exposing her nubile naked body to me. \"Can we try, Joshua? Please?\"\n\nI covered her. \"You are a beautiful, loving companion, Lilith. Perhaps the most deserving of his message. But the message is not here. Not yet.\" I tucked her in, with a last small kiss on her full lips. \"Goodnight, Lilith. Pray for His blessing, and I will as well.\" \n\nI retreated to my room where I took a long soothing shower. It was good to get the lotion off of me. The burning sensation could be irritating if left on too long. I'd overdone it.\n\nI dried off, and relaxed in my bed, thoroughly satisfied with my experiment's initial results. \n\n* * *\n\nIt had all started innocently enough. Honestly.\n\nI'd lived a pampered life. My allowance took care of all my needs, my trust fund ensured my future, and my parents never denied me anything. I'd changed colleges often, learning what I wanted, never overly concerned with degrees. I eventually earned a few, even a Master's, but it wasn't my desire to have lots of parchments announcing my accomplishments. I learned because it was fun, and I loved the open University environment. That and co-eds.\n\nAfter nine years of college, I decided to take up writing. I thought I had a message, but it looked like nobody was interested in hearing it. I took more courses, attended seminars, joined workshops and wrote diligently. The rejections from publishers didn't bother me much. I knew my persistence would eventually pay off.\n\nMy parents resided in Chicago, but I lived on my Grandparent's vacant estate, a huge mansion with impeccable grounds in the heart of Dallas. The property was old and the area had changed drastically over the years until it was nearly swallowed by an industrial neighborhood. One simple comment to my mother about crime in the area and the security experts showed up, hardening the perimeter and installing alarms and cameras throughout the home and property. Living in the huge building was a little eerie, but I felt more secure after that.\n\nWomen had never been a problem. I wasn't bad looking and kept myself reasonably fit. Money was plentiful. I had more than my share of confidence and a liberal helping of the 'gift of gab'. I dated frequently but it never seemed to stick. I understood I was a little weird and had a sense of humor which got me in trouble sometimes. It seemed I drove the women away from me nearly as fast as I attracted them. \n\nThere was a \"Gentleman's Club\" less than a mile from my house and I wandered in on a whim, surprised to see the quality of the women dancing for dollars. It was Dallas, after all. On my initial foray, I stayed back at the bar, striking up a conversation with the bartender, drinking and tipping heavily. I enjoyed the show but turned away any efforts by the dancers to get me to buy a dance or take a visit to the VIP. I told myself I was collecting research for my writing. Tax-deductible none-the-less.\n\nI was lying in bed later, reliving my recent experience when I was struck with an odd desire. I wanted to date a stripper. Maybe a few. Sort of a trophy. They must hear hundreds of come-ons a night. How could I differentiate myself and win one over, without outright buying her? I had no doubt I could do that, but where was the fun, the challenge?\n\nI attended the Diamond Club for a couple of weeks, tipping the bouncers and bartenders heavily, and pumping them for information. I observed the dancers and narrowed down my choices. \n\nIt was during my fourth week that I made my move. A new dancer had arrived a few days earlier, young and nervous. She was prettier than most. Not a stacked Amazon, but a small girl with a nice curvy body, more like a cheerleader than a model. It took me a couple of nights to extract her story from Maria, my favorite bartender. Armed with information, I started my play.\n\nI never let her dance for me, but I had her sit and chat numerous times, tipping her more for her time than she made for most dances. I didn't go crazy, but I gave her enough to capture her attention. I ogled her body unashamedly but didn't comment on it other than to notice new outfits or jewelry or changes to her makeup and hairstyle. \n\nI learned her likes and dislikes, and eventually, after a couple of more weeks, found my leverage. \n\n\"I need to leave soon,\" I told her one evening, early, when the action hadn't picked up yet. She was drinking a Red Bull I'd bought her while I was working on my second Scotch. She was sitting close enough that our legs were touching.\n\n\"So early?\" she pouted.\n\nI knew that to her I was still just a wallet with legs, and if I left she'd miss out on fifty dollars or more of easy tips.\n\n\"Duty calls. I'm meeting Gerard Way and don't want to be late.\"\n\nHer eyes opened wide. \"Gerard Way? Of My Chemical Romance?\"\n\n\"Yeah,\" I said, playing it down. \"I'm doing an interview after their concert. You know them?\"\n\nKnow them? They were her favorite.\n\nIt only took about 15 minutes for me to get her to hang up her thong for the night, and hop in my Jaguar XK-E. It had taken some doing, but I had a back-stage pass and ten minutes with the band.\n\nThe combination of the concert, meeting with the band, and riding around in the most beautiful convertible ever made, had pretty little Bethany practically creaming her skin-tight jeans.\n\nOn the way home, she was absolutely gushing.\n\n\"Thanks for the company, Bethany. I appreciate it. Where can I drop you? Back at the Diamond?\"\n\nShe seemed surprised. \"Would you like to go somewhere? Have a drink or dance?\"\n\nI gave her an indulgent smile. \"Some other time. I have work to do, and I imagine you're probably exhausted from working all week.\"\n\nShe denied it emphatically. \"Exhausted? Impossible! I'm absolutely wired!\"\n\nI was almost to the club. \"I wish I didn't have so much to do. You're sweet. But tonight's no good for me. Drop you at the Club?\"\n\nShe pouted and agreed. Five minutes later I dropped her at the back door. I got out and helped her out of the car, giving her a short kiss, before turning her toward the building and sending her off with a pat on her rear. \"Get going before I change my mind.\"\n\nShe perked up at that and turned around. \"It's not too late. The evening's young.\"\n\nI grinned. \"And so are you. I had a good time, Bethany. Good night.\"\n\n* * *\n\nI avoided the club for a week, then made an appearance just long enough to say \"Hi,\" chat with my intended target, and tip her a twenty. \"Gotta run; things are hectic. Just wanted to see my favorite dancer.\"\n\nShe smiled from ear-to-ear. \"Am I your favorite?\"\n\nI took a chance and stroked her cheek. I knew touching was verboten, but between the tips to the bouncers and the innocuousness of the touch, I figured I was safe. \"Was there any doubt?\"\n\n\"Why don't you let me dance for you? No charge.\"\n\nI shook my head and gave her a wry smile. \"It's complicated, cutie. Not tonight. But I appreciate the offer.\" I leaned close. \"If I was going to let anybody dance for me, you know it would be you, right?\"\n\nHer delightful lips turned up at the edges, and she nodded.\n\n\"Alright, then I'm off. Good luck tonight, I hope you reel in a couple of whoppers.\"\n\nShe giggled, then leaned over and gave me a kiss on the cheek. \"Don't be a stranger, Joshua.\" \n\n* * *\n\nI made another appearance a few nights later. I ambled my way to the bar, chatted up Maria, and waited for my girl. I didn't have to wait long. \n\nShe came out of the back and nearly knocked over two other dancers getting to me. \"Hey handsome, can I dance for you?\" She already knew the answer and pulled up a stool next to me. \"Missed you.\"\n\nI ordered us drinks, giving Maria a couple of twenties and telling her to keep the change. \"How's it going?\" I asked my young victim.",
        "I loved her smile. \"Better now. You gonna stick around?\"\n\n\"For a bit. I've got to catch a show later.\"\n\nShe bit. \"Anyone I know?\"\n\n\"Comedy act. Zach Galifianakis is at the Improv.\" The name obviously meant nothing to her. \"The fat guy from The Hangover. The one that causes all the trouble. Great stand-up routine.\"\n\nShe gave me her patented pout. \"Pooh! I figured tonight I'd break you down for sure.\"\n\n\"You'll get your chance. I'll be around for a bit.\"\n\nI watched her turn toward the stage. \"Don't leave yet. I've got to do my turn on stage, but I'll be back soon, okay?\"\n\n\"Alright. But I can't stay long.\"\n\nShe blew me a kiss, then took off for the back rooms. \n\nMaria heckled me for toying with the girl, but I gave her my most innocent look. \"I enjoy her company. She's a sweetie.\"\n\n\"She is. Don't screw her over. If you just want to get laid, Darla or Raven will be cheaper, better, and you won't be breakin' any hearts.\"\n\nIt was the first time she'd ever been anything other than friendly. \"Relax Maria. Really, if that's what I wanted, the deal would have been done already. I like her.\"\n\nShe gave me a look, then marched off in a huff.\n\nBethany's show was good. She had the moves and knew how to get her audience involved. It was an enormous improvement over her first couple of nights. She had a great body and was both graceful and athletic. She looked my way often, and I felt she was making a special extra effort for me. She left the stage with her panties stuffed full of bills, her hands clutching dozens more. \n\nIt was a while before she reappeared, and I watched her stop and talk to Mario, the manager, before returning to me.\n\n\"How did you like it?\" she asked.\n\n\"You were great. Every guy in the place wanted you by the time you were done.\"\n\nShe grinned, raising one eyebrow. Cute trick. \"Every guy?\"\n\nI grinned back. \"What red-blooded male wouldn't?\"\n\n\"Can I dance for you?\"\n\n\"I think you just did.\"\n\nShe giggled. \"You know what I mean. In private.\"\n\nI shook my head slightly. \"You are a stubborn one, aren't you?\"\n\n\"Absolutely!\"\n\nI looked at my watch. \"I really need to leave soon. But I may just take you up on that, soon.\"\n\nShe squirmed, then blurted, \"Need company tonight? We're overstaffed, and I could slip away. Mario doesn't mind.\"\n\n\"Sure. I'd love the company. You sure you won't get in trouble?\"\n\n\"Nah, it's not like it's the weekend. Give me a few minutes?\"\n\n\"I'll be waiting outside.\"\n\n* * *\n\nAs we left, I told her I needed to stop by the house to grab the tickets. I could see she was suitably impressed with the estate from the moment the large wrought iron gate slowly swung open. She gawked at the entrance and the large front facade depicting the nine ancient muses in bas relief. \n\n\"Welcome to Corycia. You can come inside if you'd like. I'll only be a second.\"\n\nShe followed me in and looked around like she'd never been in a house before. The tickets were on a table near the entrance. I grabbed them and hustled her out the door before she could get any questions out.\n\nIn the car, her restraint evaporated. \"Wow! You live here?\"\n\n\"A man's gotta live somewhere.\"\n\n\"It's huge! How many roommates?\"\n\n\"Counting Hercules, one.\"\n\n\"Hercules?\" she asked.\n\n\"My dog.\"\n\nShe peppered me with questions, most of which I deflected, asking a few of my own. I talked a bit about my college days, and about my writing. \n\n\"What are you writing now?\"\n\n\"I'd love to tell you, but then I'd have to kill you,\" I told her, feigning seriousness.\n\nShe was taken aback, then giggled nervously. \"No, really.\"\n\n\"Maybe once you've danced for me, I'll tell you.\"\n\nThat shut her up for a while. But she never stopped grinning.\n\n* * *\n\nZach was hilarious, but the show wasn't long. I had reserved a table just off the stage, which got us involved in a couple of jokes, but nothing too painful. Clearly Bethany loved the attention. \n\nAs we drove back, we talked about his humor. Some of it was a bit intellectual, and I had to explain a few of the jokes, but we had a good time. \n\n\"Drop you off at the Club?\" I asked when we turned off the highway.\n\nShe suddenly seemed shy. \"Why don't we go to your place for a drink or something?\"\n\n\"Something?\"\n\nShe blushed. \"It's early. I'm having fun. I'd just hate for the evening to end.\"\n\nI reached over and patted her on the thigh. \"Alright. Why not?\"\n\nAt the house, I made us a couple of drinks, and we sat on the couch talking. I knew from Maria, and from our discussions, that she was a little religious, but had bounced from church to church and was having a theological crisis. Even though I hadn't stepped foot inside a church in the last decade, I figured the dozen years of bible school Mom had subjected me to, combined with nearly a Major's worth of Archeology, Psychology and a Bachelor's of Sociology might finally pay off.\n\nWe discussed the nature of religion, God's intention for us, the Bible, and various mystical and magical concepts. Her knowledge of the bible was very elementary, and she seemed impressed with my ability to spout passages on a whim. What can I say? I've got a good memory.\n\nI was playing with her, telling her about the Bible's history. \"What do you know of the Gospels?\"\n\n\"Matthew, Mark, Luke, John. I've read them completely, but some of it's hard to understand,\" she confessed.\n\n\"What about the lost Gospels?\"\n\n\"Lost?\"\n\n\"You know. There were probably around twenty Gospels altogether, most of them lost. Matthias, Peter, Judas, the Nazarenes.\"\n\nShe looked sufficiently confused. I excused myself and retrieved a few books from my Grandfather's library. He'd been fanatical about ancient writings and had quite the collection. I was going to play on that. I showed her some of the references, in English translations, and in Greek, doing the translation myself. She seemed suitably surprised. \n\n\"How come I never heard about these?\" she asked.\n\n\"It's not secret knowledge. Biblical scholars know all about them, but they're not common table talk.\" I was ready to tease her some more.\n\n\"I think I can trust you, Bethany. Can I?\" I lowered my voice to sound mysterious.\n\nShe nodded vehemently, crossing her heart. \"Completely, I swear.\"\n\n\"Wait here.\"\n\nI retrieved some of Grandpa's oldest parchments and returned with them. \"Have you heard of the Gospel of Mary?\"\n\nShe shook her head.\n\n\"It's one of the rediscovered Gospels. They found a partial Coptic translation a few years ago, but it's very short. It shows Mary, probably Mary Magdalene was a very powerful disciple, but she had a falling out with Peter.\" I laid out the scrolls. \"This is what I'm writing about. I have a nearly complete copy of her Gospel, written in the original Greek, as well as a previously unknown text. It's amazing. And nobody knows about it but you and me.\"\n\n\"Really?\" She gawked, leaning over and trying to make out the writing. It was actually an early history, but hey, it sounded good.\n\n\"Yes. I was looking for something else, but it practically fell into my hands. Once I started to translate it, I was worried that it might be too much for the Church to accept. It turns much of our understanding of women in the ancient world on its ear.\"\n\nShe reached out and touched it with a trembling hand. \"What does it say?\"\n\n\"I'm still working on the translation, but I don't know if I'll ever publish it. It's too controversial. Especially how I found it. I know that will never be believed.\"\n\nShe turned and stared at me. \"Why? How did you find it?\"\n\nI shook my head. \"No. I don't think I should say.\"\n\nShe scooted closer. \"Please? I won't tell. I promise.\"\n\nI laughed, resting my hand on her shoulder. Then I made myself go very still, staring off into the distance. I stayed quiet for a long time while she watched me. I held the pose until she was squirming nervously. Then I shook my head and looked into her eyes. \"Alright. He says you should be trusted.\"\n\n\"He?\"\n\n\"God. He speaks to me. He told me where to find it. I was in the mountains of Turkey, near Syria. He led me to a cave, where I found several ancient sealed pots. These scrolls were in them.\"\n\nIt was just a joke. I wanted to see how long she'd fall for it, but I was surprised at her reaction. She practically leaped off the couch, scrambling away from me, staring wide-eyed.\n\n\"What's wrong, Bethany?\" I asked, ready to confess to the prank.\n\n\"I ... I shouldn't be here. Not with you. I'm sorry I tease you about dancing. I didn't know.\"\n\n\"Didn't know what?\"\n\n\"Please!\" She cringed. \"I know I'm a sinner. I'm not a good person.\" Her eyes were brimming with tears. \"Please, Joshua, I have to go.\"\n\nI reached out for her hand to console her. \"You are a good person. What you have done so far with your life means little. Look at Mary Magdalene. She was one of Jesus' most important disciples. Many claim she was a prostitute, and full of sin, and yet Jesus cleansed her of seven demons, and it was she who was with him at the crucifixion, the burial, and it was Mary who discovered his empty tomb.\"\n\nShe had dropped to her knees beside the couch and was openly weeping. I felt lousy getting her so riled up. \"I have demons,\" she sobbed. \"I try to be good, but I keep doing bad things. Look at me, trying to seduce you, throwing myself at you. God, I'm so sorry.\"\n\nI reached out for her but she pulled away, nearly knocking over the coffee table, with the scrolls displayed. She shrieked, steadying it. \"See? I could ruin those, destroy something so important. I ... Please, Joshua, let me go.\"\n\nI had to settle her down. \"Stop it, Bethany!\" I snapped. She quieted. \"Now sit here beside me and be quiet.\"\n\nShe climbed back on the couch, sitting nervously.\n\nI closed my eyes and thought about how to fix what I'd screwed up, with my mindless prank. I didn't think she'd handle the truth well at that moment, so I dug my hole deeper.\n\n\"You are not bad. God wouldn't have directed me to you. He chose you for me, sent me to find you. I didn't understand His intention. Now I believe I do.\"\n\n\"What?\" she asked timidly.\n\n\"You are meant to be the first. The first woman to hear these holy scriptures. He wants it that way.\"\n\n\"Me?\" she asked, incredulously. \"Why me?\"\n\n\"Why does the sun rise in the east and set in the west? It is His will.\" I looked past her again, staring off into space.\n\n\"Is ... Is he talking to you now?\" she whispered.\n\nI waited a few more seconds, then turned back to her. \"Yes. He spoke to me. He wants you.\"\n\n\"I don't understand,\" she whimpered.\n\n\"Mary is the patroness of wayward women. He believes you could be headed down that road. No longer.\"\n\nShe stood up and started pacing. \"I can't, Joshua. I just can't. I'm not smart enough to understand this. I'm not worthy. Please, choose somebody else.\"\n\nI stood and went to her, taking her in my arms. \"I didn't choose you, Bethany. It's not my choice, and I cannot change His. I wouldn't try to. Would you?\"\n\nShe was shivering uncontrollably. \"No.\" She looked up at me, tears filling her eyes. \"Your will be done,\" she whispered.\n\nThe reference wasn't lost on me. \"I know this is a big shock. It was for me. Would you like to stay here tonight? I have plenty of room, and the guest room is always ready.\"\n\nShe spoke so softly, I could barely hear her reply. \"I'll have to call my sister.\"\n\n\"Call her.\"\n\nI showed her to her room and pointed out where the bathroom was. \"Make yourself at home. You know where the kitchen is if you feel like a snack or a drink. I'm right down the hall if you need me.\"\n\nI went to bed, still stunned by her reaction, and feeling more than a little guilty over what I'd started as a joke, and where it had led.\n\nI was more surprised when I was wakened by Bethany climbing into my bed. \"Bethany?\" I asked sleepily.\n\nShe slid up next to me and took me in her arms. \"I was praying to Mary Magdalene and I felt you might need me. She was Jesus' lover, wasn't she?\"\n\n\"It is commonly accepted that she was his companion.\" \n\n\"Maybe that's why I was brought to you. To be your companion.\"\n\nI held her and realized she was naked. It was tempting to have her, but my guilt was working overtime. This wasn't how I'd seen it playing out.\n\n\"If so, He hasn't told me.\" I held her, hugging her close. \"I'm celibate, Bethany. Ever since I was given these scrolls. I don't believe it's His intention to change that yet.\"\n\nI'll be damned if I know why I took that route.\n\nShe pulled away. \"I'm sorry. I didn't know.\"\n\nI pulled her close. \"It's okay. Stay here. Hold me. He loves you and wants you to be happy. I want you to be happy. You're a beautiful woman, and if I were to be with anyone, I'd be ecstatic if it were you.\"\n\nShe clung to me, lifting her leg onto mine. She cuddled in close. Too close. Her leg strayed too high and discovered my hardness. \"Oh, Joshua! I didn't mean to do that.\"\n\nI laughed softly. \"You do that to me often. It's fine. I'll survive. I can relieve myself if I have to.\"\n\nShe reached down and touched me. Her hand grasped my firmness, stroking it. \"I'll do that for you if you'd like. If it's allowed.\"\n\nI was going to tell her no, but guilt be damned, it felt too good. \"That would be nice, my sweet Bethany. Although I'm forbidden from lying with you, I'll let you assist me with this, if you're willing.\"\n\nShe stroked me easily, steadily. Her hand was warm and soft, as was her body. I pushed against her hand, and enjoyed her touch until I achieved my much needed release. Afterward, she left my bed and returned from my bathroom with a moist facecloth which she used to clean me. \n\nShe giggled. \"I have an urge to clean you with my hair, but I don't think it would do the job.\"\n\n\"What you've done for me tonight is perfect, sweet child. Bless you.\"\n\nGod help me, sometimes I'm such a bastard.\n\n* * *\n\nI woke early as was my wont, to an empty bed. Too bad, I had a morning erection which I wouldn't have minded some assistance with. Instead, I threw on my shorts, did my daily exercise, and ventured outside for my morning run.\n\nThere was a path around the perimeter wall, leaving a ten yard 'no-man's land' between the wall and any landscaping. The new security team had widened it and had motion-detectors and camera's targeting the space. It made for a nice running trail, which was my preferred way of staying in shape.\n\nTwo full laps was almost a mile, and I strove to complete at least three miles each morning. It worked up a nice sweat and got my mind cleared for the day. For a year or so, I'd worn Five-Fingers running shoes, and less than six months earlier had taken to running barefoot. The first couple of months had been hell, but now I knew I'd never be happy running in shoes. Running in nothing but a pair of loose running shorts was invigorating.\n\nThat morning I was contemplating my behavior with Bethany, and the prank I'd played on her. I was trying to figure out the best way to break the truth to her. Twenty minutes later, I still didn't have a good solution. I decided to simply play it off as a joke, and take my lumps.\n\nEntering the house, I found Bethany in the kitchen, cooking breakfast. She was wearing one of my t-shirts. Even though it reached her knees, it looked a lot better on her than it did on me. \n\n\"I hope you like eggs and bacon,\" she announced. \"I've got biscuits ready and I'll cook the eggs when you come out of the shower. How do you like yours?\"\n\n\"Over-easy would be nice,\" I said. I'd postpone the confession until after breakfast. I grovel better on a full stomach.\n\nI cleaned up and sat down to the table of food. It smelled great. The bacon was cooked a little more than I preferred, but who's complaining? I waited for Bethany to take a seat, letting her know how good everything looked and smelled.\n\nShe sat down near me, bowed her head, reached out and took my hand in hers. And waited.\n\nI bowed my head with hers and racked my brain for a prayer. I was stuck. Nothing was coming. After several seconds, I looked over to her and she smiled, giving my hand a squeeze.\n\n\"Amen,\" she said, with a tentative smile. She passed me the biscuits. \"It's so strange for me. To know that when you're praying, you may be having a real conversation. Did He say anything?\"\n\nI laughed. \"No Bethany. I pray just like you. If He listens a little closer sometimes, that's not my decision.\"\n\nAs soon as the words left my mouth, I could have kicked myself. I was digging a deeper hole each time I spoke. And yet, it was a role I fell into so easily, it felt easier to respond in character than come clean.\n\nThe eggs were good and I was enjoying a home cooked meal that I hadn't had to slave over myself. \"You make a mean breakfast.\"\n\n\"Thanks. I had to cook growing up.\" Her eggs were scrambled and she chased them around her plate with her biscuits. \"Did you really mean it last night?\"\n\nI wasn't sure what she was referring to, and I gave her a curious look.\n\n\"You know, about God choosing me for you? His having a purpose for me.\" She reached out and put her hand on my arm. \"You having a purpose for me.\"\n\nDamn it. How did I get myself into these predicaments? I certainly did have a purpose for her, but it wasn't what she was thinking. Or was it?\n\n\"I'm unclear myself,\" I told her, once more taking the coward's route and continuing the charade. \"I know I've been drawn to you and you're the first person I've ever felt the need to share His message with. But it's still so early. The translation is going slowly; I'm lucky to get through even a single line in a day.\"\n\nShe seemed to concentrate carefully on my words, her attention unwavering. She had a perplexed look, her forehead crinkling cutely. A huge smile enveloped her face and she sat upright. \"I know! That's my purpose! To help you. Make things easier for you. Take away the tedious everyday jobs, and help with any stress. I bet that's what He wants me here for. I know it is. It just feels so right when I say it out loud.\"\n\n\"That's very kind of you Bethany, but you have your own life to live. Your sister to take care of.\"\n\nA frown appeared, erasing that pretty smile, breaking my heart. \"What kind of job can I get now? I can't go back to dancing. I've never had a real job that made enough money for Lilith to keep going to school and still support us.\"\n\n\"Has He told you to stop dancing?\" I asked, reaching out and holding her hand.\n\n\"No. He doesn't talk to me. But it doesn't seem right, does it?\"\n\nI shrugged. \"Maybe there's a purpose to it. His reasons are not for us to try to understand. Perhaps He wants you to understand men, their base desires, and how to influence them. Or it could be He wants you to work with the women there, to see His path. I don't know and wouldn't presume to. If not for that job I never would have met you.\"\n\n\"Couldn't you just ask Him?\" she pleaded.\n\nI shook my head. \"Ask Him your purpose? That's between you and He. I know this much. He sees no evil in you. Nor do I.\" I closed my eyes and thought about it for a moment. I wouldn't mind having her around and it could be kind of fun to see where I could take this. Even if it wasn't the most decent thing I'd ever done. Believe it or not, it wasn't the worst.\n\n\"Does that mean it would be okay with you if I were around here, then? That I could help you?\" she pleaded piteously.\n\n\"If you feel that's your calling, I would be the last one to interfere. I'd welcome your presence. You certainly make a dark dreary house a lot more pleasant.\"\n\n\"Dreary? Here?\" she asked.\n\n\"No longer. Not when you're around.\"\n\nThe hug was nice. Luckily she cut it off before my response was too obvious. I mean, I was supposed to be a spiritual, celibate, scholar. I should be able to make it at least twelve hours between tending. Right?\n\n* * *\n\nI get it now. The whole admonition against idle hands. I didn't have a job. Didn't need one, with more cash than I can readily spend. Almost ten years of educational lollygagging behind me. I get up every day with nothing to look forward to except for my next kick.",
        "What had started as a prank, a thoughtless joke, suddenly, without the least hint or warning, became an obsession. \n\nBethany would stop by during the day and check on me. Quiz me on my progress. Sit by my feet and watch me work. Then she'd be gone, off dancing, before straggling in around two to three a.m., to get me settled in before she wandered back home. Two or three times a week I'd stop by the club. Those nights, when she got to my place, she'd take care of my needs, using just her gentle hand. Some of those nights she'd sleep over, in her own bed of course.\n\nMost of her days off she'd spend with me and I would take the opportunity to teach her a little about the less well known early Christian writings, such as the Gospels of Peter, Thomas and Nicodemus. Slowly, just a few lines at a time, I'd share with her, question her, get her mind going.\n\nBethany wasn't a Rhodes Scholar, but she wasn't stupid. She caught on readily enough, especially with me carefully laying out the path before her.\n\nAnd whenever she wasn't around, I myself was studying, learning, and building on my original little prank gone wild. I was accumulating materials, samples, copies and translations of dozens of works. I was purchasing every ancient document I could get my hands on.\n\nI was writing the missing pages of the Gospel of Mary.\n\n* * * \n\nIt was a Friday around sixish, maybe three weeks into our new relationship. I'd been contemplating stopping by the club and watching pretty Bethany and her fellow dancers. But I was still in heavy negotiations to get my hands on some pieces of mostly blank ancient parchment. You can imagine my intent. I'd tracked some down, but it was from the wrong part of the world, and absurdly expensive. Even I realized my spur-of-the-moment prank was really getting out of hand. Just the day before, Bethany had brought over another dancer before work, to get me to confirm something she'd been discussing.\n\n\"I thought we were going to keep this a secret?\" I had reminded her in private.\n\n\"I thought that was just about how you found it, not the message,\" she explained, obviously distraught. \"You're not mad are you? I'm sorry.\"\n\n\"Let's try to keep the presence of the new Gospel quiet a little longer. We can still talk about older versions and other books. Or anything else that interests you.\" I tousled her hair. \"And in the future, a little notice before bringing over pretty girls. Even I have a little pride, and I don't want people to think I sit around in my bathrobe all day.\"\n\nShe reached down and adjusted my belt. \"You look great in it. It makes you look distinguished.\"\n\n\"Distinguished? Barefoot and half-naked?\"\n\n\"Handsome and debonair.\" She gave me a tug. \"Let's go. You're keeping our guest waiting.\"\n\nWhat interested them was whether Mary Magdalene was a prostitute or not. I explained the confusion, the unnamed \"sinner\" who washed Jesus' feet with her hair, and Mary Magdalene showing up in the writings shortly thereafter. The issue of the demons cast out of her. The confusion with Mary of Bethany who anointed Jesus. And the teaching of Pope Gregory in the sixth century, referring to her as a prostitute, and lumping all the Marys together. In each case I'd bring out multiple versions of the Bible, to show the different translations, and whenever possible trace it back to the early Greek and Latin texts.\n\n\"In nineteen eighty-six the Catholic Church announced that she was not a prostitute, clearing up fifteen hundred years of misrepresentation on their part,\" I explained.\n\nI left them with something to think about. Was the decision to slander MM purposeful, and if so, why? Was the male dominated sixth-century Catholic church attempting to discredit the apostle to the apostles? \n\n* * *\n\nFriday evening she was back alone. \"There's a lot of weird stuff on the Internet about her, you know?\" she asked me.\n\n\"I know.\"\n\n\"The Gospel of Philip says Mary was Jesus' companion, and he kissed her a lot, and the other women were jealous, and wanted to know why he loved her best.\" She said it as if she was in a hurry to get it out, and looked at me challengingly as if I was going to deny it.\n\nI smiled for her patiently. \"Does it? Have you read it? The original?\"\n\nShe nodded, \"I read two different versions.\"\n\nI picked up my notebook and checked my notes. Philip 59. I retrieved my copy of the original Coptic Gospel, with some translations. I spread the sheets out before her, alongside the translations. \"The danger, Bethany, is in the interpretation and translation. It's important you understand, to see the issues I'm facing with my effort. Here is a popular translation.\n\n\"As for the Wisdom who is called 'the barren', she is the mother of the angels. And the companion of [the saviour was Mar]y Ma[gda]lene. [Christ loved] M[ary] more than [all] the disci[ples, and used to] kiss her [softly] on her [mouth]. The rest of [the other women saw his love for Mary]. They said to him \"Why do you love [her] more than all of us?\" The Savior answered and said to them, \"Why do I not love you like her?\"\n\n\"That's what I said,\" she argued. \"He kissed her a lot and loved her the most. And she was his companion.\"\n\n\"Now look at the original. There are many gaps, lacunae, in this parchment, and this is the most complete version of this passage. With those unknown parts removed from the translation, what does it say?\" I crossed out the parts in brackets.\n\n\"As for the Wisdom who is called 'the barren', she is the mother of the angels. And the companion of ---------------y Ma---lene. ------ Ma-- more than ---- the disci--------------- kiss her ------ on her ------. The rest of ---------------. They said to him \"Why do you love ----- more than all of us?\" The Savior answered and said to them, \"Why do I not love you like her?\"\n\n\"It still says she was his companion, and he kissed her, and loved her more than the other women.\" She sounded triumphant.\n\n\"Probably. But kissing had many meanings. Some believe it meant he shared knowledge with her the most. That is evident in other writings. And he may have kissed her on the hand, that's a popular translation. Was it the women followers who asked why he loved her most, or other disciples? Mysteries within mysteries. Even the unbroken part uses words and phrases that are hard to translate. We shouldn't assume anything, and only believe half of what we read.\" I pushed the papers to the side. \"These are often called Gnostic Gospels, although some argue that Philip's is not Gnostic. The church considered these heretical and tried to have them destroyed.\"\n\n\"I don't get it,\" she answered. \"Was she his girlfriend or not?\"\n\nI grinned and turned to an earlier page. \"If we believe this writing, here's an interesting argument.\" I turned to Philip 36. \n\n\"There were three who always walked with the Lord: Mary, his mother, and her sister, and Magdalene, the one who was called his companion. His sister and his mother and his companion were each a Mary.\"\n\nBefore she could bring up any more questions, I pulled over the original, holding up my hand to stave her off. \"Here. In the original. She was called his \"koin\u00f4nos\". We might translate that as 'sharer', or 'partner', or even 'consort.' Note that they did not use the word for wife. Their relationship even here is not clear.\"\n\n\"What do you think it means?\" she asked.\n\nHell, what did I know? I was winging it. \"Let's take a few bits of this and put it together. She was his companion and not his wife. If she was intimate with him, then why not his wife? Perhaps because she is called 'the barren', or is 'the barren' his mother? And if it is the Magdalene, how do they know she is barren? Obviously, she can't bear children. But how do they know that, if she's not doing things where she might have children? She's his companion, he kisses her often, he loves her more than all the others. Oh yeah, and after traveling all around with him, she's called 'barren'. Pretty convincing, at least as far as Philip goes.\"\n\n\"So you believe she might be his lover?\" she asked.\n\nI smiled. \"I know she was. As least according to the complete Gospel of Mary.\"\n\nShe raised her hands to her mouth in surprise. \"Oh my God! No wonder you're afraid to share your document.\"\n\nI put my hand on her knee. \"Bethany. We don't say 'God' in this house unless we mean it.\"\n\nShe blushed. \"Oh. I'm sorry. Sometimes I forget. I'll try harder.\"\n\n\"Keep this between us, okay? It's not time to share this knowledge yet. At least not until I've finished the translation and had it verified. Understood?\"\n\n\"Of course, Joshua. I understand. Thanks for sharing it with me.\"\n\nI gave her a big grin and a wink. \"Wasn't my decision.\" I gave a knowing look up to the heavens.\n\nShe blushed. \"I still can't believe I was chosen.\"\n\nI put my hand on her shoulder. \"Believe it, beautiful.\"\n\nShe put her hand over mine, edging closer. \"Do you think I was meant to be that kind of 'companion' for you?\"\n\n\"I don't know. Believe me, I wish I did. All I know is that you were meant to be here.\"\n\n\"Can't you ask?\" she pleaded, moving even closer, placing her hand on my thigh.\n\n\"Asking doesn't seem to work that well. My job isn't to ask, mine is to listen. I'm sure if He expects more from you we will find out.\"\n\n\"Would you like me to be your companion? In all ways?\" Her hand was being naughty, and I was fully hard for her when she brushed against my cock.\n\n\"I would love that. I was drawn to you from the first I saw you. Whether that was divine intervention or not, you are a beautiful, good-hearted woman, and you drive me crazy. Times like this it makes it hard to remember my vow.\"\n\n\"Let me relieve you, Joshua, please.\"\n\nWhen I didn't deny her, she knelt before me and pulled at my shorts. I raised my hips so she could remove them. She placed her hand on my cock, resting her head on my thigh and stroked me.\n\nThis wasn't anything new, we'd been doing it for a couple of weeks, but she seemed to be in a talkative, curious mood. \"You once told me that when I got you hard, you would relieve yourself. Isn't that a sin?\"\n\nI shook my head. \"Nowhere in the Bible does it call masturbation a sin.\" I leaned over and caressed her hair. \"I would not lead you into sin. The Bible says nothing about masturbation. It does imply that sexual fantasies and pornography would be sinful. If I were to concentrate on the act of having sex with you, while you did this, I'm fairly certain that would be frowned upon.\"\n\nShe slowed her hand movement. \"If you're not thinking of having sex with me, what are you thinking about?\"\n\n\"About what a generous thing you are doing, and how beautiful and desirable you are.\"\n\n\"How about the sin of Onan? He got killed for it.\"\n\n\"He wasn't masturbating. He was having sex with his sister-in-law, and pulling out, 'spilling his seed on the ground', so she wouldn't get pregnant.\"\n\n\"So spilling your seed on the ground would be bad, wouldn't it?\" she asked.\n\n\"I don't think the situation is the same.\"\n\n\"Better safe than sorry, though, right?\"\n\n\"Perhaps we should be neat,\" I answered, enjoying her gentle strokes.\n\n\"What does the Bible say about oral sex,\" she asked shortly after. I looked down at her and saw she was blushing.\n\n\"Nothing specific that I recall. It's clearly allowed between husband and wife, but otherwise, it's that gray area of intention and lusting of the mind.\"\n\n\"Could you avoid lusting of the mind if I were to do it?\"\n\n\"The danger is with you also. Could you avoid it?\"\n\nShe nodded. \"All I can think about is making you happy. When you get hard for me, I feel bad about it. I wonder even if I should be around you. All I want to do is help you, and make you happy. I can do it without dwelling on doing more.\"\n\n\"If we can stop at that, perhaps it would be okay,\" I told her softly. \n\nShe looked up at me and scooted forward, bringing her lips to my shaft and kissing it lightly. \"Is it okay?\"\n\nI leaned back and closed my eyes. \"Yes.\"\n\nI felt her warm mouth engulf me and sighed deeply. She pulled away abruptly. \"Is something wrong? Are you lusting?\" she asked, her voice tinged with panic.\n\nI reached down and tilted her chin up so she was looking at me. \"No. That was beautiful. Relaxing and warming. Thank you.\" I held my cock out to her and pressed it against her lips. \n\nShe opened them willingly and took me in her mouth again. I leaned back to watch her, careful not to sigh too loudly. She watched me for a few moments, then closed her eyes and concentrated on what she was doing.\n\nIt was nice. Not crazy, passionate and lustful, just a simple effort to serve me. I accepted her wonderful gift, and after only a few minutes, warned her of my impending release.\n\nShe kept her mouth on me, stroking with her hand, and watched me. Those pretty big brown eyes were mesmerizing, and I stifled a groan as I came in her mouth. She continued gamely, sucking me dry, careful to clean every last drop off of me.\n\nShe looked up and grinned. \"No seed on the ground.\"\n\n\"Not a drop. Thank you.\"\n\n* * *\n\nI knew not to expect Bethany until late on Saturdays, but I was still hoping for a replay of her actions of the night before. My efforts were starting to pay off, in terms of both research and Bethany. I had accumulated a huge library of the various lost Gospels and other Gnostic texts and was hot on the trail of a possible cache of ancient parchments of the right approximate age and location. \n\nSay what you want about the wars in the Middle East; for antiquities collectors, it was a windfall. Stuff was showing up on the black market in droves, and anything was available for a price. You just needed to know where to ask and I was learning.\n\nI don't believe I'd ever worked as hard at anything in my life. I was spending my entire day buried in ancient texts and biblical writings, surprising myself with some of my findings. I was deep in thought, outlining my 'translated' first three chapters of the Gospel of Mary when I was surprised to hear a knocking at my door. Way too early for Bethany, and she didn't knock.\n\nHercules barked, and ran toward the door. Definitely not Bethany. \"Sit,\" I commanded him.\n\nI opened the door and found a cute little ginger standing on my doorstep. The resemblance was uncanny. \"Lilith?\" \n\nShe was glaring at me, \"We need to talk.\"\n\nI opened the door, inviting her in. She looked around as she walked into the entrance, then turned and barked at me. \"What the fuck is going on with you and my sister?\"\n\nHercules growled and I hushed him. \"Come in. We should talk. I've asked her to bring you by, but she's been reluctant.\"\n\nThe little firebrand crossed her arms and continued to glare at me.\n\n\"Lilith, please. I'll answer any questions you have, and explain what I can. Come in and have a seat. Let me get you something to drink.\" I walked toward the living room where I was working and gestured toward the couch. \"I'm having wine; can I pour you a glass?\" I knew she wasn't old enough to drink, but hell, who was going to tell? Plenty of wine in the Bible and they certainly didn't card anybody.\n\nShe sat down in a corner of the couch. \"Alright.\"\n\nI poured her a large glass and passed it to her. I sat on the other end of the couch, my papers all over the coffee table where I'd been working. I leaned over and cleared a space for her drink, putting a coaster down. \"I'm really glad you are here.\"\n\n\"I bet,\" she muttered, before taking a big sip of her drink.\n\n\"I am. I've wanted to meet you. Your sister adores you, you know.\"\n\n\"What's going on? She spends all her time here, even sleeping over, but she says you guys aren't in a relationship.\"\n\n\"That's not strictly true. We're in a relationship, if not the kind you're thinking of. She's my companion, friend, confidante, and student.\"\n\n\"What the hell is that supposed to mean?\"\n\nDamn, this cute little redhead was feisty. I put my glass down and looked at her disapprovingly. \"Please, Lilith. I've welcomed you into my home, and I'm willing to be open and honest with you. I would ask you to refrain from speaking blasphemy under my roof.\"\n\n\"What are you, some kind of minister?\"\n\nI sighed and picked up my glass, taking a sip. \"No. I'm a theologian, and a researcher, and I'm a strong believer in Christ. I'm trying to live a life of Faith and Grace.\"\n\n\"Right. And you're practically shacking up with a stripper.\"\n\n\"Matthew seven-one,\" I told her softly.\n\n\"What?\"\n\n\"Judge not, that ye be not judged.\" I could see her face flushing whether it was anger or embarrassment I couldn't say for sure.\n\n\"Alright then, are you going to tell me what's going on?\"\n\nI smiled for her. \"Matthew seven-eight.\"\n\nShe raised her eyebrows at me, giving me an expectant look.\n\n\"Ask, and it shall be given you; seek, and ye shall find; knock, and it shall be opened unto you.\"\n\n\"Jesus! Is it going to be like this all night?\"\n\nIt was my turn to glare at her. \"I hope that was a prayer and not a swear.\"\n\nThis time, she did blush. \"Okay, I'm sorry. Can you answer me straight?\"\n\n\"Ask, and I'll answer what I can.\"\n\n\"What's the deal with Bethany?\"\n\nAh, the $64,000 question. I'd fallen into my role of spiritual adviser and holy man so easily with Bethany, I had to wonder if her sister would accept it. In for a penny, in for a pound.\n\nAnd yes, I know I'm an asshole.\n\n\"I'm doing something important, and when she found out about it, she decided to help,\" I explained.\n\n\"How important?\"\n\n\"We won't know for sure until I've completed the work, but it's potentially the most important religious find in decades, maybe longer.\"\n\nShe waved at my papers scattered across the table. \"And this is your work?\"\n\nI nodded. \"A small part of it.\"\n\n\"How are you having her 'help' you?\" Lilith asked, taking another long drink from her glass.\n\n\"I've not asked her to do anything. When I told her what I was doing, she examined her conscience and meditated on her purpose. She came to me and offered to be my companion, to help with the day-to-day distractions so I could more thoroughly dedicate myself to this task.\"\n\n\"Some kind of God-damned maid?\"\n\nI stood rapidly, staring down at her. \"You will not blaspheme in this house! I've been courteous, and tolerant, but enough is enough. If you cannot keep a civil tongue in your mouth, you'll have to leave. I don't need your type in here.\"\n\n\"My type? What is my type?\"\n\n\"Ignorant, judgmental heathen. The curse of a generation. The antithesis of your sister.\"\n\nShe laughed, mockingly. \"You think my sister is some kind of saint? Shows how much you know.\"\n\n\"I know her very well. We've talked at length about her past and her struggles. I can't believe you would say a single bad thing about the woman who has toiled doing distasteful things, so she could earn enough to take care of you and put you through school. Provide you the opportunities she couldn't have. She loves you without limit and you are an ingrate. I'd like you to leave now.\"\n\n\"She's a slut! She takes her clothes off for money, and rubs herself against men! She's trash! You'll probably catch some disease from her if you haven't already.\"\n\n\"She's a lost lamb struggling to find her way, with an ungrateful witch for a sibling. She's a fallen Angel with a heart of gold. You are a beautiful siren without any heart at all. You don't deserve her. Now I'll ask you to leave before Hercules over there escorts you out.\"\n\n\"How can you say she's an Angel!\" \n\n\"I've seen her soul, Lilith. It's beautiful, without blemish.\"\n\n\"You barely know her! How can you judge me, say those horrible things?\"\n\n\"We're judged by our actions. It's all I have to go by. That and the words of your sister. They are in direct contrast. I prefer to go by what I see, rather than what I'm told. It's your own actions that condemn you.\"\n\nShe sat down crying. \"You're going to hurt her. I know you are. Don't do it. Let her go. She can't take it again. It will kill her. Please, just let her go.\"",
        "Wow. Unexpected surprise. I sat down beside her. \"I'm not holding her here. She's here of her own choice. I have no desire to hurt her. Just the opposite.\"\n\n\"Who are you kidding? Look at this place! We live in a tiny efficiency apartment. With you, here, she's in the lap of luxury. How can she resist it? I know you give her money. She's not a whore. She only dances. That's all. She's not like some of the others.\"\n\n\"I know, Lilith. Is it wrong that I open my home to her? I ask nothing. I allow her to do what she desires. I provide funds for the upkeep and she's generous enough to do some shopping. I'm not paying her to be here, although I would gladly if she would take it. I'm grateful to her for trying to help me in my work. It's important. Very important. She's doing a good thing.\"\n\n\"Are you fucking her?\"\n\n\"No, Lilith. I have no knowledge of her in that manner. I consort with no women. I'm celibate. I have been since I first received my calling.\"\n\n\"Celibate?\"\n\n\"Yes. Celibate. I have not engaged in conjugal relations with a woman in a very long time.\" All true. Over two months. To someone who was as used to getting laid as I was, it was a very long time.\n\n\"Why does she sleep with you?\"\n\nI stood and held my hand out to her. \"Please, come with me.\"\n\nShe hesitantly took my hand and let me lead her to the back of the house. \"This is her room when she is exhausted from working until two a.m. and coming over to help me. This is where she sleeps.\" I drew her over to the bathroom. \"This is her bathroom, and those are her things.\" I waved my hand at the belongings. \"Perhaps it is wrong in your eyes, but yes, I gave her money to buy whatever she needed for when she is here. She wanted to pay for it herself, but I encouraged her to save her money to take care of you.\" A little dig, I know.\n\nAfter letting her look around a bit, I took her past two empty rooms, to my bedroom. \"This is where I sleep. Alone. Look, I'm not immune to beautiful women. I'm a red-blooded man. I could not possibly sleep in a bed with your sister. I'm not that strong. It would tempt me too much.\"\n\nI pulled her by the hand, striding purposefully to the study. \"This is where I conduct much of my studies.\"\n\nShe looked around in wonder. \"You have a lot of books. What are all those old papers?\"\n\n\"Some are original, most are very precise copies of the oldest religious texts I can find. I prefer to go to the source for information, not through interpreted works. It's part of my research.\"\n\n\"What did you say you were doing?\" she asked.\n\n\"I didn't say, but I don't mind telling you. A translation. I have a unique, unknown document which is the finest of its type ever discovered. I believe I was called to find it, and it is my purpose to translate it and make it known. It's a ... stressful task. I doubt its discovery and message will be welcomed.\"\n\n\"Then why do you do it?\"\n\n\"I have no choice. It's my fate. Not one I would have chosen.\"\n\nI was still holding her hand, and could feel its moistness. I led her slowly back out to the living area, where I urged her to sit down.\n\n\"Let me be frank with you. Open your eyes, Lilith. I'm wealthy. I've been told I'm not bad looking. At one point in my life, I had many women. Many. Do you honestly believe I would have difficulty finding female companionship?\"\n\nShe stared into my eyes for a moment, then lowered hers. \"No. I'm sure you'd have no problem at all.\"\n\n\"My life has taken a turn. I feel I have a larger purpose. Meaning. Your sister is a comfort. Not a sex toy. She makes my life easier, and I love her for it.\" I moved closer to the young woman and put my arm around her shoulders. \"I'm sorry I was cruel to you earlier. I judged too quickly.\" I laughed. \"Believe me, sweet child, I too have a bevy of faults. I am hardly infallible.\"\n\nI leaned over and lifted her by the chin, making her look at me. \"I understand now. It was a sham. You love your sister. With all your heart. The words were not against her, they were meant to deter me. Second guess her purpose, perhaps. You want to protect her from further hurt. This is a good and courageous thing, confronting me when you knew nothing of me. I love you for that.\"\n\n\"You can't say you love me. You don't even know me.\"\n\n\"You're wrong, Lilith. I love you for what you've done. I'm not in love with you, and I have no desire to make love to you. I simply love you for who you are. Can you accept that?\"\n\n\"Is that how you love Bethany?\"\n\n\"Yes, but even deeper. I've had more time to see the wonderful person she is. You know that, don't you? How incredible a person your sister is?\"\n\nShe nodded. \"I can't let you hurt her. She's the best person in the world.\"\n\nI felt a tear in my eye and was momentarily astounded how deeply into this role I could sink, and how easily. \"You may be right. The best person I've ever met. You're a very lucky woman to have her in your life.\"\n\n\"Promise me. Promise me you won't destroy her.\"\n\nI leaned over and kissed her on the forehead. \"I promise.\"\n\nOkay, I know. I'm a bastard. Don't judge me, until you've got something that looks like this sweet young thing on the hook.\n\n\"Why don't you stay? I can make you something to eat. I'll answer any questions you have. Stay until your sister arrives. We can talk then.\"\n\n\"Aren't I taking you away from your work?\"\n\n\"There is no work more worthy than the healing of a soul, or the comforting of one in need.\"\n\n\"Do you think that's what I am?\"\n\n\"I think you are more important to me than anything else I could possibly be doing,\" I told her softly.\n\n\"Why? You don't even know me?\"\n\nI sat back in the couch, relaxing. I let my eyes become unfocused, gazing forward. I remained quiet long enough for her to start squirming.\n\n\"Yes. The rest can wait. I'm here for you, Lilith. How can I serve you?\"\n\n\"Serve me?\"\n\n\"I'm free to answer any question. I'll hide nothing from you. If you're not happy with my answers, I will support you in any decision you make about your sister. I will send her away if you so desire. What can I do for you? How can I help you understand? Command me.\"\n\n\"I ... I don't want to command you.\"\n\n\"Sweet child. I am but a tool. Wield me. Give me a purpose, and I swear I will fulfill it.\"\n\n\"Do you swear you don't have sex with her?\"\n\n\"We don't engage in coitus. There are times when I do get excited. When I get an erection. I can't help it. I have desires and needs. I struggle to set them aside as a distraction. She has used her hand to ... relieve me.\"\n\n\"Isn't that a sin? How can you do God's work if you're doing that?\"\n\n\"I'm single. Your sister is single. I avoid thinking lustful thoughts, as does she. She performs it as a loving service. I accept it in the spirit it's given.\" I bowed my head. \"I would prefer not to, but it's difficult. As a vessel for His works, I am a poor, poor example. I'm weak. I try, Lilith, as God is my witness, I try.\"\n\n\"You're not excited by my presence though, are you?\"\n\n\"No, I am not. I could be, easily. You are quite beautiful you know, both inside and out. For some reason, God has found it necessary to tempt me. Bethany is the physical and spiritual incarnation of my desires. Why she would be chosen to be my companion during this period of celibacy is beyond my understanding. I won't question it.\"\n\n\"You like her that much?\"\n\n\"I love her that much.\"\n\nShe got quiet for a second. \"What are you translating?\"\n\nI tried to portray a struggle. I sat back again, quiet, glazed eyed. I maintained it longer. Blinking with exaggeration, I turned to her. \"Whatever you want to know. I have a complete extant copy of the Gospel of Mary. There are only four partial copies known. The fact that there are that many shows it was an important work nearly nineteen hundred years ago. I am translating it.\"\n\n\"It's important?\"\n\n\"Very. I'm only a couple of pages into the translation, and already the findings are devastating to the Christian faith as we know it.\"\n\n\"Why?\"\n\n\"Mary Magdalene was the foremost disciple of Jesus. The closest to him both spiritually and physically,\" I explained.\n\n\"Physically?\"\n\n\"Yes. She was his lover. His companion in every sense of the word. She did not bear him children.\"\n\n\"That paper says that?\"\n\n\"Without equivocation.\"\n\n\"Bethany is more involved than just as a maid, isn't she?\"\n\nI nodded. \"She has been chosen to be the first to receive the word. To carry it to others. I ... I'm afraid for her. This is not an easy or even desirable task.\"\n\n\"She was chosen? How?\"\n\n\"I'd prefer not to answer. I don't think you're ready for the answer. I believe it will set us back.\"\n\n\"You said I could command you. You're my tool. I get to wield you. How was she chosen? How do you know for sure? She's nobody special. Why would God choose someone like her? A stripper.\"\n\n\"Why would Jesus choose someone like Mary Magdalene? A woman possessed by demons. According to many, a fallen woman. Yet she became the right hand of Jesus. Supporting his followers, providing money when needed, comforting him, learning. The disciple to the disciples. The one person that most accounts agree first saw the risen Christ.\"\n\n\"But how did you know?\"\n\n\"Please, Lilith.\"\n\n\"Answer me! You're mine to command!\"\n\n\"He ... God communicates with me.\"\n\n\"Communicates? How?\"\n\n\"He speaks to me, Lilith. It was He who told me where to find the document, in a vast desert. He who told me what my role was. And He guided me to your sister. I'm sorry. I wouldn't share that burden with anyone if I had a choice. It's too difficult. Too dangerous. I'm sorry.\"\n\n\"He ... he spoke to you tonight, didn't he?\"\n\nI nodded slowly. \"Twice.\"\n\n\"He gave you to me to command.\"\n\n\"He did.\"\n\n\"That was more important than your studies, your translation?\"\n\n\"Apparently. It is not mine to question. When He speaks, I obey. I ... I cannot do otherwise.\"\n\n\"If I told you to get up and run around the building naked, you'd do it, wouldn't you?\"\n\n\"I would. But you wouldn't. You're not mean or capricious, and He knows that.\"\n\n\"Do it. Strip and run around the building.\"\n\nDamn, she was turning out to be a pain. Rotten thing. Why couldn't she be more like her sister?\n\nI took off my robe and pulled off my shorts. I started toward the doorway, and she jumped off the couch and ran to me, grabbing my arm. \"You would, wouldn't you?\"\n\n\"Whatever you need in this moment, Lilith.\"\n\nShe took me by the hand and brought me back to the couch. \"I'm sorry. I shouldn't have done that.\"\n\n\"I stand by my previous statement. You are neither mean nor capricious. If you needed me to do that for you, there is a reason. I will not question it.\"\n\nShe looked down at my crotch. \"Aren't I pretty? How come she's the only one that excites you? Is it because God chose her for you?\"\n\n\"My celibacy is my choice. Not a directive. I chose to avoid the temptation. God has not taken away my desire. I'm not even sure the decision is the correct one, but I prefer to live by it. Relationships in the past were ... distracting.\"\n\n\"Are you saying you could get excited over me? If I chose to wield you in that way? You would do it?\"\n\n\"Yes. You are immensely desirable. Second only to your sister in my eyes. More beautiful than she is. One word, one whisper, one touch, and I would not be able to resist you. I would ask you not to do that to me.\"\n\nShe grinned mischievously, sidling closer. \"One touch, like this?\" she asked, running her tender young hand along the inside of my thigh. She brought her lips to my ear. \"One whisper, telling you that I desire you as well. That I would give myself to you.\"\n\nShe took my earlobe between her teeth and nibbled on it. \"One word, to convey the extent of that offer?\" She hesitated a second, then clearly, quietly spoke. \"Virgin.\"\n\nI leaned backward, as if escaping, allowing a soft whimper to escape my lips. She pursued me, wickedly, her hand grasping my cock, as it hardened in her grasp.\n\n\"You act all high and mighty,\" she snarled, \"Better than us, but you're just a man, aren't you? You want me like they all do. I can see it, feel it, smell it on you.\"\n\nI closed my eyes and spoke softly. \"I never denied it. You are extremely desirable. I would not act on it. I beg you not to. Don't do this to me, Lilith. Please.\"\n\n\"Mine to command, you said. He said. He gave you to me. Mine to wield. I think I'd like to wield this sword.\" She held my cock firmly in her hand stroking it.\n\n\"Not like this. I will answer your questions, provide guidance. Help you to understand. I will keep nothing from you about my work or my relationship with your sister. You don't have to do this. It was not His intention.\"\n\nShe barked a vicious little laugh. \"Oh, so now you presume to know His intention? Perhaps this is exactly what he wanted. Show you your folly. Did he ask you to be celibate? Why would he call a stripper and 'fallen Angel' to your side, if not for this? Who died and made you God, Holy man? You're mine, and this what I want. I want you to lust for me. Desire me. You will spill your wicked seed for me, and want to do it over and over again. The hell with your self-imposed celibacy.\"\n\nShe leaned over me, her face in front of mine. She was kind of scaring me, to be honest. This was not what I had planned, by any means. I watched her anxiously, as she lowered her lips to mine, taking my lower lip in hers and biting it. Hard. She released it, and licked me, long and slow, from low on my neck, up my face, across my cheek to my temple. Her hand was maintaining a slow steady pace up and down my rod.\n\n\"What's that I taste, holy man? Fear? Shame? Lust?\" She turned her head sideways and licked me across my mouth, from cheek to cheek. \"Mmmm, Desire, I believe, with just a hint of Desperation, and, could it be, Submission?\"\n\nShe licked me again her free hand reaching up and grabbing my hair, tilting my head back fiercely. She moved her mouth down to my neck, and bit down, sucking away, marking me. \n\n\"Now you're mine,\" she said gleefully, pulling away. \"The sign of Lilith. Not just his anymore, mine. He gave you to me. I choose that you no longer be celibate. Show me your weakness, holy man. Surrender.\"\n\nShe was getting me close. God, what a wicked young girl! \"Don't, I'm begging you, don't be my Delilah. I'm not strong enough.\"\n\n\"Your Delilah? Like Samson?\"\n\n\"She took his strength. He recovered enough, to destroy his enemies in the end. I don't have that kind of strength. If you strip it from me, I ... I don't know what I'll do. Please, Lilith. Please leave me this.\"\n\nShe laughed pulling away. \"No.\" Her hands came together, jerking me off viciously, painfully. \"Come for me, you sniveling weakling. You're not all that special. Just another man, guided by his urges. Come for me. Do it. Squirt. You know you can't help it. Don't fight it, come, come, come!\"\n\nI started pushing back against her grip, and her hands moved faster, a little less painful, as the grip slackened a bit. \"That's it, I can feel it. Come, Holy man. Come. Come, damn it. Shoot for me. Give it to me. It's mine. You're mine. Gimme.\"\n\nI groaned, exploding against my will, shooting strongly, my seed pumping out, pouring over her hand. She laughed as I finished, then wiped her messy hand across my chest. \"Just a man, that's all you are.\"\n\nI caught my breath, and bit the inside of my lip hard, dug my fingers into my palms, gouging myself until I felt the moistness appear in my eye. It had been difficult, and I tasted the iron of my blood and pushed it to my lips.\n\n\"I never said otherwise, Lilith. I know my own weakness. I'm a common man, who's been asked to do an uncommon thing. I didn't seek it out. I don't want it. I don't want any of it!,\" I shouted, letting the tears work their way from my eyes.\n\n\"You do it, Lilith. Please. Take this burden from me. Translate the ancient Greek. Prove the documents authenticity. Let the whole damn religious world fall on you like a ton of bricks, when you offer up the message, that Jesus was just a man. He had needs. He slept with his disciple. You tell the world that, and then try to live with yourself.\" I let my voice rise in the telling, a little blood working its way down my chin.\n\n\"Why me! Why torture me with her and you! Damn it! I don't deserve this. I'm trying Lord, but this is too much. Too fucking much.\" I pulled away from her, pushing her aside. \"I won't do it.\"\n\nI saw the look of despair on her face, as I grabbed my robe, and pulled it on, heedless of the mess I'd made. \"Joshua?\" she whispered, looking down at her hands, and wiping them on her shirt, shamefully. \"I didn't mean ...\"\n\n\"Forget it, Lilith. I should have expected it. It's who you are, isn't it? Lilith, Queen of the Night, who falls upon men without warning, and leads them astray from a spirit of understanding, to make their heart and their soul desolate. Adam's first companion, before Eve, who abandoned him, and took up with Angel Samael. The devil's companion. You play your part well. I hope you're happy.\"\n\nI pulled away from her, and started walking away, but after a few steps, I stopped in mid-stride. I paused, shaking, an eternity trying to maintain that awkward pose. \"No,\" I finally whispered. Then again, a little louder. \"No. I won't.\"\n\nWith my eyes staring forward, unblinking, I could see her standing nearby, watching me. I dropped to my knees, hard. I'd have bruises the next day. \"Why? Why?\" I cried out painfully. I slowly bowed my head, a whipped man. I stood and faced her, pulling my robe back and letting it fall from my body.\n\n\"C ... command me,\" I whispered, my eyes turned away, unable to face her.\n\nShe stooped quickly, picking up my robe, trying to pull it over my shoulders. \"Oh, God, I'm so sorry. So sorry, Joshua. I don't know why I did that.\"\n\nI stood stiffly, making it hard for her to get my robe back on. \"Command me,\" I repeated in a dead, monotonic tone.\n\n\"No, Joshua. I won't, I'm sorry.\"\n\n\"Command me,\" I repeated, eyes unfocused, unseeing.\n\n\"Please, come, let's sit back down. I didn't mean to hurt you.\"\n\nAt her words, I returned to the couch and sat stiffly. \"Command me.\"\n\n\"Stop, don't do this. Why are you acting like this? Just relax, okay? I didn't mean anything. Nobody's hurt. Please, Joshua.\"\n\nI settled back into the couch, following her unintentional command to relax. \"Command me.\"\n\nIt was during this charged moment, of course, that Bethany would decide to make her appearance. She opened the door and entered. \"Slow night, so they let me go half ... Lilith? What are you doing here?\"\n\n\"I wanted to talk to him,\" Lilith said fearfully, standing up.\n\n\"Command me,\" I told her, seeing her stiffen.\n\n\"Command you?\" Bethany asked, then she looked at the room, and shrieked. Several of the papers had fallen off the table, during our activities, and were lying about. \"What happened? What have you done, Lilly? What have you done!\"\n\n\"I didn't mean to,\" Lilith started, bending over to help pick up the parchment.\n\n\"No!\" Bethany screamed at her. \"Don't touch anything! What did you do? Why is he like that? Did you drug him? How could you? How could you ruin everything? Don't you understand how important this is? How important he is?\"\n\nShe was carefully picking up each paper, examining it, placing it back on the table. Lilith stood shaking. \"It was all an accident,\" she said softly.\n\n\"Accident! What happened?\" Bethany screamed.\n\n\"Nothing,\" Lilith said. \"Not really.\"\n\n\"Command me,\" I called out, feeling a little wicked. Serves the ornery minx right.\n\n\"Shut up!\" Lilith screamed at me.\n\nI saw Bethany haul back, and slap her sister across the face as hard as I'd ever seen anyone hit another person. Lilith was knocked sideways, to her knees.\n\n\"What did you do to him?\" Bethany growled, through clenched teeth, standing over her sister.",
        "\"I ... I didn't ...\" she whimpered, sitting up a little, hand to her cheek, staring at her older sister in fear. \"It's not my fault. God gave him to me.\"\n\n\"It's not ... God gave him to you?\" Bethany thundered. Hell, I was getting scared, and I wasn't the one she was mad at.\n\n\"Mine to command. He said so,\" Lilith answered, growing a little more confident, slowly backing away from her sister, still on her hands and knees.\n\n\"Why?\" Bethany asked, looking back at me, trying to sit perfectly still.\n\n\"To understand. What he's doing. Why you're needed. Everything.\"\n\n\"Why's he like that, then?\" Bethany stalked after her sister, demanding an answer. \n\n\"I ... I'm sorry. I don't know why I did it. I swear I don't. Don't be mad. We can fix it. I'm sure.\"\n\n\"What did you do!\"\n\n\"It was only a handjob. That was all. I don't know why he's so damn upset.\"\n\n\"You made him?\"\n\n\"He was mine to command. God said so.\"\n\n\"What happened? I still don't understand. Why's he like this? What did you do?\"\n\n\"I ... I think he didn't want to do it anymore, but God made him. All he does is sit there saying 'Command me'.\"\n\nBethany reached down and grabbed her sister by her fiery mane. She dragged her over, crying until she was kneeling in front of me. \"Release him. Tell him you understand and release him.\"\n\n\"I understand and release you,\" Lilith said. I didn't like the way she said it, not sincere enough for my taste. I didn't move.\n\nBethany reached down and slapped her again, \"Mean it. You have to mean it when you say it. You think God doesn't see what's in your heart? Every little black mark? Release him, you bitch.\"\n\nLilith stared at me, hard-hearted, her hand rubbing the redness of her cheek. It took a few seconds, and I saw her eyes soften, her entire demeanor followed shortly. She leaned forward, put her head on my leg, and the tears started. \"I'm sorry Joshua. That was a terrible thing to do to you. I swear I don't know why I did it. Why I had to hurt you, humble you. You didn't deserve that. I understand what you're trying to do, and how important it is. I promise I won't interfere again. I'll never bother you again.\" She gasped for air, her body shaking. \"I ... I release you, Joshua. I have no need to command you. I understand. I do. Please, come back. I'm sorry.\"\n\nI let her words release me. I looked up at her sister, whose hand lifted quickly to her mouth, gasping. I gazed back down at Lilith, and brushed her hair back from her face, then wiped her tears away.\n\n\"You're forgiven, Lilly,\" I told her softly. I leaned over and picked her up bodily, pulling her into my lap sideways, holding her while she finished her crying jag. Bethany came over and sat beside me.\n\nI pulled Lilith's hair back, exposing her blotchy, red-eyed crying face. \"Was it enough, Lilly? Do you understand?\" I asked softly.\n\nShe just cried louder, then hiccoughed shakily. She turned to me, her arms squeezing around my body, head pressed against my chest. \"I'm sorry!\" she shrieked. \"Make it stop, Joshua. It hurts too much. Make it stop!\"\n\nI held her close, rocking with her, hushing her. \"Shhh, baby. What hurts? Where does it hurt?\"\n\nShe hiccoughed again, groaning. \"In my chest,\" she whined, her entire body shaking when she hiccoughed again. \"I'm sorry. Please, don't let him punish me, Joshua. (hiccough) I didn't mean it.\"\n\nI put my hand on her chest, between her breasts, and rubbed her softly. \"It's alright, beautiful. I promise. It's going to be alright. Relax, and let me hold you, and it will stop.\"\n\nHer body shook, and I saw the worry in her face. \"It hurts.\"\n\n\"I know. There's a cost for everything. Let me take this burden from you.\" I turned her in my lap until she was facing me, straddling my legs. \"Hold me,\" I whispered to her, feeling her arms reach around me. I pulled her close, crushing her breasts to my chest, harder, tighter, until I knew she couldn't breathe. I held her there for several seconds, then released her. I jerked my body in sympathy to her pain, then squeezed her again, even longer, jerking my body stronger, before releasing her.\n\n\"No,\" she whispered. \"You can't ...\"\n\n\"Let me take it,\" I whispered.\n\nShe whimpered when I squeezed her again, for a long time, maybe 20 seconds. At the end, I gave a sharp squeeze and whimpered slightly as I released her. She looked at me in fear. \"You ... you didn't ...\"\n\n\"It's over now, Lilly. Whatever drove you to that, whatever you needed,\" I closed my eyes, grimacing, jerking back into the couch, \"I understand. I do. All's forgiven.\"\n\nBethany leaned against me, a silent watcher until then. \"How, Joshua? How can you forgive her so easily?\"\n\n\"Because she needs it, of course,\" I explained.\n\nLilith was lying against me, her arms loose, breathing softly. I caressed her back, and she settled against me.\n\n\"What she did, was it bad?\" Bethany asked.\n\n\"Difficult for me. I don't know why she wanted to hurt me.\"\n\n\"She ... she's been hurt by men. By our father, our uncles. I tried to protect her growing up, but I couldn't always. It's why I was afraid to bring her to meet you. She has issues with men, particularly men in positions of authority.\"\n\n\"I'm sorry I hurt her, Bethany. I never meant to.\" I held the little bundle of pain carefully, kissing the top of her head.\n\n\"You didn't hurt her. She hurt you,\" Bethany argued.\n\n\"In doing so, she was hurt. I wouldn't want that for her. I wish there was another way.\"\n\n\"Is she going to be alright?\"\n\n\"She'll be fine. She had a long and stressful evening.\"\n\nThe young girl moved in my arms. \"I can hear you, I'm not dead,\" she whispered.\n\nI gave her a little squeeze. \"Feeling better?\" I asked.\n\n\"Yeah, my face still stings.\"\n\nI tilted her head back and rubbing the reddened surface gently. I kissed her cheek softly. \"I think that one will stay for a while. I'm sorry about that. Only your sister can remove the pain there.\"\n\nLilith looked up at Bethany. \"Sorry Beth. I didn't mean to mess things up. I only wanted to help.\"\n\nBethany leaned over and kissed her cheek. \"I'm sorry too. I'd take away the pain if I could. I can't do stuff like that. Only he can.\"\n\n\"You really have a calling?\" Lilith asked her sister, squirming a little in my arms until she was comfortable.\n\n\"Yes. Not like his. Nobody talks to me, or anything. That first night, though, I knew it. Knew my purpose. I'll be whatever he needs, do whatever I can to make his life easier. I know it, I absolutely know it. That's my purpose.\"\n\n\"How can you know that? How does it work? You just suddenly know?\" Lilith asked.\n\n\"No. I was lying in my bed. The bed he let me use, praying for guidance. I ... I saw an image of Mary with Him, and I knew it. I knew it then, that my purpose was the same as hers. To be his companion in any way he'd let me.\"\n\n\"That doesn't bother you?\"\n\n\"Oh no! The opposite. I felt peace, total and complete peace for maybe the first time in my life when I accepted that as my purpose. I went to him, and told him, and he held me, accepting me. From that moment on, everything's been so much better. I have no worries, no concerns, no doubts about what I'm doing. Even the dancing doesn't bother me anymore. I understand, you know? It was meant to be. I have a purpose, Lilly. It's ... it's wonderful.\"\n\n\"What's my purpose?\" Lilith asked softly.\n\n\"I don't know,\" Bethany said nervously.\n\nI gave Lilith a hug. \"Nobody can determine that but you, Angel. You're young, maybe it's too early for you to worry about that. You can always pray and ask for guidance.\"\n\nShe shook her head. \"I don't pray. I wouldn't know how. I'm not like her. I don't believe in God or the church. I've never gone.\"\n\n\"I'm sorry. That must be very lonely. Can I tell you a secret?\"\n\nShe nodded.\n\n\"I stopped going to the church when I was a teenager. I didn't believe. It was very difficult for me to accept my calling, standing in the middle of town in Istanbul, Turkey, a damn voice ringing in my head. I thought I was going insane. I fought it for a long time. I was desperately unhappy. Until I surrendered and let it guide me. I still don't understand everything or know if I believe in the church or not. My grandmother would die to hear me say that.\"\n\n\"But all the stuff you're doing?\" Lilith whispered.\n\n\"Once I accepted my purpose and His meaning in my life, it became easy. I didn't ask for it, and there are times when it seems difficult, but when I release my feelings, the hard part passes, and I'm happy again.\"\n\n\"I didn't mean to make it difficult for you,\" Lilith said.\n\nI laughed. \"Yes, you did. You meant it. You needed to. I won't hold it against you. Sometimes we don't choose our paths, and for a while there, you were set on one whether you liked it or not. It was what you had to do, to understand. It's okay, beautiful. I still love you.\"\n\n\"You can't. It's not fair,\" she sniffled.\n\n\"I do. Sorry. That's the way it goes. I'm not going to lie to you. It's not what I feel for your sister. She ... somehow she completes me. But you, you're part of her; it's easy to see for anyone looking. And she's part of you. That part screams out to me. It's part of the reason that what you did was so difficult, that had me questioning my purpose. Maybe I needed it too. Thank you.\"\n\n\"Thank you? You're thanking me?\" She sat up a little, that adorable face looking up into my eyes.\n\nI leaned over and kissed her softly on the lips. \"Yes. Thank you. My purpose, though wavering for a moment, is stronger than ever. Thank you for testing me.\"\n\nHer eyes misted up, and she threw her arms around my neck. \"I'm sorry. I'll never test you again. I swear, Joshua.\"\n\nI chuckled, giving her a squeeze. \"Silly girl. Your mere presence is a test. I wasn't lying about my feelings for you. But it's okay. If I can survive your sister, I can certainly handle you.\"\n\n\"My presence?\" Bethany interrupted. \"What's wrong with my presence?\"\n\nI turned to look at her. I reached out and pulled her close, then pressed my lips to hers softly. \"I burn for you, constantly. You must know that. It's a test of my willpower, every time I see you.\"\n\n\"You can have me,\" she said softly. \"I'd like that. I want that.\"\n\n\"No. I can't. Better this way. I love you, my dear sweet fallen Angel, but for now, that desire I have for you, I prefer to focus on my work. I've never been so productive as when you're around. You are helping me more than you could possibly imagine.\"\n\n\"But maybe, someday?\" she asked softly.\n\n\"I hope so. I pray for it every night. That God will let me know when I can accept you totally. It's my ultimate dream.\"\n\nShe smiled. \"I pray for it too. I think I'm going to do a lot more praying for it.\"\n\nI felt Lilith's body resting against mine, breathing slowly and calmly. \"I think your sister's had a tough time today. Would you both like to stay?\"\n\nBethany giggled. \"I don't think you're tough enough to kick me out. I'm staying.\" She looked down at her sister, who appeared to be at least half-asleep. \"We're staying.\"\n\nI scooped Lilith into my arms and stood with her. She turned and cuddled into me. Bethany got up and led the way into her bedroom. It had a queen sized bed, and she turned down the covers. I laid her sister down on the bed, and together we undressed her, down to her panties and bra, and covered her with the sheets. \n\nThe little faker opened her eyes and smiled at me. \"Did I test you again?\" she asked teasingly.\n\nI laughed, leaned over and kissed her forehead. \"Wicked girl. Yes. That was difficult. You're even more desirable, half-naked and seemingly helpless. Go to sleep now, and I'll try to do the same.\"\n\nShe reached out and grabbed my hand. \"Thank you. I don't know how you could do that, surrender to me like that. Then taking the pain onto yourself. Thanks, Joshua.\"\n\n\"You're welcome, Lilly.\" I gave her another chaste kiss and left her.\n\nBethany followed me out, back to the living room. \"She didn't mess up any of your papers, did she?\"\n\nI checked on everything and it looked fine. Most of the older, authentic pieces would be hard to damage. They were pressed between sheets of hard lucite. \"No, no damage, we're fine.\"\n\n\"I feel horrible. You wasted an entire evening you could have been working.\"\n\n\"No, Bethany. It wasn't a waste at all. I honestly believe that your sister will be more help than hindrance after tonight. It will make my work moving forward easier.\"\n\nShe came closer to me, agonizingly close. \"Did you mean it? You burn for me?\"\n\nI nodded. \"I told your sister as much. God has chosen you to test me. You are the living embodiment of perfection both physically and spiritually.\"\n\nShe smiled. \"I'm not perfect, Joshua. Far, far from it.\"\n\nI pulled her close and hugged her. \"You are wrong. If I could design the perfect woman, it would be you.\"\n\n\"Can I relieve you, tonight?\" she asked softly. \"I can feel you hard against me.\"\n\n\"I'd like that.\"\n\nI was surprised when she took me by the hand and silently led me to my bedroom. She started the shower, removed my robe, and then undressed herself. She led me into the shower, and washed my body, thoroughly. She rubbed herself against me, and it was difficult to keep from mauling her. When she proclaimed me clean, she dried me and brought me to my bed.\n\nShe had her hand on my painful erection and smiled up at me. \"No lustful thoughts now,\" she teased. Then she moved between my legs and gave me one of the most gentle and loving blowjobs I'd ever had.\n\nI leaned back and enjoyed it, wondering how long it would be before I had her sister doing the same. \n\nI came for her, and she was careful to make sure I didn't suffer the 'Sin of Onan'. She climbed up the bed, pressing her naked body against mine. \"Can I stay here with you a while, Joshua?\"\n\nI pulled her close. \"Of course. For a while.\" I held her in silence letting her get comfortable.\n\n\"Bethany?\" I said softly.\n\n\"Mmmhmmm,\" she answered sleepily.\n\n\"We may have to go back to using your hand only. I ... I had lustful thoughts just now. I'm sorry.\"\n\n\"Can't you pray for forgiveness?\" she asked.\n\n\"Yes. I will. But doing it when I know I'll be sinning isn't right. Hands only for a while, okay?\"\n\n\"I'm sorry. I only wanted to help.\"\n\n\"It was wonderful, Bethany. Truly wonderful, and I needed it tonight. I can't thank you enough. But you're too hard to resist. I came very close to trying to do more. Much more.\"\n\n\"I would never stop you,\" she whispered, her hand caressing my chest.\n\n\"I know. That makes it even more difficult. That I could do it if I wanted.\"\n\nShe kissed my chest. \"Your body says you'd like me to do it again.\" She reached down and stroked my resurrected shaft.\n\n\"Of course I would. You are so beautiful, lying here next to me naked. You have to wear panties or something in the future. Please. I ... I'm afraid I'm too weak. Can you do that for me?\"\n\n\"I will. Can I relieve you again?\"\n\n\"Please.\"\n\n\"With my mouth?\"\n\nI sighed. \"One last time.\"\n\n\"Thank you.\"\n\nIt was a long, glorious one last time before I was groaning and filling her sexy mouth again. I lay there, wondering about the morality of what I was doing, the deception, taking advantage of her, of both of them. I wondered how much longer I could keep it up.\n\nI also gave a lot of thought to how to move it forward. Most of the time so far, I'd been reactive, playing a role, letting things go where they would. For once, I had the inklings of a plan. God, forgive me, I'm such an immoral bastard.\n\n=====================\n\nCult 102: Create Initial Trappings\n\n=====================\n\nMy morning run was longer than usual. I beat myself up a little. I actually do have a conscience, and it took an effort to hammer it into submission. I was thinking through my plans, ordering them, working out details, my body on autopilot. \n\nMy breathing was becoming ragged, my legs aching, as I passed the house, spotting the sisters watching, conversing conspiratorially. \n\nI slowed, having no idea how far I'd run, or for how long, but the sweat pouring off my body led me to believe it had been a long time. I staggered to the door, my shins sore, my calves cramping. Bethany met me wrapping my robe around me, guiding me indoors. Her sister followed us closely.\n\nMy escorts took me to the bathroom, my shorts were removed, and I was placed under the shower. This was different behavior from Bethany, and I stayed silent as she undressed, and started to clean me. I was interested to see what she was up to. Her sister watched, then stripped down to her panties and joined us.\n\n\"What's wrong with him?\" Lilith asked, soaping my chest.\n\n\"Shhh, he gets like this sometimes, usually when working. I think God's communicating with him. Although the way he was running, like a madman, he might be fighting his demons.\"\n\n\"He's gonna be alright, isn't he?\"\n\n\"Yes, we have to be patient and help him.\"\n\nHaving two beautiful women in the shower with me, one naked, one very nearly so, was having its expected effect. As they rubbed me, soaped me, and rinsed me, I grew hard.\n\n\"He's excited,\" Lilith whispered.\n\nBethany soaped my cock and started to stroke it. \"He's not excited, he doesn't hardly know we're here. His body is responding to our touch.\"\n\n\"Do you think you should be doing that? He got so upset when I did,\" Lilith said.\n\n\"Try it. He won't get upset. There's nothing wrong with providing his release, as long as it's not lustful. There's no sin, and it doesn't interfere with his celibacy.\"\n\nLilith's hand stroked my shaft, along with her sister's. I struggled not to respond. Lilith moved closer, leaning against me. \"I was mean last night. I made him do it with lust, I teased him. I didn't know.\" The young girl sounded upset.\n\n\"You were forgiven. He loves you. It's alright now. We have to be gentle with him. He's weak when it comes to us. We mustn't tease him.\"\n\n\"You're sure he's going to be alright?\" Lilith asked.\n\n\"Be patient, Lilly.\"\n\nThey were quiet, stroking me, and Bethany started kissing my shoulder. \"Come back to us, Joshua,\" she pleaded softly.\n\nI did my best to stay still, as my cock erupted shortly after. They continued stroking me, milking me. I sighed and stretched. Lilith jerked her hand away, but her sister kept going gently. I turned to Bethany, acting surprised by her presence. I embraced her and kissed her softly.\n\n\"Good morning, Angel. I have tasks I have to do today.\"\n\nShe grinned, her hand slow to release me. \"I figured it was something like that,\" she said.\n\nI acted shocked to see Lilith in the shower with us and covered myself. \"Good morning, Lilith.\" I made a scene, acting confused about where I was. I turned to look away from her. \"I'm sorry. I didn't know you were here. I hope I didn't offend you.\"\n\n\"Beth said I could help. That's okay, isn't it?\"\n\n\"I ... I don't know. I haven't heard.\"\n\nBethany was still rubbing me. My front, now that I was facing her. \"God didn't say she couldn't, did He?\"\n\n\"No. He's told me nothing about Lilith except that I must answer all her questions honestly.\"\n\n\"Still? She released you.\"\n\n\"She can't command me. I still feel compelled to answer her questions.\"\n\nLilith slid around me, looking up at me nervously. I turned my face away from her nudity. I think I pulled it off pretty well.\n\n\"Am I ugly, Joshua?\" she asked. \"Tell me the truth.\"\n\nI shook my head. \"I cannot do otherwise, Lilith. No, you are not ugly. You are beautiful.\"\n\n\"Does my body offend you?\" she asked.\n\n\"Lilly! Don't,\" Beth snapped.\n\n\"No, your body is magnificent,\" I said firmly.\n\nLilith faced her sister. \"I'm not being mean, sis. I don't understand.\"\n\n\"Ask, Lilith. Your understanding is most important to me. I can't perform my other tasks until I'm confident you understand. So please ask, I have critical things to do today.\"\n\n\"See? You're interfering with his work,\" Bethany snapped.",
        "I took Bethany in my arms, hugging her, calming her. \"It's alright, Angel. If she needs to know, to understand, I want to answer her questions. I need her to understand and to be happy. Please, don't be cross with her. It breaks my heart.\"\n\nShe hugged me back, kissing my chest. \"I hate to see anything interrupt your work. It's so important.\"\n\n\"No piece of paper, no matter how old or how precious, matters near as much to me as you. She's part of you, and as such, she matters more than anything else.\" I kissed her softly and turned to face Lilith, averting my eyes. \"Ask, please.\"\n\n\"Why won't you look at me? How come it's okay for you to look at her, hold her, kiss her, and you won't even look at me?\" She sounded upset, and I knew I had to tread lightly.\n\n\"She's my companion. I have no secrets from her. I share my life with her.\"\n\n\"Do you have secrets from me?\"\n\n\"No, Lilith. Ask and I will tell you anything.\"\n\nShe appeared upset. \"Please look at me, Joshua. You're hurting my feelings.\"\n\nI looked into her eyes, and drew her close, hugging her gently. \"I'm sorry. I never want to hurt you. I ... I'm just embarrassed. You are too pretty, too tempting. Seeing you naked is difficult.\"\n\n\"Worse than seeing my sister? At least I'm wearing panties.\"\n\n\"She's my companion, Lilith. Koin\u00f4nos.\"\n\n\"And what am I?\" she asked, her arms encircling me, her hands rubbing my back.\n\n\"You're her sister. Our guest. My conscience.\"\n\n\"Your conscience?\" she asked eagerly.\n\n\"I think so. That's why it's so important you understand and agree with what I'm doing. Tell me it's wrong and I'll stop. I told you that. Tell me to send you two away and I will. The only thing I won't do is stop my work.\"\n\n\"But you said I can't command you.\"\n\n\"You can't. You can't make me stand on one leg. You can't make me submit to you. What you can do is tell me I'm doing something wrong and I will heed you.\"\n\n\"Is that my purpose?\"\n\nI looked down into her eager face, feeling more than a little guilty. I brushed her hair back. \"Your purpose is between you and Him. All I know is that it is very important to me, essential even, that you understand and approve. So ask me anything.\"\n\n\"Is it wrong for me to help Beth? Help her take care of you?\"\n\n\"It is only wrong if you do it for any reason other than your honest desire to help. Don't do it out of guilt, or gratitude, or guile. Do it because you believe it's the right thing to do.\"\n\n\"I do, Joshua. I ... I think I'm supposed to help her. It's a difficult thing and she works so hard. I think I was meant to come here, to confront you, to understand, and to support her. She has always been the one to support me. Now she needs my help. I want to help her. Please tell me it's okay. I know I'm not your companion, I wasn't chosen, but I can help.\"\n\nI leaned down and kissed her lightly. \"Thank you.\"\n\nShe stood on tiptoe and kissed me back. \"I can help?\"\n\n\"You are welcome to do whatever you feel you should. My home is open to you. I won't question your decisions or reasons. Thank you.\"\n\n\"You won't be embarrassed to see me like her, or for me to see you? I swear I won't tease you again.\"\n\nI smiled, shaking my head. \"You will test my will, beautiful child. But no, I accept you as you are, part of us.\"\n\nBethany interceded. \"Any more questions troublemaker, or can the man do what he's destined to? Have you forgotten what we saw? Are you going to keep delaying what we both know is what he should be doing?\"\n\nLilith blushed. \"I needed to know, Beth. No more questions.\"\n\nBethany kissed me lightly. \"I think you can finish on your own now. Breakfast will be ready when you are. Don't let us get in your way today.\" She climbed out of the shower and Lilith turned to follow her. Then little sis turned back and kissed me. She grinned. \"No questioning,\" she teased.\n\nThank God they left. A few more seconds, and I'd need their help with my 'release' again.\n\n* * *\n\nThe girls were cheerful at breakfast. Chatterboxes, discussing their plans for the day. Lilith talked about school for a bit. Bethany said she needed to do some shopping, then she'd go to work.\n\nMe? I had the beginnings of a plan in mind. A rather dastardly one and it was time to start acting upon it.\n\nI told them I'd be out a good part of the day. Research required, part of my essential tasks.\n\n\"It's alright if I come over after school, if Beth is not here, right?\" Lilith asked nervously.\n\nI turned to Bethany. \"Make her a key.\" Looking back at Lilith, I told her, \"You're welcome any time. My home is your home. I thought we were clear on that. If you don't understand, please ask me anything.\"\n\n\"No,\" she said anxiously as her sister glared at her. \"I understand, I just, I guess I wanted to let you know that I'd be coming over.\"\n\nI nodded. \"You might want to spend a little time today making friends with Hercules. He's a little more suspicious than I am. There are treats in the pantry.\"\n\n\"You're sure you don't mind?\"\n\n\"Not at all. I should warn you, sometimes I get a little cranky when working. I might not be the most sociable.\"\n\n\"Don't worry about me. I won't get in your way. I promise. I can keep out from underfoot. Besides, I have a lot of studying I need to do myself.\"\n\nMy initial plans were simple enough. I wanted to build on the illusion of my purpose and moral authority. I was God's mouthpiece and tool. I think I had the girls believing that, but I wanted to reinforce it.\n\nNo more sloppy robes or baggy shorts around the house. I thought of Hugh Hefner and his iconic smoking jackets. I wanted something similar. The papers I worked with had to seem immensely important. The way I had them scattered around the study undermined that. Images of spiritual intent should be commonplace, a reminder of what we were doing. Maybe I could formalize something at our meals. So many little things, and no time like the present to start.\n\n* * *\n\nMy outing was a success, and I arranged for the prints to be framed and delivered within the week. The additional wardrobe selections from Neiman Marcus I was able to take with me immediately.\n\nA couple of hours at Mardels, the Christian bookstore, provided enough religious and spiritual decor items to outfit a dozen homes. Among the things I wanted to do was to create some rituals, reinforcing the moral authority. In fact, my goal was to slowly convince the girls to suggest the rituals, as if they were handed down from on high and not my idea. That might be a little tricky.\n\nI also spent a good amount of time doing research at the library, where nobody was looking over my shoulder. I needed to find some resources, technical ones, that would help me in my machinations. \n\nSome of the ideas were very basic. When I got home, the girls were gone. I dressed in one of my new robes and went to work removing the door to my room. I made copies of my fake documents, and put the originals in frames and placed them in Grandpa's gun safe, which I'd never had cause to use before. \n\nI was back at work in the study, instead of my usual place in the living room. I wanted to create clear, identifiable regions of my home. The place was huge, over 8,000 square feet. The upstairs had been closed off ever since I'd moved in. The downstairs was more than spacious enough for my needs. I was considering opening up the second floor if needed.\n\nHercules barked when Bethany arrived back home. I heard her moving about and waited. Sure enough, she peeked in on me at my desk, and left me alone, moving quieter. \n\nI was working on creating a translation of my original concept for the first couple of chapters. I knew that at some point I'd need help, but I wanted to keep it secret. I figured I could farm out one or two lines to different people, and keep the subject matter a mystery. I looked up and Bethany was standing quietly in the doorway.\n\n\"Come in, please,\" I urged her.\n\n\"I didn't want to interrupt.\"\n\nI resisted the urge to tell her not to worry about it. \"Thank you.\"\n\nShe smiled. \"Would you like a late lunch? I thought I would cook us something before I go to work. I have to be in by four.\"\n\n\"That would be perfect. Please let me know when it's ready.\" I had left one of my purchases out and wondered if she'd pick up on it.\n\nFifteen minutes later, I heard the chimes. Grinning, I got up, and she met me in the doorway. \"I thought I could ring the chimes to let you know that food would be ready in a couple of minutes, in case you wanted to finish something up or wash.\"\n\n\"That's a wonderful idea. Where'd you find the chimes?\"\n\nShe looked at me oddly. \"They were in the kitchen.\"\n\n\"Really? I don't remember them. No matter, I probably never noticed. Thank you.\"\n\nNever noticed? I hoped I wasn't getting too carried away. The thing was eighteen inches high, and nearly a foot across. A dozen brass hanging tubes, in an ornate frame, with a striker hanging from the side.\n\nWe ate together, she asked me about my work, I lied, and everything was good. She told me she liked my robe and I explained I needed a new one, the other was dirty. She said I should get more like the one I had. Not a problem, four more were hanging in my closet, all identical, in royal purple. Two were one order in stark white, with gold trim. Another in burgundy\n\n\"What happened to your study door? Is it broken?\" she asked.\n\n\"No. I don't want there to be anything between me and you. I'll remove the door to my bedroom later. I always want to be accessible to you.\" \n\nShe smiled for me. Damn, she was a pretty girl. And I was a conniving bastard.\n\nAs she cleared the table, I followed her into the kitchen. \"Do you have a few minutes?\"\n\nShe stopped what she was doing, and turned to face me. \"Of course. All my minutes are yours.\"\n\n\"I'd like you to consider moving in here with your sister. I hope that doesn't sound offensive.\"\n\n\"Offensive? Why?\"\n\n\"Cohabiting. Some might interpret it badly.\"\n\nShe laughed. \"That's silly. Are you sure, Joshua? I don't want to intrude.\"\n\n\"I'm positive. I ... I had a vision of you and your sister here, sleeping in the same room, two twin beds. The room looked different, less sterile, more lived in. Pictures on the wall that were more personal. If I'm out of line here, tell me.\"\n\n\"No, Joshua. You're not out of line. I'd love to live here and be available to you. Our apartment means nothing to me. I'd be happy to pay you rent.\"\n\n\"Rent? This house is paid off. It's been in the family for four generations. I need no rent. I'd rather you use your money for yourself and your sister. I can easily afford to keep you here, and feed you.\"\n\n\"I'm not sure I'd feel right, living here for free,\" she argued.\n\n\"Let's not argue. For now, let's take care of getting you out of your lease and moved in. You can use the truck in the garage. I'll help of course.\"\n\n\"No! That would be taking time away from your work. I know you have important things to do. We can take care of it. The apartment is a month-to-month rental. We can walk away from it tomorrow. Maybe this weekend we can move out. I'll have to talk to Lilith of course.\"\n\n\"Of course. She needs to be happy with the decision.\" \n\nI walked over to her and gave her a hug. \"Thank you. Knowing you are around makes me happy. I work so much better after seeing you.\" I kissed her softly and grinned. \"That should hold me until the early morning hours.\"\n\nShe laughed and gave me a kiss back. \"It won't have to. I'm going in early and have the after work shift. I'll be home before ten unless things get crazy.\"\n\nOne of my goals was to encourage lots of physical contact, hugs, and kisses in particular. Make them feel comfortable with touching and being touched. A lot. That seemed to be working. I stole another hug and returned to my work.\n\nI felt I was making progress. Little steps, I had to remind myself.\n\nI heard the door security chime as Bethany prepared to leave. I rushed out to catch her. \"No goodbye?\" I called out.\n\nShe jogged back to me. \"You were working, I didn't want to interrupt.\"\n\n\"I like to know when you arrive and leave. I like to know when you're around.\" \n\nShe gave me a hug and a kiss. \"I'll do better. Now will that hold you for a few hours?\"\n\nI grinned and hugged her back, longer, tighter. I kissed her a little longer. Nothing crazy, that wasn't my intention. \"That will hold me.\"\n\nShe laughed, poking me. She waved as she started walking away. \n\n\"You're not driving?\" I said.\n\n\"Lilith needed the car. I'm busing it today.\"\n\n\"Nonsense. I have four vehicles in the garage. Take any one of them. My home is your home, as is anything in it.\"\n\nI could see her hesitating. \"The keys are all hanging in the kitchen pantry. Select one. You'd look gorgeous behind the wheel of the Hummer, why not take that?\"\n\n\"I couldn't, Joshua. It's too nice.\"\n\n\"Ridiculous. Nothing is too nice for you. I insist. Take the Hummer.\"\n\nShe hesitated a little longer. \"You're sure?\"\n\nI took her by the hand, walked her into the house, and pulled a key off the rack. I handed it to her. \"I'm positive. I'll feel better knowing you're driving, rather than walking or taking public transportation. Please, for me.\"\n\nShe gave me a longer hug, a kiss with tongue, then she pulled away, blushing. \"I'm sorry. I didn't mean to\u2014\"\n\nI laughed, kissing her back. \"I'm celibate, not dead. That was wonderful. Now go, before you're late.\"\n\nShe ran out and I watched her perfect little ass the whole way. Mine. It would soon be mine.\n\n* * *\n\nOne of the problems that I'd created for myself was finding any privacy. I wanted to appear to be totally available, but I also had a lot of things I wanted to do on the sly without the girls knowing about it. An old mansion like Corycia had a lot of advantages when it came to that.\n\nI'd first learned about some of the building's unusual features when I'd had the modern security installed. The entire wing I'd been living in had once been the servants' quarters, and the upstairs had contained the family living areas. Ages ago someone had walled in the narrow servants passages and the small stairwell to the upstairs, leaving only the central staircase. This was discovered by the security crew and led me to unearthing the building plans among Grandpa's papers. A servant's entrance had been located, also walled in, as were a series of upstairs passages between the rooms. At the time, after seeing the state of disrepair and filthiness, I'd left them closed off.\n\nNow I was thinking twice about that decision.\n\nThe house had a lot of architectural detail common over a hundred years ago, but not so much nowadays. There was extensive custom cabinetry, bookshelves, wainscoting, railing and the like. Framed-in wall sections, and additional things like built-in closets, rooms converted to bathrooms and expanded, as well as many other features that didn't match the original plans. \n\nThe servant rooms had once numbered seven, with two large shared bathrooms and a common area. Now there were four bedrooms, three baths, and a storage room. Mine was the largest and was one of two rooms with private baths. Bethany had the only other room on the main floor with its own bath. The two rooms between ours shared a Jack-and-Jill bath.\n\nOf most interest to me was the passage behind all the servants' rooms. It started in mine, passed behind the others with the access walled off, and ended in what was now the storage room, but had once been the stairwell upstairs. Grandpa claimed that it had once provided late-night private access to the servants' rooms. I could only imagine what for.\n\nWith the house vacant, I was able to enter the passage from the storage room without concern for privacy. It was unlit so I entered the dreary hallway, not much wider than my shoulders, with a flashlight in hand. I could smell the dust and mold, and was constantly brushing away cobwebs as I explored the area. The presence of the previous doorways was not hidden as they were from within the bedrooms. \n\nThe first gave way with only a modicum of effort. It opened inward into the passage from the closet in Bethany's room. Food for thought. The next was sealed off and I figured the room it was designed to enter was now the bathroom, and the bathtub was on the other side. The third opened into the middle of the wall in one of the empty rooms, blocked by the bed that was now centered on that wall. The next appeared to lead to the shared bathroom, again completely sealed off. The third bedroom was now being used to house excess furniture, and no amount of effort on my part could open that hidden door more than an inch or so. \n\nMy nose was itching and I felt dirty wandering down that dark tunnel. The wooden floor had soft spots, the wall studs were exposed, and the ceiling was several feet high overhead, exposing the flooring structure above. I avoided touching the dirty walls any more than was absolutely necessary. A few feet before the passage ended in a bare wall, the last doors were visible. One on each side. The one on the right provided access to my room, the one on the left had once been an exit, but now opened into the spacious garage that had been added on over 50 years earlier.\n\nThe simple cross board that kept the door to my room sealed lifted out of place with just a little groaning of the wood. This door, like the first in Bethany's closet, opened into the passage, and not into the rooms like the others. With a loud shriek, the hinges performed their duty and opened wide. The burst of light was almost blinding. I entered my bedroom, and pulled the door closed, using the chair railing as a handle. I was amazed at how well the door was concealed by the design of the wall. With the back brace removed it opened outward with a simple push, and a noisy metallic squeal.\n\nIt gave me ideas, mischievous ideas, which I would act on once I had more private time at my disposal.\n\nI covered up any evidence of my exploration and took a few minutes to remove the door to the bedroom, cramming it into the room next door, already full of furniture. Satisfied with my progress, I took a long shower to wash off the hundred-year-old dust.\n\nExiting my bathroom, wearing only a towel, I heard little sis wandering the hallway, calling out my name. It appeared I'd finished in the nick of time. \"In here, Lilith,\" I called out.\n\nShe turned my way spotting me through the open doorway. I casually dropped my towel and pulled one of my new robes out of the closet.\n\n\"Hi Joshua,\" she chirped, standing just inside my door.\n\nI belted my robe, turned and gave her a big hug. \"How was your day?\" I asked, holding on to her.\n\nShe shrugged, smiling. \"Same old. Where's your door?\"\n\nI gave her the same spiel I'd given her sister about free access. Then I tilted her head up and gave her a short kiss before putting my arm around her waist, and escorting her back down the hall. She reached over and felt the material of my robe. \"This is nice,\" she said. \"Nicer than your old one.\"\n\n\"Thank you,\" I replied, turning toward the main part of the house. She followed along meekly as I guided her toward the couch. Sitting, I started telling her about my suggested change in living arrangements.\n\n\"Bethany wants to discuss it with you first. I've invited you both, and would cherish your presence. My home will be yours, my possessions yours, outside of the documents I'm working on. Please tell me you'll consider my wish.\"\n\n\"Live here? All the time?\"\n\n\"If you would be so kind. Your being here invigorates me. It makes my work so much easier. It makes me happy.\"\n\n\"It won't bother you? I don't want to interfere.\"\n\nI put my arm around her and pulled her close. I kissed her forehead, affectionately. \"It's what I want.\"\n\nShe leaned into me, her hand sliding inside my robe, rubbing my chest. \"Does this mean ... are you going to ... I mean, you and Beth?\"\n\nI chuckled and gave her a squeeze. \"This doesn't change our relationships. She is still my koin\u00f4nos, and you are still my conscience. If it's wrong, you have but to say so.\""
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "cult",
        "first time",
        "mary magdalene",
        "joke",
        "prank",
        "harem",
        "strippers",
        "magic",
        "miracles",
        "sisters"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-cult-2"
}