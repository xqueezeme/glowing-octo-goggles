{
    "title": "Whoops, Wrong Number",
    "pages": [
        "I frowned at the dressing room mirror. The skirt I was trying on was cute, but I couldn't tell if it was too short or just short enough. I snapped several photos to send to my friend for her opinion. Unfortunately, I wasn't really paying attention and accidentally sent them to the last person I was texting, a cute guy I'd met at the gym yesterday.\n\nShit! I frantically sent him another message:\n\n> \"omg wrong number sorry!!\"\n\nI tried to suppress a groan of frustration. I liked this guy. He was tall, knew how to flirt without being creepy, and was funny without trying too hard. It felt like we were clicking, but there was no way this didn't make me look like a stalker. Who sends a shot of their ass to a guy this quickly?\n\nI flipped back through the pics I'd sent. Uuuuugh, they weren't even cute. My face was scrunched up because I wasn't sure about the skirt and my hair was terrible and ugh fuck fuck fuck. I scowled and dropped my phone in my bag.\n\nA moment later, my phone buzzed. I picked it back up, dreading the inevitable dick pic. I was already preparing to block his number and write him off forever.\n\nHuh. This was interesting.\n\nHe'd responded with a matching selfie, snapped in a hallway mirror. There was a road bike leaning against the wall behind him, and he was wearing those goofy shoes that clip onto the pedals. It looked like he'd just come back from a ride. He was sticking his butt out in a comically exaggerated version of my pose. I had to admit, his ass looked great in bike shorts.\n\nI was still grinning a second later when my phone buzzed again as he sent a text:\n\n> \"oops meant to send that to someone else sorry\"\n\nHa! All my frustration instantly melted away. So he wanted to play, huh?\n\nQuickly I pulled off my top, dropped the skirt to the floor and shimmied my way into a dress I was considering for clubbing. It was black, covered in sequins, and *very* low cut. I squeezed my arms to press my breasts together and snapped a shot of my cleavage. Then I didn't like that one, so I changed the angle. After a few more tries I had something I was happy with, and I sent it his way.\n\nI waited a beat before sending the followup text:\n\n> \"ack wrong number again sorry sorry\"\n\nI was changing back into my clothes a few minutes later, after deciding to buy the dress but not the skirt, when my phone buzzed. Eagerly, I pulled up his next message and grinned at the photo he'd sent.\n\nHe was standing in a bathroom now, taking a photo of his reflection in the mirror. He'd hooked his thumb under the hem of his shirt and tugged it up to reveal his flat stomach. A dark trail of hair started at his navel and disappeared under the waistband of his shorts. I imagined my fingers tracing that path.\n\nMy phone buzzed a moment later. His text mirrored mine:\n\n> \"oh no how does this keep happening\"\n\nOh, I liked this boy.\n\nI picked up my bag and the club dress and headed to the counter. I finished my shopping and drove home, smiling every time I thought of his messages. I ate dinner and chatted with my roommate, thinking about what to send him.\n\nI took the next photo in the bathroom mirror, over my shoulder. I'd just gotten out of the shower and was only wearing a towel. My hair was clipped up, but a few strands hung down my neck. I'd carefully allowed my towel to fall open, exposing my bare back and teasing my ass.\n\nAfter sending the pic, I counted to ten and wrote:\n\n> \"ugh my phone might be broken\"\n\nI had just finished putting lotion on when he responded. It was worth the wait. He'd put some effort into framing the shot. He was standing in the shower, the curtain open, facing away from me. His hands were scrubbing his hair, and the water was running down his back and cascading over his butt. I appreciated the work involved. He must have set a timer before jumping in the shower.\n\nThe text came a moment later:\n\n> \"mine too so embarrassing\"\n\nI sent him a close-up photo of me biting my lower lip.\n\n> \"wish I knew why this was happening\"\n\nHis reply came equally quickly. A matching photo of him biting his lower lip. I imagined how his stubble would feel against my neck.\n\n> \"I know, so arousing\"\n\nI raised my eyebrow at this escalation. But before I had a chance to wonder if he didn't understand the rules of our game as well as I'd thought, he texted again:\n\n> \"sorry that was supposed to say 'annoying'. ducking autocorrect!\"\n\nI laughed and decided to make him wait for a bit. It was over an hour before I texted him again.\n\nI was laying in bed watching a late-night show. I took the photo looking down my body towards my crossed legs. My toes were painted and looked cute, but I doubt he'd notice that. I'd carefully framed the shot so he could just get a peek of pink underwear below the hem of my cami.\n\n> \"I restarted my phone, but it just keeps doing this\"\n\nHe responded a few minutes later with a similar shot. Instead of watching TV, there was a laptop sitting on the bed next to him. His thighs were slightly spread, and he had a thumb hooked in the waistband of his boxers. The thin fabric did little to disguise the outline of his bulge.\n\nOnce again I imagined following the trail of hair from his navel downward... I was distracted from this train of thought by his text:\n\n> \"maybe you should let someone look at it\"\n\nIt took me a moment to realize he was still talking about my phone.\n\nI smiled, his words giving me the idea for my next photo. I sat up and pulled down one strap of my cami, just far enough to reveal the dark skin of my nipple. I teased it, caressing and gently pulling until a shiver rolled down my spine. I gasped and felt my nipple stiffen under my fingers.\n\nGrinning, I framed the photo of my torso, one breast exposed, a crooked smile on my lips. I sent the shot to him, followed a moment later by:\n\n> \"it keeps falling out of the case\"\n\nI didn't have to wait long for a reply. He sent a similarly framed shot but angled lower. His stomach muscles were tense, and one hand was reaching under the waistband of his boxers to grip his cock. The tip of his erection strained against his underwear. \n\nI felt a growing heat in my abdomen and continued to squeeze my breast while I waited for the message. When it came, I actually gasped.\n\n> \"I don't use a case. I keep a tight grip to make it hard\"\n\nAnd then laughed at the immediate follow-up:\n\n> \"...er to drop\"\n\nI stretched, enjoying the pressure from squeezing my thighs together. After a moment, I set up my next photo. It wasn't subtle, but neither was the increasing desire I felt.\n\nI spread my legs and took a photo of the pink fabric pulled taut over my lips. There was a noticeable wet spot. I felt deliciously naughty as I sent it to him.\n\n> \"might have gotten wet\"\n\nI waited a beat, and then followed up with:\n\n> \"the phone I mean\"\n\nHe didn't respond for a few minutes. I squirmed as I imagined his reaction. I thought about his hand wrapped around his cock as he saw how wet he was making me. I wondered what the next photo would be.\n\nHe surprised me by sending a voice memo instead. Intrigued, I pressed play and listened to the short audio clip. Then I smiled and played it again. I could hear skin rubbing against skin. The sound of his breathing, ragged and heavy, as though he was working hard.\n\n> \"maybe I gripped too tight? I tried to record some pushups for my trainer but it's just audio. weird.\"\n\nThis guy. I bit my lip as I set it to play repeatedly, knowing he was stroking his cock and staring at photos of me. My hand drifted between my thighs, pressing firmly against my lips, which felt puffy and slick with arousal. His breathing was urgent in my ear as I pulled my underwear to one side. My fingers slipped easily over and between my lips. My back arched as I pushed one and then two inside.\n\nI let my fingers fill me for a minute, but I wanted more. I dropped my phone and rolled over. I could still faintly hear him as I opened my nightstand drawer and rummaged for my vibrator. When my hand closed around the familiar shape, I moved back to the center of the bed.\n\nI lay still for a moment, slowing my breathing before I set up my next shot. I pulled my panties down my hips just enough to show my trimmed bush and let him see the vibrator I was pressing against my clit. Even on the lowest setting, it took me a few tries to get the photo right, because it felt so good.\n\nOne-handed, I typed:\n\n> \"sorry I didn't respond right away I left it on vibrate\"\n\nThen I dropped the phone on my pillow. The rumbling between my legs seemed to radiate outward, waves of pleasure rolling over my body. I was just fumbling with the button to increase the intensity when he sent his next message.\n\nI squeezed my thighs together, holding the vibe in place. Eagerly, I grabbed my phone to find a shot of his hand wrapped around the base of his shaft. His cock stood proudly, the head swollen and dark. I gasped when I saw the mouthwatering drop of precum glistening on the tip.\n\n> \"it's cool I've kinda got my hands full\"\n\nYeah, I'll bet you do. I hesitated for a moment, but at this point, I had a rather urgent need to see this through. Carefully, I propped my phone on my nightstand and switched to video. Kneeling on the bed, the camera covered my entire body, from my thighs to my chest.\n\nI pressed record and took hold of my vibrator again. It didn't take long for the intensity to climb, the pressure building inside. I was squirming, one hand squeezing my tit as I gasped in pleasure. I imagined him stroking his cock right in front to me.\n\nI turned up the intensity again and moaned long and low. I found myself talking to him, telling him what I wanted. I wanted to lick that pearl of precum. I wanted to feel his cock in my mouth as my orgasm approached. I begged him to cum for me, to cum *with* me. My pussy blossomed and fluttered as wave after wave of pleasure rolled over me.\n\nAfter I caught my breath, I stopped the recording and sent it to him before I had a chance to overthink it. The text just said:\n\n> \"oh no don't watch this\"\n\nI lay on the bed for a long time, feeling supremely comfortable in that post-climax glow. I was starting to get sleepy when my phone vibrated again. Biting my lip, I picked it up to see what he'd sent.\n\nThe message read simply:\n\n> \"don't worry I didn't\"\n\nThere was a video attached. I watched, fascinated, as the camera centered on his cock, and he began stroking it rapidly. He looked hard as steel, and I watched as his head swelled and then erupted. He continued stroking as rope after rope of thick cum shot onto his belly.\n\nBut what really did it for me was that he was groaning my name the whole time.\n\nI felt my arousal growing again as I watched the video several times in a row. Knowing that he was doing this just for me, that I had done this to him with my own video, was indescribably hot.\n\nI sent him another text:\n\n> \"Seems like you know a lot about ...phones. Wanna meet soon and see if we can help each other?\"\n\nHe responded quickly:\n\n> \"Sounds good. Maybe my place? I don't have roommates so you can switch your phone off vibrate and it won't matter how loud your ringtone is.\"\n\nI squeezed my thighs together with excitement at that idea.\n\n> \"Okay, but only if you take my case off and show me that firm grip.\"\n\nMy phone buzzed again a minute later with his reply, but I didn't notice because I'd turned my vibrator back on."
    ],
    "authorname": "pinkysurprise",
    "tags": [
        "male masturbation",
        "nudes",
        "panties",
        "phone sex",
        "photos",
        "pics",
        "sexting",
        "vibrator"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/whoops-wrong-number"
}