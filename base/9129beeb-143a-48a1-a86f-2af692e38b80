{
    "title": "Master! Master! Pt. 02",
    "pages": [
        "\"Didn't I tell you I was feeling sick yesterday? What do you mean you don't remember? I definitely remember telling you. Well look, I'm not coming in today. Whatever I ate, it's coming out both ends. I'm glued to my toilet. What are you, nuts? I don't even want to get in my car, let alone my cubicle. Yes, I swear it's the truth. Ok, hopefully I'll see you tomorrow.\"\n\nI hung up the phone and Momo pounced on me, wrapping her arms around my neck and purring like a Ferrari.\n\n\"My boss bought it. We got the day to ourselves.\" \n\n\"Yay! Momo wants to spend all day cuddling with Master!\"\n\n\"The feeling is mutual,\" I replied, rubbing her ears.\n\nWhether or not Momo truly understood the implications and meaning of sex, she sure seemed more energetic than she would normally be in the morning. Perhaps she was aware of the honeymoon period of relationships. Wow, to think I'm in a sexual relationship with my cat. To anyone who didn't know the situation, that would sound both incredibly depressing and horribly repulsive.\n\nBut while Momo said she wanted to cuddle, the growling of her stomach said otherwise. I too was starting to get hungry. I led her to the kitchen and prepared her breakfast, a bowl of dry cereal mixed with a can of cat food. I was still trying to figure out the best diet for Momo, and the cat food seemed nutritious enough, and she liked it. As Momo ate her breakfast on the floor, I made myself a bowl of oatmeal and a cup of coffee, decaf, as it wasn't like I needed to be anywhere.\n\nAfter brushing her teeth, Momo joined me on the couch, taking her rightful place with her head in my lap as I watched TV. As usual, she purred loudly with every touch, her ears twitching as I rubbed them between my fingers. Once I was finished with my oatmeal, I stroked Momo's hair with one hand and held my coffee with the other, simply enjoying the serenity. But the longer I sat with her, the more aroused I became. My dick was growing, and Momo could feel it against the side of her face.\n\n\"Huh? Master, your thing is hard again. Does this mean you want to play?\"\n\n\"Well maybe not play, but I could give you a special treat. Remember that white stuff from yesterday that you liked? If you put my thing in your mouth again, more will shoot out. But... don't bite down like you did before. Just use your tongue and cheeks and suck on it.\"\n\nEager to taste my salt, Momo removed my dick from my boxers and took it in her mouth. She did as I told her, keeping her teeth away from it and instead only the soft spots of her mouth. I rolled my head back and sighed, pacified by the wonderful sensation of oral. I continued to rub her ears as she worked, as if to thank her for her diligence. Her head was bobbing up and down, her tongue licking away my sweat as she tried to coax an orgasm out of me.\n\n\"Master, it's not coming out.\"\n\n\"It will, you just have to keep at it. But you're doing a great job; it feels really good. How about I help you feel good? Let me get under you and I'll lick you too.\"\n\nI lied down on the couch and Momo swung her leg over me, her smooth vulva right above my face. I licked my lips in anticipation and raised my head, slurping up her sweetness like my life depended on it. A deep shiver ran through Momo and she stopped blowing me to release a whimper of bliss.\n\n\"M-Master, it feels too good! Momo can't hold on if you do that!\"\n\n\"Just keep going and let's try to finish together.\"\n\nI resumed licking her, giving equal amounts of effort to her lips and to her clitoris. She tasted delicious, sweeter than any other girl I had ever dated, and I could still smell the soap from the shower she took last night. Overwhelmed by pleasure, Momo tried to resume blowing me, but it was hard to tell who would outlast the other. She was taking my cock deeper and deeper into her throat, doing whatever she could to ignite an orgasm in me.\n\nSoon enough, we both reached that amazing moment of a shared climax. I shot load after load of semen into Momo's mouth, bucking my hips as I did so, and she showered me in a storm of her arousal, with me continuing to lick her through the downpour. Momo collapsed and we both waited to catch our breath. I was blissfully tired, the sleepiness from getting up early returning and mixing with the post-orgasm fatigue. The same was true for Momo, who also had a metabolism halfway between a human and cat.\n\n\"Come on, let's take a nap.\"\n\nI got off the couch and scooped Momo up in my arms. Finally, I could carry a girl in the princess hold the way I had always wanted. I brought her into the bedroom and set her down, then went into the bathroom and brushed my teeth. Once I came back, I found Momo wrapped up in the sheets, eyelids dropping. She was trying to stay awake until I returned.\n\nSmiling, I climbed into bed with her and got under the blankets. She curled up next to me, purring in indescribable happiness. It didn't take long for us to fall asleep. \n\n--\n\nIt was about noon when I finally woke up, my nap cozy and restful. Momo was still sound asleep, clinging to me like a life preserver. Her body was so warm that it was actually making me sweat, and oh so soft. I pulled the blanket aside to let us vent some body heat, and so that I could admire her nude form. Her breasts were round and pert, her stomach was as flat and smooth as a runway, she had the ass and thighs of a volleyball player, and her slit was like a ripe mango. To think, I had this sexy little vixen all to myself, my little secret.\n\nI was starting to get aroused just by looking at her, even more when she rolled onto her back and put her body on display. Maybe it wouldn't hurt to tease her a bit. I started by simply tracing my finger around her areolas, a light touch, but plenty to make her purr in her sleep. I felt the bumps around her nipples like I was reading brail, while the pink drops became erect. My lust growing, I leaned my head down and pinched one of her nipples with my lips. The sensation made her release a small whimper of pleasure, but still, she remained asleep.\n\nI sucked on the pointing bulb, painting it with my tongue and running my tongue around it like I had my finger. There really are few sensations better than sucking on a nice pair of tits. While I worked her with my mouth, I sent my hand down, but instead of going straight for her gate of paradise, I continued to tease her with my fingertip, dragging it from side to side across her chest, then in a closing spiral around her navel.\n\n\"Master...\" she murmured, though it seemed like she was still half asleep. Maybe she was even dreaming; the sensations of her body bleeding into her subconscious world.\n\nI continued to move my hand down, finally reaching her plump lips. Again, I restrained myself to just a light tickle, brushing her curtains with my fingertip. I could feel her becoming wet, her juices dripping like condensing dew as her body prepared itself for insertion. I gave in to my impatience, spreading her lips and toying with the interior labia, while my thumb stimulated her clitoris.\n\n\"Master,\" she gasped again, finally waking up.\n\n\"Hey there, sleepyhead. How does that feel?\"\n\nShe stretched and smiled. \"Good!\"\n\nI took my lips from her breasts and joined them with hers, now letting my tongue explore her mouth as my fingers went to the next level. I inserted my middle and ring finger, probing her insides while I continued to play her clitoris like a game controller. Her voice started to break free of our joined lips as the intensity of my fingering grew, and she instinctively grasped my steely manhood, almost for comfort. She worked it in her grip, unknowingly giving me a handjob, a fitting form of mechanical stimulation to match my actions. It almost became a contest, to see who would reach nirvana first, and as Momo figured out how to slide the skin of my shaft, her skill and efforts soon equaled mine.\n\nAfter just a couple minutes, I ejaculated, laying some white threads on Momo's stomach. Momo became curious as my tool softened and shrank, breaking our kiss and looking down to make sure she still had it in her grip. Still just a cat. She continued rubbing it, trying to get it back to its former glory, and with her efforts, it soon regained its rigidity.\n\n\"Ok, now it's your turn to cum. Roll onto your side and raise your leg.\"\n\nCurious and horny, Momo assumed the position, showing me her back while her tail writhed in anticipation. I closed the distance between us and penetrated her slit from behind, using my seed as lubricant. She shuddered and purred as she felt it enter her, looking back and giving me a sultry look of lustful hunger, surprising when compared to her normal air-headed self.\n\nI started thrusting into her, once again using the mattress springs to help augment my movements while I groped her chest. She continued to purr, now with a moan on top of it. To be fucked and have her tits rubbed was almost too much for her, and I wasn't giving her any time to rest. I rammed her as hard and fast as I could, each time slamming my lap against her rear end and momentarily feeling her furry tail flattened between us.\n\nWait, that gave me an idea. If her tail was an erogenous zone, then maybe there was one more. I got one arm under her back and the other under her raised knee. From there, I curled her body, buying me a few inches of height. With just enough room, I opened my mouth and started nibbling on one of her ears, covering my teeth with my lips to protect the delicate skin. The moment my lips enveloped the tip of her ear, Momo released a shrill yelp.\n\n\"M-Master! It's not f-fair to do that! Momo can't hold on any longer! Momo... ROOOOOWR!\"\n\nShe gave her signature feline shriek and a colorless fountain pushed my manhood out of her, my sign that I had succeeded as a man. Hell, I didn't even mind having to wipe up the floor. I pulled out of Momo and let her stretch out. She was gasping for air and blushing with watery eyes.\n\n\"Master, that's cheating! Momo can't make Master feel good if Master makes Momo feel good!\"\n\nI smiled and brushed her messy black hair out of her face. \"Don't worry, I feel good when you feel good. But if you want, I'll save the ear nibbling for special occasions.\"\n\n--\n\nAfter having sex, we had lunch and returned to the living room, curling up on the couch and watching TV. Once the evening came, I made dinner for the two of us, and we waited until it was dark before going out on our evening walk. Afterwards, it was back home for a little more lounging, sex, and then off to bed. In all honesty, it was one of the best and most relaxing days of my life, just dozing at home with the best cat in the world. \n\n--\n\nWeeks went by and Momo established our routine. Wake up, have sex, eat breakfast, I go back to work, come home, we lounge, eat dinner, go for a walk, have sex, and go to bed. While I was at work, Momo would spend the day lounging around, usually punctuated with masturbation. Quite often, I would come home to find her writhing on the couch or bed, frantically rubbing her clit and moaning as she approached her umpteenth climax, her naked body glistening with sweat and liquid arousal, just begging for me to penetrate her. \n\nIt was a wonderfully simple life, made blissful by the assurance of romantic company, always knowing that I had my eager sex kitten waiting at home for me. And of course, I tried to teach Momo how to be more human. She got more used to wearing clothes (but still avoided them whenever possible) and I taught her some skills on how to prepare simple meals like cereal and sandwiches and how to use the TV. Maybe soon I would even teach her to read.\n\n--\n\n\"Huh? What?\" \n\nI raised my head and looked around the dark bedroom, trying to figure out what had woken me up. I thought it had been a noise, but I wasn't sure. I looked to my clock; it was a quarter past 1:00. Momo was still sound asleep. Wait, it happened again. I heard the sound of banging and striking metal. Damn it. As I sat myself up, Momo finally stirred.\n\n\"Master? Momo's too tired to play.\"\n\n\"No, it's not that. Something is rooting around in the trash outside, probably some raccoons. I'll go scare them off.\"\n\nI pulled on a pair of pants and got a flashlight and a bat. I thought Momo would get up with me, but following her feline instincts, she chose to go back to sleep. I went outside and circled the house to the trashcans, following the sound of rummaging. I banged my bat against the side of the house and shined my light on the overturned bins. \n\n\"Hey! Get out of there!\"\n\nBut out of the darkness, rather than a spot of gray, came a cloud of gold. A big yellow dog came out from behind the trashcans, dirty as sin but wagging its tail. It looked to be a golden doodle (half golden retriever, half poodle) and its hair was overgrown, nearly covering its eyes. It had a sweet face, looking gentle enough to carry a baby chick in its mouth without hurting it. I got down on one knee as it approached.\n\n\"Hey there, pup. What are you doing here?\"\n\nIt met my outstretched hand and continued to wag its tail as I rubbed its ears. It had no collar and it looked like it had been sleeping in dirt for a while, plus it seemed skinnier than it should have been. A stray? Those were rare.\n\n\"Come on, let's get you fed and cleaned off.\"\n\nI brought the dog inside and turned on the lights. Hearing the sound of claws on the wood floors, Momo peaked her head out of the bedroom and her hair stood on end. \"What's that?!\"\n\n\"Relax, it's a dog, perfectly harmless. Come say hello.\" Momo shook her head in refusal. \"Fine. I'm going to get this dog in the shower and clean him up. I want you to get a bowl and put in a few cans of cat food.\"\n\n\"But that's... MY food...\"\n\n\"And I'll get you more tomorrow. Just please do this.\" I then placed my hand on the dog's head and it started again wagging its tail. \"Come on, follow me.\" A nudge from me conveyed the message and I brought it into the bathroom.\n\nI turned on the shower and waited for the water to get warm. Like Momo, the loud hissing of the water made the doodle shy away, but I managed it pull it into the shower with me. The hot spray poured down upon it and it lowered its head as if ashamed. The water running off it looked almost like sewage, as there was a lot of filth to wash away. \n\nI poured almost a quarter of a bottle of shampoo on creature's back and began scrubbing it in, and finally it began to show a little joy. I rubbed it down from head to tail, mixing suds and dirt into a frothy brown mess. It took almost half an hour, half of that spent getting the shampoo in and the other half spent getting it out. Once it was as clean as could be, I turned off the shower and waited. My instincts were right, as the yellow hound shook itself off, but the spray never got past the shower curtain. \n\nI led it outside and began rubbing it down with a towel, but with its long hair, there was a lot of water I needed to remove. The dog was now smiling and again wagging its tail, loving the firm pets and attention. It even dropped down and rolled onto its back, inviting me to rub its belly. I could help but notice something missing.\n\n\"Oh, so you're a girl. Well aren't you a pretty lass? Nice and clean.\"\n\nSeveral minutes and two more towels later, I finally stepped out of the bathroom with the dog in tow. She was still damp, but there was nothing I could do to get her any dryer except wait.\n\n\"Momo, you got the food ready?\"\n\nNo answer. I stepped into the living room and found a bowl with some cat food set on the floor, with Momo hiding in the kitchen, a low growl in her throat. The freshened doodle rushed over to the food and gorged itself while I went over to Momo.\n\n\"Come on, say hello.\"\n\n\"No! I don't want to!\" she said with a pout.\n\n\"Stop being such a brat! Come on, she's harmless.\"\n\nI pulled Momo over to the dog, who had just finished her food and licked her bowl clean. Hopefully that was enough food for her. \"Just hold out your hand and let her smell it.\"\n\nMomo nervously did as I told her and held out her hand. A happy ray of sunshine, the dog smelled her hand, finding Momo's scent to be very interesting, a smell she didn't understand. She closed in, trying to figure it out, but Momo got spooked and jumped behind me, hissing at the intruder.\n\n\"I still have work tomorrow, so let's all go back to bed.\"\n\n\"You're going to let that thing in the bed with us?!\"\n\n\"Relax, I'll sleep in the middle. You can be on one side and she'll be on the other.\"\n\nStill growling, Momo returned to the bedroom and hid herself under the sheets, staying as close to the edge of the of the mattress as she could. Ugh, such a drama queen.\n\n\"Come on, pup,\" I said, turning off all the lights and following Momo.\n\nThe dog walked alongside me, happy as could be, and a single word from me got her up onto the bed. I took my place in the middle, a very affectionate dog on one side and very angry cat on the other. \n\n--\n\n\"Say cheese!\" Not understanding what I was saying but happy I was talking to her, the doodle continued to smile and wag her tail as I took her picture. \"There. Now I'll just make some \"found dog\" posters before I leave work and I'll put them up tonight. Good thing we live in the suburbs, there are plenty of people around to see them.\"\n\n\"So when will she be gone?\" Momo asked with evident impatience, keeping her distance.\n\n\"I don't know, could be a week, could be a month. We just have to hope that her owner happens to see a poster and calls. Otherwise, she'll live with us.\"\n\n\"Momo doesn't want her here! Make her go away!\"\n\nI stormed over and gave Momo a flick to the forehead. \"Enough of that! If I had found you out there last night, I would have taken you in. Until I know that she has a home, this dog isn't going anywhere. Deal with it and stop being such a brat.\" I then retrieved my keys and phone and made my way to the door. \"Ok, I already let her outside to do her business. If she paws at the door, you can let her out. Just don't go out with her and let her in if she comes back. Please, try to get along with her. If you can play nice, I'll make a nice meaty dinner for you to tonight. Ok?\"\n\nMomo pouted and looked away, fighting the urge to continue rubbing the spot on her forehead. \"Ok,\" she mumbled.\n\nI walked over and kissed her, a long embrace to warm her heart and cheer her up. \"Good, I'll see you tonight. I love you.\"\n\n--\n\nIt's rather hard to focus on work when you're worried about your pets. The dog would be fine, sure. At worst, she would maybe chew on something or take a dump on the floor. Momo was the real concern, my neurotic, bitchy cat. No, that's not fair, she's just jealous. Besides, it's what to expect from a cat when a new dog shows up. I printed a stack of fliers saying I had found the doodle, enough to cover a wide area. Hopefully her owner wouldn't be too far away. I then stopped off at the store to pick up food for the three of us and made my way home.\n\n--\n\nI could hear the dog barking as soon as I got out of my car, making me sick to my stomach. I rushed to the front door and opened it, expecting to see something terrible. Instead, I found only the doodle, standing at the door and wagging her tail. I knelt down and rubbed her head. \"What a good watchdog you are.\"\n\nI looked around, not seeing any apparent damage to the house, nothing broken. Nor did I see Momo.\n\n\"Momo?\"\n\nThe bathroom door flung open and Momo pounced on me, crying hysterically. \"Master, you're home! It was so awful! This monster kept following Momo around the house and bullying Momo! She wouldn't leave Momo alone! She was going to eat Momo!\"\n\n\"Oh for fuck's sake. Did you spend the entire day hidden in the bathroom?\"\n\n\"Uh-huh!\" she said with a sniffle. \n\n\"Momo, she's saying she wants you to pet her. When you get into my lap or follow me around, what does it mean?\"",
        "\"That Momo wants to cuddle with Master!\"\n\n\"That's right. And when the dog gets in your lap or follows you around, it means the same thing. Here, just try petting her.\"\n\nMomo at first refused, but with her hand in mine, I coaxed her into at least touching the dog's head. The yellow pup didn't react much, good or bad, as to be expected from such flimsy contact. I kept rubbing her with Momo's hand, and eventually, she resumed wagging her tail. At last, Momo calmed down and rubbed the dog's head on her own.\n\n\"See? Now that's not so bad. She just wants love. Feel better?\"\n\n\"Yeah.\"\n\n\"Good. Now, how about a special treat? I was going to put these fliers up around the neighborhood. How about you come with me?\"\n\nHer ears perked up at the offer. \"Does Momo have to wear clothes?\"\n\n\"For this, yes. We'll be out in the streets, not alone in the park. We just have to hide your ears and tail and get something on your feet.\"\n\nI got her to put on some sweatpants and a t-shirt, deciding it would just be best to hide her tail in one of the pant legs. To cover her ears, I tied a bandana over her head and had her wear a pair of my old flip-flops. Frankly, the whole outfit made her look like a new recruit into a Latin street gang, but it would do.\n\n\"Ok, since we'll be walking the streets, there might be other people around. If they try to talk to us or introduce themselves, just say \"Hi, my name is Molly\", leave the rest of the talking to me, and I'll try to get us out of it.\"\n\n\"But Momo is Momo.\"\n\n\"I know, but Molly sounds more human. You're just pretending. We'll put these fliers up around the neighborhood. Who knows, the dog might find her way back home if we go out looking. Are you ready?\"\n\nMomo looked at herself, as if judging her outfit. She curled her toes in the flip-flops and fidgeted with the bandana on her head, but finally nodded. She and the dog followed me outside, Momo relishing the feel of the sun after so much time. The dog quickly did her business in the front yard, with Momo flashing an angry gaze at me.\n\n\"Why does she get to do that outside? Shouldn't she have to use the toilet like Momo?\"\n\n\"First of all, you're now a person. She's not. Second of all, I'm not having sex with her. I need you to be clean.\" \n\nJesus Christ, I can't believe I'm having this conversation with my fucking cat.\n\nWe started off down the sidewalk, Momo on one side of me and the dog on the other. Both of them looked happy to be outside, Momo especially glad since her only outside exposure had been the park at night. The last time she had walked the streets like this, she had just been a regular cat. It was a lovely summer afternoon, the sun nearing the horizon but still offering hours of illuminated activity, and the warmth was welcomed. The air was rich with the smell of grass and flowers from the manicured lawns and gardens. Right about now, parents were coming home from work, seeing their kids, maybe taking their dogs to the local park. The slamming of car doors was echoing down the street. At every street lamp, we stopped and I taped up a flyer.\n\n\"So why don't you like her?\" I asked, making Momo pout.\n\n\"Momo doesn't trust her. She's just waiting for a chance to eat Momo and take Master.\"\n\n\"Ah, so you're jealous. You're mad that you're not getting all of Master's attention, that there is another furry friend in the house.\" Momo continued to pout. She was acting surprisingly human. I put my arm around her and pulled her close. \"Don't worry, she can never replace you. She's just a cute airhead, a big pile of fur that wants to be petted and rubbed.\"\n\n\"So is Momo!\" she cried. That actually made me laugh a bit.\n\n\"But I can't talk with her, I can't rely on her, I can't play with her in the special way we do.\"\n\nFinally, she smiled. \"Momo loves Master.\"\n\n\"And Master loves Momo. Now come on, let's put the rest of these fliers up and get home. I promised you a big meaty dinner.\"\n\n--\n\nWeeks passed and no one came for the dog. I never received a single phone call, and even posting online yielded no results. Either she had come from far away or nobody was looking for her, and I eventually came to realize that she was now mine. But on the plus side, Sonja (as I decided to call her) made herself right at home. I took her to the vet, got her all checked out and up to date on her vaccinations, and then dropped her off at a groomer to shave off all of that matted hair. Every day I would wake up, my dog snuggled up with me on one side and my cat-turned-human on the other. I would feed the two of them, go to work, come back, and then we'd take our evening walk. When we relaxed on the couch, I would sit in the middle with Momo's head on one thigh and Sonja's head on the other.\n\nSex with Momo unfortunately lost some of its frequency. We'd have to wait for Sonja to fall asleep in one room and then go into another. Otherwise, she would come up to us, thinking we were just wrestling and wanting to get involved. Not to mention that it's awkward to fuck when your dog is on the other side of the mattress, watching you.\n\nAt least Momo and Sonja learned to get along. Momo still didn't trust or like Sonja and kept her food bowl away from her, but when the dog came up to her, she would at least pat her head. \n\n--\n\n'Oh no. Oh God, no. Why is this happening to me? Why is this happening again? What the fuck did I do to deserve this fate? God, if you're up there, please realize how much stress you're putting me under.'\n\nThese were the first thoughts that popped into my head when I woke up on that August morning. And what would make me think this? Why, a titty in my hand, of course. Without even opening my eyes, I knew it wasn't Momo's. Momo's breasts were a good size, large enough for any man to be content, but the soft mountain I was trying to contain was beyond the yield of my fingers. It was like if you cut a melon in half and laid them side by side, you would have a perfect analog for Momo's breasts. But these were like two whole melons. And of course, there was only one reason for a pair of colossal titties in my bed, as ridiculous a reason as it may be.\n\nI opened my eyes, looking at a beautiful sleeping face. The young woman had sun-kissed skin, porcelain smooth, and long blonde hair. But even with my grogginess, I could see one large dog ear hanging down the side of her head, camouflaged with her hair. I sat up and gave her a full scan with my eyes. Her body type was just like Momo's, just a bit taller and of course with cans that a man could happily suffocate under. But above her rear end, right where her tailbone would be, an actual tail, slightly curved, almost as long as her legs, and very fluffy.\n\nJesus Christ, my life is turning into The Hangover meets The Island of Doctor Moreau. Why did this happen again? How could this happen again? Do I have some crazy power that turns animals into sexy girls? If Sonja had been a male dog, would I have woken up next to a well-hung Aryan model from Abercrombie & Fitch? Or would he have lost his dick and gone XX?\n\nAt the very least, today was Sunday, so I had time to get things figured out. But if my boss called me, I would burn the office to the ground. \n\nI tried to get out from under the covers and escape my bed, but before I could reach the floor, my movements woke Sonja. She yawned and gave a wide stretch from her fingers to her toes, then opened a pair of bright blue eyes. \"Good morning, Master!\"\n\nThe voice of a stranger made Momo bolt from her sleep. She sat up, looking at Sonja in horror and pointing at her. \"What in the world is that?!\"\n\n\"Mornin', Momo!\" Sonja said cheerfully.\n\n\"Momo, that's Sonja. Apparently, whatever happened to you has now happened to her.\"\n\nMomo switched her gaze from me to Sonja, her hair standing on end. \"No! It's not fair!\"\n\n\"Momo, I know this is a complicated time, but please calm down. Let's all eat breakfast and figure this out.\"\n\n\"Yay! Food!\" \n\nSonja jumped off the bed and began doing a strange dance. She was moving her feet around in frantic little steps, shaking her butt, and wagging her tail. For a moment it just looked weird, then I realized that it's the same exact dance that all dogs do when they're really happy. It's pretty damn cute.\n\nI got out of bed and got dressed, but Momo didn't move. On her face was a look of fury, sorrow, and panic. Regardless, as Sonja and I made our way to the kitchen, she inevitably followed. For Sonja, I gave her a bowl of dry dog food mixed with milk, and for Momo, I made her scrambled eggs. I just went with cereal. As usual, Momo ate far away from Sonja, but it was funny watching them eat. These two naked girls, both facedown with their faces buried in food bowls, kneeling in the exact same posture with their tails sprawled out behind them.\n\nBut watching them, the first obvious problem rose up: Money. I made good money at the insurance company I worked for, enough to pay the rent and keep Momo and I well fed. Hell, I was even able to afford the dog food for Sonja. But now Sonja had become a person, meaning three adult people on one man's salary. If I pinched my pennies and cut down on expenses, I could probably stay just above breaking even. But that left me in a precarious situation. The moment my cash outflow exceeded my inflow, the clock would start ticking, a timer to see just how long I could make my savings last, and at my age, that wasn't very much. If something happened to me or my car needed repairs, I would be up shit creek.\n\nThen came the next problem: Sonja herself. The chances of someone discovering this... whatever the hell it is... had just doubled. Unlike Momo, Sonja was active and loud. Every day I came home, she would be barking at the door. What the hell would she do now when the mailman came? And it would be much harder to keep her inside. Momo was still like her original self: lazy and quiet, except for the rare times she would get a sudden jolt of energy and run back and forth through the house. Yep, even as a person, she had that cat trait. Sonja had more energy, and would probably be hyperactive.\n\nLast was probably the biggest problem: how far was this going to go? I still had no fucking idea what was going on or what had caused this. Was this me? Did I have some weird magical power? So far, two animals had turned into people, meaning that there was no reason for me to expect it to stop now. Would I have to start avoiding animals for the rest of my life? Would it work on anything else? Hell, if I didn't get my house sprayed for pests in the spring, was I going to end up with an army of insect babes marching from room to room in search of sugar? And what was the range? Were other pets in the neighborhood going to start changing?\n\nThe answer was simple, but the actual effort and procedure would be monumental: I was going to have to move. It was the only reasonable option. I would have to find a place that was secluded, away from other pets, and most importantly, people. A place with more room, where the girls could go outside freely, rather than being cooped up all day. And it was going to have to be affordable. Unless I got a raise or a higher-paying job, I would need a mortgage with the lowest possible rates. Anything above my current rent and I was screwed.\n\nOh, there was one more problem. I had given up expecting someone to retrieve Sonja, but now I had to hope no one came. What if someone showed up at my door, asked to see their dog, and this busty blonde with dog ears and tail pounced on them without clothes on? I'm not sure which would be worse, just trying to explain it or the three of us getting locked away in some government lab. I needed to get rid of all of those fliers I put up. But now that Sonja had turned into a person, I could ask her directly.\n\n\"I'm full! Thank you, Master!\"\n\nEven while looking at her, I hadn't noticed Sonja finish her breakfast. She skipped over to me, the sunniest smile on her face, and started bouncing in front of me. I was mesmerized for a few moments, watching her breasts jiggle with each movement. Hello, morning wood. Looking up from her bowl, Momo saw the bulge in my pants and her ears drooped. A scowl on her face, she rushed over and embraced me, her breasts pressed against my chest while she gyrated her hips. \"Momo's full too. Thank you, Master.\"\n\n\"Um... I'm glad. How about we all sit on the couch. There's something I need to talk to you two about.\" I took my place in the middle of the couch with the girls on either side of me, both with their hands on my thighs. Every time Sonja got close to me, Momo would get closer.\n\n\"Ok, to start, Sonja, do you realize that something has happened to you?\"\n\nShe looked herself up and down, from her hands to her feet. \"I think so. My body is weird. But now I can see better and I'm not hot all the time! And best of all, now I can talk to Master!\"\n\n\"Well do you know exactly when you became like this? Did you feel anything when it happened?\"\n\n\"No. I went to sleep last night and woke up like this.\"\n\nJust like Momo, so no hints as to this craziness. But on a side note, Sonja didn't speak in the third person like Momo did. Did that have to do with their intelligence? Their personalities?\n\n\"Well I need to ask this: where did you live before you came here?\"\n\nSonja's happiness vanished in the blink of an eye, her tail becoming limp and her smile vanishing. She looked down, wringing her hands together. \"A bad house.\"\n\nI now regretted asking her. But as uncomfortable as it made her, I had to make sure she hadn't left behind any loose ends. \"I'm sorry, what was bad about it?\"\n\n\"People weren't nice to me, and there wasn't much food. I didn't get to sleep inside very often, even during the cold nights. I didn't have a name. They just called me \"dog\", and they yelled a lot. I ran away, but they don't care that I'm gone.\"\n\nGoddammit, this is like an ASPCA commercial! I felt sick to my stomach, not wanting to imagine what this poor girl had gone through, even as a puppy. Now I want to go on a fucking rampage and kill the shits she was stuck with! But then Sonja grasped my hand with both of hers and held it against her chest. It surprised me, such a human move.\n\n\"But then Master found me and took me in when I had no home! I never knew that it was possible to be so happy and have so much fun!\" Shit, now there are ninjas in my house, chopping onions! Fucking heartstrings! Sonja threw herself forward and wrapped her arms around my neck, her cheek pressed to mine. \"I looooooooooove Master!\"\n\nGripping my arm, Momo tried to pull me away. \"No! Master is Momo's! Only Momo gets to play with Master!\"\n\n\"But I want to play with Master too! I want to run and chase and roll around with Master! Let's go to the park! Can we go to the park? Can we go to the park, Master? Come on, can we? Let's go to the park!\"\n\nAt least she didn't understand what Momo meant by \"play\".\n\nI managed to pry them both off me. \"Girls, settle down! Now listen, Sonja, things are going to have to change around here. Now that you're no longer an ordinary dog, you're going to have to learn all the things that I had to teach Momo.\"\n\n\"I wanna learn! I'm ready to learn! Learn! Learn! Learn!\" She then got up from the couch and ran to the veranda door, jumping up and down. \"Let's go outside and learn! I'm ready! Come on! Come on!\"\n\nOh honey...\n\n\"Sonja, that's the first thing. From now on, you can't go out during the day. The reason why we go on our walks at night is because the park is empty, there's no one around to see Momo. It's the same for you now. From now on, no going outside except for evening walks.\"\n\nI could almost hear the sound of glass breaking, as once again, Sonja's happiness was utterly erased. I almost expected her to start bawling.\n\n\"What? I can't go outside anymore?! But I want to play and run around! I want to roll in the grass!\"\n\n\"I'm sorry, but we absolutely can't allow anyone to see you.\"\n\n\"But what am I supposed to do when I need to pee? I really need to go!\"\n\nI covered my face with my hands and groaned. It was time once again.\n\n\"Come on, Sonja, follow me into the bathroom. I'm going to teach you to be an adult.\"\n\n--\n\nBless Sonja's heart, she took it like a champ. Teaching her to sit down on the toilet to do her business was easy, just tell her to do it and it's done. When I taught her to use toilet paper on the front, she blushed a bit and shivered, but no complaint, just like Momo. Unlike Momo, who hissed and swung at me, Sonja did her best to maintain a silent dignity when I taught her to use it on the back. Girls, you may hate me for this, but it's for your own good. I don't want to see you scooching across the rugs on your butts.\n\nWe stepped out of the bathroom and I rubbed her head, hoping that a bit of love would ease some of the awkwardness. While she didn't look at me, a slight wiggle of her tail put me at ease. \"Good girl, you were very brave. Tonight, I'll teach you to brush your teeth, and don't worry, Momo seemed to enjoy it.\" The compliment made her smile and her tail wagged with more fervor. \"Yes, you are a good girl. Now how about we relax on the couch?\"\n\nThe three of us plopped down in front of the TV and sighed in happiness. Sonja curled up the way she usually would, now resting her head on my thigh. Momo, not to be outdone, tried to squeeze onto my lap. It took a few minutes for her and I to compromise on a good position, settling with her leaning her head on my shoulder, clutching my arm, and interlocking our legs just for that extra closeness. With one arm locked down and half my lap occupied, it was hard for me to use my laptop. \n\nSince I had decided to move for the sake of the girls, I needed to find available properties near me, for sale or just rentals. My next house had to be isolated, preferably with trees for cover, and close enough to my job without the gas expenditure getting out of hand. It also had to be affordable, so I was searching under the same parameters as I did to get my current house: small, mediocre, and hopefully some people had died in it. Nothing dropped a house value better than death.\n\nSonja and Momo seemed to pay little to no attention to what was on TV. They were almost dozing, focusing just on the sensation of being close to me. In a way, it was the same for me. What man wouldn't relish cuddling up with two beautiful naked girls? The longer we relaxed, the sleepier we became, our lack of exertion resonating with our early breakfast. It was something I was used to, for as a cat owner, I almost never got to sleep in. Momo's stomach was my alarm clock (I mean back when she was a normal cat). Even on days off, she would wake me up to feed her, so I decided to simply have my breakfast with her, lounge on the couch for a bit, and wait for my tiredness to return and take a nap.\n\n\"Ok, girls, I think I'm going to head back to bed.\"\n\n\"Yay! Sleep with Master!\"\n\n\"Not without Momo!\"\n\nThe two of them jumped off the couch and ran to the bedroom, Sonja with a smile of absentminded joy and Momo maintaining her scowl of competitive jealousy. They stopped when they reached the doorway and looked back at me.\n\n\"Master? Aren't you coming?\" Momo asked.\n\nA smile on my face, I looked at the two naked beauties standing at my bedroom door, utterly mesmerized. The light of the midmorning sun was shining on their bare bodies, perfectly shaped for sex like the nymphs of Greek myths, their flawless skin looking soft as silk. Their ears and tails added to their mystery, their mysticism, and also highlighted the taboo of their very existence. I had already gotten to know Momo intimately, and it was inevitable that my relationship with Sonja would blossom in the same way. Had I defiled them or myself? But what I loved most of all was their faces, that pure, loving innocence, so beautiful, so adorably airheaded.\n\n\"Yeah, I'm coming.\"",
        "--\n\n\"Ok, girls, close your eyes and pinch your noses.\"\n\nSonja and Momo did as I told them, covering their faces so that I could lace them with bug spray. It was time for our evening walk, the first time for Sonja since becoming human. Once I was done, Sonja sniffed herself and grimaced.\n\n\"Masteeeeer! This is stinky!\"\n\n\"Better stinky than itchy. Trust me, you don't want to be covered in bug bites. You ready? Let's go.\"\n\nNaked as a jaybird, or technically, a dog, Sonja pranced around the field as Momo and I walked the park path. Like Momo, she had no problem going barefoot and was as energetic as usual, inspecting each unusual scent and searching for anything interesting. \n\n\"See, now this isn't so bad,\" I said to Momo, walking beside me.\n\nMomo scowled. \"Momo doesn't want her around Master.\"\n\n\"Because you don't want me to play with her the way I play with you?\"\n\nShe turned to me. \"Because Momo doesn't want Master to like playing with Sonja more.\"\n\nI grasped her hand. \"Momo, there is no one I like playing with more than you.\"\n\nRunning over to us from the darkness of the nearby woods, Sonja appeared with a stick in her mouth and dropped it at my feet. \"Master! Can you throw the stick?\"\n\nI smiled and picked it up, giving it a fair toss across the field.\n\n\"Yay!\" Sonja exclaimed as she ran after it. I made sure to keep my flashlight pointed at the spot where it had landed so that she could find it. Retrieving the stick, she turned around and ran back, with me unable to resist watching her titties bounce.\n\n\"Momo! Come run with me!\"\n\nMomo clutched my arm. \"Momo doesn't run. Momo likes to walk next to Master.\"\n\nSonja grabbed my other arm. \"Then I'll walk with me Master too!\"\n\n\"You girls are just too much.\"\n\n--\n\n\"Shower time, girls,\" I said as we returned home, stepping through the front door.\n\nFor Momo, this was routine. After a hot and sweaty day, followed by being sprayed with bug repellent, she would have hopped in the shower without me telling her. Now that Sonja had become a person, she had to do the same. Her ears dropped at the prospect. \n\n\"Aw, I hate showers.\"\n\n\"Don't worry, it won't be that bad. Momo will go first, then I'll go in with you and show you how it's done.\"\n\nHearing that, Momo grabbed Sonja and pushed her towards the bathroom. \"Momo will show her how it's done. Master doesn't need to do it.\"\n\nIn the bathroom, Momo turned on the water and waited for it to get hot before pulling Sonja in. Unable to resist, I pulled away the shower curtain, putting them on display while I sat down on the toilet to watch. Yeah, I know I'm a scumbag, but there's no way I was going to miss this. \n\n\"Master?\" Momo asked.\n\n\"Oh, uh, just making sure you don't forget to teach her anything. \n\nSonja scrunched up when the water first touched her, just like she would as a dog, but became much more relaxed the longer it poured on her. Maybe it was because they were still animals at heart, but she was taking it much better than Momo had when I first washed her.\n\n\"So first, you're going to shampoo your hair. You don't want to do it every time you shower because that will damage it. Just every three days.\"\n\nFollowing my directions, Momo poured some shampoo onto her palm and then started rubbing it into Sonja's scalp. The blonde beauty smiled and wagged her tail, relishing the feeling of someone playing with her hair and massaging her ears. I remember Momo reacting in the same way when I first bathed her.\n\n\"Now you'll let that sit for a couple minutes. Momo, soap her down, and don't forget to get yourself.\"\n\nSonja stepped out of the water and Momo retrieved the bar of soap. Working diligently, she scrubbed the two of them down, leaving their bodies coated in a white film. I watched her with aroused focus, focusing on the bar of soap as it moved across their skin. I directed most of my intention when Momo soaped up her breasts, her pert cupcakes with gumdrop nipples, then Sonja's, the two soft bowling balls on her chest, the nipples soft and smooth under the hot spray. Just watching those balloons shift and flatten with the presses of the soap was enough to drive me nuts.\n\n\"You know, Momo, the two of you will get really clean if you rub your bodies together. It will get you really sudsy.\"\n\nMomo wasn't comfortable pressing her body against someone other than me, especially someone she considered a rival, but she didn't understand what I was really getting at and decided to obey. The two women pressed their chests together and started rubbing, their breasts smooshed and kissing while their bellies slid across each other like two sheets of ice. The sensation was more intense than either of them expected and they began to pant, a noticeable blush crossing their faces as they continued to rub their tits together. Watching them, my whole body was shaking in arousal and I was even precumming a bit. I wanted to put my dick right between them, buried in their joined, soapy cleavages. \n\n\"Don't forget between the legs, just like how I washed you,\" I said. Momo looked at me. \"Unless you want me to do it.\"\n\nShowing no hesitation, Momo thrust her hand down and started playing with Sonja's pussy, lathering it with her soapy fingers. Sonja moaned from the sudden fondling, having never been touched in such a way before. It was impossible for her to even expect it and her mind didn't know how to process what it meant. She didn't know what was going on, all she knew was that she liked it. Her instincts told her that she was supposed to imitate what was happening, so acting without thought, she began working her own fingers between Momo's legs, shocking the feline.\n\nI watched in utter amazement, the two beauties fingering each other while their nipples kissed. They were panting and moaning, such a small space between their parted lips. It was almost a competition, Momo increasing the strength of her petting as if to get Sonja off her, while Sonja tried to keep up. Momo soon gave in, wrenching herself away from Sonja and jumping out of the shower. Still half-covered with soap, she straddled my lap, a look of lustful desperation in her eyes.\n\n\"Master, please, Momo is going to go crazy. Momo wants Master's thing inside her.\"\n\nAlready achingly erect, I managed to wrench my cock free from my pants and Momo settled herself on top of it. She moaned as it penetrated her, her pussy slippier than ever, both from her arousal and the soap on Sonja's fingers. She began riding me with water splashing off her ears with each movement. Sonja watched us with deep curiosity, not understanding what Momo and I were doing but wanting to try it for herself. Leaning over, Momo ran her tongue through my mouth like I was an empty tuna can, while I savored her sweet taste and the feel of her womanhood on my cock. I had her ass in my grip, cradling the bodacious cheeks and using that leverage to help raise her up higher and drop her down harder, defiling her pussy until, at last, she cried out in euphoria.\n\n\"ROOOOWR!\n\nHaving achieved her orgasm, she was able to calm down. She gave me a silent kiss of gratitude and then returned to the shower, where Sonja was still very confused and very interested.\n\n\"I want to play with Master like that too!\"\n\n\"No, only Momo and Master can do that. Let's rinse off and go to bed.\"\n\n--\n\n\"Uh... girls? I need to get up. Girls?\"\n\nI was on my back, Momo on one side and Sonja on the other. My hands were between their legs, my arms were held in their embrace and between their tits, and their legs were wrapped around mine. My alarm was beeping but neither cat nor dog wanted to wake up. I tried pulling myself free, but they were holding onto me like their lives were depending on it, as if we were stuck out in a frozen wasteland and had to huddle together for warmth.\n\nTheir lips against my fingers, my first instinct was to try and fiddle with their pussies and force them awake. Without opening their eyes, the two girls started whimpering and humming in bliss, their faces turning red. \n\n\"Girls, come on, I need to get up.\"\n\n\"Five more minutes,\" Momo whined, starting to come to but wanting to stay asleep.\n\n\"It's time for breakfast.\"\n\nMomo and Sonja bolted up with such speed that they almost bounced off the bed. \n\n\"Breakfast! Food! Food! Food! Food! Food! Food!\"\n\n\"Master, Momo wants food!\"\n\nThey then climbed off and ran into the kitchen, leaving me in the bed.\n\n\"Master! Come on and feed us!\" they called from the kitchen.\n\nSometimes those two can be a pain in the ass.\n\n--\n\nI prepared breakfast for the girls and ate my own, getting myself ready to go off to work. I soon found myself at the front door, doing a mental check to make sure I had everything in order. Keys? Check. Wallet? Check. Phone? Check? Showered, shaved, and brushed teeth? Triple check. Food for the girls? Check. I looked over to them, sitting on opposite ends of the couch. Wait a sec, there was one thing I hadn't yet gone over.\n\n\"Sonja, can you come over here for a second?\"\n\nHearing her name, Sonja jumped off the couch and ran over. She reached me and crouched down with her tail wagging.\n\n\"Sonja, you how every time I come home, you start barking?\"\n\n\"Of course! Because what if you're not Master? What if you're an intruder? I need to protect the house!\"\n\n\"And I appreciate the sentiment, I really do, but you can't do that anymore. You can't make any noise, you can't let anyone hear you or know that you're here.\"\n\nHer tail stopped wagging. \"But what if someone tries to break in?\"\n\n\"That's why I keep the doors and windows locked, so they can't. And who would? The chance of someone choosing my house to break into is almost nonexistent. I mean, come on, why the hell would they pick this shack? This is one of the cheapest properties in the county, who could possibly think I have anything worth stealing?\"\n\n\"What about your couch? Or your bed? Or your food?\"\n\nShe's a dog, of course she sees different values than I do. \n\n\"Trust me, no one is going to try to take that stuff. Listen, the only people who could possibly come by are the mailman or someone leaving Thai food fliers. No matter what happens, you aren't to make any noise. I've already had this talk with Momo. If someone comes to the house, you go and hide in the bedroom and don't make any noise.\n\nSo, what do you do if someone comes to the house?\"\n\n\"Bark really loud to scare them off!\"\n\nI covered my face with my hand and sighed.\n\n\"No. You make no noise and hide in the bedroom. One more time, what do you do if someone comes to the house?\"\n\n\"Tell them that this is Master's home and that they need to get lost!\"\n\nTime for some tough love. I grabbed a newspaper from my coffee table, rolled it up, and smacked Sonja over the head. It didn't actually hurt her, but she stared up at me in shock.\n\n\"You will do no such thing! You won't make any noise and you won't let anyone see you! Now answer me, what will you do if someone comes to the door?\"\n\n\"Yell at them to go away!\"\n\nSMACK!\n\nShe winced as the rolled-up newspaper slapped the top of her head.\n\n\"I'm going to be late for work at this rate. Momo, I'll leave this to you. Continue hitting her over the head until she gets it. If someone comes to the door, keep Sonja from making noise no matter what. Sonja, NO NOISE.\"\n\nI opened the door and stepped outside. As I walked to my car, I heard the whap of the newspaper. That pretty little idiot. Hopefully she'd figure it out before Momo would have to knock her out with a book.\n\n--\n\n\"So, what did you want to talk to me about?\"\n\nI had just stepped into my boss's office, trying to build up all the courage I had. I hoped to look nothing like the overweight balding man when I reached his age. I sat down on the other side of his desk and took a deep breath.\n\n\"I want a raise.\"\n\n\"And I want to win the lottery. Which do you think is more likely to happen?\"\n\n\"Let me rephrase: what do I need to do to get a raise?\"\n\n\"Look, even if I wanted to give you a raise, there's no room in the budget. For God's sake, you've been here for three years. Do you really think you deserve a raise?\"\n\n\"Come on, I work harder than anyone else here. Name one person who gets more done.\"\n\n\"Like I said, there's no room in the budget for anyone to get a raise. Where's this coming from? Did you knock someone up?\"\n\n\"Not exactly. Let's just say that I have people to take care of and leave it at that.\"\n\nMy boss leaned back in his chair. \"Ok, I'll tell you what. A regional manager position is opening up, meaning I may be able to move up the ladder. If I get the job, I'll give you my office manager position. But I want you to show me that you deserve a promotion. The decision will be made in two weeks, so I suggest you work your ass off until then.\"\n\nI reached out to shake his hand. \"Consider it done.\"\n\n--\n\nIt was another long day at the office, especially long actually. I had stayed late, doing everything I could possibly do to make myself busy. For these next two weeks, I had to go above and beyond as the model employee and show that I had what it took to run the office. I was completely exhausted and not looking forward to the coming days. I had even picked up some Thai food on the way home, not having any energy to cook.\n\nBut on the plus side, when I arrived home and slammed my car door shut, I didn't hear any barking. Or whatever sound Sonja would now make. It seemed Momo had gotten through to her. I opened the door, seeing neither of them.\n\n\"I'm home!\"\n\n\"MASTER!\" Sonja bolted out of my bedroom and charged towards me. \"MASTER! MASTER! MASTER! MASTER! MASTER! MASTER! MASTER! MASTER!MASTER!MASTER!MASTERMASTERMASTERMASTERMASTER!\" She tackled me, nearly knocking me onto my ass, and held on tight, her tears soaking my shirt. \"Master! You were gone so long! I didn't think you would ever come back! It's so late! Please don't be away for so long ever again!\"\n\n\"Aw, I'm sorry, Sonja. I had to stay late at the office. But where's Momo?\"\n\nI looked to the doorway of my bedroom, seeing Momo, hiding with tears in her eyes. Like Sonja, she rushed over and embraced me, but instead of yammering her fears, she silently cried into my chest. I had two naked beauties, crying from their loneliness. I could do nothing but smile and hold them close.\n\n\"I'm sorry, girls. I'm so sorry. Don't worry, I'll always come home. I'd never leave you. Come on, let's relax on the couch. I got us all dinner.\"\n\nThey wouldn't let go of me, so I had to walk the three of us over to the couch and sit us all down. We stayed there for a few minutes, the two of them with their faces buried in my chest as I held them in my arms. Is this how pets normally feel when we leave them alone for too long? Eventually, they calmed down and I was able to distribute the food. I didn't know what they'd like, so I just ordered the most normal (and cheap) food I could, avoiding weird sauces and spices and focusing on meat and vegetables. Momo was downing shrimp like shots of tequila and Sonja was nibbling away at chicken on a stick.\n\n\"Now girls, for the next two weeks, I'm going to be coming home late. I'll be working really hard at the office. But if my work pays off, I'll be able to get something really good for us. So, I need the two of you to be patient, stay calm, and know that I'm coming back for you. Can you do that?\"\n\n\"Yes,\" said Sonja. \n\n\"Uh-huh,\" said Momo.\n\n\"Good, now let's finish eating and go for our walk.\"\n\n--\n\nThe next week was a nightmare, getting up extra early to be the first one at the office and staying late to be the last person to leave. I worked through lunch, took no breaks, and made sure that I accomplished every task that could be done. I tried to take more of an administrative role in the office, showing my boss that I could replace him as the manager. It takes more than work ethic to get a promotion; I had to show that I had the skills required for the job. \n\nThe girls hated my new schedule, waking them up earlier and not getting home until later. It was a long time to be away from them. When I did come home, I was exhausted, but still had to cook and take care of them. I also wasn't getting laid. Momo realized she had made a mistake when having sex with me in front of Sonja. Now, instead of the moment being ruined, Momo was afraid of giving Sonja any ideas. And while I knew I was inevitably (and happily) going to end up balls-deep in Sonja, Momo was doing all in her power to prevent it, always getting between us and showing her possessive side.\n\nBut one thing that helped was that I bought us a bigger bed, king sized. The queen-sized bed I had before had been perfect for Momo and I, and had just enough room for Sonja when she was a dog, but then she transformed and we ended up packed like sardines on the mattress. Now with a new bed, we had enough room to stretch and move while we slept.\n\n--\n\n\"The property offers three acres of wilderness with the closest neighbor being over a mile away,\" said the real estate agent, speaking to me in front of the house.\n\nI was out in the middle of the woods, facing a tiny cabin of 1000 square feet. It was just what I was looking for; deeply isolated with plenty of nature around, just what the girls needed, and the small size made it very affordable. If I got the office manager job, I would be able to afford a mortgage and buy it. But what was making me nervous was that no people had died in it, which to a normal guy would sound strange and horrific, but to me meant dollar signs.\n\n\"The cabin looks to be in great shape. Can you show me inside?\"\n\n\"Of course,\" the woman said.\n\nShe brought me up onto the front deck and unlocked the door, then led me inside. It took only a few seconds for me to look through it thanks to the size, and I'll admit, I was impressed. The interior was in good condition, no watermarks or mold, and the kitchen didn't look like it had been furnished with the defective discards from Ikea. The bathroom even had a tub, which would be great for sensual baths with the girls. The cabin had two floors, the first floor being a single room, a combined kitchen and living area with a tiny woodstove in the corner and a mudroom next to the door for coats and winter gear. There was a narrow flight of stairs against the side of the house going up to the one bedroom and bathroom, and a closet hidden underneath with a stacked washer and dryer and the water heater. The second floor, which would normally increase the cost, actually saved money by minimizing the horizontal space the house occupied. Outside, there was a propane tank and a shed for tools and firewood.\n\nThis place might sound a little small for three people, but we were all sleeping in the same bed and the girls didn't take up much room, not to mention that all my possessions could be hauled with my car in one trip, minus the furniture, which would need a real moving truck. But probably one of the best perks was the distance from the office. It only added twenty minutes to my drive, a small sacrifice.\n\nAs long as the girls didn't end up finding the Necronomicon, this place was perfect.\n\n\"This cabin looks brand new, what's the story?\"\n\n\"Well the man who built it was a real recluse, but he died in a car accident just after it was built, so with no next of kin, it fell to the bank.\"\n\n\"Ok, so what's the catch? Why is this place so affordable?\"\n\nThe woman looked at me in confusion. A tiny cabin like this, would of course, have a low price tag, but considering I was only 26, she could understand why my sense of money wasn't fully refined. But I knew there was something else.\n\n\"Well the isolation makes it rather undesirable, there's nothing around and school buses don't come out here. It also easily loses power in stormy weather.\"\n\n\"I'll just buy a generator. And I don't need to worry about restaurants or schools.\"\n\n\"So you'll take it?\"",
        "\"I'm waiting on a job opportunity and I'll know in a week. If I get promoted, I'll buy this place immediately.\"\n\n--\n\nWith a goal in my mind, the second week was easier to get through, and my boss certainly seemed happy. His chance for a promotion to the regional manager was almost guaranteed, and he had been giving me strong signals that I had proven myself capable to take over. That Friday, there was a farewell party at the office, and over cake, my boss thanked everyone for all their hard work and support, and named me his successor, which of course pissed off everyone older than me, which pretty much means everyone.\n\nThe following week, after making sure that everything was in order and my pay matched my expectations, I went to the bank and got a mortgage. Afterwards, I called the real estate agency and made a down payment on the cabin. Life was good.\n\n--\n\n\"Where are we going? It's too early for a walk,\" said Momo, her nose pressed to the car window.\n\nIt was late in the morning on Saturday and I was driving with the girls. Momo was wearing a hoodie to cover her ears and Sonja had a knitted hat. I had expected them to complain about these clothes in the heat, but it seemed they were used to it from when they were furry animals. Plus, it helped that the two of them were wearing short shorts, showing off their smooth legs. \n\n\"It's a surprise,\" I said with a smile.\n\nMomo turned to me with a look of horror. \"Are you taking Momo to the vet? Momo doesn't want a shot!\"\n\n\"No, no, I'm not taking you to a vet. We're going somewhere really great. Trust me.\"\n\nIn the back seat, Sonja was happy and anxious, having missed being out in the sun and wondering where we were going. We drove for an hour, crossing to the other side of Augusta as we headed for the more rural areas. The long drive made the girls calm down, but as we reached the empty woods, they perked up, knowing that they would be let out of the car. Finally, we turned onto an unpaved driveway and drove up to the house.\n\nI let the girls out of the car, the two of them as confused as could be.\n\n\"Master, where are we?\" Sonja asked.\n\n\"We're home.\" From the way the girls looked at me, they might as well have had question marks hovering over their head. \"I just bought this house. Tomorrow, we're going to move all of our stuff and live out here, meaning that from now on, you girls can go in and out whenever you want, however you please.\"\n\nEcstatic smiles crossed their pretty faces, the two of them happier than I had ever seen them.\n\n\"Really?!\" Sonja squealed.\n\n\"Yep, these woods are yours to explore and play in, and there shouldn't be anyone to bother you, so you can-\"\n\nI wasn't able to finish the words, as with perfect synchronicity, they both pounced and knocked me to the ground.\n\n--\n\nI stood in my rental home, the interior completely barren of furniture and possessions. Out in front was a moving truck with a couple movers I had hired for help with big objects like the fridge and couch. Coughing out a black cloud, the truck started up and rolled out of my driveway. The truck was loaded and they were taking it to my new property. I told the movers I would follow them in a minute and to go without me.\n\nWith no one around, I went to my bedroom closet and opened the door. Hiding in the darkness were Momo and Sonja, wincing from the light but grateful for the rush of cool air into their stuffy coffin. \n\n\"Ok girls, let's go.\"\n\nDressed with their ears and tails hidden, I brought them outside and they climbed into the car. I took one last look at the rental home and then pulled out of the driveway. Hopefully, whatever weird phenomenon was at work here was due to the house. The girls seemed a little despondent to be leaving their home, but as we made the drive to our new house, their excitement levels perked up. Finally, they would be able to go outside freely again, now in a forest that offered safety and privacy. It was a cloudy day outside and unbearably humid, but hopefully it would rain in the evening and cool everything down. Once we reached the entrance to the long, unpaved driveway, I told the girls to go hide in the forest until the movers left, then drove up to the house to unload the truck.\n\nIt took just half an hour to unload everything and get the big pieces of furniture in place, such as the couch, bed, bureau, and assorted tables and chairs, as well as the fridge. All that was left was for me to decide where everything else went, but right now, all that I really wanted was a rest. I went up to the bedroom and threw myself down on the mattress, sweaty and exhausted. Not two minutes after I close my eyes do I hear someone come up the stairs. \n\nI looked over to the door and saw Sonja, a big smile on her beautiful face.\n\n\"I love this house, Master! There is so much room outside! So much space to play in!\"\n\nI leaned my head back, my gaze returning to the ceiling. \"I'm glad, that's exactly why I got it. The house might be a little small, but it's enough for the three of us.\"\n\n\"I really want to play with Master.\"\n\n\"Don't worry, we will, I just want to relax for a bit.\"\n\n\"But this is the only time Momo isn't around. This is the only time I can play with Master.\" A rush of blood went through me and I looked up at Sonja, who was now wagging her tail. Suddenly, all my fatigue seemed to vanish. \"I want to play with Master the way Momo does. I want Master's thing inside me.\" \n\nSuch naughty words, but her smile was still so innocent.\n\n\"And I really want to play with you too. Take your clothes off and come over here, I'll show you how it's done.\"\n\nSonja stripped down and pranced over to the bed. She sat next to me and I undressed, watching her eyes fall to my erection. Seeing the look on her face, I found myself wondering what she was feeling. Was she horny? Was she experiencing lust the way a normal human would? Or was this the same exact joy she would get by me taking her to the park? Either way, this was going to be a lot of fun for the both of us, and this time, I was ready to initiate everything.\n\n\"Do you want to touch it?\"\n\nCurious, Sonja reached out and began to caress it, having no idea what she was actually touching. The sensation of a new girl stroking my manhood sent shivers of euphoria through my body. \n\n\"Why does your thing get hard like that?\" \n\n\"It happens when I'm excited, sort of like when your tail wags. I always get like this when I see you girls parade around without clothes. It's because you're so beautiful and sexy.\"\n\n\"Master thinks I'm beautiful?\" she asked happily. Of course \"sexy\" went over her head.\n\n\"Very, I've been wanting to play with you ever since you became like this.\"\n\n\"Ok, so how do we play?\"\n\n\"First things first.\" I leaned forward and kissed her, just a small peck, followed by a longer union. When I leaned back, she appeared confused but not unsatisfied. \"How was that?\"\n\n\"That felt kind of good. I see you and Momo do it a lot.\"\n\n\"It's called a kiss. Come on, let's do it some more.\"\n\nThis time, she leaned in with me and we resumed our embrace. Her lips met mine, at first unmoving due to her inexperience, but soon becoming more active as she imitated me. Daring her to go farther, I sent my tongue into her mouth, and without hesitation, she countered. Kissing her was sweet, just like with Momo, almost sugary, with the slight hint of toothpaste from that morning. The longer we kissed, the more Sonja relaxed, with me soon able to push her onto her back.\n\nHovering over her, I reached down and cupped a warm breast. \"You know what really excites me? These big beautiful tits of yours. I fell in love with them the moment I saw them.\"\n\n\"Really? Why?\"\n\n\"Men have been trying to figure that out since the dawn of time. Either way, they are very fun to play with.\"\n\nWhile I massaged one with my hand, I enjoyed the other with my tongue, first tracing it around her areolas, probing every little bump. Sonja's breathing quickened from the intimate touch, and a soft whine even escaped her once my lips closed around her nipple. I sucked on it greedily while I pinched her other nipple with my hand. Her voice grew in volume the harder I worked, the soundtrack to weeks of tension finally being released. I played with her breasts for several minutes, thoroughly examining them with both mouth and hand, squeezing and manipulating the soft flesh the way I would a lump of clay. They were so incredible, like two giant stress relievers that I could play and fidget with for hours on end. But soon enough, I knew it was time to move on.\n\n\"Time for the next part. I need you to kneel on the floor.\"\n\nShe eagerly did as I told her, getting down on her knees in front of me with her tail wagging behind her.\n\n\"Now, I want you to put my cock-that's what you call it-in your mouth and suck on it.\"\n\n\"Suck on it?\"\n\n\"Pretend it's covered in peanut butter and lick it off. But whatever you do, don't let your teeth touch it. Just use your tongue and your cheeks.\"\n\n\"Ok!\" She leaned forward and started by first running her tongue up the shaft, nearly making me cum right then and there. \"Yum! Master is salty!\"\n\nI suddenly had a flashback to my childhood dog, who loved to suck on dirty socks for the salty sweat.\n\n\"If you like salt, then keep licking, and something really salty will come out.\"\n\nSonja resumed licking me, her tongue painting my manhood like a brush. It was actually a bit funny; she was licking me just like a dog would. If she were still an actual dog and I happened to be holding a popsicle in my lap, just the movements and tongue work would make it look almost exactly the same. Ok, bad thought, bad thought, retract. I pushed that imagery out of my head and told Sonja to try sucking on it now. Eager to play, she took it in her mouth, and then stopped moving, just continuing to let her tongue lather it. Some more words of advice got her to start bobbing her head and play with it more, using her cheeks and tongue to better stimulate it. I rolled my head back and groaned in bliss as I felt her massage my dick with her mouth, the watery warmth of her saliva and the softness of her tongue and cheeks. It was a truly heavenly experience. As she worked, I rubbed her ears the way I would with Momo, to sort of thank her for her efforts.\n\nSoon enough, my eruption began to build. Before I could warn Sonja, a stream of semen sprayed from my cock and flooded her mouth. She fell back, coughing on my seed and as shocked as a puppy hit with a gust of air.\n\n\"Master, what is that?!\" she asked, her dog instincts going into full fight-or-flight mode.\n\n\"It's the salty stuff I told you about. Sorry I didn't warn you.\"\n\nShe rolled my cum around in her mouth, evidently having a hard time swallowing it but showing no signs as to disliking the taste. It was no surprise, considering that dogs will pretty much eat whatever you give them.\n\n\"So does that always happen?\"\n\n\"Whenever you get me really excited, yeah.\"\n\nA big childish grin crossed her face and her tail started swatting the ground. \"Again! Again!\"\n\n\"Hold on, it doesn't work like that. My guy needs some time to recharge. But come lie down on the bed and I'll make you feel good.\"\n\nOnce again, she climbed up onto the bed and I laid her out on her back before getting to my feet. Goddamn, she was so beautiful, so sexy, easily the most erotic body I had ever seen... minus the tail and ears. Aw, who am I kidding? The tail and ears just give a cuteness bonus! She looked at me with anticipation, possibly knowing what I was about to do, but unsure. I licked my lips and spread her legs, putting her pussy on display. Her excitement rose as she realized what was going to happen. She didn't seem scared or nervous the way a normal virgin would be in this situation. If anything, she seemed anxious because she knew what she would experience would be completely overwhelming in its physical euphoria. \n\nI lowered my head and took a moment to sample her aroma. Like me, there was the hint of sweat, but other than that, she was as clean and fresh as new bed sheets, with her sweet feminine scent driving me wild. I didn't hesitate, I joined her lips with mine and started slurping up her pussy like I was carving away at a jawbreaker. Sonja's moans of euphoria filled the cabin, just like when she and Momo had fingered each other in the shower. She didn't know how to describe this feeling, it went beyond her ability to describe or define. I savored her flavor, the delicious womanly taste that made my blood boil. I'm not sure how other guys feel, but personally, I love going down on a girl as much as her going down on me.\n\n\"M-Master, s-something is hap-happening to me!\"\n\n\"That's called \"cumming\", it's what happened to me when I shot out all that white stuff. Just enjoy it.\"\n\nI increased my pleasure output, focusing my attention on her clit. That's all it took to break her threshold. \"Master, I'm cu-CUMMING-AROOOOOOOOOO!\"\n\nShe then let loose a wolf-like howl, similar the feline \"rowr\" that Momo would release whenever she had an orgasm. There was an increase in her arousal, running from between her lips like condensation on glass. After licking up every drop of her lust, I sat up to let us both catch our breath.\n\n\"Master, that was incredible,\" said Sonja, her face flushed.\n\n\"Yeah, I've been waiting to do that. Now, are you ready for the real playing? When I put my cock inside you?\" She nodded. \"Good. Now get up onto your hands and knees.\"\n\nA bit shaky from her orgasm, she rolled over and got on all fours, pointing her butt at me. My erection having returned to full power, I got behind her and got ready to deflower her. Of course I'm going to take her virginity in doggy-style, I would be crazy not to! Her tail got in the way a bit, but I was able to get into position. \n\n\"Ok Sonja, now the first time is going to hurt a bit, but after that, it's smooth sailing. Do you want me to go slow and gentle, or should we just do it quick like ripping off a Band-Aid?\"\n\n\"Quick,\" she said, burying her face in the crook of her arm.\n\n\"Ok, take a deep breath.\"\n\nWith my cock at her entrance point, I took my own advice and breathed deeply, then solidified my hands on her hips and thrust forward. I forced myself inside her in a single shove, deflowering her without anything to stop me. Sonja cried out and I stopped, letting her get accustomed to the sensation.\n\n\"Are you ok?\" I asked.\n\n\"Master, it hurts!\"\n\n\"Just relax and wait a second. It will feel better soon.\"\n\nI gave her some time to get used to my cock inside her and then pulled out, letting the blood from her hymen drip down onto the mattress. I waited another few moments and then forced myself inside her, making her yelp a second time. A few more thrusts and her voice began to change, the high-pitched cry turning into a deep moan, pain giving way to pleasure. Soon enough, I was able to start building a rhythm. With my hands on her hips, I was thrusting into her with growing speed and power, watching her perfect ass cheeks clap and ripple with every impact. Sonja raised herself up, moaning like an opera singer while her huge tits swung like chandeliers.\n\n\"Sonja, how does it feel?\" I asked, trying to keep her tail out of my face.\n\n\"Master, it feels so good! Your cock feels so good inside me!\"\n\nI soon got up to my maximum speed, hammering her with everything I had. The whole house almost seemed to be rocking from the shifting of the bed as I slammed Sonja over and over again like a piston. The sound of her voice and flesh against flesh bounced off the walls.\n\nSo engrossed in physical pleasure, there was no way we could have known about Momo, standing in front of the house and looking at us through the bedroom window. There was no way we could have seen her tears or heard her footfalls as she turned around and ran."
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "romance",
        "cat girl",
        "dog girl",
        "funny",
        "cute",
        "romantic",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-02"
}