{
    "title": "On Death",
    "pages": [
        "It seems that a number of people around me have recently experienced personal tragedy, sometimes unexpectedly and sometimes in the form or a lingering illness. Their grief and sorrow got me thinking and reminded me of a story told to me by a good friend Tino, who is now a retired minister.\n\n******************\n\nA man and a woman had a child. He was the apple of their eye, and they loved him more than anything else. One day, just shy of this 30th birthday, a drunk driver lost control of his car, jumped the median and killed him.\n\nThe next week was a blur as the couple buried their son. There were funeral announcements to make, a coffin to choose, relatives visiting from out of town. On one level, that time was good for them. It kept them busy, focused and gave them something to do other than let the empty place in their hearts occupy them. \n\nBut all too soon the visitors were gone, the tasks completed and they were alone once more. After the funeral, the heartbroken parents fell into each other's arms and cried themselves to sleep. That night they both had the same dream.\n\nThey were together at the funeral home, standing over their son's casket. After a while they realised they were not alone. God was there, too.\n\n\"Why have you done this to us?\" Anger took hold of them and they cried out. \"Why have you taken our son? You didn't even let us say goodbye.\"\n\nGod didn't answer. Instead He took the two in His arms and held them close. The funeral home faded away and was replaced by scenes from their lives, and from the life of their son.\n\nAt first, all of the scenes were after his death; the funeral, choosing his casket, the knock on the door when the state trooper came to deliver word of his death. The couple wept.\n\nThe next scene was the last time they both saw their son; he had stopped by to mow their lawn. His last words to them were, \"I love you.\"\n\nMore images surrounded God and the couple. Many of the images brought more tears: graduations, Little League baseball games, homecoming dances, school plays. Not all were positive. There were the teenage fights, the time they caught him smoking and the incident involving the cat and a razor.\n\nAs the scenes from their lives played back, the couple became younger. Age lines faded, and the grey hairs disappeared. The last scene that played was the first time they held their newborn son. For one final instant, the man and woman held in their hands the life they had brought into the world. Then, that too faded and they were alone again with God.\n\nThey sat in silence for a long time, held tight in God's embrace. Their anger and their despair was replaced by grief and sadness. Again they wept, but this time, not for their son, but for their own lives, a part of which had been taken away.\n\nFinally, God spoke. His voice was steady, but His tears mixed with their own. \"My children, I love you and I would never do anything to hurt you.\"\n\nWith a wave of His hand, they were surrounded by the images from their life. Their young selves saw the son they were about to have and the life ahead that awaited them.\n\n\"All of this hurt, all of this pain, I can take from you. The anger, the sadness, it will be gone,\" God said. \"Or I can give you a gift. I can give you a son. He will cause you unimaginable pride, joy, and frustration. He will try your patience, make you cry and teach you things about yourselves never knew. He will make you laugh, he will warm your hearts and he will fill your house and your lives with love.\"\n\n\"But there's a catch,\" God paused for along moment. \"You only get to keep him for 30 years.\"\n\nThe couple looked at each other and said in unison, \"Lord, we'll take the boy.\"\n\nEach person in your life is a gift from God, just as you are a gift to others. \n\nWhy does God take some people from us? Why does He allow our loved ones to suffer? I don't know; that's something I ask Him regularly, but He doesn't answer to me.\n\nI can only trust that whatever happens is part of His plan, no matter how inexplicable it seems to me. The only thing we can do is take the gifts God sends to us, to cherish those people, to remember them when they're gone and we must have faith that God's will is being done. "
    ],
    "authorname": "HLD",
    "tags": [
        "god",
        "death"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/on-death"
}