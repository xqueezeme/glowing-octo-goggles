{
    "title": "Anal Academy",
    "pages": [
        "Heather and Madison were sisters and only 14 months separated them in age. Heather was the older one and at age 19 had finished her first year at Harvard University while Madison had just graduated from high school and had gotten accepted at the prestigious college so to follow in her sister's footsteps. Madison or Maddie as she was called, looked up to her older sister and since they were so close in age, they were best friends as well. Even that year they spent separated while attending their respective schools, not a day went by where they didn't chat online or communicate on their phones. \n\nBoth girls looked similar and sometimes were mistaken for twins. With their middle-of-the-back length dark auburn red hair and greenish eyes, they both were drop dead gorgeous who had boy after boy chasing them. Heather stood 5'5, with hazel eyes and was a toned 125 pounds from playing Women's Lacrosse for the Crimson. Her natural D breasts slowed her down on the field but her thin waist and round butt gave her good leverage and agility. She received a half paid academic scholarship and earned a 4.0 GPA her first year to keep it, while studying Pre-Med. \n\nMaddie was not as athletic but equally beautiful and intelligent. She was slightly smaller in stature at 5'3, 115 pounds with perky 34C breasts and had actually performed two shoots as a retail clothing model in a prominent magazine when she was 15. Both girls were sweet and even though Maddie wasn't as outgoing, they both were on the correct path to becoming something special. \n\nWith all their similarities, there was one characteristic that made them different and that was sexual prowess. Heather loved guys and was very promiscuous from an early age. Even though she had many outside interests, there was nothing she loved more than feeling a nice hard cock sliding in and out of her pussy. She had no trouble getting it from college guys and she took every advantage of it. Even as a late teen, she could have powerful orgasms which only fueled her sexual appetite. \n\nMaddie had a boyfriend named Colton that she had dated since her freshman year in high school. They were serious and once she turned 18, she had given up her virginity to him mainly because of his multiple requests. She liked it but didn't want their relationship based on sex and feared a life goal-hindering pregnancy, so they rarely did it. In spite of her young age, she was more the romantic type and he was always required to wear a condom. \n\nHeather thought her powerful orgasms could not get any better until she tried something different. Towards the end of the university school year, she hooked up with a senior athlete who was on the rowing team. He talked her into trying anal sex and at first she was squeamish but once they got going, she absolutely loved it. She had no idea how good it was going to feel, judging from many of her girlfriends' opinions who had told her about the pain, but soon discovered it was amazing. She felt none of the discomfort and had the best orgasms of her life. \n\nAfter that day, she preferred anal sex to vaginal and most guys had no problem with her desire. One such incident that led her into trouble was also the same incident that opened up a new sexual world for her. It happened to be the next to the last day before summer break and many of the students either had one more final exam or had finished. Heather had one last test and was inside the university library studying for it. \n\nA third year Pre-Med student named Bradley whom she knew from a couple of study groups, came up to her table to chat. They hit it off and they both felt the other was attractive. When the conversation turned more into flirtatious sexual innuendos, they moved it to another floor in a rarely used aisle of books. The kissing started and soon Heather had her pants off with one foot up on a bookshelf while Bradley's pants were around his ankles, pounding his seven inches into her ass like he was angry with it.  \n\nShe was trying to keep her voice down, as she quietly moaned in a whisper, \"Oh God! I love it in my ass! Keep going...I'm close!\"\n\nHe was also whispering while huffing, \"Take it baby! You like this big dick in your asshole, don't ya?\"\n\nThe entire bookcase was rocking and even a couple of books fell. Heather's moans got a little louder when she began to orgasm. That big meat was jarring it out of her and soon after, Bradley let out a loud grunt, \"Yeahhhhhhh! Auuughhhhhhh!\" \n\nJust as his cock released its last spurt into her rectum, a security guard cleared his throat, \"Huh...ummm!\" \n\nBoth their heads snapped around and were horrified. They were busted and after pulling up their pants, they were escorted to a holding room where their names were taken down in spite of their pleas. \n\n\"If you let us go, we promise never to do it again. I swear,\" the desperate Heather begged. \n\nBradley was just as worried, \"We are so sorry! Please let this one go. We made a big mistake.\" \n\nThe security guard listened to the pleading coeds but knew if the Dean of the school found out he had just let them go, he might be fired. He had a family and needed his job but was sympathetic to young college students and their crazy antics. He decided not to call the police but called Dean Anderson to decide their fate. \n\nWithin the hour, the Dean had both students into his office. After a stern lecture and a requirement to sign a letter of apology, he told them that if they performed a community service project the following school year, then they would have served their punishment and no expulsion sanctions would be handed down. Bradley couldn't get out of there fast enough while Heather stayed back and continuously thanked Dr. Anderson.\n\nShe showed her gratitude, \"Thank you Dr. Anderson. Whatever you have in store for me, is fine. I just appreciate you not expelling us.\" \n\nThe Dean became brave and boldly asked, \"Anything? I would like to ask you a personal question. Mr. Bell our security guard happened to mention that you and that young man were engaging in anal sex when he caught you. Is that something you practice all the time?\" \n\nThinking it was none of his business but she didn't want to upset him, so Heather uncomfortably responded, \"Uh...I think at this stage in my life, I enjoy it. What does that have to do with anything?\"\n\nHe continued, \"Well perhaps we may have found your project. I am starting a club with a few girls next year. So far we have only three members but I hope to increase that number before fall registration. I call it Anal Academy and it is for girls who love anal sex.\"\n\nHeather questioned it further only to have Dr. Anderson answer all her questions. The more he spoke, the more intrigued she became. There were going to be a series of challenges throughout the school year only to end in a huge anal gangbang party. Because of their conversational content, she began to see him in a different light. He was more of a man rather than an administrative official. \n\nShe found him attractive. Dr. Anderson was only 38 years old and the youngest dean in Harvard history. He was 5'10 with dark hair and weighed 190 pounds. He had a rugged scholastic look which meant he was a hot manly nerd. Heather's demeanor began to change from a scared student awaiting her discipline to the gorgeous young coed she knew that she was. \n\nHer thoughts drifted for a moment when Dean Anderson asked, \"So what do you say? Do you want to be a part of this club as your service fulfilment?\" \n\n\"If I agree, will that be the end of it and I can go on like before?\" She asked. \n\nDr. Anderson agreed, \"Sure. You have my word. If you know anyone else that might want to join, we need more girls.\"\n\nHeather immediately thought of her sister Maddie and was going to use the summer to approach and possibly recruit her. The Dean once again interrupted her thoughts, \"Before you do this, I need to find out if you are serious about your love for anal sex or are you just telling me that to prevent disciplinary action. We probably should do something right now for proof.\"\n\nShe was taken back by his brash request. Was he blackmailing her? When he asked her again, she began to reason with herself, \"Well, if I will be doing these things during my Anal Academy initiation, then would it hurt do to it now?\" She hadn't orgasmed when she was caught by the security guard and Bradley had shot his load into her so she was still unsatisfied and reasoned with herself, \"Maybe it would be a great release to do the Dean?\" \n\nShe agreed, \"OK but where do you want to do it? Right here in your office?\" \n\nHe nodded and then locked the door. For the second time in less than an hour, Heather was removing her pants while still on campus. She draped them over a chair and stood in her shirt and panties which by that time were wet in the back. She almost felt she was disrobing for a doctor but this doctor happened to be a PhD. Holding onto the back of that same chair, she slid her panties off and she could see the creamy wet spot in the back where Bradley's semen had oozed out. \n\nShe couldn't help herself so she licked the slime off the silky material before sitting them down. Tasting the salty goo fueled her fire and increased her desire for more. When she turned around, the Dean was standing before her, naked from the waist down. \n\nHer eyes widened like she had seen a ghost when she saw his massive hard-on pointing skyward. She commented in amazement, \"Oh...my...God! Are you for real? That thing is huge!\" \n\nDr. Anderson laughed and tapped it a couple of times causing it to sway side to side while responding, \"Nine and three quarters inches long and four inches in diameter. It is a blessing and a curse. I love the thought of having anal sex with someone but I have never had a woman brave enough to take it. I was hoping you would be my first.\" \n\nWith a large uncertain sigh, Heather replied, \"I love anal sex and have powerful orgasms with it but I don't know about that thing. You might tear me up with it.\" \n\nHe gave his idea, \"How about we try it and see if you can take it and if you can't, we will stop?\" \n\nGiving it some serious consideration, she asked, \"Do you have lubrication because there is no way I'm trying that without it even with cum already in my booty?\"\n\nHe smiled, opened his desk drawer and pulled out a bottle of Penchant Premium lubrication while explaining, \"I just happened to have some. I had one of the other girls you will meet during Anal Academy in here prepared to do the same thing but when she saw my size, she said she would need more time.\" \n\nEven though she was apprehensive, Heather also was intrigued. She knew that the full feeling she received from anal sex created the perfect vibration in her vagina which in turn gave her amazing orgasms. She gave strict instructions, \"Let me control it going in. Go very slow and if I say stop, then stop.\" \n\nAfter deciding on the most optimal way of trying to take it, Heather chose to put her knees on the big leather chair while holding onto the back rest. She spread her legs as far as they would go, arched her back and gave the OK, \"Lube it really good, then come here and put the head up against my hole.\"\n\nDr. Anderson coated his entire cock with the lubrication two times over. It was so slippery, it looked wet under the light. He stood behind her and placed the large mushroom up against her previously used sphincter. It had given Heather a little relief knowing it had just been stretched and inseminated by Bradley or she might have changed her mind. \n\nHe warned, \"Get ready hon...you better take a deep breath.\" \n\nHeather took two small breaths before a sizeable inhale, \"OK...put it in.\" \n\nDr. Anderson took hold of her thin waist and began to slowly push. The head stretched its way through until Heather yelped, \"Ouch! Ouch! Ouch! Take it out!\"\n\nThe Dean pulled it out to give Heather her much needed relief. He dejectedly said, \"Damn! At least you tried to take it. I thank you for that even if it didn't work out.\"\n\nWith her knees on the edge of the chair, she was holding her asshole in pain and looking between her legs, \"Hold on! Who said it didn't work out? I just need to rest a second and we are doing it again and we will keep doing it until we get it in.\" \n\nDr. Anderson perked up with surprise and gratitude. The second time he managed to get it in a little further before being ordered to pull it out. The third time was a charm and he was able to get his beefy hog all the way up her ass. \n\nShe was panting and ordered, \"Hold it right there! Let me get used to it and then you can start.\" \n\nHe thought her snug rectum wrapped around his huge penis felt amazing. The tight warmth gripped it like it was the most perfect sensation in the world and he was so grateful that he was able to finally experience it. Just when he thought it couldn't get any better, he moved his hips. It was like velvet!\n\nShe cried out, \"Ohhh! That feels fucking wonderful! Ohhhh! Ohhhh! Ohhhh!\"\n\nThe Dean was finally getting to drill his big cock into a tight, round bubble butt of a stunningly gorgeous redheaded 19 year old girl and the most amazing part was she also loved it. He thought he had died and went to heaven. Apparently he couldn't hurt her with it so he fucked her with reckless abandon. \n\nThat pressure was building Heather up to an earth shattering orgasm. Her breathing became shallow and irregular. She exhaled and then her entire body began quaking. Her legs were contracted and she squealed into the head-rest leather! She thought she might pass out it felt so amazing! \n\nHe was working up a sweat and was getting close himself, \"This is great! Your ass is so tight! I can't believe how you are taking me! I'm going to cum inside your gorgeous ass! There we go! There we go! Augghhhh! I'm cumming! Augghhh! Uhhhhhhhhhhh!\"\n\nWhen he released his spunk, Heather let out another yelp while climaxing even harder than her first one. Involuntarily, she collapsed to her side on the chair, causing his dong to slip out, leaving a gooey gaping reddened hole. She continued to shiver in pleasure even after the fucking had ceased. \n\nBoth she and Dr. Anderson had the best orgasm of their lives. Neither knew what to say but no words were necessary. Finally, after a minute of a quivering recovery, the Dean sighed, \"Whew! That was amazing! I have never exploded like that. Thank you Dear for that gorgeous ass of yours.\" \n\nShe agreed with him and after dressing, headed back to her dorm. It was tough to study for her last final exam with Dean Anderson's semen running out of her butt. The next morning, Heather took her final, finished packing up her things in her car and headed home for the summer. \n\nUpon arrival, she was happy to see her family. She and Maddie had fun chatting and catching up because they hadn't seen each other since Christmas break. The entire family went out to eat and had a great time. While at dinner, Heather whispered to her sister, \"I got something to discuss with you when we get home.\"\n\nOnce they arrived home and settled in, Maddie wanted to know what Heather wanted to tell her but Heather wanted to wait until their parents were in bed. Finally around midnight, the girls ended up in Heather's room sitting on her bed. Maddie was wearing a long Goo Goo Dolls t-shirt with white cotton panties and white socks scrunched down around her ankles while Heather was barefoot and wearing silky pajama pants with a comfortable white spaghetti-strap camisole top. \n\nWith her legs crossed Indian style, Heather kept her voice down to make sure their parents could not hear, \"Have you and Colton ever done anal?\" \n\nShaking her head, Maddie responded, \"No. We have never even thought about it. It seems like it would be too painful.\" \n\nHeather became a shade louder with excitement, \"Sis...sis...sis! That isn't true! Oh my God, it feels so amazing! Ever since I started doing it, I don't want to do anything else. Keep this to yourself but...I did it with the Dean of the school!\" \n\nMaddie's eyes widened in curiosity, \"What?! Are you serious?! How did that happen?\" \n\nHeather giggled then began to reveal everything from switching over her preference to anal sex to the library incident to fucking the Dean in his office. Maddie listened with her mouth hanging open. Heather then told her about Anal Academy and how Dr. Anderson wanted her to also join. Maddie was unsure about that and needed more than just being asked to be persuaded. \n\nHeather got off the bed and reached into one of her suitcases. She pulled out a six inch thin dildo much to her sister's surprise. Heather suggested, \"I think we should try it on you. You will see, once you try it, you won't want to go back.\" \n\nAfter a little persuasion, Maddie agreed to try it. Heather greased up the dildo with a glob of Astroglide. While on all fours, Heather pulled up Maddie's long shirt to her waist, slid her panties to the side and slowly twisted it at the entrance. As she slid it in her sister's virgin asshole, she assumed that Maddie would stop her. She didn't and once it was buried, Maddie sighed, \"That didn't hurt at all. That actually feels great. Fuck me with it.\" \n\nHeather had Maddie turn sideways so that she could sit down on the bed while she did it. Once again, Heather was sitting comfortably with her legs crossed behind her sister. She started moving the dildo slowly, fully expecting Maddie to wince or tell her to be careful but once again Heather was shocked when Maddie instructed, \"Do it faster and harder.\" \n\nAs Heather picked up the pace, Maddie enjoyed it more and more. The smooth rhythmic friction that rubber cock was creating in her booty was so pleasurable, she approached orgasm within minutes. She never really had orgasms with her boyfriend but that was vaginal intercourse. She was in heaven and suddenly spasmed, \"Ohhhhhh! What the...Ohhhhhhhhh!\" \n\nWhen she began to climax, a stream of lady juice squirted onto Heather's bed. It startled Heather and she stopped pumping much to her sister's plea, \"Don't stop! Keep going! This feels insane!\"\n\nHeather obeyed her sister and kept thrusting the dildo into Maddie's rectum. Every minute or so, Maddie would squeal and ejaculate onto the bed. She was like a timed geyser. Finally, Maddie pulled away and fell into the puddle, a quivering mess. It was the most incredible feeling of her young existence. \n\nHeather was excited for her sister because she had introduced her to anal sex but was concerned for her bed. She quickly had Maddie get up so she could gather all the bed covering for the wash. The girls had to flip the mattress over to allow it to dry. They giggled and discussed anal sex further. Maddie wanted to know more about Heather's exploits with the Dean and other guys on campus. \n\nFrom that evening forward, Maddie was hooked. The very next day, she and her boyfriend had anal sex in the back of his car. She squealed and climaxed several times before he shot his load inside her ass. When she got home that night, she couldn't wait to tell her big sister. \n\nThis time, they were in Maddie's room when Heather asked, \"Did you like it?\" \n\nMaddie responded, \"Oh my God! I loved it. I can't believe I haven't been doing it all this time. Thank you for showing it to me.\"\n\nHeather was beaming and she asked, \"Let me see it? Let me see your asshole?\" \n\nMaddie pulled her jeans off and when her panties followed, Heather used her thumbs to spread Maddie's ass cheeks apart. Maddie was standing and bent over her dresser while her older sister inspected her anus. Heather relayed, \"Yep, it is gaped a little. There is still so much cum running out. Can you feel it?\"\n\nAfter Maddie giggled her affirmation, Heather found that gooey stretched hole just too tempting. Keeping it spread open, she leaned in and sampled just a small speck of sperm with her tongue. It was still warm and tasted a perfect blend between sweet and salty. ",
        "When she felt the warmth of her sister's tongue on her sphincter, Maddie jumped, \"What are you doing? Are you licking my...ass?\"\n\nHeather didn't answer. She just giggled and stuck her tongue back inside her sister's ringed bud and licked up the remaining semen. After a lengthy slurp, Heather stood up. Maddie was confused as to why she quickly stood up and turned around. \n\nWith her mouth full, Heather tried to speak to Maddie in her mumbled language, \"Ohen...uuu.\"\n\nMaddie thought Heather was nuts and repeated what her sister instructed, \"Open up? You mean my mouth? Are you nuts? I don't want you...\"\n\nHeather interrupted her rant by planting a huge kiss on her sister and spit the contents she was holding into Maddie's mouth. Before Maddie had a chance to react, Heather ordered, \"Swallow it. It's good.\" \n\nMaddie squinted her eyes and swallowed. She nodded her head in agreement with her sister, \"You are right. It is not bad. It reminds me of orange sweet tarts.\" \n\nThey both laughed and the rest of the summer, whenever one of them would have anal sex, they would come home and allow her sister to sample the deposit. There were several days where they would both do it and come home and lick each other's gooey anus. It just became second nature. \n\nAs the summer was coming to an end and Maddie, Heather and her parents attended the late July orientation, Heather wondered over to Dr. Anderson's office while the rest of her family sat through the same presentation as they had done the previous year. The Dean was happy to see her and was elated when Heather told him that her younger sister was also going to join Anal Academy. They exchanged phone numbers and Dr. Anderson told her they would meet on that Sunday night before Monday's first class. \n\nFinally that day arrived. The girls were rooming together and settled in by that Saturday. When Sunday rolled around, they drove to the apartment that Dr. Anderson had designated as Anal Academy Headquarters via a group text. Maddie and Heather walked in the nice place and the Dean greeted them before offering them to have a seat. \n\nHe introduced the other girls. In attendance was Michelle who was a tall thin leggy blonde who stood 5'10. A short 5'0, 95 pound cute Asian girl named Keiko and a 5'8 athletic muscular black girl named Aleesha with a large booty and huge boobs were also in attendance. \n\nAfter they all sat down on the spacious couch, Dr. Anderson began explaining, \"Thank you girls for committing yourself to this club. You are here because you love ass play and anal sex. We will have some challenges and plenty of, said, anal sex this year and then you can decide if you want to remain in the club or move on. But, there is one catch you may not know and that is you will be judged on a point system. After the last meeting of year, whoever has the most points, wins a full year's university costs completely paid. That includes tuition and room and board.\"\n\nWhen everyone heard that, all of the girls just about jumped out of their seats. They talked over each other asking him if he was serious and eventually he had to quiet them all down to continue explaining the rules, \"Hold on girls. Please get quiet so I can continue.\"\n\nAfter their silence, he continued, \"Yes I'm dead serious and you will receive a full year's scholarship from a secret account, so you are not to mention it. Upon winning, you will be given the pass code for its access.\"\n\nHe passed out a laminated sheet to each of the girls. It was bullet pointed and read as such...\n\n\u25cf2 points = Every anal sex session to orgasm with a different guy/cock \n\n\u25cf1 point = Every anal sex session to orgasm with a repeated guy/cock\n\n\u25cf1 point = For an additional kinky act after any anal sex session. (Kinky acts are defined as...ass to mouth sucking, anal creampie eating, snowball kissing after anal creampie extraction, or anything pre-arranged with Dr. Anderson) \n\n\u25cf3 points = Every anal sex session to orgasm with Dr. Anderson \n\n\u25cf.5 points = Dressing slutty before each session\n\n\u25cf5 points = Completing the challenge at the monthly meetings\n\n\u25cf10 points = Winner of the final challenge at the May meeting \n\nNOTES: 1-No condoms allowed\n\n2-Every session must be proven with video tape\n\n3-Upload videos to google shared document \n\n4-Dr. Anderson's judgement is final and binding\n\nDean Anderson allowed the girls to read the instructions before he asked, \"Are there any questions?\" \n\nAleesha asked, \"If we want a session with you, how do you want us to get in contact with you to arrange that?\" \n\nHe responded, \"That is a good question. You can either email my school address or text me 'academic meeting' then give the time. My wife has access to my phone so we have to be careful. All sessions with me will be here and will be first come first served.\" \n\nThere were a few more questions asked before he dismissed. Each girl was given a case of standard enemas so they wouldn't have to pay for them themselves with a promise to get more upon request. That was just the initial meeting and the monthly meeting wasn't scheduled until the end of August. Heather and Maddie stayed back until the other three girls had left. They purposely went to the bathroom to discuss everything. \n\nWhile whispering, Heather asked Maddie, \"Wow...can you believe it? That is a lot of money. You realize you have no chance to win if you don't have anal sex with more than just Colton? Look on the bright side, we might have to get slutty but we don't have to worry about getting pregnant. Are you going to stay in the club?\" \n\nHeather was half expecting her sister to say she was going to remain faithful to her boyfriend when Maddie surprised Heather with her answer, \"I guess what he doesn't know won't hurt him.\" \n\nThey both giggled and discussed maybe staying back and doing Dean Anderson. Even with Heather's warning about his size, Maddie agreed. They returned to the main room and smiled at him. \n\nHeather spoke for Maddie, \"Dr. Anderson...does today count as day one? Maddie and I would like to get a head start and maybe have you do us. Do you have time?\" \n\nHe smiled as he unbuckled his belt, \"I do have some time. I think that is a wonderful idea.\" \n\nWhen his pants hit the floor, Maddie blurted out, \"Holy shit! Are you serious?\" \n\nHeather laughed while assuring her, \"Don't worry about it. You can take it if you concentrate and I will be right here with you.\"\n\nBoth girls were on their knees sucking and playing with Dr. Anderson's huge dick while using his bunched up pants as their knee pads. They also alternated kissing and licking his balls. When his monster became engorged, Maddie sucked the best she could and jerked it with both hands even though she could barely fit it in her mouth.\n\nHe groaned, \"Damn girls...you must be horny. Which one is going to take me first?\" \n\nMaddie stopped sucking to beat her sister to the response, \"I will!\"\n\nWhile both girls were getting undressed, the Dean removed his pants, shoes and socks and while only his shirt, laid down on the floor on his back. He told Maddie where to get the lube in the bathroom and the nude teen returned carrying the bottle with a huge amount already in the palm of her hand. After greasing up his cock, Maddie was straddling and squatting overtop it while Heather was politely holding it straight upward to make it easier for Maddie. \n\nHeather went into cheerleader mode while encouraging even though she really didn't believe Maddie could take it, \"Come on...you can do it. Clench your ass then relax it. Do that a few times.\"\n\nSlowly Maddie descended until that huge head pressed firmly against her anus. Dr. Anderson quickly redirected her, \"Face the other way. I want to see that gorgeous ass of yours while we do it.\" She turned around then squatted back down. Heather continued holding his cock with one hand and held Maddie's hand with the other one for added support. Without much thought, Maddie began to sit down, shrieked loudly, then continued her journey until see was sitting completely impaled on that magnificent meat on the first try. \n\nHeather had little time to move her hand out of the way from the sitting Maddie but was simply amazed how well Maddie took it without stopping or having to retry the entry like she had done. Maddie gasped, \"Oh my God! I am so full right now! I have never experienced anything like it! I love it! I could stay like this all night.\" \n\nDr. Anderson also loved it. That young tight rectum clenching his meat like a warm oven mitt was making him anxious when he impatiently instructed the 18 year old redhead, \"Ride it baby girl! Don't be shy...giddy up\" \n\nMaddie began to ride that dick like she was a cowgirl. She bounced up and down...up and down while moaning. Dr. Anderson put his hands on her hips but mostly to touch her soft skin. He allowed her to do the work and loved seeing her asshole stretch and accept his girth.\n\nHeather continued holding her sister's hand for balance and support but knelt silently stunned how well her sister had developed her love for anal sex right before her eyes. Maddie was genuinely getting maximum pleasure without any pain. She was also using her middle finger to rub her own clit while she rode. When her orgasm overtook her, she stopped riding and sat down on the cock while grinding causing her to violently shake and squirt on the floor between his spread legs. \n\nDr. Anderson got that look on his face when Maddie started back up again. That tight warm asshole was just too much and he unleashed his load while it seemed as though Maddie was milking it with her insides. He groaned, \"Oh Fuck! Ohohohoh! Aughhhhhh! Damn girl! Ohhhhhhh! You made me cum too quickly! Wow that was a good one!\"\n\nEven though he had finished spurting, Maddie didn't care and continued riding until she squealed in another explosive climax! Her entire body trembled and she squirted even further. When she got off him, cum dripped from her gaping hole. She stepped gingerly to her sister and bent over in her face, \"What do you think? Is it stretched?\"\n\nHer gooey asshole was as wide as a full roll of tape. Heather dipped her face inside and licked the slime that had coagulated around the inner sphincter. It was that same delicious combination of salty and sweet. Dr. Anderson was so aroused while watching Heather consume Maddie's anal creampie. He jerked his meat and it stayed hard. He was quickly to his knees, and behind Heather in a flash. \n\nHeather never lifted her face out of her sister's gaped anus while Dr. Anderson was trying to put his cock in hers. Finally, as it started stretching its way in, Heather tightly grabbed her sisters thighs trying to acclimate herself to the initial pain. He held onto Heather's hips just as firm as she had done with Maddie. He was pumping his huge rod into her doggie style. \n\nHe was talking extremely dirty, \"Eat her ass you little slut! Get in there deeper and get all that cum out. I shot a huge fucking load and it needs cleaned out. I bet it tastes good!\" \n\nHearing his filth, Heather began orgasming with her face buried in her sister's ass. Her screams were muffled like in a cave which technically she was in face deep. Even Maddie got into the action by twisting around and pulling Heather's face in deeper by the back of her head. Dr. Anderson was in ecstasy watching the younger sister forcing the older sister to eat out her sloppy ass.\n\nHe blurted, \"I'm going cum again! Get ready for Daddy's second load!\" \n\nMaddie adamantly insisted, \"Don't cum in her ass! I want it! Tell me when you are going to do it!\"\n\nDr. Anderson continued feeding his dong into Heather's rectum, \"Shlump! Shlump! Shlump! Shlump!\" He was doing his best to hold out as long as he could to prolong the pleasure. He was shaking his head and even slowed down for a little while but eventually had to release. \n\n\"Here it comes! Hurry Baby Girl...get over here! Hurry!\" He desperately warned. \n\nMaddie jumped over and got down on her knees next to her sister. She leaned her face only inches from where the penetration was taking place. Suddenly, Dr. Anderson let out a roar and pulled his cock out while pinching it off to stop any semen flow. Once he placed the head in Maddie's mouth, he began to jerk it furiously! \n\nHe bellowed even louder, \"Aughhhhh! Augghhhh! Aughhhhh! Take it! Take it all! Aughhhhh! Augghhhh! I'm still cumming! Aughhhhh!\" \n\nAfter his first and second shot, Maddie heaved like she was going to gag but quickly regained her composure to suck the cum out of Dr. Anderson's large dick. She was an absolute pro at taking his manhood ass to mouth. Maddie gladly accepted every drop without allowing any to spill down her chin. Dr. Anderson was cumming so hard he felt like his own asshole was turning inside out. \n\nWhen it had stopped ejaculating, Maddie squeezed the base of the shaft and ran her hand upward to milk out the last remaining dollops before swallowing. She then gasped for air like she had held her breath throughout his orgasm, \"That was great! That was a lot of cum. We need to do this again soon.\" \n\nDr. Anderson agreed with the two beautiful coeds and gave them their four points each and a kiss as they all dressed. When the girls got back to their dorm, they showered and discussed what had just happened. They both were hooked even more and not just a desire for anal sex for the club's competition. \n\nSchool started and the first week was difficult. Neither Heather nor Maddie had much time to score any points while getting some anal pleasure. They were consumed with the rigors of the Harvard schedule and getting their academics in order. However, they concocted a great idea with the guys in their co-ed dorm hallway. There were twenty rooms and every other room was occupied by guy roommates which meant there were a total of 20 potential guys for a low key Saturday night sex party. \n\nThroughout the week, either Heather or Maddie would knock on doors to invite them over for the fun. It was to begin at 8pm and the only stipulation was it had to be kept a secret. The girls purchased more lubrication and towels along with three large sheets to cover their futon couch and beds. \n\nAround 5pm, the girls gave each other her enema and within the hour, each was cleaned out and had taken her shower. Feeling and smelling fresh, it was time to dress up really slutty to acquire that half a point. Heather wore a spandex skin tight black mini-skirt that barely reached past her butt cheeks and a spaghetti strapped half top with black four inch high heels. Maddie wore a teal sundress about two sizes too small and high heel mules that her feet slid into. Neither girl wore a bra or panties. \n\nWhile applying her makeup, Heather told her sister, \"Set up the camera. Put it up on the little thingy on your dresser.\"\n\nThe first knock on the door was Mickey and Lance who resided in the dorm directly across from their room. They had sneaked in alcohol. The girls blended some mixed drinks and shared them with everyone. Eventually other guys showed up either as a pair or solo. Not all the guys in the hall wanted to participate but when the final count was tallied, lucky thirteen had filled the room and the girls hadn't gotten to know any of them beforehand except Mickey and Lance. \n\nHeather informed the crowd of guys, \"OK boys, here are the rules. My sister and I want it in the ass. We are safe and clean so nobody will used a condom. We are only doing anal so do not put it in our front. Use lots of lube...there are bottles sitting right there. Be respectful and we all should have a lot of fun. So who is going first?\" \n\nWith the short skirt and dress with no panties, all the girls had to do was pull them up to allow access for the guys, where by then, were mostly standing around the room anxiously awaiting their turn. Heather and Maddie both got on all fours on Maddie's bed with their high heel covered feet hanging over the edge. \n\nTwo unknown guys lined themselves up behind each girl. The tall skinny blonde haired guy had the lube in his hand and dropped his jeans and underwear to the floor before profusely smearing it all over his hard cock. He slid his 8 inches inside Maddie's ass causing her to give a small grimace as it penetrated. He was loving the smooth textured friction on his prick but needed to see it disappear inside her butt so he gently spread her cheeks with his fingers as he pumped. He watched it move in and out. \n\nThe muscular guy had his shorts barely pulled down and driving his 6 inches up Heather's ass. The girls held hands for moral support and with heads turned, smiled at each other while soaking up her own pleasure. The muscular guy was the first to announce, \"This slut's tight asshole is going to make me cum!\"\n\nFrom against the wall, his roommate who was now rubbing his own cock through his pants yelled, \"Do it Tommy! Give it to her! Bust inside it!\"\n\nTommy growled, \"Fuuuuck! I'm cummin, boys! Yeahhhhhhhhh! Augghhhhhhhhhh!\" \n\nWhile Tommy finished shooting his load inside Heather's rectum, the tall skinny guy kept pumping away inside Maddie, letting out an occasional moan. Tommy's orgasm was too quick to allow Heather to have one first. He backed away and shuffled his feet allowing another guy to take his place. Another stocky blonde haired guy fumbled with his belt, anxiously trying to take his turn. When his pants were down, he ignored the frothy cum that had formed a circle around her ringed anus and pushed his 7 inches in on top of it. \n\nMaddie was so close to orgasm that she ordered Tommy, \"Come around here and put your cock in my mouth.\" \n\nShe didn't care that it was slimy and had just came out of her sister's ass. Maddie wanted that oral sensation to go along with the anal sex she was receiving. Putting himself on his knees up on the bed, Tommy was happy to feed his spent penis inside her requested mouth. She gobbled it and could taste the gooey juice all over the shaft. \n\nMaddie was now being spit roasted and her pussy began to first tingle, then build. With a mouth full of cock, she could scream but only let out a muffled yelp when she orgasmed. She trembled and twitched but never once stopped sucking Tommy even as she squirted on the bed. \n\nThe second guy that had taken Tommy's place behind Heather was pumping roughly and within a minute, also exploded, yelling out, \"Fuck! Fuck! Ohhh! I'm cummin! Ohhhh!\" His orgasm triggered Heather's. She clenched in ecstasy. \n\nFinally the first tall skinny guy fucking Maddie let loose and ejaculated inside her ass. He removed his hands from her hips, leaned forward and held onto her shoulders as he individually thrusted every spurt inside her with such force that she had to be careful not to bite Tommy's dick that was lodged in her throat. \n\nTommy's cock had grown back into a full blown hard-on. He held onto Maddie's ears and fucked her mouth with equal force which made it more difficult for the next guy to put it in her ass. Maddie didn't mind that every third pump gagged her because she couldn't get enough.\n\nHeather was now on her third guy. He put her legs together and stood with his apart as he fucked her sperm slickened asshole. When Tommy let loose for a second time, he pushed Maddie's head completely down on his spurting manhood. Even with her eyes watering and her throat stuffed, she took his seed directly down her esophagus. She began to orgasm forcefully again ejaculating two large squirts, but could not verbalize it for obvious reasons. When Tommy pulled out of her mouth, a string of cum snapped off and hung down her chin. \n\nWhile still side by side, Heather smiled before leaning in and slurping the hanging string. She followed it up with her lips like a strand of spaghetti before latching onto her sister's lips for a long kiss. When they broke their lip lock, Maddie said, \"Mmmm...that is so good. I want more.\"",
        "Just then the second guy pounding Maddie's ass let out low pitched growl and shot his cum as deep as he could. She could feel it in her bowels. That warmth and thickness was just what she needed. As Maddie pulled away from that cock, her phone began ringing. She looked at it then at Heather, \"It's Colton. Should I get it?\"\n\nHeather groaned, \"You better not. You don't want to ruin the momentum of this anal gangbang. Isn't it great?\" \n\nMaddie giggled, \"I know, right? I want to taste your ass now.\" \n\nWith a trifecta of loads starting to seep out, Heather turned her tight ass towards her sister and bent over, placing her hands on her knees. Walking on her knees, Maddie lined her head up perfectly before using the tip of her tongue to sample to oozing cum. At first she just lapped at it, trying to decide if it tasted good. \n\nA guy in the room spoke out, \"Oh my God! Look at her! That is so disgusting but so fucking hot!\" \n\nMaddie wasn't listening as her total concentration was focused on licking her sister's creamy asshole. She redirected that focus on cleaning up the gooey outer ring around the anus. Using puckered lips, she would slurp, then lick until the entire area was shiny with saliva. Afterwards, she shoved her entire face in for the large amounts now profusely leaking out. \n\nAnother guy said, \"I'm going to fuckin cum just watching that. What a nasty little whore! I think I'm in love!\" \n\nWhen Maddie pulled her mouth off Heather's rigid bud, she commented then asked, \"That is so good. Is there any more in there?\"\n\nHeather's abdominal muscles tensed before she held her breath. She repeated that action then grunted and more cum began to plop out looking like tapioca pudding. The startled Maddie squealed, \"Oh shit,\" before hurriedly putting her mouth down to catch it. At one point she would place the flat part of her tongue into Heather's ass crack and just allow the cum to spatter on it before quickly swallowing. \n\nWhen all the semen had been cleaned up, Maddie gave her sister's crack one last upward lick to insure total cleanliness, \"Mmmm. That taste is just what I have been craving.\"\n\nHeather quickly turned around, \"Now it's my turn. Bend over for me.\" \n\nMaddie assumed the same position and Heather dove right in, feasting on the slimy sperm trickling out of her sister's anus. Her slurps were more sporadic and forceful. Instinctively, she stuck two fingers in Maddie's pussy while she did it. Maddie spread her legs further and let out a loud squeal, \"Oh God! Ohhhh! Augghhh! Ohhhh...yeahhhhh!\" \n\nWhen Maddie was clean and Heather smiling, the two girls went right back to allowing the rest of the guys to anally fuck them. Heather would ride one while Maddie would hike one leg up on the futon allowing another guy to fuck her in a standing position. They would switch and try out the position they would see their sister perform. A different guy was grunting and cumming every few minutes. \n\nA couple more guys entered the room and several of them already in the room stuck around for a second orgasm and a turn with the other sister. These were young horny college males and they didn't want it to end. The same could be said for the girls. They were cumming often and were making a mess all over with their squirt. \n\nMaddie eventually found herself lying on her back with her legs up in the air. Her ass was hanging over the edge of the bed and another unknown guy was standing, holding her ankles and thrusting his 7 inches into her slick gooey asshole. After her next guy released an additional mess inside Heather's rectum, she smiled and climbed up on the bed, straddling her sister's face while on her knees. \n\nMaddie was still enjoying her ass pounding, judging from her loud moans. With the guy still holding her ankles, Heather took Maddie's feet in her hands and squatted down onto Maddie's face. Heather had to arch her back so that her dripping asshole lined up perfectly with her sister's mouth. The fresh sperm seeped onto her probing tongue eventually allowing the entire load to transfer from Heather's ass to Maddie's mouth. \n\nOnce again it tasted like orange sweet tarts to her and Maddie couldn't get enough. She slurped and sucked every drop from Heather's sphincter, even sticking her tongue inside the rim as deep as she could to shovel the remaining liquid out. It felt so good to Heather, she began grinding on Maddie's face trying to get herself off. \n\nThe guy fucking Maddie growled and shot his cum into her ass. He gurgled until every pulsating spurt had been deposited. Just as his replacement had started in, Heather began to yelp, \"I'm going to cum on your face! Oh my God! Here I goooooooooooo! Eeeeeeeeaaaahhhhhhhh! Ohhhhhhhhhh!\" \n\nIt was Heather's best squirt of the evening as the stream arched forward, striking the guy fucking Maddie in his pubic hair. Soon the muffled cry of Maddie reverberated inside her sister's ass when she also squirted but it was more upward and all over like a sprinkler in the back yard. When Heather dismounted Maddie's face, Maddie had sticky cum globs on her nose. Heather laughed, \"You look like the Rudolf's cousin the white-nosed reindeer.\" \n\nThe guy that was fucking Maddie looked at Heather and pointed toward his cock, \"I'm getting close. You two are the biggest cum sluts I have ever seen and if you want this, come down here and get ready.\" \n\nHeather jumped off the bed and knelt down close enough where she could actually tongue his thrusting shaft. Every time it withdrew from Maddie's ass, she would lick it with the tip of her tongue until he pushed it back in. The cock was so coagulated with the cum from the previous loads, Heather was getting an appetizer to what was about to happen. \n\nThe guy was more desperate as he got closer, \"You want me to bust in her ass or do you want it in the mouth?\" \n\nWith her large beautiful eyes and pouty lips, Heather replied, \"Keep it in her ass but only keep the tip in so everything with be right there in the entrance. I will jerk it for you. Tell me when.\"\n\nHe was pumping and pumping when finally he asked, \"Are you ready?\" \n\nHeather put her hand right there so not to be late. He then shouted, \"Now!\"\n\nShe fit her little hand in the crevice and jerked his cock while just the head remained penetrated inside her sister's anus. He bellowed, \"Yeahhhhhhh! Faster! Faster! Yeahhhhhh! Augghhhhh!\" \n\nHeather followed his request and jerked his slippery meat while it pulsed and spewed inside Maddie's rim. His body flinched in ecstasy. While gripping tightly, her hand milked every drop from his being into the sealed entrance. When he finished, he was about to pull away until Heather stopped him, \"Don't move! Hold it there until I get into position.\"\n\nHeather wanted to taste that fresh cum. She put her mouth inches from the hidden cock head before giving permission, \"OK...you can pull it out now.\" \n\nWhen he stepped back, Heather lunged forward and placed her opened lips around Maddie's butthole. The goopy sperm was oozing out into her mouth just like she had planned. The best part was she didn't have to take her tongue and probe very deep to extract it all. It took two swallows to consume it all. When she finished, she wiped her mouth, \"That is so good. You are right, I think it reminds me of salty orange sweet tarts.\" \n\nMaddie was still lying on her back holding her knees when she giggled at Heather's comment, \"See...I told you.\" With the next guy ready to get his turn, Maddie revealed her desire, \"This anal sex thing is amazing. I have never cum this much in my life but none of these cocks are as big as Dr. Anderson. I want to have that extreme full feeling to give me that earth shattering orgasm. I was thinking that maybe I can try to take two at the same time. What do you think about that?\"\n\nHeather looked at her with uncertainty, \"I don't know. You know how guys are squeamish about allowing their dongs to touch each other and also, two will be very wide for you to try to take.\" \n\nMaddie grinned and pointed to Mickey and Lance who still hadn't gotten in on the action, \"Those two are best friends and they room together. I bet they would do it.\" \n\nHeather walked to the guys who were a bit shy, \"Hey, why haven't you two jumped in here and fucked our asses?\"\n\nLance spoke for both of them, \"Well...we...we were waiting for the right moment.\" \n\nHeather took both of them by the hand and escorted them over to the bed, \"That time is now. Maddie wants two cocks in her ass at the same time so we figured you guys are very close and would do that for her. Would you mind?\" \n\nThey looked at one another then shrugged before Mickey responded, \"I guess not. How should we do it?\" \n\nHeather rushed them into removing their pants and both guys had nice sized rock hard cocks. Mickey was a good 8 inches and Lance was a thick 7 1/2 inches. When they were ready, Maddie requested, \"I want Lance in me first because he is thicker. Come here and sit down on the bed.\"\n\nLance sat down with his legs together and his back against the headboard. Maddie stood overtop his lap and lowered herself while putting his cock in her ass. She was sitting facing him totally impaled on every inch when she turned the best she could and motioned to Mickey with her hand, \"It is your turn. Get more lube and put it in slowly.\" \n\nMaddie arched her back and leaned forward to give Mickey some room. He spread his legs but continued to stay on his feet while squatting behind her. Even though the bed mattress was unstable, he was able to put his cock directly on top of Lance's and push while trying to create space that just wasn't there. He was pressed up against her back and she could feel his warm breath on her neck. \n\nThe head popped in her already cock filled asshole and Maddie grimaced, \"Ohh! Careful now! Keep going!\" \n\nLance gently pushed and his cock began to stretch its way up her booty alongside Mickey's cock. Once again she shrieked, \"Ohhhhh! Keep going! Yes...keep going!\" \n\nFinally he had struck the bottom and his balls were mashed up against his roommate's. Maddie had both dicks buried inside her ass. At times it was uncomfortable but she also loved it. She gyrated in a circle trying to stretch her anus just a little more.  \n\nFor the third time her phone rang and it was her boyfriend on the caller ID. Heather asked Maddie, \"Do you want me to turn it off?\" \n\n\"I better get it before he drives here himself. Would you hand it to me?\" Maddie asked. \n\nMaddie swiped the phone, \"Hey Babe. What's going on?\"\n\nColton responded, \"I should ask you that. I have called three times. What are you doing?\" \n\nWith the guys talking in the background and Maddie grunting every time her body shifted, she responded, \"I'm sorry. I'm in a yoga class right now. The class is full so it's noisy.\"\n\nThe relieved Colton said, \"Oh. Thank God. I thought maybe something had happened.\" When Lance and Mickey started moving their cocks in and out of Maddie's ass, she couldn't help but moan a couple of times causing Colton to ask, \"Are you OK?\" \n\nWith her finger to her lips as if to tell everyone to shhhh, she answered, \"I'm fine Babe. I have a trainer and you wouldn't believe how much I'm being stretched right now.\" She silently giggled and continued, \"I have never been stretched like this. It hurts but feels amazing!\"\n\nHeather was shaking her head and smiling. Maddie shrugged her shoulder as if to say, \"In some ways, well...it is true.\" \n\nAfter she hurried him up off the phone, the two hard penises lodged in her ass started moving faster and faster. Mickey was thrusting upward and Lance thrusting inward. Heather was riding one of her own. Once again the room was filled with moans and grunts. \n\nMaddie was holding Mickey's shoulders but would periodically take time to rub her own clit. She screamed, \"OH MY GOD! Augghhhhhhhh! Ooooooooooooooo! Ohhhhhhhh!\" She began to gush all over his lap. \n\nHeather began to squirt just by watching it. She was rubbbing her clit side to side while Maddie was an up and down kind of girl. They both knew what felt best to them. Finally Lance couldn't hold out any longer and shot his cum inside Maddie's ass. She made him stay inside so that she could feel that size until Mickey did the same. Mickey growled, \"Yeaaaahhhhhh! Dammmnnnn! Augghhhhhhhhhhhh!\" \n\nTaking several more loads, the evening began to wind down. For the final kinky act, the girls got into a sixty-nine position and were able to throw their legs back far enough where they could eat the creampies from each other's ass. Of course Maddie's was gaped very wide which made it easier for Heather. \n\nThe room was a mess and eventually the last guy had left leaving it smelling of cum and sex. The girls checked the recorder and they had fucked for two hours and seventeen minutes. Not only had both girls scored countless points for Anal Academy, they had a blast in doing it and had given themselves many orgasms in the process. They showered and settled in the rest of the night trying to recover. \n\nThe rest of the month, the girls were fucking at least three times a week and getting pumped by Dr. Anderson every Sunday afternoon. They were as slutty as ever and building their scores. Finally, it was time for the first meeting and they had discussed going over to Dr. Anderson's apartment early to get fucked again. \n\nWhen they arrived an hour early, they rang the doorbell to the faint yelling by Dr. Anderson from inside, \"Come on in! It's open!\" \n\nHeather and Maddie stepped inside, there was the sexy black Aleesha with her big booty in the air while on her knees. Dr. Anderson was also on his knees behind her, pumping his big dick inside it. He looked at the two red heads, \"Hold on girls...I will be with you in a minute. Aleesha here is trying to keep her hold on first place.\"\n\nBoth girls had thought they had fucked enough to hold the top two spots and just looked at each other with mouths wide open."
    ],
    "authorname": "Brittni4u",
    "tags": [
        "anal sex",
        "lesbian ass play",
        "anal creampie",
        "anal creampie eating",
        "cum swapping",
        "cum in ass",
        "ass to mouth sucking",
        "incest",
        "anal gangbang",
        "anal fetish"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-academy"
}