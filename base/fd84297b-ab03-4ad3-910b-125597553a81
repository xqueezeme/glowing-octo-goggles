{
    "title": "Justin Thyme Ch. 17",
    "pages": [
        "Thank you so much for staying with my story for so long! I really appreciate the great feedback I'm receiving from so many of you, and the emails. I respond to every email that has a return address. \n\nI am particularly gratified by those of you who know areas I write about and comment accordingly. One gentleman was even able to identify two of the restaurants mentioned, which made me homesick, since I've not been there in years! Thanks also to the ones who have commented on the choice of music I have mentioned various times in the story. Much of it is music I am listening to as I write, or particular mood music to fit a scene. I am blown away by how deeply some have identified with my tale, and am gratified. Thank you!\n\n*****\n\nRosemary stirred, and then murmured, \"I'm drooling on you. I'm sorry.\"\n\n\"I don't know anyone else I'd rather have drool on me.\"\n\nShe lifted her head and looked at me. \"I love you, even if you are a big goof. Wow! I really needed that, and it still feels good! Didn't you come?\"\n\nI shook my head. \"It was close, but I wanted to save it for you.\"\n\n\"You're sweet.\" She started rocking her pelvis gently. \"Justin, you feel so good in me. I don't know what it is about you, but you just feel so wonderful.\"\n\n\"I doubt I'm anything special, but thank you for noticing. I think you feel wonderful, and you are special.\" I started rocking my pelvis along with hers, feeling my cock sliding in and out in very small strokes. \"Did I ever tell you that you are my favorite sister? I love you.\" I hugged her to me tightly, enjoying the feeling of her boobs squashing against my chest, even if I did still have my tee shirt on.\n\n\"I'm really glad. It's a good thing you are my brother, because otherwise I'd lose a very good friend fighting her to marry you.\"\n\nI released my hug just enough to lift her up to where I could get my mouth on one of her nipples and I sucked it in deeply into my mouth and then began swirling my tongue around it and stroking it flatly across the end of the nipple. Her pelvis pulled up against me tightly and she moaned and then gasped. \"Don't stop doing that! Oh, but it feels so good! When your tongue rubs across the tip of my nipple like, ohhhh, that, it vibrates in my pussy.\" The next time I stroked my tongue across her nipple I also hummed a low guttural hum, and she came again with a quiet shudder, and goosebumps popped up all over her arms. \n\nShe nearly put me over the edge, but I managed to focus on her enough to keep mine in check. I was determined to make this time really special for her. Rosemary has been so sweet to share me with Stephanie, and always puts Stephanie's needs ahead of her own. I know Stephanie is my girlfriend, and I plan to marry her one day, but they have agreed to share and share alike. Rosemary is constantly telling me to take care of Stephanie, even though it is her own turn. This time was going to be all Rosemary's, and it was going to be a time she would not soon forget if I could do anything about it. \n\nRosemary nuzzled her face against the side of my neck, giving me little kisses, alternating with gentle nips with her lips where the neck meets the shoulder, although being careful not to leave a mark. \"What is it about you, Justin? It isn't the sex, although that is wonderful, but just having you that is special?\"\n\n\"I don't know that I am.\"\n\n\"Oh, but you are. I just feel more complete when you are around. Holding your hand in the car on the way up here was just so . . . so . . . satisfying. You probably think that sounds stupid, but that's what I feel. When I snuggled with you the other night and Mom about caught us; there wasn't any sex, but I just felt whole being in your arms. Sometimes I just look across the room at you and my heart flutters and my pussy tingles. Just seeing you is enough for me to feel a part of you.\" She lifted her head and looked into my eyes before lowering her face to rub my nose with hers. \"And then I get to be with you and feel you in me, and you raise me to a totally different level. You always make sure I get off before you do, even if we just have a quickie and I tell you not to worry about me. Somehow you make it happen.\"\n\n\"And just a little bit ago. . . that was the most exhilarating feeling I have ever known in my life. And then you did it again!\"\n\nI had stopped moving in her when she came the second time. I was so close it wouldn't take much of anything to put me over the edge, but I really wanted this to be extra special. I know Rosemary is my sister, my twin, and I've always loved her, but I have not always been in love with her. Now I am in love with my sister, and I know society doesn't approve. Mom and Dad would not approve, but I didn't choose for it to happen. When it did happen it hit hard, harder even than it did with Stephanie.\n\nWith Steph, it just grew on me and kept growing until I was overwhelmed, but with Rosemary it was instantaneous. I would gladly lay my life down for either of them with no questions asked, and I don't love one more than the other, but it is different. I'm very glad the two of them are OK with the situation, in fact they encourage each other. My biggest fear is that I will prove unworthy of them, and that I will let them down and not be able to give them what they need.\n\nRosemary held my face in her hands tenderly and brought me out of my reverie when she leaned in and gave me a gentle kiss that grew in intensity and passion. It wasn't a sexual kiss with tongue wrestling. It was a soul kiss that expressed our deep love for each other and shivered me all the way down to my toes. My cock twitched within her, causing Rosemary to moan into my mouth and she pressed even more tightly against me. She squeezed me with her pussy and rocked her pelvis just the least little bit, but by squeezing my cock with her vaginal muscles while rocking her pelvis she had my balls churning.\n\n\"Oh, Justin, that feels so good when I do that. Do you like it?\"\n\nI really couldn't speak. I was that much on edge, but I nodded my head, my cheek nestled tightly against her cheek.\n\n\"I want to try something I read about in a magazine. It said guys really love it.\" She started rhythmically squeezing her vaginal muscles, and how she did it I don't know, but it was like a rippling effect, starting at the head of my cock and working its way down, and then back up. \"Ooooh, I hope you like that! I really do. In fact, I think I'm going to come again in a minute.\" Her hips started flexing on me as she did the contraction thing. \"Don't even move. Let me do it all for you.\" She was panting in my ear, even though she was moving very little. \"Oh, Justin! Oh, Justin! Oh, Justin! \n\nShe was a little louder and a little more intense with each time she said my name. \"Oh, Justiiin!\" She nearly wailed my name the last time, and with one more muscle contraction she also slammed her pussy all the way onto me, crushing her pubis against mine and grinding against it with a wail of \"OHHHHHHhhhh!\" and her whole body spasmed and her pussy clutched at my cock, squeezing and pulsing, and she put me over the edge. I had been careful not to move as she had asked, but it was involuntary as my hips lunged back and then forward again to grind against her as well, and my seed pulsed strongly into the one I love.\n\nMy arms went round her and I held her gently to me as she lay with her head on my shoulder, her breath coming in shuddering gasps, while my chest pounded and heaved as I tried to get my heart and lungs back to equilibrium. \"Thank you,\" she whispered in my ear. \"I really needed that.\"\n\n\"Don't thank me. You did all the work.\"\n\nThat earned a giggle from her as she raised her head and rubbed noses with me again. Her red gold hair hanging down from her head framed my face, and I don't believe I've ever seen a more beautiful sight than my sister's face smiling down at me, with her gorgeous hair all around. \"Did I ever mention how beautiful I think you are?\"\n\n\"Thank you,\" she whispered. \"I'm really glad you think so.\" She laid her head back onto my shoulder and we snuggled together for a few minutes as my cock slowly shriveled and shrank. I was careful not to move, not wanting to spoil the moment. We lay there for several minutes enjoying each other's presence until life interrupted, and my cell phone rang.\n\nI would have just let it ring, but I glanced at the clock and saw it was four o'clock already! It was Brian calling, and I had set the appointment, so I had to take the call. \n\nGently I rolled Rosemary to the side, and she quickly grabbed a towel to keep from making a bigger puddle on the bed while I grabbed my phone. \"Hello, this is Justin.\"\n\n\"Hi, Justin. Brian here, calling you back as you asked. Do you have a time that would be convenient for us to get together?\"\n\nI glanced over and saw Rosemary smile at me and between the beauty of her loving smile and the beauty of her body I nearly forgot what I was doing. \"Oh, yes. Time. I'm sorry, but I'm a bit distracted at the moment. Actually, we have had a change in plans, and I am staying over here in Scottsdale tonight. I could get together with you this evening, or tomorrow morning early, if either works for you.\"\n\n\"This evening would be better for me if we could do it soon. Where would you like to meet?\n\n\"If you don't mind a work in progress, could you come by the house? Getting away would be a little difficult for me right now.\"\n\n\"Cool. Jim told me about your house, and I'd like to see it anyway. I know where it is, and I can be there in about fifteen minutes if that works for you.\"\n\n\"Excellent. I'll look for you. Punch 123 on the keypad. We haven't gotten around to programming it yet. It will open for you.\"\n\n\"See you in fifteen,\" and the phone went dead.\n\nRosemary snuggled her breasts up against my arm and wrapped her arms around me. \"May I sleep with you tonight? Susie knows about us, and she won't care.\" She reached down and petted my shriveled member. \"I don't know if that would be my little big brother, or my big little brother,\" and she giggled. \"Thank you for making this afternoon so wonderful and good for me. I really do love you.\"\n\n\"I know, and I love you, too.\"\n\n\"You know, you really look kind of funny like that!\" My shorts and boxers were still below my knees, and I still had on my tee shirt.\n\n\"Maybe I do, but you look absolutely beautiful like that. Whoever gets to wake up to that in the morning is one lucky guy.\"\n\nGrasping my shorts by the belt loop I sort of waddled into the bathroom to wash off a bit before Brian got here, and looked in the mirror to see Rosemary leaning against the doorjamb holding her bikini in her hand. I am such a lucky guy!\n\n~~~~~~~~~~~~~~~~~~~\n\nMichael thought for sure that David Abernathy was going to attack Pete, but the click of Jason's Asp when he flipped it open changed his mind. \"I would suggest, Sir, that you have a seat and wait quietly for the Police to arrive. They will be happy to read you your rights before they take you to jail.\"\n\n\"You can't keep me here!\"\n\n\"Wrong, Sir. I cannot arrest you. That would be correct, however I can detain you until legal authority arrives.\" When Abernathy seemed ready to attack him, Jason said, \"Be advised, Sir, I am authorized to use force if necessary. I would strongly suggest you have a seat. It is not my desire to use force, but I am prepared to do so if needed.\"\n\nDavid Abernathy finally sat down, but he trembled with rage while he waited, and stared balefully in turn at Pete and at Michael. \n\nIt took about fifteen minutes for an officer to arrive, and Abernathy jumped to his feet yelling for the officer to arrest Pete, Michael, and Jason for kidnapping and for holding him against his will. It required another fifteen minutes to quiet Abernathy down enough for the officer to determine the issues and then to place Abernathy under arrest. Finally, with Abernathy out of the room quiet settled in.\n\nPete spoke to Jason as he started to leave. \"Jason, I just want you to know I will be writing a commendation for you and for what you did for us today.\"\n\n\"Not a problem, Sir. That's my job. No thanks are necessary.\"\n\n\"I wasn't talking about with Abernathy. I was talking about lunch!\" It wasn't all that funny, but as tensions bled off it seemed hilarious. Jason gave him a mock salute and left the room.\n\n\"Dave, call the airport and find out if the company jet has left yet, or if we have to get commercial tickets back to Omaha. I think we need to get Michael out there as soon as possible so he can at least talk to some people before he has to get home tomorrow.\"\n\n\"Michael, can I presume on you to stay at least to the end of the day? It will put you home late in the evening, but it would be very helpful to us.\"\n\n\"I believe so, Sir, but I will have to check. I have a couple of pressing issues that I have to address. I'll stay as late as I possibly can for you. Is that good enough?\"\n\n\"At this point, I'll take what I can get and be thankful. You have already saved the railroad a tremendous amount of money today, plus made certain we don't have deficient locomotives. I'm very grateful for what you did. If we have to we can reschedule with the IT people at a later date. I really felt the need to strike while the iron was hot with Abernathy, and that certainly paid off!\"\n\n\"Let me make a couple of calls and I'll have an answer for you very shortly.\"\n\n~~~~~~~~~~~~~~~~~~\n\nBrian rang the doorbell closer to ten minutes than fifteen after we spoke. I said something about him being prompt.\n\n\"I hate being late! My pet peeve is waiting for someone to show up after a time they told me they will be somewhere.\"\n\n\"You are sounding more and more like my Grandfather. Come on in the house. Can I offer you something to drink before we sit down and talk? Soft drink, water, coffee, tea?\"\n\n\"Coke would be great if you have it. Thank you.\"\n\nI led him in to the kitchen and grabbed us each a Coke. \"I told you this place is primitive at the present. Grab a paint bucket, and we'll go back to the library and talk a bit.\"\n\nWe each grabbed a bucket and made our way toward the library, but as we went I pointed out some of the features of the house, those that could be seen from the first floor. I really didn't want to be taking a guy on a tour of the place until I knew him better. I really didn't think Brian would be a problem, or Jim wouldn't have sent him over, but one doesn't take chances, especially with twenty plus girl's safety.\n\nI led him into the library, and while Brian was not particularly interested in the architecture he was fascinated by the desk and all of the bookshelves. \"I'd love to have a room like this in my home, especially if it was full! I wouldn't leave it except to eat and sleep! The only thing it really needs is a good stereo system in here, especially if you optimize it for the room.\"\n\nUnless this guy really stepped on his crank sometime in the next few minutes I knew I was going to approve of him. I hadn't seen or heard anything I didn't like yet. We just sat down when the doorbell rang again. \"If you need to get that, go ahead. I'm in no hurry.\"\n\nI shrugged. \"It's not a problem. We have a girl coming to see the last room available, and a couple of our new tenants are coming over to use the pool. It's probably them, and Rosemary can take care of them OK.\"\n\n\"So tell me a little bit about yourself and how you know Jim.\"\n\nThat got a bit of a grin out of him. \"Well, we used to live in Tucson when I was little, and when my Dad bought a new TV for the house, and it was a really nice one, I was curious about how it worked, so I took it apart. I must have been about eight or so.\" I sat there bug-eyed staring at him. \"Anyway, Dad came home from work to find the TV spread out on the living room floor and he about killed me! He called Jim, who came and put everything back together. I really think I could have put it together myself, because I laid everything out in order, but Jim did it. \n\nHe recognized my curiosity, and he gave me some old electronics that didn't work and let me learn by taking them apart and putting them together. I used to ride my bike over there after school and sit and watch him or one of the other guys working on things in the back room. I must have driven them crazy asking questions, but they taught me. Unfortunately, we moved to Flagstaff when I was twelve, but Jim and I have kept in touch ever since. \n\nAnyway, I'll be graduating in a couple of weeks with a double major in electrical engineering and business management. My goal is to have a store like Jim's, and this sounds to me like a great place to start.\"\n\nI sat there and shook my head. It's no wonder Jim wanted us to get together! \"When can you start?\"\n\nBrian looked at me like I'd grown another head. \"You mean you want to hire me? I haven't even filled out an app or anything, or given you any references.\"\n\nI just laughed. \"You gave me all the references I need! Want to know how I got to know Jim?\"\n\nI didn't get to tell him right then, because Rosemary walked in the room with Debbie, Bitsie, and another girl I didn't know. Rosemary was wearing her bikini, and it was all I could do not to pop a boner! That emerald green bikini with her green eyes and her red-gold hair was striking, to say the least. \n\n\"Justin,\" she said, \"I want you to meet Helen. She's the one who is interested in the last room.\"\n\n\"Helen, it is a pleasure. Please excuse me for being unavailable at the moment, but if you have any questions Rosemary can't answer, please feel free to stop me before you leave. Bitsy, Debbie, it's nice to see you again, and Debbie, thank you from bringing Helen over.\"\n\nThey all waved their greetings and Rosemary led them back out of the room promptly. She could explain our plans for the library outside and not interrupt us any longer.\n\nBrian looked at me with big eyes and a face that had nearly gone white. \"Please tell me she isn't your girlfriend.\"\n\nI looked at him, puzzled. \"Who?\"\n\n\"That beautiful red-head. She is without doubt the most beautiful woman I've ever seen!\"\n\n\"Thank you. I'll be certain to tell her you said so. I think she is beautiful, too, but she isn't my girlfriend. She's my twin sister. Obviously, when she got done in the looks department the looks locker was empty! She looks like Mom, and I look like Dad. If you have time after she gets done giving the tour I'll be happy to introduce you.\"\n\n\"I'll make the time! For once in my life I don't care if I'm late to something. Thank you.\"\n\nOther guys have asked me to introduce them, and I have declined, but something about Brian I really liked from the start. Maybe, in fact probably, the fact that Jim sent him influenced things, but we had so many similarities I felt more than comfortable with Brian, and I really wanted to be sure Rosemary had an opportunity with a good man. Giving her up was going to be very hard, though.\n\nBrian shook his head as if trying to get his bearings, but I noticed he kept looking toward the door hoping to see her again. \"Anyway, you started to tell me how you got to know Jim.\"\n\nI laughed. \"Tell your story, but use my name and you've got it! Except mine was one of the first projection TV's. I spent hours and hours in that back room tinkering on things, and learning to build things, like my sound system at home, and my computer. When I was old enough I started working for him after school and on weekends. I really hated having to quit when we bought this house, but there was no way to continue, and with school starting in the fall I wasn't going to be able to work there during the school year anyway.\"\n\nDoubt clouded Brian's eyes for a moment. \"So I understand you and Jim are doing this together up here. What do you need me for? I really don't want to be just a tech or a tech and clerk. I'm looking for an opportunity to run my own store.\"",
        "\"That's what you will be doing. I will not be an active partner, even as much as I want to. That doesn't mean I won't be hanging around and getting in your way, but I'm not going to try to run the store, nor will I tell you how to run it. I'll leave all of that to Jim. All I'll do in the store is play around a little bit and keep up with stuff. If I have some time to spare I may do some warrantee work or something like that, but I promise you that's it.\"\n\n\"OK. Good. I can deal with that. It looks to me like you will have your hands full here, plus school. Running a house of this size is not easy, and I can't imagine having to keep a place like this up with a bunch of girls living in it! Better you than me! People might think you have it easy with a bunch of eye candy like what we just saw running around, but they can be the hardest to deal with!\"\n\n\"You sound like you have experience?\"\n\n\"Yeah. My Mom was a group home leader for girls with problems. You couldn't pay me enough to do what you're doing!\"\n\n\"So what is your relationship with Jim on this new store going to be anyway? Or is that none of my business?\"\n\n\"That's a good question. I'm putting up the money for the store.\" I held up my hand to forestall questions. \"Let me tell you how it is, but I require you to keep it strictly between us. At present time there are four other people who know about this, and three of them are in my family. Understood?\" Brian nodded.\n\n\"You heard the news reports, highly glamorized by our Sheriff I'm sure, about what we found in this house, right? Well, I'm going to give you the Reader's Digest version of the story. We did find the monies sent to Samuel Johnson by the railroad for the merger, and although we could have kept half of it legally, neither Michael, you'll meet him another time, nor I, or my family for that matter, thought that was the right thing to do. A reward had been offered by the railroad for finding Samuel Johnson, and by inference for finding the gold, so we called the railroad and told them we had found it.\" \n\n\"Their CEO, President, and Legal Counsel all flew down here to pick up the gold. My Grandfather, who is a retired lawyer, represented us to them, and he suggested the reward offer ought be increased somewhat due to the gold being worth better than seventy times what it was worth at the time of Johnson's disappearance. Grandpa said we weren't necessarily asking for that much of an increase, but that we would leave it up to them to make a reasonable reward, especially in light that we could legally claim half as treasure trove. The CEO said he could see no reason the reward could not be paid out in the gold coin at the rate offered, and we would indeed have the seventy times value the gold has increased.\"\n\n\"Anyway, while it is a substantial sum, I'm not rolling in it from the reward, but I wanted a place to invest that I was certain of a good return, and I can have fun playing with it, too.\" Brian nodded his understanding.\n\nMy cell phone rang. I wouldn't have answered it with Brian there, but I was expecting to hear from Michael. I excused myself and took Michael's call.\n\n\"Hey, Justin. Sorry I couldn't get back to you earlier. Look, the earliest I can get in to Tucson tomorrow is six thirty-five. It is either that or eight twenty. I really have to go back to Omaha with Pete right now, and I need to take care of business there. It's a long story, but I'll tell you about it later.\"\n\n\"What can you do if you come to Phoenix? I really need to see you at the house.\"\n\n\"Oh, that would work out better, but how would I get back home? Ugh. That adds a complication. I have to be in Phoenix Friday morning too.\" There was a brief pause. \"That would work a lot better on this end. I can catch a nonstop at four thirty-five. Like that better, Pete?\" he said away from the phone. \"Yeah, that puts me in at five ten. Will that work OK for you, Justin?\"\n\n\"It might make for a late night. Mom, Dad, Grandpa and Grandma, and of course Rosemary and I have to meet with you. There have been some complications that need to be taken care of quickly. I really can't say more right now. Could you stay over at your parents, or if you don't mind roughing it a little bit you could stay here at the house. You might rent a car if you need wheels, and the company will pay for it. Either that or we'll work something else out.\"\n\n\"OK. I'll try and catch that flight and you won't have to pick me up. I'll rent a car. Meet you at the house, then?\"\n\n\"That will be best. I'll have some pizzas here for us. I don't want to take time to go to Bill's.\"\n\n\"Good enough. Look, I've got to run. Pete wants to get wheels up right away. I'll see you there sixish, depending on the flight and how long it takes me to get a car.\"\n\n\"See ya.\"\n\n\"Sorry, Brian. I've been waiting for that call since this morning.\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nStephanie and Susie were baking in the sun, as they had been for a while. It was late enough in the day to not be totally oppressive, yet provided for a good tan. Susie had removed her prosthesis for swimming, and had mastered hopping on one foot well enough to make it from the pool to the lounger, where she was stretched out.\n\nShe saw Steph looking at the stump with a sorrowful look on her face. \"Now don't you be getting all weepy about my foot, Stephie. It's OK.\"\n\n\"I know, and I'm glad you are able to accept it so well. I don't believe I could have, and I'm really sorry I got you into that situation.\"\n\n\"Stephanie Winters. We have been over this before. It was not your fault in any way, and I don't want to hear you saying anything of the sort. It wasn't Mikey's fault either! It was those two guys who were trying to take advantage of the girls at that party. Besides, if it hadn't of been for that wreck I never would have met Mikey. I'd trade both feet for him, and gladly!\"\n\n\"You love him that much?\"\n\n\"Oh, but I do! I just wish we could get married. He's just so proper I could scream sometimes!\" She lowered her voice to a near whisper, although there was no one else at the pool yet. \"I was teasing him, like I used to try to do with Justin, and it really was getting to him! He tried his best to hide it, but he kept getting hard. He never wanted to hug me tight, trying to keep me from feeling his erection, but I felt it a few times.\" She shivered at the memory and her nipples started to protrude through her bra.\n\n\"I took it too far though, and I really hurt him.\" Susie's voice was somber as she told it. \"I wanted Mikey to go further than he was willing to go, so I tried teasing him and getting him really riled up to get him to take it further. The other day when we went up Mt. Lemmon I had on my thinnest bra, and just a light shirt. My nipples got to poking because it got chilly as we were going up the mountain, especially when we climbed out on the rocks. I acted like I had trouble climbing down a couple of places so he would stand below me and catch me if I needed it, but I just pretended where it would put him at eye level with my boobs. I know he liked it, and I rubbed against his arm when we walked, but I also knew it frustrated him.\"\n\n\"I told him I didn't care if he looked, that I am his whenever he wants, and he just shook his head. Anyway, I caught him off guard and grabbed him around the waist and hugged him to me once, and he felt nice and big! Anyway, when we went into the general store it had gotten cloudy and the breeze picked up, so my nipples were really hard. I saw him looking a couple of times when he didn't think I'd see it, and then his eyes would squint up and he'd turn his head away. I knew it wasn't because he didn't like them, but it was really getting to him.\"\n\n\"When we left it had started raining, but we couldn't wait because he had to meet Pete Fleming at the airport. I told him I like to play in the rain, so I ran on out to the car and stood there letting the rain soak my shirt, because I knew it would get see-through. It was even better than my other bikini when it gets wet, and he just stared at me when he got into the car. I really thought he was going to reach for me, but he closed his eyes and just sat there and shook.\"\n\n\"He asked me to sit in the back behind him, and said that he wanted me so badly, but that he couldn't, that it would be a sin against me, against my parents, and against God.\"\n\nSusie sat there quietly for a moment before she went on in a soft voice. \"I knew then I had really hurt him. I didn't mean to! I was just having fun with him and teasing him, trying to get him to make love to me, and I just about ruined everything. I apologized and told him I hadn't realized what I was doing to him, that I had not meant to hurt him, that I am his and nobody else's, and that I will not tease him any more, although if we get married all bets are off!\" She had a big grin on her face when she said that.\n\nWe didn't have time to drop me at my house, so I had to go with him to his apartment, and he had me get a shirt of his to wear because I was so wet. I had to take off my bra because it was soaking wet. You know the really funny thing? His shirt came down to just below my shorts, and it looked like a short dress. I thought his eyes were going to bug out when I walked out of the bathroom! His voice was really shaky when he said, 'Please tell me you have your shorts on under there! That is the sexiest thing I've ever seen!' I thought he was talking about me not having on a bra, and I apologized for taking it off, but that wasn't it. It was the shirt!\" \n\n\"He actually hugged me, and tight! I could really feel him against me, and my boobs were smashed against him. He gave me the biggest kiss he has ever given me. And do you know what is really special? I don't ever have to worry about another woman! If he wouldn't give in to temptation from me I know he won't with anyone else either.\" \n\nStephanie nodded. She had listened with rapt attention to Susie's story with wonder. \"I'm glad Justin and I don't have to wait like that. I don't know. Maybe it's better, but if I had to wait four years for him I'd just burst. Sometimes it seems like I'll never get to be with him again, and it's only been a day or two.\"\n\n\"Maybe that's why I'm so maudlin today. I really miss Mikey when he's gone. It feels like part of me is missing.\"\n\nStephanie giggled. \"I just had a bad thought! Those two losers that got Mikey messed up wouldn't know what to do with a house like this!\"\n\nSusie laughed out loud. \"I know! Sometimes I feel sorry for Justin! I mean, he's a good guy and all, and I know he would never take advantage, but Rosemary told me about those two that came by to look at the house that one afternoon, and the way they were teasing him! She said you two made a rule that he can't take care of things himself; that he has to save everything for you! I'll bet you are busy this year!\"\n\n\"I know. I just hope I can keep his interest.\"\n\n\"Don't be ridiculous!\"\n\n\"I know. I just can't help myself. Sometimes I see other girls with bigger boobs and all and I feel inadequate.\"\n\n\"You have nothing to worry about, trust me. I tried, and I couldn't even get him to pay me any attention at all if you were around. Once he saw your nipples pushing out through your bikini I was history!\" Stephanie blushed at the memory, yet was pleased.\n\n~~~~~~~~~~~~~~~~~~~\n\nPete Thyme sighed when the Thompsons entered their home. \"I'm almost sorry Justin and Michael found that gold. The first batch from the railroad was bad enough, but it was just enough that if they were careful it could give them a very good life. This on the other hand . . . I'm just not sure they can handle it. Michael I'm not so worried about. He won't even want any, but I'm not so sure about Justin.\"\n\n\"Look, honey, we raised him right, at least to the best of our ability. He has shown remarkable maturity so far, and you know he isn't selfish or a spendthrift. I think he will do all right.\"\n\n\"I certainly hope so. At least he is asking your Dad for advice, even when your Dad told him it was beyond his expertise. I think your Dad is worried, too.\"\n\n\"I know he is, but we have an ace in the hole. Mom. You know how Justin is about his grandmother. She can't give him financial advice on a professional level, but you know she has handled the books for Daddy all these years. She's no dummy.\"\n\n\"I guess we really don't have any options, do we? I was just wondering on the way up here, should we involve the Tib's?\"\n\n\"I don't think so. If we called them in it would be telling Michael we don't trust him to handle things. Michael grew up around that world, although I have no idea what kind of money is involved with all of those stocks and bonds. Daddy seemed pretty shook by them. You notice he didn't have much to say on the way home.\"\n\n\"Umh hmmh. Your Mom said more than he did, and normally he is the one who does the talking for the family.\" \n\n\"Well, at least there is one bright side. If the house doesn't work out for some reason at least Justin doesn't have to worry about affording college.\"\n\nPete Thyme just snorted as he pulled into their home driveway.\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nBrian and I talked for a bit more, but now it was very much on a casual level. We kicked around ideas for what we would like in the store, subject of course to Jim's approval and we talked about ASU and school. I couldn't let on to him, but my mind was befuddled as to what to do with my college career. I had intended to do straight electrical engineering, but that was no longer going to be my focus. It couldn't be. I had to do some serious learning about how to handle my fortune and handle it well. I didn't want to end up like so many who come into sudden wealth only to have it dribble through their fingers and they end up penniless. I seriously questioned if ASU was even the right place for me. Much of what I needed I could actually learn online, and I really didn't need a degree to get a job, did I? \n\nAfter a while Brian and I got up and I led the way upstairs to show him my room and what I had going for security up to this point. I really wanted to show him my sound system, but unfortunately it was at home, not here. \n\nWe went up the main stairway. During the year I would go the other route, and if for any reason he came to visit me at the house he would also, but nobody was living here yet, and he was curious about the house itself. I didn't even think about the girls who were looking at the house, and we certainly didn't try sneaking up the stairs, but just as we popped onto the second level the door was open into the first room, and the girls were all in there getting ready to swim. Rosemary of course was already in her emerald green bikini, but Debbie had her back turned to us, bent over picking up her bikini bottoms from the floor totally bare assed, with her boobs hanging in front of her. \n\nBitsy faced the door with her bottoms on, but her boobs were on full display, and a very lovely display they were. They were probably a full B cup, I don't know, I'm no expert, but they were a very large handful with a little left over and nice brown nipples and areolas. She looked up at us and smiled, totally unembarrassed, but I made up for it for her!\n\nHelen, fortunately, had already changed, but had her fingers in both sides of her bikini bottoms, straightening them out. She blushed a bit, but didn't seem overly fazed. \n\nI quickly apologized as I turned away, promising this would never happen when they were living here, that I had forgotten they were even in the house.\n\n\"Relax, Justin. I doubt you saw anything you haven't seen before, and you never know, but I might tan topless sometime, and I couldn't expect you not to look then. I'll bet you didn't know Debbie has such a cute ass, though, did you?\" She started laughing as Debbie tried to hush her.\n\nDebbie spoke up. \"It's safe. You can turn around now. I know you didn't try to catch us, and it will probably happen again sometime. It can't help it around a house with this many girls. Besides, it looks like you liked what you saw!\" She laughed as I turned red again. \"Helen, this is going to be delicious this year. All of us girls in the house, and he's the only guy. He's taken, but I'll bet we have a lot of fun with him anyway.\"\n\nHelen was not as irrepressible as the other two, but she gave me a nice smile, and I noticed she filled out her bikini exactly the way a bikini was supposed to be filled out.\n\n\"You are Brian, or something like that, aren't you?\" asked Bitsy. You were in my accounting class last year.\"\n\nHe nodded. \"Brian. That's where I saw you before. You looked a little different then!\"\n\n\"I hope so! What brings you around here? You aren't trying to get a room are you? That could be fun.\"\n\nHe shook his head. \"No, I'm graduating. Justin and I are just talking about opening an electronics store with a friend of ours. I'm just visiting, and I doubt I'm around much.\"\n\n\"To bad.\"\n\nI noticed that even though Brian was talking to Bitsy his eyes kept straying over to Rosemary. I really didn't think that was the time to introduce them, so we made our way on up to my room.\n\n\"Wow! You've got quite the place here! I love the bookshelves. You can never have enough bookshelves to suit me.\" I don't know if he noticed the odd configuration of the shelves or not. He didn't say anything about them. \"What are you going to do with all of this room? You could house six people in here if you wanted to.\"\n\n\"But then I wouldn't have a place to sleep. I intend to build in a work bench on that side, and use this side for my bed and most of my library. I still want to be able to tinker around with things, maybe do little odd bits of warrantee work if I have the time for it. You ought to see my room at home! All I have room for is a twin bed because the rest of the room is taken up with a couple of work benches, my computer and my library. I have room to spread out here.\"\n\nWe took a look at the monitor showing the views from all of the cameras and he laughed when he saw the pool picture come up. \"You probably won't even see the other views with this one on here!\" I just shook my head. \n\n\"What are you going to do with that old carriage house out there?\" he asked as he glanced out the window.\n\n\"It has some servants quarters upstairs that we may renovate and make into an apartment for a friend who is considering marrying one of Rosemary's friends. Keep it quiet, though. She doesn't know yet. She thinks she's going to room with Rosemary and another girl downstairs. The other apartments we may renovate and use them for when parents visit campus.\" \n\n\"Good idea. Wow, you really have a nice view of the skyline around here.\" He stepped into the turret and looked down out the windows. \"Is this where you are going to set up your desk? Talk about having 'eye candy!' I may have been wrong. This might not be such a bad deal for you after all. For one thing, you will have a different class of girls than my mother deals with, and if they all look like the ones here today. . . . \"\n\n\"Well, I'm pretty serious about one girl already, so I'm not that interested, although I admit I don't mind looking at a pretty girl now and then.\"\n\nRosemary walked out the back door with Bitsy, Debbie, and Helen. I heard Brian draw in his breath. \"Justin, you've just got to introduce me to your sister. I'll treat her right, I swear! She is absolutely the most beautiful girl I've ever seen! I'm not in her league, but at least I can dream, can't I?\"\n\n\"Come on, then. No time like the present.\" Like I said before, I've often been asked to introduce guys but I blew them off. Brian I was comfortable with. It was as close to introducing myself to her as I could come. Something about him really resonated with me. Rosemary needed a chance to make a life for herself and be able to marry and have a family. As much as we love each other, there just was no possibility for a sustained healthy relationship that would leave her fulfilled. ",
        "We made our way down the back stairs this time so Brian would know where to go if he ever needed to come over to meet with me. I couldn't see that happening, but one never knows. I led him out the back door, where I got a big smile from Stephanie and a little wave. \"Rosemary? Could I speak with you for a moment?\" Brian tried very hard not to stare as she made her way around the pool and over to us. \n\n\"I want you to meet Brian Stevens. He's the one Jim sent over to talk with me.\"\n\n\"Hi, Brian. I'm Rosemary, and it's a pleasure to meet you.\"\n\nBrian bowed his head and took her pro-offered hand, but instead of shaking it lifted it to his lips and kissed the back of it gently. I know, it sounds hokey, but when it actually happened it was really sweet, and made Rosemary's eyes go wide for a moment and a big smile crossed her face.\n\n\"Brian told me he just had to meet you; that you're 'the most beautiful girl he's ever seen.' His words not mine.\"\n\nBrian gave me a dirty look, but Rosemary just laughed and gave Brian's hand a gentle squeeze. It was then I noticed he had not let go. \"Justin, behave. Don't pay any attention to him, Brian.\"\n\n\"How do you think he and Jim got acquainted, Rosemary? I'll give you one guess.\"\n\nRosemary took one look at Brian's sheepish face and said, \"Don't tell me you took a TV apart!\" Brian's blush told all. \"That's a hoot! You two ought to get along like peas in a pod then. You are hiring him, aren't you, Justin?\"\n\n\"Absolutely! Just as soon as we can get things going. I'll call Jim tonight. Now, if you two will excuse me, I have to give Dad a call and let him know when Michael will get in.\" I noticed as I turned away that Brian still had her hand held gently in his own. \n\nMy cell went off before I made it back to the library to call Dad. \"Hey, Michael. What's the word?\"\n\n\"Sorry to bother you, Justin, but I have a big favor to ask.\"\n\n\"If I can, you have it.\"\n\n\"Thanks. Tomorrow night when we all get together, I have a feeling I'm going to need some counsel. I don't know what's going on, but from the sound of things it isn't just the railroad stuff. May I invite Dad to sit in on the meeting with me? Mom, too, if you don't mind. If it isn't OK, say so, but I feel like I'm getting in over my head and I always value my Dad's, and Mom's, opinions.\"\n\n\"I don't think it would be a problem. I'll have to run it past Dad or Grandpa, but I'm sure they will say yes. I'm calling Dad in just a minute. I'll call you right back, OK?\"\n\n\"Thanks.\"\n\nDad wasn't excited about the time of the meeting, but I think he was really relieved to hear Michael wanted his parents involved. \"Son,\" he said, \"Never feel shame to admit you need advice, or hesitate to ask for it. Always be careful of the source of your advice, but never hesitate to ask. This says a lot about Michael and demonstrates why he has gotten as far as he has in life. Oh, and before we have this meeting go to a store someplace and buy some of those PVC lawn chairs or something to sit on. I don't want to sit on another paint bucket!\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nOver dinner, Joanne Thibodeaux asked Jeff, \"What is this with a meeting between Michael and Justin's family. Michael didn't do something wrong, did he? I mean, they've been doing stuff on that old house that Michael has been rather reluctant to discuss. Surely there wasn't a problem with the railroad?\"\n\n\"Now dear, you know better than to try to second-guess Michael. No, I don't believe he is in any trouble. He would have said so if he was. Obviously, it wasn't something he wanted to discuss over the phone. He told me he didn't know what it was all about, either, but he said he wanted my advice, and he would welcome your thoughts as well, plus he thought it would be good for us to spend a little time with Justin's family. I really don't know why, but I'm sure if you can hold your horses for another day you will find out. I told him we would pick him up at the airport.\"\n\n\"I know. It just isn't like him to be secretive. First we have to find out about the railroad gold from the news media, and now this.\" She shook her head. \"It doesn't sound like the meeting in Illinois went very well, either. He had to fly back to Omaha with them.\"\n\n\"Actually, Pete Fleming is very happy with him. Michael told me they caught the IT chief red-handed trying to extort the company, besides other things. So even though they didn't accomplish what Pete wanted out of the trip they ended up doing better. He's going to have a busy day tomorrow.\"\n\n\"Friday, too! Susie isn't involved in this meeting tomorrow night, is she? It isn't about her, is it?\"\n\n\"No, dear. Quit worrying. Susie isn't involved at all. It is something business, but we'll have to wait and see. Uselessly speculating won't accomplish anything.\"\n\n\"Yes, dear!\" Joanne didn't like being told to quit worrying.\n\n~~~~~~~~~~~~~~~~~~~\n\n\"Hi, Jim. Justin. I just hired Brian. . . . Yeah, he seems an OK guy, and I couldn't believe it when he told me how he met you. . . . Yeah, that's what he said. He was really afraid he was going to end up just being a tech and a clerk, but I was able to reassure him I don't have time to interfere. All he has to do is keep you happy. . . . Yeah. We talked about how he wants to run the store. I like his ideas, and he is like you, he thinks the key is in service more than just being low priced. He doesn't want to gouge on pricing, though.\" \n\n\"Look, I think we have a winner here, and he is like me in thinking there is a market for more than one store in the metro area. . . . No, I don't want to get too big too fast either, but I think it would be a good idea to watch for good people to grow with. . . . Yes, I think Harry would be an excellent choice if he wants to move up here. He would be a great one to head up sales, of course, I would have to tell him to be more respectful when I come in the store!\" We both laughed. \n\n\"I'll drop in first of the week sometime and we can kick it around a bit and make some plans. I don't have time to do any real looking for properties right now, but I'll talk with Mom tonight and have her shake the bushes. She'll come up with something for us right away. Maybe she can talk with Donna, the gal that sold us the house, and see if the bank has any really good deals in good locations. I think location is the key thing for the first store at least. . . . Right, I'll have her give you a call tomorrow morning.\"\n\n\"Oh, one last thing and I'll let you go. Brian is already trying to steal my sister!\" . . . \"Yeah, I know. He has very good taste. See ya.\"\n\nI glanced out my window when I closed out the call, and Brian was right. I do have a very nice view! And Brian was still talking with Rosemary, and still holding her hand.\n\n~~~~~~~~~~~~~~~~~~~~~ \n\nTom and Mary sat and talked long after they were through eating, everything around them blotted out by their conversation. It wasn't until a gentleman stood by their table and cleared his throat that they even looked around. \"I'm sorry to disturb your conversation, and I sincerely hope you enjoyed your dinner, but it is almost ten o'clock, and we are closing.\"\n\n\"Oh! I am so sorry!\" Mary was embarrassed, but the manager waved it off. \n\n\"No need to apologize! We are honored to have you with us, and I hope you will return soon! Come early and stay longer.\" He bowed slightly, and there was a twinkle in his eye.\n\nTom smiled down at Mary as he helped her to her feet. \"I thank you, sir for your hospitality. The food was superb, especially the 'Special Soup.' I've never had anything like it. I really did pay attention to what I was eating, before Mary here captivated my attention.\"\n\nA small bow again, and, \"Thank you sir. It is a recipe developed by my father, and it is very popular here.\"\n\n\"I can understand why. Tonight is my first time in your establishment, but I can assure you it will not be my last. Forgive us for taking up your evening.\" Tom led Mary out into the lobby where he stopped to pay for their meal and added a generous tip. \"That is for booth rent. I know I kept the young lady from serving other customers, which was thoughtless of me. Perhaps this will make up for it a little bit.\"\n\n\"Ah, thank you, Sir. Very few people consider the server when they linger over their meals. Not that we object! We wish you to feel comfortable and not rushed. I will tell Mae Ling of your generosity.\"\n\nMary's skirt slid up her thigh a bit as she settled into the car, showing a bit of lace from her slip along with more of her leg than normal, and Tom felt a tightening in his crotch. Carefully he closed the door for her as she tugged the skirt back down a bit, but he noticed she didn't pull it all the way down.\n\nHe walked around the back of the car rather than the front so he could readjust himself just a bit without being in Mary's view, and then got back into the car. When he stopped in Mary's driveway Tom squeezed her hand gently and said, \"Thank you so much for a wonderful evening. I really enjoyed myself!\"\n\n\"Thank you, Tom. Would you like to come in for a glass of wine, or another beer? You won't have to worry about driving home tonight.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nI walked outside and called out to the girls, \"I have to run to the store and pick up some stuff. I'm going to grab some pizzas while I'm out. How many of you would like to stay? Brian, you are welcome, too.\"\n\nHe gave me a slight nod, a bedazzled look on his face, and the other's all agreed to stay, too. Steph, can I borrow your car? I don't have any wheels.\"\n\n\"Sure. What do you have to pick up?\"\n\n\"I'm going to get some of those plastic lawn chairs so we don't have to sit on paint buckets.\"\n\nBrian reached in his pocket and pulled out some keys. \"Take my pickup. You won't be able to get those chairs in her car.\"\n\n\"Thanks. I appreciate it.\"\n\n\"I'll go with you if you want,\" Steph said. \"Give me just a minute to throw something on.\"\n\nBitsy just laughed and said, \"Go as you are, girl. Give the people in WalMart a thrill!\" That got everyone laughing, and I thought for a minute she was going to do it, but she ran in the house and grabbed a long tee shirt.\n\nI had Steph call and order the pizzas while I drove us to the store. Knowing what we needed, we parked by the Garden Center entrance and ran in quickly and grabbed a dozen of the chairs. That was more than needed, but I was sure they would come in handy during the school year somewhere or another. Michael called me while we were driving from the store over to the pizza place, and between talking with him and looking over at Steph, who had the tee shirt pulled up, showing off her bikini bottoms I had trouble focusing on my driving. Stephanie lightly running her nails up and down the inside of her thigh did nothing for my concentration at all!\n\n\"Hey, Justin. I went ahead and asked Mom and Dad to sit in on the meeting with me. I hope that's OK. I know you said you'd run it past your Dad, but I didn't think he would mind.\"\n\n\"No, that's cool. In fact Dad was pleased you would include them in on the discussion. Sorry, but I didn't get back to you yet.\"\n\n\"So what's going on, anyway? Not a problem, I hope. There isn't trouble with the railroad stuff, is there? I can straighten that out with Pete if there is.\"\n\n\"Oh no. It's nothing like that, in fact, it isn't anything bad at all. Look, I really can't talk about it right now. Don't worry, Grandpa will fill you in on everything tomorrow evening.\" Stephie looked at me questioningly, but I couldn't say anything more. She would learn soon enough.\n\n\"OK, I'll wait. Dad said they will pick me up at the airport, so you won't have to go out there. I'm going to stay over for the night, and then I'll steal a car from them for the day Friday. See you then. I've got to go grab something to eat with Pete, and I think he's going to grab a couple of IT guys so we can get a head start on tomorrow. You wouldn't believe that guy in Chicago! Later.\"\n\nI put my phone away, and saw Stephanie looking at me, just bursting to know what was going on. \"I can't say anything right now, Sweetheart. You'll know all about it soon, but right now I can't say anything. Grandpa said to keep it quiet until the family has a chance to discuss matters. All I can say is it has to do with what Michael and I found, and that nothing is wrong. Trust me?\"\n\n\"I'll always trust you, Justin. I'm just curious.\"\n\n\"I promise you I'll tell you everything just as soon as Grandpa says things are taken care of so that I can. Remember how the newsies were hounding us the other day? Well, this will start it all over again, but we want to control things as best we can. K?\"\n\n\"I guess, but you be sure to tell me first, please?\"\n\n\"You will always be first. Always.\" She leaned her head across the console and leaned it on my shoulder just before we stopped at the pizza place.\n\nBefore going into the store with me she pulled the tee shirt up and tied it off just below her boobs, leaving just a couple of inches of skin showing on her belly, and of course her bikini bottoms. With a wink at me she hopped out the door of the truck and started for the door, with me right behind her. Needless to say, we had guys falling all over themselves to wait on us when we walked in the door.\n\n\"Justin,\" I said, and one of the guys pulled several pizzas from the warming rack and slid them across the counter. I also got several two liters of Coke and other soft drinks and we were out the door, but not before one of the employees ran out from behind the counter to open the door. It's funny, but I've never had anyone bother to open the door for me before, or carry a bag of two liters bottles for me either like he did for Stephanie.\n\n\"Works every time!\" Stephanie smirked at me as she closed her door. \"You guys are just so predictable.\" All I could do is shake my head in agreement. I'd have done the same if I worked there. The only thing that surprised me was there wasn't a fight over who carried the bottles and opened the door for her!\n\nBrian came around to the drive, with Rosemary close behind, to help me carry the chairs into the house. Rosemary and Steph carried in the pizzas and sodas, and the other girls all followed us in. Even though there was plenty of room in the kitchen and around the counter Bitsy, Debbie, and even Helen managed to rub their boobs across the top of my arms at least once as they grabbed pizza, or when I handed them sodas. Rosemary smirked at me once when Debbie took the opportunity to rub her boobs across my back while slipping between me and someone behind me, but Stephanie didn't think it was quite as funny. \n\nSteph stripped the tee shirt off quickly and found an excuse to take my arm and hold it against her boob as she was saying something to me, and I must say the sight of six girls sitting around eating pizza while sprawled out in those plastic lawn chairs was the nicest view I've ever had while eating pizza. I was struggling to keep from getting a boner, but not very successfully. I didn't get fully hard, but my shorts were sporting a bit of a bulge.\n\nSuddenly I realized the time. \"Brian, didn't you have something going tonight? I hope you didn't forget.\"\n\nHe just gave me a big smile. \"I called and cancelled. It wasn't that important anyway.\"\n\n~~~~~~~~~~~~~~~~~~~\n\n\"Are you serious?\" Tom asked incredulously.\n\nMary nodded, and reached a hand over to rest on his. \"You've come to mean a lot to me, Tom, and I don't want to be alone tonight. If you aren't comfortable with it I understand.\"\n\n\"I don't know anything I've ever wanted more, and have wanted ever since the day I brought your purse to you. I'm afraid I'll mess this up.\"\n\n\"Don't be afraid. Just be yourself, the Tom Meechum I think I'm falling for.\"\n\nTom lifted her hand to his lips and kissed it tenderly before stepping out of the car to walk around and open Mary's door. He held her hand all the way to her door, only letting her hand go so she could find her keys and unlock the door. Once inside he stopped and looked at Brad's picture on the wall and nodded in respect before turning to Mary. \"You know, I've never even kissed you?\"\n\n\"There's no time like the present.\" Several minutes later Mary leaned her head on Tom's shoulder. \"This is what I've missed for so long. Where have you been?\"\n\n\"Looking for you, but I didn't know it. You fit my arms very nicely, but why me? And why now?\"\n\nMary led him over to the couch, where they sat cuddled together. \"It started for me the first day, the love and respect you showed for the one I loved, and the way you have honored him each time you come in the house. He isn't a threat to you, but he is to you as he is to me, one you love and remember. And then that day in the ER when I saw you working on those little children. Your compassion and tenderness showed through even though I know it hurt you deeply.\"\n\n\"That day in the ER is what finished it for me, too. That, and the other night when you held me as I broke down. I've never done that before, and you didn't back away.\" Tom drew back from Mary a little bit so he could look into her eyes. \"Mary, I know it's awfully soon, and we hardly know each other, but I know enough for me. Will you marry me?\"\n\n\"I know enough for me, too, and I would be honored. I love you, Tom. This only happens in the story books and movies, but it's real.\" Mary leaned in to Tom for a kiss and then nestled her head back onto his shoulder and sighed.\n\n\"I can't ask your father or the Staff Sergeant for permission. Should I maybe ask your daughter?\" Tom murmured in her ear.\n\n\"I know what her answer will be, but I think it would be good.\"\n\nTom pulled his new phone from his pocket and stopped. \"You know, I don't even have her number.\" \n\nMary got her phone from her purse and handed it to him. \"She wouldn't know your number either and probably wouldn't answer it this time of night. Use mine.\"\n\nTom's hands were shaking as he tried to push the buttons.\n\n\"Hi, Mom. What's up?\"\n\n\"Stephanie, this is Tom.\"\n\n\"Oh no! What's wrong?\"\n\n\"Nothing's wrong. I just need to ask you something.\"\n\n\"Oh. Good. You scared me for a minute. What's up?\"\n\nHe paused and took a deep breath before saying, \"I just asked your mother to marry me, and I want your permission.\" He had to pull the phone from his ear because of her scream of joy.\n\n\"Oh yes, yes, yes! I'm so happy! I told Mom the day I met you that you would be a good one for her! And, I think you will be a wonderful Daddy!\"\n\n\"Thanks,\" Tom whispered. \n\nIt was a very excited Stephanie that danced all through the house hugging everyone and telling them the good news, holding me tightly, while I held her so she could cry tears of joy into my neck. It was only moments before I had Rosemary on one side of us and Susie on the other joining in on the hug and tears. I'm not saying I cried too, but my cheeks were awfully wet when we broke apart, and I needed a tissue. \n\nTom lifted Mary and set her across his lap and hugged her tightly to himself. Somehow the wine and beer were forgotten.\n\n~~~~~~~~~~~~~~~~~~~~~\n\nDebbie, Bitsy, and Helen left shortly after we finished off the pizzas, but Brian stayed around for a while. We all moved into the library, and were sitting in the lawn chairs in front of the desk. Something about the room just made it the gathering spot. Maybe it was the dark wood of the shelves that just made it more comforting than bare walls in the kitchen. When Stephanie got the call we had been talking about school, and what we could expect in the fall, places to get good deals on books, professors to avoid, and things like that. \n\nStephanie jumped to her feet and started screaming, and kicked her chair across the room as she jumped. She danced around and around laughing, crying, hugging us all, even Brian who was as puzzled as he could be, but she ended up in my arms trying to drown me in her tears, as it were. What a difference from the girl who cried in my arms after Paul attacked her and tried to rape her. What a difference in men!",
        "I was really happy for Mrs. Winters. She deserved a good man. I thought about calling Mom, but on second thought I decided it would be better to let Mary tell her the good news herself, as I was sure she would. I might just drop her a hint tomorrow night to give Mrs. Winters a call if she hadn't heard by then. I didn't want to spoil the news, though.\n\nBrian left us shortly afterwards, promising to keep me in the loop on whatever transpired in the search for a suitable property. He planned to drive down to Tucson to meet with Jim at the end of next week, as soon as he finished with his exams. I didn't find out until later that he also planned to drive down to Tucson Saturday evening to take Rosemary out to dinner. That young man didn't wait for the grass to grow under his feet!\n\nRosemary walked out to his truck with him and came to me as soon as he was gone to nearly smother me with a great big hug and kiss. \"Thank you so much for introducing me to Brian, Justin! He is so much like you I felt like I was talking to you much of the time. If this goes anyplace I'm going to be really conflicted.\" She gave me another kiss and then hugged me tightly with her head on my shoulder. I heard a sigh, but there were no tears thankfully. I was already well watered.\n\n\"I didn't think there was anybody like you out there. I don't know how I deserve it.\"\n\n\"Hey, I told you I would watch out for you, didn't I? And why would you not think you deserve it? Stick with me, Babe. The best is yet to come.\" Another sigh came as she settled into my shoulder and hummed. I couldn't pick up the tune, but it was happy, and that is all I cared about.\n\n\"I don't know about you guys, but I'm rather tired. I think I'm going to hit the rack. Somehow I think tomorrow is going to be a rather tough day all around, and then we have the Prom on Friday.\" I headed on up the stairs, expecting the girls would shut off all of the lights on their way up. I planned on sleeping alone tonight since Susie was here. Of course she knew all about the three of us, but I didn't want to rub it in her face, and Rosemary and I had discussed it earlier. My sleeping bag was the only one up stairs now.\n\nI pulled up YouTube and loaded up Joachim Raff's symphonies in a playlist and started it for some background music as I tried to sleep. I had so much on my mind there was no way I could drift off without something to calm my thinking. Why Raff isn't better appreciated outside his own country I don't understand. Finding recordings of his works is difficult at best, and some of his stuff hasn't been recorded. Of course, I can't evaluate those, but judging from what I've heard I can't imagine them being worthless. Just to take my mind off of my own situation I pondered his for a while.\n\nThankfully, I was able to start to drift off in very short order, but just before I was gone beyond that half-dream, half-wake state I heard a muffled \"Justin. Are you still awake?\" It was Rosemary, and she was carrying her sleeping bag with her. \"May I join you?\"\n\n\"Of course. What about Susie?\"\n\n\"She said for me to come. I think she recognized how badly I wanted to be with you tonight.\"\n\n\"And how is the 'most beautiful girl in the world' tonight?\"\n\n\"Justin!\"\n\nHer reproof was quiet, but intense. I gathered she wasn't in the mood for teasing.\n\n\"Thank you for introducing me to Brian.\"\n\n\"I really didn't have a choice. He saw you when you came to introduce Helen to me, and I thought he had seen a ghost. He was totally pale, and begged me to tell him you aren't my girlfriend. He said I had to introduce you; that you were the most beautiful girl he had ever seen. I didn't make that up.\"\n\n\"That was sweet. You didn't tell him about us, did you?\"\n\n\"Of course! I told him that not only are you the most beautiful girl in the world, but that I'm madly in love with you, although you are my twin, and I sleep with you whenever possible, besides using the desk on occasion.\"\n\n\"You're silly! I can't believe he took a TV apart, too. That was just too much!\"\n\n\"Yeah. He's four years older than us, and Jim let him hang around the shop like he did me, but they moved away about the same time I did took our TV apart, so we didn't cross paths then.\"\n\n\"There is so much about him that is just like you that I'm trying not to fall for him as a brother substitute. I want to be sure it is real before I do anything stupid with him.\"\n\n\"I wouldn't worry if I were you. You have four years of school before you even need to think about settling down, and he's going to be running at least one store right here in the area. I plan to make sure he has a good enough deal he doesn't want to leave, so you will have plenty of access to him.\"\n\n\"Make love to me, Justin. I know you love me, and I need to feel loved tonight.\"\n\n\"Will you be thinking of me, or of him?\"\n\n\"I never even considered it. You, of course. Do you always think of me, or does Steph come into it sometimes?\"\n\n\"Ah, the old turn around the question ploy. Good point. Sometimes I think of Steph, but usually because you bring her up, but I'm also in love with her as well as you. You aren't in love with Brian, at least not yet.\"\n\nShe snuggled up close to me, sensing I wasn't playing jealous. \"If I think of him a little bit, wondering about him, would that be a problem?\"\n\n\"Not to me. I just want to be sure you know where you stand, that you aren't building sky castles just yet. I don't want you hurt if it doesn't work out.\"\n\n\"I will be, of course, but it won't be because I make love to my brother, with whom I'm also in love. Oh dear, that does leave us in a bit of a situation, doesn't it? We can't tell him, but I don't want to give you up either.\"\n\nI hugged her to me closely. \"We'll cross that bridge when we come to it, and we'll cross it together. If it works out with him, or with somebody else we will have to end it with us, but that won't mean we don't still love each other. It will just mean that you have found your mate, just as I have with Stephie, except Steph knows about us and is willing to share. Face it. You won't be happy just settling for what you can have with me. You will want your own home and family, which I can't give you.\"\n\n\"How did you get so smart?\"\n\n\"It's in my genes, I guess.\"\n\n\"In the meantime, please make love to me.\" I didn't have to be asked again.\n\n~~~~~~~~~~~~~~~~~~~~\n\nAs always, I woke early, and as always when Rosemary slept with me I was delighted to find her wonderful red gold hair splayed all over my chest as she cuddled her head on my shoulder. Last night's discussion hit home to me, and I felt a knot in the pit of my stomach. \n\nBrian, or whomever she ended up marrying, would be the one waking to this wonderous sight every morning. Between her lustrous hair and her skin which wouldn't tan much no matter how much she tried, with its light smattering of pale freckles , plus her luscious, soft breasts, which were pressed so delightfully against my side, how could a man not enjoy waking up in the morning? Especially if they were fortunate enough to have a room with turret windows high enough for no one to see in except for the sun, which bathed her in the early morning light.\n\nIt is said in ancient mythology that Paris gave the golden apple to Aphrodite for the hand of Helen of Sparta, the most beautiful woman in the world, but he obviously never saw Rosemary lying with the morning sun for her covering. Last night I had been almost cavalier about giving her up to another man, and I will when the time comes, but it will hurt, and it will leave a tremendous hole in my heart to do so.\n\nAs I watched Rosemary, memorizing every detail for the time I would no longer have her, she stirred and stretched, causing my heart to lurch, and my cock to lurch as well. She opened her eyes and purred as she leaned into me and held me to her. \"Good morning, lover. I want you to know that I thought about Brian a couple of times, but he faded out quickly when I thought about how much I love you. Thank you for loving me.\" She gave me the most gentle kiss, but it was done with such love that it meant more than the most passionate intense kiss she ever gave. Oh how I was going to miss her!\n\nRosemary felt my cock, which I hadn't even noticed had hardened, and smiled happily as she reached down to gently take it in her hand and press it to her pussy. I couldn't believe it! She was quite moist, and was able to slip the head inside easily, and it didn't take much to get it the rest of the way in. \"Last night when we were making love, like I said, I thought of Brian a couple of times, but it was all you, but I just woke up with the most wonderful dream. You and Brian were taking turns loving me, and you were sharing. It was wonderful. I know it was a dream and doesn't mean anything. It came because we were talking about things, but it was nice. Then when I woke up to see you looking at me like that I just got wet all of a sudden. I really don't feel all that horny. I just want you deep inside of me, and I want to feel you squirt your seed deeply into me, and I want to dream it is making your baby. That is just a dream, too, but I wish it could be true.\"\n\nShe moved herself against me, matching my motions to the tee, and then offered up a nipple for me to suckle on. \"Oh, yes, Justin. That feels so nice. Just keep doing that. I want to feel you come in me again before I have to get up, and before I have to let you have Stephanie's nipples to suck on like this.\" It really wasn't fair. I had not thought of Stephanie at all, but only of my Rosemary, until she brought Stephanie's nipples into my mind, and it wasn't but a minute or two before I was coming, and as deeply inside her as she wanted.\"\n\nNot until my heart slowed, along with my labored breathing, did Rosemary giggle and hug me to her with her head on my chest. \"That wasn't fair, was it, to bring Stephie's nipples into it? I know you had your mind on me until I mentioned them, and I love it, but I really wanted you to come. I didn't want to wait for you to try to get me off this morning. I just wanted you, and I got what I wanted.\" She kissed my chest, which had finally settled down to at least near normal before looking up into my eyes. \"Thank you for loving me, Justin, and I know you really do. I'm the luckiest girl in all of the world.\"\n\nThere was so much I wanted to accomplish today before everybody got here in the evening, but there was no way I was going to get up and leave this behind for a while. Again, I was storing up memories.\n\n~~~~~~~~~~~~~~~~~~~~\n\nDad called Grandpa early in the morning. \"Justin said Michael would like to invite his parents to sit in on the meeting with us this evening. What do you think about inviting them to dinner before they pick up Michael?\"\n\n\"I knew that young man had good sense! He knows he's going to need help, and he has the sense to involve his parents. I don't know about bringing them in on things beforehand, though. If we do he may get the idea we are going behind his back and don't trust him.\"\n\n\"Hmm. I never thought of it that way. Still, he has some knowledge of what is going on. Should they walk into it totally cold?\"\n\n\"I really think it would be better for me to give a bit of a preview, as it were, before we get into details. Unless we get into specifics with them I think we will just stir up more curiosity and questions.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n\"You seem lost in thought. What are you thinking?\"\n\nI hadn't realized I was so transparent. \"I'm just storing up memories. If you start seeing Brian I won't be able to do this anymore, and I'll miss it.\" The sun had risen enough that it didn't have quite as red a hue as earlier, although it was still lovely on her skin and hair. \n\n\"Then I won't start seeing Brian, or anybody else for that matter.\"\n\n\"Yes you will. I love you, and I love being with you, but you need more. I can't give you children, can't marry you and make you mine. You will tire of sharing me before long. It doesn't mean I'll stop loving you. That will never happen.\"\n\n\"But I don't want to lose you.\"\n\n\"You won't lose me. It will just be different. Brian knows we are twins, and twins are different than others. He will expect us to be close, just not this close.\"\n\nRosemary nestled herself closely against me and sighed. I relished the feeling of her skin against mine until I noticed moisture seeping down my chest. Instinctively my arms tightened about her. \"That feels so nice. I love it when you hold me. I've been storing up memories, too, although I haven't been honest with myself what I'm doing. I wish Susie wasn't here! Today would be a nude day for sure!\"\n\n\"I'm sure Stephanie would join you, and I won't mind.\"\n\n\"I'm sure you wouldn't, but I like to look at you. I know Stephanie wouldn't mind. Would you believe she asked me about a nudist resort?\"\n\n\"Stephanie?\"\n\n\"Umm hmm. I think we've corrupted her. She told me she doesn't really want to see others. She just likes the feeling of being nude and free.\"\n\n\"Uh oh. I don't think I'm interested in doing anything like that! I hope she doesn't try starting something like that in the house next year!\"\n\nRosemary giggled. \"I don't think Bitsy or Helen would be all that hard to convince if you were involved. I noticed they were checking out your bulge after you caught Bitsy and Debbie changing, and Bitsy wasn't in any hurry to hide from you either.\"\n\nJust then a naked Stephanie walked into the room. \"What was Bitsy trying to hide?\"\n\n\"You mean your boyfriend didn't tell you about sneaking a peak at the girls changing yesterday? I said Bitsy wasn't in any hurry to hide from him. Justin did turn his head quickly, though. He was a gentleman. Bitsy told him she might tan topless sometimes, and she won't expect him to turn away, and Debbie told Helen it might be a 'delicious' year.\"\n\nStephanie just smirked at Rosemary. \"I hope that made it a fun night for you, at least. Remember, Justin. You have to save it for us. Ohhh. I'm getting wet just thinking about it!\" Rosemary gave me a crooked grin and winked at me.\n\n\"Really, I was kind of hoping to catch you two this morning.\" She blushed and looked down. \"That wasn't the way I meant it. I'm not into being a voyeur, but you two are so beautiful together. Your love for each other is so special.\"\n\n\"Thanks, Steph. You should have been here earlier then, but it was you that finished him off.\"\n\n\"Me?\"\n\n\"Um hm. I told him not to wait for me, I just wanted to feel him, but he acted like he wanted me to come too, so I just mentioned your nipples, and that was all it took.\"\n\nSteph's eyes got big. \"My nipples did it? Really?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nTom woke up totally disoriented and confused. He wasn't in his bed, and someone was in the bed with him. It took him only moments to realize it was Mary, and he felt his heart lurch within his chest as he looked over at her nude form and the look of peace on her face as she snuggled tightly against his side. How this could possibly have happened to him he could not imagine, and he felt his new found love pouring all throughout his person. Although he knew it was totally unprofessional of him to do so he picked up his cellphone from the bedside table and dialed the hospital. \n\nHe was due quite a bit of time off, and a couple of residents were scheduled a rotation in the ER, with their attending physicians, so the ER was more than amply covered. It would have been a boring day anyway. \"Dr. Meechum here,\" he said quietly, trying not to waken Mary. \"I'm sorry, but I will not be able to make it in to work today. Dr's Smith and Warren are serving their rotations in ER with their attendings, so you won't need to call in a sub. . . . Thank you. Oh, just put me down for a personal day. . . . Thanks again.\"\n\nMary's eyes flew open as he finished the call, and she too was at first disoriented to have a man in her bed before she remembered. \"Good morning, Tom. Last night was wonderful. Thank you.\" She was amazed at herself that she was not the least self-conscious at being nude in bed with him. For the first time in the almost eleven years since Brad deployed the last time she felt complete and satisfied, and tears filled her eyes as she recognized this was what she had looked for, but lacked, from Paul. \n\n\"I just called in and told them I would not be able to make it in today. Why don't you do the same?\"\n\n\"I couldn't do that.\"\n\n\"Sure you can. You've been pulling a lot of doubles lately, and I know for a fact your floor is rather light on patients today. You are due the time off, and I would love to spend it with you.\"\n\nMary glanced down and saw the tent in the sheets as she felt Tom's eyes on her breasts, and she giggled. \"What ever would we find to do? You are corrupting me, Dr. Meechum.\" She reached under the sheets to find his hard cock and squeezed it gently as she reached for her cellphone with the other hand. Her thumb hit the speed dial setting and she looked into his eyes with a guilty smile on her face. \"Hi, Mary here. I'm sorry, but I can't make it in today. Do you have enough to cover for me? . . . Excellent. I should be able to be in tomorrow. Thanks.\"\n\n\"You are so bad, Tom, and I love you!\" Flipping the sheets back she crawled atop him, and found she was wet and ready for penetration. She didn't need foreplay, but just wanted the fullness of having him inside her again. It was a long pent up moan that she released as she sank down onto his shaft and she felt his fingers plucking at her nipples. \n\n~~~~~~~~~~~~~~~~~~~~\n\nStephanie crawled onto my sleeping bag so that I had Rosemary on one side and her on the other. I put both arms out and pulled them to me, holding them closely. I gently kissed Steph on the nose, and then turned and did the same for Rosemary. \"You know, I really love you two. I don't know why I'm so lucky, but I couldn't be happier.\" Little Justin started to stir a bit from the sensation of their boobs pressing against me, and Stephanie giggled as she reached down and felt him.\n\n\"It's too bad Susie is here today. I really feel like a nude day. Rosemary has totally corrupted me.\"\n\n\"You can go nude if you like. I won't mind!\"\n\n\"I'll bet you wouldn't!\"\n\n\"Susie won't care if you are naked, and I'll wear my shorts.\"\n\n\"It's not the same, but I guess it's better than nothing. You gonna join me, Rosie?\"\n\n\"It does sound interesting, but what about Susie? I don't want to hurt her feelings.\"\n\n\"From the way she was talking last night she would only be wishing Michael was here and they could join us. That poor girl has it bad! She kept asking questions about what sex is like with Justin, and how it feels. She tried to keep quiet and not let me know she was doing it, but she got herself off in her sleeping bag a couple of times while we talked.\"\n\nLittle Justin perked up a bit more when Stephie told about Susie and her questions.\n\n\"I don't know if we should do it, then. I really don't want to hurt her.\"\n\n\"What if you and I go down to fix some breakfast without Justin? If it seems to bother her we can put our clothes on, but if she's OK with it we don't have to?\"\n\nRosemary leaned over me and gave me a big kiss. \"What do you think, Justin? Would you like it if we were running around painting in the nude? I mean, what if we were bending over painting around the baseboard or something? Would that bother you to see us bending over like that?\"\n\nLittle Justin popped up to full attention quickly, which got a good giggle out of Steph. \n\n\"Don't let it go to waste, there Stephie. Climb on for a quickie before we go down.\" \n\nI'll never understand Rosemary. It was Rosemary's turn with me, and she was sharing me again.\n\nSteph didn't waste any time, either. She jumped up on me in a flash and settled herself down on my cock. It took a couple of tries before she got it all the way in, but then she really went to town bouncing up and down on me, grinding against me hard each time she hit bottom. I reached up and plucked at her nipples the way she likes, and it was only a few minutes before she came with a quiet moan and then sank down to lie on my chest. She reached an arm out and pulled Rosemary into us and kissed her on the cheek. ",
        "\"Thank you, Rosie. How did you know I needed that?\"\n\nRosemary just giggled back, \"Because I know how I feel when I've been away from him, and I didn't even have Susie asking me about it, poor girl!\"\n\nStephanie slipped off of me, and my cock, which was still hard since I didn't come popped out. Rosemary saw it and grinned. \"I guess I must have drained you pretty well, didn't I? Do you have anything left in there?\" She crawled on top and quickly slipped my cock into her very wet pussy and started riding me again. \n\nI knew I wouldn't last very long, and she was pretty excited from our earlier coupling and then watching Stephie. It didn't take long before she started coming. Quickly she gasped, \"Come with me, Justin. Look at Stephie's nipples, and come with me.\"\n\nI looked over at Stephanie, and as Rosemary bottomed out on me and quivered through her orgasm mine quickly coursed up through my cock and into her pussy. It wasn't a big one, as orgasms go, but it was very pleasant. I had just made love to both of my women, with their eager compliance. Rosemary pulled Stephanie to us, and again I had two women pressed up against me, sharing my love. I gently kissed Stephanie, and then Rosemary, and my eyes fluttered closed.\n\n~~~~~~~~~~~~~~~~~~~~\n\nMichael woke early and took advantage of the hotel's breakfast buffet before going back to his room to gather his belongings. He checked out and was waiting outside the front doors for his ride fifteen minutes before Pete was due. He didn't want to make Pete wait, and he was anxious to get the day going to be certain he would be done in time to make the flight home. Several times during the night he woke up thinking about Justin's calls and texts. Curiosity was building, now that the experiences of the day in Illinois were over. \n\nRealizing he was wool-gathering, Michael pulled his thoughts back to his task at hand. He really had no idea of the kind of reception he was facing once he got to UP headquarters. He had to meet with the number two person in IT and develop enough of a working relationship to ascertain if he could actually be of service to the railroad or not. \n\nHe was seated on a small bench outside the doors enjoying the morning breeze. He glanced up to see a car pull under the porte-cochere, but it was not Pete's, and he looked down again, perusing the screen on his iPhone. In the back of his mind he heard his name called and glanced up, to see Ben Jorgenson standing by the car. \n\n\"I'm so sorry, Ben! I didn't see Pete's car, so I didn't pay attention to you. My apologies!\"\n\nBen just laughed. \"None are needed. When you concentrate you really concentrate, don't you. I called you three times.\"\n\nMichael turned red with embarrassment. \"I guess I do. Mom is always getting after me for it.\"\n\n\"I told Pete I would pick you up this morning. I need to pick your brain a bit before we get to the office. Pete and I discussed matters at length last night, trying to determine our best way forward at this point, and we would like your assistance.\"\n\n\"I'll do anything within my power for you. That's why I'm here.\"\n\n\"I thank you for that. Actually, you are here to take a look at our programming and to make recommendations on it. To this point you haven't even had opportunity to look at it, but today I would also like your evaluation of two people from your side of things, if you will. We have two people that Pete and I are discussing for promotion to head IT, but I'm not really qualified to evaluate them as well as I would like. If you could keep them in mind as you also look at our IT needs it would be helpful.\"\n\n\"I'm not certain I'm qualified to make that sort of evaluation, but I'll be happy to give you my thoughts. You will have to make the decision, though.\"\n\n\"Absolutely. We have two people, as I said. Phil Timmons has been with us longer, and has served us well in IT, but never in an upper management position. He has over twenty years of experience in the department. He's a Nebraska grad.\n\nConnie Lord started with us at about the same time, but she had to leave us for two years during the illness and death of her child from cancer about ten years ago. You will probably relate well with her as she is from a rather conservative religious background, although different than yours. \n\nShe is a graduate of Bob Jones University, and like you she lives her religion, although she does not wear it on her sleeve, but we aren't evaluating religious beliefs. I really shouldn't have said that, and please don't take it as a pejorative. I actually find her beliefs drive her work ethic. We have several BJU grads, and find their work ethic to be top-knotch, and it is Connie's work ethic that has put her into contention for the job.\n\nPhil obviously has seniority, but I'm not much of one for putting a lot of stock in seniority for seniority's sake. A person can have twenty years of experience, or he can have one year's experience twenty times. Both Phil and Connie are top drawer people or we wouldn't consider them, and they are close enough I would like someone from your background to help evaluate them.\"\n\n\"I'll do what I can for you.\"\n\n\"Good. Thanks.\" They continued the drive for a short ways before driving up to the new UP headquarters building and parking in Ben's reserved spot. Ben ushered Michael up to his office on the top floor. Pete was already there, sitting in a wing chair across a coffee table from a man and a woman Michael assumed were Pete and Connie.\n\n\"Morning, 'Mike'.\" Pete gave Michael a crooked grin as he stood to shake hands. \"Phil, Connie, please let me introduce you to Michael Borden. He does not like to be called 'Mike'. That was a private joke between the two of us.\"\n\nBen took over the meeting quickly. \"Michael, please have a seat. Help yourself to juice or water if you like. Those are fresh pastries, too.\" Turning to Phil and Connie, he said, \"Thank you both for coming in early this morning. I don't know how much Pete told you about what happened yesterday, but after an incredibly rude response to Michael by David Abernathy, Pete and I both knew something had to be done. I pulled Pete off of vacation and flew him to Tucson to pick up Michael and they flew to one of the Chicago area offices to meet with Abernathy, only to find out Abernathy was changing our orders for new locomotives and pocketing a significant amount of cash. He has been arrested, and further arrests will be made at Electromotive and some of their suppliers. I'm not implicating Electromotive! This was done without corporate knowledge.\"\n\n\"You two obviously are in the running to replace Abernathy, but that is not the purpose of this meeting. I would like to discuss IT operations with each of you at a later date, and discuss what needs to be done with your department. It may be Abernathy will not be replaced, but his duties will be split between the two of you. Phil, you have seniority due to Connie taking leave a few years ago, but at this level I don't look at seniority as the final determinate. Both of you have done a tremendous job for the railroad, and I want this transaction to be as smooth and as amicable as possible.\"\n\n\"Back to the purpose of today's meeting. Michael is one of two young men responsible for the discovery of all of the gold you heard about in the news a few days ago. That is not why he is here, and please don't let his age fool you. Michael is a very astute young man who wrote a program for his father while in high school that Pete and I, as well as millions of other investors, use to help track and plan our investing. Pete and I both thought it might be possible he could do something similar to help us with our scheduling difficulties. He has been asked as a consultant to take a look at what we have, and to make recommendations, and/or develop a new program that will make us more efficient and better able to serve our customers.\"\n\n\"Please don't look at him as a threat, but as an assist to your operations that can possibly make your lives easier. Michael is to be given full access to anything he asks for and I expect full cooperation from everyone in the IT department.\"\n\n\"Just to be clear, Michael is not a 'snot nosed kid with no real world experience in transportation', neither is he \"the world's greatest programmer who is going to get rid of your jobs and make your department obsolete' as your former boss said to him. He is here at Pete's request, with my full concurrence, to see if there is something else we can be doing. He is looking at our programming from an outside perspective. Sometimes I think we are so ingrained in our own little worlds we can't step back and take a look at things from the outside. Our customers see us and our foibles from the outside everyday, and frankly, we frequently let them down. I want to change as much of this as we possibly can.\"\n\n\"Michael is not looking for a job, let alone yours. He really doesn't need one. He is here at our request, albeit somewhat reluctantly as he has other things ongoing. He is here to assist you, and not as a threat.\"\n\nPhil nodded his head and scooted forward in his chair before speaking. \"Just two questions, if I may. Michael, you look rather young. Just how old are you?\"\n\n\"I'm nineteen, sir. I'll be twenty this summer.\"\n\n\"I see. I'd like to talk with you about your program and how you did it if I may. I think I might learn quite a bit from you. Just how old were you when you wrote it?\"\n\n\"About sixteen. My Dad was having trouble understanding a program his broker gave him to use. He was so frustrated he about quit trying to track his stocks and just put his investments in CD's. I just played around with what Dad needed and came up with a little thing for him to track his stuff. He showed it to his broker, and the rest is history. I've had to improve it a good bit before it could go commercial, of course.\"\n\n\"I see. My second question. I thought the guy who found the gold was named Thibodeaux. How do you fit in there?\"\n\n\"My name is Thibodeaux. Dad is Jeff Thibodeaux. My mother's maiden name, and my middle name is Borden. I got tired of all of the hoopla that went around about Dad and started going by Michael Borden. Mom and Dad are fully in favor of me doing so, and understand. I'd really appreciate if you kept this between us. I've had more than enough of the limelight to suit me.\"\n\n\"I'd change my name, too, but then I'm a 49's fan.\" \n\nPete stood, bringing the meeting to a close. \"Shall we get this show on the road? Time is of the essence as I have to be sure Michael is on a plane to Phoenix about four-thirty. Do what you can today, send home whatever you need to with Michael. He has signed all of the necessary documentation. Most importantly, introduce him to your staffs and make sure they know it is in their best interest to work with him fully. That's all. Thanks, 'Mike'.\" He laughed as Michael made a face at him and slapped Michael on the back as he turned toward the door.\n\n~~~~~~~~~~~~~~~~~~~~ \n\nWith three girls cutting in the walls I was able to focus on rolling. Susie didn't care if the girls painted in the nude. \"I just wish I could join you! It looks like it's fun, and if Michael was here I might try to talk him into it. Of course, I know how that would go. Justin, I'm sorry I spoil it for you. Of course, I wouldn't care if you stripped too.\" She gave me a wink. \"Michael wouldn't understand, though, and I appreciate you understanding.\"\n\nStephanie painted around the baseboard, while Susie did the vertical corners and around windows and doors. Rosemary cut across the ceiling. Don't think watching her climb up and down stepladders wearing only a ragged old pair of sneakers wasn't distracting! Stephanie made it a point to bend over straight legged frequently whenever she had her ass pointed toward me. A couple of times either she or Rosemary would get a little paint on one of their nipples and come to me to get it cleaned off, much to Susie's delight. \n\nOf course, I was hard a good bit of the morning, and I saw Susie sneak a peek a few times, but I was really surprised at the way she didn't make a big deal about it, or ogle me, as she would have before Michael. \n\nJust before we quit for lunch Rosemary's phone rang. \"Hello. . . . Oh, hi, Helen. . . . I don't think that will be a problem. I'm glad you like it. . . . Hang on for just a minute. Let me get Justin on here with me and you can run it past him, too.\"\n\n\"Justin, this is Helen, with a couple of questions. A faxed signature from her parents is sufficient isn't it?\" I nodded. \"OK, she has a couple of other questions, too. Let's go to the library so I can put her on speaker and talk together.\"\n\n\"Helen, hang on a couple of minutes. Justin and I are going down to the library and put you on speaker.\"\n\nJust as soon as we were out of the room Rosemary rubbed my hard cock and giggled while we hurried down the stairs. We ended up stopping in the kitchen though since we used the back stairs, and all we really needed was quiet and privacy.\n\n\"Hi, Helen,\" I said just as soon as Rosemary put her on speaker. \"What's up?\"\n\n\"Hey, Justin. I hate to bother you already, but I just love the house, and Mom and Dad are really excited about it, too. They like the rules, and that it is all girls. There have just been too many assaults and things in the dorms. They signed and faxed the contract back to me, and I have the deposit for you.\" \n\n\"Anyway, I have a really big favor to ask. Say 'no' if it isn't doable, but I'm taking a couple of big classes during Summer School, trying to get a head start on Med School. Like I told you, my roommate is getting married in June, so I can't keep my room in the dorm for the summer. Would it be possible to move into the house during Summer School? I know you are working on the house and everything. I really don't care about that, and I'm more than happy to pay full rent for the three months, even though I'll only be there for two.\"\n\nI looked at Rosemary, and she looked back at me. \"I don't know what to say, Helen. None of the rooms are furnished, we don't have carpet installed yet, the kitchen and bathrooms aren't even going to be started until mid-summer.\"\n\n\"Yeah, I know all of that. I really don't care about all of that stuff. We bought our house from the bank when I was in High School, and it was in a lot worse shape than yours. We redid it all ourselves, so I know what that is like. I can use an air-mattress and share your bathroom until the others are done. Even paying for all three months it is cheaper than getting the room here by myself, and it would be a lot better for studying than the dorm with all that goes on over here.\"\n\nI glanced at Rosemary, who shrugged her shoulders and then nodded. \"I think we can work something out, maybe. I have a meeting with Mom and Dad this evening. Let me run it past them and either Rosemary or I will give you a call back tonight or first thing in the morning.\"\n\n\"Oh thank you, so very much! I hope we can make it work. Could you give me a call tonight? Time is getting really short, and I have to do something by the weekend.\"\n\n\"Certainly.\" We said our goodbye's and Rosemary killed the phone. \n\n\"You're so sweet!\" She wrapped both arms around me and gave me a big hug. \"I knew you would come through for her.\" Rosemary looked over her shoulder as if she thought the other girls might be listening. \"I'm of half a mind to rip those shorts off of you and fuck you silly right here!\" She leaned in, rubbing her breasts on my chest in the process, and nipped on my earlobe. \"You have no idea how hot it makes me running around naked with you watching me when you can't do anything about it with Susie watching! I really need you to use the desk with me.\"\n\nShe looked over her shoulder again, then grabbed my hand and pulled it to her pussy. \"See how swollen and hot and wet I am for you?\"\n\nI grabbed her and quickly set her up on the island, then dove in and started eating her pussy fast and hard. We didn't have much time, and she certainly didn't need any foreplay. I needed some relief, too, but mine could wait. I put two fingers into her pussy and attacked her clit, sucking it, pummeling it with my tongue, all the while growling and humming on it. I really don't know how long it took, but it wasn't much before she clamped down on my head with her thighs and started to scream. Rosemary isn't a screamer, but this was so intense that she quickly stifled her scream by biting down on her hand. \n\nI had to help her down from the counter top, and then hold her up for a few minutes, so spent was she from the orgasm, and after looking at her hand I quickly grabbed an ice cube and put in on her bite. \"Silly girl! That's going to leave a mark!\"\n\n\"I don't care,\" she whispered in my ear. \"I needed that, and I have an idea Steph and Susie are in the same boat. It's too bad you can't do something for Susie.\"\n\nThat's my Rosemary for you. Even when someone does something for her, her first thought is for the needs of someone else. How can you not love her?\""
    ],
    "authorname": "Callicious",
    "tags": [],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/justin-thyme-ch-17"
}