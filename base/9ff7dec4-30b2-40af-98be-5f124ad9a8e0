{
    "title": "Rather be Lucky than Good Ch. 03",
    "pages": [
        "Continuation of an old man's day at the mall. I suggest you read chapters 1 & 2 if you have not, otherwise this ain't gonna make a lot of sense.\n\n*****\n\nAfter making sure I was gonna live, Debbie and the kids left to go get dinner and then on home. Her parent's generation thought if your spouse or kid was in the hospital, you were supposed to spend the night in their room. Thank goodness I had convinced her that was totally unnecessary. I mean, I don't feel good, don't want to entertain or be entertained, so leave me alone. How much sleep can she get in the chair in the room? I would rather she go home and get a good night's sleep. No sense in both of us feeling like crap.\n\nMorning came, bright and too damn early. Also too bright and too damn early were the chipper, happy 'how are we today' nurses and assorted medical professionals. How did you sleep...have a pain pill...how are you breathing...better get pulmonology up here to evaluate. Here is breakfast (yeah, right).\n\nBest early part of the early morning was a visit from physical therapy squad. Just in the planning stages or it would not have been a good thing. There were three of them; Julie, the doctor, then director of physical therapy and my sweet heart from the outpatient physical therapy department. While Julie and the director planned the most appropriate torturous treatment for my shoulder, Mary Beth and I visited for a moment then joined the discussion. She had been my therapist after my knee replacement surgeries. Yep, both knees, total joint replacement, three months apart. Back to Mary Beth, she was a cutie, about 5'5\" and 120 or so pounds. At thirty-three, she was right between my kids at thirty-six and thirty-one. Loved her to pieces...as a daughter. After all, we were both married... to women. Her spouse, Susan, was a massage therapist at another hospital. Turns out Mary Beth was going to do my inpatient as well as outpatient. They don't normally pull across departments like that, but seems I'm special and Mary Beth volunteered. As they were leaving, I told MB to come back and bring Susan so I could meet her.\n\nDebbie called saying she was on her way and asked if I needed anything. Asked her to bring my cell phone and tablet along with the chargers. Oh, remembering the breakfast, I asked her to swing by Chic-fil-a and grab me lunch. After all, I did not get to eat the last one. The nurses were not happy with me eating smuggled food, but told Debbie to watch closely and if I started choking to call for help immediately.\n\nA disorderly orderly by the name of Joe took me down for MRI or CT scan, don't remember which it was. They did both my head and shoulder to check my progress. I called him disorderly cause he was cutting up, cracking jokes and one pun after another. Apparently, my personality was known throughout the joint. And I'd been asleep the whole time. Seems my daughter had been talking about me. When he got me back up to the room, Joe told my wife the doctors would evaluate my shoulder scans and let us know. As far as the brain, he said no problem reading that one cause there was nothing there. Me and Rodney Dangerfield, no respect.\n\nI dozed for a while but woke up with Debbie telling me I had some visitors. Jana Jones, the woman I got out of the mall at the start of things and her husband John. They came in to 'pay their respects', thank me for getting her and the kids out at the start. We had a nice visit considering they were really strangers, after all, I had just met her and the kids right before things got started. \n\nThen I remembered about my car and asked her \"Hey Jana, you still have the Z or did you get it back to my wife.\"\n\n\"We still have it, kinda,\" said John.\n\n\"What do you mean, kinda?\"\n\n'Well,\" answered John \"I really appreciate you saving my family and a bunch of other folks appreciate what you did for the community. We've taken on doing what you have not gotten around to yet.\"\n\n\"Meaning?\"\n\n\"Debbie gave us permission to do a little work on it. Your kids guided us on some decisions. Like paint color and stuff. We're keeping it as close to original design as possible.\"\n\n\"What are you talking about, John?\" I asked.\n\n\"Ok, here it is. Jana's dad is in the auto restoration business. One of the best in the southeast. They have put a hold on all other jobs in the shop. Your Z is getting a complete rebuild. Motor and transmission pulled and overhauled. Stripped the interior. Repainted the whole thing that metallic dark red you like. Under the hood, the door jambs and sides and the interior. Now they are putting it back together. All new interior. The carpet and headliner replaced. Your original seats rebuilt. Covered the door panels and all the other trim. Replaced all the weather stripping and even got the trunk pad under the carpet. Kept the radio with the steering wheel controls but add blue tooth connectivity. Oh, and since you're getting an extra 150 horses under the hood, they have reworked the brakes and suspension and upgraded the tires.\"\n\n\"Is that all?\" I asked.\n\nJohn laughed and replied. \"I forgot to the second turbo and inter-cooler he added. But except for the idle, you won't be able to tell it's got anything other than a new paint job. Ann stressed how you wanted to keep it looking original. So what you will get back will look pretty much like a stock 1988 Nissan 300ZX except for a couple of cup holders her dad worked in for you.\"\n\nJana stepped over and picked up my good hand and said \"David Jacobs, what you did for me and my kids and everyone else that day was unbelievable. We in the community will never be able to repay you. You almost died and face a long haul with your shoulder. Although Dad is doing the work on your car for free, the Go Fund Me page we set in your name up is paying for all the parts. Plus you still have over $50,000 left\"\n\n\"Folks, I don't know what to say. That is just so far beyond believable. I'm absolutely blown away. Can't believe it.\" I said.\n\nChief Ayers came in and nodded at John. \"Oh,\" John added, \"Since you are back with us, you probably want this\" as he handed me a 9 mm Glock. \"Just keep it under you covers where you can get to it.\"\n\n\"Why do I need this?\" I asked.\n\n\"Well, it's just a little added insurance. You stirred up a hornet's nest when you took on those idiots. Your family is under protection as well as everyone else who shot back that day. The hospital is closely guarded. All the staff in this wing are actually replacements. Your nursed are all Marines with combat experience. You are watched over by the FBI. They have allowed us, the Gwinnett County Police, to have door way guard duty in gratitude for saving my family.\" \n\n\"What, John? What the hell is going on?\" I asked.\n\n\"The group who sent the dunces down to teach us a lesson is called the Klan of the Knights Templar. They have sworn to seek revenge against you and the other four who thwarted their attack.\" John replied. \"The FBI will fill you in on the details later.\"\n\n\"Oh, yeah, one other thing,\" he added. \"Anyone who comes into your room had better be wearing a special I.D. badge. The color will change every day, matching the color of you name on the white board on the wall in front of you. The officer on door duty will come in every morning and after you check his badge will change the color and put on his new badge while you watch. If anyone come in with the wrong badge, you yell for the guard while you go for your piece.\"\n\n\"Are you serious?\" I asked.\n\nChief Ayers took that question. \"We are very serious. The threat level against you is highest of all because you are stuck in one location. We are looking at moving you, but that has not been settled.\n\nYa know how they say the right hand and the left hand don't know what the other is doing? Well, that's for sure. Two days later, Chief Ayers was back along with a couple of FBI agents. SAIC Bob Raleigh along with SA Agnus McDonald. (Don't crack any Scots jokes around him, no sense of humor.)\n\nAgent Raleigh described the action taken against the Templar guys. After surveilling their compound for several days with drones, the FBI had raided the mountain camp the previous week. Seems they were keeping it under wraps pretty good. None of the news organizations had any leads on it. Think it might have been cloaked under National Security. In the time since, the FBI had gone over the information gleaned from the computers and papers they had found in the compound. Seems the Feebies managed to capture or 'neutralize' almost all of the members. All but four out of 73 known members. Raleigh gave me a set of pictures of the four missing \"Knights\". Three men and one woman. Everyone else under protection were being briefed and given the same photos. He told me that we had now been warned, the FBI was going public with the information. He did not really want to release it to the public, but needed to get the photos to all law enforcement agencies and knew the information would leak. So, they were going to be proactive and release it to everyone.\n\nI was not too worried about the 3 guys. I mean after all, how unobtrusive can someone with a two inch swastika tattoo on his forehead and lightning bolts tats on both cheeks be. Kinda think we'll see them coming. The tats or ski masks or similar. The girl may be a different story, dishwater blonde, average height and weight, not pretty nor ugly. Nothing about her to stand out.\n\nThe everyday for the next week of so was pretty much the same. Debbie and the kids came and went. Ann brought Sgt Chin by and we had a nice visit. He and I thanked each other for being there when needed. (Discovered he was the one who directed the officers on scene to get me out fast. All things considered, that fast action likely saved my life.) Of course the different medical personnel came and went. Twice a day the wonderful Mary Beth came to do physical therapy. Wonderful my ass, the little bitch turned into a pissed off Marine drill sergeant during those sessions. Yeah, I know, good thing she did or my arm would still be in a sling and my shoulder useless. Still have the teeth marks in my butt, I think.\n\nOne day, during a quiet time in the middle of the afternoon I was sitting in the recliner in the corner of the room. A hospital employee I did not recognize dressed in the normal blue scrubs came in to the room. I noticed her ID badge was turned around where I could not see it. Somebody's Spidey sense started tingling and I felt it also. (I don't have a Spidey sense, so it had to be someone else's.) I dropped my hand down beside my leg and gripped the Glock. With the newspaper in my lap, I was able to bring the gun up top of my lap with her not seeing anything.\n\nI said to her, \"Hang on, I need to see your badge before you come any further.\"\n\nShe asked \"Why's that? I've been in here every day at this time. Don't you recognize me?\"\n\nI replied \"No, I've never seen you before and I know all the staff on this floor. Stop and show me the badge.\" She hesitated a moment too long to suite me, so I yelled \"Guard!\" not knowing who was on duty this afternoon.\n\nShe smirked \"Ain't nobody out there. It's just me and you here. Why you hollering for the guard anyway. Don't you trust me?\"\n\n\"No, I don't trust anyone these days. Stop and show me you ID badge.\" I told her again.\n\n\"Well,\" she said, \"I ain't got no badge just this.\" As she reached into her fanny pack and withdrew a pistol.\n\nBad move on her part. As she raised her arm, I saw the lightning bolt tattoo on her wrist. I did not give her another second. As soon as I saw the tattoo, I started firing. Got two right in the middle of her chest and another went through her forehead. (Lucky again, it's gonna run out soon, I'm afraid.) She hit the floor without ever getting a shot off.\n\nWell, those shots kinda changed things a bit. Two nurses came running into the room with their M9 Berettas at the ready. Kinda strange seeing nurses carrying pistols, but they were Marines after all. \"Dave, who got shot? Are you wounded? You OK? Talk to us\"\n\n\"Easy ladies, I think it's over. She was a Templar, managed to get by everyone else,\" I replied. \"I got her before she got off a single shot. I did not recognize her as someone who should be here. She would not show her badge then I saw the tattoos. She's dyed her hair, it was a dirty blonde in the photos. Hey, where are the cops?\"\n\nLinda, the first nurse in the door said, \"Don't know. We heard someone running and looked up, and there went your guards. Next thing, we heard shots in here.\"\n\n\"Well, for the time being, y'all mind staying close by?\" I asked. \"Guess you better call for clean up on aisle four.\"\n\nLinda looked at me and shook her head. \"How can you crack a joke now?\"\n\n\"Easy,\" I said, \"She's dead and I'm not.\"\n\nAbout that time, John Jones, one of the on duty officers, came running in. \"What happened?\"\n\nLinda told him \"While you guys were gone this Templar woman got in here. She refused to show Dave her badge and when she went for her gun, he was able to shoot first. Where were you guys?\"\n\n\"Thank God you're OK,\" John said. \"We got called down to the south stairwell. The three male Templars were down there trapped on the landing between the second and third floors. Two went down shooting and the third surrendered. That should be all of them. We'll notify the Feebies and let them come do clean up.\"\n\n\"Hey, y'all got a room that doesn't have a body lying on the floor?\" I asked.\n\nLinda said \"Room hell, we've got a whole wing. How far you want to go?\"\n\n\"Just next door will do me. No sense in going so far no body can find me.\"\n\nAs expected, our FBI friends came in and cleaned up the mess. Before moving the body, they did all their crime scene stuff with the pictures and diagrams. FBI and Gwinnett County Police interviewed me about what happened and wrote their reports. Of course, justifiable, self-defense and all that stuff. Ayers was not happy that my door guards left me unprotected. Luckily for them, the fact that they got the two Templars who died in the stairwell helped them. (Always better to be shooting down than up. Seems my guys just walked down the stairs and got a couple of clean shots.)\n\nWith the Templars wrapped up we five defenders were able to come out of protective concealment (sounds better than hiding, don't you think) along with our families. The community was finally able to meet their \"Hometown Heroes\" as we were called. Praise was heaped upon our heads along with some public sponsored rewards. The mall did not reward us for protecting their customers but they did not charge us for the damage we did either. \n\nLuckily, I was the only one wounded of the five. I was released and able to go home. As I was rolled out to the door, I saw a beautiful sight. Jana Jones and her father came rolling up in my restored Z. It was everything I could have hoped for. Jana hopped out of the passenger's seat and hugged my neck. Her father got out of the driver's seat, came around the front and gripped my hand. \"Dave,\" he said \"You saved my little girl and my grandchildren. I owe you a lot more than this car.\"\n\n\"George, as a father myself, I know what you are saying. However, again as a father, I just hope that if my family is ever in danger like Jana was that someone will step up and act.\"\n\nI continued \"I can't believe what you've done to my car. This is beyond my wildest dreams. I could have never imagined doing this to it. How about you drive me home and tell me all about it.\"\n\nSo ended an old man's day at the mall.\n\n*****\n\nThanks for reading my little flight of fantasy. I really appreciate you votes and words of encouragement."
    ],
    "authorname": "olddave1951",
    "tags": [
        "mature",
        "old man",
        "young family",
        "shoot 'em up"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/rather-be-lucky-than-good-ch-03"
}