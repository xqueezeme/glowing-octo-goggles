{
    "title": "Suzy and I Ch. 02",
    "pages": [
        " This is the second installment of the story of Suzy and Luke. Please enjoy. \n\n All characters are fictional, and all sexual encounters are between grown adults.\n\n--------------------------------------------------\n\nSuzy and I: Part 2\n\nI awoke with a start, feeling a shiver from the light sweat that covered me.\n\nMy heart was pounding as a sense of foreboding clung to me. Little snippets of a dream danced around in my head resisting my efforts to catch them. It had been a bad dream, and that was not normal for me. What was normal was not knowing if I had a dream, good or bad.\n\nI felt frustration in trying to recall it as the more effort I put into remembering, the vaguer the details became. What little I could recall was more of a feeling, a feeling of loss. It felt like someone or something dark was taking Suzy and Amber from me. I shuddered.\n\nAs I stared at the ceiling I could feel Suzy lying partially on me, down my left side. Looking down at her I could see she had a small cushion under her head, wedged up into my armpit. My arm was around her small frame, hand on her hip. Needing comfort I pulled her tighter to me.\n\n\"Mmmm\" she softly moaned, wrapping her arm further around my chest, a light smile crossing her face.\n\nShe looked so serene and content, almost childlike. I realized she was wearing a tee shirt and moving my hand to feel her butt I felt a pair of cotton panties. I know we had gone to sleep last night naked after our festivities. She must have gotten up after I had gone to sleep.\n\nI took my unoccupied hand and stroked her back and sides, rousing her. Her eyes fluttered open and upon seeing me, closed them again, her smile broadening as she wiggled her body on me.\n\n\"Good morning beautiful\" I said softly, \"sleep well?\"\n\n\"Oh yes\", she said quietly, her eyes never opening.\n\nShe pulled herself further onto me, her head on my chest.\n\n\"You don't have to get up do you?\"\n\n\"Just to pee, I'm sorry.\"\n\nShe moaned in phony displeasure and lifted her head to look at me.\n\n\"I'd rather not move\", she whimpered, lying her head back down.\n\n\"Sorry, I'm going to burst.\"\n\nShe rolled off; making the sound of a child that couldn't get their way.\n\n\"Hurry back, I'm not done sleeping and I need you under me.\"\n\nI chuckled as I swung my legs over the side. I quickly grabbed a fresh pair of briefs from my drawer as I headed to the bathroom.\n\nAfter taking care of my number one priority, I washed my hands and face, brushed my teeth and pulled on my shorts, in that order. Walking back into the bedroom, Suzy was sitting up. It looked like she was wearing one of my tee shirts.\n\n\"Thought you weren't getting up?\"\n\n\"I'm not going to able to go back to sleep now. Just climb back into bed with me for a while.\"\n\nDamn! Look at her! How does anyone look that good after just waking up? I just realized her hair was also tied back into a ponytail. I climbed back onto the bed and slid up next to her, lying down. She climbed nearly on top of me as she stretched her body, getting comfortable once again, with me as her pillow.\n\n\"When did you get up last night?\" I asked while wrapping her into my arms.\n\n\"Not long after you had fallen to sleep. I had to clean up properly or I wouldn't have been able to sleep\" her voice soft and soothing.\n\nI felt the lingering anxiety I had from my dream shedding off me as I held her, feeling her soft warm skin, listening to her melodic voice.\n\nI lay there quiet, just wanting to feel her. Her very presence was enough to make me happy. I fed off her beauty, her goodness, her love. I could feel myself slowly sliding back into unconsciousness, so content and sublime.\n\nAs I thought I was gone to the waking world, I jolted back. Suzy had pulled her face up to mine and laid her soft lips on mine. With a simple uncomplicated kiss, full of warmth and affection, she had my heart pounding. She snuggled her face into the side of my neck.\n\n\"Mmmm\" she purred, \"do you know what I want?\"\n\n\"Sex?\" I asked with a grin, my eyes still closed, soaking her in.\n\nShe chuckled.\n\n\"Okay, do you know what else I want?\"\n\nOpening my eyes I looked at her, then kissed her forehead.\n\n\"Whatever it is, just tell me, and I'll get it for you.\"\n\n\"I want to talk about us and where we go from here. Maybe some ground rules.\"\n\n\"Before or after the sex?\" I asked, tongue in cheek.\n\nShe took a deep breath, making an exaggerated sigh of patience.\n\n\"I'm your sister, pervert.\"\n\nI laughed, and then stretched, my arms going over my head, my legs straight as I trembled, groaning. Now I was awake for good.\n\n\"I had some things running through my head last night. I'd like to see what you think. Is that okay?\"\n\nI nodded my approval.\n\n\"Of course. Just start talking\" curious about what she might have been thinking.\n\nShe lifted her head to look at me.\n\n\"Okay......... nothing too big a deal; well most of it is no biggie, I think\".\n\nShe looked a little shy but continued.\n\n\"Okay, I guess the first thing is, no sleeping naked in bed.\"\n\nI looked at her puzzled.\n\n\"It basically turns the bed into a huge pair of underwear\" she quickly added upon seeing my query.\n\nI grinned, almost laughing.\n\n\"No, I get it. Not a problem. I usually don't sleep naked anyway.\"\n\nSuzy looked at me, giving me an 'oh really' look.\n\n\"Last night was an anomaly, really. I happen to agree with that. So what else you got?\"\n\n\"Okay, no sex when I'm on my period.\"\n\n\"No problem there,\" as I made a show of shuddering, \"next.\"\n\nShe began to blush lightly and looked down.\n\n\"Nothing anal\"\n\nShe looked back up shyly to see my reaction.\n\n\"That's fine.\"\n\n\"It's just that Tom tried it on me a couple of times and it was very unpleasant.\"\n\nShe looked as though she was asking too much.\n\n\"Really, it's fine. I'd never done it and it just seems........I don't know, selfish? Besides, I'd never ask you to do anything you weren't comfortable with.\"\n\nShe smiled with a look of relief on her face.\n\n\"Keep going, what else is there?\"\n\n\"One more and it's a biggie.\"\n\nSuzy hesitated a moment, maybe trying to choose the right words.\n\n\"When and how are we going to tell the family?\"\n\nThat one rocked me back! Wow! Tell the family. I hadn't even considered such a thing.\n\n\"Do you think we even should? I mean, you know how mom is.\"\n\nOur mother was a straight black and white, right and wrong kind of person. Her upbringing was strict Southern Baptist and it was always clear where she stood on any given subject. I had far less to fear from our dad.\n\n\"I've thought about this for a very long time. I knew if we ever came together we would have to be truthful with the family. I don't relish the thought, but there is too much to hide, too much deception. I couldn't be happy while trying to hide the truth from the ones we love most. Mom and dad will be here tonight after Amber's graduation. I suppose we can rearrange the spare room to look like yours, and take off our rings. But how often and for how long?\"\n\nI could see her concern and that she was truly asking a sincere question. She didn't have a plan and didn't have the answer. She just wanted me to help her figure it out and do what was right.\n\n\"I think you're right. I hadn't given it much thought, but I know you have, and you're right. I don't know what to say just yet. We need to think about this, I mean, I need to think about it as well, and we can come up with a plan. I hope that's all you're looking for right now.\"\n\nShe smiled kindly, touching my face.\n\n\"It is. You are such a good man. No wonder I love you so much.\"\n\nShe stretched up and kissed me.\n\n\"I got one\", I said.\n\nShe flashed me a look, as to say 'do you now?'\n\n\"Is it permissible to wear each other's clothing to bed?\"\n\nSuzy blushed. It was delicious.\n\n\"You mean this\", as she indicated my tee shirt.\n\nI nodded, grinning.\n\n\"I like wearing your shirts. They're nice and baggy and I find it comforting\", she said sheepishly.\n\n\"Wait a minute. This isn't the first time then?\"\n\nSuzy lay her head back down, squeezing me lovingly.\n\n\"No. I've been doing it for years.\"\n\nI'd have to admit, I was a little surprised. So I prodded her.\n\n\"Please elaborate.\"\n\n\"Only if you promise me you won't laugh. It's a little embarrassing.\"\n\nI nodded, now truly interested. This was going to be good.\n\n\"I was doing your laundry one day, loading your whites. On an impulse I took one of your shirts and smelled it. It looked clean, but I knew you had worn it. It smelled so nice, like you, so I put it on. It felt so good to be wearing something of yours, and I loved smelling you, so I decided to sleep in it that night. I've been doing it ever since.\"\n\n\"Is that why you've always kept me stocked with these?\"\n\n\"Yes. I would wear one for a few nights and then put it in your basket while I fished out a fresher one. And I just realized it sounds gross now that I say it out loud. But in my defense, I routinely bought a new pack and would run them through the wash whenever I had to throw some out. You know, when they became too dirty to clean.\"\n\nI had to laugh! It suddenly explained a few things.\n\nShe looked up at me scowling.\n\n\"You said you wouldn't laugh.\"\n\n\"That's why you nag me to put on a fresh undershirt every day. That's why my undershirts were always so white. I thought you were some kind of laundry wizard!\"\n\n\"That's also why they were always the same brand and size. I have really come to love them. But I guess now that I get to smell you every night, I can give up the shirts.\"\n\nShe almost sounded sad.\n\n\"No, please, continue. You look cute in it. Just don't feel like you need to fish them out of the hamper\" I teased her.\n\nSmiling she kissed me, her eyes dancing and beautiful.\n\nThe kissing didn't stop and soon we were entangled in our passion. Our tongues found one another as we breathed each other's breath. Straddling my hips Suzy sat up and pulled off her shirt, actually my shirt, exposing her perfect beasts for my viewing pleasure. Instinctively I took one in each hand, gently squeezing, lightly twisting her hardening nipples. Placing her hands on my stomach she began grinding her crotch on my quickly stiffening tool. She was smiling broadly.\n\n\"You have anywhere you need to be?\" her voice breathy, desire rising.\n\n\"Just here with you.\"\n\nSuzy fell forward, lying on my chest, her breast flattening. I held her face to mine, kissing as she reached back and removed her panties. Sitting up she scooted back and with my assistance removed my briefs. She bent forward and taking hold of my cock slid her mouth over it, nearly engulfing me fully. Gagging a little she continued sucking me as I watched. Within seconds I was fully erect and reaching, grabbed her by the shoulders. Looking up she knew what I wanted. She crawled back over me straddling my hips once again. Guiding my manhood she sat slowly onto it as I felt myself penetrate her sex.\n\nOur love making was, once again, intense and emotional. The act of sex is great, but when it's combined with feelings of love, comfort and belonging, it becomes wondrous. It's an act that continues to connect two people in ever deepening levels. Commitment, service, gratitude and trust are strengthened. And I could not conceive of a better person to whom I could share all this with. Suzy was my life.\n\nWe lay in each other's arms after, allowing our bodies to cool and come to rest, enjoying the silence, just feeling each other. Suzy eventually pushed herself up and looked down at me.\n\n\"I guess we need to get up. Amber's probably up waiting for us.\"\n\nI nodded and watched her naked form walk into the bathroom, paying special attention to her cute little ass. Wow! I took a deep breath and thanked a merciful god for her.\n\n------------------------------------------------------------\n\nAmber was sitting at the bar eating a bowl of cereal when I walked in.\n\n\"Morning dad\" she beamed.\n\nI placed my hands on the sides of her head and kissed the top.\n\n\"Good morning beautiful. Where are my pancakes?\"\n\n\"Oh, ha ha. They're still in the box.\"\n\n\"Ingrate\" I retorted with a smirk.\n\nShe laughed.\n\nI began putting together a breakfast of poached eggs on toast for Suzy and myself. I had everything ready as Suzy walked in, already clothed and ready for the day, stopping to give Amber a kiss, then giving me mine as well.\n\n\"Let me get breakfast ready. You finish getting dressed. We have a lot to do before tonight.\"\n\nI complied and headed back into the bedroom to get ready.\n\nDuring breakfast, Amber sat with us while we discussed and outlined our day. Graduation was tonight and we had some family coming over afterward. Mom and dad were going to be here as well as Travis, the brother just younger than me, and the executor of my will. The youngest brother, Rich, had told me that he and his family would be at graduation, but had to leave right after. The eldest sister, June, couldn't make it. Understandable, as her life was hectic with six children, ages fifteen to six.\n\nWe needed to get Amber moved into my old room and then set up the spare bedroom to look like mine. Suzy had to take Amber to the school to get her graduation gown and help her finish cleaning out her locker. I was to go shopping for the items we needed for the short celebration we were having at the house, afterward. After it was clear what our day looked like, and breakfast finished, I thought it was time to talk about what neither of us wanted to, how we were going to tell the family. We both agreed that Amber needed to know what our plans were.\n\n\"What do I need to know?\" Amber straightened up, suddenly very interested.\n\n\"Your mom and I are going to tell the family about us. We decided they needed to know.\" I explained.\n\n\"We just don't know how to go about it yet,\" Suzy added. \"Do you have any thoughts?\"\n\nAmber was looking into her bowl of cereal; I could see the wheels turning in her head, almost smell the smoke.\n\n\"I'm not saying we need to say anything tonight, this is your night after all, and I would rather not end it with a lot of drama\" I said while looking at Suzy.\n\n\"I think we can all agree on that. We are so proud of you Amy, and how well you've done in school. This evening is for you.\"\n\nAmber looked back up; I could see she had an idea.\n\n\"Uncle Travis will be here tonight, right?\"\n\nSuzy and I nodded, 'yea.'\n\n\"What do you think about talking to him after Grandma and Grandpa go home? He'd be a good place to start, and maybe just do it a little at a time?\"\n\nI was taken back. That was actually a good idea. I looked over at Suzy. I could see she had a smile forming, looking at me, which had me grinning back at her. Within seconds we were both smiling broadly at each other. We knew she was onto something.\n\n\"I like it. I really like it. If we talk to Travis first, probably the easiest one to confront with this, we could decide what next, depending on how it goes. He might even have some insight before we consider the others.\"\n\n\"I agree,\" Suzy said, \"of the entire family, Travis will be the most understanding. I'm feeling better about this already. I was picturing the whole family in front of us and trying to come up with what to say to all of them, at once. This will be far better.\"\n\nSuzy got up and walked around to Amber, wrapping her arms around her shoulders from behind, kissing her on the side of the head.\n\n\"Nicely done. Your instincts continue to surprise me.\"\n\nAmber blushed, \"Thanks mom.\"\n\nWe all agreed that I'd be the one to break the news. I would have insisted anyway if anyone had thought different. This was for me to do.\n\nWe broke for breakfast and each went about accomplishing their tasks. The house was ready for visitors inside of two hours. As I stood at the doorway looking into my fake bedroom I couldn't help but shake my head.\n\n\"What was that for?\"\n\nSuzy had been watching me from behind and put her arms about me, pressing into my back. I took a breath and sighed.\n\n\"I guess I'm just a little sad that we have to go through this. I feel like I want to invite them all in at once, jamb my ring into their faces and tell them to get over it, or get out. I'm so happy with you. I have the most wonderful person in the world to spend my life with and I feel like bragging about it. The fact you're my sister feels irrelevant.\"\n\nI felt myself getting a little worked up.\n\n\"That's just like you. Charge straight ahead, the consequences be damned.\"\n\nShe hugged me tighter, as she chuckled behind me.\n\n\"I love that about you, your boldness and strength, especially when it concerns me or your daughter.\"\n\n\"Our daughter\" I corrected her.\n\n\"I know, sorry, I wasn't making a statement. She is my daughter; I can feel it down to my core.\"\n\nI turned around and we held each other.\n\n\"Everything is going to be alright, because if the worst were to befall us, we will still have each other. That will never change\" I said, feeling the power of that truth deep in my breast.\n\nI smothered her in my arms, my lips on top of her head.\n\n\"You can take that to the bank\" I said as that old urge of protection stirred, bubbling up near the surface.\n\n-------------------------------------------------------------\n\nThe graduation was nice and went off without a hitch, other than a couple of boys acting like jackasses upon receiving their diplomas. They're parents must be very proud.\n\nI sat next to Suzy, our hands between us, away from prying eyes, touching and holding the whole night. Suzy had taken our rings and put them away when making one last check of the place before we left for the ceremonies.\n\nWhen we got back to the house everything was in order. We had hamburgers that I grilled outside, potato salad made by Suzy and a glass of wine for each of us. Amber had a nonalcoholic bubbly. Our mom did her usual snooping about the house, thinking she was being discreet. Suzy kept an eye on her as we three men sat and talked of work, sports and politics. Amber was busy helping Suzy most the night and often ran interference with her grandma. It was a nice evening. As our parents were preparing to leave, dad called out to Amber.\n\n\"Come here young lady.\"\n\nAmber sided up to her grandpa as he put an arm around her and handed her an envelope with his free hand. It was money. He did the same with all of us growing up.\n\n\"I am so proud of what a wonderful young lady you have become. Don't you ever forget that.\"\n\nAmber was moved, and turning, hugged him tight.\n\n\"I love you Grandpa.\"\n\nHe bent and kissed the top of her head.\n\n\"You warm an old man's heart.\" he smiled, the genuine affection, obvious.\n\n\"And you too Grandma\", as Amber released grandpa and tightly hugged her grandma.\n\n\"You are such a precious child\" she said, as she gave Amber a peck on the cheek.\n\nWe said our good nights and mom and dad left.\n\nTravis had informed them just before they left that he'd be staying at our place tonight, instead of theirs. Mom questioned why, when they had a room all ready for him. He explained that this was the only time he and I could really catch up and that he'd be by the house before he had to catch his plane the next day. Mom didn't like it, but what was she to do. Earlier in the evening I had told Travis I'd like him to stay because I had an important matter to discuss. I figured he assumed it was legal related; after all, he was the family attorney.\n\nAfter mom and dad left, Amber announced she was heading to bed. She gave Travis a quick hug and good night. She threw her arms around the neck of Suzy then mine, kissing us both on the lips, as was her custom and wishing us each a good night. I watched her leave, my heart swollen with pride.\n\n\"She really is a wonderful girl. She'll be a fine lady, no doubt\", Travis commented when hearing the door to her room close.\n\nSuzy and I agreed and exchanged smiles.\n\n\"Alright, I'm getting a shower. The hall bath I presume?\" I nodded, \"Yea\", and he grabbed his bag and left the room.",
        "As Travis closed the bathroom door I took the opportunity to retrieve our rings.\n\n\"Give me your hand Lil Sis.\"\n\nSuzy extended her hand and I slid both rings on, and then donned mine.\n\n\"I didn't realize how much I missed having these on till just now\", Suzy said as she looked at them both, as if for the first time.\n\nMaking her left hand into a fist, she placed her right over it and held it to her chest.\n\n\"I'm not taking these off again. I won't do it\" she said, giving me a look of defiance to punctuate how strong she felt about it. I nodded with a smile.\n\n\"I'll never ask, ever again.\"\n\nShe put her arms around my neck and we hugged.\n\nAs we held each other, I inform Suzy that I would be sleeping in our bed tonight. Travis could have the spare bedroom. She raised her eyebrows at that with a crooked smile.\n\n\"Are you sure? It could be awkward for him.\"\n\n\"I'm unconcerned about that. I won't spend a single night in another bed when there is room for me next to you.\"\n\nI gave her a look, challenging her to disagree. She just smiled and kissed me.\n\nWe were sat on the couch when Travis came back in.\n\n\"Where you putting me tonight?\"\n\n\"In the spare bedroom. Go set your things in there and come out here so we can talk.\"\n\nI was going to go right at it.\n\nHe nodded and carried his bag into the bedroom. Moments later he returned. I handed him another glass of wine then poured myself one. Looking at Suzy she shook her head. She never drank more than one glass at any given time.\n\n\"Alright Luke, what's this all about?\" as he raised his glass for a drink.\n\n\"Suzy and I are together.\"\n\nMy heart was pounding in my ears, but Travis didn't flinch. I saw him noticing Suzy's rings.\n\n\"Explain to me what you mean by together\" sounding like the lawyer in him.\n\n\"What I mean is Suzy and I have become intimate. We have decided to stay with each other, long term.\"\n\nI could hear the whooshing of blood in my ears.\n\nTravis sat back into his chair, eyeing us, his face impossible to read. Then I saw the slightest indication of a smile, more in his eyes rather than his mouth.\n\n\"Come on Travis, you must have something to say.\"\n\nNow a smile began to creep across his mouth.\n\n\"Surely you have a question or two, or cautionary remarks. This is kind of a big deal.\"\n\nI no longer could hear my heart, but it still pounded.\n\n\"Well the first question that comes to mind is when did all this start? And I mean the intimacy, not the two of you being in love.\"\n\nSuzy and I were shocked! We turned and looked at each other, unable to formulate a response. Travis helped us out.\n\n\"You two have been in love for as long as I can remember. It was only a matter of time, especially when you guys bought this house together. Don't look so surprised. Do you think I couldn't see it?\"\n\n\"Really, you could tell?\" I ventured. I had no idea we had been so obvious.\n\n\"I've been around you two long enough. I've seen the way you look at each other, and over the last number of years you can barely control yourselves. You may have thought you were being discreet, or maybe you honestly didn't realize it, but you always seemed to be near each other. I mean honestly, I figured you've been doing it for years now. So, when did you start?\"\n\n\"Two nights ago\" Suzy said quietly.\n\n\"No shit! Man did I have it wrong.\"\n\nTravis took another sip, I had forgotten about mine.\n\n\"I'm at a loss,\" my mind swirling, \"you have no idea how much I agonized over this. How can you be so nonchalant about this?\"\n\nMy heart had begun slowing and my wits started sharping back up.\n\n\"I guess from my point of view, it was already a forgone conclusion. I mean you're both happy right?\"\n\n\"Yes, very much so\", Suzy said.\n\n\"I've never been happier\", I added.\n\n\"Okay then and what about Amber? From what I see, she's a happy, well adjusted, highly intelligent, beautiful young lady. She obviously understands and is fine with it. Am I missing anything?\"\n\n\"No, I think you have it down\" I responded.\n\nI was beginning to feel a weight being lifted off my shoulders. I reached my hand over to Suzy's and took hold of it. Lifting it she scooted over next to me and lay our hands in her lap.\n\n\"This doesn't make you uncomfortable then?\" Suzy asked, looking a little hesitant.\n\n\"That? No, just don't start making out. That would be difficult\" he laughed.\n\nI was still stunned at how relaxed he was about it all. With a little provocation from Travis, Suzy and I told our story about how we eventually got together. He wanted to know as much detail on how we interacted for so long without, as he put it, 'shacking up'. It amazed him when we told our story, our personal thoughts and temptations. How and why we were able to hold out for such a long time. As I heard from Suzy and listened to myself I felt robbed of all the time we had missed. I said as much at one point.\n\n\"We didn't miss a thing. I loved you all that time and I was happy. I've been happy from the first day I slept in Amber's room, in that little apartment. I wouldn't have changed a thing. Being with you, even as your sister and friend has been a blessing in my life.\"\n\nSuzy was tearing up as she finished her thoughts. I hugged her and we kissed a quick, firm kiss. Travis was smiling when we turned back toward him.\n\n\"Sorry\", I said.\n\nHe laughed out loud.\n\n\"Don't be. The look on your faces, just now, was priceless,\" he laughed a little more. \"Really, your PDA doesn't bother me as much as it bothers you. So long as you keep your tongues in your mouths. I've had a lot of years getting used to the fact that you two were together. There seemed to be no other conclusion for me.\"\n\nWe talked a little longer, and then Suzy got up, saying she needed to get ready for bed. She excused herself, but not before going over to Travis and giving him a kiss on the cheek.\n\n\"I love you Travis\" she said then left the room. We both sat quiet watching as Suzy vanished down the hall.\n\n\"Alright Luke, tell me something\" Travis said, making sure Suzy was out of ear shot.\n\n\"What?\"\n\n\"Is being with Suzy everything you had hoped it would be?\"\n\nThat was a direct, probing question. He looked stone serious, and I was a little taken back. I lowered my head, looking at the floor, considering how to answer such a profound query. I wanted to tell him how perfect she was for me, how she made me feel about myself, what a wonderful mother she was for Amber, and as I formulated the words, my heart began to pound.\n\nI looked up at Travis; he sat there watching me closely.\n\n\"I'm not sure.....I can make you understand.\"\n\nI had barely gotten those words out, in a strained and quaking voice, before my throat closed. I went to say more, but I suddenly lost control of myself. With a quivering chin I opened my mouth, just to close it again, as tears sprang into my eyes. I saw her face before my eyes, the countless moments I looked upon her as more than a sister seemed to race before me. Memories and thoughts, some decades old seized me in their grip and I found myself helpless.\n\nEmbarrassed, I quickly wiped at my tears with my sleeve, but they wouldn't stop. All I could manage was to lean forward, with elbows on my knees and head resting in my hands, the tears simply flowed, dripping between my legs to the floor. The warmth and joy that consumed me as I thought about Suzy was both surprising and powerful. Trying to verbalize my feeling for Suzy had opened a plethora of strong emotions I was unprepared for.\n\n\"Well, I think you just answered my question. We don't need to talk about it.\"\n\nTravis was leaning back in his chair when I eventually lifted my head, the tears finally coming under my control. He had a kind smile for me, and I laughed the laugh of one feeling foolish as I wiped my face dry.\n\n\"Whew.......that took me off guard. I'm sorry.\"\n\n\"Please, don't apologize. What I just saw is one of the reasons I'm still single.\"\n\nI gave him a questioning look, needing him to explain.\n\n\"The thing is, I've never been with someone that made me feel even close to what I just witnessed. And I get it. Suzy has always been special, to me as well. All the women I've gotten to know, I can't help but to hold them up next to her, and they always fall short. I want what you have,\" he shrugged in an acceptance of defeat, \"but you have the only one, and that makes me jealous of you.\"\n\nI understood how he felt, and didn't know the words I needed to say. Suzy came back into the room just then, in her night robe and sat down next to me, grabbing my hand.\n\n\"Everything alright?\" seeing my reddened eyes and sensed the mood in the room.\n\nI went to tell her we were talking about her, but my throat began to tighten again, so I leaned back against the couch and took a deep breath, straining to control my emotions. Travis jumped in and rescued me.\n\n\"Actually, we were talking about you. Luke was trying to tell me how he felt about you, and........well, you can surmise the rest.\" He had that smart ass tone in his voice and I laughed, then blew out a deep breath through pursed lips.\n\nSuzy looked at me. I just nodded, still unable to speak. She stretched up and kissed my cheek.\n\n\"I'm so lucky to be with you.\"\n\nI closed my eyes, having executed a tight grin, wishing everyone would stop talking and give me time to gain some control. I heard Suzy say \"sorry\", then Travis laughing.\n\n\"Just one more thing\", Travis said. \"You guys know that what you're doing is illegal, right?\"\n\n\"What, are you serious?\"\n\nThat jolted me back into control! I was more than a little taken back. Suzy had her brows furrowed and looked at me, questioning.\n\n\"I'm serious. It's against the law for you two to have sex. Not that any prosecutor is looking for someone to prosecute. But if it became common knowledge, I'm not sure that some prosecutor wouldn't take interest. So, remember that.\"\n\nSuzy look outraged.\n\n\"You mean two consenting adults can't do what makes them happy? Can't share their lives?\" Suzy looked at me as if wanting me to answer.\n\n\"Yes, you can share your lives, just no sex\", Travis shrugged, looking helplessness. \"I just want you to be aware, so be careful, and be happy.\"\n\nWe were both speechless, just looking at each other.\n\n\"Alright, I'm going to bed. It's been a fun evening, but I'm played. I'll see you guys in the morning.\" He got up and headed for his room. He stopped at the hall, and turning, added, \"Do me a solid, and keep it down tonight.\"\n\nHe disappeared down the hall and then we heard his door close. I ventured a glance at Suzy. She was blushing brightly.\n\nLater that night, as we lay there, intertwined, Suzy broached the subject of what now.\n\n\"Do you think we should tell mom and dad?\"\n\n\"Hmm.....yea.... that. I don't feel good about it. With this new information I think we need to play our cards close to the chest. The fewer that know the better and I wouldn't want them, or Rich or June, put in an awkward position.\"\n\n\"I know. I was so sure of what to do, now I'm a little scared\", she said, then took a deep breath.\n\n\"Let's not do anything for now. We can think it over. We have no deadline to decide. But just remember, I will do whatever is necessary to be with you, law be damned. I just want you to be happy.\"\n\n\"I know you do, and that's how I feel too. I'm so happy being with you. It was just a sudden dose of reality\", she said, disappointment in her voice.\n\n\"We need to talk to Amber about this. Do you think it's too much? I don't want her to be worried or feel insecure\", expressing my concern.\n\n\"I think she'll be okay. It might cause her concern, but if we talk it through, I think she'll cope just fine. She's very resilient\" Suzy's voice full of pride for her girl. She always had such confidence in Amber.\n\n\"Let's talk with her tomorrow night\", I yawned, feeling suddenly weary. \"Right now I just need to go to sleep.\"\n\n\"I love you Pack Mule\", Suzy said. She sounded sleepy herself.\n\nI kissed her head. \"I love you Lil Sis.\"\n\nShe sighed quietly. Soon she was asleep. But before I nodded off I couldn't help but think, was the dream I had earlier a premonition of this very thing? The very idea brought back that dark hollow feeling. I pulled Suzy tighter to me and she signed in her sleep. I fell asleep, concentrating on how she made me feel in that moment. Wanted and loved.\n\nThe following evening Suzy and I talked with Amber about the things Travis had said. She was surprised about the illegality, especially between consenting adults. We talked about the importance of our union being confidential, even with family. At this point only Travis knew for sure, and it should remain that way. We also assured Amber that nothing would change in regard to her relationship with Suzy. We were a family, and we would remain so. Amber was already fine with the secrecy of our being siblings, she already understood the necessity, so all in all it was simply about all of us being on the same page.\n\n--------------------------------------------------------------\n\nSummer was now officially under way. Schedules changed for Suzy and Amber, but I had the same routine, work. Good thing I loved what I did. My girls, something I called them when talking about them to others, continued to bring me lunch when it was feasible.\n\nOne development that occurred during summer break, Amber began training at the high school pool. Suzy had taken her down there to check out the swimming times, knowing how much better it would be to train in a regulation pool. While there, they saw a notice indicating that registered high school students, who were a part of, or interested in the swim team, had pool time Monday thru Thursday, five to eight in the morning. So, three times a week the two would hit the pool and get some serious training in. Suzy was able to meet the coach of the girls' team and as always, with Suzy, a friendship was started.\n\nI had noticed that the two of them were showing signs of getting toner. Amber's was mostly in her shoulders and arms. Suzy's was not as noticeable, but I could feel it throughout her body as we got amorous or just snuggled. She felt as soft as usual, but her muscle tone beneath was impressive. Apparently Suzy would jump into a lane and swim alongside Amber, sometimes challenging her to race. I heard from Amber that mom was still the faster, but she was going to catch her one day. Suzy concurred that indeed she was faster than Amber, which was a surprise to her, but after a little more growth and training, Amber was going to surpass her.\n\nAfter a few weeks, Diane, the coach and new friend, arranged for Suzy to meet with the principle. An appointment was made, and during one of the morning sessions, Suzy went to the office and met with him. From what I gathered, they were short coaches for the girl teams and were very interested in hiring additional people, part time. As a part time assistant, Suzy didn't need any credentials, it just required school board approval, which they guaranteed was a shoe in. It didn't pay much, but she could assist in as many different sports as her allotted time would allow. The best part was that once in, if she completed an online degree and had her wellness physical, she could hire on full time. That meant more money and benefits.\n\nAt the next board meeting, her hiring was approved and she turned in her two weeks' notice with the title company. Suzy was on cloud nine!\n\n--------------------------------------------------------------\n\nIt was now mid-July, and our parents were coming over to eat. We decided on doing a barbecue in the back yard and keeping things relaxed and informal as possible. We planned on telling our parents about our plans on staying together, long term. Our new and budding physical relationship was not going to be mentioned, but the fact we loved each other, could be.\n\nThe evening was going well. We sat around on the back patio, enjoying nice petite steaks and talked about Suzy's new job. They were also thrilled about Amber's progress as a swimmer. They were always proud of Suzy's accomplishments and hearing her sing Amber's praises delighted them. We learned that evening that one of Suzy's school records was still standing, the 200m free style. That always was her strongest event.\n\nDuring the evening I noticed that our mom became a little quiet. As we talked I watched her. I then saw what was going on; she had noticed Suzy's rings. I knew mom was going to bring it up sooner, rather than later, she was never shy. So signaling Suzy, I stood and began removing plates, going into the kitchen with Suzy in tow.\n\n\"Mom noticed your rings\" I told her. She grimaced.\n\n\"So I guess the time is upon us\" I said as I leaned in and gently bumped our foreheads together. \"Let's bring them into the family room. I'll herd them in, you let Amber know it's time to get ready for bed. I'm still unsure about letting her participate in this. I'll just leave it up to the two of you.\"\n\nSuzy nodded understanding, giving me a quick kiss of support. Well, here I go.\n\nSuzy went out first, telling Amber to go get ready for bed as I trailed behind.\n\n\"Mom, dad, let's go into the family room for a bit. Do either of you want a little wine? Dad? Beer?\"\n\nMom declined and dad jumped for the beer. Grabbing us both a bottle I handed dad his and sat down on the small couch. Suzy had just come back in after following Amber so she could speak with her briefly. She quickly shook her head when I looked at her, indicating Amber was not going to join us. She grabbed her glass of water and came and sat down next to me.\n\n\"We really have enjoyed having you over tonight. It's been a wonderful evening,\" I began. Suzy put her glass down and placed her hands in her lap. I could feel her calmness as it soothed my nerves.\n\n\"Suzy and I have something we need to tell you.\" Our mother's eyes had already begun widening while dad was unreadable.\n\n\"Suzy and I have decided to remain together, long term. I know it may seem unusual that we would announce it like this, but you need to know. We are happy being together, raising Amber and having someone we each can depend on. Fact is, she is my best friend, and I'm hers. We are just comfortable the way we are.\" I felt Suzy's hand grab mine as I talked.\n\n\"So, you think you're both meant to be together? Do you have any idea what you're saying? This is crazy! This won't be allowed!\" Our mother was sitting straight up, stiff, her eyes almost wild. You could see the wave of negativity was just beginning.\n\n\"Mom, we want to help you understand, please,\" Suzy said, trying to head off what we both saw coming.\n\n\"Understand?! Understand what?! That two of my children decided to live together, permanently? What do I need to understand? Tell me! You, Luke, you know better. What has gotten into you? And you, Suzy, what am I missing? You think that you can...........\"\n\nIt suddenly all started to turn into a buzzing sound. I couldn't understand her words. I couldn't fathom her assault on us. Suzy's hand had slipped from mine and I felt isolated, not wanting to look up. I was looking at my hands on my knees. I began to feel small, stupid, like a child. I ventured a glance at Suzy. She was slumped forward, hands in her lap, looking like a child being punished, and taking it. I couldn't pull my eyes away from her as I looked at her face. She was looking afraid, alone, looking for help. My Suzy was looked terrified.\n\nAnd then I felt it, a wave crashing over me, something I had felt long ago, while behind a school building being pushed around by a boy. But this was far more intense! I have never felt such resolve, such power!\n\n\"ENOUGH!\" I was standing without realizing it, my body trembling.\n\n\"THAT WILL BE ENOUGH!\" I could feel my heart pounding in my temples. My eyes felt like they were burning.\n\n\"You will not talk to Suzy like that!\" my jaw clenched tight, holding back the best I could, the anger that threatened to overwhelm me.",
        "Suddenly I felt two small hands, taking hold of my fist. Small fingers, working their way between mine softening my clenched hand. They were soft and gentle, soothing my tempest, draining my anger.\n\nI looked down into the upturned face of my Lil Sis. Her countenance was one of peace and adoration. I melted in her gaze, my jaw relaxing, my pulse slowing. Momentarily she had me trapped, and I was hers, to do her bidding.\n\nI saw her mouth form the words 'it's okay', as a smile crossed her mouth and I knew everything was indeed okay. I looked back up at my parents, my mom's face stunned, and her mouth still open. Dad was looking at me, his eyes searching for something.\n\n\"I will not allow you to disrespect Suzy in our home.\" I took a short pause, trying to remember what I had rehearsed, and found it lost to me. I guess I'd just have to talk from my heart.\n\n\"We invited you over tonight because of our respect and love for you. We do not ask for your support. We do not require or ask for your permission. In fact, there is nothing we need from you. Suzy and I have committed ourselves to serve one another, have taken personal vows. The rings you see represent our commitment to each other. This is merely a courtesy to you. You will not be welcome into our home if you bring judgment or condemnation with you. If you wish to talk about it with us, we are willing. But only if you show respect, otherwise, stay home. Is that understood?\"\n\nI was looking at our mom when I asked. She had not met my eyes, instead looking down at the floor.\n\n\"Is that understood?!\" I was still directing this at our mother.\n\n\"Son\" I looked at dad; he had an expression of concern. \"We understand. Please, forgive us.\" Mom still hadn't made eye contact.\n\n\"If it's alright, I think we had better go. Give us time to process this, it's a load. Is that okay?\" dad asked, as he stood, and reaching down, had taken mom's hand.\n\nHelping her to her feet, he began walking her to the front door. I just looked at our mother, unable to think of anything to say, stunned by the ferocity and manner which I had spoken. I felt a small pang of remorse, but stood, not moving. Suzy had stood beside me, her body gently touching mine. Our parents opened the door and stepping through, headed for their car.\n\n\"Dad\" I called out as I closed the gap to them quickly. \"I'm sorry for my manner, for being angry. It was wrong to lash out. But I meant what I said. Please understand.\"\n\n\"I believe we both understand. Don't worry son, no bridge was burned tonight. We'll talk some more later.\" He gave me a crooked grin, then looking past me, broadened his grin into a smile for Suzy. Turning he escorted mom down the walk, not looking back. Mom hadn't spoken a word since I rebuffed her; she just kept her eyes to the ground. I hoped she was going to be alright.\n\nI watched them get into their vehicle as Suzy came up alongside me, taking my arm. As they pulled out into the street I closed the door. Taking a deep breath, exhaling through pursed lips, I turned to Suzy. We immediately embraced. Another pair of arms encircled us both as Amber came to us, to give comfort or receive comfort, I didn't know. I could feel Suzy shaking slightly, I heard her stifled sob. Shifting an arm, I included Amber in our group hug, at the front door.\n\n\"It's going to be okay\", I spoke softly. \"The hardest part is over. Now we just wait.\" I paused to kiss them both on top of their heads. \"I'm sorry I reacted like that. I was rough on mom.\" I still had guilt tugging at my heart.\n\nSuzy looked up, again with that look of adoration.\n\n\"It needed to be said. I needed you to say it. I love how you charge in swinging to protect me and our daughter. I wouldn't change a thing. You can't know how loved it makes me feel.\"\n\n\"Yea Dad, that was awesome!\" Amber was also looking at me, admiration in her eyes.\n\n\"I appreciate it, both of you. It's not easy being the sledge hammer.\" I still felt remorse, deep down inside.\n\nWe hugged just a little longer, then breaking up, heading into the kitchen. I grabbed my unfinished beer and sat at the bar as I watched Suzy and Amber in the kitchen, cleaning up for the night.\n\n\"It's not all that late. Is anyone up for a night swim?\" I said. I was way too keyed up to be getting ready for bed just yet. This was something that always relaxed me, and everyone else for that matter. Both girls liked the idea, and soon we were in the pool, lazing about, and working off the tension.\n\nLater, after sending Amber off to bed, and getting our own night time clothes on, Suzy and I sat together on the couch. She was leaning into me, eyes half closed, enjoying our proximity.\n\n\"You did well tonight pack mule. I want you to know that.\"\n\n\"Thank you. I do feel I was rough on mom though.\"\n\n\"No, it had to be said. You know mom, always right and rigid to a fault. She had no business saying the things she did. You put a stop to it and drew a line, to protect the ones you love. What else were you to do?\" She was right of course, and I let her know it.\n\nSuzy scooted down and laid her head in my lap, looking happy and relaxed. I did feel better about tonight, but still was second guessing myself. I clicked on the TV and turned to the local news. Suzy fell asleep part of the way through, and I just let her sleep. I did however take the opportunity to lift her ponytail and smell her lightly damp hair. The aroma was stronger like this, and it was wonderful.\n\nThe news concluded and knowing we needed to be heading for bed I woke Suzy up. \"Sorry Lil Sis, time for bed.\"\n\nShe stretched mightily, yawning, \"Oh, already? Carry me,\" looking at me through half closed lids.\n\n\"Lazy git\" I smiled.\n\nSliding out from under her head I stood and turned, scooping her up in my arms. She placed her arms around my neck, burying her face in me.\n\n\"I wanted to give you a special gift tonight\" she sleepily muttered. \"Now I find myself too tired. I'm sorry.\"\n\nI chuckled.\n\n\"How about tomorrow night?\" I asked.\n\nShe nodded weakly, \"Yes, tomorrow.\" She was nearly asleep when I laid her down and helped her slip out of her robe. I looked at her before covering her with the sheet, so sexy, so cute in the oversized tee shirt and little cotton panties. God, I don't believe there was a thing I wouldn't do if it meant being with her. I took a deep breath, shivers and goose bumps ran over my body as I exhaled quietly. I covered her.\n\n------------------------------------------------------------\n\nThe next day was per usual, our family continued in its familiar routine. Work went well, the girls got a swim in at the school and Suzy had begun her online classes when they got home. She was so excited; she was more energized than usual when I got home. We all recanted our day's events at dinner as we always did. It was such an enjoyable tradition, one Suzy had implemented a long time ago.\n\nI remember when I would call home on my cell, and talk to Suzy about everything that happened, in real time. I liked keeping her informed, wanting her to be as big a part of my life as possible. It wasn't long after we had bought our home that she put an end to that. At first I wasn't sure what the end game was, but now I know. Allow me to explain the brilliance of what she imposed.\n\nBefore, we shared our day with each other, as the day progressed. Come dinner time we didn't have much to talk about, other than to rehash what we both already knew. Some little things we would discover got left out, but generally speaking, all old news.\n\nBut now, I am excited to get home and share my day. Everything is fresh and new, telling about what happened, face to face, interacting up close and personal made a huge difference. Plus the anticipation of our sharing time, especially at dinner, was delicious. It is such a part of our way of life at this point; I can't imagine doing it any other way.\n\nOur cell phones are now strictly for errands, business and emergencies. Personal details or events are prohibited, unless someone wasn't going to be home that evening. That only ever applied to Amber, when she'd spend the night at a friend's. This simple rule showed Suzy's wisdom, her understanding of what life was meant to feel like. It is one of the things that have kept our family so tight and involved with each other over all these years. It is something I have advocated to others, when the chance presents itself.\n\nAnyway, back to the story. That evening Suzy and I were watching Amber swimming laps, from our bench in the yard, holding hands. Suzy reminded me that she had a treat for me.\n\n\"So........any idea what I have in store for you?\" she began, teasing.\n\n\"Well, something sexual I'm hoping\", keeping my voice low.\n\n\"That's too easy and general. Care to take a guess? And be specific.\" Her eyes were flashing brightly from the low lighting coming from the pool.\n\n\"I can only guess that it entails a part of my anatomy and a part of yours. Beyond that, I won't venture. You know how much I love surprises.\" She giggled to herself.\n\nStanding up she informed me she was going to go get ready and I was to watch Amber till she was finished. I could only grin, enjoying the anticipation.\n\nAmber finished up and went to get ready for bed. I hung out at the bar, looking over tomorrow's work agenda. Suzy came out of the bedroom with her customary night time ponytail, in her robe, possibly naked underneath, as I saw no sign of a crew neck collar. She busied herself in the kitchen as we waited for Amber to come back out and give us our goodnight kisses. We didn't wait long and soon we headed into the bedroom together. The things that were running through my head, about what to expect, was giving me a fairly stiff boner. I went into the bathroom and made sure I was cleaned up, and impulsively scouted for any clues as to what she was planning.\n\nSuzy was sat on the side of the bed, facing me when I walked into the room. Upon seeing me she stood and with a huge smile, pulled the bow releasing her belt, letting the robe fall to the floor.\n\n\"See anything different?\" she asked. Indeed I did! Her pussy was hairless! My dick jumped in my pants.\n\n\"Holy..., Suzy. When did you do that?\"\n\n\"Yesterday morning. So, you like?\"\n\n\"I love it! It looks so.....so......\" I didn't know the words I could use that didn't make me sound like a pedophile. It looked like a child's. If she didn't have breasts, I might have gotten uncomfortable.\n\nSuzy was watching my face, puzzled by my speechlessness. I think she saw my struggle to convey what I was thinking. Then she blushed, covering herself with her hands.\n\n\"It's too much, isn't it?\" she looked down sheepishly.\n\n\"It's beautiful, very arousing. Let me see it up close.\"\n\n\"First you tell me what you were thinking. You looked conflicted.\" She was not joking around, from the tone in her voice. I dropped my head in an exaggerated fashion, making a loud sigh.\n\n\"Alright, but you're killing me here you know.\"\n\n\"I know.\"\n\nSo I explained my momentary dilemma. She laughed, finding it funny that she had the same thought after seeing it for the first time.\n\n\"I hope this isn't going to be a problem for you. I like the way it looks and feels. I've been horny all day, sticking my hands in my panties, feeling it.\" She was feeling more than a little bolder than usual. I wasn't sure what to think about it.\n\n\"I have no trouble with your childishness.\" I hit that last word, looking to make a pun.\n\n\"Oh, that was cleaver. Okay then, Pack Mule, show me how much you like it.\" She sat on the bed and scooted on her butt, all the way on, lying down.\n\nDropping my shorts I crawled up beside her, and looking her over, began running a hand over her body. I loved how soft and smooth she felt. There was nothing I could compare it too. Kissing her, I ran my hand across her bald pussy. It was warm, sticking to my skin from the perspiration and dampness. I took a finger and ran it between her lips, feeling her slickness. She was already warmed up from the anticipation of this moment.\n\n\"You're so hot, you know that?\" I quietly pointed out, the lust building within me. She just smiled and sighed.\n\nI moved down to the edge of the bed and standing, grabbed her behind her knees and pulled her to the edge. Getting on my knees I lifted her legs and spread her wide, watching as her lips opened up to me, her fragrance igniting my passion. Putting my lips to her, I kissed her newly defoliated pussy. It's silky smoothness a pleasure to experience. Putting my tongue to her full lips, I wet her flesh, fully covering her with my saliva. She was enjoying the sensation immensely, her breathing being sharp and irregular. I took my lips and puckering them, slid them all around and across her mound, punctuated by an occasional sucking of her flesh. It was something I had never experienced before and I loved it! My cock was throbbing without a hand being laid on it. Suzy was so wet her fluids were running down between her cheeks and everything was getting soaked, my face, her ass and the sheets.\n\nSuzy was beginning to moan and grunt when I decided I couldn't take it anymore and stood, wanting to ram myself into her.\n\n\"Not so fast,\" Suzy breathed. \"Up here and lay down.\"\n\nI watched as she rolled out of the way, patting the bed next to her. Obliging, I crawled onto the bed and rolled onto my back. She quickly threw her leg over me and positioning herself over my face, lowering her soaking wet pussy onto my mouth. I was more than happy to be eating her. It looked so young and fresh, I dove in like a man starving. Suzy had also begun sucking on my rod. I could feel her passion as she ran her soft lips in long steady strokes. Her hand had a hold of the base of my cock, giving her leverage. I loved doing a sixty nine; it was my favorite form of foreplay.\n\nWith her legs spread wide over my head, I had my hands on her back, slowly running them the length of her. She shivered, goosebumps exploding across her back as she lifted her head, breathing heavily. I could tell she was closing in on her climax, so I pressed the issue. Taking a cheek in each hand, I squeezed and pulled her pussy hard into my busy mouth. She bent down to take my member into her mouth again, but rose back up on stiff arms, gasping for air as I clamped my lips onto her swollen clit. Her trembling slowly turned into spasms as she began to circle the drain of her release. And then it hit her!\n\nHer juices suddenly washed over my face as her body shook, arms giving away, her body falling onto mine. I could hear what sounded like open mouth grunting. I held her tight to my mouth, continuing my assault. Just as I thought she was finishing, her legs straightened out forcefully, pulling her pussy away from my tongue, her body shook violently, briefly, then she was still.\n\n\"Oh my god!\" she barely managed to say, gasping for air. Suzy was slick from a light sheen of sweat that covered her body, hair sticking to her forehead as she rolled onto her back.\n\n\"That was incredible!\" Her smile broad, her face filled with contentment.\n\n\"I love watching you during your orgasm. I just wish I could have seen your face just now. I wish I could feel what you do, Lil Sis.\"\n\nShe turned her head to look at me. \"If you give me a minute I'd like to try and give that to you.\"\n\nI bent down and gave her a quick kiss, letting her catch her breath.\n\nGoing into the bathroom I grabbed a fresh towel and sitting next to her, dried her off. She lay calmly, watching me. I wiped her wet pussy last of all and she shuddered in delight, giggling at the pleasure she felt. I stretched out next to her and she rolled onto my side as I hugged her close.\n\n\"I have another surprise for you Pack Mule. I'd like you to stand for it.\" With eyes gleaming, her excitement was plain to see.\n\nI scooted to the edge of the bed and stood, Suzy close behind. Coming around she got on her knees and took a hold of my still straining manhood.\n\n\"I'm going to suck you off to completion, and I want you to watch the whole time.\"\n\n\"I'd like that very much.\" I was getting excited myself at this prospect. I never had Suzy finish me off this way as it tended to take too long and I felt selfish making her work so hard for my pleasure.\n\n\"Oh, one more thing, I want you to cum in my mouth, no pulling back. Okay?\" My head nearly exploded! I never imagined she would try this! Suzy was a little reserved and this felt a little out of character. She had inadvertently gotten a little cum in her mouth before, and had commented that the taste would take some getting used to. This was very bold of her.\n\n\"Are you sure about that? I'd love to see it, but you don't need to do something that makes you uncomfortable.\"\n\n\"I want to do this for you. It's my special gift for the man I love. So just relax and enjoy the show.\" I nodded, smiling like an imbecile.\n\nShe started by licking my head thoroughly, extending the caresses of her tongue along my shaft as things became wet and slick with her saliva. She looked up at me, watching me watch her as frequently as she could. I knew this was going to be special indeed, the desire in her eyes was an aphrodisiac, stirring something in me. After I was all lubricated she engulfed me and began a slow methodical rhythm, taking my cock as far as she could. Our eyes remained locked as I enjoyed the brashness of ogling the action before me. Taking a hand she took hold of my balls, squeezing them lightly, her rhythm uninterrupted. I watched my glistening rod disappearing into her delicate mouth, only to emerge. Again and again, her lips slid along me, tightly sealed around my shaft. I watched as her lips folded inward slightly one moment, only to elongate and extend as they withdrew. It was almost hypnotic.\n\nThen she changed her tactics. She opened her mouth wide as she slowly took my cock into her, then wrapped her lips tightly around and withdrew. Again, mouth wide, then dragging her lips off. Her eyes remained fixed on me as I watched closely, enthralled. I could feel myself throb each time she closed her lips around me. My orgasm was beginning to show itself. Again, with open mouth, she slowly hid my cock from view, only to wrap her lips tight around my tool, then sliding off until my head pops out. This was the best head job I had experienced. My release was beginning to build deep in my groin.\n\nSuzy opened her mouth wide again as she engulfed me, but she suddenly stopped and closed her eyes. I felt her tongue slid forward along the underside of my cock, then watched as she pushed her mouth further down, nearly taking me entirely. Closing her mouth she pulled back off slowly, my cock jumped with a large throb. That felt amazing! She went down again, and again stopping to set herself up to take me fully this time. Her lips closed around the base, dragging some pubic hair along as she withdrew. She opened her eyes and smiled, opening her mouth and going back down a third time. This time she didn't hesitate or close her eyes as she bottomed out on my abdomen. My cock throbbed hard again, the visual was almost overpowering.\n\nHer mouth had become full of thick saliva as she spit it into her hand, then grabbing my balls, rubbed her slippery juices all over them. Scooting herself a little closer she sat on her heels and pulled on my scrotum, causing my cock to angle downward. Staring up into my eyes she began sucking my member, slowly moving ever deeper until she stopped sucking and engulfed me to the hilt. She fondled my balls as she stroked her mouth over my cock, each time taking it all in. She placed her other hand on my ass to steady herself and gain leverage as her movements began to increase. I watched, stunned as my cock disappeared entirely into her mouth, over and over, the tempo steadily increasing. My orgasm became suddenly imminent as I was transfixed on this erotic display.\n\n\"I going to cum\", was all I could say as I felt myself throbbing, the fluids pushing toward my head.",
        "I saw the corners of her mouth, on either side of my dick; turn up a little in a smile, her eyes bright with excitement. I kept my eyes on her as I groaned, my mouth hanging open, Suzy quickly pushing me fully into her, both her hands on my butt, holding her lips tight to my abdomen. I erupted, my body shaking, emitting guttural sounds, as I felt my cum erupting out of me. Our eyes never left each other's as my semen shot down her throat. I ejaculated several times, each load felt large and satisfying.\n\nSuzy remained steady, watching my orgasm, as she waited for me to finish. When it was clear that I was done she slowly slid her lips off.\n\nI went to sit back onto the bed, my legs feeling a little wobbly, but Suzy quickly grabbed my cock, keeping me standing. I was beginning to soften as she took hold of me and placed her lips on my head. I felt suction as I saw her cheeks sink inward with the applied force. I shuddered as I could feel the suction all the way down my cock, a delightful tingle. Pulling off I saw her swallow what little she was able to draw out of me. She then released her grip and stood in front of me, a proud smile, huge across her face.\n\n\"So, how was that?\" she asked delighted. I sat down on the bed and pulled her closer, my hands on her hips.\n\n\"That was the single most erotic thing I have ever witnessed. When did you learn to do that?\" She threw her arms around my neck, forcing me onto my back as she lay on top of me.\n\n\"I taught myself after watching some videos and reading some blogs. It's also where I got the idea to remove my hair\" as she wiggled her pussy on me. \"I've been practicing for a while. I wanted to do it perfect and surprise you. I'm glad you liked it.\"\n\n\"Liked it? That is a colossal understatement! It was fantastic! I'm nearly giddy knowing you can do that. It's like something you would want to brag to all your friends about. Seriously, it's mind blowing.\"\n\nSuzy was laughing, almost silly, delighted by my comments. She planted her lips on mine and kissed me deeply, her emotions elevated and ecstatic.\n\n\"Thank you Pack Mule. You make me so happy.\" Her voice cracked. She lay her head down on my shoulder, breathing slowly and deep.\n\n\"I love you Lil Sis. You continue to amaze me, even after all these years.\"\n\nWe were both wet with perspiration, but it didn't seem to matter. We just lay there, brother and sister, only feeling the love we shared.\n\nAfter a time, before sleep overtook us, we got up and readied ourselves for bed. Lying together we held each other in our usual position, intertwined with Suzy half on me. My mind was empty of worries, I only felt Suzy's weight, her chest expanding and collapsing as she breathed her warm breath on my neck, her contours under my hands, her softness and warmth where our skin was in contact. I felt her take a deep breath and let it out. Soon we fell asleep.\n\n-----------------------------------------------------------------\n\nThe next morning I awoke to Suzy gargling in the bathroom. Not a normal routine for her. Getting up I headed to the bathroom to chase her out so I could relieve myself.\n\n\"Good morning Lil Sis.\" I put my arms around her, pulling her back into me and gave her peck on the neck. \"You feel a sickness coming on?\" She gave me a crooked grin in the mirror.\n\n\"No, my throat feels a little sore\", she quietly replied, her voice sounding a little horse. She touched her fingers to her throat and sighed, giving a look of dismay.\n\n\"Is that from last night?\" I ventured a logical guess. She nodded sheepishly. \"Well, I guess that it's not something we should do with any regularity. I don't want you risking permanent injury. I love the sound of your voice.\"\n\n\"That's fair to say\", she murmured, keeping her voice low. \"We'll see what happens next time, when I'm ready. Maybe it's a onetime thing.\"\n\n\"Maybe, just don't risk yourself or your health over such things. Promise me?\" Suzy nodded. \"Now leave, before I have an accident.\" She giggled and left me to my morning routine.\n\nWe talked about our upcoming day as we ate breakfast, as per routine. Suzy talked in a low tone and softly, explaining to Amber she had a sour throat. Amber grilled her about taking her vitamin C and gargling, she should even do a nasal rinse, just in case. Amber enjoyed taking the role of being mom when either one of us got sick. I remember Suzy being just like that when we were growing up.\n\n\"Are you going to be okay getting into the pool today? You can't afford to get a chill or swallow any of that water,\" Amber said, continuing her parental exercise.\n\n\"Yes mother, I'll be fine. I'll be sure I keep my towel close and limit my time in the water,\" Suzy responded with kind sarcasm.\n\n\"Thank you. And dad?\" I looked at her, \"Can you take care of the dishes this morning? I know it's my turn, but right now mom and I need to get going,\" Amber said, glancing at the clock. Suzy also looked at the clock.\n\n\"Yikes!\" She jumped up. \"Meet me at the car\", as she hurried out of the kitchen, headed for the bedroom. I got up more leisurely and began clearing the table. I had an hour to get to the job and it was twenty minutes away. Amber came up and gave me a goodbye hug and kiss.\n\n\"See you tonight dad. I won't be around at lunch; mom's taking me to Vicki's after practice. Love you\", as she rushed out.\n\nVicki was June's oldest child and a year older than Amber, making them the two oldest cousins and my parent's oldest grandchildren. They were close and were always talking on their cells or texting. They didn't get to spend nearly as much time as they'd like together, being as they lived across town from one another.\n\n\"Love you too,\" I called out.\n\nSuzy came rushing toward me, dropping her bag and throwing herself onto me.\n\n\"I'll see you at lunch.\" She planted a hard, deep kiss on me that had me gasping for air. I wasn't ready for that. She laughed delightedly at my discomposure. \"I get my official school coaches swim suit today! I'm so excited!\" she said, a little hoarsely. She was like a little kid.\n\n\"Well I'm looking forward to seeing the sexiest coach alive modeling it for me tonight.\"\n\nI actually was excited to see it. I loved seeing Suzy in all sorts of new looks. I actually liked going clothes shopping with her and Amber so they could model for me. I just loved being with my girls.\n\n\"I love you Pack Mule,\" she said as she grabbed her bag and headed out the door.\n\n\"I love you too....Suzy!\" I caught myself before yelling 'Lil Sis' out an open door. She raised her hand acknowledging that she heard me.\n\n-----------------------------------------------------------------\n\nDuring lunch we talked about Amber and the progress she was making. I was glad to hear Suzy's voice was back and already feeling much better.\n\nSchool was going to start in three weeks and the first competitions would start two weeks after that. Suzy was very excited about the prospects of Amber showing off her swimming skills in front of a crowd.\n\n\"She is already the fasted girl on the team in the free style. And she's very strong with the back stroke and breast stroke. Her weakness is the butterfly. But that will come when she gets stronger as she gets older. I just wish they'd let freshmen compete on the varsity team. The only way she could do that is if a varsity member dropped out and they needed someone to fill out the team.\"\n\n\"The team is pretty well staffed then I take it.\"\n\n\"Yes and they're all good swimmers too. It's a good team. If I could only get Amber as an anchor for the medley relay, we'd be formidable.\"\n\n\"Just like you were.\" Suzy gave me a look of appreciation.\n\n\"I'm a little surprised you remember that. What else do you remember?\"\n\n\"I remember a lot more than that\" I smiled.\n\n\"You two knew each other in high school then?\" Bob asked.\n\nSuzy's eyes went wide and she turned a little pale. We got so engrossed with our conversation we forgot Bob was sitting nearby. Suzy was facing me so Bob couldn't see her face, or the grimace she shot me.\n\n\"Oh yea, I had a huge crush on her all through high school. After school I pursued her till she gave in and married me.\" I was proud how smoothly that came out of me. Being a half-truth helped.\n\n\"Well done. You caught yourself a prize,\" Bob commented.\n\nSuzy turned to face him, her composure returning.\n\n\"You're too kind. The both of you,\" she blushed lightly. Bob just chuckled and continued eating.\n\n\"I've got more news but I'll make you wait till tonight. Amber will want to hear it too.\"\n\n\"I look forward to it.\"\n\nAfter Suzy left, Bob and I geared up to get back to work. Bob was looking thoughtful, even laughing to himself.\n\n\"What's up with you?\" I was interested in what the inside joke might be. Bob smiled and went to speak, then hesitated a second.\n\n\"I was just thinking to myself......, just take this as the ramblings of an old man who has been around and seen a lot of things. That wife you got there is a rarity. I don't think I've known anyone like her. Whatever you did or were doing to land her, stay on it. Seriously.\"\n\nBob's face was as serious as I'd ever seen it. I looked at him a moment, thinking on that very thing.\n\n\"You know, I've had those very thoughts on many an occasion. Thanks.\" I felt a surge of pride and love for Suzy, the feelings I always got when I thought too long about her.\n\n\"Keep that to yourself. Don't want her thinking I'm sweet on the boss's girl,\" he said smiling again, back to his usual self.\n\n---------------------------------------------------------\n\nWhen I got home that evening I was extra excited to see her. I quietly swooped in behind her, as she stood at the counter, scooping her up in my arms. Her hands were wet with the vegetables she was preparing and a large knife in her hand.\n\n\"Whoa! Watch it! You want to get hurt?!\" as she held the knife away from us, a look of anger crossing her visage.\n\n\"I was just reminded today of how special you are and how lucky I am to have you. I couldn't wait to get home to see you.\"\n\nShe had gone white, and then blushed brightly. I didn't expect such a strong reaction.\n\nI went to give her a kiss, but she pulled back, gesturing with her eyes. Turning my head I looked over my shoulder. Rich was standing there, his wife next to him. June was sitting down, her eyes wide, and a hand over her mouth. Behind them was Amber, her head bowed, a hand covering her forehead and one eye, her head shaking. And next to her was June's oldest daughter, Vicki, a huge grin on her face. Holy shit! I felt the blood drain from my face.\n\nI set Suzy down and muttered under my breath, \"You might want to plunge that knife into me now.\" She gave me an awkward smile.\n\n\"I wish I'd known we were having company,\" I said to everyone, with a forced laugh to match my forced smile.\n\n\"I'm sorry Luke, it was kind of impromptu. It wasn't meant as a surprise.\" Suzy said quietly, her voice sounding upset.\n\nI leaned in closer to her briefly and muttered under my breath, \"You can explain what happened here later.\"\n\nI shot her a crooked grin, but she looked like her time of execution had just been set. That gave me pause, believing she misunderstood my mood. I took her hand causing her to look up at me. I mouthed \"I love you\" smiling. The worry lines in her face soften.\n\n\"So?!\" as I clapped my hands, walking into the room, facing the group head on, \"What brings you all here?\"\n\n\"Was this the big news we were waiting for Suzy?\" Rich asked, his face not showing me much. His wife Stacey though, looked like the Cheshire cat.\n\n\"No... not really\" She looked at me, her eyes pleading. \"Luke?\" Suzy turned the floor over to me. She looked at me with concern, not sure what I was going to say. I gave her a helpless smile and shrugged lightly.\n\n\"Well, I guess there nothing left but to let it hang out.\" I paused, gathering composure before I plunged straight into it. \"Suzy and I are in love. We have been for a very long time, and recently we have come to acknowledge it. I know this must be a shock, but there's nothing like tearing a bandage off quickly, in one motion. So there you have it. So let's hear it.\" as I gestured with my hands, 'come at me bro.'\n\nRich looked at June then Vicki. June looked at both Rich and Stacey and shrugged, her eyebrows shooting up. Rich spoke first.\n\n\"This isn't news to us. Now, you saying it out loud, that is a little awkward. But we've been waiting to hear it confirmed for some time. I mean......June?\" Rich wasn't sure how to continue.\n\n\"We've known about this for a while. I know it was supposed to be a secret, but, well, I'm not sure how to say this.....\"\n\n\"You guys suck at keeping secrets!\" Rich blurted out.\n\nI once again was speechless, just like when Travis practically said the same thing. I felt Suzy slide her hand into mine, intertwining our fingers.\n\n\"Listen you two; you have been living with each other for years. Do you really believe we couldn't see what was going on between you all this time? It was obvious how you felt about each other,\" Rich said. Stacey was nodding.\n\n\"Besides that, a little bird has been keeping me updated with your progress.\" June added.\n\nI looked at her questioning. Out the corner of my eye I saw Amber hide her face. Looking at her I gave her a shrug, mouthing the word, \"you?\" She nodded, with an 'I'm busted' grimace on her face.\n\nI shook my head, \"It can't be as simple as that. I've been torn up at times thinking about telling you all. There has got to be some push back, or it won't feel real. I mean mom pushed back hard. That was real. But you guys, and Travis, I'm not sure what to think.\"\n\nJune's eyes went wide. \"Mom knows? And dad?\" she asked, almost in disbelief.\n\n\"We told them a couple nights ago,\" I acknowledged.\n\nThat got them more stirred up than the original admission. So Suzy and I told them the story of that evening.\n\nWhen we finished with the retelling, we asked for advice on how we should proceed with mom. Dad was a lot more understanding and patient about things; he wasn't going to be an issue. But with mom, it was decided to give her a week to mull it over and talk about it with dad, who will help her cope. If we didn't hear from her in a week then we'd contact her and talk to her again.\n\nI also pushed them for some kind of feedback. I couldn't believe they were one hundred percent okay with it. June summed it up nicely for the rest of them.\n\n\"We can't tell you how to live your lives, or tell you who to love. It might not be the most ideal situation, but you're both happy. Amber is happy, and normal.\" That got a chuckle. \"We have known this was inevitable, and seeing how happy you two are when you're together is proof. But there is something that needs to be said.\" June paused, looking reluctant. \"I can't excuse your relationship as normal to my children. Vicki understands better because she has been watching with the rest of us and talks with Amber about it. But I would ask that when in my home, you be careful and use discretion.\"\n\nI saw in June's eyes that she was pained to say that.\n\nShe quickly added, \"The ironic thing is, I'm not sure if I can cite a better example of a loving and caring relationship. So....... it just makes it a little awkward on how to explain what you have.\"\n\n\"We understand June, and thank you\", Suzy said. \"I think I'd feel the same way if I were in your shoes and yours Stacey, Rich. If you would rather we not interact with your children, I'd understand.\" You could see the sadness in Suzy's face.\n\n\"No, that is not what I'm saying, or want. Rich?\" He shook his head.\n\nJune continued, \"You are always welcome in our homes, you're our brother and sister. The little ones will slowly, over time, come to an understanding, and maybe there will be tough discussions coming because of it, but you are to remain in our lives. Just don't hang all over each other all the time. Is that fair to ask?\"\n\nSuzy was beginning to cry as she stood up and walked over to June, who stood as they hugged. She then hugged Stacey, then Rich.\n\n\"We love you guys so much. Thank you for understanding us. It feels as though the world has been lifted from my shoulders. Thank you....... thank you.\" She sat back down next to me and latched onto my arm, getting control of her tears.\n\nAmber had also come over and sat on my other side, taking my other arm. I felt conspicuous, like I was being rewarded for doing nothing.\n\n\"See what I have to put up with?\" Levity was always my weapon when I was a little uncomfortable.\n\nThe evening continued wonderfully, with good food and light conversation. Most of the conversation was centered on mine and Suzy's story. Just like Travis, they wanted to hear why we took so long to acknowledge each other's feelings. After going through it a second time I was almost embarrassed at how clumsy and stupid we both had been. At least our siblings got a kick out of it. June laughed that she totally understood how Suzy must have felt when she confessed, while dancing to 'that song'. It was one of her favorites.\n\nAfter dinner we sat around the family room again to relax when Suzy jumped up, and excusing herself left the room. Seconds later she strolled back in, holding a black one piece swim suit with 'coach' printed across the back.\n\n\"They approved my position as an assistant coach. I get to coach the swim team officially, starting next week\", Suzy said proudly as we began to congratulate her.\n\n\"This is more than the part time job they first discussed with me. They want me to assist in other sports as well. They couldn't offer a full time position with benefits just yet, not till I complete the course. But this is as close as they could get using the school board approval\", Suzy finished.\n\nWe expressed our love and pride for her and she blushed with the attention.\n\nThe evening wound down soon after. They all had to travel home, about thirty minutes away, and left us to clean up. Vicki stayed behind to spend the night, the last big hurrah before school started. It was such a relief saying good night, knowing that everyone we cared to know about us had been so informed. And on top of that, it had gone better than I had anticipated.\n\nOddly enough the subject of physical relations was never broached. Perhaps because of the presence of the two girls, Vicky in particular. Or perhaps it simply didn't need to be. In reality it was secondary to the emotional relationship Suzy and I had, and I think that was understood.\n\nAfter the four of us cleaned the kitchen, we all changed into our suits and hit the pool for a late night swim. Suzy wore her new coaches' suit for the first time. She was giddy like a child, so proud and happy. It actually looked very sexy on her. But then again, most everything did.\n\nSuzy and I sat on the pool steps, before calling it a night, admiring the night sky. The girls were talking amongst themselves, floating aimlessly. I suddenly remembered to ask about the events that led up to everyone being in the house when I had gotten home. Suzy grimaced, \"Oh yea, that.\" So she explained it.\n\nAmber had spent most the day with Vicki, at her house. When it was time for Amber to head home June offered to take her home, so she could spend a little time with Suzy, something they didn't get to do often. Upon hearing this, Suzy extended the invitation to June to eat dinner with us and make an evening of it. Hank, June's husband, was out of town on business and June liked the idea of getting away from her littler ones for the evening, so arranged a sitter and brought both girls with her. Confirming that June was going to be having dinner with us, Suzy called Stacey and told her about the evening plans and asked if they'd like to come as well. Stacey accepted, got a baby sitter, and as soon as Rich got home, joined us at our home for dinner. Whew! I was almost sorry I asked.\n\n\"How come you didn't tell me?\" I asked the true underlying question. Suzy looked sheepish and apologetic.",
        "\"I didn't think it a big deal. I knew you'd be happy to see them and since we decided to not say anything to them about us, I figured there was no pressure or concern. I didn't know you'd come in and sweep me off my feet.\" She grabbed onto my arm and pulled herself close to me, \"I loved it, by the way.\"\n\n\"Next time I'll look into the windows first to be sure who's in the house,\" I reached between her legs and grabbed the back of her thigh, squeezing. She squealed, and laughing, launched herself into the water. I dove in after her and scooped her into my arms. Without a word we just looked into each other's eyes, as I began cruising about the pool, holding her like a baby. I heard Vicki, then Amber giggle. I chuckled, still holding Suzy and turned to look at them.\n\n\"Isn't it time for you two to head for bed?\"\n\nThey both grudgingly conceded and climbed out to towel off. I watched them as they dried then headed into the house to get ready for bed. As soon as the door closed behind them I released Suzy. Spinning around to face me, she wrapped her legs around my waist as we embraced, our faces locked in urgent passion, our hands all over each other.\n\nLater that night, we made love. It was a long, slow, quiet grind that in the end had us both sweating profusely and shuddering through our orgasms, Suzy biting her lip to keep silent.\n\nWe showered together and then crawled into bed after changing the sheets. I still do not know of a more wonderful feeling, if feeling is even the right word, than lying in fresh clean sheets, Suzy on top of me, intertwined, her breath on my neck, the fragrance of her hair in my nostrils. In these moments I have never had another thought other than of her. No work stress, or thoughts of complications our lives might face. No thoughts as to how others may see us. Just my Lil Sis, and how good I had it.\n\n\"Good night Pack Mule. I love you.\"\n\n\"Good night Lil Sis. I love you too.\"\n\n-----------------------------------------------------------------\n\nThe days following our get together with our brother and sister things were hectic and busy. Suzy was spending more time at the school, getting acquainted with other staff members and learning her responsibilities. Amber was getting together with others of her social circle before classes started, gathering books, getting her schedule in order, the usual stuff before one begins high school. Evenings were energetic and interesting. Before Amber's first day we were ready and prepared and anxious for it to begin.\n\nToday Suzy was getting her physical for the school coaching job. It was set up during the last early morning practice swim. So as Amber swam, Suzy met with a contracted physician to check her over and take her blood for the required labs. I was working on the other side of town, so I wouldn't see her today at lunch. It was an uneventful, fruitful day of work and I headed home with the usual light hearted optimism I found myself in these days.\n\nOn a whim I stopped at a florist and picked up a bouquet of pink and red roses for Suzy. Next I picked up an expensive bottle of our favorite wine. I didn't do this often, the flowers or the wine. Firstly it would lose its significance if done on a regular basis. Secondly, it was expensive, and Suzy was frugal with the family budget. But tonight I wanted to congratulate her on the beginning of her new, dream job.\n\nWe enjoyed a quiet evening, the three of us. We didn't get into the pool tonight; instead we sat together and watched a movie we had all wanted to see. We had many a quiet night over the years. We were not boisterous or needy for attention, we simply enjoyed being near each other. It was always a calming and comforting atmosphere. We often heard comments from visitors, and especially Amber's friends, of how relaxing and peaceful it was to be in our home. And it wasn't simply a matter of us being quiet. We could get lousy and raucous when playing competitive video and board games. It was the atmosphere of kindness and consideration that prevailed in our home. The main source and center of this was of course, Suzy. And tonight was no different. As we sat on the couch watching, Suzy and Amber had maneuvered me into the center and both had put their feet on my lap as they lay, looking for foot massages. I obliged them as per usual.\n\nWhen the movie finished Amber kissed us good night and went to bed. Suzy turned around on the couch and laid her head in my lap, as I stroked her hair and massaged her scalp. We talked a little about the new job coming up for her.\n\n\"I'm going to miss not being able to bring you lunch as often as I'd like\", Suzy said as she turned her head to look up at me.\n\n\"I know. I'm going to miss it too. If it's too much, you can back off on making my lunches as well you know.\"\n\n\"Don't be silly. I love doing it. I'll be fine\", she smiled calmly, starting to look sleepy. I hadn't given her the flowers yet or the wine. They were in the garage refrigerator and I was saving it for before bed, as a lead up to something else I was going to treat her to.\n\n\"Why don't you go get ready for bed before I have to carry you. I've got a special surprise and I want you awake for it.\"\n\nI gave her a look, begging for her compliance. She smiled broadly and stretched, rolling over onto her stomach, before climbing off the couch. I slapped her butt.\n\n\"Go wash up. It'll perk you up. I have to go into the garage to grab something. I'll be in shortly.\" She sat up and leaned in for a quick kiss.\n\n\"Okay. Don't make me wait long.\"\n\nSuzy headed for the bedroom as I went to retrieve her gifts. I locked up the house and grabbed a couple of wine glasses before heading into the room. She was still in the bathroom, so I set the glasses and bottle on the reading table and lay the flowers on the bed. Soon she emerged.\n\n\"Congratulations Lil Sis, I'm very proud of you,\" I said as I saw her eyes light up upon seeing the bouquet.\n\n\"Oh Luke, this is so nice! Thank you! You really didn't need to do this.\" She was happily giddy.\n\n\"I just wanted to give you a private celebration to kick off your new career,\" I explained as I lifted the bottle, beginning to remove the foil. \"Come sit down with me and let's toast to your success.\"\n\nShe picked up her flowers and joined me, smelling deeply of the roses as she sat.\n\n\"Thank you. You are so thoughtful. I love them.\"\n\nI just smiled at her as I worked the cork loose and opened the wine. I poured us both a half glass and set the bottle to one side. Taking the glasses, I handed one to Suzy.\n\n\"Suzy, you make us proud to call you mom and wife. And you deserve to find further joy in the things you choose to do. So, cheers.\" We brought our glasses together and then drained them in one quick motion.\n\n\"Thank you. I am so excited for this. I don't know how things can get any better,\" her voice choked with emotion.\n\n\"Well, I do have one more special treat for you, if you'll indulge me,\" I said.\n\n\"Oh?\" she looked at me quizzically.\n\nI took her hand and led her to the bed. Relieving her of the roses, I set them on the dresser.\n\n\"This is all about you. I want you to take off your things and sit at the foot.\"\n\nWithout a word she began disrobing as I went into the bathroom. She was naked and sitting on the foot of the bed when I returned with a towel in hand.\n\n\"Now, I want you to sit on this and lie back\", as I folded the towel in half and lay it behind her on the bed. She scooted onto the bed and sitting on the towel, lay back, giving me a questioning look.\n\n\"Okay, this is how this is going to go. I want you to just lay still and close your eyes. No moving around or attempting to reciprocate. I'm in control here and you are to just relax and enjoy. Is that understood?\"\n\nShe was grinning ear to ear, her eyes sparkling. \"I can't watch?\"\n\n\"If you like, but you can't move. I want you to feel every sensation and enjoy a long slow build up to......., whatever happens. Try not to clench any muscles or force anything, just let it happen on its own. Make sense?\"\n\nShe nodded, the anticipation apparent in her face as she realized what I was going to do.\n\nI walked around the bed, turning the lamps down low. I removed my shirt and climbed onto the bed, next to her. \"Okay, here we go\", I quietly said.\n\nI took her arms and raised them over her head, laying them flat, then knelt down beside her, being careful to be close but not letting our bodies touch. I looked at her face and saw her expression was relaxed, her eyes closed. Good, she understands what I'm doing.\n\nTaking my fingers I began lightly running them over her body. Starting at her hands, I covered her arms, one at a time, with light caresses. I then moved across her shoulders, her neck and upper chest. I continued along her sides down to her hips. I covered her entire torso with my light strumming, making sure to avoid direct contact with her breasts, although coming tantalizing close. Goose bumps broke out on her body as I lightly blew across a nipple. She shivered. I delighted in watching the areola around her nipple contract tightly as her nipple stiffened. I couldn't resist gently sucking it. Suzy inhaled sharply, her body twitching.\n\nI climbed off the bed and walked around to the foot, where I took hold of her ankles and spread her legs wide, keeping them flat on the bed. Kneeling back down between them I began my light stroking of her body. I covered both legs first, feeling her tender skin down to her toes then back up, stopping just shy of her pubic mound. Reaching up I covered her with tantalizing sensations from just below her heaving breasts, both of which were topped with rigid, sensitive nipples. Her flesh routinely broke out in goose bumps at random, as her breathing became irregular, sometimes gasping as her body jerked from my touching a particular spot. I could tell her nerves were becoming increasingly sensitive as my touching was unpredictable and always wispy. I was enjoying exciting her, watching her slowly rising pleasure, feeling her soft smooth texture. It felt as though I was in a form of worship, as I watched her reactions closely, desiring to give her pure pleasure. Suzy began to clench muscles here and there as her level of excitement increased.\n\n\"I want you to concentrate on slow deep breathing only. Don't flex or seek release, just relax and let the pleasure come to you.\" She nodded, barely visible, her eyes remaining shut. I decided it was time to take it up a notch.\n\nLeaning over her form, I placed my hands on either side of her, suspending myself over her. Lowering my head I began tracing the tip of my tongue over her breasts, lightly flicking her stiff nipples when passing them closely. I covered those beautiful orbs thoroughly, careful not to neglect the underside of them. I noticed a slightly salty taste on her from a light perspiration. Her breathing stayed steady, but she grunted or groaned quietly as I worked her beautiful body with my wet caresses. Ever slowly I worked lower and lower, her skin quivering briefly when I reached her smooth abdomen. I swirled around her belly button then suddenly stabbed the tip of my tongue deep into it. She jolted; her entire body shook in a spasm, and then quickly subsided as she took a few deeper breaths, blowing out her pursed lips. I sat up giving her a chance to recover, not wanting to push too fast.\n\n\"You're doing wonderfully Lil Sis. No need to pursue it, just breathe and let it come to you.\" Looking down at her snatch, I could see her lips glistening with moisture. Her clit looked to be a little swollen as it protruded out further than usual, and I had yet to touch her there. I knew it was time to bring this to a conclusion.\n\nSliding back I grabbed her behind the knees and lifting her legs slowly, lowered them off to either side. She now laid spread wide, her pussy fully open to me. She was soaked, her delicate inner lips swollen along with her clit, a slightly darker pink. I blew lightly across it and she bucked instinctively with a grunt. I waited till she relaxed fully, and then lying between her legs, began to lick lightly the inside of her thighs. Her skin again quivered from my contact, but her breathing stayed steady. I traced the inside of both her thighs, the skin unbelievably smooth and silky. I continued on her thighs till I felt she was fully relaxed, simply enjoying the sensation.\n\n\"You're showing great control, very good. Just let it come to you naturally. Stay relaxed, don't think of anything.\"\n\nThe next tracing of my tongue was along her thigh and pussy transition. It is such a delicious bit of skin, pliable and tender. Her light saltiness and sweet musky odor adding realism to an otherwise surreal experience. I ran my tongue all around the outside of her large fleshy lips, taking a moment to flick the loose skin between her ass and womanhood. I continued giving attention to her hairless, slick pussy, and transitioned into a blending of sucking, nibbling, kissing and licking. I had no routine, as I wanted each action to be unique and unexpected. Suzy was beginning to squirm a little with my touches, trying desperately to remain inert, unable to control the involuntary muscle contractions in her legs and abdomen.\n\nHer clit was swollen and rigid. I touched it gingerly with the tip of my tongue, barely grazing it, causing her to jerk and inhale sharply. A slight blowing of air across it gave the same reaction with the addition of an outbreak of goose bumps. She was hypersensitive. I dug deeper into her, my tongue and lips working on her inner labia and moist opening. My touches were still light and feathery, making her desirous for more. Her breathing was becoming raged and irregular; quiet groans and whimpers as she struggled to remain relaxed and limp. I knew she was close, circling the drain, as it were. So I went in to finish her off and give her what she desperately wanted.\n\nClamping my lips suddenly around her clit, I sucked in the hard, prolonged nub as I slid a finger into her. She began jerking immediately as I hooked my finger into her G-spot, massaging, applying greater force on her clit. She half whimpered and moaned loudly, her hands clutching onto the bed covers as she bucked her pelvis into my face. Suddenly my face was wet. I lifted up from her and as I removed my finger a geyser of fluid hit me full in the face and neck. Stumbling back, blinking quickly, I saw another jet spray from her, hitting me in the chest. I extended my hand, shielding myself from a third forceful ejection, as I looked at her through blurry eyes. Suzy was quivering, her back arched, blankets snatched up and twisted in her hands, her head was back with eyes closed, grunting through clenched teeth. She ejected another pulse of fluid, this time a small gush and I stood looking down at her, stunned by the ferocity of her orgasm! And then she began shaking, her legs going straight, her back flat to the bed as a second wave seemed to hit her. Her quacking caused me some alarm and I worried suddenly that I had pushed her too far, that perhaps I had caused her to go into a seizure. Unsure about what I should do, I brought her shaking legs together and moved up alongside her, praying to myself she was alright.\n\n\"Suzy\" I quietly said.\n\nHer eyes slowly opened and she turned her face toward me, still quivering, though the intensity seemed to slacken. A light smile was on her face and I felt a wave of relief wash through me as I knew she was alright. She continued to stare at me and then saw a quizzical look come across her face. I knew immediately the source of her inquiry. I was dripping wet with her juices and must have looked a sight. I had to laugh.\n\n\"You blasted me\", I grinned, still feeling relief from my concern for her wellbeing. She gave a look of disbelief as she turned her head back, closing her eyes again.\n\n\"I feel chilly\", she breathlessly whispered.\n\nI climbed off the bed and removed the towel from beneath her. Taking the blanket from either side, I wrapped her like a swaddled baby. I then quickly grabbed a fresh towel and wiped myself off, feeling a chill myself and climbed back onto the bed, lying next to her. Pulling a pillow under my head I lay on my side, sliding my arm under her head and clutching her to me with the other. I just lay there, looking at her face, a quiet smile on her lips. As I watched her, feeling her breathing with the rise and fall of her chest, I couldn't help the warmth of emotion that started in the center of my being, and radiated out to my every extremity.\n\nIt felt like I was looking at the key to my existence. I felt as though without her I had no reason to draw breath. I had the powerful impression that our lives were exactly as they should be. That Suzy and I were brought into this world to nurture each other, to watch over each other, to make sure neither of us got lost in this world. It was as though by design we were brother and sister, so as to guarantee our lives would be intertwined forever. And thinking back on our lives growing up only strengthened that impression.\n\n\"What are you thinking?\" I suddenly realized she was looking back at me.\n\n\"Just what you mean to me.\"\n\n\"I was hoping that was it. You looked so intense and serene at the same time. You can't know how happy you make me feel.\" She had tears in her eyes and her chin was quivering.\n\n\"I can guess Lil Sis, because I feel it too.\" I bent down and kissed her gently.\n\n\"Can you grab my panties and a towel? I feel too weak to get up.\" I smiled and got up to move. \"I'm sorry I can't reciprocate tonight. You've drained me to the core.\" Her voice was sweet and apologetic.\n\n\"Oh please, it was my pleasure. One for the record books actually\", I chuckled, getting up off the bed and getting her a towel. She opened the blankets and I wiped her down and cleaned her up, then helped her slip her panties on.\n\n\"You want your night shirt?\" She shook her head as she climbed in under the sheets and settled on her pillow. I did the same and as I lay down she rolled into me, kissing the side of my face.\n\n\"You take such good care of me, thank you\", she said.\n\nI held her in my arms, that old familiar soothing feeling settling onto me.\n\n\"Did I really get you all wet? I don't remember it.\"\n\nSo I told her all about her ability and how much pleasure it gave me, up until I became concerned for her welfare.\n\n\"I remember feeling some unusual pressure, then a wonderful feeling of release through my body. Then I was hit with the most intense orgasm I have ever experienced. I think I blacked out, but I'm not sure. Whatever you did to me, was incredible. Maybe we can do it again sometime.\"\n\n\"Only if I'm certain that you will be alright. You frightened me.\" Suzy touched the side of my face.\n\n\"I was more than alright and I love how much you care.\"\n\nWe didn't talk much after that, we just lay quiet and slowly drifted off to sleep.\n\n------------------------------------------------------------------\n\nNearly a week had gone by, and one evening, Suzy had some important news for Amber and I. Apparently, mom had called her during that afternoon. They had a long talk and had come to an understanding about how our lives would continue. Suzy made mom feel heard and allowed her to list her concerns. I was happy to hear that at one point, mom had become aggressive and Suzy told her to stop, or she was going to hang up. Suzy demanded her respect, and in the end, mom gave her the respect she required of her. It sounded like mom had promised to behave around us and in our home. Although I did take note that there was no mention of our physical relations. I guess the old adage \"ignorance is bliss\" held true.\n\nFinally at the end of the call, mom had apologized, and asked Suzy to give me her apology as well. It seemed as if there were small details left out, perhaps personal details shared between a mother and her daughter, but it concerned me not. Suzy was happy with the conversation and felt like it was time to move on. Our lives were our own, and only we could alter it.",
        "------------------------------------------------------------------\n\nSchool started and a new routine descended upon our home. Breakfast was a little earlier and we all left the house together, although going our separate ways. We still had our morning day planning sessions and our evenings of sharing what we each did that day. We swam a little less frequently now, as Amber took a swim in the school pool every day after classes as part of her practices. And of course Suzy was there, getting in her personal swims early, before coaching the girls. She also spent time with the other coaches, still learning the schedules and routines which adjusted slightly after school got under way. Our life was busy, beautiful and satisfying.\n\nIt was a week into school and soon the swim meets were to start. Football also was gearing up for its first game of the year. I went down to the school after work one day and picked up season tickets for the games. We all enjoyed football, usually watching our team play every Sunday as a family. It was something Suzy and I had started doing back in high school.\n\nAfter getting tickets for myself and the discounted tickets for Suzy and Amber, I headed for the pool area to watch my girls at practice. I found an inconspicuous seat in the stands and sat back to watch without interfering with their regular routine. As I watched, I could see that Suzy was by all intense and purposes, the head coach, if not by name, then by action. The actual head coach, Diane, deferred to Suzy regularly, and Suzy was the one running the drills. The girls obviously loved her as I could tell through their body language when they interacted with her. It was also telling how they all seemed to gravitate to her side, talkative and animated. Yea, that was Suzy. She always had that effect on people. I watched her, pride swelling in my chest. She was so comfortable being in charge of these girls. Amber was obviously enjoying it as well, a smile on her face every time she looked in Suzy's direction.\n\nAs I watched, I saw what appeared to be another coach, male, walk up to the pool. He approached Diane and spoke with her briefly, then walked over to Suzy's side. I didn't care much for his posture as he stood beside her, facing her as she looked out over the pool. He seemed to be leaning in over her, either to be close to her or trying to get a better look down her swim suit, or both. Suzy had folded her arms and didn't seem to give him much attention, although his mouth had been moving, saying something to her. Then I saw him put a hand in the small of her back, on the further side, nearly placing an arm around her. She quickly removed his arm from her and refolded her arms. Then as I watched, he leaned in too close to her, nearly touching her shoulder with his chest and said something into her ear. She turned her back on him and walked a few steps to the side; turning to face the pool again, arms still folded. I didn't appear she spoke a word to him.\n\nMy chest was pounding I suddenly realized, and the urge, or should I say the desire, to go down there and beat that guy half to death was foremost in my mind. I took deep breaths, controlling my anger, as I watched closely for any further infractions of this douche. I knew I had to stay calm and not make a scene. This was Suzy's work place now, and she would have to return each day. I didn't want to make it difficult or uncomfortable for her. So I sat, wishing I could meet this dude in a dark alley.\n\nAfter Suzy distanced herself from him, I heard him laugh as he turned and walked away, going back the way he had come in. It seemed as though his laugh was dismissive or unconcerned, or maybe I was just reading into it because I already hated this guy. When he was gone Suzy went over and sat next to Diane. They sat there talking as the girls swam laps. It looked as if the practice was winding down, so I crept out undetected and went to my truck. I was parked rather close to Suzy's car, so I moved to a parking lot across the street and waited for them. I felt the need to make sure they got to their car safe and unmolested, without them seeing me.\n\nI watched them come out together, both seeming buoyant and happy, without a care in the world. Once they got into their vehicle I backed out and headed home. Who was that guy? What business did he have with Suzy? It was obvious he was an unwelcome visitor. But he sure seemed to have a lot to say to someone that was indifferent towards him. It seemed plain that he was hitting on Suzy. Whether he was serious or just screwing around, his attention toward her was unwanted. I would ask Suzy about him when Amber went to bed tonight.\n\nAfter dinner Suzy and I decided to hit the pool while Amber went to her room to study. We had a nice evening, each talking about our day. Suzy had the most to say as she was still excited about her new job. I think she still had a hard time believing she got to do what she did. I was so happy she found such joy in it. She didn't mention the encounter, which I didn't expect anyway, and I waited till we got in the pool to bring it up.\n\n\"I came down to the pool today and watched some of your practice,\" I started out. We were hanging onto each other, her legs around my waist and arms around my neck, as I moved us about the pool slowly. I felt her stiffen slightly.\n\n\"Really? Why didn't you come down to the pool or say something?\" She seemed a little awkward.\n\n\"I didn't want to interrupt practice. I just wanted to watch my girls in their natural habitat,\" I smiled.\n\n\"Really, that's it? Just spying on us?\" she attempted to tease. I could see she was uncomfortable as her thoughts were elsewhere.\n\n\"No spying. I picked up our football tickets for the season and decided to check you guys out.\"\n\n\"I wished you had come down. I'd like to introduce you to my girl's. They're a good group.\"\n\n\"I could see that. It looked like you were the one in charge down there.\" Suzy was watching me, looking a little guarded. She seemed to relax slightly with my last comment, seeing the conversation wasn't going where she thought it might.\n\n\"Yea, Diane turned the reins over to me right from the start. She still has to be there since she's officially the head coach and I'm the assistant. But she's been super. She's a good coach and an even better person.\" Suzy was genuinely fond of Diane, even considering her one of her better friends.\n\n\"She's got a lot more class than that guy I saw today, that's for sure.\" Suzy's back went stiff and her eye's widened.\n\n\"You saw that huh,\" she was looking into my eyes, searching. I could see she was concerned, not sure what to say.\n\n\"Yea, and right up front, I wasn't trying to keep that tidbit a secret. I just wanted to ask about it when we were alone.\" I was pleading with her for understanding, not wishing her to believe I was suspicious or upset. I had witnessed her displeasure with his attention.\n\n\"I hope you're not upset I didn't say something earlier. It's just that he's harmless, and I know how protective you can be. Say you're not mad,\" she begged. I laughed and kissed her fondly.\n\n\"I'm not mad. That's pretty much what I figured anyway. I could tell you were uncomfortable with him. He looked like a flirting douche bag from where I was sitting.\"\n\n\"That pretty much sums it up. He's just been looking for some attention and feels like he's every woman's dream, but he just comes across as slimy,\" she shuddered to emphasize her point; \"he gives me the creeps.\"\n\n\"So he's been sniffing around you before?\" She realized at that moment she said more than she wanted, her eyes showing concern again.\n\n\"Yes, but I can handle him. I make sure I'm never alone and if he did anything that felt aggressive, I'd go straight to the principle and report him. So please, don't worry or do anything,\" she pleaded.\n\n\"It's difficult knowing some man is targeting you, harmless or not. You're asking an awful lot of me.\"\n\n\"I'm sorry. I hope I can get you to trust my way of handling this.\"\n\n\"I trust you one hundred percent Suzy,\" I said, irritation in my voice, \"I don't trust him.\" She placed her hands on the sides of my face and looked into my eyes. I tried to avoid them, but found myself pulled into them, helpless. Damn!\n\n\"Promise me you won't do anything. You'll let me handle it, promise?\" I reluctantly nodded weakly, taking a large inhalation and exhaling slowly, showing defeat.\n\nThat night as we went to sleep, I felt for the first time, a lack of complete harmony. Not from any distrust or lack of understanding, merely from a difference of tact. I had a different approach in mind and was forbidden to exercise it. All I wanted was to find him and put the fear of God into him.\n\nOver the next three weeks all seemed to be fine. The swim meets had started and I was able to attend the home events. I loved watching Amber compete. She was a lot like Suzy. She hadn't gotten the chance to swim on the varsity team yet, but she destroyed the JV events. The butterfly was her weakest form, but still placed a respectable second and third. All the other strokes she placed first consistently and in the free style she crushed all comers. No contest. I had heard one of the varsity girls, a sophomore, had asked to be demoted to the JV team to give her spot to Amber. But Amber would not hear of it. Instead she became the girl's biggest cheerleader and did everything in her power to lift her up and make her feel important and needed. That was a direct result of Suzy's influence in her life.\n\nOne evening Amber approached me after Suzy had hit the shower.\n\n\"Dad, can we talk a minute?\"\n\n\"Sure baby, what's up?\"\n\n\"Mom has been getting bugged by one of the teachers at school. I think he's one of the track coaches.\" Amber looked like she was concerned.\n\n\"What do you mean bugged?\"\n\nAmber went on to explain how this coach acted overly familiar with Suzy. He had put his hands on her a few times, that she had seen, and it made mom uncomfortable. She also could see how mom was looking over her shoulder at times and feeling nervous and never wanting to be alone while at school. She had heard mom tell this man to not talk to her, but it made no difference, and she, Amber, was now beginning to be uneasy at practice also.\n\n\"Mom doesn't want me to do anything about him. She made me promise, and assured me she would handle it.\" I confided in her. Amber looked shocked that I had known about this guy, so I quickly explained what I had witnessed that day and our talk about it.\n\nAmber understood why mom felt the way she did, but asked me directly to do something. Maybe talk to the guy myself, ask him to back off. She gave me his name, Mr. Peters, and suggested that I go to the principle, since mom hadn't yet, that she knew of. I assured her I would deal with it and not to worry. We changed the subject as soon as we heard Suzy coming out of the bathroom.\n\nI knew I didn't like this guy, and now I wanted to hurt him. He had made my Suzy's life uncomfortable at a place she loved to be. This would not continue and I was going to make sure of it.\n\nI put all thoughts of the matter out of my mind as Suzy and I hung out that evening, cuddling on the couch, enjoying our close proximity. Suzy reminded me that she had to go to the doctor's office the following day, during swim practice and get the results of her blood work, and wanted to know if I could pick Amber up after practice. It wasn't a problem and I told her that I'd take care of it. Actually I had forgotten about that appointment, but this was a fortuitous turn of events. Now I could kill two birds with one stone tomorrow, or at least a bird and a douche.\n\nThe following day I went straight to school after I finished work. I was early as practice was still going on, but classes were over, so this teacher should be available. I figured he'd be in his class room or maybe teacher's lounge, if he hadn't gone home. Also figuring that since Suzy would normally be at the pool, he would probably be somewhere on the premises, perhaps hoping for some more face time with Suzy. In any case, I had to try and speak with him.\n\nI entered the school and went straight to the office. Checking in, I told them I was there to pick up Amber after practice, but in the meantime wanted to talk with Mr. Peters about a personal matter. The principle stepped out of his office upon hearing my request and recognizing my voice. Giving me a cheerful greeting, he went on to express his gratitude for Suzy and the work she was doing, how everyone loved her and what a great asset she was. I acknowledged his praises, letting him know that that was the Suzy we all knew, and I'd relay his compliments. The secretary informed him of my request and with a smile said he knew where Mr. Peters was, and he'd escort me to him. I followed him nervously to the teachers' lounge, not sure of exactly what I was going to say.\n\nAs I walked into the lounge, behind the principle, I spotted Peters immediately. He was sat at a table with two other female teachers, his back to me. As I walked across the room, one of Suzy's fellow coaches saw me and she glanced quickly toward Peters then back at me, eyes wide, a stunned look on her face. She leaned over to the woman next to her and began whispering, the other now looking at me with a sideways glance. I could only assume that Peters' behavior was already known among the other female personnel.\n\n\"Mr. Peters. May I have a word with you?\" I said as I walked up behind him. He turned to look at who was asking for him, no sign of recognition on his face. I could smell the douche on him.\n\n\"Yes, can I help you?\" he spoke in a self-important tone.\n\n\"My name is Luke, I'm Suzy's husband. It has come to my attention that you are paying unwelcome attention to Suzy. She has told me she has asked you to leave her alone and that you have not complied.\"\n\nPeters face had gone from smug to 'oh shit' in the blink of an eye.\n\n\"Your behavior has made it uncomfortable for her and for my daughter and I am here to inform you that if you do not keep a great distance away from her, I shall file a complaint with the school.\"\n\nI glanced to look at the principle who I knew was standing right behind me, from the gasp I heard from him as I started speaking.\n\n\"Furthermore, if you say a single word to Suzy, or make any acknowledgment of her presence, I will once again, file a complaint. If that is not sufficient to keep your skeevy eyes off my wife, I will visit you again, hoping I can control my displeasure. Do you understand me?\"\n\nMy tone was quiet, yet darkly menacing. The contempt I held for this piece of shit, was plain to all that heard. Peters' eyes were wide, and he had gone pale, the color leaving his face and lips. He muttered, 'yes sir', and sat perfectly still, waiting for something, I couldn't say what. Perhaps waiting for me to take a swing at him? He was not a small man, every bit as big as me, but as he looked at me I knew he saw his ruin in my eyes. He had no fight or stomach for this; as I was not his usual prey.\n\nI turned and headed out the room, the principle in tow, following closely. As we entered the hall he spoke up.\n\n\"Luke, may I say something.\" I nodded, the adrenaline in my blood beginning to drop. \"I had no idea what was going on and still don't. I will look into it for Suzy's sake and for the sake of the school. I appreciated your demeanor and self-control just now. If I had been in your shoes, I'm not sure if I could have had the same level of control. So thank you. But I wish you'd have talked with me first.\"\n\nI looked at him, showing a crooked grin.\n\n\"I should have, you're right. I apologize. But from what I've heard from Suzy, and especially from Amber, I was genuinely worried and needed to see this guy up close and personal. I also needed him to look into my eyes and feel what I was telling him. Having done that, I feel confident he will no longer be a nuisance for Suzy. As far as my constraint, I didn't want to face an assault charge,\" I shrugged, a tight smile on my lips as I stated that last bit.\n\nHe escorted me out into the parking lot, as we visited the whole time. He really was a good man, and I didn't envy his job. He expressed again how much Suzy meant to the girls and other coaches in such a short period of time, and how lucky they were to have her. He also expressed how he understood my protective stance of her and that I must realize how special she was. That seemed a little personal, but I could see how relaxed and comfortable he had become with me. Just before I drove off, to wait for Amber at the other end of the parking lot, he made a quiet confession to me, off the record.\n\n\"Peters is a good teacher, but I always had the feeling there was more to him than that. I'll be keeping an eye on him, after we have a talk.\" I thanked him and drove away.\n\nLater that afternoon, when Suzy got home, I told her what I had done. I begged her forgiveness for going behind her back, and vowed to never do that again, unless instructed. Suzy wasn't upset or angry, though she did seem preoccupied, and promised in return to not withhold anything from me again. We held each other for an extended period, and everything was made right.\n\nSuzy also apologized to Amber, after hearing from Amber about her part in asking me to intercede. She had not realized the effect it had on her and felt terrible that she had subjected her little girl to such concern. They hugged, and that too, was made right.\n\nThis was the closest Suzy and I had come to an actual fight. And though it may not seem like much, it shook me, more than I expected. We had always been open books to each other. The fact that we both acted without the direct knowledge of the other, did not sit well. Later, in bed, I talked with Suzy about this. We both had the same instinctive gut feeling about it, an almost repulsion, and we did not want to experience that again. We found comfort in each other following that shared moment, and it soon turned to passionate, sweaty love making.\n\nJust before sleep, as we lay there in each other's arms, Suzy asked me for a blow by blow of my confrontation of Peters. I wish it could have been more dramatic, but I replayed what I, and the principle had said. She said she would have very much liked to have seen that. I told her that Peters may have peed a little and she burst out laughing. I think she felt relief from the stress he had imposed on her, and knew it was behind her now.\n\nLastly, Suzy told me she had to go to another doctor the first of next week. It wasn't anything serious, just a consultation to discuss the findings. Maybe diet suggestions or early indications of something that she could nip in the bud. In any case, no big deal, and it was set up on a day that she could take off early and pick up Amber afterward.\n\nWe kissed, making out lightly and then lay quietly, the feeling of love so thick; it felt like you could scoop it with a spoon. Soon we were asleep.\n\n------------------------------------------------------------\n\nWe had ourselves a fun weekend. We saw an Avengers movie with Amber and went for ice cream after. Then we walked around a new outdoor mall, window shopping mostly, but picked up a few unnecessary things, just because we wanted to. Later that evening Amber went to spend the night with a school friend as Suzy and I picked up sandwiches and drove to the park, where we vowed ourselves to each other, and ate, watching the sun set.\n\nWe began reminiscing about our school years, pointing out little things that were clues to our love and attraction for one another. I was amazed at how clueless I was to her feelings of being in love with me. She talked about how she had learned my routes between classes so she could cross paths with me. Sometimes she would go out of her way to do it, and I never questioned why it was that I saw her so often in the halls. She remembered how she used to watch me in the lunch room, so much so, that one of her friends questioned her about it. She had to admit to the friend, at the time, how fond she was of me, and told her what a great person I was, but that was the extent of it. Afterward, she was careful not to be too obvious.",
        "Suzy also shared with me one of the contributing factors that caused her to fall for me. It was the incident of my fight with the other boy that had been dogging her for a date. In my room she had realized to what lengths I would go for her happiness and safety. She had also come to realize how well I treated other girls, not just her. That I never spoke about a girl in an off color way, that I had a general respect for females. She wanted someone like that to always be in her life, and as she looked around for him, she could not find anyone that measured up. In listening to her relive those emotions, I felt some embarrassment. I never did things to be noticed, and to hear her proclaim my goodness was awkward for me.\n\nI changed the direction of the conversation and told her my view of her through school. And not just high school, but all the time we spent together, walking and talking. I told her how special she always made me feel, as an equal, as her friend. And as we got into high school, how every girl that caught my eye, I eventually held up to her, as she was my measuring stick. I had conscientiously treated all girls the way I did so I would never disappoint her. I treated them the way I would have treated her, which was my rule. I remembered the time in the public pool, her first time wearing a bikini. I was mortified by the camel toe she displayed, knowing how it would crush her if it was displayed to all, and at the same time, how excited it had made me to see it. I told her it wasn't the first time I had sexual thoughts of her, and that it was a powerful visual I kept locked in my mind for quite a long time.\n\n\"You can see it now, can't you?!\" she exclaimed, smiling brightly.\n\nI closed my eyes, a large grin slowly covering my face.\n\n\"Oh yea, I see it! Please, don't disturb me. Give me a moment alone with this.\" I pretended to shuddered, as I said, \"ooh.......so nice.\" Suzy hit me across the arm.\n\n\"Stop that! Pervert! I was a little girl,\" her mock anger causing me to laugh.\n\n\"It wasn't that little\", I recounted.\n\n\"You're awful! What else do you have locked away in that pervy mind of yours?\" I laughed some more, then shook my head.\n\n\"The truth is, I did fantasize about you, and it usually left me feeling like I had defiled you. But it was hard to control, with all the hormones and all. Mostly I just felt a reverence and respect for you. I did love you for real; I just hadn't fallen in love with you yet. But I always knew we would be together in some way. I couldn't envision any other scenario.\"\n\n\"I know exactly what you mean. You were always going to be in my life. Anything else would have been intolerable.\"\n\nThe moment had become somber, as we sat together, hand in hand, quiet in our own thoughts. I knew that this, as we were now, was the only way our story would end. I felt peace and joy with Suzy next to me, my soul mate.\n\n------------------------------------------------------------------\n\nIt was Tuesday, and Suzy had gone to her doctor's appointment. She had first stopped by my job and dropped off a fresh lunch, saying hello to Bob. Bob made sure to tell her how much he missed her visits, but wished her good fortune in her new career. Our loss was their gain, and all that.\n\nThe day was long and I ended up heading home later than usual. I texted Suzy earlier of my delay in going home and she replied that I was to be careful and don't rush.\n\nI got home just before sunset and walked into the house. I didn't see Suzy in the kitchen or in the family room. She hadn't run up to me for her usual greeting and something seemed off. Amber was sat at the bar, doing school work, and I walked up behind her and kissed the back of her head.\n\n\"Hi honey. Where's your mom?\" Amber turned and looked at me, shrugging, and a look of concern in her face.\n\n\"Is everything alright?\"\n\n\"I don't know. Mom's been acting strange all afternoon. She won't tell me anything\", Amber said in an unusually somber manner.\n\nI heard our bedroom door open just then and Suzy came walking out of the hall. She had a look of disbelief or concern; I wasn't sure, on her face.\n\n\"Is everything alright?\" I asked feeling suddenly unsettled.\n\nSuzy had stopped and stood next to the couch, across the family room as she eyed Amber and me. She placed her hands on her hips, completely uncharacteristic of her, and took a big breath, her lips in a tight smile. Then I saw her eyes immediately tear up and her chin start quivering as she dropped her hands and came walking up to me. As she put her arms around my neck her tears were already running down her cheeks and she began to cry, almost sobbing. I glanced at Amber, who was frozen in place, her face showing that she was fearful for the worst.\n\n\"What is it Suzy!? What's the matter?!\" I felt fear gripping my chest. What did she learn from her doctor's visit? How bad was it? Was I going to lose her? All these thoughts were running through my head. Suzy leaned back to look up at me, and I looked down into her tear streaked face. But what I saw was pure joy, happiness on a whole new level.\n\n\"I'm pregnant Luke.\" I blanked, attempting to comprehend what she just said. I think I heard Amber squeal somewhere behind me. Then I felt Suzy's hands on either side of my face, and I was able to focus on her.\n\n\"I'm carrying our child.\"\n\n---------------------------------------------------------------\n\n Thanks you for ready the continuing story of Suzy and Luke. As I'm sure you realize, a part 3 is needed to complete their story. Please be patient, as this will take me a while, but hope to make it worth the wait.\n\n- complexman "
    ],
    "authorname": "complexman",
    "tags": [
        "incestuous affair",
        "drama",
        "forbidden love",
        "taboo sex",
        "brother and sister",
        "sister and brother",
        "love",
        "romance",
        "siblings",
        "incest romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/suzy-and-i-ch-02"
}