{
    "title": "Sensual Oral Sex Ch. 1",
    "pages": [
        "Lead him in to the bedroom telling him that you have a very special surprise for him and that it will be something he will always remember. You will most probably have given your man many blow jobs before and will be quite comfortable to take his cum in your mouth and swallow it and also, know exactly which point of your stimulation brings him to his point of no return. Sit on the edge of the bed with him and reach over for a couple of pillows. Push him on to his back and place the pillows under his head making sure that his head is tipped slightly forward so that he can observe everything you are doing. Remove his trousers and underwear. Part his legs and approach his cock from below with your mouth slightly open and your tongue licking your top and bottom lips until they are really wet. Tell him that he is about to receive the best blow job of his life and that he should just relax and let you take control of the situation. He should already have at least a semi hard on at this stage so take his cock in your hand and very slowly start to wank him, bring your wet lips close to his cock and do full, slow strokes so that the corona is exposed from his foreskin on the downward stroke and it is fully covered on the upward stroke.\n\nDon't be shy and encourage him to watch you playing with his cock, any man loves to see his cock disappear deep into a woman's mouth. This will be one of the most erotic scenes either of you will ever experience. Occasionally, pause the downward stroke long enough to give the corona a long lick with your wet tongue. Look up to see the response on his face each time your tongue touches different parts of his cock and let him see that you are wanting him to enjoy every minute of it. Close your eyes down to a slit and make erotic facial gestures. No man can stay soft under these circumstances, especially in anticipation of what you have made clear that you are going to do for him next. Anticipation and teasing are all part of giving tremendous oral sex but don't spend too much time in this area or his cock may stop responding and could even go limp on you. Once you have started to wank and lick his cock, it will obviously become very hard and swollen. Gaze into his eyes lovingly and open your mouth fairly wide, then slowly take his cock as deep into your mouth as possible, hold this moment for as long as you feel is right then very slowly pull back until his cock is just at the tip of your lips. Pull down on his foreskin as far as you can to reveal his corona.\n\nGently lick under and around the rim of his corona, you will see by the expression on his face how much pleasure he is receiving from you. Close your mouth onto his cock again keeping his foreskin pulled down with one hand and slowly feed it as deep into your mouth as possible, again slowly pull back off repeating this action several times. After a self determined number of \"sucks\", pull off and lick his cock up, down and around to see which option gives him the most pleasure. Let the tip of your tongue caress his \"piss hole\", this is heavenly for most men, talk to him and tell him what a lovely cock he has and that you will not stop until he has cum in your mouth. With all this sucking and licking his cock must be ready to explode by now, you will certainly feel it pulsing and twitching (and surely him groaning with pleasure). He will probably tell you amid his groans of pleasure that he is ready to cum but you should already have a good idea anyway.\n\nHe may instinctively try to push his cock further down your throat than you are comfortable with. To keep the situation fully under your control, move both your hands up to his hands and place them on to his stomach, hold them there while you carry on sucking him at your own slow pace. Now is the time to give your man the greatest pleasure of all, to take his cum in your mouth. Keep his cock as deep into your mouth as you can, tilt your head back slightly and make eye contact whilst sucking back and forth ever so slowly until you feel his climax ripple through his body and up through his cock. Just as his cum is about to erupt, hold your mouth and lips still, maintain eye contact and let him sense and feel his cum spraying inside your mouth. Swallow as much as you can, let him feel you swallowing it but don't release the grip of your lips from his cock just yet.\n\nOnce his orgasm has subsided, let go of his hands and bring one of your hands round to the base of his cock and squeeze it gently between your thumb and fore finger in an upward motion (slightly wanking it into your mouth), this will force most of the remaining cum up and out of his cock. When his cock has stopped pulsating in ecstasy and he has relaxed, pull back very slowly making sure that his foreskin is still pulled down, then gently lick and suck any remaining cum into your mouth. Place your thumb and forefinger at the base of his cock as before, gently squeeze and with an upward motion, milk his cock for any remaining cum, this will usually produce a small amount which you can dip your tongue into and swirl it around the head of his cock. Let him see his cum on your tongue and in your mouth before you take his cock back into your mouth for a further self determined number of deep sucks. This is the ultimate in sexual dreams that a man can have (at least until the next time) so make your mans dreams come true."
    ],
    "authorname": "Beecee",
    "tags": [
        "upward motion",
        "downward stroke",
        "gently lick",
        "remaining cum",
        "cock stop",
        "mouth swallow",
        "slowly pull",
        "lick cock",
        "back slowly",
        "cock cum"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/sensual-oral-sex-ch-1"
}