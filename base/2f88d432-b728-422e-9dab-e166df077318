{
    "title": "The Twelve Zenati Pt. 13",
    "pages": [
        "Authors note: Hello everyone. Unfortunately, this chapter is very late and I apologise for that. While I will continue to get chapters out as fast as possible, please excuse any future tardiness. I hope can forgive me and that you continue to enjoy this series of the Tables. Thank you once again to Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\n\"Where are you going?\" Gideon grumbled sleepily hooking an arm around Vivienne's waist where she sat on the side of the bed and pulled her back down to him.\n\n\"I'm having breakfast with Marcie this morning before we go to the spa with the other ladies. I'm worried about her,\" she said softly cupping Gideon's handsome face and kissing him gently. He grunted in acknowledgement of her words. They were all worried about Marcella since she had gone missing a few weeks ago. She'd been interrogated by both the AFP and the family even though her story was proven time and again. \n\nBoth organisations had investigated her story and found nothing different from what she had told them. The helicopter pilot, Greg, seemed like an average Joe who worked between the Adelaide River Jumping Croc attraction and the wetland plantation he lived on with the other staff of the attraction. He'd been reprimanded for misusing the helicopter that day, but he got on well with his boss, and he got off lightly with just a warning. Marcella had called him a few times and seen him twice since then. It seemed there was nothing untoward about the whole incident. \n\nDespite the success of her endeavour, Gideon could tell that it bothered Noah that Marcella had gone off alone to investigate, showing that she didn't trust him and was seeing the helicopter pilot, dating him even. The two had begun sniping at each other under the guise of friendly banter even more viciously since she had returned with her news and handed over her Apple Watch so they could locate the boat graveyard. Gideon pushed the thoughts from his mind and caressed his wife, kissing her neck and encouraging her to stay in bed with him.\n\n\"You know, if you keep doing that we are both going to be late. Don't you have to be at base this morning while the others are at the hospital?\" Vivienne practically purred as Gideon's hands stroked up and down her body eliciting warmth and arousal as she lay in his strong arms.\n\n\"Yes, but you are so irresistible that having you this morning will be worth getting a tardy slip from the boss,\" he said huskily and brought his mouth to hers again.\n\nWithout breaking that kiss, their hands began to explore each other's bodies more fully. Vivienne revelled in the incredible muscle definition across Gideon's back, ass and taut stomach, while Gideon's fingers stroked and pleasured Vivienne's highly sensitive body. He enjoyed the silky feel of her soft skin and the increasingly desperate moans she made when he circled his fingers around the underside of her breasts. Vivienne it seemed, would not be teased indefinitely, however. Eventually breaking their kiss, she gently arched her back pressing her breasts into his chest and her pelvis against his as she gazed up into his eyes. \n\n\"What do you want?\" murmured Gideon teasingly. \n\n\"You know what I want,\" whispered Vivienne, trying to hide the blush she felt creeping up her neck into her face. She loved the way he loved her, luxuriated in it even, but she still wasn't comfortable asking for what she wanted, craved and needed from him. \n\n\"Yeah, I know,\" he grinned. 'What's it worth?' he smiled, backing slightly away so that her unspoken request remained unfulfilled.\n\n\"Anything,\" she panted. \"What do you want?\" This was a game they played often, and she had given into trying a lot of things she would have otherwise baulked at if Gideon hadn't worn down her barriers with his game.\n\n\"I want to buy you jewellery,\" he murmured. \"For these,\" he flicked her nipple. Vivienne looked down at him in shock, but before she had time to reply, Gideon tenderly wrapped his lips around Vivienne's hard nipple and ran his tongue firmly across the sensitive tip.\n\n\"Oh, my!\" she cried out as her body jerked upwards in surprise at the overwhelming sensations and confusing emotions that assailed her. She wasn't na\u00efve, she just wasn't sure exactly what he meant. Did he want to pierce her nipples or merely decorate them with something like pasties?\n\n\"And I want you to wear it every day. Like a naughty little addition under your bra,\" he added, dropping his mouth back down to her breast and clamping his teeth firmly around the sensitive bud. Easing her into the kind of sex he enjoyed was way too much fun, and he smiled around the sensitive bud. Every new idea he put into her head seemed to make her hotter and needier than the one before. He wasn't rushing her, and he would never force anything she wasn't ready for, but he adored these moments when he played his little game with her and put her slightly off balance with his requests.\n\n\"Gideon!\" she squealed, her back arching in pleasure. Continuing to hold her nipple firmly between his teeth, Gideon then covered her skin with his lips and sucked gently, flicking his tongue irregularly so she could never second-guess him.\n\n\"Oh my God!\" panted Vivienne as, never ceasing to give her pleasure with his mouth, Gideon placed the flat of his hand on her stomach and gently began to caress his way down her body and over her curls. Powerless to prevent herself, Vivienne groaned in delicious anticipation, her legs automatically opening wide as Gideon's hand progressed lower. \n\nAs Gideon's hand moved over the folds of her pussy, he came into contact with the evidence of how aroused she was and sighed with pleasure. Replacing the flat of his hand with his fingers, he began to run them so lightly through her velvet folds that Vivienne sometimes wasn't sure he had even touched her at all.\n\n\"I want you,\" she moaned softly. Gideon removed his mouth from her nipple, leaving it tingling in his wake.\n\n\"I know, but the question is how?\" Gideon murmured and smiled, gently kissing his way across to her other breast. Vivienne gasped as he hovered over her body, before clamping his teeth down firmly on that nipple and subjecting it to the same treatment. Meanwhile, his fingers slid between her folds, until he found the very base of her clit. As Gideon rubbed his thumb over her clit in exquisite pressure, Vivienne's hips shot forwards in response making her cry out.\n\n\"Please, please,\" she whimpered, throwing her head back in submission to what Gideon was doing to her body.\n\n\"Please what, sweetheart?\" Gideon murmured, removing his mouth to grin at her.\n\n\"I... I want you inside me,\" she moaned breathlessly. \"Please.\"\n\n\"Your wish is my command, wife,\" Gideon breathed and gave her a smirk before kissing down her rib cage, across her stomach and positioning his head between her wide-open legs.\n\n\"What are you doing?\" Vivienne gasped as his fingers began to rotate around the tight entrance to her pussy and Gideon's head began to kiss its way down her body.\n\n\"You didn't specify which part of my body you wanted inside you,\" Gideon chuckled before stroking her pussy from base to clit with the flat of his tongue.\n\n\"Oh God!\" she gasped as Gideon very slowly began to slide a finger inside her. The feel of his mouth on her pussy was amazing, while his morning stubble scrapping across her soft flesh made what Gideon was doing feel even more forbidden. As Vivienne's pussy grasped his fingers tightly, Gideon was rocked by a desperate, primal urge to drive himself deep inside her, utterly overwhelming her with his sheer size and power. Instead, he encouraged her to the very brink of orgasm, using his talented tongue, lips and fingers to hold her balancing on the edge of her denied release for the longest time. By the time Gideon had two fingers inside her, teasing her G-spot and his lips wrapped firmly around her clit, occasionally pulsing his tongue down, a trembling Vivienne had entered another world entirely, making him acknowledge to himself how fucking hot she was like this.\n\n\"Please, please, please,\" she begged, realising it was wishful thinking that Gideon would do as she implored without the actual words leaving her lips. \"Please fuck me,\" she whispered, recoiling at the crass words, but this had been the first concession he had asked for in the game they played. During sex, she would use the crass words he gave her: fuck, cock, pussy, cum! He was an expert at knowing what her body needed and focussed on almost, but not quite, providing it until she gave in and used the words he loved to hear her say. \"Fuck me, Gideon. I need your cock,\" she whimpered dragging the words out. \n\nLifting his head, Gideon removed his fingers from her twitching body and began to crawl over her in a predatory way, his thighs moving between her legs. He hovered over her positioning his long, thick cock at the entrance to her pussy. Pushing himself slightly against her body, Gideon closed his eyes at the sheer pleasure of being so intimate and close to the only woman he desired to possess so completely. The only woman he had ever loved like this. Vivienne wrapped her long legs around his waist, ensuring he couldn't escape now making him chuckle. As he leant a little further towards her, he could feel Vivienne's tightly clenched pussy almost denying him access despite her pleas to fuck her.\n\n\"Relax, Sweetheart,\" Gideon murmured softly into her ear. He stroked her face tenderly, and she could feel her anxiety start to reduce. Before she had a chance to open her eyes again, Gideon had dropped his lips to hers, his tongue sliding inside her mouth. Groaning with longing, Vivienne kissed him back passionately, and her body, rigid from her denied orgasm, relaxed under him as he ever so slowly began to push his cock forwards.\n\nMurmuring endearments as he kissed down her neck, Gideon proceeded carefully as Vivienne clawed at his shoulders. As always, she could feel her pussy being stretched wide as Gideon's seemingly never-ending cock continued to penetrate her body. Gasping and moaning, Vivienne lost herself to the feeling of being thoroughly and completely filled. At last, Gideon's groin was pressed hard against her body and with an intense awareness deep inside her, she knew he was now completely buried in her. For a moment, he lay still while Vivienne clenched her stretched muscles around him.\n\n\"You are so beautiful,\" Gideon growled. \"You feel unbelievable every time you let me fuck you.\" He started to move almost imperceptibly inside her. \n\n\"Oh God, Gideon,\" Vivienne hissed. He always started by being so gentle, it almost made her want to weep with joy that such a large, powerful man, her man, could be so tender and loving. When they came together like this they truly made love, and it was so much more than having sex could ever be. At least to her, when they were tightly wrapped around each other, gazing deeply into each other's eyes, their bodies moving in delicious harmony. Although Vivienne was never far from her climax, for the time being she was quite happy soaking up the amazing sensations Gideon was helping her to experience yet again. She was so inexperienced compared to him, but he never complained or lost his patience with her. Rather he adored her and every delicious thing they did together.\n\n\"I think you need to come, now,\" Gideon murmured close to her ear.\n\n\"I do?\" She breathed, her internal muscles automatically tightening further around Gideon in delicious expectation.\n\n\"Absolutely,\" he chuckled. Slowly, Gideon pulled back until just the very tip of his cock remained inside her. He then slid himself slowly, but firmly back inside, filling her to the hilt.\n\n\"Oh, God!\" Vivienne cried out as, awash with lust and desire, she realised Gideon was pulling out again, before pushing firmly into her increasingly tight pussy once more. With delight, Gideon realised that Vivienne was repositioning her legs so that one lay across his shoulder, effectively opening herself up to him completely. She may have trouble saying the words, but she seemed to have no trouble showing him how she wanted to be fucked.\n\n\"What do you need?\" Gideon chuckled, dropping his wet thumb to lie teasingly against her slippery clit.\n\n\"You,\" she gasped. \n\n\"You've got me,\" he groaned, increasing the pace of his thrusts. \"How do you want me? Tell me, Sweetheart.\"\n\n\"Harder,\" she pleaded. \"Harder and faster!\"\n\n\"Anything for you, wife,\" he groaned deeply, upping the power of his thrusts, knocking Vivienne forcefully back into the mattress with each stroke.\n\n\"Yes. Oh fuck, yes!' Vivienne squealed as her pussy clamped even more tightly down on Gideon's cock. Reading the signs perfectly, Gideon nudged her clit with his thumb as he continued to drive into her tight, twitching body. Watching her with delight, Gideon saw Vivienne's eyes flutter shut as she took in a final gasp. Her body seemed to momentarily go still, silent and rigid before the floodgates opened and wave after wave of pleasure was released, as her cries of frenzied ecstasy filled the room. Gideon continued to thrust his hips to ensure she rode out the entirety of her climax, her strong leg muscles helping to grind herself against him while pulling Gideon inside her even further. \n\nJust as it seemed that Vivienne was starting to recover, Gideon dropped his mouth to one of her nipples and pulsed his teeth firmly down at the same time he brought his thumb back to circle her throbbing clit. Crying out, Vivienne was predictably catapulted straight into the path of another terrifyingly intense climax which seemed to rob her body of all its energy as Gideon groaned deeply letting go of his own climax with her.\n\n\"You are so amazing,\" Vivienne breathed croakily once she'd recovered enough to talk. \n\n\"You're the amazing one,\" sighed Gideon, dropping his lips to hers, delighted by the way their bodies melded so perfectly together. When they finally broke apart, he lay back on the bed beside her breathing raggedly. \n\n\"So, breakfast with Marcie this morning huh?\" he asked as his breathing began to return to normal. He rolled on his side and idly played with her nipple as she recovered.\n\n\"Maybe some shopping too, before the spa if we have time,\" she said thoughtfully. \"I'd like to get Genesis and Olivia a housewarming present for the apartment.\"\n\n\"I have shopping to do today too,\" he grinned and tweaked her nipple. \"So worth it!\" he chuckled as he rolled out of bed and headed toward the shower before she could retaliate or ask him any more questions about the jewellery he planned to buy.\n\n*****\n\nNoah smoothly moved from the bed and stood looking down at the girl who lay there. It went against his personal rules to let any of the Kept remain for the whole night but he had driven himself and her to the point of exhaustion last night and by the time he had finished with the aftercare, she had been sound asleep and he could barely move himself, let alone carry her back to her room.\n\nFollowing his father's advice not to show any favouritism to the trainees here, he had left Matija alone over the last week or two. It hadn't been fair to her take out his frustration with Marcella on a girl whose only crime was to have a similar build and hair to her. Last night he had taken a tall, svelte blonde to his room in the facility. She was as attractive as any catwalk model with her height and lean frame, but he found himself having to supplement other features over her to finally find his release with her. She had done little for him in the end and while he had enjoyed using her and making her cry out in pleasure and pain, his body hadn't reacted the way it did with Matija and the few other small brunettes currently available for use in the facility.\n\nHe had always prided himself in being able to find all women attractive in some way, especially those trained to please Masters like himself who enjoyed the painful pleasures of BDSM. But last night, no matter how far he had driven himself or her, he hadn't been able to find that automatic release until he had closed his eyes and thought of another woman. A woman who frustrated him and drove him insane to the point of lunacy. It galled him that he couldn't move past it, despite knowing she was practically the opposite of everything he looked for and desired in a partner. There was also no sign at all that she was his one, his curse breaker, and he had no intention of getting involved in something that would end badly for both of them.\n\nNoah went to shower, grateful he had a closet of clothes here so he wouldn't have to rush home to change before meeting Xavier and Emma for breakfast and visiting with Dominic before his surgery. Once he was ready to leave, he roused the sleeping girl.\n\n\"Brigit, wake up now,\" he said in a soft but commanding voice. She stirred immediately showing how well trained she was and that she would soon be offered a lucrative private contract. \"I am leaving now, return to your room, please. Thank you for your service.\"\n\n\"Thank you, Master,\" she said softly, giving him a small smile and leaving without another word. Her protocols needed some work he remembered from the night before, but with a body like that, he doubted her new Master wouldn't mind handing out her punishments until she got them right.\n\n\"Burning the candle at both ends?\" Armando asked as he entered the building seeing Noah about to leave.\n\n\"Something like that. Let me know if you need me at all. I will probably need to stay close to X and Emma until Dominic's surgery and treatment are done,\" Noah sighed. \"It's hard to watch, you know?\" \n\n\"Yeah,\" Armando sympathised. \"Don't forget to live your own life though, you can't expect to be Dominic personified as well as yourself. You are a good man Noah with a big heart. You have always given more to others than you got in return. Don't lose who you are, trying to be everything to all people, or become someone else because you think others expect it of you, understand?\"\n\n\"No, but I don't have time to debate it just now. I'm late,\" Noah sighed and turned to move down the stairs leaving his father looking after him with a worried expression.\n\n\"Tell Dom we're all thinking of him today,\" Armando called after his son.\n\n\"He knows,\" Noah called back and waved as he got into his car and drove away. A lot was going on in the family today, and Noah couldn't wrap his head around another one of his father's enigmatic lectures. He felt bad having seen his serious worried look knowing it was for him as much a Dominic but what could he do, he couldn't clone himself and be in all the places he needed to be today, so he had to prioritise and try to get to them all eventually. \n\nDominic had to come first. Xavier and Emma were holding it together by leaning on each other, and Dominic seemed unconcerned that he would pull through. Dominic's worries were about being cut out of whatever was going on with the family because of his illness, and Noah had vowed to him that he wouldn't let that happen, which meant constant updates and running between the base of operations, the hospital, Dom's home and his brother's homes. He had forgotten what his own apartment looked like, he had to admit. Added to that was the constant spectre of Marcella and what sort of danger she was getting herself into now with her renegade investigations.\n\nHe sighed and prayed to whatever benevolent God might be listening to him today, to keep Marcella out of trouble today of all days. They had come up with the spa plan to keep all of the ladies busy today with Emma who would be strung out and worried during the long surgery Dominic was undergoing. He hoped that was enough to stop Marcella from running off alone again while they were all preoccupied today with one thing or another. \n\nThere was so much going on that Noah felt like he might just be at capacity. Dominic, the AFP's pressure to get proof or better answers from Olivia. The investigation of the story of how Marcella found the boat still bugged not only him but a few people; it was all too convenient. Genesis and Olivia were moving from the base into their apartment today, and while he had made his excuses to Genesis, he felt bad he wasn't there for his brother who could use the support today of all days.",
        "\"First thing's first,\" he reminded himself out loud. \"You have a plan for today; you just need to stick to it.\" He sent up another prayer that nothing unexpected would pop up in their lives today.\n\n*****\n\n\"Hey,\" Genesis said with a smile waking up to find the beautiful woman beside him nuzzling his neck and purring happily. \"How did you sleep?\" \n\n\"Like a baby,\" she grinned. \n\n\"Waking and needing attention every couple of hours?\" he teased knowing how restless her night had been. He was a light sleeper and had gathered her half-asleep form to him as she wrestled with her fears and excitement about today. \n\n\"No,\" she laughed shaking her head. She saw the doubting look in his eyes and admitted, \"I only woke up once or twice and went straight back to sleep,\" she knew from past experience the look in his eyes that told her he would accept only the truth from her and be able to tell if she lied to him.\n\nGenesis rolled her to her back pinning her to the mattress and stared into her eyes, trying to read her thoughts. He knew she was happy about the move and wanted to live with him in his apartment, away from the constant interruptions that plagued them here as people came and went from their suite of rooms as if they too lived there. He could also see anxiousness in her expression, fear of the unknown perhaps. Their whole relationship had been conducted during her recovery and now that she was healed both physically and mentally, although not to the same degree, it was time for them to start fresh somewhere new and build a real life together on top of the foundation they had formed in this place.\n\n\"Are you ready for this?\" he asked in a soft deep voice.\n\n\"More than ready,\" she smiled. \"I love you and want to be with you in your home, not here in a place that belongs to the whole family.\"\n\n\"It will be our home, not my home,\" he kissed her deeply and possessively. \"We will still live in close proximity to our siblings, but they will have to knock before entering which will be a nice change. It also means I can keep you naked as often as I like just to watch you move that sexy little body and show off the marks you wear so well for me.\" He traced a line over a faint round bruise where he had bitten her breast the night before. \n\n\"I like the marks you give me,\" she sighed with pleasure as he bent his head and took a nipple into his mouth to suck and nibble on. \n\n\"I'm not going to mark you this morning, I want a well-rested pristine canvas to paint on the first night in our home together,\" he murmured heatedly into her mouth and took her lips again, kissing away the pout that warmed him from the inside out. She was his perfect mate. She beguiled and enraptured him each and every day with her willingness to meet his darkness with her own. He rolled his hips, repositioning his cock and entered her slowly, revelling in the fact that she was always wet and ready for him.\n\nOlivia mewled with need as he entered her and curled her legs around his hips urging him to go faster and harder with her body. She arched and strained up against him, her hips rocking, but he was immovable from the slow, languorous pace with which he took her. She mewled and panted her need begging him over and over again, \"Please, more, please...\" \n\nGenesis fought the urge to slam into her and lowered his head, licking over the bruise on her breast reminding himself of the afternoon and evening he had planned for her. If only she knew the delightful, painful pleasures that awaited her and how he would bring her to the cresting highs she longed for from him. He kept up the slow and steady pace despite her pleas which sang in his ears and the urging of the perfect body below his trying to break his will to have her like that this morning.\n\nWhen they finally came together there were no loud guttural sounds of release but rather a slow melding of soft moans that shook them almost as much as the headier rushes, they induced in each other with the exquisitely erotic painful play they so enjoyed together. It was soft and sweet, and Olivia clung to Genesis as if he were a life raft in a sea of emotion as the soft orgasm rolled through her gently and ebbed away. They lay like that for a long time after just listening to their breaths and holding each other until Genesis finally moved.\n\n\"Shower with me, then we'll have breakfast and pack the last of our things,\" he sat up and swung his legs from the bed knowing she would do as he asked. He stood and held out his hand to her and pulled her with him to the bathroom deciding he may as well have her one last time in that room too, before he ate her for breakfast in the kitchen. \n\nToday was another milestone for them, and he was going to make sure she felt every single minute of it in her proper place with him. He wanted her under no illusions that things between them would change despite the setting and the slackening of some restrictions he had placed on her life during her recovery. She would have some freedoms restored, but she would have to earn them and know that he could and would take them away if she abused his trust. \n\nHis thoughts went briefly to Marcella. She did not approve of their relationship, and he worried she might take advantage of the new living arrangements. He had to remind himself that he trusted Olivia and he needed to give her the chance to prove his trust in her. Fear gripped him as he considered the people who still hunted her, but he couldn't in good conscience keep her locked up forever. All he could do was put enough safeguards in place, and she seemed to like the bodyguards he had hired to protect her. He relaxed thinking about them and smiled. He needed to ease up, he knew. He'd done everything humanly possible to protect Olivia, now he just had to enjoy being with her in their own home.\n\nFollowing his plan as he had got out of bed, Genesis fingered Olivia to orgasm in the shower as she stroked him to a new erection, then he lay her on the kitchen table and ate her to a third climax before having a proper breakfast. Then when the last of their belongings were packed and being loaded into the truck, and they were finally alone again, he fucked her hard and fast, growling out his desire in the still furnished living room while she hung over the back of a tall armchair.\n\nThe day had begun better than he had expected and it was only going to get better from here, he grinned as he came for the second time that morning feeling the fifth of Olivia's climaxes pulse around his cock. He grinned pulling her up into his arms and stroking his hands over her unmarked, pristine skin. Only one blemish, the bruise on her breast, marred his view and considering what they had done in the last twenty-four hours, the one bruise was of no consequence. \n\n\"Get dressed, and I'll take you to your friends for the morning before we officially move into our new home,\" he said huskily, smacking her ass and enjoying her squeal of delight.\n\n\"I can't wait!\" Olivia said excitedly and scrambled to pick up her discarded clothes and pull them on in such a hurry that she got tangled up and would have fallen over if Genesis wasn't there to scoop her up and hold her against him, slowing down her movements.\n\nIt was at times like these that he considered her so sweet and cute, almost childlike and innocent. He loved this side of her as much as he loved the desperately needy nymphomaniac that craved his use and abuse. She was perfect in every way for him, and he would thank the curse of his family every single day for bringing her into his life because without it he may never have spared her more than an appreciative look. She was sexy, there was no doubt about that, but the cute and sweet thing had always been a turn off before. With Olivia however, her cute sweetness stole his heart and made it ache for all she had suffered. \n\n\"Everything okay?\" Olivia asked looking up into his face as he was lost in his thoughts.\n\n\"Perfect,\" he murmured softly. \"Just like you.\" He bent his head to kiss her and then picked her up carrying her out of the suite of rooms.\n\n*****\n\nVivienne eyed her friend suspiciously. They had met at the clifftop caf\u00e9 near the apartments they lived in. Of course, she had moved from her small apartment next to Marcella's into Gideon's apartment, unsurprised that the siblings all lived in the same small tower she had been living in already. Their apartments, however, were large luxurious spaces above the smaller apartments reserved for visitors on family business. \n\n\"So, your planning on seeing the helicopter pilot again? Even after all the drama your last date with him produced,\" Vivienne asked.\n\n\"It wasn't his fault!\" Marcella said defensively. \"Between Noah, Gideon and the watchmen don't you think I have enough people watching my every step without my best friend being suspicious of my motives? Why shouldn't I date? I need affection too, you know. It's okay for you and Olivia with your doting husband and well whatever Genesis is to Olivia, but I need something more than a friendly hug from you now and then,\" she sighed being overly dramatic for her friends benefit.\n\n\"I thought you and Noah were spending time together again. You went out to dinner with him, didn't you?\" Vivienne asked a note of disappointment in her voice that the tension between the two of them was not abating as she had hoped.\n\n\"No, I went out for dinner alone, because the people I call friends were all busy in their loved-up relationships and I couldn't bear another takeaway meal in front of the television or my computer. He gate-crashed my little pity party and made me feel even shittier about being alone,\" Marcella tried to appeal to her friend's soft heart. \n\nIt wasn't true, Noah had been nothing but friendly and considerate of her wishes. They had laughed and enjoyed the dinner, but that was as far as it went. They used sarcasm and dry wit these days to communicate, all of the flirty banter that had marked their early days together had gone now, and she knew that the tension between them was more her doing than his. He'd turned her down once, and she had never given him a second chance to turn her down again. If she was honest, he was lucky she still spoke to him at all, people who dismissed her like that were generally written out of her daily life and ignored if she did have to see them or run into them somewhere. \n\n\"So your going on a date with this Greg, the helicopter pilot, who will probably take you somewhere dangerous and I won't know where you are or whether you're safe,\" Vivienne sighed sadly.\n\n\"Why wouldn't I be safe?\" Marcella laughed. \"I think all the drama with the AFP and the Suebi has gotten to you. No one cares about me or what I do. Besides, you know I am a feisty bitch who can take care of herself. No one is going to take advantage of me or make me do anything I don't want to do,\" she grinned.\n\n\"There is some truth to that,\" Vivienne grimaced. \"I just worry about you. We all do, even Olivia,\" Vivienne said softly. \"I can understand that you get lonely being so far away from home, but you have us. I just worry that you seem to be drifting away from us lately.\"\n\n\"I don't understand what you want from me, Viv. You don't want me to date? You only want me to go out with Noah? You know you can't force two people together who have absolutely nothing in common, right?\" Marcella challenged her.\n\n\"He's under a lot of pressure at the moment, he probably needs a night out as badly as you do. Would it be so bad to hang out with him again and see what happens?\" Vivienne appealed to Marcie's softer side, the one she rarely showed anyone aside of herself and Olivia at times.\n\n\"He seemed his usual arrogant self last time I saw him. He was trying to tell me what to do and what not to do,\" Marcella grumbled. Like Vivienne, Noah had voiced his concerns about her friendship with Greg and flying off with him the way she had when she had gone looking for Olivia's boat. She'd been interrogated ruthlessly about her story, and she knew Greg had been thoroughly investigated, which she was sure both he and Vinnie had been ready for and unconcerned about. \"Why is everyone so concerned about who I call a friend anyway? It's not like the watchmen let me go anywhere without a tail anyway. I am perfectly safe, and you know it.\"\n\n\"I know it's silly but haven't you ever considered Noah as more than just...\" Vivienne sighed. \"If you two got together we would all be sisters. We would all belong to the same family, and we would always stay together, you, me and Olivia and all our new family and friends,\" Vivienne knew without a shadow of a doubt she had overstepped, but the horrified look on Marcella's face rapidly disappeared and smoothed out sympathetically.\n\n\"Look, Vivienne, he doesn't want me that way. I tried once, you know, to get close to him, way back in the beginning when we were all hanging out and doing the double date thing. He said no. He made it very clear that being with me was not even a remote possibility, so let it go, okay. We're friends, barely, but friends that can show up at family things together or dinners with his brothers and you and Olivia but it won't ever be more than that. He turned me down, not the other way around. So, you need to let me date, and find my own happiness somewhere else,\" Marcella explained in a way that could leave no doubt in Vivienne's mind that she was fantasising if she ever thought Marcella would join the Zenati family permanently. She was stretching the truth about Noah's rejections of her but not too much.\n\n\"I didn't realise, I thought he just wanted to wait. You never said he made it that clear before,\" Vivienne frowned.\n\n\"No, because he never said anything, and I am not about to advertise my own rejection to everyone. Just let it go now Viv, okay? Promise me you'll let that go and let me live my life the way I need to. I'm not now nor will I ever be part of the Zenati family,\" she said with certainty.\n\n\"Fine but it doesn't stop me from wishing it wasn't that way,\" Vivienne stretched out her hand to take Marcella's and squeeze it. Behind that tough exterior there really was a soft and fragile heart. Vivienne just wished Marcella didn't hide it so well from everyone. \"I'll stop pushing, and I'll even run a little interference for you if you need it, but don't close the door on him completely please, for me? Let me have just a little spark of hope that maybe one day we'll be family.\"\n\n\"We already are Viv; we don't need men to make our sisterhood legitimate. I already think of you as my sister,\" she grinned. It was true to a point, she certainly felt closer to Viv than Olivia at the moment.\n\n\"Just promise, please,\" Vivienne asked again. \n\n\"Fine, though I don't understand what the big deal is. Noah and I are friends anyway. We don't hate each other or anything drastic like that. I just want to go on a date with a guy who thinks I look hot and wants to kiss me. I miss that sort of attention and affection and dammit, I need it occasionally to remind myself just how fabulous I am,\" she laughed loudly, her veneer of uber-confidence back in place after showing such a vulnerable side to Vivienne. \"Now let's talk about you; you look content. I am assuming Gideon is great in the sack by the smile on your face every morning,\" she laughed again as her friend blushed a deep rosy pink.\n\n\"I can't complain,\" Vivienne finally stammered, too embarrassed to say anything else. Gideon made her heart and body sing for him each and every night as well as most mornings, and she was constantly amazed by his skill, patience and creativity as a lover. He made her feel beautiful and adored, and she felt pity for anyone who did have a love like theirs.\n\n\"I love that your so in love,\" Marcella softened again toward her friend. \"You don't have to kiss and tell, I can see the smug satisfaction written all over your face.\" It was true, she could also see that same adoration and love on Olivia's face when she was with Genesis even though it was obvious what a dominant misogynist prick he was. Still, it was hard to condemn him when her sister looked at him with such adoration in her eyes. She needed to get away from these people for a while, maybe even a day or two and recover from the sickly-sweet love that pervaded the air around the two couples.\n\n\"Let's go shopping before the spa this morning and get Olivia and Genesis a housewarming present. It will be nice to have her in our building and able to join us for morning coffee like this,\" Vivienne suggested.\n\n\"Sure, I wanted to check out a shop I heard about in town. Maybe we can kill two birds with one stone. I heard they had a gypsy there who reads tarot cards or some such,\" Marcella grinned.\n\n\"Sounds fun,\" Vivienne agreed. She didn't think much of fortune tellers, but if it made Marcella happy, she would go along for the ride. After the worry when she went missing and her aloofness recently, Vivienne was determined to strengthen their bond of friendship enough to have Marcella confide whatever was going on with her. They all felt it, especially Noah, but he seemed unable to bridge the gap between them. Now at least, Vivienne had an inkling why. She was lonely, and Noah had once rejected her and bruised the fragile ego behind the bold and ballsy persona she showed the world.\n\n*****\n\nNoah had done all he could to support the triad that led their table, and he had left them alone to be together before Dominic's surgery. He sat by himself in the waiting room leaning back with his head resting on the window behind him. He closed his eyes and let his mind wander over everything else he had to get done today. His plan all depended on timing and chafed at just sitting here waiting. He knew that he couldn't leave, not until Dominic was taken to surgery. He had ensured Xavier was coping and Emma was on her way to the spa with the other Zenati women who would care for her today and keep her mind from the seriousness of Dominic's surgery.\n\nA soft, warm voice sounded in his mind, and he felt the presence of Imelda settle into the chair beside him. Without opening his eyes, he drew a deep breath and extended his thoughts to her as she had shown him to do and asked, \"Why are you here old woman?\"\n\n\"Do you think I am so uncaring that I wouldn't be here today of all days?\" she asked in return.\n\n\"If you want to see Dominic you need to be quick, they will come and take him to surgery soon,\" Noah opened his eyes and sat forward resting his elbows on his knees and resting his face in his hands momentarily before looking up at her as she remained seated beside him.\n\n\"I have not come for Dominic. He does not need my assistance today, young Lord Zenati,\" she said with amusement lacing her voice.\n\n\"Then why are you here?\" Noah growled at the title she gave him repeatedly. \"I am not in the mood for your games today, old woman.\" Imelda constantly pressed each and every invisible button he had to annoy him on purpose he was sure.\n\n\"Dominic will live and be well to lead the family again. Your future lies with your mate and today you will need to prove your worth to her,\" Imelda explained. \"Some will have real love for her, others will have other motivations to utter the words and pretend with her. Do not be misled, her trust in you and equally your brothers will rely on your actions this day.\"\n\n\"I haven't even met my mate, as you put it. There has been no breaking of the curse as my brothers describe it, no great yearning to be close to someone, to protect them, to keep them for myself alone. You are wrong about this old woman,\" he said with certainty.\n\n\"You have a different spirit to that of your brothers. Your heart is already open, and you can feel and listen with it as a true oracle like your cousin Dominic. You are a Lord of your family, one in which the original bloodline runs truest, the fact you can hear me must tell you this much is true,\" she said in a frustrated lecturing tone. \"Why must the young always argue, young Lord?\" she lamented.",
        "\"What is any of that supposed to mean? That I am not my father's son?\" he asked incredulously. \"I am exactly like my father and brothers, in all ways!\" It was a lie, he knew it was a lie but he needed that familial bond more than ever recently, and he wasn't going to let this woman take it away from him with some stupid riddle of words.\n\n\"Your father and brothers are leaders of men because of their familial links and their place within the grand scheme of things. They each have specialised skills that make them invaluable in their roles for your table,\" she paused but Noah only sighed and leaned his body and head back again, prepared to let her talk having been on the receiving end of one of her lectures before and knowing she would not make her point until she was ready.\n\n\"You have specialised skills and familial ties just like all of the men of your family but more than that you have a... lack of ego, a spirit and sense of self that allows you to be exactly who you are without needing the approval of others. Some may see it as arrogance, but it is different in you, it is a self-assuredness that allows you to walk through the world unhindered by doubts as others are. Dominic is similarly gifted with the same open mind and heart. This allows you to let others less qualified or able than yourself to take the lead while you take on a supportive role, secure in the knowledge that your status as a leader is never questioned and as such you don't have the same self-protection barriers in place that other men carry. You, as Dominic has told you, will not suffer the same curse breaking signs as your brothers as your heart does not need freeing,\" she paused again as if she had finally run out of words.\n\n\"So, I will meet my mate today?\" he turned his head to look at her through narrowed eyes.\n\n\"You have already met your match, young Lord. You chose not to see her for who she was and rejected her out of hand but when she is in danger does not your stomach roil? When she is reckless do you not break out in a cold sweat and tremble with anxious energy until you see her and know she is safe?\" Imelda asked also narrowing her eyes in response.\n\nNoah laughed loud and long before he could stop and catch his breath enough to explain. \"You couldn't be more wrong, old woman!\" He chuckled again. \"Marcella and I are not compatible in the slightest. If you are trying to dupe me into moving like a pawn in one of your games, then you chose the wrong lie to dupe me with.\" He laughed loudly again and shook his head.\n\n\"Believe as you wish, but you knew her name without me even speaking it. You had no doubt of who I spoke. Your dismissal of her comes from misinformation not from what is true within your heart and mind. To keep denying her is to deny your own future. Today will be a turning point for many, most especially you, and how you react to the events that transpire today will determine your future with or without your true mate,\" Imelda warned and stood. \"Be well young Lord. Think about what I have said and the tacit friendship you have with the woman. Today will bring unpleasant revelations, and you must deal with them carefully.\"\n\n\"Dominic will be fine?\" he asked to be sure that the unpleasant events of the day wouldn't concern his cousin and the surgery he was about to undergo.\n\n\"You and he both know that he will recover fully in time,\" Imelda smiled. \"Dominic is not who you should be concerned about today.\" With that she left, walking so quietly from the waiting room it was as if she floated above the hard laminate floors.\n\nNoah tried to make sense of what the woman had come to tell him. Why had she come all this way to speak directly to him? His father's voice this morning, also referring to his big heart, echoed along with her words. It couldn't be true though. He may be able to play a supportive role in the family and his everyday life, but at home and particularly in bed, he needed his mate to be the beta to his Alpha, and he was sure that was something Marcella Gambaro would never do, not for anyone. It was a ridiculous notion that she could possibly be his one, his curse breaker. Yet Imelda's words lingered in his mind making him examine his interactions with Marcella recently.\n\n*****\n\nMarcella sat across from the tarot card reader in the small room bordered by a heavy curtain from the upmarket well-being shop beyond. She spoke in a hushed voice as she sat and introduced herself and saw the flicker of recognition in the woman's eyes as she shuffled the cards in her hands in a slow, deliberate motion. Going through the motions, the woman passed the cards to Marcella and asked her to shuffle and cut them before giving them back.\n\n\"I need to send a message to the Captain,\" Marcella hissed across the table.\n\n\"I know,\" the woman said placidly, unruffled by the obvious tension in the woman opposite her. \"Let us see what we see first, then you can give me your message.\" \n\nMarcella ground her teeth as she sat watching the woman and then listening to her speak about influences from her past that would affect her present and future. What the woman said was generalised enough that they could suit any number of people and situations and she assumed the woman spouted the same bullshit to all her clients. It was toward the end of the long reading that it became slightly individualised and more specific to Marcella. Then the woman paused and looked and narrowed her eyes considering the young woman across from her.\n\n\"You cannot run from your fate, you can only delay the inevitable by fighting the cords that weave the tapestry of your life. What has happened has all built to this time. Your destiny has been foretold through ages and continents. In the end, you will have little choice but to accept your destiny or turn your back on the happiness and true love that could be yours,\" she said while holding Marcella's gaze.\n\n\"I don't believe in destiny. You make your own success; you get back what you put out into the universe. Love is for fools and dreamers, not for a realist like me,\" she huffed and opened her mouth to deliver the message she had come here to leave for Vinnie but was halted as the woman spoke again.\n\n\"Regardless, true love, obsession and possession will come for you sooner than you think. The paths of three men will converge on you, one will try to force you to accept what you have always denied. The path he offers will be hard, but the rewards will be great. Another will seek to isolate and control you through fear and threats masquerading as care and affection. A third will offer what you think you want but to take it may well destroy you,\" the fortune teller warned seriously. \"Think hard on my words lady. Your future is perilous, and you must look past the obvious to see the reality of each man who seeks to own you.\"\n\n\"Own me?\" Marcella spat in indignation. \"You cannot possibly see even a hint of who I am in those cards if you think I would ever be owned! Save your warnings for someone who needs them,\" she huffed. \"Let the Captain know the price is too high, but I am open to negotiation for what I want. I want Hermione's and will go to the second messenger in two days for my answer.\" With that, she stood, and without waiting for a response, she strode purposefully away from the woman, parting the curtain to find her friend still browsing the large shop, holding some scented candles. \n\n\"Ready to go?\" Vivienne asked checking her watch and realising they would be cutting it close to meet the other women. \n\n\"Sure, you taking all of those?\" Marcella indicated the candles in her friend's hands. \n\n\"Yeah, they remind me of the ones we had in the yurt when we...\" Vivienne blushed and turned quickly toward the counter hearing her friends soft laugh behind her.\n\n\"That yurt sounds very romantic,\" Marcella teased. \"You're going to have to spill the beans some time, you know you want to tell me.\" \n\n\"I think I have told you more than enough about my wedding night,\" Vivienne whispered as they reached the counter.\n\n\"None of the really good bits though,\" Marcella grinned evilly as Vivienne blushed an even deeper shade of red.\n\n\"One day you will fall in love, and you will understand why I want to keep that night close to my heart and not for open discussion or commentary. One day you will understand just how special a real love can be,\" Vivienne warned.\n\n\"Oh no, you don't. You can't curse me with that goofy look you have whenever Gideon is around. I would like to keep my mind from turning into goo like yours does whenever you're with him.\" Marcella waved off her words easily. \"I'm not the type of woman men take home to meet the parents and make romantic proposals to. I'm the type of girl that's a challenge they feel they need to try to conquer only to find out it's not possible.\"\n\n\"It's true you're a force of nature,\" Vivienne agreed. \"I'm glad we're friends, and I am not one of the people standing in your path.\" She grinned teasingly. The truth was she knew Marcella had a softer side and a huge heart for the people she cared about. She played the bitch card well, but that wasn't who she was in her heart of hearts. Vivienne just wished she knew how to help Marcella let other people see that softer side of her nature more often. \n\nOnce again, she considered what she knew of her and Olivia's lives growing up in a house dominated by a man stuck in the past and archaic family traditions and how they had turned out so differently, and not for the first time she wondered what their other sister, Jessa, was like. If she had grown up hard and tough like Marcella or softer and sweeter like Olivia who was able to compartmentalise the horrible things that occurred in her life and move on. Perhaps she should make an effort to find out for herself.\n\n\"Alright, let's go an indulge in the spa treatments,\" Vivienne announced, taking her purchases from the woman behind the counter and walking toward the door with Marcella. \"Any idea what sort of treatments you want to try today?\"\n\n\"All of them,\" Marcella grinned as they made their way to the car.\n\n*****\n\nNoah was standing back from the entrance to the spa giving Xavier space to talk quietly with Emma before leaving her for the rest of the morning with the other women. He saw Marcella approach with Vivienne and tried to clear his mind and just concentrate on what he felt as he watched her. It was fucking ludicrous, he reminded himself, shaking his head. The old woman had just been trying to rattle him and take his mind off Dominic and the bigger picture of what today meant for him, for Genesis, for their table and the family as a whole. If they lost Dominic, the family would struggle to recover. He was their glue, the bridge between generations, cousins and brothers. He was simply indispensable, and Noah had no illusions about being able to fill his shoes even temporarily.\n\n\"You okay?\" Xavier asked taking Noah by surprise and making him drag his gaze from where Marcella now stood at the front counter with Emma and Vivienne.\n\n\"Yeah, just sending up another prayer, you know?\" Noah gave the feeble excuse for the look of consternation he realised he had been wearing. The old woman had definitely been playing mind games with him this morning. There was no way Marcella of all women could be his curse breaker. He shook his head again and turned to survey the watchers scattered about the complex and knew there would be more inside including at least one of Olivia's bodyguards. The women would be safe here today.\n\n\"Alright, let's go check in with operations. Something came up while we were at the hospital. We'll deal with that and whatever else is on the agenda, then we'll pick up Emma for lunch before we go back to the hospital. Ambrose will call if anything happens,\" he said sounding as if the words were more to reassure himself than explain the plan to Noah. They walked out to the waiting car and drove back in silence, each lost in their own thoughts.\n\nGideon had been watching over operations with Orlando in Xavier and Noah's absence, and as the two men came to sit them, Noah could sense some sort of tension over and above the worry for Dominic. He silently raised an eyebrow at his brother and inclined his head as if to prompt him to speak.\n\n\"There's a Martino jet coming in. It will land in an hour or so. Apollo Martino, he says he has business here and is asking for a guest apartment or suite and a motorcycle when he arrives,\" Orlando said before Gideon could open his mouth.\n\n\"I thought the Martino's were still on lock-down after the attack on the mothers,\" Genesis grumbled coming to sit with the group as did most of the others who were present in the base of operations.\n\n\"Seems they're loosening the reigns a little. It has been a while now, and the Tatar and AFP have been pretty thorough there,\" Xavier said with a frown. \"What do we know about him? Apollo seems like a Savoy name, but you said, Martino?\"\n\n\"Most of the high-ranking Savoys have been exiled, those that stayed had to make the change as a sign of allegiance to the table and its leaders. It's been a shit show down there, but the dust is finally settling, and the Savoys have been outcast if they didn't accept the change. Apollo is well respected in the family and when the dust settles could be on the newly formed table,\" Orlando filled in what he had managed to learn so far. \"We're still working it.\"\n\n\"What sort of business does he have here?\" Gideon frowned. He hadn't come across the name before in his dealings with the Martino family.\n\n\"He didn't say, just that it was personal and wouldn't affect our family or our business dealings in this city at all,\" Orlando added. \"Quinto took the call early this morning, from the family exchange.\" He nodded to the younger man at the far end of the table. The younger man looked up from where he sat talking quietly with Zanto. They made a good team with their technical skills and knowledge, and were looking at ways to improve the communication set up in their base of operations.\n\n\"Can't hurt to have him here I expect; it's a free world. If we offer him the accommodation he wants, we'll just need to be extra vigilant with everything else going on today. Where have we got available for him to stay that's not close to anything sensitive?\" Xavier was still considering what the man would want or expect from them aside of a room to stay in. Without familial ties or friendships like his own with the leaders and oracles of the other tables, it was rare to get a random visit with requests like this. \n\n\"Most of our family have stayed out of the city since the attack, although a few are here for Dominic. We have space at our apartment block, but it's possibly better to go for one of the hotel apartments in the centre of the city. Especially as Olivia and Marcella will be at ours for a while longer. We can't be sure of the effects of the fallout from Mario's betrayal on the Martino table, and given the investigation into Olivia at the moment it might be best to keep them apart,\" Genesis said gruffly. He was more than wary about having a Martino in town. Even before the attack on the mothers, he disliked the table that flaunted their wealth and power in overtly excessive lifestyles.\n\n\"Yeah, something doesn't sit right with this visit,\" Noah agreed. \"Best keep him separate from anything sensitive that's going on at the moment. Do we still have that apartment in the Tall Trees down on the foreshore?\"\n\n\"Yeah, and Val always had a few bikes in the fleet ready to go,\" Xavier looked around and raised his voice slightly to his cousin who was not at the table but rather using a laptop off to the side of the larger group. \"Val!\" he jerked his head indicating the man need to join their conversation.\n\nAfter a further twenty minutes of discussing the details of how to show the family's largesse while protecting themselves and the family from any issues that might arise from having a visiting Martino within their city, Xavier ceased all speculation and made some decisions.\n\n\"Noah, take Orlando to pick him up and get a feel for the guy while you take him to the Tall Trees. Val can meet you there with Gideon and the car and do a hand over of keys. Take him to lunch if he will let you and see if you can find out exactly why he's here,\" Xavier issued orders before speaking more quietly to Noah. \"If your running late Taino will be with Em and me. We'll meet you when you're done. Be thorough, don't hurry because of me or Em. Make sure he is no threat to us or anyone linked to us,\" he said seriously. \"You're in the oracle chair, it's our responsibility to protect this family regardless of what else is going on around us.\"\n\n\"I'll be there, don't worry,\" Noah said confidently knowing that keeping Emma calm and distracted today was their main priority. He stood and looked at Orlando who packed up his ever-present tablet and the two men left the building, choosing to drive themselves to the airport considering the small amount of information they had been able to glean in the short amount of time Orlando had been working on it.\n\n\"Son of the most recent warrior, he trained at the Battaglia compound, first as a warrior and then as a Master. He spent a lot of time with the Battaglia since he turned sixteen, and they vouched for him when his mother was exiled with the Savoys. He was at the Battaglia compound when the shit with the Donatis went down but wasn't involved in it as far as my source knows. He's also made several visits to the Gambaros, possibly as a prospective warrior for their new table, but we can't confirm that yet. He may know Olivia and Marcella, depending on his ties to the Gambaro family. Maybe the sisters are his business here?\" Orlando speculated as if talking to himself.\n\n\"He'd have to get through Gen to get anywhere near Olivia. Gen's been more than overprotective recently because of the AFP,\" Noah warned. \"Though finding her boat went some way to heading them off. If we could find evidence of a more significant part of her story it would put a lot of the speculation to rest.\"\n\n\"True, maybe Marcella invited him because he has a clue or might know something or someone who can offer up those answers she's been searching for. I have to admit after the way she went about finding the boat she has pretty good skills. It genuinely could be Marcella he is here to see, odd as that seems,\" Orlando suggested.\n\nThe words of the old woman that morning slammed into Noah again. How he and his brothers reacted today could make or break her trust in them? Could this be the crisis they would react to? Badly? He frowned as he considered if Marcella was indeed the reason Apollo Martino was flying into Darwin with very little warning and practically unannounced. His was not an unusual request. Many people asked for the same hospitality. It was merely the circumstances that had caused the request to come through to the younger table and the timing in regards to the freedoms of his family to be flying freely around the country that caused him to question the motives behind the visit.\n\nThe one person he could talk to about Imelda's predictions was currently having his skull bored into by surgeons. His brothers both had enough on their plates today of all days, and he was stuck here with the one guy who would put the family as a whole above an individual's wants and needs, so he could not talk to him about his concerns and doubts or the fact that the old woman could speak in his mind. Not that he knew what he wanted or needed and he cursed the old woman for placing this unsettling blanket of confusing questions over him today of all days. Thankfully, Orlando left him to his silent brooding as he continued to work on his tablet, gleaning as much information as the could before meeting the visiting Martino.\n\nThe silence remained as they waited on the tarmac of the private airfield for the jet to taxi in. The watchmen, knowing what happened to the Papillo earlier in the year at their private airfield, were on full alert, and Noah frowned that anyone would fly into a capital city without going through the usual family protocols if they expected preferential treatment as this man seemed to. Almost in unison he and Orlando stepped from the car as the stairs were locked in place and the jet door finally opened to reveal the man they had both been speculating about.",
        "The sun shining from the top of the jet beyond the head of the tall, broad Adonis who stepped out of the plane made him look every inch the sun god that he had been named after. Noah studied the man as he came down the stairs smiling widely as if greeting old friends. His white business shirt stretched across his chest so tightly Noah wondered if he should be concerned about the buttons popping and becoming missiles. His sleeves were rolled up and sat around bulging forearms that sported tattoos that obviously belonged to a long sleeve of tattoos on each arm. The casual look and jeans did nothing to diminish from the power the man radiated, and Noah was momentarily stunned by his appearance. This was not what he had been expecting at all.\n\n\"Apollo,\" Orlando said in a serious voice and stepped forward holding out his hand. \"I'm Orlando Zenati, and this is Noah,\" he introduced themselves to the visitor. \"Do you want to wait for your luggage or are you happy for one of the men to take it on to the hotel while we take you to lunch?\"\n\n\"Welcome,\" Noah said taking the man's hand as he turned from Orlando to face him. \"I can't make lunch, but my brother will be at the hotel to help you with anything you need. Unfortunately, the leaders of our table are unable to greet you today due to a family issue.\"\n\n\"No worries, it's the same everywhere since the attack,\" he said easily. \"I appreciate the welcome party rather than just sending a car.\" He looked toward the plane. \"I travel light,\" he hefted the large bag slung over his shoulder. No need to wait. Lead on, good sirs,\" he said cheerily and grinned at them.\n\nThey approached the car, and Apollo stepped forward opening the rear door and thrusting his bag across the seat before scooting in after it. Shrugging, Noah and Orlando got into the front with Noah still driving so Orlando could talk with Apollo about exactly why he had come to Darwin so suddenly. The engine had barely started when Apollo began speaking without any prompting.\n\n\"It's okay gentlemen, I know the deal. I would have let you know I was coming earlier, but I came through Perth and didn't realise I would be heading up this way until I got there,\" Apollo volunteered. \"Before that, I was in Canberra helping with the investigation. It's been a busy few months, but I wasn't about to miss the birthday of the woman I plan to marry so here I am,\" he chuckled. \"I'm not here for any other reason than to see her, so there's no need to worry. I just need a place to stay, a bike to get around on for a day or two and for you to tell me how to find the birthday girl before the day runs out. I'm on the clock so to speak.\"\n\n\"Does this birthday girl who you plan to marry have a name?\" Orlando asked guardedly considering the two sisters from Perth that were staying with them at the moment.\n\n\"Marcella Gambaro, she is here looking after her sister. I expect you've met her,\" Apollo said.\n\n\"She never mentioned that it was her birthday, today,\" Noah blurted as a cold hard rock sunk to the bottom of his stomach. Still, no heart attack or knife twisting in his gut but he felt ill and his fingers wrapped tightly around the steering wheel.\n\n\"She wouldn't. I imagine she had been dreading this one, but I came to make sure she knew at least one person on the planet remembered and came to celebrate with her,\" Apollo shrugged. \"I expect you've noticed that she's a feisty bitch and doesn't make friends easily,\" he chuckled again as if sharing a secret with them.\n\n\"That's the way you talk about the woman you want to marry?\" Orlando asked, forestalling whatever Noah was about to say with a look. He could see Noah's knuckles whitening with his grip on the wheel and his expression of discomfort.\n\n\"That's the way she talks about herself my friends,\" Apollo assured them. \"Trust me, she wouldn't be offended by the description. Besides, the meek and mild doormat type isn't for me. I like a girl who will put up a fight for what she wants.\"\n\n\"I doubt anyone here would be brave enough to describe Marcella Gambaro as meek as mild,\" Orlando gave a good-natured chuckle as he studied Noah intently. \"How is it that you didn't come straight here to find her. She's been here for some time now, yet you went via Perth.\"\n\n\"I've been on lock-down, and it's not unusual for Marcella to ignore my calls if she feels I've been remiss or ignoring her. She doesn't take rejection well, even if it's only imagined,\" Apollo lamented. \"No worries, I'll fix it once I see her. I assume you can organise a meeting for me after lunch and once I have checked out where we'll be sleeping tonight?\"\n\nNoah's stomach roiled and cramped, and he ground his teeth together so as not to refute the man's words. Why wouldn't Marcella tell anyone she was engaged. Why would she ask him to pretend to date her in those early days if this guy was on the scene already and wanting to marry her? The questions spun in his mind as he fought vicious nausea that assailed him when suddenly Imelda words about his feeling ill when she was in danger sliced through the questions, and he cursed her again.\n\nNoah barely listened to the rest of the conversation as he drove to the Tall Trees Resort and pulled into the valet area where Gideon and Val waited. Gideon took one look at Noah through the windscreen and bounded over the car in few loping strides.\n\n\"I'll introduce our guest to the mechanic, looks like Gid's got an important message for you,\" Orlando said stepping from the car and holding the door open for Gideon to climb in and speak to Noah.\n\n\"First, stop choking that steering wheel, then tell me why you look like your about to pass out,\" Gideon said with quiet intensity. This wasn't the cool, calm and collected Noah he knew so well.\n\n\"That man claims to be Marcella's fianc\u00e9,\" Noah said woodenly.\n\n\"She never even hinted that she had a relationship let alone a fianc\u00e9. Vivienne would have known if that was true,\" Gideon frowned. \"Heart attack?\" he asked carefully knowing that both he and Marcella denied any attraction at all between them.\n\n\"Oracles don't get heart attacks. Dom didn't with Emma either,\" Noah said still coming to terms with how ill and faint he felt. \n\n\"You look like death,\" Gideon said. \n\n\"I don't feel much this side of it. Somethings not right about this guy and I can't work out if it's me and my prejudices or something else more sinister. See what you can find out over lunch. Don't tell Vivienne yet. I want to see Marcie myself. Her expression should give away any feelings for the man when she finds out he is here because, from what he said, she hasn't been answering his calls. He went to Perth to find her first despite her been here so long,\" Noah said, his body finally relaxing as a plan formed in his mind to confront Marcella with the information. \"Tell Orlando to stay and keep digging too.\"\n\n\"She's your curse breaker after all?\" Gideon asked unsure what all of this meant.\n\n\"Maybe, it's different for oracles, and even if she is, I'm not sure either of us wants that sort of relationship with the other,\" he sighed. \"She's as far from the type of woman I want than I can tell you. Apollo describes her as a feisty bitch, and he claims to love her enough to want to marry her. Who says shit like that about the woman they love even if it's true?\"\n\n\"I can't argue with his assessment of her. She is a feisty bitch on a good day,\" Gideon chuckled.\n\n\"Just keep him here and occupied with lunch for a few hours okay? Give me some time to ask Marcella about him,\" Noah asked. \n\n\"Sure, call me when you're done or if you decide to bring her here to see him. Let's keep the fallout of that meeting to a minimum and get you to the hospital with X and Em in a timely manner. It's one thing to miss lunch, but you need to be there when Dom comes out of surgery.\" Gideon could hear that need in his brother's voice and had to remind him of what the priority was today, regardless of what was going on. The problems between him and Marcella weren't going to be fixed in a day if they could ever be fixed.\n\n*****\n\n\"Ladies,\" Noah said smoothly, having had time to process what had happened earlier and appear as he normally did as he approached Marcella and Vivienne. He'd told Xavier of his plans and intended to take the two ladies to the same restaurant where Marcella was less likely to make a scene when he told her who was visiting and what he claimed to be to her. Then he could leave with Xavier and Emma to return to Dominic. \n\n\"Noah! I thought you were looking after Xavier today,\" Vivienne didn't hide her surprise at seeing him there.\n\n\"Taino is taking them to lunch. Gideon has been caught up with some family business and asked me to take you to lunch in his place,\" he said easily. \"Ready to go?\"\n\n\"I guess. Maybe you two should go alone, I'm not that hungry,\" Vivienne hesitated.\n\n\"Don't be silly,\" Marcella chided knowing what her friend was trying to do yet again. She wished Vivienne would let this matchmaking go already. \"Let's make him buy us a hideously expensive lunch somewhere nice,\" Marcella grinned. \"I'm feeling seafood, maybe lobster tails?\"\n\n\"Anywhere will be fine with me,\" Vivienne laughed and shook her head at Marcella. \"Thank you, Noah, that would be nice.\"\n\n\"Great, we can collect your cars after lunch,\" he said leading them away to his car. He engaged in small talk on the ride to the restaurant, letting the two women take the onus for carrying the conversation as he collected his thoughts. His brain still warred with Imelda's words, Apollo's words and the feelings both of them created in him. There had to be a logical reason for his reactions today. His brain refused to believe what all the evidence pointed to. How could he not know? How could a woman like her be meant for a man like him? It just wasn't possible. \n\nHe waited until they were seated and the wait staff had snapped crisp linen napkins across their laps and taken drink orders before he smiled at the women and pulled a gift box from behind his back where it had been wedged between his belt and his jacket. \n\n\"Happy birthday, Marcella,\" he smiled softly at the look of surprise on her face as she looked from the gift-wrapped box to him and back again.\n\n\"Wait! It's your birthday, and you never said anything?\" Vivienne exclaimed.\n\n\"I guess a girl can't have any secrets any more. I bet they even have a file on how many times I poop every day,\" Marcella rolled her eyes not touching the gift box as if afraid it might bite her.\n\n\"It's not much, just something I thought you mightn't have gotten around to getting for yourself yet,\" Noah said carefully pushing the box closer to her across the table.\n\n\"Open it, I want to see!\" Vivienne practically bounced in her seat as their drinks arrived and Marcella picked up the box to make room.\n\n\"Keep your knickers on,\" Marcella grumped and opened the wrapping to reveal the white Apple Watch box. She'd handed over her last watch when she had found the boat and hadn't been able to replace it yet as her own savings were rapidly dwindling and she was careful about what she charged to the Zenati credit card she held. \"Thank you, Noah. Really, you didn't have to but thank you.\"\n\n\"I thought you probably wouldn't get your watch back from the AFP anytime soon,\" he shrugged as if it was no big deal. \"It's a newer version. They didn't have any of the threes in stock, but this one has better features regardless.\"\n\n\"Happy birthday, Marcie. You really should have told us. I feel awful that not even Olivia wished you a happy birthday this morning,\" Vivienne sounded truly upset at the idea. \"I promise we will make it up to you,\" she picked up her glass of wine as if making a toast and clinked her glass to Marcella's. \n\nNoah tried to gauge when was the best time to open the conversation about how he had known it was her birthday when she gave him the opening he needed.\n\n\"So, are you investigating me now, Noah?\" Marcella asked acerbically. \"Do you also know my favourite colour and flower?\"\n\n\"Actually, I was as clueless as everyone else when I first saw you at the spa this morning, but then we had an unexpected call from some wanting to visit and asking for a family room and transport. I went to pick him up from the airport. Imagine my surprise when he told me he was here to visit his fianc\u00e9e on her birthday,\" Noah gave Marcella a tight smile. \"Apollo Martino is very keen to see you today, the question I have is... do you want to see him?\"\n\n\"Apollo is here? In Darwin?\" Marcella gasped, her eyes wide in surprise or shock or a combination of both, Noah couldn't tell, and the heavy rock in the bottom of his stomach rolled with her recognition of his name. \n\n\"He would have let you know, but apparently you haven't been answering his calls. He flew to Perth to see you before coming here. Not a very nice way to treat the man who claims to be your fianc\u00e9,\" Noah said his voice harder and more judgemental than he meant it to be.\n\n\"You can make all the assumptions and judgements you want. You obviously aren't interested in asking me about Apollo but rather accusing me of keeping my private life private! You know nothing about me, Noah Zenati! You've never bothered to get to know the real me because you family men get all your information on a nice neat little computer printout. Why would you bother asking anyone anything! But just so you know, Apollo is not my fianc\u00e9, and I don't owe him or any of you an explanation of where I am or what I am doing at any given moment,\" Marcella seethed hissing the words through her teeth. Then she got up and threw the gift at him. \"Not that your family have given me any choice about that,\" she turned, indicating the obvious watchmen and stormed from the restaurant.\n\n\"You had that coming, Noah. I know you are under a lot of pressure at the moment but you don't get to treat people like that. She's done nothing but try to help her sister since she got here and still you all treat her like a criminal, having her followed and spied on everywhere she goes,\" Vivienne shook her head sadly. \"I really thought better of you. Wait for me, Marcie,\" she called and hurried after her friend. \n\nHe had the answers he wanted at least for a whole multitude of questions, and if he didn't feel so guilty and nauseous, he would have immediately charged after them, but instead, he slumped in his seat or a moment. He'd fucked up big time, and now he just had to live with it. He sighed and stood to take a deep breath and quiet his gut. He had driven the girls here, he needed to ensure they got back safely even if he had a watchman return them to the spa and their car. Gideon could deal with the fall out of his actions. He needed to apologise, but he was fairly certain she wouldn't listen to him right now. He eased his conscience by reminding himself that he needed be there for Xavier, Emma and Dom today and didn't have time to chase after the two women.\n\n\"Lies,\" his subconscious told him. He knew he had been a complete arsehole, he hadn't been able to help himself. The words themselves were not harsh, but he knew his demeanour and tone were and that was what had elicited her reaction. He spoke with the nearest watchman about taking the ladies home. For his own self-preservation and hers, he needed to give Marcella space until he could work out what the hell was going on and talk to her like a rational humanbeing. Imelda couldn't be right, he refused to believe it, but even as that thought entered his mind, he knew it was a lie. The thought of seeing Marcella with Apollo the fucking sun god made him feel sick, no matter how much he denied it. All he could do was step back and avoid them while the man was in town and let the chips fall where they may. \n\n\"You're such a fucking arsehole,\" he told himself. Avoidance wasn't his usual mode of operating but confident that the two women were being looked after by the watchmen he went to find Xavier and Emma. \n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "morning sex",
        "strangers",
        "accident",
        "family",
        "friends",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-13"
}