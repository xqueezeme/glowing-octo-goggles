{
    "title": "Lynn's Alley Ch. 21",
    "pages": [
        "\"Okay, ladies; just a bit closer&hellip;yeah, like that&hellip;hold it, hold it&hellip;&hellip;got it!\"\n\nSami and Ramona relaxed but their eyes stay locked with each other for a few seconds longer than necessary, I thought. They were silent as they put on their respective wraparounds, covering their nudity.\n\n\"Good session, you guys,\" I said to them both, \"very hot, very sensual,\" meaning every word as my slightly damp panties would attest to.\n\nRamona is a full-time student and a photo model in the city; high-end department store model for catalogs, etc, as well as a free-lance model for photographers and artists. She was a junior at a prestigious Women's University here, in the city, and quite a lovely young woman.\n\nShe was tall, like Sami, 5'10\" or so, with a bit more weight than Sami-girl carried by about 10 lbs or so. Her breasts were fuller and slightly larger, the darkness of her nipples contrasting nicely with the mocha-colored skin of her body.\n\nI had started my second Erotica series and was shooting at night, after the Gallery was closed for the day. Sami, bless her heart, put in a full day at the Gallery and another couple of hours at night as part of my shoot. \n\nRamona was the second girl I had used so far, and like the other model, she and Sami were the subjects of my series. Just like when I had shot the first series, I showed no faces, just bodies; full, curves, overlapping arms, or overlapping legs. \n\nThe shot tonight was the first time I had used their faces in profile, or in any way; the shot was full bodied, they leaning against each other, their breasts pressed against the other's, and their lips a millimeter from touching. The contrast between Sami's whiteness and Ramona's blackness showed up so damned well in the viewfinder of the Hassellblad and I hoped the contrast would show up equally well on the black and white, high-contrast film I was shooting with.\n\n\"Yes, Lynn, I'd agree; that was a very hot session,\" Ramona remarked, her eyes still on Sami. \n\n\"Any more shooting tonight?\" she asked, her eyes finally breaking from Sami and looking to me, now.\n\n\"Nope, I think we'll call it an evening, girls; I'm tired, I'm sure ya'll are tired, and I need to develop the rolls while I still have the energy. Ya'll go home and thanks again for a really good shoot,\" disappearing into my darkroom with a wave over my shoulder.\n\nAlone, in the darkroom, I stewed about the Maui shop; I stewed about the thoughts, not sure about whether or not if I wanted to be a 'slave' to the business as we had become since opening the Gallery.\n\nI need to talk with Ali, I thought to myself, I need to share my misgivings, the chemicals assaulted my nostrils.\n\n<p align=\"center\">~</p>\n\nRamona was standing in front of the Gallery, waiting, when Sami exited the Gallery.\n\nSami saw her just before she opened the door; standing in the darkness of the Gallery, she just looked at Ramona, looked at her for a few minutes before she opened the door to leave.\n\n\"Need a ride, Ramona?\" Sami asked, standing just a few feet from this tall, Nubian princess.\n\n\"Don't want to take you out of your way, Sami, but thanks for asking; my roomie said she'd be able to pick me up but she's not answering her cell, Damnit,\" Ramona answered, her eyes locked with Sami's.\n\nThey just looked at each other for a bit, neither saying a word until Sami spoke.\n\n\"Good session, tonight,\" Sami said, \"hot, as Lynn said,\" moving towards Ramona but stopping a foot short or so of touching bodies.\n\n\"Yes, yes it was; very hot, as you say,\" Ramona's eyes reaching into the depths of Sami's soul, now.\n\n\"I could bring you back to your place; it'd be no problem,\" Sami pressed Ramona.\n\n\"Yes, it would be a problem, Sami; I have a roommate and I'm guessing she's balling her boyfriend is the reason she's not answering her phone.\"\n\n\"I don't have any roommates, but I do have some magic herb to pass the time\" Sami said idly, walking past Ramona, towards her car in the lot down the street.\n\n\"Then I guess I'll take that ride, if the offer's still open,\" Ramona said, turning to follow Sami.\n\n\"Oh, it's still open, princess, it's definitely still open,\" Sami answered, stopping and waiting for Ramona to catch up to her, taking Ramona's hand in hers when she did.\n\n The ride to Sami's apartment was a quiet one, both Sami and Ramona sensing the sexual tension between them; the tension that's been present whenever she and Ramona modeled for Lynn. Even as the passed the doobie between them on the drive to Sami's apartment, they were silent.\n\nWhen Sami closed the door behind her, after they entered the apartment, Ramona turned to face her, her mouth opened ever so slightly, but enough to appear inviting to Sami.\n\nSami kissed her, their tentativeness giving way to animalistic hunger, when their tongues touched. There were no words between them, none were necessary; their lips were doing all the talking for them.\n\nSami's hands found and fondled Ramona's breasts through her top while Ramona hands gripped the sides of Sami's head, holding Sami's mouth to her lips.\n\n\"I've wanted to do that from day one of our shoot,\" Ramona breathed into Sami's ear, following it up with a warm, wet tongue tracing the outline of Sami's ear.\n\n\"Me too,\" Sami said as she slipped her hands under Ramona's top, reaching around her back to unfastened her bra.\n\nRamona's hands were busily unbuttoning Sami's shirt, moving the two halves aside so that she could kiss and suck on Sami's braless breasts. Sami held Ramona's head to her breasts, rubbing one of her hands into the back of Ramona's jeans, her fingers stretching to feel her gorgeous ass.\n\nPulling her mouth from Sami's tit, Ramona said, \"We need to be in your bed, baby, we need that,\" returning her mouth to Sami's hard nipples, the noise of her suckling, loud in the quiet apartment.\n\nThis is what Lynn should be shooting, Sami thought as she traced a path with her tongue from Ramona's nipples, down her belly, stopping just short of her close-cut bush, trimmed to frame the top of her pussy.\n\nThen, as she enjoyed the musky scent of Ramona, Sami lowered her head to do what's she's loved to do for so very long.\n\n\"Damn, damn, damn, girl, just like that, baby, oh yeah&hellip;&hellip;\" Ramona's voice commanded as her 'nut' was about to bust.\n\nAnother satisfied customer, Sami thought to herself, as she redoubled her efforts at eating this gorgeous black girl's pussy, Ramona's cries of contented sexual release very loud in the bedroom.\n\nJust as soon as her orgasm was over, Ramona pulled Sami from between her legs, grabbing Sami's head and kissing her hard, trying her damnedest to slide her tongue down Sami's throat.\n\nKissing Sami in a sex-induced frenzy, Ramona pushed Sami onto her back, and quickly getting between Sami's opened legs, Ramona ate her very first white-girl pussy; she ate it with abandon, getting high from the delicious mixture of Sami's scent and the smell of raw sex.\n\nLater, when they were snuggling in each other's arms, touching and kissing gently with each other, Ramona confessed; \"Never been with a white girl before.\"\n\n\"It's all pink on the inside, baby,\" Sami said between bites of Ramona's nipples.\n\n\"Yeah, it is, isn't it,\" Ramona said as she felt arousal from Sami's bites to her breasts.\n\n\"I take it that you've been with Black women before,\" Ramona said, not sure why she said it.\n\n\"Like I said,\" As she crawled between Ramona's legs for another 'taste', \"it's all pink on the inside,\" Sami's head disappearing between Ramona's legs, again, after she said it.\n\nRamona lasted only two minutes before she exploded, yet once more.\n\n<p align=\"center\">~</p>\n\nRaising her head from between Ali's legs after Ali's orgasm quieted down, Lynn laid it on Ali's thigh, looking up to Ali's contented smiling face.\n\n\"I never tire of you doing that to me,\" Ali said as she softly and gently stroked the side of Lynn's face.\n\n\"Good; 'cause I never tire of doing it,\" Lynn cheerfully said, her voice soft and low in the darkness of their bedroom at the manse.\n\n\"Wonder if we'll still be doing this to each other in twenty years,\" Ali mused as she welcomed Lynn into the crook of her arm, her hand smoothing Lynn's hair from her forehead.\n\n\"I hope so; but, if not, I'd be happy just to be able to snuggle with you like we're doing now,\" Lynn answered honestly, her contentment showing in her voice.\n\n\"Given any more thought to the shop in Maui?\" Ali asked with her head resting on the top of Lynn's.\n\n\"Oh yeah, lots of thought about that, that and some other things,\" Lynn answered, her fingers absent-mindedly 'walking' through Ali's forest.\n\n\"Like what?\" Ali asked.\n\n\"Like, maybe, buying a home there; somewhere near the beach; like, moving there with you permanently and just returning a couple of times a year to the city,\" Lynn said, punctuating her remarks with a tongue flick across Ali's nipple.\n\n\"That's funny,\" Ali said, sliding down to be able to kiss Lynn on the lips, \"I have too,\" her lips kissing down the body of the woman that she loved oh, so damned much.\n\n\"We need to talk about that some more, after I've had my dessert, okay?\" Ali said as her lips reached Lynn's clitoris.\n\n<p align=\"center\">~</p>\n\nBetween her shooting projects, and being at the Gallery, Lynn thought, it's a miracle that Ali and I find the time to make love anymore. This was just one of the myriad thoughts that were bouncing around in her brain as she drove down to the Lower Nine in her roadster for some 'character shots', as she called it.\n\nWell, she thought, downshifting to second for her turn, Ali and I really do need to talk, talk soon.\n\nAli was finishing wiping down her brushes with the cleaner, storing them in her travel kit, while her subject was pouring them some wine. The subject, a lady flush with 'new money', insisted on being painted in the nude; Her name was Flo, she was a few years older than Ali, maybe 38 or 39 and she'd been very forthcoming in her desire to lure Ali into her bed.\n\n\"Here's to you,\" Flo said to Ali, handing Ali her glass of wine, then bumping her glass against Ali's.\n\n\"Thank you,\" Ali said, a bit uncomfortable that Flo was still naked from the sitting.\n\n\"Let's sit down, do you mind?\" Flo said, indicating a small love seat in the bedroom where she had posed for Ali.\n\nSitting, facing each other, sort of, Flo kept staring at Ali over the rim of her wine glass.\n\n\"So, what's it going to take for me to get you into bed with me, Alice?\" Flo asked very straight-forwardly.\n\nTaking in a deep breath, Ali answered her; \"You know, a few months ago, all you would have had to do would have been to ask.\" \n\n\"You're very attractive, Flo, but with all the stuff going on with the business and all, my mind is really too preoccupied to think about casual sex.\"\n\n\"Too bad,\" Flo said, \"I know things; I bet you know things too,\" and placing her wineglass on the coffee table in front of them, she leaned in to kiss Ali.\n\n\"Flo, I can't; I'm sorry but I just can't,\" Ali said, setting her own glass down and rising to leave.\n\n\"Sure I can't change your mind?\" Flo asked licking her lips seductively at Ali.\n\n\"Rain check?\" Ali asked, moving to retrieve her case.\n\n\"Sure, Alice, a rain check,\" Flo said, clearly disappointed with Ali's decision to leave.\n\nPulling away after backing out of Flo's driveway, Ali pressed down hard on the accelerator, a bit angry at the fact that her head was elsewhere, thinking about how busy they have been these past few months.\n\nLynn and I really need to talk, Ali thought as she drove back to the Gallery.\n\n<p align=\"center\">~</p>\n\n\"These really look good, Lynn,\" Sami said as she looked over the proof sheet that Lynn had printed from the last session with her and Ramona.\n\n\"Lot of chemistry going on between you two,\" Lynn said, somewhat absentmindedly as she looked for a magnifying loupe to closely examine the proof sheet.\n\n\"Just trying to give you the emotions you were searching for,\" Sami said in response to Lynn's comment. Of course, she hadn't told Lynn that the chemistry was real between her and Ramona. \n\n\"Well, looking at these shots, I'd say that you girls hit a homerun,\" Lynn said, smiling at the images on the sheet.\n\n\"Good,\" Sami said, walking away from the light table, \"Hon, I'm going to go home now and I'll lock up behind me, okay?\"\n\n\"Yeah, thanks Sami-girl, I'd appreciate it,\" Lynn said, her eye returning to the loupe.\n\n\"We need to talk,\" they both said at the same time when Ali tramped up the stairs with her case of paints and brushes.\n\nLooking to each other at the sameness of their words, they smiled and embraced in the middle of the studio. Getting a beer for each of them, Lynn brought Ali to sit with her on the sofa in the studio space.\n\n\"You or me?\" Lynn asked Ali.\n\n\"You,\" Ali said, sipping her beer for a long time, her eyes closed as the cold brew slid down her throat.\n\n\"Okay,\" Lynn said, taking a sip of her beer before she began; \"I've been rethinking the Maui shop thing, Ali.\" \n\n\"Me too, baby,\" Ali idly commented.\n\n\"I love having our shop here, in the city, but even though Sami's doing an outstanding job of running it, and taking care of the website orders and all, the business stuff is draining me.\"\n\n\"Me too, baby,\" Ali said, nodding her head in agreement.\n\n\"I hate that I can't have the time to do my photography my way, without the pressure of running a business; I hate that we're so fucking busy that you and I barely have time for each other, much less the casual fun we use to be able to have,\" Lynn explained further.\n\n\"Me too, baby,\" Ali agreed.\n\n\"And I hate that I feel this way, but if you want the honest-to-God truth about what I'd like to see our future being, it's not this,\" Lynn said somewhat sadly, \"I want to be able to do nothing but my photography, on my schedule, on my time, on my muse. I want us to be 'us' again, you know?\"\n\n\"Me too, sugar, me too,\" Ali's voice, equally sad-sounding.\n\nThey were silent for quite a while, both lost in their own thoughts. Ali broke the silence.\n\n\"My perfect world would be one in which we moved to Maui, doing our art, not running a shop; my perfect world would be one in which we 'retired' to Maui, still owning the Gallery, along with Sami, but with her an equal partner, taking equal risks.\"  \n\n\"In my perfect world,\" Ali continued, \"We'd pack up what we wanted with us in the islands, selling or donating the rest.\"\n\nQuiet followed her last word.\n\n\"So, what the fuck do we do about it?\" Lynn finally asked.\n\n\"We have the money; between us, we have the money, right?\" Ali suggested.\n\n\"Yeah, we do,\" Lynn agreed.\n\n\"Would you like to move to Maui with me, Lynn; would you like to have our paradise in paradise? Would you?\" Ali asked as she held Lynn's eyes with her own.\n\n\"Yeah, Ali, I would; I'd like that more than you can imagine,\" Lynn said within a heartbeat of Ali's question.\n\n\"Then, why don't we, baby; why don't we build our life, like we want it to be, where we want it to be?\" Ali asked Lynn.\n\n\"Why not, indeed,\" Ali, \"Why not indeed?\" Lynn said before she took Ali into her arms, her hands smoothing Ali's hair on her head, rocking them both to and fro.\n\nTheir tears rolled gently down their cheeks in that moment; tears of joy, not sorrow. Against all odds, Lynn and Ali had found each other in this cockamamie world, and they weren't going to ever let that go; not tonight, not tomorrow, not ever&hellip;\n\n<p align=\"center\">Author's note&hellip;</p>\n\nLynn and Ali's story is far from over but this chapter of their lives, the N'awlins chapter of their lives has indeed ended. Their story will continue but not now, not for a while, but we will visit the girls' lives again, I assure you.\n\nI've had so many requests as I've written this series, to expand upon Sami's character, to tell her story, and so it shall be. Keep an eye open for Sami's story, soon to be submitted to Lit.\n\nTo all of my faithful and regular readers, I can't thank you enough or tell you how much your communication with me has meant; to me, and to the 'girls'. We love you for loving us.\n\nFaithfully submitted, (apologies to Sue Grafton &amp; Kinsey Mahone)\n\nt_girl"
    ],
    "authorname": "t_girl_3",
    "tags": [
        "lesbian romance",
        "lesbian drama",
        "lesbian novella"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/lynns-alley-ch-21"
}