{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 18",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nThe house was quiet when Cricket arrived. That was not unexpected; she knew Tim and Gwen had planned a day out with friends and was glad they had chosen to go to the lake today. The young woman worried that her seemingly constant presence was making the Nelsons alter their own lives to accommodate hers, but still she lacked the resolve to limit her weekends with them, and this was a nice compromise. Cricket was flattered that she had earned enough trust to roam their property at will, but of course, she thought, if they trust me enough to let me watch them have sex then being left alone with access to the refrigerator is a pretty easy reach. \n\nCricket made sure all the chores were done before saddling Marvin and working on some exercises in the field below the woods. They were dutifully performed, as they had been since she had learned them as a student growing up at the various riding academies, but the cool shade and freedom of the wooded trail beckoned and Cricket wasted no time spurring her mount towards the canopy of trees at a gentle gallop after completing the prescribed routines.\n\nThe horse was very willing to comply. His human always smelled happy now, a pleasant development and welcome change from her constant worry and sadness before he had come to live here. He was content to be wherever she was, and her mood was his as well. He snorted defiantly at the imagined unknowns hiding in the trees about them and tossed his head at the opportunity to take to the trail and show his bravery.\n\nCricket shed her shirt when the path demanded they slow to a walk, confident her small breasts could handle their unrestricted movement at this pace, the air drying the sheen of sweat and making her nipples turn hard. The trail to the overlook and picnic table soon opened to her right, exactly where horse and rider had learned it would be; with a gentle nudge of her heel Marvin turned. \n\nShe stopped the horse in the shade before the open grass beyond and dismounted with the ease of someone who had done it thousands of times before. Marvin was loosely tethered to a nearby branch to cool and rest while Cricket strolled a little further to the edge of the tree line, to where the shade abruptly ended like a curtain lifting on glorious sunlight, and sat down. \n\nIt was nice here, beautiful...the view, the smell of pine, the sound of songbirds, and the leaves fluttering in the breeze. The young woman would never have called herself a country girl before her marriage, growing up in well-ordered suburbia on the edges of several big cities, and had only moved to a more rural part of Georgia because Daniel's new job required it. He had considered it being banished to a little backwoods hell-hole and couldn't wait to get out, but Cricket had grown to enjoy the slower pace and relative peace, a bright spot in the disaster that had been her marriage. She could quite easily live here, picturing a little house and barn in this clearing, and wondered if the Nelsons might be willing to sell it someday. She laughed at the idea and shook her head; there was the matter of food and rent and school loans and Marvin's room and board to be settled before the idea of owning her own place could even be dreamed about. But it could be hers for the moment, savoring the shade's coolness on her bare back and breasts, the wall of mid-day heat discernible just a few feet in front of her. The breeze might be nice on her bare legs and bottom, she thought with a giggle, kicking off her boots and discarding her riding breeches. She was again the little wood fairy she had often pretended to be as a child when arguing parents or obnoxious schoolmates required an escape into the imaginary forest she ruled. The fairy had been dressed in brightly-colored silks and sparkly gauze then, but that was before she had learned to appreciate the feel of air and sun against her skin. Fairies are creatures of nature and magic, and nature's creatures don't need clothes, so naturally fairies should be naked, she reasoned with a smile. \n\nCricket lay back, looking up at the moving ceiling of leaves above with the blue sky peeking between them, wondering how long she could lie here and still be at the house when the Nelsons returned. Her finger idly traced lines across her bare stomach, up underneath her breasts then down to where her thatch began, making her shiver. A need had been building for several days, one that had been occasionally dulled but not satiated by the gifts from her friend in her bedroom drawer. Would the sun and water have made Gwen too tired for something more than sleep tonight, or would her focus be on her husband? \n\nIt's her responsibility to satisfy Tim's needs, not your perversions, Cricket grumpily reminded herself. That's on you, and there are other people out there besides Gwen and Tim to be perverted with. But doing\u2014that\u2014with a strange woman was out of the question; Gwen was right that it was something special friends shared, and a stranger would never begin to reproduce the feelings she got when doing \"that\" with her best friend. A man would be more suitable for base sexual gratification, straight-out down-and-dirty humping, but even with no need for any sort of emotional attachment she was not yet ready to enter into a use-and be-used situation. Besides, finding one was still a problem; approaching a man for a trade of physical pleasures was just not a conversation she could ever imagine herself starting. And certainly not with anyone at work, which is the only place she ever really came into contact with someone possessing the necessary equipment. Gossip spread fast even from office to office and branch to branch, and she had no desire to have her name added to the list of the company sluts. \n\nWith a deep exhalation she, cleared her mind, closed her eyes and let her fingers travel farther, smoothing over the swell of her breasts and brushing against nipples now erect from excitement rather than chill, down further below to where her pubic mound gave way to labia swelling in anticipation. Her legs came apart on their own accord, opening to her fingers and the world. She idly wondered if Gwen's velvet-wrapped steel will, that ability to make a horse gladly do as she politely commanded, worked on men as well and if it could be learned. It would be so much easier, she thought, if I could just point at some guy and say take your clothes off so I can fuck you. She laughed at the thought, doubting that even in her fantasies she possessed the necessary skills to bend a man to her will. \n\nMaybe a younger man, also inexperienced and unsure of himself, might do her bidding, she rationalized ...there was that intern, fresh out of high school, he was kinda cute in a geeky way...her finger dipped to spread her growing wetness over sensitive lips. Maybe being the older woman with a full-time position at the bank might make her an authority figure in his eyes. She imagined instructing him to meet her at a local hotel or else-the fantasy allowed her to have the money for a hotel room and the power to deliver an ultimatum-and ordering him to get naked and stand for inspection as soon as he stepped into the room. He was already hard\u2014she had heard young men walked around with perpetual erections\u2014and Cricket, still dressed in her best business attire, confidently circled him as if sizing up her prey. Skinny, maybe even a little bony, but a nice smile and a cute butt, with a penis like Tim's and not at all like Daniel's. She could sense he was not arrogant but eager to please, and judging from the speed with which he had followed her order to undress, obedient, too. Yes, this practice pony would be a suitable ride. She instructed him to lie on the bed, reveling in his complete attention as she teased him while slowly unveiling her own body. She did not let him touch her when his mistress finally joined him on the bed, not yet, running her own hands over his bare skin in exploration, the distant memory of the feel of a man coming back to her. Unlike her ex, he did nothing to discourage her thorough examination of his cock as she looked for responses to certain grips or strokes, practicing, always practicing, mimicking the things Gwen did to make Tim groan with approval. Cricket tasted the young man next and was not disparaged for wanting to perform such a nasty act, getting a soft 'oh' as he instinctively thrust his hardness up against her searching tongue. There was the same faint hints of musk and saltiness she had found on her friend's lips after they had been wrapped around Tim's shaft. The young man was made to gasp and squirm for what to him seemed like an eternity before Cricket lay back against the pillows in her fantasy hotel bed and demanded the young intern return the favor, something he did with skill and enthusiasm. She outwardly maintained her collected composure, controlling her body's reaction to his searching tongue, unwilling to expose her true vulnerability to him just yet. His mistress eventually deemed herself satisfied with his efforts and he was finally allowed to mount her, but only after sternly being instructed \"not to come too fast,\" like every other man afforded this privilege before had. He obeyed faithfully, still grunting in her ear with each powerful thrust when Cricket's fingers delivered her orgasm. Marvin paused his shaking off of a particularly bothersome deerfly ensure she was in no danger as his human rhythmically writhed and chirped. \n\nShe lay there recovering her breath and senses, the breeze cool against her sweat-soaked skin, chiding herself for the utter ridiculousness of that particular fantasy. Young and timid was sure to equal inexperienced, and she was not qualified to play the role of teacher. Besides, in real life her dalliance would have ended with him spinning his own version of events, telling everybody how the stuck-up bitch in Finance had begged him to fuck her. \n\n***\n\nCricket awoke from where she had fallen asleep on the couch, alert to the sound of a truck pulling into the driveway over the soft drone of the TV weather report. She rose and glanced at the clock\u2014after midnight-before checking to make sure she had gotten dressed again after spending the afternoon and evening prancing about the house wickedly naked, suddenly worried it might not be Gwen and Tim after all. \n\nThe door opened and she smiled as Gwen entered, nude from t-shirt down to sandals. \"Lose something?\" the young woman asked with a smile, eying her friend's bare hips and legs meaningfully.\n\nThe Lady sighed and began to recite the list. Decency, common sense, morality, sanity...\"Took them off in the truck,\" Gwen offered matter-of-factly. \"They were in the way. Everything go alright here? Horses okay?\" \n\nCricket was momentarily distracted by Tim's entrance, checking to see if he was similarly attired, disappointed he was not. \"Uhh, yes, everything was fine, horses are fine,\" the young woman finally replied, focusing on the eyes of the bottomless woman in front of her. \"I think Dart was a little peeved it was Marvin and not him going out today.\" \n\n\"He'll get over it,\" Gwen said with a yawn, stretching her arms over her head and bringing the shirt's bottom up to just below her belly button. \"I don't know about you, but I'm exhausted. Coming to bed?\"\n\n\"Uhh, yes, okay...\" Cricket hesitated. That sounded like an invitation, but was it? Screw it, she decided, more afraid of missing what might happen in her absence than being told she was in the wrong place. Thankfully Gwen gave the impression her friend's choice of where to sleep was completely natural and correct, and the two women were already naked and side by side under the covers when Tim joined them. Cricket's curiosity was already advancing theories as to what exactly had happened in the truck. She was disappointed when it became obvious there would be no answers or activity as sleep was the only thing on her bedmates' minds. The aroused young woman scolded herself for even expecting something more rather than just the comfort of the soft warm body she was even now snuggling in to. Her excitement simmered as she nodded off. \n\nShe slept soundly, the movement of the others as they got out of bed waking her. Cricket watched discretely as Tim bent to pull on his underwear, ass thrust out at her while his dangling cock and balls peeked from between his thighs. Gwen didn't bother dressing, and the young woman took that as her sign she was not required to either. Breakfast was an interesting affair, two naked women and a fully dressed Tim, and the casual exhibitionism inflamed the young woman's lust.\n\nThey got into their riding breeches and boots at the last possible moment before heading out to the barn after breakfast, shirts carried but not worn as they started up the hill. \"Good time at the lake yesterday?\" Cricket asked.\n\nGwen smiled. \"A very good time. Our friends have a beautiful spot up there.\" She paused. \"Listen, there's something I've been meaning to ask you. I'm hoping you can do me a favor.\" \n\n\"Anything!\" Cricket replied eagerly. \"You know that.\" \n\n\"Well, I was wondering if you'd like a job for a weekend. Not sure when yet, exactly, but you'd get paid for it.\"\n\n\"Of course I'll do it! And you are not paying me anything. Marvin, room, board, remember?\"\n\n\"I haven't forgotten, and how can you say yes when you don't even know what the job is yet?\"\n\n\"Doesn't matter. I owe you so much, whatever it is is the least I can do. So, what's the job?\" \n\n\"Well, I've been asked to pose for some photos, horse and rider, that kind of thing...I'd like you along as a sort of groom, someone to keep an eye on things if I get busy or distracted.\" \n\n\"You're posing for photos? You mean, like professionally? Like for a magazine spread or something?\"\n\n\"Oh God, they better not be!\" Her friend laughed nervously. \"Photos for a private collection. The person who is commissioning the work owns the horse and is supplying a groom, but I'd prefer somebody I trust with me just to make sure I'm not missing anything.\" \n\n\"I'm flattered you'd ask me and of course I'll do it, but wouldn't you want Ali or KD, instead?\" \n\nGwen laughed. \"Not for this, no. I trust you, and since you've already seen me a certain way...\"\n\n\"Certain way? What does that mean?\" \n\nGwen took a breath and stared at the dirt path passing below her. \"I'll be posing nude.\" \n\n\"Nude? While riding a horse? Like Lady Godiva?\" \n\nGwen began to tell the young woman Natalie had guessed the same thing, but held back. \"Maybe, I don't know...the photographer didn't give me many details, just that some nudity will be required. They keep telling me it'll be art, you know, tastefully done.\" \n\n\"Who wants you to pose for this kind of...art?\" \n\nGwen took another breath. \"Remember that lingerie party I went to a little while back?\" \n\n\"How could I forget!\"\n\n\"Do you know who Sylvia Danning is?\"\n\n\"Do I know who Sylvia Danning is? As a very junior banking professional, yes I know who Sylvia Danning is. As a former competitive equestrienne, yes I know who Sylvia Danning is...\" Cricket's eyes widened. \"Wait, was she at the lingerie party?\"\n\n\"It was at her mansion. She hosted it and found out I rode, got a report on me from...\"Gwen paused, \"an old instructor of mine, and invited me back to ride with her at her stables. I guess I passed some sort of test and she asked me to pose for something that she wants to put in one of her houses she's redecorating.\" \n\n\"You rode with Sylvia Danning, one of the best-known equestriennes in America, and definitely the richest...well, it sounds like she has excellent taste as well. It definitely makes sense why she would ask you.\"\n\n\"Not to me, but she did, so like an idiot I said yes.\" \n\n\"Wow...just wow. But you really want me there, too? Are you sure? I mean, is she going to let a commoner like me anywhere near one of her horses? I have to imagine we're talking something with world-class lines and therefore very, very expensive.\"\n\n\"Why wouldn't she? You're an excellent and knowledgeable horsewoman\u2014we both know money can't buy horse sense, and so does she. In fact, if she's looking for someone with a particular look and impeccable equestrian skills like she claims, then you should be the one posing. But I made it a condition of me accepting that if she wants me, she has to let me have you. You're the only one I trust for this.\"\n\n\"Like I said, I'm flattered you'd ask me...Tim knows about this, right?\"\n\n\"Tim knows, but he's about the only one\u2014Alison and KD don't even know. So you have to keep it all just between us, okay? Mrs. Danning is very protective of her privacy, almost as much as I am.\" The Lady scoffed at that last assertion. Getting naked in front of complete strangers was not exactly something you did to maintain privacy. \n\nGwen spent the rest of the ride trying her best to answer the questions Cricket peppered her with, telling her about the Danilo's visit the morning before. \"Oh, and before I forget,\" she asked. Tim and I have to go to Atlanta next weekend. I'm being fitted for wardrobe for this thing. Think you might be able to stay overnight and take care of the horses? Would it make you nervous being here alone overnight?\"\n\n\"No, that's fine, be happy to,\" Cricket said distractedly, \"but wardrobe? I thought you were posing nude?\"\n\n\"Only for some of the pictures, I guess. So they're getting my measurements, and I thought Tim and I could make it a weekend away.\" \n\n\"Sounds like fun,\" Cricket said with a smile. They rode in silence for several moments before the young woman spoke again. \"I know I'm being nosy, and you can tell me it's none of my business, but it's been driving me crazy ever since you got home last night...I have to guess most people come home from the lake with all their clothes. What happened?\" \n\nGwen smiled mischievously, a long-unused expression for her that was finally getting more practice. \"I told you. I had all of my clothes. I just wasn't wearing them.\"\n\n\"Yes, but why not?\"\n\n\"We were in the mood, so we pulled off the road for a bit and took care of things. It was dark and we were halfway home and I thought Tim might like it if I didn't put my shorts back on.\"\n\nCricket giggled. \"Whoa! You guys are so wild! I was hoping it was something like that!\" \n\nIt was Gwen's turn to laugh. \"Hoping? Why?\"\n\n\"Sorry,\" the young woman said, blushing as her giggling faded away. \"It just sounds like such a wild spur of the moment thing to do. I think it's so cool how you do...things like that...whenever you want, anywhere and anytime. I don't have to tell you how lame my own life is, so I guess I'm living vicariously through you. Wish I could have been there to see it.\"\n\n\"Three in the truck would have been pretty tight.\"\n\n\"You know what I mean. I just really like seeing you and Tim together. It's...I don't know, it's wrong and sexy and beautiful and exciting all at the same time, I guess. Normal people being kinky, not anything I ever imagined happening, and Daniel certainly didn't give me any reason to think I was wrong. And besides,\" she added, suddenly feeling the need for some sort of further justification, \"you and Tim are my education. I always learned best by watching other riders, then trying to repeat the motions later. I want to be ready when later comes for that.\" ",
        "\"You have to practice what you've been watching eventually.\"\n\n\"You find the guy, I'll practice. I'm not picky. If he's got your seal of approval, that's good enough for me.\"\n\n\"The only man who will get my seal of approval is one who deserves the attention of someone very special.\" \n\n***\n\nThe riders turned their attention to themselves after their horses were groomed and turned out to stand with the others in the shade of the barn's overhang. A cold drink and swim, perhaps some late lunch, were a given before Cricket went home. She was dispatched to the workshop to let Tim in on their plans while Gwen went to the house to collect towels and drinks. \n\nThey were waiting for her at the pool when Gwen got there, neither terribly surprised she had discarded her riding gear down at the house. Her appearance was Tim and Cricket's signal it was safe to begin their own undressing, Gwen amused that neither had felt bold enough to get a head start without her present despite the oppressive midday heat. \n\nThey stood for a moment on the hot concrete with glasses in hand, sipping from them and talking about their mornings before they sat their drinks down within reach of the pool's edge and slipped into the cool, sparkling water. Gwen admired her friend's bare bottom, glistening wet and very firm, as it briefly broached the surface before the owner dove again on her way to the pool's edge. A quick glance confirmed Tim had been admiring it as well, eyes fixed on the spot it had disappeared beneath the water.\n\nCricket surfaced at the far end and pushed off the wall, now on her back with eyes closed against the glaring sun, seemingly unaware she was gliding in her friend's direction. Gwen was entranced by the body drifting towards her, pert breasts forming little volcanic islands above the wavelets that washed across her firm stomach and down between her closed legs. Her pubic thatch almost seemed alive as the silky strands waved to and fro in the gentle current flowing over it. It never occurred to her to move out of the young woman's way as she drew closer, and a lazy kick of her feet softly propelled the top of Cricket's head into Gwen's midsection.\n\nSurprised by the obstruction, she spluttered and struggled to stand in the waist deep water. Gwen reached out to steady her, one hand beneath Cricket's belly button, the other firmly palming a breast, pulling the young woman's body into her own.\n\n\"Sorry, I should have been looking where I was going,\" Cricket stammered, now firmly on her own two feet. The hands holding her close did not move away, Gwen's sun-warmed breasts and stomach a welcome shock against her own chill. \n\n\"My fault, I should have moved,\" Gwen countered softly from over her shoulder, close to her ear. \"I saw you coming, but you just looked so...nice, floating like that. I guess I was distracted, sorry.\" \n\n\"Better than bumping my head into the wall.\" Cricket covered the hands with her own to prevent them from withdrawing. \"Thanks for catching me.\"\n\n\"Mm-hmm.\" A soft kiss on the young woman's neck made her shiver. \"Cold?\"\n\nCricket closed her eyes and smiled. \"No, warming up. You feel nice.\" \n\n\"Thank you. So do you.\" The kisses on her neck resumed, and the young woman tilted her head to open up to the soft lips. She loosened the hold on the hands underneath hers, wishing them into action. She was not disappointed, and her rapidly-drying torso was stroked and caressed. It felt good, too good not to share, and she turned to find the lips that were now tormenting her ear. Cricket caught a glimpse of Tim leaning back against the pool's edge at the shallow end near the stairs, watching with a guilty grin. His hands were on the coaming behind him, making it appear as if he was thrusting his hips and very evident erection at them. Gwen's lips brought her attention back to the woman holding her. \n\nThe next few moments were an overload of sensations for Cricket\u2014the warmth of the body in front of her and the glaring sun on her back, the warmth between her legs despite the chill of the water she stood in, the softness of her kiss and a searching tongue sliding across her own, the erotic thrill of putting on an erotic display for an audience. Gwen and Cricket held each other, their hands both turning gentle circles on shoulder blades and lower backs, occasionally taking firmer holds of butt cheeks.\n\nGwen finally broke the kiss. \"I was hoping you might want to before you left.\"\n\n\"Really? Me too!\"\n\nThe older woman looked over her shoulder to where her husband stood entranced. \"Tim, do you mind if Cricket and I go down to the house?\"\n\n\"Not at all,\" he replied with a grin. \"Knock yourself out! Want me to, uhh, hang out up here?\"\n\n\"You don't have to. Come down when you're ready, but could you grab the clothes and drinks and bring them with you when you're ready to get out?\"\n\n\"Be glad to.\" Tim was ready to get out now and climbed from the pool as the women passed through the gate, delaying his collection duties to watch those beautiful asses swish their way down the hill. He paused again after picking up Cricket's pile of riding gear. Her riding breeches, sitting on the heat of the pool deck, felt as though they had just come from the dryer although the strong smell of horse and leather told a different story. Tim could see the light-blue fabric of her underwear still tucked inside where she had peeled both garments off in one push. With another look at the gate to ensure he was alone, Tim dropped the breeches and retrieved the threadbare panties for closer examination. They were common-sense, run of the mill underwear long on utility and short on sexiness, but he knew where they had been just a short time ago. This is some stupid shit, he told himself, you've seen what they were covering and the sooner you get your ass in gear the sooner you'll probably get to see it again. But he continued to examine them; they had been actually touching the young woman's pussy, pressed against by her saddle, and that made them somehow forbidden and therefore, more exciting. \n\nThey were warm like the breeches they had been in, but still damp from her ride. Tim looked again at the gate and reversed them to get a better look at the thin strip of fabric between the leg holes. This was wet rather than damp, and he wondered if that was all sweat, or something more. Tim impulsively brought them up to his face, not burying his nose in the fabric like Charlie had done with Gwen's, but still close enough to catch a strong whiff of feminine perspiration, different and more delicate than a man's, and something else, something definitely not horse but yet very recognizable that made his already-potent erection throb in response. He had gone for many years without catching a whiff of it, but the memories of his youth and the scent of the girls he had been with before Gwen had never been forgotten. His wife's musk, bitch in heat as Charlie had put it, was something he had happily gotten acquainted with now that she was much freer about giving him access to the spring it flowed from, and the panties in front of his nose held the aroma of something very familiar yet still different. No two women looked or smelled the same, he reminded himself, adding Cricket's scent to his mental catalog. His wife and the woman who had produced that intoxicating perfume were in his house right now, maybe even together on his bed. What the hell was he doing up here? He smiled at how this kink had distracted him from the one down the hill and finished collecting all that he could carry.\n\nTim hurried down the hallway and pulled up short at the open door. They were indeed stretched out on the bed in each other's arms, Gwen breaking their kiss to greet him. \"Come and join us-we'll make room,\" she said, removing herself from Cricket's embrace and opening a spot between them. \"Do you mind if I take care of Tim first?\" she asked the young woman. \"Watch and learn, right?\"\n\n\"No, of course,\" Cricket politely replied as he gingerly eased himself into position, trying to avoid contact with her for fear it might be considered inappropriate. At least the mention of a learning experience sounded like permission for her to stay.\n\nGwen rolled to her side and gently inserted a knee between his closed thighs, sitting up and kneeling between them as he opened to give her room. She studied the erection before her, reaching out to delicately drag a fingernail from the bottom of Tim's slit down his length, lightly scratching across the loose skin of his sac. \"I must have been pretty bad at this when I started,\" she mused, watching his cock jump in response to her touch, \"touching it, I mean.\" She remembered Yvette's evaluation of her own early skills as uninspired grabbing and tugging and imagined her form could not have been any better, and her desire to be anything more than barely sufficient had definitely lacked. Her finger went back to circle the spongy head, spreading the liquid beginning to seep from it. \n\n\"You weren't bad, just inexperienced,\" Tim said, encouraging her on. In truth, for the longest time he had just been glad she touched it at all and was not about to complain about her dutiful and businesslike attitude as she prepared him for his once-a-week fuck. \"Once you started getting some practice, though...\"\n\nGwen smiled, spreading her index and middle finger to slide down either side of his cock. \"I had a lot to learn...you men and your equipment are very different and very intimidating.\" Tim could sense her thoughts drifting, and assumed she was revisiting the old days. Wherever she was, he was relieved to see her again focus on the cock she was holding. His relief turned to disappointment and confusion as she smiled and abruptly let go, climbing out of her spot and kneeling beside him. She continued to study his length for a moment, then spoke. \"Would you mind if Cricket tried for a little bit? I think she's ready for some practice.\"\n\nHis mind reeled, not believing what he had just heard, the sensible tone of her voice making it sound like the most normal request in the world. \"Try? You mean...\" he glanced down at his hard on. \"It?\"\n\n\"Just touching it a little, that's all. I thought it might be good for her to try that with someone she knew. Somebody understanding and patient.\" \n\nCricket sat by in open-mouthed shock. This was not the type of thing you practiced with someone you knew! Or maybe it was, she thought wildly, but not with the husband of your best friend! \n\nTim hesitated, looking to his wife then to the young woman and back for any sign this might be a joke or a trap, his cock urging he throw caution to the wind. \"What do you want her to, uhh, do?\"\n\n\"Just touch it,\" she repeated, \"see that it doesn't bite, that it likes to be pet. C'mon,\" Gwen said, decision made, to the wide-eyed young woman across from her, patting the vacated spot between Tim's open legs, \"you try it.\" \n\n\"Me? Are you sure? I mean,\" she squeaked softly, \"he's your husband.\"\n\n\"Which means I know he'll be the perfect gentleman. I told you, someone very special. You get him ready for me and I'll take care of the rest. I know you like to watch the other riders, but at some point you have to put a foot in the stirrup.\"\n\n\"But what if I do it wrong? What if he doesn't like it, or I hurt it?\" Cricket asked, her voice rising along with her panic as she stared at his engorged shaft. \n\n\"You won't, but he'll let you know if you do, won't you, Tim?\" Gwen replied calmly. \n\n\"Uh yeah, sure, but you can't do it wrong.\" he lied, \"you'll do fine, don't worry.\" He was beginning to feel a little self-conscious about the requirements of his own performance as he lay there between the two women while they debated who would be taking care of his straining cock. \n\nCricket bit her lip, her mind made up despite what common sense told her. \"Okay, if you really mean it...\" she climbed into the spot vacated by her friend, sitting a bit farther back from \"it\"\u2014call it what it is, a penis, my best friend's husband's penis, she primly reminded-between his knees rather than his thighs. It was still close enough to get a very good look from a novel angle at the impressive thing right in front of her, a rock-hard length of male flesh atop loose flesh being stretched by the two boulders contained within. The young woman looked again to her friend for one last confirmation.\n\n\"Go ahead, give it a try. Just do what I do. Don't try and canter your first time up, just walk.\" \n\nCricket smiled nervously and steeled herself to the task. Breathing was forgotten as she bent forward and tentatively extended an index finger like Gwen had done, the tip hovering over the bottom of the bulbous pink head. She pressed down almost imperceptibly, gently tapping the velvety flesh so lightly Tim could barely feel it. The finger's owner did, or at least imagined she did, soft and hot to the touch; she pressed a little harder, feeling hardness below the sponge. Her finger began to very softly draw a line down his length, avoiding the slit and the moisture collecting in it to cross through the flat spot beneath, carefully keeping her fingertip flat to avoid any unfortunate scratching. The penis jumped in response and Cricket quickly withdrew in surprise. \n\n\"It's alright,\" Gwen offered softly, reassuringly stroking the young woman's back down to her buttocks. \"You've seen it do that when I touch him, right?\"\n\n\"Sorry, got a mind of its own,\" Tim offered. \n\n\"Oh-I knew that,\" Cricket muttered softly to both her instructors and gently resumed tracing a path down the hardness, over prominent veins down into the soft folds of skin covering his balls, feeling their own yielding hardness beneath, one moving under a very gentle and tentative prod. Her nervousness was still there, but it was now competing with the growing fascination with what she was touching. It was so male, hard and protruding and intimidating, not soft and squishy and vulnerable like herself...her finger reversed its course and came up more quickly, not avoiding the leaking tip this time, repeating Gwen's move of swirling the slick moisture about the top, sliding through the slippery liquid to spread it over the velvety helmet. The hand on her back was moving lower now, a finger sliding between her cheeks to gently stroke her rosebud. She froze a moment, distracted, then wiggled in welcome and returned her attention to the magnificent penis she was taming. \n\nThe young woman grew bolder, delicately wrapping her fingers around the middle of the shaft, afraid to squeeze any harder and cause the owner discomfort until Gwen assured her he could take it. The young woman gasped. \"I can't believe how hot it is! And so hard!\"\n\nThe older woman chuckled. \"Lots of hot blood in there right now, and more always trying to get in. And hard is good, right? Remember how I start out squeezing gently and stroking up and down, then grip it harder the longer I go? Try that. Just make sure you've got lots of lubrication though, you don't want to rub him raw.\" \n\n\"I never thought about that,\" Cricket breathed, her hand freezing in place midway up his length. She looked up at Tim. \"Is it slippery enough?\"\n\n\"If your hand moves without sticking, it's slippery enough. I produce a lot of my own lube, but some guys need some extra out of a bottle, at least so I hear. Baby oil, that kind of thing.\" She nodded intently, as if hearing a mystery of the universe revealed. \n\nCricket gently pulled back on the cock in her fist, bringing it up away from his stomach as much as she dared. For some reason the sensation of the slick shaft transitioning to the mushroom head with a bump of her fist over the crown delighted her, and she savored the feel of each finger sliding down into the furrow below then popping up over the flare, each digit deliberately traveling over the little obstruction. \n\n\"He likes it when you play with his testicles while you do that,\" Gwen suggested softly. \n\n\"Is that alright?\" the young woman asked. \"I've seen you do it, but I was always told they're really sensitive and kicking a man there will stop them in their tracks. I don't want to hurt him.\"\n\n\"I'm glad you know all about that for self-defense and yeah, kicking me there will do that,\" Tim said with a chuckle, \"so please don't unless you really think I deserve it. But you can hold 'em, if you want. They can take a little handling.\" She delicately cupped the orbs in her palm, gently lifting to feel their weight, watching the loose skin move to accommodate her. \n\n\"Wow! For some reason they're heavier than I thought they'd be!\" \n\nTim laughed. \"I never thought about 'em that way. Are they blue?\"\n\n\"Blue?\" Cricket asked in confusion, looking down to check regardless. Deep red, almost dark, but not blue.\n\n\"Blue balls. What guys call it when they haven't uhh, gone off in a while and the pressure builds up.\" About fourteen hours since that blowjob in the truck, he thought. I guess that's enough time to count as a while...\n\nCricket smiled at the idea that they had to be emptied regularly and continued to gently stroke as Tim's hips began to thrust back against her hand. \"Am I doing it right?\" \n\n\"You're doing great,\" Tim said with a strained grumble. You can go a little tighter if you want.\"\n\n\"Sometimes it's good to switch it up a little, try something different, too,\" Gwen suggested. \"Maybe run a finger along the top. You've seen me do that, right?\" \n\nCricket nodded, one finger delicately keeping Tim's cock levered away from his body, the index finger of the other hand starting in the wild tangle of coarse pubic hair at the base and traveling up to the tip. The finger stroking her asshole was moving too, into her very wet furrow in search of her clit. She spread her legs in response, no longer caring that her calves were firmly pressed against Tim's knees. She continued to explore the cock she held, always careful to return to stroking it, the more urgent thrusting of Tim's hips giving her hope she was not a complete screw up at this. Her own hips were now flexing in response to the insistent stroking of her button, their rotating syncing with the cock being pushed through her fist. \n\nGwen also noticed the rhythmic flexing of Cricket's hips in time to the strokes of Tim's cock. She looked on, conflicted with a mixture of lust, jealousy and doubt knowing that the young woman was subconsciously impaled upon what she held. The Lady suggested the strong possibility that Tim would prefer the touch of the younger woman; what then? He married you knowing you didn't fuck, the Slut growled back, no way he's going anywhere now that you do. And if he trusts you with her (and Natalie, and Liz, the Lady nastily added), then you better damn well trust him to still want you after. In her heart, Gwen knew she knew he would. And it WAS an incredibly erotic scene she was watching unfold before her, probably because it was so incredibly wrong...\n\nShe could see the signs of Tim's impending orgasm\u2014the angry red of his cock head, his more labored breathing and that grunt with the completion of each stroke to his cock's base that signaled he was close. \"I think he's almost ready. Right, Tim?\" \n\nHer husband's jaw was set, tightened muscles clearly visible. \"Uh-huh. Oh, yeah.\" \n\nCricket reluctantly let go and began to move out of the way, regretting both for the loss of the finger on her clit and the control over this man's pleasure. \"Guess you better take it from here...\"\n\nThe hand still between her legs withdrew to press down on her back. \"No, you've gone this far, you finish it,\" she said softly. \n\n\"Really? You mean like...let him finish?\" \n\n\"Don't let him. Make him. Take control. Make him show you what he he's got for you. You do want him to show you, right?\"\n\nCricket looked down and nodded, trying to make sense of the fact she was now expected to make this man lose control and explode like he had for Gwen those other times. She settled back into position, thankful the finger was already making its way back into her sex, knowing she very much wanted to make it happen.",
        "\"Tighten your grip when he gets closer,\" Gwen advised. \"Like you're making a very tight vagina with your fingers. Not so tight he can't get in it, though.\" \n\n\"How's this?\" the young woman asked, wrapping her fingers more tightly around his shaft.\n\n\"Good,\" Tim grunted, pushing up against her fist to test it. \n\nCricket held still, remembering the times she had watched Gwen do this she had actually stroked very little as he grew close, letting him thrust, like he was fucking her hand, only moving her fist up his length so he could begin another stroke. \"Careful with your aim,\" Gwen counseled. Those first couple of shots are pretty powerful and could go anywhere.\"\n\nThe young woman hurriedly adjusted the angle to something just less than straight up. \"This okay?\" she asked, never taking her eyes off what she held. \n\n\"That's fine. Get ready...\" Tim grabbed the hand around his cock in response, repositioning it just below the sensitive head and forcing her fist to close harder than she thought possible as he erupted.\n\n\"Ohmygodohmygodohmygod,\" Cricket chanted, intent on the spitting monster she held, dimly aware of the arc of the first jet as it rocketed skyward before falling on to his chest with a wet slap. Message delivered, Tim's hold on her hand loosened but she held steady as he emptied himself, finally reduced to dribbles that ran down the fingers encircling his shaft. He finally pronounced himself spent with a sharp exhalation. \n\n\"Oh my God!\" The wide-eyed woman exclaimed again, unsure what to do next, unwilling to let go of the thing she held just yet, beginning to stroke again. \"I swear I could feel it shooting up inside his, uh penis! Was that alright?\" \n\nTim chuckled and again grabbed her hand, more gently this time, stopping her movement. \"It was great, but I'm kinda sensitive right now...\"\n\n\"I usually get a warm washcloth to clean him up,\" Gwen advised softly. \"Since you helped make the mess, think you can take care of that?\" Cricket nodded again, climbed off the bed and hurried to the bathroom.\n\n\"Thank you for doing that,\" Gwen said in a low voice, moving up to kiss him. \n\nTim chuckled, not believing he was being thanked for allowing another woman to jack him off. \"Uh, yeah, you're welcome? Hope I did okay.\" \n\n\"You did great. You're probably pretty relaxed at the moment. Is it alright if Cricket and I, uhh, finish what you started?\"\n\nHe chuckled again. \"Alright? I'd be disappointed as hell if you didn't. I'll, uhh, get out of your way.\"\n\n\"You don't have to,\" she replied urgently. \"You can stay...\"\n\n\"Nahhh, I'm okay for now. You know us guys. Sex and food, our top two priorities. Since I got priority number one taken care of for a while , I'll go make a sandwich or something. Give you two some girl time, compare notes, that kind of thing.\"\n\nGwen smiled as Cricket returned with the washcloth. She carefully cleaned him, treating his softening member with great respect as she gently wrapped it in the warm wet fabric. \n\n\"Thank you Cricket, that was really good,\" Tim said with a smile, lifting himself off the bed. \"Lemme know if you two need anything.\" He ambled down the hall while Gwen laid the young woman down and held her.\n\n\"Sorry I sprang that on you like that,\" Gwen said softly, cupping her cheek. \"I never told my students before the first time they were getting on the horse until it was right there in front of them. That way they didn't worry so much. I know it wasn't your first time, but still...\"\n\n\"Close enough to the first time,\" Cricket replied with a chirp. \"And I can't believe you're apologizing! Thank you for trusting me enough to do that!\" \n\n\"Just between us, right?\"\n\n\"Of course! Who am I gonna tell?\" \n\nThere was not much talk after that, just soft moans and sighs as they turned their attention to each other's more urgent needs, hands running up and down warm flesh, lingering in the most sensitive areas. Cricket was gently pushed on to her back as Gwen moved between her legs, gently laying on top of her as a man would do before penetrating her, the older woman's mons thrusting forward against the one below. Lips, breasts, and sexes all unerringly found their counterparts to grind against each other and further inflame their arousal. The young woman's release was first, but Gwen was close behind. They lay there together after, recovering, caressing, both aware that a line had been crossed, both wondering if the other had regrets, neither wishing to step back."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "handjob",
        "outdoors",
        "lesbian",
        "lesbian sex",
        "husband",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-18"
}