{
    "title": "Three Square Meals Ch. 095",
    "pages": [
        "John awoke that morning to find two warm soft bodies snuggled up against him and glancing down he saw the lithe blue arms of the Maliri twins crossing his chest. As his mind shook off the fuzziness of sleep, he realised that the girl on his left actually had short white hair, then remembered that it was actually Tsarra and Edraele on either side of him. Settling back with his head on the pillow, he recalled the previous evening's events.\n\nHaving loaded up the Maliri Flagship with stockpiles of guns, ammo, and armour for the two assassins, they'd all said their goodbyes to Almari and Ilyana, wishing them a safe journey. Edraele and the Young Matriarchs had grown close to the pair, so it had been a touching and heartfelt farewell, accompanied by lots of hugs and promises to stay safe. \n\nOnce the two assassins had boarded the Galaena Serine, John and the girls watched the fleet's departure through the long windows in the Officers' Lounge. The House Valaden vessels powered up their engines and raced away, heading for the outskirts of the Delta Arietis system before jumping into hyper-warp in a blue flash of tachyon particles. Their departure was shortly followed by three sleek gold cruisers carrying materials for the Ashanath, which left in the opposite direction to link up with the second Valaden fleet departing Genthalas. \n\nThat left only one Maliri battleship in-system, the Andresil Enkana, which would eventually transport the Matriarchs back home. As soon as the two ships docked, Faye's maintenance bots began using grav-clamps to form a chain of cargo pods, and started transferring the massive volume of Trankaran ores from the Invictus across to the Maliri vessel. Faye had predicted that it would take at least a day to complete the transfer, as the cargo bay of the Andresil Enkana was not able to directly connect to the Invictus, as they had with the Trankaran freighter.\n\nAfter watching the departure of the fleet, John and the girls had a late dinner, with Sakura enlisting the help of several assistants to cater for so many guests. The Invictus crew were all tired after using so much energy to heal Edraele that afternoon, so there were no complaints when John suggested calling it a night. Edraele and Alyssa swapped duties, so John was accompanied in his bedroom by the bevy of Maliri beauties, while the Invictus girls paired off in their own quarters. The Maliri could see he was tired, so they'd had an early night, getting ready for the exciting days to come...\n\n*Alyssa's right, your mind is so busy when you wake up!* Edraele's eyelids fluttered open and she gazed at him with her regal purple eyes, an affectionate smile on her face. She frowned in confusion then added, *I wonder why you don't normally wake me?*\n\n*Maybe my thoughts are louder when you're right next to me?* John suggested with a playful smile, hugging her closer. *I'm sorry I disturbed you.*\n\n*You're forgiven,* Edraele replied, kissing his chest, then resting her head against his shoulder. Glancing across him at the sleeping House Perfaren Matriarch, she reached out to brush her fingers through Tsarra's short hair. *But now you're wide awake, I better start taking good care of you. I wouldn't want Alyssa to think I'm neglecting my Matriarchal duties!*\n\nThere was movement around the bed and the rest of the Maliri girls started to stir, woken by Edraele's gentle telepathic prompting. \n\nJohn glanced around and gave the girls a look of apology, before frowning at Edraele. \"You didn't need to disturb them, they were all fast asleep!\"\n\nTsarra shook her head, a very familiar gleam in her dark-green eyes. \"I didn't mind at all; I've been looking forward to this for weeks!\"\n\nShe crawled down the bed and knelt between his legs, accompanied by a flurry of movement from the rest of the azure girls. Edraele moved aside to give them some room and cuddled with Luna as she watched the activity with the hint of a smile teasing her lips. Leena and Kali lay down next to him, while Valani flanked Tsarra, and Nyrelle scampered over to the bedside drawer to retrieve a tube of lubricant.\n\n\"What are you ladies up to?\" John asked, watching them in fascination.\n\nLeena kissed his ear, then explained, \"Alyssa told us you don't like it when girls go into a trance those first few times, so we tried to come up with something fun and different for Tsarra.\"\n\n\"Why don't you like it?\" Nyrelle asked him, a flirtatious grin on her face as she bounded onto the bed. \"Watching Kali turn all docile and compliant as she sucked your cock was really exciting!\"\n\nJohn looked up into the indigo eyes of the House Loraleth Matriarch, who was the last of the original four Young Matriarchs he'd fed a second time. \"It's too much of a reminder of the way Progenitors usually treat their girls,\" he replied quietly. \"I like you vibrant and full of life, not behaving like mindlessly obedient Thralls.\"\n\nKali let out a happy sigh, then leaned down and gave him a gentle kiss. When she pulled back, she whispered, \"Dana's been telling me all sorts of fascinating things! You're going to have such an awesome time when it's my turn with you!\"\n\nHe was about to reply when he heard the squirt from the tube of lubricant. He glanced down to see Nyrelle enthusiastically coating Tsarra's ample cleavage in lube, making her firm blue breasts glisten in the light.\n\nTsarra gave him a sultry smile as she leaned forward and thrust out her chest, enveloping his throbbing shaft in her slippery cleavage. Her breasts felt soft, warm around him as she started to move, slowly massaging his shaft by sliding up and down his length. Nyrelle and Valani pressed her breasts together, trapping his length between wonderful mounds of pliant flesh, and freeing Tsarra to focus on her movements.\n\n\"Does that feel good?\" she asked tentatively, gazing up into his eyes.\n\nJohn nodded mutely, shocked but thrilled at this unexpected turn of events. \n\n\"This is the first time you've done this isn't it?\" Tsarra asked, visibly growing in confidence. She rose up a few inches and his cock sank into her cleavage, then she lowered her chest so that his broad head reappeared once again. The Maliri girl swabbed her tongue over his hot flesh, before his head disappeared between her blue breasts once again. \"You just relax and let me do all the work.\"\n\nHe stared at her in astonishment, seeing her eyes sparkle with excitement as she bobbed in his lap. \n\nTsarra bit her lower lip, then purred, \"I might not be as powerful a Matriarch as Edraele, but I still command scores of worlds and rule millions of Maliri... Do you think all those beautiful women would be shocked to see their Matriarch milking your cock like this? Or would they wish they could be on their knees in my place, waiting to be filled with your cum?\"\n\n\"How do you know-\" John tried to ask, before trailing off into another deep moan as she increased the pace.\n\n\"What turns you on?\" Tsarra asked him with a knowing smile. \"I'm paired off with Alyssa remember...\" \n\nHe could see how thrilled she was to be turning him on so much, then groaned as he felt her slim tummy brushing over his taut quad when she pressed herself against him.\n\n\"You feel so full,\" she said, giving him a sympathetic look as she dragged her big breasts over the length of his cock. \"Wouldn't you feel so much better if you pumped that big load of cum into my stomach?\" Her eyes flashed with lust as she continued, \"I can't wait to wake up with my belly swollen with your spunk. It'll be like a preview of tonight, when you make me pregnant...\"\n\nHe jerked against her, his cock twitching at the thought. \"You're so fucking sexy!\" he managed to groan.\n\nShe licked her flushed blue lips in anticipation, her breasts snug around his cock like a warm wet vice as she stroked his shaft. \"Tell me when you're close! I don't want to spill a drop... I need all of your hot load in my stomach, making me fertile, all ready for you to breed me...\"\n\nJohn thrust up against her soft breasts, arching his back as he gasped in a strangled shout, \"Now!\" \n\nTsarra dove forward, opening her mouth wide to engulf his head. Her eyes widened in surprise at the powerful blast of cum that shot into her mouth and she just managed to swallow it down before John bulged out her cheeks with a second. She swallowed that down too, her eyes glazing over as she fell into a trance. Moving on autopilot now her throat bobbed up and down as she gulped down one mouthful of cum after another, until she tilted forward, letting him slide effortlessly into the entrance to her throat. \n\nMade malleable and pliant by his cum, Tsarra's neck bulged to accommodate him, sheathing his huge girth inside her throat as she took his cock to the hilt. John could only groan in ecstasy as he fed her, his hands cupping her head to his groin as she sucked out every last drop of cum, her throat milking him with rhythmic contractions. His four balls ached when he was done and he collapsed back on the bed, his softening length sliding from her flushed lips.\n\nTsarra sat back, a dazed look on her blissfully happy face as she ran her fingers over her hugely swollen belly. \n\nNyrelle grinned at John and cuddled her friend. \"I think she looks adorable like this! I've been in her position; you've no idea how wonderful it feels to have your tummy stuffed full of cum like that.\" The rest of the girls on the bed nodded their agreement. \n\n\"I'll have to take your word for it,\" John managed to reply, smiling at them as he regained his breath. \"That was amazing, thank you.\"\n\n*Any time, handsome,* Alyssa purred in his mind.\n\nHe sent her a grateful telepathic grin, then sat up to help Nyrelle and Valani guide Tsarra to lie down on the bed. The Young Matriarchs blew him a kiss goodbye and climbed off the bed to take a shower. Edraele saw Luna off with a kiss, then lay down opposite him as he spooned behind Tsarra, their hands touching as they caressed her curved tummy.\n\n\"It looked like you enjoyed that,\" Edraele said with a warm smile. \"Did my girls do well?\"\n\nHe chuckled and nodded. \"That was incredible, thank you. I can honestly say that was the most fun I've had feeding a girl for a second time.\"\n\n\"That's wonderful to hear.\" Edraele reached up to caress his cheek, brushing her soft blue thumb across his skin. \"They're all very taken with you and just want you to enjoy your time with them. We all know the pressure you're under, so let us help you really relax and forget about your worries. The girls would love that more than anything.\"\n\nJohn kissed her wrist and nodded. \"That sounds like a very reasonable request to me.\"\n\nHer angular eyes crinkled with affection, before she glanced at the girl sleeping serenely between them. \"Now, would you like to cuddle with Tsarra until she wakes up, or shall we notify the rest of the Matriarchs of my recent elevation in status?\"\n\n\"Let's make your new title official,\" he decided, then kissed Tsarra on the shoulder. \"She'll be asleep for four hours, but can someone watch her?\"\n\n*I'd love to,* Jade immediately volunteered. *I'll be right there!*\n\nThey heard soft footfalls in the hallway a moment later, as the Nymph jogged down the corridor to join them. She swept into the bedroom, a look of delight on her face when she saw Tsarra's condition.\n\n\"The Maliri look so good stuffed full of your cum, Master,\" she purred as she climbed onto the bed. \"You were truly meant to be with them.\"\n\n\"I couldn't agree more, Jade,\" Edraele said with a fond smile.\n\nJohn moved out of the way to make room for Jade, who wrapped the slumbering girl in her loving arms. He offered his Maliri Matriarch a hand and they headed towards the bathroom. The Young Matriarchs were laughing together in the Terran shower, finding the experience just as exciting as the last time they'd been aboard the Invictus. Even Luna couldn't help grinning as she felt the hot water washing over her and she beckoned John and Edraele in to join them. \n\nHe found it endearing to see the Maliri find such a simple thing as a shower so enjoyable, reminding him again of the grim nature of these womens' previous lives. As Nyrelle and Valani giggled in his arms, he watched Edraele and Luna as they laughed and hugged one another under the streams of water. His Maliri Matriarch met his curious gaze over the former assassin's shoulder, then gently kissed her lover's blue skin. John nodded his approval, sharing a smile with her, before turning his attention back to the young women lathering him up.\n\nThe Maliri eventually conceded that John and Edraele couldn't get any cleaner, so the couple left the rest of the girls in the shower. After using the air-dryers, John turned on the big bath and filled it with bubbles, much to the rest of the Maliri's fascination. Waving them goodbye and telling them to have fun, he led Edraele out to his walk-in-wardrobe to get changed. In an act of supreme generosity, Alyssa had cleared some space on the clothes rails for her fellow Matriarch and Edraele brushed her fingers over her various robes, trying to find something appropriate to wear for the occasion.\n\n\"Understated or brazen?\" she called over her shoulder to John.\n\nHe was just pulling on a shirt and looked at her quizzically. \"Excuse me?\"\n\n\"Should I dress down to look modest, or appear in the most regal robes I have to look the part?\" Edraele mused, her fingers dancing between several outfits in her indecision. \n\nHe had no idea what to advise her and when she turned to look at him, Edraele laughed at his deer-caught-in-headlights expression. \n\nTilting her head to one side for a moment, she selected an unassuming but elegant long purple dress and murmured, \"Alyssa's right, I should dress down to reinforce your-\" Her voice trailed off and she exclaimed, \"Oh look, I have the perfect outfit!\"\n\nJohn sighed with relief and pulled on his trousers and tucked in his shirt. \"How do you want to handle this, anyway?\" \n\nEdraele fastened up the dress, then fluffed out her long snowy-white hair. She glanced at him out of the corner of her eye and replied, \"To minimise the chance of upsetting the other Matriarchs with this decision, it might be prudent for them to hear it from you.\"\n\n\"Sure, that makes sense,\" he agreed, his mouth lifting into a smile as he tugged on his shoes. \"I suppose we should wait a while before I make you a crown?\"\n\nEdraele stepped into a pair of high heels, a thoughtful expression on her beautiful face. \"I agree, it would be premature for me to wear one today, but a crown might be useful in certain circumstances to make a statement.\" She glided past him, a mischievous twinkle in her purple eyes. \"Besides, I'd love to wear one for you in our next XO catch up meeting...\"\n\nJohn's eyes were drawn to the perfect globes of her ass, admiring her pert cheeks as she sashayed from the room.\n\n\"Are you coming?\" she asked coyly as she glanced at him over her shoulder, pausing in the doorway and arching her back slightly to make her rump look even more enticing.\n\nHe laughed and strolled up behind her, placing his hands on her hips. \"Not quite yet...\"\n\nShe grinned at him and they walked hand-in-hand towards the grav-tubes. \"Let's head over to the Andresil Enkana. It might be wise to address the Matriarchs from familiar Maliri surroundings, to make you seem less of an outsider,\" Edraele pondered out loud. She glanced at him and arched an eyebrow. \"These precautions are probably unnecessary, but this announcement would be a simple formality if you were able to spend some time alone with the Matriarchs.\"\n\n\"I planned to after they allied with us, but I was called away to help the Ashanath,\" John said with regret. \n\nEdraele smiled as they descended in the red anti-gravity field. \"Emandra Holaris has already expressed an interest in... how should I put this delicately... sampling your 'fountain of youth'. If you were to rejuvenate her in the same way you've done for me, she would gladly give you full trade rights to House Holaris' repertoire of wines.\"\n\n\"The bottle you gave me was fantastic,\" he said, nodding thoughtfully. \"That's an offer well worth considering.\"\n\n\"A delicious beverage for a delicious beverage,\" Edraele replied airily. \"An equitable trade for all involved.\"\n\nHe laughed and squeezed her hand. \"I love this lighter side to you.\"\n\n\"I'm just happy,\" she replied with a loving smile, leaning into him for a kiss.\n\nThey strolled down the Deck Nine corridor towards the airlock and John could see the golden hallway of the Maliri battleship where the two ships were joined. They crossed over into the Andresil Enkana and took a lift up to the Command Deck. A white-haired Maliri captain was waiting to meet them and she gave John a radiant smile when they walked out into the upper corridor that led to the Bridge. \n\n\"It's good to see you again, Daeyra. How are you?\" he asked, recognising her from one of the groups of senior officers he'd been with on Genthalas.\n\n\"I feel wonderful, John...\" she replied with a dreamy sigh, coquettishly brushing her fingers through her short white hair. Daeyra managed to collect herself and blushed a dark blue as she gave Edraele an embarrassed nod. \"If you'd care to follow me, Matriarch, Protector...\"\n\nDaeyra ushered them into the Captain's personal suite, which was fully furnished with a plush desk and an ornate holographic suite. Once John had promised that he would call for her if he should need anything, the battleship captain bade them farewell and exited her quarters.\n\nEdraele glided over to the comfortable-looking high-backed chair and smiled as she gestured for him to sit. \"I took the liberty of asking Daeyra to contact the rest of the Matriarchs. They're all waiting for us to speak to them.\"\n\nJohn took the seat and Edraele stood demurely behind him.\n\nShe glanced down at him and asked, \"Would you like my advice on anything before we start?\"\n\nHe shook his head and sat straighter. \"Thank you, but I think I'll be fine.\"\n\nEdraele looked pleased and leaned across to activate the comm interface, her long blue fingers sweeping across the controls as she connected to the conference call. The faces of the nine remaining Maliri Houses Matriarchs appeared in a series of holographic panels, their expressions brightening as soon as they saw John seated before them.\n\n\"I'm so pleased to see all of you again,\" John said with a warm smile. \"Please accept my apologies for how long it's been since I spoke to you last.\" When the nine Maliri waved his apology away and returned his smile, he continued, \"I want to give you my profound thanks for staying true to our alliance over these last few weeks. With me absent and Edraele incapacitated, I know the temptation for you to... misbehave... must have been overwhelming.\"\n\nSeveral of the Matriarchs blushed, but they all sat taller at his praise, confirming to him that they had all managed to curb their usual impulses.\n\n\"I promise you that such loyalty is greatly appreciated and you have my word that it will be rewarded. It will probably be several weeks before I'm able to return to Genthalas, but when I do so, I'd like to meet with each of you individually. We need to discuss ways to make our alliance as mutually beneficial as possible, so think about anything I can do to improve the lives of your House's citizens, or for yourselves personally.\"\n\nHe glanced at the third woman on the left, recognising Emandra Holaris from the brief meetings he'd had with the Matriarchs. A striking woman, she appeared to be slightly older than Edraele had been when he'd first met her. She caught his pointed glance and her magenta eyes flared for a moment as her face lit up with delight.\n\nLooking at the wider audience again, John continued, \"As you know, I agreed to be your Protector and assist you in the defence of the Maliri against external threats, such as the other Progenitor that threatens us all. You are all wise, intelligent women, with many decades of leadership experience and I wouldn't want to presume to tell you how to run your Houses. However, a committee of fifteen Matriarchs needs some form of leadership to make sure that you are all working together as a cohesive team.\"",
        "He could see the Matriarchs nodding in agreement, several of them already glancing towards the woman standing quietly behind him. \n\n\"As I'm sure you're well aware, Edraele Valaden has had a dramatic change of heart recently, and is very different from the woman you once feared. I hope that you have already started to feel that you can trust her as I do, and after careful consideration, I have chosen her to lead you as a group and act as my representative.\"\n\nThe nine women before him reacted positively to his announcement, some even looking relieved and smiling at the House Valaden Matriarch.\n\nLeaning forward, John said in a firm authoritative voice, \"A distinctive leader will be important as we expand our alliance with other species, and as you know, I would prefer not to rule you directly, only offer my support. Fortunately, the Maliri already have a title for such a role. So that there can be no doubt about the change in direction we are making for the Maliri people, I have decided to elevate Edraele Valaden to that position. Matriarchs, please let me introduce, Queen Edraele.\"\n\nThe reaction to that declaration was much more visceral. Most of the women looked shocked as the position of Queen was suddenly reinstated after thousands of years.\n\nEdraele placed a hand on John's shoulder and her voice was earnest as she said, \"Thank you, Baen'thelas, I promise to serve you to the very best of my ability.\" Turning to address the stunned Matriarchs, she continued, \"Just as I will do my best to serve you, my fellow Matriarchs, to protect you and your Houses from the darkness gathering against us. I see this role as an opportunity to reunite our long-fractured people, guiding the Maliri to work together in correcting the problems that have overtaken our society, so that we can live long prosperous lives just as the Protector desires for all of us.\"\n\nHer sincerity allayed the worst of the Matriarchs' fears and they started to relax, particularly with the reminder that Edraele would merely be acting as John's representative. \n\n\"I appreciate that this has come as a surprise,\" John said, his tone soothing. \"I hope that over the next few weeks, you will see that this change is a very positive one for all of you. If you wish to discuss any concerns with me when I return to Genthalas, I will be more than willing to listen. Otherwise, please think of any suggestions for ways I can assist you.\"\n\nThat put a thoughtful smile back on most of their faces, particularly Emandra Holaris who gave him a coy look under her long lashes. \n\nJohn gave them a warm smile and said, \"That's everything I wished to raise with you today. Is there anything you wish to discuss with me?\"\n\nThere were brief shakes of the head, his audience still reacting to the startling announcements, with several of them giving him a speculative look.\n\n\"Thank you for your valuable time, ladies,\" he said with a respectful nod. \"I'll look forward to seeing each of you soon.\"\n\nThe Matriarchs chorused their goodbyes and Edraele closed off the call.\n\nJohn relaxed back in the chair and blew out his breath. He glanced up at Edraele with a concerned look on his face. \"How was that?\"\n\nEdraele sat sideways across his lap, her eyes shining with excitement as she said, \"You were magnificent! I was so proud of the way you spoke with them! The reminder of the personal meetings with you was inspired, as I'm sure they'll be so focused on that, they'll forget their suspicions and paranoia about me becoming Queen!\"\n\n\"Yeah, I was hoping that might work,\" John said with a self-conscious smile. He placed his hand on her slender stomach and continued, \"How many do you think will be interested in the same kind of deal as Emandra is obviously desperate for?\"\n\n\"All of them,\" Edraele said without a moment's hesitation. \"When they see the dramatic effect on her appearance, they'll be lining up to offer you whatever exclusive trade deals you like in exchange for extending their lives for another century or so. They're all older than me and their mortality will be weighing on them.\"\n\nJohn paused for a moment and looked into her purple eyes. \"Do you think I'm doing the right thing making that kind of deal with them? I know they aren't exactly benevolent leaders, do I really want to extend their rule over their Houses? They've only banned political assassinations because I insisted on it and they responded because of their inbuilt genetic reaction to me as a Progenitor. They're not acting out of any personal desire to do good.\"\n\nEdraele studied him for a moment, then said quietly, \"Are they as vicious and homicidal as I used to be? No, they are not. However, we're talking about varying shades of black here, with all of them responsible for multiple murders. They are not kind-hearted women... at least not yet.\"\n\nHe raised an eyebrow as he returned her look. \"So you think I should actively change their personalities?\"\n\n\"Yes,\" she replied, without any hesitation. \"Under normal circumstances, I would say that they are irredeemable and should be replaced by a younger daughter that has not yet been corrupted by Maliri society.\"\n\n\"I don't plan to re-enact the scenario that created the Young Matriarchs,\" John replied, with an unsettled frown.\n\nEdraele blushed and shook her head. \"I'm not suggesting for one moment that you do. I only took that course of action before because I misunderstood your intent, but I also knew those Matriarchs would never cooperate with me while you were away. Things are very different with you present, however I know you wish to eventually retire to raise a family. I will do my best to keep them in check, but if those women are left to their own devices for several decades, I'm not sure how long your legacy will last. I fear they will require your constant intervention to remind them of your presence.\"\n\nJohn was quiet for a while, holding Edraele close as he considered her words. She leaned into him and placed soft kisses on his cheek and neck, while waiting patiently for him to ponder her advice.\n\nEventually he let out a heavy sigh and admitted, \"I had hoped that by showing them a better way, they might learn to be more benevolent leaders.\"\n\n\"Some of them have lived through over two centuries of vicious backstabbing and betrayals, and that was just what they had to endure from their direct relatives,\" Edraele reminded him gently. \"I suppose it's possible that they might be able to change of their own volition, but I think it highly unlikely.\" She hesitated, a mournful expression on her face. \"I'm sorry to leave you with a feeling of disappointment. It was the last thing I intended after your wonderful speech to the Matriarchs.\"\n\nHe gave her a grateful smile. \"It's not your fault, I did ask for your advice. You were honest and gave me insightful feedback, just as you always do.\" Looking away into the distance for a moment, he added, \"I don't want to make any hasty decisions. I've got a few weeks until I see Emandra Holaris again, so there's no great rush.\"\n\nShe nodded, then gave him an enigmatic smile. \"While we're here on the Andresil Enkana, I should contact the Brimorians and let them know of the imminent arrival of our fleet at the border. Would you like that to be my first official action as Queen of the Protectorate, or would you have me serve you in a different function, My Lord?\"\n\nJohn laughed and shook his head. \"You're as insatiable as Dana!\" Running his hands over her svelte figure he gave her a playful smile. \"Let's save fun with royalty for when you have your crown. Besides, Tsarra did a thorough job of draining me dry and that was only half-an-hour ago.\"\n\n\"I'll look forward to it,\" she said with a look of satisfaction. Glancing at the comms interface, she added, \"I'm happy to call the Ambassador while sitting on your lap, but the Brimorians aren't particularly fond of the Terran Federation and you have made quite a name for yourself, Lion.\"\n\n\"Ah, I suppose I better move then,\" John said with a grin, lifting her up. He rose to his feet, then moved well out of view of the holo-cameras built into the golden desk.\n\nEdraele retook her seat, then scrolled through an extensive list of contacts until she found the one she was looking for. \"We aren't that far from Genwynn Station, it shouldn't take too long to connect,\" she told him, drumming her fingers on the desk. She paused for a second, leaning over to retrieve the captain's golden armoured helmet from beside the desk, then angled the holo-cams so that they only focused on her head.\n\n\"Genwynn Station?\" John asked curiously.\n\n\"The equivalent of Geniya Trading Port, but intended for the Brimorians rather than the Terrans, Trankarans and all the minor empires,\" Edraele explained, watching the connection's progress. \"They were originally defensive stations dating back many thousands of years, but were recently repurposed as trade hubs. While the rest were shut down and rendered inoperative, there are four still being actively used. Genirath Station is the third, and used to trade with the Kintark, while Genkiri is the closest to the Ashanath Collective.\"\n\n\"I've been to Genkiri, but with Ceraden based in Geniya, I did most of my trading from there,\" John replied, looking thoughtful. \"Are there many more stations that were shut down?\"\n\nEdraele nodded, then raised a finger to her lips as the intercom chimed. She placed the helmet on her head, checked to make sure her body wasn't visible, then opened the call. \n\nJohn had seen the Brimorians before, but it was always unsettling to see one of them again. This particular Brimorian was wearing a toga-like white robe, revealing the shimmering teal-coloured scales that covered its muscular body. It had orange webbed crests above its head and to the side of its mouth, which opened into a sharp-toothed smile when the connection opened. \n\nCold, black, lifeless eyes gazed at the screen and the Brimorian said in its disconcerting liquid voice, \"Matriarch Valaden, to what do I owe the pleasure?\"\n\n\"Ambassador Circhoi, how good to see you again,\" Edraele replied, inclining her head towards him. \"This isn't the main reason for my call, but I should inform you of a certain shift in power within the Maliri Regency. Are you aware that we have now become the Maliri Protectorate?\"\n\n\"I was aware of this,\" Circhoi replied, its toothy grin widening in an arrogant smirk.\n\n\"Excellent,\" Edraele continued smoothly, unfazed by the tone of his response. \"The reason of course, is that I have seen a recent elevation in status. You may now address me as Queen Edraele, for I am now leader of the Maliri.\"\n\nThe Brimorian visibly shook, a silver shimmer flashing across its iridescent scales. \"Y-you rule the entire Maliri Protectorate?!\"\n\nEdraele's voice dropped a few octaves, dripping with menace. \"I do indeed, Ambassador. However, I will not remind you again to address me as Queen.\"\n\nCirchoi did a strange double gulp as he bobbed his scaly head. \"Of course, Queen Edraele! Please forgive me, I did not mean any offence. I was just so... overjoyed... yes, overjoyed to hear of your recent coronation!\"\n\n*Aren't you supposed to be ushering in a new era of friendly relations with the Maliri's neighbours?* John asked, watching her intimidating performance with interest.\n\n*Unfortunately, I've had numerous dealings with Ambassador Circhoi and the Brimorians. Trust me, it is far better to keep him on the back foot, than let him believe he has the upper hand,* Edraele replied, while facing rigidly forward towards the holo-screen. *If I ask him nicely, he would politely refuse. Just listen to how he reacts...*\n\nThe Brimorian hesitated for a moment, then burbled quietly, \"Might I be so bold as to ask the primary purpose of your call, Queen Edraele? Aside from the wondrous news of your justly deserved new status, of course.\"\n\n\"A fleet of my warships is performing an errand in the Trankaran Republic,\" Edraele declared imperiously. \"As a courtesy to my Brimorian friends, I wish to inform you that my fleet will begin traversing the Brimorian Enclave later this morning.\"\n\n\"They'll do nothing of the kind!\" Circhoi snarled, baring rows of needle-like teeth. \"Queen or not, you have vastly overstepped your bounds! The Brimorian Enclave refuses such passage point blank!\"\n\n\"Is that so?\" Edraele asked, in a decidedly ominous tone. \"Need I remind you of the Genwynn Treaty?\"\n\nCirchoi looked at her in confusion for a moment. \"The trading station? What does that have to do with anything?\"\n\n\"The treaty was named after the station, that much is correct; Genwynn is where the Enclave's representatives signed the treaty with the Maliri 956 years ago,\" Edraele informed him in a cold voice. \"As you appear to be unaware of the terms, would you care to let me enlighten you?\"\n\nThe Brimorian Ambassador shivered again, then his forked tongue darted across his teeth. \"The exact terms seem to have slipped my mind, Queen Edraele.\"\n\n\"In exchange for a non-aggression pact, and permission to cross the borders of the Maliri Regency to access Genwynn Station for trade purposes, the Brimorian Enclave will grant unrestricted passage to Maliri vessels throughout its territories,\" Edraele informed him. She leaned forward and said in a quiet voice, \"We have not made use of that clause for nine centuries. We choose to do so now.\"\n\n\"B-but, that can't be right!\" Circhoi gurgled, his finned crests drooping. \"You can't send a warfleet through our territory!\"\n\n\"So you choose to rescind the treaty?\" Edraele asked, leaning back slightly, her voice getting even colder. \"You wish to change the status of relations between our empires from non-aggression to... aggression? You are aware of the Maliri's policy towards unwelcome intruders in our territory, are you not? That would of course include every Brimorian currently aboard Genwynn Station...\"\n\n\"Wait!\" Circhoi gasped, raising his three-clawed hands in panic. \"I-I need to check this with my government. Only the Deep-Pool can grant this kind of authorisation!\"\n\nEdraele inclined her head politely. \"Of course, I quite understand Ambassador. You have three hours, seventeen minutes.\"\n\n\"What happens then?\" the Brimorian double-gulped. \n\n\"That's when my fleet arrives at your border...\" she clarified for him. \"If they are opposed in any way, then I will be forced to assume the Brimorian Enclave has revoked the Genwynn Treaty.\" \n\n\"I'll call you back!\" Circhoi blurted out, darting a frantic look behind him and screeching something in a series of liquid-sounding clicks. His scales flashed silver as his head whipped around to look at her again. \"... Queen Edraele.\"\n\nEdraele shook her head and said magnanimously, \"There's no need to go to such trouble on my account. If my Fleet Commander informs me that they were forced to vaporise a hostile Brimorian fleet, then I'll have your answer and respond accordingly. I do hope we are able to speak again sometime in the future, Ambassador Circhoi.\"\n\nWithout waiting for his response, she leaned forward to end the call, the Brimorian's look of relief quite evident despite his alien features as his image faded away.\n\nJohn gave her a quiet round of applause. \"Very convincing, Queen Edraele. Was all of that true about the Genwynn Treaty?\"\n\nEdraele removed her borrowed golden helmet then fluffed out her white mane. She smiled as she rose from her chair and gave him a theatrical bow. \"Every word was true; they really did sign that treaty nearly a thousand years ago. When the Brimorians started expanding and made contact with the Maliri Regency, the treaty was signed to give us free movement should it ever be necessary. Trade with the Brimorians was beneficial to us of course, and the Houses were too busy fighting each other to want to waste the time or resources slaughtering a neophyte space-faring species.\"\n\n\"Won't threatening to declare war over some ancient treaty make future relations extremely tense?\" John asked, looking worried.\n\nEdraele shook her head. \"The Brimorians will often try and renegotiate a deal, but they will adhere to a treaty's terms if it's in their benefit to do so. Maintaining the peace with the Maliri and being allowed to trade with Genwynn station is very much in their benefit.\" She shrugged as she continued, \"They signed the treaty; just because the Maliri never left our territory, it's not our problem that they've forgotten all about it.\"\n\nJohn slipped his arms around her. \"Well it was a very impressive bit of aggressive negotiations. You're very good at being bad.\"\n\n\"Good enough at it to make you want to slap cuffs and a collar on me, and bring me to heel?\" she murmured, pressing herself against him and gazing into his eyes.\n\nBefore John could reply, his stomach rumbled loudly in protest, and he grinned at her in his embarrassment.\n\n\"Oh dear, I really am neglecting you as your Matriarch!\" she exclaimed with a frown. \"Let's go and get you something nice for brunch. Perhaps you'd like to eat here instead and try some Maliri dishes?\"\n\n\"Now I am being spoiled,\" John said with a smile and gave her a grateful kiss.\n\n***\n\n\"Alright Faye, that's the sensor systems linked up to the first section of synthskin,\" Dana said, glancing up into the sprite's luminous eyes from where she knelt beside the robot's slender purple forearm. \"Want to fire them up?\"\n\nFaye nodded eagerly, her holographic wings fluttering in a blur as she focused on the robot's internal data-network and activated the relevant sub-system.\n\n\"The data stream looks good,\" Irillith called out from the Engineering Podium. \"Temperature and pressure sensors are fully operational.\"\n\n\"Oh my!\" Faye gasped, her eyes widening as she stared at Dana. \"I can feel you holding my wrist!\"\n\nRachel smiled at Dana, then leaned close to the robot's forearm and blew on the purple synthskin. A ripple of goosebumps freckled the artificial skin, Faye's robotic body reacting just as an organic would have done.\n\n\"Oh my gosh!\" Faye squeaked, her eyelids fluttering as she wobbled unsteadily. \n\nIrillith laughed at Faye's reaction, then raised a hand in caution, \"Be careful, she's not used to all that sensory data yet. You might overload the buffers.\"\n\nRachel frowned and said, \"I thought we were testing her systems. It's important to get her used to normal human contact...\" She swooped down, then placed a delicate kiss on the robot's purple upturned wrist, the synthskin feeling soft and smooth against her lips.\n\nFaye flickered and vanished with a yelp, her elfin face reflecting her utter astonishment.\n\nIrillith sighed and nodded. \"Yep, reboot time.\"\n\nDana rolled her eyes and poked her girlfriend in the ribs. \"Hey, quit fucking around! We weren't sure if the sensor suite was going to be effective, so we've got the sensitivity turned up to maximum!\"\n\n\"Ah, I didn't know, sorry,\" Rachel said, giving the two girls a look of apology. She knelt beside the redhead and stared in fascination at the purple forearm. \"This Maliri synthskin is absolutely remarkable! It looks so lifelike!\"\n\n\"Yeah and recolouring it from blue to purple was easy enough,\" Dana said, looking very pleased with herself. \"Hooking it up to the full network of sensors is a bit of a ball-ache, but it'll be worth it when she's done.\"\n\nThe brunette nodded. \"Definitely! If Faye's going to pass as a convincing organic, at the very least, she'll need to be able to feel every square inch of her body.\"\n\n\"That's easy for you to say,\" the redhead grumbled. \"You're not the one attaching all the nano-probes!\"\n\nRachel reached for the piece of synthskin moulded for Faye's left hand and studied it for a second. \"If you'd like some assistance, I'd be happy to give you a hand?\" \n\n\"That would be awesome actually, thanks Babes,\" Dana replied, giving her a grateful smile.\n\nRachel passed the redhead the moulded synthskin. \"Okay then, here's your hand...\" ",
        "Dana stared at it in confusion for a moment then giggled as she got the joke. \"What's got into you? I know it's not John, he's probably up to his quad in Maliri right about now.\"\n\n\"I really enjoyed getting to know Nyrelle last night,\" Rachel replied with a smile. \"She's so excited about having a baby with John... I suppose her good mood was infectious.\"\n\nDana eased back from the robot and nodded, a grin on her face. \"Teaching Kali a load of naughty stuff was so much fun.\" She lowered her voice and whispered, \"Have you told Nyrelle how much John likes fucking us in the ass? I haven't mentioned it to Kali yet; I know the Maliri are all weird about it or something...\"\n\n\"It's culturally taboo for them,\" Rachel whispered back. \"I suspect it's because of the dramatic gender imbalance. Any form of sex not strictly required for procreation was probably shunned for that reason.\"\n\nDana glanced at Irillith and murmured, \"I dunno, the twins love sucking down spunk and getting it in the ass...\"\n\n\"I can hear every word by the way,\" Irillith called over to them, her eyes remaining riveted to the console as her hands worked to reboot Faye's mechanised body. \"The pointy ears aren't just to make me look like a big blue fairy...\"\n\nDana laughed and stood up to stretch her legs. \"Sorry, beautiful. So what's the story behind the Maliri and taking it in the butt? You can't seem to get enough of it!\"\n\nIrillith turned to look at the teenager, a thoughtful expression on her face. \"It's probably the illicit thrill of doing something considered so disgraceful that makes it so exciting,\" she admitted, blushing slightly. \"Besides, you know how dominant John gets taking us that way, that makes it even better!\"\n\nThe redhead nodded and sighed wistfully. \"I love it when he stuffs me full of cock and tells me I'm a good girl...\"\n\n\"Don't we all!\" Rachel said with a grin.\n\nFaye reappeared in a purple flash, looking a little disorientated. \"Hey everyone! Sorry about that, Faye Primary got overwhelmed by all the sheer volume of data!\"\n\n\"That's okay,\" Irillith called down to her. \"I've rebooted the chassis' systems, so you can reconnect to it again whenever you're ready.\"\n\n\"Do you think Faye's going to enjoy being called a good girl?\" Dana asked her friends, giving the purple girl an affectionate wink.\n\n\"Definitely,\" Rachel said with a lopsided smile.\n\nIrillith laughed and nodded too.\n\n\"Oh, I really love it when John calls me that!\" the sprite agreed, beaming at them all.\n\n***\n\nJohn walked out into the corridor in Deck Two with Edraele on his arm, having been warned by Jade that Tsarra had awoken a few minutes earlier. They had spent the morning trying a variety of Maliri dishes prepared by the enthusiastic chefs aboard the Maliri Battleship, with John chatting to the culinary team afterwards and learning some intriguing recipes. \n\nThe Maliri Matriarch paused just outside the grav-tube, rather than follow him towards the bedroom. \"I'll part ways with you here, John.\"\n\n\"Aren't you coming as well?\" he asked, turned back to face her.\n\nEdraele shook her head. \"I'm planning to meet Tashana and Irillith in a few minutes, we're going to spend the afternoon together. I thought you might prefer to spend some time alone with Tsarra.\"\n\nJohn squeezed her hand and gave her a warm smile. \"I hope the three of you have a lovely time. Thanks very much for this morning, brunch was fantastic and I really enjoyed your company.\"\n\n\"I thoroughly enjoyed myself too,\" she replied, giving him a tender kiss goodbye. \"I'll see you later this evening.\"\n\nShe turned and glided towards the Officers' Lounge, so John strode down the corridor to his bedroom. The House Perfaren Matriarch was up and dressed, sitting demurely on the end of the bed. Jade knelt behind her, running a brush through Tsarra's tumbling white locks that cascaded over her shoulders and down her back. \n\n\"You look stunning,\" John said as he walked over to join them.\n\nTsarra glanced at him, then blushed furiously. \"Hello, John,\" she said in a meek voice, quickly averting her gaze.\n\nHe squatted in front of her and looked up into her eyes. \"What's the matter? You certainly weren't shy this morning!\" he exclaimed, reaching out to stroke the rounded curve of her stomach where she hadn't finished digesting all the cum he'd fed her earlier.\n\n\"I got a bit caught up in the moment following Alyssa's advice,\" she replied, giving him a tentative smile.\n\nHe caressed her cheek and shook his head. \"Don't be embarrassed. You were very, very sexy, and I really appreciated all that effort you went to, just to make it enjoyable for me.\"\n\nThe anxious tension faded from her and Tsarra looked much happier. \"I really enjoyed it too.\"\n\n\"There, all done,\" Jade said, sweeping the Maliri girl's silky-soft hair away from her face. \"If you come and find me later, I'll give you some good tips on how to take care of your hair.\"\n\n\"That would be wonderful, thank you, Jade,\" Tsarra replied, smiling at her over her shoulder. She ran her fingers through her new mane of glossy white hair and gazed down at John. \"Do you really like it?\" \n\nHe nodded as he stood straight and offered her a hand. \"You look incredibly beautiful.\"\n\nShe was delighted by his compliment and accepted his hand, rising to her feet. \n\nJohn turned to the Nymph sitting crossed legged on the bed. \"Thanks for looking after her this morning, Jade.\"\n\n\"It was my pleasure,\" she replied, giving him a radiant smile. Vaulting off the bed, she bounded towards the door and waved them goodbye. \"I said I'd help Dana build more weapons this afternoon. You two have fun, I can't wait to see you both later!\"\n\nTsarra slipped her arm around John's as they followed the jogging Nymph down the corridor at a far more sedate pace. She glanced his way and seemed like she wanted to ask something but changed her mind.\n\n\"Curious where I'm taking you?\" John asked, catching the furtive glance.\n\nShe nodded, flicking a longing look back at the bedroom. \n\nHe led her into the red glow of the grav-tube. \"I thought you might like a change of scenery.\"\n\nAfter descending only one level, they walked out into the Lagoon, where Tsarra paused, her eyes widening in surprise. \"This place is lovely! I had no idea this was aboard your ship!\"\n\n\"We installed it during the refit at Genthalas,\" John explained, walking hand-in-hand with her over the bridge. \"It was intended as a gift for Jade. She loves to swim and the old pool was too small for her.\"\n\n\"That was very kind. I can see why she's so devoted to you,\" Tsarra said, gazing at him with open admiration.\n\nHe smiled at her and gently squeezed her hand as he continued walking across the bridge. \"I'm incredibly lucky to have so many wonderful women in my life.\"\n\nTsarra realised he was talking about her too and she couldn't help blushing at that, but appeared thrilled nonetheless. \n\nJohn opened the door into the observatory and said, \"There's a fantastic view in here. It's a good place to relax and have a nice chat.\"\n\nThe Maliri took one look at the huge oval bed set into the floor and her expression brightened further. \"You're right, this was an excellent choice.\" She kicked off her high-heeled shoes and padded out onto the covers, giving him a come-hither look.\n\nHe smiled at her obvious enthusiasm, then removed his own shoes and knelt down by the bedside controls. Pressing a couple of buttons, the ceiling parted down the middle then slid open, giving them a breathtaking view of the majestic starscape. \n\n\"Oh! The view in here is amazing!\" she gasped, looking up at the stars in surprise.\n\nJohn sat down on the bed and grabbed several pillows to prop himself up. Tsarra caught the movement out of the corner of her eyes, so she turned and knelt down beside him, her face filled with nervous anticipation. \n\n\"Just relax, I really would like to talk to you a bit first,\" John said giving her a disarming smile.\n\nTsarra laughed self-consciously. \"I'm sorry I'm so jittery, I promise I'm not like this normally. It's just... I've been waiting for this moment for a long time.\"\n\n\"I understand,\" he said, his voice soothing. Gathering her in his arms, he lay back against the pillows bringing her with him. When she was settled, he propped himself up on one arm, then placed a hand on her rounded stomach and gently caressed her.\n\n\"That feels so good,\" she murmured, her angular dark-green eyes gazing up at him as she melted into his arms.\n\n\"Was it strange waking up to find your tummy like this?\" he asked, tracing circles around her curved navel. \n\nShe bit her lip then nodded. \"Strange, but exciting too.\"\n\n\"The more your body gets used to absorbing my cum, the faster it does it,\" he explained. \"The girls get through a full load in only a couple of hours now.\"\n\nTsarra placed her own hands on her belly. \"Did they really spend two weeks surviving on just... what you fed them?\"\n\nHe nodded, an affectionate smile on his face. \"It's become kind of a tradition around here for any new girl that joins the crew. Alyssa was on her own to start with, so for her it was over a month.\" \n\nThe longing was obvious in Tsarra's eyes. \"It's such a shame you can't stay for much longer. I think it's important to respect traditions...\"\n\n\"Do you indeed?\" John replied, sharing a smile with her. He paused for a moment before continuing, \"That's actually why I wanted to speak to you.\"\n\n\"You can stay after all?\" she asked hopefully.\n\nHe shook his head with regret. \"I'd love to, but there's a number of important tasks I need to take care of first. No, I just meant that I wanted to talk to you because I don't really know much about Tsarra Perfaren...\"\n\n\"What would you like to know?\" she asked, studying him curiously.\n\n\"Maybe start with your past?\" he suggested. \"What was it like growing up on your homeworld? I assume it's called Perfaren?\"\n\n\"Yes, that's correct,\" she replied, before giving him a troubled frown. \"Are you sure you want to hear about my past? It's not a very uplifting story. You've known the Young Matriarchs for quite some time, so you must know what it was like growing up as a Matriarch's daughter...\"\n\n\"I'd like to know about you, but don't feel pressured into telling me anything you aren't comfortable talking about,\" John said, brushing a lock of hair away from her eyes.\n\nShe gave him a brave smile. \"I'd be willing to tell you anything, I just don't want you to pity me.\"\n\n\"All the girls have had troubled pasts, and while I feel sympathy for them, I don't pity any of them,\" John replied earnestly. \"I have too much respect for all of you to feel that way.\"\n\nTsarra's tense expression softened and she gave him a brief kiss. \"Alright, I'll tell you.\"\n\nHer childhood was much the same as the other Young Matriarchs, dominated by tales of her selfish, haughty, and sadistic mother. She'd been close to her elder sisters when they were younger, but as they'd been groomed for succession and involved in the cutthroat world of Maliri politics, they'd changed, becoming twisted reflections of their mother. Feeding off the Perfaren Matriarch's scorn for her youngest daughter, Tsarra's eldest sisters had turned spiteful, tormenting and bullying her too.\n\nShe told him how her beloved pet Marnleow had disappeared when she was twelve and she had spent days frantically searching for the affectionate six-legged feline. Tsarra only discovered that her eldest sister had tortured it to death, when Selantha wrapped up the mutilated corpse and gave it to the heartbroken girl as a present on her thirteenth birthday.\n\n\"Maliri society is so fucked up,\" John growled through clenched teeth. \"I can't believe the monsters it turns your women into!\"\n\nTsarra nodded sadly. \"Selantha used to be a sweet girl when I was very young, but it only took a few years for her to be twisted beyond all recognition.\"\n\nHe hesitated for a moment, then asked, \"What happened to her?\"\n\n\"She was poisoned, two years ago,\" she replied, a flicker of grief in her eyes for the girl she'd been close to all those decades earlier. \"Both my sisters and my mother were assassinated, probably by Tinefain Naestina.\"\n\n\"Valani's mother?\" John asked, recognising the surname. \n\nTsarra nodded, her expression bleak. \"I would have thanked her, but it certainly wasn't done for my benefit.\"\n\nHe frowned in confusion. \"Why would Tinefain go to the trouble of murdering your mother and sisters, but leave you alive? Wouldn't it have been simpler to have killed you too?\"\n\n\"Maliri politics don't work like that,\" she explained gently. \"Completely wiping out another Noble House causes too much destabilisation and chaos, so the Matriarchs very rarely do so. It's seen as a far more insulting fall-from-grace to leave only the youngest daughter alive, so that she can watch while her House's holdings are picked apart and it tumbles down the rankings to fade into obscurity.\"\n\nJohn's eyes narrowed and he gave her a grim smile. \"Tinefain underestimated you. She had no idea how strong you were.\"\n\nTsarra had a wistful look in her eyes as she said quietly, \"That's very kind of you to say, but I've never been strong.\"\n\n\"What rank was House Perfaren when your family were murdered?\" John asked, raising an eyebrow.\n\n\"We were Rank Three, trying to surpass House Loraleth.\"\n\n\"And what rank are you now?\"\n\n\"We're still Rank Three,\" Tsarra replied, lifting her chin with pride.\n\n\"Exactly,\" he said, admiring her sudden confidence. \n\nTsarra's expression brightened, but John hadn't finished.\n\n\"You also saw the truth behind Tashana's warnings about Progenitors, even though she was asking you to put your faith in what must have seemed like a wildly implausible story, at least at first,\" he reminded her, gazing into her eyes. \"That tells me that you're very astute and possess a willingness to look beyond accepted conventions.\"\n\n\"Then you managed to rally half of the Maliri Regency behind your banner, convincing all those elder Matriarchs of the threat you saw looming. To do that showed exceptional courage and drive, as well as an impressive ability to inspire and lead people. They're all rare qualities, Tsarra, but you possess all of them...\"\n\nShe stared at him, mouth open in astonishment. \"I've never seen myself that way before,\" she finally murmured in a hushed voice.\n\n\"You know those aren't empty compliments, don't you?\" John said, his tone sincere. \"You can feel that I'm being completely honest with you...\"\n\nTsarra nodded, eyes wide as she gazed at him. \n\nHe stroked her cheek and said gently, \"For most of your life you've had people putting you down, so it's no wonder your self-confidence was so low. You're a remarkable woman, Tsarra, don't let anyone ever tell you otherwise.\"\n\nShe looked at him in awe, then let out a happy sigh, which suddenly turned into a giggle. \n\n\"Oh dear,\" John said with a smile. \"I really wasn't expecting that to be funny.\"\n\nTsarra shook her head emphatically. \"No, what you just said was lovely.\" She blushed, her cheeks turning a dark blue, \"I just remembered something I said before I met you, while I was trying to recruit the other Matriarchs. I told them I didn't want to become a Progenitor's broodmare...\" She had a doe-eyed softness to her eyes as she whispered, \"Now I can't think of anything I want more...\"\n\nJohn slowly lowered his hand to her tummy, brushing his fingertips over the slight curve where her stomach was still full of his cum. He caressed her very gently while they stared into each other's eyes, both able to see and feel the emotions shared in that intimate gaze. \n\nShe eventually gave him a blissful smile. \"This is so much better than a trip to the border stations would have been...\"\n\n\"Alyssa mentioned that you were already thinking about having children,\" John said, his hand moving lower on her belly. \"I know you're under a lot of pressure to rebuild your House.\"\n\nTsarra laughed and nodded. \"That's another reason why I'm now so fond of Edraele, although I definitely wasn't at the time. I had an appointment arranged with one of the most popular males on the border stations, but I cancelled it when Edraele allied with the Young Matriarchs and sent their combined fleets to menace House Perfaren's borders.\" She looked tremendously relieved as she added, \"If not for her, I'd have that foppish idiot's offspring growing in my womb...\" \n\nJohn frowned and looked at her dubiously, \"If he was popular, surely he can't have been that bad? All the Maliri males I've met have been pleasant, friendly, and charming.\"\n\n\"Well, that might be because of who you are, or more specifically what you are,\" Tsarra replied thoughtfully. \"But then again, I never met my father, and the only Maliri male I've spoken to had hundreds of women throwing themselves at him on a regular basis. Perhaps that's why he was so conceited and self-centred.\"\n\nRaising an eyebrow, John replied, \"I better be careful then!\"\n\nShe laughed and shook her head. \"I don't think you're in any danger of turning out like him!\"\n\n\"Was he really that bad?\" John asked, finding the thought profoundly unsettling for some reason.\n\nTsarra gave him a wry smile, then furrowed her brows into an angry frown and spoke in a slightly deeper voice, \"I've never heard anything so outrageous in all my life! How dare you cancel an appointment with me! Don't you know who I am?! I've got hundreds of women begging me for my time and you have the audacity to make me reorganise my schedule?!\"\n\nJohn winced and raised a hand to urge her to stop. \"Yeah, he sounds like a real dick.\"\n\n\"A terrible choice for a father,\" Tsarra agreed. \"But I suppose we'd have just done the deed and I would never have had to see him again.\"\n\n\"Really? Never?\" John asked with a frown. \"Irillith and Tashana continued to see their father while they were young, and I know Ceraden tried to keep seeing his daughters as long as he could.\"\n\nTsarra shook her head. \"Once I was pregnant, I would have returned to my homeworld to continue governing as Matriarch. Unless I chose to see the same male to conceive another child, we wouldn't have met again, not that he would've had any interest in doing so.\"\n\n\"Well my view on fatherhood is very different,\" John said firmly. \"I believe we should raise our child together.\"\n\nShe looked at him in surprise, then frowned and admitted, \"Actually, I've been so excited about being with you, I haven't put too much thought into the future. I suppose I'd assumed that once I was pregnant, I would return home to Perfaren.\"\n\n\"Not unless you really want to,\" John said warily. \"I'd prefer that you live with me and the rest of the girls wherever we decide to make our permanent home. I want to keep you safe and look after you, and I'll need to feed you regularly to make sure you're in perfect health throughout your pregnancy. After the baby's born, then I want to be there to help every step of the way.\"\n\nTsarra was amazed and she beamed at him in delight. \"That sounds so wonderful! I can't think of anything I'd love more!\"\n\nHe winked at her and said, \"My broodmare deserves nothing less!\" \n\nShe giggled and hugged him tight. \"I didn't know I could feel so happy!\" she exclaimed, a look of bliss on her beautiful face.\n\n\"I actually know quite a few other ways to make you feel even better,\" John said, letting his hand slip through one of the slashes in her dress and ghosting his fingertips over her skin. \n\nTsarra sucked in her breath at his gentle touch, her pupils flaring with arousal. She looked up at him with big, trusting eyes. \"John, I've never done this before...\"\n\n\"I know and I'll be very gentle with you,\" he promised, leaning down to give her a tender kiss.\n\nJohn was as good as his word, at least through her first couple of climaxes. After that, Tsarra urged him onwards to increasingly energetic heights, as he spent the afternoon teaching her just how good she could really feel.",
        "***\n\nIlyana had retired to their shared quarters a few minutes earlier and now it was Almari's turn to take over as telepathic link between the House Valaden fleet and their Matriarch. She left the elevator and walked out onto the broad bridge of the Galaena Serine, then headed straight for the gilded command throne. The Fleet Commander was seated there, the white-haired Maliri intent on the holographic empire map that floated before them. As Almari approached, Lilyana made a precise rotating motion with her wrist and the map spun to mirror her movements, zooming in a second later on the border between the Maliri Protectorate and the Brimorian Enclave.\n\n\"How soon until we cross the border?\" Almari asked, standing next to the naval officer.\n\n\"Just a few minutes; you can see for yourself,\" Lilyana murmured, gesturing towards the holographic image, then making a sharp flick of her fingers.\n\nA duplicate map appeared to her right, directly in front of the assassin. It showed the route the fleet had been following since leaving the Invictus the previous evening, marked clearly in orange as it coasted through Maliri Space. They had spent most of the night backtracking along the border from the rendezvous point, but according to the glowing flightpath, they had just made a sharp turn towards Brimorian territory.\n\n\"Why the long detour?\" Almari asked, pointing towards the long trek along the border. \"Wouldn't it have been faster to just travel diagonally across Brimorian Space?\"\n\n\"This route minimises the amount of time we'll be traversing potentially hostile territory,\" Lilyana explained, tracing the curved flightpath that followed the border line between Terran and Brimorian Space; the fleet staying just inside the Brimorian side. \"John's orders were to travel to Trankara to join forces with the armada assembling there.\"\n\nAlmari looked at the map of the Trankaran Republic and searched for their capital. Trankara itself was a long way from the Kirrix border, closer to the centre of Trankaran Space. The Maliri fleet had only moved so far from the original rendezvous location to allow the Invictus to reach them faster, with everyone eager to see Edraele restored to health as quickly as possible.\n\nNodded her understanding, Almari glanced across at the tactical map that had captured Lilyana's full attention. Scattered along the Brimorian border were scores upon scores of ships and, spaced out as they were, they reminded the assassin of a fishing net. \"If the Brimorians haven't formed a fleet to try to oppose us, should we take that as a good sign?\" \n\n\"I sincerely doubt they would attempt to stop us at the border, not when they didn't know the exact point we intended to make the crossing,\" the Fleet Admiral replied. \"They're probably hoping to have a ship close enough to tail us when we cross the border, so they can perform an active scan of the fleet. Whether they choose to ambush us further into their territory is still up for debate, but we should have a good chance of evading them with our upgraded hyper-warp speed.\"\n\n\"What happens if they do attack?\" the assassin asked, studying the sprawl of military vessels.\n\nLilyana narrowed her angular eyes. \"I'm under orders to make an example of any ships that do attempt an interdiction. If we're too heavily outnumbered, we can always change course into Terran Space. The Protector asked that I treat that option as a last resort, but it's there should we need it.\"\n\nAlmari smiled wistfully at mention of John, knowing that it would be months before she saw him again. \"Is there anything you'd like me to pass on to him?\" she asked, remembering her role as communications link between Edraele and her Fleet Commander. \n\nLilyana didn't take her hawk-like gaze from the map for a moment. \"Please inform Edraele that we've just crossed the border into the Brimorian Enclave.\"\n\nThe assassin turned to stare at the map, feeling a shiver run down her spine. It was the first time she'd ever left Maliri territory and although the border was only an intangible line in space, she suddenly felt exposed in a way she'd never done before. Almari glanced at Lilyana and the Fleet Commander returned her sombre look, sharing the exact same feeling. They were both equally aware of the titanic shift in Maliri foreign relations this represented; the incursion into the Brimorian Enclave marked the first time a Maliri vessel had left their territory in over nine thousand years...\n\n*** \n\n\"Buddy, have you started drinking on duty?\" Captain Andrew Fowler teased his friend, before winking at the attractive blonde sitting opposite. \"What do you reckon, CT, should we be worried?\"\n\n\"I'm telling you, the Kintark have been using false transponder codes!\" Captain Galen Skotari insisted. \"I saw it with my own eyes!\"\n\nCaptain Camilla Tovaskaya glanced around the bustling open bar on Port Medea, then gave him a cautionary look as she whispered, \"Not so loud, Galen.\"\n\nSkotari leaned closer to his friends and said in a hushed voice, \"I just spent days being tailed along the border by a Kintark 'cruiser'.\" He added air quotes with his fingers. \"They were obviously hiding something because they wouldn't play Bulling-the-border.\" \n\nFowler laughed and rolled his eyes. \"I can't believe you were trying to wind up the lizards. You know we were at war with them only a few weeks ago, right?\"\n\n\"They know it's just for fun,\" Skotari said, waving away his friend's concern. \"Besides, that's not the point. When we got closer to the border, they backed off! Since when do the Kintark ever run away from a challenge like that?\"\n\n\"Maybe their captain was a pussy?\" Fowler shrugged then took a drink from his bottle of beer. \n\n\"Come on...\" Skotari said scornfully. \"The Kintark putting a coward in command of a cruiser? No fucking chance.\"\n\nTovaskaya gave him a sceptical look. \"That's not much to go on, Galen.\"\n\n\"I know!\" he said darting an eager glance at both of them. \"That's why I had my engineers rig a probe to trigger an active pulse with a comm broadcast. When we pulled the Antaeus away from the border, we lured in the lizards, then BAM! Full sensor scan of those tricky bastards! It turned out it was just a freighter, pretending to be a cruiser!\"\n\n\"That can't be right,\" Fowler protested, rubbing his red-bearded chin. \"It was probably some sort of sensor screw-up.\"\n\n\"Nope, we collected the probe and I got my Chief Engineer to give it a full diagnostic; all working in tip-top-shape,\" Skotari replied with a grim smile.\n\nTovaskaya looked anxious as she said, \"If you're right, this is a big deal, Galen. All the members of the Galactic League agreed to use active transponder codes; well, except the Maliri, but that was hardly a surprise.\" She shook her head, then continued, \"Anyway, you're talking about major treaty violations here. Why would they risk turning all of the Galactic League against them?\"\n\nSkotari shrugged helplessly. \"I've no idea, Camilla. I'm just telling you what I saw.\"\n\n\"What did Maddox say?\" Fowler asked, still not sounding convinced.\n\nRolling his eyes in disgust, Skotari replied, \"What do you reckon? He told me he'd escalate it up the chain of command, but if he thinks there's any chance this'll make him look bad, he'll just sit on it.\"\n\n\"So what are you going to do now?\" Tovaskaya asked him quietly. \n\nHe glanced at his two friends, a hopeful look in his eyes. \"I was hoping either of you might have some connections? Someone higher up the chain of command we can bring this to...\"\n\nFowler's eyes widened and he replied, \"You know what, I might be able to help!\" Reaching into his pocket, he pulled out his comm device and carefully set it down on the table in front of them. \"Just hit number one, I've got Fleet Admiral Buckingham on speed dial!\"\n\nSkotari couldn't help laughing. \"Oh, get fucked, Andrew!\"\n\nGathering up the comm device, Fowler grinned at them both. \"That's sound advice, buddy. I'll bid you both a fine evening, for I have another date with Ava!\"\n\n\"Seriously?\" Skotari said, shaking his head in disbelief. \"How come she didn't start running the moment she set eyes on you?\"\n\n\"That's a good point,\" Tovaskaya agreed, pretending to look concerned. \"I think she's overdue for her medical, perhaps she went blind?\"\n\n\"I'll have you both know that Ava greatly admires my manly red beard. She says it makes me look like a Viking!\" Fowler replied, before rising from the table and patting them both on the shoulder. \"You two should follow Galen's advice as well.\"\n\nTovaskaya blushed and downed her drink, while Skotari tried to stammer a denial. Fowler just laughed, waved goodbye and strode away from the bar. There was an awkward silence for a moment, then the couple seated at the table smiled at each other.\n\n\"Fancy another drink?\" Galen asked, glancing down at her empty glass.\n\n\"Actually, I don't feel like staying out drinking any more,\" Camilla replied, as she rose from her chair. She gave him a coy look that set his pulse racing. \"Care to walk me back to my suite?\"\n\nGalen blinked at her in surprise. \"You booked a suite on Medea?\"\n\n\"Would you prefer we retired to the Antaeus?\" she asked, raising an eyebrow quizzically.\n\nThinking about all the ribbing he'd get from his crew, he quickly shook his head and jumped to his feet. They left the noisy chatter of the bar behind them as they strolled across the Plaza. Port Medea was packed with people that evening, nearly all military personnel, from fleet crews to squads of marines out for a fun night at the bars and pubs in the space port. \n\nAs they entered the quiet residential district and walked through a tree-lined park, Camilla leaned in close and whispered, \"I actually do know someone higher up the chain of command that I might be able to raise this transponder issue with. If you can send me all the data you've got, I'll forward it on to him.\"\n\n\"That would be amazing, thank you!\" Galen exclaimed, his face lighting up with a broad grin. \"I'll go grab the data crystals from the Antaeus and be right back!\"\n\nShe caught his hand and shook her head. \"Get it later. I won't be able to transmit the data until I can use the Secure Comms Relay back on the Hesperus and I don't plan on returning to my ship for a while.\" Her mouth turned up into a flirtatious smile. \"I'd like to show you the view from my room first...\"\n\nShe turned and pressed her hand against the door to the suite, the DNA reader beeping green. Camilla sauntered into the room, giving him a sultry glance over her shoulder. Galen followed her in, transfixed by the alluring sway of her hips, all thoughts of the data crystal forgotten.\n\n***\n\nJohn felt movement on the oval bed and slowly opened his eyes, trying not to disturb Tsarra who was still fast asleep, her head resting on his shoulder. \n\n*Hey, handsome,* Alyssa thought to him, as she knelt at his side. \n\nHe greeted her with a warm smile. *I've missed you today. How've you been?*\n\n*I've been having a great time with Calara and Leena.* She glanced at the sleeping Maliri girl in his arms then grinned at him. *But not quite as much fun as you've had with Tsarra. I knew you'd really like her...*\n\n*She had a very hard start in life, but blossomed into a phenomenal woman,* he replied, clasping Alyssa's hand. *You were right to pick her, she really reminds me of you.*\n\nThe blonde's cerulean eyes seemed to sparkle at that and she leaned down to give him a tender kiss. *I spent a few hours studying her mind yesterday to make absolutely sure she was the right girl. She really is; Tsarra will be the perfect mother for your first child.* \n\nJohn was astounded by the lengths she went to in trying to make him happy. *What did I ever do to deserve you?*\n\nAlyssa rubbed the tip of her nose against his and gave him a loving smile. Her eyes drifted to the sleeping Maliri girl again. *I noticed you didn't feed her a third time... Not that Jade was complaining, she's been having a fantastic time licking Tsarra's womb clean every time you filled her up.*\n\n*I didn't want to deal with any Astral Plane nightmares tonight,* he said firmly, looking into her cerulean eyes. *We need to all get together and come up with a proper way of preparing for the next one. It's something we should tackle before we leave, but we've got a few days to get ready first.*\n\nShe nodded in agreement. *I think that's sensible. Athena's warding runes aren't stopping you from being dragged in there and you can't keep hiding in the mists and just hoping you won't be found!*\n\n*Yeah, exactly,* he agreed, looking grim. \n\nTsarra's eyes fluttered open and she glanced up at Alyssa then gave her a radiant smile. \"Thank you so much for everything! Today has been the best day of my life!\"\n\n\"I should be thanking you for making John so happy,\" the blonde replied, before leaning over to give her a gentle kiss. She placed her hand on Tsarra's toned abdomen and added, \"Do you feel ready for tonight?\"\n\nThe Maliri girl turned to look into John's eyes. \"I couldn't be more ready...\"\n\nAlyssa's hand moved to carefully cup his quad, feeling how full his balls were again. \"How about you, handsome? Ready to become a daddy?\"\n\n\"I am,\" he agreed, returning Tsarra's excited gaze without any doubts. He paused, then glanced at Alyssa in confusion. \"You and Edraele are obviously both planning something for this evening... what are you up to?\"\n\nTsarra shared a grin with Alyssa and shook her head. \"We wouldn't want to spoil the surprise!\"\n\nJohn laughed as Alyssa helped them both up. \"I think my naughty blonde Matriarch is a bad influence on you...\"\n\n\"I hope so!\" Tsarra replied, hugging the teenager.\n\nThe three of them left the observatory and headed up to the main bedroom, which was currently deserted. John led the way into the shower, adjusting the temperature to make it just right for the girls as they stripped off and joined him. They embraced and stood quietly together, savouring the feelings of intimacy as the water splashed over them. \n\nEventually, Alyssa tilted her head up for a kiss with John, which he gladly gave her. He enjoyed her soft lips moving against his, until she pulled back a little and glanced at Tsarra. The Maliri girl took over, her green eyes flashing with anticipation as they began to kiss. \n\nAlyssa moved behind Tsarra and wrapped her in a hug. \"I'm so glad there's such a strong connection between you two,\" she said quietly, kissing a slender blue shoulder. \"This is a perfect solution; everyone gets exactly what they want...\" \n\nHer hands slipped down to caress Tsarra's slim stomach, drawing an excited moan from the Maliri girl sandwiched between them. \"Tsarra gets to start rebuilding her House, while cementing an alliance with the most powerful man in the Maliri Protectorate. While John gets to help a beautiful, wonderful girl in need, and starts building the huge, loving family he's always wanted...\"\n\nJohn eased back from Tsarra's yearning lips and gave her a fond smile before glancing at Alyssa. \"And what do you get out of this, beautiful? What's in it for you?\"\n\nAlyssa's cerulean eyes flashed with feverish excitement. \"I get to see the man I love prove his virility to me and breed this sexy woman...\" She hugged Tsarra closer, massaging her lower abdomen. \"I want to watch this gorgeous girl grow big with your strong baby in her tummy; see the looks you'll share when you place your caring hand on her pregnant belly.\"\n\nShe pressed herself closer to Tsarra and whispered in her ear, \"You want that too, don't you, sexy? You weren't joking earlier... You want to be his hot little blue broodmare, growing a powerful Progenitor's baby inside you. Just the thought of it is thrilling, isn't it? Why don't you tell John how many of his children you want...\"\n\nTsarra gasped as Alyssa's practiced fingers found her clit. \"At least four!\" she managed to whimper, sagging against him.\n\n\"So greedy...\" Alyssa purred, while gazing lustily into John's eyes. \"At least by the time she's ready for the second, I'll have my own baby bump. All your girls will...\"\n\nBetween Alyssa's commentary and Tsarra's soft gasps as she writhed against him, John's cock was as hard as steel. He was so horny, he felt almost in a haze of lust as Tsarra sought out his lips for more kisses. Alyssa washed them as they kissed, then guided them out of the shower, where they parted to dry off in a rush. \n\nThe blonde held both of their hands and said quietly, \"Everyone's waiting for us...\"\n\nWhen John followed her into the bedroom, he found that the main lights were out, with only the bed bathed in soft warm illumination. Although he couldn't see the rest of the girls in the darkness, he could hear the faint sound of their excited breaths. He glanced at Tsarra to check she was alright with this. \n\nShe gave him a radiant smile in return, obviously having been informed of his Matriarchs' plans beforehand. \"I want to share everything with my new sisters,\" she explained, before walking confidently to the bed and joining Alyssa in crawling across the covers.\n\nThe blonde teenager lay on the bed and spread her legs to make room for Tsarra, who rested back against her, using Alyssa's firm breasts as a pillow. She parted her own thighs in invitation, her pussy already wet with her arousal.\n\nJohn took a deep breath to steady his nerves, then climbed onto the bed with them. He knelt between Tsarra's splayed legs and ran his hands over the velvety-smooth skin on her inner thighs. The Maliri girl arched her back at his touch and let out a quiet moan, her dark-green eyes filled with need. \n\nLetting his hands move further up her body, John caressed her toned stomach, while gazing into her eyes. \"The cum I fed you this morning brought your womb to the peak of fertility. Are you sure you're ready for this? Any last doubts?\"\n\n\"I want your baby so much!\" she gasped, her hips rocking with small involuntary movements.\n\nJohn closed his eyes and focused on her body in the compartments in his mind. She still glowed from the cum he'd pumped into her stomach earlier that afternoon and he knew that preparing her would be easy as breathing. Reaching into the Maliri girl, he nudged her fertile ovaries to respond, triggering her ovulation. Tsarra moaned as she felt the tickling twinge in her lower belly, knowing exactly what that meant and giving him a look of breathless anticipation when he opened his eyes. \n\nAlyssa nodded, looking equally as excited. \"There, she's all primed and ready to be bred...\" Her hand snaked around Tsarra to cup and massage her breasts as she whispered in her pointed ear. \"Not long, beautiful...\"\n\nSwabbing the head of his cock over that blue pussy, John made sure he was nice and ready to enter her. Pressing forward, he eased his way inside, Tsarra's body already trained to yield and stretch for him. She still let out a groan of disbelief, her supple muscles forced wide to provide a tight sheath for his huge girth. He penetrated her deeper with a series of gentle but insistent thrusts, until he'd bottomed out at her cervix.\n\nSupporting his weight on his elbows as he lay down against her, he brushed her flowing white hair away from her face and gave her a brief kiss. \"This is the last time I'll be able to enter your womb... for at least nine months.\"\n\nA fleeting look of regret flashed across her face, before she gave him a sultry smile. \"You'll have to leave me something to remember you by then...\"\n\nHe nodded and pressed forward, seeing her eyes widen as she felt the momentary pressure, before her malleable body took him all the way to her depths. Tsarra cradled him with her thighs, resting her toned calves across his buttocks, while wrapping her arms around him too. John felt the invitation in that loving embrace, knowing that she had no intention of releasing her grip until he'd filled her womb and given her what she most desired.",
        "Pulling back a few inches, John felt her athletic limbs relaxing their tight hold, allowing him freedom to move. Pressing himself home, Tsarra's thighs pulled him deep as if urging him onwards, and she gasped at the feeling of her g-spot being rubbed along his length. He felt Alyssa's hand sliding lower across Tsarra's belly to seek out her clit, those skilful fingers caressing and teasing the Maliri girl, and making her writhe in time to his thrusts. \n\nTsarra nuzzled into his neck and kissed his throat, cooing with delight as he fully impaled her glorious body. Being taller than her by several inches, John found himself face to face with Alyssa as she leaned down to kiss Tsarra's cheek.\n\n\"Hello,\" she said with a soft smile, lifting up her head for a kiss.\n\nJohn kissed her eagerly, spurred on by Tsarra's enthusiastic moans. He glanced down at the Maliri girl who was rapidly approaching her first climax, and found her staring at him intently.\n\n\"Focus on Alyssa,\" she urged him with a loving smile. \"I wanted it this way... our baby to be conceived with love, as well as lust...\"\n\n\"You see why I picked her?\" the blonde murmured, gazing into his eyes. \"So selfless and caring, she'll make such a good mother...\"\n\nDoing as the Maliri girl asked, John leaned forward to kiss Alyssa again, while stroking more forcefully inside Tsarra, just the way he knew she liked. She groaned in appreciation, nuzzling his neck again and showering him in grateful kisses.\n\n\"Now it'll be like you knocking me up twice,\" Alyssa said, with a breathy sigh, as she joined Tsarra in tangling her fingers in his hair. \"But you get two girls pregnant instead of just one...\"\n\nTsarra cried out with her release, her pussy clamping hard around John's shaft as she bucked against him. John focused on making it good for her, riding her hard through her orgasm. When her clenching release finally tapered off, he picked up the pace, working in conjunction with Alyssa to coax the Maliri girl into a second thunderous climax.\n\n\"I love that we're all multi-orgasmic,\" Alyssa purred as she cuddled the blue girl in her arms. \n\nHe smiled at her, cradling her head and lifting her for another kiss. Alyssa's eyelids fluttered closed as she moaned into his mouth, one of Tsarra's hands finding the teenager's sopping pussy. As turned on as Alyssa was, it didn't take her long to follow Tsarra into another orgasm, both girls gasping for breath, their chests heaving. \n\nJohn kept that pace up for a long time, riding Tsarra with long strokes until she had melted into an ecstatic, boneless puddle. No longer able to hold her head up to keep kissing his neck, she lolled back onto Alyssa's breasts, gazing at him with wonder in her eyes. John remembered the Maliri girl's request, but briefly tore his eyes away from Alyssa's cerulean orbs to glance down at Tsarra, while trying to suppress a troubled frown.\n\nThe blonde's corresponding smile told him that she understood his turmoil. *It's okay... she doesn't know you as well as I do. Give her what she really wants; she is going to be the mother of your first child...*\n\nAlyssa made a brief flicker with her fingers, gently lifting the lovers in a telekinetic net, so that she could roll out of the way. Tsarra glanced at her in confusion when Alyssa returned them to the bed, until John cradled the Maliri girl's head in his hands and gazed into her dark-green eyes. \n\n\"Just focus on me,\" he said softly, lengthening his strokes as he felt himself getting closer to his own release.\n\nHer gaze softened as she saw the strength of the emotion he felt for her. \"Oh, John...\" she murmured in awe.\n\n\"Would you like a girl or a boy?\" he asked gently, losing himself in her adoring eyes.\n\nAs Tsarra whispered the answer in his ear, he felt movement on the bed behind him, and soon there were two velvety tongues gently lapping his quad. His mind was flooded with loving thoughts from his two doting Matriarchs, both of them eager to see him fill the beautiful girl beneath him. \n\nJohn thrust up to the hilt inside Tsarra as he came, seeing stars as he filled her with his potent sperm. It was a long, gloriously fulfilling climax, and knowing that the girl joining him in her release would soon be carrying his baby, made it satisfying in a way he hadn't known before. He could imagine her blue tummy growing round as the months progressed, that thought make his quad clench in response, desperate to pack her fertile womb with every ounce of cum he possessed.\n\nWhen his climax was done, he eased out of her trembling body and tried to roll away, worried about squashing the Maliri girl under his weight. Tsarra embraced him instead, pulling him down to rest his head on her heaving chest. As they lay there panting, getting their breath back, he could feel her curved tummy underneath him, her skin warm and soft against his. \n\n\"Thank you,\" Tsarra whispered, her fingers stroking his head.\n\nJohn raised himself up and smiled at her, feeling a surge of protectiveness for the lovely young Maliri woman. \"Roll over, let me hold you,\" he said, doing exactly that when she followed his request. Holding her possessively in his arms, he whispered in her ear, \"You'll never feel like you're on your own again. I'll always be there to keep you safe, all of us will...\"\n\nShe let out a blissfully happy sigh and placed her hand atop his on her rounded tummy. \"I'll always be connected to you now,\" she murmured, interlacing her fingers with his.\n\n\"Mine forever,\" he agreed, marvelling at the thought of the new life growing inside her.\n\nAfter giving them some time to revel in the afterglow, his two matriarchs joined them, Alyssa wasting no time congratulating them and hugging Tsarra. Edraele was more hesitant, waiting patiently for her turn with a look of wonder in her purple eyes. They were soon followed by the rest of the girls, who all wanted to touch Tsarra's cum-filled belly, the room soon echoing with excited chatter.\n\n\"I wished it was me so bad!\" Dana exclaimed, leaning down to kiss that rounded tummy. \"You're so lucky!\"\n\nTsarra darted a glance at John and grinned at her sisters. \"I really am!\"\n\nJohn grinned back, moving aside to let her enjoy the moment, as she was surrounded and fussed over by the gaggle of girls. \n\nAlyssa put her arms around him from behind and rested her chin on his shoulder. *You wouldn't believe how happy she is, baby daddy,* she told him, her joyful thoughts floating through his mind like fluffy clouds.\n\nJohn turned to look at the blonde out of the corner of his eye. *Are you sure you've got no regrets?*\n\nShe placed a tender kiss on his cheek. *If I had my way, I'd already be six months pregnant. This was good though; like I said, a perfect solution for everyone. I'll just have to be patient, but you and me will have our time together...* Her telepathic voice dropped a few octaves as she continued, *Just imagine how good that's going to be... I'm going to blow... your... mind...*\n\nJohn didn't doubt it for a moment and he turned to give her a proper kiss, feeling closer to Alyssa than he ever had done before.\n\n***\n\nGalen Skotari stirred awake, startled to find himself in an unfamiliar room. He glanced around for a moment to get his bearings and as the fog of sleep lifted from his mind, he recognised the suite on Port Medea. Turning to his left, he saw a sweep of blonde hair across the pillow and grinned when he remembered the previous evening with Camilla. \n\nGlancing at the clock on the wall, he realised it was only two in the morning, so he turned to burrow under the covers again. As he did so, he spotted the bright flare of a cruiser's engines through the long window to his right, the suite offering an impressive view of the fleet. He and Camilla had been far too preoccupied to close the blinds earlier that evening, so he now had a clear view of one set of massive starship engines lighting up after another. To his surprise, it looked like almost the entire fleet was heading out on manoeuvres!\n\nBeing careful not to disturb his sleeping lover, he padded over to the window and gazed out at the Terran Federation warships. He watched as three colossal battleships formed the vanguard of the formation, with a dozen cruisers creating a protective line in front of them, a dozen more falling in to the flanks. Destroyers and corvettes moved into position between those huge vessels, adopting a standard flak-screen formation to support the larger ships.\n\nAssembling behind that formidable wall of firepower were the carrier groups, made up of clusters of light and medium carriers. Maddox's much larger heavy carrier, the Medusa, took pride of place in the centre, the intimidating size of that vast warship making it stand out to even the casual observer.\n\nA hand on his shoulder made Galen jump out of his skin and he turned to see Camilla's worried face. \"Did we miss a call to rally with the fleet?\" \n\nHe glanced at his wrist comm on the bedside table and saw by the green lights that it was still active. \"My alarm would've gone off if it was urgent,\" he replied, darting around the bed to grab the device. \n\nPressing a button, a holographic display appeared, listing all his recent messages. He immediately spotted one from Maddox, tensing as he shot Camilla an anxious look. She hurried to retrieve her own wrist comm as he opened the message, but Galen relaxed a moment later and laughed with relief. \n\n\"Those poor bastards! Maddox must have got them out on some kind of drill. I've been ordered to hold position at Port Medea,\" he read out, then smiled at his lover. \"If it was anything serious, we'd have been ordered to battle stations.\"\n\nCamilla was reading through her own messages, but she still had a worried frown on her face.\n\n\"What's up?\" he asked, walking around the bed to join her. \"You weren't supposed to be out there were you?\"\n\nShe quickly shook her head. \"No, I've been ordered to hold position in Iota Leonis the same as you, but I also got a message from Captain Pillay on the Plutus. He just told me that Maddox gathered up all the ships who didn't have many crew on leave and they're investigating a small force of Kintark ships approaching the border...\"\n\nThat wiped the smile off Galen's face and he shared a worried look with her. \"Do you reckon the Kintark are planning something?\" he asked in a hushed voice. \"After what happened with the lizards switching their transponder codes, I've got a bad feeling about this...\"\n\n\"I honestly don't know, but I think I better contact my friend and let him know what you discovered...\" she replied, striding over to the neat pile of clothes she'd left on the chair.\n\nIt took Galen a while to find his left shoe, but he eventually discovered it under the bed. Tugging it on, he jogged over to Camilla, who waited for him by the door. \"I'm sorry we had to end the night like this, CT.\"\n\n\"You've got nothing to apologise for,\" the blonde replied, standing on tiptoe to give him a passionate kiss.\n\nThey shared a smile, then headed out of the suite into the residential district. Port Medea was quieter at this late hour, with small groups of intoxicated revellers returning from the late-night clubs. The two captains gave them a wide berth, not wanting to get involved with any drunken altercations on their way back to the shuttle bay.\n\nGalen darted an inquisitive glance at the blonde walking purposefully at his side. \"You never did mention who your friend was, CT...\"\n\n\"No, I suppose I didn't...\" she replied, giving him an infuriatingly mysterious smile. \n\nShe went quiet as they passed a trio of merry engineers, who toasted them unsteadily with their bottles of beer. Camilla quickened her pace, so Galen walked faster to keep up with her as they left the residential area and approached the lifts to the docking bays.\n\nCamilla hit the button to call a lift, then glanced around to make sure there was no one in earshot. \"Nearly ten years ago, back when I was a Lieutenant fresh out of the Academy, I was assigned to the Alastor, under Captain Meares. Colin's a good man who took me under his wing and helped mentor me for command...\" She smiled wistfully for a moment, then continued, \"Anyway, he's a Rear Admiral now and we still keep in touch. Colin knows what Maddox is like, so I don't think he'll get upset about me circumventing the chain of command.\"\n\nThe elevator chimed, so they both stepped inside, with Galen hitting the button for Deck Twenty-Seven. He nodded thoughtfully and said, \"A Rear Admiral should be ideal; he'll know just who to get this information to. I'll grab the data crystal from my ship then take a shuttle to the Hesperus.\"\n\nShe shook her head. \"Just transmit it to me on a Secure channel, I'll be broadcasting it to Meares the same way... Unless you're worried about Maddox tracing it back to you?\"\n\nGalen lifted his chin stubbornly. \"Maddox should have escalated this immediately. If he didn't, then that's his problem, not mine!\"\n\nThe lift chimed again and the door opened, the sounds from the dock machinery and raised voices reaching their ears, the docking bays busy even in the middle of the night. They strode out into the corridor, following the noise, and nodded to the two marines on guard duty outside the first docking bay, who then saluted the returning captains. Passing them and entering the vast hangar, there were rows of shuttles in here, used to ferry crews back to their vessels.\n\n\"Give me five minutes, I'll call you straight away!\" Galen promised, patting the blonde on the arm.\n\nShe nodded. \"I'll be waiting!\"\n\nThey broke into a run towards the closest shuttles, the pilots who were chatting outside the small grey vessels turning to stare at the sprinting captains in surprise.\n\n***\n\nJohn sat down behind his desk and activated the console. The holographic interface sprang into existence before him and he scrolled through the list of contacts, searching for the connection details for Senior Councillor Ularean. He was just about to call the leader of the Ashanath High Council to let him know about the change of plans, but he hesitated, his finger hovering over the name. If he made that call, it would be routed out of the Maliri Protectorate, then connected through a long chain of Terran Federation comms beacons until it reached Ashana. There were lots of sensitive topics he didn't want the Terran Federation Admiralty to know about yet, many of which Ularean might inadvertently raise. \n\n*Ladies, could you come up to my Ready Room please?* John asked his two matriarchs. *We need to figure out a secure way of keeping the Ashanath up to date.*\n\n*I'm on my way!* Alyssa replied a moment later. \n\n*Of course, my love, I'll be right there...* Edraele murmured, sounding very distracted.\n\nJohn was surprised by her curious tone, then shrugged, figuring Edraele was probably trying to contend with the background cacophony from the Young Matriarchs. A few minutes earlier, he'd left all the girls chattering away with Tsarra, but the five Maliri girls were the most excited he'd ever seen them. He rose from his chair and walked over to the sofas, then waited patiently for Alyssa and Edraele to arrive.\n\nThey took longer than he expected and he had just started to get up to find out what was keeping them, when the door opened and they walked through. Both women were wearing reasonably modest silk dressing gowns, but Alyssa was supporting Edraele, who had a dazed smile on her flushed face. \n\nSpringing to his feet he rushed over to join them. \"What happened, Edraele? Are you alright?\"\n\n\"I feel super!\" she replied, beaming at him in delight.\n\nJohn scooped the Maliri up in his arms and looked to Alyssa for an explanation.\n\nThe blonde smirked and said, \"I don't think it's anything to worry about. She's just not used to dealing with this much psychic energy all at once. She's a bit drunk on power, but in a good way.\"\n\nEdraele shook her head and raised a slender blue finger, then traced a glowing purple heart in the air. Letting out an exaggerated sigh, she gazed up at John. \"I'm drunk on love!\"\n\nAlyssa glided over to the sofas and sat down, then patted the seat next to her. \"You better bring the love-drunk over here; I'm sure it'll wear off pretty soon, once she's got used to all that extra energy.\"\n\nThe Maliri Matriarch giggled and closed her eyes, snuggling into John's chest as he walked around to sit next to Alyssa.\n\n\"I thought she was a bit quiet earlier,\" John said with concern, studying the serene expression on Edraele's face. Looking at Alyssa in confusion, he added, \"You never reacted this way before.\"\n\nAlyssa smiled at him affectionately. \"You've spent months nurturing the girls on our crew, gradually deepening and strengthening their connections as they grew closer to you. It's still been a bit of a shock when they've ramped up in power, but I've had lots of time to get used to it.\" She leaned closer to stroke Edraele's long white hair and continued, \"Edraele has over a thousand Maliri linked to her, but they only spent a few minutes chatting to you, then basically downed a shot-glass of your cum. The psychic energy from my girls and hers aren't even in the same ballpark, at least not yet anyway.\"\n\n\"What about the Young Matriarchs and Edraele's bodyguards?\" John countered, a bemused expression on his face. \"I've spent quite a bit of time getting to know those girls.\"\n\nThe blonde nodded, conceding that was true. \"Yep, but they only gave you a handful of blowjobs on Genthalas. You fucked Almari and Ilyana for the first time yesterday, and the effect that had on those girls left Edraele buzzing. Now imagine the kind of difference you made after your love-in with Tsarra today... You massively boosted her self-esteem, then made her pregnant and told her you'd take care of her forever.\" She gave him a loving smile as she added, \"When she saw you'd already started falling for her, well... you can imagine what an ecstatically happy girl she is right now.\"\n\nEdraele tilted her head back to look at Alyssa upside down, a radiant smile on her face. \"It was like the delicious icing on a wonderfully tasty eldritch cake!\"\n\nAlyssa laughed and nodded. \"Yes, exactly!\" She kissed Edraele on the forehead, then glanced up at John. \"I could feel the massive energy surge through her network over our bond... didn't you feel it too?\"\n\nJohn shook his head as he carefully tilted Edraele upright again, the Maliri giving him a blissful smile in return. \"No, I didn't feel a thing.\"\n\nThe blonde shrugged. \"Well, the plan's working great! Keep humping those sexy blue babes and making them feel like a million credits; you'll never have energy problems again!\"\n\nHe frowned at her and said, \"You know that's not why I'm doing this.\"\n\nAlyssa's expression turned serious and she nodded. \"I know... but more importantly, those girls know that too. The Young Matriarchs can feel how sincere you are and how much you genuinely care for them. You know how shitty their lives were growing up in Maliri society, so I'm sure you realise just how much that means to those girls...\"\n\nJohn let out a heavy sigh as he looked down at Edraele, who had closed her eyes and was resting her head against his chest once again. \"I can't believe how much they've all been through. It's so depressing to think that there's millions of Maliri who've suffered through the same kind of thing.\"\n\n\"But you're already changing all that,\" Alyssa said softly, brushing her fingers through his hair. \"I overheard your conversation with Edraele earlier. Between Edraele and the Young Matriarchs, they control nearly two-thirds of the Protectorate; whatever you decide to do regarding the rest of the matriarchs, you've already made a massive difference to the Maliri.\"\n\n\"I keep forgetting Edraele and her girls control all the most powerful Houses.\" John leaned down to kiss the Maliri Matriarch on top of her head, her soft white hair tickling his nose. Giving Alyssa his full focus again, he continued, \"How are your girls doing after this evening?\"",
        "\"All of them are thrilled for Tsarra and loved watching you both together.\" She frowned and gave him a look filled with concern. \"But you need to make sure you get lots of rest before we leave the Maliri. You made the girls very broody... when they finally get their hands on you again, you're going to be in for a wild night!\"\n\nHe laughed, feeling greatly relieved. \"I'll bear that in mind, thanks.\" \n\nThe blonde grinned at him, then leaned against his shoulder. \"So why did you change your mind about contacting Ularean?\"\n\nJohn held Edraele closer as he shifted position slightly to make her more comfortable. \"He knows how much influence I have with the Protectorate and that I'd arranged for a Maliri fleet to guard the Ashanath Collective. Just imagine how easily he might let something slip about any of that...\"\n\n\"Yeah, that wouldn't be good,\" Alyssa agreed. \"After Regulus, Terran High Command already know you're pals with the Maliri, but they'd freak out if they found out the full story.\"\n\nHe nodded, looking grim. \"Exactly. So I was thinking perhaps Irillith might be able to create some kind of unbreakable encryption? I was also planning on asking Edraele how the Maliri previously communicated with the Ashanath, but it looks like we'll have to wait until she snaps out of this state.\"\n\n\"Through their ambassadors...\" Edraele murmured, before snorting with laughter. \"Funny little grey men... I always wondered how they had an answer straight away.\" She winked at John and tapped her temple. \"But now we know!\" \n\nAlyssa looked at her in confusion for a second then her eyes widened. \"The Ashanath Command network!\"\n\n\"Got it in one!\" Edraele exclaimed with a giddy smile. \"They never needed the Terran comms beacons.\"\n\nJohn gaped at her in surprise. \"It can't be as simple as that, surely!\"\n\n\"Why not?\" Alyssa gasped, her eyes sparkling with excitement. \"Edraele told us before: there's no limit on range for telepathy... I'm sure the same must apply to Spirit Walking on the Astral Plane. I can probably just step into their sub-plane, like I did at Ashana!\" \n\n\"But what about the Astral monsters?\" John asked, his eyebrows climbing in alarm. \"I can't let you risk exposing yourself to danger like that!\"\n\nThe blonde hesitated for a moment, then slowly shook her head. \"I don't think it'll be like last time. You went deep into the Astral plane to create that breach and the monster only attacked after that. The Ashanath's sub-plane is right on the surface; Athena agrees... it's not the same thing.\"\n\nJohn was quiet for a moment, then he gave a decisive nod. \"It's worth giving it a try, but not tonight. We'll get geared up tomorrow after everyone's well-rested. If something attacks us then, it'll wish it hadn't.\"\n\nAlyssa cracked her knuckles, her eyes glowing white with a blazing intensity. \"I really hope it does. Payback will be a really angry bitch...\" \n\n***\n\nCaptain Galen Skotari paced nervously in his Ready Room, waiting for a reply. He'd transmitted the transponder code data over to the blonde captain of the Hesperus, but it had been ten minutes and Camilla still hadn't got back to him.\n\nAs he turned back to face the window again, he paused and studied the Terran forces still stationed in the Iota Leonis system. Aside from the CAP fighter wings based on Port Medea and the newly-built Beam Laser turret network that surrounded the station, there weren't many ships left in attendance. The remaining ships included his and Captain Fowler's cruisers, Captain Tovaskaya's light carrier, and a partial squadron of three destroyers. They were pretty meagre defences compared to the huge fleet that had been assembled there only an hour earlier.\n\nThe chime from the comms interface made him jump and he dived behind his desk to answer the incoming call. He grinned when he saw the message was from the Hesperus and swiped across the interface to accept it.\n\n\"What did Meares say?\" Galen asked in a rush.\n\nCamilla shook her head, her pretty face filled with worry. \"I tried contacting him, but couldn't get through!\"\n\nGalen paused for a moment, then gave her a resigned shrug. \"Okay, I guess that can't be helped. We'll just have to try him again later; do you have any idea when he'll be back?\"\n\n\"No, you don't understand! There's must be some kind of breakdown in the comms beacons... I couldn't reach anybody!\"\n\n\"There haven't been any warnings about maintenance or repairs... but they'd never cut off the whole network anyway!\" His expression reflected his sudden alarm. \"It must be the lizards!\"\n\nThe blonde captain nibbled nervously at her lower lip, then slowly shook her head. \"It can't be the Kintark... There's no way they could get that deep into Terran Space, the Dragon March sensor grids would have picked them up.\"\n\nGalen thought about it for a moment, then was forced to reluctantly agree. With all the sensor probes scattered along the border, it would be impossible for the Kintark to sneak any ships past the defensive forces in the Dragon March. Any intruders would have been detected and intercepted before they'd flown more than a couple of hours into Terran Federation territory.\n\nSagging in his chair with an anxious frown, he muttered, \"So what now? We sit here with our thumbs up our butts and just hope the comms beacons get repaired?\"\n\nCamilla raised her hands in helpless frustration. \"I don't think we have any choice, Galen. Normally I'd suggest we investigate the chain of beacons to find out what the problem is, but we've been ordered to hold position in Iota Leonis. We can't leave Port Medea undefended.\"\n\n\"Fucking Maddox!\" Galen snapped, clenching his fist in anger.\n\nThe blonde nodded, then said quietly, \"I'm going to cancel my crew's leave and have them return to the ship. I suggest you do the same, Captain Skotari.\"\n\nHe sat up straighter at her firm tone, then glanced out the window at Captain Fowler's cruiser, the Thanatos. \"We better warn Andrew as well...\"\n\n\"Let me do that,\" Camilla offered, giving him a wry look. \"I think I know where he'll be.\"\n\n\"Thanks, Cam.\" Galen nodded to her in gratitude. \"Let me know if you hear anything else.\"\n\n\"Likewise,\" the blonde replied, before giving him a reassuring smile. \"It'll be okay, Galen. It's probably all just a coincidence and we're just being paranoid.\"\n\nWhen he gazed into her eyes, he could see that her words sounded as hollow to her as they did to him. They shared a worried look, then closed the call.\n\nGalen grimaced as he got ready to recall his crew. Lumbering them with back-to-back patrols, then cancelling all leave after less than a day; he strongly suspected he was going to be the most hated captain in the entire Terran Federation...\n\n***\n\nJohn awoke from his restful sleep, then carefully stretched, trying not to disturb the two Maliri women flanking him. Putting his arms around them again, Tsarra snuggled closer, a contented smile on her beautiful face. He was suddenly overwhelmed with feelings of protectiveness, remembering that this lovely girl was carrying his growing baby inside her. One of his big Progenitor sperm had penetrated her delicate Maliri egg, starting that miraculous nine-month process that would see her give them their first child. \n\nAs he stared at the sleeping girl in awe, he felt his second bedmate stirring beside him. Turning to Edraele, he studied her with concern. *I'm really sorry I woke you... busy thoughts again. How are you feeling this morning?*\n\nEdraele blushed furiously, turning dark blue and burying her face in his shoulder. *I can't believe the way I behaved yesterday! I feel so embarrassed!*\n\n*You've got nothing to be embarrassed about,* John said, stroking her back as he grinned at her, glad to see she was fully recovered. *You were a happy love-drunk.*\n\nThe Maliri Matriarch slowly lifted her face to make eye-contact again. *I don't know how Alyssa does it... having that much power at her fingertips, it was intoxicating!* Her purple eyes widened as she took in the other Young Matriarchs sleeping in the bed. *And there's still four more girls to go!*\n\n*I spoke to Alyssa about it last night. She thinks it was just the shock of getting exposed to that much extra psychic energy at once,* he said, giving her a reassuring smile. *I don't think you'll have any problems coping.*\n\nHe could see the trust in her enchanting eyes as Edraele nodded and relaxed. After a moment's hesitation, she glanced at their beautiful bedmates and smiled with anticipation.\n\n*Don't wake them just yet,* John said quickly, interrupting her before she could give the girls a wake-up call. *I need to tell you about the plans I've made with Alyssa...*\n\nEdraele listened intently as he outlined the planned excursion into the Astral Plane, but her face fell when he insisted that she move to the Andresil Enkana with the rest of her girls. \n\n*But I might be able to help you!* she objected strenuously. *I'm a powerful psychic in my own right!*\n\n*That's true, but that's why I need you watching over the Young Matriarchs to keep them safe. If anything happens to us, you are to return to Genthalas and protect your girls,* he said, giving her a stern look. *Is that understood?*\n\nShe seemed like she would object again, then glanced at Tsarra and her expression shifted to one of gentle understanding. *I'll do as you ask, John.*\n\nHe leaned down to give her a grateful kiss. *Thank you.*\n\nHer eyes flicked to the right and there were a series of yawns as she nudged the Young Matriarchs awake with a telepathic caress.\n\n\"Good morning,\" Tsarra said, giving John a bright smile.\n\nAs Edraele pulled away, John unhooked his arm and rolled Tsarra onto her back. \"Good morning, beautiful. I hope you slept well?\" \n\nShe bit her lower lip, then replied, \"I slept like a baby...\"\n\nAfter they'd shared a kiss, he leaned down to place a second one on her slim tummy and whispered, \"Good morning to you, too...\" When he glanced up at the Maliri girl, she was gazing down at him lovingly. \n\nTsarra beckoned him up for a hug, letting out a happy sigh when he put his strong arms around her. \"I could stay like this forever...\" she said, giving him a quick kiss, before darting an affectionate smile at the Maliri on her left. \"But I need to share with my lovely adoptive sisters.\"\n\nTsarra joined Edraele, Luna, and three of the remaining four Young Matriarchs as they headed to the shower, which left Leena Ghilwen sitting on the bed with him. The covers were gathered around her lap, leaving her entirely nude from the waist up. Rather than being shy as he might have expected, she sat there confidently, giving him an unrestricted view of her spectacular azure physique. He took a moment to admire her slender, graceful blue body, lingering on her mouth-watering feminine curves. When he looked up at Leena's gorgeous face, her light-green eyes crinkled with pleasure to see the open appreciation in his curious gaze.\n\n\"Hello, Leena,\" John said, grinning self-consciously at the Maliri girl.\n\nShe moved slowly towards him with a bold sensuality, which was as surprising as it was enticing. \"Hello, John,\" she replied, her sultry smile not fading for a moment.\n\n\"You seem different,\" he said, letting the admiration fill his voice.\n\nShe swung a lithe leg over his thighs, covering his body with hers. \"Calara's a wonderful girl. I've been paying very close attention to everything she told me,\" she murmured, letting her long white hair brush over his chest.\n\n\"Oh, really? And what was that exactly?\" he asked, gazing up into her eyes and placing his hands on the soft curve of her hips.\n\n\"That you're as attracted to the Maliri as we are to you,\" she replied softly, brushing his cheek with a feathery soft kiss. \"I thought that almost impossible to believe at first, but seeing the way you looked at me just now... I find myself daring to believe it's true.\"\n\n\"I do think you're an exceptionally beautiful girl,\" John agreed, his voice catching as she grazed his chest with her erect nipples. \"But there's so much more to you than just stunning physical perfection... over the weeks we spent together on Genthalas, I got to see what a kind, thoughtful-\"\n\nShe silenced him with a kiss, pressing herself down on his chest, so that her full breasts swelled against him. Pulling back a couple of inches, she gazed down at him and said, \"You've complimented me before, but I'm worried you'll think I'm a narcissist when you realise how much I love hearing your lovely words. Would you like to hear what I think about you instead?\"\n\nCaught by surprise again, John hesitated, then slowly nodded. \n\nLeena took a deep breath, then spoke in a quiet voice filled with sympathy, \"I see a man in constant struggle with his heritage. Someone who strives with all his might not to follow the same dark path that his forefathers did before him. It's as if you're trying to atone for some dreadful crime that you never committed; carrying a heavy weight of guilt that was never your burden to begin with. It seems like the enemy that scares you the most is your very own nature.\"\n\nJohn felt goosebumps ripple over his skin as he listened to her words, astonished at her perceptiveness.\n\n\"You're a man so appalled by the way your kin treat their women, that you worship the girls in your life like goddesses, terrified of even the slightest hint that you might succumb to the ways of a Progenitor. You lavish us with love and kindness, leaving us floating like blissful clouds in an endless sky of your heartfelt affection.\"\n\nJohn was stunned by how deeply she seemed to know him. \"That's quite the gift you have, Leena...\"\n\n\"When we first met, I was just as overwhelmed by you as my Maliri sisters,\" she readily admitted, a wistful smile on her lips. \"But once you filled my tummy with your cum, it got easier to simply watch you without constantly wanting to throw myself into your arms. I studied you whenever I could, listened to everything your girls or Edraele said about you, just trying to get an insight into who John Blake really was.\"\n\n\"You saw a lot,\" he admitted, gently stroking her back. \"Even more than the other girls have.\"\n\n\"To be in your presence every day must be overwhelming,\" Leena said, studying his face intently. \n\n\"And what did you think, when you saw me struggling with my inner demons?\" John asked, losing himself in her light green eyes, the colour reminding him of a fern dappled in sunlight.\n\n\"I felt admiration... and sympathy,\" she said gently. \"I know that whatever I say now won't change the way you feel about yourself, or your species. I only want to tell you that being born the way you are wasn't your fault. You've risen far above those dreadful temptations, to become a man truly worthy of respect and love.\"\n\n\"Are you sure?\" John asked, doubt heavy in his chest. \"It would only take losing to my guide to ruin everything I've fought so hard to accomplish.\"\n\n\"Then we have to make sure that never happens,\" she said softly, moving closer again, her breath tickling his lips. \"I need the kind, loving man I see before me. I want to be there to support him and help him stay strong, so he can defeat anyone that threatens our family.\"\n\nLeena kissed him then, moaning into his mouth as the tip of her tongue sought out his. John held her in a firmer grip and shifted his weight to roll her onto her back.\n\nShe pulled back and shook her head. \"No, not like that. Let me do the work, I want to reward you for everything you do for us.\" The Maliri girl shifted her hips to align him with her, then bit her lower lip as she wriggled down his shaft, her eyelids fluttering as he inched inside her. \"I've wanted this for so long...\"\n\nJohn placed his hands on her hips and helped her slide down his cock. Working together, he was soon hilted inside her and Leena trembled, relishing the sensation of being so thoroughly filled for the first time. She sat up then, resting her soft slender hands on his chest as she began to ride him, gazing down at his face with an intense, serious expression on her face.\n\nThe sensuous rolling of her hips immediately reminded him of Calara and Leena nodded when she saw the spark of recognition in his eyes. \"She's such a lovely girl,\" she whispered. \"So generous and caring...\"\n\nIt was obvious how aroused Leena was, but she held her orgasm at bay, concentrating intently on John instead. This wasn't how he'd planned her first time to be, but it seemed she delighted on confounding his expectations at every turn. He could see the glint of satisfaction in her eyes when he relaxed, letting her control the pace and tempo as she coaxed him towards his release. It felt liberating not having to lead the coupling for once and he made no attempt to suppress his orgasm when he felt his quad tensing in readiness. Leena's eyes flared as she felt that first jet of cum in her womb and she threw her head back with a wordless cry of ecstasy as she joined him in his climax.\n\nWhen they were both spent, John spooned up behind her and wrapped her in his arms. \"Well aren't you full of surprises,\" he said with a smile, kissing her azure shoulder.\n\nShe glanced down at his hand resting on her swollen belly and raised an eyebrow. \"Actually, I think I'm full of your cum...\"\n\nHe laughed and nodded. \"You might be right.\"\n\nLeena smiled with satisfaction to see him looking so happy. \"I wanted our time together to be a bit different for you. It's hard for me to stand out in such an overwhelmingly beautiful crowd.\"\n\n\"Mission accomplished,\" he said, leaning down to kiss her. He frowned then and continued, \"But this isn't about me, today is meant to be about you. Think of this as Leena's day, where I try to give you everything you want.\"\n\nShe interlaced her fingers with his and gently squeezed them. \"Trust me, I'm getting exactly what I want.\"\n\nThey cuddled for a while, enjoying the intimate embrace, until John heard someone padding quietly into the room. When he glanced down the bed, he saw his nude Nymph prowling across the covers to join them.\n\n\"Hello, Jade,\" Leena said, greeting her with a smile as she rolled over onto her back and parted her thighs for the green girl. When she saw John's startled expression, she explained, \"Edraele told me what you're planning later this morning. Jade's going to get your girls ready for combat...\"\n\n***\n\nCaptain Andrew Fowler's weary holographic face frowned at Galen from the centre of the Antaeus' Bridge. \"Well, it's been six hours, Captain Skotari,\" he said, rubbing his tired eyes. \"I don't see any rampaging Kintark hordes... Maybe they decided not to get up at the butt-crack of dawn after all? Perhaps they have nicer friends who let them stay in bed?\"\n\nThere were disgruntled mutterings around the Bridge and Galen could feel the irritated glances his crew were giving him. \n\nGalen sat up straight and said obstinately, \"There's still been no word from Maddox or any of his fleet. I'm telling you, the lizards are planning something!\"\n\nCaptain Tovaskaya nodded, her face tense with worry. \"I haven't been able to route a call all morning. The Dragon March is under a total comms blackout...\"\n\nFowler sighed and shook his head. \"We've been over that already. Granted, losing comms is worrying, but there's no way the Kintark could get behind us...\" \n\nGalen hesitated for a moment, then said, \"Let me call you back on a private channel.\"\n\nThe two captains both nodded and their holographic faces disappeared a second later. Galen glanced at his XO and said, \"Commander Hoplander, you have the Bridge.\"\n\n\"Yes, Sir,\" she replied, trying her best to conceal her irritation with her young captain.\n\nIgnoring the disapproving looks from his crew, Galen strode into his Ready Room, and called his two friends back. He could see behind their holographic faces that they had both retired to their Ready Rooms so that they could speak freely."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "swallow",
        "cum inflation",
        "impregnation",
        "alien11111",
        "psychic",
        "maliri"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-95"
}