{
    "title": "Love, True Love",
    "pages": [
        "I would like to thank Erik Thread, and techsan for their help in editing. I apologize for the mistakes I've made since they last saw it. \n\n* \n\nAs the handsome young couple walked hand-in-hand down the hallway, an old woman called out, \"Oh, what pretty flowers. Who are they for? If you're not in a hurry could you stop for a minute and visit with me? I never have any visitors. Who are you here to see? Would they mind? What brings you here?\"\n\nThe couple stepped into the tastefully decorated room with a stunning view of the university campus. The young woman looked around the room noting Waterford crystal, oil paintings and other personal treasures then said, \"Mike just asked me to marry him and we came here to tell a very special person.\"\n\n\"I don't want to keep you long--it's just that this is such a lonely place, all these old people, and so many don't have all their memories, you know. I remember when I got engaged. Could I tell you about it?\"\n\n\"Certainly, I would love to hear your story.\"\n\nThe old woman paused, and then her whole body relaxed. \"I think it... I think it is time that I finally told someone the whole story.\"\n\nThe years seemed to recede as she began. \"I remember it all like it was yesterday. I was quite a catch, a real hot number, if I do say so myself. To start at the beginning, I was a sophomore in college, a cheerleader, and the star quarterback, a junior, had taken me on a few dates.\" \n\nHer demeanor changed slightly. She leaned toward the young woman as if she were talking to her oldest confidant. \"This is the part I've never told anyone. At the time I thought it was 'True Love.' Now I think it was more a case of one set of hormones calling to another. I was living the dream; we were the cat's meow.\"\n\n\"On that Friday night, he took me to a movie. I don't remember what it was, but afterwards we went to fancy restaurant. I felt like I was out with a movie star, what with people coming to our table and asking for autographs and all. The management was so impressed we had our gourmet dinner for free. We even got a bottle of Port wine. Port is 20% alcohol you know,\" she said as she arched an eyebrow.\n\n\"After the meal he drove us, in the brand new convertible an alumnus had given him, to a dark and secluded place overlooking the lake. There was a full harvest moon and we could see a sailboat leaving a gentle wake. I do believe it was the most romantic view I've ever seen.\"\n\nHer voice dropped, her face showed a hint of blush. \"We started petting, and I was tipsy from all that Port. We went further than I'd ever been before. Third base. You know what that means. He was pushing for more but I told him that I would never, not until I was married.\" \n\n\"He took off his fraternity pin and said, 'This will have to do until we can get a ring but I can't actually give it to you until the formal pinning ceremony.\"\n\n\"At my school, getting pinned was 'engaged to be engaged.' The whole fraternity would come over to the girl's sorority house dressed in tuxes and serenade the girl, with all her sisters around her on the porch. The brother doing the pinning would be dressed in white tie and tails. The girls all wore formals, and the girl being pinned would wear a new white one, almost like a wedding dress. The brothers would practice the songs for weeks. If it was a good fraternity and sorority, people would come from all over campus just to watch,\" she said wistfully, her eyes shining at the memory.\n\nThe old woman's face changed; it became set, almost hard. She sighed and continued in a soft voice full of regret. \"I was so excited about getting pinned that at first I didn't fight as hard as I should have. I kept saying no. I even slapped his face Then I tried to scratch him but he was too strong and he took me right there in the front seat of his car. It was horrible. I bled like crazy and he hurt me so badly I could barely walk when he took me home.\n\n\"I cried most of the night. I tried to make excuses for him that I'd led him on, that I'd gotten him too excited to stop. I felt cheap. The only thing I wasn't worried about was my reputation since we were practically engaged.\n\n\"I waited all day Saturday for him to call me but he didn't. I tried to tell myself that it was because he had to get ready for the game. Besides we couldn't go out that night because the team was staying at a hotel to review the game.\" \n\n\" I was devastated when he didn't acknowledge me when he came out on the field. I tried to tell myself that he was just completely focused on the game but I thought I was going to die when he didn't even offer me a ride back to my sorority house after the game.\" \n\nHer lips compressed and a touch of indignation crept into her tone. \"Then, just before phone curfew, one of his teammates called and asked me for a date. I started to give him a piece of my mind when he told me that my boyfriend was bragging about copping my cherry and said 'I was in play now.' He just wanted to be first in line.\n\n\"Well you can just imagine how I felt? I even thought about suicide. I was trying to figure out where I could get some sleeping pills when I was told I had a visitor. Now you have to understand that phone curfew was after regular curfew and having a visitor at that time of night was unheard of. When I got down there, I discovered it was the new student coach. He was a player on last year's team and decided he wanted to learn to be a college coach. At first I was worried that it might be another... you know... but the housemother was standing right next to him and I know she would never let in someone trying to take advantage of me after curfew. \n\n\"The housemother led us to the dining room and then stood guard so we could talk privately. That was unheard of, too. Well, right off the bat he said that the quarterback had bet the whole offensive line a keg that he would have me before the first game. He made them pay off and the drunken story was spread to the whole team. \n\n\"If I hadn't been so mad, I think I would have died on the spot. \n\n\"That's when this young coach told me he'd taken the quarterback out back of the hotel and 'reasoned' with him until he agreed to tell the whole team that he'd used some chicken blood on his car seat so he wouldn't have to buy the beer. \n\n\"The coach called the whole team together and told them he and I were friends. He said I'd told him I'd been trying to find a good way to break up with the quarterback since I got back to school.\n\n\"He said he made sure that everyone thought the whole sordid episode was just an attempt to get even. He promised me that I didn't have to worry, my reputation was intact. \n\n\"Then he gave me a funny look and said that the best way to put the rumors behind me might be to find a new date right away. It would make the cover story more believable.\n\n\"I was so upset that I just blurted out the whole story. He got very angry and muttered 'breaking that jerk's nose isn't near enough.' Somehow, I ended up in his arms and I just cried my heart out. When I was rational, he said it sounded like rape to him and tried to get me to go to the police and press charges. \n\n\"Well, you know as well as I do that back then, that just wasn't done! I've never been sure why I did what I did next. I guess I just felt so safe in his arms that I stood on tippy toes and kissed him on the cheek.\" \n\nShe paused, took a sip of water, gave a sly smile and with a wink continued. \"The next day after church he brought me flowers we walked and talked. He was a perfect gentleman, and so funny I laughed until I swear I was afraid I was going to wet my pants. For the next two weeks we would talk every day for hours and hours. He was so interested in my ideas, so encouraging, and always so funny. \n\n\"Then just before the next home game, that quarterback - funny, I can't remember his name - said he fell down three flights of stairs. He broke his arm and never played again. When Coach came to see me, his face was all beat up and his knuckles were skinned. I was so grateful that just blurted out that I'd like to go dancing if he felt up to it! You know how shocking it was back then for a girl to ask a guy out. He gave me that funny look again and for a second I was afraid I'd been too forward.\n\n\"Instead he hugged me so that my feet left the ground. The first date was wonderful. There hadn't been a whiff scandal about what had happened but I was still a bit skittish about being on a date. We danced fast and on the slow dances he didn't hold me too close. I felt safe and relaxed. From that point on we were inseparable. At first I was afraid he'd push to kiss me too soon. After a while, I was worried I'd have to kiss him! When he finally kissed me, well, if I hadn't been sitting down... Lordy that man could kiss. \n\n\"He was very proper though. Even though he knew I was no longer a virgin, he respected my wish to wait for the wedding! To tell the truth, I think the waiting was harder on me. We'd been dating almost three months when I knew for sure that I was in love for the first time in my life. Coach, that's what I always called him, was a man and everyone I'd previously dated was a boy. It was too good to be true. \n\n\"The ancient Greeks believed that too much happiness among mortals made the gods jealous. I don't know about that, but just before Thanksgiving break I made an appointment with a doctor across town. I had never been late so I was pretty sure I was almost three months pregnant before I went to see him. I borrowed a wedding ring and used an assumed name to have the test. The rabbit died. \n\n\"I had tried to ignore it but it isn't the sort of thing that goes away... You know back then, abortion wasn't an option. I couldn't have done that anyway. I have to tell you it was the darkest time of my whole life. I would rather have been shot dead than to marry that quarterback; you know it's funny but I can't remember his name.\n\n\"I decided that I would break up with Coach when I got back from Thanksgiving with my parents. I was hoping that they might help me find a distant relative to stay with. That's how things were done in those days. A girl went to live with her aunt in Kokomo and returned when she got her figure back. Everyone knew, of course, but if you were polite, you pretended not to.\n\nHer eyes turned watery and she paused for a second then reached for a tissue. After a small sniff, she continued. \"When I told my parents after Thanksgiving dinner, I said Coach wasn't the father but I was too ashamed to say who it was. My father was furious. I'd wheedled him into being allowed to go to college and he said it had turned me into a 'whore of Babylon,' that I was no longer his daughter. He disowned me! He actually put me and my luggage on the front porch, then locked the door behind me.\" \n\nShe paused, her face reflecting the old pain. Straightening her shoulders, she gave a tiny shrug of regret and continued. \"I didn't have anyplace to go. I had a return ticket to school but the sorority house was closed for the break. I didn't even have enough money to call my roommate; I had to reverse the charges. Margie was also my best friend and drove alone in her folks' car over two hundred miles to pick me up. Young ladies didn't drive after dark back then and she had already had two flats so we were both grateful that her parents had given her enough money for a hotel room. \n\n\"I don't know what I would have done if she hadn't been there for me. I knew there were homes for wayward girls but I didn't have a clue about how to find one or anyone to ask. \n\n\"When I got back to school, Coach came to see me that Sunday evening. I sent Margie down to tell him I'd had a big fight with my parents and I was going to drop out. I told her to tell him that I never wanted to see him again. I just couldn't tell him the whole truth. Margie told him everything. In violation of visiting privileges, he bulled his way up to my room. He insisted that he'd been in love with me since last year but couldn't ask me out when I was dating another. Now he wanted to marry me and make the child his. He wouldn't leave until I agreed to go for coffee and talk. I wanted to marry him but I was afraid I was being selfish; getting married would fix so many of my problems. The truth was that I loved him too much to let him raise a child that wasn't his.\"\n\nPursing her lips, she said, \"The next week was vexing. He wouldn't take no for an answer. I just thought we'd talked before. Lordy, that man could talk and he was so persuasive! My nobility was weakening. I was down to my last argument. I said a scandal like this would ruin his college coaching career and I just couldn't let him ruin his dream. \n\n\"Then on Wednesday, I told him I learned about the Edna Gladney Home in Ft. Worth. I told him I had arranged to go there on Monday. I said that was my last word. Using every ounce of my resolve, I refused to see him or talk any more.\" \n\nThe old woman's whole face lit up, the young pretty cheerleader shining through. \"Saturday was the last football game of the year. It was November 29, 1941, and it's a day I'll never forget. At halftime just as the teams were headed for the locker rooms Coach's voice boomed over the loud speakers, 'I want to ask the woman I love more than life itself to marry me. She's on the sideline right now and when the teams come out after the half I'm going to go down on one knee and beg. Now, I'm pretty sure what her answer's going to be, but I may need help, so I'm asking y'all to root for me when I kneel!'\n\nWith a twinkle in her eye she continued. \"Land's sakes, I've got to tell you I've never been so embarrassed in my life. I fled with the other cheerleaders to our changing room. He was waiting for me when I got there. I didn't know if I wanted to kiss him or kill him. He said, 'The whole world is going to think that baby is mine. So if there's any shame I'm going to share it no matter what you say. If you don't marry me, the world will think me an even greater cad.'\n\n\"He told me he'd already accepted a coaching job at a small high school across the country, which I knew was a big step down from college. He said that when we got there no one had to know the date on our marriage license, no one here had to know the date on the child's birth certificate. Besides, did I really want to shame him in front of almost twenty thousand people?\n\n\"When the half was over he led me out to the middle of the fifty yard line and on one knee he offered me his ring. When I said yes the crowd went crazy. I don't remember another thing about that game, except we won. That was the happiest day of my life. Have you ever heard any thing so romantic? I'd show you my ring but I gave it away for some reason.\"\n\nThe young woman replied with tears in her eyes, \"No, I haven't. What happened next?\"\n\nThe old woman got a puzzled look on her face, \"Oh, what pretty flowers, who are they for? If you're not in a hurry could you stop for a minute and visit with me? I never have any visitors. Who are you here to see? Would they mind? What brings you here?\"\n\nThe young woman took the old woman's hand in hers. \"Dr. Ferber, we're here to see you. Yesterday was the last game of the year. I'm a cheerleader and at halftime the announcer said. 'Sixty-four years ago a former player led a cheerleader out to the fifty yard line and proposed just before he went off to war. He was a hero and that cheerleader went on to become tenured and the first woman department head at this university. Now her grandson, a former player, is also about to go to war and he wants to ask one of our cheerleaders a question.' Mike led me out to the fifty-yard line then went down on one knee. When I said yes, almost eighty thousand people cheered for us. He gave me the same ring too, see? I've been so anxious to meet the woman who raised Mike.\"\n\nThe old woman peered at the ring, confused, then smiled sweetly and said. \"I don't want to keep you long--it's just that this is such a lonely place, all these old people, and so many don't have all their memories, you know.\"\n\nStill smiling she closed her eyes and in just a few seconds, she was snoring softly.\n\nCarrie looked around the room, noting the lifetime of treasures Granny had distilled to her most precious. Side by side with valuable oil paintings were the finest examples of refrigerator art frozen in freshness by lamination and mounted on frames finer than the work of the masters. Steuben glass competed unsuccessfully with ceramic objects whose purpose was inscrutable to anyone but a mother. Finally in a place of special honor were two crudely baked small plates. Each had the deep impression of a child's hand-print. It was a room Granny had tastefully decorated by her love.\n\nSeeing the pain in Mike's eyes as watched the sleeping woman, Carrie pulled him into the hallway and said, \"Oh, Mike, she never recognizes you, ever?\"\n\n\"Not since high school. I was able to take care of her at home then but she kept getting worse. When I started college I couldn't take care of her by myself anymore. It was tough, but I picked this place because it's the best.\" \n\nHe paused, gave Carrie a plaintive look and continued. \"No one is ever going to build a statute of her, but to me, she was the greatest of that Greatest Generation!\n\n \n\n\"She overcame so much. She lost that baby three months later. She was alone in a strange city because Coach's parents rejected her, and he had to leave for the war a week after they were married. She didn't see him again until the war was over four years later. It was all so unfair.\"\n\nCarrie took both his hands in her and looked up at the gentle giant she loved. \"He made it up to her though. That letter he wrote, when he found out she lost the baby... Well I know why she kept it. Then turning down a promotion so she could finish her PhD. Considering society's views back then, I can't believe any man would do that for his wife. Especially a man who made the Army his career.\"\n\nMike was still struggling to control his emotions. \"He truly loved her. Everyone said they were a fairytale couple except my mother was their only child. Granny was 42 when she had her. Mother was only three when Coach had the distinction of being one of the few colonels killed in Vietnam.\n\n\"He was the love of her life; she never even looked at another man. But that meant Granny had to raise my mother alone. Then she had to do it all over again when I was born. I can't stand the thought of that happening to you. It's why I want us to wait until I get out of the army to make a baby.\"\n\n\"Mike!\" Carrie said sternly, \"We've covered this before...\" Carrie's tone changed as she changed directions. \"Why did she get to raise you? Your father wasn't in the Army. They were just on their way to a restaurant with his parents when they were all killed by a drunk driver. Thank God your car seat saved you. \n\n\"We don't know what the future holds. That's why I want our child now!\" \n\nSeeing the uncertainty on his face she squeezed his huge hands hard. \"With all those treasures, what did she put in the place of honor? The little hand-prints plates you and your mother made!\" Do you think for one second that she ever regretted getting to raise you? \n\nMike sighed, \"No, she always said I was God's reward for the good things she'd done in her life.\" Then he shook his head in wonder. \"I don't know where she found the energy, she was in her sixties when she got me. She was still teaching but was always there for me. She was at every school function and all my games. Every summer when I was growing up we'd take vacations that lasted for months, camping in the National Parks, touring in Europe and even hiking some of the Blue Ridge Parkway once. \n\n\"It wore her out but she gave me a wonderful childhood. She accomplished so much, she was so selfless, it really hurts me - here,\" he said holding his stomach. \"When I think that ALL people see now is a bedridden old lady whose memory is gone. I wish I could build that statue for Granny.\"",
        " \n\nCarrie kissed him on the cheek and said, \"Mike, most great people never get recognized. Their children are their monuments and I think you're exactly what she hoped to have.\"\n\nOne of the nursing home attendants walked up and said, \"Hi, Mike, this must be the girl we've all heard so much about.\" Putting a hand on his shoulder she turned to Carrie and said. \"Mike is our most faithful visitor. It's so hard for the family when they reach this stage, except when Mike is here, she never says a word. But he has been here everyday, rain or shine. He used to borrow flowers from the lobby to take to her. Some days he looked like death warmed over but, he never missed a day. You have to have heard that same story ten thousand times; how do you do it?\"\n\n\"She doesn't remember me but I look a lot like my grandfather. When she sees me with the flowers, it triggers something. She tells that story exactly the same way she once told it to her best friend. Then she goes to sleep and, I hope, relives her happiest time.\"\n\nThe attendant smiled at Mike, \"I'm sure she does. I don't know if anyone's ever told you, but she has that sweet smile of hers for hours after you leave.\"\n\nMike's face brightened, \"I hope so. That's all I can do for her now, that and listen. I come because I love her. She's the one who taught me about true love. She always said, 'True love isn't flowers and candy on Valentine's day. True love isn't a feeling or an emotion. True love is wanting the very best for someone and being willing to sacrifice so they can achieve it.' How can I do less?\"\n\nTaking Carrie in his arms he kissed her lightly. Looking her straight in the eye he said, \"That's the way my grandfather loved her. That's the way she always loved me, and sweetheart, that's the way I promise I'll always love you.\""
    ],
    "authorname": "Joesephus",
    "tags": [
        "romance",
        "slow",
        "no sex"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/love-true-love"
}