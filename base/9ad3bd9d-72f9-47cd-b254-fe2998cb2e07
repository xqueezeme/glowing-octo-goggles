{
    "title": "New Girl in Town Pt. 14",
    "pages": [
        " All characters are over the age of 18 unless otherwise specified.\n\nBig thanks to  Devir Ginator  for helping with the edit on this chapter.\n\nAny faults found are mine alone as usual.\n\nThanks to  Jessica  for being an awesome person and an inspiration! \n\nAnd thanks to you, the readers! Keep commenting, sending feedback and voting! \n\n****\n\nJake wakes up to Jessica staring at him with a huge grin on her face.\n\n\"Morning.\" She says in greeting then gives him a quick kiss.\n\n\"Morning, Jess.\" Jake responds. \"Did you sleep well?\"\n\n\"I slept very well. And you?\" She asks.\n\n\"Mmm hmm.\" He answers pulling her body closer to his. \"I was thinking that we should stay in today.\"\n\n\"I'm thinking that I would love nothing more but my family is expecting us to swing by to get the masks and I know that my Jake would not let my Sar-Bear down.\" She tells him.\n\nJake sighs. \"No fair using our secret weapon as your secret weapon, too.\" He complains.\n\n\"It's just as fair as the things you do to me with that tongue of yours, baby.\" She giggles. \"It drives me crazy but you know that I've got issues with reciprocating that particular act.\"\n\nJake kisses her softly. \"Jess, what you do for me is plenty.\"\n\n\"You do know that last night was just the beginning don't you?\" She asks with a playful grin.\n\n\"You can't say things like that and expect me to get out of this bed, Jess.\" he smiles as he pulls her closer.\n\nJessica gives him another kiss that's interrupted by her cell phone sounding an alert.\n\n\"That's probably Staci.\" Jake comments. \"She couldn't wait any longer to hear all the torrid details of last night.\"\n\n\"I told Staci that she had to wait until the weekend was over before she got any details. I set an alarm on the way here last night.\" Jessica tells him. \"I wanted us to get back to my house early. I was thinking that we could cook breakfast for my family as a thank you for this weekend.\"\n\n\"That's an amazing idea, Jess!\" Jake enthuses. He slides out of bed and Jess gives out a whistle.\n\n\"I'm telling all our friends what a cute butt you have.\" She teases him.\n\n\"Don't most of them already know that?\" He asks as he grabs his robe off the hook on his door. \"Do we have time for a shower?\"\n\nJessica checks the time then shakes her head. \"Not both of us but I can grab one when we get done collecting the samples.\"\n\n\"You know, we could shower together. Save on time and water?\" Jake proposes with a sly grin. \n\nJessica's grin matches his own. \"Well I certainly am a fan of conserving water.\"\n\nShe stands up and Jake's jaw becomes unhinged. Standing there with the early morning light hitting Jessica's naked body she looks like she's glowing.\n\n\"What?\" She asks looking down at her breasts before turning to the side trying to figure out what Jake was staring at so hard. \"Is there something on me, Jake?\"\n\nThe light plays over her body highlighting her pert breasts, her hardening nipples, her amazing abs just above her tuft of neatly trimmed strip of blonde curls.\n\n\"You... you look... wow!\" Jake stammers as he takes in the view of this morning goddess.\n\nJessica shakes her head but can't hide her smile. \"Come on before I pull you back into this bed and we end up with one of those baking soda volcanoes for our science fair entry.\"\n\n\"I think that Patrick has the market corned on those.\" Jake laughs.\n\nJessica nods. \"Probably so but at least ours would work!\"\n\n****\n\n\"Wow!\" Jessica exclaims when Jake leads her to the master bath. \"This is not what I was expecting.\"\n\nThe bathroom has been completely redone in a modern style with a large walk in shower with multiple shower heads.\n\n\"Mom was in a car accident a few years back.\" Jake explains as he starts the water. \"Her leg was broken and it messed up her back so dad got this redone to make it easier for her to get into and out of.\"\n\n\"Aw, that's so sweet of him.\" Jessica comments.\n\nJake checks the temperature of the water then turns to Jessica who hands him her body wash and shampoo. He places it on the shelf inside the shower then steps in himself. Jessica joins him then, the pair share a kiss before Jake reaches behind her to adjust the shower heads. Above them the rain shower head begins to gently cascade over their bodies.\n\n\"This is nice.\" Jessica sighs as she leans her head back, letting the water soak her long hair. \"We had a shower head like this back in Charlotte. I would sometimes stay in my shower for hours after a game.\"\n\n\"It's so relaxing, right?\" Jake asks as his hands rub over her shoulders and back.\n\n\"If I had you there and rubbing on me like this, it would have been heaven.\" She purrs.\n\n\"I was just thinking the same thing.\" Jake stammers as Jessica strokes his erection almost absentmindedly. \"Don't we have a breakfast to make though?\"\n\n\"We do.\" Jessica sighs then looks down at his erection in her hand. \"To be continued, my friend.\"\n\nJake reaches for her body wash, squeezes a dollop into his hands before proceeding to give Jessica's body a thorough cleaning. \n\n\"Is my butt really that dirty, Jake?\" She sighs as Jake spends an inordinate amount of time soaping up each cheek.\n\n\"Huh?\" he asks still soaping her.\n\n\"You're impossible.\" She tells him with a laugh that melts into a sigh when his fingers slide over her heated slit.\n\n\"Break... fast... Jake.\" She moans as he gently explores her.\n\nHe nods and relents then hands her the body wash. Jessica soaps him up just as diligently as he did her paying particular attention his is now steel hard erection.\n\n\"Is... he that, fuck... dirty, Jess?\" Jake stammers as Jessica strokes the soap up and down his shaft.\n\n\"He won't be when I'm done.\" She answers as she turns her cleaning to a hand job. \"He'll be clean and satisfied.\"\n\nShe continues to tug on him for a few minutes before Jake stiffens in her hand and he drops his head to her shoulder.\n\n\"Gonna come!\" He groans in warning.\n\nJessica continues to glide her hand up and down his cock until he begins to spurt. She didn't exactly have an idea of where he would come so it ends up all over her taut tummy.\n\nShe looks down at his offering and begins to laugh.\n\n\"Where do you get it all, Jake?\" She asks him.\n\nHe looks down and shakes his head. \"I blame you.\" He laughs. \"It wasn't like this until you came along.\"\n\nShe shakes her head and steps back to allow the water to cascade down on her as she tries to wipe away his pleasure from her abs.\n\n\"Sticky.\" She comments.\n\n\"Wait, this will help.\" Jake says reaching behind her. \"Just don't kill me.\"\n\n\"Kill you? Why would I kill YOU!\" She shouts as the water temperature drop drastically.\n\n\"Colder water helps...\" Jake begins to explains but she continues for him.\n\n\"Helps break down the protein structure making it less sticky, I know.\" She adds. \"Doesn't mean I have to like it!\"\n\nOnce clean of his offering, she quickly cranks the hot water back up. With it and Jake rubbing her back and shoulders she heats back up quickly.\n\n\"Better?\" he asks.\n\n\"Best.\" She responds then gives him a kiss. \"We should get out now though. Breakfast awaits. You know, once we make it.\"\n\nThe pair hop out of the shower and dry each other off with big fluffy towels that Jessica expresses a fondness for.\n\n\"Should we wipe down the shower or leave it?\" She asks as she towels off her hair.\n\n\"Leave it.\" Jake answers. \"We'll need it again when we get back this afternoon.\"\n\nShe leans in and gives him a kiss. \"Sounds heavenly. Let's go get this breakfast thing done so we can get this day started because you and I have a shower date!\"\n\n****\n\nMr. Golden is out for his early morning jog despite the early November chill in the air. He checks his fitness watch and it informs him that he's just hit his ten miles as he rounds the corner to his neighborhood. Up ahead he spots a familiar pair of figures walking ahead of him.\n\n\"Jess?\" He calls out as he gets closer.\n\n\"Hey dad,\" Jessica answers giving him a smile. \"I'd hug you but you're all sweaty.\"\n\n\"That's okay, baby.\" He answers her. \"What are you two doing out walking this early?\"\n\n\"We were coming over to make you guys breakfast as a thanks for giving us this weekend.\" Jessica answers as he falls into step with them \"Jake's idea.\"\n\n\"Jess's idea.\" Jake corrects. \"We decided to walk over just in case Jess needs her car for anything over the weekend. She might want to escape before the weekend is over.\"\n\n\"I will not!\" Jessica declares as she gives him a playful shove.\n\n\"Let's not injure the star of last nights game, Jess.\" Her dad chuckles.\n\n\"They're going into the playoffs as one of the top ranked teams so they have a bye week. He'll recover by then.\" Jessica points out as they reach their driveway.\n\n\"True but if you hurt his cooking arm then you'll have to cook this breakfast yourself.\" Her dad points out.\n\n\"Good point.\" Jessica smiles. \"I do need him to man the bacon while I work on the pancakes.\"\n\n\"My mouth is watering already.\" Mr. Golden states. \"I'll grab a quick shower then come help you two out.\"\n\n\"Take your time, dad. We've got this.\" Jessica assures him.\n\nHe nods and heads upstairs while Jessica starts the coffee.\n\nJake grabs the stuff they need from the refrigerator and sits it on the kitchen island.\n\n\"Pans?\" He asks but Jessica is already opening the nearby cabinet. She starts the burner and sits a frying pan on it.\n\nJake opens the packet of bacon and begins laying them into the frying pan while Jessica pulls a griddle from under the cabinet.\n\n\"Plug that in for me?\" She asks him holding out the cord.\n\nJake nods then plugs it into the socket to the side of the stove.\n\n\"Got it.\" He says as the bacon begins to sizzle.\n\nJessica leans over and kisses his cheek. \n\n\"Thanks, sweetie.\" she comments then begins to mix the pancake batter.\n\n****\n\nThe smell of coffee and bacon rouse Dr. Golden from her slumber just as her husband returns from his shower.\n\n\"Ah, so you are up.\" He comments as he towels off.\n\n\"Tim, why do I smell bacon?\" She asks groggily.\n\n\"That would be your first daughter and her boyfriend.\" He answers as he begins to get dressed. \"They're downstairs making us breakfast.\"\n\n\"Breakfast?\" She asks.\n\n\"As a thank you or that's how they explained it to me.\" He shares.\n\n\"Are they... do they seem... all right?\" She asks as she slides out of bed.\n\n\"I haven't noticed any difference.\" he answers. \"They're laughing and playing around like they usually do. Jessica seems a little more energetic this morning but that's about it. Am I missing something?\"\n\n\"No, I'm just being a mom.\" She answers as she pulls on her robe. \"Let me go see if they need any help down there.\"\n\nShe descends the stairs and hears muffled giggles coming from her daughter.\n\n\"You have to leave it.\" Jessica is saying when her mother enters the kitchen. \"It's cute.\"\n\nShe turns to Jake and sees a streak of drying pancake on his cheek.\n\n\"Can I at least keep it from dripping?\" He asks. \"I don't want your mom to think I messed up her kitchen.\"\n\n\"Oh she won't, Jake.\" Dr. Golden states. \"I know that the guilty party is the one with incriminating batter on her finger.\"\n\n\"Busted.\" Jessica giggles then hugs her mom. \"Morning, mom. Sleep well?\"\n\n\"I slept okay.\" She answers. \"And you?\"\n\n\"Really great.\" Jessica answers with a wide smile. \"Jake's bed is...\"\n\n\"Bacon is almost ready.\" Jake jumps in while wiping the pancake batter streak from his face. \"She was about to say that Jake's bacon is almost ready which it is.\"\n\nDr. Golden shakes her head. \"You were a little late on that save, Jake.\" she comments.\n\n\"I was just saying that I had a very restful night of sleep, mom.\" Jessica smiles then hands her her coffee. \"Coffee, just the way you like it.\"\n\n\"Thank you, baby.\" She says taking a sip. \"Thank you both for this. You really didn't have to.\"\n\n\"We wanted to.\" Jessica answers. \"We had to come by and so we thought that we could do this too. Our thank you for being reasonable about all of this and trusting us.\"\n\n\"I am still nervous, Jess, but I am trying.\" Dr. Golden tells her.\n\n\"What are you trying, dear?\" Mr. Golden asks as he takes a seat at the table.\n\n\"To be less nervous about this weekend.\" She answers him.\n\n\"Well that coffee won't help but maybe a different subject of conversation might?\" He asks. \"Since Sarah's still out, we should discuss her upcoming birthday.\"\n\n\"It's next Friday the tenth.\" Jessica informs Jake. \"We've got to think up some presents for her. I'm leaning towards something to do with astronomy. She's really latched onto that this year.\"\n\n\"We could check out the planetarium's gift shop and see if we can find her a book on astronomy.\" Jake suggests.\n\n\"That's not a bad idea.\" Jessica agrees.\n\n\"When you go, check and see if they have any of those beginner telescopes there.\" Mr. Golden tells them. \"She's been hinting around that she wants one of those.\"\n\n\"It would go well with a book on astronomy. Good call, Dad.\" Jessica comments.\n\n\"Jake, do you know if they do parties there?\" Dr. Golden asks.\n\n\"I think I saw something about parties on a brochure.\" Jake answers. \"Jess, do you still have one of them?\"\n\nJessica nods. \"Watch my pancakes and I'll go up to my room and get it.\"\n\nJessica passes off the spatula and Jake flips the pancake that she was working on perfectly.\n\n\"Nice timing you two.\" Mr. Golden chuckles at Jessica as she passes.\n\n\"We work well together.\" Jessica comments as she turns to head to her room.\n\n\"No one can deny that.\" Dr. Golden comments. \"Jess, how about getting Sarah up while you're up there and we can discuss the finer points of her party a bit later.\"\n\nJake checks his bacon and nods. \"The bacon and first batch of pancakes should be ready when you and Sarah get back.\"\n\n****\n\n\"Sar-bear.\" Jessica whispers as she kneels by her little sisters bed. \"Wake up lil' sis.\"\n\nSarah stirs for a moment then rolls away from her.\n\nJessica reaches out and gives her shoulder a slight shake.\n\n\"Breakfast is almost ready, Sarah.\" Jessica whispers. \"Bacon and pancakes... mmm,mmm.\"\n\n\"Pan... cakes...\" Sarah murmurs sleepily.\n\n\"Mmm hmm, pancakes and bacon.\" Jessica says as Sarah sits up and rubs her eyes. \"Jake is working on them now.\"\n\n\"Jake's here?\" Sarah asks.\n\n\"He's downstairs with mom and dad right now.\" Jessica answers as Sarah slides out of bed. \"Let's go wash your face then head down.\"\n\nSarah nods and follows Jessica to their shared bathroom where she hops up onto the stepping stool so she can reach the sink. Jessica retrieves a washcloth for her as Sarah starts the water.\n\n\"Did you have a good sleepover with Jake?\" Sarah asks as they wait for the water to heat up.\n\n\"I did.\" Jessica answers and can't hide the smile that explodes on her face.\n\n\"Did you have to stay in his bed with him like I have to with cousin Shanna when we visit Aunt Wanda?\" She asks.\n\n\"No, I didn't  have  to sleep in Jake's bed.\" Jessica answers carefully wording her response.\n\n\"What did you do?\" Sarah asks.\n\n\"We talked and hung out.\" Jessica answers as she checks the water temperature then wets the cloth. \"We were both really tired after the game so we didn't stay up long after we got to his place.\"\n\nJessica has Sarah add some soap to the cloth then kneels down and gently washes her face.\n\n\"You must have had fun.\" Sarah states from behind firmly closed eyes. \"Your eyes are all sparkly.\"\n\n\"Are they?\" Jessica asks then takes a glance back at the mirror.\n\n\"Yep. All bright and happy like you had a lot of fun.\" Sarah tells her mid yawn.\n\nJessica doesn't see what Sarah is talking about so she just shrugs.\n\n\"Time to rinse. Do it like I showed you, remember?\" She asks.\n\n\"I don't like my face underwater.\" Sarah announces.\n\n\"You're not putting your face underwater, you're just splashing it on your face. And carefully this time! I don't want to have to spend an hour mopping up again.\" Jessica tells her.\n\nSarah grumbles but the smell of bacon and pancakes spurs her into action. She cups her hands under the water then, as her big sister showed her, leans over the sink and carefully splashes the water on her face.\n\n\"Pffft!\" Sarah spits out as she raises her head.\n\n\"It wasn't that bad.\" Jessica giggles as she grabs the nearby towel and dries Sarah's face.\n\n\"I don't like it.\" Sarah states defiantly.\n\n\"I know and since you're going to have syrup all over it in just a few minutes, I don't know why I bothered except that it helped you wake up.\" Jessica comments.\n\n\"And you love me.\" Sarah tells her.\n\nJessica laughs and shakes her head. \"That I do my little Sar-Bear. Love you to pieces.\" \n\n****\n\n\"Order up for one medium sized banana pancake. Whose order is that?\" Jake calls out from the griddle.\n\n\"Mine!\" Sarah announces gleefully.\n\n\"Can't be yours. Bears don't eat banana's.\" Jake states as he lifts the plate to his nose. \"Mmm, smells really good though.\"\n\n\"Bears don't but Sar-Bear's do!\" Sarah announces to everyone's amusement.\n\nJake smiles and shakes his head before placing the plate in front of her.\n\n\"Does the cook get a taste?\" He asks as her fork dives into the fluffy disk.\n\n\"All mine!\" Sarah tells him as she carves out a bite with her fork. She pops it into her mouth then hums happily.\n\n\"Is it good, honey?\" Dr. Golden asks.\n\n\"Mmm hmm!\" Sarah answers enthusiastically around a mouthful of pancake.\n\n\"I'd say so, you haven't even added the syrup yet.\" Mr. Golden chuckles.\n\nSarah reaches for the bottle but Jessica beats her to it.\n\n\"Oh no you don't. Last time we let you add your own you poured out most of the bottle.\" Jessica tells her as she adds the syrup to Sarah's pancake for her.\n\n\"Tell me again about what this project you're working on today entails.\" Mr. Golden asks after a sip of his coffee.\n\n\"Environmental impact of the soil surrounding developed land versus undeveloped.\" Jessica answers. \n\n\"We're using the lake as a backdrop for our study.\" Jake adds.\n\n\"The one you can see from the drive in?\" Sarah asks with sticky syrup dripping from her mouth.\n\nJake chuckles and dabs it away with his napkin. \"The very same one.\" He answers.\n\nJessica smiles warmly at him and places her hand in his at the table.\n\n\"I think that my firm would be interested to have a look at your results when you get them completed.\" Mr. Golden tells them. \"We've got a team that handles all of our environmental surveys and I think they'd be interested in a look at your data when your project is finished.\"\n\n\"Sure, you can pass along our findings if you want.\" Jessica answers then turns to Jake. \"That okay with you?\"\n\n\"That's perfectly fine with me.\" Jake answers. \"Anything you need, sir, you just let us know.\"\n\nHe nods then after a bite of pancake adds. \"Also, thank your mother again for me for finding that paper you did on the history of the drive in. It was very well researched.\"\n\n\"I will and thank you, sir.\" Jake tells him.\n\n\"Have you ever thought about sketching up what you would do with the land it sits on?\" Mr. Golden asks.\n\n\"Tim, let Jake eat something first before you try and rope him into a career as an architect.\" Dr. Golden admonishes him.\n\n\"I'm just putting it out there for him, Val.\" He says then turns to Jake. \"I don't mean to put you on the spot, Jake, but I would be interested in seeing what you come up with. Those mock ups you did for yours and Jessica's costumes and accessories were very promising. I would love to see your take on say a modern update to the old drive in.\"\n\nJake nods. \"I have given it some thought in the past but it would be next week sometime before I could really delve into it. Jess and I have to have the project completed this weekend and there's still quite a bit of write up to do on it after we get our test samples.\" Jake explains.\n\n\"Of course that comes first. This is just something to keep on the back burner for when you have time.\" He states.",
        "\"Yes, sir.\" Jake assures him. \"I'll get something on paper soon and get it to you.\"\n\n\"When are you taking me back to the drive in, Jake?\" Sarah asks changing the conversation.\n\n\"Whenever you want.\" Jake answers.\n\n\"That isn't this weekend.\" Jessica adds quickly knowing that Sarah would demand to go right then.\n\n\"I know that.\" Sarah answers surprising her. \"This is your special weekend with Jake. It's making you all happy and you can't stop touching each other just like mommy and daddy get sometimes.\"\n\n\"Okay, Sarah, that's plenty of information, thanks.\" Jessica interrupts her. \"We should get started on these dishes before we go.\"\n\n\"You two made breakfast. We'll get the dishes so you can get your project samples.\" Dr. Golden tells them.\n\n\"Are you sure, Dr. Golden?\" Jake asks. \"We can get them and still get our samples.\"\n\n\"We want you to enjoy the rest of your weekend, Jake.\" She tells him. \"Go do that and let us worry about these dishes and everything else. You two have earned this weekend. In fact, give me a few minutes and let me pack you guys a nice picnic basket to take with you. That way you can have a nice lunch outside and get done even quicker.\"\n\nJessica looks at Jake who nods in agreement.\n\n\"Sounds good. Just some sandwiches though. I'm cooking for Jake tonight and he'll need his appetite.\" Jessica tells her.\n\n\"I'll help.\" Sarah announces and begins to bound from the table but Jake stops her.\n\n\"Hold up a second, Sar-bear.\" He says then proceeds to wipe the sticky syrup from her hands and face. \"You'll get this sticky stuff on everything and the ants will march away with our picnic basket before we can eat anything out of it.\"\n\n\"We'll get started on the sandwiches.\" Dr. Golden tells Jake as he diligently cleans an only mildly impatient Sarah.\n\n****\n\n\"He really is good with her.\" Dr. Golden says to Jessica as they pull the sandwich ingredients from the fridge.\n\n\"He is that.\" Jessica agrees. \"He's so different than Sean ever was. I mean sure, Sean would hang out with her when I was around but with Jake it seems like...\"\n\n\"Like he would take Sarah along if she asked even without you being there?\" Dr. Golden prompts.\n\n\"Something like that.\" Jessica answers then smiles. \"He's a really special guy.\"\n\n\"He is that.\" Dr. Golden repeats her daughter's earlier statement.\n\nJessica is slathering mayo on the first slice of bread when Sarah joins them.\n\n\"Up.\" She orders in her cute way.\n\nJessica snags her and lifts her up so she can sit on the counter and help.\n\nJessica lets Sarah place the ham and the cheese on each sandwich then add the mustard to the other slice of bread.\n\n\"What else do we need?\" Jessica asks her pint sized helper.\n\n\"Chips!\" Sarah answers.\n\nJessica retrieves a couple of small bags from the cabinet and adds them to the basket.\n\n\"Anything else?\" Dr. Golden asks as she adds a couple of ice packs and a few bottles of water.\n\n\"Can you get my 'Ween candy down?\" Sarah asks.\n\n\"You've had enough sweets this morning.\" Dr. Golden tells her.\n\n\"Not for me, for the basket.\" Sarah corrects.\n\n\"Oh.\" Her mother says then turns to the cabinets. She opens one and reaches to the top shelf where two large grocery bags full of trick or treat candy sit.\n\n\"Here is where Jake gets into my doghouse.\" Dr. Golden states. \"We'll still have a lot of this trick or treat candy when Halloween rolls around next year.\"\n\n\"Come on, mom. You can't blame Jake for knowing where all the great places are to get candy around here.\" Jessica tells her. \"Sarah certainly had a lot of fun with him and I taking her around. Didn't you, Sara?\"\n\n\"I sure did!\" Sarah answers as she proceeds to look through her bag of treats. After a couple of moments she produces a pair of Kit Kat bars and a pair of Reese cups from the bag and holds them up.\n\n\"Will these be okay, sissy?\" She asks Jessica.\n\n\"Perfection, lil' one.\" She answers so Sarah drops them into the basket. \"Looks like we're all set then.\"\n\n\"All set?\" Jake asks as he pokes his head into the kitchen.\n\n\"Mind reader.\" Jessica teases him as she shakes her head.\n\nShe hugs Sarah then her mom their goodbyes as Jake grabs the picnic basket.\n\n\"The masks?\" Jake asks Dr. Golden.\n\n\"Beside the front door along with some sturdy rubber gloves that I grabbed too, just in case.\" She answers.\n\nJessica grabs those as they pass then heading out the door.\n\n\"Love you!\" Jessica calls out over her shoulder as the pair head down her porch steps. \"We'll check in later!\"\n\nMr. Golden joins his wife at the door.\n\n\"Still worried?\" He asks her.\n\n\"Not as much as I was.\" She sighs. \"I feel like I get a glimpse into the future when I see them together.\"\n\n\"And that's not worrisome?\" He asks.\n\nShe shakes her head. \"Getting less so with every passing minute I see them together.\"\n\n****\n\nMr. Crouse grumbled when he thought he spotted a couple of people poking around his property. Buck Greene had sent his people down here before looking for ways to get him to sell but he wasn't having it.\n\n\"This is my goddamn land!\" He huffs as he put his hand to his forehead to block the bright November sun. \"Where the hell did they go?\"\n\nIt only takes him a moment to spot the blonde hair of the one bobbing along towards the lake. He grabs his jacket and jerks it on as he steps outside. Stomping through the crunch of fallen leaves with the snap of the occasion twig, Mr. Crouse walks towards the trespassers.\n\n\"Perfect spot?\" He hears a voice ask. A voice that is somewhat familiar to him but he can't place it.\n\n\"Anywhere around here looks like a perfect spot.\" A female voice answers the first.\n\n\"I definitely don't know that one.\" Mr. Crouse thinks as he continues towards them. \"Sounds like a couple of kids.\"\n\nDown here on this end of the lake he has seen his fair share of teenage skinny dippers and a few parties that he had broken up before they got too raucous. The last thing he needed was the cops to come along and give Greene any more ammunition in this fight.\n\nWhen he exits the tree line he sees the boy shaking out a blanket before laying it on the ground.\n\n\"Picnic?\" He wonders aloud causing them both to look up.\n\n\"Oh, hey Mr. Crouse.\" the boy says.\n\n\"That you, Jake?\" He asks cursing himself for leaving the house without his glasses.\n\n\"Yes, sir.\" Jake answers walking over to him with his hand extended. \"We didn't mean to intrude.\"\n\n\"But you thought you'd just have yourselves a little picnic here on my land, huh?\" He asks.\n\n\"It's a working picnic.\" Jake answers.\n\n\"Working, huh?\" Mr. Crouse challenges as he looks at Jessica. \"Son, she is too pretty for you to call that work.\"\n\n\"We're working on our science fair entry, sir.\" Jessica states as she walks over to join them.\n\n\"Jessica, this is Mr. Crouse. Mr. Crouse, this is my girlfriend and lab partner Jessica.\" Jake introduces them.\n\n\"Nice to meet you, Jessica.\" Mr. Crouse says shaking her offered hand. \"Now what exactly is this science fair project and how does it involve a picnic?\"\n\nJessica explains the project then Jake explains the picnic part.\n\n\"It is hard to work on an empty stomach.\" Mr. Crouse agrees with a nod then fixes Jake with a stare. \"This project of yours. Could it help me keep fighting off Buck Greene and his hounds?\"\n\n\"It certainly couldn't hurt.\" Jake answers with a smile.\n\n\"Copy me in on your findings as soon as you can if that's the case.\" He tells him. \"I've had some other group come in and start sniffing around this part of my land. Well, this and that old drive in that you seem to love so much.\"\n\n\"Someone local?\" Jake asks trying to think who it could be.\n\n\"Some outfit out of Charlotte if I rightly recollect.\" He answers.\n\nJake and Jessica share a look.\n\n\"Looks like you two might know something about that.\" He states.\n\n\"We might.\" Jessica answers. \"I'm from Charlotte.\"\n\n\"And Jessica's dad works for an architectural firm there. He's up here working on a project.\" Jake explains.\n\n\"That new marina that they've been trying to put in up north of the lake for the past year and a half?\" He asks.\n\n\"That's the one.\" Jessica answers. \"The guy that wants it built keeps changing his mind and blowing off meetings.\"\n\n\"That's Buck for you.\" Mr. Crouse answers. \"So you think this might be your daddy's firm looking to buy me out?\"\n\n\"I wouldn't know sir but their firm has purchased and developed properties in the past, sir.\" Jessica answers.\n\n\"I wonder if he's thinking about starting the drive in back up?\" Jake wonders aloud.\n\n\"That's right! He asked you to draw up some ideas for him, didn't he?\" Jessica asks.\n\n\"Trying to breath life back into the old Thunderbird.\" Mr. Crouse says. \"Do you really think that's his plan?\"\n\nJake and Jessica both nod in response.\n\n\"Never thought I'd live to see that day.\" He chuckles. \"You two have a good picnic and don't forget to swing by my place with your findings, Jake. I am mighty interested in what you find.\"\n\n\"Yes, sir.\" Jake answers.\n\n\"We will, sir.\" Jessica also answers.\n\n\"A cutie and polite.\" Mr. Crouse comments. \"Jake here is one lucky guy.\"\n\n\"I like that we're both lucky, sir.\" Jessica answers with a smile.\n\nHe chuckles and shakes his head. \"Maybe you're right about that, miss.\"\n\n****\n\nThey arrive back at Jake's house in the early afternoon and Jessica suggests they write up their notes while everything is still fresh in their minds before cleaning up and starting dinner.\n\n\"Still no hint on what dinner will be?\" Jake asks as they sit at his kitchen table working.\n\n\"Nope.\" Jessica answers. \"I'll shower first then go to the store to get the stuff while you shower.\"\n\n\"Wait, I thought we were going to shower together?\" Jake asks. \"I owe someone some payback for the one from this morning.\"\n\nJessica shakes her head. \"If we do, we won't make it out of your bedroom, Jake. Let me feed you because you're going to need your strength.\"\n\nJake smiles and nods his head before going back to his notes. After marking the areas they collected their samples on a map, they test the soil using the test kits that Mrs. Harper suggested for the best results. Once completed they write down the findings and Jessica suggests a break.\n\n\"I'm getting a little hungry.\" She comments as she stretches her back.\n\n\"Need me to rub?\" Jake asks with a grin.\n\n\"Don't tempt me, Jake.\" She giggles. \"I am going to shower, while you clean the table up so we can eat.\"\n\n\"I think I'd rather rub.\" He laughs and pulls her into his arms.\n\nHer mouth quickly seeks out his and their tongues tangle for positioning for a moment before Jessica pushes him back.\n\n\"Shower.\" She gasps.\n\n\"Agreed.\" Jake answers reaching around and grabbing handfuls of her tight butt before he covers her lips with his again.\n\nJessica moans into his mouth for a minute then with a giggle pushes him back again.\n\n\"I meant that I'm showering.\" She tells him. \"You're only delaying your dinner and what comes... after.\"\n\n\"Tease.\" he chuckles but with one last peck on her lips he steps back.\n\n\"You love it.\" She answers back with a grin before heading upstairs to shower.\n\nJake watches her walk away, his eyes glued to her tight ass as she sways her hips just the way he likes until she disappears from his view. He goes about clearing the table of their work then he wipes the table clean while Jessica hops into the shower.\n\nAfter her shower she finds him watching the afternoon college football games on the television.\n\n\"Who's winning?\" She asks as she leans over the back of the couch.\n\n\"Virginia is up by three but Wake Forest is driving with time running out.\" Jake answers then smiles. \"You smell nice.\"\n\n\"And you smell like dirt.\" She tells him. \"I may have left you some of the hot water but after that stunt this morning, I'm kind of hoping that I didn't.\"\n\n\"It worked and I got hit with the same cold water.\" He argues then smiles. \"I need a cold shower anyway after watching you tease me with your sweet butt on the way to your shower.\"\n\n\"Tease? Me? Never.\" She proclaims with a giggle. \"I'm off to the store now. Enjoy your cold shower, naughty boy.\" \n\nHe nods as she leans over the couch and kisses his cheek. On the screen, Wake's quarterback drops back with time running out. He heaves a pass towards the end zone and the receiver makes a one handed catch for the winning score.\n\n\"Whoa, that's a nice catch!\" Jessica comments.\n\n\"Almost looked like one of Ray's.\" Jake answers then hops to his feet. He kisses Jessica before heading upstairs for the shower. \"You're sure you don't want me to come with you to the store?\"\n\n\"Go get yourself all cleaned up so I can make you twice as dirty tonight.\" She flirts with him as she heads to the door. \n\n\"Yes, ma'am.\" Jake calls back. \"Jess, be safe, okay?\"\n\n\"Always.\" She answers him before closing the door behind her. She gets into her car and starts it but before backing out she pulls out her phone and sends her mom a text letting her know that they are back at Jake's house and all is well.\n\n****\n\n\"Something smells great!\" Jake says as he walks into the kitchen still pulling on one of his button up shirts that Jessica likes.\n\n\"That would be the beef frying.\" Jessica answers. \"Now go watch the football highlights or something. I'm cooking for you tonight.\"\n\nHe walks over to where she's separating the ground beef in the skillet and hugs her around her waist.\n\n\"We're a team, Jess.\" He says as he nuzzles her neck. \"How can I help?\"\n\n\"You... you can stop doing that for one or else I'm going to insist you screw me on the counter top here.\" She sighs but she tilts her head allowing him better access to her neck.\n\nJake takes advantage and kisses his way down her neck, to her shoulder and then continues around to the other side working in reverse.\n\n\"Jake...\" She moans as his hands slide around to the front of her jeans.\n\n\"Yes?\" He whispers in her ear.\n\n\"I'm... going to burn your dinner.\" She argues as his fingers teasingly play with the snap of her jeans.\n\n\"Can't have that.\" He smiles. \"It smells too good for that to happen.\"\n\nShe nods then pushes her butt out which pushes him back but not before she feels his hardness press into her.\n\n\"Grab your can opener and open these for me if you really want to help.\" She tells him.\n\nJake nods and is soon opening cans of tomato sauce, diced tomatoes with green chilies, kidney beans and pinto beans while Jessica adds chili powder to the ground beef.\n\n\"Normally, I'd dice some fresh tomatoes into this but the ones at the store didn't look all that great.\" Jessica explains as she dumps the tomato sauce into the pan.\n\nJake takes the spoon and begins to mix as Jessica adds the rest of the ingredients in.\n\n\"Is there anything else we need to do?\" Jake asks laying the spoon to the side.\n\n\"You need to keep stirring.\" Jessica tells him. \"I am taking a break.\"\n\n\"A break, huh?\" Jake asks.\n\n\"Uh huh.\" She answers as she steps behind him.\n\nHer hands reach out and begin to rub his shoulders. Her lips begin kissing their way around Jake's exposed neck causing him to shudder.\n\n\"Not... fair.\" He groans nearly dropping the spoon into the chili.\n\n\"Turn about is fair play, Jake.\" She whispers into his ear then nips at his lobe playfully. \"Keep stirring.\"\n\nJake does his best to keep his mind on what his hand is doing and what hers are but she makes that impossible as she slides them from his shoulders then down to grope his butt.\n\n\"Jess.\" He hisses as the spoon clanks against the pan.\n\nHer response is a gentle but firm squeeze before sliding back up to the relative safety of his lower back. Or so Jake thinks. Jessica slips her hands around his waist and begin to work his belt loose.\n\n\"What are you doing?\" He asks.\n\n\"It's gotten awfully hot in here.\" She remarks. \"We need to keep the cook comfortable.\"\n\n\"You're the cook.\" He points out.\n\n\"And you losing your jeans would make me very comfortable.\" she giggles as she unsnaps his jeans.\n\nJake doesn't say anything and allows her to tug them down to the floor.\n\n\"Lift.\" She orders tapping his right foot with her hand.\n\nJake complies and then the left follows soon after.\n\n\"Better.\" Jessica comments as she slides her hands up Jake's bare legs and over the back of his black boxer briefs. \"Much better.\"\n\nJake sighs as Jessica continues to maneuver her hands around his lower body playfully.\n\n\"You remember the whole turn about is fair play thing, right?\" Jake asks.\n\n\"I'm counting on it once we're done eating, Jake.\" She tells him with a grin.\n\n****\n\nOnce the chili begins to bubble, Jessica pulls down a couple of over sized mugs then opens a bag of Fritos corn chips and some shredded cheese.\n\n\"Ever had chili like this before?\" She asks as she adds the corn chips to first one mug then the other.\n\n\"With cheese yeah, but not chips.\" Jake answers.\n\n\"This cheese?\" she asks handing him the bag. He reads that it is a mixture of Monterey Jack, cheddar, asadero and queso quesodilla cheeses.\n\n\"Interesting.\" he comments. \"So Mexican chili then?\" \n\n\"Mexican chili.\" She nods. \"Perfect for a cold night like this.\"\n\nJake nods and begins to spoon chili into the mugs.\n\n\"You finish that up and I'll pour us some tea to drink.\" She tells him.\n\n\"Aren't you forgetting something?\" He asks.\n\n\"Bring the chips to table if you want to add more.\" She says but Jake reaches down the snap of her jeans.\n\n\"I meant that you were forgetting that the chef herself is a bit overdressed for dinner.\" He says tugging at the button.\n\nJessica stops him before it snaps open for him however.\n\n\"I've got to keep mine on.\" She tells him.\n\n\"How is that fair?\" He argues.\n\n\"It's not but me leaving a wet spot on your parent's dining room chair isn't really an option.\" She shares.\n\n\"Wait, you're wet?\" Jake asks.\n\n\"Duh!\" She answers. \"You kissed all over my neck and you know how sensitive that is. Then when I worked you over a bit I got all revved up again.\"\n\nJake chuckles. \"Good to know.\"\n\n\"Isn't it?\" She giggles. \"Now grab our dinner and meet me in the dining room so we can eat. We have a long night ahead of us.\" \n\nJessica stops Jake's praise of her cooking after a few compliments by reminding him that the faster he finishes his food, the quicker they can get on with the evening.\n\n\"Does that mean that I get to show my appreciation instead?\" He asks.\n\n\"You had better.\" Jessica tells him and smiles.\n\nThey share clean up duty with Jessica enjoying placing wet hand prints on Jake's rear as he dries the dishes.\n\n\"I'm going to have to change these, you know?\" He points out.\n\n\"Or take them off.\" She suggests with a wink.\n\n\"I can just change.\" He tells her. \"We are at my house after all.\"\n\n\"I'm declaring your upstairs off limits until we both go up and we won't need clothes once we get there, Jake.\" She teases him. \"Now grab me something to put this leftover chili in then we can go watch a movie on the couch before bed.\"\n\nHe snags a bowl and hands it to her. \"I gotta break the off limits rule.\" He says.\n\n\"Why is that?\" She asks.\n\n\"I need to freshen my breath so I can kiss you.\" He answers.\n\n\"Mmm, good call.\" She responds. \"I'll be up to join you in a second and you'd better still not have any pants on when I get up there, Jake!\"\n\n\"I make no promises.\" Jake laughs as he bounds up the stairs.\n\n\"Don't you dare, Jake!\" Jessica shouts as she places the leftovers in the fridge. \"Bad things will happen if you do!\"\n\n****\n\nBack downstairs and both now minty fresh, Jessica looks over the movie selection while Jake grabs a couple of blankets from the linen closest. He lays one for them to sit on then puts the other one aside for them to cuddle under when the time comes.\n\nJessica puts the movie on and crawls up onto the couch, cuddling close to Jake. He drapes his arm around her and pulls the blanket over them both as the movie starts.\n\n\"Have you seen this one?\" She asks Jake as they settle in.",
        "\"A few times.\" he answers.\n\n\"Why didn't you say something?\" She asks.\n\n\"Because you want to watch it and I can keep myself busy in other ways.\" He answers with a grin as he leans in and begins kissing her neck.\n\n\"I'm going to have to... borrow this movie to watch it, aren't I?\" She asks as Jake kisses his way to her sensitive spots.\n\n\"Not necessarily.\" Jake answers before slipping to the floor in front of Jessica.\n\n\"Where are you...\" She starts to ask but stops when she feels the snap of her jeans popping open.\n\n\"Watch your movie.\" Jake says as he tugs at her jeans.\n\nJessica bites her bottom lip as her jeans begin to slide down her legs. He kisses his way up her thighs until he reaches her center. The spicy scent of her arousal tickles his nose as he kisses her center over her panties.\n\nAbove him she groans out her approval of his attention. He reaches up and begins to work her panties off.\n\n\"Jake.\" She warns him.\n\n\"I'll wash the blankets once we're done.\" He assures her.\n\nSatisfied with that, Jessica lifts up so he can slide them off her. He lays them with her jeans then begins to kiss his way around her slit. The tangy taste of her wetness hits his tongue and he laps it up quickly. He tries to press his tongue into her but the angle isn't cooperating for him so he puts her thighs on his shoulders then slides her forward for better access.\n\n\"Whoa!\" Jessica exclaims as she slips forward. She starts to ask him what's going on but his tongue pierces her and the question becomes a cry of pleasure.\n\nJake works her with his tongue for several moments before slipping a finger into her. Her walls squeeze his probing digit as he works it diligently in and out of her while continuing to lick her. Jessica moans out his name as her hips start to pump in rhythm with his finger.\n\n\"Jake, I'm coming!\" She cries out after a few minutes of action.\n\nJake continues to tongue and finger her as she rides her wave of pleasure and soon after, peaks again. This time her hands grab his head, holding him to her as her calves cross and lock behind his back pulling him in even more.\n\n\"Jake!\" She shouts as pulse after pulse of orgasmic joy radiates through her. It takes her a moment to catch her breath and release Jake, who slumps back to catch his own breath.\n\n\"I take it... you liked that?\" Jake asks between taking gulps of air in.\n\n\"If... you're trying to ruin me for other men, Jake, I'm thinking you are very close to mission accomplished.\" She shares.\n\n\"Only very close?\" He teases.\n\nShe smiles. \"Get me up to your bed and let's see how much closer you can get.\"\n\nThey don't even bother to stop the movie or turn off the television before racing up to Jake's bedroom.\n\n****\n\nIn Jake's bedroom, they quickly strip off the rest of their clothes and climb into his bed. They kiss for several minutes before Jessica reaches down and begins to stroke Jake.\n\nHe gasps at her light touch and shudders as she slides her hand up and down his shaft.\n\n\"Are you ready?\" She asks him.\n\n\"I think so.\" he answers.\n\nShe smiles, kisses him quickly then pushes him up so she can center herself on the bed.\n\n\"This way first then we can try some others.\" She tells him as she spreads her legs for him.\n\nJake gets on his knees between her legs and leans in. The bare head of his cock brushes her slit for a second before he backs away.\n\n\"You're sure on the no condom thing?\" He asks.\n\nShe nods. \"I want you to be my first without one.\" She answers as she pulls him back to her.\n\nJake centers himself again and as the night before he slides his cock up and down her slit, gathering her natural lubricant onto himself. Jessica sighs contentedly as his spongy crown nudges her clit a few times before he presses into her.\n\nShe sucks in a breath as he penetrates her then slowly lets it out as he slowly sinks into her.\n\n\"Oh god, Jake!\" Jessica moans as he slowly fills her.. \"I could really get used to this feeling.\"\n\nJake groans himself at how different it feels without the thin membrane of latex between him and Jess. She feels hotter and so much wetter that he nearly comes as he's sliding inside.\n\n\"Uh huh!\" Jake grunts afraid that he'll shoot if he tries to speak.\n\n\"Are you close, baby?\" Jessica asks.\n\nJake's nod is barely perceptible as if any movement will cause him to go off. Jessica grins and rolls her hips forward.\n\n\"Oh god!\" He cries and stiffens in her.\n\n\"Oh yes!\" She moans as she feels the first shot of cum enter her.\n\nHe unloads several shots into her before nearly collapsing on top of her. He catches himself on his elbows however and lays there trying to catch his breath.\n\n\"Sorry... I'm sorry, Jess.\" He apologizes.\n\n\"Don't apologize, Jake. I made you come. I wanted you to do it.\" She giggles.\n\n\"I could have held it. I think.\" He laughs.\n\nShe shakes her head. \"No, you couldn't have but now that that one's out of the way we have all night.\"\n\n\"We do at that.\" he smiles.\n\n\"Let me go freshen up a bit then I get to ride.\" She tells him.\n\n\"Ride?\" He asks then a grin spreads across his face.\n\n\"Yes!\" Jessica tells him as she pushes him back. \"You had your turn on top, Jake. I want mine now.\"\n\nJake chuckles and rolls to the side. Jessica gets up gingerly and makes her way to the bathroom to clean up his earlier deposit.\n\nJessica returns a few minutes later to find Jake laying in the middle of the bed with his erection standing tall and proud for her.\n\n\"That looks daunting.\" She remarks as she climbs onto the bed. \"I'm not chickening out though.\"\n\nShe straddles Jake's waist and he pulls her down to kiss her. The kissing goes on for several minutes giving her time to relax. While still kissing she snakes her hand down between them and grasps him.\n\n\"I can do this.\" She thinks to herself as she places his head against her slit. She struggles for a second to get him just right but once she has him centered, his head pops in.\n\n\"Oh, wow!\" She gasps feeling him in her again. \"Forget about me getting used to that. It feels better each time!\"\n\n\"Uh huh!\" Jake agrees.\n\nThey resume kissing for a moment then Jessica begins to slide her hips down, slowly taking more of him into her.\n\n\"Oh!\" She sighs as she gets him all inside.\n\n\"Are you okay, Jess?\" He asks.\n\nShe nods her head somehow feeling fuller than before.\n\n\"Just let me... let me get used to this.\" She pants.\n\nJake kisses her lips and cheeks as her face hovers above his. Her still minty breath mixing with his until she begins to move her hips.\n\n\"Oh god!\" She shouts as her hands go to his chest pushing herself up until she's seated on him.\n\nHer fingernails find purchase on his chest as she thrusts her hips to and fro, picking up speed as her orgasm builds.\n\nJake moves his hands up to cup her bouncing breasts. When he fondles her nipples she throws her head back and emits a louder moan. He fights the urge to lean up and suck on them for fear of throwing her off her rhythm.\n\n\"There'll be plenty of time for that later.\" He thinks as he continues to caress her pink protrusions.\n\nJessica's hips speed up and she pushes herself up more to a nearly seated position on Jake's groin. He loses his grip on her breasts but slides his hands down to her hips and holds her as she bounces up and down on him.\n\n\"Jake! Jake! Jake!\" She shouts as she gets closer to her release.\n\n\"Tell me what you need, Jess.\" Jake tells her.\n\n\"Fuck me!\" She shouts as she leans back down towards him.\n\nHer breasts are now in his face so he sucks in one of her nipples.\n\nShe gives him a very appreciative groan before he moves to the other one that's anxiously awaiting his mouth. He grips her waist then begins to thrust his hips as she asked.\n\n\"Yes!\" She shouts, her eyes going wide at the new sensation of the pair working in tandem. \"Just like that! Oh God, I'm gonna come for you!\"\n\nTheir bodies are slapping together, in unison now, as both teens race for their peaks.\n\n\"Jess!\" Jake moans aloud feeling his impending orgasm rapidly approaching.\n\n\"Yes! Yes!\" She shouts then drops her head beside his. Her face, hair and body are slick with sweat that Jake tastes as he kisses her neck.\n\nJessica makes a strained sound at the contact and her body goes stock still.\n\n\"Coming!\" She groans into Jake's neck. \"Oh god, I'm coming!\"\n\nJake feels her walls gripping his cock and knows the sensation has him on the brink. He holds Jessica's hips firmly and begins to slam his up into her.\n\n\"Oh god!\" She shouts again and pushes her self up.\n\nJake continues to hammer her from his bottom position until his orgasm washes over him.\n\n\"Coming!\" he shouts.\n\nJessica feels him stiffen in her but he continues to pound his hips up into her.\n\n\"Fuck! Jake! I'm coming again!\" She cries out as a second orgasm rocks her as Jake again spews forth into her. Jake pours all of himself into her before he slumps back onto his pillow.\n\nJessica falls forward onto him, out of breath and still shuddering from her multiple orgasms. Jake smiles as her walls continue to spasm around him almost as if Jessica's kitty is milking every drop out of him. She lies on top of him, breathing heavy, unable to speak for several minutes as she slowly comes down from her orgasmic high.\n\n\"I'm too heavy.\" She sighs after a few minutes.\n\n\"Nonsense.\" Jake says as he wraps his arms around her and gives her a squeeze. \"I can sleep just like this.\"\n\nShe giggles. \"We'd better not try that, Jake. I'm a bit too sore for what might happen if we stay like this.\" She tells him.\n\n\"I didn't hurt you, did I?\" Jake asks leaning back so she can look into her eyes.\n\nShe smiles at him then gives him a kiss. \"It's a good kind of sore, baby. An amazing kind of sore, actually.\" She assures him. She slides off him then cuddles to his side.\n\n\"So, I'm not like too... big for you?\" He asks.\n\nJessica giggles. \"I think that you're just a little bigger than Sean was but you use yours so much better, Jake.\"\n\n\"Want me to go grab a washcloth and clean you up?\" Jake offers.\n\n\"In a few minutes.\" She answers cuddling in closer. \"I just want you to hold me right now.\"\n\nJake nods and pulls her closer with one arm while pulling his blanket up with his other hand before draping is across her as well. \"Gladly.\"\n\n****\n\nJake wakes up early the next morning and watches Jessica sleeping for a few minutes before kissing her lightly.\n\n\"Morning.\" she murmurs without opening her eyes.\n\n\"Morning, gorgeous.\" Jake whispers to her. \"I'm going to get up and start breakfast.\"\n\n\"I'll help.\" She says though her eyes are still closed.\n\n\"It's on me this morning.\" He tells her. \"You sleep in a little more.\"\n\n\"'Kay.\" She answers but whimpers when Jake starts to get out of bed. \"Miss my heater already.\"\n\n\"You'll be thankful when you smell the coffee and eggs.\" He tells her.\n\n\"Mmm.\" She comments and smiles then commands. \"Kiss me again before you go.\"\n\nHe smiles and kisses her softly on her lips before stepping away to start breakfast.\n\nA few minutes later Jake is flipping over the sausage when Jessica enters the kitchen wearing just his football jersey.\n\n\"Something smells good.\" She comments as she walks over to him.\n\nJake's eyes don't leave the sight of her long legs until she's standing in front of him.\n\n\"You're going to burn your sausage.\" She tells him.\n\n\"Worth it.\" He remarks with a smile.\n\nJessica shakes her head then leans in and kisses him.\n\n\"I'm glad that you can do what you did to me last night and still look at me like that, Jake.\" She comments as she chooses what coffee she wants.\n\n\"How was I looking at you?\" Jake asks as he flips the sausage patties.\n\n\"Like you want what we did last night to happen again.\" She answers.\n\n\"Over and over and over again is more like it. There's a position that we didn't get to that really interests me.\" He states.\n\n\"Naughty boy.\" Jessica teases him. \"We'll get there but it'll take a day or two, I mean.\"\n\n\"Still sore?\" he asks genuinely concerned.\n\n\"A little.\" She answers. \"It's still a good kind of sore, Jake. My kitty's just not used to the workout she's had these past two amazing days is all.\"\n\n\"Amazing, huh?\" Jake asks with a chuckle.\n\n\"Very.\" Jessica answers then kisses his cheek.\n\nJake's smile spreads quickly across his face then he pulls the sausage patties from the frying pan.\n\n\"How do you want your eggs?\" He asks.\n\n\"You sit. I'll make the eggs.\" She tells him.\n\n\"I'm cooking.\" He argues. \"My thank you for this weekend.\"\n\n\"Your thank you?\" She asks. \"Uh, I believe it's me that should be thanking you or have you forgotten just how many times you got me off this weekend?\"\n\n\"I haven't forgotten.\" He answers. \"God, I don't think I'll ever forget the cute faces you make or how your breath hitches right before.\"\n\n\"It does?\" She asks having not noticed that before.\n\nJake nods. \"Yep. Your breath hitches, your eyes roll back a bit before you close them and you bite your bottom lips so cutely right before you announce that I'm making you come.\"\n\n\"Good to know.\" She smiles. \"I guess that since you're insistent on cooking for me I'll take my eggs scrambled.\"\n\n\"Scrambled, huh?\" Jake asks.\n\n\"On second thought, make them over easy.\" She amends with a smile. \"Enough things got scrambled last night. I need an easy morning.\"\n\n****\n\n\"Something sure smells good.\" Jake's dad comments as he enters their house just a little bit before five.\n\n\"That would be Jess's cooking.\" Jake answers taking his dad's suitcase from his hand. \"Welcome home.\"\n\n\"Thanks, baby.\" Jake's mom says as she gives him a hug in greeting.\n\nHe takes her suitcase as well then nods towards the kitchen.\n\n\"Go in and say hey to Jess while I get these up to your room.\" He tells them as he heads towards the stairs.\n\nThe Gibson's walk into their kitchen and Jess turns and gives them a smile.\n\n\"Welcome back!\" She says then looks down. \"Oh, I kind of had to borrow an apron.\"\n\n\"That's fine, sweetie.\" Mrs. Gibson says then steps over and gives Jessica a hug. \"Good weekend?\"\n\n\"Great weekend.\" Jessica answers with a smile with a bit of blush creeping onto her cheeks.\n\n\"What smells so good, Jess?\" Mr. Gibson asks.\n\n\"Fried pork chops with a bit of gravy, home fries and corn on the cob.\" She answers. \"It should all be ready in about five minutes, give or take. Oh and a surprise dessert.\"\n\n\"Surprise dessert you say?\" Mr. Gibson sits down at the kitchen table and smiles. \"I'll just stay here and salivate until this dessert is ready.\"\n\n\"No dessert until you eat your dinner, young man!\" Jessica teases him.\n\nHe chuckles and shakes his head. \"My house, my rules, much younger lady.\" He counters.\n\n\"We need to wash up, Wes.\" Mrs. Gibson reminds him as she tugs him to his feet. \"Jessica, do you need any help?\"\n\n\"There comes all the help I need there.\" Jessica comments nodding towards Jake as he enters the kitchen. She waves a wooden spoon at him then nods towards the gravy. \"Stir?\"\n\nJake nods, takes the spoon from her and begins to lean in for a kiss but wonders if he should. Jessica answers him by leaning in and giving him a quick kiss.\n\n\"This is about all that she's let me do for this.\" He tells his parents. \"I'm the designated stirrer.\"\n\n\"Not true. You chopped up and seasoned the home fries plus you helped me shop for all of this.\" Jessica reminds him.\n\n\"That's right, Jess, you put him to work!\" Mrs. Gibson laughs as she and Mr. Gibson walk towards the stairs. \"We're going to clean up and we'll be back down in a few minutes.\"\n\n\"Five minutes. Or a little less.\" Jessica reminds them.\n\nAs they ascend the stairs, Mr. Gibson comments to his wife.\n\n\"They certainly look to have been busy in the kitchen. It's really smells great.\"\n\n\"That it does.\" She answers. \"I'm just glad that everything was great as well, at least according to Jessica.\"\n\nHe raises his eyebrows. \"So you think they... ya know?\"\n\nShe nods her head. \"Didn't you notice how her face lit up when Jake came back and how when he took the spoon from her, his fingers lingered on hers for a bit longer than necessary?\"\n\n\"More than usual you mean?\" He asks with a smile. \" I will say that Jake did seem awfully chipper when we got here and he's got this grin on his face that won't seem to disappear.\"\n\n\"I know that grin very well.\" Mrs. Gibson comments. \"You get the same one.\"\n\n\"Do not.\" He playfully argues.\n\n\"No? Hmm, wonder who it was that wore that grin all this weekend then?\" She ponders.\n\n\"Okay, it was me.\" He answers and pulls her into his arms before kissing her.\n\n\"It was definitely you, mister.\" She giggles as they part.\n\n\"True but I don't look as goofy as Jake does with it.\" He jokes.\n\n\"My son doesn't look goofy!\" She argues.\n\n\"He does but he gets it honest.\" Mr. Gibson laughs. \"Now let's get cleaned up and get back to the food. I'm starving!\"\n\n****\n\n\"Sorry I couldn't make it fresh.\" Jessica says as she sits a plate of peach cobbler topped with vanilla ice cream in front of Mr. Gibson. \"Maybe over the summer when peaches are in season I can make one from scratch.\"\n\n\"It's wonderful, dear.\" Mrs. Gibson assures her as Jake hands her a plate. \"You two did too much as it is.\"\n\n\"I think we did just enough, mom.\" Jake comments as he adds ice cream to Jessica's cobbler.\n\n\"How far did you get into your project?\" Mrs. Gibson asks.\n\n\"We're done.\" Jessica answers. \"We got all our samples collected and tested yesterday then finished up the notes when we got back from church today.\"\n\nThe surprise that they got their work done over the weekend shows on Jake's parents faces.\n\n\"And you made this wonderful meal, too?\" Mr. Gibson asks sounding impressed. \"You two were on a tear today it sounds like.\"\n\n\"I guess we were.\" Jake answers as the dryer chimes in the background.\n\n\"Laundry too, Jake?\" Mrs. Gibson asks.\n\nJake and Jessica share a quick embarrassed look before Jake answers.\n\n\"We were going to cuddle under a couple of blankets last night and watch a movie but they smelled a bit musty so I tossed them in the wash before we started cooking.\" He explains.\n\nHis mother raises her eyebrows but doesn't comment. Jessica looks over at the clock on the oven.\n\n\"I should probably be getting home.\" She says. \"Mom and dad are expecting me anytime now.\"\n\n\"You just ate, Jess. Surely you don't have to run off so quick.\" Mr. Gibson says.\n\n\"I'm afraid so, sir.\" Jessica answers. \"Sarah will be all excited that I'm back, it'll take me awhile to calm her down and we have school tomorrow.\"\n\nJessica starts gathering her stuff and Jake picks up her suitcase.\n\n\"I'll be back in a few.\" He says over his shoulder as he follows Jessica outside.\n\nMrs. Gibson gets up and goes to the window.\n\n\"Pam, what are you doing?\" Mr. Gibson asks.\n\n\"Watching.\" She answers.\n\n\"Shouldn't you give them some privacy?\" He argues.\n\n\"They had all weekend to have privacy.\" She tells him. \"Now I want to see just how that went.\"\n\n\"Pam,\" He warns her then chuckles. \"At least tell me what's going on out there.\"\n\n\"I will.\" She promises him.\n\nOutside Jake is putting Jessica's bag on her passenger seat as she waits for him.\n\n\"Gonna miss me?\" She giggles.\n\n\"You know it.\" He laughs.\n\n\"I'm going to miss you, too.\" She answers. \"Sleeping without you is really going to suck now that I know how amazing it feels. I think our parents played a cruel trick on us this weekend.\"\n\n\"Letting us get a taste of being with each other only to have it taken away?\" Jake asks. \"I was thinking the same thing.\"\n\n\"We'll get permission to be at Staci's every weekend we can manage.\" She promises him.\n\n\"Sounds like a plan.\" He says.\n\nShe leans in and kisses him. As her tongue teases his, his hands slide down and gives her ass a squeeze.\n\n\"Jake, your folks might see us!\" She says pulling back.\n\nJake looks back towards the house and sees the curtain in the living room moving.\n\n\"Oops.\"\n\n****\n",
        "Jessica begins to laugh when she turns onto her street and sees three cars that she recognizes sitting in her driveway.\n\nOn her front porch with her mom and Sarah are Staci, Shelly, Jody Roxie, C.C. and Marybeth.\n\n\"Sissy!\" Sarah shouts and runs towards Jessica as she gets out of her car.\n\nJessica snatches her up in a hug while laughing. \"You act like you haven't seen me in five days instead of, what, five hours?\"\n\n\"But I missed you.\" Sarah tells her then she looks into Jessica's car. \"Where's Jake?\"\n\nThis gets a lot of giggling from the porch while Jessica just shakes her head.\n\n\"Home with his parents.\" Jessica tells her. \"We aren't attached at the hip, Sar-bear.\"\n\nOn the porch there's a series of coughs and Jessica shakes her head again.\n\n\"We aren't, you guys!\" She playfully shouts at the group.\n\n\"Sure thing, Jess.\" Staci calls back.\n\n\"Whatever you say, Jess.\" Roxie adds.\n\n\"And I call them my friends, Sarah.\" Jessica says as she puts Sarah down and pulls her bag from her car.\n\n\"Did you all run dad off?\" She asks as she and Sarah join everyone on the porch.\n\n\"He got called into a meeting with the project he's working on.\" Dr. Golden explains.\n\n\"Of course.\" Jessica answers. \"I suppose the rest of you are here to visit with Sarah?\"\n\n\"We did that already.\" Staci answers. \"She really makes the best tea for her tea parties.\"\n\n\"Best I've ever had.\" Jody comments.\n\n\"And the best conversation, too.\" Marybeth adds.\n\n\"Okay, okay, I get it.\" Jessica says. \"You all want to hear about the weekend.\"\n\n\"I hate to miss this conversation but I think someone shouldn't hear all about this weekend, do you, Jess?\" Dr. Golden asks.\n\n\"With this bunch, oh no, definitely not.\" Jessica answers.\n\n\"I can call Ray if you want to stick around and hear about it, Dr. Golden.\" Staci suggests.\n\n\"I really shouldn't but I am very curious about it.\" Dr. Golden admits.\n\nJessica sighs and pulls out her cell phone.\n\n\"I've got this, Staci.\" She tells them as she dials a number. After talking for a few seconds she hangs up and turns to Sarah.\n\n\"Do I have to go? Why can't I stay and hear about you and Jake? I like Jake. He makes you smile and gives you sparkly eyes.\" Sarah tells them.\n\n\"Sparkly eyes?\" Staci asks.\n\n\"Uh huh, she was smiley and had sparkly eyes when they came over yesterday and made me pancakes.\" Sarah explains.\n\n\"Ooo, sparkly eyes!\" Shelly teases.\n\n\"And all smiley!\" C.C. jumps in.\n\n\"Could you all curb your tongues at least until Jake gets here?\" Jessica asks.\n\n\"Jake's coming over?\" Sarah asks.\n\n\"He is and he said something about taking a certain little girl for ice cream at Smitty's.\" Jessica teases.\n\n\"Ice cream?\" Sarah asks and Jessica nods. \"When does he get here?\"\n\n\"Not soon enough.\" Jessica quips. \"Help me get my bag to my room and he'll probably be here by the time we're done.\"\n\nSarah nods and grabs the handle of Jessica's bag.\n\n\"This is pretty light. You didn't take a lot of clothes with you, huh?\" Sarah asks sending the teen girls into a fit of giggling.\n\nJessica sighs and shakes her head as she follows Sarah into the house.\n\n****\n\nJake pulls into Jessica's driveway and is surprised at the group assembled on the porch.\n\n\"Hey Jake!\" they all say in unison as he gets out of his car.\n\n\"Ladies.\" He nods his face blushing slightly at all the attention.\n\nSarah hops up from the bench and runs to him.\n\n\"Jake!\" She shouts jumping into his arms.\n\n\"Someone's excited about ice cream.\" He laughs as he hugs her.\n\n\"Uh huh!\" Sarah giggles as she playfully flails in his arms.\n\n\"It's all she's talked about for last five minutes.\" Dr. Golden tells him. \"Well that and how slow you were being about getting here.\"\n\n\"Sorry about that, Sarah.\" Jake apologizes. \"I had to be teased by my dad about coming right over here after saying goodbye to Jess already.\"\n\n\"This isn't a problem is it?\" Jessica asks.\n\nJake shakes his head. \"Nope. I told them that someone was soooo good for her parents that she earned herself a special treat on me.\" He says.\n\n\"I was really, really, really good!\" Sarah states causing a ripple of laughter to roll through the group.\n\n\"Wow, that does deserve a treat then.\" Jake comments. \"I just need to move your car seat to this car and...\"\n\n\"You can take my SUV, Jake.\" Dr. Golden tells him. \"It'll be easier and I trust you.\"\n\n\"If you're sure, ma'am.\" Jake states.\n\n\"Positive.\" Dr. Golden answers and hands him her keys.\n\n\"Sarah, you are to take care of my Jake, okay?\" Jessica asks her. \"Can you do that for me?\"\n\nSarah nods. \"Course I can. I love him, too.\"\n\nJessica giggles and then kisses her cheek. \"Who doesn't?\" she comments then kisses Jake briefly.\n\n\"I'll have her back in like a half an hour. Is that enough time?\" He asks looking at all the girls.\n\n\"That should be plenty of time, Jake.\" Shelly assures him.\n\n\"If Jessica talks fast that is.\" Staci smiles at him.\n\nJake shakes his head then turns to help Sarah get buckled in.\n\n\"Got it?\" He asks her as he checks.\n\n\"Got it.\" She confirms.\n\n\"We'll be back soon.\" He tells Jessica then gives her a kiss.\n\nA chorus of  Ooo's  ring out causing the pair to blush.\n\n\"You two are so cute.\" C.C. comments as they watch Jake and Sarah driving away. \"And he is so good with your little sister! I am impressed!\"\n\n\"Yeah, they became fast friends when they met.\" Jessica tells her then looks around. \"So are we doing this out here or are we going inside where it's warmer?\"\n\n\"Inside so we can all get comfy and I can make you all some hot chocolate.\" Dr. Golden tells them.\n\n\"I thought you wanted to hear all about this weekend, mom.\" Jessica teases her.\n\n\"I'll leave all the more intimate details to your friends to hear about.\" She tells her as they all take a seat in the living room. \"Just tell me that everything went... better.\"\n\n\"It went way better, mom.\" Jessica assures her with a smile.\n\n\"So not a repeat of the Sean thing then?\" Dr. Golden asks.\n\n\"The furthest thing from a repeat of that.\" Jessica answers.\n\nDr. Golden nods then leans in and tightly hugs her.\n\n\"I'm so happy for you, baby.\" She whispers in her ear then pulls back. \"Okay, I'll start the cocoa so the rest of you can jump in with questions. Oh, and ladies try to keep it down. I don't need to know everything.\"\n\n\"Yes, Dr. Golden.\" The girls answer in almost unison.\n\nOnce she leaves the room, Staci smiles at Jessica.\n\n\"Okay, Jess the mess, spill it. All of it.\" Staci orders.\n\n\"It was really great. Really, really great.\" Jessica answers.\n\n\"We need details, Miss Sparkly Eyes.\" Roxie teases her. \n\n\"That had better not stick.\" Jessica tells them. \"I don't need to walk down the hallways with you all yelling Miss Sparkly Eyes at me.\"\n\n\"We'll try not to.\" Marybeth giggles.\n\n\"No getting us off track, Jessica.\" Staci tells her. \"We're here for details. Did you guys do it Friday night?\"\n\n\"We did.\" Jessica answers.\n\n\"Did you use a condom?\" Jody asks.\n\n\"Yes.\" Jessica responds. \"We thought that it would be better if we used one the first time. I then proceeded to throw them all over the room.\"\n\n\"You did what now?\" Roxie asks.\n\nJessica explains about the box and they all share a laugh.\n\n\"Seriously, they flew every where you guys!\" Jessica tells them.\n\n\"Except for the chosen one.\" Marybeth giggles.\n\n\"Yes, the one rubber to rule them all.\" Jessica laughs.\n\n\"You did find them all, right?\" Shelly asks. \"I'd hate for my Aunt Pam to find one hanging around.\"\n\n\"We found them all.\" Jessica nods. \"I counted three different times to be sure. Oh and if anyone needs any, we've got nine left over.\"\n\n\"So you did it three times?\" C.C. asks then looks around the group. \"They're sold in like twelve packs right?\"\n\n\"He bought a ten pack to be on the safe side but we just used the one to start with.\" Jessica says. \"We went bare the next two times. So, yeah C.C., I guess that we did do it three times but only once with a condom.\"\n\n\"Only three times?\" Staci asks. \"I figured that Jake would be all backed up and you two would have gone all night long.\"\n\n\"I honestly think I might have died if we tried. I came so many times that I couldn't believe it. That and I was little too sore after the two times we did it Saturday night.\" She confesses.\n\n\"Sore?\" Marybeth asks. \"Oh does that mean that Jake is um... big?\"\n\n\"This is where I help your mom with the cocoa, Jess.\" Shelly announces. \"I love you and I love my cousin, but there are some things which even I don't want to know about.\"\n\nShelly starts to leave the room but stops at the door.\n\n\"He's not like huge or anything?\" She asks then shakes her head. \"Never mind. I did not ask that. I'm helping with the cocoa.\"\n\nJessica shakes her head and waits until Shelly disappears into the kitchen.\n\n\"So does Jake have a huge dick or what?\" Roxie asks.\n\n\"Roxie!\" C.C. shouts.\n\n\"Well, we all want to know don't we?\" Roxie counters.\n\n\"Its not huge.\" Jessica tells them. \"I think it's just a bit bigger than Sean's was it's just that I'm not used to that much action in one weekend.\"\n\n\"That makes sense.\" Staci comments. \"He did take his time with you and all, didn't he?\"\n\n\"Each and every time.\" Jessica assures her. \"He didn't just shove it in and hump away. He nudged himself in and... God, I can't talk about this with you guys.\"\n\n\"You had better, I'm getting wet over here.\" Roxie comments.\n\n\"Roxie!\" C.C. shouts.\n\n\"Well, I am.\" Roxie tells her. \"Go on, Jessica.\"\n\n\"Fine!\" Jessica laughs. \"He slowly pushed himself in and... God, I swear I felt every vein on him as he slid in.\"\n\n\"Fuck, that's hot.\" Marybeth sighs.\n\n\"It really was.\" Jessica confirms.\n\n\"I'm glad he was that considerate with you.\" Staci says. \"Ray does that slow entry thing and Oh my God, it feels so good!\"\n\n\"Better every time right?\" Jessica asks with a sly grin.\n\n\"You better believe it.\" Staci enthuses.\n\n\"So it sounds like everything was good then?\" Marybeth asks then laughs. \"Of course it was. It's Jake. He did whatever it was that he talked to Bobby about so I know firsthand that it had to be amazing!\"\n\n\"Can't argue that.\" Staci giggles. \"Jake Gibson is a sex god and Jess is a very lucky girl.\"\n\n\"I don't know about Jake being a Sex God and all that bit I am very lucky!\" Jessica enthusiastically agrees.\n\n****\n\nAfter getting Sarah to agree to split a brownie sundae she and Jake take a seat in a booth at Smitty's.\n\n\"We're not going to eat outside?\" Sarah asks as Jake opens her spoon for her.\n\n\"It's a little too cold to eat ice cream outdoors.\" Jake tells her. \"Plus, I can't have you getting a cold what with your birthday coming up.\"\n\n\"I hate being sick on my birthday.\" Sarah tells him as she dips into the sundae.\n\n\"Yeah, that's like the worst day to be sick.\" Jake agrees.\n\nBernice Smitty walks up to the booth with a couple of cups of water and smile on her face.\n\n\"Date night with your man, sugar?\" She asks Sarah with a wink.\n\n\"He's my sister's man.\" Sarah corrects her.\n\n\"Oh he is, is he?\" Bernice asks.\n\n\"Uh huh.\" Sarah answers after a bite of vanilla ice cream covered brownie. \"They spent the weekend together and he probably put a baby in her belly.\"\n\nJake, who is in the process of taking a sip of water, promptly begins to choke on it. Bernice's eyes go wide at Sarah's forthrightness then begins to pat Jake on his back.\n\n\"Breathe, Jake.\" She tells him doing her best not to laugh.\n\n\"Are you all right, Jake?\" Sarah asks as she happily shovels in another spoonful of sugary goodness into her mouth.\n\n\"Doubtful.\" Jake answers then sips down some water.\n\n\"I'm going to go back to the kitchen, Jake.\" Bernice tells him as she steps away from the table. \"You've got your hands full with this one.\"\n\n\"That I do.\" Jake agrees then when Mrs. Smitty is gone he turns to Sarah. \"Sarah, where did you hear about the baby in the belly thing?\"\n\n\"My friend Tiffany said it today.\" Sarah tells him. \"I told her that you and sissy had a sleepover and she said it. Am I gonna be an aunt, Jake?\"\n\n\"Not for a long, long time, Sar-bear.\" Jake tells her.\n\n\"Okay.\" She answers and goes back to her sundae.\n\n\"And Sarah, try not to share that Jess and I spent the weekend together. People might get the wrong idea.\"\n\n\"Like when Tiffany said that you put a baby in Jess's belly? That was a wrong idea.\" Sarah says.\n\n\"That's a perfect example.\" Jake tells her.\n\n\"But Roxie, Staci and all your friends know.\" Sarah points out. \"It's okay that they know?\"\n\n\"It's tough to keep secrets from them.\" Jake tells her.\n\n\"Because they love you guys?\" Sarah asks. \"That's all they talked about with mom and me while they were waiting on sissy to get home.\"\n\n\"They did huh?\" Jake asks.\n\n\"Yep.\" Sarah states. \"They were really excited to hear all about your weekend.\"\n\n\"I'll just bet they were.\" Jake shakes his head. \"Ready to head back and see if they're done yet?\"\n\n\"I can't finish it all.\" Sarah says sadly looking at half her sundae still in front of her.\n\n\"Let's take it home to your mom. How's that sound?\" Jake asks.\n\n\"Not Jess?\" Sarah asks.\n\n\"She had a big desert already at my house but you can see if she wants some too.\" Jake answers.\n\nSarah nods her head in agreement and starts to get up but Jake stops her then cleans her face as best he can with the napkins. As the pair head towards the door, Mrs. Smitty calls out to them.\n\n\"Ya'll come back soon. And Jake, be careful where you go putting babies now.\" She laughs.\n\nJake shakes his head and chuckles. \"Will do, ma'am.\"\n\nWhen they arrive back at the Golden's home, Jake helps Sarah out her car seat then follows her energetic form up the front steps.\n\n\"Mom, I bought you ice cream!\" Sarah announces as she bursts through the door.\n\n\"Thank you, baby.\" Dr. Golden laughs. \"Put it in the freezer and I'll eat it in a few minutes.\"\n\nAs Sarah hurries off to follow her instructions Jake hands Dr. Golden her keys.\n\n\"You might want to have a talk with Sarah about her friend Tiffany.\" Jake says then shares what happened at Smitty's with her and Jessica.\n\n\"Oh no, she did not ask you that!\" Dr. Golden flushes red with embarrassment.\n\n\"In front of Mrs. Smitty! I cannot believe she did that!\" Jessica comments.\n\n\"'Friad so.\" Jake answers. \"I did my best to tell her that didn't happen but it would probably be better explained by you, ma'am.\"\n\n\"I will and I am so sorry, Jake.\" Dr. Golden apologizes. \"I'll have a talk with Tiffany's mom as well.\"\n\n\"I'll have a little sisterly talk with her as well to reinforce what you told her about people getting the wrong idea.\" Jessica assures him.\n\n\"Try not to be too hard on her.\" Jake says. \"She's just parroting what she was told.\"\n\nDr. Golden can't help but laugh as Sarah returns.\n\n\"What did I miss?\" She asks innocently.\n\n\"You missed Jake trying to take care of you just as much as he takes care of your sister.\" Dr. Golden tells her. \n\n\"Of course he was.\" Sarah answers with a grin. \"Jake loves me.\"\n\n****\n\n Monday, November 6th \n\nAs Jake and Jessica walk the lower hallway towards Ms. Simpson's class, he bears the brunt of hugs from all of girls that were at Jessica's house Sunday.\n\n\"What was all that about?\" He asks Jessica as he wipes away Staci's lip gloss from his lips.\n\n\"They're very proud of how you handled the weekend and me.\" Jessica answers with a giggle. \"Jake Gibson, sex god.\"\n\n\"Excuse me?\" He asks.\n\n\"Just something Staci said and I tend to agree with her. I mean, I am now an expert on the experience.\" Jessica laughs.\n\n\"One weekend makes you an expert?\" Jake asks.\n\n\"Maybe expert is a bit much. How about, I am acquainted with the experience?\"\n\n\"Better.\" He laughs.\n\n\"And looking to be very much more acquainted soon, Jake.\" She giggles as they walk into Ms. Simpson's room.\n\n\"Good morning, you two. Good weekend?\" Ms. Simpson greets them.\n\n\"Great weekend!\" Jessica enthuses causing several of their classmates ears to perk up.\n\n\"One of the best.\" Jake chuckles.\n\nMs. Simpson gives them a smile. \"From the looks on both your faces, I can tell that it must have been pretty amazing.\"\n\n\"It was that.\" Jake answers.\n\n\"Good. Glad you're in a good mood because I need to ask you both something.\" She states. \"You both will be at the Drama club meeting right after school won't you?\"\n\n\"Will it be a quick one?\" Jessica asks. \"I've got practice and so does Jake.\"\n\n\"And we've got to hit the planetarium after practice to see about Sarah's birthday party and presents.\" Jake adds.\n\n\"Busy day for you both.\" Ms. Simpson comments.\n\n\"It is but we'll always make time for you, Ms. Simpson. What is it that you need?\" Jessica asks.\n\n\"Since we're doing Beauty and the Beast and it's a musical I wondered if either of you know anyone who could help with sound.\" She explains. \"Jake, I know we usually rely on you for both lights and sound but a few numbers that pop up will be too much a strain on you I think.\"\n\nJake nods. \"We looked at the script last week and some numbers did look pretty daunting.\" He agrees. \"I can check with Bobby at lunch and see if he's down to help out.\"\n\n\"He'd be perfect since he's helped out in the past.\" She answers with a smile. \"If you can talk him into it, have him come with you two right after school.\"\n\n\"He'll do it, Ms. Simpson.\" Jessica assures her. \"He owes us so getting him to help out won't be a problem.\"\n\n****\n\n Wednesday \n\nAmy Reid looks over at the concern on her friend's face as they pull into the Carter High School parking lot.\n\n\"Does it feel weird being back?\" Amy asks.\n\nJennifer Young's nod is barely perceptible as she's too busy scanning the parking lot for Jake's old Mustang.\n\n\"Earth to Jenny.\" Amy says waving her hand. \"Anyone home in there?\"\n\n\"Maybe this was a bad idea.\" Jennifer comments. \"We should go. This was a bad idea.\"\n\n\"Jenny, we're already here.\" Amy points out. \"We might as well go in and see if Bethany is right about seeing your ex.\"\n\n\"It couldn't have been Jake.\" Jennifer states as she parks near a tungsten gray Mustang. \"He would have been at football practice. There's no way he'd be at a volleyball match.\"\n\n\"Are you trying to convince me or yourself?\" Amy asks.\n\n\"A bit of both.\" She answers.\n\n\"Come on, you can at least show me around then we can watch our team get crushed by the number one team in the state and you can say that at least you tried to see your ex.\"\n\nAmy is out of the car before Jennifer can protest. She blows out the breath that she didn't realize she had been holding then joins her friend.\n\n\"You don't see an older Mustang anywhere do you?\" Jennifer asks as she looks over the parking lot again.\n\nAmy looks around then shakes her head. \"I don't see one. Wouldn't he have practice though? Don't the playoffs start for them this week?\"\n\n\"The playoffs start this week but they have a bye in the first round since they're ranked second in the state.\" Jennifer tells her.\n\n\"Is that just you keeping up with your old school or your old flame?\" Amy teases.\n\n\"A little of both.\" Jennifer answers then amends. \"A little more towards the latter if I'm being honest.\"\n\n\"You've shown me his pic so I get why you're looking.\" Amy laughs then pauses as they reach the gym. \"Whoa!\"\n\nThe gymnasium is packed with Wildcat fan's taking up all of the bleachers on their side and spilling over to the Wolfpack side of the court. The Wildcat's cheer squad is going through a series of cheers that they would normally perform at the football games with a few minor tweaks.\n\n\"They have cheerleaders?\" Amy asks. \"I thought only football had those.\"\n\n\"Those are the football cheerleaders.\" Jennifer tells her as she recognizes several of the girls on the squad. \"The one leading the cheers is the Staci I told you about. I assume that she's still Patrick's go to bed warmer.\"\n\n\"She's cute.\" Amy remarks as they take a seat on the bleachers behind the Wolfpack's bench.",
        "\"Hey you guys made it!\" Bethany smiles as she sees her friends.\n\n\"We're here to support you guys.\" Amy says then pumps her arms and shouts. \"Go Wolfpack!\"\n\nBethany laughs and shakes her head. \"Thanks, Amy, but we'll need a lot more than that I'm afraid.\"\n\nFrom court a loud smack is heard that draws their attention. A tall blonde is practicing her spike with her teammates.\n\n\"Nice one, Jess!\" One of the twins, that Jennifer recognizes as Tonya due to her longer hairstyle, calls out.\n\n\"Nice set, Tonya.\" The blonde called Jess says back as she readies herself for another practice swing.\n\n\"I'd hate to be on the wrong end of one of her spikes.\" Jennifer comments.\n\n\"Who is that, Jen?\" Amy asks.\n\nJennifer shrugs. \"Never seen her before. She must be new this year.\"\n\n\"She is.\" Bethany tells them. \"That is one Jessica Golden. She used to live in Charlotte but moved here this year which is just our luck as she was All State last year and just missed out on player of the year by a very slim margin.\"\n\n\"Somebody did some research.\" Amy giggles. \"Got yourself a little girl crush there, Bethany?\"\n\n\"When a player like that comes along, you take notice, Amy.\" Bethany tells her.\n\n\"She is gorgeous.\" Jennifer remarks.\n\n\"If you're into tall blondes with tight little heart shaped asses, sure.\" Amy giggles. \"Bethany, have you seen her ex yet?\"\n\n\"Who can see anybody in this crowd?\" Bethany asks. \"We played these guys early on and it wasn't as packed as it is now. It looks like every one want's to see if they can pull off an undefeated season just like their football team did.\"\n\n****\n\nMidway through the first game of the set Jessica leaps up and successfully blocks an attempted spike by Bethany. However when they land, Bethany's foot lands heavily on Jessica's ankle sending both to the floor in pain.\n\n\"Time!\" the referee calls out as both girls hit the floor.\n\nThe gym goes eerily silent as they see the team's star player on the floor.\n\n\"Jess!\" Caitlyn shouts breaking the silence as she drops to her knees beside her.\n\n\"I'm... okay.\" Jessica answers through gritted teeth.\n\nThe rest of the team join Caitlyn on the floor, hovering over their fallen teammate and friend.\n\n\"Jessica, how bad is it?\" Coach Morrison asks as she rushes onto the court.\n\n\"She just made it roll.. It's fine.\" Jessica answers.\n\n\"Tonya, Tabitha, help her to the bench.\" Coach Morrison orders them.\n\n\"Coach, it's fine. Really.\" Jessica tries telling her but Coach Morrison shakes her head.\n\n\"Not until you get looked over, it's not.\" She tells Jessica who nods.\n\nTonya and Tabitha each take position under Jessica's arms and help her to stand. The crowd begins to clap as both Jessica and Bethany are helped from the court.\n\n\"How bad is it?\" Jake asks as he meets them on the bench.\n\n\"It's fine.\" Jessica insists.\n\n\"Of all the games for your folks to miss and they pick this one.\" Jake comments as he helps Jessica sit. \"We could really use your mom here.\"\n\nStaci, C.C. and Michelle all hurry over to the bench as well.\n\n\"Jess, are you all right?\" Staci asks worriedly.\n\n\"How bad is it, Jess?\" Michelle asks.\n\n\"Where's your mom?\" C.C. jumps in.\n\n\"Guys, it's okay. I'm okay.\" Jessica tells them all. \"Mom, dad and Sarah are all at Sarah's parent/teacher conference thing tonight.\" Jessica tells them all.\n\n\"Let me take a look at that ankle, Jess.\" Coach Morrison tells her. \"Make a hole for me people.\"\n\nThe three cheerleaders step aside to let Coach Morrison get a look at Jessica's ankle. Jessica turns her back towards Jake and stretches her leg out on the bench.\n\n\"Is this okay, Jake?\" Jessica asks as she cuddles back into his chest.\n\n\"Always.\" Jake smiles.\n\n\"Rub?\" She whispers to him jokingly when she looks up into his eyes.\n\n\"Later.\" He promises with a chuckle.\n\n\"Really you two?\" Coach Morrison asks as she takes off Jessica's shoe and sock. \"Is this really the appropriate time for that?\"\n\n\"It's always the appropriate time for a Jake rub down, Coach. They're very relaxing.\" Jessica informs her with a smile.\n\n\"She's fine.\" Staci giggles then leans in close enough to kiss Jessica. \"You are not allowed to scare me like that again, Jessica.\"\n\n\"But you're almost as cute as Jake when you worry about me, Staci.\" Jessica teases her.\n\n\"You know what they say about payback, Jess.\" Staci warns her.\n\n\"Is it that she keeps kissing my boyfriend?\" Jessica asks with a smirk.\n\n\"Yeah, she's fine.\" C.C. agrees. \n\n\"We should get back to cheering then.\" Michelle says. \"I'm glad you're all right, Jessica.\"\n\n\"Thanks, Michelle.\" Jessica smiles at her.\n\nThey start to walk back to the rest of the squad but Staci spins back.\n\n\"You take care of her, Jake.\" She orders him then shakes her head. \"What am I saying, of course you'll do that.\"\n\nShe hurries back over, leans in and plants a brief kiss on him.\n\n\"Staci, stop kissing my boyfriend already!\" Jessica tells her.\n\n\"Can't stop. He's too sweet!\" Staci jokes before hurrying back to the cheerleaders.\n\nCoach Morrison can only shake her head as she runs her fingers along Jessica's ankle checking for damage. Jessica flinches slightly when she touches just above her ankle bone.\n\n\"How bad did that hurt?\" She asks as play resumes on the court.\n\n\"It's manageable.\" Jessica answers.\n\n\"I don't think that anything is broken. A sprain possibly but you'll probably want some x-rays to be sure. You're out for the rest of this match.\" Coach Morrison tells her.\n\n\"Please don't take me out, Coach.\" Jessica pleads. \"I didn't hear a pop and it barely hurts. It's just kind of throbbing. Let me ice it for a few minutes and see how that goes. Please?\"\n\n\"Jess, I need you for the playoffs more than I need you for this game.\" Coach Morrison tells her.\n\n\"I understand that, Coach, but I'm fine or at least I will be in a few minutes. I promise.\" Jessica tells her.\n\nCoach Morrison has the word no on the tip of her tongue but the look in Jessica's eyes gives her pause. Finally she gives her a quick nod.\n\n\"You're out of this set. After that we'll reevaluate.\" She tells her. \"Best I can offer.\"\n\n\"I'll take it!\" Jessica answers enthusiastically.\n\n****\n\n\"Are you okay, Bethany?\" Jennifer asks after she and Amy move closer to the bench to check on their friend.\n\n\"Yeah, I just rolled my ankle when I came down on Jessica's ankle.\" Bethany says as their trainer checks her over. \"I'm more afraid that I won't make it to the bus alive if I took her out.\"\n\nThe trio of girls look across the court and see Jessica getting checked over by the coach and a very familiar face.\n\n\"Oh shit.\" Amy exclaims a little louder than she thinks and gets a few glares from the parents seated around her but she ignores them.\n\n\"Jen, is that...?\" She begins to ask but Jennifer cuts her off.\n\n\"It is. That's Jake.\" Jennifer answers as she looks across the court and watches the Wildcat's star player practically snuggling with her ex on the bench. Then three of the Wildcat cheerleaders rush over, one of them being Staci which is really confusing to Jennifer.\n\n\"What is going on over there?\" Jennifer wonders aloud.\n\n\"That Jessica girl looks really popular.\" Amy tells her.\n\n\"Maybe but I've never seen Staci Daniels give a damn about anyone except that asshole Patrick.\" Jennifer shares.\n\n\"Well she obviously cares about her. Damn, she just about kissed her.\" Amy remarks. \"That was kind of hot.\"\n\nAcross the court, Jessica leans back into Jake's arms and he begins to stroke her bare arms.\n\n\"I don't think that's considered a standard treatment for an ankle injury.\" Bethany states while watching them. \"Not to say that I wouldn't be willing to try it with him though.\"\n\n\"Bethany!\" Amy hisses then nods towards Jennifer.\n\n\"Oh... Oh crap, I'm sorry, Jen. I didn't mean anything by that.\" Bethany apologizes.\n\n\"It's fine, Bethany.\" Jennifer sighs. \"Jake is even more of a hottie than he was when I was with him so I get it.\"\n\nThey watch as the cheerleaders start to walk away then clearly hear Staci's words to Jake then they see the kiss.\n\n\"Holy crap!\" Jennifer exclaims softly. \"She spoke to Jake!\"\n\n\"Forget that, she freakin' kissed him! Does your ex have two girlfriends or what?\" Amy asks.\n\n\"I have no idea.\" Jennifer states. \"I honestly have no idea what is going on now.\"\n\nAs the trio watch, Jake slides his hands down Jessica's arms until his hands rest on hers. He then begins to rub her hands causing Bethany to sigh.\n\n\"I need a guy that will do that for me.\" She states.\n\n\"She certainly seems to be enjoying it.\" Amy comments as they watch Jessica relax back into Jake's arms.\n\n\"You can say that again.\" Jennifer remarks.\n\n\"Jen, if you want to get out of here now we can.\" Amy tells her. \"He won't even notice us.\"\n\nJennifer laughs. \"No, I don't imagine that he would with her in his arms but I want to stay. I need to stay and try to talk to him.\"\n\n\"Uh, Jen, are you sure that's a great idea?\" Bethany asks.\n\n\"No, I'm not sure at all but I've got to give it a try. I owe him an apology at the very least. I just hope his girlfriend or girlfriends don't kill me.\"\n\n****\n\n\"You mom is going to kill me, Jess.\" Jake argues as he's now moved to Jessica's feet.\n\nAfter a brief rub down she insisted that he help her get her shoes back on and to tape up her ankle.\n\n\"Mom won't kill you, Jake.\" Jessica assures him lovingly. \"I'll take all the blame if anything goes wrong but nothing is going to go wrong. Now tape me up. Please.\"\n\n\"So unfair that you can force me to do anything you say with those eyes and that smile of yours. Really unfair, Jess.\" Jake states as he helps her into her shoe.\n\n\"Maybe but you know that I'll make it up to you.\" She grins at him mischievously.\n\nHe chuckles and pulls the medical tape out of Jessica's bag.\n\n\"Jess, how is it?\" Coach Morrison asks as Caitlyn lines up to serve for set point.\n\n\"It's good. Almost great after Jake's rub down.\" Jessica answers. \"I'm ready to go back in.\"\n\n\"Yes, I've heard, or should I say overheard, about the healing power of one of his rubdowns.\" Coach Morrison tells her. \"I'm going to need you to jog around a bit so I can see for myself.\"\n\nOn the court, Kenyetta and Tabitha both jump up and block an attempted spike. A Wolfpack player dives but fails to make the save.\n\n\"Point. Game one to Carter.\" The line judge calls out.\n\n\"Great job, guys!\" Jessica cheers along with the rest of the fans.\n\nThey all huddle around her after coming off the court, their eyes full of questions.\n\n\"I'm good.\" Jessica preempts them as she gets to her feet.\n\n\"Jess, don't hurt yourself.\" Caitlyn tells her as she reaches out to steady her.\n\n\"I'm not.\" Jessica assures her. \"The tape feels weird is all. Coach, how far do you want me to jog?\"\n\n\"I don't want you to at all but I know that won't stop you, will it?\" Coach Morrison asks.\n\n\"Nope. Sorry, coach.\" Jessica tells her.\n\n\"To your cheer friends and back should be good.\" Coach Morrison says then she looks at Jake. \"Keep your eyes on her, Jake, and tell me if you don't think she can go.\"\n\n\"Don't trust me, Coach?\" Jessica asks.\n\n\"I trust that you'll do anything to get back into this match, Jessica.\" Coach Morrison answers. \"I trust Jake to not let you do something that will cause you more pain.\"\n\n\"He does have my back.\" Jessica smiles.\n\n\"And you've got mine, Jess.\" Jake says. \"Always.\"\n\n\"Always, Jake.\"\n\n****\n\nAfter proving to Coach Morrison and Jake that she is good to be in the second match, Jessica walks onto the court to a thunderous applause from the crowd. Energized by the crowd, she puts on a dominating performance leading the team in kills and blocks. She punctuates her performance with a pair of ace serves, the last one winning them the game and the match.\n\n\"Remind me to never step on your ankle again.\" Bethany jokes as the teams are shaking hands after the match.\n\n\"Oh, I'm okay. How's your ankle?\" Jessica asks surprising her.\n\n\"It's... okay.\" Bethany answers. \"Just throbs a little.\"\n\n\"Same here.\" Jessica answers. \"I'm glad that you're all right.\"\n\n\"Bethany.\" she supplies.\n\n\"Nice to meet you Bethany. I'm Jessica.\" she introduces herself.\n\n\"Nice to meet you too, Jessica.\" Bethany smiles. \"You are nothing like I imagined you'd be.\"\n\n\"How's the ankle, Jess?\" Caitlyn asks as she walks over to the pair.\n\n\"Still good.\" Jessica answers shaking her head. \"I'm going to be answering that question all next week.\"\n\nBethany laughs and nods. \"I hear you there.\"\n\nJessica introduces Caitlyn to Bethany.\n\n\"I should hit the showers so I don't miss the bus home. It was really nice meeting you both.\" Bethany tells them.\n\n\"It was great meeting you, Bethany.\" Jessica says. \"I'm glad that your ankle is okay.\"\n\n\"Thanks, Jessica. I'm really glad that yours is too.\" Bethany answers. \"Good luck in the playoffs.\"\n\nAfter Bethany walks off towards the locker room Caitlyn and Jessica are joined by Tonya and Tabitha.\n\n\"I thought you said you were going to punch her out, Caitlyn. What happened?\" Tabitha asks.\n\n\"Jessica happened.\" Caitlyn answers. \"Leave it to her to make friends with the person that nearly broke her ankle.\"\n\n\"That's a bit of an overstatement.\" Jessica laughs. \"She was sweet and we all know that accidents can happen on the court.\"\n\n\"I still would have popped her one if she had hurt you worse.\" Caitlyn states.\n\n\"You're sweet too.\" Jessica laughs.\n\n\"Let's go shower so we can get out of here.\" Tonya tells them. \"I know that there's a special guy that Jessica here needs to thank for taking care of her.\"\n\nJessica glances around quickly then gets a wicked smile on her face. \"About that. Can you guys do me a favor?\"\n\n****\n\n\"Do you see him anywhere?\" Amy asks Jennifer as they look around the dispersing crowd.\n\n\"I thought I saw him a second ago but it was like he just vanished.\" Jennifer tells her. \"I guess I missed him. We should go.\"\n\n\"Oh no, you did not drag me out here to just say Oh well we missed him.\" Amy tells her. \"We are going to find him.\"\n\n\"How are we going to do that, Amy?\" Jennifer asks.\n\n\"Well we know that he can't have left yet. He has to be waiting for that Jessica girl so we'll check outside the locker room first.\" Amy instructs her. \"Let's go.\"\n\n\"Amy, this isn't...\"\n\n\"If I hear you say this isn't a good idea one more time, I will tell Tommy Yarden that you have a crush on him.\" Amy threatens.\n\n\"He's cute!\" Jennifer argues.\n\n\"And extremely shy so once I tell him he will hide from you the rest of the year.\" Amy tells her.\n\n\"Ugh! Fine. Let's go find Jake then.\" Jennifer concedes.\n\nAmy giggles and bounces down the bleachers.\n\n\"This is your old haunt so you lead the way, Jen.\" She tells her.\n\nJennifer nods towards the double doors that leads in the opposite direction of the departing crowds. Jennifer pushes open the door and stops as she starts to step through it.\n\n\"Going somewhere, Jennifer?\" Tonya Spencer asks.\n\n\"Or are you just lost?\" Tabitha Spencer asks.\n\n\"Oh... hey guys.\" Jennifer says in greeting. \"I was looking for um... Jake.\"\n\n\"Not a great idea, Jen.\" Tonya tells her crossing her arms in front of her chest.\n\n\"Good thing then that we didn't ask for the permission from the Barbie twins then.\" Amy snaps. \"My friend wants to talk to him and that's what's going to happen. Get it?\"\n\n\"Bitch, I will knock you...\" Tonya begins to threaten but Tabitha's cooler head stops her with a hand on her shoulder.\n\n\"Why do you want to talk to him, Jennifer? And why now? He's in a good place.\" Tabitha asks.\n\n\"I know that he is.\" Jennifer answers. \"I saw the whole thing with that Jessica girl on the bench. I get it.\"\n\n\"If you get it, then leave it alone.\" Tonya tells her.\n\n\"I want to apologize to him, Tonya. That's it.\" Jennifer argues.\n\n\"And what good would that do?\" Tonya asks.\n\n\"Tonya, let's take her to Caitlyn.\" Tabitha suggests. \"If Caitlyn okay's it then we'll take you to Jake. Deal?\"\n\n\"Deal.\" Jennifer agrees.\n\n\"And if Caitlyn doesn't okay it and you try and fight it, I'll slap you silly.\" Tonya threatens.\n\n\"Tonya, stop.\" Tabitha tells her sister.\n\n\"Can I ask what brought on this fierce loyalty to Jake all of the sudden?\" Jennifer asks. \"Last time I was here, neither of you really paid him any attention.\"\n\n\"That was our loss.\" Tonya says.\n\n\"Jessica coming along changed a lot of things around here, Jen.\" Tabitha tells her.\n\n\"Tell me about it.\" Jennifer comments. \"First I see Jake with this hot blonde volleyball star. Staci Daniels and her little cheer buddies show concern for someone way outside of their clique not to mention, she kissed Jake. She freaking kissed him! On the lips! And now you two are ready to kick my butt just for wanting to talk to him. What has happened at this school since I left it?\"\n\n\"The power clique that you knew and wanted so bad to be a part of barely exists anymore.\" Tabitha tells her. \"Patrick started up again this year with Jake just like always but then things stopped working out his way.\" \n\n\"He tried to hook up with Jessica but she wasn't having it. She was Jake's the second they met or that's how I heard it happened.\" Tonya shares.\n\nThe pair lay out the year so far, much to Jennifer's astonishment.\n\n\"So you're telling me that Jessica took down the high and mighty Patrick Greene and his squad of flunkies. I can't believe it.\" Jennifer admits.\n\n\"That's what happened.\" Tonya states. \"You should have heard how she ripped him to pieces in front of half the school. It was so epic!\" Tonya enthuses. \"It had to hit King Stud hard when everyone found out that he sucks in bed and has a smaller dick than Jake.\"\n\n\"Allegedly.\" Tabitha corrects her. \"Not that I don't trust Jess's word...\"\n\n\"And Staci's.\"\n\n\"Staci's! Staci has seen Jake's dick!\" Jennifer exclaims.\n\n\"Talk about King Stud.\" Amy comments.\n\n\"Staci's seen him in just his boxer briefs. At least that's what she says but who knows.\" Tonya says. \"She's dating Ray now and he and Jake are pretty tight.\"\n\n\"Jake wouldn't do anything with Staci especially if that meant he had to share Jessica.\" Tabitha tells her. \"It wouldn't happen and you know it, Tonya. Stop feeding the rumor mill.\"\n\n\"I try not to but he is so yummy though. It's hard not to imagine him...\" Tonya begins to say but is cut off by her sister.\n\n\"We need to get Jennifer to Caitlyn and you need to stop talking.\" Tabitha tells her. \"You wouldn't want Jessica to find out and spike a ball into your head.\"\n\nTonya starts laughing at that. \"Oh god, tell them about the time she spiked that ball at Patrick and Jamie nearly causing them to piss themselves!\"\n\n\"Later.\" Tabitha states. \"We need to find Caitlyn and hit the showers.\"\n\n****\n\n\"What in the hell is this?\" Caitlyn asks as the foursome walk up to her in the gym.\n\n\"She wants to talk to Jake.\" Tonya states.\n\n\"Apologize. She wants to apologize to Jake.\" Tabitha corrects her sister.\n\n\"Then send him a freaking email, Jen.\" Caitlyn snaps. \"He's busy right now.\"\n\n\"I just need a minute of his time and then I won't bother him or any of you all again.\" Jennifer tells her.\n\nCaitlyn softens a little but still shakes her head. \"It really isn't a good time, Jennifer. I'm serious.\"\n\n\"Is his... friend, hurt?\" Jennifer asks.\n\n\"The way she tore through our team, she didn't look all that hurt.\" Amy comments.\n\n\"No, it's not that. It's...\" Caitlyn begins to answer when a loud moan is heard from beneath the bleachers.\n\n\"They are not!\" Tabitha cries out with a look of surprise etched on her face.\n\n\"I'm gonna check!\" Tonya announces.\n\n\"Tonya, wait!\" Caitlyn shouts but Tonya is already sprinting towards the end of the bleachers followed quickly by the others.\n\nWhen she rounds the corner and peers under she sees Jessica with her back pressed against the wall, her hand working Jake's cock over the top of his jeans, and Jake with his hand inside Jessica's volleyball shorts. Jessica leans her head back and moans again giving Jake the opportunity to lean in and kiss her neck.",
        "\"Oh damn!\" Tabitha exclaims loudly as she reaches Tonya and sees what is going on.\n\nJake quickly removes his hand from Jessica's shorts at the sound. It takes Jessica a second to recover and she's still in the process of stroking Jake when the rest arrive.\n\n\"Sorry. We didn't hear you coming.\" Jessica says her face flushed and her hand still firmly holding onto Jake's member.\n\n\"No, but we certainly heard you.\" Tonya giggles.\n\n\"Tonya!\" Tabitha scolds.\n\n\"Well, we did.\" She argues.\n\n\"Um, Jess, you might want to... uh...\" Caitlyn says nodding towards Jake's waist.\n\n\"Oh! Oh God!\" Jessica stammers pulling her hand away quickly. \"Sorry you guys. Sorry, Jake.\"\n\n\"Holy crap, you left that?\" Amy states getting a good look at Jake's jean covered erection.\n\n\"Sorry, Jake, but you've got someone that wants to speak with you.\" Caitlyn says moving to the side revealing Jennifer standing behind her.\n\n\"Um, hey Jake.\" Jennifer says with a half smile.\n\n\"Jennifer? What in the hell are you doing here?\" Jake asks annoyed at the intrusion.\n\n\"I wanted to uh... talk.\" She answers.\n\n\"Jennifer?\" Jessica asks. \"Jennifer as in your ex Jennifer?\"\n\n\"The very same.\" Jake answers.\n\nJennifer's eyes drift towards Jake's crotch as he and Jessica come out from under the bleachers. She doesn't fail to notice that Jessica has her arm wrapped possessively around Jake's waist as they reach the group. \n\n\"Now? You want to talk now?\" He asks angrily. \"The time for us to  talk  was a long time ago, Jen. I don't have anything to say to you!\"\n\n\"Maybe you don't but I have things to say to you, Jake.\" She argues.\n\n\"Guys, we should give them some privacy.\" Jessica suggests to the other girls.\n\nJake's hand reaches out and grabs Jessica's arm. He pulls her back to his side and holds her there.\n\n\"Anything she has to say to me, she can say to you.\" Jake tells her. \"You and I have no secrets. Not anymore.\"\n\nJennifer briefly wonders what that statement means but from the way they found them and how Jake is caressing the back of Jessica's hand there is no trouble in their paradise.\n\n\"We'll be close by.\" Caitlyn states.\n\n\"Very close.\" Tonya adds making it sound very much like a threat.\n\n\"Will you stop it?\" Tabitha asks her sister before pulling away from the group. Caitlyn falls in step with them as they walk to the nearby double doors.\n\n\"I think I should stay.\" Amy argues. \"Jennifer is my friend and might need my support.\"\n\n\"Fine by me.\" Jake answers.\n\nJennifer nods at them both. \"Thank you both. Especially you, Jake. I know how pissed off you must still be with me.\"\n\n\"I am pissed or at least I was pissed at you and for a long time.\" Jake admits. \"You left me here to deal with all of the fallout of what you did at prom and you just got to walk away without any consequences. I was pissed at how unfair I felt that was.\"\n\n\"There were consequences, Jake. I lost you!\" Jennifer tells him. \"When we first started dating, I saw you as a stepping stone to what I thought I really wanted. Popularity. Then when I started really falling for you, Patrick dangled what I thought I wanted most, I made a mistake and fell for his crap.\"\n\nJessica sighs and shakes her head sadly. \"Popularity is fickle thing, Jennifer. What you had or could have had with Jake? That was real. That was worth taking a risk on. All you got were two minutes of pitiful humping with Patrick Greene and it cost you a great guy.\"\n\n\"I know that now.\" Jennifer says. \"Too little, too late, I guess but I am glad that he found you. You make him happy and he's earned that happiness. I'm just sorry that I wasn't the one that could give it to him.\"\n\n\"You could have, Jen.\" Jake answers.\n\nJennifer smiles and nods. \"Yeah, I guess that I could have but I don't think I could ever make you as happy as Jessica here does. I can tell when I look at you that you two have something special.\"\n\n\"That's what everyone tells us.\" Jessica laughs. \"Staci is adamant about it.\"\n\n\"What is the deal with that anyway?\" Jennifer asks. \"Staci Daniels kissed you, Jake. In front of your girlfriend, she kissed you!\"\n\n\"Do you have two girlfriends here, stud?\" Amy asks.\n\n\"Staci's just a friend.\" Jake answers.\n\n\"Staci Daniels is your friend? Had I not seen it with my own eyes, I would never believe it.\" Jennifer comments.\n\n\"She's changed a lot this year.\" Jake informs her.\n\n\"She's dating Ray now. The two of them took it upon themselves to try and set us up together but we were already ahead of them.\" Jessica tells her.\n\n\"We just didn't know it at the time.\" Jake adds.\n\n\"We both had a bit of baggage that we needed to unload before we saw what was happening between us.\" Jessica shares. \"Once we cleared the air everything just clicked for us.\"\n\nJessica leans into Jake and gives him a quick hug.\n\n\"I know that you don't owe me anything, Jessica, but can I ask you for a favor?\" Jennifer asks.\n\n\"Can't have him back.\" Jessica jokes. \"I've grown quite attached to him and my little sister would kill me if I did.\"\n\n\"I wouldn't dream of asking that. That ship has sailed and I can tell that he loves you.\" Jennifer says. \"Just take care of him, all right? He deserves someone that loves him for him and from the looks of things, he's found that in you.\"\n\nJessica nods. \"That I can do.\"\n\n\"That's all I can ask for then.\" Jennifer manages a smile. \"I'd wish you both good luck or whatever but I somehow doubt that you need any sort of luck.\"\n\nAs they watch Jennifer and Amy leaving, Jessica turns to Jake and shakes her head.\n\n\"Well that was certainly strange.\" She tells him.\n\n\"I don't know what I was expecting from that but an apology was the last thing on my mind.\" Jake admits.\n\n\"It was nice of her to do that.\" Jessica states. \"Any regrets about just letting her walk away?\"\n\n\"Not a chance.\" He smiles as he pulls Jessica into his arms and kisses her quickly. \"I am right where I am supposed to be.\"\n\nJessica grins and nods. \"I'll take that answer but if you had said in a bed with you is where I belong, it would have been a more accurate statement.\"\n\n****\n\n\"I'm telling your mom.\" Jake insists as he and Jessica walk in through her front door.\n\n\"For the hundredth time, it's fine.\" Jessica argues.\n\n\"What's fine for the hundredth time, Jessica?\" Dr. Golden asks as she looks up from her book.\n\n\"Nothing.\" Jessica answers.\n\n\"Her ankle.\" Jake corrects. \"She got stepped on during the first game.\"\n\n\"Sit.\" Dr. Golden orders Jessica.\n\n\"Mom, it's fine. Really.\" she says but acquiesces when her mother snaps her fingers and points towards the couch.\n\n\"I only had to sit out the rest of the first game. I played the whole second game.\" Jessica tells her mom as Jake pulls her shoes off. \n\n\"Played is putting it lightly.\" Jake comments as he steps back allowing Dr. Golden to examine her daughter. \"She torched the other team and won the set with an ace serve.\"\n\n\"Nice job, honey.\" Mr. Golden says as he and Sarah enter the living room.\n\n\"What did you do?\" Sarah asks as she hops onto the couch beside Jessica.\n\n\"I got landed on. It's fine.\" Jessica tells her.\n\n\"Jake, is she fine?\" Sarah asks him.\n\n\"She looked great in the next game but your mom will be the ultimate judge of that.\" He answers. \n\n\"Is any of this hurting you, Jess?\" Dr. Golden asks as she prods Jessica's foot and ankle.\n\n\"It's tender there.\" Jessica answers when she flinches from a poke to the top of her ankle.\n\nDr. Golden examines the area carefully then nods her head.\n\n\"It looks like that's where the other girl landed on you. I can see the beginnings of a bruise forming but everything else seems fine.\" She states sitting back and looking over at Jake. \"You say that she played fine on it in the second game?\"\n\n\"She killed it in the second game.\" Jake answers. \"Coach Morrison checked her out after it happened and had her jog and jump a bit before allowing her into the second game.\"\n\n\"We iced it for a few minutes then Jake gave me a rub down that really helped.\" Jessica shares.\n\n\"Are you sure that you want Jake to pursue a career in architecture, Tim, what with all the healing power in his hands?\" Dr. Golden jokes.\n\n\"He can be the world's first massaging architect.\" Mr. Golden counters with a chuckle.\n\n\"That's going to make a funny looking business card.\" Jake jokes.\n\nJessica bounces her feet on the couch and nods towards Jake.\n\n\"Healing hands now please.\" She tells him.\n\nJake smiles, takes a seat and pulls her feet into his lap.\n\n\"How did the parent teacher thing go with Sar-bear?\" Jessica asks.\n\n\"Good.\" Mr. Golden answers. \"They want to move her up a grade next year because she seems bored in class half of the time.\"\n\n\"I don't like being bored but I don't want to lose my friends either.\" Sarah comments.\n\nJessica turns and pulls her into her lap for snuggles. \"You don't have to move up if you don't want to, Sarah. My elementary teachers wanted to move me up too but I decided to stay with my friends and it turned out fine for me. I had a lot of help though but you will too.\"\n\n\"You and Jake will help me?\" Sarah asks.\n\n\"Me and Jake, mom and dad and your aunt Sylvia will help out too.\" Jessica assures her. \"She helped me a lot by sending me all sorts of books that she had.\"\n\n\"Those ones in your closest that you read to me sometimes?\" Sarah asks.\n\n\"Those very ones.\" Jessica answers.\n\n\"Cool!\" Sarah exclaims then hugs Jessica. \"I love you, sissy.\"\n\n\"Love you too, my little Sar-bear.\"\n\n****\n\n Tuesday, November 21st \n\n\"You're leaving right after school, correct?\" Jake's mom asks as Jake continues to add clothes to his suitcase.\n\n\"Correct. Jessica's parents are picking me up after they get Sarah and then we're driving down to Charlotte.\" Jake answers.\n\n\"With any luck you'll beat the traffic and get there before Jessica's match starts.\" Jake's dad says as he looks over his wife's shoulder into Jake's room.\n\n\"That's the plan.\" Jake comments. \n\n\"You packed your toothbrush, right?\" his mom asks.\n\n\"Yes, mom.\"\n\n\"Enough socks?\" \n\n\"Yes, mom.\" \n\n\"Clean underwear?\"\n\n\"MOM!\" Jake exclaims.\n\n\"I'm just making sure.\" She tells him.\n\n\"I've got everything packed, mom.\" He assures her. \"I've got all the clothes and personal items I need. I've got my laptop and the script of the play so I can run through the light set ups when I've got some down time.\"\n\n\"And Jessica is riding down with you or the team?\" his dad asks.\n\n\"Jess is going on the team bus. They are leaving school early so they can get some court time before the playoff's start. Their game isn't until six or thereabouts so we should make it with no problems.\"\n\n\"I wish we could come down and support her at the first game but I can't get off work in time to make it down.\" she says.\n\n\"Mom, Jess understands completely. Did she not make that clear when she was over on Sunday?\" Jake asks.\n\n\"She did and she knows that we'll be there in spirit.\" She states.\n\n\"And when she makes the championship game, we will definitely make it down for that.\" his dad assures him.\n\n\"Jess will appreciate that and so will her grandmother if she ends up not wanting me there.\" Jake states.\n\n\"I thought you were sure that her grandmother is okay with you tagging along?\" his mom asks.\n\n\"Jess's mom confirmed it with me three times and told me to stop asking but have you ever felt like you were being over assured on something?\" Jake asks.\n\n\"Over promised? At times.\" his dad nods.\n\n\"Yeah, that's what I'm feeling but I could be dead wrong and everything will turn out to be fine.\" Jake says as he closes his suitcase and hefts it to check the weight.\n\n\"Just in time it sounds like.\" He comments as he sees Bobby's truck pull up out front.\n\n\"Be on your best behavior with Jessica's family.\" Mrs. Gibson instructs him. \"And call us when you get down there.\"\n\n\"I will.\" Jake promises as he heads for the door.\n\n\"And text me with game updates from her first game.\" Mr. Gibson tells him.\n\n\"I'll do my best to keep you updated.\" Jake promises. \n\n\"And they'll have you back in time for your playoff game on Friday night?\" Mr. Gibson asks.\n\n\"Jess assured Coach Pennington that they will have me back by game time.\" Jake answers. \"If Jess and her folks decide to stay longer, I can catch a ride back with you after Jessica's championship game or Coach Morrison said I could hop a ride on the team bus back if I needed to.\" \n\n\"I guess with all that taken care of, you really are good to go then.\" Mr. Gibson tells him. \"Have a safe trip and I have a feeling that we'll be seeing you tomorrow night.\"\n\n\"With the way Jess and the rest of the team has been playing I can almost guarantee that you will.\" Jake laughs.\n\nHe gets a hug from his mom before he heads towards Bobby's waiting truck.\n\n****\n\n We are almost at the end of this tale, folks. I think I can crank out one last chapter to this story before we say a maybe brief goodbye to Jake, Jess and company. \n\nThanks so much for reading, commenting and voting! "
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "high school",
        "volleyball",
        "oral",
        "blonde",
        "hand job",
        "girl on top",
        "jessica",
        "teasing"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-14"
}