{
    "title": "Falling Up",
    "pages": [
        "Author's Note: All characters over eighteen.\n\n****\n\nCade rolled his eyes when he heard the loud snap of a tree branch and the subsequent, \"Fuck!\" that accompanied it. He sighed and put his laptop carefully aside before investigating.\n\nAnya lay groaning on her back under a tree. Cade crouched beside her. She didn't seem dead or dying, so that was a good sign.\n\n\"What'd you do this time?\" he asked.\n\nAnya moaned again, deliberately pitiful about it, but Cade had far too much experience with his little sister and her antics to be taken in by her.\n\n\"Fell out of the tree,\" she said.\n\n\"Yes, I thought you might have. Tried to climb the wrong branch?\"\n\n\"It should have held. I've been using it lots. I can get to the roof from there. Or... I always could before.\"\n\n\"Uh huh. Got careless, didn't you?\"\n\n\"Ugh. No chastising. I broke my wrist I think.\"\n\n\"I doubt it somehow.\"\n\n\"Since when are you a doctor?\"\n\nCade stood up again and examined the tree Anya had fallen out of. \"Not a doctor. I just know you'd be whining way harder if you'd actually broken anything.\"\n\n\"Well it hurts!\" Anya insisted.\n\n\"I'm sure it does. Do we need to hit the hospital?\"\n\n\"... yes.\"\n\n\"Fine. Do you need me to carry you?\"\n\n\"Mmhm!\"\n\n\"Trick question. Not happening. On your feet.\"\n\nAnya pouted. \"So mean. And I thought I was your favourite sister and all.\"\n\n\"You are. Doesn't mean I'm going to encourage your constant attempts at injuring yourself.\"\n\n\"It's not a cry for help, dummy. I just like climbing.\"\n\n\"I know.\" Cade held up two fingers. \"Second sign you didn't actually break anything, you're not too in pain to be lippy.\"\n\n\"Just wait 'til you break your arm. Then see how funny you think it is.\"\n\n\"Anya, dearest sister, I will bet you that it's not broken. Loser has to make supper.\"\n\n\"How am I s'posed to-\"\n\n\"You'll win, right? Because your wrist is definitely broken?\"\n\n\"... fine. You're on.\"\n\n****\n\n\"Funny thing, isn't it?\" Cade said. \"Is that the doctor-\"\n\n\"Shut up.\"\n\n\"-said the same thing I did.\"\n\n\"Blurgh,\" Anya said, gazing sulkily out her window.\n\n\"Not broken. Funny about that.\"\n\n\"You're the worst.\"\n\n\"I rescued you, didn't I?\"\n\n\"You deigned to drive me to the hospital. No brother of the year awards for that.\"\n\nCade grinned wide. \"You own me supper, anyway.\"\n\n\"I'm injured. It's not broken, but I'm still injured.\"\n\n\"Better think of something you can make one-handed, I guess.\"\n\n\"Ugh! Can we just stop somewhere and I'll get us take out?\"\n\n\"That wasn't the bet.\"\n\nAnya turned in her seat. \"I just have to make supper. Buying it counts.\"\n\n\"There's no 'making' involved in just buying it.\"\n\n\"That's just a word.\"\n\n\"Yes. And the point of words is to communicate information.\"\n\n\"Nerd.\"\n\n\"So I've heard, yes.\"\n\n\"Look, there's a good restaurant. Just stop there.\"\n\n\"No.\"\n\n\"Stop the car, or I'll jump out anyway.\"\n\nCade sighed. \"You know, anyone else I'd call their bluff. But you're just self-destructive enough to-\"\n\n\"I'm not! I'm just injured and cranky.\"\n\n\"Are the pain meds not helping?\"\n\n\"They are. I think maybe I need another one.\"\n\n\"No you don't. You're not to abuse those.\"\n\n\"Ok, little mister nosey. For your info I can take two every four hours, and I only started with one, so maybe I shoulda taken two, how 'bout that?\"\n\nCade nodded sagely. \"In that case you'd best take a second.\"\n\n\"Are you gonna pull over?\"\n\n\"We missed the place you wanted already.\"\n\n\"There's another good one ahead.\" Anya struggled with her pill bottle for a second, popped it open, then downed another pill. \"Ooh, or hit a grocery store. We could make stupid-big-good sundaes later. With all the chocolate and syrup and bad stuff.\"\n\n\"Boy, those kick in fast.\"\n\n\"You're gonna insist on being a shit about this, aren't you?\"\n\nCade considered. \"Kinda seems that way, yeah.\"\n\n****\n\nAnya struggled with prepping food that evening. Part of it was just for show, mind you. Not that Cade fell for many of her tricks these days. She missed when they'd been younger and he'd been more of a sucker.\n\nShe missed when they'd been younger for other reasons too. It hadn't been just the two of them then. But that was a whole other thing.\n\nThe pain pills helped quite a bit. Her wrist hardly even bothered her, though it was awkward to use her hand at all and she did her best to do everything one-handed where possible. She also felt pretty happy and a tad light-headed from the meds, which she wasn't sure was a good thing, but she'd at least enjoy the feeling as long as it was there anyway.\n\n\"Need any help?\" Cade asked.\n\n\"Ha, what happened to getting poor Cinderella to make your food and-\"\n\n\"Poor Cinderella's been playing the pity card awfully hard today.\"\n\n\"... well we made a bet and all. Technically I gotta do this.\"\n\n\"Mmhm,\" Cade agreed. \"That's true. Can I help anyway?\"\n\n\"Why?\"\n\n\"'Cause I love you, doofus. And I know you're acting pitiful on purpose, but that doesn't mean it doesn't still work.\"\n\nAnya flushed and kept her face away from Cade for a moment so he wouldn't see. \"You can do the hamburger,\" she said more quietly. \"I'm having a hard time keeping the frying pan in line without burning myself.\"\n\n\"Good choice. What are we having?\"\n\n\"Nachos.\"\n\n\"Loaded up with all the good stuff?\"\n\n\"Hell yeah. Who do you think you're talking to?\"\n\n\"Just checking.\"\n\nAnya busied herself cutting up more veggies and stuff. She was still reasonably able to handle that without too much trouble. Having Cade deal with browning the hamburger made a big difference. She hadn't thought he'd cave today, but she was glad he did.\n\n****\n\nCade and Anya ate their nachos on the couch together. It was a somewhat messy affair, as well-loaded nachos tended to be. Cade had to help Anya a couple times to not make a total disaster. Her limited dexterity was a bit of a factor still.\n\n\"Mmm,\" Anya said, rubbing her tummy after. \"That was good. Even worth you tricking me into cooking.\"\n\n\"Yeah. Tricking. That's what happened.\"\n\n\"Glad we're agreed,\" Anya said, deliberately not engaging with Cade's sarcasm.\n\n\"Are you not even gonna eat your ice cream with all kinds of junk on it? We specifically got everything you wanted.\"\n\n\"Ugh. You think I can do that now? That was hungry me talking. I'm very much full now.\"\n\nAnya laid her head on Cade's shoulder as she shifted position and curled up next to him. He was still picking at the last of the nachos on his plate, but he put it aside as Anya was getting comfy.\n\nShe seemed much more docile now. Sleepy, even. She was kind of cute at times, for being a sister and all. This was one of those times, snuggled up calm and comfy, eyes heavily lidded, looking like she might just fall asleep at any moment.\n\n\"I got therapy tomorrow,\" Anya said, belying her otherwise comatose appearance.\n\n\"Mmhm. That's true.\"\n\n\"She's probably gonna ask about my wrist.\"\n\n\"Well it is fresh and all.\"\n\n\"It wasn't on purpose or anything.\"\n\nCade shrugged softly. \"Don't have to tell me. I was there.\"\n\n\"Just sayin'. She thinks I'm... I don't even know. I don't think she likes me.\"\n\n\"I really don't think that's true. Even if she doesn't, she's gotta be professional, right?\"\n\n\"Feels pretty personal sometimes.\"\n\n\"Yeah, well, it's all personal stuff.\"\n\nAnya sighed. \"I guess.\" She squirmed to get more comfortable. \"How's yours going?\"\n\n\"Got a session in... two days? I think?\"\n\n\"Not what I asked. How's it going?\"\n\n\"Fine.\"\n\n\"Ugh. Whatever. Don't tell me then.\"\n\nCade sighed an ran a hand through his hair. \"It's fine. Really. Just... I still have trouble talking about some stuff.\"\n\n\"Well sure. So do I. That's part of the point, isn't it?\"\n\n\"I guess.\"\n\n\"Mom and Dad?\"\n\nCade nodded. \"Yeah. Mostly them.\"\n\n\"Same.\"\n\nThey were silent for a moment, each lost in their own thoughts.\n\n\"Is that anything to do with why you're always climbing stuff?\" Cade asked softly.\n\n\"I like climbing stuff. That's all. That climbing gym I liked is still closed. What else am I s'posed to do?\"\n\n\"I dunno. Just asking.\n\nAnya curled up tighter against Cade. \"Makes me feel good for a while, is all. Some things do.\"\n\n\"I get ya.\"\n\n****\n\nWhat Anya wouldn't say was that Cade was another thing that made her feel good. Not always. Sometimes he was a pain in the ass. But sometimes she was too, so it all kind of evened out.\n\nIt was hard to imagine not having him in her life. What she'd do. She didn't even want to think about it.\n\nBesides, she was stuffed, and all happy-sleepy. So what was the point in getting existential now?\n\nAnya liked the thrill and danger of climbing higher and higher. Trees, walls, their house. Whatever. Often any danger was an illusion as much as anything. A feeling she could bring herself when she felt like it. Though as today had proven, it wasn't always just imaginary.\n\nOr maybe it was a rebellion of sorts against common sense and growing up. Maybe it was remembering childhood.\n\nWhatever the case, Cade made her feel the same sense of chaotic peace, but from a different direction. There was no danger in him at all, real or otherwise. There was no thrill or daring. Just her brother. Always there. The only person or thing she could rely on one hundred percent.\n\nAnd he was so nice to cuddle too. He'd just sit there and let her half-snooze. Sometimes maybe he'd shift, but often it was only to let them both be more comfortable, or to wrap an arm around her.\n\n\"I'm not carrying you to bed if you fall asleep on me,\" Cade warned.\n\n\"Don't worry. M'not.\"\n\n\"You sure? You're starting to drool on me.\"\n\nAnya frowned and pouted at Cade. \"Am not.\"\n\n\"I felt it.\"\n\n\"Liar.\"\n\n\"It's fine. Everyone drools.\"\n\nAnya shook her head and secured a spot even further atop him. \"You're not getting rid of me that easily.\"\n\nCade chuckled softly. \"Can't imagine I ever would.\"\n\n****\n\nCade lay awake in bed a while that night. Just staring at the darkness, alone with his thoughts.\n\nHe missed feeling Anya against him. It wasn't the first time either. It was something he'd come to recognize. How nice it felt having her next to him. She made him feel secure in a way that very little else could. Maybe nothing else, for that matter.\n\nBut he couldn't have that at night. When he really needed it. She'd probably help him fall asleep faster. And even if not, he'd enjoy his sleepless time in the dark more. Either way would be a win.\n\nAs he'd done before, intermittently, Cade got up and padded to the bathroom, not really needing to be there. It was an excuse more than anything. He made the soft trip to Anya's room after. Just checking.\n\nHer door was half open. It was rarely closed. Maybe they didn't need to bother with closing doors. It was just the two of them. Cade, too, had become lax about it. Excepting for when he was jerking off or something. Then privacy still made a lot of sense. \n\nCade had thought about intruding at times. Thought about it now. The door was open. But that didn't mean anything, really, and it didn't feel right to just go in.\n\nMaybe he was hoping Anya would still be awake and call to him. She never had yet. A foolish hope. Still, he was awake and had nothing better to do.\n\nHe went back to bed. He'd sleep sooner or later. Probably.\n\n****\n\n\"My wrist hurts.\"\n\nCade nodded, busily typing at his laptop. \"Makes sense.\"\n\n\"I wanted sympathy. Not confirmation.\"\n\n\"Oh. Sorry.\"\n\nAnya sighed in frustration. \"You're ignoring me.\"\n\n\"I'm working. Some of us do that.\"\n\n\"You don't have to.\"\n\n\"Mmm. True, I suppose. But I like it. Most of the time.\"\n\nAnya cocked her head. \"How about now?\"\n\nCade sighed. \"Right now it's a bit tedious, admittedly. Which is all the more reason to get it done.\"\n\n\"Ha, so responsible. How 'bout instead you braid my hair for me?\"\n\nCade looked at Anya. She did her best to beam winsomely. She even batted her eyelashes, though as she soon as she saw her brother's reaction she knew that had been pushing it.\n\n\"Why would I do that?\" he asked.\n\n\"'Cause I can't do it myself. My wrist hurts when I try holding it like that for too long.\"\n\n\"Sure. But I mean you don't actually need braids.\"\n\nAnya shrugged. \"I don't need lots of things. Doesn't stop me. Doesn't stop anyone, really.\"\n\n\"True. Give me an hour.\"\n\n\"An hour?!\"\n\n\"Don't you have some way of imperiling yourself you should be getting to?\"\n\nAnya harrumphed and folded her arms. Cade was unmoved, and besides it wasn't an easy pose for her wrist either. Feeling she wasn't winning, Anya pattered off around the yard.\n\nCade liked doing his work outside sometimes when it was nice out. Which was fair enough. Anya liked being out in this weather too. But with her arm the way it was, she just felt bored and helpless.\n\nStill, she could try.\n\nShe went straight for the tree she'd fallen from yesterday, cautiously pulling herself up with one hand and her legs, putting more work in with her lower body than she usually had to. She had some mild success, but didn't quite dare getting high enough to really feel anything. None of the freedom that often came with higher or riskier climbs.\n\nAnya considered popping another painkiller, take the edge fully off. Maybe she could climb higher that way if her wrist wasn't bothering her. But then, she didn't entirely trust her judgement or reflexes she had a full dose in her, so probably best not to.\n\nShe climbed back down slowly, then at a sturdy lower branch she let herself hang upside down by her legs. She was close enough to the ground that it wasn't even much of a thrill hanging precariously like that, but she still liked the effect.\n\nSomehow Cade sneaked up on her while she was hanging there just existing in the moment. Possibly she'd closed her eyes. All she knew was he was just there.\n\n\"Stuck?\" he asked with quiet amusement.\n\n\"Nope,\" Anya answered.\n\n\"Uh huh. How you getting down then?\"\n\n\"Gravity'll probably do the trick.\"\n\n\"I see.\" Cade tilted his head. \"You know your shirt's-\"\n\nAnya yanked her top back into place, more or less. \"Well it wasn't an issue until just now.\"\n\n\"Gravity. She giveth, she taketh away.\"\n\n\"S'fine. Didn't even come up over my boobs or nothin'.\" Anya thought for a second. \"Which by the way is total nonsense. Girls should be able to go topless too if they want.\"\n\n\"Mmhm.\" Cade sat down on the grass cross-legged. He watched Anya while idly plucking the occasional blade from the ground. \"I mean, they can. But then they have to deal with everyone staring.\"\n\n\"That's what I'm saying! It should be... more fairer. And stuff.\"\n\n\"I think maybe you should come down now. Too much upside down's not good for you.\"\n\n\"Yeah. Maybe. Catch me?\"\n\n\"Thought you could do it yourself.\"\n\n\"I can.\"\n\nCade arched an eyebrow and just waited. Anya let go of her shirt, which made it slide up under her boobs again and expose her midriff. She needed her good hand for landing.\n\nHer landing wasn't too bad, she thought, even if Cade immediately burst out laughing.\n\n\"Ah, so graceful. The things I didn't realize you could do.\"\n\nAnya sat herself up from the tumbled pile she'd landed in. She brushed her hair back and discovered a leaf tangled in it.\n\n\"It was pretty graceful,\" she said defiantly.\n\n\"No,\" Cade said. \"It really wasn't.\"\n\n\"I'd like to see you do better. Even with both hands.\"\n\n\"Alas, I've made the blunder of maturing some as I age.\"\n\nAnya rolled her eyes. \"Overrated, I say.\"\n\n\"There's another leaf by your ear.\"\n\n\"Ugh.\" Anya fished out the offending debris and discarded it with a faint scowl. \"What are you doing anyway? Thought you had 'big important work' to do.\"\n\n\"I hadn't heard you breaking anything in a bit. Made me worried.\"\n\n\"Worried that I hadn't broken anything?\"\n\n\"No. Worried that you'd broken something badly enough that you couldn't whine for help.\"\n\n\"Oh ha ha.\" Anya stood up. \"It's good anyway. Now you can braid my hair for me like I wanted.\"\n\n\"I still have things to do.\"\n\n\"Mmhm. But you're procrastinating now, and I'ma help with that.\"\n\n\"You think so?\"\n\n\"Yep. Come on.\"\n\n****\n\nCade sat back in his chair in the sun, right where he'd been before. Only now instead of keeping his laptop on his lap, he had his sister in front of him on the grass, wiggling her way as close as possible. Anya settled herself between his legs and leaned her head back a bit toward him.\n\nAnya was right. He wasn't really in the mood for more work right now anyway. Maybe she'd lured him into procrastinating, but that was fine. It was where he was now regardless.\n\n\"What do you want?\" Cade asked, running his hands over Anya's hair and smoothing it down some. \"One braid? Pigtails?\"\n\n\"Hm, whatever,\" Anya said, unbothered. \"Mostly just want the attention.\"\n\n\"You're not supposed to say that part out loud.\"\n\n\"Too late. You've been suckered already.\"\n\nCade sighed. \"Uh huh.\"\n\nNevertheless, he started experimenting with Anya's hair, braiding small handfuls together rather haphazardly. Anya leaned into it and relaxed, just enjoying the process.\n\nCade put braids in and took them out again. Not really with any sort of plan. Just trying things. Just making his sister happy. Enjoying the quiet, sunny intimacy of it.\n\nIt was a rather soothing way to pass some time, really. Anya clearly felt the same. She may as well have been a cat for the level of satisfaction she showed. Practically purring in his lap.\n\nEasy to forget one's troubles entirely. At least for a time.\n\n\"Were you outside my room last night?\" Anya asked suddenly.\n\nCade faltered, losing his hold on the braid he'd been working on.\n\nAnya just waited. Eyes closed. No evident concern on her features.\n\n\"Yeah,\" Cade admitted after a pause that hadn't quite passed into fully awkward territory.\n\n\"You do that sometimes, don't you? Not just me imagining it.\"\n\n\"I don't want to bother you.\"\n\n\"I know. Can't sleep?\"\n\n\"Sometimes, yeah.\"\n\nAnya nodded, then held still as Cade started undoing one of her braids. \"You should come in if you need to. We can talk. Or not talk. Whatever.\"\n\n\"Don't want to disturb you.\"\n\n\"So you said. But I don't want to you to feel alone. That's what sisters are for, you know? Or brothers. We got each other still.\"\n\n\"I know. I really do.\"\n\n\"'K. Wanna rub my shoulders some as long as you're there?\"\n\nCade gave Anya an appraising look. She couldn't see it with her eyes still closed, so it was wasted.\n\n\"Genuinely can't tell if you're being selfless or self-interested sometimes,\" he said.\n\n\"Mmm. That too is what sisters are for.\"\n\n****\n\nAnya was contemplative that evening. She took a long time showering, running her hands through her hair over and over as though they were Cade's. Not the same, of course. Not even close.\n\nShe wasn't sure why she'd even brought up his little nighttime check ins. She'd already been basically sure what was up. She didn't really need to confirm it or anything. Maybe something her conscious mind hadn't quite grasped yet. Maybe that was it.\n\nEither way, she had an idea that was probably worth a shot. An idea that took full form in her mind as she dried off after her shower.\n\n\"I think we should try sleeping together,\" Anya said.\n\nCade gave her a look. \"Slee-\"\n\n\"I mean just sleeping. Obviously. Whatever pervy thing you just thought, stop it.\"\n\n\"Only just that sleeping together means sex, sometimes. You know?\"\n\n\"I do,\" Anya said. \"And obviously I didn't mean that.\"\n\n\"Mmhm. Sure. But, uh, why though?\"\n\n\"Maybe it would help.\"\n\nCade waited a moment. \"That's it? Maybe it would help?\"\n\n\"Sure. That's what you're thinking when you can't sleep, isn't it? And you relax me, so... it could work.\"\n\n\"I think I mostly just want to talk when I can't sleep. Just... I don't know. Feel not alone maybe.\"\n\nAnya nodded. \"And this will help.\"\n\nShe was fully prepared for her brother to not agree at all. But at least she'd put the idea out there. Given it a try. And maybe he'd think about it more.",
        "Then again, she wouldn't have even brought it up if there wasn't a chance.\n\n\"We could try it,\" Cade said.\n\n\"Cool.\"\n\n\"You're, uh, gonna put something else on though, yeah?\"\n\n\"What, you don't like my towel-dress?\"\n\n\"It's nice,\" Cade said. \"But I'm worried about it staying on while you sleep.\"\n\n\"Fair.\" Anya nodded. \"Don't worry. I shall be properly attired.\"\n\n\"Oh good.\"\n\n****\n\nAnya was still getting ready when Cade arrived at her room. Luckily she was already properly attired, as promised, but was still brushing her hair in the mirror. She only noticed her brother because she saw him in the reflection. She kept brushing anyway until she was ready.\n\n\"I was on my way,\" she said.\n\n\"Uh huh.\"\n\n\"Your room or my room?\"\n\n\"Well we're both here already, aren't we?\"\n\nAnya nodded. \"True. Easier that way, huh?\"\n\nShe padded over in her cami and panties, followed close by Cade in his boxers and t-shirt. It was a level of clothing that they were both used to around each other, even if it wasn't everyday attire, exactly. More the stuff of lazy Saturdays or storm days.\n\nClimbing into bed together was still a bit awkward. Anya wasn't used to sharing, nor it seemed was Cade. They both lay on their backs, tense and silent.\n\nIt was possible this wasn't a good idea after all.\n\n\"I didn't think this was going to feel weird,\" Anya said.\n\n\"I had a feeling it might,\" Cade replied, a hint of amusement in his voice, but only a hint.\n\n\"Pheh, whatever. Come here.\"\n\n\"Wha-\"\n\nAnya forcefully pulled his head over to rest on her, then ran her fingers through his hair. She did much the same as he'd done for her that afternoon, though without the pretense of hairdressing.\n\n\"You're so tense,\" Anya whispered.\n\n\"So are you.\"\n\n\"Mmhm. We'll get over that.\"\n\n\"You think?\"\n\n\"I hope.\"\n\n\"... don't let me fall asleep on your boobs if I do start to relax.\"\n\nAnya giggled. \"I don't mind. They're not getting much use these days as it is.\"\n\n\"Probably should stay that way.\"\n\n\"Mmm, probably. Shh, though. Just relax.\"\n\n\"Yeah. Ok.\"\n\n****\n\nCade felt soothed and comforted in a way he wasn't much used to when going to sleep. It wasn't a completely foreign feeling, as it was very similar to their regular casual cuddling. But it was different for sure. More deliberate, perhaps, and with Anya tenderly caring for him.\n\nHe only realized just how deep he was sinking into it when Anya giggled softly. He jarred back to reality more sharply than he liked.\n\n\"What?\"\n\n\"Nothing,\" Anya said quietly. \"Just... I realized you're drooling on my boobs.\"\n\n\"Shit.\"\n\nCade pulled away and wiped his mouth. Indeed, there was a collection of saliva in the corner of his mouth.\n\n\"Don't go,\" Anya said.\n\n\"I'm not. Just... gonna lay my head somewhere else.\"\n\n\"Aw. I don't get people drooling over me very often, you know.\"\n\nCade shifted and tried to get comfortable in a more dignified manner. Which after he'd drooled on his sister's tits, dignity wasn't an easy thing.\n\n\"It's not meant to be so literal anyway,\" Cade said.\n\n\"Sure. But that's why it's funny.\"\n\n\"You're a weirdo.\"\n\nCade rolled on his side facing away from Anya. To his mild surprise, she followed and curled up against his back.\n\n\"Good thinking,\" Anya said. \"If I'm big spoon, my injured arm can be on top.\"\n\n\"That's-\"\n\n\"Plus you know some people call this 'jetpacking'? When the smaller person is big spoon. It's pretty cute.\"\n\n\"... just don't drool on me.\"\n\n\"No promises.\"\n\nCade still fully expected to lie awake for a while. Though Anya had already helped, he wasn't abuzz with any of his normal nighttime concerns and empty but distracting thoughts. And so he fell asleep without hardly any fuss.\n\n****\n\nAnya had pleasant dreams. She couldn't remember what they were exactly, but she recalled them being nice.\n\nShe realized almost immediately upon waking up that she had, in fact, drooled on her brother at some point. But if she didn't say anything he probably wouldn't notice. Besides, he'd drooled first.\n\n\"You can let go of me now,\" Cade said softly.\n\n\"But you're so warm and cuddly.\"\n\n\"Mmhm. You too. Still, though.\"\n\n\"How'd you sleep?\" Anya asked, not yet letting go.\n\n\"... really well, actually.\"\n\n\"Me too.\"\n\n\"Well... good.\"\n\n\"So we should do this again, right?\"\n\n\"I... would like that,\" Cade admitted.\n\n\"Good.\"\n\nAnya kissed Cade's shoulder, then released him. She smiled as he rolled away, but then frowned thoughtfully at how awkwardly he was moving.\n\n\"You don't have a boner, do you?\" she asked.\n\n\"Jesus, Anya. You really gonna ask me that?\"\n\n\"... well do you?\"\n\n\"Yes. And I'm feeling really weird about it.\"\n\nAnya shrugged, glint of amusement in her expression. \"It's normal, you know. Obviously you know. Morning wood. I wasn't gonna assume it was 'cause of me.\"\n\n\"Good. Because it isn't.\"\n\n\"I know.\"\n\n\"But... ugh. It's weird. Sorry.\"\n\n\"Hehe, ok, well shuffle off awkwardly then.\"\n\n\"Thanks. I will.\"\n\nAnya snickered to herself some once Cade was gone. Him being all shy over his erection was probably the funniest part.\n\nShe idly wondered if, just by chance, she did have anything to do with it. Not in an attraction kind of way, obviously, but just because her boobs were all nicely squished up against him. Or just because of the intimacy of waking up with someone.\n\nNeither her or her brother were really used to getting much of anything in bed these days. Unless Cade had a sneaky girlfriend or something. Which was possible, but highly unlikely. And even if he did, there certainly weren't any sleepovers happening. Some midday fucks, maybe, at most.\n\n\"Maybe that's part of our problem,\" Anya murmured aloud to herself. \"He's as close to a boyfriend as I've had for a while, but we've both been afraid to ask for what we need sometimes.\"\n\nWell that had to change, then. Anya couldn't complain about how close she and Cade were. He was the best brother she could ask for in many respects. But maybe she needed more. Maybe they both did. Not in a weird way or anything. Just... night comfort, for instance. Nothing wrong with that.\n\nIt beat the hell out of dating too. Anya was not at all interested in getting back into that world. Especially having to explain her parents and stuff. Maybe it wasn't a big deal, but she really just didn't want to get into that with much of anybody, really.\n\nCade already knew. Knew mostly everything. And he loved and accepted her for all of it. That was a nice feeling. As was the comfort and security of waking up curled around him.\n\nOnly problem was how was he ever gonna be the big spoon?\n\n\"Can't have him poking me in the morning,\" Anya giggled to herself.\n\nIt was a minor but amusing problem.\n\n****\n\n\"I thought about you a lot today,\" Cade said.\n\nAnya perked up. \"Oh?\"\n\n\"Yeah. Thought about saying something in therapy. Like 'hey so I slept with my sister last night'. Something like that.\"\n\n\"Pff, ha, yeah. Guess that coulda been funny.\"\n\nCade shrugged. \"Coulda been. Probably not, though. Then I'd have to explain what actually happened. Then explain why I felt the need to joke about it. Woulda been a whole thing.\"\n\n\"Suppose so. You're still sleeping with your sister again tonight though, right?\"\n\nCade smiled crookedly. \"I believe so, yes.\"\n\n****\n\nThe whole sleepytime process was even smoother the second night. Less awkward, at any rate. Both sibs knew what they were getting into.\n\nCade still let Anya coddle him a bit and be the big spoon again. It was a comfort he hadn't known he needed, but was so dang good now that he'd stumbled into it.\n\nWaking up fully erect wasn't the greatest, though. He didn't really want to think too hard about why that was happening, nor talk about it with Anya. Because yes, it was the sort of thing that just happened. But also, it didn't always happen. And it wasn't always quite so... insistent.\n\nBut these things happen. What could a brother do?\n\nThey fell into a bit of an easy routine. They had many small routines together, and sleeping became a new one. Phasing out their separate nighttime lives and making something new and wholesome.\n\nAnya seemed to be generally happier too. Certainly more outwardly cheerful. Even when hampered by her injury. Though that didn't last overly long.\n\n\"Got my arm baaaccck!\" she declared one day upon returning from seeing the doctor.\n\n\"Well done you,\" Cade said.\n\n\"Mmhm. Guess what I'm going to do.\"\n\n\"Something stupid?\"\n\n\"Wrong! I'm gonna go see if I can climb to that branch I can never reach on the really tall tree.\"\n\n\"... that's-\"\n\n\"La la la, can't hear yooouuu.\"\n\nCade sighed. \"Great. I'll just get an ambulance queued up, shall I?\"\n\nAnya, undeterred, marched outside, flexing her newly healed wrist. She found her intended challenge, and promptly scampered up it. Cade could only stand below her and watch.\n\nHe probably didn't need to worry, really. When she wasn't doing something totally stupid, like trying to jump from a tree to the roof, Anya was well skilled at navigating climbing obstacles. Trees in particular.\n\nSoon enough she was dangerously close to the very pinnacle of the tree, and apparently as high as she'd wanted to reach. She laughed triumphantly and waved down to Cade, who bemusedly waved back.\n\n\"Did ya see?\" Anya asked as she shimmied back down.\n\n\"Yes. You know I did.\"\n\n\"I nailed it.\"\n\n\"Mmhm.\"\n\nAt one of the lowest branches, Anya stopped, hooked her legs around it, then fell over backward to dangle upside down, just about with her face on a level with Cade's. Her shirt immediately slipped and gathered under at her boobs, exposing most of her tummy. She didn't seem to care.\n\n\"I've missed having my hand,\" she said, swinging carelessly.\n\n\"If you immediately break it again, don't come crying to me.\"\n\n\"Pff. Didn't even break it last time. Not really. You said so yourself.\"\n\n\"That's not at all the point.\"\n\nAnya shrugged, which only exacerbated the precarious grip her shirt had on modesty.\n\n\"I'm a free spirit,\" she said. \"You can't chain me down.\"\n\n\"No indeed. Do you want some help down though?\"\n\nAnya glanced at the ground, then back to Cade. \"Yes please.\"\n\nCade held Anya as she released her legs from the branch and flipped herself onto her feet. It was a reasonably graceful maneuver, all things considered.\n\n\"Thanks,\" she said, belatedly adjusting her shirt.\n\n\"You're gonna have to be more careful,\" Cade said.\n\n\"I wasn't gonna fall,\" Anya said with a roll of her eyes.\n\n\"Not that. You're just gonna end up showing off your boobs one of these times if you keep going upside down.\"\n\nAnya gave him a strangely intense look, like she was studying part of his soul rather than anything physical.\n\n\"Yes,\" she said slowly. \"We wouldn't want that, would we?\"\n\n\"... no?\"\n\nAnya smoothed herself out some more than flounced off, humming to herself.\n\n****\n\nAnya hugged Cade more tightly in bed that night. Mostly just because she could. She had full use of both arms again, and she aggressively cuddled her big brother, spooning him tightly.\n\nCade seemed amused, but didn't complain. They both fell asleep relatively easily, as they'd been getting used to.\n\nThe problem for Anya was that she woke up horny. It had been an increasing problem for her. She wasn't used to it. It had really only been happening since she and Cade started sharing a bed.\n\nHe obviously had his constant morning wood too, though they'd both tried to just brush that off. Make light of it. Or just be awkward about it, as Cade was sometimes wont to do.\n\nTo be fair to Cade, boners weren't the most subtle things in the world. Anya's arousal was much easier hidden. So it made a lot of sense that he'd be more awkward about these things.\n\nAnya was still musing as Cade started shifting and waking. She stayed quiet for a few moments longer, but tightened her grip again and nuzzled her face into the back of his shoulder.\n\n\"Morning, sleepy,\" Anya murmured.\n\n\"Morning.\"\n\n\"Cade?\"\n\n\"Hm?\"\n\n\"Are you hard?\"\n\nCade paused for a long beat. \"You know I am. I wish you wouldn't bring it up, though.\"\n\n\"I don't know. Maybe some mornings you aren't.\"\n\n\"No, it's pretty much every morning these days. Probably just 'cause I don't jerk off at night, though. Since we're together and all.\"\n\n\"Mmhm,\" Anya agreed without really meaning it. \"That's probably why.\" She took a turn letting a pause hang, then, \"Can I play with it a little?\"\n\n\"Anya!\"\n\n\"Just a little. Not in a weird way or anything.\"\n\n\"Explain to me how this could be not weird?\"\n\nAnya sighed, but didn't let go of Cade. \"'Cause it's not. That's all. Like... I wouldn't be jerking you off or anything. That would be weird.\"\n\n\"But my sister just playing with me isn't? As long as she doesn't try to get me off?\"\n\n\"You're overthinking this.\"\n\n\"You're underthinking it.\"\n\nCade tried to pull away, but he didn't try very hard, and Anya was clinging stubbornly enough that he didn't get anywhere.\n\n\"Please?\" Anya said.\n\n\"Don't do that.\"\n\n\"What?\"\n\n\"You know this isn't fair. Asking me something like this while I'm horny.\"\n\n\"I don't know if you're horny. Morning wood doesn't mean that necessarily.\"\n\n\"It doesn't mean I'm not, though.\"\n\n\"True, I suppose,\" Anya said thoughtfully. \"Are you horny then?\"\n\n\"Jesus, Anya.\"\n\n\"I am,\" she admitted softly.\n\nThat got Cade very thoughtful for a long, long moment. Anya waited anxiously for some response.\n\n\"This is a bad idea though,\" he said.\n\n\"Probably.\"\n\n\"Why do you even want to... play with me?\"\n\n\"It's been a long time since I've done stuff with anyone. I just... feel like I want to. And it'd be nice not to have any pressure on it. Usually it's just about sex and junk. This wouldn't have to be. It couldn't be, actually.\"\n\nCade paused again. \"We could find someone else.\"\n\n\"They wouldn't be you.\"\n\nAnya thought for sure he'd roll away again. She'd let him go this time. She was aware she was getting a bit too desperate. She didn't mean to. That hadn't been the intent. But it wasn't bad yet. She could still salvage things by just letting him leave.\n\nInstead, \"Just for a minute, ok?\" Cade said. \"And if it's weird... we never mention it again, right? I don't want to... to not be able to sleep with you anymore.\"\n\nAnya felt a surge of emotion at the genuine way Cade pleaded with her. She didn't want to lose sleeping with him either. She wasn't even sure why she was risking it like this.\n\n\"Deal,\" she said, ignoring her other barrage of thoughts.\n\nNeither of them moved.\n\n\"Well?\" Cade said.\n\n\"Oh. I thought you were going to, like, roll on your back or something.\"\n\n\"First of all, you won't let me move. Secondly, I don't know that I can handle facing you right now.\"\n\n\"Ah. Fair. Ok.\"\n\nAnya trembled slightly as she slid a hand down her brother's body. He was right, of course, that this was weird. But that wasn't going to stop her. Not now.\n\nShe found his cock easily. It stuck out from the rest of him rather lewdly.\n\n\"You're so hard,\" Anya whispered as she brushed her fingers across the tent he made in his boxers.\n\n\"I did tell you that.\"\n\n\"I know. But you're, like, fully hard and everything.\"\n\nCade squirmed uncomfortably. \"What did you think I meant?\"\n\n\"I dunno. Less than that.\"\n\n\"Ah.\"\n\nAnya rubbed her hand over Cade's cock. She pressed more firmly as she grew in confidence and became more certain he wasn't going to suddenly slip away.\n\nCade even made a small, soft groan when Anya first pressed her palm hard against him. It was cute and gratifying, and only made her want to play more.\n\nShe wasn't sure if she was actually turned on by this or anything. It was hard to say if it was that, or some other desire entirely. Only it was hard to say what else it could be other than horniness.\n\nAnya sneaked her hand through the front of Cade's boxers and felt his erection directly. He seemed even harder somehow. And... twitching? Definitely twitching a little.\n\nShe wanted so badly to just wrap her hands around him. A sudden, intense urge to do so. But he was her brother, still. It wasn't like that. She wasn't about to jerk him off. Just play.\n\nAnya was fully aware her logic had some holes to it. She just couldn't be bothered worrying about them just at the moment.\n\n\"Do you need to jerk off in the mornings?\" Anya asked softly.\n\n\"... sometimes. It'll just go away on its own in a while though.\"\n\n\"Ah.\"\n\nAnya kept playing, kept feeling her brother's heat and arousal. Precum slicked the tip of his cock, and she played with that too. She got another soft whimper out of him as she rubbed her finger around the slippery head of his erection.\n\n\"I'll have to jerk off today for sure,\" Cade said.\n\nAnya thrilled at that admission in an entirely inappropriate way. She had to stop. She knew it. But she didn't want to. And for some reason Cade had made no attempt at all to break this off. He'd said only a minute, but that limit was proving increasingly inaccurate.\n\n\"You should jerk off more,\" Anya said. \"It's good for you.\"\n\nCade snorted. \"How would you know? And how do you know I don't already jerk off plenty?\"\n\n\"I suspect.\"\n\n\"Uh huh. I don't think I want to know what those suspicions are based off of.\"\n\nAnya slipped her hand lower, down the base of Cade's shaft, locating his balls by touch. She gave them the most tender of massages, and smiled to herself at the soft pant she heard from her brother.\n\n\"They're based off you always being hard in the morning,\" she said.\n\n\"Oh. Right.\"\n\n\"So maybe you aren't cumming enough.\"\n\n\"Not something you expect to hear from your sister,\" Cade mumbled.\n\nAnya got another thrill at the way he said 'sister.' While she was fondling his balls and all. She traced her fingers back up, caressing his cock.\n\nShe had to admit she was getting pretty horny too. It wasn't just him. Hers wasn't quite as obvious, though, even though she'd kind of admitted to it already.\n\n\"I gotta go,\" Cade announced suddenly.\n\nAnya kept running her fingers along his shaft. \"Oh,\" she said disappointedly.\n\n\"If I don't...\"\n\n\"You're gonna cum?\"\n\n\"Yeah.\"\n\nAnya nodded and reluctantly released her brother. \"Can't have that.\"\n\n\"Nope. That'd be bad.\"\n\n\"Mmhm.\"\n\nCade adjusted himself, then slowly rolled out of bed. Unlike other mornings, he didn't try to hide how erect he was. Anya caught a full view of the tent in his boxers, sticking straight out as it was. Another surge of arousal pulsed through her.\n\n\"Gonna go jerk off?\" Anya asked.\n\n\"... yeah.\"\n\n\"'K. See you for breakfast?\"\n\n\"Sure.\"\n\n\"Cool.\"\n\nCade walked out a bit awkwardly. He didn't close the door. Anya didn't even care. It'd be fine if he walked back in, but she knew he wouldn't. He was busy now. Just as she was.\n\nShe hardly even waited until it was safe before rolling on her back, throwing the covers out of the way, and jamming a hand into her panties. They were wetter than she ever would have guessed. How long had she been playing? She didn't think it was more than a minute or two. But really... maybe it had been longer. She'd been entranced and not really paying attention to time.\n\nCade was supposed to stop her, and she'd been enjoying the fact that he hadn't for so long.\n\nAnya bit her lip and rubbed her pussy. She thought about Cade while she played with herself. Thought about stroking his cock, about letting him watch her right now if he wanted.\n\nUnbidden, the thought of him walking back in, yanking her panties down, and burying his face in her pussy hit her hard. She came to that mental image, of her big brother licking her out.\n\nShe shivered in the aftermath, not sure how she felt about it all. Not the first questionable fantasy she'd ever had, though, and it made her cum so good. But still, though, probably best not to head down that road any farther.\n\n****\n\nCade wasn't proud of jerking off with the fresh feeling of his sister's hand on him, but her very much enjoyed it. It was a guilty enjoyment, sure, but not enough to stop him.",
        "What had come over Anya anyway? Asking to touch him like that. And then... him letting her.\n\nNot great. Not great.\n\nIt was them sleeping together. That's what did it. And Cade was not prepared to give that up if he didn't absolutely have to.\n\nHe was just getting used to basking in the feel of being loved and comforted by someone, both on his way to sleep and upon waking up. It wasn't a feeling to be discarded lightly.\n\nAnya gave him a piercing look when he finally dressed and joined her for breakfast. He was sure she was going to ask him about his masturbation, but she didn't. Probably just as well.\n\nEven better, they both quietly slipped into bed again that night as though nothing had changed.\n\n\"You hard?\" Anya asked again the next morning.\n\nCade was already all abuzz with barely restrained nerves and anticipation. He didn't want to admit to himself that he'd been hoping she'd ask, let alone admit it to Anya. He deliberately paused before answering, trying to seem like he wasn't excited.\n\n\"Yes,\" he said.\n\n\"... can I play with it again?\"\n\n\"Just for a minute.\"\n\n\"Mmhm. And I won't make you cum.\"\n\n\"No, of course.\"\n\n\"Of course,\" Anya echoed.\n\nCade moaned softly as her warm little hand sneaked down to his cock. Why'd it have to feel so damn good? From his little sister of all people.\n\nAnd yet... who else could he ever have been so comfortable with? Anyone else touching him like this, they'd basically have to be banging. He wasn't sure what was going on here, but it wasn't like that. Couldn't be. He didn't even want to think about the possibility.\n\nHe just wanted to enjoy the moment. Anya petting his cock while all curled up against him from behind. It was nice.\n\n****\n\nAnya settled in just as firmly to their new morning routine. It began to feel normal to just kind of reach over and play with Cade's erection every morning. It shouldn't, but it did.\n\nIt got to be her favourite part of the day. Lazily waking up and having a solid few minutes of super inappropriate play time. Sometimes longer.\n\nAnd afterward they'd separate and do their own things. Masturbating, mostly. Anya didn't get herself off every time, necessarily, but usually she did. She tended to be quite horny by then.\n\nIt was actually kind of crazy how long it took Anya to realize she could spy on her brother if she wanted. She knew the perfect spot on the perfect tree for seeing into his room. She'd just never really had a use for it.\n\nOnce she realized, though, she found it near-impossible not to at least try it out. As it turned out, it worked beautifully.\n\nAnya dressed and slipped out of the house after leaving Cade that morning. They often slept in her room, but sometimes his. It made it easier for her if she left him in his room and knew right where he'd be. No chance of him still wandering around when she was trying to sneak out.\n\nCade still lay in bed once she managed to scramble to her semi-hidden perch. She'd probably be spotted if Cade looked fully out his window, but barring that she should be fine.\n\nHe'd thrown off his covers and lay on his back. His hand covered his cock, mostly, but the jerking off motion was very clear.\n\nAnya watched with intent fascination. She wasn't even sure why she cared. Why she felt the urge to watch. Touching him, sure, there was a physical intimacy there. Not a healthy one, perhaps, but still.\n\nWatching? There wasn't really a good excuse for that. There just wasn't.\n\nAnd yet here she was.\n\nMaybe the cumshot. Maybe that was what she wanted. The part she hadn't been able to experience. She wasn't allowed to make him cum, but now she got to see it.\n\nIt was kind of neat, at any rate. Seeing him cum. Her big brother making a big mess. It would have been nice to be a part of it, but just seeing it was... something.\n\n\"You seem off this morning,\" Cade said over breakfast a little later.\n\n\"I'm not,\" Anya said.\n\nHe raised an eyebrow. \"You sure?\"\n\n\"Mmhm.\"\n\n\"Ok.\"\n\nHe dropped it, but Anya felt the extra pressure. She kept it with her through most of the day. She didn't know what else to do with it. She'd spied on her brother. There was nothing else she could pretend it had been. It wasn't clear to her if she was guilty about it, but it was definitely throwing her off somehow, and Cade had picked up on that.\n\nShe sighed to herself upon reaching a decision. She didn't want secrets with Cade. Not with him. Anyone else, sure. Not him.\n\n****\n\n\"I watched you masturbate this morning,\" Anya said.\n\nCade was in the midst of making them both some sleepy time tea. He handed Anya her cup while watching her thoughtfully. He didn't fully know what to make of the admission.\n\n\"You did?\"\n\n\"Yeah. From the tree outside. Across from your window.\"\n\n\"Ah. Just this morning?\"\n\n\"Yeah.\"\n\n\"Guess I should have seen that coming.\"\n\nAnya risked a smile. \"I kinda did see that cumming,\" she said softly.\n\nCade snorted and blew on his tea, even though it wouldn't be cool enough for another few minutes. \"I weirdly don't think I'm as embarrassed about it as I should be.\"\n\n\"Well, you know, I've played with your dick a lot lately.\"\n\n\"There is that.\"\n\nAnya shifted her weight and folded her arms anxiously. \"You know in therapy... apparently I don't trust people easily.\"\n\nCade shrugged. \"Who does, really?\"\n\n\"Lots of people. I think. Just... I mean it's you. I don't want to hide stuff from you, you know?\"\n\n\"I do.\"\n\n\"I won't spy again or anything. Probably.\"\n\n\"Probably?\"\n\n\"Well... I get stupid sometimes. When I'm... horny.\"\n\n\"Ah.\"\n\nCade felt a thrill run up his spine. His sister horny over him. Of course she was. She didn't play with his cock all the time for non-horny reasons. But to hear her say it...\n\n\"Do you... want to watch sometimes?\" Cade asked. \"Like, not through the window?\"\n\nAnya's eyes went big and hopeful, even as she tried to downplay her reaction. \"Is that ok?\"\n\n\"... probably not. But that doesn't seem to stop us.\"\n\n\"It doesn't, does it?\"\n\n****\n\nAnya got stupidly excited as it got closer and closer to bedtime. She kept waiting for Cade to be ready to jerk off, but that didn't seem to be happening.\n\n\"Are you doing it or what?\" she finally asked before they went to bed. His room, tonight.\n\n\"Hm?\"\n\n\"Jerking off. You said I could watch.\"\n\nCade tilted his head. \"Sure. Sometimes. Maybe. I'm not gonna do it just to give you a show.\"\n\n\"Well why not?\"\n\n\"Anya-\"\n\n\"That's such a tease,\" Anya said, hands on her hips.\n\nCade sighed. \"Maybe in the morning, huh?\"\n\n\"Promise?\"\n\n\"No. I said maybe.\"\n\n\"Blergh. Fine.\"\n\nAnya only gave Cade grumpy cuddles that night, and she found it harder to fall asleep than she was used to these days. She probably should rubbed one out, in hindsight. She'd been so focused on her brother she hadn't considered her own needs.\n\nShe woke up early and anxious the next morning. Almost immediately she went for Cade's cock and played with it to wake him up.\n\nUnlike other mornings, she wrapped her hand around him and properly stroked him the way she'd been avoiding. She needed him in the mood today. He might still hold out on her otherwise.\n\nCade stirred awake, groaning softly as Anya jerked him off under the covers.\n\n\"Unf. This... this is a pretty good way to wake up,\" he mumbled.\n\nAnya grinned. \"You like?\"\n\n\"You know I do.\"\n\n\"You have to let me watch you finish,\" Anya reminded him. \"You promised.\"\n\n\"Mmhm.\"\n\nDespite agreeing, Cade just kind of lay there, letting Anya stroke him. He seemed in no hurry to take over.\n\nAnya kind of was, but only in the sense that she was all excited to see him cum. She was enjoying the handjob too, which she'd sort of tricked herself into, but mostly she wanted the ending. And Cade didn't give any indication of wanting to take over and finish himself.\n\nAlthough... if he didn't do anything, and Anya accidentally made him cum just from stroking him... that wasn't her fault, was it. It wasn't like she'd mean to make her brother cum. She couldn't be blamed for that.\n\nShe frowned slightly at the sudden inspiration for sneaking Cade an orgasm. It was an exciting idea. She could practically already feel him pulsing in her hand, shooting cum, making a sticky, hot mess. But that was still super bad, and she definitely couldn't do that.\n\nEven if, yes, she was fully jerking him off right now. That was incidental to the main goal, though. It had just happened. No good worrying about it at this point.\n\nShe had to be careful in future, was all. Go back to just playing. Playing was ok. Sort of. Better than a sisterly handjob, at any rate.\n\n\"That's enough,\" Cade said quietly.\n\nAnya almost missed the soft words. She could have pretended not to hear. Maybe that was even his intent. But... she stopped her hand, then reluctantly let go of him.\n\n\"You're close?\" she asked.\n\n\"Yeah.\"\n\nAnya nodded, her excitement increasing despite her reluctance to release him. Cade still wasn't moving very quickly, so she sat up and tugged their covers back. As soon as he rolled on his back, she started yanking on his boxers to get them out of the way entirely.\n\nCade seemed both amused and a little nervous. His cock stood straight up and glistened with precum.\n\nAnya knelt beside him and waited expectantly. She tried to make eye contact, but her gaze was drawn firmly to his erection. Her brother's hard cock. Right in front of her.\n\n\"This is kind of embarrassing,\" Cade said.\n\n\"No it isn't.\"\n\n\"I don't think you get to decide.\"\n\n\"Do you... want me to do it for you?\"\n\nCade hesitated at the offer, and Anya found herself hoping he'd accept, even though it would be very, very bad.\n\n\"No,\" he said.\n\nHe reached down and took hold of his cock. Anya's tummy was all fluttery as she watched Cade slowly start to stroke himself. Just for her.\n\n\"Oh wow,\" she breathed.\n\nCade bit his lip and looked away. Rather cutely, Anya thought. But he kept going.\n\nHe wasn't going very fast though. Anya didn't think it was going to work if he didn't do it for real. And sure enough, the longer he jerked himself, the more evident it was he wasn't as close as he'd claimed.\n\n\"Are you going to cum or not?\" Anya demanded impatiently.\n\nShe had put a hand between her legs and squeezed it between her thighs, covering her pussy over her panties. Not masturbating, but just needing something. The longer Cade dragged this out, the more teased she felt, and the closer she came to needing something more.\n\n\"Don't know if I can,\" he said.\n\n\"What? Of course you can. You do it all the time. I mean... not enough. We've established that. But still.\"\n\n\"You're watching me.\"\n\n\"I need to. I won't see anything otherwise.\"\n\n\"It's embarrassing.\"\n\nAnya growled and bounced with uncontained nerves, inadvertently rubbing herself a little. It felt nice, but she couldn't get distracted now.\n\n\"For fuck's sake. I'll do it then.\"\n\n\"Wha-\"\n\nCade gasped as Anya pulled his hand away and replaced it with her own. He didn't complain though. Didn't protest at all.\n\nAnya was being rather stupid here. She knew that. She also knew that it felt really, really good having her brother in her hand like this, and he needed to cum, and she really badly wanted to see it. So... here they were.\n\nSuch a naughty sister. How bad could she even get? At the moment, she didn't care. She poked her tongue out the side of her mouth in concentration and worked her brother's cock as best she knew how.\n\nCade didn't try and stop her. He clearly didn't want her to stop. That was a problem. If neither of them wanted to stop...\n\nBut that was a problem for a different time.\n\nAnya kept stroking her brother, reveling in the cute, sexy, barely audible noises he made. He was trying to be silent and aloof, but wasn't quite succeeding.\n\n\"You're gonna make me cum,\" he breathed.\n\nAnya thrilled all the way through her body. Her clit throbbed. She felt shaky and over-exhilarated. She didn't respond. Too busy stroking him. Concentrating. Not looking at him or giving either of them a chance to think better of this.\n\nCade gave a longer groan just before Anya felt his cock twitch in her hands. There was a delay that felt much longer than the fractional second it was, then a thick shot of cum exploded in a short arc.\n\nAnya's mouth dropped open and she stared with even more rapt fascination. She kept jerking only for lack of better ideas what to do. More cum poured out, hot on her skin, eventually becoming little more than a dribble toward the end. There was plenty of mess by then. Quite a little disaster.\n\n\"Oh wow,\" Anya said.\n\nCade shrugged and lay back, not meeting her eyes. Anya barely noticed. She crouched lower, running a delicate finger down her brother's softening shaft. He was cummy all over his cock, balls, and lower tummy. She mostly just had it on her hands.\n\nAnya played with his cum with an awed fixation. This was bad and she knew it. She shouldn't have finished her brother off like that. But she was tingling and excited, and was all cummy and slick. The bad parts just didn't seem important.\n\n\"So much,\" Anya breathed.\n\nShe ran her fingertips through the mess, feeling how slippery he was. She was only making the mess worse by spreading it, but it was just too much fun.\n\n\"I'm gonna need to clean up now,\" Cade said.\n\n\"Uh huh.\"\n\nAnya kept toying with her brother's cum.\n\n\"Why are you still playing with it?\" he asked.\n\n\"'Cause it's neat.\"\n\n\"... it's my cum.\"\n\n\"Yes. I am aware.\"\n\n\"You shouldn't...\"\n\n\"Shouldn't what? Jerk you off? Too late for that.\"\n\nCade sighed. \"Yeah. It is, isn't it?\"\n\nAnya stopped with her hand still on his cock. She could feel it pulsing again, hardening under her touch.\n\n\"You don't regret it, do you?\" she asked softly, needing the answer to be no.\n\nCade took a moment to answer, but thankfully shook his head. \"No. It's horrible, but... that was really good.\" He looked at her cautiously. \"I liked having my sister jerk me off.\"\n\nAnya cracked a smile. \"Well she liked doing it.\"\n\n\"So... what do we do with that?\"\n\n\"I dunno. Lucky we both got therapy already I guess.\"\n\nCade groaned. \"No way I'm saying anything about this.\"\n\n\"Ha, yeah, probably not, huh.\" Anya moved her hand up Cade's shaft. He was so damn slippery under her fingers, and stroking him would probably be super fun like that. Using his own cum and everything. \"Want me to do it again?\"\n\n\"Don't tempt me.\"\n\n\"I don't mind.\"\n\n\"No. No better not. Not right now.\"\n\n\"Later?\" Anya asked hopefully.\n\n\"You really liked doing that? It's not even the fun part. You didn't get to... I mean...\"\n\nCade was blushing rather adorably. Anya's mind whirled even as she tried not to get distracted by how cute her brother was being.\n\nShe hadn't given any serious consideration to letting Cade touch her pussy or anything. She wasn't sure if he had either, but he'd definitely alluded to it just now. Implied that it would be the 'fun part.' Sort of.\n\n\"Lots of things can be the fun part,\" Anya said. \"I really enjoyed this.\"\n\n\"Oh. Good.\"\n\nAnya let go of Cade and brought her hand to her mouth. She swiped some cum off her finger and tasted it thoughtfully.\n\nCade just groaned and swung his legs toward the side of the bed.\n\n\"Ok, I gotta go shower. For real.\"\n\nAnya grinned. \"Sure you don't me to... clean you up some?\"\n\n\"Don't mess with me.\"\n\n\"I'm not. I would.\"\n\n\"That's what's scary. I think you actually might.\"\n\n\"Your cum tastes good.\"\n\nCade shook his head as he stood up and walked away bottomless, cock continuing to stiffen. Anya watched with great interest as his erection swayed with each step.\n\n\"I'm going to clean up,\" he said firmly.\n\n\"Ok.\"\n\nAnya barely waited for him to be out of the room before she lay back and stuffed a hand down her panties. She sucked her cummy fingers in her mouth while rubbing herself frantically.\n\nShe didn't know why this was so damn hot, why it got to her the way it did. Just something about her brother...\n\nShe was as horny as she'd ever been. That was for sure. She kept sucking her fingers long after she'd scoured them clean of any traces of cum. Her brother's cum. Goddamn.\n\nCumming once wasn't even enough. She rubbed herself off a second time right after the first, still lying in her brother's bed, still smelling his scent. Though she was at least a little slower and more methodical about getting off the second time.\n\nHer mind continued to whirl afterward, lying in the afterglow of it all. It was all so scary and confusing, but with a core of warmth and security. Whatever was going on with her, at least it was with Cade. She could feel safe with him.\n\n****\n\nCade took a long, hot shower and really tried to process. He'd let Anya jerk him off. Like fully jerk him off. Not just their usual casual play time. Which... they shouldn't have been doing either. But it wasn't as bad. Probably.\n\nBut oh god it had been so good. He'd wanted it. He'd been craving it. He even... he might have tricked her into it. That was the worrisome part. It wasn't a fully conscious thing, if in fact that was what he'd done. But Cade couldn't help feeling like he'd known that Anya would finish him, out of impatience if nothing else. And he'd done exactly what he needed to in order to push her the last little bit.\n\nCade rubbed his face, growling with frustration. He couldn't even stop picturing Anya. Her cute face, all focused and concentrating as she stroked him to completion. The way her tongue poked out the corner of her mouth. The feel of her hands on him. The way he just wanted to pull her close and...\n\nFuck's sake. His sister, though. Had to remember that. Couldn't get all worked up and distracted.\n\nHe stared down at his cock. He was already hard again. Not helpful.\n\nCade grumpily got out of the shower and dried off, then padded down the hall with the towel wrapped around his waist.\n\nAnya was still in his bed, stretched right out all happy and lazy. She hadn't even bothered shutting the door. Not that she would have much reason to, being his room and all, except that she'd clearly been masturbating. She didn't even have her panties on, and her little cooch was on full display as she lay with her legs somewhat spread.\n\nCade just stood there and watched her. He'd started to say something, then found he didn't want to. She looked beautiful in the glow of the morning sun. Peaceful. Serene. And, yes, the sight of her was kind of working for him, as he'd returned horny again, and her pretty pussy was just kind of... there.\n\nHad he ever seen Anya bottomless? Maybe not. A few times with no top on, but he'd never thought much about that. Live with someone for long enough, these things happen. Especially when you're comfortable with each other. But her pussy...\n\nPartly it held his attention because the whole scene worked so well together. Anya could very well have been a model in that moment. It was like she'd been deliberately posed to capture beauty, sensuality, and a playful naughtiness.\n\nBut she hadn't. It was just her. His little sister in a whole new context for him. Despite how much she'd been playing with his cock lately, it was jarring for Cade to see Anya that way. In a beautiful, sexual way. Recognizing that he did, in fact, have feelings for her that he very much shouldn't.\n\nBut how many of those feelings were simply the knowledge that she wanted to jerk him off? And how many were something more than that? Hard to say. How had they ever gotten to this point? His sister, dammit.\n\nAnya seemed to realize he was there, finally. She cracked her eyes and turned her face toward him. Her eyes flicked down her body, realizing almost immediately what he was looking at. She just smiled, though, and didn't close her legs, let alone try to cover herself.\n\n\"You just masturbate in my bed?\" Cade asked.\n\n\"Mmhm.\"\n\n\"And take your panties off?\"\n\n\"Sure seems that way.\"\n\n\"... you look unfairly beautiful like that, you know.\"",
        "Anya actually blushed and turned her head for a second. \"Thanks. 'Cause my pussy's out, you mean?\"\n\n\"Partly that. Partly the sun, and you being all relaxed. Partly... just 'cause you're you.\"\n\n\"You've never thought I was beautiful before.\"\n\n\"I don't know if that's true. I think I just didn't realize it before, is all.\"\n\nAnya blushed a darker red. \"Oh.\"\n\nShe squirmed a bit, seemingly unsure quite what she should do. She continued to not cover herself even a little.\n\n\"You're gonna have to put that thing away,\" Cade said.\n\n\"You think so?\"\n\n\"Mmhm.\"\n\n\"Why? You seem to like it.\"\n\n\"That's the problem. I kinda just want to, like, do something about it.\"\n\nAnya's eyes flashed wide and her mouth opened to protest, but no words came out at first. \"Like what?\" she asked breathily.\n\n\"You really want to know?\"\n\nShe nodded eagerly. Too eagerly.\n\nCade shrugged. \"I kinda really want to shove my face in there.\"\n\n\"Ah! You want to lick my pussy?\"\n\n\"I really think I do.\"\n\nAnya groaned, then abruptly rolled to her feet. \"Silly brother. You should have caught me before I made myself cum twice.\" She slipped over beside Cade, making him nervous and hopeful all in one motion. \"You know you can't eat your sis-ter's pussy.\"\n\n\"I am aware.\"\n\n\"But you want to.\"\n\n\"I really do.\"\n\n\"Unf. Bad brother.\" Anya tenderly kissed his cheek. \"I best get out of here.\"\n\n\"And put your panties back on?\"\n\n\"Nah.\"\n\n\"Anya. Panties.\"\n\n\"Don't think so.\"\n\nShe padded out. Cade helplessly watched her butt before shaking his head and turning back to his room. Anya's discarded underwear were right where she'd left them. He sighed out loud. He didn't know what to do about all this, and worse, he didn't think he even wanted to get it under control.\n\n****\n\nAnya was pretty zoned out during therapy that day. Her therapist noticed, of course, but Anya declined to tell her the real reason for it.\n\nIt amused her to consider divulging how she'd jerked off her brother, made him cum all over himself, then masturbated in his bed after. Plus the whole walking around after with no bottoms thing.\n\nBest not to get into that, though. Anya stayed vague and kept bringing the conversation back to more typical subjects. Her recently healed arm. Her parents. Her anxiety. That stuff.\n\nAll she really wanted to do was get home to Cade. It was kind of bad.\n\nAnya couldn't remember ever being nearly so desperate in her life. Not that she needed to jump him or anything. It wasn't like that. Though it was closer than it ever should have been.\n\nShe just wanted... to see him. To be seen. To feel his presence.\n\nShe didn't know what, exactly. She just felt like she needed her brother more than usual. Way more. Maybe an after effect of making him cum. Maybe she needed reassurance still. Or just the feel of his love. She didn't know.\n\nIt was actually exciting just to get home afterward. Anya's heart was all light and fluttery. Cade wasn't inside anywhere, but Anya quickly located in him in his usual spot out in the yard. She just gazed at him for a long few moments, taking in the sight of him working away on his laptop. Oblivious to her presence, and occasionally sipping a drink he had beside him.\n\nWhat would he even do if she went out and crawled between his legs and sucked his dick for him? Anya didn't know, but just thinking about doing something like that got her all wet.\n\nShe didn't understand why Cade was doing these things to her all of a sudden. She wasn't usually an overly horny girl. She had her moments, sure, but lately it was... excessive. Thinking about casually giving her brother a blowjob without even asking him first was kind of a lot.\n\nBut it was fucking hot too.\n\nAnya compromised. Or at least she told herself that's what she was doing. She changed into a skirt and no panties, which left her technically modest, but feeling just a tad slutty.\n\nShe made another pair of drinks to match what Cade seemed to have, then pattered outside to meet him. She set down one of the drinks next to his almost finished one, then sat beside him sipping her own.\n\n\"Why thank you,\" Cade said, smiling across over his laptop.\n\n\"You're welcome. Busy?\"\n\n\"You know me.\"\n\n\"Mmhm. Working and getting tipsy at the same time. Such a life of hardship.\"\n\nCade snorted. \"I never claimed it was that hard.\"\n\n\"It was hard this morning.\"\n\nAnya grinned at the look Cade gave her. He tried to appear unamused, but his lips were twitching in betrayal, threatening to smile right back.\n\n\"We weren't talking about my penis.\"\n\n\"So you think.\"\n\n\"You need something, Anya?\"\n\n\"Just the pleasure and comfort of my brother's company,\" Anya said, beaming winsomely and batting her eyelashes.\n\n\"Oh. Is that all.\"\n\n\"Mmhm.\"\n\n\"How was therapy?\"\n\n\"Good.\"\n\n\"Yeah?\"\n\nAnya wrinkled her nose. \"Well... ok, I was hella distracted.\"\n\n\"I see.\"\n\n\"I kept wanting to, like, tell her about what I did. What we did.\"\n\n\"Probably best not to.\"\n\nAnya nodded. \"Yeah, I know. I didn't.\"\n\n\"Do you... do you think we need to stop?\"\n\n\"What? No! Why would you say that?\"\n\n\"It's a legit question,\" Cade said. \"You know it is.\" He shrugged and sipped his drink. \"For the record, I kinda want to do that again. Like with the finishing and everything.\"\n\nAnya bit her lip and felt her cheeks warm pleasantly. \"You want me to make you cum more?\" she asked softly.\n\n\"Yeah. I do.\"\n\n\"That's bad, you know. With your sis-ter and all.\"\n\n\"I am aware.\" Cade reached over and booped Anya's nose. \"That's part of what makes it so fun.\"\n\n\"Naughty!\"\n\n\"Correct.\"\n\nAnya grinned wide and impish. She felt the same pleasant flush from her cheeks down in her pussy. She was getting all tingly. How did Cade do this to her so easily? And was this how he felt with her too?\n\n\"You know I thought about coming out here and crawling between your legs. Just to see what would happen.\"\n\nCade eyed her. \"Really?\"\n\n\"Mmhm.\"\n\n\"That's... damn, Anya.\"\n\n\"What, too much?\"\n\n\"I mean... a handjob from you while I'm trying to work-\"\n\n\"Blowjob. I wanted to give you a blowjob. Still kinda do. Shouldn't, I know. But it is what it is.\"\n\n\"Oh god.\" Cade groaned and had to close his eyes for a second. He drained the remainder of his first drink. \"Why are you doing this to me?\"\n\n\"I'm not, remember? If I was doing this to you I'd be on my knees and-\"\n\n\"You know what I mean.\"\n\n\"Do you not want me to suck-\"\n\nCade reached over and put his finger to Anya's lips, shushing her. She thought about sucking on his finger a bit, but that was probably excessive under the circumstances.\n\nAll this and she'd barely even touched her drink yet. So much for blaming her horniness on booze.\n\nAnd she was horny. There was no denying that. She'd made herself cum twice that morning, and still she felt the way she did now. That was crazy.\n\nIt was Cade. His doing. Somehow. Technically he really hadn't even done anything. But as Anya sat there staring, watching him try to get some more work done, she knew he didn't have to do anything in particular. He just had to exist. What was that? Love? Like... like a different love. Different than what she was used to.\n\nThe kind of love sisters shouldn't feel for brothers. That was for sure. But all it took was thinking of their morning ritual. Of being wrapped around him from behind, stroking his cock. Or... or him behind her. Erection hard against her backside. Hand getting naughty under her panties.\n\nThat would be the best. So damn good. The thought alone made her wet, which consequently made her lack of panties not the best idea.\n\nAnya couldn't remember being so horny in... ever? She'd had times, before. Previous relationships. Nothing that had gone on long. And nothing that she could recall having been so intense. Cade and her had barely done anything, really. She'd made him cum once with her hand. Amateur stuff. And yet... with him it was enough. Enough to make her feel things the wildest sex in her fantasies couldn't match. What was that about?\n\n\"You just gonna sit there and stare at me?\" Cade asked.\n\nAnya blinked and turned her head, realizing belatedly she'd been dreamily gazing at him like a schoolgirl in class sitting behind her crush.\n\n\"Not staring,\" she lied.\n\n\"You totally were.\"\n\n\"Whatever. I'm bored. How long you need to work still?\"\n\n\"I got some things to finish up.\"\n\n\"Blerh. Ok. I'ma go climb for a bit then.\"\n\nCade nodded. \"Have fun.\"\n\nAnya hurried away while trying to seem casual. Her heart was beating hard, as though somehow she felt Cade could see into her head. See what she'd been thinking. Or... just because of thinking about him? That wouldn't hit her this hard though. It shouldn't. Probably.\n\nAnya took a run at her favourite tree and managed to grab a higher branch than she usually started from. She only barely inched her way up and over, but she needed a bit of a challenge right now anyway. Anything to clear her mind a little.\n\nShe wasn't used to climbing in skirts. It wasn't a huge deal, but it made her movements a little different. She halfway considered taking it off entirely, but decided that probably wasn't a good idea. Though the thought of being up in the tree and Cade seeing her with no bottoms on and all...\n\nOh god, that morning when she'd padded around the house bottomless, and the way Cade had looked at her... so good.\n\nFuck, she was getting all wet and horny again. This wasn't helping.\n\nAnya propped herself up toward the top of the tree, just kind of sitting and chilling. Feeling the breeze higher off the ground. She tried to relax and not think about Cade, but he was all she could think about. It wasn't fair.\n\nShe wasn't sure how much time passed, distracted as she was with her own thoughts, but suddenly Cade was below her, calling up.\n\n\"I'm done with work for now,\" he said.\n\n\"That so?\"\n\n\"Uh huh.\"\n\n\"Maybe I'll come down then.\"\n\n\"Maybe?\" Cade asked.\n\n\"Yeah. I mean, you could come up, you know.\"\n\n\"Some of us outgrew falling out of trees a ways back.\"\n\n\"Well some of us are boring then, aren't we?\"\n\nNevertheless, Anya clambered back down. Cade was watching her oddly as she got to the lower branches, and she didn't clue in as to why right away.\n\n\"That's... an interesting choice for climbing trees,\" he said.\n\n\"Hm?\"\n\n\"The... lack of underwear.\"\n\n\"Oops, right. Forgot about that.\" Anya grinned shyly and stayed where she was, unsure if her brother had a good angle up her skirt at the moment or not. \"Lucky no one else is here to notice.\"\n\n\"Yeah. Lucky.\"\n\n\"Wanna see something even better?\" Anya asked, suddenly daring.\n\nCade swallowed hard. \"Better?\"\n\n\"Mmhm.\"\n\n\"Are you gonna show me anyway?\"\n\n\"Maybe. It's better if you ask, though.\"\n\nHe closed his eyes for a moment. \"Yes,\" he decided. \"I would like to see.\"\n\nAnya grinned, though her tummy was all nervous. It would be good, she thought, but it was also quite showy, what she had in mind. Maybe too much. But she didn't think so.\n\nAnya hooked her bare legs around a branch above Cade's head, then let herself swing upside down. As she'd hoped and expected, her skirt almost immediately flipped up, following gravity and leaving her in a really quite immodest state.\n\nCade was left staring at her pussy, just about exactly at face height. Anya was a little annoyed she couldn't get a better look at his expression from her position, but he was definitely staring.\n\n\"Skirts might not be the best for climbing trees,\" Cade said, voice cracking slightly.\n\n\"True,\" Anya said. \"They can be rather revealing at times.\"\n\n\"Like now.\"\n\n\"Mmhm. Like now. Do you like-\"\n\nAnya was cut off with a gasp as Cade leaned forward and kissed her upside down pussy. Just kissed it! She hadn't known he'd do that. She could have fallen right out of the tree.\n\n\"Cade!\"\n\n\"Hm?\"\n\n\"You... my pussy!\"\n\n\"Again?\"\n\n\"Wha-\"\n\nCade blithely kissed her again, almost exactly on the same spot. Anya was expecting it this time, but it still made her eyes flutter and her legs tremble just a little.\n\n\"I didn't mean for you to do it again,\" Anya said, suddenly breathless.\n\n\"Oh. My bad.\"\n\nCade just stood there, staring down at her. Anya squirmed.\n\n\"I mean... you can if you want though,\" she said softly, once it became apparent he wasn't going to sneak more pussy kisses on his own.\n\nCade smiled crookedly at her, then did indeed kiss her again. Several times, in fact. Lavishing affection on her exposed little cooch.\n\nAnya sighed happily as her brother kissed her pussy, and transitioned slowly to some small licks. Those small licks became longer, wider licks. Anya wasn't sure where the line was between kisses and being eaten out, but it was a largely irrelevant distinction, and they'd definitely crossed it anyway.\n\nAnya purred contentedly, feeling the sun on her face as she closed her eyes and just enjoyed herself. Her brother's mouth latched onto her pussy and lapping away with very unsiblinglike enthusiasm.\n\n\"Skirts might actually be really good for climbing trees in,\" Anya murmured.\n\nCade snickered, but just kept licking her out.\n\nAnya opened her eyes again, and only now realized just how convenient Cade's crotch was in her current position. Not to mention the obvious tent growing in his shorts. Getting all erect for her as he ate her pussy like a good brother.\n\nWithout any great hurry, Anya busied herself getting Cade's bottoms out of the way. Freeing his cock. He was so hard once she got her warm little hand around his shaft. Ready for her already.\n\n\"Scooch a bit closer,\" she said.\n\nCade obliged, bringing his cock to her. Practically shoving it in her face, in fact, which was perfect.\n\nAnya started out slow. Just some tentative licks at first. She'd played with his cock lots by now, but only with her hands. She needed to feel him out some with her mouth.\n\nBut she was horny. Really, really horny. Cade was doing magnificent thing to her, and she was being such a wanton little thing for her brother, even regardless of how well he licked and sucked on her pussy. Trying to go slow just didn't cut it.\n\nIt wasn't long before Anya was fully taking him in her mouth. She didn't really have a good position to try properly throating him or anything. Not that she necessarily was that good at it anyway. But she did her best. Taking as much as she could. Using her practiced hand to make up the difference.\n\n\"Anya...\" Cade breathed in between licks.\n\nAnya felt a thrill run through her at her brother moaning her name so helplessly like that. She felt the same. Felt helpless in the face of what he was doing and her flood of emotions on the subject.\n\nLuckily they had an outlet in the moment. Not a proper one at all, but one that was very fun, at least.\n\nThe two of them licked, sucked, kissed, and stroked each other. Funneling every good feeling back into more enthusiasm for making the other feel good too. It was a self-perpetuating frenzy of sibling lust.\n\nAt least it was until Anya came. She lost control then, as Cade hit just the right places and brought her the overwhelming pleasure she needed. Which wouldn't have been so bad if she hadn't still been hanging upside down from a branch.\n\nThe two of them went down in a heap. Cade caught Anya and softened their fall rather nicely, but it was still quite undignified. The two of them just giggled at themselves as they sorted themselves out again.\n\nAnya didn't bother adjusting her skirt as she crawled around and laid a kiss on Cade's lips. His eyebrows shot up for a second, and Anya realized belatedly that it was the first time they'd kissed like that. She should have known. Just... in the moment it felt right, and she didn't consider the consequences.\n\nCade kissed her back before either of them had a chance to panic about the implications. Then they were kissing each other, tender but aggressive. Locked together in mutual need and love. Reassuring each other and themselves that everything was ok.\n\nAnd it really was. Everything was so good.\n\n\"You lick pussy better than I expected,\" Anya said.\n\n\"You... expected something?\"\n\n\"Well, no. But if I had, that would have been better than it.\"\n\n\"Ah.\"\n\nThey kissed some more. It was easier than trying to form coherent thoughts.\n\nAs they cuddled naughtily in the sun, Anya sneaked her hand down to Cade's cock and gave him a very lazy and relaxed handjob. Cade groaned in rather gratifying manner as she stroked him. He didn't try to hurry her, even though he clearly wanted to cum. He let her play. As he always did these days.\n\nHis orgasm was a quietly intense thing. Neither of them got worked up about it, but he closed his eyes and moaned low in a way that hit Anya so good. His cum made a huge mess, and he bucked his hips a little, which only made it spray all the more uncontrollably.\n\nAnya kept teasing him after. She dragged her fingers through his mess, toying with all the cum. Her hand and fingers were coated, along with lots of Cade's lower body.\n\n\"It's gonna go in my mouth next time,\" Anya said, quiet but certain.\n\n\"You think so, do you?\"\n\n\"Mmhm.\"\n\n\"What if I want to cum somewhere else?\"\n\n\"You can. Just not next time. Next time is for my mouth.\"\n\nCade held her close and stroked her hair, letting her continue to fondle him.\n\n\"Is this because I licked you out?\" he asked.\n\n\"Kinda, I guess. I didn't get to finish sucking you off.\"\n\n\"You don't have to take my cum in your mouth just because you suck me.\"\n\n\"But I want to, though.\"\n\nCade snorted in amusement. \"Ok. Who am I to argue?\"\n\nAnya nodded sagely. \"Correct.\"\n\n****\n\nAnya's promise featured prominently in Cade's mind the rest of the day. The weird thing was that it seemed like it was for Anya's own benefit more so than his. He couldn't stop getting excited about the idea of cumming in her mouth, but was rather bemused about her doing it just because she wanted to. Or, possibly, because he'd made her cum with his mouth, and now she felt the need to do the same for him.\n\nIt wasn't clear either way.\n\nHe spent some time the rest of the day pondering about it all. And about how his concern about their relationship was fading away at an alarming rate.\n\nHe shouldn't have eaten his sister's pussy. He shouldn't let her blow him and make him cum in her mouth. These were obvious things.\n\nBut they were kind of past them now. So it seemed.\n\nWhat did it mean for siblings if the normal boundaries weren't in place? It wasn't necessarily a bad thing, right?\n\nCade didn't have the right answers. He just didn't know.\n\nBut it was very clear that he was seeing Anya differently these days. The two of them eye-flirting as they passed each other in the house. Their hands wandering if they felt like it. Neither of them even bothering to remain fully modest clothing-wise. What was the point?\n\nEven when they weren't being naughty it was different. Cade didn't know whether that reassured or scared him. Just the way he looked at her. And the way he caught her looking at him. It wasn't the same as it had been. There was more too it. Something dangerous and alluring.\n\nIt was like... like falling for someone. It felt like that. Except whatever version of that involved his sister. It couldn't be the same thing. There was no way.\n\nBut the realization itself was a problem. Once it was in Cade's head, he couldn't shake it. Couldn't shake the feeling of how easy it would be to fall for Anya. Maybe he already had. Maybe this was a thing that had happened long ago and he was just now figuring it out.\n\nWithout sex, what was even the difference between being in love with someone and being really close to a sibling? Was there a difference? There was meant to be. One wasn't meant to be in love with one's sib.\n\nBut what actually was the difference? Cade was absolutely not getting there on his own.\n\n\"Hey, Anya?\" he said that night, lying in bed.\n\nThey were in Anya's room tonight. He was waiting for her while she got ready to slip in beside him. He halfway felt like she was dallying on purpose so he could watch her.",
        "\"Hm?\"\n\n\"What do you think's the difference between loving a sibling and loving a partner?\"\n\n\"In our case? Or generally?\"\n\n\"Either.\"\n\n\"Well... usually I'd say sex and physical intimacy. Maybe, like, living together and building a life with each other.\"\n\n\"That sounds right,\" Cade agreed. \"But... does it work in our case?\"\n\n\"Not well.\"\n\n\"No. Not well.\"\n\nAnya's brow furrowed in thought, but she didn't stop padding back and forth in her skimpy nighttime attire. Her panties were quite a daring cut tonight, and somehow suggested to Cade that he was seeing more than he actually was. The magic of well chosen underwear.\n\n\"I dunno,\" Anya said after a few moments. \"I don't think I know the answer then.\"\n\n\"Yeah. That's what I was afraid of.\"\n\n\"Does that mean... you don't want a blowjob tonight?\"\n\n\"Unf. That's not a fair question.\"\n\n\"No. But it's a real one. I don't want to do it if you're not comfortable. We can just sleep.\"\n\n\"... I want it,\" Cade admitted.\n\n\"Oh good. I was bluffing. I really don't want to not do it.\"\n\n\"Ha, sure.\"\n\nAnya crawled into bed and pulled back the covers Cade was lying under. She grinned at him when she found that, despite his concerns, he was tenting his boxers nicely already.\n\nCade relaxed and closed his eyes, letting Anya do her thing. He let her nuzzle and play with his cock, lick and suck it, and eventually take him in her mouth.\n\nShe got him deeper than that afternoon, it felt like. Maybe a better angle for her. It felt amazing, at any rate. So warm and wet and tight.\n\nAnd it was Anya. His sister. Having her take him so adoringly in her mouth, working him with her tongue and lips, it was a whole other level unto itself.\n\nHe hadn't fully appreciated the effect that afternoon when he'd been more concentrated on licking her, but now there was nothing else in the world but her mouth on his cock.\n\n\"I'm gonna cum,\" Cade mused aloud, as much to himself as to Anya.\n\n\"Mmm?\"\n\n\"In your mouth.\"\n\n\"Mmm.\"\n\n\"My sister's mouth.\"\n\n\"Mmm!\"\n\nAnya went extra crazy on him after those last few words, and made Cade explode hard in her mouth. It felt like a lot, but it was hard to tell as only Anya knew how much he was flooding her tongue.\n\nHe wasn't even sure she knew, judging by how hard her eyes were rolled back in overwhelming pleasure and satisfaction.\n\nShe sat back on her heels afterward and Cade watched her visibly swallow whatever was left in her mouth. She caught him staring and opened wide as if to prove it was all gone. Cade just groaned and shook his head.\n\n\"Kinda bitter,\" Anya critiqued. \"But I do still really like it.\"\n\n\"... thanks?\"\n\n\"It was pretty hot sucking you off,\" she said, crawling up beside him. \"I wanna do it more.\"\n\n\"Oh. Good.\"\n\n\"Mmhm.\"\n\nAnya settled next to Cade and pulled the covers up around them. Cade was used to being spooned by her most nights, but on this occasion it felt far more natural to curl up around her. He held his sister close after she'd just sucked him off, and she snuggled cozily in his arms.\n\n\"This could be a problem,\" Cade whispered.\n\nAnya nodded. \"It could,\" she agreed.\n\nShe then nuzzled against him and lay still, slowly drifting off to sleep.\n\n****\n\nAnya woke up with a hand down her panties. Not even her hand. Her brother's.\n\nShe feigned sleep for a moment while she tried to process. She was used to waking him up by playing with him. Not the other way around.\n\nNot that she was complaining. It was an amazing feeling first thing in the morning. Having Cade gently rubbing her pussy for her.\n\nIt was different to stroking him awake. Physically different as well as mentally. But emotionally it came from a very similar place. Their increased closeness. The changes in the way they felt about each other.\n\nAnya moaned softly to let Cade know she was awake. He kissed the side of her forehead and just kept rubbing her.\n\nShe let him keep going a while, then lazily rolled over to face away from him. His hand fell out of her panties during the move. Anya pressed her butt firmly back against Cade's cock, which was pleasingly hard already. She reached back to find his wrist and guided it back between her legs. Once she released him, he felt his way back into her panties.\n\n\"This is really nice,\" Anya whispered.\n\n\"Glad to hear it,\" Cade whispered back.\n\n\"I think sleeping together was a good idea.\"\n\nCade groaned as Anya deliberately pressed her ass against him and rocked in slow motions on his cock.\n\n\"I didn't think it was gonna come to this,\" Cade said.\n\nAnya smiled, feeling her brother's erection snug against her bum, and his fingers rubbing her increasingly wet pussy.\n\n\"Me either,\" she said. \"But I think I'm really glad it did.\"\n\n\"Yeah. Me too.\" Cade kissed her shoulder. \"I don't know if any of it's right, though.\"\n\n\"Feels pretty right.\"\n\n\"It does, but... you're my sister still.\"\n\n\"Mmm. I am.\"\n\n\"That's not really a good thing in this case.\"\n\n\"Isn't it?\"\n\n\"I-\"\n\n\"I've been thinking about this,\" Anya interrupted. \"A lot, actually. I don't understand most of it. But, like, I've been super horny lately. For you.\"\n\n\"I get that. I understand. But being horny might be a bad reason for doing what we're doing.\"\n\n\"Mmhm. I've thought about that too. I've got a theory.\"\n\n\"Yeah?\"\n\n\"What if we're all horny for each other because it actually is right. You know how when you love someone, they kinda seem more attractive and you want to be closer with them, and probably want to get all sexy with them?\"\n\n\"... I'm not sure I've thought about it that way before, but I kinda get it, I think.\"\n\n\"Well... maybe that's us. Maybe we're not doing what we're doing because we've randomly been all worked up. Maybe we've been super horny because it all fits. Maybe this is right for us.\"\n\nCade's fingers were moving with a distinct lack of focus in Anya's panties now, but they hadn't stopped dancing at any point. Neither had Anya stopped rubbing her bum on Cade's erection. It wasn't a situation that made it easy for either of them to think, but as their conversation and actions had established, they were kind of stupidly horny for each other.\n\n\"You might actually be on to something,\" Cade admitted.\n\n\"I kinda think so.\"\n\n\"You think that makes this all ok?\"\n\n\"I really don't know. But... I think I maybe don't care. I kinda just want to be with you.\"\n\n\"Anya...\"\n\n\"I love you.\"\n\n\"Unf. Not fair.\"\n\nCade kissed Anya's neck and gently nipped at her ear. She giggled and wiggled more forcefully on his cock.\n\n\"Rub my clit?\" Anya asked prettily.\n\nCade nodded and kissed her some more. She helped guide his hand to the exact spot she wanted him, then moaned low and enjoyed the feel of it. The pleasure running through her. The thrill of being rubbed off by her brother.\n\nThey were quiet for a while. Anya didn't need words just then anyway. She could lie there all morning without speaking and be perfectly happy. Even if Cade wasn't playing with her.\n\n\"I love you too, you know,\" he said eventually, just soft in her ear.\n\nAnya bit her lip and pressed back more firmly to him, squeezing her thighs on his hand. Those few words hit her hard, in such a good way.\n\nShe knew what he meant. The same as what she'd intended. Expressing love beyond what was previously normal for them. Something new and beautiful, and definitely a little scary too.\n\n\"You love me,\" Anya repeated faintly.\n\n\"Mmhm.\"\n\n\"Tell me again.\"\n\n\"Really?\"\n\n\"Please?\"\n\nCade kissed just below her ear. \"I love you,\" he said with quiet finality.\n\nAnya shivered. Her brother's fingers on her clit felt all the more intense with the delivery of those words.\n\n\"I love you,\" he said again, unprompted.\n\nAnya moaned and clenched up. Just a little a more. A little... more...\n\nShe came with Cade's fingers busy on her clit, his cock hard against her ass, and his lips on her neck. The echo of his solemn words forefront in her mind. His declaration of a sibling love that was so far beyond sibling-like as to be nearly incomprehensible, though since she felt the same it was much easier to understand.\n\nAnya loved her brother. Loved him harder than she could have known. It wasn't sex that caused the emotion, but maybe... maybe it had been needed to unlock those feelings in this case. To force them to realize the truth.\n\nAnya whimpered softly and let her body tense, then relax. She curled up in Cade's arms, no longer trying to rub his cock with her butt. Just letting him hold her for a moment. She shook slightly coming down from her orgasm. Shook and nearly cried in the afterglow of it.\n\n\"You ok?\" Cade asked.\n\n\"I just need a minute,\" Anya whispered.\n\n\"Did I do... the wrong thing?\"\n\n\"No. No not at all.\"\n\nAnya took another moment to compose herself, though she wasn't sure it really worked. Whatever she looked like, and she was sure it must be a bit of a mess, with bed head and a face wet with a few stray tears and all.\n\nShe ignored the temptation to skip out of bed and fix her appearance. Instead rolling over and smoothly straddling Cade with a grace she wouldn't have guessed in herself that morning. Rather gratifyingly, Cade gazed up at her like she couldn't possibly be more beautiful to him.\n\n****\n\nCade's heart pounded as he looked up at his sister. Anya sat atop him, appearing radiant in the morning light filtering through the window.\n\nShe backed up a little and sat square on his cock, making him groan at the sudden contact. She teasingly wiggled around a bit, rubbing him very much the same as she had been before, this time with her pussy rather than her bum. Still with her panties on, though.\n\nWas it crazy to want their underwear out of the way? Cade wanted to feel her pussy on him so badly.\n\n\"What ya thinkin'?\" Anya asked.\n\n\"Nothing.\"\n\n\"Nothing? It's something.\"\n\n\"... thinking about asking you to take your panties off.\"\n\nAnya bit her lip, then grinned slowly, spreading the smile across her face. \"If I take mine off, you gotta take yours off.\"\n\nCade nodded instantly. \"Deal.\"\n\nAnya giggled as she lifted herself off him and awkwardly tried to get out of her panties without leaving her spot. As though somehow she'd lose her claim or something if she moved.\n\nCade shuffled his boxers down at the same time, freeing his cock. It pointed nearly straight up at his sister's snatch. A place of forbidden pleasure. Not quite so forbidden anymore, as it turned out.\n\nAnya settled herself back on top of him, pressing his cock down, now with her pussy against his shaft, nothing between them at all. She rocked her hips, sliding around. She was so wet, and it spread quickly across his length so she could move with easy, sensual lubrication.\n\n\"You're so hard,\" she breathed.\n\n\"Because of you.\"\n\n\"Mmm. It is, isn't it?\" Anya closed her eyes a moment. \"I can feel you pulsing.\"\n\n\"You're so wet,\" Cade said.\n\n\"Because of you,\" Anya said, echoing his previous words.\n\nShe slid back and forth along his length, grinding on every inch of him. Not taking him inside, but doing everything short of that. Sex, but technically not.\n\n\"You know I'm gonna start wanting this kind of thing more,\" Cade said.\n\nAnya giggled and pushed her hair back with one hand. \"That's ok. I will too. Kinda works out.\"\n\n\"Kinda does.\"\n\n\"That's what's good about all this. It just kinda works.\"\n\n\"I thought it was loving each other. I thought that was the good part.\n\nAnya smirked and leaned down, her hair cascading down in an unruly waterfall over Cade's face. She kissed him. Her lips met his, soft and sweet. He kissed back, just as tender and loving.\n\n\"Silly,\" she said. \"I meant aside from that.\"\n\nHe grabbed her butt, digging his fingers in and taking a good grip. He didn't try to control her movements, though, he still just let her do what she was doing.\n\n\"Ah. Of course,\" he said.\n\nCade kissed Anya some more. She seemed in no hurry to straighten back up. It made the angle she was grinding him on a little more awkward, but it was more than worth the trade off. Cade wanted nothing more than to keep kissing her. Kissing his sister. In their private little cocoon of her hair draped around them.\n\nAnya's slick pussy slid over his cock. Again and again. Eventually causing him to explode in a huge, pulsing mess.\n\nCade was pretty sure he'd mostly cummed on himself, but was pleased at how much stuck to Anya when she straightened up. He had the sudden insane urge to cum all over her, despite having just finished. He wasn't horny in that moment, just... intrigued by the idea of seeing more of his cum dripping from his sister. Possibly a little too intrigued by it.\n\n\"You're amazing,\" Cade murmured, running his hands up her thighs and under her shirt.\n\nAnya giggled. \"Tell me that when I didn't just make you cum.\"\n\n\"I will.\"\n\n\"Good.\"\n\nShe let him feel her up some, then languidly stretched out, half on top of him. Their mutual cum mess got smooshed between them. Neither really minded.\n\n\"I'm hungry,\" Anya mumbled as she nuzzled against him. \"But I kinda just want to cuddle for a while.\"\n\nCade nodded. He held her to him. \"Cuddling's good.\"\n\n\"Right?\"\n\nCade smiled as he gently tousled her hair. \"I love you, you know.\"\n\nAnya smiled back shyly, then nuzzled hard to his shoulder, clutching possessively with her hand that was on top of him. Cade wasn't sure if it was her claiming him, or being claimed by him. Maybe it was the same thing, really.\n\n****\n\nAnya couldn't stop vibrating and humming with energy. She tried to go about a normal day, but every glance at Cade made her melt and go a little shaky.\n\nShe thought she'd been in love before. She hadn't, she realized. Or at least not like this.\n\nShe'd fallen hard. That much was clear. Harder than her trip to the ground out of the tree not so long ago. But the result was so much more pleasant.\n\nCade was feeling things too. It would have been devastating if he wasn't. Anya had known he was in a similar place to her anyway, but the way he sneaked glances right back at her was still reassuring.\n\nPlus the way his hand would drift every time he got close. Just little touches. Not even groping necessarily, but just making contact. Often somewhere she left bare skin. Neck, shoulder, lower back...\n\nAnya toyed with the notion of stripping naked and seeing where he'd target then, but it seemed a little too obvious for the current mood. She didn't want to cheapen what they had. Not that that's necessarily what would happen. Certainly her stunt with that skirt had worked out quite well.\n\nAnd Cade did seem to like her pussy...\n\nAnya climbed her favourite tree later on. She just needed to climb. To get off the ground.\n\nShe went as high as she dared. Near to the top. Somewhere she could wedge herself in halfway comfortably and just stare out at the view. It was pretty nice.\n\nAnya clung there, relaxed but secure, and just let her mind drift. Her lips quirked into a smile every time she thought of Cade. Some slightly different reactions happened when she thought back to their sexy encounters. The increasing daring they'd shown. \n\nWas she horny again already? To be fair, Cade had revved her back up that morning, just at a nice comfortable low buzz, but still. She wasn't starting from zero.\n\nIt was amazing what he did to her. The things she felt when she was properly in love. She was more and more solid on the idea. That love was, in fact, what was happening here.\n\nIn love with her brother. The idea that should have been nonsense only brought a wide, goofy smile to her face. Undignified, perhaps, but who the hell cared? It was all so good.\n\nAnya's reverie was interrupted by a sound from below. She looked down and saw Cade scrambling onto a low branch.\n\n\"What ya doing?\" she called. \n\n\"You've been up there a while,\" he called back.\n\n\"Yeah, so?\"\n\n\"So I wanted to come up.\"\n\n\"What happened to not climbing trees in your old age?\"\n\n\"I'm not that old.\"\n\n\"Your words. Not mine.\"\n\n\"Those were absolutely not my words,\" Cade grumbled.\n\nAnya watched him in amusement as he struggled with very basic tree-climbing maneuvers.\n\n\"You know I'm not wearing a skirt today,\" she said. \"There's no view to sneak.\"\n\n\"That's ok. I just... I dunno. Want to be close, I guess. I was trying to get some work done. It wasn't going well.\"\n\nAnya's heart soared. That he'd say something like that so casually. She wasn't even sure he'd considered how the words might sound to her. That he just wanted to be close...\n\nThat he'd climb the tree just to reach her...\n\nWell, he'd try anyway. He wasn't going to make it. Anya could already see that. His frame was bigger than hers for a start. That was a disadvantage. But he also didn't have her level of experience.\n\nShe watched him, let him get himself stuck, and just smiled adoringly all the while.\n\n\"Need some help?\" she asked.\n\n\"No.\"\n\n\"You sure?\"\n\n\"... maybe.\"\n\nAnya laughed and easily scooted back down the tree to meet her brother. Cade shrugged ruefully, silently admitting that yes, in fact, he'd gotten himself a bit stuck. Or at least he didn't know how to get any higher up.\n\nAnya didn't try to help with that. Instead she settled herself next to him, and together they stared out at their view above the ground.\n\n\"It's kind of nice up here,\" Cade said.\n\n\"Mmm. It is,\" Anya agreed.\n\n\"That why you're always up here?\"\n\n\"Part of it, I guess.\"\n\nThey sat there for a while. Just being together. Enjoying the flow of the moment.\n\nAnya got fidgety though. It was slow and snuck up on her, but she glanced sidelong at Cade more and more frequently until she had to say something.\n\n\"You kinda horny too?\" she asked.\n\n\"Ha. Yeah. Kinda am.\"\n\n\"Cool. Wanna mess around?\"\n\n\"Definitely.\"\n\nAnya watched Cade clamber back down the tree with a mixture of amusement and tender love. He moved so awkwardly, but only because he wasn't in his element. The way he could move in bed, for instance...\n\nWhile he wasn't paying attention, Anya shimmied out of her shorts and panties. Her panties were only just a little damp from her growing excitement. Possibly enough that Cade would notice.\n\nShe timed it to drop the pieces of clothing on his head just as he'd reached the ground. Cade looked up, confused, until he realized she was bottomless and headed down the tree toward him. His face then broke out into a wide, goofy grin.\n\n\"I could get used to this,\" Cade said.\n\n\"Used to what?\" Anya asked innocently.\n\nShe dawdled the rest of the way down to give her brother more time to stare.\n\n\"This,\" Cade said emphatically as her leg came within reach. He slid his hand right up her thigh as she took another step down. Anya let herself be guided into a sitting position on a branch right about at face height for Cade.\n\n\"Hm, well it is kinda nice,\" Anya agreed in a soft purr.\n\nCade kissed his way up her inner thigh. Anya spread herself wide for him. He skipped over her pussy and kissed her opposite thigh instead. But he'd get there. She believed.\n\n\"It's only been twice, though,\" Anya pointed out. \"Not necessarily something you can 'get used to'.\"\n\n\"It'll happen more,\" Cade said confidently.\n\n\"What makes you so sure?\"\n\nHe smirked at her. \"Are you serious?\"\n\n\"Maybe you just caught me in the right mood these couple times.\"\n\n\"Nah. Don't think so. You know what you're about. And I think you really like me eating your pussy.\"\n\n\"I... maybe.\"\n\nAnya's breath hitched as Cade dove in an kissed her almost directly on her clit. He kissed all around her pussy, then started on some small, soft licks.\n\nGod did she love it. He was so right about that. It might just be her favourite thing. Which didn't seem right, given how few times they'd done it so far, but it was just so good.\n\nIt was probably even better than her upside down stunt had been. She didn't have to concentrate on not falling. She could just lean back against another branch and relax. And Cade seemed to be having an easier time doing exactly what he wanted to do to her with his tongue.",
        "But there had been a certain impish naughtiness to hanging upside down from her tree and giving her pussy to her brother. She'd definitely have to do it again sometime.\n\nAaannnd there she was already planning to do this more. So much for any defense that this wasn't going to be a regular thing. Not that she'd believed that even as she said it.\n\nAnya put her legs right over Cade's shoulders and set a hand gently on his head. She held him loosely, but with a little extra security that she had him right where she wanted him. Face against her pussy. Just where her brother belonged.\n\nOh fuck. What was that thought? Where he belonged...\n\nThat really wasn't true and she knew it. But... it wasn't as untrue as it might have been. And maybe... fuck, maybe it was true, actually.\n\nAnya's head spun trying to keep up with her thoughts and Cade's tongue dancing over her clit. It was too much. She didn't even know why she was rationalizing. She didn't need to. Everything was perfect just as it was. Thinking was only going to complicate matters.\n\n****\n\nCade lapped happily at Anya's sweet pussy. This was the second time he'd eaten her out while she was on a tree branch. It was weird and probably not ideal for comfort, but it was just so uniquely Anya that it felt right. He couldn't imagine any other girl seducing him like that.\n\nAnd there was no denying he was in deep now. Just the sight of Anya climbing toward him with no bottoms on had been enough to rev him up and get his heart thumping. Burying his face in her pretty snatch felt like a surrender to his desires in all the very best ways.\n\nAnya. His Anya.\n\nIt was hopeless at this point. No denying it. He was falling hard for his sister. Was already gone, in fact. The sexy stuff was a confirmation of it, but not the cause. His desire was far more than just how good she tasted and how hard she made him. Though those were good things too.\n\nHe loved how she clung to him. How her thighs tightened around his head, how her fingers tangled in his hair. The soft moans and pants.\n\nHe made her cum, and it was a thing of pure beauty. His sister squirming in pleasure, threatening to fall right out of the tree. Moaning his name, even if only at a bare whisper.\n\nCade kissed Anya as she came down from her high. Kissed her right on the pussy. She seemed to like when he did that. He liked it too.\n\n\"I kinda love this,\" Cade said.\n\n\"Unf. Be hard not to.\"\n\n\"True.\"\n\nAnya petted his head some as he kept tending to her pussy and the area around it with his gentle kisses.\n\n\"Cade?\"\n\n\"Hm?\"\n\n\"I really love you, you know.\"\n\n\"I do know.\"\n\n\"No but I mean... oh god. Like... for real though. Like kinda painfully, almost.\"\n\nCade frowned up at her. \"In a bad way?\"\n\n\"No. I mean, probably not. Just... it's maybe a little scary.\"\n\n\"It is, isn't it?\"\n\n\"But it's so good.\"\n\n\"Mmhm.\"\n\nCade looked at her. Seeing his sister with the light shining down on her, framing her so angelically. Her eyes full of love for him, but with a hint of pleading to them. Something else needed.\n\n\"Anya... what if I took you to bed right now?\"\n\n\"So early in the day?\"\n\nCade kissed her inner thigh again. \"For sex, Anya. What if we-\"\n\n\"Oh thank fuck. I didn't want to ask.\"\n\n\"Why n-\"\n\n\"Let's go,\" Anya said, pushing his head away. \"Out of the way, I need to get down.\"\n\n\"Why didn't you want to ask?\" Cade insisted.\n\nAnya hopped lightly to the ground and fully ignored her discarded clothes. Her little pussy was all red and wet from arousal and its recent licking.\n\n\"Because the only thing worse than asking your brother for sex is if he says no,\" she said as though it was common knowledge.\n\n\"I don't think that's tr-\"\n\nAnya interrupted with a firm kiss and a quick, sneaky lick of his bottom lip where her own flavours resided.\n\n\"Remember when I rode your dick?\" she asked quietly. \"I can't believe I didn't do more than just grinding on it. Need to make up for that now.\"\n\nCade grinned crookedly. \"Horny little thing all of a sudden.\"\n\n\"All of a sudden? Are you kidding? What do you think that was in the tree just now?\"\n\n\"Um...\"\n\n\"Dude, I can see your hardon. I'm not the only one here. Now are you coming or not?\"\n\n\"Impatient too,\" Cade teased, though he hurried toward the house just after Anya, making sure he didn't get left behind.\n\n\"Not impatient. Just... excited.\"\n\n\"Ah. My mistake.\"\n\nCade caught up to Anya at the door and let his hand fall down to her bare butt, giving it a squeeze. Anya gave him a small noise of approval, but kept moving.\n\nThe pull he felt following after his sister was as effective as any leash ever could have been. He couldn't resist her. Didn't want to even try.\n\nAnya went to her room. It didn't really matter which bedroom she chose. These days the demarcation was basically only to do with whose stuff occupied the room. Any other sense of ownership or privacy was largely left behind.\n\nAnya crawling into her bed was an act of seduction both overt and subtle. The presentation of her ass and pussy as she strategically showed herself off was quite obvious. The less obvious part was in what it all meant. What it meant to both of them that they were doing this. That Anya was crawling into bed fully expecting Cade to follow, and what they intended had nothing to do with sleep.\n\nAlways before, sleep had been the reason. Or at least a pretext. That might be entirely behind them now. There was very little need anymore for false stories to themselves.\n\nCade pulled off some of his clothes while watching Anya settle herself. She took her sweet time, and once she stretched out her gaze was firmly fixed on Cade, with a small smile of one who isn't so innocent as she appears.\n\n\"Don't need those clothes,\" Anya purred.\n\nShe reached down and casually rubbed her pussy as though it was no big thing.\n\nCade kept stripping. He hadn't intended to take everything off before he hopped into bed, but the way Anya watched him made him want to keep going. To let her look. To feel her desire.\n\n\"What about your clothes?\" Cade asked.\n\n\"Don't hardly have an on,\" Anya said.\n\n\"Sure. But you have some on.\"\n\n\"Too many for you?\"\n\n\"I'd prefer you naked.\"\n\nAnya bit her lip and rubbed her pussy a little faster. \"Come take them off then,\" she said, her tone low and husky.\n\nCade groaned and nearly tripped himself getting his underwear off. He stalked toward Anya, naked and erect. Her eyes just got bigger the nearer he came.\n\n\"You're so hard,\" she whispered.\n\n\"That can't be new to you by now.\"\n\n\"No, but... it's different. You're usually right next to me already.\"\n\n\"Mmm. Well let me fix that then.\"\n\nCade slid in next to Anya, getting close and snuggly. She abandoned her pussy and reached for his erection instead. The movement was so smooth that Cade was caught fairly unprepared for her soft little hand wrapping around him.\n\n\"I like this part,\" Anya said.\n\n\"Jerking me off?\"\n\n\"That too. Just holding you though.\" She looked at Cade seriously. \"It was always for me, wasn't it? When you got hard next to me?\"\n\nCade nodded. \"Yeah. I think so. I didn't mean to. But... it happened.\"\n\nAnya nodded. \"Well I'm glad.\" Her hand slid slowly along his length. \"Glad my brother kept popping boners for me,\" she said with a faint titter of amusement in her words.\n\n\"Just what every girl wants, I'm sure.\"\n\n\"Not every girl. No way. But me, sure.\"\n\nCade wanted to just lie back and let Anya stroke him. She was so good at it. He knew what to expect.\n\nBut there were other things he wanted too.\n\nCade slid his hands up Anya's sides, over her tantalizing skin. He pushed her shirt slowly up her body. She let him do it. Her eyes daring him to keep going.\n\nThe only sticking point came when Anya had to let go of Cade so her shirt could come over her arms. She was reluctant to release him at all, though she eventually did. Only for the sake of getting naked.\n\nThe two of them devolved into nervous giggling as they each groped at the other, sometimes at cross-purposes. They were both naked, and were already quite horny. They knew what they wanted, but it felt like such a momentous thing all of a sudden. It was so much more comfortable just to keep playing. Being sexy and silly.\n\n\"We don't have to do this right now,\" Cade said.\n\nAnya's eyes flashed with sudden concern. \"Why not?\"\n\n\"Just saying we don't have to.\"\n\n\"I know. But I want it.\"\n\n\"Me too. Just... I'm kinda nervous about it. And you won't stay still.\"\n\n\"Why am I the one who has to stay still, huh?\" Anya asked defiantly.\n\n\"You wanna be on top? I don't mind. Just... not what I assumed.\"\n\nAnya had to think about it. She grabbed his cock and rubbed it gently, feeling his hardness and faint throbbing as she did.\n\n\"No. Not this time,\" she said after a moment. \"You're right.\" She lay back, stretching her lithe, nude body out on the sheets. \"Next time though.\"\n\n\"Thinking about next time already?\" Cade asked, amused.\n\n\"Well it's only fair. If you're on top this time, I should get a turn too.\"\n\n\"I told you you could be on top if you wanted.\"\n\n\"Yes, very noble.\" Anya poked Cade's chest. \"If you were clever you'd probably stop arguing right about now.\"\n\nCade looked down at Anya. Naked for him, totally exposed and vulnerable. Vulnerable more than just physically. Still an obvious hint of nerves in her expression. Anxious. Waiting.\n\n\"You're right,\" he said.\n\n\"Naturally.\"\n\nCade leaned down and kissed his sister. He couldn't get over how he was allowed to do that now, and how natural it felt. Anya's lips only tasted sweeter every time, and they were already learning each other's quirks so that making out flowed ever smoother.\n\nAnya's fingers ran across his skin, mostly along his back as she gently guided him closer. When he got close enough, she switched one hand to his ass, and the other to his cock, becoming even more direct in her guidance.\n\n\"You're gonna be in me,\" she whispered.\n\n\"That's the intent.\"\n\n\"Cade?\"\n\n\"Yeah?\"\n\n\"Tell me you love me.\"\n\nCade grinned and kissed Anya's nose. He heard the vulnerability on her voice now too. It was a big moment, in some ways. In others it was, perhaps, inevitable sooner or later. Though that didn't stop it being important, he supposed.\n\n\"You know I love you,\" he said.\n\nAnya nodded, smiling a little easier already. \"I know. I just needed to hear it.\"\n\n\"You gonna say it back?\"\n\nShe shook her head, her lips twitching into a hint of teasing. \"I'm just gonna ask you to get inside me already, I think.\"\n\n\"Unf.\"\n\n\"I know, right?\" Anya looked at him with big, falsely-innocent eyes. \"I need to feel you in me now,\" she said, just a hint of pleading in her tone.\n\n\"Unfair.\"\n\n\"I know. It was meant to be.\"\n\nAnya guided him with her hand. Cade followed willingly. Pressed against his sister's wet, waiting pussy. Her hand was hot around him. Still guiding him. Still urging him onward.\n\nShe opened for him. So smooth. Warm and wet and tight, but easy and comfortable too. As though this wasn't their very first time doing this. They knew each other. Knew each other's rhythm to some extent. That all helped. As did their excessive horniness, and just how ready they were for this moment.\n\n\"Anya...\" Cade breathed.\n\nShe made a sound halfway between a moan and a squeal, smiling so wide up at him.\n\n\"I'm in you,\" Cade whispered.\n\n\"Yeah you are.\"\n\nShe still held him until Cade sank deep enough to force her hand out of the way. He buried himself fully inside his beloved sister, meeting her eyes nearly the whole time.\n\nCade tried some gentle thrusts, going so slow and soft at first. Anya moaned louder and gripped his butt. She urged him harder and deeper.\n\nHe kissed her then, full and intense. Anya was caught off guard by it, but responded to the gesture. They made out with wanton abandon as Cade thrust in and out of her and she wiggled her hips in encouragement.\n\n\"Cade?\" Anya whispered between kisses.\n\n\"Yeah?\"\n\n\"I love you.\"\n\n\"Unf.\"\n\nMore makeouts.\n\n\"Cade?\"\n\n\"Hm?\"\n\n\"I want you to cum in me.\"\n\n\"Fuuuccck, Anya.\"\n\n\"I do, though.\"\n\nMore kisses.\n\n\"I'm gonna,\" Cade said. \"I'm gonna cum in you.\"\n\nAnya nodded like it was a perfectly reasonable course of action. \"Good,\" she said.\n\nCade pounded her harder. He fucked his sister's wet little pussy with all the love and sexual intent he felt for her. And the new goal of filling her up with cum. Which maybe would have happened anyway, but now that she'd insisted it was practically guaranteed.\n\n\"I love you,\" Cade said, absolutely meaning it.\n\nAnya blushed and kissed him again. It seemed partly this time to avoid making eye contact for a second.\n\n\"Not fair to say that now,\" she said.\n\n\"You just said it, like, two minutes ago.\"\n\n\"That's different!\"\n\n\"It's not.\"\n\n\"... say it again?\"\n\nCade grinned. \"I. Love. You.\"\n\nAnya whimpered and this time buried her face against him. He wanted to kiss her more, but couldn't the way she was clutching him.\n\nA moment later her nails dug into his back. Not painfully, really, but still a sharp contrast to everything else. Her small moans changed in intensity, and Cade felt a definite shiver from her.\n\n\"Are you cumming?\"\n\nAnya just made a small whining sound rather than answering.\n\nShe was definitely cumming. And Cade wasn't far behind, really. Anya had settled down again by then, and had even graced him with more kisses, but squealed in rather undignified fashion when she felt him explode inside her.\n\n\"You're cumming!\"\n\n\"I am,\" Cade grunted.\n\n\"Mmm, yesss.\"\n\nAnya wrapped her legs around him and held him tight, as though there was some chance he'd leave at an inopportune moment. All his cum went deep inside her, just like she wanted.\n\nCade stayed where he was for a long while afterward. He had no choice, short of fighting free of his sister's embrace. And that seemed like such a silly thing to do.\n\n\"That was probably the naughtiest thing I've ever done,\" Anya murmured after several minutes of decadent silence.\n\n\"Only probably?\" Cade asked, giving her a soft kiss on the cheek.\n\n\"I've been trying to figure that out. I mean, ordinarily, yeah, fucking my brother would be tops. But... I don't know. Sex with someone you super love and trust and want to be with doesn't seem quite so naughty.\" Anya shrugged. \"So I don't know where this lands.\"\n\nCade kissed her on her nose. \"You're silly.\"\n\n\"Hey! It's a serious conundrum.\"\n\n\"I love you.\"\n\nAnya went a cute pink. Cade was really getting to love her reactions just to being told something so simple. Though of course the emotion behind it was anything but simple.\n\n****\n\nAnya didn't put on much for clothing the rest of the day. She wore some panties as a concession to the brother-cum in her pussy, but otherwise wanted to revel in their relationship far more than she wanted to concede to modesty.\n\nCade's frequent glances at her kept her feeling all warm and tingly. They added nicely to the naughty feeling of carrying his cum around inside her.\n\nHe didn't dress up much more than she did. The two of them spent a hazy rest of the afternoon and evening in something barely more than an idyllic trance. Wandering somewhat aimlessly, curling up together at various intervals, and always appreciating each other visually, or with soft caresses as appropriate.\n\nAnya sensed her brother getting increasingly horny through the rest of the day. He wasn't overly subtle about it. Always tenting his boxers, and getting more and more aggressive in his casual fondling of her.\n\nHe got to a point of taking any excuse at all to press up behind her and wrap his arms around her, giving her kisses from behind on her neck or shoulder, and sometimes nibbling on her ears. Usually he'd grind his erection on her ass quite firmly in the process. Occasionally he'd even get so bold as to rub her panties and check how wet they were.\n\nAll of which was fantastic. Anya was heavily turned on as well, and every little thing he did seemed to hit the right spot for her.\n\n\"My cum's still in you,\" Cade said at one point.\n\n\"Mmm. I'm aware.\"\n\n\"I really liked cumming in you.\"\n\n\"Heh, I know. You don't have to tell me.\"\n\nHe kissed her some more.\n\n\"I'm a little worried how natural this feels,\" he said.\n\nAnya tensed. \"Why?\"\n\n\"Because what if we're wrong and really we're just super horny?\"\n\n\"You know that's not it.\"\n\n\"Do I?\"\n\n\"Yes,\" Anya said firmly. \"You do.\"\n\n\"Oh. Good, then.\"\n\nAnya rubbed her butt back against him. Not strictly the most helpful thing as far as resolving her brother's worries, but it felt nice and made her pussy tingly, and sometimes that was the main thing in life.\n\nStill, though. Cade had to know this wasn't just horny problems, right?\n\n\"Are you actually worried about that?\" Anya asked gently. \"Or is this all just new and a little scary still?\"\n\n\"... probably the second one. I mean, it's not scary. But it's new. It's like... I fucked my sister. I came in her.\"\n\nAnya's toes curled and her heart leapt at those calmly delivered but sexually charged words. Words from her brother.\n\n\"You came in me,\" she echoed.\n\n\"Mmhm.\"\n\n\"You want to do it more, right?\"\n\n\"Of course I do.\" Cade squeezed her tit from behind. Just giving it a good feel. \"But that's horny me talking. I mean, at least partly.\"\n\n\"Mmm. At least partly. Horny you is a result of loving me, though.\"\n\n\"True. Very true.\"\n\n\"No one's ever made me as horny as you have,\" Anya stressed. \"That's not just hormones.\"\n\n\"No, you're right. I know you are.\"\n\n\"Good.\"\n\n\"I still just really want to fuck some more.\"\n\n\"Ha ha, oh god. You are a horny thing, aren't you?\"\n\n\"I thought that was clear by now.\"\n\nAnya turned in her brother's arms and wrapped her arms around the back of his neck in return. She used the leverage to pull him in for a deep, firm kiss.\n\n\"I love you,\" she stated simply. \"I love everything you do to me. Everything you make me feel. Yes this is all new, but I'm not worried about anything. You know why?\"\n\n\"No.\"\n\n\"Because anything that happens, we'll be together for it, yeah? And that makes me feel safe and loved. I can't ask for more.\"\n\n\"... you make some compelling points.\"\n\n\"Plus I have my tits out.\"\n\n\"That too. It's a good argument technique.\"\n\n\"I'll keep that in mind.\"\n\nAnya let Cade play with her boobies some more.\n\n\"Still worried about this?\" she asked.\n\n\"Nah. Wasn't properly worried anyway. It was just like... why is this so easy? Relationships are always hard. And it should be harder with you. And it's not.\"\n\n\"You silly. We did all the hard parts already. We've known each other forever. Like... like people who've been friends since childhood and get together. Except better.\"\n\n\"Ah. Fair enough.\"\n\nAnya slipped out of Cade's grasp and took one of his hands. She started walking, forcing him to follow along.\n\n\"Where we going?\" he asked.\n\n\"To bed.\"\n\n\"Oh. It's kind of early.\"\n\n\"Not early for sex.\"\n\n\"Oh good. I was hoping you were gonna say that.\"\n\nAnya snorted. \"What else was I gonna say?\"\n\n\"I dunno. I'm new to fucking my sister.\"\n\n\"Well get used to it.\"\n\nAnya took Cade to her room. She got him out of the few clothes he was wearing and made him lie down on her bed. He was a little bemused by her instructions, but didn't seem to mind.\n\nParticularly, he rather enjoyed lying back and watching as Anya slowly peeled her ruined panties down her legs. He absently stroked himself while she stripped off her only article of clothing.\n\n\"Well these are quite a mess,\" Anya said, examining her panties in her hands.\n\n\"Mmhm,\" Cade agreed.\n\n\"You're not even looking.\"\n\n\"I am.\"\n\n\"At my pussy. I'm talking about my underwear.\"\n\n\"Well who cares about that?\"\n\nAnya snickered and tossed the wet, sex-coated panties aside. \"Good point.\"\n\nAnya clambered nakedly on top of her brother. He reached for her and had his hands all over her before she'd even settled. She avoided his cock for the moment, though it was tempting to sit straight on it. She was wet enough to get away with that, if she wanted. In a sense, they'd been getting their foreplay in for hours already.",
        "It was better if it came naturally. That was Anya's feeling. She started with kissing and rubbing against Cade, letting their naked bodies come together lovingly. He kept feeling her up so good, helping her get revved up like crazy.\n\nAnya let her hips slowly wiggle ever closer to Cade's cock. Just teasingly. Occasionally brushing against him when she got close enough. It got harder and harder to hold back. Especially when Cade started whimpering so cutely at the fleeting contacts.\n\n\"You wanna be inside me again, huh?\" Anya said.\n\n\"You know I do.\"\n\nAnya squealed as Cade smacked her butt and pulled her closer. His cock pressed against her wet slit for a moment before she wiggled away.\n\n\"Ah ah! Be good,\" she said.\n\n\"How am I possibly supposed to do that?\"\n\n\"I dunno.\"\n\nAnya took Cade's arms and pinned them over his head. His eyes were all big and pleading. He even pouted at her, and it worked all too well. Anya was kind of melting anyway, but seeing her brother's need so evident made everything that much worse. Or better, really.\n\n\"I'm gonna ride you,\" Anya promised. \"But no rushing me.\"\n\n\"Can I touch at least?\"\n\n\"Yes. That you can do.\"\n\nAnya pushed herself up on her knees, straddling Cade. His hands went right back to her upon release, running over her warm, aroused skin.\n\nShe found her brother's cock with her hand and pressed her pussy to it. Still just teasing mostly, but teasing herself as much as Cade. She wanted him in her. Oh god she wanted it.\n\n\"Don't make me beg,\" Cade said.\n\nAnya smirked crookedly at him. \"You want it bad, huh?\"\n\n\"Mmhm.\"\n\nAnya let her pussy part around the head of his cock. Just a little. Just enough for him to be technically inside.\n\nCade's eyes rolled back and his fingers tightened on her momentarily.\n\nAnya studied her brother's face as she sank further down. Taking his cock in her. He filled her up so good. And he was so cutely helpless as she took him deep.\n\nThe way he looked at her was simply unfair. She was trying to focus on the pleasure of taking his cock. But having him stare back so affectionately, in such bliss, and to know what she was doing to him was a whole other thing. It split her attention, which was so limited in the moment.\n\n\"Don't look at me like that,\" Anya said.\n\n\"Why?\"\n\n\"I'm trying to ride you.\"\n\n\"So do it.\"\n\n\"You're... you're making me all tingly.\"\n\n\"Isn't that a good thing?\"\n\nCade ran his hands up her sides, angling toward her boobies. He was only driving her crazier. Probably intentionally, really.\n\n\"How am I supposed to concentrate?\" Anya asked.\n\n\"Why do you need to concentrate?\"\n\n\"Because... because.\"\n\n\"Oh. I see.\"\n\nAnya growled low, put her hands on Cade's chest for balance, then started riding him the way she intended. More aggressively than planned, if anything.\n\nShe felt some immediate satisfaction at Cade's expression and the way his hands fell back down to her hips. Plus it just felt amazing to take her brother like that.\n\nAnya kept going, getting a feel for the rhythm needed to keep Cade passive and docile beneath her, though she knew it wouldn't last forever. Already he was reaching for her again, getting handsy and distracting.\n\nStill, she had control for the moment. Nearly full control, except for those wonderful, fluttery feelings she kept getting.\n\n\"You're so amazing,\" Cade said.\n\nAnya felt herself flush. \"Thanks.\"\n\n\"You feel so good.\"\n\nAnya rocked her hips harder, really riding her brother. Giving him everything. \"You too.\"\n\n\"You want me to cum in you again?\"\n\n\"Mmm. Of course.\"\n\n\"Hehe, you're so horny,\" Cade teased.\n\n\"No you are.\"\n\nAnya put a hand over Cade's mouth. He was still obviously grinning beneath it. When she was sure he wasn't going to say anything else, she pulled her hand away and kissed him instead.\n\nShe couldn't get over how nice it felt kissing her brother. Sex was amazing, but kissing him was a whole level of comfort and arousal that couldn't be beaten.\n\n\"I'm gonna make you cum in me,\" Anya said.\n\n\"I know.\"\n\n\"Then you're gonna cuddle me.\"\n\n\"Fair.\"\n\n\"And love me.\"\n\n\"Way ahead of you.\"\n\nAnya rocked her hips harder, grinding on Cade's cock like the horniest of sisters. She was feeling the deep throb of pleasure that was a prelude to cumming. She was more focused on him, though. She wanted Cade to cum in her messy little pussy.\n\nHe apparently had very similar thoughts about her. Anya gasped as his thumb brushed over her clit, then pressed more assuredly as he found his target.\n\nCade rubbed her off while she coaxed him toward cumming. The two of them getting more and more frantic about making the other explode. Their naked bodies sheened with sweat, their breathing coming increasingly ragged.\n\nAnya was lost in an in between world for a time. Wanting to cum, wanting to make Cade cum. Not quite at a point to do either.\n\nBut the moment broke. Of course it broke.\n\nShe came in a loud, freeing moan of deepest pleasure. Something close to a scream, perhaps. Her brother's cock and his thumb on her clit seemed connected, as though they were one. The sexual shivers and tingles running through her were a mixed maelstrom of happiness inside her, and when she came it hit her hard.\n\nEven better, she felt Cade's cum inside her. His cock pulsing and exploding, painting her insides all naughty and creamy. More brother-cum for her little pussy.\n\n\"Thaaattt's it,\" Anya hissed.\n\nCade only groaned. He squeezed her butt while she wriggled around a last little bit on top of him.\n\nAnya slipped off her perch and lay down half on top of Cade. She put a hand on his cummy penis and felt it soften. She didn't do more than that. Just held him.\n\nHe in turn put an arm around her and kissed her forehead as she lay atop him. They were warm in each other's embrace, and only just starting to really settle down.\n\nIt was a beautiful afterglow. Anya enjoyed it immensely. She listened to her brother's heart slowing down to normal, as her own did the same.\n\n\"I'm gonna get used to this,\" Anya purred softly.\n\n\"Yeah you are.\"\n\n\"Love you, you know.\"\n\n\"Mmm. Love you too.\"\n\n****\n\nThe sibs slept peacefully together that night. Not as soundly as they usually did these days, but even when one awoke, they just smiled and watched the other snoozing, felt their gentle breathing, and were lulled back to dreamland themselves.\n\nIt was part of a pattern that continued to develop small intricacies, but was largely set in its overall direction. Anya and Cade had each other, the security and love their relationship provided, and plenty of fun sexy times to go with it."
    ],
    "authorname": "Xarth",
    "tags": [
        "brother",
        "sister",
        "climbing trees",
        "cummy pussy",
        "handjob",
        "pussy licking",
        "therapy",
        "blowjob",
        "loving sex",
        "sibcest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/falling-up"
}