{
    "title": "Five Alive Plus",
    "pages": [
        "It's been nearly 2 months since my #fivealive full-release massage. When a friend told me about the midtown spa that had a backdoor ladies' massage, I didn't anticipate that meant my backdoor. What I got was a fantastic massage with all kinds of special treatment. \n\nWhen I left that day, I was so sure I was going to book regular \"treatments,\" but as life would have it, there were many changes at work and I found myself traveling a lot. On my many trips, when I had a minute, I would idly google the typical terms -- \"happy ending,\" \"ladies' massage,\" etc. -- but nothing would come up that seemed to match the experience I had: a hot, hung masseur who not only gave me a fantastic legit massage but also rimmed me within an inch of my life, pumped my mouth full of warm cum, and gave me a teeth-gritting orgasm with his tongue in my pussy and his fingers in my ass, while working my clit with a strong vibe. Worth every penny.\n\nFinally, I am back in the city and have some free time, plus my birthday is coming up. I plan to take him up on his invitation when he took leave of me: \"Next time, use code #fivealiveplus. Ask for Clyde.\"\n\nI keyed in the web site on my laptop and perused the menu offerings. I was going to choose the service I had before -- 90-minute combo massage -- until I spied the offering \"4-handed massage.\" I've always wanted to be massaged by 2 people (even before all the happy-ending perks). I hover over the drop-down menu while pondering how that would work with the promo code he gave me. Oh, what the hell; they can always disregard and just do what they do.\n\nI click on the 4-handed option, then was presented with \"Choose your first therapist.\" I click on that option and was presented with \"Male,\" \"Female,\" or \"Surprise Me\"? Clearly, I choose \"Male\" and upon being presented a list of men's names, I choose Clyde, obvi. Just rolling over his name reminds me of his thick veiny cock that I slurped on while he finger-fucked my ass and eventually rewarded me with a big gulp of his tasty cream. His 8-incher must have been 2 inches across, which may not sound that big, but get a ruler out, look at it hard, and consider that thing pumping your face. Not to mention the knobby head with a delicious mushroom tip. I would love to suck on that at a more leisurely pace and maybe feel it in one or both of my other love holes. Mmmmmm...\n\nAnyway, I chose Clyde as my first therapist then was presented with \"Choose your second therapist.\" Honestly, I would defer to Clyde as to whom he would want to 4-hand with, but my mind did wander as to how it would be with a female vs a male for the second therapist. I go with my first instinct and choose \"Surprise Me.\" It is my birthday, after all. I like surprises.\n\nThe day before my appointment, I go to my regular bikini-sugaring lady and get my yoni completely smooth. I don't usually get turned on while getting depilated, but my mind kept going over that time Clyde parted my ass cheeks for the first time and dipped his tongue tip into my puckered star. The man knows how to treat a girl's ass. I'm trying not to anticipate too much from the second visit; what's that saying -- it's never as good as the first time.\n\nThe day of the much-anticipated treatment finally arrives. After checking in at the spa, I first detox in the sauna, take an invigorating ice bath then refreshing shower, and relax in the private lounge for a bit. A few minutes before my appointment time, a striking girl comes into the lounge and asks, \"Hi, Lizzie? Are you ready for your treatment? Come on back.\" I get up and follow her, and as women do, I check her out. She definitely has a body on her -- full natural breasts, a nipped waist, a bubble butt. I have rather a lean figure with smallish breasts and while I don't find myself getting horny for girls (I will take a nice hard cock every time, thank you), I do enjoy the female body from an aesthetic point of view. I wonder if she might be the second therapist. She doesn't look like any therapist I've ever had, but who am I to be profiling. \n\n\"Here we are. You know what to do. Undress and lie face down underneath the sheet, or if you prefer, just put the towel over your hips if you're not feeling chilly. I'm Chloe, by the way. I'll be working on you with Clyde today.\" I notice she doesn't offer the feel-free-to-keep-your-undies-on footnote. I'm thinking she already has a good idea what \"treatment\" I got last time.\n\n\"Sounds good, thanks. I'm really looking forward to this. I'm treating myself for my birthday coming up.\"\n\n\"Oh, really?! That's awesome. We'll be sure to make it memorable for you, then!\" Hard to know if this is a veiled reference to special services or not. It doesn't matter. How can a 4-hand massage be terrible?\n\nShe leaves the room to give me a moment of privacy to undress. I feel like my pussy is already getting wet from anticipation. I smile a little to myself wondering what Clyde and his partner might have in store for me. \n\nI lie face down, choose the towel over the hips option, and snuggle my face in the face cradle. At last, some time just for me where no one can call me, text me, or bother me. Just two hard bodies who will be working me over. \n\nA soft knock at the door, and I hear Clyde's voice, \"Ready for us, Lizzie?\"\n\n\"Yes, all set.\"\n\nThey come padding in, and Clyde says, \"It's nice to have you again, Lizzie. I was hoping you would come back to see us.\"\n\n\"Same here ... I had every intention of coming back sooner, but work got in the way.\"\n\n\"No worries. You're here now. We'll make it count. And I hear it's your birthday soon. We love to celebrate around here. I remember you enjoy footwork, so Chloe will start with your feet and legs, and I'll start with your upper body, good?\"\n\n\"Sounds very good. I'm in your hands.\" Literally. I settle in and exhale a contented sigh.\n\nThey take their places and slather their hands with oil. Clyde stands at the head of the table and commences to massage my back from neck to top of buttocks in smooth, long strokes. This is a little different from how he started last time, and it's just as wonderful. His hips so close to my head, of course, reminds me of that time not that long ago when he stood at that same spot and let me suck on his fat cock. My mouth waters just thinking about it. I am so curious what treats lie in store for me today.\n\nFor her part, Chloe had tucked a bolster underneath the fronts of my ankles and likewise has started smoothing her slick hands down the backs of my legs, from just beneath my butt creases all the way to my Achilles and heels. She does this a few times, and each time she reaches up, her plush tits press on my feet lightly. A very pleasant sensation on the soles of my feet. \n\nThen gradually, she shortens the strokes and settles in to work on my feet, first digging her thumbs into the pressure points of both feet at the same time, then moving to the side of the table to focus on one side at a time. She may not look like any therapist I've ever seen, but girlfriend sure can give a massage. She has strong hands, like a guy, but with a feminine energy.\n\nMeanwhile, Clyde had lengthened his strokes to include the flesh of my buttocks. If I had never had a full-release massage with him before, I wouldn't think anything of it. But see, I did have a previous experience so when his hands are on my ass, I remember when he parted my ass cheeks for the first time, blew cool air on my wink, then proceeded to rim it. My pussy, already moist, creams even more as I savor this memory.\n\nNow that Chloe is working my lower leg and foot one side at a time, Clyde mirrors by working on my shoulder girdle, arm, and hand, one side at a time. I notice they coordinate and work opposite sides from each other, which I appreciate. It feels more balanced. All the tightness from work and travel is starting to unravel, and I find myself drifting away as well...\n\n\"OK, Lizzie, let's have you flip over so we can work your front.\" Apparently, I had fallen asleep momentarily. I slightly regret missing out on some minutes of enjoying the massage; at the same time, falling asleep is testament to how relaxed I was by that point.\n\nChloe holds up the folded towel for me while I flip, then replaces it over my midsection, and repositions the bolster so that it's now beneath my knees. This allows my lower back to heavy into the table, and I resettle myself.\n\nThey then exchange places, with Chloe at the head and Clyde at the foot. They refresh the oil on their hands, and Chloe starts with my shoulders, arms, and chest. She's working both sides symmetrically, so just like before when she was doing my legs, each time she leans forward, her full tits graze the top of my head. I had noticed when I was flipping over that she had taken off her shirt and was just wearing a bikini top. Her natural breasts are beautiful (C-cup?), the nipples perky. As her tits press on my head rhythmically, I idly wonder what it would be like to lick those nipples and suck on her tits. I am faintly surprised at having these thoughts, but hey, I'm going with it!\n\nWhile this is going on, Clyde is working on my thighs one at a time. He must remember I am rather ticklish in this area from last time, since he's working on them with an open-palm movement rather than digging in his fingertips -- which many therapists do and which I find excruciating on my sensitive thighs. Gradually I notice that each time he is at the top of my thigh, his thumb light grazes my outer pussy lip. My pussy is totally wet now; I'm sure he can smell me.\n\nHe has finished both sides and has regained his place at the foot of the table. He replicates Chloe's first movement, gliding his big warm hands from the tops of my ankles to the very top of my thighs and back down again, all the way over my toe tips. Just as she had done, he repeats this several times. Almost imperceptibly (but I notice because I'm keeping track!), his hands end higher and higher on the upstroke, such that by the 4th or 5th time, his thumbs are stroking up my smooth labia. This is reminiscent of the last visit when he did a similar movement on my backside and ended up thumb-fucking my ass.\n\nThese two therapists are definitely in synch because Chloe has progressed from massaging my chest tissues to full-on stroking and lightly pinching my pebbly nipples. She allows her wonderful tits to stay resting on my forehead. I let my eyes slip half open and have a clear view of her hard nipples, jutting forward through her bikini top. So very hot.\n\n\"Do you want to taste my nipples, Lizzie?\"\n\n\"I thought you'd never ask.\"\n\nWith one hand still fondling my nipples, she moves to one side of table, pulls the triangles of her bikini to the sides to frame her glorious tits, and promptly offers me a breast. I stick out my wet tongue and run it over the hard tip and start lapping at her perfect round titty, my nose pressing into her breast flesh. This is fantastic.\n\nMeanwhile, Clyde has moved to the opposite side, motions me to bend a knee and butterfly that leg open to the side. He leans down and begins to lick and suck at my bald creaming pussy. His mouth is just as talented as I remember it.\n\nNot soon after, he introduces his middle finger then his ring finger into my wet cunt and softly fucks it just up to his second knuckles. Once they're sufficiently covered with my goo, he introduces the ring finger into my tight ass and rejoins his index finger into my twat. So in case you've lost track, I have a boob in my mouth, a tongue on my clit, two fingers in my pussy, and one in my ass. Life is good.\n\nChloe is alternating one boob then the other in my mouth. I slobber all over her tits so that they glisten. In turn, she gobs spit onto her palm and rubs it briskly over my nipples. Every now and then, she pulls off my mouth to lean down and give my nipples a quick suck as well. But I'm loving sucking on her tits and she knows it so she is quick to regain her position of serving her breasts to my lusty mouth.\n\nMeanwhile, down under, Clyde has grasped both my thighs and bent them into my chest so that my entire love box is open to his ministrations. He's licking, sucking, and spearing his tongue every which way -- my clit, my pussy, my ass hole. My entire nether region is slick with his spit and from the oil applied previously.\n\nI desperately want to come, and I'm sure he/they can sense it. I hold my thighs to my chest so that Clyde can free his hands. He keeps his tongue on my clit and reinserts his fingers in my holes. He now has his first two fingers in my pussy, and both his ring and pinky fingers are in my ass. He's drawing firm, small circles on my clit with his tongue as he fucks me deep with his long, strong fingers, as far as they will go inside my body.\n\nThen, he pulls his mouth away from my pussy and moves his head close to mine to whisper in my ear, \"Lizzie, do you want to come with my fingers inside you, or my cock?\" \n\nI have my mouth full of tit so reach out and squeeze his hard cock by way of a reply. He stands up and with his free hand, undoes the tie of his pants. They slip to the floor, and as he steps out of them, I turn my head towards him and open my mouth to receive his cock. He's still fingering my pussy and anus as he fucks my mouth with his thick cock. Clyde's cock is easily 2 inches across and probably 8 inches long. I know it will feel good in my pussy, but can I take it in my ass, though? I guess we'll find out. Chloe has bent down and is loving on my tits and nipples. I'm basically in heaven right now. \n\nAfter a few more glorious minutes, he gradually backs off and motions for me to turn on my side facing away from him. He takes hold of my hips and draws them to the table edge closest to him. I am sorry to release his cock from my mouth, but the tradeoff is now Chloe's beautiful tits are in my face again, and she wastes no time stuffing a boob back in my mouth. Clyde takes the bolster and tucks it between my knees. My legs are hence anchored slightly apart, giving him easier access from behind. It also facilitates me reaching down and playin with my clit.\n\nI hear the crinkle of a condom wrapper being opened. I'm so horny that I probably wouldn't have minded bareback, but if these guys provide these services with some frequency, I suppose safety is best. As long as I get a cock inside me, I'm not complaining. I hear the slightly squeaking sound of him rolling on the condom, then I feel his tongue behind me licking my pussy and ass again. What a good box licker he is! He stays at it for a few tantalizing minutes and I swear, if given a choice, I hardly know which I would choose, tongue or cock.\n\nBut thankfully I'm not burdened with choice because he abruptly stands up and starts to penetrate my slick pussy with the head of his cock. Oh, dear God, he feels goooood. His cock head is nice and fat as he teases it into the greedy fleshy mouth of my pussy. He works his cock back and forth a bit at a time, and after about a minute, he's finally in balls-deep. He starts to fuck me slow with full, long strokes, pulling nearly all the way out, then sliding back in.\n\nNot long after, he wets his thumb and fingers with saliva and starts to work my ass hole again, first with his thumb, then with his index and middle fingers. He's turning his hand this way and that, I imagine to stretch out my ass in preparation for his monster cock. \"Your ass is so hot. I can't wait to fuck it,\" he croons as he continues to piston his cock in and out of my pussy.\n\nHe then slowly pulls out, bends down and rims me once again, this time using his slick fingers and his tongue to manipulate my anal ring, making it more pliant. During all this, I'm still sucking on Chloe's sexy tits. Her nipples are rock hard, and she's lazily massaging her own pussy with one hand.\n\n\"Fuck... your asshole is so creamy now, like a fruit.\" He proves his point by wrapping his lips over my ass and starts to suck on it loudly, while his tongue continues to snake into the opening. Oh, my sweet Lord, I feel almost faint from pleasure. He draws himself to standing again, and I feel him reaching out for something and hear the cap of the lube popping open. I am very eager from some ass fucking, but I am also a tiny bit nervous due to the sheer girth of his cock. I hear the squirting sound of him squeezing out the lube as he proceeds to coat his rod with the viscous substance. I'd bet he knows exactly what to do to prepare himself for a tight fuck.\n\nThen his hands are on my hips again. I can feel the bulbous head of his cock at my narrowest entrance and brace myself for the initial invasion. As he sinks the head of his enormous cock inside the rim of my ass, I can tell you I literally saw stars. My mouth goes slack around Chloe's breast, and if my eyes had been open, they probably would be rolling up to the back of my head.\n\nHe holds still for a moment, then pulls out slightly then pushes in again, farther this time. I groan deeply, the sound muffled by the boob in my mouth, as I push my ass back to meet him. His cock head clears my sphincter, and Houston, we are in.\n\n\"Your ass hole is SO tight, Lizzie, so good, fuuuccckkk ...\" He starts to slowly buck his hips against mine, slowly insinuating the length of his beautiful cock into my tight chute. Chloe reaches out to the oils stand and conjures a vibrator. She clicks it on and brings it to my clit as I place my hand over hers. As she works my clit with the vibe, I bring both my hands to her beautiful breasts and go back to kissing and sucking them. I love having something in my mouth when I'm being fucked so this is ideal. \n\nChloe then motions for me to take the vibrator which frees her to insert two fingers into my pussy and gently fucks it. I feel complete with a mouthful of boob flesh, a vibe on my clit, two strong fingers in my cunt, and a huge cock sliding in and out of my slutty ass. #fivealiveplus, indeed.\n\nI am pleasured beyond my wildest fantasies for some minutes -- 3? 10? I've lost all notion of time and space. At one point, I transfer the vibe to my inside hand and reach back with my top hand to check how far inside me Clyde is. I love feeling my ass ring tightly stretched around his massive cock. I can take it, but he has been periodically squeezing extra lube on my ring and his cock the whole time. He is fucking me with about 7 of his full 8 inches. That's a LOT of cock in a small space. Remember it's 2 inches wide. I keep my hand back there to enjoy the feeling of his cock sliding in and out of my ring. Amazing!\n\nI can stay here forever, but already I can feel the coil of my orgasm initiating deep in my belly. I buck faster on Clyde's cock and click the speed on the vibe to the next intensity. Clyde is grunting and groaning. \"Fuck, Lizzie, you're gonna make me blow my load, moving your ass like that.\" It's such a turn-on to hear how much he enjoys my ass. Like a freight train, my orgasm comes crashing down on me. I come hard while nearly smothered by a boob in my mouth... \"mmmfph, fucknnnn, ughnnnn, mmmmmmmhm...\" \n\n\"Ah, fuck... your ass is spasming on my cock, I'm gonna shoot my hot load deep in your ass, oh, fuucckkk...!\" He bucks hard onto my hips, and his entire cock ends up in my tunnel, delivering its delicious payload. His head bows forward, his breath ragged, his hands gripping my hip and thigh firmly. \"My god, that was incredible. You're the best ass I've fucked in a while. I can't believe you look my entire cock inside your tight ass...\" He continues to rock his hips against my mine, and I can feel my ass involuntarily twitching around his cock.\n\nAs my orgasm ebbs, Chloe pulls away a bit but still gently fondling my sensitive pussy mound. She affectionately sweeps my hair away from my sweaty forehead as I stick out my spent tongue and just let her rub her nipples back and forth on it. After a minute, when I've completely quieted down, Clyde slowly lets his sheathed cock slide out. The sensation of the filled condom tip exiting my ass is unique, and pleasurable in its own way. He bends down to nuzzle my neck and kisses me softly on the cheek, his fingers lightly caressing my tenderized asshole.",
        "\"Happy birthday, Lizzie.\""
    ],
    "authorname": "POVscribe",
    "tags": [
        "big cock",
        "cock sucking",
        "cunnilingus",
        "fellatio",
        "finger fucking",
        "happy ending",
        "natural breasts",
        "pussy eating",
        "pussy licking"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/five-alive-plus"
}