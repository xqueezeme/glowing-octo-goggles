{
    "title": "Lady in the Rain Ch. 02",
    "pages": [
        "\"I don't mean to sound pushy, but we're going to be late.\"\n\nMy words echoed off the walls of my girlfriend's expansive living room as I called up to her. The distant sounds of her frantic attempts at getting ready to go out picked up steam.\n\n\"I'm just saying, you looked fine a half hour ago. What is there still to do?\"\n\nAgain, my words reverberated through the room, but no answer came down from upstairs. I was about to open my mouth a third time when a blurry, blond-haired shape appeared at the top of the stairs and proceeded to take them two at a time coming down at a rapid pace.\n\n\"Jesus! Ruth! Slow down. You're going to break your neck!\"\n\n\"Sorry! I just wanted to look perfect. It's not every day I meet my boyfriend's parents,\" she shot back skidding to a halt on the slick tile at the bottom.\n\nShe stopped to catch her breath, puffing in exertion. I wasn't sure what she had been doing before she came down. Ruth had looked beautiful when I had last seen her as I left her bedroom, and to outward appearances nothing had changed. Her nervousness, though, was almost palatable and I stepped closer to put my hands on her shoulders.\n\n\"Everything is going to be fine. I'm sure they're going to be thrilled to meet you.\"\n\nHer wain smile did nothing to alleviate the air of tension around her pretty head. Truthfully, I wasn't exactly sure how this was going to go, and I was more than a little nervous myself.\n\nFor the past five months I had been dating Ruth Hathaway, make that Ruth Bryant now, the former wife of my ex-company C.E.O. Richard Hathaway. We had raised more than a few eyebrows when we finally made our relationship public. There were several obvious reasons for people to wonder about us, not the least of which was the fact that Ruth was a wealthy divorc\u00e9e with a family that had even more money while I was a poor young executive just starting to get on top of his student loans. The one that stood out though, and bothered Ruth the most, was the twenty-four year age difference between the two of us. In spite of my every effort to assure her that it made no difference to me, she was still often fixated on the issue.\n\nThis was one of the big reasons why I had failed to mention to her that my parents didn't know.\n\nI figured this omission could come back to bite me in the butt, yet somehow every time the opportunity had presented itself to bring it up with them I had let it go. It was partly selfishness on my part. My dad had been so thrilled with the sudden turn around of my moribund career that I hadn't wanted to do anything to dim his enthusiasm. For the first time I could remember, he wasn't comparing me unfavorably to my highly successful sister with every breath. I can't say how wonderful it was not to have to feel like I was living in her shadow every minute of the day. \n\nThen there was my mother. I strongly suspected that she was going to be less than supportive of my dating a woman who was only seven years younger than herself. If for no other reason, than because it would likely put the kibosh on her having any genetic grandkids assuming things continued to progress between the two of us. \n\nYeah, the bottom line was I had been a coward, and now I was going to have to reap the fruits of my silence. \n\n\"Are you sure this outfit is o.k.? I didn't want to look like I was trying too hard.\"\n\n\"You look gorgeous. Just the right amount of sexy to charm my dad without being too slutty for my mom's taste.\"\n\n\"I'm honestly not sure how to take that,\" said Ruth raising an eyebrow.\n\nI just laughed. She did look great though in a conservative pair of long white shorts that hung down to her knees, but still showed off her muscular calves, paired with a nice dark blouse that matched her eyes. Her blond hair was pulled back in its usual ponytail, and her makeup was perfect accentuating her high cheekbones, and drawing just the right amount of attention to her creamy, full lips. I suddenly regretted that we were in a hurry because I would have been only too happy to scoop her up and head for the bedroom. \n\n\"We really should get going,\" I said glancing at my watch.\n\nWe took my car even though it always embarrassed me to have Ruth riding in it. My clunky ten-year-old Volvo was undoubtedly a long way below the usual standard of vehicle that carried her around. I will say that it had never seemed to bother her, and she always talked about how my old car had so much character. Given Ruth's excellent poker-face it was difficult to tell if she was just acting nice.\n\n\"I was going to start shopping for a new car next week,\" I mentioned casually.\n\n\"Really? I always thought this car had such nice character.\"\n\nI coughed to keep from laughing.\n\n\"It's just time for an upgrade. I've been driving this old beast since my freshman year.\"\n\n\"Just because something is old doesn't mean you should throw it out,\" she said with a smirk.\n\n\"You of all people should know I don't devalue things based on their age,\" I replied taking one hand off the wheel to slip it into hers. She patted the back of mine rubbing it gently.\n\n\"Have I told you today what a treasure you are to me, Peter Moran?\"\n\n\"No, but I loved to be showered with compliments so feel free to fire away.\"\n\nHer smile lit up her face like spring dawn, \"How about I start with what a hot stud you are and work my way from there?\"\n\n\"Careful, Lady. We have an appointment, and those kinds of compliments might force me to pull this car over.\"\n\n\"Promises promises...\"\n\nWe both laughed as we left the city behind and drove out into the wooded countryside.\n\nMy parents still lived in the house my grandfather had built when he moved out here long ago. A pleasant family jumble that had grown along the way as additional family members had required expansion to the property it was at present a five bedroom, three bath, ranch style home sitting on a couple of acres of land about thirty minutes outside of town. When Ruth and I pulled up, I was surprised to see a brand new Mercedes sitting in the driveway. It took me a moment to put two and two together, and by that time the front door had burst open and a pint-sized bundle of joy came charging out. \n\nMy sister, like myself, favored mom's side of the family in build and stature. A skinny little thing generously listed as being five-foot-four-inches tall, Susie Moran more than made up for her lack of size with boundless energy that could have powered a small town if someone were able to devise a way to harness it. I might sometimes have cursed her name, but deep down I loved my sister more than life and grabbed her up off the ground into a powerful hug as she lept into my arms.\n\n\"Susie! I didn't know you were going to be here. I thought you were still in Dubai?\"\n\n\"I took some time off to visit with Mom and Dad. I figured now that it looks like I'm going to be living over there for a couple of years I should stop in for a spell.\"\n\n\"Well, this is a wonderful surprise,\" I said setting her back on the ground.\n\n\"Who's your friend?\" asked Susie looking past me.\n\nI figured it was better to rip off the band-aid come what may, so I didn't even try to skip around the truth.\n\n\"Susie, this is my girlfriend, Ruth Bryant. Ruth, my sister, Susie.\"\n\n\"I've heard so much about you! It's so wonderful to meet finally,\" said Ruth offering her hand.\n\nRight off the bat, I realized that my sister had a poker-face just as good as Ruth's because if she was the least bit surprised by the age of my girlfriend, it never registered.\n\n\"Oh, Honey! A hand-shake just will not do! Not for my brother's girlfriend,\" said Susie with a grin, and she pulled Ruth into a hug. \n\nRuth took it in stride wrapping her arms around my sisters smaller frame and holding her close. \n\nWhile I observed the two women exchanging a greeting the sound of the front screen door opening and slamming back drew my attention the other way. As good as Susie's poker-face was my dad's was it's equal only in the opposite direction. He stopped half-way to us raising an eyebrow and looking over at me. I had told him I was bringing my new girlfriend, nothing about her graduating high school two years behind him.\n\n\"You must be Peter's dad. Ruth Bryant, it's a pleasure to meet you, Sir.\"\n\n\"Jack Moran...Um...Yeah...Likewise. Why don't we all go inside, Carol made tea,\" said my dad awkwardly.\n\nSusie practically yanked Ruth through the door leaving my dad and me in their wake. He reached out to touch my arm in a clear signal to hang back.\n\n\"Something you want to tell me, Son?\"\n\n\"There's nothing to tell really. I met Ruth at Warners while I was shopping five months back, but you already knew that.\"\n\n\"Yes, and you mentioned that she had money, but you failed to mention she was old enough to be your mother. What's going on here exactly? You trying to be a gigolo or something?\"\n\n\"I hope that was supposed to be a bad joke, Dad. I care about Ruth, and this is a serious relationship. Do I strike you as the gold-digger type?\"\n\n\"I sure didn't raise you that way. Still, you should have given us the heads up. It's not fair to just spring her on us.\"\n\nHe was right, and I knew it.\n\n\"I'm sorry about that, you're right, I should have mentioned it. I guess I was just nervous about how you guys would react...\"\n\n\"You should have a little more faith in us, Son.\"\n\n\"Like you have always have so much faith in me? If Susie had shown up today with a boyfriend twenty-years her senior how would you have taken it?\"\n\nMy dad rubbed his jaw in thought, then shook his head, \"I see your point, but Susie has never given us any reason to question her decisions. You, on the other hand, have made more than a few strange choices in your life. I guess this is just the latest.\"\n\n\"She's a good woman, Dad. Age aside, I've been happier with her than I ever was with Lucille.\"\n\n\"I'm glad to hear it. At the end of the day all a parent ever really wants is their child to be happy. That said we better get inside. I have a feeling your mother may not take the shock as easy.\"\n\nMy mother was far too polite to say something right to Ruth's face, but when my dad and I walked inside, there was tension in the air. Ruth was standing next to Susie while my mom, all five-feet-two inches of her stood gazing up at Ruth like she was a particularly strange zoo animal on exhibit.\n\n\"So...You're Peter's girlfriend? Hm...I have to say I was expecting someone...\"\n\n\"Taller with bigger boobs?\" offered Susie with a grin.\n\n\"Bigger boobs?\" echoed Ruth looking down with a frown.\n\n\"Peter used to have a thing for girls with big knockers when he was younger. It's good to see he matured out of that phase. Not that there is anything wrong with your boobs, Ruth, their fantastic! I hope mine look that good when I'm your age,\" added Susie.\n\n\"I was going to say...Well...Susie is right that you're not the type Peter usually brings home with him.\"\n\n\"Yeah...They usually look like he should pay them fifty bucks when he drops them back on the street,\" said Susie.\n\n\"Susie Moran!\" snapped my mother with a disapproving look.\n\nRuth just laughed though taking the comments in stride, \"All I can say is that Peter has been nothing but a perfect gentleman to me. You folks raised him right.\"\n\n\"It's gratifying to know a few of our lessons are finally sinking in,\" said my dad as he joined the conversation.\n\n\"You have a beautiful home, Mrs. Moran. I do interior design, and I love your choice of style,\" said Ruth trying to change the subject.\n\n\"Thank you. This house has been in our family for generations, so there is a lot of family history on these walls.\"\n\nI was happy to see the conversation turn away from Ruth's age. We managed to stay off the subject as my mom gave Ruth the ten cent tour of my old childhood home. Ruth was very polite, and I think it helped that she was so complimentary about how my mom had decorated. Things turned a bit awkward though when we sat down to dinner.\n\n\"I noticed that you have a Tolliver High School letter jacket on the coat rack in your foyer. I didn't know Peter lettered in a sport,\" commented Ruth.\n\n\"That's mine. I keep it for sentimental reasons. I played running back for Tolliver High back in 84,\" replied my dad.\n\n\"Well, then you and I are old rivals. I went to Carver High School.\"\n\n\"Is that right? We played them in the state championship game that year.\"\n\n\"I remember. I was on the cheerleading squad at Carver. You guys sure whipped us in that game.\"\n\nThere was a sudden uncomfortable silence that followed that exchange. It occurred to me that it was highly possible that my dad might have checked out my girlfriend at that long ago game given her looks, and perhaps it was just a quirk of fate that they didn't meet and start dating and...O.K. my mind can go weird places sometimes.\n\nThe look on my mom's face spoke volumes. I could only imagine what she was thinking.\n\nThis woman at her son's side once led cheers at a football game her husband played in?\n\nWhat the fuck?\n\n\"Hey! How about that new job, Peter. I hear you're jet-setting all over the world these days?\" said Susie.\n\nOnce again, I was grateful for a change in the conversation.\n\n\"Yeah, I just got back from Finland. I'm due for some vacation now, as a matter of fact, Ruth and I are going to be taking a trip to the Caribbean next week.\"\n\n\"That sounds exotic.\"\n\nWe talked for a while about our favorite vacation spots while my mom served one of my childhood desserts, chocolate cake with walnut sprinkles. \n\n\"Wow! This cake is so moist! What's your secret?\" asked Ruth.\n\n\"Hershey's syrup in the batter, and lots of heavy whipping cream. Don't think too much about the calories, or the guilt will kill you,\" remarked my mother.\n\nRuth graciously offered to help with the dishes, and I thought it might have raised her a notch in my parent's eyes. While her and my mom went into the kitchen, I took advantage of the break to get some fresh air outside.\n\nThe night was cooling off, and I stood in the semi-darkness watching the swaying of the old elm tree in our backyard where it stood caught in the moonlight.\n\n\"As usual, you know how to stir things up around here,\" said Susie from behind me.\n\n\"It wasn't my intention to create controversy, but I admit I didn't do much to avoid it.\"\n\nShe walked over to stand next to me.\n\n\"When I heard about you and Lucille I was worried about you, but it looks like you landed on your feet. Ruth seems very nice, and clearly, she dotes on you.\"\n\n\"You think so?\"\n\n\"I've been watching her all evening, and she looks at you the way Grandpa used to look at Grandma.\"\n\nMy grandfather's devotion to his wife was something of a family legend. The kind of romance people aspired too.\n\n\"Her age doesn't bother you?\"\n\n\"It's not a problem for me. I'm not dating her,\" said Susie with a laugh.\n\n\"Very funny, but seriously I'm worried it's going to be a big deal to Mom and Dad.\"\n\n\"They worry about you, and it's fair to be concerned about the obstacles of a May/December romance, especially if things get serious. Are they? Serious?\"\n\n\"We haven't talked about it exactly, but we've been together for five months and seem to get happier the more time that passes. If we continue down this road then, yeah, I could see things getting serious.\"\n\nSusie leaned closer slipping her arm around mine and pressing her head to my shoulder.\n\n\"At the end of the day it's your life, and the only opinion that matters is how you and Ruth feel. I wouldn't worry about Mom and Dad. Do what makes you happy.\"\n\n\"You're a smart lady, Sis.\"\n\n\"Yeah, well, I liked Lucille and look how that worked out.\"\n\n\"True...Ruth is no Lucille; that's for sure.\"\n\nMy dad called to us from inside the house, and we turned to rejoin the party.\n\n\"Five bucks says Dad breaks out the video of the Yosemite trip,\" said Susie.\n\nI winced, \"He just thinks it's hilarious that I fell in the same river twice.\"\n\n\"You had the reflexes of a ninety-year-old when you were a teen,\" said Susie patting my arm.\n\n\"That's why I don't have a letter jacket hanging in the foyer.\"\n\nSusie and I walked back into the house shutting the door behind us. My dad and Ruth were standing in the living room together.\n\n\"Hey, guys! I was telling Ruth she would enjoy seeing the video of our family trip to Yosemite.\"\n\n\"Five bucks,\" whispered my sister jabbing me with her elbow.\n\nThe rest of the evening went by without incident, but I couldn't help but feel that my mom spent a good chunk of it staring at Ruth. I was thrilled when it got late enough for us to excuse ourselves to go home.\n\n\"I'm glad I finally got to meet you both,\" said Ruth to my parents.\n\n\"It's been a real pleasure, Ruth,\" answered my dad.\n\n\"Yes, thanks for coming,\" said my mother with a good deal less enthusiasm.\n\nMy sister walked us out. The night sky was blazing with stars this far out away from all the city lights. Susie hugged us both leaning in to whisper something in Ruth's ear that made her laugh.\n\n\"I want to do lunch while I'm here Peter so free up that schedule.\"\n\n\"I will Susie. Call me tomorrow.\"\n\nI got back in the car and gave Susie a final wave as Ruth, and I pulled away.\n\n\"What did my sister say to you that was so funny?\" I asked as we drove back to Ruth's house.\n\n\"I think it should remain between us girls. It would just embarrass you anyway.\"\n\n\"I'm sure it would. I withdraw the question.\"\n\n\"Can I ask you something, Peter?\"\n\n\"Sure...Of course.\"\n\n\"Did your parents not know how old I am? I got the feeling they were surprised by it when we showed up.\"\n\n\"What? No, I think maybe it was just seeing us together that drove it home you know?\" I said lying and praying it didn't show.\n\n\"Your mom didn't like it, not one little bit.\"\n\n\"She needs to get used to the idea. It will be fine,\" I said hoping that was true.\n\n\"Your mom may be right, Peter. Have you really given any thought to where this is going? We might be doing o.k. now, but how about in twenty years when I'm seventy and you're forty-six? What about then?\"\n\n\"We can cross that bridge if and when we get there. I'm just happy for every day we have together now.\"\n\nRuth went back to staring out the window, and I didn't think she was convinced.\n\nTO THE ISLAND AND BACK -\n\nRuth may have vacationed all over the world, but for me, this was going to be my first time on a tropical island, and I was giddy with excitement. We sat in the departure terminal at the airport with me reading an article on my Kindle while Ruth flipped through a design magazine.\n\n\"It says here that some of the oldest Spanish missions in the Caribbean are located not far from our hotel.\"\n\n\"You know, Peter, you don't have to try to impress me by taking me on tours of architectural marvels that you will find horribly boring,\" commented Ruth.\n\n\"Boring? I don't know what you're talking about. I'm just trying to open myself up to new experiences.\"\n\nRuth chuckled and rubbed my arm.\n\nShe was sporting her typical casual look which included jeans that looked sculpted onto her tight ass, a comfortable t-shirt, and the ponytail through the baseball cap affectation which always made her look hot in my opinion. Her lips shined with my favorite lipstick on her, frosty pink. I had been unable to resist tasting her lips multiple times since leaving the house causing her to admonish me that she was going to run out of the shade if I kept kissing it off.\n\nAs she laughed at my attempts to plan a vacation we could both enjoy a gaggle of young twenty-something girls went by clearly headed for a similar locale as us. They were all dressed somewhat scantily, and from all the giggling I was willing to bet they had spent a fair bit of time in one of the airport lounges before coming to the gate. \n\nRuth sighed as they passed.\n\n\"Everything o.k.?\"\n\n\"I used to have a body like that...\" she lamented.\n\n\"You still do,\" I said placing my Kindle in my carry on.",
        "\"Oh please! I work my ass off in the gym, but no amount of exercise is going to make me look like they do again,\" she said.\n\nI turned her head away from the drunk sorority crowd so that her dark-brown eyes were focused on me.\n\n\"Trust me, Ruth, Those girls have nothing on you. I guarantee you half the guys in this terminal would give their right arm to spend one night with you. I saw a luggage handler trip over his own feet because he was too busy staring at your butt when we went by him. I'm just glad I'm not the jealous type.\"\n\nRuth shook her head and kissed my cheek.\n\n\"I'm pretty sure you're far-sighted, but I appreciate it anyway. You know when we get to the island I have a surprise for you.\"\n\n\"Oh! I love surprises. Is it a pony? Because if it is give it to me now, I can't wait!\"\n\n\"It's not a pony, but I think you will like it,\" she said mysteriously.\n\n\"It so happens that I have a surprise for you too.\"\n\n\"Oh?\"\n\n\"Yep! but you will have to wait...\"\n\n\"There's nothing I could do to find out now?\" she asked in a sultry tone putting one hand on the inside of my thigh. \n\nMy penis got hard so fast I winced when it collided with the stiff fabric of my jeans.\n\n\"No fair! You're not allowed to use your feminine wiles on me.\"\n\nShe smiled so wickedly at me that it made me glad I wasn't a spy. I'm pretty sure she could have gotten our countries secrets out of me in record time.\n\n\"O.K.! I'll play nice. Keep your secret.\"\n\nThe subsequent plane flight was a revelation for me. I had never flown first class before, and I have to admit a guy could get used to that kind of ass kissing. The extra leg room was nothing to complain about either. \n\nThe hotel we had booked was right on the beach, and my surprise for Ruth became readily apparent after we checked in. I had called ahead and had them upgrade us from a suite in the main hotel to a separate cabin that sat in its own secluded clearing down a trail from the primary buildings. There were about a dozen other, similar structures doting the grounds all of them with private beach access. I had chosen this one in particular because the rear entrance backed up to a natural fed pool with a waterfall that dropped into it from a dozen feet up. The thick grass growing up to the edge made a nice cushion one could lay a blanket on to enjoy the sight. \n\nRuth was thrilled with the cabin, and she gave me a great big hug after the porter left from dropping off our bags.\n\n\"Peter! This is so nice! I love it,\" she said racing around to check out the amenities. \n\nThe hotel had left us a bottle of champagne chilling in a bucket, and I poured us each a glass while Ruth started to unpack.\n\n\"I'm glad you liked my surprise,\" I said watching the bubbles dance in the individual glasses.\n\n\"The question is...How do you like MY surprise?\"\n\nI nearly dropped the champagne glasses on the floor.\n\nI had seen Ruth in many photos wearing a variety of different bathing suits, most of them of the bikini type, but what she was wearing now was easily the most revealing one. It was jet black, and what there was of it barely covered her perfect round breasts with a thong bottom that split her tight ass cheeks leaving them entirely on display. She crossed the room spinning so that I could get the full effect.\n\n\"Do you like it?\"\n\n\"I'm...Uh...Wow...You look...Amazing!\" I finally managed.\n\nRuth smiled at my noticeable loss of speech capability while snatching a champagne flute from my hand.\n\n\"Should we hit the beach?\"\n\n\"I have a better idea.\"\n\nI quickly got into my bathing suit and grabbing a blanket from the closet. I led Ruth out the back entrance of our luxury cabin bringing the champagne bucket along for good measure. Spreading the blanket on the soft grass in front of our private pool I motioned for Ruth to join me on it while we toasted each other, downing some of the bubbly liquid.\n\n\"Come on,\" I said nodding at the pool and its attendant waterfall.\n\n\"It looks like it might be chilly,\" she said doubtfully.\n\n\"I'll keep you warm,\" I promised.\n\nWe entered the water together, and though it was a bit cool, we quickly grew used to it. I guided her out to the far side pulling her up on a large flat rock that jutted out right under the waterfall. She laughed as the water splashed down near us splattering cold droplets all over our bodies. Her face was dusted with tiny bits of water, and she had never looked more beautiful. I couldn't help myself as I pulled her to me covering her mouth in a soft kiss that soon turned more hungry as her full lips slid deliciously against mine. Her tongue gently moved into my mouth, and I welcomed the intrusion letting her explore at her leisure licking and teasing me with the tip. A shiver ran down my back, and I pulled her body tighter to me stroking her damp hair with one hand while I ran the other down her lower back to cup one of those perfect ass cheeks. Ruth moaned into my mouth, and the sound raised my desire to an even higher level.\n\nSlowly, I pulled away from her sweet kiss and leaned in to run my lips across her neck. She sighed as I kissed her pulsing jugular letting my tongue slide ever downward toward her collar bone, and then further still while the hand that had been caressing her ass came up to join the party. \n\n\"Peter...Someone could come...\" she whispered when I started to pull down one cup of her bikini.\n\n\"That's why I ordered a private cabin. No one will bother us unless we want them too,\" I assured her.\n\nShe didn't fight me any further, and I exposed her breast letting my kisses cover the soft skin beneath her top. The cold water had turned her nipple into a rock hard point, stiffer than I had ever seen it before. Ruth gasped loudly when I covered it in my mouth letting the heat of my tongue warm her chilled flesh. Her swollen nipple felt wonderful, and I sucked at it roughly pulling it between my teeth.\n\n\"Oh! Peter!\" moaned Ruth.\n\nI got the other side of her top down in short order and went to work on it making sure to warm her breasts equally. Ruth slid a hand into my wet hair guiding me from one to the other her breath coming faster as the fire of her arousal shook off the coolness of the pool. Our mouths met again in a frantic, needful kiss, Ruth's amazingly soft lips mashing to mine. We were both starting to lose control driven by a need to join our bodies together that transcended rational thought. \n\n\"I need you, Peter,\" she whispered desperately.\n\nWe made our way back to the blanket shedding Ruth's top as soon as our backs hit the soft folds. I had never been so hungry for her breasts before, and I couldn't get enough of them. She went over on her back with me on top squeezing the slick flesh of her love mounds in my hands, covering every inch with hot licks and wet kisses. Her barely restrained cries of pleasure filled the air. \n\n\"Uh! Peter...Baby...You're making me crazy...God, I want this so bad...I want you, Peter!\" \n\nI rolled her bikini bottoms down noting that her labia were already swollen and spreading open revealing the pulsing pink flesh of her wet pussy. The distant call of some wild bird barely covered the sound of Ruth's cry when I buried my tongue inside her licking her dripping slit from bottom to top, teasing her trembling clitoris with the tip. Her back arched off the blanket as she writhed and moaned making fists in the thick cotton folds. \n\n\"You're so wet, Ruth...I love to taste you...\"\n\n\"More...Don't stop, Peter...Oh, GOD! Don't stop! Feels so good!\"\n\n\"Cum for me Ruth...I want to feel you cream my tongue!\"\n\nHer pussy was pouring with juice, and I lapped it up making her shake. \n\n\"Fuck! I'm so close...SO CLOSE! Oh! Peter, Darling...You're...going to...get what you want...Oh, God!\"\n\nI had grown to know Ruth well enough over the months we had been together to tell when she was about to orgasm, and the signs were all there. Her inability to lay still as she thrashed all over the blanket, the steady throbbing of her pussy on my face, the flush of blood across her gorgeous chest. A constant groan had begun to issue forth from her deep in her throat, and she grasped my hands pulling them to her breasts.\n\nThe minute I pinched her hard nipples her whole body stiffened.\n\n\"Fuck! PETER! Ahhhh...Fuck...Cumming, Baby! Oh! I'm cumming so fucking hardddddd! Oh! Peterrrrrrrr!\" \n\nDamn! Did that woman ever look beautiful when she came...I don't think I could ever tire of just watching her, face composed in an expression of almost painful release, mouth hanging open, eyes screwed tight shut, body quaking from head to toe racked by waves of hot orgasmic pleasure. She shuddered and gasped with each pulse of her pussy, and I felt them all against my face. Inwardly, I smiled that I could bring her such delights.\n\n\"Dammit...Peter...You always make me cream so freaking hard...\" she whispered when the tremors subsided at last.\n\n\"You always look so gorgeous when you do,\" I replied smiling from between her spread legs.\n\n\"I think it's your turn now.\"\n\nRuth pulled me on top of her but quickly rolled me onto my back covering my lips in a wet French kiss. Her tongue traced a sexy pattern across mine while her hands teased my fully erect cock through the damp cloth of my swimsuit. I felt the warm tropical air striking my testicles when she pushed my suit bottoms downward and a moment later the afternoon was filled with the sounds of my feeble attempts at holding back my orgasm.\n\n\"Jesus...Ruth...\" \n\nFuck! can that woman suck cock.\n\nHer mouth covered the head of my penis letting it slide in and out while she ran her tongue in quick circles all around the fleshy hood. Ruth knew just how to tease me, letting my cock slide partly, but not entirely inward, making me beg for her to take it all until finally when I couldn't stand anymore, she would suddenly push her mouth completely down my shaft hugging it in the back of her throat. She would do this over and over driving me insane with the need to come.\n\n\"Fuck...Ruth...Please...Baby...I can't take it anymore...I need you!\" I whimpered.\n\n\"Ummm...I can tell, Sweetie...Your poor balls are like iron...You're so ready for me aren't you?\"\n\n\"God Yes!\"\n\nRuth was grinning like a kid with a full Easter basket by the time she climbed on top of me. My aching cock sunk into her pink skinned love hole and I couldn't stop the loud moan that escaped from my chest as the tight, hot flesh wrapped around me. She pressed her hands to my chest riding me with hard thrusts of her hips, grinding her cunt onto the base of my shaft.\n\n\"Um! Yes! Always feels so good to fuck you, Peter! I'm going to ride all of that sweet cum right out of your balls!\"\n\n\"Shit! Ruth! I don't...think... you're going to have to wait very long.\"\n\n\"Oh Yeah? Are you very close, Peter? Do it! Cum for me, Peter! Fill my pussy! Give it all to me, Darling!\"\n\nShe was an absolute vision on top of me, head thrown back, beautiful face smiling and happy, gasping and biting her lower lip, enjoying the feeling of my cock pushing up into her body. My balls contracted and a flood of semen burst from my penis followed by another my cock jerking and spewing forth long ropes of it deep into Ruth's pussy.\n\n\"Oh! Ruthhhhhhhh! Cumming! Ahhh Yesssss!\" I cried.\n\n\"Yes! Peter, I'm cumming again! AH! FUCK! Peterrrrr! Ah! God! Baby!\"\n\nThe moment that followed was about as perfect as I could have hoped for, the two of us cuddling naked on the blanket beneath all the beauty and splendor of this tropical paradise. The only thing more beautiful was Ruth herself, and I gently kissed her perfect lips.\n\n\"How is the vacation going for you so far?\"\n\nShe smiled sweetly back at me, \"I know we just got here, but this is going to be pretty hard to top.\"\n\n\"It's early yet. Let me catch my breath, and I'll see what I can do.\"\n\n\"I'll just bet you will.\"\n\nWe made love on the blanket once more, slower this time now that the initial fire of our need for each other had calmed. A breeze from the ocean cooled our bodies making the joining that much sweeter, and when we finally did come it was at the same time looking deep into each other's eyes. \n\n\"Ruth...Baby!\"\n\n\"I know...Give it to me, Peter! Give it all to me...\"\n\nWe did manage to make it to the beach that day, after a short recovery period involving a shower and a few more glasses of champagne. The ocean was even more transparent and more impressive than the advertisements had led me to believe, and Ruth and I walked hand in hand feeling the white sand slip between our toes. I couldn't imagine how things could get much better.\n\nThe day that followed I took Ruth on a tour of some of the better known architectural marvels on the island. I found it more interesting than I had expected. My original idea was that Ruth would appreciate the trip from a professional standpoint, which she did, but I had not anticipated how much I would enjoy the history behind the churches and old plantation homes that dotted the region. I might not have been able to tell you much about how things were built and decorated, but I could understand the people behind it all. It had been a day of interesting exploration for both of us, and I think we came out of it even closer than we had been. I'm glad we had that because our trip was about to have some unexpected guests.\n\nRuth and I had returned from our sight-seeing and cleaned up for dinner joining throngs of other guests as they made their way to the hotel restaurant. I was idly standing in the lobby right outside the restaurant entrance while Ruth checked her e-mail on her phone when a familiar voice made my heart drop into my shoes.\n\n\"Peter? Is that you?\"\n\nIt was a voice I hadn't heard in almost six months, but I recognized it quickly. God knows I had fucked it's owner enough times over the previous five years.\n\n\"Lucille?\" I managed to croak out in shock.\n\nMy former girlfriend and lover stepped out of the crowd walking up to me with a huge grin on her face. She hadn't changed much since I had seen her last; her red hair fell in waves around a long face with high cheekbones and wide-set green eyes. Lucille had the looks and poise of a runway model, minus the tendency to be super skinny. If anything, Lucille was much the opposite, a curvy girl with large, round breasts that often looked as if they were going to burst out of whatever outfit she was wearing. In this case, it was a red dress with a plunging neckline that showed off her substantial chest cannons very nicely.\n\n\"It's so good to see you!\" she said throwing her arms around my neck and placing an unwelcome kiss on one of my cheeks leaving a streak of her red lipstick.\n\nI caught Ruth looking very unhappy out of the corner of my eye as I fought to untangle myself from my ex-girlfriend.\n\n\"Uh...Yeah, you too.\"\n\n\"So what are you doing here? Vacation or business? Oh, wait! Where are my manners, this is Dmitri,\" she said turning to introduce a dark-haired gentleman behind her who I had missed entirely in my dismay over Lucille's sudden appearance.\n\n\"It's a pleasure,\" said her companion in a thick Eastern European accent.\n\nHe looked to be about my age, with curly black hair and a smirk on his face that gave me the impression that he was finding my discomfort amusing. Something about this guy made me think, \"arrogant jerk,\" even though I didn't know him from Adam. I was stumbling so severely that it wasn't until Ruth cleared her throat that I remembered she was there, and I turned awkwardly to make introductions.\n\n\"Lucille and..Ah...Dmitri, this is my girlfriend, Ruth.\"\n\nLucille raised one eyebrow in surprise as she shook hands with the new woman in my life. I could tell instantly that a dozen or more questions were flashing through her brain.\n\n\"Ruth...It's nice to meet you,\" said Lucille in a much more subdued tone than the one she had greeted me with at the start.\n\n\"Likewise,\" replied Ruth just as coldly.\n\nThe four of us stood nervously for a moment no one seemingly wanting to pick up the conversation and run with it.\n\n\"So, Lucille. How are things going with the new job?\" I asked at last. It was the only safe subject I could think of on the spur of the moment.\n\n\"Fine...A little slow...How are things in the consulting world?\"\n\n\"Good, actually they've picked up for me since we spoke last. I got a promotion, and I'm finally doing the kind of work I wanted to be to doing all along.\"\n\n\"Wow! I'm so happy for you! I knew they couldn't keep a man of your talents chained up for long,\" replied Lucille. \n\nThere was something about my ex-girlfriends gaze that was making me very uncomfortable. I guess it was that she was looking at me with the kind of interest she had shown when we first met. The type of look that had led to us spending a weekend naked and locked in my dorm room taking breaks from sex just long enough to order pizza.\n\n\"Yeah, well. I'm just glad to be out from behind my desk.\"\n\n\"How did you and Ruth meet?\" she asked suddenly catching me off guard again.\n\nI fumbled trying to answer. \n\nHow do you explain that you met your girlfriend in an antique gift shop while she was married and started an affair with her that ended in the dissolution of her marriage? \n\nIt didn't exactly sound like a Hallmark movie of the week. \n\n\"We met while shopping. Peter was a real gentleman helping me get to my car in the rain when I forgot my umbrella. We started talking and just hit it off,\" explained Ruth calmly with none of the struggles I was having.\n\n\"Constantine! Constantine! Your table is ready!\" called a hostess.\n\nDmitri perked up, \"That's us.\"\n\nI breathed a sigh of relief.\n\n\"Well it was nice seeing you again, Lucille,\" I started to say glad to be away from this odd situation.\n\n\"What? Oh, nonsense. We can't sit in the same dining room like we don't even know each other. You and Ruth should join us for dinner,\" said Lucille in a tone that indicated the matter was already settled, at least in her mind.\n\n\"Dmitri? Be a doll and make sure they can do a table for four.\"\n\nI shit you not. The smirking little bastard actually bowed before he moved off.\n\n\"Seriously, Lucille, that's o.k. you don't have to ruin your date for us.\"\n\n\"It's fine. Dmitri loves to talk to people. It helps him practice his English.\"\n\nI looked helplessly at Ruth whose face was taking on a definite scowl.\n\nDmitri returned with the hostess in tow and led us into a large ballroom, a sea of people were milling around an extensive buffet or seated talking and eating. \n\nRuth and I brought up the rear, and she leaned closer to me.\n\n\"So this is the infamous, Lucille. You didn't mention how beautiful she was, or that she still has a thing for you.\"\n\n\"I don't think she's that beau...Wait!? A thing for me? What are you talking about?\"\n\n\"Wake up, Peter! That girl was looking at you like you were a dessert platter at her favorite restaurant.\"\n\n\"I'm sure you're reading too much into this. She left me after all.\"\n\n\"Maybe, but I know the look of an interested woman when I see one.\"\n\nI tried to shake off what Ruth was saying, but I strongly suspected she was right which would make this dinner the most awkward in history.\n\nThe hostess brought us to a table set for four, and we quickly took our seats. The waitress brought us menu's, and we perused them carefully.\n\n\"Look at this, Peter, they have Peking duck. Remember when we took that trip to Lake Charles and had Peking duck at that cute little restaurant overlooking the water?\"\n\nLucille was grinning at me over the top of her menu. I knew why, that meal had been the only one we had made it out of the hotel for, it had been our first trip together, and we spent most of it trying to break a record for the most condoms used in a single weekend. Sadly, the memory did spark a brief stirring in my pants which I guiltily forced down.\n\n\"Lake Charles? I'm not sure I remember that one,\" I lied glancing over at Ruth who was looking at me in a way that made me sure I would be answering questions about it later.",
        "\"Oh...I bet you do...It was unforgettable,\" said Lucille still grinning as she returned her gaze to her menu.\n\nI swallowed and prayed for this meal to end quickly, or for me to start choking on something, whichever got me out of the restaurant sooner.\n\nThankfully, given the crowd, the service was swift, and we had our food in short order. I tore through my chicken like a man on a mission determined to finish and get out of there. While we ate a band started playing on the stage at the far end of the ballroom. A few brave couples moved out onto the dance floor.\n\nDmitri excused himself to the restroom leaving just the three of us at the table when the band started playing a familiar song.\n\n\"Well, here's one we know, Peter! Remember my cousin Myra's wedding? How about a dance for old times sake? You don't mind do you, Ruth?\" \n\nI looked at Ruth with a plea in my eyes for her to put a stop to it, but she shrugged and seemed to take the request in stride.\n\n\"Not at all,\" she said though she was feeding me a definite, \"I told you so,\" kind of look.\n\nI got to my feet and followed Lucille out onto the dance floor with one last unhappy look in Ruth's direction before we arrived. \n\nThe song was mid-tempo, so I didn't feel like I had to dance too close to Lucille. I tried to keep a respectable distance, and to my relief, she seemed to go along with that idea, at least at first.\n\n\"You and Ruth make an...interesting couple,\" commented Lucille.\n\n\"So do you and Dmitri,\" I countered.\n\nLucille sighed, \"He's just a distraction. It's nothing serious. How about you and Ruth?\"\n\n\"We've been together for a while. I think it may be getting serious.\"\n\n\"Really? She seems a little, and I hope you don't mind me saying this, but as a friend, don't you think she might be a bit old for you?\"\n\n\"I hadn't noticed.\" \n\n\"Peter, you always were such a gentleman, but seriously Ruth must be at least twenty years older than you?\"\n\n\"Something like that, it doesn't matter. I'm not worried about it.\"\n\n\"Shouldn't you be? I thought you wanted kids someday? We talked about it a few times.\"\n\n\"As I recall when we did you clearly said you weren't interested in ever having children.\"\n\n\"A girl can change her mind.\"\n\n\"What happened with you and your boss? I was pretty sure something was going on there?\"\n\n\"Chris? It wasn't ever serious. I'm sorry about that, Peter. I mean I did want the job, and I guess for a while I let him blind me with his European charm, but it was never like what you and I had. It was foolish of me to throw that away.\"\n\nAs Lucille made this declaration she sidled up closer to me. \n\n\"Lucille...We should go back to the table,\" I said.\n\n\"I can tell you still want me, Peter. I saw the way you were looking at me in the lobby, and the way you're stiffening up right now,\" she observed wickedly as she tried to rub up against me.\n\n\"Stop! I don't know where you get off! First, you dump me, over the phone no less, and now you're making a play for me in front of my girlfriend?\"\n\nI released her and started to step away from the dance floor, but Lucille managed to get in front of me.\n\n\"Pete, please, I know I was coming on a little strong, but can you blame me? I made a mistake. We were together for years, and you were right that we meant a lot to each other. Do you want to throw that away for good on a woman who will be in a walker by the time you're forty? Don't you think it's fate that we would meet again like this?\"\n\n\"I'm not having this conversation with you. We broke up months ago, and I'm with someone else now. I need to go.\"\n\nShe made one last plea grabbing my arm, \"Peter...Listen...Just think about it. I'm traveling alone in room 606B. Come by later and we can...talk...or whatever. I promise you one thing, if you show up I can make Lake Charles look like a warm-up.\"\n\n\"Oh! For the love of...Goodbye, Lucille.\"\n\nI got by her at last and made my way back to the table.\n\n\"We're going, Ruth,\" I said.\n\nShe fell in next to me without a word until we reached the lobby.\n\n\"Is everything o.k.,\" she asked.\n\nI took a deep breath and told her exactly what had happened on the dance floor. Ruth listened in silence with an expression I couldn't quite read. When I finished, she nodded.\n\n\"I told you she was still into you.\"\n\n\"I know.\"\n\n\"She isn't wrong either.\"\n\n\"I beg your pardon?\"\n\n\"Lucille isn't wrong. I may well be in a walker by the time you're forty. Is that really how you want to spend your future? Don't even get me started on having children.\"\n\n\"We can always adopt kids, and I can decide for myself how I want my future to be. I'm not sure why we are even having this conversation. Lucille is in my past, and we are still kind of figuring things out.\"\n\n\"At my age, I can't afford to spend too much time just figuring things out, Peter.\"\n\n\"I don't understand? Are you expecting a commitment from me right now? Because I more or less thought we were serious, I mean I'm not seeing anyone else are you?\"\n\n\"No, of course not, but I'm just saying I don't plan on growing old alone, and you may not be ready when I am to take that next step.\"\n\n\"So what? This relationship is doomed to failure before it starts?\"\n\n\"I'm not saying that either...I...Shit! Peter! I'm not sure what I'm saying I'm just scared,\" said Ruth as tears flooded her eyes.\n\n\"Ruth it's going to be o.k., Sweetie. I'm not sure what the future holds for us, but...\"\n\nLucille picked this most inopportune moment to walk out of the restaurant. \n\n\"Hey you two is everything all right?\" she said walking up to us.\n\n\"This is a private conversation!\" I snapped.\n\n\"Hey! I was just trying to help,\" said Lucille defensively.\n\n\"I've heard how you're trying to help. Why don't you go spread your legs in the bar, I'm sure someone desperate enough will fall in,\" said Ruth angrily.\n\n\"What the fuck did you just say to me?\"\n\n\"Easy ladies!\" I said as their voices got louder and started to attract attention.\n\n\"Your girlfriend has quite a mouth on her, Peter. Who taught her manners?\" said Lucille icily.\n\n\"I'll teach you some manners. You red-headed tramp!\"\n\n\"Tramp! At least I'm dating a guy in the ballpark of my own age. Where did Peter and you meet again? At a Cougar convention?\"\n\nI'm not sure exactly what happened next, I just know I was caught in the middle when the fists started to fly. Lucille was taller, younger, and heavier, but Ruth worked out like a fiend and had some serious spunk for a woman her size. It was all I could do to keep the two of them apart, and truthfully I think I got the worst end of the exchange before hotel security showed up and calmed things down. Somehow while trying to explain things to a less than sympathetic security guard I turned around to find Ruth gone.\n\nI spent the next two hours scouring the hotel grounds for my wayward girlfriend while trying to wrap my head around everything that had happened. \n\nThis whole thing was starting to get very complicated just as Ruth had predicted months earlier. \n\nThere was no doubt that this situation between her and I was not a conventional relationship, and it was going to be a tough sell to my parents if things continued.\n\nWas it worth all the headaches?\n\nWhat about the future? Children, and the two of us aging differently, and all that implied?\n\nI had a whopper of a headache by the time I returned to our private bungalow, and I had no idea my trouble was just beginning.\n\nWhen I first opened the door, I felt a sigh of relief come over me when I spotted another figure in the dim light coming from the lamp post outside, but when I turned on the lights I was in for an unpleasant surprise.\n\n\"Lucille! How the fuck did you get in here?\"\n\n\"A very sympathetic hotel employee who I gather has a thing for gingers. I explained to him that my boyfriend had locked me out of our room after a little spat and he was more than happy to let me in.\"\n\n\"Then you can let yourself right back out!\"\n\n\"You didn't find Ruth, huh?\"\n\n\"No...\" I admitted in frustration.\n\n\"I could help you look?\"\n\n\"I think you've done enough already. Just go, Lucille, things are messed up enough without Ruth finding you here.\"\n\n\"Can I at least get my purse? I left it in the bathroom.\" \n\n\"Fine!\" I said walking to the bar and pouring myself a shot of Tequila. This had been a hell of a night that was for sure. The fiery liquid burned all the way down leaving my stomach with an even more queasy feeling and not helping at all.\n\n\"Hurry up, Lucille!\" I called to her as I poured myself another hoping that doubling down would work better.\n\n\"Are you sure you want me to go, Peter?\"\n\nI turned to tell her exactly where I wanted her to go, and almost spilled my Tequila all over the floor.\n\nLucille was standing just outside the bathroom door missing all of the clothing she had been wearing a minute earlier. I had to give her credit for being able to disrobe faster than anyone I had ever met. She started toward me, and I backed into the bar rattling all the bottles on the small shelf when I smacked into it. \n\n\"Remember what I said about Lake Charles?\" she said in a sultry tone.\n\nMy brain wholly locked for a second as I hunted for what to say next. It didn't help that for all her faults Lucille was smoking hot. I had forgotten just how sweet her huge tits looked with their wide, bumpy light-pink areolas. There had been more than a few nights I had spent sucking and licking every inch of that perfectly round pair. As she came closer, I couldn't help but peek at the fiery red bush between her legs remembering how much she liked to straddle my face with it.\n\n\"Um...Peter...I've missed you, Baby. I know it could be so good for us again. Please...Take me to bed...\" she whispered sliding her arms up around my neck.\n\n\"Lucille,\" I said in a tight whisper.\n\n\"Yes, Peter?\" she replied parting her soft lips.\n\n\"Get dressed and get the fuck out of my room!\" I exploded.\n\nShe took a step back in shock just staring at me. \n\nI was ready to launch into an even harsher tirade and would have if the front door hadn't opened at that moment and Ruth hadn't stepped into the room.\n\n\"Oh...Shit...\" I said under my breath.\n\nRuth's eyes went big as saucers at the scene in front of her, and then she turned heading back out the door.\n\n\"Ruth wait! This isn't what you think!\" I yelled feeling like I was in a bad Hollywood movie. As it turned out I couldn't have read the situation more incorrectly. I was barely half-way to the door when Ruth ran right back past me brandishing the broken tree branch she had plucked from the ground outside. \n\n\"You BITCH!\" she screamed taking after Lucille like a shepherd defending their flock from a wolf. \n\nI was so stunned all I could do was watch slack-jawed as Lucille fled from my wild-eyed girlfriend who chased her in a tight circle around the room narrowly missing smacking Lucille on her Lilly white rear-end before it vanished out the front door. My last view of Lucille Smith was of her naked ass moving at a very high rate of speed down the sidewalk away from my bungalow. Ruth turned to me huffing and puffing as she tossed the branch back into the night.\n\n\"Where are that bitches clothes?\" she asked me in a no-nonsense tone and I fearfully pointed toward the bathroom. \n\nShe marched in and came back with Lucille's dress carefully folded and her purse sitting on top. I watched as she placed them on the front porch just outside of the door and shut it. Then she returned to the mini-bar and took the Tequila bottle pouring herself a tall shot and downing it in a single go.\n\n\"Ruth...I.\"\n\nThat was as far as I got.\n\nRuth launched herself into my arms covering my mouth in the single hottest French kiss I had ever received in my life. I was fighting to get a handle on what was happening as she sent shivers all down my back with her tongue, her full, soft lips plastered tight to mine. The kiss took my breath away and left me staggering in the middle of the room holding her tight to my chest. She didn't seem interested in letting me come up for air either. Her head pivoted from side to side rubbing her slick lips all over mine while her tongue kept dancing in my mouth. I was holding on for dear life just trying not to drop her onto the floor. \n\nWhen she finally did pull away for a moment, her eyes were flashing with a lust-filled fire that made me go instantly hard in my pants. \n\nRuth reached up with both hands grabbing the straps on her designer dress and pulling them down so violently her breasts burst free like candy from an exploding pinata. \n\n\"Jesus, Ruth...\" I breathed.\n\n\"Peter...Take me to bed and fuck me!\" \n\nI managed to stumble back toward the bedroom dropping her unceremoniously onto the mattress. She was in my arms again tearing at my shirt that went away in a shower of buttons. Her tongue was all over my chest tracing a line down toward my belt buckle which her nimble fingers took care of shortly after letting my pants slip to the ground. I was utterly at her mercy while she ripped down my boxers and engulfed my cock to the hilt in her warm, wet mouth.\n\n\"Oh FUCK! Ruth...\" I gasped out trying to stand on knees that were shaking, my heart racing in my chest.\n\nRuth's head was a blur, the sloshing sounds of her sucking wildly at my penis drowning out my cries. I couldn't recall a woman ever giving me a more frantic, needful blow job. My balls were on fire, semen surging toward the head of my cock with all the force of a flash flood. I was more ready to come than ever before, but I felt strongly that Ruth wanted more than just a throat full of my spunk. It took a supreme effort, but I only managed to head off the imminent eruption by pulling her off me and pushing her back onto the bed. \n\nWe fell together with me on top, my hands finding her breasts. The gorgeous nipples that supplanted her rosy-red areolas were harder than I had ever seen them, and Ruth arched her back and squirmed in my arms when I sucked them into my mouth.\n\n\"Yes! Peter! Suck my fucking tits! Oh, GOD! I want you inside me! Peter! Oh! Please, Peter! I need to feel you inside me!\" she begged.\n\nI got her dress off, tossing it aside, tearing it in the process and hoping it wasn't one of the really expensive ones. \n\nThis wasn't a time for foreplay, and it wasn't necessary anyway, Ruth's pussy was pouring like a baby oil fountain. I entered her with a single thrust, burying my cock to the hilt in her quivering pink flesh. \n\nWe cried out together at the sheer unbridled pleasure in our joining. Two bodies made one in an instant. \n\nI wasn't inexperienced in bed, that was for sure, so I can honestly say that it had never been like this before, not this intense. Ruth grabbed onto me like she was going to drown in the passion between us and I was her lifeline. Her eyes were rimmed with tears and so filled with emotion; it almost scared me to look into them. We came together and broke apart. The heat was growing with each push and each mating of my body to hers. My balls were surging again, and her vagina was getting tighter. \n\n\"Peter...Peter...Oh...Oh...God...Peter...It's never been like this...OH! PETER!\" \n\nRuth's eyes slammed shut, and she cried out my name digging her nails painfully into my back. I felt her body tense up, her pussy gripping my cock over and over, squeezing me. \n\nI answered her in kind, \"Oh RUTH!\" orgasming so hard inside her my legs shook for hours afterward.\n\nIt took a long time for us to come down, for our breathing to return to something like normal. When she opened her gorgeous, dark eyes and looked back into mine again, I knew exactly what I was going to say, and she beat me to it by just a heartbeat.\n\n\"I love you, Peter.\"\n\n\"I love you, Ruth.\"\n\nBACK HOME -\n\nI pulled up in front of my parent's house shutting off the car and taking a deep breath. \n\nMy sister's car was in the driveway, and it made me feel slightly better to know that she was still there and hadn't gone back to Dubai yet. I suspected I was going to need her support before all was said and done. The time on my car clock read 5:00 p.m., I had exactly an hour before Ruth was due to arrive. \n\nThe walk to my parents front door should have taken a matter of seconds, but I admit I took it slower than usual gathering my thoughts, preparing to make my arguments.\n\nI didn't knock, just went right in like I still lived there, but my parents expected that. My dad was sitting in his usual spot, resting back in his leather reclining chair one hand poised over the remote like someone would steal it if he weren't ever watchful. Susie was comfortably seated opposite of him on the couch, legs crossed, and looking down at the magazine in her lap. I didn't see my mother right off, but given the noise coming from the kitchen, it was obvious where she was at.\n\n\"Hey guys,\" I said shedding my jacket as I walked in.\n\n\"Well, look who's back from the land of coconut oil and palm trees,\" commented Susie with a smile.\n\nShe and I had spoken on the phone already, and she knew the real reason I had asked to have another dinner here tonight. I went and sat down next to her, and she placed a hand on mine in a show of support.\n\n\"Mom just put a casserole in the oven,\" offered my dad.\n\n\"That's good. Ruth should be here in about an hour.\"\n\n\"Perfect timing then...\" he said absently still keeping his eyes on the basketball game in front of him.\n\nMom walked in the room wiping her hands on the front of her apron.\n\n\"Hi, Peter. Isn't Ruth with you? I thought she was coming to dinner too.\"\n\n\"I was telling Dad that she is coming separately. I came straight from work, but I wanted to talk to you guys before she got here anyway.\"\n\nDad muted the T.V. glancing over at me. I guess he could hear the unusually serious tone in my voice.\n\n\"What's on your mind, Son.\"\n\n\"I wanted to ask you and Mom for something.\"\n\n\"Rent money?\" my dad asked with a raised eyebrow.\n\n\"No...Not this time. I told you before, my job is going well, and everything is fine on that score.\"\n\n\"That's good to hear.\"\n\n\"There was something else I did want to ask you for, though, and I know you both have to be in agreement on it,\" I replied taking in my mom with a nod of my head.\n\n\"Oh?\" \n\nI told them both what I wanted and why. As I expected, my request was not met with universal excitement by others in the room. My mother dropped into a chair by the dining room entrance looking paler than she had when entering the room. My dad hunched forward in his chair looking at me critically.\n\n\"Have you thought this through, Son. This is a pretty big step for you to take, and given the circumstances...\"\n\n\"Let me stop you there,\" I said cutting him off, \"I know every argument you're going to make. I've had them all with myself over the last six months, but if I've learned anything, it's that my life changed on a rainy day in February more than I ever imagined at the time. I don't think I'm the same person I was then. No, that's not really right, I know I'm not the same person. Ruth came into my life and made all the difference for me. She showed me how to find the confidence in myself to succeed just by being confident in me herself. She put her trust in me, believed in me, and I can't say how much that has meant. I know this raises some questions for you, but at the end of the day, I can't picture my life without her in it.\"\n\n\"Oh Lord...\" said my mom under her breath.\n\nMy dad looked over at her, and their eyes met. I always kind of wondered if my parents shared some sort of telepathy because growing up it always seemed like they could have whole conversations without either of them saying a word. They held each others gaze for several long seconds, and at last, my mom just nodded and looked away.\n\nDad cleared his throat looking back at me, \"I can see how serious you are about this, Peter. I will say that I have my misgivings, and so does your mom, but you're right that you have changed of late for the better. I guess if Ruth was the catalyst for that, then she deserves our trust as well.\"",
        "The old leather chair creaked as my dad got up and left the room. When he returned, I stood and met him half-way across the living room as he handed me what I had asked for placing it carefully in my palm.\n\n\"I know I haven't said this to you enough, Peter, but I am proud of you. Proud of the man you've grown into and proud to see you taking charge of your life. I know you have to make the decisions that feel right to you, and your mom and I might not always agree with them, but at the end of the day, it's your life. I don't think you've chosen the easiest path, but I do think you're right about the person you're looking to have to walk it with you.\"\n\n\"Thanks, Dad,\" I said fighting back the tears that I figured he would find uncomfortable anyway.\n\nI could tell by my mom's expression she wasn't sold on it, but at least she seemed willing to be open minded.\n\nSusie came over and threw an arm around me, \"Now you just have one tough conversation left to have tonight.\"\n\n\"Don't I know it,\" I said.\n\nRuth was punctual as usual arriving at 6:00 p.m. on the dot. My dad answered the door, and I heard the sound of their laughter in the foyer which made me feel a little better hoping that her good mood would stay with her. My heartbeat picked up when she walked in as it always did. She had her hair down today framing the face that I had come to love more than any other. \n\n\"Something smells good,\" said Ruth sniffing the air.\n\n\"Casserole,\" I replied, \"Mom and Susie are putting the finishing touches on dinner, but I wondered if I could speak to you outside first.\"\n\nRuth gave me a quizzical look but followed behind me as I led her out into my parents back yard.\n\n\"We didn't make it out here when you were visiting last,\" I said as I shut the back door behind us.\n\n\"It's stunning,\" she remarked admiring my mother's rose garden that ran along the back fence and the small grove of fruit trees on the right side of the yard where Mom picked apples and oranges in the summer.\n\nI took her hand and led her to the solitary elm tree that marked the left side of the yard near the high stone fence my grandfather had built himself by hand many years earlier.\n\n\"Growing up Susie and I always called this the 'Grandpa Tree',\" I said laying one hand on the trunk.\n\n\"Sounds like there is a story there.\"\n\n\"There is indeed. A very important piece of family history. See, before my Grandpa wed my Grandma they both lived in the city. When he was courting her, as they used to say, he would bring her for picnics out here in the country, and their favorite spot was under this elm tree. After they married, my Grandpa leased the land from the city and built this house right here, and it has been in my family ever since.\"\n\n\"What a lovely story,\" said Ruth admiring the old tree in a new light.\n\n\"There is a bit more to it than that. When Grandpa proposed to Grandma, he did it right here under this elm tree, later when my dad proposed to my mom he did it in the same place.\"\n\n\"How romantic,\" she said with a smile.\n\n\"I glad you think so,\" I said as my voice started to shake.\n\nMy hands were even worse, and it took me two tries to get the small box my dad had given me out of my pocket. I flipped back the lid revealing the ring that lay inside.\n\n\"This was the ring my Grandpa gave to Grandma, and now, it's the ring I very much want to give to you.\"\n\nI dropped awkwardly to one knee holding the box up to Ruth whose face had frozen in shocked surprise, \"Will you marry me, Ruth?\"\n\nIn all the time I had known her I had never seen Ruth speechless, but she sure was then just staring at me kneeling in front of her.\n\n\"It's kind of customary to give an answer, unless you want to think about it,\" I prodded.\n\n\"Oh...Oh! Peter I...Oh my God! Baby...I'm just...Are...Are you sure this is what you want?\"\n\n\"It's all I've thought about since we got back. I love you, Ruth, and I want to spend the rest of my life showing you how much.\"\n\n\"Peter, I love you too, but...Your parents...\"\n\n\"They gave me the ring to give to you. They're on board with this, so how about you?\"\n\nIt was only a slight stretch of the truth, but I was pretty sure Mom would embrace it with time. Ruth had a way of winning anyone over to her side.\n\nHer hand was shaking almost as much as mine when she reached out toward me.\n\n\"Yes...Yes, Peter...I'll marry you! I love you so much...\"\n\nI got lucky and managed to slide the ring home on her finger on my first attempt. It fit surprisingly well.\n\nRuth held her hand up, the diamonds in the ring catching the last rays of the setting sun.\n\n\"It's beautiful, Peter.\"\n\n\"So are you,\" I said pulling my wife-to-be up against me for a sweet, soft, kiss.\n\nThe sounds of clapping came from behind us, and we turned in embarrassment to find my family watching us from the back porch. Susie ran down toward us and threw her arms around Ruth's neck.\n\n\"Welcome to the family!\" she said kissing her on the cheek. \n\nRuth was crying now, tears of joy thankfully, as my parents joined us and gave her hugs of their own. It was as perfect a moment as I could have hoped for in my wildest dreams.\n\n\"How about some dinner? We don't want that casserole to get cold,\" suggested my dad.\n\nAs a group, we started to head back inside with Ruth and I trailing just a bit behind. I had my arm around her shoulders and stopped her just short of the porch as the others went inside.\n\n\"Is everything alright?\" asked Ruth as she watched me looking around at the sky.\n\n\"It's all good, Sweetheart. I just...Well, I was kind of thinking that the only way this moment could have been more perfect was if it was pouring down rain right now.\"\n\nRuth laughed, and my lady in the rain pulled me into another kiss, the first of many more to come."
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "hot oral sex",
        "mature romance",
        "older lover",
        "older woman",
        "outdoor sex",
        "sexy older woman",
        "young lover",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lady-in-the-rain-ch-02"
}