{
    "title": "Grace Ch. 14",
    "pages": [
        "I spent a busy weekend grading essays and generally catching up on life. Spending afternoons and evenings with Lindsey was amazing, but it was definitely throwing my routines off at school and at home and I had to adjust. It also fueled some incredible fantasies--with thoughts of Grace mixed in of course!--and kept my mind busy all the time. I knew we didn't have a future, but it was an amazing time in my life and I felt lucky, grateful, and horny every day.\n\nOn Monday, Grace passed me in the hallway and gave me a quick smile over her shoulder. I nodded back--the consummate professional--and slowed down so I could admire her ass as she walked further down the hall. Her friend Katie and one other girl were with her, so I had plenty to look at on either side as well. Three young, tight asses swayed in matching black leggings, not one of them showing a panty line to break the symmetry of their curves. Grace's was by far the nicest--it had that perfect heart-shaped profile that I adored. Katie's, though, was small and twitched enticingly with each step. The other girl was a little more muscular and had wide hips that swayed from side to side as she walked, evoking thoughts of an incredible cock-ride as she moved away from me. God, I was SO going to get arrested!\n\nOn Tuesday, I received a text from Grace saying she would be ready to meet with me and that she had a surprise. That piqued my interest, of course, but I sent back a neutral smiley face emoji and a thumbs up, along with a more normal \"see you at 3:00\" part. I also got an email from Lindsey that was another masterpiece of innuendo and line breaks:\n\nDear Steve, (she wrote)\n\nLooking back over the last few weeks, I am very satisfied\n\nWith the work you have done. Grace is very happy, too,\n\nAnd we both look forward to your visits.\n\nHave a great session today--I'll be gone all afternoon\n\nAnd evening\n\nIf that helps your planning.\n\nBest,\n\nLindsey\n\nI chuckled as I typed a professional response:\n\nDear Lindsey,\n\nThank you for your kindness.\n\nI look forward to seeing you in the future\n\nAnd will do my best to make sure Grace comes\n\nOut in good shape this semester.\n\nGratefully,\n\nSteve\n\nI had no idea what Grace's surprise was, but I thought it was worth taunting her mother all the same. The rest of the day passed by normally and I had time at the end to have a snack and a quick iced coffee for energy before I headed out to meet Grace.\n\nAfter I parked, I glanced quickly into the garage to make sure there were no other cars besides Grace's. Once I confirmed that, I crossed the wide driveway and knocked. Grace opened the door quickly and invited me in. She was clearly excited about something--she was all smiles and giggles as we made our way into the kitchen. She did ask very politely if I wanted anything, but I held up the remains of my iced coffee and thanked her as I sat down.\n\n\"So what's the surprise?\" I asked when she joined me at the table.\n\n\"Oh, my gosh!\" she chirped. \"You have to check this out! I worked on it all weekend and during my frees!\"\n\n\"Worked on what?\" I asked as she turned her laptop toward me.\n\n\"My paper! I finished!\" she exclaimed proudly.\n\n\"Wow! That's excellent!\" I replied with a smile. \"Let me take a quick look.\"\n\nI skimmed the paragraphs she had done since our last session. They were completely mechanical and included some giant quotes that took up a lot of space, but they were actually okay in terms of what she was trying to prove. She even had a basic conclusion.\n\n\"Grace--this is very good!\" I said, mentally crossing my fingers. \"You did a great job finishing the argument and using good evidence.\"\n\nShe practically glowed in response and turned to face me. I was struck again by what a beautiful young woman she was--her green eyes were sparkling, and the sensual curves of her lips swept into a wonderful smile. Her dark hair framed her face perfectly and her shoulders were back, thrusting her firm, young breasts forward deliciously. She was wearing her usual black leggings and a v-neck sweater that bared her collarbones and plunged deeply into her cleavage.\n\n\"I worked really hard on it!\" she said seriously.\n\nI did some quick calculations and guessed that Mrs. Day would award her a passing grade even if the second half of the paper was not as strong as the first. It did, realistically, look like work that Grace would do herself, too, which was a good thing in the tutoring world.\n\n\"This is a great surprise!\" I said sincerely. \"Mrs. Day is going to be really happy with you for getting it done by yourself and on time. Do you want to go over it together or just be done with it and move on?\"\n\nGrace's smile changed from pride to a more enigmatic expression and she leaned forward.\n\n\"That was only part of the surprise, Mr. Robertson!\" she said in a low voice.\n\n\"What's the rest?\" I said, my thoughts racing.\n\n\"I finished fast for a reason.\"\n\n\"What's that, Grace?\" I asked, raising my eyebrows and smiling gently.\n\n\"Well, I heard something. Actually, a couple of things.\"\n\n\"About what?\"\n\n\"About YOU!\" she crowed.\n\n\"Okaayy...\" I began hesitantly. \"From who and about what?\"\n\n\"Well...\" she said, suddenly hesitant herself. \"My mom and I spent the whole day Sunday together getting mani-pedis and stuff, and we had some wine when we got home.\"\n\n\"Okaaaaay,\" I said, drawing the word out and wondering where she was going.\n\n\"And we were kind of talking about all the stuff you did with her and how good it felt.\"\n\n\"Jesus Christ!\" I muttered, feeling myself blush.\n\nTheir mother-daughter relationship had some SERIOUS boundary issues!\n\n\"So what are you thinking, Grace?\" I asked, trying to regain some control in the conversation.\n\n\"Well, she told me that you...were playing with her butt.\"\n\n\"Is that something you want to try, Grace?\" I said more evenly while I held her gaze.\n\nShe nodded, but couldn't keep from blushing and looking down at her hands.\n\n\"So what are you thinking here?\" I asked, putting her on the spot.\n\n\"Well...that's kind of why I finished my essay so early.\"\n\n\"What do you mean?\" I asked, trying not to smile. Motivation at last! I thought to myself.\n\nGrace seemed to settle herself and she lifted her eyes to mine again.\n\n\"I know you like my butt, Mr. Robertson. And it felt really good when you...played with me there when we were in my mom's bed. So I did all my work so that we could have some time today if you wanted to...\".\n\nSuddenly, Lindsey's email about staying away all evening made sense. What a schemer! What a horny, irrepressible pair of schemers! My cock twitched with eagerness.\n\n\"Grace--\" I interrupted, \"are you asking me if I want to go upstairs with you and lick your pussy and finger your sweet little 18-year-old ass and make you cum?\"\n\nShe blushed again but held my gaze this time. Then she nodded.\n\n\"I DO want that, Mr. Robertson. I want it really bad!\"\n\n\"And this won't cause any problems between you and your mom?\" I asked cautiously.\n\n\"It was her idea, kind of.\"\n\n\"What a mom!\" I laughed, shaking my head.\n\nI reached across the space between us and took both of her hands.\n\n\"I tell you what, then. I'm totally game. You KNOW how much I love your ass, Grace, and the whole idea is making me really excited. So let's slam down a glass of wine right now and go upstairs!\"\n\nI gave her hands a squeeze and then stood up, drawing her up with me. My lips came down on hers hungrily and my hands went with equal fervor to her ass, grabbing a double handful and lifting her up toward me. Grace squealed a little but didn't break the kiss. Instead, she threw her arms around my neck and her legs around my hips, locking our bodies together. Her tongue darted into my mouth teasingly and then she let go with all her limbs, slipping back to stand on her own again.\n\n\"I'll get the wine!\" she bubbled, grinning with excitement.\n\nIn just a minute, we clinked glasses and both took a gulp while standing at the kitchen island. I needed a drink to settle myself to the task and I wanted her to have a head start on relaxing before I got her upstairs. We stood close together, our thighs touching, as we drank and grinned at each other. She finished quickly and I took a long last gulp to catch up.\n\n\"Pour two more, please,\" I requested. \"We can take them upstairs with us!\"\n\nShe giggled a bit nervously, but did as I asked. I took the refill in one hand and grabbed her hand with the other, giving her a reassuring squeeze.\n\n\"Come on,\" I said briskly. \"First stop, mom's bedroom!\"\n\nShe looked puzzled but came along as I turned toward the stairs. We walked up quickly side by side and went to the doorway. Grace flipped on the light and paused to look at me.\n\n\"Why in here?\" she asked in a soft voice.\n\n\"You said your mom had a vibrator in here, Grace. Where does she keep it?\"\n\n\"Oh...in a gym bag in that closet!\" she told me, gesturing with her glass.\n\nI strode across the room, pulling her along for the adventure. I slid the paneled door aside and looked into the dim space behind. Grace flipped a light switch between the doors and illuminated the whole thing top and bottom. Then she handed me her wine glass.\n\n\"There it is,\" she said, nodding downward. \"I'll get it.\"\n\n\"Put the whole thing on her bed, Grace. Please.\"\n\nShe looked puzzled once more but did as I asked.\n\nI set both glasses down on the bedside table and unzipped Lindsey's stash. Unsurprisingly, she had a collection of sex toys inside, each in it's own bag or case. I took a couple out to admire, watching Grace's reaction. Nerves, excitement, and anticipation flickered across her face with each discovery. I dawdled through the selection, not really wanting anything in particular, but letting her wonder what I was thinking about for her. The truth was that I just wanted to find some lube, but I was enjoying stringing this out and getting her worked up!\n\n\"I think this will do,\" I said as I nodded judiciously over a slender, curved vibrator. \"Let's take this along and some of this as well,\" I finished, grabbing a bottle of AstroGlide Organic.\n\nGrace's eyes widened and she started to put things back into the bag.\n\n\"Leave it, Grace--we can deal with that later!\" I said with some authority in my voice. \"Grab the wine glasses and a towel from the bathroom, will you?\"\n\n\"Why do we need--oh!\" she said, her luscious lips twisting into a smile as the puzzlement cleared from her expression. She looked happy and mischievous and wonderfully aroused.\n\nI waited while she ducked into the bathroom and came out with a rolled towel under her arm. She picked up the two glasses and I turned toward her room with the vibrator and lube safely in hand. Together we hurried down the hall. I stopped and let her open the door, then stepped in behind her and set my two items on the bedside table. Grace looked uncertain, so I took a little more control.\n\n\"Put the wine glasses down,\" I said softly as I took the towel from under her arm.\n\nShe turned to comply, a tiny smile flickering across her lips. I was starting to suspect that she liked it when I bossed her around a little.\n\n\"Now pull the covers down all the way,\" I told her.\n\nAgain, she did as I asked, but this time she looked calmer and happier. She even bent way over to let me admire her ass as she did it, peeking over her shoulder to make sure I was looking. I let her finish and then unrolled the towel, draping its length along the middle of the bed with a flourish. Then I gathered her back into my arms, holding her loosely around the waist and bent to kiss her again. She was a fragrant, quivering armful and I could almost feel her eagerness radiating.\n\n\"Now, Grace, I want you to undress me,\" I whispered into her ear.\n\nShe looked up at me, her eyes wide again, and moved back a little. Her hands came up and although she fumbled a bit at first, she did a good job opening my buttons and tugging my shirt out of my pants to let it fall open. I let go of her waist so as not to impede her, but when she was finished, I pulled her close again and held her against my chest. Her hands slipped inside my shirt and she caressed my warm skin as she began to nuzzle me. I smiled at this development and moved my arms back behind me so that my shirt could fall off. Grace glanced up at me and pulled back a bit, then looked back down and began to open my belt. When that was done, she tugged until the flat hook was free and slid the zipper down carefully.\n\n\"Hold on,\" I murmured as I shifted to one foot and kicked off a shoe. \"This will make things easier for you!\" I added reassuringly.\n\nWhen the second shoe came off, Grace pulled the top of my pants open wide and slid them down to mid-thigh, leaving my boxers on. Her eyes were riveted to the bulge of my half-hard cock and I saw her lips part involuntarily as she knelt to get my pants off all the way. I distracted her by putting a hand on her shoulder for balance and then stepped out of each let in turn.\n\n\"Socks, too!\" I said quietly, smiling down at her.\n\nShe hooked her fingers in each one and whisked them off, then looked back at my cock. I smiled and reached down for her hands, pulling her upright again to stand in front of me beside her bed. Maintaining my smile, I grabbed the bottom of her sweater and slowly lifted it up and over her head. She helped by raising her arms and then dropped them again, shaking out her hair as I tossed the sweater onto a chair. She wore a silver plunge bra that pushed her firm breasts together delightfully, and I bent down briefly to kiss the top of each one. Then my arms went around her back and with minimal fuss I unhooked it and drew the ends forward over her shoulders. She looked a little more uncertain but brought her arms together to help me.\n\n\"God, Grace...you're so beautiful!\" I whispered urgently, trying to ease her nerves.\n\nHer lips curved into a genuine smile again and I dropped to my knees, reaching up to cup her breasts and kiss the valley between them. Her arms went around my head gratefully and I turned from side to side, kissing each firm curve that I met. She shivered with pleasure.\n\nWhen I stopped and looked up, though, her face was serious again. I decided to pace myself, so I hooked my fingers into the waistband of her leggings and drew them down slowly, avoiding her panties. They, too, were silvery gray and the edging matched her bra, so I kissed the line of delicate lace as I exposed her hips and thighs. I felt her belly rise and fall as she sighed happily. Feeling smug, I pulled her leggings lower and she stepped out of each side, using me as a balancing point as I had done to her. When I tossed them on the chair, I heard her speak and looked up, smiling.\n\n\"Socks, too!\" she whispered, her lips twitching.\n\nI chuckled and did as she asked, then stood up. Her skin was warm against me from thigh to belly to breast as I pulled her close again.\n\n\"So beautiful!\" I murmured into her hair.\n\nThat brought her face up to smile at me and I kissed her hungrily, letting her feel my passion there as well as in the hardening bulge against her belly. My hands caressed her back from shoulders to ass as I tasted her sweet lips and tongue. That caused more swelling in my groin, but I didn't want to get distracted, so I broke our kiss and took over again.\n\n\"Face down on the bed, Grace!\" I urged.\n\nShe looked startled, but turned quickly to comply. I grabbed my items off the table while she settled herself and then climbed up onto the bed myself, straddling her lower legs and sitting back on my heels above her feet. The vibrator I set behind me. The lube I opened carefully and squirted into my hand and the warm smell of coconut filled the air as I rubbed my hands together.\n\n\"There's no sense rushing,\" I said softly as my hands began to stroke her calves.\n\nShe sighed and crossed her arms to make a pillow, a small smile twisting the corner of her mouth. My thumbs kneaded her firm muscles briefly and then moved up to stroke across the backs of her knees. I'd always found that to be an erogenous spot for women, and I smiled to myself when I saw Grace's lips part involuntarily. I paused to squirt a bit more lube into my palm, capped the lid, and continued on to her thighs. Her skin was softly tanned and porcelain smooth, even when I pushed hard and slid up all the way to the beginning swell of her ass.\n\nSince I was at the end of my reach, I moved up Grace's body as I oiled my palms again. This time, though, I started above her panties and laid my palms flat on the small of her back. I pressed firmly and circled my thumbs in the dimples just above her ass. I let her enjoy that for a minute and then expanded my reach, turning circles into long ovals that traced the muscles beside her spine. Another squirt of lubrication and I shuffled a little higher, using the heels of my hands to relax the muscles around her shoulder blades before gently rolling her trapezius on both sides and smoothing the tension spots down toward her arms. The bonus of this position was that my knees were on either side of her hips, so my cock lay happily in the cleft of her ass, slipping and sliding on her satin panties. Grace sighed repeatedly with contentment as I rubbed my way down her arms.\n\nI would have been content to stay there as well, but part of me wanted to get to the main event. To accomplish that, I moved back down her body, trailing my hands along her sides, until I was straddling her calves again. I went back to work on her thighs, but this time I didn't stop at the hem of her panties--I straightened my fingers and slid right under them, spreading the warm oil all over her cheeks. Grace twitched in response and then relaxed again.\n\nPalms flat, I kneaded those beautiful globes in opposite directions, thrilled by their slippery firmness. To avoid being TOO obvious, I swiped some oil on the outside of her hips as well, but my attention returned quickly to the center line. That's when the panties became a problem, so I grabbed the waistband with my fingertips.\n\n\"Lift up a little, sweetie!\" I said softly.\n\nGrace's eyes were closed, but she did as I asked. I didn't want to move myself, so I just tugged her underwear down to the tops of her thighs and grabbed the lube. This time, though, I didn't put it in my palm. I let the cool liquid drip across her ass. She gasped when the first drops hit and I saw her tense for a moment, but she got used to it quickly. I made sure to aim the last several drops up and down the line between her cheeks, though, and she squirmed as it disappeared into her warm crease.\n\nNow it was time for some more intensity. With my palms flat on her ass again, I let my thumbs travel up and down her crack, pushing a little deeper each time. Grace's breathing quickened a little and her hips rocked as she unconsciously spread her legs a little more, her body making itself available. When the whole area was slick with coconut oil, I let one hand rest and turned the other. My thumb lined up between her cheeks at the top of the crease and pointed downward. Watching her reaction carefully, I moved my arm so that my thumb split her cheeks apart, bumped over her anus, and continued all the way to the bottom edge of her pussy.\n\n\"Oh God!\" Grace gasped.\n\nWith deliberate slowness, I repeated that trip several times, teasing her again and again just to hear and see her react. Finally, though, I kept going at the end and slid my thumb along her pussy. Unsurprisingly, it was slick and hot already! I smiled again and pulled my hand back up, but the next time my thumb touched her pussy, I dipped it into her as far as I could, then out again and back up over her tight little backdoor. The whole area grew slicker and slicker as her pussy juices mixed with Astroglide. Unfortunately, the thumb-down position was getting a little awkward, so I shifted my hand around and repeated the motion with my two middle fingers instead. They were a tighter fit between her cheeks, but when I pushed them against her pussy, they both slid right in. I curled them inside her and thumbed her anus, which drew a loud moan from my enraptured student. She clearly loved it, so I did it over and over, happily playing with her slippery, sensitive body.",
        "Grace was loving it, but the way she was pushing her ass up suggested she wanted more. Reluctantly, I withdrew my hand and moved my knees further down the bed. Her eyes opened and she twisted back to look at me.\n\n\"Roll over, babe!\" I said with a leer.\n\n\"Okay!\" she replied eagerly, pulling her leg up and flipping quickly onto her back.\n\nI grabbed her panties and slid them down a bit. Grace helped out by lifting her legs straight up in the air and pointing her toes. I laughed aloud at the sexy, limber beauty of the position and slid her panties up while my eyes feasted on the glistening lines of her pussy framed below me. It was an irresistible sight, so I held her ankles together in the air with one hand and lowered myself quickly to take advantage of it. My tongue dove hungrily between the tight line of her labia and plunged into her, bringing another moan of pleasure. Then I withdrew and licked more slowly from her crack all the way to her clit, dragging the tip of my tongue over her anus, her perineum, her lips, and finally her buried little button. I did that several times, and each journey ended with a cry of pleasure.\n\nFinally, though, I remembered why I was up in Grace's bedroom to begin with. I let go of her ankles and her legs came down on either side of my shoulders, spreading her thighs around me. With a smile of anticipation, I settled myself and spread her pussy with my thumbs, licking first along each smooth, succulent lip. Grace's head fell back on the pillow and her hands went to her breasts, toying with them almost like she was teasing herself. My tongue went around her clit without stopping and then dipped several times into her pussy, her taste mixing with the coconut flavor of the lube deliciously. She pulled her knees up and back when I did that, clearly wanting more, and I obliged happily.\n\nSoon, though, I brought my hands up between us in a different way. I pushed my middle finger into her pussy to gather some lubrication, then dropped down an inch and began to nudge her anus. To my delight, she was relaxed enough to open right up and I slid in to the first knuckle. Her thighs twitched at the penetration, but then relaxed and I started licking the full length of her pussy. Every time I brushed her clit, though, I pulled my finger back slightly and pushed in a little deeper. Grace responded by pushing down with her feet and lifting off the bed each time I did that and before long, my whole finger was buried inside her ass, twisting and turning as I lapped her pussy.\n\n\"Oh god yes!\" she moaned breathlessly. \"More!\"\n\nI wasn't sure if \"more\" meant \"do that some more\" or \"give me more fingers,\" but I took a chance. I pulled my middle finger out of her ass, paired it up with my ring finger, and spat on both for good luck before pushing both tips against her ass. Grace groaned more loudly, but with very little hesitation, her backdoor relaxed enough to let both fingers in. I resumed my licking, twisting my fingers in and out of her ass and starting to focus on her clit. As soon as she realized what I was doing, she started to grind her hips up into me.\n\n\"Oh my god, yes!\" she moaned again. \"Please, please, please make me cum!\"\n\nAs my tongue sped up on her clit, I twisted my hand palm up with my fingers inside her and slipped my thumb into her pussy. Grace bucked at the new sensation and her hands left her breasts to grab my hair tightly. Like mother, like daughter! I told myself. And like her mother, Grace began to quiver as her orgasm approached, so I began to suck on her clit and jab at it with the tip of my tongue. My thumb inside her pussy and my paired fingers seesawed in and out in time with my sucking, and her hips rose off the bed as if she was reaching for her peak.\n\n\"Oh fuckk!\" she moaned loudly. \"OhfuckImgonnacum!\"\n\nHer final syllable burst out at the same time the dam burst inside her. Her pussy and her ass gripped my fingers and thumb fiercely, pulsing in time with the waves of pleasure that crashed through her trembling body. My lips released her clit and I held my tongue against her opening, feeling the rush of sweet juices she released as she came. I drank them greedily without sucking too hard or licking her too-sensitive pussy.\n\nWhile my hands and mouth were occupied with her orgasm, my gaze wandered up over the spectacular sight I was part of. Grace's hair was damp with sweat and her eyes were clenched tightly, twisting her normally placid face. Her arms pushed her breast together and each one was capped by a tight, protruding nipple that reflected her excitement. They quivered each time she shuddered, and her orgasm went on and on. Just above them, I saw the tell-tale flush creeping up her neck and nodded to myself in satisfaction for a job well-done. God, I wish I could cum like that! I thought to myself.\n\nAfter a long minute, Grace's body began to relax. As her hips came down to the mattress, I pulled my fingers and thumb out of her and wiped them discreetly on the towel beside her. Then I laid my head on the trembling muscles of her thigh and let my breath tickly her pussy gently. Her grip on my hair relaxed and she began to stroke my scalp lightly. I levered myself up on one elbow and she let go, opening her eyes at last to look down at me. She wore a goofy post-orgasmic smile and she looked happy and spent.\n\n\"How ya doing, there?\" I asked with a smile.\n\n\"Fucking incredible!\" she murmured, crossing her hands over her firm belly. Then she giggled and added, \"I guess I swear a lot when I'm...\" before she trailed off.\n\n\"When you're having an orgasm?\" I asked with a grin. \"When you're cumming?\"\n\nShe laughed with me and agreed: \"Yeah--that's what I mean. I don't know why I'm being all shy when we're lying here like this!\"\n\n\"Everyone is like that,\" I said reassuringly. \"At least at the start. You get over it.\"\n\n\"I hope I never get over feeling like that!\" she said blissfully, taking a deep breath and letting it out with a gusty sigh."
    ],
    "authorname": "outdoorhorny",
    "tags": [
        "mf",
        "older male",
        "younger woman",
        "teen",
        "oral sex",
        "ass play"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/grace-ch-14"
}