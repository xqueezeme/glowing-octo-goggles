{
    "title": "Collateral Ch. 12",
    "pages": [
        "\"I am fully aware,\" Klaus talked on the phone, his lips pursed in displeasure. \n\nJake was eyeing him carefully, as he was getting ready for work, too. The construction site manager wanted him there, first thing in the morning, and Jake could barely wait to go. Klaus had woken him up with so slow and torturous kisses and, at first, he had wanted to just spend the entire day in bed.\n\nKlaus slipped his phone back into his pocket and sighed. \n\n\"What is it?\" Jake asked.\n\n\"Next week, I have to fly to Berlin. Important business,\" the man said with a grimace.\n\n\"Bad news or something?\"\n\n\"Yes.\"\n\nJake just nodded. If the man didn't want to elaborate on that, he had no reason to insist. \n\n\"When will you be back?\"\n\n\"It might take me a few days, a week, at best.\"\n\n\"Uhm, okay. You seem pretty pissed, though. Are you going to lose your company or something?\"\n\nKlaus stared at him and his eyes flickered with amusement.\n\n\"No, nothing of the kind. A mere nuisance.\"\n\nJake frowned, but said nothing. \n\n\"The reason I am so pissed, as you say,\" Klaus moved toward him, \"is that I will have to leave you here.\"\n\n\"No shit,\" Jake murmured, trying to ignore the pleasant tingling sensation in his chest. \n\n\"Yes shit,\" Klaus chuckled. \"I am just starting to see real progress and I find myself in the position of having to give up on pleasure for dull business problems.\"\n\n\"You can take me with you,\" Jake said quickly and he was going to regret it, but Klaus replied right away.\n\n\"I could. But it is too short a time for your passport to clear. Not even I can make things happen so fast. I am yet to build durable friendships at Customs.\"\n\n\"Oh, yeah, right,\" Jake murmured.\n\n\"Disappointed?\" Klaus began to slowly caress his cheeks, looking him in the eyes.\n\n\"More like I have no idea what to do while you're away,\" Jake said, a bit defensively.\n\nThere was no point in showing how much he wanted the man. Maybe he sounded like a clingy girlfriend or something right now. \n\n\"You have plenty of work to do. Plus, you can do me a favor,\" Klaus said, letting his hands drop. \"You can watch your brother for me.\"\n\n\"What? Do you want me to spy on him?\" Jake looked at the other man, feeling a bit annoyed.\n\n\"For his own good,\" Klaus walked in front of the mirror and began adjusting his tie.\n\n\"Or yours?\"\n\nThe blue eyes were scanning him now, like lasers. \n\n\"I don't want to be your pawn,\" Jake crossed his arms. \n\n\"Well, it is not like you have that much of a choice,\" Klaus commented, and returned to examining his perfect self in the mirror. \n\nJake opened his mouth to protest, and then chose to shut it. \n\n\"And before you go into a hissy fit, I am saying this only because I know how much you love your brother. I do not see you as a pawn. But you are my clever insider,\" Klaus chuckled at his own pun, \"and I intend to make use of the information you can provide. I need these streets to be peaceful. Do not think your brother is the only wild card around. He is just one of the many gang leaders I need to pacify. It is not an easy task. You do not wish to help?\"\n\nJake felt a bit manipulated. But the truth was that Diaz was kind of a dick. And his attitude could ruin a lot of things, not only Klaus's desire to make a profit. \n\n\"Okay. But you have to promise me. That you won't use whatever I tell you to have Diaz go to jail or worse.\"\n\nKlaus looked at him with a mix of appreciation and surprise in his eyes. \n\n\"Done,\" the man agreed. \"Now, give me a kiss. We are not going to see each other the entire day and I feel like I miss you already.\"\n\nJake rolled his eyes, but smiled and hurried to kiss the man on the lips. Klaus pulled him closer and deepened the kiss, pushing his tongue inside. Jake sucked at it, and ground his hips against the other. Klaus was the one to break their embrace.\n\n\"All right,\" Klaus said, licking his lips and frowning slightly. \"Let's go down for a light breakfast, and then we should see to our day.\"\n\nJake wanted to laugh, but stopped. The guy was stiff as a board as he walked out of the room, with Jake on tow.\n\n***\n\n\"Jake, you seem like a decent lad,\" the foreman said to him, patting his back. \"You say you finished high-school?\"\n\n\"Yes,\" Jake said, feeling a bit proud.\n\n\"And have you ever thought about learning more? Go to college?\"\n\n\"I wish,\" Jake replied. \"But who's got money for that, anyway?\"\n\n\"Well, you should talk to Mr. Metzger. Seeing that he is determined to make a man out of you.\"\n\n\"Talk to him about what?\" Jake could feel his young heart beating wildly for some reason.\n\n\"To help you through school. You're a smart young man. And Mr. Metzger can definitely afford the expense. You don't want to be just like one of these guys, right?\" the foreman pointed at the construction team. \"Not that it is anything wrong with that,\" he added. \"Just that you're smarter than them.\"\n\n\"Do you think so, Mr. Harrison?\" Jake mumbled.\n\n\"Yes. I'll tell Mr. Metzger about it, but I need to hear from you that you want it. And you have to tell him, too. Take advantage of having such a prominent businessman as a friend at the moment. Mr. Metzger won't stay here forever. Ask him. Get an education for yourself. Don't let it be just a summer job.\"\n\n\"Thanks a lot, sir,\" Jake said. \"I will. If that is what you think.\"\n\n\"Sure thing. Thank you for all the hard work today. Young men like you usually walk with their heads up in the clouds. They only think about having fun or girls. But you're a serious young man. That's rare.\"\n\nJake hoped his blush wasn't visible. At least ten or fifteen or twenty times he had thought about Klaus today, about how the man liked to touch him and kiss him. He was not that much of a serious young man. \n\n***\n\nHe had to dine alone since Klaus was not yet back, and it had been a pretty awkward experience to be tended to, like he was an aristocrat or something. Back to his room, he was still feeling out of place. The thing was he liked Klaus's room much better. He had not felt alone in there. \n\nAfter returning from the shower, he noticed the small package on the stand and took it gingerly. Maybe it was again one of Klaus's strange ideas about entertainment. He sighed in relief when he saw it was only a phone. Brand new and obviously expensive, but nothing weird. He opened it, and immediately there was an incoming message.\n\nI hope you like your new phone.\n\nYeah, of course he liked it. Only that it was way too expensive. Klaus could afford it, but that was not the most important thing. How much of what he was doing was because of what was offered to him? Klaus had mentioned that he wasn't paying him, when talking to Diaz, but Jake would have preferred an honest paycheck instead of expensive gifts. \n\nHe wondered whether he should send a reply. And what to say? Klaus was most probably still caught in some important meeting. \n\nYes, I do. When you're coming home?\n\nHe hit send. Did that sound too clingy or something? On more than one occasion, Diaz had told him to stop being such a kid and quit depending on others. But he could not help it if he was bored. \n\nSoon. Wait for me in my room.\n\nHe read the message with unhidden glee. Why did it feel so nice to converse with someone over short messages? He wondered what to say next. Maybe he could just obey and do nothing else. Temptation was too strong, though.\n\nNaked?\n\nHe was grinning as he walked in the master bedroom and sank on the nice smelling sheets. \n\nSomeone is in for a bit of spanking. I will be home in 10.\n\nNow, he was laughing like crazy. Maybe it was not such a good idea to egg on a guy who was clearly bent on making his ass feel the consequences, but he just couldn't stop. \n\nI'd rather have you undress me.\n\nAll right. It looks like I have to risk a few fines for overspeeding.\n\nJake was holding the phone to his chest, trying to cool down his beating heart. His thoughts wandered to the stern looking man, the perfect businessman who always seemed so in control, and imagined him now, telling Thompson that it was 'kay to ignore a few red lights. \n\nOr maybe, maybe it was all a game. Klaus played it with him, because he was probably bored. In a town like theirs, Jake couldn't really blame him. And it was not like he was overconfident in his looks, but the prospects for a guy like Klaus, were almost null. Plus, as far as he knew, no one was gay around. Well, at least, no one could afford being like that in the open.\n\nAll right, that managed to chill his rapid heartbeat a little. He needed to stop dreaming like an idiot. So, the guy was going to pop his cherry sometime. The thought made him feel uneasy. But a promise was a promise. \n\nHis phone let him know of another incoming message.\n\nYour medical tests came through. You surely know what this means.\n\nJake straightened up. Fuck. He hadn't expected this so soon. Where could he go? Maybe pretend that he was going for a walk, and make a run for it. Klaus was going to bring him back, but at least, he could postpone having his ass destroyed, if for a little while. \n\nHe got up from the bed, determined. The door opened in front of him, and Klaus entered. The man had a strange fire in his eyes, as he pushed Jake back, until the back of his calves hit the bed. \n\nJake chose a method he hadn't used in a very long time. He made puppy eyes at Klaus and linked his hands together. \n\n\"Please don't ruin my ass,\" he said in one go.\n\n\"Oh, but now I have every intention to do that,\" Klaus grinned. \"There is no doubt that it is the only way to make you behave. I had to leave in a hurry because of your shenanigans.\"\n\n\"What? Really? But you said ...\"\n\n\"I do not care,\" Klaus shushed him by placing one finger on his lips. \"Now, while I take a short shower, you better undress and assume the good boy position on the bed. Do not even think about running.\"\n\n\"Or else?\" Jake dared.\n\n\"Or else, I will consider using my belt instead of my hand,\" Klaus said, and Jake froze.\n\nDamn his rebellious streak. That shit was going to burn for sure. Not that Klaus had a light hand. \n\n\"I am just joking,\" Klaus ruffled his hair and began undressing with short, efficient moves. \n\nJake exhaled, making the man laugh. \n\n\"I keep the belt only for special occasions. Just think of a blunder that will really make me lose it, and you will win the big prize,\" Klaus spoke, as he disappeared into the bathroom.\n\nJake could feel his heart now beating fast again. So, this was it. He was going to get it. Klaus was going to fuck him. And he had no time to prepare for that. How was he going to go through this?\n\n***\n\n\"Well. It is rewarding to see that you can follow instructions, albeit using the old stick method.\"\n\n\"I thought it was called the carrot and stick method,\" Jake said, slightly annoyed, but taking in the man's gorgeous body as Klaus moved about slowly, with predatory moves.\n\n\"Here is your carrot, darling,\" the man grabbed his cock and gave it a little tug.\n\n\"Shit,\" Jake murmured. \"How is that thing going to fit inside me?\"\n\n\"One way to find out,\" Klaus cooed and moved behind him.\n\nJake inhaled. Klaus began laughing.\n\n\"I hope you do not expect me to just ram it in.\"\n\n\"Well, that is how fucking works, right?\" Jake said, feeling the tip of his ears in flames, just like the rest of his face.\n\n\"Jake, turn over,\" Klaus took him by his shoulders and rolled him around. \"You will just have to trust me, okay? I had three fingers inside you. You are young, supple, completely healthy. Now come here.\"\n\nHe was pushed on his back and the man came to rest on top of him. \n\n\"Can you feel me?\" Klaus asked him gently and took his right hand in his. \"Here,\" he pressed Jake's hand over his erection. \"This is all because of you. I hardly remember ever feeling so aroused.\"\n\n\"You just ... say that,\" Jake frowned, trying to rein in the trepidations he now felt in his entire body. \n\n\"No. I never lie,\" Klaus kissed him and this time, he let their lips brush slowly, making desire soar. \n\nKlaus moved only to go grab the lube. Pushing Jake's knees up, he began the preparations. Jake wondered if the man could tell how bad he was trembling. The blond grabbed a pillow and pushed it under Jake's ass. \n\n\"We will take it very slowly.\"\n\n\"I'm too much trouble,\" Jake mumbled and turned his face to one side, covering it with his hand. \n\n\"No. You are anything but trouble. You are very beautiful. You have an amazing body. I am honored to be your first.\"\n\n\"Stop it,\" Jake hid his face further into his hand.\n\n\"That, I am afraid, I cannot. I am entitled to collect what is rightfully mine.\"\n\nSleek fingers were at his backside, and he could feel the man starting to work his hole.\n\n\"You're still bigger than three fingers.\"\n\n\"You will feel the stretch, that is for sure,\" Klaus admitted. \"But you will love it. You have a sensuous nature. If you end up hating this, I vow to become a monk,\" he added with a smirk.\n\n\"Good luck with that chastity vow then,\" Jake whispered. \n\nHe could not tell when the skilled fingers left his ass, only to be replaced with something much bigger. It was only a knee-jerk reaction, but he recoiled. Strong hands grabbed his hips and pulled him back in place. \n\n\"I am as patient as the situation requires,\" Klaus spoke, this time his voice a tad strained, his German accent sipping through in full force. \"But please do mind, Jake. I am at my wit's end, here.\"\n\n\"Alright, man,\" Jake agreed. \"Do what you have to. I won't run. I promised.\"\n\nValiant were his words. When the blunt head pushed past his tight ring of muscles, he bit his own hand. But the lube was making things easier, and soon, Klaus began to descend slowly into his body.\n\n\"You see? You are doing great, Jake.\"\n\n\"If you say,\" he whispered.\n\nThe man was large, big in every way, and Jake dared to look up. Klaus's blue gaze was so intense, it was making his heart grow smaller. He spread his legs a bit more, he pushed his knees a bit higher, and there was a glint of gratefulness in the man's eyes.\n\n\"Good, Jake, that is very good.\"\n\nHe had never known he could feel so ... full. There was no other way to describe it. Klaus was a merciful man, after all. He let Jake a few heartbeats to recover and get acquainted with the new sensation. \n\nAnd then, the man withdrew and slammed back inside fast. Merciful? He had to take that back. But the sudden move made him let out a small, strange moan. It felt good. Something in the angle, in the way the man hit the exact right spot, and even how big his cock was, all of that together, it was just right. \n\n\"Ready?\" Klaus grinned and Jake just nodded softly.\n\nThe man grabbed his hips and pulled him towards his own body. He was meeting him half way and each thrust made a strange connection straight into his brain, as pleasure shot from that hidden spot inside his ass, up his spine, and then back to his groin. It was like his own cock was fucked from the inside. \n\n***\n\nMaybe he was too rough for a first time. Maybe Jake deserved better. But Klaus knew, deep inside, that he could no longer control what he felt towards the boy. Never before had he felt so much yearning for another man. He needed sex. But someone in particular? Each one was different, of course. But this, this was a totally new thing.\n\nHe had wanted to take things slowly. He had wanted to reward his beautiful charge with slow love making, to show him how amazing sex could be. Instead, he was now riding the waves of his own passion, making the young body under him writhe and quiver with every thrust. \n\nThe point was: Jake liked it. If his soft desperate moans were any indication, the boy was now floating somewhere between heaven and earth. \n\n\"Fuck, Klaus, do it harder,\" the boy egged him on.\n\n\"My pleasure,\" he grunted and sped up, making sure the bed would rattle with each of his moves.\n\nThe boy had open up so well. He had trembled like a small animal caught by a seasoned hunter in his crosshairs, suddenly aware of its too early demise, but he had yielded, and that kind of surrender was the most beautiful thing in the world. \n\nHe wanted to make sure Jake was the first to come, yet, when he moved one hand to grab the boy's erection, he was beaten to it by hurried hands that just covered the young cock shooting semen on its own. \n\nHe could not recall the last guy he had managed to come hands-free. It was not a premiere, by all means, but still a record worthy of a prize and a place in his personal Guinness book. He was thankful. The boy's tight ass was squeezing him, as the ebbs of his climax were dying down, and he pushed inside harder, faster, one time, two times, three times, and he let go of his pent up desire, something that had been there since the beginning, the first time he had seen the young man. \n\nHe collapsed on the delightful body he had ravaged until now. Jake's rough hands came to rest on his nape and he was drawn into a kiss. \n\nLong minutes after, when they both managed to regain a resemblance of normal breathing, Jake was the first to speak.\n\n\"Wow.\"\n\nKlaus laughed and rolled over, dislodging himself from the boy's body. \n\n\"Well, that is, Jake, how anal sex works. I know you have been wondering.\"\n\nThe young man laughed. \n\n\"That was pretty fucking amazing,\" Jake admitted.\n\n\"I should show some consideration for your ass since you are new to this, but all this weekend, expect to leave the bed only to properly nourish and hydrate.\"\n\n\"No way, man,\" Jake chuckled, his breath still uneven and raspy. \"I think you gave it to me for like a decade or something.\"\n\n\"Nonsense. Wait, do you feel any discomfort?\"\n\n\"Except for feeling like I was just fucked by a freight train? Nah, not really,\" the boy joked.\n\n\"You will not deny me,\" Klaus pulled him closer and kissed him on the sweaty forehead. \"You came a lot.\"\n\n\"Man, you wrung every last drop out of me,\" Jake said in one beat.\n\n\"I must say that you are pretty sturdy. You took it quite well,\" Klaus commented.\n\n\"It was fun, what can I say? But getting hammered like that again? Next time for sure, I'll end up in the hospital.\"\n\n\"You like to tease me so much.\"\n\n\"I'm not!\"\n\n\"Liar.\"\n\n\"Cheater.\"\n\n\"How am I a cheater?\" Klaus exclaimed.\n\n\"You told me those tests were going to be ready soon. Not today. I could have had time to get ready.\"\n\n\"Really? Were you willing to stretch yourself?\"\n\n\"No, not that. I would have made a plan to run away.\"\n\nKlaus laughed and pulled Jake closer to him.\n\n\"You know what would have happened, right?\"\n\n\"Yeah. You would have chased me down. Still worth it.\"\n\n\"I beg to disagree. I would have had you strapped on a, let's say, interesting wooden contraption, and then fuck you senseless. And, of course, you would have been rewarded with a few belts over your ass.\"\n\n\"Eh, dodged a bullet there,\" Jake snickered, hiding his head into the crook of Klaus's shoulder.\n\nSilence followed, as the two lovers lost themselves in thought. \n\n\"I must apologize for being too rough,\" Klaus spoke, breaking the silence.\n\n\"No sweat,\" Jake rubbed his forehead against Klaus. \"I mean, I guess I deserved it. And you weren't that rough,\" he spoke quickly.\n\n\"I must say that you do have this quality of reeling me on and you do cause me to lose some of my well trained restraint.\"\n\n\"Hey, stick to the apologies, man. My ass will surely be sore.\"\n\n\"How was it?\" Klaus began caressing Jake's hair slowly.\n\n\"The best thing ever,\" Jake admitted and cuddled even more snugly against Klaus. \"Did you ... like it?\"\n\nThat again. One of the many little things Jake did, out of the ordinary, out of the blue, different from any rule Klaus knew. His lovers were confident men who needed no reassurance on the topic. Jake needed, and that was making things different, exciting, and a tad too dangerous. \n\n\"You have an ass full of how much I liked it. You should know,\" Klaus smiled.",
        "\"Yeah, I do.\"\n\nThe boy's voice was still a bit unsure.\n\n\"I enjoyed it, Jake. I enjoyed it very much.\"\n\nIt was a real shame he could not convey it in words how amazing it had really felt. Talks about sexual compatibility were to him nothing but small little white lies heterosexual couples used to justify the fact that they really hated each other's guts. Anyone could be trained to respond to a skillful hand ready to take in the reins. \n\nYet, Jake was like a wild colt, skittish but yearning to get caught. And the strangest thing was that he needed no training. His youth, enthusiasm and native intelligence compensated for his lack of knowledge in the area. \n\nIt had been no exaggeration. Klaus was, indeed, thankful, for being the one to take Jake's virginity. He was also going to enjoy initiating the young man in the many pleasures he could experience, now that the door was open. The fact that he needed to leave the following week and spend time away from Jake was bothersome, to say the least.\n\n***\n\nThey took a short shower and returned to bed. Klaus could swear he was seeing things, as he looked at Jake. The boy had a sudden natural shine to him, which was making him even more desirable.\n\n\"I know what I want for Christmas,\" Jake spoke.\n\nGood. At least, when he was going to leave, eventually, he was not going to feel this guilty. \n\n\"Let us hear it, then,\" Klaus encouraged the other to talk.\n\nJake bit his bottom lip and frowned a bit. Then he took a deep breath and talked.\n\n\"College.\"\n\n\"I see,\" Klaus quirked an eyebrow. \"You want money to get an education. That is most laudable.\"\n\n\"Nothing expensive,\" Jake raised his arms in a defensive gesture. \"I mean, I don't know shit about college, but I suppose there are some that are not that expensive.\"\n\n\"Stop playing down my financial possibilities, young man,\" Klaus joked, but stopped seeing how troubled the boy seemed. \"All right, something inexpensive. What is the area you would be interested in?\"\n\n\"I don't really know. Something to do with construction, I guess.\"\n\n\"Engineering,\" Klaus supplied right away. \"Certainly.\"\n\n\"And I don't want you to pay for it. I mean, I will pay you back,\" Jake hurried to speak.\n\nKlaus smiled.\n\n\"And take me the pleasure of doing something for you?\"\n\n\"That's the only condition I ask,\" Jake added. \"Just ... give me this chance. I promise I won't let you down.\"\n\n\"You are quite determined. I like this about it. But did you not know school is hard?\" Klaus teased. \n\n\"I'd rather learn something to help me my entire life. Sure thing, it could be fun if you bought me some car or apartment. But that won't teach me anything. I'd still be nothing but street trash.\"\n\nJake cast his eyes down as he spoke. Klaus chuckled softly. \n\n\"Done,\" he said as he embraced the young man and pushed him towards the bed. \"We will, however, discuss the terms.\"\n\n\"Sure.\"\n\n\"I need you to obey every little word I say,\" Klaus bit one shell-shaped ear and licked it.\n\n\"Ugh, man, I don't know,\" Jake mumbled, but he was already trembling. \"That could mean a lot of things.\"\n\nHe wanted so much to just mount the boy again. He was ready, too. But Klaus was a man who knew the importance of restraint. \n\n\"Well, nothing that unusual, I can assure you. Some toys, maybe a bit of rough play, and, of course, you should behave.\"\n\n\"What toys other than butt plugs?\" Jake blushed.\n\n\"Dildos, handcuffs, rope, a paddle, nipple clamps ...\"\n\n\"Oh, fuck,\" the young man whispered.\n\nKlaus laughed and pulled him into his arms. \n\n\"I am joking. You will be introduced to everything little by little. Actually, I think I will just enjoy a bit of vanilla for some more time with you.\"\n\n\"Vanilla? Like in ice cream?\"\n\nKlaus kissed the boy.\n\n\"Sure, why not? Do you like ice cream?\"\n\n\"Yeah,\" Jake admitted. \n\n\"I will take you to eat gelato then. In Italy.\"\n\n\"Really, man, you should just quit it,\" Jake spoke.\n\n\"Quit what?\"\n\n\"Trying to seduce me. Like you said. There's no need to. I'm not one of those guys.\"\n\n\"What guys?\"\n\n\"You know. Sophisticated. Is that the word, right? You don't have to take me to Italy. You already won.\"\n\nKlaus had only one regret: that he could not pull the young man any tighter into his arms. If he had to tie the boy down with money, he had no qualms with it. Whatever it took.\n\nTBC\n\n*****\n\nAuthor's note: \n\nI would like to thank the people leaving comments here, since I never know if a reply in the comments will be seen by the same readers. Your kind words are much appreciated, ladies and gentlemen. They mean a lot and they provide a would-be writer like myself with the best fodder in the world: motivation."
    ],
    "authorname": "laurasfox",
    "tags": [
        "anal",
        "gay anal",
        "gay romance",
        "gay novel",
        "anal sex",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-12"
}