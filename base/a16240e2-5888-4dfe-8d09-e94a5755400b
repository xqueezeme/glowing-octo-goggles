{
    "title": "\u00c6gir's Wife Ch. 09",
    "pages": [
        "Kirsty stared out over the relatively smooth waters of the North Sea. Even though it was after ten, the sun had still not fully set this far north. Was it prophetic somehow? When she had left all those months ago, it had been dark almost all day and night. Now at the height of summer it was just the opposite. Almost constant sunlight. \n\nIt certainly felt like an omen. Well except for Sven's recovery, which she more than any of them realized might be long and perhaps never complete. But they would deal with that too. Just as they had dealt with so much already. They had weathered life's storms...and now it was sunshine once more. \n\nOf course, she was not na\u00efve enough to believe there would not be more storms to come but with the new resolve and the lessons they had all learned from these, she was confident that they could face those as a family. They would do what it took...whatever it took...and they would come out on the other side of those storms too.\n\nShe inhaled deeply, allowing the fresh, cool sea breeze to fill not just her lungs but her soul with its cleansing and healing power. She felt one of the twins move inside her, but before she could place a gentle hand over the tiny foot to calm her, her sister joined in the fray. Both girls dancing and stretching. \n\nBjorn was at the helm this night. She had never seen him happier. Even she had not fully realized the stress that these past few months in London had placed upon those broad shoulders. Not until she saw the light that dawned in those Kelly-green eyes the moment they had stepped on board of \u00c6gir's Captive.\n\nCaptive? She chuckled into the cooling sea breeze. She was not their captive this time. Not as she had been the last time anyway. But these men had certainly captured her heart. Each of them in different ways. But each of them fully and completely. Different, unique but all with the same veracity. \n\nBjorn...she chuckled as she shook her head. No one would picture a man like that with someone like her. But over these past few months she had come to accept that this man loved her. Just as she was. No diets. No gym. He loved her mind. He loved her heart. And yes, as much as she might sometimes have trouble believing it...he loved her curves too. Running into Greta at the club had proven that.\n\nShe smiled as she lifted her face to setting sun, absorbing its final warming rays as the breeze rustled through her hair, whipping it about her face. She would never be model thin like G but that was all right because she was so much smarter than that woman ever had been. \n\nIn some weird, warped way she owed her a debt of gratitude. By rejecting the life that Mikael had offered for her runways and shoots, Greta had set the course that had driven them to her...just as surely as Bjorn had set one on this boat that would take them home. No, she was the one that had reaped the harvest. The only truly good fruits that woman had ever sown. Monika, her first daughter, and Mikael were all that she could have ever imagined. \n\nShe giggled as she remembered that first night on board this ship. When given the chance, she had chosen Mikael because she had sought an alley in her plans to escape. Oh, Mikael had proven an alley all right. Her rock, the one that she could turn to for comfort, pain, and understanding when Bjorn was battling his jealousy or Sven was...being an ass. \n\nShe sighed as her hand softly rubbed the baby mound. Sven. She still was not certain how to handle that one. But she had a new powerful weapon in her arsenal. \u00c6 \u00e6lske d\u00e6. I love you. How could she not have known? It was not that different from 'Jeg elsker deg.' But she had always struggled with languages. Her ear simply had not made that all important connection. \n\nNo, she might be going back without a solid plan, but the knowledge that Sven too loved her just as his brothers did gave her faith that somehow they too would find a way...over time. \n\nShe closed her eyes and lifted her face as a gentle spray of sea water caressed her cheeks. Home. Homdling as Monika had renamed it. The one place in this world that truly felt like that word to her. Though that probably had as much to do with them as it did the place. \n\n\"We have unfinished business, lilla gumman,\" she shivered as Mikael's whisper caressed her cheek. \n\n\"Things we need to bury once and for all, my beautiful wife,\" Bjorn's echoed in the other ear as hands began to soothe, caress, and ignite her body. There seemed much more than four. Everywhere at once somehow as she tried desperately to catch her breath, to make sense of their words.\n\nMikael had said that her punishment must wait until the babies were born. So what unfinished business could they be talking about burying once and for all?\n\n\"How do I love thee? Let me count the ways...\" Bjorn licked around the edge of her ear. \n\n\"Screw Mama's fancy poetry. These tits are top of my list,\" whispered Mikael as he ground his hard cock against her hip as if to prove the point. \"I can't wait to taste your milk.\"\n\nBut it was Bjorn who moaned into her ear as his hand cupped and squeezed her other breast. \"Fuck,\" was the limit of his poetry skills at the erotic picture that his brother's word seemed to ignite in all their minds. \n\nKirsty was glad that their bodies bracketed her because she was not certain that she could stand on her own at the moment. And that had nothing to do with getting her sea legs again. \n\n\"I thought you were putting Monika to sleep,\" she asked as she turned and kissed Mikael.\n\nHe smiled, \"Mission accomplished.\" He shook his head with a serious frown, \"She is so different since we got on the boat...\"\n\n\"You noticed too? It could be that the seas and rocking of the waves provide the vestibular stimulation....\" \n\nShe began but could not finish as Bjorn rolled her nipple between his thumb and forefinger. She sucked in a deep breath at the intensity of the sensation. Her nipples were most definitely more sensitive. \"And I thought you were driving the boat?\"\n\nThe solid blow to her right butt check brought a gentle peal of laughter, \"You do not 'drive' boats, woman,\" he answered with one of those smiles that showed his dimples to their greatest advantage. She caressed his face tenderly. Yes, the stress of those months in 'civilization' were already draining from her husband. \n\n\"Tonight, we are going to put all those doubts and insecurities of yours to rest once and for all, our sexy, loving, gorgeous wife,\" he smiled. \n\nShe shook her head, but stifled the girlish giggle. Her husbands might be a bit late with this one. Never had she felt as comfortable...as desirable...as beautiful...in her skin as she did sandwiched between these two amazing men. And certainly, never so loved. But she was not telling them that. Not and spoil this fun they had planned. \n\n\"Then maybe we should take this somewhere more private?\" She teased as she kissed each in turn and took their hands, leading them towards the stairs. \n\n***\n\nMikael smiled as he obliged his wife as she pulled them both through the ship towards the captain's cabin where it had all began. It was not just his daughter or brother that had changed from the moment they stepped on board the ship. Their wife had too. \n\nHe rifled through the half a dozen languages he knew searching for the right word...inhalt, contenu, vrede, paz, and all their English variation. None seemed to quite cover the woman who stood before them. Contented. At peace. Confident. Whole. \n\nHe was certain her pregnancy had at least something to do with it. At trite as it sounded, Kirsty truly did glow. Her fair skin shone with health. Her cheeks were the perfect ruddy rose that no cosmetic could match. And those always full lips begged...\n\nWith a gentle tug to her hand, he drew them to a halt just outside the privacy they sought. He drew her against him as he softly brushed hair back from her face. He loved the way that her top teeth chewed her bottom lip nervously and how large those green eyes got as they stared up at him. \n\nHe could almost feel the tension and need strumming through her ripe body. It had been hell last night with her pressed between them in that too tiny bed. This one was no better but at least they would be free to lovingly explore every centimeter of their wife's body together. It was not a pleasure they had shared since the night these little girls were conceived. And though they were still one brother short, he was certain that somehow he and Bjorn could manage. For now at least.\n\n\"This time you enter this cabin as our wife, not our captive. Do you do so of your own freewill, lilla gumman?\" He held her gaze and his breath as the moisture clouded those green fields. The muscles in her throat constricted, moving up and down as she swallowed. \n\nShe nodded her head slowly, but still he restrained her. A simple nod would not suffice this time. The path that lie ahead would not be easy. He better than any of them knew that. He was after all the one who had borne the brunt of their mother's travails as she struggled to truly accept her fate. \n\nCould Kirsty do so more easily? He certainly hoped so. He knew that he and Bjorn would do all in their power to make her load as light as possible. But he had learned the hard way that relationships took both people trying. In their case, everyone. After what Kirsty had revealed, he was even more confident now that Sven too would come around. But she was the cornerstone. \n\nIt was not chance that had lead their mother's to adopt the Norwegian name Petrine. The rock. After her trials in the fire, she had like her mythological Phoenix emerged from the ashes of Rachel as just that. He was not fooled though. He knew that was a choice, her decision.\n\nAnd he was forcing it upon their wife now as he waited for the words that might determine their fate. He held his breath and prayed to every god in Asgard, but especially to her...Freyja. The goddess of love, fertility...and battle. \n\nTheir life would always be a war against Nj\u00f6rd and R\u00e1n to eke out an existence from their seas. It was the history of their family and why only a true shieldmaiden of Freyja would do as the bride. He knew that Bjorn had chosen well, better than he or Sven would have. \n\nThe only question was...did she? Did Kirsty understand her power now? And was she ready to stand into it? He waited.\n\n*** Kirsty felt the knot tighten in her throat as surely as if it were one of their hands. She fought back tears at the enormity of his words. 'Their wife.' But it went so much deeper than that. So much more to it than that simple four-letter word could express. \n\nShe chuckled that Mikael's thoughts had so closely mirrored her earlier ones. Had she ever truly been their captive? All those weeks of messages and challenges that they had shared. That spark which ran up her arm the moment that Sven had touched her elbow and drew her through that turnstile.\n\nInto her destiny.\n\nThere was no doubt now. These men, these rustic fishermen who battled upon the precipice of time to save a way of life that had sustained their family for centuries, to push back the edges of modernity itself. They were her future. Their battles hers. Their Fate her own. \n\nAnd their children's. Her hand covered her burgeoning stomach as she looked from the depths of silvery clouds to the deepest green meadows. Her husbands' eyes told her all that she needed to know.\n\nBjorn and Petrine had used the phrase 'the one.' But somehow she had never felt worthy of that. \n\nNot until this moment. She was the one. Their one. The shieldmaiden and partner that Fate, Freyja, and all the gods and goddesses in the universe had created for them. For this time. \n\nAnd screw G's perfect body and haughty attitude. She was exactly what they needed...and wanted. The pleading and expectant looks in those silver and green eyes told her that. She would fight Greta or any other woman that thought they could come between her and her men. \n\nShe inhaled deeply as she reached up to caress Mikael's bearded cheek. She turned to Bjorn and grasp his hand in her other one, \"Yes. Of my own freewill. As your wife. Your partner. Your shieldmaiden.\" She held Bjorn's gaze as she finished, \"Your One.\"\n\nShe felt the tension drain from both their bodies. She simply could not resist, \"Now can we please go fuck. I'm dying here.\"\n\nBjorn shook his head as his free hand made firm contact with her bottom, \"Such a potty mouth will get you punished, sweetheart.\"\n\nMikael though simply chuckled, \"I don't know. It sounds like a damned fine idea to me, brat,\" as he pushed open the door to the cabin.\n\n***\n\nBjorn sighed as he felt the tension of all those eternal months of captivity within the civilized bonds of the city finally drain from his body and soul. It was the final piece...though he had wanted to take his brother to the fighting fields for pushing her to it so soon after their ordeal. \n\nNonetheless her answer in the end had been complete perfection just as she herself was. Always had been to him. Bjorn knew that theirs was a love that would only deepen and grow stronger overtime, just as he had seen with his mother and uncle. His father too...in Stig's own way. \n\nThoughts of the man inevitably led to his other son...the one he had always favored. Sven. He was not certain how, but Bjorn knew that he must learn to forgive and trust his eldest brother. To build bridges with him as he had re-built them with Mikael. \n\nIt was not just for her sake either. If the fishing business were to survive, to continue for their girls, then they would have to put old hurts and insecurities aside and come together as a family...perhaps like never before.\n\nBut right now, this night that was not the type of cum together that he had in mind as he watched her sashay that spankable ass through the door to the cabin where it had all began. He shook his head and chuckled as Mikael held open the door for him, \"Age before beauty, big brother.\"\n\nHis brother boxed him lightly upside the head as he had done when they were children, but the huge grin on his face told him it was only play before Mikael even opened his mouth, \"Any other time, I would argue the point, but since you are being so generous I'll let that one pass. This time, kid.\"\n\n\"No more fighting,\" came her sexy reply from the bed. The woman was already curled up in it and reaching for the hem of her lose fitting dress.\n\n\"Stop...\"\n\n\"Don't you dare, elskling.\"\n\nThey looked at one another and burst out in laughter. It seemed their new found unity began with undressing their wife. Mikael slipped past him into the cabin and Bjorn looked around a final time. \n\nIt was probably too much to hope that Sven had kept the gag ball in the toy box. So it might become necessary to shove her panties in Kirsty's mouth. He had no intention of waking Monika...or Georgia and Kurt with the sounds of their lovemaking this night. He wanted her all to themselves.\n\nHe frowned. Since when had he learned the joys of sharing his toy? As the youngest, he was in some ways more like an only child. He had barely been out of toddlerhood when Mikael had joined Sven and their fathers at sea. \n\nIt had been just him and their mother for long periods of time...and he was coming to realize just how much that might have tainted his views of family. But she changed that. Just as she changed so much else. \n\n\"Are you joining us, brat?\" Mikael teased as he came up for air from kissing their wife. His hands had already slipped beneath the bottom of her dress and had it bunched about her thighs to reveal that they would need a Plan B for shutting Kirsty up. \n\nShe was not wearing panties this day. Bjorn chuckled, so that was the way of things. Back to the no panties rule that had somehow gotten abandoned in their 'civilized' life. He could certainly live with that one. \n\n\"Go ahead and finish stripping her without me. I am just going to have a look in the toy box and see if the Old Man left anything good in there,\" Bjorn teased them.\n\n\"Surprisingly, I had very little I needed to restock before making this trip,\" Mikael replied. \n\nBjorn's surprise must have registered on his face, because his brother paused as he pulled the caftan style dress off over Kirsty's head, \"What did you think I would forget the important shit? Even in the rush? The gag ball is on top in the corner.\" \n\nHis brother's hand came down hard on her outer thigh and their wife jumped, letting out a high keening squeal. \"I'm going to make damned sure we need it this time.\"\n\nBjorn shook his head as he turned back to the chest that sat at the foot of the bed. He smiled as he remembered how she had greeted him that first night...totally naked and with every toy in the box laid out for his use. \n\nDid she realize how hard it had been to restrain his urges then? But he had needed so much more from her than she was willing to give then. He was glad that he had had the will power and wisdom to choose the other path. To win her trust and her love before he took her body. \n\nHe knew that she loved his brothers, though he was still not completely comfortable with why or how she could have feelings for Sven. But he knew too that the bonds of friendship that they had begun to forge that night in this cabin were what had carried them through the past few months. As trying as those fires had been they had come out on the other side wiser and stronger as a couple and a family. \n\nAnd for the first time in their almost year of marriage...he was no longer jealous of the bonds she shared with his brothers. Because he knew the strengths of their own. And finally understood what Petrine had always taught him. The trick was to love them all the same but differently. \n\nTheir wife had seemed to know that one instinctively. Even when he and his brothers were stumbling in the dark, trying to find their ways to her, she had known. \n\nLike the ancient lighthouses that their ancestors had followed when it was too dark and stormy to see the stars, her love had been the beacon that had drawn them all home to her, that had forged bonds of brotherhood deeper than ever before, that had re-created a family out of broken pieces of men who had drifted apart on the turbulent waters of life.\n\nThey owed this woman so much. And he was going to spend the rest of his life repaying her for the gifts that she had given them all. Even if there were battles still to be fought. For the first time, he was certain that they would win. Together. \n\nHe found the gag ball, the rope, and his brother's nasty looking tawse. He closed the lid of the toy box and opened his bag that sat on the floor next to it. He pulled out his favorite toys. The sons of Odin floggers. \n\nHe turned back to find a naked Kirsty rubbing against Mikael like an alley cat in heat, begging, and pleading as she practically tore his shirt off him and started to work on the button on his jeans. \n\n\"Hand me the ropes, kid,\" Mikael pleaded with mirth dancing in his eyes. \"The woman has no patience. Good thing Mr. High Protocol is not here or she would be standing naked in the corner for certain,\" he teased as he laced his fingers through her long red hair and drew her head back for another kiss.\n\nBjorn wondered just who would have the upper hand this night. It might be two against one, but something told him that would not stop their wife. \"I blame you, big brother. She is never this bratty with me.\" \n\n\"And you, Kirsty, stop topping from the bottom or we can try orgasm denial. For the whole night,\" he was barely able to hide the grin that would tell her it was only a bluff. There was no way he was denying them the pleasure of making her cum over and over and over again this night. They needed it probably just as badly as she did.\n\n***\n\nGeorgia huddled in the top bunk as Monika slept in the lower one. Tears filled her brown eyes and trickled down her cheek as a shiver ran from the top of her dark head to her toes. ",
        "She waited for the cursing and accusations that always followed those startled whelps of pain. But none came this time. If anything, she would have sworn it was laughter she heard from behind the closed door at the end of the hall.\n\nOf course, once they had taken to sea and Monika was safely in the care of her father, exploring the ship, Kirsty had tapped gently on the door. She had begun with reassurances that they would not allow the abuse to continue. Though Georgia was not certain how they could possibly keep such promises once she returned to London in a couple of months. \n\nShe swallowed back the dark cloud of fear that she had lived with for as long as she could remember. As much as she needed this time away to come up with some plan, beyond suicide, that might offer her and her mother a way out, she very much feared it would only fuel her father's rage and abuse.\n\nYes, she was almost certain that was laughter coming from the end of hall. She felt her skin heat with a blush as she remembered what else Kirsty had come there to tell her. If three husbands were not enough of a shock, then BDSM, especially the masochism part was. \n\nFor someone that had lived with pain for so long the very idea that other people might like it, find pleasure in it, was mind numbing. Sure, she had heard about that book, who hadn't? But to realize that she actually knew people like that was astounding. \n\nShe still was not certain what to think. But she knew that Kirsty and Bjorn were good people. That they loved that little girl and one another. And now she owed them so much...all of them. So, for now, she had decided to simply suspended judgment and practice the tolerance that she believed was so important. \n\nYes, it was most definitely laughter. She sighed with relief and tried to get back to sleep. But after tossing and turning for several moments, she gave up and climbed from the bunk. She found her jeans and put them on. \n\nShe considered adding the bra, but honestly it hurt the bruises across her back and shoulders from Papa's belt buckle. Besides it was not like her tiny A-cups really needed such things. She even forswore her trainers. The cold, rough wooden deck would feel good against her bare feet. \n\nWith a final glance to make certain her charge with sleeping soundly, she snuck from the tiny cabin and pulled the door closed securely. Monika had not yet mastered opening them even if she should awaken unexpectedly. Besides she would not be gone more than a few moments. Just a breath of fresh air to clear her mind and help her sleep.\n\nShe inhaled deeply, drawing the brisk, musky ocean breeze not just into her lungs, but to the depths of her soul. Or she tried to anyway. She desperately needed something to cleanse away the dark foreboding that had lived there for so long. \n\nIf this was to be that new beginning she had sought for so long, then she knew she must begin there. As Roz had told her, she must find some way of changing how she saw herself and the world. Otherwise like so many others she might fall into the cycle of violence and abuse. That was not the future she wanted. \n\nShe clasped the railing and lifted her face to the sky as the breeze caressed her face, whipping her hair that was loose for a change about it. She felt the sting of the salty sea spray mixing with its twin as her tears slid down her cheeks. \n\nShe was free. For the first time in her life, she was honestly free of the spectre of domestic violence that had colored her world. While it might only be a temporary respite, it was her chance. Perhaps her only one to come up with a plan that might offer true hope of a better future.\n\nOnce more she considered the offer that Roz had made as they played in the park with Monika. She had a huge house all to herself since her husband had left. The woman had offered her a room there completely rent free. She could use the company she said. \n\nBut two things bothered her about that plan. First was the fact that it would be easy for her father to follow her from university back to the house. She might inadvertently put her new friend in danger. It was something that had initially bothered her about her job with Kirsty and Bjorn. Except that the man had looked like he could more than defend himself and his family if her Papa did cause any trouble. \n\nSo, she had taken the calculated risk in order to save up money for their eventual escape. Except it had not worked out that way. Instead of saving the money she had given her, Mama had merely passed it along to her Papa, inevitably fuelling more drunken rages.\n\nWhile Roz was no shrinking violet like her mother, she would hardly stand a fair chance against a man the size of Papa, especially if alcohol were involved. No, she could not take that risk. Not without telling the woman, who had extended her a hand of friendship, the whole truth. And that was something she had never done. Not even that morning with the doctor, Kirsty's father.\n\nShe swallowed back the fear, guilt, and self-loathing that those thoughts always brought. She forced her mind away from that dark, dark path. She knew that one day she would have to deal with it. But not now. Not until she had come up with a plan to end the pain. Not until she was safe. As safe as damaged goods like her ever could be anyway.\n\nThat was the other thing that bothered. Her unexpected reaction to the woman. Of course, she knew about lesbians. Though she might have been born and even raised in a traditional culture that frowned upon such things, she had lived and been educated in a liberal, cosmopolitan area. She had even had a friend in secondary school who had come out as gay. \n\nWell, he had been her friend until Papa found out. She might have found some way of hiding their friendship even after Papa 'disciplined' her for it, except for his threat. 'Bad things happen to people like that. You stay away from him.' After that she did not dare endanger anyone else.\n\nBut accepting homosexuality as a natural part of life and the odd feelings she got from the other woman's casual hugs and caresses were two different things. She was almost certain the woman meant nothing by them. After all she had seen her hug Kirsty every time they were together...and squeeze her hand as a show of support too. \n\nThe woman was from another culture. Perhaps such things were just common with her Afro-Caribbean culture. It was not though to her. Georgia could not remember a single embrace from her own mother, though she had at times taken to hugging her instead. And other touches did not bear thinking about...she shivered and it had nothing to do with the cooling night air. \n\n\"Here. Take my coat,\" said a deep, masculine and heavily accented voice.\n\nGeorgia turned to stare up into the handsome face of the young man that she had seen earlier when they came on board the ship. He rivalled Bjorn in both size and sheer masculine beauty. Though he was not as old, closer to her age she would guess. The guy was pretty noticeable...at least if you were a female.\n\nShe frowned, since when had she ever noticed a man? Any man? Oh, she had had offers, but not once had she ever been tempted. This one though...was doing things to her. He had from that first furtive glance they had shared as she came on board that afternoon. \n\nNow she was wishing she had endured the pain of her constrictive bra as her nipples strained against the thin material of her t-shirt. His quick intake of breath as his fingers casually brushed hers when he passed her the much too large fleece jumper told her that he too was aware of this thing.\n\nHer throat tightened as he took a step closer to her. He towered over her, though at barely more than five feet, most men did. She bit her lower lip until she tasted the coopery flavor of blood where she had reopened the wound on it. \n\nHe drew something from his back pocket and began to dab at it, \"Stakkelse lille.\"\n\nIt took Georgia a moment to realize that it was a clean handkerchief. Who even knew such things existed anymore? Let alone delicately embroidered ones like this. It was so out of keeping with the man's size and rough work. Yet oddly comforting...and intensely frightening at the same time.\n\nThe knot in her throat doubled in size. Her heart pounded in her own ears so loudly that it drowned out even the waves crashing against the boat. She could not breathe. She honestly could not. \n\nShe knew the feeling well it was that same panic that came just before her Papa's blows began to fall. That moment of utter terror before she could disconnect and make her way to her happy place by the babbling brook that she had created in her mind. \n\nThis time was different though. This was not Papa. She was not trapped, powerless and helpless. She had choices. As her psychology course had taught...fight or flight. This time with this man she had that power. \n\n\"Excuse me. I have to go,\" she said even as she drew away and made a run for the safety of the cabin she shared with Monika. Of course, he would not follow her. If he did, both Bjorn and this Mikael that Kirsty had explained was one of her other husbands were just down the hall. But something told her this man was not like that. Not like Papa...or his friends. \n\nShe did not remember the brief journey to her bunk or even removing her jeans and tossing them on the floor. Yet suddenly she found herself huddled in the corner of her bunk with that crisp hankie pressed to her lips. \n\nIt smelled of the sea...and him. It was not an unpleasant sensation. Neither were the tingles that raced from her brain to the nipples that were still tight and too sensitive...then further. There. The place she did not like to think of. Her dirty place. \n\nAll of the psychology courses in the world did not seem to help. The more she understood her feelings and why, the more powerless she felt to actually change them. \n\nSo why was this happening? How was it that after blocking it all for so long, after the numb and barrenness, after swearing that she was simply asexual...after all that, how was it that in the space of less than two weeks she suddenly found herself sexually attracted not just to a man...but a woman as well?\n\nShe shook her head as she pressed the scrap of cloth between her breasts, letting the tears flow as they would...a flood. A tsunami. A lifetime of holding it all in, like a dyke suddenly burst. She fought to keep it as quiet as she could, finally pressing her tiny fist against her swollen lips as she tasted that coopery blood once more...and him on the handkerchief pressed tightly against them.\n\nShe still had no answers. No plans. Nothing as she drifted into slumber. But for this one night and a precious few more to come she was safe. That was all that mattered. For the moment.\n\n***\n\nKurt huddled outside the doorway as he listened to the girl crying. It tore at his inside. Made him feel powerless, helpless, impotent. He stifled a chuckle. \n\nWell, maybe not that one. Not around that tiny slip of femininity. This time he did not bother to hold the chuckle inside. He supposed he could put that worry aside. If nothing else today had proven one thing, despite what his brothers might think, he was no sissy. He most definitely was not gay. Not if the painful erection in his jeans meant anything at all. One look at that one was all it had taken to ally that fear. \n\nQuestion was...what was he going to do about it? Especially as the girl seemed practically terrified of him. The girl? He tried to remember her name but he did not think Mikael had said. Merely 'my daughter's carer.' But he would find out tomorrow. Along with the rest of her story. He was determined on that. \n\nAs determined as he was to prove his brothers wrong. He was meant for the sea. Njord's blood ran in his Norse veins every bit as much as it did in his brothers...or his cousins. He would show them all. Beginning with handling this first night at the helm. He would not let Mikael down...or Sven. He owed them that much. And himself even more.\n\nHe shook his head as he heard the hiccups begin. He knew that meant the tears were coming to an end. He should get back to the bridge. He should not have left at all. But when he had seen her staring out across the rails so forlorn he could not resist the urge just to check on her. \n\nReluctantly he turned back towards the stairs and the deck. He promised himself that he would speak further to Mikael about her on the morrow. Those bruises that he thought he had seen as she came on board were much worse up close. \n\nAs the youngest of five brothers, he had worn his share of them until he had begun to shoot up at fifteen. Now he was able to hold his own. Obviously, she had not been...and that bothered him. More than it should perhaps, after all he did not even know the girl.\n\n***\n\n\"Damn it, both of you, stop playing around. I want you. Screw that I need you. Both,\" Kirsty pleaded looking back and forth between her husbands.\n\nOnce more Mikael and Bjorn blanketed her, surrounding her in their strong arms, wandering hands and hot kisses as they passed her back and forth between them. She was moaning and rubbing against them as her need grew exponentially with each heartbeat. \"Please,\" she whimpered when they let her up for air.\n\nBjorn smiled that little boy with a new toy grin as he rubbed his hard cock against her thigh, \"Pleasure, my princess?\"\n\nMikael answered with, \"Or pain, my sweet slut?\" His hand coming down upon her bare ass with a loud smack that sent both racing at the speed of light along nerve endings to her brain that was just wired for it all.\n\nLike she could decide? That choice was like asking her to choose among her three girls...impossible to make. \n\nHer whimper must have been the only answer they needed because when she turned to tell Mikael to go to Helvetia, his eyes were dancing like a bead of mercury on the floor after you had dropped an old-fashioned thermometer. \"We know...both. But, brat, on our terms and in our time.\"\n\nTheir depths darkened and she watched his Adam's apple bob up and down his throat. She heard the emotion as Mikael whispered, \"You are not the only one that needs, lilla gumman. And what we need right now is not our strong shieldmaiden. There are plenty of battles for her ahead. At our side and not against us.\"\n\nBjorn gently turned her head until she was lost in those green meadows, running through those expressive eyes carefree like a little girl in spring, \"What we need, sweetheart, is your trust. Your submission.\"\n\nHis voice too cracked, \"I know we let that slide so much in that place. And I was wrong. I'm sorry. This is more than games or role play like it is to some others. This is who we are. Doms.\"\n\nMikael kissed the side of her face as he drew her back against him, \"And you, elskling, are the perfect little sub.\"\n\n\"Perfect for us, our One,\" Bjorn added as he leaned in to nibble at her other ear. \n\nKirsty could not find words. Even if she could, she could not have forced them past her lips as tears, happy ones, ran down her cheeks. She cupped theirs heads in her hands and held them both against her for a long moment. \n\nShe kissed first Bjorn...the one who had chosen her. The one who had never it seemed had any doubts. He had believed in her. Known that she was what they needed. Had faith in her when she had none in herself. He was the one who had first won her trust when he placed her tablet in her hands, knowing that she could destroy them all. \n\n\"I love you,\" she whispered softly against his warm lips. She drew back to see those green eyes glistening with unshed tears.\n\nBut she was not done yet. She turned her head to Mikael. The man before her bore only a fleeting resemblance to the one that she had chosen that first night in hopes of swaying him into helping her to escape. Oh, he had become her biggest ally. But not in escape. \n\nThey might credit her with the transformation in this man, with bringing him back to the fold. But she knew the truth...no woman can change a man. He must want to change...for her perhaps. Certainly, she understood the desire to grow, to change, to be more...to become the woman they needed. But in the end, it always came down to changing because it was what you wanted. \n\nAnd he had...so completely that it virtually stopped her heart. Bitterness had turned to happiness. Betrayal to trust. Anger and resentment to leadership. And insecurity to brotherhood. \n\nAs Petrine had taught her...love them all the same and differently. It was a lesson she was just beginning to fully grasp with her daughters. She knew it was wrong to have favorites and she did not, but she knew too that the bond she shared with this man was different than his brothers. \"Jeg elsker deg.\"\n\nAnd though their circle was not yet complete, a thousand miles and an ocean stood between them. Though she knew that he could not read her thoughts, nonetheless she completed the triumvirate with a silent, '\u00c6 \u00e6lske d\u00e6.'\n\nShe used the element of surprise to wiggle and push out from between their hard bodies. She was glad that Mikael had finished the job of undressing her as she fell naked to her knees at their feet. She was certain that her pregnancy made the motion far less fluid and graceful than she would have liked. Sven certainly would have trained his subs better. But she would not have it any other way.\n\nShe dropped her head towards her chest as she spread her knees as far apart as she possible could. Her pregnancy precluded her bending forward on the floor and even folding her arms behind her back drew uncomfortably upon muscles and ligaments that were already stretching to accommodate her expanding waistline. \n\nIn the end she settled for placing her hands palms up on her knees as a sign of her submission. She was breathless not just from the exertion, but more so from the desire and anticipation coursing through her whole body from toes to the roots of her hair. \"Yes, Master. Yes, Sir. Yours to do with as you wish.\"\n\nShe was glad that her head was down because she could not stifle the satisfied grin at the quick intake of breath she heard from them both. \n\nOh yes, this lifestyle was most definitely misunderstood. Doms were not tyrants with some deep psychotic need for power over another human being. And subs most definitely were not powerless victims. \n\nIn some ways, this partnership was the ultimate form of equality. Both needing something and in turn giving back. Facultative symbiosis as scientists would call this relationship that was not absolutely necessary but gave each a greater chance of survival. Or happiness in this case.\n\nIt was her turn to benefit with a quick intake of breath as Mikael's hands wove through her hair, tugging firmly until she stared up into those warm silvery depths, \"As it should be, brat.\" They twinkled with mirth as he unbuttoned his jeans and released his hard cock. \n\nKirsty sighed as she leaned in to kiss the head. Her tongue swirled like a kitten lapping at cream and she was just as satisfied. But Bjorn was not to be denied either, releasing his cock from the confines of too tight jeans. She turned her head and smiled up at him before swallowing half of it. \n\nFor several long minutes she took turns contentedly sucking first one then the other. She stifled a girlish giggle at the thought of how hot a porn it would make. Except of course that this intimacy was about love. \n\nShe would have been more than content to finish them both off this way. Some odd desire to have them both come over her tits and face. But they were not. \n\nMikael held out his hand and helped her clumsily rise to her feet. She blushed but it was not necessary as he bent and kissed her. \"Beautiful,\" he whispered causing her blush to deepen. \n\nShe did not have the opportunity to protest though. Bjorn quickly distracted her with pain as he pinched her nipples firmly between his fingers, tugging and pulling as if sucking. She was completely powerless to stifle the pleading moans that rumbled from deep in her chest.",
        "She bit her lower lip until she was afraid it would bleed. She knew that in this mood her pleas and most definitely any demands would only be met with further resistance from her husbands, delaying her ultimate pleasure...and theirs. No, this too was submission. Perhaps the ultimate. Allowing them to set the pace.\n\nEven if it was torturously slow. While she did manage to quash those pleas and demands, she could not hold back the whimper of need as her tongue warred with Mikael's. Her chest jutted out, seeking with those unspoken pleas Bjorn's touch. \n\nA hand landed firmly on my bottom as Bjorn's teeth sank into her ear lobe, \"Greedy little cunt.\"\n\nHer eyes flew open in shocked surprise. Those words so unlike this husband that she just had to confirm she was not so lost in the feel of them that her addled brain was playing tricks upon her. \n\nMikael broke their kiss with a guttural chuckle. \"Tut, tut, lilla gumman.\"\n\n\"Yes, I suppose if she cannot be a good girl...\" Bjorn began.\n\n\"Then we must do this the hard way,\" Mikael finished as he reached for something at the foot of the bed. \n\nKirsty did not even see what he held in his hands, but she felt it. The thick, roughness of the rope as Bjorn gathered her hands together in front of her. Her throat tightened at the memory of that long ago afternoon...this was so like the way Sven had first captured her. It was her chest that tightened then as she fought back tears. Once again a silent pleading rose to Asgard for her other husband...her first. \n\nBut they did not give her time to contemplate these maudlin musings. Bjorn pressed her back towards the soft, enveloping comfort of the thick duvet and pillows. Mikael raised her hands above her head, securing the rope over the hook on the wall above the bed. Oh, yes, she remembered that one well.\n\nThe two of them worked together to ensure that she was both comfortable and well secured. Then she felt something else cold clasping around her ankles. Her eyes widened in shock as she realized that somehow her husbands had switched places. Bjorn was now leaning over her with that grin she loved so much and Mikael was...\n\n\"Oh, my sweet goddess,\" she whispered as she watched him clamp the final cuff on the spreader bar into place around her ankle. \n\n\"You do not have permission to come,\" Bjorn's green eyes twinkled with mirth as Mikael's darker head disappeared between her almost painfully spread legs. The only thing missing was...\n\nBut before she could even complete that thought she felt the cool prick of the blade. Against the underside of her breast? \n\nBjorn's grin widened as he lifted his blond head to stare down towards the foot of the bed at his older brother, \"You are right. Knife play does have its...\" He paused for a long moment, turning back to her, \"Its attractions.\"\n\nMikael chuckled. Against her clitoris. Her whole body tightened. She was on the edge already. How could she not be after so long without them? But the feel of the knife pressing into her skin, raising tiny pink lines as it circled round and round her full breast, that smile and the top of Mikael's head buried between her thighs as he once more edged her to the point of insanity told her that this night was just beginning. \n\nWhat was a girl to do? The only thing she could...submit. Just lie back and enjoy the ride. \n\n***\n\n\"I am not going,\" she heard the raspy crack in his voice even before she opened the hospital door, but not even that prepared her for what she saw when she did. Even though Mikael had tried to warn her, she was not prepared for what she saw among the sterile white sheets of that hospital bed. \n\nIn the space of a few months, Sven had aged years. The tiny lines that had bracketed his eyes and mouth in that first photograph that had drawn her attention on that website had deepened into wrinkles. Especially around his mouth. And those lips that she had tasted so many times were drawn tight into a frown...a scowl was more like it as he argued with his mother. Petrine too was finally beginning to show her age as she barely managed to hold the tears in check. \n\nIf not for Bjorn's strong arm about her shoulder, Kirsty might have turned and ran from this nightmare. But when she looked up into those comforting green eyes, she found the strength and resolve to face whatever came. \n\n\"Together as a real family,\" he whispered as if reading her mind. His hand on her shoulder tightened as he bent and kissed her nose. Then his other hand tapped her bottom and a single word bound them together, \"Shieldmaiden.\"\n\nShe inhaled deeply and nodded with a forced smile as she felt Petrine's comforting arms wrap about her, \"Kirsty.\" \n\nThe woman held her tightly for a long moment as if she would never again let her go. Then her girls decided it was dance class time. Her mother-in-law took a step back, her eyes wide with shock and joy as she placed her hand over the mound, \"So strong.\"\n\nShe plastered that fake smile into place as she met his gaze over Petrine's shoulder, \"Was there ever any doubt they would be? The blood of their ancestors demand nothing less.\" Kirsty bent and kissed the older woman's cheek before brushing her towards Bjorn.\n\nAnd facing him. Their eyes locked and she stiffened her spine. This time she would not be fooled. He would not intimidate her with that icy reserve. This time she knew the truth. She heard those words whisper through her mind and drew their strength, '\u00c6 \u00e6lske d\u00e6.'\n\n\"Where aren't you going, Sven?\" she demanded in the firm tone that she had always reserved for one of her 'children' when a meltdown was imminent. \n\nThe silence stretched out for a long while as their eyes did battle. Kirsty watched as small lump in his throat moved reflexively up and down. It was his tell she realized too late. He was the first to look away, but his eyes did not move far. Merely dropped to her tummy that seemed to be expounding exponentially every day. Her hand caressed their babies as she held her ground. \n\nShe heard the tap-tap of steps as Bjorn and Petrine came to stand beside her. It was Petrine who answered her question, \"He is refusing to go to surgery. The doctors need to set the bones in his thighs and pelvis. Perhaps put in a pin or two. As well as have another look with the angioplasty,\" she explained. \n\n\"And why exactly are you being stubborn?\" Kirsty demanded.\n\n***\n\nSven looked down at his hand as his grip on the sheet tightened. He watched the IV cannula move on the back of it. What did he say? What could he say? 'I just couldn't. Not without seeing you one more time.' \n\nAs he had lain on that hard, cold ground drifting in and out of consciousness and pain, he had promised himself that if he ever got the chance...if he lived...he would make things right with her. As much as he could anyway. \n\nBut that admission was just a bit too much. For a man that had spent a lifetime hiding from his emotions. Hell, denying he had them. That kind of honesty was just too raw. Showed too much weakness. Opened him up to rejection. Even if he did completely deserve it.\n\nHis throat tightened even more to the point that he found it difficult to breath. Not as laborious as those first breaths he forced himself to take to stay alive. Another hand, a smaller, feminine one appeared in his field of vision alongside his. It caressed his and his heart raced. \n\nHe still could not bring himself to look up into her face. To face the hatred and censure that he was sure he would see in her green eyes. Then her fingers entwined through his. He felt a gentle squeeze as she lifted it and moved it towards her stomach.\n\nHe fought back tears as she placed their hands over the warm firm swell. But he could have never imagined the sense of pure wonder and utter pride as he felt the gentle thump and solid glide of something living just beneath her skin. He could not help but lift his face towards hers then.\n\n\"These girls are not growing up without a father,\" her words hit him as hard as that fall from the roof had. It knocked the wind from him just as surely. \n\nHow had she known? His deepest fear. The thing that had kept him alive through those long hours. He did not want any possible child of his to grow up as he had...always wondering, never quite knowing where he fit, who he was. \n\n\"So, you will have that surgery,\" her voice was incredibly cold and demanding. He had heard that same tone more than once in the clubs...from female Dommes. \n\nShe bent over until she was just inches from his face, \"What's more you will live. Do you hear me? Don't you fucking think about dying on us.\" \n\nHe could not force words passed that lump in his throat so he only nodded as he watched those lips draw closer to him. He found it even harder to breath when they finally met his. The kiss was soft. Tender. And left him completely hard. \n\nWhen her lips finally left his they did not go far, trailing soft feather ones across his cheek to his ear, \"\u00c6 \u00e6lske d\u00e6.\" He shook his head. He must be dreaming. He must have heard wrong as he felt her teeth bite into his ear lobe. He twitched a bit in shock.\n\nHer gaze was unreadable as she straightened up but her hand kept hold of his over their babies. But there was steel in her voice when she spoke, \"We have unfinished business, husband.\" \n\nHe nodded as nurses and orderlies appeared with the gurney over his mother and brother's shoulders. He chuckled as he found the strength to squeeze her fingers, \"Yes. Yes, we do, wife.\" \n\nAnd not even the gates of Valhalla or Helheim, more likely considering his past deeds, would keep him from her. From them."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "bdsm",
        "dom",
        "female sub",
        "submission",
        "love",
        "true love",
        "polyandry",
        "polyamory",
        "master",
        "oral sex"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-09"
}