{
    "title": "Parkers Island Ch. 04",
    "pages": [
        "I've got to dedicate this chapter to my two greatest friends, who always seem to find the holes in the storyline and share so much of their time and sound advice with me. Once Again I thank Todger65 for his editing work.\n\n*****\n\nI'm in a hole and I can't get out.\n\nAs a matter of fact I gave up trying three days ago, at least I'm fairly certain it has been three days now. My movement before then had been sketchy at best, every time they moved me I had a hood over my head, sometimes I was moved in the daytime other times it was so cold I just assumed I was moved at night.\n\nThe beatings started this morning, no questions no yelling anything just a damn good kicking. I assumed they stopped when I lost consciousness, when I woke I looked and for a moment thought about having a heart attack.\n\n\"You're dead.\"\n\nShe nodded, then smiled and nodded again before moving her legs outwards and resting her hands on her lap.\n\n\"And you're in a whole world of shit.\"\n\n*******\n\nShelby placed the phone back on its cradle, her hand went to the buzzer and her secretary answered.\n\n\"Mary can you find out where Tessa Burnett is please.\"\n\n\"Yes ma'am.\"\n\nHer hands went to her face and she rubbed the skin, small particles of makeup clung to her palms. Not that she noticed, even as her hands came away she just looked at the cabinet across the room her mind still going over the phone call she had received.\n\nMary came into her office her pad in her hands, \"At the moment Tessa is in room seven giving a lecture.\"\n\nShelby nodded, \"Can you buzz over to Donald and ask him to take her place, Tessa is to report here immediately.\"\n\nMary nodded and left. Shelby phoned her boss.\n\n\"We have a problem I need a meeting in ten minutes with the board.\"\n\n\"I've just heard myself, I will get everyone here oh and I've already got Bingham doubling up on the security of the other two assets out there. Fuck this is going to get messy.\"\n\n\"I owe it to Tessa to tell her, she can't hear this from anyone else it would tear her apart.\"\n\n\"I agree, send her home afterwards. I will send Lauren with her to make sure she gets there, this is going to make a heck of a lot of people nervous.\"\n\nTwenty minutes later Mary knocked and then opened the door to Shelby's office, Tessa smiled and thanked her. Mary had no sooner sat down again than she heard a scream, fear gripped her and she flew out of her seat and quickly opened the door. Tessa was on her knees rocking back and forth as Shelby held onto her doing her best to comfort her.\n\n*******\n\nI was once again dragged out of my cell, they offered me a seat. It was pointless because the kicking into unconsciousness came seconds later. It was more difficult to keep up with time now, it was dark when I woke and then I rolled onto my back and wished that I hadn't.\n\n\"Oooh, now that has gotta hurt.\"\n\n\"Nah, had worse done to me in a game of touch football.\"\n\nCarol giggled, \"Now that's the spirit.\"\n\nI coughed and tasted blood.\n\n\"No, that's what you are, remember.\"\n\nCarol sat down next to me, \"I've never really left you, you know. Even after all these years. The flowers are always beautiful by the way.\"\n\nAgain I heard her giggle. \"You need to stop telling me your sorry, I've counted you know, seventy-two times up to today when you want to say it yet again.\"\n\nIt was my turn to giggle; it was short lived since my chest hurt too much to do so for too long. It was then the dark came back with a vengeance and sleep took me.\n\n*******\n\nAt first Tessa refused to leave the Departments grounds, Lauren stayed with her for the evening and eventually both left in the early hours. To Tessa it was important that Em knew and like Shelby it was her choice to sit and tell her, Steven Chadwick phoned her as they were about to leave. Shelby had phoned him and gave him the news about Aiden, he told Tessa that his own people had made arrangements for them to return quickly to the island.\n\nBoth found Amelia at home, her hands around a cup of coffee tears in her eyes. Tessa rushed to Em, poor Amelia barely had a chance to get out of her seat as both clung to each other for any form of comfort and support.\n\n*******\n\nThe board meeting yielded even more information; Shelby sat and listened as her boss read from a sheet of paper.\n\n\"It cost them dear folks, so far the count is forty - seven Afghans dead, all six members of Bingham securities, five Marines and seven security staff, all dead, the list of wounded is twenty-six so far. Two are critical so we're waiting on information of those.\"\n\n\"They knew Aiden was there?\"\n\n\"Oh yes, the attack was centered on the north eastern side of the compound. They knew where to find him.\"\n\nEvery person sat at that table looked at each other, none said it but all knew they had a leak. The mood turned somber, Shelby stood and told those at the table that at the moment the satellite footage was being streamed onto one of the servers and that they could all look at it at the end of the meeting.\n\nThe satellite pictures confirmed that although the whole compound was under attack, most of it was simply a diversion and to keep more of the security team away from the main assault when it began. When the assault went in on the north east section it was both swift and brutal. The Afghans used a bulldozer to tear up the fence; they placed men on the dozer to protect the driver as the blade of the dozer pushed the anti-personnel mines out of the way and creating a path for those behind.\n\nWhen one went down and fell off the bulldozer another simply took his place, the bulldozer rolling over the remains until it reached the fence and proceeded to tear a great hole in it. They flooded in after that overwhelming everything in their path, the solders in the compound regrouped and pressed home the air advantage when the Apache helicopters got there but Aiden was already in their hands by then.\n\nThe picture of his body slumped over the shoulder of a man that would not look out of place in any defensive line in the NFL was only shown to a select few, the arrow formation of the Afghans in front killing anything in their path as they made their escape was etched into the memories of everyone who watched the video stream.\n\nSoon the board meeting broke up with all agreeing to stay local, should they be needed then they could return at a moments notice. Shelby returned to her office. It was way past Mary's leaving time yet she was still sat at her desk, hoping for any news. Shelby could give her none, although she did promise to phone her at home if there was any news. Finally relenting Mary went home.\n\nShelby heard the knock, when she looked up her boss stood in the doorway. Mitchell Carter formed the Department over twenty years ago; he had been its guiding light all those years and yet today he seemed to have aged. His confident step had left him, the dark circles under his eyes worried all those who sat and listened to him not an hour ago at the board meeting.\n\n\"I've just got off the phone with the President; he understands the ethos behind the asset program. If we fuck up and don't get Aiden back it will all collapse. He's given us full cooperation with all arms of the service and if we get any grief whatsoever then I give him a call regardless of the time.\"\n\nShelby nodded her head in agreement.\n\n\"I know I'm stepping slightly out of protocol on this but I need permission to tell his sisters.\"\n\nMitchell Carter sighed before nodding.\n\n\"Trouble seems to follow that family, it's been what? A year since that debacle on the Island.\"\n\nShelby nodded her head not wanting to point out that it was closer to eighteen months. As Mitchell stood he pointed out that she would be better off telling them in person. Shelby had to agree with him. He closed her office door behind him and she picked up the phone to sort out transport.\n\n*******\n\nThe beatings took their toll, they had to carry me out of the cell now. This time they sat me down and stood back, minutes later a man came in and sat across from me, it took a moment before I could focus on the man. His English was accented.\n\n\"You're the decoder with the bounty on your head.\"\n\nI quickly worked out the distance between as and figured 'what the fuck' I may just make it, so I spat on him, the spit dribbled down his face as his friends pounced on me and once again beating me unconscious.\n\nIt took me longer to wake this time. Carol was stood over me looking down; the concern on her face was real.\n\n\"Man that has gotta hurt.\"\n\n\"Only when I laugh.\"\n\n\"Well around here there ain't much of that going on.\"\n\n*******\n\nMatt was busy when he heard the intercom, he glared at it but still answered it.\n\n\"I'm sorry to disturb you Mr. Richardson but there is a woman here who insists on speaking to you. I have told her you are busy but she insists.\"\n\n\"Take her name and tell her I will call her when I can please Marci.\"\n\nThe pause was longer this time, Marci still had her finger on the intercom so he heard the woman give her name. Matt was out of his seat and opening the door before Marci had a chance to repeat the name over the intercom.\n\nMatt nodded to Marci and stood to one side as Shelby walked into his office. Less than a minute later Matt came out of his office with the woman in tow.\n\n\"Marci please tell the partners I have a family emergency and will be gone the rest of the day.\"\n\nHe didn't wait for a reply as he held the door open for the woman. Matt phoned the house to make sure Abby was in and they both headed for the house. He looked towards Shelby.\n\n\"We have Hannah with us at the moment, she came to tell us she's engaged and we're in the process of sorting out dates for the engagement party.\"\n\nAll Shelby said was, \"I know.\"\n\nMatt insisted the nanny took their daughter out for a few hours for a walk or to one of the play centers, Abby wanted to know why but Matt was insistent, both sisters kept looking at Shelby and the way Matt was acting. Shelby watched as Hannah picked up her cell, she shook her head and Hannah put it back down again before sitting down. Instinctively Abby sat next to her.\n\nNo sooner had the door closed than all three looked at Shelby once again; she wanted to sit but knew it would be pointless.\n\n\"I'm sorry it's taken me this long to come and talk to you.\"\n\nShelby wrung her hands and once again looked directly at both sisters.\n\n\"There was an attack on one of the most heavily fortified compounds in Afghanistan. Their objective wasn't the compound itself but one man inside it.\"\n\nBoth sisters instantly understood, Abby held tight to her sister's hand as her head slowly turned to look directly at Hannah. Tears had already formed in Hannah's eyes her whole body shook with fear, Abby's words, although meant for her sister, carried over the whole room.\n\n\"He's not dead Hannah, I can't explain it but I can feel him.\"\n\nHannah sat frozen to her seat. It was then that Shelby decided to sit down. Over the next hour she answered their questions as best she could with the little information she could give and was allowed to give. When the nanny came back Abby had decided that she wanted to leave Houston and go to Parkers Island. Matt understood and left to make arrangements.\n\n*******\n\nI had been left alone for the day, they would check on me of course but other than that they left me alone. Carol would occasionally make a comment and I was still left to wonder why I was seeing her.\n\n\"Because you need me numb-nuts.\"\n\n\"What?\"\n\n\"I'm in your head duffus you don't think I can read your thoughts.\"\n\n\"If that's right how many fingers am I holding up.\"\n\nThis time we both laughed, that brought a guard down to check on what was so funny. Two others joined him and they carried me out of my cell and back into the other room, the same two chairs sat in the middle as though this room hadn't been used since my last conversation was so quickly interrupted.\n\nThe same English speaking man came in and pulled his chair further back this time.\n\n\"Do you have a name? We can find out eventually but I must admit, 'Dead man walking' does suit you at the moment.\"\n\n\"Well I must admit I went by the name of Santa Clause once. Even had the red suit and everything.\"\n\nHe smiled while those around him wondered why.\n\n\"No I think dead man walking suits you just fine. Abdul says you talk to yourself in your cell, what do you talk about?\"\n\n\"The weather mostly, Sunday dinner sometimes, pork roast with all the trimmings.\"\n\nI smacked my lips and even run my tongue along them, I would have rubbed my belly as well but both my hands were behind my back. This time he hit me first before the rest joined in.\n\nIt was dark again when I woke in my cell.\n\n\"You have got to stop goading them, you're not going to last much longer otherwise.\"\n\n\"That's the plan.\"\n\n\"What? To die out here?\"\n\n\"Didn't you hear them Carol, I'm dead man walking.\"\n\nEven Carol faded out then as I lost the battle to stay conscious.\n\n*******\n\nAbby would walk across to see Amelia in the morning and not leave until the light started to fade. Senator Chadwick would phone and offer words of hope, they both knew he had little else to offer and that disappointed both of them but they knew that they needed even that small amount of contact.\n\nWhen the phone rang Shelby was instantly awake, she reached across the bed and answered it.\n\n\"Get back here now, our cousins have found him.\"\n\nThe phone went dead long before she placed it back on the cradle. She grabbed clothes and didn't bother with fashion, Shelby was back at the Department within the hour Mitchell looked at her and then smiled.\n\n\"That's as casual as I've ever seen you.\"\n\n\"You said get back here now; my track suit was the only thing between my bed and the front door.\"\n\nMitchell walked with Shelby into the conference room, everyone was sat waiting.\n\n\"This morning MI6 was given the name of a man held captive by one of there deep undercover agents. When they typed the name into there own system the alarm bells were heard all over Whitehall. They contacted the C.I.A and then it all rolled down hill. The President has spoken to the Prime Minister and they have turned over all they have on this case.\"\n\nMitchell dropped a file on the table, in big bold letters read the words, 'Dead man walking'.\n\n\"He's alive folks, but barely and he knows it. He's antagonizing his captors so much they spend more time beating the shit out of him in the hope that one goes too far and kills him.\"\n\nSome smiled; other knew the ramifications of what Mitchell was saying, the conversation went around for close to thirty minutes before Mitchell Carter put his hand up to stop any further discussion.\n\n\"We need to keep a lid on this; those within the Department that know have to be limited as to what's going on. Until Aiden is back on American soil then he's still MIA do I make myself very clear gentleman. I understand we will be damaging the trust some have in us over this, but we get him back first and mend fences later.\"\n\n*******\n\nSteven Chadwick knocked and waited, it felt like an eternity before Amelia opened the door, what he saw in front of him came close to breaking his heart. She rushed into his arms and held on tight, the dam had burst and it just felt like he was hanging on for the ride. It took some maneuvering to get her back inside and sat down once again, after looking around he pulled his cell out and dialed.\n\n\"Martha I need Tessa at Em's place.\"\n\nHe disconnected the call and placed his cell back into his coat pocket, Steven was still holding onto Amelia when Tessa burst through the door with Martha in hot pursuit. He waited until Tessa was looking directly at him before he nodded towards Aiden's office. She quickly understood and undid the code lock on the door. He lifted Amelia up and practically carried her inside with both Tessa and Martha close behind.\n\nWhen he turned his head, Tessa was already closing the door. Once it clicked shut he sat Amelia down and knelt in front of her.\n\n\"He's alive, it has been confirmed less than two hours ago.\"\n\nAmelia lunged across the distance between them and once again hugged him, the sobs a mixture of pain and relief as she held him tight. He waited her out, she clearly needed the release. Steven turned to Tessa.\n\n\"I've sent Lauren to the ferry, for now until told otherwise all assets are being double protected. If you have a problem with that, then tell me now and I will take you back to the Department with me when I leave.\"\n\nSenator Chadwick left Tessa with very little room to maneuver; she smiled and nodded her head in agreement. With a quick nod he once again looked at Amelia and described the events of how he was found.\n\n\"We have two Seal teams on their way to get him. I have a General crawling up my ass almost every hour wanting to know if his Marines can help in any way.\"\n\nAmelia smiled and hiccupped, everyone in the room giggled, that one moment felt like a pressure release valve.\n\n\"Fitzpatrick?\"\n\nSteven looked closer at his God Daughter.\n\n\"He's been a shadow behind Aiden since they talked when Carol died. I'm not supposed to know but they talk about once a month.\"\n\n\"He lost five Marines on the assault on the compound; the whole Corp is baying for blood over this. I'm on my way back to Washington in a few minutes but I needed to tell you all this in person. You deserved that much.\"\n\n\"Steven what are you not telling her?\"\n\nSenator Chadwick lowered his head for a moment. That damn woman could read him like a book. He still stayed kneeling in front of Amelia not wanting to stand and confront Martha because she was right. With a small sigh Steven held Amelia's hand once again. \n\n\"He's in a bad way Em. He's sustained multiple beatings and likely to sustain more before we can get to him.\"\n\nSteven Chadwick heard movement behind him and watched as Martha practically forced Tessa up against the door lock, \"Tessa open the door.\"\n\nEven then she looked to Steven for confirmation, not sure why but trusting Martha's instincts implicitly he nodded and watched as Martha left and closed the door behind her. He was still talking to Amelia forty minutes later when their was a knock on the door, he tried hard not to show his annoyance but since he had come to the end of giving Amelia anymore information and once again seeing the light back in his God Daughters eyes he stood and nodded once again to Tessa.\n\nSarah Michelson stood waiting as the office door opened; Steven Chadwick took one look and said, \"No.\"\n\n\"I can keep him alive. Just get me within arms reach of Aiden and I will keep him alive.\"\n\n\"You're no longer in the army.\"\n\nHer frustration was clear for all to see.\n\n\"That's just a bunch of paperwork and we both know it. Put me in with the Seal team and I will operate on him on the helicopter on the way out if I have to.\"\n\nSteven went to move; he hugged Amelia and headed towards the door before Sarah spoke again.\n\n\"With all due respect Senator, if you leave without me I will phone General Fitzpatrick and hitch a ride with the Marine team.\"\n\nHe stopped, took a breath and slowly let it out before turning to look at Sarah.\n\n\"You owe him nothing.\"\n\nShe shook her head, \"You're wrong, I owe him everything. I live here now and I'm married to the most wonderful man and all because of him. I owe him everything Senator.\"\n\nMartha Burnett was stood on the porch next to a man Steven Chadwick had never seen before, \"Please Steven.\"\n\nHe looked towards the man, \"You're her husband?\" Hank nodded and Steven said, \"Then talk some sense into her.\"\n\nEven though Hank knew who the Senator was and what he was trying to do, Hank still felt he had slighted his wife and that, Hank couldn't stand back and let happen, not within ear shot of him anyway.\n\n\"If anything Senator I'd be talking sense to the wrong person. Something seems to be blocking your view and it's hard to figure out what. My wife has cut that boy open before, she's the best there is out there that's willing to go to the shooting end of this operation to save a man and your telling her no. that just ain't right senator.\"",
        "The rebuke didn't go unnoticed by Steven Chadwick. The man talked from the heart and with a great deal of conviction, in fact Sarah did as well, Steven put his attitude down to the lack of sleep his had over the last few days and with a feeling he couldn't win this one if he tried, he nodded to Hank before looking at Sarah.\n\n\"If you're coming we leave now, hug your husband on the way out.\"\n\nSarah ran across the space between them and leapt into the arms of Hank who had to take a step back such was the momentum she carried when she clung to him.\n\n*******\n\nGeneral Fitzpatrick placed the phone back on its cradle, he was still unsure if it was good or bad news. The seal teams were now in position and watching the building that Aiden was in, his men were tasked to wait for a surgeon already in flight and select twelve men plus a corpsman to assist the surgeon if needed. His only thought as he once again reached for the phone to get everything ready was, 'just what kind of shape was Aiden in'.\n\nSarah took a sleeping pill the second she set foot on the plane for the first leg of the journey. She slept as best she could for the second leg, she needed to be on the top of her game and jet lag wasn't going to be an issue when she got there. Two Marines came on board when they landed and shook her awake, both men grabbed a large med-pack each as she stood between them and they left the plane before anyone else was allowed. Those that left after the Marines saw the women get into a Hummer and drive across the runway to a waiting helicopter.\n\nThings were moving swiftly for Sarah, when the helicopter landed after a twenty minute flight and landing alongside a hanger both her escorts got out and she followed them into the hanger. Beds were scattered in a wide arc either side of two very large tables. A fridge sat in the corner, all the Marines were busy stripping down and testing weapons and equipment. A Lieutenant stood in front of her and held out his hand.\n\n\"Ma'am we have been waiting for you, please check your equipment the Corpsman has your service weapon, my sergeant has checked it but please do so as well.\"\n\n\"Has the blood I asked for arrived?\"\n\nThe lieutenant pointed towards the fridge in the corner.\n\n\"Ma'am I will ask you one more time, please check your service weapon.\"\n\n\"At ease Lieutenant.\"\n\nThe Lieutenant swiftly turned to see three men standing by the door of the hanger, his own sergeant spotted them at the same time. His voice bellowed over the entire hanger.\n\n\"Atten Hut.\"\n\nLike one the entire team stood ramrod straight as General Fitzpatrick walked into the middle of the hanger, he shook Sarah's hand and asked her to please check that the blood she requested is the correct type. She had been in the military long enough to know that meant 'get out of the way' so she and the Corpsman walked over to the fridge and made themselves look busy.\n\nThe General looked at the face of every Marine stood there before he spoke.\n\n\"At least two of you served with Marine Corporal Carol Burnett, I know of three of you who whore dress uniform at her funeral. She died protecting a man we all called an asset. From that day on he was also given the name 'dead man walking'. Five of my Marines and six people from Bingham Securities died trying to keep that man out of enemy hands less than six days ago.\"\n\nThe General's eyes swept the entire team once again, every man picked for a reason.\n\n\"Gentlemen, we failed. That doesn't sit right with me and it's time we wipe that mark off of our record.\"\n\nTo a man they all yelled, \"Hoo-Rah.\"\n\nGeneral Fitzpatrick then turned to the lieutenant, his face unreadable as he said.\n\n\"Lieutenant, a word.\"\n\nThe Lieutenant walked with the General to one corner of the hanger before the General stopped and stared once again at the lieutenant.\n\n\"Did your daddy ever tell you about a man named Sergeant Henry Michelson?\"\n\n\"Yes sir, he was my father's sergeant in the Rangers when my father served his first tour in Vietnam.\"\n\nThe lieutenant followed the Generals gaze.\n\n\"That's his wife.\"\n\nThe Lieutenant looked closer at the women he only knew as Sarah.\n\n\"A lot of this operation is still on a need to know Lieutenant but that is Lieutenant Colonel Sarah Michelson. Her job is centered around keeping 'dead man walking' alive and if she has to cut a vein open in her arm to feed it to him she would do it as well.\"\n\nFor just a second the lieutenant let his mouth go before his brain got a chance to stop what came out.\n\n\"Is he really that important Sir?\"\n\nHe quickly looked at the General his mouth open ready to apologize, General Fitzpatrick spoke first.\n\n\"Did you ever stop to read what's painted on all those Police cars back home Lieutenant?\"\n\n\"To protect and to serve, Sir.\"\n\nThe General smiled before turning and heading towards the open hanger door, both stopped and waited as a Hummer came closer to the door.\n\n\"Your final briefing will be in an hour Lieutenant.\"\n\nWith salutes made both were left to their own thoughts. As the lieutenant walked back inside the hanger he watched as Sarah stripped, checked and put together her side arm before sliding the magazine into it and placing it in her hip-holster. Both she and the corpsman emptied one of the Med-Packs on the table and inspected the seals on each of the packets. Both then divided the load between Sarah and the corpsman.\n\nThe lieutenant felt a presence next to him, his sergeant spoke in quiet tones that only he could hear.\n\n\"Johnson recognized her the second she came through the door sir, remember when he took that shoulder wound and we dragged him into the forward medical unit that last tour? Well she was there, scuttlebutt says she don't take no shit from anyone and actually had a reputation for volunteering for the worst places.\"\n\n\"Great, a doctor with a death wish.\"\n\n\"That's not the impression I got from Johnson sir. He says she's a firecracker and someone we could need on this mission.\"\n\n*******\n\nI could only see out of one eye now, the pain in my chest felt like my whole chest was in a body stocking, I had to take short breaths just to breathe at all. As soon as they noticed I was awake the door opened and I was helped once again to the interrogation room. He was sat waiting for me this time, I just knew I couldn't resist.\n\n\"I'm sorry I kept you waiting, I was busy fucking those seventy-two virgins that are earmarked for you.\"\n\nWith a roar he leapt from his seat and got the first punch in, his friends didn't understand why but joined in anyway. It was early evening when I woke again; the sun had all but lost interest in this day and had almost sunk behind the mountains in the distance. When my hands did their own body inspection I found I had to do that now with one arm.\n\n\"You know the next one is going to kill you?\"\n\n\"I sure hope so; this is getting old on a monumental scale.\"\n\nJudging by the look on Carols face I don't think she was expecting my answer. I had only been in the compound for two weeks before I felt I was being watched and then Ahmed came into my life, he was a translator and at first it was just when I went to the canteen I met him, then more often. After a while it felt like he could figure out where I was going and be there before me.\n\nAhmed was polite but something about him always put me on edge, and regardless of how much we talked I felt he was hiding something. I understood that in a country that no one trusted anyone he shouldn't have stuck out as much as he did but my gut instinct just wouldn't get past my mistrust.\n\nAfter a month I asked the base commander to either keep him away from me or do a recheck of his security clearance. Two days later he came into my office without knocking and pulled a gun on me, we both heard the gunfire in the distance and the grin on his face let me know I was in trouble.\n\n\"My only regret Carol is that I took so long killing that scumbag who sold me out that I didn't realize how big a hit Bingham and the Marine boys were taking.\"\n\n\"There coming for you, you know.\"\n\nI coughed and had to grab my chest to do it, the blood landed on my chest. It was easier just to wipe my mouth than clean up after me. When I had finished coughing the guard came in and threw a bucket of water over me, I gave him the thumbs up and he gave me a kick in the stomach in return.\n\n*******\n\nShelby thought she was the last to enter the boardroom, the door closed and everyone just waited. Mitchell Carter came in five minutes later making sure the door was closed behind him. He once again dropped a file on the table a sigh followed as he opened it and looked at the one sheet of paper inside.\n\n\"I received this less than an hour ago, I have just got off the phone with the president and after reading him the contents he agreed to give the go ahead to what's already in progress.\"\n\nMitchell Carter lifted the letter from the table and held it close so he could read it.\n\n\"MI6 sent this to the CIA and it has filtered down to us, its just two lines from their own agent, it reads. 'In two days Dead Man Walking will be handed over to members of the family of Ben Abdul Aziz. He won't last long enough to be handed over alive.\"\n\nThe sheet of paper was once again placed into the file and closed. This time Mitchell sat down.\n\n\"I don't pretend to know the full details of what's going to happen now, that's up to those out there. When I started the Department I never in my wildest dreams envisioned anything like this, ladies and gentleman I suggest you all pray to whatever God you're comfortable with because what happens to the Department is in the hands of others right now.\"\n\n*******\n\nThe two Blackhawk's followed the night sky, those inside kept to their own thoughts as the terrain changed underneath them. Sarah was in one transport along with five Marines and the lieutenant. The Corpsman along with the other five Marines and the Sergeant were in the other. Once they landed the Blackhawk's would travel on for a further mile before returning to the forward base, reload and wait.\n\nBoth Seal teams hit the house from either side, thanks to the agent inside it was a cakewalk since he had drugged the guard's tea. As instructed he was on his knees with his hands behind his neck when they came through the door, quickly searched as a matter of routine and escorted outside. What the leader of the team found when they got to the cell almost made the him want to go in search of the agent.\n\nThe medic amongst them checked and found a pulse, he just didn't know were to start after that, his team leader had known Brody since his team was formed and thought that nothing could faze him. When Brody shook his head they all felt they were just going through the motions on this one. But they all knew this was important, yet looking at the body on the floor they all truly believed this was a dead man who was no longer walking.\n\nFour of the team placed the body onto a stretcher and headed out, they pulled one other guard out and up against the wall of the house. The agent was released since he already had his own exit ready, the team leader ex-filtrated to safe cover and sent a short radio message.\n\n\"Send in the drone.\"\n\nHe watched from the hillside as his team continued along the trail with their cargo, seconds later instinct made him duck as the whistle over his head stopped to explode against the house, forming a mushroom cloud from the detonation of high explosive and sending the now dead Afghan up into the air and on fire.\n\nThe second whistle enlarged the expanding cloud and the hole that was once a house, the fire ragged on the few parts of the house that were still connected together.\n\nThe lieutenant stopped the Marine team, they all instantly knelt looking out into the dark through night scopes. He listened to the coded message and whispered into his sergeant's ear before giving the signal to proceed. For the next two hours they walked changing the lead man every half an hour before the lieutenant stuck his hand up once again and stopped everyone.\n\nHe made a circle with his hand and everyone moved outwards as Sarah and the Corpsman sat in the middle. With everyone looking out and within eye sight of the man beside them they waited. They heard an explosion way off in the distance but no one moved, after an hour the lieutenant heard a click on his radio he answered with a return click and then signaled his sergeant who went from man to man telling them that the Seal team was imminent and to not fire on them.\n\nThe Seals lead man came first and knelt waiting for a signal, the Marine Sergeant stood and signaled him in, out of the darkness came the rest of them. Once the portable stretcher was put down the two seal teams joined the Marines and the circle expanded outwards as Sarah got her first look at Aiden and almost cried.\n\n*******\n\nGeneral Fitzpatrick hoped against hope that the retrieval signal would come soon. He watched from the ops room at the circle of men and the small group of five people in the middle, no one moved as one hour ticked over to the next. Dawn was two hours away and everyone in that room still watched the small circle of men on the ground.\n\nFinally the signal came and the mood in the room changed dramatically. Four Blackhawk's were now inbound, four Apache helicopters were used as protection. The scene on the screen also changed, the circle broke up and formed a protective moving shield with the stretcher, Sarah and the corpsman always in the middle. The men protecting them adjusting their formation almost every minute too give those in the middle the best possible cover.\n\nOne of the radio operators came up to the General and handed him a sheet of paper, he read it twice before handing it to his adjutant, who in turn took off to make arrangements.\n\n'Patched up to travel, he's hanging on but not sure how. Direct transport to nearest field hospital and have surgery waiting.'\n\nThe march to the pick up point still seemed to take a lifetime, they made it just as the helicopters landed, both the Seal leader and the Lieutenant decided to move the men around and give Sarah and the corpsman a Blackhawk to themselves plus two Marine bodyguards. Once off the ground the helicopter carrying Sarah was moved to the middle and protected by the rest on a rotating basis to keep any ground fire that may come, away from Sarah's.\n\nOnce safely over the line Sarah's Helicopter and two Apache's peeled off and headed for the field hospital.\n\n*******\n\nMartha was with Tessa, at Amelia's home, the door to the office wedged open and Lauren hovered and offered reassurance as best she could, her new friend from Bingham had taken up position on the porch. Martha had asked Hank to stay with them, he had told them he couldn't, that was his wife out there and although he knew she could take care of herself it didn't stop him worrying. He told them he would be at home working and to give him a call when they had some news.\n\nThe computer beeped and the screen wrote out the same message that the General had in his hands less than forty minutes ago. Amelia read it and crumpled to the floor. Lauren picked her up as though she weighed nothing and gently placed her on the couch and into the arms of Martha. It was Tessa that phoned Hank and told him Sarah was safe, when Hank asked about Aiden, Tessa went real quiet.\n\nIt took Amelia a few moments to compose herself and slowly stand, she looked towards Martha and told her that Abby and Hannah needed to know before walking out of her house and across the road. None of the girls saw Amelia again for the rest of the afternoon.\n\nShelby's face appeared on the screen and Tessa rushed into the room ready to hear any news. Tessa had known Shelby for over two years now and the woman looking back at her at the moment wasn't the one everyone saw within the Department.\n\n\"Sarah has Aiden at the field hospital, we are already making preparations for his move to Germany and we are using Sarah's requests so far and what she will need when he gets there. We are also adjusting one of the rooms in our clinic. Once Sarah believes he's strong enough to travel we are bringing him here. Get Amelia ready for travel I will co-ordinate with Bingham to bring you both here tomorrow.\"\n\n\"Make it late, tomorrow is Sunday, I know Em and she's going to want to go to church before we leave.\"\n\nShelby simply nodded and the screen once again went blank.\n\n*******\n\nMitchell Carter sat across from Shelby listening to the whole conversation he waited for Shelby's acknowledgment and signing off before he spoke.\n\n\"Construction at the clinic begins tomorrow, Sarah says at least two weeks before she wants to move him again especially that sort of distance.\"\n\nShelby then added her own thoughts.\n\n\"Amelia can stay with Tessa at her apartment for now until Aiden is back. I'm taking her off of all projects until Aiden is on the mend. Lets face it she's going to be useless to us until then.\"\n\nAs Mitchell Carter lifted himself off his seat and headed towards the door he said, \"The whole dammed Department has taken a hit on this one, not much of anything is being done anywhere.\"\n\n*******\n\nSarah phoned Hank at home, both tried so hard to speak yet all they could do was listen to each other breathing down the phone.\n\n\"I knew it was going to be hard but even I wasn't prepared for what I saw.\"\n\n\"Is he going to be alright?\"\n\n\"That dear husband is the million Dollar question. I have had to place him in a medically induced coma. No one should have to deal with the damage he has sustained.\"\n\n\"Take your time.\"\n\nHe heard Sarah cry and all Hank wanted to do was hug his wife, she sobbed an 'I love you' and hung up.\n\n*******\n\nTen days later...\n\nThe board decided to feed as much information as they dare back into the Department. One of the notice boards on the main corridor was cleared and soon became known as 'Aiden's updates' the construction at the clinic was quickly noticed and the reason why was posted as was daily updates on Aiden's condition. Get well cards started being pinned to the board, so many that they had to add another board alongside to keep up.\n\nWhen Tessa came crashing into the apartment she grabbed Amelia's hand and practically dragged her out of her seat.\n\n\"You have got to see this.\"\n\nTessa wouldn't talk, much to Amelia's annoyance but continued to be pulled along the corridor. When Tessa stood in front of the board Amelia had to take a step back to see everything, her eyes lost there sight as moisture filled them, the cards covered both boards and a workman was already measuring up the wall for another board to cope with the influx of cards.\n\nHer hand went from one to another trying to read the short message as best she could, she gasped when one caught her eye. The seal of the Presidents office and his signature made her read the card twice so she could memorize it.\n\n\"It seems you found our little corner of hope.\"\n\nAmelia spun around and Shelby stood looking at her.\n\n\"It's beautiful, thank you.\"\n\nShelby smiled and nodded her head.\n\n\"I was going to look for you so you saved me the task, I have some more news for you, Aiden is inbound and will be here in five hours. The President ordered a medical transport to get him back here and Sarah agreed.\"\n\n*******\n\nWord came down from the board that Aiden would arrive within the hour, his condition was still listed as critical and that visitors were restricted to his wife and medical personnel. Even that small amount of information was treated with great cheer.\n\nTessa got a call from Shelby to meet her in her office as soon as she could, Mary showed her straight in and Shelby pointed to a seat while she finished a phone call. When she placed the receiver down she stood.\n\n\"I hope you didn't get too comfortable, come with me please.\"",
        "Both left her office, Tessa looked at Mary and all she could do was shrug her shoulders. Mitchell Carter's office loomed ever closer and once Shelby stood in front of it she just walked right in, she waited for Tessa and then closed the door behind her and in through to door at the other end. Six of the twelve seats around the boardroom table were occupied; Shelby pointed to one of the vacant seats at the table and asked Tessa to sit down.\n\nAll through the journey from Shelby's office to here Tessa had wondered what she had done wrong, when Shelby opened the door to Mitchell Carter's office she redoubled her efforts and even as she sat she was still at a loss. All six watched Tessa and waited, Tessa tried her damndest to shrink further into the seat.\n\nMitchell cleared his throat before starting. \"As you know this is the third attempt to kill Aiden and in my opinion that's three times too many. The other agencies are in agreement and so is a certain Marine General who has lost six good Marines because of it. I'm putting together a group to go after those that threaten Aiden, I want to select you as one of them but I worry about your involvement.\"\n\nA fire burned within her, Shelby saw it and smiled inside as Tessa got to her feet and stared at Mitchell Carter.\n\n\"You may be my boss but choose your words real careful when you explain that statement to me Mr. Carter.\"\n\nFor the first time in what felt like a lifetime he now knew he was perhaps looking at the next Shelby and his chest swelled. Those around the table expected fireworks yet all they got was a slow smile grace the face of a man who hadn't known what a smile looked like since all this started.\n\nHe nodded his head at Tessa before saying anything.\n\n\"Forgive an old man who has had little in the way of sleep for the last two weeks my dear.\"\n\nMitchell pointed to Tessa's seat and slowly she sat back down again.\n\n\"Donald is spearheading a small unit to act under Shelby. He's asked for you to be added to his team, it will automatically pull you from the asset roster until the team has completed its task.\"\n\nStill not giving any ground all Tessa asked as she continued to stare at her boss.\n\n\"And that is?\"\n\nThis time Mitchell looked towards Shelby who simply nodded her head at her boss.\n\n\"Its two fold, to find and delete any known knowledge of the asset program from any and all systems, and to go after those that want Aiden dead.\"\n\n\"Count me in.\"\n\nMitchell wasn't sure if he should laugh or cry.\n\n\"I think you may want to hold off on that comment until you hear what the job entails.\"\n\n\"No sir.\"\n\nThe six members that were sat listening stopped breathing. Tessa looked towards Shelby something seemed to pass between them and Shelby understood what Tessa was about to say and both nodded and smiled to her young asset.\n\n\"My sister was Carol Burnett. If anyone has a right to be doing what you want that would be me. I was also on the island the night hell descended on us. We buried my friend Madison Robertson a few days later.\"\n\nTessa's eyes scanned every person in that room.\n\n\"I want those that harmed Aiden dead, I'm not stupid enough to think I can do that myself but we have agency's who know how to make that happen. My sister didn't die because of Aiden but because too many people knew who and what he was, let me help put the rabbit back in the hat.\"\n\n*******\n\nThe constant noise of the monitor annoyed me so much I just had to open my eyes; Carol was sitting on the chair to my left. Amelia was asleep in a bed next to mine; my only thought was that I was dreaming.\n\n\"No you're not dreaming.\"\n\nI turned my head to once again look at Carol.\n\n\"I'm in your head duffus, remember?\"\n\nA woman came in, she looked familiar and yet I was struggling to remember who she was. She smiled but said nothing to me as she entered the room; instead she leaned over and whispered something into Amelia's ear. I heard a gasp and Em quickly spun around and sat up at the same time, she tossed the blanket to one side and came over to me.\n\nThe woman held Amelia back and again she said something to her in a whispered tone. The monitor started to escalate its pinging noise and a nurse ran into the room, at first she smiled but her smile dropped when she noticed the monitor and the rapid pinging sound it kept making.\n\nEm took a step back and the woman said something to the nurse who then ran out of the room.\n\n\"You have to rest Aiden and you need to stop fighting the drugs.\"\n\nMy skin felt like it was on fire, my right arm was in a cast so I used my left to try and pull all the tubes out so I could at least shower and cool down. The woman shouted something at the door the nurse left through, Amelia just screamed. Out of sheer frustration that nothing in my body seemed to work, my body went into revolt and my mind felt like I was only there for the ride as my muscles spasmed and then went tight, my back seemed to lift off the bed and for the first time I opened my mouth and screamed in pain.\n\n*******\n\nTessa read the notice board along with two of her friends. The new information on Aiden was all of two lines that basically said he had woken during the night and due to his injuries was once again put back to sleep so his wounds had a better chance to heal. She knew she couldn't tell her two friends the truth, Em had phoned her in the middle of the night in tears and told her what had happened.\n\nIf it wasn't for the fact that Sarah could see it coming and already had the nurse getting something to put Aiden back to sleep who knows what sort of further damage Aiden could have done to his himself.\n\nDonald was given an audio transcript of the conversation Tessa had with Mitchell Carter, he laughed so much he had to listen again. No one and I mean no one has ever had the balls to call out the Director before and there was a woman younger than Mitchell's own daughter getting in his face and calling him to task. What she said also allowed Donald to give his seal of approval and he even named the operation on something she had said.\n\nThey were all in effect trying to put the rabbit back in the hat, or at least back to a far more acceptable level if the Department was going to continue to operate as a viable organization. The task that ran parallel to that of course was born from revenge not only from the Department but other organizations. They had caught and tortured Aiden and those that were involved had to know payback was coming.\n\n*******\n\nAmelia was watching me when I woke again, the rings around her eyes telling their own story of how much sleep my wife has had.\n\n\"She never went back to bed Aiden, all she does is sit in that chair and watch you.\"\n\nCarol was sat on Amelia's bed crossed legged and smiled when I looked at her, even waving her hand at me which made me smile.\n\n\"Are you ok?\"\n\nMy wife's voice although concerned held an edge of fear within it.\n\nI opened my mouth to answer yet I felt so dry. In the end I gave up and nodded my head. Amelia grabbed a glass of water from the cabinet beside her and placed a straw into it before standing to lean over me and placing the straw in my mouth, my lips had barely touched it when another voice came from the door.\n\n\"Just a few sips, it's only to moisten his mouth.\"\n\nThis time I knew her name and I felt rather proud of myself.\n\n\"Hello Sarah.\"\n\nMy voice was still weak, it hurt to talk and I could see the understanding in her eyes. She held my wrist and took my pulse, her hand shook so much I doubt she got anything worth putting on my chart.\n\n\"You had us worried.\"\n\nCarol's voice carried passed Sarah.\n\n\"She operated on you Aiden, in the middle of nowhere with a tarp over her to hide the light and keep the flies away and a Corpsman as her only company. They were all willing to die to keep you alive Aiden, you have got to stop denying it; you are an asset. It's always been down to people like us to keep you alive.\"\n\nThe machine starting to ping a little faster and Sarah moved to check it, giving me a clear view of Carol still sat crossed legged on Em's bed.\n\n\"I have to leave soon my friend; I hope you make the right choice when I do.\"\n\nAgain Sarah grabbed my wrist and held tight, the nurse came prepared this time and Sarah quickly injected the contents of the syringe into the bag hanging by the side of my bed. The nightmares came crashing back, I fought hard to make them go away but in my weakened state my mind made me a spectator as scenes in my life unfolded.\n\nWhen my father came home thinking we were all in bed and mom held him tight to her as he told her that he finally talked to Grandmother about easing back on the hours he worked so he could have a family life and she told him to get out of the firm and don't come back.\n\nThe day I opened the front door to see two police officers standing there and uttering the words that would forever mean my sisters and I would never see our folks ever again. When Grandmother came to us and filled my sister's heads with dreams and they not understanding that it all comes at a cost and that cost was total capitulation to her will.\n\nMy first introduction to Shelby and finding out what an asset was and my meeting Carol for the first time only to once again feel that searing pain as my bodies revolt at what my mind again played out to itself of that afternoon I watched Carol die. It was then my mind placed a number in front of me, the number one was placed directly in front of the scenes that continued to play out in my head.\n\nWhen the scene changed to Amelia holding Madison by her vest as she pointed her own Sig at a member of the Hostage Rescue team that number changed to two. As much as I fought it my own mind made me watch as Amelia left the ferry in front of the hearse that carried the body of Madison to the cemetery.\n\nI tried to stop it, with everything I thought I had I desperately tried to stop what I knew was coming next, but this time my body joined my mind and the onslaught was just too much as I watched like a bystander as one by one the members of the Bingham team died in front of me and all the while the numbers started to go up. The number eight stood between me and the next scene as the first Marine to break through the carnage grabbed me by the arm in an attempt to get me to safety.\n\nHe was number nine, by then the Marine Corporal and one other Marine stood alongside me and their fallen comrade. They took seven Afghans with them but the number if front of me now stood at eleven. I fought harder with the last one, I could see her face now and I desperately wanted this to stop, Marine Private Amy Fallows. She handled all the radio communications between me and the Department.\n\nWhen she found me as I was just reloading my own Sig, she pushed me against the corridor wall as three Afghans charged her, a great bull of a man behind them. She got all three with her side arm before the bull of a man killed her while two others pinned me to the ground as they made me watch. The number now stood at twelve and flashed like I had just won the state lotto.\n\n*******\n\nSarah watched Amelia through the glass, vary rarely did she move but when she did her eyes never left Aiden, Sarah sighed and walked from the window to the door, Amelia heard her and looked up, smiled and looked back at Aiden. Sarah gently placed her hand on Amelia's shoulder, she in turn raised her hand and held on for a moment before Sarah continued her journey and sat on Amelia's bed.\n\n\"Waking him was a mistake I can't afford to make again, you know that don't you?\"\n\nShe nodded her head, just then Aiden seemed to frown and his head moved gently from left to right.\n\n\"He's having nightmares.\"\n\nSarah looked closely at Aiden sweat had started to form along his forehead. Amelia looked up at Sarah before she continued.\n\n\"He thinks I don't know but once in awhile he has them at home, normally he will wake and try to quietly go down stairs for an hour before sneaking back to bed.\"\n\nSarah smiled and said, \"let me guess, he's a man and makes more noise trying to be quiet than he does when he's not trying?\"\n\nThis time Amelia smiled, something that Sarah hadn't seen in a while from her friend. Sarah also noticed the tenting, she knew it was a side effect from one of the drugs Aiden was on but it did give her an idea.\n\n\"Em, do you want to help him?\"\n\nA moment of anger quickly flashed across her face and Sarah was about to apologies for the way she worded the question.\n\n\"Yes of course, tell me what to do.\"\n\nThe last thought that went through Sarah's mind was the repercussions if this ever got out.\n\n\"Blow him.\"\n\nAmazement flashed across Amelia's face, she must have heard Sarah wrong.\n\n\"What?\"\n\n\"You heard me, blow him, hand job him if you don't suck your husband off.\"\n\nThe next words that came from Amelia, Sarah was fully expecting.\n\nThe words, \"Are you out of your fucking mind?\" Came several time to her in the conversation she had with Sarah that evening and yet Sarah continued as though her friend hadn't said a word.\n\n\"You know that with coma patients we always suggest that people talk to the patient. Aiden is in an induced coma so this is different, he does respond to sensations so give him one.\"\n\nAmelia just sat with her mouth open.\n\n\"You have to know its all going to be one sided though, I don't figure you weigh more than what, one thirty-five?\"\n\nWithout even thinking about it she nodded her head.\n\n\"I can't have you climb on top and slide on down Em, his still too badly damaged even for your weight, so it's going to be all one way traffic until I think he's going to be able to cope with consciousness again.\"\n\nThis time Amelia shook her head.\n\n\"It's April first, it's gotta be.\"\n\nSarah moved from the bed and knelt in front of her friend, she outlined what she had meant by her statement even telling Amelia that all she had to do was close the blind at the window and the nurse will turn the camera off for ten minutes, although the monitors will have to stay on.\n\nTo Amelia this conversation was just too surreal. Sarah continued to point out that Aiden was her husband and other than Sarah and the nurse this would go no further. Thinking that she may have pushed her friend to far she simply told her to think about it. Sarah stood and left the room nodding her head to the nurse when she did.\n\nBoth walked a couple of paces from the desk before either said anything. It was plain to see from the look the nurse gave her that she had heard the conversation she had with Amelia.\n\n\"If this gets out, husband or not you could get fired for this.\"\n\nSarah nodded but her heart overruled her head on this.\n\n\"Only the three of us know about this, look at where we are. Its not a hospital but a place full of secrets, I just hope this place can handle one more.\"\n\nBoth were still talking when something moved out of the corner of the nurse's eye and she gasped and then smiled. Sarah followed her gaze and watched the blind slowly close. Both rushed to the desk to switch off the camera.\n\n*******\n\nA week later Shelby watched in silence, unsure for a moment what to do; she knew why Amelia was smiling so often now, she even agreed with the reasoning behind why Sarah initiated the conversation with her. The nurse was right; Sarah could get fired if this ever came out.\n\nWhen Shelby switched off the screen she sat and thought long and hard on this. An hour later she called Harvey into her office.\n\n\"Thank you for bringing this to my attention, as of now I want you to wire in the other camera's with the switch at the nurses station, when the camera goes out in Aiden's room I want the rest of them out as well.\"\n\nAll Harvey did was nod his head and walk out. Once out of her office and the door safely closed he clenched his fist and mouthed the word, 'Yes.' Harvey was already on board with the Doctors reasoning, this was his friend hanging onto life in the clinic. But he had to report why the camera in Aiden's room went out three or four times a day.\n\nHarvey gathered all the things he needed and went to the clinic, the nurse saw him and he could read the panic in her eyes. When he looked over at the window the blinds were closed, thinking quickly Harvey searched his pockets and told the nurse he had forgotten something and would be back in twenty minutes. The relief on the nurse's face was something else. An hour later Harvey returned and Sarah was waiting for him.\n\nSarah's words reached him before he even had a chance to close the door behind him, \"This room is out of bounds.\"\n\nHarvey closed the door and motioned Sarah over to him and whispered something into her ear, she went white and the nurse started to panic again, Sarah nodded her head and Harvey left her there so he could get back to working on his task. It took him over an hour and both women watched but said nothing, when Harvey tested everything and flipped the switch a couple of times to be sure he smiled and put everything away.\n\nWhen he stood both women stood side by side unsure what he had done.\n\n\"Shelby sends her regards and now when you switch off the camera in Aiden's room the ones in here will go out as well. She has told me to tell you both that all records up to this point have been shredded as well.\"\n\nSarah had to hold the nurse up but both thanked him and Harvey left.\n\n*******\n\nIt was still another week before Sarah asked Shelby for a conference room with video conference facilities. It took a day to get the three doctors she requested on line from Walter Reed and the material ready for the conference all four talked in the language of doctors for the rest of the day, going over X-Rays, brain scans and a mountain of medical reports and other data.\n\nBy early evening all were in agreement that the subject's bones were healing nicely, the swelling of the brain had gone down and both surgeries on the subject had fixed everything inside. All agreed it was time to bring him out of the medical induced coma, Sarah thanked everyone and when the screens went blank she turned and thanked the two technicians Shelby had loaned her for the conference.\n\n*******\n\nEven before I opened my eyes I could feel less pain, I still had a headache to end all headaches but at least my skin didn't feel like it was on fire anymore. Amelia watched me from her seat, her smile just got bigger when I looked at her and held out my hand to her.\n\n\"I love you honey but you still look like someone's driven over you with a truck.\"\n\n\"Sure hope you got his number.\"\n\nAmelia left her chair and climbed onto the bed with me.\n\n\"It's been awhile since we've shared a bed and I swore it would be the first thing I would do when you woke.\"\n\n\"Go on admit it, you've missed me.\"\n\nHer eyes sparkled and I knew I was in for it now.\n\n\"Yes husband of mine, I've missed the snoring, the stealing of the covers in the middle of the night and your cold feet on warm parts of my body.\"\n\nThis time I laughed, \"You sure had that stored up for awhile.\"\n\nHer hand came to my face and her nose now touched mine, our lips joined and her tongue was quickly in my mouth. Startled I opened my eyes to see hers shining right back at me.\n\nWhen she came up for air I asked. \"How could you take advantage of a cripple like that?\"\n\n\"Oh that's easy, I bribed the nurse to look the other way for an hour. So I figure I have a good forty odd minutes left to torment you.\"\n\nI could actually laugh and it didn't hurt all that much, we hugged and kissed a lot for most of those forty minutes, the temptation was there for me to go exploring and since I could clearly see Amelia's nipples straining against the material. I knew all I had to do was pull on the zip of her dress.\n\nSadly reason won out over desire, the thought of starting something I knew I couldn't finish and leaving Em hanging wasn't something I could do to her. If nothing else we both just needed the connection back to begin with. Sarah knocked, opened the door and smiled as she even came over and helped Amelia off the bed to make sure she didn't pull out a tube as she did. My wife skipped to the bathroom while I watched her movements.",
        "\"Sarah I'm going to need to speak to Shelby, I need Em out of the way when I do.\"\n\nBoth understanding the reason why Sarah just nodded her head and went back to the nurse's desk to call Shelby. Two men in suits turned up with Shelby later that afternoon, Sarah took one look and scooped Amelia into her arm and told her they were going for a long cup of coffee. Amelia went to protest but the look on Shelby's face as well as the two men stood behind her made her think twice.\n\nShe allowed herself to be led to the canteen, her body may have been there but her mind was still with her husband.\n\n\"They need to de-brief him Em, I've held them off as long as I could which wasn't difficult seeing the condition he was in but they need answers Em and he can't have you there when he does.\"\n\nEven when both sat in the canteen both minds were elsewhere.\n\n\"I'm his wife I should be with him.\"\n\nAmelia went to get up, a hand came to hers and held her, she looked at her friend and she shook her head. Sarah finished her coffee and stood pointing to the door leading to the grounds when she did. As they walked Sarah told her of her husband and his time with the Rangers and both tours in Vietnam. She also talked about her time in Afghanistan and when she volunteered for the forward medical bases instead of allowing the roster to allocate who goes there.\n\n\"I love my husband Em, I truly do but we both know he keeps secrets from me.\"\n\nSarah smiled and a small giggle passed her lips which caused Amelia to look at her friend.\n\n\"Hell I have a higher security clearance than he ever had and yet I still don't know some of the things that happened to him over there, because he doesn't want me to know. Aiden can't have you with him while they de-brief him Em because his afraid.\"\n\nAmelia was set to defend her husband when Sarah sat on a bench overlooking the pond, the water carried the sounds of the ducks splashing about over on the far side of the pond.\n\n\"Henry admitted to me his done things to protect his men and get as many of them home as possible, things that in the cold light of day he thinks I would judge him on. His heart tells him I would never do that but his head won't ever give his heart that choice.\"\n\nOnce again Sarah took Amelia by the hand and held it tight before looking her directly in the eyes.\n\n\"Aiden is telling Shelby those secrets as we speak because he has to Em; maybe someday he will tell you but please don't ever pressure him for them. He loves you so much and he's just scared that if he does then that love will be replaced with hate and his heart won't ever recover from that.\"\n\nThis time both sat and watched the ducks, Sarah left any further conversation to her friend; even she wasn't prepared for what she said next.\n\n\"What did you do to him when you were over there?\"\n\nSarah's own memories rushed back to when the Seal team placed the stretcher on the ground in front of her and she had to choke back a cry. Sarah told her friend of how she and the corpsman placed a tarp over themselves so they could get a light on Aiden. His injuries were so extensive that he needed to be operated on now or he would never make the journey to the helicopters.\n\nWhen she went to talk to the Lieutenant and the Seal commander both said that they had their orders and those were that she was to do what was needed to keep him alive. So many men's lives were in her hands from then on, all knew that if found they would make a stand and fight. The two men in front of her knew why and yet they still agreed to this mission and both understood that Sarah needed to operate on Aiden just to keep him alive.\n\nWith a nod of all three heads Sarah went back and pulled the tarp over them once again. It was clear to see that the corpsman was ready for what they were about to do, but then again kneeling on the side of a mountain either side of a stretcher with green filtered lights attached to their heads and a tarp over them wasn't exactly a regulation operating theater; that was for sure.\n\nThis was a combat zone, she had to figure out what to fix now to stop Aiden dying in transit and also figure out what she could leave alone until they could get him into a real hospital...and do it all in the dark.\n\nThe intubation tube was the first priority. Getting a stable airway was critical. Aiden's face was so swollen and throat so bloody from his beatings that the corpsman made three attempts to get the tube into his lungs before Sarah took over. All she could do was follow the bubbles to figure out tube placement through the bloody mess.\n\nThe corpsman secured the airway and breathed for Aiden, supplying much needed oxygen. Sarah inserted two central lines into the only undamaged areas she could find - one in his right shoulder and the other in his left groin for medication, fluids and blood replacement.\n\nThe chest tubes were a must to drain the blood and re-inflate his lungs. She located his nipple and followed the imaginary line to the side of his chest. There she made a one inch incision along the rib. She then slid the large tube and its reinforcing rod over the rib and poked it into the chest cavity. There was a resounding gush of blood and air indicating she was through the chest wall.\n\nThe corpsman acknowledged the bagging had become easier and Aiden immediately started to pink up as the pressure was released. She placed a one-way valve on the end of the tube and secured the whole assembly by sewing the skin around it. The procedure was repeated on the other side.\n\nThe lieutenant pulled two of his strongest men from the line to act as stretcher bearers, when the Marine in front picked up the stretcher, Sarah attached two units of blood onto his pack\n\n\"I could list his injuries for you Em, but that one task alone could take about half an hour. They would range from, closed head injuries, multiple broken ribs with fluid on the chest. Liver and spleen lacerations, fractures, that was one heck of a bar brawl he was in Em.\"\n\nAmelia sat and listened, understanding more when Sarah went into a few details, not to mention the attempt at humor. Yet something still felt off about this conversation, her friend was being more honest with her than perhaps she should and yet she still felt an undercurrent of hesitancy about her. Born of frustration or a need to know perhaps, she challenged Sarah.\n\n\"What is it you're not telling me?\"\n\nSarah smiled and patted her friend on her knee.\n\n\"Remind me never to play poker with you.\"\n\nBoth smiled and Sarah felt even closer to her friend at that moment, she just hoped that Em could cope with what she was about to say.\n\n\"Aiden wasn't alone in his cell Em. Carol was with him.\"\n\n*******\n\nI watched both the suits pack up and leave, Shelby waited until the door closed once again before her eyes met mine.\n\n\"Well that was fun.\"\n\nBoth giggled, Shelby then brought Aiden up to date on what was happening with Tessa, she quickly glossed over the confrontation in the boardroom with Mitchell Carter. Aiden was impressed with his friend; she was going to go far within the Department that was for sure.\n\nShelby got up and said that she would talk again when he had rested before leaving his room. Carol still sat on Amelia's bed watching and saying nothing, she smiled when I looked at her.\n\n\"Why are you still here?\"\n\nA sadness came to her. I had never seen that from her and I genuinely worried about it.\n\n\"I will be leaving very soon my friend; I'm just waiting for you to decide.\"\n\nRemembering she had made a similar comment before, I asked her what I was going to decide. That sadness came to her again and other than tell me that Amelia was about to enter, our conversation was once again over. When I looked towards the door Em was watching me through the observation window, she came in when she saw me looking at her.\n\nShe sat first before her hand went to mine.\n\n\"Are you ok?\"\n\n\"Other than a great big headache I'm fine.\"\n\nFor the first time ever with her husband she was afraid. Not of him, but of the answer he would give her if she asked the one question pounding at her thoughts as she looked at him. Chocking back the fear she looked deep into his eyes.\n\n\"Honey, why didn't you tell me about Carol?\"\n\n\"Carol kept me alive while I was in that shit hole Amelia.\"\n\nAmelia understood her husband answer but pressed on, \"So why is she still with you?\"\n\nI couldn't help but look at Carol sat on Em's bed just then, Amelia caught me doing it and held my hand tighter.\n\n\"She says she's waiting for me to decide.\"\n\nAmelia now understood, she looked towards her bed just as Aiden had. She nodded her head and silently thanked her friend before standing and leaning over her husband and kissing his forehead.\n\n\"Well I'm taking away your choice to decide my love. The only way you get to die is when I finish fucking you to death.\"\n\nWith purpose in her stride she went to find Sarah.\n\n*******\n\n\"Sarah he's dying.\"\n\nThose three words made Sarah look up from the report she was writing her mind totally stunned at what her friend had said.\n\n\"No Em he's not. I've just gone over his all his charts, his fine.\"\n\nAmelia stood her ground, shaking her head vigorously.\n\n\"You've missed something, find it because he's going to die real soon.\"\n\nThis time Sarah stood in front of her friend and guided her to a seat next to her desk.\n\n\"Em what's going on?\"\n\nAmelia had no choice, she told Sarah of the time she was seventeen. Carol and she went to visit an aunt who had been sick for a week. They talked for close to an hour before both sensed she was getting tired.\n\n\"Sarah, as we got ready to leave, my aunt told me that she gets to decide when she dies.\"\n\nSeeing that Sarah still hadn't understood Amelia tried again.\n\n\"It's why Carol is still here, something in Aiden is going to kill him. Believe in ghosts or not but only Carol and I were there when my aunt said that.\"\n\nFeeling that Sarah was just humoring her Amelia's own frustration reached its limit.\n\n\"Dammit Sarah stop thinking that everything is about science. Not everything is black and white. Carol is waiting for Aiden, she took a job on to protect him and she will do the same when he dies, and yes he is going to die because you have missed something.\"\n\nAlthough a little stung by her friend's remark Sarah relented, she was just as confused as to why she accepted that Carol was with Aiden so quickly. She nodded her agreement and both the nurse and Sarah went to work giving Aiden every test conceivable. Although some of the equipment wasn't up to specialist standards, it was good enough that by late evening Sarah had to apologies to Em.\n\nBy the next morning a helicopter transported Aiden to an army airfield where a medical transport was waiting to take Sarah and Aiden to Walter Reed. Between Shelby and Sarah they already had a neurosurgeon on stand-by when they got there. When news filtered down through the department, new get well cards replaced old ones on the 'Aiden's updates' board.\n\nAmelia watched as people placed cards on the board, most knew who she was and most of the women gave her a hug and what little in the way of words of support they could offer. She heard a helicopter land on the pad but paid little attention to it, Tessa's quickness of step intrigued her though.\n\n\"Good I've finally found you. Get your coat and enough clothes to last a week.\"\n\n\"Why?\"\n\nTessa rolled her eyes before grasping her friends hand and both headed towards the apartment.\n\n\"Your transports here, they have Aiden on the table as we speak. By my best guess you may just make it to his room as they wheel him out of surgery.\"\n\nTessa had trouble keeping up with Amelia after that shared piece of information. Just before Amelia boarded the helicopter Tessa handed her a card. Confused she looked at it again.\n\n\"You go there with powerful friends Em. It was the Whitehouse that sent the helicopter you're about to leave in. Senator Chadwick has already been on the phone to Walter Reed and told them you're there not only because of your husband but because the President wants you there.\"\n\nEven stunned she again looked at the card. Tessa waited for her friend to look at her once again before she continued.\n\n\"Memorize that number Em, when you know it off by heart then destroy the card. If you ever find yourself up against a brick wall again, then use that number. You will always find a friend on the end of the line Em.\"\n\nWith that Tessa gave her friend a quick hug and pushed her towards the waiting helicopter.\n\n*******\n\nSarah watched as the helicopter landed, Amelia quickly joined her friend as both headed into the main building.\n\n\"The Berry Aneurism was at a critical level Em; he's in post-op now and resting, they have your room ready.\"\n\nShe looked at Sarah confused, and she realized what she had said and frowned at Amelia causing her confusion to deepen so Sarah explained and tried hard not to sound like a doctor when she did.\n\n\"A Berry Aneurism, it's a weakening or ballooning of a blood vessel in the brain. It was about to burst.\"\n\n\"He is ok?\"\n\nFor the first time in two days Sarah smiled, she nodded her head as both walked into the main building. Sarah took Amelia to her room and gave her friend just enough time to put her bag down before both left to see Aiden.\n\nThe tubes going into him and the machines giving off the occasional beep scared Amelia and tears welled up in her eyes. Sarah held her tighter reassuring her but through the tears she watched Carol as she smiled one final time at her friend. Carols lips didn't move and yet her friend could hear her.\n\n\"I will see you both again when its time my friend, until then love him.\"\n\n\"Thank you for my husband Carol, he has my heart but you will always be in my thoughts.\"\n\nCarol smiled one more time before she faded from sight.\n\n*******\n\nThe nurses giving Aiden bed baths noticed the scars but none commented on them, 'Mrs. Smith' sat and watched everyone come and go like a hawk she was polite and talked to the nurses and doctors alike but any medical needs were directed to Lieutenant Colonel Sarah Michelson. It was still two weeks and endless tests before Walter Reed allowed 'Mr. Smith' to return to where ever he had originally come from. All paperwork regarding the patient was sent to Senator Chadwick's office.\n\nBetween Tessa and Harvey Townsend all electronic evidence of Aiden's stay at Walter Reed vanished less than an hour after the helicopter left the grounds. A notice once again went on the board that Aiden would be returning later today causing another influx of cards being attached.\n\n*******\n\nI was only in the clinic for a week after my return, the headaches a thing of memory. Sarah would continue to do daily check-ups and eventually decided I was on the mend.\n\nThe Department could remove the room built for Aiden and return him to his apartment for his three months of rehabilitation. It was left to the physiotherapy people to get wasted muscle back and then my final check-up with Sarah before I was deemed fit enough to return home.\n\nHome, now that was a word I liked to hear. Back to Parkers Island and pick up a normal life once again. I even made myself a calendar and ticked the days off, Sarah would always join Em and I on our evening walk of the grounds. Their was no undercurrent to any of our conversations, we all looked forward to going home, sometimes Tessa would join us but the new project she was on often kept her in the office until late evening.\n\nMe still being me, I did warn her of the last time she did stuff like that and even threatened to let Lauren take her on a road trip if I see her going that way again. She had the decency to blush and that made us all laugh, I was choked up when Em took me to see the Aiden's update board. Between us we took down the cards and I replaced them with a personal note from me thanking everyone for their support and kind thoughts.\n\nThis time Shelby turned up with Sarah, we were all packed and I even got to hug my boss and thanked her for looking out for Amelia. We let Sarah go at the ferry dock she had been away for close to five months and she told us both she planned on a lot of catch up with Henry, once she takes the house phone off the hook. Em and I had lunch at the diner; both of us went beet red when we got a round of applause from those that were there.\n\nBoth of us got to the florist before she closed up shop and we went to pay our respects to Carol and Madison, Martha met us there. We told her about Carol, I knew she would share what we told her with her husband. This time Matriarch never made an appearance, just a mother and a wife who understood what her child had done. As the day slowly ended and the sun shared its last rays Amelia and I helped Martha stand.\n\nWe watched hand in hand as Martha squatted next to Carol's headstone, placed her hand on it for support and kissed it. We both understood why."
    ],
    "authorname": "markelly",
    "tags": [
        "afghanistan",
        "marines",
        "kidnapped",
        "prisoner",
        "doctor",
        "surgery",
        "blackhawk",
        "department"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/parkers-island-ch-04"
}