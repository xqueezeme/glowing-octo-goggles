{
    "title": "The Fall Ch. 08",
    "pages": [
        "Lydia pulled up at the front of the O'Sullivan farm the Tuesday after her house purchase settled. She was here to speak to Anna. \n\nThey'd originally organised to meet at Toowoomba, but Anna had rung to let her know she'd had a bad morning. She'd wanted to cancel. Lydia, who'd had to hype herself up to drive to Toowoomba and had in fact already left home by the time Anna called, wasn't prepared to put things off for another day. She told Anna she'd come out to the farm.\n\nShe'd only ever been here for the Sunday lunches and without the numerous cars and visitors to attract her attention she could see just how vast it was. Beautiful, too. She stared at the big Queenslander as she approached and tried to figure out where Dylan had fallen. There were no signs that anything was amiss. Everything seemed just as it had always been. \n\n'It was around the back,' a voice called from the veranda.\n\nLydia startled. 'Kyle.'\n\nHe walked down to the stairs and headed around the to the rear of the house, gesturing for her to follow. She scurried guiltily behind him. \n\n'There,' he said, pointing to the roof. 'That's where he fell from.'\n\nIt wasn't high up, only four or five metres. How had he managed to hurt himself so badly? She tried to imagine Kyle falling and knocking him over. Did they scream? Had Dylan had any warning? He'd never spoken to her about the accident and she hadn't dared ask.\n\nShe reached into her purse for her cigarettes. She took one and offered the pack to Kyle. He accepted one with thanks, and she lit both their smokes.\n\n'I should stop bumming cigarettes off you,' he remarked.\n\n'I probably owe you one for the maintenance report you did for the solicitor. Thank-you.'\n\n'You're not the one who's indebted.' He said as turned to her, his dark, almost black, eyes settling on her. 'My mother's asleep, but it's money that she wants to discuss with you. Compensation. She wants to know if Dylan is going to sue.'\n\n'You'd have to ask him.'\n\nHe gave a short, sharp nod of understanding. 'I can appreciate that, but she still wants to speak to you. Come inside. I'll wake her up.'\n\nThere were stairs at the back of the house and she followed him up. He wore guilt like a noose. She wondered if he'd started drinking again. \n\nHe answered the question by asking her if she wanted a gin and tonic. When she shook her head, he gave her an unrequested glass of water and made himself a rum and Coke. He finished it in under a minute and immediately poured himself a second. \n\n'Where's your father?' she asked.\n\n'Hospital. His heart is failing.'\n\n'Oh God, I'm so sorry.'\n\n'Me too,' he agreed. \n\nHe drained his drink and returned the rum to the cabinet, and the Coke to the fridge. She remembered saying something to Anna at the wake, about Cora being the Princess bride. It was a cruel thing to say, but looking at Kyle, she understood how unwittingly insightful she'd been. He didn't need a novelty, least of all at this point in his life.\n\nKyle had gone to see Dylan in hospital a while back, and she'd left the room to give them time to talk. She'd known, deep down, that it wasn't something she needed to be privy to. Kyle had looked no happier when he left than when he arrived. He was a deeply troubled man. Dylan, on the other hand, had seemed relieved. \n\nBoth Lydia and Dylan knew the fall was an accident. A vile, horrendous accident, but an accident all the same. Dylan had dealt with it and was ready to move on. He'd spend his time alone in hospital working his way through his grief. With each day he was becoming more positive, and more enthusiastic about life. \n\n'Maybe you shouldn't wake your Mum,' Lydia said suddenly. 'I really can't talk to her about what Dylan's going to do. It's not even appropriate to ask me.'\n\n'She's dying,' Kyle said. 'She's not well enough to travel to Brisbane. Both she and my father are both going to be gone within a year. They want to get the matter sorted out.'\n\nSo he knew about his mother's cancer. Anna must have told him. Maybe the effects of her illness had become impossible to hide and she'd had no choice.\n\n'You knew,' Kyle guessed. 'You knew, didn't you? I didn't. I only found out a few weeks ago. I paralysed Dylan, Cora miscarried, and now my parents are dying.'\n\nHe went back to the liquor cabinet. Lydia stood in the kitchen, stepping uneasily from one foot to the next. What was she supposed to say?\n\nKyle poured himself another drink. 'You sure you don't want one?'\n\nShe nodded.\n\n'Christ,' he remarked. 'I'm back to being the only soak in the district.' He took a sip and gave her a wry, tired smile. 'I should go and wake my mother.'\n\n'I'm sorry,' she blurted out. 'I'm sorry about your parents. Truly.'\n\nHe shrugged. 'I'm sorry about Dylan. What I wouldn't give to fix him. All of the favours he did for people... he'd give the shirt off his back. I took advantage of it. I'm sorry.'\n\nBefore she could respond, he went to rouse his mother. She picked up her phone and checked her work emails. There was nothing of note there. \n\n'Lydia,' Anna greeted tiredly.\n\nLydia looked up. Anna was rail thin, and her skin was dry and grey. Her hair was limp, there were bags under her eyes and she was wearing an old, peach tracksuit. The change was shocking. The decline had been far more rapid than anything Cyril had experienced. \n\n'Hi,' Lydia said meekly.\n\nKyle led his mother to the couch, and told them he'd make coffee. Lydia stared at mother and son. They were unusually, but not unnaturally, close. There was nothing sinister or awkward about their relationship. She wondered how Kyle would cope when Anna died. Her guess was 'not good'. \n\nShe and Anna were given coffee and Kyle made himself his fourth drink of the hour. He caught Lydia staring at him and raised his eyebrows at her. She shrugged. She was actually impressed at the amount of alcohol he could consume and still appear sober. \n\nAnna noted the exchange between the pair, and asked her son how much he'd had to drink.\n\n'This is the second,' he lied.\n\nAnna didn't believe him. She turned to Lydia for answers, but Lydia merely shrugged again. There may have been no honour amongst thieves, but she felt an odd camaraderie with Kyle. She knew how it felt to fuck up. To have done things that would never be forgiven. To wake up every morning and hate yourself for doing the unthinkable.\n\n'How's Dylan?' Anna asked.\n\n'Thin,' Lydia replied with a faint smile. 'It gave me an excuse to go and buy him some clothes. He's better dressed as a paraplegic than he was before.'\n\nAnna said 'I see', sounding more shocked than amused.\n\nLydia wished she'd stayed home. She still found Dylan cute. She still wanted to kiss him, hug him and have sex with him. It was an attraction that seemed to horrify people. \n\nOne of the nurses had caught her lying in bed with him, kissing him. There'd been no nudity, and although she'd been horny as hell, there had been nothing sexual going on, but the nurse had still told them off. They'd been told to be more respectful. Dylan had a room mate. There were people coming and going. Nobody needed to see them having intimate relations.\n\nLydia had wanted to point out that the curtain had been drawn and they were only kissing, nothing else, but she'd been too humiliated. She was tired of the hospital visits. It felt as if Dylan no longer belonged to her. She could only see him when they told her she could, and even a simple make-out session was off the books.\n\nThe worst part about the nurse's reaction was the expression on her face when she'd finished her angry spiel. She was disgusted, not so much at what they were doing, but the fact that Lydia had wanted to do it. The nurse worked with paraplegics, yet seemingly couldn't understand why someone would want to sleep with one.\n\n'I bought a house,' Lydia added. 'He's coming home for a visit on the weekend. His parents are coming down, too.'\n\n'That'll be nice,' Anna remarked.\n\n'I hope so. His parents said they'll bring Ben - his dog - with them. He doesn't know that yet. About Ben, I mean. He knows his parents are staying,' she rattled off nervously. 'Maybe you should come down sometime. There are three bedrooms. You're welcome to stay the night.'\n\n'No, no, we've caused him enough harm,' Anna argued. 'That's why I wanted to see you. I want to know what sort of compensation Dylan's seeking. It's crass to ask, isn't it? But I need to know. I need to get this sorted out now, before Ed and I die.'\n\n'You'd need to ask Dylan.'\n\n'Surely he's said something to you?' Anna asked, her tone pointed.\n\nLydia didn't immediately pick up on what Anna was actually asking. She was so accustomed to hearing Anna discussed as if she was some sort of modern day Saint that it didn't occur to Lydia that the older woman might be sceptical of her motives in staying with Dylan.\n\nLydia shook her head. 'No. We talk about his future. We're trying to make sure my house is going to be suitable for him. We're...'\n\nShe trailed off as the realisation hit. It was insulting, wasn't it, that Anna thought she was with Dylan in the hopes he'd get a payout? Lydia understood that she'd been invited here because Anna felt she was sufficiently greedy to both know what Dylan was after, and brash enough to ask.\n\n'You think I'm with Dylan because I can see a big payout coming,' Lydia stated.\n\nAnna appraised her carefully, but didn't say a word.\n\n'You do, don't you?' Lydia challenged.\n\n'I don't know,' Anna admitted.\n\nLydia stared at her in shock. 'Are you off your rocker?'\n\nThere was silence.\n\nAnger and frustration and resentment welled inside Lydia. How dare this stupid bitch look her in the eye and insinuate she was only after money, when she'd set up a goddamn gold-digging beautician with her son?\n\n'Well you're wrong. You're all wrong. I loved him before the accident, and I love him now. I'm sorry if that's too hard for you to understand,' she said, quietly vicious, her rage spilling over into her words. 'Although maybe, Anna, following the money is the only thing you truly understand. After all, both you and Cora moved out here for a reason, didn't you? And I doubt it was love.'\n\nShe grabbed her bag and stood up. She'd left the house and was halfway to her car when Kyle grabbed her arm. She spun around, wanting to be angry with him, but finding herself utterly incapable of rage. \n\n'Please,' he said softly. 'Don't go. Not yet.'\n\nShe threw her arms up in the air. 'She's ridiculous. She hates me. She needs to speak to Dylan, not me. This is his business.'\n\n'I know. I tried to tell her that.'\n\nLydia knew she couldn't leave. Not yet. She reached for her cigarettes and offered the pack to Kyle. He took one, and she lit it for him.\n\n'It's me she's angry at,' he said, exhaling a thick stream of smoke. 'She can't bring herself to say it, or admit it, but it's me, not you. You're just the target.'\n\n'Great.'\n\nHe laughed hollowly. 'I should tell her that Cora and I have decided to split. That'll put me back in the bad books.'\n\n'I didn't realise that. I'm sorry.' She bit her lip. 'I'm sorry for insinuating she only married you because of the farm.'\n\n'Don't be. It's the truth.' He took another draw. 'I should never have married her. There's no love. Someone saw me follow you out to Cyril's house that afternoon you came back to do the maintenance report, and a rumour spread that you and I were having an affair. Cora asked me if I'd slept with you. I told her there was utterly no way I'd ever cheat, and she just said 'well if you do, be more discreet'.'\n\n'That's depressing,' Lydia agreed.\n\n'It is,' he agreed. 'And for the record, I wasn't hitting on you that day.'\n\n'I know.'\n\n'It's still embarrassing,' he laughed awkwardly. 'Sorry.'\n\n'It's okay. At least you told me what happened. Nobody else did.'\n\n'Maybe Dylan would have got in contact with you.'\n\n'I doubt it,' she replied. She sighed heavily and reached into her bag. 'I should text him. Let him know that your Mum wants to know how much money he wants. I know he's seen a lawyer, but I haven't asked him the details. It's not really my business.'\n\nKyle nodded. 'I expected he would. He's going to need to sue. He can hardly go back to being a mechanic.'\n\n'I'm sorry.'\n\nKyle laughed hollowly. 'No, I'm the one who's sorry.'\n\nThey finished their cigarettes in silence. \n\n'I should be off,' Lydia said. \n\n'Thanks. Tell Dylan I said 'hello'.'\n\n'I will.'\n\nShe drove back home, to her new house. She parked her car in the massive three bay shed, leant her head on the steering wheel and wept.\n\nNobody ever asked her how she felt. Nobody ever said 'hey, how are you coping with having your own dreams dashed?' It was as if her love for him was unworthy of consideration, and her own hopes for the future had been irrelevant. \n\nShe felt very alone. Tired, alone, and scared of how Dylan would cope living in Brisbane.\n\n~~~~~~~~~~~~~~\n\nLydia's house was not at all what Dylan had expected. She'd described it as a monstrosity, but it looked alright to him. \n\n'Your Mum cleaned it from top to bottom,' Lydia whispered conspiratorially. 'Your father mowed, whipper-snippered and sprayed the weeds.'\n\n'They had seven kids and ran a farm,' he reminded her. 'They're not very good at sitting down. They need to be doing something all the time.'\n\n'They're obviously not very good at lying down without doing something, either, seeing as they had seven kids,' she giggled.\n\nHe glared at her. 'Lydia.'\n\n'What?'\n\nHe rolled his eyes. 'They're. My. Parents,' he spelt out.\n\nShe laughed harder. His father asked if there was a problem and Lydia retold the conversation they'd just had. His father laughed. Of course he did. He liked Lydia.\n\n'After Dylan - he was the fourth - Elise's parents bought us a television for our bedroom,' his father told her. 'They thought it worked, because the next one didn't come along for another four years, but I never had the heart to tell them the gap was only because Dylan refused to wean. We had to tell him he that he wouldn't turn three until he gave up the titty. He ended up celebrating his third birthday three weeks after the actual date.'\n\nLydia convulsed with laughter. 'Dylan, you never told me that.'\n\nHe couldn't imagine why not. \n\nAll the same, it was wonderful to be out of hospital. He'd been worried about how he would cope living in a normal house, but Lydia's place was wheelchair friendly. There were steps that led to the front door, but a ramp that led into the laundry, and ergo, the house, and it had proven to be easy to negotiate. The kitchen was an open 'U' shape, someone had installed a bar next to the toilet, and while the bathroom wasn't crash hot, he knew he could make it work. \n\nBen followed him around as he inspected their new home. He hadn't expected to see his dog, but he was pleased he was here. Lydia told him there was a dog park nearby.\n\n'A what?' he asked.\n\n'A dog park. You know, those places where you can put your dog in a yard with other dogs and let it run around off leash so it can burn off some energy.' She stared at him incredulously. 'How do you not know what a dog park is? Ben knew what to do. I took him down at lunchtime and he had a play with a Great Dane.'\n\nDylan couldn't contain his laughter. Lydia realised he'd been messing with her, and whacked him on the arm. That made him relax. He'd needed to know that despite being in a wheelchair, she didn't pity him. Sometimes it was hard to tell what was going through her mind. \n\n'Come here,' he said, pulling on her arm. 'Kiss me.'\n\nShe leant down and kissed him. 'I love you.'\n\n'And I, you.'\n\n'Are you horrified by my shitty house?'\n\n'It's not shitty. The shed is great. Stop being paranoid, Lyddy. I'm really looking forward to living with you.'\n\nHe was also looking forward to trying to have sex with her, but he figured it would be crass to point that out. He was prepared for the worst, but hoping for the best. He consoled himself with the fact that even when he was fully functioning, he'd struggled to bring her to climax through sex alone. He'd usually had to finger her, or go down on her, or pull out her vibrator, all of which he was still capable of doing.\n\nIt was good to be out of hospital. Good to eat a home cooked meal, and to breathe fresh air, and to test out how much he was capable of. \n\nThey went and saw the cars at Elizabeth Street after dinner. He saw people he knew, and met people he'd only ever known as internet forum members, and he began to think about finishing off the Charger. It was in the shed at Lydia's house, awaiting his attention.\n\nThere was a lot of background noise, with planes leaving from the nearby light aircraft airport, the goods train rumbling by, and proximity of their neighbours. When he sat on the porch with her that night as she smoked a cigarette he realised he could hear someone's television, and hear another neighbour's baby crying.\n\n'What are you thinking?' she asked him.\n\n'How happy I am,' he said.\n\nShe leant over and ruffled his hair. 'Liar. Is it driving you nuts? Are you regretting agreeing to live here?'\n\n'Why are you so worried I don't like it?'\n\nLydia shrugged defensively. 'It's not what I had in mind when I thought about buying a place.'\n\n'I'm really glad you didn't buy a flat,' he confessed. 'That would have been hard to adjust to, but the house is good. The shed is great.'\n\n'Are you planning on filling it with car parts?'\n\n'If you don't mind,' he admitted.\n\n'I don't mind.'\n\n'Lydia.'\n\nShe turned to him. 'What?'\n\nHe tried to find the words, but his brain failed him. Inside, his parents were sleeping. Outside, under a sky where light pollution cloaked the majority of the stars, a Cessna flew in to land. He reached over and touched her brilliant red hair.\n\n'I love you,' he muttered. 'I'm so sorry. Do you understand? I'm so, so sorry. It was so stupid. I didn't mean to do this to you.'\n\nLydia finished her cigarette and stubbed it out in her ashtray. 'We all do stupid shit. We'll get through it.'\n\n'Why do you love me?'\n\n'Why? I don't know. You're my fat country hick. Or, rather, you were a fat hick, now you're just a hick.' She gave him a lopsided grin. 'I like being around you. We like to do the same things - except for the cars, I'm not going to the speedway with you, so don't ask again - and I like kissing you. Why do you love me?'\n\n'All of the above,' he replied. 'Plus you have great tits.'\n\nShe giggled. 'Was it hard waiting out the period in between when you were weaned, and when women would let you suck on their boobs?'\n\n'Can we just pretend you didn't ever hear about that?' he muttered, disgusted. \n\nShe tried not to laugh and failed miserably. He glared at her, but that only seemed to make her laugh harder.\n\n'Sorry,' she apologised. 'We should go to bed.'\n\n'Are you going to get naked?'\n\n'Of course.'\n\nHe thought back to the afternoon he'd first taken Lydia to the shed. They'd sat on the couch together, him with a beer and her with a glass of water, and he'd barely been able to meet her eye he was that nervous about what she might want to do with him. Tonight was much the same, however mixed in with the anxiety was hope and lust and love.\n\nThey went to bed and lay down alongside each other. The winter air was cold and they snuggled into each other. She wrapped her legs around him, pulling him closer and closer. He reached down to stroke her furry little pussy. It felt just as good as he remembered, and he slipped a few fingers in amongst the folds of skin. She was soaking wet, and she straightaway started to grind against his hand.\n\n'Do you want oral?' he whispered.\n\n'Are you kidding?' she asked. 'I'd love it.'\n\nThey wriggled around so that she was lying on her back and he was lying on his stomach, wedged between her legs. He parted her labia and gently nibbled at her sex. It was obviously not to her liking, because she pushed his head harder against her. ",
        "'Uh, like that,' she encouraged him. 'Just like that. That's good, really good.'\n\nHe had no problems following instructions, particularly when the results started to speak for themselves. Lydia grabbed him by the hair and began to grind against him. \n\nHe felt very normal, very capable. Her bed smelt like the washing powder she preferred, her skin smelt like Nivea, and she tasted as good as he remembered. He was no different to any other man, going down on his girl on a Friday night. \n\n'Uh, Dylan, nearly there,' she warned.\n\nHe gave her the thumbs up. The orgasm was the best bit, wasn't it? He could feel her bare feet on his back, and she was alternatively pulling and pushing him around, so he knew she wasn't lying about being close. \n\nShe gave one last, desperate whimper, before grabbing at him, smashing her cunt into her face, and letting out a string of expletives. He was pleased. Horny, too, because irrespective of how his body functioned this days, his mind functioned just as it always had.\n\n'Oh shit, Dylan,' she swore, pulling him up. 'That was embarrassingly quick, wasn't it?'\n\nHe chuckled and kissed her neck. 'Kinda like me when we first met.'\n\n'No, no, I actually think you had a bit more staying power than that.'\n\n'Lyddy, I love you so much. Give me your hand. I want to see if I'll get hard.'\n\nThey played around with him for a while. He could get hard, and as long as she kept touching him he stayed hard, but he didn't orgasm. It was disappointing but not entirely unexpected. Maybe thing would improve over time. He was still fairly anxious about his loss of manhood.\n\nWhen he'd had enough, he spooned her and ran his fingers through her hair until she was fast asleep. He knew he was a lucky man. She was crazy, she was beautiful, and most importantly, she loved him for him.\n\n~~~~~~~~~~~~\n\nElise's fourth child was released from hospital three and a half months after he was admitted. She wanted to yell and scream at the men who had broken her son. Dylan had always had a good heart. He was a good man. He didn't deserve to be in a wheelchair.\n\nShe couldn't bear to look at his baby pictures. He was born eleven months after his brother, and she'd always felt he missed out on her attention. His infancy had passed in a blur. Before she knew it, he was a child, then a teen, then a man. Married. Divorced. Crippled.\n\nOh shit, she was angry. In her youth she'd been religious, and she'd married the son of a pastor, but over time, her faith had changed. She no longer believed in the God that was presented in the Bible. She no longer felt that she or her children should be constrained by sometimes archaic rules. Nonetheless, she prayed long and hard, begging God to rid her of the rage that plagued her. It wasn't healthy.\n\nTwo weeks after Dylan was released, Elise received a phone call from the tenant who was renting Dylan's land. There was an issue with the septic system connected to the shed's bathroom. Could she come and have a look?\n\nShe knew nothing about the septic system. She rang Dylan, who thought he knew what the problem was. He'd go out with Lydia tomorrow morning to fix it. Elise asked him if he thought he was still capable. Dylan considered her question, and admitted he might ring Kyle and ask him to come out, too.\n\nThe four of them found themselves at the property shortly after eleven on Sunday morning. Elise didn't understand what needed to be done, but between Dylan, Lydia and Kyle, the problem was solved.\n\n'Mate, I'm impressed you got parts so quickly,' the tenant told Dylan.\n\nDylan grinned. 'I live in Brisbane, mate. Bunnings opens at nine.'\n\nElise thought they were done for the day, but on the way back to their cars, Kyle asked them if they wanted to drop around for lunch. Of course. The O'Sullivan's always did Sunday lunch. Elise was never a regular visitor, because unlike most people in the community, she secretly disliked Ed and Anna, but she remembered her prayers to God, seeking help with her rage. She bit back her resentment, smiled at Kyle, and said she'd love to.\n\nShe'd known that Anna and Ed were both on the way out, but nothing could have prepared her for how ill they both were. They were shadows of who they once were. Elise, who was Anna's age, felt momentarily guilty about her own good health, before remembering exactly who this couple were and what they'd done, not only to Dylan, but their other actions, particularly Ed's, in the past. \n\nGod, she prayed, God, stop me from being so angry. Stop me from wanting to ask why they haven't sent a cheque to Dylan. Stop me from loathing them. Stop me from demanding to know why Anna secretly sneers at Lydia, because Lydia, for all her faults, has stood by my son. It's Lydia who'll end up bearing the financial brunt of Dylan's injury, and you and I both know Goddamn well that that's not right.\n\nWhy had Dylan ever decided to be friends with Kyle? Kyle was nearly a decade older than her son. He was weird. And, most definitely, still as much of an alcoholic as he always was. He drank alcohol the way most people drank water.\n\nMaybe she was being cruel. Kyle was a good man. He was as much a victim of circumstance as Dylan, only Kyle didn't understand either the circumstances, or his victimhood. All he understood was that he was trapped on a farm with a father who seemed remarkably adept at playing silly games.\n\nIt was winter and bitterly cold, and there was only a small gathering. After lunch, Elise and Lydia went inside to help Anna tidy up. Lydia was forcing herself to be bright and cheerful. She was in blue jeans, knee high boots and a black pea coat, and her face was white from the cold. Her tattoos and bosom were covered and if not for her hair, she would have looked like any other woman her age.\n\nElise liked Lydia. The younger woman wasn't particularly clean and tidy, and she smoked too much, but she never complained when Dylan's family came to visit, and she'd wordlessly accepted that her garage was going to be filled with car parts and tools.  \n\nShe was different to anyone Elise had ever known before, but not necessarily in a bad way. She just was who she was. Clearly Dylan liked her, too, because on his last home visit before release, he'd taken her off to bed ridiculously early in the evening. Elise had assumed he was just tired, and combined with the assumption that her son was now asexual, when his phone had rung, she'd opened the bedroom door to give it to him. The next morning had been more than a little awkward for all of them, and their door now had a lock on it.\n\nElise flushed red at the memory as she dried and stacked a plate. All of Anna's crockery matched. None of Elise's did. She had birthed too many children, and now had too many grandchildren, to have either the money or the inclination to have matching plates.\n\nKyle appeared at the door holding a carton of cigarettes. 'Lydia,' he said, holding the cigarettes in the air. 'Hopefully this makes up for all the smokes I've bummed off you.'\n\nLydia's face lit up. 'You actually bought me a carton? I was beginning to think it was just an empty promise. Come and have a smoke with me. I'm sicking of standing all by my lonesome.'\n\nThe two went out the front of the big house. Elise returned to drying.\n\n'I don't trust her,' Anna said.\n\nElise frowned. 'Who, Lydia?'\n\nAnna nodded and gestured to the front of the house. The scent of tobacco wafted in, and they could hear Lydia and Kyle laughing. \n\nElise wondered if Anna thought Lydia was flirting with Kyle. If so, it was a ridiculous assertion. Surely a woman could talk to a man, and vice versa, without it being sexual? And to be frank, Elise would have been flabbergasted if Lydia ever cheated on Dylan. She didn't have the personality for it.\n\n'You just need to spend some time with her,' Elise offered defensively. \n\nAnna didn't comment further. She just sat down and massaged her temples. Elise told herself to think nice thoughts. Anna was unwell. She didn't know Lydia. She didn't see what she was like at home. \n\nLydia came in after she'd finished her cigarette and started putting the dishes away. \n\n'Would you be careful?' Anna snapped at her. 'They're Spode.'\n\nLydia stood stock still. 'Sorry,' she apologised. 'I have no idea what Spode is, but I'm going to assume it's important.'\n\nIf Anna hadn't been on death's door, Elise would have leant over and slapped her. The stupid, stuck up bitch. Like she was any better. At least Lydia was never malicious. Lydia never went out of her way to hurt anyone. That was more than could be said for Anna O'Sullivan.\n\nLydia continued to put the dishes away, but very delicately and slowly. Elise thought that perhaps she should try talking to Anna about something non-controversial.\n\n'How is the farm going?' Elise inquired.\n\nAnna threw her hands up. 'The usual, only without a farm manager.'\n\n'What happened to your old one?' Lydia asked. 'It was Alan, wasn't it?'\n\n'He quit,' Anna snapped. 'He quit the day after the roof incident.'\n\n'I didn't know,' Lydia replied irritably. She'd obviously been pushed to her limits. 'You might remember that nobody bothered to tell me about the accident? Including you. You decided I was a drunk, and that gave you the excuse you needed to keep me in the dark. So I'm sorry if not knowing is offensive, but I'm not exactly up to date on what happens at your bloody farm, and at any rate, I always thought Alan was a relative of yours.'\n\nElise's stomach clenched.\n\nAnna glared icily at Lydia. 'I have no idea why you'd even think that.'\n\n'Well, Alan did kind of look like your husband,' Lydia replied. 'And he looked a lot like Kyle's son, Neal.'\n\nAnna turned to Elise. 'You stupid, nasty woman. I'd have thought you were beyond idle gossip.'\n\nElise stared at the elderly woman sitting at the table. She may have cancer, and she may be dying, and she might be popular in this community, but Elise had never liked her. Not from the day she arrived in town forty-eight years ago and set her sights on Ed O'Sullivan, who was rather inconveniently engaged to Elise's cousin Mary at the time.\n\nAnna had wasted no time worming her way into Ed's heart. The shamelessness of the pursuit had both shocked and enthralled the community, but somehow, rather than being viewed as the vixen, Anna somehow managed to win everyone's affections. When Ed broke off his engagement with a devastated Mary and took up with the schoolteacher, no one seemed to care.\n\nNo one except Elise and Mary. A heartbroken Mary had been sent to Sydney, to live with a relative who had a place in Liverpool, only returning to visit her family each year at Christmas. Mary continued to pine for Ed, and had Ed maintained some ability to act like a gentleman, she probably would have moved on, but Ed liked attention. He maintained contact with Mary, ostensibly as a friend.\n\nTwo years later, with his young wife at home suffering morning sickness, Ed headed out to a New Year's Eve party. Mary was also there; she'd come up to visit family for the Christmas break. Nobody noticed anything untoward, or any impropriety, but it seemed in hindsight that neither Ed nor Mary made it back to their respective homes that night. \n\nMary returned to Sydney early in the new year. She stopped making visits at Christmas, and nothing was heard from her until her parents were killed in a car accident a decade later. All of a sudden, she was back in town, with a husband and three children. If the older one looked uncomfortably similar to Ed, then it either went unnoticed or unmentioned. Besides, Mary's husband referred to Alan as his son, so why create trouble?\n\nMary and her husband remained in town for ten or so years. Farming was less romantic than Mary had remembered and her husband had envisaged. Unless you were wealthy or lucky, or a combination of the two, it had the ability to batter both bodies and bank accounts. By this stage they'd added another child to their brood, stretching it to four, and money was tight.\n\nAlan was nearly finished with high school and it was decided that Mary, her husband, and the three youngest children would return to Sydney. Alan would be left in Queensland. A subtle request was made to Ed O'Sullivan; employ the kid. If you're not going to acknowledge him as yours, at least give him a job. Take some of the financial burden off us.\n\nEd gave him a job and a home in an old shack on the property. As far as Elise knew, Alan still had no idea the man he thought was his father wasn't the one who had sired him. Nor did Kyle know that the man he worked alongside was his half-brother. The only thing Alan and Kyle knew was that they were enemies. Right from the beginning, Ed seemed to enjoy pitting them against each other.\n\n'Huh,' Lydia remarked, obviously managing to connect the dots. 'So I take it Kyle and Alan don't know?'\n\n~~~~~~~~~~\n\nEd and Anna O'Sullivan died two weeks apart. Lydia didn't give two shits about their passing. She didn't either funeral, although Dylan did.\n\nShe'd never really cared for Anna. She'd never understood why Cyril, and so many others, seemed to like her. Maybe she had a nice side. Maybe Lydia had only seen the bad side, a darkness bought on by cancer. It was possible. Lydia didn't spend too much time worrying about it. The woman was dead and gone.\n\nAll the same, she tucked away the knowledge of Alan's paternity, knowing full well she'd never reveal it. What was done was done and there was nothing to be gained from exposing old secrets. Alan had found work elsewhere, in a suburb a few miles away from the O'Sullivan farm, and Kyle took over management of the family farm.\n\nThe months passed and Lydia realised it had been almost a year since she went to Cyril's. She missed the old geezer. She'd never stop being grateful to him. For someone who hadn't been her father, and who hadn't even wanted kids of his own, he'd done a fine job standing by her and helping her out when times got tough.\n\nDylan now worked part time, in retail, in a car parts business. They paid him minimum wage, even though his being in a wheelchair didn't really impair him, and all other staff got a higher amount. It irked her but not him. He was just happy to be working. Secretly, she was, too. Living off one wage had sucked, and it had been annoying having him hang around the house all day while she was trying to work.\n\nBen approached and dropped a ball in front of her.\n\n'You stink,' she told him.\n\nHe wagged his tail happily. Lydia groaned. She knew she'd have to wash him. Dylan struggled to do it from the wheelchair, and Ben had an unnatural dislike of the hydrobath people. She changed into a bikini and old denim shorts, fetched his lead and dog shampoo from the laundry, and took him into the backyard.\n\nLydia tied the leash to the old Hills Hoist washing line and attached it to Ben. She turned on the hose, wet him, and rubbed a generous blob of shampoo into his long coat. \n\n'Nice arse.'\n\nLydia flipped Dylan the bird without bothering to turn around. He just laughed and rolled himself closer so he could watch her bathe his dog. She ignored the fact that he was staring at her tits, and finished washing Ben.\n\nThe second Ben was freed, he ran over to Dylan and shook himself. Lydia smirked with unbridled satisfaction as her lover was sprayed with water. \n\n'Aw, not fair,' Dylan complained. 'Come here, Lyddy.'\n\nShe wriggled onto his lap and kissed him. He smelt and felt rather good. He took better care of himself these days. He only looked like a caveman half the time, he'd lost the extra weight he'd been carrying, and the physiotherapy and rehab work he'd done had gifted him with a love of strength training. \n\n'Do you want to go inside?' she asked.\n\n'Would it be bad if I said 'yes'?'\n\n'Um, no. It would be bad if you said 'no'.'\n\nThey went inside. He went to the bathroom because he hated having sex with a catheter in, and she went to the bedroom. She propped herself up on an elbow and eyed off his biceps as he got into bed. \n\n'Do you think it's wrong to check out a paraplegic's arms?' she asked. 'You have really good arms these days. Your muscles are really defined. Same as in your stomach. You almost have a six pack.'\n\n'Kind of a pity about the legs,' he replied lightly.\n\nShe checked out his lower half. 'You look like you skip leg day,' she agreed. \n\nHe rolled his eyes. She laughed and buried her face in the pillow. She really should be nicer to him. He really did deserve a woman who wasn't continually teasing him.\n\nShe could feel him stroking her hair, and she turned around. His hazel eyes were filled with love, and the expression on his face melted her. All the same, she couldn't resist squeezing his bicep admiringly.\n\n'You really have a kick arse body,' she said.\n\n'Lydia,' he complained, resting his forehead against hers. 'Stop talking.'\n\nShe knew he was pleased, just as she knew it wasn't accidental that he now had guns to be proud of. He was self conscious about his body, and keen to make himself as physically attractive as he could. It was working. She was forever perving on him.\n\n'You're so gorgeous, inside and out,' she murmured, brushing her lips against his. 'I love you. I love you so much.'\n\nShe reached for a hair tie and tied her hair out of her face. She kissed and stroked his body, focussing on his cock, and when he was nice and hard, she mounted him. Sex was getting better and better. It wasn't just a physical thing, it was a very emotional thing. She adored him. She felt so close to him these days. \n\nSometimes she tried to imagine what it must be like living in his body. He could feel pressure on his legs and feet, but he couldn't move them much and he said sex was different. He was sensitive around the point of his injury. She'd lay in bed at times and try to pretend she had no feeling from the waist down. It was hard to comprehend. When she'd told Dylan what she was doing, he'd said that it was a difficult concept to grasp until you'd experienced it.\n\nShe rode him until she came. She'd put a lot of effort into learning how to orgasm through vaginal sex. She knew it was important to him, and as he had enough self esteem issues going on, she'd figured the least she could do was work out which positions were most likely to make her climax.\n\nOften he'd have an orgasm, too. Sometimes he even ejaculated, although that was much rarer. They didn't use contraception, although they weren't exactly trying to make a baby. If she ended up pregnant, so be it. If she didn't, they were okay with it. Maybe that would change one day and they'd want to do IVF. It wasn't something that was at the forefront of their minds right now, though.\n\nLydia climbed off, and knelt between his legs. She gave him head until he indicated that he'd climaxed, and she scooted up the bed to lie next to him. It was summer and it was hot. Air conditioning was due to be installed on Monday and she couldn't wait. She was so sick of sweating. Dylan, of course, didn't seem to mind the heat. He never had. \n\n'What do you want for Christmas?' he asked her.\n\n'Um...' she paused. 'I don't know. You?'\n\n'A night away with you sometime in the New Year. Dinner and all that shit. You know.'\n\nShe knew. He was pretty cheesy when it came to romance. It was cute, actually. She'd always wondered what it was like to be with a man who bought her roses, and boxes of chocolates, and stuffed toys, and now she knew. It wasn't half bad.\n\n'Anywhere in particular? Gold Coast, Sunshine Coast?' she asked.\n\n'No, you choose.' He replied. 'What do you want?'\n\nShe literally couldn't think of anything. She had everything she wanted in life. She stretched out her legs and stared at her feet. Her toenails were disgusting. She really needed to cut them.\n\n'No idea,' she admitted. 'I'll think about it and let you know.'\n\nThey laid together on the bed, hugging and kissing and talking. She had a new tattoo, a portrait of Cyril standing beside a prime mover, and Dylan traced his hands over it. Cyril's will was still being disputed. She'd been told it would probably take years to resolve. She chose not to listen when certain family member's discussed what they felt they were entitled to. They were entitled to nothing, absolutely nothing.",
        "'What are you thinking about?' Dylan asked. 'You're frowning.'\n\n'Cyril's will, and the fact that Christmas Day will be spent listening to two couples who think they're entitled to his money, and two who think that it was his money to leave to whoever he wanted.'\n\nHe kissed her. 'You can come to my family's Christmas, if you want.'\n\nShe shook her head. 'Nope. That would add fuel to the fire. Maybe next year.'\n\nHe kissed her again. 'That sounds good.'\n\nThe door to the bedroom had only been halfway closed, and they both turned to face it as they heard it swing open. Elise barging in one Saturday night had scarred them both. This time, though, it was only Ben.\n\nLydia lunged for her panties, which she'd tossed onto the floor, and pulled them on. The dog was an underwear thief. Just about every pair of undies she owned had been stolen from the washing basket. She was down to six pairs.\n\n'Maybe you could get me some underpants for Christmas,' she suggested.\n\n'I'll get you lingerie.'\n\n'Lingerie isn't underpants.'\n\nHe grinned. 'Nah, it's better. You look really hot in your red thong and bra, Lyddy.'\n\n'They're the most uncomfortable undies I own.'\n\n'I like them.'\n\nShe resigned herself to receiving something grossly impractical but very sexy for Christmas. She'd have to go to Target and buy herself some regular undies. Bloody Ben.\n\n'We should get up,' she said. 'You want to get stoned and watch Futurama with me?' \n\nShe was still off the booze, and was now a teetotaller, but she'd smoke with him on occasion. She found weed less addictive. And, at any rate, she mostly liked to be in full control of her faculties these days.\n\nDylan pushed himself into a sitting position. 'Sure.'\n\n~~~~~~~~~ \n\nDylan drove to his parent's farm on Christmas Eve so he could settle himself in before everyone arrived. \n\nIt was nice to return to the place he'd grown up, and yet by the time he was preparing to leave on Christmas Day, he was ready to return to his own place. He'd had enough of his younger nieces and nephews' questions and proddings ('Can you feel this Uncle Dylan? How about this? Or this?'), and everyone's insistence that he have something else to eat. He had a physiotherapist who would choke him if he gained weight, and besides which, he liked to stick to a predictable shitting pattern, and part of that was eating regular amounts at regular intervals.\n\nLydia understood his limitations, and she understood the consequences if he strayed too far from his routines. His family, as much as they loved him and he loved them, didn't. They still equated food with love. They tried to do everything for him. They out and out pitied him for having to live in suburbia.\n\nHe left the farm with three containers of blueberries and half a lamb. He didn't have the heart to tell them Lydia hated lamb. He promised to come back for a visit early in January.\n\nHe'd made it out the door and into his Charger when his phone rang. \n\n'Kyle,' he greeted in surprise. 'Merry Christmas.'\n\n'Merry Christmas,' Kyle repeated. 'I heard you were out visiting your folks.'\n\n'I was. I'm in the car now, just about to start the drive home.' \n\n'Sounds good. Hey, do you mind swinging past my place on the way back?'\n\nKnowing Kyle something on the farm had broken down and he wanted it fixed ASAP. Farmers. They never took a day off.\n\nDylan bit back a groan. He wanted to get home to Lydia. He missed her. He wanted to give her a Christmas kiss. He wanted to thank her for his Christmas present; two nights away at the Gold Coast in a swanky high rise apartment, and he wanted to commiserate with her about family Christmases.\n\n'No worries,' Dylan said. 'I'll be there in about an hour.'\n\nHe was still a sucker who couldn't say 'no'. \n\nHe drove towards Kyle's farm anticipating a night spent in a shed, under the light of a torch, trying to direct Kyle. \n\nAt least he was driving there in style. The Charger was finally finished, courtesy of his old workmates, who'd unexpectedly put together a fundraiser to help him finish off his car. When they'd handed him the cheque he'd come the closest he'd ever come to kissing another man. The Valiant was now mechanically faultless, painted orange and black, and perfectly modified for his use. Sure, it had sucked a bit desecrating it with a wheelchair hoist, and fitting hand controls, but he'd gotten over the pain. \n\nHe counted his blessings as he drove home. He had a family who always had his back. He had a partner who loved him. He lived in a solid little house, had a loyal dog, a job he didn't hate, and the car of his dreams. It was more than he could ever have hoped for. \n\nDylan turned onto the old bitumen road that led to the O'Sullivan farm and immediately swerved and hit the brakes to avoid hitting something lying in the middle of the road. His car fishtailed, spun, and ended up on the side of the road. He sat stock still, barely able to believe he hadn't flipped the car, and oddly grateful for the catheter, without which he'd probably be sitting in a puddle of his own piss.\n\nGetting out of the car to see what it was that was lying on the road was no longer a simple task, so he very carefully drove the car back onto the road and crawled toward the mystery object. The object sat up and stared at him. Dylan realised it was a person. Holy fuck, he'd nearly killed someone. Dylan put the car into neutral and wound down the window.\n\nThe person - man - stood up and stumbled towards him. As he approached, Dylan saw that the man was Kyle. \n\n'You fucking idiot,' Dylan snapped. 'You nearly got us both killed.'\n\n'You wouldn't have died,' Kyle reassured him.\n\nDylan all too clearly remembered what it had been like when Lydia was drinking. The insolence. The utterly belief in herself, that she was both entitled to act however she liked, and that was she always a hundred percent in the right. There was no point arguing with Kyle. \n\nInstead, Dylan leant over to the passenger side and opened the door. 'Get in,' he ordered.\n\n'Hang on. I need to get my things.'\n\nDylan waited as Kyle returned to the place where he'd been lying and collected what remained of a bottle of rum and his cigarettes. Kyle got in the car, rum between his legs, and strapped himself in. He asked Dylan if he could smoke.\n\n'Sure,' Dylan agreed, starting the car. 'Let's just get moving, huh? We're just off the exit. If anyone else turns off, they won't be able to see us in time to stop.'\n\n'I can't believe you saw me,' Kyle remarked. 'I thought for sure you'd hit me.'\n\n'Good thing I didn't. The paintwork on the Charger is only three weeks old.'\n\nKyle lit his cigarette and laughed. He stunk of sweat, cigarettes and alcohol. Dylan had seen Kyle drunk more times than he could count, but Kyle normally held it together when he was inebriated. He was a very quiet, professional drinker. Not tonight. Tonight he was a mess.\n\nDylan didn't know what to do. He was now seconds away from Kyle's farm, but he was scared of leaving the man unattended.\n\n'Is anyone at the farm?' Dylan asked.\n\n'Of course not. My parents are dead, Cora left, my kids have left, and the farm workers are all on holidays.'\n\nDylan kept driving.\n\n'Where are you going?' Kyle asked.\n\n'I don't know. Not the farm.'\n\n'Why not?'\n\n'I'm worried about you, mate.'\n\nKyle patted his arm. 'I'm too gutless to shoot myself. Besides, I thought you might want to kill me. I figured if I was lying on the road it would be considered a suicide or, at worst, an accident, so no one would blame you.'\n\n'I don't want to kill you,' Dylan muttered. 'Why the fuck would I want to kill you?'\n\nKyle gestured as if to point out that Dylan was missing the obvious. Dylan was paralysed. He should be angry and vengeful and bitter. He should want to destroy the man who'd done this to him.\n\n'Kyle, mate, this isn't your fault,' Dylan sighed. 'Even if it was, I wouldn't be lining myself up to kill you.'\n\n'I ruined your life.'\n\n'That's a bit extreme. You participated in changing it, maybe, but you didn't ruin it.'\n\nKyle shook his head in disagreement. He drank from his bottle of rum and started to cry. Dylan felt not unlike the way he'd felt when someone had switched the television in the gym to a Bachelor rerun and he'd had to spend forty-five minutes listening to girls weep and cry and declare their love for a man who'd had more plastic surgery than Dolly Parton.\n\n'Did you see your kids today?' Dylan asked, trying to distract Kyle.\n\n'The boys came around for breakfast.'\n\n'They get you anything?'\n\n'Yeah, a couple of shirts.'\n\n'Lydia does that for me, buys me clothes. It's not bad. Saves me having to go to the shops.'\n\nKyle inspected Dylan's outfit. He was in chinos and a dark blue shirt. It was exactly the sort of outfit Dylan would have picked for himself had he not been lazy, and irritated at the layout of clothing stores. They were never wheelchair friendly.\n\n'You've got some pretty solid muscle definition going on,' Kyle remarked.\n\nDylan flexed and showed off what a good amount of weight loss, and a decent amount of time in the gym, could do. He gained weight easily, but he was also someone who gained muscle quickly. It hadn't taken him long to get the sort of arms, back and shoulders that other men spent years trying to attain.\n\n'Fuck you,' Kyle swore, swigging his rum.\n\n'Still feel sorry for me?'\n\n'No. Yes. I feel disgusted with myself. I feel like the world's biggest failure, Dylan. I wanted so much to succeed, but I fuck up everything I touch. Now I'm supposed to live with the fact that you're in a wheelchair, and I'm supposed to run a goddamn farm. I can't run a farm.'\n\n'Of course you can.'\n\n'No, no, I can't. See, that's the problem. I need Alan. My old man was right, you know that? Alan always knew what to do.'\n\n'Not on the day of the storm,' Dylan countered. 'And not in the days leading up to it. The sorghum should have been taken in earlier, and the sheep should have been moved.'\n\nKyle snorted. 'No, my father was responsible for the sorghum. He told Alan when he wanted it bought in, no arguments, no exceptions. The sheep were Alan's fault, but even that wasn't a big mistake. it still worked out in the end.'\n\n'You'll figure it out.'\n\n'I'll screw it up. I'll never be as good as Alan was. Everyone knows that. I feel like everyone's watching me, waiting for me to make a mistake.'\n\nDylan pulled over to the side of the road. He really needed to stop driving until he'd figured out where he was going. \n\n'I hate my life,' Kyle said bitterly. 'I've been waiting for this fucking shitshow to end since I was fifteen.'\n\n'Well, drinking yourself to death and lying in the middle of the road isn't going to help you feel any better about it,' Dylan pointed out. 'You're just dragging everyone else down with you.'\n\n'I'm not dragging anyone down.'\n\n'Really? So what do you reckon might've happened if I'd hit you? I'll tell you. You probably wouldn't be killed instantly, so you'd be dying a slow death. The Charger would have flipped. It doesn't have airbags, mate. I'd either be dead, or just a bit more mangled up. That's two lives fucked up.\n\nI might or might not be able to get to my phone. The cops and ambulance might or might not come. Let's say they do. Let's say we both survive. The cops have to do a report. The ambo's need to take us to hospital. We both look like mincemeat. Doctors, nurses, assistants, are all at the hospital wishing they were home with their families when we come in.\n\nMaybe one of us dies. Our families then get to live with the fact that they lost someone on Christmas Day. Every year they'll need to figure out if they celebrate or grieve. Every year they panic a bit when someone gets in a car. Now let's say...'\n\n'...I get the point,' Kyle interrupted. 'But none of that happened in the end, so no harm, no foul.'\n\n'Right. Except for the fact that you scared the shit out of me, and I'm now going to have to either take you home and fuck up my evening - because I was planning on getting laid - or take you around to one of your son's. Neal. I'll have to take you to Neal's house. Just what every kid wants for Christmas, right? His drunk, suicidal father being dumped on his doorstep.'\n\n'I'm not suicidal.'\n\nDylan ignored him and reached for his phone. He rang Neal, who sounded happy to hear from him, and asked Dylan how his day had gone. \n\n'Great, until I nearly killed your father,' Dylan replied matter-of-factly. 'He called me up as I was leaving my folks' farm. I thought the fucking idiot had been working today and needed help repairing something. Turns out he thought he might have a sleep in the middle of the road and see if I managed to hit him.'\n\nNeal didn't respond immediately. When he did, he asked where his father was now.\n\n'Right next to me,' Dylan replied, staring at Kyle, who was in turn staring out the window and drinking from his bottle of Bundy. He had no idea how Kyle didn't have an ulcer. Maybe he did. Maybe drinking was just too important for him to consider his health. 'Do you mind if I bring him around?'\n\n'Yeah, sure mate. We got home half an hour ago. Do you have my address?'\n\n'I don't. Text it through to me.'\n\nKyle started crying again as they drove to Neal's house. Dylan was both sympathetic and annoyed. His friend obviously had some pretty big issues. \n\nThey pulled up outside Neal's place, and Dylan took a moment to try and tidy Kyle up. He didn't want to deliver Kyle in any worse a state than he had to. No man needed to see his father drunk and suicidal and weeping, least of all on Christmas. If Dylan could at least stop Kyle crying, he'd feel a bit better about dumping him on Neal.\n\n'Mate, you really need to pull yourself together,' Dylan warned. 'This is pretty fucking disgraceful. I get that life's hard. I get that it's shit. I get that everyone fuck's up and sometimes the consequences are bad, but this drinking? It's selfish. You're being selfish. Get some professional help. Deal with whatever it is that's bothering you.'\n\n'You hate me.'\n\n'No, mate, I don't. I've never hated you. You used to be a really good mate of mine. The only thing that's changed that for me is the way you now treat me. I'm not a fucking pity case. I don't want to kill you. I don't want to get revenge. I want you to go back to talking to me like I'm your equal.'\n\nA security light switched on, and the front door opened. Neal must have seen them arrive. Both Kyle and Dylan watched him walk down to the front gate, open it, and approach the car.\n\nKyle wound down his window and wished his youngest son a Merry Christmas. Neal took one look at his father, opened the passenger side door, and helped him out. Kyle fell onto the grass. His bottle of rum landed in the footwell of the Charger and spilt everywhere. Neal immediately leant in, picked it up, and apologised to Dylan.\n\n'No worries, mate,' Dylan responded. 'Sorry to dump him on you.'\n\n'Nah, it's not a problem.' Neal peered around the car. 'Nice wheels. Does she go alright?'\n\n'Mate, what a fucking question.'\n\nThey laughed. In the background, Kyle started vomiting. Dylan thought of Lydia. He wanted to be home with her. He wanted to stroke her soft, red hair and suck on her magical titties. What was he doing in fucking Oakey with his pissed-off-his-head mate?\n\n'Do you know how much he's had to drink?' Neal asked.\n\nDylan shook his head. 'No idea. The bottle of rum he took with him was almost full, so I'm guessing it's second or third for the day.'\n\n'Jesus fucking Christ he's a mess.' Neal shut the passenger door. 'I won't hold you up. \n\n'You gonna be alright?' Dylan asked.\n\n'Yeah, mate. Go home to your missus. Merry Christmas.'\n\nDylan took the hint and put the car into drive. He glanced in the rear vision mirror as he drove off. Neal was half leading, half carrying his father inside. It was something no son should have to do for his father, particularly when the son had been as easy-going and trouble free as Neal had been.\n\nDylan turned his gaze from the rear vision mirror to the road in front of him. There was only one way forward. Maybe Kyle would figure that out some day, maybe not. In the meantime, he had to go home. He'd bought Lydia lingerie that was grossly impractical, probably very uncomfortable, and, of course, sexy as all fucking hell.\n\nIt was time for a Christmas Day fuck.\n\nThe End"
    ],
    "authorname": "ausfet",
    "tags": [
        "romance",
        "australian",
        "romantic"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-fall-ch-08"
}