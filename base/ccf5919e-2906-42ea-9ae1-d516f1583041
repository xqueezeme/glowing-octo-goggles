{
    "title": "Word of Mouth",
    "pages": [
        "Everyone has a story about their first time. Some are sweet and romantic, some are incredible, some are bizarre and some are disasters. My story may be all those things rolled into one. When I think back even I have a hard time believing what happened. I do know that I wouldn't be where I am today without the incredible woman who dropped so suddenly into my life, a woman I met the fall of my second year at college. I owe her so much.\n\nI was getting that familiar buggy feeling I get when I'm in a crowd and my anxiety starts to crank up, but I kept it in check by looking down and avoiding everyone's gaze. The party was in full swing with music blaring from the lounge halfway down the dorm hall. Eager drinkers pressed in around me as I pumped the keg. There was not one familiar face in the crowd. Everyone there was with my roommate or his circle of friends. Normally, I wouldn't have associated with my roommate and would have preferred the quiet solitude of the library but the thought of strangers touching my things had been too much, so I volunteered to man the keg. This way, I could keep an eye on my stuff and get free beer.\n\nBlack leather combat boots appeared on the floor before me, a change from all the tennis shoes, sandals, and flip-flops I had been seeing. My eyes followed the boots up to a black and green plaid kilt, up to an ancient black Joan Jett t-shirt tattered around the edges, up to a thin face framed by spiked jet-black hair, up until my eyes locked onto brilliant green eyes outlined in heavy mascara. She half-sneered at me, as if in challenge. I just nodded in greeting and passed her a beer. She gave me a little crooked smile and melted into the crowd, leaving me slightly flushed. I continued pouring but kept thinking about her green eyes and how they seemed to bore into me.\n\nLater those boots and those eyes were back, looking for more beer. Her hands were empty, though, and the supply of plastic cups had run out several minutes before. \"Sorry,\" I said. \"What happened to your cup?\"\n\nShe scowled. \"I put it down to send a text and it must have been picked up by one these ass-hat frat boys.\" Pointing to a half-full mug on the shelf next me she asked, \"Whose is that?\"\n\n\"Mine,\" I explained and she picked it up and downed the rest before smirking and holding it out. I refilled it and she took a long sip off the top before handing it back.\n\n\"I'm Nico,\" she volunteered as I took a drink.\n\n\"Thomas,\" I said as she took the mug from my hands. A black widow tattoo decorated the inside of her left wrist and another tattoo, green vines twisting and choking a broken clockwork, adorned her right bicep. I counted at least nine different piercings in her ears and eyebrow. She was short, almost a foot shorter than me, with a slight build. At first glance she appeared frail but I noticed the way the cords stood out on her arms as she randomly plucked textbooks off my shelf and thumbed through them before replacing them in the wrong location. \"Nico's a unique name,\" I said, attempting conversation. I winced inwardly at the awkward rhyming of my statement.\n\n\"Short for Nicole,\" she explained without looking up from my Physics text.\n\nI stole a sidelong glance at her body. Her legs were pale and smooth and looked soft to the touch. On her left thigh I could see just the bottom of another tattoo and wondered what it could be. When I looked up she was watching me intently. Attempting to cover my embarrassment I joked, \"Did you just come from the Young Republicans meeting?\"\n\n\"Church -- I'm an altar girl,\" she said without missing a beat. She looked me over critically. \"You don't fit in, either.\"\n\nI was wearing a t-shirt and jeans but I knew what she meant. My body language was all wrong. I nodded. \"My roommate's party, my roommate's friends, his friends' friends, and so on. You know anyone here?\"\n\nShe shook her head. \"No one. I walked a friend back to her room after a movie, heard the music and decided to crash.\"\n\nWe talked as I continued pouring beers. Nico told me she was majoring in sociology and I said I was studying computer science and engineering. The fact that she didn't run away after I told her was encouraging. The music down the hall was cranked even higher and drinkers crowded in around us, forcing us closer together. Nicole shouted one-sided conversation in my ear as I pumped the keg. To be honest, I don't recall too much of what she said but I clearly remember the feel of her breath on my ear and the five times her body rubbed against my arm as the crowd pressed in. \n\nEventually the keg ran dry and I had the unenviable task of turning away drunk but thirsty souls, their collective mood turning darker by the moment. All of my attempts to get them out the door failed, the crowd growing more surly. In the end it was Nico who drove them from the room with pushes and kicks, swearing at them the whole time. I taped a sign on the door, closed it and locked it.\n\n\"Thanks. I thought we were going to be overrun.\"\n\n\"The only thing a mob will understand is force,\" she explained. It sounded like she was disappointed in me in some way. \"You need to be more forceful and not let them walk all over you.\" I nodded mutely, thoroughly chastised. Then she smiled slightly. \"Anyway, I owed you for sharing your mug.\"\n\nNico sat cross-legged on my bed, sipping what was left of the beer, watching me shuffle around the room picking up trash. Her skirt had ridden up a bit exposing more of her thighs. I pretended not to notice and concentrated on stacking discarded plastic cups and tossing them in the wastebasket. I finally got to my bookshelf and was, at last, able to reshuffle the textbooks into the correct order. The urge to touch them seven times almost overwhelmed me but I fought it successfully. Only crazy people touch things like that. When I looked at her I saw she had a curious expression on her face.\n\n\"What?\"\n\nHer eyes narrowed and her lips twisted thoughtfully. Finally, she asked, \"Are you gay?\"\n\n\"No,\" I said, completely unoffended. It was not the first time that question had been asked of me.\n\n\"Didn't think so.\" She patted the mattress next to her. \"Come here and take a break.\"\n\nI sat on the bed with my back against the wall. I tried to look relaxed on the outside but I doubt I succeeded. Every nerve in my body was jangling and my body felt stiff as a board. Nico didn't seem to notice. Instead she rubbed at a mark on her skirt before turning and looking at me closely. I started to wither under her stare.\n\n\"What?\" I asked again, afraid she had noticed my right ear lobe was slightly larger than my left.\n\nShe shook her head, a frown on her face. \"You're not like other guys, are you?\"\n\n\"No, I suppose not.\"\n\nShe nodded, absently picking at the scuff mark. Without warning she kissed me, hard, pinning me against the wall. Once I recovered from the initial shock I began to return the kiss but I was always a step behind. Her tongue forced its way past my lips, so alive and electric. My hand went to her back; her hand went to my crotch as she drove me down onto the bed. Tentatively I moved my hand down to her ass and she boldly shoved her hand down the front of my jeans.\n\nShe stopped kissing and stared at my crotch, her hand squeezing up and down my length. Her hands scrabbled at my jeans, tugging them down to my thighs until I was exposed and erect before her. Nico muttered, \"No fucking way!\" \n\nBefore I had a chance to speak she had me in her mouth. Someone was pounding on the door, jiggling the handle and demanding beer. The shouting and pounding and sucking continued unabated for several minutes until the knocker finally took the hint and went away. All I could hear, aside from the thudding of my heart, were the soft wet sounds of her mouth sliding over my cock.\n\nThe feel of her tongue was too much and my whole body tensed. With a groan I came, eliciting a muted whimper from Nico. She continued bobbing for another minute, the sensations intensifying with each bob, drawing out more groans from deep within me body. Finally, she ceased and let me slide from her lips. She sat back against the wall and dabbed at the corners of her mouth before sucking on her finger.\n\nI lay there, stunned and pleased and vulnerable and invincible all rolled into one. The feeling of invincibility faded, though, and I gradually became aware I was lying naked in front of a girl with my now-limp cock on full display. Embarrassed, I started to pull my pants up but her hand stopped me.\n\n\"Don't; seeing it pleases me,\" she said. \"Your very first blowjob?\" I nodded dumbly and she smiled. \"Thought so. What did you think?\"\n\nI tried to put it into words but my vocabulary failed me. \"It was amazing. I-\" How could I describe something made me feel so many different emotions all at one time? Instead, I shrugged and shook my head.\n\nShe nodded in agreement. \"Kneel on the floor in front of me.\" I did and she scooted to the edge of the bed. Nico gathered her kilt in her hands, slowly revealing the pale flesh of her thighs, the serpent tattoo that started on her left hip and rose towards her abdomen, and the black cotton of her panties. She pulled my face to her crotch and I stared at it. \"Kiss it,\" she commanded.\n\nI pressed my lips against the dry fabric. Nico shifted and I felt soft yielding flesh under the panties. Her musk filled my nose and I became light-headed. I kissed her again, my mouth open slightly and her hips rose slightly to meet me. Without hesitation I licked her and the cotton turned from dry to damp to wet and then I could faintly taste her. I tongued her roughly through her panties, wanting, needing more until she pushed my head back with one hand.\n\nThose green eyes, punctuated by black eyeliner, stared at me intently. I couldn't tell if she was pleased or angry but I did recognize her surprise. I don't know how long she held me there but with each passing moment I became more desperate to taste her again. Finally, her eyes narrowed and with her free hand she pushed her panties down her thighs, leaving me to pull them the rest of the way off. The hand holding my hair slowly relaxed and dropped away.\n\nI bent down and softly kissed her inner thigh. She tasted like fall, of rain and the sweet smell of slowly decaying leaves. I kissed higher and now I could truly smell her. I paused and, for the first time in my life, gazed at a woman's sex. Neatly trimmed black pubic hair framed her glistening folds. The swollen clit bulged slightly under its hood, calling to me. I could feel her heat on my face, drawing me in. My tongue parted her, delved into her, and dipped into her nectar. A guttural moan filled my ears and my soul fell into her, drowning happily in the pool of her wet heat.\n\nWith slow and tender licks and kisses, I explored every nook and cranny of her, liberating her juices, coating my mouth and chin. Low, primal sounds filled the room only to be muted by the sudden pressure of her thighs against my head. I pushed on, my tongue darting and flicking and she trembled and shook beneath me. Her thighs hugged my face, each squeeze more powerful than the last, cutting off the blood to my brain until the world dimmed.\n\nWhen I came to my senses Nico had me by my hair and was twisting my head painfully to the side. Tremors rolled through her body and she looked down at me triumphantly. Her face was flush and sweat beaded on her forehead. With a crooked smile she pushed me away playfully in an odd display of affection. I wiped my face with my shirt and realized my erection was back.\n\nNico looked at the clock and bolted from the bed. \"Shit! My curfew is in ten minutes!\" \n\nI couldn't believe my ears. \"You live in Mother Mary?\" I teased. She shot me a dangerous look as she smoothed down her skirt. To make up for the slight I offered to walk her back.\n\nWe hustled across campus to Mary Hall, the lone all-women dorm on campus. Also known as Mother Mary, the Nunnery, or, more crudely, the Virgin Vault, it was the only dorm that had a curfew. A favorite of over-protective parents to guard their daughters against all the evils of college life, it was also the only dorm with a waiting list. We got to the front doors with two minutes to spare according to the large antique clock over the entrance. Nico kissed me lightly on the lips before disappearing inside. I was walking on air on my way home before realization set in.\n\nI had forgotten to get her number and I didn't know her last name. I'm such an idiot.\n\nThe following week I walked slowly past Mary Hall on the way to and from class hoping I'd run into Nico, even walking out of my way whenever I had time. I had her panties which I had found balled up under the edge of my bed and I carried them with me like I was the prince in a perverted version of Cinderella. Not once did I get a glimpse of her. I slept with the shirt I had worn that night. I hadn't washed it and I could still smell her on it.\n\nAfter two weeks I had almost given up seeing her again. I was in my room catching up on homework when I heard a voice. \"Hey.\" I looked up at those brilliant green eyes. Nico was standing in my open door wearing a t-shirt and ripped jeans, a lock of jet black hair covering one eye. She flashed that crooked smile and asked, \"Am I bothering you?\"\n\n\"Nope,\" I said, quickly closing my Advanced Calculus textbook. She shut the door and sat on the edge of my bed.\n\n\"Is your roommate around?\"\n\n\"No, he rarely sleeps here. He usually stays with friends who belong to the frat he's rushing so I basically get the room to myself.\"\n\n\"About that night,\" she began but stopped. She gave me a cold, hard stare. \"You haven't told anyone about it, have you?\" I swore I hadn't. \"Good, keep it that way. You tell anyone and I'll hurt you.\"\n\n\"I swear, I won't say anything,\" I said meekly, withering under her gaze. She was starting to scare the absolute shit out of me.\n\n\"Okay, I believe you.\" She looked at me for a long moment then said, \"Take off your clothes.\"\n\n\"What?\"\n\n\"Take off your clothes. I want to see you naked.\"\n\n\"Why?\" I asked before I could stop myself.\n\nNico stood up, tilted her head and looked curiously at me. \"Are you a virgin?\"\n\nI swallowed and avoided her eyes. I finally shrugged and confessed, \"I've never done those things before.\"\n\n\"What? Kiss a girl? Feel another person's tongue on your own? Touch a girl's ass?\" I stared at the floor under the desk. I was too embarrassed to look her in the eyes. \"Or was it something else?\" she persisted.\n\n\"You know, like what you did to me,\" I bumbled.\n\n\"You mean when I put your erect cock in my mouth and sucked on it until you ejaculated your sperm down my throat. That's called a blowjob.\"\n\n\"Right. That.\" I swallowed nervously and went on. \"And what I did to you.\"\n\n\"Ah, you mean cunnilingus, more commonly known as eating me out or licking my cunt.\"\n\n\"Yeah, licking your, you know, pussy.\"\n\nNico shook her head. \"You didn't lick my cat, you licked my cunt.\"\n\n\"Ok.\"\n\n\"Did you like licking my cunt?\"\n\n\"Yeah.\"\n\n\"Say it.\"\n\n\"I liked licking you.\"\n\n\"I want you to say the word.\" She waited, an amused expression on her face. She was thoroughly enjoying how uncomfortable I was. \"Say, cunt.\"\n\n\"Cunt,\" I said quietly, flinching as I did so. All my life I had been taught that was the worst word one could ever say.\n\nShe laughed. \"My God, you really are a virgin, in more ways than one.\" Her laughter shamed me and my ears burned. I felt so small. \"Well, at least I know you're clean. Tell me, Thomas, are you one of those types who save themselves for marriage? Did you swear a promise to your God you would remain pure and chaste until your wedding night?\" she mocked.\n\n\"Not that it's any of your business, but no,\" I said a bit defensively.\n\n\"Do you believe in God, Thomas?\"\n\n\"No, do you?\"\n\nNico snorted with derision. \"I have don't have time to waste on that nonsense.\" She unsnapped her jeans and pulled the zipper down. \"I don't have time to waste, period. Do you want to lick my cunt again, Thomas?\" She reached into her panties. \"I'm so wet and I'm so willing. Do you want to taste me, Thomas?\" She pulled her hand out and held it up in front of me. Two of her fingers glistened and shone. I was already salivating. I nodded. \"Then take off your goddamn clothes.\" There was a menace behind those words even though they were said neutrally.\n\nI stood and peeled off my shirt then my jeans. After a moment's hesitation I kicked off my boxers. Nico shook her head and pointed at my feet. I understood and pulled off my socks. I stood there in the middle of my room naked and semi-aroused as Nico walked slowly around me appraising my body. I silently prayed she wouldn't notice my earlobes or that my rib cage was a little asymmetrical. She stopped in front of me and raised an eyebrow as she looked at my cock.\n\n\"Utterly fucking amazing,\" she said softly. \"How big is it?\"\n\nLike most guys I had been curious with the length of my penis. I had measured it and done my research but for some reason I was embarrassed to admit that to her. Instead I simply said, \"Bigger than average, I suppose.\" \n\nShe shook her head. \"Indeed it is. I thought my mind was playing tricks on me again and my memory was fucked up. But there it is.\" She sighed. \"On your knees,\" she commanded.\n\nI obeyed. Nico kicked off her jeans and stood before me. \"I can't have a boyfriend,\" she said as I tasted her. I didn't care. I just nodded and drank her in. \n\nIn the end, she was sitting naked in the desk chair with one leg draped over the armrest and me kneeling on the floor in front of her, my head buried between her legs as orgasm chased orgasm. When she finally pushed me away almost a half an hour had passed.\n\nBrief explosions of pain blossomed in my knees as I stood, my joints stiff. I rubbed my neck to work out the kinks and looked down at Nico. She lay there, draped over the chair, wasted with exhaustion but with a satisfied look on her face. Her small, pert breasts rose and fell, her nipple ring catching the light with each breath. The tattoo of a serpent wrapped around an apple covered her left hip, up her abdomen, to just below her left breast.\n\nShe motioned me over until I was standing next to her. \"Masturbate on me,\" she said, tipping her head back, closing her eyes and opening her mouth. Her voice was tired and strained and for a brief moment she looked sickly. When I hesitated she said emphatically, \"Thomas, I want you to jerk off until your cum sprays over my face!\"\n\nI stood over her and masturbated as Nico's hands played lightly over her body, her fingers teasing her nipples and tracing random patterns over her stomach. The room was silent except for the rhythmic whispering of skin rubbing skin. She still had her eyes closed, and her mouth half-open and inviting. I watched her drive her middle finger deep into her cunt. With her other hand she caressed my sac, pulling me closer to her expectant mouth until the tip of my cock rubbed against her lips. \n\nShe sucked it momentarily then whispered, \"I can't have a boyfriend.\"\n\nI continued stroking, my orgasm nearing. Her lips nuzzled the underside of the fleshy tip, sending jolts of electricity directly down my shaft, through my balls and up my spine. With a groan the dam burst. White lines of cum jetted across the bridge of her nose and caught in her heavy lashes. She pulled me into her mouth and I came some more. When I was finished my knees felt weak.\n\n\"I can't have a boyfriend,\" she repeated as my seed dribbled slowly from the corner of her mouth.\n\nI offered her a towel to clean up. Nico climbed wearily into my bed and pulled the covers over her. I watched her sleep for a while before I got dressed and went back to my desk. I touched every item on the desktop exactly seven times in the proper order before I could resume my calculus homework, letting her sleep for an hour before I woke her gently. ",
        "\"Nico, you have to get back before curfew,\" I said softly. She mumbled an acknowledgement and pulled me into bed, her buttocks pressing up against my growing erection. We lay there for several minutes, me lightly stroking her hair. At last she rose from the bed and dressed.\n\nShe looked me steadily in the eye. \"I can't have a boyfriend.\"\n\n\"I know,\" I said. \"Come on, I'll walk you back to your dorm.\"\n\nThis time, I remembered to get her phone number.\n\nThe next evening we were sitting in a booth at a busy coffee shop. Alternative music played overhead as students studied and writers pretended to write the great American novel on their laptops. I'm not the type to go out in public but Nico had succeeded in dragging me out of my room. I surreptitiously tapped the handle of my mug the correct number of times before I drank. Nico took a sip of her coffee and carefully set it down.\n\n\"How come you don't have a girlfriend?\"\n\nThe question caught me off guard. I thought for a minute then shrugged. It couldn't hurt to tell her the truth. \"I have an anxiety disorder that makes it hard for me to meet people, especially girls.\"\n\nShe frowned. \"You didn't have any problems talking to me that first night.\"\n\n\"That's partly because of the beer,\" I explained, \"and mostly that you talked to me first. You broke the ice and you carried the conversation. If you think back, I just went along for the ride.\"\n\n\"So,\" she shrugged, \"why don't you meet girls at parties or bars?\"\n\nI fidgeted with a stirring straw, twisting it into knots. \"Crowds make me anxious, I mean, really anxious. There's a reason I'm sitting with my back to the rest of the room, so I don't know how many people are here. I can't go to any athletic events, and if a campus bus is crowded I'll wait for the next one which sometimes makes me late for class. Even big lectures give me a buggy feeling.\" The straw finally snapped between my fingers on the forty-third twist.\n\nThere's a name for what I have: Obsessive Compulsive Disorder. Why I didn't tell Nico I have OCD I'll never know. Maybe it's because I'm keenly aware of how crazy I am. My main obsession is numbers. I count everything, how many twists it takes to break a straw or how many steps I take to and from class. My compulsion is having to touch things seven times to make everything all right. The anxiety on top of OCD was just a perk.\n\n\"Oh my God, you've never been to a football game?\" she asked incredulously. \"That's a sacrilege at this school.\"\n\nI shook my head. \"Just the thought of a hundred thousand people all in one place makes me nauseous.\"\n\n\"Do you get full-blown panic attacks?\" I nodded. \"Ever tried medication?\"\n\nI chewed on my lower lip. The subject was a touchy one because of the stigma of taking prescribed meds. It had been my experience that once someone found out they treated me differently. But Nico wasn't like other people. \"Yeah, but I haven't found one I like. They do help alleviate the anxiety but they all have drawbacks. Some made me feel like a zombie, some are better but everything is still a tad foggy, and some have undesirable side effects.\"\n\n\"Such as?\"\n\nI fidgeted in my seat. I hated talking about it but Nico's piercing gaze wouldn't let me go. \"This one particular drug gave me a raging erection.\"\n\n\"Sounds like fun,\" she said mischievously, \"what with all that meat you're packing.\"\n\n\"It wasn't. I was sixteen and already a typical horny teenager. I got plenty of erections all on my own. When I was on the med I was hard all the time and not only was it embarrassing it was also very painful.\"\n\n\"Do you have any of those pills left?\" she asked, her voice full of hope.\n\n\"No, I flushed them a long time ago.\" Nico pouted at me across the table.\n\nWe sipped our coffee in silence until Nico declared, \"You are a fucking enigma.\" I couldn't decide if I should be insulted by that. \"You're a virgin who can barely go out in public, let alone talk to women, but you have a cock any girl would kill to suck or fuck. And there's no way you should be that good at eating me out. How can you be that good?\" I shrugged as I had no clue. \"Did someone teach you?\"\n\n\"No, but I do like watching it in videos,\" I admitted. \"In fact, it's the only kind of porn I like. I really enjoy seeing a woman get off.\" That wasn't the whole truth, though. A more accurate statement is that I always have a feeling something bad will happen if the woman doesn't orgasm. Watching a video for the first time always fills me with trepidation as I don't know if they will show the woman climaxing.\n\n\"What's it like for you, what's going through your mind when you have your tongue buried in my cunt?\"\n\n\"I don't know.\" I paused. \"It's like I'm in some sort of trance and it's the only thing in the world. Nothing else exists. Maybe I blackout or something, you know, the way an alcoholic will blackout when they've been drinking.\"\n\nNico nodded at me. \"Try to describe what it's like to lick me.\"\n\nI thought about it for a long time before I said, \"It's kind of like eating a perfectly ripe peach. You know, there's that window of two or three weeks in August when Michigan Red Haven peaches are the perfect ripeness. You bite into the fuzzy skin and the sweet juice rolls down your chin and you can't help but to slurp it up and the flesh is soft yet firm under your tongue. That's the closest I can come to describing it.\"\n\nNico stared at me as I finished my coffee. It had grown cold but I couldn't bear to leave it unfinished. Finally, she said, \"Back in a moment,\" and walked off to the restrooms. A minute later she was back and dropped a ball of green material in my lap as she sat back down. \"Feel it,\" she said, \"Feel how wet you've made me.\"\n\nThe crotch of her panties was soaked and I fought the urge to bring them up to my nose so I could breathe her in. I smiled, checked the time on my cell and said, \"Come on, I'll walk you back.\"\n\nA silence enveloped us as walked across campus. She was obviously deep in thought and I couldn't get any words out of my mouth. At her lobby I tried to give her panties back but she stuffed them in my front pants pocket, her fingers brushing lightly along my semi-rigid cock. Without a word she went inside.\n\nI was walking up the steps of my dorm when I received a text from her: Its your fault im masterb8ing now. \n\nI laughed and sent back, Hope your roomie doesn't mind. \n\nBy the time I climbed the stairs to my floor I got back, Shes studying w back to me. Now shut up im trying to concentr8. \n\nOver the next several weeks we saw each other quite a bit, although somewhat randomly. Nico would drop by unannounced and I was never quite able to predict when she would visit. I could see her three or four consecutive nights and then there would be up to five days before she showed up again. Our trysts were brief and to the point, consisting of oral sex and handjobs. Nico was always in charge. \n\nOnce she walked into my room and shut the door. I looked up from my homework and started to speak but she stopped me with an upraised hand. Her hair was sporting a bright purple streak on the right side. Nico unbuttoned the raincoat that came down to her knees and let it drop to the floor. Of course, she was naked underneath. Her pubic hair had a matching purple streak.\n\nI watched, breathless, as her hand delved between her legs. I could hear the squelching as her fingers penetrated her sex. I could see the glistening flesh as she parted the outer lips. I swear I could smell her from across the room. Her other hand tugged mercilessly on her nipples making them red and swollen. The entire time she masturbated she kept her eyes on me. After she came she pulled her coat on, buttoned it up and left. She never said a word.\n\nThe following visit she taught me how to pleasure her with just my fingers. \n\nI thought I was the luckiest guy on campus. Nico was an incredibly sexual creature who was teaching me so much. I was amazed at how much pleasure she could provide with just her hands and mouth. More importantly, she wanted me to please her with my mouth and fingers. I fed off her orgasms. \n\nI don't mean to sound ungrateful but I wanted more. Even though I very much wanted to have sex with her the topic of intercourse never came up. I assumed she never suggested it because it was some sort of line that couldn't be crossed -- If we fucked I would be her boyfriend and she couldn't have that. I never brought up the topic because I had the idea that if we had sex Nico would become seriously ill and die.\n\nI know that sounds crazy but I can't help these kinds of thoughts from occurring. Once I have them I obsess over them, making the fear palpable. So in order to protect Nico we couldn't have sex. I never told her this. I wish I had, but I never did.\n\nOne Saturday night I was working a shift at the central campus computing lab. A handful of students were well spread out in the lab, making for a rather dull night. That's the way I liked it as I could get my homework done and get paid for it. My coworker and I sat in the Pit, an ironic name for the raised circular workspace overlooking the lab. The Pit was also a convenient barrier between me and the students. Nico walked up and leaned over the counter at me. \"How late you working tonight?\" she asked in a hushed tone. The purple streak in her hair was now bright green. I wondered briefly if her pubic hair matched.\n\n\"Until 2AM. Sorry.\"\n\nShe frowned and looked around the mostly empty lab before asking, \"How many of them do you think are watching porn right now and mentally frigging themselves?\" I shot a look at my coworker but he had headphones on and was engrossed in a movie. I moved away from him and Nico followed along the outer perimeter. \"There aren't that many people here but I bet at least one,\" she persisted.\n\nI shook my head. \"Doubtful. People tend to do that when they're alone in their room.\"\n\nShe pointed at a monitor in front of me. \"Can you use that computer to see what they're doing?\"\n\n\"Yeah, but it's our policy not to.\"\n\n\"Let me back there, I want to take a look.\"\n\n\"Sorry, employees only. They have a very strict rule about that.\"\n\n\"Then I'd like an application, please,\" she pestered. I sighed and pulled an application from a file and handed it to her along with a pen -- I figured it would be easier than arguing with her. She looked it over and asked, \"Who does the interview?\"\n\n\"Tonight I would do the pre-interview but a full-time staffer would do the final.\"\n\nNico smiled wickedly, put the pen to her lips and sucked lightly on it. \"I think there is at least one person here watching porn this very moment but you think not. We should bet on it,\" she suggested.\n\n\"What would we bet?\"\n\n\"If I win, I want you to seriously consider a proposal. If you win --\"\n\n\"You have to tell me why you can't have a boyfriend,\" I finished.\n\nShe frowned. \"Not very imaginative. Alright, if that's what you want.\" We shook hands and she pointed at the computer. \"You do whatever typing you need to do while I fill this out.\" I took me less than a minute to launch a program and click a few parameters to get the answer. In less than that time Nico had completed the application and was holding it out to me. I checked to see if anyone was watching before I turned the monitor towards her, defeated. \"Ha!\" she exclaimed. \"I knew it!\"\n\nShaking my head, I turned the monitor back and closed the program. Three people were surfing porn sites. I took the application and asked, \"So, what's your proposal?\"\n\n\"I'd like my pre-interview first, then we can talk.\"\n\n\"Alright.\" I started to read over her application but she protested.\n\n\"I believe I have an expectation of privacy during an interview. Is there a room we can use?\"\n\nI let my coworker know I was doing a pre-interview. He nodded without ever looking up from his movie. Nico and I went to a small conference room and sat at the table. I started through the prepared list of b. s. questions.\n\n\"So, Miss Dewpot,\" I read the name she wrote on the application, \"why do you want to work at this lab?\"\n\n\"Well, I've always found computers sexy, what with all those big hard drives and such.\"\n\nI made a check mark. \"And what are your best qualities?\"\n\nShe looked up at the ceiling. \"I'm loyal, punctual, and I don't take shit from anybody. Also, I give a pretty mean blowjob and have been told my cunt tastes like the nectar of the gods. Your words, not mine,\" she reminded me.\n\n\"All admirable qualities,\" I agreed. \"What's you're greatest weakness?\"\n\n\"If someone gives me shit I hurt them. Sometimes I end up in jail.\" I laughed and shook my head. \"Did I pass the first round?\" she asked.\n\n\"I'm afraid we can't hire you, Miss Dewpot. According to your application you have a PhD so you're over-qualified.\" I added, \"And you've been convicted of a felony but you neglected to say what for.\"\n\n\"I always knew I would make it someday,\" she smirked. She stood and came around the table and sat on the edge right in front of me. She took the application from my hands and tore it up, letting the pieces fall one by one from her fingers. Then Nico fixed me with those green eyes of hers. \"I'm going to propose something that I want you to take your time thinking about before giving me an answer and I'd like you to not interrupt me with any questions until I'm done.\"\n\nShe waited a moment. I sat silently so she continued. \"You love to lick my cunt.\" It was a statement and not a question but I nodded anyway. \"Now I've been eaten out by half a dozen people and it is my unbiased opinion you are far better than any of them and that includes a couple of lesbians.\" I opened my mouth to comment but shut it quickly. \"It was a phase,\" she explained.\n\n\"Anyway, the other night I was having a powwow with several girls and the topic invariably turned to sex. You may not know this but sometimes when women talk to other women about sex it can be in a very explicit manner. Anyway, the talk came around to oral and listening to these girls I realized they've never experienced anything like I have with you. It made me a little sad for them and made me feel a bit selfish.\n\n\"As I've said before, I can't have a boyfriend but I feel like I've effectively taken you off the market. You should be out there meeting girls and going to town, or more to the point, downtown, but you spend a lot of your free time with me.\" A dark look must have passed over my face because she added quickly, \"Don't worry, I still want to hang out with you and suck that beautiful cock of yours. And I want you to keep on sticking your tongue up my love hole,\" she added. I relaxed and waited for her to go on.\n\n\"The other problem is that you're anti-social. Maybe that's what attracted me to you, initially, since I'm a fellow outcast. So, add all that up and it's a dilemma. I want to keep hanging out with you, I want to help you, and I want to help my fellow woman. So, what's the solution?\"\n\nI shrugged as I didn't have the slightest clue as to where she was going with this. \"To be honest, I didn't know either until last night when I was lying in bed, masturbating while imagining your face buried in my crotch. The answer was right there, staring me in the cunt.\" She paused and smiled. \"I propose that I set you up with girls who are in dire need of a good licking!\"\n\nI sat and stared at her for a very long time. My mouth was possibly hanging open. Finally, I asked, \"Can I talk now?\" She nodded. \"You want to pimp me out?\"\n\nNico shook her head vigorously. \"No, of course not, no money will change hands, although I will get a piece of the action.\"\n\n\"What do you mean?\"\n\n\"Afterwards, you tell me, in glorious Technicolor, all the sordid details. It's a win-win-win for everyone. You meet new girls, they have the best orgasms of their lives, your fame spreads and I get off afterwards.\"\n\n\"Sounds like everyone will get off. Will I?\"\n\nShe smiled and placed her hand on my shoulder. \"Silly boy -- of course you do. It's part of the 'after.' Now,\" she slid off the table and stood up, \"I want you to think about this and tell me your answer tomorrow night. Pick me up at six and take me out to dinner.\"\n\n\"Why should I take you to dinner?\"\n\n\"It's only fair,\" she said over her shoulder as she walked out. \"I'm a convicted felon with a doctorate. I can't get a job in this economy.\"\n\nI sat in that room for a long time and pondered on what kind of sociopath I had gotten mixed up with.\n\nI didn't get any sleep that night. I simply lay there and thought about her proposal. It was both terrifying and titillating. I would have to put myself out there and meet new people. On the other hand I longed to know how other girls tasted. Would they be like Nico or does each woman have their own unique flavor? From the porn I've seen I knew vaginas came in all shapes and shades but would they taste different? Would some girls be clean shaven? I oscillated between panic and arousal all night.\n\nOf course I said yes, because that's what Nico wanted. I told her the next night as we were finishing up our meal at a nice Italian place near the edge of campus. But I also had some concerns. \"Will there be any ground rules?\" I asked.\n\n\"Like what.\"\n\n\"I don't know.\" I looked around to see if anyone was eavesdropping. All the closest tables were engrossed in their own conversations. \"Do I get right of refusal?\"\n\nNico nodded. \"Of course. If you feel uncomfortable or get some weird vibe off a client you can call it off.\"\n\nI was appalled. \"Did you just say client?\"\n\n\"Maybe trick is a better term?\" She watched with amusement as my face turned crimson red. Our waitress dropped off the check and was about to say something but hustled away when she saw me. It took me a minute to realize Nico was toying with me. \"Yeah,\" she said, finishing the last of her soda, \"I'm just fucking with you.\"\n\n\"Someday I'll learn,\" I muttered as I left enough cash to cover the check and the tip. I looked across the table at her. \"Walk you back to your dorm?\" I offered.\n\nOn the walk back she veered us through a graveyard, saying it was a shortcut. The sun had set minutes before but we still had enough light to pick our way along the paths. There, deep in the middle of the graveyard, she sucked me off as I leaned against a huge headstone. When I was finished she forced me onto the ground and straddled my face. The dry, dormant grass scratched the back of my neck as she writhed above me. And, yes, her pubic hair was streaked with green.\n\nOver two weeks went by before we got our first bite. In the meantime, I had my doubts but Nico kept reassuring me her project was on track and that she was carefully baiting the water. She didn't want to be too pushy and scare potential clients away. Instead, she casually dropped little morsels and waited for them to come to her. Even then, she was demure and gave scant details, feeding them just enough scraps to whet their appetite. She knew she had one hooked when a normally reserved girl came to her room and asked explicit questions. The girl's eyes became bigger and bigger with each answer until she broke and asked if Nico could set her up with me.\n\nNico told me all this while sitting on my lap one night and grinding her crotch against mine. I was naked and she was fully clothed. \"I've arranged for you two to meet Saturday night at a house party down on Oak Street.\" The pleasure I had been experiencing was offset suddenly by the sick churning of my stomach and my whole body stiffened. \"Relax,\" she said, rolling her hips in slow, delicious circles. \"I'll be there to introduce the two of you. You'll meet, say hi, and then you'll take her somewhere quiet where you'll shove your tongue into her cunt until she comes.\" \n\nThe feel of her body rubbing against mine made me relax bit by bit until I began to thrust back. Our bodies rocked in time. Those beautiful green eyes watched me intently as my breath started catching in my throat. I reached between us and unsnapped her jeans but she shook her head. \"I need you hungry and on you're A-game Saturday night. You're on a diet until then.\" She buried her head in my neck and continued dry humping me.",
        "Her hips ground against me in short, sharp, rapid thrusts, the intense friction building to a breaking point. My body trembled and tensed and I grunted with every thrust. Sudden warmth flooded my crotch as I came. Nico drove on, trying in vain to reach orgasm but eventually slowing to a stop as I softened under her.\n\nShe stood up and fingered the wet spot on her jeans, satisfied. \"I'm going back to my room to masturbate. Maybe this time I'll get my whole fist in. I'll see you Saturday night.\" Before I could say goodnight she was gone. I spent the next hour touching things on my desk to ensure Nico's safety.\n\nBy the weekend I was a nervous wreck and could hardly keep any food down. The anxiety of meeting someone new and the pressure I felt to perform were wreaking havoc on my body. On Saturday evening Nico found me curled up on my bed. She stroked my head and slowly coaxed me first to a sitting, then to a standing position until she had me walking out the door. We held hands all the way there, me gripping hers the way a drowning man grips a lifeline. At the steps to the house she pried her hand from mine, smiled and said, \"Relax. You'll do great.\"\n\nThe party wasn't as crowded as I feared although it was relatively early. Nico approached a conservatively dressed woman and introduced me to Amanda who was as tall as me. Her white blouse was buttoned all the way up to the top and her black knee-length skirt had nary a speck of lint on it. She was decently attractive in spite of the stern look on her face. We shook hands, which I found oddly formal for the circumstances. Nico excused herself to go find a drink.\n\nAmanda and I looked at each other for a moment before we both turned away. I could see the embarrassment etched on her face and I knew exactly how she felt. Nico caught my eye from across the room and she made a shooing motion with her hand. I swallowed hard and said, \"Well, this has to be the most awkward introduction I've ever had.\" Amanda smiled briefly and her face softened. I leaned forward and said softly, \"Maybe we should find someplace quiet to talk.\"\n\nAmanda nodded and led on, threading our way through the gathering crowd and up the staircase. The second floor was nearly deserted and we found a bathroom with a working lock on the door. Amanda leaned against the counter, her body rigid. I stood in front of her and a little off to the side. I held up my right hand for her to see then I slowly brought it down to her hip. She stiffened slightly at the touch but then relaxed.\n\n\"I'll stop any time you want -- Just tell me,\" I said quietly. She nodded as I caressed her hip through her knit skirt. As she relaxed my hand traveled down her leg and low across the front of her thigh. I stopped there, gathering her skirt in my fingers and slowly hiking it up until I touched skin.\n\nI watched her closely. She was very still, with her eyes closed and her breaths shallow, looking fragile and delicate. My palm pressed against her skin and I thought I heard the slightest hitch in her breath. With a slow, deliberate movement I ran my hand around to her inner thigh and up. Her body rose with my hand until she was on her tip-toes and couldn't go any higher. She was biting her lip now and when my hand brushed over her panties there was a sharp intake of breath.\n\nWith one finger I lightly stroked her sex through the cotton material. I could feel her swell beneath my touch, the subtle ridges and valleys becoming more pronounced with each passing minute. Amanda lowered her body until her feet were flat on the floor, pressing her cunt into my hand. My touch grew bolder and her face grew flushed. A glow was starting to shine from within her, a luster that brought out her beauty.\n\nShe gripped the edge of the counter now, the muscles of her arms tight bands of pent up frustration. I used all the skills Nico had taught me. My fingers danced, drawing a low moan from her. The swell of her clit was pronounced and I strummed it rapidly. She bit back another moan and took in two great hitches of breath before the dam burst. I watched as the orgasm rolled through her and in that moment she was the most beautiful creature I had seen. When she finally opened her eyes she smiled at me.\n\n\"Thank you,\" she whispered, her words barely audible. She started to smooth out her skirt but I turned her and backed her up to the wall opposite the counter. \"What-,\" she began to ask but stopped when I crouched before her. I looked her in the eyes as I pushed her skirt up. Amanda watched wide-eyed as I kissed her mound through her panties. Her scent made me instantly hard, drawing my face into her sex. I hooked my fingers in the elastic waistband and pulled her panties off.\n\nBlondish-brown pubic hair, thick and curly, greeted me. Swollen labia called to me. I kissed her and she shuddered. My tongue parted her with ease and I tasted her. I plunged in and left the world behind until the joyous sound of her orgasm filled my ears and brought me back to earth. I looked up and saw she was watching our reflection in the mirror. Her body sagged from the intense release, prompting me to halt. \n\nShe smiled tiredly at me, her face glowing. Her lips brushed my cheek in thanks. After she was gone I waited a few minutes and washed up. \n\nWhen I returned to the party I searched for Nico but couldn't find her among the throngs of people now tightly packed in the living room. The noise of the crowd and the music assaulted my ears. The walls and ceiling suddenly pressed in and I broke out in a cold sweat, fear gripping my chest in a giant bear hug. There wasn't enough air in the room and panic washed over me. I staggered blindly through the crowd until I found the kitchen. Pushing through the group gathered around a keg I stumbled out a door and onto the back porch. Only when the door was closed tightly behind me did my chest finally loosen.\n\nI sat on the railing with my back against the house, safely keeping the wall between me and the party, the chill December air discouraging most people, aside from a few hardy smokers, from using the back porch. By the time Nico found me my limbs were stiff with cold and my cheeks were raw. One look at my face and she understood immediately and retrieved our coats from inside. Not even my coat and her arm draped around me on the walk home could stop me from shivering.\n\nNot a word was spoken as she walked me back to room, undressed me and forced me into bed. Nico turned out the light and after a brief rustling of clothing she joined me under the covers. Her body pressed up against my back and her arms wrapped protectively around me. Little by little my shakes subsided.\n\n\"Do you want to talk about it?\" she asked when I was finally still.\n\n\"Which: Amanda or the crowd?\"\n\nI could feel her shrug against me. \"Tell me about the crowd. What happened?\"\n\n\"I'm not sure. I've never had it so bad. I felt like I was drowning in air and I was going to die if I didn't get out of the house.\" A shudder ran through me as I spoke and Nico hugged me tightly.\n\nAfter several minutes she said, \"I spoke with Amanda afterwards and she was one happy girl. It was almost as if she's a whole new person.\"\n\nI nodded numbly. \"That's nice. So, what's next?\"\n\n\"We wait,\" she said. \"Amanda will tell one of her close friends. Maybe not right away but I bet that after the New Year I'll be hearing from someone who wants to meet you and we'll take it from there.\" I lay there, quiet, wondering if I could go through that again. I know I could easily be with another girl but I didn't think I could go to another party. Nico ran her hand lightly over my chest and abdomen. \"Tell me about Amanda.\"\n\nSo I told her. And as the words tumbled out Nico's hand moved down to my crotch, her pulls becoming bolder as I became fully erect. She took me in her mouth as I described how beautiful Amanda looked when she first came and Nico swallowed my seed when I told her how Amanda's thighs squeezed my head.\n\nNico lay back and forced my head down between her legs. I teased and tortured her with my lips, tongue, and fingers, her orgasms becoming more and more frequent until they merged into one long, sustained orgasm. With tired arms she pulled me up to her and rolled on her side. I wrapped an arm around her and we slept.\n\nSometime later I dreamed Nico was straddling me, facing away. She was rubbing the tip of my cock slowly back and forth along her slit until it slid slowly inside. Her hips moved slowly up and down, soft grunts punctuating every downward stroke. In my dream I was immobile, unable to use my hands to clutch at her flesh. I'm not sure if I wanted to stop her in order to protect her or to help her body move against mine. Nico leaned forward and raised her hips until just the tip of my cock remained inside her. Her body bounced lightly in short strokes, her cunt gripping the ridge of my head. Wave after wave of pleasure flooded my body.\n\nI awoke to find my tongue buried in her cunt and my cock buried in her mouth. Her body shuddered above me, driving her sex hard against my mouth. I came long and hard, my fingers digging into her buttocks. Moments later she came, my seed spilling from her mouth as she cried out, pooling on my stomach. Her body slipped off mine and we slept again.\n\nIn the grey dawn light I awoke to find Nico quietly getting dressed. \"I had the most amazing dream,\" was all I could say. She smiled and kissed me lightly on the lips. Her fingers toyed with the dried cum encrusting my stomach.\n\n\"I know,\" and she was gone.\n\nFinal exams consumed me for the next week and a half and then came the two week holiday break. I didn't speak to Nico during that time but we did text some, mostly just light banter about having to spend Christmas with our families. On New Year's Eve I started to text \"miss u\" but deleted it without sending. I did miss her and I wanted more than anything to be with her but her words still rang in my head: I can't have a boyfriend.\n\nAfter almost three months of knowing her, I still didn't know the reason behind her declaration. I was afraid that if I brought it up it might make her angry or scare her away. What I had with Nico was still a relationship, albeit a twisted one, one I didn't want to risk by being overly forward or presumptuous. \n\nStill, I couldn't stop thinking of her, wondering what she was doing right at that moment and practically pouncing on my phone every time a new text came in, hoping it was her and being crushed when it wasn't. I spent the holidays quieter than usual, even with a house full of relatives. In my mind I was constantly replaying our last time together and the more I dwelled on it the more uncertain I became. \n\nWas it a dream or did Nico really have sex with me, however briefly? There was an unnatural clarity to all of the sights and sounds and sensations, almost as if they had been amplified. I couldn't trust my memories as my psyche had been significantly bruised earlier that evening by my panic attack. The sequence of events was disjointed in places the way dreams are but I could still feel clearly the way her cunt had enveloped my cock and the beautiful friction when she rode me. The intervening weeks had done nothing make it fade the way dreams do.\n\nThe unceasing obsessing took a toll on me and my thoughts started spiraling uncontrollably. I became desperate enough to take my anti-anxiety pills out of the medicine cabinet and hold the bottle in my hand for close to an hour, staring at it. I hated those pills as they made me see the world through a sort of veil and I always had the distinct feeling I was missing something. I never felt like I was all there when I was on my meds. What saved me in the end was I thought of Nico's eyes and a calming peace came over me. The pressure slowly lifted off my chest and I put the bottle back without taking one pill.\n\nI finally received a short text from her just after midnight: Happy fucking new year.  Short and to the point, just like Nico.\n\nOn my second night back at school I was working the graveyard shift at the computer lab and since classes didn't start until the next day I was the only one working. I surfed the web aimlessly, trying to ward off sleep. It was after two in the morning when Nico came in wearing a leather miniskirt and matching leather jacket, her hair was spiked into a mowhawk. Fishnet stockings, black fingernail polish, heavy eyeliner and black lipstick completed her outfit. Whenever she moved a dozen zippers on her jacket jangled softly.\n\n\"I'd like to apply for a job,\" she said as she leaned over the counter. I smiled at her and handed her the form which she filled out in a matter of seconds. \"How about an interview?\" she asked as she gave back the application.\n\nI shook my head. \"Can't. I'm the only one working and I have to stay at the desk. You'll have to come back some other time.\"\n\n\"Ok then, let me back there, I want to sit with you.\"\n\n\"Sorry, you know the rules.\"\n\n\"Come on, there's only one fucking' guy here. Who's he going to tell? Let me back there and you can pretend to be training me on how to turn on a computer or something.\" I frowned at her, trying to think of a good reason not to. Nico shrugged, sat up on the counter, swung her legs over and hopped down into the workstation before I could stop her. I shot a glance at the student sitting at the far side of the room but he hadn't noticed.\n\nNico sat in a chair next to mine and lazily spun back and forth. \"How was your break?\" she asked. \"Did you miss me?\"\n\nI felt my ears burn. \"It was ok and, yes, I missed you.\"\n\n\"That's sweet. How much cunt did you eat?\"\n\n\"I had none.\"\n\n\"Sounds kinky. Who was the nun?\" I shook my head in mock frustration trying to mask the laughter I felt inside. Nico leaned back in the chair. \"When do you get off?\" The question sounded mostly innocent.\n\n\"Not until six.\"\n\nShe frowned and looked around the lab. \"I can see why you'd like working a shift like this, what with your condition and all.\" There was a bit of venom behind that last bit and it stung a little. Her face suddenly brightened. \"Hey, it looks like we may have another client, a friend of Amanda's. I'll try to set it up where there aren't a whole lot of people so you won't, you know, freak out.\"\n\n\"I don't know,\" I said, \"I'm not sure I want to.\"\n\n\"This is about helping you meet other women and sharing your gift with them. Don't you know how it made Amanda feel? She's still walking around a smile glued to her face and she has you to thank for it. Doesn't that make you feel good inside, knowing how you helped someone?\"\n\n\"Yeah, I guess so,\" I admitted.\n\n\"Look, we're starting to build some buzz. We need to strike while the iron's hot. There's been some of word of mouth about you.\"\n\n\"Word of mouth,\" I repeated. I turned the phrase over and over in my head, liking it more each time. \"Good one.\" \n\n\"Besides, didn't you like the post-game between us?\" I couldn't help but smile. \"Yeah, I know you enjoyed that. So, why not do it again?\"\n\nI could think of one big reason why I didn't want to but I was afraid to say it loud. Instead I swallowed it down and said, \"Ok, I'm in.\"\n\nHer smile lit up her green eyes. \"Cool. Show me your right hand.\"\n\nSlightly thrown by her sudden change in subject, I did as she asked, although in retrospect it was more of a command than a question. I held out my hand, my palm towards her. She leaned in, studying my hand closely before delicately folding in three of my fingers and my thumb until just my index finger was pointing up. This she took in her mouth, wetting it with her saliva.\n\nI watched, fascinated, as she slowly extracted my finger, her teeth dragging lightly over the whole length. With her hand she guided mine up under her skirt and my moistened finger slid easily into her. I could hear how wet she was and I could feel how hot she was. Nico moved my hand back forth, silently masturbating for the next several minutes with a wicked grin on her face. \n\nWhen she finally withdrew it I could see her juices glistening in the cold fluorescent lights. I started to bring it up to my mouth but she stopped my hand and sucked my finger into her mouth. With great gusto she fellated my finger in the same manner she had used on another part of my body. My cock strained against my jeans as I watched my finger disappear and reappear between those black lips. With a smile and a light kiss she let my hand fall into my lap.\n\nThe lone student had gathered his things and was approaching the counter. With my erection I was in no condition to stand but fortunately Nico jumped up and handed him his ID. \"Thanks for coming in. Have a good night,\" she said pleasantly. He murmured a goodnight and left.\n\nNico leaned back against the desk. \"Now, when do you get off?\" This time, the question was definitely loaded.\n\n\"Six,\" I teased, pretending to be clueless.\n\n\"No fucking imagination,\" she muttered, shaking her head. The next instant she was kneeling before me, unbuckling my belt and undoing my zipper. As it turns out, it was only a matter of minutes before I got off.\n\nNico, on the other hand, got off repeatedly over the next hour. I have to admit it was the best shift I have ever worked in my life.\n\nOur second client was a petite, mousy girl with dirty blond hair. We met at her apartment where she was waiting with Amanda. Amanda hugged me tightly when we walked in and introduced me to her friend Sara who only managed a barely audible greeting. Sara took me to her bedroom while Amanda and Nico talked in the living room.\n\nSara and I faced each other for several awkward moments in the darkness. She stood suddenly on her tiptoes and gave me a brief, nervous kiss before shoving me hard onto the bed. Quick as a cat she was on me, peppering my face and neck with hard kisses. I tried to slow her down and assume control but her movements were frantic and unpredictable. Before I knew it she had my shirt off and was wriggling out of her clothes.\n\nSara crawled up my body and settled her crotch on my head. She ground her sex against my mouth, the pressure so great it felt like my jaw was going to dislocate. In desperation I tongued her clit hard and she came with a shudder, drenching me in her juices. I bathed her with long licks from the very bottom of her cunt up to the hard nub of her clit. Sara relaxed and gently rode my face to several more orgasms. When she was finished she knelt beside me and licked my face. \n\n\"Can I touch you?\" Sara asked meekly as I stood by the bed tucking in my shirt. I nodded and she reached out with a tentative hand to feel my crotch. She rubbed and squeezed me for a minute before asking, \"Can I see it?\"\n\nI shrugged and undid my pants, exposing myself. She stared at it, wide-eyed, and made several attempts to reach for it but always pulled her hand back. \"It's ok,\" I reassured her.\n\nSara steeled herself before taking me in her hand, running her fingers up and down the length before lingering for several minutes over the tip. Her thumb and forefinger rubbed the head, smearing the pre-cum and making it slick. She tugged on my cock, her pace increasing with each passing minute until her hand was a blur. Her head swayed towards me, her lips open and I thought she was going to take me in her mouth. Instead, she gave me a firm squeeze and turned away to gather her jeans. I was so close to orgasm.\n\nWhen we rejoined the others in the living room, Nico and I made our goodbyes. Sara whispered something to Amanda who raised her eyebrows in surprise. Amanda hugged me goodbye, this time pressing her thigh firmly against my crotch for several long seconds. As soon as the door was closed behind us shrieks of laughter emanated from the apartment. Nico nudged me and said, \"You did that. You created that joy.\" I smiled and stuffed my hands in my pockets to hide my erection. \"Come on,\" Nico said, \"let's go back to your room and you can tell me all about it.\"",
        "We had a few more clients in January and February and by early March we were averaging almost one a week. Each girl was different and each girl was special in their own way. My favorites were the introverts like Sara who couldn't speak in an audible voice or look me in the eye but once we were alone transformed into a feral ball of lust. These encounters were exciting, unpredictable, terrifying, and draining. Their energy and enthusiasm was always matched and sometimes exceeded by Nico, as if she was somehow competing against them.\n\nOnly once did I back out and that was because the girl was falling down drunk when we showed up at her place. Three days later we met again and everything worked out great. By late March I had been with more girls than any guy I knew. Nico's plan was working just like she planned: The girls were happy, I was meeting new people, and Nico and I both enjoyed what we had termed 'the debriefing.' The only problem was that although I enjoyed being with these girls, I began to feel hollow.\n\nI wanted the emptiness to be filled by Nico but, emotionally, she was still keeping me at arm's length. In the afterglow of her orgasms her defenses would sometimes break down and she would let me in a little but those moments were rare and fleeting.\n\nOne spring day we were deep in the bowels of the main library where I told her about the latest client. Without warning two slickened fingers were forced between my lips. The taste of her made me hard in an instant. Unable to control myself, I dropped to my knees and reached under her skirt. In my haste to remove her panties I tore them, making Nico gasp. I lifted her skirt and saw her nectar welling up along her slit. \n\nWhen I parted her sex a large drop rolled slowly down. When I plunged my tongue into her she moaned and cradled my head. When she came she screamed quietly through pursed lips.\n\nI stood and wiped my mouth with the back of my hand. Our part of the library was as quiet as a tomb apart from Nico's panting. She took a moment to look around to be sure we were still alone then reached out to squeeze the bulge in my pants as she kissed me. Squeezing turned to rubbing, rubbing turned to unfastening, unfastening turned to stroking. By the time the kiss ended her hand was deep down the front of my briefs.\n\nNico pushed my jeans and briefs down past my buttocks and let gravity pull them slowly to the floor. We both looked down and watched as she stroked me, the deep-red head of my cock appearing and disappearing in her pale fist. She kissed me again, her tongue probing my mouth before running lightly over my lips. She smiled and we both looked down again to see clear fluid seeping from the tip. There was now a quiet wet sound keeping time with each pass of her hand over the head. I swelled in her hand.\n\nShe knelt and kissed just the tip, rubbing the head lightly over her lips like an obscene lip gloss. I shivered. Kiss followed kiss on my fleshy head, each kiss longer and more sensual than the last. I watched her make out with my cock - her eyes closed, her lips shiny with my precum, her tongue now integral to the kisses and wetting my head with her saliva -- and a heaviness grew in my balls. She had not yet taken me in her mouth and I was close to coming.\n\nAs my body tensed her kisses grew more frequent and more open mouth, teasing my orgasm to the surface. Occasionally the tip would slip into her mouth and her tongue would suckle. Nico toyed with me the way a cat toys with a mouse, making me tremble. When I was at the limit of self-control, she paused and looked up.\n\nThe pleading and desperation etched on my face made her smile. Her eyes locked on mine, she slowly and deliberately kissed the tip. A tremor ran through me. With the next kiss her lips wrapped around the head and her tongue flicked. A second tremor ran through me. The light in her eyes told me how much she enjoyed inflicting this exquisite agony upon me. Nico took me a little deeper and dragged her teeth gently over the ridge of the head, sending yet another tremor through my body.\n\nMy cock slowly reemerged until she was again kissing just the tip with slow, deliberate, and exaggerated motions. Her full lips opened wider and closed slower until the head of my cock rested on her lower lip pointing at her waiting, wanting mouth. Her tongue danced over me and I hissed through gritted teeth. My cock twitched and I saw my seed jet into her mouth. Her lips wrapped around me and sucked gently until I was spent. As she stood, she pulled up my pants, tucked me in and zipped me up. Nico gave a little shrug and practically skipped away. I followed at a slightly slower pace.\n\nWe ended up at a nearby coffee shop. She ordered an herbal tea for her and a large orange juice for me. We sat at a corner table looking out at the street while enjoying our drinks. Nico sipped her tea and I shook my head at her.\n\n\"What?\"\n\n\"Our 'behavior' was a little too public and risky,\" I said.\n\n\"Perhaps, but didn't the risk add to the enjoyment?\" she countered.\n\n\"Yes,\" I admitted reluctantly, \"but we should have been more cautious. We could have been arrested.\"\n\n\"You were a willing participant,\" she observed. \"You could have stopped.\"\n\nI stared out at the people passing by on the sidewalk, mostly students laden with heavy backpacks. Could I have stopped? I thought back to moment she stuck her fingers in my mouth and realized that, no, I wasn't able to. Once I had tasted her I had to have more. Just thinking about it was making me hard again.\n\n\"You could have stopped, right?\" she repeated. She watched me over the rim of her cup as she sipped and I could see she already knew the answer by the way her mouth was curling up at the corners. I shook my head in response and drank down the rest of my juice. \"Yeah, I thought so. I've seen the way your eyes glaze over once you know you're going down on me. A part of you goes off to some faraway place until you're finished.\"\n\n\"So, does that make me an addict?\"\n\n\"Yeah. And I guess that would make me your drug,\" she added with a devious grin.\n\nI thought for a moment. Drug wasn't the word I would have used but it would do for now. \"More like, you're my drug and my pusher.\"\n\nHer grin faded and an odd look came over her. I couldn't tell if she was disturbed by my comment. I don't think she knew, either. I watched her bite her lip as she mulled it over before I said what had been weighing on me the past couple of months.\n\n\"I like being with you.\"\n\n\"No shit. I can tell by the way you come in my mouth.\" Two chairs away a spoon clattered noisily to the table. The girl who dropped it was straining to watch us out of the corner of her eye. Nico turned to the girl and confided, \"You know how it is, when you're sucking a guy off and you can feel his body tense as he tries to hold back, and that moment, just as he explodes, you feel momentarily afraid that he'll never stop. With Thomas I never want it to stop. I want to drown in his seed. And his cock is so big I can barely wrap my lips around it.\" Nico turned to me. \"Thomas, show her how big your cock is.\" The girl gave a squeak, picked up her backpack and hurried away.\n\n\"Why do you have to be mean like that?\"\n\n\"Oh, please,\" Nico said rolling her eyes. \"I did her a favor. She's hurrying back to her apartment or dorm and when she gets there she's going to lock her bedroom door, jump into bed and jam as many fingers as possible up her tight little cunt. And as she's frigging herself to a glorious climax she'll be thinking about your big, fat cock and how it would feel in her mouth or maybe her cunt. Come to think of it, I also did you a favor.\"\n\nI shifted nervously and leaned in, lowering my voice. \"Anyways, what I mean is, I like being with you more than anyone else. I want to be with you, and only you.\"\n\nHer green eyes became hard ice in an instant. The dagger of her stare pierced me through the heart and I died a little inside. \"I can't have a boyfriend,\" she recited her mantra.\n\n\"This is absurd. Considering our situation, we're practically boyfriend and girlfriend, just not in a traditional sense.\" Nico glowered at me from across the table. \"Is it your parents? If so, I'm willing to meet them right now and you know how I am around new people.\"\n\n\"I'm not going to discuss it!\" Her words had acquired a razor's edge and I knew her next words were going to cut me deeply. We sat in stony silence as she finished her tea. Nico clanged her cup hard on the table, whispered, \"Fuck you!\" and grabbed her backpack and stalked out.\n\nI didn't bother to follow because I knew she didn't want to talk to me. I waited a few minutes before leaving, turning in the direction opposite of Nico's. My insides were roiling with doubt and despair. Had I ruined a good thing, something so strange and unique that if I told anyone they wouldn't believe me? Was the damage irreversible?\n\nNico punished me by not returning my calls and texts for almost a week. When she did finally contact me she made no mention of what I had said. Instead, she had set me up with another client for the following Saturday. Nico also told me she wouldn't be there as she had to go home for the weekend. I took it to mean she was still mad. The lead weight in my stomach grew heavier and sank lower. I wasn't interested in seeing a client but I really didn't have a choice. Nico expected me to go and, of course, I always did what she said.\n\nPromptly at nine, I put my game face on and knocked on the door of an off-campus apartment on the south side of town. The client, Kelly, had wavy, shoulder-length strawberry-blond hair, a round face, and large blue eyes. Grey sweatpants and a hooded sweatshirt masked the shape of her body. All I knew was that she was only a few inches shorter than me. Kelly smiled nervously, biting her lower lip, as she invited me in. I kicked off my shoes and followed her down a long narrow hallway to the living room furnished with the typical cheap rental unit furniture.\n\n\"Have a seat,\" she said pointing to the couch. \"Would you like a drink?\"\n\nNormally, I would have declined but since I was in a sour mood I figured a drink or two might help. \"Yeah, sure.\"\n\nKelly stood on her tiptoes and looked in a kitchen cabinet. \"Looks like we have tequila or tequila.\" She pulled out a bottle and held it up. \"I recommend the tequila.\" She returned with the bottle, a couple of glasses, a small bowl of lemon wedges, and a salt shaker, and knelt at the coffee table opposite of me. \"Have you done tequila shots before?\" I shook my head. \"It's simple. Wet the back of your hand here,\" she licked the skin between her thumb and forefinger, \"sprinkle on some salt, lick the salt off, throw the shot back and suck on the lemon.\" She did the last three in rapid succession. \"The trick is to do it quickly.\"\n\nI did as she showed me, although I was a bit clumsy at it. The tequila burned on the way down and ignited a fire in my belly. The alcohol itself tasted awful but since my taste buds were confused by the salty and sour flavors it was not altogether unpleasant. Kelly moved onto the couch beside me and we spent the next half hour talking and doing a few more shots each. My thinking was starting to get fuzzy and I realized we were both laughing way too easily. I also discovered that we were holding hands, our fingers interlaced.\n\nI stopped laughing and so did Kelly. Suddenly she looked very serious and very kissable. We stared at each other, the moment frozen in time. I could feel the tug of gravity her mouth exerted on mine. I submitted to the pull and, at last, our lips met. She tasted like spring, of sunshine and flowers and new growth. Our arms were wrapped around each other and I pulled her sideways onto my lap. Her vibrant tongue tangoed slowly with mine. The heat in my belly was now matched by the ache of longing in my groin. Kisses crashed on top of kisses, some slow and tender, some sudden and violent, with the role of aggressor swapped repeatedly and freely. Eventually, a noise from the bedroom broke the kiss.\n\n\"Is someone here?\"\n\n\"No,\" Kelly said, \"my roommate's gone for the weekend. It must be the cat. I would introduce you but he's extremely territorial and vicious to new people.\"\n\nI excused myself and used the bathroom. I stared at my reflection for a long time, wanting this evening to last forever and wondering how to do it. My reflection had no answers. When I returned over a dozen candles illuminated the living room. Blankets were spread out on the floor television with Kelly standing in the middle. \n\nWordlessly she peeled off her sweats and the light of the flickering flames danced over her curves, accentuating the hills and deepening the valleys. Shadows hid her sex and the candlelight only offered brief hints when she turned. I was mesmerized. She smiled and held out her arms, breaking the spell.\n\nI reached out with a tentative hand to the swell of her breast. The nipple stiffened beneath my touch. My thumb swirled, caressing and teasing it to full height and freeing a soft mewing from Kelly. She knelt and lay back on the blanket. I followed, pulling my shirt off and lying next to her. While we kissed my hand roamed her body, tracing her contours until delving into wet heat between her legs. Her thighs clamped hard around my hand, holding it there as she twisted beneath me.\n\nSoon my mouth was exploring her, starting at her ears. There was a sudden and urgent need to taste every part of her body. I forced myself to go slow, to relish each inch as I was afraid that once I had satisfied her our evening together would end. I lingered at her breasts, the soft flesh filling my hands and my mouth, her nipples rigid and demanding attention. My kisses trailed down her belly and with each breath her flesh rose to meet me. Pubic hair tickled my lips. I was almost to her secret place when I diverted my attention to her thigh, travelling down one leg and slowly back up the other.\n\nKelly was panting as I kissed up her inner thigh. Her smell was intoxicating, a siren song, an invitation to crash on her shore. I was dizzy with desire when my tongue first parted her and tasted her succulent nectar. I dove in and drowned in her sea, her distant cries encouraging me until her body thudded and quaked with an orgasm. I rested my head on her stomach and was sorry it was over so soon.\n\nHands tugged tenderly at my hair, pulling me up until our lips met again. She worked at my fly while we kissed, using her feet to push my jeans and briefs down until I was able to kick them off. My cock pulsated between us. I could feel the heat of her sex on mine, the down of her pubic hair against my shaft. Kelly reached down and gripped me and her eyes widened in surprise. She lifted her head and peeked between us. All she said was, \"Oh.\"\n\nWith her hand she guided me to her cunt. The tip slipped in and a shudder ran through me. After a moment's hesitation I slid deliciously into her. A tight, velvet glove had a hold of me and the slightest movement sent jolts of pleasure down my shaft to my balls. They felt heavy and full, like ripe fruit about to burst.\n\nI held still, vainly attempting to hold off my orgasm, but Kelly moved beneath me, driving me towards the cliff. With a groan I pulled out in the nick of time and sudden, slick heat pooled between us. When I was finished I retrieved a washcloth from the bathroom.\n\n\"Sorry about that,\" I mumbled as I cleaned her up. \"That was rather quick.\"\n\nKelly propped herself up on her elbows and watched as I cleaned myself. \"Was that your first time?\" I nodded. \"Then it's not surprising. I mean, I didn't give you much of a chance. I got caught up in the moment and took it too fast. I didn't mean for us to fuck just then.\"\n\n\"Sorry,\" I said again.\n\n\"Stop saying that,\" she chided. \"You did nothing you have to apologize for.\" \n\n\"Do you want me to leave now?\"\n\n\"God, no! I want you to stay. We're not done yet.\"\n\nI watched her walk down the hall towards the bedroom. She was back in less than a minute with a small box in her hand which she tossed on the coffee table. She knelt in front of me, looked me over and gently pushed me onto my back.\n\n\"The second time you'll last much longer. Now lie back and enjoy,\" she said as she lay next to me.\n\nShe kissed me deep and long as her hand played over my chest and stomach. One leg draped over my thigh, forcing my legs slightly apart. Her touch moved lower, tracing an outline on my abdomen of my semi-hard cock. A fingertip dragged lightly down my shaft, flooding my body with electricity. Kelly looked down and watched as I became more erect under the gentle touch of her thumb and forefinger sliding up and down the length of my cock.\n\nManeuvering between my legs she kissed the base of the shaft. My cock twitched sharply as her tongue slid up the underside of the head. She smiled and took me in her mouth. I swelled even more until her lips stretched around my girth. When she was satisfied she sat up and pulled a condom out of the box.\n\nKelly rolled it down my cock and straddled me. Reaching down she rubbed the head in small circles against her cunt until her eyes rolled back into her head. Her weight settled on me and I slid in up to the hilt. With the condom the sensation was slightly muted but still intense. She rode me, slowly and confidently, her body moving in the fluid dance of sex. When I finished she sank slowly to the floor.\n\nI pulled the condom off and covered us with a blanket. The rest of the night we alternated between resting and fucking until the supply of condoms was exhausted. When those were gone we used our mouths and hands until the gray morning light crawled in through the window. Eventually we slept on the floor.\n\nI dreamed I was lying with Kelly in my arms and I opened my eyes to find Nico standing over me, glaring at me. I jerked awake to a sunlit living room. Kelly smiled wearily up at me and kissed my sore lips. She stood and pulled me to the bathroom. \n\nWe showered, taking our time to wash and massage each other's achy body under the hot spray. Unable to contain ourselves we fucked up against the tile wall as the water changed from hot to warm to cool to cold. I was shivering as Kelly finished me off with well-soaped hands. By the time I left every part of me felt raw. For once I was glad Nico wasn't around for a post-game encounter.\n\nI didn't see or hear from Nico for another two weeks. Normally this would have sunk me emotionally but I was initially buoyed by my night with Kelly. I was dying to talk to her but, once again, I didn't have her number or last name. Whenever possible I took detours through her neighborhood but never spotted her. I suspected that the apartment we used was borrowed from one of her friends. I wasn't even sure Kelley was her real name.\n\nWhenever I thought of Nico, though, I fell into a sour mood. It was odd that someone who initially made me so happy was now the root of my pain. Her silence cut me deeply and I eventually came to the conclusion it had to end. That was it, I was done. I sent a text to Nico telling her I quit or was retiring or whatever she wanted to call it because I was through. I couldn't do it anymore.\n\nA few days later Nico showed up at the computing lab, stomping past the long line of students waiting for a computer. End of semester projects were coming due and finals were just around the corner so the lab was packed. Nico looked pale and tired and agitated.\n\n\"Can I talk to you?\"\n\nI told a coworker I was taking my break and led Nico to the conference room. \"How have you been?\" I asked her.\n\nMy question must have caught her off guard because she looked surprised and a little confused. \"Okay, I guess. You?\" I shrugged. She went on. \"This might be the last chance I get to see you, you know, this semester. Sorry I've been such a bitch, it's not fair to you.\" She was silent for a long time before she asked, \"How did it go with Kelly?\"",
        "That was the question I was dreading most. I didn't want to lie to Nico but I didn't want to tell the truth, either. At least, not the whole truth. \"It went pretty well. She seemed happy when I left.\" Nico nodded thoughtfully. Finally I asked, \"Do you want to hear about it?\"\n\nShe shook her head. \"No, I don't think so.\" She frowned at the floor. \"You really want to quit?\"\n\n\"This whole thing has grown out of control. I can't do it anymore. It's not what I want.\"\n\nNico nodded but didn't argue with me like I had expected. \"I guess that's that.\" She grew quiet, as if having an internal debate, before she asked, \"How long is your break?\"\n\n\"At least another ten minutes. Why?\"\n\n\"I was thinking we could have one last time together before the school year ended. What do you say?\"\n\nI thought of Kelly and my immediate thought was, no. But then I realized that for the first time Nico was asking me, not telling me, and I glimpsed a hint of pleading in her eyes so I relented. \"Okay. What do you want to do?\"\n\nShe smiled and sat on the edge of the table. \"Let's do what you want.\"\n\nAnother first. I stepped between her legs and slipped my hand under her skirt and wasn't surprised to find she wasn't wearing panties. She was swollen and wet and ready, as if she had been working herself over just before she got to the lab. Nico undid my pants and pushed them down. I expected she was going to give me a blowjob or handjob but instead she scooted to the edge of the table, grabbed my cock and rubbed it against her wet slit. After some initial resistance I eased in. Just like that I was fucking Nico and it was then I realized nothing bad was going to happen to her. It was incredibly liberating to let go of the irrational fear. \n\nShe was tight, incredibly tight. Nico lay back, pulled up her skirt and fingered her clit. I watched my cock sink into her swollen sex. It reappeared, wet and shiny, stretching and pulling her nether lips. I paused with the tip barely inside her and held it there. Her strumming fingers flashed over her clit. When I couldn't wait any longer I plunged back into her.\n\nAll those months of frustration I poured into fucking her, channeling it through my cock. Nico fucked me back with equal abandon, her feet spurring me on, her fingers flying, her cunt squeezing and convulsing. She sat up suddenly and climbed onto me, wrapping her arms around my neck and wrapping her legs around my waist, and bounced on my cock.\n\nI grabbed her ass with both hands to support her and marveled for a moment how light she was. Nico hungrily met every one of my thrusts, her breath hitching with every stroke, until I grunted, \"I'm going to come.\"\n\n\"Then do it,\" she hissed through clenched teeth. Her body moved desperately against mine and our rhythm became fractured and erratic as I erupted. I stumbled back against the wall and waited as her bobbing slowed to stop.\n\nShe slipped off and adjusted her skirt while I dressed. \"Goodbye, Thomas,\" she said a bit sadly, turning away quickly towards the exit. That's when I noticed she was wearing the same exact outfit as the first night we met. Before I could call to her she was gone.\n\nI didn't hear from Nico until the end of July. I was living at my parents' for the summer and received a small padded envelope in the mail. Inside were a USB stick and a brief note from Nico:\n\nThomas- There's a video message for you on the stick. The video is for you and only you and it requires a password for you to access. The password is a simple one-syllable word I taught you this past year. --N\n\nIn the relative seclusion of my room, I plugged the USB stick into my laptop. When the dialogue box appeared asking for the password, I hesitated momentarily before typing in: cunt. The video player started up and there was Nico looking out at me from my screen. I couldn't help but smile when I saw those green eyes but the smile was short-lived as I noticed Nico was pale and drawn, she wasn't wearing any makeup, and her hair was now a more natural auburn color and rather unkempt. The wall behind her bed was plain white with no decorations. The vibe was definitely institutional. Frowning, I clicked Play.\n\n \"Hi, Thomas. There's no easy way to say this, so here it is: The reason you've received this video is that I am dead.\" \n\nMy vision darkened, the walls and ceiling closed in on me. I forced myself to take deep slow breaths until the pressure lifted. On-screen, Nico was blinking back tears and looking away from the camera. After a minute she took a shaky breath and went on.\n\n \"There's so much I want to tell you and there's so much I need to tell you. I owe you the truth and more.\n\n\"I have a type of brain tumor known as a glioblastoma multiforme that is rather malignant and was rather advanced when it was found over a year ago. The location of the tumor made surgical treatment impossible. I did have radiative therapy but it was ineffective. Even if that did work it was only going to buy me a few extra months. The prognosis was grim: Most people in my condition die within six months; a small percentage make it to twelve. I'm on month fourteen and counting so I feel like I've won some sort of cosmic sweepstakes.\n\n\"After I was diagnosed I had a choice. I could either spend my remaining time at home with my family, enduring countless trips to the hospital for treatment that might buy me a short amount of time or I could go back to school and try and live a normal life.\n\n\"I chose life. I was nineteen and I wanted to be normal or, at least, pretend to be for the little time I had left. \n\n\"Knowing when I was going to die changed me. I saw how much pain my condition was causing my family and I wanted to spare others from ever feeling that, so I decided I wouldn't let anyone new get close to me. Turns out, that wasn't so easy. \n\n\"I also began experiencing all these dark urges. I didn't want to get involved with anyone but I began to have sexual cravings. I was able to resist them for a while but then they overwhelmed me. They still do but now I don't have the strength to act on them.\" \n\nI noticed as she spoke her left eyelid was blinking slightly slower than her right. There was also a slurring of her words but I didn't know if that was from the tumor or possibly from medication.\n\n \"Maybe I was feeling lonely. Maybe it was the fact that you treated me decently in spite of my appearance. Maybe it was the alcohol. Maybe it was chemistry. Maybe it was everything. Maybe it was nothing. Whatever it was, when I caught you checking out my body I had the undeniable urge to suck your cock. I figured I would jump you, have a good time and we would go our separate ways. But you really surprised me. I tried to forget about you afterwards but it was impossible. You once called me your drug. Well, you were my drug and I was hooked after only one time.\n\n\"Despite my vow I went back to see if you were really that special. You were. God help me, I was falling for you but I still didn't want you to fall for me. That's why I treated you like shit. Since I couldn't stay away from you I hoped I could drive you away. And while a little piece of me died every time I mistreated you, I simply can't imagine how I made you feel. For that I am truly sorry.\n\n\"My fucking project was a ploy for you to see there are better people out there than me. I was careful to set you up with girls I knew you would like and who would treat you well. With each new girl I was afraid you would leave me, but you proved to be loyal to a fault and that made me love you even more.\n\n\"Thomas, I love you. I think you love me, too, or at least, you once loved me. I'm sorry I never got to hear you say it.\" \n\n\"I love you, Nico,\" I said to the screen. Nico started to say something but stumbled over her words and started swearing. She got stuck on the word fuck, repeating it over and over for more than a minute before there was a break in the video. When the video resumed night had fallen in Nico's room.\n\n \"The seizures are growing more frequent and getting worse. I have headaches and I'm so tired all time. All I want to do is sleep. My short-term memory doesn't work so well nowadays so I had to go back and watch what I had recorded.\n\n\"So, I wanted you and I didn't want to hurt you, but I did hurt you. That day in the coffee shop you were incredibly brave in trying to tell me how you felt. In my panic I lashed out and I'm afraid I may have permanently damaged our relationship. The next several weeks were especially bad for seizures and tremors. I ignored your calls and texts because I couldn't think coherently and I didn't want you to see me like that.\n\n\"When I felt better I went to the computing center, saw the pain etched on your face and I knew I had finally succeeded in driving you away. I couldn't let you go, though, and I had to have you one last time. Maybe a more accurate way to say it would be 'one first time.' Despite all my blunt talk about sex I was no more experienced than you, in anything. I learned as I went along, just like you. In the end, you were my first and my last. You were my only.\" \n\nNico's head began jerking slightly to the side, her eyes unfocused. The jerking continued unabated until the video cut to a sunlit room. Now there was a soft beeping of a monitor in the background. Nico's left eye was filled with blood and the pupil fixed and dilated. \n\n\"There's so much I want to say but I don't have time for. I'm afraid if I don't wrap this up soon I won't be able to edit it and then you'll have to watch long stretches of me swearing and twitching.\n\n\"I wish I had done so much differently. I should have treated you better. I should have loved you openly and, if you loved me in return, I should have spent every possible moment with you. My intentions were to fully live what remained of my life and I failed in the worst possible way. I denied you. I denied love. I denied life.\" \n\nTears brimmed in her eyes once more. Several minutes passed before she composed herself.  \"This is my last will and testament to you, Thomas. I want you to find love and happiness. I know I can't guarantee it but I might be able to give you a push in the right direction. Kelly told me about that night so I know how it touched her. You two shared a beautiful moment and I have to admit I'm jealous. Promise me you'll see her again, if only just to talk with her. She'll be living at this address in the fall so she should be easy to find.\" Kelly's name and address appeared on the screen.\n\n\"Find her, talk to her and see where it goes from there. Maybe you're right for each other. Maybe not. But you have to find out.\n\n\"I don't know what lies ahead for me besides Death. Even though I've spent the past year mentally preparing I'm suddenly scared. Death is a chasm bigger than the Grand Canyon but instead of being filled with beauty it's filled only with darkness. Death is a black void stretching out before me. I'm at the edge now and about to step off into the abyss. Will there be a bottom? Will there be another side?\n\n\"Is there a soul after Death? I hope certainly hope so because I want to keep watch over you. If I can I'll come back and haunt you, but in a nice way. I'll come to you in your dreams and fuck your brains out. I swear I will.\"  Her lower lip was trembling now. With a shaky voice she finished with, \"Goodbye, Thomas. I love you.\" \n\nThe video ended. I closed the lid of the laptop, pulled the USB stick out and hugged it to my chest. I curled up on my bed and wept for a very long time.\n\nAt the end of August I was back on campus sitting on a low brick wall outside a modest apartment building. It was only ten in the morning but the sun was already beating down and baking the pavement. I sat in the shade of a maple tree and waited. Eventually Kelly emerged from the building wearing a white t-shirt and bright orange shorts. Her hair was pulled back in a ponytail and her summer tan gave her a healthy glow. She was as lovely as I remembered.\n\nWhen she saw me she did a double take and a smile broke out on her face. \"Hey, Thomas. Good to see you. What are you doing here?\"\n\n\"Waiting for you, actually.\" Her smile grew. \"Do you have a minute? I need to tell you something.\" She sat next to me on the wall, her thigh lightly touching mine.\n\n\"I don't know if you heard but Nico passed away this summer.\"\n\nKelly's face clouded and she nodded slowly. \"Yeah, I know. Brain tumor.\"\n\n\"How well did you know her?\"\n\n\"I guess about as well as anybody did, outside of her family. We lived together the past two years. She was my best friend.\"\n\nI blinked in surprise and took a moment to digest that. \"You were best friends and lived together at Mary Hall?\"\n\n\"Our first year, yeah. That's how we met. We rented an apartment last year. That's where you and I met.\"\n\nI closed my eyes for a moment and thought about how much I didn't know about Nico. Finally I said, \"Nico told me she lived at Mother Mary.\"\n\n\"Um, yeah, that was so that guys couldn't find her after, you know.\"\n\n\"Were there many guys?\" I asked quietly.\n\nKelly shook her head emphatically. \"No, only you. It's funny: She claimed she wanted to sleep around a bit but she never did. Meeting you screwed that up, but in a good way. How did you hear about Nico's passing?\"\n\nI stared down at my hands, shook my head and sighed. \"She sent me a video.\"\n\n\"She wanted to write you but couldn't hold a pen. I offered to write it for her, like dictation, but she said it was only for you.\" Kelly hooked an errant lock of hair behind her ear. \"So I suggested she record a video. Nico liked the idea that she could speak directly to you but hated that you would be able to see what she was going through.\"\n\n\"Actually, seeing that made me understand where she was coming from,\" I admitted. \"It somehow made it more real. Were you with her at the end?\"\n\nKelly nodded. \"I saw her about a week before she died. It was so hard saying goodbye to her, not knowing if I was going to see her again.\"\n\nI asked the question that had been gnawing at me the past couple of weeks. \"The Nico in the video seemed very different from the Nico I knew. Which one is the real her?\" \n\nKelly exhaled slowly and looked around. \"I would have to say both complete the picture. The Nico you saw in the video is likely the Nicole I knew our first year at school. She was funny and smart but modest and reserved when it came to guys. Nicole was interested in guys and guys were interested in her but she never dated or hooked up with anyone. That spring she started getting these blinding headaches and would have fits of swearing, as if she had developed Tourette's. That's when the tumor was found. She also became impulsive, getting tattoos and piercings over the summer. When Nico came back the following fall she was a different person, much more grim.\"\n\n\"Knowing you're going to die soon will do that to a person,\" I offered.\n\n\"True, but it was more than that. I honestly think the tumor pressing on her brain changed her personality. She said horrible and wildly inappropriate things at times. She had dyed her hair and changed how she dressed and wanted to be called 'Nico.' I was afraid she was becoming more violent and bent on self-destruction. Maybe the piercings and the tattoos were an outlet for that.\" Kelly paused and shook her head. \"I feared I was going to lose her even before she died. But then the most amazing thing happened.\" Kelly looked at me and smiled. \"She met you and that somehow righted her ship. The old Nicole would come out after she had seen you and when she talked about you.\"\n\n\"How much did she tell you?\"\n\n\"A lot. She told me about how you're quiet, caring, considerate, and intelligent, and about your anxiety issues.\" Kelly paused and blushed. \"Nico also told me about what you did together. I had a boyfriend I was sleeping with but we didn't do anything like you and Nico did. I was a bit green with envy of you two.\"\n\nMy anxiety cranked up another notch and part of my mind began counting sidewalk panels. \"Did she tell you everything? Did she tell you about her project to get me out into the world?\"\n\n\"Yeah. Nico ran the idea by me first but I thought it was ridiculous and risky. I tried to talk her out of it but it was no use. That whole thing was so unlike her, I sometimes wonder if that also was the tumor.\"\n\nWe sat for a minute in silence. \"So, you know I was a gigolo.\"\n\n\"No, you weren't. You're a nice guy who did what Nico told him.\"\n\nAnother question gnawed on my conscience. \"How did you become a client?\"\n\nKelly raised her eyebrows and tilted her head. \"My boyfriend dumped me in February. He said I was getting too clingy and too fat. Turns out he had been cheating on me with some skinny-ass sorority girl for a few weeks before he got up the nerve to break up with me. The punch line is that she dumped him a month later. Then he started coming around, trying to patch things up but I refused. By spring, though, my resolve was almost gone and I asked Nico what I should do. She told me I should spend an evening with you and then I would know how much of a louse my ex is.\"\n\n\"Nico told you to have sex with me?\"\n\n\"God, no! That was something that just happened. Nico wanted me to see what it could be like to spend time with someone who was gentle and caring. I was so nervous at first I didn't want to do anything. But sitting and talking with you was great and then we spent that hour simply kissing. By then I knew I wanted to experience more of you and you were so tender and loving when we were on the floor. I couldn't help myself. I had to have you.\"\n\n\"Was she there that night? I dreamt she was watching us sleep.\"\n\n\"No, she had a really bad episode earlier that week and was back home being cared for by her parents.\"\n\nSilence fell over us as waves of heat radiated from every direction. There was so much I wanted to ask Kelly I didn't know where to begin. It was evident it would take time to hear the full story about Nico. I took seven deep breaths and plunged in. \"Listen, I don't want to keep you from wherever you're going but I was wondering if you'd like to go out with me some time.\"\n\nKelly smiled. \"What did you have in mind?\"\n\n\"I don't know, dinner maybe, perhaps this weekend.\"\n\n\"Tell you what. I'm on my way to buy my textbooks. If you don't have plans, why don't you come with me. We can go to lunch afterwards, and then...\" She let the sentence trail off.\n\n\"And then what?\"\n\nShe shrugged. \"Then we'll see.\"\n\nThat was a year and a half ago. Kelly and I have been living together for the past year and we're graduating this spring. Kelly's been accepted at State for their Veterinarian Medicine program and I have a job lined up with their Computing Resources Department. We plan on getting married next summer. I've never been happier. \n\nNico has stayed with me, haunting my memories. She did come to me in my dreams once and did as she promised. When I awoke I was making love to Kelly. I don't know if that really was Nico's ghost or just the memory of her, but quite frankly, it doesn't matter to me.\n\nAll I know is, I owe her so much.\n\nFor Nico. I love you and I miss you. "
    ],
    "authorname": "lgreenwood",
    "tags": [
        "first time",
        "blowjob",
        "handjob",
        "cunnilingus",
        "nico",
        "thomas",
        "ocd"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/word-of-mouth-1"
}