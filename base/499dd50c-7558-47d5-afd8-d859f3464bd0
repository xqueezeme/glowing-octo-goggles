{
    "title": "The Twelve Zenati Pt. 06",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\nNoah looked at the display on the dashboard of his car before answering the call that had interrupted the fun banter he was having with Marcella.\n\n\"Hey, what's up?\" Noah said casually, wondering whether he should mention that he was with Marcella, just in case Gideon said something she shouldn't hear.\n\n\"You're driving?\" Gideon asked, hearing the echo of the hands-free.\n\n\"Yeah. Taking Marcella over to my office to go over some territory law,\" Noah nodded and smiled in relief that his big brother was not the moron he acted most of the time.\n\n\"You sure know how to show a girl a good time,\" Gideon chuckled. \"Fortunately for you, I have a table booked at Peewee's on the Point, so you and Marcella can double date with us.\"\n\n\"She's looking dubious bro. I think you're going to have to make the offer more appealing. She doesn't seem to be as won over by the Zenati charm as most women,\" he chuckled.\n\n\"Marcella,\" Gideon said. \"Take pity on the big nerd, please. Despite having the Zenati charm and looks, Noah struggles on the dating scene. You'd be doing him and me a favour by coming to dinner with us,\" he chuckled.\n\n\"Well, when you put it that way, how could I refuse?\" Marcella giggled.\n\n\"I knew you were a kind and compassionate woman. See you there at seven,\" Gideon chuckled again and ended the call before Noah could come up with another excuse not to join them.\n\n\"So, it looks like we have our first real date. I'll take you home so that you can change if you like,\" Noah offered.\n\n\"Do you think I need to?\" Marcella asked, checking her watch.\n\n\"I think you look great, but I happen to know what Vivienne is wearing, and I don't want you to feel... too casual.\" He gave her a quick smile before focusing back on the road.\n\n\"How would you know what she is wearing?\" Marcella asked and frowned. \"I saw her at the clinic this morning, and she looked like her regular self, and you have been with me since then.\"\n\n\"They were back at the clinic a little while ago, and Gen sent me a pic. He said he had barely recognised her. Apparently, she had been to meet my Madrina, my godmother,\" he said once he had pulled up at a light and fumbled with his phone to bring up the photo to show her.\n\n\"I know what a Madrina is,\" she shook her head when she looked at the photo. \"That's not Vivienne,\" she said and expanded the picture to get a better look at the woman's face.\n\n\"Look closer,\" he chuckled.\n\n\"Wow! Yes, I probably should go home and change before we meet them.\" Marcella looked down at the tailored and stylish, if plain, dress that she wore. \"I don't have anything to rival that, though,\" she admitted.\n\n\"Me too, I have no idea what I'm going to wear,\" he teased. \"How do you feel about powder blue safari suits?\" He laughed as she turned a horrified look on him. \"I'll take that as a no, then.\"\n\n\"What other options do we have?\" she asked, joining his laughter. \"A white suit so we can get our disco on after dinner?\"\n\n\"Only if you are wearing a skin-tight jumpsuit with bell bottoms, otherwise it just doesn't work,\" he shook his head. \"Besides, you might find me too irresistible with the open shirt and thick gold chains and decide there were better things to do than eat dinner with my brother and his girlfriend.\"\n\n\"True, it's so hard to restrain myself when I see a walking clich\u00e9 like that. Better to go the safe road and stick with a dark suit,\" Marcella suggested.\n\n\"Never say that I don't do you any favours,\" he grinned. \"And that is yet another one you owe me.\"\n\n\"I am sure that you will send me the bill eventually,\" she said and shook her head. Marcella truly liked the man sitting beside her. No matter what they were doing or talking about, he made her feel comfortable and relaxed enough to be herself. She loved the way he could joke at his own expense, and even when he was teasing her, he did it in such a light-hearted way that she never took offence.\n\n\"Trust me, I fully intend to collect on all these favours that I keep doing for you,\" he grinned widely.\n\n*****\n\n\"You invited your brother and Marcella to dinner with us?\" Vivienne asked, unsure if she was happy about that. She had some things that she wanted to say to him tonight. Her talk with Olivia had inspired her to be honest with him and tell him of her worries and fears where he was concerned, but now it would have to wait. \n\n\"Problem?\" he asked.\n\n\"No, not at all. I was just curious about why,\" she said. She liked both Noah and Marcella and would like to get to know them outside of the context of Olivia's hospital room. She really didn't have a problem with the people, or socialising with them. It was just the timing that bothered her.\n\n\"Well, chances are that we are going to argue again tonight and they will act as a buffer, so you don't throw another tantrum in front of the whole restaurant,\" he said and shrugged.\n\n\"I didn't...\" Vivienne began but snapped her mouth shut and blushed. What else could she call her angry outburst the first night they had dinner together? \"I don't have tantrums. I am not a child, Gideon,\" she said, failing to tamp down her anger at his assessment of her actions that night. \"I was angry and frustrated with you, and your brother, the other night.\"\n\n\"Okay, what would you call shouting at me, using some quite colourful language and then storming from the restaurant because you didn't get your own way?\" he asked. \"Hysteria? A conniption? I imagine you like those descriptions even less.\"\n\n\"It was a simple outburst, nothing more.\" She tried to play it down, but knew she had significantly damaged her professional credibility that night. How was she supposed to help others regulate their emotions and impulses if she couldn't control her own?\n\n\"All right, outburst.\" He conceded the point and pulled into the car park of Peewee's. \n\n\"We're very early. Your brother won't be here for close to an hour,\" she said, looking up at the strange fa\u00e7ade of the place. It was as if they had pulled up at the back door even though they had driven in from the main road to the car park where a sign depicting the little black and white birds denoted the restaurant's name and details.\n\n\"True, but the sunset is fabulous from here, so I thought we would come early and have a drink out on the front lawn,\" he explained and stood from the car, hurrying around to her side. He didn't want to get into an argument with her until he was sure that she was settled and relaxed and he knew that she had someone to lean on. While Marcella wasn't a close friend, she was better than no one, and Noah was a good shoulder to cry on if she didn't feel comfortable with Marcella. Neither was ideal, but it was the best he could do on short notice, and Noah, with his easy-going way, would act as a good buffer between them. \n\nGideon placed an arm around her waist and drew her into a kiss as she stepped out of the car. Things had been going so well today. He hated that he had to ruin it by pointing out that she had fucked up again by not listening to Genesis and trusting that he had a reason for what he was doing. A reason that even Gideon could see without being told outright.\n\n\"Genesis is mad at me, isn't he?\" Vivienne said quietly after taking a seat beside Gideon on a luxurious love seat facing the bay and the setting sun.\n\n\"I expect so, though he hasn't said anything. I assume he is dealing with the fallout of your little conversation with the Pixie,\" Gideon answered her honestly. \"For such a brilliant woman, how do you continue to not see why Gen pushes some agendas and not others with her?\" He said without rancour, although there was an edge of frustration in his voice.\n\n\"I thought that I was helping. I was trying to get Olivia to meet Genesis halfway, because she wasn't going to give in and neither was he, and it was hurting them both,\" she tried to explain. \n\n\"All you did was give her another name to hide behind. One more disguise for Genesis to peel away before she would stop hiding and face the truth of who she is and accept that people will still love her, despite how unhappy she must have been to bury Olivia so completely. The real Olivia, not Serena, the robotic, perfect woman Remington created, or the helpless, damaged girl that you have now given yet another false name to hide behind.\" Gideon had been thinking about how to approach this subject since they left the clinic. He hadn't explained himself well that first night when they had argued, but now he wanted her to understand why she shouldn't have given Olivia a way to get around Genesis' demands.\n\n\"But Liv is Olivia, just like Gen is Genesis,\" Vivienne said, not understanding the distinction he was making. \"It's not a whole different persona like Serena was.\"\n\n\"It's not real; it's a nickname. If I suddenly decided to start calling myself Deon, the name wouldn't carry the same weight or connotations as Gideon because I have spent a lifetime building my reputation for being honest and fair in my dealings with others. As Deon, I would have to prove myself all over again because people would wonder what I was hiding. It automatically makes people suspect that I am not the same person they have dealt with in the past. If people who know and love me use it as a nickname, fine, but if I insist on being called Deon and hide behind that name, refusing to acknowledge my family connections and past friends, how does that look?\" he challenged her. \"Would you trust me?\"\n\n\"That's completely different,\" Vivienne spluttered. \"Olivia's not a wealthy and powerful businesswoman. She's not trying to hurt anyone.\"\n\n\"Are you saying that the women of the Tables don't hold their own power and wealth? That women haven't been targeted by those with grudges or vendettas against the Tables. We all know the risks and rewards that come with being part of our Families. The latest attack by the Suebi was aimed solely at women with immense wealth and power, and it was instigated by another woman who hid her secrets and lies and pretended to be someone she wasn't.\"\n\n\"That's completely different!\" Vivienne argued again, becoming frustrated.\n\n\"Is it? Secrets and lies never lead to happiness. Especially when you lie to yourself. Olivia is not dead. She is sitting in that clinic with a man who adores her and is trying his best to reach her and bring her back to herself so she can deal properly with everything that has happened in her life. Not just with Remington but the arsehole boyfriend and an overly-strict father, who possibly did more damage to her than anything else. Genesis doesn't want to fight her or force her or frighten her, but he will, because he wants to be able to love her for who she truly is, and all you did tonight was give her another place to hide and keep her secrets,\" Gideon said sadly. \"You make his job infinitely harder when you don't talk to him about your brilliant ideas. Yet you still expect him to talk to you about his plans and ideas for her and take your advice.\"\n\n\"I read the background information. She had a happy childhood, good schools, loving parents and siblings who maintained connections to the Table. Sure, her boyfriend was an arsehole, but it was Remington that hurt her, messed with her head and made her like this.\" Vivienne had taken on her professional persona as she briefly summarised the information she had on Olivia's background.\n\n\"I see, and if I read your background bio would it show anything different? Grew up in a loving home as the daughter of the recently deceased chair of the Papillo. Spoilt and treated like a princess, as all girls of the tables are. Studied and graduated with honours and travelled extensively, gaining experience at some of the country's best facilities, as well as a growing reputation for her work in her chosen field,\" he said, showing that he had read a similar sort of bio on her.\n\n\"You did a background check on me?\" she asked incredulously, her anger starting to get the better of her.\n\n\"What it doesn't tell me is that you aren't a typical princess of the first Family. You think and act independently and do not work well as part of a team, ever. Including Team Olivia,\" he paused for a second as her eyes flashed at him. \"That you are closer to Leighton than anyone else in your family and shared an apartment with him before he got married. That you bury yourself in work to hide from the world, where you never quite feel at ease, because your heart is bigger than you let on and it gets hurt far too often by thoughtless people,\" he summed up what he knew of her so far. \n\n\"I can't believe you had me investigated!\" her voice began to rise, but he merely took her hand and kept talking.\n\n\"Olivia and Marcella did not have happy childhoods, thanks to their father, and there was more to the arsehole boyfriend and the way he treated Olivia than was covered in her bio. When Remy found her, she was already conditioned enough to be manipulated and used. Particularly if he kept her drugged and sedated in the beginning. I doubt that she fought him at all, but rather let him hide her in a new life, gratefully,\" Gideon voiced his own opinion and one that was the most likely scenario according to Genesis. \"There is more to Olivia than facts on a page, and there is more to you too. I want to know everything about you, but you have to be prepared to give a little and stop keeping me at a distance and retreating behind the doctor's coat.\" \n\n\"Unhappy childhoods?\" she questioned with a frown, \"But the background check said...\"\n\n\"And your background check said you were a spoilt princess prone to tantrums,\" he chuckled. \"Sorry, outbursts.\" \n\n\"I see,\" she sighed. \"And you think that what I did tonight didn't help her and made things harder for Genesis,\" she said sadly.\n\n\"What you did tonight didn't help Genesis the way you wanted, but I think she liked being spoken to as a friend instead of a doctor. I think that seeing you two giggle over being sisters one day, with rhyming nicknames, helped me immensely and gave Genesis hope that Olivia wanted that scenario,\" he chuckled. \"But it was telling her that it was okay not to like or want to be Olivia and giving her an alternative to that, rather than just a nickname others can use occasionally. That was the mistake. We can't make it easy for her to hide anymore. If she is going to recover then she needs to face her past and her fears.\"\n\nVivienne could see that he could be right, now that he had explained it to her. She could understand better why Genesis was unbending in his demand that she acknowledge the name. The idea was at the base of her profession. You had to deal with the past to be able to move on to the future. Otherwise, you would be forever trapped in a self-destructive cycle. But Olivia had been through so much, and there was time to make her face what she couldn't right now. She couldn't understand why Genesis was in such a rush to force Olivia to face the things that she feared the most. They sat in silence for a while, sipping their drinks and watching the sunset.\n\nGideon squeezed her hand. Somehow, he had headed off the angry outburst that he heard in her voice once or twice, and she still held his hand. He'd said what he needed to and gave her food for thought. Now he just needed Noah and Marcella to arrive and take the edge off that conversation, so he and Vivienne could concentrate on each other again, which was all he had been thinking about for days now.\n\n*****\n\nGenesis turned back toward the bed. He felt the now familiar tightening of his heart and twisting of his gut and gave in to the urge to rub his palm into the middle of his chest. While never as bad as the first time he had seen her, the now-muted pain returned with the knowledge that he could lose her at any time if she continued to defy him. He wouldn't be like Remington; he couldn't be like that. He was determined to be better than that, despite the desire that drove him toward her bed and the knowledge that he would never cause her undue harm with his demands on her body. He may enjoy similar pursuits to Remington, and admit to being a sadist with the right woman, but he would never scar her or injure her to the point that it would take weeks to recover. \n\nThat wasn't to say that he wouldn't enforce his rules if they were for her benefit. He was determined to make her take back her name. He wanted no lies and secrets between them, and he wouldn't start their relationship by letting her lie to anyone else, especially herself. She was Olivia Gambaro, and he would belong to her as much as he kept reminding her that she belonged to him. His eyes raked over her, noting her shallow breathing and the way it made her breasts rise and fall. The brace also enhanced those pert mounds, and he felt his cock begin to harden, knowing it was finally time to claim her body as well as her mind.\n\nGenesis turned to ensure that he had locked the door to the room, such was the clutter of his mind right then that he couldn't remember. Then he took a breath and walked purposefully back toward the bed. He was still annoyed at Vivienne's attempt to manipulate the situation again by calling her Liv and giving her a way out of accepting his command that she take back her name. He was not going to negotiate and let her take it back with conditions attached, and if she or Vivienne had thought she could use that to manipulate the situation, manipulate him, she was sadly mistaken. He was stronger than that, and a corner of his brain hoped that Gideon would be strong enough to resist Vivienne's manipulations too, despite his love for the woman.\n\nPicking up her limbs one by one, he checked that the cuffs fitted snugly after he had rushed to replace them so that he could talk to Hector without worrying that she would touch herself before he was ready for her to. He adjusted them to fit so that they were not so tight that he would need to constantly check her circulation once he began to play with her body properly, but also not loose enough that she could wiggle her limbs from the restraints. \n\nHe knew he must do this, needed to do this, if he was ever going to bind her to him in the way he wanted, but something inside him revelled in just the act of restraining such a beautiful woman for his pleasure alone, and that something had nothing to do with her healing and more to do with his desire. Of course, he would ensure that she had pleasure too, eventually, but only after she had given him what he wanted, and he wanted nothing less than her complete submission to him at that moment. He looked up at her face then and saw her passively watching him, letting him restrain her without fighting the loss of power and control, which he took gladly, as he bound her to the bed the way he wished to bind her to himself. \n\nShe had great legs, and he smiled as he pulled the sheet completely away from her body. He had explored her body as he had bathed her each day in the hospital and here in the clinic. He felt that he knew every freckle and mark on her pale skin. It was unusual for women, or men for that matter, in the Families of the Twelve Tables to be as fair as she was, but it only made her that much more attractive to him. He trailed his fingers up her legs as he watched her carefully. Her body almost pulsed with her need as the ache low in her belly grew with his titillating touch.\n\nHe moved his legs up to kneel on the end of the bed between her restrained feet and leaned over her so that their bodies were close but not touching, one of his hands resting near her head, taking his weight. The other hand trailed fingers up over her hip and the brace on her undamaged side and up further, to her breast. His fingers barely touched her skin, and he allowed himself a small smile as her breath caught and then quickened further. The heated look in her sea green eyes stirred him, and he knew that he had been right. They both needed this. She needed to be claimed fully, just as he needed to claim her.",
        "The golden glow of her hair in the dim light seemed subdued while it was contained in the hair tie he had used earlier, and it irritated him, as if something in the vision before him was off. His fingers continued their teasing trail up over her shoulder to remove the tie. He lifted her head, pulling her hair back from her face before releasing it. As he lowered her back to the pillow, her hair fanned around her face like a golden halo. He stared directly into her eyes and lowered his head to take her lips softly, barely touching the soft pink pout as his lips glided across the soft surface. He heard her small whimper and raised an eyebrow at her. \n\n\"What is it you want, little slut? What is it that you need?\" he murmured in low bass tones. \n\nGenesis ran the tip of his lips along her cheek, from her ear to the corner of her mouth. Then he kissed that corner teasingly. He hated the way that his cock hardened and throbbed painfully inside the now tight denim of his jeans, but he needed that barrier between them for now. He held back his own need, hoping to make her want and need him enough to ask for it. He loved the way that he could almost hear the rapid beating of her heart. He loved the look of surrender in her eyes as she tried to find the words that he needed to hear and knew that she would say. He bent towards her open mouth, teasing her with an almost kiss, pleased to be rewarded with another soft whimper.\n\n\"You must tell me, little slut. Tell me that you want me, need me. That you belong to me. I have no wish to take an unwilling woman who has no desire for me and what I can give her,\" he murmured huskily, his fingers tracing down her neck over her pulse point.\n\n\"Yes,\" she breathed in a high-pitched whimper. \"Yes, I want you and all you can give me. Please, Genesis, I need to feel you on me, over me, in me.\"\n\nHis eyes never left hers as he captured her pouting bottom lip between his teeth and bit into the soft flesh. She whimpered louder again as his teeth sank into the tender skin until he tasted the warm, metallic sweetness of her blood on his tongue. \"Good girl,\" he whispered as he released the swollen flesh and straightened a fraction before sitting back on his heels, removing any contact from her again. Her body strained toward him, and it was a head rush that he had rarely indulged in with any partner, other than a Kept trained for this type of play, and never with the same intimacy that he wanted to share with this woman. \n\nOf course, what she did not realise was just how much power she held over him at the same time. If she had refused him and not told him of her need, he wasn't sure that he could have stopped and moved away from her completely, instead of just a little as he had now. She held his heart in her hands, and it was better that she didn't know how fragile it was and that its every beat was synced with hers now. He had learned the hard way not to give that type of power to any woman, but that had been before finding her, that had been before he felt the grip of the curse, or whatever it was that affected the men of his family. \n\nOlivia gazed up at Genesis as he shifted again. Still fully clothed, he loomed above her. While Remington was not classically handsome, he held a strength and power that both attracted and frightened her. Genesis, she knew, had a softer side to go with his dark good looks, but tonight he radiated that same power that Remington had held over her, and she quivered knowing her words, admitting her desire for him, were more of a plea. She more than wanted him, she desired him with her whole being, and she strained against her bonds with a whine of disappointment, trying to bridge the distance he had put between them again.\n\nUnable to help himself, Genesis leaned forward again and reached out to trail his fingers down her neck again and over her breasts. Her breathing was rapid and shallow, as if she were running, and in a way, she was, but this would be more of a marathon than a sprint to the end, and he intended to pace her like a true athlete. Her nipples were hard, standing like pale pink peaks against the soft white mounds of her breasts. They held his attention, so different in women than men in their size and shape, the ability to nurture life as well as to provide comfort. \n\nA soft whimper escaped her throat as he played with her nipples. Pinching them, he listened to her whimper change pitch, but he could not tell if it was pain or pleasure she felt. He twisted them, and a long whine escaped her mouth as she bit her lip to stifle the sound. He smiled as he thought of the broken skin there and bent once more to kiss her and taste her blood on that swollen lip. His kiss deepened, and his tongue invaded her mouth, seeking out the taste and feel of her. His fingers continued to pinch and twist at her nipples as he swallowed the sounds she made while he revelled in her taste. He could feel her body virtually vibrate below him, but it was too soon. He pulled back from her again. \n\nOlivia writhed against her bonds and sucked her swollen lip between her teeth again. He was driving her to the edge of madness as he pushed her body closer to the point of no return and then withdrew from her. She looked up at him as he chuckled and moved back to kneel near her feet again. He picked one foot up and ran his fingers over it. She squirmed, her body tightening in the effort not to giggle as the sensation tickled her. \n\nThe tickling fingers slowed when Genesis heard her giggle and began to massage the soft flesh of her foot, watching her carefully, seeing her body respond and calm, moving away from the climax she was headed toward. He shifted his hands to her calves and stroked along the smooth flesh, his touch once again becoming lighter as he teased the length of her legs to her hips and then back down, dipping toward her inner thighs. With her ankles held by the restraints, she was fully open to him, and he could clearly see her pussy glistening in the dim light. He knew that this type of play was exciting her as much or even more than it was him, and he shifted again at his own discomfort within the denim of his jeans. \n\nSoon he would find out just how sweet that pretty little pussy tasted. He would drive her to the brink of madness until she told him what he needed to hear. Tonight, she would satisfy him in more ways than one. He watched her carefully, noting her breathing and the look in her eyes. The delightful sounds she made filled his ears, and as he saw her reach for the pinnacle again, he withdrew his hands. He tickled her again, changing sensations and shocking her. A gasp, a barely hidden smile and finally a giggle, burst forth as she calmed and accepted the change of pace and calmed her body.\n\n\"Please, Genesis, I need to cum. Don't do this!\" she begged as the first smiles came to her pretty pouting lips. \"Please,\" she begged as she began to giggle. She could barely think straight, the ache low in her belly almost overwhelming her as he teased her so expertly before changing tactics. It was cruel and unusual punishment, even for a man like him, and she knew that if he continued she would give him anything he wanted in return for the release she craved.\n\nThe begging that he heard was music to his ears, but it was not enough. Begging alone would never be enough if she just reverted back to her strong-willed, stubborn ways as soon as she got what she needed. He moved swiftly then, lunging up the bed, steadying himself with one hand beside her head again, and wrapping the other firmly, if not tightly, around her throat. \n\n\"You think that you can make demands of me? Begging for what you want when you deny me what I want, my pleas for you, your obedience?\" He growled down into her face and captured her swollen bottom lip again, sucking on it and listening to the whimper that she made as she struggled to answer him by shaking her head, painfully wrenching the lip free from the suction of his mouth. \"Who are you, my little slut?\" Genesis asked, staring into her eyes and holding her pinned beneath him, unable to look away.\n\n\"I am yours, your slut. I am yours,\" Olivia blurted, wanting the words to be enough for him as he turned the full force of his will on her.\n\n\"Wrong answer,\" he hissed and squeezed the hand around her throat a little tighter. \"You have been mine for days now. That fact is not in question!\" He bent his head until their noses touched and licked out at her damaged lip. \"Who are you, my little slut?\" he asked again.\n\n\"I am nothing, I am no one. I am yours to do with as you want,\" Olivia whispered fervently. Remy had always demanded that she tell him she was his and only his. She couldn't work out why that wasn't enough for Genesis. What other answer could she give in this moment? \n\n\"We do this the hard way then, Olivia,\" he growled using her name, and released her, sitting back on his heels and gazing down at her, noting how her body had reacted to the force of the power he had just subjected her to. She was quivering and panting, and once again he tickled her, taking his time, allowing her to calm down and giggle helplessly for him. She was always so close to the edge that it seemed harder and harder to keep her from her climax, and he wasn't sure that she would break before the dam inside her did. He considered his options as he kissed up her legs, smelling her arousal as he nibbled at the inside of her soft thigh.\n\n\"Please!\" Olivia cried out as if in pain and bucked her hips up toward him. \"Please, I am yours, only yours. I will always be yours.\" She knew what he wanted. The only thing that she had ever refused him. \"I'll be whatever... whoever you want me to be. Just please let me cum,\" she begged fervently, trying to give him what he wanted without having to say it. Without the words, it had no power over her, not the way he had power over her right then.\n\n\"You'll be whatever I want?\" Genesis loomed over her again, her throat surrounded by a large fist. She couldn't say the words again, so she nodded her head. \"Wrong again, little slut,\" he tightened his hand slightly, squeezing her throat. \"You will be who you were born to be,\" he commanded. \"Not because I command it, but because there will be no more secrets or lies between us!\" He watched for any movement of her head that would tell him she was ready to break on this one point, but her sea green eyes just stared into his darker ones. He withdrew from her completely then, moving back to where he knelt on the edge of the bed, and then stepping off it. She needed to know the risk that she was taking by continuing to defy him. \n\n\"I will never lie to you, and it causes me great pain that you continue to lie and hide from me. Do you think that I am one of Remington's lackeys that you can look down on and disdain, as if your lies have no value?\" he asked disgustedly. \"Would you have lied to him? Would you have denied him anything? Ever? Yet you expect me to take less than what you gave him?\" He hurled all of his inner turmoil at her. \"How can I believe you when you say that you are mine when you lie and hide at every turn? You expect me to believe you when you say you belong to me? That you need me? Why would I believe that when you live a life of lies and secrets? How can I ever trust you?\" He shook his head sadly, showing his disappointment, and released his hold on her. \n\n\"You win,\" he said and freed her wrists. \"If your need is so bad then you see to it. I cannot believe anything you say. He turned and stalked to the chair that he always sat in and watched her, a hurt scowl darkening his face. His eyes narrowed as he watched her. He hoped that he had judged the moment close enough, and he waited for her next move. She would come to him and accept him and his dominance and commands, or she would retreat into herself and deny them both what they wanted and needed because of her need to hide from the real world. If that was what she chose, he would leave the room and give them both some much needed space to think. He was becoming undone by the constant battle they had been waging over the last few days.\n\nOlivia lay frozen, held captive by the torrent of his words. She was causing him pain? Her mind reeled. The thought was totally foreign to her. He had been commanding but always so kind and gentle when he held her or bathed her. This side of Genesis was new. She had seen power to rival Remy's when he had first kissed her tonight, and she had felt the edge of the pain he could give her as he bit into her lip. The ache inside her had grown exponentially, and she needed him. Needed him so much she had said anything she could think of that he would want to hear, except the one thing he truly wanted from her. Then, suddenly, her restraints were gone, and he gave her permission to touch herself for the first time since she had become his. \n\nThe lure of her climax was so close that she could feel it, yet her hands didn't move as her thoughts raced. Had she treated Genesis as less than Remy, when he gave her everything she needed and kept her safe? Would he continue to do so now that he had rejected her? Had he rejected her or just her continued refusal to admit who she was? If she accepted her name and the past that came with it, would he accept her as his again? How could she know? The fact was that she did know. For two days he had cajoled, argued and, eventually, punished her, trying and persuading her to do as he commanded, and she had stubbornly refused. She had pushed him to the breaking point, and even in the face of this, he had not crushed her body and spirit with cruelty as Remy would have, but rather Genesis still offered a glimpse of all that she denied them both by refusing him.\n\n\"Is how you masturbate to be kept a secret from me, as well?\" he snarled at her. \"Perhaps I should give you some privacy.\" Genesis stood glaring at her. His chest hurt, and he couldn't sit there any longer, hoping and praying that she would accept who she was, and that she, Olivia, belonged to him in a way that she never could have belonged to Remington. \"I will make sure the nurse looks after you tonight. Good night, Olivia,\" he said in a cold voice and turned from her to leave.\n\n\"No!\" she gasped, unable to hold the word back. She didn't want Genesis to go. She wasn't sure of anything in her life anymore, but she knew that she didn't want him to leave her. Not like this. Not because she was acting selfish and spoilt. She was Olivia. Olivia always messed things up, but she didn't want to mess this up. She wanted this man to hold her and look after her as he had done every day since walking into her hospital room. He was so different from Remy in the way he treated her. Maybe he was right and she hadn't believed him to be as powerful as Remy. She had been wrong about that. She could see that, rather than flaunt his power, he kept it under tight control. Even now, she could see it radiating from his every pore as he turned his hard gaze on her again, his body swivelling at her gasped word to stop him.\n\n\"Who are you?\" he asked.\n\n\"I am Olivia Gambaro,\" she admitted softly. \"I belong to you, and I am sorry that it took me so long to see what you, too, had been hiding beneath the surface.\"\n\nGenesis was taken aback. He had hidden nothing from her. He had shown her his care and affection. He had been commanding and used the power she had given him to command her. What the hell had he hidden from her? What should have been the pivotal moment in their relationship was suddenly a double-edged sword, and it irritated him that she had taken this moment, his moment of triumph, away from him so easily.\n\n\"You're right,\" she said into the silence. \"I never would have defied Remy the way that I have defied you,\" she whispered and hung her head. It was his fault. He had stripped away Serena, and Serena was the good girl who did everything she was told. It wasn't her fault, it was his for wanting Olivia back. Olivia never did anything she was told. Olivia always knew better than anyone else. Only this time, Olivia was too scared to turn her back on the people who cared about her and become miserable and alone again. She had learned her lesson the hard way, and she didn't want to be that Olivia again. \n\n\"Why?\" Genesis asked, his voice made hard by her admission, the pain in his chest blooming to life again. \"I will make sure that you are cared for, regardless of whether you remain mine or not.\" The words almost killed him to say, but he had to make sure that she knew that this was a very real possibility, if she couldn't accept him as her Dominant.\n\n\"I'm sorry, I always mess things up. I always have, my whole life. I'm stupid and selfish and not a very nice person. I'm not the good girl like Serena always was. I'm not a lovable and sweet girl like her.\" Tears sprang to her eyes. \"I couldn't see what you hid beneath the surface, not until tonight, because I am selfish and spoilt and honestly never looked closely enough.\" She sat up awkwardly in the brace and swung her legs from the bed. Her eyes never left his face as she planted her feet on the ground and took a few steps toward him, finding the brace took away most of the pain that the wound in her side had caused her when she had tried to walk on her own before now. \"Please don't go, don't give up on me now that I can see you properly.\"\n\n\"What do you see? I have always been honest with you about what I wanted,\" Genesis snarled, but the harsh sound had no bite as he softened toward her. He wanted to reach out and gather her in his arms, but he knew he couldn't. While this scene was not as he had planned it, he was as fascinated with her words as he was irritated by them. He had planned to bring her so close to the edge that she was ready to shatter and then deny her even his touch, as he gave her a final ultimatum. Not that he would ever truly leave her, or stop caring for her, but she needed to believe it was a possibility if he was going to get past the walls that made her so stubborn and strong-willed, even in the face of his displeasure. He balled his hands at his sides as she came to stand before him, to stop from reaching for her.\n\n\"I see this,\" she said, placing a small hand on his chest, over his pounding heart. \"You love and care for all the people close to you, even the doctor who was here today. Even me, though I have given you no reason to. Despite what I was told, I knew Remy would have never have asked you to, yet you have given me a piece of this, too,\" she whispered sadly, finally admitting the source of most of her reticence. \"This is where you keep your power and strength. The intensity of it, when as intimate as we were,\" she glanced back towards the bed, \"is like a tidal wave. One that I could drown in, one I want to drown in.\" She looked up at him then and sucked her swollen lip between her teeth.\n\nGenesis remained silent. This insight into himself was not what he had been expecting, and her closeness and touch had the effect of twisting his gut, adding to the pain flaring in his chest again. He found his throat tighten, and he wasn't game to speak for fear of the pain and emotion it might hold when he needed to be strong and in control. He wanted her to submit not to him but come to him as an equal. He unconsciously let out a growl of need, making her speak again, to try and stop him from leaving.\n\n\"Remy flaunted his position and power. He had the best house, the strongest men, what he considered the perfect woman. He wanted men to envy him, hate him even, for being better than they were and having better than them. He constantly pointed out the failings of others directly to them and took all the accolades they gave as if they were his right. None of his power came from his heart. His power came from money and possessions, not from love. Your power comes from the people and love that you choose to surround yourself with. When we came here, I think that, on some level, I knew that. I knew you would not discard me for a better version if I didn't do exactly as you wanted. I never knew that with Remy. Even on my wedding day, I knew that I was just a prop. He had an army of women arrive to make me into the perfect image of what he wanted. I could never have said no to him. Even when he gave me choices, I had none, not really.\" Olivia sighed, thinking that it was already too late. She had pushed Genesis too far, and now she would have to live with that as she had to live with all of her other mistakes.",
        "\"Do not let this heart fool you, Olivia. I can be just as ruthless and harsh with the one who belongs to me, and you will belong to me,\" he growled. \"You have been wilful and spoilt, and it is time to remedy that. Your wound will be protected by the brace, but the rest of your body will not be so fortunate.\"\n\n\"You still want me?\" she asked with an incredulous gasp after his long silences had made her believe that he was washing his hands of her. \n\n\"From the first moment I saw you,\" he admitted honestly. \"I have manipulated events with the same self-serving determination that Remington did to make you mine and bond you to me. You are correct. Remington did not give you to me. I took you, and Kairos wanted you gone, so he could take over from Remington. There was a price on your life. You were valuable to his enemies, so I made a deal with him,\" he confessed his own sins to her as she gazed up at him with wide eyes. \"From the first moment that I saw you, I was determined not only to save you from Remington Royce and his Suebi tribe, but to make you mine. You are my chosen one, and you will belong to me.\"\n\n\"Remington was Suebi?\" she gasped. How had she not known this? She must have but for some reason it slipped away from her when she thought about it. It made sense now, the necklace and jewellery that he had given her, emblazoned with the symbol of the Suebian knot. She didn't doubt Genesis' claims, but she was just so shocked by them. The bad men, he had been one of them, the Suebi. Had Remy taken her that first night, intending to kill her himself? He must have known of her connection to the Tables. Perhaps he used that information as another way to flaunt his power and influence. To the Suebi, she may have been a prize just for who she was. Her family and the Tables must hate her now for consorting with the enemy. With that knowledge, she wanted to hide her true identity more than ever, but the man in front of her, this good and kind man, had demanded she own it and all she had done. He wanted to save her. Was he trying to save her from herself? She didn't think that she was strong enough to do it. She knew, however, that if she wanted him, his affection and care, then she needed to try to stop hiding from her past mistakes. \n\n\"It doesn't matter, he is the past. What matters is that I want you, Olivia not Serena, not the robotic sex slave that Remington created. The girl who wasn't letting the doctors heal her nor eating to keep up her strength when I first saw her because of Remington and his brainwashing,\" he paused, making sure she understood why he had created that initial lie about Remington giving her to him. He looked into her eyes before speaking again.\n\n\"I want Olivia Gambaro, with all her stubborn, wilful, stupid pride. With all her past mistakes and uncertainties. No one else could capture my heart in the same way. I want relief from the ache I have every time I see you, touch you, taste you. The same ache you beg for relief from. I want all of you, Olivia, but I want you my way, not your way or what you are willing to give grudgingly. I won't negotiate or be manipulated into anything short of possessing all of you, mind, body and soul. Now the question is, do you wish to continue being mine? Now that you know the truth about what I desire and will take from you if you agree to stay with me?\" This was the moment of truth. Would she come to him of her own free will or would she hate him for manipulating her, despite his reasons?\n\nOlivia stared at him silently, trying to take in everything he had said and what she had seen in him tonight. He was a good man. Of that she was sure. She wasn't coping at the hospital after she had been so dependent on Remy to tell her what to do every moment of the day. She couldn't make those decisions alone. It had been easier to just shut down. Genesis had forced her from that zombie-like existence with a lie delivered by someone she had trusted. Had he not done that, she wasn't sure what would have become of her. Would she have been killed by the men who killed Remy, as Genesis suggested?\n\nGenesis felt his body imploding as he stood waiting for her to speak. He continued to fist his hands at his sides to stop from reaching out for her and forcing her to accept him and his will. He needed her to choose him, just as she needed to be given a choice this time. He could never truly possess her if she didn't accept his ruthlessness and harsh dominance in her life, as well as his love and affection. His features softened as he saw a shift in her posture and realised what she was doing. His lips turned up at the corners as he tried to hold back the pleasure that rippled through him.\n\nThe hand that Olivia had held to his chest slowly slid lower as she sank to her knees in front of Genesis. Her hands stopped at the waistband of his jeans, expertly flicking open the belt and undoing the button and zip that confined his aching cock. Of all the things he had said, in the end it was this that caught her the most. She hadn't even considered his needs as she begged for him to fulfil her own. She would remedy that now and, hopefully, show him that she belonged to him at the same time. She knew that she would have to say it. It was what he wanted, but she also knew actions often spoke louder than words.\n\nGenesis groaned as she kissed and licked and took his semi-hard cock into her mouth. He loved the feeling of having it right in the back of her throat and his balls pressing against her lips. He knew that as his cock became harder she would struggle to get it all in her mouth, as it was now. She knelt, with her posture made straighter by the brace she wore, and positioned herself for as much comfort as she could in that position. Then she cupped and stroked his balls with her hands as her tongue moved up and down his cock, licking the shaft and rolling around the head, at times holding it under the bottom of her tongue. \n\nHe lowered his head and watched as she explored his cock for the first time, pulling her head off him by her hair now that he was fully erect, to reveal a sizeable cockhead to her eyes. He watched avidly as she strained forward against his grip, dipping the tip of her tongue into the small slit there and tasting him. She ran her hands up his shaft, squeezing it to find exactly what his cock liked, loved and begged for. Enjoying her explorations, he eased his grip on her hair and groaned deeply as she put her lips on the top of his cock, barely opening them as she rolled her mouth down onto him, sucking him in as he imagined her pussy would. \n\nShe moved up and down slowly, gently moving to the point that he twitched between her lips. Then she increased the speed and movement from gentle to firm, and he growled, appreciating the skill of her tongue, mouth and lips. She withdrew him from her mouth and looked up, a small smile playing on her lips as she felt the power of giving him pleasure despite being the one on her knees, and placed both her hands on his cock. He smirked back, knowing that she only had as much control over this game she was playing as he allowed her.\n\nWith her hands wrapped around his cock, she explored his balls with her mouth. Her tongue was soft and warm, and she slowly licked them. He encouraged her with his hand in her hair until she grew bolder, gently sucking one of his balls into her mouth, swirling her tongue around it, making him growl deeper and louder. Pulling her mouth back to his cock, he guided her to take as much of him as she could. \n\nAs she came up for air, after the first gagging thrust of his hips, he pushed her face back onto his cock and forced it down to the base, enjoying the feel and sounds of her choking and gagging on him, his need to dominate her completely filling him once more. He allowed her to take him at her own pace as she drew deep breaths before taking control again. Using her hair to guide her, he gave her the idea of the speed and ferocity that he wanted for his cock to piston in and out of her mouth and allowed her a few moments to adjust to his needs. The pace was hard and fast, with no opportunity for her to press her own control over his pleasure. He would be in control of not just her pleasure, but his own, at all times. He would never allow her to top from the bottom.\n\nOlivia dropped her hands as she opened her mouth as wide as she could and relaxed her throat for him. She realised that he had allowed her a small amount of leniency, in the beginning, to explore and know him, but this would be a rare occurrence, as his dominant side took over when his arousal and need grew. She could feel her own climax so close and tried to resist the urge to press her hands between her legs, but it was almost impossible. She pulled her hands behind her back and tried to concentrate on her breathing, her thighs pressed tightly together as he rocked her mouth on and off his cock.\n\nGenesis felt his cock thicken and knew that he would erupt into her mouth much sooner than he wanted to. Still, it was only the beginning of the evening, and he had the rest of the night and their lives together to take her in every way possible, over and over again. He let go of his tight control and roared, pumping his cum into her open mouth and over her lips, to dribble down her chin. She swallowed the cum that landed on her outstretched tongue and licked her lips like the little slut he called her, even scooping the dibbles on her chin back into her mouth. He was mesmerised by her as he watched her hooded eyes and saw her thighs rubbing together as she pulled her hands back behind her back while she sucked him gently, ensuring that she got every last drop. \n\nUnable to help herself as he pulled her roughly from his cock, the pain of her hair gripped so tightly in his hand tipped her over the edge. She looked up into the lustful eyes of the man she had just committed herself to in some way as her body finally betrayed her. Her thighs clenched tightly as she gasped and whimpered, and small waves of the climax that she had been trying to hold at bay began to ripple through her as his eyes narrowed. \n\n\"Such a little slut,\" he snarled and pulled her up by her hair, her body quivering as she tried to steady herself under his hard eyes. She was so fucking hot, especially like this, the insatiable sex addict who couldn't help the way her body reacted to sucking him dry. He bent slightly bringing her face close to his and kissed her hard. His tongue filled her mouth as she matched his need. He broke the kiss and looked deep into her eyes. \"You will have to pay for that, little slut, not because your body betrayed you so beautifully, but because you didn't allow me to enjoy the first of your climaxes as my sexy, insatiable slut, Olivia. The woman who will no longer hide in the shadows or wear disguises because she belongs to me, and has nothing to fear by being herself.\" His voice was rough and low.\n\n\"Yes, Genesis,\" she whispered hoarsely. She reached up and stroked his face, a tinge of melancholy in her voice as she realised her mistake in denying him for so long. She needed no other words as she looked up into his eyes and quivered at the look he gave her. The fact that he allowed her to touch him in such an intimate way, when he looked at her with such need, could not have been more different to Remington, and she couldn't believe that she had been so blind to the differences in the two men's personalities before now.\n\n*****\n\n\"I'm not a geek,\" Noah complained again as he and Marcella approached where his brother and Vivienne sat watching the last of the sunset. \"You can't just interchange the two words. They don't mean the same thing. Gideon is a geek, I am a nerd,\" he said almost proudly.\n\n\"That's true,\" Gideon shrugged, not denying his brother's claim that he was a geek.\n\n\"What's the difference?\" Vivienne asked with a frown.\n\n\"Thank you, that's my point exactly!\" Marcella shook her head, allowing her long brown hair to swing around her shoulders.\n\n\"Well, both are enthusiasts of a particular topic or field. In this case, I am assuming that we are talking about superheroes because it's Noah we're talking about. I don't read comics anymore, but I have watched every Marvel movie several times and more than my share of the DC ones, though they are never as good,\" he smirked at Noah, daring him to argue for the millionth time about the merits of Wonder Woman. \"That makes me a geek, I am an enthusiast. The distinction here is that my nerdy brother still reads the comics he collects, owns mint, in-box, collectable action figures and dresses up to go to Comicon. He is a nerd of the highest order, and to call him a geek is pretty insulting,\" Gideon chuckled at Marcella. \"You didn't, did you?\"\n\n\"I might have, but how was I supposed to know he was certifiable?\" She spread her hands as if both brothers were crazy and looked at Vivienne for support. \"He seemed so normal most of the time.\"\n\n\"I think that Genesis might be the only sane brother and that could be debatable,\" Vivienne commiserated with her, stifling her smile. The fact that Vivienne had done little more than exchange pleasantries with Marcella at the hospital and clinic, and had never tried to engage her further, sat heavily on her in the light of what Gideon had said. She'd read the background report on Olivia and then dug into her own research on abused women rather than treating her patient as an individual and finding out more about her earlier life. It was her job to let her patients open up to her, not investigate them herself, but her patient had been hiding from her past, she could see that now, and she knew that she owed Genesis yet another apology.\n\n\"Maybe we should keep the jury out until we meet the sister. She might be able to give us better insight,\" Marcella teased the brothers. \"Sisters always know the juiciest titbits of information about their brothers.\"\n\n\"Steady on there, gossip girl,\" Gideon chuckled. \"I'm not ready for Vivienne to run away screaming yet. Sera is nuttier than a fruitcake, all on her own!\"\n\n\"Don't listen to him. Sera is great. You'll love her as long as you like shopping and fashion and talking about hot guys incessantly.\" Noah groaned. \"On second thoughts, maybe Gideon's assessment of her was closer to the mark because she doesn't think we're hot or talk about us much.\"\n\n\"Well, now I have to meet her,\" Marcella grinned. \"Why don't you give me her number and I'll set up a lunch date later in the week and give you a day off from babysitting me?\"\n\n\"You're the one who calls me every day,\" he chuckled. \"It's hard to be this irresistible,\" he sighed dramatically at Vivienne.\n\n\"I call because I have no other friends here. If you give me Sera's number then I might have two, and you can get some work done,\" she laughed.\n\n\"Three friends,\" Vivienne said. \"I'd like to come to this lunch too, if you don't mind.\"\n\n\"The more, the merrier,\" Marcella said happily as Gideon groaned at the way the conversation had gone. \n\n\"You were supposed to convince her that I was such a great catch so she would accept my proposal, not ambush me with Sera!\" Gideon accused his brother.\n\n\"I'm not the one who ambushed you. Spend some time with this woman and you will realise she's a supervillain, and we are all just helpless mortals who dance to her tunes\" he sighed. \"Her superpower is invisibility to waitresses, apparently. Not sure how effective it is as a superpower, but we work with what we're given.\"\n\n\"Good grief,\" Marcella rolled her eyes. \"That is not my superpower, it's yours. Everyone around you fades into insignificance when a waitress comes to your table. I could have collected everything on that table and put it in my bag, and she wouldn't have noticed.\"\n\n\"See, supervillain thief,\" he murmured loudly to his brother, earning him another roll of her eyes.\n\nThe foursome went in to eat, continuing the banter and laughing loudly throughout the dinner. Vivienne hadn't ever felt more at ease unless with her siblings, and even then she had some walls up. This evening, however, she had managed to relax and enjoy the company. She found herself wanting to know more about Marcella and Noah, who were so funny the way they bounced off each other that she continued to laugh throughout the meal. She especially wanted to know more about the big, brash man who held her hand or placed a hand on her thigh throughout the dinner, causing him to eat one-handed most of the night.\n\nHe had said that he wanted her to stop keeping him at a distance, but she knew hardly anything about him and his everyday life, outside of his support for his brothers and love of Madrina and her unusual, colourful life. He had told her that Madrina was a reminder that not everything in life had to make sense to work, and she wondered what he had meant by that.\n\nWhen the dinner ended there was a flurry of hugs and kisses on cheeks as they farewelled each other. Marcella and Vivienne exchanged numbers and promised to meet for lunch, even if Sera couldn't make it, and were reminded by a teasing Noah that they had neighbouring apartments and could just go and knock on the door if they wanted to see each other.\n\nThe idea that Marcella could be a permanent fixture in his family, because of her relationships with Olivia and Vivienne, put a dampener on any thoughts that Noah had entertained of hot sex when he took her home tonight. He wasn't sure if he wanted a casual fling with someone that he couldn't just walk away from and never see again when the time came. What happened if, as Dom has said, his curse breaker was close by and he was sleeping with Marcella every night? Then he would have to expect the one fated to be his to face Marcella at every family gathering, knowing they had shared something intimate and real, because even though she wasn't his one, he liked her, really liked her. Because of that, he knew a one-night stand or a quick casual fling with her could get messy and complicated, and he wasn't sure that either of them wanted that.\n\n*****\n\nHaving Olivia back in the restraints and at his mercy, Genesis licked and nibbled his way up her legs. Her soft white thigh held a fading mark left by her previous owner, and he growled low, covering the mark with his mouth and sinking his teeth into her flesh as he sucked the skin between his teeth, wanting to obliterate even that small reminder of what had happened to his girl. He heard her gasp and then whine but never did she cry out for him to stop, and he pushed his control to the limit before releasing some of the pressure he had exerted before he broke the skin. He licked over the bruise that instantly rose to the surface and looked up to where her head was propped up on a pillow so that he could see her eyes and saw his own desire reflected back at him, above the twin peaks of her panting chest.\n\nThen and only then did he allow himself to turn towards his true focus. The swollen nub of sensitive flesh that peaked between the glistening folds of her slightly-spread pussy lips. He hardened at the thought of tormenting her this way. Despite the orgasm that she had given him only minutes earlier he already wanted her again. He pushed the thought of his own orgasm away as he blew warm air over her pussy and listened to her mewls of pleasure. \n\nOlivia felt her insides melt in her need for him, for what he was doing to her. The pain of the love bite on her thigh was already fading in her mind as warm air and gentle fingers caressed her pussy, igniting the flame and keeping her simmering arousal just out of her reach. She watched his head between her thighs, his eyes flicking from hers to her pussy as he continued the soft titillating touches and breaths. He moved suddenly, and she gasped as his lips caught her clit and sucked it into his mouth to lash it with his tongue, lashing it once, twice, three times before she hissed her approval. ",
        "\"Yes, oh yes,\" she drew out the hissing sound as her breath left her in a rush, and she felt his teeth clamp down around the hard nub of throbbing flesh. Olivia tasted the sweetness of her own blood again as she chewed upon her injured bottom lip to keep herself from crying out. It was not the pain of his teeth imprisoning her clit. Honestly, he was not biting that hard, but rather the way he looked at her as if he wanted to devour her whole. She could see his longing and his need to possess her completely in the depths of his dark eyes. She began losing her battle against the need to cry out her pleasure when his tongue began to flick her trapped bundle of nerves once again.\n\nIt was almost thrilling for him to feel her trying to hold back her cries and show him what a pain slut she really was when the evidence of it was written all over her body. When she finally gave in and cried out, he revelled in the sound and watched her eyes to ensure that it was a cry of pleasure, rather than fear and unenjoyable pain. Her sea-green eyes glittered brightly, and his mind was eased as he continued to torment her, edging her closer to another orgasm. He intensified the erotic sensations with which he tormented her as his fingers joined in the teasing and began stretching the opening to her pussy.\n\n\"Oh, yes, yes, yes!\" she moaned as he slipped a single finger inside her. Her nipples hardened impossibly atop the peaks of her breasts, and she knew that she could not hold out much longer against the almost-gentle way that his tongue was lathing her clit as he kept it clasped between his teeth like a harsh clamp. Olivia felt her body slipping further under the man's erotic spell as his teeth, tongue and fingers worked in tandem to excite her senses. She opened her mouth to tell him, to beg him for the climax that she knew would rock her but, just as she felt her toes curl and her whole body tense and arch up automatically to meet this man's caress, he slowed the pace. \n\nGenesis released his teeth from her and gave long slow laps across the hard nub. He could hear Olivia whimpering like a wounded puppy, begging and pleading for what she craved from him. He watched her as she closed her eyes, the disappointed look bordering on sullen, as he continued to draw her away from the edge she had been about to topple over. When she opened her eyes again to gaze down at him, he gave a self-satisfied smirk as she pulled against her restraints. Still, she did not ask him to stop or beg him to release her. There would be no silly-sounding safe words for his princess of pain. If she told him to stop he would, immediately, and he would release her.\n\nOlivia wasn't without tricks of her own, and as she held his gaze, she released the swollen and damaged bottom lip she had been holding between her teeth, knowing that it would give her a pouty appearance and, at the very least, make him more inclined to ease her suffering. Her body was captive to him, more so with the sensations he gave her than the restraints that held her in place for his pleasure, and she had only the smallest of weapons in her bag of tricks to exert some little control over him.\n\nGenesis saw the pout she levelled at him and the damage done to her lip by her own teeth as well as his and growled. Did she not realise that would only push him to use her more harshly rather than relent and allow her to topple over into bliss? He drove two fingers inside her this time as his teeth clamped around her clit again, making her cry out and her hips buck up against the very mouth that tormented and teased her.\n\n\"No!\" Olivia cried out when he slowed again as she edged toward that precipice of ecstasy. She could have cried and strained against her bonds. \"Please Genesis, please! I need it so bad,\" she begged.\n\n\"Such a little cum slut. You came not so long ago, and you are asking like a woman trapped in a desert and about to die of thirst,\" Genesis chuckled. \"Was one not enough for my insatiable little slut?\" he teased.\n\n\"No! Please, Genesis. One is never enough, I need more. I need you, please.\" She knew that she was babbling now and making little sense as he began the torment all over again. The way that he increased the pressure of his tongue across her clitoris told her that he had heard though. She felt herself spiralling once more towards the brink of insanity, and she felt all the muscles in her body tighten, straining towards the powerful release that she knew would not come until he decided that she deserved it. Olivia focused upon the way that his tongue and fingers seemed to work in perfect harmony to torment her, hoping beyond hope that this time he would let her soar into the darkness of the exquisite pleasure he held just out of her reach.\n\nGenesis began to push her body, stimulate her clitoris a bit faster, his fingers beginning the slow erotic dance of parry and thrusting, sawing in and out of her pussy. She mewled and writhed, unable to fight her body's reaction to his manipulations. He realised that she couldn't stop the slow circular motion of her hips that only brought her closer to his cruel teeth and hands. He let his fingers brush across the bundle of nerves inside her that drew her higher toward that edge. It was a brief touch to tempt her, but he pulled back before she could take what he was not ready to give her.\n\nOlivia lost track of how many times he had taken her to the limits of her endurance. Her nipples were painfully hard. Her breasts seemed to actually pulse and throb in tempo with his tongue and fingers. She felt herself rushing towards that pinnacle again, a peak that seemed to get further and further away no matter how high she climbed. This time, his fingers caressed that bundle of nerves deep inside her, pushing her and making her moan even louder as they played longer on that sweet spot.\n\nGenesis' teeth clamped down once more on her clitoris, capturing it so that his tongue could torture it with firm, sure strokes. He added a third finger and drove them as deeply as he could as she began to babble, begging and hissing her pleasure at him. Her thighs shook, the small trembles having grown with her arousal and need, and her body heaved. He knew that he couldn't maintain this much longer without risking her healing wound, even with its new protection. This time he wouldn't back off. He curled his fingers, rubbing over the ridged flesh of her sweet spot, sending her over the edge into the tidal-wave-sized orgasm that he had been building her toward.\n\nThe cry that came from her raw throat was hoarse as Olivia's whole body tensed and arched, straining at the bonds that held her, as the pleasure went on and on...and on. She felt herself floating and her body alive, with every nerve ending firing simultaneously. She felt rather than saw Genesis rise above her and enter her roughly, his way made easier by his tormenting fingers. With the deep thrust of his cock her body convulsed into yet another climax that rocked her as much as the first.\n\n\"Look at me,\" Genesis growled at her. \"Don't float away from me,\" he demanded, unsure if she would even hear him as her eyes fluttered open and closed. She felt amazing as her pussy clenched around his cock with her ongoing orgasm. He fucked her hard and fast, driving toward his own orgasm as hers continued to roll through her in never-ending waves. He could see her floating away from him and was powerless to stop her as he was locked in his own need for release after tasting and teasing her for so long. Fucking her was better than he believed it would be, the pain in his chest a memory now as he felt his cum rise and his orgasm hit him. He roared with his blood pumping in his ears loud enough to deafen him as he struggled not to collapse over her injured body.\n\nForcing himself to move off her, he breathed deeply, kneeling between her legs and undoing the restraints. Then he lay down beside her, propped up on the pillows, and pulled her into his arms to rest her head on his chest. Genesis allowed himself time to recover then, before using the controller to raise the head of the hospital bed and reach out for the ever-present glass of water. He roused her and made her drink before cradling her against him as he undid the brace, allowing her to breathe normally again.\n\n\"How do you feel?\" he asked, concern evident in his voice as she grimaced when he probed the dressing over her wound.\n\n\"Like a rag doll in your arms,\" she gave a tired partial smile. \"My injury doesn't hurt,\" she added, after his scowl told her that was not the response he was looking for. \n\n\"Good, drink more water then I will take you to the bathroom,\" he said gently and handed her the glass again. He smiled as she turned to look at him and he drew a finger over the bite mark on her thigh and through the cum-soaked lips of her pussy, explaining why she needed to be bathed again in a not so subtle way.\n\n\"You're mine now, Olivia.\" He said it as a statement, but if she were going to renege on accepting her name and his dominance, now would be the time to argue with him, while they were both sated and relaxed.\n\n\"Yes, Genesis,\" she agreed, without the argument that she knew he had been expecting. She felt the slight tension in his body relax again as he pulled her close to kiss her once more. \n\n\"Let's clean you up. You can sleep in my bed tonight.\" Genesis stroked Olivia's cheek with the backs of his fingers. He had been sleeping in chairs for so long that he relished the thought of sleeping in a bed again and had no desire to stay here and share the hospital bed with her. This suite had a master bedroom, and finally, he would make use of it.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "geek",
        "nerd",
        "tease",
        "tickle",
        "ultimatium",
        "dominant/submissive",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-06"
}