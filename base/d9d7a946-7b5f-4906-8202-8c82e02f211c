{
    "title": "What a Shortstop Does Ch. 20-24",
    "pages": [
        "Dear Reader, \n\nThank you for making it to part 5 with me! For those of you just joining, please check out the other chapters before enjoying this set, you'll be happier, I promise. \n\nxo Kate\n\n_\n\n \n\nChapter 20: Family Time\n\n\"Sarah, did you look up a place with batting cages for tomorrow?\" Ro asked through a mouthful of bread.\n\nThe Daly family and Sarah sat at the large dining table in the formal dining room as the sun began to set outside. Ro's mother and father sat at each end with all the children piled in the middle. Sarah thought it was oddly traditional compared with her family's dining habits of eating while standing around the kitchen island.\n\nShe swallowed her own bread before answering, \"Yeah, there's a family fun center not too far away that has some. Not great, but better than nothing.\" Sarah knew the equipment at these places had to be bad, but the reviews online were fairly positive and she needed to get at least three sessions in over the week.\n\n\"Batting cages?\" Ro's brother, Shay, looked up from his plate, \"Why are you going to some batting cages?\" Shay was the oldest Daly and the shortest. He worked for a local animal rescue and did odd jobs on the side. He also still delighted in torturing his younger siblings, even if they were all practically adults.\n\nRo let out an exasperated huff, \"Sarah's on the softball team. She's got to practice this week.\"\n\nThe look that the three brothers exchanged over the table was positively evil. Sarah braced herself.\n\nKillian was the first to speak, \"Oh, so you're a softball player, Sarah?\" His eyes glimmered dangerously as he tried to contain his glee, \"How interesting!\"\n\nShay smiled, \"Yes, very! A softball player, hmm? What position do you play?\"\n\nSarah saw Ro bristle, but answered smoothly, \"Shortstop.\"\n\nConnor, the youngest and most outspoken, leaned back in his chair, side-eyeing Sarah as she took a long pull from her water. \"Hm...that's an important position. You must be quick on your feet,\" he paused for dramatic effect, \"and good with your hands.\"\n\n\"Connor! Dad!\" Ro shouted for her father to intervene.\n\n\"Roisin, don't shout at the table,\" her mother snipped. Either she didn't see the wicked looks the boys had exchanged or she didn't care to address them now. Sarah thought it was the latter. Mrs. Daly was too observant, especially about her children.\n\n\"Be nice, boys,\" Mr. Daly chided quietly.\n\n\"It's okay, Mr. Daly,\" Sarah suddenly felt her competitive side flair, \"I am good with my hands. I'm a great hitter.\" She flashed her own challenging smile, directed mainly at Connor, \"We should all go try some batting tomorrow. Unless you're afraid of being shown up by a girl?\"\n\n\"You're on!\" Connor and Shay cried.\n\nKillian just murmured as he lifted his glass, \"A fucking softball player,\" he chuckled, \"what a clich\u00e9.\"\n\n\"Language!\" Mrs. Daly's warning effectively ended the dinner conversation.\n\n_ _\n\n\"I'm sorry about them,\" Ro sighed as she and Sarah lounged on the couch after dinner had been cleared.\n\n\"It's okay, really. I don't have siblings, but I've got a healthy relationship with my cousins, they are pretty much like that too. They, um, made a comment or two when I told them you were a dancer.\"\n\nRo smiled and leaned onto Sarah's shoulder. Connor and Killian had gone up to one of their rooms to play video games, Shay had gone home, and Mr. and Mrs. Daly were out watering the start of a garden in the backyard. She and Ro were alone for the moment and Ro's casual contact was more than welcomed by her girlfriend. Sarah gently began running her fingers over Ro's exposed thigh.\n\nA trail of goosebumps followed her finger. \"Mmm,\" Ro closed her eyes and relaxed more.\n\n\"You think we're going to get any alone time this week?\" Sarah whispered huskily.\n\n\"Ugh, I hope so. You're killing me with that,\" Ro gestured to Sarah's hands, then paused and made a sweeping motion to her whole body.\n\nSarah laughed, \"I'm killing you with what? All of me?\"\n\n\"Yup,\" Ro rested her head further on Sarah's shoulder and tucked her arm behind her on the couch.\n\n\"Well, I can think of a lot of things I'd like to do to all of you,\" she breathed in Ro's ear.\n\nRo whined, \"Like?\"\n\n\"I'd like to get into your shorts for one. I think your perfect ass has been begging for a squeeze all day.\" She kept tracing spirals on Ro's leg, but let her fingers wander higher up just under the hem of Ro's shorts. \"Then I'd like to reach around and tease your clit with my fingers until you're dripping wet.\"\n\nThe moan that came out of Ro was quiet, but Sarah still tensed at the noise. Her dirty talk was improving, clearly, if she could get Ro to make noise while barely touching her.\n\n\"I want to rub your clit with my thumb and work two of my fingers into your wet, hot-\" The sound of the back door opening cut off the rest of Sarah's desires.\n\n\"Girls?\" Mr. Daly called as he entered the living room through the mud room. Ro sat up straighter and Sarah pulled her hand back, tucking her hands under her crossed arms. \"It's getting dark, you should get your things out of your car, Roisin. Show Sarah up to Shay's old room.\"\n\n\"Okay, Dad.\" Ro stood up from the couch just as Mrs. Daly walked into the room. Sarah wondered if him coming in first was a decoy to make sure they were being appropriate before his wife entered.\n\nThey unloaded their bags from Ro's car and hoisted them up the narrow staircase to the second floor. The hallway upstairs ran the length of the house with doors on both sides and a window at each end. Ro led Sarah to the furthest room on the right-hand side and shoved open the door. Sarah could hear video game music and arguing in the room across the hall.\n\n\"This was Shay's room, just a guest room now basically, since he has his own place.\" The green bedroom was simple and clean. It had two windows, being a corner room, with a twin bed tucked against one wall and a dresser against the other. Sarah tossed her bag of softball gear onto the floor and put her suitcase on the bed.\n\n\"It's nice!\"\n\n\"Yeah,\" Ro shrugged, \"Come on, I'll show you my room and the bathroom.\" She led Sarah out and back down the hall. \"Connor's room is across from yours, Killian's is next to his, my parents' room is across from mine down here. That's to the bathroom.\" Ro gestured over her shoulder as they passed the rooms right and left. She stopped at the door on the complete opposite side of the house from where Sarah was staying and pushed open the door.\n\nRo's childhood bedroom was, well, pure chaos was a good term. There were ribbons and trophies adorning shelves that looked faded and dusty. Some of the trophies were covered in hair ties and bows that had been tossed onto them over the years. A long, low dresser was shoved off center on one wall and a full sized bed took up the majority of the floor space. No single color scheme existed. It was an explosion of rainbow and bold. The walls were pale yellow with wood floors below, but several bright area rugs did their best to mask the practical flooring. Posters from bands, of dancers, and a few odd movies littered the walls. Nothing was hung straight, save for the trophy shelves. It was loud and bright and pure Ro.\n\n\"Wow. This is...\"\n\n\"A mess?\" Ro offered.\n\n\"Exactly what I should have expected,\" Sarah shrugged and flashed Ro a smile. \"What are all these for?\" She gestured to the trophies and ribbons.\n\n\"Dance competitions. I keep meaning to take them down, but I don't really know what else I'd keep on the shelves.\"\n\nSarah smiled, \"I guess I didn't know dancers had competitions.\"\n\n\"Yeah, all over the country.\"\n\n\"There's a lot of blue ribbons up there, did you win a lot?\" Sarah raised her eyebrows at the sheer volume of satin ribbons spilling off the shelves.\n\nRo sighed, \"Um, I guess.\" She threw her bags down on the bed. \"Anyway, want to get ready for bed?\"\n\nThe two changed in their separate rooms and took turns using the bathroom and brushing their teeth. Sarah could still hear Connor and Killian shouting at some game as she sat on Ro's bed with her organic chem books opened. Ro was stretching on the floor and trying very hard to distract Sarah from reading. The door was still open, an unspoken requirement apparently when a \"friend\" was over. Mrs. Daly walked by on her way to her room.\n\n\"Time for bed, Roisin,\" she gave Sarah a stern look.\n\n\"Mom, it's not even late. Killian and Connor are still playing video games.\"\n\n\"Roisin, it is time for bed. Sarah can stay up and study in the guestroom if she wishes.\" Her eyes flashed grimly over Sarah's books sprawled on the bed. Sarah took the hint and started gathering her things.\n\n\"That's so unfair, mom. We're on break! We're adults!\"\n\n\"Roisin Maria Daly, enough. It is time for bed. You chose to spend your break here, you will follow our rules.\" Mrs. Daly didn't shout, but her stern voice was enough to make Sarah feel like a misbehaving seven year old. She piled her books up into her arms and jumped off the bed.\n\nRo just glared at her mom as Mrs. Daly stepped back.\n\n\"Good night,\" Sarah coughed as she slipped out of the room.\n\nShe heard two doors close louder than necessary behind her as she plodded down the hallway. Before she made it to the safety of her room, the door across the hall opened and Killian poked his head out. He was sitting on the floor, so his head was low as Sarah passed.\n\n\"Don't worry about mom,\" he said with a genuine smile, \"she's just worried about you softball player-types ravishing her little girl in the night!\" The mischief in his eyes flashed as he closed the door again.\n\nSarah rolled her eyes as she pushed her door closed. Her phone buzzed in her pocket.\n\nR: Sorry about that. Mom's weird about girls in our rooms.\n\nS: Understandable. I was ready to throw you down on top of my chem books and rip those infuriatingly tight shorts off your ass anyway.\n\nRo sent back a series of inappropriate emojis and the two texted late into the night, away from the watchful eyes and ears of Ro's mother.\n\n_ _\n\nThe next morning, Sarah got up early for a run and found Killian in the front yard, preparing to do the same.\n\n\"Good morning!\" He said cheerily. \"Going for a run?\"\n\nSarah nodded and started some basic stretches. \"How far are you going?\" she asked.\n\nKillian shrugged, \"Couple blocks, five miles, I never know until I get started.\"\n\nShe laughed, \"Well, I'm going three miles, if you want to help me find a good route...?\" She'd planned to just run out fifteen minutes and back and hope she didn't get lost.\n\n\"Sure! Try and keep up, shortstop,\" Killian smiled and started off on the road. Sarah started her watch and followed. She liked Killian, he reminded her of her cousin, Ryan. All easy manners and occasionally inappropriate jokes. They kept a good pace together, not talking much but it was a comfortable silence. When they finally collapsed back into the front yard, Killian seemed to make a decision.\n\n\"Sarah, I know my parents are...tough on Ro. A little intolerant, maybe. But I want you to know I don't feel that way. Neither does Connor.\"\n\n\"Thanks,\" Sarah said quietly as she stretched.\n\n\"Is, uh, your family accepting of this?\" Killian asked hesitantly.\n\nSarah sighed, \"Uh, well, my family doesn't know. They don't know I'm- that I'm...\"\n\n\"Gotcha.\" Killian looked concerned. \"Well, keep your chin up. I don't know if mom and dad will come around, but Ro certainly seems to like you.\"\n\n\"I like her too,\" Sarah offered as she shook out her legs and headed for the house.\n\n\"Ugh, sweaty!\" Ro was coming down the stairs in her tank top and shorts when Sarah entered the house. \"Go shower, you stink,\" she teased as Sarah ascended the stairs next to her.\n\nSarah let her hand brush over Ro's ass as she went by, \"I wish I could have you in the shower with me,\" she breathed into Ro's ear. She had the satisfaction of hearing Ro's breath hitch before she continued up to her room to gather clean clothes.\n\nIt took the two younger Dalys most of the morning to get around and eat breakfast. Mr. Daly, usually up early and out in his garden, was amused at the slow moving 20-somethings, but didn't comment as he knew they were going to enjoy their low-key spring break.\n\n\"Well, the festival doesn't start until 3 o'clock. What are you lazy bones going to do until then?\" He chuckled as Connor finally came down the stairs, bleary eyed and looking for coffee.\n\n\"We're going to the batting cages, right guys?\" Sarah smiled at Ro's brothers, \"A little friendly competition.\"\n\nRo giggled, \"I can't wait to see this.\"\n\nConnor looked less sure than he had last night and Killian winked at Ro over his coffee mug.\n\n_ _\n\nThe warm spring sun filled the batting cages as Sarah got her gear out of her bag. Killian and Connor were already in another cage taking practice swings with the fun center's provided bats, Shay was wandering around the outside of the cages. Sarah felt Ro's eyes on her as she tightened her batting glove.\n\n\"You look hot when you get competitive,\" Ro said in a low voice. Her eyes roamed hungrily over Sarah's body.\n\n\"Best behavior, baby. Your brothers are right there,\" Sarah chuckled.\n\n\"Oh I know,\" Ro sighed, \"I didn't think this week through enough. It's going to be very hard not to have sex with you.\"\n\nSarah smiled and set a hand on Ro's shoulder. \"True, but we can always go back to campus early. Your apartment will be very empty this week, right?\"\n\nRo nodded. She tried to graze her fingers up Sarah's arm, but Sarah pulled her hand away from Ro's shoulder. She feigned adjusting her batting glove again, but really, Sarah had noticed a family walking by to the minigolf course and didn't want to be touching Ro as they passed.\n\nIf Ro noticed the gesture, she didn't comment. Instead she turned briskly to her brothers in the neighboring cage and hollered.\n\n\"Watch how it's done, boys!\"\n\nSarah stretched her shoulders, entered the cage, and squared off with the ancient equipment. It really wasn't too bad. The pitches came mostly evenly and she was able to rocket every single one into the back of the netting. She felt the familiar flex of her muscles as she went through the motions.\n\nThe Daly boys weren't as smooth. Connor was all nerves once it came to actually taking a swing. He called pitches off target that Sarah would have swung for. Killian was all strength, no accuracy. He could hit it hard, but it quite often ran foul. Shay, seeing the jig was up, laughingly conceded to Sarah after the third pitch flew by him so fast he swung almost a full second late.\n\n\"Alright, Sarah. You proved your point. But, I bet softball player skills don't translate to go-karts! Last one around the track buys the first round at the festival?\"\n\n\"You're on!\" Sarah cried. Connor and Killian laughed and Ro rolled her eyes as she tried to keep up to the go-kart track.\n\nChapter 21: The Festival\n\nThe rest of the afternoon at the fun center passed quickly for the Daly's and Sarah. They raced go-karts, ate greasy pizza, and tried their hands at a few cheap arcade games. By 2:30pm, they made their way back home to change. Mrs. Daly met them at the door and hurried them along to get ready. She was coming down to the festival to meet some friends from church and wanted to be early enough to grab a table inside one of the tents.\n\n\"Shake a leg, guys! Your mother is ready to go!\" Mr. Daly called up the stairs just before 3 o'clock.\n\nSarah stooped to slip on her purple Vans. She chose comfortable shoes and her usual thigh length shorts. Her green t-shirt was a little more muted than her signature crazy bright colors and she grabbed a navy hoodie to throw over it in case the warm spring weather faded this evening. She'd left her hair down, but braided some small sections here and there to add a little texture to her dirty blonde waves. As she straightened up, she caught Ro coming down the stairs.\n\nRo was wearing skin tight, black jeans and short, leather boots. Her green plaid shirt was tied around her waist and her cleavage was on full display in a white tank top. The black ringlets were pulled half back, out of her face, but falling to her shoulders. Sarah watched her bounce down the stairs.\n\n\"Like what you see, Golding?\" Ro wiggled her eyebrows at Sarah. Then wiggled her chest.\n\nSarah's mouth went dry. \"Uh- um...\"\n\nRo laughed, \"Come on, we'll ride with Shay.\" She grabbed Sarah's hand and dragged her out the door.\n\nThe Irish festival was set up as a collaboration between the downtown businesses and the Irish heritage association. Mrs. Daly was a proud member of the association and many of the members of her church were as well. She bustled into the tented area and found her friends at a table near the back. They were already chatting away as the first band set up on a temporary stage. It looked like an older group with traditional instruments propped up on their chairs or under their chins.\n\n\"Roisin!\" a squeal erupted behind them from outside the tent and a couple young women bobbed into view.\n\n\"Lacy, Elaine! Hi!\" Ro took Sarah's hand and led her out the tent to meet her friends. \"Sarah, this is Lacy and Elaine MacDonald. We used to dance together. Girls, this is my girlfriend, Sarah Golding.\" Sarah faltered at the bold introduction, but managed to exchange handshakes and greetings.\n\n\"Roisin, are you going to dance with us tonight? The Blaze's will be playing a set later. We'd love to have you on stage!\"\n\n\"I don't know. I don't want to leave Sarah alone, ya know?\" Ro squeezed Sarah's arm.\n\n\"I'd love to watch you dance!\" Sarah exclaimed, \"I take it this isn't ballet this time?\"\n\nThe women laughed, \"Of course not! Irish step-dancing is much more fun than that. Have you ever seen it?\"\n\nSarah shook her head and Lacy grinned, \"You're going to love it.\"\n\nThe band kicked up and the lively music spilled into the street from the tent. Ro led her through booths of crafts and food. They stopped at a beer tent to grab a cold drink and continued around the festival square. The crowd seemed to be an even mix of Irish heritage members and folks wearing green \"Kiss me I'm Irish\" shirts despite Sarah's certainty that they were not Irish. Sarah bought a light-up four leaf clover necklace and Ro got a headband with two clovers popping off the top on springs. It bobbed sweetly as she turned her head to take in the sights.\n\nShay and Killian had found a group of friends and were busy drinking and raising a raucous off near one of the beer tents. Connor, the only underage Daly, had found his own group by a couple carnival games set up at the corner of the block. The street was bustling and the music from the tent swelled as people milled about.\n\n\"This is really cool, Ro,\" Sarah grinned, taking a bite of her corned beef sandwich while seated on a curb.\n\n\"Thanks, it's going to be wilder tonight. When the St. Patty's weekend crowd spills out of the bar, some come here to continue the party. It's usually when the better bands play too.\" Ro gestured to a larger outdoor stage set up in a parking lot off the street. It looked like a typical concert stage, rising above the sidewalk with a real sound system and a black backdrop.\n\n\"And you're going to dance with them?\"\n\n\"Yeah, maybe. If you'll be okay in the crowd? I didn't even bring my shoes though, or a dance dress.\" Ro shrugged.\n\n\"I can't wait to see it,\" Sarah smiled and knocked her knee into Ro's.\n\n\"Come with me,\" Ro finished her sandwich and stood. \"There's a few singers set to start soon. I think you'll like them.\" Ro led the way back to the white tent. Her mother was sitting with her friends, laughing and drinking from a small glass. Sarah thought Mrs. Daly looked years younger when she laughed and she could see where Ro got her beauty. Mr. Daly was closer to the stage with a group of men playing a game that looked like backgammon. The tables were almost all filled up now, Sarah noticed. The bands had rotated and a group of players of mixed ages were setting up instruments as the sun began to set outside.",
        "They found a few available seats at a table with some other twenty-somethings. Ro clearly knew them, but in a less familiar way than Lacy and Elaine. Killian came up behind them with fresh beers and placed one in front of each of them.\n\n\"For losing at go-karts,\" he winked and pulled up a chair.\n\nThe band that had been tuning up suddenly got quiet. The players shifted and Sarah watched their gaze converge on an older man standing off the stage, but holding a microphone. A hush fell over the tent, starting at the first tables and fading into the back. Mrs. Daly's group pulled out napkins and handkerchiefs and adjusted their chairs to better face the man with the mic.\n\n\"Who's that?\" Sarah whispered to Ro who's rapt attention was on the man too.\n\n\"Just wait,\" Killian cut in, smiling.\n\nA single note swelled up from a horn player at the center of the stage. It reverberated around the space and faded out into the evening air. Sarah realized the crowd held a collective breath as the older man brought the microphone up to his mouth. He began to sing.\n\nSarah couldn't understand the words, but the melody that flowed from his strong tenor made meaning irrelevant. His voice trilled and caught as he wove the notes effortlessly around the entranced crowd. There was no false emotion as his eyes fluttered leading into the chorus. He looked brave and affected. Strong and timid. The wrinkles in his face stretched as he moved through the song. Sarah was captivated.\n\nThe band didn't join in, it remained the beautiful tenor voice alone, echoing through the tent. Sarah thought she heard a few sniffles as he melted into what she counted as the third verse. The melody ripped through her heart and she knew this was not a happy song, but something of deep sadness. Ro's hand found hers under the table and she laced their fingers as the final chorus faded.\n\nThere was a beat while the man's hand holding the mic dropped from his face, then thunderous applause tore through the crowd. Tables were banged, shouts, whistles, and glasses clinking shook the air around her, pulling Sarah from the enchantment. At least four people stood to bring a drink to the singer. Ro squeezed her fingers.\n\n\"Did you like it?\" She had a tear on her cheek as she looked hopefully at Sarah.\n\n\"That was...that was amazing. Beautiful.\"\n\nRo beamed. \"It's a love story. A tragic one.\"\n\n\"Yeah, I picked up on that. He's so talented. Do you speak, uh- is it Celtic?\"\n\n\"Gaelic,\" Ro corrected, \"I don't speak it. My dad translated that song for me one year,\" Ro looked wistfully across the tent. Mr. Daly had moved from his table and was planting a sweet kiss on his wife's cheek.\n\nThe band swung up into more lively tunes while they finished their beers. Killian gave his sister's shoulder a squeeze as he got up, \"If you're dancing with the girls, you'd better get a move on sis. They're setting up on the big stage in half an hour.\" He left to go say goodnight to his parents. It looked like Mr. and Mrs. Daly were packing up and their tables were dispersing. As they stood, Sarah caught Mrs. Daly staring daggers at her with Ro's hand in her lap. The older woman made eye contact with her and narrowed her gaze before turning back to her husband. Sarah shivered.\n\nA few minutes later, Ro and Sarah tumbled out a side flap of the tent still hand in hand. The sun had really set now and the lights on the bigger stage were up full and bright like a beacon as people milled about setting up instruments and wooden boards on the floor. Sarah caught sight of a few girls peeking behind the stage in what looked like dance costumes. She dropped Ro's hand to point.\n\n\"Is that your dance crew?\"\n\n\"No,\" Ro smiled, \"Those are the younger girls. I think they'll do a couple numbers first. I can stay with you a bit longer.\" They wandered to the front of the stage where Ro leaned up and called to one of the guys setting up a drumset at the back. \"Oye! Billy, you idiot! The drums go upright on the stands!\"\n\nThe man she was yelling at shielded his eyes from the stage lights and burst into a delighted grin when he saw Ro leaning over the stage. \"Well, get your arse up here and help, Daly!\" Sarah was surprised to hear a thick Irish accent as he shouted back.\n\n\"That's what they pay you for, Roadie!\" Billy made his way to the edge of the stage as Ro teased him. He bent down and gave an enthusiastic pat to her arm.\n\n\"Who's this then?\" Billy eyed Sarah.\n\n\"This is my girlfriend, Sarah. Sar, this is Billy Cromwell. He's one of the musicians.\"\n\n\"One of the musicians? Come on, Roisin, I'm her first love!\"\n\nRo pinched Billy's arm, \"Hardly,\" she snorted. \"He kissed me when we were ten years old.\"\n\n\"And she responded by giving me a bloody nose,\" Billy beamed like it was the fondest memory he had.\n\nSarah laughed.\n\n\"Listen, Roisin, I meant to call you, but Daisy and I are moving back. This is sorta our last hurrah. We sold the house and we're flying out in June. Think you can come back for a going away party?\"\n\n\"Back to Ireland?!\" Ro looked shocked.\n\n\"Yes, I know. But with her parents gone and mine still over there, we wanted to be closer to family. We're having a baby, Daly.\"\n\nRo smiled, \"That's great! Congratulations Billy. Of course I'll come to say goodbye. Is Daisy here? I'd love to see her.\"\n\n\"She's around somewhere. I expect she's corralling the lassie's backstage. We'll make sure to say hi before the set. You dancing tonight?\"\n\n\"I might jump in.\"\n\n\"Good! Nice to meet you, Sarah. See ya later, Roisin!\" Billy waved as he went back to moving equipment and cords around the stage.\n\nSarah was a little taken aback by the easy way Ro introduced her as her girlfriend to everyone. She knew logically that Ro was out and had been for years. This probably wasn't her first time introducing a girlfriend around, but it was jarring everytime Sarah heard it. She pulled back from Ro trying to grab her hand again.\n\n\"Come on, I need a little water before I've got to go up there.\"\n\nThe show began with the band playing a little background music as the crowd filled out the parking lot in front of the stage. Ro pointed out the different musicians and told Sarah their names. She seemed to know everyone. Then, the younger kids started the dances. The audience loved it, cheering and giving these loud yipping calls that cut through the beats.\n\nSomehow, Ro knew it was almost done. She tried to kiss Sarah goodbye, but Sarah turned her head and Ro caught her cheek. She paused, but didn't comment.\n\nOnce Ro had disappeared, Sarah searched out another beer and found Shay with his arm around a woman stumbling toward her.\n\n\"Sarah!\" he called over the music. As they approached, Sarah could see he was pretty well sloshed and the woman was doing a lot to hold him up.\n\n\"Hi, Shay. Ro's about to dance.\" She gestured to the stage.\n\n\"Is she? Cool. Sarah, this is my girlfriend, Becky. Beck, this is Ro's girl Sarah.\" Becky extended a smooth, dark hand and Sarah shook it. Her brain was misfiring at Shay's characterization of her as \"Ro's girl\", but neither seemed to notice.\n\n\"Nice to finally meet you, Sarah! Ro's told me a lot about you. How are you enjoying the festival?\"\n\nSarah held up her beer, \"It's great. You having a good time?\" She eyed Shay's drunken form a little wearily.\n\n\"Yes!\" Becky giggled. \"I remember my first one of these, I think I ended up upside down in a trash can after my fourth car bomb. Not an experience I care to repeat!\"\n\nSarah laughed and Shay swayed into Becky more, copping a very obvious feel for her breasts as he did. Becky swatted his hand.\n\n\"Behave, Daly! It's nice to meet you, Sarah, I've got to take this one to get some hydration.\" She handed Sarah a set of keys, \"I know he drove you, but I'm going to take him home. Think you can get these to Ro and get his car back to the Daly's tonight?\"\n\n\"Sure thing!\" she replied, pocketing the keys.\n\n\"You're a gentleman and a scholar!\" Shay slurred stupidly. Becky giggled again.\n\nThey wove back through the crowd as Sarah made her way up to the stage. The younger dancers had long since finished and the band was rolling through a few pub songs as the stage was cleared a bit. She could see some rustling behind the curtain barrier below the stage steps.\n\nJust as she was thinking about moving more to the right side of the stage, the fiddle struck up an energetic melody. It blasted the crowd through the speakers and all the attention was suddenly rapt on the player. His fingers flew over the strings and the breakneck pace was soon matched by the other musicians.\n\nThe curtain Sarah had been watching burst open and a group of about ten women and five men came pouring through. The calls, whistles, and applause exploded around Sarah as the dancers climbed the stage. She looked, but didn't see Ro among them.\n\nThe dancers ranged in age from about sixteen to well into their thirties, if she could guess. The women wore short, green and black dresses with leggings and the men had simple black t-shirts and pants. They all had the same chunky black shoes which were hard to get a good look at because from the moment they hit the stage floor, their feet were moving.\n\nSarah was impressed with how they kept up with the frantic pace of the music through an entire song. Their stomping reverberated off the stage and on the boards that had been laid down. Being that close, the beating affected Sarah's heart in the way a snare drum did. She felt the steps pounding in her chest, through her ribs.\n\nWhen the first dance ended, the audience went wild. A second, slower rhythm picked its way through the night and just two dancers stepped forward, a man and a woman, to perform. Sarah watched them twirl and stomp together as the pace remained tamer than the previous number. It didn't last long.\n\nSoon, the musicians were picking up again. Sarah was close enough to see the sweat fly off their faces as they rushed the dancers through another lively jig. Then a voice cut over the music as the musicians pulled back for a moment.\n\n\"Ladies and gents, and dodgy sods with too much Guinness in ya!\" The voice was thickly Irish, though Sarah wasn't sure if it was genuine or an act. She hadn't noticed the microphones but now saw a guitarist speaking into one of several set up around the musicians. \"A special treat for ya!\" He gestured to the curtain and there was Ro. She was still wearing her black jeans, white tank, and green plaid knotted around her waist, but she'd traded in her boots for a pair of the chunky dancing shoes.\n\nHer smile was radiant as she marched slowly toward the front of the stage. Sarah knew her well enough to know this was her happy place, performing. But somehow she looked more genuinely delighted than the performance smile she wore for musicals or the demure posture she adopted for ballet. Her eyes raked over the crowd, settling on a spot high above the horizon behind them.\n\nThe music swelled again as Ro reached center stage. She stood on a board and her feet began an easy pace, keeping with the music and the dancers behind her. Sarah watched as every few smaller steps launched into a bigger jump or higher kick, her torso and arms unmoving. Ro's smile never faltered as she pushed through the steps with ease.\n\nSarah could feel the crowd's excitement more than hear it. The music and the stomping enveloped her ears and her chest. The pace quickened and Ro kept up easily. A slight sheen of sweat glazed her forehead and chest. The tempo increased again and Sarah saw a bead of sweat drip down Ro's neck disappearing into her cleavage. Those gorgeous breasts bounced distractingly along with her steps.\n\nA lump formed in Sarah's throat and she attempted to choke it down with the last of her beer. She felt a familiar heat rising in her core and realized tonight was going to be tougher at the Daly's than the night before.\n\nFaster and faster the musicians played, Ro jumped, clacked, and kicked her feet rapidly as her upper body barely moved except for the gentle bounce. Soon the other dancers fell away from the pace and Ro was the only one left battling the remaining fiddler. The other musicians were wiping sweat and cheering their compatriot on. Ro's feet and the fiddle's shrill cry fought for the pace.\n\nFinally, the sweat pouring off him from the previous numbers, the fiddler fell away and only Ro's breakneck, rhythmic stomping echoed in the venu. She took a rapid pattern once, twice, then ended the third with a huge leap and a crashing stomp.\n\nThe crowd went nuts.\n\nRo's chest heaved with recovery as she basked in the raucous praise for a moment. Then she lowered her head to the fiddler in a modest bow and marched from the stage. The other dancers took over, but it was a calm number compared with the previous display. Ro caught Sarah's eye in the crowd as she left the stage and Sarah understood to follow.\n\nThrough the curtain, the backstage area was really just a partitioned corner off the sidewalk. Ro was sitting in a folding chair changing out of the dancing shoes. She was alone.\n\n\"So, what did you think?\" Her breathing still wasn't quite even, but she had wiped most of the sweat off.\n\n\"Ro, that was...I can't even describe it. You are incredible. How can you even move that quickly?\"\n\nRo laughed, \"Years of practice.\" She pulled on her boots and rose to meet Sarah, who stole another glance around to make sure they were alone.\n\nShe pulled Ro in by her belt loop and kissed her hard. Her girlfriend's arms wound around her shoulders and Sarah could feel the pounding of Ro's heart still settling. More applause signalled the end of another dance and Sarah sprang away as she heard the sound of dancers descending the stairs from the stage. Ro looked a bit disappointed as Sarah yanked away, but recovered when she bent to grab a water from a nearby cooler.\n\n\"Let's go! They're going to start the singing soon.\" Ro accepted compliments from her fellow dancers as they passed.\n\nThe party swept well into the night. Sarah loved the pub songs and the musicians' lively attitudes. Around one in the morning they announced the final song \"The Rattlin' Bog\". The crowd went wild, everyone tried to keep up with the lines. Between the beer and the shouting, Sarah knew there was a bog, a limb, and something about a tree or a hole, but she couldn't keep up. Ro, more sober and more versed in Irish drinking songs, knew every word and delighted in Sarah's fumbling.\n\n\"I can't fucking talk that fast!\" Sarah slurred as she tipped into Ro. Killian had bought them another beer and was quite sloshed himself, singing along and trying to dance. Connor had gone home earlier, not being old enough to drink and still required to attend church with his mother in the morning.\n\nRo was driving Shay's car back with Sarah giggling in the front and Killian singing off key lying in the back. She rolled her eyes, but luckily they got in the house without too much help. She reminded them to be quiet as they ascended the stairs. Sarah pulled Ro to her as they stood in the hallway.\n\n\"I'd like to kiss you, Ro,\" she whispered drunkenly.\n\nRo giggled and kissed her, \"You can always kiss me.\"\n\n\"Oh good!\" Sarah wrapped her arms around Ro's waist and pulled her in for a sweet kiss, using the hallway wall for balance.\n\nThey were interrupted by a stern voice, \"Roisin Maria, it's time for bed!\" Mrs. Daly stood in her doorway in her bathrobe, glaring at her daughter.\n\n\"Of course, Mom. Sorry if we woke you.\" Ro leaned back to smile at Sarah and make sure she was going to make it to the bed.\n\n\"NOW ROISIN!\" Mrs. Daly bellowed.\n\n\"I AM, Mom! I'm just making sure Sarah's okay!\"\n\n\"She is a grown woman and presumably can take care of herself, Roisin. To your room.\"\n\n\"S'fine, Ro. Thanks for a great day. I'll be fine after some sleep,\" Sarah mumbled to keep her voice from Mrs. Daly who was still glaring as Ro trudged down the hall and slammed her door. Sarah didn't dare wait for that gaze to turn back on her, she shut the door to her room quietly and flopped onto the bed. Her shoes kicked off behind her and she made sure her phone was on the charger before passing out.\n\nChapter 22: A Hard Line\n\nThe hangover the next morning was brutal. Killian and Sarah were completely useless until well after breakfast. Connor delighted in closing doors loudly and talking at a higher volume when he saw them lazing around. Killian threatened him with death, but it didn't seem to have an effect as he did so while shielding his very green face from the living room light.\n\nMrs. Daly was up and dressed for church at her usual time. Connor and Mr. Daly were expected to accompany her to the early mass, but Roisin, Killian, and Sarah were told they could attend the later service. Provided they brought her potluck dishes for after.\n\nSarah's family wasn't really religious, but she enjoyed the singing and the church was beautiful. Mrs. Daly apparently had a pew that she always occupied about halfway back in the chapel. As was their tradition since Connor was three, her children sat in the row in front of her so she could hiss in their ears if they misbehaved. As the service wore on, Ro whispered to Sarah to explain some of the things she didn't understand during the chanting.\n\nThe potluck after was a continuation of the Irish heritage festival, so there was music and food spilling all the way out to the parking lot. Sarah followed Ro and her brothers around as they said hi to people and helped move chairs and tables. It was a pleasant afternoon for March and the fresh air helped the hangover.\n\n\"Roisin, come here!\" Mrs. Daly was talking to a young man at her table. The guy was probably Ro and Sarah's age and had that hipster look. He was thin and lanky and had a wild beard that made Sarah wonder if he just didn't know how to trim it or if it was intentional. She followed Ro over to Mrs. Daly with a sneaking suspicion. Mrs. Daly continued as they got closer, \"Roisin, this is Tim Andrews. He's our new social media director, is that right?\"\n\n\"Yes, Mrs. Daly,\" he smiled dotingly at her, then turned to Ro, \"I also do all the bulletins and graphic design for the church.\"\n\nRo shot her mother a look, \"Oh, yes, Mom told me there was a new, um, media person.\"\n\n\"Yeah, that's me!\" His cheery grin was mostly concealed beneath the uncultivated face mane.\n\n\"Roisin is in her junior year at Western,\" Mrs. Daly attempted, \"She's in the dance program. Maybe you saw her dance last night at the festival?\"\n\n\"No,\" Tim replied, \"I missed that pleasure I'm afraid.\" His eyes raked quickly over Ro, Sarah felt a green monster stir in her chest. \"I left early. Early mornings at the church you know.\" He and Mrs. Daly chuckled.\n\n\"Right,\" Ro's voice was short. Sarah could hear the displeasure. \"This is my girlfriend, Sarah.\" Ro grabbed her hand and pulled Sarah forward. This time, Sarah didn't shrink away from the 'girlfriend' introduction.\n\nTim's smile froze, it became fake and forced instantly, \"Uh, hi!\" he recovered quickly, Sarah had to hand it to him, he held out his hand. Sarah took care to give a tight squeeze which just about crumpled his soft hand. \"Ah, nice to meet you, Sarah. Well, Mrs. Daly, I need to go check on a few things. Sundays are our busy days you know! See you soon. Nice meeting you both.\" Tim retreated and Sarah wished she could too as she saw the look in Mrs. Daly's eyes.\n\nRo's mother wouldn't make a scene here in front of her church ladies, but Sarah could feel the anger rolling off her as they helped pack up the potluck. They didn't have to wait long for the explosion once they got back to the Daly's house. Killian dragged Sarah outside to throw the football around the backyard and Connor went up to his room to hide after being tipped off by Ro.\n\n\"I'm just asking you not to push your relationship in people's faces!\" Mrs. Daly's voice carried out from the dining room as the ball sailed past Sarah and fell into the bushes by the side of the house. She went to retrieve it, but froze behind the porch pillar as she realized Ro was in there shouting too.",
        "\"Mom, Shay and Becky were literally making out at lunch yesterday, you didn't say anything to them!\"\n\n\"That's different,\" Mrs. Daly sputtered.\n\n\"Why? Because they're straight?!\"\n\n\"Don't shout at your mother, Roisin.\" Mr. Daly was standing in the entrance to the kitchen. Sarah noticed that from her vantage point, she could hear through the open sliding door, but they couldn't see her.\n\n\"She's being ridiculous, Dad!\"\n\n\"Enough. Shay and Becky are adults, they can do what they like. You're under our roof and I will not have you embarrassing our family by parading your antics around our friends.\" Mrs. Daly's eyes glimmered dangerously.\n\n\"My antics?! You mean my being gay. Just say it, Mom! You can't stand it! You hate that I'm a lesbian.\"\n\n\"I thought you worked through this confusion. Apparently, I was mistaken.\"\n\n\"I'm not confused, I'm fucking GAY!\"\n\n\"Roisin Maria! You will not talk to your mother that way. As long as you are in our house, you will follow our rules or you will not be allowed back. That's enough of this!\" Mr. Daly stepped fully into the dining room now.\n\nRo's shoulders slumped, Sarah could see her eyes shining with tears.\n\n\"You're right, Dad. That is enough. Sarah and I are leaving. I won't be back. Clear out my room if you want, I don't need anything from you. Not anymore.\"\n\nSarah felt a hand on her shoulder as she watched Ro leave the dining room and head to the stairs. Killian was pulling her away from the doors. \"Come on, Sarah. Let's go around front.\"\n\nHe guided her around the house through the side yard, leaving the football in the bushes. They quietly passed in and through the entryway. Luckily, the stairs could not be seen from the dining table, so Sarah didn't have to face Ro's parents. Killian followed her up and to Ro's room.\n\n\"Ro?\" Sarah pushed open the door and saw Ro crying and throwing things into her duffle. Killian squeezed her bicep and left, pulling the door closed behind him. \"Ro, are you...are you okay?\"\n\n\"You heard that?\"\n\nSarah just nodded.\n\n\"Right, well, we should go. I'm going to pack what I can-\" Sarah didn't let her finish, she pulled Ro into her and let her girlfriend sob onto her shoulder.\n\nAt some point, Killian and Connor came to help them move things to Ro's car. She was bringing almost all of her clothes, several framed pictures, a high school scrapbook, her jewelry box, and a box of dance gear from her closet. They crammed it all into the trunk along with Sarah's softball bag. The backseat was filled with their school bags and the duffles they'd brought for the week.\n\nMr. and Mrs. Daly did not come out to say goodbye to their daughter, but Sarah saw Ro's dad looking through the living room window as they packed the last box.\n\n\"Don't worry about them, Ro,\" Connor cooed as he pulled his sister into a hug, \"They'll come around eventually.\"\n\n\"And we'll give them shit until they do,\" Killian added with a kiss to her cheek.\n\nRo just nodded, \"Thanks for helping guys, tell Shay I said bye. I'll text him later this week.\"\n\nWith her brothers waving from the driveway, Ro pulled away from her childhood home. They made it about fifteen minutes away before Ro had to pull over. They stopped in a Denny's parking lot and cried. Sarah held her as close as the center console would allow. Once Ro's sobbing subsided. Sarah got out and went around to the driver's side.\n\n\"Let me drive,\" she said as she calmly undid Ro's seatbelt. Ro complied and soon they were back on the highway.\n\nHalfway back, Sarah remembered they didn't have any food back at Ro's apartment and it was almost three. She pulled off and found a grocery store. She coaxed Ro in and managed to get her to pick out some things to eat. They barely spoke. Sarah kept all her touches platonic, she told herself it was because Ro was emotionally overwhelmed already.\n\nThe rest of the drive was quiet as Ro drifted in and out of sleep.\n\nWhen they got back to campus, Sarah was surprised to see a text from Killian.\n\nK: How is she?\n\nS: She's tired, she slept a lot of the way.\n\nK: Sarah, I gotta tell you...this isn't the first fight they've had about this. \n\nS: I know. She's told me\n\nK: Did she tell you all of it?\n\nS: ??\n\nK: She should be the one telling you, but I need to know someone's looking out for her. When she came out in high school and mom did her thing, Ro developed an eating disorder. It was bad, Sarah. She was hospitalized for a while. Please, just make sure she takes care of herself?\n\nS: I will. \n\nK: Thanks.\n\nShe didn't tell Ro about the text with Killian. Sarah wasn't sure if it would help or hurt that her brother was worried about her mental health. Instead, she helped unload Ro's car and put things away in the apartment. She got a load of laundry going for her girlfriend and told her to find a movie or something. They curled up on the couch for a few hours, just watching movies and holding each other. Sarah missed this physical contact. No one was around to interrupt them. They could be themselves.\n\nThe rest of the week, Sarah stayed with Ro, only leaving for workouts or to get food. She kept Killian in the loop and she knew Ro had talked to Shay at least once since leaving. Ro's parents didn't reach out. Sarah suspected they were either getting their news from Killian or were still too angry to care if their daughter was okay.\n\nSpring break ended with a quieter weekend. Ro was bouncing back to herself faster than Sarah expected. She continued to eat at Sarah's prompting and seemed unaware that she was being watched a little more carefully than usual at mealtimes. They had the apartment to themselves through Sunday afternoon and took full advantage on Saturday, only putting on clothes to answer the door for their take-out delivery.\n\n\"Fuck, Ro!\" Sarah was on her hands and knees on the bed as Ro pounded her from behind with their strap-on. \"Right there! Oh fuck, yes, yes I'm gonna come!\" Ro sped up her thrusting and pinched the soft flesh of Sarah's hips as she pushed in. Sarah came with a loud cry and a shiver ran up her spine.\n\nRo steadied and slowed her movements as Sarah came down from her orgasm. She leaned over and planted a kiss between Sarah's shoulder blades, sending another tingle up her spine. \"You're so beautiful.\"\n\nSarah pulled the strap-on out of herself and rolled over. Ro was kneeling above her on the bed, sweating but smiling. \"You're getting really good with that thing, baby. Come here though.\" She tugged at Ro's thigh and encouraged her up the side of the bed to kneel by Sarah's head. Sarah pushed the harness off Ro's hips and Ro did the rest, removing it quickly, before coming back to rest over Sarah's head.\n\nRo gasped quietly as Sarah's hands found her ass.\n\n\"Sit on my face, baby,\" Sarah growled. Ro lowered herself obediently.\n\nUsing her tongue to reach for her girlfriend's clit, Sarah began the long, slow licks she knew Ro liked. Starting at her clit, she ran her tongue backwards down to her wet folds, then back up. Over and over. Ro moaned above her and they made eye contact past the swell of Ro's breasts.\n\n\"Yes, Sar,\" Ro moaned again.\n\nSarah's tongue started to move faster, dragging back and forth, lapping up the wetness that leaked out over her face. Her hands massaged Ro's ass, pinching the smooth skin. She could do this forever. Ro had strong legs and held herself at the perfect angle without squishing Sarah. The taste of her, the smell, the look as she threw her head back and arched into Sarah's mouth was everything. Sarah couldn't believe she had lived without this for years.\n\nShe pulled her face away to look up at Ro again, \"Come for me baby. Come on my face. Let me fuck you.\"\n\nRo moaned and shuddered as Sarah dove back in, adding hurried pressure to her clit. She felt her girlfriend getting close even as a new wave of wetness gathered in her own pussy. Hands found her dirty blonde hair, fingers tangling in it and yanking her mouth closer. Then Ro came, spasming around Sarah's tongue and her ass tightening under Sarah's hands.\n\n\"That was great,\" Ro gasped as she lifted off Sarah's face. She dropped backwards onto the bed and curled up next to Sarah. They'd been going at it non-stop since lunch when Ro had dripped mustard onto her shirt and took it off to clean it. Sarah hadn't been able to keep her hands to herself.\n\nIt was dark outside now. \"What time is it?\" Sarah asked as she caressed Ro's shoulder with the backs of her fingers.\n\n\"Um, seven thirty?\" Ro blinked at the light on her phone.\n\n\"Holy shit.\"\n\nRo started giggling uncontrollably, \"You, you should see your face!\" she gasped through her laughter.\n\n\"I mean,\" Sarah grinned, \"Gotta be impressed with our stamina. But no wonder I'm starving! Let's make pancakes.\"\n\n\"Pancakes?\" Ro laughed some more, holding her sides, \"Okay, weirdo.\"\n\nAfter finding some clean clothes and cleaning themselves up a bit, they made pancakes together. Sarah watched to make sure Ro ate a normal amount. When they finished, they played cards and cuddled on the couch.\n\n\"How are you?\" Sarah asked as Ro lay in her lap with Sarah stroking her hair.\n\n\"Mm, okay.\"\n\n\"Really?\" she looked down at Ro's eyes. Her lashes were gorgeous and long even without mascara. Those eyes blinked tiredly.\n\n\"I guess I'm just over it with my parents, you know? I'm tired of pretending for their sakes and...and,\" she hesitated, \"and I wish we didn't have to pretend for yours either.\" Ro sat upright and looked away.\n\nSarah saw this was part of a conversation Ro must have been thinking about for a while. She sat straighter on the couch and faced Ro. \"For my sake?\"\n\nRo took a deep breath, paused to deliberate, then launched into it. \"I'm really happy you came out at your party, really. Telling everyone I'm your girlfriend meant a lot to me. But then, we get away from here, at the festival and you clam up again. Campus isn't the real world. We aren't going to be here forever. We need to figure out how to be together outside of here.\"\n\nSarah didn't know where this was going. \"What's that supposed to mean?\"\n\n\"It means, I want to stop acting straight in public when we're not on campus. I want you to be happy when I introduce you as my girlfriend, not tense.\"\n\n\"We don't 'act straight' in public,\" Sarah protested.\n\n\"Yes, we do and especially when your family is around. When I come to your games, you won't touch me. You still haven't told your parents about me. I met them as a part of your friend group, not anything special. I want to get to know your family! I want to be known as your girlfriend.\"\n\n\"I'm not- I don't-\" Sarah stuttered.\n\n\"It's not fair, Sar!\" Ro was getting worked up, \"David goes to eat with Carly and her family after every game. Tara and Kate practically make out behind the dugout when you guys win. And what do I get? A wave, maybe, if I'm lucky. Then I disappear back to my apartment until your parents leave and you come over. I don't want this!\"\n\n\"Don't want what?\" Sarah asked hesitantly.\n\n\"Don't want to keep sneaking around. We're not going to be in college forever, Sar. I'm almost done! Hell, I might not be able to finish if my parents are done with me. But I know that I want to be able to be with you outside of here.\"\n\nSarah's face was hot. She knew in her gut Ro was right, it wasn't fair to her to keep pretending like they weren't together. Hearing Ro talk about life after college, about wanting to be with her, their future, made her heart leap. But Sarah was afraid, fresh off what happened with Ro's parents, what if her's reacted the same way? She dreaded that conversation with her parents, couldn't Ro see that?\n\n\"I know. I'm sorry. But I'm not ready,\" Sarah murmured.\n\n\"Well, any idea when you'll be ready?\" Ro snapped. Then she took a breath, \"Sorry, that wasn't, I shouldn't have said it like that.\"\n\nSarah took a shaky breath, \"I'm sorry, Ro. I'm trying, it's just different with my parents. We don't talk about that stuff. I don't know how to get it out there.\"\n\n\"It's not- you're sure it's not because you're ashamed? Ashamed of me or of being a lesbian?\" Ro whispered so quietly Sarah had to strain to hear her. Tears welled up in her eyes.\n\n\"No! Ro, it's not that! I promise, it's not that,\" Sarah watched tears spill onto her cheeks. She realized how much this was affecting Ro, how much it hurt to be sidelined in her life. She took a deep breath, \"I'll fix it, I promise. I'll tell them.\" She wrapped her arms around Ro whose tears were falling fast.\n\n\"My parents hate me, Sarah,\" she sobbed into her shoulder.\n\n\"They don't hate you. They are...struggling.\" Sarah tried to comfort her, but she didn't know what else to say. They held each other for a while, tears mingling and being brushed away. Somehow that gave Sarah clarity, seeing Ro reduced to tears. She knew it was time to be out. Ready or not.\n\nChapter 23: Six Months\n\nThe following weeks leading into April were hectic. Sarah had games every week as well as daily practice. Ro was in two more productions. One she was doing backstage work and the other she was dancing in the chorus. They made time to see each other when they could, but often that was Sarah coming over for dinner to slyly make sure Ro ate then collapsing into Ro's bed after finally finishing her assignments at two in the morning. Or it was Ro stopping by Sarah and Carly's room to sit and watch them get ready for class or practice and just talk for a few minutes.\n\nRo still had not heard from her parents, though her brothers said they asked about her occasionally. Sarah had a hard time reading Ro's reaction to this. She definitely seemed sad when the topic of parents or families came up anywhere, but she didn't show any anger or any other real sign than a slight brow furrow. She wondered if her girlfriend was just shoving it down, attempting to bury the feelings. Sarah knew it would blow up eventually, but she was still learning about Ro and wasn't sure how to help her decompress the pressure cooker of her feelings without Ro blowing up at her.\n\nAs far as coming out to her parents, Sarah hadn't made any progress yet. On game days, she was focused and it didn't seem like something she should say over the phone. As they'd had no home games in April, there wasn't an opportunity to have Ro and Sarah's parents in the same place. And Ro hadn't brought it up again anyway.\n\nThe end of the month brought exams. Ro was stressed about keeping her scholarships and Sarah was trying to keep her GPA up for graduate school applications. The softball team was also up in the conference tournament the first two weeks of May, so that pressure added to Sarah's stress.\n\nThe team won in the first round and was set to head to the next on a rival campus about four hours away. Ro's performances were over and she was planning to watch the live updates of the game with Kate while the team was away. Sarah's parents would be at this game since it was over a period where their shifts off coincided. She wondered if she could find a way to tell them after the game. But realistically, she pushed it out of her head until later. She needed to focus.\n\nWhen they lost, it was expected, but still disappointing. Sarah had opted to ride the bus back to campus, so she really only had time for a quick hello to her parents before hopping on the charter. Carly knew what was up and about the promise she'd made to Ro.\n\n\"Don't give me that, Carly,\" Sarah hissed as Carly gave her a loaded look when they plopped into their bus seats. \"It's not something I want to drop on them then run.\"\n\n\"You've got to just take the bandage off, Sar. This is going to eat you up inside. Not to mention Ro!\"\n\n\"I know, I know. Well, now that our season's effectively over with that loss, I can find a time.\" Carly gave her a doubtful look, \"What? I will!\"\n\nBut tomorrow was the start of the third week of May and with the team's loss, the women had to be out of their dorm. Sarah was going to go home for the summer to work her local softball camps and help with her mom's charity. Carly had her usual landscaping job she was headed back to. So when they got back from the tournament, Carly and Sarah started packing up their dorm.\n\nSarah had shot Ro a text saying they were back, but hadn't heard from her. She also hadn't heard back from her \"we lost\" texts nor her \"driving home\" phone calls. Odd.\n\nFinally, around ten o'clock. Sarah called Kate. They were supposed to be hanging out all day so maybe she knew why Ro wasn't answering her phone.\n\n\"Hey Sarah, what's up?\" Kate picked up on the second ring.\n\n\"Hey, is Ro still there with you? She's not answering her phone.\"\n\nThere was a pregnant pause as Kate took a deep breath, \"No, she left here a couple hours ago. I brought her to her apartment.\"\n\nSarah heard something unsaid in Kate's voice. Kate brought her home, Ro had been unable to drive.\n\n\"Okay, thanks Kate. Did she say anything? Was it because of her parents?\"\n\n\"I think that was part of it. She got a call earlier. It might have been from her dad.\" Kate had no reason to deny it if Sarah could guess the state Ro had been in when she took the woman home. \"If you go over there, will you text me? Now I'm worried about her too if she's not answering you.\"\n\n\"Yeah, I will. Thanks, Kate.\"\n\nNow the worry was real, Sarah wasted no time in grabbing her keys. Carly gave her an inquisitive look while on the phone with David, but Sarah just mouthed \"Ro's\" and closed the door behind her.\n\nWhen she got to Ro's apartment, she noticed her car wasn't there. That confirmed what Kate had said about driving her home. Her car must still be at Kate's. She knocked on the door several times before June finally answered. She had found the handle locked when she tried it.\n\nJune gave her a look of annoyance and worry, then wordlessly pointed to Ro's room.\n\nLuckily, Ro's door was not locked. The first thing she noticed when she entered was the mess. It looked like all of Ro's closet and her dresser had exploded over the room. The bed was buried under a myriad of tutus and sweaters. Jeans leaned in uneven piles on the floor, and shirts, socks, underwear were everywhere else. A loud crash sounded in Ro's bathroom and a curse.\n\n\"Ro?!\" Sarah darted into the room. Ro was sitting on the edge of the sink, picking up pieces of a compact that had fallen and broke over the counter leaving tan powder in little cakes. The smell of alcohol hit her like a slap in the face. \"Whoa, Ro, are you okay?\"\n\n\"Baaaaaaabe!\" Ro threw her arms around Sarah's shoulders and tipped off the counter into her.\n\n\"Uh, what are you doing? Why does it look like a bomb went off in your room?\" The alcohol on Ro's breath made Sarah's eyes cross. It was so strong. She started to worry about alcohol poisoning.\n\n\"I'm packing! I got a job.\" Ro said it like it was the most natural thing in the world.\n\n\"Right, uh. That's...good? But you're packing because...?\"\n\n\"Because the job is far away,\" Ro was surprisingly articulate, but she still slurred the words a bit.\n\nSarah pulled Ro up firmer in her grasp and carried her to the edge of the bed. \"Ro, how much have you had to drink?\"\n\nRo waved Sarah off clumsily, \"I'm fine! I had some wine at Kate's, then vodka sodas here.\"\n\n\"Where's the bottle of vodka? Was it new when you started drinking it?\"\n\nRo groaned and fell backward onto the bed on top of a pile, knocking most of it to the floor. \"S'in the kitchen.\"\n\nSarah jogged back out the door, but June was waiting for her. She must have heard part of their conversation because she held up the bottle and indicated with her fingers where she thought the bottle had been when Ro started drinking. To Sarah's relief, it wasn't an alarming amount. It was still more than she should be drinking in an evening on top of wine, but not enough to make Sarah consider taking her to the ER.",
        "\"Thanks, June.\"\n\nJune nodded and put the bottle in an upper cabinet then switched off the kitchen light and went to her room.\n\nSarah took off her shoes and coat, texted Kate that all was well, well-ish. Then she slipped back into Ro's room and closed the door.\n\nRo was now on the floor, playing with a pale green tutu with little gems around the edge. Sarah handed her a glass of water, which she took, thankfully, without argument.\n\n\"I'm sorry you lost today.\" Ro's voice was quieter.\n\n\"Thanks, but they were a better team. We'll have to get 'em next year.\" She sank onto the floor with Ro. \"Want to tell me what's going on?\"\n\nRo sighed. \"I got a job. I start next week so I've got to get packed. Kate's going to store some of my stuff. I can only bring a few things with me.\"\n\nSarah felt she was missing something here. She dreaded the answer but had to ask the question. \"What's the job, Ro?\"\n\nRo's eyes filled with tears and she looked away.\n\n\"Ro, come on. You have to tell me eventually.\"\n\nA shaky breath that caught with a sob escaped before Ro began. \"Look, I don't have much choice, right? I have a dance degree. Well, part of a dance degree. And I can't afford the other part right now, not without my parent's help. Dad called today by the way. They won't be helping me with tuition or anything while I insist on living a lifestyle contrary to our beliefs.\" She paused to sneer, but choked up again. \"Even with the scholarships I managed and the pay from the shows I have so far, it's not enough for tuition and rent and food. With this job, room and board are covered and I'll be paid. And I'll be performing! It's really perfect. If I don't join now, there won't be any spots left in the busy season. I've got to go, Sar.\"\n\nHer voice cracked and broke through her speech as she avoided Sarah's eyes.\n\n\"What's the job, Ro?\" Sarah felt a heaviness in her own chest as she repeated her question in a whisper.\n\nRo finally looked up to Sarah's face, \"I'll be performing for a cruise line. I'll be on board entertainment for the Carribean season.\"\n\n\"Oh.\"\n\nHer hands were caught by Ro's slender ones, \"It's going to be the best,\" she sounded more like she was convincing herself, \"I'll go next week to learn the first routines and sail in sixteen days. It's only six months and I'll be able to come back and get a job or go out again for the winter season if...if-\"\n\nShe stumbled as a storm cloud grew on Sarah's face, \"Six MONTHS?!\"\n\nRo stuttered, \"Well, yeah, it's a six month contract.\"\n\nSarah yanked her hands away from Ro. \"You're leaving next week for six MONTHS and you just decided to tell me?!\"\n\nRo didn't answer, she just looked down at her empty hands.\n\n\"What about finishing your degree? What about fall classes? The dance program? Your friends? ME?\" Sarah stood up and was pacing around the cluttered room now.\n\nMore tears spilled onto Ro's cheeks and her shoulders started to shake. \"I can't, Sarah, I can't afford it. I have to go. It's a job.\"\n\n\"There are jobs here! You can work anywhere, grocery stores, local theaters, coffee shops-\"\n\n\"And where would I live?\" Ro snapped. A fire had started behind Ro's voice and Sarah's mind screamed danger, but she didn't listen.\n\n\"Where? With your friends! You think we'd let you end up on the street? You could come home with me! My parents would be happy to have you-\"\n\n\"Your parents who don't even know that we're together?\" Ro slowly rose from the floor. \"How would they feel, Sarah? Your lesbian lover, down on her luck, thrown out by her own parents, moving in to work at the local Seven Eleven? Scraping pennies and wishing on a star to have enough for tuition next year? No, no thanks.\"\n\n\"But, Ro, I'm going to tell them, they'll know-\"\n\n\"Like hell you are! You've had months, Sarah! I've waited MONTHS!\"\n\n\"It's not that easy!\"\n\n\"'Mom, dad, I'm gay. This is Ro, my girlfriend.' Yeah, you're right, really fucking difficult!\" They were both shouting now and Sarah felt vaguely sorry for June in the next room.\n\n\"You know that's not what I meant. Ro, I want to tell them about you, I do, but-\"\n\n\"I'm done waiting, Sarah,\" Ro wasn't yelling anymore. Her voice was low and calm. Somehow it was so much worse. \"I'm leaving for Florida on Monday. I have to drive because I can't afford a plane ticket. We start rehearsals on Thursday. I'll stay in a dorm with the other performers, then we set sail after that.\"\n\n\"So that's it? You're leaving?\"\n\n\"Yes, Sarah. And,\" she took a deep breath, wiped a tear on her sleeve, squared her shoulders, \"And I hope that someday you can find someone worth coming out for. Or just finally come out for yourself.\"\n\nSarah felt like she'd been slapped. \"That's it?\" she squeaked out again.\n\n\"That's it.\" Ro flinched, but her resolve didn't waiver.\n\nHer lungs stopped working, she choked, her chest heaved. Sarah felt like a lead balloon was expanding in her chest, crushing her lungs and organs. Ro's face was cold, frozen. She didn't show any acknowledgement that Sarah's body was killing itself right there in her room. What happened? Ro had seemed glad to see her at first. Was this alcohol? No, Sarah realized, this was months in the making. She needed out.\n\nSarah turned and fled. Ro's door banged open behind her and June came out of her room to see what the commotion was. Sarah barely stopped to grab her coat and shoes. No sounds of Ro followed her. She kept running into the parking lot and peeled out. Driving with her chest collapsing was probably a bad idea, but Sarah wasn't listening to reason. She was only trying to force air into her lungs. Finally parking at her dorm, she fell apart in her car. Sobs racked her chest and her shoulders slumped pitifully.\n\nShe wasn't sure how long she cried in her car before a soft tap on the window brought her back. Carly.\n\n\"Sar? You should come up.\"\n\nSarah looked at her, bewildered that Carly knew she was out here.\n\n\"Um, Ro called. She wanted to make sure you made it here.\" Carly shrugged. Sarah let her roommate lead her up to their room. She was vaguely aware of a soft hand on her shoulder, helping her to her bed. Then Sarah was alone again to cry out any tears she still had left.\n\nChapter 24: Home\n\nIf Sarah could be glad for anything, she was at least grateful Ro had waited until exams and softball were over to dump her. She was utterly useless with a broken heart. Carly had to force food on her and make her get up and shower that first day. Later that night, she got a text from Tara asking if she was okay. Ro must have told them. That somehow made it more official and brought on a new wave of sadness for Sarah. She wasn't usually a crier, even now, it was more pain and difficulty breathing than actual tears. But, god, it hurt.\n\nCarly was packed and ready to go the next day before Sarah had finished emptying her dresser. Being the true friend she was, she stayed and David came over to help her pack up. She hadn't heard from Ro again and hadn't tried texting her.\n\n\"Sar?\"\n\n\"Hm?\" Sarah had been staring into space with half her bathroom stuff in a box on the counter in front of her.\n\n\"Do you want some help in here?\" Carly placed a gentle hand on her shoulder.\n\nSarah put on a brave face. \"No, I'm good. This is the last of it. You guys should go. I know you wanted to be back for dinner with your family.\"\n\nCarly pulled her into a tight hug. \"I love you, Sar. I'm so sorry. We'll talk tomorrow okay? And anytime you need.\"\n\n\"Thanks, Carly,\" Sarah whispered into her roommates' shoulder. Her chest was starting to tighten again and she wanted them to go before another wave hit her. \"Have a great summer.\"\n\nDavid and Carly brought a few boxes down to her car for her on their way out, both giving her apprehensive looks.\n\nWhen she was finally alone, Sarah collapsed onto her bare mattress and gave in to the hyperventilating. Few tears fell, but her whole stomach, chest, throat ached. Vaguely she wondered if this is what a panic attack felt like. Her anxiety had never been bad enough to elicit those, but she'd witnessed enough from friends to know it was a similar reaction. But why was she panicking anyway? The logical part of her brain was fighting hard for control over her emotions. So what, her first girlfriend dumped her. That's how love worked right? Oh, shit. Love? Yeah, Sarah loved Ro. That's probably why this hurts so much.\n\nAn hour and a glass of water was enough to bring Sarah back to normal breathing at least. She forced herself to act. Somehow, without Carly there, her brain shut off and muscles took over. She packed the rest of her stuff, called her parents to let them know she'd be leaving soon, and turned in her keys to the R.A. drop box.\n\nThe drive home was dull. Usually she called Ro or played music, but all Sarah wanted now was silence.\n\n_ _\n\n\"Sarah, what's wrong?\" It was dinnertime again and Sarah was home from teaching her softball camp with both her parents at the table for once. She looked up as her mother caught her eye over the plates.\n\n\"Nothing. I'm fine.\" They'd asked her this question before. For weeks actually, they'd asked how she was, but backed down when she said she was fine, just tired, or some other excuse.\n\n\"Sarie, honey, you're not fine,\" her dad responded. Ah, so this was to be an attack on both fronts. She sighed.\n\n\"The first few weeks we did believe it was the tournament loss, but it's been two months and you're still...I don't know. Down? Is it being home?\" her mom asked.\n\n\"No, Mom.\" Sarah put down her fork. She wasn't hungry anyway.\n\n\"Do you need to talk to someone? There's no shame in asking for help if you need it.\" Her dad had a lot of good friends in psychology.\n\n\"It's not that. I'm just...\" she was what? Broken-hearted? But how could she explain that without admitting why?\n\nShe didn't give her parents enough credit, \"Is it someone at school, maybe?\"\n\nSarah sighed again. She hadn't spoken to Ro since that night in her apartment. Ro had reportedly changed numbers because she was traveling internationally. Her social media was full of pictures of her on a cruise ship, beaches, performing on the stage. All shallow, fun stuff with an ever present cast of young twenty-somethings equally as beautiful. The few times Sarah had talked to Kate or Tara they'd mentioned Ro was enjoying the job, but never mentioned many specifics.\n\n\"Honey,\" her mom leaned forward, reaching across the table for her hand, \"You don't have to tell us. But we're worried about you. You're not happy, not sleeping well, and you're losing weight.\"\n\nThe weight loss was something Sarah had been trying to ignore. She knew it was a problem as an athlete, losing muscle mass like that, but she couldn't bring herself to eat enough to make up for it. She wasn't sick, it wasn't an eating disorder really. But anytime she ate until full, that horrible choking feeling would start in her throat and difficulty breathing would rack her chest, so she just ate a little less. Her parents noticing somehow made it worse, her eyes burned with hot tears.\n\n\"Oh, Sarah.\" Her mom got up from the table and rushed around to put an arm around her. \"I know we don't talk about these things, but you seemed so happy this year, we, uh, wondered if it might have been because you met someone? But now, what happened, honey?\"\n\n\"Please talk to us, Sarah. We're worried,\" her dad begging to talk about something other than medicine or sports was disarming. And Sarah was tired.\n\nShe let out a breath and leaned into her mom's side hug.\n\n\"Yeah, I was seeing someone, but I got dumped right before I came home for the summer. I'm sorry I didn't tell you. I didn't mean to make you worry.\"\n\nHer mom pulled her into a real hug, which was a bit awkward sitting in a dining room chair. \"Do you want to talk about it? Was, uh, this person someone you've been seeing for a while?\" She noticed her mom looked over her shoulder to meet her dad's eye. Some sort of silent communication. Wait, person? Had her mom just said person. Not \"guy\".\n\nWell, Sarah took a shaky breath while her parents waited patiently, out with it I guess.\n\n\"We met at a party right before school started last fall. I guess we officially started dating around Thanksgiving. It was really good, Mom. But,\" Sarah felt her eyes begin to spill the tears, \"I was afraid, god, that sounds so stupid. But I was, am. And now she's gone. Ro's gone!\" It was the first time Sarah had said her name in months. \"Because I couldn't tell you, I couldn't bear to think you guys would react the way her family did. Mom, Dad, I'm gay.\"\n\n_\n\n \n"
    ],
    "authorname": "CreatingKate",
    "tags": [
        "college",
        "coming out",
        "dance",
        "drama",
        "irish",
        "lesbian",
        "lesbian sex",
        "romance",
        "softball"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/what-a-shortstop-does-ch-20-24"
}