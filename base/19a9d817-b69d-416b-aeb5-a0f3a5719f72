{
    "title": "A Long Walk Home Ch. 20",
    "pages": [
        " What a ride this story has been. I think it's been my favourite one so far because I've loved the characters so much as they came to life for me.\n\nI've been in awe at all the wonderful comments from everyone. They've kept me going especially when I faltered around about chapter 15 of this tale and wondered if I'd ever be able to finish it. I can't tell you how much your words have kept me writing. I couldn't let you all down :-)\n\nSo I hope you all enjoy this final chapter. I can't thank you enough for reading, voting and commenting.\n\nTo the Guild - you've been the best friends ever. To my Tweeps - thanks so much for the hours of fun, the loaning of the smut fairies (LOL) and the friendship you have given to me.\n\nmikothebaby - you have been an utter treasure to me and I can never adequately thank you enough for all your hard work. Don't relax too much though because I will be back to clog up your inbox with more tales in the future :-)\n\nEnjoy! \n\n*\n\nRayne was still stunned at the news she was pregnant as she left Rafe's library, Gard closely following behind her. She could feel his emotions through their bond and had to fight down a laugh. One moment he was ecstatic and the next he was full of trepidation. Confused didn't come close enough to describing his emotions.\n\nShe was aware of Lacey in the sitting room with her sons and couldn't stop herself from peering in to look at them. She felt her own trepidation set in as she watched the ease her Alpha handled first one child and then the other as she cooed to them. Lacey made it look so effortless and she couldn't help wondering if she'd be half as good a mother.\n\n\"You'll be perfect,\" Gard soothed, his arms wrapping around her from behind, his hand resting tenderly against her stomach.\n\n\"Have you taken up mind reading now?\" Rayne laughed softly leaning against the thick wall of his chest.\n\nLacey looked up and smiled at the sound of their voices. She took in Gard's hold and her smile grew wider. \"It's easier than it looks, Rayne,\" she called out, immediately coming to the correct conclusion as to why her pack members looked so shell-shocked. \n\n\"Right up until the moment the boys were born Lacey was convinced she'd be a terrible mother,\" Rafe chuckled coming up beside them. \"She measured herself by Jen's standards and found herself lacking.\" His tone made it plain how ridiculous he'd found that idea at the time.\n\nThey headed into the sitting room together with Caleb and Annie bringing up the rear. Rafe crossed to his mate, sinking down to the floor beside her and reaching out to gather Ben in his arms for a quick cuddle before he lay him down gently and gave Aaron the same doting hug.\n\nRayne eased down onto one of the large sofas with Gard, with Caleb artfully guiding his mate away from the other sofa and towards one the many armchairs in the room. He picked the one closest to the babies.\n\n\"A King should have his throne,\" he laughed lightly at Rhianna's raised eyebrow.\n\n\"So should a Queen,\" she quipped back as he sat down and pulled her onto his lap.\n\n\"You have one, sweet Annie. You're sitting on it.\"\n\n\"Men!\" Rhianna rolled her eyes in mock exasperation even as she settled comfortably against Caleb's chest, contentment on her face as she gazed down at her nephews. She realised this was the first time she'd been in a proper family environment with her brothers and their mates. The feeling of completeness that came over her was wonderful.\n\n\"I wonder if we'll have a son or daughter,\" Gard mused, fascinated by the little boys wriggling on the soft blankets on the rug. He didn't really mind what they would have. He just wanted their child to be healthy and happy.\n\n\"Do you wish to know?\" Rhianna asked with a mysterious smile on her face as their eyes met.\n\nGard blinked slowly, surprise crossing his. \"You know the baby's sex already?\" It couldn't be possible. They were only just pregnant; the child was barely days old!\n\nRayne could feel Gard's excitement even though she was just as astounded that Annie knew what they were having so early. She met her mate's eyes and raised an eyebrow. She really didn't mind knowing the baby's sex if he wanted to.\n\nRhianna didn't answer his question but her smile did become wider.\n\n\"Put him out of his misery, Annie,\" Rayne laughed softly. \"I'll never hear the end of it if you don't. I'd really like to know if we're having a boy or a girl.\"\n\n\"Well, if you're both sure,\" Rhianna grinned. \"You're having a son.\"\n\nPride welled up inside Gard's chest, a strong, deep feeling of utter joy that his son was growing inside his mate. He had never dreamed he would find the one woman who would make his long days of lonely existence come to an end. Now he not only had his exquisite wildcat but she was also giving him a son to cherish. He had hoped for a little girl, one exactly like her mother but he figured they could work on that for their next child.\n\n\"A son,\" he breathed quietly, his voice thick with emotion. \"We could call him Tobias. I've always liked that name.\"\n\nRayne turned to look at him, her expression one of disagreement. \"Tobias? You want to name my son Tobias? I don't think so, vampire.\" She was lightly stroking her stomach, smiling even as she put her foot down. Her son was inside her, a perfect little boy who would be just like his father, only he'd have much better taste in names!\n\n\"What's wrong with Tobias?\" Gard growled as the others laughed at his disgruntled expression. \"It's a perfectly good name for a boy. I don't hear you coming out with anything.\"\n\n\"I'm just coming to terms with the fact you knocked me up so quickly,\" she bit back struggling to contain her laughter as his expression changed to one of complete outrage. Her mate actually spluttered as he tried to formulate words and she did burst out laughing then.\n\n\"If you can't come to an agreement on naming the child, I have the perfect solution for you,\" Rhianna suddenly said. Her voice was quiet yet they both turned to look at her. There was something in the tone that was quite hypnotic as if she was combination of both Annie and Anakatrine in that moment. \n\nRayne was immensely curious as to what her new sister considered the perfect name for her son. \"What would you suggest, Annie?\" \n\n\"Kothari.\"\n\nGard went so still at her side that for a moment Rayne was convinced that he'd stopped breathing. Their mate bond was completely silent as he stared at his sister with a stunned expression on his face. A trickle of unease went down her spine for a moment as the siblings looked so intently at each other.\n\n\"Is there some special significance to Kothari?\" she finally breathed out when Gard remained silent.\n\nRhianna's gaze moved from her brother and met hers. She smiled a beatific smile. \"I've always thought that sometimes tradition can be a wonderful thing,\" she sighed softly. \"Sometimes it's just perfect to name a son after his father.\"\n\nRayne frowned, taking her words in, turning slowly to look up at Gard who had a sheen of moisture in his eyes as he sat so quietly beside her. Rhianna's words finally penetrated her mind and understanding rocked through her.\n\n\"Your name is Kothari?\" The words tumbled out on a stunned breath. She had never considered her mate had any other name. He was...he was just Gard. Wasn't he?\"\n\nGard's gaze finally dropped to hers and a hint of amusement crossed his face as he looked down at her. \"Gard the Guardian?\" he said drolly. He was still stunned at hearing his birth name spoken once again after so many millennia of it never passing anyone's lips. He should have known Anakatrine would never forget it as everyone else had. He was just unprepared for how emotional it had made him feel hearing it once more.\n\n\"Kothari is my birth name. It's just been so long since I've heard it that I was a bit surprised hearing it after all these centuries.\" His shock easing, he smiled down at his mate. \"I was so puffed up with my own self importance of being the Guardian that I announced it continually when Anakatrine was being her most wilful.\"\n\nRhianna rolled her eyes and laughed. \"You'd better believe it. If I heard it once, I heard it a thousand times. He was always pontificating about how he was 'The Guardian'. He took such pride in his status that I started shortening it to Gard just to annoy him. Of course, when the Queen of Vampires began addressing someone in a certain manner, her loyal subjects followed suit. The nickname stuck and despite what he says, he preened every time he heard it.\"\n\nHer brother shot her a glare but his lips where tugging in a smile softening his expression. \"It was my badge of honour,\" he conceded. \n\nRayne was still shocked but she couldn't stop smiling too. \"Kothari,\" she whispered her hand against her stomach, her voice filled with awe. \"The perfect name.\" Her eyes met Gard's as she sought his approval.\n\nHis love for her shone so brightly, his hand moving to rest against hers as he leaned down to kiss her gently. \"The perfect name,\" he agreed. And it was. He was looking forward to his son carrying his name, to this new life with his feisty little wildcat. \n\n\"I wonder what Dayton and Freya will call their children,\" Rhianna sighed with a little smirk on her face as she looked at Rafe. \"I have a feeling their children will fall on the feminine side.\"\n\nHer brother grabbed a nearby cushion and threw it at her. \"That's it! Out now!\" he bellowed his face going red. \"Take your stupid oracle ways out of my house. Cursing me with miniature versions of that vampire is the meanest thing you've ever done, Rhianna Armand!\" Just the thought of more Freyas was enough to turn his hair silver, hell the little demons would probably come out with silver streaks to match their father.\n\nThe group collapsed into laughter, even the babies gurgling happily at the peeling sounds surrounding them and the indisputable warmth and love that radiated in the room.\n\nCaleb tossed the offending cushion back, catching Rafe square in the face with just a little too much force to be completely playful but not enough to be hurtful. He'd caught it before it had hit his mate and though he knew there was no malice in it throwing anything at his woman was just unacceptable.\n\nRafe grunted and shot him a very rude gesture with his middle finger even though he was chuckling loudly and Lacey slapped his arm in reproof.\n\n\"The boys are present!\" she huffed trying not to descend into a fit of giggles as the Alpha of the Armand-Hanlon pack started getting abused from all angles, his mate included.\n\n\"You're supposed to be on my side,\" he said slightly peevishly even as he pulled her forward for a long kiss.\n\n\"I quite like the idea of lots of little Freyas running about,\" she shot back, dissolving into laughter when his expression told her in no uncertain terms that she was going to pay for her lack of loyalty later.\n\nSmiling, Caleb rose and set Rhianna gently to the floor keeping her firmly ensconced on his left side so his body blocked her from any further flying cushions. \"That would be a suitable punishment for abusing my mate,\" he said smugly, his smile broadening when said mate slapped him lightly on the chest.\n\n\"Idiot,\" Rhianna laughed under her breath, squirming from his arms so she could hug Rafe and Lacey tightly, whispering her apology into her brother's ear. \n\nHe cradled her carefully against him, his hands gentle on her as they usually were. \"I'll forgive you that bombshell because you're just too damned hard to resist. And because your vampire has no concept of how to have a proper pillow fight,\" he laughed rubbing his cheek.\n\n\"Caleb!\" Rhianna groaned shooting him an exasperated look before rolling her eyes and sinking down beside the babies to give them hugs and kisses.\n\nHer vampire gave Rafe a sheepish smile before his gaze turned back to Rhianna, watching her with the little ones, fascinated by the sheer love that seemed to ooze from her every pore. He felt a stirring in the air, a crackle of energy which would be unnoticed by the Weres. \n\nHe felt Gard's eyes on him and turned briefly to look at his brother-in-law. \"She has bonded such with all the children,\" he told him privately. \"We both have. Just lightly enough that we will always be able to find them no matter where they are.\"\n\nThe sensation of magic slowly eased as the petite redhead kissed both boys on the forehead and returned back to her mate's side.\n\n\"I will do so too,\" Gard told them both on the communal path they could use to speak to each other. \"They are my pack now, mine to protect.\" His gaze focused on Rhianna turning his thoughts private for her alone.\n\n\"You said my time as The Guardian had ended, sister mine. It has only evolved into something different. I will keep our family safe.\"\n\n\"I know, my brother. You have always guarded my heart just as you said I have guarded yours. I can't tell you how happy I am that you have now found your own joy in the world, that you will now know a love so true that nothing can ever come between you.\"  \n\nRhianna moved to hug first Gard and then Rayne, shooting a quick stab of magic to the life growing inside her sister-in-law to make her bond with her nephew even before he was born into the world. She saw Rayne's eyes widen and sensed Gard's slow smile as he realised what she'd just done and also sensed Rayne's reaction to the energy used.\n\n\"Interesting,\" she mused to her brother. \"You should investigate that, Gard. Your mate can feel even the subtlest of magics being used. I shudder to think what else our beautiful little hybrids will surprise us with as they grow.\"\n\nCaleb retrieved his mate, aware there had been private communication with her brother but not concerned about it. He was slowly coming to adapt to the fact that he had to share his woman; that he had to let her fly free so she would always come home to him.\n\n\"Let's go home, sweet one,\" he whispered in her ear as she melted against him and gave him one of her many smiles that turned his heart inside out and made him forget all about breathing.\n\nThey said their goodbyes and headed outside, Rhianna pausing on the steps to look around the compound slowly. Caleb stopped at her side, following her gaze.\n\nTwo little brown and golden cubs were tearing around outside's Cedar's home, their parents watching carefully with slightly bemused expressions on their faces. Cedar looked up at Alexei and his arms came around her, a reassuring smile on his face as he held her close. He said something low under his breath and his mate giggled before they turned back to watch their daughters romp in the dirt in wolf form.\n\nLily and Kallum suddenly burst from their house, their annoyed father following them outside trying to keep a scowl on his face even as his lips twitched with amusement.\n\n\"Oh my!\" Loretta said with a startled squeak as she came to stand beside Andrei. Her children seemed to shift of the run, one moment human children, the next two little black wolves, Kallum being slightly larger than Lily despite being the younger.\n\nExcited yips filled the air as the Romanov children shifted for the first time, awkward and gangly for the first few moments as they adapted to four legs and then suddenly confident. They dived onto their cousins with glee, rolling in the dirt with them.\n\nLoretta looked a little pale but Andrei appeared to take the shifting in his stride. He glanced at his mate and then turned to his brother. \"Watch the kids for a couple of hours!\" It wasn't a request and he didn't wait for an answer, simply picking Loretta up and vanishing into the house with her.\n\nFurther away, Nors and Ashleigh were coming out of the community centre, Liam running ahead towards the cubs. \"Daddy, when will I be able to do that?\" he called as he ran, laughing when Dara accidentally knocked him over. Immediately his laughter turned to shrieks of glee as the four cubs started licking him all over.\n\n\"You can ask Rayne later,\" Nors called back, his arm around Ashleigh as she tensed slightly; worried the cubs would be too rough with her son. \"Hey Alexei, watch Liam for us for a couple of hours.\" Nors yelled.\n\nA loud growl sounded in the air and a very frustrated expression crossed the blond vampire's face. \"Do I look like a fuc...erm I mean a bleeding babysitter?\"\n\nCedar laughed as Nors quickly pulled his mate away in the opposite direction before Alexei could object further. \"No, love,\" she sighed softly. \"Your fellow Ancients just trust you with the lives of their most precious little children. Instead of railing at it you should view it for what it is.\" \n\nShe patted his tight ass lovingly as the children couldn't see her. \"And I'll make it up to you later, lover,\" she added with a sultry smile on her lips.\n\nAlexei groaned and kissed her soundly; remembering inquiring little minds were around before he became too lost in her sweet taste. \"Damned right you will, sweetheart.\"\n\nRhianna sighed again as she watched the interaction, other wolves bustling around the compound doing their own daily activities. Her gaze turned to Caleb who was watching her expressive face. She smiled.\n\n\"Interesting how they can shift into different colours,\" she remarked quietly referring to the cubs. \"More unknowns about just what their many capabilities will be.\" She wasn't worried about it; it was intriguing more than concerning.\n\n\"I'll feel easier once Demetri has contacted this Mackenzie person and the Praetorians are in place. I am surprised you don't know of him, love. I trust Demetri but it still feels a little strange that there is someone out there who sounds so powerful and yet you've never come across him before.\"\n\nCaleb shrugged and pulled her into a tight embrace. \"The most important thing is we both trust Demetri. He has often left my side over the centuries, gone his own way when the wanderlust took him. I'm sure he knows many others I have never met. But rest assured, sweet one, I will know all about Mackenzie before he is allowed anywhere near our family. Pietro too.\"\n\nRhianna laughed softly, gazing up at him with total adoration on her face. \"I had no doubt of that, my love. You will always protect what is mine.\"\n\n\"What is ours, my Annie,\" he corrected gently, bending his head to kiss her tenderly, savouring the sweetness that was her lips, drinking in the scent and taste of the woman that was his very heartbeat.\n\nHe heard more laughter within the compound, Jen and Aaron's voices adding to the background, their children complaining that they'd have to wait until they were teenagers before they could shift into wolf form for the first time. He broke their kiss and leaned his forehead against hers, sighing softly.\n\n\"As much as I love our family, I want you home with me so I can taste every inch of you until you beg me to stop. Come, woman. Your vampire needs you.\"\n\nSoft tinkling laughter filled the air, the sweetest sound in his universe, after the low throaty moans his mate issued when he pleasured her so lovingly.\n\n\"Yes, Caleb,\" Rhianna said meekly, laughter dancing in her eyes at the suspicious glint in his at her easy acquiescence.\n\n\"Come on, witch! Run with me.\"\n\nHand in hand they vanished into the trees, Rhianna's soft laughter still filling the air as they took off at breakneck speed, leaving the compound safe and secure behind them.\n\n***** Dayton could feel how tense Freya was as he tugged her downstairs towards the front door. She gave a whole new meaning to the term 'dragging your feet' and he would have smiled at her reluctance if he didn't feel the same way too. \n\nWhen Rafe had called them into his study to quickly apprise them of the situation and what he wanted from them, Dayton's heart had slammed hard into his chest. He was only just starting to feel comfortable around Aaron and Cedar after so long and now he had to face the rest of his family.",
        "He'd studiously avoided Connor since he'd arrived at the compound...well he hadn't actually had to make that much of an effort to avoid his eldest brother he had to admit to himself. He'd been a little tied up with his new mate and new responsibilities within the pack. It had been relatively simple to be somewhere else whenever Connor showed up at the main house.\n\nHis brother had appeared to sense his unwillingness to interact with him and had given him a wide berth too. Possibly Aaron or Cedar had said something to him, convincing him to stay away until Dayton was ready to face him.\n\nHis siblings so far had accepted him back into their lives as if he'd never been gone but to have to face his parents...to have to look into his mother's eyes and see the pain he'd caused her. It was suddenly too much for him and his steps faltered before he reached the door as he came to a stand still bringing Freya up short beside him.\n\nFreya turned to look up at her mate and saw complete panic on his face. Up until that moment she had been fighting her own inner demons, railing silently about being forced into the situation of having to meet her new in-laws and be 'nice' to them. \n\nThe thought was total anathema to her and she'd been struggling hard to do this for her mate even though deep down she was afraid that they wouldn't accept her into their family and he would be hurt by their rejection. She didn't care if they hated her personally all she cared about was how Dayton felt. \n\nNow she stared up into blue eyes so filled with fear her heart almost broke to see the expression on his strong face. No one had the right to make him doubt himself like this, she didn't care who it was. He had done what he'd needed to do to survive a loss of unimaginable proportions and that was all there was to it.\n\nStiffening her spine she gripped his hand tightly and shrugged off her own concerns about the upcoming meeting. \"I will protect you, Dayton. You do not stand alone. I won't allow anyone to hurt you ever again.\"\n\nHer fierce words and equally fierce expression startled him and he smoothed out his expression as a warm feeling flooded through him and he realised how pointless it was to hide from what had to be faced. \n\n\"I know that, honey,\" he sighed softly wrapping his arms around her and stealing a deep kiss to settle his nerves. \"I'm just being silly worrying about seeing the family again. I know they love me. Just as I know this isn't easy for you either.\" \n\nHe was amazed at how strong she was being about this meeting, having only argued for half an hour before she'd finally conceded to go. Nors had told him that when Freya didn't want to do something, she could rail for weeks on end before finally giving in. He'd been smugly impressed with himself that he'd managed to defeat her objections so quickly.\n\n\"I will adapt,\" she smiled against his lips, her sweet scent soothing him as only she could.\n\n\"Then there's no putting this off,\" he sighed again. \"Rafe doesn't think the Hanlon pack will come under attack but it is better being safe than sorry.\" He couldn't keep the slight unease out of his voice. Only Connor and Brody lived at the Hanlon compound but the rest of the family would be there today because he knew Connor would have called them and told them he would be coming.\n\nTaking a deep breath Dayton opened the door and stepped out of the Alpha's house. There were two Jeeps parked just outside. His eyes automatically went to his eldest brother who was leaning against the hood of the first Jeep, arms crossed nonchalantly as he chatted with Aaron who was standing just in front of him. Cedar was sitting beside him on the hood, smiling up at him as he talked.\n\nDayton's breath froze in his body as Connor's head turned slowly towards the open door, his pale blue eyes seeking and finding his unerringly. His eyes took in every minute detail of the ruggedly handsome man with shaggy blond hair and intimidating physique. This was the sibling he had known the longest, they had been born together, the first of the Alexander children.\n\nHe couldn't judge what his brother was thinking because his expression was closely guarded as his gaze flicked from Dayton to Freya who was holding his hand so tightly he knew he was going to bruise. Appreciation flared in Connor's eyes and a slow smile curved his lips.\n\n\"Well, now I understand why you were locked in your room all this time, Day,\" he finally drawled softly. \"Having a beauty like that hanging off a man's arm is more than enough reason to go AWOL. Kind of crushed it wasn't because you were shit scared about seeing me again, though.\" \n\nThere was more than a hint of teasing in his voice and Dayton felt some of the tension leaving his body. Connor was...well he was just Connor, usually laid back and friendly though quick to blow his temper when riled. That he was relaxed said a lot about how he felt about seeing his younger brother returned from his self-imposed exile.\n\nHe watched him push away from the Jeep and saunter over. When he got close enough he raised a meaty clenched fist and Freya stiffened at his side instantly expecting some form of attack.\n\nDayton couldn't stop his lips from curving into a smile at his mate's protectiveness even when it wasn't warranted. He squeezed her hand gently before releasing it and knocking his fist hard against Connor's. They had always greeted each other like that, ever since they were young boys. It was Connor's way of telling him that nothing had changed in his eyes.\n\nHis brother reached for him and pulled him into a tight bear hug, pounding his back hard. \"Good to have you back, Day.\" As always Connor kept words to the minimum when feeling emotional. His words were short but the emotion within them conveyed everything he wanted to say.\n\nHe pulled back and regarded Freya intently for a long moment and then presented her with his fist. She stared at him blankly for a second and then repeated what she'd witnessed her mate do. She banged fists with the blond wolf wondering if this was some weird wolf ritual she wasn't aware of.\n\nConnor winced loudly, shaking his fist in the air as the vampire almost pulverised his knuckles into dust. \"Hot damn!\" he muttered through clenched teeth. \"I've got to get me one of these female vamps. You got any single friends, darling?\"\n\nFreya stiffened first in mortification for hitting the wolf too hard judging from his pained expression and hoarse voice, then from confusion at the way the easy endearment flowed from his lips directed towards her. She was accepting of the way Dayton spoke to her because he was her mate but this man was a stranger to her.\n\nSwallowing down her initial reaction which was to hit the wolf again only harder this time, she carefully controlled her expression as she counted to ten to cool her temper. \"I don't have friends and even if I did I'd be surprised if any of them would be interested in a wolf.\"\n\nIf she'd thought her cool words would somehow crush the man before her it only brought a dazzling smile which was so unexpected she turned to look up at Dayton in confusion.\n\n\"Feisty as well as strong,\" Connor chuckled. \"You lucked out, little bro. Pity she doesn't have any friends. Though don't suppose that really matters now she's got us.\"\n\n\"Don't let Connor ruffle your feathers, Freya,\" Cedar called out from her perch on the car hood. \"He likes to think he's a lady killer when really he's a big teddy bear deep inside.\" \n\n\"Dial it down a notch, Con,\" Dayton said quietly, his arm keeping Freya firmly at his side to stop her from fleeing. Getting a blast of the Alexander clan so full on was maybe a step too far for his usually solitary mate. \n\nConnor instantly looked repentant, picking up on his brother's concern and taking a step back. He smiled gently. \"No offence meant, Freya. I'm just trying to say thank you for bring Day home to us. I didn't get hit much with the sensitivity stick when I was born and didn't mean to make you feel uncomfortable.\"\n\nHis words were so sincere, his expression so downcast, that she couldn't help relaxing against Dayton's side as she finally worked out that the big gruff male in front of her was trying to welcome her into his family in the same way he related to his brother. She was quite astounded that he felt she was so much a part of the Alexanders that he was willing to treat her on an equal footing as her mate. Maybe meeting the rest of them wouldn't be so bad after all, if they were all so ready to accept her as Connor was.\n\n\"None taken,\" she finally said, straightening up. \"I am still adapting to your pack ways but it's getting easier. Did I hurt your hand badly?\" She noticed he was still holding it rather gingerly at his side.\n\n\"Broke my knuckles.\" He grinned at her horrified expression. \"It's all cool, they're healing just fine. Will be good as new in another couple of minutes. You pack a mean punch.\" \n\nFreya's eyes swung to Dayton's to see what his reaction was to her breaking his brother's hand. He was grinning widely, pride shining in his eyes which totally confused the hell out of her. She had the distinct impression she would always be walking a tightrope of confusion around the Alexander family. Before she could apologise to Connor his phone went off and he groaned deeply.\n\n\"That will be Ma again or Willow. I swear they've been calling or texting every ten minutes for the last couple of hours.\" He put on a high pitch voice. \"Have you left yet?\" he mimicked before he answered the call.\n\n\"Willow, we're just leaving now,\" he grumbled. \"I was just saying hi to Freya and then we're heading out. We'll be there in an hour or so.\"\n\nHe paused and listened to his youngest sister for a moment and then grinned at Dayton. \"Nah, he hasn't dyed his silver. Looks older than me now but hell, he's always wanted to be the eldest and he'll do anything to achieve it. Now get off the phone so we can make tracks. And tell Ma not to call or text again. I'll be driving.\"\n\nHe hung up muttering \"Women!\" under his breath. \"You ready to hit the road, Day?\" His question was asked lightly but there was concern in his gaze as he looked at his brother. He knew Dayton was worried about facing the rest of the family. He'd done his best to ease him, had even let his vampire break his knuckles as a way to metaphorically 'break the ice'. He wondered if he'd done enough.\n\n\"No time like the present,\" Dayton said firmly, feeling a lot more relaxed because of his brother's easy acceptance of not only him but Freya. Connor was letting him know he had his back, just as Cedar and Aaron's presence to see him off was their way of showing him they were there to support him.\n\nHe tugged Freya towards the cars, releasing her long enough accept Cedar's hug. He wrapped his arms around her tightly, grateful for her love and support.\n\n\"The family's just excited to have Dayton home,\" Cedar said to Freya as she stepped out of her brother's arms. She didn't attempt to hug but her eyes were warm as she smiled at the vampire. \"We're a bit on the tactile side but don't be afraid to ask for some space if it makes you uncomfortable. No one will be offended.\"\n\n\"Ma might completely ignore that request,\" Aaron laughed as he slapped Dayton hard on the shoulder before grinning at Freya. \"Try and cut her some slack though. She's been missing her baby for a long time and a second mating is a truly amazing occurrence. She'll most likely want to hug a lot.\"\n\nFreya could feel panic start to build up inside her at the prospect of strangers touching her as if they had the right to do so. She just wasn't accustomed to the amount of tactile contact she envisioned happening. She looked to Dayton for help and saw his brows drawn down in concern.\n\nShe also saw longing in his gaze, as if he was suddenly desperate to be back in the warmth of his family after being so long apart from them. She could feel his emotions roiling from one end of the spectrum to the other as he tried to work out which one would take dominance.\n\nHe needed his family to finish his healing. This was his last hurdle and he needed her to be strong for him, to help him through it. She was his mate and now part of this large family who liked to smile and hug a lot. \n\nSo far she had been accepted by three of his siblings and from the way they spoke, the remainder of the Alexander clan were waiting to accept her too. If that meant she had to suffer tactile contact then she could cope with it, to help her wolf find true peace.\n\nShe gave Aaron a small smile, barely a lifting of the corner of her mouth. Despite his laughter she could see some concern in his eyes about how she would react to his other family members. She admired him for his caution. She had come to respect this brother of Dayton's having watched him for many years around the compound as he'd worked to build the pack into what it now was. He was a male of integrity, even she could see that.\n\n\"I will be gentle with your mother,\" she promised lightly. \"She sounds a lot like Ashleigh. She's very tactile too.\" Her tone was long-suffering but there was a faint trace of amusement in it.\n\nAaron smiled back at her, his concern melting and something like pride glowing in his eyes. \"We'll make a wolf out of you yet, Freya.\"\n\n\"I'd rather die first,\" she drawled softly before turning away to hide her amusement as he burst out laughing. Yes, she could do this for Dayton. The Alexanders weren't too bad...for wolves.\n\nConnor bid farewell to his bother and sister and jumped into the first Jeep just as his phone rang again. Freya heard his muttered curse as she climbed into the passenger seat of the second one.\n\n\"Ma, I told Willow to tell you not to call again! We're on our way...\"\n\nShe closed the door and turned to Dayton as he climbed in and started the engine. \"Your family are overpowering, wolf. I expect you to make this up to me, big time!\"\n\nSmoky heat danced in her mate's eyes as he leaned down and gave her a slow lingering kiss. \"How does me licking every inch of your delectable skin before I slide deep inside you and ride you hard until you scream my name in bliss sound?\"\n\n\"Dayton!\" Liquid heat immediately flooded her body at his husky words, images of the way he'd done just that the night before coming sharply to the fore. \"You are so going to pay for that, wolf,\" she growled pushing away and facing forward as he laughed and heading out of the compound after his brother.\n\nDayton couldn't help feeling happy as he headed towards the Hanlon compound. He was so damned proud of Freya and the way she was working hard to accept his family. He knew she was making this huge effort for him and he adored her for it. \n\nHis earlier disquiet about facing his parents and remaining siblings was now just a small bubble of unease rather than the full on panic it had been earlier. He was starting to feel confident that it wasn't going to be as bad as he'd imagined. Even if it was he had his vampire beside him and he could face anything as long as he had her at his side.\n\nHe stole glances at Freya as they drove in a companionable silence. She worried at her bottom lip from time to time and then she straightened her shoulders as if mentally talking to herself, convincing herself that she could do this. He knew she could, he had complete faith in her. \n\nOne day she would have that same belief in herself and the Alexander family were going to teach her that in the only way they knew how. They were going to bully her into submission with all the love they had inside them.\n\nHe was so lost in his internal musing that they were pulling into the Hanlon compound before he realised they'd covered the distance between the two packs. There was such a feeling of familiarity about being back. This was where he had lived with Faith, where he had grown up with his family and friends.\n\nThere was a sense of coming home to a certain degree because it had been such an integral part of his life but it didn't feel like home any more, not like the Armand-Hanlon pack did.\n\nConnor pulled up outside the Alpha's house and Dayton came to a stop behind him. He'd parked level with a beautiful bronze statue of a wolf reaching for the moon and a sense of loss quickly flooded through him. He knew this was Brody's work, recognised the love and attention to detail of his brother's technique. He also knew this was the memorial that had been raised for the pack members lost all those years ago when the vampires had attacked.\n\nSilently he climbed out of the Jeep, barely aware of Freya automatically coming to his side as he stared at the wolf with its head raised to the sky. This was where David had died, where a whole family, bar one fragile young girl, had perished on a night so long ago when he had been continents away. This was where he had lost his second family, when he had been so lost himself, incapable of mourning what had once been so precious to him.\n\nHis hand shook as he reached out and touched the wolf, silent tears falling down his face as he connected with the bronze. He bowed his head and closed his eyes, grief shuddering through his body. \"Forgive me.\"\n\n\"There is nothing to forgive,\" Jared Hanlon said quietly coming to stand on the other side of the man he had fought so hard to save half a century before. \"Your presence here would not have changed a single thing, Dayton. They gave their lives to protect the pack and they did it with honour and bravery. Not one of them would ever want you to blame yourself for something that was out of your control.\"\n\nDayton let the Alpha's word bring him some level of comfort but he knew that it would take some time to fully believe him. He wiped at his tears as he turned to face the man he held so much respect for. He met blue eyes that were a shade darker than his own. They were full of respect and relief and he felt a sense of closure wash over him as he regarded his old Alpha. This man had done so much for him over his life that he would never be able to fully repay him.\n\n\"Thank you, Jared.\"\n\nJared smiled widely reaching out to give him a huge bear hug and pound his back hard. \"It's so good to have you back, Dayton. I could string Rafe up for stealing you from me but something tells me you fit better there than you would here now.\"\n\nHe glanced at Freya and gave her a nod. He was used to the vampire being standoffish with him so didn't expect much from her by way of greeting. She tended to be rather curt when they met at the other compound. Still, he smiled at her because she was the godsend that had come along and brought Dayton back to them. She would always have his respect and gratitude for that.\n\n\"Welcome to the Hanlon compound, Freya. I believe this is your first visit here. You have free passage to come and go as you please and our gratitude for sticking around for a few days just in case we have any unwelcome visitors.\"\n\nFreya slipped into Dayton's arms as the Alpha realised him from his bear hug. She had been at a loss at what to do as her mate had shed tears for those he had lost from this pack. She had hesitated to hold him in case it was the wrong thing to do with so many wolves in her peripheral vision. Jared Hanlon had known what to do, what to say to ease her mate's hurt and she was thankful for that.\n\nShe nodded her head in his direction. \"Thank you, Jared. I will try not to abuse your hospitality too much. No vampire will harm a Were in this compound while I am here.\" \n\nHer words came out sounding slightly stiff and formal but the look of outright shock which crossed the Alpha's face was instantly gratifying. Freya's lips quirked slightly as she took in his stunned expression at her civility. Maybe being 'nice' wasn't so bad after all. She could have just as much fun keeping the wolves on their toes by being reasonable than she could by snarling at them.\n\nA light pat on her backside had her attention turning to her mate who had raised an eyebrow in her direction.",
        "\"Play nice, vampire,\" he growled inside her head.\n\nShe gave him a mock innocent look as her smile broadened slightly. Dayton's earlier grief was receding to be replaced by his playful side as his emotions dialled back down into something resembling normal. If she could keep distracting him by keeping him wondering what she was going to do next, then this visit would be a lot easier for both of them.\n\nA stunning dark haired woman had appeared at Jared's side and Freya turned back to face Millicent Cooper, Jared's mate. She'd only seen the other woman on one occasion in the past as she tended to stay close to the Hanlon Compound with her children when not in the city with Jared.\n\n\"This is my mate, Millie,\" Jared introduced her. \"Honey, this is Dayton and I think you've met Freya once before?\"\n\n\"I have.\" Millie smiled in Freya's direction. \"It's nice to see you again.\"\n\nShe turned stunning cobalt eyes on Dayton and her smile beamed even wider. \"I'm so pleased to finally meet you. You are both welcome here anytime. Your mother and sister have been driving us insane the last few hours. Why don't you head over to your old place and say hello?\"\n\nShe frowned slightly as she looked around at the gathering of nosey wolves who were watching the homecoming of one they'd thought lost for so long. \"I'm surprised they weren't here to greet you,\" she mused.\n\n\"I warned them to give Day some time to meet with the Alphas before they descended upon him,\" Connor admitted. He had stood silently watching his brother's homecoming with a lump in his throat. He was still stunned that Dayton had returned to them and was diving into his Beta duties as a way to cope with it all.\n\n\"You gave your mother a Beta command?\" Jared laughed loudly. \"You are so going to pay for that, Connor Alexander.\"\n\nConnor flushed red and stared down at his feet. \"She wouldn't stop phoning me,\" he muttered in his defence. His Ma was going to have his hide whether or not he was Jared's number two. It was embarrassing to admit that it didn't matter how big he got or how high in the pack he ranked, his mother would still singe his ears if she felt her little boy had done wrong.\n\nDayton knocked his knuckles against his brother's shoulder. \"Don't worry Con; she'll be so overjoyed to have me home she'll probably let this one slide.\"\n\nHis brother's hopeful expression had them all laughing with the exception of Freya who was relaxed enough but still a little overawed with the easy way the wolves teased each other while completely ignoring the hierarchy of the pack. It was just so different to the vampire hierarchy it was hard to comprehend at times.\n\n\"Time to meet the rest of the clan,\" Dayton smiled down at her, hugging her tightly and pulling her through the assembled wolves towards a two storey wooden cabin at the far end of the compound. \n\nIt was clear the building was set quite deep into its surroundings. As the Alexander family were so numerous it only stood to reason they would have required a place of their own with enough rooms to raise six boisterous children. Freya felt her heart flip over as they neared the building, only the sharp intake of breath from Dayton forcing her to relax. She felt excitement as well as trepidation running through their mate bond so she did her best to soothe him.\n\nThe door suddenly flew open and a blonde woman with shoulder length curls flew down the three steps and launched herself into Dayton's arms. He'd barely enough time to release Freya before he caught the other woman and braced himself so he didn't fall backwards.\n\n\"You are in so much trouble,\" the woman ground out glaring over her shoulder at Connor who'd brought up the rear. \"Ma is spitting nails, Con. You're going to hear about this for the next decade at least!\"\n\nShe gave him a gloating smile and then started kissing Dayton's face with much enthusiasm. \"God, I've missed you so much, Day! I can't believe you haven't come over sooner. Ma can't make up her mind whether to be pissed at you or to cuddle you to death. She's been a complete nightmare! And why didn't you dye your grey bit? Do you want to look old? And how did you find a second mate? Is this going to be a new family tradition? Are all us Alexanders going to have to mate with vampires? Okay, I know Jen's a wolf but first Cedar and now you? I don't know if I want to have a vampire mate!\"\n\n\"Willow! Slow down, girl,\" Dayton laughed. His sister had managed to rattle off her litany with barely a breath between all her questions. Her natural exuberance was just as he remembered and he found himself immersing himself in her, luxuriating in all that was familiar.\n\n\"Willow, let your brother go before your mother has heart failure,\" a deep male voice boomed from the doorway.\n\nDayton reluctantly released his little sister as he turned his gaze to meet his father's. The happy smile gracing the older man's face was more than he could have hoped for. His greedy gaze took note of the wisps of new silver threading through his blond hair, the small lines of strain that had started to show on his father's still youthful face.\n\nThere were those small signs of aging but apart from that Iain Alexander was still the strong, dominant male that Dayton remembered from his youth. His father had always been firm but fair with his children. He'd instilled in them all a deep sense of pack and loyalty and he had always been quick to laugh with his offspring.\n\nHis eyes flitted to the tall blonde woman framed in the doorway at his father's side and he swallowed hard feeling so overcome with emotion as he met his mother's gaze. \n\nPale blue eyes shone with tears as Charlotte Alexander stared at her second son, quickly cataloguing the changes which had occurred in her boy since the last time she'd seen him.\n\nHe looked older, a bit leaner than she'd like but the awful lost expression was gone from his deep blue eyes. He looked uncertain, afraid to approach and that caused the tears she'd been holding in to overflow.\n\n\"Dayton Alexander, I swear you'll be the death of me one of these days,\" she bit out gruffly. \"I can't believe you doubted for one moment that we wouldn't welcome you home. I thought I'd taught you better than that!\" Her words were haranguing but her voice trembled with emotion.\n\nDayton swallowed hard again, the lump in his throat wedging tighter as he hurried forward to wrap his arms around her, hanging on so tightly he was afraid he might accidentally hurt her. He felt his mother tremble against him and shame washed through his body.\n\n\"You taught me just right, Ma,\" he whispered fighting hard not to cry at the pain he'd subjected her to. \"I'm so sorry. I didn't mean to hurt you.\"\n\nCharlotte stroked her hands through Dayton's hair, drinking in his scent, holding her son close as if her life depended on it. She'd given up all hope of ever having her boy back. She'd been forced to content herself with knowing that at least he lived where others had died when losing their mates.\n\nNow her baby was back and it didn't matter a damn that he was a grown man and a Beta. He would always be her boy no matter what. \"I know, son,\" she whispered against his neck. \"We all know that. Losing Faith was just unbearable for you. We understood that. We may have missed you while you were gone, Day, but you needed that space. I'm so goddamned proud of you for surviving, for holding on long enough that you could come back to us.\"\n\nIain rested his hand on his son's shoulder, his free hand running soothingly down his mate's back. \"We both are, Dayton,\" he said quietly. \"If it had taken you another fifty years to come home we'd still be just as proud that you had the strength to come through something as terrible as losing Faith.\"\n\nDayton stood in his parents' embrace, feeling the last of his regret die away under their unconditional love and support. He had lost fifty three years of his life with his family but he knew he had the future to look forward to and all because of the exquisite vampire who had brought him back to life.\n\n\"I want you to meet Freya,\" he said quietly, turning his head to look over his shoulder. His mate was standing with her serene mask in place, watching his homecoming silently. He had no idea what she was thinking or feeling because their mate bond was so still and calm, echoing her expression.\n\nHis mother slipped out of his embrace and walked down the steps to come to stand before Freya. \"I'm Charlotte,\" she said quietly, her voice shaking slightly. \"I really want to throw my arms around you, daughter, and welcome you into our family but I suspect you would find that a little overwhelming. Instead I will just say that we are honoured to have you join us. And I will never be able to repay you for saving my son's life and bringing such joy to him once more.\"\n\nFreya was almost eye level with Dayton's mother she was so tall. The wolf had such a regal bearing to her, her face so beautiful framed by wispy blonde hair like most of the Alexander family. She had been concerned when they had welcomed Dayton home. The emotion in their voices when they spoke of Faith made it plain they had loved her very much. She had suddenly felt apprehensive that they would look at her and find her lacking somehow.\n\nBut Charlotte's eyes were so warm, her face still streaked with happy tears at having her son back. Her words held such emotion, sincerity ringing in every one of them. \n\nShe had called her daughter. It had been so long since Freya had had a mother, thousand of years since someone had claimed her as their child. She was stunned to find herself yearning for that once again now that it was being offered by the woman before her.\n\n\"Tactile contact is a new experience for me,\" she conceded quietly, \"but one I am slowly becoming accustomed to. I would be honoured to accept an embrace from my mate's mother.\"\n\n\"You are so going to regret that,\" Willow laughed loudly a second before Charlotte threw her arms enthusiastically around Freya.\n\nThe vampire stiffened at the swiftness of the hug and then slowly relaxed allowing the wolf to have her way. She gave her a tentative squeeze back remembering she'd accidentally broken Connor's hand not so long ago. Instead of feeling uncomfortable, it felt quite soothing to be embraced by Charlotte.\n\nFreya caught Dayton's eyes over his mother's shoulder and she was rocked by the utter joy she witnessed on his face. Becoming part of his family meant so much to him. He already looked so much happier, so much more carefree now that he was with his family. She hummed with pleasure that this small thing she did was enough to make him happy. After all he had given her, it wasn't so hard for her to bend and accept his family into her life.\n\nShe tightened her hold on Charlotte to reinforce her acceptance of the woman and then slowly released her gazing warily at the others. Where they all going to want to hug her too now?\n\nIain laughed his arm still loosely around Dayton's shoulder. \"Don't worry, we'll ease you in slowly, Freya,\" he smiled. \"Welcome to the family. We're lucky to have you. Oh, and I'm Iain by the way.\"\n\n\"But you can just call them Ma and Da like we do,\" Willow added.\n\n\"Willow!\" Dayton growled softly worried about just how much his mate could take in the one go. The Alexanders were pretty full on with their openness. It wasn't a bad thing, but it was probably too much for Freya.\n\n\"What?\" she growled back. \"I'm just trying to help Freya feel like part of the family. You're all going on about Faith without a thought to how that might make Freya feel. I only wanted her to know she's just as special to us as Faith was, even if we haven't really had a chance to get to know her yet.\"\n\nDayton softened his tone walking down and gathering his sister close. \"You're intentions are good but don't get carried away,\" he sighed. \"Freya needs time to learn how to cope with all of us and she knows just how much I love her. She is not threatened by memories of Faith, not mine or our family's.\"\n\nHe was so confident when he spoke that Freya felt the last of her worries about joining this family melt away. Dayton loved her and admitted it freely for everyone to hear. Yes, his family had memories of his first mate which they cherished but they were welcoming her to make new memories with them. And Willow had defended her even though she didn't even know her. That was quite staggering. She had never felt so accepted before by total strangers.\n\n\"I don't want to cause any family discord,\" she finally said causing Charlotte to laugh. \n\n\"This isn't family discord, darling,\" Connor drawled. \"This is typical Alexander family life.\"\n\n\"Sorry I'm late!\" another hulking blond wolf called drawing Freya's attention as he hurried up to them. It was easy to see he was an Alexander. He had the same gorgeous good looks, though his face had a slightly more serious edge to it, as if he was a deep thinker despite the obvious happiness glowing in his cerulean blue eyes.\n\nIn his right hand he had a carefully wrapped box and with the other he grabbed Dayton around the neck and planted a kiss on his head. \"Good to have you home, big bro,\" he said solemnly. He smiled at Freya. \"I'm Brody.\"\n\nDayton shrugged off his hand and gave him a mock glare rubbing at his hair as he did so. \"I can't believe you kissed me! That is just so wrong, Brody. I thought you would have grown out of that bad habit after all these years.\"\n\nIt was a long standing joke between them. His brother had always kissed the top of his head since he was a little, knowing it irritated Dayton so much. Brody just grinned unabashed.\n\n\"Just don't knock knuckles with the vampire, Brody. She broke my hand when I did it.\" Connor called out and Freya felt herself start to flush scarlet, waiting for some form of condemnation to come from the family surrounding her.\n\nCharlotte clipped the back of Connor's head gently but hard enough to make him grumble \"Ouch!\"\n\n\"Good for Freya,\" she laughed. \"About time someone put him in his place. You and I have a conversation coming up in the near future, my boy. Ordering your mother around!\"\n\nThey all laughed at the irritated glare on Connor's face, Brody smiling reassuringly at Freya. \"I'm the nice brother, just so you know,\" he grinned. His expression turned serious as his gaze swept over Dayton for a long moment and then turned back to her. \n\n\"I was late because I was making a present for you,\" he said quietly. \"It's for both of you, kind of like a mating present but I want to give it to you, Freya. When we learned Dayton was coming back to us we all got together and tried to think of something to gift to you, for bringing him home. We came up with this and I didn't have a lot of time but I worked day and night on it so it would be ready for when you came to visit. I hope you like it.\" He held out the gift wrapped box to her.\n\nFreya stared at the box in complete shock, her heart starting to thump hard in her chest and a lump suddenly lodging deep in her throat. They were giving her a gift? She couldn't remember the last time anyone had gone out of their way to buy something for her, let alone to make something with their own hands. \n\nShe didn't know what to do, what to say. She was suddenly terrified that she was going to disgrace herself and shame Dayton somehow by not acting appropriately for the situation.\n\n\"Take it, honey,\" Dayton smiled gently, his hand touching her back with soothing little strokes. He didn't know what was in the box but he knew it was a sculpture of some kind because that was where Brody's talents lay. He had a lump in his throat and he could feel his vampire struggling to contain her own emotions.\n\nTentatively Freya reached for the box, slowly unwrapping the dark blue shiny paper. She lifted the lid and peered inside, a startled gasp escaping her involuntarily. Her hand almost trembled as she reached in and pulled out the pure silver figurine.\n\nIt wasn't large, it could fit in the palm of her hand, but it was the most exquisite thing she had ever seen. The attention to detail was meticulous, the ethereal woman seated on a small platform, a large wolf curled around her with its head resting in her lap. It immediately made her think of her run with Dayton, sitting on the rock as he protected her in wolf form.\n\n\"It's beautiful,\" she finally breathed, emotion making her voice husky as she fought to contain it. Her gaze rose to Brody to see him beaming with pleasure and then she became aware of the utter silence around her as she turned to look at the rest of the Alexander family who were smiling their welcome too.\n\n\"Thank you.\"\n\nDayton's arms wrapped around her giving her strength as she struggled with everything. He was as touched as she was, working on his own feelings even as his protective instincts kicked in. \"Da, give us a moment. This is all still so new to her.\"\n\nHis father nodded and began hustling the family into the house. Willow was chattering away, teasing Connor about the roasting he was going to get from their mother while Iain was beaming down at his mate, joy exuding from them both. Brody was the last to enter after laying a hand on Dayton's shoulder and giving it a squeeze.\n\n\"I know it's overwhelming, honey. I'm so proud of you,\" Dayton whispered in Freya's ear as he held back slightly and dropped a kiss on the side of her neck. She moaned softly and leaned into his touch, luxuriating in the one pair of arms she didn't object to having around her. \n\nShe swallowed hard, found her composure and shot him a mock irritated glare. \"If I have to call your parents Ma and Da I swear I will beat you senseless,\" she laughed softly. \n\nHe knew she wasn't serious by the way she melted against him and the way she cradled the figurine so carefully between their bodies.\n\n\"Only if you want to, my love,\" he breathed capturing her lips and kissing her soundly, not caring who may be watching and there were a fair few wolves still hanging around to ogle the miracle of a wolf finding a second mate.\n\nFreya surrendered herself to his kiss. Dayton's love made her feel free, his kisses set her on fire, and his family were probably going to drive her insane. But she wouldn't change anything for the world. She had finally found where she belonged and it was with an outrageously sexy wolf and his exuberant, loving family. \n\nOne year later...\n\nDayton woke up reaching out for his mate and finding the bed empty. It was the dead of night, total darkness surrounding him but his wolf vision enabled him to easily discern the room and the basinet beside the bed. He knew it was empty and his heart automatically turned over with fear as he rose quickly and grabbed his black silk robe.\n\nHe knew it was silly to be frightened but he'd never dreamt someone could become so precious to him in so short a space of time. He silently padded from the room on bare feet, seeking out his woman and his child. Freya would never allow any harm to come to their daughter. His fear was unnecessary but it wouldn't leave him until he found them and satisfied himself they were safe.\n\nHe could hear the quiet murmur of Freya's voice from outside and he frowned slightly as he headed to the open door. She'd taken the baby outside? They were at their retreat not in the heart of the pack. So what if there were probably about six Praetorians less than a mile away and discreet camera surveillance blanketing the area. It didn't mean they could be complacent, take unnecessary risks.\n\nHe would be having words with his vampire about this. He would make it abundantly clear that their daughter was not to be placed in jeopardy in any way. He could feel a low growl starting to reverberate in his chest and he pushed it down as he tried to contain his anxiety.\n\nThe harsh words on his lips melted away as he stopped in the doorway and stared at his mate. She was sitting on the porch in her deep green robe, their child balanced safely along her outstretched arms which rested on her bent knees. Her hands supported the baby's head gently, her voice soft as it whispered over the babe.",
        "Freya's position reminded him of a time so long ago, when he'd had no clue she'd belonged to him but had been compelled to save her. It wasn't that memory which halted his angry words; it was the expression on her face as she gazed down at their child.\n\nThe sheer wonder, the total adoration he witnessed on her face made his heart skip a beat and a wealth of love bubble up inside him. She had come a long way in the last year, was almost unrecognisable to the woman he'd first met. \n\nShe would always be Freya, would always have her moments when she struggled to contain her more feral instincts. But she was adapting, integrating with the pack and motherhood was coming easy to her despite her initial fear of failing.\n\nDayton rested against the doorframe watching his family in the stillness of the night. He stood as silently as possible listening to Freya talk to their daughter.\n\n\"Do you feel the breeze, little one?\" she whispered softly. \"Can you scent the night air and see the sparkling stars? This is your world now, your home where you will always be safe from harm.\"\n\nShe leaned forward and pressed a gentle kiss on the baby's forehead; her smile beatific as a little hand grabbed a lock of multi-coloured hair and held on. \"You have so many guardians, so many protectors who will keep you safe, my daughter. I would die for you in a heartbeat as would your father. Your Uncle Nors will slay a thousand enemies to protect you; your pack will stand at your side through anything.\"\n\nShe laughed softly as the baby gurgled up at her and tugged at her hair. \"Your grandmother will hug you a lot,\" she added in a slightly disgruntled tone. \"You will need to endure that for your father's sake. It makes him happy and when he's happy we are happy.\"\n\nShe sighed and kissed her again, changing her hold to cradle the babe in her arms. \"You have cousins just like you. They will protect you because you're the youngest. They will most likely underestimate you, daughter mine, but we both know you will be strong and resilient. You will need to be especially protective of your cousin Liam. He has a gentle soul, is so empathic that I fear for him sometimes. You have a blood bond with him. You will keep him safe.\"\n\nA slow smile crossed Freya's face as she stroked her daughter's cheek gently. \"You father will be overprotective to a fault. You will need to forgive him that, it is a wolf thing. He won't be able to help himself.\"\n\nA soft laugh rumbled from Dayton's chest as he pushed off the doorframe and walked the handful of steps to sit down beside them. His big hand gently brushed his daughter's head. \"You've known I was there the whole time, haven't you?\"\n\nFreya smiled and leaned against him as his arm wrapped around them. \"I knew the instant you woke up just as I know that to the east of us there are three vampires and an additional three to the west. There's two behind the house and one about a mile directly ahead of us. I think that's a bit of overkill personally. I am slightly insulted the Praetorians don't believe we can protect our own child adequately.\"\n\nHe laughed and kissed the top of her head, hearing the subtle rebuke in her tone even as her love washed over him through their mating bond. Of course she'd known exactly who was where and how safe it was to introduce their daughter to the forest and the night.\n\n\"Your mother is right, Elina. Your father does suffer from over protectiveness. An annoying trait but at least he isn't mapping your entire life out for you before you are even a month old.\" His tone was light and teasing but he still earned a glare from his mate.\n\nShe snorted in irritation. \"You have witnessed the lunacy of my fellow male Ancients. They treat their sons as males and their daughters as fragile, breakable things. I will not allow that for my daughter. She will know her own worth and be confident in her abilities.\"\n\n\"I would never dream of treating my only child as the centre of my universe, sweet love,\" he teased her gently. \n\nHe understood the fierceness behind her words. Andrei and to a lesser extent Alexei were treating their female offspring as being fragile. It was a mistake and he envisioned the trouble it would cause in the future as they grew up. Freya had been most vocal about it and had had numerous arguments with them over it. \n\nAndrei had been refusing to speak to her for nearly three months now after she'd called him an 'insecure, snivelling excuse for a vampire who was so scared of his own shadow he was a disgrace to their nation.' Or something along those lines, he couldn't remember the exact phrasing.\n\nIt had been a tense moment requiring Rafe to step between them when it looked like they were about to fight it out. He'd diffused the situation and warned Freya to keep her personal views to herself. Thankfully for once his mate had heeded their Alpha and backed down. Discovering she was pregnant had distracted her enough that she'd decided to ignore the other Ancient from that point onwards.\n\n\"Have you finished reassuring our daughter, vampire?\" he asked after a short silence. \"The air is growing cooler and she's almost asleep again. Come back to bed, love. We promised Rafe we would return to the pack before Elina's first month had passed. It's time to go home.\"\n\nFreya sighed and rose gracefully. She had desired the first month of her child's life away from the pack, to be alone with Dayton and their daughter at the retreat. Pack life was easier but she'd been worried that she might not be a good mother and hadn't wanted an audience if she'd failed at it spectacularly.\n\nLoving Elina had turned out to be as natural as loving her mate. She was confident she could hold her head up high when they returned to the pack, that she could be a good mother as well as a good pack Beta. Her Alpha hadn't wanted them to be outside the pack's main protection but he'd acceded to her request. It was her turn to prove his trust in her.\n\nShe smiled up at Dayton and passed him their daughter to carry inside. She followed him but hesitated as she closed the door, staring deeply into the forest. \n\nA year ago she had first felt like she truly belonged, that she had found her way home. But it was this moment, as she prepared to join her mate in their bed, her child lying safe in her basinet beside them, which truly completed her sense of belonging. She was finally home.\n\nThe End"
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "hybrids",
        "paranormal romance",
        "mating"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-long-walk-home-ch-20"
}