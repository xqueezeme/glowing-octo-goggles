{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 08",
    "pages": [
        "Okay, seems like a good time to state this again:\n\nFor those new to this story, be aware that the premise of this series is one of sexual exploration where departures from traditional monogamy are treated with openness and honesty by all characters. If you don't believe the premise is possible, this story is not for you. Please. Don't read this. I don't want to waste your time or anger you over the behavior of fictional characters. \n\nFor those who are enjoying it and have taken the time to share, thank you. I'm continuing to try and incorporate plot lines and scenarios that you have suggested wherever possible.\n\nStandard disclaimer\u2014this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nTim leaned back against the kitchen counter, eyes closed and beer in hand. Gwen knew from long years of experience that his pose was one of exhaustion mixed with deep thought. She panicked at the idea that perhaps her dalliance that afternoon was the cause of his mental gyrations.\n\n\"Everything alright, dear?\" \n\nHer husband opened her eyes and smiled through his fatigue. \"Yeah. Walt announced his retirement today.\" \n\n\"Oh...Oh! When?\"\n\n\"Two weeks. He and Norma are getting' in the RV, heading out to bother their kids for a while, then traveling the NASCAR circuit.\" \n\n\"Well, he kept saying he was going to.\"\n\n\"He did. But being without Cliff these past few days has made it very clear we'll need to replace him pretty quick.\"\n\n\"Isn't Andrew almost ready to take his exams for his Journeyman's license?\"\n\n\"Yup...but even if he took and passed the exam tomorrow, without his Master's I license we'd have to send him out on the simpler stuff. And doing that is going to make scheduling a major pain in the ass.\"\n\n\"So, what are you going to do?\"\n\n\"You know Matt MacKinnon's hanging it up, right?\"\n\nGwen knew. Matt was a plumber in town whose work Tim and the others had been called out to fix more than a few times over the past few years. \n\n\"He's selling all his tools and equipment, at least the stuff that isn't broken or worn out, to Crockett Brothers in Bainbridge. He's got a young guy working for him that wanted to buy the business but didn't have the money. The kid's a good plumber, has his Master's I and really knows his stuff. He looks like he's still in High School\u2014Matt says his woman customers don't know whether to ogle him or sit him down for milk and cookies. Sharp guy. If he passes your test, I'd like to hire him.\"\n\nGwen smiled. Her \"test\" consisted of inviting the prospective employee over for dinner and observing his manners. At some point during the evening, Gwen would nod to her husband, and he was free to make the job offer. She had never said no to one of Tim's prospects, but some of her nods had come late in the evening. \"If you think he's a good fit, I'm sure he'll be fine. Just hire him.\"\n\n\"Oh, no. not without your stamp of approval.\" Tim smiled, took a swig of beer, and closed his eyes again. \"I've also been thinking that we keep getting busier, and we need to get out ahead of it. What do you think about putting an extra truck on and putting Andrew in that once he passes his exams? I can give him a kick in the ass to get it done.\" \n\n\"Expand the business?\" Gwen's conservative business mind quickly began calculating the risks in such a move, and what the chances were it might prove profitable.\n\n\"Yeah. We're incredibly busy, you see it better than anybody. Having a little more size might allow us to bid on some of the larger construction jobs, too. So what does my chief financial officer think? Do we have the cash to get bigger?\"\n\n\"Maybe,\" she allowed. \"The bank accounts aren't too badly off at the moment...\"\n\n\"We don't have to decide tonight,\" Tim said with a smile. \"At least on the expansion. I would like to invite Eric to dinner next week, though. Sooner we fill Walt's spot the better.\" \n\n\"Is Tuesday night soon enough?\" \n\n\"Yeah, that'll be fine. I'll see if he can make it. Matt already knows I want to hire him...he's fine with him starting whenever\u2014he's barely got enough work for himself, much less Eric.\" \n\nTim put his empty bottle on the counter and straightened. \"But tonight, a shower, then bed. I'm going to go back into town first thing tomorrow morning and finish up a couple of jobs.\" \n\n\"You need a break,\" Gwen admonished the retreating figure. \"You're working too hard.\"\n\nSimple stuff tomorrow,\" Tim called out as he stripped off his shirt. \"Won't be much. Just better to get it out of the way so we don't get any further behind.\" \n\nGwen picked up the discarded clothes and put them in the proper baskets as her husband shambled into the shower stall. She waited as he soaked, leaning against the vanity counter, arms folded, lost in in her own thoughts.\n\nThe water stopped and a towel was dragged over the top of the translucent door. Tim was surprised to see her standing there as he stepped out. \"Oh\u2014hey there. Are you waiting for the shower? You could have joined me.\"\n\n\"No, I'll take one in the morning...there's something I wanted to tell you, before things got too busy.\"\n\n\"Yesss?\" His eyes showed both fatigue and good humor.\n\n\"Well, Natalie came over to ride today, and I, uhh, we...well, she uhh, gave me a massage after, and umm, things got a little out of hand after that.\" \n\nSome of the fatigue was replaced by interest. \"Really? Like how?\"\n\n\"Like, you know...\" Gwen averted her eyes in embarrassment, afraid of his reaction. Her focus shifted to his waist, surprised to see his member beginning to stir, rising with each heartbeat. \n\n\"Like what you two did last time?\"\n\nGwen nodded, cheeks burning. \"More than that.\" \n\n\"I see. So, I guess you've sworn off men now, gonna move in with her and open an antiques store on Route 90?\" \n\nGwen's eyes opened wide with fear and snapped back to his only to find a stupid grin on his face. She was momentarily angry that he was taking the whole thing so lightly, then relieved. Maybe he wasn't upset after all. His penis certainly didn't seem to be. \n\n\"No, how can you say that!\" she wailed as tears welled. \"I love you!\"\n\nTim realized he had gone too far and reached out to hug her. \"Hey, sorry, sorry...I should have known this was a big thing for you.\" \n\nGwen sniffled on his shoulder. \"You aren't mad?\"\n\n\"Nope. Glad you had some fun. You did have fun, right?\"\n\n\"Fun makes it sound like we went to the beach. It was nice,\" she forced herself to admit over the Lady's protests, \"but I still love you.\"\n\n\"All of me?\" Tim took a step back as his eyes shifted meaningfully to his waist.\n\n\"Of course!\" \n\nTim laughed. \"So, show me.\"\n\n\"Now? I know you're tired, and you want to get up early...\"\n\n\"If you'd rather not, I understand...\" \n\n\"No! If you're not too tired after the week you've had, then I'm certainly not. Come on\u2014let's go into the bedroom so you can get off your feet.\"\n\nTim smiled. \"Maybe in a bit. Might be nice if you gave me a little kiss first...\" His eyes again glanced down to his midsection. Gwen didn't miss the hint and sank to her knees, her husband's bobbing erection now at eye level. She gently pressed her lips to the moist skin of his pink head and ran her tongue over the groove. The cock's owner sighed in approval. Gwen delicately took his drawn up testicles in one hand and the shaft above them with the other, lightly stroking it before wrapping her lips around the bulbous end as her husband's hands gently took her head and guided her movements. Her fingers extended from where they cradled his balls and caressed the skin behind them, stopping just short of the cleft of his cheeks. Tim began to drive himself through the fingers wrapped around his cock and into her welcoming mouth. Gwen quickly found the proper rhythm to keep from being choked by her husband's thick tool.\n\nThe thrusting abruptly stopped. \"Stand up. Turn around.\" Gwen did as she was told, only able to give her husband the briefest of puzzled looks before her shoulders were firmly grasped and she was spun to face the vanity. Strong hands pulled the robe from her shoulders, baring her to the waist, where her sash remained tied. Tim quickly remedied this, and the gown was dropped to the floor. Hands pushed her forward until she was bent over the counter, her rear high in the air and her elbows resting on the cool surface of the granite surface, and she watched the reflection of her husband as he sank from sight behind her. She thrilled as her legs were roughly separated and a face was pressed into her backside as Tim's tongue began to part her lower lips in search of the moisture she knew he would find. His stubble rasped against the skin of her thighs as he pressed forward, reaching for the pearl at the top of her slit to tickle it before running back into her folds. Gwen closed her eyes and hung her head, reveling in the shamelessness of her current situation. \n\nThe face between her legs was removed, and Gwen looked up into the mirror to watch the man behind her stand again, fisting his erection as he rose. One hand grasped her hip while the other roughly rubbed his cudgel through her lips from clitoris to anus, pushing forward once he believed himself to be properly aligned with the opening of her sex. He did not take her gently, rutting her with powerful strokes as her breasts swung wildly and her mons rubbed against the lip of the counter. Gwen could see in his reflection a look of primal determination. \n\n\"Your cunt feels incredible,\" he gasped, and unleashed one last powerful lunge. The hands holding her hips became almost painful, and she could see his eyes screwed shut in delicious intensity. \n\nAfter a final explosive gasp, Tim stepped back and allowed her to straighten. Gwen looked at herself in the mirror, noting with satisfaction the red splashes her husband's fingers had left on her skin, and turned as she put her hands on her hips in mock indignation. \"Timothy Allen Nelson! Did you use the C word?\" \n\nIt was his turn to blush. \"Uh, yeah, sorry, guess I got carried away. Sorry.\" \n\n\"I didn't know you ever used that word,\" Gwen said with a smile, for some reason pleased her faked anger had been convincing enough to cow the man who had just used her for his pleasure. \n\n\"Sorry\u2014sorry.\" \n\n\"It's alright. I'm glad my...cunt...makes you lose control like that. But let's just keep that kind of talk just between us two, alright? \" \n\n\"It's a deal,\" he said with a sheepish grin. \"And if you want to talk dirty, I won't get mad either.\"\n\n\"I'll remember that,\" she said with another smile. \"You must be exhausted. Let's get you to bed.\" \n\nDespite his promise of \"just a couple of jobs in the morning,\" Tim worked most the weekend, acknowledging Gwen's protests with a smile and a kiss. She had done her best to keep him from leaving by tempting him with promises of further pleasures, but the orgasms she produced in him were not enough to keep her husband from getting back to work after he ensured his wife had been satisfied as well. \n\nGwen watched from the kitchen window as the battered old truck clattered up the driveway Tuesday evening, forty five minutes after the last Nelson Plumbing employee had left for the day. A figure unfolded from the driver's side door after it had wheezed to a stop, a tall and athletically thin younger man with short blonde hair and a ruddy-cheeked baby face, dressed in khakis, shirt and tie. Gwen smiled at his choice of outfits as she wiped her hands on a dish towel and stepped on to the deck to greet him. A good start, she decided, remembering back to how Mike had shown up for his \"interview\" wearing torn jeans and a concert t-shirt. She had lectured him on the need for proper attire in the business world before letting him in the house. \n\n\"Mrs. Nelson?\" The nervous young man said, awkwardly juggling a bottle of wine to free his right hand as he climbed the stairs. \"I'm Eric Anderson. Mr. Nelson said I should come for dinner tonight?\" \n\n\"Yes, Tim said you'd be coming over,\" she replied, extending her hand to shake his free one. \"I'm Gwen Nelson. Tim's in the shower. He'll be out shortly. Come in, please.\" \n\n\"Thank you, Mrs. Nelson. I hope this isn't an inconvenience.\" \n\n\"It's not at all, and please call me Gwen.\" \n\n\"Yes, ma'am. I hope you like wine\u2014my mother says to always bring a gift when going to someone's house, but I wasn't sure what would be proper.\"\n\n\"Wine is a nice choice, very thoughtful of you,\" she said as she led him to the living room. \"Can I offer you some?\" \n\n\"Oh, thank you, no ma'am, that's very nice of you, though.\"\n\n\"Gwen.\"\n\n\"Yes, ma'am, Gwen.\" \n\nTim soon joined them, and the young man gratefully accepted a beer when he saw his host take one. Gwen's nod came very early that evening, even before they had sat down to dinner; his bearing and manners were certainly what she hoped for when representing Nelson Plumbing in public. Besides, there was just something...nice...about him. \n\n\"So, I'm guessing you've been looking for something else now that Matt's closing up shop?\" Tim asked as they made their way to the dining room.\n\n\"Yes sir, I have. I had hoped to buy the business from him, but he was asking way too much for it\u2014more than I could afford, and sorry to say, more than I think it was worth. I didn't think I'd be able to make a go of it if I had to borrow too much.\"\n\n\"Then you have a good business head on your shoulders. Matt's a nice guy, but I think he's been looking to get out for a while now, and he hasn't kept up with things. There's a lot that would need to be done to resurrect that business.\" The trio sat, Tim amused and Gwen flattered as the young man did his best to pull her chair out for her. \"You know Walt Phillips is retiring, right?\"\n\n\"Yes sir, I heard.\" Eric studied his own assigned seat as he pulled it out, afraid to make eye contact. \"Are you going to be filling his position?\"\n\n\"We're damn busy with him. It'll be impossible to keep going at this pace without replacing him. You interested?\"\n\nThe young man's eyes shot up. \"I am\u2014if you're offering me a position, I mean.\"\n\nTim smiled. \"I am.\"\n\nEric smiled broadly. \"It would be great to work for you and Cliff, if you're serious about this. And Mrs. Nelson, too,\" he hurriedly added.\n\nThe older man laughed. \"I am serious, and you'd be working with me and Cliff, not under us. Yeah, you'd be working for Gwen, but we all do.\" Her husband shot her a glance and a smile. \"I'd be putting you in your own truck with an apprentice. You alright with that?\" \n\nThe young man's smile widened even further. \"Sounds more than alright. When can I start?\" \n\n\"First rule of business,\" Tim cautioned. \"Never say you'll take on a job until you have a decent idea what the finances are going to look like. What's your salary expectations?\" The two plumbers spent the rest of the evening discussing terms, plans and goals, Gwen sitting back and smiling at her husband's excitement. Tim had always loved helping apprentices further their careers, and there was something about this young man that gave the hint of bigger and better things for them all. \n\nGwen said her goodbyes to the young man and cleaned up after dinner while Tim took him out to the shop to show him around. She heard the old truck rumble to life nearly an hour later, headlights briefly reflecting through the kitchen window as it backed up and made the turn. Tim's boots thumped across the deck a moment later. \n\n\"I think he's gonna work out fine,\" he grumbled as he came up behind Gwen at the sink and kissed her neck. \"Seems to me you think so, too. I think that was the earliest I've ever seen you nod. I don't think even Cliff got approved that fast.\"\n\n\"Oh, I had my mind made up about Cliff pretty early, too,\" she corrected. \"I was just so preoccupied with not burning the roast and embarrassing myself in front of he and Cheryl that I forgot to tell you.\" The couple followed their long-standing pre-bedtime routine and were soon asleep, Gwen naked and tucked under her husband's arm. \n\nThe rest of the week flew by, Gwen busy with the preparations necessary for Walt's retirement and Eric's hiring. A phone call warning of Alison and Jason's imminent arrival had spoiled her parents' plan of a nude swim and more Thursday evening after dinner, and anything but sleep was out of the question by the time their daughter had left. Despite her fatigue, her dreams that evening signaled a growing need for the Slut's gratification. \n\nFriday morning dawned particularly hot and muggy, a precursor to what lay ahead for the weekend. Gwen had been grateful for the distraction her busy week had provided. The thought of returning the favor for Natalie had constantly been on the fringe of her thoughts, but rarely able to push to center stage. She wondered if her promise had somehow triggered her dream. \n\nThe Lady continued to chastise her for even contemplating going through with it as Gwen filled out state tax forms. And while part of her appreciated the immorality and impropriety of the situation, the Slut made convincing arguments as to why it was right, not just for the excitement, but as an act of friendship as well. Gwen could tell herself she was honor-bound to keep her promise, but she knew it was more than that, although even the desire to return the favor had its worries. Would she be any good at it? Natalie had made her feel warm and sensual and loved; she doubted she had ever been able to produce those feelings in Miss Ritter, and wondered if she had the ability to do so for anybody.\n\nGwen's musings were interrupted by the sound of Natalie's SUV pulling up the gravel driveway. She made her way down the stairs and out of the office to greet her sister-in-law, sweaty bodies hugging each other despite the air-conditioned surroundings they had just come from. \n\n\"I can't believe how hot it is,\" Gwen remarked as they began their walk to the barn. \"Like July hot.\" \n\n\"It's pretty sticky,\" the blonde agreed, tugging at her t-shirt. \"Sooner I get rid of this, the better. Let's get 'em saddled up and into the shade on the ridge. Might be a breeze up there.\" Natalie left her shirt on long enough to get Dancer ready, hoping to keep as much stray dirt and straw off her sweat-slicked skin as possible. She was topless as soon as her leg swung over the horse's back, and Gwen followed suit. She could feel the difference as now-exposed sweat began to dry, and she regretted her decision to wear jeans rather than shorts like her sister-in-law. \n\nTheir pace up the hill was slow, their path meandering over shaded trails as insects sang in the trees. The oppressive heat soon had both women thinking of the pool below, and the horses seemed to help them with their decision to cut the ride short even before they had made it. They returned to the barn and turned their mounts loose in the paddock, the horses clinging to the shade of the stable wall rather than venturing into the sun. \n\nGwen watched her sister-in-law remove what little clothing she had left after they had made the climb to the pool deck. She did not hesitate to strip down as well, and both women submerged themselves in the not-quite-cool water, still enjoying the feel of it against their naked bodies. \n\n\"I suppose I should get a move on,\" Natalie finally offered, and began to make her way to the steps as Gwen nodded her agreement and followed. \"Meet you in the house,\" the blonde offered over her shoulder as she headed to her car. \n\nGwen went straight to where she kept the baby oil and beach towels. I promised, she told herself. There was the sound of the kitchen door opening and closing, then footsteps in the hallway.\n\n\"It's earlier than I thought,\" Natalie announced as she turned the corner into the bedroom. \"It didn't occur to me we cut the ride short. You want to\u2014\" The naked woman looked across the room at the other naked woman holding a towel and plastic bottle and raised an eyebrow. \"Did you, uhh, want a massage?\" ",
        "\"No, not me,\" Gwen announced, suddenly embarrassed. \"I told you last week I would return the favor. It's only fair.\" \n\n\"You did, but I kinda put you up to it,\" her sister-in-law replied, a smile slowly growing. \"You really don't have to if you don't want to.\" \n\n\"No, it's only fair,\" Gwen insisted in her best obligation-honoring voice. \"I said I would.\" The Lady took this moment to remind her of the absurdity of the situation, naked in her bedroom with another naked woman, insisting on attempting to give that woman an orgasm. \n\n\"Only if you truly want to,\" Natalie said, her smile still in place. \"You suck at lying, so I want to hear you say you want to.\"\n\n\"I want to, alright?\" Gwen said as she turned away to spread the towel on the bed. \"You did something really nice for me and I want to do something nice for you. I'm sure I won't be as good at it as you are, but I want to try, okay?\" \n\nNatalie stepped towards her and leaned in to kiss her cheek while a breast brushed her arm. \"Just do what you're comfortable with and you'll be fine, okay? You want me on my tummy?\"\n\n\"If that's alright.\"\n\nHer sister-in-law responded by climbing on to the bed and arranging herself on the towel, head turned to the side and eyes shut, arms by her side and legs spread slightly. The moment of truth, Gwen decided and climbed on the mattress next to her. She flipped open the cap with shaking hands and squirted a line of the liquid from shoulder blade to the small of Natalie's back. \n\nGwen started from the top, using her fingertips to spread the oil over her skin. She was quickly surprised by how different Natalie felt\u2014her memories of Miss Ritter's body had been that she solid, unyielding, and cool to the touch, like her skin and muscles were physical extensions of her instructor's steely personality. The body that lay before her was different, very different\u2014warm, soft, and pliant. Gwen found herself beginning to revel in the sensory delights of the woman's body, working her way down towards her hips, towards those fascinating buttocks...\n\n\"Your hands are as strong as your thighs,\" Natalie mumbled through the pillow surrounding her face, and Gwen blushed at the reference to the squeezing she had given her sister-in-law's fingers the week before. \"But you have a very feminine touch. It's a great combination.\"\n\nGwen smiled in embarrassment at the compliment. The most she had ever heard from Miss Ritter was how she had performed competently. \"Thank you. I'm glad you like it.\" Her hands were now working the flesh below the base of Natalie's spine, exploring the soft muscle of her upper buttocks. Her sister-in-law's hips came off the bed in response, as if to offer her globes into Gwen's hands. More oil was applied and she took the offer, marveling in their soft fullness, fingers wandering into the cleft in search of stray droplets of oil. The hips again twitched in response, and Gwen followed Natalie's script from the week before, her finger running across and around the crinkled muscle of her anus, then dipping lower until she felt the first hints of labial lips. Natalie groaned in appreciation and did her best to flex and maintain the contact.\n\nGwen stuck to the pattern that had felt so good on her, withdrawing her fingers and settling herself between the prone woman's legs to focus on her thighs and calves. Natalie's sex was open enough to hint at the moisture between her lips, and Gwen took this as a sign that perhaps her efforts were not in vain. Her fingers smoothed the oil up her sister-in-law's inner thigh, almost brushing her lips as she smoothed the skin at the junction. So warm and soft...it was with some reluctance she continued her way down to calves and feet. \n\nThe toes were the last to receive attention, Natalie wiggling them happily as fingers ran between them. \"Would you like to turn over now?\" Her sister-in-law smiled contentedly and complied, never opening her eyes. \n\nGwen eyed the nude figure appreciatively as she drew a line of oil from neck to navel. Her breasts, lolling slightly to either side of her chest, were not as firm as Miss Ritter's but probably at least as big. It was impossible to resist the urge to find out, and Gwen's hands only briefly worked the valley between them before traveling outwards. Her sister-in-laws mounds were every bit as soft and forgiving she had hoped them to be, the flesh giving way under her fingers only to spring back as Gwen moved on. Natalie's nipples were erect before they had ever been touched, and the oil being spread over them only made them stand even more firmly. \n\nThe hands slathering the oil over yielding breasts occasionally made forays on to the flattened stomach below, going so far as the cradle of her hips before returning to tease and torment the woman's nipples. Gwen moved back to her side and grabbed the bottle of oil to squirt two short lines, one down the top of each thigh. The liquid was worked in concentric circles, up to where the thin tuft of hair sat atop her mons, and down the sides of her thighs as far as the towel beneath would allow. Legs opened in expectation, and Gwen slid her fingers between the junction of the woman's thigh and her sex. Her palm settled on the soft padding above her slit while a finger tentatively made contact with the lips below, then gently pushed between them. There was no resistance, just warmth and wetness. Gwen's other hand alternated between the breasts wobbling beneath her. \n\nNatalie sighed contentedly as her hips pushed up against the palm resting on her clitoris. Gwen's finger found the opening beneath and entered her, curling up inside while her palm maintained pressure, just as Miss Ritter had insisted upon so long ago. She remembered how her former instructor had just lain there in silence, occasionally twitching or roughly grabbing her pupil's hand to roughly steer the young woman's touch to where it was desired most. Natalie showed no such stoicism, her moans and coos sounding like cheers to Gwen while a hand stroked down her back and around her bottom. \n\nThe stroking stopped, but only so Natalie could roll to her side and prop herself on that elbow. Gwen gasped in surprise as a hand worked its way past her open thighs to cup her furrow while a pair of lips fastened on her breast. Natalie ground urgently against the hand over her own pussy, and Gwen felt what it felt like to have her fingers squeezed between a pair of thighs. The tongue bathing her nipple came free and warm labored breath cooled the wetness it had left. \"CumMINGGG,\" Natalie announced through gritted teeth as her own fingers furiously worked their magic on Gwen's clit. \"Ah-ah-ah-ah-ahhhhggggg!\" She stiffened and all movement stopped, even Gwen freezing in place as she observed the power of the female orgasm. \n\n\"Whew!\" Natalie exclaimed as her body relaxed and the finger between her sister-in-law's legs picked up where it left off. \"That was a good one! Didn't realize how much I needed that.\" Gwen's hips twitched involuntarily as the finger in her circled her clit. \"Okay honey, your turn. Lay back and let me do the rest.\" \n\nShe lay back, arms by her side, looking up at Natalie still resting on her elbow. Her sister-in-law smiled and bent forward. Gwen began to panic, afraid that she meant to kiss her. Of all the twisted and depraved things she had done with Miss Ritter, kissing had never been one of them\u2014she had always imagined it to be an intimate act, and her instructor had never shown any desire for intimacy. \n\nNatalie's head bent to the other woman's breast and her lips and tongue resumed their travels. Gwen breathed a small sigh of relief\u2014she would not have rejected her advance of course, that would have been rude, but better not to be faced with that choice right now. But the mouth on your nipple and the finger inside of you are just fine and dandy, the Lady sneered. \n\nHer orgasm was quick and powerful, the hand between her legs just seeming to know what to do to produce the needed result, the lips on her breast capturing her nipple while the tongue gently circled it. Natalie's mouth only left her after her senses had returned. \n\nGwen looked up to see her smiling face. \"Good one.\" Natalie said with a smile. Her head abruptly ducked forward, lips meeting lips in a quick kiss. \"Right on time.\" The blonde rose from the bed and went to her bag. \"Gotta get to work.\" \n\n\"Thank you for...that,\" Gwen said as she rose, not bothering to dress. \"You didn't have to do, it was your turn\"\n\n\"It can be both of our turns. Or, you'd rather do it yourself?\" Her sister-in-law asked with a mischievous smile. \"I know you're becoming quite the expert at jilling off, but personally, I never pass up a chance have someone else make me come.\" Natalie pulled the scrubs top over her head and stepped into her shoes. \"Gotta go. Next week?\" \n\nGwen found herself surprised by the casualness of it all. Not romantic in the slightest, just...friendly? \"Next week.\" \n\nWith a quick peck on the cheek, Natalie was off, Gwen following her into the kitchen and out on to the deck. Too hot for clothes, Gwen decided as she watched the SUV drive off, and made the walk back to the office in the nude, carrying what she would need later. \n\nThe phone rang as she slipped into her chair, and Gwen smiled. It thrilled her to talk to others while she sat there nude, wondering what they might think if they knew her state of undress. They might be in the same condition, the Slut reminded her. \n\n\"Nelson Plumbing, may I help you?\" \n\nThe voice on the other end was young, hesitant, and faintly familiar. \"Uhh, yes, may I, umm, speak with Gwen Nelson please?\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "doggystyle",
        "oral",
        "lesbian",
        "wife",
        "sister in law",
        "massage"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-08"
}