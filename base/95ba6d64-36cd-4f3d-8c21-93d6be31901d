{
    "title": "Of Hope Lost and Found Ch. 06",
    "pages": [
        "So that's what got me to this point. And that's why I blame Gina. She brought Tom into my life, she pushed him at me (and probably pushed him towards me, only more subtly), and she's the reason everything is all messed up right now. Now? Well, it's about 24 hours since Tom kissed me, a stretch of time spent freaking out, panicking, soul-searching, crying, remembering, dreaming, and yes...masturbating. And that was just the first 2 hours! \n\nI got into work this morning, skipping breakfast. It was just as well, because Thomas didn't show for breakfast either. Instead, there was a bottle of wine on my desk, and a note that said, \"We should talk. Tonight. Warmly, T.\" \n\nWe should talk? Yes. We should definitely talk. I went to his office around lunchtime. He was between patients, so I poked my head in. In a controlled voice, I said, \"A little after six, OK?\" \n\nHe looked up and smiled at me. \"Should we go to your place?\" \n\n\"Neutral ground- the lobby,\" I countered. \n\n\"You're right. I'm sure it's fine if people see us talking. Let them draw their own conclusions.\" he smirked. He was right. Dammit. \n\n\"My office, then,\" I said firmly. A statement, not a question. I wasn't going to have this conversation near a bed. \n\n\"Better make it seven, then. I think Gina's been having dinner with Tricia. Might want to wait until she's gone for the night. She seems to be keeping a close eye on both of us.\" \n\nThat got a laugh out of me. So I wasn't the only one who had noticed. \n\n\"I'll go out and get us some food to eat- is Chinese OK?\" I offered. \n\n\"Chinese, in your office, at 7. And we'll work on the wine until we get things sorted out.\" Saying that, he pulled two glasses out of his drawer and held them up for me to see. \n\n\"Good idea. I think I'll need the help.\" I backed up, never having allowed myself to enter his office. \n\nAs I turned to leave, he called out, \"Dottie?\" I paused and looked back. He went on, \"I'm sorry if...last night I...\" \n\n\"We'll talk about it later. Just keep your mind on my patients for now.\" \n\n\"My patients, Dottie. Your clinic, but my patients.\" His voice was playful, but serious. I knew not to get between him and his work. \n\n******* \n\nWhen Tom arrived a few minutes after 7, I walked out to the hall and looked around for lights. \n\n\"Gina drove off 10 minutes ago,\" he told me. We've got as much privacy as two people can have around this place.\" \n\n\"Well I wouldn't put it past Gina to come back if she suspected that both of us were still here. You'd think a new baby in the house would keep her mind busy...\" I directed him to the couch and the spread of Chinese take-out on the table. I sat in a cushioned chair across from him. \n\nThomas sat down and said, \"Apparently not busy enough. She's already talking about number four. There was a girl at the clinic today who is not sure she wants to keep her baby, and Gina made sure she knew there would be a loving home for it, if that's what she wanted.\" \n\n\"Dammit, Tom, I swear that woman is going to be building us an orphanage before long.\" \n\nHe laughed loudly at that, and the full sound of his laugh rumbled in my ears. When he was able to talk again, he said, \"Well, I guess we each have our own obsessions. Something that evokes our passion and receives the brunt of our energies.\" \n\n\"You talk like a book. You know that right?\" He paused, chopsticks in mid-air, and looked at me questioningly. \n\n\"I'm just teasing you,\" I assured him. \"But it's true. Sometimes you sound like everything has been written for you by a speechwriter.\" \n\n\"I read a lot when I was young. I spent far more time with books than with people, even through college. My style of speaking came from the books I read, so it's probably a little less vernacular than most.\" \n\n\"Well at least you're a doctor. You couldn't get away with that in a lot of other jobs!\" \n\nTom shifted nervously in his seat, then spoke while poking his rice around. \"I wish I could say I had some thoughts prepared for our conversation this evening, Dottie, but I can't seem to get my thoughts straight. I'm hoping that together we can figure things out.\" \n\nI stood up and walked to my desk. Retrieving the wine bottle, I brought it to the table. Tom reached into his side bag and pulled out two glasses. As I poured the drinks, I said, \"Tom, this will either be a very short conversation or a very long one.\" \n\n\"To a fruitful one,\" he said, raising his glass. \n\n\"Amen to that,\" I said, clinking my glass against his. I drank my first glass down in one go, hoping to calm my nerves right away. I didn't drink often- hardly ever- so I worried about my capacity. The wine wasn't strong, but I could tell it had started working. After a few more bites, I took a deep breath and said, \"Let's start with last night. What were you thinking?\" \n\nSmiling, he swallowed a mouthful of food and said, \"I was thinking that I really wanted to kiss you. Seeing the opportunity, I took it.\" \n\n\"Well, I'm glad to know you you didn't kiss me against your will, but what I mean is...why?\" \n\nTom seemed confused by the question. Finishing his own glass of wine, he poured us both another and said, \"If you mean, 'Why did I want to kiss you,' then I guess it's pretty simple. You're an amazing woman, Dottie. I'm attracted to you, but not just physically. I really enjoy you as a person. I feel drawn to you. You inspire me, you encourage me, you...you're great. Damn, I can't even put it in words. You're special. And...I think we have been getting closer together over the past few months. I'd like for us to be closer. I'd been wanting to for a while. And you seem to share some of those feelings...I think...unless I'm totally misreading all your nonverbal communication.\" \n\n\"And rather than use some verbal communication to take the next step, you grabbed my neck and kissed me?\" I spoke sharply, but not harshly. I hadn't minded the kiss- not one bit. What bothered me was the way he went about it. \n\n\"I'm sorry for that,\" he said, and we both took another drink. \"I'm pretty nervous about all this. You're an intimidating woman. And to be frank, I was pretty sure your head might try to overrule your heart at first, so I didn't include it in the conversation.\" \n\nIt was a funny way of putting it, but he was making perfect sense. \n\n\"I'm old enough to be your mother. You realize that, don't you?\" No sense in dancing around the elephant in the room. \n\nNot missing a beat, he said, \"You're old enough to have all the poise and character and charm and wisdom that make a woman truly beautiful.\" Dammit. He had a way with words. Almost like Jimmy, but more sincere. \"Plus, you are also very attractive,\" he said, looking into my eyes. \n\n\"For a woman my age,\" I clarified, looking away. \n\n\"For a woman of any age.\" I downed the rest of my glass an poured a third. I was going to need it. \n\nIt was a long conversation. And a fruitful one. We didn't cover all the ground we needed to. Mostly, I needed to be assured that he was serious, that he didn't just have a fetish for older women (or some unhealthy Mommy issues), and that he knew that, whatever happened from here on out, we needed to be very discreet. \n\nAn hour and a half later, we had finished off all the food and most of the bottle of wine. I may have had more than my fair share, which, I told myself, was why I was wanting so badly to join him on the couch. I felt a little giddy, but not drunk. I felt like I was still making rational decisions, aided by a little liquid courage. I stood up, walked around the table, and sat on the couch next to Thomas. He didn't say a word, but his eyes followed mine the whole time. He turned his upper body to face me, but kept his hands to himself. I felt sexy, and strong, and in control. We faced each other, only inches apart. \n\n\"Tom. I have a secret to tell you.\" He raised his eyebrows in anticipation. \"I'm very interested in you, too. I have been for a while. I can't promise you that anything will come of this, but I'd like to try. You may not like what it takes- I'm a traditional girl and I stick to my principles. But I'm giving you the green light to talk more about this.\" \n\nTom seemed a little flustered, and whispered in reply, \"Dottie...I'm so glad to hear that.\" \n\nNot sure what else to say, I leaned in and touched my lips to his. In some ways it reminded me of that first tentative kiss with Glen so many years before. There was a chasteness to it, a simplicity, a knowledge that we would only kiss, nothing more. But it was different from that kiss with Glen, because this time there was a well-spring of desire behind it. I wanted more, I hoped there could be more, I wanted this kiss to be just a prelude to love-making. Not that night, not on that couch, but eventually. I feared Tom wouldn't think it worth the effort. But I hoped. \n\nI let those fears and worries melt into one kiss, touching the tip of my tongue to his lips. He responded gently, and our tongues moved slowly across the space between us. When I started to feel like I wouldn't be able to stop myself from going further, I pulled back and cleared my throat. I giggled and said, \"Shame on you, Doctor. Getting me tipsy and taking advantage of me.\" \n\nTom smiled a naughty grin and said, \"You're not tipsy, Dottie.\" \n\n\"Oh, I beg to differ. I'm feeling a little light-headed and woozy. We drank a whole bottle of...\" \n\n\"Grape juice,\" he said. \n\n\"Excuse me?\" \n\n\"That's my little secret for this evening. I didn't want our judgment to be clouded, so I filled the wine bottle with grape juice. You could still smell the alcohol, but that's about it...just the smell.\" \n\nI didn't know whether I was furious or ready to laugh. Probably both. \"You...you...!\" Words escaped me. \n\nThomas laughed- that same, full, deep-hearted laugh. \"Did you know,\" he asked, \"that studies show people tend to act as drunk as they think they are? Even if they're totally sober? I seem to recall learning that in a certain sociology class long ago...\" \n\n\"You little shit,\" I said, now sure I was ready to laugh. I used to teach about that in a lesson on herd mentality and peer pressure. The studies were fascinating, but I had often wondered how anyone could trick someone into thinking they were under the influence of alcohol. \n\nI stood up, laughing. \"Get out of my office, young man. I do not feel safe with you right now.\" \n\nStanding, he smiled and said, \"Maybe I'm the one that should fear for my safety, Doc Oc...\" \n\n\"Shoo! Shoo!\" I playfully pushed him towards the door. Just before he walked out, I pulled him back and said, \"Wait.\" Just as he turned, I pulled him in for another kiss. A brief but passionate one. Then pushing him away, I said, \"Good night, Tom.\" \n\n\"See you at breakfast?\" he asked hopefully. \n\n\"No. I don't think that would be wise. We'll talk tomorrow, though.\" \n\n\"Fair enough. Good night Dottie.\" \n\nAs I closed the door behind him, I turned around and smiled. No matter where this road would take us, I intended to enjoy the trip. \n\n******* \n\nThe whole world changes when you're infatuated. Sad things are less sad, annoying things are less annoying, funny things are more funny, and the weather always seems to be nice. I'm not normally a cheery person- I've seen too much. So when I walk around the office smiling, Gina at least knows that something's up. \n\n\"You're looking like you just got a donor to fund us for an entire decade. What's up?\" she asked me the next morning, as we went over some plans for the coming week. \n\n\"Oh, nothing much. I just feel good.\" \n\nGina dropped her papers into her lap and said, \"Spill it.\" \n\n\"I don't know what you're talking about,\" I said, barely containing my smile. \n\nGina squinted at me for a few seconds and said, \"Dottie, so help me God, I will dig up your secret. I will squeeze it out of you. I will interrogate every last soul in this building...\" \n\n\"Stop it Gina,\" I warned her. \n\n\"No. You will not bully me out of this. You can't keep secrets from me Dottie, it's not fair. I've told you everything, even the really crazy stuff, you owe me the same kind of transparency. You need to talk to someone about...\" \n\n\"Tom and I...\" \n\n\"Tom? You mean Thomas, the doctor? You call him Tom?\" \n\n\"Thomas and I have been talking...\" \n\nGina closed her mouth, smiled wide, and put her hands together in front of her mouth, looking almost as if she was about to pray. But her wide-eyed happy look made it clear that her thoughts were directed at me, not at God. \n\n\"...and we're discussing the possibility of...taking our friendship to another level.\" \n\nGina squealed like a little school girl. \n\n\"Stop it, Gina. Be reasonable. We're adults, talking about taking a step forward in...\" \n\n\"I knew it! I knew it!\" she said, ignoring my attempts to calm her. And to be honest, it was hard not to smile. I would say her excitement was contagious, but I was already plenty excited. \n\n\"Tell me everything Dottie. Everything.\" I didn't tell her quite everything, but by the end of our conversation, she had about as good an idea of where things stood as I did. I began to open up a bit about my fears and worries. The age difference, obviously. And that we likely wanted different things. That it would affect work. That I would compromise my principles if I wanted him badly enough. \n\n\"But Gina, when I look at his eyes, I just melt. It's like he knows everything I'm afraid of and he knows it's going to be OK. And he's always one step ahead of me, which is scary but comforting at the same time. Does that make any sense?\" \n\n\"It makes total sense, Dottie, if you're in love. I knew Andrew didn't have all the answers when I fell in love with him, and you know how crazy our issues were.\" \n\n\"Haven't heard anything like it, before or since,\" I interjected. \n\n\"But that same thing with the eyes. It was like...he didn't have the answers, but he was ready to face all the questions with me. Like it would be...\" \n\n\"Worth it,\" I said softly. \n\n\"Yeah,\" Gina agreed, her mind drifting to her own story. \"It's worth it.\" \n\n******* \n\nGina and I managed to get our minds back on work, but only after she had forced me to promise to talk to her about things as they developed. \n\n\"I'm not looking for gossip, Dottie, you know me better than that,\" she said. \"I care about you- you're my closest friend other than Andrew, and you need to be talking to someone. And I don't want to lose my doctor. I busted my ass trying to find him.\" \n\nI agreed to make her my sounding board, and even just having talked things through with her that one time really helped me. When I took a break for lunch later that day, I wrote out a list of things I felt like Tom and I should talk about. I categorized them into groups labeled, \"Deal Breakers; Red Flags; and Preferences.\" Deal Breakers were the things I wouldn't budge on, red flags were a little more flexible but still very important, and preferences were just things I liked but wouldn't insist on. I sent Tom an email to tell him what I'd done and that I wanted to talk with him after work. He must have been on break, too, because he wrote back immediately: Let's start with the deal breakers, then. In your office tonight? \n\nI agreed, and promised to bring dinner. He offered to supply the \"wine.\" \n\n******* \n\n\"Really, Tom, there are only two deal breakers for me, but they're big ones,\" I said, once I had managed to pull my lips away from his. Our meal was finished and I wanted to talk seriously before my hormones took us off track. \n\n\"Shoot,\" he said, smiling as if he already knew what I would say. \n\n\"One is that I don't want to do anything that will jeopardize our work here. If a relationship means one of us would have to leave, it's a no-go. Not only would Gina kill me, but I think you belong here.\" \n\n\"I agree. In fact, I would think you would see that a relationship would only cement my position here. I'm not going anywhere while you're here.\" \n\n\"Well, that's sweet and all, but I think what concerns me more is...what if it doesn't work out? What if we try, and it doesn't work, and you decide to leave? Part of me says it's not worth the risk.\" \n\n\"That's an easy one, Dottie. We make sure it works. We decide that failure is not an option.\" \n\n\"Tom, I'm being serious here!\" \n\n\"So am I, Dottie. I swear. I'm not a serial dater. I don't take relationships lightly. If this is what we choose, its a very serious thing for me.\" Gone was his playful smirk. Instead, he held my cheek in one large hand and looked straight at me. \n\n\"That...that's good,\" I said. \"Which leads to my other deal breaker.\" I took a deep breath. \"No sex outside of marriage.\" There. I had said it. I had brought up sex. And marriage. \"I know that's old-fashioned and unpopular and that might be where we need to part ways. I'm sorry if I led you on so far without getting that out in the open, but I will hold firmly to that.\" I braced myself for an awkward conversation. \n\n\"So we wait until we're married. That's OK. I would expect that.\" He seemed completely unfazed, like I had said nothing unusual. \n\n\"Maybe you don't understand what that means, Tom. I'm not going to fool around. All this,\" I wave my hand around, indicating the closeness of our bodies, \"isn't going to go anywhere further if we're not married.\" \n\n\"I get that, Dottie. You're not the only one with a traditional upbringing. I see us on the same path.\" \n\n\"Oh, Thomas, don't get an old woman's hopes up. You can't seriously be considering me to be marriage material for you!\" \n\n\"And why not, exactly?\" he asked in a voice that was humoring me. \n\n\"You're young...well, young-er. You've still got a lot ahead of you, and you should be thinking about marrying a woman who will be able to give you...you know...the life you want.\" \n\n\"And you can't do that?\" \n\n\"Thomas,\" I said, a little exasperated, \"I'm 54 years old. There's a lot of things I can do, but I can't give you everything you want.\" \n\n\"Ohhh,\" he said, somewhat mockingly. \"You mean children. This is all about having kids, isn't it?\" \n\n\"Not exclusively, but primarily...yes. You may think you don't want that now, but...\" \n\n\"Let me be the judge of what I want, Dottie. You have to at least respect me that much. It's not your place nor anyone else's to decide that for me.\" \n\nI silently endured his rebuke. Perhaps I had hit a nerve. \n\n\"And for the record, children are not in my future. Not biologically, at least. That's a story for another time. But suffice to say, I have known for a long time that I could not father children, and that knowledge has helped to refine my vision of my future. I want to be serving and helping people. I want to use my skills to make a difference- not only in people's lives but also in the community in which they live. I want to be a part of something that is changing things.\" \n\nThere was that fire. There was that passion in those eyes. There was that voice that demanded to be heard and heeded. \n\n\"So Dottie, if you think that you can be a part of that, if you think you can support and encourage and partner with me in that, then I would say you stand a very good chance being able to give me the kind of life I want. You've already given me so much, and you've become a very good friend to me. But I want more. You are a beautiful, amazing woman, and I want to know and be with you in every way possible. Can you offer me that, Dottie?\" \n\nHumbled, and excited, and on the verge of tears, I whispered, \"I hope so.\" \n\nHis eyes still blazing, his neck bulging with his pulse, he said, \"Then get over here and kiss me, or else ask me to leave, because I want to feel you close to me right now.\" ",
        "I let my passion carry me back to his arms and did what I had been longing to do for some time. I sat on his lap and allowed myself to feel small and vulnerable. His arms wrapped around me and pulled me tight as our tongues and lips danced with each other. I put my hand on the back of his head, forbidding him to pull away. I didn't need to worry. He pressed forward, almost violently, kissing me until we both had to stop to breathe. His hands rested on my back and hip, mine on his neck and shoulder. We were almost in position to waltz, except we were seated- me on him and him on the couch. \n\n\"Now,\" he said, calmly, \"are there any more deal breakers?\" \n\n\"No,\" I said, shaking my head. \"And I think you've managed to clear away the red flags, too.\" \n\nTom smiled and pulled me in for a hug. I felt in him the safety and care of Daddy, the fire of James and the wisdom and goodness of Glen. But he was uniquely Tom, and I saw in him many things that the other men in my life hadn't possessed. Yes, he had indeed cleared away my red flags. \n\n******* \n\nWe talked. Often. Over the next 3 weeks, we talked so much that it started to feel like negotiations. We had to start to meet in public places, though, because the couch in my office started to feel too tempting. After our first week, we had to let the staff know, lest rumors start to circulate. \n\nGina tracked with us- getting the condensed version of our conversations and helping me to process things. She didn't quite understand or agree with my \"no sex outside of marriage\" stance, but was willing to accept that I wasn't bending on it. \n\n\"So what are you waiting for?\" she asked me one evening as we locked up. \n\n\"What do you mean?\" \n\n\"I mean...what's keeping you two from getting married right now? Obviously, you're both down with the idea. You don't need or seem to want some long, protracted romance or courtship. What are you waiting for?\" \n\nI opened my mouth to answer, then stopped in confusion. \"I...have no idea.\" \n\nGina just laughed and said, \"I think I know what your next conversation needs to be about.\" \n\n******* \n\nI didn't get the chance to bring it up. Late the next morning, I got a call from Tom. I was in my office and wondered why he didn't just stop by to talk. \n\n\"I'm sorry. I'm so so sorry,\" he said frantically as soon as I answered. \n\n\"What are you...\" \n\n\"I had no idea. I mean...I knew that sooner or later, but she totally surprised me, and...\" \n\nJust then there was a light knock on my office door. I looked up to see an older, brown-skinned woman with gray hair and large glasses. Tom's voice continued on the phone, but I didn't even hear what he said. She said, \"Hello, my name is Regina, and I understand I need to speak to you about my son.\" \n\nI put the phone back up to my ear and said, \"I'll have to call you back later, I have a visitor.\" \n\n\"Good luck!\" I heard as I hung up the phone. \n\nI rose and walked to the door. \"Please, come in,\" I said, indicating the couch and wincing at the thought of making out with her son on that same couch. \n\n\"Actually, it might be best for us to go out,\" she said. She clutched her purse with both hands and looked up at me. I was surprised that Tom would have a mother who was barely 5 feet tall. \n\n\"Of course, let me grab my bag,\" I said. I led us down the block to a simple restaurant that I knew didn't do much business during lunch. Regina was silent during our walk, and I tried to fill the silence by pointing out some of the local sites of interest. It was awkward. \n\nOnce we were seated and had ordered our lunches, she began. \"Obviously, you understand that we're a little concerned. The way Thomas is talking about you...and talking about a future together...it's a little surprising. We trust his judgment, we really do. And he's certainly a grown man. But can you please indulge an old woman and help put a worrying mother's heart at ease?\" Her voice was a little shaky- she was at about 15 years older than me- but her mind and her gaze were sharp and unyielding. \n\n\"Of course,\" I said, \"anything.\" \n\n\"We've heard a lot about you, but I'd like to hear it from you. Can you just tell me your story?\" \n\nI felt like I was being tested. How much had Tom told her? In such cases, I default to total honesty. I told her briefly about Jimmy and about my incarceration. I told her about Glen and my teaching career. I told her about the growth of Hope's Advocate and about how my relationship with Thomas began. She listened silently, and our food arrived just as I finished. \n\nShe asked if she could pray over our food, which surprised me. I suddenly felt a little embarrassed that I had always assumed Thomas' family was Hindu. I wisely held my tongue, learning later that they came from an area of southern India that had been Christianized for over a thousand years. Tom had been named after the Apostle to whom they traced their religious heritage. \n\nAfter we had a chance to eat a little, she said, \"Now please tell me what you know about my son.\" That was a difficult question. I told her the facts that I knew- his educational and professional history, his interests, influential moments from his past. I told her about his character, highlighting the many qualities I admired. \n\n\"And his future plans?\" she prodded. I recounted to her the gist of our conversation about his hopes and plans for the future. She seemed satisfied with my answers, and the tone of our conversation softened. We talked about Canada and her family in India. She told me some stories about her son, including a few embarrassing ones I would need to remember for later. As we prepared to leave the restaurant, she said, \"I'm sure it's no surprise to you that Thomas is speaking of marriage. Please understand that, especially in his case, we want to be very cautious about that, especially since we had never met you.\" \n\n\"I understand. And I hope you see that this isn't something he's being tricked or pressured into. It's taken me almost by surprise.\" \n\n\"Oh, I imagine it has, dear. And that it will continue to surprise you, I have no doubt. A woman your age doesn't often expect such things...but is probably better able to appreciate them. Now, one last thing. Could you please give me a tour of your shelter? I would like to understand what you do. And bring Gina, too, if she's available.\" \n\nI did as she asked, and Gina was just as surprised as I was by our visitor. We toured the facility, and Regina seemed very interested in it. She asked good questions and even slipped away from us for a minute to go talk to one of the women in the lounge area of the living quarters. She came back teary-eyed and asked us to take her to the clinic for our last stop. \n\nWe toured the clinic, and both Kara and Denise were effusive in their praise of Thomas, who was with a patient at the time. He emerged a few minutes later and walked nervously over to our group. Regina put her hand on his arm and said to me, \"I wouldn't dream of taking this young man away from his work this afternoon. Is there some place I can go to help out while I wait for him?\" \n\nWe tried to steer her towards a place to relax after her flight, but Regina insisted on doing something. \"Don't underestimate these old hands,\" she said, holding them up. Gina saved me by offering to take Regina to the volunteer station and help her find some work for the afternoon. Once they were out of sight and the nurses were attending patients, Tom pulled me into his arms and squeezed me. \n\n\"I think you did well,\" he said. \"She wouldn't still be here otherwise.\" \n\nI looked up at him and asked, \"You really didn't know she was coming?\" \n\n\"She showed up in the clinic 3 minutes before I called you. I think she figured she'd get a jump on us and not let us prepare for an interrogation.\" \n\n\"You owe me, big guy,\" I said. \n\n\"All I have is yours,\" he said with a smile. \n\n******* \n\nRegina asked to have Thomas to herself that evening. They had a lot to talk about, and they had his father on the phone for most of the discussion. She flew out the next morning, and Thomas and I met for breakfast. I asked how the night went. \n\n\"I can tell you all about it another time,\" he said. \"But in brief...it was good. Mom likes you, Dad trusts her, and we talked through some of the details that would be involved in getting married.\" \n\n\"And I didn't need to be in on that conversation?\" I teased. \n\n\"Not that side of it. But...well...Dottie, how do you want this to go? I mean, do you want the whole fancy proposal and rose petals and music and surprises?\" \n\n\"Oh, goodness no, Tom. That's not my style at all. Besides, I feel like we're engaged already.\" \n\n\"Good. Me too. Then, as for a wedding...\" \n\n\"Nothing fancy. It would probably be hurtful to our friends here if we didn't have a little something, and I don't know what your family wants...\" \n\n\"We talked about that. If we could go up there for a big party with my family and their friends, that would be good. But we could do that, I think, as a...honeymoon?\" \n\nI laughed, trying not to spit out my English muffin. To think of me, at this age, going on a honeymoon! Once I composed myself, I said, \"Well then, how about a simple little ceremony here, then off to the Great White North?\" \n\n\"How long would it take to plan something like that?\" Tom asked. \"Because, to be honest, I don't want to prolong this. I...I really want to be with you, Dottie.\" \n\n\"We could probably pull it off in less than a month. And since we're being honest- at my age, you don't want to have to wait any longer than necessary for things!\" \n\n******* \n\nThree weeks. It took us three weeks to get everything together. During that time, we consolidated our living quarters, having Tom move his things into my house- the same place Glen and I had lived in for most of our life together. We made arrangements to have a few doctors volunteer time to keep the clinic open 3 days a week for the two weeks Tom and I would be gone. Gina effectively took over my responsibilities for a month (which is what I'd been training her for, anyway), and we were all set. \n\nTom's parents and a few close friends came to the wedding. There were only about 40-50 people present, mostly our staff and their families. Glen's successor at the church, Pastor Don, officiated. Macy catered another exquisite feast, and I felt silly the whole time. It seemed like we were play-acting. But then I would look up at my husband-to-be and it all felt so real and right. \n\nWas I really getting married? Was I really marrying this younger, handsome, doctor? Was I really going to be having sex again tonight, after 16 years of celibacy? Our physical relationship had been heating up, but we still hadn't done much more than kiss and pet. We would spend the next night in my (soon to be our) house, flying up to Canada the next afternoon. That bed would see some action tonight! \n\nWe had planned a late-morning wedding, giving us time to have a reception and not feel hurried to get home before we were too tired to enjoy our wedding night. The reception was fun, including a good amount of jokes at Tom and my expense. The age difference and the racial difference were both sources of some good-natured ribbing. We left mid-afternoon, eyes sparkling and hearts thumping. \n\nAs Tom drove us to the house, he asked, \"Are you nervous?\" \n\n\"It's been 16 years, dear. I'm excited and nervous.\" \n\n\"It's been almost that long for me, too,\" he said softly. We had never talked much about his sexual history- just that he had one serious girlfriend in college but had been very devoted to his work since then. \n\nWhen we got to the front door, Thomas surprised me by sweeping me up into his arms and carrying me into the house. I whooped in surprise and gripped his neck. He pulled the door shut behind us, locked it and carried me straight up the stairs into the bedroom. \n\n\"This way I know you won't change your mind and run off,\" he said jokingly as he put me on the bed. \n\n\"Not a chance, lover-boy,\" I said, eagerly shifting my legs around. \"I may be nervous, but I'm also eager.\" \n\n\"You don't know how good it is to hear that,\" he said, unbuttoning his shirt. \n\n\"Let me,\" I said, kneeling on the bed and reaching up to his buttons. Tom rubbed his fingers through my hair as I unbuttoned his shirt. I pulled it off him and lifted up his undershirt. His chest was lean and muscular with sparse, dark hair. I put my hands flat against it and moved down to his abs, which were tight and toned. \n\n\"I never thought I would have this pleasure again,\" I mumbled to myself. Tom just sighed loudly, his hands resting gently on my shoulders. I looked up at his face and saw his eyes were closed, his head leaning back. Not wanting to interrupt his peaceful moment, I continued undressing him, pulling open his belt and letting his pants fall to the floor. I could see through his boxer briefs that he was endowed proportionate to his height, and that he was as eager as I was. \n\nTom stepped out of his pants and slowly reached around to the back of my dress. It was a very simple wedding gown- nothing fancy for my third marriage. He pulled on the small bow between my shoulder blades, then kept pulling as the ribbon unlaced along my back. Once the whole ribbon had been removed, it only took a small shrug of my shoulders for the dress to fall to the bed. Tom slid his hands down to mine, then stepped back, holding my arms out as he admired my body. \n\nTo my great surprise, I blushed. Here I was, a blushing bride on her wedding night. Tom had somehow made me feel young and innocent again, and his smile grew as his gaze moved up and down. \"Beautiful,\" he said. I rolled my eyes, unable to contain my natural cynicism. \n\n\"Of course you would say that,\" I said, \"you just married me. But you don't need to exaggerate for my sake. I'm a well-preserved older woman, but I'm still an older woman.\" \n\n\"Dottie, we're going to have a difficult time of things if you can't trust me. When I say beautiful, I mean beautiful. You are a delight to my eyes.\" \n\nI started to respond but then thought better of it. If my new husband believed I was beautiful, then let him go on believing it. I had nothing to gain by divesting him of that illusion. But speaking of divesting... \n\n\"I don't know about you, Romeo, but I've had about enough waiting. My long-neglected lady parts are telling me they're ready for some action.\" I moved backwards, getting out of the pile of cloth that had been my dress, and lay down on the bed. Tom sat down on the edge of the bed and slipped off his socks. He then turned his attention to my panties. Taking them gently by the waistband, he slowly pulled down. My breathing quickened as I lifted my bottom off the bed, allowing him to pull the thin garment past my hips, exposing me fully. He slid them off my feet and tossed them onto the floor. \n\n\"We won't be needing those for the rest of the day and night,\" he said lightly. \n\n\"Oh really?\" I asked. \n\n\"I'll make sure of it,\" he said, moving his hands to my sides. Reaching behind me, he unclasped my bra and lifted it off, tossing it over next to my panties. \"I feel like a kid at Christmas, opening his presents,\" he said quietly, staring at my hardened nipples. \n\n\"Just so long as you don't act like a kid at Christmas and only play with the wrapping paper,\" I joked. That seemed to snap him out of his trance and he looked up at my face with an eager grin. \n\n\"Not a chance!\" he shouted, pouncing over me. I instinctively put my hands and knees up to keep from being crushed, but Tom wasn't landing on me. He was crouched over me, his face an inch from mine. Our eyes met, and I allowed myself to get lost in that deep look. Just as my body relaxed, he leaned down and kissed me. Our kiss worked up steam and I pulled away just enough to mumble, \"We don't need to stop this time.\" \n\n\"Or ever again,\" he added, moving one hand across my chest as he resumed our kiss. \n\n\"Can't wait any more,\" I said into his mouth, and grabbed the waistband of his underpants. I started pushing them down, but was limited by how far my arms could reach. Tom rolled onto his back and deftly slipped them off. \n\n\"Lady's choice,\" he said, looking over as he lay next to me. \"How do you want our first time?\" I thought about it for a few seconds while his hand ran along my breasts and shoulders. I thought back to my other first times and decided to continue the pattern. \"Climb aboard, lover. I'm ready,\" I said playfully, opening my arms and spreading my legs. \n\n\"I can already tell you're going to be a fun lover,\" he said, positioning himself over me. He both took part in lining his shaft up with my entrance, which was better lubricated than it usually was. \n\n\"At this point in life, I just can't take sex, or even myself, too seriously,\" I said as his tip nestled into my entrance. \n\nHe paused and put a hand on my cheek. I looked up at him and he said, \"That, Dottie, is a part of your irresistible charm.\" \n\nI smiled, trying to learn to take accept his praise, which seemed never-ending. My smile quickly became a wide-eyed gasp as he began to push in. I didn't know if it was because he was the largest of my three husbands or if my passage was tight from years of disuse, but the sense of fullness pressing into me took my breath away. He pushed halfway in, then paused. I started breathing again and smiled. \n\n\"Don't stop now,\" I chided him, \"I can take it!\" \n\n\"It's not you I'm worried about right now,\" he said, slightly strained. His eyes were shut and he was breathing quickly. I gently rubbed his chest and arms as he tried to slow his breathing. \"Fifteen years is a long time. I'm a bit overwhelmed by the sensations,\" he said. \"You feel perfect. Better than I imagined.\" \n\n\"Are you still young enough to go more than once in a night?\" I asked. \n\n\"With sufficient motivation, yes. And you, Dottie, are very sufficient motivation.\" \n\n\"Then just do what you need to and I'll catch up on round two. Don't torture yourself over some illusion that we both have to cum every time.\" \n\nTom opened his eyes and laughed at that, his arms shaking as they supported his body. \"Listen to you, girl! A fun lover and the pragmatic manager.\" With that, he lowered himself, supporting his weight on his elbows and he wrapped his forearms under me. Pulling back a bit, he pushed the rest of the way into me, eliciting a groan as he stretched out my tunnel. \n\n\"OK,\" I grunted, \"Now you should wait.\" \n\n\"Are you OK?\" he whispered. \n\n\"Yeah, just...full. Gimme a minute to adjust.\" I squeezed his tool, using muscles I had forgotten I had. I moved my legs around a little, trying to relieve some of that delicious pressure. Taking my leg movement as a sign to go ahead, Tom began pulling back. When he thrust back in, I moaned softly. As he started a rhythm over me, I moaned and gasped with each slow thrust. I don't know how he stayed at such a slow pace, knowing how on edge he was. Once he was moving smoothly in and out, he found my lips again, and we kissed for the first time as lovers. \n\nThat kiss seemed to be all he needed to push him over the edge. He moved his head to the side, resting it on the pillow, and gave three or four hard pushes into me. I spread my fingers over his back, enjoying the feel of his muscles going taut as he reached his peak. His muffled voice next to me started to cry out. \n\nBaby...Oh God...Oh God...baby! Yes!! AAAUUUUGHH! \n\nAs he came, he pushed even deeper, painfully reaching untouched depths inside me. I winced at first, then felt the soothing throb of his release bathing me. After three pulses, he pulled halfway back and pushed in again. I held on to his strong body, knowing that the best thing I could do for him in that moment was to let him use my body for whatever pleasure he could get out of it. ",
        "As he finished cumming and began to come back to coherence, he turned his head, which was still next to me on the pillow, and whispered in my ear, \"I love you Dottie.\" In response, I squeezed him- with my arms and with my walls. Then, with a deep breath, he abruptly rolled us over so that I was lying on top of him. \"Are you anywhere close?\" he asked, taking hold of my hips and slowly pushing against me. I gave him a questioning look, and he said, \"You've probably got a few more minutes before I slip out. No sense wasting an opportunity.\" \n\nI laughed at his frankness and started sliding forward and back. \"Usually, I won't be close so quickly, but today is special.\" \n\n\"Special?\" he teased. \n\n\"A month of foreplay had me ready to pop,\" I answered. \"Let's see if I can get there quick enough.\" \n\n\"Just let me know what you need,\" he smiled. \n\n\"Let me see,\" I mused, feeling my body reacting to the friction I was finding between us. \"I need a tall, dark, handsome doctor to marry me and fill me with his younger cock.\" I was starting to gasp as the reality of it all washed over me. I was really, truly married to this man. I was a newlywed! This wasn't a fantasy anymore. This was flesh and blood- his flesh and blood under me, inside me, gripping me. His hands were everywhere, trying to take it all in. His eyes were all over, as if they would never again have the chance to see me. \n\nI knew I was close. My moans were short and high-pitched. My breathing was getting raspy. I bent down, putting my head on his shoulder and arching my back, trying to keep that perfect friction of my clit against his pubic bone. Just another rub. Just one more. Almost...almost...Then I seized up and shouted. My hands on his upper arms gripped tight and my nails dug in. I felt the urge to push down and feel him deep as my walls spasmed around him. \n\nMy cries became one prolonged groan as I shuddered and shook. Then I let my full body rest on top of his as I continued to tremble and writhe. I heard myself mumbling and murmuring, and as I came to my senses I could hear myself saying, \"I love you, I love you, I love you,\" over and over. Tom slowly rubbed his hand along my back, as if to comfort me. In that moment, I needed no comfort. I was as happy as I had ever been. I closed my eyes and lay my head on his shoulder, feeling his shaft shrinking inside me. \n\n\"Wake me for round two,\" I said softly, my eyes closing. Tom laughed gently, and stroked my hair. \n\n******* \n\nI dozed off, but only for a few minutes. Tom was still stroking my hair when I awoke, and I felt his essence leaking out of me. With a sigh, I reluctantly got up and went to the bathroom. I almost didn't recognize myself in the mirror. The glowing smile on the face of the woman in front of me was unlike anything I'd seen for a long time. As I stood there thinking about the odd turn my life had taken, Tom's dark figure moved up behind me. His arms wrapped around my upper body from behind, his hands gripping the sides of my breasts. I smiled and leaned my cheek against his bicep. \n\nI felt like I should say something. But no words seemed right, so I sighed and held his arm. After a minute of staring a our reflection- my pale skin and silver hair against the darkness of his body- Tom released me and said, \"I'll grab some dinner and bring it upstairs.\" \n\nAt the word dinner, I winced with regret. \"We were so busy that I barely got to touch the food at the reception. I can't believed I missed one of Macy's feasts!\" \n\n\"I know, babe. Gina warned me that the bride and groom usually miss the meal, so I asked Macy to drop some things off before the wedding. We just need to pop them in the oven.\" \n\n\"Oh, you gorgeous genius! Thank you!\" This was something I wasn't used to- for so long now, probably ever since Glen's illness took hold, I had never had anyone taking care of me. No one looking out for me. Gina did a little of that at the office, but as far as my personal well-being went, I'd been on my own for a while. I was usually the older one in the room, even in my Horton House days. At work I was the director, the manager, and still the Mother Hen. \n\nBut now I had Tom. Tom was thoughtful and caring, Tom was anticipating my needs. Tom was reminding me what it was like to be loved. I finished washing up and went back to bed. Out of habit, I started getting out some clothes to put on, then with a smile I let everything drop to the floor. I wouldn't be needing those tonight! \n\n******* \n\nEven when you're in your 50's, you still dream about the future. Maybe you've gotten wise enough to know you shouldn't put all your hopes in those dreams, because you don't have as much time left to work towards them, but the habit of dreaming is impossible to break. Maybe our vision of how the world should be is never fully realized, and we always want to be moving things a little more that direction. \n\nIn any case, Tom and I spent a good deal of our honeymoon dreaming. Leading up to the wedding, we had spent our time talking about whether or not we should have a future together. We hadn't really talked much about what that future would be like. Most of our dreams centered around Hope's Advocate, which was only natural since that was the future we envisioned together. \n\nTom talked about expanding the clinic and making it a place where young doctors could get some experience. I talked about an idea for offering a co-op daycare for low-income single parents. We had already had someone approach us with a plan, we just lacked the funding. We joked about Gina and her plans to adopt every child that passed through our doors. So much of it seemed like just dreams- we already had our hands full! And that's when Tom surprised me again. \n\nOn our last day in Canada, we had a dinner with just his immediate family- his parents, his sister and her husband, and us. Tom asked me to talk about some of our dreams for Hope's Advocate. His family seemed excited by some of the ideas and asked practical questions about what we would need. I deferred details to the experts, but I could at least talk about the big picture. \n\nI noticed that Tom's dad was jotting down some figures as I spoke. He handed them to his daughter, who pulled out her phone and left the room. I looked to my husband and said, \"Do you mind telling me what this is all about?\" \n\nTom smiled. Regina said, \"Dottie, when I came down to meet you, it wasn't just because I'm a protective mother. My husband and I did very well in business. When our children chose not to follow in our footsteps, we sold the company and planned to give them their half of the profits when they married. But there's always a risk that someone would marry one of my children just for their money.\" \n\nTom spoke up, \"So I convinced them to not give the money to me...but to give it to Hope's Advocate, instead. That way there's no confusion over why you married me.\" \n\nMy eyes were wide with shock. I mumbled, \"As if him being a handsome, intelligent, and caring man wasn't enough reason...\" \n\nRegina went on, \"After seeing what you do there, and especially after meeting you, we loved the idea. So if you don't mind, we'd like to fund a few of your dreams.\" \n\n\"A few?\" I said in shock. \n\n\"Think of it this way,\" Tom leaned over and whispered to me, \"We can hire another doctor so I can have some time off. And we can set up your daycare center. And maybe see what ideas Gina has.\" \n\nI was stunned. \"Ho-ly sh-\" \n\nTom interrupted, \"Dad will clear it with the lawyers, and I already gave Andrew a heads up to start crunching some numbers. I took the liberty of assuming you'd be OK with this,\" he smirked. Heedless of our audience, I pulled Tom's head towards mine and gave him a kiss he wouldn't soon forget. My new in-laws just laughed with delight. \n\n******* \n\nOur first night back in at home, I was riding Tom while he looked up at me, grinning. \"I feel like I have the energy of someone 30 years younger,\" I panted. It was true- Tom, marriage, everything had rejuvenated me. I felt like I was in my sexual prime, and I felt like I was ready to take on the world. When I said as much to Tom, he grunted back that it was a good thing I felt that way. \n\n\"Why?\" I asked, sliding forward and back, grinding myself into a frenzy. \n\n\"Because,\" he gasped, \"for one thing, your husband is going to be insatiable in bed. And for another, you're going to have plenty of new projects at work.\" \n\nI barely heard him, because I was just feeling the tightness in my core that told me I was ready to snap. I closed my eyes and shivered, feeling my husband begin to release inside me. His cries of pleasure fueled my own excitement, and I lay down to embrace him as I joined him in cumming. I trembled, thinking of all I had experienced in life- so many good and beautiful things. I trembled again, thinking of how much goodness still lay ahead. \n\nThe End"
    ],
    "authorname": "nageren",
    "tags": [
        "mature",
        "younger man",
        "older woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/of-hope-lost-and-found-ch-06"
}