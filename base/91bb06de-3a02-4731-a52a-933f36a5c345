{
    "title": "The Twelve Vitali Ch. 17",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*\n\nHella woke and rolled over to pick up her phone and look at the time. She had known that it was dangerous moving her pet Pussycat into the room adjoining hers, but when she had done it, she had believed that the time constraints placed on her training would not allow her to give the girl all the time needed to explore and test her limitations. Now she woke several times a night and fought with her conscience about waking the pet to indulge her own needs. She hadn't been this horny or infatuated with a submissive in many years, and as Cat's departure date loomed, she felt a strange sense of dread and relief mixing inside her to confuse her senses and make her desire for the girl even stronger.\n\nHella got up and padded across her bedroom, opening the door to the adjoining suite. She leant on the door frame watching her Pussycat curled on her side and breathing in the deep, steady rhythm of sleep. The heating in the building was such that no sheets or blankets were required, and Hella could take in her lovely, marked body. It had been a tough session for Cat that day as they continued to test out her limits with harsher equipment, and she could see red lines refusing to fade easily from her skin, even in the darkness of the room.\n\nThe pet was obedient but she never responded with the devotion and adoration that a true pet should after such an intensive training course. Hella was used to pets who lived for the slightest praise and attention from her but even after bring this so much pleasure and pain she remained detached and unbonded to her mistress. It was as if the true owner had erected a wall around her heart that Hella couldn't break through.\n\nEven those who knew Hella well didn't question her actions bringing the girl here. The types of pain and humiliation she was forcing her pet to endure now required enormous amounts of aftercare to ensure no harm was done physically and mentally. Very few girls made it this far down the darker paths of the training, but while Hella was pleased that while Cat was able to embrace some of the harsher forms of pain, her levels of comfort with humiliation were not so dark, and she used her safe words often when those limits were tested.\n\nThe girl had an inner strength and resilience that Hella admired and found extremely attractive to go along with her sexy body and sweet smiling face. She took a deep breath and approached the bed looking at the pet she had an insatiable desire for. At the age of fifty, Hella had thought herself beyond mere infatuation. She had watched the girl struggle through her preconceptions of taboos, her trust issues, and her obvious sadness at being separated from the man she loved to give Hella the trust and control she craved and accept her as her dominant for her time here. The eventual full submission of the girl had remained elusive however and she had built up a great deal of rage toward her owner for keeping that part of her from Hella.\n\nThis wasn't a girl running from the real world or the law, she wasn't here looking for a new life or a new purpose, and she certainly wasn't a masochistic nymphomaniac like her friend, Nymph, all of which Hella was used to dealing with on a daily basis. This was a girl forced to change her ideas from what she knew about society and accept a new patriarchal world order so she could be accepted by the families of the twelve tables and marry the man she loved. Hella felt protective of the girl and was reluctant to return her so soon to a man who couldn't possibly appreciate her gifts.\n\nHella picked up the medicated body lotion that would help the girl heal quickly and climbed gently onto the bed. With a whispered voice and soft hands, she encouraged Cat to roll onto her belly and began a long slow massage to smooth the lotion into her fair skin that held the marks for far longer than someone of a darker complexion. She smiled as she heard the girl purring softly. It was a sound Hella had encouraged and enjoyed. Her purring pussycat was by far the most favourite pet she'd possessed in years.\n\nHella lifted Cat's hands and arms, resting them on the pillow above her head as she massaged her back to inside her ribs and the soft rounded sides of her breasts before spending a long time massaging the cheeks of her ass and running a finger consistently over the dark star there. She'd taken well to the anal toys Hella used on her, and even though she hadn't tested the limits of a double penetration by living men, she had fucked her with a good-sized strap-on while she wore a large plug. She was confident that Cat would not only rise to the challenge when presented, but that the girl would enjoy it, Hella thought disgustedly. As always, her thoughts turning dark as she thought of her pussycat being used by dominant men.\n\nDespite having a male assistant to help her with some of the trickier restraints, the only cocks Cat had been allowed to touch or see in the last two weeks had been hard, cold plastic or glass. Hella knew she had stepped over the line between trainer and real intimacy, but she didn't care at this point. This beautiful girl who lay so relaxed and trusting under her massage was hers for this time, and she intended to take full advantage of that fact.\n\nOnce again using soothing tones and soft hands, Hella encouraged Cat to roll over and expose the front of her body for the massage she was receiving. Hella kissed the barely awake girl softly and let her hands roam over her body before starting on her shoulders and arms. Lifting her hands well above her head, she gently wrapped the wrists in the soft cuffs there and kissed away the small whimpered protest of her half-asleep pet, reminding her who was in control and who needed to do as they were told in hushed whispered tones.\n\nHella straddled Cat's head, her calves and thighs running parallel with the girl's arms. She was careful not to smother the girl as she gently lowered herself and sighed in pleasure as she felt a lazy tongue beginning to slowly lap at her slit. Content for the moment, Hella gathered more lotion and began her massage of Cat's breasts and torso. She caressed every inch of her breasts to her hips and pelvis before working her way back up to Cat's breasts with the pale pink nipples. Unable to resist temptation any longer, she took the nipples between her thumbs and forefingers, squeezing with increasing intensity until her pet cried out into her pussy, the vibrations exciting her all the more.\n\nNeeding more, she twisted the nipples and pulled them upward from her body, making the girl buck beneath her and squeal loudly. Hella lost herself in the sensation and ground down onto her mouth, absorbing every sound and the delicious tongue that continued to try and dance across her moving clit. Hella's first orgasm came quickly as she rode the wave of pleasure that inflicting pain on her willing pet gave her, intensified by the screams that vibrated through her pussy.\n\nHella knew she wasn't alone in her pleasure, it was yet another attractive feature of her pussycat that she was aroused by such treatment. Cat's insistent tongue and suctioning lips finally became too much for her oversensitive clit to bear, so she lifted her hips slightly and ran a hand down Cat's body to her pussy and slid her fingers between her folds, smiling as she felt the girl's obviously wet arousal.\n\n\"Mmmm... my pussycat enjoyed that, didn't she?\" Hella cooed, rubbing her fingers over Cat's clit and smiling as her hips lifted slightly from the bed.\n\n\"Yes, Miss!\" Cat hissed as she felt Hella grasp her clit with long nails, digging them in somewhat to hold the slippery little bud without losing it.\n\n\"Are you hissing at me, pussycat?\" Hella twisted the clit trapped between her fingers, revelling in the cry Cat emitted in response before losing the slippery bud. \"We. Don't. Hiss. At. Miss. Hella. Like. A. Nasty. Stray!\" Hella punctuated each word with a slap to her pussy followed by soft rubbing as if to soothe pain she felt as she settled her own pussy back over Cat's mouth to enjoy the sensations of her cries and whimpers. \"Such a naughty pet pussy,\" she spanked her again and felt her second orgasm rising.\n\nFeeling generous, she changed position slightly and lay over Cat's body to lick her clit gently and delve her fingers into the hot wet hole to begin to fuck her. In this position, Hella could feel the body of her pet rock beneath her to movement of the fingers invading her and the small tremors that ran through her as she drew close to coming with her Mistress.\n\n\"Come for me, pussycat!\" Hella commanded and buzzed her clit with her lips. Cat arched up hard against her body and cried out her orgasm into her Mistress's pussy, sending the woman over the edge with her.\n\nHella lay for several minutes motionless, the orgasm that ripped through her still sending soft waves of pleasure as her pet's tongue gently lapped at the nectar that slowly oozed from her. She moved slowly, turning her body so she could look into her pet's come covered face. The sight only added more fuel to her desire, and she moved to straddle one of Cat's thighs and press her own thigh against the hot tortured pussy of her pet. She rolled her hips, rubbing her clit against the muscle and let out a long pleasure filled sigh, convincing herself that she was not greedy wanting the third orgasm in the middle of the night from her clearly exhausted pet.\n\nCat felt Hella's tongue softly loop around one of her nipples before drawing it into her mouth as she humped her thigh and purred loudly. She rocked her hips, wanting greater contact with the thigh her Mistress had pressed against her pussy, and pulled on the restraints holding her hands as she tried to position herself for greater contact. Her Mistress had taken the time to get to know her body and all of the ways to excite and arouse her, and she felt like an oversexed teenager that Hella could make her come so quickly. \n\nShe had never believed she could enjoy sex with a woman but Hella knew how to bring her body to amazing sexual highs. She doubted she would ever seek out the touch of a woman after her time here, but it had not been as bad as she had thought going through the motions of bring her mistress to climax and let her own body respond to the pain and pleasure rained down on her. While enjoyable to a point, she knew she wouldn't seek out the soft curves of another woman when she craved the hard bodies touch Matteo's and it was his face that entered his mind every time she came for Hella.\n\nShe loved Matteo. She planned to spend the rest of her life with Matteo and have him do to her the things she had learned that she loved about the BDSM lifestyle. Cat knew not having to serve Hella on a daily basis would be no significant loss but could admit she was grateful for such extensive and thorough training. She had been nervous when Hella had moved her room to one adjoining her own, but now, as she lay approaching another orgasm with her Mistress, she could understand why she had done it. Cat had become as bad as her friend, Nymph, getting through the hours of dance and elocution or etiquette just to be back in the room of pleasure and pain imagining all of the things she would be able to enjoy with Matteo.\n\nEven the watchful eyes of Nurse James, who had volunteered to be Hella's assistant when she was with Cat, provoked a reaction in Cat. The sadist who enjoyed strapping Cat into torturous devices and frames could only ever look but not sexually touch Cat. He remained fully clothed at all times, and if he ever got an erection while watching Hella's use of her, it became a source of derision and humiliation that Hella seemed to enjoy heaping upon him, reminding him that she would never share her pretty pet with him. Still, he came back every day to bind her and watch each scene with her Mistress. In the hospital, he had been cruel when alone with the girls, and she wondered if he, too, was a sadist who had never had the training to seek consent before touching a submissive. If he ever tried to hurt her or speak to her, Hella was quick to step in and admonish him and make her feel safe.\n\nThere was a certain excitement to being watched as she was used and tormented. Often, she imagined Matteo, or even Ricco, who she assumed she would need to let into her life and bedroom, were watching her with Hella. Her purr became a deep groan as she felt Hella's teeth fasten around her nipple and she bucked her hips, seeking more and giving more as she and her Mistress humped against each other's thighs.\n\nThey came almost simultaneously, and Hella rested her head on Cat's breasts, softly tracing her nipple and flicking it with her nails as they both came back to earth.\n\n\"Sleep like this,\" Hella said as she undid the restraints. \"On your back.\" She nestled beside Cat, wrapping an arm around her waist and draping one leg over her thighs. \"Sleep, pretty pussycat, you've made me very happy tonight.\"\n\nCat purred knowing her Mistress enjoyed the sound and closed her eyes, imagining Matteo, and possibly Ricco, enjoying the sound just as much.\n\n*****\n\n\"I've been in contact with Marcus this morning,\" Roberto said casually as his sons walked into the library. Both Matteo and Ricco spent their mornings at the company and their afternoons and evenings with their fathers taking over some of the responsibilities of running such a large and complicated family. \"In light of who and what Catriona will become within our family, he has suggested an extra week where she can spend time with the future mother of the Battaglia and Peri Donati, who has consented to two days of her time. This will not be an easy role for her to absorb, and Theresa may not have the energy or be in the best frame of mind in the coming months to instruct her as she might otherwise be.\"\n\n\"No!\" Matteo said abruptly, not entertaining any further discussion on the subject.\n\n\"I have to go with the big guy on this one,\" Ricco said. \"You and the others told us that we could tell her what her future would entail, not Marcus or Peri or another. As you said, it will be a lot for her to absorb, and we need to be the ones to tell her.\"\n\n\"That is why Marcus has extended an invitation to us to attend the Gentleman's ball for the graduating officers this weekend. We will fly up Saturday afternoon, and you will be able to spend time with Cat after the ball as well as the Sunday before we return home,\" Roberto explained.\n\n\"She will be at the ball?\" Matteo tilted his head curiously.\n\n\"It will serve as the culminating assessment of her social graces training to escort a graduate from one of the twelve families,\" Roberto explained and smirked as he saw his son's temper flare in his eyes.\n\n\"Steady there, big guy,\" Ricco said calmly, seeing the sly smirk of his father. \"Who will she be escorting, exactly?\"\n\n\"Kalum is graduating, and I thought you might like to escort Mia as a surprise for her for being so patient. Kalum has been away for six weeks, not three,\" Roberto spoke to Matteo, but then turned his eyes on Ricco. \"You are becoming too clever for your own good!\" he growled.\n\n\"Just keeping the big guy out of trouble. He's been out of sorts lately, and with this extra delay, he might just lose his shit if he sees her with anyone else, although Kalum might pass under the wire if we get to do something nice for Mia,\" Ricco grinned and nudged his brother.\n\n\"Yeah, alright, as long as it's Saturday night and all day Sunday. I want a separate place to stay too. I'm not sharing with you or Mia,\" he didn't mention Ricco because he wasn't sure how he wanted that to play out yet or how Cat would feel about it. \"No short changing me either; or I won't leave her there when we come home,\" Matteo warned. He'd spoken to her twice in the time she's been away, and everything else he knew came through Marcus. He could see the importance of the extra week's training, but he needed to see her and hold her so bad he didn't think he could give up that time without seeing her at all.\n\n\"I'll let him know you'll be there on Saturday,\" Roberto smiled slyly again. \"I'm looking forward to seeing if the experience has changed her in any way. It was brave of you to request a female trainer not knowing where her preferences lay.\" He chuckled at the eye roll Matteo gave him.\n\n\"I know her far better than you think I do,\" Matteo growled out, even though after his last conversation with her he had wondered the same thing. She seemed eager to continue her training with Hella rather than apprehensive as she had been the first time they spoke. He'd been relieved, but as the week had gone on he had let his imagination get the better of him more than once.\n\n\"Cosimo is running late, why don't you call Mia and let her know we are taking her to the ball this weekend, she will need a dress.\"\n\n*****\n\n\"Now it's all about the packaging,\" Kate said. \"Women who look available and desperate are enjoyed for a moment and forgotten the next. What you always need to remember is that with all things, men enjoy what they have to work to get more than those given to them easily. Be it a rare bottle of wine, a fine cigar from an embargoed country, or the glimpse of skin from a woman who appears cool and untouchable.\"\n\n\"Sexy is a state of being, a conscious attitude, not the gift wrapping that goes around it. Truly sexy women could wear a flour sack and have men notice her. Girls these days mistakenly believe that men want the slut, and they do, to a point, so they dress as provocatively as possible. The reality is that men want the good girl who is corruptible,\" Edith took up the conversation.\n\n\"I don't disagree with my sisters,\" the third woman, Felicity, joined the conversation. \"But there is something to be said for a figure-hugging style that may leave less to the imagination but still promises delights unseen.\"\n\nThe three women presented dresses to Cat two days before the ball. Each had their own design and reason why the ball gown they had chosen was best suited to Cat.\n\n\"I don't believe I could pull off the Cinderella look with such a full skirt, but I love the bodice of this one,\" she said honestly. \"I'm not sure I have the right figure for the tight dress either, but the neckline is lovely.\" She looked at the third dress that Edith stood proudly alongside. \"Do you think that we could maybe take the strip from the off the shoulder sleeve and place it on this bodice with this more slimline but still full skirt and put a peekaboo slit in the folds of the skirt for that flash of the leg you were talking about?\"\n\n\"Which material would you want the finished design in?\" Kate asked as the women started talking quickly, discussing the idea that Cat had put together.\n\n\"It could be difficult to put the off the shoulder pieces on top of the corsetry lacing in the back without it sticking up awkwardly,\" Felicity pulled at the garment and considered how to make it work.\n\n\"It could work if we laced it upside down with a different ribbon, made it more of a decorative feature,\" Kate turned to her sister as Cat considered the original question.\n\n\"I think I am more of a satin than a lace or tulle person, so maybe that material,\" she pointed at a sapphire blue dress.\n\n\"No lace? How do you feel about Diamantes?\" Edith asked, who preferred more decorative materials.\n\n\"I wouldn't want the whole bodice to be covered in them, but otherwise I don't mind a scattering or small clusters of them,\" Cat admitted.\n\n\"Excellent. Come back tomorrow morning and we will have exactly what you want,\" Edith grinned.\n\n\"I'll walk you,\" Kate said. \"Edith forgets you're not supposed to be walking anywhere on your own. Marcus will be with his father.\"",
        "Cat had been in the facility for almost three weeks and had been given very few freedoms. She'd been able to speak to Matteo only twice, and she was starting to feel stir crazy. The fact that Kalum had resisted escorting any of the available cadets or Kept here until Marcus had suggested that Cat may be a suitable option had been a pleasant surprise, and she was looking forward to seeing him and being outside of the main facility in which she lived and trained.\n\nOnce she was close to where the other trainees lived, Kate left her to go and have lunch with the other girls in training.\n\n*****\n\n\"Are you ready, Cinderella?\" Matteo called up the stairs to his sister.\n\n\"I am!\" she called back and appeared at the top of the stairs in shimmering pink. \"I haven't been to a ball in forever. I'm sorry Cat isn't here to go with you, but I'm awfully glad you asked me.\" She swished her skirt as she stepped carefully down the stairs.\n\n\"Which charity is this for again?\" she asked.\n\n\"Returned Services League,\" he said trying to keep his answer vague. \"I believe your man will be returning soon, won't he?\"\n\n\"Gosh, I hope so, but you never know. I'm hoping next weekend though. I hate not being able to at least call Kalum and talk to him. Sorry,\" she gave Matteo a crooked smile. \"You're probably feeling it worse than I am right now. At least Kalum came home in the middle of his six weeks. Do you know how long they will keep Cat?\"\n\n\"At least another week,\" Matteo grumbled. \"Maybe they'll come back together,\" he said, knowing it wouldn't happen by trying to keep up the ruse that tonight she was filling in for Cat as his date to a charity ball in a regional centre of Victoria.\n\n\"Well, hello, Cinderella,\" Ricco said as they walked into the library to collect Roberto. \"This whole being a Siamese twin thing is paying off all the time. We get to be seen escorting the belle of the ball, and you get two dates.\" He chuckled, teasing his sister.\n\n\"I won't be joining you after all,\" Roberto said from the library door. \"Your Papa is grumbling that I am attending way too many parties since his illness,\" he rolled his eyes heavenward. \"I trust you three will represent our family appropriately.\"\n\n\"We'll be fine, I'm taking my conscience with me,\" Matteo mirrored his father's heavenward eye roll.\n\n\"Knox is waiting for you, enjoy yourselves. I will expect a full report when you return home tomorrow night,\" Roberto smiled as three of his children left the house looking happy. It was a joy for him to think that four of his five older children would be happily settled into family life before his condition began to become public knowledge. He wished he approved of Vanessa's choice, but she couldn't be dissuaded from joining the Savoy family at this point, despite the fact that it was her mother's family.\n\nMatteo relaxed once they were in the car and heading to the airport. He'd spoken to the pilots and had the flight plan lodged so that no announcements would be necessary and give away the surprise for his sister. Knox wouldn't be coming with them this trip; they had taken Matteo's small jet to be able to land at the compound rather than in Canberra.\n\nThe flight took an hour, and the afternoon sun hung low in the sky as they arrived and were picked up by a steward and escorted to the compound. Mia seemed to not notice where they were, accepting the military style dress of most people as part of the charity they had come to support. Matteo's nervousness that she may realise where they were was unfounded as they were shown to a townhouse to settle their overnight bags.\n\n\"We're so early,\" Mia frowned at her brothers. \"The ball doesn't start until six or seven, does it?\" She asked as she took her bag from Ricco and started up the stairs.\n\n\"There's a small private ceremony before the ball that we've been invited to watch, but no matter who or what you see there you have to stay silent until it is over. Promise me, or we can't go,\" Matteo gave a small smile as his sister turned to look at him suspiciously.\n\n\"We're not joining a cult, are we? This isn't some Scientology initiation, is it?\" she narrowed her eyes further.\n\n\"Joining a cult? We grew up in one!\" Ricco laughed loudly. \"Just promise him so we can go already.\"\n\n\"Okay, I promise,\" Mia laughed. \"Just let me choose the best room.\"\n\n\"There's only one room, Mia, we're staying next door,\" Ricco said easily.\n\n\"I'm staying next door, Ricco is sleeping on your couch to make sure you're safe,\" Matteo chuckled.\n\n\"What the hell is going on with you two tonight? I'm starting to miss Papa already,\" Mia complained as she came back downstairs.\n\n\"Who, us? Nothing wrong with me? Anything wrong with you?\" Matteo asked Ricco.\n\n\"Not that I'm aware of. Did my suit jacket get creased in the plane?\" Ricco asked, turning around. \"You know how I like to look extra pretty at a ball,\" he grinned.\n\n\"Meh, you look okay, but I understand it's hard to stand in my shadow at these things,\" Matteo said in a deadpan voice, winking at Mia.\n\n\"You both look very handsome,\" she shook her head. \"I will be quiet, I promise.\"\n\n\"Let's go then,\" they both offered Mia their elbows, and the three siblings left the townhouse and walked toward the larger building. As if suddenly realising this wasn't a country town, Mia slowed her walk. \"You promised to be quiet, remember,\" Matteo whispered in her ear as he realised she had worked out where they were. They kept walking slowly and entered the main foyer where they were directed to the auditorium.\n\nMia clutched her brother's hands as they took their seats, and she scanned the graduating class for one man. It was difficult to tell the men apart from all the other tall, muscular dark men who sat with their backs to her. It didn't matter to her, as she knew she would see him at the ball, and once again she squeezed her brother's hands as she tried to hold her excitement inside. She couldn't believe she was here, watching what she knew was an intensely private ceremony for the Battaglia family, or always had been in the past.\n\n\"Might have to take it easy there, Mia,\" Ricco whispered.\n\n\"I'm going to need this hand to hold my drink when I'm making a toast to our warrior later,\" Matteo whispered, earning him a dazzling smile and the use of his fingers again.\n\nMia's moods swung wildly during the ceremony from pride to teary-eyed love, to pure excitement and joy at seeing him graduate with honours from the elite special forces program that would allow him to become part of the next table with her brothers. More than that, it would allow her to marry him with her family's approval and live happily ever after, just like Cinderella.\n\n*****\n\nCat waited with the other ladies, who all looked beautiful in their gowns as the graduation ceremony came to an end. Most of the girls wore variations in red and black to match with the Officers uniforms, and she felt awkward in her blue dress.\n\n\"That was quite clever of you coming in such a different colour to the norm. You'll definitely stand out in the crowd tonight,\" One of the ladies said in a haughty voice.\n\n\"I had no idea there was a dress code. I'm so sorry. Perhaps if the lighting is not good, this dress will look closer to black than blue,\" she immediately apologised for upsetting another girl.\n\n\"Don't let her get to you, she's been in a cranky mood all day because she found out she was her partner's second choice,\" another girl giggled as the first huffed away furiously, not answering the accusation. \"I'm Caitlyn,\" the second girl grinned, \"and that was Scarlet, who believes the colour should belong to her alone.\"\n\n\"Jane,\" Cat smiled and held out her hand towards Caitlyn.\n\n\"Here they come!\" Caitlyn almost squealed, as she hurried toward the door where the new graduates were filing into the room.\n\n\"Kalum!\" Cat smiled widely. \"You look so handsome in uniform.\"\n\n\"You scrub up pretty well yourself,\" he paused. \"Jane.\"\n\n\"It's all smoke and mirrors,\" she laughed. \"I just haven't had my hands in a paint pot for a few weeks,\" she laughed, showing Kalum her clean hands and nails.\n\n\"It's so good to see a familiar face after weeks of training,\" he hugged her and kissed her cheek.\n\n\"I know. Thank you for inviting me,\" she said.\n\n\"Thank you for agreeing to come. You never struck me as a ball type of girl, but you look like a princess tonight. The Cinderella thing works for you,\" he complimented her.\n\n\"That would make you Prince Charming, at least for tonight,\" she laughed happily. It really was good to see someone who knew her in her life before coming here.\n\n\"Alright, are we ready to do this?\" he asked.\n\n\"As ready as I am ever going to be,\" Cat said softly as they joined the line of couples making their way to the ballroom. The standing around and waiting seemed interminable, and both Cat and Kalum nervously went through the opening waltz they would need to perform with the other couples. Marcus had taught her the specially choreographed dance, and she prayed that Kalum, like Matteo, could lead her through it and mask any of her faults.\n\nThey stepped forward into the ballroom at the introduction which named her as Catriona Leona, making her gasp and frown at Kalum, who had also called her Jane. If it was an administrative error, it was a doozy, and the Commander would not be happy. It was he who had demanded her anonymity. She barely had time to think about it before Kalum pulled her into the dance pose and the music started.\n\nCat concentrated on the dance moves and danced, oblivious to the crowd who sat at tables around the edge of the large dance floor. It wasn't until Kalum let out an expletive and stumbled that she realised something was wrong. She looked up at him as he recovered himself.\n\n\"Sorry,\" he mumbled. \"I think I saw Mia in the crowd.\" He said with a spin and a twirl.\n\n\"Seriously?\" she asked, craning her head to look around as they danced around the floor. \"Where?\" An irrational thought that Matteo could be with her entered her mind and made her need to find Mia in the crowd.\n\n\"Just dance, it will be over in a minute and we can go and find her,\" Kalum murmured and held Cat tighter in the dance pose they needed.\n\n*****\n\nMatteo saw Cat enter and couldn't take his eyes from her. She looked almost like a different person as she danced with Kalum. She seemed to radiate confidence, even though he knew she wasn't comfortable on a dance floor. The dress only served to highlight her figure, and, far from being the shy girl who hid behind her hair, she almost seemed regal as she twirled and swayed in Kalum's arms.\n\n\"My God, she's so beautiful,\" Mia whispered. \"How can I compete with that girl?\"\n\n\"Why would you want to?\" Matteo whispered. \"That's Cat.\"\n\n\"That's not your Cat,\" Mia frowned, pulling her eyes from the man she loved to look properly at his partner.\n\n\"That's my Cat,\" Matteo grinned at her.\n\n\"Wow,\" Mia whispered.\n\n\"Yeah, wow,\" Ricco agreed. \"Kalum scrubs up alright, doesn't he?\" he commented with a chuckle.\n\n\"I know, right. I just love a man in a uniform,\" Mia sighed dreamily. \"We should go and separate that gorgeous couple.\"\n\n\"Perhaps we should wait until the opening waltz is finished,\" Matteo laughed lightly. He pulled his gaze from Cat and looked around at the crowd watching on at the carefully choreographed dance. He noted Marcus moving through the crowd near to where they sat toward a petite blonde woman and wondered if she was his wife. He had only met the woman once and remembered she was a blonde. As he continued to watch, he saw that Marcus stopped and spoke seriously to the woman. The way they interacted with each other made him rethink his original thoughts that it was his wife.\n\nMatteo was about to look away again when they both turned to look at him, and the woman narrowed her eyes as if angry with him. He would need to find out what that was about, but first he needed to see Cat, talk to Cat, kiss her and hold her and love her, not necessarily in that order, but he planned to do all of that as soon as he could make it happen. He came to his feet and put out his hand to his sister, who had moved as soon as he did, eager to see the man she loved.\n\nThe dance came to an end, and the dignitaries joined the couples on the dance floor for the next dance. In the movement, Matteo lost sight of Cat and frowned as he looked around. Unsure of what to do and needing to enter the dance floor, he took Mia in his arms to dance their way to the people they wanted to see.\n\n\"Can you see them?\" Mia asked.\n\n\"Not yet, but we'll find them,\" Matteo reassured her. He finally spotted Kalum heading toward where they had been sitting on the outskirts of the dance floor and spun Mia in that direction.\n\n\"I know you didn't tap me on the shoulder, but I am sure you'd love to dance with my partner as much as I would like to dance with yours,\" Matteo said with a smile from behind Kalum, making both him and Cat turn to look at him.\n\n\"You're here,\" Cat said in a purring whisper as she took in the vision of him standing before her. She was oblivious to the fact that Kalum had moved to take Mia in his arms and kiss her briefly.\n\n\"My kitten,\" Matteo murmured, her purring whisper affecting him on a deep level. \"May I have this dance?\" He asked, not ready to share her with anyone else yet, and with a wide smile and a brief nod took her in his arms.\n\n\"What are you doing here?\" She asked. \"No one told me you were coming.\"\n\n\"Papa organised our invitation because Kalum was part of the graduating class. A lot has happened since you've been gone, and I couldn't wait any longer to see you,\" He murmured close to her ear as he danced on automatic pilot, holding her closer than the standard waltz position. \"I was hoping you would come home with me this weekend, but Marcus has asked for extra time. Did you know?\" He asked.\n\n\"I was never given a timeline, but I was hoping I could go home soon,\" she whispered and leaned into his chest, breathing in the scent of him. She had missed the warmth and comfort of his arms. She was home. For that moment it didn't matter that they stood on a crowded dance floor hundreds of kilometres away from where they would start their life together.\n\n\"Time is something we don't have a lot of at the moment,\" Matteo sighed, \"And I don't want to spend this precious time together in a crowded ballroom.\"\n\n\"I don't know if I'm allowed to leave, even with you,\" she whispered, looking around for Marcus.\n\n\"You will be staying the night with me,\" he growled as if warning her that he didn't care who protested. \"There are things we need to talk about, not that I plan on doing much of that once we are alone,\" he grinned to offset his growl when he felt her stiffen in his arms.\n\n\"Matt, I can't just leave without saying anything to him. I've worked too hard to fail at this now,\" she said anxiously.\n\n\"Marcus knows you will be staying with me. Ricco and I have a townhouse, as does Mia, who will be spending the night with Kalum,\" he looked over to where his sister and Kalum held each other, blissfully ignoring everyone else in the room.\n\n\"Ricco is here?\" she asked, confused by his statement, and felt a strange fluttering in her tummy.\n\n\"One of the many things we have to talk about,\" Marcus dismissed her comment, but thought better of it. \"Ricco and I have been forced together by the family and these watches. If we move any further apart than these watches allow, an alarm goes off.\"\n\n\"Why would they do that?\" Cat asked, genuinely confused.\n\n\"Remember what we talked about when we were in Melbourne? Why you went to see Papa?\" he asked, trying to lead her to the right conclusion without saying anything within a room of crowded people. He watched her eyes widen, and he nodded. \"Nothing is guaranteed, and until the gathering, no one but Ricco and I know.\" He explained further. \"He's moved into my apartment while you've been gone.\"\n\n\"That's a lot to take in,\" she said softly, \"but right now I just want to be here with you,\" she leaned back into him, putting her head against his shoulder, letting her lips brush lightly over his neck with the action.\n\n\"I think,\" Matteo groaned softly, \"That we had better go and see Marcus to put your mind at ease before I throw you over my shoulder and carry you out of here to the closest bedroom.\"\n\n*****\n\n\"Trust me, you do not want to interfere with their reunion. In fact, I would stay as far away from them as possible,\" Francesco advised Hella, who was fuming. She hadn't been told that her pet's owner would be here tonight, and expected to be able to take possession of her for the evening. The fact that her plans had been ruined was more than disappointing, and she was furious.\n\n\"He's not stupid, he'd have to know someone was testing her limits!\" Hella snapped.\n\n\"It's one thing knowing it and quite another meeting that person face to face. It was not his choice to have her trained here or in the way she was, so I doubt he will be pleased to see someone else treating the woman he loves as a submissive,\" Francesco tried another tack.\n\nHella watched the couple as they danced. She had been enjoying having the young woman as her pet and having her practically to herself as she completed the other training being given over the past weeks. She had not been prepared for the arrival of Matteo Vitali, and she was fully prepared to confront him about interrupting Cat's training regime and remove her from the ball and his arms, but not one of her cousins would back her up. In fact, they seemed quite pleased with his arrival.\n\nIt was ridiculous the way her family fawned over the two Vitali men and their sister. She glanced at the dancing couple to where the younger brother stood with a small group surrounding him, laughing and entertaining his willing audience. She turned back toward the dance floor and couldn't find the object of her obsession, and she began to move away from Francesco to find Cat, but he stopped her.\n\n\"Hella, if she stays for another week, as we have asked, it might be in everyone's best interests if she ended her training with you. You are far too attached to the girl. Let her go for tonight and don't interfere with her reunion with Matteo. If you don't, there will be consequences beyond mine or Marcus' control,\" he warned.\n\n\"That's bullshit, and you know it! How would that possibly be in Cat's best interests?\" Hella hissed.\n\n\"I'm not sure she will be able to take the punishment she will receive for showing how much she loves that man, nor will she deny her feelings...\" his voice trailed off as he saw them approaching and stopping just out of earshot to speak to Marcus.\n\nUnable to help herself, Hella turned and took a few steps toward the couple. She noticed that Cat looked guarded when she noticed Hella joining them and clung more tightly to the man beside her as if for protection. She didn't understand why Cat would react that way and frowned.\n\n\"I've been looking forward to meeting you,\" Hella held out her hand toward Matteo.\n\n\"I think we've met once before, haven't we?\" Matteo asked, looking at Marcus.\n\n\"No,\" Hella said. \"I'm afraid you have me confused with someone else. I'm just a cousin, I don't usually hobnob with the royal family.\"\n\n\"Oh, do you know someone graduating tonight?\" Matteo asked in a friendly manner.\n\n\"In a manner of speaking,\" she smiled and let her eyes fall on Cat, who seemed to shrink.\n\nMatteo looked down at Cat as he felt her stiffen and move at his side. He looked back at the woman and the way she stared at Cat and frowned.\n\n\"Marcus, I appreciate what a spectacular ball this is, and while I hate to miss a moment of it, I am eager to demonstrate just how much I have missed my fianc\u00e9 to her,\" he said with a wide grin.\n\n\"Oh, you can't go yet,\" Hella said, disappointment rippling from her voice. \"You don't want to go yet, do you, Pet? You will stay and return to your room with me later, won't you?\" she asked with an overtone of commanding Cat to stay. Cat lifted her head and stared at her incredulously before looking around at the surrounding crowd, a blush of humiliation rising in her cheeks. Hella knew she had crossed the line at that moment. Rather than the meek girl that followed every one of her commands without a second thought, she saw a woman who had been forced to accept the training to be with the man at her side and the horror that Hella had abused the trust Cat had given her.",
        "\"Marcus, we will talk tomorrow,\" Matteo said stiffly. \"I am going to stay tonight because it would break my sister's heart to leave so soon. If you think for one minute, however, that I will leave Cat here with someone who has so little regard for her status as my future wife in his public forum, you can think again.\"\n\n\"My deepest apologies, this breach of protocol will be dealt with, I assure you,\" Marcus assured him. \"I will call to see you in the morning to negotiate a new plan of action, perhaps Marina and Peri can visit you in Melbourne for a few days instead.\"\n\n\"Perhaps,\" Matteo looked dubious. \"If you will excuse us,\" he threw Hella a look of loathing and escorted Cat toward Ricco.\n\n\"Keep an eye on that blonde bitch with Marcus!\" he growled, making Ricco frown and look at Cat, whose cheeks still held the heat of her blush. \"I'm taking Cat back to the townhouse. All bets are off with the watches. You had better text Cosimo and let him know something happened and we had to separate for a while. I'll fill you in later, okay?\"\n\n\"Yeah, alright,\" Ricco said carefully, wondering what the hell happened. \"Give me the watch, maybe the alarm won't go off if I wear them both. I'll call you when I'm coming back,\" he said seriously, taking the watch and slipping it into his pocket.\n\n\"You look beautiful, Cat,\" he bent and kissed her cheek. \"Even more beautiful than I remember, if that's possible.\" He smiled encouragingly at her, then headed in the direction of Marcus and the woman Matteo seemed to loathe at that moment.\n\n\"Hey,\" Ricco said in his easy-going way as he approached a thunderous looking Marcus. \"You know, Matt just stormed out of here with the exact same look on his face. Care to enlighten me?\" he directed his question at the blonde woman beside Marcus.\n\n\"They were over-sensitive, I meant no offence,\" Hella said flippantly with as much bravado as she could muster. She knew the family had spent a lot of time rebuilding their reputation after the debacle with Peri Donati, and she had jeopardised it again. This was something she wouldn't live down easily, but she was sure that once she had a chance to speak with Cat, she could clear it all up.\n\n\"One thing Matt is not is over-sensitive,\" Ricco said, defending his brother.\n\n\"Hella used what she considered a term of endearment but was quite inappropriate for this situation, considering the recipient of that particular term of endearment will marry the future leader of the Vitali family,\" Marcus said in a low growl. \"Unfortunately, it is my fault for putting my trust in the wrong person, and I will do my best to make amends.\"\n\n\"Ah,\" Ricco said, as he got the general idea of what had occurred. \"You sought to prove your power over Cat in front of Matteo?\" He laughed. \"You can't have taken the time to get to know her at all, because, if you had, you would have realised that breaking her trust in that way made you lose any power she allowed you.\" He shook his head as he saw the woman go pale. \"It won't matter if you apologise or threaten to fail her trial now, even if Matteo agreed under those conditions, she will walk away rather than allow you near her again.\"\n\n\"That's ridiculous,\" Hella said, not quite as confident as she had been before speaking to Ricco.\n\n\"How could you not know at least that much about her? She doesn't trust easily or lightly, and you just broke the trust she placed in you by humiliating her in front of the man she loves enough to put herself through this shit. She was forced to come here or lose Matteo, not by him, but the thirteenth. You can't possibly be deluded enough to think that she wanted to be here and would allow you treat her like a submissive in public?\" Ricco continued to talk and laugh in a low, hushed tone. \"That's too funny!\"\n\nMarcus said nothing as he watched the interaction, comfortable in the fact that they wouldn't be overheard with the music from the band and the crowd at the ball buzzing around them. Anyone more than a foot away would have struggled to hear anything but a pleasant laugh from the handsome visiting dignitary. He watched Hella's face as she realised just how badly she had fucked up with the use of just one word, and considered it a fitting punishment that Ricco spoke to her in an equally humiliating way. The two subtly dressed military police came to where Marcus stood, and he smiled, nodding at them, making sure Ricco had finished talking before he interrupted.\n\n\"These men will escort Hella to her room for tonight. I believe my father will want to speak with her once his official duties are dispensed with,\" Marcus said to Ricco. \"If you have more to say, however, I am sure they won't mind if you accompany them. They will direct you back once you are done.\"\n\n\"Not at all, I am enjoying the ball immensely, my friend,\" Ricco said jovially, showing that he did not blame Marcus for the woman's bad behaviour. \"I believe I have promised a few young ladies a waltz, and I would hate to disappoint them.\"\n\n*****\n\n\"Matt, I...\" Cat tried to explain what had happened and her reaction.\n\n\"You don't have to say anything, I know exactly what that was,\" Matteo growled.\n\n\"I'm sorry,\" she said softly. \"I was trying so hard, and I failed anyway.\"\n\n\"You have nothing to be sorry for, and you haven't failed. That woman failed her family by trying to exert some sort of power over you in such a public way.\" He stopped walking and pulled her into his arms. \"You did the right thing, you should never allow anyone to speak to you that way,\" he turned her to look back at the building where people milled around on the balconies. \"You are more important than anyone up there, not only to me but to our whole family, and possibly the Donati family as well. There is no one in this world who has the right to try to dominate you like that in public... Even me.\"\n\n\"I have missed you so much, I still can't believe you're here,\" she wrapped her arms around him. \"Tell me this is all over and you will take me home tomorrow whether I pass or fail,\" she said into his neck.\n\n\"You are coming home with me,\" he murmured, finally kissing her deeply and holding her close to his body. \"Tonight, however, we have a townhouse to use and explore.\" Matteo took Cat's hand and led her away from the ball.\n\nCat wanted to ask about him about Stefano, and about Ricco, but she had to hurry to keep up with Matteo's long strides as he seemed determined to reach the townhouse as soon as possible. She stopped to take off her shoes, making him turn to look at her, chuckling as she ran to catch up to him on steadier feet once the shoes were in her hands.\n\n\"You should have said something,\" he chuckled, swooping her up into his arms and carrying her the remaining distance and across the threshold of the place they were staying. Aware that Ricco would be here at some time during the night, he took the internal stairs two at a time and entered the spacious master suite before placing her on her feet.\n\nWhen he looked into her blue eyes that were watching him in the darkness, he strangely felt a sense of peace. He felt like everything was just right in his world as long as he had his Cat with the beautiful blue eyes that looked at him in much the same way. They belonged together, she was his, and no relationship with some egotistical Domme, or even his brother, could ever change what they had or how they felt. The realisation of that hit him like a thunderbolt.\n\nShe saw the look on his face, felt the emotions he held bottled up ready to erupt and reached out to him. He took her into his arms, roughly pulling her close, making a tiny indistinguishable cry escape her lips. Without thinking, she reached up and curled her hands around the back of his neck and kissed him, her soft lips against his tense ones. When she felt his mouth start to soften under hers, she lifted her head to search his eyes and see the release of the tension inside him.\n\nHe looked down at her in the moonlight that lit the room through the large windows, all tension leaving his body only to be replaced with need and a burning desire for her and her alone. All the times he wanted and needed her over the past month coalescing in him. He drew in a ragged breath, the warm air scented with her perfume filling his lungs, and any and all thoughts of Hella and Ricco quickly left his lust-filled brain, he reached out and cupped the back of her head in his hand and drew her back into his kiss.\n\nHe kissed her hard, his tongue slipping past her lips, sliding erotically across hers. He tightened his hold on her head and deepened the kiss, stealing her ability to breathe as he swallowed her purring whimper. He roughly dragged his hand down her back and dug his fingers into one firm satin covered ass cheek, lifting her against him as he turned around and pressed her back against the smooth, wide post of the bed, pinning her body between it and his own hard, unyielding and aching body. His mouth devoured hers. She tasted more amazing than his imagination as she let him believe and she was his forever now, no matter what anyone said.\n\nCat purred and instinctively reached up to curl her fingers into his hair, arching against the broad expanse of his chest as his hard, heavy body pushed her back against the post. She felt an ache in her belly and a rush of wet heat flood her as she kissed him back, her tongue sliding hotly along his, purring into his mouth as the fingers that dug into her ass pulled her sharply into the solid ridge of his hard, thick cock. She fisted her fingers even tighter in his hair, gasping for breath as his mouth left hers to trail down the side of her neck, his hot tongue darting out to taste what his lips were gliding over. \"Matt,\" she purred.\n\nMatteo slid his hand into her hair and tugged her head back, exposing the smooth column of her throat to his greedy mouth. His teeth grazed her skin as he pressed a hot, sucking kiss to her neck, leaving a mark there for everyone to see, branding her as his. He could feel her breath on his hair, feel her blood pounding through her veins against his tongue, and he took a sharp nip of her neck before his mouth ventured lower, skimming over her collarbone as the hand that was gripping her ass slid higher, cupping her breast in his palm. He roughly dragged his thumb across her nipple and it instantly hardened, straining against the material of her bra and dress. He ground his hips against hers; forcing his straining erection into the softness of her lower belly, pressing her hard against the solid, unyielding post. Her whimpering purrs of surrender were music to his ears.\n\nShe gasped under the firm pressure of his hand on her breast, the roughness of his thumb rubbing against her nipple as it rapidly rose to a hardened point. She had been aching for Matteo's touch for weeks, she wanted to see him, feel him and look into his eyes when he possessed her the way only he could. She sucked in her breath when he trailed his hot tongue across her collarbone, unzipping her dress and letting it slip down her body to pool at her feet. She moved slightly to her right to step out of the dress, sliding across the post until they both toppled to the bed side by side.\n\nMatteo rolled to his back pulling her with him, and she straddled his lap, slowly sinking down, settling her panty covered ass against his thighs, her eyes never leaving his much darker ones that were burning hotter than they had for her before their enforced separation. She reached up and cupped his face in her hands, her thumbs lightly caressing his cheekbones as she gazed down into his eyes, her breath, like his, becoming ragged. Their lips were a hairsbreadth apart, gazes locked, hearts pounding... \"I love you,\" she whispered breathlessly, right before she kissed him.\n\nAn animalistic sound seemed to escape him as he reached up, shoving his fingers into her hair and freeing it from the pins that had held it in place, the heavy, silky locks curling around his fingers as he opened his mouth under her kiss. He immediately took control of the kiss, kissing her hard and deep, his tongue forcing her lips apart as he explored and tasted the hot wetness of her mouth. She was more delectable than he remembered, and her intoxicating taste went straight to his cock, pulsing in the confines of the pants he still wore as he kissed her passionately, his tongue doing things to her mouth that he promised to do to the rest of her body.\n\nHis tongue savoured the taste of her, his teeth pulling lightly on her bottom lip, swallowing her whimper as she pressed even closer to him. His heart was slamming against his ribcage, what blood he had left for his head was roaring in his ears, and his thoughts were nothing more than pure unadulterated lust for her. He tore his mouth from hers, drawing in a ragged breath as he looked down, first at her bruised lips and then up at her blue eyes so full of desire.\n\nShe inched further up his lap until the solid ridge of his erection was nestled snugly against the damp crotch of her lace panties, rocking her hips against his. A smile slowly came to her kiss-swollen lips when a deep groan rumbled up from the very depths of his need for her.\n\n\"Catriona,\" he groaned. She couldn't remember him ever using her full name before, and it couldn't have sounded more erotic. He gazed deep into her eyes as he brushed back a lock of silky hair from her face. \"My kitten,\" he murmured, his desire heavy in his voice. His cock was throbbing against her hot panty-covered flesh, evidence that he wanted her more than anything else in this world, and he feared that if he didn't force himself to take things slow, he was going to take her so hard and so fast that he would hurt her.\n\nHe moved his head the fraction of an inch it took to brush his lips over hers again, kissing her softly but just as hotly as the maelstrom of desire for her that burned inside of him. His tongue lapped at her lips, coaxing them apart, smiling against her mouth as a soft purr escaped her, and he cupped the back of her head in his large hand, kissing her long, hard and deep, his tongue enticing another long hot purr from deep inside her. His mouth left hers only to trail down her jaw to the expanse of her graceful neck.\n\nCat gasped, her fingers curling into his short hair as his mouth trailed down the side of her neck, his teeth nibbling, tongue flicking as he tasted her skin and his mouth found the curve of her neck and shoulder. She couldn't hold it in any longer, and she moaned as his tongue found the hollow at the base of her collarbone, the cool night air caressing her heated skin as he removed her bra, exposing her naked breasts to his gaze. She moaned in a deep purring sound of pure pleasure, arching her spine as he slid his hands around her back, and tender fingers caressed her soft skin as his mouth trailed further and further down her chest in hot, wet kisses.\n\nMatteo caressed the length of her back as he rolled and pressed her back onto the soft bed, his lips and tongue gliding hotly along her skin, tasting her, savouring her. He found one perfect breast with his mouth, his tongue tracing the curve along the underside, his hot breath fanning her skin, drying his saliva as he darted his tongue across her breast, feeling it swell under his touch and her nipple harden further under his wet caress. When she moaned and arched closer, he smiled against her skin and continued his torturous exploration of her breasts. He felt her fingers fist into the material of his shirt to pull it taut across his chest, heard her blissful moan as he lightly flicked the tip of his tongue across her hard nipple. Her moan turned to a purring whimper when he opened his mouth over her breast and drew her nipple into his mouth, biting and letting his teeth graze over it. He reached up and cupped the other neglected breast in his hand, his thumb lightly flicking back and forth over her nipple until it grew achingly hard and he took it into his mouth. Her moans filled his ears as the slight breeze wafted through the windows over her well-sucked nipple, drawing it up into an even tighter bud for his thumb and forefinger to play with.\n\nHer Mistress had preyed on how sensitive Cat's breasts were over the last two weeks, but under Matteo's hands and mouth jolts of electricity seemed to run from her nipples through her body, exciting her and feeding the adrenaline she felt at being with him again. She could feel that all too familiar longing in the pit of her stomach turning into a white-hot flame of desire for him and only him as his hands lovingly moulded themselves around her breasts. She moaned, arching under the assault of his mouth and fingers on her breasts. Her legs restlessly shifted back and forth against the hard, muscular thigh that was wedged solidly between hers, keeping her pinned to the bed so she couldn't escape his touch or his kiss, as if she even wanted to in the first place.\n\nWhen his tongue circled her nipple, and he caught it between the graze of his teeth, pulling on it, she moaned even louder, feeling another rush of wetness saturate her very core and seep out to soak into the crotch of her panties. She moaned in a deep purr, digging her heels into the bed as she arched strongly against him, her soft body coming into sharp contact with his much larger unyielding one.\n\nMatteo smiled against her well-sucked nipple, darting his tongue across the curve of her swollen breast, feeling her sudden intake of breath. He looked up at her, his scorching eyes dark with desire, his breath hot against her heated skin. \"Patience, let me savour this moment of making you mine again,\" he whispered as he kissed his way back up her chest. He nuzzled the side of her neck, kissing her soft skin there as his hand left her breast to slowly caress the smooth, smooth flesh of her torso, down over the slight curve of her belly.\n\nHe shifted his weight to his forearm, his eyes taking in every inch as he bared her body to his hot gaze, save for a pair of white lace panties concealing her pussy, the front already wet with the evidence of her arousal. He sucked in his breath in a soft groan as he stared down at her. She was absolutely beautiful, and she was his forever now that this torturous trial and separation was over, which only made his desire for her that much stronger, making his heart pound painfully in his chest and his cock throb.\n\nHe slowly drew his fingers across the smooth, soft flesh of her belly, her skin much paler against his fingers, feeling her belly quiver under his touch. He traced the scalloped lace edge of her panties with the tip of his fingers, slipping just under the edge on its second trip across her stomach, and he lowered his head, kissing her again. He nibbled and sucked on her lips, her moans of pleasure filling his ears as her hips lifted up off the bed, seeking his touch. Her lips moulded to his, her hands coming up to curl into the front of his shirt, pulling him closer to start on the buttons. He deepened the kiss, his tongue seeking and gaining entrance into her hot, wet, and oh so sweet mouth, and he eased her panties down over her hips as she lifted them higher.\n\nHe quickly whisked them down her legs, his large, hot hand gliding up the inside of one quivering thigh, his long, thick fingers encountering smooth, slick flesh and a scant amount of saturated curls at the top of her pussy. He swallowed her needy whimper as he softly caressed her, his fingers gathering up her juices before he parted her even wider and slipped two fingers between her silky smooth and slick folds, caressing her. She grew even slicker with each caress, his fingers easily slipping along her wet flesh as his tongue dipped and retreated from her mouth, and he groaned as her hips arched strongly against his hand. He gently pushed his moistened middle and ring finger deep into her hot, tight pussy and rubbed her swollen clit with the pad of his thumb, swallowing her blissful cry.",
        "Cat's body sung. His tender, passionate kisses were intoxicating, his rough yet gentle touch maddening, but when he relieved her of her panties, slid his hand up her leg and pushed two long, thick fingers inside her dripping wet pussy, she lost what feeble grip she had on the still sane part of her mind. She tore her mouth from his, pressing her forehead against the strong column of his neck, struggling to catch her breath as he slowly worked his fingers in and out of her slick channel, fucking her with them as his thumb massaged her sensitive clit.\n\n\"Matt -- ay - oh...\" she moaned in a long drawn out purr as she dug her heels into the bed, arching her hips as her thighs fell further apart, granting him complete access to her body. He awakened more than just her need and desire for him, he had them firing in rapid succession, igniting that white-hot need inside her until she felt like she was going to be engulfed in flames. She could feel herself getting even wetter under his deliberate manipulation of her body, her juices coating his fingers and dampening the inside of her thighs. The need to cum, the desire for this man was quickly overtaking her mind, her entire body, and she frantically clutched at the front of his shirt, her eyes closing tightly as her whole body started to tremble.\n\n\"Look at me, Kitten. Look at me when you cum,\" Matteo said when he saw her eyes start to close. When she opened her eyes, and he was once again gazing down into those pools of vibrant blue, he worked his fingers a little faster in and out of her slick pussy, feeling her tighten around his fingers as he pushed her closer and closer to the verge of absolute pleasure. Her breath was hot against his neck and coming in quick, short panting whimpers, and he could feel her body start to tense and he held her gaze as her orgasm started to take control of her body.\n\n\"Yes, Kitten. Cum for me!\" he urged with husky words, as his thumb, slick with her juices, rubbed hard at her swollen and hyper-sensitive clit. His invading fingers curling against her G-spot, applying just enough pressure to it as he simultaneously fisted his fingers in her hair, pulling her head back roughly, and swiftly closed his mouth over hers to swallow her cry of surrender as her orgasm tore through her. Cat's whole body stiffened into a hard arch as she came. He held her tightly, his fingers unmoving inside her contracting pussy as her body shuddered against his, her moans hushed by his mouth.\n\nCat drew in several much-needed breaths as she gazed up at Matteo's handsome face, tense with desire as the last waves of her orgasm rippled through her, her body still trembling. She sucked in a quick breath when he eased his thick fingers from her still-contracting and dripping pussy and pressed them to her mouth to suck clean, a devilish smile coming to his lips as her lips parted and her tongue swirled around them. She could feel the cool evening breeze from the open windows across her body, cooling her heated flesh and drying the beads of perspiration that dotted her skin. She was pleased that he hadn't been hell-bent on reclaiming her after his obvious anger from meeting Hella, rather than making sure she got to experience the most pleasure imaginable at being back in his arms and his bed.\n\n\"I've always been yours,\" she whispered, \"always.\" She reassured him. She lifted her head to brush her lips against his in a soft, yet powerful kiss, letting him taste her essence that lingered on her lips.\n\nMatteo growled out a harsh expletive at her solemn admission, and he kissed her, his fingers softly caressing the soft skin along her hip and thigh. He deepened the kiss, his tongue seeking out the hot, wet recesses of hers, his fingers gliding over the curve of her hips, nails lightly scratching her soft skin. He'd wanted her from the first night they met, and he wanted her even more now. The need, the desire to make her his burned inside him, kept him alive, and ultimately drove him to make sure his family and their influence would never come between them again.\n\nHe had to force his mouth from hers, and he gazed down into her eyes as he gently combed her soft, silky dark hair back from her face. \"You've got me, just as much as I have you,\" he whispered his own admission of the love he felt, pressing a soft kiss to the tip of her nose. \"And one of us has on far too many clothes,\" he said with a smile, and pushed himself up off of her, standing beside the bed to quickly strip off his clothes.\n\nCat stared up at him, licking her lips, watching as he unbuttoned his shirt and his broad chest was revealed. She sighed appreciatively, resisting the urge to help him. He was so handsome; broad shoulders, bronzed skin, hard sculpted muscles and a trim waist. When his hands went to the fastening of his pants her breath caught. She'd been with Hella for so many weeks that she had almost forgotten how magnificent, how powerful, how much Matteo took her breath away. Her gaze instantly focused on his hard, throbbing cock as it bobbed in the air before her. He seemed somehow larger than she remembered; the veins that interlaced his cock distended and the smooth tapered head was a deep shade of purple that was already glistening with a clear fluid that seeped from the tip, his balls hung heavily below the object of her desire. She could feel the second wave of moisture saturate her already wet and aching pussy, and she bit her bottom lip, once again staring up at him.\n\nMatteo lowered himself to kneel between her parted thighs. He slipped his large hands under her legs, cradling them, caressing them slowly higher and higher, pressing soft, wet kisses to her inner thighs as he went. He slowly drew the tip of his tongue along the crease of her thigh where it joined her pelvis, smiling against her dewy skin when she purred deeply and started to squirm, breathing in the heady, intoxicating scent of her pussy. And then his tongue took the same path his fingers had just moments ago, and he curled his hands around her thighs, holding her open to his wicked kiss as a blissful cry escaped her, her fingers instantly tangling into his hair and her hips lifting towards his mouth, pressing even closer.\n\nThe taste of her exploded on his tongue and went straight to his cock, making it painfully throb, and he groaned in denial of his need to fuck her as he slowly drew his tongue up the smooth, slick wall of her lips. He tasted her, savoured her, his tongue lapping deep, flicking teasingly over her swollen and sensitive clit, his strong hands holding her steady as her hips started to move. He licked her even deeper, fucking his tongue in and out of her pussy as her second orgasm rose in her. His need to reclaim every part of her pushed him to make her cum again like this and erase any trace of the Domme who had tried to lay claim to her.\n\nCat squirmed on the bed, trying to get away from Matteo's torturous mouth. When his tongue started to lap at her wet, aching flesh, she lost control entirely and cried out, her legs trembling against his shoulders, toes curling as she fisted one hand into the bedspread and the other into his hair. His hands gripped her and pressed her harder against his mouth while pushing her legs further apart, allowing him even greater access to her dripping wet flesh. She arched her hips strongly within his vice-like grip, and then she felt it hit her, stronger and more powerful than the first one. When her body started to tense, she barely heard his groan of pure satisfaction against her dripping flesh when he fastened his mouth down on her pussy as her orgasm tore through her body.\n\nMatteo held her hips securely until the last wave of her orgasm rippled through her, his tongue gently lapping at her. He pressed a soft kiss to her lips before he moved further up her body. His hand gliding along her soft skin dotted with perspiration. He dragged his thumb across her hard nipples before sliding his fingers into her damp hair and closing his mouth over hers, kissing her and letting her taste herself on his tongue as it invaded her mouth with a deep groan. His cock was achingly hard and throbbing, the tip swollen and leaking pre-cum, and he reached down, smearing the clear fluid around the sensitive glans before running the swollen head all along her wet flesh. He took long minutes teasing her, caressing her as he guided his hard cock towards her entrance and swallowing her deep purring moans. He tore his mouth from hers, his ragged breath hot against her face as he gazed down into her eyes filled with the same desire for him that he felt for her.\n\n\"My Kitten!\" he growled as he slowly pushed forward, easing into her wet pussy, feeling her slick walls close around the girth of his cock. He held himself in check as he slid slowly deeper inside her, watching as her eyes started to darken, cupping the sweet curve of her bottom in one large hand as she instinctively arched against him, and he let out a deep, shuddering groan when he became fully embedded in her velvety warmth. She was nothing short of pure heaven to him.\n\nA long, drawn-out purring moan escaped Cat's lips as she wrapped her arms around him, her fingers digging into taut muscle, lifting her hips as he slid deep inside her, her body slowly adjusting to his thick cock, her fervent gaze holding his smouldering one the entire time. She could feel his cock, hot, hard and pulsing deep inside her for a brief moment of stillness, and then he started to move. The sensations of having a real flesh cock after weeks of enduring cold hard dildo's and vibrators were powerful, and her breath caught in her throat at each slow, steady thrust, inflaming her desires for him, and she wrapped her legs around him, her breath coming in quick, short pants. She tipped her head back, looking up into his burning gaze that seemed to look into her very soul.\n\nMatteo curled his fingers into her hair, gazing down into her eyes. Her face was flushed with passion, and a smile turned up the corner of his mouth at the sound of her breath catching in her throat when he thrust deep into her and held himself there, feeling her hug his hard cock tight within her. He lowered his head and kissed her, his tongue caressing her lips, and he groaned when she lifted her head just enough to press her mouth tighter against his, and he kissed her long and hard and deep, swallowing her blissful cry as he started to thrust again in long, steady strokes. With a groan, he broke the kiss and pressed his lips to her ear, each hot exhale of breath caressing her skin and damp hair.\n\n\"Catriona. Mine! My beautiful. My adorable. My Kitten. Mine,\" he managed between hard, pounding thrusts inside her willing body. He dragged his thumb across her stiff nipple and tugged gently on the sweet nubbin of flesh, her sharp, pleasure-filled cry echoing through the darkness. He could feel her edging toward another climax, and he increased the pace of his thrusts till her whimpers became cries of pleasure. He glided his rough hands down her sweaty body and along the length of her thighs, pushing them higher along his torso as he thrust even deeper inside her, pushing her closer, his own need for gratification clawing at him.\n\nCat held onto him tightly, feeling the strain of his body as he held his desires in check, his muscles tightening under her grip as each deep thrust inside her pushed him that much closer as well as threatening to push her headlong over the edge. She pressed her forehead against his sweaty shoulder, gasping for breath, struggling to hold her orgasm at bay until he would come with her. Her knees were high alongside his ribs and her legs spread wide, her juices coating his cock as he thrust harder and deeper, the sound of his sweaty body slapping against hers, his groans filling her ears, his breath hot on her skin. Her heart boomed in her chest to match his thrusts, and her legs were starting to tremble along his sides as her impending orgasm drew even closer. She dug her fingers deep into the indentation of his spine, feeling his taut muscles flex under her hands.\n\n\"Matteo!\" Her orgasm started to seize control of her body before she was ready. She pushed her heels against the curve of his hard, muscular ass, lifting her hips higher, taking him impossibly deeper into her wet pussy, clutching at his thick, throbbing cock, the white-hot need exploding in her mind and body and she cried out again, \"Matt!\"\n\nMatteo twisted his fingers into her hair, tipping her head back so he could gaze down into her eyes, her lips parted as she gasped for breath, her beautiful face even more lovely in orgasmic bliss. He didn't slow the steady rhythm of his thrusts, his thick cock gliding in and out of her pussy as it tightened around him, squeezing him hard as he pushed her headlong into another orgasm. He was so close, and he gritted his teeth, resisting the urge to cum with her, inside her.\n\n\"Come, Kitten, come for me!\" he commanded. He didn't know how much longer he could last with her cries of pleasure filling his ears, and he held himself still inside her as her body trembled and shook beneath him. He couldn't endure the pleasure any longer, he had to join her. He had wanted to make love to her for hours, all night if possible, but his self-control was not that strong, and he began to move within her again.\n\nCat struggled to catch her breath as her body shook from the throes of her third intense orgasm. She sucked in her breath when she felt his cock throb against her hyper-sensitive flesh, and she gazed up into his desire filled eyes, seeing his impending orgasm threatened to destroy him. She cried out when she felt him start to move again, gasping as his unyielding thrusts sent his hot, hard cock deep inside her pussy, stoking the fire that had yet to die down inside her. She gasped when his eyes locked with hers, and he interlaced their fingers, pressing her arms down to the soft bed beneath them, holding her steady as his hard driving thrusts began to rock her whole body. Her cries rose along with his thrusts. She cried out yet again as her orgasm continued to ripple through her body in waves, making her arch against him, taking his cock as deep as she could as he drove himself towards completion. She curled her fingers tight over the back of his hands, locked her legs around him, holding onto him as best she could as her breath was forced from her lungs with each powerful thrust, her body pushed higher up the bed.\n\nMatteo gritted his teeth together. She was so hot, so wet and so damn tight. He could feel his orgasm clenching him around his spine; feel his balls start to draw up tight against his body, his own cum starting to flow. He gnashed his teeth together, tightened his grip on her hands till his knuckles were white, fighting the urge to cum as his cock swelled. He lost his battle. A deep, rumbling groan rolled out of his chest and he thrust hard, holding himself deep inside her as he came in a hot, thick load as her tight pussy milked another and yet another surge of hot cum from his heavy balls, draining him. He pressed his sweaty forehead against hers, a weakening groan escaping him as the last of his strength left his satiated body. \"Kitten,\" he murmured in a whispering moan.\n\nCat accepted the full weight of his muscular body as he collapsed, spent, on top of her. Then, what could have been a lifetime, or rather only a few moments later, she felt his grip on her hands slowly slacken and then come free entirely as he slowly raised himself off of her. He carefully eased his still swollen cock out of her, and a tiny mewl of disappointment escaped her when he left her entirely. She felt a sudden emptiness as he moved to her side and then completely adored when he wrapped his arm around her and pulled her snug against his hot, sweaty body, his leg possessively covering both of hers. The breeze gently wafted over them, drying the beads of perspiration that dotted their skin. She slowly smiled when Matteo pressed a tender kiss to her forehead, gently pulling the damp strands of hair back from her face. She ran her fingers over the smooth skin of his shoulder, feeling his muscles relax under her touch.\n\n\"I missed you so much,\" she whispered, her breath soft but still ragged. She noted his breathing remained laboured as well as she trailed her fingertips across his chest.\n\nMatteo chuckled, gazing down into her bright blue eyes that looked up at him with love, trying to regain control over his breathing. He softly drew his finger across her cheek still flush from her orgasm, slowly trailing across the fullness of her bottom lip, smiling when she kissed his fingertip. \"I missed you more.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "lesbian bdsm",
        "mistress",
        "ball",
        "waltz",
        "reunion",
        "drama",
        "lesbian drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-17"
}