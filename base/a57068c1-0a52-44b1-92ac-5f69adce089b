{
    "title": "Missing the Cut",
    "pages": [
        "\u00a9 2003 by Thrillerauthor\n\nFORT WORTH, Texas - The eyes of the sporting world are on Annika Sorenstam today as she becomes the first woman golfer in over fifty years to play on the PGA tour. Although most of the men playing alongside her in the Colonial Open have been supportive, Denny Grimes has made no secret of his disdain. The diminutive Grimes, who has won two tournaments on the PGA tour this year despite being the shortest player off the tee, vowed to demand a place on the women's tour and play in a skirt if Sorensen outscores him at the Colonial.\n\n* * *\n\nAs the fates would have it, Sorenstam and Grimes were paired together in the last twosome to tee off on Friday. It was the round that would determine which golfers got to advance to the final two days of the tournament, and the gallery that followed them around the course that afternoon made Arnie's Army look like the Baghdad defenses. I was there, following it all as a stringer for the Wall Street Journal, and the story that follows transcends sport. The battle of the sexes will never be the same.\n\nAnika got off to a good start the day before, posting a round of 71, one over par. Grimes was comfortably ahead of her at two under par when they teed off together on Friday, and he managed to increase his lead to four strokes before the wheels fell off on the back nine. It all happened with shocking swiftness: Anika birdied the seventeenth hole with a long putt, and after she drove into the center of the fairway, Grimes hooked his drive into deep rough. He would have been better off with a lost ball, but the marshals were able to find it, buried in a thicket and screened from the green by a copse of trees. Grimes went for the pin, and although he managed to get the ball up in the air, it ricocheted off one of the trees and caromed into a ravine. \n\nThree strokes later, an exhausted Grimes finally made it to the green, where Anika was waiting for him with a sweet smile, lying two. Grimes labored over his putter like a heart surgeon over an operating table, but he rimmed the cup. When Anika drained her eight foot putt for birdie, the scoreboard behind the eighteenth green said it all: Anika Sorenstam had a composite score of 1 under par, which made the cut. Denny Grimes finished at even par, and his life would never be the same.\n\nGrimes was besieged by reporters as he fought his way to the clubhouse, and I thought I could see tears in his eyes as he tried to answer their questions. Most of the sports writers were respectful, but the event had become a media circus, attracting feature writers, fringe publications, and a rogue reporter for a notorious shock jock. Things hit rock bottom when a voice boomed out, \"Hey Denny, what's your dress size?\" Poor Grimes retreated into the locker room amidst a chorus of laughter and catcalls.\n\n* * *\n\nSay what you will about Denny Grimes, but he is a man of his word. Or rather, he was a man of his word, and I am not referring to honesty here. Two weeks after his humiliating defeat at the Colonial, he missed the cut at his next tournament. It was the beginning of a long downward spiral that was excruciating to watch, although fascinating to report. The demise of his golf game may have been precipitated by his collapse on the eighteenth fairway at Colonial, but it was accelerated by gleeful revelry in the galleries as his misfortunes continued. \n\nTo my surprise, Denny's harshest critics were not women. It was the men who taunted him, as if his defeat had somehow let down their half of the population. \"How's it feel to lose to a broad?\" one miscreant shouted out in the middle of Denny's backswing when he teed off his first time out after the Colonial. Denny shanked his drive out of bounds, and never recovered. The following week, he missed the cut again, spraying the golf course with errant drives and approach shots. He managed to make the cut the next week, and was playing well enough to be in one of the final pairings on Sunday, which only made matters worse. His performance on national television that day was among the most painful things I have ever witnessed. The gallery hooted in derision as Denny put three balls into water hazards on the back nine, and a small riot broke out when the outmanned security guards tried to evict some loudmouthed spectators.\n\nI was following Denny exclusively now, in preparation for a long profile that I hoped to sell to one of the leading sports magazines. I observed him closely during this period, both on the course and off. He must have thought I was stalking him, but it was not until my article appeared in Sports Illustrated that he finally confronted me.\n\nDeath of a Thousand Cuts by Carrie Freese\n\nThe gradual disintegration of a human being is a terrible thing to watch. Yet that is what is happening on the PGA tour to Denny Grimes. Ever since he blew up on the eighteenth hole during the second round of the Colonial, the former PGA Champion and Ryder Cup hero has been a shadow of his former self. He walks the course now with a haunted expression, and by his own account, he is \"putting like a basket case.\"\n\nHis money winnings have plummeted. His sponsorships have dried up. He has given his private jet back to the leasing company, and flies coach to the tournaments that still accept him. If he continues at his current pace, he will lose his PGA card by the end of the year.\n\nThen there is the fan mail. Tons of it, delivered daily in huge sacks, piled up outside his home in Orlando to greet him when he returns from the latest tournament disaster. Virtually all of it negative, and most of it caustic, although nothing like the barrage of one-liners delivered nightly by Letterman and Leno. \n\nThe only bright spot is the one million dollar award promised by one of the major tabloids if Grimes can make the cut at an LPGA tournament. But even that will elude him, since the president of the women's tour announced last week that they will never allow Grimes to make a mockery of women's golf by keeping his promise to wear a skirt in one of their tournaments. \n\n* * *\n\nI was sitting in the coffee shop of my hotel, waiting for the opening round of the next tournament Denny was scheduled to play in, when he came up to my booth and asked me if he could join me. The issue of Sports Illustrated with my article was clutched in his hand.\n\nHe was much better-looking up close than he appeared on television. His sad eyes were framed by long lashes that most girls would have killed for, and his chiseled nose and high cheekbones would have been the envy of fashion models. His skin was smooth and deeply tanned, and he carried his slight frame with unusual grace. But what I noticed most about him were his hands. His fingers were slim and almost delicate, despite the thousands of hours of practice on the driving range and putting greens.\n\n\"You did a nice job on my obituary,\" he said in his soft voice, which had just a trace of a southern accent. Not the broad twang of a good old boy, but the melodious drawl of Virginia aristocracy. \"Are you going to cover my funeral too?\"\n\nCompletely disarmed, I stammered something about how sorry I felt for him. \n\n\"Poor old Denny Grimes,\" he said with a sigh. \"He used to be one hell of a golfer.\"\n\n\"Maybe you'll snap out of it this week,\" I said without conviction.\n\n\"Nah, I'm done for. My head is so screwed up, I'll never get back into the zone again.\" The zone is that special place, known only to professional athletes at the highest level, where the mind lets the body take over and do incredible things. \"Maybe I can caddy. You'd enjoy writing an article about that, wouldn't you?\"\n\n\"No, I wouldn't. Are you telling me you're going to give up golf?\"\n\n\"Look, my PGA days may be over, but I'll never get golf out of my system. I just love it. Can you understand that?\"\n\nI tried to respond, but he kept on talking. \"The funny thing is, it's not the tournaments, or even playing the game. I love the smell of the fresh cut grass. The sound of the birds. The wide open space, even when you're surrounded by a big city. That's what's killing me, knowing that I used to get paid for playing golf, and knowing that I'll never be able to make a living at it again.\"\n\nThis was a side of Denny Grimes that no one had ever seen. Notorious as a womanizing playboy, he had gone through three marriages, and left untold broken hearts across the country. Who knew that he had a sensitive soul? Maybe I was on to more of a story than I realized. At that precise moment, the idea hit me.\n\n\"So the money's gone?\" I asked off-handedly.\n\n\"Pretty much. With three hungry ex-wives to feed, and nothing coming in, I'm running on empty. My attorney is recommending a personal bankruptcy filing. Wait till the comedians get wind of that.\" \n\n\"Too bad you can't collect that million dollars by making good on your promise.\"\n\n\"Damn right. And don't think I wouldn't do it. God knows, I need the money.\"\n\n\"Suppose I told you I know how you can pull it off?\"\n\n\"Come on, Miss Freese, you know what the LPGA said about that. Those old bags won't let me near one of their tournaments.\"\n\n\"It's Carrie. And there is a way, if you have the balls.\"\n\n\"What are you talking about?\"\n\n\"I had breakfast yesterday with the Vice President of Marketing of Revlon. They're sponsoring an LPGA tournament next month, and she was moaning and groaning about how pitiful the presales were. Plus, they've committed to a huge commercial buy for the television broadcast, and nobody is going to be watching.\"\n\n\"What does that have to do with me? The LPGA won't let me within a mile of the golf course.\"\n\n\"Not if they recognize you.\"\n\nI could see it was starting to dawn on Denny. \"No way,\" he said with a laugh. \"You can't just walk onto a professional golf tournament, even a women's tournament. You have to qualify or have a player rating.\"\n\n\"Not if you get a sponsor's exemption. How much would it be worth to Revlon to get you into their tournament? And can you think of anybody better than them to help you pull it off?\"\n\n* * *\n\nAs I knew they would, Revlon jumped at the idea. They were intending to drop their LPGA sponsorship anyway, and their beleaguered CEO, facing earnings pressure, was desperate for some way to make a splash with their new product line, \"Metamorphosis.\" \n\nI was sworn to secrecy, and in return all I asked for was the right to break the story after Denny either met the challenge, failed trying, or was unmasked in the process. For the next two weeks, I saw nothing of him as he slipped away to a spa in Baja California and disappeared. The golf writers had lost interest in him, he had become old news on the comedy circuit, and everybody assumed that he had faded away into oblivion at the age of 32. The sporting press took no notice when Revlon quietly sponsored an unknown golfer, Denise Kamm, and granted her an exemption to play in the Revlon LPGA Classic.\n\nThe tournament was scheduled to take place the second week in July, at Fairmount Country Club in northern New Jersey. A few days before the pre-tournament events began, I was relieved to get an email from Denny. I had my press credentials for the tournament, but I was hoping to get an interview with him before he made his appearance, and I was dying to learn how he planned to pull it off. The email was short and to the point: \"Meet me for lunch on Saturday at the Short Hills Hilton. I'll be waiting for you in the restaurant at noon.\"\n\nI rented a car and drove through the Lincoln Tunnel to New Jersey that Saturday morning, not knowing what to expect. The Short Hills Hilton was a five star hotel, so I wore something conservative, a navy blue blazer and white wool pants. I got there a little early, and I wandered around the lobby after parking my car, thinking I might meet up with Denny before our lunch date. But there was no sign of him. At noon, I presented myself to the maitre'd and asked if Mr. Grimes had been seated. He scanned his list of reservations, and told me nobody by the name of Grimes was expected.\n\nThen it sank in. \"Do you have a reservation for a Miss Kamm?\" I asked hesitantly.\n\n\"Yes, of course, she is already her. Are you supposed to meet her too?\" he asked me with a quizzical smile.\n\nI stammered something, and he motioned for me to follow him. He led me to a table occupied by a beautiful girl, seated by herself and studying her menu. She looked up and smiled at me as the maitre'd pulled back my chair.\n\nI couldn't take my eyes off her, or should I say, him. Speechless, I stared at Denny Grimes, who had been transformed into one of the most stunning women I have ever seen. His hair, now shoulder-length, fell in soft blonde curls around his face, which had been made up to perfection: soft pink lips, a hint of blush in his cheeks, just the right amount of mascara on his exquisite lashes, and fine brows arching over his sparking blue eyes. He was wearing a navy blue top with white polka dots, and a thin gold chain with a heart pendant dangled against his pert breasts. \n\n\"Well, aren't you going to say something?\" he finally asked, in the soft, sweet voice of a southern debutante. He raised his glass to sip his Arnold Palmer, and I noticed the same delicate hands that I had seen before, only now his nails were beautifully manicured. He brushed a wisp of blonde hair away from his face, revealing a pearl earring set in platinum or white gold.\n\n\"My God, you pierced your ears,\" I finally blurted out. \n\nHe blushed and shook his head. \"What were you expecting?\"\n\n\"I don't know. It's just\u2026it's just unbelievable. You're so\u2026beautiful.\"\n\n\"I had a lot of help. But most of all, it's a state of mind.\"\n\n\"What do you mean?\" I asked, still staring at him.\n\n\"When I decided to become a professional golfer, I knew I would have to put everything I had into it, one hundred percent, if I was ever going to have a chance to succeed. It's the same with anything. I knew if I was going to convince the world that I was a woman, I'd have to go all out.\"\n\n\"I hope you didn't do anything permanent,\" I said with a nervous laugh.\n\n\"Don't worry, just the ears, and they'll grow over, or so they tell me.\"\n\n\"But your hair\u2026.\"\n\n\"A weave, and extensions, done by one of the best stylists in southern California.\"\n\nI shook my head as I continued to study him. Reaching out to touch his hand, I slid my fingers up his forearm, which was smooth and hairless.\n\n\"Hot wax,\" he said. \"Everywhere.\"\n\n\"Everywhere?\" Not believing that I was doing it, I lowered my head under the white linen tablecloth. Sure enough, he was wearing a skirt or a dress, sheer nylons, and low heeled pumps.\n\nI looked up to see a waitress staring at me, and it was my turn to blush. I ordered an iced tea, and waited for her to leave before I said what was on my mind. \"I can't believe you've gotten so into this. Is there something I should know about you?\"\n\nHe shook his head and gave me a rueful smile. \"If you're asking me whether I like what I've done to myself, the answer is no. But if convincing a couple of million people that I'm a girl is going to win me a million dollars, then I've got to be all girl, or else I'll never have the confidence to get away with this. You tell me. Do you think I can pull it off?\"\n\n\"I'll say. You're amazing. I mean, not just the way you look, but your voice, and the way you talk. Even your gestures. Everything about you is so feminine. You gotta admit, Denny, it's a little weird.\"\n\n\"Tell me about it. In between the spa treatments and the body sculpting with a personal trainer, I had two straight weeks with a drama coach who specializes in helping guys act like girls for parts in plays and movies.\"\n\n\"I just can't believe you did all this for a golf tournament.\"\n\n\"Once Revlon got behind this, things got way out of hand. I mean, it must have cost them a fortune. I almost walked out on them when I found out what I had gotten myself into. But once I realized there was a chance we could make this work, I decided not to hold anything back.\"\n\nThe waitress returned to take our orders. I watched Denny closely as he bantered with her before ordering a Cobb salad with the dressing on the side. She had absolutely no clue that he was really a man, and how could she? His speech pattern and his mannerisms were in perfect synch with his appearance.\n\nI found myself talking to him like he was another woman, and for the next hour we chatted about this and that as we ate our salads. He told me about the crash diet they had put him on at the spa, which combined with an aggressive aerobics program had resulted in the loss of over ten pounds. Denny had been slim to begin with, but now his weight was ideal for his height as a woman, and he told me proudly that his butt and abs were tight as a drum. His stomach must have shrunk, he said, and he pushed his plate back after eating only half his salad. As I watched him dip his fork sparingly into the dressing, taking dainty bites, I began to get a feeling for how intense his training must have been.\n\nAfter the waitress brought us our check, Denny signed for it with a girlish hand in the name of Denise Kamm. \"You're staying here at this hotel?\" I asked him.\n\n\"That's right. The golf course is a few miles away. I don't want to push my luck, so I'll skip the practice rounds, but there's an event before the pro-am on Wednesday that I just found out about. That's why I asked you to meet me here.\"\n\n\"What do you mean?\"\n\n\"The Short Hills Mall is directly across the street from us. I'm going to need your help in picking out a few things to get me through all this.\"\n\n\"Didn't Revlon send anybody to help you?\"\n\n\"They offered, but I refused. I've got to play tournament golf in a few days, even if it's women's golf, and the last thing I need is some fruitcake hanging around telling me how to put on my makeup.\"\n\n\"You mean you got dolled up like this all by yourself?\"\n\n\"Yes,\" he said with a sad smile. \"It's one of the things I hate about being a woman. It used to take me ten minutes to get up and go. This morning I spent two hours putting myself together.\" We got up to leave the table. \"How did I do?\"\n\nFor the first time, I saw him from head to toe, and once again I was speechless. He was wearing a two-piece dress with a drop waist and a pleated skirt a few inches above his knees. His legs were terrific, and he walked in his heels like he had been doing it all his life. I followed behind him as he slung his purse over his shoulder and started to walk towards the door, watching the heads of most of the men in the restaurant turning his way as he passed beside their tables.\n\nI caught up with him as we walked through the lobby. \"You haven't answered my question,\" he said.\n\n\"You're gorgeous. And you sure don't need any help from me.\"\n\n\"That's where you're wrong,\" he said as we stepped outside into the July heat. He took a pair of designer sunglasses out of his purse and led the way across the hot asphalt parking lot towards a pedestrian crossing to the mall. \"I have to go to a press dinner on Tuesday night, and I haven't a clue what to wear. You'll be there, so I figured you'd be able to help me.\"\n\n\"How are you fixed for golf clothes?\"\n\n\"No problem there, except I realized when I watched the LPGA event on TV this weekend that I'll probably be the only player wearing a skirt in the damn tournament. Why didn't someone tell me they all wear shorts or long pants before I made that stupid bet?\"\n\n\"You look good in a skirt,\" I said as the light turned green and we started across the six lane highway. \n\nWe had to hurry, and Denny's true voice came back to him as he tried to run in his heels. \"Damn these fucking shoes!\" he shouted as he tottered across the street. \n\n\"Good thing no one heard that but me, or you'd be on your way home right now,\" I said as we entered the enormous mall. It was delightfully cool inside, and we stopped to look at the directory of shops and department stores while Denny regained his composure.",
        "\"Let's get this over with,\" he said, getting back into character. \"The sooner I can get out of these stupid heels and stockings, the better.\"\n\n\"Now you really are starting to sound like a woman,\" I teased him. \"Ah, they have a Talbot's. Let's try our luck there first.\"\n\n\"What are you going to wear Tuesday night?\" he asked me as we walked through the mall.\n\n\"Hmmm\u2026I hadn't really thought about it. Just a dress, I guess.\"\n\n\"That's so helpful.\"\n\n\"Don't worry, I'll help you find something. What do you feel like wearing?\"\n\n\"Huh?\"\n\n\"Do you want to wear pants or a dress?\"\n\n\"Give me a break. Of course I want to wear pants, but I'm afraid if I do, I'll start walking around like a guy.\"\n\n\"Really?\"\n\n\"My acting coach warned me about it. He told me the more I dress like a girl, the more I'll find myself acting like one.\"\n\n\"So it's a good thing you have to play golf in a skirt.\"\n\n\"I guess.\"\n\n\"Tell me something, Denny. Deep down inside, aren't you enjoying this, just a little bit?\"\n\n\"I told you, all I'm thinking about is that million dollars.\" We got to Talbot's, and I led Denny over to the racks of summer dresses, which were already being pushed aside for the fall arrivals. I found a nice black sheath with tiny silk flowers woven into the fabric, and asked him his dress size. He screwed up his face and said, \"Fourteen, I think.\" The biggest one they had was a twelve, but I knew that Talbot's sizes ran large, so I suggested that he try it on. I watched him as he held it up against himself and turned this way and that, studying his reflection in a full length mirror. A saleswoman intercepted us, and led Denny to one of the changing rooms.\n\nI browsed through the store while I waited for him, lost in thought. Was I really shopping for a cocktail dress for the former PGA champion? What a story! I was sworn to secrecy until after the tournament, but then I was free to tell the world. This could be a book! I had to get some pictures of Denny now, like this. My reverie was interrupted by a sweet voice behind me. \"How do I look?\"\n\nWhen I turned around, I actually gasped. Denny Grimes was absolutely adorable in his little black dress. It was short for Talbot's, just skimming the tops of his knees, and it draped his slender body like it was made for him. His white bra straps were visible, but that could easily be taken care of, and he would need a black half slip. I wondered if he had any sheer black stockings and a pair of black shoes. \n\n* * *\n\nA few hours later, we spied an open table at Starbucks, and aced out two guys who saw it first and let us have it. Laden with packages, we sat down gratefully and relaxed over ice cold mochas, kicking off our shoes and giggling like schoolgirls as we recounted our adventures at the mall. Denny had scored a black Coach handbag at 50% off, and a pair of black heels at Nordstrom's that were to die for. His black lingerie and stockings filled another shopping bag, and we even found a pearl pendant that would be perfect with his earrings.\n\n\"Are you sure you're not having fun with this?\" I asked him as we got ready to leave.\n\nDenny let out a deep sigh. \"Do you have any idea what it's been like being Denny Grimes for the past two months? Having total strangers come up to you on the street and call you a loser? Watching yourself get trashed every night on TV? Getting hate mail from nut jobs around the country? The first time I went out in public dressed like this, I was scared to death. It wasn't until I started to get my confidence up, after I was sure that nobody could tell that I was really a guy, that I realized something. It was like I had become invisible. I mean, I was still Denny Grimes, but now when I went out in public, nobody recognized me.\n\n\"So when you ask me if I like being a girl, all I can say is, it's a hell of a lot more fun than being the guy that I was. When I put on makeup and a dress, I think of it as escaping into my secret identity.\"\n\n\"Superheroine Denise Kamm! I love it. How did you come up with that name?\"\n\n\"Pronounce it slowly,\" he said with his sweet southern accent.\n\n\"Denise Kamm. Oh my\u2026Denny's scam!\"\n\n* * *\n\nI returned to my apartment in New York late that afternoon. Dateless, as usual, I spent Saturday evening scouring the Internet for a hotel to stay at during the tournament. The Short Hills Hilton was way above my budget, and it took me a long time to find a place I could afford. Three days later, I felt slightly ridiculous walking across the parking lot of my crummy motel on Route 22, dressed to the nines for the media bash at Fairmount. I got lost once trying to find the club, winding through the back roads of rural New Jersey before I got straightened out. The cocktail reception was in full swing by the time I parked my car at the far end of the lot and made my way into the Fairmount Room.\n\nDenny was surrounded by a group of guys near the bar. He spotted me when I walked in and broke away from them, greeting me with a big smile. \"You made it,\" he said. \n\n\"I got lost out in the sticks. Look at you!\" Denny was stunning in his black dress, in stark contrast to most of the women in the room. Some of the golfers hadn't even bothered to change after their practice rounds earlier in the day, and the buffet line was an eclectic montage of shorts, pants, and a few skirts and dresses. The men, mostly reporters and a few Revlon executives who were in the dark about Denny, were better dressed than the women. \"Sorry to take you away from the guys,\" I said.\n\n\"That's okay. They'll just figure you're my girlfriend. I'll bet half of the women in here are gay.\"\n\n\"That's a myth!\" I said as I surveyed the room. \"How are you getting along with the competition?\"\n\n\"They don't even know I exist. As far as they know, Denise Kamm is the 'niece' of some Revlon suit who got her an exemption into the tournament for giving good head. Nobody's expecting anything from her, which is exactly the way I want it. You look hot, by the way.\"\n\nI did look hot, and I knew it. \"Right now I'm the second best looking woman in the place. Sorry I guessed wrong about what to wear. We're way overdressed for this shindig.\"\n\n\"All the better. The girls have written me off as a ridiculous bimbo, and the reporters just want to get into my pants. Wait till I get out on the golf course. They'll never know what hit them.\"\n\n\"What time do you tee off for the pro-am tomorrow?\"\n\n\"I don't. Told them I had to scratch, and they seemed happy not to have me. After all, that's mostly for fat cats who spend big bucks to play a round with the pros. Nobody wants to get stuck with a walk-on.\"\n\n\"When's the last time you played golf?\"\n\n\"Before I went into the spa. Look, don't worry about me. It may take me a few holes to get used to my women's clubs, and I'm going to have to fem it up our there so I don't give myself away, but it's no big deal. I'll smoke 'em.\"\n\n* * *\n\nIt took me forever to fight my way through the rush hour traffic on Thursday morning, and I arrived at Fairmount just in time to find Denny hitting the last of his practice shots on the driving range. He was as cute as a bug. His long blonde hair was pulled back in a ponytail, and he had a pink sun visor on his forehead, a perfect match for his obligatory pink skirt. It was very short, showing off his long, slender legs, which were deeply tanned. A white banlon shirt, little white sox and white golf shoes completed his outfit.\n\nI watched has he went about his business on the range, and noticed that he had changed his swing. Denny Grimes was never a power hitter, but it was obvious that he had made some changes to his mechanics in an effort to conceal his true identity. He seemed to be having some difficulty with his shortened backswing, and he barely acknowledged me when I came up to say hello.\n\n\"You go, girl!\" I said as he followed his caddy to the first tee. He gave me a wan smile, but he seemed totally preoccupied, so I melted into the gallery that was watching each of the groups tee off. Denny was paired with an Amazon named Bertha, and I wondered cattily if the Big Bertha line of clubs had been named after her. Bertha was up first, and she crushed a monstrous drive about 270 yards down the fairway.\n\nThe first hole at Fairmount is a long par 5. Denny took his time setting up, and I noticed that his trademark waggle was missing. His swing was graceful and compact, and his drive went about 240 yards, straight and true. I followed along with a handful of other spectators as Denny and Bertha walked in silence down the fairway. Denny took a 3 wood from his caddy and once again used his new swing, which almost made it seem like he was hitting the ball in slow motion. His shot landed about ninety yards short of the green, in perfect position to attack the flag. Bertha slugged a fairway wood and ended up in light rough to the left of the green. \n\nDenny saw me out of the corner of his eye as I walked outside the ropes, and he winked at me as he selected a wedge. Another easy swing, and his shot landed just past the pin and spun back, ending up about six feet below the hole. Bertha chipped onto the green, and her ball ran past Denny's, leaving her with a difficult downhill putt for birdie. After she missed it and tapped in for par, Denny crouched down next to his ball, totally focused on the grain and the line. There was a commotion behind the green, and cameras started clicking like crazy. Completely absorbed with his putt, Denny didn't pay any attention to them, nor did he seem to hear the guffaws that started to ripple through the crowd around the green. I walked over to the people who were making the noise, and when I looked back at Denny, I realized what had them so excited. Not accustomed to wearing a skirt, Denny had opened his legs when he crouched down next to his ball, giving the crowd, the photographers, and the cable television audience a perfect beaver shot.\n\nDenny finally looked up to see what was happening, and when he realized what he had done, he frantically tried to stand up, losing his balance and falling right on his ass. A roar went up from the gallery as Denny pulled his skirt down and got back on his feet, his face now pinker than his skirt and visor. When he finally regained enough composure to attempt his putt, he sailed it five feet past the hole, and he rushed his comebacker and missed that too. Bogey six.\n\nIt went downhill from there. He skied his tee shot on the second hole, a short par four. It went straight up, like a moon shot, and ended up less than a hundred yards down the fairway. It took Denny two more shots to reach the green, and he two-putted for bogey five. The third hole, another short par four, saw a new side of Denny, as he eschewed the graceful swing and hit the most vicious hook I have ever seen on a golf course. It veered over Southern Boulevard and disappeared into the Great Swamp, scattering migratory game birds after narrowly missing a car. \n\nBy the time Denny Grimes staggered onto the eighteenth green, he was sixteen over par. Nobody in the gallery or the press contingent was the least bit surprised that the unknown beneficiary of a charity exemption had played so poorly, and Denny was on his way to his car as soon as he changed out of his golf shoes and signed his scorecard. I was waiting for him in the parking lot, trying to figure out what to say.\n\nDenny looked up at me as he opened his car door. \"Get in,\" he said, and I climbed into the passenger seat and strapped myself in beside him. \"Don't say anything,\" he said. He peeled out of the lot, and started to drive back towards his hotel. When I looked at his face, I could see tears streaming down his beautiful cheeks. His blonde hair was disheveled, there were grass stains on his skirt, and his bare legs were flecked with sand from his adventures in the traps. \n\nI couldn't stand the silence. \"Denny, what happened out there?\" I finally asked.\n\n\"I suddenly realized what a farce this is. Look at me.\" I stared straight ahead. \"Look at me, God damn it!\" he shouted in his normal voice. \"Two years ago, I won a major championship. Now I'm sitting here in a fucking skirt, and I just shot an 88. Christ, I haven't shot an 88 since I was in seventh grade.\"\n\n\"You started out so good\u2026.\"\n\n\"You mean until I gave the nation a look at my panties? Gee, do you think that had something to do with the way I played out there?\"\n\n\"It just seemed like you were trying too hard.\"\n\n\"Damn right I was. One thing I'm not is a quitter. After I skied my second tee shot, I figured the femboy swing wasn't working, and I started trying to find a groove out there.\" I sat fascinated as Denny replayed the entire round, shot by excruciating shot, finishing up as we pulled into the parking lot at the Hilton. He waited until the valet opened his door, then swung his legs gracefully out onto the curb, back in character as a woman once again. I followed him up to his suite, and he asked me if I wanted to come in.\n\n\"Sure,\" I said. Maybe I could help him over this. He still had a round of golf to play tomorrow, even though making the cut, and winning the million dollars, was now outside the realm of possibility. \n\n\"How about something to drink?\" he asked. \"God knows I could use a hard one.\"\n\n\"Thanks, so could I. Are you going to play tomorrow?\"\n\n\"I told you, I'm not a quitter,\" he said as he reached into the minibar. \"My deal with Revlon is that I play as long as they'll let me, even if I don't have a chance in hell of making the cut now. Cheer up. You'll get to see my blue panties tomorrow.\"\n\nSuddenly I lost it. I sat down on the sofa and started to cry, shaking with sobs. Denny sat down beside me and handed me a bottle of Vodka. \"Women,\" he said. \"I'm the one who should be crying. Drink this.\"\n\nI did as I was told, shivering as the cold Vodka burned my throat. \"I'm sorry, Denny. This is all my fault. If I hadn't come up with this stupid idea, none of this would have ever happened.\"\n\n\"Maybe not, but it's turned out great for you. You'll get a book deal out of this. Can I get an autographed copy?\" he asked as he kicked off his sandals.\n\n\"Damn it!\" I shouted. \"Can't you be serious about anything?\"\n\n\"You think this is all a joke for me? Face it, I'm fucked, Carrie. What was left of my reputation is going to go right down the tubes when the press gets wind of what happened today. 'Former PGA Champion Turned Crossdresser Misses the Cut at an LPGA Tournament.' What a headline. What a fucking disaster.\"\n\n\"Maybe I won't write the book.\"\n\n\"Oh, you'll write it, all right. You'd be crazy not to. This is your shot, Carrie, you've got to take it. Drink up. Here's to Denny Grimes. He used to be one hell of a golfer.\"\n\nI took his face in my hands, and kissed him, hard on the lips. He seemed totally surprised, but after a moment's hesitation he kissed me back, gently at first, then with a sudden passion that swept us both away. He pulled my top right over my head, and started to fumble with my bra. I reached under his shirt, and found myself grappling with his. I was faster, and his breast forms tumbled onto the floor as I tore off his shirt. I slid my hands up his skirt and caressed his smooth thighs until I reached his panties. There was a moment's confusion while I felt around for him. Meanwhile Denny had my pants and panties down to my knees, and he paused to unzip his skirt and fling it across the room. He pulled off his panties, and an evil-looking gaffe which had tucked him away. As soon as it was off, his penis sprang to attention, and he was on top of me.\n\nIt was the quickest fuck I have ever known, but I wasn't complaining. He stayed inside me as he played with my hair and my breasts, and I tried to make sense out of what was happening. From the waist up and the ass down, he looked, felt, smelled and tasted like a girl. I have never been attracted to women, but there was something about making love to a soft, sweet, smooth guy that was incredibly arousing. Before I knew it, he was hard again, and this time he took his time, easing himself in and out of me as he built up steam. I could feel myself starting to lose control, and when he came again, I was right there with him, lost in the throes of the most exquisite orgasm of my life.\n\nI stayed with him all night. Except for a brief break for room service, we spent every minute in bed, going at it again and again. The last time, we did it with me on top, like he was the girl, and when we came together, each of us cried out in ecstasy. When he finally fell asleep, totally spent, he had a look of angelic contentment on his beautiful face.\n\n* * *\n\nThe next morning, we showered together, shaving each others' legs and shampooing each others' hair. Denny had a skirt and blouse which fit me, and I put them on as he dressed himself for ladies' golf. He looked sensational in his blue top and matching blue skirt, and when I teased him about going another round before we left, he looked forlorn. \"Afraid I'm tapped out,\" he said. \n\n\"I'm disappointed, Missy. We only did it six times, or was it seven.\" Then it occurred to me. \"Denny, when you think about it, you're like a girl right now.\"\n\n\"Huh?\" he said as he put on his lipstick.\n\n\"Your testosterone level has been drained down to zero. It's like you've been unmanned. I mean, it's only temporary, but right now, you probably feel more like a girl than a guy.\"\n\n\"Maybe that'll help my game,\" he said with a sigh. \"God knows, I won't have the energy to hit anything hard out there. I'll have to play like a girl today.\"\n\nWe got to the clubhouse very late, and Denny had no time to warm up before his tee time. His caddy was having fits until Denny kissed him on the cheek and told him to relax. I took my place in the gallery and waited for him to tee off.\n\nIn the history of sport, nothing can compare to what I was about to witness. Some have likened it to pitching a perfect game, but that is not an apt analogy in my opinion. A baseball pitcher would have to strike out all 27 batters to come close to what Denny Grimes achieved that day.\n\nWhen he hit his drive off the first tee, there was no indication that something special was about to occur. His swing had an easy languor that seemed almost effortless, and his ball came to rest a mere 240 yards out, but smack in the center of the fairway. Big Bertha, his playing partner once again, was thirty yards ahead of him, and she waited impatiently as Denny relaxed over his second shot. He lifted a 3 wood into a beautiful arc, and his ball came to rest just short of the green. An easy chip, and he was putting for birdie from five feet. The gallery snickered as he studied his line, but this time he kept his knees together in ladylike fashion before he stroked the ball into the cup.\n\nDenny had the honors after Bertha made par 5, and he would not relinquish them for the rest of the day. His drive on the second hole was straight and true, although Bertha outdrove him once again. He hit a perfect six iron that stopped dead on the green, three feet from the pin, and once again made birdie. The third hole was tamed in almost identical fashion. For the first time, a little buzz started to spread through the gallery, and I noticed that people who had hunkered down on some of the greens began to gather up their things and follow us as we continued towards the fourth hole. It was just a trickle, but it was soon to become a torrent, and then a tsunami, as Denny Grimes, using unfamiliar clubs in a short skirt on two hours' sleep, played a game for the ages.\n\nAlthough I have never said this publicly, I am convinced that the night Denny and I spent together was the magic ingredient in his performance that day. Liberated from the influence of his libido, it was as if his psyche temporarily melded with his androgynous form, allowing his body to take control of his mind and put him in \"the zone\" once again. Whatever the reason, as he continued to work his magic on the golf course that day, there was a serenity about him, almost a godliness, that I have never seen before or since.",
        "He hit a five iron on the next hole, a short par 3 over water, and almost made a hole in one as his ball bounced off the pin and stopped two inches from the cup. The roar from the gallery was electrifying when he tapped in for his fourth consecutive birdie, and there was a mad scramble for places around the fifth tee as Denny made his way through the crowd. He birdied five with a treacherous putt, and then the long, tough sixth hole after his 3 iron from the fairway rolled to within a foot of the pin. His 7 iron on the short seventh hole was dead on the stick, he birdied eight with a sidewinding putt that rimmed the cup before it dropped, and headed towards the clubhouse with a picture perfect drive on nine that set him up for an easy approach shot. By now, everybody on the golf course had gathered around the ninth green, and when Denny rolled in a ten foot putt for his ninth consecutive birdie, the roar could be heard by every golfer in the tournament.\n\nEven Bertha had to shake his hand after his incredible performance, congratulating him profusely for having shattered the LPGA record for consecutive birdies, and for his nine-hole score of 27. Denny was still well down on the leader board, but you would never have known it from the mob that followed him to the tenth tee. He birdied ten and eleven, then crossed over Southern Boulevard for the next four holes, birdying them all. When he crossed the busy street again to tee off on sixteen, two policemen had to stop traffic for ten minutes to allow his gallery to make it across with him. \n\nThe sixteenth at Fairmount is the most difficult hole on the course, brutally long with a narrow fairway rimmed by hardwood trees. Denny used his driver, and split the fairway with a 270 yard drive, his longest of the day. When his 5 wood strayed slightly and rolled into a bunker guarding the tight green, a mournful groan went up from the gallery. But if Denny was concerned, it didn't show on his beautiful face. He had spent hours practicing getting out of the sand, and indeed he once told me that in tough situations he would sometimes aim for the bunkers rather than risk getting stuck in deep grass with a difficult chip. Still, when his sand wedge blasted his ball into the air and it dropped and rolled into the cup, he clenched his fist and pumped it twice, a trademark Denny Grimes gesture that nobody noticed at the time.\n\nBy now, the gallery was going crazy, the golf writers were delirious, and USA Network, which had the rights to the first two rounds of the tournament before CBS took over on the weekend, had broken into its regular programming. Denny's tee shot on seventeen was perfect, and he hit a long iron to the center of the green, a tricky undulating surface which had yielded the least number of birdie putts throughout the tournament. He took his time with it, this time tucking his skirt between his knees as he crouched down over his ball, and when he tapped his putt, the sound of cameras clicking was like an avalanche. His putt broke right, then left, then right again, stopping just short of the cup and hanging on the lip for a second before dropping in.\n\nThe crowd erupted. Even golfers who had already finished their rounds, including Annika Sorenstam and the other early leaders, pressed together with the spectators as Denny fought his way through the mass of humanity towards the eighteenth tee. Bertha was shell-shocked by now, and she stared open-mouthed as Denny gave his little waggle before sailing his drive straight down the middle of the fairway. The mob followed him as he walked towards his ball, and shouts and cries were heard when they realized that he had landed in the middle of an ugly divot. It was an impossible lie, and if there was any way the LPGA officials could have given Denny relief, they would have done so. He knew the rules as well as they did, and without batting an eye, he asked his caddy for his driver.\n\nThe caddy, who was holding on for dear life by this point, shook his head. \"Are you sure?\"\n\n\"Yep,\" Denny said sweetly. \"I'll show you a little trick I learned the hard way.\" His caddy handed over the driver, and Denny took a few practice swings in a wide arc before addressing the ball. Ten thousand people crowding around him, and heaven knows how many more watching on television, held their collective breath as Denny blasted his driver behind the ball, exploding it out of the divot and sending it screaming towards the green. \n\nThe replays of that shot have been seen so many times, one almost tires of it now, but in the annals of golf there has never been a more amazing finish. Denny's ball landed short of the green, hopped twice before settling on the putting surface, and rolled to a neat stop four feet from the pin. Pandemonium ensued as the gallery following Denny raced to join those already clustered around the eighteenth green, and the marshals struggled in vain to restore some semblance of order. Denny disappeared into the milling throng, and when he finally emerged with a marshal on either arm, he looked slightly disheveled but remarkably calm. He took a moment to smooth down his skirt and tuck back a loose strand of blonde hair before taking his putter and walking across the green to the thunderous applause of the gallery.\n\nBertha was away, and the nation waited impatiently for her to make or miss her meaningless putt. Then Denny crouched down over his ball, knees pressed together, before he stood over it and caught his breath. Slowly, slowly, he took back his putter and tapped his ball. It rolled lazily along the path he had selected until it fell with a clunk into the waiting cup.\n\nThe gallery exploded as total strangers hugged and kissed one another, not believing what they had just witnessed. Denise Kamm, an unknown walk-on playing in her first professional tournament, had just shot a 54, making 18 consecutive birdies. In the storied history of golf, no one has ever come close to that achievement, nor would anything like it ever be seen again. The major networks broke into their regular programming to announce it as a special bulletin, the message board on Times Square flashed the news to startled New Yorkers, and the President of the United States asked an aide to try to get Denise Kamm on the phone.\n\nWhen I caught up with Denny, he had been lifted onto the shoulders of his new fans, who were carrying him aloft like Lindbergh in Paris. He saw me, and struggled to get down, finally shouting something to the guys holding him up. Maybe he used his real voice, because they dropped him in a hurry. The cameras caught our embrace as we groped each other, the spectacle of two girls going at it not exactly what the tournament had in mind for the image of women's golf. Denny pulled me into the scorer's tent and planted a kiss on me.\n\n\"Denny, I'm so proud of you!\" I cried as we came up for air. I felt his erection pressing against me through his skirt. \"You're back!\" \n\n\"I guess you didn't finish me after all,\" he said.\n\n\"Just long enough. You were wonderful!\"\n\nDenny Grimes had only one thing on his mind. \"Did I make the cut?\"\n\n* * *\n\nYes, Denise Kamm did make the cut, by one stroke. Her composite score of two under par would have enabled her to play on Saturday and Sunday, if the LPGA had an ounce of sense. \n\nWhen Denise Kamm was brought to the microphones for a hastily arranged press conference, she shocked the world with her opening remarks: \"It's been great playing out here today. For those who don't recognize me, I'm Denny Grimes, and I'm going to Disneyland with my million dollars from the National Enquirer!\" Absolute, total bedlam broke out, and Denny was hustled out of the clubhouse by security guards at the behest of outraged tournament officials.\n\nIt all worked out fine for Revlon, of course. The launch of their \"Metamorphosis\" cosmetics line broke all industry records, aided by a brilliant advertising campaign featuring Denny in before and after photos. And in a delicious bit of irony, USA Network replayed Denny's historic performance from start to finish during the same time slot as the CBS broadcast of the final round of the Revlon classic. USA Network scored the highest ratings for a sports event in the history of television, burying CBS alive.\n\nAs for Denny and me, let's just say that my husband is back to doing what he loves the best, playing professional golf for a living. Although I doubt if he's going to make any more bets that involve wearing a skirt, he still dresses up for me sometimes, just for fun. Denise Kamm makes occasional public appearances for Revlon when we need the money, and her gigs on Letterman and Leno were instant classics. I never did get around to writing that book, so this story will have to do.\n\nFrom the author of \"The Jessica Project\" "
    ],
    "authorname": "thrillerauthor",
    "tags": [
        "revlon",
        "short green",
        "women golf",
        "make cut",
        "back character",
        "sports illustrated",
        "golf tournament",
        "hard play",
        "eighteenth green",
        "feet pin"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/missing-the-cut"
}