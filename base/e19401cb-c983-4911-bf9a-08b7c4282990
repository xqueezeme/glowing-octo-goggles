{
    "title": "The Things You Make Me Feel Ch. 11",
    "pages": [
        "August\n\n\"I'm home.\"\n\n\"Hey, hon!\" Ellie called from the bedroom. \"How was at the gym?\"\n\nOliver dropped his backpack and stretched. \"Okay.\" He opened the fridge and extracted the jug of orange juice. \"Dolce mia?\"\n\nMichela exited his and Ellie's bedroom, dressed in a beautiful sunflower dress and white sandals, her brown hair partly braided.\n\nOliver sized her up while gulping the juice from the jug, unable to ignore her growing resemblance to her late mother. \"Who's that beautiful girl? And what have you done with my daughter?\"\n\nThe 5-year-old convulsed with her child-like laughter. \"Papi, it's me!\"\n\nHe beckoned her over with a smile. \"Kiss, kiss.\"\n\nHe picked her up and kissed her thoroughly, and put her down just as his girlfriend joined them.\n\nEven while living together, even while knowing her his whole life, his heart never failed to skip a beat when she got herself all pretty and sexy: dark blond hair that cascaded almost down to the small of her back; deep blue eyes with frames of a jaguar; eyelashes blackened, seemingly curling for miles; purple lipstick painted over naturally pouty lips; a short purple skirt that draped over the smooth golden flesh of her upper thighs; and a white low-cut blouse that exposed all the cleavage you could want. She was almost as tall as him now, showing off her long, slim legs while standing in her new five-inch platform clogs.\n\nHe scanned her up and down, trying to keep his cool. \"Well, well, well, what have we got here?\"\n\nHis sister shot him a sultry smile, reading the obscenity from his eyes. She kissed his lips and gave his butt a furtive squeeze, confident she would be getting some tonight.\n\nSince her father and Oliver had reconciled, her boyfriend had been steadily getting back to himself. He was growing happier and more serene. He'd been eating right, even if sleep at times eluded him. He'd been frequenting the gym again, and his sex drive was back where she needed it to be -- off the charts. Whatever her father had been doing to help Oliver, it had proven to be immensely successful.\n\nEllie wasn't aware of the fact that Dan had hooked her brother up with a therapist who'd been counseling army veterans suffering from PTSD. Along with Ellie's support and love, those weekly sessions had proven be just what Oliver needed to heal. He was letting go of the past, bit by bit, and he and Dan had been getting closer than ever, ironically.\n\nEllie was the happiest she'd ever been. Her pregnancy was going exceedingly well, and her favorite brother in the whole wide world had resumed laying with her. With only two months until due date, their sex life was far from stagnating. The minute Michela was asleep, their bed would be creaking and jerking, and in the mornings, blowjobs and pussy-eating had become the new greeting standard.\n\nPregnant women are hot, and Oliver's sister was the hottest commodity there is. He literally couldn't keep his hands off of her. While the bloom of her belly was rather small, her breasts had swelled to unthinkable proportions. The rest of her remained the work of art it had always been. Ellie knew she was genetically blessed, and she was reminded of that every time she saw Gena. Jack's fianc\u00e9e was a pretty woman, but the pregnancy had taken its toll on her body.\n\nEllie, however, was fortunate to retain her deadly curves, tight little ass, and slender legs. Whatever fat she gained went straight to her rack, and Ellie was loving the attention her bosom was getting; from Oliver, naturally, but also from complete strangers and colleagues.\n\nThere was something so satisfying in watching her boss struggling to keep his eyes leveled with hers as they discussed work. Ellie wasn't doing anyone favors there when cramming her monstrous cans in push-up bras and button-down shirts that she never bothered buttoning past her cleavage. While her bosom never failed to draw a crowd, the pregnancy had kicked it up to a whole new level, and Ellie had never been one to shy away from male attention to begin with.\n\n\"Seeing the two of you are already dressed, I'm assuming we're all packed?\"\n\n\"Uh-huh,\" Ellie replied with a grin and handed Michela her crayons and drawing book. \"There you go, sunshine.\"\n\nIt was Friday morning, and the three were heading for a vacation with the rest of their family. Alice and Dan had insisted that this family was in dire need of bonding, and what better place to do so than at a secluded, luxurious resort. Yes, a weekend-long vacation at a 5-star retreat up in the mountains should fit the bill. It would give them the chance to discuss everything and plan ahead before the girls gave birth.\n\n\"Well, let me take a quick shower, and\u2014\"\n\n\"Take your time. I'm meeting Kara at the mall first. I need to buy some stuff before we hit the road. It shouldn't take long though, an hour or so.\"\n\n\"Okay. Just keep in mind it's a three-hour drive, stops excluded.\"\n\nEllie slanted a brow in pseudo puzzlement. \"What are you implying here, my love?\"\n\n\"That you tend to forget yourself in shopping centers, malls, and, basically, any place that has stores around.\"\n\nShe giggled. \"You know me so well.\"\n\n\"I do.\"\n\n\"I'm doing this for you though.\"\n\n\"Is that right?\"\n\n\"Remember the\"\u2014she glanced at Michela and licked her lips when returning her eyes to him\u2014\"special oil we use when you need to relax?\"\n\nOliver smiled, loving where this is going. \"Oh, boy, do I.\"\n\n\"Well, we need to stock up on a few bottles. Who knows how many we'll need. Three days is a long time, and I want to make sure we relieve all the stress you've built up. I want you completely and utterly relaxed.\"\n\nHer brother chuckled, adoring her dirty mind. \"Point made. And just for the record, I'm planning to relax as many times as I can.\"\n\nHis sister cocked a shapely brow, her mouth curving into a sly smile. \"Oh, you do, do you?\"\n\n\"Most definitely. Though I think I actually prefer to relax with the other special oil. You know, the organic one you make.\"\n\n\"That makes both of us,\" Ellie giggled, the thought making her all hot and gooey inside. \"I um... I just can't wait to massage you with that oil and let you um\"\u2014she glanced at Michela again and swallowed\u2014\"let you uh...\" She started tittering, her cheeks flushed. \"I can't say the rest without being too obvious.\"\n\nOliver laughed in mirth. \"Try.\"\n\nShe snuck a quick peek at Michela, making sure she was engrossed in her drawing. \"Well, that special oil, the one I make, I want you to drink it straight from the bottle, like... a lot of it.\"\n\nThey both guffawed.\n\n\"I'm getting thirsty already,\" her brother purred. \"How much is a lot though? Like... a glass?\"\n\nThe blonde gave her purple-stained lips a thorough, smutty lick, her blue eyes boring into his. \"Gallons.\"\n\nOliver's cock twitched in his shorts. The thought of her fleshy nether lips riding his as she trickled her delicious lust into his mouth was coaxing his pre-cum out. He glimpsed at his daughter, who while tilting her head, painted the drawing with too many crayons. \"Um... Ellie, can you come with me to the bathroom for a second? I need you to do something for me before you go.\"\n\nEllie giggled, knowing full well what she needed to do. \"With pleasure.\"\n\n*\n\nThe blonde sat on the lip of the tub and pulled Oliver's shorts down just as he locked the door behind him. His cock was longing for her pretty mouth, so thick while merely semi-engorged. She clutched the broad dome with her lips and started pumping her fist, getting him up and running. Oliver moaned as quietly as he could, his member expanding and hardening in his sister's ferocious grip.\n\nEllie licked up his shaft from all angles, collecting the sweat he'd worked up at the gym. She didn't mind; in fact, she loved lapping his sweat up. Her brother was scrumptious, all of him. Once she cleaned his member, she swallowed as much as she could of his dick and held.\n\n\"Oh, baby, yesssss,\" Oliver murmured breathily as his sister's lips clamped around his bottom third.\n\nEllie slid him out, and her hand resumed pumping urgently while her bro swathed her long hair round his hand. Her lips engulfed his tip as she guided him back into her warm, wet mouth. She sucked only briefly before she yanked him out, the succulent prune making a popping sound when fighting her sappy lips off. She repeated the move several times more, popping him out each time with a booming suction noise.\n\n\"God...\" Oliver voiced his pleasure in a whimper, his erection so threatening against the soft, feminine features of her striking face.\n\nHis sister smirked, her fist flying up his curved shaft, before she sucked on the tip again. She didn't release this time though, as if she wanted to stop his blood. Her vacuum increased, her grip so tight and erratic round his girth, twisting, pumping. Only when he gave her head a jerk when tugging her hair back, she relented.\n\nGently stroking him, she leered at his crown, admiring the sheer circumference. The shape, as well, was drool-worthy in her eyes: chiseled with a pronounced rim billowing the puffy head out. It was majestic. And that cute little piss hole... so wet and beguiling, calling out her name.\n\nBefore she knew it, the tip of her tongue slotted in. She was Frenching that little slit, as if she were kissing her brother's mouth. In her mind, it was indeed his mouth. She sucked and licked, her eyes shut, her attention utterly devoted to their kiss. He couldn't kiss back, but it didn't matter to her; it was just as romantic and thrilling. She kissed and purred, her hand massaging and twisting around that muscular rod, her tongue probing deeper, into where all the magic happened.\n\nOliver moaned, the length of her hair enfolding his hand. \"Ellie, baby, you're killing me...\"\n\nHis sister smiled as she kissed, her mind lost in the sensation as she dug in. She was making love to his cock, the way all women should. She pulled away eventually and gazed up at her brother, her blue eyes seeming so weak and innocent. Her mouth soon opened as his hard, wet cock probed in. Her brother targeted the inside of her left cheek, and she let him. She felt the head pressing to the wall of her mouth from the inside, making it bulge. He pulled back before prodding at it again, and her cheek jutted out so beautifully.\n\nThroughout his tease, her eyes hadn't left his. She wanted him to look into her eyes as he fucked her cheek, for him to see how servile she was for him. When he ceased humping her lovely cheek, her lithe fingers wrapped around the shaft, and she settled into a lazy stroking rhythm. Meanwhile, his hefty scrotum dunked into her mouth, bathing in her plentiful saliva. She sucked on his balls thoughtfully while her fist idly traveled up and down his length, just sustaining, keeping him hot.\n\nEllie didn't mind the hair on his balls as they soaked up her spit so deep in her mouth. Women were so sterile nowadays, wanting their men to go hairless like a Ken doll. She found it absurd and off-putting. Maybe she was old-fashioned and weird like that, but men should have pubes. They should have some bodily hair, and they shouldn't look like effeminate cunts. And while Oliver wasn't hairy by any means, she enjoyed caressing and licking what little hair he had; on his balls, definitely, but also that streak that ran up his abdomen and the one that stretched across his\u2014\n\n\"Ohhhh-hhh...\" Oliver mumbled in a ragged moan, his sister back to her old tricks, expertly licking his perineum.\n\nThe tip of her tongue drew a dash between his scrotum and the rim of his sphincter while her hand kept stroking that hulking boner. He groaned again, reveling in the sensory orgy that seethed through him. Each wet caress to this erogenous, intimate spot built a ripple of sexual heat that swept over him like a ten-feet wave, bringing tingles and shudders alongside all sort of blissful reactions. Knees weak, he pulled his nuts up and looked down intently as his sister pleasured him where he was so sensitive.\n\n\"Fuck,\" he gasped while locking eyes with this stunning nymph, her nimble tongue in love with his genitalia, her blue eyes feigning good-girl innocence.\n\nWhile he watched in earnest, Ellie persistently licked her brother, teasing and taunting his puckered knot. She savored the salty tang on his flesh as she ventured farther, tempted to rim him. She released his dick and squeezed his butt cheeks as she licked and explored, her brother shuddering while hauling his nut sack up. She kissed that sensitive bridge lovingly and thoughtfully, wanting him to see how much she loved him, the way he loved her. There wasn't a dry spot on that ridge of flesh, on his testes, and in a second, there wouldn't be on his daunting erection, either.\n\nWhen his knees morphed into jelly, her hand reconnected with him, and her gaping mouth began processing his length. Inch by inch, she took him into her face, her full lips clinging to his size, her sultry eyes locking with his. Oliver gasped and moaned, loving the softness of her tongue, the warmth of her mouth, the bend of her throat as she gorged on his weenie. Most of all, he loved the view his sister was awarding him, of the deep golden crack between her ample breasts.\n\nManeuvering herself round him, Ellie coaxed her brother down her petulant throat until her cute little nose sunk in his pubes. Stifling a groan, Oliver shuddered, her throat fisting and massaging his length.\n\nNot long ago, Ellie couldn't have dreamed of deep-throating him. Practice makes perfect though. Maybe two months ago, her brother had finally killed off her gagging instinct. Her tight gullet had been worn down, too exhausted to put up a fight, and it begrudgingly accepted that things other than food would be taking advantage of its hospitality. It couldn't stop itself from clenching and grating however. It would take years of relentless throat-fucking to make it more accommodating.\n\n\"Christ,\" Oliver breathed and squeezed a bit more cock in, his groin nudging at big sis' dainty nose. \"I love being in your throat.\"\n\nEllie responded with an inarticulate guttural noise that Oliver took for, \"So do I.\"\n\nEllie held as long as she could before she glided him out and licked his shaft, just sucking her slobber back. She swallowed his cock down her food pipe and slid him out yet again, her throat increasingly dilating with each interval. Eventually, she stopped exposing her bro to the fresh air, and her mouth worked around him rhythmically, her face deftly rippling. His cock slid in and out of that snug throat effortlessly, as if his sister had never known that gagging was actually a thing.\n\n\"Oh, fuck,\" Oliver moaned as the pregnant hottie began speeding up, working perfect waves with her mouth and throat, seamlessly sliding him between both zones. \"Look at you. A year ago, you wouldn't even lick a dick, and now\u2014oh, god, Ellie\u2014you're sucking cock like nobody's business... fuck!\"\n\nCupping and massaging her breasts with both hands, Ellie looked up into his eyes as her face wormed around him, all the way each and every time. Her brother started talking dirty, and she was all for it. Whenever he talked dirty to her, it made her cream in her panties, so she could only imagine what it was doing to him.\n\nOliver tugged on her hair as she sucked, pacing her to and fro on his dick as she if she were a cheap piece of cattle. \"Yeah, suck, Ellie, suck... you need to work for my cum. I ain't giving it away, you know.\"\n\n\"Mhmm,\" she acknowledged meekly and took all of him, her throat molding around him in a perfect snuggle.\n\nShe looked up into his eyes as she slowly drew back, her lips nothing but a pair of purple leeches unwilling to budge. With just the tip in her mouth, her face then lurched forward, vanishing his erection, before she pulled back again, slowly, erotically, looking up into his needy eyes she did.\n\n\"Oh, god,\" her brother moaned softly and tugged on her hair. \"Faster, my gorgeous incubator. I want you to eat my cum.\"\n\nEllie smirked round him at the \"incubator\" reference. That was a first, though a hot one nonetheless. She stopped showing off with her excellent deep-throating, and her face built up speed yet again as she now smoked his pole with genuine hunger. She resumed kneading her inflated rack as she sucked, exposing more of the deep cleavage that made guys gape embarrassingly like hungry infants, the way her little brother was doing now. She'd been amassing oodles of milk for their baby, and it showed.\n\n\"Your tits are so fucking huge, god... you're making me hungry, Sis.\"\n\nCheeks rosy, she pulled his cock out and laughed coyly while smearing his pre-cum all over the head. She sucked it in, relishing the flavor, and took him back into her mouth, loving how he kept drooling while boring into her so-very-deep cleavage.\n\n\"You're gonna let me drink from your titties, baby?\"\n\n\"Uh-huh,\" the blonde replied while jerking off her brother down her food pipe, her panties so moist at the thought of his lips clamping onto her meaty nipples, drawing the milk from her pale bosom.\n\n\"Oh, god,\" he moaned with anticipation, already milking her breasts into his mouth in the mind's eye. \"What about you? Ya hungry?\"\n\n\"Mhmm.\"\n\n\"Good. I'm gonna blow a huge fucking load in your mouth, and you're going to swallow like a good girl, aren't you?\"\n\nEllie shuddered at the thought of his hot jizz splashing about in her mouth. For some reason, she had the image of fourth-of-July fireworks going off at the moment.\n\nOliver pulled her hair back, and bit by bit, his slick pecker slid out of his sister's mouth. \"Why didn't you answer?\"\n\nEllie instantly twisted her hand on his muscle, so concerned for his build-up. \"Do you really want me to answer that rhetorical question? Or do you want to go back to my mouth?\"\n\n\"Answer.\"\n\nShe sighed, her fist yanking at the stimulated mushroom in immense speed, which, in turn, made her ginormous mounds tremble in her top. \"Baby, of course I'm gonna swallow. You know I'm a good girl.\"\n\n\"That's right.\"\n\nHe fed his sister his cock yet again while reining her head in. He humped her face for several seconds before he tugged on her hair encouragingly. Finally free to move, Ellie promptly undulated along his length, her supple lips maintaining constant friction around his cock.\n\nOliver groaned as quietly as he could, desperate to orgasm. \"Come on, honey, just 'cause you're going deep doesn't mean you can't suck faster. Tight and fast, babymaker.\"\n\nEllie moaned round him, getting so tingly and damp inside. She might have a come a little at the sound of her nickname: her brother's babymaker. He'd been calling her that for weeks, and she never failed to wet herself at the sound of it, not even once. Mostly, because it was true.\n\nDelirious with sex, her bro pushed into her mouth, meeting her, feeding her, controlling her depth via her golden hair that was veiled around his palm. \"That's it, Sis, fuck the big cock with your pretty face. God, what a face... I just love fucking it so much.\"\n\nEllie moaned round his outstanding girth again, her vagina smoldering, her clit jingling. If only her oblivious niece knew what she was doing at the moment, and the things her father had being saying to her while she\u2014\n\n\"Fuck!\" Oliver gasped, seconds from dumping his load in his babymaker's mouth. \"Ellie, faster! Show me how hungry you are!\"\n\n\"Mhmm!\" she voiced eagerly, that straining member now flying in and out of her snug mouth while she kneaded his butt cheeks.\n\nAlthough she was in berserker mode at the moment, she didn't forgo an inch of his hard dick. Her clingy lips skidded on all of him, coating him in a thick layer of warm spit, smearing her purple lipstick all the way to the root of his brawny erection.\n\nOliver gazed down into her already waiting eyes. Those bewitching sapphires that were embedded in her stunning face, seeking approval. There was no way he would come without her looking at him while he did. Gliding so deep and tight in her mouth, he bit back a moan, feeling a surge of cum. \"Ellie, baby...\"",
        "Staring up into his needy eyes, groping his toned bottom, the hot blonde paced herself just as the succulent head smote the curve of her throat and slid down past it for what she knew was the last time. She felt his cock tensing, then pulsing, and finally eru\u2014\n\n\"MMM! MMM! MMM!\" she cried as her brother went off down her clenching sheath, spouting his viscous gravy down the violated passage.\n\nHer throat quaked with each throb of his cock, portending the fresh batch of cum that she needed to swallow. Ellie was a gifted cocksucker though, and even a better sister. She pressed to his groin, her face buried in that thin shrubbery, his thick, long manhood lodged down her throat, and relieved her brother as deeply as he wanted, as she wanted, all the while humming her delight and joy.\n\nExplosive spurts of spunk splashed down her throat, and with such a large member crammed down her food pipe, Ellie did her best to swallow. She could feel him throbbing on her tongue while spouting down her gullet, discharging, before she coaxed his ropes beyond into her stomach with a stubborn gulp. When he was coming down, she drew half of him out and wrung his junk in her mouth, just atop her sweet pink tongue.\n\nShe stroked and squeezed, his welting wurst so substantial in her fist. Dregs of his sperm mingled with her spit while she kept on pumping and sucking, easing his little troopers into her loving mouth. She pressed his extracts to her palate, relishing the taste of his baby seeds as they greased the ceiling of her oral cavity, before she gulped, purring approvingly as she did.\n\n*\n\nExiting the bathroom, her arms tightly around his neck and his around her slight waist, they kissed deeply while Oliver teetered forward and Ellie backward. They couldn't separate, sucking face all the way back to kitchen, where Michela was painting with earnest attention.\n\n\"I love you,\" Oliver breathed and sucked her pouty lips again and again.\n\n\"I love you,\" his sister murmured back and darted her tongue into his mouth. \"So much...\"\n\nThey were so lost in each other, kissing, gasping, the way two people deeply in love do, until Ellie's phone reminded her that she needed get a move on.\n\nShe broke from his lips, her eyelids heavy with need. \"That's Kara. I need to go.\"\n\nOliver palmed her cheeks and kissed her as if she'd said nothing, and Ellie didn't even attempt to resist, her lips parting for his tongue, her sex hot and secreting lust. Kara would just have to wait until her brother had enough. Ultimately, he let her go when sucking her lips meaningfully, their excitement thumping in their chests.\n\nHe nibbled her bottom lip. \"Don't take too long.\"\n\nShe tugged at his lip back, giving a soft moan as she did. \"I miss you already...\"\n\nHe gave her tight ass a swat that made his sister lunge away with a cute, satisfying shriek. Giggling, she fetched her purse and sashayed toward the door on her platforms.\n\n\"Papi, can I go to the mall with Mommy?\"\n\nEllie stopped in her tracks, her blue eyes taken by stupor as she swiveled. Oliver was just as dazed, goggling at his little girl, who hadn't even lifted her head from her drawing book as she painted the princess's dress in a dark shade of blue.\n\nChildren are the most fascinating creatures there is. Michela couldn't even be bothered to stop painting after dropping a bomb the size of a nuke. And why would she? At the tender age of 5, she couldn't comprehend the deep meaning behind what she'd said, nor did she care. Untroubled with the trivialities burdening the lives of adults, she was blind to the impact that word carried.\n\nAs she should be. The world of children is a beautiful, innocent world, one that simplicity stands at its core. It's a world liberated of pretense, lies, and trickery. It's a world where one instinctively speaks the truth, where honesty and candor are deeply rooted in the soil their little feet stand upon. It's a simple world where one wears one's heart on one's sleeve.\n\nAnd Michela was a citizen of that world. She was a child, and a very loved one. Sheltered by her doting father, her world remained pure and intact. She had no grasp of ugly inhibitions born from adulthood, and she never had to fear of bearing her heart. And that's all she had done here: expressing what was in her heart.\n\n\"Can I, Papi?\"\n\nThe siblings traded looks, yet very different from those they had only seconds ago.\n\n\"Principessa, um...\" Oliver swallowed, lost for words.\n\nAn emotional Ellie set her purse on the small kitchen table Michela was drawing on and knelt before her. \"Sunshine, what... what did you call me?\"\n\nMichela changed crayons, painting the rim of the dress in pink. \"I called you Mommy. My friend Rachel at kindergarten told me that if you're sleeping in the same bed with Papi, it means you're my mommy now. And I was so happy, because I never had a mommy, and now I have one, like all the other kids.\"\n\nEllie's eyes welled up as she caressed Michela's hair. She sighed as she looked up at Oliver, who seemed still addled as to how he was supposed to feel about it. She knew his head must be reeling. After all, her real mommy had died while giving birth to her, and there had been no sign that could prepare him for this moment.\n\nThey hadn't gotten the chance to discuss it, and perhaps Ellie should have first asked her brother how he felt about it, but as emotional and excited as she was, she made an executive decision. She loved this little girl no less than Oliver, as if she'd come from her own loins. Until today, her brother might have had the final say regarding Michela, but not anymore.\n\nTears streaming from her eyes, she palmed the little girl's cheeks and kissed her tenderly, the way only a mother could. \"That's very true, what your friend said. I am your mommy and always will be.\"\n\nA grin exploded across her daughter's face. Although Michela had no doubt Ellie was her mother, to hear her acknowledging it, filled her heart with joy she'd never experienced before. Her father did what he could, and she would forever cherish him for it, but every girl needed a mother.\n\nShe wrapped her tiny arms round Ellie's neck, her little heart aflutter. \"I love you, Mommy!\"\n\n\"I love you too, sunshine,\" Ellie wept in reply, holding her daughter so tightly, their bodies convulsing with sobs of happiness.\n\nAnd just like that, Ellie became a mother, and she didn't even have to give birth. Holding her daughter in her arms, she couldn't process it yet, but the words \"Zia Ellie\" would never be uttered ever again.\n\nShe kissed Michela repeatedly and rose to her feet. She fetched her purse and clasped her daughter's hand in hers as she looked determinedly at Oliver. \"I'm taking our girl to the mall.\"\n\nThis was a bittersweet moment for Oliver but mostly sweet. He knew that if Bianca was watching, she would approve. He'd given their daughter everything he had, dedicated his life to her, but there was only so he much he could give, and heaven knew she deserved more.\n\nBehind misty eyes, he bobbed his head, smiling tenderly. \"Hurry back, you two.\"\n\n***\n\nKara met up with Ellie and Michela at the mall shortly after as they were making last-minute purchases before everyone hit the road. Ellie acquired the aromatic oil she'd been applying on herself to her brother's pleasure along with miscellaneous hygiene products. The two of them then bought new swim suits and clogs\u2014Michela got her own set, naturally\u2014and the three sauntered to the exit, each relishing an ice cream cone with the flavor of her choice.\n\nNo more than fifty feet from the exit, Michela darted to a coin-operated police motorcycle that she simply had to mount before they left. Her mother slotted the exact sum in, and the motorcycle jerked into an undulating motion, flashing lights and sounding sirens, while a female dispatcher informed the little girl on the radio of a hot pursuit she needed to partake in. Michela devoured the remains of her ice cream, clutched the grips of the handlebar, and merrily headed off.\n\nThe women stood not far away, tittering in mirth as they observed the little girl haphazardly pushing buttons while swinging herself forward, as though the infantile contraption would speed up if she did. Kara was then brought into tears when learning about the amazing development in Ellie's relationship with Michela. But just as the brunette was about to share some exciting news of her own, Ellie noted in the corner of her eye a man she'd used to know very intimately up until not very long ago.\n\nKara stopped mid-sentence, realizing she wouldn't be doing any sharing any time soon. She gave the blonde a look that effectively said, \"This is going to get awkward...\" and left to join Michela.\n\nConsternated, Ellie gauged the man's face, who stood reasonably far and yet too close to ignore. He seemed to be waiting for her to make the first move. The pain as well as the shock in his gaze hinted that much. She released a sigh, discarded her ice cream, and strutted forth to meet him halfway.\n\nThey stood silently next to one another for an agonizingly tense moment before Ellie, while clasping her hands nervously, finally croaked, \"Hello, Jason.\"\n\nHe replied with an almost imperceptible nod, his eyes registering her bulging belly over and over, as though a third or a forth glance would somehow flatten it.\n\nEllie swallowed in discomfort as her ex-fianc\u00e9 openly studied her advanced pregnant looks. She made a monumental effort to raise a smile on her face, however strained. \"How've you been?\"\n\nHe shot her a look. \"Not as busy as you have, obviously.\"\n\nEllie gulped again, hating every second of this gauche encounter. This was the first time she had either seen or spoken to him since that night he and Oliver had gotten down over her. He looked incredibly buff, even by his standards. Thankfully, his nose seemed to have healed properly, Ellie was relieved to see. \"Jason, I've been wanting\u2014\"\n\n\"Question,\" he cut her off. \"How far along are you?\"\n\n\"Far enough,\" she replied dryly, reluctant to volunteer any details.\n\nHe paused to better gauge the size of her belly. \"I don't suppose it's mine by any chance?\"\n\nTeeth nervously grating, the blonde replied with a shake of her head.\n\nHis brows knotted angrily, even if he hadn't meant to. \"May I ask who the lucky guy is?\"\n\nEllie sighed, quickly becoming testy. \"No, you may not.\"\n\n\"Why not? It's not like I give a shit anymore.\"\n\n\"If you don't give a shit, then why ask in the first place?\"\n\n\"Just curious who you replaced me with. I have strong hunch about someone, but... it wouldn't be appropriate to suggest it.\"\n\nEllie gulped, rolling her eyes as she did.\n\n\"I'm doing okay by the way. Thanks for asking,\" he said sardonically.\n\n\"If you hadn't insisted on making this so fucking awkward, I might've taken interest.\"\n\nHis face twisted into an expression of aching perplexity. \"I've made this awkward? For fuck sake, we're not even six months broken up, and\u2014\"\n\n\"Eight,\" she emphatically corrected.\n\n\"Eight months then; whatever. It doesn't change the fact that you got yourself knocked up by\u2014we'll just call him a mystery guy for the time being\u2014the second you called off the wedding. Or was it even before that?\"\n\n\"Jason, you're mad and hurt, and you have every reason to be. The way I handled us was definitely not my finest hour. Had I had the chance to go back, I would've done it all differently. But I can't. All I can do is tell you how truly sorry I am for everything that happened. You didn't deserve that, and I will forever regret the way I hurt you. For what it's worth, it was never my intention. It may not seem like that to you, but I do care about you. I want you to be happy. I sincerely do.\"\n\n\"I was happy. You know, up to the moment you started going crazy.\"\n\n\"I was happy, too, Jason.\"\n\n\"Not happy enough as it turned out.\"\n\nEllie shook her head, shuffling her weight from one foot to the other as she glimpsed at Kara and Michela. Her best friend reassured her with a look that said I've got it covered and fed more money into the machine, keeping Michela preoccupied.\n\n\"You know, you never gave me an explanation. A real explanation.\"\n\nEllie glanced at the throng of happy shoppers that passed them by and heaved a sigh. \"Jason, I want to explain it to you, but I can barely explain it to myself. A year later, and I'm still not sure I completely understand it.\"\n\nHer ex-fianc\u00e9 pondered her words, specifically the incriminating timeframe she may or may not have intended to divulge. \"Let's cut the bull here for a second, Ellie, shall we? The baby? It's Oliver's, isn't it? You've been fucking your own brother, haven't you?\"\n\nEllie shook her head in exasperation, slowly unravelling.\n\n\"Holy crap, it is his.\"\n\n\"You know what? Fuck it. Yes, Oliver and I are in a relationship, and yes, it's his baby. You can now go ahead and start all the rumors you want about me, drag my name through the mud, trash me, shame me, whatever. If it makes you feel better, calling me out publicly about what a perv I am, then just go ahead and do it. Ruin my life.\"\n\n\"It'll ruin your life for sure, but how is it going to make me feel better?\"\n\n\"I don't know! I don't know anything anymore, Jason! Just do what you think it's best for you. If you want vengeance, then here's your chance. Go ahead and... wreck my life.\"\n\n\"Why did you even confess it to me if you knew it was gonna wreck your life?\"\n\n\"Maybe because I deserve it... I don't know.\"\n\nJason shook his head frustratingly. Eight months later, and despite all the suffering she'd caused him, he still couldn't bear seeing her in tears. She always had that strange influence on men.\n\n\"I can't promise you that I'm not going to say anything. But seriously, Ellie, what the hell is wrong with you? You dumped me for your own brother?\"\n\nEllie sniffled, wiping off her tears. \"I don't expect you or anyone else for that matter to understand it.\"\n\n\"Can you at least try? Make me understand it? Considering we were engaged and all, and you did break my heart...\"\n\nEllie sniffled again, her eyes red. \"Will... will it make you feel better?\"\n\n\"I don't know, but it'll give me closure. And if you really care about me, wouldn't you want me to have closure?\"\n\nEllie achingly bobbed her head, tears streaming from her eyes all over again. \"I do.\"\n\n\"Okay then.\"\n\nThe blonde collected her thoughts as she cleared the tears from her cheeks. \"Jason, for the better part of our relationship, I... I was happy. I loved you; I got engaged to you; I wanted a life with you. But then... he came back, and it fucked my head real bad. I... I...\"\n\n\"So just like that, you weren't happy anymore? Because if I remember correctly, nothing changed between us.\"\n\n\"No, not between us, but... inside me, it did change. And I should've come clean about it right from the get go\u2014and if he wasn't my brother, I would've, Jason. I would've cut you loose much sooner and cleaner. But it was excruciating for me to acknowledge. He was my brother; it was taboo; it could've ruined our family. But... ultimately, a girl needs to follow her heart, no matter how crazy and how completely off the reservation it seems, and my heart, as much as I tried ignoring it -- wanted him.\"\n\nJason swallowed, squeezing down the lump in his throat.\n\n\"Not many women would've done what I did had they been in my shoes, but would you really have wanted me to marry you when my heart belonged to another? When I could no longer reciprocate your love? It wouldn't have been fair to you, Jason, even if I could. And he's my brother; he was always going to be there... I wouldn't have been able to forget him.\"\n\nJason nodded as he suppressed his tears. \"You know, it hurts hearing all of this. Because although I suspected you were doing something with him, I never had proof. But I think it mostly hurts because... if he hadn't showed up, we would've been married now, this baby would've been mine...\" He gave a sigh, his eyes misting over. \"We would've been so happy.\"\n\nEllie wrapped her arms around him and wept softly on his chest, and to her surprise, he didn't push her away. \"I'm really sorry, Jason. You're such... an incredible guy. And I know this is still hard for you, but... I really do believe that everything that happened is for the best. Very soon, you'll meet a girl, the right girl.\"\n\n\"I already met her,\" he whispered hoarsely, \"and she dumped me for her brother.\"\n\nEllie pulled away, noting the wetness in his eyes. \"No, it isn't me, Jason. But she is out there, and when the time's right... you'll find her.\"\n\n\"Mommy, I'm done. We can go now.\"\n\nEllie tearfully giggled as her daughter clung to her side with such love she'd always imagined her brother felt. She smiled at Jason, who was staring down at Michela, deep in thought. \"I wish you all the best of luck, Jason. Wherever life takes you.\"\n\nTaking a deep breath, her ex bobbed his head, a benevolent smile slowly and achingly rising on his lips. \"Oddly enough, and in spite of everything... I wish that for you, too.\"\n\n***\n\nEllie and Michela waited for Oliver outside the car while he was lugging the suitcases out of the apartment building. The second Ellie set her eyes on him, her throat was stifled with tears, happy tears. Oliver gave her his signature smile from afar and opened the trunk to Alice's car. Since Ellie's Mini Cooper couldn't accommodate the three of them plus Ellie's considerable luggage, their mother had given them her car. She would roll with her husband along with Dave and Kara in Dan's BMW, the same one Ellie and her baby bro had violated numerous times by now.\n\nOliver loaded the trunk with the suitcases after seconds of fumbling and tinkering for every extra inch of space. Michela jumped in the back, and Ellie wrapped her arms around him, softly crying as she did. This day had been so emotional thus far, and Ellie really hoped she wouldn't be sobbing for the rest of the weekend.\n\nOliver kissed the top of head, loving the feeling of her pregnant belly nuzzling at him. \"What's with the tears, Mommy?\"\n\nEllie chuckled as she looked up into his eyes. \"You have this effect on me, you know.\"\n\n\"And here I thought it was our daughter.\"\n\n\"No. This time, it's all you, my gorgeous boyfriend.\"\n\nHe tucked a few strands of hair behind her ear and dug his fingers in her thick, golden mane. \"Is everything okay?\"\n\nHer blue ponds twinkled with true bliss. \"I've got my man with me, my daughter... it doesn't get any better than that.\"\n\nHer mouth found his as they sucked and kissed, their genitals tactfully grinding together. Oliver squeezed those tight little buns while his tongue thoroughly explored her sweet, warm mouth. Ellie softly moaned and bulged her tush, cupping and kneading those fine, muscular orbs into his lewd palms. The kissed passionately, losing themselves for long seconds, before Oliver tenderly pulled away, gasping as he did.\n\n\"Now sit that tight ass in the car, and let's roll.\"\n\n\"Yes, Master, baby,\" his stunning sister purred teasingly and spun around.\n\nNibbling her bottom lip, she grinned suggestively at him over her shoulder as she posed, standing on her tippy-toes, her butt jutting out.\n\nOliver chuckled and handed her right globe a good, caveman slap, and the blonde yelped and giggled as she sat her perfection of ass down in the passenger seat.\n\n***\n\nUp in the mountains, over four hours later, Oliver, Ellie, and Michelle rendezvoused with the rest of their family in the parking lot of the splendorous resort that was situated across the edge of the mountain. Giggling, Ellie pulled her bare feet off the dashboard and stepped out to the sweltering sun. She was in such a good mood. The moment Michela had dozed off in the midst of watching Frozen on her iPad, she and her brother had begun teasing and groping one another.",
        "Grinning at each other, the women instantly huddled as they proceeded into the grandeur lobby without a care in the world, leaving the heavy lifting to the men. The guys had serious work cut out for them as each female seemed to have mistakenly packed for a month-long vacation. Oliver, easily, had the most trouble hauling his girls' luggage while being ignored by Jack and ribbed by Dave and his father.\n\nThe ladies had already claimed their respective room keys by the time the guys trickled into the cool lobby. They then handed the keys over to the disheartened men and announced that they were going to scope the amenities out, namely the pool and its in-water bar. The perspiring men set off promptly, scouring the place for their rooms.\n\nThe resort was vast, sprawling over two hundred-fifty acres of land. It offered a golf course, tennis and basketball courts, video rooms, and several smaller pools atop the prominent one, which featured attractions such as slides, caves, and a waterfall. At the heart of it, stood a stout, rectangular complex that housed the lobby, a state-of-the-art gym, and several other amenities, such as a laundry room and a spa equipped with a wet sauna. Strewn across the premises were quaint stone cabins, arranged in clusters of three-four, and anchored by an outdoor hot tub sitting smack at the center of each.\n\nAt long last, the guys had located their rooms. Unfortunately, the four-room clusters were all booked out, so they split up: Jack and Dan headed to one cluster while Oliver and Dave found theirs a two-minute walk away. After strolling about the resort, everyone took an afternoon nap before they awoke for dinner. Or was it a banquet?\n\nA buffet table that stretched as far as the eye could see, laden with a bevy of colorful salads and exquisite carbs, capped off with a mouthwatering orgy of fish, meat, and poultry. The desserts lay on a separate rounded table that was packed with waffles, pancakes, cheesecakes, and a baffling diversity of chocolate cakes alongside cereals of all sizes and flavors.\n\nMichela kept on coming and going with the vigor of a starving waitress, piling onto her plate portions of food that could have fed a small army platoon. The whole family found it immensely entertaining, and each time she rose for a refill, a warm of wave of laughter swept over the table. With a child-like grin on her face, the little girl dug in, sating her need to taste anything and everything.\n\nOut on the balcony, the Jensens fed and drank, enjoying a meal like they hadn't in a while, before the guys took their wine glasses and wandered farther out on the balcony toward the railing. Dan treated his sons to his Cuban cigars, and the four smoked while enjoying the view of the dark mountain ridge as it contrasted the lit-up resort on this excellent summer evening.\n\n\"God, what wouldn't I do for a glass of wine and a smoke,\" Ellie said wistfully while observing them.\n\n\"Tell me about it,\" Gena related. \"Can't wait for the moment this guy is out.\"\n\n\"Yeah, I hear you, girlfriends,\" Kara chimed in in solidarity.\n\n\"What would you know about it, Kar? You can drink and smoke to your heart's con...\" Ellie trailed off, noting the mischievous smile on the brunette's face, a smile Ellie knew very well.\n\nKara laughed louder and louder the longer her best friend studied her face.\n\n\"Shut. Up,\" Ellie drawled in such drama, surmising what Kara had been withholding from her. \"No way!\"\n\nKara simply guffawed while the rest observed her in mirth, though oblivious to the crux of her laughter.\n\n\"Kara!\" Ellie exclaimed with an excited smile.\n\n\"B-babe!\" Kara stammered to her boyfriend between boisterous giggling.\n\nDave put out his cigar, realizing it was time. He beckoned to his brothers and father as he joined his girlfriend, who was still laughing rowdily.\n\nThe family gathered up just as Dave made an asinine face while leaning over his girlfriend's shoulder. And as if poorly rehearsed, the two chanted in painful disharmony, \"We're pregnant!\"\n\nThe whole family cheered, completely caught off-guard. Ellie shot up from her chair, yipping and clapping, before she flopped down in Kara's lap and smothered her with a hug that attested to the deep love she felt for her. Shrilling like mentally incapacitated sluts, they kissed and laughed before the brunette loosened Ellie's bear hug. \"Wait! Wait! That's not all!\" She flipped the blonde her ring finger. \"Feast your eyes on this rock, bitch!\"\n\nWhat followed next was an utterly unhinged display of screaming and kissing from both girls. They rose and started tottering in circles in some retarded, ceremonial dance that they were certainly unaware how preposterous and grotesque of a spectacle it looked. Dave quickly joined them to the ear-deafening laughter of their family and innocent guests alike before Ellie's daughter squeezed in, unwilling to sit this one out however full she was.\n\nFinally, they untangled when Dave hoisted Michela up on his shoulders and approached his laughing parents, who were so excited and joyful at the news. Oliver moved Michela to his shoulders while Dave rightfully claimed the heartfelt congratulations, first from Dan, followed by weepy Alice, and lastly, from Jack and Gena.\n\nThrough it all, Ellie and Kara were still monkeying about to the music only the two of them could hear until Ellie palmed Kara's cheeks, tears of happiness streaming from her eyes. \"We're going to be sisters! For real!\"\n\nKara laughed tearfully. \"We always have been, Ell!\"\n\n\"I love you, Kar...\"\n\n\"I love you, too, bitch...\"\n\n***\n\nAn hour later, the merrymaking still hadn't dwindled. Oliver and Dave grabbed a couple of beers and sauntered back to their rooms. They weren't about to retire to bed though, with such a fine hot tub and a host of beers awaiting them. They were going to celebrate into the night.\n\n\"I'm so happy for you, Bro,\" Oliver said, throwing an arm over Dave's shoulders and playfully strangling him.\n\nDave laughed, pulling away from the gentle, loving noose. \"Thanks.\"\n\n\"Did you see Ellie? I thought her water was going to break.\"\n\nThey guffawed, recalling their sister's embarrassing lack of self-restraint.\n\n\"So, got any tips for me, Bro? On how to rear a child?\"\n\n\"You don't need any,\" Oliver reassured him as he swigged his beer. \"You're going to be an awesome father.\"\n\nDave smiled and took a draft from his bottle. \"How are you coping? With the whole... pregnancy.\"\n\nOliver bobbed his head. \"Better. I'm still scared if I'm honest, but now I feel like I have nothing to be scared about. You know what I mean?\"\n\n\"Definitely, dude. Smooth sailing, trust me.\"\n\nOliver swallowed as he nodded again, his mind seems to be elsewhere. \"Good. Keep telling me that. It feels really good to hear that.\"\n\nThey kept on strolling, each quietly ruminating, the gleeful vibe strangely seeping away.\n\n\"Are you really leaving, Bro?\" Dave murmured after minutes of ambling in silence.\n\nOliver gave him a soft, affecting smile. \"Yeah.\"\n\n\"What are you gonna do there? Like, to provide?\"\n\n\"Well...\" He glanced at Dave, contemplating. \"Can you keep a secret? Seriously, no word to Ellie or Kara about it.\"\n\n\"Bruh,\" Dave exclaimed, insulted by the mere suggestion.\n\nOliver nodded, taking it as a yes. \"Antonio and an engineer friend of his have this idea for a startup that I don't really know anything about yet, but... it's supposed to be revolutionary. He said he was gonna brief me when we got there, but knowing Antonio, it's absolutely going to turn a profit.\"\n\n\"No shit,\" Dave muttered in surprise.\n\n\"Yeah. They've got a business plan and everything sorted out. They're just waiting for me now.\"\n\nA frown creased Dave's forehead. \"Hold on. You don't know anything about it? At all?\"\n\n\"It has something to do with a patent they'd filed a year ago that only recently got approved. That's all I know. But, Antonio... he's a seriously bright guy. If he says this idea of them can bring big money, I wouldn't want to be the one betting against him. It isn't his first endeavor, either. He's like a real wiz when it comes to making money.\"\n\nDave sipped his beer as he pondered to himself. \"Do you get percentages? Do you need to invest?\"\n\n\"20%. Quarter of a mill.\"\n\n\"Fuck! 250K?\"\n\n\"Yeah. I'm not worried though. Antonio said that at the bare minimum we should expect a twenty-five dollar return on each dollar invested. And that's like a super-bearish estimate.\"\n\nDave frowned, crunching the numbers in his head. \"Twenty-five dollars on each dollar? That's like... more than 5 mill.\"\n\nOliver gave him a sly wink and the complementary squeak. \"Don't forget, mums the word. I want to surprise Ellie.\"\n\n\"Bruh! Seriously?!\"\n\nOliver laughed, so lightheaded and happy.\n\n\"How soon can he promise you that kind of return?\"\n\n\"He said between three to five years, during which I will need to help them with the infrastructure and do all the legwork, 'cause he doesn't want to quit his job at the bank. He's been working there for over twenty years now.\"\n\n\"Smart guy.\"\n\n\"Told ya,\" Oliver said confidently.\n\n\"I don't suppose they're looking for investors?\"\n\nOliver laughed as he polished his beer off. \"Why? Are you looking to invest?\"\n\n\"Hell, yeah! You're a smart guy, Bro, and I trust you when you say it's gonna pan out, especially when you're biting with your own money. I don't wanna miss out. I'm going to have a family to feed soon, you know.\"\n\n\"Yeah, you do, you son of a gun!\" Oliver prodded him at the ribs with his elbow, and Dave laughed as he pulled away.\n\n\"Then talk to him, Oliver! Get me in! Look out for your brother.\"\n\n\"Dave, I don't think they're looking for investors to be honest. They don't even need me. Antonio's cutting me in only because I'm his son-in-law.\"\n\n\"Not cool, Bro. And to think I forgave you for Ellie and Michela... \"\n\n\"Dave...\"\n\n\"What?! It's true! And I'm really the only brother you've got, considering Jack hating your guts and all.\"\n\nOliver sighed, hating the emotional extortion, however justified. \"Fine. I'll talk to hi\u2014\"\n\n\"Oh, Oliver, you're the best!\" Dave threw himself at his brother, who chuckled at this juvenile display. \"Dave Jr is going to love you so much! You know, for not starving...\"\n\nOliver genuinely burst out laughing, his brother fawning over him so ridiculously. \"Dude! Stop kissing me!\"\n\nHis brother let him go and gobbled up his beer with a smile.\n\n\"Dave, I'm going to be upfront with you though. Even if they're letting you invest, you won't get huge percentages here.\"\n\n\"Why?\"\n\n\"Because they don't want to give anyone a piece of the pie. I told you they're not looking for investors. And I'm family, or charity, whatever you wanna call it.\"\n\n\"No, I want at least 10%, Oliver! Don't fuck me over!\"\n\n\"Bro...\"\n\n\"Oliver! Tell him I'll do anything! I'll come with you to Italy if he wants!\"\n\nOliver frowned at him, taken aback. \"Seriously?\"\n\n\"Fuck, yes! I'll help you with all the legwork, really give myself to this!\"\n\n\"Buddy, it'll take a few years until we see someth\u2014\"\n\n\"So, what?! It's not like I have a better offer on the table. And with you and Ellie and Michela gone, it's going to feel really lonely and depressing here anyways.\"\n\n\"Fuck,\" Oliver murmured, studying his brother's face. \"You're serious.\"\n\n\"Dead, serious, dude. Take me with you. We'll build this shit from the ground up and cash in when Antonio says we can.\"\n\nOliver still couldn't believe this abrupt development. \"Kara?\"\n\n\"Oh, she's going to be game, totally. Don't worry about her.\"\n\n\"Are you sure? Doesn't she have a family and\u2014\"\n\n\"Dude, she despises her douche brothers; they never even talk. And her mother is a total winch. Believe me, I've met her. Ellie's really all the family she's got.\"\n\nOliver pondered some more, can't fault the idea of his brother joining him. \"Well... okay then.\"\n\n\"Yeah? So, you're going to get me in?\"\n\n\"I'll do what I can, that's for sure. No promises.\"\n\n\"That's fine. But when you talk to Antonio, I want you to remember how hurt I was when you started doing Ellie.\"\n\n\"Oh, you mother fucker!\"\n\nThey brawled playfully down the last stretch, both excited about the possibility of their plan coming through.\n\n***\n\nThe brothers settled in the hot tub, and on the ground nearby, a dozen beer bottles or so had been slain. They'd been trying to work out the details of Dave and Kara's possible move to Italy, even going as far as to surveying the real estate in Milan on Oliver's phone. Since they were both inebriated, the research had struggled to have real legs.\n\nThe conversation naturally strayed to their joint passion for gaming and the war of consoles. Each was championing the platform of his choice when they heard from afar distinct girly laughter. Rounding the corner, their girlfriends emerged, arm in arm, giggling and whatnot. They sighted their boyfriends soaking in the hot tub, each gripping a beer. But before Kara could say anything, Dave announced, \"We're moving to Italy!\"\n\n\"Dude!\" Oliver chided. \"Does 'mums the word' ring any freakin' bell?!\"\n\n\"Oh, yeah, yeah,\" his brother slurred, \"mums the word and shit...\"\n\nOliver shook his head, trying to stifle a laugh, unsuccessfully.\n\nThe women approached, both mystified. They demanded clarifications, mainly from Oliver, as Dave seemed to be too far gone.\n\n\"We're going to be rich!\" Dave cut his brother off as the latter began weaving a white lie.\n\nOliver whirled on him. \"Bruh! What are you doing?!\"\n\n\"Oh, fuck... mums the word, yeah. Sorry, Bro.\"\n\nThe girls tittered, both finding the news exciting and Dave hilarious.\n\n\"Oliver, is it true?\" the brunette asked impatiently. \"Are we really moving to Italy and going to be rich?\"\n\n\"Well... it's um... there're so many details that still...\" He sighed deeply at the black skies, frustrated. \"Fuck! Yes! Probably...\"\n\nThe girls yipped at the top of their lungs in unison before they recommenced that embarrassing dance from earlier. Dave cheered them on while his little brother shook his head in disapproval.\n\n\"Baby, come here for a second!\"\n\nOliver stepped out of the hot tub, and his sister snaked her arms around his neck as she whispered in his ear, \"Our daughter is waiting for you to tuck her in in Mom and Dad's room, so we're gonna\"\u2014she clamped her lips onto his ear and tugged\u2014\"have the whole night to ourselves...\"\n\nOliver's member twitched in his trunks, his ear gravitating toward her distancing mouth.\n\n\"Uh, uh, uh,\" Ellie said playfully while shaking her head at his attempt to insert his ear back between her moist lips. \"Kara and I are gonna change into our swimsuits. When you get back, you're going to explain everything to us, and if I like what I'm hearing, then... I'm going to give you\"\u2014she sucked gently on his lips\u2014\"a night\"\u2014she kissed his throat\u2014\"you'll never\"\u2014she slithered her tongue into his ear and moaned sensually deep inside\u2014\"forget...\"\n\n\"Oh, fuck,\" he whimpered, aroused beyond reason.\n\nEllie giggled and opened the door to their room. She turned to look at him over her shoulder, her catlike blue eyes so sultry all of a sudden. \"Don't keep me waiting...\"\n\n\"No, ma'am! I mean, uh\"\u2014he grabbed his tank and swallowed\u2014\"be right back.\"\n\n*\n\nOliver left to tuck his daughter in. Michela may have had a mother now, but this was hers and her father's ritual, always would be. Meanwhile, the girls donned their sexy bikinis and joined Dave outside. Kara slipped into the hot tub next to her fianc\u00e9 while Ellie merely submerged her legs as her advanced pregnant state prohibited her from fully soaking.\n\nDave brought the girls up to speed on what little he and Oliver knew. They women were so excited at the thought of all four of them putting roots in Italy. It wasn't about the financial prospects, either. Even if Antonio's startup fell flat, it wouldn't matter to them. Some things money just can't buy. Family, camaraderie, friendship, and love, those, one simply can't put a price on.\n\nDave then left the girls to themselves after being quite vocal about his need to drain his bursting bladder. Kara cracked a beer open and laughed at Ellie, who seemed genuinely tormented by the sight.\n\n\"Don't go overboard, slut,\" Ellie said bitterly as she sipped her coke. \"You're preg too, don't forget. And you've had quite a few already.\"\n\n\"Six weeks is nothing. My doctor said that aside from stop smoking, I don't have to do shit for now, so fuck you, you whale.\"\n\nThey laughed before Kara made love to the bottle, relishing the suffering expression on Ellie's face as she sucked the whole glass neck into her mouth.\n\n\"When are you going to get married?\"\n\nKara glided the bottle out. \"Probably next weekend or the one after. We're going to Vegas, so get ready. You and Oliver our are witnesses.\"\n\n\"Vegas?!\" Ellie exclaimed.\n\n\"Uh-huh. Weren't you aware that I've always dreamed of getting married in an Elvis chapel? It's going to be epic.\"\n\nThey giggled.\n\n\"Kidding aside, that's like our only play now.\"\n\nEllie's brows knotted in puzzlement. \"What do you mean?\"\n\n\"That you and Oliver really killed any chance for a big, formal wedding\u2014for Jack and Gena, too. Could you imagine all the incest murmur as we walked down the aisle?\"\n\nEllie bobbed her head, guilt washing over her. \"I never really thought about it like that. You're right.\"\n\n\"Cheer up, Ell,\" Kara cooed with a loving smile. \"I really couldn't care less about my family, and your folks seem to have come to terms with it, also. Gena is still pissed about it, but she'll get over it. Maybe they can have their big wedding when we're far away in Italy. That way they can avoid the awkwardness.\"\n\nEllie pulled her fair hair back with a sigh and shook her head. \"It's so f'd up, Kara. The world is so f'd up. I can't wait to move to Italy and drop this fucking pretense.\"\n\n\"It's hard, isn't it? That you can't...\"\n\n\"It's horrible. You have no fucking idea how much. Sometimes, when we're in a restaurant, or the mall, or just walking down the street, I feel like kissing him and stuff... and I can't. I can't do shit. I can't even touch him in a certain way.\"\n\nKara swigged her beer, pondering what it must feel like. \"Well, not for long, babe. Soon, you'll be free.\"\n\n\"Can't fucking wait. I swear, as soon as we get there, I'm gonna rape him in front of that giant cathedral. I'm gonna pull out his cock in the middle of the piazza and suck him off right there.\"\n\nThey guffawed, visualizing the lewd scenarios.\n\n\"You probably could, you know,\" Kara giggled. \"Europeans are so less inhibited than us Americans when it comes to sex.\"\n\n\"So I've heard,\" Ellie uttered, laughing.\n\n\"Yeah! I bet we could like... even swap and shit, and it'd be totally cool.\"\n\nEllie laughed as she brought the bottle to her lips. \"What do you mean? Like swing and such?\"\n\n\"Yeah, or like... oh, I don't know, swap between us...\"\n\nEllie pulled the coke from her lips, taken aback. She surveyed her best friend's face sternly. \"What are you saying, Kar? You... you wanna fuck my man?\"\n\n\"What?! No! I was just... spitballing! You know, just...\"\n\n\"Just what, Kar?\"\n\n\"Come on, Ell, g-give this bitch a break,\" she slurred with a laugh that Ellie felt very uncomfortable with. \"I'm drunk as a skunk! I have no idea what I'm saying!\"\n\nJust as neither had thought it could get any more awkward, Oliver returned, smiling obliviously. Ellie looked from him at the brunette, who promptly swerved her head to the entrance of her room as she gobbled up her beer, seemingly expecting Dave.\n\n\"Mission accomplished! She's asleep.\" He pulled off his tank, fetched a beer, and jumped into the hot tub next to Kara, who immediately scooched away from him. He took a swig as he glanced between them, not blind to the tension. \"Jeez, don't you crazy girls know how to party...\"\n\n\"Hon,\" Ellie said, beckoning to him with her finger.",
        "He rose and waded to the pregnant hottie that was seated on the rim of the hot tub. Oliver was never really informed regarding women's cup sizes, but while eyeing his sister, he speculated she might have hit a letter not many pregnant women did. Wading to her, he drank in that supple, milky bosom, barely constrained in that enormous top. His eyes soon pried into that deep crevice between those vast mounds of veiny flesh, how they rose and fell with each of her breaths while glistening from the steam rising from the hot, bubbling water.\n\nBefore he could even kneel between her slender legs, his sister pulled him down by his neck and took his mouth. Normally, Oliver would feel too self-conscious to oblige; however, an intoxicated Oliver... well, that was a different story.\n\nKneeling in the churning water between her legs, he eagerly fed on his sister's loose tongue and masses of spit. Ellie palmed his temples, content at how compliant he was, and swirled inside his mouth, sweeping his gums and palate, flicking at his tonsils. Her bottom scooted forwarded into his crotch almost of its own volition until she sank into the water, if only barely. Crotches locked, Ellie curled her legs and arms around him and ground up and down, their kiss growing more violent and unrestrained.\n\n\"I know I must be lit as fuck when this looks hot,\" Dave slurred as he stepped outside, his siblings making out with a vengeance, pawing and grinding, rasping and moaning between passionate sucking.\n\n\"Babe, get me out of here,\" his fianc\u00e9e instructed, standing with her arms extended forth. \"Let's give 'em some privacy.\"\n\nDave pulled her out, though acutely aware of how hot his siblings were getting, specifically, his smoking sister. He watched as she heaved in Oliver's lap, groping him, sucking on his tongue for them to see. \"Is it wrong of me to want to stay and watch? I'm getting a huge hard-on right now.\"\n\n\"Yeah, so am...\" Kara bit on her lip and painfully tore her eyes from Oliver's tapering back. \"Inside. Right now.\" She took Dave's hand in hers and dragged him into their room. \"Good night, you love birds!\"\n\nThe siblings hadn't heard a thing, not their commentary nor their good nights. Oliver was too intoxicated, and regardless, his sister had always been too much of a distraction. Ellie, on the other hand, might have initiated contact to make a point to Kara, but five seconds later, she found herself fully absorbed in their heavy petting. She couldn't discern any sound other than lip-sucking and the clash of their moans as she ground atop Oliver.\n\nTheir tongues slapped and twined as the busty blonde mercilessly rubbed crotches with her brother, her mind clouded with sex. She could feel how painfully hard he was against her, his plump member so restless in his swimsuit. Gorging on his spit, she tugged his trunks down, subtly, tactfully, until she could fist the root of his fully engorged sausage.\n\nOliver moaned into her scorching kiss as she stroked him in the bubbling hot water. He was lost in the sensation, kissing his hot, pregnant sister, clasping her tiny waist, rubbing his hard abdominals against her cute little pregnant belly. He moaned again, his sister stroking him so fast now. The blonde pulled from his lips and looked down at their crotches. She eyed the bulbous head while rubbing the thick beads of pre-cum oozing from it before she palmed it and yanked repeatedly.\n\n\"Fuck,\" Oliver breathed groggily, a tidal wave of sexual excitement sweeping over him.\n\nKissing and stroking her brother, Ellie reached for her bottoms and tugged them aside. She pulled the monstrous member to her opening, just letting the shaft snuggle with her bare inner flesh. Oliver moaned instantly, feeling her arousal slathering along his rod. Even while partiality soaking in the water of the hot tub, he could feel it was a distinctly different kind of wetness. Clenching his arms on her tiny waist, he basked in the feeling of her inner pink, flanked by a pair of chubby, pale lips struggling to embrace him.\n\nEver getting wetter while kissing and grinding at him, a whimper escaped the blonde's throat. She and Oliver had never ever done this before, messed around so publicly, and although she wouldn't have wanted to do this on a regular basis, there was strange magic in the air tonight. She was so aroused at him vigorously rubbing her inner flesh.\n\n\"Oliver?\" Ellie gasped after she fought his sweet mouth off of hers. \"I need you to lick me, baby.\" She sucked his earlobe into her mouth and groaned so deep inside his ear canal. \"I need your mouth on my pussy, right here, right now, okay? I'm so hot and wet for you, hon. Lick me, okay? Please, baby?\"\n\nHer inebriated brother was only slightly aware of his surroundings. He tried looking over his shoulder, to survey the area, but Ellie forbade it when cupping his temples. She plunged into his mouth while slowly rising against the length of his erection, sliding her dripping gap ever-closer, methodically, slyly, not allowing her lover to dwell on it. She sat her ass back down on the rim of the hot tub and slid her bottoms off.\n\nThe moment Ellie's wet little slit came to view, Oliver's mind was lost. Spellbound, his mouth gravitated to the confluence of her slim thighs, where the untamed, golden flesh seamlessly morphed into milky white. He studied those swollen, moist folds and her clean-shaven mound as he took a whiff. Her musky arousal filled his lungs, taking control of him. He pressed his lips to her skin and sucked on the joint of her crotch, his hard, developed chest dilating with her strong, heady scent.\n\nEllie fumbled with his hair as he was readying her for his mouth. She stifled a moan after another, feeling him sucking round her bald slit while repeatedly inhaling her through his nose. She was almost jealous of him. She knew she smelled so amazingly ripe at the moment. If only she could have gone down on herself...\n\nShe glanced about, making sure they were indeed alone. The cluster was shaped after a cross. The hot tub was perfectly centered, and three rooms faced it twenty feet away from the south, west, and north. The eastern side was open, with a stoned trail slithering away to the rest of the resort. Facing the trail, she had a clear line of sight if anyone showed up. Since the third room was unoccupied, and since she was positive Kara and Dave were fucking now, she knew she and Oliver wouldn't be disturbed.\n\n\"Oh, god,\" she gasped, her legs slightly trembling.\n\nWhile her brother kissed and teased around her vulva, she licked her thumb and strummed her clit, just wriggling it sideways in its supple bonnet. She stifled a moan as she penetrated herself with her middle finger. Once she took all of it, she plucked it out, dribbling wet, and sucked it clean. A shudder rippled through her as she processed her taste. She tasted like sex, like a female in heat, like a woman starving for a cock.\n\n\"Such a lucky guy...\" she murmured drunkenly.\n\nHer brother didn't hear her. He was preoccupied with her dainty lady parts, tasting her smooth flesh, endlessly taunting her.\n\nEllie gasped deeply and jerked, her knees cocking outward for him of their own accord. \"Oliver, please, I can't take it anymore... let me feel your mouth, baby.\"\n\nThey both shuddered as his tongue flattened up her pussy. He gave her a good, purposeful lick, gathering up her juices, loving that feminine tang associated with her exquisite homebrew. Only when the tip of his wet flesh flicked at her button, did he swallow before licking again and again, using long, thoughtful brushes of his tongue.\n\nHis mouth found her clity, and the flat of his tongue gyrated, twirling that little nub against the soaking muscular sheet. His full-bosomed sister bit back a moan, her long, slender legs parting, her hand soothing their baby with loving caresses to the swell of her belly.\n\nShe jerked against his face when he sped up, her button rolling and swelling and reddening. She pulled her labia apart with two fingers as her bro sucked her clit into his mouth. A tingle flashed between her thighs as her body began responding. Oliver suckled, massaging that little rainmaker with plenty of TLC. The blue-eyed hottie watched in earnest, sobbing cute little moans as her little brother pleasured her. The open air of the hot tub leaving them so exposed only added to their excitement.\n\nSoon, he was devouring her cunt, nibbling her clit, penetrating her with his fingers, going to town on her hot little sex like he always had. Ellie fretted her bottom lip, fighting her inclination to whimper like a whiny bitch when being eaten. She was doing a poor job of it, she knew, heavily relying on the roiling water of the hot tub to muddle her cries.\n\n\"F-fuck...\"\n\nBut she knew she wouldn't whimper for much longer. Just under her chubby mound, she could feel the radiating heat from within building and intensifying, sending lovely tingles and jolts through her enticing curves. Her bro harassed her clit like a schoolyard bully, and she was no better, aiding and abating when parting her lips with two lithe fingers. She gave her helpless nub nowhere to hide, forcing it into her brother's mouth, moaning and mewling as it distended so angrily between his lips.\n\n\"Oh my god, my clit,\" she whined, her pelvis absently rolling, her labia so puffy and open.\n\nShe was about to peak. She bucked against his lips, longing for a release. Her brother was Frenching her pussy, slotting the full span of his fingers into her, nibbling her swollen marble, repeatedly licking along her young, damp cleft with gusto.\n\n\"Baby...\" she warned in her skanky way, her snug entrance trickling onto his lips.\n\nHer bro parted her labia and licked deeper, his wet tongue stroking the shallow surface of her own growing wetness. Ellie clutched his hair and slapped against his lips, not caring for subtlety or finesse. She was hormonal, pregnant, and perilously aroused. She would hump his tongue like the animal he had made her. Her lips clung to his as she gyrated, smearing her juices across his mouth. His nose and her flushed button kept grinding, dancing, flirting, while his tongue darted into her, hooking on her upper wall as it scraped out.\n\n\"Oh my god, lick me, lick me, lick me, lick me...\" she chanted in a breathtaking display of rolling and gyrating, about to culminate.\n\nOliver disengaged from her vaginal trench, and his tongue began exploring the slight flesh that buffered her cracks.\n\n\"Nooooooo,\" the blonde almost wept. \"Clit; mouth; fast... please, hon, please.\"\n\nShe couldn't form coherent thoughts, her mind foggy with want.\n\nOliver knew what he was doing of course, Ellie knew. No one had ever eaten any pussy better than him. He was keeping her close to the tipping point, keeping her hot, wet, and desperate. Ellie thought to berate him, but she could only scold herself, she knew. She had taught him everything there was to know about her, how to deny her, how to make her go crazy, how to beg... and that's precisely what he was doing: making her beg.\n\nHim licking between her cracks brought upon her different kinds of sensations; less powerful than those when he was nibbling her little clity, though very exhilarating nonetheless. Every time his tongue approached her asshole, the strange sensations intensified. Massaging her large bosom in her top, she slowly found herself slanting up her pelvis each time his tongue wandered closer to her anus. And yet he was careful not to rim her, undoubtedly remembering how it had played out the last time, months ago.\n\nShe propped herself on her arms and looked down as he licked and sucked along that intimate bridge. She wanted more. She wanted him to take it further, but he would never, she knew. Not without her strict request.\n\n\"Oliver?\"\n\nHe looked up into her needy blue eyes as he kept pleasuring her, sucking and licking between her holes.\n\n\"Do you want um... do you feel like... eating my ass, baby?\"\n\nHis tongue headed south even before she finished.\n\n\"Oh, god,\" his hot incubator moaned as he licked her brown hole, her eyes fluttering like butterflies. \"Why do I fucking love it... why? Why?!\"\n\nReveling in her inner conflict, he sucked her uptight knot passionately, making it throb like a subwoofer on his lips. He kept buttering her taut pucker with spit before he sucked it over and over, making it cramp and twitch. Ellie's breasts heaved, her breathing growing shallower, her nipples straining like the meatiest needles ever. She genuinely wondered if she had a second clit in there. It was intense, like it had been the last time. She reached her nub and played with it before releasing a low, husky groan. Both her button and anus pulsated in harmony at the uprising of her orgasm.\n\n\"God, I'm such a perv,\" Ellie wailed, her butt rocking to and fro, countering his tongue's rhythm. \"And you're a perv no less for eating your sister's ass like that, and for anyone to see...\"\n\nHeavily parting her hot buns, her brother drove his tongue into her tush, going a full inch in. He gyrated inside her before he swallowed, virtually eating her ass. Fully committed to his rim, Ellie clutched her flushed clitoris between her knuckles and tugged. She bit her lip, her sex-crazed mind going blank, her glassy blue eyes failing to soak light in. She was looking into a blissful abyss, her orgasm like an insatiable black hole, sucking and demanding as it built power.\n\nWhile two of her digits wiggled at her wet clit in a frenzy, Ellie whimpered incessantly, her toned butt cheeks uncomfortably parted. Oliver spat into her bottom, and her moist sphincter vehemently cramped upon swallow. Her brother was so hungry for her bum, wreaking havoc within her crinkly knot. He licked her anal threshold with zeal, tasting her like no man had ever. And just when he so abruptly managed to squeeze the full length of his cylindering tongue in her, she felt a wonderful jolt.\n\nHer body tensed up while her toes drew taut as she arched against him, her bosom bursting in her bikini top. \"Ol-iv-verrrrr...\" she sobbed raggedly, exploding to his deft licking while jerking her moist clit. \"Oh, dear god!\" she keened, her tight little keister gloving his tongue over and over, her clit spelling his name in Morse code.\n\nShe then felt huge pressure within, a surge of liquids, so she tapped on her nub rapidly, and a nice explosive spurt jetted out of her shaved sex. Whimpering like a little cunt, she squirted onto his hair, down to her crack, and her brother slurped her discharge while feasting on her violated sphincter.\n\n\"Ohmygoodnesseatmyasssssssss,\" she cried unintelligibly as he sucked her cum straight from her bumhole.\n\nPeaking so beautifully, she suddenly felt her bro's tongue pulling out of her rectum and his erect member slipping into her epicenter, into her slippery bunny hole, swiftly, abruptly, hungrily. This certainly wasn't the first nor the last time he did it. He just couldn't stand to see her cresting without feeling her soaking vagina round him, quaking, rinsing, spasming... And after he'd eaten her tight little ass, she knew her baby couldn't suppress.\n\nQuickly stretching around him, she whimpered and convulsed as the cock seemingly sent a second climax through her. She pulled her fair hair back with both hands and cried for a deity as the two orgasms swiftly coalesced. She rode the violent undertow, peaking the enormous comber made of golden energy, while Oliver\u2014holding onto her tiny waist tightly\u2014slid her hot pregnant bod back and forth against his groin, aching to be relieved.\n\nUsing his sis to jerk himself off inside her, Oliver found her sweet mouth, and their tongues vined together in an intimate, carnal dance. Cradling him, Ellie glided back and forth, her wet snatch digesting the full length of his beef over and over. Her massive left breast was subsequently pulled from her top, and her bro grasped it crassly, locking the taut, rugged pink between his knuckles.\n\nJust as the last blissful ripple petered out, the smoldering blonde mewled as her brother's pubic bone engaged her brittle one so violently, pressing it inward. It was an incredible feeling, Ellie had to confess. She then felt him throbbing, and with great pressure and pleasure, his seed spilled into her, filling her, mingling with her fluids deep inside her sopping wet womanhood.\n\nIntuitively, her snug passage fisted him, encouraging him, wringing him. Her body was on auto pilot, and this was merely the protocol: cock spurting -- cunt milking. There was no consciousness involved, not a shred of thought behind it. It was purely an urge, one that Ellie could never squash. And she sure hell wasn't going to now, sucking her little brother's sperm into her impossibly hot body, like she always would.\n\nRooted inside his babymaker, clutching her titty, Oliver moaned as he expelled the last of his baby seeds inside her sisterly channel. He could feel her pussy still spasming, still soaking, so eager for his cum. Bursting with spunk, the pregnant bombshell crossed her feet around his butt and strained to grunt as she milked the cock dry. She could feel her shivering kitten pumping round him, sucking the length of him, until her bro was left spent. Throbbing in unison inside the blonde, Ellie curled her arms around Oliver's neck, and he slowly raised her back onto her rear.\n\nImmensely sated and joyous, she laid her cheek on his sinewy shoulder as she caught her breath. In the afterglow, she kissed his flesh, her pretty long nails softly raking across his back. She smiled tiredly, listening to him panting behind her pert ear after he buried his face in her thick golden mane. She gave his member a loving squeeze deep in her pulsing sex and raised her cheek. Simpering drunkenly at the trail in front of her, she suddenly stiffened, her eyes making out the barely lit silhouette of\u2014\n\n\"Oh my god, Mom!\" she shrieked, her stomach roiling.\n\nOliver's chest seized up. He released her breast and plunged into the hot tub. His member had exited his sister so abruptly that it created an outward suction the second he was out. A thick stream of cum oozed out of horrified Ellie for their mother to see. She instantly crossed her long, golden legs, and clenched, stopping her brother's seed from spilling further from the crater he had left inside her.\n\n\"Mom! What are you doing here?!\" she yipped before she realized her right ample breast was fully exposed. She fought it back into her top, mortified. \"Oh my god, I'm so embarrassed!\"\n\n\"No, Ellie! I... I was...\" Alice stammered distressingly, reeling from the spectacle.\n\n\"What are you doing here?!\"\n\n\"I uh... I wanted to ask you uh... I don't remember.\"\n\n\"Oh my god!!! How long have you standing there?!\"\n\n\"I don't kn... a minute maybe?\"\n\nEllie whimpered in disbelief. \"A minute?! What are you, a deviant?!\"\n\n\"I'm sorry, Ellie, I'm sorry. I should've...\"\n\n\"Left?!\" Her daughter cried, her cheeks soaking with tears, her thighs pressing so tightly to keep her baby brother's sperm from dribbling out of her.\n\n\"Yes. The second I um...\"\n\n\"Well, do you care to leave now?!\"\n\n\"Ellie, I'm really sor\u2014\"\n\n\"Mom! Oliver!\"\n\nAlice looked down at the water and jerked her head up and down, realizing that as long as she was there, her baby boy would rather drown before he rose to draw breath.\n\n\"I'm leaving! I'm leaving!\" she announced for her son to hear and fled the scene.\n\nEllie gave Oliver a nudge with her foot, as he was submerged bellow her feet, and he promptly resurfaced, gasping for air.\n\nHis eyes locked in on his sister's for tense seconds before they burst into uncontrollable laughter, splashing water and convulsing with tears.\n\nKara and Dave's door opened ajar, and their brother's head seemed to levitate into view. \"What's with all the yelling and laughing? There are people here trying to f... sleep.\"\n\nNestling back between her legs, Oliver laughed his heart out, and his sister couldn't stop herself from shadowing him.",
        "Their brother shook his head and slammed the door.\n\n***\n\nEarly in the morning the next day, Oliver awoke the sound of his daughter banging on his door. He put his trunks on while smiling at his nude sister, who kept on sleeping through the racket. He knew she was exhausted, taking him twice more until the wee hours of the night. He cracked a window open as the room was suffocated with sex and unlocked the door.\n\nTogether, he and Michela woke her mother up, tickling her torso over the thin white sheets. Ellie feigned sleep as long as she could before bursting out laughing and tickling Michela back. After they showered and got dressed, they joined the rest of their family for breakfast. The embarrassment from last night instantly painted Alice's cheeks in beet-red.\n\nThe siblings weren't any less mortified, realizing their own mother had observed them for a full minute making love. Specifically, the grand finale of Oliver spurting inside his pregnant sister, who was whimpering like whore as he did while submitting to him her bare tit. After they quickly gobbled their food up, the ladies strolled to the pool while the guys left to the tennis courts for a friendly match.\n\nThe women soaked in the pool by the in-water bar while Michela was wrapped around Ellie. The conversation was vapid at first, revolving around the rights of pregnant women at the workplace. Soon, however, they all excitedly discussed Kara and Dave's upcoming Vegas wedding, and the fact that all three of them had buns in the oven.\n\nThey considered possible baby names and their most likely signs before Gena and Kara, sensing some tension between the blondes, waded with Michela to the waterfall and the big pool slide. Ellie wanted to go with them, but her mother insisted she stayed.\n\n\"About last night...\"\n\nEllie sighed, pulling her damp hair back. \"Dear god, are we really going to talk about this?\"\n\n\"I just wanted to make it clear that I wasn't...\"\n\n\"A peeping tom?\"\n\n\"Yes\u2014I mean, no!\" She shot Ellie a look, resenting the criticism. \"Do you really think I came there in hopes of catching you in the...\"\n\nHer daughter shook her head in a blend of exasperation and embarrassment, especially when her mother seemed to be incapable of finishing her sentences. \"Mom, it's cool. Now, I beg you to drop it before I die of embarrassment, and believe it or not, I'm closer than you might think.\"\n\n\"Fine; I'm dropping it. We shan't speak of it ever again, I promise.\"\n\n\"Thank you.\"\n\nAfter an awkward minute of which neither had spoken, not with their mouths at least, Alice bit on her lip, seemingly torn about something.\n\n\"What?\" Ellie sighed testily, almost tasting the inner struggle.\n\n\"I just have one question, and then I'm done, I promise.\"\n\nHer daughter shook her head, rolling her eyes as she did. \"Yeah?\"\n\n\"When he was doing those things to your um... to your\"\u2014she swallowed\u2014\"your bum, were you\u2014\"\n\n\"Oh my god!\" Ellie snapped, blood mounting up in her cheeks. \"You said you were there for only a minute!\"\n\n\"And how would you know it wasn't a minute?\"\n\n\"Mom, he was... he was inside me way more than a minute. I can't believe you! You actually stood there and watched through the whole thing!\" Tears flowed down her flushed cheeks. \"How could you? I feel so violated...\"\n\n\"I'm so sorry, baby,\" Alice sighed remorsefully. \"I'm so ashamed of myself; I really am. I was\"\u2014she shrugged\u2014\"for the lack of a better word, intrigued, I guess.\"\n\n\"Intrigued?\" Ellie echoed in perplexity. \"Mom, this is borderline sick.\"\n\n\"Now don't give me that; especially, not you. You're not really going to lecture me about morals after what you've been doing with your brother, are you? It's simply human nature, to be curious about such matters. Now, are you ready to talk about this like an adult, or are you going to sulk and pout like a child?\"\n\n\"Yeah! Let's be adults about it and talk some more about... oh, god...\"\n\nAlice disregard the little fit her daughter was throwing. \"Were you enjoying it, when he... was doing things there?\"\n\n\"Eating my ass!\" Ellie cried in ire. \"That's the term, Mother. You know, since we're not going to be little babies about it...\"\n\nAlice darted her eyes about, making sure no one had heard her daughter's profane mouth. She scowled at her, disliking her attempt at making it more awkward. \"As you wish. Eating your ass. Were you enjoying it?\"\n\n\"Couldn't you tell?!\"\n\n\"I think you did,\" Alice murmured tentatively, genuinely reflecting. \"It seemed like you were enjoying it.\"\n\n\"Tremendously,\" Ellie stressed, wanting to weird her mother out. \"Now, are we done?\"\n\n\"You know, Ellie, it's not like this is the first time we've talked about your love life. You told me all about Jason, and before him\u2014\"\n\n\"But this is different, isn't it? Do you really wanna be learning about your son's prowess in bed?\"\n\n\"To an extent... yes. It wouldn't bother me. I have long accepted your relationship. I thought you'd he happier about this, honestly, that I'm being this accepting. I wasn't expecting you to question my morals and make me to be this depraved being...\"\n\nEllie studied her mother's aching face, and rage began seeping from her.\n\nIt was true. She and her mother had always had a very special, very open relationship. She'd been divulging to her mother details from her sex life from the moment she'd been deflowered. Alice, on her part, was never judgmental toward her daughter. She was truly her best friend, and they had talked about Ellie's sexual explorations the way best friends do.\n\nThey would drink and laugh, praising the best while mocking the worst of Ellie's partners. Nothing was off limits. Ellie had shared the size of her boyfriends' members, the positions they'd been doing it... the lot. She had even taken interest in her parents' love life, and unlike most daughters, she was sensitive and mature about it. She had allowed her mother to share with her intimate details, and while Alice had never informed her of her husband's actual size, Ellie had gotten the impression that her father was satisfying, if not technically big.\n\nEllie held her mother and kissed her cheek the way a loving daughter would. \"Mom, I'm sorry. I didn't mean to imply that you were perving on us or anything like that. I'm just embarrassed and mad, mostly at myself for doing that in public. It wasn't your fault that you... and I would've most likely been just as intrigued had I come across such a thing. You have nothing to be ashamed of. I am the one who should be ashamed.\"\n\n\"I don't want you to be ashamed, baby girl. I'm just curious, that's all.\"\n\n\"I understand. And if we weren't talking about Oliver, I would've told you everything by now; you know that. But this is different. He's my brother, your son. And even I felt that I could share with you stuff, I couldn't betray his trust. I couldn't do that to him.\"\n\n\"Fair enough. But I... you never did that thing before\u2014at least you never told me you had\u2014and I just wanted to know how it felt, that's all.\"\n\nEllie sighed, feeling like the villain all of a sudden. \"You were right, when you said that I had never done this before him. I so would've told you if I had,\" she giggled. \"And now that I have\"\u2014she gulped, her body tensing up\u2014\"it felt really good, Mom.\"\n\nAlice's face lit up. \"Yeah?\"\n\n\"Oh, yeah,\" Ellie confirmed while splashing water on her breasts. \"I don't know if it would've been that good with some other guy, but with him... it is mind-blowing.\"\n\nAlice gave her daughter a sly smile. \"Good to know. It makes me proud of him.\"\n\n\"Oh, Mom, let me stop you right there. You should be so proud of him, like walking around with his face printed out on your shirt proud of him.\"\n\nAlice giggled, pleased that her daughter was so excited about it that she was carelessly volunteering information. She was going to milk her for everything, she knew. She ordered a martini with a lemon twist for herself and a coke for her daughter before she cocked a brow. \"That proud, you say?\"\n\n\"Mom... oh my god like proud.\"\n\n\"Wow,\" Alice remarked, pondering the best way to squeeze more out of Ellie. \"You know, it's funny because Oliver doesn't strike me as a guy that level of proud. He just doesn't give me that vibe.\"\n\n\"Looks can be deceiving,\" Ellie cooed, not realizing she was being played for a fool. \"Oliver is the very definition of that, in so many ways.\"\n\n\"Such as?\" Alice said casually, her eyes belittling.\n\n\"Such as everything,\" Ellie whispered, disliking the disbelief on her mother's face.\n\n\"I'm sure he is, baby,\" Alice blurted dismissively and sipped her beverage, hoping her daughter would be aggravated enough to feel the need to do some more sharing.\n\nEllie shook her head with a scowl, finding her mother's tone insulting. \"Oh my god, you don't believe me, do you?\"\n\nAlice smiled inwardly, knowing her daughter had taken the bait. \"No, no, I believe you. It's okay. I understand.\"\n\n\"You think I'm bullshitting you,\" Ellie hissed in anger, wanting to slap her mother. \"You were there last night. You saw how good he made me feel, how hard I... came for him.\"\n\nAlice bobbed her head, excited about this breakthrough. \"I did. It certainly looked impressive.\"\n\n\"It felt impressive, too. He felt impressive, if you know what I mean.\"\n\nOf course Alice knew what she meant. A deaf and blind mute would know what she meant.\n\n\"Yeah, he looked... quite substantial.\"\n\n\"And he felt every bit as substantial,\" Ellie added, not realizing she was totally talking up her brother to his own mother. \"Especially when...\" She paused, wondering if she wasn't going too far with the details.\n\nBut Alice was not going to let her dwell on it. She was breaking new ground here with Ellie, and if she wanted to be kept in the loop, she needed her daughter to tell her everything, so in the future, they wouldn't need to tiptoe through that awkward, tentative phase.\n\n\"When... he finished?\"\n\nEllie swallowed and jerked her head up and down bashfully, feeling awfully embarrassed.\n\n\"It's okay. Don't be embarrassed.\" Alice caressed her damp blond hair lovingly. \"I saw his semen flowing from you when he pulled out.\"\n\nHer daughter gulped again, blood rising in her cheeks. \"Mom, don't you dare tell Oliver that we've been talking about this. He'd kill me.\"\n\n\"Have I ever betrayed your trust? We're best friends, baby! And best friends don't go and tell, now do they?\"\n\nEllie returned her mother her cunning grin. She dove into the water and sipped her coke after she rose, finding both actions extremely refreshing. She was in a much better mood now.\n\nAlice was delighted to see her daughter perking up. Truthfully, she knew that she'd crossed a line a parent should never. Taking interest in her daughter's love life was one thing. Prying into said daughter's love life when her own son was her playmate was another thing entirely. Yet in many ways, Alice had been going through the same things Ellie had. Oliver's five-year exile had triggered a dissonance within her, as well; not as radical as her daughter's, but a meaningful one nonetheless. He'd returned a new man, both physically and mentally, so different from the boy she'd raised. It had changed her.\n\nLast night had proven just how much. By all accounts, she should have been disgusted, revolted by the sight of her children fornicating, and had it been Dave or Jack nutting inside Ellie, she had no doubt she would have. But watching Oliver doing these things to her daughter, using her, pleasuring her, releasing in her... she wasn't. Sure, she'd been shaken up, but she wasn't disturbed, at least not to the extent she should have been.\n\n\"Ellie, can I ask you a question?\"\n\n\"Like I could stop you.\"\n\nAlice smirked at the quip. \"Is it... different, being with him? Does it feel different? Because people on the internet claim it is, that the taboo makes it more... well, more.\"\n\nEllie ruminated on it while pressing the cool bottle to her perspiring skin. \"I'm not sure. It's different, yes, but I don't know if it's because of the taboo, or because I've never been this in love, or maybe it's because of both; I can't be sure. But it is different. Almost... incomparably different.\"\n\n\"More powerful?\"\n\nEllie replied with a sly grin and polished off her drink.\n\nHer mother giggled as she finished her beverage, as well. \"I suppose you do it often, don't you?\"\n\nEllie chuckled. \"Wow, you're really intrigued by it, aren't you?\"\n\nAlice smiled sheepishly in response, getting embarrassed.\n\nEllie gave a sigh, feeling like the bad guy again. \"Mom, I'm getting more action than hookers. And I'm not talking about the high-end girls, either. I'm talking about those poor Eastern-European girls that are trafficked and cuffed to the bed.\"\n\nThey laughed boisterously, amused by Ellie's metaphors.\n\n\"Now, assuming we're done with the questions for today, let's go see what my rascal of a daughter is doing.\"\n\n***\n\nLater that day, just before dusk, Dan and Oliver returned from a long stroll. Dan entered his and Alice's room while his youngest knocked on his brother's door. He and his father had talked about him needing to right his relationship with Jack. His brother had been ignoring him throughout the vacation, the way he had since he'd beaten the crap out of him months ago. At the tennis court, he had made no attempt to refine his hostility towards him, and on several opportunities, he had seemed to target Oliver's torso instead of the deuce court while serving.\n\nGena answered the door, her eyes widening with surprise. \"Hey, Oliver.\"\n\n\"Hi,\" he answered nervously. Gena had always been civilized with him, but he knew it was merely a facade, which he was totally cool with. \"Is he here?\"\n\n\"Jack!\"\n\nGena left to lie on the bed, and her fianc\u00e9 took her place by the threshold, a grim expression on his face.\n\n\"Hey,\" Oliver said, and when receiving no comment, he gulped. \"Can you step out for a second?\"\n\nJack stepped outside and closed the door behind him.\n\n\"Listen, I've been talking to Dad, and he is not happy with the way things are between us, and I have to say, I'm not, either. We're leaving after Ellie has had the baby, and so... I'd really like to square thing away before we go. I'm not comfortable with the way we left things, and if we can't work it out while I'm still here, I doubt we will after I'm gone.\"\n\nJack snorted, oozing contempt. \"It's cute, you know, that you actually thought you would waltz in here with that speech, and just like that, I'd forget you ever knocked our sister up, and\u2014\"\n\n\"Hold on, I'm not asking you to forget anything. I don't regret a single thing that's happened between me and Ellie, and I'm sure as hell not asking for forgiveness.\"\n\n\"Then what the fuck are you doing here?\"\n\nOliver sighed. \"Jack, I'm giving you, giving us both, a chance to bury the hatchet. I don't want us to be estranged to the end of our days. I'm your brother, always will be, whether you like it or not. I'm going to be your kids' uncle, just as you'll be my kids' uncle. Is this really what you want?\"\n\n\"Oliver, you decided that for us the moment you started messing with Ellie, who may I remind you is your god damn sister and MY fucking twin!\" He glowered at his brother while shaking his head in disgust. \"The fuck?! What, you thought I would be like: 'let bygones be bygones' 'cause you wanted to show everyone that you were the bigger man?! Fuck you! You crossed a line, pervo. And it makes me sad to see that apparently I'm the only one in this family who lives by a code of ethics that\u2014\"\n\n\"What are you rambling about? You're talking to Ellie, aren't you? So spare me your hypocrisy and double standard. You know, your twin has a mind of her own, and she's a part of this just as I am. Your dubious code of ethics seems highly selective, if you don't mind me saying.\"\n\n\"Let me tell you something about Ellie, something I doubt you'll understand: she is my twin sister. Do you know what that means? It means we grew up together our whole lives, practically inseparable until college. Whether she admits it or not, we have a bond, the kind that only twins have, and we have history; history I so would've wanted to overlook, but sadly, I can't. For better or worse, she's a part of me, just as I'm a part of her. If I could've cut her out of my life, I would've; believe me, I would've. However, with you, Oliver... I have no such problem.\"\n\n\"As simple as that?\"\n\n\"You'd better believe it. You shouldn't have gone there, Oliver. There's a line that we as men in an enlightened society don't cross. We do not fuck our sisters, no matter how confused and sick they are, even if they're begging for it. And we're sure as hell not putting babies in them.\"\n\n\"Got it,\" Olive said dryly and started away. \"Thanks for the sermon, reverend. See you at mass next week.\"\n\n\"Eat shit.\"\n\n\"Right back at ya.\"\n\n***\n\nSeptember\n\n\"Fuck, I'm beat,\" Dave panted, wiping the sweat off his forehead.\n\nHe paused his music player and pocketed his earphones as he got off the treadmill. He took a draft of water from the bottle and hooked the moist towel on his shoulder before he walked across the gym. He stood by the pull-up bar, observing his brother doing endless pull-ups. Legs horizontal to his upper torso while wearing a weight vest, Oliver hauled himself up until his chest touched the bar. He slowly lowered himself before he again rose in the same controlled pace.\n\nDave sighed in exasperation, knowing his little brother could go on forever. \"Bro, let's go! We've been here forever!\"\n\n\"Ten minutes,\" Oliver rasped, lowering himself while widening the stance of his grip to better target his back.\n\n\"Ten minu\u2014you know, you're being obsessive. For fuck sake, you're not a fatass anymore. I'm getting exhausted just from watching you.\"\n\n\"Then don't\"\u2014he pulled himself up with great effort, his breathing strained\u2014\"watch.\"\n\n\"Oliver, I don't feel so good. I think my blood sugar is dropping.\" Dave propped his chest against one of the poles that supported the pull-up bar and tugged on Oliver's foot as the latter was trying to pull himself up. \"Oh god, I think I'm fainting... need\"\u2014he slipped down against the pole\u2014\"Milk Dud\"\u2014he slipped farther\u2014\"asap...\" He collapsed to the floor and pathetically convulsed.\n\nOliver tried completing his set, but his brother's hysterical sense of drama cracked him up halfway up. Laughing, he released the bar, and his sneakers hit the parquet with a thud. \"Get up, you moron. People are staring. Mostly women.\"\n\nMiraculously, Dave's blood sugar levels seemed to rise, for he ceased writhing almost instantly. Wearing an idiotic grin on his face, he raised his arm, and his brother hoisted him up.\n\n\"Feel better?\" Oliver quipped while unlatching the weight vest.\n\n\"You know, there was a time I gave a crap about those fat, sweaty chicks, but now that I'm a married man...\"\n\nOliver chuckled. \"You've been married for two weeks, dude.\"\n\n\"Yeah? So?\"\n\nOliver shook his head in mirth and guzzled his bottle of water, recalling the crazy Vegas wedding that had indeed taken place in an Elvis chapel.\n\nWhile his brother was hydrating himself, Dave scoped the gym out, particularly, the women. \"That one isn't half bad,\" he mused, eyeing the black babe who was doing sit-ups. \"My wife is hotter though. Way hotter.\"\n\n\"Okay, you really need to stop.\"\n\n\"Stop? Stop what?\"\n\n\"My wife's this, my wife's that... we get it: you've got a wife.\"\n\n\"Oh, poor Oliver,\" Dave sighed in mock empathy, throwing an arm over his shoulder. \"Don't hate the player; hate the game.\"\n\nChuckling, they fetched their backpacks and headed out, not before getting a couple of protein shakes. They walked across the street to Dave's new car, if new was the correct term: a secondhand ford fiesta nabbed from a used-car dealer for as low as $4,000.",
        "\"Cool wheels, Bro,\" Oliver bantered.\n\n\"Mock all you want, but it was cheap, and it more than serves its purpose. And besides, I'm selling it when we leave.\" He dug his phone out of his backpack and powered it up. \"Speaking of, has Antonio got back to you yet? I know you said you'd get me in, but it's been a couple of weeks now, and Kara is starting to worry. Hell, I'm starting to worry.\"\n\n\"Yeah, about that... he, actually, called last night and gave me an answer.\"\n\nDave sipped his shake from the straw, fearing the ominous note in his brother's voice. \"And...?\"\n\nOliver heaved a sigh that made his brother's heart sink. \"And I have some good news and some...\"\n\n\"Yeah...?\" Dave uttered with bated breath, more than a little anxious.\n\nA sly smile illuminated Oliver's face. \"... better news.\"\n\n\"Oh, you...\" Smiling, Dave shook his head and breathed a sigh of relief. \"Not. Cool.\"\n\nOliver laughed, reveling in his masterful performance. \"Okay, so it's like that: the good news is that they agreed for you to come on board.\"\n\nDave pumped a fist. \"Yes!\"\n\n\"Don't get excited just yet because Antonio wants to talk to you beforehand, face to face.\"\n\n\"What, like a business meeting?\"\n\n\"Not like, but exactly. And you'll need to bring it because if he doesn't like you, or doesn't think you're serious enough, or\u2014\"\n\n\"Oliver, you know how fucking serious I am about this, whatever this is.\"\n\n\"I know, but he also needs to know that, and you'll need to sell it. And that means no goofing around, no dirty jokes, no any of that. Also, don't smile too much.\"\n\n\"Why not?\"\n\n\"You look a bit feeble-minded when you do. I just don't want him to get that impression about you, even if it's true. He doesn't need to know that just yet.\"\n\n\"Fuck you,\" Dave chuckled, always the jokester, enjoying a good-natured ribbing.\n\n\"Seriously though, Dave. Don't fuck this up.\"\n\n\"Bruh! Give me some credit.\" When Oliver's face remained cautiously skeptic, he gave him a reassuring chuckle. \"Come on, have a little faith, little brother! It's in the bag.\"\n\n\"Yeah, that smile right there -- don't.\"\n\nDave's smile swiftly waned. He scooched down, facing the driver's side mirror, and anxiously inspected his smile from multiple angles. He had to agree Oliver's concern was not completely unfounded. He tried a few different smiles, and when he was confident he found the right one, he stood up, awaiting his brother's verdict.\n\nOliver's face twisted in dissatisfaction. \"Yeahhhh... we'll work on that.\"\n\nThey laughed.\n\n\"You said something about better news?\"\n\nOliver bobbed his head. \"Assuming the meeting went well, and he's happy with you, he's leaving it to me to decide how much you'll get. Naturally, it's coming down from my share. They're staying with their 80%.\"\n\n\"Okay. Then how much are you willing to give me?\"\n\n\"That's for you to decide.\"\n\nDave binned his shake, pondering how much to ask for. Antonio's idea, although still a mystery, seemed like a sure thing according to his brother. The fact that Antonio had chosen to keep Oliver, his own son-in-law, in the dark about it spoke volumes about its financial potential. The better the idea the less you're likely to hear about it, Dave figured. Clearly, Antonio felt that confidentiality was necessary, and counter-intuitively, the veil of secrecy only instilled in him greater confidence that this could be a once-in-a-lifetime business opportunity.\n\n\"Will you be willing to give me... 5%?\"\n\nOliver nodded.\n\nA little over $60K would buy Dave 5% of the future company's stake, and those 5% could translate to well over a million-dollar payout, provided Antonio's estimations held water. Still, it would only measure to a third of his brother's stake. He didn't want to come off as ungrateful or greedy, but...\n\n\"And... suppose I wanted half of your cut?\"\n\n\"Then we'll do that. 125Gs each for 10% each.\"\n\nDave studied his brother's face, moved by his generosity. \"Seriously, Oliver? You're willing to give up for me half of your cut?\"\n\n\"You're my brother.\"\n\nDave heaved a sigh. \"I don't know what to say...\"\n\n\"Say yes.\"\n\nDave embraced his brother with all of his heart. \"Thank you, Oliver. This means so much to me.\"\n\n\"You have Kara to take care of now and a child on the way... consider it settling the score for Ellie.\"\n\nDave disengaged and gave his brother a motivated look. \"It's on.\"\n\n\"Oh, you bet your ass, it's on.\"\n\nThey laughed excitedly before Dave's phone began ringing.\n\nHe plucked it from his pocket and rolled his eyes, feigning annoyance. \"I gotta take this. The old ball and chain, you know.\"\n\n\"Oh, for god's sake...\" Oliver grumbled before chuckling at how so smug and superior his brother sounded.\n\nDave laughed back at him and took the call.\n\nWhile attentive to the abrupt change in his brother's tone as he talked to his wife, Oliver fetched his phone from his backpack, and his stomach knotted. His eyes were bombarded with too many missing calls from Ellie, his mother, and Kara.\n\nDave quickly ended that call, his face anxious. \"Oliver, Ellie's\u2014\"\n\n\"I know,\" he chimed in, fearfully staring at the tracking app that disclosed his sister's location. \"Start the car.\"\n\n***\n\nLess than an hour later, the brothers raced into the hospital, following their father's instructions. Ellie's water had broken while they were in the gym, full two weeks before the estimated due date. Trotting into the maternity ward, they sighted Dan and Michela sitting in the waiting hall.\n\nDan rose, smiling confidently at Oliver. \"Now just calm down. Everything's under contr\u2014\"\n\n\"Where is she?\" Olive demanded, panting from the run.\n\n\"She's in good hands. Your mother and Kara are\u2014\"\n\n\"Dad?!\"\n\nDan gave a defeated sigh, realizing his son wasn't going to relax any time soon. \"Room 317.\"\n\nOliver kissed his daughter and dashed off.\n\nSearching for the room, Oliver couldn't help but worry. Painful memories crept up on him while he was marching down the hall, heart racing and fraught with stress. Ellie wasn't supposed to go into labor until October. This couldn't bode well. His heart gave a jolt as he set his eyes on Room 317. He wrapped his fingers around the door knob, but he couldn't bring himself to open the door. What if something happened to the baby? To his sister? Sensing weakness, his knees gave, and he crouched against the door, breathing raggedly out of distress.\n\n\"Grow a fucking pair, will you...\" he muttered to himself, attempting to conquer his fears. \"She's fine. She has to be.\" He gulped, pacing his breathing. \"Get up.\" He tried to stand, but to no avail. He was paralyzed by fear. \"Get up, god damn it!\" He willed himself up and expelled a sigh. \"Here goes nothing.\" He opened and door and walked in.\n\nHoping for the best yet fearing the worst, he treaded gingerly. The room was agonizingly silent. Surely, this wasn't right. Past the wall to his right, he saw his sister's doctor jotting down notes, and then his mother and Kara sitting at either side of the bed. Between them, there was his sister, adjusted to a sitting position. She was pale and sweaty and exhausted. More than anything, though, she was happy.\n\nA smile exploded across Oliver's face, watching his sister breastfeeding their child. She was so focused on the baby, making sure she was holding her breast correctly to facilitate the flow of milk. His eyes filled with tears. It was extraordinary to watch as well as to listen to the suckling of his child.\n\nEllie raised her head, beaming at her mother, when she saw her brother standing at the end of the room. She gave a giggle, tears streaming down her cheeks. \"You're late.\"\n\nOliver nodded, no less emotional. \"I'm sorry.\"\n\nKara and Alice laughed as they rose to embrace Oliver. Shaking his hand, the doctor congratulated him as well before his sister beckoned to him when patting on the bed next to her. \"Come meet your daughter.\"\n\n\"Daughter?\" Olive echoed excitedly.\n\n\"We'll give you some privacy,\" Alice murmured warmly and kissed her son and then her daughter.\n\nShe and Kara stepped outside followed by the doctor.\n\nOliver sat next to Ellie, jittery. \"You're okay.\"\n\nEllie grinned at him, bobbing her head. Her brother might have said it matter-of-factly, but she knew he needed her to reassure him. \"I'm great.\" She looked back at their baby as she sucked the milk from her pale breast.\n\nOlive took a deep breath and placed his finger in his daughter's tiny hand. Her miniature fingers instantly clenched around him as she gorged on Ellie's tit. He laughed, his eyes watering. \"Look at her! She's... perfect.\"\n\nEllie laughed, so incredibly emotional. \"She's amazing! Just like her father.\"\n\nOliver cupped Ellie's cheeks and kissed her lips over and over. \"I love you.\"\n\n\"I love you.\"\n\nThey both sniffled as they looked back at their love child.\n\n\"Do you want to burp her?\"\n\nOliver nodded and gently took his daughter from his sister. He rubbed her back in circles while propping her on his shoulder. A loud belch resounded in the room not long after, triggering joyous laughter from the siblings.\n\n\"You're gonna have to teach me how you do it,\" Ellie said, smiling lovingly at her daughter.\n\nSupporting her head, Oliver kissed their baby and placed her in Ellie's arms, so she could continue feeding her. \"You'll get the hang of it in no time at all.\"\n\n\"Are you disappointed?\" Ellie asked a few seconds later.\n\nHer brother's brows knotted in puzzlement. \"Disappointed?\"\n\n\"I know how much you wanted a boy.\"\n\nOliver smiled at his daughter. \"I wouldn't have traded her for anything.\"\n\n\"Well, don't worry, my love. I'll give you a boy. I promise.\"\n\nOliver chuckled. \"You do know that it's not really up to you.\"\n\n\"I know. We'll just have to keep going until we succeed, now won't we?\"\n\nThey kissed deeply while their daughter kept feeding. Alice interrupted their kiss when she returned, this time, though, with Michela by her side. The little Italian climbed the bed and grinned at the baby.\n\nEllie laughed at how excited Michela looked. \"Sunshine, don't be shy. Say hello to your sister.\"\n\n\"Hello, Baby. My name is Michela, and I'm your sister. Welcome.\"\n\nThe grownups laughed before each kissed Michela.\n\n\"Can I touch her, Papi?\"\n\n\"Gently.\"\n\nMichela stroked her plump thigh and laughed at the experience. \"Oh, I love her so much!\"\n\n\"And she loves you,\" Ellie said.\n\n\"She does?!\"\n\n\"Uh-huh.\"\n\n\"Yes!\" Michela celebrated. \"Are you and the baby coming with us home now, Mommy?\"\n\n\"Maybe tomorrow, sweetheart.\"\n\n\"She looks like she's done,\" Alice interjected.\n\nEllie propped the baby on her shoulder, the way her boyfriend had a moment ago, and burped her. She laughed excitedly. \"I did it, hon!\"\n\n\"Well done, Mommy,\" Oliver approved.\n\n\"Can I call your father and brother now? They're anxious to meet her.\"\n\nEllie covered her breast nodded. \"And after that, she and I need to get some sleep.\"\n\nAlice laughed as she opened the door. \"That's what you think.\"\n\n\"What are we going to call her?\" Oliver asked, stroking back his sister's fair mane.\n\nEllie smiled from her daughter to her brother. \"Well....\"\n\n***\n\n\"I miss my girls.\"\n\n\"We miss you, too, Daddy. We can't wait to see you.\"\n\n\"Is Bianca talking about me?\"\n\nEllie chuckled. \"All the time. You know, when she's not eating, sleeping, pooping, or crying.\"\n\nOliver laughed. \"Good to know. Michela?\"\n\n\"She's amazing. She's such a great help. Really, I can't stress you how much. I'd be lost without her.\"\n\n\"Yeah, that girl is something else. I miss her so much. I miss all of you.\"\n\n\"Well, the wait is over. We'll finally be together.\"\n\n\"Thank God,\" Oliver said in a sigh. \"Okay, I gotta run. We'll pick you up from the airport.\"\n\n\"Okay. Love you.\"\n\n\"Love you too, baby. See you tomorrow.\"\n\n\"See you tomorrow.\"\n\nEllie exited the room and descended the stairs. She entered the living room and smiled at the sight of Michela conversing with her sister in Italian. Bianca was lying in her crib, laughing and making baby sounds. Her mother and Kara were setting the dining table while Gena was feeding little Jeremy from a bottle filled with the milk she had pumped beforehand.\n\n\"How are my boys?\" Alice inquired, pouring herself and Ellie chardonnay.\n\n\"Tired. Antonio has been working them really hard.\"\n\n\"What are they doing now exactly?\" Gena asked.\n\n\"Well, now that the website is up and running, they need to manage the orders and stuff. They've been driving across Europe, pushing the product, negotiating promotion deals...\" Ellie tickled Jeremy when he took a break from the bottle. \"Give me my nephew. I'll burp him.\"\n\n\"God bless you,\" Gena said and gladly handed her son over to his aunt. \"What are you two planning on doing when you get there?\"\n\n\"Eat,\" Kara said and stuffed her mouth with a carrot.\n\nThe women laughed.\n\nKara was six-month pregnant now, and her appetite had grown accordingly. Luckily, she too had good genes, and similarly to Ellie, only her belly and boobs had seen an increase in size.\n\n\"And you, Ellie?\"\n\n\"I... honestly, I'm not in a rush to go back to work. I'm at a stage in my life where I much prefer to make babies.\"\n\nThey all laughed.\n\n\"Just make sure Oliver can afford it first,\" Gena quipped.\n\n\"Hi, everyone,\" Jack said as he entered his parents' house. \"There's my little guy!\" He took Jeremy and the bottle from Ellie and started feeding him. \"Where's Dad? I'm starving.\"\n\n\"He should be home soon,\" Alice said. \"While we're waiting for him, I have some news to deliver, so sit your butts down.\"\n\nEveryone sat around the table.\n\n\"Okay. Me and Dan have been talking about everything that's been going on, and what we want for ourselves in the future. Ellie and Kara are leaving us tomorrow, Dave and Oliver are already gone, and this house is getting too big for just the two of us.\"\n\n\"You're selling the house?\" Jack asked worriedly.\n\n\"Yes. We're selling the house, and we're going to buy a place more suitable for us.\"\n\nThe twins were both dismayed at the thought. They had lived there since they were 11, and this house encapsulated their best memories.\n\n\"This wasn't an easy decision, but we've come to realize that this house would feel very lonely for us very soon. We'd like a smaller place, somewhere closer to you, Jack. You're shopping for a house. Once you find your future home, we'll sell the property and relocate next to you.\"\n\n\"Well... I can't say I'm happy that you're selling the house, but I'm glad I'll have you close by.\"\n\n\"So am I,\" Gena said with a benevolent smile.\n\nAlice kissed Gena before she sipped her wine. \"Now, for the second part: I'd applied for an early retirement from work a couple of months ago, and last week, my company approved it. Starting next month, I'll be retired. As you all know, I love all of my kids and grandchildren, and I want to spend time with everyone as much as I can. So, Dan and I are going to purchase a second place in Milan, next to all of you, and I'll be dividing my time between there and here.\"\n\n\"Oh my god, Mom!\" Ellie exclaimed joyously and rose to hug her mother. \"That's like the best news ever!\"\n\n\"Awesome!\" Kara joined in on the hug.\n\nShe'd gotten very attached to her mother-in-law, and since her own mother was a bitch, the thought of having Alice around was immensely exciting.\n\n\"So... you're going to be in Italy for six months of the year?\"\n\n\"Jack, I know this isn't ideal, but\u2014\"\n\n\"Ideal? You're essentially leaving me with no family at all!\"\n\n\"First of all, your father is here, and he isn't going anywhere for the foreseeable future. Secondly\u2014\"\n\n\"That's a load of crap, Mom!\"\n\n\"Careful, Jack. Don't speak to me like that.\"\n\nJack passed his son to Gena and lurched to his feet angrily. He started clapping his hands in derision at his twin. \"Job well done, Ellie! You and that perv have successfully torn this family apart. You must be so proud of yourselves!\"\n\n\"Jack, you need to understand that everyone will have to compromise,\" Alice said.\n\n\"No, not everyone! I don't see fucking Oliver making compromises!\"\n\n\"Jack!\" Ellie snarled. \"Do not talk about him like that. His daughters are in the next room in case you've forgotten.\"\n\n\"You know what, Ellie? Fuck you. Just fuck you. And as for you, Mom... don't bother. Just go ahead and move to Italy. We all know that's what you're planning on doing anyway. God forbid you'd be away from Ellie. I'm outta here.\" He marched out of the house and slammed the door on his way out.\n\n***\n\nJack set down the remote and beer and got up from his TV couch when he heard the knocking on the door. He answered the door and snorted bitterly. \"Why am I not surprised...\" He walked back to the living room and plumped down in his leather couch.\n\nHis father shut the door and fetched a beer from the fridge. He sat on the sofa and took a draft. \"You missed one hell of a dinner. Your mother went through all the trouble of putting together a\u2014\"\n\n\"Oh, cut to the chase, Dad!\"\n\n\"Jack, you need to cool down. No one's deserting you, and no one wants you to feel like you haven't got a family\u2014\"\n\n\"Dad, stop! Just stop!\" He shuffled to his father, his face bitter and hurt. \"Can I ask you a question? How the fuck can you be okay with this? Your children are fucking and making babies, your wife is going to leave you alone for months at a time... your whole family is falling apart, and yet, you don't seem to give a fuck.\"\n\nDan shot his oldest a look. \"Is that right?\"\n\n\"I don't know. Do you?\"\n\nDan guzzled his beer and looked sternly at his son. \"Let me tell you something, son: you don't get to judge me. Until you have faced what I am facing, you don't get to criticize me. You think that's what I had planned for us? You think I wanted this? You think I don't resent them? You think I enjoy the thought of my wife being away from me?\"\n\n\"Then do something about it, Dad!\"\n\n\"Like what?\"\n\n\"Well, you can start by disowning them!\"\n\n\"Disown them?\"\n\n\"Damn straight!\"\n\n\"Suppose I did that. Then what?\"\n\n\"Forbid your wife from leaving! That looks to me like a smart move.\"\n\n\"And you think she'd listen?\"\n\n\"Dad, you're either the head of this family, or you're not.\"\n\n\"Jack, you see the world in black and white, but life is colored with infinite shades of grey. Oliver and Ellie are my children just as you are my son. Do I agree with what they're doing? No. Am I happy about it? No. Does any of it even matter now? They've made it clear that they are committed to each other. For crying out loud, they had a child together. Do you think if I shunned them, they'd break up? Undo Bianca?\"\n\nJack shook his head bitterly but didn't comment.\n\n\"You have a son now. Suppose he did something you didn't approve of twenty years from now, could you erase him from your life? Like he never existed?\"\n\nJack took a gulp from his beer and remained silent.\n\n\"You need to grow up, son. This... no one wanted this. I don't think that even they wanted this. I can't imagine they one day woke up and decided to start dating, maybe have a few kids together... and I don't think you believe that, either. For them to do what they did... they had to be crazy in love, or straight-up crazy, and from what I can tell, neither of them is crazy, which leaves us with the alternative. How could something like that happen? I don't have an answer. But it doesn't mean it didn't happen, or won't happen to other people.\"\n\n\"But... everything is so... \" He shook his head and finished his beer.\n\n\"Complicated? Yes. It's definitely complicated, but we'll have to cope. We have no choice.\"\n\n\"But... how do you cope? How do you...\"\n\nDan nodded, relating to his son's predicament. \"You start by taking it one day at a time. Don't rush it. You're angry right now, as you should be. So be angry. Don't try to suppress it or ignore it. Be angry. After a while, maybe you won't be angry anymore; maybe you'll be sad. Then do that, be sad. Allow yourself to fully exhaust everything you feel. If you're still angry or sad for a year or two, I don't think anyone would blame you.\"",
        "Jack bobbed his head. \"And you're not angry anymore?\"\n\n\"No. I moved past the anger phase, the sadness phase, the disappointment phase... now I'm in a different phase.\"\n\n\"What phase?\"\n\nDan half-smiled. \"Hope.\"\n\n***\n\nEllie, her daughters, and Kara landed at Malpensa airport the next day. Pushing a couple of carts stacked with large suitcases, they walked out to the Arrivals hall. Oliver and Dave had been waiting impatiently. Last they saw them, 4-month-old Bianca was almost half her age, and even then, they'd stayed for merely a week, leaving immediately after the New Year.\n\nA grin stretched across Oliver's face when he sighted the blonde hottie that was his sister. She was so irrefutably ravishing, he was reminded, a demigoddess. Ellie's body hadn't changed much during the pregnancy, and not long after birthing Bianca, her tummy tightened back. She was lucky enough not to sport stretch marks as some other mothers do, and it was almost inconceivable to think she had recently given birth when gauging her slight 5' 5\" frame.\n\nBut she had indeed given birth, and it was easy to determine. Oblivious to the thronged airport, Oliver's youngest was peacefully asleep in her baby carrier, soothed by her mother's heartbeats and angelic voice. Though both Ellie's voice and heartbeats briskly picked up when her bright blue gaze crossed her boyfriend's. Oliver started to his girls, and Michela, alerted by Ellie, dashed to him, her little heart aflutter. They kissed passionately, as they always had, before her father kissed his gorgeous sister just as passionately, as they forever would.\n\nTaking a page from his little brother, Dave wrapped his arms around his pregnant wife and relayed his love to her in a deep, romantic kiss before he greeted his sister and nieces to their new home: Milan, Italy. The brothers took control of the luggage while Michela settled on her father's shoulder, and they soon walked out to the cars, excited about the future.\n\nItaly is a beautiful country, but tourists would probably want to avoid visiting it at this time of year. Winter was at its peak, and it was damp and cold. The sky was a grim grey canvas, blocking out the sun, frowning with the occasional shower, and the roads were slippery and crowded, teeming with cabs.\n\nAlmost an hour later, they parked in a long, narrow street. It was situated in one of the better neighborhoods of Milan, and the rent reflected that accordingly. Originally, the brothers had considered cheaper alternatives, possibly in the suburbs, but Francesca had dismissed the idea, and she did so quite emphatically. Now that her precious little angel had finally returned to her, there was no way she was going to consent to having her living that far away from her.\n\nTo keep her satisfied, the found their new homes in a well-tended apartment building next to a park in the heart of the city. They were fortunate Francesca had the right connections, and she had managed to pull some strings and to set them up with two apartments in the same building. The rent was steep, yet the Jensens were a family with means.\n\nDave had over $500K saved up, which he had entrusted Antonio with as soon as he bought his stake at the company. Oliver and Ellie's combined fortune was more than twice his size. They had rented out Ellie's place, sold her car, and though Oliver and Dave had a couple of years of measly salaries ahead of them, money shouldn't be an issue.\n\nAs they all made their way into the elevator, Kara and Ellie noted the polished lobby, particularly how neat and well-designed it was. Kara and Dave exited on the 2nd floor while Ellie and Oliver rode the elevator to the 4th. Oliver unlocked the door, and his sister took her first steps in her new home. She had seen pictures of it, and her brother had given her the tour via skype, but this was first time she had seen it for herself.\n\nIt wasn't the biggest place, barely a 1000 sq ft, but it was clean with a sensible layout. It was equipped with all the furniture and appliances, so there was little to be done in that respect. They had two bathrooms, a rather small kitchen, and two okay-sized rooms, but none of it mattered all that much to Ellie. Her condo back home was bigger and fancier, decorated with exquisite taste, but in the minute-thirty she'd been in this rather plain flat, she was happier than she'd ever been in her place.\n\n\"Your thoughts, baby,\" Oliver anxiously requested, trying to read his sister's mind as he followed her back to the living room.\n\nThe blonde shot him a sly, cryptic smile as she kept meticulously examining the place while Bianca rested in her wrap carrier glued to her chest. \"Well...\"\n\n\"Well what? Did I do good?\"\n\nEllie grinned, her heart-stopping blue eyes shining like a beacon. \"Hon, you did...\"\n\n*\n\n\"Ah! Ah! Ah! Ah! Ah!...\"\n\n\"God, baby, I missed you...\"\n\n\"... Ah! Ah! Ah! Ah! Ah!...\" Ellie replied, riding her brother with a vengeance, her crotch slamming into his as she dropped herself on him again and again.\n\n\"Oh, god,\" Oliver sobbed a moan, his lactating sister ramming herself into him like a possessed nympho, her palms pressing onto his hard chest, her long nails digging in.\n\nClutching the sexy curve of her waist, her brother bucked, countering her reckless bouncing. His eyes were fixed on her mammoth cans that kept slapping together violently as she repeatedly and mercilessly impaled her brittle self on him. He was transfixed by the sheer heft of her jugs as they swayed in and out, clapping over and over to the ludicrously hectic pace she'd been setting.\n\n\"Aw! Aw! Aw! Aw!...\"\n\nHe kneaded her pale rack, loving the sensations, of the milk churning inside these fatty, bloated orbs. She was so loaded, brimming with milk, that he feared her boobs might burst in his hands; then again, it had been almost three hours since his daughter drained her. Bianca was growing bigger, and so did her appetite, and consequently, so did Ellie's perfect hooters as her daughter was feeding off of her often and in large quantities.\n\n\"Ah! Aw! Ah! Aw!...\"\n\nOliver kept molding his big sister's mounds, focusing on those large, dark nipples. They weren't pink anymore. They had changed into a decisive brown a little while before Ellie birthed their daughter. She had explained to him that the darker the nipple the easier is for infants to zero in on their food source. Once she stopped breastfeeding, they would return to that lovely pink her brother so adored.\n\n\"Fuck!\" Oliver cried when Ellie's nails clawed deeper into his chest.\n\nHe mashed her sweaty breasts in retaliation, at least what little of them he could. No way they were going to fit in his hands.\n\n\"Awww....\" Ellie sobbed a low husky moan, beads of milk trickling from her macro-nipples.\n\nShe watched earnestly as her brother squashed her titties. She then slammed herself into him and groaned when a thin stream of milk spewed out of her straight onto her bro's chest. She wanted to keep fucking that perfect, plump cock, but her parched brother had already started milking her into his mouth when he rose to an upright position and clamped a nip between his lips.\n\nEllie ran her lithe, delicate fingers in his hair while he dined off her rack. She hummed in such pleasure while softly gyrating atop his impossibly hard member, careful not to disturb him. She would never.\n\nThis wasn't the first time she'd been feeding him, nor would it be the last. They both sought\u2014more accurately, needed\u2014this level of connection. Whenever her brother would draw the milk from her large bosom down his throat, they both felt a strong, deep attachment to one another, a bond like no other. Boys are programmed to suck on nipples because girls are innately configured to respond to it, to find joy in it.\n\nAnd Ellie was finding immense joy when concentrating on the flow of milk as it traveled from her breast into Oliver's pretty mouth. She wasn't sure if that was considered a perversion, enjoying breastfeeding him; all she knew was that she might need to breastfeed him for life. She'd hate the thought of him no longer drinking off of her, as if it would make her a bad mother in some twisted way.\n\nEllie loved breastfeeding Bianca. It answered to her maternal necessity and deepened the emotional bond between the two, of a mother-daughter, but she loved breastfeeding Oliver infinitely more, for the added erotic component. She felt like a mother, sister, and a lover all at once, and the feeling was so powerful and overwhelming, second to none.\n\n\"Drink, baby, drink...\" she urged him on while molding her other breast into a cone.\n\nShe slipped her free nipple into her mouth and pinched and sucked, so now they were both sipping off of her. She sucked her nipple out before she released the medley of her milk and saliva in his mouth when they kissed hungrily. Their tongues tangled and swirled, slapping their fluids together, their lips sucking loudly and passionately.\n\nShe resumed gyrating while they kissed and fondled, the sweat on their flat stomachs mingling as well as the one on their chests. Soon, the stunning, lactating blonde sensed her orgasm building, seething, frothing in her. Moaning, she hasted herself, her heart-shaped booty gyrating so sensually, so purposely, her sex drawing circles around her bro's hard dick, rubbing it thoroughly.\n\nShe pushed him down onto his back and began rolling, then heaving, and eventually bouncing frantically like she had before he needed to quench his thirst. Her nails instinctively hooked into his flesh as her scented, bald pussy stroked the full length of him, oscillating between the succulent tip and the brawny root of his dick.\n\n\"Aw! Aw! Aw! Aw!...\"\n\nOliver gazed up at her in awe as he again clasped the curve of her waist, the taste of her sweet milk in his mouth, the piercing musk of her arousal in his nostrils. Listening to his nymph of a sister's melodic, feminine whimpering as she fucked his cock raw was an experience transcending beyond rapture, bliss, beyond the sweetest dream he'd ever had. She was a tight fit like she had always been, wetter than ever, and searing-hot. Such a perfect hostess...\n\nHe met her absurdly brisk rhythm, his palms sinking into her waist, which only made his prime sister-breeder even more desperate to orgasm. She just loved the way he handled her in the sack, like a man, a man that takes what he wants, taking his woman, how he wanted and when he wanted, shoving that tool in her, fucking her, hard and deep and raw, doing it to her, making her moan like a wounded prey and mewl like a bitch, making her cry out his name over and over, making her... come, like she had never.\n\nOn the brink of her crest, Ellie slowed her brutal thrusts before finally hitting the brakes when her cunt devoured that thick cock up to its nuts. She threw her head back and arched, her flowing, dark-blond hair whipping across her lover's face. Straining and whining, she culminated atop her brother, her rack fighting its heft as it sought to inflate with air.\n\nShuddering, she cried cute, little sobs as she bathed in the golden waves that swept over her. Her snug little snatch kept spasming around Oliver, transmitting every beat, every tremor that raced along her sopping wet channel, running the length of her amazingly tight slit. Her long, pretty nails clawed into his chest deeper, threatening to puncture the sinewy tissue, until the blissful sensations washed away.\n\nBosom heaving, she simpered wearily, exceptionally sated. With the cock still wedged in her pulsating sex, she lowered herself onto his drool-worthy abdomen, and they promptly connected lips and tongues while mauling at each other. Ellie then broke their kiss and rose, sliding her soaking gap off her bro's dick. She scooched back and knelt between his legs as she clasped his unsatisfied manhood. She loved how enormous his erection looked in her hand as she stroked her cum along the shaft. She gave him a sultry smile and lowered her warm, wet mouth around him.\n\nHe lips first encased the thick prune, clutching, playfully yanking, before they descended farther, wrapping around him down to his mid-rod. She sucked his dick gently, erotically, enjoying his soft gasps and the occasion pulse from his member. Humming, she settled into a quicker tempo, her face rippling deftly, her hand massaging his thigh. She adored the taste of his cock after she came, and she would often suck him instantly after.\n\nBuilding a good pace, she groped herself while orally pleasuring her brother. She fondled her right breast and gave a sad moan with the dick well between her lips. She was so achingly loaded... and Bianca wouldn't get up anytime soon. She glided Oliver's dick out of her mouth and placed her breast above it. She repeatedly pinched her nipple until drops of milk surfaced. She then pinched harder, and faint rivulets of milk streamed out of her magnificent titty.\n\n\"Ohhhhhhh,\" she groaned, sensing immediate relief when releasing the white liquid on her bro's erection.\n\nShe pressed her nipple to Oliver's piss slit as she forced the excess milk out of her. She tried slotting her nub in that little slit, but it was too girthy, so she passed it down his shaft and up again, rinsing that beautiful, towering cock in her milk.\n\nRelief was brief however. She was brimming, and she couldn't expel sufficient quantities to truly be at ease. She crawled atop her bro and guided her nipple into his mouth when bestriding his chest. \"Oliver, it hurts...\"\n\nHer brother instantly locked in on her maternal nub and suckled, delicately at first, before harder, properly sucking.\n\n\"Oh my goodness, it feels so good...\" his sister uttered in moan, squeezing her breast while her brother fed off of her. She swiftly felt more comfortable as her boyfriend could gulp large quantities in very little time. She pulled her nipple out and pinched her other one until the milk appeared. She slipped her nip into his mouth and moaned again, feeling the milk coursing out of her onto his tongue. \"Go on, baby, drain me...\"\n\nIt took but a minute until Ellie was much more relaxed. She popped her nipple from his stubborn lips, giggling as she did. \"You're insatiable! Leave some for your daughter...\"\n\nWhile he chuckled, she licked the bead of milk that dribbled down his bottom lip and returned to his dick. Even though she hadn't touched it for over a couple of minutes, it was just as stiff and engorged as she'd left it. He needed to be relieved quickly, she knew. She took a small sip from her left titty and dropped a straining rope of spit and milk down his dick. She fisted his shaft and bobbed, loving how his eyes became heavy with sex. While lazily stroking him, she lay on her belly between his legs and lifted his scrotum. She then sucked on his nut sack, each ball separately and then both together.\n\n\"Ellie, ohhhh...\"\n\nThe blonde smiled at his moan as she continued rubbing his cock and sucking on his large testes. They were brimming no less than her titties, she had no doubt. She pushed his balls out of her mouth and started licking at his perineum, her hand now sliding upwards, tugging at the head of his cock. Oliver gasped raggedly, his toes curling; he was just so sensitive there, and the feeling of her nimble tongue venturing along that oh-so-intimate ridge felt wonderful.\n\nHis cock felt no less wonderful to Ellie. It was so unbelievably hard, like a metal pole shrouded in a sheet made of dick skin that had been left to soak overnight in a mother's milk. She tugged faster on the wet bulbous head while her tongue traveled the length of his perineum. She was rough, jerking him off in immense speed, while diligently licking his\u2014\n\n\"Ellie, I'm coming ...\"\n\nAs soon as he warned her, she shuffled up to her knees and straddled him. She aligned his bare cock with her entrance and started impaling herself, watching breathlessly as he parted the swollen lips of her sex as he entered her. She was so wet still, and he was lubed in his sister's milk, so the penetration was effortless.\n\nThe blonde demigoddess hissed in delight as she took her bro inside her, and even before she digested the full length of his wurst, she could feel him pulsating. She smiled and rolled her hips atop him, her hot, curvaceous bod moving in perfect waves, so erotically, so skillfully, stroking his member deep inside of her, where she was so wet and tight and pink.\n\nShe knew he was going to come any second now. They hadn't made love for a couple of months, and if anything, she was mystified he held on this far. She was soaking and hot, and her vagina gloved him super-snugly as it mercilessly rubbed the length of that monster. She then smiled inwardly, sensing the urgency in his thrust.\n\nOliver's palms flew to her waist, and he exploded inside the blue-eyed nymph while squeezing her feminine frame. Ellie slowly descended on him, loving how tightly he was holding her as he fed her copious amounts of jizz. She sat her sculpted butt on his thighs and enjoyed the feeling of his load being dumped in his sister's special place, of his swollen vein throbbing against her wet inner flesh. Sitting still\u2014as she wasn't allowed to move an inch\u2014she worked her vaginal muscles, massaging him, encouraging him, pumping him.\n\nOnce he finished, she pulled him up and curled her lean arms round his neck. She fell back on the bed, and he landed on her, his weight pressing down her breasts, his cock drooling in the depths of her. She crossed her feet around his butt and kissed him romantically with all love she felt for him.\n\nOliver knew why Ellie had taken him back inside her just before he came, just as he knew why she wanted him on top at the moment, and his sister knew that he knew. He wouldn't say anything, and Ellie wouldn't volunteer the information, but there was an unspoken understanding between them. And in this relationship, just like in all her previous ones -- the blonde would evidently be getting her way.\n\n***\n\nThe next day, Oliver, Ellie, and their girls rendezvoused with Michela's grandparents outside the cemetery where their daughter was buried. They approached her grave, and Francesca, sniffling and aching, cleaned the lettering on the tombstone before giving it a lingering kiss. Her husband then whispered something to the stone before he kissed it, too, no less movingly.\n\nOliver gave his 5-year-old the flowers they had bought, and she laid it there tentatively. Michela never knew her mother, and she'd never been to her final resting place, but she'd been told she was with the angels, smiling down on her.\n\n\"I love you, Mommy,\" she murmured in Italian as tears streamed down her cheeks. \"I wish you didn't have to go to the angels...\"\n\nShe kissed the stone before her tearful grandmother took her in her arms and held her so tightly, like the most treasured thing that she was for her.\n\nEllie waited a couple of feet away with her daughter napping in the baby carrier. She didn't want to disturb them. Considering the gravestone, she could just make out her daughter's name, \"Bianca Jensen\", in the Italian engraving. It was so surreal to her. She always knew Oliver had been married, that he had a life before they happened, but it truly dawned on her at that moment.\n\nMichela and her grandparents bid Bianca farewell and left Oliver and his wife to themselves. It tugged on Ellie's heart, observing him kneeling as he conversed with the cold, wet stone. It was so sad and affecting, the way he absently stroked the edges of the stone, as if he were petting the curves of her body, while whispering to her things that none could hear. Ellie wondered what he'd been saying to her, but she wouldn't dare to ask. That part of his life was his and his alone.\n\nOliver kissed the gravestone and slowly rose to his feet. He picked sad little Michela up and kissed her cheek as he departed from her mother. Francesca walked up to Ellie, and to the blonde's pleasant surprise, she hooked her arm in hers, and the two walked out of the cemetery in silence, though one seemed to be imbued with a promise of better days.",
        "***\n\nVenice, six months later...\n\n\"Oliver, this is incredible...\"\n\n\"Yeah, I thought you might like it.\"\n\nEllie was absorbed in the experience, her blue eyes in awe and appreciative. \"Like it is such an understatement.\"\n\nOliver pulled his phone from his pocket and\u2014\n\n\"Seriously?\"\n\n\"Just checking up...\"\n\n\"Hon, they're fine. I talked to Dad twenty minutes ago, and they were just heading to the restaurant. Now would you please relax already?\"\n\nOliver pocketed his phone, his eyes apologetic. \"Sorry. Force of habit.\"\n\n\"This vacation is important to me. We finally have some time to ourselves, and I don't want you worrying about the girls when you should be focusing on me; especially, when I got myself all pretty for you.\"\n\n\"You're absolutely right, bella.\" He snaked his arms round her pregnant belly from behind and kissed her neck, tasting her smooth flesh, breathing in her amazing fragrance. \"And for the record, you're not pretty; you're breathtaking.\"\n\nEllie smiled, indulging in his embrace, as their gondola sailed through the magical channels of Venice beneath the starry night. The full moon cast just enough light on the water as it gently rippled away from them, making way to the timeless vessel. It was as romantic as it comes.\n\nEllie watched in astonishment as they passed the old buildings that were partly submerged while her boyfriend was holding her closely and nibbling her neck.\n\n\"Oliver, you're not even looking! And it's so beautiful!\"\n\nHer brother tugged on her pretty ear with his lips as he fastened his arms around her, just above the swell of her belly. \"I don't need to. I'm already looking at the most beautiful thing I will ever see.\"\n\nEllie half-turned her head, searching deep in his eyes. \"Am I really, baby?\"\n\nOliver guided the palm of her hand to his heart. \"You tell me.\"\n\nA smile stretched her lips wide when she felt his speedy heartbeats. Looking into his eyes, the blonde could easily see him getting lost in her amazing sapphires. He was completely under her spell; it was pointless to even question it. Brushing the length of her golden hair aside, she opened her mouth as he leaned in, and their tongues vined as they tasted each other, so helplessly in love.\n\nA manly hum that transitioned seamlessly into a song snuff out their kiss. Ellie giggled in surprise, her heart swelling, as she observed their gondolier singing to them an old Italian song while deftly navigating them deeper into Venice's watery maze. He sang with a croon so heartfelt, his voice reverberating down the narrow paths.\n\n\"Oh my god, this is so romantic!\"\n\nOliver chuckled. \"You like?\"\n\n\"You set this up?!\"\n\n\"Maybe.\"\n\n\"Oliver... this is the most perfect night. Thank you.\"\n\n\"If you think I'm done, then you'd better brace yourself...\"\n\nHis sister giggled. \"You mean there's more?! I don't know if my heart can take it.\"\n\n\"We're about to find out...\"\n\nHe gave a nod to the gondolier, and the latter grinned in response. Still singing, he dug out a small black box from his pocket and handed it over to Oliver before he rowed on, his voice buttery soft as it built into a crescendo.\n\nStupefied, Ellie's eyes locked in on the jewelry box, her pouty lips slightly ajar. \"Oliver, what is this?\"\n\nHer brother tucked a golden strand of hair behind her ear, loving the tremble in her unusually little voice. \"What do you want it to be?\"\n\nShe studied his eyes, the blue in hers swiftly misting over. \"Don't fuck with me, please. Please, don't fuck with me.\"\n\n\"I love you, gorgeous.\"\n\n\"No, don't fuck with me...\" she murmured tearfully, her head shaking in disbelief.\n\nHe cupped her cheek, looking deep into her eyes. \"Open it.\"\n\nAgitated, she took the box from him while taking a deep breath. She slowly opened it, and the box nearly slid from her trembling hand. \"Oh my god...\"\n\nThe box was deceivingly unassuming, certainly unsuited for such a big-ass rock.\n\n\"Oliver...\" she wept, can't take her eyes off of the gold ring, that along with the princess-cut diamond, had exceeded \u20ac15K.\n\n\"So, here's the deal, Sis: I'm kinda hopelessly in love with you, and... I want you to be my wife. This ring can either be symbolic, or it can be the real deal. Dealer's choice.\"\n\nLost for words, Ellie sobbed quietly, her mascara running down her cheeks.\n\n\"You have given me a beautiful daughter, and in a few months\"\u2014he caressed the bloom of her belly\u2014\"possibly a son...?\"\n\nThey laughed, both extremely emotional.\n\n\"You have given me your heart unconditionally, and so I will give you no less, Ellie. You are the love of my life, always have been, and I want you to marry me so bad...\"\n\n\"Oliv-ver...\"\n\n\"Please say yes; don't make me beg. Though I will definitely beg if you want.\"\n\nShe dried off her tears and held his temples, the black mascara furrowing her cheeks. \"No need to beg. The answer is yes, a thousand times yes. I will marry you, but...\"\n\n\"But what?\"\n\n\"You will need to ask my father for my hand in marriage first. I'm an old-fashioned girl.\"\n\n\"Well, that's not... complicated at all!\" Oliver quipped. \"He's gonna be stoked.\"\n\nEllie laughed.\n\n\"Seriously though, I'm afraid he's gonna start hating me again, and your twin will definitely want to shoot me dead. For real, this time.\"\n\n\"It's gonna be dangerous, for sure,\" Ellie purred, a sly smile on her lips. \"But, hon?\"\n\n\"Yes, my dear?\"\n\nShe kissed his lips softly, seductively, and when they parted, she whispered, \"Since when has it ever stopped you?\"\n\n******************************THE END******************************\n\nMany thanks to Anomic, who'd pitched in and helped with the editing. A special thank you also to Lonely_reader for providing accurate translations. "
    ],
    "authorname": "blackmatter",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "incest novella",
        "incest drama",
        "incest romance",
        "drama",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-things-you-make-me-feel-ch-11"
}