{
    "title": "Home for Horny Monsters Ch. 40",
    "pages": [
        "Hi all! Annabelle here with the next chapter of HFHM!\n\nNew reader? This is one of the final chapters of Book Three of Home for Horny Monsters. You really should start at Chapter One. (Don't worry, there will be a Book Four)\n\nReturning reader? Welcome back! Not only am I excited to see you again, but I am excited to share this chapter with you! A lot is about to go down. There will be fighting, reunions, and easily one of the strangest erotic scenes I've ever written (no, really).\n\nAs always, thanks again for your comments and letters. Your support means the world to me and I appreciate the many readers I get to meet doing this. It's always fun to hear fan theories, especially since some of them are right on the money. Don't forget to rate, comment, etc. once you are finished, and I hope you enjoy this one!\n\nThe Magician\n\nThey came again in the early hours of the morning, moving silently behind the outer wall. They triggered the wards Yuki had set, causing the kitsune to watch their approach through the window with bated breath. She could see them now, ominous shadows that peered over the wall and then vanished, gathering near the entrance for their next attack.\n\nYuki had spent hours building her defenses back up, her mind and body tired from the effort, hoping to catch some sleep. Now, she watched with eager anticipation, mentally daring them to come toward the house.\n\nThe shadows gathered at the entrance in a silent conference, then moved forward into the yard. When the closest figure had traveled about twenty feet, an ice dragon raised its frosted head and bellowed, summoning a storm of ice and snow that blasted the intruders. The dark figures in the yard were quickly lost in a storm of ice, forced to retreat.\n\nExhausted, Yuki fell on the couch, allowing herself a quick nap, thinking herself safe until morning. She was wrong.\n\nTwenty minutes later, they came back.\n\nThe dragon lifted its head again to summon the storm, but they had returned with a trio of small imps that rushed her dragon. The tiny demons ran beneath the dragon as it let loose with the fury of the storm, and her attackers took cover behind the front wall as the imps exploded near the base of the dragon's long neck. The ice cracked all the way through, and when the dragon took a breath to unleash another storm, its head fell off and shattered on the cold ground beneath.\n\nThey made it halfway up the yard before they encountered the avalanche she had set up for them. The night sky was blocked by the low fog over the house, and she had used several of her cards to trap several tons of snow on an artificial ramp of ice. With a snap of her fingers, she watched as the snow flowed over them like a river, burying the front yard in several feet of snow and then freezing along the top. The front porch was now packed in, so she monitored the chaos through the eyes of an ice crow she had planted on the chimney.\n\nSeveral seconds after the avalanche had been triggered, she scowled in anger at the sight of a protective bubble under the snow. The eerie blue glow suffused the yard until the invaders poked a hole in the ice above them, helping each other out. Snow beasts formed all around them, and they made another run for it, vanishing between the lions who were now level with them.\n\nThinking they had given up, Yuki was able to get another hour of sleep before she felt a change in the composition of the yard. Beneath the snow, she could sense the beginnings of a powerful magic ritual that summoned a storm of its own, a whirlwind of energy that threatened to undo all her hard work.\n\n\"Silly mice,\" she muttered, stepping out onto the porch. Placing a hand on the snow, she could sense them now, tunneling toward her. She tilted her head, frowning. There were at least four of them now. Two had set up a chamber toward the front of the yard, and two others were tunneling toward the dial.\n\nWith a sly grin on her face, she drew the Two of Pentacles and held it upside down, pushing it into the snow. It burst into ash and a tremor rocked the front yard, caving in the tunnels and the chamber they had created. Clearly the intruders had been warded against such dangers, because they were able to dig themselves free, but they weren't able to escape the icy spears that she summoned from the ground. Blood was splashed across the snow by the time they left, and she went back into the house to lie down on the couch with some tea.\n\nIt was nearly four in the morning when the snow in the yard caught on fire.\n\nThrowing herself off the couch, Yuki ran outside to see a pair of large fire elementals standing atop the lions and sending balls of flame in every direction. The air reeked of sulfur and swamp gas, and five figures now stood just outside the yard, peering in. Each one wore the same blindfold, and Amir smiled at her through the flames.\n\nThe flames along the top of the snow were being fed by some type of gas that seeped from beneath. The heat from where she stood was nearly unbearable, and it wouldn't be long until the snow in the yard had been reduced to water vapor.\n\nThe flames moved closer to the house, and she pulled out her cards. She had already used so many, and the deck was noticeably thinner in her hands. The Minor Arcana each took roughly half a day to make, and the Major Arcana even longer. She needed a way to chase the Society off for more than a couple days at a time, to replenish her deck, but what would that require?\n\nShe flicked the Queen and King of Cups out of the deck and tossed them toward the snow. Two humanoids made of water formed before her, their hands outstretched. The ensuing rain was heavy, but without any wind, and the elementals hissed in fury as they were slowly smothered out. The magical flames on top of the ice were slowly extinguished, and a hard crust of ice began to form. Sinking her magic into the ground, she focused the freezing of the water and sent a shower of man-sized icicles at the front gate.\n\nAmir and his team moved away from the opening, and Yuki snapped her fingers, spiraling the icicles apart at the last second. The King and Queen of Cups moved their hands, focusing the rain near the gate, and the icy conglomerate expanded, turning into a thick wall of ice.\n\nYuki let out a sigh of relief, focusing her energy on the falling rain. It began to snow once more, and she leaned against a porch column for support. Not only was she running out of tarot cards, but she was also exhausting her own magic faster than it could be replaced.\n\nThe snowman in the yard had partially melted, its misshapen face sliding apart to reveal the top of the gargoyle's head. With a violent shake, Abella's face burst through the slush, showering the ground with icy chunks. Still pinned in place, her dark gaze fixed on Yuki.\n\n\"You've seriously fucked everything up. I hope you're happy with yourself.\"\n\nYuki just glared at her, fighting back the anger welling up inside. \"I didn't expect this. Nobody could have.\"\n\n\"You said that you were the new Caretaker. Why don't you just go out and twist that dial? Prove to us all who's boss.\"\n\n\"Shut up, Abella. I need to think.\"\n\n\"Yeah well...\" Abella tilted her head, her ear toward the sky. \"You'd better think fast. I can hear them whispering to each other.\"\n\n\"And?\"\n\n\"Sounds like they're coming. All of them, from wherever they're at. While you're barely holding them back, their team is getting bigger.\"\n\nNo!\n\nThe sinking feeling in her gut was officially replaced with a pit of pure despair. These people had the advantage in numbers and resources, and it was a tough pill to swallow, but she needed more than just a deck of cards and some snow. \"What would you have me do?\"\n\n\"Go get the real Caretaker. It's a simple solution, really. Bring back Mike and he can make this all go away.\"\n\n\"Absolutely not! I've got this...\"\n\nYuki looked across the yard at the ominous glow behind the ice. No, she didn't have this under control. Not at all. If Abella was right, she was going to be fighting an uphill battle from here on out, and she was already growing tired.\n\nIt wasn't fair. She stepped out into the yard, her nose wrinkling at the scent of gas still lingering in the air. Carefully picking her way across the ice, she stepped onto the soggy ground past its boundaries, and approached the gargoyle. Abella's features tightened when Yuki grew near.\n\nShe needed time to think, and if the glow at the gate was any indication, she didn't have much of it.\n\n\"I can't bring him back. I don't know where he is.\" Yuki pulled the wardrobe key from her pocket and held it out. \"And I can't leave either, it would take too long. But maybe... maybe...\" She couldn't bring herself to say it, a hot tear burning its way down her cheek.\n\nAbella's features hardened, and she nodded.\n\n\"Let me out.\"\n\nYuki placed a hand on the ice and then tapped it with her finger. Cracks spread across it, and she took several steps back. The ice shuddered and then fell apart, collecting in a pile around Abella's feet. The gargoyle stretched her wings and then shook her whole body, spraying water everywhere.\n\n\"If you can buy me some time, I'll\u2014\" Abella's features went wide and she flew toward Yuki, arms outstretched.\n\nWhen the wall of ice exploded, shrapnel filled the air and knocked both of them across the yard. The King and Queen of Cups were blown apart, evaporating into a fine mist that clung to the house, and Yuki and Abella tumbled through the snow, coming to a stop at the stairs.\n\nAbella cried out in pain, placing her hands against her ears and rolling off of Yuki. Yuki stood up to watch a large metal golem with wrecking ball hands stride through the opening.\n\nSomewhere in the distance, someone opened a window and threatened to call the cops if they didn't stop making so much racket. Yuki almost laughed, but was too busy summoning a wall of snow between them to hide them from the Society.\n\n\"The key!\" Abella pulled herself up, still disoriented by the blast. \"Where is it?\"\n\nYuki's lips formed a thin line and she just shook her head, holding up her empty hands for Abella to see.\n\nThe key was gone. She had lost it in the blast, and had no idea where it was.\n\n---\n\n\"Okay, so what do we have?\" Mike looked down at a picture of the house that Tink had drawn him.\n\nIt was brightly lit by light from the rising sun through a nearby window. They stood in the kitchen, the parchment rolled out in front of them and surrounded by rats, Tink, and Ratu. Zel was still out in the stable, her leg too bad to walk on.\n\n\"Fox face turn everyone to stone.\" Tink laid rocks out along the map. \"One-Eye out front and Big Sister in fountain. Rock Butt stuck in ice here.\" She put down a large stone she had found in the garden. \"Fairies and rats all hiding, and not sure about cow fuck or horny lawyer.\"\n\n\"Horny lawyer? Really?\"\n\nTink shrugged. \"Tink look in briefcase.\"\n\nHe shook his head, making a mental note to ask about that later. \"So it isn't as simple as just going in and shooting her with a trick arrow, is it?\" He gave the goblin a wink. \"She can turn us to stone with a look, has magic, and wants to kill me. So what are our options?\"\n\n\"Hmm.\" Ratu touched the paper map. \"We can choose to spring up anywhere in the house. Perhaps we can set an ambush?\"\n\n\"Maybe. But we have a bigger problem. Even if we defeat her and put a bag over her head, what about the others? Can we get her to return them to normal?\"\n\n\"That's something you would have to ask her. I assume it's reversible, but can't know for sure. It would also be dangerous to try and figure it out on my own without knowing what type of enchantment it is.\"\n\n\"What about the medusa thing she's got going on? Any counters?\"\n\n\"Don't make eye contact. Try to look at her through a mirror, or close your eyes.\" Ratu shrugged. \"The only advantage we have is the element of surprise. I suppose we could come up through the Labyrinth and I could get some magic items from the center, but stepping out through the reflecting pool will ruin any chance of sneaking up on her.\"\n\n\"Hmm. I feel like we're missing something.\" He looked over the map again. \"What about the Vault? Is there anything there we could use?\"\n\nTink shook her head violently. \"Bad news only. Vault not for fighting.\"\n\n\"There's gotta be...\" his eyes fixed on the pebble Tink had laid for Naia. \"What about that weird emerald? Is there any way to get that?\"\n\n\"I was under the impression that Naia had tucked it away, so I'm not sure how.\" Ratu tapped the map by the fountain. \"But if we could get it, it might just work. It's powerful enough that you could use it to wish her away, or make her obedient, but you'd have to be very careful.\"\n\n\"Why?\"\n\n\"Every story about wishes is a cautionary tale for a reason. And the stone won't just work directly. You can't just say 'I wish things were back to normal' or whatever. You have to feel it, in here.\" She tapped her chest. \"It works off of desire, remember? That part of you that humans have the least control over.\"\n\nHe chewed at a fingernail, looking over the map. \"Okay, well, any ideas on how we could get the emerald?\"\n\nRatu and Tink looked at each other and then both shook their heads. Mike grimaced, his eyes back on the map. The emerald could certainly be used, but he had to get it first and then figure out the best way to use it.\n\n\"Mistress Tink?\" A rat appeared at the end of the table, his ears and nose barely visible over the edge. \"We are ready to begin.\"\n\n\"Tink go look.\" She hefted the club on her shoulders. \"Scout out house. Husband wait, then Tink tell what fox face is up to.\"\n\n\"Please be careful.\" They had the rats open a portal in Tink's room beneath the garage. There should be zero reason for Yuki to spend any time down there, and Tink would be able to slink quietly through the house until she could make contact with Reggie.\n\n\"Tink super careful.\" She walked past him and gave his ass a playful pinch. \"Husband watch.\"\n\nShe disappeared around the corner. Mike looked at Ratu.\n\n\"And now, for the worst part.\" She sat down and crossed her arms. \"Waiting.\"\n\n---\n\n\"Oh, fuck me.\" Yuki flopped down on the porch swing, gasping for air. The iron golem lay dismantled in front of her and the yard was finally quiet once more.\n\nWhen the iron golem had stormed the yard, Abella had rushed to intercept it. While it was powerful enough to do the gargoyle serious harm, she had been quick enough to evade its clumsy blows and fight back. While the battle itself could have been dealt with, six members of the Society had come running in, filling the night air with light and sound as they rained a magical assault down on the front yard.\n\nThe golem tried to attack the dial, but upon impact, its wrecking ball fist had cracked. A lightning storm danced across the yard, and one of the new assailants had burst into flame, tossing elementals across the yard. Amir stood toward the back, directing dark clouds across the yard to take up position and begin burning runes into the soil. Whatever he was up to required a fairly large rune, and Yuki had quickly been outmatched by their assault.\n\nWhen she tossed the Hanged Man card into the yard, it had folded itself into smaller and smaller squares before disappearing with a pop. The effect took several seconds before anyone noticed, but the Society broke into a panic once they did.\n\nWithout any air to breathe, a few of them had collapsed to the ground, clutching at their throats, the air sucked from their lungs. One of them had been dumb enough to rip off their blindfold in a panic, and Yuki was fast enough to stone one of them where they lay, her lips tightly sealed to hold in what little oxygen she had left. Thinking she had outsmarted the Society, she was disappointed to see Amir rub that cursed ring of his and summon the djinn.\n\nThe djinn surveyed the situation and gave a nod. Amir made a pair of hand signs that Yuki didn't recognize, and a dark cloud billowed over the Society members, turning them to smoke and then rushing away across the sky. Across the yard, Abella was soundlessly bashing away at the golem.\n\nYuki stumbled up the porch and summoned snow and ice to grab the golem by the feet, slowing it down. Abella managed to get ahold of the cracked hand and begin peeling it apart. Whoever had made the golem had done so in a hurry, for the beast was hollow past its elbows, and Abella eventually scrambled into the large hole she had torn to attack it from within. Stumbling back and forth, it eventually it collapsed in front of the house, and Yuki had been on the verge of unconsciousness when the card's magic expired. A heavy breeze blew over the yard as the outside air rushed in to replenish it.\n\nThere was a loud rattling sound inside of the golem and it tipped forward, Abella squirming out from inside of it. Her body was covered in rust, and she tumbled out onto the yard, her wings stretching out on the grass.\n\n\"That was close.\" Abella held up one of her hands. Scorch marks stretched along her fingertips. \"The core was in the head. Whoever put it together left a hole just big enough for me to reach in and crush it.\"\n\n\"Mmm.\" Yuki's head pounded, and she leaned forward and put her head in her hands. \"We only have a few minutes until they come back. I have no idea where that key is. Honestly...\" She looked over her shoulder. \"It might be best if you just ran. I appreciate the help, but this will only become more dangerous.\"\n\n\"Heh. I wouldn't be doing my job if I left. Speaking of...\" Abella rose and walked toward the house. \"If Mike was dead, the house would be hibernating. They would be able to come and go as they please, never seeing a single thing of value. If he's alive, then I know he's coming back.\"\n\n\"You have that much faith in him?\"\n\nThe gargoyle nodded. \"He's different than the others. Since the beginning, he has treated us as equals. Even Sofia likes him, but she won't say it out loud.\"\n\nYuki chuckled. Sofia was not one to like a human easily, that was for sure. \"I need to run out back and unfreeze the others. They can help us.\"\n\n\"Can't you do it from here?\"\n\n\"No.\" Yuki tapped the side of her head. \"Eye contact only.\"\n\n\"Is that the only way?\"\n\nYuki nodded. \"Yeah.\" She stood up and was immediately caught in the high beams of a small sedan that drove onto the yard, tires squealing in the mud. It slid to a stop and was followed by another car and they formed a V. The doors opened, releasing their passengers into the shadows where she couldn't see them.\n\nDamn. She pulled more cards from her deck and tossed them into the air. The Page and Knight of Pentacles appeared from the ground, bursting forth from beneath the slush piled up by the porch. The King and Queen of Pentacles appeared shortly after, standing taller than their compatriots. They all turned to Yuki for direction.\n\n\"Shake the ground. Buy me time.\" They nodded and sank into the dirt. The whole yard shook, causing the cars to rock from side to side. Yuki ran for the front door, her hand on the knob, when she heard a low growl from behind her.\n\n\"Oh shit!\" She turned to look into the blistering eyes of a pack of hellhounds that crawled over the cars. When they charged the porch, Abella was able to intercept one of them, but the other three made it to Yuki in a hurry.\n\nGrowling, Yuki's face distorted and her entire body shook as white fur burst from her skin, her fingers elongating into razor sharp talons. She snagged the first one out of the air and slammed it into the porch hard enough that the wood splintered and the hound disappeared underneath. Sharp teeth sank into her arms, but her fur hide was thick enough to spare her the worst of the harm.\n\nSnatching up one of the hounds, she stared into its face with the gorgon's eye. The beast turned to stone, and shattered when she threw it into the yard. A swirl of smoke formed over its remains as the beast reassembled itself and charged her again.",
        "Two more hounds came across the top of the car, and then the earth shook again, the alarm on one of the cars activating. Yuki let out a shriek of rage and summoned a spike of ice to drive through the skull of the first, the beast exploding into ash. The next one leapt on top of her and power streamed through her arms as she sucked the heat from its body and tossed its frozen corpse to the ground.\n\nAbella crashed into the ground from above, her hellhound exploding into ash. The two of them turned their attention toward the cars.\n\n\"It's gonna take a lot more than dogs,\" Yuki hollered, her claws spread wide. All three of her tails flailing wildly behind her, igniting with arcane energy as her human form melted away to reveal the beast beneath. Her face was feral now, her lips curled wild around bared teeth.\n\nThe cars shook and a swarm of nightmare creatures burst from behind them. The air glowed a sinister color from the portal that had been opened, and the light was now bright enough that she could see four figures chanting feverishly through the car doors.\n\nAbella crashed into the first creature, a beast that looked like a gorilla with no hair. She was quickly swarmed, but her stone hide was proof against both claws and teeth. While safe, she could do very little to stem the tide.\n\nYuki charged forward, sliding a card into her teeth. Down on all fours, she slashed at the beasts as they surrounded her and tried to pin her down. Waves of frost rippled away from her, flash-freezing her closest assailants, and when she got close to the cars, she threw the card like a dagger into the sky.\n\nThe Hierophant card hovered in the air, expanding like a hot air balloon over the bloody scene. The dark sky above cracked open and scoured the yard with beams of holy light. Screams of rage and pain filled the air as the demon tide was blasted into ash, and Abella quickly freed herself and leapt into the air, then swooped down to grab one of the warlocks who had opened the summoning gate, then spiraled up into the bright sky above.\n\nThe others fled, and Yuki collapsed to the ground, watching them go from beneath their cars. The first one to pass through the lions was smashed from above by the one that Abella had captured, and the gargoyle swooped dangerously close to the edge of the boundary in an attempt to grab a third. The warlocks yelled at each other in Latin, then vanished into the night, dragging their fallen comrades behind them.\n\n\"That's it, I'm calling the cops!\" someone down the street hollered, and Yuki let out a chuckle. A war had broken out in the front yard, contained only by the power of the geas, and the neighbors were only concerned by the noise on the street.\n\nFighting to stand up, Yuki had Abella help her push the cars toward the gate to slow down the next attack. The Pentacle royals emerged from the ground to assist, lending their strength. Once finished, Yuki had them spread across the yard, ready to disrupt any further spellcasting.\n\nThe gargoyle looked tired, and the two of them collapsed against the underside of one of the vehicles after tilting it up on its side.\n\n\"How much longer do you think we can hold out?\" Abella asked.\n\nYuki pulled out her tarot cards. The Hierophant had taken almost a year to make, now gone in a matter of seconds. Many of her remaining cards didn't have a practical use, certainly not in a fight, and she was officially exhausted. She slid back into human form, her rage subsiding.\n\n\"Not very long. Not like this.\" She looked back at the house, suddenly sensing many eyes on her. \"I don't think anyone could have expected this.\"\n\nAbella threw a look of disgust at Yuki, and then shrugged it off. \"You'd better hope that he comes back. These people almost broke the geas last time, and it took all of us to take down just three of them.\"\n\n\"Everyone helped him?\" She swallowed, her throat suddenly dry. \"Some of you can't fight.\"\n\nThe gargoyle leaned against the muffler of the car, bending the pipe. \"Fighting isn't always about tooth and claw. It can also be done up here.\" She tapped her forehead. \"Mike isn't a fighter, but that's why he has me. And Sofia. And the others. It isn't about being able to do everything at once, but convincing those who can do little things to come together to make something big happen.\"\n\n\"I don't remember you being so wise.\"\n\n\"Well, I don't remember you at all.\" Abella turned her head and frowned. \"Here comes the next wave, those guys you choked are on their way back. Sounds like you killed one of those demon summoners though, they're hiding the body before the cops get here.\" \n\n\"How many of these people are there?\"\n\nAbella counted on her fingers, then gave up. \"I couldn't even say.\" She stood up and stuck a hand out to Yuki. \"I'm hoping you have a plan.\"\n\nYuki took Abella's hand and stood, her cards fanned out in front of her. She pulled out three of them and held them up. Five years of hard work and dedication had gone into these three cards alone, and it pained her to lose them all together.\n\nDo what must be done. She slid them into one of her sleeves and then looked at the remainder of her deck. The major arcana was now very short on uses she could think of, while the minor arcana still provided plenty of utility. She organized the minor arcana by suit and number and then put them in a sleeve pocket. Afterward, she stuck the major arcana into an interior pocket by her breast. The last thing she needed was to spend time avoiding those last few power cards while in a hurry. Pulling the Moon while she meant to use something else would do her little good.\n\nA weight in her pocket made her pause, and she stuck her hand inside and pulled out the sunstone. It was cool to the touch, and she briefly wondered if she could use it out here. Realizing that it was a surefire way to incinerate the house, she blew on it, encasing it in a thick layer of frost, and then put it back in her pocket. First chance she got, she would put it back in the Vault.\n\n\"Here they come.\" Abella's face scrunched up. \"What the fuck is that?\"\n\n\"What the fuck is\u2014\" a large shadow leapt over the top of the cars, landing on six thick, meaty legs. It had four large claws that clacked together hungrily and a ten foot long tail that whipped back and forth. Eyes adorned every side of its body, sinister eyes that blinked and then fixated on Yuki.\n\n\"Time to squash this bug.\" Yuki made a fist, her hand freezing over with ice and forming into an icicle. The icicle unfolded, forming a giant claw made of ice with glistening talons.\n\n\"Let's.\" Abella slammed her fists together and charged.\n\n---\n\nStepping through the portal, Mike took a quick look around, his fingers touching the hilt of the dagger. Tink's workshop was unchanged from the last time he had seen it, and when they walked upstairs into Zel's lab, it was the same story. The only thing different was how cold it was, and when he silently opened the door to the garden, the chill that hit him sent a shiver down his spine.\n\nThere was snow everywhere, and his breath collected in a cloud before his face, then vanished into the air. In the front of the house, he could hear the sounds of fighting punctuated by roaring, growling, and the occasional blast of magic.\n\n\"You weren't kidding,\" he told Tink, who stood in front of him. When Tink had returned, she had explained with wide eyes that Yuki and Abella were in a large scale fight with the Society in the front yard. However, based on the sounds he was hearing, it sounded like a full scale war was being waged.\n\nTink tugged on his pant leg and pointed. When he lifted his gaze, he felt his heart drop through his stomach.\n\nThough he had been warned, he couldn't properly prepare himself for the sight before him.\n\nNaia, frozen in stone with her hands outstretched.\n\nHis Naia.\n\nWas she in pain? Aware of her surroundings? It was impossible to know, but he blinked away his tears and moved closer to the fountain.\n\nA large, snowy mass sat next to the fountain. He stopped long enough to wipe the snow away, frowning at Sofia's frozen form. When Zel had told him about the centaurs, he hadn't properly appreciated the grief she must have felt seeing familiar faces frozen in time.\n\n\"You should hurry.\" Ratu put a hand on his shoulder. \"If nothing else, we can use the emerald to get them back.\"\n\nHe shook his head. The goal had been to arrive, turn the dial, and then take down Yuki, but with the Society at large, the plan had changed. If Yuki died, the emerald could be used to unstone everyone. However, that meant retrieving the emerald, which Mike wasn't certain he could do.\n\n\"Now or never, I guess.\" He turned to Tink. \"Do we still have eyes on the front?\"\n\nShe looked at a nearby rat who nodded back. \"Rats make good spies.\"\n\nAs the battle for his front yard had progressed, Reggie had taken a vested interest, just waiting to give the order. Apparently the rats were planning to fight if the Society breached the front door, which wouldn't happen until the geas was broken, which would take them hours.\n\n\"Okay, let me know if anything changes.\" He walked up to Naia and just looked at her, his heart clenching once more. Fighting the grief that threatened to distract him, he placed his hands on her and closed his eyes.\n\n\"Naia, can you hear me?\" It didn't surprise him when she didn't answer.\n\n\"Go deeper,\" Ratu advised him. \"You said she was part of you, yes? You need to speak to that part, not the statue in front of you.\"\n\n\"This isn't a statue. It's Naia.\"\n\n\"For your purposes, she's just a statue. Visualize.\" She gave his arm a squeeze. \"I know it's hard, but you need to do this.\"\n\n\"Yeah.\" Ratu was right. He would have to distance himself before he could accomplish anything. Closing his eyes, he took a few deep breaths and visualized Naia, not as she stood before him, but as he had seen her on that first day. Full of life and in his bathtub.\n\nMinutes passed, but no amount of meditation seemed to accomplish anything. He slowed his breathing and concentrated on the magic inside of him. Naia's presence always seemed to find him during sex, and he wondered if he could replicate that feeling in order to summon her.\n\nHis magic crept along his skin, aimlessly wandering. He sank deeper, aware that his senses were slowly dulling to the outside world. Letting everything go, he asked the magic to move onto the statue before him, to connect him with his beloved nymph.\n\nHe stood this way for far too long, just breathing and letting his magic manifest. The frustration built in him and he finally let go of her, frustrated.\n\n\"It's not working,\" he said, but no longer spoke in his own voice. Startled, he opened his eyes and saw that he stood in front of Naia's fountain, the nymph still frozen before him. However, her garden extended in every direction for untold miles, as if planted in the middle of an infinite meadow.\n\nTrying his best to relax, he looked around, letting the vision take him.\n\n\"Where am I?\" he asked in a feminine voice.\n\n\"In the Sanctuary,\" he replied to himself in the same voice. He held up his hands, finally able to see the delicate fingers he now wore. Looking down, he saw that he had an ample amount of cleavage packed within a pure white dress.\n\nI'm wearing a woman's body. Must be a Tuesday. \"Who are you?\" he asked.\n\nThe woman's laughter surrounded him, and tiny lights like fireflies lifted free of the garden, swirling around him in a swirl.\n\n\"I am you,\" she said. \"And you are me.\"\n\n\"I need the emerald.\" Ignoring the scene around him, he approached the statue. \"Naia tucked it deep within her spring somewhere, and I need it back to help her.\"\n\nHe didn't hear any response, so let out a sigh. Apparently these visions were meant to be slightly frustrating at the very least. \"This place is called the Sanctuary. Sanctuary from what?\"\n\nThe lights swirled around him, the voice now coming from them instead of his own body. \"Everything. This is the place between the real world and the one beyond, between your dreams and your nightmares.\"\n\n\"Why does such a place even exist? What do I need to be safe from?\"\n\nFrom the others. The cold voice hissed like a snake, and Mike turned around to see the shadow standing behind him. The others like me.\n\n\"Hell no, absolutely not.\" He took a step back and bumped against the fountain. \"I already told you no.\"\n\nYou did, but now that I have seen you, I can find you anywhere. The shadow approached, but then thought better of it and walked to the side. This one is frozen in time, yet has something you need. What if I told you I could help you get it?\n\n\"I'm guessing in exchange for a small part of my soul?\"\n\nJust a small piece. That I may persist.\n\n\"What are you? Or what were you?\"\n\nThe shadow rippled and then hissed like a boiling pot of water. I was once a man like you. I became a part of the Grand Game, a pawn of the gods. And when I fell, I clung desperately to this existence that I could persist.\n\n\"What is the Grand Game?\" He thought of the vision he had seen, a board with game pieces spread across it. It had to be a reference.\n\nThe shadow laughed. You have progressed so far, yet know so little. I shall give you the answer to what you seek, but in exchange...\n\n\"Yeah, yeah, a piece of my soul. The answer is still no.\" Though he said the words out loud, the temptation was still there. Ratu had said that the wrong piece could change who he was, but if it was small enough, maybe it would be worth the price? The shadow seemed to have answers, and he was desperately short on those.\n\nYou waver.\n\n\"Not today, no. I don't need your help.\" The words didn't even sound convincing to him and he paused. The shadow was like the whistle blower from Hell, willing to give him whatever he wanted in exchange for progression toward... something.\n\nI can sense your resolve weakening.\n\n\"Slow down, Palpatine. You aren't the Senate yet.\" He saw the shadow tilt its head, uncertain of the reference. This being clearly wasn't omnipresent. It had already answered a couple of his questions, and maybe he could squeeze a couple of freebies out of it. \"You said this place is meant to keep me safe from people like you, yet here you are.\"\n\nThe shadow paused for several seconds as if reflecting. This place was meant for all of us. We could converse safely here without fear of reprisal.\n\n\"Like, we couldn't hurt each other?\"\n\nCorrect. Were I alive, we could do no harm to each other.\n\n\"Is that why I'm a woman here? So I can't bring weapons or whatever?\"\n\nThe shadow chuckled. The Great Game had been played for centuries by many pawns. You wear the same body as your predecessors, the body of the house itself.\n\n\"Wait, so does that mean the house is alive?\"\n\nSeveral seconds passed, the shadow suddenly silent. I have said too much already. I am willing to tell you much, but I demand a price.\n\nMike seriously contemplated the offer, but thought back to what was happening right now in his front yard. As tempting as exploring the home's mysteries was, now was not the time. \"The answer is still no. Not for a piece of my soul. Come up with a different price.\"\n\nThe shadow hissed and moved toward him, hands outstretched. They passed harmlessly through him, but left a chill behind.\n\nIt will all burn! Your whole life will go up in smoke! In that moment, the garden was gone and he stood in his front yard, staring up at his home, the flames stretching far into the sky. Cries of alarm came from within and he fell to his knees in shock. Is this really what you want?\n\n\"No. No it isn't.\" He rose, anger flooding him. \"But how do I know that this is real? How can I believe in you when you're clearly just a shadow of the man you once were?\"\n\nThe shadow hissed in response, flickering in the firelight. When the time comes, you will come crawling to me.\n\n\"That may be. And when it does, you can rub it in.\" He shook his head and willed the vision to depart. It faded from his sight like a ghost, leaving only the meadow and a giant, house shaped scorch mark in the grass of the garden. The shadow was gone too, and he turned to face Naia once more.\n\n\"I don't suppose you know anything about that asshole, do you?\" He moved closer to her, his eyes on hers. \"So I'm the house right now? The house is a woman?\"\n\nHe didn't expect an answer, but now he contemplated the fountain beneath her. He sat down on the edge of the fountain, crossing his legs and tugging down his skirt. It reminded him of being stuck in Emily's memories, but now he was in complete control of the body he was in.\n\n\"I'm the house.\" He had an inkling of an idea, but his thoughts were dancing around it. The Sanctuary was in between his world and the next. He had willed himself here and, for the first time ever, didn't feel like he was about to get yanked out.\n\nWas he asleep in the real world? Had he dozed off, only to find himself in this strange place? Or had his consciousness ascended, allowing him to briefly meld with the house?\n\nThe spring bubbled behind him and he turned to look into it. His reflection was scattered, and he was unable to see the face that he wore. However, he felt like he was missing something, a hint that had been accidentally given.\n\nNaia. Why was Naia here as a statue, and not as a game piece? He had seen her as a game piece before, but why the fountain, why not wander the house in his mind and dig through its many rooms?\n\nThe sparkling lights returned, surrounding him.\n\n\"You're trying to tell me something, aren't you?\"\n\nThe home's laughter filled the garden, the lights bobbing up and down in wave like patterns that made him think of ripples. This made him look at the fountain once more. The Architect had met Naia and built this home on top of her hot spring, locking the home to her. Naia was, in a way, an extension of the house, but the house was also separate.\n\nThe lights rippled around him again, then again. They all turned blue and green, softly changing colors.\n\nThe house. The fountain. They were tied to each other. Sticking his hand in the water, he half expected to pull the emerald out, but his hand closed on nothing. Spinning on his ass, he planted his feet in the water, contemplating the cool liquid.\n\nThe house. The fountain. Naia. His magic. Contemplating the liquid in front of him, he thought back to what Ratu had told him about magic. It required some form of intent, or symbolism. A means of acting out the desired result. He wanted the emerald, but it was buried deep in Naia's spring. But the spring was also part of the house, which, by proxy, was currently a part of him.\n\nHe had an idea, but it was weird, even for him. Still, he needed to try something other than just cooling his heels in the fountain.\n\nClosing his eyes, he spread his legs and touched the smooth skin of his thighs. Small chills passed through his body, and he could feel his magic resonate deeply in response. Picturing the emerald in his mind, he imagined it buried deep inside of him, waiting to be teased out. Moving his hands up his thighs, the white gown he wore was split along the side, and it was easy enough to cast it to the side to reveal a thick patch of pubic hair over wet, puffy pussy lips.\n\nStroking the pubes, he found that his clitoris was thick and swollen, peeking out from beneath the hood. Feeling like a huge pervert, he stroked himself, moving long fingers across engorged flesh, exploring his vaginal opening and gasping in surprise. The water in front of him rippled in response, and he squeezed one of his breasts, thumbing at the nipple.\n\n\"Naia,\" he gasped, his magic seeping through him and into the water. The lights all around him shifted through the light spectrum, glowing brighter with every stroke. Teasing his vaginal opening, he let out a large gasp as heat flooded his groin, his pussy now soaking wet. He thought of the nymph, of the time she had sucked his cock and brought herself back to life, of the memories she had shared of her and Emily. Stroking his pussy faster, he pictured his own orgasm as a shining green emerald buried in the core of his body.",
        "Water filled the fountain, and soon overflowed the edges, soaking the grounds of the ephemeral garden. The liquid below his feet was turning blue, swirling beneath him as he rubbed at his clit, then took the hand off his breast to finger himself, struggling with the awkward angle of it all. With every gasp and moan, the lights around him shimmered in response, and the spring began to bubble, heat flooding through it and up his bare legs.\n\nThe fountain rippled, water gushing over the sides as a figure formed beneath the surface. Naia's features emerged from the spring, her hands sliding along Mike's legs. The statue was still there, and he instantly knew that he was looking at the piece of her that he carried within him.\n\n\"How...?\" he asked.\n\n\"This place is very much like the Dreamscape,\" she told him, then kissed his inner thigh. \"You look like you could use a hand.\"\n\n\"I could use both,\" he muttered, squinting in sweet agony when Naia slid her fingers into Mike's pussy, stroking him from the inside. \"I... need the... emerald...\"\n\n\"Let me help you with that,\" she said with a smirk. As Naia penetrated him with her hands, she leaned forward and rolled her tongue around on his exposed clit. His whole body tensed up for a second and then relaxed, waves of pleasure radiating out from where they were connected.\n\nHe closed his eyes, picturing the house. Somewhere, deep within, the spring was waiting, pressure steadily pushing water to the surface. With every small contraction of his pussy, he imagined the emerald squeezing its way toward the surface, rolling around tight corners and flowing freely through small caverns no more than a foot across.\n\n\"Yes,\" he hissed, his magic permeating the pool and swirling beneath the water. Naia's tongue danced circles over him, and her fingers stirred his arousal into a frenzy, forcing the emerald ever upward through the tight passages. His breath came faster now, and Naia grabbed him by the legs and yanked him into the water. It flowed around him, and he was suddenly covered in watery hands that caressed every erogenous zone of his body.\n\nWater flowed through the spring, the emerald tumbling ever upward as it approached the surface. The cries emanating from Mike were those of a woman on the edge, and he closed his legs, pinning Naia's head in place. Lifting his hips, he allowed her to fill him completely with fingers made of water. His entire body felt like it was ready to burst, and when he opened his mouth, a cry emanated from him that caused the flickering lights to spiral up into the sky and then fall like stars.\n\nThe fountain exploded, water gushing upward like a waterfall in reverse, and his limbs went rigid, the sky above falling down upon him in chunks. He closed his eyes and let the warm, soothing waves carry away his mind until all was dark.\n\nHe shuddered, the orgasm still tickling the base of his spine.\n\n\"Um... are you okay?\" It was Ratu's voice, and he opened his eyes. He still stood in front of the fountain, but the runes on Naia's torso glowed brightly, shining as if the stone had never encroached on that region.\n\n\"Uh, yeah. What happened?\"\n\nRatu made a face. \"You zoned out for a couple of minutes and then let out a really loud moan. Naia's runes started to glow, and, um...\" She pointed at his crotch.\n\nHe looked down and was hit with the sudden realization that he had come in his pants, the stain already visible.\n\n\"So... I'm guessing you know what happened more than I do.\" She leaned toward him with sudden interest. \"And I would love to hear more about it.\"\n\n\"Maybe later.\" He stepped into the fountain and knelt down, his eyes scanning the water. It wasn't long before he stepped on something, and he lifted his foot to reveal the glittering green object beneath it. He picked up the emerald, water pouring off the sides of his hand, and held it up to the light. It sparkled brightly, and he couldn't suppress the grin that crossed his face.\n\nThe cool air caressed his wet pant legs, making him shiver. His shoes squished uncomfortably as he walked toward the edge of the fountain. He took them off to dump them out properly, then opened up his pants long enough to scoop out the load he had deposited there. He rinsed off his fingers, hoping not to think of it again.\n\n\"It really worked.\" Ratu helped him out of the fountain, then held up his shoes. Fire crawled along her hands, steam seeping free of his sneakers until she handed them back, completely dry. \"Here.\"\n\n\"Thank you,\" he said, pocketing the emerald. He wondered what the next step was, then flinched at the sound of an explosion. Looking at each other in a panic, they left the fountain behind and ran for the back door.\n\n---\n\nThe scorpion beasts had taken some time to defeat. Yuki was able to stone the first one, but the next one was covered in gibbering mouths instead of eyes, and it had become hard to hit it without getting bitten. Then came a second round of demonic beings, which turned into half an hour of punching, kicking, and blasting them back to Hell.\n\nIn a separate attack, Yuki had frozen the legs of a creature that looked like it had been stitched together by a bored five year old while Abella punched it in the face repeatedly, her legs wrapped around its giraffe neck. The street briefly went quiet when a police car passed through. Yuki fought hard to avoid laughing when the cops stood in the front yard, shining their lights across the battle that waged in front of them, their eyes casually sliding over Abella as she ripped the head off of the poorly made creature and tossed it to the ground.\n\nHearing nothing of interest, the cops shrugged and left.\n\nFor the remainder of the night, every time a threat was vanquished, a new one immediately appeared.\n\nYuki knew that this was a stall tactic, an attempt to wear the two of them down, and it was working. Her magic reserves were dangerously low, and Abella's movements had long ago become sluggish. The Society was playing a game of attrition, and once they were sufficiently weak, she expected to see their stupid blindfolded faces once again.\n\nThe sun was climbing into the sky, her stomach growling as she ripped apart a tiger made of junk. Abella had to help her with it, because the damn thing kept regenerating, but they eventually broke it apart to the point where its legs could no longer support its weight, and it collapsed in the front yard.\n\nAbella flopped down onto the ground, her eyes up on the sky. \"I don't know how much longer I can go,\" she admitted, then sat back up. \"I'm surprised they didn't show up sooner, to be honest.\"\n\n\"They want to be sure. I've fooled them more than once, and every one of them we kill is irreplaceable.\" She gave the junk tiger's head a kick, shattering its face into pieces of metal, glass and plastic. \"Expect a big push when it happens.\"\n\n\"Yeah, well...\" Abella looked back at the house, then stood up. \"Hold on a second.\"\n\n\"What is it?\"\n\n\"I thought I heard\u2014\" she turned around and scowled. \"Looks like we're in for a treat.\"\n\n\"Indeed.\" Amir stepped over the rubble in the front yard. Behind him, eight others followed close behind, each of them blindfolded as he was. \"You've lasted the night, but I doubt you last much longer.\"\n\n\"That's what you think.\" Yuki found the three cards she had tucked away, her fingers closing around each. \"I can do this forever.\"\n\n\"No, you can't. I've been watching, you are barely holding on as it is.\" He grinned and held up a bag. \"There is literally nothing you can do to stop us now.\"\n\n\"We'll see about that.\" Yuki took a step back, toward Abella. Abella closed the gap, and they now stood side by side. \"You shall go no farther.\"\n\n\"Do you really think the two of you can stop me?\"\n\nYuki held up a card. \"Three of us.\" She slashed the card through the air, cutting a hole in reality. Dark smoke leaked through it, the sky above growing darker as the figure stepped through. Astride his pale horse, Death regarded the men and women before him with casual indifference, then looked over his shoulder at Yuki.\n\n\"Avatar of Death, this I command. Your contract shall not be fulfilled until you collect the soul of that man right there.\" She pointed a finger at Amir, who leaned away in shock. \"Death, deal thy sting!\"\n\nThe horse let out a blast of air from its nostrils, and Death dismounted, holding his scythe above Amir. The Society members backed away as Death silently strode forward and swung the blade through the leader of the Society, who let out a scream and crumpled onto the ground, steam hissing from his wounds.\n\n\"Cut off the head, and the body will follow.\" She slapped the Strength card onto Abella's flesh and stuck the Magician card in her teeth, willing both cards to release their power. \"Let's clean house.\"\n\nAbella blasted forward, wings outstretched and reaching. A powerful surge of magic raced through Yuki's veins, and she commanded the water in the air to freeze, massing it around the legs of the men and women who stood on her lawn. Ice crawled up their legs, holding them in place, and she summoned massive icicles from the ground, spearing several of them on the spot.\n\n\"Go, go, go!\" she hollered, watching Abella tear through the others, tossing them high into the sky. Screams filled the air as they fell back to the ground, and Yuki felt the magic roaring inside of her. The few who tried to escape were speared by hundreds of icicles that sprouted from the ground like teeth, the front yard chewing them up. Snowflakes swirled around Yuki now, blurring the world around her. The Society had been too bold, had gotten too cocky, and now they were paying for it.\n\nA dark figure moved in the corner of her vision. She turned to see that Death had meandered over to the front of the house, quietly pondering the bushes in front of it.\n\nThat's odd. He should have left by now. Turning her attention back to the others, she felt the icy grasp of a hand around her ankle. Stunned, she looked down in time to see Amir give her a yank, pulling her off of her feet and casually tossing her across the yard. She crashed into one of her own icicles, busting through it to tumble on the ground.\n\n\"Yuki!\" Abella flew toward Amir, cocking her fist back to punch him. Amir took the first punch, half of his head exploding into a black, swirling cloud that lingered behind him when he moved. The gargoyle reversed course and came for him again, but he sidestepped her attack and grabbed her by the wing. With a hard twist, he altered her trajectory and hurled her toward the house with a blast of black fire. She crashed into the roof above the porch, then fell, caving in the steps below. Dark flames sputtered around her motionless body and then went out.\n\n\"Now,\" he commanded, and several dark vines sprouted from the ground and circled the gargoyle, pinning her in place.\n\nWho cast that? Yuki looked around and saw that Elizabeth stood between the lions now, her hand outstretched and weaving through the air with a trail of green light behind it. The vines held Abella in place, despite her renewed strength.\n\n\"I don't understand. You should be dead!\"\n\n\"I've lived a very long life. You don't get to do that without being two steps ahead of your enemy.\" He snapped his fingers and the witches and warlocks around him crumbled into ash. \"I knew you were waiting to spring this trap on me, and\u2014\"\n\nYuki blasted him with ice magic, but a fiery shield appeared before him, summoned by a warlock standing on top of the stone fence. She summoned more icicle spears, but the ground trembled, vibrating them apart. Society members appeared everywhere, all of their spells deliberately tailored to counter her every move. Crying out in rage, she sent waves of pure, magical energy across the yard, willing her attackers to be destroyed, but Amir summoned a black fog from the ground that gobbled up her assault, forcing her to go on the defensive.\n\nMinutes passed. Despite pouring all of her magic into defending her position, she was quickly overwhelmed from every direction, beams of pure energy sizzling the air around her. She summoned walls of ice, walls that were easily shattered by their coordinated efforts. How had they gotten so good?\n\nThe Society members all stood a good distance away, and she saw that they had removed their blindfolds. When she would look at them, they would look down. They had circled the yard and, with their vision restored, had been able to renew their attack with pinpoint accuracy. She moved back toward the door, another plan forming in her mind.\n\nA blast of lightning hit the ground behind her, launching her forward, the fur on her tails singed. Growling, she stood up to face Amir, who was holding the bag again. Death paced behind him, looking drastically out of place.\n\n\"You told your pet to take my soul. I don't have one anymore.\" He grinned, and then stuck his hand in the bag. It hissed as if it was full of snakes. \"You're through.\"\n\n\"I'm not beaten yet,\" she hissed, gathering her magic. The temperature dropped, frost forming on the ground beneath her.\n\n\"Oh, this is no longer about beating you.\" He pulled a spherical object out of the bag. \"Now it's about breaking you.\"\n\nYuki froze in shock as she stared at the severed head of the gorgon. Missing one eye, the snakes on its head hissed angrily as Amir held it aloft and pointed at her. White light came from its remaining eye, light that washed over Yuki and threatened to overwhelm her. In response, her own eye glowed as well, the magic of the gorgon now fighting itself. She closed her real eye, her head pounding as the gorgon's eye sapped her strength away.\n\n\"Where did you get that?\" she cried in disbelief.\n\n\"We've had this in our possession for quite some time. I was a bit surprised to discover that you possessed the missing piece of it, but I will admit that I have wondered how this will work. Who will win, the gorgon or the fox?\" He stepped closer, the gorgon's head filling Yuki's vision. \"For that matter, what will happen? I have my theories.\"\n\nYuki let out a scream, and the gorgon opened its mouth in silent agony. The light grew so bright that she could no longer see, pain filling her head until she thought it would explode.\n\nWith a loud crack, the gorgon's head turned to stone. Now heavy, Amir dropped it on the ground where it cracked and fell apart.\n\nHowling in pain, Yuki grabbed at her own face and pulled out the gorgon's eye as it busted into three stony pieces of its own. She reached for her inner pocket, trying to grab one of the major arcana cards, but Amir was quickly upon her.\n\n\"It's over for you.\" Amir removed his blindfold and gave her a kick, sending her sprawling on the ground. Yuki cried out in agony, trying to roll away. The members of the Society swarmed in, surrounding them both. \"Kali, break this geas right now.\"\n\n\"Yes, High Priest.\" She plucked some tiny heads from her pouch and tossed them out. They swam through the air lazily, moving back and forth to build her a table out of soil and retrieve a large sack from the edge of the yard.\n\n\"I must say, you were a troublesome fox.\" He knelt down and grabbed Yuki by the chin. \"You will make an excellent addition to my collection.\"\n\n\"No.\" It was the fight with Emily all over again. She had been tricked, outmatched, and now lay defeated once more. This had become her fate somehow, every decision leading her here once more. Her mind and body were suddenly numb from shock.\n\n\"You were strong, I'll give you that much. But you weren't strong enough.\" He pushed her down and twisted his fingers in the air. A set of thick chains sprang from the ground and circled her ankles and wrists, forcing her into a seated position. They tightened, trapping her hands by the ground. \"From here on out, we're done playing games.\"\n\nHer thoughts were suddenly thick, a tide of emotions rushing up to consume her. She had lost everything before, but not on this scale. Her failures had now cost the others, her own pride her downfall. Her head throbbed painfully, and she tried to summon up her magic, but she was officially tapped out of power.\n\nShe tried to reach her inner pocket where she had tucked the remaining major arcana cards, but the chains weren't long enough. The only thing she could reach was the minor arcana that she had tucked into her sleeve, but it was no use. The spells, even directed, wouldn't be enough to free her or give her an edge.\n\nLooking over at Abella, she thought back to what the gargoyle had said. If Mike had been here, the others would have been able to help her. If she hadn't locked them away, they could have made sure this never happened. She had been so caught up in her own quest for justice that she had become blind to the truth that surrounded her. No matter how much she desired the position, the house would never obey her whims, never truly allow her to become the Caretaker and protect everybody inside.\n\nBlinded by rage, greed and revenge, she had tried to force her will on the house, to bend it to her whims. The signs had been there, but the rush of what she had thought would be an ascent to glory had made her unable to see the lack of wisdom in her decisions. She had ruined everything.\n\nShe wished someone could help her, could save the others from their fate. Thinking back to the man who she had tried to murder, she realized that she honestly wished he was there to help. A simple twist of the sun dial would have sent all of these people away.\n\nThe epiphany hit her like a rush of cold water. She had been so focused on protecting the house that she had forgotten that being the Caretaker didn't just mean keeping the place safe. It also meant taking care of it, and nurturing those within. Mike likely wasn't the protector she expected, but he was what the house needed. Someone to love and care for the others, to nurture and encourage them, and utilize their strengths as his own.\n\nShe didn't have the others, not now. Mike had a small army of strengths to pick and choose from.\n\nAll she had was herself and a handful of cards. And even if it was only a few minutes, maybe it would be the minutes that counted the most. Already, the others had taken defensive positions around the sun dial, ready to tear apart anyone who came out of the house to stop them.\n\nShaking her arm, she let the remains of the minor arcana fall into her palm. There were maybe thirty cards left, some of them the weakest spells she had created. However, just like a tarot reading, it wasn't about which cards were drawn individually, but how they went together as a whole.\n\nAbella's words came to her and Yuki gritted her teeth, focusing all of her rage on the people around her.\n\n\"Time to make some big things happen,\" she growled, pinching the cards in her fingers. Flipping her wrist over, she squeezed, causing the cards to leap up from her hands, the magic in all of them activating at the same time.\n\n---\n\nMike stood helplessly at the window, the storm of magic outside so excessively violent that both Ratu and Tink had held him back.\n\nIt was a technicolor storm of magic. Water, fire, earth and air had been unleashed in every direction at the same time, swirls of fire and earth climbing into the sky, powerful rain battering the sides of the house. The men and women on his lawn were tossed about like popcorn, their screams drowned out by the wind. Swords fell from the sky, chasing each other like angry birds and crashing into anybody who got in the way. A blast of air sent Amir across the yard, and a pair of swords ripped into him when he tried to stand back up.\n\n\"What do we do?\" he cried, his face pressed against the glass.\n\n\"We wait. This is... I don't even know. It's pure chaos out there.\" Ratu frowned and looked at Tink, who gazed at the scene through her goggles. \"Do you see anything?\"\n\n\"Magic everywhere,\" Tink whispered in awe.",
        "The cacophony lasted for several minutes, the house showered in mud, fire and bits of trash that had been strewn around the yard. A Society member blew against one of the windows, cracking the glass. A blast of light from the house blew them across the yard, where they tumbled in a smoldering heap across what remained of the front walk.\n\n\"I can feel it winding down.\" Ratu closed her eyes, placing her head against the glass. \"This might be your best chance. When the storm subsides, race for the dial and we will be right behind you.\"\n\n\"Okay.\" He swallowed the lump in his throat, his whole body tingling in anticipation. He hadn't expected to see this, and he couldn't take his eyes away from the scene before him. Moments earlier, the three-tailed figure had been desperately trying to crawl away, but had been caught up in the storm and tossed around, smashing into objects, people, and eventually, the ground. Yuki had gone completely limp, the wind ruffling the fur on her tails.\n\nThe house shuddered when a massive gust of wind blew against it, and then the world outside went quiet.\n\n\"Go! Now!\" Ratu ran around the corner and opened the door for him.\n\nMike stepped through it, marveling at the chaos before him. Members of the Society were struggling to stand up, and he hopped over the broken railing of the house, landing in a crouch behind what was left of the bushes. Nobody made a move, so he sprinted across the yard, tightly clutching the emerald in one hand and the dagger in the other.\n\nWhen the chill hit his gut, he ducked and slid underneath a black and gray mass that threw itself at his head, then twisted away from a feeble lightning blast. All around him, he could hear the angry mutters of witches and warlocks fighting to recover, to stand up and stop him. Wild magic swirled around the yard, picking up both people and debris and tossing them about. He hopped over a spiraling whirlwind that tried to take him off his feet and slapped his hand down on the sundial.\n\nFeeling the magic of the house connect with him, he gave it a quick twist. The magic radiated outward, and the lions standing at the front of the house blazed to life, turning their heads to survey the intruders still on his lawn as they stepped down from their perches.\n\n\"Mr. Radley.\" It was Amir who spoke, standing up several feet away to brush the dust from his dark suit. Part of his face was gone, smeared behind him like a poorly painted shadow. His body was still reassembling itself, coagulating like oil. \"I am so very tired of seeing your face. I'm tired of dealing with you, with your creatures, and...\" he spat out a rock and coughed up a few blades of grass. His body had accidentally pulled bits of debris inside of him, and he was now gagging on what looked like a shingle that was too large to pull out of his mouth.\n\n\"You should run.\" Mike slid the emerald into his pocket and stepped around the dial, raising his dagger. \"Because if the lions don't get you, I will.\"\n\nAmir fixed MIke with a look of pure hatred, then bent over and vomited, frantically trying to break apart the chunk of housing lodged in his mouth. Screams of terror filled the yard as the lions turned into blazing balls of light and attacked, tearing their way through the intruders.\n\nThey scattered. Amir backed away from Mike, summoning a shield of light that a lion bounced off of, knocking him to the ground. A pair of Society members were reduced to ashes by the lions, and Amir was grabbed by Elizabeth, who pulled him by the shoulder. She fixed Mike with a fierce gaze and opened her mouth to say something.\n\n\"Yeah, yeah, you'll be back.\" Mike told her. He tucked the dagger into its sheath and crossed his arms. \"And I'll be waiting.\"\n\nA blast of lightning tore across the yard toward him, only to be deflected by a wall of stone summoned by Ratu. She summoned a massive flame of her own and casually tossed it toward those who were still escaping, many of whom were simply vaulting over the wall. In the distance, he heard car doors slam and tires squeal on the pavement as they left.\n\n\"Thanks for the assist,\" he told Ratu, trying not to let his voice shake. Now that they were gone, he could feel the adrenaline in his system depleting, leaving him a nervous wreck.\n\n\"Anytime.\" She smirked at him, then looked across the yard. \"Though I won't take credit for this. This was all her.\"\n\n\"Yeah.\" Drops of water hit his face and he looked up at the misty cloud that had formed overhead. Drops of rain suffused with light now fell on his yard, the wild magic slowly fading away into the environment. Looking down, he saw what was left of a tarot card. He lifted it up, revealing that it was now blank.\n\nSurveying the ruins of his yard, he thought It resembled a junkyard now, the sidewalk torn apart and a pair of mangled vehicles by the entrance. Where the grass hadn't been set aflame, it had been bogged down in mud or frost. Behind him, Tink was busy helping Abella free herself from the ruins of the front porch while Ratu used pillars of stone to lift the roof off of them.\n\nHe let out a sigh, water running down his face. It was cold and miserable out, and the rain wasn't helping. Yuki lay face down, her fingers curling and uncurling in the dirt and her breath coming in painful wheezes. He knelt down and tapped her on the top of her head.\n\n\"Hey. Are you okay?\"\n\nShe turned her head and laughed, then coughed violently, expelling a concerning amount of blood.\n\n\"Looks like you get to be the Caretaker after all.\" Her voice was slurred. He shifted positions to see her face, and what little light remained in her eye was fading fast. \"This is what she wanted. This is what the house wants. It's time that I... go.\"\n\n\"Well, it isn't what I want.\" He sat down next to her and stroked her hair without thinking about it. It was almost instinctual, like a long forgotten memory. \"You seem to have me confused with somebody else.\"\n\n\"Yeah, right.\" Yuki muttered something in japanese that he couldn't hear. \"I won't be your problem much longer.\"\n\n\"What about the others? The ones you turned to stone.\"\n\nThe silence was deafening, but eventually Yuki took a deep breath and held out her hand. In it was a broken stone the shape and size of an eyeball.\n\n\"Use... you can use...\" she coughed again, her body trembling. Mike rolled her over onto her back and pulled her torso onto his lap. She gasped in pain, then coughed some more, but seemed to be breath much easier. She set the shattered gorgon's eye at her side. \"You can reverse...\"\n\n\"Ratu?\" He looked over his shoulder to see the naga approaching. Ratu knelt down next to them and the look on her face told Mike what she thought the chances were of Yuki surviving. He handed her the gorgon's eye.\n\n\"She says we can use this to reverse the stone spell.\"\n\n\"Maybe.\" Ratu pushed the pieces together and a smile crossed her face. \"Thank the gods, I can easily isolate this part of the enchantment. Childsplay for someone like me.\"\n\nYuki muttered something, and then coughed.\n\n\"What was that?\" Mike asked. Daisy appeared over his shoulder, landing on Yuki's shoulder. She threw her arms around the kitsune's neck, tears appearing on her tiny face.\n\n\"Make sure... Beth...\" she coughed again and trembled in his arms. \"The demon took her. Turned her to... stone, but... she is still there...\"\n\nRatu put her hand on Mike's shoulder and shook her head. It wouldn't be long now. He looked down at the woman in his arms and watched her skin peel away, revealing the thick fur beneath. Her human form was beginning to relax, her consciousness sliding away from her. Each breath was now a painful gift, and he looked in nervousness at the dark figure standing by the gate, wondering if he would saunter over to collect.\n\nAs much as he was a pawn in a game he was unaware of, so was Yuki. Even though she had tried to kill him, she had given her life for the house, fighting with all her strength to protect it. She really had caused him so much trouble, had nearly killed him and all of the others.\n\nStill, this could very much be him some day. How many decisions had he made that felt wrong, decisions that affected others? The woman on the ground before him was heartbroken, devastated, yet he knew from her journals that she loved this home more than anything. In truth, the guilt lie primarily at Emily's feet, the past defining who Yuki had become.\n\nThe emerald was in his hand, suddenly ablaze with light. It wasn't even a conscious thought, but he held it above her now, contemplating its deep facets. The energy inside of it pulsed, sucking the sound out of the air and making the ground vibrate beneath him. It was essentially a wish, just waiting to be unleashed on the world.\n\n\"Are you sure?\" Ratu asked. \"With this, you could have almost anything.\"\n\nA grim smile crossed his face. \"I'm not sure of a lot of things, but this is what's right.\"\n\nRatu nodded, then looked down at the kitsune. \"Then you'd better hurry.\"\n\n\"Emily,\" Yuki whispered, opening her eye. Her gaze fixed itself on the emerald. \"Where... where did you...\"\n\nMagic. It was about passion. Intent. It wasn't something he could command, but it was something he could direct. The dying woman in his arms needed more than just her injuries fixed, she deserved peace, a second chance at a life that had been taken from her. His own magic whirled through his limbs in response to his will, creeping through his veins like ice.\n\nTouching the emerald to Yuki's forehead, he leaned forward and closed his eyes, opening his mind and heart, looking past her actions and her mistakes. She wasn't just Emily's former lover, she was also a friend to the house, a writer of poetry, someone who had been hurt so badly on a spiritual level that she had been forced to lash out.\n\nShe was a lot like him. He had been given a chance by the house, an opportunity to improve and to heal. As badly as he might want something else in the world, he couldn't bear to know that someone else withstood the same kind of torment he had, a pain so deep that they would rip it free with their bare hands if they could. The world was often a cruel place, but now, in this moment, he would tolerate that cruelty no longer.\n\nThe air had gone still, the universe hungrily anticipating his words, ready to bend creation for him.\n\n\"I want you to be whole again,\" he whispered, willing it to be so. The emerald shimmered in his hands, growing bright enough that he could see its glow through his own eyelids. He squinted and watched in amazement as it started spinning in place, sending spirals of light over Yuki's body.\n\nRatu grabbed Mike by the shoulders and pulled him away as Yuki's body levitated into the air. She floated in place as the light filtered through her, and he could see inky black shadows being cast from her bloodied form into the ground. The darkness slid away from her, only to be caught in the direct light of the emerald and burned away into nothingness.\n\nHe and Ratu turned away from the light, and even Tink had turned to look away as well. It became a tiny star in his front yard, chasing away the remaining shadows. An eerie, high-pitched whine filled the air, and then... silence.\n\nHe turned back to see Yuki lying on her back, her eyes closed as if sleeping. Her wounds were gone, and her tails were fanned out as if she had simply sprawled out to take a nap. Her pale flesh was darker, as if blood had finally been allowed to flow throughout her body.\n\nKneeling down, he touched her shoulder. Daisy landed on Yuki's chest, her eyes wide with surprise.\n\n\"Yuki? Are you okay?\"\n\nShe opened her eyes, blinking rapidly. The sinister red glow was gone, revealing pupils that were the same shade as the emerald.\n\nThe emerald. He looked around for it, but it had vanished. \"Where did it go?\" he asked Ratu.\n\n\"Back where it came from,\" Yuki answered, sitting up. She tentatively touched her right eye, a smile crossing her face and she let out a laugh which turned into a sob. Tears leaked from both eyes now as she ran her fingers across her face, feeling the regenerated flesh and she turned her gaze toward Mike. \"You. You did this? Why?\"\n\n\"Um, yeah.\" He shrugged. \"I didn't want you to die, not after you worked so hard to save everyone.\"\n\n\"But I...\" She looked over his shoulder at the house. \"I tried to kill you. And the others...\"\n\nHe waved his hand dismissively. \"They can be fixed, but that's a discussion for later. How do you feel? You look better, but are you...okay?\" He leaned back. \"If you're feeling particularly murderous, I would at least like a heads-up this time.\"\n\n\"I'm...\" Her face turned red. \"I'm really sorry. About everything.\"\n\nHe nodded and held out his hand. \"I am too. I'm sorry about what Emily did. We read some of your journals and sort of know what happened between you two. Nobody should ever have to go through that.\"\n\n\"I don't understand. How can you be so forgiving?\"\n\n\"Honestly? I guess I'm not sure. I know a succubus you could talk it over with, if she'd ever stick around long enough. That's a discussion we can have later.\" He held out a hand. \"We have a lot to talk about, but before we go any further, let's talk about my friend, Beth. What was this about a demon?\"\n\nYuki nodded enthusiastically, taking his hand. \"I'll tell you everything I know. I promise.\"\n\n---\n\nWhew, so much happening at once!\n\nI had a lot of fun writing this one and planning Mike's return. Next chapter will have a Yuki/Mike team up in their attempt to save Beth from her dreadful fate, and will also set the stage for the explosive conclusion to Book Three! I'll see you there!\n\nNote: I had several people ask this after the last chapter. Remember that I always edit my bio on the day I submit to Literotica, but there is always a delay of a few days before it goes live on the site (which is out of my control). Just FYI :)"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-40"
}