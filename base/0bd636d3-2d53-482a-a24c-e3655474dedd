{
    "title": "Weekend Getaway",
    "pages": [
        "This story features the cast of my Spring Break stories and we're going on another vacation! If you haven't read those stories, you might want to check them out, but this story will be able to stand on its own. As a word of warning, it's a long story that features polyamory and romance.\n\nI received lots of positive feedback on the Spring Break tales and I appreciate everyone who took the time to leave a comment or send me an email. If you enjoy this story, please vote and I would love to hear from you, too.\n\nI'd also like to thank michchick98 for being such a great editor.\n\n************************\n\nWhen you meet her, the second things you notice about Melinda are her eyes.\n\nThey're piercing. The deepest blue, they seem to bore into you. Her eyes see through all pretense. They show her compassion and her wisdom. And her love.\n\nI lost myself in those eyes. They radiated a soft, post-coital glow. We held each other as morning's early rays shone into our bedroom. It was quiet. Peaceful. The perfect Blue Ridge day.\n\nShe cradled me in her arms, our bodies pressed together. Her hands ran absently up and down my back. Her soft featherlight touch left a trail of goosebumps on my skin.\n\nI glanced over at the clock and groaned inwardly. Time to go.\n\nLeaning in, I kissed Melinda one more time.\n\n\"Down boy!\" she giggled, rolling me off her. \"We have to get up.\"\n\n\"That's what I'm doing,\" I replied with a sly smile, humping up against her.\n\n\"You've already had it once this morning.\" Melinda slipped out of my grasp. \"Save some for the trip.\"\n\nShe went into the bathroom of our master suite, wiggling her backside at me teasingly. I followed her into the large stand-up shower that could easily accommodate all four of us; she already had the water running. It washed over us and cleansed away the previous night's exertions.\n\nReaching around, I cupped her round breasts and pressed against her ass. I rolled her erect nipples in my fingers.\n\n\"I love you,\" I whispered in her ear.\n\n\"You're only saying that because you want something.\"\n\n\"And?\" I kissed Melinda on the back of the neck. In that one spot that makes her skin crawl.<br/>\n\n\"Mmmmm . . . I love you, too.\"\n\nShe put her hands against the wall, leaned over and gave in to the inevitable.\n\n************************\n\nIt was eleven years after our magical week at Disney World.\n\nMelinda, Leah, Katie and I still live in our home outside Asheville, NC. Melinda's and my daughter Kaylee is five now; her brother Bryan is two. There is another pair of other kids in our house now; Katie and Leah adopted Gwendollyn and Gabrielle, gorgeous twins from Vietnam who are also two.\n\nKatie, the youngest of our foursome, was about to turn 30. Or, as we say in our house: she was about to have her second annual 29<sup>th</sup> birthday celebration. We mulled around several different vacation ideas and finally decided to rent a cabin out in the woods for a long weekend and just be together. After all, the three girls all worked while I stayed home and raised our children, so we didn't get a lot of time for just the four of us alone, and that's what Katie said she wanted for her birthday.\n\nWe searched the internet, made some calls, found a cabin in a little community north of Atlanta and decided to go there for a long weekend. Sounds funny, doesn't it? We live in the Blue Ridge Mountains, in some of the most beautiful country on God's entire creation, and we're going to Georgia. Truthfully, we just wanted a change of scenery. Plus it was only about three hours away, so it was close enough we could get back if there were an emergency, but far enough away that we couldn't just get up and go home.\n\nTo help with the kids, Melinda's folks and Katie's dad came in. Not long after Katie and Leah's \"wedding\", Katie's parents divorced, so he spends a lot of time with us. Katie and her mom haven't spoken since and it tears her apart. \n\nDespite all the best efforts of those around her, Katie's mom can't get it through her head that her daughter is in love with another woman and that Leah isn't going away. Katie sends her cards on her birthday, presents at Christmas and flowers on Mother's Day. Sometimes the cards and packages come back unopened. Sometimes she never hears a peep. And every now and then, she gets a terse note berating her for her lifestyle choices. \n\nI guess that's what passes for \"thank you\" in her mom's world.\n\nA couple of years ago, Katie went home to Jacksonville. Her sister let her in the house, but her mom locked herself in the bedroom and wouldn't come out. That's when Katie's dad left.\n\nHe said that he wouldn't stand for her treating their daughter like something less than a person. Like most parents, he doesn't like all the choices his kids have made over the years, but he loves them just the same. He has voiced his reservations about our living arrangements several times, but he is never irrational and never does it in front of other people or the children. He still lives in Jacksonville, although I think when he retires he's going to move closer to us and Katie's other sister in Atlanta.\n\nMelinda's folks came to terms with their daughter's choices years ago and are openly supportive of the way we live. Granted that it's a little unorthodox, but they say that we're the ones who have to do all the hard work, and as long as their daughter is happy, they're happy. Plus, it means extra grandchildren for them to spoil. \n\nOf course, her dad did threaten me with unimaginable retribution if I treated his daughter badly, but what father doesn't? I'll tell you this: If any boy breaks one of my little girls's hearts, before I am done, he will beg me to allow him to die. \n\nMy folks and Leah's parents have been friends since we were in middle school. We did a lot of the same activities so they spent a lot of time together at Brain Brawl tournaments, school dances and band concerts. I think they consider themselves in-laws, even though Leah and I aren't actually married. At first none of them were thrilled with our lifestyle, if only because it was so different. They came around, though; after all, what choice did they have? Both Leah and I have a \"if you don't like it, go to hell\" attitude and our parents all know it. Besides, they like each other, and they like all of the partners in our relationship.\n\nMelinda is usually the first one out of bed, but not with her dad in. At least she comes by it honestly. We toweled off and got dressed. Then I went into the kitchen. She went upstairs.\n\nHer father was up and had a pot of coffee going.\n\n\"When are you heading out?\" he asked, looking up from the paper.\n\n\"I'd like to be on the road by nine.\" I scrounged around looking for something to eat.\n\n\"How long's the drive?\"\n\n\"Mapquest says it's three and a half hours,\" I got the eggs and bacon out of the fridge. \"But the way Leah drives, I'd say we'll be there by noon . . . Unless the girls find an outlet mall on the way.\"\n\n\"God help you,\" he chuckled. \"At least you're don't have to go anywhere near 285.\"\n\nGrowing up in the south, the joke is that when you die, the way to Heaven goes through Atlanta, with a traffic jam on I-75 and a delayed connection out of the airport.\n\nI heard water running from the other end of the house. It sounded like Katie and Leah were up.\n\n\"Are you guys going to be okay with the kids?\" I asked.\n\n\"If by 'okay' you mean, 'Are we going to spoil them rotten as revenge for all the things Melinda did when she was young?', then the answer is yes,\" he said, a mischievous glint in his eye.\n\n\"Just no cotton candy and Mountain Dew together this time, please,\" I patted him on the shoulder. \n\nThe patter of little feet coming down the steps preceded Kaylee bursting into the kitchen.\n\n\"Grandad!\" She flung herself into Melinda's father's arms. Melinda and her mom followed, the latter holding a still-sleepy Bryan in her arms.\n\n\"Are you all packed?\" her mom gave me a quick kiss on the cheek.\n\nI grinned. \"I hope so. If it's not in a suitcase, we either don't need it or we'll buy another one.\"\n\n\"Ready for five days of peace and quiet?\" She had become quite adept at holding one of her grandchildren while still performing all of the other things she regularly did, like pouring her morning cup of coffee.\n\n\"The real question is are you guys and Poppy ready for five days of the rugrats?\" I said, referring to Katie's dad. Around our house, all our parents lost their real names. My folks were Grandma and Grandpa. Melinda's parents were Nan-nan and Grandad. Leah's folks were Granny and Papaw.\n\n\"We'll be fine,\" Nan-nan replied with a wink. \"They'll be spoiled rotten when you get back.\"\n\n\"They're spoiled rotten now,\" Melinda said with a grin. \"Where's Poppy?\" \n\n\"Probably sleeping in with the girls.\" I handed her a mug of coffee.\n\nUnlike most little kids, Gwen and Gabby are like Leah. That is, they like to sleep in late. Of course, they also like to stay up late, but even when Leah and Katie started putting them down to bed early, they still slept in.\n\nWhen we built the house, we had just bought a couple of acres of land. We have a gorgeous view of the Blue Ridge Mountains and more space than we could possibly need. I have a cousin who is an architect and although he didn't design our house (he specialises in commercial storage buildings), he hooked us up with another guy in his firm who was absolutely first rate.\n\nWe have two master suites downstairs, one on each end of the house. Melinda and I occupy one, Katie and Leah the other. In between, we have a kitchen with a dining area, a library/home office, a family room, a formal dining room and a small utility room with a washer and. Down one level from that, we have a four-car garage that lets out around the slope along the back of the house, a game room for grown-ups offering billiards and ping-pong, a room for our exercise equipment, a home theater room for our movie nights and a big space for the kids and their toys. \n\nHidden in the back, just off the exercise room is a door that leads to our other \"adult\" play room. We keep the door locked and thank God we have a couple more years to come up with a plausible explanation for the kids as to why they can't go in there.\n\nUpstairs are a small room for the kids's TV and some more toys, four bedrooms and a hall closet with another washer and dryer in it. No sense in hauling all the kids's stuff up and down the steps if we don't have to, right?\n\nOn top of that, we have another small house around back. In the original design, it was called a pool house, but we converted it into a workshop and maintenance garage. There's a woodworking shop on one side and a hydraulic lift for my latest car project on the other. There's also a small studio apartment with a kitchenette on the second floor. \n\nI don't think anyone has ever spent the night out there and I jokingly say that's where the girls are going to send me once the kids are grown and they want to be rid of me. It's my little sanctuary for the few occasions I get to escape from diapers, Disney Princesses and laundry. Of course, it's also a nice place for trysts when some combination of the four of us wants to sneak away for a little while.\n\nKaylee has her own room, as does Bryan. Gwen and Gabby still share a room, although they will probably each get their own if/when they get tired of being so close to each other's space. The fourth bedroom is our guest room, which was occupied by Katie's dad for now. \n\nMelinda's folks had spent the night on the pull-out sofa downstairs, but they would be moving into our room for the week when we left for our vacation.\n\nLeah and Katie emerged from their room. Katie gave everyone a good morning kiss while Leah headed upstairs to see how the girls were doing.\n\nI fixed a quick and light breakfast while Melinda double-checked everything we packed and Katie played with the kids. Leah and Katie's dad came down a short time later each holding one of the twins.\n\n\"Poppy!\" Kaylee hopped out of Grandad's lap and rushed Katie's father. He shifted Gabi to one arm and scooped Kaylee up in the other, planting a big kiss on her cheek, before settling down at the table for a cup of coffee and some toast.\n\nMelinda and I went over the checklist again. Camera. Butt plugs. Cell phone chargers. Medications. Blindfolds. Credit cards. Laptop. Kentucky jelly. Clothes. Strap-on harness. All good to go.\n\nI whipped up a big plate of scrambled eggs and bacon. Melinda's mom got out the Bisquick and was on waffle duty. The girls sat down with the kids and made sure everyone got fed. I've never been much of a breakfast person, but I did manage to sneak a few strips of bacon and half a waffle with some yogurt on top.\n\n\"Don't worry about the dishes,\" Melinda's mom told me. \"Get out of here.\"\n\n\"Are you sure?\" \n\n\"Yes,\" she said, her voice firm and playful at the same time. \"Kaylee loves to help out with the dishes, don't you, honey?\"\n\n\"Mmm-hmmm,\" my little girl smiled. \"When are you going to come home, Daddy?\"\n\n\"Next Monday,\" I took her in my arms and twirled her around the kitchen. \"Can you do something for me? I need you to be very good for Nan-nan, Grandad and Poppy . . . You need to be the big sister for Bryan, Gwen and Gabi. Can you do that for me?\"\n\n\"Yes,\" she said in her big-girl voice.\n\n\"Good,\" I gave her one more kiss then picked up her brother.\n\n\"I share with you,\" he said reaching for a strip of bacon off my plate. He tore it in half, stuffed one piece in his mouth and then handed me the other. \"Luff you, Da-dee.\"\n\nI laughed and gave him a big hug and a kiss. \"I love you, too, buddy.\"\n\n\"Ready to go?\" Poppy asked me.\n\nThe girls and I cycled through all the kids, giving them some hugs and kisses, then with the grandparents distracting them, we gathered all our stuff and went to load up the Odyssey. I was putting the last of the suitcases in the back when I heard Kaylee yelling for me from the top of the steps.\n\nShe waved and blew me a kiss. I caught it and put it to my puckered lips. She shut the door and went back to her grandparents, knowing they were going to spend the next five days spoiling her and her siblings with attention and love.\n\nWe left a number where we could be contacted on the fridge along with all the important numbers for the kids. This was the first time all four of us had gone out together since Gwen and Gabi's \"gotcha day\", so the girls were a little anxious about leaving them alone. But we knew our folks had more experience parenting than the rest of us, and soon we were on the road to north Georgia.\n\nLeah was driving. She's the most prone to motion sickness so she likes to sit in the driver's seat. It helps she has the best temperament for long road trips. She drives a little faster than the average person, but she's very safe and cautious at the same time. I was navigating; in my daily life, I spend enough time hauling the kids around and given the choice, I'd rather not drive. \n\nMelinda and Katie were in the captain's chairs in the middle of the van. They were pouring over a map of some outlet malls that weren't far from the cabin like a pair of Rangers planning an airborne assault.\n\nWe talked idly about the kind of things parents talk about. I snapped a couple of pictures on the digital camera. It's during moments like that when I realize just how lucky I am. When I was 18, if someone had told me that one day I would be a stay-at-home dad, drive a minivan and love three women and four children more than life itself, I'd have told them they were certifiably insane.\n\nYet there I was, riding along with \"my\" three girls, counting my blessings and marveling at just how beautiful they all are.\n\nEach is different, and I think that's what makes us work together. We each seem to compliment the others. Melinda is the most level-headed. Katie is the most passionate. Leah is the smartest and most creative. I'm just there to do the heavy lifting.\n\nDon't get the idea that our lives are idyllic or that everything is just perfect for us, but we've found that we communicate well and that ultimately our love for each other trumps the petty arguments and hurt feelings. \n\n(And then we get to have make-up sex! Yea!)\n\nThe one thing all the girls share is a seemingly insatiable sex drive. Maybe it's because the demands of parenthood have cut into our intimate time together. Or maybe it's because they're all in their thirties and are hitting their sexual \"plateau\". Note that it's a plateau, not a peak; Melinda says all three of them will be going strong for another ten to fifteen years.\n\nMe? I think my high water mark was during that week at Disney World. Now I can barely keep up with them. I'm not complaining, mind you, but I swear the girls are going to kill me. At least I'll die with a smile on my face. \n\nIt's also a good thing they enjoy each other as much as they do me.\n\nThe ride down started out uneventful enough. We got on the interstate until we got on US 23 south. \n\nThis is what traveling is all about: two and four lane highways. Mom and pop restaurants, local hardware stores and all sorts of Americana lining the roadways; not the fast food chains and truckstops and Super Wal-Marts that line the interstates. It's very Route-66 romantic.\n\n(I was going to make an analogy to the movie Cars but that would only prove to you, dear reader, how my life is dominated by two and five year-olds! It's a wonder I can still construct a sentence that doesn't involve making baby noises.)\n\nIt is my dream to take the girls and the kids on a road trip across the country driving just like this: US highways, local restaurants and bed-and-breakfasts. Of course, with four kids and four adults, we'll need an RV, but that's okay. Maybe drive the Pacific Coast Highway from Mexico to Canada or US-1 from Bar Harbor to Key West. \n\nWe'd have to wait until the kids were older, of course, but I think that would be a blast. Either that, or we'd be ready to strangle each other after four hours on the road.\n\nAnyway, Leah and I were talking in the front seats. She had just gotten a promotion at work and we were plotting how to spend the extra money she was making. She wanted to put it away for the kids's college funds; I said she should buy herself a bunch of shoes and a new car to replace the older model she normally drove. Go figure.\n\nWhat we didn't notice was that Katie and Melinda had fallen silent. Or rather, they had been reduced to moans and delighted squeals.\n\n\"Your Accord is six years old,\" I told my high school friend, oblivious to the two in the back. \"I know it's not falling apart, but if you want that new Lexus or one of those hybrids, you should get one.\"\n\n\"I know . . . It's just . . .\" Then Leah glanced up into the rear-view mirror. \"Hey! What the hell are you two doing?\"\n\nI heard Katie inhale sharply. \"I'm, ah . . . oh, fuck . . . getting one of my . . . Yes! Right there! . . . birthday presents . . .\"\n\nTurning, I saw both of the captain's chairs were empty.\n\nLeah's wife was in the back seat, her shapely legs resting on the headrests of the seats in front of her. Her eyes were shut. She bit her bottom lip to keep from crying out.\n\n\"We were wondering . . . oh, Jesus! . . . when you would . . . OH! . . . notice,\" Katie purred.\n\nMelinda was on her knees between the middle row seats. Her face was buried in between Katie's thighs. Our redheaded lover braced herself with one hand against the back seat. In the other hand, Katie had a handful of Melinda's hair, pulling the blonde's mouth into her neatly trimmed pussy.\n\n\"That's it . . . yes! . . . Eat that pussy,\" she rambled. \"You are so fucking good . . .\"\n\nIt's a good thing we got tinted windows on the van, huh?\n\nI looked on, entranced, as my wife went down on Katie. Even though I had been watching my lovers with each other for the past eleven years, the sight still turns me on. The girls get along famously, and not just in bed.",
        "But their sexual chemistry is only enhanced by their love for each other. Leah has often told me that Melinda has the most natural talent of the four of us. It's because she is very empathic. She senses what her lovers need and can read our desires as a second nature.\n\nShe knows our weak spots, she knows when to lead us on and when to send us over the edge.\n\nPlus, she has an amazing tongue. And she's certainly not afraid to use it.\n\nI couldn't see her using that tongue, but I could see its effects. Katie's expression was one of pure bliss. She bucked her hips into Melinda's face.\n\nMy attention was so focused on the two in the back, I jumped when Leah reached over and touched my leg.\n\n\"Take it out,\" she whispered.\n\nAs if I had to be told twice!\n\nI unbuckled my belt just as Leah opened my zipper. I was already hard.\n\n\"Damn, you're ready to go!\"\n\n\"Stroke me,\" I breathed. \n\nMy gaze fell on Melinda's voluptuous hips. My cock grew longer with each of Leah's skilled pulls.\n\n\"You know you want to,\" Leah said softly.\n\n\"I'll be right back,\" I promised, but not before reaching over to pinch one of our driver's erect nipples.\n\nUnbuckling my seatbelt, I lifted the armrest and practically vaulted into the back of the minivan.\n\nMelinda purred as I ran my hands over her round ass. I lifted her skirt and found that she wasn't wearing any panties. Two of my fingers slipped into her easily.\n\nKatie's eyes were hooded over with pleasure as my wife continued to lick her pussy. She wasn't using her hands, just her tongue and lips.\n\nI met my redheaded lover's gaze. She smiled at me and then suddenly gasped, arching her back and thrusting her pussy forward into Melinda's able mouth.\n\n\"Fuckin' yeah!\"\n\n\"Someone liked that,\" Leah smiled from the driver's seat. I looked over my shoulder long enough to see her blow me a kiss.\n\nWith one hand, I pushed my khakis down. I got on my knees behind Melinda and rubbed the head of my cock against her slit. It was instantly coated with her juice.\n\nMelinda paused long enough to let out a low moan. \"Fuck me.\"\n\nI rubbed my head against her pussy a couple of times and then pushed forward.\n\n\"Don't stop eating that pussy,\" Katie moaned from the back seat. \"If your husband cums before I do, you're going to be my bitch all weekend!\"\n\nSmiling to myself, I grabbed Melinda by the hips and thrust my cock violently into her. She let out a surprised gasp.\n\n\"Don't stop!\" Katie warned. There was a wicked twinkle in her eyes.\n\nI picked up my pace, trying my best to distract my wife from the job she was doing on our lover. \n\nKatie's eyes rolled up into her head. Melinda must have done that thing with her tongue that Leah says is amazing.\n\nThere was no way I was going to cum so soon, but I did my best to make Melinda think I was close. I'm no dummy. As much as I love the other girls, my wife is my first true love and if I shot off before Katie got hers, there would be hell to pay in my bedroom.\n\nBesides, I wanted to make this fuck last as long as I could.\n\nBuilding a steady rhythm, I moved my cock in and out of Melinda's slick pussy. Katie was writhing around on the back seat.\n\nHer teeth were clenched. Her breaths came shorter.\n\n\"Goddam! . . . Yes! YES!\" Katie cried out again. Her mouth fell open.\n\nI pounded into Melinda, watching Katie's face as the cum hit her. Her red hair had fallen over her eyes. \n\nMelinda's head bobbed in her lap. Pushing forward one last time, I buried my cock inside my wife and it began to pulse.\n\nMy hands gripped her ass as I held my sex inside her. All the while, Melinda continued to work over the girl in the back seat with her mouth.\n\nI think Katie's screams were as exciting to me as being inside Melinda. \n\nAfter a few moments, the only sounds in the van were the ambient road noise and some low purring from the far back seat. Melinda was still between Katie's legs, but she was only kissing our lover gently. Bringing her down slowly from her orgasm.\n\nKatie's eyes were closed. Her breath was ragged.\n\nSmiling to myself, I smacked Melinda on the backside playfully, then pulled my limp cock out of her pussy. I stood as best I could in the minivan, drew my pants up and then climbed back into the front seat.\n\nLeah looked over at me, desire and a little bit of jealousy in her eyes. \n\nGlancing in to the back of the van, I saw Melinda get off her knees and crawl into the seat with Katie. They were whispering softly to each other between tender kisses.\n\nOur vacation had started with a bang.\n\nThis was going to be a great weekend!\n\n************************\n\nThe cabin was every bit as great as promised. Actually the term \"cabin\" is a little misleading. It was really a 3,200 square foot luxury house out in the woods. It had a rustic look to it, but all the conveniences of home. There were five bedrooms, four full baths, two half-baths, a great room with a fireplace, a wraparound deck and a kitchen that was bigger than my first apartment.\n\nLocated in a gated community of similar vacation homes, it was ideal for what we wanted: five days of peace and solitude. There was a grocery store up the road, outlet malls not far away and the closest neighbour was about a quarter mile away.\n\nWe unloaded the van and got settled in. There were two master suites in this house. Katie and Leah moved their stuff into the larger one. It had a stand-up shower, large jacuzzi tub and a bed that would fit the four of us if we didn't mind being friendly (which we didn't).\n\nTo have enough room, Melinda and I set our stuff in the other suite, which was a little smaller, but that didn't matter. We'd probably all be hopping from bed to bed all weekend anyway.\n\nMelinda and Leah began unpacking our things while Katie and I went to the store to get groceries. It was pretty fancy for being out in the woods, but the luxury vacationers created a market for high-end items not normally found at the typical IGA. We bought enough food to last us a few days and then headed back to the house.\n\nIt was mid-March and the weather was a little cool, but he sun was out, making it feel just right.\n\nI drove the van back. Katie and I chatted idly, holding hands.\n\nEach of us was taking a night to cook. This night (Thursday), I took my turn. At the store, I had picked up some chicken and pasta. As I worked in the kitchen, the girls lounged around on the couches, each taking a turn at heckling me or stopping by for a taste.\n\nThe four of us enjoyed each other's company. Though we talked about the kids, we were happy to have a conversation that didn't involve Dora the Explorer or the Wiggles.\n\nWe ate dinner in front of the fireplace in the great room. We threw the pillows off the couches and sat on the floor. Our bodies intertwined. Not sexually, but playfully. We switched often, just wanting to be close to each other.\n\n\"I've got to get the kitchen cleaned up,\" I said, patting Katie on the hip. She pulled me close and stole a kiss.\n\n\"Hey, watch it!\" Leah called, swatting at her wife's backside. \"It's not your birthday yet!\"\n\nKatie pouted. \"You're really going to make me go a week without any cock?\"\n\n\"I've got a cock for you,\" the brunette said teasingly.\n\nWith our parents in, we tried to keep our bed-swapping to a minimum and it really had been almost a week since I had either Leah or Katie. I made a mental note to give both girls some extra attention this weekend.\n\n\"Mmmmm,\" Katie purred. \"I think you need to get ready for me.\"\n\n\"Go on, you two,\" Melinda said, getting up. I looked over at the clock on the stove. It was later than I had thought. \"We'll clean up and see you in the morning.\"\n\nThe other two disappeared into the main bedroom, their hands pawing at each other. Melinda washed up most of the dishes while I played with her butt, groped her wondrous breasts and pretended like I was helping out. \n\nWe turned out all the lights and went into the second bedroom. We undressed; neither of us bothered to put on any pajamas. Instead we brushed our teeth and slipped into the comfortable bed.\n\nI held my wife close. Her skin felt so soft.\n\n\"Make love to me,\" she whispered.\n\nMy lips went to hers and we kissed tenderly. I squeezed one of her breasts gently, then moved my hands lower down her body.\n\n\"No,\" she said quietly, when my fingertips brushed the lips of her pussy. She was already wet. \"I want you inside me.\"\n\nA hand was at the back of my neck and she pulled me to her. I got up on my knees and mounted her.\n\nMelinda's other hand guided the head of my cock between her legs. I slid into her easily.\n\n\"I love you,\" she whispered as I pushed forward gently until I bottomed out.\n\nHer arms were around me, pulling me close. My lips went to the side of her neck.\n\nWe made love gently. There are so many things I love about my wife, I don't know where to begin.\n\nThe softness of her skin. Her full breasts pressed against me. Her warmth around my cock. The tenderness of her touch.\n\nNeither of us spoke. I built a steady rhythm, intent of giving her a deep, satisfying orgasm.\n\nI felt her hands reach around and pull my ass towards her. She squeezed me with her pussy, sending a tingle up and down my spine.\n\n\"Cum inside me,\" she whispered in my ear. \"Cum all over me, now.\"\n\nMelinda arched her back as I picked up my pace. I put a hand on her breast. She cried out softly when I pinched her nipple.\n\nSoft starlight shone through the windows, bathing her in a blueish glow. Her eyes were closed.\n\n\"Cum for me,\" she said softly.\n\nI pushed forward firmly and felt her pussy flood with a familiar warmth. Her mouth fell open. \"Oh, yes!\"\n\nMoaning softly, I felt my balls contract and I emptied myself into her. I collapsed into her arms and kissed her gently.\n\nHard and fast or slow and steady, Melinda and I liked to make love both ways, but lately, we enjoyed the long, unhurried lovemakings. It was even better when we didn't have to worry about keeping an ear on the baby monitor or a hurried quickie between trips to soccer practice and the doctor's.\n\nI started to roll off her, but she stopped me. Melinda held me for a long time. My flaccid cock was still inside her.\n\n\"I love you,\" she told me again. Her lips went to my neck and she nibbled softly on my skin.\n\nThe two of us cuddled for a long time. \n\nI savoured the softness of her skin and the warmth of her touch. Our bodies were covered with a thin sheen of sweat. I pulled away long enough to pull the top sheet over us.\n\n\"Do you miss this?\" she said quietly. \n\n\"Miss what?\"\n\n\"This . . . just you and me.\"\n\nWhile Melinda and I had a lot of sex (even for married couples), it was rarely just the two of us in a quiet, relaxed place. We managed a number of hot and heavy quickies and the occasional three or fourway with the other two girls. The morning, just as the sun was coming up, was our favourite time.\n\nYet when we were at home, one of us always had to keep an ear open for the kids, or it always seemed like we needed to go somewhere. And often, with four kids in the house, we valued sleep as much as any intimate time we might have. A couple of times, we actually paid a babysitter to watch the kids while we retreated into our basement \"adult\" play room, but we were always conscious of the other people in the house.\n\nHere, it was just the two of us.\n\nI started to say something, but stopped. What was she getting at?\n\n\"Sometimes,\" I whispered, still inside her. \"Do you?\"\n\nMelinda's hands ran up and down my back. \"I miss being able to call in to work, stay home and fuck like rabbits all day long. . . . I miss you and me going down to St. Augustine and making love on the balcony of that hotel on the beach. . .\"\n\nHer voice trailed off. I kissed her gently.\n\n\"We can't go back to that,\" she said after a minute, a hint of disappointment in her voice. \"We have kids and lovers and responsibilities and all that . . . Still, it would be nice, wouldn't it?\"\n\n\"It would,\" I agreed, but there was no regret in my voice.\n\nI don't think this is an uncommon experience for people. In many ways, our lives were in a rut. We had a routine. For Melinda, it involved getting up and going to the university and being the chair of the English department, publishing a paper or two and being a mommy to four wonderful children. For me, it was school and daycare and cleaning up around the house and picking the kids up and driving all over Creation to do the little things necessary to keep our household running. Spontaneity was generally gone from our lives. \n\nWe also had two housemates, two lovers, two best friends and two partners in our lives, too. They had needs and obligations, too, and they shared themselves with us as freely as we shared ourselves with them.\n\nAt the same time, I could also understand where Melinda was coming from. I don't think she envisioned her life turning out this way. I certainly didn't.\n\n\"But I wouldn't trade the lives we have for anything,\" I said gently. \"I have a wife and friends and kids I love more than anything. We have enough money and things to be comfortable. We're all healthy . . .\"\n\n\"I know,\" she said softly. Something was eating at her and she wasn't giving me much to work with. In that way, Melinda can be quite frustrating to deal with. She took a deep breath, held it and then let it out, the tension leaving her as well.\n\nWith one more kiss, I pulled out, my limp cock slick with our juices. I rolled over on my back and cradled Melinda in my arms. Her head rested on my shoulder and I wrapped her in a loving embrace.\n\n\"I love you, Melinda,\" I said again. \"I love you more than life itself.\"\n\nShe planted a tender kiss on my collarbone. \"I know . . . I love you, too.\"\n\nWe held each other for the rest of the night. \n\n************************\n\n\"So what's the plan for today?\" I asked Katie.\n\nMelinda was downstairs on the treadmill and Leah was still in bed. I put some honey-walnut cream cheese on a bagel and slid it over to my lover. Her hair was a mess. Her robe was tied loosely around the waist, but hung open enough to flash me teasing glimpses of her perky little breasts.\n\n\"I'm not sure,\" Katie replied before taking a bite.\n\nI finished off my own bagel and slid onto the barstool next to her. We talked idly for a little while. When we were finished, I reached over for her plate and semi-deviously slid my hand inside her robe.\n\nHer nipple hardened at my touch.\n\nI leaned over and took it in my mouth. She inhaled sharply. Her lips caressed my earlobe. \n\nKatie purred in my ear when I nibbled between her breasts.\n\nMy hand slid down her body, caressing her gently. She gasped as I reached between her legs. \n\nHer fingers pulled at my hair. I lifted my head and kissed her deeply. She spread her legs willingly as she moaned the words I did not want to hear. \"No . . . please . . .\"\n\n\"But it's your birthday,\" my lips traced a line up her neck to her ear.\n\n\"Leah said I have to wait,\" she said mournfully.\n\n\"She only said you had to wait until your birthday,\" I said, searching for any technicality I could use to get in between Katie's legs. \n\n\"Leah and Melinda said I had to wait until tonight,\" she corrected her earlier statement. There was more than a little regret in her voice. Hunger, too.\n\n\"They don't have to find out,\" I whispered in her ear. My hands reached under her the perfect globes of her ass and I pulled her close to me.\n\nKatie wrapped her legs around me and pulled me to her. I bit her collarbone gently and she cried out.\n\n\"No . . . not there,\" she said with a plaintive moan. I continued to roam her body with my mouth, lingering on all the sensitive parts. \"Leah and Melinda will kill us.\"\n\nInwardly, I smiled to myself. I held Katie for a few more moments. We kissed eagerly. I could feel the heat radiating from between her legs. I wanted to get her all worked up before I knew I had to put her down.\n\nIf Melinda and Leah said Katie had to wait until tonight, we had to wait. That didn't mean I was going to like it. Or that I wasn't going to have a little fun, too, but it did mean the part of me that wanted to throw the redhead down on the couch and fuck her brains out would have to get itself under control.\n\nStill holding Katie's lithe body in my arms, I walked over to the couch and set her on the arm. I pushed the robe off her shoulders and kissed my way back down to her breasts.\n\n\"If I can't fuck you, am I allowed to eat you out?\" I whispered.\n\nHer response was a long moment coming. Her eyes were glazed over with desire. \"No . . . I'm not even supposed to let you do this much . . . Leah said . . .\"\n\nShe gave out a surprised yelp when I pulled back and flipped her over onto her stomach. Katie tried to lift herself up, but I pushed her down on the couch. Her ass stuck up in the air.\n\nI began to grind on her wonderful ass, which was still covered by the robe. I had on a pair of sweatpants, but I'm sure she could feel my hard cock against her.\n\n\"Please stop,\" Katie groaned. She didn't sound like she meant the words, but I also knew that she wouldn't let me go much further.\n\nStill, I had to get in one last dig. I grabbed a handful of her long, auburn hair and pulled. She gasped.\n\nI pressed my cock against her ass and leaned over. My other hand reached around and pinched one of her nipples. I bit her earlobe. \n\n\"I am going to fuck your brains tonight,\" I promised.\n\n\"You're goddam right you are,\" she breathed.\n\nFor me, that was the point of no return. I either needed to stand up and clean up after my breakfast, or I was going to ravage my lover, who wasn't supposed to have me until after dinner. With a disappointed sigh, I pulled back.\n\nKatie lay over the arm of the couch for a moment and then got up and tried to straighten herself out. I went to the sink; every step was a struggle for me not to rush back over and have my way with her.\n\nLeah stumbled out of the bedroom a few minutes later. She ambled over to me and gave me a good-morning kiss. She looked over at her wife.\n\n\"What's got you all hot and bothered?\" Leah asked with a wry smile. \"You two haven't been naughty this morning have you?\"\n\n\"No,\" Katie replied, obviously frustrated.\n\nOur brunette lover walked over to her wife and kissed her. Katie's jaw dropped when Leah touched her. \n\n\"Someone's all wet,\" Leah purred. There was a mild&mdash;but mischievous&mdash;scolding in her tone. \"How'd you get this way, Katie?\"\n\n\"I don't know.\" That wasn't very convincing.\n\n\"Liar.\" Leah smacked Katie across the breasts, causing the other girl to cry out. She pushed the redhead down on the couch and pushed her legs apart. \n\nI craned my neck to get a good view. Katie threw her head back as Leah tongue lapped at her pussy. \n\nAfter a second, Leah stood up, leaving the other girl frustrated for the second time that morning.\n\n\"You're right . . . I guess you two haven't been bad,\" she said with a wink. \"I'm sorry for doubting you.\"\n\n\"So why can't I have sex with the birthday girl?\" I pouted once all the mess was put away.\n\n\"You can,\" Leah teased. \"Just not now.\"\n\nI smacked her across the backside. \"Maybe I should just fuck you instead.\"\n\nShe only laughed at me. \"Not now, tiger. I don't want to wear you out before tonight. We've got something big planned for you and Katie tonight.\"\n\n\"What would that be?\" Leah's wife asked.\n\n\"It's a surprise.\"\n\n\"Is torturing me part of her surprise?\"\n\n\"No, love,\" Leah replied with a laugh. \"That's just an added bonus.\"\n\nI swatted her on the backside one more time for good measure then went to fix my best friend something to eat. We sat around the kitchen and eventually Melinda came back upstairs. She set her iPod down on the counter and gave us each a kiss.\n\n\"So what do you guys want to do today?\" I asked. The beauty of being on this kind of vacation is that if you don't want to do anything, you don't have to.",
        "\"Well, I'm going to take a shower and then I thought we'd head over to the outlet mall over in Dawsonville,\" Melinda said, finishing off her cup of coffee.\n\n\"Is that the one with the Coach store?\" Leah asked.\n\n\"It is,\" Melinda replied. \"There's a map over there by the phone.\"\n\n\"That sounds good to me,\" Katie said. \n\nYou'll notice they didn't bother to include me in any discussion on the shopping.\n\n\"What time do we need to get back?\" Melinda asked.\n\nLeah thought for a second. Tonight was her night to cook. \"What time do we want to eat? Six? Six-thirty? If we get back by four, I should have enough time . . . if someone will help me.\"\n\nI smiled back at her. \"I don't know if I can . . . you know, going a whole week without a dose of Katie makes me too weak to cook . . .\"\n\n\"You are so full of shit,\" Melinda punched me playfully on the shoulder.\n\n\"Brown eyes, baby!\"\n\n\"He'll help you cook,\" my wife said. \"If he doesn't, maybe we'll give Katie her present without him.\"\n\nThe three girls shared a look and laughed.\n\nI followed Melinda into the shower and we washed each other off. There was no sex; apparently she was into the whole no-sex-until-after-dinner thing, too. (Drat!) But I always enjoy bathing with my girls. There's something intimate about being naked with someone you love. Cleaning them, being washed . . . it's not just erotic, but it's comforting and familiar at the same time.\n\nWe threw a bunch of bottled waters into a backpack and got in the van. I was driving this time; Leah was in the passenger's seat navigating. Actually, she just punched the mall's address into the GPS and I followed the arrow.\n\nThe day passed quickly. There were most of the usual outlet stores there: Williams-Sonoma, Nike, Tommy Hilfiger, Harry &amp; David et al. The girls wandered in and out of most of the stores leaving me to explore on my own. I figured they'd call me if they found something and needed it carried to the van. \n\nWe met at lunch time in the food court. The girls showed off their bargain finds. I had a bag with some new khakis and polo shirts in it. In another bag, I had a couple of matching outfits that would look really cute on the twins. One of the funny things about being a parent is that most of the stuff we found wasn't for us; it was for our kids.\n\nAfter lunch, the girls headed off to explore the other half of the complex, while I stowed our stuff away in the car. I was headed towards the Kay-Bee store when I heard someone call my name. \n\nI turned and saw a woman walking towards me. She was about my height and had a head of full, dark hair. I didn't recognise her but she seemed familiar. Her olive skin was perfectly toned and she had the deepest brown eyes.\n\n\"Hey, I thought that was you! What are you doing here?\" \n\nAs soon as the words were out of her mouth (and now that I could hear her better), I knew who she was. \"Mimi!\"\n\nShe reached out to me and we shared a tentative, but warm, hug.\n\n\"How have you been?\" I asked. We both took a second to give one another the elevator look (i.e.&mdash;up and down). The years had been very good to her.\n\n\"Wonderful! You haven't changed a bit. What have you been up to?\"\n\nYesmine went to high school with Leah and me. She got a scholarship to Princeton and last I checked was married to her high school sweetheart, Geoff Meadows. \n\n\"You know . . . married, kids, the usual,\" I said, even though \"the usual\" doesn't apply to us.\n\n\"How are you doing?\" I hadn't seen Mimi since the summer after graduation. We went on a couple of dates in high school, but nothing ever came of it.\n\nI looked her over. I could tell she was doing the same to me. Both of us were packing a few extra pounds (me more than her), but she was just as pretty as I had remembered.\n\n\"Funny seeing you here,\" she said.\n\n\"What are the chances?\" I replied with a smile.\n\n\"I missed you at the reunion.\" It may have just been me, but there seemed to be a hint of regret in her voice.\n\n\"There will be more,\" Over her shoulder, I noticed the girls walking our way, each carrying a bag of stuff. \"Come on, Mimi, there are some people I want you to meet.\"\n\nLeah's face brightened when she recognised Yesmine and she rushed over to give her a friendly hug. Katie and Melinda gave her the once-over and I could tell Mimi was sizing them up as well. It's just what girls do.\n\n\"How long has it been?\" Yesmine said.\n\nLeah counted the years backwards in her head. \"At least twelve years. What are you doing here?\"\n\nI introduced Melinda and Katie and the five of us soon got to talking. \n\nMimi and her husband were also on vacation. They were living in Atlanta and also needed a weekend away. She's a lawyer and he teaches high school. I hadn't seen either in over a decade.\n\nOur 10 year reunion was four years ago. Both Leah and I decided to skip it. At the time, neither of us wanted to face all the questions and rumours about our relationship and the others in our lives. Of course, we knew some of what people were saying about us, but we just didn't want to deal with it then.\n\nAfter I introduced Melinda and Katie, Yesmine shot me and Leah a curious glance. Neither of us said a word, although I was sure she would be asking us in private. \n\nNone of us are ashamed of our relationship, although we do know that it's unusual. We guard our privacy, although our closest friends know what the situation is. We were finally forced to confront the fact that we would have to come up with a public explanation when Kaylee started school. \n\nKids talk. That's a fact of life. We knew that once she began going to daycare, she would be telling all her friends that her mommy and daddy lived with two other women who she also sometimes called mommy. And then there were her brother and sisters. Things were fine when she was in a private daycare, but before she started kindergarten, we sat down with her and explained that not everyone had a daddy and three mommies in a way we thought a five year old would understand.\n\nThings went over fairly well, I think. The reaction of the other parents of kids in Kaylee's class ranged from indifference to curiosity to open disdain. Some of the fundy Christian parents asked to have their children moved to another class, but most of the folks just raised an eyebrow and went about their business.\n\nAfter all, Leah is a local celebrity of sorts and rumours of her lifestyle had been circulating in the Asheville area for years, so it's not like it was a complete surprise. Just more fodder for the gossip mill. Plus, Melinda has tenure and Katie's partners need her more than she needs them so we don't worry about job security.\n\nWe talked some more but soon Yesmine said she had to meet Geoff. We swapped cell phone numbers, but not before the girls invited them over for dinner on Sunday night.\n\nYesmine said they'd love to visit with us and promised to call for directions later.\n\n\"Mimi looks good,\" Leah said to me, as the four of us watched her hips sway back and forth as she walked away.\n\n\"Didn't you go out with her?\" Melinda asked, trying to needle me.\n\n\"Yeah, a couple of times,\" I replied absently, my eyes still on Yesmine's shapely backside. \"We went to see R.E.M. our&mdash;what was it, junior year?&mdash;and Jimmy Buffett senior year.\"\n\n\"You took her to see Jimmy Buffett but you wouldn't take Leah?\" Katie said.\n\n\"Leah already had a date,\" I grinned. \"Who did you end up going with?\"\n\nShe had to think for a minute. \"Matt Elkins. He was a creep. Bastard kept trying to feel me up during the show.\"\n\n\"You didn't complain when I was feeling you up during the Jimmy Buffett concert,\" Katie said teasingly.\n\n\"That's because you aren't as smarmy as Matt, baby,\" Leah giggled and kissed her wife, which drew some curious stares from those around us.\n\nMimi turned the corner and the four of us went back to our shopping. Of course, the girls had all purchased bags and bags worth of stuff and I got stuck carrying everything back to the car.\n\nA little while later, we were back at the cabin. Leah was making fondue. Melinda let me off the hook and was helping out while Katie and I canoodled on the couch. Leah chopped up some vegetables for the vegetable broth while Melinda was grating a mix of cheese that was soon mixed in with a little bit of wine, some garlic, a shot of cherry liqueur and a dash of nutmeg. The girls were also slicing up a mix of bread, meats and even mixing up some sauces for the main course.\n\nKatie and I took turns heckling the two in the kitchen and making out like we were 22 again. We were teasing each other knowing that later that night our forced drought would be over.\n\nWhen the meal was ready, I built a fire in the fireplace and poured the wine while Katie threw all the pillows off the couches. We sat on the floor with the electric fondue pots on the coffee table. After the cheese fondue for our appetizer, we used the chicken broth to cook a mix of shrimp, chicken, beef, salmon and even some sliced lobster tail.\n\nEating is one of our few vices. We've cut back on our portions over the years (or else we'd be big as houses) but we all like to try new things and fondue is one of our favourites. \n\n\"To the birthday girl,\" I said, raising my glass. My lovers did the same. \"No one has every looked so good for twenty-one.\"\n\nKatie snorted softly. Leah giggled.\n\n\"And to many more birthdays,\" Melinda added. \n\n\"Shared with friends,\" Katie said, looking each of us in the eyes. Her gaze softened and I saw the love she had for each of us.\n\nLeah leaned over and gave Katie a kiss. Melinda and I did the same. I finished off the last little bit of my wine, but I noticed that the girls had only sipped at their drinks all night.\n\nThe rest of the meal passed with us sharing food with one another. The dinner was wonderful, but the company was even better.\n\nI helped Leah clean up while Melinda and Katie watched us from the couch. Leah brought the fixings for a dark chocolate fondue, but no one was ready for dessert yet. Instead we just let our food settle and we talked some more. There were no worries. No rush.\n\nWith the dishes done, I went back to the bedroom and came back with Melinda and my present for Katie. \n\n\"We said 'no gifts',\" the birthday girl scolded us. \"The weekend was my present.\"\n\n\"Yeah, well . . . we changed our minds,\" Melinda said. That's the thing about women; they do that. And when they do, there's no use in arguing. Believe me: I live with three of them.\n\nKatie took the jewelry box in her hands and slipped it out of the wrapping paper. Hanging from a simple gold chain, we bought her a pendant in the shape of a four-leaf clover with a quarter carat diamond in place of each leaf. She held it reverently as it glimmered in the firelight. There was a hint of reproach in her eyes&mdash;if only for spending so much&mdash;but there was also tenderness and appreciation.\n\nShe handed the pendant to Leah and lifted her hair while her wife put it on. Katie then took Melinda and I in her arms, one at a time and then both of us at once, and gave us deep passionate kisses.\n\n\"You know,\" Katie said to Melinda. \"When you first kissed me, if you'd told me that I'd be in love with the three of you eleven years later, I'd have thought you were crazy.\"\n\n\"And if you had told me eleven years ago that the sweet, innocent little girl you were would turn into a kinky, sex-crazed maniac, I'd have thought you were crazy,\" Melinda replied.\n\n\"So are you ready for your other present?\" I asked, trying not to sound too eager.\n\n\"Down, boy!\" Leah taunted me. \"We haven't had dessert yet.\"\n\n\"I thought Katie was dessert,\" I retorted playfully. \n\n\"I like the sound of that,\" the birthday girl said. \"It's been so long, I've almost forgotten what it was like to have a dick inside me.\"\n\n\"I'm gonna give you a fucking you'll never forget,\" I promised.\n\nThe girls all laughed, and in retrospect, there seemed to be a nervous undercurrent in all three of them.\n\n\"I'll go get him ready for you,\" Melinda pulled me to my feet and led me to the master bedroom. \n\nWe lit a handful of candles around the room and then she began peeling my clothes off. I tore at hers, too. Soon we were both naked and I found myself laying on the bed with my legs hanging over the edge. Melinda was on her knees in front of me. Her head bobbed up and down.\n\n\"Damn, that feels good,\" I moaned in response to her expert oral ministrations. \n\nI was erect almost instantly and Melinda's skilled mouth made me as hard as steel. A couple of times, I felt like she was going to make me cum, but each time, she held off enough to bring me back from the edge.\n\nMy hands went to her shoulders and I had to resist the urge to thrust upwards into her mouth. \n\nMelinda says girls like the control they have when giving a blow job. I think the guy's instinct is to either push down on her head or fuck the girl's mouth, but it's not a pussy. And gagging isn't necessarily good or desirable. I let her lead me on, enjoying the attention she was paying to my cock.\n\nThe three girls are generally submissive, at least to me. Katie is the most aggressive in bed, and she is known to take the \"top\" role, especially with Leah, but sometimes with the rest of us, too. Melinda is assertive and dominant with the other two, but she also loves to be blindfolded and tied down.\n\nHowever, when it comes to oral sex, the girls like to be submissive when receiving and in control when giving. And I'm not complaining. I love the attention my girls put into giving fellatio and I try my best when reciprocating.\n\nI also love Melinda's tongue. She can work magic with it, and both Leah and Katie agree with me.\n\nMy head rolled instinctively from left to right, and that's usually Melinda's signal that I'm about to cum, so she held back a little.\n\nI felt her lips sucking on the head of my cock and her hands worked up and down the shaft. After a few minutes, I felt another set of hands on my balls and someone slipped into the bed with me. \n\nLooking to my right, found Leah&mdash;naked&mdash;in bed with me. She ran her hands over my chest before leaning in to give me a deep kiss. I reached over and squeezed her breasts gently. \n\nWe gasped simultaneously; Leah because I pinched her nipple just a little too hard, me because one mouth was working on my cock and another was sucking on my balls.\n\n\"I think he's ready,\" Leah said softly. Looking down I saw Melinda and Katie side by side, sharing my cock in their hungry mouths.\n\nI nodded my head eagerly.\n\nMelinda stood and pushed me back on the bed. She propped up a couple of pillows and lay back. Leah pushed me into her arms so I was laying against my wife, my head resting on her soft, pillowy breasts.\n\n\"I love you,\" Melinda whispered in my ear. Her arms reached around me, pulling me into her embrace.\n\nTurning, I gave her a kiss, but then my attention was drawn back to our other two lovers. Leah and Katie pulled on my cock, just to make sure it was hard. \n\n\"I've been waiting all week for this,\" Katie declared. She wasn't taking her time and seemed to be in a rush to get me inside her. I'm not complaining; I'm just sayin'.\n\nWe both moaned as she rubbed the head of my cock against her slick pussy. After a couple of strokes, my cock was covered in her juices. All day we had been flirting back and forth, knowing that tonight we were finally going to be together, after a week of abstinence. \n\nShe was nude, with only her wedding band and her birthday pendant glistening in the soft candlelight. Her red hair hung down around her shoulders. Her eyes were closed.\n\nMy hands went to the soft points on her chest. Katie's nipples hardened immediately.\n\nShe bit her lip as I entered her. Leah curled up in the crook of my arm and watched her wife lower herself down on me. \n\nKatie and I let out satisfied moans, savouring the initial penetration.\n\n\"God, you feel so good,\" she said softly.\n\nI looked up at her face, which was bathed in the soft glow of the candles. She slowly lowered herself down until I bottomed out. I pulled her to me and kissed her tenderly. She leaned over and gave Leah and Melinda similar treatment.\n\n\"Your pussy is so fucking tight,\" I whispered.\n\n\"Even after all the fucking you give it?\" Leah stuck her tongue in my ear.\n\n\"Yes,\" I replied looking up at Katie. \"Even after all these years. I love being inside you.\"\n\nWe started out slow. Melinda nibbled gently on the side of my neck. Leah cuddled up to me and reached out to touch Katie's neatly trimmed pussy. \n\nThe girl on top of me sat back and started to grind slowly on me. I bucked my hips in time with hers. \n\nWith her head thrown back, Katie moved a little bit faster. She leaned forward into my arms, which were braced against her chest.\n\nI looked down and saw Leah's other hand absently playing with her own pussy. I brushed her hand away and began to stroke her in time with Katie and me. She moaned softly as we picked up the pace.\n\nEven Melinda began to move in time with us. I turned my head and kissed my wife, but she turned my attention back to the birthday girl.\n\n\"I love riding you,\" Katie moaned. \"I want you to cum inside me.\"\n\nSitting up, I kissed the valley in between her breasts. Her arms wrapped around my head and she pulled me eagerly to one of her nipples.\n\nI suckled on her, paying careful attention to each of the little buds on her chest. I flicked my tongue across each one, causing Katie to squeal with delight.\n\nHer hips moved faster. She was grinding her clit against the top of my cock. I thrust upwards into her.\n\nShe cried out as Leah's mouth went to the nipple that wasn't in my mouth. \"Fuckin' yeah!\"\n\nKatie's fingernails dug into my shoulders as our rhythm picked up.\n\nMelinda's hands pulled me back down to her. I looked up at my lover and our eyes met. Hers were filled with hunger and desire and . . . something else.\n\n\"Cum in me,\" Katie whispered again. \"Cum all over me.\"\n\nFaster. Harder. \n\nKatie went from riding me to impaling herself on my cock. With each stroke, she let out a desperate moan.\n\nI tried to match her strokes, but I couldn't. Instead I simply thrust upwards, trying to give her as much of myself as I could.\n\nLeah stopped rubbing Katie's clit and was now working on my balls. Melinda was blowing softly into my ear and kissing the nape of my neck. I was in sensory overload heaven and it wasn't even my birthday.\n\nHer pace had become so fast, Katie put her hands on my shoulders to steady herself.\n\n\"Cum in her,\" Melinda said softly. \"Cum all over Katie's tight little pussy. You know you want to . . . Give her all that cum like you gave me this morning.\"\n\nIt seemed like Melinda was trying to coax me on when I didn't really need any encouragement. I was trying to hold off until Katie had her orgasm and from the look on her face, I wasn't going to have to wait much longer.\n\n\"Fuck!\" Katie growled. \"Fuck . . . fuckfuckfuckfuck . . .\"\n\nShe gritted her teeth and began to move her hips back and forth rapidly. This is the part I like the best. When my lover loses control.\n\n\"I'm about to cum,\" she said through her clenched teeth. \"I'm about to cum all over you . . . Are you going to cum, too?\"\n\n\"Yes,\" I croaked. I tried to meet each of her thrusts with one of my own. \"I'm going to cum inside that pussy!\"\n\n\"Good . . . Cum with me!\" Katie looked down at me. I was almost there. Her fingernails dug into my chest. Leah squeezed my balls and without warning slipped a finger into my ass. I cried out with a mixture of shock and pleasure. \"Give me my present!\"\n\nMy eyes met my redheaded lover's. Something inexplicable passed in between us. For the briefest moment, I forgot about the woman holding me in her arms. I no longer saw the woman who was holding my lover up and was playing with my butt.\n\nThere was just Katie and me.",
        "She lifted her hips one more time and came down on me hard and strong. \n\nI felt her pussy flood with warmth. Katie cried out, but her eyes never left mine.\n\n\"I'm cumming!\" she moaned.\n\nAll I could do was grunt and meet her thrust. We held it for just a second, both of us on the edge of our orgasms. Then I felt my balls contract in Leah's hand.\n\n\"Cum in me!\" Katie shouted. I tried in vain to hold it for just a fraction of a second longer, but I couldn't.\n\n\"I'm cumming!\" The room started to spin.\n\nLeaning over, Katie kissed me hard and deep as my cock began to pulse. As the blood pumped through my veins, I almost didn't hear her next words.\n\n\"Cum in me,\" she whispered in my ear, ecstasy in her voice. \"Cum all over me . . . Give me a baby!\"\n\nThrough the haze, it took me a second to realise what she had just said. I arched my back as cum poured out of my cock and into Katie's womb.\n\n\"That's it,\" Melinda's lips were on my neck. Her breath was cool in my ear. \"Cum for us. Cum inside her. We're going to spend all weekend making babies . . . just like this.\"\n\nKatie collapsed into my arms and Leah cuddled up to us. I wheezed for breath, partly from our recent exertions, and partly from the confusion of what the girls had just sprung on me.\n\nIt took a few moments for the tunnel vision to pass. I held Katie in my limp grasp. My cock twitched inside her. She lifted up enough to straighten out her legs so they wouldn't cramp up, but there was no way she was going to let me out of her.\n\nI kissed her gently and then turned and looked bewilderedly at Melinda. She smiled knowingly at me. A part of me felt like I had been ambushed. The notion of me fathering children with Leah and/or Katie had come up in the past but none of us really wanted that. At least that's what they told me.\n\nFor Melinda and I, Kaylee and Bryan were something special we had that was just between us. Katie and Leah also wanted children of their own so they adopted. Once it was all said and done, though, we loved all four of the kids as if they were our very own and I didn't think of Gwen and Gabi as \"theirs\", nor do I consider Kaylee and Bryan \"ours\". \n\nThere were also the financial and emotional considerations of having more children in our home. Did we have the energy to raise more kids? Having enough love to go around was never the issue. Nor was money. Combined, the three girls all made enough for us to live comfortably, especially considering that our house was paid off and our retirements are secured after our dalliances in stocks and real estate from five or six years ago.\n\nBut it seemed like our schedules pulled us all in different directions. Could we handle more children? I didn't know the answer to all of the questions that began swimming in my mind. What I did know is that no matter what happened, I was still going to love the three girls I was with more than anything.\n\nThis subject hadn't been raised in three or four years and for me to find out that the girls had changed their minds like this was a little shocking.\n\nAt the same time, if there were anyone else out there I would want to make babies with, it's Katie and Leah. Those two girls mean the world to me. Melinda, too.\n\nMy wife held my gaze for just a moment then she nodded and gave me a reassuring smile. The look in her eyes promised that we'd talk good and long about this later.\n\nThe four of us held each other for a long time in silence. Katie and I were trying to catch our breaths. Leah and Melinda cradled us in their arms.\n\nWe lay like that for a long time. I was still inside Katie. Melinda and Leah ran their fingertips over our bodies.\n\n\"Thank you,\" Katie kissed both Melinda and me, but I couldn't tell which of us she was talking to.\n\nI held her in my arms as Leah snuggled up to us, all the while leaning back into Melinda's warm embrace.\n\n\"Are you guys going to tell me what that was about?\" I said finally.\n\nThe girls all shared a look. An awkward silence fell over the room. I think they were afraid I would be angry.\n\n\"We want babies,\" Leah said after a few moments.\n\n\"We've got babies,\" I reminded them. \"Gwen, Gabi and Bryan are all under three.\"\n\nLeah started to say something else, but stopped, as if searching for just the right thing to say. \n\n\"We love our kids,\" Katie said. \"We love your kids. But we wanted some kids that were ours. As in the four of us. I know you think of Gwen and Gabi as your children . . . we love Kaylee and Bryan as if they were ours . . . but we wanted a baby that all four of us made . . . together.\"\n\n\"So I'm knocking you up to make a baby for all of us?\" My reply was more flippant than I intended.\n\n\"Actually,\" Melinda paused for a moment. Leah snickered. Katie just grinned. \"You're going to knock all of us up this weekend. . . . We're shooting for three babies.\"\n\nI tried to find the words but couldn't. Very few things shock me. But that left me speechless.\n\n\"We've been talking about this for a while.\" Melinda saw that I was having a difficult time processing what was going on. \"We decided that now was as good a time as any for all of us. We're young, money isn't really an issue . . . we all love kids . . .\"\n\nHer voice trailed off.\n\n\"But seven?\" I asked bewilderedly. \"Are we ready for seven kids?\"\n\n\"There's no guarantee that we'll call catch,\" Katie replied. \"How long were you and Melinda trying before she got pregnant with Kaylee?\"\n\n\"First cycle,\" Melinda giggled.\n\n\"Oops, bad example.\" Even though she blushed, Katie was already well aware that Melinda and I didn't have any problems with her getting pregnant. Fertility was never an issue for us.\n\n\"If this is something you don't want, we'll go right back on the pill,\" Leah said, her voice serious.\n\n\"No,\" I said. \"No . . . not at all. I just . . . I just don't want us to be so consumed with the kids that we forget about us. Like this weekend . . . when was the last time all four of us got away for more than a night or two? It was before Kaylee was born. I worry about us sometimes.\"\n\nThe three girls fell silent. I let that sink in for a second.\n\n\"If we have more babies,\" I continued. \"Loving them won't be the issue. There is more than enough love in our house to go around, but what about time? And energy? I can barely keep up with the three young ones as it is. If you all get pregnant in the next couple of months, there will be six kids under the age of four in the house. I'm going to need help.\"\n\n\"I can take a sabbatical,\" Melinda said. \n\n\"I've got plenty of time off,\" Katie volunteered.\n\n\"It's not just a little bit of time.\" I hated to rain on the girls's parade, but someone had to inject a little bit of reason into this discussion. \"I'm going to need someone else home all the time. At least for a couple of years until the twins and B start school. I can't do it all by myself.\"\n\nI paused again.\n\n\"Maybe I could see if the Patterson girl from up the street wants to help babysit,\" I said with a teasing tone to my voice, then braced myself to be playfully punched and pinched. \"She's cute and I'm sure she'd love to hang out around the house with lonely old me.\"\n\n\" 'Old' you is right,\" Melinda rolled her eyes.\n\nSure enough, I was assailed by all three. The bed was soon consumed with giggling and shouting and tickling.\n\n\"A nineteen year old girl would kill you,\" Katie said, settling into my arms again. \n\n\"Three twenty-nine year old girls are already killing me,\" I retorted.\n\n\"You just remember that, mister,\" Melinda pinched me once more for good measure. \"As if you don't get enough pussy already . . .\"\n\n\"I think you get just as much pussy as I do,\" I told her before the serious tone returned to my voice. \"I love you. All of you. I want whatever makes you happy. And if it's having a football team's worth of babies, that's what I want.\"\n\n\"We'll have a lot of time to work through the details,\" Melinda said, always one to take charge and offer a level-headed solution. \"Each of us has plenty of time off to burn and if we have to, one of us can go on a leave of absence. With the house and three cars paid off, it's not like one of us couldn't quit our jobs, too. We can do just fine on any two of our paychecks for a long time.\"\n\n\"I know.\" I looked each of the girls in the eyes. My love for them was reflected back at me. \"I just don't want to get in over our heads.\"\n\n\"We won't,\" Leah's voice was reassuring. \"Besides, we're all in this together. And that's what's going to make it work.\"\n\nI leaned over and gave her a kiss, then turned and did the same to Melinda. Katie lifted her head enough to get hers, too.\n\nMy hands reached around to squeeze Katie's full, perfect ass.\n\n\"Who's next,\" I asked playfully.\n\n\"It's still my birthday,\" Katie jumped in there before either of the other two could respond.\n\n\"Then get ready to get fucked.\" She gave out a surprised yelp as I rolled her over on her back. \n\nI was still inside her. I began pumping and my semi-flaccid cock came back to life, slowly at first, but I soon picked up a good head of steam. A slightly jealous look flashed across both Leah and Melinda's eyes, but it passed as all three of us attacked the birthday girl.\n\n\"Yes, fuck me!\" \n\n************************\n\nThe body in the bed next to me stirred. I turned my head and slowly opened my eyes. Katie was in the crook of one arm, her head resting on my shoulder. Leah was spooned up behind her.\n\nMelinda's head lay on my other shoulder. Her hand ran absently up and down my body. She had probably been up for some time. I looked in her beautiful eyes.\n\n\"I love you,\" she whispered.\n\nEver so gently, I lifted Katie's head and set her down on the pillow. I rolled over on my side and into my wife's waiting arms. We were all still naked.\n\nMy hands went instantly to her perfect breasts. We kissed tenderly. My lips worked their way down her neck. Mr. Happy was up and ready to go. \n\nI rolled Melinda on to her back, but she stopped me. \n\n\"Not yet,\" she said softly and motioned in the direction of the other two girls. \n\nThe first rays of morning were just coming through the bedroom window. Of all the time in the day, this is my favourite time to make love. Everything is so peaceful. So serene.\n\nAnd the kids are usually still asleep.\n\nMelinda pulled the covers back, exposing both of our lovers. Katie stirred and Leah rolled over on her back.\n\nWe slipped out of the bed. I went to the other side of Leah's limp body while Melinda climbed in between her legs.\n\nI gave both girls a good morning kiss. Leah let out a sleepy moan and then started snoring softly. Katie blinked the sleep out of her eyes. She saw what we were up to and smiled wickedly. \n\nOnce again, I kissed Leah, who might be the only person in the world who can sleep through three people molesting her. She mumbled something in her sleep, but managed a dreamy smile.\n\nMelinda had Leah's legs spread and was covering the inside of her thighs with soft kisses. Katie turned Leah's head to the side and began whispering in her ear. All the while, I cupped her breasts and pinched her nipples, which were responding even if the rest of Leah wasn't.\n\nI looked down to see Melinda taking Leah's pussy in her mouth. Leah moaned in her sleep. Her breaths came in shorter spurts.\n\n\"Sweetie,\" Katie cooed. \"It's your turn.\"\n\nLeah said something incoherent. Katie looked up at me and shrugged. \"I guess you're going to have to wake her.\"\n\n\"She doesn't have to be awake to make a baby,\" I said with a snort. \"Is she ready for me?\"\n\n\"Oh, yes,\" Melinda said. She swapped places with me, but not before I got a sweet-tasting kiss.\n\nI rubbed the head of my cock over Leah's clit, which was covered in her juice thanks to Melinda. Her mouth fell open and she inhaled sharply. Her eyes were still closed.\n\nKatie and Melinda were on each side of our lover. I pushed my cock lower, right in to the soft folds of Leah's pussy.\n\nWhen I entered her, Leah's eyes fluttered open. She gasped. Part surprise. Part pleasure.\n\nShe looked up at me and then to each side. I pushed until I was all the way inside her.\n\n\"This is a good way to wake up,\" she said softly. We each gave her a kiss. She tasted like Melinda.\n\nKatie kissed her while the third girl in the bed began to play with her breasts. I pulled out and then pushed forward again.\n\nWith practised ease, we made love gently. As she shook the sleep off, Leah engaged each of us. When our mouths weren't on hers (or each other's), they were suckling on her nipples or biting tenderly on her ears and neck.\n\nLeah's hands roamed our bodies. Katie reached around and cupped my ass, then reached lower to play with my balls.\n\nEach time I bottomed out, Leah let out a soft moan. Making love with the girls is a very sensual experience.\n\nBesides the usual touch sensations, they are all very aural and don't have any inhibitions about voicing their pleasures and desires. And they all smell wonderful, whether it's the sweetness of arousal or the pungency of perspiration.\n\n\"That's it, sweetie,\" Melinda stuck her tongue in Leah's ear. \"Take all of that cock . . . Feel him deep inside that tight little cunt of yours . . . Do you want another baby?\"\n\n\"Yes,\" Leah moaned.\n\n\"Like Katie?\"\n\n\"Yes,\" the response was a little louder this time.\n\n\"I can feel it,\" Katie said, rubbing her body against us. \"I know we made a baby last night . . . Like we're doing right now . . . The four of us are going to have some more children.\"\n\nPicking up my rhythm, I pumped harder, trying to rub her clit with the top of my cock. I varied my tempo. Fast and hard, then slow and deep.\n\nLeah's eyes rolled back into her head when&mdash;without warning&mdash;I slammed into her, just as the other girls bit down on her nipples. \n\nShe let out an ear-piercing scream when I did it again. And again. \n\nAnd again.\n\n\"Oh, fuck,\" she moaned. Leah managed to open her eyes as I continued to drive into her, but she didn't turn to me. She lifted Melinda's mouth off her breast. \"I want your baby.\"\n\nThen she turned to Katie. \"And yours.\"\n\nPulling me to her, she gave me a deep kiss. \"And yours.\"\n\nHer hips met my vigorous thrusts. The four of us were intertwined. We were a jumble of hands and mouths and legs and breasts writhing around on the bed.\n\nI felt one hand between Leah and me, rubbing on her clit. At the same time, someone else's hand reached behind me and worked a finger into my ass. I let out a cry of pure bliss.\n\nThe sensations of physical pleasure were nothing compared to being close to the three people in this world I loved more than anyone else. My lovers. My soulmates. Without any distractions, we were there for each other. All we desired was to give each other pleasure.\n\nThat we were creating life only made our love feel that much more special. I lost track of time as we made love.\n\nFinally, I couldn't take it any longer. Leah arched her back. She started to cry out, but Melinda's mouth was over hers and anything she had to say was nothing more than an incoherent scream. \n\nBut I knew what it meant. And so did Katie.\n\n\"Cum in her,\" the redhead implored me. The finger in my ass pressed harder, catching my prostate in the spot that drives me absolutely nuts. \"Cum all over that pussy . . . Give us her baby.\"\n\nThat was all I needed to hear. I gave a great groan as I started to cum. I counted twelve pulses of my cock and then everything went black.\n\nWhen I came to, I lay in Leah's arms. Melinda was curled up on one side, Katie on the other. We were all covered in sweat.\n\nLeah's legs were spread wide and I was all the way inside her. Her sex felt soft and warm and full. The only sound in the room was our ragged breathing.\n\nIt was a long time before any of us moved, and even longer before anyone spoke.\n\nWorried that I was smothering Leah, I rolled to the side and into Katie's arms. Melinda lifted Leah's hips and slid a pillow under her so her pussy was elevated and my cum wouldn't leak out of her. \n\n(I don't know if that really works, but it seemed like a good idea at the time.)\n\nThen we held each other. Leah drifted off after a few minutes, a contented smile on her lips, a lover on each side and millions of sperm swimming around inside her, looking for an egg to fertilise.\n\nI fell asleep a little while later, sandwiched between Katie and Leah with Melinda's comforting touch always close, wondering why we hadn't done this years ago.\n\nWhen I woke up, I checked the clock and saw that I had been asleep for about an hour. The girls had all fallen asleep. Even Melinda was snoring softly. \n\nTrying not to wake anyone, I untangled myself from the press of bodies and stumbled into the bathroom to relieve the pressure on my bladder. \n\nMy business done, I went back to the bedroom and saw Melinda stretching lazily. She turned her head and smiled at me.\n\nThe sun was up and for Melinda this was late. I started to crawl back in to bed with her, but she sat up. After taking her turn in the bathroom, she motioned towards the door.\n\nWe put on a pair of soft, warm bathrobes to ward of the chill then went into the main room. I threw a couple of logs on the embers in the fireplace and prodded them until I saw flames. Melinda sat on the couch. I took her in my arms.\n\n\"I love you,\" I said, kissing her gently.\n\n\"And I love you,\" she replied.\n\n\"Even if I'm making babies with other women?\" I asked. There was a slightly teasing tone in my voice, but the question was serious.\n\n\"Of course,\" she pulled back enough to look me in the eyes. \"That was my idea.\"\n\nThose words were certainly a surprise to me.\n\n\"I thought . . . you wanted Kaylee and Bryan to be special for us,\" I stammered.\n\n\"They are special,\" Melinda replied. \"But they're not just for us. They're Leah and Katie's, too. Just as Gwen and Gabi are ours.\"\n\nShe paused for a moment. \n\n\"Ten years ago, I wouldn't have done this,\" she said finally. \"Even five years or two years ago, I didn't want Katie or Leah to have your baby.\"\n\n\"So what changed?\"\n\nMelinda took a deep breath. All this was new to me. Right after Kaylee was born, Leah and Katie started wanting to have children. I guess that was to be expected. We were all in our mid- to late-20s and we were doing well enough financially to support children. Their biological clocks were ticking.\n\nThey talked about adopting because they wanted something that was \"theirs\". We had always thought of ourselves as two couples . . . who swapped. Often. Sometimes every night.\n\nIt wasn't an \"us\" versus \"them\" situation, but the other two talked about how they wanted something that was just between the two of them. Hence adopting children. Melinda and I also talked about having some identity as a couple, and siring children with the other girls would have meant sharing something that was just for us.\n\n\"A part of me has always been jealous of you and Leah.\" I could tell it was difficult for her to admit that. \"She's known you since you were eleven and still had that silly bowl haircut. I'm still finding things out about you two. I wish I had been there with you for karate tournaments and band practice and youth group. I know there are parts of you that she got to first and I know there is a place in your heart that will always be hers.\"\n\n\"But you know I'm yours,\" I said. \"I always will be.\"\n\n\"I know,\" she replied. \"I like that I had you first. I like that you and I have memories without her and without Katie . . . But I also like how happy you make them. . . I like how happy they make me. Everyone thinks you're getting the better deal with a harem of three girls, but I love them, too.\"\n\nMy arms wrapped around my wife and she snuggled close to me.\n\n\"I have also been jealous of Katie,\" Melinda continued in a soft voice. \"She's so damn cute. Guys stare at her ass all the time . . . she's funny . . . and her tits won't ever sag down to her waist like mine did . . . I see the way you two are together. You're playful and like little kids together . . . You and I . . . sometimes . . . sometimes I feel like I'm the mother of us all and I wish I could trade that in to be the baby of the group.\"",
        "She paused for a moment, looking for the right thing to say. \n\n\"Right after we got married, Leah asked me if I would mind if you fathered a baby with her or Katie . . . I told her . . .\" Melinda paused to take a deep breath. \"I didn't want them to have that part of you. She was hurt. She was angry. And I can't blame her. We all knew you would be a great father. You always had this way with kids. And you're not so macho that you think you have to be in charge, and you're not threatened by having a wife and two girlfriends who make all the money.\"\n\n\"You just like that I'm willing to change diapers,\" I snickered.\n\n\"That, too.\" She pinched me. \"I didn't want to share you, and I was wrong. Leah didn't just want your baby. She wanted our baby. For all four of us. And I couldn't see it. I thought that by having Kaylee and Bryan, I could separate the you-and-me 'us' from the you-me-Katie-and-Leah 'us'. And I threw it back in her face.\"\n\nWordlessly, I held Melinda tenderly.\n\n\"Since Bryan was born and the twins arrived, I've realised that they love 'our' children just as much as we do. And I love Gwen and Gabi as if I had given birth to them myself.\" Melinda paused long enough to wipe her eyes. \"I know we already have four kids, but I wanted us all to have kids to share. That we were all around to conceive, not by coincidence or by accident. But a baby that we all decided to make. Together. That's what Katie and Leah wanted.\"\n\n\"I'm guessing then that Katie's birthday was just an excuse, huh?\"\n\n\"Um . . . yeah.\" Melinda grinned sheepishly. \"We've been planning this for months . . . since about Thanksgiving actually.\"\n\n\"Do I even need to check your calendars?\"\n\n\"No. That and Katie's birthday were just one big coincidence, though,\" she said. \"We synchronised years ago, so back in January we all went off the pill.\"\n\n\"Weren't you . . . um, worried . . . about getting pregnant early?\"\n\n\"No,\" there was a conspiratorial glint in her eye. \"You didn't notice but last month about this time . . . and the month before that . . . none of us let you cum inside us. We either got you off with a blowjob or had you cum on our tits so we wouldn't get pregnant.\"\n\nI thought for a second, and she was right. In retrospect, it should have been obvious, but at the time, I just thought that Melinda really wanted me to fuck her in the ass or that the other girls weren't in the mood. \n\n\"Once we knew we were ovulating regularly again, we decided to jump you,\" Melinda continued. \"I'm sorry for springing this on you, but the look on your face was priceless.\"\n\nFor good measure, I slapped playfully at her breast.\n\n\"Now, now!\" she said with a smirk. \"Don't start that until the other two wake up!\"\n\n\"So why didn't you stop me yesterday? Or when we were in the van on the way up?\"\n\nMelinda shrugged. \"We couldn't get away with cutting you off completely, or you'd get suspicious. . . . Besides, I'm your wife and I get first dibs.\"\n\nI turned her head to mine and kissed her. We held each other and watched the fire.\n\n\"So what was that about the other night?\" I said finally. \"The stuff about just being you and me again?\"\n\nShe didn't say anything for a long moment. \"I knew that might be the last night it was just you and me. If the girls get pregnant, the four of us will always be connected. Maybe not legally, but any kids that come out of this weekend will be ours. Call me selfish, but I just wanted to hear you say that you would still want to be with just me.\"\n\n\"If that's what you want, my love, all you have to do is ask. You know that,\" I told her. \"I love you. I love that you will share me with our two lesbian friends. I love that you love them, too. I love what the four of us have together. But you will always be my wife.\"\n\n\"I know,\" Melinda snuggled up to me. \"I love you, too.\"\n\n************************\n\nThe rest of the morning passed slowly. Melinda sent me back into the bedroom while she cooked breakfast. I cuddled with the other two girls until my wife showed up with a tray of hotcakes, bacon and eggs. \n\nWe fed each other, talking and laughing at the same time. It was like old times. Well not really old, but from six years ago when it was still just the four of us. On one level, it seemed like just yesterday that we moved from Jacksonville, embarking on a new journey in our lives. Yet on another, it seemed like we were old friends who fit so comfortably together and this crazy life we had just came so naturally.\n\nNone of us were in a hurry to get out of the bed. \n\nLeah and I made love again as Katie and Melinda held us and each other. Maybe it was just me, but the girls were all glowing. They looked so beautiful, and not just because they were naked. Smiles come naturally to them all. There is a warmth to their eyes and playfulness in their laughter. \n\nI truly am the luckiest sonofabitch in the world.\n\nA little while later, we stumbled out of bed, reeking of sex. We made our way to the large stand-up shower, each getting a turn being washed by the other three.\n\n\"So is there anything else you guys wanted to do today?\" I asked once we were all dry and dressed.\n\n\"Besides breeding you?\" Leah gave me a quick kiss on the cheek. \"No.\"\n\n\"Since we're having company, I'll need to go to the store either today or tomorrow and pick up some more salmon for dinner tomorrow,\" Katie said, a sly smile coming to her lips. \"And I think we need to breed some more. . . . Are you ready to go now?\"\n\n\"You've already had your turn,\" I smacked her across the backside. \"When are we going to do Melinda?\"\n\n\"Oh, we've got something special planned for her tonight,\" Leah said with a pernicious grin. \n\nI looked over at my wife, who shrugged. Whatever these two had cooked up, they didn't include Melinda in the loop.\n\n\"So are you ready?\" Katie taunted. \"Or have you slowed own in your old age?\"\n\n\"That's it!\" I lunged off the couch and grabbed her around the waist. She struggled, more for show than actually trying to fight me off. \"I'm going to fuck the shit out of you like I should have yesterday!\"\n\nI tugged at her jeans, nearly popping the buttons off. She kicked them away and tried to kiss me, but instead, I spun her around and threw her over the arm of the couch.\n\nHer ass&mdash;perfectly round and toned&mdash;stuck up in the air. I pulled at my belt and soon my khakis fell to the floor. Katie tried to lift up off the couch, but I pushed her back down.\n\nMy cock sprung out. I kicked her legs apart.\n\nWithout pretense or warning I aimed my head at Katie's steaming sex and entered her with one thrust. We both let out a satisfied groan.\n\nMelinda sat on the other end of the couch, watching us fuck. There was a combination of amusement and a little bit of envy in her eyes. \n\nLeah sat across the room in one of the plush chairs. She smiled and blew me a kiss.\n\nThe pussy I was in was slick with excitement. My fingers dug into the soft skin of Katie's ass as I hammered her.\n\n\"Fuck!\" she shouted. \"Fuck . . . fuckfuckfuckfuck!\"\n\n\"That's right, baby,\" I told her. \"I'm fucking your tight little pussy!\"\n\nWith every stroke I let out a feral grunt. Katie used her arms to brace herself on the couch and absorbed every blow.\n\nThe frantic slapping sound of our coupling echoed off the walls and hardwood floors. The couch shook with every thrust.\n\nI looked down at Katie's cute little bubble butt. So round. So tight. So fuckable.\n\nKatie whimpered as I pulled out of her. I took my cock in my hand and smacked the head against each cheek, then against her puckered little rosebud.\n\n\"Don't even think about it,\" Melinda warned me from the other side of the couch. I looked up long enough to shoot her a wicked glare. \"You can fuck her ass when we get home . . . While we're here, all your cum will go in one of our pussies.\"\n\nA disappointed sigh escaped my lips. Katie's too. \n\nMy cock slid easily back into my lover and I started pounding again.\n\n\"Do . . . you . . . want . . . this . . . one?\" Katie moaned between strokes. Was she talking to Leah or Melinda?\n\n\"No, baby,\" Melinda replied sweetly. \"This one is all yours . . . Just to make sure you catch.\"\n\nMy wife leaned over and gave our lover a kiss. I thought about holding off until Katie had her orgasm, but I decided to be a little mean about it.\n\nI pulled back so only the tip of my cock was inside her, then thrust forward with one hard stroke. Reflexively, Katie squeezed me with her pussy.\n\nWith one last feral gasp, I unloaded into Katie's pussy. My fingers dug into her ass.\n\nShe let out a squeal and I felt her pussy flood with warmth. I held it as the orgasm consumed us both. \n\nI leaned forward, my hands on her shoulders. We stayed like that for a long moment, breathing heavily. I waited until the blood stopped pounding through my veins, then pulled out. I stumbled over to a chair and fell into it, still a little dazed.\n\nKatie stayed bent over the arm of the chair for a few minutes. Her ass stuck up in the air. She smiled sweetly at me.\n\nI chuckled to myself and waited to regain my strength. If I had been 22 again, I'd have pushed her aside, thrown Leah (and then Melinda) down into her place and done them both. Alas, old age really was catching up to me!\n\nLeah sashayed over to me, an exaggerated swing in her hips and a little extra bounce in her breasts. I hadn't noticed before, but her blouse had come open and her skirt was riding up, showing me her bare pussy.\n\n\"I think we need to breed some more.\"\n\nThose words caused something to snap within me. Maybe it was the girls's eagerness. Maybe it was knowing that we were making new lives. Or maybe it was that the four of us were alone again without obligations, without anyone but us. I recovered quickly, realising full well that after this weekend, I was going to need a rest.\n\nWe went back to the bedroom and didn't leave the house again that afternoon. \n\n************************\n\n\"Should we even bother getting dressed for dinner?\" I squeezed Melinda's breast gently. Her nipple hardened in my hand.\n\nMy face was covered in her juices. Katie and Leah had made similar messes on my cock.\n\n\"I think we could all use a shower,\" my wife replied. \"And then we need to change the sheets.\"\n\nThe three of us snickered. \n\n\"You need to change the sheets, honey,\" Leah giggled. \"It's your mess.\"\n\n\"I think I had help,\" Melinda rolled her eyes then reached for the younger girls. They collapsed on top of me, a mass of tickling, giggling, kissing, groping flesh.\n\nWe lounged around on the bed for a few more minutes then moved to the bathroom. Katie started the water running. Leah and I brushed our teeth. Melinda hunted around for some towels.\n\nThe four of us took turns under the water, washing each other. Touching. Laughing.\n\nMelinda stepped out of the shower first to towel off. It was her night to cook, after all. The rest of us soon followed. \n\nI patted down the other two girls, even after all the water was gone. They put their hair up and started up their dryers, so I went out to the kitchen to help with dinner.\n\nThe meal was spaghetti in a thick meat sauce, toasted Italian bread and a tossed salad. I had made the sauce the week before using my mom's recipe and we brought a tub along with us. Melinda put a pot of water on and began slicing the lettuce.\n\nSneaking up behind her, I put my hands on her shapely hips. I pressed against her perfect ass. She leaned back in my arms.\n\nMy lips brushed her soft skin. She craned her neck as I kissed her gently. Her bathrobe fell off her shoulder.\n\n\"Hey, you two, stop that!\" Leah chided us. \"No more hanky-panky until after dinner.\"\n\n\"Spoilsport,\" Melinda pouted.\n\nLeah responded by sticking her tongue into her wife's mouth. \"No, it's just that we can't wear him out for later tonight.\"\n\nI patted them both on the backside and then went back to cutting up bread.\n\nWhen dinner was ready, the four of us sprawled out in front of the fire and ate. In between bites, we flashed each other from beneath our bathrobes and continued our carefree flirting. It felt so good to once again just be the four of us.\n\nI think many marriages could be saved if people would just make time for each other. There's really no secret to it. Just be together. Have a date that doesn't involve the kids. Get away for a long weekend. Renew your commitment. Remember what life was like before it was consumed by parent-teacher conferences, visits to the doctor, preschool, and Elmo.\n\nWe finished eating a little while later and Katie went and got a Cheesecake Factory cheesecake from the fridge. Thank God they sell those things at Sam's! A little whipped cream with some strawberries and we were in food heaven. I told the girls to save some for later in the night for what might be a trip to carnal heaven.\n\nAs I carried all the plates to the kitchen, Leah went back into the master bedroom. She came back out carrying a black gift bag. I didn't recognise the logo on the side.\n\nShe motioned for me to leave the dishes in the sink and join them back by the fire.\n\nLeah and Katie both looked nervous. I glanced over at Melinda; she looked just as curious as me.\n\n\"We wanted to ask you both for something,\" Leah began nervously. Katie reached over and patted her hand reassuringly.\n\n\"What is it, sweetie?\" Melinda asked.\n\nThe two girls shared a look then Katie reached into the bag. She drew out four small boxes were obviously from a jewelry store. My eyes got wide.\n\n\"First of all,\" Leah licked her lips as if to gather her courage. \"We wanted to thank you for this weekend. . . . And for letting us . . . you know . . . um, share . . . share your babies.\"\n\nMelinda started to say something, but stopped herself so Leah could continue.\n\n\"Katie and I have been talking about this for a while,\" she paused for a second to look each of us in the eyes. I saw the love she had for us. I smiled and saw the same feelings reflected in Melinda's gaze. \"We want . . . we want you two to marry us.\"\n\nThe two girls opened the four jewelry boxes and showed us four matching rings. Except for being sized to match our individual hands, they were identical. A band of black stone ran around the gold ring with four inset diamonds shining in the firelight.\n\nI glanced over at Melinda. We exchanged a knowing glance and then she no longer had eyes for me. Reaching out, she took Leah and Katie in her arms. The three girls pulled me into their embrace.\n\n\"We share so much,\" Katie said. \"Our kids, our house . . . everything. We don't want to be two couples that live together anymore. And now that we're having babies&mdash;\"\n\n\"Trying to have babies,\" Leah interjected.\n\n\"We're going to have babies together,\" Katie said playfully but firmly. \"We want to be full partners.\"\n\n\"We've practically been a foursome since Leah showed up on our doorstep ten years ago,\" I said.\n\n\"That's the point, tiger,\" Katie said. \"We don't want 'practically' anymore. We want 'us'. We know it's not legal and we know that nothing will really change because as you said, the reality is that we're together already. But we just wanted to commit ourselves to loving you two with all our hearts and souls.\"\n\n\"Of course we'll marry you,\" Melinda said, needing no prodding.\n\nDespite our earlier conversations, I saw that this was what Melinda wanted. I knew her better than anyone. I knew how much she loved both Leah and Katie. I knew how much she loved me. I knew how much she loved the four children . . . our four children.\n\nLeah lifted each ring out of its box and passed them around until we each found the one that slipped on to our finger. Of course they fit perfectly.\n\nMelinda then took all of our hands and held them together. Our fingers intertwined. Eight hands. Four hearts. All linked as one.\n\n\"I promise to love you all, my husband and my wives,\" she said after a moment. Her voice was gentle and filled with love. As the words flowed, I realised she was speaking for all of us. \"And I promise to care for each of you through the good times and the bad.\"\n\n\"I promise that I will give myself to each of you,\" Leah continued. \"Completely and without reservation. I will hold nothing back and I will take you all into my heart forever.\"\n\n\"I promise to care for all of our children,\" Katie picked up. \"I will try to be the kind of mother they deserve. I will provide for our family and I will look to each of you for support when I need it, and I will be there for you forever.\"\n\n\"I promise to be the best husband I can be.\" The words were spontaneous, but they flowed so easily. It was as if the last eleven years had all built up to this moment, the ultimate fruition of our relationship. \"I will treat you with love and respect, tenderness and kindness. I will devote myself to 'us' and I will look forward to growing old with the three most beautiful people in the world.\"\n\nOur vows spoken, we squeezed each others hands gently, then we fell into a mass of kisses, hugs and laughter. There were a few tears in there, too.\n\n\"I now pronounce us husband and wives,\" Katie proclaimed, a broad smile on her face. We all laughed and pulled each other close.\n\nMelinda was making out with Leah. I broke them up to get my turn with each.\n\n\"How are we going to consummate this marriage?\" I asked.\n\n\"We've got a couple of ideas,\" Leah winked. I gathered my best friend in my arms and gave her a not-so-fatherly kiss.\n\nThe four of us got up and went into the bedroom. With the press of a button, the gas fireplace came on. Leah lit some candles while Katie pushed my wife&mdash;our wife now&mdash;back on the bed.\n\nMelinda cradled the younger girl to her. They were whispering softly back and forth. Leah and I soon joined them on the bed.\n\nWe lay there for a few minutes. My head was on Leah's belly. She leaned against Melinda. I reached over and caressed Katie, pulling her robe open and cupping her breasts.\n\n\"I love you.\" My words were meant for all three of the girls. \n\nMelinda looked over and smiled at me. \"Are you ready to make one more baby?\"\n\n\"Are you?\"\n\n\"Of course,\" she replied gently.\n\nI reached over to undress her, but Leah stopped me. \"We want to do her first.\"\n\nWhen the girls get this look in their eyes, I know to step back and leave them be. I propped up a couple of pillows against the headboard and lay back.\n\nLeah leaned over and took Melinda's face in her hands. They started with soft pecks that slowly became long, lingering kisses. Melinda turned her head and gave Katie the same.\n\nThey undressed each other gently, their nude bodies glowed in the firelight. I watched the three girls together. We had been together so long, we anticipated each others' movements. We know what turns the others on. We know what drives each of us crazy.\n\nAll three moved in concert. Melinda started to get up, but Leah and Katie pushed her back. They were taking control this time. Although she was usually dominant with the other girls, tonight Melinda surrendered to them willingly. \n\nKatie had one of Melinda's nipples in her mouth while Leah kissed her way down the older girl's body.\n\nMesmerised, I watched them make love. Katie played with Melinda's breasts and kissed her. They alternated between deep, hungry kisses and quick, soft pecks.\n\nLeah spread Melinda's legs and nibbled her way down the other girl's belly. I absently stroked my cock.\n\nMy eyes alternated between the three naked forms. Katie's pert breasts. Leah's full hips. Melinda's swollen pussy.\n\nThey were slow and deliberate.\n\nMelinda's mouth fell open when Leah's mouth enveloped her clit. She thrust her hips forward into the brunette's mouth.\n\nKatie squeezed Melinda's breasts and pinched her nipples, causing her to cry out louder.\n\n\"That feels so fucking good,\" Melinda purred.\n\nLeah didn't respond, instead trying harder to make our wife cum. ",
        "\"We going to do you all night long,\" Katie whispered. Her eyes flashed in my direction, an unspoken promise to me, too.\n\nAgain Melinda cried out. Leah was giving her the thorough treatment.\n\nMelinda's arms flailed around, she grabbed Katie by the hair and pulled the other girl's mouth to her. They kissed hungrily. \n\n\"Fuck,\" the girl on the bottom whispered. \"Fucking eat that pussy . . . oh, god, you do that so well . . .\"\n\n\"You taught us,\" Katie said, speaking for our other lover. \"Do you know what she's doing, Melinda? . . . She's getting you ready to make our baby . . . That's right, honey . . . You're going to cum in her mouth and then we're going to fuck you . . .\"\n\n\"Yes,\" Melinda slurred. \"Eat my fucking pussy . . .\"\n\nAs her voice trailed off, she arched her back and whimpered. Leah's eyes were locked on to Katie's. Her brown orbs twinkled with a pernicious glint.\n\nI slowed down my strokes, lest I had an orgasm that wasn't inside one of the girls.\n\nLeah had built Melinda up to a thunderous orgasm, but instead of putting her over the top, she backed off, keeping her right on the edge. The girls have done that to me and it is nothing put pure, glorious torture.\n\nKatie pulled back and looked over at me. She motioned me over. Giving Melinda one more kiss, she pushed my robe down over my shoulders. Now all four of us were completely naked. She sucked on my earlobe for a moment, then whispered in my ear, \"I'll be right back.\"\n\n\"We'll be waiting, Red,\" I replied groping my two wives at the same time. As she slipped away, I turned my attention to the girl on the bed. \n\nMelinda's breathing was short and ragged. Her beautiful breasts had fallen slightly to the sides, their nipples sticking straight up.\n\nI leaned over and kissed her. Melinda's eyes darted around rapidly, as if she didn't recognise me immediately.\n\nShe began writhing around on the bed. I looked down and saw Leah's mouth fixed on Melinda's clit, all the while pumping two fingers in and out of her dripping pussy.\n\n\"Oh, fuck, Leah!\" Melinda cried out. \"Don't stop . . . don't stop . . . please don't stop!\"\n\n\"Don't stop what?\" I teased, pinching her nipples.\n\n\"Don't stop eating me! . . . Yes! . . . Yes! . . . Yesyesyesyes!\" Melinda started to hyperventilate as Leah's hand moved faster and faster.\n\nRight when the girl underneath us was just about to climax, Leah pulled back.\n\nMelinda shuddered in frustration. I smiled wickedly and kissed her harder.\n\nLeah's mouth was quickly replaced with Katie's. After a second, Leah pulled her fingers away from Melinda's hungry pussy and our redheaded wife took her place.\n\n\"I want . . . I want . . .\" Melinda panted.\n\n\"We don't care what you want,\" Leah said from across the room. She was searching around in her suitcase for something. \"Right now, you're going to be ours.\"\n\nAfter years of instruction, Katie had picked up quite a bit by way of technique from the other two girls and she was putting it all to good use.\n\nMelinda reached for me and began stroking my cock. She tried to pull me towards her mouth, but I held off. It looked to me like Katie and Leah had other ideas . . . at least for right now.\n\n\"God, you're good.\" Melinda's eyes had rolled back into her head. Katie wasn't teasing her like Leah had been. She attacked the other girl, driving her straight towards an earth-shattering orgasm.\n\nI played with Melinda's breasts. I squeezed them as if they were ripe melons. Her nipples were erect; my tongue traced circles around them. When I pinched her, she cried out with pleasure.\n\nHer whole body began to shake. Katie continued to assault Melinda's clit with her tongue but like our other wife, she pulled back right just before giving Melinda the release she craved.\n\n\"Unless I cum soon,\" Melinda vowed, \"I am going to kill you all.\"\n\n\"Don't say that, honey,\" Leah whispered, nibbling on her earlobe. \"You'll be thanking us in a second.\"\n\nStealing one more kiss, the two girls pulled back. Both had put on strap-on cocks. The harnesses were fitted perfectly to their bodies. I smiled to myself, anticipating what they had in mind.\n\n\"Sit up,\" Leah instructed. Melinda's mind was still clouded with desire and she obeyed. Her eyes were glassy. Her hair was a mess and her body was covered with a thin sheen of perspiration.\n\nThe two girls maneuvered Melinda into the middle. Leah propped herself up on a couple of pillows then lay on her back, the dildo sticking straight up. It was covered in lube, waiting for Melinda.\n\n\"No . . . not your pussy,\" Leah said, pointing the tip of the fake cock at Melinda's ass.\n\nThe other girl nodded dumbly. Katie played with her breasts as Melinda lowered herself down. She grimaced when the head entered her, but groaned as she impaled herself on to Leah.\n\nWhen she bottomed out, Leah pulled Melinda back against her. When she straightened out her legs, Melinda's pussy was open and ready our other wife.\n\nKatie got on her knees between the other girls's legs. She slapped Melinda's clit a couple of times with the head of the dildo, then entered her.\n\nThere was a look of pure unadulterated lust on Melinda's face.\n\nI watched in amazement as Katie slowly pushed forward until she was all the way inside Melinda. My blonde wife was slick from the job Leah and Katie did on her earlier. Her excitement was dripping on to the bed.\n\nThe three of them established an easy rhythm. Melinda slowly began moving her hips. She rocked back and forth.\n\nLeah was sucking on that spot right behind Melinda's ear that makes her melt. Katie was kneading her round, full breasts.\n\nThe two girls let Melinda take control of the pace. With each thrust, Melinda cried out.\n\nI watched, hypnotised, as the three of them made love. A part of me wanted to get in on the action, but as I watched the three girls together, I realised just how much they love each other.\n\nThey were my best friends, and they were each other's as well. I would have married any of the three of them in a heartbeat, and I know that any combination of them might have gotten together, too.\n\n\"Right . . . there,\" Melinda breathed. \"Harder . . . Katie . . . fuck . . . me . . . harder.\"\n\nThe petite girl picked up her pace. I watched the muscles of her perfect ass clench as she drove into Melinda. Each stroke was a little faster, a little rougher than the last.\n\nShe held each one for a split second, then pulled back and went in again. \n\nLeah's hands cupped Melinda's breasts. Her teeth raked the other girl's neck. Leah didn't move, instead she let Katie provide all the motion, but with every thrust, the dildo buried in Melinda's ass pushed further in.\n\nHer hands trembling, Melinda reached out and pulled Katie to her. They kissed passionately.\n\nKatie never broke stride.\n\nI saw Leah whispering something in Melinda's ear. \n\n\"Yes . . . fuck, yes!\" she replied.\n\nLeah looked up at Katie. \"Do it, baby! Fuck her good!\"\n\nRed smiled at the two of them and then pulled back on her knees. She grabbed Melinda by the hips.\n\nHer first thrust was hard and fast. Melinda groaned with pleasure.\n\nKatie pulled back and then pushed forward again. \n\n\"Right there!\"\n\nSeemingly without mercy, Katie began to fuck Melinda. She wasn't being gentle. She didn't care about building her up.\n\nLeah mauled Melinda's tits with her hands, making her moans louder.\n\nI love to hear my girls scream.\n\n\"Yes, Katie,\" Melinda panted. \"Fuck me, baby!\"\n\nPounding away, Katie built a steady&mdash;if determined&mdash;head of steam. Melinda's body began to shake again.\n\nThis time, the other two girls didn't hold back or bring her back from the edge.\n\nLeah pulled Melinda by the hair and turned her head. Their lips met in a sloppy, hungry kiss. \n\nKatie continued to pump her cock in and out of the girl in the middle.\n\nMelinda's moans escalated in volume and frequency. The three girls moved in concert. \n\n\"Yes! . . . Yes! . . . Fuck me!\" Melinda chanted. Both girls pushed into her one final time, then Melinda erupted into a stream of unintelligible sounds.\n\nHer orgasm overtook her. She pulled Katie down to her and their lips met. Leah's hands squeezed her heavy breasts.\n\n\"Fuck!\" Melinda shouted. Her body was shaking. Her nipples were hard little points sticking straight up.\n\nKatie held her cock inside Melinda for just a second, then pulled out. Cum was dripping out on to the bed. I think if Katie had pulled out at the height of Melinda's orgasm, she would have squirted all over the bed. Again.\n\n\"Are you ready to make one more baby?\" Katie turned, as if to present Melinda to me. There was a mischievous twinkle in her eyes.\n\nMy cock had been hard since the girls started. Even harder now as I stroked it through Melinda's orgasm.\n\nI got on my knees between Melinda's legs and slipped into her easily. Even with her ass full of Leah's cock, Melinda's pussy was stretched from Katie and slick with her excitement. Katie kissed me briefly on the back of the neck and then pushed me into our wife.\n\n\"Are you okay down there?\" I asked Leah.\n\n\"Mmm-hmmm,\" came her muffled reply. I think she might have had something more to say, but Melinda's tongue was working its way down her throat.\n\nMy hands went to Melinda's soft breasts. They stood up on her chest. I kneaded them gently, drawing a squeal of delight from their owner.\n\n\"Do it,\" Katie whispered in my ear. \"Put your cock in that tight little pussy and cum all over her . . . Cum inside her like you did to me and Leah today.\"\n\nI turned my head and Katie's lips enveloped mine. Her tongue entered my mouth aggressively. Her hands were on my waist and she began to push my hips forward and back.\n\nLeah, Melinda and I got into a familiar rhythm. \n\nOnce again, Melinda began to moan. I wasn't going to last very long this time. Watching the three girls is a thrill second to none. After her earth-shaking orgasm, Melinda's pussy was tighter than usual.\n\nAs I picked up my pace, I put my thumb on her clit and began flicking it back and forth. With each pass, she shuddered with pleasure.\n\nMelinda's eyes were hooded over with pleasure. Her body was splayed out before me. Leah's arms were wrapped lovingly around her. \n\n\"Kiss me,\" she whispered.\n\nAlways eager to oblige, I leaned over and Melinda threw her arms around me. Her lips were soft and warm. \n\nMy head began to swim as she bucked against me. I could feel Leah's cock moving against mine.\n\n\"I love having you inside me,\" Melinda purred. \"I love being fucked by all of you.\"\n\nThe tingling in my body intensified as I felt Katie's hand press down on the small of my back. \n\nI felt something cool between the cheeks of my ass. Then something hard pressed against my asshole.\n\n\"Don't worry,\" Melinda whispered in my ear. \"She changed it.\"\n\nYears ago, when we were experimenting around, anal sex was something Melinda and I wanted to try. Actually, it was me that wanted to try it and Melinda grudgingly acquiesced. Thinking that I would back out, Melinda and I struck a deal where I could fuck her in the ass if she could do me, too. She was surprised when I said yes. \n\nSo we did some reading about safety and health then started our foray into anal play. It turns out we both liked it. Not enough to do it regularly, but more as an infrequent treat. When Leah and Katie discovered our deal, they wanted in, too.\n\nSome people don't care for anal sex. In fact, a lot of people don't. And that's okay. If a certain kind of sex makes you uncomfortable or isn't something you're 100% in to, you shouldn't do it. At the same time, I would offer these words: Don't knock it until you try it.\n\nIt's my observation that there are a lot of people (guys in particular) that think it's okay to be on the giving end of anal, but if you're on the receiving end, it somehow makes you gay. Or if you like it, you must be gay.\n\nFirst of all, what's wrong with being gay? It's not my thing, but as I said before, if you find something you like and can find a consenting adult to do it with, go for it. Second, if done right, it feels really, really good. Third, if it (or any other kind of sex) hurts, then you're not doing it right.\n\nI bought a couple of strap-on attachments for the girls several years ago that we use exclusively for anal sex. They're not as big as the strap-ons they use for vaginal intercourse, but it's enough to be felt. Leah was wearing one; Katie had changed into the other.\n\nThe hand in the middle of my back was there to keep me from moving. Melinda's pussy clenched around me. My lips went to her breasts.\n\n\"Deep breath,\" Katie said softly. I tried to relax my ass, anticipating the coming penetration.\n\nThe first entry is at the same time the most painful but also the most exhilarating part. Melinda tells me that it's the same way for vaginal sex. \n\nIn that moment, I gasped as the head of Katie's cock slipped past the sphincter. I bit my lip, but still couldn't help but cry out.\n\n\"That's it, baby,\" Melinda said soothingly. \"Go slow.\"\n\nAfter the initial entry, I relaxed. The sensation of having the stiff cock in my ass only heightened the sensitivity of the rest of my body. \n\nKatie slid into me slowly. My hands clenched the sheets. Melinda's fingernails dug into my skin.\n\n\"Oh, Jesus!\" I moaned.\n\n\"Almost there,\" Katie said. A moment later, I felt her hips press against my ass.\n\nI let out a deep breath and smiled dreamily.\n\nMy own hard cock was buried in Melinda's pussy. I could feel Leah underneath us. Katie was behind me.\n\nThe four of us lay there. Connected. Both literally and figuratively. No one moved for a long time.\n\nKatie's hands massaged my ass, trying to get me to relax. Finally, I felt Katie begin to rock back and forth slowly.\n\nShe pulled out a little bit, then pushed back in and held it. Every couple of seconds, she repeated the move. \n\nWith each stroke, she pumped a little harder. \n\nWith each stroke, I gasped a little louder.\n\n\"That's it, baby,\" Melinda purred. \"Make love to us.\"\n\nI lifted my head enough to kiss the woman in my arms. Katie's hands were still in the middle of my back, holding me down. I could feel Leah moving beneath Melinda.\n\nThe four of us fell into an easy rhythm.\n\nBetween watching the girls earlier, being inside Melinda and having Katie expertly working on my ass, I wasn't going to last very long.\n\nThe strap-on being used on me was the perfect size to stimulate my prostate. Each of Katie's strokes seemed to go straight through me to Melinda.\n\nThe dual sensation of Melinda's tight pussy and Katie inside my butt was driving me crazy.\n\n\"Harder,\" I gasped. Melinda bucked against us with every stroke. \n\nMy moans became louder. Katie moved faster.\n\nI felt hands on my hips, pulling me backwards to the redhead, then pushing me forward into the blonde. I didn't have to move.\n\nInstead I let the girls do all the work and simply hung on for the ride.\n\nIf you're a guy and never had someone play with your prostate, you don't know what you're missing. If you're a guy and never had someone play with your prostate while working on your cock at the same time, let me tell you that your life is not complete.\n\nI felt a tingling in my toes. A shiver ran from my head to toes with every stroke. \n\nTears began to run down from the corners of my eyes.\n\nMelinda's fingernails dug into my back.\n\n\"Cum for us,\" Katie growled. \"Cum in that tight pussy.\"\n\nNo words would form in my mouth. My body shuddered with pleasure.\n\nMy cock was sliding in and out of Melinda with virtually no friction. I was rock hard. \n\nThis was going to be an earthshaking orgasm. I could feel it.\n\n\"Cum in me,\" Melinda whispered in my ear. Katie pushed harder.\n\nI threw my head back and let out a low, throaty moan. Melinda's hands were on my face and she pulled me into a passionate kiss.\n\nFinally, I couldn't take it any longer. I moaned, and not just a little.\n\nBeing in the middle of a four-way sandwich made me crazy. I began to howl with pleasure.\n\nThe tingling at the tip of my cock spread throughout my body. \n\nEvery nerve ending seemed to explode in a shower of pleasure.\n\nKatie gave me one last thrust. I saw stars shooting out of the corner of my eyes.\n\nVery vaguely, I felt my balls emptying into Melinda's pussy. I was barely aware of collapsing on to the girls beneath me. \n\nThere was a ringing in my ears. The room spun.\n\nThen I passed out.\n\n************************\n\nSomeone was nibbling on my ear. My entire body tingled. I was laying on my side. A hand was on my cock. Something was lodged in my butt.\n\n\"How long?\" I croaked.\n\nMy eyes fluttered open. Leah and Melinda held each other and were staring lovingly at me. Katie's arm draped around me, clutching my hand.\n\n\"Just a few seconds,\" the girl behind me said. \"You always like that, don't you?\"\n\n\"How can you tell?\"\n\n\"Because we think the neighbours heard you,\" Melinda laughed. Her legs were crossed and a pillow was under her wide hips.\n\nKatie's hands were on my waist. I felt her push me away from her. There was a pop as the strap-on slipped out of my ass.\n\n\"We'll be right back,\" she kissed me on the back of the neck then slipped out bed with Leah. They went in to the bathroom to clean up.\n\nI snuggled up to Melinda and held her close.\n\n\"Whatcha thinking?\" I said softly.\n\nShe didn't reply for a long second. Her eyes were fixed on the open door and the other two girls. They were in the bathroom removing the strap-on harnesses and washing everything off. \"How much I love you guys.\"\n\n\"Are you sure you're okay with all this?\" I asked, referring to Katie and Leah's marriage proposal.\n\n\"Of course.\" There was a wistfulness in her voice for just a moment, then it was gone. \"I think deep down, it's what I've always known would happen.\"\n\n\"Is it what you want?\"\n\n\"Yes,\" she replied immediately, always a good sign.\n\nI ran my hand through her hair and brought her lips to mine. \"Then as long as you're happy, I'm happy.\"\n\nHer hand hadn't left my cock and was slowly stroking it back to life.\n\n\"Mmmm,\" I moaned. \"That feels good.\"\n\n\"That's the idea,\" she whispered. \"When they get back, you're going to make love to me again . . . just to make sure we get that third baby.\"\n\n\"I like the sound of that plan.\" I pulled back enough to look into her deep blue eyes. \"I love you, Melinda. No matter what else happens between the four of us, you will always be my first love.\"\n\nAs I leaned in to kiss her, she pushed me back. It was a little startling. The look in her eyes caught me off guard, too.\n\n\"No,\" she said firmly. I started to say something, but she silenced me. I saw her glance over towards our two partners. They were still busy in the bathroom. \"You have to love us all . . . just as I love all three of you. That was our promise earlier tonight, remember? They can't be two people we share our bed with some of the time. They have to be our wives. They have to be our equals. I love you. I have loved you since the first time I saw you . . . but I don't love you more than them.\"\n\nMelinda closed her eyes and took a deep breath. \"You are the first person I fell in love with. But over the last eleven years, I've fallen in love with Katie and Leah, too. And I know they're in love with us . . . That's what we have to be about. That's the way things have to be for us&mdash;and that means all four of us&mdash;to work . . . If we can't give ourselves fully to them, then we need to take Kaylee and Bryan, divide up our assets and walk away. Anything less is unfair. Do you understand?\"<br/>\n\nIt dawned on me just then how serious she was. I guess a part of me always considered myself as Melinda's husband with two lovers. Our sexual dealings with Katie and Leah were always as two couples, not as four partners. Of course, in our family and our financial partnership, we were equals, but now I had to think of our dynamic differently.",
        "Throughout the past decade, I had always thought that I could have fallen in love with any of the girls. But still, I considered Melinda to be my first love. In my heart, she was the first among equals, if you will.\n\nNow, she was telling me that I needed to change that mentality. A part of me didn't mind: the part in Melinda's able grasp. After all, what guy doesn't want three beautiful&mdash;and not to mention horny&mdash;women around? A part of me wondered if I was really ready to let go of the woman in my arms as my wife, even if it was to take two more.\n\nCould I be a good husband to all three of them?\n\nWe stared into each other's eyes for a long time.\n\n\"They have to be our partners,\" Melinda said, a little more forcefully. \"Equal in every respect. In our hearts as well as our household. Do you understand?\"\n\n\"Yes,\" I whispered. The other two were finished and I heard them coming back to the bedroom.\n\nMelinda gave me a loving kiss. Leah slipped into the bed behind me. Katie wrapped her arms around all three of us.\n\nWe lay together for a long time. Laughing. Kissing. Groping. Tickling. Loving. \n\nEach of us made love to the other three for as long as we could stay conscious to consummate our new relationship. And in the morning when we woke up, not only were we starting our new lives together, but the girls were all certain that we had started some new lives.\n\nTogether.\n\n************************\n\n\"I think Melinda and Katie are going out shopping again this morning,\" Leah yawned. The two of us were the only ones still in bed. She rolled into my arms and gave me a good morning kiss. \"Do you want to go?\"\n\n\"Not really,\" I replied, then cupped a breast in one hand, her ass in the other. \"I think we should just lounge around and do a whole lot of nothing.\"\n\nLeah rolled her eyes. \"Is that what the kids are calling it these days?\"\n\nThe two of us collapsed into a giggling heap on the bed the quickly devolved into a private make out session. Then we just held each other. Katie and Melinda came back after their morning walk and joined us a little while later. We talked for a bit, but mostly just pressed our bodies together.\n\nHolding my best friend in my arms, I watched Melinda and Katie dress. They gave us each a kiss, then left to go back to the outlet mall.\n\n\"I guess I should call Mom and Dad and tell them that I have a husband now,\" Leah said when we were alone. We were laying on our sides. Her shapely backside was pressed against me. My arms wrapped lovingly around her.\n\n\"They act like we've been married since you showed up on our doorstep . . . what was it? Ten years ago?\"\n\n\"Something like that.\" She turned and kissed me gently. \"Now they can officially be in-laws.\"\n\nI laughed. \"There's nothing 'official' about our living arrangements and you know it.\"\n\n\"Maybe not, but I went down to HR on Wednesday and changed my life insurance to make the three of you co-beneficiaries. I think Katie went to see her people, too,\" Leah said. I could tell by the tone of her voice that she was serious about becoming truly married as a foursome. \"I wonder if we can change our custody agreement with the kids.\"\n\n\"Probably not,\" I replied. \"It was hard enough getting the paperwork through for you two to adopt . . . We had enough headaches trying to get things done for a lesbian couple. Imagine the nightmare for a polyamorous group.\"\n\n\"I don't even want to think about that,\" Leah laughed.\n\nShe leaned back and I kissed her. Harder and deeper this time.\n\n\"I love you,\" I said tenderly. \n\n\"I know,\" my wife said with a smile. \"I love you, too. Do you remember the first night we were together?\"\n\n\"Yup,\" I replied, patting her on the backside. \"You kissed me&mdash;\"\n\n\"I did not! You kissed me!\n\n\"&mdash;You kissed me at that club and we almost didn't make it back to your place,\" I said playfully. We both tickled each other and laughed. \n\nThis is a running joke between the two of us. In truth, neither of us has the greatest recollection of exactly what happened. I definitely should not have been driving that night, but I was in better shape than she. It's a good thing her apartment was close. For years the issue of who kissed who first has been a point of contention.\n\nI know this isn't an argument I'm ever going to win, but for the record, she made the first pass at me.\n\n\"That was our first kiss and our first fuck all in one night.\" Leah had that dreamy look in her eyes. The one she gets from pleasant memories.\n\n\"As I remember, there were three fucks,\" I said playfully. \"And a blowjob or two.\"\n\n\"Yeah, you used to be quite the machine back in the day,\" she retorted. I tickled her some more. Our horseplay turned into loving kisses. \"Why did you never make a pass at me before?\"\n\nLeah rolled over into my arms. Her big brown eyes looked deep into mine.\n\n\"Because I didn't want to lose my best friend. I didn't want the sex to get in the way,\" I replied. \"Why didn't you ever make a move on me?\"\n\nShe looked away. Snuggling up to me, she rested her head on my shoulder. I could feel her breath on my skin. When she spoke, her voice was barely audible. \"I knew I was going away to college. It was hard enough to leave us just as friends. If we were lovers, I know I couldn't have gone. I thought it was the best thing for both of us.\"\n\n\"You had to go, Leah,\" I told her reassuringly. \"I'd have kicked your butt if you didn't. We both needed to get out of town. You went to Carolina. I went to Jacksonville. It's where we were meant to be.\"\n\n\"I know. It's just . . .\" Her voice trailed off. I could tell she wanted to say more, so I waited. \"I was saving myself for you. I knew I would be with you one day. Even if you didn't. You were so dense sometimes, I could have whipped out my tits and you'd have asked about my haircut instead.\"\n\nReaching under her chin, I lifted her face so she was looking me in the eyes. \"You were what?\"\n\n\"I wanted you to be my first,\" she said softly. \"That's what I thought when I left for college.\"\n\nThis was the first I had heard of that. This weekend was turning out to be full of surprises. \n\n\"You weren't . . . I mean, when we . . .\"\n\n\"Oh, no,\" Leah said, looking away again. There was a hint of shame and disappointment in her voice. \"My first time was with that guy who lived upstairs in my dorm.\"\n\nYears ago, the four of us sat up late at night with wine and liquor and shared our loss of virginity stories. As far as I knew, Leah's first was after a night of drunken lust. She said she never spoke to him again after that, and doubts he even remembered their encounter.\n\n\"But it should have been you,\" she whispered.\n\nI was speechless.\n\nWe held each other in silence for a long time.\n\n\"I don't regret anything in my life,\" Leah finally broke the silence. \"But if I had to do it all over again . . . I never would have gone out with those other guys. And that time you came to visit me, the time when we hooked up . . . instead of going out and getting hammered so you would make a pass at me, I'd have dressed up, cooked a nice dinner and then given myself to you . . . You would have been the only man to have ever had me.\"\n\nIt took me a minute to find my voice to respond. \n\n\"If we had gotten together in high school or college, and never had anyone else, I think we'd be just as happy as we are today,\" I said. \"I love you.\"\n\n\"I know. I love you, too.\" Leah wrapped her arms around me and squeezed me tight. \"But I guess everything happens for a reason. If we had been together during college, I don't know that we'd have survived the distance. . . . And if you hadn't gone to school in Jacksonville, we wouldn't have gotten with Katie and Melinda.\"\n\nShe took a deep breath. \n\n\"A long time ago, I used to hate her.\" There was a dark tone in her voice. As if she were scared to admit the way she felt. \"It was before I met her. I was so jealous that she got you first. Sometimes I used to think that it should have been me in your arms, not her.\"\n\n\"Why didn't you say anything?\" I asked after a moment.\n\n\"Because it wasn't my place to. I left you, not the other way around,\" she said. \"And I know how happy she made you. Hell, she still makes you happy. You deserved someone who could be there with you, not three states away.\"\n\n\"Well I, for one, am very happy that we hooked up,\" I pulled her close. \"Even if it was just for a weekend here or there. Plus that week at Disney World. And I'm glad we're still together. Even if it is with two other wives.\"\n\nLeah kissed me. I could see the love she has for me in her eyes. For just a second, I could tell there was that flash of \"what might have been\", and then it was gone. It's the same look Melinda had the other night when she was wondering about the mysterious twists and turns in our lives over the past eleven years.\n\n\"I'm happy we have those two other wives.\" As she spoke, I could tell that she had no doubts about whether our current living arrangements were right or not. \"As weird and crazy as our lives are, I can't imagine things being any different than they are right now.\"\n\n\"Even if it means having all those rumours about you circulating around town?\"\n\n\"You're involved in those rumours, too!\"\n\n\"Yeah, but I'm not the one people recognise when we go out for dinner!\" There was some more tickling.\n\n\"I love you,\" she told me again. We shared another tender kiss. Her body felt so warm next to mine.\n\nLeah's hands caressed my face. I rolled her on to her back and our kisses became longer and deeper.\n\nI stared into her big brown eyes that radiated tenderness. We didn't speak another word. We each knew what the other was thinking. \n\nWe made love for a long time that morning. All the while, I fell into her loving gaze only to be caught in her arms.\n\n************************\n\n\"Come see what we got you two!\" Katie called from the garage.\n\nLeah lifted her head from my shoulder. We were still in bed. I looked over at the clock. It was mid-afternoon.\n\nMelinda and Katie appeared in the doorway. Each had an expression that was part amusement, part envy. \n\n\"Jesus Christ!\" Melinda rolled her eyes. \"You two are like a couple of fucking rabbits.\"\n\n\"You got the 'fucking' part right,\" Leah snickered.\n\nThe other girl reached into a bag and threw a shirt at each of us. Melinda and Katie held theirs up.\n\nAll four shirts were grey with the words \"I'm with Stupid\" emblazoned across the front. On each of the girls's shirts, there was an arrow pointing to the left or the right. On mine, the arrow was pointing straight up.\n\nThe three of them shared a hearty laugh. \n\n\"You realise that I'm going to make you guys wear these when we go out.\" I pulled Melinda down onto the bed and planted a wet, sloppy kiss on her lips.\n\nShe snorted and kissed me back. I reached for her, but she pulled away. \"Down boy! We've got to get cleaned up for your friends tonight, remember?\"\n\n\"Holy crap!\" Leah grinned sheepishly. \"I had forgotten about that. I guess we need to call and give them directions.\"\n\nAs she rolled out of bed, I reached over and grabbed a handful of her round ass. Predictably, that brought a quick slap on my wrist.\n\nLeah went hunting for Mimi and Geoff's phone number and I went to start up the shower while Katie and Melinda unloaded the rest of their outlet mall loot.\n\nA few minutes later, Leah and I were scrubbed and clean. We dressed as Melinda modeled some of her new clothes. We \"oohed\" and \"ahhed\" at all the appropriate times. \n\nThen I went to help Katie cook and Leah called Mimi.\n\nThis was our last night at the cabin and while it seemed a little odd having another couple join us, it did give us cause to dress up. Plus it would be good to visit with some old friends.\n\nKatie was making teriyaki-glazed salmon steaks over angel hair pasta. I put together a simple salad with a ginger dressing, then started melting the dark chocolate for the fondue we didn't have two days ago.\n\nMelinda and Leah sat at the counter and heckled us while we waited for Mimi and Geoff to arrive. \n\nA short time later, there was a call from the gate guard notifying us that we had visitors. We cleared them then got ready for our company. There was a knock on the front door a short time later. \n\nLeah answered the door and led our friends in. She introduced Geoff to our wives. Mimi gave me a big hug and I took their jackets.\n\nI grew up just down the street from Geoff. He and I were buddies from Cub Scouts and youth league soccer. We ran in the same circles (read: the geek clique) and had known each other since about second grade. Like Mimi, he aged well.\n\nIf you had known the four of us in high school, the only thing we had in common was that we were all classified as \"gifted\" but you never would have thought that we were good friends. Leah was athletic and into sports. Geoff was part of the \"artsy\" crowd that spent the early 90s listening to Bauhaus and being disgusted at the materialism of our classmates (while driving the new Saturn his parents bought him and listening to his Walkman CD player).\n\nI was in the nerd crowd who no one wanted to socialise with because we could name all of the captains of the Starship Enterprise, but everyone wanted to be our lab partner in physics because we were going to get As.\n\n(That's the TOS Enterprise, NCC-1701; there were five, you've got 10 seconds and can't use Wikipedia to look up the answers. Go!)\n\nAnd then there was Mimi. She seemed to have it all. Not only was she smart (she was the only person I ever copied answers off of in trig), but she was drop-dead gorgeous. More than simply pretty, Yesmine was elegant and glamorous. All the boys in school used to make those \"dough eyes\" at her. What's more, she was genuinely nice to just about everyone. Where she certainly wasn't going to go out with one of the motorheads or rednecks, she wasn't above talking to anyone who could carry on an intelligent conversation and do more than stare at her boobs.\n\nIf anyone had odds on who would hook up with whom after graduation, the person who put money on Mimi and Geoff would have won, hands down. They were polar opposites. She was gregarious and charming. He was introverted and a little standoffish.\n\nWhat they had in common was art. Geoff was always drawing or making stuff. In the back of geometry class, he used to fold origami animals and then launch them across the room at Mrs. Bannerman. Yesmine was a fabulous painter. They had a mutual respect for each other that quickly blossomed into friendship and more. When they got together right before our junior prom, no one could have seen that they would still be going strong sixteen years later.\n\n\"Dinner smells wonderful, what are you making?\" Mimi asked Katie and then launched a barrage of insightful questions about the dinner and her cooking techniques, all the while offering to help. The redhead blushed and I knew from that moment on, Mimi would have her eating out of her hand.\n\nI was in the fridge looking for some baby carrots and dip when Mimi brushed my elbow. Her voice was low enough that only I could hear. \"The stories are all true, aren't they?\" \n\n\"Except for the one about Hungarian midget and the three-legged camel,\" I winked.\n\nMimi smiled. It was a curious smile. I could tell she wanted to say or ask something more, but she didn't. Instead she went back to asking Katie about dinner.\n\nGeoff and I sat down and tried to stay out of the way. The girls set every thing out on the table.\n\n\"Honey, do we have any more Sprite?\" I asked.\n\n\"It's in the garage,\" Melinda replied. I got up and came back with a couple of soda bottles for me and Geoff.\n\n\"How do you know who is who?\" Geoff asked.\n\nI shot him a puzzled look.\n\n\"The nicknames,\" Geoff explained. \"Who is who?\"\n\nI smiled. \"They just kind of evolved that way. Melinda is Honey, Leah is Sweetie and Katie is Baby. To the kids, they're Mom, Mommy and Momma.\"\n\n\"And what's your name?\" Geoff asked with a sly smile.\n\n\"We call him Tiger,\" Melinda called from the kitchen. She came over, planted a sloppy kiss on my cheek and then winked at Geoff. \"Although sometimes it's Stud when he gets frisky. Come on, guys, dinner is ready.\"\n\n\"Would you like some wine with dinner?\" I asked as everyone was sitting down.\n\n\"I thought you were allergic to wine.\" Geoff looked puzzled.\n\n\"Some wines,\" I replied. I'm asthmatic and most wines cause me to break out into hives. For years I avoided the stuff, but now I've learned to check the labels to save myself a whole lot of discomfort. \"As long as they don't have sulfites added I'm okay. We've got a wonderful chardonnay from a little vineyard in California or a merlot that's made locally we picked up over at the mall.\"\n\n\"I'll take the chardonnay,\" Mimi said and Geoff did the same.\n\nI poured three glasses. Yesmine gave me a curious look when I didn't get any wine for my wives, but didn't say anything, probably for fear of being rude.\n\nDinner was delicious and the six of us were soon in a comfortable place. Mimi and Geoff caught us up on their lives.\n\n\"We missed you at the reunion,\" Mimi said again. \n\nLeah and I shared a look. Melinda and Katie both nodded, giving their silent approval.\n\n\"We didn't want to show up and have to explain ourselves,\" Leah admitted. \n\n\"What's to explain? You'd be surprised about who the kinkiest people are,\" Mimi replied. As she said those words, her eyes dropped. I looked at her curiously, but she wouldn't meet my gaze. I glanced over at Leah; she shrugged, but there was something in the look she returned that suggested she might know more.\n\n\"Yeah, but it's easy to keep some of those things secret.\" Leah shifted uncomfortably.\n\n\"I think you didn't want every guy there jealous that you had this beautiful harem at your beck and call,\" Geoff said to me and laughed.\n\n\"Yeah, right,\" I scoffed.\n\n\"Don't you watch Big Love on TV?\" Leah snorted. \"It's not all passion, romance and four-way sex like a lot of people think.\"\n\n\"It's actually a lot more work than a standard marriage,\" Melinda added. \"Think about the dynamic you two have. Now add two more people to the mix. There are a lot more hurt feelings to worry about.\"\n\n\"So why do it?\" Mimi asked.\n\n\"Because we've all been in love with each other for the past eleven years,\" I said giving each of my wives a loving look.\n\n\"I actually pick fights so we can have make-up sex,\" Katie said mischievously and that brought a laugh from everyone. While not quite true, of all the girls, if someone is going to blow their stack, it's her. She is very passionate about everything and she's quick to anger, quick to laugh. To be fair, she is also quick to apologise if she's in the wrong and will go out of her way to make up.\n\n\"So you have a working polygamy?\" Geoff inquired.\n\n\"I guess so,\" Melinda said, a contemplative look in her eyes. Twenty-four hours earlier, we would have said no, but the vows we took the night before made us a four-way marriage. \"And it's not just a guy with three wives, like the Mormons do it. Each of us has three spouses. I think that's the only way we could work. We love each other and that's what makes our relationship tick.\"\n\nIn many cases, when we have this discussion with our friends&mdash;especially those we haven't seen in a while&mdash;the conversation invariably turns to sex. What's it like? Who does who? Can we come watch sometime? And the like. For us, it's kind of uncomfortable. Our private lives are exactly that: private. Usually we brush those questions aside because they really aren't anyone's damn business.\n\nMimi and Geoff never went there, and for that I was grateful.\n\nYou know you're getting old when you start talking about retirement and mortgages with your friends.\n\nThey were curious about how we had divided up our assets and handled all of the property issues. Since polygamy isn't legally recognised in the United States, we had to get creative with our bank accounts and property so that everyone had an equal share without violating any laws or triggering some added scrutiny by the IRS or another governmental agency.",
        "\"How do you divvy up your finances?\" Geoff asked me. \"You don't work, so if the girls really wanted to, they could screw you out of their retirement funds and stuff.\"\n\n\"You want the long answer or the short answer?\" I replied.\n\n\"Uh, the short answer.\"\n\n\"We set up several accounts, one for each of us personally and a couple in all our names,\" I said. \"Once we figured out an arrangement that was equitable for everyone, the details worked themselves out pretty nicely. Each of the girls has a 401(k) through their work and I have an existing account from where I worked at the bank for so long. We pay into all of them at the same rate and each of us manages our own accounts. Plus we have a group account that we all contribute to.\"\n\n\"It was important to us that everyone have an equal stake in our finances,\" Melinda chimed in. \"It helps that we have three full-time incomes when we could survive on just two of them. Plus, since we made so much money flipping houses a few years ago, we don't have a mortgage, so that makes things a whole lot easier.\"\n\n\"No house payment at all?\" Mimi asked incredulously. It's not everyday that you run into people who are under 35, live in a five thousand square foot home and basically have zero debt.\n\n\"Not right now,\" Leah said with a glowing smile. \"Although we've been thinking about adding on to the house.\"\n\n\"We have?\" It took a second for the light to come on for Katie. Then her smile got real big. \"Oh, yeah . . .\"\n\nI could tell both Mimi and Geoff wanted to ask something else, but they didn't.\n\n\"We make enough to be comfortable,\" Melinda said. She handles all of our group finances because she's the most even-keeled. \"Each of us has a generous allowance and we can easily make our bills. We don't have any real vices&mdash;\"\n\n\"Except for someone's doll collection,\" Leah interrupted.\n\n\"They're not dolls!\" I exclaimed, reaching over to tickle her. \"They're action figures, dammit!\"\n\n\"Still into Star Wars, huh?\" Geoff asked with a grin.\n\n\"They're going to put our kids through college one day,\" I said, feigning defensiveness.\n\nMelinda snorted before continuing. \"And none of us are out-of-control big spenders. We sat down several years ago and once we got our finances straightened out, it's made our lives a whole lot easier.\"\n\n\"Are you still in the real estate business?\" Mimi asked.\n\n\"Not really,\" I said. \"We did really well when the market was booming, but now with all of the sub-prime mess that's gone on for the last couple of years, prices have dropped a bunch so the days of making eighty or a hundred thousand dollars on a house are gone.\"\n\n\"It also takes a lot of time,\" Leah added. \"Even if we do all the work ourselves, it almost becomes a second full time job.\"\n\nWe then got talking about our kids. We showed off a couple of pictures and they did the same. And then the conversation turned to old times. We swapped a couple of high school stories, and Mimi shared a couple that Leah and I had avoided telling (or forgotten) over the years.\n\n\"Why was it that you and Geoff went to jail?\" Mimi asked, trying to needle us.\n\n\"You got arrested?\" Melinda looked a little startled. Leah still teases me because I'm the only person we know who got through middle school and high school without once ever being written up or given detention, so the idea of me getting picked up by the cops was a little shocking.\n\n\"We didn't actually get arrested,\" Geoff said. \"It was more like detained.\"\n\n\"For a hate crime,\" Leah snickered.\n\n\"It was not a hate crime,\" I laughed. The wine had loosened me up a little. \"We were just out having some fun.\"\n\n\"So what happened?\" Katie wanted in on the joke.\n\n\"Each year at homecoming, everyone plays practical jokes on everyone else,\" Geoff smiled at the memories. \"So we were out having some fun at Jeremy . . . what was his last name?\"\n\n\"Frumpkin,\" I said, filling in the blank.\n\n\"Oh, that's right. We were having some fun at Jeremy Frumpkin's expense. Usually, people would TP someone's house, steal a lawn gnome, cut distributor wires or something like that,\" Geoff paused to take a sip of his wine. \"It was the two of us and Chuck Campbell driving the getaway car. We were over at Jeremy's and their grumpy old neighbours called the cops on us.\"\n\n\"What makes TPing someone's house a hate crime?\" Melinda asked. Leah and Mimi were trying not to burst out laughing.\n\n\"We didn't actually TP Jeremy's house,\" I grinned. \"We were putting out a nativity set and hanging Christmas lights on their front porch.\"\n\n\"In October,\" Geoff chuckled.\n\n\"So what makes that a hate crime?\" Melinda repeated.\n\n\"The Frumpkins are Jewish,\" Leah beat us to the punch line.\n\nWe all laughed.\n\n\"So they didn't press charges?\" Katie asked with a smirk.\n\n\"No,\" Geoff replied. \"His folks could take a joke, and if they had been home at the time, they would have let us go. Besides, Jeremy got his revenge the next year when he put a menorah on my porch and painted your husband's door with lamb's blood.\"\n\nI started to say something, but stopped. That was the first time anyone had called me \"Katie's husband\" and the occasion made me smile. Katie and the other girls, too.\n\n\"So tell me all about your rings,\" Mimi picked up on the cue and took Katie's hand to admire the jewelry.\n\n\"They're brand new,\" Katie blushed. \"We just got them the other night. . . . When we all got married.\"\n\n\"So this a new arrangement?\" Mimi look a little shocked.\n\n\"Yeah . . . I guess so,\" Katie replied. It seems the reality of our promises had just caught up the girls as well. \"We've been living as a foursome for the last ten years, but last night was our first one together.\"\n\n\"Well congratulations,\" Mimi said with a warm smile. She still had not let go of Katie's hand. \"Now tell me about your rings. They're fabulous.\"\n\n\"Leah and I got them a few months ago when we were in Las Vegas,\" Katie said, pulling her ring off and handing it to Mimi. \"After graduation, we went on a cruise to the Virgin Islands and stopped at a place on . . .\"\n\n\"St. Thomas,\" Leah interjected as Katie looked over for some help.\n\n\"Yes, on St. Thomas called the Passman Gallery,\" Katie picked up. \"They specialise in black coral jewelry. We couldn't afford anything at the time, but now they have a store at the Venetian in Las Vegas, and when Leah and I went out there for a conference, we had them custom-make some rings for us.\"\n\n\"How long have you been sitting on these?\" Melinda asked. I could see her counting back to figure out when the other two had slipped away together to pull this off.\n\n\"Since October,\" Katie admitted sheepishly.\n\n\"I didn't think she'd be able to make it,\" Leah snickered. \n\n\"Why not?\" Geoff asked.\n\n\"Because if you want to keep a secret, don't tell Katie,\" Leah said, reaching over to stroke the redhead's hand. \"She usually slips up at some point and lets it out.\"\n\n\"They're beautiful,\" Mimi slid the ring back on Katie's hand.\n\n\"Thank you,\" Katie replied.\n\nIt may have been a trick of the lighting, but I thought I saw Mimi and Katie's eyes meet for just a second. It seemed to me that something passed between them, but that could have just been the wine in me.\n\nWe stayed up late, talking and reminiscing with Mimi and Geoff. Katie and Melinda, who were initially cautious around our friends, soon opened up. I think they were also a little intimidated by Mimi's looks. I know that sounds catty, but sometimes the girls are still a little insecure about their appearance.\n\nFor the record, I believe that Melinda, Leah and Katie are the most beautiful women in the world. But none of them are going to win any pageants. They're too short to be models, too curvy to be on TV and too grounded to be celebrities. But I wouldn't trade any of them for anyone. Nor would I change anything about any of them, even if each has a list of things they would have done if given the opportunity.\n\nMimi and Geoff's natural charm, combined with Leah and my friendship, got through to the other two girls and soon we were all laughing and talking as if we had all known each other for years.\n\nAll too soon, our night together came to an end. \n\nAs one last favour, we had Geoff take a picture of the four of us. Although none of us were dressed up, each of the girls looked radiant. I had a goofy smile. We had our arms around each other and were holding hands. When we got home, we had some more pictures&mdash;more formal pictures&mdash;taken, but for us, that was always our wedding photo.\n\nWe swapped phone numbers and email addresses, and promised to visit one another. As they were leaving, I overheard Mimi saying something to Leah. Her voice was low, as if she didn't want anyone to hear. \"Think about it, okay?\"\n\nLeah nodded non-committally, then we walked our friends out. Mimi and Geoff gave us each a hug, then drove back to their rental house\n\nMelinda and Katie cleaned up the kitchen. I built a fire in the living room while Leah sat on the couch and stared off. I waved my hand in front of her face; it took her a second to come back from La-La Land.\n\n\"Do you want something to drink?\"\n\n\"No, thanks,\" she shook her head.\n\n\"It was good to see them again,\" I said.\n\n\"Yes, it was,\" Leah replied absently.\n\nKatie came over and sat down next to our wife. \n\n\"So what happened between you two?\" There was a little bit of jealousy in her voice.\n\n\"Nothing, baby,\" Leah blushed.\n\n\"I don't believe you,\" Katie said sternly. Neither of us had seen Mimi or Geoff in over a decade, and certainly not since our trip to Disney World. Still, Katie never liked it when we talked about our old relationships. \n\nI think part of that came from the fact that she really didn't have a whole lot of experience outside of our foursome. Her ex-boyfriend Carl was her first and the three of us were her only other lovers. By comparison, Melinda, Leah and I all did our fair share of \"playing the field\" and though none of us were exactly loose or promiscuous, Katie always felt like she had lived a more sheltered life.\n\nLeah hemmed and hawed for a few moments. Melinda joined us on the couch.\n\n\"We made out once or twice,\" Leah confessed. \"It never went further than that. It was during the summer after our sophomore year.\"\n\n\"Ah, that explains much,\" I said softly.\n\n\"Why's that?\" Katie asked.\n\n\"Mimi had a rough year. From what I heard, her folks got divorced and it was messy,\" Leah explained. \"I think her parents both used her to get back at the other. She doesn't talk much about it, but she and Geoff broke up for a little bit.\"\n\n\"And you were there to catch her?\" Katie's eyes narrowed.\n\n\"No . . . no, nothing like that,\" Leah put her arm around the redhead. \"We went out to a couple of clubs cruising for guys and couldn't find anyone worth our time.\"\n\n\"So you made out with her?\"\n\n\"We were a little drunk.\" Leah certainly didn't have anything to apologise for. It wasn't like she was cheating on us. To be fair to Katie, though, I think it's human nature to be jealous of anyone else who has made out with the person(s) that you love.\n\nKatie took a deep breath and let it out, as if willing her jealousy away. Then she switched topics. \"So what else did she want?\"\n\nLeah blushed. \"Mimi asked me about our arrangements . . . sexually. She said there was something she wanted us to see . . . and she wanted to know if we'd come visit them this summer.\"\n\nMelinda and Katie both looked over at me.\n\n\"She didn't say anything of the sort to me,\" I shrugged.\n\nReaching into her pocket, Leah brought out a business card. It read \"Meadows Enterprises, Inc.\" and listed some contact information, including a website, a login and a password. \"Honey, did you bring your laptop?\"\n\n\"I'll go get it,\" Melinda said, curiosity in her voice. \n\nI love mobile broadband. You should, too.\n\nAfter a few minutes, the four of us were staring intently at the images on the screen. None of us said a word for a long time.\n\n\"Wow,\" Melinda breathed once the first video had played all the way through.\n\nI looked at each of the girls. They were all short of breath. Their nipples were all crinkled up. All three had the same wild look in their eyes.\n\n\"We're going to see them this summer,\" Katie said, and there seemed to be no room for discussion in her voice.\n\nActually, we didn't go visit them in Atlanta; they came to see us, but that's another story for another time.\n\nI led the girls back to the bedroom and we made love well into the night. Despite all the surprises and the twists of the last 48 hours, I was more in love with Melinda, Leah and Katie than ever before. It seemed that the previous eleven years culminated in this weekend, when the four of us proclaimed our love for one another and made our unspoken arrangements as official as they could be.\n\nWe held each other, reveling in our bare intimacy. There was loving laughter and tender promises. We talked about the next fifty years of our lives. Together.\n\nI fell asleep amidst a sea of bodies, wanting nothing more than to be close to the three people I loved more than anyone else in the world.\n\n************************\n\nNine months later . . .\n\nKaylee and I sat at the computer in the pool house. Her hand expertly moved the presentation mouse that was just the right size for a five year-old. As she clicked on each of the eggs, she counted along with Elmo until all the eggs showed a number and then we got out of our chair and did the chicken dance. Then we did it all over again.\n\n\"When's Momma gonna have her baby?\" she asked me.\n\n\"I don't know, sweetie, any day now,\" I replied, then kissed her cheek. \"I wanted to tell you that you've been a great big sister to Bryan, Gwen and Gabi and I know you'll be good to your new sisters, too.\"\n\n\"What about Momma's baby?\" Kaylee said. \"Is she having a boy or a girl?\"\n\n\"We don't know,\" I told her. \"We wanted that to be a surprise. What do you want her baby to be?\"\n\nKaylee thought for a minute. \"I'd like another sister.\"\n\n\"Are you sure? That would make six little sisters.\"\n\n\"Yes, I'm sure,\" she replied in her grown-up voice. \"Girls are more fun than boys.\"\n\nI laughed. \"You know what?\"\n\n\"What?\"\n\n\"I love you,\" I said.\n\n\"I love you, too.\"\n\n\"You know what else?\"\n\n\"What?\"\n\n\"You did something your brother or your sisters will never do,\" I gave her a big hug.\n\n\"What's that?\"\n\n\"You made me a daddy,\" I said. \"With everyone else, I was already a daddy, but you made me a daddy for the first time.\"\n\nEveryone else was in the big house. All of our parents had come in&mdash;except Katie's mother, of course&mdash;and it was a zoo. A part of it was that it was Christmas time. Another part was that we were expecting four babies.\n\nYes, you heard that right. Four kids. \n\nAll of the girls got pregnant that weekend we were away, and as a bonus, Leah had twins, which we later found out were fraternal. One of the nice things about being wealthy is that we could afford the best medical treatment available. After repeated visits to the doctor, all three girls were declared to be in good health, so instead of going to the hospital to have our babies, we opted for home delivery.\n\nLeah was first, on December 19, giving birth to healthy little girls. Melinda was next on December 21, also with a girl. Now it was Christmas Eve day. Besides our seven parents, both of Katie's sisters, Melinda's brothers and my brother and sisters showed up (Leah is an only child). Of course, they all brought their spouses and children. Our house was bursting at the seams; I think we had thirty guests. \n\nPlus there were the eight of us and our three&mdash;soon to be four&mdash;newborns. Thank God the addition was finished.\n\nAfter getting back from our weekend getaway, the girls started nesting. The first thing we did was to move into one bedroom. What used to be Melinda and my room had the better morning view, so we had a custom-made Tempur-pedic&reg; mattress and frame delivered that was big enough to fit all four of us (plus the kids if we didn't mind being close).\n\nThen we started planning an addition of four more bedrooms and a living room intending to use the other master suite as a temporary nursery and later for guests. At first we wanted to save some money by doing a lot of the work ourselves, but after a couple of weeks we decided to let the contractor do everything because, quite frankly, with three pregnant women and four kids in the house, none of us had the inclination to lift a hammer, hang drywall or paint. Even though it wasn't cheap, that was the best money we ever spent on the house.\n\nWhen the four new bedrooms and a new playroom were completed, we started moving people around. Kaylee wanted one of the new rooms (she thought they were bigger; they're not), so we moved all four of the older kids downstairs. For right now, all twelve of us will be on a single floor and when the babies get old enough, we'll move them upstairs, which are already wired for baby monitors, both video and audio.\n\nLet met say right now that if you ever get a say in the matter, don't do anything that puts three pregnant women in the same house together. I'll be polite and call it a \"million dollar experience\". That is, I wouldn't trade my three wives and four new children for a million dollars, but nor could you pay me a million bucks to do it all over again.\n\nIf you're a guy who has ever endured and survived your wife or girlfriend's pregnancy, you know a little bit of what I'm talking about. Remember the cravings? Hormones? Mood swings? General craziness?\n\nTake all that and then multiply by three. No, make that thirty. Most of the time we had good days. But some days were downright awful. Sometimes the girls were there to support each other and help one another through the rough spots, but other times, they fed off each other. It's a good thing our memories tend to erase the bad times because there are about eight days of the last nine months that I'd like to forget. \n\nEven though she had her moments, Melinda was the rock for us all. Part of it was her even, unflappable nature. Part of it was that she had done it before (twice, in fact). And part of it was that she is simply the strongest willed of all of us, and she tried her damnedest not to have too many bad days or let us have bad days ourselves.\n\nSomehow we survived the whole pregnancy thing and Melinda and Leah had healthy little girls. Our folks have also been invaluable to us, not only as resources, but as babysitters for the other four kids. One thing that we wanted to make sure of was that Kaylee, Bryan, Gwen and Gabi didn't feel like we were pushing them aside.\n\nHaving their grandparents around to spoil them with attention made the older four kids a lot more accepting of the new situation. We also tried to tell them that even though there were going to be more children in the house, and we might not pay as much attention to them as we'd like, we still loved them all. Hence me and Kaylee sneaking off to pay a visit to SesameStreet.com.\n\n\"Kaylee, are you and Daddy out here?\" Katie called.\n\n\"We're upstairs, Momma!\" our daughter yelled. \n\n\"Why don't we go meet her?\" I said. Katie was ready to go literally at any minute and I didn't want her walking up steps unnecessarily. Just as Kaylee was hopping off my lap, I threw my arms around her in one of my patented \"octopus\" hugs. \"I love you, sweetheart.\"\n\nShe gave me the look that always melts my heart. Kaylee has already learned that if she's judicious in its use that she can get pretty much anything she wants. I don't know what I'm going to do when the girls become teenagers. \"I love you, too, Daddy.\"\n\nHand in hand, we went downstairs into my garage/woodshop. Katie was wrapped in a long coat for the short walk from the big house to the pool house; it was Christmas time in the North Carolina mountains, after all.",
        "\"Grandpa and Grandma are looking for you,\" Katie said to our daughter. \"I think they want to take you, Bryan and the twins to Billy Bob's.\"\n\nKaylee's face lit up at the mention of her favourite place. My parents must be gluttons to take four kids under the age of 7 out for pizza, video games and ski ball. I hoped they were taking reinforcements (probably some combination of my siblings, in-laws, and their kids). She gave Katie a kiss on the cheek, a pat on the belly and then bounded off, leaving Katie and I alone.\n\n\"How are Melinda and Leah?\" I asked.\n\n\"They're fine,\" Katie said, looking tired. Her hair was a mess. She looked like she hadn't slept in days. She was in the waddling stage. \"They're laying down with the girls.\"\n\nShe must mean the new girls.\n\n\"Everyone else is clearing out to give them some peace and quiet. I don't suppose you want to go to Billy Bob's, too?\" she asked, knowing my answer already.\n\nI just laughed. \"Not a chance in Hell.\"\n\n\"I tried to give your brother some money, but he wouldn't take it,\" Katie said as I took her in my arms. She leaned her head against my shoulder and let out a deep sigh. \"I can't wait to get this baby out of me.\"\n\n\"We could do something to make that happen,\" I lifted her chin up and flashed her a pernicious grin.\n\n\"We could?\" Katie was trying to look innocent. \"Like what?\"\n\n\"Like that thing you did to Melinda about a week ago.\"\n\n\"You're going to use a strap-on on me?\"\n\n\"I don't need a strap-on,\" I brought her lips up to mine and kissed her deeply.\n\n\"No, you certainly don't,\" she said running her hand up the inside of my leg.\n\nMy hand went to the inside of her coat and I found out that she wasn't wearing anything underneath.\n\n\"You're a naughty little girl, Red,\" I whispered.\n\n\"Only because you made me that way,\" she laughed. Then she kissed the side of my neck in that one spot that drives me crazy. Her voice was only a whisper, \"Take me upstairs and make love to me.\"\n\nI didn't need any coaxing. I vaguely heard cars starting up and driving off, but most of my attention was on the lovely redhead in my arms.\n\nAfter walking her up the steps and over to the bed, I pushed Katie on her back. Her coat fell open, revealing her naked, pregnant body.\n\nMy eyes devoured her. Pregnancy filled her out nicely. Katie is the most petite of my wives, and her small frame could use a few more pounds to make her look like more than skin and bones.\n\nShe saw where my eyes were and cupped her breasts in her hands. The four-leaf diamond pendant hung between her breasts. \"You like me with tits, don't you? Maybe I should stay pregnant just so I get to keep these boobs.\"\n\n\"You'll get tired of them,\" I warned.\n\n\"But you won't,\" Katie replied.\n\n\"I won't get tired of you,\" I said, unbuckling my belt. My jeans and boxers fell to the floor. I caressed Katie's swollen belly. \"I'll never get tired of you.\"\n\n\"No,\" Katie whispered, as I began to kneel. \"I want you inside me.\"\n\nMy hands tenderly squeezed her breasts. Her nipples were hard little points, and not just because it was December.\n\nThe bed was just the right height for me (not a coincidence) and my erect cock brushed against the warm slit of her pussy. Katie purred.\n\n\"I love you,\" she whispered.\n\n\"And I love you, Katelyn Marie,\" I said gently. \"You are the most beautiful woman in the world.\"\n\n\"I'll bet you say that to all the girls,\" she said teasingly.\n\n\"Only to the ones about to have my baby.\" My smile matched hers. One thing you can never tell a woman too much is that she's beautiful. Especially when she's carrying your child.\n\nEver so gently, I put my hands on her belly.\n\n\"He's ready to come out,\" Katie said softly.\n\n\"Are you sure it's a boy?\"\n\n\"Positive.\"\n\n\"You didn't sneak in an ultrasound when I wasn't looking?\" I asked. My cock was in my hand and I rubbed it against her labia.\n\nShe gasped as I slowly pushed into her. \"No . . . I just have a feeling.\"\n\nKatie's closed her eyes as I sank into her. There was a contented smile on her lips.\n\nI pulled back so just the tip was still inside her pussy, then I slowly thrust forward. Her belly was like a basketball hanging off the front of her lithe body. She couldn't reach her clit, so I rubbed my thumb against her nub, drawing a delighted squeal from my wife.\n\n\"I guess I should ask you how you like your birthday present,\" I said with a smile.\n\n\"I love it,\" she replied. I pulled back and made the next stroke a little firmer. \"Do it harder.\"\n\nTaking Katie's legs, I put her calves on my shoulders so I could go all the way into her. My hips smacked against her perfect little ass.\n\n\"I want this to last, Baby,\" I teased. \"This will probably be the last pussy I get for a few weeks.\"\n\n\"Oh . . . I don't know about that,\" Katie moaned between strokes. \"I forgot to tell you . . . Mimi and Geoff called this morning . . . to see how everyone was doing . . .\"\n\n\"And?\"\n\nKatie wrapped her hands around mine, as if to pull me deeper inside her. I picked up my pace.\n\n\"And they're coming up in two weeks . . . I told them . . . oh, right there! . . . That you were going to need some of her 'special' attention,\" Katie's eyes rolled up into her head.\n\n\"I think you might need some of her 'special' attention, too,\" I panted. \"God, your pussy is tight!\"\n\n\"That's just the contractions, Tiger,\" she breathed. Katie opened her eyes enough to stare lovingly into mine. \"Are you still going to think that pussy's tight after your baby makes me all loose?\"\n\n\"That's why we do Kegels,\" I replied with a smirk.\n\n\"We don't do Kegels,\" she laughed. \"Only us girls do.\"\n\n\"And they kept Melinda tight after two kids,\" I reminded her before playfully slapping at one of her little tits. \"And yes, I do Kegels, too. They avert premature ejaculation, incontinence and help me become poly-orgasmic.\"\n\n\"Poly-what?\" Katie giggled. \"But I didn't think you liked guys.\"\n\nI rammed my cock into her, causing her to cry out (in the good way). \"That's what you get for buying me a word-a-day calendar.\"\n\n\"Farm boy,\" she said with a delighted grin. \"Shut up and fuck me.\"\n\n\"As you wish,\" I said, doing the most graceful bow I could while still inside her.\n\nSoon enough, the room was filled with Katie's moans as she thrashed about on the bed. I tried to wait until her orgasm was passed before I pulled out and came all over her swollen belly.\n\n(Call me weird, but once the girls started showing, it felt a little weird for me to be cumming inside the pussy that held my child.)\n\nKatie and I lay wrapped in each other's arms for a long time, then we went back to the big house. We found Leah and Melinda in our bed. They were propped up against some pillows on the headboard holding our new daughters in their arms. They all looked so beautiful. \n\nMelinda's head was tilted to the side, resting on Leah's shoulder. We slipped into the large bed. I took one of the newborns in my arms and cradled her to my chest. Katie curled up against me and the seven of us (eight if you count Katie's belly) lay there for the rest of the afternoon. Waiting.\n\nIt turns out Kaylee got her wish and Katie's intuition was wrong.\n\nThe fourth baby, a beautiful little girl, was born the next day right after all the gifts under the tree were opened.\n\nShe was the perfect Christmas present.\n\n************************\n\nOne of the advantages of having a home delivery is that you don't have all that hospital documentation to worry about if you want to be . . . um, creative . . . with your records. By adding a little \"extra\" to the midwife's fee, we got to \"adjust\" the girls's birthdays.\n\nIn actuality, the four girls were born over a span of six days, but all four birth certificates read December 25, and we call them \"the Christmas quadruplets.\" I've sworn all the family to secrecy and we like having birthdays to celebrate along with the other holiday festivities.\n\nLike all parents, we tossed around ideas for names. We kept a big dry erase board in the downstairs play room where we put down names we liked. Since we wanted the sex of the babies to be birth day surprises, we had lists of boys and girls names. We held off on naming any of them until all four were born in case we wanted to use a set of names (i.e.&mdash;Athos, Porthos, Aramis, and D'Artagnan). Some were traditional names, some were ones we just liked, some were family names and some were off the wall. \n\nI wanted to name them Anne, Dorcas, Gillian and Miriam (five geek points if you can name the reference), but Melinda said she wasn't naming anyone \"Dorcas\"; not that there's anything actually wrong with the name, but it was going to invite ridicule, kind of like naming and American kid Wolfgang.\n\nLeah pushed hard for seasonal names, partly because she likes the Carole King song You've Got a Friend, but we couldn't bring ourselves to name a girl Spring to go along with Winter, Summer and Autumn. Too hippie.\n\nWe finally decided to give them elemental (earth, air, fire and water) names: Terra, Tempest, Serafina and Brooke. I honestly don't know who gave birth to which of the kids and quite frankly, I don't care. They are all healthy and one day they will have the world at their feet. The girls mother them all, and I'm not sure if they know which ones are \"theirs\" but I think I speak for everyone involved when I say that each of the kids are \"ours.\" \n\nYes, we dress them in matching clothes. And we take lots of pictures. What's the point in having twins, triplets or \"quads\" if you're not going to treat them as such? We're putting money aside for college or therapy, whichever costs more.\n\nMy seven daughters are already a handful (I mean that in the nicest possible way) which means they will probably all be high-maintenance princesses because&mdash;despite our best efforts&mdash;we spoil them with love and attention. To compound my troubles, they're all going to be gorgeous, so I bought a home engraving kit to stencil the names of would-be suitors into bullets for my .44 Magnum.\n\nAfter the quads were born, Katie and Melinda went back to work while Leah stayed home with me for as much time as she could take off. Then the other two rotated through, using the time they are entitled under the Family and Medical Leave Act so I had some help at home with the kids. They have all cut back on their work and spend a lot of time with our children.\n\nAs I look back on where our lives have gone, I have learned a few things:\n\nFirst of all, sleep is vastly underappreciated until you're not getting any. So is sex. Second, there is nothing more wonderful than the sound of a child's laughter. Third, if you find a woman (or three) who is willing to put up with your snoring and teeth-grinding, keep her (or them). Fourth, you can never tell your children and your spouse(s) you love them too often. Fifth, your kids will be just like you, so whatever hell you gave your parents will come back on you tenfold. Sixth, you can't tell who the kinky people are just by looking at them. And finally, with apologies to Lou Gehrig, I am the luckiest sonofabitch on the face of the earth.\n\nAnd we're still living happily ever after."
    ],
    "authorname": "HLD",
    "tags": [
        "polygamy",
        "romance",
        "anal"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/weekend-getaway-12"
}