{
    "title": "The Agency Ch. 13",
    "pages": [
        "*Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\nMichelle awoke in the darkened room, head somewhat spinning, balls definitely aching and bladder full. While it took her a moment to remember where she was, it took no time at all to realize she was still pressed into the back of Brenda. She was warm, soft, and her body molded to Michelle's almost perfectly. As much as Michelle didn't want to move, she had to relieve her bladder soon, but her right arm was under Michelle's neck between the sleeping woman's shoulder and pillow. Michelle slowly backed away, feeling the cool air quickly fill the space between them, as she tried to back out of the bed.\n\n\"No,\" Brenda groused, rolling onto her back, gripping Michelle's left hand and pulling her back into a spooning position, \"warm.\"\n\n\"I have to go to the bathroom though.\" Michelle whispered feeling Brenda nuzzle and wiggle back into her.\n\n\"Hold it.\" Brenda replied.\n\n\"If I could, I would silly.\" Michelle whispered as she tried to extricate herself again.\n\n\"Hmfph!\" Brenda grumped.\n\n\"You're cute when you pout.\" Michelle giggled as she slipped out of the bed. Stepping into the bathroom and closing the door, Michelle turned on the light, catching the first glimpse of herself in the mirror. \"Aren't you a sight?\" She said to her reflection, rolling her eyes.\n\nMichelle tended to her bladder first, then removed her wig and makeup. It would be the first time Brenda would see her without both, as well as naked, which was a horrifying proposition for Michelle. Staring at herself in the mirror, Michelle considered her options. On one hand, she could try to get dressed in the dark and sneak out of Brenda's place at God knows what time; or, she could slip back into bed with the incredibly attractive naked woman who didn't want her to leave!\n\n\"Well that's a no brainer!\" Michelle whispered to herself before shutting off the light.\n\nWalking slowly through the unfamiliar bedroom, Michelle's shin bumped into the bed first. Feeling her way around, Michelle slid under the covers moving herself close to Brenda's body. A bit of light seeped through the window, allowing Michelle to see the curve of Brenda's hips and her head resting on the pillow. As she tried to figure out how to slide her arm back underneath Brenda's neck without waking her, Brenda suddenly shifted.\n\n\"Now I have to pee,\" Brenda grumped, \"your fault.\"\n\n\"Sorry.\" Michelle replied as she watched Brenda slowly get out of the bed.\n\nHer body silhouetted against the window, Michelle watched wide eyed as Brenda stretched her arms above her head for a moment. Even in the moonlight, Brenda was stunning. Michelle watched as the nurse headed off to the bathroom, then tried to fix the sheets for when she returned. As she heard the toilet flush Michelle tried to remain calm, quickly becoming pleased at the fact that the bedroom was so dark.\n\n\"That was scary,\" Brenda's voice was marginally more awake sounding as she plodded back to bed, \"I thought there was a silly foo foo dog on my vanity for a moment.\" Brenda said as she climbed back into bed. \"And I'm thinking, I don't own a dog!\" Moving to Michelle, Brenda pressed her body into Michelle's, pinning Michelle on her back as she did. \"In the morning you're going to have to help me figure out something.\"\n\n\"What's that?\" Michelle asked as Brenda's body pressed into hers while sliding a leg between Michelle's.\n\n\"Well, either I have a boyfriend that has boobs,\" Brenda said cupping Michelle's left breast in her hand as she laid her head on Michelle's shoulder, \"of if I have a girlfriend with a dick!\"\n\n\"It's a deal.\" Michelle replied wrapping an arm around Brenda while stroking her hair with the other hand.\n\nMichelle was glad she'd chosen to return to the bed, even though Brenda's hip was pressed a bit into her cage, she could feel the warmth of her body and breath on her neck as Brenda slept. Their legs seemed to intertwine as Michelle's lover softly snored. It wasn't long before she was asleep as well, reveling in the fact that Brenda was asleep in her arms.\n\nHours later the couple stirred again. Michelle felt Brenda slowly stretch against her body, the hand that had been on Michelle's breast now on her side, pulling her tight to Brenda's body. The straining inside her cage made Michelle hope she'd be rewarded with an orgasm again by Ms. Allison. She already knew she wasn't above begging!\n\n\"Good morning.\" Brenda's voice still had a hint of sleepiness to it.\n\n\"Good morning to you!\" Michelle replied giving Brenda a firm hug. \"How did you sleep?\"\n\n\"Apparently you're a pretty good pillow,\" Brenda chuckled as her right hand moved Michelle's side, \"because I haven't slept that well in quite a while!\"\n\n\"Well, it was a busy night too.\" Michelle replied feeling Brenda's fingers slowly tracing her body toward her breast.\n\n\"Did you have fun?\" Brenda lifted her head, placing her chin on Michelle's chest, eyes bright and wide open.\n\n\"I did actually,\" Michelle replied sincerely, \"I was really scared but you helped a lot with that, thanks.\"\n\n\"I'm very glad about that! I didn't want you to feel out of place!\"\n\n\"How could I ever feel out of place? A guy in a sexy dress, surrounded by women in sexy dresses, going to a night club to get hit on by guys who don't know he's a guy!\" Michelle inhaled, giggling slightly, then continued, \"Then going to a place to watch big buff guys dance around in the tiniest bits of clothing they could find all while shoving 5 dollar bills into those tiny bits of clothing!\"\n\n\"Exactly!\" Brenda laughed heartily. \"Nothing to feel out of place about at all!\" She lifted herself enough to put her chin in her hand before continuing. \"I mean, it would have been weird if you'd ended up kissing on of them.\"\n\n\"One of the girls? The guys dancing with us? Or the guys dancing for us?\" Michelle chuckled in response.\n\n\"All of the above!\" Brenda replied playfully shoving Michelle's shoulder. \"Brat!\"\n\n\"Well then I have to admit,\" Michelle swallowed and paused momentarily for effect, \"I may have grazed a dancer's stuff when I was putting money in his bottoms.\"\n\n\"May have?\" Brenda blurted. \"I'm pretty sure I wrapped a 5 around a guy's cock last night!\"\n\n\"I didn't see it when I went to the bathroom.\" Michelle replied with a smile.\n\n\"If I'd known you could do what you did,\" Michelle visibly shuddered as she spoke, \"we never would have left the apartment last night!\"\n\n\"Well,\" Michelle raised her eyebrows a bit, \"if you want a repeat.\"\n\n\"Hold on there hot stuff,\" Brenda replied, \"coffee first, orgasms second, or maybe third because I'm starving!\"\n\n\"Okay, I'll go make coffee then.\" Michelle said, still not wanting to move.\n\n\"Sounds good,\" Brenda replied, in no rush to move either, \"did you bring something to put on?\"\n\n\"I even brought something to sleep in,\" Michelle giggled, \"but I guess I didn't need that!\"\n\n\"Next time you sleep over you can wear something to bed,\" Brenda replied as she slowly moved, \"or you can just put it on in the morning like this morning!\"\n\nFor as slow as Brenda had moved to get out of bed, once out of it she was off and into the bathroom like a shot. Michelle barely had a moment to appreciate Brenda's bare ass as she hustled to the bathroom. Getting herself going, Michelle opened her overnight bag removing the strappy lavender nightie and matching bikinis, taking them toward the kitchen with her. As she got the coffee going, Michelle stepped into the panties, wincing slightly as the material squeezed her swollen testicles, then pulled on the nightie. The nightie had floral lace cups, lace trim, and four straps from each shoulder that crossed Michelle's back on their way to the opposite hip. Just as she heard the toilet flush, Michelle was placing two steaming cups of coffee on the small kitchen table.\n\n\"Well I guess that answers my question from last night,\" Brenda chuckled as she stepped out of the bedroom with an oversized hoody and spandex shorts, \"you're my girlfriend with a dick!\" Michelle blushed deeply at the comment. \"Cuz no one will believe you're my boyfriend if you keep dressing more girlie than me!\"\n\n\"I have to dress up girlier than you,\" Michelle finally replied, \"I'm obviously compensating for not being a girl.\"\n\n\"Well I think you look sexy.\" Brenda replied. \"But I prefer comfort!\"\n\n\"I can understand that.\" Michelle replied, stepping behind Brenda and slipping a hand underneath the sweatshirt onto Brenda's bare tummy. \"Comfort has its benefits as well!\" Michelle whispered as she slid her hand\n\nSipping coffee, the two eventually decided they needed to make breakfast, and did so jointly. The tiny kitchen space of Brenda's apartment led to some inadvertent touching, which led to some very deliberate touching. They'd barely finished breakfast when they found themselves on the couch, Brenda laying on top of Michelle as their hands feverishly explored each other's bodies. While the hooded sweatshirt Brenda had on did little to show off how amazing she looked, Michelle appreciated how quickly the oversized garment slid off Brenda's body. Kissing deeply, Brenda pulled down the straps to Michelle's nightie exposing her petite breasts.\n\n\"I've always wondered how well that cream works!\" Brenda cooed as she slid downward, positioning her mouth over Michelle's breasts while cupping and squeezing both of them. \"I have to admit, their kinda sexy!\"\n\nMichelle wiggled underneath Brenda as she started to caress and kiss her small breasts. It was such an odd yet exciting experience. Her skin had become softer over the months of applying body butter after showers, the estrogen cream seemed to have added to the sensation. As much as anything, the visual of Brenda's tongue flicking and circling her nipple was exhilarating. Michelle felt her body reacting in ways she'd never experienced before, she knew her caged cock was leaking like a faucet, her balls felt tight and full, but beyond that her asshole tingled. Watching and feeling Brenda nibble and lick her nipple, Michelle wanted to be fucked. She moaned softly, not even realizing she was doing it until she heard herself.\n\nBrenda's hands tugged Michelle's nightie further downward, until it was gathered around her waist. She wasn't sure what she was doing, she'd never been attracted to women, or any of the clients who'd come through the office from the Agency downstairs. There was something so different about Michelle though. Brenda could feel her own excitement as well as Michelle's. Last night Michelle had devoured her and brought her to new levels of ecstasy she'd never known possible, she wanted to somehow return that feeling to her lover. Brenda's hands slowly glided over Michelle's body, to her hips, as she kissed her way downward.\n\n\"What are you doing?\" Michelle moaned softly as she asked.\n\n\"I have no idea,\" Brenda nervously answered, \"just let me do this.\"\n\nMichelle didn't answer, instead she lifted her butt as best she could allowing Brenda to pull down the tiny bottoms she'd been wearing. Brenda sat up enough to pull Michelle's panties off her legs and toss them aside. Pausing momentarily to look Michelle over, she was beautiful and special in her own way. Their eyes met, conveying the emotions of the moment. Michelle should have felt incredibly self-conscious, she was totally exposed, her caged sex organ on full display, but there was something reassuring about the way Brenda looked at her. Instead, Michelle put her left foot on the floor and right foot on the back of the couch exposing herself even further. Brenda's hands nervously touched Michelle's upper thigh, nails slightly dragging against her soft skin.\n\n\"Doe's it hurt?\" Brenda asked softly as she stared at the cage.\n\n\"Not really,\" Michelle answered softly, \"it does get slightly uncomfortable at times though.\"\n\n\"Like when?\" Brenda leaned forward slowly, eyes still transfixed on Michelle's crotch.\n\n\"Like when I'm sleeping next to a really hot and totally naked brunette!\" Michelle groaned as Brenda's lips touched the crease of her leg. \"Or her hair is tickling my balls!\"\n\n\"Oh, you mean like this?\" Brenda smirked as she tilted her head letting her hair fall over Michelle's aching crotch.\n\nBefore Michelle could answer, Brenda flipped her hair from one side to the other then gave Michelle's swollen balls as slow lick. Michelle's back arched, her legs strained to spread further as Brenda's tongue slithered over her soft skin. Closing her eyes, Michelle's hands moved to her chest, giving her nipples slow tugs while squeezing her saline filled chest. Brenda looked up, seeing Michelle's reaction and finding herself further turned on by the sight. She'd had a past boyfriend who always tried to encourage her to play with her chest while he ate her pussy, now she understood why! Brenda's pussy fluttered at the sight, squeezing her thighs, she knew her bottoms were soaked. Wrapping her lips around Michelle's cage, Brenda tasted the precum her partner had been oozing.\n\n\"Ohhhh!\" Michelle moaned as she felt the warmth of Brenda's mouth around the cage.\n\nLooking down, Michelle was amazed as Brenda slowly, seductively and lovingly worked her mouth over the cage. While the sensation was far different from any other blow job she'd gotten in the past, the visual aspect of it was enough to drive her crazy. Brenda's hand massaged and squeezed Michelle's aching balls.\n\n\"So this thing has to stay on huh?\" Brenda asked before taking one of Michelle's balls into her mouth and sucking it softly.\n\n\"I can't take it off.\" Michelle groaned as much from lust as frustration. \"God do I ever wish I could!\"\n\n\"How do you?\" Brenda searched for the words to ask a very awkward question. \"Well, get off?\"\n\n\"It's kind of embarrassing.\" Michelle responded.\n\n\"I think we're past the stage where being embarrassed is an issue.\" Brenda smirked.\n\n\"True.\" Michelle struggled, wondering how much she should or even was allowed to admit to Brenda. \"Well, sometimes I cum from,\" Michelle wondered if the next words out of her mouth would make Brenda kick her out of the apartment and even worse, her life, \"well, being fucked with a strapon.\"\n\n\"Really?\" Michelle was glad she was lying down as she may have fallen over at that news. \"Like you cum from that?\"\n\n\"Yes.\" Michelle felt her face turning bright red.\n\n\"Is that the only way you're allowed to cum?\"\n\n\"No.\" Michelle wanted to crawl into a hole with this line of questioning, but couldn't help but share with Brenda. If they were going to have whatever it was they had going on, she would have to know. \"I'm let out every so often and allowed to, well, umm, masturbate I guess.\"\n\nBrenda was speechless. How was she supposed to respond to that? Her, well, whatever Michelle was to her, could only orgasm one of two ways and neither really involved her. She wasn't sure what or how she was feeling, however she knew she deeply cared about Michelle and felt a connection to her.\n\n\"Are you okay?\" Michelle tentatively asked.\n\n\"Yeah, I think,\" Brenda replied, \"I guess I'm just trying to understand all of this.\"\n\n\"I still try to wrap my head around it from time to time as well.\" Michelle answered. \"It's kind of a really odd thing in general.\"\n\n\"Do you like working there? And, well, being you know, Michelle?\" Brenda at this point had completely forgotten about the caged cock in front of her, and had now moved her arm to lean her head into her hand. \"You know, instead of being who you were before?\"\n\n\"At first it was really strange and I was afraid of getting caught all the time,\" Michelle answered, \"I'd be on the train trying not to fall off my heels wondering if the person next to me could tell I was a boy and would call me out in front of everyone!\" Michelle paused, shuddering at the memories. \"It was scary and exciting at the same time, because I had these constant thoughts,\" she swallowed before continuing, \"the idea of getting caught, or falling off my heels and having my caged cock fall out of my skirt for everyone to see.\" She could feel her heart racing as she continued. \"But I got used to it and slowly realized that people treated me so much differently now, before I as ignored and expected to move out of everyone else's way,\" Michelle scanned Brenda's face for a reaction as she spoke, \"but now guys who would have let the door close in my face are holding it for me to let me walk through.\"\n\n\"You are kinda cute as a girl you know.\" Brenda giggled, showing the first sign of being relaxed since they'd started on this topic.\n\n\"Thank you.\" Michelle smiled, reaching down to take Brenda's free hand. \"It's definitely not the typical work environment,\" Michelle decided not to go much further than that, \"but I am definitely learning a lot more about myself every day.\"\n\n\"That's a good thing right?\"\n\n\"It can be I guess,\" Michelle responded, \"it's a kind of awakening for a part of me I never knew existed. The Michelle part.\"\n\n\"So, how long are you going to be Michelle?\" Brenda inquired. \"Obviously, it's going to be a while longer if you're getting breasts next week.\"\n\n\"I have a contract with,\" Michelle stopped not wanting to reveal much more about her work relationship, \"with them, and then it will just depend from there.\" Michelle felt as if she were on a roller coaster with her stomach seeming to bottom out inside her body. \"Largely it will depend on who I'm with and where we want to be when everything is over.\"\n\n\"Who you're with?\"\n\n\"Yeah,\" Michelle smiled, \"it'll depend if you want a boyfriend with boobs, a girlfriend with a cock, or a guy without boobs I guess.\"\n\n\"Oh that!\" Brenda chuckled. \"I think we have time to figure out which I want then huh?\"\n\n\"As much time as you need!\" Michelle replied feeling positive about Brenda's response. \"The part of all this I enjoy the most is when I'm with you.\"\n\n\"The topless part?\" Brenda teasingly asked as she raised an eyebrow. \"Or the other parts too?\"\n\n\"Every part!\" Michelle replied cupping Brenda's face with both hands and guiding her upward.\n\nTheir lips met, tongues darting out toward each other's mouths. Bodies intertwining as their hands and mouths renewed their passion for each other. Michelle's legs wrapped around Brenda's as her hands moved over her bare flesh. Pulling Brenda up slightly, Michelle wanted her mouth on the young woman's wonderful breasts.\n\n\"Oh, hang on,\" Brenda's voice was charged briefly with excitement as she wriggled and moved to get her body into place, \"there, oh wait. I think.\" Her face was focused as she stared off above Michelle's head. \"Ohhhhhh, that's it!\" Brenda moved her hips, pressing her body against Michelle's, grinding her hips and pubic bone into Michelle's. \"That's a little slice of heaven right there.\" Her eyes lit with excitement as she ground her clit into Michelle's cage. \"Ohhhh yes! That feels so good!\"\n\n\"It feels like you're screwing me!\" Michelle cooed, grabbing Brenda's ass with both hands to pull Brenda's body into hers more.\n\n\"I bet it looks that way too!\" Brenda panted feeling her orgasm build. \"Mmmm, do you like when I screw you?\"\n\n\"Yessss!\" Michelle groaned gaining excitement from seeing Brenda's build. \"Fuck me!\"\n\nBrenda's eyes went wide as she looked down at Michelle. While Michelle panicked by Brenda's sudden look of shock, she couldn't see the physical reaction to the words she'd uttered. Instantly Brenda's already hard nipples tightened to the point of aching while her pussy swelled.\n\n\"Say that again!\" Brenda all but hissed.\n\n\"Fuck me!\" Michelle's voice was sultry bordering on needy. \"Please!\"\n\n\"Oh God!\" Brenda groaned, fingers digging into Michelle's skin. \"I'm going to cum!\"",
        "\"Yes!\" Michelle could feel the flood of warmth coating her crotch as Brenda's eyes glazed over.\n\nBrenda slowly collapsed on top of Michelle, panting heavily and trying not only to catch her breath but make sense of what was going on. Last night she'd orgasmed harder than she'd ever orgasmed before, now today she'd essentially fucked her boy/girlfriend's cage and orgasmed again. While her language last night had been a bit of a shock to her, the fact she'd gotten so turned on by Michelle's language shocked her even more! Even now, she was definitely not used to being in the physical position she was after sex. Typically, she was the one with her legs wrapped around her lover's, wondering when he'd finally climb off her so she could breathe again! It was obvious that Michelle was comfortable with role reversal, but much to Brenda's seemingly never ending shock, so was she!\n\n\"That was kind of unreal.\" Brenda struggled to lift her head, but soon found herself eye to eye with Michelle. \"It seems you have quite an effect on me,\" Brenda felt herself blushing, the shuddering as an aftershock rippled through her body, \"I'm not typically into naughty talk during sex.\"\n\n\"That makes sense though doesn't it?\" Michelle teased, \"You've never been with a girl before after all!\"\n\n\"That is very true,\" Brenda replied before pressing her lips against Michelle's in a soft kiss, \"so, I guess the decision is made then?\" Michelle looked quizzically at Brenda for a moment, then Brenda continued, \"We're a hot lesbian couple?\"\n\n\"I think so!\" Michelle was almost giddy. \"I've never been a lesbian before!\"\n\n\"Either have I silly!\" Brenda replied. \"But it does have definite advantages,\" Brenda's body trembled again, \"no guy ever got me off like you have!\"\n\n\"That's good to know!\" Michelle beamed with pride at her sexual talents.\n\n\"You're cute when you try to be cocky!\" Brenda teased. \"But I have to move, and really need a shower at this point.\"\n\n\"Okay.\" Michelle replied not really wanting to give up the closeness she was feeling with Brenda.\n\n\"Don't worry, you're coming with me,\" Brenda said as she slowly untangled herself from Michelle, \"while you may have showered with a girl before, I haven't.\"\n\n\"Actually, you'll be my first.\" Michelle replied as they gingerly rose from the couch.\n\n\"I have a feeling we will share a lot of firsts together.\" Brenda said with a warm smile. \"One first we won't share,\" Brenda continued as she took Michelle's hand leading her to the bathroom, \"toilet time is a solo act!\"\n\n\"No worries there.\" Michelle giggled.\n\nMichelle eventually joined Brenda in the shower, there was limited room but it didn't seem to bother them. Both had fun soaping up each other's bodies, shampooing each other's hair and even shaving the other's legs. Brenda continued with the occasional question, thankfully none of them were about sex or work but more about why Michelle put Vaseline in her cage, if it interfered with going to the bathroom and the like.\n\nExiting the bathroom wrapped in a towel, Michelle opened her suitcase to retrieve her clothes. Michelle picked up the panties she'd brought and stepped into them. She was pulling them into place as Brenda entered the room.\n\n\"I think a part of you really enjoys this part of things.\" Brenda teased. \"I mean, you have the most diverse collection of lingerie I've ever seen!\"\n\n\"I won't disagree with you,\" Michelle replied as she looked down at the sheer and floral lace cheeky hipster bottoms, \"honestly, guy underwear is so boring!\" Brenda smirked and shook her head at her friend. \"All I wore before these were shapeless boxers, I dunno, these are just fun!\"\n\n\"Okay, you have a point,\" Brenda replied, \"they're sexier than boxers, but I still think you like them for other reasons too.\"\n\n\"You probably have a point.\" Michelle replied as she pulled on the matching top with built in bra.\n\nWhen they exited the bedroom Brenda was wearing a pair of baggy cut off denim shorts, and a ribbed tank top underneath a tied men's dress shirt. Meanwhile, Michelle had put on a short denim skirt, strappy wedge sandals, and a fitted blouse unbuttoned enough to show off her cleavage.\n\n\"A couple ground rules for tomorrow before you leave.\" Brenda said as she walked Michelle to the door. \"No sex in the building,\" she was very serious in her tone so Michelle knew she meant business, \"we can still go to lunch and have coffee before your appointments but I can't afford to get fired.\"\n\n\"No problem, I'll behave!\" Michelle replied.\n\n\"No making out outside of my apartment either,\" Brenda pulled Michelle into her as she continued, \"I don't need my neighbor gossiping about my hot girlfriend.\" Michelle blushed in response.\n\nTheir mouths met again, tongues dancing as they pulled each other closer. Michelle reveled in the feeling of Brenda's hand cupping and squeezing her breast through the top she wore. The shorts Brenda had on were loose fitting enough that Michelle was able to slip her hand inside, doing so, Michelle squeezed Brenda's bare butt as they kissed.\n\n\"We're going to need one more rule for work,\" Brenda said between kisses, \"no shoving your hand in my pants at work!\"\n\n\"Well, we're not at work are we?\" Michelle teased moving her second hand toward Brenda's ass.\n\n\"Okay, okay, okay,\" Brenda said quickly backing her mouth away and grabbing Michelle's wrist preventing a second hand from going into her shorts, \"if you do that I'm going to cum again, and I don't think my stomach muscles are ready for that yet!\" Michelle smirked, trying to push her hand lower. \"Go ahead and be proud of yourself,\" Brenda giggled, \"but I have a research paper to write today, and I can't have you dislodging thoughts in my brain with your bedroom talents!\"\n\n\"I guess.\" Michelle jokingly pouted. \"But you really have an amazing ass.\"\n\n\"Well thank you,\" Brenda rolled her eyes as she pulled Michelle's hand out of her shorts, \"I think you have an amazing ass too, but I need it out the door soon.\"\n\n\"If you say so.\" Michelle pouted more.\n\n\"You're a big girl,\" Brenda teased, \"you'll be okay.\"\n\n\"Thanks,\" giggled Michelle, \"see you tomorrow for breakfast?\"\n\n\"Sounds great to me,\" Brenda replied as she opened the door to let Michelle out, \"thanks for last night and this morning by the way.\"\n\n\"Thank you!\" Michelle answered as she stepped out of the apartment.\n\nMichelle was practically floating as she took the elevator and headed out to get a cab. The past 24 hours had been far better than the anxiety ridden thoughts of what she believed would take place. Not only hadn't she been \"outed\" by drunken bachelorette party goers, or confronted by guys at the night club or the male dancers, but she'd had an absolute blast! The fact she'd had amazing sex with Brenda, even if it wasn't the traditional kind, was just an added bonus. Michelle's smile was still present as she walked into the apartment she now shared with Babette.\n\n\"Oh well that face can only mean one thing!\" Babette all but squealed with delight as Michelle entered. \"How was sexy nurse Brenda?\"\n\n\"It was amazing!\" Michelle replied, \"Every bit of it!\"\n\nMichelle looked over her roommate and had to smirk at her choice of outfit. With her new chest healed, Babette had chosen to wear a loose fitting tank top with the sides cut out. Most women would have worn it as a cover up from the beach, but it was the only thing Babette had on above her waist, which nicely highlighted her firm and rather large breasts. Babette was also wearing a pair of neon green cotton shorts, half the material in the back had worked its way between her barely covered butt cheeks.\n\n\"How are the twins feeling?\" Michelle teased. \"Are you expecting a Penthouse shoot or something?\"\n\n\"I'd be nakeder for Penthouse silly!\" Babette replied grasping the material of the tank top with one hand in a fist exposing both breasts, \"But I am expecting the delivery guy, so there's that!\"\n\n\"You'd be in heels for them too!\" Michelle laughed as the doorman announced the arrival of the delivery person. \"Are you going to put them back away before he gets here?\"\n\n\"Prude!\" Babette teased.\n\n\"Slut!\" Michelle retorted.\n\n\"You know it!\" Babette smiled wide, carefully adjusting her top so the material just covered her nipples. \"There you go, better?\" Michelle just rolled her eyes as the delivery person knocked on the door. Babette bounded to the door, checking her top one more time, before pulling it open. \"Hi!\"\n\n\"Hi.\" The dower woman responded, looking at Babette with blatant disdain. \"I hope that's not how you're paying for this.\"\n\n\"No,\" Babette grumped, \"I have cash.\" Instead of carefully leaning forward, and flashing her ass to the driver, Babette picked up her pocket book and removed the cash. \"Here you go.\" She said thrusting the bills forward.\n\n\"I let Mike know he missed a show.\" The driver responded handing Babette the bag.\n\n\"Stupid Mike!\" Babette groused. \"Stupid girl delivery person. How am I supposed to show off my new assets if I get a straight girl to deliver my food?\"\n\n\"Life if full of mysteries like that.\" Michelle laughed.\n\n\"Okay, tell me about your night!\" Babette said plopping down on the couch. \"All about it!\"\n\nWhile Michelle did share all the details of her night, she stopped short of what happened after they arrived back at Brenda's. In typical Babette fashion, she asked embarrassing details about the strippers and the two guys Michelle danced with at the club. While it had been awkward dancing with a man, the conversation about it became more embarrassing as Babette pressed for details.\n\n\"Okay, so he's grinding into your ass,\" Babette leaned forward watching Michelle's face get redder and redder, \"how big was he? I mean Mikey big?\"\n\n\"You're the worst!\" Michelle replied. \"I don't think anyone is Mikey big!\"\n\n\"True, that boy is deformed!\" Babette giggled. \"Well, what happened when you got to the naughty nurse's place?\"\n\n\"Aren't you having your post-op this week?\" Michelle asked to deflect the conversation.\n\n\"Yes!\" Babette responded. \"Are you saying I should ask her?\"\n\n\"NO! But I'm not going to tell you before you see her either!\" Michelle replied harshly.\n\n\"Okay, well until then I'm just going to have to assume you went all the way!\" Babette said trying to read Michelle's reaction.\n\n\"I did go all the way TO her bed!\" Michelle replied snarkily.\n\n\"Well then, if you think about it,\" Babette smirked, \"you were in one bed with one person last night and you'll be in bed with another tonight right?\"\n\n\"Yeah, that's true.\" Michelle responded.\n\n\"I guess that makes you a slut too!\" Babette giggled.\n\n\"I'm just trying to keep up with you sweetie!\" Michelle winked.\n\n\"Just keep one thing in mind,\" Babette said as she walked up to Michelle, lightly touching the side of her face, \"tomorrow you get to tell Ms. Allison all about it!\"\n\nMichelle's face blanched slightly as Babette leaned in, kissing her softly. She'd been enjoying the blissful feeling of where her relationship was going with Brenda, and forgotten she had to tell Ms. Allison everything tomorrow. Plus, she was going to get spanked 10 times for the two 5 dollar bills she had left over from the male review! That was probably the least of her concerns, Brenda had asked a good number of questions about her job and work life, and Michelle had no idea what she was and was not allowed to share!\n\n\"I'm really nervous about that,\" Michelle said anxiously, \"Brenda asked some pretty direct questions, it's not like I can tell her everything that goes on in the office right?\"\n\n\"I don't think I'd lead in with that, no.\" Babette replied. \"Do you really want your girlfriend to know you're going to get pimped out to men and women?\"\n\n\"I don't want her to know I get fucked in the ass at work,\" Michelle replied quickly, \"but I did kind of mention that I enjoyed that part of things.\"\n\n\"Talk to Ms. Allison about it in the morning,\" Babette said giving Michelle a soft kiss on the forehead, \"she will let you know what you need to do.\"\n\n\"Okay.\" Michelle replied as Babette went off to bed.\n\nFor the next hour Michelle sat texting back and forth with Brenda. The conversation relaxed her considerably, it was easy to simply talk with Brenda. She was quick to tease and laugh, and had Michelle giggling to herself in no time. They said their goodbyes, both mentioning they were looking forward to seeing each other in the morning. Michelle made her way to the bathroom, selecting a cute peach nightie to wear to bed. Easing herself into bed, Michelle moved close to Babette.\n\n\"All better after your chat with the naughty nurse?\" Babette asked in a sleepy voice.\n\n\"Yeah, I am.\" Michelle replied.\n\n\"Curl up here,\" Babette instructed while pulling Michelle to her, \"you're mine tonight.\"\n\nMichelle allowed Babette to pull her close, until Michelle's head was just above Babette's right breast. Pressing and pulling Michelle close, Babette's right arm held Michelle's body against hers. Michelle enjoyed the warmth of Babette, but missed the softness of Michelle. She did enjoy the fact that two nights in a row she would be sleeping with two different people. Tomorrow she would end up having some kind of sex, even if it was mostly one way, with a third. She really was a slut!\n\nIn the morning Michelle awoke with Babette pressed into her back, spooning her just as she'd spooned Brenda the night before. With the alarm clock going off, both girls slowly exited the bed, alternating trips to the bathroom and changing for their morning workout. Michelle sipped coffee, while wearing a dark purple and sheer black leggings and sports bra. Babette emerged with hot pink booty shorts and a matching racer back style sports bra.\n\n\"There are a couple of guys who sit out on their patio enjoying morning coffee while I do yoga,\" Babette smirked, \"so I try to give them a little show.\"\n\n\"You're too much.\" Michelle rolled her eyes in response. \"So, I guess that's what I have to do now too?\"\n\n\"Well, you can stop the tradition,\" Babette teased, \"or you can go with it!\"\n\nMichelle dutifully followed Babette outside, the cool morning air felt quite refreshing as she laid out her yoga mat. She shook her head, the mat barely fit in her apartment, and here on the patio there was enough for the two of them to go through various poses without bumping into each other. Michelle couldn't believe how much she'd begun to enjoy her morning exercise as well, she didn't have a visible six pack but she was definitely toned. She also felt far healthier than she ever had to this point. Michelle noticed Babette was angling herself in a particular direction and eventually spied one of the regular viewers. She couldn't make much out about him, but he made no secret of the fact he was staring at both of them. Feeling the adventurous side of her come out, Michelle angled her bottom toward the onlooker as well.\n\nWhen they workout/peep show was over, Michelle quickly headed into the shower while Babette made herself breakfast. One of them had a date this morning, and she couldn't wait to see Brenda again! Michelle selected a white lace thong, garter belt and bra, nude stockings, a cream blouse, tan leather pencil skirt and white lace sling back heels. The heels showed just a hint of her bright pink nail polish. She added some nice jewelry to accent her outfit before checking herself over once more in the mirror.\n\n\"If I'm going to be the girl in this relationship,\" she said standing with a hand on one hip and her knee turned in as she'd seen women do, \"then I'm going to be all girl!\"\n\n\"Don't you look sexy!\" Babette said as Michelle entered the living room.\n\n\"Thanks!\" Michelle smiled at the compliment.\n\n\"All ready to see naughty nurse Brenda?\"\n\n\"Oh stop!\" Michelle rolled her eyes at Babette's teasing. \"What are your plans for today?\"\n\n\"I need to go check on my new place,\" Babette replied between sips of coffee, \"I'd really like to be in by the end of the month, but they found a couple problems they need to fix.\"\n\n\"That stinks.\" Michelle replied grabbing her purse. \"Let me know if you need anything from me.\"\n\n\"Think if we gave my contractor a double blowie he'd find a way to work faster?\"\n\n\"I think if we both sucked him off at the same time,\" Michelle said as she reached for the front door, \"he'd find a way to make us to it again! So he'd probably slow down!\"\n\n\"Stupid men,\" grumped Babette, \"only after one thing.\"\n\n\"Yeah, they suck!\" giggled Michelle as she shook her head and walked out of the condo. \"I'm so definitely the girl in this relationship too.\" Michelle rolled her eyes again as she got to the elevator. \"And pretty damn happy about it!\""
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "men in lingerie",
        "female domination",
        "femdom",
        "forced fem",
        "sissy slut",
        "crossdresser",
        "cross dressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-13"
}