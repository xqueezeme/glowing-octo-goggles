{
    "title": "Teacher's Crossroad",
    "pages": [
        "Author's Notes:\n\nFull disclaimer, Teacher's Crossroad, contains scenes of sex. It also includes scenes that may disturb sensitive readers. \n\nThat sounds darker than I intended, but I suppose that's what disclaimers do.\n\nAll that said, it's a Burnt Redstone story, so truthfully, how dark do you think it's gonna get?\n\nOriginally intended to be three separate submissions (parts), I've merged them together for simplicity.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nTeacher's Crossroad\n\n********\n\nPart 1\n\nChapter 1\n\nThe ending of one life and the redirection of another fit neatly within a span of a few seconds.\n\nOne second: Tyson glares at his wife of twenty years sitting in the passenger seat, though he was already beginning to regret the hurtful words he'd just lashed out.\n\nTwo seconds: Tyson catches the motion of something huge and dark, quickly filling the passenger side window behind Imani's angry expression when her lovely face turns to him.\n\nThree seconds: Impacts too extreme to feel and too many to register. Sounds too loud to hear, but distinctly experienced. Flashes of light and dark. Pain and nothingness, too much of both.\n\nUnknown seconds later: Tyson surfaces to see stars through tall grasses, cold water from the ditch soaking through the remains of his clothes. The sensation of pain returns to sweep over him...\n\n...and he knows she's gone.\n\n\"NO! No! No...\"\n\nTyson surged up from his pillow to gasp for breath as the recurring nightmare shocked him awake, as it often had over the past five years.\n\nGhost pain floated over and through his body, forcing him to recall the year he lost in the hospital recovering from his injuries\u2014seemingly endless hours of pushing through the pain to get his body to function again.\n\nOnce hands could grip, and arms regained their range of motion, once feet could balance his mass, and legs could support and push his bulk upright, he leaned into the machinery to find a way to cover his mental pain with pure physical agony.\n\nExcess was shed, and he'd carried much of it. It'd felt like layers were peeling away as he struggled to find a reason to continue. He was becoming a new man, but for what?\n\nHis frailness gradually became strength, yet he pushed harder. He'd convinced himself that the pain cleansed him, but in truth, it was just avoidance. After a year of merciless exercise routines, the physiotherapists only allowed him brief supervised visits to the gym. This forced him to concentrate on his grief counseling. He needed to stop avoiding the mental anguish that drove him to bury himself in pain.\n\nIt took another eight months before the doctors felt he was safe enough to send home.\n\n\"Awww, Sugar, is that bad dream back again?\"\n\nHer voice was achingly familiar yet so out of place. Tyson's heart clenched each time he heard it, but he refused to respond. He'd clawed his way out of the darkness when he was recovering in the hospital, and the foundation he was building his new life upon depended on the keen edge of his mind. He wasn't going to give up on that now.\n\nImani was dead. She was gone.\n\nShe wasn't sitting at the end of his bed, slim and toned in her silk nightie, her mane of curly hair waiting for his fingers, milk chocolate skin begging to be touched, and watching him with soft brown eyes full of love and compassion.\n\nTyson dropped back to his pillow as he closed his eyes and rubbed his face.\n\nHe ran through his equations- and when he reached the result, he opened his eyes, and as always, she was gone.\n\nThe doctors had thrown a lot of jargon at him while they did their best to dissect his feelings, his memories of the crash, and how he felt about his mother. Survivor's Guilt and Post Traumatic Stress Disorder were at the top of the list, but there were so many others; he'd forgotten their names.\n\nHe never spoke to the doctors about Imani's occasional nocturnal visits. If he had, he'd likely still be in the hospital. It was simpler to just accept the periodic brain blip and move on. Besides, he had his other love: mathematics, to bring rationality back to his mind.\n\nShe'd started appearing to him at night after he'd begun really pushing himself in his physio sessions. As he rested in his bed, muscles screaming in agony, he'd hallucinated that she'd come to visit him. From the start, he knew enough to keep his mouth shut about it. He got information on what it might mean after he was sent home.\n\nHe read a lot about what the mind can do to resolve the loss of a loved one, especially after a traumatic accident. His unwillingness to accept her loss, demonstrated just moments ago by his cries when he awoke, meant his mind was looking for ways to fill that gap in his life. Where only vacuum existed, his mind filled the emptiness with... her.\n\nFive years was a long time to carry the hallucinations, but like his self-imposed solitude and his regimented daily schedule, he took comfort in familiarity. Maybe he just wasn't ready to move forward.\n\nAs it always did after having the nightmare, his mind returned to the night of the party.\n\nTyson hadn't even wanted to go. It was Imani who'd been so insistent on getting out of the house, saying they had to make an appearance, as the man had been so supportive. He was the one who'd helped Tyson get his position as a professor of advanced mathematics at the local university. That's what the man told everyone, at least. Tyson knew the truth. It was the Dean's wife who made it happen.\n\nThe party was to celebrate the Dean's retirement. Franklin Dunnings was stepping down and had his sights set on a cushy lifestyle in a tropical coastline village in some Central American country. Tyson, Imani, his colleagues and their spouses were all in attendance at the man's home for one last blast before he and his wife set off on this new chapter of their lives.\n\nTyson wasn't sure if this new plan was something his childhood friend really wanted. Ashley Dunnings, n\u00e9e Ashley Collins, had lived next door to Tyson as far back as he could remember. They went through kindergarten to college together as the best of friends until Tyson's gift of understanding the true nature of numbers, both real and theoretical, pulled him away from their hometown to learn from the masters at several different universities around the world. When he finally returned, he discovered he'd missed his best friend's wedding.\n\nCelebrating his return and happiness that Ashley had found a soul mate, he got a little drunk, fell down some stairs, and ended up in Imani's hospital. She introduced herself to the genius who couldn't navigate five steps, and his heart was hers for the taking.\n\nThe night of the party, as the guests arrived, they discovered that Ashley was absent, which was a first. Franklin made excuses for her and insisted the party continue, even though it was Ashley's sparkling personality that made these events work.\n\nTyson really wanted to leave as he'd never really bonded with Franklin and wasn't terribly sad to see him leave the university. On the other hand, Imani seemed far more comfortable at this party than she had during previous events in this house. He wondered if it was because Ashley wasn't there. He'd noticed a little friction between them in the past.\n\nA very awkward ninety minutes later, Ashley barged into the middle of the party like the winds of wrath. That wasn't an easy impression to pull off for a slim woman with a lovely mane of blonde hair.\n\nThey could immediately tell she'd been drinking and crying, but she'd reached the anger phase of whatever she was going through. Tyson shared a nervous look with Imani.\n\nProviding the evening's entertainment, Ashley loudly declared before all of the gathered guests that her husband was having an affair with a young female student. It seemed Ashley had just returned from a detective's office and had incriminating photos to share with all.\n\nWhen Franklin returned from the cellar with more drinks, the two began a screaming match, which was horrible to witness, and Franklin finally stormed out of the house.\n\nAshley had nothing left, her anger spent, and she collapsed into a sobbing mess. Tyson moved to help her and shot Imani an incredulous look when his wife made a sound of protest. He collected the crying woman into his arms and carried her upstairs to put her to bed as Imani ensured the remaining guests headed home. The party was over, like Franklin and Ashley's marriage.\n\nTyson set Ashley on her bed, her beautiful blonde hair spilling out over the pillow beneath her. Their eyes caught, and suddenly he found her arms wrapped around his neck and her lips against his. For the briefest of moments, Tyson let it happen. Then he gently pulled her arms from his neck and his lips from hers. She searched his eyes, but he could only silently shake his head. Their opportunity to be something more than friends had passed. Ashley turned away and cried quietly.\n\nWhen he stepped out into the hallway, Imani was waiting for him. He looked to her, sad for his friend, and froze when he saw the anger in Imani's eyes.\n\nShe thrust a tissue at him, pointing to his mouth. He wiped his lips and saw the lipstick.\n\n\"She's drunk\u2014\"\n\n\"You're not. I'm leaving,\" Imani snapped and spun to march away, downstairs and out the front door. He hustled to match her angry pace, worried her declaration meant more than its face value.\n\nAs he drove them home, he felt her eyes on him.\n\n\"She caught me by surprise,\" he said quietly.\n\nSilence.\n\nHis anger began to rise. He hadn't done anything except try to help a friend. Yes, she was a friend, that at one time could have become more, but that hadn't happened, had it. \"For fuck's sake, what did you want me to do, turn my back on a friend when she was falling apart?\" he exclaimed angrily.\n\n\"Is she just a friend? The lipstick says otherwise,\" Imani snipped.\n\n\"I told you! She caught me by surprise. Her marriage just collapsed horribly, and she was hurting! She reached out for something\u2014 someone to ease that pain\u2014\"\n\n\"Naturally, that had to be you!\" Imani yelled back.\n\nHe sucked in a sharp breath as his rage spiked. He struggled to control his breathing. \"You\u2014 I\u2014 What do you have against Ashley?\"\n\n\"Oh, I don't know. Maybe it's the fact that she's after the man who vowed to be my faithful husband,\" she snarled.\n\n\"A vow I've never broken and never will!\" he bit back.\n\nAs he sped along the winding country lane towards the lake and home, he could hear Imani trying to get control of her own breathing.\n\n\"I see how she looks at you every time there's a faculty party with spouses in attendance,\" she said quietly but with the promise of venom.\n\n\"The bitch doesn't know when to say enough.\"\n\nThere it was.\n\nAt that moment, he felt like he didn't know this woman sitting next to him. The woman who'd taken his breath away the day they'd met in the hospital. The woman he'd vowed faithfulness to for the rest of his life. While it hadn't been sunshine and rainbows every day, they'd made it to their fifties together, her fiftieth being only a month ago and his three years before. He'd welcomed the idea of their sharing their golden years together. As he stared out the windshield at the old, worn paving and the quiet rail crossing ahead, he wondered if he really knew her at all.\n\nHis mind took him to the parties he'd attended at the hospital and at the homes of her coworkers. He knew Imani was well respected and liked by everyone at the hospital. That said, how she'd flash that sexy smile of hers at some of the men and the look he'd seen in their eyes as she moved by had given him moments of insecurity. He'd fought back against those doubts as she'd always touch base with him at those events and give him a little kiss in front of the others. He wondered at her hatred for Ashley when he'd gone through those experiences but had never called her out like this. His mouth began moving before he consciously thought about what he was saying.\n\n\"The difference is, I don't act with Ashley as you do with Devon Wilson.\"\n\nDr. Wilson was the hospital's chief surgeon. Tall, fit, gorgeous, brilliant, and single, he was the most eligible bachelor\u2014a divorcee, in truth. Apparently, there was something he wasn't good at.\n\nAs he watched her turn her face to him, he saw her anger, but there was something else. Something he was deathly afraid of. Could it be doubt... or was it guilt?\n\nThen they were on the tracks.\n\n\"NO!\" Tyson yelled as he pressed the heels of his hands against his eyes to rip himself away from his memories.\n\nIt was time to get moving. Start his day. Follow the routine.\n\nThere was serenity in patterns.\n\nChapter 2\n\nChristy Taylor was having a bad day, and Fridays were supposed to be good. She pouted, and eyes around her immediately looked her way.\n\nShe knew she was beautiful. While genetics had gifted her with so many excellent qualities, she worked hard to ensure that she maximized her assets. She used all the proper skincare products to retain her flawless skin. She followed a rigid diet with natural foods to stay healthy and fit. She went to the gym to keep her svelte body in top condition. Equally important, the salon saw her for visits at least once a week to keep her long wavy blonde hair gleaming and the perfect length and her nails painted in the latest trending color and size.\n\nHer friends all thought she should go into modeling as she had the looks, the poise, and was certainly tall enough, but that wasn't her dream.\n\nShe glanced at her hand to admire the deep red of the polish, and her eyes were drawn to the brilliant diamonds on her engagement ring. Once, the sight of it sent thrills through her body. Today, she felt... nothing. Her fianc\u00e9, Blake Carlington, was handsome, fit, well connected, and from a family as wealthy as hers was, but she'd learned during their eight months engagement there was no magic between them. No sparks. Even the sex failed to bring her satisfaction.\n\nIn the past few months, she'd definitely fallen into a funk. None of the activities that used to bring her joy held any meaning for her. She went through the motions, maintained her appearance, and kept her fashions current, but even shopping had lost its luster.\n\nShe wasn't an airhead. Christy hadn't made it this far through good looks and social standing alone. She had a brain and knew how to use it. She was doing well in most of her classes and was looking forward to eventually graduating at the top percentile or had been envisioning that prospect a few months ago.\n\nNow she was being called in to meet with Professor Haley, her mathematics teacher, as her grade was slipping badly in his class. She needed the stupid math course credit to move to her next year, but even the fear of falling behind left her numb.\n\nThe ennui she was experiencing was sucking away the significance of everything in her life. Still, she had to keep up appearances.\n\nChristy knocked on the office door and heard a voice call out for her to enter. She stepped through the door into a chaos of paper. From his office's condition, one might build an image of George Haley as a Luddite who refused to move into the digital era. That was only true for his personal work. He, by far, preferred the medium of paper to test out his computation experiments. As for the day-to-day work with the students, the university insisted he give his assignments out digitally, but he snuck papers in as often as possible.\n\nShe saw the short and stout man with his trademark Einstein-esque wild white hair and bushy mustache sitting behind his desk. He looked up at her and smiled.\n\n\"Ah, Ms. Taylor! What can I do for you?\" he asked as he blinked her way.\n\nShe reached up and twirled a strand of her blonde locks as she looked back at him. \"You asked me to come to see you about my grades.\"\n\nThe professor nodded as he pinched the bridge of his large nose. \"Yes, of course. Your grades are beginning to drop, and if you don't turn that around I'm afraid I'll have no choice but to fail you in my class.\"\n\n\"Isn't there a test I can take to bring my grade back up?\" she asked.\n\nHe gave her a piercing look. \"Understanding the material will bring your grade back up. The next exam will be crucial to you. You must have a firm grasp of the course material by then.\"\n\nShe pouted again as she knew she had been suffering a mental block with the last few chapters. \"I need a tutor\u2014\"\n\n\"Yes! I was about to suggest the same!\" Haley exclaimed enthusiastically. \"I happen to know a local man who's not only a bona fide genius in the field of mathematics, he's one of the most natural teachers I've ever had the honor of working with. To stand any chance at all of learning this material as thoroughly as required in the short time you have, you need someone of his caliber teaching you.\"\n\nChristy gave the professor a cautious look. \"Is he here at the university?\"\n\nA sad expression came and went on the short man's face. \"Not anymore, no. He... retired, early.\" His eyes then locked on Christy's. \"I hope I'm stressing the significance of the risk you are facing of failing my course. You must get him to agree to tutor you.\" A determined look came to his face as he seemed to be thinking hard about something. Then a slight smile slipped onto his lips. \"I'll provide you with a letter of introduction which should help, but you must convince him to do this.\"\n\nHe grabbed a sheet of paper and his pen and got to writing up the letter.\n\n\"If he's as good a teacher as you say, why did he take early retirement?\" Christy asked curiously, her genuine intrigue over this mysterious genius beginning to lift the mental lassitude she'd been suffering.\n\nHaley folded and sealed the letter in an envelope. He wrote something quickly on the outside, then handed it to her. Christy's eyes widened when she saw the name above the address.\n\n\"Tyson Kane? The man who stopped the terrorists?\"\n\n\"Stop! Do not mention that event to him or the role he played in it. He lost his wife that night and does not need reminders.\" He gestured to a picture hanging on the wall showing a thick-bodied bearded man in a suit with his arm around a beautiful slim woman with a large head of curly hair. \"All Tyson needs to remember is his joy of teaching. The letter will get you in the door, but you must convince him you'd be a worthy student.\"\n\nChristy gave the professor a shocked and disgusted look as her mind took her to dark places as he looked at her in confusion. \"Are you implying I need to offer him sexual favors\u2014\"\n\n\"What? NO!\" Haley snapped in anger, and it was Christy's turn to look confused. Haley huffed. \"Prove you are going to make something of your life. Be worthy of his investment of time. He has no respect for those who drift through life, making minimal effort to contribute. Express to him your drive and ambition. Get him to teach you, and you will pass my course.\"\n\nChristy looked nervously at the envelope as the importance began to sink in.\n\n\"Go see him tomorrow. Do you have plans for your Saturday morning?\" he asked, and she shook her head.\n\n\"Thank you, Professor Haley,\" she said as she nodded to him and left the office. She set her course to take her to the library. She'd do some research on Mr. Kane as she would treat this as a business deal she couldn't afford to lose. Christy needed to know everything she could learn about the man she'd be pitching to.\n\n-=-\n\nGeorge Haley dropped his chunky body into his deeply cushioned chair as the pretty blonde left his office. He rested his eyes on the door as his mind struggled with the lie he'd written in the letter to his friend, Tyson. He pushed aside his doubts as the small white lie was justified if he managed to break through the shell Tyson was building around himself. Becoming a recluse at the age of fifty-eight was a crime compounded by how he was depriving the world of his brilliance.",
        "What young Ms. Taylor didn't know was that Tyson did despise drifters but was becoming one himself. That clarified the man's self-regard.\n\nIf George had been a religious man, he'd pray for Christy's success in breaking Tyson out of his self-imposed isolation.\n\nHe grinned to himself. It certainly didn't hurt that the young woman was a close physical match to Ashley in her younger years.\n\nHis smile slipped away as his thoughts turned to the woman who disappeared the night of the Dean's retirement party. For a short time afterward, everyone suspected Franklin had done something horrible to her. Then information leaked out that she'd left the country the next day. Most of the money from their joint bank account was gone, and a law firm in New York contacted Franklin with divorce papers. The man couldn't sign them fast enough, and days later, he sold the house and disappeared into the jungles of Central America.\n\nSo, Tyson's best friend was gone, just like his wife.\n\nGeorge did his best to fill the gap, but he'd been unable to get through to the man.\n\nPerhaps his approach was missing the feminine touch.\n\nMs. Taylor had plenty of that.\n\nChapter 3\n\nTyson stood barefoot on the grass of his back yard, next to the small patio table and chairs he rarely used. Outside of his daily morning routine, that is. He undid his big terry dressing gown and pushed it off his shoulders. He draped it over one of the chairs then walked forward towards the lake until he was standing on the small patch of sand at the edge of his property. He wasn't as hidden from neighboring properties this close to the water, but so far, none of them complained about his habit of swimming in the nude. Or sunbathing the same way, for that matter.\n\nHe'd never looked to see if anyone was watching, but then, he didn't care.\n\nHe stepped into the chilly water and walked out until he could dive forward. The water was really brisk, but he pushed himself through the pain until he had a nice smooth stroke pattern going and his muscles warmed up.\n\nWith so little body fat, he had to keep swimming, or he'd sink like a stone.\n\nAs he did every day, he swam in a straight line away from his home until he felt the first signs of exhaustion, which would tell him to turn around and swim back. If he made it back, he'd have earned a great cardio workout and boosted his stamina and endurance. If he couldn't make it back, then he'd have given it all he could, and the lake would take him.\n\nWould that be today?\n\n-=-\n\nThree miles south of the university town was a lovely lake entirely surrounded by dense forest. Situated along the lake's northern edge was a three-mile stretch of road with twenty small homes spread out along the only area suitable for building. The rest of the lake's shoreline was sheer granite walls rising ten to twenty feet above the water's surface. The northern lip was a gradual slope with a sandy patch before dropping off into the depths.\n\nThe lane of homes was once linked to the town via the narrow country lane that wove its undulating way through more granite outcroppings to the western edge of town. There were no homes along that stretch of road, and now it was closed to vehicular traffic.\n\nChristy drove her white Mercedes Benz C-Class Coupe along the smooth paving of a road built just four years ago. It linked the eastern edge of town to the east end of the lakefront road.\n\nFrom her research, she'd learned of the incredible and terrible fate that placed Tyson Kane's car on the tracks at the precise moment the speeding locomotive reached the defunct crossing.\n\nTwo emotionally tormented high school students, the victims of brutal high school bullying, one the son of a railroad worker and the other, the son of a construction foreman, hatched a plan to strike back at the town they felt failed them. They managed to liberate an old engine from the yard after linking it to a flatbed car loaded with explosives and the incendiary devices they'd built. They drove the train onto the abandoned branch line that led through the countryside, past the lake, eventually curving up and into the heart of old downtown. The two young men planned on driving the train into the center of town, detonating their bombs, and burning it to the ground.\n\nInstead, they struck Tyson's car, tearing it in two. He was thrown from the driver's seat to land in a ditch while the rest of the car went under the train, causing it to derail a short distance further east. Tyson's wife and the two young men were killed, but the explosives did not go off. Being a remote and sparsely populated location with very infrequent traffic, no one witnessed the accident or was even aware it happened.\n\nTwo hours after the crash, the student's manifesto automatically uploaded to social media outlining their plan and why they did it. The town's police force was immediately contacted, and its three cruisers were sent out to investigate. Ninety minutes later, an officer found Tyson in the ditch, close to death.\n\nThat's when the shit really hit the fan.\n\nWhile Tyson was rushed to the hospital, emergency workers discovered the train on its side in the brush further along the torn-up tracks. The young men's bodies were relatively intact, but the same could not be said for Imani.\n\nA bomb disposal team was brought in to disassemble the explosives.\n\nChristy read about how GRT Corporation, the owners of the local freight rail system, was given a beating in the legal courts and in the court of public opinion, forcing them to make significant reparations to the surviving victim, Mr. Kane and to the town.\n\nGRT immediately launched a program to remove the tracks from the branch line. Rusty rails and creosote-soaked ties were ripped up and taken away. Next came road crews who graded and smoothed the rail line ground and installed a lovely six-foot-wide ribbon of smooth asphalt over the route from the accident site to the town's eastern edge. They refused to remove the rails from within the town proper.\n\nWith permits granted to them from the town council, those road crews built the straight and smooth two-lane road which Christy was currently using. When it was completed, the town council closed the old country lane to vehicular traffic, making it part of the trail system. As it connected up to the western edge of town, the complete route made for a fifteen-mile semi-circular loop.\n\nAs with any new urban development, the elected officials had their sticky fingers in every pie. Large plots of land next to this new road, and more importantly, not surrounded by granite slabs, were opened up with new zoning for high-end housing developments. Neighborhoods of huge mansions sprung up.\n\nOne fortunate outcome for the existing homeowners around the lake, ownership of the land south of the old rail line remained in the hands of GRT. They prevented any new development there. The existing lakefront property agreements with GRT had a grandfather clause, and as such, would remain untouched. There would be no more homes built on the lake.\n\nOnce Christy had a clear picture of the events surrounding the man, she looked into his history directly and saw proof that he was, indeed, a mathematical genius. His education credentials were impeccable, and the reviews of his career with the university made her wish he was still there. He was referenced a few times as a big cuddly teddy bear if one could also be brilliant at math.\n\nShe went over the photo archives at the university and saw how the man had grown into this reputation over the years. He'd been fifty-three at the time of the accident and as large a man as he'd ever been. She pictured him now as a fifty-eight-year-old chubby bear using a walker or a wheelchair if the stories of his injuries were to be believed.\n\nStill, she just needed his brain to break her free from her current mental block.\n\nAs Christy drove past a neighborhood of monster homes, she shook her head. The land around them was open and barren. She thought they should have planted large trees around the houses like they had in her parents' neighborhood.\n\nAhead, she spotted the rail trail crossing the new road and saw no one approaching from either direction, so she drove over the slight hump and entered the forest. A short distance in, she turned onto the old lakefront road. Christy glanced at the envelope again and saw the house number she needed to find. Tyson's place was closer to the other end, so she drove on, enjoying the scenery.\n\nAll of the homes were on the lake side of the road, of course, and many were gated, which seemed silly to her as they were all open to the lake. Thankfully, all of the homes were single-story dwellings that fit into their natural settings. Some were double-width to compensate for not being two stories.\n\nEventually, she saw the numbers getting closer to her destination's address, so she slowed and turned into a gravel driveway. There was no other car in the driveway, so she worried that he might not be home.\n\nThe house itself was so sweet! It was a ranch-style cottage tucked in amongst the trees with many unique and thoughtful design touches. She almost expected to see faeries flying around the lush gardens surrounding the home.\n\nShutting off the engine, she stepped out and took a deep breath of the morning air. It smelled so fresh and clean.\n\nShe checked out her outfit one last time. She dressed for success in her best business attire: red silk blouse, tight black slacks, and sexy but low-heeled red leather shoes to match her top. She didn't want to oversell her physical attributes, so she'd worn a top that didn't cling quite so snugly to her breasts. She didn't have pants that weren't flattering, so she went with black, which might visually minimize her sleek curves.\n\nSteeling her nerves, she prepared herself for her pitch as she climbed the three steps to the front door. She pressed the doorbell and heard it faintly from inside.\n\nAfter a long moment, she pressed the doorbell again. Still nothing.\n\nChristy hadn't planned for this scenario. She had a dozen different strategies for appealing to his teacher's instincts, but nothing if he just wasn't there.\n\nShe stood atop his front step and looked around. Maybe he visited a neighbor? The lack of a car in the driveway and no garage certainly suggested he'd gone somewhere else.\n\n\"Come on... you can do it... don't give up...\"\n\nThe morning was so quiet, the faint words drifted over to her from her left. She looked to the neighbor's home and saw it was also a single-story dwelling, but it had a rooftop deck. On this stood an older, white-haired woman, holding a pair of binoculars to her face as she watched something in the direction of the water.\n\nCurious, Christy climbed down the steps, walked to the home side, and saw a gate to the backyard. There was a small sign on it saying private, but after a moment, she went through, anyway. The path led between the house and a six-foot privacy hedge to the backyard. While the wall of plants seemed to go straight down to the water's edge, she realized the home was far deeper than she expected. It must be quite large inside. This was not the impression she'd had from the curb.\n\nThe sound of coughing and gasping caught her attention, and she looked to the water. Someone was trying to climb out of the lake. He managed to push himself to his feet and stagger a few feet forward before his muscles wobbled, and he fell forward onto his hands and knees, his head dropping as he continued to gulp in air. She instinctively moved to help.\n\nA deep throaty roar of defiance exploded from him, and she stopped at the back corner of the house to lean against it as she watched him thrust himself back up to his feet. He was... he was naked!\n\nHe stood there with eyes closed, breathing hard, feeding oxygen to his trembling muscles. Once he seemed a little more stable, he began to walk out of the shallows toward the house. He lifted both hands to run them from his forehead back over his head, squeezing the water out of the tight curls of his long black hair. That made the patches of grey at his temples stand out.\n\nChristy wasn't sure what to do. She was here to see the teddy bear professor, and some hardbody was staying at his house. Her eyes traveled down his firm, lean body. He was definitely fit, as his muscle definition was exceptional. He wasn't bulky, but the muscles he had were very evident.\n\nHis skin was smooth, and there was so much of it to see. She noticed he had a slight limp as he was favoring his left knee. Her eyes caught the impression of scarring over that joint, so he'd had knee surgery?\n\nSince her eyes were in the neighborhood, they visited his cock, and she liked what she saw. The cold water had obviously drawn his balls up closer to his body, but his cock must not have felt the cold as much.\n\nShe didn't realize he'd stopped moving until he spoke.\n\n\"Who the hell are you, and why are you trespassing?\"\n\nHis voice was deep, and his tone was angry. Christy automatically became defensive. She took a step away from the building into the backyard.\n\n\"I'm Christy Taylor. I'm here to speak with Professor Kane.\"\n\nThe man scowled and continued walking toward the chair that had a robe over it. He didn't attempt to hide himself from her view as her eyes were drawn back to his groin before she forced herself to look back at his face. She examined his expression to see if he enjoyed her attention but saw only anger and annoyance there. He lifted the robe and put it on, cinching it tight around his flat tummy before looking at her again.\n\n\"There's no one by that name here. Go away.\"\n\n\"P-Professor Haley told me he lived here. He sent me to speak to Professor Kane,\" she insisted, more confident now that his body was covered.\n\nThe man paused as his expression showed discomfort. \"George Haley?\n\n\"Yes! I have a letter from him that I need to give Professor Kane,\" she said, smiling as she sensed victory. She'd get this man to tell her where Tyson Kane was. Maybe this was a cousin, and Tyson took his car into town? The guy in the robe was... late thirties to early forties, maybe. There was some resemblance to the professor.\n\nHe held out his hand, and she stared at it, then back at his annoyed expression.\n\n\"Give me the letter,\" he growled.\n\nShe frowned at him. \"No. I have to give it to Professor Kane directly.\"\n\n\"And I told you there is no Professor Kane here. Just Tyson Kane, and that's me. Give me the letter.\"\n\nChristy's eyes flew wide as she stared at his impatient face. He gestured with his fingers for her to hand the letter over. \"You... you can't be him.\"\n\nHis face showed confusion. \"What do you mean? Of course, I can.\"\n\n\"He's- he's almost sixty! You can't be that old!\" she exclaimed.\n\nHe snorted in amusement, then his face clouded over again. \"Listen, I don't have time for this, especially since, as you say, I'm almost sixty. Either give me the letter George wrote for me or leave.\"\n\n\"If-if you're him, why did you say there was no one here by that name?\" she asserted.\n\nHis scowl was back. \"I said there was no Professor Kane here. That man died five years ago. I haven't taught anyone since... that night.\" Something in his expression hinted at horrors witnessed.\n\nChristy's jaw dropped open as she suddenly believed him. This was Tyson Kane, but he looked so different! She had to acknowledge how he looked now was a vast improvement! Teddy bears are cute and all, but this...\n\nHer eyes once more took in the long black hair now drying down his back. The grey patches at his temples took on new significance. They weren't there in the pictures of him before the accident.\n\n\"The letter?\"\n\nShe jolted, then reached into her purse and handed him the envelope.\n\nHe took it from her and glanced at the writing on the front. With a deep sigh, he opened it.\n\nChristy allowed her eyes to wander over his body as his attention was diverted.\n\nShe hadn't felt this tingle of excitement in a long time.\n\n-=-\n\nTyson unfolded the paper with trepidation. The writing on the envelope was definitely George's.\n\nHis eyes interpreted his quickly scribbled message.\n\n\"Dear Tyson,\n\nI hope this letter finds you well. The woman standing before you is Ms. Christy Taylor. She's in my class, and over the past few months, her grades have taken a sudden and unexpected downturn. She is a very bright and promising individual, so this drop in performance is out of character, and I'm not sure of the cause.\n\nYou are probably asking why you should care, and I cannot give you any other answer than it would be a favor to me if you could find some time to review what is giving her trouble and point her in the correct direction.\n\nI find myself in a rather embarrassing position of owing her father a good sum of money after a night of exceptionally poor performance whist playing poker in his home. He indicated he will accept this assistance instead of the cash owed. I would not interfere directly with her grade, so tutoring is the only avenue available.\n\nI cannot show my students favoritism, and I doubt anyone, but you could turn her performance issue around as quickly as you can.\n\nPlease do not mention the gambling debt to Ms. Taylor. I do not wish her to have any doubts that she achieved her grades based on her efforts alone.\n\nThank you for your consideration, your friend, George.\"\n\nAnother sigh was pulled from his tight chest muscles. He really didn't want to do this, but he couldn't turn down George's request. Of all of his friends, only George continued to visit, though Tyson didn't know why, as he was a terrible host. That was Imani's thing.\n\nHe folded the letter and carefully tucked it back into the envelope, but these were just delaying tactics as he tried to think of something to say to the young woman before him.\n\n\"Will you do it?\" she asked.\n\nHe looked into her eyes and found himself preparing to nod. Did anyone ever tell this beauty no?\n\nHe controlled his expression. \"I haven't even had my breakfast yet. Come on. You can tell me why I should give you my valuable time.\"\n\nHe immediately set off for the patio doors leading into the living room of his home. When he gestured to the lovely blonde to have a seat, he saw she was looking around in delight. That made him take another look about as well to see what she might be seeing. Instead, all he saw were reminders of who was no longer in his life. His mood dipped.\n\nHe stepped over to a small wood-burning stove heating the room, opened the door, and tossed George's letter inside. As he closed the door, the letter ignited and was soon just ashes. He turned to look back at his guest.\n\n\"I have to take a shower and get dressed. Then I'm making breakfast. Have you eaten?\" he asked.\n\nShe nodded quickly. \"But, I wouldn't mind an espresso or a coffee if you're making some?\"\n\nHe frowned and pointed to the machines in the kitchen. He'd never learned how to use it, but the last time George visited, he brought some specialty beans, used the grinder and the espresso machine to make them both a lovely pick-me-up with the damn thing. \"It works, but I haven't clue how to use it. If you know, help yourself.\"\n\nTyson walked away without looking to see if she needed anything else. He closed his bedroom door and walked into the bathroom to put his robe in the laundry basket. He took a quick shower, shaved, and dressed, tan shorts and a black t-shirt. He rubbed a little unscented liniment over his left knee as it was aching this morning.\n\nTaking a deep breath, he opened his door and headed back to the living room.\n\nHe spotted the blonde\u2014 no, Ms. Taylor, standing in the kitchen before the espresso machine. It was making its normal sounds, so he assumed she knew what she was doing.\n\nShe turned to smile at him, and he was struck by how familiar she looked at that moment. Something about her...",
        "\"This machine is wonderful! So much better than the one my parents have at home!\" she gushed.\n\nThat nagging sensation of familiarity vanished with the young woman's enthusiasm.\n\n\"I'm more of a plain black coffee man myself, but Imani knew her espresso,\" he said without enthusiasm. She gave him a compassionate smile, and he immediately moved himself to the fridge as he had breakfast to make. He grabbed two eggs, some yogurt, spinach, and a few small tomatoes. While he made his scrambled eggs, he glanced over at her working the espresso machine. She was making two small cups of the stuff.\n\n\"These are very good beans,\" she noted happily.\n\nHe nodded slightly. \"George brought them over.\"\n\nShe nodded and finished the preparations. Their espresso was ready. \"When I first got here, I didn't see a car in the driveway. I thought maybe you'd driven into town.\"\n\n\"I don't drive,\" he said bluntly.\n\nShe looked at him cautiously. \"Because of\u2014\"\n\n\"Yes,\" he said, cutting her off.\n\nShe paused at his abrupt answer. She slid his little mug towards him, and he nodded his thanks. \"How do you get groceries?\" she asked.\n\nHe glanced at her wearily. \"They deliver.\"\n\nHe sipped the espresso, and it was good but very strong. He smiled at her expectant look, and her face lit up in a brilliant smile. That sensation of recognition returned, but he was still missing the clue that would connect the dots.\n\n\"You have a beautiful home! Is that door for a second bedroom?\" she asked, pointing to the door to the right of his bedroom door. Most of the stuff in that room once belonged to Imani.\n\n\"Yes, but it's just storage for junk and where I work out on my home gym.\"\n\nTyson finished making his breakfast and carried it to the small table next to the patio doors to look out at the lake while he ate.\n\nOf course, Ms. Taylor thought that was an invitation to sit between him and the doors, blocking his view. She smiled at him, and his irritation at this spiked. He was feeling pressured, and he didn't like it.\n\n\"Did George tell you I won't teach idiots?\" he asserted, regretting his bluntness as the words left his lips.\n\n\"Yes, Professor Haley was very clear that I would need to prove I was worthy of your time,\" she said calmly.\n\n\"And?\"\n\nMs. Taylor proceeded with her pitch as Tyson listened in silence, eating his breakfast.\n\nHe felt himself nod approvingly as he heard things he was impressed with, and she seemed to sit up a little taller each time he did, her smile showing her pleasure at receiving this tiny bit of praise.\n\nWhen she reached the end and described how her grade was slipping, he recalled George's comment regarding the mystery. He had to agree. This woman had so many privileges, yet this starts to slide, and she makes no effort to resolve it?\n\n\"Why?\" he asked bluntly.\n\nHer smile wobbled as she thought she'd been explaining why.\n\nHe saw her confusion. \"No, why is this grade slipping?\"\n\nHe saw that sink home, and she went quiet as she thought about it. Finally, she seemed to find something. \"My other classes are simple in comparison. It feels like I already know all the material, and it comes naturally. I have to make a stronger effort in this class.\"\n\n\"And you haven't made a stronger effort because...\"\n\nHer eyes locked on his as her smile slipped away, and he saw a momentary flash of depression. He was very familiar with that foe.\n\n\"Count your privileges,\" he said, and her expression clouded.\n\nThe fire of anger flashed in her pretty eyes. \"Listen, I know I'm one of the fortunate ones to be born into wealth and privilege\u2014\" she began as her steam began to show.\n\nTyson shook his head. \"No, it's a mental exercise. Count the things you are grateful for.\"\n\nShe blinked at him. \"Am I being given a mental evaluation?\" she asked, suddenly recognizing the process.\n\nHe gave her a stern look. \"If I'm going to be able to teach you, I need to know if your block is purely conceptual or is tangled up in something emotional. Each requires a different approach.\" He wanted to tell her he was in no condition to deal with someone else's emotional baggage, but something held his tongue.\n\nShe nodded to him with wide eyes and went back to thinking of her privileges, as he labeled them.\n\n\"Can't be a thing. Concepts only,\" he clarified, and she shot him an annoyed look.\n\nShe cleared her throat delicately. \"I'm grateful for my family. I'm grateful for my friends. I'm grateful for my fianc\u00e9. I'm grateful for being able to attend this university. I'm grateful for\u2014\"\n\n\"Stop. You just mentioned the most significant sources of your potential for happiness. People. Which one was the lie?\"\n\nShe made a sound of outrage, but he wasn't listening and pushed forward.\n\n\"Your parents. Is your dad pressuring you to do something with your life? If your mom too critical of your choices?\" he asserted.\n\n\"No! They're nothing like that! They've been nothing but supportive,\" she bit back, but he saw something in her expression again.\n\n\"So, they support something you don't agree with. Let's move on,\" he pushed, and her outrage just increased. He didn't care, as he had nothing to lose. He understood George's refusal to adjust her score. Tyson was also protecting his integrity as a teacher... though he had no interest in returning to that occupation.\n\n\"Your friends. Do you have any frenemies in your clique? Someone you don't trust at your back? Someone who may be plotting against you now?\" he asked.\n\n\"Again, no! I don't let people with poisonous personalities close to me!\" she snapped.\n\nBe nodded. \"Then it must be the fianc\u00e9. He leaves something to be desired? Is he too assertive? Not assertive enough? Has he abused you?\"\n\n\"He would NEVER\u2014\" she gasped as her eyes flew wide. She stared at Tyson like he was a rabid dog.\n\n\"But, he doesn't rock your world in bed?\" Tyson asked as he picked up a hesitation and took a wild guess.\n\nMs. Taylor stood and stepped around the table. He saw the slap incoming, but he just accepted it.\n\nHe'd felt worse pain.\n\nChapter 4\n\nChristy stormed out of the house and dropped herself in the driver's seat of her car before the tears came. She wasn't even sure why she was crying. She told herself it was because of his rude behavior, but she wouldn't allow herself to accept that as entirely accurate.\n\nHe'd been right, and she couldn't deal with it. She allowed herself to release her tension and gradually pushed back against her tears until they stopped.\n\nShe couldn't give up, or she'd fail the course. She didn't want to prove to the man inside that house that he was correct in his assumption that she wasn't worthy. She was completely worthy!\n\nChristy climbed out of the car and lifted from the back seat the bag containing her books and notes for the math course.\n\nShe took a deep breath and turned back to the cottage-style home.\n\nBe bold or go home.\n\nShe marched back to the front door and rang the bell. Moments later, the man's face held a suspicious expression as he peered at her through the screen door.\n\n\"I'm sorry for slapping you.\"\n\nHis expression didn't change as he spoke to her. \"No, you're not. You had reason to do it. I was rude.\"\n\nShe waited a second. \"May I come back in?\"\n\nHe sighed and stood aside, gesturing for her to enter.\n\nShe walked back to the table and set her bag of books on the table.\n\nHe looked at it with a frown. \"I haven't agreed to teach you yet.\"\n\n\"You've identified the issue I'm having that's affecting my grades\u2014\"\n\n\"Only half of the issue has been dealt with. Identifying it was a good start, but you need a definite plan for resolving it, or it'll continue to block you,\" he suggested.\n\n\"I'm calling off the wedding,\" she asserted, surprising herself by how good those words felt. She felt a weight lifting from her shoulders.\n\nTyson's brows went up in surprise. \"That seems rather extreme for a little bedroom issue. You could just go for counseling for that.\"\n\nShe frowned and shook her head. \"It isn't just the sex.\" She thought about it for a moment, and with the decision to end the engagement already achieved, the remaining truths she'd been hiding from herself came forth. \"I... I think it's because we're too much alike. Our worlds are identical, and our likes and dislikes are the same. No friction means no sparks. It would be easy to be married to Blake, but I think I'd eventually die of boredom or begin having affairs. I've no doubt he'd have them, too. When he proposed, I was caught up in the excitement of the prospect of marriage, but it's not enough. It wouldn't be fair to either of us.\"\n\nShe looked at the diamond ring on her hand and tugged it from her finger with a sigh. She really liked the ring. She dropped it into her purse.\n\n\"Could we get started?\" she asked, and he couldn't suppress the small snort of amusement at her tenacity.\n\n\"Did I say I've agreed to teach you yet?\" he asked in return.\n\nBlue eyes locked on his brown eyes. \"You've identified the issue, and I've described my plan to resolve it. I won't let this prevent my career from proceeding. What else do you need?\" Christy asserted.\n\nHe nodded to himself as she demonstrated she was serious, and she saw his final reservation slip away.\n\n\"Fine. Take me to the last section you felt comfortable with,\" Tyson said as he moved to sit next to her at the small table. She smiled and pulled out her books, and turned to her notes.\n\nThey spent the rest of the morning in the review. He took her back two additional chapters before he was convinced she comprehended the material. \"You started missing things here,\" he pointed out, and she thought back to when they began the chapter in question. It was a couple of weeks after the engagement began. How had he known? She glanced at Tyson's face, and he looked back curiously, but she just shook her head with a self-conscious smile and turned her attention back to the textbook.\n\nHe took her back through the chapters, explaining the formulae and showing examples of how to use them. Christy made notes as they went and felt the information soaking in. She raised her hand to get him to stop on a particular problem they were solving. She recalled becoming seriously frustrated with this section before, but now it seemed far more understandable. \"Why can't they teach this the way you just did? It makes so much more sense how you just explained,\" she exclaimed in frustration.\n\nHe shrugged. \"Different teachers have their own style of teaching, but the math is the math. Numbers have a beautiful language of their own.\"\n\nHe glanced at the wall clock. \"Are you hungry?\"\n\nShe nodded with a little smile.\n\n\"I was just going to make a salad with grilled chicken. Does that work for you?\" Tyson asked, and her smile widened as she nodded to him.\n\n\"Run through those three practice questions while I make us lunch,\" he said, pointing to the textbook.\n\n\"Yes, sir,\" she said with a grin.\n\nHe went to the kitchen, and she caught herself watching his ass move in his tight shorts. She turned back to her notebook and started on the equations. She powered through the first two, but her mind was distracted by images of Tyson climbing out of the lake before she could get to the third. She couldn't believe he was fifty-eight! He looked so fucking sexy, walking from the water, naked.\n\n\"What's troubling you about the third question?\"\n\nShe squeaked as his voice caught her in mid-fantasy. \"Sorry, what?\"\n\nHe frowned at her. \"I said, what's giving you trouble on the third one?\"\n\n\"Oh, nothing. I just got a little distracted,\" she replied.\n\nHe gave her a raised eyebrow, then placed the lunch plates on the table as she concentrated on completing the final question.\n\nWhen she was done, she handed her work over to him. He quickly confirmed she knew the material.\n\n\"Looks like you have this under control. After lunch, we will complete the next four chapters. You are doing very well, so there must have just been a small conceptual misunderstanding.\"\n\n\"No, I don't think you understand just how much of a difference your teaching method makes for learning this stuff,\" she insisted.\n\nHe shook his head. \"I'm not a teacher anymore.\"\n\nShe shook hers. \"And that's a damn shame.\"\n\n\"If you want my help this afternoon, you'll drop it.\"\n\nShe threw her hands up in surrender. They dug into their lunches, and Christy was impressed. The salad was fresh, the grilled chicken was hot and a little spicy, which went well with the dressing. \"It's like spicy chicken wings in a cool creamy dressing!\"\n\nHe smiled and nodded. \"Secret recipe.\"\n\nAfter a few minutes of silence, Christy could no longer suppress the urge to ask him a question. \"If you don't drive, do you go outside for more than your morning swim?\"\n\nHe gave her an evaluating look then decided to answer. \"I go for a walk every day. I'll do it today after we finish the fourth chapter.\n\n\"Where do you walk?\" she asked.\n\n\"I walk the length of the lakefront road and back. Six miles,\"\n\n\"I have my gym clothes in my car. Could I join you today?\" she asked boldly.\n\nHe looked into her eyes, but all she showed him was hope. He seemed unsettled by something as he kept looking at her. He looked like he wanted to say no, but he caved. \"Fine.\"\n\nShe looked around and tried counting all the pictures of Tyson and his wife scattered around the room but lost track. \"You certainly have a lot of photos. I can't get over how much you changed!\"\n\nHe glanced around as well and shrugged. \"As I said earlier, the man in those pictures died that night. Everything he held as important died. I'm not Professor Kane. I'm just Tyson Kane now.\"\n\n\"Is math important?\"\n\nTyson froze, then looked into blue eyes challenging him to take his words back.\n\n\"Let's finish the tutoring,\" he said stiffly.\n\nThey spent the next three hours going through four chapters in the textbook. Christy made detailed notes of his explanations, and she asked many questions. He never lost his temper or made discouraging noises. She looked more and more relaxed as the lessons proceeded, and as they finished up the last chapter, she closed her notebook with a satisfied sigh.\n\n\"I now have a buffer. We went one chapter beyond what's being taught at the university, and I know the methods and formulae. I'm going to ace the next test. I feel it. Thank you so much!\"\n\nHe nodded to her and looked away from her smile with a troubled look on his face.\n\n\"Are you ready to take your walk?\" Christy asked.\n\nHe stood up and stretched, and her eyes went to the exposed patch of his abdomen and marveled at the muscles there. \"Yes, I just need to get changed.\"\n\n\"Let me put my books away and get my gym clothes,\" she said, and she leaped from her chair. She stuffed her books into the bag and dashed outside. She switched bags in the car and carried her duffle bag back into the home.\n\n\"You can use the guest bathroom to change,\" he offered, and she headed inside.\n\nOnce the door was closed, she let herself grin mischievously. He wasn't gonna know what hit him!\n\n-=-\n\nTyson watched the bathroom door close and wondered how he'd gotten himself into this situation. Granted, it was George's fault for sending her his way. She was certainly easy on the eyes, and her lovely outfit hinted at a well cared for body. He scowled at himself as she was young enough to be his daughter and almost a granddaughter at that.\n\nPushing that from his mind, he went to the master bedroom and slipped into his running tights. Not that he'd be doing any running that day as his knee was acting up. He slipped on a pair of ankle socks. He went back to the living room, locked the patio doors, and grabbed his keys. He sat on the bench by the front door and put his runners on. He heard a noise and looked up.\n\nHis jaw dropped, and he froze as she prowled toward him. As his eyes panned up her body, he saw her runners were a splash of color below the bands of skin at her exposed ankles. Her yoga pants were clinging to and accentuating her sleek curves. They were patterned with boldly-colored parrot feathers from just above her ankle to just above the knee. Rising out of the feathers, climbing up her long thighs, and encasing her spectacular ass, the pattern was orange, gold, and brown leopard print. Her flat tummy muscles were firm and visible from waist to below the matching leopard print sports bra, which contained and controlled her generous bosom. He saw she was giving him a dazzling smile for his dazzled expression, and her lovely blonde hair was tied back in a ponytail.\n\n\"Uh, that's quite the outfit.\"\n\n\"Do you like it? This is my first opportunity to wear it,\" she said, sliding her hands over the smooth fabric, and Tyson felt an unfamiliar surge of tingles between his legs. It'd been years since he'd gotten excited about a woman. He was really uncomfortable about it happening for a woman who was this young.\n\n\"Yes! I mean, it's... very flattering. You look... yes. We should go,\" Tyson stumbled through his response as he struggled to find someplace else to look.\n\nShe moved out the door with a satisfied little smile on her lips, and his eyes immediately went to her ass. His breath caught as it truly was one of the sexiest asses he'd ever seen.\n\nHe locked up and saw her eyeing his ass in his tights. Her face flushed at being caught. Then her eyes widened slightly when she saw the bulge growing up the front of his walking pants.\n\nTyson did his best to relax as he walked down the drive to the road. He turned left, and Christy fell into step next to him.\n\nHe glanced at her happy expression and frowned in puzzlement. \"I'm sure this isn't giving you as good a workout as you would be getting at the gym. And you'd be showing off your new outfit to a much younger audience who could show you better appreciation for your beaut\u2014 your outfit!\"\n\nShe bit her lip to hide her smile at his slip, then shook her head as they set a brisk pace along the road. \"The gym gets stale after a while. Getting outside from time to time feels really good,\" she said with a wide smile. \"Besides, you're far more fit than anyone I've ever seen in our gym.\"\n\nHe looked at her with raised eyebrows, and she nodded to indicate it was the truth. \"You are seriously hot!\"\n\n\"For someone who's almost sixty, you mean,\" he suggested.\n\nShe held up her hands. \"No, you just look hot. I don't see you as old, at all!\"\n\nThey walked on in silence as he contemplated this new information. He was flattered, but that's all. The truth was, he was approaching the end of his life while she was just beginning hers.\n\nThey reached the western end of the road, where it once continued to town on the country road. They passed the spot where the train crossing used to be. As he always did, Tyson stopped to take a moment to reflect on the statistical impossibility of the events that transpired that night. He almost wanted to call it a failure of the numbers, but his empirical evidence proved that it could, and did, happen.\n\n\"Is this the spot?\" Christy said gently, and he glanced at her.\n\nHe began to move away from the crossing, heading east along the road as she followed. \"Yes. They found me in that ditch.\" He pointed to the spot twenty feet away where his body came to rest once it was ripped from the shattered car. They stopped again as there was a large stone with Imani's name etched in it. She wasn't buried here, of course, but the town wanted to honor her, so... here was the stone. He walked on.\n\nHe moved to a light jog to get away from the reminders of the accident, and the pain in his knee wasn't too bad. Christy jogged up beside him, and he felt her watching him from the side. He looked over, and she gave him a sympathetic smile.\n\n\"Please don't.\"\n\nShe was quiet for a moment. \"Sorry.\"\n\nThey continued to jog until he had to drop back to walking as the ache was signaling it was time not to press his luck.",
        "\"What's wrong with your knee?\" she asked.\n\n\"It needs replacing,\" he grunted.\n\n\"I understand that's a pretty straightforward operation these days,\" she suggested.\n\nHe nodded but remained silent. For him, it wasn't the thought of the operation but the drive to the hospital that sent ice through his veins. The psychologist he'd met in the hospital told him he could get over that with therapy, but he hadn't gone back to the hospital since he left. His life just went on hold.\n\n\"I could give you a lift if you want\u2014\"\n\n\"NO. Sorry. No, I don't... drive or ride in cars,\" he insisted.\n\nShe was quiet once more, and he did his best to avoid looking to see her disappointment, but he finally had to look over at her. It wasn't disappointment. It was pity, which felt worse.\n\n\"Don't! Listen, I don't deserve your pity. I don't need it,\" he growled, but his voice went shaky, spoiling his moment of defiance. He clammed up.\n\nThey walked along the tree-lined street, soaking in the ambiance of nature.\n\n\"I suppose if you had to pick your prison, you chose well. It's lovely here,\" Christy said calmly.\n\nHe turned his look of outrage to her, but she just held his eye and defied him to argue the point.\n\nHis jaw worked, but no words came. He tried to jog away from her, but two steps later, he was back to walking. His knee wasn't taking his shit either.\n\nShe returned to his side to pace him and remained there until they reached the eastern end of the lakefront road, where they turned and began heading back on the lake side of the roadway. Christy eyed the homes along the route with interest.\n\n\"How much would it cost to buy one of these homes?\" she finally asked.\n\nHe snorted. \"You'd never find an owner willing to sell, even if they could.\" At her look, he explained. \"The property tax is zero because the land is actually owned by GRT. We can't alter the footprint of the homes or add additional stories. We're not allowed to pave the driveways. The homes are leased, so we can't sell them, but we're allowed to pass our lease to a family member. The original owners of GRT were old-school pioneer family types and believed in family homesteads. So, even with all the restrictions, we have a really sweet deal. That said, there is a lot of potential money tied up in this land. The lease runs out in roughly sixty years, at which time you will likely see one of two things: GRT may evict everyone and sell off the properties for a large fortune per lot. Massive mansions would be built where these bungalows now stand.\"\n\n\"What's the other option?\" she asked.\n\n\"Rumor has it GRT will send a big fuck you to the town council by setting up another century lease with the current owners with the same restrictions.\" He saw the incredulous look on the pretty face of the blonde. \"Tensions had eased considerably between the town council and GRT until the accident and the subsequent lawsuit. The council tried to force them to hand over the property around the lake and the forest. Instead, they got the new road so the town could build a new subdivision for themselves with their developer buddies. That generated a lot of new bad blood between them and GRT. Dumb, greedy bastards.\"\n\n\"So those houses I saw on the way in\u2014\"\n\n\"Are eighty percent owned by members of the town council,\" he said with a grim expression.\n\nThey continued on as Christy seemed lost in thought.\n\n\"Blake's mother is a member of the town council, and his father is a real estate developer,\" she finally said.\n\nHe saw the troubled look in her eye and shrugged. Better to know now than after vows are given.\n\nWhen they made it back to his place, Tyson's knee was aching badly. He really shouldn't have aggravated it by jogging. He spotted his west side neighbor, Mrs. Willowby, working on the flower bush by her gate. He recalled she preferred to be addressed by her first name. \"Good afternoon, Barbara.\"\n\nShe looked at them approaching, and when she saw Christy at his side, her smile widened. \"Good afternoon, Tyson. So good to see you outside with such beautiful company!\"\n\nHe sighed as Barbara tended to mother-hen him. \"This is Christy Taylor. She's attending university in town, and George sent her to me for tutoring in math. Christy, this is Barbara Willowby, my neighbor.\"\n\nChristy shook hands with his neighbor, and they shared smiles.\n\n\"So good to hear you're teaching again!\" Barbara gushed.\n\n\"He's an amazing teacher! He resolved the issue that was blocking my comprehension of the latest chapters, and now I have no doubts about passing my finals!\" Christy said with equal enthusiasm.\n\nTyson gave both women a look of frustration as they beamed, admiring smiles back at him. \"I'm not going back to teaching! This was a one-time thing. As a favor for George.\"\n\nBarbara gave him a disapproving pout. \"Now, that would be a shame! You have such a remarkable talent for it to go to waste...\"\n\n\"That's my choice, isn't it,\" he asserted.\n\nThe ladies traded glances, and Tyson was done. \"Have a good evening, Barbara,\" he said and turned to walk up his driveway. He heard Christy say her quiet goodbyes and rush to follow him.\n\nHe opened the front door and held it for Christy. He saw Barbara was still watching, so he waved before stepping inside. He locked the door and heard Christy sigh happily behind him. He turned and froze as her perfect breasts were no longer strapped down and hidden by her yoga bra.\n\n\"What? What are you doing?\" he gasped.\n\nShe smiled as she purred, slowly rubbing the marks the elastic left on her skin. This had the effect of lifting and squeezing her tits in a highly suggestive way. His cock woke up quickly and began to press against the tight fabric of his running tights.\n\n\"I know it helps keep my girls in place, but it feels so much better taking the bra off!\" she sighed.\n\n\"You can't\u2014\"\n\nShe moved closer, and his eyes were trapped by her swaying breasts, a slight sheen of perspiration making them shine.\n\n\"I think I can,\" she purred as she watched the bulge straining against his tights.\n\nShe took two more steps, her mouth was on his, and Tyson's mind went blank.\n\nIt had been so long since he'd felt soft lips on his and a wet tongue slipping teasingly into his mouth. Christy's firm breasts were pressed tightly against his chest, and only then did he realize how tightly he was holding her against him. He came back to his senses and tried to step away from the young woman.\n\n\"No!\" Christy yelped insistently and dropped to her knees before him to tug his tights down to his ankles. His cock sprung out, and she grinned. \"Oh, yes! That's more like it!\" she gushed, then his cock was sliding deep into her hot mouth.\n\n\"Fuck!\" Tyson cried out. He had no experience with this, as Imani had refused to give him oral sex, though she had no qualms about receiving it.\n\nChristy was very enthusiastic and used her hands to stroke what she couldn't fit into her mouth.\n\nThis resulted in one critical problem for Tyson. It'd been more than five years since he'd had sex with someone else in the room. He wasn't going to last long\u2014 nope, not at all.\n\n\"Christy... Christy! It's too good! I'm gonna come!\" he gasped.\n\nShe looked up at him with excited blue eyes and purred happily.\n\nThe extra vibration was all it took to push Tyson over the edge. \"FFFFUUUUCCCCKKKK!!!!\" he growled as he fired surge after surge of cum into the blonde's hot mouth. She swallowed quickly and licked him clean once his body was done. He pulled away because he was too sensitive.\n\nChristy stood before him with a hungry look in her eyes. \"Can you give as good as you get?\"\n\nHe blinked at her, but he knew what she wanted. Did he want to do this? With her?\n\nNow that she'd given him the most fantastic oral sex he'd ever had, he felt somewhat obligated to return the favor. Drinking in her sexy body with his eyes, he realized he really did want to, very much.\n\nNot allowing himself to overthink this, he grabbed her hand, dragged her across the living room and into the master bedroom. He stopped next to the bed and pulled her to him once more to taste her lips and tongue. She moaned into his mouth as his hands slid down her back and over the slick fabric covering her ass. He squeezed her ass in his big hands, and her moans got louder and more urgent.\n\nHe pulled back from the kiss to drop to his knees before her. He slowly peeled her tights down her long svelte legs. He was stunned to see she only had a small patch of blond hair above the wet lips of her pussy. He glanced up and saw she was biting her lip nervously as she watched him.\n\n\"You are... so beautiful,\" Tyson sighed. Her nervousness disappeared, and she pulled his face towards her, eager to feel his mouth on her.\n\nHe grinned and gave her a little push instead. Her legs hit the bed, and she dropped back onto the mattress. He tugged her shoes and tights completely off as she pushed herself up on her elbows to pout at him. When his lips caressed the insides of her knees, her pout became a gasp, which became others, louder and more desperate as he touched, licked, and kissed his way up her inner thighs.\n\n\"Tyson! Oh, my god, Tyson! I need your mouth on me!\" she begged as he got closer.\n\nHe pressed his lips to her mound, her hips came off the mattress, and she moaned with need.\n\nHe'd spent considerable time between his wife's legs, so he knew what Imani liked, but Christy seemed a little more sensitive, so he had to be less aggressive... for now.\n\nWhen he sucked her lower lips into his mouth, she cried out and grabbed his hair in both hands. He stroked her opening with a finger as his tongue traveled its length. He listened to her sighs and coos, learning what she liked and didn't. When he slipped the wet digit into her while gently sucking on her clit, she cried out once more as her body arched up from the mattress. He rubbed the finger along the roof of her vagina until he found the little patch that sent her into convulsions. She tried to pull his head even tighter against her pussy as her cries climbed higher and higher.\n\n\"Oh, fuck! YES! YES! That's it! Fuck! OH! OH! Right there! AH! AH! AHHHH!\"\n\nNow, Tyson went for the prize. He slipped a second finger inside and turned up the aggression on his licking and sucking.\n\nChristy's voice went silent as her orgasm stole her ability to do more than gasp for air. He felt her body quaking through intense pulses of muscle contractions and trembling. He slid his free hand up her tight stomach, cupped one of her beautiful breasts, and gently tugged on the stiff nipple.\n\n\"FUCK! FUCK! FUCK! AAAAHHHH!\" she screamed as her voice suddenly returned. Her hand landed atop his on her breast, and she squeezed it tight as she continued to crest through her release.\n\nFinally, she pushed at his head, and he pulled back, sliding his fingers free. He sucked them clean as she watched him, panting and trembling through little after quakes. She flopped back on the mattress and closed her eyes as she came back down to earth.\n\nHe pushed himself up to his feet and watched her rest. A little voice in his head asked him what the FUCK he thought he was doing? Another moment of clarity bitch-slapped him, and he almost staggered from the abrupt mental redirect. He was no longer thinking with the little head, and the big head was pissed. She was practically a kid!\n\nHe'd never been promiscuous before; he wasn't even much of a flirt. Yet here he was, basking in the aftermath of a very satisfying orgasm from a beautiful young woman he'd known for mere hours, who was enjoying her afterglow as well. What made him break a lifelong behavior? It was true that she was beautiful and smart, but they were generations apart. They had nothing in common. Even their value systems were out of sync.\n\nWhile it was true that he'd been alone for a little more than five years and was very much a widow, he was still wearing his wedding band. He didn't need to be faithful to his wife, as he no longer had one. That said, he felt vaguely guilty, like he'd broken some unspoken rule.\n\n\"What's wrong?\"\n\nHe looked to the beauty who was leaning back on her elbows once more. His dick did a little lift seeing her spectacular breasts, but he suppressed his instincts.\n\n\"I... I don't know why I did that,\" he said, his heart feeling like a lump of cold stone in his chest.\n\n\"You're overthinking fun sex between two consenting adults,\" she answered and watched the lost expression on his face. \"I think you're sexy hot, and your mind intrigues me. You think I'm sexy, yes?\" She raised a delicate eyebrow at him.\n\n\"Definitely, and I think you're mentally intriguing, as well,\" he confessed, awkwardly.\n\nShe nodded with a smile. \"That's all it needs to be. Just a hook-up, but an amazing one! No one has expectations, though I'd really like to see what you can do with that,\" she said, gesturing to his semi-hard erection.\n\nHe was still reeling from his behavior change, so he nodded shakily and made his way into the bathroom. He stepped into the shower stall and got the water running. He jumped slightly when he felt her hands on his back. He looked back at her, and she had a sexy little smile on her lips. He turned to face her to explain how bad an idea this was, and she kissed him again.\n\nFuck! Her mouth was addicting! He was suddenly kissing her hard and deep, and his hands were massaging her tits. He felt her squirm and gasp as he teased her nipples. He pulled back from her mouth and took a nipple between his lips. She cried out and pulled his face tighter against her tit.\n\nTyson needed her. Now.\n\nHe reached back and slapped the shower off, then released her nipple as he lifted her against himself. She wrapped her arms around his shoulders as he walked her out of the shower. He sat her on the towel he'd left on the vanity counter, then pulled her close to the edge. She was still very wet from before and from his actions just now, so his cock slid easily across her nether lips, becoming coated in her wetness. She reached between them and aimed the head against her opening. He pushed forward, and his cock began to slide inside.\n\nHe stopped with wide eyes. \"Condom?\"\n\n\"Pill, keep going!\" she insisted, a look of intense concentration on her face.\n\nIt felt better than anything he could recall. She was hot and wet and tight! His resistance crumbled, and he was hers.\n\n-=-\n\nChristy was so fucking horny! His body was so hard and strong, and his need was so intense, she felt like she was caught up in his passion. She sighed at the exquisite sensation of his heat sinking deeper into her body. She leaned back against the mirror and caught sight of motion to the side. Turning her head to the right, she gasped as she saw a second mirror showing a side view of them fucking on the counter. Her eye widened as this was so sexy! She could see his cock driving into her.\n\nShe gasped when he grabbed her legs behind her knees and pushed them back, exposing her and giving him better access. He drove himself into her like a machine, and she felt her mind lifting away. She couldn't stop watching herself in that side view mirror as it heightened the impression of being outside of her body, watching someone else get the fucking of a lifetime.\n\nExcept she could feel it. Every powerful stroke. Every exquisite surge of bliss as their bodies collided with a slap. He was filling her and almost pulling free, faster, and faster. It was too much, too good, better than she'd ever had.\n\nThen he got serious.\n\nHis muscles stood out in high detail as he doubled his speed. The slaps against her clit caused her to cry out, but instead of pushing him away, she clawed at him to go harder.\n\nHer orgasm obliterated her mind as it sent bursts of lightning from her clit through every nerve in her body. Still, he pounded into her, and the sparks grew. She was losing her ability to do anything but absorb the bliss.\n\n\"Tyson... fuck... oh, fuck... too much... so good... fuck...\" she managed to babble quietly.\n\nThen he slammed himself deep one last time and ground his body against hers. He roared, and Christy felt his heat filling her. It was primal, and time seemed to pause. Her mind filled with a strange mix of bliss, surrender, wonder, and confidence as she felt so safe and desired. She shook her head as none of it made sense, but it seemed so incredibly important at that moment. Her head and emotions were so mixed up that all she could do was cling to his trembling body, pulling his face down to hers to gently kiss his lips.\n\nBut the kisses felt like promises she wasn't sure she should be giving, so she rested his forehead against hers.\n\n-=-\n\nTyson felt the final bursts of pleasure slowly fading as he panted above the young woman. His muscles hummed with energy as they did after a particularly strenuous session, and he felt better than he had... since that night.\n\nHe pulled back gently, and Christy released her grip on his head. He lowered her arms to rest on her chest, where his eyes lingered for a moment.\n\nHe was still pinning her to the counter with his pelvis, so he carefully reduced the pressure and pulled himself free. She cried out and panted once he stood back. He saw her pussy lips were puffed up and red from the repeated slapping. He hoped he hadn't hurt her too badly. Looking at her face, she seemed truly out of it, so he carefully repositioned himself to pick her up in his arms. She sighed as her face came to rest against his shoulder.\n\nTyson carried her back out into the bedroom. His brain was screaming something at him. Something so familiar.\n\nHe laid her down on the bed, her hair spread out over the pillow, and her hands came up to pull him down to her lips. The kiss was hot, passionate, but tender as well. As he pulled back, his muscles began to shake. Her blue eyes looked up at him, a question in them as she felt his muscles trembling. His eyes were so wide.\n\nAshley.\n\nYoung as she'd been when they began their university careers. Just as lovely.\n\nWhy hadn't he seen it before?\n\n\"Are you okay?\" she asked softly.\n\nHe couldn't speak, so he just nodded. He needed air.\n\nTyson was standing on the lake's shore, the cool breeze off the lake bringing goosebumps to his naked skin. He wasn't sure how he got there.\n\n\"She really is beautiful.\"\n\nThat voice again.\n\nHis eyes glanced up to the sky, and dusk was just beginning to darken the heavens, so she was early.\n\nHe turned his head to the right, and Imani stood next to him, almost close enough to touch. He ached to do so but knew he couldn't.\n\nThe breeze was pushing her mane of hair back from her face, and she turned sad eyes toward him.\n\n\"The lake doesn't want you.\"\n\nHe took a step away from her, as her words felt like a slap.\n\n\"The woman inside does.\"\n\nHe shook his head in confusion, then turned his eyes to the glass patio doors. Inside, wrapped the comforter from his bed, was Christy.\n\n\"What do...\" He looked back at Imani, but she wasn't there. That he'd tried to talk to her shook him more than he cared to acknowledge.\n\nHe shivered again, and his feet turned him from the dark waters. His legs carried him across the yard to the back yard, and his arms and hands opened the door to take him inside.\n\nWorried blue eyes looked into his brown ones.\n\nHe felt pressure to confess and gave in. \"She said the lake doesn't want me.\"\n\nSoft hands touched his chest and felt the chill on his skin. Christy opened the comforter and pulled him inside the cocoon of heat, warming him with her body.\n\nThey stood face to face. \"Who said that?\" Christy asked.\n\nHe looked into her eyes and saw only warmth. He didn't want to answer, but something said everything was going to be okay.\n\n\"Imani.\"\n\nShe watched him as he watched her, and a little smile appeared on her lips.\n\n\"Smart lady. Can you tell me about her?\" she asked as she drew him to the couch before the little wood stove.",
        "He put another log into the heater then rejoined Christy under the quilt. He felt... lighter. More at peace. He was ready to talk.\n\nAnd Christy listened.\n\nPart 2\n\nChapter 5\n\nTyson Kane felt like a new man.\n\nActually, that felt like an exaggeration. He felt like a man with a new knee that was finally beginning to work without the constant ache. Without the reminder of his knee replacement operation, he had the impression of being a new man.\n\nIt also didn't hurt this illusion that he had a gorgeous young thing as his companion and bed warmer a few times a week.\n\nChristy Taylor had a full schedule with her courses and her new part-time job. When she had free time, she'd come to visit him at his cottage on the lake. She'd spent a good deal of time with him since that day the previous year when she'd surprised him in his backyard. In that one day, she'd gone from stranger to student, to lover, and finally confidante.\n\nFor someone so young, she'd proven to be a force of nature. She made it possible for him to disclose what he'd been keeping to himself. The fact that he occasionally saw his dead wife at night.\n\nSince that initial confession, he'd had fewer visits from Imani... but they hadn't stopped.\n\nChristy put his mind at ease about talking to her about it when she said she believed it might mean he had some unresolved issues regarding his wife. Their parting had been so sudden, and they'd been mid-argument. This was a rational evaluation he could accept. If she'd mentioned a s\u00e9ance or anything occult, he would have sent her packing.\n\nTyson snorted at himself. Sure, he'd kick-to-the-curb a beautiful, sexy woman who rocked his world in bed a few times a week. As if an old guy like him had so many opportunities like this. She'd taught him some new tricks and positions, but for some reason, her favorite was being pounded on the bathroom counter.\n\nHe felt himself stiffening in his shorts, so he mentally wrestled his mind back to more innocent thoughts.\n\nHe turned in his driveway from walking the lakefront road, made his way directly to his backyard, and stopped at the lake's edge.\n\nTruthfully, he'd come to crave Christy's company. He recognized that he'd become a recluse during the five years after the accident. While a fifty-nine-year-old man had little in common socially with a twenty-two-year-old woman, they found comfort in sharing their perspectives on current events, though their viewpoints were often significantly different. He was learning to actually listen to what she was saying, not what he thought she was saying, and she seemed to be learning the same for him.\n\nThey'd also discuss their daily activities. Or rather, she talked about hers as his remained rigidly the same, day-to-day.\n\nThe previous year, Christy had begun working on improving his living conditions, with small changes he could accept.\n\nOver about a month, he discovered that she'd been inserting photos she'd taken of them into some of the frames scattered around his home. The original pictures showed him and Imani, or just Imani. Christy didn't replace all of them. Some of his favorite shots of Imani were still there, but not necessarily in the same places. There were also some with just Christy's smiling face. These were put in more prominent positions.\n\nShe also managed to get him to agree to a major change: knee surgery. She got him to the hospital, heavily tranquilized, and a few days later, they shipped him home, equally tranquilized.\n\nChristy conspired with his neighbor, Barbara Willowby, to frequently check in on him during the initial weeks after the surgery.\n\nLater, Tyson found photos of Barbara in some of the frames. He wasn't sure who swapped them out.\n\nThe recovery period for his knee was long, but pain was an old friend, so he pushed forward until he reached this day's result: six miles at a fast walking pace with negligible pain in his knee.\n\nHe'd asked his doctor when he could begin jogging again. The man asked him to sit still so he could strike his knee with a hammer and just get it over with. So jogging wasn't recommended by his doctor. The fast walk would have to do for now, but he needed something better.\n\nThe waves looked peaceful this morning. He'd already been in the lake earlier. It was still part of his daily routine to swim out and back once, except now, he didn't wait for the first signs of exhaustion before heading back.\n\nImani told him the lake didn't want him. Her words had frightened and shamed him, so he no longer tested his physical limits in the cold waters. These days, he'd reach the shore again just as the drag of exhaustion began.\n\nHe was no longer offering his life to the lake.\n\nHe sighed and turned his back on the beautiful blue waters, heading inside for his shower and breakfast.\n\nAfter that, he'd do the other new thing Christy had introduced him to, checking in with his math nerd buddies on an Internet community discussion board. It had taken a couple of weeks to get past all the messages of surprise at his being alive, then condolences for the loss of his wife before anyone would just fucking talk about math! Now he had a few regulars with whom he kept in touch. It wasn't everyone else's dream of scintillating conversation, but he enjoyed it. He'd actually picked up some promising ideas he was rolling around in the back of his mind.\n\nHe smiled as he stepped inside. He had a morning routine to continue.\n\nChapter 6\n\nChristy Taylor was having another of those moments of enlightenment. She was sitting in her Mercedes Benz C-Class Coupe in the coffee shop parking lot, letting the thoughts filter through her mind. She'd learned to give her brain time to absorb new ideas and viewpoints. It was another lesson from Tyson.\n\nThis morning she was grateful for so much, but not things. That was something else Tyson insisted upon for himself. No emotions related to people should be applied to inanimate objects. It diminished the significance of the sentiment.\n\nHe hadn't forced any of his personal philosophies on her. It was just how he decided to live his life, and these rules made sense to her as well.\n\nShe wasn't looking forward to telling Tyson she wouldn't be able to see him anymore because she was leaving town. She had an opportunity waiting for her in New York City. She'd be finishing her education there as well as starting her career at the headquarters of a prestigious fashion retailer. It was a step in the right direction.\n\nShe knew Tyson would be thrilled for her and very supportive. He'd try to hide how sad he'd be to see her go. She was still worried about him. He wasn't ready to be alone. He continued to be a prisoner to his mental blocks. He couldn't ride in a car and hadn't been able to even sit in hers in his driveway with the door open for more than a few minutes.\n\nShe sighed. She needed to find a new companion for him. Then she could leave with some peace of mind. She knew he could take Barbara in small doses, as he felt the woman was too controlling, and honestly, he was right. Barbara's maternal instinct was way too strong. Perhaps that was why her own kids visited so infrequently.\n\nChristy went through her list of friends and tried to think of one who might be available to spend some time with Tyson to help him break free of his fears. Unfortunately, most had long-term boyfriends who weren't secure enough to let their girlfriends spend time with someone as hunky as Tyson. She squirmed a little in her seat as she recalled their last date night. Fuck, she was going to have a difficult time finding a new boyfriend who could fuck half as good as Tyson.\n\nShe pulled her mind from that and went back to her friends. There was Rachel who just broke up with Chris... after just getting back together with him for the great make-up sex. Yeah, that girl was trouble, and Tyson didn't need that. Neither did Chris, but if he took her back again, they deserved each other.\n\nJillian! She wasn't seeing anyone at the moment! She thought about their conversation about her last boyfriend and recalled Jillian had real daddy issues. Perhaps dating someone who could be her daddy would be tempting fate. Certainly, Jillian would enjoy it, but she knew Tyson would definitely have problems if she suddenly started calling him that in the throes of passion.\n\nSo Jillian was out.\n\nMiranda was seeing Vince, but that was new, and Christy had a bad feeling about the boy. He was friends with Blake, and after having her eyes opened by Tyson, she now saw her ex-fianc\u00e9 for the entitled little shit that he was. Vince wouldn't be much better.\n\nShe thought Miranda might actually be a good match for Tyson as her outgoing personality and her driven positivity might help push Tyson out of his shell. Christy's other friends found Miranda to be a little obnoxious and reckless. The truth was, she just suffered from a little social awkwardness. Nothing Tyson's patient nature couldn't deal with. He might even help her gain some confidence.\n\nThe woman was a second-generation American with Mexican heritage. She was a few inches shorter than Christy with lovely caramel skin, soulful brown eyes, lush, full lips, and long brown hair to just above her ass.\n\nMiranda complained vehemently about her ass as it rounder than any of her white friends. It wasn't all fat either, as she had strong muscles in there from her dedication to her favorite sport, road cycling.\n\nCompensating for her extra bodacious ass, her breasts easily fit under a man's hand. She was always lamenting Christy must have received Miranda's share as well as her own from the booby fairy.\n\nThis kind of outburst and how she clung to Christy's chest when she said it was just the kind of thing that made Christy's other friends uncomfortable. Christy just thought it was funny.\n\nJust what Tyson needed.\n\nShe started her car and drove back toward her neighborhood but turned onto a side street just a block short of her own. Miranda Moreno lived with her parents in a lovely five-bedroom home a block away from Christy's parents' mansion. Miranda was the oldest child, but she had an eighteen-year-old brother, Ra\u00fal Jr., and a sixteen-year-old sister, Natalie. As a single child herself, Christy envied her friend having siblings, not that she'd told her own parents this.\n\nMiranda's dad, Ra\u00fal Sr., was a very successful stockbroker, and her mom, Marie, had a thriving staging business. Christy heard from her friend that Ra\u00fal just got a new pickup truck for his eighteenth and was eager to ask Christy if she'd like to take a drive with him some night. Miranda hadn't been able to deliver that news without bursting into laughter at the look on Christy's face. Apparently, he considered himself to be a player.\n\nShe parked and walked up to the front door to ring the bell.\n\nMoments later, Ra\u00fal Jr. was standing in the doorway with a delighted smile.\n\n\"Good morning, Christy! You look beautiful this morning,\" he said as smoothly as an eighteen-year-old could.\n\nShe gave him a knowing smile and a raised brow. \"Good morning, Ra\u00fal. I think you should save that charm for your girlfriends.\"\n\n\"Christy! Ignore that fool and come on back to the kitchen!\" Miranda's voice called out from the other room.\n\nRa\u00fal seemed to be lost in Christy's blue eyes and brilliant smile as he pondered the meaning of her comment. She could imagine him wondering if she thought he was hot enough to have multiple girlfriends.\n\nShe stepped around the muscular young man. He obviously spent time in the gym. Maybe that's where he picked up the toxic masculinity.\n\nShe walked into the kitchen, feeling his eyes on her ass the entire way.\n\n\"Junior, get your eyes off my friend's ass! Stop acting like such a stupid little shit!\" Miranda snapped, and Christy's eyes went to her friend in concern.\n\n\"I'm not, and stop calling me Junior!\" he barked back. When Christy looked at him, he tried to get his cool back. \"Besides, ladies like it when a man shows appreciation for their bodies like that!\"\n\nChristy winced and shook her head to show him he was wrong, and he frowned in embarrassment. \"I'll introduce you to a friend of mine who knows exactly how to treat a woman to make her feel special,\" she suggested.\n\nRa\u00fal's smile returned.\n\n\"Is this the mystery boyfriend you won't introduce your friends to? The perfect man?\" Miranda said with a little more bite than intended.\n\nChristy was immediately worried for her friend. She looked to Ra\u00fal. \"Could we have the room?\" she asked gently, and he began nodding as he could obviously see his big sister was distressed.\n\nMiranda stood, grabbed Christy's hand, and looked to her brother. \"Never mind, we'll go up to my room.\"\n\nChristy followed her upstairs and into her femininely appointed room. Miranda closed the door, and her pretty brown eyes were suddenly filled with tears. Christy opened her arms, and Miranda crushed herself against her friend's chest as the tears began to fall.\n\n\"What happened?\" Christy asked when the tears began to slow.\n\nMiranda's sadness flared into anger. \"Vince is a racist piece of shit!\"\n\nChristy wasn't surprised by the announcement, but she kept that from her face. \"What did he do?\"\n\n\"The day after we did it, he broke up with me in a text, then he posted a picture of us with the caption fucking a spic left me feeling greasy.\n\n\"What?\" Christy gasped in outrage.\n\n\"The post was pulled eventually, but everyone had seen it by then. It was humiliating!\" She burst into tears again.\n\nChristy fumed silently as he held her friend. If she could get her hands on a screen capture of the page before the post had been removed, and she knew exactly which of her friends to ask for it, she'd see that the Dean got it and took steps. Getting Vince ejected from the university for this smear campaign would be a good start. She'd make it happen!\n\nMiranda got her composure back and pulled back from her friend with a look of determination on her lovely face. \"That's it! Until I graduate, no more dating. There are no worthy men in this university!\"\n\nChristy gave her a hopeful smile. \"Does that mean you might be available to look in on a friend of mine from time to time?\"\n\nMiranda blotted her eyes with a tissue and looked at Christy in confusion. \"A friend?\"\n\n\"Tyson Kane.\"\n\nMiranda's confusion grew. \"Wait... I know that name.\"\n\nChristy sighed. \"The train terrorists.\"\n\n\"Yes! That's right! He stopped the train\u2014 oh! His wife died, and he was badly injured. You've been nursing him back to health?\" Miranda gasped.\n\nAn image of Tyson sucking on her nipples flashed in her mind, and her cheeks flushed. \"N-not exactly. He was mostly healed by the time I went to him for tutoring in math.\" She shook her head to get back on track. \"He did lose his wife in the accident, which he barely survived, himself. He was also severely traumatized by the event and still has anxiety issues. I've been trying to get him to come into town, but he can't sit inside a car. He had to be heavily tranquilized for me to bring him in for knee replacement surgery.\"\n\nMiranda stared at her in surprise. This was an entirely different side to her friend she hadn't seen. A huge smile burst onto her face.\n\n\"What?\" Christy asked cautiously.\n\n\"You continue to surprise me, Ms. Taylor!\" she giggled happily.\n\nChristy shook her head in confusion.\n\n\"Your selflessness is such an inspir\u2014\"\n\n\"Whoa! Don't be strapping angel wings on my back! I went there to get him to help me with my math class. He is a phenomenal teacher! In just one day, he resolved all the issues I had. Of course, I was grateful! I wanted to help him in return. He's... he's a really great man!\"\n\nMiranda just smiled and nodded with a smug little smile on her face.\n\nChristy cleared her throat and gave her friend a hopeful look. \"You know I'm going to be leaving soon. I would feel so much better knowing someone was checking in on him a few times a week.\"\n\n\"Get him out on his feet, walking around?\" Miranda suggested.\n\nChristy nodded. \"He swims in the lake in the morning and goes for a six-mile walk after that. He also works out in his home gym.\"\n\nMiranda gave him an impressed look. \"So, he understands the importance of physical therapy.\"\n\nChristy smiled. \"Oh, yes.\"\n\n\"Sure, I can do that. Where is he?\" Miranda said, and Christy pulled her into a hug as she cheered.\n\n\"Give me your cell, and I'll add his details,\" Christy said. Miranda handed it over as Christy pulled up the information on her cell.\n\n\"He lives on the lakefront road? Lucky man! Who'd he kill to get that house?\" Miranda asked with a grin.\n\nChristy gave her a weary look. \"The leases on the homes there are handed down through the family, so he inherited it from his parents when they passed on.\" She finished adding Tyson's information into Miranda's cell.\n\nMiranda looked suitably apologetic for the crass question.\n\nChristy's cell pinged from a text she quickly read. \"Ah! It's my mom! I was supposed to join her and my aunt at the club. I have to go.\" She hammered out a quick reply saying she was almost there. Then she grabbed Miranda's arms and looked into her eyes. \"Listen, I'm sorry about Vince. He's an idiot, and there will be consequences for him. Also, I really appreciate you checking in with Tyson. You won't regret it. He's amazing!\"\n\nShe leaped to her feet and rushed downstairs as she had to make it across town in five minutes.\n\nThat was easy peasy when you drive a rocket.\n\n-=-\n\nMiranda looked at her fleeing friend in surprise. She wondered what amazing things were happening in her life now.\n\nShe wasn't jealous of her friend. Well, not too much, at least.\n\nShe looked at the address on her cell and decided she'd ride her bicycle on the new trail to visit him tomorrow.\n\nMiranda had heard the story of the two students who decided to burn down the town and how they met their end at a train crossing when their stolen engine hit Tyson Kane's car, killing his wife.\n\nCurious, she grabbed her tablet and pulled up the story of the night. She followed some links and was eventually reading about the man himself.\n\n\"Shit! He's a big one,\" she muttered when she looked at the photo of the thick professor at some university event. His arm was around a slim woman, making him look even larger. The woman was a real beauty whose skin was similarly toned as hers. Tyson appeared very happy. Losing this woman must have been hard for the math nerd.\n\nIf Christy thought he was a nice man, Miranda was looking forward to meeting him. She giggled happily as he looked like a big teddy bear.\n\nShe could use a hug after the shit Vince put her through.\n\nChapter 7\n\nThe lake water felt warmer than usual as Tyson cut through the small ripples with a steady stroke. His endurance kept improving, and he thought he was getting a little farther across the lake each time before he turned back. He was cautious not to overindulge the idea of continuing. He had so little body fat, so he had to keep moving, or he'd sink.\n\nHe glanced upwards and saw beautiful blue skies, so they were in for a lovely day. He decided he'd get in a little sunbathing.\n\nTurning back, he spotted Barbara's home with its rooftop deck and caught the glint of sun on the lenses of her binoculars. Ever the protective momma bear, Barbara had been keeping an eye on him for years. Watching him struggle to make it back to shore in the years before Imani told him to stop.\n\nNO! It was Christy's presence that made him realize he had something to live for.\n\nImani is dead. Hallucinations aside, she no longer existed.\n\nIt was Christy that brought to his attention to the fact that Barbara had taken on the role of sentinel and silent support. The young woman told him about hearing his neighbor's quiet words of encouragement the morning she first saw him stagger out of the water.\n\nSo, his neighbor had a clear view into his backyard from her roof platform and had a pair of binoculars. He continued to cut through the water strongly as he thought about that. He sighed internally.",
        "Tyson wasn't about to change his personal habits for his neighbor. He swam nude, and he sunbathed nude. That wasn't changing. He would just continue ignoring the possibility of peeping... Barbaras.\n\nHe felt the waters warming further and knew he was reaching the shallow water near the shore. The swim was over. Tyson wasn't exhausted at all! He got his feet under himself and stood in the thigh-deep water, glancing back at the lake as he sucked air into his lungs to feed his hungry muscles. He'd swim further tomorrow. He turned around to look at his home. He truly loved his little haven.\n\nThe morning sun felt good, so he turned his face to it with eyes closed and ran his hands over his head to squeeze the water out of his hair and realized how long it was getting. The tight black curls had grown in length to the point where he was beginning to resemble Imani. He walked forward out of the water and up onto his lawn. He stretched his arms up over his head and bent side to side.\n\nA sharp shriek popped his eyes open, and he saw a pretty young thing staring at him wide-eyed, with her hands over her mouth. She was wearing a brightly colored skin-tight outfit, which he barely caught a glimpse of before she spun and disappeared up the path beside his house.\n\nHe would either have to add a lock to the gate or get a more prominent Private sign!\n\n-=-\n\nMiranda raced her bicycle along the winding country road-turned recreational pathway as her mind raced ahead. What had she just seen?!?\n\nFinally, she pulled over at a small rest area with benches and pulled her water bottle from the bike as she took a seat.\n\nChristy said nothing of Tyson's family living with him. Maybe a cousin? She was sure she'd read that he was an only child so that hunk of manliness she'd just witnessed completely NAKED wasn't a younger brother. She'd managed to pick up a family resemblance before her eyes refused to focus on anything but his nudity. The shriek caught her by surprise, too.\n\nShe patted her cheeks to snap herself out of her daze. It was going to take some time to get that vision out of her mind.\n\nClimbing back on her bicycle, she got herself moving again. She'd have to speak to Christy about her request, as there appeared to be a complication. A sexy one.\n\n-=-\n\n\"Good morning, Tyson!\" Christy greeted him when she called after her breakfast.\n\n\"Hey, Christy! How are you this fine day!\" he replied.\n\nShe grinned, hearing the happiness in his voice. Then she recalled the purpose of her call, and her smile dimmed a little. \"I was wondering if I could come to see you this afternoon.\"\n\n\"Of course! You know I'll clear my busy schedule for you,\" he joked weakly. \"Will you be staying for dinner?\" His voice was casual, but she detected a little hope. Her heart twisted.\n\n\"Not today,\" she said\n\n\"That's cool. Listen, do you recall your first visit to my home?\" he asked.\n\nThe change in direction caught her by surprise, but her grin returned. \"Like I could forget that sight!\"\n\nHe chuckled at her enthusiasm. \"Well, I had another young lady intruder in my backyard this morning, and this one shrieked and ran away.\"\n\nChristy thought he sounded a little worried. \"What did she look like?\" she asked, sure she knew who it was.\n\n\"She had her hands over her lower face, but she had pretty brown eyes, long brown hair in a braid, and she was wearing something skin tight with odd-looking shoes.\"\n\n\"Ah, yes. That was a friend of mine, Miranda Moreno. She's a cyclist and rides her bike out on the country roads for fun. I mentioned to her that we were friends and I visited you at your place at the lake. I didn't know she'd drop by today.\"\n\n\"You mentioned us to her?\" Tyson asked, and she heard the unspoken question.\n\n\"Just that we were friends. I was discreet,\" she said with a smile.\n\n\"Then I messed up the first impression,\" he sighed.\n\nChristy couldn't stop her giggles. \"I wouldn't say you messed up.\"\n\n\"You didn't scream.\"\n\nHer giggles turned into laughter. \"True, but that was because I went on the offense instead. I recall demanding you prove you were who you said you were.\n\nHe chuckled at the memory. \"Right. You're a tough cookie.\"\n\n\"I'll have a talk with her. It'll be fine. She was likely just surprised,\" Christy assured him.\n\n\"So, should I get a lock for the gate or a bigger private sign?\" he asked.\n\n\"Is that what that sign says? I thought it said, this way to see privates!\" she said and burst into giggles.\n\nHe chuckled. \"All right, all right, Ms. Smarty Pants Girl. I'll see you this afternoon. Bye.\"\n\n\"Bye!\"\n\nChristy hung up and immediately headed to her car. She needed to speak to Miranda.\n\nShe could probably have walked, but Christy knew of a few places she could be if she wasn't home.\n\nWhen she pressed the doorbell, Ra\u00fal Jr. answered it and gave her another delighted smile.\n\n\"Two days in a row! It's feast or famine with you!\" he teased.\n\nShe gave him a smile as she had to give him credit. That line was pretty smooth.\n\n\"Looking for Miranda,\" she replied sweetly.\n\nHe sighed theatrically. \"One day, I dream you will call on me.\"\n\nShe grinned at him and raised a brow. \"Not today.\"\n\nRa\u00fal stepped back and gestured for her to go upstairs. \"She's returned from her ride. She's in her bedroom.\"\n\nChristy smiled and climbed the stairs, once more feeling his eyes on her. \"Staring at my ass just pushes your dream farther away.\"\n\nShe heard him make a frustrated sound, then she was facing her friend's bedroom door. She knocked. \"Miranda? It's me, Christy.\"\n\nShe heard a muted squeak and some thumping as something was dropping to the floor.\n\n\"One second!\" Miranda called out from behind the door.\n\nChristy waited and did her best not to imagine the source of the odd buzzing noise inside.\n\nThe door opened, and Miranda stepped out into the hall. Christy noticed her face was flushed.\n\n\"Why don't we go sit on the patio? It's a lovely day outside!\" she asked quickly.\n\nChristy could still hear something angrily buzzing away inside. \"Are you sure you don't need to turn that off first?\" she asked cautiously.\n\nMiranda's shoulders slumped, and she sighed. \"Okay... can you help me move the bed?\"\n\nThey went inside and pulled the bed away from the wall so Miranda could collect the personal massager, which had somehow fallen between the mattress and wall. She shut it off and tucked it in the drawer of her bedside table.\n\nAfter they pushed the bed back, they sat and faced each other. Miranda's face looked like it might ignite.\n\n\"I understand you had an interesting visit out at Tyson's this morning,\" Christy began.\n\nMiranda's eyes widened alarmingly. \"You didn't tell me Tyson had family living with him! Nudist family at that!\" she exclaimed.\n\n\"Oh, you saw him naked?\" Christy said with a big grin on her face. She was rather enjoying this.\n\n\"Saw him!?! He walked out of the lake like some kind of celestial being who just splashed down on his comet! He's gorgeous!\" Miranda sighed. \"Who is he? Tyson's younger cousin?\"\n\nChristy laughed joyfully, and Miranda couldn't help but grin at the happy sound.\n\n\"Miranda... that was Tyson.\"\n\nThe lovely brunette's smile was replaced by a puzzled look. \"No, Mr. Kane is almost sixty. This man couldn't have been more than mid-forties, maybe late thirties!\"\n\n\"Tyson lives alone. The man you saw walk out of the lake was him. He swims every day.\" She took a breath and reached out to take Miranda's hand in hers. \"Listen, he put himself through hell after the accident. He might have even been trying to kill himself with exercise. He lost all the extra weight while building and hardening his muscles. He's still incredibly driven with his workouts.\"\n\nMiranda was staring at Christy with a dawning realization in her eyes. \"It's him! He's your mystery boyfriend!\" she gasped.\n\nChristy smiled softly. \"Boyfriend is not the correct term. He'd my good friend, and I'm his, but there's no romantic love involved.\"\n\n\"But, you're having sex with him!\"\n\nChristy's smile burst across her face as she nodded. \"Tyson's incredible in bed!\"\n\nMiranda squealed excitedly as Christy confirmed her guess.\n\nChristy held up her hands to calm her friend. \"That information is not for sharing. It wasn't something Tyson was looking for. He was almost a shut-in when we first met. He didn't want me in his backyard. He didn't want to tutor me. He didn't want to let me join him for his afternoon walk. We wouldn't have had sex had I not decided I wanted him and pursued him so aggressively. He had a real problem with our age difference. It wasn't as much of an issue for me as he's so damn sexy!\"\n\nMiranda thought about Christy's request for her to look in on Tyson. \"Were you expecting me to have sex with Tyson as well?\"\n\nChristy looked at her in shock. \"No! Oh, my god, no! I just wanted someone to help keep Tyson from slipping back into his shell. He needs external contact, someone to talk with face to face. Once you get to know him, if you decided you'd like to begin a physical relationship, you'll need to work that out with him. As I said, he's wonderful, but if I hadn't forced the issue, it would never have happened. He's a gentleman.\" She smiled fondly.\n\nMiranda nodded as she thought about everything she'd learned. She knew it was too soon after Vince for her to look for another boyfriend, and seriously, she could use a break from dating. Having a man to talk to might be nice!\n\nAn idea popped into her head of something else that would be really nice!\n\n\"You said he's hardcore into working out, yes?\" she asked.\n\nChristy nodded, so Miranda jumped off the bed to pull her friend after her. They rushed downstairs and out into the backyard to run over to the large two-story garage at the end of their driveway. Slipping inside, Miranda led Christy upstairs into the loft, where they saw several older, used bicycles hanging from the rafters. She turned and faced her blonde friend.\n\n\"We can fix up one of these old bikes for him, and he can join me on my bike rides!\" Miranda gushed excitedly.\n\nChristy was struck by the brilliance of the idea but not its execution. None of the bicycles would likely fit Tyson. He'd probably bend them into a pretzel if he went all out on them.\n\nHowever, getting him a new bicycle, something his size and strong enough to handle his strength, was a stroke of genius. Not only would it give him exercise, it wasn't a car, but it gave him the means to leave the little cocoon of his neighborhood! It also gave Miranda an incentive to hang around with him as well.\n\n\"Miranda, you are a genius, but you need to think bigger. Can you take me to a bike shop, the best one, like right now?\" she asked with a trembling voice.\n\nThe brunette picked up the excitement and nodded quickly. \"I know just where to go!\"\n\n-=-\n\nTyson heard the crunch of car tires on the gravel of his driveway and smiled. Christy was here.\n\nWhen the second set of crunch sounds began, he turned to the front door. A second car?\n\nHe checked the oven, and all was good, so he headed over to the door to open it.\n\nParked in the spot furthest from the door was Christy's sporty white coupe. She was getting out and watching him with a big grin on her face.\n\nIn the spot closest to the house, a blue pickup was coming to a halt. In the passenger window, he saw the pretty brunette who surprised him this morning. She was looking at him with wide eyes and a nervous smile.\n\nThe truck's engine went silent, and the lovely brunette stepped out. She had on a new tight-fitting outfit but sneakers on her feet this time.\n\nOn the other side of the pickup was a tall, good-looking young man with a complexion that matched the brunette. He was watching him with an amused smile as Tyson stood on his steps wearing an apron, shorts that were probably not currently visible, and sandals.\n\n\"Do you greet all your visitors, only wearing an apron?\" Christy called out, joy in her voice.\n\nHe lifted the apron to flash his shorts at Christy, and the brunette squeaked in surprise as she likely thought he was naked underneath.\n\n\"You know I don't get any visitors aside from you and George. Besides, I was baking cookies,\" he explained.\n\nBy this time, Christy was standing next to the other woman. \"Tyson, this is my good friend Miranda Moreno, and this handsome young man is her brother, Ra\u00fal Jr.\"\n\nTyson instantly picked up Ra\u00fal was pleased to be referred to as handsome but far less delighted to have young and junior linked to his introduction.\n\n\"Hello, Miranda, Ra\u00fal.\" He got a bright smile from Miranda and a pleased smile from the young man, but his expression still showed amusement. He didn't approve of seeing a man in an apron, perhaps?\n\n\"I'm terribly sorry I entered your backyard this morning without permission,\" Miranda said earnestly.\n\nTyson waved a hand dismissively. \"Would you like a freshly baked shortbread cookie?\"\n\n\"Ooo! The sexy man is luring us into his abode with the promise of sweets. What could go wrong?\" Christy teased and stepped forward with her arm through Miranda's. Tyson stood back and held the door for his guests.\n\nThe ladies stepped through the door, and Ra\u00fal stopped just inside with an annoyed look on his face. As Christy showed Miranda around, he looked back at Tyson as he closed the door. Tyson raised a questioning brow to him.\n\n\"How can she call you sexy when you're dressed for woman's work?\" the young man stated scornfully.\n\n\"Woman's work? Who sold you that load of crap and called it gold?\" Tyson said with a grin as he walked past him into the kitchen. He picked up a cookie, still warm from the oven, and handed it to Ra\u00fal. The man took a bite and nodded appreciatively as it melted in his mouth with a gentle crunch. Tyson smiled and offered the plate of cookies to the ladies who each took one.\n\n\"Oh, this is so good!\" Christy purred as she approached. \"Thank you for the sweets.\" She pressed herself against his chest and offered her lips to him. He was a little self-conscious about the show of affection, but Christy's lips were highly addictive, so he kissed her until she purred again and pushed back.\n\nRa\u00fal was staring at her in shock.\n\n\"What? He's a gentleman, a master in the kitchen, keeps a neat home, and is sexy as hell,\" Christy explained.\n\n\"Those are a woman's tas\u2014\" Ra\u00fal began heatedly.\n\n\"Seriously, where are you getting these idiotic ideas that professions, or work of any kind, should be gender-based? I thought I was the one with outdated values. You make me feel young in comparison.\"\n\nRa\u00fal stared at him. \"How-how old are you?\"\n\n\"Fifty-nine.\"\n\n\"What!?!\" Ra\u00fal's face whipped around to look at Christy. \"You're fu\u2014dating an abuelo?\"\n\nTyson looked to Miranda, who was still staring at him. \"What's that?\"\n\n\"Grandfather,\" she said softly.\n\nTyson wanted to be angry, but he kind of agreed with Ra\u00fal. Why Christy was so attracted to him was still something of a mystery to him. He shrugged.\n\n\"I may be old enough to be one, but I have no children or grandkids. That ship sailed years ago,\" he said sadly.\n\nRa\u00fal wasn't finished. He turned to Christy again, who just watched him with a slight smile. \"I don't understand. I'm strong, and as you said, handsome. What does this man have that I do not!\"\n\n\"I can bake cookies,\" Tyson offered with a smile. \"Hey! I'll teach you how to make chocolate chip cookies. Ladies love them, and the fact that you made them will win you major points.\"\n\n\"My friends at the gym would laugh me out of the building!\" Ra\u00fal insisted hotly.\n\nChristy shared a sad look with Miranda. \"I think we found the source of Ra\u00fal's toxic masculinity.\"\n\n\"Toxic?!? Being masculine isn't toxic!\" he snapped.\n\n\"No, but combined with the chauvinistic attitude you present to women, it is. You're smart. You can do better,\" Christy said bluntly.\n\nRa\u00fal looked back at Tyson. \"Okay, you will teach me how to make cookies,\" The ladies perked up, perhaps sensing an improvement in his attitude. \"...if you beat me in arm wrestling.\"\n\nTyson blinked at the young man, confident in his youth and strength. Desperate to demonstrate his worthiness as a mate for Christy. He sighed as he looked at Ra\u00fal's powerful arms. This was likely going to hurt... but he was old friends with pain.\n\n\"Okay, fine,\" Tyson said and pulled his apron off over his head. Now, Ra\u00fal got to see his opponent's torso. He looked a little put out. \"You can take your shirt off if that will make you feel better,\" Tyson suggested. In a moment, Ra\u00fal was topless, too. He wasn't as broad-chested as Tyson, but he was all long smooth muscles. Christy nodded her approval, and Ra\u00fal's smile was confidence exemplified.\n\nTyson moved to the kitchen island and braced his elbow there. Ra\u00fal locked hands with him, and they gripped their left hands on the countertop.\n\nChristy placed her hand on top of theirs and nodded to each. \"When I lift my hand, you start. Ready?\" They nodded. \"Go!\"\n\nTyson immediately felt the strain in his hand, arm, shoulder, and back. Ra\u00fal was very strong, but he was overconfident.\n\nLooking deeply into the younger man's eyes, Tyson smiled and began to really push. The pain grew, but still, he loaded on the pressure.\n\nThe confident look in Ra\u00fal's eyes began to change to surprise, then worry.\n\nTyson's smile turned feral as his eyes held the boy's. \"Arm wrestling is more than just pitting your strength against your opponent's. It's also about how much pain you can endure. How much pain have you experienced in your short life, Ra\u00fal?\"\n\nThe younger man shook his head and winced as Tyson's grip tightened.\n\n\"Are you ready to get serious?\" Tyson asked quietly, and Ra\u00fal tried to hide his surprise as his arm began to be forced back.\n\nWhen he was bent back at a forty-five-degree angle, he yelped and jumped away from the counter, releasing Tyson's hand. Ra\u00fal shook his hand to bring circulation back to it.\n\n\"Shit! For an abuelo, you're a strong motherfucker!\" he exclaimed.\n\n\"Ra\u00fal!\" Miranda scolded, but Tyson just laughed.\n\nChristy smirked at the teacher. \"How many arm-wrestling matches have you won?\"\n\nTyson smiled self-consciously as he massaged his arm. \"That was the first time I've ever done that! Maybe the last. The kid's got some guns on him!\"\n\nRa\u00fal looked at him in surprise and with more than a little pride.\n\n\"Shit! Don't tell him that! It goes right to his head,\" Miranda lamented.\n\nTyson shook his head as he grinned at the younger man. \"Come on, let's get started on the cookies. Put your shirt back on.\" He pulled his apron back on.\n\nRa\u00fal pulled his shirt on and frowned. \"I have a hard time taking you seriously when you wear that!\"\n\n\"I'll grant you that it looked far more attractive on my wife, but if you've ever tried to cook bacon shirtless, you'll understand.\" He fixed his eyes on the boy. \"Never try it naked.\" That pulled a wince and a laugh from the others. \"Besides, you know what it takes for a man to wear one of these comfortably?\"\n\nThe younger man didn't want to look foolish, but it was clear he had no idea where Tyson was going with this.\n\n\"Confidence. Women respond to that. Don't mistake it for bravado or arrogance. Confidence is being comfortable in your own skin. Understanding it isn't what's on the outside that makes you a man.\"\n\nRa\u00fal smiled and nodded.\n\n\"Let's make cookies.\"\n\nChristy and Miranda sat at the counter and watched the two men create chocolate chip cookies from scratch. Tyson only instructed and made Ra\u00fal do all of the actual work.\n\nWhen they came out of the oven and had cooled sufficiently to try them, the ladies cheered for Ra\u00fal's first and successful attempt at baking.\n\nRa\u00fal smiled at Tyson as he basked in the glow of Christy's praise. \"What do you do?\"\n\nTyson shook his head. \"I'm retired.\"\n\n\"Yeah, but what did you do before?\" the younger man insisted.\n\nTyson sighed. \"Math teacher.\""
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "oral",
        "romance",
        "submissive"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/teachers-crossroad"
}