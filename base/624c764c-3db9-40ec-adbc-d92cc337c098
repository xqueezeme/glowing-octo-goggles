{
    "title": "Beginning Again Ch. 06: Final",
    "pages": [
        "Author's note:\n\nThis is the final chapter in the current saga of Nadja and Mac. Thank you all very much for reading, and for your many encouraging comments and votes \u2013 I really appreciate your feedback.\n\nAll characters are fictional adults. Medical and legal information in the story should not be considered factual.\n\n***\n\nNadja lay alone in the bed she used to share with Mac.\n\nIn the wee hours of the morning, there were no sounds. No traffic on the street outside, no sounds from the other residents of the building. Even her heartbeat and the sound of her own breathing seemed muted and barely detectable. All around her, the world was dead silent.\n\nShe could scent Mac in the sheets and in the linen of the pillowcase. She ached for him. The heat of his hands on her, his breath on the back of her neck as he held her close, his body pressed against hers. His steady, reassuring presence. His voice.  \n\nShe should be sleeping. There were a dozen things she needed to do in the morning in an effort to re-assemble the shattered fragments of the life that had seemed rock-solid only twelve hours ago.\n\nBut sleep wouldn't come. Her quiet life with Mac had been invaded by paramedics and police, by lawyers and child case workers. By Aden and Gammage. They'd left everything in disarray.\n\nIt seemed so long ago \u2013 had it only been a handful of hours? The fight with Aden and Gammage. Mac, victorious, collapsing to the ground at her feet. The police, and then \u2013 an eternity later \u2013 an ambulance. \n\nThe paramedics had taken him away, and his absence felt like a cinder block inside her chest, cold and heavy, weighing down every thought and feeling. \n\nThe police had questions for her, of course, and even more so when Nadja had declared herself a victim of trafficking. They'd taken her to the station and pummeled her with questions, the same questions over and over, each time phrased differently. What were they looking for? Were they trying to catch her in a lie, or just being thorough in building a case against Aden and Gammage? \n\nIt was a grueling experience to spend hours recounting \u2013 in excruciating detail \u2013 the abuse and mistreatment that Gammage and Aden had inflicted upon her. The ordeal was humiliating and soul-crushing, but well worth the suffering if those two got what they deserved. She assured the police she'd be more than willing to testify if it would help put her tormenters in prison.\n\nAnd still the questions came on in waves.\n\nDuring one of the breaks in the interrogation they helped her call the hospital \u2013 she was desperate for any word on Mac's condition. But she got nowhere; the hospital wouldn't release any information over the phone and wouldn't even confirm that Mac was a patient there. \n\nShe could only pray that he was still alive and getting treatment. He was tough. He'd pull through for sure. Her heart recoiled at the thought of any other scenario.\n\nAt least they'd rescued the girl \u2013 a fourteen-year-old named Isa. Whatever devastation the night had wrought in Nadja's life and in Mac's, they'd denied Gammage his sadistic pleasure with Isa and removed her from Aden's callous influence.\n\nIt was something, anyway. The silver lining on a thundercloud.\n\nWhen the police had run out of different ways to ask the same question, one of them was kind enough to drive Nadja home. She'd eaten some toast, showered and climbed into an empty bed.\n\nSleep wouldn't come.\n\n***\n\nIn hindsight, sleep would have been a good idea.\n\nMaria's Grill opened to the public at seven in the morning. Nadja was waiting outside at six when Maria arrived to unlock the door.\n\nShe felt fuzzy-headed from lack of sleep, but the early-morning chill in the air helped to wake her up. At least she was warm, dressed in the bulky winter wear that Mac had bought for her.\n\n\"Nadja? Is Mac here already?\" Maria asked, cheery and energetic even before the crack of dawn.\n\nNadja has spent plenty of time with the vivacious older woman over the weeks and had come to genuinely like and admire her. Hard-working and infallibly friendly, the brightness of her disposition seemed to infuse everyone around her with happiness. Nadja felt the urge to smile at the sound of Maria's voice, even with the weight of the past twelve hours pressing down on her. The urge passed quickly.\n\n\"No...he's...it's complicated. Is there someplace we can talk?\" Nadja replied.\n\n\"What's wrong?\" Maria asked, and from the concern in her voice there was no doubt she'd picked up on Nadja's miserable tone.\n\nShe heard the jingle of keys and the clatter of the front door being unlocked.\n\n\"Come inside. I need to get things ready, but no one else should be here for half an hour or so,\" Maria said.\n\nThe scent of the place \u2013 grease and remnants of cooked meat \u2013 was somehow familiar and welcome. The restaurant was normally bustling with life and noise and activity \u2013 the emptiness and silence was incongruous with her memories of time spent there. \n\n\"Mac...was injured last night. Badly,\" Nadja began, then stopped. Saying the words aloud made them real. Grief slammed into her without warning, smashing through her fatigue-weakened defenses. She sobbed, then caught herself and tried to reassert control. \n\nShe almost had it back when Maria swooped in and wrapped her up in a tight, warm hug. \n\n\"Is he okay?\" the older woman asked, alarmed.\n\n\"I don't know. Nobody will tell me anything,\" Nadja whimpered, then broke into helpless tears. The battle lost, she wept, allowing Maria to hold her tight.\n\nThe story came out then, ugly and raw and mixed with sniffles and sobs. Her sordid history. How Mac had saved her. How they'd grown close. The possibility of a visa and their decision to find Aden as a result. How she'd pressured Mac last night to save Isa from a night with Gammage. The fight.\n\nShe heard the front door open and close as cooks and servers arrived to begin the morning shift. Nadja couldn't imagine what they must have thought of her, but Maria seemed unperturbed, quietly directing her staff even as she continued to hold Nadja tightly against her.\n\n\"Mac is a good man \u2013 I knew it right from the start. The moment I set eyes on him I said to myself 'here is a good man. A strong man',\" Maria said in a quiet voice. Words meant for Nadja alone.\n\nNadja nodded, then gently pulled back from Maria's generous embrace. She felt stronger now; she'd regained her emotional footing.\n\n\"I just wanted you to know...I'm not sure when he'll be back on his feet.\" Nadja forced herself to say 'when' and not 'if'. \n\n\"I'm sure he'll be up in no time. He's built like a bull!\" Maria said, and Nadja was grateful for the conviction in the older woman's voice.\n\n\"Thank you. I know you're busy, so I won't interrupt...\"\n\n\"Please, sit! Eat! You're so skinny! How do you expect to survive the winter if you don't eat?\" Maria admonished in a tone of mock concern. Nadja felt the older woman grasp her shoulder warmly. \"Have a big breakfast and let me make some calls. I know people...\"\n\nNadja was herded into a booth near the kitchen. A few minutes later Maria pushed a mug of coffee in front of her, followed shortly by a stack of pancakes and a side of bacon. As always, the portion sizes were enormous. Nadja forced herself to eat.\n\nAlmost an hour later, Maria slid into the booth next to her and took Nadja's hands in her own.\n\n\"My sister-in-law Sophia is a paralegal. She's coming now to speak to you,\" Maria said in a quiet voice so as not to be overheard. The restaurant was already raucous with the noises of the breakfast crowd.\n\n\"Thank you so much. You're so kind to me and to Mac,\" Nadja said.\n\nThere was a pause that was just long enough to be awkward.\n\n\"Nadja, I'll do whatever I can to help you, and to help Mac, you understand? Just ask me if there is anything...\"\n\nNadja nodded, sensing the approach of bad news in the older woman's hesitant tone.\n\n\"But, well...I mean, I can't operate the Grill without a dishwasher. Do you see what I'm getting at? If he's injured and can't work...\"\n\nWhen she realized what Maria meant, Nadja's spirits sank. It took her a few moments to find the words and the tone to conceal her bitter disappointment.\n\n\"I understand, and I'm sure Mac would as well. You've got a business to run...\"\n\n\"If I could hold the job for him, I would,\" Maria interjected, squeezing Nadja's hands, \"If he's back in two or three days we could manage without him until then. But if it's going to be much longer than that, I need to find a replacement.\"\n\nNadja nodded again. What else could she do?\n\n\"Have some more toast, more coffee. On the house, of course. Sophia will be here soon and you can ask her anything \u2013 immigration law, how to deal with the police, anything! She's so smart. I have to run out for supplies, but she'll be here soon.\"\n\nMaria gave her a final squeeze and then slid out of the booth, leaving Nadja alone with her increasingly grim thoughts. Mac's job \u2013 the one she'd helped him find \u2013 was gone.\n\nShe wondered if that would become the least of her worries.\n\n***\n\n\"I don't understand how you could let him go free,\" Nadja said in stunned disbelief.\n\nThere was a long pause as the officer \u2013 Sergeant Everett \u2013 considered what he wanted to say. He'd brought Nadja into an interview room to give her the news: Gammage had been released without charge. A slap in the face would have been kinder and less painful.\n\n\"There was insufficient evidence to lay a charge,\" he said lamely.\n\n\"But Isa...she was forced to be a prostitute. She's only fourteen.\"\n\n\"Mr. Gammage claimed that he'd never seen her or Mr. Halloway before, that they were just walking out of the building together.\"\n\n\"And you believed that?\" Nadja tried to hold her tone in check. Anger and frustration wouldn't improve her situation. She still needed the police to sign a declaration to say she'd been the victim of trafficking so she could get her visa. Burning bridges wasn't an option for her.\n\n\"No, of course not. But it doesn't matter what we believe, it matters what we can prove,\" he said. His voice was flat, as though he were reading to her from a textbook.\n\n\"You know what he did to me. The police took my statement.\"\n\n\"Again, without evidence we didn't have anything that we could put in front of a judge.\"\n\nNadja was silent, fighting back rage and a rising feeling of despair. Mac had told her once that justice was for the rich, and his cynical views were borne out by her experiences so far. A bad omen...\n\n\"This makes it very dangerous for me,\" she said in a whisper. Would Gammage hunt her down? He'd been brutally sadistic even when he was happy \u2013 what would he be like angry? She shuddered at the thought. One more terrible problem thrust upon her.\n\n\"There's more,\" the sergeant said hesitantly. Nadja recognized the tone and braced for more pain. \"Mr. Gammage is pressing charges against Mr. Dagnall. He claims he was the victim of an unprovoked assault. Witnesses corroborate his version of events...\"\n\n\"You're charging Mac?\" she asked, and her outrage was coupled by an unexpected and bizarre surge of relief. Mac was alive! That news alone was a bright light in the midst of a very dark day. \"Even after he saved Isa?\"\n\n\"I know he felt he was doing the right thing,\" Everett offered blandly, \"but he shouldn't have taken the law into his own hands.\"\n\n\"And I suppose Aden goes free too?\" She didn't try to keep the bitterness out of her tone.\n\n\"Oh no...Aden won't be going anywhere. We searched his apartment early this morning. There's lots of evidence and we're still sorting through it all, but there's no doubt that he's involved in trafficking and prostitution. As you say, Isa is a minor, so that adds to the seriousness of the offenses.\"\n\nNadja was quiet, not trusting herself to react to the news. Isa was safe and Aden was going to be punished. On the other hand, Gammage was free and Mac was going back to prison. Should she be happy? Furious? Was this justice?\n\nShe felt Everett lean closer. \"I should also say that we found...evidence...to support your claim that you were a victim of trafficking. There shouldn't be any problem getting you the declaration you wanted. I'll process it myself, after the investigation is complete.\" He sounded happy to be able to offer her that much.\n\nAnother crazy blend of elation and dread swirled around inside her, jumbled up.\n\n\"What evidence?\"\n\n\"Well,\" the officer hesitated as though searching for the right words, \"there were...pictures. Documentation. That sort of thing.\"\n\nPictures? She'd forgotten the pictures; she couldn't see them, so they existed in her memory as shutter-click noises or computerized beeps. At the time, they'd seemed like minor humiliations when stacked next to everything else she'd been forced to endure. \n\nBut there had been pictures. Pictures of her sucking and fucking. Posing. Begging. Gagging. Crying. Different men, different acts. So many pictures.\n\nAnd now the police were sorting through them, examining them. Entering them into evidence, to be presented at Aden's trial in front of a judge and a courtroom full of people. Had Sergeant Everett seen those pictures? Was he recalling them even now as he interviewed her? Would Maria see them? \n\nWould Mac?\n\n\"I see,\" she said quietly. A flush of mortification burned her face. She felt stripped and exposed. It was hopeless. The Whore would follow her all her days.\n\nMercifully, there was no more news and the officer led her back to the foyer of the police station. He offered to get her a cab but she declined. She wanted to get to the hospital to check up on Mac, but needed a pause to regain herself first. \n\nLack of sleep and wild swings of emotion had left her feeling raw and unsteady. She wanted to cry. She wanted to scream. Instead, she found a molded plastic seat and sat with her face in her hands and tried to fight through the hurt and confusion. She didn't know what to focus on. Her life \u2013 and Mac's \u2013 was in shambles.\n\nNadja took a deep breath and let it out slowly. She'd heard Mac do it so many times. She began to count in a whisper. Breathe. Count. After a few minutes she began to feel a little more stable. \n\n\"Are you okay, miss?\"\n\nThe man's voice was in front of her, above her. She realized how pitiful she must have appeared and sat up in her chair.\n\n\"I'm fine, officer, thank you,\" she replied in a tone that wasn't at all convincing.\n\nShe heard the man slide into a seat next to her.\n\n\"I'm not an officer. Dan Fowler, nice to meet you,\" he said. There was an easy familiarity in his voice that she immediately distrusted. It was a tone that invited her to open herself, to engage him.\n\nShe tried to find his eyes based on where his voice was. It was fitting that with the kind of day she was having that she'd have to fend off the advances of a strange man \u2013 in a police station, no less. Just the latest indignity.\n\n\"I'm not interested, thank you,\" she said, aiming for a tone that was assertive but not unkind.\n\nTo her surprise, he chuckled.\n\n\"Don't get me wrong, I'm not asking you out,\" he said, \"You look like you could use a little help. Anything I can do?\"\n\nIt was Nadja's turn to laugh, but hers was bitter and humourless.\n\n\"A monster is walking around free, and a good man is going to prison. So what can you do? Are you a judge?\" her tone was mocking, caustic. She didn't care. What kind of man tried to pick up a woman in a police station, anyway?\n\n\"Sounds like quite a story. And no, I'm not a judge \u2013 I work for the Tribune. I'm a journalist.\"\n\n\"And you hang around the police station 'helping' young women?\" \n\n\"Not usually, no. I'm here to interview one of the officers for a story, but he's tied up and won't be around for a bit. I've got some time to kill...why not tell me what's bothering you?\"\n\nNadja paused. If he was feeding her a line, it was a good one. Very believable. \n\n\"How will that help me?\" she asked. The harsh edge was gone from her voice.\n\n\"If it's a good story, I might write it up and put it in the paper. Maybe someone who reads it will be able to help you.\"\n\nShe was silent as she faced him. If he was telling the truth \u2013 and that was by no means certain \u2013 his reasoning made some sense. Surely someone out there would want to help her keep Gammage off the streets and keep Mac out of prison? \n\nBut there were downsides, too. There would be no way to sugar-coat the truth about her; Nadja the Whore would be exposed for all to see. Could she bear to be out in public if everyone saw her for who she was? The scrutiny would be uncomfortable and humiliating for her, and perhaps for Mac too. Would he want her around if everyone they passed knew the truth about her? \n\nOf course, with his injury and pending prison time, his reputation might be the very least of his worries.\n\n\"Can I think about it?\" she asked guardedly.\n\n\"Absolutely. I'll give you my card,\" she heard movement and he pressed a small rectangle of stiff paper into her hand, \"Or...uh...if you can't read the number I can give it to you out loud?\" Obviously he'd noticed her blindness.\n\n\"I'll need to check with Mac...my boyfriend,\" she said, \"but I'll be in touch. Thank you.\"\n\nShe stood up, found her way to the reception desk and asked them to get a taxi for her. The day was slipping away and she hadn't even been to the hospital yet. \n\n***\n\nShe arrived at the hospital late in the afternoon. Her chat with Sophia and her ordeal at the police station had eaten away most of the day. \n\nShe hadn't been able to get any information about Mac's condition over the phone, but she figured maybe showing up in person would make a difference.\n\nThe cab driver was kind enough to guide her to the reception desk in the lobby of the hospital. She could hear a fair number of people about \u2013 it was a busy place.\n\n\"I'd like to see a patient you have here. He was admitted last night,\" Nadja said to the receptionist.\n\n\"What's the patient's name?\" the woman asked in a bored but businesslike tone.\n\n\"Michael Dagnall.\" It felt strange to use his real name. He'd always been Mac to her, and always would be.\n\nThere was a pause. Nadja could hear mouse clicks and typing.\n\n\"He's on Two South. Visiting hours there are ten to four. You'll need to come back tomorrow,\" the woman said. \n\nNadja dared to hope that this was good news. If there were visiting hours, wouldn't that mean that Mac wasn't on death's doorstep or in a coma? They wouldn't admit visitors to someone in life-threatening danger, right?\n\n\"Thank you,\" she said, \"But...would it be okay if I saw him for just a few minutes? Just a quick...\"\n\n\"Ten to four, hon. They need their rest up there.\"\n\n\"But Mac...Michael...might be worried. I need to see him...\"\n\n\"Look, miss. I understand, but hospital policy...\"\n\n\"You're looking for Michael Dagnall?\" asked another woman. The voice came from the same direction as the receptionist. \n\n\"Yes, I really need to see him.\"\n\n\"Your name wouldn't be Nadja by any chance?\" the second woman asked.\n\n\"Yes, why?\"\n\n\"This is the guy I was telling you about,\" the second woman said in a hushed tone to the receptionist, \"Let me take her up. He's driving us crazy up there.\"\n\n\"You'll sign her in?\" the receptionist asked, obviously reluctant to allow the breach of protocol.\n\n\"Sure.\"\n\nThere was another pause, then Nadja heard the second woman's voice again.\n\n\"Come with me, Nadja.\"\n\n\"Could you please lead me?\" she asked.\n\nThe woman took Nadja gently by the elbow and led her slowly out of the reception area, through a door and down a hallway.\n\n\"I'm Beth. I'm a ward clerk on Two South,\" the woman said, \"You have no idea how happy I am to see you.\"\n\nIt was a puzzling comment, but the tone in Beth's voice sounded genuine.\n\n\"Is Mac okay?\"\n\n\"He's stable. The surgery went well and he's...resting. Sort of.\"\n\nNadja felt a chill. How badly injured was he? \"Is he going to be okay?\"",
        "\"He should make a full recovery,\" Beth assured her, \"assuming the nurses don't smother him with a pillow first. When I came off shift they were talking about drawing straws...\"\n\n\"What do you mean?\"\n\n\"He woke up at eight this morning, and ever since then he's been driving everyone crazy. 'Where's Nadja?'...'call my apartment'...'call Maria'...'call the police'...'check the other hospitals'. He's been pestering the nurses pretty much non-stop all day, trying to find you.\"\n\n\"Really?\"\n\n\"He tried to get out of bed twice. The first time he fell on his head and we had to get doctors involved to re-check his injuries, re-do the IVs, the whole thing. A huge hassle for everyone.\"\n\n\"Oh no! Was he okay?\"\n\n\"Apparently so, because he tried it again a few hours later. This time one of the nurses caught him in the act and was able to restrain him. He's pretty weak post-surgery. So now we've got nurses keeping a near-constant eye on him in addition to making more phone calls than a telemarketing company.\"\n\nThe were in a stairwell now, footsteps echoing as they climbed to the second floor.\n\n\"What are his injuries?\"\n\n\"I'm not supposed to say \u2013 patient privacy and all. You can ask him yourself. The docs seemed to think he'd be okay.\"\n\n\"Thank you for letting me see him. This really means a lot,\" Nadja said.\n\n\"Seriously, if you can settle him down it would be appreciated. The job's hard enough, you know? And we're getting complaints from the other patients.\"\n\n\"I'm sorry. I'll do my best.\"\n\nBeth led her to a stop shortly after reaching Two South. \n\n\"You'll never guess who I found!\" Beth crowed, the glee obvious in her voice.\n\n\"Are you Nadja?\" answered another female voice.\n\n\"Good guess,\" Beth answered for her. Nadja began to feel self-conscious, like a minor celebrity. \n\n\"Thank God. I think I've aged five years today,\" the other nurse said. She didn't sound like she was joking. The two women led Nadja down another hallway and into a room.\n\n\"We found Nadja,\" the nurse announced as they entered.\n\nNadja could hear relieved muttering and sarcastic applause from the other patients in the room. To judge by the sounds, there were three others besides Mac.\n\n\"Nadja! Jesus Christ, where have you been? What happened?\"\n\nThe sound of his voice \u2013 his tone one of immense relief and frustration \u2013 filled her with joy. She didn't trust herself to say anything as the nurse led her to his bedside \u2013 emotions were too close to the surface. \n\nInstead, she reached out, searching for him. She felt him take her hand and give it a firm squeeze. She drew his hand up and kissed it gently, then decided it wasn't enough. Moving carefully, she leaned in and found his face with her fingertips, and then pressed her lips to his. \n\nShe couldn't remember the last time she'd kissed someone. Plenty of men had kissed her, of course, and she'd endured those kisses out of necessity. But the last time she'd sought a man's lips with her own? Eagerly and passionately? Never before. \n\nShe vowed it would happen more often from now on.\n\nHe kissed her back, and his hands found their way into her hair. She loved his hands on her, always warm and strong. Always gentle. She pressed against him a little more...\n\nThey were interrupted by a very loud and deliberate throat-clearing noise from behind her. Nadja pulled back, but didn't release Mac's hand. The grumbling from the other patients had become less grouchy and more amused. As a sense of time and place returned, Nadja blushed and looked over her shoulder at the nurse and Beth.\n\n\"Sorry. I was...worried,\" she said with an embarrassed grin.\n\n\"I can see that,\" the nurse said in a voice laced with sarcasm, \"You've got half an hour, then we really need to wrap this up. Understood?\" \n\n\"Yeah. This is great \u2013 thanks again,\" Mac said in an unsteady voice.\n\nBeth pulled a chair to the bedside for Nadja, and then left the room with the nurse. \n\nAware that there were others in the room, Nadja leaned in close and spoke in a near-whisper.\n\n\"How are you feeling?\" she asked.\n\n\"A thousand times better now that I know you're safe,\" he said, and the relief in his voice validated his words.\n\n\"No pain?\"\n\n\"Lots of pain \u2013 but only when I move. Or breathe. What the hell happened last night?\"\n\n\"You don't remember?\"\n\n\"Nope. I remember leaving the Grill with you. We were going to check out Aden's apartment. Next thing I know, I wake up here with a bunch of goddamn tubes sticking out of me. They said they had to put my liver back together.\"\n\n\"There was a fight...\" Nadja told him about their visit to Aden's building, their encounter with Gammage, her insistence on saving Isa, the fight. She also told him about the aftermath; the police, the fates of Aden, Gammage and Isa. She didn't tell him about the pictures \u2013 not yet. There would be plenty of time for that.\n\nHe was silent for a few minutes after she'd finished recounting the last twenty-four hours.\n\n\"I figured...when I couldn't remember...that there had been a fight,\" he said, \"And today, when I couldn't find you \u2013 you weren't at home and the fucking cops were no help at all \u2013 I started to think maybe Aden had taken you again and that you needed help.\"\n\nShe kissed his hand again, understanding now why he'd been so desperate to find her. She should have come sooner to visit him; should have realized the fight would have caused him a memory lapse. She hated that she'd made him worry so much.\n\n\"How long until you're better?\" she asked.\n\n\"They say I'm stuck here for the next six or seven days. Then I can go home, but they said I won't be able to work for a week after that, and I might not be one-hundred percent again for six months or more.\"\n\n\"That long?\" \n\n\"Yeah.\"\n\n\"Mac...I spoke with Maria this morning...\"\n\n\"I've been trying to call her today, but she's been out. I wanted to tell her she'd need to find another dishwasher.\"\n\nShe was grateful that she didn't have to deliver the bad news herself. Mac had figured it out on his own.\n\n\"I'm sorry Mac. I know the job was important to you,\" Nadja said. He squeezed her hand in response.\n\n\"That's not the biggest problem,\" he said, his voice quiet, \"A cop came by this afternoon and served me a Notice to Appear. They're charging me with simple assault. Court date's in a couple of weeks. Makes more sense now that I know the whole story.\"\n\n\"It's not fair!\" she said.\n\n\"Nope.\"\n\n\"We can fight it in court, right?\"\n\n\"We can,\" he said, \"but they can revoke my parole even if I beat the charge. Fighting is a violation of the parole conditions.\"\n\n\"I feel terrible. This is all my fault,\" Nadja said, suddenly gloomy.\n\n\"Yeah. Your fault that Aden's going to prison. Your fault that a little girl is getting the help she needs. Shame on you,\" he said pointedly.\n\n\"My fault that you got hurt. My fault that you might get sent back to prison\" \n\n\"Maybe. A fair trade-off, I'd say.\" \n\nThe sat together in silence for a few minutes more, and she enjoyed the closeness. Nadja could feel herself drawing strength from his nearness, and she hoped she was giving the same kind of boost to Mac. \n\n\"I never told you...about Gammage. About what he did to me,\" she said, keeping her voice low.\n\nShe didn't want to share that part of herself with Mac. Telling the police had been awful enough, but they were strangers. Their opinions of her didn't matter very much. Mac's opinion meant everything \u2013 she couldn't bear to seem pathetic or pitiful in his eyes.\n\n\"You can tell me if you want,\" he replied in the same low tone, \"Or not. Whatever you're comfortable with.\"\n\n\"It's important that you know why I asked you to risk so much to save Isa.\"\n\n\"I hope you didn't have to try too hard to convince me to save a little kid,\" he said, \"I'd like to think it was an easy choice to make.\"\n\nShe smiled and hugged his hand to her cheek.\n\n\"You were really brave,\" she said. \n\nEventually he spoke again, and his tone was steady but resigned.\n\n\"Okay, let's get down to business. You need to contact the lawyer, get that visa application started...\"\n\n\"I already called Bob. We're meeting Monday.\"\n\n\"Great! You also need to empty my bank account. I don't know what they did with my wallet, but I'll give you my bank card...\"\n\n\"You gave it to me last night, but...you're going to need your savings to get a lawyer,\" she protested.\n\n\"I can get a public defender for free \u2013 not that it'll make a damn bit of difference. Plus, the hospital's going to come after that money soon enough. I don't have insurance, and this stay is going to cost a fortune.\"\n\n\"How much will the hospital cost?\"\n\n\"Tens of thousands. So get that money out of my account and into your pocket. I guarantee you're going to need it more than they do.\"\n\nThings were going from bad to worse. He'd lost his health and would soon lose his savings and his freedom. Had it been worth it?\n\n\"Okay, if you think that's best,\" she said. It didn't feel right, pillaging Mac's savings while he was in the hospital...or heading to prison. But she couldn't fault his logic \u2013 she would need the money. Until her visa came in, she wasn't even eligible to work.\n\n\"Good. There's maybe twenty-two, twenty-three hundred dollars in there. Take out six hundred per day until it's gone \u2013 that's the maximum you can get per day. Whatever happens to me, the cash will keep you afloat for a few months...\"\n\n\"NOTHING is going to happen to you,\" she said, filling her voice with as much determination as she could muster. Somehow, she would find a way to protect him, the way he'd always protected her. \"Look, I met a man at the police station. He says he's a reporter for The Tribune. He said maybe he could do a story on us, and it might help...\"\n\n\"Forget it!\" Mac said in a voice filled with derision, \"It figures one of those fucking vultures would get wind of this. He just wants to make a few bucks off our misery. They're worse than the goddamn lawyers.\"\n\n\"You don't think that maybe, if people knew...\"\n\n\"People wouldn't give a shit one way or the other. Hell, the reporter would probably make US out to be the bad guys. Anything to sell a few more papers. He probably hangs out at the police station just looking for crap like this to write about.\"\n\n\"I guess...you may be right,\" Nadja said reluctantly. A part of her wondered what in his past had turned Mac so fiercely against journalists. Whatever had happened, it had clearly left a scar.\n\nThen the nurse came back and the visit was over. Nadja vowed to return the next day during visiting hours, and Mac promised the nurse he wouldn't be any more trouble.\n\nAs she was being led back down to the reception area, Nadja's mind worked furiously. There was no way she'd allow them to take Mac back to prison. She'd save him \u2013 whatever the cost.\n\n***\n\nShe lay in bed. She was desperately tired; depleted physically and emotionally. Still, sleep wouldn't come.\n\nHow to keep Mac out of prison? Her brain wouldn't let her rest until she had the answer, but in her sleep-deprived state she wasn't making much headway. And that assumed there was an answer \u2013 maybe there were no options. Maybe it was hopeless. Maybe, by pressing charges against Mac, Gammage had succeeded in hurting her one final time.\n\nA part of her mind \u2013 a small but growing part \u2013 thought she should move on. Accept that Mac was going to prison and focus on what she would need to do to stay alive until he got out. But how long would that be? His original sentence had been three years but his temper had managed to extend his sentence by a further four. What if the same scenario repeated itself here?\n\nHe could be in prison for weeks, months or years. \n\nSo should she focus on the near-hopeless task of keeping Mac out of prison or on the depressing possibility that he might be absent from her life for an extended period of time?\n\nShe ran through the options in her head, from the reasonable ones like asking Maria or Sophia for help and pleading with the trial judge to give Mac a second chance, to crazy options like sneaking Mac out of the hospital and making a run for the border.  \n\nNo matter which hypothetical path she ventured down, the result was the same \u2013 Mac was in prison and she was alone and struggling to survive in a world where Gammage roamed free and might be seeking her out.\n\nHopeless.\n\nExcept...what if Dan Fowler had been right? What if there was someone out there who could help them, if only they knew the whole story? \n\nIt would be utter, total humiliation for her to be known to the world as a whore, and once done it could never be undone. But what if, somehow, someone read the story and decided to help? Wouldn't that be, in Mac's words, a 'fair trade-off'?\n\nMaybe she could convince Mac to change his mind and get him to back down from his vehement opposition to the idea? On some matters she'd been able to sway him, but he could be stubborn, and if he dug his heels in that would be it. \n\nGiven how strongly he felt about the subject, she knew it was unlikely she'd convince him. He'd said no and that was that. The decision was his, and she needed to respect it and find some other way. It certainly wasn't her place to question his decisions.\n\nOr...\n\nOr...she could call Dan.\n\nShe could call Dan and do the interview. \n\nShe could defy Mac's wishes and ignore his heated objections. She could do the interview, bare her soul and pray for help.\n\nMac would hate it. He'd be angry at her, maybe furious. He'd never been really mad at her and she had no idea how it would feel or how she'd respond. Even if he forgave her for doing the interview, how would he react to the woman in his life being publicly and widely revealed as an ex-prostitute?\n\nWhat other option was there? Nothing else had a realistic chance of success.\n\nPassive obedience to Mac's wishes was no longer an option.\n\nShe would sleep, then she'd ask the building manager to read Dan's number off the business card. She'd call Dan, do the interview, and find some way to live with the shame and with Mac's anger and possible rejection.\n\nIt was a terrible plan, but at least it offered hope.\n\nNadja slept.\n\n***\n\nWhen Nadja arrived on Two South at ten o'clock the next morning, a nurse told her that Mac was sleeping. Still, she led Nadja to his shared room, mentioning that he'd been an absolute saint since her visit the night before. Before long Nadja was settled into a comfortable chair at his bedside, listening to the steady rhythm of his breathing. \n\nThe other voices in the room were quiet; if not for the occasional cough or rustling of bedsheets, she wouldn't have been able to hear the other patients. She could almost pretend that she was alone with Mac.\n\nShe didn't wake him. Doubtless he needed rest to recover from his injury. Besides, Nadja could use the extra time to decide how to explain to Mac that she'd already phoned Dan and given her story, in spite of Mac's wishes on the matter. It wasn't a conversation she was looking forward to.\n\nHer first call had been to the Tribune, to make sure that there was indeed a Dan Fowler who worked there. After that, the building manager had been kind enough to come up and read his number off the business card, and Nadja had interrupted his breakfast with a phone call.\n\nHe'd interviewed her over the phone, and Nadja gave him everything. She told him about her years with Aden and her night of terror with Gammage, about her escape from Aden's apartment and Mac's timely rescue. \n\nThroughout her narrative Dan wasn't a passive listener \u2013 he interrupted frequently, digging into the details of her story, asking about her mindset and her feelings about different aspects of her behaviour and Aden's. \n\nNadja didn't hold back, though some of the questions took her back to places and events that she would have preferred to leave in the past. Discussing her time with Gammage had been especially difficult but she was careful to include every detail. Even when she would try to gloss over a painful memory, Dan relentlessly chipped away until he'd uncovered the specific details.\n\nIt got easier when she told him about her time with Mac, about his struggles and hers, culminating in the violent confrontation with Aden and the resulting legal, financial and medical repercussions for herself and for Mac.\n\nIt had been a long, exhausting phone call, and at the end of it Dan called it an incredible story \u2013 he couldn't wait to write it. He told her he needed to fact-check with his contacts in the police; he couldn't simply accept everything she said as the truth. There were journalistic standards.\n\nAnd he insisted on interviewing Mac.\n\nShe'd explained that Mac wasn't likely to agree to an interview, but Dan asked her to try to convince him; the story would 'read' better if it included his perspective as well.\n\nAnd so Nadja had wracked her brain to come up with the words that would not only diffuse Mac's certain anger at her disregard for his wishes but also convince him to participate in the very interview he'd refused to consider in the first place.\n\nToo soon, he began to stir.\n\n\"Glad you made it back,\" he said in a voice rough with disuse.\n\n\"How do you feel?\" Nadja asked. Her hand found his and held on tightly.\n\n\"Better. A little stronger, not as much pain.\"\n\n\"Do you need anything? Can I get you a coffee?\"\n\nHe chuckled. \"No, I'm not allowed to eat or drink anything that tastes good or makes me happy. The nurses here are sadists.\" \n\nShe was glad to hear the humour back in his voice; all the setbacks of the last couple of days hadn't crushed his spirits. She felt awful that she was about to ruin his improved mood.\n\n\"Well, make sure you do exactly what they say and you'll be back to eating Maria's burgers in no time.\"\n\n\"That's the dream,\" he quipped.\n\n\"It's going to happen, don't doubt it.\"\n\n\"What makes you so sure?\" he countered, half-joking.\n\nShe sensed her opening, took a steadying breath, and dove in.\n\n\"I called the reporter this morning \u2013 the one I told you about. I gave him the whole story.\"\n\nThere was a dreadful silence that seemed to go on for several minutes. She knew the long pause meant he was angry and struggling to manage his reaction. There was nothing for her to do but sit quietly, hold his hand and wait for him to process what she'd done.\n\n\"You knew how I felt about that,\" he said, his voice low but controlled.\n\n\"Yes, I know. But I felt it was the only option. I won't lose you, Mac. I'll fight with every weapon I can find.\"\n\nShe heard him let out a long breath. More anger management. Nothing was said for three or four minutes. She waited. \n\n\"Okay,\" he said at last in a voice that was more resigned than upset, \"So, you gave him the story. What did he say?\"\n\n\"He said it was a good story and that he wanted to write it. But...\" she trailed off, uncertain of the best way to tell him the rest.\n\n\"But?\"\n\n\"He wants to hear your side of it too. He wants to interview you.\"\n\n\"You've got to be fucking kidding me.\"\n\n\"I told him to come here today around noon.\"\n\n\"Nadja, have you lost your mind?\" Mac growled, \"What makes you think I'm going to tell this guy anything?\"\n\n\"Because...I'm asking you to. I think this will help both of us. I know you disagree, but I think we should at least give it a shot. Please?\"\n\n\"Jesus, Nadja,\" he snapped, then lapsed into silence. \n\nThe pause that followed lasted so long that Nadja decided she had to re-start the conversation somehow. But how? Usually the best approach with Mac was to give him time to adjust, breathe and count. She'd never found a short-cut that worked. She tried to figure out some way in.\n\nSuddenly he laughed. \n\nIt was such an unexpected noise that for a second she didn't believe she'd heard it. Then he squeezed her hand reassuringly and she knew her ears hadn't been mistaken.\n\n\"It used to be you'd never disobey. Even if you didn't want to do it or didn't like it, you wouldn't dare refuse.\" He sounded amused and...pleased?",
        "She smiled, remembering their earliest days together.\n\n\"Right about now you probably miss those days,\" she said.\n\n\"Nope. Truth is, I like this a lot more, even if it means you're going to be a huge pain in the ass from now on,\" he said, then chuckled again.\n\nHer smile widened and she felt her way forward until her lips were next to his ear.\n\n\"You can still spank me when I'm bad,\" she whispered, then pressed a kiss to his earlobe.\n\n\"Count on it!\" he said, none too quietly.\n\nShe sat back in the chair.\n\n\"And you have to be POLITE to the reporter,\" she added, belatedly, \"He's not going to write nice things about you if you cuss him out.\"\n\n\"Jesus, all these goddamn RULES!\" he fumed in mock exasperation.\n\n***\n\nThe story broke in The Tribune the day before Mac was scheduled to be released from the hospital.\n\nDan had called to warn her the previous day, cautioning her to expect a response, although exactly what that response would be, he couldn't say. There was no way to predict, he'd said. Different stories evoked different reactions from the public. \n\nThe day started with an early-morning call from Maria. She'd seen the picture of Nadja and Mac on the front page, read the story, and loved it. She said it made them look like heroes, and she thought Nadja was so brave to have survived such an ordeal, and so noble to have risked that much to save a young girl from the same. Maria also said she'd be making a donation to Mac's medical/legal fund as suggested at the bottom of the story.\n\nThe fund had been Dan's idea \u2013 he said that when people were moved by a story they liked to be able to do something to make a difference, and the fund would give them a tangible way to help. Mac had opposed the whole notion of accepting hand-outs from strangers, but Nadja had coaxed him around to a different way of thinking.\n\nNadja arrived at the hospital by cab at ten o'clock to find the staff on Two South buzzing about the story. The nurses and ward clerks crowded around, offered hugs and handshakes and voiced their support. \n\nThe patients that shared Mac's room gave a non-sarcastic round of applause when one of the ward clerks led her to Mac's bedside, which Nadja soon learned was adorned with several stuffed animals and an impressive thicket of Mylar and foil balloons that swayed at the end of long ribbons anchored to the floor with walnut-sized weights.\n\n\"Where in that goddamn story did it say I wanted a bunch of teddy bears?\" he grumbled as she settled into the now-familiar chair next to his bed. \n\nShe picked up one of the soft, plush animals and smiled. A lovely gesture of support, but Mac clearly wasn't a 'teddy bear' kind of man.\n\n\"I bet there are some children here at the hospital who'd love them,\" she said.\n\nHe couldn't agree fast enough, and the staff began re-directing any incoming toys to the kids. \n\nNadja and Mac spent the morning together, taking the kind words and congratulations in stride. Mostly they just enjoyed one another and the simple pleasure of being together. Mac read the paper aloud to Nadja, including the article in which they'd been featured. It was factual and portrayed them in a good light, even if it was overly dramatic in places.\n\nIt was in the afternoon that things began to get crazy.\n\nDan stopped in to tell them that the response to the story had been insane and that he was fielding calls from other news organizations who wanted interviews with the two of them. He described how the story was 'going viral' on 'social media', then spent a fair amount of time describing both those concepts to Mac and to Nadja.\n\nHe told them that a petition to pardon Mac was circulating online and had garnered more than twelve-thousand signatures. He showed Mac some online comments on a 'tablet', and Mac read aloud the ones most complimentary of Nadja. A few of the comments brought tears of pride to her eyes. People online were so kind and supportive!\n\nDan also mentioned that he'd spoken to his police contacts and learned that Gammage had been arrested; apparently several women had read the story and come forward with complaints similar to the one that Nadja had filed. The police were searching his home and the early results were described to him as 'revealing'. He also mentioned that Aden was being offered a deal in exchange for identifying other people involved in the trafficking ring that had enslaved Isa.\n\nHe'd be reporting both those developments the next day in The Tribune.\n\nWith all the extra attention from so many people, Mac didn't feel comfortable with Nadja going back to the apartment alone \u2013 too many weirdos out there, he said \u2013 and he was able to convince the nurse in charge to allow Nadja to stay at the hospital overnight on a cot. Nadja didn't protest; with all the chaos and instability, she wanted to stick close by Mac in case a problem came up and he needed her help.\n\n'Ex-con, former prostitute expose child trafficking ring' was the headline the next day. Front page. \n\nAnd just like that, their world exploded into a chaotic rush of interviews and pictures, celebrity and scrutiny. It was too much, too big for either of them, and it was all they could do to cling together and try to ride out the media storm.\n\n***\n\nEpilogue:\n\nNadja closed her eyes and enjoyed the early-morning thrills and shivers as Mac's tongue slid slowly, expertly over her clit. He seemed to know exactly where to lick, how hard, and for how long. He'd made the last year a study of her body and her reactions to his touch, and she'd come to crave his mouth. His hands. All of him.\n\nShe sat on the edge of their queen-sized bed holding his face gently between her palms, unwilling to allow his mouth to drift away from her sex. Maybe in a few minutes she'd be ready to lie back, spread wide and surrender to his cock, but for the time being she wanted nothing more than to feel his hot, slippery tongue on her pussy and to feel her own body warm and soak in response. \n\nThere was an orgasm inside her waiting to happen, she was sure of it. It hadn't surfaced yet, but it was close, and one of these days she knew it would erupt. During the twelve months she'd known Mac he'd gradually rekindled her dormant libido and coaxed her climax ever closer with a combination of enthusiasm, skill and patience.\n\nHer positive HPV test had been a bump in the road, but not a big one, and once Mac got himself vaccinated he'd made it his mission to acquaint his tongue with all her erogenous zones. He'd more than made up for lost time.\n\n\"Just a little longer,\" she whispered, stroking her fingers through his hair.\n\nHis response \u2013 a satisfied hum \u2013 assured her he wasn't in any hurry to finish. He loved her taste and enjoyed pleasing her with his lips and tongue.\n\nAfter a few minutes she lifted his face away from her slit and pressed a slow kiss to his mouth. The scent and taste of her own juices didn't bother her too much and the feel of Mac's lips on hers \u2013 the hunger and passion she felt in his kiss \u2013 made her quiver inside. She let her hands drop, fingers seeking out his erection.\n\n\"Do we have time?\" she asked in a breathless voice.\n\n\"Fuck yeah,\" he growled. \n\nHis shift at the Grill didn't start until almost seven o'clock. Even so, she didn't want to make him late. He was a cook \u2013 the place couldn't open without him. On the weekdays the morning crowd was hungry and hurried so lateness wasn't an option. Maria had invested a lot of responsibility in Mac. And although his parole was completed \u2013 his lawyers had successfully petitioned to have the sentence shortened \u2013 Mac still needed the job.\n\nHe put his hands on her shoulders and pressed her back onto the mattress. She spread her legs wantonly; her need for his cock was urgent. He paused just long enough to roll on a condom and lower his lips to hers again, then slowly eased inside her. She was wet and slippery and his hard shaft triggered shocks and pulses of intense pleasure as it filled her.\n\nThe powerful feelings Mac had evoked in her over the past year \u2013 combined with some professional counseling \u2013 had first weakened, then destroyed the residual influence that her old life held over their lovemaking. Aden and Gammage were the past; Mac had staked an irrefutable claim to her present and future. \n\nThe fact that her former tormentors were serving prison terms further solidified Mac's position in her life.\n\nHe began a slow, rocking rhythm, restrained and gentle at first to give her time to open and accommodate him but soon faster and harder. She wrapped her arms around his neck and pulled his head lower so she could kiss his ear and trace the lobe with her tongue. \n\nNadja loved his sounds \u2013 his gasps and groans, breath panting as his exertion increased. Loved the scent of his skin and the sex-and-sweat fragrance of their combined arousal. His heat. His touch. The taste of him. The feel of him pounding in and out of her pussy. Mac was familiar and welcome in a way no one else had ever been.\n\nWhen he came, he thrust deep inside her, muscles locking. She could feel his cock twitching and pulsing in her tight channel, an intimate sensation and one that she especially enjoyed. She tried to squeeze him in return, to reciprocate the feeling and prolong his pleasure. \n\nHe was in no hurry to pull out afterward, content to lie on top of her, his weight supported by his elbows and knees. It felt safe to be under him, his heat and muscular chest pressing her softly into the bed as his breathing and hers returned to normal. His knife wound had fully healed and his body was solid and stronger than ever.\n\nA short while later, as he showered, she made her way out of the bedroom and down the short, narrow hallway to the kitchen. \n\nThanks to Mac's job and the leftover money from his medical/legal fund they'd been able to find a better apartment, with secure entry and better furnishings. \n\nThe media frenzy surrounding the stories in the Tribune had died off surprisingly fast and the public's attention had quickly turned to other stories, but not before Mac's fund had swollen to ninety-two thousand dollars. Almost half of it remained even after settling the hospital bill and paying the lawyers. The money had given them options and a little breathing space.\n\nThe bigger apartment had been a challenge for Nadja to navigate at first; a bedroom, kitchen, bathroom, dining room and living room were more difficult to map out in her head than the one-room apartment they'd started in. But she certainly didn't miss the musty scent of the old couch or the feel of the rough, dirty carpet under her bare feet. The new place was nicer on many levels.\n\nShe had the coffee brewed by the time Mac dressed and entered the kitchen.\n\n\"Your classes finish at three?\" he asked, and she could hear him pouring coffee for him and for her.\n\n\"Yes, but I'll need to stop at the library, so I'll be closer to five,\" she replied. She was halfway through a one-year course in victim counseling and didn't want to risk letting her grades lapse. Once she got her certificate she hoped to work in a hospital or women's shelter. With her new visa, she looked forward to adding a second income to Mac's cook wages.\n\n\"I can meet you there at around four. I'll read the paper until you're done your work.\" His warm hand rubbed her bare ass gently. She loved being naked for him, and knew that he loved her nudity too \u2013 she never got tired of having his attention on her. Nadja used every opportunity to tease and entice, playfully seeking to rouse him to action. \n\nToo soon he had to leave for the bus to work; they embraced, kissed, and he gave her bum one final squeeze before tearing himself away. She locked the door behind him.\n\nAfter showering and drying, Nadja poured herself another coffee, took the mug into the living room and sat on the loveseat in front of the wide, east-facing window. She sipped her coffee and greeted the rising sun \u2013 feeling the heat on her face as the radiant glow bathed her in a brilliance that even her depleted eyesight couldn't fully block out.\n\nShe thought of the day ahead and smiled. The future was bright.\n\nThe End."
    ],
    "authorname": "North200",
    "tags": [
        "romance",
        "consensual"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/beginning-again-ch-06-final"
}