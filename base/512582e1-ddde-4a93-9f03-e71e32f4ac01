{
    "title": "Ignore the Warning Label Pt. 05",
    "pages": [
        "Author's Note:\n\nThis is NOT the kind of Part 5 that is designed to stand alone. You will be very lost without having read the first four parts.\n\nAs with Parts 3 and 4, this part alternates between Devyn's and Vivian's point of view and narrative voice. All the first-person perspective is Devyn and all the third person is Vivian.\n\nAs one reader suggested, I'll now try to keep my author profile here updated with what I'm working on.\n\nIt's been a while since I've posted an update to this story, and many thanks are owed to EGRI for his persistence in keeping me writing and his editing work.\n\n*\n\n\n\nPart 5\n\n\"Devyn?\" Vivian asked between bites. \"Do you ever wonder what it's like for them?\"\n\n\"What? For who?\"\n\n\"You know, for our Doms.\"\n\nI paused, enjoying a mouthful of chocolate infused cookie wonderfulness. Insomnia cookies has to be the greatest service in the world. Click a few buttons on their website, and they bring warm cookies and milk right to your door! It's a good thing there wasn't a location by my house, or my weightlifting numbers would be doomed.\n\nVivian looked more thoughtful than downbeat, which was a major step up from her depression leaving the party an hour ago. 'It's amazing what a few snickerdoodles and some chocolate chips can do.'\n\n\"Do you just mean Malcolm, or dominants in general?\"\n\n\"Either? Both?\" Vivian struggled to frame what was on her mind. \"It's just... you know, it's hard for me to get into their heads. Like, to imagine what it is they get out of it. I like submission because of how freeing it is for me. I feel like I can let myself go and just enjoy everything. But they have to do the opposite, and take everything on... and I guess, I've always kind of wondered how that's enjoyable for them.\"\n\nI smiled around my glass of milk. \"You might be surprised,\" I said. \"I don't know about dominants as a general population, but for Malcolm at least, it's really freeing too.\"\n\nVivian looked confused. \"But you've told me stories, he really takes on everything.\"\n\n\"He does!\"\n\n\"So how\u2014\"\n\n\"It's like he can be himself. He doesn't need to worry about filtering himself like he does for everything else. He...\" I trialed off, wondering if declarative statements like that would convey what I meant. Maybe a story would be better? A few sprang to mind, but they were all pretty erotically colorful. Would she mind that? She'd just seen me basically naked at the party, and I'd already shared a bunch of my stories, including our recent \"I love you\" sex.\n\n\"You're thinking about him, aren't you?\" Vivian asked with a knowing grin.\n\n\"You're the one who brought him up!\"\n\nShe smiled wider, letting a bit of her open warmth shine through for the first time since we'd left the Valmont's. \"I don't mean to pry if it's too personal, it's just something I've always been curious about.\"\n\n\"It's fine, you don't need to worry about that! I was more worried that I'd make it awkward if I just dove into Malcolm fucking me.\"\n\nFar from seeming turned off, Vivian looked delighted. \"Then you do have something in mind!\"\n\nI couldn't help laughing at her enthusiasm. I wondered, not for the first time, if I was the first friend she'd felt comfortable sharing this side of herself with like she had with me. How much did she talk with her sister? As friendly a person as Vivian was, it seemed hard to believe that she'd been so isolated all her life. And yet, the evidence seemed to support that. At least, for the sexual part of her, that she saw as her greatest shame. She'd convinced herself, from the bottom of her heart, that she was an unloveable sex obsessed slut.\n\nWell, I'd do something about that if it killed me. Vivian wasn't the only one with a complicated sex life, and maybe showing her that would help her.\n\nSo, I settled into storytelling mode. \"Yeah, I guess I do. This was the weekend before my birthday.\"\n\n***\n\nMalcolm's couch is ancient. It's one of those timeless crushed leather monstrosities that takes up far more space than a tape measure says it has any right to, but is so comfortable that nobody minds. Like most of the furniture in his apartment, it's floated around his family from one owner to the next for years. I've got many fond memories of it, from lounging on it playing Super Smash Brothers Melee while visiting him in college to us nearly killing ourselves trying to get it through the doorframe when he moved here.\n\nAll that is to say that it's big, it's more comfortable than the average bed, and it's got a history of feeling like home to me.\n\nI lay on it on my side, with my head resting in Malcolm's lap. It was warm, with his big bay windows open, and an occasional summer breeze caressing my naked skin. It was like being totally surrounded by him. Everything around me was very much His, from his smell filling me, to the cuffs bringing my wrists and ankles together behind me, to the gag that stretched my jaw, to the fingers playing with his favorite spot in my hair.\n\nHe toyed idly with me, almost like he was petting a cat, while he read case materials from his tablet.\n\n\"No matter how many times I see it, it still astonishes me,\" he said conversationally. \"People really will say anything in emails. It's almost like they want to get in trouble.\"\n\n'Which case is he talking about? The insurance fraud one or the data breach liability one?' I couldn't remember. I had nothing to focus on other than his words, but I couldn't seem to make my mind put them together for more than a sentence or two at a time. Logically, it didn't make any sense. I could barely move, couldn't talk or carry a conversation, and couldn't shift my vision from his clean white dress shirt and face. I should have been bored out of my mind. I should have felt like a prisoner.\n\nBut I didn't. Instead, I felt free. Free from all my cares and concerns, and perfectly content to lay there and be pet. So, instead of trying to think, I just let myself bask in the warmth.\n\nIt was confusing blend of old and new. This old setting with the couch and Malcolm working on something, cast in a totally new light. I loved it. Every second of his affectionate touch and desirous gaze on me was a second I'd gladly relive forever. How many times had I been here, in this same place next to him, and wished from the bottom of my heart that he'd look at me like this? That I could stop feeling jealous and just have him? Well, it had finally happened.\n\n***\n\nVivian glanced down at my neck, where I realized I'd been unconsciously toying with my collar Malcolm had just given me. \"You like it when he's possessive of you,\" she observed with a smile.\n\n\"I do! Intimate scenes like that hit on a bunch of my kinks at once.\"\n\nShe smiled wider, \"Gags and cuffs do seem to keep coming up for you.\"\n\n\"Gags are amazing! They put me in the headspace of being totally in his hands. But anyway, back to Malcolm and what he gets out of it. The point\u2014\" I cut myself off, realizing that this was part of the point I was trying to explain. \"\u2014No, wait, back to that.\" Vivian laughed as I flew all over the place.\n\n\"To your gag fetish or to casual bondage?\"\n\n\"Both!\" We both laughed and she took another cookie. \"When I'm gagged, I'm putting all my trust in Malcolm to know what I'm feeling without me having to say anything. He loves taking that responsibility and feeling that trust from me. But trust is a two way street. At the same time, he trusts me to free himself.\"\n\n\"What do you mean?\"\n\n\"He gets to let his guard down and be himself with me now. He gets to be the dominant who wants to tie his best friend up and relax by petting her. Or be the hypnotist wizard who gets off manipulating his girlfriend with trigger words. Or be the sadist who gets turned on by torturing his lover.\"\n\n\"Oh,\" understanding crossed Vivian's face.\n\n\"Yeah, not exactly a set of traits society smiles upon. As much as he is in control, he's still making himself vulnerable.\" I paused, considering while finishing my cookie and eyeing the last one in the box. \"And it's especially important for him. He got hurt in his last relationship.\"\n\n\"He did?\" Concern flashed on Vivian's face.\n\n\"Yeah. He'd been with somebody you've never met named Chloe for a while, and she cheated on him twice.\" My stomach turned slightly, and doubt filled me remembering the party and my desire for Nicole. 'That's different! Malcolm says so, Nicole says so, everybody except you says so!' I went on before Vivian could notice anything. \"It's a long story, but Malcolm internalized it as a massive rejection of everything they'd done together. Basically, despite knowing that it wasn't true, he came away from it feeling like he was a failure as a dominant. He even tried to give up on everything BDSM related for a while.\"\n\n\"You must have hated seeing him down on himself like that,\" Vivian said sympathetically.\n\n\"You have no fucking idea,\" I said darkly, editing out some choicer comments about Chloe and the sections of hell she could rot in. \"Anyway! I don't mean to dwell on negativity. The point is, for Malcolm to be his dominant self and trust me to not run screaming for the hills is a big thing for him, and it feels amazing for him to have that trust rewarded.\"\n\n***\n\n\"Finally caught up,\" Malcolm said as he put the tablet down. \"Actually some interesting bits to report up the chain this time.\" He paused and gripped me a bit tighter, his tone shifting subtly from casually conversational to dominantly hungry \"but nothing that can't wait until Monday.\"\n\nI purred slightly from behind my gag, liking his firm hold in my hair and eagerly wanting more.\n\n\"You've been so good, patiently waiting for me these last two hours\u2014\"\n\nI started in surprise. 'No fucking way! Two hours?' I would have guessed maybe half an hour.\n\n\"\u2014that I think I'll let you pick your reward.\" His smile and spin on the last word let me know exactly what kind of reward it was going to be. That was the smile that said Sir wanted to make me hurt.\n\nMy pulse beat faster and a smile formed around the gag. 'Bring it on!'\n\n***\n\n\"Malcolm's sadistic side is something he's always kind of struggled with, but especially since that breakup,\" I sighed and echoed his words the first night of our romance, \"Malcolm sometimes feels like it's fucked up that he gets turned on hurting those he cares about. Like, sometimes he feels like there's a conflict between wanting to be a good person and enjoying causing pain.\"\n\n\"Even when it's consensual with somebody who wants it?\" Vivian asked, looking concerned again. \"It's not the same at all!\"\n\nI smiled grimly, happy that Vivian understood my struggle. \"If he were here, he'd ask why the consent is given. Is it because the sub really wants that kind of play, or just because they want to please him?\"\n\nVivian thought for a few minutes while she finished her cookie. \"It's really hard to separate those things,\" she eventually said. \"I think I see where he's coming from, but at the same time... I don't know... I guess I kind of feel like it's a moot point. As long as both of you are having a good time, does it really matter why?\"\n\n\"Exactly! I guess it's easier for us to get it because we're submissives. Malcolm mostly gets it, but he can also radically overthink things.\" I paused, then had to admit, \"which is probably true for me too. Anyway, the point is, he knows me. He knows me frighteningly well. It probably sounds clich\u00e9, but it's true from years of being friends.\"\n\n\"So he can see that you really, genuinely, want that from him.\" Vivian finished for me, smiling understandingly. \"He doesn't need to believe you or overthink at all. He sees your reactions and he knows they're genuine.\"\n\n\"Yep. And feeling that from me really makes him feel accepted and loved for who he is. He's made a ton of progress healing his self-view. Honestly, I'm really proud of how well he's doing after so short a time with me. But still, sometimes, he'll feel guilty after a heavy scene.\"\n\n***\n\nIn one hand, Malcolm held a paddle. Long and wide enough to hit most of my ass at once, it was one of Malcolm's favorite spanking toys to warm me up with. He usually transitioned to his bare hand once I was stingy and sensitive, alternatively caressing and spanking me, which invariably made me fall to subby pieces in his lap. Seeing it made my clit throb and desire surge through me.\n\nHis other hand held something different. Something I'd seen in porn for ages, but hadn't felt myself yet. Clothespins. My eyes went wide as images from my porn collection flashed through my head. Pictures of harshly clamped skin and beautiful lines of red marks. Malcolm smiled, knowing exactly what was going through my head.\n\n'He ought to, he sent me most of that porn.'\n\n\"You know, these things hurt more than you think,\" he squeezed one of the clothespins, opening and closing it. \"and you should probably also know, they come with some string.\"\n\nA fucking clothespin zipper! My heart beat faster, and I squirmed excitedly in my bondage.\n\nMy relationship with pain had been evolving since going down this kinky road with Malcolm. I liked pain scenes a lot, but not for the pain itself. I don't enjoy the sensation of being in pain, and I didn't experience it as a kind of release in the way Vivian does. The best I can describe it is that I looked at pain like the gym rat I am. Like a challenge. A chance to show off how strong and tough I am, push myself further, and feel the pride and achievement afterwards. A challenge to be the strongest I could be and enable as much of Malcolm's sadism as I can.\n\nAnd, as much as I love challenges, Malcolm loves creating and watching me succeed at them even more.\n\n***\n\n\"And, for the record, that isn't just him being supportive,\" I said. \"It's for himself too. It's part of how Malcolm sees being a dominant.\"\n\n\"Oh?\"\n\n\"Yeah,\" I tried to remember how he'd described it to me. \"He thinks power exchange dynamics should be about the submissive elevating the dominant, rather than the dominant putting the submissive down. To him, the more power and strength and all that I have, the higher he gets elevated when I choose to give it up to him.\" I blushed slightly, remembering Malcolm using it as a not so subtle complement for me, then used the same example he had. \"After all, if a goddess chooses to kneel before him, what does that make him?\"\n\n\"That makes sense.\"\n\n\"It's kind of a theme for us. Positivity, that is. Like, Malcolm is much more about rewarding success than about punishing failure. By challenging and pushing me to be stronger and endure more for him, it's like he's elevating himself at the same time.\" I paused, realizing I was fingering my collar again. \"Damnit,\" I muttered, \"only had it a few hours and it's already a fucking habit.\"\n\nVivian laughed. \"Don't fight it,\" she teased. \"It's cute.\"\n\nI laughed too and tossed a pillow across the couch at her. \"So yeah,\" I said. \"Hopefully that sheds a little light on what it's like for them.\"\n\n\"Wait, what!\" Vivian exclaimed. \"No, no, no, you can't stop the story there!\"\n\nI laughed again and teased her back, \"You really are a voyeur! What, you really want to hear about me getting covered in clothespins?\"\n\nShe tossed the pillow back at me, but she missed and sent it flying over my head, making both of us crack up. \"Yeah,\" she said unabashedly. \"You can't set it all up and then leave out the climax! Besides, I like hearing about you two.\"\n\n***\n\nMalcolm repositioned me, stretching me out across the couch with my arms cuffed over my head. Still comfortably dressed like he was about to go to a wedding, he towered over my nakedness and took me in.\n\nMy body responded, half tingling in expectation and half flushing in excitement. It always happened when he looked at me like that, even though he'd seen me naked dozens of times already. The way his eyes lingered on my breasts and pussy, and his smile always seemed to turn slightly wolfish, invariably made my nipples stiffen and my wetness flow.\n\n'I've been naked for literally hours already, but he can turn on my waterworks with his damn eyes.' I squirmed slightly, enjoying his attention and the feel of the cuffs constraining my movement.\n\n\"You look almost innocent like this, you know,\" Malcolm said. \"I was thinking about it earlier. Innocent and pure except for the gag, which is pretty undeniably kinky.\" He chuckled and sat down next to me, running his finger in a circle over my lips around the gag. \"But then I realized, maybe this makes you purer than you would be without it. After all, it puts a stop to all your colorful language.\"\n\nI did my best to articulately say \"Fuck you, Sir\" through the gag, but was only able to produce a few grunts. He laughed anyway, probably guessing my meaning, and went on teasingly, \"It is a new look for you, Devyn. Who knows, at this rate, maybe I'll see you wearing a skirt.\" My inarticulate protests and struggles triggered another burst of amusement from him, and even I had to admit I saw the humor.\n\nHe continued tracing my lips possessively, gazing into my eyes. He didn't do or say anything else for a while, just sat there and owned me. I lay there and gazed back into his eyes, feeling myself slowly melting. I could almost feel something leaving me and watch it being absorbed into him. Power. Almost like I was sinking lower, down into the couch, while his eyes blazed hotter and hungrier.\n\nFinally, his caressing fingers traveled lower. Down my chin and neck, lingering over my collarbone and coming to rest tracing circles around my nipple. His other hand followed, mirroring the motion, bringing pleasure to both breasts. Tingles followed over my skin and tendrils of heat blossomed in my chest, radiating through my body and concentrating in my teased tits.\n\n\"I used to think these didn't hurt that much. Models seem to take them in stride with barely a wince. I don't know if Kink.com was using fake stage props for years or if they had super weak pins or what, but I tried these myself, and they are devils!\" He drew my nipples lightly between his fingers and rolled them, sending pleasure through my chest and bringing me to full hardness. \"Or maybe those models are just that tough, and the camera does a bad job conveying what's happening.\"\n\nHe brought a clothespin into my field of vision, this one with a string threaded through the spring, and made a show of bringing it down. \"Whatever the case, you're in for a treat now, Devyn.\"\n\n'And here I used to genuinely believe my tits weren't that sensitive,' I thought as the feelings in my breasts intensified. Every circuit Malcolm made around my nips seemed to make my heart beat harder and the blood rush to him. Nobody else had ever managed to make me feel so much pleasure there, including myself.\n\nI'm not gonna lie, despite Malcolm's ominous foreshadowing, I wasn't that worried yet. I mean, everybody who's spent as much time with bdsm porn as I have knows about clothespins. They're fine going on, but they suck coming off. Besides, I'd handled Malcolm squeezing my nipples hard before. No way this could be worse. He was just fucking with my head like he always did.\n\nThen Malcolm positioned the clothespins and let go, crushing my nipples between two tons of hubris each. My breath hissed through the gag as I struggled to get to grips with the unexpected intensity of the pain. Yep, definitely \"crushing\". Not \"pinching\" or \"clamping\" or anything lighter sounding. Crushing. All the blood Malcolm had drawn together to my sensitive nubs exploded back through me at once, bringing pain with it.\n\n\"I tried to tell you,\" Malcolm said above me, mock solemnly but unable to completely hide his amusement. \"You should know by now to take my warnings seriously.\" I just groaned and nodded slightly, trying to take shallow breaths to keep my chest as still as possible.",
        "But, as much as it hurt, it did fade. Heartbeat by heartbeat, the initial burning crushing feeling shifted to a duller ache. Interestingly, it was much more localized than something like a spanking. Impact play seemed to send sensations all over my body. These things just affected near where they bit into me.\n\nI tried a few tentative deeper breaths. Achy, but not too bad. 'I can take it!' Happily, my eyes met Malcolm's again, to see that his focus had never left my face. I knew it wouldn't. He loves watching me fight through his painful challenges. 'I got this, bring it on!'\n\nHe raised an eyebrow, reading my expression. \"So confident?\" He took hold of the strings, tied like leashes to each pin. Slowly, carefully showing me just how little he moved them, he very lightly tugged and sent a disproportionately large bolt of searing pain through me again.\n\nIt hurt, but this time I was ready for it. I got to watch Malcolm as he watched me, loving how he drank in my pained expressions and involuntary gasps. He was a captivated audience, letting me see how turned on he was just as I showed him how much I hurt for him. He understood exactly what he was doing to me, and it thrilled him -- both the excitement of the act itself and my submission. It made me feel incredibly appreciated and wanted.\n\n\"Very good,\" he said, and let the strings fall. Instead of adding more pins, though, he gently slid his hand along my thigh. Excitement flooded in from where he touched, and legs flew open, bending at the kneed to accommodate my cuffed ankles. \"Eager, are we?\" He said, stroking higher, distracting me from the ache in my chest by teasing just on the very edge of my pussy.\n\n***\n\n\"He really likes teasing you,\" Vivian observed. She'd leaned forward towards me, eagerly listening. The last snickerdoodle sat forgotten on its plate in her lap.\n\n\"You have no idea,\" I laughed. \"Malcolm doesn't know how to just do anything without teasing around it first. You going to finish that?\"\n\n\"What? Oh! No, all yours,\" she passed me the cookie and I made it disappear. \"Has he always been like that?\"\n\nI smiled, getting momentarily lost in a flood of memories. \"About some things, yes. Our porn chats, for instance. He's always been super teasy about that. Other things, not at all. Like, if you ever see him debating something, he's very much to the point and no words wasted.\"\n\nShe leaned forward even more and lowered her voice, as though trying to avoid being overheard despite us being alone in her living room, \"I have no idea how you deal with the tease and denial. You or Nicole. I couldn't keep that up for a single day.\"\n\n\"I'm pretty sure Nicole still gives Malcolm shit for turning Sam on to that,\" I laughed. \"He's been into that kink for as long as I've known him.\"\n\n\"Is it a power thing?\"\n\n\"For him, it's THE power thing. It's different than anything else. Like, the clothespins, for example. I only need to be submissive and obedient to him for as long as they're on. Once they're off, it's like the game is over. Orgasm control, on the other hand, is fucking constant. Every second of every day, there's this fundamental part of me that's handed over to him. There's a part of me that's constantly focused on keeping myself obedient, no matter how fucking horny I get. It's like I'm always being submissive to him, even when we're apart. Plus,\" I hesitated, reddening slightly again before admitting, \"he's always been a manipulative bastard, and he loves how easy it is to push my buttons when I'm wound up.\"\n\n***\n\nPleasure and pain together are very intense. I read something, somewhere, about how they overlap and hit on similar parts of the brain. Someone did a study with brain scans and found that pain and orgasms make the same regions light up. I think. Something like that. The point is that they're much more similar than different, so feeling both at once is like an overload.\n\nI was proud of myself for remembering neurology trivia like that. It meant I still had a few brain cells left over. Not bad, considering my attention was being ripped apart. Malcolm was keeping me close to the edge of cumming with two fingers inside of me and his thumb rhythmically massaging my clit, and I was busy focusing on feeling as much of him on my cunt as physically possible. Simultaneously, he kept putting more clothespins on my tits, and I was kept very busy hyperventilating and grunting expletives into my gag.\n\nI'd long since lost count. Ten? Fifteen? There was a small forest of them covering each breast, each one connected to its neighbors by string. It hadn't even been very long! He kept me going in a rhythm. He finger fucked me, pressing into my clit hard to get me right to the edge of cumming, then responded to my telltale vaginal clenching with a dose of the blazing hot pain of a new pin biting into me. Around and around we went, up to the edge and back, thumb circling my clit, fingers rubbing my g-spot, pins spiraling out from my nipples around and around my breasts.\n\nThere was never a break! Each new clothespin was a fresh bite of intense pain. Just as that started to fade to join the achiness of all the other pins, Malcolm's speed and intensity picked up and I found myself close to an orgasm yet again. And, just as he slowed down to let the edge fade away, another fresh burst of pain bit me.\n\nAll the while, his face was constantly there above me. As I moaned and whimpered, rolled my eyes back in my head and squeezed them shut, hyperventilated and caught my breath, Malcolm's look of calm dominance was like a rock. It was a weird sort of calm. He was obviously excited. Very, very excited, but still, he looked somehow peaceful. Like he was in his element. Like there was no more natural place for him to be than knuckles deep in his best friend's desperately teased and denied cunt while holding the leashes to the zippers of agony on her tits.\n\nHe leaned down close to me, his chest brushing against the ends of the clothespins and sending a wave of pain all through me. At the same time, he kissed me on the forehead, and somehow everything else kind of floated away. I lost track of the couch under me and I swear I felt like I was weightless in his arms as he kissed me.\n\n\"Are you ready to explode?\" He asked, sweetly.\n\n'They're an absolute bitch when they come off...' That sounded absolutely amazing! Our eyes met and I nodded eagerly.\n\nHis fingers inside me thrust with a new urgency, hitting my g-spot hard while he simultaneously pressed into my clit. \"Then cum for me.\"\n\n'FINALLY!' It didn't take any effort to build to the edge. I'd been there so many times already, all I needed to do was stop holding myself back. My orgasm wrapped itself around Malcolm's fingers and ripped through me, bursting in waves of magnificent clenching pleasure. My legs clamped shut around his arm, trying to draw him deeper into me. My clit throbbed and throbbed for all it was worth as I thrust my hips into Malcolm, wanting to feel even more of him, every thrust against my clit intensifying the strength of my orgasm.\n\nAll that happened for about three seconds. Three second of pure bliss, then Malcolm raised the arm holding the strings threaded through all the clothespins, and both my breasts exploded.\n\nI don't know how to describe how much it hurt. It's hard because it was the most intensely focused pain I'd ever felt in my life. In a burst of clacking sounds, every clothespin was ripped from my skin, leaving behind volcanos of agony that made me think my tits had caught fire. And yet, somehow, despite that, I didn't want to escape it or make it go away. I wanted to feel it for all it was worth. I wanted to show Malcolm how much agony he'd given me and how much I could take for him.\n\nI forced my suddenly teary eyes open and found his above me, right where they belonged. He'd taken hold of his spot in my hair, gripping me possessively, letting me feel every bit desired and owned.\n\nAnd somehow, I was still cumming. I have no idea how, but my cunt and core kept right on convulsing. Pleasure ripped through me from below while agony smothered me from above. They seemed to resonate, my pelvic muscles sending ripples up to my chest, setting off painful aftershocks every time my breasts moved.\n\nFortunately, the mind breaking intensity didn't last very long. After the initial horrific burst, the clothespin marks settled down pretty quickly to warm pockets of honestly kind of pleasant achiness. My orgasm ran its course until I finally felt myself relax. My floaty feeling came back as Malcolm lay himself down on the couch behind me and spooned into me, running his hands lightly and tenderly over the spots the pins had bitten me.\n\n\"You're going to love the way these look,\" he said, then removed my gag.\n\n\"Fuuuuck,\" I slowly exhaled, trying to work life back into my jaw.\n\n\"You know, that's always the first thing you say after I take this off.\" There was amusement clear in his voice, but then that dropped and he sounded concerned. \"I'm sorry, Devyn. I shouldn't have pressed you so hard. I shouldn't have--\"\n\nI flipped myself over to face him as best I could with my still cuffed wrists, ignoring the renewed ache every time my chest hit something. \"No, Sir,\" I said, trying to sound as forceful as I could while still feeling light and achy and post-orgasm glowy all at once. \"Ask me how I feel before you go feeling regretful.\"\n\nHe raised an eyebrow, but asked.\n\n\"It was amazing!\" I said. \"It was so intense, I didn't know what to feel. We're definitely doing that again, Sir.\"\n\nHe just shook his head, his expression a mix of surprise and admiration and attraction and conflict. \"But I made you cry.\" He brushed some moisture from the corner of my eye to demonstrate.\n\n\"So?\" I said, stubbornly. \"Tell me, did you ever see me make any attempt to safe signal? Malcolm, I made you a promise. I promised you that I'd be totally honest with you about all of this. In return, you promised me that wouldn't second guess what I tell you. Well, I'm telling you, I honestly loved this.\" I paused, then continued, \"and I know you did too, and there's nothing wrong with that. Quite the opposite, actually. If you didn't like it, all my hard work would be kind of wasted.\"\n\nHe half chuckled, half sighed, \"Well, when you put it like that\u2014\"\n\nI slipped my bound arms around his neck in an attempt to pull him close. At the same time, I pressed myself into his obviously very hard pants crotch. \"I get it, I really do. I get why you sometimes feel conflicted when you think you've really hurt me. I'm not trying to downplay that, I'm just trying to set your mind at ease. You're a kinky dominant fucker, not some kind of broken toy that needs to be fixed, Sir. You are who and what you are, and that's exactly why I want you. You're mine, and I never want you to change.\"\n\n***\n\nVivian had smile a mile wide. \"That's so beautiful,\" she said. \"You care about him so much, he's so lucky to have you.\" Somehow, that praise made me more self-conscious than vividly describing torture and orgasms.\n\n\"Thanks,\" I said with an awkward laugh. I really suck at talking about my emotions. \"I just feel lucky to finally have him.\"\n\n\"You're healing him while romancing him. That's really special. It's like giving sex therapy literally.\"\n\n\"Thanks,\" I muttered again, and she took mercy on my embarrassment and changed topics.\n\n\"I've never tried clothespins either. I'm really curious now.\" The way she said it, with clear sincerity and eager excitement, turned my awkward laughter genuine. \"Was it something I said?\" Vivian asked.\n\n\"It's just us! I just got done trying to figure out how to explain how much those bastards hurt, and you take it as a ringing endorsement.\" I moved across the couch and tossed an arm around her. \"You might be a little crazy.\"\n\n\"Me!?!\" Vivian exclaimed, amused and mock indignant. \"I saw your look back at the party watching Natalie get caned. You can't tell me you're not plotting to get Malcolm to give you marks like hers.\"\n\n\"Fine, guilty! So we're both insane. Sorry, I might not be the best therapist to cure you.\"\n\n\"Don't sell yourself short. You really helped me last week, and don't think I haven't noticed how you've got me smiling again tonight. Maybe it takes somebody with my affliction to cure it.\"\n\n'Busted.' \"Am I that transparent?\"\n\n\"Maybe a little,\" she said. I'm not sure what I expected, but she was smiling. \"That party got all of us really turned on, but you wanted me to believe you and Malcolm didn't have plans to rip each other's clothes off?\"\n\n\"Erm... well... okay, yeah. Sorry I lied about it.\"\n\n\"Please don't be sorry. It means the world to me.\" Her expression of naked gratitude was enough to melt my heart. \"I have no idea what I did to deserve it, but it really does mean so much to me.\"\n\nIt was finally time. If I couldn't turn my good intentions into actions now, I never would. Still, it sucked to go down a line that was sure to upset her.\n\n\"You know, back on that first night, Malcolm made me talk to Nicole before he let me rip his clothes off. Or, well, I guess I never did get to actually rip them off, but you know what I mean.\"\n\n\"You mean when you first asked him out? Why did he do that?\"\n\n\"He wanted me to understand what I was getting myself into. It was supposed to be a warning, but I mostly ignored it, and it's worked out fine anyway because of how great he is. Even afterward, he made me read a bunch about everything we were thinking of doing.\" I met Vivian's eyes, trying to gauge her mood. Open? Receptive and trusting? Maybe a little apprehensive? \"But nobody ever gave you any of that.\"\n\nVivian didn't say anything. She dropped her eyes, but her expression didn't close down. \"As I'm sure you've found out, there's a million different ways to do BDSM. There's truly no one size fits all, it's whatever works for you. However, there are some things that everybody agrees about. One of them is that denying aftercare to a submissive who needs it is always wrong.\"\n\nAfter the self-loathing Vivian had shown at the party, I'd been expecting her to react poorly. I hadn't expected her to sigh and nod, slowly. \"I think Susan has been trying to tell me that for a while.\" She said, referring to her sister. \"I have tried to talk to Paul about it, I really have. It just... I don't know... I start, and then somehow, we get distracted.\"\n\nI'd like to think I held venom out of my voice reasonably well. \"You start feeling like you're supposed to be there for his pleasure, and your needs are not important. Or you're not worth his coddling and you should be strong so he can enjoy himself. Or you just get sidetracked by sex or something before you can explain how you feel? Sometimes, he makes you feel special, and you think he understands. And then, on top of that, it's so hard for you to bring up because you're so used to obeying him that disobeying or making him mad at you feels horribly wrong?\"\n\nVivian's eyes had grown wider with each sentence, and my already melted heart broke a little bit. \"How did you know that?\" She asked in a small voice.\n\n\"That's pretty much the posterchild for abusive dominant. It's also what Malcolm is terrified of me feeling from him. I hugged her closer, expecting her to need some kind of support. \"None of that stuff happens by accident. He knows exactly what's going on. He needs to in order to keep heading you off like that. It's a deliberate choice he's making. He knows what you need and he's deliberately not giving it to you.\"\n\nVivian was quiet for a minute, looking more confused than hurt. I hugged her a little tighter to my side, trying to seem supportive without words. Finally, she said, \"but why would he do that?\"\n\n'Could be worse. At least she's skipping over denial.'\n\n\"I don't know. Maybe he's one of those people who thinks life is like porn, and all this emotions shit he's heart about is just a you problem. Maybe he's lazy and can't be bothered. One way or the other, the why isn't important. It turns out the same. Some people are just shitty, and he's one of them. You can't tell him how you feel because he already knows, and he's shown you his response time and again.\"\n\nThe silence was longer this time, punctuated by deep sighs from Vivian that sounded like the kind that barely kept tears back. I hated them, they sounded so pained, but I had no idea how to help her.\n\n\"You're right about the disobedience part,\" she finally sniffed. \"Just thinking about doing it is hard.\"\n\n\"It's one of the things Nicole explicitly told me.\" I said, making rubbing circles on her back. \"We'll go through hell to avoid our Doms being mad at us. It can make sticking up for ourselves really difficult. That's why it's so important to be with somebody who deserves your trust.\" I couldn't take another long silence between us, so I kept on rambling. \"It's called power exchange for a reason, Vivian. Exchange -- not gifting. You give your power over to a dominant, and you get something from him in return. Maybe it's love, support, release, whatever. The point is, it's a two way street. You don't deserve to be miserable like you are with him.\" She sniffed loudly, but I didn't back down. \"No! None of that. You do deserve better. Even if you don't think so, I do. Look at me, Vivian.\"\n\nObediently, she raised her head, her red and watery eyes filling me with sorrow and further hatred for the scumbag that had done this to her. \"Do you know why I'm here with you tonight? It's because you're worth it. Making you happy is genuinely worth it. You're an amazing person and an amazing friend. I know this sucks... but, well, you deserve better, and need to hear that.\" I hugged her tight, as if I were trying to squeeze my words into her by force. \"Everybody thinks you're great, except for you yourself. You are worth it. You deserve to experience the same happiness you give other people.\"\n\nVivian's dam finally broke, sobs shook her and tears rolled down her face. It took a while, but when she calmed down, she seemed different. Determined.\n\n-------------------\n\nVivian lay in bed staring at her phone. She'd lost count of how many times she'd reached for it to send him a message, only to lose her nerve and put it off again until tomorrow. She knew what she wanted to say. Something short and sweet. A clean break. Just like she'd done for the Tinder guys that hadn't quite gotten the message that she wasn't looking for anything permanent. There had been surprisingly few of those. Most had been more than happy with her one or two night fling business model.\n\nDispatching her clingy Tinder hookups hadn't made her nervous at all. After all, they didn't really know her. They just saw the slut. This was Vivian herself, standing up to her Master, and it terrified her. She rolled over in bed, unable to get comfortable in any position.\n\nWhy? He only saw the slut too. She'd done her best to show him her other side, but he'd never been interested in anything but the slut. Why did she care what he thought of her? It was difficult to analyze her own feelings, she kept impulsively shoving them down, balling her fists and breathing through her teeth.\n\nJust a few days ago, she'd been so optimistic. Sitting in her office looking at the text from him about her party outfit, she'd been so determined to make their relationship better. Stronger. To forge with him what Devyn had with Malcolm, what Nicole had with Sam, Susan with Dean, basically all the other couples she knew. That text was the last she'd heard from him. Just twenty words. That's all he'd had for her after their last session. After he'd whipped her, had anal sex, and left her a sobbing mess without even a backward glance.\n\nAnother breath hissed between her teeth, and she tossed over again, trying and failing to find a cooler spot on her bed.",
        "She was afraid of him. The realization took her by surprise, even after everything Devyn had said. She wasn't afraid of him physically. Everything they'd done had been completely consensual. Hell, she'd enjoyed it. She wasn't afraid of his roughness nor any physical punishment. She was afraid of what he might say. Afraid that he would make her feel as broken and alone as he had the night she'd called Devyn.\n\nAnd, even more surprisingly to her, she realized that made her angry. More, she was furious!\n\nThat was pretty much unheard of for her.\n\nWhy had she let herself get to this spot? How had she become so blind? How long would she have let herself stay miserable if Susan hadn't invited her to munches and she hadn't seen everybody else there? If Devyn hadn't decided to befriend her? If the stars hadn't aligned and given her a chance to open her eyes?\n\nThe answer was undeniable. Forever. She would never have broken out of it, because she would never have realized that anything other than herself was the problem. That's why her whole body felt hot with anger. It wasn't just Paul per se, she felt like her positive view of people had been betrayed. She'd given him so much trust, had never believed anything but the best of him, and he'd betrayed that.\n\nVivian hated feeling this way. How did people become rageaholics? How could they stand it? She forced herself to breath slower and relax her muscles.\n\nIt didn't work.\n\nMore than just Paul, she was mad at herself. Mad that she'd let herself get into another situation like she'd been in in college, where she was incapable of even realizing she had a problem until she needed rescuing.\n\nIt was easy to blame Paul, and he deserved it, but the real problem was her. She'd never figured out how to live with herself. How to make peace with her own identity and just be happy. If she could have done that, then she wouldn't have needed to be told she was being abused. She wouldn't have needed to be told that her feelings mattered, or that she could have things any other way.\n\nThis time would be different. She stared up at the dark ceiling and promised herself, again and again. She would figured it out, somehow. It would be different.\n\nThen she grabbed her phone again, and this time started typing immediately. His name was still saved as \"Master\" on her contact list. Forget that! Each of the six deletes felt better than the last, and relabeling him simply \"Paul\" without the title felt even better.\n\nVivian: Ive had a really eventful month. The last few days have been especially eye opening\n\nVivian: Ive decided to stop being in denial about why im miserable after we see each other\n\nVivian: It isnt my fault and I shouldnt have to keep making excuses to myself for you\n\nVivian: So I'm breaking up with you.\n\n-------------------\n\nVivian's couch sucked. I really shouldn't complain, it's no better than my shitty Ikea couch. Still, the ache in my back and stiffness in my legs were savage. That wasn't what woke me up, though.\n\nVivian was trying to be quiet, but her feverish key pressing and whispered communications about player positions and ultimate charge didn't exactly lend itself to peaceful sleeping. Overwatch. Despite my rude awakening, it made me chuckle. She was playing Tracer, a character who was very fragile, but very quick, and needed to dodge faster than anybody else could react. I couldn't play Tracer for shit. I always ran into walls or other players. Turns out it's hard to dodge bullets.\n\nVivian, on the other hand, looked immortal. I'd known she was good from the way she'd run circles around everybody when we played together, but daaamn. She must have been holding back out of some measure of sympathy for the low rated players Malcolm and I got paired against.\n\nMy phone had a lot of unread message alerts. I hadn't paid any attention to it at all last night, and apparently Malcolm had texted Sam and Nicole that the four of us should chat. He hadn't said what about, but Nicole had gone ahead and assumed it involved my openness to playing with them. I was almost tempted to change my mind about the whole thing just to prove her wrong. Almost.\n\nSurprisingly, Nicole was already awake, and we exchanged some very charged texts while I waited for Vivian to finish her game. Most of our conversations were already flirty, but after her inferring that she'd soon be getting into my pants, it took on a whole new level.\n\nShe seemed so excited, and I was too, especially after watching her last night and foregoing any chances to cum. I was horny, and Nicole's teasing about how hard she was going to suck my clit did nothing to make the throbbing between my legs calm down. Still, some of my nerves remained. The party had definitely convinced me that it would be amazingly hot, and it could work and be fine for my relationship with Malcolm. It was just sex. Just physical fun involving more people's bodies. All my love belonged to Malcolm, and it always would. Still... nerves.\n\nHow was this going to work? Sam and Nicole both seemed open to playing with Malcolm around, but they were both very much gay. Sam especially disliked men as a general matter, though that didn't seem to extend to Malcolm. She had a grudging respect for him, linked to his skill as a dominant and how he was the only guy she knew who she'd never caught ogling her tits.\n\nWe'd have to talk about it. I needed Malcolm to be there. I couldn't deal with doing anything sexual behind his back. That would definitely be over the line between this and cheating, and I'd die before I did to Malcolm after what Chloe had done to him. Maybe that's why I still felt nervous -- it felt like playing with fire.\n\nTo add to that, I also couldn't stand to have him doing anything sexual with anyone other than me. I hate that hyper-jealous part of myself, but for better or worse, it's just who I am.\n\nSo I needed him to be by my side, but only playing with me. While I fucked our lesbian friends. 'Yeah, there's no way that doesn't make me a needy bitch.'\n\nComplicated, to say the very least.\n\n\"How did you sleep?\" Vivian asked once her team had won and she was able to look away.\n\nI jumped slightly and shook myself back to reality. \"Better than you would have on my couch. How about you?\"\n\nShe absolutely beamed. \"Fantastic!\" she said. \"Well, it took a little while to fall asleep. Then I broke up with Paul and I felt better immediately.\"\n\nMy jaw hit the floor. \"You did what!?!\"\n\n\"Broke up with him! You're looking at a single woman.\" She bounced slightly in her chair, barely able to contain her excitement. She must have been dying to tell me, but been too polite to shake me awake.\n\n\"How did it go? Did you tell him how you've been feeling? What did he say?\"\n\n\"Well... actually, I just sent him a text. I know I should have at least called him or told him in person or something, but I just felt like I needed it to do it. For me...\" She said those last two words hesitantly, almost guiltily, but they made me cheer.\n\n\"I'm so proud of you! Do you have any plans now?\"\n\n\"Short term, I want to just relax in the park. Beyond this morning? Not really. I didn't really think about that. It's weird, usually when I'm impulsive, it's chasing after sex, not breaking away from it.\" She fidgeted a little and looked down at her hands introspectively.\n\n'Who knows, maybe someday, you'll discover that you're actually a well-rounded person.' But I left that for another day. One victory at a time, and I was sure she'd have a lot of emotional fallout to cope with already. So, instead, I asked, \"What's happening in the park?\"\n\nVivian pulled a mess of yarn from somewhere on her desk and held it up proudly. \"I'm getting close to finishing!\"\n\n\"Um... finishing what?\"\n\n\"The sweater! You see, once the sleeves are done, I'll join these parts here together and they'll go here, and--\" I sat, a little mystified by Vivian's explanation of how to knit a sweater. I'd never really given it a thought, but I'd had the vague feeling that all things yarn related just sort of came into being in one go. It turns out that sweaters get done in separate pieces, which made significantly more sense once I thought about it. It looked absurdly complicated, despite Vivian's insistence that it was really easy. The sleeve she had started, for example, needed four needles just to hold itself together, and she would use more to add lines. I tried to imagine juggling five or more needles, and balked.\n\nOnly Vivian. Only she could go from an emotional night of self-discovery, into a breakup, and directly into a sunny day with knitting needles and yarn. It made me smile. 'Whatever happens, never lose that part of yourself.'\n\n-------------------\n\nSomething nagged at the back of Vivian's mind as she closed her door behind her.\n\nShe rummaged in her bag. Phone? Check. Keys? Check. Wallet, yarn, needles, sleeve? Check. She'd deliberately decided against headphones because she wanted to enjoy peoplewatching more than podcasts or music at the moment. Whatever she'd forgotten, it would come to her later.\n\nMaybe the phone should stay behind too? Paul hadn't texted her back yet, and she didn't want to get wrapped up in constantly checking and rechecking if he had. She was in far too good a mood for that. Which isn't to say that she was dreading the confrontation that was surely coming. Last night, she thought she wanted a clean break with no complications, but right now, she felt like it would feel good to vent. To force him to acknowledge some of how she felt. To show both him and herself that she was capable of not being a total pushover. Maybe that would give her a bit of closure, and even if he yelled and was unreasonable and dramatic, it would be something to feel good about.\n\nBut that could wait, so she tossed her phone on the couch and headed out into the sun. It was a little bit of a walk, but Washington Square Park was well worth it, especially on a Saturday. Not a cloud in the sky, and much brighter in the open away from surrounding buildings. The park was a bit like stepping back onto her old college campus. NYU had a bunch of locations nearby, and it was a gathering point for all kinds of people. The performance of Midsummer's Night Dream she and Devyn had stumbled across last night was just one example. There were always artists and musicians, skateboarders and socializers, and of course, the observers like herself.\n\nVivian liked watching people paint. She'd tried to do it herself a few times, but just didn't have the knack for capturing three dimensions on paper. There were a few artists out today, and she made her way to a cute one drawing by the big fountain in the center. It was a popular spot for everything art related, from film to photography to charcoal drawings like this guy was doing. She watched suspiciously as he scratched the outline of somebody who looked a lot like James Spader, sitting just where James Spader had been in an episode of The Blacklist that had been shot here. Vivian settled in on a bench behind him to watch while she knit.\n\nIt had been a while since she'd come here. It felt kind of symbolic. Like she was ending an era of her life where she'd been unhappy by coming back to something that made her happy.\n\nIt had also been a while since she'd been single. Her transition from her college Master to Master Paul had been pretty quick. Okay, maybe a little faster than merely quick. She'd connected with Paul online before she'd even moved to New York. It had seemed important at the time! She had found some measure of balance in her life because of BDSM, and she hadn't wanted to revert back to the Tinder obsessed slut she had been.\n\nIn retrospect, maybe Devyn was right. Maybe she did need to learn how to appreciate herself first...\n\nIt was weird to see everything around her through a single person's eyes. Almost like she'd had blinders on without realizing it, and they were suddenly gone. This artist in front of her, for example. He was cute -- a bit taller than her, slim without being thin or lanky, dressed in fitted jeans, converse and a light short sleeved shirt that showed off his firm looking arms while he maneuvered the charcoal.\n\nJust yesterday, she wouldn't have given him more than a once over before sinking into his drawing. Today, she eyed him appreciatively. There was a part of her that knew from experience exactly how to approach him get him to invite her to dinner. How to move and what to say to get into his bed.\n\nBut that was the brazenly dirty part of her that made her blush and want to cover herself up. She couldn't do it now, anyway. She hadn't worn any makeup, and her outfit was far to plain and modest to catch his eye. Besides, everything she knew felt fake. Like it was a script she'd memorized to get through dinner on Tinder dates. When she was in that mode, it never really felt like she was talking about herself, even when speaking in the first person.\n\nShe laughed out loud. There was a perfectly obvious explanation for that. Nearly everything she'd said on those dates was made up. It had been before Master Michael had entered her life and basically forced her to go out and develop interests other than studying and sex. How much better would those conversations have felt if she'd been bonding over her love of watching basketball? Or the latest Marvel movie? Or anything besides the fictional interest in documentaries that had been her fallback when asked.\n\nPaul had never cared. She'd tried to connect with him about stuff outside the bedroom, but he never did much more than smile and nod.\n\nSuddenly, she remembered what she'd been trying to think of. Her keys! Paul still had one. Shit... Well, she'd just have to get it back from him. But she really didn't want to have to ask him for anything.\n\nHer good mood took a hit after that, thinking about what she'd say to him.\n\nTime passed as her knitted sleeve grew one line of yarn at a time and Vivian lost track of the activity around her. She got so wrapped up in introspection that she didn't notice when the artist turned around and smiled at her.\n\n-------------------\n\nDespite Malcolm and my intentions to spend the weekend doing stuff in New York, we'd all gathered at Sam and Nicole's apartment in Jersey City . To talk about having sex. BDSM scene negotiations are fucking weird. They're great for opening up about what you like, establishing communication, essential for consent, and a whole list of other things, but still. All my life before this, I'd been used to sex being a thing that just kind of happens. You meet somebody, you flirt, there's a back and forth dance of sizing one another up, and things either progress or they don't.\n\nTalking about everything ahead of time was still taking some getting used to. Doing it with Malcolm didn't help at all, we'd been talking candidly about sex for our entire friendship. Okay, maybe not with ourselves having it as the subject, but still.\n\nIn fairness to everybody, it probably just felt awkward to me because I was the center of everybody's attention. Specifically, me and my laundry list of needy requirements. Sam, Nicole and Malcolm were all group play veterans. It kinda felt like I was the only one holding everything up.\n\nNevertheless, it was important, so I set it all out in the open for Sam and Nicole. Malcolm, of course, already knew everything. He was a lot of help explaining things more eloquently than I could, and just making it so I didn't have to do all the talking. Hearing him tell them about how I was worried he'd feel cheated on, and how bad that would be bad given how his relationship with Chloe ended, helped me a lot. It reassured me that he really understood how afraid I was of ever hurting him.\n\nFor their part, Sam and Nicole were quiet and attentive. They sat together on the couch, a cat in each of their laps, Sam stroking Nicole's hand resting between them. I smiled and felt at the collar at my neck while Malcolm spoke. Despite the situation, it was nice to feel how well he knew me.\n\n\"We don't need to do this, you know,\" Sam said when we were finally done. \"It's totally fine, there's no rule that says you need to.\"\n\n\"I know. I didn't mean to, either, when it first came up,\" I said.\n\n\"What changed?\"\n\n\"Honestly? It was your performance at the party.\" I looked hopefully at Malcolm, but instead of speaking for me, he just nodded for me to keep going. So, I tried my best to explain how seeing their scene had affected me. How they had both clearly been having the time of their lives with Madison and Kate, but afterwards, how they had walked off the stage together, showing their bond. Nicole had been totally wiped out serving Sam, and Sam had been half carrying her, radiating care and protectiveness. That had seemed beautiful to me. The difference between the relationships -- Madison and Kate were fun to fuck, but Sam and Nicole were each other's soulmates.\n\nI suck at talking about my emotions. I can barely do it with Malcolm, never mind other people! Describing to a couple how seeing their loveyness was beautiful? Yeah, that was fucking awkward. Nicole looked like she wanted to laugh at my predicament, but Sam smiled encouragingly, so I mostly faced her.\n\nFinally, I finished, and Nicole immediately asked, \"aren't you forgetting something?\"\n\nStill facing Sam, I said with as much sarcasm as I could manage, \"Then, of course, there's your fucking fianc\u00e9. Beyond any kind of deep reason or whatever, she's just such a fucking tease that I want to fuck her. There, I said it.\" I nodded to Nicole, \"You win!\" She blew me a kiss.\n\nNicole was about to say something else, but Sam squeezed her hand and she backed down.\n\n\"Well, don't worry about us,\" Sam said. \"We've played with hetero couples before. I'm sure you remember our rules, Malcolm?\"\n\nHe chuckled, \"Oh yes. Hard to forget after what you did to Fabien for breaking them.\" Sam looked quite smug.\n\nI had to ask, \"I take it there's a story there?\"\n\n\"Mistress discovered she likes ballbusting,\" Nicole said with a grin.\n\nAs we continued talking, I realized that this really couldn't have worked out any better for me.\n\nI was attracted to Nicole? Nicole was attracted to me too -- and she loved being smothered by multiple women, and Sam was very much into enabling that in her. I wanted Malcolm to be a part of it, but for him only be mine? Well, they wanted me to be as comfortable as possible, and while they weren't against all forms of male contact, they didn't want anything sexual from him.\n\nEverybody was so damn understanding and accommodating! I wasn't sure how to react. It wasn't surprising, it was just a little overwhelming. My friends wanted to share this thing they thought was amazing with me, and they wanted to make it as safe and fulfilling for me as possible. It made me kind of choke up, holding Malcolm's hand and seeing all of their comforting smiles around me.\n\nAnd so it was decided. We'd get together in a week and have our sexual adventure. Nicole, of course, groaned about being made to wait until the following Friday to jump on me, but Sam and Malcolm would need the time to plan things out and gather materials. Indeed, Sam pulled Malcolm away with an evil domineering look back at Nicole and I that clearly said she was about to start planning just what to do with us.\n\n\"You see that?\" Nicole beckoned me over to the couch spot Sam had vacated.\n\n\"Yep.\"\n\n\"Know what it means?\"\n\n\"I'm pretty sure it means we're in for a treat.\" I sat down next to her. \"So, what did that guy do to get kicked in the nuts?\"\n\n\"Fabien?\" Nicole grinned mischievously, \"he copped a feel.\"\n\nThat raised an eyebrow. \"Some guy thought he could grope Sam and live?\"\n\n\"Oh no!\" Nicole laughed, \"he was after my tits, and Sam took offence.\"\n\nSam's fiercely protective face flashed in my mind. \"Ahh, that makes sense.\"",
        "\"Yeah, she's a bit of a terror on anyone who breaks consent.\"\n\nIt was just what I'd been thinking, but I decided to tease her by taking it a different direction. I deliberately dropped my gaze to Nicole's chest. \"Oh no, I meant it made sense he'd want to do it anyway. After all, who could resist your tits.\"\n\nShe puffed herself up proudly, making her chest press against her Rolling Stones t-shirt enough to show the bare outlines of her nipple ornaments. \"I knew you were a boob girl! Are these the real reason you suddenly changed your mind?\"\n\n\"No!\" Nicole raised an eyebrow disbelievingly. \"Fine, I am a boob girl! But it wasn't that. It was how you managed to take that entire dildo down your throat. How the fuck did you do that, anyway?\"\n\n\"Practice, my friend, practice. A whole fuckton of practice. I'd never been with anybody who liked that kind of thing before Sam, but she really gets a power kick out of it. Believe me, she is a very persuasive motivator.\" She leaned into me and said seductively, \"I could teach you if you want.\"\n\nI laughed and tried to mirror her sexy tone, dropping my gaze still lower down her body. \"Actually, I had something else in mind for my mouth.\"\n\nNicole's hips fidgeted slightly under my attention. \"And you accuse me of being a fucking tease!\"\n\n-------------------\n\n\n\nWith each passing day, Vivian's hopes had fallen a notch. And her hopes hadn't even been that high to begin with. She hadn't wanted anything major, like an apology or explanation. Okay, maybe those would have been nice, but she'd known better than to realistically hope for them. No, all she'd wanted was some kind of acknowledgement of what she'd been through, and some closure.\n\nThe weekend passed, and he hadn't acknowledged her.\n\nMonday, nothing.\n\nTuesday, silence.\n\nBy Wednesday, she had to start leaving her phone behind again to stop herself reflexively checking it. She had tried calling him, tried more texts, but he never answered or responded. There was a moment of dread each time she looked at her phone, and all those moments added up quickly. She felt like she was constantly bracing herself for a blow, and it made it impossible to relax or settle to anything else.\n\nFriday came, and finally there was something. Vivian got home from work to find an envelope slipped under the door. Ripping it open revealed a key. It was hers. The key she'd given to her master, surrendering her privacy to him, effectively promising to be available for his pleasure whenever he wanted her.\n\nAnd that was it. Just the key. No Paul, no note, not even her name written on the front. She sat down, feeling numb. That was it. It was over, and it felt so incredibly wrong. There was... just nothing. No closure, no anything. She felt cheated. It was so bitter and unsatisfying and frustrating, she felt her eyes getting hot the way they do before tears start falling.\n\nIt made her feel completely worthless.\n\nHe was telling her, as clearly as possible, that she was beneath him. She wasn't worth lifting a finger for. He had no need for trifles like spending words on her. He'd used her for his pleasure, and now that was over, he'd moved on without a backwards glance. He'd fucked her and forgotten her. Like the whore she was.\n\nAnd, beyond that, she felt stupid. It was the same thing she'd been through again and again with him. Hoping for his attention, wishing he'd want to stay with her, making herself believe that he wanted her, but always to be let down. Why had she thought for a second that this time would be any different? She could practically hear him, in his stern dominant voice telling her: \"No, you don't leave me. I leave you.\"\n\nHer pain right now was her own fault. Even after breaking up with him, she'd still given him this power over her. It hadn't even been a whole week, and she'd already broken her promise to make things different.\n\nShe forced herself to take a deep, shuddering breath. One at a time, she unclenched her muscles. Her hand hurt where she'd been squeezing the key's teeth. When had she done that? Deep breaths, like she'd learned to do to let her anger out.\n\nIt had all started off so well, too. She'd been so happy that first day! She'd genuinely felt free. What had happened? Vivian started down another spiral of self-recrimination, but stopped herself. That was exactly what always happened. She blamed herself for everything. Devyn had told her, quite forcefully, that not everything in the world was her fault.\n\nIt had been a rocky start keeping her promise. But did that mean she was going to give up?\n\n\"No!\" She said, out loud, to her own surprise.\n\nPaul only had power over her as long as she let him. To take it back, all she needed to do was let go of any expectations she had of him. Just simply go on living her life and forget about him.\n\nMuch easier said than done. Still, before she could think too hard about it, she dropped the key that had been his and changed out of her work clothes and into something casual. Only stopping to grab her bag of yarn and needles, she practically ran out the door.\n\nShe started feeling better as soon as it shut behind her. By the time she'd gotten back to the park, she felt like a weight had been lifted off of her shoulders.\n\n-------------------\n\n\"It's been a while for you, hasn't it? Since you've been with someone like her?\" Malcolm said as he brought my shirt up over my head. \"She's really something. Tough and determined enough to model for Queensnake, with the build to fit in on SuicideGirls. No wonder she makes you salivate.\"\n\nI didn't say anything. What was there to say? He was absolutely right.\n\nNicole was hot in every sense of the word. She was unbelievably sexy. Her trademark fiery red hair was something of a mess as Sam roughly stripped her clothes off, revealing her usually pale complexion slightly flushed. As her clothes flew from her body, it became obvious that Nicole was horny. Very horny. Her nipples looked harder than the metal rings that pierced them, and the red lace panties she briefly wore were clearly originally intended to be a lighter rose color than the pussy stained garnet they were now.\n\nI knew my body was no more subtle than hers. We'd been teasing each other relentlessly for the last week. It had turned into some kind of contest, who could make the other more worked up before tonight. Of course, I'd had a handicap. Sam had let Nicole cum repeatedly at the Valmont's party. Malcolm hadn't allowed me an orgasm in two weeks!\n\nMost of my nerves were gone. After all the talking and reassurances, I really felt like everything would be amazing. Still, standing there in Sam and Nicole's house, having my clothes stripped from me one at a time, it felt much more real. Rehearsals were over and it was time for opening night. That should be enough to justify some butterflies in my stomach. Right?\n\nNicole's and my eyes were each glued to the other as our Doms prepared us. We still had no idea what exactly they had in store for us, but whatever it was, it involved rope. It was interesting to watch Sam's style as she bound Nicole. She was much more rough and direct than Malcolm. Where he seemed to have a flowing, calming sort of confidence to his dominance, Sam seemed to go a different way. She was more forceful, manipulating Nicole's body the way she wanted it, making things more chaotic than calm. It fit Nicole and her desire to be handled roughly very well.\n\n\"Do you remember that time back in college, when you tried to get me to imagine you with one of your female hookups?\" Malcolm spoke low in my ear as he carefully measured out sections of rope along my arms.\n\n\"Not exactly, Sir.\"\n\n\"Oh?\"\n\n\"You're gonna have to be more specific. I tried to make you imagine me naked far more than once.\"\n\nMalcolm chuckled softly as he tinkered with some loop knots. I hadn't figured out much about rope yet, but it seemed like he was leaving a lot of slack. What was he planning?\n\n\"Well, on this particular occasion, you were pretty drunk. It was three in the morning and you'd just gotten back from a party. I'll spare you all the slurring and talking in circles you did, but one comment did stick with me.\" It's probably a testament to the shit I did and said back in college that this buildup didn't significantly narrow the field of memories of drunken nights chatting with Malcolm.\n\n\"What was that, Sir?\"\n\n\"If I can get my mouth on her cunt, there's not a woman alive I can't make cum.\"\n\n\"Oh! That night. That was a good one.\" Sam was tying Nicole in the same way, leaving a lot of slack and material free. Two and two clicked together in my head, and my heart beat faster. \"You're going to tie us together, right?\"\n\n\"Yes indeed,\" he gave me his hungry, wolfish smile. \"Confession time. Those efforts of yours to get me imagining you with somebody as sexy as yourself? They worked better than I let on.\"\n\n\"What!?\" I exclaimed, breaking the hushed tone of the conversation. \"You're just telling me this now, Sir?\"\n\n\"It seems as good a time as any,\" he said, amused.\n\n\"Why did you never say so before?\"\n\n\"At the time, I thought you were just bragging about your conquests, not trying to make me jealous. Besides, what kind of friend would I have been if I'd taking advantage of what you said while drunk?\"\n\n\"Damn your chivalry,\" I muttered. I was too horny to be surprised or, well, anything besides horny. \"Well then, Sir.\" I said, channeling the lusty voice I'd been using on Nicole all week. \"I'll be sure to eat her cunt hard enough to live up to four years of your fantasies.\"\n\n\"I'm sure you will,\" he ran his fingers though my hair affectionately. \"At least, I'm sure you will if we eventually let you.\"\n\n\"No fucking way! You wouldn't keep teasing\u2014\" He raised an eyebrow, and I corrected myself. \"Never mind, of course you would. Two weeks of teasing and denial would seem like the perfect time to keep teasing to you.\"\n\n\"In fairness to me, most of that teasing you're referring to was self-inflicted.\"\n\nSam had her arms draped around Nicole's shoulders from behind, speaking in her ear too. We couldn't hear what she was saying, but whatever it was had Nicole nearly hyperventilating. Malcolm followed Nicole's eyes, which were focused directly between my legs.\n\n\"I bet she's thinking about exactly the same thing as you,\" Malcolm said huskily. \"Imagining what you'll taste like when she gets her lips around your clit.\" Of course, that brought the image of red hair between my thighs, along with licking sounds and throbbing pleasure. I just groaned slightly and let myself sag a little into Malcolm's weight. He hugged me from behind and held me, nearly mirroring Sam and Nicole across from us, voice shifting slightly to the one he used to hypnotize me. His usually clean and proper language shifted to heavily erotic, describing scenarios he and Sam had thought about but decided against.\n\nIt was like when he'd hypnotized me using his GoneWildAudio voice actress friends. My heart beat faster as one image after the next flashed before my eyes. I imagined feeling a tongue like tingle across my clit as Malcolm painted a picture of me kneeling over Nicole's face, her mouth trapped beneath my pussy, furiously tonguing me as I tried to make Malcolm cum with my own mouth. Blood rushed to my nipples as Malcolm described clothespinning both our nipples and tying them together, making us back away from each other slowly until they ripped off of one of us.\n\nHe kept my attention flying all over my body, all over Nicole's body, both of our eyes going crazy trying to keep up. Her gaze was so intense, and it added to the tingling I felt wherever it went. My skin flushed, warmth inside me turning to heat, as pleasant thuds resonating through my core. Slowly, Sam and Malcolm inched us closer together until we stood just inches apart and they held on to our ropes to keep us separated. The closeness really dramatized the difference in our heights. Her eye level was closer to my breasts than my face.\n\n\"... But then I realized that we never get to play with another denial slut,\" Sam's raised her voice, her monolog transitioning seamlessly to include us.\n\n\"And it seemed a pity to squander the opportunity,\" Malcolm continued her thought.\n\n\"Which brings us to our first little game here tonight. You're going to have fun holding yourselves back,\" Sam bent down suddenly, then gave Nicole a little nudge, finally bringing us together! She also seemed to grow, suddenly gaining half a foot of height. Sam must have given her some kind of foot stool. I couldn't help it, despite the erotic mood, I burst out laughing.\n\n\"Yeah, yeah, yeah,\" Nicole giggled with me. \"I'm short and you're a giant.\"\n\n\"We were thinking of tying you both into a sixty-nine, but we were afraid it wouldn't work out.\"\n\n\"You were afraid it wouldn't work,\" Sam pointed out. \"I maintain they could figure out how to make it work.\"\n\n\"An experiment for another day,\" Malcolm passed the loose ropes on my arms around Nicole's body to Sam. \"For right now, we thought you'd like to get a little more acquainted.\"\n\nNicole's wide eyes gazed into mine, her passion and desire clear for me to see. As our Doms tied our arms around each other, basically forcing us into a tight hug, I shivered in excitement. Nicole felt so fucking sexy! Her body was lithe and fit, firm in some areas and distinctly femininely soft in others. It was amazing to feel her tits pressing into mine, their softness contrasting the firmness of her abs beneath them. Whatever Nicole was standing on brought her pussy right next to mine, her clitoral hood piercing nudging into me, setting my hips involuntarily rocking into her.\n\n\"Breath together,\" Malcolm told us. \"Both in now... and both out. In, together, out, together. Great. Keep doing it.\"\n\nIt took a few cycles, but synchronizing our breathing made me feel even more connected with her. Our chests expanded into each other, her body pressing into mine, warming me and enveloping me. Her hips lightly rocked into mine, her thighs pressed against mine, and her breath flowed across my lips.\n\nBut it wasn't just the two of us. We couldn't see them with our faces so close together, but I could feel Malcolm and Sam too, petting us and making adjustments. Sam brushed some of Nicole's hair out from between us and Malcolm traced his fingers over my back and ass, his body spooning into mine as he did. If I've ever described feeling surrounded during sex with Malcolm before, I didn't know what I was talking about. This was really being surrounded, and it was wonderfully disorienting.\n\nBreathe in, and out. Something worked between our thighs and seemed to get tied there. In and out. It was pressed right between our pussies, perfectly positioned for me to rub my clit against. Nicole made a little noise in her throat, and I knew she'd just felt the same thing. It had to be a vibrator -- it felt exactly like the head of my hitachi.\n\nSam mirrored Malcolm's motions on Nicole's ass, making her rock her hips a little more, pressing it into me harder and making me quiver in pleasure. Just knowing that we were rubbing our cunts on the same thing, our mounds pressed into each other, both our bodies tied in a tight embrace, had my heart pounding and my blood on fire!\n\nIt became more difficult as we got more excited, but we managed to maintain our rhythm. In and out, together, again and again. It almost felt like Nicole and I were one person together, submitting to one dominant with four arms. Then, Malcolm and Sam leaned into us and whispered in unison, \"kiss her.\"\n\nPanic suddenly flooded me. All the nervousness I'd thought was gone hit me at once. It was irrational, we were already basically rubbing our cunts together, but it felt like once I did this, that would be it. It wouldn't be just a sexy thought experiment anymore. I would have kissed somebody other than the man I was in love with. Nicole must have sensed something, because she held back, her eyes seeming to tell me that she understood and not to feel pressured.\n\nAnd just as suddenly, I felt Malcolm's hand gripping me firmly by his spot in my hair. The spot that made me feel supported and cared for as much as it made me feel submissive. He didn't say anything. He didn't have to. He just held me, and it was enough. I leaned slightly back into him and felt calmer. 'It's okay. It's really okay!'\n\nI was surprised by how softly Nicole kissed. I'd expected her to match her personality and dive right into my mouth. Later on, she'd say the same about me, and we'd laugh about how we kissed like two submissives who were too used to our Doms having their way with our mouths. Our lips met and slowly probed each other, our tongues only getting involved after a little while.\n\nIt's hard to describe the kiss because it wasn't confined to our mouths. It really involved the hand in my hair and body behind me, as well as whatever Sam was doing with Nicole.\n\nIt was so different than anything I'd ever done before, it almost made me dizzy. It was fun. Incredibly fun! The whole thing was exciting and thrilling! I mean, here I was, having bondage sex kissing this sexy minx I'd been dying to get my hands on for months! Of course it was amazing. Except, it wasn't anything like the excitement and thrill I got from kissing Malcolm. This felt much more like a roller coaster type thrill ride, not the emotional trips I went on with my lover.\n\nIt was exactly what I'd hoped it would be. Just physical fun with Nicole, and nothing more. Slowly, my weight shifted from backwards into Malcolm forward into Nicole.\n\nNicole held me close, still breathing through her nose in rhythm with me, her fingers softly stroking my back as her tongue followed mine slowly tasting her lips. She was still holding herself back. Still worried about me, she was only going at the pace I'd shown I was comfortable with, waiting for me. Despite how turned on she was, she was still giving me time to get my shit together. That, together with Malcolm's presence, made me feel safe. Like I'd done one of those trust exercises where you fall backwards and somebody catches you. I'd taken this plunge, and they'd both caught me.\n\nThe feeling of my trust and faith in them being rewarded was fantastic. It was such a little thing, just a pair of small gestures, but they meant the world to me. Of course, I already trusted both of them completely. I trusted Malcolm more than I trusted myself, and I was comfortable enough with Nicole to get tied up to her naked, but still. The feelings that raced through me, appreciation and gratitude, love and attraction, were wonderful.\n\nI smiled wide into Nicole's lips, breaking our kiss to rub our foreheads together and see her eyes. Her concern melted away quickly, replaced with a reflection of the surging lust I was feeling. \"Thank you,\" I whispered so softly that only she could hear, then I plunged between her lips again.\n\nThis kiss was completely different. It was instantly wild, with all the hunger of two teased and orgasm starved people. Nicole gasped softly, surprised by my urgency after how hesitant I'd been, but recovering quickly and battling my tongue for every millimeter of space between our mouths.\n\nThe vibrator -- I was right, it was a vibrator! -- tied between our legs sprang to life. There was a loud smacking sound, and I instinctively braced for the rush of sting, but instead I felt strong fingers spreading my pussy open and entering me. I signed into Nicole's mouth, absolutely loving the feeling of being filled up by Malcolm while my clit buzzed, at the same time that Nicole yelped.",
        "\"Pleasure for you first, my love,\" Malcolm said, my heart doing the thing it always did when he called me that.\n\n\"And a spanking for my Firefly,\" said Sam. She spanked Nicole again, harder, making her body jump against mine in a way that rubbed all our sensitive parts together and made mine even hotter. \"Get her to the edge and you'll swap places.\"\n\nNicole broke off kissing me just long enough to give Sam a \"Yes Mistress.\" We were tied pretty tightly together, there was barely any room for either of us to move, but Nicole managed to flex and slide enough to stimulate me. In between hard spanking sounds and her involuntary half excited half pained groans, she worked me over like we were grinding on a dance floor. Excited tingles blossomed all over my chest where her tits pressed into mine, bursting to intense pleasure whenever her nipples rubbed against mine. Her barbell piercings added a delightful little bit of sensation that was deliciously sexy.\n\nShe worked our cores together, coating the hitachi in both our wetness, humping into me at the same time Malcolm's finger fucking filled me. The hitachi must have been on the lowest setting possible, because it seemed to be the least intense of all the pleasures assaulting my senses. Nicole's tongue in my mouth, her arms wrapped around me, the way her abs tensed with each spank and her hips jerked, pressing her clit into mine, all the while Malcolm kept his tight grip in my hair and filled my cunt with his fingers. It quickly became so overwhelming, it was almost a relief when I realized my pussy was giving its telltale close-to-cumming clenches.\n\nFeeling that, Malcolm announced, \"She's close.\"\n\n\"Already?\" Sam sounded amused. \"You weren't kidding about her being wound up. I've barely gotten the chance to warm mine's ass up.\" Something about the loudness of her spanking and the groan Nicole gave made me doubt Sam's sincerity.\n\nMalcolm's first slap across my ass was enough to pull me right back from my impending orgasm. The stinging heat that came with it, toasting my skin and sending little tendrils down into my muscles, was actually kind of refreshing. Like I was coming awake after being drunk on pleasure. I hadn't realized how much noise we'd been making. Nicole's pussy made a very wet schlicking sound as it accepted her mistress's fingers, and she let out a matching lusty moan.\n\nAnother spank made me jump. Malcolm wasn't messing around! These hurt! My turn to get Nicole to the edge. Fortunately, I didn't have to guess what she liked. She'd already told me, in excruciating detail, how she loved getting smothered in dominance and sex like she had been during her performance at the party. What she hadn't told me, but I'd figured out for myself, was that she also loved being teased. That's something I had TONS of experience being on the receiving end of!\n\nSo, I did to her what Malcolm so often did to me. As he rained blows down on my ass and I struggled against the mountingly intense pain, I managed to get my bound hands into Nicole's hair and gripped her tightly, tilting her head back so our eyes met. She gasped slightly, rebelling against me, struggling to reach my lips. Pleasure flashed in her eyes and rippled across her face, and I enjoyed watching it for a second, holding her firmly despite her struggles.\n\nThen, I quickly leaned down and captured her earlobe in my mouth, licking it and then giving it a very soft nibble of teeth. Nicole jumped like she'd had an electric charge zapped through her! I swear her wet sounds got louder, and her breathing left our mutual rhythm as it turned ragged. She writhed against me, half giggling and half moaning as I nibbled at her clearly very sensitive ear, her hips taking on a life of their own as she fucked herself on her mistress's hand. I'd ended up close to Sam's face in this position, and she smiled approvingly at me. Sam meaningfully dropped her eyes a few inches to Nicole's neck, then she gave me a wink and a grin.\n\nBut before I could take advantage of her hint, Nicole was panting \"Edge, edge, edge!\" and I was suddenly on the receiving end of the pleasure train again, being fucked and kissed and surrounded by sensation.\n\nWe kept alternating, again and again, pleasure and pain, getting edged and getting spanked. It was like our orgasms were on some kind of weird seesaw scale. We rose towards cumming and fell away again, alternating in cycles, each rotation going faster than the last. It didn't take very long until even the minimum strength vibrations were enough to keep me close to the edge despite how intense Malcolm's smacks felt on my increasingly sore ass.\n\nEventually, Nicole didn't even make it to ten spanks before she got to the edge. Sam, looking distinctly pleased with herself, said, \"I think mine is getting a little too worked up.\"\n\nMalcolm stroked softly over my butt, his hands feeling like they were made of molten lava on my fiercely stinging skin as I fought to catch my breath. \"Mine is burning up too,\" he said, making me purr at his possessive words and touch.\n\n\"I bet my Firefly is redder back there.\"\n\nThe vibrations stopped, but Nicole and I kept right on grinding ourselves into it. It was as slick as if we'd used grease on it, and we were basically slipping right over it to hump each other. We were both so desperate to cum, the ache and frustration hurt more than the spanking! Heat radiated off her skin into me and her heart beat wildly against my chest. We smiled to each other in a dazed sort of way as Malcolm and Sam set to releasing us from the ropes, debating all the while which of us was the more thoroughly marked.\n\nUsually, when Malcolm undoes whatever bondage is on me, it's because our playtime is over. He does it gently, and it leads into aftercare cuddles. His hands on me now were gentle, undoing knots and passing segments back and forth to Sam to disentangle Nicole and myself, but they were distinctly more sexual than usual. He leaned into me, letting me feel his hard dick straining against his pants on my ass. His hands lingered over my skin, caressing the collar at my neck and tracing all the lines the ropes had bitten into me. The way he felt, so distinctly dominant and authoritative after so much Nicole, made me melt and lean back into him, grinding my hips backwards to feel how turned on I'd made him. It made my tender butt really fucking hurt! I don't think he's ever spanked me this hard before, but that did nothing to stop me wanting to feel his cock.\n\nNicole noticed my shifting attention and teased, \"Somebody's gone cock hungry on me.\"\n\nMalcolm laughed and pulled back. \"Don't worry, she's still yours for a little while.\"\n\n\"Hey, wait,\" I protested, trying to reach back to Malcolm, but still too tied up to do very much moving. \"Don't I get a say in that?\"\n\n\"No!\" Nicole and Malcolm both said together, Nicole clinging to me as our dominants pulled us apart again.\n\nMalcolm picked me up and easily carried me in his arms to the couch. I could have just walked, it was all of ten feet from where we'd been standing, but I guess that wouldn't have been enough in kinky character. The effect would have been perfect if he hadn't accidentally set me down on one of our playmates' cats, who hissed and scampered off somewhere.\n\n\"Yeah, Phedra is kind of a perv. She always likes to watch us,\" Sam said, quite casually considering she was in the process of adjusting the harnesses on her strap on cock. It was the kind that needed to be lined up just right with her clit, so Sam could feel pleasure while thrusting it on Nicole. Nicole was watching her mistress with what I'd have to guess is exactly the same expression I'd have worn if Malcolm were pulling his pants off to fuck me.\n\n\"Now who's the cock hungry one?\" I teased her.\n\nShe stuck her tongue out at me, \"still you!\"\n\n\"Be polite, Firefly,\" Sam said, suddenly menacingly towering over Nicole. She looked like she was about to say something else sassy, but Sam preempted her by roughly forcing her to her knees and marching her over to Malcolm and I.\n\nMalcolm, meanwhile, had been playing with my thighs in a deliciously teasing way. He spread my legs open just as Nicole arrived between them. It happened so fast, Nicole going from standing half the room away to her hands and knees with her face a foot from my pussy, that I couldn't do anything but stare as Nicole licked her lips and looked from her mistress to Malcolm questioningly.\n\n\"Well, what are you waiting for?\" Sam dropped to her knees behind Nicole, forcing her legs apart and lining the head of her strap on up with its target. She thrust forward, entering Nicole in one motion fast, deep. \"Eat her.\"\n\nNicole's eyes had clamped shut, and she panted as she tried to relax her muscles and accept her mistress's sudden very rough fucking. Sam reached down and rested her hand on the back of Nicole's head. In the split second before she was forced down on me, Nicole's smile was absolute zoned out pleasure.\n\nBut then it was my turn to screw my eyes shut and struggle to keep up. Whenever Malcolm goes down on me, he does it to play with me. He teases and pushes all my sensitive spots, treating me like a puppet he can manipulate into moaning and writhing by licking and sucking in the right spots. Nicole, on the other hand, ate my pussy with the clear single goal of making me cum as hard and as fast as she possibly could.\n\nMy clit expanded into her sucking mouth and throbbed hard against her tongue. After so much teasing, it felt like time slowed down, and I could feel each bump on her tongue running over me again and again as she licked up and down. It was just like I'd imagined. It was better than I'd imagined! Nicole's fiery red hair between my legs and her lively passion drove me wild with pleasure in ways that teasing dreams never could.\n\nAnd again, it was much different for me than anything I'd experienced before because I was so used to all the action of receiving oral sex coming from one person. While Nicole was pouring gas on the blaze in my pussy, Malcolm kept my focus from settling in one place for more than a second. He played with my hair, caressed my neck and collar, pulled me in for kisses, and smiled with obvious pleasure when I fired back at him by rubbing his cock through his pants.\n\n\"Now seems like a good time to mention,\" Sam's voice said at the corners of my awareness, \"that you're not allowed to cum unless she's cumming too.\"\n\nNicole's let out a soblike moan and immediately sped up, clearly desperate to get me over the edge. It felt amazing, the way she rocked forward into me with each of Sam's thrusts into her, almost like she was transmitting pleasure right from her cunt into mine. At the same time, though, beyond a certain intensity, more attention on my clit doesn't actually make me cum any faster. I like penetration, combined with my clit, to really make me explode.\n\nI was about to tell Nicole when Malcolm stopped me. \"Don't tell her,\" he whispered with his characteristic knowing smile. I must have looked as confused as I felt, because he explained, \"If she gets to the edge without you, you'll have to swap places, and I'm in the mood to fuck you right now. Besides, I told you, your orgasms belong to me. I fully intend to keep all of them.\"\n\nHe flexed his core as he spoke, his cock throbbing hard against my petting hand. That, on top of his words -- so possessive and assertive! -- had the complete opposite effect of making it easier to obey him. I felt myself squirm and my clit throb into Nicole's mouth, my pussy clenching and my blood pounding all through me.\n\n\"I know,\" he continued in the same low tone. \"I know, my love, but if it were easy, you would have nothing to show off for me.\"\n\nOf course. This was Malcolm, after all. The only one who loved challenging me more than I loved challenging myself. But for fucks sake, why did so many of his schemes involve me not cumming! Why couldn't he challenge me to cum as many times as possible, or something? 'Oh yeah, we did that. I had to safeword. Damnit!'\n\nAs per usual, being told I'm not allowed to cum makes me feel super submissive and makes it that much harder to avoid cumming. \"Damn you, Sir,\" I said, trying to sound like I was annoyed at not being allowed to explode all over Nicole's face after all. Of course, he didn't buy it for a second. He knew full well how thrilled I was that, even with three women fucking right in front of him, he only had eyes for me, and he wanted nothing more than to control, tease and dominate me.\n\nI wanted to show him the same thing. That, even while I was writhing and choking back moans from Nicole's tongue on my clit, I wanted to be his more than anything. That I wanted to be strong and impress him with my obedience more than anything. So, my eyes never leaving his, I ran my fingers through Nicole's hair and told her, \"I love penetration too.\"\n\nMalcolm's eyes went wide, then blazed as he understood. I wanted to make it as hard as possible for myself, to make my obedience to him as meaningful as possible.\n\nI love that look of his. The one that says I couldn't have turned him on any more if I'd tried. I was terribly pleased with myself for thinking of it for about two seconds before Nicole's fingers entered me. They slid into me, and I instantly realized I'd made a terrible mistake. They felt so good spreading me open, rubbing my insides and pressing into my muscles, I thought I was going to explode right there. My pussy squeezed down on her, feeding off her heat, clenching itself closer to cumming with each of her thrusts into me.\n\nBut before I could get into serious danger, though, Nicole was pulled off of me! I looked back in surprise to see Sam had pulled her upright, locking her arms around Nicole from behind, and her lips planted on Nicole's neck. Surprisingly, it was Sam that was shaking uncontrollably. She must have been cumming! Nicole looked as ragged as I felt. She clung to her mistresses' arms, just trying to hold on while Sam had her way with her.\n\n\"Saved by the bell,\" Malcolm said.\n\n\"I was fine, Sir.\" He lightly squeezed my sore ass, making me squeak. \"Allright, maybe it was a little reckless, but you loved it!\"\n\n\"Of course I did. It's you being you.\"\n\nWe both watched as Sam had her orgasmic fun with Nicole, squeezing her for all she was worth and thrusting her hips into her from behind. Slowly, her hips slowed, and a lethargic laziness came over her fevered movements. Seeing her made frustration scream through me, my clit throbbed and my pussy clenched, as though in denial that their stimulation was gone. Despite having played the tease and denial game with Malcolm for months, I almost never beg. By that point, though, I was beyond desperation. \"Sir, may I please, please cum this time?\" I said with as much dignity as I could manage.\n\n\"Yes, my love. You've made me very proud today, you deserve it.\" I beamed.\n\nThere was a deep red mark on Nicole's neck when Sam finally released her. \"That's going to take some creative dressing to cover,\" I said, pointing.\n\n\"My coworkers are very used to seeing me with scarves on,\" Nicole panted. \"Is it my turn yet?\"\n\nWe switched places, Sam cuddling into Nicole affectionately on the couch, in the closest thing I'd seen her to dropping her dominant exterior yet. I knelt, then settled myself between Nicole's legs.\n\nIt had been a while since I'd been up close and personal with a pussy, I wanted to take my time with her. Nicole wanted none of that, she was lifting her hips up to greet me, but I didn't let her. I settled my arms over her legs to weight her down, and let myself enjoy her.\n\nHer vertical clit hood piercing was new to me. I ran my tongue lightly over it, barely touching Nicole herself, enjoying the way she whimpered and her thighs shuddered trying to get herself to my tongue. Her scent filled my nose, musky and hot to match the desperation in her voice. Her piercing must have been rubbing against her clit itself, because whenever I shifted it, her core rippled in pleasure.\n\nWas this how Malcolm felt when he teased me? It was fun!\n\nBehind me, Malcolm had settled himself. It's one thing to feel him hard and straining in his pants, but it's quite another when his cock is free! He teased his head along my slit, separating my lips and pressing up against my clit, where he let himself throb against me. It was a second before I realized that I was doing the same thing with my hips that Nicole was doing with hers, straining back towards him for more pleasure, trying to get him inside of me.\n\nHe must have been really worked up too, because he barely teased me at all before entering me. He slipped into my pussy a little bit at a time, enjoying the way I squeeze my pelvic floor muscles to be as tight as possible as he presses into me. My whole body seemed to sigh as it was filled, filled so much more than my Nicole's tiny fingers, filled to the brim with Malcolm's cock that always seems to press perfectly into every sensitive nerve in my pussy. Somehow, no matter how hot I am, his cock always feels like it's burning up inside of me. I clenched down on him, trying to feel as much of him as I could, loving every thrust into me and throb against me.\n\nAnd as he gave me pleasure, I took mercy on Nicole and gave her some as well. If I hadn't been pinning her legs, I'm sure she would have crushed my head between her thighs when I sucked her clit into my mouth. I expected her clit ornament to taste metallic, but surprisingly, it didn't. Or if it did, it was nowhere near enough to compare to the flood of juice that was Nicole's cunt. I licked her, from the bottom of her slit slowly all the way through her lips and up over her clit, pressing myself into her as much as I could, loving her taste and smell and feel.\n\nI had to make her cum at the same time as I did, so I tried to mirror Malcolm's rhythm. As he sped up, so did I. As he got me close, I licked faster over her, flicking her piercing in a way that invariably got moans out of her. It was almost like Malcolm was controlling both of us, making us both perform at his pace.\n\nIn a perfect world, it would have lasted longer. We would have enjoyed a slow buildup to release and all three cum together. However, Nicole and I had been so close to cumming for so long, it was just beyond our control. After no more than a minute, Nicole's breaths came in progressively shallower gasps and her core tightened as her clit expanded in my mouth. As she gasped that she was cumming, and her clit burst excitedly against my tongue, Malcolm reached under me. Two circles around my clit was all it took. My eyes shut tight and my body did its absolute best to choke the life from his dick.\n\nHaving an orgasm after a long period of intense teasing is unlike anything else in the world. I always think I've had my most intense orgasm ever, only to be proven wrong a few weeks later when I get my next one. Trying to label one \"the most intense\" kind of loses meaning at some point. They all feel like that. There's this second right when I tip over the edge and realize I'm cumming that's like 'Oh shit' and then everything explodes. Every bit of teasing I've endured since my last orgasm gets condensed into a few seconds of off the charts intensity and bursts through me. My body gives up on trifles like breathing and thinking and concentrates on one purpose: experiencing every ounce of pleasure my pussy is giving it to the absolute fullest.\n\nAbove me, Nicole moaned and shuddered her way through her own orgasm. Behind and beneath me, Malcolm circled my clit and slowly thrust, saying \"good girl, good girl,\" again and again. In a perfect world, it might have lasted longer... but this still felt pretty fucking perfect anyway.\n\nSam said something about giving us some privacy, and she and Nicole went to their bedroom. Phedra the cat stayed behind, watching us curiously in a way that seemed hilarious to me. Malcolm made to settle onto the couch, probably to give me the aftercare spooning I loved so much, when I realized he still hadn't cum! He was still as hard as he'd been before fucking me. No. No way I was going to let that stand.",
        "So I repositioned him into a seated slouch and swung my legs up to straddle him.\n\n\"Honestly, Sir,\" I said. \"What kind of Dom are you if you're not going to make me get you off?\"\n\nHe draped his arms around my shoulders and gave me that puppet master look of his. \"The kind who knows his submissive doesn't need to be told.\"\n\nI smiled. \"You know me too well.\"\n\nOur sex before had been about me and my experience between Malcolm and Nicole. I made this about him. I rode him the way he liked, bringing myself up high on his dick to squeeze his sensitive spot with my entrance, before slowly taking him deep inside me again.\n\nWhile we fucked, I poured my heart out to him. How much I loved him, how thankful I was that I had him in my life, how amazing he made me feel and how grateful I was that he put in so much effort to make everything we did possible. I tried to describe that moment just before I kissed Nicole for the first time, when I was panicking, and his reassurance had saved me. I tried to describe, just in general, how much I needed his support in my life just to make me functional.\n\nI was babbling, it was hardly the type of dirty sex talk I'm pretty sure you're supposed to have while fucking, but it felt right to me. He held me close and squeezed me into his embrace before he came.\n\n\"I love you too,\" he said, and kept saying it, again and again as he pulsed his orgasm into me.\n\nI don't know how or why group sex made us both emotional and drew us together like that. To this day, I don't understand it. I've repeated the explanations Malcolm, Nicole and Sam use often enough, but they've never really captured what I feel in those moments afterwards. The moments when I hold Malcolm in my arms and know that I'm his and he's mine, and nothing will ever change that.\n\n-------------------\n\n\n\nThree weeks passed, and for Vivian, each of them brought her higher than the last. There was no secret to it, really. She just did what made her happy and forced herself to stop doing what didn't. She spent lots of time with her friends. She'd managed to coach Devyn's Overwatch skills up to gold league, and was seriously considering letting herself be bullied into following Devyn to the gym \"for some payback.\" She'd also followed Susan and Dean to a bunch of basketball watching get togethers. They had a group of friends who tried to watch a game at a different bar each week, and it was fun. It might have been better if the Knicks and Nets weren't quite so terrible, but at least Porzingis was exciting to watch!\n\nBut she'd also found herself enjoying her own company. It was calming, especially after a long day in the office, to get to zone out and watch other people.\n\nVivian's settled herself on her customary bench in Washington Square Park and took a deep, refreshing breath. It was much less crowded than normal, the clouds had looked ominously rainy all day, but there was still enough activity to keep her entertained. A group of kids tossed pretzels to pigeons near the fountain, scattering when a group of dogs sprinted past chasing frantically after a Frisbee. On the opposite side away from her, there was a crowd gathered around somebody juggling. He made it look effortless, but there were so many balls flying between his hands that Vivian couldn't figure out if there were seven, eight or nine of them.\n\nThere were a few artists scattered around, but the one she was looking for didn't seem to be there today. It was same artist she'd sat behind the first day in the park, and been semi-creeping on in the few weeks since. Without knowing his name, she thought of him simply as Charcoal because of his preferred drawing implements. He was hard to shadow because he moved around a lot, but Vivian really liked watching him create vivid images with nothing but basic shades of dark and light on paper.\n\nShe pulled out her three quarters knitted sweater, intent on finally finishing it today, and frowned slightly. It had originally been intended to be a warmer, winter type piece, but it had turned out a bit lighter than she'd intended. It could have been done ages ago, but she kept finding new changes she wanted to make so it would work better with more outfits.\n\n\"I like what you're doing with the ribbing,\" a masculine voice said from behind her, making Vivian jump out of her skin. She spun around quickly to find Charcoal smiling behind her.\n\n\"Erm\u2014what?\" Vivian stammered, trying to hide her surprise. Looking up at his attractive, charming smile, she was forced to admit that his art might not have been the only reason she'd been looking out for him. Or even the primary one.\n\n\"Your pattern with the ribbing,\" he pointed at the part she'd been about to start working on. \"I like the way it flows from the top while still being distinct from it.\"\n\n\"Oh -- um -- thanks?\" Vivian floundered, feeling like she'd been caught with her hand in the cookie jar.\n\n\"Of course! I never could manage to do something that complex myself. Whenever I tried to make something more complicated than a scarf, it just exploded in my hands.\"\n\nVivian felt her mouth drop. \"You knit?\" She asked, surprised that she could find herself even more surprised than she had been a second before. The conversation was only two exchanges old, and she was already completely messing it up!\n\n\"I've dabbled. I like to try a little bit of everything crafty that I can,\" he said, still smiling, and held out his hand. \"I'm David.\"\n\n\"Vivian,\" she grasped his hand and shook it, trying to project at least a little bit of firmness and confidence.\n\nWhich quickly left her when he asked, \"So I'm curious, were you ever going to introduce yourself, or would you have kept watching me from a distance forever? I tried catching your eye a few times, but you never seemed to notice.\"\n\nWell, that made three times in three exchanges she'd been thrown off her balance. At least it was consistent. Ah well, he probably assumed she was a crazy stalker anyway, might as well be honest. \"Um, probably. I mean, probably would have just kept watching. I'm terrible at introductions.\"\n\n\"Isn't everybody?\" He said, defying his own rhetorical suggestion by seeming disarmingly comfortable and relaxed. \"May I sit with you?\"\n\n\"You want to sit with me?\" Vivian asked before she could stop herself.\n\n\"Certainly! If you're going to be watching me anyway, I might as well give you a better view. Besides, I'd like to see what yours looks like when it's finished.\"\n\nHe pulled a large pad from the leather bag slung over his shoulder and set to work capturing the pigeons battling for pretzels with the jets of water from the fountain behind them. He seemed capable of maintaining a full conversation without slowing his hands at all, and Vivian found herself relaxing into it. David must have done more than dabble with knitting, because he kept asking her beyond beginner questions like how she made sure the measurements for the sweater matched her size and how she managed to make her alterations so seamlessly.\n\nA line of her knitting and a sketch in his pad at a time, hours passed and the conversation shifted. They swapped stories about coming to the city, finding friends and local favorite spots. Despite what she'd said before, she was very good at introduction conversations like this one. She'd had plenty of practice with them on Tinder dates. At least, her slut persona had. That had felt like acting, like she was performing a character on a stage. This was different. She wasn't wearing her slut mask of sexy clothes and makeup. This was her, Vivian the boring, literally with her grandma style knitting in her hands, and she was talking to a hot, confident and witty guy who was somehow genuinely interested in her! He laughed at her jokes and listened to what she said, and he wasn't just following some script to get into her pants!\n\nUnder the pretense of watching him draw, she cast an another appreciative look up at him. He wore the kind of jeans and short sleeved collared shirt that tried to look casual, but was actually very clean and rather dashing, especially the way it showed off his arms and hugged his fit figure. It was much nicer than what she'd worn, typical plain loose stuff designed to be overlooked. She almost regretted not wearing something nicer, but maybe that would have made being noticed by him feel less special.\n\nShe dragged her feet when it finally got too dark to continue working, not wanting to go.\n\n\"I'm really glad I sat with you, Vivian,\" he said, meeting her eyes and smiling his disarming smile.\n\n\"Yeah, me too.\"\n\n\"Would you like to do it again?\"\n\n\"Yeah! I'm here pretty often\u2014\"\n\n\"Actually, I had something different in mind. Tonight is bad for me, but if you'd like, I'd be really happy if you'd join me for dinner sometime.\"\n\nVivian exploded inside. She must have said something, because she and David exchanged phone numbers and made arrangements to meet at The Knickerbocker that Friday, but she had no idea what it was. She managed to stay coherent and keep her excitement inside just long enough for him to say goodbye before she had to let it out in text messages.\n\nVivian: I just got asked out to dinner!\n\nVivian: Me, Devyn! He noticed ME!\n\nVivian: without my whore paint on or anything\n\nDevyn: That's fucking awesome!\n\nDevyn: and your WHAT?\n\nVivian: Whore paint. It's the nickname I gave putting on makeup for dates. Like guys put on war paint to go to battle except\n\nVivian: well, you know\n\nDevyn: thats a new one for me lol\n\nDevyn: tell me about him!\n\nDevyn: tell me everything. NOW!\n\n \n"
    ],
    "authorname": "Lydra",
    "tags": [
        "bisexual",
        "consensual",
        "female submissive",
        "fsub",
        "group sex",
        "love",
        "male dominant",
        "mdom",
        "orgasm denial",
        "tease and denial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-05"
}