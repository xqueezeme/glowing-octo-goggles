{
    "title": "Bittersweet Irish Cream Ch. 02",
    "pages": [
        "Thank you for the love and the comments! Jack and Ethan are a slow burn, but it's coming! I actually have this whole story written out but I need to separate it into sections and chapters, and proofread it to be able to upload it here, so you will get pieces of it every few days. Keep commenting and don't forget to vote!\n\n~~~~~~~~~~~~~~~\n\nJack stopped by the Inn the next day to help Ethan with the fence and between the two of them they were able to finish it by dinner time. Ethan ordered pizza and they sat in the dining area and talked a bit. Jack realized they had not exchanged numbers the night before so they did so. When Jack got home he sent him a winky face emoji via text.\n\nEthan texted back: Thanks for helping me today. I appreciate it.\n\nJack texted: Anytime. You're picking up EJ tomorrow?\n\nEthan: Yup. I miss my little nugget so much.\n\nJack: Cool. If you ever want company to take that ride, just let me know.\n\nEthan: Slow down there kid, I don't know you like that. I don't just put anybody in my BMW.\n\nJack: Dude. It's an X5. You have a mom car.\n\nEthan: Shut the fuck up.\n\nJack: LOL :'D\n\nEthan: :P\n\nJack: Is that a tongue? You're soooo gay.\n\nEthan: :O *eggplant emoji*\n\nJack: LOL\n\nEthan: Good night, Jack.\n\nJack: Night E.\n\n~~~~~~\n\nThe following week, Jack stopped by every day to help out, but he ended up babysitting EJ which he didn't mind at all. After a full week of Jack coming around and Ethan giving him tasks, Jack said, \"You should just hire me part time.\"\n\nEthan scoffed. \"As what, my babysitter?\"\n\nJack feigned sadness. \"I do more than that around here. I literally cleaned your gutters yesterday.\"\n\nEthan liked the idea of having Jack around every day but played it cool. \"What about the warehouse?\"\n\n\"Henrietta is home with her fancy Management degree from Harvard, so she is going to take over running the warehouse. Honestly, I am happy to step aside.\"\n\nEthan said, \"OK. Facilities Management. Monday through Friday 1pm to 5pm, that's 20 hours a week.\"\n\nJack was delighted, he did not think Ethan would go for it that quickly. \"Yea? For real?\"\n\nEthan shrugged. \"Someone has to clean the toilets around here.\" He smiled.\n\nStacy who was within ear shot of the conversation laughed as well. Ethan said to her, \"Add Jack name to the system and show him the ropes. Jack, that's your immediate supervisor. Do what she tells you to do.\" He winked at her. Jack groaned and Stacy smiled slyly.\n\nJack started working for Ethan the following Monday, second week in June. He did whatever that was asked of him, from cleaning rooms, changing bed clothes, mowing the grass, grocery shopping and repairs around the Inn. But his favorite pastime was was keeping EJ occupied. If Ethan was on an important phone call, or going through the books or had to run an errand, he would put EJ in Jack's capable hands. And Jack would feed him, play games, sing nursery rhymes and rock him to sleep for naps. Ethan gave Jack access to the basement apartment so that EJ would be comfortable, but maybe he also wanted Jack in his space. A couple of times a week, Jack would hang out there after work with Ethan, and they would watch sports or Netflix shows.\n\nThe last week of June that EJ was with his grandparents, Ethan had Jack's friends, who were quickly becoming his friends too, hang out in his apartment every night with them, Henrietta and Brayden, Mina and Sam, Connor and Afia, Liam and June. They sat around, ate lots of take out and drank wine and beer. Ethan considered asking Jack to take the drive with him that Sunday to pick up EJ but at the last minute chickened out, still unsure of why Jack made him nervous sometimes when they were just friends.\n\nIn July, Jack and Ethan spent Independence Day together making a barbecue for the occupants of the Inn, then on Wincheck Pond with the rest of the town watching fireworks in the evening with EJ between them on the blanket. June teased Jack when he came home and said, \"For two people that are just friends, you two sure did look cozy.\"\n\nHe brushed her off. \"We're just friends, Junie. If there was something more, you know I would tell you.\" But Jack was slowly beginning to wonder himself.\n\nJack and Ethan continued to hang out at the Red Rock in his basement apartment, with or without their friends. Hanging out with others reminded Ethan that he used to be a fun guy and he let down his guard a bit more every day. But the moments when it was the two of them was just as nice, if not nicer. Ethan grew to really like Jack. He was definitely intelligent, thoughtful, and quick with his humor and comebacks.\n\nHe also had such a calming personality, very slow to overreact to pretty much anything, from broken pipes to EJ's incomprehensible crying at times. He had the patience of a saint. Everything had a bright side, a positive outlook and Ethan appreciated that. He also appreciated how easy on the eyes Jack was. Whenever his shirt rode up as he stretched for something Ethan admired his washboard abs. His body was fucking amazing, he thought every time he saw pieces of it, and the summer time allowed him to see more and more of it, which he liked a lot.\n\nJack saw Ethan's fun side as well as his serious side, and liked them both. When he was rolling around on the floor with EJ making him laugh or taking people's money playing pool or making snarky comments, his smile made Jack smile. And when he was going though the books, or repairing a door, his face screwed up tightly, brown hair that was a bit longer in the front falling over his right eye, Jack thought he was sexy. He imagined more than once that face over him while fucking. Then he would laugh the thoughts off or push them down. He had no intention of of turning this into anything more than what they had- a friendship, albeit a close one.\n\nOn the first Saturday in August with just the two of them hanging in his apartment, Jack asked Ethan, \"You say you are Catholic but you don't go to Mass. Why?\"\n\n\"Jack, I am gay and divorced. The Catholic Church does not want to see me come through those doors.\" He sighed.\n\nJack asked, \"Are you going for them or going for your own faith?\"\n\nEthan sighed again. \"I don't know. While thinking I was going to change one sin, the other sin happened.\"\n\n\"E, shut up about sins. You can't change who are. But have you ever just thought about getting it annulled? The church will understand why you got married, it was kind of under duress.\"\n\n\"I thought about it once, and it immediately bothered me. How could I say it never happened when the most important thing in the world came out of it?\" Ethan said seriously. Jack wanted to point out the conception happened way before the marriage, but Ethan wasn't ready to hear logic right now. Instead he tried a different angle.\n\n\"Okay. The divorce thing and communion gets tricky. But the gay part, I mean, I'm in there every Sunday, taking communion, getting my sins forgiven at confession weekly like everybody else. Because I am just like every body else. WE are like everybody else.\"\n\nJack paused, then asked, \"Are you out?\" He had been wanting to ask Ethan for a while now since all this time they had been hanging out with their friends, it had never come up.\n\nEthan paused, then said, \"Define, 'out.' \"\n\n\"Er...Okaaaay.\"\n\n\"I mean...my friends and family members all know,\" Ethan said. \"They were more shocked that I ended up marrying a woman. I don't broadcast it because my private life is private, but I won't deny it if I'm asked outright. But I'm also not hanging a rainbow flag outside of the B&amp;B.\"\n\nJack smirked. \"So, don't ask, don't tell?\"\n\n\"No, I'm not that bad. I'm just not introducing myself as Gay Ethan. I mean, you didn't tell me you were gay until I told you.\"\n\n\"But everyone in town knows I'm gay so you were going to find out anyway. And yea, well I wanted you to know you had an ally, so I told you myself.\"\n\n\"Right, you tell the people who matter when it matters.\"\n\nJack couldn't help it. \"So I matter to you?\" He smirked.\n\nEthan said, \"Shut up.\" His stomach flipped and he found himself smiling.\n\n\"Back to my original question,\" said Jack. \"Come to Mass with me tomorrow. Father O'Donnell knows I'm gay and I still get to partake in communion and get after church crumb cake.\"\n\nEthan shook his head. \"I don't know.\"\n\nJack asked, \"Is EJ baptized?\"\n\n\"Of course.\"\n\n\"Well it's my duty as the good Catholic to tell you as the bad Catholic that you are damning his sweet soul to purgatory unless you get that sweet face into Mass. And you can come too.\"\n\nEthan looked over at EJ playing with blocks, thoughtful. \"Ok, we'll go.\"\n\nJack clapped his hands. \"Great, I will come over at 7:45am and walk over with you guys.\"\n\n~~~~~\n\nEthan was ready on time with EJ in the stroller. He wore his best dark blue slacks, button down white shirt and a blue designer tie. He was highly annoyed that Jack showed up in blue jeans and a regular button down shirt. At his disapproving look, Jack laughed and said, \"Hey, it's you who has to impress Jesus, Mary and Joseph, not me.\"\n\nEthan was nervous walking over to St. Cecilia's Church, but Jack as usual in his calm way put him at ease by talking about random stuff. They came in and sat a few rows from the back together. Jack nodded at his family on the other side near the front, his uncle Henry and aunt Marie, Henrietta, Mina and June all took up one row. Stacy, who he assumed has the emergency front desk phone, and Liam along with a couple of others who he assumed were their family members, sat directly behind them. Stacy gave Ethan a thumbs up.\n\nBJ sauntered in late and sat in the row with Jack and Ethan. Ethan noticed pretty much the whole town was here. He wondered who were the Lutherans who went to the other church on the other side of town. He realized he did not see Brayden, which he rarely sees without Henrietta, and figured that's where he and his family were on a Sunday morning.\n\nEJ started stirring in Ethan's lap but Jack was ready with a toy to occupy his attention. Mass began, a combination of English and Latin, which he approved. It felt good, reminded him of St. Gabriel's in the Bronx. He did not get up for communion nor did Jack look to him to do so when he got up, which he appreciated. But other than that brief uncomfortable moment, everything else was great. Afterwards, instead of going out, everyone met downstairs and there was indeed crumb cake, which made him laugh out loud.\n\nHe shook hands with the other residents of Rockville, some he had only seen in passing. He also met other business owners who created a council to advocate at city hall for the needs of small businesses and was invited to their next meeting.\n\nHe met Stacy and Liam's parents who thanked him for giving their youngest children jobs and steady income. They had seven children total and the twins were the last to leave the nest. Jack introduced Ethan to his aunt and uncle who playfully told Ethan to keep him over at the Inn as much as he wanted. And everyone loved EJ. He ran around and enjoyed being picked up by everyone and ate everything.\n\nEthan met no nonsense Mrs. Rieger, who owns the daycare, Just In Time, and he learned that Jack worked there when he was in high school and stayed on until he got the sanitation job. And Ethan understood why Jack was so good with kids.\n\nShe asked why EJ wasn't in preschool. Ethan didn't have an answer, except that he wanted to keep EJ close. Mrs. Rieger said sternly, \"Unless you're planning on home schooling him, get him around other kids his age and let him learn properly and socialize with his own peer group. Even if it's just a few days a week, a few hours a week. I run a tight ship and the results are excellent. All my children are well taken care of, Jack can attest to that. Come over on Monday, do a tour and then decide.\" Ethan agreed.\n\nFather O'Donnell picked EJ up at one point and introduced himself to Ethan. \"I was wondering when you'd show up, the one who finally got Ian McKinley to leave town and head to Florida to be with his daughter and grandchildren. Father O'Donnell.\"\n\nHe shook Ethan's hand. \"Ethan Starling,\" he said shaking his hand back. \"Nice to meet you, Father. It's was a good Mass.\"\n\nFather O'Donnell smiled. \"Well I hope so, I've been doing it here for over 30 years.\" They talked a bit and then the subject of EJ's mother came up.\n\n\"We're not together anymore. We're...divorced.\"\n\nFather O'Donnell nonchalantly, \"Well that happens, doesn't it? I hope that's not why you stayed away from us here at St. Cecilia's.\"\n\n\"No. Well, maybe a little. I don't know. I've been through a lot.\"\n\n\"Well my door is always open if you ever want to talk about it. In or out of the confessional, your choice. In the meantime, don't be a stranger, come again.\"\n\n\"Thanks Father, I will.\" He handed EJ back to Ethan and went to greet other parishioners.\n\nJack came up from behind. \"So? You didn't burn up upon entry. Nobody threw stones at you for being an adulterer or being here without a wife. And Father O'Donnell didn't exercise the gay out of you at first sight. I think it's been a good day.\"\n\nEthan nudged his side with his free hand, then smiled. Jack then said, \"Have lunch with me and my family today. Liam and Stacy will be there. Brayden too.\" Ethan agreed with a simple head nod.\n\nJack's family plus Liam, Ethan and EJ in a stroller walked through Frazier's Orchard to the 3000 square foot farmhouse. Stacy went back to the Inn and said she will come over when the food is ready, between 1pm and 2pm. The women went right into the kitchen to begin making lunch, Mina talking EJ with him; the men sat in the den watching the game. Brayden showed up at 11:30am and he was right about Brayden being Lutheran. They talked about it for a bit until Jack let it slip that Ethan is a Yankees fan which started a friendly uproar.\n\nAt one point Liam disappeared and never returned. At 1pm Stacy arrived and Henrietta came in to tell them the food was ready so Ethan went to find a bathroom. He turned a corner to find Liam and June in a heavy make out session complete with petting private parts, and he's pretty sure she was getting fingered. They jumped apart.\n\nEthan immediately said, \"Sorry!\" He quickly walked back to the dining room, only then remembering he still had to pee. Liam came out first, then a few minutes later June came out and sat on the opposite side of the table from him next to Jack. Ethan avoided both of their eyes.\n\nLunch was baked chicken, pasta salad, regular salad and homemade biscuits. For dessert it was apple pie, baked fresh every Sunday like clockwork. Conversation flowed. They asked Ethan about his plans for the B&amp;B, Mina talked about her clincials at Providence Hospital and her BSN program, and Brayden joked about marrying Henrietta now that his girl is back in town although Ethan wasn't so sure it was a joke. They have been together since she was 17, officially, and he followed her to Boston for college. She stayed an extra couple of years for internships and getting her MBA at Harvard, while he moved back home and worked for his father, and they never actually broke up. Ethan wouldn't be surprised if he popped the question in the next month or so.\n\nEthan still had to pee but held it until the end and everyone started moving around. As he got up to head to the bathroom, June cornered him. \"Can we talk?\" She pulled him to the kitchen before he could answer, with Liam's eyes followed them. June closed the door and faced Ethan. \"You can't tell Jack. He will flip the fuck out if he knew Liam and were...hanging out. I mean, he still thinks I'm a virgin.\"\n\nEthan grew increasingly uncomfortable. \"Um...yea, none of my business so...yea, no.\"\n\nJune looked relieved. \"OK. Because I will tell him myself, when the time is right. We don't even know what this is to tell him. So we're just hanging out until I go back to school in two weeks. I can't do what Henrietta did, neither of us is interested in a long distance relationship. But for now, I have needs.\"\n\nEthan was officially uncomfortable and wanted this convo to end. \"He wont hear it from me, promise. We're good,\" he said, patting her on the head before heading out and really finding a bathroom.\n\nJack walked Ethan and EJ back to the Inn. \"Sooo, next Sunday we do it all again?\"\n\nEthan smiled. \"I wouldn't miss it for the world.\"\n\n~~~~~\n\nEthan and Jack where installing new light fixtures in the hallway in the east wing. Ethan had been working up the nerve to ask Jack all day, not sure why this made him so nervous. The worst Jack could say is no. With his back turned, he took a deep breath.\n\n\"Hey Jack, you feel like taking the ride with me to Greenwich tomorrow? To pick up EJ? I know you don't want to miss Mass and all so I get it if you can't.\"\n\nJack smiled, his back turned as well. \"Oh yea sure,\" he said coolly. \"I've never actually been to Greenwich before, just passed through. What time?\"\n\nEthan smiled. \"I leave her at 9am. It's about a two hour drive give or take with traffic. I usually spend the day with my parents then drive back in the evening.\"\n\n\"Cool, sounds like fun.\"\n\nTruthfully Jack has been waiting for an invite for a while now. Not in a romantic sort of way, he told himself, but a way to get to know him a little better, his life outside of of Rockville, his family. He wouldn't shy away from a relationship with him, but he knew Ethan didn't want one so he was satisfied with their bromance.\n\nJack showed up by 8:55am Sunday morning, in a white V neck t-shirt, light blue jeans and white Nikes. Ethan's stomach jolted when he saw him, even though Jack hadn't smiled yet. Jack was hot, no doubt about it, and today he just looked exceptional in the most basic outfit. Ethan had been admiring Jack's body all summer long: The curve of his biceps and triceps, his defined collar bone, his six pack. He was toned in all the right places, which Ethan liked a lot.\n\nEthan himself was more athletic built, though without a nearby gym he felt like he was starting to lose definition in his arms and abs. He suddenly felt insecure, like he wasn't good enough for Jack. He tried to brush those feelings away, it's not like they were dating, right?\n\nJack saw something in the way he looked at him but couldn't pin-point it. \"What?\" he asked.\n\n\"Nothing. You look.....clean.\"\n\nJack laughed. \"Well I did use soap today so...\"\n\nEthan turned to Stacy at the front desk. \"Hold down the fort for me, call me if anything comes up.\"\n\nHe handed her the keys. They got into his light grey BMW x5 and headed west. After about 20 minutes of silence, Jack synced his Bluetooth and started playing songs from his playlist, starting with the Red Hot Chili Peppers.\n\nEthan snorted. \"God, you are so white.\"\n\nJack laughed. \"You know, growing up in the whitest part of the Bronx does not make you any less white than I am.\"\n\n\"No but your taste in music certainly does.\"\n\nJack rolled his eyes and put on Ne-Yo. \"Better?\"\n\n\"Hell yea. You got the first ride, I got the next.\"\n\nEthan drove and Jack switched around the music. They talked a bit until Jack said, \"Let's play a game, A or B. Choose between two answers, first thought that comes to mind, no over thinking, no going back. Then the other answers the question, and you get to ask the next question. I want to see how alike we are.\"\n\nEthan said, \"Hmmm...OK. Give me an example though.\"\n\nJack asked, \"Red Sox or Yankees?\"\n\nEthan said, \"Yankees, bitch!\"\n\nJack laughed. \"Red Sox. OK your turn.\"\n\nEthan, \"Um, Christmas or New Years?\"\n\nJack, \"Christmas.\"\n\nEthan, \"New Years.\"\n\nJack, \"Apple or Android?\"\n\nEthan, \"Apple.\"\n\nJack, \"Android.\"\n\nEthan, \"Shit do we have anything in common?\"\n\nJack laughed. \"Your turn.\"\n\nEthan, \"um...big or small?\"\n\nJack \"Big.\"\n\nEthan, \"Big.\"\n\nJack, \"Hip-Hop or R&amp;B?\"",
        "Ethan, \"Hip-Hop.\"\n\nJack, \"R&amp;B.\"\n\nEthan, \"Tupac or Biggie?\"\n\nJack \"Tupac.\"\n\nEthan, \"Biggie.\"\n\nJack, \"Summer or Winter?\"\n\nEthan, \"Winter.\"\n\nJack, \"Winter.\"\n\nEthan, \"Black or White?\"\n\nJack paused. \"In terms of....\"\n\nEthan, \"I don't know, color, mood, the way you see the world.\"\n\nJack, \"OK. I would...I want to say white, but it's black. This world is full of darkness.\"\n\nEthan, \"I'm the opposite; a year ago I would have said black, but it's white now. It gets better.\"\n\nJack smiled at that. \"1 or 100?\"\n\nEthan, \"1\"\n\nJack, \"1.\"\n\nEthan, \"California Coast or Florida Coast?\"\n\nJack, \"I've never been to California.\"\n\nEthan, \"I've never been to Florida.\"\n\nJack, \"Then...California.\"\n\nEthan smiled. \"Florida.\"\n\nJack, \"Sunrise or Sunset?\"\n\nEthan, \"Sunrise.\"\n\nJack, \"Sunrise.\"\n\nEthan, \"Up or down?\"\n\nJack, \"Up.\"\n\nEthan, \"Up.\"\n\nJack, \"Top or Bottom?\"\n\nEthan paused. \"In terms of....\" Jack gave Ethan a sideways knowing look.\n\nEthan chuckled. \"Okaaaay. Top. But I don't mind being on the bottom. I can dominate from any position, especially from the bottom.\"\n\nJack laughed loudly, \"Say what!? You sir, have control issues.\"\n\nEthan laughed. \"Answer the question.\"\n\nJack said, \"Um...versatile. I'm pretty equal.\"\n\n\"Nope, this is your game, you have to choose.\"\n\n\"It would depend on the partner, honestly. If I'm with some dominating asshole with control issues-\" Jack poked Ethan on the side making him laugh, \"I'll be a bottom, no problem. But if I'm with someone who wants to let go, I can take over.\"\n\n\"You really don't have a preference?\" Ethan asked curiously.\n\n\"I really don't. I can come either way.\" He looked at Ethan with his sideways smile and winked.\n\nEthan's stomach jolted and his dick twitched, thankful for the jeans he was wearing. He quickly turned his eyes back to the road as to not reveal his deepest thoughts. He would give anything at this moment to pull the car over and test that theory but alas, he drove on.\n\nEthan's turn to ask, \"OK. Honest and true love but no sex, or mind blowing, toes curling, multiple orgasms, multiple times a day, but no love at all.\"\n\nJack hesitated, then said, \"Well since I'm doing the latter, I choose the former.\"\n\nEthan's heart sank and his eyes grew wide. \"You're...seeing someone?\"\n\n\"Seeing...is a bit of a stretch. It's more like, getting a need met when I need it.\"\n\n\"With who?\"\n\n\"Um...OK. Yosef. The manager at Shoprite.\"\n\nEthan scoffed. \"Get the fuck outta here. The Arab uptight dude that barely smiles?\" He thought of all the times he sent Jack to the store with a grocery list, wondering how many times he came back with his dick sucked and satiated. Ethan was annoyed now.\n\n\"Well he's not that uptight with me. But he is tight...\" He smiled.\n\nEthan said with more force than he intended, \"How the fuck did I not know this!?\"\n\nJack shrugged. \"You never asked. And nobody knows. Except June because we tell each other everything. And Liam because he's my best friend and we tell each other everything.\"\n\nNot everything, Ethan thought, as a fleeting image of them kissing a few weeks back popped in his head. Ethan didn't want to know but he wanted to know so he asked. \"So when was the last time?\"\n\n\"After my birthday gathering in April, I went over there.\"\n\nEthan's heart lifted just a bit. \"That was months ago, why so long?\"\n\nJack shrugged again.\"Just been busy. Working. Haven't really felt the need to.\" Jack didn't tell him the real reason -- Ethan. \"So anyway, right now I'd take the love.\"\n\nEthan blurted out, \"Well fuck, can I have the sex then?\" Jack busted out laughing as Ethan turned red with embarrassment of his outburst. He had to reverse course now!, he brain screamed at him. \"Nah,\" Ethan said coolly. \"Been there done that. I'd take the love too.\"\n\nA moment passed in silence. Jack asked, \"Boy or girl?\"\n\nEthan, \"Boy.\"\n\nJack, \"Girl.\"\n\nEthan, \"Pink or blue.\"\n\nJack asked, \"Not the same question?\"\n\nEthan, \"Not the same question.\"\n\nJack, \"Okay. Blue.\"\n\nEthan, \"Blue.\"\n\nJack, \"Pen or Pencil?\"\n\nEthan, \"Pen, for permanency.\"\n\nJack smiled. \"Pencil, for erasing mistakes and starting over.\"\n\nEthan smiled. \"River or lake?\"\n\nJack, \"Lake.\"\n\nEthan, \"Lake.\"\n\nJack, \"Left or Right?\"\n\nEthan, \"Left.\"\n\nJack, \"Left.\"\n\nEthan, \"Obama or Clinton?\"\n\nJack, \"Clinton.\"\n\nEthan, \"Fuck no. Obama!\"\n\nJack, \"Clinton is a proven leader.\"\n\nEthan, \"She's a corporate sheep in liberal clothing.\"\n\nJack, \"And Obama is inexperienced with no clue how he is going to lead the country.\"\n\nEthan, \"Did you read his book?\"\n\nJack, \"Yes. Both of them. Did you read hers?\"\n\nEthan, \"No, I know all I need to know abut the Clintons.\"\n\nJack, \"It has to be Hillary....\" and they continued to discuss politics.\n\nWhen they finally arrived Jack's mouth dropped open and he looked at Ethan. Ethan shook his head. \"Dude. Not my house. Not my money.\"\n\nThey entered a circular driveway of a Georgian English style brick home overlooking the peninsula, easily 7000 square feet. Ethan pulled around to the side of the detached garage and parked in front, then they walked around to the front of the home to ring the doorbell. Almost comically expected, a housekeeper wearing all black with a heavy Spanish accent opened the door.\n\n\"Mr. Ethan, Good morning. They are in the family room.\"\n\nEthan spoke to her in Spanish, \"Gracias Flur, \u00bfest\u00e1s lista para la mierda? (Thanks Flur. You ready for the bullshit?)\" Flur chuckled a bit, but did not respond.\n\nJack turned to him. \"You speak Spanish?\"\n\nEthan smiled. \"Un poco. Just enough to get me by.\"\n\nJack followed Ethan down the marbled floor hall to the last room on the left. She opened the double doors to a room of windows and sunlight. Toys of all kinds were scattered about. A mature blonde woman stood up from the nearest couch.\n\n\"Ethan, good to see you. We just saw your parents at Mass. You remember Mass don't you?\" Mallory Reedling liked to dig in how Ethan doesn't go to church anymore. Ethan didn't bother to correct her as she came over to kiss his cheek.\n\n\"Hello Mallory,\" he said.\n\nTim Reedling was in the chair in the corner reading the paper. \"Who's your friend?\" he asked accusingly.\n\n\"Good to see you, Tim. Pleasure as always. This is my friend, Jack.\"\n\nJack said, \"hello\" to both Mallory and Tim. Instead of acknowledging Jack, he said to Ethan, \"So you bought your boyfriend over to rub in our faces, huh?\"\n\nEthan pushed out air through his nose and said, \"Jack's not my boyfriend. We're just friends.\"\n\nJack said, \"It's true, I would know.\" He smiled.\n\nMallory laughed out loud. \"Oh Tim, stop. It's all water under the bridge now.\"\n\nEJ's ears perked up at the sound of Jack's voice. He got up from the living room floor and the toy he was playing with and said, \"Jack!\" He ran over to him. Jack picked him up and gave him a hug.\n\nEJ hung onto Jack's neck as Tim growled, \"Not the boyfriend huh?\"\n\n\"Not the boyfriend, Tim.\" He turned to Mallory, \"Has she been by to see him?\"\n\nMallory looked uncomfortable. \"Well, no. But she just started a new job and between that and therapy and her meetings it's hard for her to be here.\"\n\nEthan pushed out air through his nose again. \"That's not the arrangement. I'm happy for EJ to be here with you but the purpose of him being here a full week is so that she can spend time and actually parent her son. If she's not doing that, why am I doing this?\"\n\n\"Give her a break, she's doing the best she can,\" Tim said.\n\n\"Well her best is not good enough. She needs to do more. Do better. Or just give me full custody and then I can make arrangements for when she is available.\"\n\nTim growled again, \"Everything on your terms right? You just want to control her.\"\n\nEthan muttered, \"Well someone needs to give her structure because obviously....\"\n\nTim barked, \"What's that boy!?\"\n\n\"Nothing, sir. Is his bag ready? Flur, do you mind?\"\n\nFlur who was standing by the door anticipating her role said, \"Not at all.\" She left to retrieve his bag.\n\nMallory touched Ethan's shoulder. \"Just give her until next time, I'm sure we can get her to come down.\"\n\n\"Mallory, EJ hasn't laid eyes on his mother in two months. I'm not doing a third month of disappointment. Tell her if she wants to see her son, call me. Or better yet, come up and get him.\"\n\nHe turned around to leave and Jack followed still holding EJ. Tim yelled after him, \"You'll be violating a court order! I will call my lawyer.\"\n\n\"Not anymore than she has. Guess who the courts will side with this time.\"\n\nEthan met Flur at the front door with EJ's bag. He kissed her cheek as he took it from her. \"Gracias.\"\n\nShe said, \"de nada.\"\n\nThey got back in Ethan's car and drove another 15 minutes with EJ in his car seat. They came upon a much less grandiose home, a two story colonial. Again, Ethan parked along the side where the garage was, but this time they walked around to the back of the house, passed the gardens and the pool and came in through the kitchen french doors. His mother was sitting at the island with her back turned cutting up vegetables. EJ ran inside and grabbed her leg.\n\n\"Oh my goodness,\" Suzanne Starling exclaimed. \"Hi Little Ethan, mom-mom can't hug you right now but I will real soon OK? Go say hi to pop-pop.\"\n\nEJ sang, \"Okaaaay!\" He ran into the adjacent room.\n\nEthan came over and kissed her cheek and fluffed her hair. \"You highlighted.\"\n\n\"Oh I did that ages ago. You pay no attention to me,\" she said amusingly.\n\n\"Well it looks good today,\" he and smiled at her. She smiled back, noticing how relaxed he was today, then noticed Jack, standing there with his hands in his jean pockets.\n\nShe looked back at Ethan knowingly and asked, \"Who's your friend?\"\n\nEthan stepped back. \"Mom, this is Jack. He's a really good friend from Rockville. Jack, my mom Suzanne.\"\n\nJack said, \"It's nice to meet you.\"\n\nSuzanne did not answer, instead looked at her son again, then at Jack. She wiped her hands on a nearby dishtowel and walked over to shake his hand. After she did, she looked him up and down. \"You're adorable.\" She smiled.\n\nJack smiled widely despite himself and said, \"Thanks.\"\n\nSuzanne exclaimed, \"Oh my, are those dimples?\" She reached out and put her finger in one of them, making Jack blush and laugh harder.\n\n\"It's really nice to meet you Jack. Come meet Alan.\" She looked at Ethan again as she passed him. \"Hmmmmm....\" she said, smiling at him.\n\nEthan laughed. \"Stop it. We're just friends.\" She shrugged and walked to the front of the room, followed by Ethan and Jack. Alan was sitting in an armchair watching the Sunday News shows. \"Hey dad,\" Ethan said, and plopped in the armchair next to him, leg hanging over one of the arms of the chair.\n\n\"Hey Ethan, just in time.\" Alan said. He looked over at Jack quizzically and said, \"New boyfriend?\"\n\nJack started laughing. Ethan looked exasperated. \"Oh my God, why is everyone acting like I can't just have friends?\"\n\nAlan raised his hands up. \"Hey, I just asked a question, you're the one getting all worked up.\"\n\n\"Uh-huh. Are you trying to convince us or yourselves?\" Suzanne said, winking at Jack who laughed again.\n\nEthan shook his head. \"OK, for the fourth time in the last 30 minutes, Jack's not my boyfriend, we're just friends. Tell them, Jack.\"\n\n\"Not the boyfriend. Scouts honor,\" Jack said.\n\n\"See?\"\n\n\"Although there was that one moment we had...\" His voice trailed off.\n\nEthan looked at him alarmed. \"The fuck are you doing?\"\n\nJack busted out laughing again and so did both of his parents. Then EJ laughed and soon they were all laughing.\n\nHe sat down on the couch and Suzanne sat on the armrest of her husband's chair. \"Don't feel bad,\" he said. \"I had the same conversation with my family after you came over that first Sunday.\"\n\n\"Oh your family does Sunday dinner?\" Suzanne asked.\n\n\"More like a Sunday heavy late lunch, early dinner thing, right after Mass.\"\n\n\"Well you should tell Ethan he's not allowed to come over unless he actually goes to Mass,\" Alan said.\n\n\"Good thing he's going then,\" said Jack and smiled.\n\nAlan and Suzanne looked at each other, than Suzanne asked her son, \"You've gone back to Mass?\"\n\n\"Yea..the last three Sundays at least,\" he said nonchalantly. \"Jack kind of persuaded me to go. And it's been fine. You'd like Father O'Donnell, he's a real down to earth guy.\"\n\nSuzanne turned to Jack. \"Thank you for that. Boyfriend or not, you're good for Ethan to be around.\" She stood up. \"You boys hungry from your road trip? I'll make some quick BLT's for you.\"\n\nSuzanne served them lunch then went back to making Sunday dinner. Alan watched the news with Ethan and Jack, complaining about the state of affairs. By 2pm Suzanne came out of the kitchen. \"I'm going to dip in the pool. Anyone else wants to join me? Little Ethan would you like to swim with mom-mom?\"\n\nEJ yelled, \"yay!\"\n\nShe turned to Jack. \"Jack we have extra swim trunks in the pool shed if you want to join us.\"\n\nJack said, \"Sure!\" He followed Suzanne to the back of the house with EJ in tow.\n\nEthan talked with his father a bit about the Inn and where they were financially. Then he went out to the pool. It was 90 degrees outside in the late August month and a perfect swim day. His mother was swimming laps on the far side of the pool. EJ was in floaters with Jack on the shallow end who was teaching him how to swim.\n\nEthan loved how good Jack was with EJ. He found himself admiring Jack's physic now that he was completed unobstructed by clothes. What an amazing body he had, no body fat, just lean and fit, a perfect runner's body. He also found himself thinking about his mother commenting on how adorable Jack is. Ethan agreed. He was pretty much the perfect package, inside and out. But Jack made no indication that he wanted this to go any further than friendship, so he left it alone.\n\nJack caught Ethan looking at him and teased, \"Stop staring at your Not Boyfriend.\"\n\nEthan laughed. \"I was just thinking about how good you are with EJ.\" Which wasn't a lie.\n\n\"He's cool little dude. Just like his dad.\" He smiled. Those fucking dimples. Those green eyes that sparkled in the sunlight. Ethan was starting to think he was in trouble. He tore his eyes away, took his shirt off and went to find swim trunks to join them in the pool. He went to the far end and jumped in. The cool water felt good in his skin. He started swimming with his mother doing laps.\n\nJack, who was playing with EJ,AS got distracted watching Ethan swim back and forth. He was long and muscular, even his back muscles were defined, down to his strong calves. Jack had a fleeting image of seeing that same back flex and curve in front of him as he was thrusting from behind, and his dick twitched. Shit, he thought. He pushed the thoughts of sex with Ethan down, as usual and turned away. He put EJ in the round floater tube made for toddlers and stretched out to float in the water face up.\n\nEthan swam over and Jack's eyes were closed. \"What's up? You OK?\"\n\nJack murmured, \"Um-hum.\" He was afraid that if he looked at Ethan his eyes would betray him and expose his feelings. Ethan watched Jack float for a minute then flipped his leg over and Jack fell over face down into the water. Ethan swam away and laughed as Jack reached the surface pretending to scowl.\n\nAfter two hours or so, they showered, changed back into their clothes and had dinner with Ethan's parents. Afterwards, Ethan took Jack on a tour of the house and the grounds and they talked about his brother in California, his wife Rebecca and their two kids. They were standing by the back fence under the tree when his phone rang. Ethan looked at it, then put it back in his pocket.\n\n\"That was mysterious. You can answer it if you want. Or was that the real boyfriend you never told me about?\" Jack asked. The sun was setting and the light hit Ethan in a way where his light brown eyes looked almost golden.\n\nEthan looked at him. \"I'm not fucking anybody.\" He held his gaze, hypnotizing Jack and Jack had to looked away first. \"It's just Carlos, my best friend. He knows I'm here. Sometimes he comes up to meet me and we hang out for a bit.\"\n\n\"So why didn't you invite him up to hang out with us?\" Jack asked.\n\n\"Nah. Not today.\" Today Ethan just wanted to be with Jack. And Jack smiled internally knowing that Ethan wanted his company alone. They talked a bit more about Ethan's friends in the New York that he rarely gets to see since he moved out to Rhode Island.\n\nThey got back on the road by 8pm with his parents making Ethan promise to bring Jack back. Jack drove with Ethan behind the music as they agreed. Ethan choose a 90's R&amp;B Pandora station since he knows now that Jack likes it. They were mostly quiet on the way home, and EJ fell asleep quickly. Song after song played making them both feel like the universe was trying to tell them something.\n\nChemistry was crazy from the get-go/Neither one of us knew why\n\nWe didn't build nothing overnight 'cause/ a love like this takes some time...\n\nJack was thoughtful. For some reason it really bothered him how insistent Ethan was in telling everyone that he wasn't his boyfriend. Jack knows he's not the boyfriend. Ethan knows he's not the boyfriend. But shit, he made it sound like they could never be more than friends, ever. He knew he cared about Ethan, but he didn't realize how much he cared until today. He had to figure out a way to either pull back or make these feelings go away. The last thing he wanted to do was pine for someone who would never see him as 6more than just a friend.\n\nAnd if I ever (ever fall) in love again/I will be sure that the lady is a friend...\n\nEthan was thoughtful as well. He knew he liked Jack and he was definitely physically attracted to him. He just didn't know what to do with those feelings. If he made a move he could be rejected as Jack seems pretty content with just their friendship. Or if they did start something and it ended badly, he would then lose a really great friend and so would EJ. He couldn't risk it. It was easier for him to just fantasize about him rather than act on it. And so he did.\n\nLike a moth to a flame burned by the fire/My love is blind; Can't you see my desire?\n\nHe closed his eyes and visualized taking Jack from behind nice and slow, long, deep strokes. Jack's normal voice was pretty even toned with low pitches, so he alternated imaging Jack moaning low and moaning high. He saw himself grabbing Jack by his bedhead hair and licking his neck as he buried his dick in deeper and deeper. It was so real he almost reached out and touched Jack whose hand was on the armrest between them. Ethan's eyes flew open, he was breathing a little too hard. He glanced at Jack who was concentrating on the road. Ethan leaned back and smiled to himself. He doesn't typically jerk off, but he just might tonight.\n\n~~~~~\n\nEthan texted Jack: Thanks for taking the ride with me today. I had fun.\n\nJack texted back: Sure, anytime. I had fun too. Your family is cool.\n\nEthan texted: It's just that, I don't have a lot of friends. I have the same circle of friends I've had since I was a kid and I keep it small for a reason. I just wanted you to know I value our friendship, a lot.\n\nJack texted: I know you do, E. I do too.\n\nEthan: You've become someone I can talk to about anything and I know I won't get judged. I don't let a lot of people in, for a lot of reasons....\n\nJack: :)\n\nEthan began to text: But you are someone-\n\nBut Jack interrupted with 10 violin emojis: Are you going to give a speech on how important I am to you? Just want to prepare myself for it.\n\n[Ethan's eyes narrowed at his phone] Ethan: You are such an asshole.\n\n[Jack laughed out loud] Jack: LOL\n\nJack: I'm glad we're friends too.\n\nEthan: I was just going to say that you are someone in my circle of friends now. I don't let a lot of people in, but I've let you in.",
        "Jack: I feel the same. Liam thinks you're trying to take his place as my best friend. I assured him the title is safe and you are still Not Mr. McKinley to me. :)\n\nEthan: Fuck you. I'm going to start calling you Not The Boyfriend the way you called me Not Mr. McKinley for like three months.\n\nJack: More like four. :)\n\nEthan: Asshole. I take it all back. I'm not letting you in my circle.\n\nJack: Too late. Your Not The Boyfriend is all the way in there already. Balls deep.\n\nEthan: Haha! Nobody gets balls deep in me, kid.\n\nJack: Except Jack. Jack is \"in\" there now. Can't you feel him?\n\nEthan: Haha! Like I would ever let you.\n\nJack: Please, I see the way you look at me. You'd let me.\n\nEthan: You cocky bastard.\n\nJack: C'mon. I'm already \"in\", you said so yourself.\n\nEthan: Hey, Not The Boyfriend, even the Boyfriends don't get \"in\" so easily.\n\nJack: That's because I'm Not The Boyfriend. But if I was, you'd let me slither right in. Admit it.\n\n[Jack had no idea what had come over him. He has never actually flirted with Ethan before but just couldn't help himself tonight. Seeing Ethan start to write something, then stop, then start again and do this three more times made him panic a bit. He might have took it too far but it was too late now.\n\nEthan was trying to figure out how much of what Jack just said was playful banter and how much of it was real. He couldn't tell via text which made it harder. After a couple of minutes of writing something then erasing it, he decided to play it safe.]\n\nEthan: Haha, yeah right. The only thing you'll be sliding into is your fist. Go to bed, Jack.\n\nJack: LOL. I will soon. I'm just up. Restless.\n\nEthan: Well go call your fuck buddy Yosef and slither in over there.\n\n[Jack's face frowned at Ethan's message.] Jack: Yeah I think I might just do that tonight. ;)\n\n[Ethan's face frowned at Jack's message. He put the phone down next to him and stared at the ceiling. The idea of Jack fucking someone else made him irrationally upset. A part of him wanted to write back, \"or just slide in over here\" but not after he just told him how much he valued their friendship. He turned to his side and punched the empty pillow next to him. He had to figure out what he was going to do about these growing feelings for Jack, before they spilled over and ruined everything. He realized he never responded and picked up his phone again.]\n\nEthan: Have fun. Good night Jack.\n\n[Jack glared at the screen. Once again Ethan left little room for the possibility that they could evolve into something more. Did he really want him to fuck someone else tonight? The thought made him angry. He decided not to answer. He put the phone on his nightstand and turned over to go to bed.]\n\n~~~~~\n\nTwo weeks later on a Sunday during Mass Ethan's phone went off. He looked at it, a blocked number. Jack was sitting next to him, glanced as he felt the phone vibrate, then vibrate again. After the third ring, Ethan turned his phone off completely.\n\nAfter church, they gathered as usual with everyone else for almost an hour, then they walked to the Inn so Ethan and EJ could change for the afternoon at the farmhouse. EJ refused to get back in the stroller so Ethan held his hand while Jack pushed the empty stroller. Then EJ reached out for Jack's hand as well and they both held EJ's hands as they walked down the street. EJ started trying to swing between them, lifting up his legs every few steps so he can be carried and laughed his infectious laugh, making them laugh as well.\n\nEthan and Jack looked at each other over EJ's head and smiled as they swung him. Ethan's thought before his worlds came crashing together was how happy he was in this moment. And then he saw Trish standing in the middle of the sidewalk in front of the Inn with her arms folded.\n\nEthan slowed his walk and Jack felt the stall through EJ. He looked up at Ethan and asked, \"What's up?\" But Ethan was looking ahead, stone faced. He followed his gaze to the beautiful, leggy blonde in front of them, her face in a scowl. Jack caught on real quick to who she was.\n\nAs they got closer Ethan started shaking his head saying, \"I said call, and I would bring him to you.\"\n\n\"Actually you told my dad to tell me to come get him. I did call, you sent me to voicemail,\" Trish said.\n\n\"Oh, that was you calling me from a blocked number? Calling me while you are already here, not on your way? Baby, you know I don't play games.\"\n\n\"I'm not your fucking baby. And you know I will not be told what to do, especially by you.\"\n\nEthan stopped in front of her. \"You're not taking him today. I have plans.\"\n\nTrish looked at Jack and then back at him. \"With your shit packing boyfriend over here?\"\n\n\"Whoa!\" Jack said shockingly.\n\n\"Watch your fucking mouth,\" Ethan said hotly. \"And he's not my boyfriend.\"\n\n\"I don't give a shit who he is, I didn't come here for him or for you, I came here for my son so GIVE ME MY GOT DAMN SON!\" Her voice shrilled and people started noticing.\n\nEthan got loud as well. \"Get the fuck outta here, you're not taking him!\"\n\nA guy that was leaning on a nearby car came over. \"Hey buddy, lets be civil now, we just want-\"\n\nEthan exploded. \"WHO THE FUCK IS THIS GUY!?\"\n\n\"I'm Alonzo. I'm just a friend, like your friend over there,\" the guy said, pointing at Jack.\n\nEthan's voice rose again. \"Well friend, kindly stay the FUCK out of my business before I break my foot off IN YOUR ASS.\"\n\nJack had never seen Ethan so upset, his New York accent was real strong. Trish started screaming again about taking EJ and Jack noticed the boy standing there frozen in fear. He rounded to stand in front of Ethan, spoke calmly. \"E. Take it inside. Talk to her calmly. Please. For EJ.\"\n\nEthan looked into Jack's pleading eyes, then at his scared son, who was standing there holding onto both of their hands tightly. He nodded curtly. He went past Trish to open the door and said to her, \"Get your ass inside here, embarrassing me and shit. You too, Friend.\"\n\nShe walked through with an attitude, Alonzo followed, then Jack and EJ. Ethan locked the door behind him, and motioned for them to follow him to the dining area. When they got there, Trish said, \"Give me my son.\"\n\nEthan started calmly, \"Listen, right now-\"\n\nBut Trish cut him off by swinging her arms wildly, slapping him with every word: \"Give! Me! My! Fucking! Son!\"\n\nEthan lost his temper and he grabbed her by both of her arms and slammed her into the nearest wall. \"Stop hitting me you crazy bitch!\"\n\nEJ started crying and screaming loudly, which got everyone's attention. Ethan immediately let her go. Jack had heard and seen enough. He picked up EJ and hugged him tight, then went over to Ethan. \"Give me the key.\"\n\nTrish yelled, \"NO! My son stays right here.\"\n\nEthan also began to protest, \"Just leave him-\" and it infuriated Jack.\n\n\"NO FUCK THAT. EJ is NOT staying up here to see his parents fight like this. You want your son to be scarred for life? Because I don't. You two are fucking adults, act like it. Sit at the table and work it out, right here and right now! And in the meantime, I'm taking EJ downstairs, giving him a snack and going to make sure for the rest of the day he forgets that his parents just violently attacked each other now GIVE ME THE FUCKING KEY!\"\n\nEthan, stunned as he had never seen Jack angry before, reached into his pocket and gave Jack the key to the basement apartment. Jack took it and left without another word, with EJ holding his neck tightly. He took EJ downstairs and gave him peanut butter cookies and a juice box, then put Baby First TV on. EJ ate in complete silence on the couch.\n\nJack asked, \"You OK, EJ?\"\n\nEJ just looked up at him sadly. After he ate and drank, he crawled into Jack's lap, leaned his head on his chest and watched TV, eventually falling asleep.\n\n~~~~~\n\nWhen Jack left with EJ, Ethan walked to the other side of the room and stood against the wall, the table in between them. Trish ran her fingers through her hair roughly. \"Why did you move to this shit town?\" she asked.\n\n\"Because your son, our son, needed a fresh start after all we put him through.\"\n\nTrish rolled her eyes. \"He's fine.\"\n\n\"Yea? Did he look fine to you?\" Ethan said annoyed.\n\nTrish shrugged. \"If you would just give him to me...\"\n\n\"Why? He's been down to see you and you didn't want him then. For two months. And before that, you barely spent any time with him. I know, my mom told me.\"\n\n\"I've been really busy, OK? I'm eight months clean, I'm working, I'm just trying to put my life back together after you fucked it all up.\"\n\nEthan took a deep breath and exhaled. \"I didn't ruin your life. You know who I was, what I was, when you got pregnant. And you knew that despite that, I wanted to do right by you. I had every intention of staying with you and being faithful.\"\n\n\"But you didn't,\" Trish said bitterly.\n\n\"And I'm sorry. Again and again I am sorry. I never wanted to hurt you,\" Ethan said sincerely.\n\nTrish sighed and sat in the nearest chair. \"Well I wasn't the best wife anyway. And I was a shitty mom.\"\n\nEthan did not deny her correct assessment. He sat as well, across from her. \"Why do you want EJ now? What changed?\" he asked.\n\n\"My dad said-\"\n\nEthan felt his anger rise again. \"Are you serious!? I feel like the only reason you even wanted to keep this baby, let alone actually parent, is because your parents forced you to.\"\n\n\"And so what if that's true? What matters now is that I gave birth to him so I have to be his mom.\"\n\nEthan let a moment pass. Then said, \"But do you want to though? Because here's the thing: I want to be his dad. I love being his dad. I wake up every day and I can't wait to see him smile, hear his laugh. If you can't say the same, that your first waking thought and your last before sleep is Little Ethan, then stop forcing yourself to. Just give him to me full time, and I promise I will never keep you from him. You know I wouldn't.\"\n\n\"It's not that simple. My parents won't allow it.\"\n\n\"Trish, you are 25 fucking years old. Tell your mother and especially that asshole father of yours, to butt out of your fucking life. For once. Be exactly who you want to be. Listen, if you want to be a mom, then let's do it. Let's do the full custody thing for real. I will take him to you every two weeks and I take him every two weeks. Or weekdays versus weekends, whatever works for you. But if you don't, then just don't. EJ has me. I'm enough for him. I can parent him by myself.\"\n\nTrish ran her hands through her hair again. \"I just want to go back and start all over. It's not that I don't want to be his mom. It's more like... I can't.\" Her eyes welled up and she started crying while talking.\n\n\"Those first couple of months were like the worst of my life. I used because I couldn't handle how shitty I felt all the time because I couldn't be his mom the way he needed. I didn't want to hold him, I just wanted him to stop crying all the time. All the time. I couldn't take it. And you weren't there! It was me and this thing that hated me and made me hate myself more. I can't risk feeling that way again, I can't be alone with him. It's too much.\" She started sobbing.\n\nEthan leaned over and reached for her hand, she reached back and held it. Ethan said sincerely, \"I'm so sorry, Trish. I really, really am. I'm sorry that I got you pregnant. I'm sorry that I wasn't around to help you those first few months. I'm sorry that I instead of leaning toward you when we started having problems, I leaned toward someone else. I'm sorry I cheated on you. I fucked up, a lot. But I'm trying to be better, and that starts with making sure EJ has a good life here. And he does.\"\n\nShe sniffed. \"I can see that. He's well taken care of. And not just by you. It made me kind of jealous to see you three like that.\"\n\n\"Jack's been a good friend,\" Ethan said. She smiled. He smiled back. \"What?\"\n\n\"Nothing.\" She shook her head.\n\n\"What did you want to do with EJ today?\" Ethan asked, changing the subject.\n\nTrish shrugged. \"I don't know. I honestly didn't get that far.\" She laughed.\n\nEthan shook his head. \"OK, how about this weekend I bring EJ to wherever you are, and we plan something: a zoo trip; aquarium, a day in the park. And let me reintroduce you to your son. He's not that colicky baby anymore. He'll be three in a few months. He's a talking, thoughtful little person. I think you'll like him.\"\n\n\"OK,\" said Trish.\n\nEthan pushed on, \"So will you give him to me? Let me be his dad full time?\"\n\nTrish looked at him for a moment, then stood up. \"I'll call the lawyer and sign an affidavit. You can have him full time. You're better at this than I am.\"\n\nHoly shit, Ethan thought. His stomach was in knots, he could not believe that just happened. He stayed calm and said, \"Thank you, Patricia. Putting EJ first actually makes you a great mom, not a shitty one.\" She smiled widely at him.\n\nAlonzo asked, \"So are we headed back to Hartford?\" They both looked up, forgetting he was here.\n\nEthan turned back to Trish. \"Seriously, who the fuck is this guy?\"\n\n\"Alonzo has been a good friend to me,\" she said. \"We're working the program together.\"\n\nEthan's eyebrows went up but he didn't say anything more. \"You want to see EJ before you go?\"\n\nTrish thought a moment. \"No. I scared him, he won't come to me. Let's wait until Saturday.\"\n\n\"Okay.\"\n\nTrish looked around. \"Cute place you got here. Very...New Englandly.\"\n\nEthan smiled. \"Call before you come next time, mmkay?\"\n\nTrish rolled her eyes. \"Sure thing, EB.\" Ethan remembered when she used to call him EB for Ethan Baby and didn't respond.\n\n~~~~~\n\nEthan went downstairs. Jack was sitting on the couch cradling a sleeping EJ on his chest. Ethan sat on the couch next to him. Jack looked straight ahead at the TV, and asked, \"They left?\"\n\n\"Yes,\" Ethan said. Jack nodded, kept watching TV. He said, \"I'm sorry. About all of it. I shouldn't have lost my temper like that.\" Jack nodded again.\n\nThey sat in silence for a minute. Then Jack said, \"I'm going to go. You can come for the lunch-dinner later on once EJ wakes up from his nap.\"\n\nEthan felt his chest constrict a bit. \"Why?\"\n\n\"I just want to give you a chance to regroup. That was a lot just now. A lot.\" He finally looked at Ethan's face, who was crestfallen. \"I'm not mad at you or anything. We're fine. I just...need to go.\" Ethan didn't say anything. Then Jack slowly stood up holding EJ. \"I'm going to put him down, then head out.\"\n\nAs he walked out of the living room area, Ethan's chest squeezed tighter. He did not want Jack to go. But he also did not know how to say it without giving away how he felt about him.\n\nJack laid EJ down gently in the toddler bed. He was looking more and more like his dad every day. As he stroked his hair and thought about how much he cared for him, his mind and heart wandered to how much he cared for Ethan as well. Watching Trish put her hands on Ethan made his blood boil. Ethan and EJ were his to cherish, to protect, to love. But then he remembered that they weren't. EJ wasn't his son. Ethan wasn't his...anything. Ethan didn't want to be with him. And this shit was starting to hurt.\n\nJack had to get out of here.\n\nAfter a minute or so of trying to control his breathing, Ethan got up and walked to the room, stood outside of EJ's room door and watched them. Jack had put EJ face down on the toddler bed and was lightly brushing his hair with his fingers. Ethan said softly, \"You're so good with him. And he really likes you.\"\n\n\"Well, I like him too. He's a pretty special guy.\" Jack paused. \"As are you.\"\n\nJack stood up and looked at Ethan and gave him a small smile, holding his gaze a little longer than he intended. Ethan saw it in Jack's eyes and it dawned on him like someone just threw cold water on his face. Every nerve in his body was screaming at him: Jack had feelings for him! Jack Frazier likes him! Like, really likes him, likes him! Holy shit!\n\nHis heart started pounding so hard he just knew Jack could hear it. But Jack made no acknowledgment, simply left the room and tried to walk past Ethan. Ethan instinctively grabbed Jack gently at the topmost part of his bicep, and slowly trailed his hand down Jack's arm, letting his thumb caress and stroke his soft skin all the way.\n\nJack stopped breathing as he watched Ethan's hand go all the way down his arm slowly to his hand, Ethan's fingers resting on his, Ethan's thumb rubbing his wrist. It seemed like it lasted an eternity when in actuality is was about ten seconds total. But in those ten seconds Jack felt and saw all he needed to see and feel.\n\nHe had two choices, either talk about what was happening between them, or act first, talk later. He opted for the latter. Go big or go home, that's what Mina would say.\n\nHe looked up at Ethan and before Ethan could talk he leaned over and kissed him, pressing his lips to Ethan's. He pulled his face back, reached up with the hand that Ethan wasn't holding, grabbed him by the back of his neck pulling his face toward him and kissed him again.\n\nEthan got over the initial shock of Jack's kisses quickly, and by the time Jack leaned in for a third kiss, he grabbed Jack by his waist with both hands and pulled him close, and opened his mouth to pull Jack's bottom lip with his top one, then stuck his tongue in Jack's mouth. Jack pushed Ethan back with his body until they were up against the wall.\n\nThey kissed urgently, passionately, tongues in a battle to see who could stay in the other's mouth longer, both of Jack's hands around the nape of Ethan's neck, fingers in his hair wanting to explore further south so badly, but knowing that will come. Ethan's hands had less restraint, now palming Jack's ass, pushing their groins against each other as they felt their erections grow. They kissed for minutes, hours, days, centuries it felt like, sucking on lips and tasting each other's tongue. Jack came up for air first. He looked at Ethan, still rubbing the nape of his neck.\n\n\"Took you long enough,\" Jack said breathlessly.\n\n\"I know! I'm such an idiot. How could I not see it all this time? You're amazing. And you've been my anchor, my everything from the very beginning. The second most important thing in my life right now. I'm such an idiot.\" He smiled. Jack smiled as well. They kissed again, softly, less urgently. Ethan asked, \"So. What now?\"\n\nJack chuckled. \"I don't know. Considering we just spent the last couple of months telling everyone how I'm not the boyfriend.\" They laughed.\n\nThen Ethan said seriously, \"Unless. You want to change that. No longer...not be my boyfriend.\" His heart pounded again while Jack's heart leaped.\n\nJack said coolly, \"I wouldn't mind not, not being your boyfriend.\"\n\nEthan smiled widely. \"Yea? Okay!\"\n\nJack said, \"Okay.\" He smiled and Ethan smiled wider, then laughed.\n\n\"Just like that huh?\" Ethan asked.\n\nJack said, \"Yup, just like that.\" He leaned over for another kiss.\n\nIt was like they had been kissing the whole time, as perfectly as they lips fit together, synchronized their tongues in and out of each other's mouth. Ethan pulled away first at a lost of what to do, except to keep kissing which he was fine with that. But he thought they should talk more, about what it all means. \"So now what do we do?\" he asked.\n\nJack stepped back from him. He took Ethan's hand and led him off the wall in the hallway toward his bedroom."
    ],
    "authorname": "Kabba118",
    "tags": [
        "bromance",
        "gay drama",
        "gay love",
        "gay romance",
        "mlm",
        "romantic",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/bittersweet-irish-cream-ch-02"
}