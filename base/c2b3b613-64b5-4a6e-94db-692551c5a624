{
    "title": "Ryan Ch. 09",
    "pages": [
        "Ryan was in his office when he got the call. \n\nWhen he saw Crystal's name on the caller ID, he got a tingling sensation on the back of his neck. \n\n\"What's wrong, Crystal?\" he asked before she could say anything.\n\nHe could tell she was crying and felt his chest tighten.\n\n\"Is it Dani?\" Ryan prompted, already feeling the first tentacles of fear. \n\n\"Yes... she ....she was attacked. I'm at Tampa General Hospital. She's unconscious, Ryan,\" she cried.\n\nForcing himself to stay calm Ryan said, \"I'm leaving right now, I'll be there soon,\" and hung up without waiting for a response. \n\nShouting to Dave that he was in charge, Ryan headed out of the door. On the way to his car, he called Micah.\n\n\"Yeah, Ryan, what's up?\" Micah answered.\n\nBreathing in deeply, Ryan said, \"Dani's been attacked. She's at Tampa General. I'm on my way there now.\"\n\n\"How is she?\" Micah asked anxiously.\n\n\"She's unconscious, that's all I know.\" \n\nThen in a strained voice, \"Micah, I can't lose her.\" \n\n\"I won't say don't worry, Ryan. All we can do is pray. I'll meet you at the hospital,\" he said.\n\n\"Thanks,\" Ryan said and hung up. \n\nWhen he got to the hospital he ran to the emergency room. Crystal was sitting with her head in her hands quietly sobbing. When she raised her head to wipe her eyes, she saw Ryan rushing toward her. Jumping to her feet, she ran to him and threw her arms around his neck. \n\n\"Oh, Ryan, I'm so scared. I don't know what's going on,\" she wailed. \n\nRyan hugged her for a moment, then took her hand and led her over to the nurse's station. \n\n\"We'd like to have an update on Danielle Carter's condition,\" he practically growled at the nurse.\n\nThe nurse recognized Crystal as the patient's sister. \n\n\"All right,\" the she said, \"I'll get that as soon as possible.\"\n\n\"Now,\" Ryan said in a quiet, but firm voice, his green gaze unwavering as he stared at the nurse.\n\n\"All right, have a seat and I'll call immediately and have one of the nurses come out and give you a report,\" she amended.\n\nNot budging, Ryan said, \"No, we'll wait right here until you call.\"\n\nGetting the message and the impression that Ryan could make a scene, she quickly dialed the nurse's station and requested that someone come out to give the family a report right away. She listened to the response and then said,\n\n\"I know, but this guy isn't going to wait long.\" \n\nShe glanced up to see Ryan's face harden, then dropped her eyes quickly and said to the person on the other end of the line, \"Ok, I'll let him know.\" \n\nShe hung up the receiver and addressed Ryan directly.\n\n\"A nurse will be out within five minutes.\"\n\nWhen she saw Ryan open his mouth to say something, she hurriedly added,\n\n\"They promised.\" \n\nResigned to wait a little longer, Ryan and Crystal returned to the waiting area where he asked her what she knew about the attack. She was about to tell him, when Micah rushed into the emergency room.\n\nRyan and Crystal stood up and Micah embraced them both, visibly shaken. \n\nThe emergency room which was relatively quiet when Crystal got there was starting to fill up, so they moved to the far end of the room where it was less congested. When they were seated Micah said,\n\n\"I called the rest of the family. They wanted to come, but I thought it best that they waited at home. I'll call and give them an update on Dani's condition. Have you found out anything yet?\"\n\n\"We should know something soon,\" Ryan said. \n\nHis face was drawn; his voice deceptively calm as he marshaled his emotions to keep from tearing through the E/R to find Dani. He refused to think of what could be happening. \n\n\"Crystal was about to tell me what she knew when you came in.\" \n\nBoth Ryan and Micah turned to Crystal who was having problems with her own emotions. \n\n\"I don't know a lot,\" she said with a sigh, \"but I'll tell you what the police told me.\"\n\n\"There was a couple coming back to their vehicle and saw the attack in progress. The guy attacking Dani must have heard them because he took off running. The man ran after him and yelled for him to stop, but he couldn't catch up to him. While his wife was assisting Dani, he called 911 who dispatched an ambulance and called the police. Soon after, I got the call.\" \n\nCrystal felt like she was going to cry again, but when she saw the dark expression on Ryan's face, she took a deep breath intent on continuing. But before she could, he asked a question, one that had been on her mind when she first heard about the attack.\n\n\"Was Dani...was she... sexually assaulted,\" he asked, the very words produced a burning sensation in his chest, his voice hoarse with emotion.\n\nMicah, sitting close to his brother, felt the tension in his body. He'd never seen Ryan like this before and felt helpless. \n\n\"I don't think so,\" Crystal answered. \"She still had her clothes on.\"\n\nRyan remembered that Dani wore a pant suit to work and sighed in relief.\n\n\"The police were here until a few minutes ago,\" Crystal continued. \"The hospital is supposed to notify them when Dani's able to talk to them. They think she might have a better description of the guy. They also said they'd call as soon as they got any information on the guy. \"\n\n\"How did they know to call you?\" Micah asked.\n\n\"Last year when Dani updated her emergency contact information, she put my name on the card since Mom and Dad had moved to Jacksonville. I work near here, so I rushed over. I got here just a little bit before the ambulance.\" \n\n\"What about your parents, have you called them?\" Ryan asked.\n\n\"Yes, they're on their way down. I got to see Dani just briefly,\" Crystal said choking back a sob as she remembered the blood on the side of her sister's face. \n\nRyan rubbed her back to soothe her. \n\nGetting under control again, she said, \"I don't know what would have happened if that couple hadn't been there.\" \n\n\"But, they were there,\" Micah reassured her, \"and we can thank God for that.\"\n\nRyan closed his eyes briefly giving a silent prayer for the couple's intervention. He'd have to find them later and thank them personally. But right now, he was getting impatient since the nurse had not arrived with an update on Dani's condition. He was just about to find out where the hell she was when he heard:\n\n\"Family member of Danielle Carter!\" \n\nThe small group walked over to the nurse who led them to an empty hallway off of the E/R to speak to them in private. \n\n\"How is she?\" Ryan asked impatiently, his green eyes unwavering. \n\nThe nursed eyed him curiously. He looked intense. She'd seen the ring on Dani's finger and thought he might be the fianc\u00e9. Whoever he was, he wasn't going to wait on ceremony, so she answered him directly. \n\n\"She's stable and in no immediate danger.\"\n\nAt her answer, Ryan lost some of the rigidity in his body and leaned against the wall.\n\nThen turning to Crystal she asked, \"Are you her sister?\"\n\nCrystal nodded. \n\n\"Miss Carter regained consciousness briefly and is asleep now. She has a concussion with an accompanying intracerebral hematoma which was caused by an injury to the small blood vessels in the brain due to trauma on the left side of her head. There was some internal bleeding along with slight swelling, but it was minimal and stopped on its own. There was no need for surgical intervention.\"\n\n\"There was a lot of blood,\" Crystal said in a whisper. \n\n\"There was a good amount of blood because there are many small blood vessels close to the surface of the skin in that area,\" the nurse said. \"That wasn't as much of a concern as the internal bleeding and swelling.\" \n\n\"As I said, she's stable now, but after all the tests are done, we'll be moving her to ICU for observation for a couple of days. She was only conscious long enough to tell us her throat hurts. There is some swelling in the area which could indicate that she was strangled.\"\n\n\"Fuck!\" Ryan barked.\n\nPulling himself off the wall, he paced back and forth along the hallway. He was seething with anger and just wanted to smash something; anything. So he hit the wall with the side of his fist. It wasn't enough to make a hole, but enough to release some of his tension. Micah watched his brother closely knowing that he needed to take the edge off his emotions. \n\nRyan took a deep breath, rolled his shoulders and slowly walked back to where the others stood.\n\n\"I'm sorry there wasn't a better way to tell you,\" the nurse said, sympathizing with him. \n\nRyan nodded, closed his eyes and took another deep breath.\n\nAfter he was under control, the nurse said, \"I don't suppose you know this, but Miss Carter is pregnant. The baby is doing fine,\" she added hastily when she saw the shocked expressions. \n\n\"Baby?\" Ryan said, stunned.\n\n\"Oh, my God,\" Crystal said equally stunned.\n\nMicah put his arm around Ryan's shoulder and whispered, \"Congratulation, Brother, you're going to be a great dad.\"\n\n\"I'm going to be a dad,\" Ryan echoed in disbelief. Then on the heels of that emotion he was angry again at the son of a bitch who attacked Dani. He could have killed her as well as their unborn child. \n\nTurning her attention to the nurse, Crystal asked, \"Dani's pregnant? Are you sure?\"\n\nSeeing the look on Ryan's face, the nurse didn't answer Crystal immediately. Instead she spoke to Ryan, \"I'm sorry to shock you like that, sir. Are you all right?\"\n\n\"Yeah,\" he said quietly, breathing deeply. \"I'm ok. Our baby is ok.\" \n\nThen he said, \"I need to see Dani.\" \n\n\"Soon, sir,\" the nurse said, \"I promise.\" \n\nTurning back to Crystal, she said, \"As for your question, yes, we're sure she's pregnant. She's five, maybe six weeks along. We still need to do a couple more tests. I'll come back to let you know when she's in her room and you can see her for a few minutes.\" \n\nNodding to Ryan, \"Congratulations,\" she said and headed back to her duties. \n\nRyan, still shocked, sat down on the bench in the hall with his brother and Crystal sitting on either side of him. \n\nWhile Crystal was lost in her own thoughts, he rolled over the idea of being a father in his head. This was unexpected, but he couldn't have been happier about Dani being pregnant. As for the asshole that attacked her, Ryan was going to make sure that dying would seem like a blessing to him. \n\nComing out of her reverie, Crystal asked, \"Wasn't she on the pill?\"\n\n\"Yes,\" Ryan said with a frown.\n\n\"She might have forgotten to take them while she was recovering from the sinus infection, but she didn't say anything about it.\"\n\n\"She didn't say anything to me and I think she would have if that had happened,\" Crystal said.\n\n\"The culprit was probably the antibiotics. They can reduce the effectiveness of the pill. Doctors don't always tell you that, but they should. I've been on antibiotics twice in three years and my doctor never said a thing. I found out on my own years ago.\" \n\n\"That can happen, seriously?\" Micah asked surprised.\n\n\"More than you think, that's where some of those surprise babies come from.\" \n\n\"I wonder if Dani knew she was pregnant,\" Ryan pondered.\n\n\"She might not have noticed any symptoms. I seriously doubt that she would have kept something that important from you,\" Crystal said. \n\n\"Damn, I'm going to be a dad,\" Ryan said again. \n\n\"I'm going to be an aunt. Expect me to spoil the kid rotten,\" Crystal said with the first signs of a smile. \n\n\"Oh,\" Micah interjected, \"I need to call the family. They are going to be more than surprised about the baby; Mom and Dad will be over the moon with another grand kid coming. \" \n\nMicah excused himself and went outside to make his call. After making it, he returned to the E/R with the family's congratulations on the baby and well wishes and prayers for Dani. \n\nIt was almost thirty minutes later when the nurse came back and said that Dani was in her room and they could see her for just a few minutes. \n\n*\n\nThey were somber as they entered the ICU. \n\nRyan walked to the head of the bed, leaned down and kissed Dani on the lips. His heart ached at the bandage on the side of head and the monitors that were attached to her. He had to tamp down his anger as he imagined her fear and helpless during the attack. \n\nCrystal sat in a chair on the other side of the bed, Micah stood behind her.\n\nRyan whispered to Dani telling her how much he loved her, how much he was looking forward to being a father. He was stroking the back of her hand when he realized that her engagement ring was missing.\n\n\"Where's her ring?\" he asked to no one in particular.\n\n\"I have it,\" Crystal said opening her purse.\n\n\"The nurse gave it to me when I saw Dani earlier.\"\n\nTaking it out of her purse, she gave Ryan the ring wrapped in tissue. He wanted to put it back on Dani's finger, but he knew that jewelry often disappeared in hospitals. He'd take it home and put it on her finger as soon as she got there.\n\nHe placed the ring in his pocket, leaned down and kissed her again. \n\nDani stirred, opening her eyes slowly.\n\n\"Ryan,\" she whispered. \n\nHer throat hurt, her vision was blurred and her eyes were blood shot. \n\n\"Hey, baby,\" he said with a smile, \"I'm so happy to see your pretty eyes.\"\n\n\"Did they get him?\" She asked hoarsely.\n\n\"Not yet,\" Ryan said stroking her cheek.\n\nDani's face scrunched as she fought hard to stay focus.\n\n\"Keith,\" she whispered so softly that only Ryan heard.\n\nShe was so tired, her head hurt and she was losing the battle to stay awake.\n\nRyan frowned and whispered, \"Who's Keith, baby?\"\n\nBut before Dani could answer she was asleep again. \n\nDani's parents arrived a few minutes later. After they saw Dani and said a prayer for her, they all went to the small waiting room down the hall where Michelle and Davis were filled in on what happened. Before leaving, they were allowed to look in on Dani one more time; she was still asleep. \n\nRyan, Crystal and Micah were parked in the covered garage with the Carters parked in the west parking lot. They parted ways outside the hospital amid hugs and words of comfort. Shortly afterward Micah took the garage steps to his vehicle on the second level.\n\nRyan became lost in his thoughts again. He knew answers would have to wait, but he was frustrated knowing there was nothing he could do at the moment. \n\nThey were nearing their vehicles when Crystal stopped in her tracks and said to him,\n\n\"I didn't want to say anything in front of my parents, but I think I know who attacked Dani.\"\n\n\"What?!\" Ryan said in surprise. \n\nShe looked at him and said, \"I heard you ask about Keith. I was mulling it over in my mind, but before I could say anything my parents arrived. I didn't want to upset them in case I was wrong.\" \n\n\"Do you know someone named Keith?\" he asked.\n\n\"The only Keith that I know is a guy Dani dated about three years ago, Keith Hall. Dani never said why they broke up. We all assumed that it was because he got a job opportunity and moved away. The move was to Gainesville and I haven't seen or heard about him since. I don't think Dani has either, but I can't be sure.\" she said. \n\n\"Was he someone who would want to hurt Dani? Was he violent?\" Ryan asked.\n\n\"Not that I know. Like I said, Dani didn't say much about him, even when they were dating. I think they dated maybe three months. She seemed to like him, but I don't know anything about what he was like. I wasn't living at home and I was going through a bad patch with my boyfriend at the time; I wasn't paying that much attention to what was happening with Dani. Damn, I wish I knew more,\" she sighed. \n\n\"Why would your parents be upset?\" Ryan wanted to know. \n\n\"Keith's mother and my Mom are good friends. It was through her that Dani met Keith. I just would rather be sure it was him before getting them upset about it.\" \n\nThey walked the rest of the way in silence, each deep in their own thoughts. \n\nWhen they reached Crystal's car Ryan said, \"I'll be back here early tomorrow morning, call me if you need anything in the meantime. Let me give you my cell phone number.\" \n\n\"Ok, thanks,\" she said. \n\nTaking out her phone she entered his number. Ryan then hugged her and said,\n\n\"Call me anytime; day or night.\"\n\nCrystal nodded and got into her car. Ryan watched her until she rolled out of the garage, and then preceded to his own car several spaces down. \n\n*\n\nBy the time Ryan got to his parents home, he found that all of his siblings as well as Matt were in attendance. They were talking, but paused when they saw him. Haley got up and walked over to him. She hugged him tightly and whispered how sorry she was about Dani. \n\nRyan looked exhausted. \n\n\"Everything is going to be all right, Ryan\" she comforted. \n\n\"I know, Haley. I just feel so damn frustrated that the bastard is running around loose,\" he sighed as he sat down. \n\n\"I know,\" she said, \"but we do have some good news; congratulations on the baby. He and Mallory are going to have a great time growing up together.\" \n\nAfter receiving congratulations and hugs all around, Ryan told them about his conversation with Crystal.\n\n\"I have some more news,\" he said as everyone looked at him expectantly. \n\n\"There's a good possibility that Dani knows the guy who attacked her.\" \n\n\"How does she know him?\" Dan asked, surprised.\n\n\"Dani whispered the name Keith. Crystal says that she only knows one Keith and that's the guy Dani dated a few years back. His name is Keith Hall.\"\n\nHaley gasped and everyone turned to her.\n\n\"What's the matter?\" Matt asked.\n\nHaley felt like she'd been kicked in the chest when she realized who attacked Dani. \n\nTaking a deep breath, she said, \"Keith Hall? I had almost forgotten about him. That's the name of the guy that Dani and I saw in the grocery store just before Thanksgiving. He gave me the creeps. Dani told me about him on the way over here.\"\n\n\"Why didn't she say anything to me about it?\" Ryan questioned.\n\n\"She said she would tell you after Thanksgiving,\" Haley answered. \"She said she didn't want him intruding on the holiday, but she'd tell you afterward. I guess with going back to work, the engagement and everything it must have slipped her mind.\" \n\n\"Did she tell you what happened between them?\" Ryan asked.\n\n\"Yes. She said that he'd been really nice when they started dating, then he gradually started getting possessive. They hadn't agreed to be exclusive and she'd told him from the beginning that he could date other people.\"\n\nSeeing the surprised faces around her, Haley continued. \n\n\"She said he had agreed, but apparently he was just saying that for her benefit. She kept seeing him because he pretended to accept what she said and his attitude did get better. Dani wasn't dating anyone else because she thought it seemed weird to be dating more than one guy at a time.\n\nRyan smiled to himself. That sounded like Dani.\n\n\"Anyway,\" Haley said, \"over a period of a few weeks, he started showing signs of possessiveness again. Dani stopped dating him after a particular incident.\"\n\nAfter telling them about the incident at the park, Haley went on.\n\n\"Dani let her family believe that they stopped dating because he moved away for a job. She didn't want things to be sour between her mom and her longtime friend, who was Keith's mother. She never saw him again, not until just before Thanksgiving.\"\n\n\"You said he gave you the creeps; how?\" Caleb asked.\n\nHaley told them about the incident in the store. \n\nDo you know if he'd ever been violent with Dani?\" Ryan asked.\n\n\"No, he never was. But he struck me as someone who could be. His expression changed so fast. One second he had this charming smile, the next...\" she just let the sentence trail off. \n\n\"Anyway,\" she offered, \"I think she just felt uncomfortable with him after a while and got out of the situation.\"\n\nRyan mulled over what Haley said. He wouldn't have thought that Dani had that kind of an experience with a man. But he did recall one conversation with her that he'd thought just came from curiosity. ",
        "\"If I had known I could have had Hall watched, but that's neither here or there now,\" he sighed. \"I don't think Dani knew that the guy could be such a nut job. Besides, he hadn't come near her in three years,\" Ryan said. \n\n\"Not that you know,\" Matt said quietly. \n\nRyan just stared at Matt, hearing the words echo in his head over and over again. \n\n* \n\nRyan was finding it difficult to sleep and decided to do something about it. Instead of staring at the ceiling thinking about things over which he had no control, he chose to call his contact in the sheriff's department. Zane Montgomery was head of the detective division and a long time friend. He considered calling in the morning because it was late, but he knew Zane wouldn't mind; the life of a detective wasn't one lived between 9 and 5 O'clock.\n\nPicking up the phone from the bedside table, he dialed Zane's cell phone. \n\n\"Montgomery.\" \n\n\"Zane, this is Ryan. I'm sorry to call so late, but I have a favor to ask.\"\n\nCatching the strained in Ryan's voice, Zane sat up, alert.\n\n\"What's up, Ryan?\" \n\nRyan went on to tell Zane everything he knew about the circumstances of the attack and Keith Hall.\n\nZane listened and took notes, asking questions as he saw the need. Under normal circumstances it would be a day or two before the file came through the detective division but he'd expedite the procedure if need be. He was on vacation, but assured Ryan that he would stop by the division in the morning. \n\n\"At least I have a name,\" Ryan said. \"It shouldn't be that hard to track the bastard down.\" \n\n\"Ryan, you can't go after this guy,\" Zane warned.\n\n\"You would not only be the prime suspect if anything happened to him, you would be the only suspect. As much as I would hate it, I would bring you in for questioning. Do you really want to put Dani through that?\"\n\nRyan gritted his teeth as the anger and frustration seep through his body. \n\nHe knew Zane was right. Although he'd like nothing better than to find Keith Hall and torture him before killing him, he couldn't hurt Dani. No matter how good it would make him feel in the moment, it would devastate her if he went to prison.\n\n\"I know,\" he said with a grimace. \"But I can take pleasure in thinking of the many ways I could make it happen. \n\nSighing, Zane said, \"We both can.\"\n\n\"I'll stay out of trouble,\" Ryan said grudgingly. \"I have a family to look after and I can't do that behind bars.\"\n\n\"It's for the best all around, Ryan. I'll let you know what I find out,\" Zane said. \n\nRyan thanked Zane before saying goodnight.\n\n*\n\nTurning over on his back, Ryan threw his arm over his head and sighed.\n\nIt's been months since he slept alone. He missed just hearing Dani breathe next to him. His bed, his home, he felt empty without her. He loved the way she snuggled against him and even in sleep she would caress his chest or arm. \n\nHe loved waking up next to her. She would sigh and groan softly as he coaxed her into consciousness with his kisses, his touch. Then she would take him into her body and they would both cry out as they shared the most sensual pleasure he'd ever known.\n\nThe feeling was mutual; he knew that even without the words. She was a part of him. How could he live without that, without her? As bad as it was, he knew things could have been much worse.\n\nHe thought of all their first times together gaining solace from his memories of the woman who completed his life. It was a long time before he drifted off to sleep with his last conscious thoughts being of the beach house where she promised to be his for the rest of their lives. \n\n* The next morning Ryan packed an overnight case with a couple of night gowns, a dressing robe and underwear for Dani. She would be in the hospital for at least a week and he thought she'd feel better in her own clothing. \n\nWhen he got to the hospital a little after eight, the nurse was taking Dani's vitals. Dani turned her head at the sound of his boots tapping on the floor. She smiled at him and whispered hi as he moved closer. Ryan's heart almost burst on seeing that smile. He softly returned the greeting and sat down as the nurse was finishing up. \n\nHe'd already stopped at the nurse's station to check on her condition. Crystal was thoughtful enough to put his name on the list of people who could be given updates. As he looked at Dani now he thought, \"One day I'll have the right without anyone's approval.\" He wanted that right sooner rather than later. \n\nThe nurse told him that Dani was in more pain today and he should expected to see some bruises on her throat. Her voice was hoarse, but there hadn't been any permanent damage. She also had some blurred vision and dizziness which would clear up in time. She was progressing as they'd hoped and in another day or two she would be moved to a regular room. Dani was sleeping a lot, but was waking up on her own. They just needed to keep a close eye on her for any complications and monitor the pain medication. \n\nRyan arranged for Dani to be placed in a private room. He wanted to make things as comfortable as possible for her while she recovered. Sharing a room meant that people would be in and out visiting the other patient and he rather that she not be bothered with that. \n\nWhen the nurse left, he pulled his chair closer to the bed, leaned over and kissed Dani on the lips and caressed her cheek. \n\n\"I love you so much,\" he whispered humbled by the breadth of his feelings. \n\n\"Love you, too,\" Dani whispered; her voice husky.\n\nRyan thought that living without her would be like diving into a deep dark hole, one that would swallow his soul and spit it out in bits and pieces. Just looking at her now made his heart ache.\n\n\"How are you feeling, sweetheart,\" he asked taking her hand in his.\n\n\"Happy about our baby,\" she said as she squeezed his hand. \n\n\"Glad you're mine.\" she added.\n\n\"You'll always be a part of me,\" Ryan averred.\n\n\"So will this little guy,\" he added, stroking her still flat belly.\n\n\"Little guy?\" \n\nHe answered with a grin, \"The next one can be a girl.\"\n\nDani caressed the side of his face noticing how tired he looked. She knew he was worried and angry at the man who did this to her, Keith. She should have told him about Keith, but she really forgot about him with everything that was going on.\n\n\"Ryan... about Keith,\" she started haltingly, she didn't want Ryan to think that she was keeping secrets from him. \n\n\"Shhh, sweetheart, you don't need to talk about him,\" he said. \n\n\"You probably shouldn't be talking at all. I spoke with Haley and Crystal, they filled me in. I passed the information on to Zane, but no one will be questioning you for a while. There will be time enough for that when you're stronger.\" \n\n\"Ok.\" she said with a sigh. She was still very tired and wasn't looking forward to talking to the police at all.\n\n\"Oh, I almost forgot,\" Ryan said. \"I bought a couple of gowns and underwear. Before you ask, it's not your Victoria's Secret stuff; it's some of the pre-Ryan things which you seem to have given up wearing.\"\n\n\"Good,\" she said with a small smile.\n\nRyan saw her eyes fluttering with the effort to stay awake.\n\n\"Close your eyes and rest, baby. I'll be here when you wake up,\" he promised.\n\nDani nodded then gave up the struggle to stay awake. \n\nIn less than a minute she was asleep. Ryan sat back in the chair and got as comfortable as he could. Closing his eyes, he decided to get some shut eye to make up for his restless night. \n\nIt was twenty minutes later when Dani's parents and her sister arrived. Upon seeing Ryan asleep in the chair, Michelle smiled, but left him undisturbed.\n\nRyan's family was able to see Dani later in the day. The hospitable ICU policy was somewhat liberal as they felt that the presence of family and friends could be a great help in recovery.\n\n* \n\nKeith Hall was back in Los Angeles hiding out at Walter Randle's Place. Of course Keith hadn't told him why he was back in town, but his childhood friend wasn't a fool. He hadn't seen Keith in over three years, now here he was out of the blue. It didn't take a genius to figure trouble wasn't far behind.\n\nWalter knew Keith better than most. Keith, although a smart guy, he had some issues, most having to do with his mother abandoning him. Of course, he'd had his dad, but like so many kids from broken homes, it didn't matter the parent you had, you always wanted and needed the one you didn't have. At least that's what Walter thought. \n\nWalter wasn't bad at deductive reasoning, but he really didn't know what Keith's relationship had been with his father. The fact that Keith rarely talked about the man should have been a clue. However, the things that Walter did know had come from Keith's own mouth.\n\nOne night when Keith was drunk out of his mind, he spilled his frustrations, insecurities and anger out to Walter. The weird thing was, the next morning he hadn't remembered a thing he'd said. Walter, not foolish enough to remind him, decided to let sleeping dogs lie. \n\nWalter offered Keith his sofa, but he didn't want to get involved in whatever he was running from. He wasn't going to ask him because the less he knew, the better it would be. They had a history, but three years was a long time and he didn't know what Keith had been up to in the interim. \n\nAs he stood in the kitchen drinking a glass of orange juice, he watched Keith stir on the sofa. Sitting up, Keith rubbed both hands down his face and grunted. He hung his head and sat with his forearms on his thighs and his hands hanging down between them.\n\nHe looked whipped. \n\n\"Good Morning,\" Walter said.\n\nKeith's head shot up, startled by the sound of Walter's voice.\n\n\"Morning, man,\" he mumbled. \n\nShaking his head, he whispered, \"Damn.\"\n\n\"You, Ok?\" Walter asked politely, but was hoping he wouldn't get any come to Jesus revelations.\n\n\"No, but I'll just have to deal with it,\" Keith groused.\n\nHe stood up, stretch and yawned before heading to the bathroom. \n\nWatching him walk away, Walter wondered if Keith would tell him what had happened. Even though he'd rather not know, he still thought of him as a friend and hated to see him busted up like he was.\n\nKeith walked back into the room rubbing his eyes. Walter thought he looked like he'd been crying. That was new. Even when he was pouring his heart out, drowning his feelings of abandonment in alcohol, he never cried. He'd been angry as hell, but he hadn't shed a tear. Now he was looking like hell, obviously broken up about something. Walter didn't know what to make of it. * Ryan was asleep when Dani woke up. She watched him remembering that as being one of her favorite pastimes. It felt odd waking up and not having him in bed with her. At home when she woke up in the middle of the night, she'd be in the safety of his arms.\n\nWatching him now, reminded her of the child she was carrying; a child that they would both nurture and love. For the first time she wondered what he or she would look like. Would it be a boy with Ryan's smile or a girl with her brown eyes? The only thing she knew was that she would love their child completely and unconditionally.\n\nIn the end, Dani couldn't stop herself; she reached out and touched Ryan's arm. Slowly, his beautiful green eyes fluttered opened. Upon seeing her, he smiled, sat up from his slouched position and leaned forward.\n\n\"Hi, baby,\" he said in a gruff voice. \n\nBut, before she could return the greeting, the nurse came in to take her vitals again.\n\nWhile she was attending to Dani, Ryan went to the bathroom. When he came out, the nurse was finishing up, but Dani was sleepy again. \n\nRyan sat back down and held her hand as he softly talked to her sleeping form and told her how much he loved and how lucky he was to have her in his life.\n\n* \n\nDani was awake when her parents and Crystal came in. Ryan greeted each of them with a hug. \n\n\"Will you be here for a while?\" he asked Dani's mother.\n\n\"Yes. I expect we'll be here for some time,\" Michelle answered. \n\n\"Good. I need to go down to the sheriff's office and I didn't want to leave Dani alone.\" \n\n\"You do what you need to do son, we'll be here.\" \n\nTurning back to Dani he said, \"I just want to have a talk with Zane, but I'll be back. Ok?\"\n\n\"Ok,\" she said softly. \n\nRyan kissed her on the forehead and squeezed her hand before saying goodbye to the others. \n\n* \n\nRyan walked into the Hillsborough County Sheriff's Department Detective Division and stopped at the receptionist station. \"Ryan Sinclair to see Lieutenant Montgomery,\" he said. \n\n\"One moment, please,\" she said picking up the phone to speak to Zane.\n\n\"Lieutenant Montgomery, there's a Mr. Sinclair to see you.\" \n\nShe paused to listen, then responded, \"Yes, sir.\" \n\nShe unlocked the electronic security doors and said, \"Go right in, sir. He's in the last office to the right.\"\n\nRyan nodded and entered the central hub of the detective division. \n\nThe main part of the division was a large open area. The detectives were partnered with their desks facing each other. On the outer periphery were smaller offices where victims or witnesses could be questioned in private. \n\nRyan nodded to a few guys that he knew as he headed to Zane's office. He knocked on door and was entreated to come in. Zane was on the phone having a heated discussion with someone. \n\nRyan took a seat and waited. \n\nLooking about, he noticed that Zane's office didn't look like the typical television detective office. For one thing, the guy was neat, almost to a fault. You really wouldn't think anyone actually got much work done with the neat stack of files at the end of his desk, but he knew Zane was exacting in his work and a stickler for details. \n\nHis pens, pencils and markers were all in an orderly little caddy that also had a place for sticky pads. There were photographs of his family on the wall, all neatly arranged, not a crooked picture among the lot. There was a massive map of the county on one wall with mufti-colored push pin dotting some areas.\n\nZane was dressed in a three piece suit, minus the jacket which he had taken off and put on a hanger which hung on a coat stand. His raven hair was pulled back in a ponytail, his face hard without a trace of softness. Although Zane could make grown men squirm with just a stare, behind it all Ryan knew him as a good friend and a first class human being.\n\nHis countenance was real and part of his personality, but underneath, he was a compassionate and passionate guy. The women could attest to the latter. They loved his bad boy image, but as yet, he hadn't let a woman mean more than his job. \n\nZane finished his call and reached over to shake Ryan's hand with a smile. Ryan marveled at how the smile broke away the hard planes of Zane's face. The man was a regular Lon Chaney, not with make up, but with facial expressions. One minute he could be hard and uncompromising, the next he almost look like a regular good old boy; almost. \n\nSitting back in his chair, Zane took on a more serious expression and asked about Dani.\n\n\"She's doing as well as can be expected. She'll be in the hospital at least a week more. She's in ICU now, but will be moved to a private room probably tomorrow. Of course, she'll be dealing with the effects of the concussion for a while even after she's out of the hospital. The baby is doing fine, thank God,\" Ryan said.\n\n\"Baby?\" Zane asked taken aback.\n\n\"Oh, fuck!\" Ryan said, \"I forgot that you didn't know. Hell, until this happened neither Dani nor I knew. She's pregnant, about six weeks.\"\n\n\"Congratulations,\" Zane said grinning. \"Damn, now you'll have a kid to give you hell.\" \n\n\"Hey, I never gave my folks hell, I was just a little busy,\" Ryan said tongue in cheek.\n\n\"Uh huh, busy. Okie Dokie, I'll let that pass for the time being,\" Zane said.\n\n\"Have you gotten any information?\" Ryan asked eagerly. \"I know it's a bit early ...\" \n\n\"Actually we do have some information,\" Zane interjected. \n\n\"The case was assigned to Harley Rayell, but I'll follow it closely and relay any updates to you personally,\" Zane said.\n\n\"Harley ran a check with the transportation facilities, trains, airline, bus etc. Hall took a flight to Los Angeles a few hours after the attack. I have a friend on the force there and asked him to do a little checking around. We expect to hear back from him later today.\"\n\n\"A background check was done, checking his history in Florida and California. I'll let you know as soon as we have that information. We're doing everything that we can, which includes checking criminal background and occupational records.\" \n\nThey went over everything Ryan knew about Dani's history with Hall again. Although they'd discussed it, Zane found that sometimes forgotten details came out in the retelling. \n\nAfter Ryan finished, Zane said,\n\n\"It sounds like this guy definitely has some issues. I'd really be surprised if he hasn't been in trouble before. It would be interesting to see if he's moved around frequently, that would be a red flag. I'll call you later tonight with a status report, but that's all I have right now.\"\n\nRyan nodded, stood up and held out his hand to Zane.\n\n\"I'm sorry for interrupting your vacation, but I'm glad you'll be following up on the investigation. Thank you man, I owe you one.\"\n\nZane shook his hand and said, \"You don't owe me anything, Ryan, you'd do the same for me. As for the vacation, I wasn't doing a damn thing. I can take the rest of my time off at any time. This is more important.\"\n\n\"Yeah, but thanks just the same,\" Ryan said. \n\nHe said goodbye and quickly left the office anxious to get back to Dani. \n\n*  A few days later the reports on Keith David Hall started hitting Rayell's desk. \n\nHarley Rayell was a ten year veteran of the detective division with three of those years in Citrus County where he relocated after graduating from college in Georgia.\n\nHarley learned to appreciate the law the hard way, through incarceration in juvenile detention for two years due to a series of auto thefts and B and E's as a teenager. His record was expunged when he was twenty one years old. Because of his own experience, he knew the myriad of ways a kid could go wrong. It was for that reason that he had more than a professional interest in Hall's case. \n\nHall had a juvenile record which was sealed, but had not been expunged. There was never a written request, which was required for juvenile records to be destroyed. He was able to get the entire file with a court order. It was no surprise that Hall had been in trouble before. There was one charge each of grand theft auto, assault and breaking and entering before the age of fifteen. However, Harley knew it didn't mean that those were the only crimes that Hall committed, just the ones they could prove. The Judge adjudicated the case by court ordered therapy once a week for two years and five years probation.\n\nSomewhere around sixteen years old, Hall seemed to have gotten some control of his life and his temper. He did well in school and seemed to stay out of trouble. At least there weren't any other incidents in the court records. \n\nThere was a separate record for the therapy. Harley would have to get another court order to get those unsealed. He would have to show the court the need in regards to this case. He thought the crime was sufficient based on the evidence. Whether Hall planned it or it just happened in the moment, Harley fully believed that if that couple hadn't arrived, he would have strangled Danielle Carter to death. \n\n*  The next day Zane visited Dani before going into the office. When he arrived at the hospital, Ryan was already there. He stood in the door way watching them for a few seconds. Ryan was sitting, leaning forward talking to her softly. \n\nHe knew Ryan wasn't a man to get bowled over by women. There were plenty who threw themselves at him, but he preferred monogamous relationships. He'd told Zane he didn't need or want the drama of multiple women in his life. ",
        "Being a man who was quite happy with his single status, Zane thought that philosophy was fraught with danger. He saw it as immensely more practical to play the field which, to his thinking, provided less chance of forming attachments that could jeopardize his odds of remaining single. \n\nRyan usually took his time getting to know a woman, but he'd fallen for Dani almost instantly. Now, he and Dani were going to have a baby. Zane wondered if he would ever have that in his life; a woman who understood and loved him unconditionally. The second the thought entered his mind, he chastised himself. He obviously was getting sentimental in his old age. Most of his friends were in serious relationships, but he just wasn't ready for that. \n\nSighing, he rapped on the door frame.\n\nRyan turned and waved him in.\n\nZane greeted Ryan and slapped him on the back calling him old son.\n\n\"Two years older and he calls me old,\" Ryan said with a shake of his head.\n\nSitting down in the chair on the other side of the bed, Zane learned forward to talk to Dani. \n\n\"Hi sweetie, feeling better?\" he asked.\n\n\"Some,\" she said smiling at him.\n\n\"Good, I just wanted to come by and see for myself. I won't be droll and say you look like you're getting your color back,\" he said with a twinkle in his eyes. \n\nDani chuckled thinking, \"He really is a good looking guy when he smiles.\"\n\n\"Do you have any news about Keith?\" she asked her voice noticeably husky. \n\nDani didn't see the hard look that came over Ryan's face or the slight shake of his head to Zane. \n\n\"Not yet, but I expect I'll hear something soon on the feelers we put out. The best thing for you, young lady, is to rest and not worry about the investigation. We'll do everything that we can to find him, make no mistake about that,\" Zane said firmly.\n\n\"How long will it be before you're out of this joint?\" he asked, changing the subject.\n\n\"Soon,\" Ryan interjected.\n\n\"I spoke to the doctor and he said possibly another three or four days, if her condition keeps improving. She'll be able to finish recovering at home with follow ups with her doctor. She's still having headaches, dizziness and some blurred vision.\" \n\n\"I'll check up on you once you get home,\" Zane told Dani. \n\n\"Right now I have to get to the office. Ryan I'll call you later,\" he said rising from his chair. \n\nAfter he left, Dani looked at Ryan and whispered, \"He knows something, doesn't he?\"\n\nTaking her hand, he rubbed the back of it with his thumb and said, \"Yes, but they haven't found Keith yet.\"\n\nDani looked like she wanted to say something else, but before she could form the question, Ryan said,\n\n\"I want you to trust me, baby. Let us handle this and don't worry about the investigation. I want all of your energy to be spent on getting well and taking care of our baby. Promise me you'll do that.\" \n\nTugging on Ryan's hand she said, \"Come here.\"\n\nStanding up, he leaned over, bringing his face in close to hers. \n\nCaressing the side of his face, she whispered, \"I will always trust you, Ryan Sinclair. I love you.\"\n\n\"I love you too, sweetheart, more every day,\" he vowed.\n\nHe gently kissed her lips and pressed his face to her neck with a sigh as she stroked the back of his head. This was the sight that greeted her parents when they entered the room. Pulling Davis back out of the room, Michelle said is a whisper, \"Let's give them a few minutes.\" \n\nNodding, Davis steered her towards the nearby waiting room. *\n\nFour days later, Dani was home and feeling better, but she still tired easily. \n\nHer parents stayed a few days longer to make sure she was well on her way to recovery. By the time they went back to Jacksonville, Dani was up, but still not in any condition to go back to work. Ryan was spending his days with her, leaving the management of the bar to Micah and Dave.\n\n* \n\nKeith was still lying low in LA. It was over two weeks since he fled Florida and his friend Walter was wondering how long he would be in the dark about his predicament. But things were about to change.\n\nThat night, after watching a ball game, the local news came on. On the nationwide segment, the lead story was about a man wanted in Tampa, Florida for aggravated assault of a local pregnant woman. When Keith, who had been leaning back on the sofa, heard that, he flinched and sat up abruptly.\n\nWalter saw the expression on Keith's face and thought, \"Aw, shit! What have I gotten myself into?\"\n\nWithin seconds there was an accompanying picture from his employee file and an explanation that the man was thought to be in the Los Angeles area and that anyone seeing him was not to approach him, but call The LA Police Department. \n\nWalter looked at Keith as if he'd grown horns.\n\n\"Fuck man, what the hell did you do?!\"\n\nKeith jumped off the sofa, pacing with his hands holding his head. Then he stopped suddenly and turned to look at Walter. \n\n\"Shit! It wasn't like that man, I swear it wasn't. I didn't know she was pregnant! I didn't mean to hurt her. I... I...I wasn't thinking...I...oh, my god...I didn't mean to do it....I didn't... I gotta go, I gotta go!\" He screeched, his voice rising. \n\n\"Keith, Keith!\" Walter shouted to get his attention. \"Man, you can't keep running, that's only going to make it worse. Who is this woman, anyway?\" \n\nKeith flopped down on the sofa and told Walter about Dani.\n\n\"I just wanted to talk to her man, I swear. Then I saw that engagement ring and I just lost it. I thought I had gotten over her. It had been over three fucking years! No one had ever told me to get lost; I was the one who dumped women. I never cared about them or their feelings, but I cared about Dani. I wanted her and she didn't give a fuck, just like my Mom,\" he rambled. \n\nCalmly, Walter talked to Keith like he was a scared child, which essentially he was. He didn't need to be a psychiatrist to figure that out.\n\n\"Listen, man; if you run you won't be able to stop looking over your shoulder. They'll find you, eventually. You and me was like brothers and even though I haven't seen you in a while, I still feel like you're my Bro. She's alive and although this is bad, it's not as bad as it could be. Tell me what you think you should do?\" Walter implored. \n\nRubbing his close shaved head, Keith said after a long silence, \"I should turn myself in.\"\n\n\"Are you sure that's what you want to do, man?\" Walter asked, testing Keith's resolve. \n\n\"No, it's not what I want to do, but it's what I have to do. I can't run the rest of my life. That's what I've been doing my entire life. I needed to go back into therapy when my Grandma died, she was my rock. When I lost her, I felt all of the old anger coming back. Now, look where the hell I am,\" he said on the verge of tears.\n\nHe was torn up about what he did to Dani and how he'd let his feelings spiral out of control. Worst of all, he knew without a doubt that in his blind rage he could have killed her. \n\n* \n\nZane sat in his office wondering if their plan would work. \n\nHe followed up on all the background information on Hall. Rayell had done a thorough job. After he'd done everything he could, he hit upon the idea of flushing Hall out via a news broadcast in LA. He'd approached Zane with the idea. Zane approved it and called his contract in the LA Police Department to set it up.\n\nHe and Zane knew that Hall was holding up somewhere, but would likely have access to a television. Either he or someone he knew would see the broadcast. If they had any luck, they'd get a lead or Hall would try to make a run for it. They had a watch out at all the commercial travel outlets. \n\n*\n\nZane received his answer a couple of days later, around two in the afternoon. He was in his office going over the evidence in another case when Patrick Hennessy called him. \n\nHennessy was a fifteen year veteran of the Los Angeles Police Department; a big bruiser of an Irishman. \n\n\"Hey, Pat, tell me you've got something,\" Zane said.\n\n\"Man, you are not going to believe this; the kid just walk into the station,\" Hennessy said.\n\n\"Damn, you mean Hall turned himself in?\" Zane asked in disbelief.\n\n\"Yeah. He wants to make a full confession. It surprised the hell out of me. He's an emotional wreck, man; I think he truly regrets what he did. In spite of feeling sorry for the guy, I'd still want to kick his ass if I were the fianc\u00e9.\"\n\n\"Yeah, I know what you mean. Ryan would like nothing better than to do just that, but I'm relieved that Hall came in. If we hadn't been able to find him, I might not have been able to stop Ryan from tracking Hall down,\" Zane said.\n\n\"Well, it's just as well he came in,\" Hennessy agreed.\n\n\"When do you think you can pick him up?\"\n\n\"Hopefully, I can book a flight within 24 hours,\" Zane said.\n\n\"All right,\" Patrick said, \"It'll be good seeing you again.\"\n\n*  Dani was helping Ryan prepare dinner.\n\nThis was the first time since she got out of the hospital that he'd let her do anything that required any effort. Her man loved her, but she was hard pressed not to start gritting her teeth. She let him know that she understood his fears, but she and the baby were doing fine and she wasn't about to take any chances. \n\nRyan was leaning against the kitchen counter while she cut up the vegetables for the spaghetti sauce. He had a great recipe that he'd gotten from his mom. They were having it with wheat pasta, garlic bread and a side salad. For a treat, Ryan bought pralines 'n cream ice cream from Baskin Robbins which was Dani's favorite with butter pecan coming in a close second. \n\nSo far she didn't have any food cravings. Her mother had become a cottage cheese and peanut butter junkie when she was pregnant with James. Although Dani liked peanut butter and cottage cheese separately, the thought of combining them made her stomach turn. \n\nAfter she finished with the vegetables, she ran them through the food processor before putting them in a pan with the other ingredients, pureed tomatoes, a little olive oil and seasonings. She brought the mixture to a boil, reduced the heat and let the sauce simmer. \n\nShe turned to see Ryan watching her intently and started to feel warm under his regard. He grinned at her when he saw her lick her top lip nervously. Before she knew it, he reached out and pulled her into his arms. For a few seconds she just stared at him wide eyed. \n\nHe held her, but didn't move away from the counter. He loved the feel of her soft body flush against his hard frame and wanted to savor the moment. He inhaled deeply, breathing in her sweet scent while caressing that spectacular bottom. \n\n\"What are we going to do about the wedding?\" he asked.\n\nDani considered the question for a bit then answered.\n\n\"I don't want to wait until April; my belly will be huge by then. I'm proud to have our baby, but if you don't mind, could we get married sooner?\" She asked. \n\nSmiling, he said, \"Whew! I thought you'd want to postpone the wedding until after he was born. We can't be married soon enough for me. A Justice of the Peace will do just fine, just say the word.\"\n\n\"Hold on cowboy,\" Dani urged, \"Not so fast. I didn't say anything about a Justice of the Peace. If we can have a small wedding with family and a few friends here, that would be great. We could have everything arrange in about three weeks, I think.\" \n\n\"That's fine with me,\" Ryan said.\n\n\"I never wanted you to be stressed by the wedding arrangements, even more so now. There wasn't time to discuss it with you before, but Mom and Haley have approached me about our plans. I want you to make the decisions, but I think it's a good idea to let them take care of the arrangements instead of using a wedding planner.\" \n\nDani considered what he said and knew that she felt more than comfortable with his mother and Haley to let them help. More than that, she trusted that they wouldn't try to take over. Besides, now that she was pregnant, she didn't really want to have to deal with someone she didn't know.\n\nLeaning her head on his chest, she said, \"That sounds like a great idea.\" \n\n\"Good,\" he said and kissed the top of her head.\n\nTaking her hand, he led her into the living room to sit on the sofa to continue their conversation. They were still talking about the wedding when Ryan's cell phone went off. Looking at the caller ID, he saw that it was Zane. \n\n\"Hey, Zane,\" he greeted.\n\nWithout preamble Zane said:\n\n\"He came in, Ryan. Hall walked into the police department in Los Angeles and turned himself in. You could have knocked me over with a feather when I heard that. Shit, who would have figured?\" \n\n\"Damn, what the hell did he say?\" Ryan asked leaning forward.\n\nDani was anxious to know what was going, but tamped down her impatience.\n\n\"According to Pat, he wanted to give a full confession. Pat says Hall was talkative and confirmed his emotional problems and that he was sorry for what he did, but he didn't try to make excuses. That's something at least.\"\n\n\"Yeah.\"\n\n\"Are you going to pick him up or someone else?\" Ryan asked.\n\n\"Both Harley and I are going, I've already booked a flight,\" Zane assured him. \n\n\"We should have him back here in a couple of days. He'll be locked up until the trial, no bail. I'm pretty sure they'll want to give him a psych evaluation. Oh, we did get the juvenile psychiatric file. I'll let you know what's in it later, but let's just say he was a disaster waiting to happened.\" \n\n\"All right,\" Ryan sighed. \n\nHe was happy that Hall had done the sensible thing, but he seriously wanted to smash the guy's face in and slowly break every bone in his body. \n\n\"How is Dani doing?\" Zane asked.\n\n\"Much better, thank God,\" Ryan said with feeling. \n\n\"Why don't you come by for dinner tomorrow, about... six thirty? You can see how she's doing for yourself. We haven't had you over in a while.\"\n\n\"Good to hear she's doing better. As for dinner, I'd love to and six thirty is fine. Give Dani my love. See you then buddy. Bye,\" Zane said hastily. \n\n\"Bye,\" Ryan returned, wondering at Zane's abruptness. Something was up with him, but that would have to wait. \n\n\"What was that all about?\" Dani asked.\n\n\"Hall turned himself in to the police in LA. Zane is going to pick him up and bring him back,\" Ryan told her.\n\n\"I guess I'll have to testify, huh?\" She asked not looking forward to it.\n\n\"Maybe not,\" Ryan said. \"If he confesses and waives his right to a trial, you won't have to testify. The judge will just hand down the verdict, sentence him and he'll do his time, which depends on the charges. From what Zane said, he's going to need and probably get court ordered therapy. \"\n\n\"I hope he waives a trial. I really don't want to see him again. I'm sorry for his problems, but he could have just stayed away from me,\" Dani said.\n\n\"I understand, baby. I'm not sure I could be in his presence and not beat the hell out of him,\" Ryan said, clinching his jaw.\n\n* \n\nSince Dani's been home, for obvious reasons, Ryan refrained from making love to her. However, it didn't mean that his body was immune. He'd had to take things into his own hands on more than one occasion and often he was awakened in the middle of the night with an aching erection. He was use to making love to her thoroughly and often; she never minded being awaken and he always made it worth her while.\n\nSince Dani's been home he'd worn pajamas for the first time in years. He'd hoped that less skin contact would keep his dick in check, but they hadn't done a thing except rub against his hard on and make it worse. \n\nHe was cuddled against Dani in the spoon position when he had the odd thought that he just might rub himself raw if his late night activities continued for long. That made him chuckle, which got Dani's attention.\n\nTurning over in his arms, she asked, \"What's so funny?\"\n\n\"Just a random thought that made me laugh. Did I wake you?\" he asked.\n\n\"No,\" she said with a sigh, \"I can't seem to sleep.\"\n\nShe stroked Ryan's broad chest and said, \"Maybe you can think of something that would help.... eventually.\"\n\n\"Are you sure you're ready for that,\" Ryan asked not certain that she needed that kind of physical activity. He might be hesitant, but the hardening of his penis declared that he wasn't opposed to the idea; he just didn't want to hurt her.\n\n\"Yes.\" she said and kissed his strong jaw.\n\n\"When I had my check up yesterday, I wasn't put on any restrictions. My doctor just told me to return to my normal activities as I was able; you know that. My headaches are gone for the most part, the blurring in my vision and the dizziness are completely gone. I thought you'd get the hints I've been throwing out the last couples of days, but every time I tried to start something, you'd distract me.\"\n\n\"I don't want to hurt you, baby,\" Ryan explained.\n\n\"I know you're trying to protect me, but honestly I'm much better now and I want to make love with you.\"\n\n\"Oh, yeah,\" he said with a grin, feeling his cock stir against her belly.\n\n\"Ummm yeah,\" she sighed. \"The baby won't mind either.\"\n\nRolling Dani onto her back, Ryan started divesting her of her gown. At the same time she was trying to unbutton his pajama top. With the tangles of hands and arms, as usual they weren't making much process, which made Dani giggle. \n\n\"By the way,\" she said, pausing in her exploration of his chest, \"why have you been wearing pajamas?\"\n\nWhen he told her, she gave a bark of laughter.\n\n\"It didn't work, did it?\" she asked.\n\n\"Not a damn bit,\" he said while nuzzling her neck.\n\nDani could feel the heat of Ryan's big body even through his pajamas. Wearing them had done nothing to cool her ardor either. Her man was hot in more than one way. However, she hadn't known that he'd gotten up in the middle of the night to jack off. She wished she could have seen it, but she knew just looking wouldn't have been enough.\n\n\"Aw baby, I'm going to need to make it up to you,\" she said with a sassy grin.\n\n\"Uh, huh,\" Ryan nodded, starting to lose himself in the heated scent of her arousal.\n\nEventually they managed to get all their clothing off. Both of them were eager to satisfy each other after what they considered to be a long drought. \n\n\"Lie back, baby,\" Ryan ordered, taking a ragged breath.\n\nDani did as he said and pulled him on top of her heated body. He was careful to keep most of his upper body weight on his forearms. He was always conscious of his size while making love to her, even more so now. \n\nLeaning over her, he brushed his lips against her forehead, then her eyes and nose. Sliding down further, he flicked his tongue against the corner of her mouth. Dani's lips parted on a whispery sigh and he moved to taste inside, his tongue sweeping into the warm opening, thrusting gently.\n\nMoaning, she arched her body, feeling the urgency of lost time. Ryan's tongue feasted while his hands roamed the hills and valleys, caressing her breasts, urging her nipples into hard twin peaks. \n\nLeaving the sweet warmth of her mouth, he plumped her breast into his hand and held it for his oral ministrations. After sucking in the dark pebble, he stroked it with the tip of his tongue, teasing the center. He missed the taste of her creamy caramel flesh, the sound of her rasping gasps as she withered in pleasure; the heat and fire of her beckoning desire.\n\nGently, Ryan bit the nipple and Dani groaned feeling a piercing sensation travel from her aching breast to her pulsing pussy. She stroked his head as she offered up her body for his enjoyment, luxuriating in his arousal. Turning his attention to her other breast, he elicited a flood of moisture from her vaginal channel which seeped into the dark cleft between her buttocks. Dani was on fire, melting under the heat of growing passion.\n\nMoving down her body, Ryan encountered her navel and laved it with his tongue, plunging into its deep well. But he didn't linger, it was too close to the object of his desire, the spicy sweet richness of her luscious pussy. ",
        "As he hovered at her center, he took her leg and draped it over his shoulder. Dani's body tingled in anticipation. With her pussy on full display, he kissed his way down and over her mons feeling her flesh pulse against his lips. By this time, she was pleading with him, her heart racing, her body straining for release. It seemed like forever since she felt this razor sharp edge of desire.\n\n\"Ryan... please.\"\n\n\"Mmmmm,\" he moaned as he suckled on her clit turning her body into jelly, the aroma assailing his nostrils and heightening his own passion. \n\nPanting now, Dani implored him.\n\n\"Ryan... baby...I want you in... in... meeeee!\"\n\nShe screeched as he sucked hard on her clitoris and sent her spiraling into a mind numbing orgasm that went on and on and on, taking her breath even as she fought to regain it. Gasping, her body first stiffened then jerked into rolling waves of throbbing intense pleasure. \n\nDani screamed through her orgasm as Ryan licked and suck at her clit and her over flowing pussy, lapping up her juices and grunting in his need for more. He was like a man on the verge of starvation who'd been offered an enormous feast. He couldn't get enough, fast enough. All of his love and pent up fears poured out in the form of his ravenous sexual appetite. The room spun and at the peak of climax, Dani's mind went blank.\n\nWhen she regained awareness, she could still feel the gentle throbbing ebb of her spent passion. She was wrapped in Ryan's arms, his kisses raining upon the moist skin of her breasts as he stroked them. His touch was tender rather than sexual, soothing rather than arousing. With the world set back upon its axis, Dani fought to hold back the tears as she experienced a tidal wave of emotions. She had never felt more loved, more needed, more wanted in her entire life. \n\nSlowly, Ryan's hand fell to her abdomen, caressing with gentle fingers. Dani knew that he was thinking about their baby. She caressed his shoulder as he made his way down her body and kissed her lower belly, humming as he did so. Looking up, he smiled at her, his green eyes sparkling with happiness and love in the ambient lighting of the room.\n\n\"It's going to be great when he gets bigger. You'll be round and sexy and I won't be able to keep my hands off of you. I might have to keep you in bed 24/7 just to indulge my fascination with your changing body.\" \n\n\"Great, huh?\" Dani said with a sigh. \n\n\"I'm going to look like a hot air balloon. I'll have to be rolled over to get settled in a comfortable position. You'll need to find a 24-hour market too, because I'll have all kinds of food cravings and I'll get moody and weepy.\" \n\n\"I'll love you no matter what your body looks like, no matter the hormonal changes,\" Ryan said as he pulled up beside her and swept her hair back from her pretty face. \n\n\"But if you start wanting ice cream with sardines, I might have to hurl a few times.\" \n\n\"Ewww!\" Dani said with a giggle. \n\n\"As long as you're happy with me, I'm satisfied,\" she said. \n\n\"I love our baby and he can make whatever changes he needs to make to my body in order to be healthy.\"\n\n\"I love you, sweetheart and I love this little guy,\" he said, rubbing her belly.\n\nThen, smiling at her he said, \"He's the little guy until I have proof to the contrary.\" \n\n\"That's fine with me. I don't care what the sex is, just that he's healthy,\" Dani stated as she stroked his broad shoulders.\n\nRyan agreed.\n\n\"Now,\" he said, pulling her on top of his body, \"we have unfinished business.\" \n\nDani straddled Ryan and took hold of his penis which had remained erect as they talked. She placed the head at the entrance to her vagina and stroked it up and down the slit, heightening her arousal. As she slowly slid down on it, she gasped at the fullness, sighing when she hit bottom. \n\nWhen fully seated, she stilled just watching him and the play of emotions across his handsome face. His eyes glowed with contentment and his lips curled into a sexy confident smile. \n\nRyan caressed her smooth thighs as she watched him. He loved the view of Dani riding his cock; her breath shallow as he gently rotated his hips, her breasts heaving. When his fingers stroked the place where they were joined, she closed her eyes and licked her full lips at the aching need.\n\nSlowly she felt the heat build in her core as Ryan seduced her with his eyes and caressed her inner walls with that small movement of his hips. Unable to remain still, she pushed up on her knees and started an up and down motion that was soon joined by the thrust of his hefty cock.\n\nLooking down at her man, she shivered under his lustful gaze and increased the pace. In control, she rode him in delicious pleasure, awed yet again by how thoroughly he filled her. She loved the girth of his manhood and the strength of his large body. \n\nWhen Ryan thrust upward her eyes fluttered and closed as she felt the warm inner walls of her pussy throb. She was close, so close... Just a few more thrusts....a few more...\n\nBefore the thought fully formed, Dani was thrown into the vortex of another breathtaking climax, moaning blissfully as Ryan's joined her with gruff shouts of pleasure while they both ascended into glorious sweet contentment. \n\nIn the aftermath, Ryan watched Dani as she slept in his arms. He thought that they were a perfect fit. He loved the enjoyment she took in his body and the reciprocation of her own without hesitation. She'd come a long way from virgin to a lover that had no peer. His need for her was more than physical, it was a bond of the spirit that would always join their love, their lives and seal their fate. "
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "white man",
        "black woman",
        "interracial romance",
        "interracial drama",
        "drama",
        "romance novella",
        "wm/bw",
        "bw/wm",
        "wm/bf",
        "bf/wm"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-09"
}