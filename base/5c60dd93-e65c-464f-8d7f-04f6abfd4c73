{
    "title": "Late Valentine Ch. 01",
    "pages": [
        "This story was originally submitted to the Valentine's Day contest as a standalone story. A second chapter was unplanned, but then it happened anyway.... This first chapter can, however, still be read as a self-contained story and is unchanged from its original form. Thank you for reading.\n\nEveryone engaged in any sexual activity is over the age of 18 years.\n\n+++++\n\nI'm standing with my hands thrust deep in the pile of cashmere jumpers, enjoying the feel and texture of them, but not really concentrating very successfully on the objective of choosing and buying one, when I become aware of someone standing next to me.\n\n'Sorry, am I in your way?'\n\nI step back slightly, wondering how peculiar I was looking just then; a grown man clutching handfuls of overpriced women's knitwear.\n\n'Not at all. I just wanted to reach for this colour here, if you don't mind. They are such pretty colours, aren't they?'\n\nI swing my head to take in the source of this voice. A warm voice, with a touch of humour, and a lot of American to it. I suck my breath in. From this angle, it's just the top of her head, a slim arm reaching out for the green jumpers in front of me and, as I tip my head a little more, a slim-waisted coat smoothed across her hips, that I can see. \n\nShe holds it up -- the green jumper -- in front of her face, in the way women do, giving it the full critical appraisal. She's got that amazing dark red hair that looks like it belongs in a Titian painting, it's such an outrageously deep colour. I'm transfixed by it, and need to make a conscious effort not to shove my restless hands into it.\n\n'I think the green is the best colour here,' I agree with her, finally pulling myself together enough to say something.\n\n'Oh, really, you do, do you?' \n\nAgain, that undercurrent of humour in her voice. But more arresting is the view she presents me with now she's turned her face to look at me. Big brown eyes behind tortoiseshell frame glasses, a faint spray of freckles just visible over her nose, and a mouth pulled into an amused smile, dimpling her cheeks slightly.\n\nI smile back, fighting the urge to stare at her lips.\n\n'I do,' I breathe out. 'My sister said she wanted blue, but I think the green would look better.'\n\n'Oh?'\n\n'Mmmm.'\n\n'Would she wear green, or does she prefer blue?'\n\n'Well -- she wears a lot of blue. Maybe that's why I'm tempted to go for the green.'\n\n'To change it up a bit?'\n\n'Something like that.'\n\nShe's still got that amused look on her face, and my head fills with all of the things I'd like to do with her, perhaps beginning with a drink, but I confess I'm already preoccupied with the idea of enjoying that smile in her eyes in much more intimate settings than a boutique in London's West End. I'm wondering how much of this is showing on my face.\n\n'Is she my sort of colouring? Blonde? Brunette?'\n\nAnd she holds the jumper in front of her now, tucking it under her chin a little to bring it close to her skin and hair.\n\n'Uh -- she's blonde. She's my stepsister really,' I ramble on. 'Different father, so she's blonde. And tiny, a bit like you actually. Whereas I am neither of those things.'\n\n'I can see that!' Her eyes are definitely laughing now. 'But, I think this colour would look good on a blonde woman. Which of these styles are you going for?'\n\n'Ah -- well -- that's where I was losing the will to live just then. Round neck, v-neck or this one with buttons? Too many choices for my poor thick head.'\n\nThis makes her laugh out loud, and the sound of it sends an unreasonable amount of warmth flowing through my veins.\n\n'Well if she is my size or thereabouts, would it help if I tried the different styles on? Then you'll be able to see what they look like? And I'm thinking of buying one for myself anyways.'\n\nI grin, feeling like I've won the lottery. A few more minutes of looking at this woman is going to be something to treasure. And maybe I'll summon the nerve to ask her to have that drink with me. \n\n'That'd be great, if you don't mind?'\n\n'Hey, I offered.'\n\nShe picks up several of the jumpers, checking the sizes and walks over towards the fitting rooms. It's one of those high-end shops where they have big, upholstered leather armchairs for the non-shoppers to sit in. She points wordlessly to one of them, indicating that's where I should sit, and negotiates her way into one of the cubicles with a shop assistant who swings the heavy curtains closed to protect everyone's modesty. I sit down, check the time, and wonder how long I can spin this out for. It's not like I've had much experience lately, and whatever I might once have had feels very out of date and rusty. \n\n+++++++\n\nStanding in the fitting room I stare in the mirror, not knowing whether I should be amused or alarmed at myself. What am I doing, offering to model a bunch of sweaters for a complete stranger? I feel dangerously giddy from the events of the day, and want to prolong the feeling but probably need to control it, too. I swallow, and shrug my shoulders. What harm can it possibly do? And it's definitely an improvement on the evening in prospect -- dinner alone, maybe a bath in my lovely but lonely hotel room, half an hour reading in bed before dozing off, and four hours' sleep, waking up with the book on my face. A typical Valentine's Day for me, these past few years. Not that I've ever been a fan of the way it's become such a thing -- cards, balloons, teddy bears, themed lingerie, overpriced roses, cocktails and dinners -- no thank you. Ten minutes of helping him choose a nice sweater for his sister is just a diverting activity -- almost a good deed?\n\nIt's not until I take my coat off I realise my mistake. I'm wearing a dress, and trying a sweater on over the top of it isn't going to do it justice. I pull back the curtain, and the attentive shop assistant is already approaching.\n\n'Yes?'\n\n'Umm, I've realised I need to try this on with a skirt or some pants or something,' I explain to her, gesturing at my dress, and of course, she understands immediately.\n\n'Of course. What size are you?'\n\n'She's a six.' His voice reaches us from the armchair.\n\nI raise my eyebrows at him. I guess he really does know what size his sister is, and I guess she and I really are the same build. The shop assistant moves off in search of something to pair with the sweater and I find him looking at me, somewhat intently it has to be said. I'm beginning to admit to myself that I'm not being entirely selfless in my offer to help him with his shopping. He's tall, dark, and handsome; what can I say? And I'm a sucker for men with clear eyes and an inability to hide what they're thinking.\n\n'Thanks for doing this. I really appreciate it.'\n\nHe leans forward now, his elbows on his knees, a well-worn leather shoulder bag sitting on the floor between his feet.\n\n'I don't even know your name.'\n\n'Elizabeth,' I reply.\n\n'Classy name,' he smiles. 'I'm Rob.'\n\n'Nice to meet you, Rob,' I smile back.\n\nThe shop assistant is back with an armful of clothes for me to choose from. Such a big armful that I laugh, she smiles, and Rob's jiggling his leg, but from the look on his face, I don't think it's with impatience. I dive back behind the curtain and pick through the clothes. I choose one of the skirts, slip out of my dress, pull the skirt up and the sweater on.\n\nHe's still leaning over his knees, but frowning, tapping at his phone with elegant long fingers, and doesn't notice me. I don't mind being able to look at him for a few unnoticed seconds. I like his dark hair, short around his neck and going grey at the temples, I really like his long legs and how the jacket of his classic English-cut suit sits on his shoulders. It's not until the shop assistant catches my eye and shakes her head at him, amused at his obliviousness to me standing in front of him, that he jerks upright.\n\n'Sorry, Elizabeth. Wasn't paying due attention.'\n\nThe look on his face is rather wonderful. I give him a quick twirl.\n\n'What do you think?'\n\nHe blinks, slowly. Very nice blue eyes.\n\n'Umm. Beautiful.'\n\nIt comes out as something between a growl and a whisper. I'm instantly distracted by the desire to give him more reasons to sound like that again, maybe somewhere less public than this shop.\n\n'Oh!' is all I manage to actually say.\n\nThe light in his eyes, the way he's sitting back in the chair now, as if to get a better look at me -- it's much more of a reaction than I'd anticipated. I feel myself beginning to blush.\n\n+++++++\n\nThe shop assistant is having fun with us now, bringing more clothes for Elizabeth to try on, seemingly enjoying the little show we're having here. After all, it's a dull Wednesday afternoon in the middle of February, the shop is in no way busy, and we're the only ones in the fitting room. And Elizabeth has a fantastic body. The shop assistant is happy to dress it. I'm beginning to find it more than difficult to imagine doing the opposite. Not helped when the curtain doesn't close quite as tightly as before, and I glimpse Elizabeth's bare back as she curves and glides herself out of another skirt. I avert my eyes and shuffle around in the chair, willing my cock not to betray me.\n\nAfter twenty minutes of this entertainment, I've made a decision about which jumper to buy my sister (the green -- blue be damned -- and the v-neck) and am holding it in my hand, trying not to bury my nose to inhale Elizabeth's scent on it. Elizabeth seems to be deciding to buy the same, and the shop assistant (Sahra -- we're all on first name terms now) has gone to fetch one from the shop for her.\n\n'Anything else you think I absolutely must buy?'\n\nShe's asking me in a light-hearted, throwaway, tone of voice, but my answer is more than serious.\n\n'That skirt,' I say.\n\nShe looks confused.\n\n'Which one?'\n\n'The first one,' I reply, wondering how she could even be asking that question. \n\nIt was as if it'd been tailored to fit her, and believe me, I know good tailoring when I see it.\n\n'Oh!'\n\nAnd I'm gratified to see the pink blush creeping up over her throat again.\n\n'Really, you should buy it. It's like it was made for you.'\n\nHer cheeks are dimpling as her smile widens.\n\n'Hmmm. Ok. That sounds like a serious recommendation.'\n\n'Oh, it's serious alright.'\n\nWe both stare at each other then -- one, two, three beats -- a few layers of good manners and social refinement falling away as we do so. I'm about to go for it, to suggest a drink, a walk, more shopping, whatever it's going to take to get her to spend a few more minutes with me, when Sahra returns holding another green jumper. Elizabeth steps behind the curtain to change back into her own dress.\n\n'Is she going to buy that skirt as well, then?' Sahra's asking me, all smiles. 'It looked perfect on her, like I knew it would.'\n\n'Oh, I know! I hope so.'\n\n'She's lucky to have you. My husband would never sit here so patiently, and he definitely wouldn't be half as attentive, neither!'\n\nI smile at her, but don't disabuse her of her mistake.\n\nOnce Elizabeth emerges from the fitting room for the final time, we thank Sahra for her help and patience. I'm gratified she's buying both the jumper and the skirt. As we walk out onto the street I take a deep breath; cigarette smoke and roasted chestnuts.\n\n'How about a drink? As a thank you for helping me make up my mind between blue and green?'\n\n'Sure.'\n\nI'd feared a straight 'no', and can't stop myself from grinning like the Cheshire Cat himself.\n\n'Great. I know just the place.'\n\nIt's one of those pubs that used to be on every corner and down every alley of Soho, but which are an endangered species these days. Small, leaded windows, dark wood bar, floor and furniture to match, etched mirrors behind the optics, a lingering smell of tobacco, not a tourist in sight. She looks surprised, but not horrified, so I chalk it up as a success. She orders a gin and tonic which is also a relief, since I'd fleetingly wondered if she was one of those Americans who doesn't really drink.\n\n'Cheers,' I raise my pint of beer and we clink glasses.\n\n'Absolutely,' she says, and smiles at me. As if I wasn't already in enough trouble.\n\n'So, are you visiting London or --?'\n\nVisiting, it turns out, for work. She talks about what she does. Something legal, and a lot of it goes over my head, but the part when she says she's just this morning been made an offer of a job here in London steals my attention. Yes, she's considering it because, no, she doesn't have a partner, husband, boyfriend or girlfriend back in the States. Not anymore. And maybe it's time for an adventure. She may not be in the first flush of youth, but she is free and single; laughing as she tells me this. It's a quiet laugh, but no less beguiling for it, especially as she tips her head back a little each time she does it, baring more of her pretty neck. The beer's going to my head as I'd forgotten to eat any lunch earlier, and I'm finding it harder and harder to do anything except stare at her. Pretty soon she'll start to think I'm an axe murderer. My phone vibrates in my jacket pocket. I squint at the screen and roll my eyes at the message.\n\n'It's work. I've got to go back to the office to make another phone call later. But, still time for another drink?'\n\n'Sure.'\n\n'I'd have liked to make a night of it. Dinner, that sort of thing, Elizabeth, but --,' I shrug apologetically.\n\nShe raises her eyebrows at me. 'We might've been lucky to get into a restaurant tonight.'\n\nI frown.\n\n'It's Valentine's Day.' And, seeing my reaction, 'Well I guess that's passed you by!'\n\n'Guilty,' I agree.\n\nShe buys, this time. It gives me a minute to regroup. I had completely forgotten what day it was. I clear my throat, trying not to think about it too deeply, but not really succeeding; a vivid image of her, Ginny, in that fantastically-cut cream silk dress, red berries in her hair and red lipstick painted on her lips, her bright eyes so full of light and love. I shut my eyes to it.\n\nThen she's back at our table, sitting perhaps a little closer to me than before.\n\nHow much longer is she here for, I manage to ask? One more night after tonight. Great answer. \n\nHow about dinner tomorrow? That's a yes. \n\nDoes she visit London often for work? About once a month. \n\nI sit back in the chair, and consider taking up religion, I'm feeling so blessed. \n\nShe interrupts my bliss to ask me what I do (property -- much too boring to describe here) and about my sister and parents and eventually it occurs to me she's asking after my marital/relationship status, and I almost choke laughing at myself for being so dense.\n\n'Are you ok?' she's asking as I cough into my pint.\n\n'Fine, fine. Just a timely reminder of how out of practice I am at this.'\n\n'Are you? Out of practice, I mean?'\n\nI wipe my mouth with the back of my hand, eyes on her fingers as she taps at an ice cube in her glass.\n\n'Terribly. I think the last time I had a drink with a woman I don't work with, am related to, or is married to one of my friends, must be more than ten years ago.'\n\n'Ten years? That seems an awful long time. What a waste.'\n\nThat last sentence nearly makes me choke again, but I recover.\n\n'Hm. You sound like my mother now.'\n\n'Aha. She wishes you'd get hitched and produce heirs, does she?'\n\n'Something like that,' I admit. 'I've been a big disappointment in that regard.'\n\n'For the want of trying, or some other reason?' \n\nI enjoy the way her voice carries so much humour in it. \n\n'Perhaps you are too much of a perfectionist?' \n\nHer brown eyes study me as she throws out more reasons for my sad single status. \n\n'You work twenty-four/seven? You have fetishes that can only be satisfied in the dungeons of Soho? You find transcendental meditation more satisfying? You've been blighted by a long, unhappily unrequited love?'\n\nWe've been laughing up until that last explanation.\n\n'Ah. That last one, then?'\n\nI incline my head. I'm British. We don't really talk about that sort of thing. Not often, anyway. See again the red berries threaded through Ginny's dark shiny hair that day -- eight years ago today, precisely.\n\nI jump as her warm hand slides over mine.\n\n'My big American wiseass mouth,' she says, softly.\n\n'Hm.' \n\nI turn my hand over to hold hers, cursing work, running my thumb across her palm and up to her wrist.\n\n'I hate having to say this, Elizabeth, but I really do have to get back to the office to make that call.' \n\nI press my thumb hard against the pulse in her wrist. \n\n'Much as I'd rather stay here with you.' I sigh.\n\n'I guess we'll just have to take a time out,' she raises one lovely eyebrow.\n\n'But dinner tomorrow? A late Valentine?' I aim for wry humour.\n\n'Definitely.' She beams at me. 'Can you make 7pm? That'll give me time to take a swim after work.'\n\nI suck in my breath, assaulted by images of what she looks like in the water, and she gives me one of those laughs. It's so quiet -- a fast intake of breath, a glottal stop, almost. Can she see what I'm thinking so clearly? As if she's testing it out, she leans over and brushes her lips against mine, the briefest, warmest of touches that's almost over before I've realised what she's doing, and with alarm, I grab her shoulder.\n\n'No. More,' I whisper and swing my mouth back to hers, pressing us together, tasting the lime and tonic on her lips. \n\nShe pushes her tongue into my mouth, opens her eyes, making it one of the most intense things I've felt in a very long time. I reach up into her hair, glorying in how thick and soft it feels through my fingers, gratified she lets me do it, staring into her eyes and trying not to blink\n\n+++++++\n\nTo say I'm nervous would be the understatement of the year. Pacing around the hotel lobby I'm asking myself why I didn't at least get his phone number and instead, have to torture myself with the fear he won't turn up at all tonight. It's already five after seven and I can't take much more waiting. I stare at everyone coming in from the street. It's a small, secluded, low-key kind of hotel, that looks like a townhouse from the outside, where each room has its own unique character, and the staff are genuine. A petite blonde in a beautiful blue silk dress is discreetly talking with another woman behind the desk, sharing a joke, checking something on the screen. She looks as though she's in charge; picks up a small bag from the floor and swings her way out of the lobby, bidding all the staff goodnight as she does so.\n\nMemories of that kiss have been claiming my attention all day at work until Megan had called me out on it, asking if everything was ok, and then, seeing the blush on my neck, had pressed to know more. I guess she was hyper-vigilant as she'd been teasing me yesterday about spending Valentine's Day alone. But what could I say? I don't even know his last name, for God's sakes.\n\n'Elizabeth!'\n\nHe's striding across the parquet floor, looking flustered and worried.\n\n'I'm so sorry to be late. I couldn't get away from work and like a fool I didn't even take your phone number last night. I was about to phone the desk here, but I thought it'd be better if I just hurried up.'\n\nHe leans down and brushes my cheek with his lips, takes hold of my arm as if he's never letting go, and finally smiles.\n\n'You're here now.'\n\n'Hm.'\n\nThis time, his lips brush across my mouth at the same time as his eyes seem to trap mine in their gaze, and I fight to stay standing. Not so reserved tonight, I'm beginning to see; there's fire in his eyes for sure.\n\n'I missed you,' he whispers in my ear and we both smile at this, at the preposterousness of it all.\n\n'Now, I've got two ideas about dinner. One is a modern Asian fusion sort of place, much admired and sought-after cuisine. We have a table booked. The other is a family-run Chinese around the back of Chinatown where we might have to queue up but the food is well worth it. Which one takes your fancy?'",
        "I tilt my head. He's interesting, this Rob. Dresses in suits that are definitely handmade from beautiful cloth and contrasting coloured silk lining the jackets, polished brogues, an understated but very expensive watch around his wrist. But his choice of pub last night was a down-to-earth bar full of stall holders from the vegetable market down the street. Which I liked. In fact, I'd been relieved he hadn't taken me to one of those overpriced, overdesigned and underwhelming cocktail bars.\n\n'Chinese,' I say, and am rewarded with a squeeze of his hand around my arm.\n\nAs we walk through Soho, I remind myself of the things I promised I was going to ask him tonight, questions that will make him less of a complete stranger. I almost giggle at the thought I should have made a list of them on my phone.\n\n'What?' he squeezes me again, evidently aware of the electrical currents running through my body.\n\n'Oh, nothing. Not really. I guess I'm just a little -- ah -- what to say? Overcome? Excited? I don't do this often either, Rob -- meet up with strange men I don't know for dinner.'\n\n'I'm not that strange,' he says drily, and stops in front of a tiny restaurant, the kind with whole Peking ducks hanging in the window. \n\nThere's a small line out the door and onto the street. We join the end of it. He fiddles with his phone, cancelling the reservation for the other restaurant, I guess. It's mild despite being February, and I look around me, enjoying the throngs of people milling around, thinking about what it'd be like to live here in this big city full of the contradictions between old and new. He takes a hold of my hand and I'm overtaken by a rush of elation at the idea of it -- of letting him undress me later, of leaving the States behind me for a while, of going in to work on the tube every morning.\n\n'What are you thinking?'\n\nHe's looking down at me. I open my mouth to try to explain, but before I manage a word, Rob's being clapped on the arm by a smartly dressed Chinese man.\n\n'Mr Montague, very good to see you. Why you waiting out here? Come, we have the best table for you inside.'\n\nWell, that's one question I won't have to ask him, I think, as we get pulled past the line of people and inside the restaurant.\n\n'Why you not here yesterday with this beautiful lady, Mr Montague?' the man teases him as he shows us to the table, pulling out a chair for me. \n\n'We had very good Valentine's Day special.'\n\nRob holds up his palms in surrender. \n\n'Terrible planning on my part, Bao. But what dishes can you tempt us with this evening?'\n\n'I have just the thing to do Cupid's work for you,' he's grinning, flicking the napkins out for us and generally fussing to perfect the look of the table before leaving us.\n\n'I gather you come here a lot?' I ask Rob, peering out of the window overlooking the street below.\n\n'Yes, it's me and my sister's favourite place.'\n\n'What's she called?'\n\n'You'll laugh, but she's called Elizabeth. Goes by Lizzie though.'\n\n'Is she married, or otherwise providing any heirs for your poor mother?'\n\nHe shakes his head.\n\n'Nope. We're both walking disasters as far as that's concerned.'\n\n'Shame on you both. What's her excuse?'\n\n'She prefers girls.'\n\nI cover my mouth, but his eyes are smiling, relaxed, so I let it go, me and my big wiseass mouth. \n\nExcept -- 'So, now, about this unrequited love of yours. What made her so dumb she didn't want you?'\n\nHe looks a little shocked I've brought it up again, but I reach for his hand over the table to soften the blow. And because I want to touch him. As I think I've already admitted, I'm not completely selfless.\n\n'Ah -- well, she wasn't dumb so much as in love and married. And to one of my oldest friends from school.'\n\n'That would explain it, I guess. Are you still in her thrall?'\n\nHe looks away, then back, then away again.\n\n'No. She died five years ago.'\n\n'Shit. Sorry -- I really shouldn't --,'\n\n'It's fine, Elizabeth.'\n\n'But --,'\n\nBowls of food arrive at our table, so we both sit back a little until the waiter has moved away.\n\n'Look, she -- Ginny -- was deliriously happily married to John and, not that I'm slow to accept reality, but it only took me another three years to come to terms with it after their wedding. They got married on Valentine's Day, actually. Maybe that's why I usually manage to ignore it.' He glances up at me. 'Anyway, she was always most understanding about it.'\n\n'She knew?'\n\n'Oh yes. She knew alright.' \n\nI watch him as he goes to another place and for some reason, images of their breath blowing steam together in the freezing winter air, her soft thigh pressing up against his cock, his tongue tipping her nipple fill my mind. I breathe in, surprised at how clear it seems. Not totally unrequited love, maybe.\n\n'But in the end, it was John she wanted.'\n\n'What happened?'\n\n'They had two beautiful children -- I'm godfather to the eldest -- and then she found a lump on her breast.'\n\n'Oh. So cruel.'\n\n'Yes.' \n\nHe returns to the present. Helps himself to some more rice.\n\nWe take a circuitous route back to my hotel. He'd offered to take me to his house, and although I'm curious to see it, I decided that my room was probably closer. Gave us both less time to back out? I'd seen something flick through his eyes, but didn't know if he was disappointed or relieved I'd chosen the hotel. And now that we're lazily weaving our way south, back through the streets of Soho I'm wondering if he's having second thoughts, or is just nervous. We both know what we want to do, or at least I think we do, but even now, liberated modern woman of the twenty-first century I like to think I am, I'm still hesitating over making the first real move. Perhaps I'm the most nervous of the two of us. I feel the pressure of his hand over mine change. When I look up, I see we're turning into the street where my hotel is.\n\n'Elizabeth, I want you to know I'm not taking anything for granted.'\n\n'That's ok, I --,'\n\n'It's not that I'm not bursting with ideas about what I'd like to get up to with you tonight, but I want you to be in control of what happens -- nothing that you don't want.'\n\nAnd with that, he picks me up off my feet and holds me to his chest, my feet dangling. Kisses me full on the mouth for long enough for me to feel like I've been set on fire, and then sets me back down on the sidewalk. I stare at the side of his face until he glances at me out the corner of his eye and grins, urging me to walk with him the final steps to my hotel.\n\nI fumble with the key card, inserting it the wrong way at the first attempt, succeeding on the second, pushing the door open and stepping into the room. I cast a look at the armchair, recalling how good he'd looked yesterday in a similar chair in the fitting rooms, feet apart, leaning back to look at me. It seems he has other ideas, drawing me with him to the bed, and I'm beginning to wonder if he meant what he said about me being in control, until he turns to sit down on the mattress, pulling me close to him, but then sitting there quietly, waiting for me. \n\nStanding like this in front of him, I can just about rest my chin on the top of his head. But, of course, I have high heels on, so it's an illusory height. I draw a deep breath to take in his smell and pull my fingers across the short hair at the nape of his neck. It's satisfyingly textured, like the moquette used for hard-wearing seat covers. His breathing is warm against my blouse. I peel off my coat, and lie it on the bed next to him, moving closer to him as he threads his arms around my waist. We stay like this for a few minutes, getting used to the proximity, his head resting on my breasts, his hands moving around my back and down my ass. \n\n'Did I say how much I like this skirt?' he's murmuring.\n\nI smile. Of course I'd worn it today.\n\n'I think so.'\n\nI ease him away, slip my hands underneath his jacket and begin to slide it from his shoulders. He releases my ass long enough to help me slide it all the way off, and I drape it on the bed beside him, me tapping the label sewn into it.\n\n'This is a very nice suit you're wearing, Mr Montague,' I say, tracing his name where it's written on the square of fabric.\n\n'I like beauty,' he murmurs, his eyes suddenly appearing far darker than before.\n\nI move my attention to his tie. It's a beauty, for sure. Dark ruby red, a heavy woven silk with fine gold threads. I tug the knot loose, pausing when he runs a finger over my hands; leaning over to kiss it lightly, taking it into my mouth, rewarded by his sharp intake of breath. He pushes another finger between my lips as I pluck the knot open and snake the tie around and out from under his shirt collar, rolling my tongue over his fingernails, his knuckles, letting the rest of his hand cup the side of my face. It's as though I can feel the tension draining from his body as he sits there, letting me pull on his fingers with my mouth, and undo the buttons at his throat and down his chest. Still nibbling at his fingertips, I push his shirt open, rolling the soft cotton in my hands, and I think I'm humming aloud with the anticipation of it. \n\nOf all of it. \n\nIt's incredibly sexy the way he's sitting there letting me take my time, waiting for me, but feeling it with me. \n\nI dare to look again into those naked eyes. They're almost all pupil now. I release his fingers in favour of his lips, darting my tongue into him, retreating and advancing, retreating and advancing, until his hands surge into my hair and hold my head more firmly as he fills my mouth with his tongue. I pull away, gasping, to catch my breath, but bend over his mouth for more, hoping that's what my eyes are saying to him. He kisses me again with the same energy and lust. \n\nIt's sure in his eyes, clear as day. Have I ever felt this wanted? I'm almost laughing with it, this feeling of pure elation, and I see it in him too now, both of us laughing, both of us elated, both greedy for more of it, for each other. My arms and legs are trembling with it.\n\n'Are you alright, Elizabeth?'\n\n'Yes. No. Both of those things, Rob.'\n\n'Hmm.' He drops his lips to my neck, pulling my hair out of the way, sucking and nipping at my skin, which only makes me tremble more.\n\nI resume undressing him, pushing the shirt off his shoulders, watching it whisper and fold off of his body, momentarily confused when he pushes his wrists upwards, until I understand what he needs, and fumble at the cufflinks until they are undone and I can pull his arms free of the sleeves. Lifting it away, I peer at the label and see that this too has been handmade for him. Dropping it on the bed I run my hands over his shoulders and down his back. His skin is smooth, and very warm. I imagine him covered in sweat and can't help myself from laughing at how turned on I am.\n\n'What?' He pulls his head up to look into my face.\n\n'It's just the anticipation, Rob. It's kind of killing me, but I want it to go on forever.'\n\n'Mmmhmm,' he's almost growling, and kisses the side of my face. 'You can do anything you want with me, Elizabeth. What do you like?'\n\nA powerful ripple of lust climbs from the base of my spine, and I exhale loudly as it reaches my throat. The look in his eyes is overpowering me. I slip the buttons on my own blouse, pull it out of my waistband and down my arms, watching his expression as he takes in the white camisole that's underneath, the white bra that's beneath that. Touching the camisole lightly, he looks up.\n\n'Keep this on, will you?'\n\nI smile.\n\n'You'd like that?'\n\nHe just nods and presses his face into it. I reach around to undo my bra, pulling the straps down my arms, bending them, pulling the straps free; push his head away to tug the bra off me from the front.\n\n'How do women do that?'\n\nI drag the camisole up over a breast and lift myself to his mouth. He groans against my skin and I wonder if I'm going to come right there. He uses his hands to lift the camisole higher above both breasts, his thumbs pressing against my armpits, his tongue delving underneath each breast, pushing at the undersides, dancing across my skin, pressing against each nipple. It's almost too good, and I drop my head down to look at him, the intensity of his focus, the glimpses of his eyelashes as he moves his face against my skin.\n\n'You're beautiful,' I whisper.\n\nHe pauses. I hold my breath. And moan as he takes my nipple in his lips, pressing them together over it, releasing then pressing them again, trapping me in a hot vice.\n\n'Oh God, Rob, what are you doing?'\n\nHe pauses again, but I push myself against his mouth, wanting more. He repeats the sweet torture, this time his lips a little more tense, and I realise he's smiling. I'm laughing with it too, my breathing catching in my throat. He switches to the other breast. I arch my back, trying to get closer to him, but with the way he's sitting on the bed, his crotch is too far back. It's frustrating the hell out of me. I lean in; he loosens his grip under my arms and I reach for his belt. With a firmer bite of my nipple that elicits another loud gasp from me, he releases me, and sits back a little to give me space. I unbuckle him, his stomach twitching and tensing as my hands brush against his skin while I undo his pants, my own heart thudding uncomfortably. His thighs are fidgeting again and then I realise it's because he's levering his shoes off by pulling his heels up against the bottom edge of the bed base.\n\n'That's a neat manoeuvre,' I say, resting my hands on his knees, partly to try to calm myself. \n\n'It's one of the finer motor skills boarding school teaches you. How to undress silently and with the least amount of movement, so as not to get caught after lights out.'\n\n'Boarding school?'\n\n'Hmm.'\n\n'What other skills did you learn there?'\n\nHis eyes flash at me.\n\n'Um, let me see.' \n\nHe runs his hands up my back again, clearly enjoying the feel of the camisole, but also imparting a much-needed sense of calm to me. \n\n'I'd say most of us learned how to wank and come without making any noise.'\n\nThat makes me snort with surprise, not at what he's said, but that he's said it at all.\n\n'What? You didn't think I'd tell you that?'\n\nHis face is lit up with one of his big grins and he hugs me closer.\n\n'It's that you look so proper in your classily tailored suit, it's all the more surprising to hear you say something like that, is all.'\n\nHe looks down between us, at his bare chest and open pants.\n\n'I'm not sure how properly dressed I am, actually,' raising his eyebrows at me.\n\nI giggle now, reverting to a sound I thought I'd left behind aged sixteen.\n\nHe rubs my back again.\n\n'Ok?'\n\nI nod. He knew how nervous I'd suddenly felt just then. I bend to kiss his forehead and -- as he closes his eyes -- his eyelids and cheekbones, the corners of his mouth, just his whole delicious face. After some time enjoying this, I move my mouth to his ear.\n\n'I think you should take your pants off, don't you?'\n\nI tug at them, he lifts his hips, I slide his pants down, shaking them out straight and lying them on the bed. His underwear comes off too. He doesn't seem to have been wearing any socks.\n\n'Have I said you're beautiful?' I ask him, brushing my hand over his cock, watch him close his eyes, feeling him twitch and bump against my hands. \n\nI tease him a little, brushing my fingertips over and around him, drawing them down his inner thighs and then back again, his eyelashes flickering, his hips lifting up every so often. \n\nHe tastes good, but jumps at my first touch, apparently unaware I'd knelt down inbetween his legs, and growls quietly under his breath. I hold him firmly in one hand, press my mouth to his head again, dragging my lips around him, then opening them to take him into my mouth, rolling my tongue around him, listening to his breathing. \n\n'I'm not going to last very long if you keep doing that,' he warns me.\n\nI hum, pulling him deeper into my mouth, wanting him, stroking his belly with one hand and feeling him tensing up beneath my touch, sliding my other hand up and around his base. The sound of his panting fills my ears and I make love to him with my mouth and tongue. His hands are tight in my hair.\n\n'Elizabeth --,' his voice urgent now.\n\nI hum again, stay with him as his hips rise, take it as he comes in my mouth. \n\nHe wasn't joking; he comes quietly, a series of low, deep, breathy sighs. \n\nI'm still swallowing as he lifts me up, his hands on my ribcage, pulling at me to stand up, hugging me close to his heaving chest. He holds me tightly, his arms pressed around my waist, keeping me close, calming himself. I kiss the top of his head, feel his breathing slowing down. He twists his head and urges me down to his mouth, shoving his tongue inside, filling me, his eyes filling mine, his hands hot and busy over my ass. Eventually, he releases my mouth and taps at my waist.\n\n'I think you should take this off, before we get it messy,' he says into my ear, slipping a couple of fingers inside the waistband. 'What do you say?'\n\nI kiss the side of his head, then step back to undress. He watches. I lift first one leg, then the other, out of the skirt. He takes it from me as I make to lie it on the bed, folding it carefully in his hands before putting it down on top of the rest of our clothes, then turns back to look at me pushing my stockings down my legs, stepping out of my shoes. He holds my arm to keep me balanced as I release my feet from the nylon, wriggling my toes, enjoying the feel of the thick rug at the side of the bed.\n\n'Mmm. No better sight than a woman undressing,' he's murmuring.\n\n'This?' touching my camisole.\n\n'No, that stays,' he smiles at me.\n\n'I think I'll move these clothes off the bed.' \n\nI hesitate, then plunge on. \n\n'Can you -- would you -- stay the night Rob, only I'd hate to wake up alone in the morning?'\n\nHe grabs at my wrists, presses his thumbs into my palms and when I dare to look at his face, see that he seems a little shocked.\n\n'But Elizabeth, who could ever do that to you?'\n\nRelief washes through me, and I tremble with it.\n\n'I -- my last relationship -- uh, well, he couldn't ever bring himself to stay the night with me, and I ended up feeling lonelier than when I'd been single.' \n\nI flex my toes through the woollen rug for the distraction.\n\n'I'm going to find it difficult to leave you at all,' he says, massaging my hands and wrists in his.\n\n'Oh.' \n\nI lean up against his torso, dropping my head to rest on his shoulder.\n\nHe kisses my ear, lets go of my hands and we move together; he picks up our clothes and takes them over to the armchair, draping them over the back of it, carefully but not fussily; I shake and lift the bedcovers, pulling them back. \n\nJust as I'm about to climb in, his arm slides around my waist from behind and he presses me back against his growing erection, his other arm sweeping my hair to one side as he drags his open mouth back and forth across my neck, his stubble rasping against my skin. This is very nice, and I drop my head to give him more to play with. Heat races over my body as I feel his hand stroking its way over a breast, pausing just long enough to tilt his palm beneath it, cradling it, then feathering over my ribs, which is ticklish and makes me suck my breath in. I feel him smile against my neck and think his stomach muscles might be moving as if he's laughing.\n\n'This is funny, is it?' I ask.\n\n'I can't believe my luck, that's all,' he's muttering, then catches me by surprise as he flattens his hand across my belly, pushing me more firmly backwards to him, lifting and rubbing my ass up against himself.\n\nI sigh.\n\n'You like that?'\n\n'Uh, yes. You've, um, recovered pretty quickly?'\n\n'I think I said it was my dating skills that were rusty, Elizabeth, not this.'\n\nHe makes me giggle again, the way he's pressing and wriggling his cock against me. But as his hand dives down inside the front of my knickers, his clever fingers halt the giggling altogether.",
        "+++++++\n\nShe feels wonderful. Soft and warm and very wet indeed. There's so much I want to do with this woman I'm finding it difficult to focus. The feel of her breasts, their warmth and heaviness through the fabric of her camisole; the constellations of freckles that tempt me to touch and lick her skin all over; the matching dimples at the top of her hips. So much to explore. Except that now she's writhing and gasping like that, I'm tuning in to the way her hips are beginning to swing and rotate against me. \n\nBut the position is uncomfortable for both of us to stand this way for long, me trying to keep her lifted up on her tiptoes with my back bent, so reluctantly and slowly, I bring my hand out of her knickers, trailing a glistening line of her juice on my fingers as I pull them up her belly. Loosening my hold of her, she lowers herself down onto flat feet, shivering and fighting to regulate her breathing.\n\nDropping my head to bite at her neck a bit more, I remind myself I wanted to make sure she was in control of what happens here, so I wait for her to make the next move, dropping my arm away from her ribcage. After a couple of seconds, she takes my hand, pulling me onto the bed behind her, turning her head just enough to know that I'm following her, a small smile on her lips. I have the presence of mind to catch at the top of her knickers before she settles into a kneeling position, plucking at the soft lace to tug it down the curve of her hips. She lifts her bottom up and lets me pull them lower, all the way down her lovely thighs, lifting a knee at a time from the bed, until I scoop them off completely. It's difficult for me to put them down, they feel so silky, but the sight of Elizabeth's round bottom wins the battle, and I climb onto the bed, kneeling behind her. She's already shuffling her hips backwards towards me, finding me, until she's sitting against my thighs.\n\nIt never fails to amaze me how erotic the feel of a woman's skin is, how the simplicity of touch can be so electric, so fulfilling. Her skin is pale, the colour of ivory, and, as I lift the camisole up on one side, I can see more clearly a beautiful constellation of darker freckles covering her right hip bone. I run my hand over them, then just my fingertips. They are darker and just ever so slightly raised.\n\n'You've found my birthmark, Rob,' she shivers under my touch.\n\nHer thighs are already parted. I slide my hand in to find her, no longer sure if it's just her who's shivering, as I dip my fingers into where she's warm and wet.\n\n'You feel so beautiful, Elizabeth,' I say.\n\nI wrap some of her fantastic hair into my fist. She starts to make noises similar to those of her laugh -- breathy intakes of air that seem to stop and catch in her throat -- as she drops her head and leans forwards a little bit, pushing herself down onto my fingers as I thread them through her lips and around her clit. She drops her head, exposing more of her neck for me to nip and lick. The spot just below her right earlobe seems particularly good for her. She twitches each time I touch it with my mouth. The muscles in her belly and thighs are tensing and contracting so I decide to up the ante. Reluctantly releasing my hold of her hair, I run that hand inbetween our bodies, briefly giving myself a stroke on the way, then curl my hand underneath her bottom. It seems to take her by surprise that I've trapped her between my hands, one from the front, one from behind, as her hips lift and buck forwards then back. Her head drops lower and I think she might have emitted a small burst of laughter. This combination of desire and laughter is intoxicating both of us.\n\n'I can't get enough of how you feel,' I say as I slide and press my fingers through her juices and then push a finger into her.\n\n'God, Rob, that feels so, so good.'\n\nShe doesn't seem to know which direction to move her hips but whichever way, she's picking up the tempo, so I withdraw my finger, feeling how strongly her muscles hold onto me, and slowly ease two fingers into her, listening to her breathing, feeling her body's response as she leans further forward to give me better access to push deeper inside. She's still tight, but definitely getting wetter. \n\nI lean into her ear. 'Do you like this, Elizabeth?'\n\n'Fuck. Yes.'\n\nHer body temperature is soaring. I slow down until I'm circling around her clit at an almost lazy pace with one hand, but maintain the rhythm she seems to want from my stiff fingers of the other hand, twisting them inside her and marvelling at the strength of her grip on them, imagining what it would feel like to have them pulling and squeezing on my cock. That thought almost tips me over the edge, and I make a conscious effort to concentrate on what I can hear and feel of Elizabeth's pleasure to hold myself at bay. She's making slightly louder noises from the back of her throat and I can move my fingers more freely inside her now. She's widening out for me.\n\n'Show me, Elizabeth. Show me.'\n\n'Oh God.'\n\nA low whine escapes from her. Feeling her whole body begin to stiffen, I withdraw my fingers altogether. She falls further forwards, confused. I press my palm flat against her clit and rock against it gently from the front; drag the fingers of my other hand along the crease between her buttocks, teasing, and finally thrust back inside her, feeling her whole body judder with surprise and then pleasure as she grips my fingers, contracting over them again and again. I watch how the shape of her spine changes as she fights through her orgasm, bowing and curving as her head, shoulders and hips jerk and shudder.\n\nAnd then she goes completely still. Even as I withdraw my hands from her, she hardly moves. I sit more upright, realising I'm breathing nearly as heavily as she is, but wondering what this stillness means. She draws a deep breath; I watch as she fills her lungs, her ribcage expanding beneath the shimmering silk of her camisole. \n\nSuddenly she's twisted around and has pulled my mouth to hers, her hands hard on my face, holding me fiercely, kissing me just as fiercely. It takes my breath away. And a bit of my heart too.\n\nAfter some time, she releases me. Now I can see what I thought I had been able to feel against my face -- her tears. I don't like to see that, so I raise my thumbs to wipe them away.\n\n'Hey, Elizabeth --,'\n\n'Rob, that was -- unspeakably good. You've no idea how good. My God, I've rarely been able to come like that. And never as quickly.'\n\nI'm lost for words and decide the best thing to do is kiss her again. Words like that can go to a man's head too easily, no pun intended. But she draws away.\n\n'Open your eyes, Rob,' she's saying to me, a fingertip pressing on my lips.\n\nI open them.\n\n'That's better. I want to be able to see what you're thinking.'\n\nI blink, wondering how much she can see.\n\n'What would you like, Rob? You've let me be in charge and I think I've gotten the better end of the deal so far.'\n\n'Not at all,' I shake my head. \n\nShe's facing me now, so I reach out to press the palm of my hand against her breast, enjoying the contrast in temperature and texture between her hot hard nipple and the cooler silk of the camisole. It's irresistible. Her eyelids dip a little and she arches up to my hand. I want to push her down onto the bed and press myself into her, to watch her eyes and feel her body as she accommodates me inside her. My cock twitches impatiently at the thought, breaking into my reverie, and I recall Elizabeth's question. \n\nPlacing a hand on her back, I urge her closer and to kneel up. I can't resist running my mouth and tongue over her right breast and my saliva soaks through the silky fabric as I suck at her soft flesh. She sighs, runs her hands through my hair, around the nape of my neck, and I pull her tighter to me, wanting to possess her completely, using my hand to push her breast upwards from underneath, to press more of her into my mouth, I'm so greedy for her. Lost in her, just the feel of her; the feel of her ribs expanding into my hands as she breathes, the heaviness of her breast against my mouth. \n\nThe blast of a police siren in the street below makes both of us jump and jolt against each other, and, startled, we laugh, trying to catch our breath, the blue light flashing and rotating over the walls and ceiling, all around us, until the car moves on. Elizabeth sits back down on her heels, her face in front of me.\n\n'So, Mr Montague, what's your pleasure?' she whispers, lightly kissing me, and smiling, 'I'm in your hands,' as her hands wrap around my cock.\n\nI close my eyes to concentrate on her touch, but she draws back from my mouth.\n\n'Open your eyes, though.'\n\nI obey her command, said softly, but no less compelling for it. And watch her kneel up again, her eyes on me as she continues to stroke me, shuffling even closer, pushing me downwards, fitting me inbetween her thighs. I can't help but groan at the feel of her. So very hot and slippery.\n\n'Ah, so you do make some noise, then?'\n\n'Mmm,' is all I can manage to say.\n\n'Is this what you'd like?' she murmurs, gliding herself over me.\n\nI nod. I'm unable to find any words, the feel of her is too consuming.\n\n'You're clean?'\n\nI nod again, and lick at her neck and collarbone, eventually whispering, 'Yes. Healthy as can be.'\n\nI think I can hear a smile in her voice as she says, 'Very good. I'm on birth control, Rob, so --,' and she dips her hips, applying more pressure on my cock. \n\nMy pelvis kicks up, almost unbalancing us, making us laugh again. I want this feeling to last forever but my cock has other ideas, clearly. My knees are complaining at all this kneeling so I shift both of us around until I'm sitting with my back up against the padded headboard and pillows, then reach for her to kneel over me. I still want her to be in control, at least for this; she's small and I don't want to crush her. Not until I know if that's what she might like me to do, anyway. Looking at the expression on her face, it seems it's a good decision. Her eyelashes are lowered as she takes hold of me gently and firmly, the feel of her hands heavenly as she holds me against her, sliding along me, making sure we're both wet as can be. I catch my breath, thinking there's little else that can possibly feel as fantastic as this.\n\n+++++++\n\nI've never experienced a man like this; so quiet, yet so expressive -- even when his eyes are closed. Although I prefer them open, and surprise myself when I say this aloud to him. The way he's ceded control to me has made me feel bolder, more confident. \n\nAnd bringing me to that sort of orgasm -- I'm in shock. How did he do that? It usually takes a lot more time, and greater familiarity with someone for me to ever feel like that. I'm in a crazy mixed-up state; a stew of anxiety, impatience and desire. Anxiety about getting even more intimate with this man, because who knows what, if anything, can come of it? I'm really not a one night stand sort of woman at all, and the thought of not seeing Rob again makes my stomach plummet to my toes. Yet I can hardly think at all beyond the aching void inside me. Despite his elegant hands having made me come so hard, they've left me feeling agonisingly empty.\n\nTaking his cock in my hands I'm reminded how big he is, and hope he can give me time to get used to him. Once I've had that thought so clearly, it's all I can think about. Pushing and sliding him along myself heightens the feeling of emptiness. I'm craving him now. \n\nApprehensive as he starts to shift us, wondering what position he wants, what he likes, then relieved as he props himself up against the headboard, those long legs of his in front of him; coaxing me to kneel over him by pulling at the back of my thighs with his hands. And his eyes are still open. Rotating myself over him to lubricate him as much as I can, I bend just enough to kiss his mouth. His response is passionate, consuming, open-mouthed, fucking me with his tongue. Pure euphoria rides over me, down my spine, through my limbs until my fingers and toes curl. I raise my hips a little until I can pull him upright under me, looking into his eyes -- still open for me -- pausing at the feel of him at my entrance. The promise of it nearly overwhelms me right there. I take a deep breath and drift downwards onto him, but of course he's too big to merely drift. His eyes widen as I push down with more intent, then rise up to release the pressure, rotate around him again, pushing down to take more of him. He releases another quiet groan.\n\n'Too tight?' I ask, anxiously.\n\nHe shakes his head.\n\n'Too good,' he says, eventually.\n\nI smile, encouraged, and push down more, concentrating on the sensations of tightness and heat and stretching, tilting my hips back a little to feel some pressure against my clit. A short laugh escapes me. One of his hands brushes my chin and up to my cheek. \n\n'Alright?'\n\nI nod.\n\n'Sorry. I just need to take my time,' I explain.\n\n'Don't apologise, Elizabeth.'\n\nHe presses a fingertip to my clit, gently, but my hips buck, causing him to thrust upwards into me, and we nearly bump heads. Laughing but hissing too, I try to adjust myself and relax. He helps by using both hands to rub generous circles around my hips and back and down to my ass. This feels really good; seems to do the trick as I feel myself relaxing and widening out around him.\n\n'Mmm. Better. That feels so nice, Rob.'\n\nI look back up into his eyes. He's keeping them open for me. \n\nI kiss him, I can't not. He hums into my mouth.\n\n'Elizabeth.'\n\nI press my hips downwards some more and in a glorious rush, I've taken all of him inside me; it's as though he's pushed all the air from my body and I fight for breath for a couple of seconds, shocked and delighted at how much he fills me, exalted I've been able to fit him in me at all. I drop my head, heat racing through me, as we both sit still, staying in this moment with each other. I'm just about used to the feel of him when he raises my chin in his hand and holds his palm against the side of my face.\n\n'Do you have things you need to be home for this weekend Elizabeth, or could you stay here for a few days more?'\n\nI tip my head, off-balance, totally unprepared for this.\n\n'It's Friday tomorrow, so -- could you delay going back to Chicago until Sunday?'\n\nHis eyes won't release mine as he waits for me to say something. Lunch with one of my oldest friends on Sunday, laundry, buying a birthday card for my niece, whether my plane ticket is remotely flexible or not -- these things dart across my mind while at the same time I'm wondering what he's really asking me.\n\n'If money was no object. Elizabeth?'\n\nHe runs his hands down the sides of my legs, caressing my skin.\n\n'It's hardly fair to ask me something like that, Rob, given the position I'm in,' I manage to say.\n\nHe grins, suddenly.\n\n'But -- is it possible you could stay until Sunday?'\n\nI shiver at the mad impossibility of it.\n\nBut nod.\n\nHis hips shift beneath me, blowing any rational thought out of my mind.\n\n'God, Rob, do that again.'\n\n'What, this?'\n\nHe shifts again, and it's as good as I thought the first time. I tighten over him a little as he does it again, then again. His eyes drift closed as he settles into a gentle, almost playful rhythm, his head back on the headboard, his hands resting on my ass. The sensations are delicious. I tremble and pull on his cock with my insides. \n\nIt takes a while to understand it's me making the gasping noises. He's holding me more firmly now, his thrusts less gentle. I tip forwards. His eyes fly open, his lips parted; I think it's one the most beautiful sights I've ever seen. There's greed and lust in those eyes, but they are kind too; a softness in them. \n\nSomehow, he's moving us down the bed, pulling me with him, his arms clamping me to his chest then one arm moving to my ass to keep me tight to him, rolling us over until I'm underneath him, my back pressed into the cool linen of the bedsheets.\n\n'Is this alright?'\n\nHe raises his chest, resting his weight on his arms either side of me.\n\n'I don't want to crush you,' he's smiling, kissing me with short, sweet nips and licks.\n\nI arch my back, enjoying the different feel of him in this position. No longer an intrusion, but part of me.\n\n'Try me.' I can barely whisper.\n\nHe tries out a deeper thrust and, again, I have that feeling he's pushing all the air from me. It almost forces a giggle out of me, it's so good. He does it again.\n\n'Keep doing that, Rob, it's amazing. You make me feel amazing.'\n\nHe grunts -- the loudest noise I've heard from him since we got in the room -- thrusts into me again, reaching into me more deeply, then again, until we're sliding and grinding into each other, his arms and abs rippling and flexing over me. He pauses, our breathing sounding so loud now. I bump my hips to his in frustration, but he smiles.\n\n'I know it's ridiculous, but I almost don't want to come, this feels so good just doing this.'\n\n'Oh.'\n\nMy eyes are in danger of filling up for the second time tonight. He presses his mouth to mine, his arms seeming to tremble on either side of me. \n\nI pull my legs higher over his butt as he moves his hips again.\n\n'I know what you mean, Rob, but, I want you to.'\n\nHe raises his chest up, shoves a hand underneath me to lift my hips higher, and the different angle and his harder thrusting is too much to bear. Our breathing has become totally ragged, both of us driven on by the friction of his cock moving inside me as he pulls out, almost completely free of me, before plunging back in, smooth and hot. It roars in my ears and convulses through my body, taking complete possession of me, straining against him, squirming, pinned down by his weight, my arms flung wide.\n\n'Fuck. Fuck. Oh. Fuck.'\n\nSurprised at the sound of my own voice. Surprised at hearing myself at all, and I wonder how long I've been unaware. Opening my eyes, I see him watching me with great intensity, his eyes wide and dark, and I frown, tiny claws of embarrassment scratching at me.\n\n'I'm going to make you do that again, Elizabeth.'\n\nThe look on his face suggests he's not joking. He pulls himself back to sit on his heels, dragging me with him. As he makes his first thrusts into me from this new position, I'm still fighting for breath.\n\n'I'm not sure I can, Rob,' I protest.\n\nBut he's not having that.\n\n'Yes, you can. You will.'\n\nThat alone, the confident, almost arrogant look he gives me is almost enough to make it happen, but I fight it. I want it, but fight it at the same time. I want to feel him, to see him, losing his control, make himself as vulnerable to me as I've already been with him. He closes his eyes over me, each thrust feeling deeper than the last, each one pushing me harder into the mattress. It's rising in me again, unbelievably, but I keep my eyes fixed on him, on his face. Feeling him as he gets closer to his release. And then, there, his breathing almost stops, his back and thighs go rigid, his face almost completely still. I wait with him; it must only be a second or two but feels more than that, until he grunts, still quietly, and thrusts; one; two; three; more -- flooding me. I cramp around him again, my body wanting to have him even more deeply.\n\nI pull him down to me as he relaxes and slides both of us until I'm flat on the bed again, his skin slick with sweat, his muscles shaking. I'm still rotating my hips around him, gasping through the last contractions, when he turns my head to his and presses his mouth over mine, his eyes bright beneath his eyelashes. We kiss. And then we're half laughing, half kissing, sharing our exhilaration with each other. I open my body out to feel as much of his against mine as possible, the adhesion of his skin on mine, the movement of his muscles as he catches his breath.",
        "Gradually, I become more aware of noises from elsewhere. High heels tapping along the sidewalk below; two people talking as they walk by my room along the corridor outside, the sound of glass bottles cascading into a recycling bin somewhere at the back of the hotel. Rob shifts his weight over so he's almost lying on his side, pulling my hips with him, slipping out of me, leaving a hot sticky trail on my thigh. One of his hands is lazily stroking my birthmark. I guess he likes it. \n\n'Are you alright, Elizabeth?'\n\nAnother giggle bubbles up past my throat. \n\n'My God, Rob, I hardly know what to say.'\n\n'Say you'll stay for the weekend.'\n\nHis eyes look serious. His face looks serious too.\n\n'Are you serious about that?'\n\n'Never more so.' \n\nHe props his head up on one arm. 'Lucia, my brilliant PA, can make it happen. You can stay on here at the hotel for the additional nights. Or, if you feel you want to, you can stay at my house. I promise you I'm not an axe murderer. I can probably provide credible written references on that point, if you'd like.'\n\nA small smile plays over his mouth.\n\n'You are serious, aren't you?'\n\n'Yes.'\n\n'You make it sound so simple.'\n\n'It is. So long as it's not mucking up anything important for you at home, it's just a matter of making the right arrangements.'\n\n'And paying for them.'\n\n'That too. But it would be a pleasure for me to do that. If you'd let me.'\n\nI stare at him.\n\n'Listen, you can ask me anything about myself. Anything at all. But first, I need to use the bathroom, and I'm also pretty hungry. Are you?'\n\nI laugh at him now.\n\n'Sure.'\n\nHe pees and washes his hands in the bathroom, then sits down on the edge of the bed.\n\n'What are you hungry for?'\n\nI shrug.\n\n'Anything that's like toast and real butter.'\n\nHe grins, picks up the phone on the bedside table.\n\n'Hi, yes, this is Rob Montague,' he's saying. 'Yes, hello Monique, very nice to hear you too. Listen, I'm staying in room --,' he turns to me with a raised eyebrow.\n\n'Twelve,' I whisper.\n\n'-- twelve, and we'd really love some hot toast and butter. Do you think Macek can rustle that up for us? Um, yes, hot chocolate would also be nice, what a good idea. Yes, great. That'd be great. And Monique, put this on my tab, will you? -- No, I haven't seen her tonight, I didn't know she was here actually. OK. Thank you. Yes, you too.'\n\nHe stands up again, goes back to the bathroom, returning with the two bathrobes that were hanging on the back of the door, dropping one on the bed for me.\n\n'I could look at you naked for the rest of my life, Elizabeth, but you may want this for when Room Service arrives,' and he bends down to kiss me.\n\nWe are still kissing when there's a light knock on the door. He throws the robe over his shoulders, closing and tying it before opening the door. I pull the sheets over me.\n\n'Mr Montague!'\n\n'Stefan, how are you?'\n\nI guess he knows this guy too. I watch as he chats with him about this and that while Stefan sets down a tray laden with toast, a pot and two cups, a pretty posy of blue and white flowers and two heart-shaped chocolates laid out on the linen. Rob touches him lightly on the shoulder as he leaves the room, still murmuring something to him, Stefan listening and nodding, closing the door after him.\n\n'Toast, Elizabeth!' \n\nI unwrap myself from the sheets and slip into the robe which is, of course, far too big for me. I roll up the sleeves and sit at the tiny table opposite Rob. The toast is hot and delicious and the salty butter is dripping from it onto my chin. \n\n'Ok, Rob Montague, I think you need to explain yourself, don't you? How is it you know all the people who work here?'\n\n'Ah, yes. Well, as it happens, my sister owns this hotel.'\n\nI raise my eyebrows and gesture for him to tell me more, recalling then the petite blonde in reception earlier this evening. That was his sister?\n\n'Hmmm.' He chews on another mouthful of toast. 'Between us, we own quite a lot of property in this part of London.'\n\n'I see. But do you stay here often?'\n\n'Ah, no. I usually use it for meeting clients, or as a place for them to stay.'\n\n'Hmm. How funny. And strange. I've stayed here many times when working in London. I prefer it to the big hotel chains that work usually books, so I switched to staying here when I walked by it one time.'\n\nWe both take a moment to think about that.\n\n'You were here all along, almost within reach,' he murmurs, taking my hand and holding onto it.\n\n'So it seems.'\n\n'But we might never have met if it weren't my sister's birthday next week and if my meeting hadn't finished early yesterday and -- well, all sorts of permutations.'\n\n'I have a sort of confession to make, Rob.'\n\n'Oh?'\n\n'I kind of followed you into that shop yesterday.'\n\nHe raises his eyebrows at me, more in curiosity than surprise.\n\n'Did you?'\n\n'Yes. You almost walked right into me on the street, you were typing something into your phone. You had such an intense look of concentration on your face that even when you apologised, I knew you hadn't really seen me.'\n\nI carry on, liking the look he's giving me now.\n\n'And I wondered what it would take to have you give me that same intense look. So I turned right around and followed you into that shop. I'd been in earlier and loved the sweaters, and seeing you looking at them like that --,' I shrug.\n\n'I'm a lucky man, then.'\n\n'I think I'm the lucky one.'\n\n'What else do you want to know about me? Before you make up your mind about the weekend?'\n\n'You'd pay for me to fly out on Sunday?'\n\n'Yes.'\n\n'That amount of money ......?'\n\n'.... Isn't important.'\n\n'You and your sister -- you own a lot of property then?'\n\n'Yes.' \n\nHe's tapping one of the chocolates on the tray with a fingertip, lazily tracing its shape.\n\nThere's another light knock at the door. Rob seems to have been expecting it. I sit at the table, thinking about his handmade clothes, the way that the owner of the Chinese restaurant knew him, wondering if it was his sister I saw earlier. When he returns, he's holding a brand-new toothbrush, which he sets down on the table.\n\nHe leans forward and takes both my hands in his, holding them together, as if in prayer, almost.\n\n'Look, Elizabeth, I know this is probably a most improbable offer. But it's a genuine one. I can pay for your flight home on Sunday, and for staying here -- anything. I won't expect a repeat of tonight, as this has been somewhat sudden.' \n\nHe gives me a smile and presses my hands together more tightly. \n\n'But I want to spend as much time with you as possible before you go back to the States, in case you disappear, never to be seen again.'\n\n'Ok. It's completely crazy, but, ok, I'm going to take you up on it, Rob. I'll fly home Sunday. And spend the weekend with you. And --,' I cast my eyes over to the bed, 'I'd quite like a repeat of that, if that'd be ok with you?'\n\nI wish I had the words to describe the expression in his eyes.\n\nI go on, 'And I want to stay in your house. Your sister's hotel is very nice, but I want to poke around in your sock drawer to get to the heart of your darkest secrets, or wherever it is you hide them. If you're a bona fide axe murderer, then I say let's get that out in the open as soon as possible.'\n\n'I knew you were a sensible woman.'\n\nI laugh, my heartrate accelerating in my chest as the implications of the last two days start to turn over in my mind.\n\n'Now, would you like some of this very rich hot chocolate? You might need the sugar for sustenance, as we only got a little way down the list of things I wanted to do with you earlier.' \n\nHe tips his chin over to the bed.\n\n'Greedy,' I tease him.\n\n'Mmmm. And over the moon I've now got the whole weekend to persuade you to take up that job offer here.'\n\n'Aha. That's the other confession I need to make, Rob.'\n\nHe pauses, holding the chocolate pot poised over my cup, ready to pour.\n\n'I accepted the offer this morning.'\n\nHe returns the pot to the table, slowly and silently. \n\nAnd in one sure, sudden movement he's scooped me out of my chair and onto his lap, as if I weigh nothing at all.\n\n'Now I know what a lucky man I am.'\n\nHe kisses me, tasting of toast and butter. Which I imagine I must taste of too. Neither of us mind. His hands are back in my hair, pulling and teasing it through his fingers, scratching at my scalp. Easing away from his face, I focus on his eyes.\n\n'What is it, Elizabeth?'\n\nIt's eerie how he picks up on when my thoughts shift.\n\n'I'm just thinking you're a man who seems very secure in knowing what he likes.' I raise my eyebrow at him, starting to feel the heat rising to my face. \n\n'Hair, for one thing. Underwear -- no -- clothes, you really like clothes. Tailoring. The fabrics and textures. Don't you? And this --,' I gesture at us and vaguely over to the bed again. \n\n'You don't seem out of practice with this. At all. The opposite, if anything.'\n\n'What are you asking me?'\n\n'I guess I'm saying -- no -- asking what the difference is for you, between dating women and sex. You said you're out of practice with the former, but not the latter, right?'\n\nHe smiles a little. \n\n'You certainly have a lawyer's mind, Elizabeth.'\n\nI wait for more, watching him think about what he's going to tell me next.\n\n'There is a woman. We've had an arrangement for several years now,' he says, gauging my reactions, his hands still in my hair, resting on my shoulders. 'I pay her.'\n\n'She's a --,'\n\n'-- an escort. Yes. A very discreet one. It's not her only job. In fact, she moved to Paris for her other job a year ago.' \n\nHe pauses, then continues, 'What are you thinking?'\n\n'I guess I'm a little shocked,' I admit. 'But again -- more that you've told me, not that you've -- what's the right way to say it?'\n\n'Paid for sex?'\n\nA small smile plays over his lips, but his eyes are still serious.\n\n'Mmm. That.'\n\n'Celibacy isn't for me.'\n\n'And masturbation just reminds you of boarding school?'\n\nHe laughs, 'Absolutely! Nothing sexy about it -- it's just functional.'\n\nI shift in his lap.\n\n'What's she called?'\n\nHe looks surprised.\n\n'Catherine,' he replies. \n\n'If this -- if we --,' I chew my lip, annoyed I can't find a way to phrase what I want to say.\n\n'Catherine and I have a professional relationship and she's always known it will end if I were to find someone to love.'\n\n'Would you miss her?'\n\nHe tips his head to one side. \n\n'Yes. I like her. But it was a relationship that wasn't designed to get out of the bedroom, whereas I'd rather like one that was a relationship everywhere. Going out to the theatre, squabbling over Christmas, having lunch with my sister, taking my goddaughter to Legoland, holidays in the sun -- that sort of thing. And in the bedroom. A relationship like that wouldn't give me reason to miss her.'\n\n'You talk about her in the past tense.'\n\n'Yes. Since she's been in Paris, we haven't seen each other very often.'\n\n'I see.'\n\nI hesitate to ask more. You get to a certain age, it doesn't do much good to expect to know everything about another's past life.\n\nBut -- 'Did you see her often?'\n\n'Every couple of weeks,' he shrugs, 'sometimes more, sometimes less. Depended on how busy I was with work. That sort of thing. Does it bother you?'\n\nHe fixes me with his eyes.\n\n'I don't think so.'\n\n'We were very discreet, and very safe with each other.'\n\nHe reaches around me to pour hot chocolate into our cups, and holds one up to me.\n\n'And what about you, Elizabeth? What history am I taking on with you?'\n\nI sip from the cup. It's devastatingly rich.\n\n'Just, you know, a handful of unsatisfactory relationships with vanilla, uptight corporate lawyer types. Men who wore off-the-peg suits and delivered off-the-peg sex. None of them anything to write home about. I was beginning to think the single life was the better option.'\n\n'Harsh.'\n\n'I think I'm only just starting to realise how off-the-peg the sex has been up until now.'\n\nI feel rather than hear him laugh, his stomach and chest moving, but then he's kissing me again, his eyes crinkling up. I push him away.\n\n'What? What's so funny?'\n\n'You can't say that sort of thing to me, Elizabeth. You've no idea how conceited it makes me feel, and I don't deserve it.'\n\n'So you're kissing me to shut me up?'\n\n'Mmhmm. Are you objecting?'\n\nI feel driven to tease him more, his own candour freeing me from my usual restraint.\n\n'Not really. But tell me what else you want to do with me, Rob.'\n\nHe breaks into a big smile, and moves his hands back to my shoulders, slipping them underneath the bathrobe, my skin warming under his confident touch. He takes his time replying, apparently more interested in stroking me. I'm not complaining, there's something so purposeful about how he touches me, his eyes lowered in concentration. I exhale, a little self-conscious at how loud it sounds.\n\n'I'd like you to do all those things with me, Elizabeth,' he says finally.\n\n'Theatres, Legoland, lunch with your sister; all of that, you mean?'\n\nHe smiles, his eyes flicking up to mine. \n\n'You won't have much choice in the latter, I can assure you, after this. I'm expecting her text in about seven hours' time, perhaps less, depending on when she checks in with Monique at the desk. Don't worry, no-one's going to be divulging your personal details, because that's breaking the law. But I'm in for a hefty and personal interrogation in the morning about precisely who you are.' \n\nHe halts his hands, briefly and narrows his eyes. \n\n'Hm. Do you think they noticed us earlier, when we were in the lobby downstairs?'\n\n'Kissing each other like teens?'\n\n'Mmm. Then.' \n\nHis hands resume their work, moving off my shoulders and down my arms.\n\n'I've no idea, honestly, but it sounds like we should take this issue head on and arrange to meet up with her as soon as -- and set her mind at rest?'\n\n'Would you do that?'\n\n'Sure.'\n\nHe strokes my cheek before returning his hand to my shoulder. My skin feels alive, almost burning, from his relentless hands.\n\n'You're brave. Lizzie's a force of nature.' \n\nHe leans over and plants his lips on the flesh he's exposed at the top of my shoulder. \n\n'And a black belt in interrogation techniques.'\n\n'Sounds fun. I'm pretty good at forensic examination myself.'\n\nHis lips smile against my skin.\n\n'Of course you are.' \n\nHe sighs. Sits back in the chair, adjusting his position.\n\n'Am I getting too heavy?' I ask.\n\n'Not at all. Stay right where you are.'\n\n'You look like you're thinking about something else, Rob.'\n\n'There's an event on Saturday night I really should go to, and I want you to come. It's black tie, so we'll need to find you a dress to wear, but that won't be a problem. Will you come?'\n\n'What is it?'\n\n'It's a dinner -- a fundraiser for a charity we support.'\n\n'Who's we?'\n\n'Lizzie, John and me. It's a charity that supports bereaved children. John and his little girls have had a great deal of help from them since Ginny died.'\n\n'Ok. Yes,' I'm surprised, pleased, that he wants me to go to something so important to him, to meet some of his closest friends. 'If you're sure?'\n\n'Well, I don't want to go without you.' \n\nHis arm is lying across my lap, and he takes my hand in his. 'I should have thought to mention it earlier, but my mind is -- distracted.'\n\n'Distracted? How?'\n\n'By you.' \n\nHe seems to lift and gather me up closer to him. \n\n'You are very distracting. So many possibilities.' \n\nWhen was the last time he blinked? His eyes seem enormous again.\n\n'You're looking at me like you want to consume me, Rob.'\n\nHe grunts. \n\n'Mmm. What I want to do is make love to you.' \n\nHe reaches to kiss me. \n\n'A lot. Frequently.' \n\nAnother kiss. \n\n'All the time. Every chance I get.' \n\nAnother kiss.\n\nHeat races up and around my body. He draws me closer, pushes his hand into my robe.\n\n'And fuck you. That too, Elizabeth, as and when the mood takes us,' as he slides inbetween my thighs, smoothing his palm along my flesh.\n\n'But not sex, off-the-peg, or not. Never just sex. You're too good for just that.'\n\nHis fingers are grazing against me and I open my legs out a little, wondering where the idea that the British are reserved comes from.\n\n'How do you feel about that, Elizabeth?' \n\n'I'd like that too. Very much,' I whisper, trembling at his touch, his relentless stroking and smoothing and caressing. \n\nIt's as if his hand is drawing all my blood vessels and nerve endings together and dragging them up and down my thighs.\n\n'Rob what are you doing to me?'\n\nHe pauses, looks up into my face.\n\n'Hmm?'\n\n'Your hands. I don't know what you're doing with them, but I've never felt anything like it.'\n\n'Really? But your skin has the most beautiful texture. Like sand-washed silk.'\n\nI raise an eyebrow at him, thinking this must be an exaggeration. His hand squeezes my thigh, making me snatch at the air in surprise.\n\n'It's a process that abrades the surface of the silk, then softens it, and gives it this deeper texture. Almost like suede. Your skin is like that. All over. I can't get enough of it.'\n\nHe looks a little self-conscious then, and it makes me smile inside.\n\n'You really do know a lot about textiles. How is that?'\n\n'My grandfather was a tailor.'\n\n'Here?'\n\n'Yes. Berwick Street,' he nods, resuming his work on my skin.\n\n'He did well enough to buy the building his workshop was in, and that's how we got started in property.'\n\nHis fingers have found me. Again, I'm shocked at how he makes me feel and I'm opening myself out to him, pushing myself onto his hand. The robe drops from my shoulders, suddenly, making me shiver as it progresses down my arms and comes to rest at the crook of my elbows. He shifts his position beneath me, moving his hips forward on the seat, pushing his own robe apart. \n\n'Here?' I ask.\n\n'Mmm,' he smiles, 'Let's see if there's room.'\n\n'Will the chair hold out?'\n\nWe're both smiling, almost giggling, as I shuffle myself until I'm facing him, and we quickly realise it's going to be too awkward.\n\n'If I was a catwalk model with long enough legs to reach the floor, this might work.'\n\nHe kisses me.\n\n'But you wouldn't be here with me if you were, Elizabeth,' and he lifts me up, carries me to the bed, and sets me down, shucking his robe off in one fluid movement.\n\n'Very smooth,' I tease him.\n\nHe acknowledges it with a small curl to his lips, but is urging me to move up the bed, then pulling me to him, his hands holding my face to his. We kiss, his eyes drilling into me so that I have to lean away from him for a moment or two to catch my breath.\n\n'Too much?' he asks, his voice gentle.\n\n'Yes,' I breathe, 'Too much,' and I run a hand down his side, tipping back to face him.\n\n'But I want it, Rob.'\n\nAgain, that look in his eyes. It sets fire to me, but it's nothing to what he does next. I'm hardly aware of where his hands are until one of them pushes my thighs open, tipping me back a little, then slips inbetween, pressing up against me, dipping into me, briefly, then retreating.\n\n'What --?'\n\nBefore I can form the question, I'm watching him draw his hand to his mouth and licking his sticky fingers, his eyes still steady on mine. My breath catches in my throat.\n\n'We taste good together,' he's saying but I'm pulling his hips toward me, feathering my hands along the length of his cock, enjoying the way his eyes flash at my touch. \n\nI shuffle myself closer and downwards, pressing closer, lifting my top leg over him. He's starting to smile now, getting the idea about what I want from him, pushing his thigh inbetween mine. We both shiver as his cock slides along me, where I'm still wet.\n\n'Hmm, that feels so nice,' I murmur, feeling the heat building up inside me.\n\nI tilt my hips and use my fingers to help guide him towards me, to where I want him inside me. I sense a change in Rob's breathing and look up into his face. His eyes look quizzical.",
        "'Are you --?'\n\n'Just go slowly,' I reassure him.\n\nHe does exactly that. Enters me so slowly I think I might die of the anticipation, of the sensation of his smooth cock moving in, just a little way, then out, then coming out of me altogether to rub up against my clit, and then back down and nudging his way inside again.\n\n'Oh my God, Rob, now you're definitely killing me,' I half-complain, half-laugh, thinking I'm not far off coming just from the way he's bossing his way around my pussy.\n\nHis hand grabs my ass much more forcefully, pulling my hips onto him, his cock sinking further into me, forcing a guttural noise from my throat as I'm reminded of how he feels.\n\n'I'm trying not to go too hard, Elizabeth.'\n\nHe's breathing pretty heavily himself, and he pulls me further over so I'm on top of him.\n\n'Better if you're on top, so I don't hurt you,' he pants, his eyes looking as glazed as I imagine mine do. \n\nI press my lips to his shoulder while we both concentrate on how we fit together, on how he's widening me out again, his hips rotating beneath me, his hands holding my ass, patiently driving his cock into me until we're down to the root. We both sigh and hold still together. One of his hands is reaching for my face, raising my head up from his chest, pushing my hair away from my face.\n\n'You are lovely,' he whispers, and I see how he's coated in sheen of sweat on his face, neck and chest.\n\nI reach for him, to touch my mouth to his. His kiss is so tender it almost stops my heart.\n\n'What is this?' I wonder aloud.\n\n'The best feeling of my life,' he replies, grazing my lips with his. \n\nI return the kiss, losing myself in his naked blue eyes. We stare at each other as he massages his hands down my back and starts flexing his hips.\n\n'Rob,' but that's all I'm capable of uttering.\n\nHe rolls us again, so we're both on our sides, and lets his hips do the moving for both of us, making his cock grind against me, into me, then back out and grazing up against my pubic bone. I'm already feeling it, how it's coiling up in my belly, using all my muscles to meet his hips. I get transfixed at how his chest is moving in front of me; arch my back to push myself closer to him, to feel him against as much of my body as possible. \n\n'Elizabeth.'\n\n'Rob.'\n\nHe's breathing more heavily. The feeling of his cock is overwhelming all of my other senses.\n\n'You're not going to hurt me now, Rob.'\n\nHe pauses, but that's not what I want.\n\n'I've gotten used to you now,' I explain, and tip my hips to his to make my point.\n\nA growl escapes his lips and he's moving us again, pressing me onto my back, drawing his knees up and around me, pushing my thighs wider. I've never been with a man who's done that. It feels incredible, the angle of him inside me. I can't hold out any longer. I'm tightening and vibrating over him already.\n\n'Rob, can you feel it?' I pant, wrapping my arms around his back.\n\nHe growls again, louder this time, and I love the sound of it. Love the sounds he's making. And that he's driving into me more quickly and more deeply, working us both up into a serious sweat. His mouth on mine, his breath harsh against my face, working his hips hard into me.\n\n'Oh God. Oh my fucking God.'\n\nI'm losing it, bucking my hips high into him, contracting harder than I can ever remember, feeling like he's pulling me inside out, almost sobbing it's so good. His chest vibrates over me, his heart banging hard, his back tensing up, growling.\n\n'Let me have it,' I blurt out, writhing under him, trapped to him by his hands holding tight to my shoulders.\n\nEvery one of his thrusts is forcing a sound from my throat I hardly recognise as mine. I'm getting out of breath, his energy outlasting my own, the feeling of him inside me getting more and more intense. He shifts, pulling me even harder to him, his head pressed into the side of my neck where I can feel more than hear his breathing -- low, rasping grunts vibrating into my flesh. Just as I fling my arms sideways, taken over by another onset of pulsing contractions I sense him peaking as he holds himself hard and deep inside me and his loudest growl so far crashes into my neck, followed by a few more. How many I can't be sure, I'm so lost in my own pleasure, but I can feel him, can feel how much he's let go, how little of himself he's held back. And before he's finished, he's tugging at me until I'm back on top, lying on him, muttering something that sounds like, '-- not squash you Lisbeth --,' but his breathing is so ragged it's difficult to know exactly what he's saying. \n\nI feel his muscles begin to relax but he's trembling so violently I lie still, listening to his heart hammering away under me, thinking it's a sound I could grow addicted to.\n\nI move my hips and shiver as hot liquid starts to rush down. He obviously feels it too as we're both groping around for one of the bathrobes that must be somewhere on the bed to catch it before it reaches the sheets, neither of us seeming to want to get up. I win, snagging the robe with my right hand and dragging it toward us. We both catch our breath when I raise up and away from him a little, then stuff the robe inbetween us, unable to move much more than that. I drop back down, lying on top of him, still listening to his breathing as it regulates. \n\nI don't know how long we lie like this. My mind is empty. \n\nAt some point, Rob drapes the sheet over both of us, the soft linen whispering over my skin, tickling the back of my legs, making me twitch. He rubs both my arms then, and that's when I realise he's returned to himself; has come back down to earth. I'm not sure I'm ready to make any sense, but I want to look at him anyway, so I raise my head up and see he's already watching me. I tremble. His eyes are so open, and so full. I reach up to touch his mouth, afraid to speak, watch his eyelashes flicker when he feels me on his lips. He licks and kisses my fingers, pulls them inside his mouth, all the while his eyes never leaving mine. I've never felt so intimate, so exposed, so naked with a man. \n\nWords are going to be inadequate, I think to myself; too blunt an instrument for expressing anything like how I'm feeling; how he's made me feel. I exhale.\n\n'I'm paying for my half of the flight, Rob,' I finally say.\n\nHis eyes widen out and seem to get brighter, even fuller.\n\n'And all the other flights back here, up until I move here more permanently.'\n\nJust getting the words out has drained me.\n\nHe hugs me hard with his whole body, kisses my forehead and presses his head tightly to mine.\n\n+++++ "
    ],
    "authorname": "Sara2000Z",
    "tags": [
        "mature lovers",
        "oral",
        "soho",
        "redhead",
        "silk",
        "valentine's day"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/late-valentine-2"
}