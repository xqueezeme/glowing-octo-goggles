{
    "title": "The Family Pt. 01",
    "pages": [
        "Kerry had some tough decisions to make. His roommate John had left him in a lurch. They had just renewed their one year lease for their two bedroom apartment when John lost his job and decided to move back into his parents house. That wasn't an option for Kerry. His foster parents kicked him out of their house 2 years ago - the minute he turned 18. He spent months sleeping in his car or on the couch of some random friend. It was a little over a year ago when he was able to convince John to split rent with him for this current place.\n\nMoney was tight, but the bills were paid and he didn't have to miss any meals. The job at the local hardware store paid well enough, but not enough for him to afford the entire apartment on his own. He had just enough money saved to make it one month but he would be in trouble after that. His love life was a dud as well, so there was no girlfriend or boyfriend to turn to.\n\nHe considered finding a second job, but working another 20 hours per week would probably still leave him short each month and burned out to boot. Of the few friends he had, none were in a place to help split rent with him. After talking with the apartment manager, the best he could offer was to help Kerry find someone else to take the lease off his hands. Even worse, all the single bedroom apartments were taken, so that would have to be an option of last resort.\n\nKerry was nervous about the situation, but he had learned to fend for himself while in the foster care system. His real parents abandoned him when he was just 5 and his years bouncing between foster homes had taught him that he could only rely on himself. He was kicking himself now for even wanting to share an apartment, but it made so much sense financially and John had been one of his few close friends. To his credit, John felt terrible about it and offered to ask his parents if Kerry could live with them for a bit, but it wasn't an option in his mind.\n\nAfter two weeks with no news from the apartment manager and the rent coming due pretty soon, Kerry knew he had to take action. He went to various sites online to try and find work but very few places in the area were hiring for part timers. He tried to find jobs that paid more than the hardware store, but he wasn't qualified enough to nab one of them.\n\nAs each day passed, his desperation grew. He had called an endless number of companies and had interviewed twice, but nothing was working out. By the end of the week, Kerry had gotten nowhere and he was running out of companies to call.\n\nWhen he woke up on Saturday, he jumped on his iPad and started the search again. While looking for jobs he came across a nondescript posting that he nearly scrolled past.\n\n\"Special dinner servers needed for elite and particular clientele. One evening for 5k. Call for interview. \"\n\nHe looked at the small ad and thought it had to be a scam of some sort. One evening for 5 thousand? That was insane.\n\nYet, he couldn't stop thinking about it. His curiosity had taken over. He punched the number listed on the ad into his phone and placed the call.\n\n\"You've reached the voicemail of Chloe Felder. If you're calling about the need for dinner servers, leave your name, number, age, sex, height and weight after the beep. If you don't hear back from me within 2 days, we're not interested. *beeeeeeep*\"\n\n\"Uh, hi. My name is Kerry and my number is 555-1948 and I'm twenty years old, male, five foot five and I weigh one hundred twenty five pounds. I'm really interested in finding out more about this opportunity. Thanks.\"\n\nAs soon as he ended the call, he had immediate regrets. Why did he give out all that information without hesitation?\n\nHe shook it off and continued to spend his day looking for a new job or a part time job that he could potentially take on. After a few hours of dead-end phone calls, his phone rang from an unidentified number. He normally sent those straight to voicemail, but something told him to pick this one up.\n\n\"Hello?\"\n\n\"Hi, is this Kerry I'm speaking with,\" the feminine voice with a sophisticated British accent asked.\n\n\"Yeah, who's this?\"\n\n\"Kerry, my name is Chloe Felder. You called me earlier about our need for dinner servers. Are you still interested?\"\n\n\"Yes, I am. Is it really five thousand for one evening of work?\"\n\n\"Yes, but very few people are hired for this and the gentleman who hosts these dinners is very particular about who works his events. I'm going to text you a link after our call ends. If you go to that link, it will let you securely upload recent photos of yourself. I need a photo that shows your freshly shaved face up close and one that shows your body, preferably in a swimsuit or underwear. If you're not comfortable doing this, then this work is not for you. Should I see that you haven't uploaded pictures within the next two hours, I will assume that means you are not interested and you will not hear from me again. If you are, and you upload the pictures as requested, I will contact you again to let you know if we are interested or not. Have a nice day. *click*\"\n\nWith that, the call abruptly ended.\n\nKerry was perplexed, but before he could think about it any further his phone buzzed, indicating that he had received a text. There was an abbreviated link, just as she said. With his curiosity piqued, he logged into his iPad, pulled up the browser and went to the site. All that came up was a blank page with two buttons that said \"Picture 1\" and \"Picture 2\".\n\nKerry decided to go shower and shave before uploading pictures. Once done, he came back into the room and took a close up of his face and another of himself wearing nothing but his boxer briefs. He uploaded the pictures to the site and waited by his phone.\n\nNo more than 10 minutes had passed when his phone rang.\n\n\"Hello?\"\n\n\"Kerry, this is Chloe. My client thinks you are a suitable candidate. The next step is for an in-person interview with me. I can meet you tomorrow at 8AM. I will text you the address of a local coffee shop in the city and we will meet there. Do not be late. *click*\"\n\nThis lady did not mince words. She was direct and to the point.\n\nHis heart was pounding in his chest. This was incredibly mysterious, yet he wanted to find out more. Plus, what was the harm of meeting a woman in a coffee shop? He didn't know if he would take this job, but he definitely wanted to learn more about it. He decided to at least meet with Chloe the next morning and make his decision once he knew more.\n\n---The Interview---\n\nThe next morning, Kerry woke up early and made sure to drive to the coffee shop with plenty of time to spare. At 7:50, he walked inside and sat in a chair in the back corner. He was the only patron inside. Five minutes later, he saw a silver Mercedes Benz pull up next to his run-down car. A woman with an hourglass figure stepped out of the car and made her way inside.\n\nShe looked at Kerry and gave a knowing smile. She walked up to the counter, placed an order and walked over to him. He stood up to greet her.\n\n\"Hi, Kerry. I am Chloe. Please, have a seat.\"\n\nShe was drop-dead gorgeous. She was easily several inches taller than him with large, round breasts and a perfect bubble butt. Her figure was on full display because of her tight blue dress that cut off just above the knees. She had long, curly black hair and her eyes were a crystalline green that seemingly shimmered in the light. Her lips were colored ruby red and the soft features of her face made her seem both gorgeous and approachable.\n\n\"I take it you had no problem finding this place.\"\n\n\"I did not. I don't live too far from here,\" he replied.\n\nOne of the women working behind the counter approached with two cups. She handed one to each of them.\n\n\"Thank you, dear. Now lock up,\" Chloe responded.\n\nSuddenly, all of the workers exited the store with the last one locking the door behind her. The building was suddenly empty except for the two of them.\n\nKerry felt nervous but did his best not to react.\n\n\"Oh, don't worry. This conversation requires absolute privacy. My client owns this coffee shop and many others like it. This is to ensure our talk is completely private and uninterrupted,\" she said.\n\nKerry stayed quiet, waiting for her to continue.\n\n\"This dinner party has some very particular requirements that you may or may not be comfortable with. What I'm about to describe to you must remain a secret. You may not share it with anyone you know. Anyone at all. You will be asked to sign a non-disclosure agreement. In exchange for signing this, you will receive one thousand dollars today in cash. Whether or not you decide not to take the position, the money is yours. But should you break the agreement, my client is prepared to... well, let's just say that you should not think about breaking the NDA. Is all of this clear to you?\"\n\n\"Yes,\" he replied softly.\n\nKerry could really use that cash even if he didn't take the job. He couldn't believe that he would walk out of here with a thousand in cash for just showing up!\n\nChloe pulled papers out of her bag and put them on the table. She then signaled to one of the workers to come inside.\n\n\"Read through this agreement then sign here, initial here and date here,\" she said.\n\nThe NDA wasn't long, but it was blunt. It made clear that discussing the arrangement with anyone or even just writing about it would make Kerry subject to a lawsuit for breach of contract and punitive damages in excess of one hundred thousand dollars!\n\nKerry hesitated for a moment but decided that keeping a secret was more than worth it for the cash he would receive. He signed and dated the document. Chloe signed and dated it as well and the employee that had come back inside stamped it, signed the paper as well and went to the back room. When she returned, she handed a copy of the document to Kerry and walked back outside.\n\n\"Ok, so now that all of that is done, here is your cash. This is yours to take, no matter what decision you make today. As for the dinner, here are the requirements. You will be required to dress and present yourself as a woman. You will wear a wig unless your hair is a suitable length, which yours is not. You will be required to wear makeup and your entire body is to be freshly shaved and smooth all over. And yes, that means every nook and cranny. You will adopt a feminine name of your choosing, but one that I will approve of ahead of time. You will work at a private dinner for my client and his guests. You will serve them food and drinks throughout the evening. The event will take place next Saturday between 8PM and 1AM. You are not expected to speak, but if you do, we ask that you use as feminine a voice as you can muster.\"\n\nKerry was stunned. He stared at Chloe as he processed all that she said.\n\n\"Do you have any questions so far?\"\n\n\"Ummmm, no,\" he sheepishly replied.\n\n\"Then I will continue. You are not engaging in prostitution. You will not be required to have sex or perform any sex acts during the event. You will remain fully clothed at all times. If any of the men propositions you or touches you inappropriately, you are to notify me immediately and they will be dealt with poste haste. Should you need assistance with the attire, makeup or body preparation then you should come to the event location four hours early. My team will assist you with any and all of this. This is mandatory for your first time working with us and optional should you join us again in the future. Now, do you have any questions?\"\n\n\"So, basically, I'm going to dress up as a woman and serve food and drinks for the evening?\"\n\n\"That is basically correct.\"\n\n\"And there's no sex or sexual contact required of me?\"\n\n\"Absolutely none.\"\n\n\"And I will be paid the additional four thousand that night?\"\n\n\"No, you will be paid five thousand at the end of the night. In cash. The one thousand today is in exchange for signing the NDA.\"\n\n\"And what if I don't want to do it again? What if I do it this once and decide that is enough for me?\"\n\n\"That's completely fine. The NDA, as you read, is a lifetime agreement. So long as you do not write or talk about the event or anyone involved with it, you can walk away as if nothing ever happened,\" she replied.\n\n\"When do you need to know if I want to do this?\"\n\n\"You have exactly 24 hours to think about it and make your decision. I will text you tomorrow morning asking for your response. If you decide to join us, I will send you directions on Friday evening. Again, you will need to be at the facility at 4PM on Saturday since this is your first time. Do you have any other questions?\"\n\n\"No. I'm good,\" he responded.\n\nChloe stood up and walked out of the coffee shop. The workers shuffled back in and began working again as if nothing had happened. Kerry looked around with a mental haze, unable to fully process what had just happened.\n\nHe eventually left the store, wandered home and tried to stay busy for the rest of the day. He couldn't stop thinking about the offer and the financial relief he would get for just an evening of dressing like a woman. It seemed like a small sacrifice for more money than he'd make in 3 months of work.\n\nAs the night wore on, he thought of how many times he had struck out this week looking for work or a simple job upgrade. He thought of the looming rent and other bills that had to be paid. While the thousand he received today was going to help for the short term, earning an additional five thousand could set him up for months and buy him the time he needed to figure things out.\n\nHe sat on the couch, thinking deeply as the TV mindlessly buzzed away in the background. He began to imagine what it would be like to dress like a woman. He imagined men sitting around, checking out his body as he glided across the room, handing them drinks and food. Kerry suddenly found himself getting unexpectedly aroused as he thought more about it.\n\nHis heart was pounding as he imagined the men checking out his ass as he walked by. The thought of one of those men grabbing his waist and feeling him up made his heart race. His cock was now rock hard as he daydreamed about what it might be like.\n\nKerry quickly opened his eyes in shock. He shook his head violently as if to shake something off of himself.\n\n\"What the fuck was that,\" he muttered to himself.\n\nHe got up, grabbed a bite to eat and eventually settled into bed for the evening. In just a few short hours he'd have to make up his mind.\n\n---The First Time---\n\nLike clockwork, Kerry's phone buzzed at exactly 8AM the next morning.\n\n\"What's your answer, Kerry? Will you be working with us Saturday?\"\n\nHe quickly typed in his response and hit send: \"Yes.\"\n\n\"Ok. Directions to follow Friday evening.\"\n\nWith that, he breathed a sigh of relief. He could get through one evening of dressing like a woman in exchange for financial stability. For now, though, he had to worry about getting to work and going through the normal grind. He got dressed and went to work as he had done for the past couple of years.\n\nThe rest of the week was as boring and normal as every other week. Work, come home and eat, play games or watch television and go to sleep. Rinse and repeat. Each day disappeared into the next until Friday had finally arrived.\n\nBy the time Kerry got home Friday evening, he had all but forgotten that he was going to get a text that night. When his phone buzzed and he looked at it, his heart leapt as he was quickly reminded of what he had in store for the weekend. The text from Chloe had directions on how to get to the facility followed by the message, \"4PM. Do not be late.\"\n\nOh shit. This was really happening! Kerry's mind raced at the thought of what awaited him in under 24 hours. He was nervous but excited. He quickly convinced himself that the money was what he was excited about, but deep down he knew there was more to it. He pushed those thoughts down and focused on the financial windfall he'd be able to celebrate on Sunday.\n\n\"Just get through tomorrow night,\" he thought out loud.\n\nThankfully, the long day at work made getting to sleep a foregone conclusion.\n\nKerry went through some of his normal chores on Saturday before hopping into his car at 3PM to make the drive to the facility. When he made the last turn, he saw an enormous, gated estate. He pulled up to the intercom at the gate at 3:45. Before he could reach out to buzz it, a voice came through the speaker.\n\n\"Good, you are early. When the gate opens, take the third road on the right. Drive to the end of that road, take a left and go to the house at the very end of the road.\"\n\nThe giant, black gates began to slowly move inward. He drove as instructed and found himself at the designated house after a few minutes. Chloe was waiting at the door.\n\n\"Kerry, I'm glad you're early. This is Savannah. She will be assisting you tonight. Please follow her to your private quarters where you will get ready for the evening,\" she said.\n\nBehind her was a pretty girl with long, blonde hair wearing khakis and a button up white shirt. She smiled and started walking into the house. Kerry followed behind her.\n\nAt the end of the hallway she opened the door and invited him in.\n\n\"Mr. Bowen, the bathroom is through that door. Please go ahead and take a shower. Use the soap that is on the shelf. It is a new bar. Use it to scrub yourself from head to toe. When you are done, let me know and I will come in to help you shave. Please do not be shy. I have seen it all before,\" Savannah robotically instructed him.\n\nHe smiled, nodded and proceeded to undress and take a shower. The soap smelled of lilacs and berries and made his skin feel cool and incredibly smooth. He scrubbed from head to toe as instructed and took his time enjoying the hot water rain down on him in the extraordinarily large shower. He cut off the water, wrapped himself in a towel and called for Savannah.\n\nShe stepped in, smiled and said, \"Lose the towel.\"\n\nHe shyly tossed it aside. She looked him over and said, \"Oh good. You're not particularly hairy. This shouldn't take too long.\"\n\nShe grabbed a razor and some cream and dislodged the shaving head from the wall and turned the water back on. She immediately began applying cream to his legs and started shaving. He could tell that she had done this before as she quickly shaved off the hairs, rinsing the blade periodically with the shower head.\n\nShe moved him around in the shower like a doll, shaving every inch of his legs. She turned him around and nonchalantly cupped his balls and began applying cream all over his genitals. He quickly became aroused and embarrassingly said, \"I am so sorry.\"\n\n\"It's normal. Don't worry about it,\" she replied dryly.\n\nShe proceeded to shave his balls and shaft. She turned him around and muttered, \"Wonderful. You have no body hair. This makes my job easier. Lift your arms, please.\"\n\nHe lifted them and she applied the cream and quickly shaved under his arms. In under 10 minutes she had managed to shave his entire body from the neck down. She reached over and squirted lotion into both of her hands and began applying it all over his body. She rubbed it in gently but quickly. The fragrance was strong and feminine. Kerry found himself fixated on it.\n\n\"Your face appears to be freshly shaved. I think we can avoid that for today,\" she said as she looked him over.\n\n\"Ummm, is there a reason I have to be shaved from head to toe?\"\n\n\"You won't act feminine if you don't feel feminine. Shaving like this helps you get into the right mindset,\" she replied before adding, \"Oh, and if you decide to join us again, we could begin working on laser hair removal. We have our own equipment on premises. Or, if you'd prefer, we could do waxing instead. Also, your hair is already somewhat grown out. I bet you could grow it out to an acceptable length in 8 or 9 months with the right diet,\" she said in an analytical voice.",
        "\"I... uh, I'm not sure,\" he began to reply.\n\n\"Oh, I know. You're not sure if you'll do this again. Blah blah blah. I've heard it before. I'm going to tell you what I have told everyone who has come before you: you'll be back and not for the reasons you're thinking.\"\n\n\"For now, let's get you into some panties and a bra and then we can work on your makeup,\" she added before he could respond.\n\nShe walked him over to a closet and pulled out some panties. She looked at him, opened a drawer and pulled out a pair of light pink, silk panties and handed them to him. He slid them on. The soft silk felt luxurious on his skin and he found himself getting unexpectedly aroused yet again.\n\nWithout even looking Savannah said, \"Don't worry. Everyone gets hard the first time they put on these panties. You're not the first.\"\n\nShe opened another drawer and pulled out a matching bra. He awkwardly tried to put it on until she jumped in to assist him. She reached behind him and did the latches. Perfect fit. She then stuffed the bra with shapely pieces of rubber to make it look like he had breasts.\n\n\"The mirror is right over there,\" she said, pointing to the corner. She knew what he was about to ask before he could ask it.\n\nKerry walked over and looked at himself in the mirror. The silky smooth legs and body. The pink panties and bra. He didn't recognize himself. His hands began to rub up and down his body, feeling the fabric and the soft skin. His heart pounded frantically in his chest. He loved the feeling! He turned and looked at his ass in the mirror and smiled.\n\n\"I will say this, Mr. Bowen - you have an incredible ass. One of the best I've seen here,\" Savannah said in a matter-of-fact tone.\n\nHe smiled deeply at the compliment.\n\n\"Now, it's time for the makeup. This will take a little while since this is going to also serve as a tutorial for you. You can practice at home. I have a kit you can take home with you after tonight. You are always welcome to use my services here, but many of the girls decide they want to do it themselves after a while.\"\n\n\"How many girls are there?\"\n\n\"Oh, I've lost count at this point. Several hundred? I don't know.\"\n\nKerry wanted to ask more questions, but Savannah's body language indicated that he'd probably get very few answers. He focused instead on the makeup tutorial he was about to receive.\n\nFor the next two hours, Savannah walked Kerry through the entire process. Starting with a facial cleanser and then a moisturizer, she moved on to a primer and color correction. She spent a good bit of time on applying a foundation and eye concealer. After adding contour and applying a bit of a rosy tone using highlighters, she moved on to the eyes.\n\nShe went through different eyeshadows and eyeliner, opting for soft shades so that Kerry's blue eyes would really pop. She thickened his already long eyelashes and moved on to the lips. She showed him how to use the lip liner and finally finished with a nice muted pink lipstick.\n\nWhen the makeup was finally done, she went to the closet to find the perfect wig. She came back with two: one blonde, the other brunette. Kerry's hair was naturally dark, but he liked the idea of being a blonde.\n\n\"That one. Let's go blonde,\" he said, pointing at the curly blonde wig.\n\n\"Good choice.\"\n\nSavannah showed him how to properly apply it. She put on a wig cap and applied glue to the front and waited for it to get tacky to the touch. She placed the wig on and used the makeup to blend it in naturally with his complexion.\n\n\"There. That looks perfect. Let me get Chloe so she can sign off on the work we've done,\" Savannah said as she walked out of the room.\n\nKerry couldn't take it anymore. He had not seen the final product yet. He stood up to walk to the mirror but before he got there the women came back in.\n\n\"Oh my. Savannah, you have outdone yourself. Of course, having someone so beautiful to work with never hurts,\" Chloe said brightly.\n\n\"Thank you,\" she replied proudly.\n\n\"So, have you chosen your name for the evening?\"\n\nKerry had forgotten about that detail and felt caught off-guard.\n\n\"Um, I haven't. Do you have any ideas for me?\"\n\n\"Let's see,\" Chloe started as she looked him over. After a brief pause she replied, \"What about Madeline? Maddie for short?\"\n\nSomething about the name felt... right. Kerry didn't know why, but he loved it.\n\n\"I like it. It feels... right somehow?\"\n\n\"Ok, perfect. From now on you shall be known as Maddie. Savannah, get Maddie into a dress and bring her to my office. Thank you dear.\"\n\nChloe left the room quickly and Savannah went back to the closet and came back with a sparkling blue dress. She helped Maddie get into it and yet again, it was a perfect fit. She really did know what she was doing. She grabbed some matching pumps for her to try on.\n\nMaddie slipped them on and awkwardly took a few steps, nearly falling over in the process.\n\n\"You'll get used to it. These aren't even that tall. You have an hour to walk around in them and practice. I suggest you use that time to do so,\" she said as she watched Maddie stumble around. She added, \"So, are you ready to see the final product?\"\n\n\"I think so,\" she replied.\n\nSavannah walked her over to the mirror.\n\nMaddie stood there in shock. What she saw in the full size mirror stunned her. Kerry was gone. In the reflection was a beautiful, sexy blonde woman. Her heart started pounding and her cock quickly stiffened and pushed out of the top of her panties. The outline of the erection showed clearly in the tight fabric of the dress.\n\n\"Yes, that's normal too. To be clear, that's going to happen a lot tonight. Don't be shy about it. Flaunt it. That's why you're here and doing this,\" Savannah said before adding, \"And remember. You are Maddie now. You only respond to that name.\"\n\nShe grabbed Maddie's hand and twirled her around, looking over her entire body and face in the process.\n\n\"Oh Maddie. You are going to be the talk of the evening. You are simply luscious. Chloe has found yet another gem. Come with me.\"\n\nThe two of them walked out of the room and up the stairs to a large room on the second floor. Inside, Chloe sat at a desk with several boxes on it. There was a single chair in front of the desk that Chloe invited Maddie to sit in.\n\nAs she sat and the door behind them clicked closed, Chloe started, \"Maddie, you look beautiful. Even more so than our algorithms predicted. The gentlemen tonight are going to be enthralled with you. However, they know the rules and as I mentioned before, there will be no physical contact. Should any of them break the rules, we will intervene immediately. Your comfort is my priority.\"\n\n\"Yes, ma'am.\"\n\n\"Your job is simple. Serve food and drinks as instructed. Should you choose to speak, you need to use as feminine a voice as you can. I'd like for you to try that now.\"\n\nMaddie nervously raised the pitch of her voice and spoke softly, \"How does this sound? Is it feminine enough?\"\n\nChloe's expression soured slightly before she said, \"That should be ok for now, but I think you could do much better with proper training and practice. For now, just minimize the speaking.\"\n\nShe continued, \"You will receive your cash payment at the end of the night. In addition to the money, you will be gifted these boxes. Inside is an assortment of things. This box has an entire kit of makeup, the same ones Savannah used tonight. This box has an assortment of women's clothing and wigs. This box has various sex toys, anal plugs, lubricants and the like. This last box has a new laptop computer that is yours to keep. When you log in, you will find an application we've designed that will train you in applying makeup, training your voice and other odds and ends. This is all yours. Whether you choose to use it or not is up to you. I suspect you will.\"\n\nMaddie didn't know how to respond, so she sat silently and smiled.\n\n\"Don't worry, dear, every girl is overwhelmed her first time here. It's normal. All of this will make far more sense in the coming weeks. Now, should you perform well this evening you will be invited back. These parties happen every weekend and the pay is the same each time. If we invite you back, you will be welcome to come as often or as little as you would like. Feel free to talk with the other girls working tonight, but remember your first priority is to take care of our guests. One last thing: you will see some of the girls tonight engaging in more... salacious behavior. As a reminder, you will not be doing that tonight and at no time will it be an expectation of you. These girls are doing so of their own free will. Now, do you have any questions?\"\n\nHer heart pounded as she contemplated all she heard. She thought to herself \"just get through the night and get paid and get the hell out.\"\n\n\"Ah yes. Don't worry. Every girl thinks to themselves 'just get paid and get the hell out of here' their first time. That, dear, is also very normal. Just remember, I am here for you and if you need anything, you just find me and I will take care of you, ok?\"\n\nMaddie's head swam but she resolved herself that she could get through this evening.\n\n\"Yes ma'am.\"\n\nWith that, she was escorted out. She spent the next hour walking around to get used to the pumps. By the time Savannah arrived to retrieve her for the party, she felt comfortable enough in them to not look like a complete fool.\n\nShe was taken by a golf cart to the main house of the estate. It was an enormous mansion that seemed to have no end. The inside was expansive and awe inspiring. The ceilings seemed to touch the sky and the rounded stairs harkened back to movies about large, Southern estates. The walls glistened a perfect white; no imperfections could be found. Not a speck of dust or discoloration anywhere.\n\nSavannah walked her into a massive ballroom with large, round tables spread around the room. Maddie looked around and saw many other girls just like her. She noticed several of them already sitting in the laps of some of the men at the tables. From what she could tell, there were at least 40 to 50 men at this event.\n\nShe looked to the right and saw a gorgeous girl in a white dress sitting in the lap of a handsome, middle-aged man. His hand was up her dress and clearly fondling her genitals. Her eyes were closed in pleasure. She looked to the left and saw another girl standing next to a man whose hand was feeling her ass as her large, erect cock pressed tightly against the front of her dress.\n\n\"Those are some of our more experienced girls. Don't worry. Everyone here knows you are off limits,\" Savannah said, knowing how nervous Maddie must be.\n\nShe escorted her to the bar in the corner of the room. It was being worked by several bartenders. Savannah introduced Maddie to one of the men.\n\n\"John, this is Maddie. As you can see, she is new and this is her first night with us.\"\n\n\"Nice to meet you, Maddie. Your job tonight is simple. You'll be taking various drinks to each of the tables as requested. Just come to me throughout the night and I'll hand you the drink and let you know the table number it goes to. That's it. Easy peasy.\"\n\nShe smiled and shook her head to acknowledge what he said.\n\n\"So, let's get started. Take this old fashioned to table 20. The gentleman in the white coat. Can't miss him.\"\n\nMaddie grabbed the drink and took it to the table. She quietly handed the drink to the man, who looked up at her. His eyes opened wide and his mouth opened slightly.\n\n\"My god, you are absolutely gorgeous! Clinton, you have found another absolute beauty you devil,\" he yelled across the room. His deep Southern drawl was charming. He continued, \"Please dear, do a turn-around for me so that I can see all of you.\"\n\nShe turned as requested. Half way through the turn the man shouted out, \"Jesus christ that ass is perfection! My word, the gods crafted you by hand my dear. Simply delectable!\"\n\nThe words drilled straight into her soul as she finished the turn-around. Her heart pounded and her cock hardened quickly in her panties. She shuffled a bit to let it spring out of the top of her panties. The man at the table smiled deeply as he watched her get hard right in front of him.\n\n\"Oh yes. The gods did craft you, alright. You, my dear, are simply perfect. Every inch of you. I do hope we'll see you back here in the future.\"\n\nShe smiled and returned to John at the bar. He looked at her, smiled and said, \"Oh yes. The gentlemen here are going to adore you, Maddie. I have a feeling you'll be quite the hit. Take this cosmo to table 30, the gent with the beard.\"\n\nAs she walked towards table 30, she heard guest after guest commenting on her body as she passed them.\n\n\"Holy shit, her body is fucking perfect.\"\n\n\"Oh my god, I hope she comes back.\"\n\n\"Christ. How does Clinton find all of these gorgeous girls!\"\n\n\"That... that is the perfect ass.\"\n\nBy the time she made it to table 30, her erection was rock hard. She felt like it was going to rip through the fabric of her dress.\n\nShe handed the drink to the man with the beard. He thanked her, took the glass but then reached up and grabbed her ass firmly. She gasped loudly and looked at him in shock.\n\n\"Oh god dammit, Gary. You're fucked now, you idiot,\" one of the men at the table sighed.\n\nWithin seconds, two extraordinarily large men showed up at the table and hoisted the bearded man from his seat. They were not gentle with him.\n\n\"Wait, wait. My mistake! I'm sorry, don't do this,\" he shouted as the men carried him away.\n\nChloe was there with them and said dryly as he was carried off, \"Make sure he leaves the property immediately. He is not welcome back ever again. Use force if you must. Maddie, dear, are you ok?\"\n\nMaddie shook her head up and down. Chloe patted her back softly and whispered, \"I'm sorry. That rarely ever happens. The last time was months ago. I assure you, it will not happen to you again, or I will murder them with my own two hands.\"\n\nShe was right. The party continued on and Maddie got into a bit of a groove. She enjoyed the eyes on her body. The comments. The compliments. The whistles. She felt electric as she glided through the room, grabbing the eyes of all the men there. Her rock hard cock stayed that way for nearly an hour straight as she bathed in the praise and adoration of the men around her.\n\nAfter an hour or so, Chloe approached her and said, \"Ok dear. You're doing wonderfully. All of the men here are asking me about you. Quite a few have asked that their drinks be delivered by you. Why don't you take a quick break, though. I don't want you to wear out before the night is over. Through those doors you'll find an area designated for the girls to grab a bite to eat or to get a drink. You'll find restrooms there as well. Take 10 to 20 minutes.\"\n\nShe welcomed the break and headed towards the doors. As she pushed them open, she saw a room at the end of the long hallway with a sign above it that said \"Girls only.\"\n\nWhat she saw in the hallway, however, truly caught her eye.\n\nNo more than 3 feet down the hall was a woman in a tight yellow dress, leaning with her back against the wall. She had an incredibly curvy figure with a large butt and very large breasts. At her feet was a man on his knees. He had her dress lifted up and he was giving her a blow job!\n\nShe paused and watched as his hands moved up and down her long shaft. He kissed the head as she cooed and moaned. He licked the shaft up and down, fondling her balls with his hand. The two of them didn't acknowledge or see Maddie as she walked by slowly. She stared at them the entire time.\n\nMaddie was so turned on by what she just saw. She turned her head to continue down the hall but heard the feminine voice moan out, \"Oh sweetie, I'm about to cum.\"\n\nShe turned and looked as the girl came all over the face of the man on the ground. Rope after rope of cum shot out as her body quivered in ecstasy. The man smiled as the cum splashed all over his face and into his open mouth. The girl leaned down and kissed him deeply when she finished. She then looked over at Maddie and smiled and winked. The man wiped his face with the handkerchief in his pocket and nonchalantly walked back into the ballroom. The girl in the yellow dress walked towards Maddie.\n\n\"Hi beautiful, I'm Marilyn. You are?\"\n\n\"Oh, I'm Maddie.\"\n\n\"So, you're clearly new here. You are gorgeous, by the way. I hope you enjoyed the show,\" she said, smiling deeply.\n\nMaddie blushed and Marilyn laughed in response.\n\n\"Come with me, honey. I'll give you the rundown.\"\n\nMarilyn grabbed her hand and escorted her into the room at the end of the hall.\n\nThe room was large and had couches and chairs around all the walls. In the middle was a long table with drinks and snacks of all sorts. Marilyn grabbed a diet soda, cracked it open and took a long swig. Maddie grabbed a water bottle and opened it as she was escorted to an empty couch in the corner of the room.\n\n\"So, I'll be brief since we both need to get back to the floor soon. Yes, these tits are mine. Implants of course, but they're amazing. Completely paid for by the family. If you want something less permanent, they can order you some incredibly realistic breast forms custom matched to your skin tone. But that's for the future. Chloe will spell a lot of this out for you next time.\"\n\n\"I'm not sure,\" Maddie started to say before she was cut off.\n\n\"Oh honey, I can tell - you're coming back. Next week, in fact. I'd bet my new Porsche on it.\"\n\n\"I don't know if this is for me. I'm straight,\" Maddie began responding before Marilyn cut her off again.\n\n\"Sweetie, you are not straight. If you were, you would not be here right now. At minimum you are bi curious, but don't think too much about it. You'll figure out your sexuality soon enough. What a fun ride you have ahead of you!\"\n\nMaddie decided to sit quietly and listen. Deep down in her subconscious she knew what Marilyn said was accurate.\n\n\"Do you want to know the biggest lie they tell here? It's that we are here to serve. No, sweetie. We are not. We are here to be served. These men worship us. They desire us. They will spend ridiculous amounts of money to make us happy. We have all of the control. Our queen mother Chloe, has set us up for life. We are all goddesses here. You just don't realize it yet. Between this job and my Onlyfans, I am now making between 20 to 50 thousand per month. Believe me when I tell you that your life has been permanently changed. Don't try to process it all at once. Just trust me. You'll find out soon enough.\"\n\nMaddie felt overwhelmed. Somehow she knew that she was just told the gut level truth and that others were seeing in her something she did not yet see. She finished her water bottle and got up to head back to the main ballroom. Marilyn stood with her.\n\n\"Oh, and sweetie, do enjoy the boxes they gave you tonight. Those are just the beginning. Especially the box of toys. I've been doing this for five years and I still use them to this day. Mmmmm mmmm.\"\n\nMarilyn grabbed her hand and pulled her close. She gave her a soft, prolonged kiss on the lips and walked off towards the ballroom.\n\nMaddie's head was swimming, but she vowed to push through it and finish the evening. Right now the priority was finishing the night and getting the cash. Any other considerations were for the future.\n\nShe made her way back to the ballroom and immediately started serving drinks again. The compliments and looks continued all night and her arousal never let up, even as she got into a groove. She even started playing it up more, winking and blowing kisses at the men in the room. Her earlier protestations and doubts had been put to bed. She was alive. Sexual electricity ripped through her body with each man she turned on.\n\nShe was the talk of the night. Every man in the room wanted her to come close. Nearly all of them would get up from their tables at some point to move closer to her. Several of them showered her with compliments and promises to take care of her if she'd come back. A few of the men told her she'd never have to work again.",
        "\"You're gorgeous. There are cis women who would kill to look like you.\"\n\n\"Were it not for where we are, I'd never think you weren't born a woman.\"\n\n\"I'd take you for a night on the town without hesitation.\"\n\nShe was surprised at how much she enjoyed the compliments. Her heart pounded in her chest with each one and her endless arousal twitched approvingly behind her dress. All of the men certainly noticed this as well.\n\nThe adoration and compliments made the night fly by. Before long, the men had shuffled out of the room and by 1AM the only people left were the girls and the workers cleaning up the facility.\n\nAs Maddie took a break sipping a cocktail in the corner, Chloe walked up and said, \"My dear, please come with me.\"\n\nShe stood up and followed Chloe into a private room. She moved into the room, closed the door and sat on the couch. She patted the seat cushion and Maddie sat as requested.\n\n\"My dear, you were amazing tonight. Every man in that room was infatuated with you from the start. I have had all the boxes placed in your car for you and this envelope has your cash for the evening,\" she said, handing her a thick, sealed white envelope. \"We want you to come back. Please let me know by tomorrow evening if you'll be joining us again. If you do, I ask that you come next Saturday by 3PM so that I can have a private meeting with you beforehand. I'm sure you have more questions, and I will answer them at that point.\"\n\nShe leaned in and kissed Maddie on the cheek before getting up, opening the door and saying, \"You're free to go. I look forward to hearing from you soon.\"\n\nShe said nothing as she exited the room. She didn't even think about changing her attire before driving home. She walked into her apartment carrying the boxes while fully dressed as Maddie. She set them down on the table and sat on the couch to decompress.\n\nHer mind immediately began reliving the evening. The compliments. The looks. Seeing Marilyn in the hallway. Her cock grew quickly at the thoughts. Her hand reached down to pull the dress up enough to expose her panties. She pulled her rock hard cock out of the side and began stroking it. As the thoughts of the evening continued racing through her head, her cock throbbed in erotic pain. Her stroking felt intensely pleasurable. More so than ever before.\n\nShe began moaning in a feminine, high-pitched tone as the intoxicating smell of her perfume mixed with her unquenchable erotic hunger. Her hand rolled up and down her shaft, driving the sexual release closer and closer. Her moaning grew more pronounced and she began to quiver as her body suddenly surged with the energy of pent up sexual explosion.\n\nShe stopped stroking as her cock twitched excitedly and began erupting thick ropes of warm, white cum all over her. Her entire body clenched tightly as the orgasm exploded out of her, paralyzing her into place. Her moans were guttural and uncontrollable. The cum splashed all over her dress, her face and her hair. She didn't care. She had never cum like this before.\n\nAfter a few minutes, she finally recovered enough to get up and get dressed. Kerry had now returned to take over. Madeline needed the rest.\n\nHe walked over to the boxes and opened the one with the laptop in it. He sat down at the table, opened it up and powered it on. A single icon was in the center of the screen and it simply read \"Start here.\"\n\nAfter double-clicking on it, a video popped up. It was Chloe. He turned the volume up as she began to speak.\n\n\"By now you have just gone through your first evening with us. If history is any indicator, you may have just masturbated and cum as hard as you ever had in your life. I should know; I was once in your shoes not that long ago. If you're seeing this video, it's because we want you to join us once again. There is so much more to who we are and what we do than you experienced this evening. I believe your life can take a new, amazing trajectory and what you felt tonight was only the tip of a very large, very deep iceberg. This laptop has everything you need to continue your feminization journey. The boxes we gave to you will be your first step in discovering your truest, most sexually empowered self. As you explore all of it, please know that I am here for you each step of the way. Do not hesitate to contact me. All of my details are here, in this laptop. Congratulations on making it through the first night and welcome to our family.\"\n\nKerry sat quietly for several minutes after the video ended. He finally started looking through the various programs and files on the laptop. He also found a direct phone number for Chloe. He reached for his cellphone, put her number in and sent a short, direct message to her.\n\n\"I'll be there Saturday.\""
    ],
    "authorname": "DaniW",
    "tags": [
        "crossdresser",
        "oral",
        "transgender",
        "crossdress",
        "oral sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-family-pt-01-2"
}