{
    "title": "The Pirate King Ch. 16",
    "pages": [
        "Long time no see.\n\nI know. I'm sorry. Things got hard, and it felt too strange to escape to a world where the power of the sea was such a romanticized thing while I watched so much of my country disappear into a hurricane. \n\nAnyway. Have some sailors, and remember love. Imagine what trust feels like when you carry it in a place deeper than your bones. \n\nAlternate title: I had never before seen darkness like that \n\nAs always, comments and feedback so greatly appreciated. Love and peace and someone to call family, a place to call home, to each and every one of you. Never let anyone take that away. Never let anyone tell you, you deserve any different. \n\n***\n\nThe men were waiting for us when we got back to the ship.\n\n\"Steady,\" the Captain called to them as soon as we were close enough to be heard. \"It's alright, lads.\"\n\nHis words did little to calm the crew. Cass's seas had lessened significantly from when we had arrived leading to the appearing of our being becalmed. I smiled to see it, remembrance on my skin like smoke. Cass had once becalmed a captain for thirty-six hours for saying something she hadn't liked; he had rowed back into her chambers, sobbing, begging to be let out of his prison. Only then had she given him back his currents.\n\nShe was more merciful than I. I had once taken the currents from a captain for eternity. If he found wind, so be it, but the sea would never again bless his boat. \n\n\"Did she have to do this? It's upsetting my crew.\" The Captain's voice brought me back from thoughts of ships locked eternal in glass-like seas. \n\nI smiled at him. \"It will lift when it is time to go.\"\n\nHe let out a huff of annoyance. \"Isn't our time of departure my decision?\"\n\nIt was fate's. It was already determined, long before we had even arrived. Before we had met. I shrugged and pulled his arm around my waist, but he merely scowled and pulled away to go to his men. \n\nThe Captain moved through them carefully, reassuring here and patting an arm there. They shifted before his presence, parting in the face of power and authority and that was good, that was something, but I saw how they were not fully settled and moved behind my Captain, my own bulk and ease it's own kind of reassurance.\n\nStill they milled about like errant currants. This was not my area of expertise; if they were truly water, I could have calmed them, navigated them. They were not water. They were land boys, and their nervousness annoyed me. \n\nThe Captain handled it much better than I. He drew them after him as he walked over to a barrel, pulling himself up on the makeshift stage in a show of rippling muscles and controlled power that left me smiling, spinning. Hearing his songs in my heart. \n\n\"The Lady has given me - us -\" he looked over his men's heads and caught my gaze and I poured out my love for him, let it fall hot and swirling over these nobodies' feet and was surprised when they did not yelp from the heat of it, \"her blessing. This is a good voyage, lads. This is the best voyage, the only voyage. When the Lady herself speaks well of it.\" He stopped and spread his arms wide, grinning, his teeth flashing white, his soul flashing brighter than the sun.\n\nI watched the men begin to relax at his obvious comfort and jubilance. My Captain was good at what he did, and I too began to relax to see it. \n\n\"What of the naming.\" Finn had been with us on the way back; he had seen the cave light up, must have watched it go dark. Might well have heard Cass yelling all the way back from where he stood. When we had emerged, hours later, easy and calm, Finn had nearly started crying from relief. He still carried threads of his nervousness on him and I watched as he twisted those strands into his words, winding the men up again with the pressure of his emotion. \"What did she say of the naming?\"\n\nThe Captain's eyes landed on me for a moment. I saw him wrap himself up in something light, something dark, something dangerous. Watched him become the thing I would always know him to be. \n\n\"Ah, yes.\" He sounded bored, but I saw the way his very skin sparked with contradiction. \"There is that.\"\n\nThe men waited. They did not look relaxed anymore. \n\n\"Full disclosure,\" he said, eyes glancing over the men before him to land on me, so dark, so endless, all for me. Everything for me. \"I am now named. I name the Sailor; he names me.\"\n\nThere was instantly a stir among the men. The Captain ignored this and continued on. If you did not know better you would think he was bored. The men knew better.\n\nI knew best. \n\n\"The Lady assures me this is not a problem. Our names are useless to anyone but each other, or something.\" He announced it like it was nothing to him, but he stared at me as he said it and I saw all the things this meant to him. All the ways this intimacy touched his soul. All around us the room still stirred, but they were nothing. They had always been nothing. \n\nI had the Captain; I had his names, I had his love, I had his trust and I had his life. And he had all the same of mine and more. I smiled into his gaze and watched the way that made him turn soft and hard all at the same time. \n\n\"How sure are we of this?\" A man who's name I had never bothered to learn spoke up, breaking my attention from my love. It was not a smart decision and he was lucky he could not see my eyes from where he stood with his back to me. \n\nBut the Captain merely smiled, a lazy expression that somehow carried a promise of so much action if he was pushed even the slightest bit further, the laziness made so much more pronounced by the obviousness of the violence it sat in front of. A thousand contradictions and he wore them so easily. Carried them on his skin like patterns of sunlight and I stopped trying to parse out what was real and what was glimmer and instead simply enjoyed the sensation as I bathed in his warmth. \"I'm betting my life on it. I'm betting the Sailor's life on it.\"\n\nThere was a quiet swell as the men turned to look at me. I stood still and did not even try to mimic the expression the Captain had affected. I had never known how to make myself into a contradiction. I would never be anything but exactly what I was. \n\nThey turned away, possibly not comforted by what they had seen. \n\n\"I'm willing to bet your lives on it,\" the Captain continued, softer. \"Have I ever placed you in danger that was not needed?\"\n\nAnother swell, this one quieter yet. I knew there were stories here, actions shared. I watched memories fit into the men's bodies and knew they would come to remember what I could never forget, that the Captain was a good one, that he was Captain first and foremost. That he cared for this ship and his men and would never abandon them to danger.\n\nThey knew this. They carried it in their bodies, their memories. Their shared pasts. I watched this come together for them even as they shifted, uncomfortable with the idea of such a change to their lives.\n\n\"We trust you, Cap,\" Natch said quietly. I paid close attention; every man in the room nodded. \n\n\"Good.\" A careful observer might not have noticed any change in the Captain's body; I was no simple observer. I was the Captain's love eternal. And I saw the way his eyebrow unknit, just the smallest amount, watched his shoulder's go down the same. Then he moved on to other orders of business. \n\n***\n\n\"Sailor.\" \n\nI turned to find the Captain moving towards me, curls swaying lightly in the slight breeze Cass had let pick up. My eyes traced over his bunched brows, down to those dark eyes set against a nose broken at least once but still so handsome, so refined, down past cheeks that held the sunset and the rose of promised storms just under skin dark as the wood of the ship, skin I loved to trace and kiss and to kiss him, because there were those lips, those perfect lips -\n\nHe stepped into my arms and granted me my silent wish by pressing those lips to mine. \n\n\"Captain,\" I murmured as he pulled away slightly. \n\nHis finger traced down my back with seemingly no intent, a casual, meandering gesture. Another form of false laziness. \"When do you think Cass will let us get out of here?\"\n\nI was finding it hard to focus beneath the promises with which his touch was filling my brain. \"Soon,\" I managed.\n\n\"How soon?\" His finger found the hem of my shirt and began crawling back up to trace over my skin. \n\nAt my shiver I saw a flash of amusement pass over his face. \"When it's time,\" I told him, knowing full well he already knew this. \n\n\"Hmm.\" My skin nearly itched from the lightness of his touch. He made it seem as if he wasn't thinking about the way his hand moved at all, his eyes on the riggings, his words on leaving, but every motion was deliberate, calculated to maximize my. Discomfort? Comfort? \n\nIntensity, I decided as he surprised another shake from my spine. His eyes glanced over to me for all of one moment before he went back to checking on his men. Calculated to maximize my intensity. \n\n\"I don't see why we can't put the sails down now,\" he was complaining. A finger tapped on my spine and I nearly had to take an entire step forward. How could one single touch move something so vast as me? \"If the wind will come soon, why not be prepared?\" \n\n\"Because -\" I started, but Cass answered the question for me in action.\n\nThe wind picked up with such violence and intensity that even without the sails up the ship lurched hard to star. Anything not tied down on deck skidded wildly across the boards, sailors shouting and throwing themselves out of the way of barrels and boxes and rope, then having to make the same motions again as the ship righted herself. \n\nI smiled down at the Captain who had been knocked into my arms, my grip tightening around his waist. \"Because we would have just lost our masts,\" I stated calmly. He frowned up at me, trying to decide if I had something to do with this. \"And probably most of the sails.\" \n\nHe sighed and rested his head on my chest. All around us, the ship was slowly coming to her proper positioning. \"Is nothing ever easy with you?\"\n\nI drew my hands up his back and felt him relax into me. He knew the answer to that. \n\n\"Well.\" His fingers laced over my spine, entwining with each other and me. Forever with me. My soul trilled at the contact even as my skin prickled. \"At least now we can be off.\"\n\nI nodded. \"To home.\"\n\nThe was a long moment. I felt him breathe against me, air captured in his chest then let out against my shirt. Then, much more tentatively than I had said it, or perhaps simply more quietly; \"Home.\"\n\nI pressed my lips to the top of his head and watched the men struggle to tie the sails down in the wind. \n\n***\n\nCookie caught me as I was on my way down to the Captain's chambers with the small bag of gifts Cass had given us. It was meant to be a momentary diversion, but soon my hands were filled with potatoes and my ears with Cookie's frustration. \n\n\"Once was dangerous enough,\" he was chastising. \"And none of the men the wiser, not knowing what they're sailing into.\" He pointed his knife at me, scowling. A peel hung to the tip. \"You can't just sail full ships in to the cracks of the universe willy nilly, boy. Not even you.\"\n\nI watched the peel slip from the tip. \"There are ways to keep the men safe.\"\n\nThe knife jerked up in frustration. \"Maybe. Not for sure, not the way things are. You're relying on spells you can't know will work.\"\n\n\"That's why I thought you would do them.\"\n\nCookie snorted. \"As if I had the time. Or the supplies.\"\n\nI had been waiting for this. I went to the bag Cass had given me and pulled out the comfrey, turning to hand it to the frowning and suspicious Cookie.\n\n\"Comfrey.\" He didn't take it, just squinted hard at the small bunch of flowers shedding on his immaculate floor. \"Only one bushel.\"\n\nI raised an eyebrow. \"Were you planning on needing more than one?\"\n\n\"No, no.\" The knife was placed on the table, the comfrey quickly whisked away into a small cabinet that smelled of herbs and spice, incense. Spellwork. I had never seen it opened before. Had known better than to open it myself. \"Just wondering why you think I'm the best to do this.\"\n\n\"You know the spells.\" It wasn't a question. Minnie had known the spells, would have taught him or might have been taught with him. That was the legacy of the cooks through Minnie's line, as far back as anyone could remember. It was common knowledge on the ships I had sailed on; if you don't have a professional spell weaver, the cook will do just fine. \n\n\"Aye, but so should you.\" He gave me a baleful look. \"I'm trying to keep my head down, boy. Not telegraphin' to all these men the things I know, the places I've been.\" \n\nI shrugged. They would find out eventually. \"Secrets can only hold their breath so long, Alan.\" Minnie's words in my mouth earned me a scowl. \n\nWhen I finally made my way to the Captain's room I found it occupied. Dark curls tumbled as the Captain looked up from where he stood over his desk, palms splayed out over maps. He smiled to see me; my entire body, from soul to skin, smiled back. \n\n\"Sailor.\" He beckoned me closer and my body obeyed without needing further instruction from me. \"What's the fastest way to your home?\"\n\n\"The Ephretes,\" I told him without having to think. The current would be strong this time of year, and the wind would cooperate. I wrapped my arms around his waist and settled my chin on top of his head. \"Near the whole way.\"\n\nHe nodded, causing my head to bob up and down. \"I'll let Natch know.\"\n\n\"Okay,\" I murmured, my fingers already playing with the the space where his shirt tucked into his breeches. I felt him settle against me and sighed happily, one hand sliding up to his bare chest. Feeling the warmth of his skin. \n\nHe hummed in content, letting me explore his body for a bit. When my gentle touches grew more pointed, fingers straying dangerously close to nipples, he tried to pull away. \"I need to tell Natch where we're heading.\"\n\n\"We won't hit the decision point for another two hours,\" I reminded him. I was finding that I liked the way my body pressed against his like this, his skin so close and yet so far away, the way his breath hitched as I continued my exploration of his body. My fingers dipped beneath his waistband and his head came back with his hips, hair brushing against my shoulder and neck. \"We've got time,\" I whispered into his ear.\n\n\"Fuck,\" he muttered. He ground against me, causing me fingers to tighten on his hip. My other hand found his nipple and began to tease the sensitive flesh. \"Fuck,\" he said again. I pressed a kiss on the skin of his neck he was exposing to me and he let out a breath. \"Fuck, Sailor. Fuck.\"\n\nWhen he leaned over the desk the motion pressed his ass into me further and I gasped, surprised by the motion. It gave him to me in a way that I had never been able to explore, had the chance to see. I loved it immediately, loved the trust and the difference and above all, always, him. \n\n\"Captain.\" I ran my hand down his back until I could tease his shirt from his breeches. \"Love.\" I began pulling his shirt up, revealing a back so beautiful, so incredible that I had to lean down and drop kisses along the path my hand took. Each time my lips pressed against his skin, he pressed his hips into me again. \n\n\"Sailor,\" he half moaned, half commanded as I lifted his shirt up over his head, reaching up to throw it over the table and out of our world, and although I did not know what the command was for I did my best to follow. His hips pressed back against me and I gasped again. \"Sailor.\" \n\n\"Okay,\" I told his skin. His soul. \"Okay.\" My lips were on his neck, my fingers tight on his hips. \"Whatever you need.\"\n\nHe turned his head so that his lips rested near my scalp. \"Need you.\" I pulled back so I could see his eyes, watch the way they were turning dark. Fall into his endlessness. He reached down and found one of my hands, pulling it up to his lips. I held my breath as his teeth lightly scraped the roughened skin of my palm, my heart beating wildly. \"I only need you.\" \n\nI turned my hand in his grasp to rub my thumb along his chin, those words increasing the tempo of my heartbeat to an unsustainable rate. \"Love,\" I whispered.\n\n\"Shut up,\" he said. Commanded. I shuddered and leaned forward to kiss his forehead. \"Fuck me.\"\n\nI paused halfway through my kiss, lips brushing just above those expressive eyebrows of his. I was afraid that if I moved any further I would fall apart, my heart shaking my body so much with how fast it was beating. \n\n\"Sailor.\" His voice reached up from beneath me, took me by the throat. I wrapped an arm under his chest, drawing him to me. \"Tell me you heard me. Tell me you'll do it.\" \n\n\"Okay,\" I whispered into his skin.\n\n\"No.\" The word snapped against me and I physically jerked; we were close, so close, we could be closer... \"Say it like I need you to, Sailor. Say it like I fucking need.\" \n\nHe was pressing into me, again and again, his hips moving in some mix of rhythmic and uncoordinated that was making it hard to think. \"Say it,\" he repeated. \"Say it.\" It was a mantra. A command. \n\nA command. He would always command me, this man, this love of mine. His very love was a command, but this, these words, they were direct and I had to obey them. How had I not understood this? How had I not yet given to this? I let the last futile walls in my soul fall to him, and then I was his. \"Yes, Sir,\" I obeyed, and he moaned his approval as he reached back and drew my head even closer to him, his hand lacing through my hair tightly. \n\n\"Bed,\" he told me. I didn't want to move. I wanted to stay there forever, wrapped around my Captain, but his words were stronger than my desire or maybe they were my desire realized and so I stood, pulling him up with me. He spun in my arms until his lips were against mine, his kiss harsh and loving as he moved me back in the direction he wanted. His fingers worked at the hem of my breeches. By the time he toppled me onto the bed he had managed to loosen my breeches, pushing them halfway down my ass. \n\nHe finished pulling them off as I stripped myself of my shirt. Then he stood above me, his eyes dark, his hair wild. \n\n\"Love,\" I called up to him.\n\n\"Do you want this?\" His finger traced up the inside of my leg and I shuddered. \"Do you want me?\"\n\n\"Love,\" I called again. It was very much apparent that I wanted him, and he could see it. \"Sir.\"\n\n\"Tell me you want me.\" His fingers were light on my inner thigh. \"Beg for me, Sailor. Beg for my touch.\"\n\n\"Please.\" \n\nHe shook his head. \"Not good enough.\" His fingers were making small circles next to my cock. I gasped, trying to gather words in the storms he was stirring up in my soul. \"Tell me what you want, love. Tell me what you need from me.\"\n\n\"Please, sir,\" I started. I could always get that part out. His fingers tugged at the coarse hair, my sensitive skin, and I gasped out the rest of the words as best I could. \"Please let me fuck you.\"\n\n\"Beg,\" he said again. A finger pressed up in the space between my cock and balls. \n\n\"Please.\" I was desperate. I needed him. I would do anything, anything for him. \"Please sir, oh gods, sir. Please let me. Sir.\" \n\nHis finger was lazily making it's way up my cock. I know he could feel me shaking, the desire I held just under my skin for him, the desperation. \"Sir,\" I tried again. \n\n\"Fucking beg.\" His voice was so cold, it cut against me, made it so hard to stay the verbose thing he was commanding me to be. I wanted to fall apart, let myself explore the feeling of those words and how they turned my very soul to ice but he needed this from me and I wasn't sure how much longer I could exist like this before I no longer existed at all, and so I did what he asked.\n\nI begged. \n\n\"Please.\" My voice was little more than a gasp in the face of what he was doing to me. \"Please, sir, I need you, need you so bad, I'll fucking die if you don't nghh.\"",
        "I threw my head back as the Captain took my cock into his mouth, my breath coming in soft gasps in time with his motions. When he lifted his head and flicked his tongue over the tip of my cock, I doubled up in pleasure. \n\n\"Good,\" I heard him whisper. \"So fucking good, you're perfect, baby. Taste so good. Wait for me.\"\n\nAnd he left me on the bed, gasping for breath and spinning from his touch. \n\nHe was back too soon for me to have found my footing again, but still he had been gone too long. Any time he spent away from me was too long. When he returned to me I reached out to him immediately, pulling him into a deep kiss. \n\nHe had taken his pants off while he was away from me and so we were pressed together skin to skin, our cocks rubbing, aching, together. When he broke away from me he was panting, pupils blown. \n\n\"Give me your hand.\" My fingers were in his palm the next instant, my compliance unquestioning. He covered them in slick lube then guided my hand between our legs. My shoulder had to hitch for my hand to reach his ass, and he took that as an invitation and buried his face in my neck. \n\n\"You know what to do?\"\n\nI nodded, then realized that he couldn't see me. \"Yes, sir.\" My finger circled his hole, his hand on my wrist as some sort of guidance. I didn't need it, not really. His reactions were my guide. The way his breath hitched, the way his teeth caught on the skin of my neck. That was all the hints I needed.\n\n\"Sailor,\" he whined as I made another circle. I was in no hurry. I liked the way he was pressed against me, shaking and mine and perfect. I knew I would like what came next just as much, but this was good and I didn't want to rush. My finger started another circle. \"Baby.\" \n\nI kissed the top of his head. \n\nHis free hand snaked around my arm still wrapped around his back and found it's way into my hair, reminding me painfully, wonderfully of my lack of control here. Why had I ever thought I had a say in how long we spent in any one place? \"Fucking do it,\" the Captain, my Captain, hissed into my neck, and I pressed my fingers to his spine as I sunk my middle finger into his ass. \n\nHe hissed into my neck, back arching with the sensation. I knew exactly what he was going through and stroked his back as he spun through the myriad of sensations I had just sent him crashing into. \n\n\"More,\" he begged immediately, but I knew he couldn't be ready for it yet and I pulled back and pressed into him again instead, causing him to bite my neck. It wasn't until he didn't tighten his grip on me with each entrance that I allowed myself to add another finger. \n\n\"Fuck yeah,\" he gasped. \"Now bend your fingers, just a little more to the -\"\n\nI shifted my position and found the spot that he was asking for. \n\nHe pulled at my hair, gasping. \"Yes,\" he told me, \"fuck yeah, baby, that's it, again, baby do it again, do it again...\" \n\nI did. And then again, and again, until he was falling apart on top of me, his face pressed to the mattress, his hand tight in my hair, a steady stream of curses and promises and commands streaming from his mouth. My free hand lightly ran up and down his spine. \n\nSuddenly he rolled away from me and laid on his back, panting. I propped myself up on my elbow, watching him gasp for air, loving the way he looked. Naked and flustered and on edge, hair wild and legs spread, cock hard, all for me. \n\nHis eyes snapped over to me, looking me over, and I hope he saw the same things in me that I saw in him. I know his breathing grew deeper and faster. I know his eyes grew darker with each second they spent on my skin, and when they passed to my soul.\n\nI had never before seen darkness like that.\n\n\"Fuck,\" he said explosively. He grabbed up a pillow, pulling it to his body even as he was reaching back for me. \"Fucking, gods. Come here.\" \n\nWhat else could I do? His eyes tied me. His words bound me. I was free to move only as he desired and it set my soul on fire. \n\nThe pillow found it's way beneath his hips and then he was pulling me against his back, my cock nestling between his ass. \"Fuck me,\" he commanded. His head rested on the bed, eyes dark and soft and so much, so much more than I could handle as he looked up at me from where he lay. \"Baby, baby come on, fuck me.\"\n\n\"Lube,\" I managed to remember. I watched frustration roll off his body. He pointed in a general direction, his eyes still on me. \n\n\"Over there.\" I glanced over and and found the jar where he had left it on the other side of the bed. \"And Sailor.\"\n\nI looked down at him. My seas crashed against the night that he contained, that he had become, and were lost in infinity. I spun at the contradiction of towering above the sky.\n\n\"Get it fast.\"\n\nI didn't have to be told twice. I was pressed back against him in moments, my cock slick and ready, and he moaned his appreciation. His eyes still looked up at me but they were ragged, unfocused. I slid a hand up his back as much to steady myself as to make sure he was still there, still with me. \n\n\"Ready?\" I asked quietly, but my word simply caused him to push back against me. \n\n\"Fuck me,\" he said again, and this time it was a command and there was no way I could ignore the way those words slipped into my body and so I pressed into him. \n\nI meant to go slow, thought I was, but halfway through he said something and slammed his hips into mine so there was nothing slow about it. There was nothing slow about us. I bit back my own gasp and ran my hand up and down his spine, feeling the way he shuddered to breathe, feeling him all around me. He was all around me. \n\nI kept moving my hand and tried not to fall apart. \n\nHis breath finally took the shape of my name. \"Sailor.\" His hips lifted away from me then slid back slowly, showing me he was ready. \"Sailor.\"\n\nI moved my own hips, causing him to gasp. At first I moved slowly, gently. Then when it became apparent he was not in pain, I pulled out nearly all the way and then slammed back in. \n\nThe Captain collapsed before me, shouting my name. \"Again,\" he commanded. \"Fucking again, again.\" \n\nAnd so I did it again, and again. Before me the Captain slowly fell apart, and I watched him with wonder, with love. I wanted to turn him to nothing but atoms, to lift him from his skin and make him forget he had a body. I wanted to fuck him until he forgot his name and only remembered the ones he had for me. I wanted to be the things he always managed to be for me, and I wanted to watch him while I did it because he was so damn beautiful. \n\n\"Sailor,\" he was saying, babbling, \"fucking, baby, love, Sailor, fuck.\" He threw his head back, hands reaching behind him. I leaned down until his hands could grab hold of my sides. His fingers slid wildly until they found my hands on his hips. \"Fucking, Sailor.\"\n\nI let him move my hands as he wanted. When he put my hand on his cock the walls of his ass tightened and my rhythm hitched, my self control nearly lost in that moment. But he jerked at my other hand and I remembered that I was there for him, that I was his, and I held myself together and slammed into him hard enough in the next moment that he forgot where he was going to put my other hand and just held it tight, cursing me.\n\n\"Sailor.\" His voice was raw. \"Sailor, fucking look at me.\" \n\nI met his eyes and held his hand tight. He was so lost, so lost to me. \"Captain,\" I murmured in reverence. \n\n\"Gonna, gotta come.\" He didn't appear to have heard me. I don't think he heard anything besides the song that I was pounding into his soul. \"Come in my ass, baby. I wanna feel, I gotta.\" His fingers squeezed around mine; I tightened my grip in response. \"Say it, baby. Say you'll fucking do it.\"\n\n\"Yes, sir.\" I could have tripped on those words alone. I held back for him.\n\nOur hands together were still jerking off his cock in time with my thrusts. \"Sailor.\" \n\n\"Captain.\" The word was pressed against him, so soft, so careful. \n\n\"Say it.\"\n\nI readied myself to say whatever it was he needed to hear, whatever he wanted. I would say anything. I would say -\n\n\"Say you love me.\" \n\nI froze for only a moment before my face was pressed next to his, my lips below his ear. \"I love you, baby. I love you. I love you.\"\n\n\"Oh, fuck.\" I felt him seize around me as my words wrapped around his soul. \"Sailor!\"\n\n\"I love you.\" My hips hitched as I emptied myself into him, my hand so tight in his. \"I love you.\" \n\n\"Sailor,\" he whispered as I collapsed next to him, gathering his body to mine. \n\n\"I love you,\" I told the back of his head. The pounding of my heart took up the refrain. The stillness that existed around us, so sudden, so strong, took hold and kept the words safe. \"I'll love you forever.\"\n\nThe Captain lay in my arms, quiet and shaking, for some time. I thought he might have fallen asleep. When he moved it was sudden and violent and perfect, his elbow nearly catching my chin, his face so serious I almost pulled away before he grabbed my hair and pulled my lips to his.\n\nAt the end of the kiss we were both panting. He pressed his forehead to mine. \n\n\"Thank you,\" he told me. His dark eyes searched mine, and I know they found what they needed because I know I was everything that he needed, because he was the same for me. \"Thank you.\" \n\nI wrapped my arms around the small of his back and gathered him to my chest, content and tired and happy, and so, so in love.\n\n***\n\nThe Captain had just fallen asleep when Natch knocked on the door. \n\n\"Fuck,\" he mumbled sleepily into my chest.\n\n\"Who is it?\" I called out. Natch identified himself and I told him he could come in. \n\nYou would think he would expect to see us in this state by this time, or at least be used to it. \n\nHe was not. \n\n\"Jesus.\" He turned away immediately, covering his head with his arms. \"Gods. All the. At least warn me, fuck. You gonna get dressed or some shit?\" \n\nI shrugged. I wasn't going to move, not when the Captain was so comfortable in my arms. \"What did you need?\"\n\n\"The bearings.\" His voice was muffled from where he stood. \"We're at a decision point and Cap told me to come and get him when -\"\n\n\"Aw, fuck,\" the Captain muttered in my arms.\n\n\"- we got to the currents we needed,\" Natch continued. He bounced for a moment on the balls of his feet, waiting. \n\nThe Captain began to push away from me, but his heart wasn't into it. \"I'll go show him,\" he grumbled. I could tell just how little he wanted to be moving and held him fast. \n\n\"Natch knows where the Ephretes are,\" I reminded him. \"There's no need to get up. \n\nNatch,\" I called out. \"You'll be taking the Ephretes until they fray. It should be a five days journey.\"\n\nNatch shifted but didn't leave.\n\n\"Is there something else you need?\" The Captain had laid back in my arms and was breathing evenly again. He would be asleep in a few moments.\n\n\"The Ephretes?\" Natch confirmed.\n\n\"Was I not clear?\"\n\n\"No, yeah, it's just.\" He shifted. \n\n\"It's just what.\"\n\nHe didn't turn around, but he began bouncing again, slow and uncomfortable. \"You know who else uses the Ephretes this time of year.\"\n\nThe Captain was nearly asleep. I pushed back a strand of hair from his face to better see the gentling of his features. I loved seeing him like this, on the doorway of peace. It amused me to know all the violence he held so -\n\nNatch's words settled onto my soul. \n\n\"Oh.\" I sat up to look at him. He was standing very still except for the tell-tale bounce. It was like watching a statue being shaken. \"I didn't realize it was that time of year.\" Yarrick would be making his runs to the Mainland, his hulls full. This was when he had picked me up. This was where he had picked me up. \n\n\"It is.\" His arms crossed, then returned to his sides. \"What if we run across him?\"\n\nI took a moment to take in this man standing before me, his anxiety turning him into something he couldn't control. What if we did run across him?\n\nEasy. Simple. Hadn't I made a promise? Hadn't I already claimed his soul? \"We kill him.\" \n\nNatch turned to me, his bouncing arrested in his moment of surprise. His eyes tracked over my face, set and confident. I watched him take some of that calm onto his own face, if not some of the confidence.\n\n\"Okay,\" he said. \"Okay.\" \n\nThen he pointed at me. \"But you're fucking telling Sneg.\" And he turned and left the room.\n\nI stared at the door long after it had closed. Was this smart? It would take me from my goals, keep me from my daughter. But, I rationalized, perhaps we would not even run into the man. Perhaps it would not even become an issue.\n\nWhen had things ever been so easy with me?\n\nOnly the fates would tell, only the sea would determine if our paths would intersect. I gave myself over to its currents and laid back down with the man I loved.\n\n\"Sailor,\" the Captain murmured as I joined him, his body poised on the doorway of sleep. \"Who did you say we're killing now?\"\n\n\"A bounty man.\" I thought about adding his connection to Natch, but that was for Natch to share if he was willing, if he was comfortable. If he wanted. \"He's the one who sold me to the mines. His death is mine.\"\n\n\"Okay, sounds nice.\" The Captain yawned and snuggled closer into my arms. \"Just don't take too long, we have places to be.\"\n\nI kissed him on his forehead. \"Of course.\" But I don't know if he heard me; he might have already been asleep. I smiled down at this man, this loving, violent, peaceful man, and then settled down beside him to join him in sleep.\n\n***\n\nBaking bread in an art. You need the coals just right, the heat to be absolutely precise. It takes a careful hand. It takes a steady eye. Above all, it takes a lot of pain.\n\nThere's this moment when you're raking the flame to get a better one, when you're trying to make everything perfect. And in that moment you will always be burned. The sparks will fly up, they will land on your arms and no level of patting down or running water over your body really makes those coals go out, not right away. Minnie called that moment trying to hold a star. Shit, she'd say when I came in to see her in the mornings, her arms deep in a bowl of water. Got caught trying to hold another star. \n\nI didn't like her doing it. I hated seeing her in pain. So I would come down every morning and rake her coals for her, make them how she wanted. Feel hundreds of sparks land on my skin. Minnie used to laugh at me, at how stoic I would try to be. You big man, she would say, you eternal soul. Even you aren't that large. Do you really believe you can hold the whole of the sky? And she would laugh as another spark landed on my arm, or chest, or nearly caught up in my long, fine hair. \n\nAnd yet here he was, and here my arms were wrapped around him. Here his back was, pressed against my chest, my stomach. My face buried in the small of his neck. Look, Minnie, I thought. I hold the whole of the sky.\n\nAnd he burns me so well. \n\nI kissed the back of his neck and gently disentangled myself from him. He grumbled slightly at the disturbance, still worn from the night before and not used to being up so early. By the time I was standing beside him, he was again deep in slumber.\n\nI smiled down at him before heading toward the kitchen to help Cookie start the daily baking.\n\n***\n\nSneg pulled me aside at breakfast. \"The fucking Ephretes?\"\n\nI shrugged. There was really nothing more to say.\n\n\"I don't want to see him,\" they told me. \"I never wanted to see him again. That's why I left the fucking ocean. This, this is why I left the sea.\"\n\n\"We might not even run into him,\" I told them, not believing it for a moment.\n\n\"And if we do? What do you think will happen? We'll kill him and then everything is better, me and Natch are suddenly healed? We just close that chapter of our life like it never even happened? Fuck, man. This is stupid. This is cruel.\" They stared me down with eyes so light they couldn't even be called blue. \n\n\"So you don't want him dead.\"\n\nThey threw up their hands. \"Of fucking course I want him dead. I want him so dead he can't touch anyone for the past twenty years, but that can't happen and it won't happen so don't think that this won't fuck me up. Don't think that this won't fuck Natch up.\" They narrowed their eyes. \"Don't think this will fix anything, that's what I'm saying. You can't just kill trauma. You of all people should understand that.\"\n\n\"Sneg.\" \n\nSneg and I turned at the soft voice behind them and found Natch, quiet. Bouncing. \n\n\"Fuck,\" Sneg told the air. Or maybe me. It was hard to tell.\n\n\"Come help me with the sails?\" Natch asked. \n\nI watched Sneg look between their friend and my form, again and again, trying to decide if this fight was worth giving up. Finally they sighed. \"Yeah, Natch. I'll be right there.\" Then they pointed at me. \"But don't you fucking forget what I said.\"\n\nThey turned and walked away past Natch, not waiting for him to catch up. Natch gave me a look. \n\n\"Don't you have sails to work on?\"\n\n\"Fuck, Ghost,\" he muttered, and turned to follow Sneg.\n\n***\n\nOn the third day on the Ephretes, we lost Ichor.\n\n\"What do you mean, you lost Ichor?\" I asked Sneg. \n\n\"I mean, no one's seen him in six hours. We thought he was just in his hole down below decks but.\" They shrugged. \n\nI spared a quick glance at the Captain, deep in a conversation with Natch about sails and wind strength. Ichor was squarely my responsibility, since I had brought him back. I would rather fix this problem quickly and not ever have the Captain involved or stressed over it, especially since it might involve Dave.\n\nDave. At the thought of him a slight anxiety built in my stomach, but I steadfastly ignored it. It was unlikely that Dave would take back Ichor to get back to me, or to get at the Captain. But still. One could never be too careful. \n\n\"You checked the riggings?\" I asked.\n\n\"Of course. And behind the barrels, and my hammock and the storage room where he sleeps.\" \n\n\"Fuck.\" I pressed my hand to my face. \"Alright.\" I turned without checking to see if Sneg was following. \n\nThey couldn't keep silent anymore when they saw where we were heading. \"Why the fuck would he be in the kitchen?\"\n\nHe wouldn't be. I, however, needed Cookie's window if I was going to get to the ocean to divine. I didn't bother to explain this to Sneg as we made our way into the small space.\n\nCookie was working on dinner as we walking in. He raised an eyebrow and jerked a head toward the window. \"Was wondering when you'd show up.\"\n\nMy question to him died on my tongue when I saw the rope that already hung from the window, taut with the weight of a body.\n\n\"Huh,\" I stated, crossing my arms. I had never had a soldier brought back that willingly went alone into the ocean. \"He drowned yet?\"\n\nBeside me, Sneg started. \n\n\"Not that I can tell,\" Cookie said. \"And that one ain't shown his face either.\" He pointed out the window. \"You got a strange one, there.\"\n\nI did indeed. \n\nI sent Sneg back up on deck, against all their protests. Then I settled down to wait. \n\nIt was another two hour before Ichor drug himself, dripping and pruned, through the small window. I passed him the towel Cookie had left with me. \"You shouldn't do that. He might claim you again.\"\n\nIchor merely shrugged. \"I missed the ocean.\"\n\n\"You aren't worried?\"\n\n\"If he comes for me, he comes for me. I wasn't afraid when I was alive.\" He looked down at his hand, a motion that seemed even slower for the mercury he held in his veins. \"Why should I be afraid now?\"\n\nBecause now you've seen what it's like, I wanted to say. Because Dave has seen you and knows your face, and is more likely to come for you. Instead I asked him the more important question; \"Do you want to go back?\"\n\n\"No,\" he answered immediately. Then he seemed to think on it more. \"It doesn't seem much different than this, I guess. It's all death.\"\n\nI raised my brow. \"Do you regret that I brought you back?\"",
        "\"No.\" His answer to that question was just as immediate. \"I like it here.\" He sighed and looked out the small window. \"It just becomes hard, to not belong anywhere.\" \n\nI understood what he was saying. I had brought him back to a place where he should have been comfortable; instead he was ostracized, different. And he had such a perfect view of the ocean, a place where he had found a home for the briefest time, but now that home had been taken from him as well. He was a being stuck in an inbetween, a perpetual outsider. At least when I had brought others back, there had been more like them. \n\nIchor was alone. \n\nI placed my hand on his shoulder and he sighed. \"It'll be better in time,\" I told him, not sure it was true. \n\nHe accepted my lie with grace. \"He's watching this ship,\" he told me. I knew he was talking about Dave. I had known it before he had told me, couldn't not know it. Dave was always watching any ship that carried men that used to belong to him, doubly so when those ships also carried me. \"He'll never stop looking.\"\n\n\"I know.\" I shrugged. \"I wouldn't expect him to.\"\n\n***\n\nI asked Cookie that evening if there was anything to be done about Dave's watchfulness.\n\n\"You're speaking of spells,\" he said incredulously. \"You want me to do spells against him.\"\n\nI shrugged. \"There are ways to keep him at bay.\" I had seen Minnie do it.\n\n\"Aye, boy, but if you know those spells then you know they are by nature violent. Violent and malicious.\" Cookie shook his head. \"And not on my end, either. You're askin' me to get the attention of a lot of nefarious beings, there, a lot of very nasty fellas just so you feel better sleeping at night. It isn't well done. It ain't smart.\"\n\n\"I didn't ask if it was smart,\" I told him. \"I asked if it could be done.\"\n\nHe stared at me, silent, for a long time.\n\n\"Aye,\" he finally said. \"Aye, I could do it, but it would bring more attention to you than before. He couldn't see you, but he'd be searching then. Searchin' and more likely to take action when he found you, since you used his children the way you did.\"\n\nI sighed. I knew what the spells would call for. \"Have you ever done the spells before?\"\n\nCookie crossed his arms.\n\n\"Could you do them again?\"\n\n\"No.\"\n\n\"Alan, I'm not asking you to, I'm just asking -\"\n\n\"Boy,\" Cookie hissed, shooting a glance behind me toward the open door. Men were beginning to filter in for dinner. \"I said no. That's final. I'm not that man anymore.\"\n\n\"Aren't you?\" He stared at me, arms crossed, eyes narrowed. \"You don't change who you are when you change your name,\" I reminded him quietly.\n\nHe rolled his eyes with a scoff. \"Aye, boy. And you're one to talk with that.\" He turned away and began getting the bowls ready for the men. \n\n***\n\nIt was the fourth night on the Ephretes that we found the ship. \n\nI was sleeping soundly, the Captain wrapped in my arms, when Natch burst into our room. He didn't care that we were naked. He didn't seem to notice the bite marks decorating my ribs and neck.\n\n\"Yarrick,\" he said.\n\nI was out of bed in moments. \n\nIt was good that we found them in the night. We slid past them silently, no flag flying. They flew the King's flag, the mainland King. The Captain told me that as we passed them, the man on watch actually waved. \n\nI didn't see. I was already in the water. \n\nI did this ghost alone. I knew the ship the best after Natch and Sneg, and their memories were so strong there was no guarantee that it would hinder as much as help once they were aboard. I had no such issues. It was only two hours past the moment I slipped into the water from our own anchor line that I emerged on Yarrick's deck, body covered in nothing but bloody tally marks and victory, holding the head of the man who had sold me as if I were chattel. His body had already sunk into the sea. \n\nIt would take his soul years to find it's way to Dave, if it ever did. I hoped his ghost wandered eternal. I sent no metal down with him to aid his path, stripping his body of valuables and pulling his earrings from his ears before dropping it on a pile of rope. His men scattered before me, but I paid them no heed. Any man I recognized from my time on the ship was already dead.\n\nThe Captain and his ship pulled up alongside with the rising sun. I stood waiting for them, blood drying on my body and making me feel like I would crack. I watched the Captain take in my naked form, the tally marks that showed how many I had killed lined up on my chest like pride, like shame, like nothing but numbers. It was a ritual to me. It was something I did to strike fear into the hearts of men, nothing more. I did not know what it meant to the Captain to see those red marks mingled with the ones he had placed on me so few hours ago.\n\nHe frowned, eyes glancing past me to the carnage that spread across the deck. \"You made a mess,\" he stated drily. \n\nI shrugged. Did he expect vengeance to be clean?\n\n\"Well.\" He turned back to me briskly. \"Are we done here?\"\n\n\"Almost.\" I looked behind him and found Sneg, waiting. Hovering. \"Where's Natch.\"\n\n\"Fucking puking.\" They strode past me onto the deck, carrying their memories on their body in a false nothing that was so violent, so painful to watch. \"I told you this would fuck him up.\"\n\nI said nothing, just watched as they made their way below deck. \n\n\"What are they doing?\" the Captain asked me.\n\n\"What needs to be done.\" I didn't know what that was. Sneg would know. Sneg would make it happen. \n\nFor a long time there was nothing but silence and the creaking of the ships. Then screams began to work their way up from below deck. The Captain shot me a worried look. \n\n\"They know what their doing,\" I told him. I trusted Sneg. \n\n\"This isn't the way we do things,\" he told me softly. I knew what he was saying; his men would have questions. This looked like slaughter. This was slaughter. And I might trust Sneg and he might trust me and his men might trust him, but through how many iterations can trust pass before it's stretched too thin?\n\nI didn't have answers. I could speak to my own vengeance; I couldn't answer for Sneg and Natch's. I wouldn't, not without their permission.\n\n\"Cap.\" Finn was at our elbows. \"What are we doing?\"\n\nIt was at that moment that the first of the children ran from below deck. \n\nThere was no reason to have children on your ship, not a ship like that. Family ships, ones that held men and women and entire groups of life, those had children. The ships in the south that were entire villages, or the ones in the east that seemed to be all one extended family.\n\nThis was no family ship. There should not have been children. Finn knew it. The Captain knew it. He reached out to me and took my hand, his eyes hard on the way the small bodies ducked as they rushed through the door like they were sure the sunlight would hurt. At first Finn swore each time another would rush into the light, blinking and skinny and afraid, but he ran out of curses. Or maybe out of heart. \n\nThere were too many children. \n\nSneg followed them up, their white clothes stained with blood, a girl no older than thirteen at her side. The girl held a blade that was also covered in blood. \n\n\"Listen to me,\" Sneg shouted, their voice carrying with the help of the things they carried within. The men on the deck cowered. \"Every single one of you is complicit in this. Every fucking one. I see you. We know you. The only reason you aren't dead is because I didn't know you when I was here.\" They pointed at the child at their side. \"But she knows you, she knows you here and now. And if she points to you.\" Their eyes flashed. The sea in me quivered in response. \"You die.\"\n\nThere were no questions. There was no argument. The girl pointed to man after man and they stood silent, or ran, or plead, but Sneg was not a being of compassion or perhaps no longer even a being and they died, one after another, and we stood and watched them silently. \n\nWhen Sneg was finished, there were still enough men to run the ship. \n\nJust. \n\nThe children were now armed and understood their power. Sneg had gathered them all to them, had brought each and every one to a conference at their feet and I watched, satisfied, as the things within them spread out over those small charges and promised protection and watchfulness.\n\nAs I watched so, too, did the men that were left. They did not look satisfied so much as terrified. When Sneg was finished with their task, I took a man who looked vaguely competent aside and gave him his instructions. He was to take his charges to Hyrun where they were to seek out Donar. Donar would find them a place to live, shelter and food and families. Donar was solid; he had shown that to me when he had refused to be afraid of the sea. \n\nThe man nodded unhappily. I did not bother to tell him what would happen if he did not follow my instructions. The carnage on the deck made that clear. \n\nSneg walked over to the pile of rope where I had let the head from the body that used to be Yarrick fall. They picked it up, inspecting it as if looking for some shred of understanding, some closure. I stood back and let them be.\n\n\"Bastard,\" they finally said, walked over to the side of the ship, and then he was gone into the unforgiving sea.\n\n***\n\nI made my way first to the Captain as our ship pulled away from the bounty ship. I didn't know what this would have meant to him. It had not been his vengeance. It had not been his violence. I wanted to touch him, to make sure he still understood that I was safe, that I was real, that whatever else I might be I was his, his forever.\n\nThose eyebrows slammed down as I came towards him, causing my stomach to drop with anxiety. But he merely sniffed and shook his head. \"Bathe. You smell like blood.\" \n\nI nodded, suddenly afraid that my show of brutality had shaken something loose in the things we had become. My hands shook as I headed below decks. Never, never before had I reacted like this to a fight. Not since I was a child and killing was first introduced to me had I wondered what death might mean to those around me; I killed, and those that decided to exist in my periphery took that as they would. It was part of my life. It was my way.\n\nBut the Captain was my world. And if he did not accept my life, if he took exception to the way I existed? I would be split in two.\n\n\"Ghost.\" I froze at the sound of my name; my eyes were still adjusting to the dark. My head swung slowly towards the source of the sound, letting my pupils grow until they took in enough light and I saw Natch crouched at the end of a small hallway.\n\n\"Natch.\"\n\n\"I didn't. I couldn't.\" His arms were wrapped up tight around each other. I had never seen him so affected by something before, never seen him allow himself to appear so emotional. It brought my attention to him with a clarity that surprised me. \"Is that his blood?\"\n\nNatch knew that I marked mens' deaths on my skin. I had told him as much when I taught him how to ghost; it was a part of that. I pointed to the final tally that marred my chest. He drew in a breath. \n\n\"So he's dead.\"\n\n\"Sneg dropped his head into the sea,\" I told him. \"He went in with no silver, not even lead.\"\n\n\"Fuck.\" I watched the small blonde collapse in on himself. \"Thank you, Ghost.\"\n\nI was uncomfortable with his thanks, didn't like the way it sat in front of me like I had earned some prize for doing what I would have done anyway, and told him as much. \"It was my vengeance. He wronged me.\"\n\nHe didn't seem to hear me. \"I couldn't do it. I fucking froze, I wasn't strong enough and.\" He shook his head.\n\nSneg's words were harsh in my ear and on my soul as I saw the ways this has broken Natch. I took a breath. \"You weren't expected to. You never should have had to. This was something that was for me, Natch. Your strength came in surviving, it comes in the fact that you're still alive and he is not.\" His eyes slowly came up to mine. I hoped I was saying the right words. I hoped Sneg would say better ones to him later. \"It doesn't take strength to kill those that wrong you, Natch. That is just the way I am, it has nothing to do with my strength. That is simply a truth. An extension of my being.\" I tried to see if this was having any effect on him and could not tell. \"You're a different being. You should not do the same things I do; it wouldn't be right.\"\n\n\"I can't do the things you do,\" he was quick to say.\n\n\"I wouldn't expect you to,\" I told him. \"You aren't me.\"\n\nHe took a deep breath, thinking through my words for the entirety of the inhale. When he let it out he also allowed some of the tension to leave his body, his arms and shoulders slowly falling with his chest. \"Okay.\" I don't know that he was talking to me. \"Okay.\"\n\nThen; \"Oh, fuck. You're naked.\"\n\nI was. And covered in blood. \"I was just on my way to get cleaned up.\"\n\n\"I should let you go.\" He stood there, arms relaxed, hands and face and being still so tense. I wondered what kind of damage I had done to his soul with my existence. \"Yeah.\"\n\nI turned to go. \n\n\"Ghost?\" I paused mid-turn. \"Thank you.\"\n\nThe thanks still felt wrong. I accepted it anyway. \"Aye, Natch. Of course.\"\n\n***\n\nThe Captain found me in his room, hauling my body back through the window with the aid of a rope I had tied to his bed frame. \n\nHe laughed to see me, dripping and frozen half-in and half-out of his window. \"Now you'll smell of the sea.\"\n\n\"I needed to wash,\" I muttered and finished my entrance. At least he wasn't acting like my actions earlier had driven something between us. I was still cautious as I moved around him to find a towel.\n\nThe Captain was not. He grabbed me around my waist, toppling us onto the bed. \"I'll get you wet,\" I pretended to complain. My arms were already wrapped around his neck, his waist. \n\nHe wrapped his legs around me in response and smiled. \"Good.\" His nose slid across my neck. \"I want to be whatever you are. If you're wet and smell like the ocean, then I want to be wet and smell like the ocean.\"\n\nI carefully ran my hand down his back, my words forming slowly in my mind around the grains of sand he had slipped there earlier. \"What if I smell of blood?\"\n\nHe pulled back to give me a look, one eyebrow raised. \"Then I'll smell of blood.\" \n\nI hummed a soft acceptance but still didn't feel content, somehow. My fingers slowly traced over his back, looking for something I didn't know how to find. \n\n\"Sailor.\" He sat up, looking down at me. \"What's on your mind?\"\n\nI didn't answer, merely continued to pull currents over his shoulders. He was here, he was in my arms. This was good. I didn't want to mess this up with my worries.\n\nHe was staring me down, his eyes taking in every inch of my scarred body. I didn't let his eyes land on mine for long. \"Something's bothering you.\"\n\nI shrugged. Something was, but I had never been the most verbose individual even in my joy. Bringing this up seemed superfluous. \n\n\"Hey.\" He pulled my chin toward him until our eyes met. \"Talk to me.\"\n\nIt wasn't a command. I could have not spoken, if that was what I wanted.\n\nI found that I didn't.\n\nIt was hard, still, to speak to him. To speak to anyone. Not like this. And so at first I merely reached up and grabbed hold of him, pulling him into my chest so that I could hold him tight. I wanted him to just know, I wanted things to just be right. \n\nBut the world was rarely so easy, even when love was involved. And so I nestled his head beneath my chin and took a breath. \n\n\"I was.\" How to put it? What were the right words to say? \"I was so violent.\"\n\nHe stirred slightly in my arms. I held him tight, not wanting to lose him. Afraid of what this might bring up. \n\n\"Of course you were.\" His voice worked its way up from my neck, tickled up past my chin and into my ear. \"You're the sea.\"\n\nHe said it like I existed it, like it was. Simple. Easy. Accepted. \n\nHow could I have ever believed he would react like any other man? He was the Captain; he was the sky. He held my truths, eternal and endless and ephemeral, and still there was room for so much more. I sighed deeply in content, in relief, and settled myself around him like flowing water. \n\n\"Were you worried?\" I nodded. \"About me seeing you like that?\" I nodded again. \"I suppose, I mean there's knowing and there's seeing. I knew you were the ghost of the North, and that you did that shit with the blood. And there's hearing the rumors and then there's seeing the actual fucking being, standing tall and real and fucking terrifying, covering in the blood of enemies. Our enemies.\" He dropped a kiss on my collarbone and my waters rippled. \"But I always knew you were like this, love. Even before you told me you were the ghost. You're the sea. Sometimes you'll be calm and beautiful and safe, and the next moment you'll take down islands.\" There was a perfect mixture of awe and mundanity in that statement; this is how it is. It's incredible. It is our life. Isn't it amazing? \"Seeing you like that isn't a surprise, and it doesn't scare me.\" \n\nI buried my face into his thick black hair and wondered how I had gotten so lucky. \n\n\"Besides, that wasn't all you can do. Right? You can go much, much more violent than that.\" He pushed away from me until he could search my face. \"I'm right, aren't I? That was nothing. That was. Mortal.\"\n\nI brought my hand to his face and slid it along his cheek. Mortal, I thought. There is nothing mortal about our love. \n\nInstead of answering his question, I addressed something he had said earlier. \"You didn't always know.\"\n\nHe frowned up at me, trying to figure out what I was talking about.\n\n\"You used to believe I was no different than the other men,\" I chastised him softly. A smile began playing at my lips as I saw indignance spread over his expressive eyebrows. \"You believed I could be a prisoner. You thought ropes could keep me.\" \n\nHe flipped me so that he straddled my hips as I laughed, his face now easy and amused. \"And can't they?\" He caught my wrists in his hands, bringing them above his head. He leaned down close to my face, a grin soft and sharp and violent in its love. \"Don't my knots keep you, my love?\" \n\n\"You keep me,\" I murmured into his lips. \"I'd stay forever for you.\"\n\nHe kissed me then, long and deep and dark. I tasted promises on his lips and wondered what they were. I felt love between his teeth and knew it was all for me, only for me. \n\n\"Forever?\" he asked when he pulled away. I met his eyes and saw them so dark.\n\nUh-oh, I had time to think before there was a knock on the door. \n\n\"Ah, fuck.\" He sighed as he swung himself away from me. \"You'd think they'd have this shit figured out by now. What?\" he snapped as he opened the door. \n\nI smiled, feeling his touch sink past my skin and become part of my soul, and then I too made my way from the bed in search of clothes. \n\n*** \n\nCookie was getting more and more nervous the closer we got to to my home.\n\n\"You know I don't like this,\" he said as he made his way back into the kitchen for dinner on the fourth day. He had been sneaking around the ship, placing protections where he thought they would be most needed. I had told him there was no need to hide, that the Captain would understand, but he wasn't ready to reveal his identity just yet. \n\n\"I got my place on this ship because I was a nobody,\" he told me. \"I wanna stay that way. If they knew who I'd sailed with, who I'd trained under -\"\n\n\"The Captain sailed under the King,\" I reminded him. \"Most of these men come from the King's fleet.\"\n\n\"Aye,\" Cookie responded hotly. \"But there's a difference between sailing under and sailing with, boy.\"\n\nI shrugged. I wasn't so sure that the Captain hadn't sailed with the King, not with the way he carried his words so personally. I was, however, sure that Cookie had not sailed with the King. \"I'm sure the Captain would understand. Besides, I doubt they even still tell the stories of how your ship -\"",
        "Cookie drowned out the rest of my words in hisses. \"Boy! Not so fuckin' loud! Christ.\" He shook his head, turning back to chopping onions with a determination that raised my brow. \"I'm a cook. Let me be a cook. I don't wanna go back to that place, not never. Learned my lesson about where I belong, and where I belong is right here in this fuckin' room. Doing my cooking, taking care of you idiots.\" His gesturing knife nearly caught my arm and I pulled back. \"Do you know where they'd be without me? Do you know how easy they'd be to find? All the shit they'd have wandered into with the power that captain holds all tucked up in his soul?\"\n\nI looked down at the stout cook. I understood penance as a concept, had seen how that ate people up and spat out skeletons of guilt. I hoped this was more than that to him. \n\n\"And they don't even know,\" he muttered as he went back to his onions. \"Fuckin' thankless job, being cook. I save their skin once a week, I swear, and you know what thanks I get? You know what they say?\"\n\nI smiled, my hand coming to rest on his shoulder. \"Thank you, Alan.\"\n\nHe narrowed his small eyes up at me. \"Well. Aye, boy. It's just what I do, then, isn't it?\"\n\n**\n\nOn the fifth morning on the Ephretes, we lost Thron.\n\n\"No,\" I told Gret. He stood before me looking nervous, his hands sliding across each other in a pattern of anxiety. \"No. Absolutely not. I did not lose the second biggest man on my ship two days after losing the first.\"\n\n\"He didn't come back last night,\" he repeated. \"I waited til morning to see if maybe he hadn't just snuck off somewhere, but.\" He stared at me helplessly.\n\nI stared back. \"Why haven't you gone to the Captain?\" I understood that I might be seen as Ichor's wrangler. I might even be seen as the Russians, the ocean help me. \n\nBut Thron?\n\n\"I can't go to Cap.\" Gret sounded panicked. \"You gotta help me, Ghost. We gotta fix this, we can figure this out.\" He paused, looking uncomfortable. \"The Russian is missing too.\"\n\nAh. \n\nI took a moment to wonder how I had come to be here. How I had come to be the less threatening option, the one you came to for help? A way-station for mortals. Could they not see that I was the ocean, carried its power and indifference and vastness in every one of my cells? Could they not taste the salt on my very breath?\n\nGret stared up at me, his eyes pleading. \n\n\"Alright,\" I sighed, pressing a hand to my forehead. \"Where's the last place you saw him?\"\n\nGret, it turned out, had not done a very thorough search of the ship. Probably better that he hadn't, because if he had been the one to find Thron and the Russian wrapped around each other in the riggings, fifty feet in the air, there was no telling what might have happened. \n\nI leaned back and smiled, seeing the two massive men entangled with each other and the ropes. The Russian had created a kind of hammock from the extra ropes in the way he had taught me, or maybe I had taught him. It was so long ago the providence of the information was lost, but I recognized the construction as one we shared. I watched the two mens' chests fall evenly for a few more moments before leaning forward and gently tapping the Russian on the shoulder. \n\nThe large man's eyes slowly opened. I watched an expression of awe spread over his face as he realized where he was, as he took in who rested in his arms. I cleared my throat.\n\nHis eyes drifted to me. \"Priliv,\" he greeted me genially. \n\n\"Ivan.\" I gestured at the man still sleeping in his arms. \"Having a good morning?\"\n\nThe smile that slid over his face was sloppy and so filled with joy it spilled all over the deck below. \"The best, Priliv. Only the best.\"\n\nI had to smile back. \"Wake him. He's needed on deck.\"\n\n\"Aye.\" I don't think I had ever head the Russian speak so quietly. I made my way back to the deck in the way of the land boys so not to scare the men coming onto the deck. Above me, I could hear the quiet murmurs of conversation as two men took their time pressed against the sky.\n\n***\n\nIt was on the fifth night that we slipped from the Ephretes and into the first cracks of the world.\n\n***"
    ],
    "authorname": "nakamook",
    "tags": [
        "gay bdsm",
        "gay domination",
        "gay pirates",
        "gay male",
        "gay romance",
        "gay anal",
        "gay novel",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-16-1"
}