{
    "title": "Pool Boy Ch. 21",
    "pages": [
        "After cleaning up from Alexis' squirt in Emma's car, I sent the video of my marriage proposal to Alexis to her mother. I knew my Mom would be sitting on pins and needles so I went home to tell her that everything went fine and play the video for her. She doesn't have a smart-phone so I had to rig up some other way to play it for her. \n\nWhen I got home, I went straight to my room and got out of my suit and took a quick shower. I would take the 'squirt' stained suit to the dry-cleaners tomorrow. I put on my robe and went to the living room where Mom was anxiously awaiting the story. I had sent the video to my email and I played it for her on my laptop. Dad was more interested than I expected and he stood right behind Mom as she watched. She was all smiles as the video got to the part where I went to one knee. She loved Alexis' \"YES\" response. I showed her how to play the video and she played it over and over while Dad and I went and sat down. The ballgame was on and we watched it together while Mom wiped tears from her face watching the video over and over again. \n\nAlexis decided not to tell her sister, Dee about the proposal. She just sent my video to her in an email with no explanation. Dee called her later in the day and called her an 'ass-hole' for not telling her. She loved the video though. Alexis also sent the best of the photos taken by the lady at the restaurant. Dee commented on that too, \"You guys are a gorgeous couple. I'm having this framed.\" \n\nNothing was ever said about a double-wedding with Dee and Jarrod as Emma had predicted. It was only a week away after-all. Alexis was glad about that because we had decided that we would get married next June and live together off campus. She had been accepted at State University and was going to study Retail Merchandising. I had worried so unnecessarily earlier in the summer. \n\nAlexis and I did our work as usual and on Thursday before Dee's wedding on Saturday the stars aligned when Sophia and Olivia were poolside when we arrived to clean Olivia's pool. To say the least there was no pool cleaning going on. We just dropped our equipment and buckets and headed for them as they stood to greet us. Olivia knew the situation and she came directly to me leaving Sophia and Alexis to mingle. \n\nOlivia came up to me and peeled my tee shirt off. I bent down to accommodate her efforts. She pressed herself to me and kissed my nipples which instantly hardened along with my dick forcing it out of the leg of my shorts. She knew what would happen and her hand went straight to it without even looking. She jacked on it like she was pulling on a rope and it felt great. I bent down to kiss her and my hands went to cradle her monster tits. She giggled into my mouth as we maintained a passionate kiss. I glanced over at Alexis and Sophia to see if they were already into it. They were talking and eyeing each other like they were sizing each other up. Alexis had that look on her face. \n\nOlivia broke our embrace and dragged me by my cock over to Sophia and Alexis. She said, \"Why don't we make ourselves more comfortable inside?\" Olivia led the way towing me along behind by my cock. Sophia took Alexis' hand and led her along behind me. When we got to the back door I turned to see that Sophia and Alexis had stopped ten yards behind and were basically mauling each other's faces. I wondered if they would even make it into the house. I couldn't linger to watch because Olivia didn't even slow down. \n\nOlivia was untying the bows of her bikini as we walked and piece by piece was dropping to the stairs as we climbed to the second floor. Olivia has an amazing body and the view from behind her was fantastic. My cock grew harder in her hand as I watched her ass swaying erotically from side to side as she took the stairs. Alexis and Sophia were not behind me. \n\nOlivia did not take me to 'My Bedroom' as I had called it ever since it was used as sex central during a house/pool party hosted by Olivia and her husband Ron earlier in the summer. She towed me directly to her bed and climbed up on it dragging me closely behind. She was breathing raggedly in anticipation. She went directly down onto her back and splayed her bent knees wide. Her face and chest was red from increased blood-flow. The red face framed by her platinum blonde hair was quite a contrast. Her tits were hard and her nipples erect and long. She released my cock and pushed her arms under side-tit and guided both hands to her sopping wet pussy. One hand folded back her labia as the other worked gently on her clitoris, which was puffy and erect. I used the time to strip out of my shorts. \n\nShe was staring at my bouncing cock as I sat back on my heels. She wanted me to eat her pussy and so did I, but I teased her to get her to tell me what she wanted. She finally did but I wasn't done teasing her as I pushed myself off my heels and bent forward to kiss and lick my way slowly up from her ankles, to the inside of her calves, to her knees. I maneuvered so I could kiss behind her knees and Olivia groaned. I knew that was an erogenous zone for her. I continued up the top of her thighs and then to her inner thighs. She watched every move as her breathing started to catch in her throat. \n\nI slowly moved my face into her crotch and lightly kissed my way up her pussy lips which she was still holding open with one hand. She was gasping for oxygen. I flicked my tongue along the length of her middle finger to her clitoris and she screamed hard, \"OHHH FUCCCK. YOU'RE DRIVING ME CRAAAZZYYYY. PLEASE GIVE ME YOUR COCK.\" I didn't comply with her wishes. At least not right away. I still had some 'driving' to do first. \n\nI flicked my tongue twice on her clitoris and she involuntarily humped her hips up both times. I dragged my curled tongue off her clitoris and down her pink folds to her anus and pushed my tongue onto her rosebud. She screamed when I touched her there as her head pivoted back on the bed to lift her torso upward and her hips pushed hard into the bed. Then her hips launched upward and her torso collapsed back to the bed. I lost contact with her rosebud so I flicked my tongue furiously all the way back through her pussy lips to her clitoris again. She screamed again, \"OH SHITTTT. I'MM GGGONNAAA CCCUMMM. OHH FUCK. YOU KNOW JUST HOW TO PLLLAAAAYYYY...\" As she was finishing her sentence, I drove the tip of my tongue as deep into Olivia's pussy as I could.  \n\nOlivia exploded into a massive orgasm as she exclaimed, \"AAAIIIIEEEEEE\" and then \"UUNNGG. UNNGGGG. UNNGGG.\" Her hips were bouncing and swiveling. Her legs straightened and then bent again as they clamped around my neck and shoulders pulling me into her. Her hands grabbed my hair and pulled hard. It hurt, but I was busy and ignored the pain. Her pussy was sucking my tongue in and pushing it out in rapid succession. I smiled to myself. Olivia was experiencing a mind-blowing orgasm of monumental proportions. She didn't stop. She kept right on going for almost two minutes. I tried to hold her in place so I could maul her pussy and clitoris but she was gyrating in such spastic contortions that I couldn't. I rode out her orgasm as best I could and was kind of relieved when she started settling down. She continued to gasp for air for another five minutes. \n\nI decided to let her recover before moving on to the next phase. She released her legs and they collapsed to the bed on either side of me. Other than her chest, which heaved up and down, she wasn't moving. I lifted her legs and maneuvered my legs under them and moved my hips up close to hers. Olivia's pussy was still bubbling vaginal juices onto the bed. As she continued to descend from her immense orgasm, I bent my cock down and dragged the glans from her clitoris to the bottom of her pussy. She groaned at the sensation. \n\nAround her ragged breathing, in a demonically deep voice she said, \"If you don't put that cock in me right now.\" She didn't finish the sentence. I pulled my hips closer to her with my feet dug into the bedding and drove my cock all the way to the bottom of her fuck tunnel. Her torso shot up like she was doing a sit-up and she screamed again, \"OHH MYY GAWWDDD. TOOO BIGGG. YESS. YESSS. FUCK ME. PLEASE FUCK ME.\" \n\nI took her hands and pulled her the rest of the way up to a sitting position straight into my lap with my cock buried deep in her. I moved my hands to her hips and pulled her hard to me. She groaned out with the extra penetration, \"JESUS CHRIST. I CAN\"T GET USED TO THE SIZE.\" She started flexing her hips driving them on and off me. She threw her arms around my neck and pulled her mammoth tits tight to my chest. She was doing most of the fucking now as I could only rock my hips under her. \n\nI hadn't noticed when Alexis and Sophia appeared but now they were sitting naked on the edge of the bed watching us. They were fingering each other's pussies. Alexis had a huge smile on her face as she watched Olivia and me flexing our hips into each other. When she saw me looking at her she said, \"Olivia is some kind of smoking hot, isn't she?\" I could only nod as my orgasm was approaching fast. \n\nAlexis knew very well the symptoms of my orgasms so she tried to help me hold off by standing up on the bed and straddling Olivia's sitting body standing with her pussy in my face. I instantly buried my face in her crotch. Alexis was nearly sitting on Olivia's head, but she wasn't aware of Alexis' presence as her mouth hung open and her eyes were closed. She was gasping for air as she vigorously pivoted her hips into mine. \n\nI concentrated on Alexis' pussy as I drove my tongue into her pussy before having to pull back to gasp for air myself. After a couple heaving breaths of air, I went back to eat Alexis' pussy. I took note that my orgasm had pulled back some. I knew it was still there but right then I wanted only to get Alexis off. She was soaking wet with her juices running in a stream down her thighs. I slurped up what I could. \n\nAlexis' legs were beginning to buckle as she stood there with one leg on either side of Olivia's body sitting in my lap driving her pussy onto my cock. Sophia was trying to figure out how she could get in on the action. She decided she couldn't and she sat there on the edge of the bed watching as she fingered her own pussy. \n\nI was intimately familiar with Alexis' orgasms and I could tell she was about to blow. Her knees quaked and I steadied her by grabbing the back of her thighs and pressed them against my shoulders. She was spread wide in this position and I ramped up my attack on her pussy while letting Olivia work the fucking motion. I knew Olivia was getting tired but she kept at it until she screamed out simply, \"I'MMM CUMMINGGG AGGAAIINNNN.\" \n\nI felt her pussy clamp down hard on my cock and then release before doing it again and again. In spite of my concentration on Alexis' pussy, my orgasm rushed forward again and I groaned hard into Alexis' pussy. I increased my pace on her pussy and began flicking her clitoris and that was it for her as her hips launched forward into my face and then back as her torso came forward. She screamed, \"MEEE TOOO.\" Her pussy clenched on my tongue pushing it out. I pushed it back in and her clenching pushed it out again. \n\nHer stomach folded and came down on the top of my head and she used it as a pivot point to maintain her position so she wouldn't hurt Olivia by falling on her. I started a low growl of a groan that increased in pitch and volume as my orgasm built higher and higher before I yelled out, \"OHHH FUCCKKK. MEEE THREE.\" I thought my guts were exploding out of my cock into Olivia's pussy. I groaned hard through every shot. \n\nAlexis recovered enough to pull one leg over Olivia and collapse to the bed beside Sophia whose attention immediately went to Alexis' throbbing pussy and bubbling vaginal juice. She pushed her lips to Alexis' pussy and began flicking her tongue and sucking and almost immediately, Alexis rolled into another orgasm. I was fascinated by how quickly Alexis could go from one orgasm to the next. I was still embroiled in my own and my attention quickly returned to Olivia. She had stopped moving and her chin had fallen into her cleavage. I couldn't see her face but she was mumbling something unintelligible. I lifted her chin and kissed her lips. She reciprocated as more of an autonomic response. The lights were on but no one was home. Then Olivia did what I was hoping she wouldn't. She started to fall backward bending my cock down as she went. It had softened some so my cock was more willing to bend that way but still, I had to sit up to relieve the strain. \n\nOnce Olivia had settled on her back, I was able to pull my cock from her pussy. Now Sophia saw her opportunity and she sprang into action. She grabbed my cock and stuffed it between her lips. Even though it was softening, Sophia struggled a little bit with the size. She pulled off the head and looked up at me and said, \"If I can get it back up again will you fuck me?\" I glanced over at Alexis who was lying on her side watching the action. Sophia face turned to Alexis with a pleading look on her face. Alexis nodded and smiled. I guess it was to be expected; all my women were now going to ask Alexis for permission to have sex with her fianc\u00e9. \n\nSophia pushed her lips over the head of my semi-hard cock and after a moment she started down the shaft. She got about half-way before she gagged. My cock was growing harder as Sophia stroked both hands in counter-rotating motion. She was grinning around my cock as she knew that she was going to be riding my fatty in a few more minutes. \n\nOlivia was coming back to life as her breathing became normal again. She sat up and was also watching Sophia working to get my cock up again. Alexis and Olivia glanced at each other and grinned as Sophia was making headway (pardon the pun). In two more minutes I started fucking Sophia's mouth. She marked her gag point with a hand so I couldn't force too much cock into her. After a couple minutes of this, Sophia pulled her lips off and lapped the underside of my cock from my balls to the head and then lay back on the bed between Olivia and Alexis. She had her knees pulled up together so her thighs were together and feet were in her crotch. From that position, I knew what she wanted from me. \n\nI grabbed her ankles and lifted them up over my right shoulder as I moved my cock into position at the entrance to her pussy. She tried to lift her head high enough to watch what I was doing but she couldn't see over her tits and her thighs were in the way anyway. Alexis maneuvered herself around behind Sophia's head and lifted her head to her lap. Alexis was in perfect position to molest Sophia's tits and she didn't hesitate. \n\nSophia's pussy was soaking wet as Alexis tweaked her nipples and I was lining up to fuck her pussy. I dragged my glans from her clitoris to her anus and then moved to push into her. She was grinning at me and then up at Alexis as I pushed in. She groaned hard from the moment my glans pushed in until my balls rested against her anus. Alexis grinned at me and mouthed the words, 'give it to her hard'. I smiled and started to do just that. \n\nI drove my cock in and out of Sophia's pussy for several minutes. I switch up the pace and the amount of cock I was fucking her with. She went nuts when I fucked her with just the glans at a furious pace followed directly by several deep penetrations. She violently shook her head from side to side as she screamed, \"DO IT. HARDER. I'M GOING TO CUM. OH FUCK. YES.\" We both were gasping for oxygen as I furiously drilled her pussy. My orgasm was imminent and when Sophia blasted in to hers, I exploded into mine. Torrents of cum rocketed up my shaft and Sophia screamed hard with each one as she drove her hips up to get as much penetration as possible. Her orgasm seemed to gently wash over her like a wave at the beach. She wheezed air from her lungs and gasped in deep breaths. I finished blasting cum into her and stayed deeply imbedded as her orgasm continued for another minute. Slowly, Sophia's breathing returned to normal and I pulled my softening cock from her. Cum followed me out and both Alexis and Olivia jockeyed for position to collect it and feed it to Sophia who eagerly lashed their fingers clean with her tongue. \n\nI got off the bed and found my shorts and pulled them on. My tee shirt was out by the pool. Olivia leaned in and kissed Sophia and then Alexis before moving off the bed. Her bikini lay on the stairs. Sophia and Alexi's clothes were somewhere else only they knew. Olivia and I went down the stairs as Olivia stopped briefly to put her bikini on as she retrieved the discarded top and bottom. I found my tee shirt by the pool and was pulling it on as Alexis appeared dressed in her bikini. She pulled on her shorts and blouse. Sophia didn't come back out. \n\nAlexis and I kissed Olivia and returned the equipment and chemicals to the van. With the upcoming wedding, we wouldn't be back for a few days. Alexis glanced back to see if Sophia had come out. She was disappointed that she didn't. \n\nI drove Alexis home and we both went inside. Emma was in the kitchen. We sat at the Breakfast Nook table and talked about Dee and Jarrod's wedding plans so everyone would be on the same page. I was to ride with Emma and Alexis tomorrow afternoon so we would be there for the rehearsal and dinner. Emma went down the list of family who would be in attendance. I didn't know any of them so I wasn't too interested. Alexis didn't know many either or hadn't seen them in many years. Alexis did remember her Aunt Jane, Emma's older sister, but hadn't seen her in nearly ten years. Alexis asked how she was. \n\nWith a roll of her eyes, Emma gave us the lowdown on Jane, \"She's two years older than me. She has naturally red hair but God only knows what color it is now. You'll recognize her; there's a strong family resemblance.\" \n\nI interjected, \"So she's gorgeous too?\" Emma smiled, cocked her head and threw me an air-kiss across the table. \n\nEmma went on, \"She definitely has all the right parts in the right places. If she finds out that Hunter has been \"servicing\" her sister, she'll want in too and she won't relent. She always tried to steal my boyfriends away ever since high school. Jane has been divorced three times and has one step-daughter, Julia, who is twenty-two and very attractive. She'll be there too. I don't think Alexis has ever met Julia before.\" \n\nAlexis said, \"I don't think so. She sounds delicious.\" Emma grinned and nodded. \"We'll have to make sure Aunt Jane and Cousin Julia discover our family secret about Hunter.\" Both Emma and Alexis turned their attention to me and Emma pushed her bare foot up into my crotch and rubbed it up and down my burgeoning cock. \n\nThe next day started out the same with the two morning pools and we finished well before noon. I had my newly dry-cleaned suit that I had bought in Las Vegas and the rented Tuxedo for the wedding hanging in the van along with a small suitcase. We would probably stay over at Dee's apartment on Sunday and do some city sights and shopping. Dee and Jarrod would be on their honeymoon in Paris. We grabbed a quick lunch and drove back to Alexis' house. I removed a set of clothes for today and transferred my suitcase and garment bags into the trunk of Emma's Mercedes. Alexis went to her room to get changed and I grabbed her and Emma's suitcases and garment bags and put them in the trunk as well. \n\nBy the time Emma and Alexis had dressed and put on their best makeup we were behind schedule. When they came down the stairs together the wait was well worth it. They were both stunning. My cock went instantly hard in my pants. Emma noticed the bulge and said, \"Now that's the kind of reaction I was going for.\" Alexis laughed. She walked up to me and threw her arms around my neck and stretched up to kiss me. I picked her up to me instead of bending down to her. She wrapped her legs around my waist and humped her hips into my crotch a few times just to feel my hardness on her sex. Emma walked on by and said, \"Come on you two. We're late and you've got plenty of time for that on the way.\" Alexis giggled through her lip-lock and then pulled her head back. I set her down and accompanied my two beautiful ladies to the car. Emma drove and Alexis and I got in the back seat. ",
        "We rode in silence for awhile enjoying the country scenery. Alexis was seemingly absent mindedly rubbing my thigh with occasional drags of her fingernails across my crotch. I was trying to ignore her but Alexis is very hard to ignore. In spite of myself, my cock began to harden. When Alexis got the response she was looking for, she looked up at me and grinned. Her hand stopped randomly caressing my thigh and unzipped my pants. She reached inside and pulled my cock out of my boxer shorts. Alexis draped her hand over the head and ran her fingernails up and down the shaft several times and I was hard as a granite pillar. She then wrapped her fingers around the circumference and slowly jerked me off. Emma adjusted the rearview mirror so she could see the action. Other than Emma, we had complete privacy because of the car's blackout windows. \n\nAlexis tightened her grip and increased the pace as I tipped my head back against the headrest. I closed my eyes and realized that I was breathing hard. My hips were involuntarily rocking in time with her strokes. Every time I opened my eyes, Emma was looking back in the mirror. I hoped that she wouldn't wrap us around a bridge abutment or something. From the motion of her right arm it was obvious she was driving with her left hand and frigging herself with the right. \n\nAfter several minutes, Alexis slid down in the seat and pushed her lips over my engorged glans. In that position she could see her mother's reflection watching us in the mirror. Alexis smiled at her around my cock as she pushed me deep into her throat. Emma's right arm movement increased as Alexis bobbed her head up and down in my lap. \n\nI was a little distracted worrying about Emma's driving capability while having an orgasm which, based on her breathing, was imminent. In the next minute, Emma slowed down and pulled into the breakdown lane and stopped just as she let out an incredible groan, as her hips flexed up off the seat into the steering wheel. Her chest then surged forward driving her hips back down. She repeated this several times before she settled down and pulled her hand out from under her dress. She whistled out a \"PHEW\" and then said, \"I guess I needed that.\" \n\nAlexis had stopped sucking my cock as she watched her mother's orgasm wash through her. Then she resumed her blowjob and within a couple minutes I was the one driving my hips up into Alexis' face as she drank several hard shots of jizz. She didn't want to lose any on her clothes or mine so she swallowed it as she received it. The car hadn't moved since Emma's orgasm started and mine finished. \n\nAlexis pulled her lips off my softening cock and stuck the tip of her tongue in the 'eye' to get every drop. She dragged her tongue all over my shaft and pushed it back into my pants. She sat back up and whispered in my ear, \"You owe me one.\" I laughed at that. Alexis got what she wanted when she wanted it. \n\nI whispered back, \"Any time, Babe.\" Emma adjusted the rearview mirror and drove back onto the highway. In twenty minutes we were pulling into the parking garage at Dee's building. We were staying the weekend in Dee's apartment. It would be crowded tonight in her two bedrooms but I knew we may only be using one anyway. Most of the out-of-town guests were staying at the same hotel as the reception. Jarrod had his own home - mansion really - just outside the city limits in a gated community. The happy couple would live there after tomorrow. The rehearsal dinner tonight would be hosted by Jarrod at Dee's favorite restaurant that she had taken us to a couple times before. \n\nEmma and Alexis went directly to the elevator while I collected the bags from the trunk. Alexis held the elevator door as I lugged all three bags inside and returned for the garment bags. Dee answered the door on the first knock. She was so excited. The three of them hugged each other and screamed like little girls. It was a sight to see and I stood back with the luggage and watched it play out. Alexis and Emma were dressed for the festivities tonight. Dee was dressed in a bra and thong. She was a beautiful woman and my cock responded accordingly. \n\nAfter a minute, Dee noticed me standing there with suitcases at my feet and garment bags in my arms and she broke from Alexis' and Emma's embrace and hurried to me and stretched up as far on her tip-toes as she could reach to kiss me. I leaned down to kiss her back. When she dropped back down she looked up at me and said, \"I know I'm getting married in the morning but you look delicious.\" She reached forward and ran her open hand and fingers along my zipper. \n\nEmma came over and wrapped Dee up in another hug and guided her back into her apartment. I brought everything in and left it in the Foyer. I loved the view from Dee's apartment and I couldn't resist walking directly to the floor to ceiling living room windows. As usual, I got too close and vertigo forced me to take a step back. Alexis, Emma and Dee disappeared down the hall. I went to the refrigerator and got a beer before heading down the hall to see what was going on. Dee was showing Emma and Alexis her wedding dress and the level of excitement rose again. I watched Alexis' face most of all. She had to be thinking of her own wedding and wearing her own dress. I took a big hit off the beer. \n\nAfter some visiting in the living room, Dee went to get dressed for the rehearsal and dinner. I took Alexis' and my luggage to the second bedroom. I wasn't sure what to do with Emma's luggage, so I asked her. She thought about it for a moment and then told me to take her things to Dee's bedroom. I smiled and did as she asked. \n\nDee was totally naked when I brought Emma's things in. She didn't react at all and I tried very hard to be as cool as she seemed. My cock had other ideas though as it pushed hard on the front of my pants. Dee was sitting at her dressing table putting on her makeup. In the mirror she could see the movement in my pants. She may be acting all cool and all but the mirror revealed that her nipples scrunched up and got hard like erasures. \n\nShe put down her tools as a lascivious look, very similar to the looks I get from Alexis and Emma, appeared. She used the mirror again to motion me to come to her with her flexing index finger. I walked up behind her and put my big hands on her shoulders. She put her hands on top of mine and then pulled them down to her breasts. I lightly tweaked her hard nipples and Dee groaned hard as her eyes closed and her head lolled to one side resting her face on my arm. She was breathing raggedly as she kissed my forearm. I released her nipples and started to pull my arms back up to her shoulders and neck to give her a massage. She was tight as a bow-string. Before I got my hands off her breasts she said, \"Please don't.\" I stopped. I bent down and kissed Dee on the neck and another low pitched groan escaped from her throat. \n\nDee slowly turned around on her stool to face me. I released her tits as she turned. She leaned forward and kissed the crotch of my pants before reaching up and unzipping them. She leaned back and looked up at me. She was a vision of pure lust. My cock surged harder in anticipation of what would come next. Her right hand went inside my pants and pulled my rigid shaft and balls out. Her lips were inches away from the glans as she cradled and caressed my ball. She took my cock in her hands and leaned forward again; this time to drag my cock all over her face from her chin to her forehead. She was breathing very rapidly. My own breathing was becoming ragged too. \n\nDee held my cock against my stomach as she leaned in and kissed my balls and then traced her tongue and lips up the shaft to the very tip and then sucked my glans past her lips. My hips involuntarily rocked forward. I looked down into Dee's lusting eyes as she looked up at me. She tipped her head back to look straight up at me and the new angle put extra pressure on the underside of my cock where it's most sensitive at the base of the glans. I groaned and she smiled around my cock. She was obviously pleased with my reaction. She lashed my velvety helmet with her tongue before slowly pushing my shaft further into her mouth. Her tongue was moving constantly and the sensations were amazing. From here, she mixed up her ministrations from throatjob, to blowjob to handjob and all the various combinations and my knees buckled a few times. In minutes I was blowing my load into Dee's mouth. She swallowed as fast as she could and didn't lose a drop. When my last rope of cum was safely deposited in Dee's stomach, she pulled back and kissed my glans and flicked her tongue into the 'eye'. She grinned up at me and said, \"Thank you Hunter. I was feeling a little melancholy.\" I bent down low and kissed her passionately on the lips. \n\nDee pushed my spent cock back into my pants and zipped them up before turning back to her mirror and continued with her makeup. I adjusted my dick and turned around and went back to the living room where Alexis and Emma were chatting and making drinks. I accepted a scotch from Emma who commented on my reddened face. Alexis asked how Dee was doing and I simply responded, \"Better.\" Emma guffawed and said, \"I bet.\" \n\nI went to the bedroom and changed into my suit. I was probably overdressing but I liked how I looked in it. Dee and I came out of our bedrooms at the same time and walked together into the living room she was as beautiful as I had ever seen her. She was dressed conservatively. After all, she was going to meet her in-laws for the first time. We all rode together in Dee's BMW X5. The wedding party was already at the church when we arrived. Dee took charge of the rehearsal even though the minister thought he was in charge. We all walked through our parts a few times before Dee decided that we were ready. We all piled into our cars and headed for the restaurant. \n\nEven though Emma's sister, Jane and her step-daughter, Julia were not part of the wedding party, they were invited to the dinner. It took Jane about five seconds before she spotted the huge engagement ring on Alexis' finger. She did the obligatory 'ooohhss and aaahhhs' before dragging Alexis by the ring finger to show it to Julia who was flirting hard with me. When Julia realized that Alexis and I were together she was obviously disappointed. \n\nJane and Emma were clearly sisters. Jane was a little taller than Emma but her bust line was the same. She dressed a little risqu\u00e9 but that was understandable since she was always on the prowl for a man. Personally, as a man, I thought she was hot. Julia, as a step-child, didn't look anything like Jane. She was beautiful though. At twenty-two and dressed in her leather mini-skirt and transparent silk blouse and four inch 'fuck-me' pumps she was hot too. Alexis noted my interest and came over beside me and whispered, \"Down boy. You'll probably get your chance.\" I turned to her and kissed her hard on the lips. When we broke our embrace, I noticed that Julia and Jane had watched the whole scene. \n\nIntroductions were given all around and Dee was excitedly chatting with Jarrod's mother. Jarrod was talking with his father before coming over and hugging and kissing Emma. He kissed Alexis and shook my hand. I met the other groomsmen and Alexis mingled with the bridesmaids. Drinks were flowing and I noticed that Jane and Julia were pounding them down quickly. I had a couple and I was feeling a little buzzed too by the time we were seated for dinner. \n\nEveryone was seated next to someone they didn't know before tonight accept Emma and I. She sat to my left and Jane sat to my right. Alexis sat directly across from me. Dee sat at one end of the table and Jarrod at the other. The drinks kept coming as we waited for our food. Jane kept looking up at me. When I glanced down at her I was looking directly into her cleavage, which she wantonly displayed. Without thinking, Emma noticed where I was staring and she leaned over to whisper to me and placed her hand on my upper thigh. Jane noticed the hand placement and Emma snatched her hand back when she realized what she had just done. \n\nJane looked past me to her sister and whispered, \"Emma. Seriously?\" Emma's face went beet-red and Jane knew all she needed to know. She whispered again, \"Holy Shit! You lucky fucker.\" She looked up at me and smiled as she scanned me from face to crotch for about the hundredth time. Jane ran a hand up under my jacket and touched my ripped pectoral muscles and then dropped her fingertips down over my washboard abs. She was breathing rapidly and Julia was watching the whole scene from across the table beside Alexis. Alexis was talking with one of the bridesmaids and hadn't noticed anything until her mother's neck and face reddened. Then she noticed Jane's face flush too. When Jane's hand went into my lap and squeezed my cock through my pants, I jumped a little and Alexis burst out laughing. Everyone else at the table turned to Alexis to see what was so funny. I could feel the heat in my face as I flushed too. Alexis looked around the table at the staring faces and apologized for her outburst. Everyone went back to their conversations except for Alexis who was now watching her mother and her aunt molest her fianc\u00e9. She didn't offer to help me out. She just wanted to see what happened next. \n\nEmma saw what Jane was doing with her hand in my lap and she nonchalantly reached over and pushed Jane's hand away. Jane pushed her hand back over my rock hard cock. Emma pushed Jane's hand away again and this time she grabbed my cock through my pants so Jane couldn't get to it. Jane tried though and I reached down and grabbed both of their wrists and held them tight outside my thighs. \n\nJulia leaned over to Alexis and whispered, \"What are they doing over there?\" She knew what we were doing but it seemed unfathomable to her so she was looking for some confirmation from Alexis. Luckily, no one else around the table was paying any attention to us. \n\nAlexis whispered back to Julia, \"They're doing exactly what you think they are doing. Your mom and my mom are fighting over Hunter's cock.\" \n\nJulia's eyes went wide and she pushed a hand to her mouth and whispered, \"Holy Shit. That's super-hot.\" Alexis smiled at Julia and nodded. They both watched across the table to see if something else would happen. \n\nI kept a tight grip on their wrists and Jane looked up at me and said, \"You're hurting my wrist.\" I relaxed my grip and told her to be 'good'. She looked me right in the eye and said, \"I guarantee that I'll be good.\" I caught the innuendo. I pushed her hand back to her lap and released her wrist. She just smiled up at me and said, \"Later, big boy.\" \n\nI released Emma's wrist too and she leaned over and whispered, \"I'm sorry.\" Alexis was grinning at me across the table. I threw her an air-kiss and she did the same. \n\nAfter dinner we had more drinks in the lounge. Jane was getting blasted and getting more aggressive with each drink. I could only hope that she would pass-out of something. Dee was embarrassed and apologized to Jarrod. Jarrod laughed and said that he was interested in seeing where this was going. Alexis and Julia were getting pretty loaded too and they were huddled up in giggling sessions. I noticed that Julia was getting a little 'handsy'. Alexis appeared to be ignoring the flagrant touches but I knew better. She was getting horny. \n\nThe party was starting to breakup. I noticed that a couple of the groomsmen had left with a couple of bridesmaids. I smiled to myself. 'Isn't that a clich\u00e9', I thought. Alexis came over and whispered in my ear that she and Julia were going to grab a cab back to Dee's apartment. Just then, Jane accidently on purpose staggered out of her chair and went face down in my lap and then acted like she had passed out. Alexis watched the whole thing unfold and then burst out laughing. She said, \"Well, it looks like you have your hands full.\" She looked at Emma and said, \"Can you look out for my fianc\u00e9 for me?\" Julia came over to check on her step-mother and declared that she was fine. She took Alexis' hand and led her out of the restaurant. \n\nEmma looked at her sister face down in my lap acting like she had passed out. I could tell she wasn't because her mouth was working on my cock through my pants. Emma looked at me and said, \"I told you. What should we do with her?\" I took her by the shoulders and sat her back in her chair. Jane winked at Emma. I wasn't supposed to see that but I did. This was apparently mostly an act. There was little doubt that she was beyond buzzed based on the amount of alcohol consumption that I had personally witnessed. \n\nEmma leaned over and whispered, \"Let's take her back to the hotel.\" I nodded and stood up. I told Dee what we were doing. She told me she would get a ride with Jarrod back to her apartment. I warned her that Alexis and Julia would be there when she arrived. Her eyes lit up and I could see the gears turning. \n\nI made sure everyone was accounted for and then assisted Emma as we helped Jane to Dee's car. I put Jane in the backseat and got in the front beside Emma. Ten minutes later we were in the lobby of the hotel with Emma and me on either side of Jane. All the way through the lobby, Jane kept pawing at my crotch. We kept her moving. Once we got her to her room we laid her on her bed and stood back to see what would happen. Nothing. She passed out. \n\nEmma looked at me. I shrugged my shoulders and said, \"Well, I guess that takes care of that. We shouldn't leave her alone.\" Emma thought a moment and then nodded. She moved back to the bed and bent down and started taking Jane's clothes off. Jane mumbled something incoherent but didn't come to. I pulled the bedding back and lifted her naked body between the sheets. She had an amazing body and my cock responded to it. Emma pulled the bedding up over Jane's chest and we left her there. \n\nEmma noted my hard-on as she flicked off the light switch. She looked from the bulge in my pants to my face. I simply said, \"I think it's your turn now.\" She grinned at me and pushed her body against mine mashing her tits on my hard abs. I wrapped my arms around her back and lifted her up to me. She wrapped her legs around my waist and pulled her pussy against my hardness. I walked her across the hall to Julia's room and set her gently down on the bed. She released her legs and her arms and went for my belt. In seconds she had my zipper down and my pants on the floor. I kicked off my shoes and stepped out of the pants. She fumbled with the buttons on my shirt as her excitement ramped up. \n\nWhen I was naked I pulled Emma up off the bed and slowly removed her clothes as I caressed her bare skin as it appeared. She kept grabbing for my cock but I deflected her attempts. When she was completely naked she was breathing very hard with anticipation. She wanted my cock so bad she was whimpering but I wouldn't let her take it. I climbed on the bed between her legs like I was going to take her missionary style and she quickly assumed the position on her back with her legs spread wide. She was soaking wet with desire. She was pleading, \"Please. Please.\" \n\nI put her ankles on my shoulders and moved my face in to her pussy. I used my broad tongue to lap her pussy from end to end licking up her juices. She screamed and jerked her hips up when I flicked the tip of my tongue on her clitoris. I moved down and flicked her anus and she screamed again. Her torso was rolling from side to side along with her head. She groaned, \"You bad boy. Don't tease me. I'm so horny.\" As I drove my curled tongue as deep into her as I could she screamed out, \"OH FUCK. YESS. YESS. DON'T EVER STOP.\" I drilled her pussy as hard as I could. She grabbed my hair and pulled me down into her. She was going nuts. Her thighs clamped down on the sides of my head and I couldn't move. I had to struggle away from her to get a breath of air and then went right back in again. She groaned out an \"OH FUCK\" again and I knew she was only moments away from her orgasm. ",
        "My mind pondered the prospects of Emma squirting and I thought the probability to be remote. I was way, way wrong. She screamed again and her torrential squirt went into my mouth and up my nose. I wanted to stay right there and get it all but I couldn't breathe so I had to pull back. Her solid stream of juice followed me out. Her fingers launched in to take the place of my tongue. She was digging all four of her fingers into her pussy as the squirt continued to launch over my head as I ducked to get out of the line of fire. She squealed and screamed and groaned as her squirt last twenty seconds. It seemed that it would go on forever. Her flailing fingers randomly blocked the stream and it would change to a wide spray. I was soaked. She was soaked. Everything in the room within five feet of her was soaked. \n\nThe squirt diminished to short bursts of liquid and then finally stopped. Her pussy was quaking around her fingers. I was always amazed at Emma's capacity to have these huge orgasms. Her fingers slowed their assault and then her arms just collapsed on the bed beside her. I move up to look into her face. She made no movement that would suggest that she even knew I was there. \n\nAfter nearly a minute, from deep in her throat she let out a feeble plea, \"Please fuck me!\" I crawled up beside her as she rolled her head to look at me. \"Please.\" \n\nI laughed. I couldn't believe her. A minute ago she was in a coma or something. I leaned down and kissed her passionately and then said, \"You are unbelievable. I absolutely love making love with you.\" Emma grinned at me and spread her legs again. I moved my legs between hers and guided my cock to her drenched pussy. I couldn't resist teasing her a little more by dragging my cock from her clitoris to her anus before I pushed my granite hard shaft into what felt like a warm, silk lined glove. She gasped as I pushed slowly but steadily until my balls bottomed out. She threw her arms around my neck and her legs around my hips and rode with me in full penetration until she released me a let me fuck her pussy to another orgasm. The timing was perfect as we both rose into our climaxes together. \n\nI was on my elbows lightly placing my weight on her chest, mashing her tits. I gazed down into her face and huge tears burst from her eyes and rolled down her face. I kissed them off her cheeks as I continued to ride her through our spastic bodily embrace. When she was done throbbing and I had shot my last salvo, we just lay there looking into each other's eyes. She smiled and lifted her head and I kissed her hard. \n\nFrom the doorway came a clapping sound. Jane had made a recovery and was standing in the doorway as naked as we had left her in the room across the hall. I pivoted my head back to look at her and Emma tried to look past me. My cock was still deep in Emma's pussy when Jane came over and cupped my testicles in her hand. She sat down on the bed beside us as she ran her other hand from my shoulders to my calves. Her fingers investigated every finely defined muscle along the way. Jane moved her position on the bed so Emma could see her and said, \"Emma, honey. You are one lucky girl to be strapping on your daughter's fianc\u00e9 like this. Does she know?\" \n\nEmma giggled at her sister's little power play and said, \"Of course she knows.\" \n\nJane's grin slipped a little before she looked at me and said, \"Well, well. I little open romance I see.\" \n\nI said, \"If you only knew.\" This intrigued Jane as the look on her face changed. I continued, \"Jane. You don't have to take the low road. All you have to do is ask.\" Jane spent a moment contemplating what I had said and then lightly sucked her lower lip between her teeth and took one more scan from head to toe before she bent forward and kissed me on the right buttock. \n\nJane laid her naked body alongside us and leaned over and kissed Emma with a passion that belied their familial status. I had to pull back to make room for their embrace. Jane's hand went down between Emma and me and ran her fingers around the base of my shaft. I pulled myself back and slid my cock out of Emma's pussy and through Jane's fingers. Jane broke her kiss with Emma and pulled back. Emma opened her eyes and burst out laughing at the wide eyed look on Jane's face. Emma said, \"What's the matter Jane? Is that cock in your hands a little larger than you're used to?\" \n\nJane spoke much louder than she intended, \"Holy Shit Emma.\" She turned around to look at my cock wrapped in her fingers. They didn't go all the way around the circumference but that was routine. She clenched her fingers and my cock flexed back against her grip. Jane looked from my cock to my face. She uttered, \"Fuck. Fuck.\" She stroked her hand up and down the shaft several times and my cock got even harder. \"Jesus, Emma!! This thing could kill me.\" \n\nEmma sat up and pulled herself out from between Jane and me. Jane sat up beside my hips and wrapped her other hand around my shaft. She said, \"Emma? This is like fucking a beer bottle.\" She started jerking my cock up and down with both hands. I hadn't said a word. I was just a tool and I was enjoying it. \n\nEmma watched Jane's tentative movements and said, \"Oh for Christ's sake Jane. It's just a cock. God knows, you've had more than your share, including my husband's.\" \n\nJane smirked at Emma and said, \"You knew about that? Sorry. He was a terrible fuck, if that's any consolation.\" Emma just grinned and nodded her head. \n\nI was lying on my back with my hands behind my head lifting it up so I could watch. Jane laid back down so her huge tits were resting on my hip and she lowered her lips to the glans. She kissed it gently and then very tentatively pushed her lips over the velvety head. Her eyes went wide again and she quickly pulled back off and continued jerking me off. \n\nEmma was obviously disgusted with Jane's feeble attempts to suck my cock and she hadn't even got to the fuck part yet. I didn't know what she was thinking but as far as I was concerned we were going for the full ride. Emma quickly moved around to the other side of me and laid her tits down on my other hip as she pushed her mouth to the tip of my cock sticking out above Jane's fingers. She didn't hesitate even though she had to stretch her lips to get it in. She adjusted for a moment and then pushed her lips down the shaft displacing Jane's hands as she went. Jane's face was inches away from Emma's as she sank all the way to my balls. I let out a groan and dropped my head to the bed looking at the ceiling. \"Jesus Christ Emma,\" I said. \"You've got to be the best cocksucker on the planet.\" Emma bounced on my balls a couple times and then pulled all the way back up. Jane followed every movement. \n\nWhen Emma slid her lips off my glans Jane moved in to push her lips over the head. I could feel her relax for a few moments and then she started down the shaft. She did pretty well. She got three-quarters of my shaft in her mouth but she couldn't handle that much girth pushing into her throat. She gagged slightly and pulled back and off the head. Gobs of saliva flooded out of her mouth. Her eyes watered ruining her makeup. She caught the saliva in her hand and spread it over the entire shaft before pushing her lips back on again. \n\nEmma's face stayed right there inches from Jane's face and her hand moved down between Jane's labia and started fingering her pussy and clitoris. Jane groaned around my cock from Emma's attack. Jane kept at it for several minutes but she had no confidence that she could handle my cock and even though I was thoroughly enjoying her blowjob, I was nowhere near an orgasm. \n\nShe finally relented and pulled her lips off my cock and flexed her jaw several times. She was breathing very hard and she lowered her forehead onto my cock and prepared herself for her imminent orgasm induced by her sister's fingers. Her body lurched forward as she tried to push Emma's fingers in deeper. She groaned, \"OH FUCK EMMA. YOU ALWAYS COULD DO THAT TO ME.\" Jane rocked onto her back and Emma moved her mouth to Jane's pussy. She went to work hard on Jane's clitoris and Jane was screaming as she thrashed around on the bed. As Jane's orgasm diminished, Emma backed away from her pussy. Emma looked at me and I grinned as her face was covered by her sister's pussy juices. Jane appeared to be unconscious as she hadn't move in minutes. Emma flexed her index finger for me to come closer. I got on my knees and moved to where Emma wanted me. Jane's legs were splayed wide with her knees up. Her head had rolled off to her right side. Her huge tits sagged a little on each side. Emma moved up and kissed Jane's left nipple and she groaned again. It was her first sign of life in a while. I moved my hips in between Jane's splayed knees and guided my granite hard cock to her pussy. \n\nEmma moved up so her face was looking down at Jane and said, \"Jane, Honey. Hunter is ready to fuck you. He will be very gentle with you. Are you ready?\" Jane's face rolled back to center and smiled at Emma. She nodded and then pushed her hands down to her crotch and spread her pussy lips as if to make way for my cock to enter her. Emma looked at me perched above Jane and smiled as she nodded. I put the head of my cock on her labia and Jane slightly pushed her hips up toward me. I pushed my hips forward and slowly pushed my velvety head inside. She groaned as it pushed in, \"OH SHIT. THAT'S HUGE.\" I pushed in a little more and the fattest part of my cock was sliding past her inner labia. Jane screamed and I stopped. Jane muttered, \"OH FUCK. OH FUCK. OH FUCK.\" \n\nJane looked up at me kneeling above her and grinned as she said, \"It's getting better.\" I pushed in a little further and stopped. She yelled out, \"OH FUCK. YEA. FUCK ME.\" I pushed the rest of my cock all the way to my balls and started fucking her at a normal pace; nothing too hard or too fast. This continued for a couple minutes. Jane's head flailed from side to side before she screamed out, \"OH MY GAAAWWDD. EMMA. I'VE NEVER BEEN FUCKED LIKE THIS BEFORE.\" I ramped up my pace and then mixed penetrations and within a minute she screamed out, \"OHHHH MMYYY GGGAAAWWDD. I'MMM GONNAAA CUMMM.\" I could feel mine coming fast and I tried to hurry to catch up with her. \n\nI almost made it. I could feel my cum building pressure in my balls when Jane's pussy clamped down hard on my cock. She groaned out, \"UNNNGGGAAAHHHH,\" with the first clench and then did the same many times as her body tensed and released over and over again. Even her fingers flexed and contorted as she continued to flail her head from side to side. \n\nWhen I blew my first strong surge of cum into her she screamed, \"GAAAWWWWDDDD,\" as her teeth clenched and her neck tendons stood out like they were going to snap. Her eyes were like saucers. I was groaning just as hard as I drove my hips into her with each shot. I finished half dozen ropes of cum and collapsed down onto my elbows and rested my forehead on Jane's. We were both gasping for air. Her eyes were open but she wasn't seeing at anything. Her mouth hung open as she seethed air between her clenched teeth. \n\nEmma knelt down and whispered in my ear and then pulled back. I pushed myself up on my arms and then pulled my cock from Jane's pussy. She never moved a single muscle. I lay beside her and cuddled her to me. My cock was softening as it lay on Jane's hip. Emma moved back between her sister's legs and moved her face to her pussy. Cum was bubbling out of Jane's pussy and Emma dipped her curled tongue in to collect it. There was a lot and she repeated this several times. Jane didn't move. I guess that Emma wanted to make sure that Jane was still alive when she dragged her tongue over her clitoris which caused her to drive her hips up. Emma looked at me and smiled. \n\nEmma drew back from Jane's crotch and moved up to her face. Her lips were pursed so I knew she had a load of cum that she intended to share with her sister. When Emma's lips came close enough, Jane pursed her lips to kiss her back. Her eyes went wide when Emma pushed her tongue and her full load of cum into Jane's mouth. Emma maintained the kiss forcing Jane to deal with it. She struggled and groaned and finally swallowed. \n\nWhen Emma pulled back a couple inches, Jane sputtered and said, \"Emma! You know I don't like cum. You did that on purpose.\" Emma just nodded and grinned down at her. She bent down and kissed her again and pulled back. Jane said, \"You still taste like cum. Stop it.\" I laughed at this interaction between the two sisters. \n\nI glanced over at the night table and noted that it was after midnight. Emma and I still had to get back to Dee's apartment to be ready for tomorrow's wedding. I wondered what Alexis and Dee were doing to Julia. My cock jumped at the thought. I whispered to Emma, \"We have to get going. \n\nEmma said to Jane, \"Julia is at Dee's apartment. It will be hard to get her back here tonight. Do you know what she is wearing tomorrow for the wedding? We can take it to her.\" Jane scooched her way to the edge of the bed and went to the closet. She pulled out a garment bag and handed it to Emma. \n\nEmma smiled and said, \"Perfect. We have to go. We'll see you at the church tomorrow. Will you be okay tonight?\" \n\nJane said, \"I feel like I'm floating through space. It's fantastic. I think I'll be walking funny for a few days though.\" She laughed and so did Emma. Emma nodded like she knew exactly what Jane meant. Emma and I got dressed and kissed Jane good-night. Jane wrapped her arms around me and said, \"I hope you give me another chance to be better.\" \n\nI laughed and said, \"Jane. You were fantastic. I loved every second.\" Jane smiled and kissed me again. \n\nEmma drove Dee's car and was lucky to find a parking spot near the elevator. When Emma unlocked the door to Dee's apartment there was complete silence. No one was in the living room and I didn't expect that there would be. My money was on all three of them being either in Dee's or Alexis' bed. Emma hung Julia's garment bag in the hall closet and we quietly padded down the hall. Emma looked in Dee's room and it was vacant. I opened the door to Alexis' room and two of the three were there on the bed sound asleep. \n\nDee and Julia were lying beside each other on their backs in what was, at one time, a sixty-nine position. Alexis was just coming out of the bathroom with a towel around her hair. She was startled when she saw Emma and me and jumped back. Her hand flew to her mouth as she let out a tiny scream. Neither Dee nor Julia moved a muscle. I walked over to Alexis, who was nude except for the towel. I held her to me and said, \"Sorry, Babe. We didn't know what to expect in here.\" \n\nAlexis took my hand and led me out of the bedroom taking Emma's hand on the way. Emma closed the door and we went to the living room. Alexis said, \"Well, as you can imagine, thinks got a little steamy here. Julia is a freak. We had a great time. How did things go with Jane? She was pretty loaded when we left.\" She looked at me with a smile on her face and said, \"Any luck there? She's pretty hot.\" \n\nI grinned back at her and nodded. \"We made sure she was okay before we left. Emma brought Julia's clothes for tomorrow. So she'll be leaving for the wedding from here, so it's going to be crowded here in the morning,\" I said. \n\nEmma said, \"It's getting late. We'll all be up and going in a few hours. Let's us three sleep in Dee's room.\" Alexis nodded and walked past me. A playfully smacked her on her naked ass and said, \"So. Julia was a freak. Right up your alley. I would have paid money to see you three together.\" Alexis grabbed my hardening cock through my pants as she went by and stretched up for a kiss. \n\nShe said, \"I have a strong feeling that you are going to find out first hand before this weekend is over. You'll have to tell me everything about Jane.\" We all went to Dee's room and undressed. Emma and I quickly realized that we needed a shower. We reeked of sex. Alexis got into Dee's bed and Emma and I took a quick shower before sliding under the sheets with me in the middle between these two naked gorgeous women. I was in heaven; again. \n\nI lay on my back for a while as my mind whipped through the evening memories. My cock grew hard and pitched a tent over my crotch. I reached down and stroked my shaft a few times and then turned on my side to spoon with Alexis who had turned on her side facing away from me. My cock poked into her at the top of her thigh. She lifted her top leg and let me poke through to her front. She lowered her hand to the velvety head and stroked it several times with her fingernails. I reached across her and curled my fingers around one of her tits and kissed her gently on the neck. She moaned once. \n\nIt was pitch black when I woke. Dee's curtains had been pulled closed to block out the city lights. I was still spooned up to Alexis and my cock was still between her legs. Alexis was lazily dragging her fingertips up and down my exposed cock. It was incredibly hard but that is never a surprise to wake up to. Alexis was breathing a little hard. My hand still rested on her left breast and her nipple was erect and poking through my fingers. I kissed her on the neck and she moaned again. \n\nAlexis didn't turn her head toward me. She just whispered, \"I need you in me Baby.\" I moved my hips back slightly and she lifted her leg to release my cock. Her fingertips followed it back. She cocked her hips back and I pivoted my hips up pushing my cock forward again. Alexis used her fingers and palm as a ramp to guide my cock into her pussy from behind. She gasped as I penetrated her past the thickest part of my cock and then muttered, \"Jesus Christ. I love how that feels.\" She pushed her ass back into me pushing my cock deeper and she groaned hard when my balls pressed up against her thighs. She reached back over her hip and grabbed mine. She whispered around heavy breathing, \"Don't move.\" \n\nI stopped and kissed her neck again. She started doing her manual clenches around my cock again. She giggled. I flexed my cock and she giggled again. We teased each other that way for a long time. I was getting close to blowing my wad and Alexis knew it. She let out a groan when she felt my cock surge harder and she pulled her hips forward and then slammed them back into me. I took the hint and I drove my cock back into her as hard as I could. The bed, which hadn't moved through the early phase, was rocking now and Emma came awake suddenly. She was apparently unsure of where she was or what was going on for a moment. I was slamming my cock into Alexis' pussy and she was moaning and groaning hard. I was using every trick in the book to hold off my orgasm as long as possible. \n\nWhen Emma wrapped her hand around my balls, which had already pulled up tight, any attempt to delay was gone. Cum exploded up my shaft and Alexis let out a blood curdling scream that would wake the dead for miles around. I had never heard her scream so loud. I was so embroiled in my climax that I hadn't realized that Alexis own orgasm was crushing her. Her muscles were so taught and rigid I thought she might just break into pieces. As my second burst of cum launched into her she let out another scream. It was quieter than the first. \n\nI grabbed her hip and pulled myself deeper into her. She was thrusting her ass back against me. There was the sound of slapping skin as the front of my thighs slammed against the back of hers. Emma continued to roll my balls around in her hand. \n\nTime seemed to slow way down as long ropes of cum were expelled from my cock into Alexis' pussy in slow-motion. Her screams seemed to slow down in my mind as they became long low pitched groans from deep in her lungs. Her fingers clamped down on my thigh. Her legs shot out straight and then flew back up to a fetal position. It was the most intense moment of our sexual lives together. ",
        "Time sped back up again and I surged my hips forward to deposit my last rope of cum. Alexis screamed one last time and then collapsed every muscle in her body like she had just died. It was kind of scary to feel her collapse like that. I pulled my cock out of her and rolled her over to face me. She was a limp rag-doll. I pulled her hard to my body and just held her tight as she had taken a huge breath of air and just held it in her lungs for so long I was alarmed. \n\nEmma had moved up behind me and reached over and put a hand on Alexis' cheek. I kissed her unresponsive lips and said, \"Come on Baby. Breathe for me. Please breathe for me.\" I kissed her lips again and this time Alexis pursed her lips to kiss me back. When I pulled back, the air in her lungs wheezed out of her and she muttered, \"I'm okay. Holy Shit. What an orgasm that was?\" Emma laughed over my shoulder and when I was sure Alexis was okay, I laughed too. \n\nI held Alexis tight to me and Emma cuddled up behind me and held us both. The door burst open and the ceiling light came on and we were all blinded. With considerable urgency, Dee said, \"Jesus Christ, are you alright? It sounded like someone was getting killed in here.\" \n\nI blinked my eyes several times and got my sight back. Dee was kneeling on the bed. She was naked. Julia stood by the bed on Emma's side. She was also naked. I quickly noted that Julia had a smoking hot body with big tits that only slightly succumbed to the ravages of gravity - hey, I'm a guy. I notice things like that. \n\nAlexis explained to Dee that she had just had the most incredible orgasm of her life. Dee crawled over Alexis and laid her body on the top of both of us and kissed her sister and then me. Dee said, \"That's just what I need right now.\" She grinned at me and then slid back off us and stood by the bed beside Julia who hadn't said a word. She just stared at my cock as it pressed against Alexis' thigh. Dee noticed her staring and waved her hand in front of Julia's face to break her trance. Dee took Julia by the hand and led her from the room and flicked off the light as she closed the door. \n\nI laid back face up and put my arm around Alexis' neck and guided her over to lay her head on my shoulder. I did the same with Emma. Their upper hands immediately went to my sticky cock. Emma slid down my body and slid her lips over my softening cock and lashed her tongue along the shaft and then around and around my velvety glans. She pulled her lips off with a 'pop' and giggled as she slid back up to rest her head on my shoulder again. Her hand joined Alexis' in my crotch. We all fell asleep just like that. \n\nThe alarm by Dee's bed went off at six AM. I couldn't believe it. It seemed like we just went to bed. Alexis groaned and rolled over to shut it off and then rolled back over to cuddle up with me. I had my usual morning woody and now both Alexis and Emma were fondling it as they looked across my chest and grinned at each other. \n\nThe door burst open again and a naked Dee strolled in and said, \"Rise and shine everyone. The bridesmaids and a team of hair stylists will be here in a half-hour. Tick-Tock.\" She pulled the covers down and grinned as she saw what her sister and her mother were doing to my cock. She looked at a grinning Alexis and then at a grinning Emma and then crawled up on the bed between my legs and swatted their hands away before stretching her lips over the tip of my cock and pushed immediately to the bottom. \n\nAlexis slid down my body until her face was right beside Dee's and then Emma did the same thing. Dee pulled back to the ridge of my glans and pushed back down again. I could feel my cock move into her throat and I let out a groan. I could also feel the urgent exhales of Alexis and Emma in my pubic hair. I was expecting that the three of them would take turns on my cock but Dee never gave it up and used all her tricks to suck out several long shots of cum. She didn't swallow and by the time I was done, her lips and cheeks were extended as she moved off my cock to Alexis' lips. She pushed part of the load in and then moved to Emma and did the same thing. \n\nJulia had come in and watched Dee sucking me off. She watched with fascination as Dee shared her load with Alexis and Emma and then as Dee was pulling back from Emma's lips said, \"What about me?\" Dee turned to look at Julia and then smiled around her remaining load of cum and then opened her mouth for Julia to see. She pushed cum out on her lips and then sucked it back in again. Julia bent down and kissed Dee and Dee pushed the entire remaining load into Julia's mouth. Julia's eyes went wide. She had apparently expected just a taste and not a mouthful. Julia struggled with the gooey mixture and rolled it around in her mouth mixing it with her own saliva. She gulped hard and swallowed it all and then opened her mouth and stuck out her tongue to show us that she had swallowed it all. \n\nAlexis giggled and said, \"What do you think?\" \n\nJulia licked all around her mouth and smacked her lips. She smiled and said, \"Kind of tangy and salty. Not bad though.\" Emma burst out laughing which started Alexis, Dee and Julia laughing too. Julia looked at me and said, \"I bet it's best right from the source.\" Alexis, Emma and Dee burst out laughing again. \n\nDee pushed off the bed and said, \"Come on you guys. We're late. We've got to move. If my bridesmaids show up with Hunter looking like that, we'll never get out of here.\" Emma pushed off the bed and grabbed Julia by the hand and led her out to the living room to get Julia's bag. Alexis and I headed for the shower. \n\nIt's always tough to leave her alone in the shower but we were on a deadline so we just washed each other and kissed and caressed for a minute before drying off. We headed across the hall to her room and dressed in our wedding clothes; I in my tuxedo and Alexis in her maid-of-honor gown that fit her like a glove. It was all I could do not to strip her naked and do what we did last night. She liked what she saw too and she came over and ran her hands over my chest and then playfully ran her hand down my stomach and grabbed my cock through my pants. She giggled and pulled her hand away. \n\nNaked bodies were getting dressed all over the apartment and I was enjoying the scenery. Julia was dressing in the living room. She wasn't part of the bridal party so her gown was completely different. She was stunning. She wasn't getting her hair done by professionals so she pushed her way into Dee's bathroom to style her hair and put on her own makeup. \n\nThere was a loud knock on the door and I opened it. Four young women carrying garment bags pushed past me. The last one stopped beside me and scanned me from head to toe and said, \"Hubba Hubba,\" and moved on. Right behind them were three middle-aged women carrying their hair styling and makeup 'stuff'. They all filed past and set up shop in the living room. The leader of the stylists yelled out, \"Don't put on your dresses until after your hair is done.\" \n\nI heard Alexis say over the din of the crowd, \"SHIT.\" I looked over and she was taking off her dress. It was strapless so her bra was strapless to. She wore a thong so she wasn't wearing much when she came out to the living room. She sat in a straight backed kitchen chair and one of the stylists went to work. Emma came out of the bedroom in her underwear and sat beside Alexis. One of the bridesmaids came out next. She wore a long tee shirt. Her nipples were highlighted as she didn't have on a bra. She didn't really need one except to cover her very long nipples sitting on top of her 'fried egg' tits. \n\nAs they finished with their hair the next group came in. Bridesmaids #1, 2 and 3 were next. I didn't get their names as no one had introduced us. They were all very attractive and probably around Dee's age of twenty-three. They weren't shy with me in the room as they all wore matching strapless bras and high rise panties. I went back to the bedroom to help Alexis get back into her dress. With the whole package on including the stilettos my cock jumped hard. Alexis giggled when she saw the movement in my pants. I went across the hall to Dee's room. She was apparently freaking out and Emma was trying to calm her down. Dee was topless and was only wearing a satin white thong and lacy white thigh high stockings with her stilettos on. My cock jumped again. Emma had got into her dress after her hair was done and she was absolutely beyond stunning as she was dobbing the tears out of Dee's eyes. Emma waved me away and continued calming Dee. \n\nDee was the last to have her hair done. She sat in the chair dressed the same as she was in her room, basically naked. I guess the stylists were also makeup professionals. They went from Alexis and Emma to the four bridesmaids working their magic. Alexis had never had professional makeup done before and it looked amazing when she was done. I whispered in her ear, \"Do we have time before we leave?\" I was just kidding, but she looked up at the clock on the wall as if checking to see if they had time or not. I whispered again, \"I was just kidding but you looking fucking amazing right now.\" She grinned and gave me a peck on the lips. \n\nThe phone rang and it was the limo driver saying that he was in the garage by the elevator whenever everyone was ready. I relayed the information to Dee and Emma. Dee was finishing up her hair and makeup and she was gorgeous; especially since she was naked from the waist up. I told Emma that I would drive her car with Julia to the Church. Emma dug her keys from her tiny purse and handed them to me. I kissed her good-bye and kissed Alexis and told her to 'break a leg'. She was grinning at me as I took Julia by the hand and led her out the door. \n\nJust as I expected, we were no sooner in the car and out of the parking garage when Julia leaned across the console and yanked my zipper down. I pushed her hand away and zipped back up. I didn't say anything to her. She reached in again and pushed her hand down on my crotch. My cock hardened under her hand but I pushed her away again. She moved back into her seat and pouted the rest of the way to the Church. Jane was standing in the front entrance of the Church when we drove up. I did a U- turn and parked across the street. Guests were streaming in from the parking lot. Family members not seen in years were hugging and kissing on the front lawn. I escorted Julia through the throng to her step-mother. I nodded at Jane and she smiled at me. I walked past them into the Church. The minister recognized me from last night's rehearsal and walked over in his robes. I saw that the other groomsmen were already there and doing their jobs escorting family and friends of the groom or bride to the appropriate side of the Church. I joined them. \n\nThe crowd thinned outside as everyone was seated in their pews when the limo pulled up. The four bridesmaids stepped out first followed by Alexis. Emma stepped out followed by Dee. Every one of them was gorgeous but my eyes were on Alexis as they made their way down the walkway to the front entrance. They shunted off to the right to prepare for the procession. The organ was playing softly and the din grew when word spread that the bride's party had arrived. \n\nJarrod and his best-man stepped out of a side room and moved up beside the minister. He looked nervous but the best-man was almost hyperventilating. The placement of guests was complete and we made our way down the center aisle to stand off to the best-man's left. \n\nThe first bridesmaid appeared at the door and we were off. The organ started playing a new piece and everyone stood at once and turned to face the back of the Church. One by one the bridesmaids slowly made their way to the front. I saw Alexis lean down and kiss Dee before she came down the aisle. After Alexis was standing by the minister, the organ music changed to the wedding march and Dee and Emma walked arm in arm down the center aisle. Dee was gorgeous and Jarrod was beaming. Emma played the Father-of-the-bride part and gave Dee away and then turned and stood at her seat. Everyone sat as one and the ceremony was underway. \n\nI tuned out most of the ceremony, as I was infatuated with Alexis. She had never looked as beautiful as right then. I tuned back in when the minister proclaimed,\"I now pronounce you man and wife. You may kiss the bride.\" Everyone stood and started clapping and cheering. Jarrod and Dee made their way down the aisle to handshakes and flashing cameras. Alexis and the Best-man followed. I brought up the rear as I offered my arm to the bridesmaid who had ogled me at Dee's apartment. She whispered to me as we walked down the aisle, \"Are you here with anyone?\" I nodded. At the end of the aisle where the procession was breaking up she said, \"Are you with someone in the wedding party?\" I nodded again. She looked confused. \n\nI said, \"I'm with Dee's sister Alexis the maid of honor.\" A light came on in her eyes. \n\nShe said, \"The one with the huge rock on her finger?\" I nodded. \"You're engaged to her. Holy shit. She's gorgeous.\" She hesitated for a moment and then continued, \"So are you.\" I grinned at her and turned a shade of red. \n\n\"Thank you,\" I said. She went off and mingled with her other bridesmaid friends. Alexis came over and threw her arms around me and kissed my passionately. She pushed her pelvis against mine and my cock grew to full size. When she stepped back I reached down and adjusted myself to relieve the pressure. All four bridesmaids had watched the whole thing and they tittered and tee-heed as they covered their mouths to whisper to each other. \n\nI leaned to Alexis' ear and whispered, \"Don't leave me alone with these bridesmaids. Okay?\" She turned and glanced back at them and then back at me and giggled. We all moved out of the hallway so the guests could exit the church and get to the reception which was at the hotel where Jane and Julia and a lot of other guests were staying. \n\nThe reception went off great. All the traditions from the reception line to the cutting of the cake went off as planned. It was an open bar and everyone was having a great time. The couple's first dance was followed by Jarrod and Emma. Jarrod's dad danced with Dee and I filled in for Dee's dad to dance with Jarrod's mom. Then it was open floor and I danced with Alexis. She stretched up to my ear and whispered, \"You must have made quite an impression on Aunt Jane last night. She and Julia have asked my Mom if she can hook you up with them in their room. She told them you aren't hers to hook up.\" I looked at Alexis' face which was flushed a little. She had that familiar lascivious look on her face and I knew she wanted in on it too. I never said yes or no but Alexis replied, \"I'll let Mom know that they should meet us in their room a half-hour from now.\" My cock pushed out hard in anticipation and Alexis smiled and pushed her hips against it. \n\nJust then the bridesmaid that had asked if I was with anyone tapped Alexis on the shoulder and asked if she could cut in? Alexis turned to look at her and then turned back to me and whispered, \"You have a fan.\" She stepped aside and the bridesmaid stepped in. She said, \"My name is Joanne. You're Hunter.\" I nodded. I was trying to keep her at a respectable distance but she wasn't having any of that. She pulled herself in close to me and there was no way she could have missed the raging hard cock in my pants as her stomach pressed up against it. She looked down between us and then back up at me. \"Holy Shit Hunter. You're packing.\" I moved her back and she moved right back in again. I looked over at Alexis with a \"Help me\" look on my face. She had a grin from ear to ear as she watched Joanne basically trying to fuck me on the dance floor. \n\nWhen the dance ended I thanked Joanne and stepped by her toward Alexis who was now laughing out loud. Joanne dragged her hand across my crotch as I went by. Alexis said, \"I just saw my mom talking to Jane again and she sure looked happy.\" The next song started and I wrapped Alexis up in my arms and swayed to the music. Almost immediately, another of the bridesmaids tapped Alexis on the shoulder and asked if she could cut in. Alexis turned to look at who this was. She exclaimed, \"Oh for Christ's sake. Get the other bridesmaids together right now and meet us in the ladies room. The bridesmaid just stood there with a dumb look on her face and Alexis burst out, \"NOW.\" She hurried off and we watched as she gathered each of them and headed out of the banquet room toward the rest rooms. Alexis turned to me and said, \"Twits. Let them get a feel and a taste if they want and get this over with. We have twenty minutes to get to Jane's room. I'll meet you there.\" She turned and walked off. I watched her go to the bar and I headed for the ladies room. \n\nLike before, they were all twittering with questions for each other when I pushed in the door and closed and locked it behind me. Now they were bashful and giggled like ten year olds. After several seconds, Joanne introduced the other bridesmaids. I can't list them here because I don't remember. Joanne pushed her body against mine and reached down and felt my hard cock through my pants. She watched my face as she pulled my zipper down and pulled my cock out. Her eyes went wide when she tried to wrap her fingers around the girth. I smiled at her reaction. She backed away and released my cock like it was a pit-viper. I leaned back against the counter. \n\nNow they could all see my bouncing cock and all at once they collectively gasped. Joanne said, \"Holy shit guys. It's even bigger than I thought.\" She tentatively moved her hand toward my cock and I took it and pressed her fingers around my cock. She gripped it hard and I flexed back against her pressure. I motioned for the others to come over and one by one they wrapped their fingers around it. Joanne took another turn and began jerking me off. I groaned hard which gave Joanne the confidence to continue. She knelt on the floor in front of me to get a better angle. This put the tip of my cock just above her eye level. The others moved in closer to watch Joanne. None of them wanted anything to do with it. They just wanted to watch. \n\nJoanne looked up at my face and asked, \"Can I suck on it?\" I smiled and nodded. Joanne looked at the others and then came up higher on her knees and stuck her tongue out to flick the velvety crown. She did it again and then put her lips on the glans and kissed it. She was trembling. \n\nI said, \"Joanne. Have you done this before?\" She smiled and nodded. I was thinking, 'Not very likely.' I continued, \"Joanne. It's perfectly okay if you haven't. I'll help you.\" Her eyes glanced back to her friends and then she looked at the floor and shook her head. She was obviously embarrassed to admit that she had never given a blowjob before. I reached down and gripped Joanne's arms and lifted her to her feet. I looked at the other three and told them not to move. I led Joanne down to an empty stall and I backed in pulling her in behind me. The others followed to watch but I shut the stall door and latched it. I unbuckled my pants and dropped them to the floor. I sat on the toilet and maneuvered Joanne back to her knees in front of me. \n\nI whispered, \"Open your mouth as wide as you can. Relax your jaw. Don't be afraid of it. If it's too much, that's okay.\" She smiled up at me and opened her mouth wide. She stuck her fist in to force it open a little more. She relaxed her jaw and found that she could open her mouth wider. She held it like that until I lifted my cock up to her lips. She looked at it and closed her mouth and gulped. Her eyes looked terrified but she seemed determined. She stretched her mouth open and moved her lips onto my glans. I moaned to give her confidence. She grinned at my response and pushed her lips over the ridge and gagged immediately. She pulled back and licked her lips. I told her to spit on the head and she gathered up some saliva and spit most of it on the floor. She did it again and hit the mark. I ran my hands up to the spit and dragged it down my shaft. She watched every move I made. She pushed her lips back on again and stretched her mouth wide like she had practiced and her lips slipped down over the glans. Her eyes were flooding with tears as she stayed right there for a few moments. ",
        "One of the friends standing outside the stall door spoke, \"Joanne? Are you okay?\" Joanne ignored her. She couldn't answer anyway with a mouth full of cock. \n\nI answered for her, \"Joanne can't talk right now. She has a cock in her mouth.\" All three of them tittered and giggled. Joanne looked up at me with flooded eyes and smiled around my cock. She didn't move from there for several moments and then to my surprise, she pushed her lips an inch down my shaft and stopped. I said, \"Very good. Try another inch and stop and adjust to it. Just keep doing that until you can't take anymore.\" She followed my directions and in another minute she was four inches down my shaft and I groaned for real. Her persistence was making me very horny. Her hands were on my thighs to be ready to push off if she needed to. I took one hand and wrapped her fingers around the exposed shaft and moved her wrist up and down from her lips to my balls. I took the other hand and moved it to cup my balls. Her eyes smiled when she felt my balls moving around in my scrotum. \n\nI whispered, \"Now slowly pull back to the ridge and push back on again. Mark you gag point with your hand so you don't take too much. She did as I instructed. \"Now you've started your first blowjob. Just keep doing that. I'll warn you when I'm going to cum. Okay?\" She nodded and pulled her lips back up and then pushed them back down again. She repeated that several times and then began to increase the pace. She was giving me a pretty good blowjob. She kept doing that for a couple more minutes and she was obviously getting into it. She pushed down a little further. \n\nI whispered, \"I'm going to cum soon. You'll feel my cock get harder and seem to get bigger. My ball-sack will scrunch all up tight to my body. You'll be able to feel my balls moving around.\" She kept right on going as I instructed her. Her eyes stopped tearing but her makeup was totally destroyed already. She was so pleased with herself. I whispered again, \"If you want we can let your friends in to watch and then you can pull your lips off and shoot cum all over them.\" Her eyes lit up and she nodded vigorously. \n\nI wasn't supposed to be doing this. I was already late for my appointment with Jane, Julia and Alexis. I was committed now and I could feel my jizz building in my balls. I whispered, \"Do you feel it?\" She nodded and kept on going. I didn't want to blow my load in Joanne's mouth. She had been a trouper. I was afraid that she couldn't get her lips off my cock in time so several seconds before I knew I was going to blow I pushed her head back and off my cock. As I feared, she did hang up a little as she struggled to get her lips off. She looked behind her and unlocked the stall door. It opened inward and her three friends had been leaning against it trying to hear. They all tumbled in and went to the floor between my legs. Joanne was stroking my cock with both hands as she had pushed her body out of the line of fire. All three of them were face to face with my cock. The looks on their faces was absolutely priceless. \n\nI groaned out and fired shot after shot of cum directly into their faces. They were trying to pull back out of range but they were all in each other's way and cum launched into their faces and hair. One of them finally figured out that she could block the streams of cum with her hand but I was nearly done by then. They were scrambling to get out of the stall and finally did. Joanne was still jerking my cock and she move back in front of me and pushed her lips back on my cock and stuck her tongue in the 'eye'. She pulled back off and smacked her lips and said, \"It's not at all what I expected. It's not bad.\" Her face contorted and she stuck out her tongue. \"It's not great either.\" She kissed my glans and pulled back. I was laughing hard and I pulled her up onto my legs to kiss her. Her lips tasted like cum. \n\nJoanne slid her hips up on my lap and my hard cock pushed against her pussy. She looked down and then back at me. I knew what she was thinking but I had a place to be so I said, \"Maybe later Joanne. I'm late for an appointment. She frowned. I figured that neither she nor any of her friends had ever fucked before. \n\nWhen we came out of the stall with our clothes back in order, the three amigos were cleaning cum from each other's faces and hair. Joanne went to one of them and licked cum from under her eye and swirled it around in her mouth. Joanne was now worldly. They gawked at her and that broke the damn as they all started licking cum from each other anywhere they found it. \n\nI kissed Joanne and she kissed me back with passion. I unlocked the door and stepped out to the hall and ran into Alexis. She said, \"Jesus Hunter. What took so long? Let's go.\" She dragged me to the elevator and we rode up to Jane's floor. Alexis knocked on the door and it flew open. Both Jane and Julia were flushed with anticipation. They were already down to their underwear and they nearly knocked me down pulling my clothes off. Alexis sat in the lounge chair by the door as Jane and Julia maneuvered me to the bed. Alexis hiked up her gown and ran her index finger into her pussy. It was soaking wet. \n\nI kicked off my shoes because they had my pants half off and were struggling to get them all the way off. My Tuxedo jacket had been stripped off first and now they were working on the buttons of my fitted silk shirt. I reached around behind Jane and released her bra. She didn't even realize it was off until she noticed it hanging from her elbows. I did the same for Julia and she shrugged out of it. My shirt was peeled off my shoulders and down my arm. I glanced at Alexis sitting by the door frigging her pussy. She grinned at me as I was pushed down on the bed on my back. My cock was pointing at the ceiling and Julia was the first to get her hands on it. Jane tried to take it away from her to no avail. \n\nJane gave up and moved up to my head and swung one leg over my head and sat her pussy down on my face. She was facing toward Julia, who was in the process of lifting one leg across my hips. She made no attempt at preliminaries and I groaned hard along with Julia as she pushed her pussy down my shaft. I concentrated on working Jane's pussy with my tongue while Julia concentrated on fucking my cock. \n\nAlexis noticed that Julia was about to just drive her pussy down and she started to say, \"Take...it slow.\" By the time she got \"Take\" out of her mouth, Julia had already made her push and she came to a stop about a third of the way down where my cock is fattest and let out a blood-curdling scream. Alexis smiled to herself and muttered, \"Yeah. That happens if you're greedy and take it too fast.\" \n\nJane had her hands behind her ass resting on my forehead as she pivoted her hips on my face. I was driving my tongue into her pussy as far as I could force it. I reached up and pushed my index finger into her anus and she let out a scream that rivaled Julia's. There was a light knock on the door and Alexis immediately reached over to the door knob and opened the door without getting out of her chair. Her legs were draped over each of the chair arms giving herself full access to her pussy. \n\nI couldn't see anything with Jane sitting on my face as she continued grinding on my face. She opened her eyes and noticed two things: One was the room was now full of people and two was that Julia was just sitting there perched atop my cock. Jane ignored the presence of Emma, Dee and Jarrod and said, \"Julia Honey. Get what you need because I'm riding that bronco next.\" Her step-mother's voice seemed to bring her back and she slowly pushed herself down to my balls. She screamed out, \"OH FUCK. TOO BIG.\" Emma and Dee giggled at Julia's proclamation. She didn't pull off though and after a couple of minutes, Julia was driving her hips forward and back as she stabilized herself with her hands on my chest. \n\nRandomly, I launched my hips up and Julia groaned hard every time. Jane's pussy juices were flowing out of her and I was busy licking and slurping it up as best I could. I guess because I had blown my wad from Joanne's blowjob, I was nowhere near my orgasm. Jane fell off to one side and watched Julia fucking my cock. She wasn't in pain any more as she groaned with each forward thrust of her hips. Dee moved past Alexis in her flowing white gown and sat on the bed behind Julia. She looked back at Alexis and they gave each other knowing glances before she pushed her middle finger of her right hand into Julia's pussy beside my cock and then pulled it out and pushed it into Julia's anus with one push. Julia screamed hard from Dee's assault and suddenly burst into an orgasm. \n\nDee looked back at her mother's disapproving stare. Dee shrugged her shoulders and said, \"What? We needed to move things along. Everyone will wonder where the guests of honor are.\" Emma's stare shifted to a grin as she shook her head. Alexis interjected that Dee's actions were totally appropriate. Julia's orgasm was a hard one as her pussy clamped on my cock and released it. She muttered out a running commentary of her climax as it progressed, \"Oh Fuck. Yes. Yes. My pussy is crushing your cock. Oh My Gawwd. Fantastic. Oh Jesus. Clamping. Clamping. Clamping. Jesus. Ooooohhhhh. Yunnggg.\" She stopped the play by play as she began to recover. She slid off to the opposite side from her step-mother and curled up in a fetal position. \n\nJane pushed herself up and swung a leg over to replace Julia. She was smarter and slowly dropped herself down to sit on my balls. She stopped there and turned to the door and said, \"Jarrod. Honey. Get over here and DP your new aunt.\" Jarrod was slow to react to her request and didn't move until Dee grinned and nodded for him to do it. \n\nJarrod undressed quickly. His cock was standing straight out in front of him. Alexis and I had all seen Jarrod naked but Emma, Jane and Julia hadn't. Emma's face was reddening as she watched Jarrod's cock bouncing up and down in front of her. Jane had started fucking my cock before Jarrod sat below me with his legs up along my side and his balls nearly touching mine. Jarrod grabbed Jane's hips and guided her off my cock and pushed his cock into Jane's pussy. She pulled back off and positioned herself so her anus was on Jarrod's cock and her pussy was on mine. We all groaned hard when Jane sat down. The presence of Jarrod's cock in Jane's ass ramped up the pressure on mine. Julia was watching closely. \n\nJane began rocking forward and back. My cock pushed into her pussy on the forward stocks which pulled her anus off Jarrod's. On the back swing, the opposite happened. Since my cock and Jarrod's were not moving against each other, we could only feel the tightness in Jane's pussy and anus. Jane was groaning continuously as she rocked back and forth. Alexis, Dee and Emma were frigging themselves as they watched. \n\nAfter nearly five minutes, Jane went rigid and exclaimed that she was cumming. She hurried her pace and that pulled Jarrod over the edge as he launched his hips hard up into Jane's anus as her movements became very spastic. She lost control and pulled herself off Jarrod's cock before he was done. Cum launched up over Jane's ass and landed on her lower back. Emma didn't waste a second. She was on the bed licking Jarrod's cum off Jane before anyone could move. \n\nJane's orgasm rose quickly and descended just as fast and she fell off the same side as Julia was sitting. Jarrod was moving off the bed to make room for whoever was next. Dee stood up on the bed over my crotch and swirled her wedding dress around her and sat down on my hips. She pawed through the folds of her dress to find her thong and pulled it to the side. She nudged herself back until my cock popped up and then she moved to push my cock into her pussy. She did like everyone else; she groaned and stopped at the fattest part for a moment and then continued down to my balls. I glanced over at Jarrod to make sure he was okay with this. He was pulling his clothes back on and was paying no attention to the fact that his new wife's pussy was full to the brim with my cock. \n\nDee is a great fuck. She learned all she knew from her mother. She pivoted her hips driving my cock in and out. Dee had come very close to her orgasm as she watched Jarrod fucking Jane's ass while she drilled her own pussy with four fingers. It was only minutes now before she exploded into her orgasm. She yelled out,\"OH MY GAAWWWDD. I'MM CUMMINGGG. YES. YES.\" Her hips flailed forward and back and she started swiveling her hips around on my cock. I could feel my orgasm approaching but I didn't want to cum in Dee's pussy. It just didn't seem right to be cumming in a woman's pussy on her wedding day while her husband stood there watching. I rolled Dee off me beside Emma. \n\nI announced that I was going to cum and Alexis and Emma and Julia quickly moved their faces into my crotch. Alexis grabbed my bouncing cock and started jerking me off. Emma had my balls in her hand. Julia just wanted some cum \"from the source\". I lifted my hips off the bed and groaned, \"OHHH SHITTT.\" Alexis had aimed my cock at Julia as she continued jerking me off. I launched my hips again and a pearly, white stream of jizz shot out the end of my shaft into Julia's face. She had her mouth open but her eyes were closed so she couldn't adjust for where it was going. \n\nJulia's face was covered from forehead to chin. A subsequent shot landed in her hair. Alexis pushed her lips over the tip and took two more shots before she pulled off and let Emma push her lips down over the glans to receive three more before she pulled off. Jane scrambled up and was trying to get her mouth on my cock but she didn't make it in time and the last shot splattered in her face. Alexis and Emma giggled to themselves as Jane sputtered. Julia was covered and after Alexis swallowed her load she burst out laughing at Julia's condition. Emma swallowed her load and went to the bathroom to get some wet towels to clean everyone off. \n\nJarrod took Dee's hand and pulled her off the bed to the floor. He whispered that they had to get back. Dee went to the bathroom to check on her appearance and pushed a few stray hairs in place and went out of the room with Jarrod. She giggled as she realized that her juices were drooling down her legs. \n\nIt took several minutes for everyone to get themselves back together again. Since Jane and Julia were in their room, they had access to their makeup. When Jane came out of the bathroom, she was as beautiful as ever. As we were leaving the room, Alexis noticed that a big glob on cum was in Jane's hair. She didn't say anything to Jane but she told me and I couldn't help but look every time I saw her for the rest of the day. Julia had so much cum in her hair that she couldn't fix it without washing it first. We didn't see her again. \n\nDee and Jarrod were cutting the cake when we walked in. Alexis had been taking pictures all day and she couldn't help getting one of Jane with her perfectly coiffed hair with the glob of cum. \n\nThe band was still playing and couples covered the dance floor. Alexis wanted to dance a slow song with me and we swayed to the beat in each other's arms. She stretched up to kiss me and I kissed her back. To my amazement, Joanne appeared behind Alexis and tapped her on the shoulder again. She said, \"May I cut in?\" Alexis spun us around to face Joanne. I could tell she was angry. Joanne said, \"I know you're mad at me but I just wanted to thank your fianc\u00e9 for everything he did for me.\" Alexis looked up at me in confusion. \n\nI said, \"It's alright Babe. I'll be just a minute. Don't go far.\" Joanne and I assumed the slow waltz position. She didn't try to get close. She explained that her friends had always teased her about her truly confessed lack of experience with sex. They always boasted about their conquests with each other and made fun of her. Today, they were terrified of the size of your dick. In the end it was revealed that none of them had any experience either. No conquests and now I'm the only one with some experience. They apologized to me and to each other after you left. Thanks for your patience and your help. I'm sure I'll never come across another cock as big as yours but if I do I won't be scared.\" She broke contact and we stopped dancing. She said Thank you again and turned to leave. She took one step away and then turned back to me as Alexis walked up. She glanced at Alexis and then said, \"One funny thing though. My friends all have cum stains on their dresses and they're wearing them like a badge like they did something.\" I laughed and Joanne smiled. Joanne grinned and then turned and walked away. \n\nAlexis and I finished the dance with Alexis' head resting on my shoulder. She didn't say anything. Moments later there was a big commotion as Dee was gathering all the single women for the tossing of the bouquet. Alexis wasn't interested but Dee dragged her over anyway. Jane was in the group along with each of the bridesmaids and several others. Julia never showed. Dee noticed that Alexis had gravitated to the back of the crowd. In response, Dee heaved the bouquet hard over her shoulder and the flowers flew high over everyone's head and landed in Alexis' arms. She went beet-red and covered her face with the flowers. \n\nThe last thing to be done was the throwing of the garter. Dee sat in a straight back chair and lifted her leg that she wore the garter on. Jarrod went down on one knee and reached up under her dress as the crowd urged him on. He smiled over at me and winked. He lifted the dress over his head and climbed under. He was well past her garter. He was fingering her pussy as evidenced by Dee's reaction. Her head went back and her mouth opened. The crowd went nuts. They figured it was all stage. I knew otherwise. After several moments, Jarrod came out from under the dress with the garter in hand. The crowd cheered. Dee hid her reddened face in her hands. \n\nJarrod corralled all the single men for him to throw the garter to. There were only five or six single guys there. I wasn't going to go out of my way to catch the thrown garter until Alexis came up to me and whispered, \"You'd better catch that garter or one of these other guys will be running his fingers up my legs and I'm not wearing any underwear.\" I towered over the other guys and when the garter was thrown, I just picked it out of the air before it got to anyone else that could reach it. \n\nI made a big show of climbing in under Alexis dress to put on the captured garter as she held the captured bouquet over her face. She swatted the bump in her dress caused by my head. I could smell the odor of her sex and I was in heaven as I pushed my middle finger deep into her pussy. She reacted the same way as Dee had and the crowd roared with laughter. I made my way out from under her dress and stood up and bowed. The crowd roared again. I pulled Alexis out of the chair and straight up into my arms and we kissed each other passionately. \n\nThe reception was over and guests started heading for the exits. Everyone stopped to wish Dee and Jarrod a long and happy life. Dee kissed everyone and Jarrod shook hands with the men and kissed the women. Alexis sat down in my lap and put her arm around my neck. We just sat there until everyone was gone. Dee and Jarrod came over to us and he pulled up a chair and nearly fell into it. Dee sat in Jarrod's lap. Dee said, \"Phew. What a day. It came off great. Everyone said it was the best wedding they had ever been to. Thanks guys. \n\nAlexis said, \"It was a great day. When do you leave for Paris?\" \n\nJarrod checked his watch and said, \"Three hours.\" We'll go back to Dee's apartment with you guys and get out of these clothes. Jarrod asked me if I could drive them to the airport. I told him of course. Emma was off talking business with the manager of the facility. When she walked in we stood. We all went outside and piled into Emma's car. I rode shot-gun and Jarrod sat in the backseat between Alexis and Dee. We were almost to Dee's apartment when she said, \"How was the meal anyway? We were so busy we didn't even eat. I'm starving and I just realized it.\" ",
        "Emma asked, \"Where do you want to go?\" \n\nThere was silence for several moments before Jarrod chuckled and said, \"Let's go to the Pizza Parlor I work for.\" \n\nEveryone piped in at the same time, \"That's a great idea.\" \n\nFive minutes later we were walking into this tiny little non-chain Pizza restaurant in our tuxedos and gowns and Dee in her wedding dress. The boss flew out of the kitchen with arms flying when he heard that Jarrod was there. He was a big bodied Greek who grabbed Jarrod and hugged and kissed him. Jarrod introduced Dee and he swept her up in his big burly arms and kissed her on the cheek. Dee was laughing hard until he put her down. The boss turned to Jarrod and said, \"You are a lucky man Jarrod. She is gorgeous. Dee turned red with embarrassment. He introduced Dee's mom and the boss hugged and kissed her too. He turned to Jarrod and said, \"She is single no?\" Emma said, \"Sort of,\" and left it at that. Jarrod introduced Alexis as Dee's sister and he repeated the kisses and hugs. He said, \"Beautiful women. I've never seen such women.\" It was Alexis' who was turning red now. Finally, Jarrod introduced me as his future brother-in-law. I reached out my hand and he took it. I was expecting that he would give me the hand crush shake and I was prepared to give as good as I got. I wasn't prepared for his grip though. He was a bear. He said, \"You shake hands like a Greek.\" He lifted me up and hugged me and set me back down. \n\nJarrod told him we didn't get a chance to eat at the wedding so we decided to come here. The boss thundered, \"Of course you would come here. Whatever you want, it is my gift to you on your wedding day.\" We gave him our orders and he disappeared into the kitchen with arms flying. We sat down at the largest table in the restaurant and talked as we waited. In fifteen minutes we had three Pizzas on the table and we ate like we hadn't eaten in weeks. \n\nWhen we were done and were getting up from the table the boss flew out of the kitchen again and hugged and kissed all around again. We went out the door laughing our asses off. We all agreed that we loved the guy. \n\nTen minutes later we were in the elevator of Dee's apartment building. Dee and Jarrod changed out of their wedding clothes and dressed in their pre-planned travel clothes. They were classy but comfortable. I liked Jarrod's clothes and I thought to myself, 'I really need to be more aware of how I dress.\" I discovered recently that I liked getting dressed up and looking good. I had been basically a slob my entire life. \n\nI drove Jarrod and Dee to the airport and helped Jarrod with the bags until we got to the security gate. We said our goodbyes and I wished them a wonderful time. The round trip took about forty minutes. All was quiet when I entered Dee's apartment. It was dark in the Living room. I was exhausted even though it wasn't even my normal bedtime yet. I made my way down the hall unbuttoning my shirt as I went. I looked into Dee's bedroom and it was empty. I continued down the hall and I could hear the shower in our bathroom. The bedclothes were all messed up. I smiled as I thought about Emma and Alexis together lesbian style while I was gone. \n\nI walked through the bedroom, stripping the shirt off my shoulders and down my arms. Alexis and Emma were in the shower together. I stood in the doorway looking through the glass shower enclosure at two of the most beautiful naked women I had ever seen. My cock pushed hard on my pants and I unbuckled and unzipped them to release my cock. The pants dropped to the floor and I kicked my shoes off. Alexis and Emma were sitting in the middle of the shower floor. Emma was facing me, although she hadn't noticed me yet. Her legs were out in front of her with knees raised. Alexis was sitting the same way facing Emma. They had maneuvered themselves up close so their pussies were touching. Their tits were inches apart from the other. I stroked my hard cock a few times as I watched them. \n\nEmma and Alexis just sat there with the water cascading over them. Their eyes were closed as their foreheads were touching. Randomly, one or the other would push out her lips to touch the lips of the other. They weren't passionate, hard or long; just sensuous, at least from my vantage point. They lasted only a second or so but they always parted with a trailing tongue being dragged across the other's lower lip. Emma had her hands on Alexis' hips and Alexis had done the same with Emma. As if choreographed, they pulled each other closer to grind their pussies together for a brief moment before releasing. \n\nMy cock was raging hard as I watched them. To interrupt them would have been a major sin; although I couldn't remember one of the Ten Commandments being, 'Thou shall't not interrupt lesbian love so you can join them.' Alexis's head tipped forward to kiss Emma again and then continued forward until her head rested on Emma's shoulder. Alexis looked so vulnerable and Emma looked so caring. Their tits were now touching as Emma's hands came up Alexis' back and cradled her like she was a baby. Emma kissed Alexis on the earlobe and Alexis shuddered for a brief moment. \n\nI hadn't jerked myself off all summer but it was going to happen now. My hand was furiously jacking on my cock as I watched the erotic sight in the shower from the doorway. With the other hand I tore feet of toilet paper off and readied it for my climax which was only seconds away now. My knees buckled a little but I gathered myself and blasted rope after rope of cum into the wadded up toilet paper. I had forgotten how good it felt. Before Olivia, I jerked off several times a day. It seemed like it was a century ago. \n\nI deposited the cum laden tissue paper in the toilet and faded back into the bedroom. I stripped off my socks and slid under the covers. The cool sheets felt great on my rapidly softening cock. I laid on my back reminiscing about the events of the day. I fell asleep to the virtual video playing in my mind. The last vision I remembered was the horrified look on Joanne's friend's faces when they fell into the ladies room stall and got covered by cum. \n\nI was disturbed slightly when Alexis crawled under the sheets on my right side and Emma crawled in beside me on the left. I moaned out something unintelligible. I remember Alexis leaning toward me to kiss me and I pursed my lips. Emma slid over close and kissed me on my left cheek. I pursed my lips again but made no other effort. I didn't remember another thing until the next morning."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "wedding",
        "marriage",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-21"
}