{
    "title": "Aurora - Wings of the Goddess Pt. 06",
    "pages": [
        "This is a work of fiction. All characters are 18 and over.\n\nMidnight.\n\nVicky was down on her elbows and knees, head on the pillow, tail in the air, eyes squeezed shut and mouth hanging open. On his knees behind her, gripping her butt for purchase, the old man pistoned his cock in and out of the girl's squelching pussy, spine flexing, sweat flying. \n\nThis was the fifth round since they'd anchored-up mid-afternoon, on the northern side of a small tropical island. Vicky had taken his first load in her mouth, not for the taste, which she could take or leave, but for the wicked pleasure of swilling the warm, sperm-seething slime around in her mouth, then gulping it down like an oyster fresh out of its shell. That would do as an appetiser. It was her last night on the boat, at least for a while, and she meant to make the most of it. She wanted sex. She wanted it hard, she wanted it fast, she wanted it deep and she wanted it dirty and the old man, god bless him, was only too willing to oblige.\n\nFirst off with a nice round of missionary. Then Watson ratted-out some of his best weed and they shared a slim joint, washing it down with some French Champagne. Then it was cowgirl as the sun went down, Vicky bucking and gyrating while Watson fondled her tits, their bodies slapping and sliding in a lather of sweat. Then up in the aptly named cockpit, under the stars, Vicky kneeling on the side seat, facing the sea, Watson behind her, music wafting from a nearby boat masking her cries. Then dinner, freshly cooked green fish curry on a bed of saffron rice, wolfed down by two ravenous souls. Then a nice hot shower and a nice stand-up fuck, before a nightcap of more French Champagne and a tiny top up of weed. \n\nAnd now doggy, saving the best till last, Vicky revelling in every millimeter of Watson's rock-hard cock, as he hammered into her, knob fetching up behind the dome of her cervix somewhere near the small of her back. He slapped her ass, his body streaming rivulets of perspiration. \"Vick.\" he grunted, \"Here it goes again.\"\n\n\"Are you gonna cum?\"\n\n\"Uh huh\n\nWhen he did it would be his third for the night. \"Jesus Christ!\" Vicky panted, \"where's it coming from?\"\n\n\"My cock.\"\n\n\"Are you fff... flippin' made of the stuff?\"\n\n\"You and me both, Baby.\" Watson huffed, pausing in his assault, teetering on the trembling edge of orgasm. \"Though by now it's mostly bone marrow.\"\n\nVicky commenced feathering her clit in a shower of body fluid, powering up so they could climax together. Again. \"Can we save some for tomorrow?\" she panted, \"I want a little takeaway for the trip home.\"\n\n\"Will do.\" Watson rasped. \"You nearly there?\"\n\nVicky ground her ass against him, swivelling her hips, fists clenching the sheets, head back, muscles straining. \"Oh god,\" she cried, \"Damon. I can feel you. I can feel you so deep inside me.\"\n\nThe very energy of Vicky's orgasm was enough to trigger Watson's own, and he pounded furiously into her, then held at full depth, teeth clenched, cock convulsing, squirting three or four token gouts of threadbare semen deep into her belly. Shuddering to a stop, he collapsed on top of her, gasping, his weight pressing her flat onto the mattress. For a moment he lay, twitching prick valiantly expressing a last few drops. \"Fuck me!\" he puffed, then paused to lick the sweat off the nape of her neck, \"If I can manage to walk after this, it'll be a bloody miracle.\"\n\n\"Your poor old legs again?\" Vicky asked, face in the pillow.\n\n\"Gone!\" Watson nodded on her back, \"Disappeared without a trace.\"\n\n\"They always seem to grow back.\"\n\n\"I've noticed that too. I must be part lizard.\"\n\n\"No!\" Vicky shook her head, \"You're all horny toad. Every last bit of you.\"\n\n\"By Christ you're good at this, Macca.\"\n\n\"Do you mean it?\"\n\n\"Can't you tell?\"\n\n\"Am I fuckable then?\" she asked, totally in love with the term.\n\n\"With a capital 'F', Vick. I mean it, they should put you in the olympics.\"\n\n\"What event?\"\n\n\"Oh I don't know... synchronised bonking?\"\n\nVicky reached back and patted his flank. \"Just making up for lost time. And to think. It almost didn't get off the ground.\"\n\n\"What do you mean?\"\n\n\"After that dawn surprise.\"\n\n\"Oh,\" Watson said, \"right. You know thinking about that still makes me cringe.\"\n\n\"Well it shouldn't. Just imagine. If I hadn't walked in on you while you were... ahem... busy, none of this might have happened.\"\n\n\"I guess...\" Watson conceded, \"though it was touch and go there for a while.\"\n\n\"Oh well.\" Vicky shrugged. \"All's well that ends well as they say in the classics.\"\n\n\"Aye. The Universe moves in mysterious ways.\" Watson replied. \"Nothing happens by accident.\"\n\n\"So a wise man once said.\" Vicky nodded. She fell silent for a moment, then heaved a deep, ragged sigh. \"So. Back to the real world tomorrow.\"\n\n\"Real world?\" Watson said, unconvinced. \"I guess that depends on your frame of reference.\"\n\n\"Yes,\" Vicky nodded, \"of course, you're so right. This is the real word. I can feel it. I can see it, I can touch it, I can taste it, I can-\"\n\n\"Fuck it?\"\n\n\"-fuck it, precisely. The world I'm going back to is all make-believe. It's just a construct, an idea, built around money and materialism. It's just egos and rivalries, and envy and desire. But out here. Out here I can be who I'm really meant to be.\"\n\n\"Who?\n\n\"Adventure girl.\" Vicky giggled. \"But it's true, isn't it? Back there I'm something, a barrister's PA. Out here I'm someone, I'm actually me.\"\n\nWatson gave a grunt of dour laughter. \"Sorry Vick, I should have warned you. Going to sea can really fuck with your precepts.\"\n\nAfter a moments silence, they both spoke at once, and Vicky eventually won the 'you first' duel. \"Did you mean it?\" Watson asked, \"When you said you'd rather just stay here with us? Forever and ever?\"\n\nVicky didn't reply at first, then Watson felt her shaking.\n\n\"Macca?\" he cried, arching his neck, \"Surely not. Not on our last bloody night. For god's sake no blubbing.\"\n\n\"I'm not blubbing!\" she blubbed, smearing her eyes. \"Yeah, I meant it. But I also meant it when I said it would just ruin everything.\" Vicky flexed her knees and pummelled Watson's butt with her heels. \"You horrible man. You've gone and got me thinking the 'L' word.\"\n\n\"Lewd?\" Watson asked, \"Lurid? Looney? Lesbian?\"\n\n\"The other one!\" she fumed. \"The one I promised myself I'd never ever say. Although... you know... lesbian's cool.\"\n\nThere was a moment's introspective silence then Vicky spoke up. \"Naww...\" she said, \"he must be tired. I can feel the poor little fella going to sleep.\"\n\nWatson braced his elbows and lifted his hips, extracting himself by degrees while Vicky raised her butt to prolong the sweet agony. His knob fetched up at the ring of her opening and he gave a little jerk, popping free. Vicky uttered a long, satisfied, 'Aaaahhhh' as Watson climbed off. She rolled over. Her eyes were still red and runny from crying, and Watson kissed them, one by one, savouring the taste of her tears. Killing all but the nav-table light, Watson dragged the lightweight doona off the floor, and threw it over Vicky before crawling onto the bed and burrowing-in next to her.\n\n\"Why do you think it'd it ruin everything?\" he suddenly asked, picking up where they left off. He felt Vicky shrug.\n\n\"That's just the way of things.\" Vicky replied enigmatically. \"Don't you think?\"\n\nWatson thought long and hard. For the past few days he'd been harbouring his own little fantasy, in contravention of his most devout oath, a fantasy in which Vicky was a permanent fixture. But she was right. The pleasure was all in the novelty, and comfortable familiarity was no match for the chase. \"Nahh,\" he rumbled, \"you're probably right. I'm a grumpy old bastard when you get to know me, I pride myself on it. You'd get sick of me sooner or later.\"\n\nVicky gave him a squeeze. \"Probably.\" she nodded, then yawned. \"And you'd get sick of all that rampant dirty sex.\"\n\n\"I very much doubt that,\" Watson said, \"but let's not put it to the test.\"\n\n\"Anyway,\" Vicky went on, \"this means I'll always have something to look forward to. My next big visit.\"\n\n\"So you're gonna come back?\"\n\n\"If you'll have me.\"\n\n\"Well,\" Watson hedged, \"as Ally says. You never know your luck in the big city.\"\n\n\"Hmm... Alana. You know, she made a pass at me once. One day, when she was drunk, she wanted to sleep with me. In fact she's done it a couple of times.\"\n\nWatson's penis gave a twitch. He had his suspicions about the pint-sized pilot, and Vicky's comment only confirmed them. \"Alana? Does she like girls?\"\n\n\"She just loves sex,\" Vicky said dryly, \"and she's not real fussy where she gets it. Ally and Tanya have done it, I'd bet a month's pay. I kissed her once, you know.\"\n\n\"Tanya?\"\n\n\"Ally.\"\n\nWatson stiffened. \"Nooo...\"\n\n\"Uh huh,\" Vicky nodded dreamily. \"On the Stream. That morning we came back from Canberra.\"\n\n\"You hussy!\"\n\nVicky turned her head, looking out of the corner of her eye. \"Yes, I am, and it's all your fault.\"\n\n\"What if she made a pass at you now?\" the old man asked, stroking her cheek.\n\nVicky smiled sleepily. \"I'd drag her into the nearest bedroom and tear off all her clothes, then fuck the living daylights out of her.\"\n\n\"That's my girl.\" Watson chuckled. \"Do you think she's attractive?\"\n\n\"Attractive? She's a stunner, Damon. Why? Don't you?\"\n\n\"Well,\" Watson hedged, \"I would climb over her to get to you, but I'd probably get stuck in the middle. For a little while anyway.\"\n\n\"What does that mean?\"\n\n\"It means yes, I do. Though I have to say she's a little bit scary. I bet she'd be an angry little fuck.\"\n\nVicky patted his butt. \"I'll get back to you.\"\n\n\"I'd appreciate that. Next visit.\" They both fell silent for a while, then Watson asked. \"What if Beck was there?\"\n\nVicky drew a short, sharp breath. \"Are you reading my mind, Mister?\"\n\n\"Really?\"\n\n\"You keep out of there, you dirty old man. That's where I keep all my naughty thoughts.\"\n\n\"Well it's not beyond the realms of possibility. You'd best prepare yourself.\"\n\nVicky pushed up and looked him in the eye. \"Seriously? Me? And Ally? And Beck?\"\n\n\"Uh huh.\"\n\n\"All at once?\"\n\nWatson hefted a shoulder. \"Why not?\"\n\n\"Ohhh... myyyyy... god!\" Vicky breathed then lay her head on his arm. \"I think my brain would go pop.\"\n\n\"Well something would.\"\n\n\"Fuck!\" she swore, \"Can you imagine?\"\n\n\"Well I've tried, but I just keep passing out.\"\n\n\"Wouldn't that be awesome!\"\n\n\"If you ask me, Macca, it's an odds-on bet. Especially if Ally likes girls. Let's face it, Beck's no shrinking violet. And don't forget the Beck Effect. Ally wouldn't stand a chance.\"\n\n\"No,\" Vicky shook her head, \"she wouldn't.\" There was a brief silence. \"God I wish she was here.\"\n\n\"Alana?\"\n\nVicky shook her head. \"No, Beck. Though on second thoughts...\"\n\n\"She'll be living with you soon.\"\n\n\"How frikken awesome is that? Look, I'm sorry, Darling, I know it means you have to be all on your own, but I can hardly flippin'-well wait.\"\n\n\"At least I'll know she's being well looked after.\"\n\n\"Yes you will, I promise.\" Vicky was silent for so long, Watson figured she'd just drifted off, but then she scratched her nose and suddenly spoke up. \"I wonder what the others are up to?\"\n\n\"Rodge and Tan?\"\n\n\"And Beck.\"\n\nWell, Bragg was probably up to his balls, Watson mused, while Beck was probably halfway up to her elbow. \"Beck's in bed, surely, sound asleep. The others are probably watching TV.\"\n\nVicky looked up. \"You think?\"\n\nWatson shook his head. \"Definitely not.\"\n\n* * *\n\nAt that very moment, twenty odd kilometres away as the dolphin swims, in the bedroom of a hotel apartment, Beck was on her hands and knees on the bed. Bragg was behind her, gripping her waist, driving as much of his huge weapon as he could into her. Her pussy lips bulged around the monstrous intrusion, bubbling at the margins with a mixture of body-fluids... spit, pussy juice, sweat and semen. The overflow was running down her slit and dripping onto the bed, adding yet another wet-spot to the battle-weary sheets. It was their fifth round as well, hers and Bragg's, while she and Tanya had gone an additional two.\n\nTanya, at that moment, was on her back in front of Beck, hands hooked under her knees, pulling her legs apart, hips writhing, her pussy full of the little blonde's fist and a several inches of wrist. Head back, eyes closed, Bragg was in a state of rapture, two thirds of his cock powering into the grips of an impossibly tight, incredibly hot, unbelievably slippery tube.\n\nTanya suddenly came, seizing Beck's wrist and ramming herself with the girl's bony fist, feet flat on the mattress, butt off the bed. Bragg gurgled incoherently at the sight of the blonde's skinny arm, disappearing into his wife's swollen cunt, the pink petals of Tanya's inner lips clinging to Beck's skin. He went flailing over the precipice, his whole body shaking as he jammed his cock into the girl, as hard and deep as it would go, unleashing another load into the blonde's sucking insides. Eyes shut tight Beck bit her lip, unable to tell whether she was coming or going, in the throes of a continuous barrage of multiple orgasms.\n\nHyper-sensitised in the wake of her climax, Tanya suddenly called a halt, then slowly extracted Beck's arm, inch-by-inch, until the little blonde's hand popped out and Tanya's pussy recoiled. Beck lay her forehead on her crossed arms, belly heaving, her ribs rising and falling in ladders of shadow. Reaching under her, Bragg tweaked and squeezed the girls erect nipples, his prick still spasming sperm into her belly. \"Oh my god,\" he panted, \"oh my god. So amazing. So amazing.\"\n\nBeck stiff-armed herself up and peered over her shoulder at the tall, handsome man. \"Rodge. Every time I clear my throat, I can taste your cum.\"\n\n\"I'm not surprised.\" Bragg huffed and patted her little round butt. \"You sucked enough out of me.\"\n\n\"That's not what I mean. I mean your cock's so deep it's just about tickling my tonsils.\"\n\n\"That's what I'm talking about. You are so fuckin' tight you just squeezed it dry. Just like a big tube of toothpaste. Have you been exercising?\"\n\n\"I think it's you.\" Beck said, still breathing hard. \"You've gotten bigger, I swear. I thought you were going to split me there for a while.\"\n\nBragg looked over Beck's lithe, sweating back. \"Tanny?\"\n\nTanya rolled onto her side, and lay clutching her convulsing pussy. \"Can't talk.\" she replied, \"Still cumming.\"\n\nBragg wrapped his hands around Beck's waist and lifted her up, then shuffled on his knees to his wife's side, cock still lodged firmly in the clutches of Beck's pussy. Slowly, carefully, making sure not to breach her, he lay the blonde down beside Tanya, then lay down with her. \"Jesus Christ,\" Bragg exclaimed, as Tanya rolled over and came face-to-face with Beck, \"what do you reckon? That was sensational. I thought my nuts were gonna rupture with that cum.\"\n\nBeck looked over her shoulder at him. \"It wasn't too bad from this end, either. Tanny?\"\n\n\"Baby girl,\" Tanya replied without opening her eyes, \"I swear to god, that little fist of yours... it must have been a cock in a previous life.\"\n\nBeck giggled, the ructions in her insides making Bragg gasp.\n\n\"Honestly, Darlin', it's such a fantastic fit. I might take a cast one day, all the way up to your elbow. I'll turn it into a dildo. The BeckBlasta nine-thousand. I'll sell 'em on ebay.\"\n\n\"Why not make it a full body cast?\" Bragg suggested. \"We can put it in the Louvre.\"\n\n\"The what?\" Beck squinted.\n\n\"The Louvre.\" Bragg said, stroking her hair, \"In Paris. Where they keep all the masterpieces. The world's most priceless works of art.\"\n\n\"It would have to be a working model, surely.\" Tanya said.\n\n\"Working on you.\" her husband guffawed. \"In which case we'd better make it the Notre Dame, because watching you fuck is a religious experience.\"\n\n\"Know what?\" Beck said sleepily, \"Once upon a time, before I met Damon, I used to despise sex. Even the thought of it. And I promised myself, if I could ever get away, I would never ever have sex, ever again. But then I met Damon and everything changed. Everything, including sex. And it's been like an absolute feast ever since.\"\n\n\"Just imagine,\" Bragg said, cupping her tiny breast, the whole thing fitting neatly in the palm of his hand, \"if you'd actually done it. If you'd actually given sex away. None of this would be happening. Macca wouldn't be on Aurora right now having fun with Damon. I wouldn't be here, watching you fist the living daylights out of my wife, while having part of me strangled by your insane little body. I mean what a tragedy, if you'd gone and taken that vow of chastity.\"\n\n\"Wonder where we'd be?\" Tanya mused.\n\n\"I shudder to think.\" Bragg said under his breath. \"One thing's for sure. The world would have been a much poorer place.\"\n\nTanya patted his arm. \"And you'd would have been a much richer man.\"\n\n\"Not to mention divorced.\" Bragg grunted with laughter.\n\nTanya rolled off the bed onto her feet. \"Or on the bottom of the sea with a nice new pair of concrete slippers.\" she said, heading for the toilet. \"Don't worry, I had it all planned out.\"\n\n\"Hear that?\" Brag said, wrapping his arms around Beck, \"You saved my life.\" Sweeping Beck's hair aside he kissed the nape of her neck, a deep, wet, sucking kiss that turned the girl's skin to gooseflesh. Beck smiled to herself. His cock felt massive inside her, a weight, a presence, filling her belly and stretching her hole. Bragg had managed an almost perpetual erection- Beck suspected some sort of chemical enhancement- since their first marathon fuck just after lunch. He was still gently humping her, kissing her neck, when Tanya strolled in, drying her hands. Kneeling beside her, she lifted Beck's leg and stooped to look. \"Eeeek!\" she cried, pointing, \"You poor little girl. There's a telephone pole sticking out of your pussy.\" Swiping the margin of Beck's distended lips, she sucked her finger. \"Mmm... delicious, exactly how my new dildo will taste. 'New! The BeckBlasta nine-thousand! Now with complimentary aphrodisiac, cream of sumyung-gurl'.\"\n\nBragg was going soft by degrees. Beck shimmied aside, then lay with her shoulders flat on the bed and threw a leg over Bragg's thigh, exposing her cock-swollen pussy. \"Ready, Tan? I think he wants to come out.\"\n\nTanya repositioned, up on her knees, ready to swoop once her husband popped out. \"Don't waste any,\" Beck warned, \"and make sure you save some for me.\"\n\n\"God you're filthy.\" Bragg chuckled. \"The both of you. And I mean that in the nicest possible way.\"\n\n\"Shoosh, you.\" Tanya admonished. \"Waste not, want not.\"\n\n\"A girl needs her protein.\" Beck affirmed.\n\nTanya wrapped her hand around her husband's cunt-slicked shaft, helping in its gradual withdrawal. The flared base of his knob fetched up against the ring of taut muscle and he paused, savouring the feel of Beck's tiny vagina, its tone and its tension, its heat. Beck tapped his thigh. \"Come on, Rodge, don't keep your lovely wife waiting.\"\n\nBragg did as ordered, pulling free with a wince. Tanya dived, shoving Beck's legs aside and suckling noisily on her drooling pussy, before shimmying up the length of the blonde's sweating body and planting her mouth on Beck's. The pair exchanged a long, deep spermic kiss, then Tanya decanted a half-serve of her husband's clotted cum into Beck's waiting mouth. Beck swallowed as Tanya withdrew and settled between Beck's thighs, cum-mining the girl's pink insides, licking her clean as deep as her skilful tongue would reach. She commenced fluttering Beck's clit and was about to slip a finger in when Beck put a hand on her head.\n\n\"Tanny! Stop. Stop.\"\n\nTanya looked up over Beck's heaving belly. \" 'Sup, Darlin'?\"\n\n\"I'm a little bit on the sore side, Tanny. Sorry. Macca and me have had a fairly busy week, and Roger's put on weight. And girth. And length.\"",
        "Tanya shot a glare at her husband as he lay watching, gently jacking his tool. \"Hear that, Mister?\" Tanya admonished, \"You've gone and worn the poor baby out.\"\n\n\"Naww...\" Bragg commiserated, \"poor little girl. You'll just have to kiss her better in the morning.\"\n\n\"I'll be right.\" Beck said, pushing up. \"Just let me sleep on it.\" She gave her pussy a loving pat. \"As Damon says. If you could make tyres out of this stuff they'd never wear out.\"\n\nTanya laughed. \"Oh my god! The world according to Damon.\"\n\n\"Such a wise man!\" Bragg said reverently.\n\nTanya stood and held out her hand. \"How about a nice hot shower to finish it off?\"\n\n\"With French Champagne?\" Beck asked hopefully.\n\n\"I wouldn't have it any other way. In fact, you know what? Let's go all out and have a bath. What do you say?\"\n\n\"We won't be wasting too much water?\"\n\nThe couple swapped a glance. \"Just this once should be okay.\" Bragg said. \"If you think of all the times you haven't had a bath, then you're still well ahead.\"\n\nBeck thought about it then nodded. \"Good point.\"\n\nTanya hauled Beck off the bed. \"Garcon!\" she snapped her fingers. \"Deux verres de Champagne, tout suite!\"\n\nWhen Bragg rolled off the bed and stood, Beck's eyes lit upon the elephant trunk, swinging between his legs. Not ten minutes ago that thing had been deep inside her, stiff as a post and nudging her larynx. It just didn't seem possible. Tanya followed her gaze and hugged her shoulders. \"Just imagine where that beauty's been.\" she smiled, as if reading Beck's mind.\n\nBragg looked down and gave his cum-and girl-juice residue-caked cock a loving squeeze. \"To paradise and back. \" he nodded, \"And may there be many happy returns.\"\n\n\u2003\n\nNASCENCE\n\nBeck suffered a bout of cold feet.\n\nShe felt as if she were sailing head-on into the dark, through uncharted waters, knowing the destination but not the course. She became querulous, she went off sex. She failed an exam for the very first time and had to wait weeks for a resit. She begged to give up. She had a passport, she said, so they could just sail off into the Pacific, do what they'd always dreamed of- point the bow at the horizon and never turn back. She was a scumbag, a feral, a borderline illiterate, and everyone would know she was a fake. She was too dumb anyway and for all their good intentions, everyone was wasting their time. \n\nSecretly hurting for her, Watson took them off to a pretty little sand cay, calmly weathering her mood swings while he coached her through remedial study. No alcohol, no weed, lots of fresh fish and coconuts, two hours a day set aside for swimming. Beck calmed down. She gathered her wits and dialled-in her focus. The second time around she scored one hundred percent, and aced another exam in the very same sitting. It was starting to look possible again.\n\nWhen Beck's mobile buzzed and she walked into the saloon looking perplexed, Watson knew the time had come. \"It's from Tan.\" she announced, scrolling through the message. \"It's another RV.\"\n\nTypical Tanya. She would send Beck a cryptic text, what she referred to as 'space-time coordinates', requiring them to be at some berth in some marina or in some room in some hotel at some given time. And there she'd be, or someone equally portentous. \"Where does she want us this time?\" Watson asked, sliding out from behind the table to look over her shoulder.\n\n\"The marina. In Cairns. She's booked us a berth.\"\n\nWatson shook his head. \"That bloody woman. She should be running the country.\"\n\nBeck looked at him out of the corner of her eye. \"Macca does all the leg work actually. Tanya only has the ideas.\"\n\n\"You're right.\" Watson nodded. \"Macca can run the country. Tanny can be the minister for brainstorms.\"\n\nBeck gave him a nudge. \"And I can be their personal pilot.\"\n\nWatson gave a grunt of laughter. \"Their pilot. With benefits. Imagine how that would go. You three witches would take over the world.\"\n\nStanding naked beside him, Beck looked up with a mixture of fear and excitement. \"Dommy. I think this is it. I think it's really happening.\"\n\n\"Sure does look like it.\" Watson said and slung an arm over her shoulders. He gave her a squeeze. \" 'Captain Beck'. You know that's got such a nice ring to it.\"\n\n\"I'll be an FO to begin with. First Officer Watson.\"\n\n\"That's still got a nice ring to it. Gulfstream five-fifty pilot. Now that! That has a nice ring to it.\"\n\n\"Pilots always refer to themselves as 'drivers'.\" Beck said. \"I'll be a Gulfstream five-fifty driver, even better.\"\n\nWatson was on the brink of pointing out she had first to pass all of the exams, then do the flying and pass all the tests, then go to Dubai, and learn the intricacies of a technological masterpiece. Instead he just gave her a hug. \"I am so proud of you, Becky. What you've achieved is nothing short of a miracle.\"\n\n\"And what you've done for me is nothing short of...\" she looked around, eyes filling with tears, \"indescribable.\"\n\nThe old man ruffled her hair. \"Now there's a good description. Indescribable.\" \n\n\"I mean it, Dommy. If I live to be a thousand years, I still won't be able to repay you.\"\n\nThere was a moment's strained silence, then Watson broke the spell. \"When does she want us?\"\n\n\"Tanny? Tomorrow p.m., that's all she says. How long is it gonna take us to get there?\"\n\nThey were anchored off the Low Islets, a tiny, palm-fringed dot sporting a story-book lighthouse, just off the tropical coast, sixty-five odd kilometres from the rendezvous. They would be on a beat if they sailed, tacking to and fro across the wind all the way. \"Depends. About ten hours by sail, six if we motor.\" \n\n\"Motor?\" Beck demanded scornfully.\n\n\"Okay, okay. I just didn't know whether you were in a hurry or not.\"\n\n\"When's the latest we can leave here if we want to sail?\"\n\nThe old man shrugged. \"PM? That could mean anywhere from lunchtime to midnight. Let's just say we weigh anchor at oh-seven hundred, we'll be at the marina by three or four in the afternoon.\"\n\n\"That should give us plenty of time.\"\n\n\"For what?\"\n\nBeck gripped the waistband of Watson's board shorts and dropped to a squat, taking them with her. His cock sprang free, already stiffening, almost batting her in the eye. \"What do you think?\"\n\nThe old man's eyes rolled back in their sockets as a hot, wet mouth engulfed him. \"Mmmm... Becky, that's nice. I was kinda hoping we could, but didn't know if you were too preoccupied.\"\n\n\"For sex?\" Beck said, wiping her mouth. \"Fat chance.\" She arched her eyebows. \"Hmm... and nice fat cock into the bargain.\"\n\n\"You have such a way with words, Moosh.\"\n\n\"So where do you want me?\" Beck asked, her pussy already engorging.\n\n\"Let's start in your room.\" Watson replied, and Beck towed him aft by the cock. \"Then the saloon.\"\n\n\"Then up in the cockpit?\" Beck asked, batting her eyelashes.\n\n\"Steady on. We've only got tonight you know. I can't drop you off looking like you had to swim.\"\n\n\"Don't say that.\" Beck said, pushing him down.\n\n\"What?\"\n\n\"That.\"\n\n\"What\"\n\n\"We've only got tonight. We've got forever remember? You promised.\"\n\n\"Yeah, no, yeah...\" Watson stammered, as Beck swept her hair back, then bent at the waist, her lips in the shape of an 'O'. \"What I mean is...\" he rasped as Beck's hot mouth ingested his penis to the back of her throat. After three or four slurps she stopped and looked up.\n\n\"What you mean is what?\"\n\nThe old man closed his eyes and put his hand on the top of her head. \"I sure am looking forward to fucking you up in the cockpit. Now get back to work.\"\n\n\"I knew you'd see it my way.\" Beck nodded, then cupped his balls in a hot little hand and commenced sucking.\n\n* * *\n\nWatson's hopes took a dive when they motored the last few hundred meters into the marina. There was no reception committee as he had hoped- no Tanya, no Vicky, no Ally Cat. Even Bragg would have done- Watson had become genuinely fond of the guy, and was hard pressed to even recall the puffed up, pretentious, clueless buffoon of his previous incarnation. But the berth had been booked, just as promised, and after tying up, while Watson bent to the task of squaring-away, Beck set off for the shops to forage.\n\nShe was back in what seemed an improbably short time. The old man heard the distinctive slap of her sandalled feet as she ran down the concrete finger, and felt the yacht heel a little as she jumped on board. \n\n\"That you, Moosh?\" he called, busy bagging dirty clothes for raid on the laundromat. When Beck didn't answer straight away Watson straightened. \"Becky?\"\n\nHe heard Beck swear under her breath. \"Dammit Dommy! I think I forgot the eggs. And would you look at that? I forgot to get the milk and the fruit.\"\n\n\"Jesus Christ!\" Watson cursed, \"Well what did you get?\"\n\n\"This!\" Beck replied and Watson looked up. Instead of a bulging shopping bag, he came face-to-face with a smiling young woman, her head and shoulders framed by the hatchway. She was hauntingly familiar and Watson had the feeling they'd already met, though he just couldn't fathom where or when.\n\n\"How the fuck, over?\" she beamed and the penny suddenly dropped. It was Ally. Her hair was longer than the old man remembered, tied back in a high ponytail, and gold-mirrored shades were parked on her head. Her eyes were sparkling, mischievous.\n\nWatson peered past her at Beck. \"I don't remember ordering that.\"\n\n\"You did too!\" Ally said, brandishing a make-believe shopping list. \"See. Randy tartlet. Right at the top.\"\n\n\"Don't they come in packets of six?\"\n\n\"Mate,\" Ally replied, \"if I even come in one, you're gonna need CPR.\" \n\n\"Well we'll soon find out.\" Watson said then stood aside and beckoned her down. \"Well come on then. Don't just stand there.\"\n\n\"Wow,\" Ally said in amazement, turning on the spot at the foot of the companionway, \"you actually live in this thing?\"\n\n\"No,\" Beck retorted, slightly miffed, \"we live in the South Pacific. We just eat in here, and sleep, and watch TV, and have nice warm showers.\"\n\n\"Gotcha!\" Ally said and pointed, \"Bedroom, kitchen, bathroom,\" she spread her arms to take in the ocean, \"living room.\" She shot Watson a smile. \"Well you dirty old perv, aren't you gonna give me a kiss?\"\n\n\"Is it safe?\" Watson asked. \n\n\"What do you mean?\"\n\n\"Without your muzzle?\"\n\nAlly looked at him frowning. \"What the fuck are you on about, idiot?\"\n\n\"Nothing.\" Watson shrugged. \"Just something Tan said.\"\n\n\"You'd believe anything that crazy old cum-bucket says?\"\n\n\"Well I'm starting to.\"\n\n\"Kiss or not?\" Ally slapped her thigh as if summoning a dog, \"Quick. I'm a very busy girl.\"\n\nWatson bent to peck her on the forehead but she met him with pursed lips instead, and poked the tip of her tongue into his mouth. They broke off and she smacked her lips. \"Hmm... nice.\"\n\n\"Ally just got here in the Gulfstream.\" Beck said, brimming with excitement.\n\n\"That's funny,\" Watson blinked, then peered out the hatchway, \"I didn't hear the crash.\"\n\n\"That's because Ben wasn't flying.\"\n\n\"Is he here as well?\"\n\n\"Benny-boy's bub is sick.\" Ally replied, dropping a shoulder to dismount a small backpack. As she bent to open it, Watson looked straight down the front of her shirt at a pair of cream-skinned, sporty little breasts, suspended in their lacy black cradles. \"I've got this cocksucker contractor riding shotgun for a while.\" she grumbled. \"Ex-military. What a cunt!\"\n\n\"What's the matter with Ben's kid?\" Watson asked, admiring the dance of Ally's sweet little tits as she wrestled with the contents of the pack.\n\n\"Fucked if I know.\" Ally shrugged, \"some sort of baby sickness.\" Straightening, she handed Watson a package. \"Here.\"\n\n\"What's this?\" he asked, hefting its weight. Tightly bound in several layers cling-wrap over brown paper, it was about half the size of a shoebox and weighed about a kilogram.\n\n\"A present.\" Ally said. \"The boss said to give it to you.\"\n\n\"Tan?\"\n\n\"Roger.\"\n\nWatson held it against his ear and gave it a little shake, then squeezed it once or twice and looked up. \"What's in it?\"\n\n\"No fuckin' idea. I didn't ask and he didn't tell, but you probably want to keep it in a safe place.\"\n\n\"Umm... You know, I've actually got a fair idea of what it might be.\"\n\n\"One of the benefits of having your own plane.\" Ally said and arched her eyebrows. \"No fucking security cocksuckers with their stool-pigeon dogs, no fucking X-ray machines. Sorry, Becky. I mean no fucking security officers.\"\n\nBeck muscled between them and gave the package a squeeze. \"That feels like weed.\"\n\n\"No shit, Sherlock.\" Watson said, pulling it away, his cross-your-heart promise to give up the dope summarily renounced. After this lot, though. He crossed his heart.\n\nDucking forward into his cabin, Watson stuffed the loot under the mattress for the time being. Once he was in the clear, he would stow the bulk in the top of the mast, bringing it down from time to time to replenish the working stash. Stepping back into the saloon, he paused to admire the bearer of gifts. \n\nAlly was wearing her yellow denim shorts, with the Hello Kitty sewn onto the butt, the high-cut legs revealing her strong, curvaceous undercarriage. She'd slimmed down a little since he'd last set eyes on her, thanks to a recent running campaign, but still boasted the same sculptured thighs, the same shapely knees, the chiselled calves and slender ankles he so fondly recalled. She was wearing a loose, white, pink pin-striped shirt, with the sleeves rolled up to the elbows and the top tree buttons undone. Sensing his scrutiny, she turned and tilted her head. \"And you've got something for me I believe.\"\n\nWatson looked around in confusion. \"I do?\"\n\n\"Y... yyup! About yay high.\" she held a hand level with the top of Beck's head. \"Skinny. Blonde. Big blue blue eyes. Delusions of aviation and an attitude.\"\n\n\"Beck for a kilo of weed?\" Watson frowned, \"That hardly seems fair.\"\n\n\"Take it or leave it.\" Ally shrugged.\n\n\"Well. There's one born every minute.\"\n\n\"Fuckin' steady on there, partner. That's my new FO you're talking about. Any more of that shit and you won't be getting her back.\"\n\nWatson snapped his fingers. \"Maybe I could throw in some steak knives, make it worthwhile.\"\n\nAlly looked at Beck and rolled her eyes. \"What a fucktard! Is he always like this?\"\n\nBeck blinked in surprise, unsure of how to handle Ally's brazen bad manners. \"Umm... he's not a fucktard actually. He's actually a pretty good guy.\"\n\nAlly cupped her hand to Beck's ear. \"I know that, and you know that, but for fuck's sake don't let him know.\"\n\n\"Right!\" Watson said, rubbing his hands. \"So how do you want her? Shall I bag her up or would you rather dine in?\"\n\n\"I'm gonna have to make it a take-away I'm afraid.\" Ally said, carefully lowering her backpack onto the table, \"But there are a few formalities to go through first. Becky?\"\n\nBeck was standing to the side, hands thrust in the pockets of her fawn cotton shorts, rocking from heel to toe. Ally was here to take her away, back to Sydney, to flight school. The moment was nigh, and Beck felt as if her heart was in freefall. She looked at Ally. \"Huh?\"\n\n\"Would it be okay if I had a moment alone with your old man? I want the scoop on all your intimate secrets. Your favourite colour, your favourite animal, what to feed you for breakfast and what-not.\"\n\n\"Oh...\" Beck blinked, and looked at Watson. \"Dommy?\"\n\n\"If you don't mind, Moosh. If you could just go and finish the shopping that would be awesome.\"\n\n\"Honestly,\" Ally said and gave Beck's arm a gentle squeeze, \"it's nothing sinister. We just want to talk about how fuckin' awesome you are, and we don't want you getting a big head. Okay? Cos' then your headset won't fit. Pain in the ass, a tight headset, let me tell you.\"\n\n\"Oh...\" Beck replied wanly, \"...okay.\"\n\n\"You still got my wallet, Moosh?\" the old man asked and Beck nodded. \"Cool. And don't forget the shopping bags.\"\n\nThey waited while Beck collected herself, then scaled the companionway and stepped onto the hard. Watson ducked his head, watching from a porthole as she walked past smearing her eyes. When he turned back his face was ashen. Ally shook her head and for a fleeting instant looked almost tender. \"I just can't imagine how much this must hurt.\"\n\n\"Having you turn up?\"\n\n\"That too. You poor prick.\"\n\n\"It's okay,\" Watson shrugged, \"I've had worse.\"\n\n\"Worse? Than giving up your girl? You gotta be kidding, surely.\"\n\n\"You know, now you mention it, it does kinda sting.\"\n\nAlly patted his arm. \"And you're putting on such a brave face. I'm impressed Damon, really I am.\"\n\nWatson gestured at the settee and Ally sat. \"Is it convincing? I've been practising in front of the mirror for weeks.\"\n\nAlly screwed her face up. \"Mmm... yeah nahh, not bad. For a beginner. Don't worry though, I can see through it.\"\n\n\"So now you're a radiologist?\"\n\n\"I'm a chick Damon, that's way better.\"\n\n\"So chicks have X-ray eyes?\"\n\n\"When it comes to this shit, definitely. A sixth, seventh and eighth sense.\"\n\nWatson shrugged. \"Oh well, look on the bright side. If she pulls this off I'll be set. I can live off the earnings of a woman the rest of my life.\"\n\n\"Well that won't be long.\"\n\n\"Maybe not, but I still won't have to do another day's work.\"\n\nAlly blew a raspberry. \"You're a writer, Damon. You don't work anyway.\"\n\n\"Good point. But the fact is, this is what Becky really wants to do, and there's no sense in making it harder than it has to be.\"\n\n\"You know that's incredibly fucking gracious of you, Damon. And I really mean that.\"\n\n\"Well, you know the old saying, Ally. 'If you love something let it go'-\"\n\n\" 'And if it doesn't come back, hunt the fuckin' thing down and kill it'. Yeah yeah, I know. Still, if she doesn't come back at least you'll know why.\"\n\n\"Why?\"\n\n\"Because she's having such a fuckin' good time. Cos' you know how it's gonna be, don't you? Flying all over the world in the Stream, staying in five star hotels... and that's only if the seven stars are all booked out. New York, London, Paris-\"\n\n\"Thanks Ally,\" Watson cut her off, \"I get the picture. I guess a smelly old boat's not much competition.\"\n\n\"And let's not forget the smelly old man.\"\n\nWatson looked at her, hurt.\n\n\"Do you want to know what it's really like?\" Ally said, all hint of mischief gone, and began counting off on her fingers. \"Shit clients, impossible demands. Long days, broken nights, endless hours of flight planning. Skinny fuel, bent officials, the random in-flight emergency. AOG for days at a time in Timbuk-bloody-tu, weather so bad you'd shit yourself if you weren't so fuckin' busy. And that's on a good day.\"\n\n\"And that's supposed to make me feel better?\"\n\n\"Just saying, is all, it's not all beer and skittles. I'd be lying if I said it wasn't the best fuckin' job in the world, but it's still a job. It's hard work. Unrelenting. And if you fuck up sufficiently the results can be spectacular. 'Air Crash Investigation' spectacular if you know what I mean.\"\n\n\"Oh fuckin' awesome.\" Watson palmed his forehead, \"Why don't I just throw her to the sharks?\"\n\n\"You wanna know the most dangerous part?\" Ally said hotly, \"Statistically? It's the drive to the fuckin' airport. And who among us thinks twice about that? Right. None of us, not even you.\"\n\n\"But the Gulfstream, Ally. She's still just a kid. You sure she's up to it?\"\n\n\"What's up? Having second thoughts?\"\n\n\"No. These are the very first ones that came to me. I've just been sitting on them.\"\n\n\"Mate,\" Ally cocked her head, \"if a little shrinking violet like me can do it... Look... Beck will have the very best training money can buy, and it's all competency based, so she won't set foot in the Stream till she's good and ready. Simple. If she can't make the grade she can't fly the plane. And some of the drivers I've met over the years... you wouldn't turn 'em loose on a fuckin' bicycle. Don't fret Damon, she'll romp it in, I promise.\"",
        "\"I hope.\" \n\n\"For fuck's sake don't worry. We'll look after her. In the air and on the ground.\"\n\n\"Well that's a consolation I guess. At least I'll know she's well taken care of. Don't fuck with the sisterhood, right?\"\n\n\"You better fuckin' believe it. And while we're on the subject, I have a bone to pick.\"\n\n\"A bone to pick?\" Watson blinked, taken aback. \"With me?\"\n\n\"Too fuckin' right!\"\n\n\"What have I done?\"\n\n\"It's Macca.\"\n\n\"Macca?\" Watson stiffened. \"Is she okay?\"\n\n\"She came up here for a holiday, didn't she?\"\n\n\"Ally? For god's sake what's happened to-\"\n\n\"Didn't she?\"\n\n\"Well of course she did.\" Watson said curtly.\n\n\"And she was pretty much normal before she left?\"\n\n\"Normal?\"\n\n\"As in Macca-normal. Macca two point-zero normal at any rate. And then she came up here.\"\n\n\"For fuck's sake Ally, spit it out. Is she okay?\"\n\n\"Okay. Listen. After she came back from her little... jaunt... we had to go to New Zealand. I mean for work. And guess what? The randy little slut took me hostage, kept me locked in her room for two fuckin' days. Every time I tried to get out she dragged me back in. 'Aww... come on Ally, just one little kiss'.\"\n\n\"What's the matter with a kiss?\"\n\n\"It's what we did in between!\" Ally railed. \"I could hardly walk by the end of it. I swear we did the whole Karma Sutra... girls' edition. I tell you, Damon Watson, you've created a monster.\"\n\n\"Poor Ally. Must have been terrible.\"\n\n\"Oi oi oi!\" Ally glared, \"I never said that. But fuckin' Macca. She's fuckin' insatiable. I mean what did you do to her?\"\n\n\"Well you called it. Remember? Back in Canberra? When you said that stuff about all her unused orgasms? Well you were spot on. She got thousands stored up and she wants to cash 'em all in, every last one. And she's not gonna stop till the backlog's been cleared.\"\n\n\"I'll fuckin' say.\" Ally breathed with a shake of her head. \"And I thought I was a loose unit.\"\n\nThe old man snapped his fingers and levelled a finger at her. \"Which reminds me. We had a deal remember?\"\n\n\"Deal? What deal?\"\n\n\"You said If it all went south you'd come up and haunt me. And I said, well, if it didn't go south-\"\n\n\"Yeah yeah.\"\n\n\"And it didn't go south, did it? It went north, all the way to Santa's workshop if you know what I mean. And you said-\"\n\n\"Alright!\"\n\n\"-what were your exact words? 'You never know your luck in the big city'. We shook on it remember?\"\n\n\"Nye nyin yin yin ye remember...\" Ally mocked. \"I know, I know.\"\n\n\"And?\"\n\n\"I'm a woman of my word, Damon.\"\n\n\"Does that mean I can look forward to-\"\n\n\"Yes!\" Ally said, cutting him off, \"Yes... as I said, I'm a woman of my word.\"\n\n\"Really?\" Watson rubbed his hands. \"What can we do?\"\n\n\"Anything you fuckin'-well like. Except anal. Being reamed up the cloaca's not funny and it's not fun. Unless you wanna be mummy of course, in which case I can bring the strap-on.\"\n\n\"That's cool.\" Watson raised his hands, \"No thanks.\"\n\nHe was only joking of course, and if she reneged when it came to the crunch then he wouldn't hold it against her. It was more about the moral victory than anything. Ally looked at him, obviously nervous, and he could sense something brewing. \"I'm just mucking around, you know.\"\n\n\"What do you mean?\"\n\n\"I mean judging by that look on your face. It was just a bit of fun you know, but really, if you don't want to...\"\n\n\"What?\" Ally shook her head to clear her thoughts. \"No! No. A deal's a deal, I mean it, though I'm not gonna pay your medical expenses. No. There's something else.\" Licking her lips, she looked around. She could recognise the setting from Vicky's lurid account, the galley, the nav station, the saloon's settee that turned into a great big bed. \"It's Beck.\"\n\n\"What about her?\"\n\n\"Macca told me some stories. About Beck and her.\"\n\n\"Ah...\" Watson said as it all became clear.\n\n\"Apparently they had some adventures.\"\n\n\"Heaps,\" Watson teased, \"fishing and bushwalking, fighting off killer koalas. Snorkelling and diving, sail-\"\n\n\"Not those!\" Ally railed, \"Although when you say diving... Look, I'm talking about their other adventures.\"\n\n\"Oh... the eclipse party? Getting thrown off the cat?\"\n\n\"Come on Mister, you're not that dumb. You know exactly what I'm talking about.\"\n\n\"Their adventures of the romantic kind?\"\n\n\"That's what I'm talking about exactly.\"\n\n\"Well what about them?\"\n\n\"Are you really that thick? Think about it. I'm getting ready to run away with your girl.\"\n\n\"And?\"\n\n\"Well... put it this way. When Macca took me hostage, I didn't put up much of a fight.\"\n\n\"Resigned to your fate?\"\n\n\"Damon. For thirty seconds, please, just stop mucking around. Listen to me. All men are fucktards, no offence, although I must admit they do have their uses. Now me, I do love a bit of pork now and then, as long as it keeps its fuckin' mouth shut. But if I can't have pork... well... I'd just as soon have pie. Do you know what I'm saying?\"\n\n\"Pie?\" Watson asked, a twinkle in his eye. \"What sort of pie?\"\n\n\"What sort?\" Ally fumed. \"You know what sort. Sugar-and-spice sort of pie. Peaches and cream sort of pie. Girl pie.\"\n\n\"So why are you telling me?\"\n\n\"Jesus fuck, do I have to spell it out? Look! Your girl likes girls. Right? And I like girls. Right? Now when beck begins her conversion, the two of us are gonna be banged up together all over the fuckin' place- cockpits, simulators, five star hotels. Are you with me, Damo? Are you picking up what I'm putting down?\"\n\n\"Cuppa?\" Watson asked, filling the preheat and igniting it with an orange cigarette lighter. The sweet smell of burning methylated spirits permeated the saloon while he gathered his wits under cover of the diversion.\n\n\"Well are you?\"\n\n\"Tea?\"\n\n\"Yes! C-U-N-Tea! My favourite. There! Do I make myself clear?\"\n\n\"English Breakfast or Green?\"\n\n\"Don't make me come over there, Captain Watson. We're hammering out the rules of engagement here. This is important.\"\n\n\"So. You're wondering if I'd condone you and Beck having sex? Is that what you mean?\"\n\n\"Condone.\" Ally sniffed. \"That's such a dick of a word.\"\n\n\"Well what word would you use?\"\n\n\"I don't know... Allow? No. Be cool with... no that's not the word. Mind? Tolerate? No. Accept... Okay, fuck it. Would you? 'Condone' it?\"\n\n\"Why not?\" Watson shrugged, \"It's just sex after all. And it's all up to Beck at the end of the day.\"\n\n\"Well fuckin' duhh... of course it is. But she's your girl Damon, and If you say no, then she's out of bounds I swear.\"\n\n\"Well if there's one thing you know how to do...\"\n\n\"Fuck it, Damon, I'm serious.\"\n\n\"Just think if I did.\" Watson grunted with laughter. \"Can you imagine the whining?\"\n\n\"Okay, so you're obviously not gonna say.\"\n\nWatson took two mugs from the fenced wooden rack over the stove and set them on the sink. \"Ally.\" he said, then heaved a sigh, \"Beck's her own girl. Am I gonna miss her? Like someone's torn my heart out. Will I worry about what she's getting up to while she's out of my sight? Every minute. But of all the things that do worry me, sex is the least of them.\"\n\n\"But it does worry you?\"\n\nWatson looked at her and she could see the pain in his eyes. \"Want to know the truth?\" he asked and Ally nodded. \"What worries me most? That some dashing young man might sweep Beck off her feet and I'll never set eyes on her again. I mean come on Ally. I'm only human.\"\n\nAlly exhaled through puffed cheeks. \"Okay. But what if some dashing young chick did the same?\"\n\nWatson shrugged. \"Same bleeding difference.\"\n\n\"Bleeding being the operative word.\" Ally said under her breath. \"But what if that dashing young woman also promised to bring her back?\"\n\nWatson dropped a teabag into a mug. \"Then there's nothing to discuss.\"\n\n\"You know what,\" Ally replied, sliding out from behind saloon table, \"you're right, there isn't. I apologise for even bringing it up.\" She slapped herself lightly on the cheek. \"Bad Alana! Very insensitive! There's a whole lot more at stake than a little rumpy-pumpy.\"\n\nWatson hefted a shoulder. \"It'll all work out.\"\n\nAlly nodded, slightly deflated. \"It always seems to.\"\n\n\"And if you want to brighten your day with a little slap and tickle, who am I to play Grinch?\"\n\n\"I love how you make it all sound so innocent.\"\n\n\"Well isn't it?\"\n\n\"Innocent?\" Ally raised her eyes, \"Yes, I guess it is. If it's done in good faith.\" She put her hand on his arm. \"Speaking of which.\"\n\n\"Which?\"\n\n\"Good faith. I've got a room at the Pullman for the next couple of nights. Ten minutes walk from here. What do you say?\"\n\nThe kettle began to whistle. Watson picked it up, then filled the two mugs with a shaking hand. Strange. The idea of getting into a young woman's pants for the very first time was usually cause for arousal, yet, funnily enough, right now there was not the merest flicker. \"Sugar?\"\n\n\"You calling me or asking me?\"\n\n\"Either. Both. Milk?\"\n\n\"One of each, thanks. Well? How about it?\" she winked. \"Tonight? You and me?\"\n\nWatson turned to face her. \"Ally? Would you be offended if I asked for a rain check?\"\n\nAlly clapped her hands then slapped her thighs. Rising up on tiptoes she jabbed a finger in his face. \"Right answer!\"\n\nWatson looked at her. \"Pardon?\"\n\n\"If you'd said 'yes' that would mean I'd totally misjudged you.\"\n\n\"And then what? You would have reneged?\"\n\n\"I never renege.\" Ally said flatly.\n\n\"So you still would have... you know?\"\n\n\"Yep\", she nodded, \"I would have given you the two-minute special. Wham, bam, thank you ma'am, now get the fuck out of my sight!\"\n\n\"Two minutes? Wow. You must think I'm a stayer.\"\n\n\"Well we're gonna find out, aren't we? Because when the dust settles you are gonna get your reward.\"\n\nThe old man handed her a mug of tea and she put it right down. \"Are your hands clean, Damon?\"\n\nWatson looked at his hands, thinking the pint-sized pilot a tad OCD. Running the tap, he squeezed some liquid soap onto them, then gave them a quick wash. \"They are now.\" he announced, padding them dry on a towel.\n\nAlly took his right hand, then turned it over and studied his nails. \"Nice hands,\" she intoned, \"for a boy.\" She looked at him. \"How would you like a sneak preview?\"\n\nBefore he could answer, Ally sucked her belly in and slid his hand down the front of her shorts. Watson's fingers passed straight under the waistband of her low-cut briefs, and over a closely-cropped thatch of silken pubic hair. Eyes wide, he held his breath, as his fingers cupped her furred, squishy mound, his middle finger hovering over a wet slippery slit. His cock began to stiffen, and he had the sense of holding a hot little mouse in his hand. It was licking his finger.\n\nAlly put her arms round his neck and breathed in his ear. \"Put it in if you like.\"\n\nWatson took her up on the offer, curling his middle finger into her, burying it up to the knuckle in her yielding insides. Ally tensed her muscles, squeezing his finger like a wet, slippery fist, then just as quickly relaxed. \"Being good gets you stuff.\" she whispered, then gripped his wrist and slowly extracted him. The old man withdrew, battling with the urge to sniff his finger. \"Go ahead.\" Ally breathed. \"You know you want to.\"\n\nWatson swiped his finger under his nose, inhaling the scent of Ally's insides, then put it in his mouth and sucked it clean. Her pussy was just like any other he had tasted, yet utterly unique- musky, tart and totally scrumptious. Ally grabbed a handful of the swelling in his shorts. \"There you go.\" she said, giving it a shake, \"What do you think?\"\n\n\"Honestly? Ally? You're everything I imagined you'd be.\"\n\n\"Namely?\"\n\nWatson put his face in hers. \"A foul-mouthed, bad-tempered-\"\n\n\"Damon!\"\n\n\"-horny little honey badger-\"\n\n\"That's better.\"\n\n\"I mean it Ally. You're a babe, a stunner, a total little goddess. I mean ever since that night in-\"\n\nAlly raised a hand, shutting him down. \"Okay, okay, no need to labour the point Reg.\"\n\n\"I'm serious. And that preview just then was totally mind blowing, thank you.\"\n\n\"Well you just wait for the main event.\" she said, patting his shoulder.\n\n\"The mind boggles.\"\n\n\"And that's not all.\" Ally said, staring pointedly at his crotch. \n\n\"Yeah sorry about that. I guess it just can't wait.\"\n\n\"Well it'll be worth it, I promise, I'll make fuckin' sure of that.\" When Ally picked up her mug and took a sip, Watson saw her hand was trembling. \"Now,\" she said, \"let's talk business.\"\n\n* * *\n\nWhere a weaker man might have said his goodbyes at the front door, or the top of the companionway in his case, Watson insisted on taking the harder path, of seeing Beck off from the airport, with the prospect of standing there, watching her fly away. The little blonde was like a cat on hot bricks when Ally turned up to collect her, excited and frightened, reluctant and eager, thrilled and heartbroken and torn and conflicted in every possible way. Watson helped hump her travelling gear up the ramp- a backpack and duffle bag, laptop and handbag, and her cuddly-toy Great White Shark. She had made a point of leaving her most beloved possessions behind, her bikini, her journal, her beautiful backless party dress, as a declaration of her intention to one day return.\n\nIt began as a very quiet ride, with each submersed in their own inscrutable thoughts. Until they swung past the hotel to pick up Ally's temporary copilot, who had failed to make the rendezvous at the appointed time. As they turned into the drive heading up to the luxury hotel, an entirely new energy infiltrated the space. The energy of Ally. On the warpath.\n\nHe was waiting on the steps when they pulled up, absent-mindedly scrolling through an iPhone, and didn't look up until the Ally blipped the horn. She shut down and dismounted as Watson climbed out and slid open the eight-seater's back door.\n\n\"What part of seven o'fucking clock didn't you understand, Dick?\" Ally growled, tapping her watch at the bottom of the stairs as her copilot sauntered down, overnight bag over one shoulder, a bulging green helmet bag clutched in his hand. \n\n\"It's Rick. Not Dick.\"\n\n\"It's almost eight. Not seven.\"\n\n\"Chill, baby.\" the man waved breezily, \"This is corporate, not RPT.\"\n\n\"Do not,\" Ally snarled, \"ever tell me to chill. And if you ever call me baby again, I'll make fucking sure you can never go halves in one. Got me?\"\n\n\"Fuck me,\" he snorted, \"someone got out the wrong side of bed. I'm sorry, Alana, I didn't mean to upset you.\"\n\nWatson appeared beside Ally, and gave her sidekick a quick once-over. Older than Ally, mid forties he guessed, he cut the figure of the archetypal aviator- tall, straight, clean cut, with skin-deep good looks and an air of effortless confidence. Assiduously playing the part, he came complete with the requisite accessories, aviator sunglasses and a gold-badged peaked cap, white shirt with epaulettes, and dark blue shoulder boards with three gold stripes. Over the left breast of his short-sleeved white shirt he wore a pair of golden wings, and a blue name badge over the right that said, 'Rick Skilling'. Sensing Watson's scrutiny, he put down the helmet bag and held out his hand, palm down, thumb flexed, like some waist-level Nazi salute. \"Rick Skilling,\" he said with a superficial smile. \"Squadron Leader.\"\n\nWatson recognised the gesture for what it was, a literal attempt at seizing the proverbial upper hand, and substituted a bunch of limp fingertips for his usual firm handshake. \"Damon.\" he replied, refusing to play. \"Moth-eaten layabout.\"\n\n\"Did you get that flight plan in?\" Ally asked brusquely, watching her copilot load his gear.\n\nStraightening, the man looked her up and down in borderline disdain. \"Yes I did.\" he replied, as in, 'what do you think?'\n\n\"Give me a look.\"\n\n\"Don't you trust me?\" Skilling smiled wryly. Ally didn't smile back and he hesitated, sizing her up for a possible challenge. Last night, after a couple of beers, he offered to have sex with her, but she'd turned him down with a mouthful of stinging invective. This meant she was now beneath his contempt, but he had three bars and she had four and this was his first gig in corporate. \"It's in my nav bag.\" he said, hoping that would suffice.\n\n\"Well get it out of your nav bag!\" Ally said peevishly, then turned and installed herself in the hire-car's front passenger seat. \"Damon. You drive. I've got work to do.\"\n\nWhile Watson climbed into the driver's seat, Skilling ferreted a tablet from his helmet bag and handed it over. Whipping his cap off to saddle-up in the rear, he suddenly clapped eyes on the gorgeous young blonde. \"Well, hello there!\" he said, setting his charmometer to 'stun', \"you must be the neophyte?\"\n\nBeck looked around then pointed at herself. \"Me? No. I'm a Libran.\"\n\nThe pilot opened his mouth, then closed it again, looking slightly confused. Taking his seat, he slid the rear door shut, then twisted in his seat as the van set off. \"So. You wanna be a pilot, huh?\" he asked Beck.\n\n\"That's the plan.\"\n\n\"Well why don't you just join the Air Force instead? That way you can do it for free. Never know. You might wind up flying Hornets just like I did.\"\n\n\"You haven't put your seat belt on.\" Beck said.\n\nSkilling fumbled for his belt, slightly winded, and buckled up. \"Awesome machine, the old Hornet,\" he soldiered on, though hardly anyone was listening and Beck didn't have a clue what he was on about anyway.\n\n\"That's a fighter, isn't it?\" Watson asked over his shoulder, fully aware of what the Hornet was.\n\n\"Last of the dogfighters.\" Skilling nodded. \"A real man's aeroplane.\"\n\n\"So how could I wind up flying one?\" Beck asked matter-of-factly. \"I'm a girl.\"\n\n\"Yeah, but no...\" Skilling stammered, losing ground. \"What I meant is, she's a real stick and rudder aeroplane. Awesome for ACM.\"\n\n\"What's ACM?\" Beck asked, as an image flashed through her mind, of a porn starlet sucking a great big cock freshly withdrawn from her co-workers butt.\n\n\"Air Combat Manoeuvres. Dogfighting. The sport of kings.\"\n\n\"Played by knuckle-draggers.\" Ally muttered, head down, studying the flight plan.\n\n\"Dogfighting?\" Beck cried in disbelief. \"With real dogs?\"\n\n\"Heh, heh...\" Skilling laughed nervously. She couldn't be that stupid, surely. \"I... ahh...\"\n\nAlly twisted in her seat, face pinched, lips compressed, and exhaled loudly through her nose. \"Did you already submit this?\"\n\nSkilling looked at her. \"Like I just told you.\"\n\n\"You fuckin' genius! You just planned us through the middle of fuckin' restricted airspace.\"\n\n\"What do you mean?\"\n\n\"Here!\" Ally said, turning the tablet and tapping the display. \"What does this fuckin' red shading mean?\"\n\nThe pilot took the tablet and studied it, frowning. He'd flown through this airspace hundreds of times and had never once been denied clearance. Of course that had been in a military jet, not a Gulfstream. \"Yeah, nahh, I know,\" he waffled, turning red, \"but it's the shortest way down and I thought they might give us a clearance.\"\n\n\"Really? Everybody else in the world has to fly round, but for some fuckin' reason they'll just let us straight through. How come? Are you fucking the Air Trafficker?\"\n\nA beading of sweat glittered on his brow. \"Never know, it might not be active.\"\n\n\"It's always active, Dick, and you fuckin' know it.\"\n\n\"Well if they won't let us through we'll just have to go around.\"\n\n\"They won't fuckin' let us through, so we will go around. Why didn't you just plan for that in the first place? Like I asked you? You fucktard. Still, at least you've put your name down as pilot in command. A complete fuckin' lie, but at least it keeps my fuckin' name out of this.\"\n\nSkilling narrowed his eyes, the gesture all but lost behind his RayBans. \"Well maybe you should have done it yourself.\"\n\n\"Thanks for the tip.\" Ally curled her lip. \"Next time I will.\"\n\nSkilling crossed his arms and stuck out his jaw. Fucking civvy scum, telling him how to fly. Not bad enough that he was understudy to this amateur, but now he was being publicly berated. Him, a squadron leader, a fighter pilot no less, being harangued by a chick, a female, a mere bloody woman. Probably a lesbian he seethed, staring out the window, still stinging from last night's rejection. She had to be. Short, angry, with a chip on both shoulders, foul-mouthed, dismissive and no tits to speak of. His cock was far too good for her anyway.",
        "\"See that, Beck?\" Ally said, head down, tapping new flight details into the tablet. \"Did you spot Dick's deliberate mistakes? Didn't listen to the PIC. Didn't check his work. Didn't admit he made a mistake. And on top of it all he tried to answer back. Not a bad morning's work.\"\n\n\"Like to see you in a seven-G turn,\" Skilling muttered, \"with your pipper on a bogie and your tail warning going off.\"\n\nAlly turned around and dropped the tablet heavily in his lap. \"My tail warning goes off all the time.\" she said, \"doesn't worry me.\" She gave Beck a wink. \"How about yours?\"\n\n\"Uh huh.\" Beck nodded. \"In fact it's going off right now.\"\n\n\"That might be your fuckwit alert,\" Ally sniffed, \"they sound very similar. Here, Dick, could you do me a favour? Next time I ask you to lodge a flight plan, do it properly.\"\n\n\"I see,\" the surly male replied, \"so suddenly I'm the flight plan bitch.\"\n\n\"Its' the right-seater's duty.\"\n\n\"Right seat?\" he snorted. \"Yeah, well, don't get used to that. Hate to tell you, but I'm not gonna be there long.\"\n\nAlly turned away sneering. \"How right you are.\"\n\nTurning off the highway into the GA side of the airport, the van pulled in to a low-slung FBO. After loading their gear into a trailer hitched to a golf cart, they were fitted with yellow reflective hi-viz vests for the perilous journey across a hundred meters of apron to their plane. Beck could hardly contain herself when she set eyes on the fabled Gulfstream. The last time she'd seen it, her fervent declaration was barely a fantasy, a heady and delicious yet unobtainable dream. And now here she was, about to fly away in the thing, embarking on a journey that would eventually lead to the cockpit.\n\nTheir bags were dropped at the foot of the airstairs and the golf cart trundled away. It was quiet, but for the distant comings and goings of aircraft, but Ally parked a pair of earmuffs on her temples, just out of habit, in preparation for the ritual walk-around. \"Wanna follow me, Beck?\" she asked, handing Beck a pair of orange ear protectors. A far cry from the girl in the yellow shorts, Ally looked every inch the professional, her shoulders broadened by the gold striped shoulder boards, the contours of her firm round butt shown off to excellent effect by the tailored navy-blue slacks. Left to his own devices, her copilot, Skilling, stepped over the pile of bags at the foot of the airstairs and went to climb on board.\n\n\"OI!\" Ally yelled, stopping Skilling in his tracks. \"Aren't you forgetting something?\"\n\nSkilling looked around frowning, then shrugged. \"What?\"\n\nAlly planted her fists on her hips and cocked her head. \"They won't load themselves, Dick. I know. I've already tried.\"\n\nSkilling's jaw dropped. \"I am not loading bags!\"\n\nWatson stepped in, eager to avert unnecessary bloodshed. \"That's okay,\" he said, \"I'll-\"\n\n\"Damon!\" Ally snapped and Watson froze. \"Thanks all the same but Dick can do 'em. It's in his contract.\"\n\n\"Dick won't do 'em,\" Skilling parried, and went to mount the stairs.\n\n\"Then where are you going?\" Ally asked.\n\n\"To load the flight plan.\"\n\n\"Why? We're not going anywhere. Till you load those fuckin' bags. You can load them on board or get your stuff and fuck off. I'll have the firm send up a proper copilot and you will never work for the company again. Or any other company I can get in touch with.\"\n\nHis bluff called, Skilling stumped angrily down the steps. \"This is outrageous,\" he muttered, and Watson heard another word that sounded like 'slut'. Stooping, he gathered up the gear, trying to shoulder the lot in one massive heap. Halfway up, he lost control of the load, dropping Beck's duffle bag and her shark in the process.\n\n\"DO YOU MIND?\" Ally shrilled and he blanched. \"That's a girl's most treasured pet. And a protected species, unlike you.\"\n\nChastened, Skilling set his burden down, then retrieved the fallen duffle bag and wiped the dust off the shark. They watched him disappear into the plane and Ally resumed the walk-around.\n\n\"He's not very nice.\" Beck said, standing under the wing beside her.\n\n\"I've had worse,\" Ally said woodenly, peering into the torch-lit wheel well. \"Not much worse, I grant you. I'm sorry he had to go and spoil your first ride, but look on the bright side. He's doing you a favour at the risk of his own job. He's showing you how to never to act as a copilot.\"\n\n\"How should he act?\"\n\n\"The same way I do when I'm flying shotgun for Ben. In a considered, courteous, professional manner, willing to-\"\n\n\"Courteous?\" Beck demanded, disbelief written all over her face.\n\n\"Okay, in a considered and professional manner. Benny and me are besties, Becky, he'd be heartbroken if I was nice to him. But that's not the point. My job as a copilot is to make sure the PIC has everything he or she needs to carry out their job in the safest possible manner. And Ben does the same for me when he's in the right-hand seat, in spite of the name-calling. But this guy.\" Ally shook her head, \"Nuh uh. It's meant to be two pilots, one crew, but in this case, it's two of one and none of the other.\"\n\n\"Why is he being such a dick?\"\n\n\"I blame his parents,\" Ally shrugged, \"they named him.\"\n\n\"Are they all like this? Men pilots?\"\n\n\"You take them as you find them.\" Ally told the main wheels, probing their hydraulics with her torch, \"You know, I had a chick copilot once who I seriously wanted to punch, and not in the nice way either. But it's especially bad with these ex-military jocks. These idiots spend their whole lives being told that their shit doesn't stink and in the end they even start to believe it. Funny thing is, most of them are really shit pilots, who would have never made the grade in GA. But they still think you should be saying 'yes sir' and 'no sir' and it really burns their piss when the captain's a chick.\"\n\n\"Maybe he should just stick to fighting dogs.\"\n\n\"If he can keep his hand off it long enough.\" Ally muttered. \"It's a worry you know. Sometimes you just wanna give in, just for the peace and quiet, but let me tell you. Give 'em an inch and they'll shit all over you. I learnt that the hard way. Got cowed by a character just like him and let him usurp my authority. He wound up doing a hard landing one day and I carried the can. A hundred grand's worth of maintenance for not standing up to him.\" She straightened, and they made their way outboard at the rear of the wing. \"Remember, Becks. When you sign for the aircraft, the buck stops with you. If someone wants to run roughshod all over you, and you let them, and they fuck up, you're responsible. Dig?\"\n\nBeck nodded, feeling a little rattled.\n\nThere was a squeal and a hiss and the Auxiliary Power Unit spooled up, and Ally stepped back. Reaching for Beck's hand, she pulled her over and pointed at the top of the towering T-tail. \"See that, Becks? No anticol. That idiot has no idea but he's just lost his job. But don't say anything, okay? Not til we get back to Sydney.\" She winked. \"I want to keep it a surprise.\"\n\nWhen they finished, Watson was still at the foot of the airstairs, out of place and looking forlorn. Skilling hadn't asked him on board and he sure as hell wasn't about to invite himself in. \"Got it all squared away, Moosh?\" he smiled wanly. \"There's a quiz at the end of it you know.\"\n\n\"She'll be able to do it in her sleep when I'm done with her.\" Ally said matter-of-factly.\n\n\"Love your copilot.\" Watson said.\n\n\"Dicksssss... Killing?\"\n\n\"Can't you ditch him? Send him to the shops for some ciggies or something and rack off while he's gone?\"\n\nAlly's cheeks dimpled. \"Don't speak ill of the dead, Damon. Or the soon-to-be unemployed.\"\n\n\"Seriously?\"\n\nAlly and Beck exchanged a glance and Ally put a finger to her lips. \"He doesn't know yet. We're having it gift-wrapped.\"\n\nWatson bumped Beck with a shoulder. \"Looks like there might be a vacancy.\"\n\n\"I'll put a reserved sticker on the seat for you.\" Ally winked. There was a moment's strained silence then Ally snapped out of it. \"Okay!\" she said and everyone jumped, \"We've got our off-blocks time to make... Damon... you take Beck over to the FBO and say goodbye.\"\n\nThe old man and the beautiful little blonde looked at each other, wide-eyed, as if they had just seen into the abyss. The time had come. Ally watched their retreating backs, Beck and Watson, arms around each other, heads bowed, heading across the apron. She felt a stab in her heart- another loving relationship sacrificed to the insatiable demands of aviation. \"Make it quick, Beck!\" she shouted, then surreptitiously smeared her eyes. \"We're on a deadline.\"\n\nPEREGRINE\n\nWatson rendezvoused with Tanya at Brisbane airport, where they hugged and kissed like long-lost lovers. He'd just arrived from Cairns, Far North Queensland, and was looking decidedly shell-shocked in the aftermath of a ten-day visit from Maya and her girlfriend, Paula. The old man had a pair of Paula's cum-stained knickers Maya had given him, as a souvenir of his holiday in Sydney. The sweet little thing had come up with Maya to get them back, but in the end still managed to leave them behind. She was going to have to visit. Again.\n\nBut a good time was had by all, and the old man had the war wounds- scratches on his back, bite-marks on his neck- to prove it. In fact it looked a bit like he'd just been fucked by a tigress, or a pair of them in this case, fit, young, adventurous and horny. Their visit had been life-changing, coming at a time when the old man was in slump, deeply fatigued and feeling abandoned. Once again he had to marvel at the rejuvenative effect of sex, meted out in this case by two girls one-third his age, aided and abetted by a ready supply of dope and Champagne. Watson had produced and ejaculated so much semen during their stay he was thinking of donating his body to science. It had to be a record, surely.\n\nTanya, meanwhile, had just flown in from the Maldives where she and her friends had been busy stalking super-trawlers. There had been an attempt on her life in the course of the campaign, nothing accidental- a man, with a gun and instructions- and her husband had summarily ordered her home. Together, she and Watson jumped on a jet bound for Sydney, and arrived after a couple of hours at the domestic terminal.\n\nBeck was waiting at the gate with Ally, both in uniform. In her tailored navy-blue pants and crisp white shirt, with gold wings over one breast and her name tag over the other, the epaulettes with their three gold stripes and a blue peaked cap with a big gold badge, Beck was the very portrait of a professional pilot, in miniature perhaps, straight backed and proud, calm, confident and vigilant. She had cut her hair back to a shoulder-length bob as a concession to the unrelenting schedule, hour upon hour at forty thousand feet at the controls of her dream machine. She looked so mature, so... capable... a far cry from the terrified little foundling of a few years before.\n\nThey greeted each with hugs and kisses, the two pocket-rocket female aviators and the stylish, beautiful woman of middle age, and a weather beaten old man with more white hair than grey. Watson hadn't seen Beck since Dubai a few months before, and pushed her away, holding her at arm's length the better to study her. \"Beck? Baby? Is that really you?\"\n\n\"Beck?\" the blonde blew a raspberry, \"Pfft... Never heard of her.\"\n\nWatson looked at her, fleetingly stumped.\n\n\"It's Moosh to you, Mister.\" she smiled, \"And don't you ever fuckin' forget it.\"\n\nThey fell into a staggering clinch and he pushed her away once more. \"You've put on weight.\"\n\nTanya stood back, arms crossed, chewing a knuckle. \"You can say that again.\" she intoned, and it was true, the one or two more kilos padding out the hollows of her butt. \"Know what? I think I just wet my knickers.\"\n\n\"Oh, Aunty Tan,\" Beck teased. \"that's my job!\"\n\nAlly swept off her cap and raked back her blonde-streaked brown hair. \"Mrs. Bragg,\" she said, putting her hand up, \"Yoo hoo, Mrs. Bragg. I wanna make a complaint.\"\n\nTanya rolled her eyes. \"What now, Darling?\"\n\n\"It's this new fucking pilot.\" Ally said, sounding pained, \"She never lets me fly.\"\n\nBeck looked at Ally, beaming. It was true, she did take the lion's share, but only after paying hefty bribes in sex. They'd become inseparable over the year, Ally and Beck, regular visits from Vicky and Tanya notwithstanding. Beck had blossomed under her feisty little mentor's tutelage and was already flying as a trainee captain on the odd, non-passenger flights. As close as they were she still maintained a healthy modicum of deference, honouring a power gradient that kept their relationship functional.\n\n\"You'll just have to pull rank.\" Tanya suggested.\n\n\"She does all the time.\" Beck complained. \"Who do you think always has to get the coffee?\"\n\n\"Naww...\" Watson said with mock concern, \"poor Moosh. Does she beat you?\"\n\nBeck's cheeks pinked as she recalled a certain night in Berlin, when Ally had shown up with a novelty cat o' nines. \"When I'm good.\" she replied with a Tanya-esque wrinkle of her nose.\n\n\"And when you're bad?\"\n\n\"She gets to beat me.\" Ally snorted, thinking back to the very same night. She looked at her watch. \"Mister Watson, Mrs. Bragg. If you'll come this way. We're on a very tight schedule.\" Ally looked at Beck and gave the blushing little blonde a wink. The old man didn't know it yet, but he was about to collect his long-promised reward. \n\n* * *\n\nBeck won the toss and climbed into the driver's seat of the company's Porsche Cayenne. Watson strapped in behind her, looking nervous. \"Aren't you still on your P's?\"\n\nAlly and Beck swapped a glance, then Beck rolled onto one butt cheek and ferreted a slim pink wallet from her back pocket. \"Here.\" she said, handing over a Middle Eastern driver's licence.\n\nWatson turned it over, then paused to stare intently at her photo ID, at the portrait of a glowing young woman, face framed by platinum hair, a pair of big blue eyes peering out at him. \"Fake!\" he said, handing it back.\n\n\"Nuh uhh!\" Beck shook her head. \"It's the real deal.\"\n\n\"Really? How did you pull that off?\"\n\n\"We've got a fixer.\" Ally said smugly. \"He fixes things. He fixed it, didn't he Beck?\"\n\nThey both snorted with laughter and Beck put the licence away. \n\n\"Is it too late to take out some life insurance?\" Watson asked Tanya.\n\nBeck shot her old man a glare over her shoulder. \"You can walk if you want. Or take a taxi.\"\n\n\"No way!\" Watson scoffed. \"I wanna film the prang.\"\n\n\"Oi!\" Ally bridled, \"You're talking to a Gulfstream driver you know. Compared to her other ride a simple old car is bullshit.\"\n\nThey set off, happily chatting. The Gulfstream was waiting at the FBO, half an hour's drive away at a secondary airport. Vicky would be meeting them there for their trip to Switzerland. First stop, Darwin, for an overnight stay and to pick up some clients. Billionaires, naturally. Next stop Brunei, where Roger was waiting for a hot extraction, having crossed a Chinese crime boss down in Borneo. Roger was presently working on the preservation of Orangutans while the crime boss was working on the preservation of his ill-gotten gains, and Roger had been forced to make a tactical withdrawal. All in a day's work, as he liked to say. The job of saving the planet.\n\nThen to Honkers, to drop off the clients, then Hanners- Hanoi- then west to Dubers-Dubai- for a two day break before heading to Switzerland, where they were to meet up with the Bragg's Korean housekeeper, Sook, for a week's skiing and boarding around Zermatt.\n\nAfter that it was back to work. Watson would fly home business-class with Tanya, while Roger and his PA would ride the Gulfstream to the United States. From there to Mongolia, to challenge an Australian-based Chinese mining operation that was in the throes of killing a sacred river. After that... it was all up in the air, so to speak.\n\nWatson sat back enjoying the experience of being driven, somewhat purposefully... some might say forcefully... through the mid-afternoon traffic by his erstwhile prot\u00e9g\u00e9. The beaten, terrified, malnourished young stray of a few years before was now nowhere to be seen. She had metamorphosed, butterfly-like, into a strong, confident, intelligent, young professional, a blue-eyed, blonde-haired pocket goddess who still exuded a hint of the feral. Watson felt Tanya's gaze on him and looked at her, quickly smearing his eyes as she wrinkled her nose. Hand on his leg, she squeezed his knee.\n\n\"Did you know?\" Beck said excitedly, \"We went to Iceland last month? We landed at Reykjavik- we call it Reykers- at night right on the minimas. And while we were there we went to this place called the blue lagoon. It's like this big fuck-off lagoon, and the water's like blue. It comes straight out of thermal vents and it's hot as a bath. It was like zero fuckin' degrees that day and pissing down with sleet, but me and Ally were still wading around in our bikinis, drinking beer and playing around with the steam vents. Then we went inside a volcano-\"\n\n\"Is that what I can smell?\" Watson said. \"I thought someone must have burnt the toast.\"\n\n\"Well obviously we got 'em to empty it first.\" Ally said dryly. \"Except the lava was far too hot to pump so the poor pricks had to use buckets.\"\n\n\"Then we flew to Mongolia.\" Beck cut in. \"Do you know the capital of Mongolia?\"\n\n\"Ulaanbaatar.\" Watson said flatly.\n\n\"It's Ulaanbaatar. We saw this amazing horse race where little tiny kids were riding their horses across the steppes. Flat strap. No helmets. By fuck they had balls, especially the litte girls cos' it's usually a girl who wins. Do you know the difference between a one-humped camel and a two-humped camel?\"\n\n\"The number of humps?\" Watson asked, as Beck carried on over the top of him.\n\n\"One's a bactrian and the other's a dromedary. Camelus bactrianus and Camelus dromedarius. We saw heaps of bactrians out on the steppes, didn't we Ally? And steppe eagles, and Mongolian ponies.\"\n\nTanya leant into Watson and whispered in his ear. \"Better get ready to grab the wheel.\"\n\n\"What for?\" Watson whispered back with a furrowed brow.\n\n\"For when she passes out. She hasn't drawn a breath since the airport!\"\n\n\"The Mongolians make this drink out of mare's milk called...\" Beck, snapping her fingers, trying to recall, \"it's called...\"\n\n\"Aireg.\" Ally prompted.\n\n\"Aireg!\" Beck nodded. \"Ally got totally munted on aireg one day, out on the steppes, at this great big wrestling competition. She reckoned the guys in their tiny little shorts looked like poofs, and she could beat 'em one-handed. She said she wanted a wrestle but they said she wasn't allowed, so Ally rocked up and challenged this little boy-\"\n\n\"He wasn't a fucken' boy!\" Ally glared, \"He had a fucken' moustache.\"\n\n\"Right.\" Beck looked at her old man grinning. \"Like three fucken' hairs. He would have been twelve, max. Anyway, Ally picked on him, and-\"\n\n\"Let me guess,\" Watson said, \"he didn't stand a chance?\"\n\n\"No. He fuckin' thrashed her.\"\n\n\"No shit!\" Ally said looking over her shoulder, \"He fuckin' picked me up and speared me into the ground, head first. Really! I used to be six foot tall and now look at me.\" She shook her head at the memory. \"Fuck me those Mongers are tough!\"\n\n\"Do you know,\" Beck said breathlessly, \"a couple of weeks ago, a sheikh tried to buy me? He thought Ally was my mum and offered her two million dollars-\" \n\nAlly turned in her seat. \"Her mum!\" she fumed, \"Can you believe it? Imagine me squeezing that little brat out of my dericate rittle frower? The cheeky fuck! If it hadn't been for that I might have considered it.\"\n\n\"I want a cut!\" Watson warned. \"If you do manage to sell her.\"\n\n\"Should have seen it,\" Beck went on, \"he had his goon squad chase us all over town, all the way to the sim, and when they tried to get in, there was this great brawl between them and security-\"",
        "\"Not helped by Flea mind you, standing in the foyer poking her tongue out.\"\n\n\"And then,\" Beck said, talking at a million miles an hour, \"and then, they all got arrested and thrown into jail. Then we flew back to Aussie. We were supposed to spend a week in Darwin but-\"\n\n\"Tell 'em about your first missed approach.\" Ally prompted.\n\nBeck rolled her head. \"Ho-lee fuck!\" she exclaimed, clutching the wheel with unfettered ardour. \"We were heading into Darwin from Singers, right, when this huge Charlie Bravo turned up over the field. It was night time. There was no one else on board so I was left-seat and there was nothing on the radar but wall-to-wall red. Anyway, there were, deep in the guts of this fuckin' thing, and I asked Ally did she want to take over. So Ally goes, she goes, she just pretends she's fast asleep, so I'm trucking down the ILS on the clocks waiting to hit the minimum. And guess what? We hit the DA and here's no fuckin' runway! Nothing but pissing-down rain in the landing lights, and all this boiling cloud. So I yell at Ally, I go, 'Ally! Ally! I can't see the fuckin' runway!' and Ally goes, she goes, 'Well that's what the missed approach is for you fuckwit!'. So I go, I go, I do the missed approach and we climb back up and I do it again.\"\n\nFace in his hands, Watson sat slowly shaking his head.\n\n\"And it was like being in an out-of-balance tumble dryer,\" Beck was saying, almost levitating with excitement, her white knuckled hands wringing the wheel, \"and there were lights of boltning everywhere, and the poor old Stream's pitch-iiing and roll-iiing, and its pissing down rain and black as fuckin' ink and fuckin' Ally is still letting me fly-\"\n\n\"We did a million of those fuckin' things in the Sim,\" Ally calmly explained, \"I figured we might as well get our money's worth. And the engine wasn't even on fire, was it Flea?\"\n\n\"No, it fuckin' wasn't. Most inconsiderate cos' that's what I'm used to. But anyway, around we came and down we went, back down the ILS, and my hand was shaking so bad I could hardly hold onto the throttles. And then we hit the DA and I was just getting ready to do it again, when suddenly... booof!... we busted out of cloud and there it was, the runway, all lit up in front of us. And we land-on, we land-on, and Ally goes, she goes, 'what's that fuckin' stink?', and it was me, it was the fear-smell, because I was sweating so hard it was like I melting and I reckon I just about shat myself.\"\n\n\"Pfft!\" Ally blew a raspberry, \"you were as cool as a cucumber. You could have threaded a needle when we shut down.\"\n\n\"And that was my first go-around in anger. So anyway, Ally and me did this great big high five and then-\"\n\nAlly sat bolt upright in her seat to peer over the dash. \"Cyclist twelve o'clock.\"\n\nBeck nodded, \"Tally.\"\n\n\"Make sure you give him plenty of room.\"\n\nBeck checked over her shoulder, then indicated and briskly switched lanes, giving the cyclist- Ally's kin- the widest possible berth. As soon as she did a black BMW charged past on the left, almost side-swiping the cyclist and forcing him into the gutter. \n\n\"Fuck me!\" Beck exclaimed, \"Did you see that?\"\n\n\"FUCK-WIIIIT!\" Ally roared, then reached across and palmed the horn. \"Come on, Flea, catch the cunt!\"\n\n\"You want me to ram the motherfucker?\"\n\nAlly rolled her eyes. \"How many times have I told you, Padawan? Go in soft so you still have room to move.\"\n\n\"Gotcha!\" Beck said and floored the Porsche, rapidly overhauling the fleeing BMW. \n\nAlly cranked her window down and leant out. \"YOU!\" she bellowed, stabbing the horn with one hand, jabbing a finger at the BMW, \"WIND YOUR FUCKING WINDOW DOWN!\"\n\nWatson sat back, looking stunned, while Beck deftly held formation, braking a little as the BMW driver slowed in surprise. Sitting beside him, Tanya had a great big smile on her face, clearly enjoying the show. Unable to pull back with the traffic behind, boxed in by the Porsche, the driver of the BMW cranked-down the black-tinted window, to reveal a well-heeled matron with a stiff bouffant, sporting lots of bling and a look of surprise.\n\n\"Are you fuckin' blind?\" Ally raged.\n\n\"What?\"\n\n\"Are you fuckin' deaf into the bargain? You nearly hit that cyclist back there!\"\n\nA reply, unintelligible.\n\n\"You fuckin' did! We fuckin' saw you!\"\n\nBeck leaned over her. \"Yeahh... fuckhead!\"\n\nTanya leant into Watson. \"Should I put the window down? You can join in.\"\n\nWatson patted her thigh. \"Thanks all the same, Tanny, I might sit this one out. Looks like Ally's got it all under control.\"\n\nThe old man caught a snippet of the target's retaliatory reply. \n\n\"You fuckin' what?\" Ally demanded, almost climbing out the window, \"Why? Are those fuckin' eyes painted on?\"\n\nA long-winded explanation of sorts, then...\n\n\"He had a red fuckin' light on his helmet and another flashing white one on the bike. And you're telling me you didn't see him?\"\n\nA reply, something defensive.\n\n\"Well you shouldn't be driving then, fuckhead.\"\n\nAnother retort, plainly indignant.\n\n\"Oh is that right? So you own this fuckin' road, is that what you're telling me?\"\n\nNothing audible, but still a clearly discernible sense of indignation.\n\n\"I'll call you what I fuckin' like you raddled old slapper. You could'a killed a guy back there. You missed him by inches!\"\n\nAngry prattle.\n\n\"Oh are you?\"\n\nMore angry prattle.\n\n\"Oh does he now?\n\n\"Oh is he? What firm does he work for? Who? No problem, I'll get my boss to have him disbarred... What? For being married to a cunt!\"\n\nA long tirade, including words like 'police', 'lawyer', 'assault', 'foul-mouthed', and 'jail'.\n\n\"Really?\" Ally responded, as Beck continued holding position in spite of her quarry's best efforts, \"Well go right ahead you shrivelled old skank, cos' I've got three fuckin' witnesses. Come on, let's pull over, right fuckin' now and wait for them.\"\n\nThere was a break in the traffic. The female driver of the black BMW floored the accelerator and Beck put the put the hammer down to follow. Looking up, Ally punched her arm and pointed. \"Speed camera!\"\n\n\"Roger that!\" Beck nodded and eased off the power, slipping under the speed limit as the BMW tore through and took the flash.\n\n\"You right there Ally?\" Watson asked, smearing the tears of laughter from his eyes.\n\nAlly wound her window up and sat back, looking serene. \"Why not?\" she asked, flipping the sunvisor down and preening her hair in the mirror.\n\nTanya looked at Watson, smiling from ear to ear. \"I can't believe how much she's mellowed. That girl of yours has been such a calming influence.\"\n\n* * *\n\nThe nose dipped as Beck stood on the brakes, then set off down the taxiway at a sedate stroll. Up in the cockpit, in the right-hand seat, she steered the jet towards the runway threshold, while Captain Ally Cat worked her way through the checklist. Reaching the item, 'Passenger Announcement', she flicked a switch on the console and there was a crunch of static over the cabin PA.\n\n\"Ladies and gentleman, good afternoon, and welcome to Bragg and Associates Gulfstream Five Fifty. I am your Captain, Alana Blake, and up here on the flight deck with me is First Officer Rebekah Watson... that's Rebekah, with a 'k', and an 'a', and an 'h'. First Officer Watson will be flying this sector to Darwin, with an estimated flight time of around four hours. We will be cruising at forty-four thousand feet on the way, so anyone who has not already done so may wish to take this once in a lifetime opportunity to join the mile-high club.\"\n\nAlly looked at Beck with a wink and the little blonde replied with a hearty thumbs-up.\n\n\"Could the following passengers please make themselves known to the crew.\" Ally continued. \"Mister Watson?\"\n\n\"Present.\"\n\n\"Miss MacDonald?\"\n\n\"Here, Dear. Is it time to open the Champagne?\"\n\n\"You two...\" Ally announced, \"this once in a lifetime deal is for a limited time only, until we reach Darwin and the other punters get on. Unless you don't mind doing it in front of some seedy old Chinese businessmen, in which case fill your boots.\"\n\nPausing, she answered a call over the radio and changed frequencies, and after calling the tower finished her spiel. \"So,\" she said, \"sit back, relax, and enjoy our friendly in-flight self-service, and the awesome flying skills of First Officer Flea. Please ensure your seat belts are fastened, and keep your hands to yourselves until the seat belt sign's turned off. Thankyou.\"\n\nDown in the back, over the wing, the three sole passengers in the big empty cabin, erupted into a round of cheering and applause. Strapped into a forward-facing, cream leather seat, Watson stared out the oval plastic window to his left, as the jet swung onto the runway and nodded to a stop. In front of him, in a doublet of rear-facing armchairs, Vicky and Tanya sat arm in arm, peering out an adjacent window. \"This is so exciting!\" Vicky said with a shiver. \"Imagine! Your own little Beck, flying us to Darwin. Isn't it amazing?\"\n\n\"I thought you'd flown with her before?\" Watson frowned, as the jet sat hissing on the threshold.\n\n\"I have,\" Vicky said breathlessly, \"but you haven't. So it's just like my first time all over again. Like losing your virginity for the fifth or sixth time.\" she winked, \"If you know what I mean.\"\n\n\"It just doesn't seem real.\" Watson said and shook his head, as if trying to dislodge an illusion.\n\nVicky hugged her boss's arm. \"It's like a rebirth. A reincarnation.\"\n\n\"Yup!\" Tanya nodded, \"Just one of many.\"\n\nThe engines spooled up to a howl. Up in the cockpit, Beck advanced the power levers all the way to the stops, standing on the brakes as the thrust came in. Ally placed a hand at the base of the throttles in preparation for the onset of acceleration. With a final scan of the engine readouts, Beck stepped off the brakes, wiggling her bottom in excitement as the aircraft rolled forward. The roll turned into a rumble, then a run, then a sprint, and then an irresistible surge. Ally watched the numbers unfold. \"Takeoff power...\"\n\nWatson watched in wonder as the runway tore past in a blur. Up in the cockpit, Ally called \"Vee-one.\" and Beck put both hands on the yoke.\n\n\"Rotate.\"\n\nBeck eased back and the nose came up, the long, slender, swept-back wings bending upwards ever so slightly as they began to feel the lift. An in the blink of an eye they were airborne, climbing out at thirty degrees as the wheels came up and the landing-gear doors slammed shut with a thump. The roar of the slipstream turned to a hush as the aircraft cleaned up, climbing out at two hundred knots, bound for the heavens. Watson tore his eyes away from the window and shook his head. \"Did Beck just do that?\"\n\nThe two women nodded.\n\n\"My Beck?\"\n\n\"The one and only.\" Vicky beamed.\n\n\"If I hadn't just seen it with my own eyes... it just doesn't seem real.\"\n\n\"It's real alright,\" Vicky beamed, \"that licence of hers is no forgery. Unlike some other documents.\"\n\n\"Well,\" Tanya smiled sweetly, \"here we go. You crazy kids. Ready for an adventure?\"\n\nVicky nodded. \"I was born ready!\" she said with a shiver.\n\nWatson dipped his head in a nod of agreement. \"Just took a while to realise, didn't it?\"\n\nVicky looked at him, her green eyes sparkling, a big white smile from ear to ear. \"And a bottle of Veuve. And a midnight visit.\"\n\n\"Come on now, don't blame me.\"\n\n\"Do you think I should sue, Tan? I mean fat chance of me ever getting into heaven now.\"\n\n\"Imagine the transcript!\" Tanya said and rolled her eyes. \"You could publish the bloody thing as a novel.\"\n\nVicky snapped her fingers. \"That's a brilliant idea.\"\n\n\"Suing Damo?\"\n\n\"Write our story. What do you reckon, Damon? Why don't you write a book about our adventures one day?\"\n\nWatson stared out the window in silence, thinking. \"You know,\" he said, as they punched through a layer of cloud, \"I might just do that. How does this sound...\n\n\"All alone on an empty sea, the forty five-foot sloop Aurora, carved her way into a brand new day, her bow rising and falling over the long, lazy swell, a ten-knot breeze filling the sails..."
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "fisting",
        "group sex",
        "jailbait",
        "lesbian",
        "old man young girl",
        "older woman young girl",
        "orgy",
        "taboo",
        "teen sex"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-wings-of-the-goddess-pt-06"
}