{
    "title": "Marriage of the Fae Ch. 02",
    "pages": [
        "A/N: Chapter 2 is all yours. I apologize profusely for the, uh, half-year delay. Between finishing out my first year of college and mad, mad writer's block, I didn't have the chance to write anything I thought was worthy of sharing. I hope you understand. \n\nThank you for all the comments, even the ones encouraging Rhys' untimely death! He is a nasty one, isn't he? ;) \n\nAgain, this is a work of fiction. I do not condone any form of rape, sexual assault, or otherwise nonconsensual sexual activity. All characters are 18 years of age or older. \n\nThanks for enduring the wait. Hope you enjoy! \n\n<ul> <li> Alex (HibouBleuMD) \n\n</li> </ul>\n\nChapter 2 \n\nRhys \n\nSince my childhood I have been quite a heavy sleeper, and I have considered this a weakness since I was old enough to consider anything as such. My nurses would play frivolous little games with me to wake me in the mornings, tickling my face or shaking my bassinet in order to see who would be able to wake me. Even as a toddler these games irked me, but never made me any the wiser regarding waking on command. \n\nI suppose this is why I did not notice the human girl wriggle from my arms sometime in the night, and why I have now woken to her brandishing a candelabrum in my general direction. \n\nI had the presence of mind evening last to lock the door behind us when I entered the chamber with little Noelle in tow, and it seems she has tried and failed to flee the room. I treat myself to a languid stretch, watching her small hands shake around the base of the candlestick. I'm sure it was not her intent to appear comical, but I have to hold back a laugh as I sit up. Her weapon of choice, along with the mussed state of her dark hair and eyes still ever so hazed from sleep, paint quite the vision. If I were so inclined, I could describe to you the way her breasts fill out the torn white tunic wrapped about her small frame. \n\n\"Let me out of this room.\" The girl's voice is sharp, hardly wavering; perhaps to lesser ears she would sound valiant. But I can hear the fearful edge in her tone. \n\n\"The door was locked only as a precaution. Put down the candlestick and come over here.\" I glance over to the nightstand, upon which a gilded sheet of paper sits, marked with my name and the date. Perhaps from Jerome, or Siobhan, neither of whom need a key in order to access the other side of a locked door. \n\nThe girl shakes her head. \"I'm not coming near you. Let me out, Rhys.\" Ah, my name again. If she were a servant, I could have her punished for such an indiscretion. As a human, and my wife, she narrowly escapes the possibility. \n\nI give a sigh; this is hardly the battle I want to fight. \"Why are you holding that, human?\" \n\n\"I don't know what you're going to try. I thought it would be better to be prepared.\" \n\nShe's too much. I grin shamelessly. \"So you've decided the best course of action to be attempting assassination with a torch?\" \n\nShe seems genuinely surprised. \"Not assassination...just self-defense.\" \n\n\"From your own husband?\" I tilt my head in concern. \n\nThis stirs a reaction; I watch her bristle. \"Sad, isn't it? I shouldn't have to feel the need to defend myself from my own husband!\" The audacious little thing lifts her chin, thinking she's had the final word. \n\n\"No, you shouldn't,\" I say, \"because you should be respecting and obeying your husband, little human.\" I move toward her quickly; she cringes. \"Especially being that your husband outranks you in all conceivable ways.\" I'm faster than she is, my hand shooting out to capture her chin while she glares darkly. She's a trembling bird who thinks herself to be a bear. \"I'm not going to reiterate the necessity dictated by the Elixir,\" I continue. In a blink's time she will be reminded she is made of quivering feathers, not bristling fur. \"I will, however, remind you of the lovely moan you gave me last night, as you climaxed on your very own husband's cock.\" \n\nShe all but blanches. Still grasping the candelabrum, yet shaking harder now, as her face contorts from an expression of horror to a look of rage. \"You forced me, you bastard! What happened to me last night was a result of goddamn biology, not because I liked it!\" \n\nIt's less than a moment before she is lashing out, swinging the shimmering holder at my face. Letting out a shout of frustration as I grasp her arm and pull her onto the bed. I press into the points on either side of her wrist and she drops the torch; it falls heavily to the floor. \n\n\"Biology has nothing to do with the effects of the Elixir, human.\" Even a Fae slave would know not to speak of the Elixir's bond in such simplistic terms. Of course, a human would have no idea. \n\nIt's too easy to flip the delicate creature onto her back across the strewn covers, where she lands with a grunt. Noelle immediately begins to struggle, lifting her hands to my face, digging her blunt fingernails into my skin...well, attempting to. Again, she is unable to make much progress. \n\n\"You are going to make your fingernails bleed,\" I tell her. \n\n\"It'll be worth it!\" she shouts. The girl gives a groan as I sweep both of her wrists into the grasp of one of my hands and hold them against her heaving chest, now laid nearly bare after her struggles opened the tunic. I glance down to see one pearly nipple peeking from behind the white fabric, erect atop a cream-colored breast worth just more than a handful. \n\nI will have to investigate this further. \n\nFor now, I restrain her as she throws curses, jerking her hands against my grasp to no avail. There is that pleasant feeling of relief again, as our close bodies slacken the Elixir's pull. Reaching across her body, I pluck the gilded paper from the nightstand. \n\n\"What is that?\" she demands. \n\nI keep my other hand wrapped lazily about her wrists. \"A letter from...\" I open the note to see Jerome's spidery signature lining the bottom of the page, \"...my advisor.\" Another name catches my eye beside Jerome's, and I am surprised to see Aodh's title. \"As well as the high priest.\" \n\nThe girl stills, obviously curious. Perhaps she thinks they've written to help her out of her predicament. Little does she know they are just as bound by the laws of the Elixir as the next man, and regardless would be loath to stay the wishes of a prince. \n\nI look down at the human beneath me, finding her scowling back. \"Will you keep yourself from trying to damage my countenance for the moment it will take me to read this?\" I ask. \n\n\"If you can keep yourself from assaulting me,\" she replies. \n\nI smile. \"If you recall, little minx, it was you who first attempted to assault me.\" \n\nThe girl snorts but gives no further response, but squirms out from under me when I let go her wrists. She sits up against the headboard, wrapping the tunic back around her body to conceal those soft breasts. I'm distracted again, recalling the feel of her flesh in my hands. She sits sullenly beside me as I read the note to myself. \n\nPrince Rhys, \n\nWe respectfully request that you and your bride join us in the palace parliamentary quarters at the twelfth hour. With the goings on of yesterday, the traditional post ceremony proceedings were not performed. \n\nYours, \n\nJerome, on behalf of Aodh the High Priest and the Grass Clan Council. \n\nThe post ceremony proceedings should be a joyous time. The bride and groom stepping out as equals, as those who have joined together two clans...not the groom nannying a whiny human. How did this become my reality? \n\nIt's necessary, however, if I wish to know whether this marriage will harm the standing of my clan. And of course, the Council has yet to meet my new bride. \n\nThe girl is watching me, her gaze what I can only describe as intense. \"What does it say?\" she questions. \n\nI stand and begin to dress. \"We are going to the Council, for meetings and documentation necessary after a marriage bond.\" I cross to the heavy oak door and reverse the locking spell, swinging it open. \"Come, human.\" \n\nShe balks. \"What?\" I ask. \n\n\"I have to go to the bathroom.\" \n\nAnother human weakness. This one is unavoidable, I suppose. Fortunately, this particular chamber is equipped with a lavatory for any non-Fae guests who may be so inclined to use it. \n\nI sigh and point across the room. \"Go through that door. Be quick about it.\" \n\nShe blushes and gives a curt nod before scrambling off of the bed and making her way to the door. I suppose I ought to call for a new dress or something; the tunic she's wearing is practically translucent. Pleasantly so, as well, I have to admit.  \n\n************** \n\nNoelle \n\nI make sure to slam the door as hard as I feel is worth risking once I enter the bathroom. The slamming seems to resonate within the thread, and I wince sharply. Be quick about it, he said, like he's trying to exercise just as much control over my bodily functions and private time as he seems to in everything else. He's acting like I'm an animal again, a flighty little dog that he has to hurry along on a walk and pick up after. Fuck him. Fuck this. \n\nSomewhere between being assaulted this morning and now I've begun to accept the possibility that this is not, in fact, a coma dream. No, I was accepting it even before then, I guess. And even if it is a dream, what am I going to do about it? What am I supposed to do with being thrown into a freaky dreamworld where humans are a minority, where fairy princes are angry, spoiled sex offenders and nobody does a thing about it? \n\nNo, don't think about that. I'm not going to think about what he did, not right now, I can't afford to. I can fight, that's what I can do. \n\nApparently I've spent too long thinking, because there's a harsh knock on the door right as I'm making my way to the ornate toilet. He doesn't say anything, just lets that angry knock speak for him. What if I didn't say anything back? \n\nAnother knock, that's what. \"I'll be out in a minute,\" I shout. Apparently fairy princes don't understand how long it takes to pee. \n\nI finish up and wash my hands, splashing my face with the cool, strangely sweet water that flows from a polished wooden tap over a wide ivory basin. It would be nice to admire if I weren't short on time. I exit the bathroom to find Rhys leaning against the doorframe of the bedroom. A vaguely metallic glint catches my eye and I look to see a simple gold dress lying across the bed. \n\n\"Put it on.\" Rhys gestures to the dress as if he's bored. \"The council won't be amused if you arrive at the proceedings with your business in theirs.\" \n\nI almost smile, but it's easy to catch myself. Crossing to the bed, I scoop up the dress, finding the material is more robust than it looks. If I didn't know better, I'd think it would flutter apart in my hands in a million gold flecks. I turn to Rhys and push my luck. \"Could I have some privacy?\" \n\n\"Put on the dress, little human. It's not as if I haven't already been treated to all you have to offer.\" As if I had actually offered it in the first place. \n\nI narrow my eyes and start back toward the bathroom with the dress. \"Is this truly the battle you want to fight, Noelle?\" Rhys asks. I can feel him following me, the constant tugging on the thread loosening as he grows closer. \"You're not going to hide from me.\" \n\nI hold back a shriek as his hand closes around my wrist and pulls me back from the door. It would feel almost gentle if I didn't know better. \"Why are you so set on watching me?\" I snap. \n\nI'm up against his chest now, wriggling in his hold, the dress crushed in my arms. \"I'm set on you submitting your body to me, as the Elixir dictates,\" he murmurs. \"I am your husband. Why should you hide yourself from me?\" \n\n\"Too many reasons to list,\" I grunt, trying to duck out from under his arms. He snorts and keeps his grasp tight. It's probably effortless for him. \n\n\"You'll grow used to it. You seemed to enjoy, even, having your body at my mercy last night.\" Fucking victim-blaming piece of shit. \n\n\"That was disgusting,\" I say. He simply shakes his head and walks me back toward the middle of the room. I struggle while he peels the tunic off of me, exposing everything to himself once again. \"Don't touch me\u2014don't\u2014\" \n\n\"I'm not going to take you right now, human, we haven't the time.\" Even so, his hand curls around me to cup my breast, using slight pressure to pull me tighter against him. His thick thumb flicks over my nipple and I squeak softly in protest, pulling my own arms up to shield myself, bunching the dress up against my chest. \n\nHe chuckles, wrenches the dress from my grasp, spins me around to face him. I don't have time to struggle before he's pulled the dress over my head. It flutters around my hips and down my legs, the ends of the fabric pooling at my feet. It bunches up around my breasts and I swear I see Rhys smirk as his large hands palm the fabric and tug it down to fit around my torso. It's a decent fit, the tawny fabric hugging my hips and nipping in at the slight curve of my waist. The bodice cups my breasts, not lewdly, but conspicuously enough that it seems as if they're being offered up. \n\nThis obviously does not escape Rhys' notice; his gaze drops down to my chest. With his height, his looking down on me again makes me feel like a little girl. I'm sure the objects of his interest are now blushing pink in my self-consciousness. \n\n\"I must say, this is a fine effect.\" Rhys takes a step back as if to appraise me. \"I was wary when they brought in a courtier's dress, but it almost seems to suit you.\" \n\nI scowl. He laughs, \"And there you go making faces again, ruining the result.\" He reaches out and places his hands on my waist. I cringe, but I can't deny the slight slackening of the thread feels nice. Is this what I have to look forward to for the rest of my life, constant mild discomfort unless the fairy Prince of Darkness has his hands on me? \n\nRhys' hands press closer, rubbing at the fabric. A twitch of his fingers and I'm pulled forward. \"Whoa!\" He reaches around me so that I'm tucked into his broad chest, and I shove irritably at him. \n\n\"Calm down, little one.\" His fingers are at the middle of my back, and I realize he's securing a button. \"I wouldn't think you would want the back of your dress hanging open.\" \n\n\"No...\" I mutter in agreement. \"You could have said something, though.\" \n\n\"I thought we could work on building some trust.\" \n\nI make a face into his chest, where he can't see. \n\n************** \n\nSiobhan \n\nThe council meeting will be a long one. If one would call it a meeting at all\u2014tradition dictates that the bride and groom of the Elixir must come before the council in a short ceremony for the purpose of official recognition, but I can't help but predict that the \"recognition\" will be an hour at least of poorly concealed jabs at Rhys' unfortunate human bride. \n\nThe girl doesn't deserve the position she is in, not in the least. She's been thrust into marriage to this man, who, although I consider him a friend, is not one with whom many Fae would volunteer to share a marriage bed. And Noelle, the sweet thing, is not Fae at all. Sweet as she may be, she lacks the strength to endure the prince's arrogance. \n\nI've elected to attend the council meeting to serve as an advocate of sorts, in the apparent absence of any other allies to this girl's favor. I think I am responsible for her, in a fashion, as the woman who would have been in her place had events not unfolded the way they did. I cannot say this to the council, however, as any public mention of my intentions to wed Rhys would be considered an affront to the decision of the Elixir. The only one who knows of my thoughts is my current bed companion, who shifts restlessly as I move to leave for the council room. \n\nAibhlinn rolls over, blue eyes blinking sleepily at me. \"Are you off to the council?\" She pushes back a blonde curl from where it rests over her forehead. She's lovely, especially tousled like this from a sleepless night. And no one must know I think so. \n\nI lean in, brushing a kiss over her pink mouth. \"I'll be back by midafternoon. You ought to sleep more, love.\" Her arms, just thinner than mine, come up to wind around my neck. \n\n\"I wish you would sleep along with me.\" She nips at my ear and her voice takes on a girlish lilt, tempting me back into her embrace. It's almost cruel; she knows I would rather be anywhere but at the council, in her arms especially, and most of all between her legs. \n\nSmirking, I reach down to pinch at her nipple, a firm pink bud raised high on her small breast. She yelps and squeezes my wrist. \"Alright, alright, Bhan, go see about the council, ride in on your white steed for that human girl, but then come right back to me.\" \n\n\"Always.\" \n\nAibhlinn watches lazily from my bed as I don a green gown with a design as simple as I dare wear in front of the council. It's lovely, though I'd prefer breeches and a blouse, especially since I intend to take Aibhlinn riding later this day and sitting astride is eons more comfortable. \n\nAnother kiss to the beautiful blonde between my sheets and I leave my bedroom, which consists of a few chambers I occupy within the royals' quarters of the Opal clan. The Grass clan council chambers where the meeting will take place are but several strides away from the edge of Opal's borders. The two clans have always been close, both in geography and relations, since long before Rhys or I came into the world; our marriage was meant to be the final formality in sealing the bond between the two. The ability of Fae to move freely between the borders, as I am today, is a rare thing among the hundreds of clans in our world, but the trust between our respective Opal and Grass high councils runs deep. I'm especially grateful for this now. \n\nMy seat in the Grass clan council room is a few away from those in which I find Rhys and Noelle. The prince sits stiffly in his seat, while the girl seems to be attempting to make herself as inconspicuous as possible beside him. A high feat, considering the metallic golden dress she's been put in, which incidentally is spectacularly becoming on her slim frame. I find myself wishing she had reason to feel happy in it. \n\nI take my seat. Aodh, the high priest of Rhys' clan, sits across the oblong room from me, his white hands worrying at the silver beard draping from his chin. The sub-priests and council members sit on either side of him, murmuring loudly, and it's not difficult to follow their gaze. They stare at the small woman beside Rhys, who seems all too aware of their observation of her. \n\nThe sun tilts toward the center of the sky, indicating the twelfth hour of the day, and the council room falls silent as Aodh begins on cue. \n\n\"Esteemed members and priests of the council, Prince Rhys Stiof\u00e1n of the Grass Clan, Noelle his chosen wife, Princess Siobhan Concobhar of the Opal Clan, honored guests of clans Opal and Grass; as high priest of the Grass Clan of the Fae, I welcome you.\" Aodh pauses and there is a murmur of assent amongst the crowd. He continues, \"Today we assemble to acknowledge the union by the power of the Elixir of a man and a woman.\" Any other man may have taken the opportunity for subtle commentary on the glaring humanity of Rhys' bride, but Aodh remains professionally impassive, a talent garnered after several centuries of life as a priest of the Elixir. \n\nAll heads turn to a single point in the room, zeroing in on the blushing human. \"Please stand in recognition of their union,\" Aodh continues, rising from his seat. I stand with him, and watch around the room. A few of the council members stand immediately. The others present from my own clan smirk conspicuously as they wait several long blinks before rising. Others in the council do the same. Noelle stares straight ahead, her face a mask of barely concealed humiliation. She picked up easily on the slight to her own honor, but probably does not realize the gravity of what the late risers have done: by deliberately standing late, they have acquiesced to insult the Elixir as well, all in the name of their prejudice against this helpless human girl. ",
        "I glance at Rhys. He looks calm, collected, but I know him well enough to recognize that he is well beyond livid. \n\nThis council meeting will be a long one. \n\n************** \n\nNoelle \n\nI leave the council room just wanting to sleep. In the span of what I can only assume was an hour or so worth of the council meeting, I've gone from scared to embarrassed to simply exhausted. Lying down on the stone floor below me and sinking into oblivion seems to be my best option, but Rhys' hand is pressing firmly at my back and I couldn't do anything but walk straight forward if I tried. \n\nSo I walk straight forward. Maybe once we've returned to that room we were in before, he'll let me rest. Maybe that's too much to ask for. \n\nWe reach the opulent stone building from which we came this morning, where I remember the bedroom we shared to be, but instead of walking inside Rhys passes it by, still steering me with his hand on the small of my back. I look over my shoulder at the building as we leave it behind. \"Where are we going?\" \n\n\"To the royals' quarters.\" \n\n\"Oh.\" Where he belongs, I guess. I can't help but imagine that if it weren't for the taut invisible thread between us, he would not give a second thought to leaving me to my own devices. I definitely wouldn't be allowed in the royals' quarters, at least judging by Rhys' handling of me so far. He doesn't think of me as being worthy of that treatment. Thinking of it this way, I can't tell if it's fortunate for me or not that the Elixir's thread keeps us from distancing ourselves from one another. \n\nIf the last building was opulent, the new quarters that Rhys steers me toward are lavish in the extreme. A sprawling castle built of shimmering stone, the structure sits on a green lawn of lush trimmed grass that surrounds a twinkling ivory fountain. Creamy pillars rise at the front of the castle, beneath a grand balcony that looks to be made of impossibly shiny marble. It would be gorgeous if it weren't all so intimidating. \n\nRhys stops before the dark gates that surround the place, keeping me close to him. Barely a moment passes before the gate seems to register his presence and swings inward to open for him. Just for him; even though I'm walking in beside him I still shoulder the sinking feeling of being a particularly uninvited guest, a nuisance. \n\nIt occurs to me as we approach the marble stairs that lead up between the widely spaced pillars that I have yet to meet either of Rhys' parents. Not that I imagine they'd be very interested in meeting me specifically, but it's strange that I haven't even seen them, or heard of them mentioned in passing. \n\n\"Do your parents live here too?\" It's only after the words have left my mouth that I seem to remember who I'm speaking to. Why did I think it was even remotely wise to try to make personal conversation? Stupid. Very bad idea. Nice going, fucking Elle Woods. \n\nBut Rhys doesn't immediately tense up, as I expected him to. Instead, he remains passive. \"No. My father is dead, my mother travels amongst the clans as a diplomat. I have not seen either in a century. My mother has given her blessing to me as her successor; she'll most likely pass on soon if she has not already.\" \n\nCasually speaking of his mother's death, why am I not surprised? Good god, do I want to lie down. I make a small sound of acknowledgment. \n\n\"Why do you ask, Noelle?\" \n\nI'm surprised; the last thing I expected was for him to continue to engage in the conversation. \"I was just curious. You don't miss them?\" \n\n\"Why? I barely knew them. My father was never present in my life, and as soon as he passed, my mother disappeared to engage in diplomacy, leaving her blessing with the council. It's why I was to take a bride.\" \n\n\"Will there be tension between your clan and Siobhan's now that you've married someone you weren't supposed to?\" \n\n\"Princess Siobhan,\" he corrects firmly. My face reddens, probably to the notice of the tall man standing at the threshold of the royals' quarters, bowing deeply before holding open the heavy wooden doors. \"And there cannot be tension. The Elixir chose the one who was meant to be my bride. Questioning the marriage any further than those fools already have with their behavior at the council would be to question the Elixir's very being.\" \n\n\"I guess that's a relief.\" \n\nHe leads me through the doors of the castle into an ornate foyer. \"It is a reality.\" \n\nI don't say anything more. Rhys silently leads me up the grand staircase at the center of the foyer. There are no other people around other than the doorman, despite the myriad rooms leading off of the main hallway upstairs. Rhys stops at a pair of double doors at the end of the hall and places one large hand on the doorknob. The door seems to give as if a lock has been opened, and he pulls me inside. \"Here is where we will sleep.\" \n\nThe room is significantly larger than the one we slept in the first night. It is still decorated with muted whites and tans, but the walls seem to hold a shimmer that wasn't there in the other room. The floor is pale pine boards, neatly laid but left with rough knots and edges to effect a rustic sort of feel. In the center of the room is a massive white bed. \n\nRhys steps further into the room and turns to me. \"As our initial marriage night was somewhat...harried, I thought we could take another.\" His voice is strangely gentle. \"I hope you'll perhaps be more willing to come into my arms tonight.\" \n\nOh. \"I don't think so.\" \n\nHe nods. \"Fair enough, I suppose. Though perhaps you'll soon remember the pleasure...no, the relief we both felt at our coupling?\" \n\nI've been trying my very hardest not to, actually. I just shake my head solemnly. Rhys nods and steps back toward me. \"I'll have to help you.\" \n\nI can't hold back my anger at that. \"You sound like one of those fucking tacky romance novel seduction masters. Stop it.\" \n\nRhys looks genuinely confused. \"What?\" Another step toward me, until moving away from him puts my back against the door. A single yank of the knob finds it locked. I press back into the fine white wood, my arms coming up in a natural defensive position over my chest. It doesn't take much for him to pull my arms away from my body, a move that infuriates me. As if he owns my ability to defend myself. \"Let go of me.\" His hands are around my wrists. \n\nRhys regards me quietly with his violet eyes. \"Will you come to bed, Noelle?\" \n\n\"No. I want to sleep somewhere else. I'll sleep on the floor.\" I'm fully aware I sound like an angry child, and I don't care. At least I don't sound like a rapist. \n\n\"You may sleep where you like, but first we are going to do what married couples do, and make love.\" \n\n\"Make love? That's a sick joke, you bastard.\" I yank against his hold and only succeed in losing my balance and falling hard against his chest. He silently pulls me close, his hands once again at the buttons securing my dress, this time to loosen them. He keeps me tight against his body while he undoes the buttons down my back, ignoring my squirming. A gentle brush of his hands over my back and shoulders, and the dress falls to the floor with a soft rustle. It sounds like it's mocking me, my last line of defense in a heap at my feet. \n\nI move to cover myself, but again his hands are faster. Rhys takes my wrists and drags me to the bed, pulling my arms out in front of me until I'm forced to bend over the side of the thick mattress, my chest pressed to the quilt, my ass on display. He lets go my wrists and I immediately stand. \n\n\"Did I tell you that you could do that, little one?\" Rhys is behind me, his long, firm body pressing into every inch of mine. \n\n\"You didn't tell me I couldn't,\" I mutter. \n\nHe lets out a sound that I can only describe as a growl before bending at the waist, forcing me to bend with him, until I'm once again face down over the bed. I feel his clothes rustle over me as he seems to slide down my back, keeping his hands at my waist to hold me in place. I twist and find myself unable to move my body anywhere near where he holds me. Warm breath brushes at the skin of my bottom, as his hands move down to hold firmly at my hips. \n\nI twist again, not enjoying the thought of him staring at my ass. \"Stop...\" \n\n\"No.\" When he speaks, his breath lands between my thighs. I kick back and my foot meets his solid frame; he gives an exasperated sigh. I look back in time to see him bring his hand down onto one cheek of my bottom, hard enough to release a sharp crack. I shriek. \"Did you just spank me? You fucking\u2014\" \n\nAnother crack, this time on the other cheek. I let out another scream, as much out of fury as out of pain. \"Do you like being hit, Noelle?\" he asks firmly. \n\n\"Go to hell!\" \n\nAnother smack, this one square in the center of my bottom. I yell, trying to make it as loud and angry as possible, hoping his ears are more sensitive than the rest of his freakishly strong body. \"I asked, do you like being hit, Noelle?\" \n\n\"No! What do you think?!\" I twist madly, the pain setting in more heartily now, my backside stinging. \n\n\"Then why would you try to kick me?\" Rhys strokes his palm over my bottom, and I hate that it yields a soothing sensation from the pain. My body relaxes against my will as the relief weakens me. \n\n\"Self-defense...\" \n\nHe lightly pinches my reddened cheek and I whimper. \"I thought we talked about this earlier. You should not feel the need to defend yourself from your husband.\" Rhys palms the smarting skin where he pinched, once again soothing the pain. \"Would you believe that I was trying to make you feel good, when you decided to lash out at me?\" \n\nIt's too much. Earth logic obviously has no bearing on this lunatic; I can't reason with him. \"I hate you.\" \n\n\"You won't always.\" \n\n\"I will. I promise you that, I will hate you for as long as I live.\" \n\nI can almost hear his goddamn smirk. I have less than a moment to process it before his warm breath is back between my thighs, hitting the back of each right where they meet my pelvis. Any closer and... \n\n\"Stay still for me, little one.\" I feel his forehead press against my bottom as he delves between my legs, using my helpless position bent over the bed to access my most intimate places. His fingers push between my legs and part the folds of my pussy, opening me to him before pushing his tongue in between. \n\nAnd there it is again, that slackening of the thread, the pleasure mixed with relief so intense I forget for a moment what I'm fighting for. \n\n************** \n\nRhys \n\nShe's delightfully sweet, my little human. I was not sure what to expect when I decided to torment her with my mouth before taking her, but I did not consider the possibility that this would be just as pleasurable for me as for her, with or without the relief the slackening of the thread brings upon my penetration of her. \n\nPushing my tongue inside her I can tell that the relief alone has flooded her with juices, guiding my entry. I smile, letting my tongue curl up naturally within her tiny opening. \n\nThe girl lets out a moan. \"No-o-oooh...\" The lustful sound is all it takes for me to press my lips to her soft folds and feast, pumping my tongue into her twice more before exploring her womanhood to find the swollen bud of her clitoris at the nape of her thighs. I wrap my lips around it and the little minx arches off the bed, spitting out a list of epithets creative enough to put a sailor to shame. Most of them are directed at me, and I suppose I should scold her for it, but her reaction is so deliciously raw I can't help but feel a thrill of pleasure at it. Obviously I am doing something right. \n\nThe next several moments are spent making Noelle wriggle under my tongue, my hands coming down to spread her thighs wider. I'm no sadist, but I must admit the excitement that rushes through me as she cringes away momentarily from my hands, as if expecting another smack to her round pink bottom. Beautiful. \n\nAnother moan escapes those lips as I plunge my tongue back inside her, again almost fully relieving the tugging on the thread between us. I work the muscle against her inner walls, exploring her insides, making her writhe, even only moments after she vowed so venomously to hate me. I truly can't blame her; the pleasure we both feel in this moment is enough to make me forget myself as well. \n\nI finally withdraw from her, savoring the small whine she gives as I pull away. My hands on her narrow hips, I flip her to her back, and am met with her flushed face and glazed chocolate eyes, the loose chestnut waves of her hair tumbling about her shoulders and face. \n\nI can't yet admit to myself that my little human bride is an absolute vision before my eyes. \n\nShe scowls weakly at me as I lean over her, sliding my hands under her shoulders to pull her to me. Her knees are spread on either side of my hips as she sits up in front of me on our marriage bed. \n\n************** \n\nNoelle \n\nHe turns me over to face him and I'm too weak to do anything but glare up at him, though I'm sure the look comes off as more of a blank stare. Through my blurred vision I can tell he's smiling down at me...almost...endearingly? As if he sees something he admires? He bends down and pulls me up to sit in front of him, supporting me gently behind my shoulders as I lean heavily against him. My head lolls into his chest while I catch my breath. There's no helping it. \n\n\"Did that feel good, Noelle?\" Rhys' breath tickles my ear. \n\nYes. Yes, fuck, yes. \"No.\" \n\n\"You acted as if it did. Don't be ashamed, I enjoyed it immensely.\" He chuckles against my shoulder, like we're sharing a private joke. \"You taste very nice,\" he murmurs. Heat flares in my chest. I lift my arms to push away from him, but his gentle hold is enough to keep me right where he wants me. \"We're not finished, little one. You know our bond runs deeper than just that.\" \n\nI let out a sound of indignation, staring into his chest. He keeps one arm around me as the other goes to his belt, nimble fingers undoing the buckle in a single movement and finally letting his pants slide to the floor. I look before I can help myself and am met with a pair of powerful thighs, coated in a dusting of dark hair. Above that, a pair of dark blue linen briefs. \n\nWith the same thick arm still looped around my shoulders he pulls down his briefs, and I'm met with my first head-on view of his penis. The last time, with my eyes averted, I had only muddled guesswork to determine the size and shape of the thing he pushed into my virgin body. This time, though, I find myself staring stupidly at it. His hard length curves up against his flat belly, almost reaching his navel, the thick head a deep purple. It doesn't take long for him to catch me staring. \n\n\"Made a new friend, little one?\" \n\nI pull my eyes away. \"That's disgusting,\" I choke. \n\n\"You didn't seem to think so the last time you met,\" Rhys drawls. His hand encircles the base of his thick manhood, flexing his fingers to squeeze at it lewdly. I make a move to scoot away, but his arm is still around my back, preventing my escape. Attempting to duck under it only seems to amuse him. \"What are you doing? Haven't we talked about this, time and time again? You shouldn't be ashamed to submit your body to me, little one.\" \n\nHis hand comes around to squeeze my arm, pulling me closer to him, until his stiff cock hovers between my thighs. Drawing his other hand away from himself, he presses two fingers to my sore clitoris. I yelp. \n\nHis middle and forefinger begin to circle my clit, teasingly. I squirm. One finger dips lower, sliding against my entrance, and I can't help but give a whimper, pushing back on his arm again. \"Rhys, please...\" My voice becomes a whine. \"Don't...\" \n\nHe simply shakes his head as he looms above me, leaning in toward my chest while his fingers lazily stroke between my legs. I squeak softly when his soft lips find my breast, latching on to the nipple and suckling gently. Twisting against him arches my back, until I'm unintentionally pressing my chest toward him. \n\nHis finger slips inside me, and suddenly I'm not so unintentionally pressing toward him. Rhys hooks his long finger into me, finding that rough patch inside, rubbing against it, smiling against my shoulder. \"How's that, sweetheart?\" \n\nI can only let out a long hiss between my teeth. Rhys nips at my ear, his fingers still working diligently. My hips buck toward him and I let out another little noise, right as he bends down again to take my other nipple in his mouth. I jolt, his fingers practically pulling me forward against him as he works them inside me. \n\nAnd then they're gone. The thread tugs, tightening ever so slightly between us. Rhys groans; I take some satisfaction in knowing he's uncomfortable too. Less satisfaction in knowing what he's going to do about it. His hands are at my hips now, pulling me forward until my bottom is at the edge of the bed, and I can feel my wetness on his fingers as they press against my waist. \n\n\"I'm not going to let you be passive in this like last time, little one,\" he whispers. What does that mean? Steadying me at the edge of the mattress, Rhys takes my hand in his and brings it to the large piece of flesh erect between his legs. I whimper and pull back, shaking my head. \"No, no, I'm not...\" He ignores me and presses on, easily keeping my hand in his in order to wrap them both around his penis. It's silky and hot, and he flexes it in my hand, leaning in and biting my lip when I grimace. \n\n\"This is all yours, Noelle,\" he murmurs. \"Remember how you took it last time? Every last bit of it inside you.\" His voice is hot and wet against my mouth as he speaks, his hand moving with mine to stroke himself. I shake my head quickly back and forth, denying what we both know to be true. \n\n\"Tonight you're going to help me inside you, my little wife.\" Rhys leans in so he's speaking into my ear, his remaining hand coming back up to cup my breast, molding it gently. I'm shivering now, trying to close my legs, but his hips are between my knees, blocking me, his large body preventing escape in every way. He guides my hand up and down his shaft, letting me feel him pulse, giving a low groan as he pushes my palm over the slick head. \"You feel wonderful, little one, and I'm not even inside you yet.\" \n\nRhys pushes my hand lower, until his cock is level with my entrance, rubbing the head against my folds as the thread between us thrums irritably. He pushes in ever so slightly and there's a spark of that wonderful relief, and I almost gasp, and then he pulls back, guiding my hand around his cock to pull away from myself. I hold back my sound of frustration. He repeats the motion, pushing his cock's head against my entrance, letting the thread vibrate with its own little dance of anticipation. He lets out a soft moan, but forces me to pull away again. \n\nI let out a noise of exasperation. \"Stop it!\" \n\n\"Stop what, sweetness? Stop teasing you? Would you rather I plunge in to the hilt all at once?\" \n\nI groan in frustration, using every minutia of willpower I have left to keep myself from pushing my hips toward him just to relieve the itching thrum of the thread between us. It's so close... \n\nI give a yell as Rhys dips his cock against my entrance again, letting the head nearly push in before tightening his grip on my hand and pulling away. I can feel his cock pulsing in my hold, almost in time with the vibration of the thread. It's fluttering in my chest, tugging at my ribcage. I finally let out a whine. \n\n\"Do you want something, Noelle?\" \n\n\"Noooo...\" I don't even sound convincing to myself. \n\nRhys leans in and presses his lips tenderly to mine, slipping his tongue gently over my mouth, pushing his own hips forward to press his cock against me again. His hand around mine grinds over my clit as his cock pushes at my pussy and it's all it takes for me to come apart. ",
        "Rhys feels it the moment I do, I know he does, because he lets out a low snarl and then he's pushing inside me, both arms coming out to tighten around my shoulders and hold me tightly to him as he bottoms out. The thread feels as though it's a rubber band given miles of slack, all at once, after pulling at me for so long, and I let out a long mewl of pleasure against his mouth, biting down hard on his bottom lip. His arms tighten around me once again, crushing me upright against his body, and he leans over me just enough to give him leverage to fuck deeply into me, his mouth never leaving my own. I can't help the tears that come, welling up right behind my eyes and spilling over, and I'm letting out hoarse, helpless sobs as he grunts and pumps into me like an animal. \n\n\"I want you to come for me, Noelle.\" His voice is husky, barely controlled, his mouth still pressed to mine. \"Now!\" Rhys pulls back and thrusts deep, groaning out his climax. \n\nI shatter. Another sob breaks free as the thread snaps and slackens once again, and there's the unimaginable relief followed by spiraling pleasure, then nothing. \n\n************** \n\nI wake to feathery kisses peppering across my wet cheeks. My eyes flutter open. Rhys lies above me in the bed, brushing his lips over the tear tracks on my face, murmuring softly in a language I don't recognize. \n\n\"Are you awake, little one?\" \n\nI nod through my lethargy, blinking at him, registering the dark curls of his hair, his violet irises ringed in gold and tinged with something resembling concern. It can't be, though. \"You were out for just a few blinks, don't worry...\" Another flutter of kisses across my cheekbones. \"You did so well, my little human...so beautiful.\" \n\nHe called me beautiful...how dare he call me beautiful. \n\n\"I hate you.\" \n\nAnother kiss, pressed ever so sweetly to my forehead. \"Shh, sweetheart. I know.\" \n\n**************"
    ],
    "authorname": "HibouBleuMD",
    "tags": [
        "ritual",
        "fairy",
        "fantasy",
        "forced",
        "seduction",
        "noelle",
        "rhys",
        "bond",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/marriage-of-the-fae-ch-02"
}