{
    "title": "Efrain and Cory Ch. 24",
    "pages": [
        "Chapter 24 \u2013 Mirror, Spice, Flow \n\nPart I \u2013 Fuck-a-thon, Redux \n\nI stood up on the couch and slipped over the back. \n\nA move that didn't go over so well with the siblings. \n\n\"Mooooooooooooooooom!\" \n\n\"Preston's jumping on the furniture again!\" \n\n\"Aren't you guys too old to tattle?\" I taunted. Mom's melodramatic sigh followed me as I bolted out of the room. \n\n\"Why does he get to run in the house?\" my little sister whined and my baby brother echoed. \n\nAs I raced up the stairs, I heard my step-dad and mom turn Kent and Ellie back to the TV special they'd been watching in an attempt to shut off demands to know why I got to do all the fun stuff. They'd learned over the years that giving reasons such as Preston is ten years older and Preston is an adult wouldn't work. Redirection was the only method they'd had any success with. \n\nI hit the unmute button on my phone as soon as I got in my room. \"Hey, you still there?\" \n\n\"Yeah.\" Indie's voice sounded even hotter over the phone. Like, instant erection hot. \"Did you run or something?\" \n\n\"Kinda,\" I said. Or did he sound hotter because I was just really hard up and thirsty? I leaned against my door. \"Had to get away from prying ears.\" \n\n\"So you ran hard enough to end up panting?\" he chuckled. Yeah, really thirsty. Why the fuck else would I get all tingly over a man laughing at his own non-joke. \n\n\"I thought you liked hearing me pant.\" \n\n\"I like making you pant,\" he said. \"There's a difference.\" \n\n\"Is that why you're calling?\" I flopped back on my bed. \"You want to make me pant?\" \n\n\"Doesn't sound like a bad idea,\" he answered. The timbre of his voice had pitched low, and blood slammed into my cock with a thud. \"When are you heading back to Blacksburg?\" \n\n\"Now.\" \n\n\"Now?\" \n\n\"Like, right now,\" I said. \"Packing my bags as we speak.\" Stroking my cock through my jeans, packing my bags. Same difference. \n\n\"You serious?\" \n\n\"I could be.\" \n\nHe sighed. \"I'm still at Laurel's parents' place.\" \n\n\"Ah,\" I said, trying to hide my disappointment. \n\n\"But, I really need to get out of here,\" he said. \n\n\"Family making you crazy?\" \n\n\"Something like that.\" \n\n\"That's why I never come home without a good excuse for leaving early,\" I said. \n\n\"Clever.\" \n\n\"Aren't I always?\" \n\n~*~*~*~ \n\nI remember hearing Preston's knock, and opening the door for him, and inviting him inside. I'm not quite sure, however, when I actually picked him up and pinned him against the door. \n\nOne minute, he's giving me this, I don't know, look, and the next his arms and legs are wrapped around me while I try to get my tongue far enough into his pretty little mouth to see if he still has his wisdom teeth. \n\nI could worry about this, but the smell, taste, feel of him made it impossible to think rationally. His mouth felt hungrier the more I fed off him, and worrying how we got to this point would take away from my more immediate concerns. \n\nLike how to get him pinned under me. \n\nMoreover, allowing my thoughts to drift from my plan to get him between the sheets would lead to some problems I'd really rather not think about \u2012\u2012 like why Laurel felt like she had to tell me about her and Mike getting married as if I was some fragile fucking piece, or why people felt fucking sorry for me when they shouldn't, or why I ditched my mom with my best friend's parents after Thanksgiving dinner for a booty call. \n\nWhich would defeat the purpose of the booty call in the first place. \n\nPreston's legs tightened around my waist and his little whimpers tumbled into my mouth. Holding him up like this didn't really work for grinding on him or rubbing my hands all over his pert ass, but it was getting the job done for everything else. With his hands in my hair, I forgot to give a fuck about my mom, and Thanksgiving, and Laurel's little announcement, and the concerned looks I kept getting from my best friends and their relatives. His neck, the skin soft and flush, warmed under my lips.  \n\n\"Don't get me wrong, sugar, this is incredibly hot,\" he panted, \"but don't you think we're a little overdressed for this?\" \n\nI licked over his Adam's apple, then trailed kisses up his chin and back to his pouty lips. \"You're always overdressed,\" I said before sweeping my tongue into his mouth. \n\n\"But, we're excessively overdressed now,\" he said when I let him come up for air. \n\n\"You look fine.\" \n\n\"Indie.\" \n\n\"Yeah?\" I said, nibbling his bottom lip. \n\n\"Less quipping, more stripping.\" \n\n\"Wasn't that a quip?\" I chucked against his mouth. \n\n\"Bite my ass.\" \n\n\"Eventually,\" I joked, but I did set him down and led him through the house. I had to get him in my room because I actually did want to bite his ass, but he stalled in the living room. \n\n\"We should re-christen your couches.\" \n\n\"And waste a perfectly good bed?\" I said. \"Although, I suppose if you really need living room furniture to get off, I do have those armchairs.\" \n\n\"Oh, those could be fun!\" \n\nWe continued back to my room, but I made a mental note to return for the couches. \n\n~*~*~*~ \n\n\"Who does your decorating?\" \n\n\"My womenfolk.\" \n\n\"Womenfolk?\" I looked over my shoulder at Indie, who'd finally stopped fussing with the tap now that the tub was nearly full. \"Really?\" \n\nIndie's garden tub \u2013 this ridiculously large, roughly triangular-shaped thing \u2013 took up a corner of the bathroom. The raised platform the tub sat in was almost like a stage, and added enough height that steps were required to get in. The ample space between the edge of the tub and the wall on all sides had been filled with more pillar candles than a Catholic prayer altar. \n\nWhen I joked about him taking candle-lit baths, he said that they only looked like they've been used because they're flameless and that's what they're supposed to look like. He swore up and down that the only time he'd ever touched them was when he had to dust. I knew he had to be lying, then. Seriously, what normal twenty-something male, gay or straight, dusts? Then he started switching on the candles, mainly because he'd actually never used them before (allegedly) and didn't know if they even had batteries. Indie had dimmed the lights (who puts a dimmer switch in a bathroom?), to show off the full effect. And you can't not take a candle-lit bath, especially when the tub is that impressive. \n\n\"Yeah,\" he said, pulling me between his legs and back against his chest. I relaxed into him. \"My step-mom convinced my dad that the best way to furnish the place was to give me their old stuff.\" \n\n\"Your furniture really doesn't look that old,\" I remarked. \n\n\"It's not,\" he said. \"Claire just wanted an excuse to buy new shit.\" \n\n\"At least she has good taste. Your bedroom is nice.\" \n\n\"Thank my mom and Laurel for that. They had a little 'Cheer the fuck up, Indie' day on Dad's dime.\" \n\n\"Oh?\" I looked up at Indie as he scrubbed his hand over his face. \n\n\"I was pretty pathetic after Jameson,\" he said, affecting a tone of detached indifference that rang a little false. \"I was sleeping on the couch because I couldn't bring myself to sleep in our old room ever since I caught him fucking some chick in my bed.\" \n\n\"That's horrible!\" \n\n\"Yeah, bitch was in her second trimester.\" \n\n\"His?\" \n\n\"Yup. And not the first time.\" \n\n\"Damn.\" \n\n\"Fucker's sperm is so potent, even I've had pregnancy scares!\" \n\n\"Okay, setting aside for a moment that men can't get pregnant,\" I said, \"you're an exclusive top. Weren't you the one doing the breeding?\" \n\n\"Verse, actually,\" he said and arched his brow suggestively. \"You just assumed I was an exclusive top.\" \n\n\"Oh, really?\" \n\n\"What? Are you having a hard time imagining me taking a cock?\" \n\n\"I have no problem at all imagining you taking a cock,\" I said, adding my own suggestive brow arch. \"Imagining it right now, in fact.\" \n\nThe mental image of Indie's lean body bent over, long legs spread wide, while he whimpered and begged to have his ass pounded. Holy. Ever. Living. Fuck. To say that was hot would be an understatement. \n\nIt brought \"dick-ception\" to a whole other level. \n\nThe only thing not hot about it, of course, was the knowledge that since I was only the second person he'd slept with, it had been that toady bastard Jameson's dick that he'd been riding. \n\nSo, I did the only reasonable thing and substituted Efrain for Jameson, and BAM! next wank's masturbation fantasy. \n\n\"You can stop now,\" he said. \n\n\"What?\" I said innocently, while images of Wolfie breeding Iceman danced in my head. \n\n\"Your cock is suspiciously hard.\" Indie's eyes narrowed, but I could still see a poorly suppressed grin teasing at the corner of his mouth. \n\n\"I'm naked. In a tub. With a man. Who also happens to be naked and, I might add, just fucked my delicious ass into the mattress all of half an hour ago.\" I gestured down at my dick, making it jump for maximum effect. \"How is this suspicious?\" \n\nHe rolled his eyes, and I pretended not to notice the suspicious length hardening against my back. \n\n\"So, sleeping on the couch?\" I prompted. \n\n\"Laurel and Mom found out about the couch and got all weepy.\" His fingers danced along my thighs under the bathwater (seemed he wasn't going to let our aroused state go to waste). \"Next thing I knew, I'm whipping out my credit card at Bed Bath &amp; Beyond for linens for my new bed.\" \n\n\"So, are they also to blame for the bathroom?\" \n\n\"What's wrong with the bath stuff?\" he asked. \n\n\"Not the bath stuff,\" I said. I slipped away from him toward the back corner of the tub, where the two mirrors that ran from the top of the platform to the ceiling along the sides of the tub joined together. There had to be a good two or so feet between me and that corner. The light from the flameless candles intensified as it reflected off the surface. \"I'm talking about the mirrors.\" \n\nI leaned against the edge on my forearms and looked at myself from the many angles created. Another row of mirrors lined the wall above the two-sink vanity on the opposite side of the room. The vanity was also at an angle, parallel to the platform, so I was even able to see myself from behind. I caught Indie silently chuckling at my experimental butt wiggling. \n\n\"Previous owner, I think,\" he said, turning off the water now that the tub was full. \"Those were here when Dad bought the house. I didn't really feel like dealing with two bigass mirrors, so they stayed. Why?\" \n\n\"Lots of mirrors, fuckton of candles, and a big as fuck tub on a fucking stage.\" I propped my chin up on my fist. \"You're a couple wine glasses and a smooth jam short of an R&amp;B music video.\" \n\n\"It's not that bad.\" \n\n\"I suppose,\" I conceded. \"Good thing they ran out of mirrors before they got to the ceiling.\" \n\n\"Indeed. I much prefer the skylights,\" he said. \"Although, the sunlight is a bitch when you're hungover.\" \n\n\"I can imagine.\" \n\n\"But, you forgot something.\" \n\nI caught his expression in the mirror. I had no idea what he was talking about, but the look in his eyes said I was definitely going to like it. \n\n~*~*~*~ \n\n\"What did I forget?\" he asked. \n\nI hit the button next to the faucet and the water started churning. Preston quivered as water pumped directly over his cock. \n\n\"Someone likes water jets.\" \n\n\"Bastard,\" he said, perhaps a little breathier than he intended. \"You knew that was there.\" \n\n\"Maybe.\" I shrugged. \"I don't see you moving away, though.\" If anything, he seemed to be looking for the best angle at which to enjoy that particular jet. I watched him wiggle around until he suddenly gasped and went completely still. His hands fisted on the edge of the tub and his breath came in shuddering pants. I met his honey ale colored eyes through the reflection in the mirror as he licked his lips. \"You seem to be enjoying yourself.\" \n\n\"It's not enough to make me cum,\" he said, biting his bottom lip. \"But, it definitely feels good.\" \n\nI admired Preston's preternatural knowledge of his own body. He understood how best to pleasure himself, revelled in doing so with hedonistic abandon, yet still made me party to his gratification. Getting himself off on a well-placed water jet seemed self-centered and masturbatory, but there was an element of performance to it, as if he was doing this as much for my benefit as his own. I was pretty sure, though, that he wasn't fully aware of the little thrusts his hips made against the current. \n\nI shifted over to kneel behind him. The graceful lines of his back rose from the churning water and I couldn't help thinking about the graceful lines hidden below. Water-slick skin reflected the dim light, giving his body a wet sheen. A very pretty distraction. Intoxicating enough that I forgot all about the things I didn't want to think of, and even forgot that I could think to begin with. I stroked over his legs, beginning at his ankles and circling back over his hips, and watched his reactions through the mirrors. Goosebumps tightened his skin and pebbled his small nipples; a little quiver accented his breathing. \n\nPreston leaned back up, pressing his back to my chest, and pulled my head down for a kiss. My fingertips continued to work over his body while the water swirled around our legs. Judging by the way the water moved against my thighs and the moaning that could only partially be attributed to my touch, he was still working that water jet for all its worth. \n\nI grabbed his hands and planted them on the side of the tub in front of him, leaning him forward. Our eyes met again through the mirror while my mouth nipped the curve of his neck before trailing kisses down his spine. He let me shift him around until I had his hips lifted just enough out of the water to get at his sweet little ass. Preston did, however, whine that he was no longer in-line with the water jet. \n\n\"Here.\" I pulled one hand down toward the jet and showed him how to adjust it. After a few moments of fumbling, Preston whimpered out a trembly little moan and I figured he'd found the right angle again. While he got reacquainted with the jet of hot water on his dick, I moved back to the faucet to grab the condoms and lube I'd brought in with me. \n\nYou can't take a candle-lit bath in a tub like this and not try to fuck in it. \n\nSince I knew he'd been watching my movements through the mirror, I made a show of pouring the lube over him, holding the bottle high and letting dribble down. He shivered as my fingers stroked his tight hole, slicking up the digits before slowly easing my middle finger into him. His hips bucked and he cried out for more. Fuck, if it had occurred to me how gratifying it would be to watch Preston from all the angles afforded by the mirrors, I would have talked him into the tub sooner. I worked in a second finger, alternating between thrusting and tapping into his sweet spots. Candlelight flickered over the shifting muscles of his back as he rolled his hips onto my fingers. \n\n\"Damn, baby,\" I leaned back over him and nibbled his earlobe. \"You'd think I was hurting you.\" \n\n\"Using my own words against me?\" he panted. His eyes met mine in silent challenge through the mirror. \n\n\"No, just your body.\" I flipped my hand over, palm-side down, and stroked over his prostate. \n\n\"Oh, fuck!\" he hissed and arched his back against my hand. I drove him on, drawing my fingers over the spot over and over, and his voice climbed higher \n\n\"I'm just using your words to rub it in,\" I murmured. \n\nHe reached back to pull me in for a kiss, still moaning and writhing. \"So, when do we get to the part where you use your dick?\" \n\nRather than give him a verbal response, I rotated my fingers a little and attacked him from another angle. Preston slumped over in a quivering mess of babbles and pleas that essentially translated to, \"I would greatly appreciate it if you would kindly put your dick in my ass, Mr. Norman.\" \n\nI picked up the condom and tore into the package with my teeth. I know you're not supposed to use your teeth to open condoms, but I couldn't stop thrusting my fingers in and out of him. Slipping on the condom and lubing myself up with just the one hand was a bit tricky, but was worth the reaction I got when I slid out my fingers and immediately pressed my head against his entrance. \n\n\"God, yes!\" he whined as my head pushed past his inner ring. \n\n\"More?\" I asked and he whimpered assent. I planted my fists on either side of him, where he'd bent over the edge of the tub with his cheek pressed to the cool tile platform, and slid my achingly hard cock deeper. The deeper I inched, the louder and less coherent he became. I watched Preston's face through the mirrors, ecstasy mounting on his flush features. His eyes opened and met mine, holding my gaze almost defiantly, as I pulled back to the tip and thrust home. \n\nHe tightened around me, and I was the first to break eye contact. I groaned while he adjusted to my dick filling him and I tried every trick I could think of so I wouldn't cum just from the feel of him wrapped around me. \n\n\"Indie...please...I...I...fuck...need...I need...\" \n\n\"Need?\" I kissed over his quivering shoulders while he struggled with complete sentences. For some perverse reason, the skin at the top of his spine brought to mind images of lions fucking on nature programs. I recalled something about him commanding me to bite his ass, and an even more perverse thought struck. I couldn't quite reach his ass from this position, so I set my teeth on his neck, as if biting and holding him by the scruff. Preston's pleased moan cut off in a squeak when I applied some pressure. \n\nI pulled back my hips and thrust into him slowly, but he still hadn't been able to draw air into his lungs. His muscles contracted hard around me and his hips bucked into mine. I ground my dick into his trembling ass before pulling back and giving him another agonizingly long and slow thrust. He managed to make his lungs function again by the time I bottomed out in him. \n\n\"Indie,\" he gasped. A questioning of intent, a plea for mercy, a call for more. So much loaded into two breathless syllables. I released his neck, licked over the faint marks I'd left, and thrust again. Once more, he called my name just a little bit louder, and I thrust into him just a little bit harder. Our call and response built. His intensifying vocalization \u2013 my name, barely-coherent begging, wordless cries \u2013 matched to my surging hips. This vigorous fucking sloshed the already churning water over the sides of the tub, onto the platform and eventually on the floor surrounding the tub. \n\nI leaned back up and watched my dick thrusting in and out of him. When I looked up to observe from the different angles created by the mirrors, I caught him watching. Our eyes chased across the reflections. He seemed to spasm and tighten when I found him; when he found me, I felt an answering throb. The ten-gauge captive bead ring in my perineum countered the pull of my balls as they drew closer to my shaft, and I think we both recognized the end looming. He braced himself against the edge of the tub with one hand while grabbing for his cock with the other just as I adjusted my hold on his hips. \n\nMy hands pulled him into my thrusts, slapping his ass hard against my hips over and over as I pounded into him. I had no idea if the water jet was still doing anything for him, or if it had been forgotten in the blur of his hand working his cock. My reserved grunts and groans fell into loud, uncontrolled moans only to be drowned out by Preston screaming my name, the drawn out syllables cutting off with a series of random vowels, as the climax crashed down on us. I exploded into the condom, thrusting wildly while he spent himself in the water until we were too sensitive to move. He collapsed against the side of the tub after I pulled out of him and removed the condom. ",
        "\"We'll need to get washed up,\" he said, still breathless and panting. \n\n\"A shower, then?\" I said. \"That is what we came in here for.\" \n\n\"Not sure if I can stand yet.\" \n\n\"Yeah,\" I said, shifting us both around so that he was once again between my thighs and lying against my chest. \"God, my legs haven't been this weak since my first Monticelloman Tri.\" \n\n\"So sex with me is comparable to running a triathlon?\" he said as he pulled my arms around him. \"I'm flattered.\" \n\n\"You should be,\" I said and he made a satisfied hum. His fingertips stroked over my forearms. Casual sex and casual affection. I could get used to this. \"Of course, running a triathlon never wrecked my bathroom.\" \n\nPreston lifted his head, seeming almost pleased as he took in the puddles of water and overturned candles on the platform and floor. Wet handprints marked the mirrors, although I had no idea when that had happened. Lube leaked from the bottle I had forgotten to close when I hastily set it down. \n\n\"Some triathlete you are!\" \n\n~*~*~*~ \n\nPart II \u2013 The Pumpkin Spice Must Flow \n\nPreston picked up the can of pumpkin and eyed it skeptically. \"You know, with the holiday behind us, you'd think we'd be over pumpkin.\" \n\nEfrain shrugged and went back to gathering ingredients. \"As long as it's not pumpkin fucking spice,\" he said. \n\nI picked up the small canister of pumpkin spice and shook it at him. It had been squatting in the pantry with the canned pumpkin. Apparently, Laurel had decided to make a pumpkin pie last Christmas, but never followed through after buying the ingredients. Efrain thought it might have been that Laurel wanted pumpkin pie and intended for him to make it for her. Which he might have been persuaded to do had she not defiled what had quickly become HIS kitchen with that most sacrilege of ingredients: McCormick Pumpkin Spice Blend. \n\nEfrain bristled at the offensive one-ounce canister in my hand, and I quickly put it out of sight lest he start growling. \n\nIndie, who knew better how to indulge my Wolfie, had installed the stainless steel panel and magnetic spice tins, filled them with whole spices, and took over Laurel's pitiful and half-assed attempts to grow fresh herbs shortly after Efrain moved in. Indie was weirdly handy, even going so far as to install dimmer-switches in the bathrooms because he \"saw a video and it didn't look that hard.\" Funny how Preston found another YouTube tutorial obsessed gay man to jump in bed with by sheer coincidence. \n\nNot that they'd been in bed when Efrain and I got back Friday morning. \n\nNow, that had been interesting. \n\nOf all the possible scenarios I ran through when I'd spotted Preston's little red Mazda in the driveway, opening the door to hear him ecstatically wailing Indie's name didn't figure in any of them. As we made our way back to Efrain's room, quietly so we wouldn't alert them to our presence, it became apparent that the passionate cries were not coming from Indie's bedroom. \n\nThey were fucking in the basement. \n\nBehind a door that we had to pass to get to Efrain's room. \n\nA door that just happened to be wide open. \n\nWe stood there in the hallway, trying to think of a way to get around a potentially embarrassing (or at least, more embarrassing) situation, while we got an earful that soon included Indie's voice. \n\n\"Fuck, baby, don't stop.\" \n\nI mouthed \"Baby?\" at Efrain and he shrugged. Indie calling anyone \"baby\" just seemed odd. \n\n\"Oh God...Indie...so...so...hnnnng...so good...\" \n\nPreston's cries seemed muffled, like maybe they were kissing or something, but after a few moments they ratcheted right back up accompanied by rhythmic slapping. For lack of a better place to stare, I looked back at Efrain. He had this look in his eyes that I almost didn't recognize it until he smiled, took my hand, and pulled me into him. Arousal. Efrain was aroused. I was embarrassed, and curious, and embarrassed that I was curious, but Efrain's dick coming up to full mast against my zipper and his wicked the-better-to-eat-you-with grin brought lust to the foreground. \n\nHis mouth pressed against mine briefly and I groaned. He held his finger up as if to shush me before pulling me down the hallway. Against my better judgement, I stole a glance down into the basement. Indie and Preston, completely naked and sweaty, were fucking on the incline bench. Preston had been leaning back with his hands on the seat riding Indie's cock, while Indie thrust up into him as he jerked Preston's dick. \n\nBoth of them were so into it that they wouldn't have noticed if Efrain and I stood there and watched. Hell, had our roles been reversed, Preston would have totally stayed for the show. But, it was bad enough that I'd stalled there long enough to notice Preston's sex flush stealing over his face and neck. And worse still that I couldn't stop. Efrain tugged at my hand, dragging me from the writhing bodies below and down the hall. Their voices got even louder despite the fact that we were walking away from them. \n\nAs soon as we got into his room, Efrain pulled me into a fierce kiss. \n\n\"Confession: Hearing guys get off really switches me on,\" he said, taking my hand again and rubbing it on his dick. \n\n\"Confession: I think I like watching,\" I replied, taking his other hand and putting it on my cock. \n\n\"You peeked, didn't you?\" he asked and firmly gripped me through my jeans. \n\n\"A little,\" I admitted with a gasp that made it sound like a squeak. \n\n\"A lot,\" he countered. \"Bad boy.\" \n\nHe leaned for another kiss, this one more demanding that the one before. Just as we pulled away, we heard Preston screaming \"Oh fuck!\" and \"Right there!\" over and over. Goosebumps crawled up Efrain's neck and his cock pressed against my hand. \n\nEfrain went to pull a familiar bottle from the nightstand. \"Come here,\" he growled and within moments, I was shoved up against his bureau with my jeans down around my ankles and his lubed up fingers in my ass. \n\n\"We don't have much time before we have to report for practice,\" he whispered, grinding his knuckles into my rim before pulling out, \"but I need you now.\" I felt his cock press against me, and I pushed my hips back until his head popped in. Efrain dribbled more lube down my ass and worked his cock in a couple inches to further open me. I gave in to the needy little noises and whined for his dick with abandon. I'd given up on containing my whimpers ages ago when I realized he was going to fuck them out of me whether I liked it or not (not that I ever didn't like it). Elsewhere in the house, Preston cried out Indie's name, announcing his orgasm for the whole neighborhood to hear, and Efrain's fingers twitched on my ass. \n\nThat was all the warning I got before his hips snapped forward, slamming his cock into me with enough force that the dresser rocked backward and thumped against the wall. Efrain pounded my ass fast and hard, and it was all I could do to not get thrown into the furniture, let alone care that Preston and Indie could hear that we were picking up where they'd left off. I'd been pent up and horny as fuck for days, then completely aroused by the taboo of overhearing our friends getting off in the basement. Last night's mutual blowjob had taken the edge off, but nothing short of a solid fuck would make my need manageable enough to function. \n\nI needed this. \n\nI worked my hand on my cock as his thrusts grew erratic. He fucked me through his orgasm, continued on until I got mine. Cum dribbled down legs that were suddenly too unsteady to hold me up. It took very little time for the thrill of his rough and fast quicky sex to overwhelm me and I joined 'Rain in making a huge fucking mess. \n\nWe were almost late for Friday's last minute football practice before Saturday's game because we had to clean up. \n\nSitting around the kitchen with my best friend, sharing coffee and watching Efrain put together a Cheat Day breakfast for four, only days after witnessing him and Indie going at it, was strange. No one had said anything, but it was understood that we'd overheard the other couple, and that they'd overheard us. I still hadn't been able to admit to Preston that I'd seen them, or that we'd totally gotten our rocks off on it. \n\nDespite that, there was a comfortable vibe going on with the four of us chilling on a weekend morning that was odd in its normalcy. The first time we'd hung out together, just us, and it felt right somehow. \n\nIndie had come in earlier and started frying bacon. Two packages worth of the good stuff. When I had ribbed Indie about the amount, Efrain ribbed Indie about his late-night BLT habit. While Efrain pulled down a couple spice canisters (I recognized the cinnamon sticks, but had to be told that the little nut-looking things were nutmeg) and nabbed a funny yellowish root, Preston took a break from snapping photos and live-tweeting our morning to pick up the pumpkin spice and look at the back panel. \n\n\"This already has ginger in it,\" he said. \n\n\"And it's probably too old to be potent,\" Efrain said flatly. He picked up a rasp and grated cinnamon, nutmeg, and ginger into the dry ingredients. \"You have to use even more to get the job done, and it still won't taste right. Also,\" he pointed the rasp at Preston, \"fuck pumpkin spice.\" \n\n\"But, you're making pumpkin spice pancakes,\" Indie said. \n\n\"No, I'm making pumpkin pancakes,\" Efrain said. \n\n\"Would be better as pumpkin waffles,\" I thought out loud. \n\n\"Not like the batter would be that much different,\" Efrain shrugged. \"Just more sugar and fat.\" \n\n\"Wait a minute! You've got to have one of those things laying around here.\" Preston jumped up and started going through the cabinets. \"It takes up tons space and is practically useless for anything else; Claire had to have bought one.\" \n\n\"Bought one what?\" I said. \"And who's Claire?\" \n\n\"A waffle iron,\" Preston said. \"Probably expensive as hell and never been used.\" \n\n\"My step-mother,\" Indie said, answering my second question. \n\nEfrain sighed then called over his shoulder to Preston. \"Bottom cabinet, second from the right, all the way in the back.\" \n\nPreston looked in the identified spot. \"Victory!\" he whooped as he pulled out a rather heavy high-end appliance. \"Three cheers for Consumer Whore Claire!\" \n\nEfrain made jazz hands and mouthed a sarcastic \"Yay\". But, he made the needed adjustments to the batter as Preston dusted off the virgin Belgian waffle iron. He plonked it down on the island where Efrain had been mixing ingredients. It was obvious, to me at least, that this was the first time Efrain had really looked at the iron as he started going on about ceramic coating, and rotating, and two-at-a-time, almost as if he was two seconds from jizzing in his pants. The look in his eyes was pretty damn close to the ones he makes right before he throws my ass down and has his way with me... \n\n...Aaaaaaaaaaaaaaaaaaaaaaaaaand I'm now popping a boner over my boyfriend's reaction to a kitchen appliance. Great. \n\nI caught Preston smirking over the rim of his coffee mug and realized my junk rearrangement wasn't as discreet as I thought it was. \n\n\"He's double-stuffing it,\" he told me with this conspiratorial tone. \n\n\"It can handle two loads without a problem,\" I shrugged. \n\n\"Flip it and hit it on both sides,\" Preston added. \n\n\"Two huge loads, one waffle iron.\" \n\n\"Hot double-stuffing action.\" \n\n\"Watch this Belgian take it again and again.\" \n\n\"Wouldn't that be a waffle gang bang by that point?\" Preston asked. \n\n\"Waffle batter bukake?\" \n\n\"Would you two stop?\" Efrain was going for exasperated, but I could still see him fighting off a grin. \n\n\"Yeah,\" Indie said, draping an arm across Efrain's shoulders, \"let him pop its waffle cherry in peace.\" \n\nEfrain narrowed his eyes at Indie. Preston hid another smirk while sipping coffee, looking between them. \"...wouldn't even have to bend his knees,\" he purred quietly. \n\n\"What's that supposed to mean?\" Efrain asked. \n\n\"I'll tell you when you're older,\" he replied. \n\n\"Indie, get your toy in line.\" Efrain pointed at Preston. \"Or you can forget about me feeding you.\" \n\nPreston said something under his breath, but I only caught the \"feeding him\" and \"next wank's fantasy\" parts, and I wasn't even sure if I'd heard him correctly, but a small voice in the back of my mind warned me that I probably didn't want to know. \n\nAt any rate, Efrain got busy double stuffing and flipping, and we tried to not giggle when batter leaked out. Soon, a nice stack of waffles formed on the platter. It was odd that a college student, even a grad student, would have a full set of serving dishes. I wondered about the full legacy of Consumer Whore Claire until the last of the waffles and bacon were done and we started loading up our plates. Indie and Preston surprised us both when they followed us into the living room with their breakfast. They took up residence on the other couch and tucked in as if they did this every Sunday. \n\nPreston continued documenting everything with his phone. Efrain double stuffing, Indie tending the bacon, me leaning on the counter and cradling my favorite coffee mug, a selfie with his artfully arranged plate. To be honest, he Oprah'd the fuck out of those selfies. Selfies with me, selfies with Efrain, selfies with Indie. You get a selfie! And you get a selfie! And you get a selfie! Everyone gets a selfie! \n\nHe nabbed a shot of Efrain and me on the couch. That one he posted immediately as I'd been in the middle of taking a massive bite. Not a very flattering look. Then, Preston jumped on our couch, draped himself across our laps, paint-me-like-one-of-your-French-girls style, and snapped another selfie. \n\n\"Dude,\" Efrain groused. \"Not cool.\" \n\n\"Totes cool,\" he chirped. \"Besides, you fed me sugar. Lots of sugar. What did you expect? Oh, and caffeine! Y'all need to learn when to cut me off.\" \n\n\"Spaz,\" Indie said. \n\nPreston regarded Indie with narrowed eyes for a second, then crooked his finger. Indie rolled his eyes, but came over anyway, plopping down on the floor between our legs and resting his head against Preston's side. Like all the other times, Indie seemed surprised that Preston was including him in the photo. While not as strong as the initial photos, Indie made the same bemused expression every time Preston pointed his phone at him. \n\nPreston lifted up his phone for yet another selfie. \n\n\"Bah, my arms are too damn short to get everyone,\" he spat. \"It's times like these that I wished I was tacky enough to own a selfie stick.\" \n\n\"Here.\" Efrain took the phone, lifting it high above our heads, and snapped a shot of the four of us looking up. \n\n\"Oh, perfect!\" Preston said when Efrain handed back the phone. \n\nEventually, Indie ended up lying back against Preston's chest with the cheerleader's limber legs wrapped around him, while Efrain and I snuggled up under a lap blanket (I liked the picture he took enough that I saved it on my phone). In between sports commentary and commercials, we caught up on our respective holidays. Preston's wasn't all that eventful. Kent and Ellie were getting a little bit older, so they were less of a pain to be around. \n\n\"They're still a pain nonetheless,\" he said. \n\n\"They'll always be,\" Efrain assured him. \"Younger siblings are a pain in the ass, no matter how old they get.\" \n\n\"Big brothers, on the other hand,\" I said, \"will always be dicks.\" \n\n\"You shady bitch,\" Preston laughed. \"Almost forgot you were the baby.\" \n\n\"Baby?\" Indie asked. \n\n\"Yeah, I'm the youngest of four,\" I said, elbowing a quietly snickering Efrain, if only to hide my discomfort at remembering the context in which I last heard Indie say baby. \"My brothers are between 5 and 8 years older.\" \n\n\"The accident?\" Preston said. \n\n\"Cameron was the accident,\" I answered. \"They thought I was the milkman's kid until they realized Dad's vasectomy had reversed itself.\" \n\n\"Still,\" Indie said, \"I'd rather have the pain in the ass or the dick.\" \n\n\"Of course you would,\" Preston purred. Indie swatted his thigh. \n\n\"Step-brothers,\" Efrain said and Indie nodded. \"Hey, at least your step-brothers didn't try to molest your boyfriend in his sleep.\" \n\n\"Wait, that's what you were squabbling about?\" I asked. \n\n\"Oh, this sounds like a fun story,\" Preston said. \n\n\"Zoe jumped on our bed Thanksgiving morning\u2014\" Efrain said. \n\n\"A really fun story...\" \n\n\"Our bed?\" Indie said. \"They didn't think it was weird that you were sleeping in the same bed?\" \n\nEfrain rolled his eyes. \"About that...\" We took turns going through our holiday, from Wednesday's dinner disaster and surprise outing, to Thursday's pillow fight and dinner victory. Efrain even rolled out the video clips of my Schrodinger's Queer speech. \n\n\"You seriously gushed to his entire family about how much you enjoyed his sausage?\" Indie laughed. \n\n\"Not his entire family,\" I muttered and Preston busted out laughing. I'd replayed that scene in my head enough to realize I'd unwittingly said a lot more than that. \n\n\"But, you're out to your family,\" Indie said to Efrain. \"That's pretty cool.\" \n\nPreston sobered up. \"Not an ideal situation, but still...congratulations.\" \n\n\"I didn't really do anything,\" Efrain shrugged. \"Just kinda happened.\" \n\n\"You still went back and faced them,\" he reasoned. \"And you openly recognized Cory. So, my congrats still stands. Now, all we need to do is get Kitten out at home.\" \n\n\"I'm thinking about it,\" I said. \"But, I hear that other congratulations are in order.\" \n\n\"Laurel and Mike posted that they're engaged,\" Efrain said. \"That happen over the holiday?\" \n\nA muscle ticked in Indie's jaw. \"No, they've been engaged since the summer. She hid the ring then swore their parents to secrecy. Even my fucking mother knew before I did.\" His mouth tensed. \"Then she pulls me aside before dinner to tell me like she thought it would upset me or something.\" \n\n\"But you're her best friend,\" I said. \n\n\"Trying to protect my feelings since I obviously still wasn't over my ex.\" \n\n\"You're not?\" Efrain asked. \n\n\"You kidding me? She assumed that I was still hung up on him since I wasn't seeing anyone. And then Preston...\" Indie trailed off as if remembering something. He narrowed his eyes at me. \"And you...\" \n\n\"Me?\" \n\nHe signed. \"Not you exactly, that fucking party at Kiley's. They were trying to get me to fuck somebody so she could feel better about sending out 'save the date' cards.\" \n\n\"Harsh,\" I said. \n\n\"Give her the benefit of the doubt, man,\" Efrain said. \"She probably thought she was doing the right thing.\" \n\n\"I know, I know. I'm just tired of being pitied all the damn time,\" Indie said. \"Thank God I didn't tell her about the fucking pot incident.\" \n\n\"Pot incident?\" Preston asked. \n\n\"Jameson threw a pot at my head.\" \n\n\"Jesus fucking Christ, Indie!\" Preston swore. \"Did you tell anyone? The cops?\" \n\n\"Naw, this is the first time I've told anyone.\" \n\nI felt Efrain stiffen. \"The 3-quart copper-core Dutch oven. You ran to the guest bathroom and started puking the first time you saw me use it. Said it was something you ate.\" Indie nodded. \"The dent in the cabinet?\" \n\n\"He had shit aim.\" \n\n\"He didn't...\" I started. \n\n\"Hit me?\" He shook his head. \"Mostly shoving.\" \n\n\"You fought back?\" \n\n\"Once. Not my finest moment. He shoved, I shoved, next thing you know we're in a fist fight.\" He shrugged as Preston wrapped his arms around him. \"But, we're talking about two nerds throwing punches, which was about as effective as playing dodgeball with a throw pillow. I learned to not shove back, at least.\" \n\nI had no idea how I was supposed to react. What exactly do you say? I looked at my boyfriend and bestfriend in case they had a better handle on how to act. Efrain looked ill, the color completely drained from his face. Preston's face looked absolutely livid, as if comforting Indie was the only thing keeping his hands too occupied to punch things. ",
        "Preston hugged him tighter. \"It seems I have acquired a new human punching bag,\" he growled. If Jameson were a smart man, he'd skip town. \n\nIndie glanced at us briefly before his eyes cut away. \"Oh hell,\" he said. \"If you start doing that 'pity Indie' shit, I'm kicking you out.\" He chuckled a little and patted Preston's thigh, but his tense expression didn't fit his casual tone. \"Damn, I'm a fucking pro at dragging down the scene.\" \n\nI jumped, startling Efrain. \"Drag!\" \n\n\"Huh?\" he said. \n\n\"The drag review at Market,\" I said. \"A Night of Kings and Queens. JoeD and Mae Tricks are supposed to be there.\" \n\n\"Who?\" Indie asked. \n\n\"Drag queens. Well, JoeD is a drag king. I heard they're good. We need to get tickets.\" \n\n\"I almost forgot about that,\" Preston said. \n\n\"Drag kings?\" Efrain said. \"Shit, I've never seen drag queens in real life, let alone drag kings.\" \n\n\"So a drag review is...?\" Indie started. \n\nWhen all else fails, fall back on the old standby of changing the subject. \n\n~*~*~*~"
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "twink",
        "interacial couple",
        "comedy",
        "anal sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-24"
}