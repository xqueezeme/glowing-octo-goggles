{
    "title": "Hooking the Hockey Player: Owen",
    "pages": [
        "Howdy. I know this has been a long time coming. I hope that this is a fitting end to the story. I'm excited for this year. I hope to publish as often as possible. We all could use a little more love. So, with all the love, Artie\n\n*\n\nLong tan legs maneuvered carefully around the brush and loose rocks in the dim pre-sunrise haze. Jake had taken off his sweats, complaining that he was getting overheated an hour ago. I wasn't complaining about seeing more of my boyfriend. In fact, I preferred seeing him nude. Ignoring my own discomfort, I kept on my loose fitting Coyotes sweatpants. I was thankful for the exercise though Jake joked that I clearly needed to do more cardio and elevation training if I was sweating from our easy hike. No, the hike wasn't the difficult part despite what felt like a fifty-pound weight nestled in my pocket.\n\nMy phone buzzed quietly and my eyes flicked back up to Jake. He had cycled through a hundred different haircuts through the years, but he had never dyed it. The sun would break soon I would get to see the honey blond streaks that I loved to run my fingertips through. As if he could feel my gaze, his body turned and there he was. The smile was the one he only gave to me, wide and gleaming. The first time I saw that smile, I could barely breathe. The effect was no less devastating now.\n\n\"We're going to miss the sunrise, slowpoke.\"\n\nI shrugged, \"That's okay, I already have a pretty good view.\" I smirked at the way his exaggerated eye roll but I didn't miss the slight color that hit his cheekbones or the extra bounce in his step.\n\nHis concern was unfounded. There was no way we were going to miss the sunrise. I had carefully planned this day for months. I had hiked to the Piestewa Peak twice to ensure I knew exactly how long it would take to get there. I had factored in Jake wanting to stop and look at animals and flowers and his slightly shorter legs. The summit climb was labeled as a difficult hike and not for the first time, I wondered if this was a good plan. I had signed so many forms and had to pay a nearly prohibitive amount of money in permits to have the trail to ourselves. The pre-dawn hike was treacherous but Jake had handled it like it wasn't a big deal, smiling and joking the whole way.\n\nHe had been shocked I was willing to go for a hike at four in the morning, citing my inability to wake up before noon. Little did he know that I hadn't slept. There was no way I was going to sleep through my proposal or forget the ring. No, I lay beside him satiated just to be near him but my anxiety kept me alert throughout the night.\n\nMy phone buzzed again and I snuck the device out: Good luck Holtsy. Mikhalov, the media portrayed him as a monolithic defenseman without morals or empathy but he as just a big Russian softie. He had helped me shop for rings, I've never seen a store clerk so traumatized as two giants started quizzing her on clarity and karats.\n\nEventually, I had decided on a ring. I would have wanted the largest stone that the jeweler could get their hands on. But in deference to Jake's pitiful sense of decorum, I opted for something that I would make him happy. The band sported smaller diamonds that would wrap around his finger proclaiming him officially mine\u2014 if he said yes.\n\nThe peak looked different this time. The rocky outcropping had the first rays of sun caressing them. I heard Jake's soft exhale. Casting an eye over at him I was reminded how beautiful he was. Five years since we had met and he had only gotten more handsome. At twenty-three his jaw line sported a faint scruff, giving him a masculine air. He stood taller than he used to, more comfortable in his body.\n\nThis was it. I could keep my heart beat at 160rpm for 17 minutes on a bicycle but right now, I could feel it speeding out of control. I hadn't felt like this since the first time we met:\n\nFive Years Ago\n\nI groaned as I tried to escape the blare of the alarm clock. I resisted the urge to chuck the aggravating device across the room. I had shattered a few phones that way when I used the alarm app. Now I used a military grade metal plated one.\n\nSix AM. There shouldn't even be a six in the morning. For half a second, I indulged in the thought of rolling over and going back to sleep. My alarm hadn't turned off, instead growing in pitch and increasingly frantic. Sighing, I pushed myself up and slapped the off button, throwing the room back into blissful silence.\n\nStretching out my muscles, I went to the dresser to pull out my workout gear. My clothes and hockey stuff were the only things I had unpacked. I wasn't going to waste my time moving everything around only to move it somewhere else in a year. Buffalo itself was just an unfortunate detour. My room was wrong, the house was wrong, all of Buffalo was wrong. I scrubbed my hand over my face. One more year. One more year until I could get away, get out of high school and play in the NHL.\n\nI was over my canned responses that I was excited that I got an extra year to train. I was done with all the bullshit. High school was definitely bullshit. What was I going to do with my knowledge of the noble gasses while I was skating? Or the geography of Africa? Nothing. This was a time suck.\n\nBrushing my hands through my hair, I pulled on a ratty tank top and a pair of basketball shorts. One more year, I repeated underneath my breath as I tied my shoes, of six 'o' clock mornings to fit in some semblance of a workout.\n\nStepping out into a brisk morning, I grimaced at the general gray hue of the city. It was the end of Summer for fuck's sake. It shouldn't already look like February. I had liked Minnesota, even though their winters were pretty dreary. Moving had been my dad's idea. Apparently, Minnesota's hockey hadn't been competitive enough, that was what we told everyone.\n\nI had grown out of doing clinics with the Wild. I was too good for them and my protracted affair with one of their bright young stars had put a sour taste in my mouth\u2014several times a day. My welcome was worn with the Wild and I suspected that Reese had been the catalyst for my dad moving us out of town in a hurry.\n\nWe hadn't spoken a lot since we moved. We had movers pack up the house and we drove. Luckily we both had cars so we didn't have to sit in silence. Dad wasn't pissed about me being caught with a man. Nope, he was pissed it might jeopardize my hockey career. Hockey was both of our lives. It might seem a little mercenary but my dad stood to make a lot of money when I got signed. We both knew it; he deserved it after raising me alone.\n\nHe had paid for the skates, the lessons, the leagues, the ice time, more food than most families could hope to eat. He did it for me. He had been the man to lace up my skates when I was younger. The first time my blade slid over the ice, I knew that was going to be what I was going to do for the rest of my life.\n\nI started to run faster, letting the speed and miles bleed together: not quite anaerobic but pushing my comfort level.\n\nI had been smaller than the other kids when I was growing up, strange as it seems now that I towered over everyone. But when I was small, I got pushed around on the ice. My father told me to be faster. He dad timed me as I sprinted up the ice and back, blue line to blue line. I got better, stopped letting them take the puck from me. Started making plays and making better lines and team. I practiced surgical hand training to teach myself precision. When I eventually hit my growth spurt I wasn't just relying on my size. Hell, I even took figure skating: I could three turn with the best of them.\n\nIt was in figure skating that I realized I was gay for the first time, one of my dorky friends had been exclaiming how lucky I was to get to lift up the girls. I hadn't even thought of that and then when I did\u2014nothing. The prospect of executing a difficult lift was way more interesting than that my hand was several inches away from her crotch. It didn't bother me much\u2014being gay. By the time anyone would have had something to say, I was way too big for them to say it to me.\n\nEminem blasted in my ears as I turned the last corner before my house. Slowly decelerating, I walked stretching out my hamstrings. Whipping off my shirt, I scrubbed the fabric over my torso, drying off. My phone kept my stats and as I opened the door, I was impressed at my pace. 6: 51 average was pretty respectable, with a fastest mile of a 6:22.\n\n\"Good run?\" A protein shake was already poured for me. I could smell the chicken cooking. Maybe other kids would have cereal for breakfast but a chicken breast had been my morning routine for years. The steel cut, overnight oats had been marinating but I would catch them after I showered.\n\n\"Yeah, felt good. My soleus didn't even twinge.\" I sucked down the shake and half a liter of water, knowing I should drink the rest after my shower.\n\n\"That's good. Let me know if it changes. We'll get you a new PT here.\"\n\nHe didn't expect a response but I grunted an acknowledgement anyway. For several minutes, I just let the water sluice over me, dreading the day ahead of me. Dreading the year ahead of me. Why did I have to miss the draft cut off? With a sigh, I cut off my pity party.\n\nThe run hadn't even woken me up. I could run in a trance; the water did a better job of waking my body up. With one particular bit really awoke from its slumber, my cock lay against my stomach, completely ready for action. Fucking Buffalo, there was no one here to take care of it. Then again, there was no one in Minnesota anymore either. For a split second, I considered calling Reese. Instead, filling my palm with conditioner, and taking care of myself. Fucking Buffalo.\n\nFresh from the shower, I ran some gel into my hair but otherwise just threw on some clothes. I could hear the rumblings of annoyance that I had taken too long getting ready already. Throwing my bag over my shoulder, I swung into the living room and got the chicken breast out of the oven where my dad had set it to keep warm.\n\n\"It's just a year, O.\" Dad placed a glass of water in front of me with my oats in his other hand.\n\n\"Yeah. I know, Dad.\"\n\n\"You have a meeting with the coach this afternoon.\"\n\n\"Yeah. I know, Dad.\"\n\n\"O?\" He paused and I looked up from cutting into my chicken. \"Try and keep a low profile this time.\"\n\nThe sinking feeling returned that I had all the way from Minneapolis. The same disappointed look covered his face as the time he heard one of the other Wild players talking about me. I swallowed around the obstruction in my throat. \"I'm 6'5,\" not exactly inconspicuous.\"\n\nHe gave a half-hearted chuckle as he grasped my shoulder, \"Have a good day, Owen.\" I let out the breath I didn't know I was holding when he turned the corner.\n\nGlancing at the time, I rushed to eat the chicken before grabbing my keys.\n\nI don't know what I expected when I pulled up in front of my new school. In some ways I expected it to look like the prison that my mind had built it up to be. It was largely unremarkable. The school was a weak beige color like the bricks were losing their life force. Fucking Buffalo. The grass was already browning but that was the trade-off of living in such a cold climate.\n\nWith a world-weary sigh, I climbed out of my truck and trudged up to the Administrative building. I was greeted with the cheeriest voice I ever had the misfortune to hear, \"Good morning! How can I help you today?\" I tried to swallow my distaste for that much energy that early in the morning.\n\nI put on my most charming smile and I watched a woman old enough to be my grandmother swoon. Fucking Buffalo. \"Good morning, I'm a new student. I was hoping to pick up my class schedule. Could you help me out with that?\"\n\nThe secretary, Ms. Marston as labeled by her antique nameplate, tapped down her silver hair as she replied giddily, \"And what is your name?\"\n\n\"Owen Holt.\"\n\nShe reached into her files and pulled out my schedule, a map, and a handbook. Her explanation was long and tedious with far too many anecdotes about why the buildings were named the way they were. I waved her a thankful goodbye with schedule in hand as the warning bell rang.\n\nLuckily my class wasn't far. Standing in the doorway of my first class, I was attempting to deal with the sadness that came with knowing that I would be stuck here for an entire year. It was an English class, which I really didn't need to take. It's not like in an interview someone would ask me to annotate Anna Karenina or diagram a sentence. Hell, there were plenty of players from Russia that couldn't even speak English and just got through their interviews with shrugs and grunts.\n\nI swept my eyes over the classroom, in the back were a bunch of girls wearing make-up masks desperately trying to gain the attention of athletes. If their size didn't give them away as varsity athletes wearing jerseys and t-shirts loudly proclaiming it certainly made that knowledge unavoidable. Did they really think that playing on a varsity team made them special? Maybe three of them would play in college. Maybe one of them in the pros. I hated to sound jaded but it all just seemed so futile: them clinging to the importance of sitting in the back Then again it's not like I would sit in the front with the girl who had an entire pencil case full of highlighters ready to color code her notes.\n\nA small flash of movement caught my eye from next to the window. The room was pretty full but the seat next to him was conspicuously empty. The kid was slouched so low in his seat; he was barely visible. His back looked like he suffered from scoliosis from how bent over he was. Long legs peeped out from below his desk, so height didn't seem to be an issue.\n\nHe fidgeted slightly, if at all possible making himself smaller. I smirked at his attempt. I slid into the seat beside him and watched his shoulder muscles clench; Jesus kid, lighten up. I spoke as if to a frightened animal, low calming. For a moment I wondered if I should make myself his height, I quickly tossed out that idea. I didn't want him to think I was making fun of him, \"Hey, is this English with Campbell?\"\n\n\"Yeah,\" he glanced at me dismissively but then did a sharp double-take. I had expected a tremulous voice but got a strong one instead. He wasn't subtle in his perusal, a light blush of embarrassment, or was it arousal, staining the tops of his high cheekbones. Slowly and maybe unconsciously, the kid straightened. More of his body coming into view. He was stunning. Honey and caramel hair cut short on the sides and longer on top accentuated his large guileless eyes. He had incredible skin, light and perfect with a smattering of freckles on the tops of his cheeks and lightly dotting over his nose.\n\nI raised a challenging eyebrow as his gaze started to go below my face. I was more than fine if he wanted to check me out. My movement spooked him and he ducked his head down. I wasn't about to let him hide when he had begun to be interesting.\n\nI thrust a hand in front of his face, frowning when he cringed away from it. Ease off, Holt. \"I'm Owen Holt.\" I replaced the frown with an encouraging smile as he glanced back at me. His guileless eyes squinting at me, wary. He hesitated but slid his palm against mine. I only barely resisted rubbing the backs of his knuckles with my thumb. Jesus, Holt, let's not be a total creep.\n\n\"Jake... Jake Summers, are you new around here?\" The question was almost accusatory. A furrow appeared between his brows as he asked.\n\n\"Yeah, I just moved here from Minnesota.\" For the first time, things might have been looking up. Maybe Buffalo wouldn't be a total wash. Jake Summers, I would remember that.\n\nClass started then. I had never seen someone so attentive to a syllabus class. Not even the girl who was taking notes in fourteen colors was paying as good attention as Jake. Not even for a moment did his eyes move to me. A better man's ego wouldn't have been a little bruised but I wasn't there yet.\n\nAs the bell rang, his focus finally broke. I grimaced as I pulled out my phone checking the time. Five minutes wasn't a ton of time between class and Jake was already packing his things.\n\n\"I'll see you later, Jake.\" A shocked smile met my words. I was him through his smile, it was innocent, beatific and absolutely stunning. His eyes crinkled at the corners.\n\nI'll admit that as a teenager, I could get hard from a well-placed gust of wind. But I had never gotten hard from a smile. My cock swelled in my jeans and I had to turn away quickly so he wouldn't be creeped out that I was aroused.\n\nI slung my backpack over my shoulder as I stepped into the hallway. I squinted around the hallway trying to figure out where my history class would be. Height was a definite advantage as I surveyed the arrows painted on the walls. As my peers moved around me, I ignored the slaloming effect and the talking behind hands.\n\nInternally sighing, I reached into my back pocket for the map of the school, unwilling to ask any of the giggling girls for assistance.\n\n\"Hey, are you Holt?\" A deep voice sounded.\n\nI glanced up at the incoming person. \"Yeah?\" A large deep-skinned hand reached for me.\n\n\"What's up, man? I'm Kyle Johnson. I play D on the team.\" I took the hand and shook it.\n\n\"Oh, great. Nice to meet you.\" The swarms of our peers parted around us.\n\n\"Great to have you here. You'll really up our game.\" I didn't know what to say to that, I'd either come off fake or like a dick so I just smiled. \"Anyway, Coach texted me and told me to look out for you. I'm in your history class.\"\n\nAn internal sigh of relief went through me as he started to lead me through the halls. The sigh turned to one of mild irritation as the conversation stayed only on hockey. Now, I can talk about hockey for weeks, spend hours on the right way to tape a stick but for just once, I would have loved to just talk about anything else.\n\n\"So, you did exhibitions with the Wild, right?\n\n\"Yeah, a few.\" Please, any other line of questioning.\n\n\"Did you meet Reese Barton? He has such a sick dangle. I wish I had that kind of handling.\" I only barely resisted checking for a text message. If only Johnson knew just how much I knew about Reese's dangle.\n\n\"Yeah, he's a really good dude.\" I was mercifully saved by entering the classroom as the bell struck. I tuned out the syllabus with thinking about Jake Summers' body. My reprieve only lasted through the class before Johnson started talking again.\n\n\"You want to head over and grab some lunch? Usually, we're allowed to go off campus, but not the first day.\"\n\nReally I wanted to see if Jake wanted to eat lunch with but I agreed to meet my future teammates. Go Cougars.\n\nThe choices for lean proteins were extremely limited but I made do with what I had. Rice, broccoli and a turkey sub would be serviceable for a meal. I noted that my peers opted cheese covered tater tots. Johnson even got some, maybe his huge frame had to do with some mismanaged eating.\n\nA table stood conspicuously empty in the middle of the cafeteria. I wasn't blind to the class politics. I wanted to shake my head at the futility. Why did all of this matter? One more year I repeated to myself.\n\nKyle introduced me around to the team's seniors. Paul Killhorn lacked a personality but his immense body was good for a goalie. I mean, you can block more of the goal, thus fewer scored goals. Gregory Lewis could do with a round of Accutane. Liam Subban really grated my nerves as he asked me about my shootout goal at the Junior National Championship.\n\n\"How did you chose where to shoot it?\" How could this guy not see how uncomfortable I was with talking about it? I didn't want a fan club on the team, I just wanted to be one of the guys. Low profile, I reminded myself.\n\n\"Just watched a lot of game footage, he had a weak spot and I capitalized.\"",
        "As Subban responded crowing about the lead in I had used, I noticed Lewis and Killhorn talking together. Glancing over at a table in the corner. I followed their line of sight and found their attention on the same thing that had stolen mine all morning. Jake looked comfortable, happy as he sat among his friends.\n\nI watched the kid next to him take a rip from a vape right in the middle of the cafeteria. Weed wasn't my thing, but I knew enough players who medicated after a pretty bad game. Subban chattered away but I watched Lewis and Killhorn talk urgently. Only two word floated through the noise of the cafeteria to me, \"dirty fag\". My stomach dropped.\n\nJake stood with his mostly uneaten tray and bussed it.<br> Lewis and Killhorn stood with the same intent that any player had before they threw down gloves.\n\n\"Hey Killhorn, want to play a game of pick up after school?\" I asked, hoping to deviate their attention.\n\nSubban piped up, \"Yeah. That sounds great but we've got to ask Coach. I'll take you over to see the rink if you want.\" As I glanced back to reel Killhorn in, he was gone. I cursed under my breath as the food in my stomach turned to lead.\n\nIt took Subban way too long to finish his food, especially as my heart rate skyrocketed. I needed to be sure they weren't going to hurt him. The second Subban seemed to slow down I broke, \"Want to show me the rink now? Maybe ask Coach if we can play this afternoon?\"\n\n\"Yeah, sure.\" The guy was glacial. I needed to move.\n\nI'm sure any observer would think I was particularly paranoid. I scanned the grounds everywhere we went for any sign of the players or Jake. I couldn't see anything despite the halls being filled. How was no one talking about this?\n\n\"Where did the guys go?\" I asked, saying fuck it to any sort of subtlety.\n\n\"Oh, I dunno know. I'm sure we'll find them around here.\" He sounded so casual. My hands became fists. He had to know.\n\nMy heart skipped as we rounded the corner to the back alley and saw them. No Jake. Where was he? The alley was empty save a dumpster. For fucks sake. My vision blurred as rage took me over.\n\n\"Hey, guys\" Subban yelled to the group.\n\n\"Sup, Subban.\" The group all nodded to me like they hadn't just thrown Jake in the dumpster. Like they weren't all bully assholes.\n\n\"Just showing Holt around\"\n\n\"Yeah, we were on our way to see the rink when we saw you guys.\" I gritted through my teeth with a fake smile plastered on my face. Keeping my hands in my pockets so they wouldn't see the balled up fists, I scanned the back alley. Jake was clearly in the dumpster. As much as I wanted to end things right then, if he was seriously hurt a confrontation between me and the assholes wouldn't help him.\n\n\"Cool man, we'll come too.\"\n\nDramatically, I pulled out my phone as the group started to walk over. I actually did have a text, Reese: unimportant now, \"Oh hey guys. My girl is texting me to call her. You know chicks. I'll catch up.\"\n\nI ignored the cat calls that the group made including the horrific images that Lewis conjured. I shoved my phone in my pocket and began walking over to the trash, fearing the worst when I heard the rumbles of it opening.\n\nHe climbed out carefully, rolling his arm. I let him see me first before I moved, not wanting to spook him even further. He looked distinctly rumpled and smaller even than he had tried to look in class. How dare people make him feel small.\n\nHis eyes met mine as he tactically swept the alley for danger. His lips parted on a gasp before ducking his head. Fuck me. I pushed away from the wall, already going over what I would say to the ambulance dispatch. I kept my anger in check in deference to the emergent situation.\n\nJake jumped from my hand as I tried to look into his eyes. \"Did they hurt you?\"\n\n\"No.\" I didn't believe him for a moment as he stared down at his shoes.\n\n\"Look at me,\" I coaxed, trying not to scare him further. \"Have they hurt you in the past?\" His jaw tightened, his big bottom lip trembled but he said nothing. The stubborn set of his body, so dignified after being dug out of a dumpster, spoke volumes. How could this be normal to him?\n\n\"How did you know what happened?\"\n\n\"They weren't exactly subtle,\" I spat, \"I saw you cross the cafeteria and then immediately they stood up. And then they stood there making casual conversation with me, fucking bastards.\"\n\n\"So what, why do you care?\"\n\n\"What did you think I was going to do? Nothing?\" Did he really think I was just going to stand by and do nothing? How could he think so low of me? My anger surged.\n\n\"No one else does.\" His eyes dimmed, years of pain reflected in their depths.\n\n\"This won't happen again. I'll make sure of that,\" I gritted out. My plan to tell the coach I wasn't playing unless the team manned the fuck up coming together. Although, that was really Plan B. Plan A was to go in swinging and make it clear that Jake was off limits. I couldn't protect everyone, but bullies disgusted me.\n\nHis eyes became angry slits, \"I don't need anyone to fight my battles.\"\n\nMy breath came in an irritated huff, \"You showed you aren't capable of fighting for yourself.\"\n\nHis face melting into anger, his luminous eye flashing. His distracting mouth quirked before he let me have it; \"It's your first day. You've met me once. You don't know me at all. You have no right to judge me on how I handle myself. Now go and leave me alone. I don't need saving.\" I didn't know that someone could be so haughty after they had literally just been thrown in a dumpster. I watched him saunter away, all attitude and defiance. Where had that attitude been when he was fighting? I shook my head wondering how I had become the bad guy in this situation. Even though I was angry, I could feel my cock harden as I watched his ass sway with each step.\n\nHe had been hot when he was reticent in class but when he was passionate\u2014jeez, I had to adjust myself. I wondered what he would be like if that passion was put to better use.\n\nThe rest of the school day was a haze of irritating questions, answering where I had come from, what my name was and the hellish\u2014\"What's a fun fact?\" I grumbled that \"I play hockey\" so I wouldn't have to think of something more interesting. I couldn't stop going back to Jake's face when he told me off. He was so mad, so beautiful and alive. I had to focus myself to keep from getting hard. In other moments I was back in the anger that assholes still threw people in garbage cans. It was such bullshit.\n\nSubban came to pick me up from my Geography class and I resisted saying something or worse hitting him, my father's words about keeping a low profile flashing through my mind.\n\nHitting the rink was the first edge of calm for me. The ice was uncovered and looked well maintained. It wasn't as commercial as many of the arenas I had skated but I liked the mascots painted on the walls and under the ice. Go Cougars.\n\nFor a moment, I wished I had my skates. Nothing cut through the crap going on in my life like skating. Hockey was great, physical and demanding but I loved to skate.\n\nCoach Blevins was nice, a wholesome guy. I wondered why he had such a band of assholes playing for him. He opened up by asking about Mikko Koivu, the captain of the Wild and we just shot the shit about where I wanted to go with my playing.\n\nIn pretty good spirits, I left Coach's office. I glanced at my phone, seeing that I could still get in a nice gym session before it got dark when I noticed the sound of feet hitting concrete. Like he was gliding, Jake covered ground like it was effortless, like he was made to run.\n\nHis hair looked blond as the sun illuminated him. I knew how I looked after a run: sweaty and red-faced, how was it possible that he could look so at peace. Sure his skin shone with a slight sheen of sweat but it couldn't have been more than would cover his body right before he came.\n\nHe looked glorious, determined and attractive and holy hell those shorts were short. I didn't see a tan line as the shorts lifted with each step almost exposing his package. They were so tight and short, like running in boxer briefs. Who the hell was this kid? He's hiding one minute and then showing off the next.\n\nWithout thinking my hand shot out and found his arm. Anyone else would have been pulled off-balance but he gracefully stopped on a dime. The squeal that came out of him would have been completely adorable if it wasn't full of terror. Fuck Holt. The kid was just attacked. Maybe don't grab him. My irritation at my own idiocy turned outward, \"You're on the running team?\"\n\n\"Yeah, funny how we keep running into each other.\"\n\nI couldn't believe it. He's making jokes now, even sucking in air, \"Why didn't you run away earlier?\"\n\n\"Yeah, because that would be manly.\"\n\nManly? Who gave a shit about manly? \"No, it'd be smart.\"\n\nI couldn't see the eye roll but I could sense his eyes go toward the heavens as he turned to face me. I had been trying to ignore how good his skin felt under mine as his I held his wrist. I greedily soaked up his skin as it came into view. All perfect and lightly tanned, his collarbones light and dainty but his traps strong. He was perfect and I cursed the flimsy tank for keeping his skin under wraps. I traced his traps down the edges of his shoulders when deep purple marred his flesh.\n\nMy fingers reached out and traced the bruise. I was no stranger to bruises and cuts. I had been in more fights on the ice than most but nothing was like this. I set my jaw against the rage that boiled within me at the injustice. How could he let them get away with this bullshit? How could they do this? His skin was hot to the touch, his body already trying to repair the damage the bastards did.\n\n\"You said they didn't hurt you.\"\n\n\"Bruises are nothing. You play hockey, would you tell a coach you were hurt if you got a bruise?\"\n\nI wanted to press my palms into my temples to relieve the beginnings of a headache but my fingers couldn't stop soothing the ache away. I couldn't believe he was minimizing this. \"No, but I signed up for hockey.\"\n\n\"I signed up for high school.\"\n\nThe fucking smile got me. This was not the gorgeous smile he had turned on me earlier. This was the world-weary performance that he apparently thought I would buy. I gave into my irritation and rubbed my hands over my eyes, trying to not yell at him for being a martyr.\n\n\"Why are you trying to make this not a big deal?\n\n\"Why are you making this your problem?\" His eyebrow raised, all attitude. Against my better judgment that spark of life went right to my dick. His cheeks were still flushed, he looked so animated. All I wanted to do was kiss that smirk off his face.\n\nThe thought of kissing him brought me back to the problem. Why I was here, why he had bruises. \"I heard them. I heard what they called you. I know they're beating you up cause you're gay.\"\n\nHis eyes grew huge, too big for his face. His mouth dropped open in shock before biting out, \"Because they think I'm gay.\"\n\nFuck me. I couldn't believe it. There was no way Jake was straight. He was either so far in the closet or I had gotten delusional. \"So they're wrong? Why are you just letting yourself get beat up then?\"\n\n\"I'm not letting myself get beat up. They're bigger than me and there's more of them. And what does it matter if they're wrong or right? They think I'm a fag so my agreeing would just make everything worse and if I deny it like I have that does nothing. What does it matter, Owen?\" He was actually yelling at me. I hated that he used that awful word, one I heard too often on the ice as a kid.\n\nHe was so close to me, my dick pressed against my jeans. \"Believe me, it matters.\"\n\nHis eyes searched my face for a long moment. He crossed his arms and muttered, \"Yeah, I'm gay.\"\n\nA genuine, encouraging smile broke across my face, as lust blew through me. I had been sure but his confirmation was all the sweeter. My fingers traced his jaw as I breathed, \"Thank fuck\". He jolted as my lips touched his and I gave him an out I really didn't want him to take. As ever, he surprised me. His lips opened, inviting me in with a clean, masculine taste all his own.\n\nJake's hands slid into my hair, no wilting flower. He tugged at the roots bringing our lips closer together along with his hand at my neck. The first touch of his body against mine was heaven. He was all lithe muscle, hot and aching for me. Pre-come soaked my boxer briefs as my hands stole down his turgid back to an ass that would haunt my dreams.\n\nBeautifully responsive, Jake arched into my hands, filling my palms with his luscious ass covered in those damn silky shorts. As I cupped his ass, our cocks rubbed together in front. The caveman part of my brain demanded that I mark him. Jake gasped as my lips left his to trail my lips along his neck.\n\nJake's hand slipped down to my chest and I couldn't resist flexing for him, making my chest bigger for him. I was rewarded by him tweaking my nipple. With a growl, I caught his lips again. Who was this man? He was all contradictions but I didn't give a shit as his teasing fingers ran around the nub.\n\nI had to stop myself before I took him on the sidewalk. We were dangerously close. With a weak chuckle, I lifted my lips from his and took a small step back creating a gap, \"Did I tell you I was a big fan of your uniform?\"\n\nJake blushed, innocent even as his dick pressed obscenely into the tight, shiny fabric. The outline and the wet spot was entrancing, and I had to focus on his face so I didn't get a closer look.\n\n\"Yeah, I can see you're a big, big fan.\"\n\nWith a prayer for sanity, I kissed him. \"You really don't want to talk about my cock right now Jake. We're at school but that won't stop me from fucking you.\" He laughed, thinking it was a joke. It was not a joke. Fuck a low profile.\n\nPeeking a sultry look through his eyelashes, Jake murmured, \"I don't want to talk about your cock. There are so many better things to do with it.\"\n\nI couldn't help the laugh, even though it was pained. Who was this kid? Where did the man who was sunken in his chair go? I certainly wasn't complaining about the 180 but I was shocked to my core. \"You're trouble.\" I'm in big trouble. My dad's words echoed in my head. I need to keep a low profile. But how could I possibly do that with this kind of temptation \"While I can think of a million better ways to get you sweaty, you should finish your run. I'll see you tomorrow Jake.\"\n\nI turned away stiffly, my cock pressing painfully against my stomach. For the first moment, I didn't think fuck Buffalo. I didn't wonder if Reese texted me\u2014I didn't care if he never spoke to me again. I didn't even think about my dad's low profile.\n\nI was actually excited to come back for my last year of high school.\n\nPresent Day\n\nJake was trouble, the best kind of trouble. The kind I wanted to get in every single day. I hadn't regretted a moment with him. My hand fished around in my pocket as I prayed. I closed my eyes and wished for us.\n\nThe velvet box felt heavy in my hand as I turned to him. The sun broke over his skin as he took in the wonder of our surrounds. I couldn't help myself, reaching for him and putting all my love for him into a kiss. All the love I had for him from the first day had only grown. Who is this man?\n\nWith a deep bracing breath, I sunk to my knee in front of him. I would have prostrated myself on the ground if I thought it was necessary. His mouth fell open immediately as I showed him the box in my hand. A tear fell silently.\n\nHis hands covered his mouth as I began to speak. \"I wanted to show you the horizon Jake; I love you more than anything down below. Anything you see and want, I'll spend my life making it happen. I don't want to spend another sunrise without you, will you please do me the honor of marrying me?\"\n\nFor the longest moment, worse than his injuries, worse than when he cut me out of his life, worse than any moment imaginable, he said nothing. I couldn't breathe, I should have gone bigger. I should have asked in front of the world, at the All Star game. Maybe I should have done it in front of our parents. Panic set in for the longest moment.\n\nAnd then he smiled that smile, the one just for me. The one that cemented him in my life. Glorious, blinding and so full of love. \"Oh god, yes. Yes. Yes, forever.\"\n\nOverwhelming joy burst through me as I launched to my feet and caught my fianc\u00e9 around his waist, spinning him around in the air. This was all I ever wanted. Him. I loved his kind heart, his intelligence, his undying ability to call me on my shit. All the commercials, the games, the money, the fame: nothing was worth it without him. I would stay in Buffalo as a salesman if I could have him.\n\nHe cried when he saw the ring and the small diamonds shone from around his finger. He shone brighter. I tweeted out a picture of him kissing me with his newly adorned hand holding my jaw. I wasn't going to have the world not know he was mine for another second, mine forever. "
    ],
    "authorname": "evolvingslowly",
    "tags": [
        "hockey",
        "athlete",
        "gay romance",
        "gay college",
        "high school",
        "coming out",
        "first time"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/hooking-the-hockey-player-owen"
}