{
    "title": "My Only Talent Ch. 29",
    "pages": [
        "Is It Better When Her Husband Watches?\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's schedule.\n\n*****\n\nWhen Lara and I walked into the front door at the Lillehammer's, there were three big Suzie signal wave fronts: one of the 'female herd envy' variety from most of the other women there; a second massed 'male desire' signal from most of the men, and a single clarion 'I want it all' signal from Veronica Tappert. She really did: she wanted Lara, she wanted me, and she also wanted most of the men and women there. She was a much stronger sender than Suzie Packard from my old neighborhood ever was. Perhaps I could have heard her clearly even before Suzie made me feel so watched and nervous back in junior high school. \n\nIt was no trouble at all to see her 'black box' sexual data history, or her fantasy channel - they were broadcasting so strongly that it actually would have been impossible for me to shut them out. She truly was devoted to her husband - in her own special way. He was totally focused on her - his only sexual interest - and he liked to see her with other people first to get him fully aroused. She plotted and planned to give him new and novel visual stimulation and not coincidentally, give herself some new and galvanically exciting experiences. \n\nWhat was surprising was the relative infrequency of their little shows. They only happened once or twice per year, although they were certainly easily seen as highlights in her record, and the rest of the time she acted as his academic taskmaster and Dominatrix, seldom allowing him any release at all. What was it she said about offering her husband discipline and incentives? Perhaps he only got some real action when he had completed some goal? Was that what she meant by 'helping him accomplish so much'? I noticed something else - each 'co-star' appeared only once - there were no repeat engagements. So far there had only been one co-star at a time, but Veronica's fantasy channel images made it clear that she had plans to go well beyond that.\n\nOiler had told me a lot of what he heard about Rodney \"Red Rock\" Tappert. He was a wunderkind in some of the obscure specialties within photonics, an engineer by training who at the age of 19 (while a very youthful PhD candidate) butted heads with the theoretical physicists about what was and was not possible in photonic circuitry. They initially laughed at him, but he was twice proven correct, and later advanced theories of device operation that explained the observed performance beyond previously accepted limits, and those theories had yet to be disproved. The physicists should have thanked him for providing such fertile new ground for publications and grant applications, but they still insulted him by saying he had 'rocks in his head' and naming the two new theories for the physicists who first tried to disprove them, rather than the hated (and now Doctor, and tenured full professor) upstart Tappert.\n\nLara quickly scanned the room and found the only person there she had met before; our host, Dorothy Lillehammer, and she made a beeline for her. She was standing near their patio doors with Veronica Tappert and a short, young looking red-headed fellow that I took to be her husband, the aforementioned Dr. Tappert. He didn't look even 23. I bet he would get carded at every bar in town, and his probably perfectly valid ID often challenged as a fake. He had a full head of wild and curly red hair, and enough freckles for any three people. His eyes were light blue, and blazed fire from across the room, sparkling and bubbling with energy. He looked like the guy in 'Napoleon Dynamite' with even redder hair and much bluer eyes.\n\nWe approached the trio, and Victoria's Suzie signal was almost painfully strong. As Dorothy Lillehammer made the introductions, Victoria could not take her eyes off Lara. Neither could Dorothy. Red, however, was not interested in the least. He really did only have eyes for his wife.\n\n\"I am very pleased to meet you, Lara!\" Victoria began. \"This is my husband, Rodney Tappert. Everyone calls him \"Red\" for obvious reasons. \"\n\nLara fixed them both with a gaze. Dorothy Lillehammer took Lara by the arm. \"I want to introduce you to some other people, and ask you a few more questions about the care and feeding of my husband.\" With that she laughed nervously and steered Lara around the corner and out of sight. I suppose I need to take up the conversation.\n\n\"Robbie Roberts, Dr. Tappert. Welcome to Austin.\" I offered my hand. He smiled thinly, and shook politely. \n\n\"Hello Roberts. You are an engineering student and one of the new UDT members, eh? Dr. Lillehammer says he was pleasantly surprised by your grasp of basic math, and I hear your project management expertise is well above average, too. So, I have very high expectations for the scope and inventiveness of your prank. Amaze me, Mr. Roberts! Surprise and impress me. If you can, that is. \" \n\nEmphasis on the 'if' and 'you'. My first tendency had been to like this guy, but now I found myself bristling at the condescending tone he was giving me. \"I'll do my best. How long have you known the Lillehammer's?\"\n\n\"He was an associate professor when I was an undergrad, and my wife was friends with Dorothy even before that.\" \n\nI waited to see if he would fill the silence. Finally he did.\n\n\"I tend to be pretty open and straightforward in my dealings with everyone, Roberts, although my style sometimes rankles people. Veronica told me about her conversation with you at the Honor Roll reception. How do you feel about pornography, Roberts?\"\n\nWhere did that come from? \"I sometimes feel overwhelmed by my roommate's obsession with certain porno websites. I don't find it as interesting as he does, but then he aspires to be a filmmaker.\"\n\n\"I find one and only one particular kind of pornography interesting: the live show kind that features my wife as the star. Anything else leaves me totally cold. But then she understands me completely, and she sometimes puts on a little show for me, just the right kind of thing to get me excited. I quite approve of this. I wanted you to know that, before you have further conversations with her about it. And don't forget: I expect a stunning prank!\"\n\nI paused for a moment as my inner punster twisted stunning pranks into cunning stunts and stunning cunts. Get hold of yourself, Robbie! \"I will endeavor to amaze, you, Professor,\" I said as politely as I could manage. My inner voice ran on. Boy would I. Get ready for it, you conceited little prick! Maybe I could spend some time trying to listen to his signals instead of Veronica's and figure out his worst fears, and make them happen? Would they mirror Veronica's biggest turn-ons?\n\nI moved around and took in the rest of the people here. I recognized a few people from some of my classes last semester, and two guys from the co-op engineering meeting, but most were new to me. There were some young guys (but no young girls) that I took to be recent grads, now employed, who were there to pitch prospects for their new employers. There were some older men and women that I assumed were there to recruit potential employees, or else they were professors I had not met. I heard my father's voice in my ear. Mix and mingle, Robbie. You never know who you might meet. Plus I want to listen for a little more detail on Veronica's fantasy carrier. \n\nWhile I mixed and mingled, I watched Lara out of the corner of one eye. Most of the guys ogled her, and most of the young girls hated her. But most of the older women were very cordial to her, perhaps thanks to Dorothy Lillehammer's introductions. Every time another guy looked at her, though, it got me a little hot under the collar, and a little harder between the legs. Between introducing myself to people I did not know and discovering our degrees of separation, I was getting crazier and crazier to nail Lara. \n\nAbout an hour later Lara appeared at my side and gave me a very hot look. \"Hey sailor! I am looking for a cute guy to take me home. Are you the one?\" \n\nEveryone thought I was giving her a tender hug, but I actually bit her earlobe and hissed in her ear \"I am the one and only guy for you, Lara. You are mine!\"\n\nShe giggled as I steered her back out to my car, with one arm twisted up behind her back. We made it back to her place in record time. I didn't waste any time with the trapeze or any of her toys. \n\n*******\n\nSuddenly it was Friday morning, and the early alarm meant our first 0700 hours weight lifting session in Saskia's conditioning class rather than the dreaded aerobic routines of Monday and Wednesday. I dressed out and headed down to the dining hall for breakfast. About halfway down the stairwell, an email alert from someone on my VIP list sounded: Dr. Asa Weltschmerz, M.D., PhD. etc. I was invited to his 'brown bag' faculty lunch seminar at the med school next Tuesday, and I was further directed to bring one Dr. Saskia Grandael, PhD., as my \"date\". I read the particulars of the academic presentations, which meant almost nothing to me, as I went through the food line and loaded up my plate. At least I would have something to talk to Saskia about. \n\nMy head was still down looking at my smart phone (guilty of texting while walking) trying to puzzle out what Asa's seminar title of \"Volitional and Non-Volitional Neuro-Electrodynamics\" meant as I made my way to one of the few open seats in bit of a fog. When I looked up, I realized I was seated next to none other than Jean Nancy Percer, who flashed her blue eyes in surprise, but sent no Suzie for me. I suppose I had to have my family's financial statements on file to get a rise out of her, but I wasn't sure they would meet her screening criteria. \n\nI gave her my best smile and then an unmistakably sexual leer. \"Good morning, Jean Nancy. You look wonderful.\"\n\nShe smiled, a little self-consciously, but still sent no Suzie. I wanted to see how she reacted to someone who very frankly and openly wanted her, but upon whom she had no financial information. Nothing heard, Suzie wise, but she did put her chin up and stick her magnificent chest out a little. I vowed to keep working on her. Perhaps it would be scientifically interesting to listen to her Suzie with and without promising financial information. If she had two equally wealthy guys on the hook, would she send more Suzie for one than the other? Would that be her 'natural' Suzie rather than her pecuniary Susie? What about a wealthy guy who did not want to marry her? I stuffed my face with breakfast while trying to make some headway with her, then gave her a fond farewell and exited the dining hall, turned right, and headed down the hill for the bowels of Belmont Hall, Saskia's chosen venue for our weight lifting sessions.\n\nI arrived right on time, entering the big room full of high tech machines just as Saskia began taking folks in alphabetical order and setting them up at their assigned stations on individual lifting machines, attaching a clip of some kind to their ear, and giving them specific instructions as to speed and number of reps to be completed in their exercise. Since Roberts was a ways down the alphabet, I had a few moments to gather my wits about me. I noticed the ear clips had little antennas on them, and that a section of the large screen display on the wall lit up as each person began their workout. Data collection with microcontrollers - human physiology edition. \n\nSuddenly it was my turn - high speed, mid resistance free weight curls, 30 in 45 seconds or less, 4 sets of, with a 15 second rest in between sets, and I was to look up at and note my heart rate as displayed on the monitor at the end of each set. Saskia danced off to the next victim, er, ah, student, and the world began to blur around me. Lots of frantic motion and gulpy breathing ensued and my heart rate soared, and the display screen was now full of moving graphs and numbers. In a few minutes we all moved one machine counterclockwise, and each told the new occupant of our 'station' what to do. Then the whole process started over again, with even more grunting, gulping and breathing. Then it repeated, again and again, like a hyperactive game of musical chairs. \n\nForty five minutes later, my heart rate was just as high as during the aerobic work, and I was breathing like the little engine that (maybe) could. I had fared better than most - a few dropped out of the rotation. Saskia led us all in a little cool down dance, and then mercifully announced we were free until Monday's class. Every else fled immediately, but I walked up and fell into step with Saskia.\n\n\"I wanted to ask you to lunch next week, Saskia. Actually I have been virtually ordered to.\"\n\n\"I'm not so sure that's a good idea, Roberts. I don't like to be overly familiar with my students.\" She gave me a challenging look. \n\nI put my lips so very close to her ear, and spoke so only she could hear. \"We'll wait until the end of the semester when you are blindfolded and restrained before we get truly familiar, my pet.\" She gasped involuntarily, and sent a burst of hot Suzie. Hooray! \n\nI stood back up and spoke in a normal tone. \"But for now, we are invited to a brown bag lunch hosted by Asa Weltschmerz, about something called 'neuro-electrodynamics.' Sounds good?\" \n\nShe stopped and looked up at me with total shock on her face. \"You mean his lunch with the author series, with Dr. Augie?\"\n\nI held up my smart phone with the e-invitation on it. She stared, open mouthed. \"Holy Shit, Roberts!\"\n\nI smiled. \"So you'll go?\" \n\n\"Go? I would kill to get in. Most of the tenured faculty doesn't even get invited! Dr. Augie is on the very short list for the Nobel prize in medicine.\"\n\n\"Okay then. I'll meet you outside of the Greg gym entrance across from Jester Tuesday morning at 10:00 so we can walk over together. He wants me to stop by a little early for something.\"\n\nShe stayed frozen in place as I kissed her on the cheek and headed up to my room. I was certainly planning to enjoy the rest of this semester, especially Saskia, right at the end, so to speak. \n\n*******\n\nThe first meeting of my Linguistics class last Tuesday had been a walk - the professor was out of town. I did my running routine early without giving it a second thought. The second class meeting, Thursday, consisted only of the TA walking in, putting a URL for the class 'electronic blackboard' site up on the whiteboard in the classroom, and giving us another walk. I did my running early again. It looked like a major blow off class to me. I had chosen this particular section as the only elective that I could possibly fit into my schedule, and the professor was brand new to ESU so there were no course reviews or faculty evaluation data available. My problem was that it was now Friday afternoon after my last class and I was just now looking at the URL the TA had posted. \n\nThere were of course reading assignments from the textbook, and I was already way behind. But then there were links to at least a hundred scholarly articles in journals both mainstream and obscure, and single chapters in a dozen other textbooks placed on reserve in the library. There was also a sign up area for 'study groups' to review and discuss all those materials. I smelled a trap. Just my luck to happen onto the only new to campus professor with the nightmare syllabus. I suppose I mustn't let myself get any further behind. \n\nMy plans for tonight were pretty informal and flexible. Suzanne was playing soccer against a team of nurses at Southwestern University up north in Georgetown, and Lara was going to an evening make up section for a class she had to add late. They would let me know when they finished up and see if we could get together later at Lara's. I started on the linguistics textbook chapters. I usually read pretty fast, but this stuff was really dense. I made one pass through what was assigned for this week and then took a break to go down to dinner to make sure that my brain was properly fueled before I continue my formal introduction to the study of language. \n\nI was surprised to find both Kevin and Orinda already in line, relatively close to each other. The dining hall was pretty crowded and as I greeted them and joined the line we all just kind of fell in together and ended up sitting at the same table. I tried to get them talking to each other. \n\n\"Orinda, did you know Kevin is casting his first film?\"\n\nShe was way ahead of me. \"His whole damn RTF class is doing that, Robbie. I have already been offered two roles: Queen Nefertiti and Cleopatra. I turned them both down. Too damn old hat and predictable, not to mention the damn type casting thing.\"\n\nKevin didn't miss a beat. \"My film is decidedly different: high camp science fiction parody. I am casting for the role of a straight-laced Vulco-Romulan Star Fleet officer who saves the Enterprise by seducing the villain but then due to post traumatic stress develops a sex addiction problem and becomes a frantic interspecies nymphomaniac. You would be perfect!\"\n\nOrinda looked fascinated. \"You can't mean Lieutenant Saavik?\" Who knew Orinda was a Star Trek nerd? Certainly she had to be the most beautiful one that ever lived. \n\nKeven launched into the rationale for his parody and the major scenes. I thought it sounded like bullshit, but Orinda apparently liked it. \n\nShe suddenly interrupted him. \"Would I have to appear nude, or do sex scenes?\"\n\n\"You can if you want to, but you don't have too.\" She looked skeptical, but Kevin went on to explain his production design, shooting XXX, X and R rated versions simultaneously and then editing three different final cuts. \"I can find a body double for the XXX scenes, or I can make sure that your face is always obscured in the final cut of any explicit scene. But I have to tell you, I am never going to find a suitable body double for you. Your ass is spectacular, my dear. I'll never find one that the camera will love like yours, and your face is even better.\"\n\nI thought that would put Orinda off, but as usual, she surprised me by launching to into an obvious Hollywood style negotiation. \"I'll do the R rated nude scenes if you use a body double for the X and XXX stuff, as long as I get full creative approval of what my character says and does.\" She looked at Kevin for his reaction. Poker face. \n\nFinally he spoke. \"I need you to do the X scenes in addition to the R. I'll use a body double for the XXX. We can agree to the script before shooting, but I won't allow any changes after we start shooting.\" His poker face versus hers.\n\n\"Only if I get top billing, above the title, in the R and X versions, and the XXX version gives my body double full billing, to make it plain I am not in those scenes.\"\n\nKevin paused for just a second, then extended his hand. \"Welcome aboard, Orinda. Robbie, you were there for the making of a star!\"\n\nWhat a bull shitter. But I knew there was no way even Kevin could make Orinda look bad on camera. Maybe it would get her noticed by someone who could really help her. It wouldn't help me with Linguistics, though. They began discussing the script in some detail. I excused myself and went back up to the room to hit the books. \n\nI thought Linguistics would be memorizing historical lists of dead languages and other dry stuff, but it wasn't like that at all. It was everything from basic building blocks common to all languages to what particular areas of the brain were currently thought to allow humans to develop and use language, and lots of debates about what part of the human anatomy did what. That was getting into Asa Weltschmerz territory, and kind of interesting to boot. I knew about bicameral legislatures from history class, but what exactly was a bicameral mind?",
        "I worked through the linguistics textbook again, and skimmed about a quarter of the journal articles. A text beeped in from Saskia, beginning by thanking me for the invitation to the brown bag lunch, and then offering me one and only one time slot for my weekly one on one training meeting with her. She did not acknowledge or respond in any way to my previous ribald suggestion of Thursday nights at her place, but rather specified Thursday afternoons after my other classes, beginning next Thursday. I accepted, set my alarm, and was promptly out like a switched off light. When the evening texts from Lara and Suzanne arrived, I slept right through them and all the nookie potential. Dummy.\n\n*******\n\nLara finally finished her review session at Burdine Hall even later than she thought, and then trudged southward alone across campus to make her way back to her apartment building on Lavaca. She had to pinkie promise to attend each and every make up session before the prof would even consider letting her add the section, which was already officially full and closed, but she had to have it this semester to make her plan work. She pulled out her phone and saw a message from Suzanne saying her under the lights soccer game was running very late, and she did not expect to be able to make it to Lara's apartment tonight in time for some fun with Robbie. They would both be tied up Saturday night, while Robbie took Candy, their new prospective trainee, to the UDP sock hop, and Robbie and Suzanne were going to their Sunday dinner with Strelsa and G\u00fcnter for their 'swap fest', as Lara called it when she teased Suzanne about it. \n\nLara was still on a natural high from having Robbie all to herself all night after the reception at the Lillehammer's. He had fucked her brains out, and she liked it. Before Robbie, that phrase was just a concept for her, but now she knew exactly what it meant, and she wanted it again. They were having a slumber party at her place next weekend, either Candy's first training weekend, or with just the three of them. She focused on her long term plans, and why she had changed her degree plan and class schedule. Stick to the plan girl, and make it work. She made a grilled cheese sandwich for herself, and curled up with her new syllabi. They were as effective as a lullaby, and she fell asleep thinking about Robbie.\n\n*******\n\nDwight was making progress in his California corporate counter intelligence assignment, despite the meddling of his worry wart supervisor, Roger Sherman. The C-level executive team at his new company had been assembled hastily, with many of the hires being made by the VC firm that had led the investment round rather than the new, first time scientist/CEO. That usually meant they each had great resumes on paper, but may or may not have the team chemistry that would be required to succeed. At least he had names for them all now, and could begin his in depth research. In Dwight's job as a coder, he would normally not meet most of them, but he had to make a special effort to meet them face to face in addition to learning everything he could online. His first roadblock was the new 'digital strategist' who had taken over all their social media accounts to make sure they projected the proper image to the investment community.\n\nThe company was mostly marketing itself for further investment right now, and not to potential customers, but Dwight knew that would have to change, and soon. The CEO was a mathematical physicist in his late forties who apparently had great familiarly with the algorithms that made the company software tick, but knew almost nothing about the people who would actually use the product, nor commerce in general. The biggest team the new CEO had ever managed before was two other post docs on a piddling NSF grant. Dwight saw some real trouble ahead, even absent any problematic foreign intelligence penetrations.\n\nHe was spending Friday evening at work setting up his new office properly, which thankfully let him dodge dinner with nosy Roger and also gave him the opportunity to snoop some of the networks and facilities he would need to burrow into. It also let him know who else worked late and why. The uniformed janitor that came in to empty the wastebaskets paid no attention to Dwight and spoke rapid Manila style Tagalog into his telephone while he worked, and Dwight could follow well enough to glean he was arguing with his wife about whose turn it was to go grocery shopping after work tonight, not distributing secret company information. The new marketing director, who reported to the high flying VP CMO and probably did all the real work, was still in her office down the hall with the door closed. It only took Dwight a few moments inside the company network to surreptitiously activate the webcam in her tablet, and learn she was revising and rehearsing a marketing strategy pitch for the next BOD meeting. Dwight copied the pitch and all her Skype contacts while he was at it. According to her speaker notes, the main points of the presentation had been dictated to her over the phone by the CEO, who fancied himself a marketing genius, but it was just awful. Dwight felt sorry for her. She had to make it good, and factual, and still make the CEO think it was all his idea.\n\nDwight had carefully crafted his at work personae: very bright, nerdy but approachable, and sexually metamorphic. He wanted people to puzzle over his orientation, and wonder whether he was coming on to them or just being naively open and friendly. The marketing director was going to be his first test of how effective it was. He quickly reviewed in his mind his dossier on her and then banged on the door. She opened it immediately, appearing simultaneously surprised and irritated. \n\n\"Hello, Miranda.\" He slipped past her through the door. \"Nice office. I'm Dwight Dewitt, but everyone calls me DD. Seems we are both burning the Friday night oil. I'm going to order some Thai for dinner. Can I recruit you as my partner in crime?\"\n\nShe relaxed a little. \"Miranda Lassiter. People usually call me ML.\" When she opened the door she had planned to dismiss him as soon as she could, but she was struck by the coincidence of their common liking of Thai food, and she was hungry. \n\nIt was no coincidence. Dwight had analyzed all her expense account credit card receipts for the last two jobs she had, and she had some clear preferences. He started his sell job, talking a mile a minute. \"I just moved here from Austin, so I am learning the takeout lay of the land. The place that looks best on Yelp closes after lunch, but I found one place I want to try that has Po Tak soup and pumpkin curry shrimp. Okay?\"\n\nShe smiled. Perfect choice.\n\n*******\n\nSaturday morning found me unusually horny after my celibate Friday night. Filled with new resolution, I jumped out of bed and almost fell down again. Saskia's weight lifting session had generated a lot more soreness than the aerobic sessions ever had. My chest and shoulders were silently screaming and probably had a temperature several degrees higher than the rest of my body. My whole upper body felt funny and a little off balance. Not a good start for the dance tonight.\n\nGoing down to eat breakfast loosened me up enough to encourage me to get my sprinting done. I changed into my running togs and hit the track. I must have slept thought some really noisy parties due to my early bedtime last night - there was almost no one else around. My upper body still felt heavy and out of balance with respect to my legs - it was weird. I made an extra effort on my final two sprints and got a real burn, and almost a runner's high, but still very different from long distance running. I took a shower and put on my best 50's style Levi's 501 jeans with a white cotton tee shirt and some retro all black Converse All Stars, the uniform of the day for a sock hop, and headed over to the UDP port to hang out and catch an early lunch.\n\nOiler was in the great room along with Cisco and some of the other guys. One of the most amazing things about joining UDP was getting to know a few of the guys better, and some of the very surprising things I learned about and from them. Oiler, in addition to his mathematical ability and gear head engineering bent, was a budding spiritualist, taking Gretchen on dates to s\u00e9ances and paranormal investigations. I thought he would be a skeptic - actively denouncing such things, but he was 'reserving judgment' and 'gathering data'. Gretchen was actually more skeptical than he was, but said the new events were more fun than the monster truck rallies and car stereo dB contests they would otherwise be going to. \n\nCisco and Mei Ling were a real hoot as a couple. Mei Ling did a killer imitation of the \"Me So Horny!\" Vietnamese hooker in that Full Metal Jacket movie, complete with black leather skirt and red halter top, although thankfully she dispensed with the dangling cigarette. After she wore the outfit to a 70's themed party at UDP, it became her code phrase for telling Cisco 'let's get out of here'. When she had a few drinks, she would also whisper things like \"Hey GI Suckee Fuckee Two Dorrah\" to him. He said they knew it was horribly politically incorrect, but it got them both hot as hell. I suppose Mei Ling could just beat up anybody who objected. Suzanne said she was at first worried that having a steady guy might take the edge off of Mei Ling's martial arts mastery, but the opposite was true. She was now totally relaxed, confident and grounded and so she reacted purely on her training and instinct, not emotionally. She was much more effective than ever before. \n\nThe biggest surprise of all was my old junior high buddy Ralph. He was kind of the quintessential nerd in junior high, and he had changed a lot since my then memories of him. His ego was now ascendant, but I suppose having two girls as hot as Big Liz and Little Marilyn in your bed at the same time several nights a week would make any guy a lot more confident. His immersion in the ESU physics department just confirmed his sense of belonging and self-worth, totally making up for not getting the full ride at Cal Tech, and gave him ample objective evidence that he was a player, intellectually speaking. He also had some interesting hobbies. He had moved from the dorm to the UDP house for this semester, filling his small room with his humongous collection of vinyl LP records, a turntable, and an 'Antelope' amplifier with some wild giant black headphones. He said the room was way too small for any proper speakers. I had heard of some of the artists, but none of the songs. He put the headphones on my head and cranked up something called 'Farewell Aldebaran' - I suddenly thought I understood what LSD was all about - but with fewer side effects, I hoped.\n\nRalph was a freshman, and like all freshman fraternity boys, he participated in a lot of sophomoric discussions. The UDP house variety was a little different than most, though. The average IQ was at least two standard deviations above the mean (for college students, not just the entire population as a whole), and people like Ralph and Oiler actually understand some of the things most people just talked through their ass about, like cosmology and quantum physics. I usually just listened and tried to keep up. This morning, I sat down in the great room just as another wide ranging discussion was starting.\n\n\"The next generation of solid state storage will put 32 terabytes of data on a little USB stick, not just 32 gigabytes.\" Oiler opined.\n\n\"Pretty good density\" said Cisco. \"I hear DNA based storage is the next breakthrough beyond that.\"\n\n\"The human brain beats them all, especially mine.\" Ralph chimed in, accompanied by a chorus of groans. \"That 90% of the brain that most people never use is probably a giant FPGA and memory store, plus maybe a QID.\"\n\nOiler looked thoughtful. \"Quantum Interference Device, eh? I thought that required liquid nitrogen chillers and exotic materials.\"\n\nRalph was just getting warmed up. \"At the current crude level of technology, maybe. But we know that enzymes can easily carry out reactions at body temperature that need much higher or lower temperatures otherwise. And some theorists believe that the brain might be capable of functioning as a quantum computer, carrying out things like spooky action at distance, and perhaps directly manipulating the quantum state of individual atoms, which might provide a scientific explanation for telepathy, telekinesis, and clairvoyance.\"\n\nOiler sat up. \"Edgar Cayce was a QID?\"\n\nI couldn't resist chiming in. \"I have been invited to a seminar on Quantum Neuro-Electrodynamics.\"\n\nRalph and Oiler both dropped their jaws in shock. They were lucky there were no flies buzzing around. Ralph, as usual, spoke first. \"Right Robbie, sure you are. Just who is speaking at this event?\"\n\n\"Dr. Augie, and a few other folks.\"\n\n\"You're kidding! That guy is the new Roger Penrose. I don't think anybody in the physics department even knows he is coming. How in the hell did you get invited?\"\n\nI yawned. \"It's at the med school. One on my football buddies over there sent me an invite. I even get to bring a date!\" I casually displayed the e-vite my phone. \"I am taking a really fantastic PhD physiologist post doc that I know. Maybe a seminar like that will get her all hot?\"\n\nOiler laughed. \"It takes all kinds to make a world, doesn't it, Ralph?\"\n\n\"Will wonders never cease? Let us know if you understand a word that is said Robbie!\" They both guffawed. \n\nLaugh all you want, guys. I might not understand the physics, but maybe I understand how to do the deed. Maybe that was how my Suzie Signal receiver worked, and why Asa Weltschmerz invited me. I would have to remember to keep my ears open and my mouth shut.\n\nThe announcement of the noon meal broke up the discussion. Lunch was a make your own sandwich buffet out by the pool designated as a 'mixer' with a sorority. Attendance was excellent on both sides. Ah, the rites of spring. I got in the spirit of things and had my lunch poolside without my tee shirt, and besides evoking a few Suzie signals from some of the new sorority hotties, I noticed that even the girls that didn't send any Suzie were still checking me out a little more than usual. What's up with that? \n\nAfter lunch the spring pledge group was pressed into service setting up the decorations for the 'sock hop', and that gave us the opportunity to discuss our planned prank. Somehow I was designated as prank leader, and I realized that I would have to design a two level prank plan - one for public consumption and one for the sexually charged surprises I had promised myself to give the little prick, er, ah, I mean, our honored professor and his wife. Based on their history, I would only get one shot (so to speak) at the lovely and exhibitionistic Veronica Tappert, and I needed to make it unforgettable for us all. If I could somehow maximize her excitement and his humiliation it would be doubly perfect. I listened to several conversations while we worked on the decorations, and an idea struck me.\n\nThe SXSW conference was coming up, with lots of people coming to town and lots of events filling the hotels, clubs, and restaurants. One of the popular charity fund raising schemes was a series of public (and usually videotaped) 'arrest warrants' where the local sheriff and constables would publicly arrest local politicians, executives and visiting celebrities and philanthropists and release them only after they had donated to the proper charitable cause. This could be phase one and our public cover story, but I needed to get really creative for phase two.\n\nBy this time the decorations for the sock hop were ready with plenty of time to spare, and the DJ was setting up and testing his sound gear. More importantly, dinner was served. I ended up sitting with three of the sorority mixer girls, two freshman and a sophomore, and two UDP seniors. The food was very good, the girls were pretty but sent no Suzie for me, and the conversation was mildly interesting. I started listening distractedly while I thought about Candy's training plan, but I soon got more involved.\n\nOne of the freshman girls from my table asked me to dance, and we threw off our shoes and sock hopped to Chubby Checker doing the Twist. Although the girl sent no Suzie for me, she was attractive and a very good dancer, and I was a little miffed when someone else cut in. I moved over closer to the refreshments tables, where there was beer, UDP punch, and fruit juice and Diet Coke for the non-drinkers. UDP punch did not have the reputation that preceded ZZZ Instant Stripper, but it was an effective inhibition reducer. I positioned myself so I could watch both outside doors for Candy's entrance. \n\nMy attention was soon drawn to a young lady that was definitely not Candy. She was standing between the refreshments table and the dance floor, watching the dancers and moving her feet a bit, holding one of those little cans of pineapple juice. She was not classically beautiful, to say the least. She was short, with plain brown hair cut short. Very short. My sister once had her hair dyed in a strange trendy new salon, and owing to some sort of adverse chemical reaction, it turned several different weird colors and twisted itself up in strange and unattractive ways. She went back to her trusted old colorist, and the diagnosis was death. They had to cut it all off at the roots and start over. Her hair was very short for the next few months, and she did find it convenient, because she could just shower and towel off and be done with her hair. Perhaps this was the motivation behind this girls cut. I assumed that it if it was some sort of radical lesbian statement, she would not be tapping her toes at our mixer.\n\nThen she turned and glanced in my direction, and my heart skipped a beat. Plain brown, almost yellow eyes, but with sparkling starbursts and laser highlights. Swirling twirling complex light patterns sent a message to those lucky enough to be able to read it: there was a lot going on between her ears. She glanced at me and a pulsing Suzie signal bloomed out and dominated my senses. It was hot, almost coherent, and all for me. My pledge training routines kicked in and I approached her in my UDP Ambassador mode, extending my hand.\n\n\"Hi, I'm Robbie Roberts. Thanks for coming to our mixer!\"\n\nShe stared at me wide eyed, then recovered, affecting a wide smile and a vigorous handshake, looking me right in the eyes and moving a step closer. \"Jerri Hart, from Hallsville, Texas. Pleased to meet you.\"\n\nIt was every bit as much a rehearsed stance and canned comeback as my introduction had been. I smiled, but not too lecherously, I hoped. \"Let me guess. You were a cheerleader, or a 4H hostess?\"\n\nShe smiled shyly. I was enchanted. \"Girl's State Delegate. I got to be the faux lieutenant Governor for a week, and had to introduce myself to everyone over and over. That little routine became a stereotyped reflex, I am afraid.\"\n\nHallsville was in East Texas, just west of Shreveport, Louisiana along the IH20 corridor between Dallas and Atlanta. \"Well, as stereotypical intros go, it was quite charming.\" She smiled again. I found I very much liked making her smile. I looked her over from close up. She was thin. Very thin. Just a step up the nutritional ladder from photos of labor camp survivors. She was about a 1.7 on the Purina chart my grandmother had taught me to use in evaluating dogs. Her muscle mass was just meeting minimums, but there was no discernable fat anywhere. Was she an anorexic?\n\n\"How long have you been in Austin\" I asked.\n\nShe ducked her head and gulped. \"Well, I started school two years ago, but I missed a year and half due to...\" She paused, as if deciding how to finish the sentence, \"Health issues. So now I am back trying to catch up.\"",
        "That probably explained the emaciated body. I hoped she was well on the road to recovery. \"Would you care to dance?\"\n\nShe did a double take like that was the last thing she expected to hear, then rallied and said yes. She put her little juice can down on one of the trays near the wall, and took my offered hand as I walked her towards the center of the room. Just as we reached a spot where we could dance, the DJ faded down Buddy Holly's \"Oh, Boy\" and brought up Johnny Mathis \"Chances Are\", perhaps the slowest and clingiest 50's dance tune there was. I didn't give her a chance to back out due to the music switch, taking her in my arms and moving to the music in my best ballroom dancing class style. She followed beautifully, light as a feather, almost literally, in my arms. I liked it.\n\nBy the end of the song she was leaning on me heavily and breathing hard. That one dance had completely exhausted her, but her Suzie signal for me had grown stronger as her body grew weaker. I steered her over to some chairs against the wall and offered to get her another juice.\n\n\"Water, please.\" She gasped. I went off to fetch her a bottled water from one of the tubs near the punch bowl. When I returned, she had already bucked up a bit. I sat beside her.\n\n\"Sorry to flag out on you like that. I still get tired easily. But I enjoyed the dance.\"\n\n\"So did I, Jerri, and I hope we can do it again soon?\"\n\nShe smiled. \"Perhaps, but not tonight. It looks like one is my limit.\"\n\nMy disappointment lasted only a few seconds, though, because I spotted Candy making her entrance. \n\nCandy's outfit was like mine, in one sense. From a long distance away, it was blue jeans, a white shirt, and black shoes. But when she got closer, the reality was much more striking than that. The jeans were some mix of dark blue denim and Spandex, the kind my mother used to call 'spray on jeans' when girls wore them to her accounting classes. Even Candy had had to work hard to get into these things, and they left little to the imagination concerning her shape. They might also been called 'Commando' jeans, because I could detect no panty lines or trace of any underwear. Those kind of jeans were often low riding 'hip hugger' style, but Candy's went up high all the way to her natural waist at the level of her navel, tight as a coat of paint. \n\nShe had on black mid-calf length boots with moderate heels, and matching narrow black belt with a silver and turquoise buckle. The thin belt made it plain that there was nothing underneath it save jeans, muscle and skin, and when she turned to move through a few standing groups, I could see that it also highlighted the upside down heart shape of her perfect ass. The music continued, but the conversations stopped as Candy strode toward us. Some massed male desire signals sounded, along with the expected female herd envy. Jerri's arm was still next to mine, and I felt her pulse, her heart rate still wound up from the exertion of the dance.\n\nFinally Candy got within a few feet and I could see yet another reason for the reaction to her. Her white shirt was not a plain and almost opaque thick cotton loose cut tee like mine, but a sleeveless number in high tech stretch fabric: thin, tight, translucent, and form hugging. Her dark tan shown though like the shirt was almost not there, and the inverse bikini area of her breasts that were untanned were like bubble gum pink beacons in the night, surrounding her naturally bronze nipples. You could see every bump on her nipples, which seem to respond instantly the air conditioned breezes in the room through the sheer fabric. It was actually much, much sexier than if she had simply been topless. \n\nA frantic Suzie with raunchy overtones popped unbidden from Jerri, with nasty overtones of shame, overlaid with uncontrolled desire. Her heart rate raced again. I stood to greet Candy, and Jerri's hand remained attached to my arm. Candy noticed, and Jerri gasped. I needed to make some introductions, I supposed.\n\n\"Candy, this is Jerri. She was kind of enough to dance with me at our mixer.\"\n\nJerri was nervous, and reacted automatically, extending her hand. \"Jerri Hart, from Hallsville, Texas. Pleased to meet you.\"\n\nCandy was not jealous, she was intrigued. \"Hi, Jerri, I'm Candy.\" She took Jerri's hand a held it, planning I suppose to stare at her until Jerri looked down. Jerri did not, and stepped a little closer. \n\nFinally Candy extricated her hand and she and I walked off toward the dance floor. I gave her the basics of her extended training plan for the next few weeks. She did not react well, initially at least.\n\n\"Whaddaya mean, more training? I thought I already graduated from your training during Spring Break!\n\n\"Well, that was like the three day introductory course, and you did very, very well. But this is the full on formal course, with two other instructors in addition to me.\"\n\n\"So, I would have to be with all three of you, publicly, like that chick that you paraded around the Halloween party on a leash, naked except for that little metal sex suit and some gloves?\"\n\nI nodded, and tried to think of something to say. Turns out I didn't have to.\n\n\"And I suppose I would have to do even kinkier and kinkier things in private? Be used in whatever degrading way you three can devise to get yourselves off?\"\n\nI nodded shyly.\n\n\"Say no more, Hoss. Sign me up, right now!\"\n\nWhat a woman.\n\n*******\n\nWhen I woke up Sunday morning, I knew two things: I was at least a day behind on my schoolwork, and I didn't even want to think about dinner at Strelsa and G\u00fcnter's place later tonight. I put off any real thought process by going down to breakfast, slowly because I was still sore from Friday. The dining hall was mostly deserted at my normal early waking hour. Then, after I was full, I did the normal, rational(izing) human thing - I buried myself in my math homework, and didn't even think about dinner, nor the after dinner entertainment plans. Given my compulsion to forget about dinner, I actually concentrated pretty well on math. I worked my way through most of the exercises that I had problems with, moving all but two into the 'I understand it now' column. I wrote up my remaining issues for discussion with the TA at his next session of office hours. By this time, I could distract myself with lunch.\n\nMy roommate Kevin arrived just in time to join me for lunch. He was now frantically casting the rest of his movie, realizing that early commitments and early shooting would be the only way to actually get it 'in the can' and ready to turn in while most of his classmates procrastinated. He was ebullient at his progress so far, as he had found his female lead. In his rewritten script, the formerly logical and by the letter of the law regulation quoting female Vulcan officer, as portrayed by Orinda, was to become totally ruled by her emotions and compulsions and be a classic aggressive nymphomaniac. He was actively trying to recruit everyone he knew to play some part in his film, especially in some of the big orgy scenes. So far many had resisted, myself included, but he was having very good luck with students from the drama department desperate to build their resumes. His title was already awful, but any horny college guy I know would sit through almost any awful dialog just to see Orinda naked on screen for three seconds. Maybe his plan was coming together. \n\nAfter lunch, I rewrote my lab notes from physics, and went through the old test files that UDP provided - seeing which problem sets and labs were most likely to turn into exam questions and making sure I understood them. Avoidance can make one very dutiful (not to mention the effects of long induced maternal guilt while an adolescent) - so I created hand written thank you notes to the employers I met at the co-op engineering reception. Now what else can I do? \n\nMy phone buzzed. It was Suzanne texting that she was downstairs and ready to walk to dinner at Strelsa's. It was only 4:30!\n\n\"Too early!\"\n\n\"Nope, we need to walk and talk for a while before we get there.\"\n\nShe met me at the dorm entrance, dressed in a black skintight pantsuit outfit that made her look like a top shelf Vegas whale watcher who should have a billionaire or two in tow. She normally didn't need much makeup, but this afternoon she had gone all out. She looked amazing. Her jet black hair was up, her boots were tall, tight, and black, her brown eyes and perfect olive skin were shining, and her walk was strutting and commanding. Even now, I sometimes found it hard to believe she was with me.\n\nWe walked in silence for a while. I was certainly not going to start talking about our after dinner adventure. But I knew that Suzanne eventually would. \"Robbie, my Animal, are you ready to really spice things up for Strelsa and G\u00fcnter?\" \n\nI supposed so. She could spice things up just by walking in the door. I, on the other hand, would need to make a concerted effort.\n\n\"So, Robbie, let's be specific, shall we?\" She gave me one of those looks that really hot girls give really slow guys. \n\nCould she really read minds? \"Tonight, you get to have both girls, while our poor frustrated G\u00fcnter just gets to watch. There are some things you don't want to do, and some things you absolutely must do. Am I getting your attention?\"\n\nThat got my back up. \"Remember, Suzanne, I am not your sub! But you always have my attention.\"\n\nShe smiled and kissed me. \"Good. As long as we know that, you can do the right stuff for both Strelsa and me. I want you to absolutely give her all your best efforts Robbie. No holding back, no inhibition because G\u00fcnter is there. Do her like you do Lara, and like you do me.\n\nI smiled and raised my hands, like I didn't know what she was talking about. She smiled too, but she wasn't having any of my bullshit. \"Come on. Robbie. I don't know exactly how you do it, but you always seem to know when to zig and when to zag. When to be rough and tough with me, and when to be gentle. Very intuitive. I want you to concentrate on getting Strelsa off like that, the same way you do for me.\"\n\nI shuffled my feet, and she continued. \"One other thing. No anal, Robbie. Not tonight or later when you guys double team Strelsa and then me. She is not ready for it, and neither am I with anyone other than you. You introduced me to that, and I love it with you, but I need a lot of trust and understanding for that to happen, and Strelsa is going to be even more hesitant than I am. I know you will sneak in a few little feels and kisses here and there, but no real penetration, okay?\n\nBy this time, we were entering their apartment building. I smelled the fresh flowers in the lobby, and their fragrance evoked memories. The first and most striking was of Strelsa's pungent and pervasive smell of excitement in her first girl on girl experience with Suzanne while her husband G\u00fcnter and I watched from five feet away. It had first made me think of exotic European sushi, if there was such a thing. Memories cascaded. My family went to Stockholm for vacation one year in the summer, and we stayed at the old Sheraton, a very American hotel right next to the Old Town section. But it had a very Swedish breakfast buffet - with several dozen varieties of pickled herring laid out. I was dumbfounded by the display, as in my whole previous sheltered life in Dallas I had only known there was one kind of pickled herring, and I had no idea that human beings would actually eat it for breakfast. I guess that was the closest thing to European sushi I had actually experienced. She smelled a little like that, but a hell of a lot better. \n\nBefore that my memories of the then very virginal Strelsa were of our Austrian high school exchange student, blond, pale, athletic and tall. Different and mysterious, to me at least. The first Austrian I had ever met, and she seemed smarter and more sophisticated than the German farm girls that had proceeded her as exchange students at our Texas high school. The polar opposite of Suzie Packard. Suzie was dark, big breasted, aggressive and always on the prowl. She had personally deflowered dozens of my male classmates, and for all I know, some of the females, too, plus a few rumored coaches, teachers, and dads: both divorced and soon to be, thanks to Suzie. Strelsa was shy and retiring, slow to speak up, thoughtful and polite. Somehow, that made her all the hotter, for me at least.\n\nIt was the shy and retiring high school Strelsa that opened their door to our knock. When she made eye contact with me and then looked down, something in me popped, and a flood of images rushed through my mind. Strelsa walking the hallways, shy and with eyes downcast. Strelsa not knowing how to unwrap a tamale before eating it. Strelsa not sure when to yell at a football game. Strelsa looking hot but embarrassed in a bathing suit at a picnic. Strelsa putting her hand on Suzanne's head as we watched Suzanne going down on her on the couch in their apartment two weeks ago. Wow.\n\nShe ushered us in and offered us seats on that same couch. G\u00fcnter emerged from the balcony, apparently having just stoked the fire on their little hibachi grill. The expression on his face was impossible to read, but I was sure I had never seen it before. I wondered if his internal dialog was something like 'Come on in, have some dinner, and then fuck my wife?' \n\nThen I heard a weak but buzzing Suzie signal starting up from Strelsa, like a little two cycle engine that was just barely catching and beginning to warm up. It went from coughing and shaking to chugging and then revving up and beginning to settle in to a smooth idle. Her body language changed with it: from tight and controlled with hands held close at her side to bold and expressive gestures with her arms. She was ready.\n\nBut first, dinner. The inevitable cheese dusted salad was served, and I had a Pavlovian erection. Were yellow tomatoes an automatic turn on for me now? The conversation turned around SXSW, Spring Break plans, and G\u00fcnter's frantic recruiting efforts. Apparently rowing had an NCAA mandated national signing day in February just like football did, and the pressure was on G\u00fcnter to close some prospects at get them to attend ESU rather than the traditional big rowing powers. G\u00fcnter had to two highly rated 'probable signees' on the hook and he would be walking on eggshells for the next few weeks until those letters of intent were signed and booked. Coaching jobs were on the line all over the country, highly vulnerable to the whims (and perhaps sexual proclivities) of fickle 17 year old girls. \n\nHe had already enlisted me to host a couple of his top targets, including Ms. Muffy McGunnigle, the legendary five star rowing recruit, with a tour of UDP and a 'mini-mixer' beside the heated pool. Other folks would take them all over Central Texas hoping to find what resonated with them. G\u00fcnter wanted me to figure out if Muffy liked boys, or girls, or goats, or all of the above, and in what combinations, and make sure she thought there were plenty of such possibilities at ESU, rather than Asian girls everywhere, UCLA. Strelsa cleared the salads, and G\u00fcnter brought in some sizzling medium rare free range bison steaks from the hibachi. Then Strelsa added the latest and greatest in trendy Austin veggie side dishes - Brussel sprouts, complete with toasted pistachios, balsamic vinegar, and blue cheese. I loved the idea. When I went through puberty, later than most, I developed some major food cravings very early in the process, well before my voice began to crack and change. I craved Brussel sprouts, Crimini mushrooms, asparagus, butter beans, fried chicken livers, tuna, shrimp, and pecans. I could not get enough of any of them, especially asparagus and chicken liver, ever. \n\nMy gourmet cook and nutrition guru grandmother told me at the time that such cravings usually came from a vitamin or other biochemical co-factor deficiency, and said sometimes a growing boy needs some weird foods to become a man. She said my dad had the same kind of cravings when he was in his early teens. At any rate, the smell of the Brussel sprouts only served to recall teenage days and reinforce the erection kicked off by the salad course, and I began to notice every little move that Strelsa made. She was looking better and better with every passing minute. \n\nSuzanne was certainly enjoying her meal too, and cutting expectant glances at all three of us as she chewed and made happy noises. A couple of buzzing and very female Suzie signals soon made themselves again evident to me, along with an increasingly nervous expression on G\u00fcnter's face. I suppose that was his standard 'our dinner guests are about to have a threesome with my wife' look. Soon Strelsa brought some kind of chocolate thing that was like a thick pudding with a cookie stuck in the top of it and then dusted with cinnamon and powdered sugar. It was very good - all three bites of it. I hoped that it had topped off my glucose supply to put my Suzie receiver in peak condition for the rest of the evening. \n\nSuzanne stood up. \"I'll help you clear, Strelsa dear.\" She strutted and slutted her way into the kitchen, with a gait that was somewhere between walking and twerking. I realized that it was just about to go down, so to speak. The official plan going in was for me to get both girls, and I would, but Suzanne's manner made it seem like the real agenda was for the two of us to drive Strelsa crazy while her husband watched. I guess that would be okay too.\n\nStrelsa and Suzanne returned, with Strelsa looking embarrassed, but she finally cleared her throat nervously and spoke. \"I thought at this point we should move to the bedroom, which might work better for us tonight than the couch.\" Her Suzie fantasy channel suddenly burst out with images of my precious bodily fluids squirting on her. Very graphic, but it certainly did make the bedroom seem like a more practical venue than the couch. \n\nSome thought must to have been given to all this previous to our arrival, because the bed was turned down, there were several extra pillows on the bed (with pillow cases), the shades were drawn, and there were several candles burning around the room. A single chair was over in the corner right at the foot of the bed, near the window with the shades drawn. I guess that was G\u00fcnter's designated vantage point. Oh my. \n\nHe sat in the chair, leaned back, and tried to portray relaxed and open body language. However, his clenching and un-clenching hands and jaws did not fit in with his desired image. I felt some clenching in my abdomen as both girls sat on the end of the bed with a space between them and beckoned for me to join them. They say college is for learning and having new experiences, so here I go.\n\nSuzanne smiled mildly at me, but her Suzie sizzled, as did Strelsa's. I decided to pretend I was back at one of our high school dances with Strelsa, and I kissed her. She kissed me back, and like she really meant it, too. Maybe we were both at the same dance. G\u00fcnter might as well have been out on the balcony looking in, even though he was actually about three feet from the foot of the bed and looking on intensely. I remembered my promise about not holding back, and tried to put my mental blinders on and just focus in on Strelsa's Suzie signal. It calmed my nerves and gave me focus and direction. She must have been the extended foreplay queen of Europe, because she wanted it slow, gentle, and excruciatingly sequential. Austrian foreplay.\n\nShe must have known just what worked for her, though, because as I methodically tuned for maximum Suzie, she got hot. Really hot. Suzanne joined in, taking off Strelsa's little blue sweater and white bra, and beginning to kiss her left breast while I worked on the right. Out of the corner of my eye, I then noticed Suzanne doing a little strip tease for G\u00fcnter's benefit, shucking off that black pants suit with her feet pointed about a foot from his knee, and coyly leaving only her red panties on. As she turned back to concentrate on Strelsa, G\u00fcnter was afforded a perfect view of the virtually perfect Suzanne ass. ",
        "He and I apparently realized something at the same time, and it made him relax as it made me tense up. Next week, I would be watching him tap Suzanne, and she was teasingly preparing him for it. Little slut. Petite, dusky, and incredibly beautiful little slut. He let out a big breath and broke a little bit of a smile. May be he could turn his frustration into anticipation. Something clicked inside me, too. If turnabout was fair play, and Suzanne certainly seemed to think it was, I would just have do my best to rock Strelsa's world, and hopefully very visibly so. \n\nI began a slow progression of teasing and glancing through the panties caresses. She was easy to read and incredibly responsive, perhaps aided by Suzanne's dutiful kissing of her nipples, with the occasional cat-like lick of her underarm. Strelsa liked that, as her Suzie made obvious. Suzanne moved around with her head behind Strelsa's, and reached around her shoulders and cupped both breasts, caressing the nipples gently, but maintaining eye contact with G\u00fcnter. Strelsa groaned. I tried not to. \n\nI pushed my tongue against Strelsa's panties and got my first taste of her. It was like a bomb going off in my mouth. I focused on her outer lips and visualized them through the light fabric with my tongue. She said something in Polish, and Suzanne laughed. Inner lips now. More tasty flow. My focus on her was now complete. I tugged off her panties and grabbed a pillow, propping her tight little ass up on it a bit to improve my access. When I put my face back close to her it was like opening a steamer on the stove top. Hot wet fragrance landed on my face. I loved it. I looked up at Strelsa and her eyes were glued to mine. I smiled at her, and then bent to my task.\n\nHer light honey blond pubic hair, damp and fragrant, beckoned me to dally. And dally I did. Slowly, methodically, teasingly, and if I do say so myself, very effectively. Her Suzie soared, and she began to lift her thighs and push her pussy toward me. I could not see what Suzanne was doing, but suddenly sensed her moving up near the top of the bed. She had taken off her little red panties, probably slowly and in a manner calculated to inflame G\u00fcnter, and then used them to lightly rub Strelsa's face. Strelsa inhaled deeply of Suzanne's fragrance, and her Suzie signal redoubled. \n\nSuddenly she came, with a wonderful squirting jet into my mouth. She tasted incredible. I made appropriate appreciative noises, paused a moment for her Suzie to settle, and then I started in on her again. Suzanne moved one leg over her like she was saddling a horse, and lowered her dark pussy onto Strelsa's pale face. Strelsa groaned and snorted, and then I just heard guzzling sounds. The lovely flow I was tasting increased a little, and Strelsa came again, just as Suzanne sneezed, signaling she had an orgasm too. Things were really happening tonight. \n\nI stood up, again making eye contact with Strelsa, as Suzanne had moved off of her face. I stripped off my shirt and pants, leaving my underwear on, and completely ignoring the fact that her husband was watching, and was suddenly taken back by an old memory. I was suddenly on a date in early high school, parked and watching the submarine races after taking a young lady to a movie, and desperately trying to negotiate for some desired action in the back seat. \n\nThe young lady, who apparently later told people (including Strelsa) that we had gone all the way, had some much more restrictive actual rules for me that night. To be specific, she insisted that we both had to keep our underwear on. Since I was at that point committed to official celibacy anyway, I finally dealt down and traded up to reach agreement with her on a thorough but through the underwear 69 plan, which I enjoyed immensely, but I came in my underwear much too soon. She was ready to be taken home after that. But I didn't have to negotiate tonight. I just straddled Strelsa's face and tea bagged her, even though she was fully conscious and a fellow ESU fan. \n\nShe inhaled like she was smelling a sea breeze, but it was actually a tee breeze - \"T\" as in testosterone. I was in orbit. She licked my balls, and she tongued my cock through my thin underwear, and it was 20 times better than that other night with that other girl in high school. Suzanne giggled, G\u00fcnter gagged. I whipped off the underwear, and she took my cock like a wild thing. It was wonderful. \n\nI probably should have felt a little guilty with G\u00fcnter watching, but frankly I didn't give him a single thought. Strelsa was guzzling my cock frantically. It was nice to be the object of pure female lust. She made eye contact with me, then reached behind me and touched my butt with one hand, urging me all the way into her mouth. Baby. She had no trouble taking it all. Those smiling eyes that had seemed shy in high school certainly did not look shy with my cock all the way past her lips. She hummed, then moved all the way out, smiled widely and smacked her lips, and then took me all the way back in. Oh my!\n\nIt may not have been completely mannerly, here in her bedroom with her husband watching, but I found myself grabbing her head with both hands and helping her set the rhythm. She, in turn, grabbed my ass with both hands and urged me to be a little rougher with her. She began slurping and using her tongue along the bottom of my cock. I soon realized I didn't want to come right away, and began to think about distractions. The blinds were closed, so I couldn't look out the window, but I suddenly found myself looking at Suzanne.\n\nSuzanne was getting in touch with her inner porn star. She made eye contact with G\u00fcnter, then glanced back toward Strelsa frantically sucking me, and then back to G\u00fcnter. After a few more sloppy and noisy sucking thrusts, she moved back a little and then began using her hands to make sweeping gestures like the models on the TV game shows. Only instead of saying \"A New Car!\" as they swept their hands over the fenders, it was as if she was saying \"My Boyfriend's Dick!\" and \"In Your Wife's Mouth!\" as she smiled seductively at him. \n\nThat hardly distracted me. Suddenly I could not hold back. I threw my head back and grunted, and Strelsa, not at all shy now, engulfed the head of my cock and sucked for all she was worth. Which was a lot. She pulsed the pressure with little modulated noises coming through her nose. I let loose, and Strelsa took it all. I wonder if G\u00fcnter could see her throat move as she swallowed. Her Suzie flamed and screamed as she sucked me dry. I was never happier to be a sex object, and to have my essence appreciated so. \n\nG\u00fcnter made a funny noise, and the look on his face was indescribable. When Strelsa made a loud slurping, gurgling noise on my dick, a complex expression moved across his face in synchrony with the sound. Strelsa came up for air, and Suzanne immediately swooped in and took me in her mouth, her little low excursion suck trick soon bringing me from half-mast to fully erect again. Strelsa sucked my balls as Suzanne worked my shaft, and soon John Henry lived here.\n\nSuzanne sat back on the bed, pulling Strelsa with her to the right, and pushing me to their left and onto my back. Suzanne had thought about this, and maybe she should talk to Kevin about a part time gig as a porn scene director. She motioned for Strelsa to get on me, facing the end of the bed (and thus G\u00fcnter) and she grabbed my cock and guided me into Strelsa. Strelsa shuddered and gasped. I guess this was also another first for her with anyone other than G\u00fcnter. \n\nStrelsa had some very serious and invisible pelvic musculature, and soon she was vigorously milking my cook with her pussy. It's always the shy ones, they say. Suzanne had her lay back on top of me, so that her neck was right next to my mouth, so naturally I began kissing it, and reached around to cup her breasts. Her nipples were very hard, and her Suzie crowed as I caressed them. I raised my neck and looked up and could see the top of Strelsa's thighs, as her legs were up and spread wide, with her feet planted on the edges of the bed. They framed my view of G\u00fcnter, who now sat leaning forward intently, chin on one hand, like The Thinker, looking on with a mixed expression. Thinking, no doubt, about how much he was going to enjoy doing the same thing to Suzanne soon. \n\nI saw Suzanne sweeping her hands around, and I imagined her smiling and saying \"My Boyfriend's Cock!\" and \"Your Wife's Pussy!\" She moved forward and to my left, put her face on Strelsa's abdomen, placing her right ear on Strelsa's belly button, and reaching up to stroke both of Strelsa's thighs. I put my head back down, tuned into Strelsa's Suzie signal, and began to tune for maximum pussy pleasure. John Henry was hard and pumping on. \n\nSuzanne lifted up Strelsa's left leg and ducked under it, getting onto the floor near the foot of the bed. I put my head up to and saw the top of Suzanne's head, and her right arm as she held Strelsa's leg up high and wide, to afford her access and G\u00fcnter a better view. When I held my head at just the right angle, I could see a reflection in a picture frame on the wall behind G\u00fcnter. \n\nSuzanne was still doing her Vanna White modeling bit, looking and pointing to the very spot where my cock was sliding in and out of Strelsa's steaming snatch. Everything got quiet for a moment, and I could hear the snicker snack squishing sound of flesh on flesh in between my breathing and Strelsa's. Then Suzanne leaned in and I felt her tongue flick around where Strelsa and I met. She then leaned back, turned toward G\u00fcnter, and gave him a very soulful look. In my direct view, I saw his jaw drop involuntarily. \n\nWhereupon her reflection smiled, licked her lips, and blew him a kiss! The look Suzanne gave him would have melted ice from across the room. It plainly said \"Your turn is coming.\" So to speak. Gunter made some kind of weird noise way down in his throat. At this point Strelsa began to groan and had another big orgasm. I almost lost it as she squeezed me and I had to stop thrusting as she clamped down on me like a Denver boot on a double parked car. Old G\u00fcnter sure had himself a winner with this girl!\n\nSuzzane was not finished with her cinematography exercise. She had Strelsa turn around and get up on all fours, facing G\u00fcnter. Her face was only about a foot from his knees. I took the opportunity to bend down and kiss Strelsa's tight little ass, like I was sneaking a cookie while everyone else was looking elsewhere. It was firm and fantastic, and that was just her buttocks. She drew in a loud breath, and stretched her neck up and forward, throwing it back and sticking her hard nipples out toward Gunter's face. He leaned forward slightly as if he were going to take them into his mouth.\n\nI was concentrating on Strelsa's Suzie signal and continuously updating my estimate of the probability of her desire to have me stick my tongue in her ass. The results were inconclusive, but the scientist in me wanted to bravely go forward and conduct the experiment. Why, hadn't I promised not to hold back? I had a duty to do my best. My hands spread those pale pink cheeks apart and I kissed all around my target, not touching it, but making it clear where I was aiming.\n\nStrelsa said something in Polish, and Suzanne's head snapped back toward me. She gave me her patented look that said 'your hand is in that cookie jar, isn't it Robbie?' and l tried to keep my eyes locked onto hers as I gently licked Strelsa's sweet little pink pucker. Suddenly I was reminded of Kevin's story about some of the unusual staffing on porn shoots, including enema technicians and certain cosmetologists who specialized in bleaching assholes. I concluded that the lovely Strelsa did not need any work done, and I plunged and plundered her sweet little butt with my tongue. She repeated that mysterious Polish phrase three times, loudly. Suzanne giggled. \n\n\"Tongue only Robbie, but give her all she wants!\"\n\nI was like a hunting dog unleashed. I turned one hand over and put two fingers in her sloppy pussy, and buried my tongue in her ass, tuning for Suzie all the while. She planted her fingers on the bedspread and pushed her ass back against my tongue. What a girl! I found her G spot almost instantly, feeling the oily and squashy little area against my fingers as I moved them glancingly up against it. When she was just about to pop, I gave my tongue maximum extension and leaned forward into her. She came, her pussy clamping on my fingers and her sweet little ass grabbing my tongue. Duty is its own reward. I waited out the pause in her Suzie signal, and then began again.\n\nI heard Suzanne whisper to G\u00fcnter, \"He's French kissing her ass, G\u00fcnter. Do you do that for her? I think she wants you to.\"\n\nG\u00fcnter gurgled, but I inferred that he never had given her ass the kind of attention it so richly deserved. \n\n\"She seems to like it! He is putting his tongue in her ass. Isn't that nasty?\"\n\nG\u00fcnter gulped and turned a little green. Strelsa came again, and then John Henry made me an offer I could not refuse.\n\nI got up on my knees and entered Strelsa's wet and wonderful pussy in one smooth stroke. I was channeling John Henry now and ready to rock. Strelsa adjusted her legs a little and began to systematically meet me thrust for thrust. She was an incredible sexual athlete. I grabbed a handful of each ass cheek and shifted my weigh to maximize penetration, settling into a smooth 2 seconds per stroke rhythm and then accelerating. Her Suzie signal now occupied my brain, and I was in complete tune with her. I wanted to make her understand how great I thought she was, and my dick would have to tell that story.\n\nSuzanne moved over and sat on the edge of the bed, and began to gently stroke Strelsa's chin and brush her hair with her fingers. She apparently wanted to move beyond choreographer and cinematographer and be the narrator too. \"Isn't she beautiful, G\u00fcnter?\"\n\nG\u00fcnter teared up a little, and so did I. John Henry was not distracted at all.\n\n\"She is wild, wanton and lustful, yet totally open and honest about it, with you and with us. You and I are going to watch her come. Let's watch her beautiful face when she does.\"\n\nStrelsa began to change her grip on my cock as I moved in and out of her. She maxed it out when I reached maximum depth, and released as I moved out. Then she gripped me hardest in the middle of the stroke and relaxed at either end. And finally she grabbed me hard just as I entered her, relaxed slightly as I moved on, and then gripped me again when I hit bottom. She began to sing some song sotto voce, with the volume low but following the intensity of her pussy's grip on my dick. It was a strange m\u00e9lange of a mother singing a lullaby and an incredibly erotic song. \n\nSuddenly I reached maximum depth and her pussy gripped me so hard I could not back out. Her Suzie exploded, so loud that it short circuited my brain. My whole nervous system locked up and sent one signal to every muscle and nerve I had: \"Come in her, Robbie!\" This was even more intense than the feeling that Veronica Tappert's signal had hit me like a Taser. This was like grabbing the three phase 440V line to the electric arc welder with both hands and just holding on until someone turns off the current. Even John Henry himself could not resist this. I was in slow motion and my cock felt like a firehose that I could barely hold and aim. My blood pressure most have dropped to zero as everything poured out through my dick. \n\nWhen I woke up, I was sitting up with my back on the headboard and my head lolling around. G\u00fcnter was still in his chair, leaning forward, Thinker like, staring down at the bed and completely oblivious to me. In between us, the two girls were grappling in an epic 69. Breathing loudly through their noses like racehorses, and succeeding in getting each other off in spectacular fashion. Once Suzanne realized I was awake, she put me to use in her carefully choreographed dance for her audience of one: G\u00fcnter.\n\nMy third erection of the evening had achieved consciousness almost before I did, prompting Suzanne to smile at me beatifically. They laid me out on the bed, and both put their heads down near my waist, giving me a showy tag team blow job, mostly for G\u00fcnter's benefit, it seemed. His eyes looked as big as dinner plates as he watched. But I didn't mind that either. Soon Suzanne climbed aboard my little train, facing the foot of the bed with Strelsa watching, touching, and occasionally licking us as G\u00fcnter looked on. I got a wonderful view of Suzanne's amazing ass as she bounced it up and down on me. Ride 'em cowgirl! Suddenly I had an idea for Veronica Tappert and her husband's prank - the phase two sexual part. Funny how some ideas are hatched. \n\nSuzanne urged me over and took up her favorite shoulders down and ass up position that I normally associated with pizza follow by a doggie style pounding in the dorm room. But I had been assured I should not hold back, so I tuned out her Suzie and got into my nastiest personae - John Henry with a little calculatedly cruel BDSM thrown in. She was looking right at G\u00fcnter, so I decided that he was going to see quite an expression on her beautiful face before I was through, and Strelsa could watch and learn too. \n\nI didn't have a bookshelf to hold onto like at the dorm, but I managed to pin her head and shoulders against the wall on my right. She turned her head to the left to maintain eye contact with G\u00fcnter, and grabbed the bedspread with both hands. I discovered I could wedge my left foot between the bed and the night table, and then had a pretty good base from which to work. I grabbed her hair with both hands, and visualized the nastiest, roughest fuck I could give sweet Suzanne. She would thank me later, I was sure.\n\nAt one point both Strelsa and G\u00fcnter stared slack jawed as I pounded into Suzanne. I didn't mind. Then Strelsa perhaps remembered the official mission plan of a threesome and came back over to the bed, and began a strange ritual that I would call sex kibitzing, not the verbal kind, but physical. She would look at us for a moment, and then put a hand on my buttock, or on Suzann's neck. Then she would move to another spot and stroke Suzanne's hair, then look at me soulfully in the eyes. It was at the same time awkward and endearing. \n\nSuzanne popped an orgasm and made one of her little signature sneezes. Strelsa had seen this before when the two of them were together, and the accompanying flow of fluids and waft of delightfully musky pussy smell seemed to pique her interest. She kneeled next to the bed and held her head at an angle, and then moved forward until she could see the action up close and personal. She pushed her head forward and held her legs at a funny angle somewhere close to upside down, but with one leg braced against the bed awkwardly. It reminded me of when I was a little kid and my dad tried to check the antenna cable in the old Fiat 850 Spyder convertible he was valiantly trying to restore. \n\nI would have been appropriate for him to learn to curse in Italian, as the little car was amazingly difficult to work on. Strange little metric screws and nuts were placed in cramped spaces just a bit too small for a hand holding a screwdriver or wrench. This was apparently a major design goal. Changing the antenna cable was a ten minute job on his old Mustang, but more than an hour of torture on the Fiat. He ended up with his shoulders wedged between the two front seats and his legs up and out over the little 'trunk' (which to my thinking was actually the 'hood' since the tiny engine, if you could call it that, was in the rear) so that he could get his head and hands in position to approach the back of the shitty little radio. Even with the antenna connected it still didn't sound very good. \n\nIt was from this car that I learned all the old FIAT jokes like, 'Fix It Again, Tony' and 'Failed Italian Attempt at Transportation'. It did seem to need a lot of attention. In the Dallas dusty heat, the oil filter had to be serviced more often than at each oil change, and the electrical system was more like Luigi Volta than Thomas Edison. The fuel pump sometimes did not, nor did the fuel filter always, and the clutch seemed fail about every 1500 miles. My dad said that when everything worked it was actually fun to drive, but it was gone long before I was of driving age. ",
        "Strelsa, now adopting a similar pose, was naked and much more attractive. She was apparently trying to get her face close to where Suzanne and I were connected, and hopefully there were no wrenches nor screwdrivers in her plans. But then there was a tongue. Suzanne groaned as I felt little flicks occasionally land on the underside of my dick: Suzanne was apparently getting most of the attention. Suzanne sneezed again, and Strelsa, apparently coming out of her shell, laughed happily. Eventually I realized I wanted to come, and my uncooperative cock was apparently a little dull and desensitized from the prior action. I began trying to push myself deeper and faster into Suzanne, and the now adventurous Strelsa changed her spot once again and began kissing my butt cheeks. Bingo. Suzanne gripped me with her pussy's internal vise grip pliers, and I shot myself out for the third and last time. \n\nWe all sat on the bed for a while and looked at each other with mixed expressions of silliness, awkwardness, and tenderness. Then Strelsa and Suzanne began giggling and talking in Polish, and getting dressed. All G\u00fcnter and I could do was get dressed. We finally stood and made a few awkward goodbyes, and then they showed us the door. When the door clicked closed behind us, we heard Strelsa giggle and the booming sound of her body slamming against the back of the now closed door. G\u00fcnter was making his Ramstein song noises again and grunting in tune. Suzanne began to giggle again.\n\n\"I guess we did spice things up a bit for them\" I offered. \"I hope he doesn't hurt her.\"\n\nSuzanne smiled. \"She has to be careful about that, and she told me how.\"\n\nI started to ask what she meant by that, but she rapidly went on, almost as if she didn't want me to follow up.\n\n\"You certainly didn't have any trouble with letting yourself go with Strelsa, did you?\" \n\nI smiled. \"Both Gunter and you made it clear that's what I must do.\"\n\nShe tickled my ribs. \"Tough duty, huh sailor? I bet you got a few high school fantasies carried out there didn't you?\"\n\nI smiled happily but stayed silent, for a moment. Then I asked her, \"Won't you have a few checked off your list in the next couple of weeks?\"\n\nShe stretched as we walked down the hall and started down the stairway, sticking her breasts out, and smiled like the Cheshire cat. \"Perhaps I will, and in a much more sophisticated fashion than your earlier and very crass suggestion that I take on a dozen young firefighters, I might add. For someone who is so in tune 'in the moment' when you are with me, you don't seem to really understand what I want in the abstract.\"\n\nWho the fuck understands what any woman really wants, abstract or concrete, I thought. Not me. Even my only talent doesn't help break that code. But I held my tongue. We walked north in silence for a few blocks. I knew she would go on, and sure enough, she did.\n\n\"That is the kind of thing a girl like me might think about, maybe even daydream about a little bit, but never actually do. Those trainees were cute, and in shape, and they certainly found me attractive, too, and the idea of a conga line of hard dicks ready and waiting for me and me alone is exciting, but there is no real connection. I do want to have some wild college days, and my clock is ticking on that, but I told you that I would have to play with them and get to know them for a few weeks, too, and build up some excitement and anticipation. It has to be with someone I know, and trust, and feel is low risk and high return. I have been toying with G\u00fcnter now for a few weeks, and I think he is just about ready.\"\n\nJudging from the feral looks he was giving her immediately after he got over the bewilderment of watching me do Strelsa, he was more than ready, and I had some bewilderment of my own due to come, so to speak. But Suzanne had more to say.\n\n\"But I have to admit you may have swerved onto the truth on one account, my animal. Two guys at once, as electric as it sounds, may not fully punch my fantasy ticket. I have been thinking about having three at once. The Full Megillah, so to speak.\" She giggled. \"At least I think I would be full!\" \n\nShe giggled again. Too much information. \"So far I only have you and G\u00fcnter on my 'trusted cocks' list, but if I could vet one more, I might want to go for it.\"\n\nOn the good side, I was pretty certain she was being completely open and honest with me. On the other side, did I really want to know all this? What exactly does one say upon learning that one's best girl wants three dicks at the same time? Gee that's nice, dear? Thanks for letting me be one of them?\n\n\"One other thing Robbie. I was watching Strelsa tonight, too, and I am sure that girl has been thinking about sucking your cock for a long time. She had an absolutely dreamy look in her eyes when she finally got to do it. Remember that next week.\" \n\nBut next week it was G\u00fcnter getting both girls, and unfortunately the lovely Strelsa would not get near my cock, as I would have my pants on the whole evening. What good would it do for me to remember that?\n\nBy this time we were walking past the Chili Parlor on our right, and approaching Lara's building just south of campus. \"Walk me on over to my car, would you Robbie? I need to go home and get ready for my Monday class meeting.\"\n\nAfter a perfunctory kiss, I watched her drive away, as controlled and carefully as she always did. Seemed ironic to me."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "threesome",
        "swinging",
        "sorority",
        "wife swap",
        "fraternity",
        "oral",
        "college",
        "anal",
        "exhibitionism"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-29"
}