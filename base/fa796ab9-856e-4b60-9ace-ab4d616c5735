{
    "title": "The Accidental Nudist Cabin",
    "pages": [
        "===========================\n\nA weekend outing goes awry for three couples.\n\nThis story was created as part of the NUDE DAY STORY CONTEST 2009. I hope you enjoy it.\n\nIt's a little long for a contest story, and I was going to split it up into three parts, but I think it flows pretty well, and there's lot of diverse sexual situations that keep it interesting. Or at least I hope so. \n\nYou writers know how these things are: your creations keep surprising you, and sometimes the story takes twists you never intended. Never more true for me than in this one. It ended up very little like I originally intended, and easily twice as long. I have no doubt that someday I'll probably have a follow-up.\n\n===========================\n\nThe six of us had been planning on this trip for nearly a month. Three couples, three motorcycles, and a secluded cabin on Lake Texoma. \n\nDan and Robin had inherited Robin's family cottage on the lake and had invited the rest of us up to 'break it in'. We'd been friends a long time, and had taken some weekend jaunts together to San Antonio and Vegas, but this was going to be different - three glorious days of just the six of us.\n\nWe were looking forward to getting some fishing in, and lots of sun-bathing, but not much else. Just a long relaxing weekend, and a great way to ring in the summer. Temperatures were supposed to be in the low 90's that weekend. Warmer than usual, and very welcome.\n\nEveryone met at our house, distributing our gear for the trip. Dan had a nice deuce softail; I had my 'baby', the 100th anniversary Fatboy with about $6K of additional work. They were both gorgeous bikes, getting a lot of attention, but somewhat limited in the 'luggage' capacity. Dan had just picked up a great looking Biker's Friend leather saddlebag that strapped onto the back of the passenger sissy bar. Jack had a custom Road King he'd recently traded up to, and by keeping our traveling gear to an absolute minimum, we could load most of our stuff in his two saddlebags, and Dan's new bag. I had a large gym bag strapped to the back of my passenger upright, loaded with libations, and some towels to wrap them up. With so little storage we were limited to a couple of shorts and t-shirts, a bathing suit, towels, and too much toiletries. We had a good bit of food, a few soft drinks and some more bottles of hard stuff tucked away here and there. We were traveling light, but it should be enough for the short time we'd be away. \n\nThe trip was probably only about a hundred miles as the crow flies, but roads were a different matter altogether. We would take the back roads through north Texas, crossing the lake into Oklahoma near Cedar Mills, driving for another hour on paved roads before hitting the gravel, then a dirt road that lead to the old family homestead. Robin's mother had told us that her father had built the original lake house, a real rustic cabin, in the middle of nowhere. The creation of Lake Texoma by damming the Red River made 120+ acres of inaccessible hillside a valuable commodity 30 years later. Most of the lake development had passed them by, and they still had more than 30 acres of property left, including the cabin, a dock, and a swimming platform. We'd heard about the place for years, but had never been out there. \n\nOf course, I would have jumped at any excuse to see the lovely Jill and stunning Robin in a bikini. I'm sure my compadres were looking forward to an eye full of Sheri lusciously filling out her own two-piece. \n\nAnd yes, Jack's wife's name was Jill. Unfortunate, but none of use was crass enough to every make light of it.\n\nIt was a beautiful day for a road trip, and the weather was supposed to be nice all weekend. There was a slight chance of rain on the first day, but clear skies were predicted from then on out.\n\nWe were supposed to leave early, getting away by noon, giving us the whole afternoon to settle in. An urgent call for Dan put us well behind schedule, as we had to wait for him to go into the office and get back. The ladies decided to get a small head start on the drinking, polishing off a blender of Margarita's, but Jack and I stuck to a single light beer. Riding a motorcycle drunk was not the wisest of moves. Eventually we got things together and we left our place a little late, but still managed to get on the road by 4:00pm. We would deal with a little traffic, and then should have smooth sailing. We should even be able to stop for dinner. I thought we should have enough daylight, with the sun setting around 8:00pm.\n\nEmphasis on should. \n\nWe were making great time, and decided to stop to eat at a local diner that was a favorite of Robin's family, with a good sized crowd. According to Dan, we were less than 10 miles from the turnoff, where our progress would necessarily slow. We settled in for some good home-cooking, and after polishing off dinner and desert, figured we had maybe an hour of sunlight left. After paying the ridiculously reasonable bill, and picking up a bag of ice, we headed out to finish our trip. As we climbed onto our rides, I heard Dan scream out \"God DAMN it!\"\n\nTurning to look at him, it didn't take 10 seconds to see his problem. His brand new, $250 saddlebag was missing off his bike. Along with it, a third of our gear. \n\nWe had a quick huddle, and looked up at the darkening sky. It looked like clouds were rolling in just to make our day that much better. It was decided to quickly head to the cabin, and re-inventory there. We could pop out the next day to replace whatever we'd lost. The missing gear did give us an open place to strap down the ice bag.\n\nWe were about 5 minutes down the gravel road when the skies opened up. Soon we were all soaked, but there was no place reasonable to stop, and with just a few miles left, we decided to gut it out. We continued through the darkening evening, and hit the dirt road, with only about 2 miles to go. Of course, God in his infinite good humor thought it would be funny to hit us with one of those real downpours, until we were crawling along at about 10 miles an hour, slipping and sliding through the mud and slick grass, branches reaching out to swat us from the side, and making our little journey Hell on Earth. We were slowly advancing with Dan in the front, since he was most familiar with the unmarked road, followed by Jack, with Sheri and me in the rear getting splattered with their mud.\n\nIt was great to see the cabin show up in Dan's headlights. It had gotten as dark as midnight, with the setting sun and pounding storm. We quickly parked in the carport, and stripped our gear off the bikes. Dan wandered behind the building and managed to get the Honda generator running, giving us lights. \n\nThe doors were padlocked and windows shuttered to keep out intruders. While Dan was unlocking the side door, we were all complaining about our rotten luck. \n\n\"There's not a lot of space inside, and we haven't been here since last year, after Mom passed.\" Robin informed us. \"We have bed linens, towels, fishing gear, swimming gear, and some dried and canned foods. How about if I get some towels for us and we get rid of our wet clothing out here and dry off, so we don't soak the place?\"\n\nShe had barely gotten the words out of her mouth before we heard Dan bellowing \"God Damn it to HELL! SHIT! DAMN! FUCK!\" \n\nNow, Dan's a little guy, about 5'4, and pretty quiet most of the time. He'd shaved his head to look a little older, which made him look like a short bald 8th grader. He almost never cursed, but he was certainly making up for it on this trip.\n\nLooking past Robin, which was easy enough - she didn't even come up to my chest; I could see the source of his ire. Someone had been in their cabin, and hadn't left it in as good a shape as they'd found it. Only one light bulb in the kitchen was working but we all filed in behind Robin to see the disaster. Our wetness and muddiness wasn't going to make a lick of difference.\n\nVandals had broken in through a window on the far side of the cabin. There were beer cans all over the place, piled up dirty bed sheets on the two beds, and water was pouring in through the broken window. Critters had been in the house, and a dead bird was in a corner, with feathers all around. Animal feces were scattered all around the kitchen area. Couches were overturned in the sitting area, their pillows scattered. I watched Jack turn and head back outside, and a few seconds later he had re-closed the shutters, somehow jimmying them shut, stopping the worst of the rain.\n\nYou could feel the atmosphere of the place just sinking. The mood was as dark as the sky. Our hopes for a fabulous weekend getaway were getting washed away with the torrential rain.\n\nI walked over to one of the two storage closets that had been looted and found a box of four 17 watt fluorescent light bulbs on the top shelf. I walked around and replaced the lights in two lamps, but it didn't make the place look any better. We were all behaving sort of lost when Jill started cleaning up. \"Alex, any towels left in that closet?\"\n\nThere were some indeterminate cloth objects on the middle shelf. Garbage bags, paper towels, plastic utensils and toilet paper, were on the bottom shelf, with some cleaning supplies on the floor along with a bucket a broom and a mop. I dragged the main cleaning supplies out, setting them to the side and then I started pulling out the contents of what appeared to be the towel shelf, and found we had at least 8 towels. They were mostly pretty threadbare beach towels, with a few hand towels thrown in. I unfolded and snapped each one open, checking for anything living in them. On this one thing we lucked out. They were all in pretty good shape. On the next shelf up I found replacement basic white bed linens. There were some critter droppings on the shelf, but the sheets themselves didn't seem to have been bothered. I passed those out as well.\n\nEveryone pitched in, sweeping, picking up trash, straightening out furniture, mopping up excess water and mud, and anything else that needed doing. Once the worst of it was taken care of, we noticed that we were making less progress as we tracked our own mud and water all over the place. Nobody had wanted to walk around the wooden floors in the shape they were in when we got there, but after an hour or so of teamwork, the worst had been taken care of.\n\nAfter that, the guys were ushered outside to remove our wet things and dry off, while the girls did the same inside. The place was a one room cabin, with a small basic bathroom added on as an afterthought. This was really roughing it.\n\nI took a seat and scraped the worst of the mud off my boots with a stick while waiting. They had said they'd just be a second, but this wasn't my first rodeo.\n\nThe girls kept us outside a good bit longer as they did another floor mopping and passed their wet clothing outside to us. As I saw the ladies soaked undergarments make their way out the door, I started getting naughty thoughts. I'm sure I wasn't alone.\n\nBy the time we had stripped down, dried off, hung up some clothing, and re-entered the place wearing only towels, we were in slightly better moods. Dan took on the task of getting the 100 year old stone fireplace cranked up, since it was starting to get a little chilly out. I started shuttling our gear into the kitchen, while Jack made himself useful cleaning up where ever he was directed.\n\nI couldn't help but ogle our women a bit. Wearing nothing but a towel suited all of them. Tiny Robin was well covered, with her towel wrapped around her body and reaching almost to her knees. Sheri looked really tempting. She is the bustiest, and her towel was pretty tight across her chest, looking ready to pop open at any time. Her outfit reached just a hands length below her butt, having the guys hoping and praying she'd bend over for a quick show.\n\nJill's was a different story. She was tall, nearly 6 foot, taller than everyone there but me. She had incredibly long legs which were a blessing. If her legs had been any shorter, we all would have been getting a show all of the time. In order for her towel to cover her privates, she was wearing it lower on her chest than the other two. It appeared to just barely cover her nipples. Even then, her towel barely covered her ass, and any stray movement gave us glorious hints as to what was just out of sight. \n\nAny stray movement such as when she flipped over the mattresses and brushed them clean. Shame on her. It was blatant teasing. And it was causing a tent in my towel.\n\nWatching Robin move around, I wondered if anybody had told her that she had a large tear in her towel. It was quite strategically place -- a big triangular opening, at least four inches across, which exposed the oh-so-white flesh of her left ass-cheek. I guess God was making up a little for that whole downpour thing.\n\nWhen Sheri moved to the carport to start hanging up the wet clothing to dry, I couldn't help but notice both Jack and Dan watching her carefully. Each time she stretched up to hang another item on the clothesline, you could just see the bottom of her ass. I bet she knew just what she was doing.\n\nJack and Robin were going through our supplies, when I heard Robin start giggling almost hysterically. \"Of course. It had to happen, on a day like this.\"\n\n\"What?\" Dan asked, as he stoked his fire into a bright blaze.\n\n\"Do you remember what we had packed in our saddlebag?\"\n\n\"A bunch of stuff,\" he answered.\n\n\"No. We decided to put the clothing in there, since we could stuff it full so much easier. ALL the clothing.\" She laughed, nervously.\n\n\"What about Alex's bag?\" Sheri asked.\n\n\"Just a lot of booze, wrapped in what was once paper bags and two soaked beach towels.\"\n\nDan headed out to try to find a little more dry wood at the bottom of the woodpile. \"Some fucking vacation,\" I heard him mutter. Poor guy was having a bad day. First the emergency at work, then the expensive bag, then the rain, and now his cabin. \n\nIn the carport, he took off his towel, and went behind the hut naked as a jaybird. He showed back up with several pieces of wood, and made a couple more trips, making a dry stack of wood under the cover of the carport. \n\nI noticed what he was up to since I was constantly going in and out, being tasked with taking out the dirty linens, three full garbage bags, and the broken glass from the window. Sheri came out to hang up the wet towels from our bag; she was treated to an eye full as Dan finished his last trip. He looked like a drowned rat.\n\n\"Sorry, but I wasn't about to get the only semi-dry thing I have any wetter.\" He explained to my wife, while he turned his back to her, dried off, and got re-wrapped.\n\nSheri laughed, making light of the whole situation, taking it better than I could have hoped. \"Don't sweat it. I've got a feeling, that we'll all be seeing a lot more of each other than we expected to by the end of this weekend.\"\n\nTruer words were never uttered.\n\nWith the garbage out, most of the place cleaned up, the bathroom, kitchen, floor, and any surfaces we could reached wiped down, and the furniture set right, you could hardly tell it was the same place we'd arrived at just a couple of hours earlier. It was almost a miracle what six people could do in less than three hours. The place was decently lit and smelled of Clorox and Pinesol, which was a whole lot better than it had started out. The front door opened onto a covered porch, which faced the water about 50 yards away downhill. We had the door open, with the screen door closed, helping air out the place. The windows were all still shuttered, except for the two in the front facing the porch. You didn't have to get soaked to open those, and we could even open the windows themselves, with the screens in place.\n\nThe storm outside was not letting up, and there was no doubt we were going to be spending the night in this place. I finally gave it a good look over, seeing what we had, instead of what was wrong.\n\nThe cabin was basically quartered. Entering from the side door, the kitchen area was on the left. It had a propane stove, an icebox, and a simple sink and some counter space. It also had a table with 6 chairs. The front door divided the front of the house into two, the kitchen, and sitting area. The sitting area had two couches and a table that bracketed the huge fireplace. The back of the cabin had two queen sized beds, some dressers, and the small but efficient bathroom. \n\nDan was still upset. \"I don't understand it. They didn't have to trash the place.\"\n\nTruth was it could have been a lot worse. I have rental houses that were left in much worse shape by tenants. Whoever had been there had broken the window, letting the weather and animals in, and had left a lot of trash around, but hadn't gone out of their way to damage the place beyond that. They were just slobs.\n\nThe storm was picking up intensity outside, which also didn't make sense. The forecast had been for possible showers. Friggin' weathermen.\n\nRobin had done her best to make the beds, with help from Jill, and had complained bitterly that the home invaders had torn down her privacy curtains which separated the two beds and the back of the house from the front. Once she mentioned it, I looked up and saw the evidence of the missing curtains and the busted tracks.\n\nJill, on the other hand was still bound and determined to make the best of things. \"Leave it to Alex to make sure we at least have tequila, vodka, and rum. I suggest we break out the bottles, and just thank our stars that the place is still standing. What if they'd burned it down or damaged the roof? We'd be out in that slop, trying to get back to civilization.\" \n\nShe was waving a bottle of tequila, a salt shaker, and a squeeze lemon. \"What do you say, gang?\"\n\nRobin plopped down on the couch, in the seat nearest the fire. \"Pass it here. I sure as hell need a drink.\" The couches were in a bit of a V shape, further apart nearest the fireplace, and only an arm span apart at the opposite end.\n\nWithin a few seconds we were all gathered in the sitting area, tired and ready for a break, listening to the storm continue outside, and maneuvering for a place to sit. I ended up next to Robin, with Sheri by my side. On the other couch Jack was opposite Robin, Dan opposite Sheri, and Jill was firmly ensconced in the middle. I looked her over, anticipating a great view, but she had her legs demurely crossed. \n\nRobin sprinkled some salt on her hand, licked it and took a drink from the bottle. You could see the surprise on her face. \"Wow! That's the best tequila I've ever had. I swear it's like a single malt scotch!\"\n\n\"El Tesoro Anejo, it's been sitting on my shelf for the last three years. Not the best but pretty damned good.\" I informed her.\n\nThe bottle made a circuit of the room, with the salt leading the way, followed by the tequila, with the squeeze lemon following behind. Before it had completed a second trip, Jill started in again. \"This isn't really that bad. I'm just thankful that we have a roof over our heads.\" \n\nThat got a conversation going and it was decided that each person had to say one thing they were glad of on this trip.\n\nDan had the bottle, and was about to lick the salt off of his hand. \"I'm glad that only one window was broken, and Jack was able to close it.\" He licked the salt, took a swig from the bottle and leaned over to pass it to Sheri, who had just passed the salt to me. \n\nAs she leaned forward to take the bottle, her towel fell open giving everyone paying attention, and Dan in particular, a full on view of her chest. She set the bottle down on the table, re-did her towel, and grabbed the bottle again. \"Didn't I tell you?\" she told Dan who gave her a smile. It was his first smile in a while.\n\n\"I'm glad that we remembered to bring the booze,\" she said, before taking a healthy swig.",
        "On my turn, it was easy enough. \"I'm glad that if we're going to have to make the best of a bad situation, it's with you guys.\" It was true enough. Not only did I get along well with both Jack and Dan, Dan in particular, I was always happy to be around their sexy wives.\n\nRobin took the bottle eagerly without doing the salt. \"I'm glad that I found out about this stuff. I swear I'm never drinking Jose Cuervo again.\" She took her time sipping at the bottle, before deciding to relinquish it.\n\nWhen she leaned over to pass the bottle, I got a good view of her rear; somehow her towel had gotten bunched up around her waist in the back. It was a very nice rear.\n\nJack took his turn, \"I'm glad that we had clean dry towels,\" he said, \"and I hope we have more tequila; we've about killed this soldier\".\n\nI got up with the front of my towel tenting more than a little, and fetched a second bottle of the same. I was a little surprised at how quickly we burned through the first bottle. We only had three bottles of Tequila, and from the way things were going, it looked like we might finish all of them tonight. With about 25 ounces to a bottle, this crowd was taking healthy swigs.\n\nJill took the bottle from me. \"I'm glad we have a fireplace and Dan the man found some dry wood somehow.\" As she turned to pass the bottle to Dan, I wanted to shout out that I was glad her towel was too short. She had become a lot less ladylike about how she was seated in the last few minutes, and it was clear to me, from where I was sitting that she shaved her pussy. And quite a pretty little pussy it was.\n\n\"I'm glad the stolen bag had our clothes, and not the liquor.\" Dan said, taking a long draw on the bottle. \n\nWhen Sheri reached for the bottle again, she once more spilled out of her wrap. \"Damn it! I need a bigger towel.\"\n\n\"No you don't,\" Dan laughed, and earned a giggle from everyone present. Jill elbowed him just for form.\n\nSheri stood up and ostentatiously retied her towel only around her waist, leaving her magnificent tits out in the open. \"Fuck it. I'm glad that I'm with people I don't mind showing my tits to.\" She took her swig, and passed me the bottle. \n\nI was damn near in shock. I never, EVER, would have expected that from my dear wife. Not that she didn't like to go around our house nude every chance she got, nor was she anything but spectacular to look at. Still it was beyond the realm of anything I could have expected from past history. I looked around to see that the other guys probably had never expected it either, but were damned glad of it. Nearly every eye in the room was locked on her massive mammaries, ladies included.\n\n\"I'm glad...uh, I'm glad there were no animals living in here,\" I said. \"I'd hate to be fighting for space with a family of raccoons.\"\n\nRobin stood up and lowered her towel around her waist. \"I'm glad Sheri broke the ice. It's damned hot near the fire.\" She then took her turn on the bottle. When she'd finished she put the bottle on the table, rather than get up.\n\nI tried not to stare too much, but how could I not at least look? Robin's tits were perfect. She was so small, the full melons on her chest seemed to defy gravity, and her pointy nipples shouted out that she was enjoying herself. \n\nRobin had an exotic look. I knew she was part Asian, I think Thai. I had met her mother who was half whatever it was and she looked much more the part. With Robin, it gave her a small, slender body, long raven tresses, and an achingly pretty face. She had a slight, exotic slant to her eyes, but her nose was very Scandinavian, and her curves seemed all-American. She was the best of the melting-pot. I'd had a thing for her since I'd first met her. Having her sit next to me almost naked, tits bare to the world, and both of us half drunk, was an almost unbearable temptation. I badly wanted to use her for my salt-lick on my next shot.\n\nJack got up and grabbed the bottle. \"I'm glad it's hot by the fire,\" he said with a wink at Robin.\n\nJill took the bottle and sighed. \"Now, c'mon. How am I supposed to compete with those?\" she asked, nodding to the two pair of exposed breasts.\n\nRobin piped up immediately. \"Face it Jill. We have no clothing. No bathing suits. And I bet the road will be in no shape to go out shopping tomorrow. We have no privacy in this one room cabin. And everyone here has seen your lower half already. Shit, Alex is getting a helluva show right now. Just show us your tits already. It's just tits.\"\n\n\"I'll be damned if the only ones to show skin are going to be the women.\" Jill said. \"Oh, fuck it.\" She stood and pulled off her towel, turned, folded it and bent over to place it on the couch where she'd been sitting. \"I'm glad I lost 14 lbs since February.\"\n\nSeeing her ass and most of her moist pussy as she bent over, I was glad she'd decided to play the game. \n\nShe was stunning. Jill had full, natural breasts, with large swollen aureole. She was blessed with beautiful curves and just a hint of a tummy above a smooth shaven crotch. Her shoulder length brown hair was longer in the front and shorter in the back, where it curled under to her head, normally. Tonight it all hung straight down, curling a little at the ends. She had a natural prettiness, the girl next door look, emphasized by a field of freckles around her nose and across her chest. \n\nI was hard as a rock, and embarrassed that I'd probably have to lose my towel soon as well.\n\nDan stood and removed his towel, revealing his burgeoning excitement. \"I'm glad that everyone here will look damned good naked.\" Then he looked at me, \"Except for Alex. Dude, there's something wrong with a man shaving his chest.\"\n\n\"I don't shave my chest,\" I argued, \"It's just that grass can't grow on a well traveled highway.\"\n\nSheri took the bottle from him, stood and removed her towel as well. \"I'm glad I waxed this week.\" She was sporting a very sexy Brazilian landing strip. She took her sip and passed me the bottle, before folding her towel and placing it beneath her.\n\nThat little action put an end to any discussion Dan and I were having. And no, I don't shave my chest. \n\nI stood and discarded my towel. I was about as hard as I ever got, and there was no denying that I was enjoying the show. \"I'm sorry that Dan lost his new saddlebag, but I'm kind of glad we lost the clothes.\" I took my sip and passed the bottle to Robin.\n\nRobin stood and removed her towel, folding it in half and placing it back on the couch. She then sat back, with her legs crossed and sipped on the tequila. \"I'm glad we played the 'I'm glad' game, but I'm ready for something else. Any suggestions?\" Then she quickly stood up for a second, \"Oh, and by the way, I'm declaring this cabin an official clothing optional resort.\"\n\nThat got another conversation going, during which Jack finally got up and took off this towel. \"I feel stupid, the only one covered up.\"\n\nWe ended up taking turns talking about our worst luck ever, which resulted in some pretty funny stories. The bottle managed to make it around again, with an awful lot of ogling going on, and a lot of slurring of the words. When the bottle passed me, it felt like it was only about a 1/3 full.\n\nRobin insisted on another change. This time it was decided we'd take a turn talking about our worst vacations. It was a lot slower getting around the table, and the chemistry was changing. The tequila was definitely at work. Sheri was cuddling up to me, and Jack had his arm between Jill's legs, lightly stroking her inner thigh. She had spread her legs a bit, and was visibly excited. The only problem with our seating was that it left Dan and Robin unpaired.\n\nWhile Dan was telling a rambling story, I decided to get the last bottle of tequila and let it start its way around the seating, separately, since it appeared the current bottle had stalled and it was being used as a place keeper. I was painfully hard, and my cock seemed to stick straight out into the center of the room, waving and wiggling as I walked. I expected a lot of teasing, but didn't hear a peep out of them. I couldn't help but notice that both Jill and Robin watched my flagpole with inordinate interest, both going and returning. It was a little embarrassing; I know I look a little different than most guys, though nobody said anything.\n\nWhen I sat back down, taking a swig, Dan was still telling about his experience getting lost on vacation his junior year in high school.\n\nI passed the bottle to Robin. She looked at the different bottle, and took a hesitant sip, then a heftier one. \"God, Alex, you have great taste in liquor. What's this?\" she whispered to me, while her half-drunk husband rambled. I hated to break it to him, but I don't think anybody was listening any more.\n\n\"Jose Cuervo, Reserva de la Familia. Change your mind about Jose?\" I asked her softly.\n\nShe leaned back into the corner of the couch, raised her legs and laid them across my leg. \"Jose Cuervo is back to being a friend of mine.\" She took another sip then placed the bottle on the table, where Jack could get it. My hand casually rested on her bare thigh, while my erection threatened to spontaneously combust.\n\nJack, in the meantime, was staring at my wife who was leaning against me, the tequila having thoroughly kicked in with her. I couldn't blame him; she really was a sexy little thing. His hand had moved higher between his wife's open legs, and his own erection was quite visible. Jill was spread open, one leg looped across Dan's, the other foot resting on the coffee table. Dan's hand seemed to be absentmindedly stroking her inner thigh. His eyes were closed and his head was leaning back as he mumbled something that might have been his story. I certainly couldn't tell. \n\nMy wife was almost in my lap, and I had an arm around her shoulders, one hand resting easily on her tit. I felt her hand slide across my leg, and almost lost it when she wrapped her fingers around me, and started slowly stroking.\n\nRobin got my attention by moving her leg and leaning into me. \"Dammit! That's not fair. I'm so fucking horny right now.\" She was looking across the way at Dan who was still leaning back, but his lips were no longer moving. I couldn't believe it but he looked like he was sleeping!\n\nAbruptly, Robin was pulling my hand down between her legs, while she leaned back and watched my wife's hand job. I felt her moistness, and let a finger slide inside of her. God, it felt good. I hadn't touched another woman like that in the two years we'd been married. Across from me Jill had her eyes closed and was lying in her husband's lap while he fingered her, watching my wife the whole time. Sheri turned in place and put her mouth over my cock, and I decided that I wasn't going to let too much tequila ruin what might be an incredible weekend. I regretfully eased my fingers out of Robin, and whispered to her. \"I'd love to continue doing that, and so much more, but not like this. It's not fair to Dan.\"\n\nI coaxed Sheri off of me, and excused myself from the crowd. I picked her up in my arms and took her to one of the two open beds. \"I want to suck you,\" she said, slurring her words.\n\n\"I'd like that,\" I told her, climbing in bed with her. She moved down the bed and started a long slow blow-job. A couple of minutes into it, I watched Robin drag her half-asleep husband into bed beside us, and try to get him hard. It distracted me from the view at my own waist, watching the exotic beauty with her gorgeous body in profile while her face was lodged in his lap, her hands working diligently. He never fully woke up, nor did he manage to get it up, and she finally turned away from him, lay on her side and openly watched us. Our eyes locked for a bit, before I took in more of her body, then turned back to watch my naughty, cock-hungry wife's actions.\n\nThe other side of the cabin was getting noisy and I could see Jack on top of Jill, with the couch squeaking merrily away as he tried to push her through the bottom of it. Her occasional squeals sounded wonderful. I peeked over to the side to see Robin watching the couch show as well. She abruptly looked back at me, then came over and sat on the edge of our bed, watching my wife at work. She was playing with herself, and she stretched out, lying against me. I put my arm around her, against my better judgment and fondled her warm tit. Her hand was moving fast between her legs, and I was getting close to coming from the multiple levels of stimulation. \"I'm going to shoot for you,\" I announced, and my wife took it like a champ, swallowing everything, licking me clean. Right in the middle of my explosion, I felt Robin tense up next to me and she moaned as we came in tandem. \n\nSheri eased off of my rod, slid up beside me and fell asleep against my shoulder. I relaxed with my arm around Dan's wife, whose hand was wandering more than it should have. When it settled over my dwindling cock, I knew I should have done something to stop it, but it felt too damned good. Feeling her breasts pressing against my side, her lips occasionally reaching down to my chest, and her hand gently holding my semi-hardness, I tilted her head back and leaned down and gave her a kiss. It was long and tender, and I hardened in her hand. \"Not like this,\" I told her softly. \"I want to. You know how bad I want to, and how long I've wanted to, but not like this.\" She reluctantly let go of my hard cock, and I kissed her again, and again, and yet again. Somewhere in all those kisses, I finally fell asleep.\n\nI woke to find myself blissfully on the receiving end of another blow-job. Looking down, I could see that it wasn't my wife at work on me, but Robin, who was showing me that she was just as talented at giving head, if not at listening to good common sense. We were very quiet, and I noticed that the weather outside had almost completely subsided, and the fire in the fireplace was nearly out. The room was noticeably cooler. But not where Robin's hot little mouth engulfed me. She was slow and steady, her mouth and hand determined to get me off, without shaking things up too much, and eventually she got her way. Then she climbed off of our bed and moved a few feet over, back to the other bed. I fell back asleep; almost convinced it was a dream.\n\n* * *\n\nI woke up slowly, sticky from the humidity and heat, my head hammering from too much alcohol, and my mouth as dry as the Sahara. I could hear voices nearby and pulled the pillow over my head to block out the vicious light.\n\n\"Looks like someone is waking up,\" I heard pronounced. \n\n\"I wonder if his owner is as well.\"\n\n\"Jill!\" I heard my wife admonish our friend.\n\nI realized I had a bad case of morning wood, and without a half-bottle of tequila in me, I wasn't the exhibitionist I had been the night before. I moved the pillow from over my head down to cover my waist, which got me soundly booed.\n\nSitting up and looking at the group I was entertaining, I was glad I was covered with the pillow. The view alone was almost enough to put me over the edge.\n\nAll three of the women were in the kitchen, and all were topless, wearing towels around their waists, and nothing else.\n\n\"Glurgh aarrhg, uuunh,\" I mumbled. I wasn't a morning guy.\n\n\"Dan is down cleaning up the brush and mowing the grass between us and the water. Jack is scouring the area for our clothing, most of which the wind had its way with last night, and is scattered across 30 acres. Wouldn't you just figure?\" Sheri answered, as if she understood my grumbling.\n\nI staggered out of the bed and made my way to the bathroom where I waited patiently for my erection to subside enough to pee through it. I read the plaque above the toilet reminding me, \"If it's yellow, let it mellow, if it's brown, flush it down.\" Just below that was a reminder to keep toilet paper and other paper items out of the toilet. Foregoing the morning flush, I splashed some water on my face, rinsed my mouth with someone's mouthwash, picked the junk out of my eyes, took two deep breaths and went out to face the world. My staff was still semi-hard, in appreciation of the scenery.\n\n\"You'd think he'd be in a better mood. God, for how many years has he scoped out our tits? And now with them on full display, he's like the Grinch.\" Jill pronounced, leaning back against a counter with her arms crossed, which put those yummy looking tits on proud display.\n\n\"Look! You got him to smile! He's alive!\" My ornery wife teased.\n\n\"Water. Food.\" I grumbled, while they laughed at my misfortune.\n\n\"You'd think he'd be bouncing off the walls. If I gave Dan a BJ like Sheri laid on this one, I could probably get me a new convertible.\" Robin chimed in.\n\n\"If you gave Jack one, I'm certain he'd buy you one, before I kicked his ass!\" Jill teased.\n\n\"Jesus, Robin. Don't remind me! I was so wasted. That good tequila sneaks up on you.\" Sheri pronounced. \"I'm not in the habit of giving public blow-jobs. It must be that damn Te-Kill-ya.\"\n\n\"Amen to that. I'm switching to rum tonight. Tequila makes my pussy sore,\" Jill complained, almost getting a spit-take from me.\n\nI could barely believe what I was hearing. I'd known these people for at least three years. Both women had been in our wedding party. I'd never heard half as much sexual discussion as I heard in that kitchen before someone placed a stack of hot-cakes in front of me.\n\nRobin couldn't leave well enough alone. \"If you get as drunk tonight as you were last night, I'd be surprised if that was the only hole that was sore. As a matter of face I wouldn't be surprised if it was at least twice as sore,\" she said, with a nod toward me.\n\nWe had honey for the hot-cakes, kind of an odd combo to me, but I was ravenous and it hit the spot. \"What should I be doing this morning,\" I asked, slowly coming to life.\n\n\"Me!\" Jill cried out.\n\n\"No, Me! Me!\" Robin argued.\n\nI was still a little slow on the take. Looking on in awe as the two gorgeous ladies vied for my attentions. I could feel myself responding to the idea.\n\n\"Down boy. They're teasing you. Take a dip in the lake, you stink of booze. Then take a ride up the trail and see how bad it's going to be getting out of here,\" Sheri told me.\n\nI'm sure I looked like a little boy who'd had his candy snatched out of his grasp.\n\n\"Aw, don't pout,\" Jill told me while she moved behind me and leaned her breasts against my head. She gave my shoulders a gentle massage. \"Maybe when you get back we'll let you lather us all up with suntan lotion.\"\n\nRobin giggled. \"Right. You've already promised that to both the other men.\"\n\n\"Hey,\" Jill argued, \"First, there are three of us, and second we need to get covered more than once a day, don't you think?\"\n\n\"True, true.\"\n\n\"Where's my towel?\" I asked, looking around.\n\n\"You snooze, you lose. There's a limited supply so we're washing them a few at a time. You don't need to worry anyway. Of course yours would be one of the trousers that managed to stay local. You won't want to head up that trail in just a towel anyway.\" Sheri informed me.\n\n\"You don't need a towel for a dip in the lake,\" Jill reminded me. \"So stop staring already, and get to it, or we'll put the eye-candy away.\"\n\nI turned on my heel and headed out the front door.\n\n\"Wait up, I'll walk with you, I need to check on Dan,\" Robin said, chasing after me.\n\nWe could see Dan at work with a gas weed-whacker down near the waterline. The path down had a decent slope to it, but not enough to make the walk difficult. The path was stone and looked as old as everything else, and just as solid. There was grass, real Bermuda grass, for about 10' on each side of the walk, and then a stretch of 5 feet of plain dirt to the side of that, then more grass. It looked odd.\n\n\"Dan does that to keep everything else from overgrowing the grass. I think its overkill. He sprays a couple of gallons of Roundup on it every couple of months all summer. I figure it can't be good for the environment.\"",
        "\"I'm not going to second-guess him. He's the one doing the work, and the grass looks amazing.\" I had stepped off of the walkway onto the grass, which felt soft and cool under my feet. Robin fell in beside me.\n\nWe walked a few steps in silence before she spoke. \"I'm sorry about last night.\"\n\nI laughed. \"I'm not. It was stupid and wrong; the place and timing were horrible. Under the right circumstances it could have been one of the most sensational experiences of my life, but hell, I'll take it as it was, and thank my lucky stars.\"\n\n\"You are so bad,\" she said, giving me a little bump with her shoulder.\n\n\"Look who's talking, hot-lips.\"\n\n\"Stop, you're embarrassing me.\" She said turning away, as we ambled slowly along.\n\n\"I don't want to do that; I want to get you horny, like me.\" I teased. Her husband was only about 40 feet away.\n\n\"Mission accomplished. I've been horny ever since I started walking around wearing only a towel, one slip away from being completely nude in front of everybody.\" She paused in her stroll, and did a spin for me. \"Walking around with my tits out, I feel like I'm begging everybody to fondle me and have their way with me,\" she said, turning back to the lake.\n\n\"So can we keep our little mistake last night a secret?\" She asked me softly, turning toward where her husband was clearing out the tall weeds.\n\n\"I think so,\" I told her softly. I paused to turn and walk toward the water while she peeled off to check in with her hubby.\n\n\"That's good. I figure if I can trust you with one big secret, maybe I can trust you with more in the future. Maybe much more.\" And with that she turned and walked away.\n\nI walked out onto the dock and took a dive toward the swimming platform about 30 yards out. I used a nice easy freestyle that cut through the cool water easily, refreshing me, and making me feel 100% better. When I got to the platform I climbed up and rested for a bit, letting the warm sun beat down on me. It felt like it was in the high 80's already.\n\nI looked back to the cabin, which was so picturesque perched on the hill. Jill was on the porch, laying towels across the railing to dry, getting the full impact of the sun. Looking down at the water's edge, I saw Robin had entered the lake and was swimming my way, with an easy breaststroke. How apropos. She got to the platform and climbed up the ladder to join me.\n\n\"I have so many great memories of this place, growing up,\" she announced as she shook out her wet hair, and laid down on the wooden platform, taking in the sun. I was taking in the view.\n\n\"This area doesn't change. It takes me right back. I love it,\" she said with a sigh. \"Do you know I had my first boy-girl kiss right here on this platform?\"\n\n\"It's beautiful, the scenery here is amazing.\" I meant both the natural scenery and the view just a few inches from me.\n\n\"Do you always stay hard like that?\" she blurted, out of the blue.\n\n\"I'm not hard,\" I told her. But I was getting there.\n\n\"I mean full and thick like that, semi-hard. You've been like that since I first saw you last night. You're either hard as a rock or just on the verge of getting hard, like now.\" She looked at my stiffening rod. \"OK, maybe not like now, seems you're hard as a rock again! Naughty boy.\"\n\n\"What do you expect, talking like that?\" \n\n\"Well? Is it?\" She insisted.\n\n\"Pretty much,\" I admitted, \"I don't really shrivel up; I stay about 4-5 inches long and pretty thick. Of course, around someone as hot as you, I tend to swell up a bit from there.\"\n\n\"Swell up a bit? You're as fucking big around as a Red-Bull can. I've never seen anything like it.\" She reached out to me, her touch electrifying. \"And the way it just gets thicker and thicker. God it makes me wet to think of that.\"\n\n\"Now you're embarrassing me,\" I told her.\n\n\"Let's get in the water,\" she said. \"I want to hold it again.\"\n\n\"God, you are a bad one! What if someone from the cabin is watching? What will they think if they see us go out of view together?\" I asked her, and then eased into the water with the platform between us and the house, after giving a peak over my shoulder and verifying nobody was checking us out.\n\n\"I know what they'll think,\" she giggled, \"and rightly so. But they'll still give us a few minutes together.\" She jumped in behind me, and within seconds had my hardness in her hand. \"Jeez, you feel good.\"\n\nI reached down between her legs and caressed her crotch, sliding a finger in. \"Ditto.\"\n\nWe just stayed there, one hand each clinging to the ladder, the other fondling each other, quiet, enjoying the moment.\n\nShe pushed me toward the platform. \"Raise your hips up to the surface, I'm going to suck you for real this time,\" she told me very matter-of-factly.\n\nBoth the front and the back of the platform had ladders, and I put the rear one to good use. I looped a leg over the rung at the water's edge, and grabbed one of the wooden platform cross-beams and easily lifted my hips up. It was a little work but not too bad. She went straight for it, licking me, and then sucking me aggressively. It took a while to get it right, so she didn't accidentally inhale a face full of water, and to learn to counter the gentle swells of the lake. It was beautiful to watch, and I relaxed, resisting the urge to come, just letting her pretty face get filled with my hard cock endlessly.\n\n\"Can I feel it in me, for just a second?\" she asked, hesitantly.\n\nI pulled my legs out of the ladder rung, and let my hips sink and reached out to her. Her legs wrapped around my waist and she eased the mouth of her pussy on to me. \"Fuck, you're too big. I don't think I can take it,\" she groaned, with about a third of my length inside of her.\n\n\"Oh, you can take it,\" I told her, pulling her hips inexorably down, penetrating her slowly.\n\n\"Stop, stop,\" she gasped, with just a couple of inches to go. She moaned as she wriggled her hips. \"OK, go slow now.\"\n\nI pushed her down, feeling her press against my pelvis. \"That's it,\" I told her, then started screwing her out there on the lake. After a couple of dozen strokes, she stopped me and climbed off. \n\n\"That was stupid of me,\" she gasped, leaning into me and hugging me. \"I'm going to want more of that.\" She looked over my shoulder, \"Damn, Jill and Sheri are headed here; they're already in the water.\"\n\n\"That was mean,\" I told her, \"get a guy that close, and then leave him hanging.\"\n\n\"I'll make it up to you,\" she teased, then climbed the ladder back onto the platform. I kissed her sweet ass as it passed me, and let my hand slide across her pussy before she was out of reach.\n\n\"You are BAD,\" she hissed, before stretching out.\n\nI let the cool water take down the worst of my erection, and climbed onto the platform just as the other two were getting there.\n\nJill couldn't resist. \"What were you up to? You seemed to disappear from view for a while.\"\n\n\"Checking out the platform tie downs; have to do it every time we come out here. Wouldn't want our platform to float away,\" she explained easily.\n\n\"Mmmm, you have more willpower than I have. If I had the hunk by myself out here, I'd have plenty more to do than check out ropes and stuff.\" Jill giggled, laying down on the platform. With four of us it was getting full.\n\n\"You are so brazen,\" Sheri told her. \n\nI looked across the sea of flesh, and felt myself responding already. Sheri noticed as well.\n\n\"Oh no you don't! You have chores to do, before play. If you don't get started you won't even get back for lunch. And that would be a real shame. I think you'd like to see what's for lunch.\" She gave a nod back toward the cabin. \"Get going.\"\n\n\"Before he goes,\" Jill piped in. \"Couldn't he oil us down, so we don't get burned?\"\n\nSheri rolled her eyes. \"You brought suntan lotion out here?\" \n\nJill waved the bottle. \"Not too hard to swim with.\" Then she looked at me, \"And since I brought the lotion, you could start with me.\"\n\nI looked to Sheri, still not wanting to go too far, but she just kind of rolled her eyes, and then tossed her head at Jill, giving me the go ahead. \"Just the back,\" she warned.\n\nJill pouted, rolling over onto her belly. \"Spoil sport.\"\n\nHer back was still a hell of a thing, and I took my time covering her in the SPF 15 lotion. She was pale, and I thought she should be using something stronger, but used what I had. From her neck and shoulders to her curvaceous butt, I made sure not an inch of flesh went untouched. I carefully extended the lotion down her sides, rubbing the sides of her tits thoroughly. She lifted up a bit, allowing me added access, and as I applied lotion to her firm breasts, my hands slid underneath her and ran across her nipples. She hissed in surprise.\n\n\"Careful, bub,\" my wife reminded me.\n\nI eased down to her lower back, straddling her, my hard cock tracing a path down her ass and between her legs. I applied more lotion and worked my way down to her delicious pale cheeks. She had a distinct tan line, in spite of how pale she was, and I hesitated before breaking any more boundaries. My darling wife was still watching and gave me grief. \"Be thorough there, it would be a shame for that pretty little butt to get all burned up, by the sun.\"\n\nI massaged her ass like my life depended on it, and made sure to get deep within her crack. I moved to the side, straddling only one leg, and opened her up a bit. I took special care around the exposed part of her pussy. I would hate to see that get burned until it was too sensitive too touch. Jill open her legs wider for me, making sure I had good access, which I took advantage of. As I lotioned each side of her moist pussy, I let my fingers rest partially inside her hot slit.\n\n\"I think that's pretty well covered,\" Sheri said softly, her breath shallow. I could swear she was getting excited by my actions.\n\n\"Yeah, and speed up a little, or I'll be burned to a crisp before you even get to me!\" Robin whined.\n\nI finished up with Jill's legs, working down to the bottom of her feet, working pretty quickly, but making sure I was thorough.\n\nI went to Sheri, but she just nodded toward Robin. \"Go ahead and do her, I'll let Jill take care of me - that OK with you, Jill?\"\n\nJill got on her knees and held her open hands out to me, \"Give me some of your juice, handsome,\" she said, and ignoring the innuendo, I squirted some lotion into her hands.\n\nI lathered up Robin even more thoroughly than Jill, since Sheri wasn't quite as observant while getting her own lotion applied. Jill and I ended up working on both the ladies rear ends at the same time. I gave her some extra lotion, and then quickly applied the lotion to Robin's cheeks, before feeling her up thoroughly. I teased her pussy, and massaged her clit, while I watched Jill knead Sheri's ass, wrenching a soft moan out of her. When I finally got Robin to groan for me, Sheri barked at me without even looking.\n\n\"Bastard! Do her legs now, and stop teasing the poor thing.\" Her voice didn't hold any anger in it, and she sighed deeply as her bare pussy was carefully lotioned as well.\n\nWith play time called off, I finished Robin's legs, and stood up to leave. Jill had other ideas, and reached out and rubbed a slippery lotioned hand across my full hard cock. \"Just trying to help you avoid a burn,\" she said with a smile. \"Robin, get the other side?\"\n\nAnd while Jill straddled my prone wife, she and Robin made sure the part of my body normally covered by my swimsuit, was protected from the ravages of the sun. Jill made sure that the sensitive skin of my cock was especially protected. \"Get out of here,\" she finally growled, \"before I get us all in trouble.\"\n\nRegretfully, I stepped over my wife, and took a dive toward the shore.\n\n* * *\n\nAt the cabin Dan was at work in the back and he showed me the work area. Sometime in the past, someone had built a 10 x 12 metal shed up against the main cabin. Dan had been offended by the look, and over the previous summer, had added a rough cut log facade to the thing, matching the look of the cabin pretty damn well. Inside the generator was running, under a large panel and beside a pile of big batteries. There were four Jerry cans of fuel beside it. That and the weed-whacker were the only high tech things there. When I asked for a chainsaw, he just laughed and pointed out a large axe to one side. \"We're kind of old fashioned here. Check out the original grinding stone.\"\n\nHe had a treadle powered grindstone, which must have been as old as the cabin. He took a seat at it and gave me a quick lesson at sharpening. He had put some pants on, but I was still naked as a jaybird, and when I went to sit and sharpen my axe, the spinning grindstone, so near to my crotch and the inside of my thighs had me as nervous as a long-tailed cat in a room full of rocking chairs. He took pity on me after about a minute of near disastrous effort and within a minute had the edge of the axe gleaming.\n\nI took my tool, found my pants and boots in the carport and partially dressed. I headed up the road away from the cabin and within a few hundred yards I knew we were in trouble. The backside of the hill was soaked and the road was thick with mud and puddles. A large branch crossed the road just a little ways further, and I got off the bike and carefully walked around it in the dense woods and heavy underbrush. Back on the bike I made it another 5 minutes before I hit a real doozy. A larger tree had been uprooted, with the entire root ball showing, and was leaning across the trail, the upper part of the tree tangled in another one across the way. The only good news was that ahead I could see the turn in the road, where it met the wider, better tended gravel road.\n\nI had my work cut out for me.\n\nCall me a freak, but I like physical labor. Maybe because my earliest jobs in high school and college were all hard labor. Now that I spent most of my days behind a desk, I liked getting out and getting dirty. Swinging the axe, trying to cut my way through a tree a good two feet in diameter, feeling the intense impact, watching chunks of wood explode away from my precise blows, I loved it all. I enjoyed the feel of the wooden handle in my hands, the flexing of my shoulder muscles, the tension in my back. I worked hard, cutting through the tree, and chopping it up into sections less than three feet long. I got good and filthy, stacking the logs at the side of the road, and even trimming the large branches down and cutting them into more usable pieces. My arms and chest were scraped up from handling the rough bark on the heavy logs, and by the end my hands were starting to feel like hamburger. I don't know how long I was at it, but I was surprised when I saw Jill roll up on her husband's Road King.\n\n\"Damn, Alex! You're filthy! What have you been up to for the last few hours?\" She asked, stepping off the bike. She was wearing her remarkably tight pants, and someone's t-shirt that was way too big. I wanted to rip it off of her. Instead I nodded toward the stacks of wood on the side of the road.\n\n\"There was a tree blocking the road,\" I explained, leaning my axe to one side and wiping my forehead where the sweat was dripping into my eyes.\n\nShe walked to me slowly. \"You done yet?\"\n\n\"Yeah. I think this is good enough. I was just going to cut up a few more for fireplace wood, but I think a rest might do me good.\" Now that I had stopped working, I could feel the ache in my forearms, shoulders and back, and my legs were almost quivering. I'd overdone it, but that was pretty typical for me. Once I got going, I rarely had the good sense to know when to take a break.\n\nJill walked up to me, and rubbed her hands over my chest and shoulders. \"Poor baby, I bet you're completely worn out.\" She leaned forward and placed a tender kiss on one of the worse scrapes. \"And your poor skin! You should have been more careful.\"\n\n\"I just need a break. A short rest, a quick swim, and I can finish that other, smaller branch back there, before sunset.\" I said, my eyes closed, enjoying the feel of her hands on my skin.\n\nI felt her hands lower to my pants button and her lips traced a patch down my stomach. I opened my eyes to look at her as she unbuttoned me and started to ease my pants down. \"You deserve a reward,\" she told me, her hand rubbing my swelling cock through the thick material.\n\nWe were standing in mud, and I suggested we move to the side. She walked past me and sat on one of the wooden pyramids I had created, and beckoned me over. I stepped in front of her, and let her lower my pants and lean forward to give my trouser friend a nice thank you. She had a mischievous look in her eye. \"The girls made me promise I would leave your friend here alone,\" she sighed. \"But if you can keep a secret, well, I didn't promise not to let you do what YOU might want to.\" She leaned forward and opened her mouth just an inch beyond my swollen cock head. \"You're not the kind of man to take advantage of a woman, no matter how much she'd been teasing you. I know you wouldn't be as naughty as to stick your cock in my face and use my mouth for your own pleasure, now would you?\"\n\n\"I hate to break it to you, beautiful, but I am just exactly that naughty.\" I wiped my hands on my pants, removing as much mud and dirt as I could.\n\n\"Oh dear,\" she said plaintively, \"such a strong and virile man, how could I ever stop you? Please don't fuck my face, out here in the open, out where anybody passing could see you take advantage of me!\" She opened her mouth wide and closed her eyes.\n\nI smiled and pushed my hardening meat into her mouth. I reached down and with a finger under her chin, had her close her mouth around me. I held her head and slowly fucked her mouth with the end of my cock, while her devilish tongue did absolutely fiendish things to me, out of view. Her eyes opened and she looked up at me with a look of helplessness that just made me harder. I pulled my cock back and pushed it deep in her mouth, hitting the back of her throat. I felt her give a little push back, and started fucking her pretty face just a little quicker and more forcefully.\n\nShe's such a pretty girl. Big brown eyes that almost exactly match her hair, except for the shades of red. Her look was very natural: unpainted lips, fair skin with a sprinkling of freckles, and a tinge of red where the sun had brightened her upper cheeks just below her eyes. Her eyebrows seemed unplucked, and almost perfect. I took in every little bump, line and nuance of her visage, as my hard cock enjoyed its warm, if redundant journey.\n\nThe constant ongoing teasing and my previous play with Robin had me ready to shoot in no time at all. Or so it seemed to me. As I started to get more and more into fucking her face, her eyes opened wider, and she just let herself go loose, letting my do with her face and mouth what I would. \n\n\"Suck it,\" I told her, holding her face firmly and moving her back and forth slowly on my cock, her mouth and tongue once more working diligently, bringing me that last little bit needed to come.\n\nI felt my breath burning; almost as hard as when I'd been cutting through the main tree. \"I'm going to come for you, beautiful,\" I told her, and she closed her eyes and let me do what I needed.\n\nAnd what I needed was to fuck her face hard, and cum in her hot mouth, exploding hard, feeling her sucking and swallowing with each shot I took. As my breath slowed, and my movements came to a near halt, with my cock buried in her mouth, she took over, sucking me dry, and adding a little extra, sucking me well after I'd finished and slowly restoring some of the hardness to my partner in crime.\n\nShe cast her head down in mock shame. \"Oh you cruel, vicious man! How can I ever look my friends in the eye again? How can I be in the same room as you, knowing you've had me, and may do it again, should I ever be alone with you?\"\n\nI played along. I grabbed her chin and pulled her face up. \"Head up, wench. You're mine now. Any common skirt like you should be happy, nay, proud to be claimed. I will have you again, when we're alone and perhaps when we're not. You'll deny me nothing!\" I stuck my softened cock back in her mouth, feeling it harden as she looked at me anxiously, sucking on demand.",
        "When I finally pulled out of her, she sighed. \"God, that was incredible. I felt so helpless while you used me.\"\n\n\"You think that's incredible? You should try being on my side of it.\" I told her, leaning down and kissing her.\n\n\"If we had more time, I'd take you up on that. I'd love to feel your tongue in me,\" she sighed, standing and pulling my face down for another kiss. \"Now, not a word of this to anybody.\" She suddenly tore off her shirt. \"I want you to quick do anything and everything you've wanted to my tits for a minute. If I have to confess to any naughtiness, we'll let it be that.\"\n\nI was momentarily surprised, and then went after her tits. I sucked, nibbled, licked, and even rubbed my cock across her nipples and in the warm valley between them. She held her tits together, allowing me a way too brief tit fuck. Then I gave each one a thorough sucking and nibble, before being shooed away. I looked down and could see that her chest was filthy. I realized my face was probably not as clean as it should be, but probably a bit cleaner now.\n\nShe looked at herself and smiled, before donning her t-shirt again. \"That's good, real good. I can't wait to 'accidentally' let the girls see that.\"\n\n\"Why are you doing this? Why the sudden wild abandon?\" I asked her while pulling my pants back on. \n\n\"Oh, don't worry. We're giving all of you guys the teasing treatment, and your 'sweet little wifey' is giving it her best. Those tits of hers are like magnets to the other two.\"\n\nI must have looked a little stunned. \"I don't think they're quite getting the treatment you are,\" she admitted. \"At least I know that Dan's not gotten nearly the treat that you've gotten from me, and from Robin, I suspect. We're supposed to be just teasing you guys mercilessly, so that tonight, we each get the treatment from our own men, thank you very much, with a full days pent up lust ready to burst upon us.\"\n\n\"You girls are very bad, you know.\" I teased back, once more leaning down for another kiss.\n\nShe pulled away after a short while. \"OK, stud muffin, I think you're over the limit at the moment.\" She smiled at me, \"C'mon, admit it, don't you think it would be hot to have all three of us couples going at it like teenagers, in the same room? You could be banging your poor wife senseless, and look over and see me riding Jack like there's no tomorrow. Watch Robin take Dan's cock in her mouth and suck him like a Hoover. Doesn't that sound at least a little fun?\"\n\n\"Shit yeah. I just never would have expected it.\" I confessed.\n\n\"Dreamed, yes. Fantasized, yes. But expected, I guess not. But all this bare flesh is getting to all of us. We better get back, though, before they start wondering about us, and before they can get in too much trouble on their own!\" She laughed and walked back to the big bike, the sway in her ass a cry for attention I was dying to answer.\n\n* * *\n\nBack at the cabin I dropped off the axe at the shed, and went looking for a little lunch. I was quickly made aware that I was too dirty to be in the house, and too clothed. Peeking in, I found that Jill was dropping her pants at the entrance. \n\nI turned to head down to the water, and found myself catching the edge of a conversation. \n\n\"C'mon, tell us.\"\n\n\"I swear! I didn't lay a finger on his thing.\"\n\n\"You were gone over an hour; you mean to tell us you did nothing?\" Sheri teased.\n\n\"Well, no, not nothing.\" I peeked in at the window, and saw Jill peel her shirt off.\n\n\"You little slut!\" Robin laughed, \"I knew you'd go over the limit.\"\n\n\"Just a little,\" Jill confessed, and I quietly moved away, stripped off my boots and pants, and headed down for a dip.\n\nHalfway there I could see that Dan and Jack were parked on the shore, with fishing rods out, working the edges of the dock. I didn't know what they expected to catch in the hottest part of the day, but hey, whatever floats your boat.\n\n\"How's the road?\" Dan called out as I walked out on the dock, preparing to cool off.\n\n\"Muddy, wet and overgrown. But almost passable now.\" I told him. I paused while walking out realizing that I didn't even feel awkward walking by the two of them, all three of us naked as the day we were born. \n\nI took a few more steps. \"One more branch to clear out and this sun should do the rest by tomorrow afternoon.\" Any response was missed as I dove, slicing through the water toward the platform. The swimming took the kinks out of my muscles, and I did a couple of laps: out, around the platform and back again. \n\nWhen I climbed the dock ladder, I felt immensely better. Cleaner, refreshed, and relaxed. And not a whit less horny. \n\nI stretched out on the dock, soaking up the heat once more. Dan and Jack were still making a half-assed effort at fishing, but seemed to be spending more time just gabbing. Kind of unusual for guys who didn't tend to be all that chatty.\n\n\"What do you say, Alex?\" Dan said. \"Do the girls seem to be acting a little squirrelly to you?\"\n\n\"Squirrelly? They are acting like they're in heat,\" I laughed. \"Your wives, both of them, have been acting sexier, hornier and wilder than I'd ever have thought possible. They are merciless teases today. It must be some kind of tequila overload. I'm never buying cheap tequila again, if the good stuff produces this kind of reaction!\"\n\nJack laughed out loud. \"OUR wives? Sure, Robin's been a huge tease, but your Sheri is almost out of control. She walks around with those tits of hers just screaming out for attention, and she hasn't missed out on a single opportunity to get up close and personal with me all day.\"\n\n\"Please!\" Dan chimed in, \"Jill's been just as bad as Sheri. I've never seen anything like those two. Not that I mind - oh no, not at all!\"\n\nI grinned, \"I think that's the most important issue here. Do either of you two really mind that our wives are spending the whole day either naked, or nearly so, and showing us a ridiculous amount of attention?\" \n\nI asked Jack point blank, \"Would it be that bad if Jill teased me almost beyond control? As long as she ended up with you tonight?\"\n\n\"If Sheri was doing the same to me, I think I'd be cheering her on, if you don't mind,\" he admitted. \n\n\"What if it was Robin paying you the attention,\" I continued.\n\nHe smiled. \"I think I could live with that.\" He realized what he was saying, and turned to Dan, \"I mean as long as you were cool with it.\"\n\nDan didn't take long to respond. \"I don't know what they're up to,\" he admitted, \"but it's been an incredible day. You did get to do the suntan lotion thing too, didn't you?\"\n\n\"Guilty.\" I admitted with a grin. \"Listen, I overheard some gabbing. It sounds like the teasing is 100% intentional. They're hoping that with all the eye-candy and the overt play, they'll each be at the receiving end of a 'whole lot of lovin' from each of their severely worked up hubbies.\"\n\n\"The plans working for me,\" Jack admitted. \"I'd fuck anything that would keep still for 10 seconds right about now. Their antics have had me aching for hours.\"\n\n\"No shit,\" Dan laughed. \"That lunch scene had me on the verge of shooting several times. You missed out dude.\"\n\n\"Speaking of which, I'm starving.\" I told them, getting up to head back to the cabin for a well deserved meal.\n\n\"Just stick to what's on the menu,\" Jack yelled.\n\nAt the cabin, I had a sandwich waiting for me, along with three beautiful naked women. I was getting hard just in anticipation of being around them again.\n\n\"You poor baby,\" Sheri said, reaching down and giving my exposed hard-on a stroke of her hand. \"Girls, can you give us a couple of minutes? I think I'd like to take the edge off for him. Sounds like he's earned it, from what Jill tells.\" She took me by the hand and escorted me about 10 feet to the nearest bed.\n\nShe pushed me down, but before she could join me she had a momentary change of heart, \"Damn, I better hit the can first. Girls, entertain him for a minute, will ya? I'll be right back.\"\n\nShe disappeared into the bathroom, and Robin strolled over, with Jill in her wake. \"Can we help? Make sure you're ready for her?\" She leaned forward, putting one knee on the bed, and then running a finger from my knee to my crotch. \"Or maybe you'd like to show my girls the attention you gave Jill's?\" Robin said, crawling toward me holding her tits out for me.\n\nI didn't really get an option. Robin's tits were in my face in seconds, and I was sucking away, deliriously happy when I felt Jill's hand on my cock, restoring me to full hardness. Her hand stroked me nice and firmly, preparing me for my wife's attentions.\n\n\"Enough, you harlots!\" my wife cried out, giggling at watching me get inundated under about 240 lbs of best friend flesh. \"Back off and get your own. This one's mine.\" She emphasized it by planting her lips firmly on my cock, while her friends backed off just far enough to be out of the way.\n\nSheri loved oral. It's one of the things that brought us together. She just loved to give head, and, surprise, surprise, I loved getting it. I'd never met anyone like her. When we first started living together, we'd hang out naked around the apartment, and out of the blue, she'd go down on me for a while, get me hard, and leave me hanging, just to attack me again an hour later. I'd come for her several times a day. While watching TV, a commercial was an excuse for 3 minutes of oral sex. A boring show might be enough time to actually get off. And public blow-jobs were part of the game as well. I would often try to move her blow-jobs towards normal sex, but rarely was I successful. Our sex was great, don't get me wrong, but 3 or 4 times a week was about as often as we did it, while I probably felt her lips on my cock at least twice a day. On occasion she'd get in the mood for a marathon, and I'd spend half the day with my cock between her lips.\n\nI never got tired of watching her suck me, or just leaning back and letting her have her way.\n\nShe loved the fact, and made no bones about it, that I had pretty extraordinary recovery capability. Like a teenager, I could come and be ready to go again in 5 minutes, quite often never even going soft after finishing. I believe it was this added benefit that finally won her over for good. She was a beautiful, sexy woman, and I was always amazed that she had gone for me.\n\nSheri happily gave a quick demonstration of her magical mouth, while her friends openly watched. I thought I'd be able to last a while, after my recent finish between Jill's generous lips, but once more, the view, the situation, and my wife's extensive experience, particularly where it concerns me, had me blowing after an embarrassingly short time. \n\nAfter wiping her lips, in an exaggerated gesture, Sheri did provide a little encouragement. \"God that was a quick one. Must be the audience. I wish I'd known that was the secret to pulling your trigger; it might have saved me hours and hours of time spent with rug burn knees and a sore jaw.\" She giggled. \"OK, sweetie, enjoy lunch, I'm going to go see if the other boys might need a suntan lotion refresh. Care to join me Jill?\"\n\nJill seemed a bit reluctant, but she eventually left Robin and I alone, except for a thick sandwich. I took a huge bite.\n\n\"Give me that,\" Robin said, pushing the table away from me, and taking the sandwich from my hand and straddling my lap. \"You must be worn out, and your arms exhausted from all that work. Let me help you.\" She fed me a bit of sandwich, and then wiped my lips clean. Her crotch pressed against mine, her tits pressed against my upper chest. She caressed my face with her lips, while I chewed. \n\nShe fed me that way, teasing me, touching me, grinding her hips against mine, occasionally kissing me, letting her tongue tangle with mine. The sandwich slowly disappeared, my stomach stopped growling, and my alter-ego strived to gain my lunch partner's attention.\n\n\"Are you getting hard for me?\" she finally asked, when there could no longer be any doubt about it.\n\n\"How could I not?\" I responded, pulling her close, while I swallowed the last of my sandwich.\n\nShe brushed any last crumbs off my lips, reached back and passed me my glass of water, and after I'd washed down the last remnants, she stood up, still straddling me, her tits right in front of my face. My lips captured the nearest nipple while she peeked out the windows, searching out our companions. She finally drew her nipple out of my mouth and replaced it with her own sensuous lips, giving me a warm, passionate kiss.\n\n\"Ok, here's the deal,\" she told me softly, a minute later, \"If you just put it in me, but we didn't really move, then it wouldn't technically be fucking, would it?\" She asked, raising her hips up. She reached for me, and placed me at her tiny opening.\n\n\"Technically, no.\" I agreed, while I started to lower her onto my cock.\n\nWith a couple of inches inside of her, she gasped. \"Slowly! You stretch me so tightly, you have to go slow.\" I pulled her down a little farther, then worried her tits some more while she got used to being filled. \n\n\"Check out if anyone's headed this way,\" she said, gasping as she squirmed to take more of me.\n\nI stood; with her arms and legs wrapped around me, her weight finally finished the job and helped me to fully skewer her. I walked to the window and looked down to the shore, over her shoulder.\n\n\"How bad are they being?\" she gasped, holding herself tight against me. \n\nI saw that Jill was with Dan, down by the water's edge. She was sitting behind him, and he was seated between her legs, facing out to the water. She was pressed firmly against his back and looking over his shoulder. \"A lot of contact between Jill and Dan, but nothing too naughty,\" I told her, lifting her up the full length of my erection, and lowering her slowly. Her slender, small body was a relief to move around, after tossing around huge chunks of lumber all morning. And it was a lot softer against my skin.\n\n\"You're being bad, Alex,\" she told me softly, and then kissed me deeply. I could feel her hot pussy clutching at me, pulsing around my cock. \"How about the other two? Can you see what your wife is up to?\"\n\nI could barely see them out on the platform. \"I can't really tell. They're on the swimming platform.\" I turned sideways, letting her look as well. \n\n\"Dammit, I can't tell either,\" she said while I bounced her on my cock a bit.\n\n\"Stop Alex, that's over the line,\" she warned me, with just a hint of steel in her voice. \"Just stay inside me for a while, please.\" She clung to me, and I felt her tensing up on my cock again.\n\nI held her firmly, one hand holding her tight little butt, the other crossing her back. I concentrated on my stiffness, buried so deeply inside of her. I flexed my ass, tightening that muscle just behind my swollen balls, forcing my cock to swell within her, screwing with her from the inside, if I wasn't allowed to fuck her thoroughly from the outside.\n\nI felt her teeth press into my shoulder. She moaned beautifully, before clasping my face in her delicate little hands, and staring into my eyes. \n\n\"Kiss me, Alex, kiss me hard, and make me come on your cock, just like this.\" She pressed her lips to mine, and I turned and walked with her, kissing her, the motion of our movement creating the little bit of friction she needed. I needed a whole lot more, after my wife's recent escapade, but I was happy enough to give Robin what she wanted, since I'd already been on the receiving side of her lips twice.\n\nMy hands clutched her firm ass cheeks, squeezing her soft flesh, and I carried her to the bed where I lowered her onto her back, still kissing her. I shoved hard into her, putting my hands on her shoulders and pulling her down firmly, pushing as deeply as I could. Completely filling her, I let my hands slide down from her shoulders to her sweet tits. I fondled them, playing with her hard little nipples, enjoying being able to hold them, squeezing, twisting, while her breath hissed in my mouth. She ripped her lips from mine, groaning.\n\n\"That's it, Alex, I'm coming. Oooh,\" she moaned, her body quivering, her pussy clamping down on my rod, waves of passion riding my staff deep inside of her. \"Don't move, don't you dare move, just a few seconds more, just....\"\n\n\"FUCK!\" she cried out loudly before I could quickly cover her mouth with mine, my tongue ravaging her mouth, while she came on me again, hard, her feet striking my ass from behind trying to draw me even deeper.\n\nThe tenseness in her body slowly dissipated, and she melted beneath me. She sighed hugely, her mouth slack, her legs dropping to the bed. She looked at me with her beautiful eyes, and finally gave me a weak smile. \n\n\"We were bad, Alex. Very bad. Please don't tell. I couldn't help it.\"\n\nI pulled out of her and looked down at her red, open pussy. Unable to resist, I lowered my mouth to her crotch and tasted her, just a bit, before pulling away.\n\nI walked away from her, before I lost all control and fucked her senseless.\n\n\"Tonight,\" I told her, \"I want you to watch while I fuck the shit out of Sheri. I want you to know that I'll be thinking of you, imagine it's your sweet pussy I'm plundering.\"\n\n\"Mmmm, I like that,\" she said, laying on her side and watching me. \"And when I ride Dan into oblivion, you should know that it's you I'll be thinking of as well.\"\n\n\"You're a bad girl, you know that Robin?\"\n\n\"I'll be bad for you, given a chance,\" she said softly, her eyes burning into me.\n\nI had to get out of there. I wanted this vixen way too much.\n\nAfter almost carving myself up sharpening my axe on Dan's antique grindstone, I headed back up the trail, fully clothed this time. I could feel the tightness of a light burn on my skin, and didn't want to exacerbate it. \n\nHalfway through taking care of the wayward branch, and a few of its buddies, I found Dan working his way up the trail behind me, his weed-whacker announcing his presence before he got to me. He was trimming back the sorry excuse for a road, occasionally taking his machete to any bigger stuff extending out over the 10 foot wide set of twin dirt ruts.\n\nI had the branch cleared out and was cutting it to size, once more creating a wood stack that we could fetch later, when he finally got to me. He shut down the noisy gas tool, and took a breather.\n\n\"Sorry it's turning into a working vacation,\" he said, looking over the work I'd done.\n\n\"You should be saying sorry to Jack, if you left him behind for those girls to tease the shit out of him,\" I laughed. \n\n\"Naw, I put him to work with the Round-up, spraying my buffer area. If he finishes that, he's supposed to work on the broken window shutter, doing what he can to repair it. I told him worse comes to worse, just nail it shut. Anyway, the girls were busy airing out the cushions and mattresses on the front porch. Quite a sight that, three naked girls fighting with a queen sized mattress.\"\n\nWe talked for a while, and I walked with him, wielding the machete while he did the weed whacking. We talked about what he could do to make the cabin more secure. He was looking for low tech answers, better shutters, warning signs, locking the interior better. I had to tell him I thought that a determined person could probably get in no matter what. And with the place out in the middle of nowhere, it'd be hard to stop them. My idea was more in line with my technical skills. I thought we could put cameras on the outside, and alarms on the windows and doors that would set off a cellular call to his phone. If anyone did break in, he'd at least know about it, and chances are, he could make the drive up to the cabin in just a few hours and still probably catch the perpetrators. At least he could take care of any damage.\n\nWe discussed a few different possibilities and made it as far as the big tree I'd cut down.\n\n\"Shit!\" He looked over the logs carefully stacked on the side. \"I should have known that sucker would fall some day. It had been leaning badly ever since I started coming up here over four years ago. That was a lot of work, I bet.\" He laughed, giving me a slug. \"Better you than me!\"",
        "\"I didn't mind,\" I admitted. \"I kind of enjoyed it. I like working outdoors. This may sound stupid, but I feel great after all the work today.\"\n\n\"I know what you mean. Robin gives me crap for spending most of our outings up here working on the place, but I love to see the results. There's something really fulfilling about it.\" \n\nWe turned around at the tree. The sun was getting low, and he was afraid if we took much longer, we'd be in the dark before we got back. He was probably right, but we were saved from finding out when Jack showed up to shuttle us back on his bike. He gave Dan a ride back, taking the tools with him, and I decided to jog back to my bike, and head back on my own. It was a tough run, with the mud and pools of water, but I made it before too long, and was able to ride back while the sun was still a good bit above the horizon. \n\nAs part of our provisions, we'd brought an entire beef tenderloin with us, and Dan had pulled out an old Weber and was cooking it up by the time I got back. I put the axe away, stripped, and jogged down to the water without even checking in with the others. I felt sweaty and grubby, and wanted to rinse off and cool off before dinner.\n\nSheri was waiting for me at the end of the dock when I finished my brisk swim, holding out a towel for me. Looking up from the water at this naked beauty, waiting patiently, I had to smile once more at the circumstances that had accidentally turned our place into a nudist cabin. The accidental nudist cabin.\n\nI stood in front of her and she dried me off. It was incredibly sensual, feeling her squat down and drying each of my legs, as if nude swimming was the most natural thing in the world. \n\nShe seemed a bit nervous, and started in hesitantly. \"You're OK with all the playing around today, aren't you?\" She looked up at me, with those big blue eyes. \"I mean, we did a lot of teasing, but I didn't go over the line. Not really.\" She said, almost apologetically. \"You had fun, didn't you?\"\n\n\"It's been a great day,\" I told her, taking her in my arms. \"And I hate to say it, but I really enjoyed watching you tease the guys, knowing how hot and bothered they were getting, and that later on you'd be with me, while they could only wish they were in my shoes. Shoes? I guess that's not the best metaphor.\" I gave her a kiss. \"You OK?\"\n\n\"Never better.\" She sighed and sank into me, hugging me almost desperately tight. \n\nWe sat down on the dock side by side, looking out over the water. I knew my wife, and she had something to say, but the best route was for me to just wait for her to figure out how she wanted to say it.\n\nIt took a while, but she finally spit it out. \"I loved it. I loved the attention, and seeing those poor boys getting all hard over me, and leaving them worked up and horny as shit. Maybe not at first, when I was still a little nervous, and worried they might think me trashy, or not like me or something.\" She giggled, \"That certainly didn't turn out to be the problem.\" She hesitated, \"I might have let them take a little too many liberties with me, especially with these,\" she remarked, holding her tits out for me, \"more than I had planned on. I'm sorry about that.\"\n\n\"Don't be.\" I reached out and caressed her full, firm, tits, my fingers lingering over the reddish areas where I figured someone's stubble caused some irritation. \"It was just play. A little fun and games. Nobody here is trying to steal anybody's spouse or anything like that. It's just a kind of wild freedom to indulge a little in each other; all the time knowing there are limits, and wanting to push them just a little. Maybe we just want to think that we're the special ones, the one that our friends would risk everything for.\"\n\nShe giggled some more, \"I figured you probably pushed a few limits today too, huh?\" \n\n\"Absolutely,\" I laughed. \"I had to get out of that cabin after lunch with Robin, before I forgot myself, and did something really stupid.\n\n\"You know, I hear about how naturists get so that being around others naked isn't really sexual. I don't know how. Every time I see you women, any of you, out here in the open, completely naked, my heart just wants to burst from excitement. Maybe when there's the unfulfilled potential for sexual activity, it changes things, but I've got to believe that a week from now, seeing one of those pretty girls walking down that trail to me, naked, would lead to an instant hard-on, and naughty fantasies.\"\n\n\"No shit.\" Sheri said. \"When you walk near a guy, brush against him and see his manhood jump to attention, how can you not feel that down in your loins? Immediately, I feel my nipples hardening, and I know that they can see that too, and I know what they want. I know what they want to do to me. Even with their wives just a little ways away, I know they'd take a huge chance just to touch me.\" \n\n\"Pretty intense, huh?\" I asked my dear, quivering wife.\n\n\"Mmmhmm.\" She seemed lost in her thoughts and then shook her head and came back to Earth. \"We're cool though, right?\" She seemed inordinately nervous, and I wonder if maybe one of her barriers had slipped more than just a little. Not like I had room to complain.\n\n\"Sheri, you're going home with me when this is all over. That's what matters. If the playing around got a little out of hand, as long as we leave it here, at the cabin, who does it really hurt? I know you love me, and I love you, and everything else is just letting our hair down for once.\"\n\nShe leaned into me, sighing. \"You're too good to be real.\"\n\n\"And you're too wild to be caged,\" I teased. \"Although I don't think I ever would have guessed it. You've surprised me this weekend. I have to confess I like it. I like the teasing, and am fine with what's been going on.\"\n\nI heard Jill's voice from nearby. \"Ok, lovebirds! Dinner is about ready, and even though lumberjack Alex may have earned a rest, we ladies have still got to pull a few things together. Coming?\"\n\nI hadn't even realized that Sheri's hand had wandered back to my lap, and was bringing me to life, yet again. When I stood, and helped my wife stand up, Jill looked us over. \"Jeez, you guys! Alex, doesn't that thing ever go down? You're going to give my man a complex.\"\n\nSheri giggled. \"Oh, I think your man's been doing just fine on his own. Quite responsive, that one.\"\n\nJill laughed. \"I bet I'll walk bow-legged for a week after tonight. You've got him primed and ready to go.\"\n\n\"That was the idea, right?\" Sheri said as we walked along hand-in-hand.\n\n\"Shh! That's our secret. You're not supposed to share that with the enemy!\" Jill said, falling in step next to me, and snaking her arm around my hips. I placed my arm across her shoulders, then let is slide down to cup her delicious ass.\n\nThe sun was setting behind us, a sliver of orange on the horizon, a little off to our left as we walked up the hill. \n\n\"I'm a lumberjack and I'm Ok, I sleep all night and I work all day,\" I started singing, just happy as could be with wear life had taken me at that very moment.\n\n\"As long as you don't start wearing women's clothing, 'and hanging out in bars',\" Jill warned me, singing the second half of her statement.\n\nGotta love an educated woman.\n\n\"The day turned out pretty nice, after the rough start we had.\" I said as we approached the house.\n\n\"Nice?\" Jill said, almost in shock, \"Abso-fucking-lutely incredible is what I'm thinking.\"\n\nSheri giggled. \"I'm glad we're in agreement. I hope everyone else thinks so.\"\n\nJill snorted. \"Just stick those big titties out there, and tell the boys what they're supposed to think. I'm sure they'll agree to whatever you tell them.\"\n\n\"Cool. I'm going to tell Jack to fuck your pretty little head off tonight, and I might even give him a flash or two for inspiration.\" Sheri told her friend.\n\n\"Mmmm, maybe I'll do the same for you. With Alex I mean. I mean with you. Oh shit, you know what I mean.\" Jill mumbled, stumbling over her words.\n\nWe saw Jack was tending the grill, with tongs in his hand, and his substantial hard-on, just inches from the hot metal. \"Careful, bud!\" I called out to him from a few feet away, \"Don't burn that thing!\"\n\nHe looked at me quizzically, and turned the tenderloin with the tongs. \"It's doing fine,\" he said. \n\n\"That's not the meat you should be worried about.\" Sheri warned him.\n\nHe looked down and saw his dick was waving in the air only about an inch away from the rounded kettle. He turned his hips toward us, \"Whoops! Thanks for the warning. But if y'all weren't looking so incredibly hot, I wouldn't have this problem, you know.\"\n\n\"Thanks,\" I blurted, \"it's nice to know you care.\"\n\n\"Not you, asshole,\" he laughed. \"The other two.\"\n\nWe were standing just a couple of feet away, and I reached out and squeezed the nearest tit on each woman. \"Don't you mean the other four?\"\n\nSheri slapped my hand away, but Jill pushed herself against me. \"Don't worry; I'll take good care of that bad boy after dinner,\" she told Jack. I rubbed her nipple just a bit, feeling it responding, then pulled my hand away and gave her rear a loud smack, eliciting a yelp.\n\nSheri and I entered the cabin, to find Dan and Robin locked in a passionate embrace. \"Get a room you two!\" I teased.\n\n\"We've got one,\" Dan said with a smile, and then he peeled himself away and finished setting the table, while Sheri and Robin whispered between themselves.\n\nDinner was a remarkably calm affair, with a wonderful meal, and a gallon of Cabernet to wash it down. As the meal ended, I could feel the tension in the room building. I was certain we all knew where this would soon be heading. The girls once more volunteered for cleanup duty, and Dan started up our fireplace again. It was still warm in the cabin, but with the sun down, and the breeze cutting through the room, it was rapidly cooling off. Dan went to work starting up the fire, and I indulged in one of my worse habits, retiring to the front porch, and lighting up a big old Fuente Double Corona. My little travel wallet held four oversized cigars, and I offered one to Jack, an excellent Ashton, who happily accepted and joined me, looking out over the water.\n\nWe just rocked in the chairs, inhaling the strong smoke.\n\n\"Best fucking day in years,\" he finally sighed.\n\n\"I'll second that,\" I told him, and we tapped our cigars against each other, as if toasting.\n\n\"I got a confession,\" he said softly. \"I might have gone a little farther with Sheri then she or I planned.\" He hesitated before continuing, \"I don't mean nothing by it, I hope you know, but damn, she's a sexy woman.\"\n\nI reached out and gave him a playful slug on the shoulder. \"It was their game. We're only fucking men, right? Slaves to our hormones, which they so skillfully put into play.\" I took a deep draw, lazily letting the smoke slowly escape my lips. \"I figure I'm just as guilty as you, with Jill. You might find some beard rash on her chest, if you were to look closely. I should have shaved this morning.\"\n\nHe giggled. \"Ditto.\"\n\n\"In the end, we know who we're going home with, right?\" I reminded him.\n\n\"Fuck yeah. What happens in the cabin stays in the cabin,\" he quipped.\n\n\"Then you're forgiven. For whatever happened today, and for anything else that may happen tonight or tomorrow. As long as when we hit the road tomorrow, we're back to status quo.\"\n\n\"Aces,\" he sighed, leaning back and drawing on his cigar, blowing big lazy smoke rings up into the night.\n\nI sat back, picturing Jill on that path, her mouth a chamber of pleasure, while I used her. I looked over at Jack, who was similarly relaxed; at least most of him was. His hand was at work slowly stroking himself.\n\n\"You reliving an especially nice memory?\" I asked quietly.\n\n\"Mmmhmm. You?\" \n\n\"Oh, yeah. You, sir, are a lucky man.\"\n\n\"I think we all are, this weekend,\" he said softly.\n\nDan showed up a minute later, taking one of the two remaining seats. \"Damn. Don't do that!\"\n\n\"Do what?\" I asked.\n\n\"Don't leave me in there with all three of them, they're out of control!\" \n\nWe laughed and I passed him a stogey as well. This was the life. Country life, full belly, a good cigar, and a room of naked ladies getting worked up behind us.\n\nRobin opened the screen door beside us. \"Get your asses in here before the bugs eat you alive. You can bring those stinky smoke sticks in if you want; I figure the smoke from the fireplace can use the competition. At least as long as you don't try to go 'Clinton' on me with one of those.\"\n\nI got up and listened to Jack moan. \"Damn it! Why'd she have to go and plant that image in my mind?\"\n\nWe laughed, and squeezed through the front door. Forty eight hours earlier, if he'd brushed against me naked, I probably would have bolted; but now it was natural, and right.\n\nJill called out to me, \"What have you got on tap for us tonight, Alex?\"\n\nI went to the cabinet shelf I'd commandeered, and brought down three bottles. \"I've got an excellent sipping rum, Cruzan Single Barrel, for those who would like to try that, and if you'll give me a minute,\" I displayed the bottle of Bailey's Irish Cream, and the 1/2 bottle of Tequila left from the previous night. I poured half the Bailey's slowly into the Tequila bottle. \"We've got a concoction that goes by a few different names, including the 'Naked Orgasm'.\"\n\n\"Real subtle, asshole,\" my wife commented.\n\n\"Hey! I didn't name it, and if y'all had just finished the tequila last night we'd be having Ecstasy shots instead.\" I told her, carrying the bottles over and placing them on the coffee table.\n\n\"What's in that?\" Jack asked.\n\n\"Bailey's and Vodka,\" I explained.\n\n\"Cool, we can keep that in reserve,\" Jill suggested.\n\n\"Not me. I'm dying to see if the difference between good rum and what I've been swilling is anything like the difference in tequilas,\" Robin laughed.\n\nEveryone but Dan and I had assumed the same seating as the night before. It made me think of school and sitting in someone else's seat. Dan had slipped out to return with some more wood to stack beside the fire.\n\nI tapped the ash off of my cigar, into an empty mug, before relighting it. My mistake. Dan moved over and plopped down between Robin and Sheri, leaving me the seat next to Jill. Looking across, I could see that Robin already was working on the rum. The little tease licked the entire end of the bottle after her sip, her tongue looking especially sensual.\n\nI took the only open spot, listening in as Jack told a story about early love that ended in an impossibly embarrassing situation. The night was nothing like the previous one. Everyone was in a great mood to start, the weather was ideal, and the conversation ebbed and flowed naturally, with two and even three discussions going on at the same time, without any difficulties. There was a lot of excitement and agitation in some of the discussions, and I just loved watching the girls waving their arms around while talking, and watching the resultant counterpoint activity in the jiggling of their tits.\n\nDamn the person who invented bras!\n\nThe liquor smoothly transitioned around the table with Jack, Robin and I savoring the rum, while our partners polished off the 'Orgasms'. Robin made it clear she enjoyed the rum, and it was much improved, but nothing like the difference between good and bad tequila.\n\n\"Next time we come up here, I think you should double the stock of tequila,\" she said thoughtfully. \n\nEasy enough for her to say, at over $50 a bottle. Then again, a couple of hundred bucks was a small price to pay to get her to open up like she had.\n\nTalk eventually got around to our less-than-routine activities of the day. I immediately felt myself responding to the direction of the conversation, looking across at Robin who was being lightly fondled by her husband.\n\nJill took the bull by the horns. \"It sounds to me like everyone had a good time with all the teasing and playing around going on,\" she stated, looked around for any dissent. She would have had to wait a long time.\n\nShe leaned forward over the coffee table, took a quick sip from the 'Naked Orgasm' bottle, and said softly. \"Would anybody else like to play a little more?\"\n\nI don't know if it was taken for granted that the guys were up for anything. It was a fact that all three of us were 'up' for something. But we seemed to be waiting for agreement from all the girls.\n\nSheri leaned in, and took the bottle from in front of Jill, and took a long drink, then set the bottle down. \"I'm in.\"\n\nThey both turned to look at Robin.\n\n\"Are you kidding? Do you even have to ask?\" She laughed out loud, a full bodied, tit shaking laugh. \"I just don't know how to start!\"\n\nAnd that, really, was the crux of the matter.\n\n\"I have a suggestion,\" Dan said, pausing.\n\n\"Fine, then spit it out already!\" Jill told him.\n\n\"How about if every lady in the room sat on her husband's lap for a couple of minutes, and discussed their expectations of the evening.\"\n\nFor two of the couples, that was a simple shift in position. In our case, Sheri came over to me and deposited herself in my lap, carefully, without impaling herself.\n\n\"Where do you think this is headed?\" She asked me nervously. \n\n\"Only as far as you want it to.\"\n\n\"Where do you think we should draw the lines?\" she asked, nibbling on my shoulder, while I fondled her excited tits.\n\n\"Any limits on the hands?\" I asked her.\n\n\"I guess not,\" she said softly.\n\n\"Any limits on your magnificent tits? And before you say anything, remember, the wrong answer here may drive one of these guys to kill himself.\"\n\nShe giggled, \"What is it about you men, and a set of big firm tits?\"\n\n\"Natural tits.\" I added.\n\n\"Ok, big firm natural tits. What's up with that?\" \n\n\"Why not ask why the sun shines, why a wolf howls at the moon, why birds migrate in winter? It's in our nature.\"\n\nShe was still giggling, and she said softly, \"OK, I think there's pretty much no limit on these babies.\" \n\n\"Any limits on our mouths?\" I asked, wondering where her perceived limits really were. With her oral fixation, I half expected her answer.\n\n\"Not if you don't mind,\" she said finally.\n\n\"I don't mind. I'm thinking I'd kind of like to see that.\"\n\n\"Really?\" she asked, cautiously.\n\n\"Really. And if you do it, I expect to have a good view.\" I told her.\n\nShe blushed, which was pretty. \"I think I can manage that.\"\n\nI reached between her legs and caressed her, making her moan. \"How about this?\"\n\n\"Nothing bigger than a finger except for you,\" she said quickly.\n\n\"OK, I guess that's settled,\" I said.\n\n\"Is it? What about this thing?\" she said, holding my hard cock.\n\n\"I'll go by your rules.\"\n\n\"But what if Robin or Jill doesn't have the same rules, are you going to disappoint them?\" she asked.\n\n\"I think they can survive,\" I told her.\n\nShe was quiet a moment. \"What if I don't mind?\" she finally asked.\n\nI was a little stunned, \"Huh?\"\n\n\"If they want to go further than me, I don't mind. Like you, I even think I'd kind of like to see it,\" she said slowly.\n\n\"Are you sure?\" \n\n\"Let me spell it out for you. If Robin is willing to let you stick that inside of her, I think you should.\" She continued, looking me in the eye. \"I'd like to hear her squeal again.\"\n\n\"And Jill?\" \n\n\"As far as she can take it.\" \n\nI closed my eyes and thought about it. \"I don't know, Sheri. If we go down that road, their husbands might expect the same.\"\n\n\"I'll deal with it. I'm sure I can find ways to get their mind off of that.\" As if to prove her point, she slid off of my lap and took my cock in her mouth, then licked it casually, looking around at the rest of our play partners.\n\nI caressed her hair while she licked me, and waited to see the outcome of the other conversations. I didn't have to wait long.\n\n\"Ladies? How about if you all move clockwise, and tell your new partner where you think the evening should go?\" He smiled, looking directly at Sheri, eager to play.",
        "No more eager than Jill it seemed, who was climbing into my lap so quickly that Sheri barely had time to get out of the way. \n\nI looked at the nude Amazon, perched on my lap sideways, her legs extended toward her husband, my hard-on pressed against her hip. I held her easily, one arm around her back, one arm around her waist, just enjoying feeling her, seeing her naked flesh so close. Then she leaned back, almost stretched out, using the couch arm as a back rest. She looked incredible, with all her substantial charms in easy reach.\n\n\"Did you hear us?\" she asked me.\n\n\"Sorry, not a word. Can I kiss you?\"\n\nShe didn't answer, she just leaned forward a little, and I bent down allowing our lips to meet. We exchanged a long ardent kiss.\n\nAs we pulled apart, I asked her the $64,000 question. \"Do you want to tell me about your limits, or should I just find out on my own?\"\n\n\"Full penetration is off limits. That's it,\" she said. \"That and we can't leave this area.\" She smiled, sat up a little, and kissed me softly. She then ran her hands down her body, in an extremely sexy way. \"It's all yours, your own playground,\" she smiled as she lay back against the couch arm. \"I'll tell you now; I'll be paying for this for a while, so I expect you to make it worthwhile.\"\n\nI let my hand slowly caress her torso, and finally move up to her tit, and gave it a squeeze. \"You know, that's a pretty devastating offer.\" I leaned down and kissed her again, loving the taste of her. \"I wonder if Dan has plans for keeping us moving around the table. How much time do you think we have?\"\n\n\"I don't care. Take your time. If I have to go, I'll be back,\" she said hungrily, her hand sliding between us and grasping me. \"I wish I could let you go all the way, but that's not in the cards, at least not tonight. Not while everybody's awake.\"\n\nDamn. That was pretty clear.\n\nShe stretched, her arms extending above her head, her legs tensing, then separating slightly. Her back arched, pushing her tits to the sky. Then she relaxed, opening up her upper body for me. \n\nNot one to look a gift horse in the mouth, I put my mouth to good use, leaning forward and taking her tits in my hands, squeezing them, and taking turns licking her nipples and watching them swell. I was nibbling on one, when I heard the chiming of an alarm. My hand had just reached down to the 'V' of her legs. Damn it!\n\n\"I think it's time to switch,\" Dan said, then I watched him take his watch off and adjust it, then lay it back on the table. He definitely did have a plan.\n\n\"I don't know how I'm going to sit on his lap,\" Jill whispered in my ear, and I suddenly remembered the huge difference in size between the two of them.\n\nRobin waited patiently for her seat to open up, and then she was climbing into my lap wrapping her arms around me. \"Ready for me, tiger?\"\n\n\"What do you think?\" I asked her with a smile.\n\n\"I think you've been very patient, and should be rewarded,\" she said, giving my hardness a squeeze.\n\n\"So what should I know about your limits?\" I asked her.\n\nShe gave me a huge smile, and then leaned and whispered in my ear. \"My ass is off limits to your friend here.\" She emphasized the 'friend' with a squeeze of my manhood. \"Other than that, I'm yours until that stupid alarm goes off again.\"\n\nIt was everything I'd hoped for, and more than I'd dared to dream. \"Dan is cool with that?\" \n\n\"Dan is eager. He wants to see me cum on your cock. We shouldn't disappoint him. He is the host after all.\" She then asked a little more timidly, \"Is that going to be OK with Sheri?\"\n\n\"More than OK,\" I told her.\n\nShe closed her eyes, and I saw her shiver, \"Thank God! I was so afraid that we'd have to stop short.\" She looked over at my wife, who had Jack's face buried in her tits already. \"I'm going to have to thank her properly, when this is over.\"\n\n\"I'm hoping this is never over,\" I told her, hugging her tightly and kissing her warmly.\n\nShe squirmed in my arms, \"I want to see what Jill looks like on Dan,\" she giggled, turning in my lap and facing away. I had one hand on her tit, and the other one caressing her delightful pussy, my fingers teasing her entrance, separating the lips without penetrating. I looked over her shoulder to see Jill straddling Dan, and he was almost invisible beneath her. She was pulling his face against her chest, and looking around to see what was going on behind her. I kissed and nibbled on Robin's neck and ear, getting her squirming, while I played with her body in full view of everybody present.\n\nI was sorry to hear that alarm go off, but I knew that the constant switching and teasing would make the whole thing that more incredible. That Dan was a slick one. I was going to have to have Sheri thank him properly when this was over. \n\nSheri took no time at all to get what she wanted. She pulled me down the couch a bit, and then straddled me, taking me inside of her. I slid in easily, and gasped at the relief. \"Fuck. I needed that.\"\n\n\"Having fun?\" she asked.\n\n\"Yes. And you?\" \n\n\"Oh yeah,\" she gave me a wiggle. \"What are their rules?\" \n\n\"Jill said no penetration,\" I told her.\n\n\"I kind of figured,\" she laughed, \"and Robin?\"\n\n\"The sky's the limit,\" I told her.\n\n\"Fuck! Say that again, it made my pussy jump the first time,\" she hissed, clinging to me.\n\n\"I'll be fucking her until she screams before the night is through,\" I told her. \"I'm going to stick this cock so far inside of her that I'm going to have her speaking in tongues.\"\n\n\"Jesus,\" she moaned, moving up and down on my cock, openly fucking me in front of her friends. I looked around and saw our hosts watching. \n\n\"Don't look now, but Dan and Robin are both looking so see what I've got in store for her in a little while,\" I told her. \n\n\"Oh God, that is so damned hot.\" She settled deep onto my cock, then lifted all the way up, and slowly took it again. \"How did we get here? Can you believe this?\" \n\n\"We can thank some damn thief for getting the ball rolling,\" I told her, \"and some naughty, devious ladies for getting behind the whole teasing thing.\"\n\n\"And don't forget Mr. Tequila last night. Without the tequila, I don't think we would have had an observer last night when I sucked you off. That little show had her so hot to play today I was surprised she didn't just jump your bones right in front of everybody.\"\n\n\"So what are your plans for these boys?\" I asked her.\n\n\"The world's best, most extended blow job,\" she said confidently. \"After this I'm going to spend every minute sucking strange cock. I hope they have stamina, but if they don't, well I'll just have to get them up again. I'd like to go for six.\" She started fucking me a little more animatedly. \"I hope Jill blows you next. I think I'd like to have her get a taste of me.\" The alarm went off before she had finished speaking.\n\n\"We'll see,\" I told her, watching her take a small sip of the rum before moving on. She went straight to her knees in front of Dan. No doubt about what she was planning.\n\nIt turned out that all three of the girls had the same plan in mind. Jill got down in front of me, and I scooted to the edge of the couch to improve her access. She wasn't in a hurry to get to the main course, and she licked me and teased me with her hands, lips and tongue, without taking me into her mouth. She took her time cleaning any trace of my wife off of my hardness, without a hint of fastidiousness. Just the opposite, she seemed to enjoy it. I looked around and watched the other guys relish being on the receiving end of a blow-job from their friend's wives, while their own spouses went to work with their hands and mouths elsewhere.\n\nI watched my wife blow Dan, taking his entire cock in her mouth repeatedly, while he groaned his appreciation. He always looked so young, until you saw that angry red cock of his pointing up, loaded for bear. I swear it looked like she was corrupting a neighborhood youth. I looked over at Jack, watching him scan the activity, gazing down at Robin's active mouth, then glancing over to see what Jill was doing for me, before looking across the way to gaze on Sheri's artful oral play.\n\nOur eyes locked and we both grew immense smiles. If he was jealous, it wasn't showing. I put up a hand for a high-five, and when he smacked my hand with a resounding crack, we got the momentary attention of all the women. \n\nJill looked over at him with a look of surprise. She stroked my cock with her hand, exaggerating the long slow movement. \"Enjoying yourself, Jack?\" she asked out loud. \"Ready to see your wife take someone else's cock in my mouth? Want to see Alex fill my mouth with this beast?\"\n\nJack just moaned as Jill slowly sank her mouth over my length, taking me deep, pressing the head against the back of her throat. She pushed and pushed, taking even more of me, until she pulled away gasping. \"Was that what you wanted to see?\"\n\n\"God, you look incredible,\" he moaned, holding Robin's head in his hands and pumping into her mouth.\n\nAfter that she started sucking me more aggressively, and I just relaxed and enjoyed her efforts at showing off for her husband. The alarm was almost welcome; I didn't want to get too excited.\n\nRobin didn't even get off her knees; she wriggled over and started kissing my thighs. \"I swear this is the naughtiest thing I've ever done. I never even did anything like this in high-school or college,\" she confessed.\n\n\"And the night's just starting.\" I reminded her.\n\n\"I feel so sexy, just going from cock to cock, filling my mouth with a different man's pulsing meat.\" She leaned over and sucked me deep, coming up for air, and licking my rod like a lollipop. \n\n\"Are you going to suck Dan as well? Or try something different?\" I asked her, marveling that such a pretty girl was so happy to have my cock in her mouth.\n\n\"I think I'll just keep sucking around the table until somebody pops!\" she laughed.\n\n\"Would you like some help with Dan? Maybe Sheri could help you. I'm sure Dan would love to see you sharing his cock with somebody else.\"\n\nShe giggled, and then she was climbing up in my lap, giving me a big sloppy kiss. \"Do you think she would?\"\n\n\"I do.\"\n\n\"God, that would be great!\" She turned sideways on the couch, her rear-end raised high and almost in Jack's face, while she went after my cock from a different angle. I was able to play with her tit in this position, and when she moaned, I looked over to see Jack with his hand in the cookie jar, fingering my fellatrix, while my wife worked hard at encouraging him to fill her mouth with more than just his cock.\n\nDan was staring at his young wife with unadulterated lust in his eyes, while she had her smooth pussy rubbed, and her mouth stretched wide. I looked over at Jack, and he saw me watching. He smiled then leaned over and put his mouth where his hand was.\n\n\"Oh God!\" Robin cried out, pulling off my cock just long enough to express herself before going after my cock with even more determination.\n\nJack suddenly leaned back in the couch, echoing her cry, as my wife accomplished one of her many goals for the evening. The alarm went off again, and I almost wanted to throw that damn watch against the wall. I wasn't alone.\n\n\"GOD, NOT NOW!\" Jack cried out, while my wife sucked him dry.\n\nRobin climbed off of me, quivering. \"I need a drink,\" she said, then headed to the kitchen, returning with a large glass of water. \n\nSheri, in the meantime came over to me, and wiping her mouth with a big, slutty gesture. \"That's one,\" she told me, reaching down and caressing my hard-on.\n\nThere appeared to be a short break all around, with Jack regaining his composure, while his wife sat down next to him, toying with his semi-hard rod. I retrieved my cigar - no reason to let a $20 stick go to waste, and re-lit it, taking a huge draw, and sighing loudly. Sheri sat on the arm of the couch, enjoying her own accomplishment. \"I'm sorry you didn't have a better view, but Robin was kind of in the way,\" she told me softly. \"I can't fault her, that pretty little slit of hers up in his face was the extra incentive he needed. I'll try to make sure you get a real good view of the next one.\"\n\nI grabbed the passing bottle of rum, taking a quick sip, and then said to her softly. \"When we start up again, you want to help Robin get Dan off?\"\n\nShe looked surprised. \"Really?\"\n\n\"Sound like fun?\" I asked her.\n\n\"We're going to blow his mind,\" she laughed mischievously.\n\n\"I was thinking of something a little lower.\"\n\n\"And what will you be doing, sitting all alone?\" she asked.\n\n\"I think I'll do to Jill what Jack did for Robin.\"\n\n\"Just remember everything I taught you.\"\n\nAnd teach me she had. Sheri was not afraid to let me know what she liked and didn't like. Even though she probably sucked me off 20 times for each time she let me go down on her, from the very beginning she was sure to let me know what worked for her and what didn't, until I could eat her to a series of mind-blowing orgasms on demand.\n\nDan was playing with his damned watch. \"Add another minute to the time?\" he asked.\n\n\"Either that, or throw the damned thing in the lake,\" I growled.\n\nThe general laughter made it clear I was expressing a common feeling.\n\n\"I'll take that for a yes, for now.\" He said grinning. \"I'll take the rest under consideration after another time around.\"\n\nThe girls were settling into their new positions. Sheri stood next to Robin, in front of Dan, and the girls put their arms around each other's waists. Sheri leaned down and kissed Robin on the cheek, \"we're going to drive him mad,\" she said, loud enough for all of us to hear, and Robin pulled her head down and kissed her on the lips. \"How's this for a dream come true, Dan?\" she said, then kissed my wife again, their lips lingering, while each caressed the other's tits.\n\n\"Oh, Fuck,\" he groaned, settling low on the couch and spreading his legs wide, his hand gently slowly stroking his cock. Suddenly he was grabbing his watch, \"two minutes extra,\" he announced.\n\n\"Cheater!\" Jack laughed.\n\nJill was holding her husband, her hand idly caressing his slowly recovering cock. I leaned up against her from behind and tapped Jack, tearing his attention from the hellacious scene in front of him. \"Would you mind sharing a little?\" I asked, and when his startled look turned into another grin, I whispered to Jill, \"Did you see what Robin was doing?\" \n\nShe scooted back and got on her hands and knees, raising her smooth shaven pussy up to me. Her head went down to her husband's cock, while I started showing her just how much I loved the view from where I was positioned. \n\nThe only disadvantage was that I was the only one who couldn't see what was going on across the way. I settled for hearing it, while Dan narrated his desires to the two beauties gobbling away at his very excited rod.\n\nI took my time exploring and massaging Jill's backside and slowly enjoyed opening her up and playing with her. \n\nShe was totally smooth, even after two days on the road. \"Electrolysis?\" I asked, between licks.\n\nJack answered proudly. \"It took almost a year, but it was the best two grand I ever spent.\"\n\nI licked inside her lips, my nose pressing up between her ass cheeks. I replaced my tongue with two fingers, diddling her. \"I'll second that, she's incredible.\"\n\nI opened her up and slowly started massaging around her clit while my fingers sought out her G-spot. There was little doubt she was enjoying the attention. When I let my tongue tease her little brown star, she moaned for me. \n\n\"Her ass?\" Jack asked, stroking her hair while she kept her mouth full.\n\n\"Uh huh,\" I said, licking her back there with more determination, pushing the tip of my tongue into her.\n\n\"Thought I recognized that moan. She likes that,\" he said softly, closing his eyes, and leaning back.\n\nI knew I had plenty of time, so I played around with different things, stretching her lips out, using two, then three fingers in her, and massaging her clit, applying pressure from the sides. She really responded to being finger-fucked hard, and I switched to that, three fingers working the inside of her pussy feverishly while my tongue went back to stretching her back door enough to get the tip inside of her. Sheri wasn't a big fan of anal play, but Jill seemed to respond strongly, and I switched to a finger instead of my tongue, slowly working it inside of her. \n\nWhen the alarm finally went off, it looked like Dan had somehow survived the double onslaught. I grabbed Jill by the hips and picked her up, placing her on the seat where I had been, legs wide open, and I got on my knees in front of her, ready to really work at getting her off. There was no break for the luscious Jill, as my mouth went after her clit, and I let my tongue go wild on her, moving it fast and firmly and drawing her swollen clit out of hiding. She was breathing hard with her hand clutching my hair.\n\n\"That's so good, Alex. Lick my cheating married pussy,\" she moaned, and I did my best to do exactly as she desired.\n\nOur host didn't get a break either. His pretty little wife moved across the way to pleasure Jack, but that just gave Sheri more room to work. I could hear her occasionally talking to him, begging him to come for her, asking him to come all over her tits.\n\nJill pulled her legs back, exposing herself even more to me, and I went at her with everything. I sucked her hard little clit, my lips curled into a tight 'O', the tip of my tongue worrying her little nub. My fingers were pounding her pussy, while one brazen finger tip searched out her ass again, slowly forcing its way inside of her. My jaw was starting to ache a little when I felt her tensing up. \n\n\"There, right there, don't stop,\" she gasped as the rough surface of my tongue owned her clit and I had my fingers pumping in and out of her dripping slit. The middle finger of my other hand had achieved its goal and I was pulling it just to the edge of her tight little butt-hole, and then sliding it back inside of her over and over again. She was moaning continuously, a series of deep, heavy breathing, long moans. I felt her legs tighten up, and her pussy clenched down on my fingers. \n\n\"FUCK!\" she screamed, grabbing my head and pulling it hard against her, while her legs clamped around my ears and she rode my face. She became so wet I could feel her juices splashing as I continued to finger her pussy, with one finger buried deep in her ass. I licked her as much as I could from my awkward position, mostly targeting the top of her sweet slit. She seemed to come for a long time, but maybe that's just because I was suffocating. When she finally let me breath, releasing my head from the painful scissors lock, I leaned down and slowly lapped up her juices, running my tongue up and down her open pussy. She finally pushed me away, and I looked over to see where Robin was. She was bent over in front of my wife, playing with the cum that was splattered across Sheri's chest, and feeding it to her, occasionally keeping some for herself. If Jack wasn't back to full staff after watching that, I don't know what could revive him. \n\nWith a grin for my first conquest, I wiped my chin. \"Sorry, didn't hear the alarm.\"\n\nJill leaned forward and took my face in her hands and kissed me hard. \"That was incredible.\" Then she staggered off the cushion, her legs barely working, and made her way over to Dan, who I could now see was no longer hard, but still enjoying the show his wife and mine were putting on.\n\nI watched Sheri who looked back at me, smiling like the cat that got the canary. She raised two fingers.\n\nI caught my breath, and had a drink of water, before rejoining the crowd. Dan was tending the fireplace, and Jack was holding my wife in his lap, his hand between her legs, their faces together for an intimate kiss. I didn't need to worry about his recovery stamina, he was doing just fine.\n\nAs I stood, looking over my friends, Robin sidled up, wrapping her arms around me. \"Is it time?\" she asked, hesitantly.",
        "I picked her up by her hips and sat her on the arm of the couch, then spread her legs and stood between them. I leaned in and kissed her, while my hard-on pressed against her. \"I think it's time,\" I finally told her.\n\nShe trembled. \"Now?\"\n\nI smiled, took my cock in my hand and started rubbing it up and down her wet slit. \"Right now. I can't stand to wait any longer.\" I pushed and felt her lips spread for me as the head disappeared inside of her. Her barely contained little whimper made me even more eager to have her.\n\nI pushed a little further inside of her, running into her resistance as the thickness of my shaft pushed her wider than her comfort level. I leaned forward and hugged her. Then I kissed her hard. \n\n\"I'm going to fuck you now, beautiful, and it's not going to be gentle. You've teased me long enough.\"\n\nShe leaned back along the padded arm of the couch, a study in sexiness. Her pussy was still stuffed with almost half my cock, and it looked great, splitting her open. I lifted her legs, pushing them back until her shins almost bracketed her pretty face. \n\n\"Hold them,\" I told her. \n\nShe seemed nervous, her position precarious, and the arm that had been holding her steady slowly came off the couch and grabbed the back of her knee. I held her hips, and started.\n\nMy cock was aching for release, and I was as hard as possible, and swollen as thick around as I get. I've sometimes felt overly conscious about my penis. Although I stay big when flaccid, I don't seem to grow a whole lot longer. I mean, I'm as long as any guy present; I wasn't short shrifted in that department, but where others guys get a little wider, and a log longer, I'm the opposite. I get really thick. I think it looks weird, with this normal sized head and the shaft just getting wider and wider behind it. I don't reach my full thickness until about halfway down the shaft. \n\nWhere I was stuck now.\n\nI looked down at the pretty little girl spreading her legs for me, in front of her husband, my wife and our dear friends. Her position left her completely exposed, with no doubt about what was happening to her. \n\nI pulled my cock out, and started fucking her with the half that had already squeezed within her tightness, pushing just a little bit extra after each stroke. Slowly and steadily, she opened under my ministrations, and I watched my entire rod gradually disappear inside of her petite little body.\n\nShe was a vocal little wench, and as I extended deeper and deeper inside of her, she started a litany of moans, groans and comments, which only served to get me even further worked up.\n\nShe tried to give me guidance, moaning, asking me to take it easy, to take it slow, begging for gentleness, but I was beyond the ability to take it easy. I fucked her with long firm strokes that opened her to my need, until I was able to slam my entire length into her, eliciting squeal after squeal from her. Holding her hips tightly, I fucked her hard, pounding her, and I watched her resistance change. \n\n\"Fuck me,\" she gasped, holding her legs tight, gasping. \"Fuck me with that fat cock.\"\n\nI looked around and saw that Jack and Sheri were more intent on what I was doing than their own play. They had their hands in each other's laps, and were leaning against each other whispering. I smiled, blew her a kiss, and took to fucking my little toy even harder. Her movement under the hard pounding had her slipping on the arm of the couch.\n\nI pulled out, flipped her onto her belly and laid her back along the arm. I liked the height at which it put her; it fit me easily, without wearing my legs down.\n\nI slid my cock back home, from behind, and held her firm, sweet ass cheeks. I heard the alarm go off, and Dan quickly snatched it up and shut if off. \"Ignore that,\" he snapped. Then he climbed out of his seat, and sat down on the couch right next to us. His face was only inches from hers. \"You look amazing,\" he told her, leaning forward and kissing her. Then his hand was playing with her tit, while I used her hard.\n\nI loved the feeling of being in her, but still wanted more.\n\n\"Dan, put a couple of pillows on the coffee table, would you?\" I asked him, while drilling his wife. \n\nHe got up and put a seat cushion and a back cushion on the low table, completely covering it. Jill had moved the liquor bottles and other stuff out of the way, giving him a clean surface to work with.\n\nI pulled Robin tight against me, entirely buried within her. I grabbed her hips tightly and stood, lifting her off the end of the couch, just hanging there in mid air, her arms and legs hanging down, her pussy firmly attached to my cock. \"Damn!\" I heard Jill mutter. I turned with her, and brought her over the coffee table, where she reached down with her hands, and eventually her knees, and took the weight off of her hips and pussy. \n\nPositioned on her hands and knees, she bowed her head, gasping, as I once more picked up the pace, fucking her hard in front of our audience. Jack and Sheri had found a position where they could both watch the activity while she sucked on his rod to her heart's content. \n\nI was enjoying this incredible little fuck immensely, and wanted it to last. I pulled out of her and sat her on the table so I could feed her my cock for a while, just to see it. I wanted to see her lick her juices off of me, then do her best to take my cock in her mouth. \n\nAs I fucked her face I reminded her, \"See where all that teasing gets you? Tease a man too far and he can't be responsible for his own actions.\" I held her face, using her mouth, letting her tongue do its job as she fully participated in the blow-job. She wrenched her head off of my cock and attacked it with both hands and her mouth, working me hard.\n\nI looked over at Jill, who was wrapped around Dan, stroking his cock for him, while he watched his wife of two years get taken.\n\n\"You,\" I reminded Jill, looking right at her so she couldn't miss the reference. \"You were almost as bad as this one. You'll get yours.\" I watched her turn pale, her breath catching, as her hand paused in its stroking. Then Dan's hand was on hers, reminding her.\n\n\"On your back,\" I told Robin, returning my attention to her. \n\nShe acceded quickly, and I opened her legs leaning over her. \"I'm going to fuck you until you come for our friends,\" I told her, easing the head of my cock back into her sweet tightness. \n\nThis position was a winner; I opened her legs wide, and pounded her, leaning over and looking down into that beautiful face. I kissed her repeatedly, claiming her, my tongue filling her mouth possessively. As the fucking continued, and her excited moans got louder and more frequent, Jill entered the picture, kneeling down beside her friend, and playing with her tits. \n\n\"God, you look so hot like that,\" I heard Jill whisper, \"taking all of him.\" She bent her head forward and took a hard little nipple in her mouth. I looked over at Sheri to see how she was taking all of this, and was shocked to see her straddling Jack, facing me, his stiff rod clearly disappearing inside of my wife. She looked a little embarrassed, and then gave a small shrug. She leaned forward and slowly eased herself into position to occupy Robin's other tit. I heard the grind of wood on wood as Jack pushed the couch away giving him room to screw my wife from behind. \n\nRobin was going crazy by this point, all the attention, and the extending fucking setting all her nerve endings on fire. I stood more erect, holding her legs in a wide V and watching her pussy getting stretched to the limit at the end of each stroke. \n\nThe first orgasm to explode from her came as no surprise, but the continuous, uninterrupted chain of quivering releases almost scared me. I started to slow down, but my wife grabbed my hand. \"No,\" she said. \"Fuck her harder.\"\n\nI did as commanded, gripping her thighs just above her hips, and fucking the poor creature as fast and powerfully as I could. My hips were a blur and my lower back was aching as she split the air with a huge scream, arching below me, and then settling back onto the table. It had pushed me to the very brink myself, and I finished with a series of long full strokes, coming inside the long-time object of my lust. I looked up at her pretty face. Her eyes rolled back in her head and she finally relaxed, for the moment unaware of her surroundings. \n\nI collapsed back on the nearest couch, huffing and puffing like I'd run a marathon. I felt movement at my waist, and looked down to see Jill getting comfortable. \n\n\"Hi,\" she said almost shyly.\n\nI had to laugh, \"Hi.\"\n\nShe reached for my cock, gently holding it in her fingers, tugging a little. \"Do you think you might have anything left for me?\" she asked, softly.\n\nI looked over to the other side of the table and was greeted by a beautiful sight. Sheri was on her hands and knees, taking Jack at one end, while Dan filled her mouth at the other. She looked as happy as a clam. A well stuffed clam.\n\n\"I don't think Jack will mind if we bend our rules,\" she said, \"especially since he started it.\" She leaned in and put her mouth on my cock.\n\n\"I won't be up to another session like that for a while, probably not for days,\" I warned her.\n\n\"Good. That's not what I want. I want to ride you into the sunset,\" she giggled. \"Or into the dawn.\" She put her mouth back down to resuscitate my junior partner. I let her do her job, while I watched my wife get spun like a top, her two partners switching openings. I almost laughed as I saw them 'high-five' over her. While my wife was blowing Jack, he reached down beside him where the stuff from the table was stacked, and took a swig from the rum, then passed it to Dan, who did likewise. He then reached over and came up with one of the cigars. \n\n\"Hold on a sec,\" he told his little cock-sucker, and dislodged long enough to grab a long piece of bark, get it burning in the fireplace, and use it to light his cigar. He took a deep draw and smiled, slowly letting the smoke rise to the ceiling. He looked over to see me leaning back, with his wife attached to my cock and raised his cigar in salute. He seemed to think better of it and scrambled over to where we were.\n\nHe passed me the cigar, while his hands glided over his wife. \"Just don't break her, OK?\"\n\nI laughed, \"I should say the same.\"\n\nJack caressed Jill's ass, sliding down her crack, \"You're OK with this, right baby?\"\n\nShe took her mouth off my cock, looked up at me and winked, \"If it's what you really want,\" she said softly, tentatively.\n\n\"Just this once,\" he said, looking back over his shoulder to where Sheri's vacant mouth beckoned.\n\nJill smiled at me and winked again, \"Just this weekend, I'll go along with whatever you want, do whatever you want, be your slut-wife.\" The sound of her voice and the look in her eye were definitely on different teams.\n\nHe gave her a kiss on the shoulder, and headed back to my wife, taking the time to light up the other cigar. \n\n\"Look at them,\" I whispered to Jill, who sat up and looked to the side. The image of my wife being assaulted from behind by Dan's insistent pounding, while Jack just relaxed as Sheri swallowed his cock, both men smoking big old cigars, will stick with me for years. \n\nRobin on the other hand just lay there where we left her, semi-catatonic. Jill laughed. \"I thought it was just a saying, but I think you literally fucked her brains out.\"\n\n\"Let's give our spouses some privacy,\" I told her, \"and I've got to do something about Robin, I'm feeling guilty.\"\n\nI got up and carried Robin to the furthest bed, leaning her against the outside wall, covering her with a sheet. She woke partially, moaning, \"No more, please, no more.\" I bestowed a small kiss on her lips before I left for my new partner.\n\nI went back to get Jill, and almost died laughing when Sheri tore into Dan. \"If you drop your ashes on me one more time, Daniel, that will be the last time you get any part of me this entire weekend! Jesus, even Alex doesn't do that!\"\n\nHe acted appropriately contrite, and I was quiet as I escorted Jill back to the same bed I'd tucked Robin into. She hesitated. \"Why not the other one?\"\n\n\"I just thought I'd leave that one for the other three. Right now, I think we're paired up for the rest of the night.\"\n\nMy words turned out to be true. Jill rode me for an eternity, and then we switched places and I was happy to return the favor. She was able to get me to come before too long, but went right back to work getting me hard again for more mutual riding.\n\nRobin's little voice got my attention, as Jill leaned back and admired her latest handiwork, a large thick red hard-on, just looking for a place to call home. \"Jesus, Alex. Doesn't that thing EVER go down?\"\n\nI reached over and pulled her lips to mine. \"Not so long as you two are near me and unclothed.\"\n\nJill mounted me again, looking for another orgasm in her long procession of passion eruptions. \n\nRobin crawled closer, \"God, I ache all over, and I may never walk again,\" she moaned. She clutched my arm tightly leaning her forehead against my temple.\n\n\"I swear,\" she said softly, \"if you EVER do anything like that to me again...\"\n\nI waited, as did Jill, who stopped her grinding for the moment. \"Yes?\" I finally asked.\n\n\"If you do....\" she said softly, \"I'll be ruined for other men, and you'll have to keep me for your own.\" She leaned in and kissed me with a growing passion, while Jill switched from grinding to rocking.\n\nI didn't fuck Robin any more that night, although Jill did manage to squeeze another one out of me.\n\nWe got to watch the boys take my wife to the other bed and take turns tit-fucking her, and then alternating their use of her. Anytime they left her alone, she made for one of their cocks, her mouth working its wonders. I don't know when they finally gave up; I was long asleep by then. \n\n* * *\n\nOnce more I was the last to awake, but this time it was nowhere near as glorious as the previous day. \n\nNot only was I sore from head to toe, but my 'alarm clock' was shaking the bed like a Jiffy-pop shaker.\n\nI opened my eyes and growled, \"Enough.\"\n\n\"Man, you're a hard sleeper,\" Dan teased sitting on the bed opposite. \"You already missed all the drama.\"\n\nA lifetime's worth of amazing memories created in one night. It was all coming back to me. \"Jesus! What a night!\" I stretched and stood in front of Dan who, reached out with the back of his hand, and pointed my morning wood away from his face.\n\n\"Fuck dude! Don't point that at me - I've seen what it can do. I thought my wife was going to have to leave here in a wheelchair.\"\n\nI walked to the bathroom, leaving the door open and laughed. \"Look who's talking. I'm amazed we're not pumping my wife's stomach this morning. You seemed awfully relaxed, smokin' a cigar, having a drink, while Sheri sucked you dry,\" I reminded him.\n\n\"Over and over again,\" he agreed. \"Damn that was hot! I don't know if I could survive too much of that one.\"\n\n\"You'll never get to find out if you keep using her as an ashtray, you dick.\"\n\n\"Shit. You heard that, huh? One fucking mistake, and I bet I hear about it forever.\"\n\n\"Your wife made some comment about my doing the whole 'Clinton' cigar thing on her and the consequences. If it gets too bad for you, I know how we can re-direct the heat.\"\n\n\"So, you've got to tell me, is she often like that? I mean, IN-credible!\"\n\n\"It's not that bad, she only gets that way about every few weeks or so.\"\n\n\"Sounds about perfect then,\" he said with a huge, mischievous grin.\n\nI walked back out, headed to the kitchen, looking for a lot of water, and a little snack. \"You up to something?\"\n\n\"Well, now that you've been here, you know what I'm up against. There are just so many things I'd like to do to the place.\"\n\n\"It's a diamond in the rough. Hope Diamond, maybe.\"\n\n\"Exactly, and I could really use some help,\" he said slyly.\n\n\"Shit - here comes the pitch.\" I said, sitting and eating hard biscuits and honey.\n\n\"Think about it. Every two to three weeks, we make a weekend of it. And when we're up here, the same rules apply - the Accidental Nudist Cabin. We get some work done in the day, get a little R&R in, and then we give our wives a well deserved change of scenery in the bed.\"\n\n\"Oh, this is for our wives, huh?\"\n\n\"Robin's already been nagging me to setup our next trip out here. Just you and Sheri.\"\n\nI laughed. \"Let's see if Sheri makes the same request,\" I teased.\n\n\"No doubt, bro. She's paid a visit to the promised land. She'll be begging for a return trip.\" \n\n\"You are so full of shit. What was that you said about drama?\"\n\nHe explained that Jack was gone when everyone else started waking up, but he showed up a little later - just needed to clear his head, he claimed. The girls wanted to get out and do some absolutely minimal shopping, just enough clothing to get home without getting arrested, and some provisions for lunch since our larder was just about empty.\n\nApparently there were some heated words between Jack and Jill before the whole group left. Jill talked about staying behind, if she wasn't wanted, and Jack took that poorly, making some comment about her wanting to stay behind with the two of us.\n\n\"Damn, I hate that shit,\" I told him. \"I thought Jack had more sense than all that.\"\n\n\"I don't think any of us expected last night to end up like it did, ladies included, and I'm hoping he just needs some time to work things out.\"\n\n\"You're OK with everything right? You feeling a little weird? Maybe want to punch me in the mouth?\" I asked, only half-kidding.\n\n\"If you told me three days ago that I'd be chatting with a guy who fucked my wife senseless, and I'd be as happy as I'd ever been in my life, I'd have laughed in your face.\" He smiled. \"You're not going to snake her, and I don't think she'd survive more than once a month with you anyway. How about you?\"\n\n\"I gotta admit, a couple of times I felt a little bit weird about the whole thing. Sheri passing out BJs was one thing, getting double-teamed by you horn-dogs, that was completely mind-blowing. She had just finished telling me she wasn't going to let anything bigger than a finger inside of her.\" I grinned maliciously. \"Come to think of it, I guess she kept her promise.\"\n\n\"Fuck you too, asshole,\" Dan laughed. \"If you hadn't used up Robin, and then hogged Jill for the rest of the night, we could have all shared like nice friends do.\" \n\n\"You know, I thought I might get upset or jealous, but the God's honest truth is I thought it was great. Now I'm thinking I'm the luckiest fucking man in the world. You get to be the second luckiest.\"\n\n\"But none of this goes on back in Dallas, right?\" he asked.\n\n\"None. I think the 100 mile rule applies here. 100 miles away from home, if I'm anywhere near your wife, she's fair game. Same goes for you and Sheri.\"\n\n\"Like a Cozumel trip?\" he asked smiling.\n\n\"Bowlegged for the whole week,\" I told him.\n\n\"Good, as long as we're on the same page,\" he laughed.\n\nWe talked some more about our plans for the place, and it turned out he had big ideas. Of course with 30+ acres of prime land, a couple of hundred yards of lake front, and the legal right to do almost anything he wanted on it, I'd dream big too.\n\nWe were starting the shut down process, and dealing with a few issues around the place when we heard the bikes returning. It was hard to miss.\n\nThe girls came traipsing along, discarding their clothing almost as soon as their feet hit the floor. All three of them. Then to my immediate disappointment they headed back inside the cabin. The beautiful natural scenery suddenly seemed pale in comparison.\n\nJack wandered over our way, with a contrite look on his face. \"Hey Dan, sorry about the crap this morning. The combination of being hungover, and not getting enough sleep left me in a crappy mood, which was pretty ridiculous after last night. I just wanted to let you know I was sorry. The comment about Jill sticking around for you guys was uncalled for.\"",
        "\"Forget it. It was a pretty weird night. In a good way, I think, but it might take a while to really wrap my mind around it.\"\n\n\"No shit. I guess I just wasn't ready to see Jill like that,\" he sighed.\n\nHe continued, a little awkwardly, \"We've got to go early. I checked my messages once I had cell reception, and some crap came up at work. I've got to fly out to San Deigo tomorrow. So I think we'll leave in just a bit if you don't mind.\"\n\nI wasn't sure if that was the only reason he was headed out, but at least he was out of his funk.\n\n\"Don't sweat it.\" Dan answered. \"We're almost done shutting this place down, and we'll be leaving in a couple of hours anyway.\"\n\n\"You need me to take any stuff back for you? I know you don't have much storage.\"\n\n\"We're not taking much of anything back this trip. We ate the food, drank the liquor, and we're wearing all the clothes we brought. Just some toiletries and odds-and-ends that can fit in Alex's bag.\"\n\nWe lost the two of them about 15 minutes later. I did get a nice kiss goodbye from Jill, and a whispered assurance that everything would be OK, and we'd get a chance to play again before too long. The naked hug was nice. She waited until the very last moment to get dressed, bless her little heart. \n\nSheri and I walked down to the water for a last swim, and a few minutes of privacy on the platform. The water was busier today, and we saw a couple of boats go by at a distance, but nobody came near.\n\n\"Quite a night, huh?\" Sheri said, as we sat side-by-side and looked across the water at the cabin.\n\n\"To say the least. Did you get a final count?\" I teased.\n\n\"Seven,\" she smiled, \"and that last one took a lot of work.\"\n\n\"I bet.\" We were quiet for a few minutes. I finally broke the ice, \"Any regrets?\"\n\n\"None. You?\"\n\n\"Just that I didn't get a turn with you,\" I told her, completely serious. \n\n\"The weekend's not over yet,\" she assured me, standing up and straddling me before she sat down on her favorite loveseat.\n\n\"Robin wants us to come out here again in two weeks,\" she said softly.\n\n\"What do you think?\" I asked her.\n\n\"Why do you keep asking me? What do YOU think?\" she said, petulantly.\n\n\"I had one of the greatest weekends ever. But I don't know if it will ever be the same. I'm kind of nervous about the idea of coming out here with the specific intention of wife swapping, which I think is what we're talking about here.\"\n\n\"Let's call it wife sharing. How did you feel about being naked for two days?\"\n\n\"I loved it. Didn't expect to, but it was great.\"\n\n\"I'd like to try it again,\" she finally admitted. \"And I swear, I don't know if we'd ever find another couple we're so compatible with.\"\n\n\"The fact they have a great little cabin out here ain't too bad, either.\"\n\nOur conversation sort of broke down, when Sheri thought she'd like to see if she could get one more load out of me, orally. I watched the cabin porch, where Dan was putting it to Robin, bent over and hanging onto the railing. I leaned back, enjoying the distant show and my dear wife's attention.\n\nBack at the cabin, we finished closing things up, including chaining the rocking chairs to the porch. Dan and I settled in for a relaxing smoke before we hit the road, while the girls walked the perimeter.\n\nThe day was beautiful, the prettiest yet. \"God, I hate to leave. I could stay up here a month and not get tired of this,\" I admitted.\n\n\"I know. After I leave I kind of get in the dumps for a day or two. But I know it's always here waiting for me.\" Dan said.\n\nThe girls appeared from around the building and I looked at them, both so beautiful, and so naked. I wondered if it would be crass to try to have one last go with Robin. \n\n\"I saw that!\" Robin laughed pointing. \"I can't believe that all we have to do is walk up to you naked, to get you all hard! You were normal sized, and in the time it took us to walk around and up the porch, you're ready to go again!\"\n\n\"So shoot me!\" I said. \"You both are gorgeous and sexy, and you make my blood boil. Now you know the truth. I see you and I want you.\"\n\nSheri was already leaning over caressing Dan's resurgent hardness. \"And you're no better! Didn't you just finish doing your wife? What's this for?\"\n\n\"One last hurrah?\" he asked.\n\nSheri looked over at Robin, her partner in crime. \"Do you want to do me a favor and take care of him? It would be a shame to make him ride home like that.\" \n\n\"I will if you will,\" Robin answered, turning her back to me and trying to lower herself by feel onto my ready rod.\n\nWe soon had both girls in our laps, their legs splayed out over the arms of the rocking chair, their worn out pussies condemned to one last beating. \n\nRobin leaned back against me, sighing as we rocked back and forth in the chair, both of us facing out across the water, looking at the beauty of the scene. The rocking was wonderful, it allowed me to stay inside of her, and just get a little play from the gentle movement. Her entire, delicious body was open to me, and my hands wandered over her as if they had a mind of their own.\n\n\"This is nice,\" she said softly. \n\n\"Yes, it is.\"\n\nShe closed her eyes, and we spent several minutes just enjoying our last few minutes at the cabin, and our last few moments of intimacy. The motion was perfect, keeping me hard, but not doing much to get me off. \n\nSuddenly she just sat bolt upright, taking me deeply. \"Wow! I just had the most incredible vision.\" She looked around to see if our spouses were paying attention. She sounded as excited as a school girl.\n\n\"I saw us, just like this, but like 40 years from now. There was a huge house over there,\" she pointed to our right, \"I mean HUGE, and the woods down there were cleared out for an open field.\" She indicated an area down by the water.\n\n\"It was so vivid, so real. I saw dozens of people running around down by the water, adults and kids, and all of them were naked. There were two docks, and a big-ass sailboat, and some jet-skis, and all kinds of stuff out there. But the swimming platform was exactly the same, as was our walkway, and even Dan's silly dirt path. There were even circular stones out on the dirt path, and I knew that each one had someone's handprints, and there were dozens of them!\"\n\nShe looked around, as if she could still see it all. \"There were trails all through the woods, and a big quad ATV right there,\" she pointed off to our left. \"And I knew that all of it was ours. The kids, the grandkids, the house, the boats, all of it. It was all ours, all four of us.\" She looked to the side, \"We had a flag flying, right there, and the kids knew this building was off limits when Grandma was flying the flag. God! It was so weird! I could almost feel the padding that you added to these very seats, on the arms, so it would be softer on our legs!\" She looked at Sheri, \"And God, you were beautiful! I was so fucking jealous, how could you age to well?\"\n\nDan laughed, \"You didn't eat the tequila worm, did you?\"\n\n\"Don't make fun of me, Dan! I'm telling you, I swear, it was like Deja Vu, but in reverse. The whole thing just appeared in my head, and it was like watching a movie of our future!\"\n\n\"Sounds like a pretty good scene to me,\" Sheri said. \"Great friends, great sex, an army of grandchildren, and enough success to make a mansion out here. I could go for that.\"\n\nI heard Dan giggle. \"Shit, Alex. Now we've really got our work cut out for us. It'll mean a lot of weekends up here.\"\n\nRobin settled down, and leaned back into me, still thoroughly impaled. I started rocking us again, and used my hands on her ass to get a little more action.\n\n\"What do you think,\" she asked me softly.\n\n\"Us, sitting her, forty years from now, just like this?\"\n\n\"Mmmhmm,\" she murmured, moving with me, letting me get just a little more of the old in-and-out going.\n\n\"Just like you described?\" I asked, caressing her body.\n\n\"Exactly,\" she said softly.\n\nI turned her head, and kissed her on the lips, tasting her again, feeling the sharpness of her teeth, the moist firmness of her tongue, sharing her breath. She whimpered for me. God, I loved that sound.\n\n\"Heaven on Earth.\"\n\n=============\n\nI hope you enjoyed this entry in the Nude Day Story Contest. I'm guessing if you made it this far, you must have liked it at least a little. If you did, please vote. \n\nAnd if enough people enjoyed it, I'll share the tale of how Dan and I found our property vandals, and how we got (some of) them to pay reparations. "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "nudism",
        "blowjobs",
        "threesome",
        "wife swapping",
        "lake house"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-accidental-nudist-cabin"
}