{
    "title": "The Council Ch. 11",
    "pages": [
        " You guys ROCK! Thank you so much for your wonderful comments on Chapter 10! Managed to submit while I'm away so hope you enjoy this chapter as much :-)\n\nWorldHistoryBuff, thank you as always. You're the best! To the Guild too! \n\n*\n\nLoretta felt crap. She didn't just feel crap, she felt like she was going to die. She threw up noisily and leaned wearily against the toilet bowl. She had been perfectly fine this morning and even into the afternoon but come dinner time she had suddenly started to feel a bit shaky, first a light temperature forming and then the nausea. \n\nMaybe she had been too exuberant with her morning workout with Andrei? He had run her ragged before they'd made love twice. Add to that the shock of him biting her. It was obviously more than her body could take in one day. \n\nShe felt a moment of fear as she remembered the bite. It had been the most amazing and terrifying moment of her life. Amazing because she experienced the most intense orgasm she'd ever had and terrifying because she had been waiting for her heart to stop beating as Andrei's venom flooded her system.\n\nMaybe her sudden illness had to do with the venom? She should go to see Luke and get checked over but that would involve her telling him why she was worried and he'd tell Jared instantly. There would be none of this patient/doctor confidentiality crap when it was something that could affect the pack adversely..\n\nShe had promised Andrei she would give him two days. She had also promised she would be at the club tonight but there was no way she could go feeling the way she did. She had two choices. Either ride out the sickness on her own and call Andrei to let him know she wasn't coming over; or she could call him to come pick her up and he'd just have to deal with her illness along with her.\n\nShe knew which one she wanted to do. She wanted to be with Andrei so badly at the moment it was almost crippling her. She wanted his arms around her, soothing her while she felt so ill. The fact that he probably would come looking for her at the compound if she bailed on him two nights in a row also played a part in the decision she came to.\n\nDragging herself back into her bedroom she grabbed her phone and called Andrei, silently cursing the fact that her new telepathic bond with him didn't stretch much past a mile. She had hoped it would reach further because vampire mates could contact each other at much greater distances but it proved to be the same as Were mates' bonds. \n\n\"Hey Rose,\" Andrei said softly when he answered. \n\nShe could hear the smile in the softness of his tone and she smiled too, feeling comforted just hearing his voice. She also felt suddenly very weak and fragile, not something she was used to. \"Andrei,\" she breathed quietly, a slight tremor escaping her along with a sigh of relief.\n\n\"What's wrong?\" he asked instantly, sounding immediately alert. \"Loretta, are you alright?\"\n\n\"I'm not feeling too good,\" she admitted slightly hoarsely. \"I feel feverish and I've been throwing up a bit. My entire body is aching at the moment. I don't think I can go to the club tonight, Andrei.\"\n\nHis breath hissed out loudly. \"Of course you can't,\" he answered a bit sharply, his concern evident. \"I'm on my way over.\"\n\nShe felt her heart start to sink immediately. She really didn't want him coming onto pack lands. It would just create unnecessary issues. \"Wait for me just outside the compound,\" she urged quickly. \"I'll meet you there.\"\n\n\"I'll come and get you. You stay where you are.\" Andrei's tone brooked no arguments but she still argued with him anyway.\n\n\"I'm fine enough to meet you, Andrei. Please don't enter the compound. If you do so it will only attract attention and piss Jared off. Please, Andrei.\" She heard his breath hiss out angrily and she fought down a sigh. \n\nMaybe meeting up with him tonight wasn't such a good idea after all, not when she was feeling so crappy. If she was this low he would easily be able to dominate her and she wouldn't have the strength to fight back and keep him in check.\n\n\"Fine,\" he finally answered his tone much gentler. \"We'll do this your way. Keep your phone close though and call me back if you have any trouble making it to the compound boundary.\"\n\nAndrei hung up immediately and raced upstairs into the club. His heart was pounding with fear at the thought of his wolf being ill. Her voice had sounded so weak, her breath so shaky. It was so out of character for Loretta to sound so vulnerable that he was instantly concerned.\n\n\"Pietro, I'm out for the night,\" he told his bartender. \"Do the necessary with closing up.\"\n\nPietro smiled widely. \"Let me guess, Loretta again?\" he teased lightly. His boss's current relationship with the feisty little Were was an endless source of amusement for him. Andrei appeared to be like a chicken running around with his head cut off most of the time these days.\n\nAndrei managed a weak smile and nod of his head as he hurried outside. He couldn't shake the gnawing fear which was starting to settle deep within him. Was this his venom just starting to take effect? Was Loretta slowly dying? Why the fuck hadn't she gone to her doctor straight away?\n\nHe was speeding recklessly towards the compound, his heart thumping painfully hard in his chest. If anything happened to her because of his actions he would never forgive himself. He silently prayed she would be okay, that this was just some normal human or Were type illness and nothing to do with him biting her this morning. Never getting sick himself he had nothing to compare it to and it was that lack of knowledge which was increasing his anxiety levels even further.\n\nLoretta was waiting for him, resting against a tall tree on the forest floor, just outside the compound boundary. Her face was so pale that for a moment he thought the unthinkable and was flying out the car and was at her side in an instant.\n\nHer eyes opened and she smiled weakly at him. \"You took your time,\" she managed to get out weakly.\n\n\"Why didn't you go to Luke?\" he demanded, his tone so sharp because of his concern. He picked her up gently, cradling her tenderly against his chest as his eyes intently roamed her pale face, his heart thumping painfully hard in his chest as she rested weakly against him.\n\n\"I didn't want him asking if anything out of the ordinary had happened recently,\" she murmured softly, closing her eyes and sighing with relief that he had her safely in his arms. She felt so much better just having him close. She shamelessly leaned on her mate's strength feeling calmer that he was there to protect her.\n\n\"Of all the stupid, idiotic reasons I've heard for not going to a bloody doctor,\" he ground out through clenched teeth. \"Fuck, Loretta, you should have gone to him the moment you started feeling unwell!\"\n\nHer lips twitched in a little smile and she opened her eyes again to look up at him. He looked so frustrated, so worried. She could see annoyance in his eyes and also a little hint of fear. Her vampire was so worried about her and it made her feel good. \n\n\"I promised you two days, Andrei,\" she sighed. \"I didn't want to break my word to you. Whatever it is seems to be passing anyway. I feel a lot better already. Maybe I was just sickening for you?\" \n\nHer smile was stronger as she made her little joke though she wondered if there was a little truth in what she said because she had felt better when she had heard his voice earlier too. The sickness seemed to feel worse when she couldn't hear or see him. Maybe it was something to do with her body accepting his mating bite?\n\nAndrei was torn. Part of him wanted to take her straight to her doctor at the compound and the other part wanted to take her home with him and nurse her himself. Not that he had the first clue about taking care of someone who was ill but she was his woman and it was his role to protect her. She did look a bit better already, her voice not sounding as weak as before. Maybe she was right and whatever was wrong with her was already starting to pass?\n\nHe opted to take her home after a brief internal struggle. He didn't want to let her out of his sight until he was sure she was okay. If she got worse he could have her back at the compound in the blink of an eye. He'd just run with her. It would be faster than driving.\n\nHe carried his precious wolf over to the car and lowered her gently into the passenger side, before leaning in to buckle her seatbelt. She snorted slightly a rueful smile crossing her face.\n\n\"All that's missing is the white horse,\" she chuckled lightly and he felt his own lips twitch in a little smile. She did sound so much better.\n\n\"I'll remember that the next time my damsel in distress calls for my help,\" he retorted, bending to kiss her lips lightly before he closed the car door and hurried around to climb in beside her.\n\nShe dozed on the drive home. He couldn't contain himself from reaching out to touch her as he drove, needing the contact with her. Her colour was better though she still looked pale and her breathing sounded slightly laboured. Maybe he should have made her see Luke after all. But he couldn't deny he wanted the time she had promised him before telling her Alpha about him biting her.\n\nAndrei wondered just how much of a callous bastard he really was as he pulled up outside his house and moved to open the front door before coming back to the car to gently pick his woman up. She remained sleeping as he kicked the car door closed and carried her carefully into his house.\n\nHe knew Loretta struggled with maintaining the needs of her pack against her personal need to be with him. He too struggled with trying to look after his people's best interests and be the best mate to his precious woman. \n\nHe should have argued more with her at the compound. Insisted that she see the doctor but instead he had allowed her to convince him she was alright. So he could have the time he needed to investigate how he had managed to bite her without killing her.\n\n\"Bathroom,\" Loretta suddenly moaned loudly and he streaked upstairs at supernatural speed and got her into the bathroom just in time for her to throw up noisily down the toilet bowl.\n\nHe held her hair back gently from her face and supported her firmly as she heaved a second time. Sweat broke out on her body as she gulped in large deep breaths once her body calmed again.\n\n\"Sorry,\" she groaned as he helped her over to the sink and she rinsed her mouth out.\n\nHe stroked her hair gently. \"Shhhh, you've nothing to be sorry for,\" he said softly. He kept hold of her as she brushed her teeth and rinsed her mouth again, and then he picked her up and carried her into the bedroom. \"Feeling any better?\" he asked tenderly, his worried gaze searching her face intently.\n\n\"A bit,\" she sighed managing a weak smile as Andrei gently stripped her clothes off and helped her into bed. \n\nHe covered her and then lay down beside her on top of the covers, his hand stroking her cheek gently. \"Are you sure this is nothing serious, Loretta?\" he asked anxiously, his expression grave.\n\n\"It feels like a touch of food poisoning,\" Loretta sighed with a reassuring smile for him. His concern was touching and making her feel better. \"It should pass shortly. Try not to worry too much, love.\"\n\nAndrei snorted and rolled his eyes. His woman was throwing up and looking all weak and helpless and she seriously expected him not to worry about it? After he had bitten her and unleashed his toxic venom into her system!\n\nHe lay with her until she drifted off to sleep and then he called Alexei and asked him to come over. His brother wasn't too pleased at the summons, especially when he told him to leave Cedar behind.\n\nAlexei arrived half an hour later in a very bad mood. He was about to lay into his brother and then noticed the ashen colour to Andrei's face and the pinched corners to his lips. \"What's wrong?\" he demanded.\n\n\"Loretta's sick,\" Andrei answered. \"I need to go talk to Caleb and I want you to sit with her until I get back.\" There was no one else he would trust with his woman but his twin. He didn't want to have to leave her but he had to talk to Caleb immediately, just in case Loretta's illness had to do with his venom inside her. He had to believe that Caleb would know something if that was the case.\n\nAlexei's face took on a concerned expression. \"Why didn't she go see Luke?\" he asked in a puzzled tone. He had a feeling there was more going on that just Loretta's illness.\n\n\"Because she can't,\" Andrei admitted with a weary groan. \"This has to stay between the three of us, Alexei. You can't even mention it to Cedar, not for a couple of days at least.\"\n\nThat brought a frown to his brother's face instantly. Even though he was no longer playing his game with Cedar, Alexei still expected total honesty between them and he wasn't happy about being asked to keep a secret from his woman, especially when it related to her friend in some way.\n\n\"I bit Loretta this morning,\" Andrei announced and Alexei felt as if someone had just walked up and sucker punched him.\n\nHe stared at his brother in shock, his mouth dropping open as the full import of his words hit home. \"You fucking did what?\" he ground out hoarsely, anger quickly boiling up inside him. \"You bastard! You've killed her!\" Even as the words left his mouth, he suddenly digested the 'this morning' part of Andrei's statement and took a step back from his brother.\n\nHis eyes widened as he stared at his twin in shock. If Andrei had bit Loretta this morning then how could she still be alive, albeit it sick at the moment?\n\n\"Will you calm down,\" Andrei sighed wearily, running a hand through his tangled hair. \"I didn't bite her deliberately, it just sort of happened. She was fine after I did it, no sickness or anything. She didn't drop dead. We agreed to keep it quiet for a couple of days while I looked into it but she called me this evening to say she didn't feel well. She didn't want to go see Luke so I brought her home. Now I want you to sit with her while I go and talk to Caleb. I'm sure he knows something he's not telling us about the whole Vamp/Were mating thing.\"\n\nAlexei couldn't believe that Loretta had lived after Andrei's bite. Their venom was lethal to Weres, it always had been. \"Where is she?\" he heard himself asking, anxious to check on the wolf himself. His thoughts whirled madly in his head. If Loretta could survive Andrei's bite then maybe Cedar could survive his? There was nothing he wanted more than to taste his beautiful wolf, to fully join with her the way she craved for them to be joined.\n\nHe followed his brother upstairs to his bedroom. Loretta was sleeping and looked a little pale but her heartbeat was strong. She appeared to be running a bit of a fever too but nothing too dangerous.\n\n\"Will you look after her for me, Alexei?\" Andrei asked quietly.\n\nAlexei turned to look at his brother's concerned expression, knew that he didn't want to leave his mate but felt he had to. \"You know I will,\" he answered just as quietly. \"Go find out what you can from Caleb.\" He knew the level of trust his brother was placing on his shoulders.\n\nAndrei crossed the room to bend down and gently kiss Loretta's forehead. \"I won't be long, my Rose,\" he whispered tenderly as she murmured slightly in her sleep and sighed softly.\n\n\"If she gets any sicker, take her to the pack and tell them everything,\" he told his brother. He wanted the extra time Loretta was giving him but he wouldn't take it at her expense. If her health deteriorated then she had to come first. \"Keep her safe for me, Alexei,\" he added softly.\n\nAlexei nodded, not even surprised at the open vulnerability his brother was showing with regards to his mate. He knew he would react the same if it was his Cedar lying sick in the bed before him\n\nHe pulled the overstuffed armchair over beside the bed and picked up a book which was lying on the bedside table as his brother quickly left the room. He settled down beside the sleeping wolf and began leafing through the pages.\n\n*****\n\nRhianna was just settling down to a cup of coffee and her book when the doorbell rang. She blinked in surprise and wandered into the entrance hall. No one ever visited apart from Demetri and Mara or Rafe and Lacey and they just let themselves in.\n\nShe opened the door, her eyes widening further insurprise as she looked up at Andrei Romanov. He was probably the last person she ever expected to see standing on her doorstep, particularly as Caleb was so pissed at the other vampire. \n\nFor a moment she wondered what to do and then she realised that technically Andrei was one of her leaders, being a member of The Council. She supposed it wasn't the done thing to leave someone of such importance standing on a doorstep even if she didn't like him very much. And she was very curious as to why he was there.\n\n\"Caleb's not home yet,\" she said curtly even as she stepped back to allow him to enter which he did without a word.\n\nAndrei wanted to growl with irritation at finding Caleb not home. He entered the house and looked down at the Ancient's Youngling. Rhianna Armand was a bit of an anomaly among their kind. She was two years Sired to the life of a vampire and yet not one of his people seemed capable of putting the little redhead firmly in her place within their social hierarchy. \n\nHell, even The Council had had to accede to Caleb's little show at the ceremony where the Ancient had made it more than plain that his Youngling would be treated with respect or else. The unspoken threat was explicit.\n\n\"Annie,\" he said by way of greeting. If he wanted Caleb's help then it made sense not to alienate his woman. \"Do you know if he'll be long?\" He kept his tone polite and respectful even though she should be the one being respectful towards him, not the other way around.\n\nRhianna stared thoughtfully at Andrei, her lavender gaze taking in the lines of strain he was struggling to hide. He was managing quite a credible job of it but she always managed to see past what most people were trying to hide. Something was wrong with Andrei Romanov and it was something serious.\n\n\"Fancy a coffee?\" she asked with a small smile tugging at her lips. \"It will only take me a couple of minutes to rustle one up.\" She turned to head into the kitchen sensing the other vampire's frustration building.\n\n\"Caleb?\" he repeated slightly tersely as he followed her into the other room.\n\n\"Will not arrive home before I've made the coffee,\" she answered lightly. \"Cappuccino?\" She started making one even as she contacted her vampire.\n\n\"Caleb, Andrei's here to see you at the house and he seems upset, love. Can you come home? I think something's wrong and it could pertain to the Weres, most probably Loretta judging from the level of anxiety he's throwing off at the moment.\"\n\nShe heard Caleb hiss loudly in her head, fury rolling down their bond. \"Why the fuck did you let him in, Annie? You know damned well I don't want him in my home and I sure as hell don't want him alone with you at any time.\" \n\nShe sighed inwardly, finishing up the coffee and handing it to Andrei who took it automatically. \"There's sugar in the bowl if you want it,\" she told him before she turned her attention back to her vampire.\n\n\"Andrei happens to be a Council member and I'm a lowly little Youngling,\" she explained patiently. \"It would have been improper of me to slam the door in his face, Caleb, and quite frankly I didn't want to. If something's wrong with Loretta then I want to know about it. She's my friend. Now, stop yelling at me and get you backside home. I'm going to see if he'll tell me anything but you know what he's like. He'll most probably blow me off and wait for you to arrive.\"\n\nShe listened to Caleb curse loudly and then he gave a deep weary sigh. \"So, suddenly you want to show some respect for your vampire hierarchy?\" he asked archly. \"Doesn't seem to apply to me most of the time.\"",
        "She laughed mentally at the peeved note in his voice. \"I respect you all the time, love. At night when we're in bed do I not lavish enough love and respect on your sexy body?\"\n\nHis loud laughter told her she'd picked the right tack to soothe her irate vampire. \"You do that, sweet one,\" he sighed softly, his tone softening and turning slightly husky as his love rolled down their bond and wrapped her securely in a quick mental hug. He sighed again. \"Are you doing your Annie thing on Andrei? Am I going to have to cut him some slack when I get home?\" \n\nThe weary tone in his voice had her laughing again. \"I'm not sure yet, love. I'll let you know when you get home.\"\n\nThe end of their conversation had taken only a handful of seconds. She smiled up at Andrei. \"Why don't you join me in the sitting room?\"\n\nShe preceded him from the kitchen almost hearing his teeth gnashing together. He must want to keep Caleb sweet if he was fighting with himself so hard not to lose his temper with her.\n\nAndrei was struggling not to growl at the little redhead as she made coffee and chattered away as if he was a friend coming to visit. His concern for Loretta was rising, Caleb's absence starting to grate on his nerves. He needed to talk to the Ancient and being made to wait was not sitting well with him.\n\n\"Rhianna, it's important that I speak to Caleb.\" He tried to keep his tone as civil as he could even though he was fighting the urge to wring the little woman's neck until she stopped pissing about and called Caleb.\n\nLavender eyes connected with his and he blinked slowly at the deep intensity in her scrutiny. For a moment it was as if she was looking right into his very soul and it was almost impossible to look away from her.\n\n\"Caleb's on his way, Andrei,\" she said softly, a faint smile on her lips. \"I was letting him know you were here while I was getting your coffee. Have a seat. I suspect he won't be long. I'm sure he'll be able to help with whatever is troubling you so much when he arrives.\"\n\nHe was sitting down on her sofa without even realising what he was doing. There was something just not quite right about the little redhead. It was almost as if she was able to compel people to like her even when they didn't want to. He found himself softening towards her even when he was striving hard not to.\n\n\"It's Loretta isn't it?\" she asked after taking a sip of coffee. \"Is something wrong with her, Andrei?\"\n\nHe was able to stop himself from reacting to her unexpected question even though it caught him off guard. How the fuck had she known there was something wrong with Loretta? The longer he spent in her company the more uneasy he felt being around her.\n\n\"Loretta's fine,\" he lied smoothly. \"She's at home sleeping at the moment.\" At least part of his words were true. He didn't think that he was fooling her though, not the way her eyes narrowed thoughtfully at him.\n\nHe was saved by the front door opening and a furious Caleb Cullen arriving home. The dark scowl on his face was enough to make Andrei suck in a deep breath. Ever since the night in the forest during the war he had kept out of Caleb's company as much as possible. Now he needed his help and it wasn't sitting too well that he had to come to the Ancient for that help.\n\n\"Caleb,\" Rhianna smiled, rising gracefully from the other sofa and crossing the room to greet her vampire, trying not to laugh at how fast he had managed to get home. His over protectiveness when it came to her well being was legendary and often the catalyst to their few disagreements. She would have liked a little more time to try and find out what was bothering Andrei but it appeared her man wasn't willing to leave her alone with the other vampire.\n\nCaleb picked her up automatically, tearing his piercing gaze from Andrei to concentrate on his woman. He took in her radiant expression and his anger quickly dialled down a couple of notches as he bent his head to capture her lips in a slow, drugging kiss. His Annie always soothed the beast within him, no matter how angry he became. He often called her his redemption and she surely was.\n\nHe loved her sweet lips leisurely, growling his pleasure as she responded with her usual enthusiasm. Kissing his woman was the most intoxicating thing in the world. He could do so endlessly and probably would have if only Andrei's snort of annoyance hadn't seeped through his distracted thoughts and forced him to reluctantly stop kissing her.\n\n\"Be gentle with him, love,\" Rhianna sighed softly inside his head. \"Something's wrong with Loretta and he's really struggling with it. Seems even the meanest of our kind can find a heart somewhere deep inside them.\"\n\nShe saw him roll his eyes but he kissed her lightly on the lips once more and then set her down. \"I'm heading over to Mara's,\" she smiled at him. \"Play nice now! If I come home to a wrecked house you're on a month long sex ban.\"\n\nCaleb shot her an irritated glare for embarrassing him in front of Andrei but his lips did twitch in a little smile and he couldn't help responding. \"You couldn't last one day let alone an entire month,\" he laughed softly as her eyes twinkled with humour and she laughed back at him.\n\nHe waited until she had left and then turned his attention back to the Elder watching him with a closed, guarded expression on his face. He regarded him intently for a long moment and then moved to sit down where Rhianna had previously been seated.\n\n\"I don't want you ever coming to my home unannounced, Andrei, and I certainly don't want you alone with Annie,\" he growled softly. \"I'll overlook it this time but make sure it doesn't happen again.\"\n\nAlexei bristled immediately, fighting back the retort on his lips. He had to remember that he needed the Ancient's help. If he lost his temper and they got into an argument it could hurt Loretta. He swallowed down his anger as tried to keep his mate firmly in the forefront of his mind. He managed to nod his agreement.\n\nCaleb had been particularly harsh with Andrei, pushing him to see how he would react. The fact that the Elder had allowed his disrespect was a sure sign that Rhianna was on the right track with her guess. Andrei had the right to slap him down by the fact he was a Council member and Caleb should concede to him. That he hadn't spoke volumes.\n\n\"You appear to have achieved the impossible,\" Caleb said after a brief pause. \"My Annie is championing you. Considering she was quite happy at the thought that I would kill you last year, that's quite an achievement.\" His tone was mocking and his smile widened as he saw irritation sparkle in the other man's eyes. \n\nHe couldn't help needling Andrei and he had no real reason why he liked doing so. It wasn't that he disliked the other vampire. He didn't mind the Romanovs really, though he thought they were a bit on the wild side. He wasn't as friendly with them as Demetri was but he still didn't actively dislike them. They could be counted on if they were ever needed to supply some back up, as they had done so in the war with Graves.\n\nAndrei was beginning to think coming to see Caleb had been a mistake. He didn't know if he was going to be able to hold his temper with the Ancient. At the moment it was all he could do not to fly across the room and smack Caleb Cullen in the face. He tried to soothe his rage at the other man's taunting. He thought of Loretta, how pale she was, how weak she sounded and his rage quickly started ratcheting down.\n\n\"Why are you here, Andrei?\" Caleb asked as he watched the other vampire carefully. Rhianna had asked him to be gentle with him so he would try his best to do as she asked. Truthfully he was starting to feel a little concerned at the fact Andrei was not reacting to his taunts at all. It was so out of character for him to just sit there and take any kind of verbal abuse from anyone, no matter who they were.\n\n\"I need to know what you know about Weres and Vampires mating,\" Andrei answered, his voice clipped and to the point. \"Specifically about what happens when the vampire bites the Were.\"\n\nCaleb's eyes narrowed instantly and his big body became tense, his eyes flashing amber as he regarded Andrei shrewdly. \"What makes you think I know anything about that?\" he countered smoothly.\n\n\"Because you seem to know everything, Caleb,\" Andrei bit back, some of his anger starting to show. \"You knew things that were impossible for anyone to know last year. You're the oldest of our kind. I'm under no illusions that you know more than you're letting on and I need that information now.\"\n\nCaleb's thoughtful expression deepened further. Now this was the Andrei he knew, the one that demanded answers and refused to be ignored. He wondered why he desperately needed the information so quickly. There was no doubt in his mind that if Andrei didn't find out what he wanted to know then he was going to hit the roof in a spectacular fashion.\n\nHe sat back and steepled his fingers, tapping them against his lips. \"Are you asking this of me as a friend, Andrei, or are you demanding this of me as a member of the Council?\" he asked in a dangerously soft tone, his expression completely smooth.\n\nAndrei blinked slowly. It was on the tip of his tongue to demand the information again, to order Caleb to submit to him as a Council member. Something in the sudden stillness of the Ancient and the way his voice had become so soft made him wary of taking that tack though. Caleb appeared to have lost all respect for the way the Vampire nation ruled themselves. It certainly appeared so from the way he was reacting to The Council.\n\nHe took a deep breath, Loretta's pale face coming to mind again. He could swallow his pride for her, to make sure she was safe. \"Loretta's sick, Caleb\" he said quietly, letting his usual carefully controlled mask drop to show his concern. \n\n\"This morning something happened when we were together. It wasn't intentional but I bit her. She seemed okay. My venom didn't appear to have done any damage, quite the opposite, she said she felt amazing. But she called me to come get her this evening. She's pale, running a temperature, being violently ill. I need to know if she's going to be okay, Caleb. I need to know whatever you know about this interspecies mating thing.\"\n\nTo say Caleb was shocked was an understatement. He had seriously doubted that any of the vampires would have attempted to bite their Weres so soon without having more information. He knew he should be furious with Andrei for biting Loretta but the expression on the other man's face was giving him pause.\n\nHe couldn't remember a time he had ever seen Andrei Romanov look so unguarded, almost vulnerable. He knew it would be hurting the other man badly to have to come to him and ask for his help. \n\nHe pondered on what to do. Andrei was the first person to actually ask him outright what he knew. He hadn't planned on sharing his knowledge just yet, not until everything was in place for what he wanted to achieve. \n\nThe longer he stayed silent the more concerned Andrei's expression became and he actually felt a twinge of pity for the other vampire. If it was his Annie who was sick and he had no idea what was happening to her he would be going out of his mind with worry.\n\n\"Your venom is not the reason for Loretta's illness,\" he finally said with a small sigh. \"I don't know why she is currently sick but it is not because you bit her.\"\n\nRelief swept through Andrei and he couldn't stop a muffled groan from escaping his lips. Loretta wasn't dying because of his bite. She was still sick but he hadn't hurt her. \"Tell me, Caleb,\" he said quietly. \"Please.\"\n\nThe plea in his voice was enough to make Caleb's mind up. It was plain that Andrei was head over heels in love with Loretta. He couldn't hide his concern for his wolf, not that he was even trying to at the moment.\n\n\"Vampires and Weres can mate, Andrei,\" he answered with a small smile. \"It's not the most easiest of things to do but it is possible. A fact that you know because you are now fully mated with Loretta. Don't think to rush to tell Alexei and Nors they can start biting their wolves though because the mating is only possible for you and Loretta at the moment.\"\n\n\"Why are we different?\" Andrei asked perplexed. He couldn't think of anything he'd done with Loretta that would make them special in anyway. All three wolves had bitten their mates and passed the wolf gene on so it couldn't be that.\n\n\"Because you healed Loretta last year, Andrei,\" Caleb explained. \"And I don't mean you fed her your blood. It takes more than that to make a Were immune to vampire venom. It was the manner in which you healed her. You mixed your blood directly with hers when you healed her damaged spine. Your vampire DNA was absorbed into her body thereby making her immune to the toxicity in your venom.\"\n\nAndrei's mind whirled as it flashed back to the night in the forest, when he had punctured a hole in Loretta's back and then ripped his finger and pressed it inside her body to heal her broken spine. She had been immune to his venom ever since then?\n\n\"So for a Were to become immune we have to physically hurt them and then heal them by mixing our DNA directly into their body?\" he asked, disbelief in his voice even though his wolf was a walking, talking advertisement for just such a thing being viable. \"We have to almost kill our mates to be able to join with them completely?\"\n\nCaleb nodded. \"It's not so very different to taking a human mate and Siring them,\" he said. \"We take our mates to the point of death by drinking their blood and then we bring them back by feeding them ours.\"\n\nFor some reason his statement angered Andrei and he growled loudly. \"It's hardly the same, Caleb. The human feels no pain at all only pleasure because they react differently to the vampire venom. In our case we have to cause severe pain to those we love. Do you seriously think Alexei and Nors are going to agree to hurt Cedar and Ashleigh in that manner just so they can bite them?\" His tone was incredulous.\n\nCaleb merely smiled and rolled his eyes at Andrei's naivety. He didn't understand wolves at all and it was amusing to see him so outraged on behalf of the two other vampires. He even sounded concerned about the pain required to be inflicted on the Weres.  \n\n\"I think you'll find that both Cedar and Ashleigh will demand it of them once this becomes public knowledge, Andrei. They will not be tolerant of their mates refusing to complete the mating ritual with them, just because they will have to suffer a bit of pain for it to be possible. They are wolves and they are very resilient.\"\n\nAndrei still couldn't get his head around it. He could have been with Loretta for the past year and hadn't even known it? This new knowledge probably explained why it had taken her so long to heal from her injuries too. Her wolf DNA was slowly being subtly changed by his vampire DNA which would have slowed up the healing process because her injuries had been so severe.\n\nHer back injury had healed instantly so that seemed to indicate that should Alexei and Nors need to perform something similar, they would probably be able to mate almost instantly with their wolves because there would be no other injuries bar the one required to allow their DNAs to mix.\n\nHe frowned deeply. \"This still doesn't explain what's wrong with Loretta,\" he sighed deeply. \"She's still sick and if it's not the venom then what is it?\"\n\n\"There are other changes that occur once the mating is fully complete,\" Caleb answered slowly, his golden brown eyes intent on Andrei's. \"Did you notice anything different about yourself once you had bitten her?\"\n\nAndrei's frowned deepened. He couldn't remember anything that struck him as too odd, just the wolf knot thing happening when they'd made love. He didn't particularly want to share that with the Ancient though but he rolled his eyes and did so.\n\n\"I grew what Loretta called a wolf knot,\" he sighed. \"She said it was a sign that we were properly mated, that it only occurred between true mates.\"\n\nCaleb frowned and bit his bottom lip, concern suddenly starting to bubble up inside of him at the news. His mind was suddenly whirling madly and he felt as if he was about to run out of time way quicker than he wanted to.\n\n\"Did she also mention that the wolf knot aids in conception?\" he asked Andrei drolly, seeing puzzlement cross the other man's face. \"Andrei, the wolf knot keeps the couple joined to ensure that the male's seed remains inside the female's body to enhance the possibility of pregnancy occurring.\" He suddenly felt like he was giving a 'Birds and Bees' lecture to a young adult rather than talking to an Elder who wasn't that far off becoming an Ancient.\n\nAndrei's puzzlement remained for a second longer and then he snorted loudly and burst out laughing. \"Well that hardly pertains to us, Caleb,\" he laughed. \"Vampires can't have children.\"\n\nCaleb smiled slowly. \"But you're something more than a vampire now, Andrei,\" he countered softly, watching the laughter drain from the other man's face to be slowly replaced by complete shock.\n\n\"No fucking way,\" Andrei hissed out, jumping up from the sofa and staring wildly down at Caleb. He couldn't really be serious could he? He couldn't just have implied that it was possible for a Vampire and Were to conceive a child together? Dear God, their people would riot at the very possibility of it. A mixed breed? It was completely intolerable. \n\n\"Caleb, tell me you're not seriously implying that I could impregnate Loretta,\" he ground out through clenched teeth, his mind whirling madly. The expression on Caleb's face answered his question without the other vampire needing to say a word. \n\n\"This can't be allowed to happen, \"Andrei said, a wild note creeping into his voice as he started to pace up and down. \n\nHe couldn't believe it was possible for him to father a child. He didn't know the first thing about children and he didn't particularly want to. He knew that wasn't very fair on Loretta. Weres liked to breed; it was their method of ensuring their line went on. She had probably resigned herself to the fact she would never have children when she mated with him.\n\nNow it appeared that she could physically have children and yet he couldn't allow it to happen. If they had a child together, if they created a mixed breed there was no telling what would happen. \"Our people won't accept this, Caleb,\" he finally said in a quiet tone as he stopped pacing and turned to look at the Ancient. \"There will be a total uproar. Tell me how I can ensure this doesn't happen?\"\n\nCaleb stared at Andrei with a rueful expression on his face. He had expected this kind of reaction from him. The look of panic in Andrei's eyes was almost amusing despite the direness of the situation. Andrei was right. Their people would not accept a mixed breed child. It was more abhorrent than the actual matings which were taking place. \n\nAndrei was smart enough to realise just what the fallout would be when this became known. Which was why Caleb had needed time to get his plans in place before it became common knowledge. Time he now didn't have because he suspected that Loretta's sudden illness was a sign that it was too late to stop what the Elder so desperately wanted to stop.\n\n\"You expect me to solve this problem, Andrei?\" Caleb asked incredulously. \"Forgive me, but you were the one who decided it was prudent to mate with a wolf. You were the one who bit Loretta. Now you want me to give you advice on contraception?\" \n\nHe laughed loudly but there wasn't much humour in it. \"The only way to ensure you don't make Loretta pregnant is to give her up completely, Andrei. From the sounds of things you made love to her after you bit her and managed to successfully pin yourself to her. She's now throwing up quite violently. I think you may be trying to shut the stable door after the horse has already bolted.\"",
        "The colour drained completely from Andrei's face as Caleb's words sank in. His knees buckled and he sat down heavily on the sofa. \"No way,\" he denied shaking his head wildly. \"That was just this morning. There's no way Loretta could be......\" He couldn't even say the word. If he said the words it would somehow make it more of a possibility. \n\n\"From what I was able to dig up it would appear that it is not only possible but has happened in the past, the very distant past I hasten to add,\" Caleb told him quietly. \"It's not a pretty tale but there was one previous Vampire/Were mating about three thousand years ago. The female Were became pregnant almost instantly once the full mating took place and she was pinned. \n\nSymptoms began showing almost immediately because for some reason the wolf gene inside the Were becomes more dominant and their gestation rate reverts to that of a normal wolf, usually around sixty three days. The Vampire Council at the time discovered it and they were all put to death, including the vampire involved. That was the start of the separation between Weres and Vampires. Our people decided this knowledge was not to become public ever again.\"\n\nCaleb didn't think Andrei could become any paler but he managed to do so, the wildness in his eyes becoming more pronounced.\n\n\"They killed them?\" Andrei whispered hoarsely, his hands tightening unconsciously into fists. His entire world felt like it was caving in on top of him as he struggled to come to terms with everything he was hearing. Loretta could be pregnant with his child. If she was, if it was really possible then her life was in danger from his own people. They would kill her and their unborn child. They would kill him too because he would defend his wolf to the death no matter who he had to take on.\n\n\"Caleb, what can I do?\" he asked desperately. \"How do I protect her? How do I protect them?\" \n\nHe was long past caring that he was turning to the Ancient for help, that he was submitting to the other vampire. He wasn't too proud to get down on his knees to save Loretta's life and the life of their unborn child if she was in fact pregnant. \n\nBecoming a father may not be something that he particularly wanted but he knew his wolf would be overjoyed at the news, that she would want their child and would love it unconditionally. He would learn how to love it too, for Loretta. If he could change enough to allow his wolf into his heart then he could adapt to becoming a father.\n\nCaleb felt the last of his antipathy towards Andrei Romanov vanish as he stared into his anguished face. The arrogant man was gone to be replaced by someone who was so much more than he ever had been. His fear for Loretta was etched on his face, his willingness to protect her and his child clearly signalling that the vampire had come a long way in so short a period of time. \n\nHe was oddly jealous of Andrei and also Nors and Alexei. They would be able to have what he would never be able to achieve. They would be able to become fathers, to know the perfection of giving their mates the one thing that they wanted most in the world. \n\nSince he had held Jared's children he'd had a deep ache within him to know the bond of a parent and a child. Since he had watched his Annie hold little Alicia so reverently, her face glowing with love he had known that he had taken something so beautiful and precious from his woman that he could never replace.\n\nHe sighed deeply and then he gave Andrei a reassuring smile. \"You didn't think I was going to leave you pissing in the wind, did you?\" he asked slightly drolly. \"No one will hurt Loretta, Andrei. I have plans in motion to prevent that happening. I protect my family and to do that I have to protect the entire Hanlon pack. This information needs to be kept quiet, about the possible pregnancy at least. You can't mention it to Loretta yet. I need a little more time.\"\n\nAndrei was starting to pull himself together again, the shock of all the revelations starting to wear off. The Ancient's unknown plans were getting his attention, dragging his mind back to what he needed to do with regards to The Council. \n\nHe frowned at the prospect of having to keep quiet with Loretta though. If she was pregnant then she had the right to know what was happening to her. He was amazed that he wasn't even stumbling over the thought of her being pregnant anymore. He knew he had to spend some time figuring out just how much he had changed physically to enable him to father a child but he didn't have time for that at the moment.\n\n\"What plans?\" he asked quietly, his expression turning slightly suspicious even as he felt relief wash over him. Just knowing that Caleb had something up his sleeve soothed his worry a little. If he didn't have to deal with this alone then all the better. \n\n\"I can't divulge them just yet,\" Caleb answered with a little smile tugging at his lips because he knew it would annoy the hell out of Andrei not knowing. \"For the moment, we need to organise a meeting with all the mated couples, the Ancients and also Jared and possibly Rafe too. It's time I explained about the matings so at least that is out of the way.\"\n\n\"But if you say Loretta will be having the child in around about sixty three days then it's not leaving a lot of time, Caleb,\" Andrei argued. \"That's if she really is pregnant,\" he tagged on under his breath.\n\nThe Ancient regarded him intently for a long moment and then sighed softly. \"Fine, I'll tell you what I'm planning, Andrei. But it is between you, me and Demetri. If you breathe a word of it to Alexei or anyone else I will personally gut you. Are we clear on that?\"\n\nAndrei blinked in surprise for a moment and nodded slowly. He shouldn't be surprised that Demetri was in the know with whatever Caleb was planning. Those two were as tight as him and Alexei. \n\nHe suddenly realised that he hadn't seen Demetri since he came back from wherever he had been with Mara. Just that one occasion at the Ceremony. Usually his friend dropped by to touch base every once in a while. Still, he had been busy recently with Loretta and he wasn't actually talking to his friend for screwing him over. He looked expectantly at the Ancient.\n\nCaleb smiled slowly. \"It's very simple, Andrei,\" he said in a dangerously quiet voice. \"I'm going to bring down The Council.\" \n\nThere was a moment of stunned silence and then the breath whistled out of Andrei's throat in a harsh ragged sound. \"I am the fucking Council,\" he hissed loudly. \"You think getting rid of me is going to resolve this problem?\" He couldn't believe Caleb was actually going to do what he'd threatened the year before. It would mean civil war for their people. \n\nThe cold, hard expression on the other man's face told him that he intended to do just what he had announced he was going to. \"A civil war, Caleb?\" he ground out. \"You're seriously going to do this? It's madness! Thousands will die!\"\n\nCaleb rolled his eyes and snorted loudly. \"You exaggerate, Andrei,\" he said softly. \"Yes, I intend to bring down The Council. It is more than obvious it isn't working in its current form. But I intend to replace it with a new, improved Council. There may be some bloodshed but it won't be on the level you think. If I can do this right, the only vampires who will lose their heads will be ones you'll be perfectly happy to have do so.\"\n\nHe paused briefly to let his words sink in. \"Your position on The Council is safe, Andrei. I will need Council members who will be willing to put the safety of the Weres first and foremost. I suggest you start looking for a new Enforcer though because Alexei will be becoming a Council member whether he wants to or not. I know both of you will be very diligent in ensuring your mates are kept safe.\"\n\nAndrei swallowed hard and then swallowed again, his thoughts whirling madly in his head. Alexei would go mental at being ordered onto The Council against his will. He didn't have the same political leanings as Andrei did. But then, his brother would want to ensure Cedar's safety at all costs. Maybe he wouldn't be as reticent about it as he had first thought.\n\n\"That's all I'm prepared to tell you at the moment,\" Caleb was saying standing up. \"Until I say otherwise, keep quiet about everything I have told you. Arrange with Alexei and Nors to come over to my house tomorrow night. I'll liaise with the Weres. They will be told about the matings being possible and how to achieve it and nothing else at this point. I'm sure I can trust you to do as I ask, Andrei?\"\n\nIt was posed as a question but Andrei knew Caleb wasn't expecting any confirmation from him. He did nod though because he couldn't trust himself to speak. He had too much to take in, both on a personal and also a professional level. And he couldn't talk to anyone about it other than Caleb. He supposed he could talk to Demetri about whatever plans related to The Council but he had a feeling his friend would be just as tight lipped about it as the Ancient before him was.\n\nCaleb was clearly dismissing him. He should have felt angry about it but he wanted to get home to Loretta. He wanted to see her so badly, to try and find out if there was anything different about her which would lend credence to what he had just discovered. He wanted to scent her deeply to see if he could detect anything different about her body, to see if he could detect a new life growing inside her.\n\nHe left the Ancient's house almost in a daze. Caleb was going to bring down The Council and Loretta could possibly be pregnant with his child. When he had come to Caleb for answers he had never dreamed he would have received the answers he had and would be leaving with more questions than he had when he first went there.\n\nHe was more in control by the time he finally reached his house. He hurried upstairs to find Loretta still sleeping and Alexei engrossed in a book. His brother looked up with an inquiring expression on his face.\n\n\"Was Caleb any help?\" he asked with a touch of concern in his voice. \"She hasn't woken since you've been gone but her breathing sounds easier now and she isn't as flushed as before.\"\n\nAndrei crossed the room to stand beside the bed, staring down at his sleeping mate. She did look a lot better. His gaze roamed slowly over her and he tried not to allow his eyes to linger on her stomach.\n\n\"Caleb's called a meeting for all the mated couples tomorrow night at his house along with the Weres,\" he answered his brother in a distracted tone, his brown eyes finally settling back on Loretta's face. \"Will you let Nors know?\"\n\nAlexei frowned slightly as he stood up and put the chair back where he'd gotten it from. \"I take it you have no intention of sharing anything with me?\" he asked in a disgruntled tone. He could see Andrei had a lot on his mind, that he was distracted with his wolf as well.\n\n\"Tomorrow,\" Andrei said quietly not even turning his head to look at his brother. He couldn't answer any of the questions that he knew he would see in his face. \"Thanks for sitting with her for me, Alexei.\"\n\nHis brother's subdued tone of voice was actually concerning Alexei a lot. He wanted to ask again what Caleb had said but he knew he wouldn't tell him anything. When Andrei decided to keep something secret, wild horses wouldn't drag it out of him. Alexei had a feeling that Caleb had instructed his brother to remain quiet so it would be pointless to push him.\n\n\"Let me know if you need me again,\" Alexei sighed, rolling his shoulders to try and release a little of the tension which had crept in. \"I'll take care of her for you anytime, Andrei. You know that.\"\n\nAndrei turned then and managed a smile. \"You always have my back, Alexei,\" he smiled. \"You know I'd do the same for you.\"\n\nAlexei smiled back at him and nodded his head. His brother turned back to his mate almost immediately so he turned and left the room knowing that his presence was no longer needed. He suddenly wanted to be with Cedar very badly. Andrei's behaviour was unsettling and he knew it related to the wolves and their mates. He just wanted to hold her close and make sure she was safe.\n\nAndrei let out a slow breath as he heard his brother leave. He knew he wasn't being fair to Alexei but he had to keep quiet for now. That he couldn't tell the two people he loved most in the world what was troubling him made him feel very alone, something he wasn't used to at all. Always he could tell his twin anything. Now he had to keep secrets.\n\nLoretta sighed softly and rolled onto her side, her eyes flickering open for a moment and soft dreamy smile crossing her lips. \"Hey asshole,\" she said sleepily. \n\nHis heart thumped loudly as he lowered himself onto the bed beside her and pulled her gently into his arms. \"Hey Rose,\" he breathed softly running a hand quickly over her brow and relaxing slightly at how even her temperature felt. \"How are you feeling?\"\n\nShe snuggled into him, brushing her lips against his neck and sighing contentedly. \"Much better. That sleep has done me a world of good. Don't feel sick anymore.\" She pulled her head back to look up at him. \"Were you talking to someone?\"\n\n\"Yeah, Alexei was here for a bit,\" he smiled stroking the side of her face gently before brushing his thumb against her lips. She kissed him automatically and his smile widened. \"I had to go out and didn't want you left on your own so he came and sat with you until I came back.\"\n\n\"You didn't need to do that,\" she groaned her face flushing with embarrassment at the thought of having someone looking after her in his absence. \"It was just a little bug, Andrei. Nothing life threatening.\"\n\nHe hugged her tightly, burying his head in the crook of her neck as he inhaled deeply. \"Yes, I did,\" he whispered against her skin. \"You're too precious for me to risk your health, Loretta.\" He inhaled again, scenting her on a deep level, running his hand gently down her side, pausing at her hip before sweeping lightly across her stomach.\n\n\"Stop it,\" Loretta laughed loudly. \"You're seriously ruining your reputation as a badass vampire here, Andrei.\" She snuggled against him smiling, secretly loving this tender side to her vampire.\n\n\"Only with you, my Rose\" he answered lightly raising his head and tilting hers back so he could brush her lips gently with his. The hand on her stomach stroked lightly before it paused and tightened ever so slightly. \n\nHe kept kissing her as shock rocked through his body. Her scent was different. The sweet cinnamon scent was still there but it was enhanced with a subtle hint of lilac which hadn't been there before. He stifled down a deep groan, clutching his wolf more tightly as his kiss turned slightly desperate.\n\nLoretta was pregnant. He was sure of it.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "mating",
        "vampire bite"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-council-ch-11"
}