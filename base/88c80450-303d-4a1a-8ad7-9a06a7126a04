{
    "title": "The Way You Say My Name Ch. 16",
    "pages": [
        "\"Now can we go to the Sheriff?\" Dillon sat down on the couch, next to Jamie and across from Megan and Heath who were sharing the loveseat. He took a sip of the coke he'd brought with him from the kitchen, wishing it was something stronger. \n\nJamie shook his head. \"Not until we know all of it.\"\n\nDillon should have known it wasn't gonna be that easy. \"Why in the hell not? We know all the players, and with those pictures of Burke having sex with underage girls, there's not a doubt in my mind that he was Ben's second victim.\"\n\nHeath snorted and scooted even closer to Megan, though Dillon would have swore they were already as close as two people could get without actually sharing the same skin. \"Some victim. You ask me, it couldn't have happened to a nicer guy.\" He looked to Jamie. \"What did you do with the pictures?\"\n\n\"I asked Dillon to hide them for me, but not to tell me where they are until I decide what to do with them. I know that sounds weird, but I feel better not having to see them.\" He sighed. \"I know I should just hand them over to the Sheriff, but I'm half scared he won't believe me. Blackmail, prostitution, pay-offs. This whole mess sounds more like a soap opera plot than something that actually happened.\" \n\n\"I know my brother, Jamie. If you tell him the truth and show him the evidence, he's gonna believe you. He's too smart not to.\" Megan leaned forward, taking Heath with her. \"And I'm sure when you do talk to Brandon, Ash will be glad to go with you and back up you up with the story of his own blackmail.\"\n\nDillon, who'd just taken another sip, got so choked up Jamie had to whack him on the back a few times to clear the Coke out of his windpipe. \"How did you know about that?\"\n\nMegan shrugged. \"I went to see him in the hospital a few days after his near miss. I mean, I've gone to school with the guy for practically my whole life. It was only right that I go check on him. We started talking, and he told me what happened.\" Megan leaned back against Heath. \"To be honest, I think he just needed to get the whole thing out of his system, poor guy. And he gave me permission to tell Heath, too. That's my point. If Ash is willing to let me tell a perfect stranger like Heath what happened to him, I'm sure he'd be happy to cooperate if you wanted to tell Brandon.\"\n\nJamie said, \"How is Ash, anyway? I heard he was home from the hospital.\" Jamie lowered his eyes in that way that made Dillon's heart ache for all he'd been through. \"I wanted to go see him, but I was afraid it would make things harder on him. You know, bring it all back.\"\n\nMegan's smile was so warm and loving towards Jamie, Dillon could have kissed her. \"Ash figured that's why you haven't been around. He said to tell you and Dillon both he'd love to see you, anytime.\"\n\nDillon set his Coke on the table and studied his brother's face, finding the way Heath's facial muscles tensed at Megan's words fascinating. \"And just when did Ash tell you that? Did you go see him?\"\n\nMegan turned to face Heath. \"You know I did. I told you about it.\"\n\nHeath shook his head. \"You told me you visited him at the hospital. You didn't say anything about going to his house.\"\n\n\"Oh for Heaven's sake, Heath. The guy needed a friend. I've been to see him a few times, and I don't think I should have to apologize for it. I don't know why you'd be jealous, anyway. You don't seem to care about how much time I spend with Dillon and Jamie.\"\n\nHeath crossed his arms over his chest. \"That's different. Dillon and Jamie are gay.\"\n\n\"And so is Ash.\"\n\n\"Ash is bisexual, meaning he plays both ways. Big difference, Meggie. I don't like it.\"\n\nMegan stood up, pulling on Heath's hand so that he came to his feet as well. She gave Dillon and Jamie an apologetic smile. \"Before this turns into another one of our fifty-decibel-discussions, Heath and I are gonna go.\" She blew them both a kiss, and shook her head when they started to rise. \"Don't get up. We know the way out. And Jamie?\"\n\n\"Yeah?\"\n\n\"No matter what you decide about telling Brandon, I'm behind you all the way.\" On that note she left, taking a grumbling Heath with her.\n\nJamie leaned into Dillon's embrace. \"I don't know what we did to deserve Megan, but I'm glad we've got her.\"\n\nDillon kissed his cheek. \"She's a sweetheart, all right. I just hope Heath doesn't hurt her.\"\n\nJamie looked up at him in surprise. \"You really think he would?\"\n\n\"Not intentionally, no. But Heath has a whole lot of baggage he's carrying around with him. I just hope it doesn't spill out on Megan.\"\n\nThat peaked Jamie's interest. \"What kind of baggage?\"\n\nDillon pulled him in as close as possible. \"To be honest, I'm not sure. I just have the feeling that something happened right about the time Heath moved out of Mom and Dad's house. Nothing was ever said to me, and Heath won't talk about it, but that's the feeling I get.\"\n\nJamie nodded. \"You're probably right. You have good instincts.\"\n\nDillon didn't want to fight, but he couldn't let an opening that good pass him by. \"Yeah? Well, if I have such good instincts, why won't you listen to me about going to the sheriff.\"\n\nJamie pulled away slightly, but to Dillon's relief, he didn't go far. \"Those pictures we found tonight don't necessarily mean that Burke was Ben's victim, Dillon.\"\n\n\"You don't believe that, Jamie. Hell, it was your idea to call Megan and Heath over here to tell them what we'd found. Why would you do that if you didn't believe we had proof positive?\"\n\nJamie did get up then, but Dillon sensed it was more a case of restless energy than anger. After a few minutes of pacing across the living room, Jamie stopped long enough to look at Dillon and say, \"So what's our theory, then? That Burke killed Ben because Ben was blackmailing him?\"\n\nDillon knew Jamie wasn't going to like what he had to say next, but that wasn't going to stop him from saying it. Jamie needed to face the truth. \"Jamie, you have to stop looking for killers around every corner. Brandon's already arrested Ben's killer. His name is Barry Sledge, professional drunk, and he's sitting in the county jail right now awaiting his sentence.\"\n\nJamie pulled at his hair in a gesture of complete frustration. \"Damn it, Dillon, can't you see what's right in front of you? It's too much of a coincidence that Ben was blackmailing two people for thousands of dollars each and then just happened to end up dead? Life doesn't work that way.\"\n\n\"Life isn't an eight-dollar mystery novel, either. It's time you stopped trying to make it one.\" Dillon was doing his best to hang on to his temper, but Jamie wasn't making it easy with his stubborn refusal to listen.\n\nJamie's cheeks were bright red and flushed with anger. \"All right then. Since you have an answer for everything, answer this one for me. You're so sure Burke didn't kill Ben. Who killed Burke, then?\"\n\nDillon stood up. \"Gee, Jamie, I can't imagine who would want to kill Burke. I mean, who in his right mind would want to off a kiddy pimp/child molester. I can't think of a soul.\"\n\n\"Do you have to be so damn sarcastic?\" \n\nIt wasn't until Dillon heard the quiver in Jamie's voice that he realized how worn out Jamie was. Dillon's anger dissipated like a thin fog, almost at once. Dillon crossed the room and took Jamie into his arms, all but crushing him against his chest. \"No, I don't. I'm sorry, babe. I'm just worried and ready for this to be over.\"\n\nJamie nodded but didn't say anything. Desperate to reach a compromise, Dillon said \"I don't wanna fight about this. Can we try something here, please?\" \n\nJamie murmured \"What,\" into Dillon's chest. Dillon smiled in spite of the tension between them. At least Jamie was interested. Dillon said, \"It's too late to go to the auto parts store tonight, and I have to work every evening until closing for the rest of the week. But Saturday, I get off at four. Let's take the tire from the trunk in and let the guy at the auto parts store look at it. Then we'll make up our minds about what really happened that night, okay?\"\n\nJamie nodded and hugged him tighter. Dillon only hoped when the evidence came in proving that Ben's death was caused by Sledge--and only Sledge--Jamie would accept it.\n\n#\n\nThe guy down at Autos-R-Us--Joe, according to his nametag-- took one look at the tire Dillon had pulled from Ben's trunk and said, \"Dude, who slashed your tire?\" \n\nDillon could feel Jamie go rigid beside him. \"You mean the tire was cut?\" \n\nJoe narrowed his eyes. \"You're telling me your tire was cut and you didn't even know it.\"\n\nJamie shook his head. \"The car belonged to a friend of mine. The tire was like that when I got it.\"\n\nJoe took a pen out of his pocket and pointed to the black surface. \"See this gash here, on the side?\"\n\nJamie said, \"Yeah, I see it. But what does it mean?\"\n\nDillon tuned Joe out as he gave Jamie his explanation. Dillon already knew what it meant. If Ben had run over something which caused the tire to go flat, the gash would be on the bottom, not the side. But even in the face of mounting evidence that was contrary to his own theory, Dillon wasn't going to give up. If he admitted that the tire had been cut the night of Ben's death, then he'd have to admit the truth: someone wanted it to look like Ben had a flat tire that night and therefore had a reason to be out of his car on a deserted road in the middle of the night. Someone with something to hide. Something like murder. Nope, Dillon was not ready to believe that, not yet. To Joe, he said, \"But couldn't running into something, say a ragged curb, couldn't that gash a tire on the side?\"\n\nIt was Joe's turn to shake his head. \"Not like this one was cut. See here?\" Using the pen, he again pointed to the tire. \"Take a close look and you'll see what I mean.\"\n\nDillon did as he was asked and out of the corner of his eye saw Jamie doing the same thing. The minute Dillon was eye level with the tire, he knew the truth. There, amid a store crowded with engine parts and the smell of old oil, all Dillon's theories about the night Ben died crumbled. \n\nJamie straightened up first. \"I don't know anything about cars and even I can tell that tire was cut with a knife. It's just too clean and narrow to have been made by anything else.\"\n\nJoe nodded. \"That's about the size of it. I can patch it if you want me to.\"\n\nDillon said, \"No, don't do that. Can you get us a used tire in the same size? The one that's on there now was shredded by a tack strip. I doubt it can even be patched.\" He paused for a minute, thinking about the tire he hadn't had a chance to even remove in all the chaos caused by finding the pictures. \"On second thought, see if you have two used tires in this size. That way we'll have a spare.\" \n\n\"Piece of cake.\" Joe looked down at the tire on the counter. \"What do you want me to do with this one?\"\n\nDillon had to drag the words out of his mouth. \"We'll take it with us just like it is. We may need it for evidence.\"\n\nJamie gave him a long, searching stare. \"Does that mean what I think it means?\"\n\n\"Yes and no.\" Dillon took a deep breath. \"Let's just say I'm less certain about Sledge's guilt now than I was when I walked in here. I want to keep that tire like it is, just in case.\"\n\nDillon could tell that Jamie was trying hard not to say \"I-told-you-so.\" Instead, he said, \"In other words, you're keeping an open mind.\"\n\n\"Yeah, something like that.\"\n\nJamie grinned. \"A guy can't ask for any more than that.\"\n\n#\n\nAs soon as they got back to the apartment, Dillon parked the Lumina and pulled all three tires out of the trunk. Jamie took the slashed tired from him and carried it into the garage, propping it against the far wall. Coming back to Dillon, Jamie pointed to the other tires. \"Want to store those in the garage, too?\"\n\nDillon shook his head. \"Nah. We've got a couple hours of daylight left. Might as well go ahead, change the damaged one, and put the spare in the trunk. Wanna give me a hand?\"\n\n\"Sure. What do you need me to do?\"\n\nDillon rolled one of the tires towards the Firebird, which was still resting on the side of the driveway. \"Throw this one in the trunk please. Oh, and grab the jack and the lug wrench while you're at it.\"\n\nJamie pulled the keys out of his pocket and went to the back of the Firebird. At least he knew what a lug wrench was and wouldn't have to embarrass himself by asking Dillon. Jamie had to hand it to Dillon, though. Not once had he ever made Jamie feel inferior for his lack of knowledge about cars. Just another reason Jamie was so crazy about the guy.\n\nHe threw the spare inside the trunk, ignoring the sight of the ruined lining and the memory of those pictures as best he could. He grabbed both the jack and the handle, tucking them under his left arm and reaching for the lug wrench with his right. That done, he closed the trunk and headed to where Dillon was crouched on the driver's side of the car.\n\nDillon took the lug wrench with a grateful smile and made quick work of loosening the lug nuts. When that was done, he said, \"Put the jack together, would you, sweetie?\"\n\nJamie grinned in spite of himself. \"Sweetie? You going all girlie on me, Carver?\"\n\nDillon laughed. \"I told you that lube Megan gave us was turning me into a girl. You are sweet, though, and I can prove it.\"\n\n\"Oh really? How?\"\n\n\"Cause, I've tasted you myself.\"\n\nDamn if Jamie didn't blush just hearing that. Cheeks still flaming, Jamie set about screwing the handle onto the jack so Dillon could pump up the car. Screw. Pump. Thinking those words made Jamie blush even harder. Dillon was turning him into a total horn-dog, and Jamie didn't mind in the least.\n\nJamie gave the handle a twist, knitting his brows in frustration when it refused to tighten in. Finally, after five solid minutes of trying, he turned to Dillon. \"I think I must be doing it wrong.\"\n\nDillon set aside the lug wrench and looked over Jamie's shoulder. \"There's no way to do it wrong. All you do is screw it in.\"\n\n\"I'm trying, but it won't catch.\"\n\n\"Here, let me try.\" Dillon turned and took the jack handle, repeating the process Jamie had been struggling with. Jamie was strangely happy to see that Dillon was having no more success than he'd had. Finally, Dillon took a good look at both the jack and the handle and said, \"No wonder they don't fit. They're different models. Hell, they aren't even the same brand.\"\n\nIt wasn't disbelieve of Dillon's statement that made Jamie take a look for himself. It was more like a sure certainty that Ben, who put the \"P\" in \"picky\" where it came to his car, would never have a made the mistake of pairing his jack with the wrong handle. Dillon must have had the same thought, because he said, \"I don't believe this.\"\n\nJamie nodded. \"I know. I can't believe Ben would have made that mistake.\"\n\n\"Jamie, this wasn't a mistake.\"\n\nJamie wondered if his face was as blank as his mind at that moment. \"I don't understand. You just said you didn't believe it. Now you're saying you think Ben choose the wrong handle on purpose.\"\n\nDillon laid the handle on the ground, right in front of Jamie. \"Look at the handle, Jamie. It's solid steel. They all are. And judging by the way this one is too small to catch on the threads at the base, I'm guessing the handle that goes with this jack is even more solid, thicker. Just the right size to club a man over the head with--\"\n\n\"And then leave him lying in the middle of the road for some drunk to run down.\" Jamie finished Dillon's sentence with a horrifying realization. \"You think the guy who really killed Ben bashed in his head with his own jack handle and then dragged his body into the middle of the road?\"\n\n\"Yep. I also think that the killer slashed Ben's tire to make it look like he was fixing a flat and had a real reason to be out of the car that night. But he couldn't leave a bloody jack handle behind, so I think the killer probably switched Ben's jack handle with his own thinking no one would ever check it. And it worked, because no one did. Not until now, anyway.\"\n\nJamie closed his eyes, his brain doing it's best to keep up. When he was together enough to open them again, he looked at Dillon and said, \"But how did he do it without being seen? And if Ben didn't really have a flat that night, what was he doing out of his car? And how did the killer get the jack handle out of the trunk to hit him with in the first place?\"\n\nDillon leaned back against the car. \"The first part is easy enough to answer. Tully Road is isolated enough that no one would be out there at that time of night except the occasional drunk on his way back from the beer joints. If I had to guess I'd say that's why Ben and the guy who killed him were meeting out there in the first place.\" Dillon rubbed his grimy hand over his face, leaving more than one smudge. \"As for the rest of it, who knows? Just more pieces to add to this dam jigsaw puzzle Ben created.\"\n\nJamie wanted to argue that getting killed wasn't exactly Ben's fault, but he knew it would be a hard sell, even to himself. Blackmail and extortion weren't exactly conducive to long life and good health. One thing he couldn't argue against any longer, though, was going to see Brandon. Jamie couldn't keep fighting the truth. He and Dillon were over their heads, and they needed backup. Looking to Dillon, he said, \"Can we wait about changing the tire?\"\n\n\"Yeah, we can, but we don't have to. I have a jack in the trunk of the Lumina.\"\n\n\"It's not that. It's just that, well . . . \" Jamie cleared his throat. \"We need to go see Ash before we do anything else.\"\n\nIt was Dillon's turn to look confused. \"Ash? Why?\"\n\n\"Because I want to clear it with him before we go to see Brandon.\" Jamie looked Dillon dead in the eye. \"You were right, Dillon. It's time we tell Brandon the truth. All of it.\"\n\nDillon grabbed the back of his neck and kissed him, hard. When they broke apart, he summed up his feelings in four simple words. \"It's about damned time.\"\n\n#\n\nThank God, Ash was home. Jamie was so nervous, Dillon was afraid he was going to have to strap Jamie to the seat of the Lumina with duct tape just to get him to sit still long enough to fasten his seat belt. When Ash answered the door on the first ring, Dillon sagged against the doorframe with relief.\n\nAsh looked worlds better than he had the last time they'd seen him. The bandages were gone, revealing a rope-shaped scar encircling the entire circumference of his neck, but other than that, no one looking at him would ever be able to tell he'd had such a near-miss. The thing that put Dillon the most at ease, though, was the warm smile Ash gave the minute he saw them.\n\n\"It's about time you assholes came to see me. I was beginning to think I was gonna have to barge into your little love-nest just so you'd know I was still alive.\" Even Dillon had to admit that Ash's damaged vocal cords gave his voice a low, sexy pitch.\n\nDillon laughed. \"Yeah, yeah. Cry me a river, why don't you?\" He grew more serious. \"You look good, man. Real good.\"\n\nAsh ushered them inside. \"I feel good. And Dr. Carson is so happy with my progress, he's decreased my therapy sessions to once a week. With any luck, I'll be discharged from care completely by the time school starts in the fall.\"\n\nJamie clapped Ash on the back. \"That's great, Ash.\" Jamie hesitated. \"That makes what we came to ask you even harder.\"\n\nAsh led them into the den and motioned them towards the couch, taking one of the chairs for himself. Once they were all seated, he said, \"If this is about you telling the sheriff what happened with me and Ben, I'm all for it.\"\n\nJamie seemed too stunned to speak, so Dillon took over. \"You know about that?\" \"Sure. Megan told me you were thinking about it, and might want me to back up the story with your brother. I'll tell you the same thing I told her. I think you should tell him what's going on. Especially until you find out where that other money came from.\"",
        "Dillon looked to Jamie, a question in his eyes. When Jamie nodded, Dillon said, \"Actually, we're pretty sure Ben was blackmailing the guy who pimped him out. The less you know about that the better, but let's just say we found photos a whole lot like the ones Ben made of you.\"\n\nAsh shuddered, but he seemed to be holding it all together. \"Damn. I had no idea Ben was capable of all that. I really thought maybe what he did to me was a one time thing.\"\n\nJamie cleared his throat. \"There's more.\" He went on to tell Ash about the slashed tire and the mismatched jack handle.\n\nAsh shook his head in amazement. \"So what, you think the pimp killed Ben because Ben was blackmailing him, then made it look like an accident? It makes sense, I guess. All the more reason for you to turn the guy over to Sheriff Nash.\"\n\nDillon propped his right leg over his left knee. \"That's the kicker. The guy who whored out Ben is dead. Somebody wasted him on his own front porch.\"\n\nAsh whistled. \"You gotta go to the sheriff, Jamie. I'll back you up any way I can.\" He lowered his eyes. \"I still have those pictures Ben took of me and him, if you need them.\"\n\n\"God, Ash, why would you keep something like that?\" Jamie made a rude noise. \"I'd have burned the fuckers.\"\n\nAsh shrugged. \"I'm not sure why I kept them, to tell you the truth. Maybe I just wanted a reminder of my own stupidity.\" Jamie started to speak but Ash held up his hand to stop him. \"It's okay, Jamie. I won't say I'm over it, but I'm dealing with it. And look at it this way. If you show Brandon those pictures and that letter from Ben, it goes a long way towards backing up your story.\"\n\nBy the time the visit was over and the two of them were ready to leave, Jamie seemed more convinced than ever that telling Brandon the truth was the right thing to do. Dillon was actually starting to think that all their problems would soon be behind them. He should have known better.\n\n#\n\nThey drove to Brandon's house first. It was pushing eight o'clock by the time they got there, and Dillon was almost sure Bran would be there. Nate answered the door, with Sasha, Brandon's Great Dane, hot on his heels. Sasha studied the boys for a second with something akin to doggie-disinterest before sauntering back into the house. Dillon laughed. \"Some watchdog she is.\"\n\nNate snorted. \"Oh yeah. She's a watchdog all right. She'd sit back on her fuzzy rump and watch the thieves make off with all our stuff.\" Nate opened the door wider. \"You guys want to come in?\"\n\nJamie shook his head. \"Actually, we were hoping to talk to Brandon.\"\n\n\"I wish you could, guys, but he's gone to Chicago to talk to a witness about a case he's working on. I'm not expecting him back until late tonight. Is there anything I can help you with?\"\n\nDillon took Jamie's hand. \"Not this time, Nate, but we appreciate the offer.\"\n\nNate slapped him on the shoulder. \"Anytime, buddy. And whatever it is, I hope it works out for you. For both of you.\"\n\nIt was a too much of an understatement to say it out loud, but silently, Dillon did, too.\n\n#\n\nBy the time they got back to their apartment, Jamie was totally drained. He could have sworn he fell asleep twice on his feet just walking towards the stairs. He followed Dillon inside the apartment and was just about to head towards the shower when someone knocked on the door. Since Dillon was halfway to the bedroom already, Jamie yelled, \"I'll get it.\"\n\nThe minute he opened the door, all thoughts of being tired and taking a shower fled. Megan stood on the deck, her eyes red, dried tear tracks on her cheeks. Jamie pulled her inside and wrapped his arms around her. \"Are you all right?\" Megan mumbled into his chest. \"Yes. No. I don't know.\" She drew back and took in a deep, shuddering breath as a fresh batch of tears filled her eyes. \"I'm not sure how to feel. Heath's mad at me, and I don't know why.\" \n\nDillon came back in, took one look at Megan's face and said, \"Dammit, what did Heath do to you?\"\n\n\"How do you know it was Heath?\" Megan swabbed at her eyes with her shirtsleeve. \"How do you know it wasn't me who screwed up?\"\n\nDillon pulled her over to the couch. \"Because I know my brother.\" He and Jamie sat down on either side of her, offering what comfort they could. \"What happened, Megan?\"\n\n\"You know that night we got picked up in Chicago?\" When they both nodded, Megan said, \"Stupid question. Of course you do. Well, Heath was so mad at me that night, he spent the entire drive back from Chicago blessing me out for what happened. I guess he was on such a role, he couldn't see how upset I was getting. By the time we got back to Reed, I was a complete basket case. Heath felt bad about it, and he took me to his apartment to get me calmed down before driving home. Guess he didn't want my mom and dad to see me so upset.\" She took a deep breath. \"He was so great about it, so apologetic. We started kissing. One thing led to another, and . . .\"\n\nDillon groaned. \"Megan, please tell me you didn't sleep with him.\"\n\nThat brought on a fresh round of tears. \"I did. And that wasn't the only time we've been together. He's always been so sweet afterwards. But not tonight. Tonight was different.\"\n\nDillon drew her against his side. \"And how was tonight different, honey?\"\n\nMegan hiccupped. \"Tonight I told him I loved him.\"\n\nJamie reached out and squeezed her hand. \"And what did he say when you told him that?\"\n\nMegan increased the pressure on Jamie's hand. \"He flipped out on me. Total pancake. We were at his apartment, and he just freaked. He jumped up and started getting dressed, going on and on about not expecting too much and about me pressuring him.\" Megan laughed, the sound harsh and bitter coming from her lips. \"Jeez, you tell a guy you love him and he practically dives out the window to get away from you.\" Megan wiped her eyes on her sleeve again, and Dillon went to fetch some tissue. As soon as he came back, and Megan blew her nose and wiped her eyes proper, she said, \"He all but threw me out of the apartment, told me it was time for me to go home. I drove straight here. God, what did I do wrong?\"\n\nDillon cursed under his breath. \"You didn't do a damn thing wrong, Megan. This is Heath's problem, not yours.\" Dillon stood up, and Jamie knew what he had in mind.\n\nMegan must have guessed it, too, because she said, \"Where are you going?\"\n\n\"Where do you think I'm going?\" Dillon picked up his keys. \"I'm going to beat some sense into my dumbass brother. No way in hell am I gonna let him treat you this way.\"\n\nMegan did her own version of a freak out. \"No, you can't! Please, Dillon, it would only make things worse. You know how Heath is. He'd be so mad at me if he knew I told you what was going on between us. Please don't do it.\"\n\nDillon looked at Jamie with such helpless bewilderment, Jamie felt sorry for him. But on this one, Megan was right. \"You can't do it, Dillon. You've been where Heath is. Think about it. Could anyone two years ago have forced you to confront your feelings about me?\"\n\nDillon fell back onto the couch. \"Take the wind out of a guy's sails, why don't you?\" He looked at a still sobbing Megan. \"So, what are we gonna do about this?\"\n\n\"Nothing. I'm the one who screwed up, not you.\" Megan curled her lip. \"I'm always the one talking about cows and free milk. I knew better than to give my virginity to a guy who barely even seems to like me most of the time.\"\n\nJamie pulled her in and hugged her tight. \"Well, we like you. And we won't even ask you to sleep with us.\"\n\nMegan managed a shaky laugh as Dillon wrapped his arms around her from the other side. \"Who says we won't? This girl is downright cuddly. I've always wanted a human teddy bear. She could sleep right in the middle of that big ole bed of ours, and we could share her.\"\n\nMegan laughed again, and Jamie could feel her relax a little bit. As much as he liked Heath, he was mad as hell at him for doing this to her. And judging from the look on Dillon's face, he was even angrier than Jamie was.\n\nIt took Megan another half hour to calm down completely. She was wrung out, and Jamie wasn't surprised when she said, \"Thanks for listening, guys. I think I'm gonna go home now and drown my sorrows in a hot bubble bath.\"\n\n\"You sure you're up to the drive?\"\n\nMegan stood up, the two of them going up with her. \"I'm fine, Dillon, just ready to go home.\" She kissed them both on the cheek. \"I'll see you Monday at school, if not sooner.\" And before either one of them could lodge a protest, she was gone.\n\nThe minute the door closed, Dillon grabbed Jamie in a hug so tight Jamie thought sure he heard his ribs groan in protest. Dillon's voice was harsh, strained. \"God, Jamie, I am so sorry.\"\n\n\"For what?\" Jamie pulled back as best he could within the confines of Dillon's bear hug. \n\nDillon's face was tortured. \"For putting you through the same thing my brother is putting Megan through. If I hurt you half as bad as Heath has hurt Megan, you must have been in agony.\"\n\nJamie leaned up on his tiptoes and kissed Dillon's chin. \"You've more than made up for it. And with any luck, Heath and Megan will work things out, too.\"\n\nDillon sighed and rocked Jamie back and forth in his arms. \"I hope you're right, but, knowing my brother, he'll make Megan's life hell before he admits to her--and himself--how he really feels. I--\"\n\nA solid knock on the door cut Dillon off in mid-sentence. Jamie pulled away from him with a wry smile. \"Hold that thought. Megan must have forgotten something.\"\n\nJamie crossed the room to the door, flinging it open with, \"Hey what did you for--\" The words died on his lips. Instead of seeing the blue eyes and red hair he'd expected, Jamie laid eyes on the face that had haunted his dreams since that ill-fated day in February. The dark brown eyes, the black hair, the face of the best friend he'd ever known. Ben Lewis was standing on Jamie and Dillon's doorstep.\n\n{To Be Continued}"
    ],
    "authorname": "wavyscribe",
    "tags": [
        "brandon jamie",
        "jamie stop",
        "slashed tire",
        "tonight dillon",
        "dillon ready",
        "looked dillon",
        "truth wanted",
        "dillon kissed",
        "ash jamie",
        "megan dillon"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-way-you-say-my-name-ch-16"
}