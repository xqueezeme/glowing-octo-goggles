{
    "title": "Scheherazade and the King Ch. 09",
    "pages": [
        "Cas watched the harbour of Side from the balcony of a small inn on the waterfront. He sipped slowly on a glass of raki, his host never letting it run dry so long as he placed another coin on the table. As the Raja had made its way slowly along the meandering rivers that transected Babylonia and connected the Persian Gulf with the Mediterranean Sea, he had raced on horse and camel in an effort to beat the ship to Side.\n\nHe swirled the clear liquor in his glass, his dark eyes transfixed on the horizon for any sign of the Raja.\n\nBy all accounts he had arrived in time to meet her \u2014 none of the merchants could recall seeing a ship of her description in port over the past few days.\n\nSo where is she? What if I have it wrong? What if her captain decides to bypass Side and head for Phaselis? Or worse, what if doesn't intend to make port on the mainland at all? What if he steers her to Kourion or Knossos?\n\nHe set his drink down on the table a bit louder than he intended and the noise brought the innkeeper rushing to his table. He ordered a fish supper to appease the old man.\n\nCas kept his eyes fixed on the skyline as he ate his meal. The sun dipped closer and closer to the horizon and soon the fishermen were sailing into harbour to unload their catch. The harbourmaster announced the arrival of each ship with the mighty blow of a trumpet and, at each sounding, Cas sat up to see whether the ship that had arrived was the one he was waiting for. Ship after ship entered the harbour but none of them were the Raja. He set his knife and fork down and leaned back in his chair dejectedly. Unless he was wrong, the Raja should have made it to Side by now.\n\nNevertheless, he watched and waited as the sky grew dim around the few glowing clouds that remained of the sunset. Finally, he heard the harbourmaster sound the trumpet once more. He squinted his eyes, trying to make out the features of the dark ship on the horizon.\n\nHe paid for his meal and left the inn. He walked past the docks and climbed the stone steps that led to the top of the wall that guarded the harbour. Though he strained to see the ship in the growing dusk, he felt certain that it was the Raja.\n\nAs the first stars appeared in the firmament, the port lights were lit, bathing the docks in the warm glow of lamplight. Cas pulled his collar higher against a sudden breath of chilly night air.\n\nHe wondered whether the crew of the Raja had treated their prisoner with respect. The captain of the ship used to be Namaar \u2014 he is a good man, a reputable man \u2014 but naval captains could be transferred at the commander-in-chief's discretion. There was no guarantee that he was still the captain of the Raja and, even if he was, no guarantee that his crew would behave as honourably as their leader.\n\nCas' fingers rapped against the stone impatiently as he waited for the ship to draw closer to the harbour. The sooner he got aboard that ship, the better chance he had of finding the girl alive.\n\nIt seemed to take hours for the ship to navigate into port. He held his breath, waiting for the moment the name of the ship would be illuminated by the harbour lamps. Finally, he let out a sigh of relief \u2014 the ship was the Raja.\n\nHe quickly made his way down the stairs to linger in the shadows of an alley nearby. The sailors would be disembarking soon and he had to be ready to slip aboard. Sure enough, he soon heard raucous voices coming from the direction of the port and growing louder by the second. A group of rowdy sailors dressed in the King's uniform passed the alleyway, drawn to the closest tavern as moths to a flame.\n\nCas slipped out of the alley and followed the band of soldiers, looking for a sailor that was of similar height and build to him. He trailed into the bar after them, picking a seat where he could observe the group. They went through four rounds of raki with ease, their banter becoming more and more boisterous as the liquor took effect.\n\nFinally he noticed a suitable candidate stumble away from the table, staggering towards the door that lead into the back alley. Cas downed the rest of his drink, swilling the liquor in his mouth to make his breath smell stronger, set a coin down on the table and walked out the front door. He glanced around and, seeing no one, ran quickly and quietly around the back of the building. He waited until the soldier had finished relieving himself and then crept up behind him, wrapping his strong hands around his neck. Cas was careful not to kill him. The man would probably have no recollection of what had happened and the splitting headache he awoke with would easily be mistaken for a hangover. He pulled the sailor's clothes off and threw his cloak over the body. He dressed quickly, mussing up his hair to match the soldier's dishevelled locks before stumbling back in the direction of the ship. He clambered aboard the ship, pretending to be blind drunk. The few men who remained aboard the ship laughed at him and clapped him on the back as teetered past them and clumsily made his way below deck.\n\nWhen he was safely out of sight, he straightened his back and grabbed a lantern from overhead to light his way through the ship. Eventually he reached the trapdoor that led into the brig and gently slid the bolt out of place.\n\n++++++++\n\nScheherazade knew the ship was at port. She could hear the timbers creak as they leaned against the dock with each rolling wave. She could guess what would happen next... the men would disembark to satisfy their thirst for drink and other vices, then they would return and it would be a matter of time before her tormenter reappeared through the hatch.\n\nBut this time he will be drunk...\n\nThe thought should have made her shudder but she could not muster a physical response.\n\nIt was her second day without water and her third without food. At first, the hunger and thirst had been unbearable and even the fetid water sloshing around her ankles had seemed tempting but, now, her entire body felt numb. So, when she heard the hatch bolt move, she merely closed her eyes.\n\n\"Scheherazade?\"\n\nThe girl's eyes fluttered open at the unfamiliar voice and she looked warily at the figure advancing through the gloom.\n\n\"Who are you?\" She asked hoarsely.\n\n\"You don't know me but my name is Cas, I'm a friend of Shahzaman's.\"\n\n\"That doesn't look like the clothing of a rebel,\" the girl said.\n\n\"It's not. We're docked in Side. I borrowed it off one of the drunkards crewing this ship when they stopped into a tavern,\" he said.\n\nThe young soldier knelt before the cell, taking in Scheherazade's drooping eyelids and sunken cheeks.\n\n\"Haven't they fed you?\" He asked sharply.\n\n\"I was offered food and water but at a price I was not willing to pay.\"\n\nCas ran his hand over his face: \"Fucking hell...\"\n\n\"It doesn't matter,\" she murmured, eying him almost idly. \"I'm going to die anyway.\"\n\nCas unhooked the flask of water at his waist and held it to her through the bars.\n\n\"Here. Drink it slowly.\"\n\nThe girl did not stir: \"Who did you say you were?\"\n\n\"I'm Cas, I'm one of Shahzaman's men.\"\n\n\"Why are you here?\"\n\n\"I'm here to rescue you.\"\n\n\"Rescue me?\" She repeated bitterly, closing her eyes. \"A fugitive traitor?\"\n\n\"What did Shariyar tell you?\"\n\n\"Enough to know that I deserve whatever death they have planned for me.\"\n\n\"What did he tell you?\" Cas asked again measuredly.\n\n\"I saw the wanted notice,\" she said, her voice betraying none of the heartbreak she felt. \"I am a criminal.\"\n\n\"That notice does not tell the whole story.\"\n\nShe opened her eyes, looked at him thoughtfully and then cocked her head: \"What did you say your name was?\"\n\nCas sighed and sat back on his heels. The girl was delirious with hunger and thirst.\n\nHe held out the flask to her once more: \"Come, you need to drink some water. I'll see what food I can scrounge up for you. You need to eat.\"\n\nScheherazade stood up slowly, one pale hand grasping the bars of the cell to steady herself as she walked with slow, deliberate steps towards the soldier. She sank to her knees in front of him and took the flask.\n\nShe opened the cap and looked hard at the water inside.\n\n\"Why should I?\" The girl asked quietly. \"So I will have the strength to walk to my own execution?\"\n\n\"You need to drink.\"\n\nShe tipped the water out with a shrug and tossed the empty flask back through the bars.\n\n\"Go away.\"\n\n\"Scheherazade, listen to me,\" he said calmly. \"Shahzaman has gone to speak with Shariyar. They will come for you.\"\n\n\"Ha!\" The girl eyed him with derision: \"You're a fool if you think anything but death awaits Shahzaman... or me.\"\n\n\"Then I am a fool,\" he said. \"And what harm could there be in indulging a fool a little hope?\"\n\n\"Hope used to be my greatest ally,\" the girl said. \"But she has deserted me now too... and rightly so.\"\n\n\"You don't understand, Scheherazade,\" Cas said. \"You aren't who you think you are.\"\n\n\"Do you honestly expect me to believe that I am not the woman in that poster?\" She snapped, her blue eyes flashing.\n\nCas sighed, trying to come up with the right words to explain the truth of the situation.\n\n\"I've been having dreams,\" the girl said quietly. \"Dreams of places I cannot remember when I wake. But I know my feet have tread the footsteps of a memory. I know I am that woman.\"\n\nAs she spoke, she absent-mindedly fingered a silver coin woven into her locks. Cas caught sight of the trio of dolphins stamped onto its surface and smiled slightly.\n\n\"Yes, you are her. Beyond a doubt. But that woman is not a traitor. That woman gave her life to save her people from ruin at the hands of a pirate.\"\n\nHe saw the girl's eyes narrow.\n\n\"A pirate?\"\n\nCas nodded.\n\n\"What was the pirate's name?\"\n\n\"I think you know the answer to that question.\"\n\nScheherazade felt as though she could only half-understand the words he was saying. The confusion must have been evident in her expression because the soldier rose to his feet.\n\n\"I am going to get you some more water and something to eat. Then I will tell you everything I know.\"\n\nShe looked at him silently, pondering the earnest lines the creased his forehead, the pleading look that made his dark eyes shine. His square jaw was lined with stubble and curls of dark hair spilled from the neckline of his shirt. His lips were slightly parted and she could see his teeth gleaming in the lamplight. His incisors were slightly longer than the rest of his teeth and they gave him a wolfish look that set her instinctively on edge. But she also noticed that he had lines at the sides of his mouth...\n\n\"Not many soldiers wear a smile as much as your face tells me you do,\" she said finally.\n\nHis lips curved into a broad smile at her words and then he chuckled self-consciously, running a hand through his hair and down the back of his neck.\n\n\"I have been accused of being too optimistic in the face of near-certain death,\" he said. \"But, as long as I have life in my limbs, I find there is always reason to smile.\"\n\nScheherazade's own lips curled in the ghost of a smile.\n\n\"Will you promise to eat and drink some water?\"\n\nThe girl rolled her shoulders: \"Fine.\"\n\n++++++++\n\nEven with the tip of Shahzaman's sword pressing against his throat, it only took Shariyar a second or two to gather his wits. He stepped backwards and drew his own sword from its scabbard. At first, Shahzaman appeared to be holding only one sword between his hands but, when his brother drew his weapon, Shazaman pulled his hands apart to reveal the twin blades he carried.\n\n\"You look like you've seen a ghost, Shariyar,\" Shahzaman said, his tone bordering on dangerous.\n\n\"Unfortunately for you, I know that you are made of naught but flesh.\"\n\n\"I am not here to kill you. I am not here for your crown. I am not here for revenge.\"\n\n\"Then what are you here for?\" Shariyar said tersely.\n\n\"I'm here to help you save that girl.\"\n\n\"What does she have to do with you?\"\n\n\"Put down your sword, brother.\"\n\nShariyar sprung at him suddenly, his sword arcing through the air: \"Traitor!\"\n\nShahzaman swung his blades upwards to block Shariyar's sword and deflected the power of the blow, forcing him to stumble forwards.\n\nThe prince stepped back, twisting his wrists to loosen his joints as he waited for Shariyar to strike again: \"I didn't think it was possible, but your swordsmanship has gotten even worse.\"\n\nShariyar lunged at him again, fire in his eyes. Shahzaman sprang to meet his blow, both of his blades joining to act as one as he deftly fended off Shariyar's powerful strike.\n\nShariyar's attacks were forceful but they were also slow. Shahzaman was lighter on his feet and his twin swords moved more like extensions of his own arms than inanimate objects.\n\nBefore the king could launch another attack, Shahzaman was behind him, swiping at the backs of his knees with his swords. The wounds were enough to force Shariyar temporarily to his knees but not severe enough to cause lasting damage. Shahzaman made sure of that.\n\n\"I'll only tell you once more, Shariyar \u2014 put your blade down!\"\n\n\"If you think I am going to surrender without a fight then you are sorely mistaken.\"\n\n\"And if you think you are going to win this fight then you are sorely mistaken.\"\n\nShariyar growled and roared to his feet, launching another violent attack at his brother.\n\nShahzaman quickly clasped his twin blades together and used them as one to parry the strike. Shariyar moved to strike again but the prince was faster and he quickly found himself on the defensive again, sparring blow after blow from the prince's flashing swords.\n\nShariyar found enough space to draw his sword back above his head but, before he could bring it down upon Shahzaman, the prince crossed his swords and blocked Shariyar's blade in the air. The two men grunted as they strained against each other. Panic rose ever so slightly in Shariyar's eyes \u2014 just enough for Shahzaman to see. He pushed his brother's sword away with renewed strength and delivered a powerful kick to his chest. Shariyar fell backwards, his sword spinning from his hands and across the floor. He scrambled backwards as his brother approached, steel glinting in his hands and in his eyes.\n\n\"If you were a wise man, you would quit now, Shariyar.\"\n\n\"When have you ever known me to be wise?\"\n\nThe prince chuckled darkly as his brother's back met the wall: \"Nowhere to go.\"\n\nShariyar's hand went to his boot and he pulled out the dagger he concealed there.\n\nShahzaman's eyes narrowed: \"That knife belonged to our father. You dare to use it against me?\"\n\n\"I am not going to my death without a fight.\"\n\n\"I told you: I did not come here to kill you.\"\n\n\"Then why are you standing over me with a sword in each hand?\"\n\n\"Because the last time I was in your presence unarmed you did this to me!\" The prince's scarred visage twisted in rage. \"I did not come here to kill you but that does not mean that I don't want to. I am fighting against every fibre in my being right now. Every instinct I have is screaming at me to take back the pound of flesh you wrongfully stole from me.\"\n\n\"I was not wrong.\"\n\n\"You have been wrong about everything! Look at my face, brother, look at what you did to me! I am a monster because of you.\"\n\n\"I heard you talking about your lover. About how I would kill you both if I found out.\"\n\n\"I wasn't talking about Nasrin!\"\n\n\"Don't you fucking lie to me!\" Shariyar cried as he whipped the dagger at Shahzaman.\n\nThe prince dodged the blade with ease and swiped one of his own swords at Shariyar in retaliation, ensuring the steel caught just enough flesh to bite. The king winced and clutched his bleeding arm to his chest.\n\n\"I was not lying to you then and I am not lying to you now.\"\n\n\"I overheard you talking about her,\" Shariyar sneered. \"About how I would kill you both if I found out. About how you had to wait until I was gone before you could be together.\"\n\n\"It wasn't Nasrin!\"\n\nOne of Shahzaman's swords flashed again and Shariyar snarled as blood blossomed along one of his legs.\n\n\"Who else could it have been? The things you said... it had to have been her!\"\n\n\"Oh my lover has dark hair and the most beautiful eyes I have ever seen. My lover has skin like velvet and lips like honey. And my heart has ached since the day you drove us apart. You made my face monstrous. You made my existence miserable. And goddammit, whatever happens tonight, I swear on my soul that I am never letting you get between us again!\"\n\nThe prince breathed in and out deeply to calm himself. He cocked his head at his brother: \"You tried to make me tell you my lover's name. Do you remember?\"\n\nShariyar looked away.\n\nThe tip of Shahzaman's sword caught his cheek this time, leaving a thin line of red along his face.\n\n\"I asked you a question.\"\n\n\"I remember,\" Shariyar snarled, blood dripping down his jaw.\n\n\"You tortured me within an inch of my life and I still would not tell you. You made me scream the name of every god I knew, but not the one I worship.\"\n\n\"Stop speaking in riddles Shahzaman.\"\n\n\"I will speak however I fucking please.\"\n\nAnother line of red suddenly appeared on Shariyar's neck and he gasped in pain.\n\n\"Death by a thousand cuts, Shariyar, that's what you deserve.\" The prince said, smiling dangerously down on his brother.\n\n\"By my count you have nine hundred and ninety-five to go,\" he growled.\n\n\"Oh, I thought I only had nine hundred and ninety-four left,\" the prince said with a dark smile. He slashed his blade across Shariyar's chest and a grim smile played on his lips as blood stained the king's tunic.\n\n\"I thought you weren't here to kill me.\"\n\nThe prince sat down on his heels in front of Shariyar and pointed the tip of his sword at his brother's heart.\n\n\"I am here to help rescue Yanamari.\"\n\n\"What does she matter to you?\"\n\n\"If that girl dies, her whole kingdom will go to ruin. And that will mean not one more life, but several thousands more, will be ruined because of you!\"\n\nThe anger in Shariyar's eyes abated briefly: \"I did not mean to put her in danger. I thought she was a traitor. A criminal.\"\n\n\"A mistake you have made before.\"\n\nAnd, just like that, the fire returned to Shariyar's eyes.\n\n\"If you weren't fucking Nasrin then who were you fucking? If you are so innocent in all of this then why wouldn't you tell me her name?\"\n\nA knock sounded suddenly on the door and, before either man could answer, Jafar pushed into the room.\n\n\"Jafar, help \u2014\"\n\nBut before the king could finish his sentence, Shahzaman put some weight against his sword and Shariyar gasped as the blade broke the skin.\n\n\"Close the door, Jafar,\" Shahzaman ordered quietly.\n\nThe vizier's green eyes were wide as he took in the blade pressed dangerously against Shariyar's chest. He pushed his back against the door and the lock clicked shut behind him.\n\n\"Good. Now come here.\"\n\nJafar looked at Shahzaman sharply but did as he was commanded. He stopped in front of the prince and looked at him expectantly.\n\n\"Take off your belt,\" he ordered.\n\nJafar's brow furrowed.\n\n\"Do it,\" the prince said, rising to his feet.\n\nThe vizier unbuckled the clasp of his belt and slowly pulled it free.\n\n\"Would you be so kind as to bind Shariyar's hands for me?\"\n\nJafar walked towards the king and bent down before him. Shariyar held up his wrists out, his eyes shooting daggers at Shahzaman the whole time.\n\n\"Make sure it's tight.\"\n\nThe vizier wrapped the leather around Shariyar's wrists and buckled it securely in place. He stood up and looked at Shahzaman expectantly.\n\nThe prince chuckled as he moved his sword away from Shariyar's chest and instead pointed it at Jafar.\n\n\"Don't hurt him,\" the king growled.\n\n\"Come here, Jafar,\" the prince said, taking a step backwards. He sheathed his spare sword and beckoned the vizier closer.",
        "Jafar followed the prince's orders slowly. Shahzaman dropped the sword for an instant and pulled Jafar against him, pressing the blade against his throat.\n\n\"Ask me again, brother,\" he said, his eyes glinting over Jafar's shoulder.\n\n\"Don't hurt him.\"\n\n\"Why not? Didn't you threaten to kill him yourself?\"\n\n\"How do you know that?\"\n\n\"Didn't you threaten to hang him if he didn't bring you another girl to murder?\"\n\n\"Who told you that?\"\n\nShahzaman pressed himself against Jafar's back. The vizier could feel his breath hot against the back of his neck.\n\n\"My lover told me.\"\n\n\"Who is she?\" Shariyar snarled. \"I swear to god if I have to kill every maid in this palace to get to her, I will!\"\n\nThe prince shrugged and pushed himself against Jafar harder. The vizier had to steel himself from smiling.\n\n\"Tell him, Shahzaman,\" he whispered.\n\n\"I'll tell him when I'm good and ready,\" he murmured in the vizier's ear.\n\nHe glanced over the vizier's shoulder at his brother, his eyes wicked: \"Or, maybe, he will figure it out for himself.\"\n\nShariyar's dark brows knitted together: \"I don't understand. What's going on?\"\n\nShahzaman smiled and sheathed his sword, spinning Jafar around with a hand around his waist. He held the vizier's hands in his and ran his thumbs gently over his knuckles before planting a kiss on the back of each hand.\n\nShariyar's mouth fell open.\n\nIt was a few moments before he could form a response but, when he did, his first emotion was anger.\n\n\"Jafar, you son of a bitch! You were spying for him?\"\n\nShahzaman pushed in front of Jafar. His sword struck again, this time leaving another great slash across Shariyar's chest: \"Don't you dare speak to him that way! Do you have any idea what he has sacrificed for you?\"\n\nThe king cried out and pressed his bound hands to the stinging wound. He snarled at them both like a wild animal, his eyes fierce and his lips trembling with anger.\n\n\"How long have you been plotting against me you traitorous bastard?\"\n\nShahzaman smiled grimly as he swiped the razor-sharp edge of his blade along Shariyar's leg: \"I warned you not to speak to him like that.\"\n\n\"I will speak to him however I damn well please!\" Shariyar gasped.\n\nA fresh wound appeared across his forearm and Shariyar roared. Shahzaman pressed the tip of his sword against Shariyar's throat: \"No you will not. You will speak when I allow you to. And, for now, you will shut up and listen.\"\n\nJafar stepped forward, gently pushing Shahzaman's sword away. His green eyes were defiant as he knelt down in front of the king.\n\n\"Everything we did was protect you from yourself, Shariyar.\"\n\n\"Fuck you,\" the king spat. \"I swear to god I will kill you both.\"\n\n\"I have never betrayed you. I would have gone with Shahzaman if he hadn't begged me to stay with you and keep watch over you. He is the only reason your grief and anger haven't cost you your kingdom.\"\n\n\"I should have killed you when I had the chance! Before you brought that wretched girl back from \u2014\"\n\nJafar jumped to his feet as Shahzaman slashed at his brother again, his sword slicing across the king's right bicep.\n\n\"Fuck!\" Shariyar cried out. \"Fuck!\"\n\nHe rocked back and forth, staring at the blood blossoming across his arm.\n\n\"Fuck, I \u2014\" He growled. \"I'm sorry. I \u2014 I'm sorry.\"\n\n\"You fucking should be!\" Shahzaman hissed. \"After everything we have done for you!\"\n\n\"Shariyar, listen to me,\" Jafar said, interrupting him to kneel in front of the king again. \"Those women you sent to die? Shahzaman saved every single one of them. They are safe. That is the only reason their relatives didn't band together to topple you from your throne.\"\n\nShariyar's amber eyes widened: \"What?\"\n\nShahzaman tapped Jafar's shoulder and helped him to his feet.<br >\n\nHe glanced at his brother and pulled Jafar tightly against him: \"Now you see why I couldn't tell you who my lover was.\"\n\n\"Why?\" He asked, when he was finally able to summon words to his mouth. \"Why would either of you seek to save me, after all I have done to you?\"\n\n\"Because I remember the man you used to me, and I want my brother back,\" Shahzaman said. \"I used to be every bit the man you are now but I changed. And, if I can change, so can you.\"\n\nHot tears appeared in Shariyar's eyes: \"You do seem changed.\"\n\n\"I am,\" Shahzaman murmured in agreement, running a finger along Jafar's jaw. \"I hated myself for a long time because I could not understand the things I felt. It was easier to be numb, easier to keep everyone at a distance.\"\n\n\"I know the feeling well,\" the king whispered.\n\n\"Then you know what you have to do to fix this and, since you can't change what was done to me, you need to do whatever it takes to right your wrongs against Yanamari. No matter the cost.\"\n\nShariyar nodded and then murmured: \"I'm so sorry.\"\n\n\"I know,\" Shahzaman said. \"But there is no time for apologies now. You must send a falcon to Gades to try to head the ship off before it leaves the mainland. Order them to turn back. I have a man on his way to Side intercept the Raja there and ensure Yanamari's safety during the voyage until we can meet them at Gades.\"\n\n\"Who did you send?\" Jafar interjected.\n\n\"Cas volunteered.\"\n\n\"Of course he did,\" the vizier chuckled.\n\n\"So what is the plan, exactly?\" Shariyar asked impatiently, wincing as he wiped the blood from his cheek with his shoulder.\n\n\"The falcon should arrive in time to intercept the ship at Gades but, if it doesn't, Cas is under instructions to do whatever it takes to get that girl off the ship before she ends up in Ekaitz's clutches.\"\n\n\"Then we should leave now,\" Shariyar said, scrambling to his feet. \"There is not a moment to lose!\"\n\n\"I, too, am impatient but we cannot leave yet,\" Shahzaman said, holding up his hand to stop his brother in his tracks, \"You have to organise supplies for this mission and you might want to see Hazim about those scratches...\"\n\n\"Yes, yes, of course,\" Shariyar mumbled. He held up his wrists to Jafar: \"Can you untie me now?\"\n\nThe vizier glanced at Shahzaman and, at the prince's nod, loosened his belt from around the king's hands.\n\nShariyar strode towards the door but, when he heard no movement behind him, turned around: \"Well, aren't you two coming?\"\n\n\"I'm afraid we have something very important to do first,\" Shahzaman said, pulling Jafar into a deep kiss by the back of his neck.\n\n++++++++\n\nCas slipped into the galley quietly to gather some hardtack and salted fish that wouldn't be missed before disappearing back into the bowels of the ship. When he opened the hatch again, the girl did not even stir. He jumped down the last flight of steps and rushed across the deck, banging his fists against the metal bars.\n\n\"Scheherazade! Can you hear me? Open your eyes!\"\n\n\"Shhh \u2014 don't interrupt my dreams. They are all I have,\" she sighed, her eyes still closed.\n\nHe breathed a sigh of relief and knelt down.\n\n\"Come, eat. You're starved.\"\n\nThe girl grudgingly opened her eyes and stared scornfully at the bundle of pilfered food that the soldier held out to her.\n\n\"You better be telling me something true and worthwhile,\" she grumbled. \"Because if you've tricked me just so I'll survive long enough for them to hang me \u2014\"\n\n\"I have no intention of letting anyone hang you,\" Cas said. \"Now, please, you need to eat.\"\n\nShe sighed and roused her weary limbs, slowly making her way across the cell. She whispered a quiet \"thank you\" as she took the food from him. Cas shook his head incredulously \u2014 her will to live had been dampened but apparently she still had manners.\n\n\"Mind you, go slowly.\"\n\nScheherazade returned to her seat and took a sip from the flask. Her mouth ached at how sweet the water tasted after so much time without.\n\nCas watched as she drank the water, admiring her discipline and restraint. He had given that same order to many a hungry, thirsty soldier and precious few had heeded him.\n\nShe noticed his dark eyes fixed on her and nodded at him: \"You promised me a story.\"\n\n\"That I did,\" he said with a soft smile.\n\n\"As I said before, the wanted notice Shariyar received does not tell the whole story. A few weeks ago, myself, Shahzaman and the rest of our band of exiles encountered a group of Irlazken bounty hunters in the desert. They were each carrying a copy of that same wanted notice. They had been sent by King Ekaitz himself to track the girl down. The notice emphasised that the girl was to be taken alive but, apparently, Ekaitz told his mercenaries that he didn't care what state she was in, so long as she was found.\"\n\nThe girl nodded, chewing slowly.\n\n\"A long time ago, Shariyar was engaged to a young princess but the betrothal was cancelled.\"\n\n\"He fell in love with Nasrin.\"\n\n\"No, this was long before he met her,\" Cas said. \"He was just a young man at the time and he only heard of the betrothal by chance. When nothing ever came of it, he forgot about it. The betrothal was to the youngest princess of Irlazken, a young woman named Yanamari.\"\n\nScheherazade felt her stomach churn at the mention of the name and, even though she said nothing, Cas raised a dark brow in her direction.\n\n\"Do you recognise that name?\"\n\n\"Should I?\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"She was kidnapped by Zigor and held for ransom. The amount he demanded would have crippled the Irlazken kingdom. But King Mikolas would have paid every cent of it.\"\n\n\"Mikolas?\" She whispered breathlessly, sitting up straighter.\n\nThe pirate's cruel taunt echoed in her mind: Do you think Mikolas would want you back now? \n\n\"The late king,\" he explained. \"He would have paid it but for a letter he received from his daughter. When Zigor demanded she write to her father and beg him to give in to the pirate's demands, Yanamari enclosed a secret message and told him not to. She sacrificed herself for the good of her people.\"\n\n\"I don't understand.\"\n\n\"The King came up with a ruse to ensure that Zigor's plan would fail \u2014 he denounced his own daughter as a traitor.\"\n\n\"Then... the woman on the poster...\"\n\n\"Is Yanamari, the lost princess of Irlazken.\"\n\nScheherazade suddenly felt as if the bars of her cell were closing in on her.\n\nCas watched as the girl's eyes grew wide and her chest began to rise and fall quickly. She clapped a hand over her mouth and her whole body swayed.\n\n\"Breathe, Scheherazade, just breathe,\" Cas said firmly. \"In, now \u2014 two, three \u2014 out. In \u2014 two, three \u2014 out...\"\n\nSlowly the girl's breathing returned to normal and she unclenched her fingers but her sapphire eyes were still wild.\n\n\"I \u2014 I just can't believe it,\" she whispered.\n\n\"Is any of this familiar to you at all?\"\n\n\"The name Mikolas,\" she admitted. \"I remembered his name but not who he was. The pirate... he said that Mikolas would never want me back after all that he had done to me.\"\n\nShe said the words quickly and without emotion, anxious to rid her tongue of them.\n\n\"That's not true. Your father's last command was that his men never stop searching for you.\"\n\n\"My father,\" she murmured. \"Do you truly believe that I could be her?\"\n\n\"You said yourself: without a doubt, you are the woman from that wanted notice,\" Cas said. \"And that woman is a princess.\"\n\nScheherazade still looked on the verge of fainting but she swallowed and pulled her spine straighter.\n\n\"But her father \u2014 my father \u2014 is dead?\"\n\n\"I'm afraid so.\"\n\n\"Does she, I mean, do I have any more family?\n\nThe soldier shook his head sadly: \"Your mother died shortly after giving birth to you and your sister has also since passed.\"\n\n\"Then Shariyar was right when he said there would be no one to mourn me or miss me,\" she said with a bitter sigh. \"I finally know where I am from, who I am, and there is no one there waiting for me.\"\n\n\"Unfortunately, that is not quite true,\" Cas said gravely.\n\nShe glanced at him quizzically before her eyes narrowed: \"The king...\"\n\nCas nodded: \"Ekaitz. He was a soldier in your father's navy and he moved through the ranks quickly. Probably by bribing or blackmailing his superiors. Eventually he attained a high enough rank to be included in royal functions. I assume that is how he met your sister. It did not take long for him to marry her. It took less time for her to wind up dead.\"\n\n\"He killed her?\"\n\n\"And your father too, if the rumours are true.\"\n\nScheherazade felt a chill run down her spine but she could not grieve, she was in disbelief. She still could not grasp the fact that the young woman at the centre of this story was her.\n\nSlowly the pieces were coming together in her mind: \"He was the one who wrote to Shariyar with the notice...\"\n\n\"Conveniently omitting the truth, apparently.\"\n\n\"Then I am being sent to die.\"\n\n\"You are. But not because you are a traitor \u2014 because you are the rightful heir to that throne and you are a threat.\"\n\n\"Look at me, I not much of a threat.\"\n\nCas was about to speak when, suddenly, he paused and his eyes flashed to the trapdoor at the top of the stairs. He glanced at Scheherazade but she had heard the noise as well and was already backing away from the bars of the cell. She pushed the last bites of food into her mouth and swallowed hard. Cas held a finger to his lips and then slipped into the shadows.\n\n\"Are you sleeping, whore? Wake up. Wake the fuck up.\"\n\nScheherazade shuddered at the sound of the sailor's voice and watched as his boots came slowly down the staircase. At first she wondered if the sailor was trying to be ominous but, when his heel missed a step and he staggered downwards, she realised it was because he was drunk. He landed hard on the deck and growled angrily, splashing the water with his fist as if it were to blame for his fall. He grabbed onto the bars of the cell to pull himself to his feet and leered at her with bloodshot eyes.\n\n\"C'mere, you fucking whore,\" he muttered. \"Come on.\"\n\nShe stared back at him, silent and unmoving. <br >\n\nHe snarled and began fumbling in his pocket for the key to the cell.\n\nCas heard the jingle of metal and stepped forward from his hiding spot. He moved through the water silently until he was behind the sailor and then said: \"What are you doing?\"<br >\n\nThe sailor spun around with a startled cry and then, seeing Cas' uniform, sneered and spat into the water.<br >\n\n\"The fuck does it look like? You can have her when I'm done.\"<br >\n\nCas' hand was around his throat before he even had the chance to turn around.<br >\n\nThe sailor dropped the set of keys and tried to pry Cas' fingers from his neck. With a mixture of relief and fear, Scheherazade suddenly realised how much stronger and bigger Cas was than the sailor. Even if he were sober, it would hardly have been a fair fight. Cas barely seemed to need any effort to send the sailors head into the metal bars with a hollow thud. The soldier could not cry out but he let a strangled gasp for air. Cas slammed the back of his head into the bars again. And again. And again. Until, finally, he let go and the sailor crumbled to the ground, his nose just above the water.<br >\n\n\"You might not want to see this,\" Cas said grimly.\n\nScheherazade looked up at him but his words came through as mere echoes. Before she had a chance to avert her eyes, Cas picked up his foot and brought it down on the man's neck, the crack of his larynx muffled mercifully by the splash of water. <br >\n\nScheherazade sat down heavily on the wooden crate and watched as Cas kicked the man's body to the side and fished the keys out of the water. He tossed them briefly in the air and caught them in his fist, his lips curving in a dour smile.\n\n\"Well, at least that bastard was good for something. Now we don't have to go hunting for a way to get you out of this cell.\"\n\nScheherazade's wide eyes were still fixed on the corpse.<br >\n\nCas moved to block her gaze and knelt down to meet her eyes: \"I'm sorry, my lady, but it had to be done.\"\n\n\"I know,\" she whispered. Then, after a pause: \"I cannot say that he did not deserve it.\"\n\nShe winced as the ink on her arms smarted sharply.<br >\n\nHis eyes filled with concern: \"What's wrong, are you hurt?\"<br >\n\n\"No. It was a warning. These tattoos... I cannot hate him for what he did. I can't hate any of them.\"\n\n<br >\"I don't understand.\"\n\n\"The spell that saved my life came with a cost. How am I supposed to fight? How? When I cannot even be angry at the men who did these things to me? These fucking tattoos won't let me!\"\n\nAs soon as the angry words left her lips, the girl fell backwards into the water, convulsing from the pain that suddenly radiated from her tattoos. Not even the frigid, fetid water could cool the burning ink.\n\nCas watched in horror as the spell took its toll on her. He tried to reach for her through the bars but he could not touch her. After what seemed like an eternity the tremors gradually ceased and she pulled herself to her knees and crawled towards the soldier.\n\nShe leaned her body against the cell, resting her arms on the bars and looking up at him sadly from between them.\n\n\"I have been used mercilessly as a tool for revenge since I can remember and, apparently, even before that. And I cannot be angry about it. I am forced to always see the good in people, even the monsters who stole my life from me. I cannot hate the pirate. I cannot hate Shariyar. I cannot hate Ekaitz.\"\n\nCas sighed and hung his head.\n\n\"There are people who need anger and hate to fight. They cannot find it in their hearts to kill unless they rid themselves of those most basic human instincts \u2014 love, compassion, mercy,\" he said quietly. \"We are different.\"\n\n\"We?\"\n\n\"Yes,\" he said firmly. \"I do not fight so that I can kill or conquer. I fight to protect what I love.\"\n\nHe could see the scepticism in her eyes.\n\n\"I have never fought a battle I did not believe in and I would rather die than do so. I fight because I love my country and my kinsmen. You have to fight for your life, not out of hate for those who have done you wrong, but out of love for yourself. You are worth fighting for, my lady.\"\n\n\"Do you really believe that?\" She asked. \"Do you really think that I have value, even after all that has been done to me?\"\n\n\"I am but a simple soldier,\" he replied, his lips curving into his characteristic broad smile once again. \"But even I know that gold does not lose its value simply because it has been melted down.\"\n\n\"That is true.\"\n\n\"And even if you still don't believe that you are worth fighting for, then surely you can agree that your country and your people are worth fighting for. Surely you know that, or you would not have traded your life to Zigor in the first place.\"\n\n\"True again,\" she whispered.\n\n\"And here is one more truth \u2014 we have to get you off this boat before it reaches Irlazken.\"\n\n\"Will Shahzaman succeed?\" She asked. \"Do you think he will get through to Shariyar?\"\n\n\"I hope so,\" he sighed.\n\n\"But,\" he continued, \"if this cretin returned to the ship then the others may not be far on his heels and I need to get rid of him.\"<br >\n\nScheherazade watched him heave the lifeless corpse over his shoulder without so much as a grunt.<br >\n\nHe made to ascend the stairs and then paused. He steadied his balance and then reached into his pocket with one hand and pulled out the keys. He motioned for her to catch them and then tossed them through the bars. <br >\n\nScheherazade caught them lightly in her fist.\n\n\"I'll be back when I can,\" Cas said as he climbed the stairs.\n\n\"Thank you, Cas,\" she murmured. \"For the food, the water... everything.\"\n\n\"I am but a simple soldier,\" he said again. \"But even I can recognise a heart of gold when I see one.\"\n\n\"You do not seem like a simple soldier to me,\" she said.\n\nIt was funny... His wolfish teeth did not seem the least bit threatening when he bared them in a broad grin.\n\n\"So, what can I call you?\" He asked.\n\nHer brow furrowed again.\n\n\"I can't recall ever being anyone other than Scheherazade,\" she said.",
        "\"Perhaps 'wild waves'?\" He asked, a smile curving his mouth. \"That is what Shahzaman calls you. Or perhaps it is time you get used to the name 'Yanamari'.\"\n\n\"Perhaps...\" She whispered. \"It just that it means nothing to me. It is the name of someone I do not know.\"\n\n\"You will come to know her again,\" he said. \"I see a princess when I look at you.\"\n\nThen, without another word, he disappeared through the trapdoor. The door fell closed with a thud and darkness swallowed her once again.\n\n++++++++\n\nShariyar looked around at the motley crew surrounding him. The sun had not yet breached the morning clouds but the ship was already well on its way to Gades.\n\nHe had trouble keeping his eyes from lingering on Jafar and Shahzaman. They were leaned against the deck rail, their shoulders just touching. The two men seemed to be laughing constantly, their banter never loud enough to be heard but their happiness unmistakable.\n\nHe stalked across the deck to join them: \"You two seem to be having the time of your lives.\"\n\nJafar glanced over at the king and rolled his shoulders as he stood up straight: \"Well, forgive us for finding pleasure in each other's company.\"\n\n\"We don't know that we will be able to succeed in rescuing Schehera \u2014 I mean, Yanamari \u2014 let alone return her to her throne. And yet, you two are acting as if you're on your honeymoon.\"\n\n\"Stop bitching, Shariyar,\" the prince sneered. \"You are finally doing something right. Everyone on this ship is united to help you. Jafar has finally relaxed a bit. What are you complaining about?\"\n\n\"I'm nervous,\" he said. \"I want to know that she is safe.\"\n\nJafar threw a glance his way that was harsher than he had intended.\n\n\"I know, I know,\" the king growled. \"After all I did to her I have no right to be concerned for her.\"\n\nJafar relented and offered him a soft smile: \"If I know Cas, he is aboard that ship right now, making sure she is safe.\"\n\n++++++++\n\nCas passed the meagre portion of rations through the bars with an apologetic glance: \"It's not much but, if it makes you feel better, it's all we received from the galley too.\"\n\n\"You will not hear me complain,\" Scheherazade said, reaching out for the food gratefully.\n\n\"No, I don't think I've heard you complain once,\" he said, tucking into his own rations. \"But I'll do it if you won't. It's absolute shit and it's a wonder Shariyar has a navy left if this is what he's feeding them. Used to be a hell of a lot better when I was a sailor.\"\n\n\"You were a sailor?\"\n\n\"I have played almost every role that exists within the Persian army.\"\n\nShe saw the way his chest puffed slightly with pride at that statement.\n\n\"Did you always want to be a soldier?\"\n\n\"No but I didn't have much of a choice after my parents passed away,\" he said matter-of-factly. \"My father was a commander in the army so they looked after me. I grew up in the barracks and on the ships. I met Shahzaman when he started his military training and he took me on as part of his personal guard. I consider him a brother. I thought of Shariyar that way too until...\"\n\nThe soldier paused and his expression grew hard: \"That man has a lot to answer for. For what he did to Shahzaman and to you. For what he tried to do to those women.\"\n\nScheherazade kept silent, watching closely as a cloud passed over the soldier's countenance. Then he shook his head and brushed the darkness aside with a sweep of one of his broad hands.\n\n\"But my story is not the one we need to discuss. I'm not scheduled for a watch so we have time.\"\n\n\"Can you tell me more about where I come from? About my family?\" She asked.\n\n\"I hope so,\" he said. \"Tell me what you know of Irlazken.\"\n\n\"I know that it is the westernmost kingdom in the known world.\"\n\n\"Exactly right. And, though Irlazken may be a small nation, their seamen are the best in the world and their boats are supposed to be unsinkable.\"\n\n\"The turtle who created the world taught them.\"\n\nThe words came out of her mouth unbidden. She looked at him with a peculiar expression on her face.\n\n\"I don't know how I know that.\"\n\n\"I've heard that legend from many an Irlazken,\" the soldier said with a smile. \"You probably heard it from birth.\"\n\n\"Go on,\" she murmured.\n\n\"The royal family has two palaces \u2014 one at the highest, most western peak of the island, and a smaller summer palace on the far side of the country, closer to the mainland. You were kidnapped from the summer palace. No one had ever attempted a raid on an Irlazken palace before and, besides, you weren't supposed to be there at all, much less on your own.\"\n\n\"What happened?\"\n\n\"There was an outbreak of sickness in the castle and you became very ill. They sent you to the summer palace in the hopes that the climate would aid in your recovery. Your family was supposed to join you but, for at least a fortnight, you were the only member of the royal family there.\"\n\n\"So there was less protection?\"\n\n\"I assume so,\" he said.\n\n\"And you are certain Ekaitz killed the princess and the king?\"\n\n\"No,\" he admitted. \"But all the intelligence we have gathered points in that direction. Ministers sent by King Mikolas to find you were assassinated and mercenaries were sent to with orders to bring you back alive if they had to, but dead if they could. If he meant to welcome you back into the palace with open arms, I doubt these are the measures he would have taken.\"\n\n\"What was the princess \u2014 my sister's \u2014 name?\" She asked after a moment.\n\n\"Stellamaris,\" he said.\n\n\"That's a beautiful name,\" she whispered. \"I wish it meant more to me. But I cannot remember. How terrible is that? I cannot remember my own family.\"\n\n\"I am sorry,\" he said, knowing his words could do little to help ease her pain.\n\n\"Tell me,\" Cas said suddenly, \"when people ask you where you are from, what do you tell them?\"\n\n\"That I am from the sea,\" she said with a shrug. \"Seems just as likely a place as any.\"\n\n\"That's not by chance. That is something you remember,\" he said. \"That is how Irlazkens always answer when asked that question. They know their past, present and future are intrinsically linked to the sea. They always say that that is where they come from. And that coin in your hair, that is Irlazken too. It is customary for the Irlazkens to wear a coin in their hair, or as a piece of jewellery. It was originally to pay for the funeral in case one happened to drown but now it is more of a general custom. There are some things that never left you, some things that not even a pirate can steal.\"\n\nShe smiled at him and he could see her posture straighten a bit.\n\n\"So, what is Shahzaman's plan?\"\n\n\"Well, when the ship arrives at Gades, there should be a falcon from Shariyar waiting for the captain telling him not to disembark until the King's convoy arrives.\"\n\n\"And then where will we go?\"\n\n\"Oh, we are going to Irlazken,\" he said. \"We are going to knock that murderer off the throne and restore your birthright.\"\n\n\"With what army to back us?\" She asked.\n\n\"You have a band of elderly royal ministers, a crew of motley exiles, their scarred leader and his lover, and \u2014 hopefully \u2014 a mostly sober King of Kings.\"\n\n\"So I'm doomed?\" She asked, throwing him a mocking half-smile.\n\n\"On the contrary, I don't think you could ask for better odds.\"\n\n\"What is it you said you had been accused of again?\"\n\n\"Being too optimistic in the face of near-certain death,\" he grinned. \"Shahzaman knows there is nothing I like better than a slim chance of success and a great deal of danger.\"\n\n\"This is a joke to you?\"\n\n\"No, princess, this is the most serious of circumstances,\" he said. \"I just find that Fate tends to favour the bold and she seems to have a wicked sense of humour.\"\n\n\"You seem to speak nothing but truths,\" she sighed. \"Though I wish you wouldn't call me princess.\"\n\n\"Then tell me what name to call you and I will use none other,\" he said.\n\nThe girl thought for a moment and fingered the coin in her hair.\n\n\"I suppose if I am to reclaim a throne I cannot remember, then I had better start getting used to my real name.\"\n\n\"Yanamari it is then.\"\n\nHe tore off a piece of bread and grimaced as he chewed: \"I never thought I would miss the taste of snake.\"\n\nShe chuckled and shook her head: \"So, how close are we to Gades?\"\n\n\"Two more nights and we should have sight of land by the following morning.\"\n\n\"What if the falcon isn't there?\"\n\n\"Then we will need to get off this ship.\"\n\n\"How are we going to do that?\"\n\n\"Carefully,\" he said, grinning without realising it.\n\nYanamari laughed: \"You really do live for the thrill of danger, don't you?\"\n\nCas chuckled and, as was his habit when he felt abashed, ran a hand through his hair and down the back of his neck.\n\n\"Perhaps but I promise you that I am not a reckless man,\" he said. \"I will do everything I can to make sure you get off this ship in one piece. Do you have any skill with a sword?\"\n\nYanamari shrugged.\n\nCas set his empty plate down on the step behind them and stood up, pulling his blade from its sheath and holding the hilt towards her.\n\n\"Only one way to find out.\"\n\nYanamari rose to her feet and grasped the hilt, positioning herself instinctively in an offensive position.\n\n\"Seems the answer is 'yes',\" he said with a smile. \"Now, attack.\"\n\n\"But you are unarmed.\"\n\n\"Just show me what you know.\"\n\nYanamari furrowed her brow and then thrust the sword at Car, water splashing around her feet as she drove the blade towards him again and again with slow, measured movements. She backed him further and further into the darkness of the brig until she could hardly see.\n\n\"Alright, alright,\" he said finally, beckoning for the sword. \"Your turn to be on the defensive.\"\n\nYanamari smiled to herself and handed the blade back to Cas. He nodded at her and she held up an imaginary sword as if to block his weapon. By the time he had forced her back to the stairs, she was beaming.\n\n\"I can't believe it!\" She said, looking at her hands with wonder. \"I remember something!\"\n\n\"Once trained, I find our muscles do not forget so easily. Swordplay is taught to every Irlazken, archery too. I am sure you are equally skilled with a bow.\"\n\n\"Ha! I doubt that.\"\n\n\"You shouldn't.\"\n\n\"I wish I believed in myself as much as you seem to.\"\n\n\"Soon, my lady, soon.\"\n\n\"Now,\" he said, holding the hilt out to her. \"Again.\"\n\n++++++++\n\nShariyar tossed and turned in his bunk. Sleep eluded him yet again. He sighed and sat up, glancing around the empty cabin. He rubbed his eyes and got up, pulling his boots on and staggering out into the moonlight. He nodded at the captain and then sat down heavily, staring up at the night sky.\n\n\"Get up.\"\n\nShariyar glanced up at the sudden sound of Jafar's voice. He hadn't even noticed his friend's approach.\n\n\"What are you doing awake at this hour?\"\n\n\"I have no idea. I should be asleep in my lover's arms. Instead, I'm out here wondering why you're feeling so sorry for yourself.\"\n\n\"Leave me be.\"\n\n\"Look, there's no use sitting there fighting with yourself,\" Jafar said with a sigh. He extended a sword to Shariyar. \"Get up, take up your weapon.\"\n\nShariyar sighed but accepted the sword. He stood up and rolled his shoulders to stretch his muscles..\n\nJafar took up a defensive position: \"What is bothering you?\"\n\n\"Schehera-- I mean, Yanamari,\" Shariyar snarled, lunging at his friend.\n\n\"Why?\" Jafar asked, parrying the blow and setting the king up for another strike.\n\n\"For once, I thought I was doing the right thing.\"\n\n\"You can't blame yourself for that,\" Jafar said, spinning on his heel to dodge his friend's sword. \"You were acting on the information you had.\"\n\n\"I told her I loved her.\"\n\n\"You did what?\" Jafar cried. This time, their swords met with a spark.\n\n\"I told her I loved her! I wanted her to stay with me \u2014\" Shariyar grunted as he dodged Jafar's attacking sword.\n\n\"So you promised her the world and then threw her to the wolves?\"\n\n\"I thought she had lied to me!\"\n\n\"You're a real piece of work, you know that?\" Jafar hissed. \"One second she's the love of your life, the next she's nothing more than another treacherous whore.\"\n\n\"What would you have had me do?\" Shariyar growled, his sword arcing behind his head.\n\n\"If you truly loved her, you would have trusted her! That's what I did when I woke up to the news that Shahzaman had been exiled as a traitor!\"\n\n\"How can you expect me to trust any woman? After what has been done to me?\" Another shower of sparks as their blades met.\n\n\"How can you expect her to trust any man, after all that has been done to her?\" Jafar countered angrily, his sword flashing in the moonlight.\n\nShariyar grunted as he fought off the vizier's powerful attacks.\n\n\"So let's say we do get there in time to save her, what exactly are you expecting her to do when she sees you? Fall into your arms?\"\n\n\"I don't know!\"\n\n\"What if she never wants to see you again? Have you considered that?\"\n\n\"I don't want to think about it.\"\n\n\"You have to! Because, if we get there and she refuses you \u2014\"\n\n\"She was my betrothed - is my betrothed! Don't I have a right to her?\" Shariyar asked, his emotions overpowering his instincts so that his sword fell slightly.\n\nJafar swore under his breath and swung his sword at Shariyar, barely giving the king the chance to react.\n\n\"You. Know. Damn. Well. The. Answer. To. That. Question!\" Jafar punctuated each word with his sword.\n\nShariyar stumbled backwards, blocking blow after blow until he finally found his footing and was able to strike back. Jafar ducked beneath Shariyar's gleaming blade and countered the attack.\n\n\"But I love her!\"\n\n\"That doesn't matter!\"\n\nWith a decisive blow, Jafar knocked the sword from the king's hand. Shariyar sunk to his knees, breathing heavily.\n\n\"I would give my kingdom to hold her again... Shouldn't that be enough?\" His amber eyes were pleading.\n\n\"What would Nasrin have to give for you to forgive her?\"\n\n\"I'm not her. I've changed.\"\n\n\"What would Nasrin have to give for you to forgive her?\" Jafar repeated sternly.\n\n\"There is nothing she could give,\" Shariyar said, slumping backwards. \"So it is hopeless.\"\n\n\"I didn't say that. I just don't want you to expect her to fall into your arms if we do find her. You have no power over her anymore.\"\n\n\"I know... but I wish I did. It's selfish, I know... but I wish I could go back in time to when she was all mine.\"\n\n\"What would you do differently?\"\n\n\"I don't know.\"\n\n\"Do you really love her?\"\n\n\"Yes. I mean, I think I do \u2014\" The king paused. \"I never wanted to be in love again. Not after Nasrin. But she made me feel that there was hope for me. That I wasn't too far gone. I loved her when I thought she was just a slave and, now, to find out that she is not just a princess but the princess that was promised to me all those years ago...\"\n\nJafar sighed and sat down by Shariyar's side, letting his legs splay out in front of him as he stared up at the stars.\n\n\"She's still the same girl I found washed up on the beach. Just because we know who she is doesn't change any of the things that have happened to her.\"\n\n\"She actually said she might be able to learn to love me. After all I had done for her \u2014 and, a few hours later, I sent her to her death.\"\n\n\"You have to channel the guilt you feel into helping her. You cannot fall into despair, not when she needs you most.\"\n\nShariyar nodded and threw him a somewhat sheepish glance: \"Thank you, Jafar.\"\n\n\"You're welcome,\" he replied.\n\n\"You're a better swordsman than I recall.\"\n\n\"I don't think it's me who has gotten better,\" Jafar said, climbing to his feet. \"Again.\"\n\n++++++++\n\nFor Yanamari, the days between Side and Gades seemed to drag on endlessly. In the silence of the brig, she had nothing but her own thoughts to keep her company between Cas' visits at the start and end of each day. And her thoughts were hardly comforting... She kept thinking about how different things could be if Shariyar had simply trusted her the way he had said he did. And, when she wasn't ruminating over the king's betrayal, she was thinking about Ekaitz and the fate that awaited her if she ever made it to Irlazken. Doubt filled her mind whenever she thought about Irlazken. There was a part of her mind that refused to believe she could actually be royalty. That, indeed, she had done nothing to deserve the hands fate had dealt her.\n\nFinally, she heard a bolt slide and the trapdoor to the brig opened. Cas climbed down the steps, a plate of food in each hand.\n\nScheherazade pushed the cell door open and sat down on one of the lower steps. The soldier sat down beside her and passed her one of the plates.\n\n\"If the wind holds, we should be in Gades by the morning.\"\n\nShe nodded and the pair sat in silence as they ate. They both knew what was at stake if the falcon was not waiting.\n\n\"The falcon will be there,\" Cas said, trying his best to exude more confidence in his statement than he truly felt.\n\n\"I hope so,\" she said with a shiver. \"My stomach ties itself in knots whenever I think about Ekaitz.\"\n\n\"He is a piece of work,\" Cas said grimly.\n\nYanamari glanced his way: \"You've met him?\"\n\n\"Yes, back when he was just a captain in the Irlazken navy,\" Cas recalled. \"He was always too big for his boots. But a lot of men are like that, especially when they deem themselves destined for great things. Ekaitz was a capable seaman, to my memory, but not good enough to have climbed the ranks so fast on sheer merit. He is ruthlessly ambitious... the kind of man who will let nothing and no one stand in his way.\"\n\n\"That's hardly comforting,\" Yanamari said drily.\n\n\"No, it's not. But it is important to know your enemy.\"\n\nYanamari nodded for him to continue.\n\n\"After Zigor kidnapped you, the mission of the Irlazken navy became focused on a single mission \u2014 to rid the seas of pirates. This lofty goal was in the interest of the Persian empire as well so a number of ships were sent to offer support to the mission. At one point, the ship I was on happened to come across an Irlazken vessel in the middle of battle with a pirate. We immediately joined the attack and I met Ekaitz in the throws of battle. He may not have been an exceptionally skilled fighter but whatever he lacked in grace he made up for in sheer savagery. But that wasn't what bothered me about him... savagery is almost a requirement in battle, after all. It was what he did after the battle was won that bothered me. Our orders were to bring any surviving pirates back to Irlazken for trial but Ekaitz did not care to waste the energy and resources it would require to do so. So he brought all the survivors on deck and told them to fight each other, swearing that the winner would go free. He had all the sailors on deck to watch the spectacle and keep the pirates hemmed in with their swords. The men fought \u2014 I will spare you the bloody details \u2014 until there was just one man standing.\"\n\n\"Let me guess, Ekaitz did not do as he promised?\" She asked grimly.\n\n\"No,\" Cas murmured. \"He did not.\"\n\n\"He sounds like a pirate himself,\" she muttered.\n\nCas nodded: \"The only difference was the flag he flew under.\"\n\n\"And now he is exercising that same brutality over the Irlazken people...\"\n\n\"From what we have heard, the situation is dire,\" Cas said. \"People slaughtered if they can't pay his taxes, men being drawn and quartered for resisting, and women being burned as witches.\"\n\n\"Witches?\"\n\nCas nodded: \"He is powerfully superstitious \u2014 he surrounds himself with talismans to protect himself against the spirits of those he has killed \u2014 but I do not think that is why is having them killed. Certain women in Irlazken hold great power within their communities as healers, sailmakers and the keepers of legends. It is easy to guess his motivations for seeing them silenced.\"\n\n\"So what would he do with a woman who has been touched by real magic?\" She asked, the tattoos on her arms tingling slightly.",
        "Cas's arm pressed against her shoulder: \"You just remember this, Yanamari: Ekaitz batek ez nau konkistatuko.\"\n\nThe girl repeated the words in a whisper: \"A storm has yet to conquer me.\"\n\n++++++++\n\nCas was on deck when the first sight of Gades appeared on the horizon. In the early morning light, the city glowed like a fiery cloud at the edge of the ocean. Though he knew the journey was far from over, he could not help but breathe a sigh of relief. The skies were fair, the wind was with them... there was no reason why the falcon shouldn't be waiting for them.\n\nHe worked alongside the other sailors but his eyes kept drifting back to the city on the horizon. Slowly but surely the skyline became more and more focused. Soon, he could even make out the ships in the harbour. And that is when he saw something that made his heart sink: not one, but three Irlazken battle ships were anchored just outside the port, their blue pennants gleaming in the morning sun.\n\n\"Fuck,\" he cursed under his breath.\n\nThere was only one reason for those ships to be waiting for them at Gades \u2014 to ensure the princess made it to Irlazken.\n\nCas waited for a moment when no one was watching so that he could go and warn Yanamari but the opportunity never came. As the Raja sailed closer to the port, one of the Irlazken ships signalled the captain to draw alongside their vessel. The captain gave the command and the Raja's crew scampered back into the rigging to adjust the sails accordingly.\n\nThe soldier hoisted himself into the shrouds as commanded but kept one eye on the Irlazken vessel at all times.\n\nThe ships drew alongside each other at an agonisingly slow pace. Finally the hulls creaked against each other, a gangplank was lowered to breach the void, and the Irlazken captain dropped onto the ship, followed closely by a trio of officers.\n\nAs out-of-place as the dark grey tunics and metal armour of the Irlazken uniforms had appeared in the desert, they were clearly well-suited to the deck of a ship. The only flash of colour came from the inner lining of the soldiers' hoods, which were the azure blue of the Irlazken flag. The captain's rank was distinguished by the inky plumage that adorned his helmet, which he currently held under one arm, tucked against his torso.\n\nHis dark hair was twisted into the braids typical of Irlazken men and dotted with shells, bones, and a gold coin that gleamed in the sunlight \u2014 the mark of a man whose burial would be expensive.\n\nCaptain Namar greeted the Irlazken with a salute: \"Welcome aboard the Raja, Captain.\"\n\nThe Irlazken responded in fluent Arabic: \"I appreciate your hospitality, Captain Namar. My name is Deunoro and I have come to escort the fugitive traitor back to her judgement, alongside my comrades Captain Bartol and Captain Matai.\"\n\nHe gestured at the other two ships that lay in wait.\n\nNamar chuckled: \"Three ships of war for one girl?\"\n\nDeunoro did not laugh.\n\nNamar cleared his throat: \"So, what is it that you are requesting of me?\"\n\n\"That you hand the prisoner over to us.\"\n\n\"With all due respect, Captain Deunoro, my orders were to deliver her to Irlazken,\" Namar said, his tone suddenly curt. \"If she is dangerous enough to warrant three warships, then your ships may accompany us the rest of the way.\"\n\nDeunoro nodded: \"I suspected you might say as much.\"\n\nThe captain signalled over his shoulder and suddenly Irlazken soldiers began hauling casks of food and water across the gangplank.\n\n\"I took the liberty of picking up your provisions from the harbour. We cannot have any delays.\"\n\nNamar shrugged: \"Doesn't seem I have much choice in the matter, does it?\"\n\n\"You're welcome,\" Deunoro said dourly. \"Now, I want to see for my own eyes that you are in possession of the right captive. Bring the girl.\"\n\nNaman stiffened at the command but nodded towards two of his officers and tossed a ring of keys to one of them. Cas' heart was in his throat. He prayed that Yanamari did not think it was him coming and stayed in her cell. It was only a matter of moments before the officers appeared on deck once more, Yanamari between them. Her wrists were shackled in front of her and, when she tried to raise them to shield her eyes from the blinding sun, the men yanked them down again, pinning them at her sides.\n\nCas strained to see through the crowd of men as they marched her towards the Irlazken captain. When her eyes finally adjusted to the light, she glanced around for him too, finding his dark, anxious eyes for the briefest of moments. He realised, suddenly, that this was the first time he had seen her in the light of day. Not even the darkness and squalor of the brig could dull the shine in her hair or the sapphires in her eyes.\n\n<br >The guards yanked her attention back to the group of Irlazken men who stood before her.\n\n\"Are you satisfied?\" Namar asked.\n\nThe Irlazken stepped closer to examine her.\n\n\"What is your name?\" He asked in Arabic.\n\n\"I have gone by several names in my lifetime,\" she replied.\n\n\"One of them is 'traitor',\" he said bitterly.\n\n\"I have been called many things I am not.\"\n\nDeunoro reached out and, before Yanamari could shrink away, he caught the collar of her shirt in his fist and yanked it off her shoulder so that he could see the tattoos on her arms.\n\nThe captain eyed the markings on her shoulder and then placed both hands on her collar, ripping the shirt down the middle so that it hung off her shoulders. She glanced down frantically and pulled her wrists close to her chest to stop him from tearing the shirt down any further.\n\n\"Look how the whore tries to defend her modesty,\" Deunoro said in Irlazken, glancing over his shoulder at his men. They smirked, their eyes glinting from the shadows of their helmets.\n\n\"On your knees, you insubordinate wench,\" he barked, this time in Arabic. The soldiers at her sides immediately pushed her to her knees.\n\n\"You'd better get used to that before you meet your king,\" he sneered, switching to Irlazken once again.\n\n\"He is not my king.\"\n\nHis mocking smile disappeared: \"You'd better learn to keep your mouth shut, too.\"\n\nHe crouched before her and cocked his head at her: \"If the stories are true, you used to be a princess before you betrayed your people to become a pirate's whore.\"\n\n\"Do you believe everything you hear?\"\n\n\"No but, I have to admit, you look like a pirate's whore to me.\"\n\nYanamari glanced away angrily.\n\nDeunoro leaned forward suddenly and grabbed her hands, pushing something between her fingers. As she tried to struggle out of his grip, he whispered: \"Read it. Destroy it.\"\n\nThen his voice returned to a level others could hear and said in Arabic so that everyone gathered would understand: \"Just a traitorous whore.\"\n\nHe pushed her away and stood up, straightening his armour.\n\n\"She is the correct prisoner. Take her away,\" he said, waving a hand at the men flanking her.\n\nHe turned his attention sharply back to Namar: \"But you keep your men away from her. I don't want her pleading her belly when King Ekaitz strings her up for treason.\"\n\n\"What kind of ship do you think I run? Not a soul will lay a hand on her. Not anymore than you just did, at least.\"\n\nDeunoro shrugged: \"If you knew the ways she betrayed her people, you'd marvel at the restraint I just showed.\"\n\nDeunoro watched as the girl's head of golden hair disappeared below decks and then motioned for his own men to follow him across the gangplank. <br >\n\nAfter the last of the goods were loaded onto the Raja, the ships drifted apart once more and the Raja steered westwards.\n\n\"Well boys, I'm afraid the sour-faced Irlazkens have ruined our plans for a rest,\" Namar said. \"Let's see if we can't give them a run for their money and get this old tub to Irlazken as fast as the wind can carry us.\"\n\nAs Namar began calling out the orders to change their course, Cas disappeared into the crowd and slipped below deck. He made his way to the brig as quickly and quietly as he could. Yanamari pushed the cell door open at the sight of his boots descending the stairs.\n\n\"What happened?\" He asked, rushing towards her. \"Are you alright? Did he hurt you?\"\n\n\"No he \u2014 he gave me this,\" she said, holding out a small, worn piece of parchment.\n\nCas sat down on the stairs and she joined him, holding up the piece of paper so that he could see it.\n\n\"On this side are the names of guards, shift times, and on the other side a map,\" she said.\n\n\"What does doan jendea mean?\" Cas asked.\n\n\"It means 'free people',\" she said. \"I think I recognise that coastline.\"\n\n\"That's Sanctuary Cove,\" Cas said. \"That's where the summer palace is!\"\n\n\"Santutegia Kala,\" Yanamari murmured. \"Yes, I think I know that name.\"\n\n\"So, what is the doan jendea?\"\n\n\"I don't know. Why would he give this to me? He cannot mean to aid me in escaping?\"\n\n\"Perhaps he does... or perhaps he means to lead you into a trap.\"\n\nYanamari sighed: \"That's more likely.\"\n\n\"But how will we get word to Shahzaman of what has happened?\" Cas asked. \"They will get here only to find no message waiting for them.\"\n\n\"He will hear of it regardless,\" Yanamari pointed out. \"An Irlazken warship escorting a Persian vessel is hardly a normal sight.\"\n\n\"Three.\"\n\n\"What?\"\n\n\"Three Irlazken warships.\"\n\n\"I only noticed the one... Three for one prisoner? My god, do they know something we don't?\"\n\n\"If even that Captain is trying to help you escape, then perhaps so. My lady, what if you can use this information to escape? Perhaps these 'free people' are some sort of resistance movement... That would be a far better army than the motley array we have now.\"\n\n\"And what if Ekaitz kills me on sight?\"\n\n\"Don't say that.\"\n\nThe tone of Cas' voice made Yanamari throw him a sharp glance. For a moment, a shadow seemed to linger over his face. But perhaps it was just the light of the lantern moving with the sway of the ship.\n\nHe cleared his throat slightly and then murmured: \"We cannot think that way.\"\n\n\"It's a reality I have to become accustomed to.\"\n\n\"I don't think it's one I can.\"\n\nYanamari scoffed.\n\nCas looked up at her: \"Do you doubt me?\"\n\n\"You have not known me more than a few days. I still do not understand why you are here. What does the fate of Irlazken matter to Shahzaman? What does my fate matter to you?\"\n\nCas paused a moment and, in the silence, the piping of the boatswain echoed down through the ship. The soldier rose to his feet on instinct.\n\n\"I'll be missed on deck if I don't leave now.\"\n\nYanamari stood listlessly as he picked up the lantern and turned to climb the stairs.\n\nJust before he opened the trapdoor, however, he stopped and looked at her once more.\n\n\"I may not have known you long, my lady, but I think I know the kind of person you are \u2014 compassionate, brave, strong, merciful \u2014 the kind of person who could change the course of fate... if only she would listen to a simple soldier and stop doubting herself.\"\n\nAnd then he disappeared through the trapdoor, leaving her in darkness again.\n\n+++++++++\n\nShariyar slammed his fists on the ship's railing and called down at his brother: \"What the fuck do you mean they never put to shore?\"\n\nShahzaman's eyes flashed as he climbed back onto the deck from the tender: \"Apparently Ekaitz's navy got here before we did. Reports from town are that three Irlazken warships commandeered the Raja's supplies and escorted them west. They didn't even get the chance to enter the harbour.\"\n\n\"Fuck!\" Shariyar snarled. \"What are we going to do now?\"\n\nShahzaman jumped down from the railing and eyed his brother: \"Compose yourself. We need to plan our next steps carefully and rationally.\"\n\n\"There is no time for any of that. Ekaitz will kill her!\"\n\n\"Not if Cas has anything to say about it.\"\n\n\"You place a lot of trust in your man.\"\n\n\"I do.\"\n\n\"Cas always seemed too brash and undisciplined to me,\" Shariyar grumbled.\n\n\"Once again you prove yourself a poor judge of character,\" Shahzaman said curtly. \"Cas is a loyal and brave soldier. Just because he smiles in the face of danger does not make him brash and just because he is willing to buck tradition in order to achieve success does not mean he is undisciplined. You could not ask for a better man for this task.\"\n\n\"Well if you know him so well how do you think he will get her out of this mess?\"\n\n\"If I know Cas, he's already figured out a way to free her from the brig. And, if I were him, I know what I would do...\"\n\nShariyar waited expectantly for his brother to finish his sentence.\n\n\"What? What would you do?\"\n\n\"I would create a diversion by hiding her away somewhere and reporting her as missing.\"\n\n\"They didn't put into port,\" Shariyar countered. \"They would know she had no means of escaping from the ship.\"\n\n\"True but, with Irlazken vessels athwartships and astern, a missing captive is hardly ideal. They would be desperate to find her before they reach Irlazken. They might even call for the Irlazkens to assist in the search. Either way, it might create just enough confusion to delay them until our arrival.\"\n\nShariyar brought his fists down onto the wooden railing again with a cry: \"I should never have sent her away! Fuck! This is all my fucking fault!\"\n\nFor a moment Shahzaman looked as though he might reach out and pull his brother into an embrace. But, instead, he blinked the sympathy from his eyes and said simply: \"Regrets are not particularly useful to men of action.\"\n\nShariyar cast a bitter glance over his shoulder: \"Fuck you.\"\n\n\"What do you expect me to say? If you want comfort you had better go beat your fists at someone else. You are to blame for this whole fucking mess and I'm not going to pretend otherwise just to protect your feelings,\" Shahzaman hissed.\n\nThe king's knuckles turned white as his grip on the railing tightened.\n\n\"You need to stop trying to hide from what you've done,\" he continued. \"You can't keep sulking around feeling sorry for yourself. If you want to make a difference to that girl now, you need to focus on what you can do, not what you did or didn't do in the past.\"\n\nShariyar's fingers loosened slightly and he hung his head, nodding like a schoolboy after a scolding.\n\n\"I'm sorry, Shahza,\" he said.\n\nShahzaman started at his brother's use of the childhood nickname. For a moment or two, his fists clenched and unclenched as he wavered between anger and sadness.\n\n\"Don't call me that,\" he muttered finally.\n\nShariyar's expression filled with hurt anew.\n\n\"And don't give me that look,\" Shahzaman said. \"You and I are not the boys we used to be.\"\n\nHe brushed past Shariyar and bounded up the steps to the helm: \"Heave to men! Make ready to weigh anchor! We are sailing for Irlazken with the next tide!\"\n\n++++++++\n\nYanamari fell back into the water with a grunt. She tossed her hair from her face and looked up at Cas, his wolfish teeth bared in a lopsided grin.\n\n\"Laugh now, one of these days I am going to knock that smile off your face,\" she said.\n\nCas lowered the piece of wood he was using as a mock sword and held out his hand. She wrapped her palm around his wrist and let him haul her to her feet. Though the weather had grown rougher since they left Gades, and it was hard to keep their footing in the slippery brig, Cas had kept up her training.\n\n\"You're getting better, my lady. Look at me, you've got me panting!\"<br >\n\n\"And you've got me wet,\" she said, holding out her dripping arms.<br >\n\n\"You've got to be quicker on your feet,\" he said with a teasing smile.<br >\n\nYanamari answered back with a kick that sent a splash of water all over him.<br >\n\nCas sputtered and then laughed, launching another attack at her so fast she barely had time to raise her own mock sword to meet his. The wood clashed and she countered with an attack of her own, knocking her sword against his ribs.\n\n\"Good!\" He grunted, swinging at her stomach.\n\nShe parried the blow and then thrust for his stomach, just missing him as he leapt backwards. In that same moment, the ship pitched and Cas lost his footing, falling hard into the water.\n\nYanamari was at his side in a moment: \"Are you alright?\"\n\n\"Yes,\" he sputtered, wiping the water from his face.\n\n\"Good, because you're dead,\" she whispered, pressing the edge of her makeshift sword against his neck.\n\nHe laughed and let his head fall back for a moment before she moved her mock sword away and he pushed himself upright.\n\nYanamari rose to her feet and held out her hand to him. <br >\n\nHe took it and then, instead of letting her help him up, pulled her down into the water with him. Yanamari gave a little shriek of laughter as she fell forward against his chest, sending water flying around them.\n\n\"Oh you're done for now!\" She said, pushing herself upright so that she was straddling his torso. She used her palm to launch a wave of water at his face.\n\nHe twisted beneath her, using his hands to shield his face from the water and laughing the entire time.\n\n\"No! Have mercy!\"\n\n\"Never!\"\n\nCas suddenly grabbed her arms and rolled over so that he was on top of her, pinning her wrists to the floor. She grinned up at him as water dripped down from his hair onto her chest and neck.\n\n\"Do you surrender?\" He asked.\n\nYanamari strained against his weight to lift her head closer to his and whispered: \"Make me.\"\n\nFor a moment, something that looked like hunger flickered in Cas' dark eyes but then he blinked and, all at once, seemed to realise what he was doing. He released her wrists and pushed himself off of her and to his feet.\n\n\"My lady, I -- please forgive me,\" he stammered, backing away from her.\n\n\"Forgive you? For what?\" She asked, sitting up in the water.\n\n\"I forgot my place,\" he muttered.\n\nYanamari's brow furrowed as she climbed to her feet: \"Your place?\"<br >\n\nHe glanced away from her and pulled off his soaked shirt so that he could wring it out: \"Yes, my place as a soldier and as your servant. I should not have done that.\"\n\nBut Yanamari was hardly listening to him. Her focus was captured all at once by the sight of his muscles rippling in the dim light, by the glint of his teeth as he smiled at her, by the trail of dark hair that led her eyes down to his waist... She glanced up at him and found his eyes fixed on the shirt in his hands.\n\n\"What shouldn't you have done?\" She asked, her voice a murmur.\n\n\"I could have hurt you.\"\n\n\"You didn't hurt me, Cas. You're one of the few people I can say that about.\"\n\n\"But it was not right of me. I should not have put my hands on you that way.\"\n\n\"What if I wanted you to?\" The words fell out of her mouth before she realised what she was saying.\n\nFrom behind dripping strands of hair, Cas' dark eyes widened. Yanamari watched his muscles tense as she stepped towards him. She reached out a hand and gently brushed her fingertips against his stomach.\n\n<br >He let out a heady sigh and closed his eyes. Yanamari felt as if she could feel the very air between them pulsing and each breath they took seemed to bring them closer and closer to each other.\n\n\"Cas?\" She whispered up at him.\n\n\"Yes?\"\n\nHis lips were inches from hers now.\n\nCas leaned forward then slumped backwards, pushing her hand away gently.\n\n\"I can't,\" Cas said, lowering his eyes as he drew away from her.\n\n\"What?\" Yanamari's eyes were imploring. \"Why?\"\n\n\"Because you are royalty and I am a commoner.\"\n\n\"I think you are the most uncommon man I have ever met.\"\n\n\"Your opinion of me does not change the fact that you are a princess and I am just a soldier. A man like me cannot presume to ever kiss a princess.\"\n\n\"What sort of man is that?\"\n\n\"I have nothing to offer you. I have no castle, no riches, no family left on this earth. I am an exile, a traitor to my king.\"\n\n\"So am I. And I, too, have no castle, no riches, and no family.\"\n\n\"But you are still a princess without any of those things. And princesses are not supposed to kiss soldiers.\"",
        "\"They probably aren't supposed to be kidnapped by pirates, beaten, raped, held captive as a slave...\"\n\n\"Please, Yanamari, think of what people would say,\" he begged. \"They would say I took advantage of you when you were weak. They would say that I was no better than Ekaitz... a soldier hungry for power.\"\n\n\"That is a very brave fear, Cas. It assumes that we will make it out of this, not only alive, but successful.\"\n\n\"I have to assume that,\" he said. \"The alternative... I could not bear.\"\n\n\"The alternative has already happened to me. I have experienced a thousand horrors and almost died a hundred times.\"\n\n\"I am afraid,\" he whispered, finally.\n\n\"What are you afraid of?\"\n\n\"I am afraid that, if I say the things my heart is aching me to and do the things my body is begging me to, you will regret letting me. When you are sitting on a throne, you will regret having let someone like me entertain the thought of loving you.\"\n\n\"I did not realise that's how you think of me,\" she said, a tinge of bitterness sharpening her tone. \"As someone so shallow and disloyal that I would turn away from you the second circumstances changed in my favour.\"\n\n\"No, I \u2014 that is not what I meant. None of this is. I did not want to upset you.\"\n\n\"Perhaps it is best we pretend this never happened,\" she said, brushing past him and walking towards the cell.\n\nHe grasped after her but she was out of reach.\n\n\"No, Yanamari, please \u2014\"\n\n\"It's fine, Cas, really. You have made yourself clear.\"\n\n\"No, that's just it! I haven't!\" He groaned into his hands. \"You are royalty, my lady, and I am just a soldier. Things will be different when you are on the throne.\"\n\n\"But I won't be.\"\n\nCas raised her hands slowly and planted a gentle kiss on each knuckle. The feeling of his lips against her skin sent a burst of fire through her stomach and she wondered how her knees were keeping her upright.\n\n\"My prayer is that I will live to see you crowned rightful queen of Irlazken. That I will live to see you liberate your people from corruption and greed. That I will live to bow before you as your humble servant...\"\n\n\"And, if that day comes, and I should ask you to kiss me, what will you say?\"\n\n\"You won't. There will be dozens of suitors lined at your feet \u2014 men who can give you far more than I ever could.\"\n\n\"Like what?\"\n\n\"Wealth, power... all the things that come with a suitable match.\"\n\n\"A suitable match? Is that all that is waiting for me at the end of the heartbreak and torment I have gone through? A suitable match?\"\n\n\"I \u2014\"\n\n\"I want love, Cas. I want to feel that I have a place in someone's heart. If you can't give that to me, then let us end this conversation here. But, if you can, then tell me now.\"\n\n\"My lady \u2014 I \u2014\" Cas faltered. \"I'm just trying to protect you.\"\n\n\"Perhaps you should try listening to me instead.\"\n\n\"Yanamari, I want to say 'yes' right now. I want to say 'yes' to you forever.\"\n\n\"Then why don't you?\"\n\nThe shrill call of the bo'sun's pipe echoed down through the ship but, as Cas moved to turn away from her, she grabbed his hand and pulled him towards her, wrapping her arms around his neck and pulling his face towards hers.\n\n\"Soldiers may not kiss princesses,\" she whispered, her lips brushing against his. \"But a princess may kiss whomever she damn well wants.\"\n\nAnd, when she did, Cas surrendered to her completely. He wound his arms around her waist, pulling her body tightly against his as their lips met again and again.\n\nAt another sounding of the incessant pipe, Yanamari pulled away from him slightly.\n\n\"When I am queen, I will ask you again to kiss me,\" she said. \"What will you say?\"\n\nCas bared his wolfish teeth in a smile and leaned forward to rest his forehead against hers: \"I will always say 'yes', my lady.\"\n\n\"Come back soon,\" she murmured, releasing him.\n\nCas bowed his head and then raced up the stairs, leaving her in darkness once again.\n\nBut, this time, all she could see was Cas' grinning eyes.\n\nShe picked up her makeshift sword again and swung a series of attacks against her imaginary foe. By now she knew the layout of the brig so well she could practice her swordsmanship even in the pitch black.\n\nShe imagined Cas, not as her opponent, but by her side, fighting against a foe that was slowly taking shape in her mind \u2014 Ekaitz.\n\nZigor had taken everything from her. Now, finally, her past and her future were within her grasp and Ekaitz threatened to destroy them both. She could not hate him \u2014 she knew she would gain no power from that feeling. So, instead, she thought of all the loved ones she had lost and all the loved ones her people had lost: Mothers, fathers, sisters, brothers, children, parents.\n\nYanamari pictured him as hideous a creature as she could imagine and yet, she reminded herself grimly, Shariyar had been as cruel and sadistic as he was striking.\n\nShe kept her pace along the length of the hold, arcing her imaginary blade through the air and skimming it across the bilge water that sloshed about her ankles.\n\nShe imagined Cas at her side when she faced Ekaitz, his gleaming smile and strong hands fresh in her mind.\n\nWith a sharp cry she slashed the piece of wood through the air and then lunged straight forward, into the darkness. The wood made impact against the hull, splintering in her hands. With a gasp, she braced herself from crashing into the side of the ship.\n\nShe staggered backwards and stared at the broken piece of wood in her hand. A dim glow emanated from her arms, lighting the darkness. Her tattoos were glowing an icy blue. She ran her hands along her arms, expecting the ink to be burning hot. Instead, her tattoos felt ice cold to the touch.\n\nShe walked back to the steps, gazing incredulously at the markings on her arms, and sat down heavily. In the back of her mind, she heard Cas' words echoing: \"You have to fight for your life, not out of hate for those who have done you wrong, but out of love.\"\n\n\"Love,\" she whispered aloud.\n\nI always wondered why Fate kept me alive all these years... now I know. \n\n\"I am Yanamari,\" she said. The name still sounded strange to her, so she said it again. Louder.\n\n\"I am Yanamari!\"\n\nAnd, though there was no one there to hear her, her tattoos seemed to glow slightly brighter.\n\n++++++++\n\nCas' whole body was thrumming when he climbed back onto the main deck. He could not get the feel of Yanamari's lips from his mind or her taste from his mouth. He worked mindlessly, letting memory and instinct guide his hands and feet until, mercifully, the bell tolled for evening mess. The wind seemed to be picking up with each passing hour and black clouds were amassing on the horizon. And yet, the Irlazken ships flanking them showed no sign of wavering from their course.\n\nHe followed the line of sailors into the galley to collect a plate of salted meats and bread. Normally he would collect a plate for Yanamari as well but the ship was pitching too roughly for him to carry two plates. So, he sat down for a moment with the other men and ate his supper, listening absent-mindedly to their chatter.\n\n\"\u2014 damned Irlazkens driving us right into a damned tempest \u2014\"\n\n\"\u2014 aye, 'best seamen in the world', my back foot!\"\n\n\"But the women, good lord! If we make it there you might not see me back!\"\n\nA round of laughter and whistles sounded in agreement.\n\n\"If they look as good as that girl we've got aboard now, you can bet on it!\"\n\n\"Better! That waif wouldn't last a minute with me!\"\n\n\"I didn't think you could last more than a minute!\"\n\nCas grimaced slightly as another roar of laughter echoed through the galley. He swallowed his last mouthful and went to collect Yanamari's plate.\n\nHe slipped out of the galley quietly and made his way to the brig, concentrating on keeping his balance and Yanamari's supper intact as the ship rolled.\n\nHe pulled open the trapdoor and set the lantern down by the opening. He made his way down the stairs to where Yanamari was waiting and handed her the plate before climbing back up to retrieve the lantern and close the door.\n\nHe sat beside her in silence as she began to eat the food.\n\n\"You are angry with me,\" she said.\n\n\"No.\"\n\n\"Then why aren't you saying anything?\"\n\n\"The men think we are going to founder.\"\n\n\"Irlazken ships do not sink.\"\n\n\"We are not on an Irlazken ship.\"\n\nYanamari set her plate down: \"What is wrong, Cas? Please tell me.\"\n\n\"I'm sorry,\" he said, rising to his feet. \"It's not about what happened earlier, I swear. It's just the men \u2014 the things they say \u2014 they have me on edge.\"\n\nShe watched as he paced in the shadows: \"Things about me?\"\n\nHe paused and then nodded.\n\nShe shrugged: \"I am used to that.\"\n\n\"It was difficult to stomach,\" he growled. \"I swear I almost wish the ship would sink and take them all with it.\n\n\"Does it make you think less of me?\" She asked.\n\n\"What? No, of course not!\"\n\n\"I could understand if it did.\"\n\n\"It doesn't,\" Cas said firmly as he walked towards her. He pulled her hands into his and brought them to his mouth so that he could kiss each of her fingers. \"I just wish I could take you away. Far, far away from all of this.\"\n\n\"How?\"\n\n\"On a magic carpet.\"\n\nShe smiled and rose to stand before him.\n\n\"If you could, where would you take us?\"\n\n\"I don't have a fine palace for you but I have a tent. With a fire glowing outside and soft blankets inside to lay you down on.\"\n\nYanamari ran her fingers along Cas' collarbone, up his neck and cupped the back of his neck in her palm, pulling him towards her.\n\n\"We're there now,\" she whispered, planting a kiss on the line of his jaw. \"The sway of the ship is just sand shifting beneath our feet.\"\n\nA shout sounded through the decks and Yanamari started.\n\nCas pulled her face back to his with a gentle hand: \"Just a nighthawk's cry.\"\n\nYanamari closed her eyes as Cas' lips claimed hers in a searing kiss. His hands ran down her back and wrapped around her waist as she rose up on her toes, tangling her fingers in his hair.\n\nHis hands moved down her body, pressing into her thighs as he lifted her up. She wrapped her legs around his waist and he groaned into her mouth as her body pressed against his hardening member.\n\nHe walked with her in his arms a few paces and she felt her back press against the wooden siding of the ship. She unwrapped on of her arms and traced her hand down his stomach so that she could slip her hand beneath the waist of his trousers. Her fingers brushed against the head of his cock and he groaned again, nestling his head in the crook of her neck as her hand slowly slid up and down his hardening length. His breath was hot against her skin and his whole body shivered at her touch.\n\nWith a heady groan he pulled away from her and walked her to the stairs, setting her down on the wooden steps. Her hand was still around his cock as he pulled his trousers off and tugged off his shirt. She removed her hand to do the same and he knelt down on the stairs in front of her, lifting her legs so that they rested on his broad shoulders. He left a trail of kisses along each of her thighs before his tongue found its way to her sex.\n\nYanamari moaned as he licked at the folds of her flesh, his tongue pressing against the entry of her sex. He glanced up at her and smiled when he saw that her head was tipped back in pleasure.\n\n\"Cas, I want to feel you,\" she murmured. \"I want to feel you inside me.\"\n\nThe warrior grinned up at her and kissed his way back up her stomach, across her breasts and along the curve of her neck until his lips captured hers once again. She let out a slight gasp as he slowly pushed himself inside her and he stopped immediately.\n\n\"Is it alright?\" he whispered. \"Am I hurting you?\"\n\n\"No,\" she murmured, wrapping her arms around his neck and pulling him towards her so that his thick cock filled her completely.\n\nHe moaned and buried his head against her neck as he began to slide in and out of her.\n\n\"You feel incredible,\" he breathed, his lips brushing against her skin.\n\nShe ran her hands along the rigid muscles of his back and moved her hips against his, moaning each time the full length of his cock pushed inside her.\n\nCas leaned backwards and looped one hand beneath her thigh while the other moved to her sex. He pressed his fingers against the top of her pussy and began to move them in a tight circle.\n\nYanamari's body arched backwards and she pressed the back of her hand over her mouth to muffle her moans. The feeling of Cas' hard cock and his fingers against her pussy sent jolts of pleasure up her spine.\n\n\"Cas \u2014 I \u2014 \" She bit down on the back of her hand and closed her eyes.\n\nHe leaned down and kissed the palm of her hand, then her collarbone, then her breast. She let out a muffled cry as his tongue circled her nipple. With each movement of his mouth, she could feel something building in the pit of her stomach.\n\n\"Oh god,\" she whispered. \"Oh please, oh \u2014 \"\n\nHer nails dug into his back and Cas immediately moved his lips to her mouth, kissing her as her whole body shuddered beneath him. He groaned into her mouth and began to move his hips faster, revelling in the way her orgasm pulsed around his cock. Yanamari pulled him closer and her gasping kisses sent him over the edge. He moaned and buried his shaft deep inside her, a tremor running through his whole body as he emptied his seed.\n\nThey lay against the wooden steps, his cock still deep inside her, and her limbs tangled around his torso, until the sound of footsteps on the deck above forced them back into reality. Slowly Yanamari unwrapped her arms and legs, and Cas pushed himself to his feet. He gathered up their clothes and handed them to her, planting a kiss on her forehead.\n\n\"I would give anything to be in that tent,\" he smiled. \"Anything at all.\"\n\nYanamari pulled her dress over her head and smiled softly back as he stepped into his trousers.\n\n\"Do you have to leave?\"\n\n\"It's not my watch just yet,\" he said with a shake of his head.\n\n\"Then don't go. Tell me a story.\"\n\nThe soldier sat down beside her on the steps and pulled her into his arms: \"I told you I grew up in the military, there wasn't much time for storytelling.\"\n\n\"Yet you have one all the same,\" she said, nestling her head against the dark curls that covered his bare chest.\n\nCas's fingers traced lazy patterns along her thigh.\n\n\"When I was younger, I wanted to hear stories of hardened warriors who gained glory and an honourable death through their conquests. But, as I grew older, as I watched my circle of friends shrink, each claimed at the blade of an enemy's sword... well, then I needed stories that gave me hope about what might come after. Stories about heroes who had a happy ending with a peaceful life and passionate love waiting for him.\"\n\nHe hesitated for a moment: \"I'm not a storyteller, Yanamari, I don't have the gift you do.\"\n\n\"Please?\"\n\n\"Alright, let me see \u2014 once, a long time ago, when a man's worth was measured by his ability and not his birth, a group of tribal leaders banded together and chose a man named Ghazanfar to be their king. He had proven his might in times of war and his mercy in times of peace. Ghazanfar took on the role, not because he wanted power or prosperity, but because he loved his people and respected the men who had chosen him as their leader. And, indeed, he proved himself worthy of their trust time and time again. He was a wise, compassionate ruler and was beloved by all his subjects except one \u2014 his own brother, Marid.\n\n\"Marid was consumed with the desire for wealth and fame, and he was as cunning and ruthless as his brother was courageous and righteous. When his brother became king, Marid hoped that he would be able to use his new position to his advantage. But Ghazanfar seemed to thwart him at every turn. He refused to levy new taxes upon his subjects simply to fuel his brother's desire for wealth.\n\n\"'We have all we need, brother,' he would say.\n\n\"But Marid was not content and, when earthly means were insufficient to convince his brother, he turned to the occult for a solution. He made a deal with a jinn to ensorcel his brother and the tribal leaders and send them off to fight a distant war, from which Marid was certain they would never return, and leave the kingdom in his sole control.\n\n\"Marid immediately implemented a slew of new taxes and harsh penalties for those who could not afford to pay them. He was hated by all his people but, surrounded by money and jewels in his lofty castle, he could not hear their cries. The only people he paid well were his soldiers and they executed his will viciously.\n\n\"The months turned to years and any hope the people had that Ghazanfar would return slowly faded. But, as always seems to be the case when despots rise to power, there was a young hero and heroine who were poised to tip the scales.\n\n\"The hero was a young man named Shunnar and the heroine was his beloved Aanisah, who also happened to be Ghazanfar's daughter. Shunnar was the son of one of the tribal leaders and he and Aanisah had known each other for many years. When his father had followed Ghazanfar to war, Shunnar suspected foul games afoot and refused to submit to Marid's rule. He became an outlaw fighting to protect the people from Marid's ruthless soldiers and plundering the tax collector's caravans to return the money back to the people. He and his band of outlaws lived in the wilderness where they used the natural environment to evade capture.\n\n\"Aanisah was his eyes and ears in the palace, using her position within the royal family to gain information that would help Shunnar. It was while she was searching for clues as to her uncle's next raid on the forests that she overheard Marid and the jinn arguing. The jinn demanded his freedom \u2014 the freedom that Marid had promised him once he became the jinn's master \u2014 but her uncle refused, taunting the powerful spirit with the threat that, if his insubordination continued, he would never be free.\n\n\"When her uncle dismissed the jinn and left the room, Aanisah emerged from her hiding place. Before he could utter a word, she wished the jinn free.\n\n\"It was at that moment that Marid suddenly burst back into the room. He commanded the jinn to imprison the girl in the dungeons immediately. To Aanisah's shock, the jinn whisked her down to the dungeons in a cloud of purple smoke.\n\n\"But, once they were there, the jinn embraced her like a friend. He thanked her for freeing him and explained that he had continued to play along to protect her from her uncle. In freeing the jinn, she had broken the curse and Ghazanfar was now released from his spell. If her uncle found out, he would have killed her on the spot and send his warriors to meet Ghazanfar. The princess thanked the clever spirit and began to hatch a plan of her own.\n\n\"She knew her uncle would try to use her as bait to lure Shannur out of the wilderness and defeat the young troublemaker once and for all. Sure enough, the next morning the princess was tried publicly to ensure Shannur would hear of it. The princess was sentenced to death for a lengthy list of traitorous crimes she had not committed and set to be hanged at dawn.\n\n\"Locked in the dungeons of her own palace, the princess waited for the return of the jinn. He appeared shortly after dusk to ask what her orders were. They both knew whatever plan the princess concocted, Marid could not know that the jinn was free. Aanisah asked the jinn to ensure the noose did not kill her, and instead place her into a deep sleep. She also asked the jinn to tell Shannur of her plan so that he would not be tempted by the bait.\n\n\"The next morning, at her hanging, Marid waited and waited for Shannur to make his move. Finally, he grew impatient and, taunting her with the knowledge that her true love had betrayed her, gave the signal to the hangman. The noose went taught, the princess went limp, and, to everyone aside from the jinn and Shannur, she seemed dead. It was at that precise moment that the sound of trumpets announced Ghazanfar's return, with Shannur at his side. Marid turned as white as a sheet as his brother's forces swarmed the courtyard where his daughter's body hung. He commanded his soldiers to fight but the jinn froze them in place. Marid was powerless and caught in the middle of his treachery.",
        "\"'Brother, you have committed the ultimate treason,' Ghazanfar cried. 'And you shall pay the ultimate price! The jinn you enslaved shall now be your master for all eternity, and your soldiers turned to clay.' And as he gave the command, the jinn cackled and made it so. He turned the soldiers into unfired pottery and bound his slave to an oil lamp so that he could easily be kept in one place.\n\n\"Shannur leapt from his horse and cut the rope from which Aanisah's body still hung. He kissed her lifeless lips and, all at once, the colour came rushing to her face. From that day on, there was peace in the kingdom and Shannur and Aanisah lived in happiness until the end of their days.\"\n\nYanamari sat up and turned to smile at the soldier: \"You sell yourself short, Cas. You are a magnificent storyteller.\"\n\nCas ran a hand through his hair and looked away: \"You're kind to me.\"\n\n\"I'm telling the truth!\" She said, resting a hand on his arm. \"It's rare that I hear a new story.\"\n\nCas laced his fingers between hers and brought her hand to his lips.\n\n\"You're welcome, my lady.\"\n\nHe brushed his thumb over her knuckles and then pressed her palm to his face.\n\n\"I have to go or I will be missed for the night watch,\" he whispered.\n\nShe nodded and stood up so that he could get to his feet. He placed his hands against her face and pulled her in for a final kiss.\n\n\"I'll be back as soon as I can.\"\n\nShe nodded and watched as he ascended the steps and disappeared through the trapdoor. But, when the wooden door fell shut behind him, she found that she was not in complete darkness. Her tattoos pulsed with blue light and she stared down at her glowing arms.\n\nCas. She thought his name, remembered the feel of his body against hers, and the ink glowed brighter.\n\n++++++++\n\nShahzaman struggled at the helm of the ship. With each wave that broke against the bow, it felt as though the sea was purposefully trying to wrest the wheel from his grip.\n\n\"Fuck,\" he grunted, straining against the ocean's latest assault.\n\n\"These damned Irlazkens!\" Shariyar's voice came from behind him. \"They're going to get us all killed. What are they playing at?\"\n\n\"I don't know! Damn it, Shariyar, anytime you want to lend a hand \u2014\"\n\nShariyar leapt to join his brother at the helm but, even between them, it was a fight to keep the ship on course.\n\n\"We can't follow them, Shariyar!\" Shahzaman finally cried. \"We have to change course!\"\n\n\"What?\" Shariyar roared.\n\nShahzaman stepped back from the helm and, without his support, the wheel went flying from Shariyar's grasp. He stumbled backwards and wiped the salt and rain from his face.\n\n\"We can't just leave her to drown!\"\n\n\"Well we won't be much fucking use to her if we drown too!\"\n\nShariyar threw his hands in the air and a flash of lightning pronged the sky.\n\n\"So what do you suggest we do? Huh?\"\n\nShahzaman pushed past his brother and stopped the spinning wheel in place: \"We head north. Skirt the storm. Make port at Marinelaren Gailurra.\"\n\nShariyar wanted to reach out and strike his brother across his face. His fingers clenched instinctively.\n\n\"This is not an Irlazken ship and I am not an Irlazken sailor!\" Shahzaman cried over the growing howl of the wind. \"We have to head north if we are to live to fight another day.\"\n\nA moment or two passed before Shariyar's hands begrudgingly joined his on the ship's wheel and he helped his brother alter course.\n\n++++++++\n\nCas braced himself from falling as he made his way down the hatch. The closer the ship edged to Irlazken, the rougher the weather was becoming. The ship pitched violently beneath his feet and his heels slid from under him. He groaned as he came crashing down onto the deck and the ship leaned hard on her side again, sending him sliding across the wet decking. He grabbed onto the trapdoor latch and pulled the wooden hatch open. He scrambled down the stairway just as the trapdoor slammed shut above him in a curtain of water.\n\nHe sputtered and brushed the water from his eyes with the arm of his sleeve before calling out into the darkness.\n\n\"Yanamari!\"\n\n\"Cas?\" Her voice answered back. \"What's going on?\"\n\n\"I have good news and bad news,\" he roared over the noise of the storm.\n\n\"What's the bad news?\" She called back, clutching the bars of the cell to keep herself steady.\n\n\"The bad news is, I think this storm might be the end of this ship.\"\n\n\"What's the good news?\"\n\n\"Ekaitz batek ez nau konkistatuko.\"\n\nThe girl fairly crowed with laughter and, for the briefest moment, Cas could have sworn he saw the ink on her arms glowing in the darkness.\n\n\"So we're going to drown, that's what you're saying?\"\n\n\"Probably, if we don't get out of here now!\"\n\n\"Lead the way!\"\n\nHe pushed the trapdoor open and a gush of water promptly knocked him backwards, sending him sliding down the stairs. Yanamari stumbled as the wave of water threatened to sweep her own feet from under her.\n\n\"Come on!\" He yelled, holding out his hand to her.\n\nShe grabbed his hand and let him pull her towards the staircase. She scrambled up the steps and through the hatch, the soldier fast on her heels.\n\n\"This way!\" Cas pressed forward, leading her through the narrow confines of the lower decks.\n\nEverywhere, the ship was in chaos. The sailors paid no attention to either Cas or Yanamari as they raced through the ship. Rain and sea poured down every hatch and through the cracks in the decking. The planking was like ice beneath their feet, sending them sliding each time the ship rolled. The Raja was fighting against the storm with all her might \u2014 her very timbers seemed to cry out from the strain.\n\nAnd then, just as the pair were about to reach the top deck, the ship suddenly seemed to stabilise.\n\n\"This ship is going to founder,\" Yanamari cried, clutching at Cas' hand.\n\nCas looked back at her, hoping that he would be able to assuage her fears but her bright eyes were alert, focused.\n\n\"No, see it's calming down!\" He yelled back.\n\n\"It's not! She's taking on water!\" Now it was her turn to pull him up the stairs.\n\nThey burst onto the top deck and into the middle of the storm. The rain pelted so hard it stung their skin and the wind made it near almost impossible to hear anything.\n\n\"We have to get off this ship now!\" Yanamari cried.\n\nCas glanced around frantically and then pointed at a pile of empty barrels lashed to the deck. He pulled a knife from his boot and slashed at the sodden ropes holding the barrels in place. He pulled the rope free and began to loop one end around Yanamari's waist.\n\n\"Yanamari, if we don't make it, I just want you to know that \u2014\"\n\nBut the cruel storm snatched the words from his mouth as a rogue wave came coursing over the deck.\n\n\"Cas!\" Yanamari screamed, watching helplessly as the foaming sea swept him across the decking and over the side, barrels tumbling after him. She threw her own survival to the wind and followed him, diving headfirst into the raging sea just as the Raja finally gave up and rolled onto her side.\n\n++++++++\n\nWhen the waves finally pushed her body ashore, Yanamari's limbs were trembling from fatigue and her eyes were swollen from the constant sting of salt. She coughed up mouthfuls of seawater as she dragged herself further up the beach, the waves helping her one moment and hindering her the next. Finally her fingers hit rock and she clawed her way from the sea's clutches.\n\nShe sprawled across the rock and grimaced up at the sky. The sun was shrouded in purple and black, as if the firmament itself had been bruised by the storm. She pushed herself up slowly and stared out at the endless grey. She could hardly tell where sea ended and sky began.\n\n\"Cas!\" She tried to call out for the soldier but nothing more than a croak escaped her sore throat.\n\nYanamari struggled to her feet, the wind forcing her to fight for her balance. She scanned the shore as best her watering eyes would allow, and her heart sank when she saw the shadowy forms of several bodies scattered along the waterline.\n\nThe first corpse she encountered was a grotesque sight: His countenance was bloated and blue, and flies landed on his glassy eyes.\n\nShe did not have the strength to bury him, nor any of the other bodies she encountered. She counted a dozen corpses in total, but not one of them belonged to Cas. She wanted to take some comfort in that knowledge but she knew that these men represented only what the ocean had not swallowed.\n\nThe sea air seemed to pierce right through to her bones and Yanamari reluctantly pulled the jacket from the stiffening limbs of the last body she found on the beach.\n\n\"I'm afraid I need it more than you do,\" she whispered, closing the sailor's gaping eyes with the tips of her fingers.\n\nShe was about to turn her back on the sea when the sun finally broke through the clouds and smiled on the waves. Yanamari stared out at the glistening sea, unsure if it was comforting her or taunting her.\n\n\"Cas!\" She called out again. \"Cas!\"\n\nShe screamed with all her might and still her cries seemed only to carry a few feet in each direction. The crashing surf swallowed them whole.\n\nShe turned her back on the merciless ocean and the sun dimmed behind clouds as she staggered up the beach. She could make out a rough-hewn staircase that had been carved from the rock. A rouge wave swept over the sand and breached on the cliff, sending the bodies rolling. Bracing her weak limbs against the effort, she waded through the water and began to ascend the rocky stairs.\n\nIt took almost all of Yanamari's waning strength to make it halfway up the cliff. She paused to catch her breath when she reached a natural landing where the path levelled out briefly before continuing on its steep ascent.\n\nIt was just then that, above the constant, dull roar of the reef, a sudden noise caught her ear. On instinct, she ducked down into the brush that bordered the path.\n\nShe peered cautiously over the thicket to see a single Irlazken soldier walking along the shoreline. He knelt down by the first body he came to and called out again over his shoulder. Within seconds, a troop of mounted soldiers rounded the cliff, their horses kicking up a flurry of surf and sand. The last pair of horses were hitched to a wagon that was already half-full of salt-soaked corpses. Another pair of soldiers jumped down from the wagon and began loading the newly discovered dead into the cart.\n\nEkaitz moves quickly.\n\nShe could see the scout and the officer were having a conversation but the wind and surf drowned them out.\n\nThen she noticed one of the officers pointing at the steps she had followed. The foot soldier saluted and then jogged up the beach towards the path. Yanamari gasped and stumbled backwards, pushing herself on her palms and heels in a hasty struggle to get off the path and out of sight.\n\nShe pressed herself against the side of the cliff, praying that the small ledge she was perched on did not give way beneath her weight. She held her breath and clenched her eyes tightly shut as the sound of the soldier's boots drew near, as if her not seeing him could somehow prevent him seeing her.\n\nMercifully, she heard his footsteps continue on until they, too, disappeared from earshot. She allowed herself to take a few hasty breaths before the soldier's voice came from what sounded like directly above her.\n\n\"Nothing here, Sir!\"\n\nThe officer the scout had been speaking with spurred his horse and approached the base of the cliff.\n\n\"What's that?\"\n\n\"No sign of anyone!\" He called down.\n\n\"You certain?\"\n\n\"Aye sir. There is nothing but flat pasture for miles.\"\n\n\"Even if by some miracle someone managed to survive the wreck, they cannot have gone far. Back down with you! Go search the caves to westward to be sure. If you find anyone alive, make sure they stay that way. The king wants the traitor found at any cost. I will lead the rest of the men back to the castle now. The king will want to inspect the dead.\"\n\n\"Aye sir!\"\n\nShe steeled herself once again as the soldier's footsteps came into earshot once again. She heard the crunch of his boots against the rock as he made his way back down the cliffside.\n\nYanamari waited for what felt like an eternity, not daring to move until she was certain the soldiers had moved on. Slowly, the sun's light faded behind another curtain of dark clouds. When she finally crawled out from the brush and peered over the rocks onto the beach, the shore was shrouded in a thick blanket of fog that seemed to stretch beyond the horizon.\n\nShe shuddered at the gloom and then renewed her climb to the top of the craggy ridge. Driven by adrenaline alone, her limbs felt like lead. When she finally pulled herself up the last steps, she collapsed on the ground, breathing heavily. It took several minutes before her frantic heart finally calmed and she could gather the energy to pull herself to her feet.\n\nMist obscured the landscape and, for a few moments, she could see nothing other than the few feet of mossy rock that lay before her. Suddenly, however, the sun's light strengthened once again and she felt a breath of salty wind at her back. A rush of wind sent the mists tumbling away and she suddenly found herself looking over a sweeping meadow dotted with mossy rocks and patches of pastel where wild flowers grew.\n\nAs Yanamari looked at the landscape, she could not help but feel something akin to familiarity stir in her heart.\n\nWishful thinking.\n\nFaint paths seemed to radiate in ten different directions from where she stood. She sighed deeply and set her eyes on the horizon, hoping to find any discrepancy on the skyline that would indicate a settlement of some kind. A shadow seemed to loom low to the west and, though she could not tell whether it was an outcropping or a building, she decided to take her chances and head towards it.\n\nThe sun rose higher and higher in the sky, bathing the windblown savannah in light. Only a few dwarfed trees dotted the landscape, their limbs doubled over by the relentless sea air.\n\nShe stopped beneath one of the stooped trees to rest for a while, using the trunk to ease herself to the ground. She leaned against the rough, peeling bark and tipped her head back.\n\nIn the space of a few moments, the grey sky had turned a brilliant blue, as if the tempest from the night before had never occurred.\n\nBut it had. And now Cas was gone forever.\n\nShe let out a choked sob and pulled her knees into her chest, cradling her head against her knees as she wept. Her heart felt like a gaping wound. Never before had she felt such pain. Not the sting of the whip nor the cracking of bones came close to the intense pain that radiated from her chest. Only sheer exhaustion saved her, overcoming her senses all at once with a wave of tiredness to which she quickly surrendered... only to be awakened no more than half an hour later by something wet grazing against her cheek.\n\nShe shook her head and opened her eyes, only to find herself looking into the large, dark eyes of a horse. Who promptly licked her again. She sputtered and pushed against the horse's soft muzzle to keep its tongue at bay.\n\n\"Kaixo,\" Yanamari murmured, her throat hoarse. \"What are you doing here, little zaldi?\"\n\nThe language flowed unbidden, but fluently, from her mouth.\n\nAnd, to be sure, the horse was little. It was a short, sturdy creature with a potbelly and a dark, mottled coat. Its forehead was marked by a white blaze that streaked all the way down its muzzle.\n\nThe mare nickered and nuzzled into her neck, warming her skin with each exhale.\n\nA strand of rough rope hung from the horse's neck from where it had once been tied.\n\n\"Where did you escape from?\" She asked.\n\nThe pony gave a snort and then began rooting around in the grass beside Yanamari's feet, filling its mouth with the fruits that had fallen from the branches overhead.\n\nThe girl pushed herself upright slightly and stared at the tiny red fruits.\n\n\"Gurbitz!\" She suddenly exclaimed, the word leaping from her lips with a gasp. She reached out and grabbed a single fruit from the ground, tested the ripeness between her fingers, and then popped the whole thing in her mouth.\n\nYanamari's jaw ached as the woody flavour of the berry filled her mouth. The mild sweetness of the fruit was almost overpowering to her starved tastebuds.\n\nShe was so overcome with hunger that she hardly had a moment to register the fact that she had recognised the tree and its fruit. She could not remember ever eating it before, but something inside her had recognised it instantly.\n\n\"Oh little zaldi, thank you!\" She murmured, filling her hands with more of the fallen fruits.\n\nShe sat and ate for a few moments more but, when the pony raised its head and began to walk purposefully away, she rose to her feet as quickly as she could to follow it.\n\nYanamari filled the pockets of the sailor's jacket with fruit and then pressed on in the horse's tracks. Eventually she found they were following a meandering footpath that led straight to a low rock wall that bordered a modest, thatched cottage.\n\nThe gate to the property was broken and the pony stepped over the splintered wood into the garden. She could see the rest of the pony's rope hanging from a tree inside the yard.\n\nSo this was where the pony had escaped from... but where was its owner?\n\nShe stepped through the gateway warily. The garden was overgrown, and fruits and vegetables lay rotting on the ground.\n\nSuddenly, the door of the cottage creaked open. Yanamari froze, waiting for the owner of the house to step outside. But no one stirred.\n\nShe suddenly felt a knot in the back of her throat and, against every warning ringing in her head, pushed the door open gently.\n\n\"Hello?\" She called.\n\nNo answer came.\n\nShe stepped inside and something crackled beneath her foot. She jumped back lightly and found herself staring down at a small wreath with a flower in the middle of a ring of leaves. She tried to pick the wreath up, but the petals fell away in her hand.\n\nProtection. The symbolism was familiar to her and the name of the flower came to her unbidden: ekilore.\n\nShe set the remains of the sunflower wreath down and continued inside slowly, her eyes narrowing as they adjusted to the dark interior. The only light streamed in through a broken door on the far side of the house. The place looked as if it had been ransacked: Furniture lay strewn across the room and shattered pottery littered the floor.\n\nNo flower could offer protection against whatever force swept through here.\n\nYanamari picked her way through the wreckage gingerly as she made her way to the other doorway. She pushed against the half of the door that remained on its hinges and then gasped, pressing a shaking hand to her mouth.\n\nThe pony's owners lay outside. Or, at least, what was left of them did. In the centre of a dark circle of burnt earth lay a pile of charred bones. The only pieces of the skeletons that were missing were the skulls... and the only reason they were missing was because someone had gone to great pains to line the severed heads up, in order of size, on spikes. Most of the flesh had been picked from the bones but she could still see places where the withered skin and hair clung on.\n\nYanamari turned her back on the gruesome scene and stumbled into the house, grabbing onto a table to steady herself.\n\nSomeone had murdered the whole family \u2014 the father, mother and child \u2014 and left them as a macabre warning to anyone who happened upon them. She choked down the bile building in her throat and glanced around the room. She knew she had to leave but she also knew she was in desperate need of warmer clothes and food.\n\nShe picked through what remained of the family's belongings quickly, trying not to ponder how many happy memories had been erased with each fell swoop of the murderer's sword. She found the mother's clothes fit her decently enough and she donned a thick, woollen skirt, muslin blouse and sturdy boots. She emptied the pockets of the Persian soldier's coat she still wore and swept the berries into a small earthenware pot. She loaded it into a linen bag alongside whatever foodstuff was unspoiled from the pantry and garden, and slung it over her shoulder.",
        "Yanamari's hand was on the door when she heard a creak from behind her. She turned around to see the door fluttering on its hinges at a slight breath of air.\n\nShe thought of the family, their bones left to bleach in the sun... She laid the sack of food on the table and walked outside. She looked around the garden for a spade but, when she could not find one, she dug with her bare hands. It did not take long for her to excavate a hole big enough for the family's remains.\n\nBut, when it came time to place the bones in the shallow grave, she found she could not. Something that felt like instinct held her hands back.\n\nMy people do not belong in the ground.\n\nA thousand reasons why she should not return to the beach immediately presented themselves at the forefront of her mind but she was following her heart, not her head. With sudden resolve, she got to her feet and went back inside the house, dumping the food she had collected across the table. She found a piece of clothing from each member of the family to wrap around their rotting skulls and carefully moved them from the spikes into the linen bag. She did not cringe as she slung the bag of bones over her shoulder. By the grace of all the gods she knew, she would deliver them to the great beyond.\n\nShe made once more to leave the house and that was when she saw it: The light spilling in from the ajar door had caught a scrap of grey fabric in its glow. She walked over and picked it up slowly. She had seen that shade before. Recently, in fact. It was the same colour that the Irlazken soldiers wore.\n\nYanamari shook her head: No, no... What crimes could a peasant family like this have committed?\n\nStill, she pocketed the fabric as she pushed through the door.\n\nShe made her way back along the meandering footpath, past the grove of gurbitz trees with their crimson fruits, and down to the sea once again.\n\nIt was hard to imagine that the waves that brought her ashore could have calmed so much in just a few hours. Though white peaks still adorned the cresting waves, the ocean that stretched beyond her now was a shadow of the mighty force that had torn the Raja to pieces the night before.\n\nShe walked out into the ocean and placed the bundle in the water, whispering a prayer under her breath.\n\n\"Bury me 'neath the flashing waves,\n\nThat guard my island deep,\n\nAnd let my spirit wander still,\n\nAnd let my soul never sleep,\n\nTill the mountains raise my land to me,\n\nAnd the stars fall from the sky,\n\nFor my heart is with Irlazken,\n\nAnd, by the grace of all the gods above, so am I.\"\n\nShe did not know where the words came from, nor not if they would have meant anything to the people she was burying, but they sounded right.\n\nYanamari let the bundle of bones go and watched as it sank and rolled away from her into the shadowy depths of the ocean. For a moment, she simply stood in the sea, feeling the cold water course around her legs and fingers.\n\nHow can such a threatening force feel like home?\n\nShe sighed and began wading back through the breakers to shore. She would make her way back to the cottage to gather the food stores she had left behind and \u2014\n\n\"Halt!\"\n\nThe command stopped her in her tracks. She turned to face the sounding voice and spotted an Irlazken soldier on horseback several paces down the beach.\n\nWithout a moment's more hesitation, she began to run. Her feet sent sand and surf flying up behind her as she sprinted for the staircase in the cliff. But the horse was faster still and she had only just reached the steps when a hand caught her arm.\n\nShe twisted away violently but instead of loosing his grip, the soldier tumbled off his horse and they both went headlong into the sand. Yanamari clawed at the ground as she scrambled to her feet but the soldier grabbed her ankle and yanked her back to the ground. She rolled onto her back and flung a kick at his head. The soldier grunted but his helmet did its job. Yanamari growled in frustration and kicked at the beach instead, sending sand flying into his eyes. The soldier cried out and instinctively let her go. She was on her feet in a moment, only to see another five mounted soldiers charging across the beach. Yanamari cursed under her breath and swung her boot into the soldier's stomach, knocking the wind from him. She sprinted back towards the staircase and began to climb. Below her, something knocked against the stones and clattered to the ground. Then another and another until one at last found its mark in the soft earth and stuck. She stopped in her tracks and stared at the arrow quivering just inches from her head. She turned around slowly. The soldiers on horseback had reached the base of the cliff and their arrows were drawn.\n\n\"Surrender \u2014 or this one goes through your heart!\" One of the soldiers roared.\n\nYanamari held her head high: \"I don't think your king would be very pleased if it did.\"\n\n\"And why's that?\" The sneering reply came.\n\n\"Because I am the girl you are searching for.\"\n\nThe men glanced at each other, their bows slackening ever so slightly.\n\n\"Be that as it may, I needn't kill you to slow you down and if my hand is forced you'll be the only one to regret it. So surrender and come peacefully.\"\n\nYanamari hesitated for a moment but she knew he was right. They would have to be the worst archers on Earth to miss her at such a close range and she did not much relish the thought of an arrow through her leg.\n\nShe climbed down slowly and allowed the soldier to tie her wrists behind her back. He pulled her onto the back of his horse and they rode down the beach until they came to a horse towing a carriage with small, barred windows.\n\nThey loaded her into the cell and bolted the heavy, wooden door shut. The carriage rocked into motion and Yanamari stumbled, crashing against the side of the cell.\n\n\"Fuck,\" she murmured, sinking to the floor. She rested her head against the wooden siding and cursed again.\n\nAgainst all fucking odds I made it here. Just to be captured because I \u2014\n\nBut she could not complete the thought. Her courage rallied and her heart swelled. She had delivered that family to the great beyond with dignity. If nothing else, she had done that. Perhaps they would thank her when she reached the great beyond herself.\n\nNow that I am in Ekaitz' hands, it should not be long now.\n\nBut she was not ready to surrender just yet. She stretched her fingers and felt around the bindings until she found the knot. For miles and miles as the carriage jostled along, she focused solely on picking the knot apart. Finally she felt it loosen and she lifted her freed wrists into the air.\n\n\"Yes!\"\n\nAt her exclamation, the carriage jolted to a sudden halt. The colour drained from Yanamari's face and she quickly looped the rope around her wrists and held them behind her in case the soldiers came to check on her.\n\nBut all at once a commotion sounded outside the carriage: She could hear men shouting, the sound of steel crashing as swords met. Arrows fell with a thud against the wood of her prison and frantic brays came from the panicked horses. They were under attack.\n\nAt the same moment she realised what was happening, the carriage lurched forward. She pressed herself against the wooden siding but there was nothing to hold onto. She felt the floor pitch unnaturally beneath her and suddenly the carriage tumbled onto its side. Yanamari cried out as she was sent flying. Rocks and dust came flying in through the narrow openings until the carriage finally ground to a halt.\n\nYanamari crawled towards the door and pounded her fists against the wood.\n\n\"Help! Please, somebody help me!\"\n\nShe heard footsteps and the jangling of keys before the door was wrenched open and two pairs of hands reached inside to haul her out.\n\nA masked figure stood before her and two more clung to her arms.\n\n\"Who are you?\" The masked warrior barked.\n\nA woman's voice.\n\n\"I \u2014 I am not telling you who I am until I know who you are and what you are to Ekaitz.\" Yanamari replied with more bravado than she felt.\n\nThe warrior seemed amused: \"You're not from around here, are you?\"\n\nShe stepped back and then commanded: \"Bring her.\"\n\nA bag went over Yanamari's head and, with a firm grip on each arm, she was hauled to her feet and lead on in darkness.\n\nFor miles and miles they seemed to travel. Yanamari could feel the landscape changing beneath her boots \u2014 soft grass now, forest leaves crunching beneath them another moment, loose rocks testing her ankles the next \u2014 and she was mightily grateful not to be barefoot.\n\nAs she settled in to the steady rhythm of the march, her adrenaline began to fade. All at once her exhaustion caught up with her, taking hold of her limbs and rendering them to lead. Her step faltered and, were it not for the firm hands on her arms, she would have lost her balance completely.\n\n\"I'm sorry,\" she murmured. \"I have not had anything to eat aside from some berries.\"\n\n\"It is not much further,\" came a voice to her right. Another woman.\n\n\"Who are you?\" She asked.\n\n\"Quiet!\" The voice of the first warrior she had spoken to came from ahead.\n\nGrudgingly, she obliged.\n\nTime passed in silence until the hands on her arms pulled her to a halt. Voices whispered just beyond her earshot and then she heard the grating sound of a large rock moving out of place. She was led inside what must be a cave or a tunnel \u2014 the air around her was suddenly damp and cold. The stone rolled back behind them and the darkness she was shrouded in grew darker still. All at once, someone pulled the bag from her head. She blinked as her eyes slowly adjusted to the dim light. For there was indeed light... the walls of the tunnel were glowing a faint blue.\n\nYanamari recalled all at once the tale of Mo and Noor and laughed in spite of herself.\n\n\"What's so funny?\" The warrior ahead of her snapped over her shoulder.\n\n\"Are you Qadir then, and these your forty thieves?\n\nA yellow glow appeared at the end of the tunnel and the warrior shrugged.\n\n\"It's been an age since I've heard that tale. But we might as well be.\"\n\nThey stepped out from the gloom of the tunnel into the warm glow of a bonfire. Shadowy figures pooled around the hearth, their voices seeming to echo. It took her a few moments to realise why \u2014 they were inside some sort of cavern. Towering manmade columns intermingled with nature's own architecture, stretching deep into the void. Some of the women were eating while others focused on sharpening the tips of spears and arrows. Yanamari could see the metal glinting in the firelight.\n\nThe warrior who had been speaking to her commanded silence by her very presence and the women quieted as she walked past them, leading Yanamari towards the fire.\n\n \n\nYanamari studied the faces of the women as her captors pulled her closer towards the light. The women were all of different ages and races but they each wore their hair long and braided with shells, bones, beads, flowers, and feathers. And each had a single coin dangling from an ear or braided into their hair \u2014 just as she did. They eyed her with the same amount of suspicion and curiosity that she was certain her own face was betraying.\n\n \n\nFinally, the women flanking her stopped and pushed her to her knees. The warrior ahead of them pulled off her mask to reveal dark skin and amber eyes that bore such an uncanny resemblance to Shariyar's that Yanamari had to steel herself from shuddering under their molten gaze.\n\n\"Who are you?\" Yanamari asked again.\n\n\"I will ask the questions,\" the woman said.\n\n\"Then ask.\"\n\n\"Why were you being held by the king's men?\"\n\n\"That I will not tell you until you answer my question: Who you are and what you are to Ekaitz?\"\n\n\"Why are you so concerned with Ekaitz?\"\n\n\"He wants to see me dead.\"\n\n\"Then we have that in common,\" the warrior said, a wry smile twisting her lips.\n\n\"What quarrel do you have against the crown?\"\n\n\"Only that it currently sits upon the head of a tyrant. You ask who we are \u2014 we are the doan jende. Rebels. Traitors. Outlaws. Our mission is to see that false king knocked from his throne.\"\n\n\"The doan jende \u2014\" Yanamari chose what she said next carefully: \"I have heard the rumours of how Ekaitz gained his power.\"\n\n\"And why do such rumours concern you? Who are you? Why do you wear the uniform of a Persian?\"\n\n\"I was a prisoner aboard the ship that was wrecked last night.\"\n\n\"Which ship?\"\n\n\"The Raja. She was a Persian vessel.\"\n\n\"What were you doing aboard that ship?\"\n\n\"I was a prisoner.\"\n\n\"Why? What did you do?\"\n\n\"I betrayed my country.\"\n\n\"Persia?\"\n\n\"Irlazken. Three Irlazken ships of war accompanied the Raja... but if they made it to shore safely, I know not.\"\n\n\"Three?\"\n\n\"Yes.\"\n\n\"For you? You must be one hell of a prize, girl.\"\n\nYanamari's eyes narrowed.\n\n\"If you are hoping to fetch a ransom for me then know that I would sooner die than be held by Ekaitz.\"\n\n\"Do you have a name?\"\n\nYanamari's jaw steeled slightly as she tried to weigh the consequences of telling the truth against those of lying.\n\nFinally, she said: \"Yanamari.\"\n\nMurmurs rippled through the crowd.\n\nThe cinder-eyed woman glanced around and then chuckled: \"The collective memory of a people is a strange thing. It is funny how little it takes to convince a people to forget their own history and the ties that once used to bind them together. It was not that long ago that Princess Yanamari was kidnapped from the very palace we are now sheltering beneath. But, in the years since Ekaitz claimed the throne, he has rewritten history with rope and sword. Now Yanamari is known as a traitor instead of the princess who sacrificed herself for the good of her kingdom.\"\n\n\"I do not know if I am her. My memories before five years ago are lost. I remember waking up a captive of the same pirate who kidnapped the princess. But he never called me by my name. When he abandoned me to the desert, I had neither speech nor sight. Those senses were returned to me by Daarkan magic, as improbable as it may seem.\"\n\n\"Magic is not so improbable to us. If you are an Irlazken woman, then magic is in you too. If you are our queen, then magic is your birthright.\"\n\n\"I can only tell you what I know,\" Yanamari said. \"But I have been told that my name is Yanamari. I heard the pirate speak of a man named Mikolas who I am told is my father... and that he is dead now, at the hands of Ekaitz, as is my sister. Perhaps none of this is true. Perhaps I am just another captive of pirate but I feel that I know this land.\"\n\n\"So they caught you when you washed ashore?\"\n\n\"No, I escaped at first but then I came across a murdered family and I \u2014 I had to take them back.\"\n\n\"Back to the sea?\"\n\n\"Yes. I do not remember the ways of this land. I hope I did the right thing.\"\n\nThe murmur of ascent that whispered through the crowd of women confirmed her decision.\n\nThe woman smiled: \"It was always said that Yanamari was a root-worker.\"\n\n\"What?\"\n\n\"A healer and deliverer of those beyond saving.\"\n\n\"Do you know why were they murdered?\"\n\n\"Ekaitz's soldiers make examples of those who cannot pay their taxes,\" came a voice from the crowd.\n\n\"Even children?\"\n\n\"Just so.\"\n\nYanamari's brow knitted in anger.\n\n\"You know that we cannot trust you. Not on your word alone. For all we know you could be a spy for Ekaitz.\"\n\nYanamari nodded solemnly and then her eyes widened: \"One of the Irlazken captains... He said he was working for the resistance. He gave me a map to find you. I do not know if he survived the wreck.\"\n\n\"His name?\"\n\nYanamari hesitated, wondering for a moment if revealing his name could do the soldier harm.\n\nAs if reading her thoughts, the warrior said: \"If he is a friend of ours, you can speak his name without fear.\"\n\n\"Deunoro.\"\n\nThe woman's lips softened into a slight smile and she nodded: \"A true ally to our cause. If there is any justice in the world, he has survived the storm.\"\n\n\"What did you do with the map?\" She asked after a beat.\n\n\"I destroyed it.\"\n\nThe warrior smiled: \"Well done.\"\n\n\"Then he told the truth?\"\n\n\"He did. And now we know that you do also.\""
    ],
    "authorname": "millennialfox",
    "tags": [
        "fantasy",
        "noncon",
        "romance",
        "reluctance",
        "historical"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/scheherazade-and-the-king-ch-09"
}