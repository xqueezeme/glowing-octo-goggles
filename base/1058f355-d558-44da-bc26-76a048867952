{
    "title": "Hunting the Hunter Ch. 08",
    "pages": [
        "Dear readers,\n\nOr those of you who yet remain, however few of you there are. I apologize for the dreadful wait, but here, finally, is the next installment of our story. It's been a rough year, so opportunities for indulging my authorial habit have been few and far between. \n\nHowever, I have already begun to continue, and intend to eventually finish the story, I just can't promise how long it will take. I'm sorry for that, but there's really nothing for it. \n\nThat said, if you're still around and enjoying the story, then I'm more pleased than you can know to have given you some moment of pleasure, however brief.\n\nYours,\n\nEnithermon.\n\n@@@\n\nNormally, she would never complain. \n\nNormally, she would preen and crow\u2014 gleefully skipping off to find someone's face to rub it in. \n\nBut sometimes not. Sometimes it just sucked to be right. Sometimes it sucked hard.\n\nShe said they should expect an attack. She said there was a good chance that they were going to triangulate in on their location. That it was going to be sooner rather than later. And voila! That's what they got.\n\nOnce Feric had taken Mirisa, Owyn, and Cyrus to check out the new headquarters for the hunters it hadn't taken the bastards long to make their move. N'chow s'wit fetchers!\n\nLucas had spotted movement, then come in to warn Bella. Moments later they were officially under siege. \n\nNow they had to find some way to be 'not' under siege. Unfortunately it didn't look like simply pummeling them into submission was going to be one of those ways today. The halls were narrow and there was a chance one or two of the little fuzzballs might get underfoot in the process. Ambrose was the only one with enough good sense to run for it. \n\nToo much was at risk.\n\nInanna growled as she shoved what she could in her pack and slung it across her shoulder, letting it bump lightly against her hip. Thank Azura for feathering spells. She also found the sword she'd stolen for Feric and tucked it awkwardly behind her quiver as well. She wasn't about to lose it to the likes of them.\n\nShe heard a distant shout echo in the halls and knew the place had been breached. Well, the seal she'd activated on the front door could only last so long...of course it didn't last long at all...which meant they had a magic user with them. She cursed as she skidded into the hall. Aina was already standing with the cubs at the far end, one of the fair haired twins in her arms, the other twin in Ambrose's. Mori and Talon were already in cat form and lurking behind the others.\n\n\"Good. Go!\" She hissed, pointing to the hall behind them, and in the direction of the gate to the lower levels. Aina only nodded and the others followed her without looking back.\n\nWhere the hell were Lucas and Bella? A snarl coming from another hall answered that question for her. She headed toward it, trusting that Aina was doing the smart thing and leading the little ones in the opposite direction.\n\nShe pulled an arrow and readied it, nocking and releasing it as she rounded the corner. It slammed into a hunter's shoulder. Lucas used his opponent's moment of pain and distraction to go for his legs. The man was wearing leather, so the cracking sound which filed the hall was probably the man's shin splintering into itty bitty pieces.\n\nOf course it was hard to hear over the screaming. Lucas twisted his head, still holding what was left of the leg and threw the slim man against the wall, knocking him out. Or killing him. She couldn't tell.\n\n\"Effective. But a little...ew.\" She muttered as she stepped over the crumpled figure. She slipped another arrow into her bow and aimed it down the hall. There was a flicker of movement, but whoever was down there was lingering around the next bend. She eyed the wall and tipped her head at Lucas. \"Get going. Protect Aina. She's got her hands full and needs her back covered.\"\n\nHe hesitated, no doubt torn between the urge to fight\u2014and more likely to resist any command Inanna gave\u2014 and the powerful urge to actually go and look after his girl. There was a reason she'd worded it like that instead of 'quick, run away!'\n\nShe was many things. But stupid? Not on your sweet life.\n\nShe shot him a quick look, \"If you don't protect what's yours who will, Shadow?\" \n\nThat seemed to be all the push he needed, and after what she imagined was a final twinge of resistance, he was off.\n\nShe turned her attention back toward whoever was lurking down the hall, grinding her teeth in annoyance. In the narrow and winding halls of the ruin it was impossible to tell how many there were. And since she didn't know where Bellane was, she couldn't exactly let loose with the crazy just yet. She crept slowly forward and cast a life-detecting spell and narrowed her eyes as two glowing spots appeared ahead and to the right.\n\nThere was a trap in the hall that Des had set up...a sort of shielding spell which could block physical matter as well as magica and keep them trapped where they were. But once again, she didn't know where Bellane was. \n\nOr did she? She saw another light appear ahead, from farther away. A startled shout confirmed it for her, and she ran ahead, no longer bothering with caution. Well, not too much caution at least. \n\nShe still led with the point of her arrow as she rounded the corner, her back pressed against the wall. \n\nThe two hunters really weren't paying her much mind, however, as there was a good sized lion skillfully holding their attention. The hunter closest to Bella was swinging a sword at the lioness to keep her at bay, while the second was drawing an arrow and taking aim. She didn't wait any longer than it took to register who was who and doing what. Her long-readied arrow nested itself deeply in the archer's back. Their own shot went off wildly down the hall as they dropped to their knees with a feminine cry of surprise and pain. A second shot finished the job.\n\nThe other hunter was better armored, and their back gave an archer little to work with. Thankfully, the fighter was still preoccupied with the lion and had barely flinched when their partner went down. Inanna docked her bow quickly and drew a dagger as she sidled carefully toward the man-shaped tin can. \n\nHer caution paid off and she wasn't caught completely off guard when the hunter wheeled on her as well, cutting through the air between them. Unfortunately he had a height advantage, and was lanky enough to make getting in close with a knife almost impossible, especially with the long blade he was wielding. What's more the confines of these halls meant she wasn't going to be able to use her speed to much advantage either. Where was she to go after all?\n\nThe one advantage they did have was numbers. He was obliged to keep two of them at bay...but this was an advantage which wouldn't last long if another hunter showed up. She cursed and pulled up her fire, wishing, and not for the first time, that she was better at distance magic. She worked up as much as she thought she could control, and hurled it toward him. \n\nIt hit weakly and did little damage. However, he stumbled, and the arch of his sword went wide, allowing Bellane to lunge. He recovered and swung again...but between the stumble and the second swing Ina had bridged the distance, and while the cat dodged the heavy blade, a much smaller blade managed to wedge its tip into the gap between his helm and cuirass. \n\nA well placed kick sent him to his knees allowing Bellane to join her on the safer side of the hall. And not a moment too soon. The life detection had worn off, but she didn't need it to hear they had more company closing in. \n\nThey retreated, though pausing to activate the shielding spell. It was then that Ina noticed the blood on her fellow's flank. \"Bella, can you heal that?\"\n\nBellane shifted and clutched her bloodied side, using the wall to hold herself up. \"It might take too long.\"\n\n\"Nah...this will hold. And I can supplement it while we're here. Go for it.\" She placed her hand over the inscription and focused her energy, letting it spill over and into the enchantment. She felt the surge of energy in the shield and it made her skin prickle as her magica fused with Des's. It wasn't a totally unfamiliar sensation.\n\nShe sighed. Mysticism did have its upsides occasionally. Messing with other people's spells and energy wasn't easy. For many it wasn't even possible. \n\nInanna watched the hall and focused on pouring more juice into the enchantment. She could hear them approaching and smirked when two more hunters came around the corner. The lanky hunter they'd escaped wasn't with them and she wondered just how much damage she'd done.\n\nThey shouted out to the others that they'd \"found them,\" and Inanna flinched as a spell crashed against the barrier between them. \n\n\"You sure it's going to hold?\" Bellane asked anxiously from behind her right shoulder.\n\n\"No worries Bella. I've got it.\" Well, there was some worry since they had a magic user with them, but now wasn't the time to be thinking about that. \"As soon as you're good, go after the others. I've got something going, but I don't want you to accidentally get caught in it.\" She was about to elaborate, but there was now a small group of hunters drawing slowly nearer and she didn't want to ruin the surprise. \n\nThe magic user, a Breton male from the looks of him was giving her dark look as he sent another spell hurtling toward her. She didn't like the feel of it. It felt like a dispel, and a decently strong one at that. If there weren't already two spells at play, it might have done a number on it. \n\nA moment later Ina sensed a familiar tingle of magica and knew that Bella had shifted. The expressions on the faces she could see confirmed it for her. Another moment later and she knew she was alone in the hall with the hunters. \n\nShe grinned maliciously at the Breton who was still pounding away with his spells, alternating between destruction and dispel magic. She grinned because she knew something he didn't. Unless he was a very subtle and clever practitioner, he was probably thinking that she was using some sort of alteration magic and was simply renewing the same spell over and over....creating new shields to replace the ones he was battering. Of course the fact that he was just 'throwing' spells at her, as if trying to break a window with a rock, indicated that he wasn't all that subtle. If he stopped to figure it out he might see what was going on, but from that distance how could he? How could he know that she was actually absorbing his own spells and using them to recharge the shield he was trying to destroy. Again, she wasn't about to start lauding mysticism, but she could admit it did have its rare moments...when one knew how to use it.\n\nOf course she couldn't keep it up forever. Channeling the offensive spells into the shield was still using up her own resources, even if it took longer. When she was confident Bella was well out of range she released her contact with the spell and slouched...just a little, and pulled out an arrow while backing away slowly. \n\nThe Breton took heart and began a fresh attack. The barrier came down three spells later.\n\nInanna loosed her arrow toward him and he parried it easily with a shielding spell of his own. The others began to close in as she drew another arrow. The second was blocked with a shield from one of the more combat ready hunters who closed in while the mage fell back in order to protect his delicate, unarmored hide. \n\nIt was a good thing he did. If he hadn't he might have noticed the way her lips were moving and might have been able to throw up a shield to protect his comrades as they closed in for the kill. One Redguard woman did get a flash of something like awareness in her eyes, but never had the chance to call out. Or at least, Ina hadn't heard her if she did. The roaring in her ears might have blotted it out.\n\nInanna shuddered as the growing ball of searing heat in her core grew to almost unbearable heights, condensing and tightening for a tense moment before exploding outward. It licked across her skin, along her limbs, and finally out and away, turning the space around her into a roaring inferno. \n\nShe fought to control the blinding flames this time, not wanting to empty herself completely since there was still an escape to make...but she was no proper mage, and it was a difficult spell to get a handle on once released. There was a reason its inventor had named it Wild Fire. \n\nFinally she managed to get some kind of control over it...pulling it back inside of her a little at a time. She tried to blink the dry heat from her eyes and stumbled back against the wall, forcing her senses back to work. She could see the writhing bodies on the ground...heard them groaning...one was still up\u2014 the mage. She tensed and reached for an arrow, but realized a moment later that he was shaken and cringing...still hiding behind a protective spell with his arms thrust over his head in an instinctive protective gesture. \n\nGood enough, she decided, and took off as fast as her rubbery legs would carry her. She felt drained, and her body ached from the abuse, but at least it wasn't desperate like the last time she'd used the spell. As such it was uncomfortable, and she was slower than normal, but it wasn't hard to get herself down the hall. \n\nShe veered left down a side hall and up a set of stairs, dodging a trap on her way, one which sensed motion at shoulder height, or head height on her\u2014something easily avoided by cats and those who knew where to duck. She cursed, however, as new noises indicated hunters on the move behind her.\n\nShe was able to get to the push block to open the gate, but dropping to the ground below was a challenge...what with an archer trying to aerate her on the way down. She dropped into a crouch and dive-rolled into the hall. The timed gate didn't come down as quick as she'd have liked so she decided not to wait for one of the morons trailing her to set off the traps on their own. \n\nShe only hopped that a well placed arrow would create the movement necessary to set off the trap. \n\nTurns out it wasn't. She swore again as a hunter caught up to her just as the gate was coming down. He was a sturdy fellow and alarmed her to no end by grabbing the bottom of the gate.\n\nShe felt her eyes go wide. His face broke into a fearsome grin as he stilled the gate and began lifting it. \n\nScrew that noise. She curled her lip into a sneer as her hand curled into a ball and lashed out through the bars of the gate\u2014bars set wide enough apart to accommodate her small, but very fast and very accurate fist.\n\nThere's nothing like a broken nose to shatter someones concentration. The gate came down with a crash and she took off down the hall...though not so carelessly as to set off the older Ayleid traps Des had reset for them. Of course they probably weren't going to be necessary anyway, she mused, as a telling rumble and vibration in the floor and walls let her know that the trap she had failed to set off was finally seeing action. \n\nShe wasn't in perfect shape by the time she caught up with everyone else, but she was certainly functional and bore nothing more than a few scuffs and bruises for her efforts. \n\nOnce they were together, she and Lucas led the way through the ruin, scouting ahead to make sure the route hadn't been breached. It hadn't.\n\nThere was one hunter guarding the inside of the door but he went down quickly underneath a well placed kick from above. A quick check showed a clear coast...clear enough to slip out and into the woods at least. Bella led them off, letting Inanna take the rear with her bow.\n\nBella shifted once they were hidden and it was safe to pause for breath. She cast a furtive glance around them and ran an anxious hand through her light brown hair. \"You were right.\"\n\nInanna snorted. \"Don't remind me. Now what?\"\n\nIt was a good question. They were on their own, with their biggest and strongest too far to be reached.\n\nThe Imperials had a saying: Divide and conquer. Divide your enemy in order to weaken them and wipe them out. Well, they were divided. But like hell they were getting conquered. Not if she had anything to do with it. Besides, there was another method of dividing and conquering. It's called flanking. \n\nThey could hide the cubs and split up...come at them from the sides...Lucas could help...and Aina for that matter. Maybe they could lead them to that clearing where she and Lucas practiced archery so often and take pot shots at them for a while...\n\n\"Take them, and go.\"\n\nInanna blinked at the woman. \"Wait...what?!\"\n\n\"We might not get away with so many cubs. We should split up. I can lead them away and buy you time.\"\n\n\"Ok....sure, but shouldn't it be the other way around? I can lead them off...\"\n\n\"No. Go! You have to protect them.\"\n\n\"I-ah, Bella, aren't you better equipped to look after them? I'm not really the mommy type, and\" she dropped her voice, \"if something were to happen to you...it's just better if I go. They need you, they can't lose you.\"\n\n\"No.\"\n\n\"No?\"\n\nBella reached out and gripped her shoulder hard. \"Where would I take them, Inanna? I know no one, I don't know where it's safe.\"\n\nInanna opened her mouth to argue, but nothing came out. She had a point. Dammit...this was too much...too much, too fast. Bullshit from her ancestors...this crap about mating...ambush...and now Bella. What if she...no, she wasn't going to go there. Survive first, then freak out. That's how this shit worked, right?\n\n\"Ok,\" she conceded with a sigh, \"meet us at the house...but approach with extreme caution. If it looks like it might have been compromised, even just a bad feeling, head to Chorrol instead. Go to the fighters guild. Tell the guild head, Modryn, that you're a friend of mine and Feric's. He'll understand.\" She took a deep settling breath. \"Are you absolutely sure about this?\"\n\n\"Yes. Just...\" she didn't finish, but her thoughts were writ large in her expression.\n\n\"Don't worry, I will. Like they're my own.\"\n\n\"Thank you...now go...we won't have long.\"\n\nInanna turned and looked over the several sets of wide shining eyes that looked back up at her. She was filled with a rare dread and uncertainty, and it made her broad grin feel oddly tight. \"Ok kiddies, adventure time!\"\n\n**\n\nIf the hunters had indeed followed them, then Inanna and the cubs led them on a merry chase. She sent both Aina and Lucas off, fanning out as they moved. If they were being approached from either direction they would be able to guard their flanks. \n\nIt seemed to be unnecessary, however, and after taking the scenic route they finally found themselves crouching along the North side of the city walls. The sun had been down for some time, and the moonless night gave them wonderful cover. Inanna slung off her pack and gestured for the others to come in close. \n\nLike all the houses she lived in, the city itself had a secret back door. Most people, even those who live there didn't know about it. She didn't know why it was there or who put it there...but it was well shielded. It was the shielding spell she'd felt which had tipped her off when she was out running in the woods one night. She'd caught a tingle from the spell and had returned to investigate. Of course the shield kept the entrance, a small hole in the wall invisible, but it also kept physical matter from passing through.\n\nShe pushed the additional brush out of the way to expose the gap...barely large enough for most to crawl through, but Lucas was the biggest of them and he was slim enough in build to get through...if tightly. She knelt next to it, holding her hands out in front of the invisible gap, just inches away, until she felt the buzz of energy against the palms of her hands.\n\n\"I'm going to open it...be quick...I don't know how long I can hold it. Stay where you are once you're through. If I don't make it, I'll come get you.\"",
        "She focused her mind as best she could and forced the spell back. It was too strong a spell to negate completely, but she was able to create a well of dispelling energy at the center of the gap, spreading it until it was large enough for the young lions to fit through.\n\nThey all managed to get through, even Inanna...though she felt the effects of over-extension once she released the spell. She was able to hide the effects of the back lash...for the most part. Lucas was eying her pretty good though as they made their way through the shadows. He must have seen her flinch or noticed something off. He was a clever boy that one. That and he made a habit of assuming people were up to something or hiding things. It was enough to make a Dunmer proud.\n\nBy the time she'd shepherded them in the back of the house and sent them upstairs to eat what they could find and sleep, she was too exhausted to do much more than crash into a chair with her feet on her desk and her aching eyes on the front door. \n\nShe didn't know how much time had passed before Aina and Lucas appeared in front of her. She glanced up at them. They looked apprehensive. Which meant Aina looked tentative, hesitant...and Lucas had narrowed his eyes suspiciously. She smirked at them. It was a tired smirk though, and they could see it.\n\n\"You're exhausted. Go to sleep.\"\n\nShe arched a brow at Lucas. \"Awfully bossy aren't we, Shadow?\" He scowled. She was really going to have to teach him some new facial expressions. Just because you're suspicious of everyone doesn't mean you have to look it. In fact, it's better if they don't know and think they're getting away with something. Made it all the sweeter when you corrected their ignorance.\n\n\"Ina...\" Aina began gently. \"It...you had to hold them off at the ruin. Lucas said it was difficult for you to open that passage through the wall as well. We've both slept a little today already...\"\n\nInanna smiled a little more gently. They meant well after all. \"It's fine. I've had worse.\" And she had. Much.\n\n\"I'm...I'm sure you have,\" she continued, a little bolder, though she still looked cautious, \"but don't you think it might be better, more prudent...\"\n\nInanna sighed when she trailed off. \"Aina, what are you afraid I'm going to say?\"\n\nShe looked confused. \"I\u2014afraid?\"\n\n\"Yeah, you look like I'm going to bite your head off or something. Do I strike you as unreasonable?\"\n\nAina paused, then let out a chuckling sigh as her shoulders relaxed. \"I don't know, \"she shrugged, \"I guess...I mean it sounds petulant to say out loud...but no one listens to me.\" She gave her a helpless smile. It faded when Inanna didn't smile back.\n\nInstead she pulled her heels off the desk and leaned forward with her hands on her knees. She pointed up stairs to where the little ones were probably piled up in her bed. \"They do.\" She pointed to the lean, dark, young man standing at her shoulder, \"He does. Talk to us like you do to them. I've heard you talk Mori and Talon out of any number of stupid ideas.\"\n\n\"They're children...it's different.\"\n\n\"It might be if you sucked at it. But they respect you.\" She sighed, suddenly feeling way too tired....not herself. She rubbed her eyes with one hand and leaned back in her chair. \"Look...\" She began again, \"Pretend I'm...say, Ambrose, and that you're explaining to me why practicing with exploding mage lights in the same room where Mirisa is trying to get some sleep, is a bad, and possibly life threatening idea.\" She paused as Aina chuckled, remembering the exact incident she spoke of. \"Reason with me.\"\n\nAina smirked and shook her head, bemused. \"Ok...ah...all right.\" she straightened and put on her game face. \"Inanna. Do you really think it's wise to take first watch when you're clearly exhausted and at risk of overextending yourself, especially when there are two willing, comparatively well rested, and competent individuals who are offering to do it? What's more, if your abilities become compromised, how do you propose to keep track of five cubs and the two of us?\" \n\n\"Of course I don't think it's wise. I already knew it wasn't.\"\n\nAina blinked. \"So...why are you?\" Her game face slid off and she frowned. \"If you knew that why didn't you ask?\"\n\nShe smiled and shrugged. \"Like I said, I've had worse. It's my job to look after you all and make sure you're safe. I'm not just going to fob that off on someone else.\"\n\n\"You had us flank you on the way here.\" She pointed out.\n\n\"Necessity. But this isn't me questioning your competence. It's not that I think you can't do it...I just perceive it as my responsibility, especially since you're under my roof... so it might not occur to me to ask. If you were Bella or Mirisa, I'd probably have done the same thing.\"\n\n\"So...you're being unreasonable then?\" She looked confused. Inanna smiled tiredly and stood. \"No,\" she stretched her arms over her head and yawned, \"unreasonable would be if I didn't take you up on your perfectly reasonable offer. I was just being...mortal.\"\n\nThey both looked at her askew. Man was she tired. \"Ok, I'm going to go join the pile.\" She was half way up the stairs and called down to them, \"But if I get murdered in my sleep because you two were busy necking, I will haunt you both for eternity.\"\n\n\"Kynareth forbid.\" Lucas muttered. Aina giggled softly. Ina smirked and made her way to the bedroom. \n\nBig, soft bed, how I missed thee. \n\n***\n\nCold...the air was so cold...ah hell...sonofabitch.\n\nInanna opened her eyes, and not happily. She felt like she'd just gotten to sleep, and now this crap...\n\nBlearily she looked up at the dark figure hovering in the shadows near the foot of her bed, illuminated only faintly by the light filtering in from the hall.\n\nHis voice was barely a whisper. \"How sweet. I didn't picture you as the maternal type...but I suppose first impressions can be deceiving.\" He smirked, then raised a brow. \"Though I'm a little unnerved by your choice in pets.\" As if in response a large, tan head rose up off the covers and turned to stare at the intruder, blinking grey, almond shaped eyes. \n\nInanna glared, then very carefully disentangled her arm from Sonja who murmured a protest from beneath a mass of blond curls, but otherwise seemed to be sleeping soundly. \n\n\"It's ok, luv, I've got this.\" She murmured to the young lioness who was now making a low growling sound.\n\nMori cocked her head curiously and watched as Ina shuffled out of the bed, still glaring a hole through the cloaked figure. Ina let out a low growl of her own to complement her glare. The figure eyed her carefully but didn't make any move.\n\n\"I can't begin to tell you how not happy I am right now.\" Inanna whispered.\n\n\"I can imagine.\" He returned dryly.\n\n\"Hall.\"\n\nHe nodded and she followed him out, closing the door carefully behind her. Her eyes darted toward the stairs as he turned to look at her. \n\n\"They're awake...I came in through the pantry window.\" She nodded.\n\n\"Alright., Either I'm on your hit list or you have a response for me about the guild.\"\n\nHis smile was polite, but no less cold than it usually was.\n\n\"Response. For now.\"\n\n\"You know,\" she whispered harshly, \"I'm having a very bad day, so please don't start with me.\"\n\nHis icy smile remained perfectly even, as if she'd never spoken. He slid his hand beneath his black robes and retrieved a black envelope. She took it, feeling the leather and marveling at how soft it was. \"Please deliver this post haste, and be warned that it has been enchanted to incinerate itself within a quarter of an hour after it has been opened.\"\n\n\"Paranoid much?\"\n\n\"We wouldn't want it falling into the wrong hands, would we?\"\n\n\"I hate to tell you this darlin', but we are the wrong hands.\"\n\nHe chuckled...and the sincere amusement she heard surprised her. \"Yes, I suppose that's true enough.\" \n\nHe glanced toward the window he'd supposedly come in through. \"I should also warn you that there are at least two other contingents who had the same intentions as I this evening.\"\n\n\"Come again?\"\n\n\"There is a skittish looking gentleman who has been watching the house for the last hour, no doubt waiting for the young persons down stairs to go to sleep. Just as he arrived, I saw another slip off and leave the city. From what little I saw it seemed your home was being watched with interest. If it had been one of my operatives I would say they were going to inform their superior that something of great interest had occurred. Of course that's only supposition on my part.\"\n\n\"Bloody Murder.\" She whispered, shaking her head. She glanced up at him. \"It never rains but it pours, doesn't it?\" She huffed out a breath. \"Thanks for the heads up. You'll be happy to know I'm leaving now, and taking the letter with me.\" She glanced up into the darkness of his hood. \"You didn't happen to get a look at the twitchy guy, did you?\"\n\n\"Medium height, slight build, no cloak, short brown hair, imperial by the looks of it, with a slightly pointed looking face and eyes that are just a touch too close together. His posture gave him the air of a thief. The first operative was cloaked, and frankly, better at his job...meaning he left little in the way of a description. He had a heavier and broader frame than the first. But he was both stealthy, and probably a passable fighter based on his build and ease of movement.\"\n\nShe nodded. \"That's what I figured. It's that first one which worries me...not that you care.\" She smirked dryly at him. \"Well, your job is done. Consider your message delivered...unless I die, in which case I'll make my apologies directly to your boss.\"\n\nHe chuckled again at that. \"I should be sorry to miss hearing that conversation.\"\n\n\"Yes, well I'd rather it not happen at all, thank you kindly.\"\n\n\"Indeed. So you'll be leaving now then?\"\n\n\"That's the plan, as soon as I rouse the rug-rats.\"\n\n\"And you'll be able to escape undetected with so many children?\"\n\n\"You'd be surprised.\"\n\n\"What of the thief?\"\n\n\"I'll have to deal with it I suppose.\"\n\n\"Would...you like a hand with that?\"\n\nShe paused and eyed him carefully. He just stared back at her with those black, cold eyes. She shrugged. \"Sure. I don't trust him, so I'd rather he not have a chance to see what I'm up to. And I doubt he could tell me anything I don't already know at this point.\" She cocked a brow at him. \"I'd rather we don't have any unexplained deaths in the morning though. Or any deaths for that matter. Plus if he's guild then finding one of their operatives with a brotherhood blade in his back wouldn't be a good start to a budding professional relationship.\"\n\nHe made a sour face. \"I really hope you don't think we'd leave evidence. We are professionals after all.\"\n\nShe conceded the point with a nod. \"Yeah, fine. That's your rep. I still don't want him dead. Just...scare him off. I imagine that wouldn't be much of a challenge for you.\n\nShe could see the faint smirk hovering at the corner of her mouth. \"And you trust me?\" He drawled.\n\n\"I trust that you're motivated by two things: getting the job done and where ever possible giving people the willies in the process. I also trust that you're professional enough to prioritize those two things in a respectable manner.\"\n\nHe nodded. \"This is business after all....and I am very good at my business.\" He smoothed.\n\nShe rolled her eyes. \"See there you go, professional...and then creepy.\" He really was. \"I hate to admit it...but you're obviously good at what you do, on both accounts. Lucky for me that actually comes in handy in this instance.\"\n\n\"I'm flattered.\" He bowed slightly, half mockingly.\n\n\"Sure you are. Ok...give us... 10 turns? We'll slip out the back.\"\n\n\"The back?\"\n\n\"Yeah, hidden doorway...I won't live anywhere without one.\"\n\n\"Prudent. Though I'm surprised I hadn't found it.\" \n\n\"It worked then, didn't it?\"\n\n\"Ina?\" A soft voice whispered from behind her. Lachance tipped his head as his eyes slipped back over her shoulder to peer impassively down at the girl. Inanna turned back to look as well. She was standing, naked as an imp, in the door way. Her hands were on her non existent hips and her frizzy orange hair framing her frowning face. \"Are we leaving?\" She cast a pointed glare at the new comer. Ina smirked mentally....he was the bearer of bad news after all.\n\n\"We are. Go back inside while I finish up.\"\n\nShe ignored the command and squinted up at the hooded man. \"Who're you?\" She demanded, crossing her arms over her chest. And doing a pretty good impression of an irritated Mirisa. The tough girl routine was cute, but it really wasn't the time for it. Before she could say so, Lachance stepped forward and stunned her into silence by pulling back his hood and bending down on one knee to bring himself to the girl's eye level. \n\n\"I am Lachance, speaker and assassin for the Dark Brotherhood.\" He held out a hand. She eyed it warily then shook it.\n\n\"Mori. What's an assassin?\" The movement shook Ina out of her shock and she stepped forward instinctively to put herself between them. Her alarm wasn't unwarranted...even if he wasn't a professional killer, there is something implicitly unnerving about the sight of a strange, armed, cloaked man and a 10 year old girl. All that vulnerability should never be so close to all that pure menace.\n\n\"Hey,\" she hissed, \"get away fro--\"\n\n\"It's ok.\" Mori looked up at her. \"He won't hurt me right now.\" She looked him in the eye as if daring him to prove her wrong.\n\nInanna frowned. \"Mori, an assassin is a murderer. His job is to hunt down and kill people.\" She explained and held out her hand to the girl, encouraging her to come over and take it.\n\nMori frowned and Ina felt sure she understood. She shook her hand at her. Mori ignored it. \"Isn't that what you do?\" Or maybe not. Inanna sighed.\n\n\"He's a hired killer. It's different. He does it for money.\"\n\nThe killer in question chuckled and rose to his feet. \"She may have a point, Madam. As you said, we are both of us the 'wrong hands,' are we not? We serve the void in our own ways.\"\n\nShe wasn't sure what button he pushed, but she knew it when she felt it and hardened her eyes. \"I don't care what you think you know about me. You know nothing about who or what I do or don't serve. Don't forget that. Also, shut up, no one asked you.\"\n\n\"Wait, people pay you? Why?\"\n\nHe raised a brow at Mori, then made a show of musing over the question. \"Why? Why does anyone want to end the life of another? Money, power,\" he smirked, but his eyes turned icy, \"the pleasure of exercising your complete and unequivocal control over the life of another...\"\n\nIna rolled her eyes. Mori made an irritated noise, as if to say the stupid assassin just wasn't getting it. The sound inexplicably comforted her. \"No, no. Why don't they just do it themselves...why would they let someone else do it? Are they like...big babies or something?\"\n\nInanna had to chuckled at that. She knew she should be pissed at Lachance for talking to the little girl like that, and that she should be getting said girl as far from the creepy murder as fast as possible...but it was kind of funny. Big babies indeed. She flashed back to the disgruntled look on Mori's face when she had been kept from finishing off that minotaur. That's my Mori for you, she thought with another chuckle.\n\nThe assassin chuckled as well. \"And I suppose you do your own killing then?\" \n\nMori pouted slightly. \"They won't let me. They say I'm too young.\" Then she brightened for a moment. \"I killed a hunter once ...\"she frowned once more, \"he was kinda small though, might have been a wood elf actually...so does that count?\" She looked up at them, her face bright and hopeful.\n\nIna caught the smile on the assassins face and decided it was the kind of smile she wouldn't mind punching off. It looked a little too pleased...a little too knowing. She knew what he was probably picking up on, and didn't want to go there...not yet. She knew the girl was probably going to walk down a dark path...but there was no reason she couldn't enjoy a few last rays of sunlight...even if they were fleeting.\n\nShe answered 'no', and he answered 'of course,' simultaneously. They exchanged acrid looks. \"I know a Bosmer or two who might take umbrage with that,\" He murmured. She just kept glaring.\n\n\"Go back to the room, Mori.\" She repeated dully without breaking eye contact with the assassin. Enough was enough. \n\nMori must have sensed the shift in mood and this time she obeyed.\n\n\"'Did you notice she said I wouldn't hurt her 'right now'? Clever girl. And so precocious.\" He commented once the door had closed.\n\nShe glared. \"You even think of touching her and I'll cut that pervy dick of yo--\"\n\nHe sneered and held up a hand to stop her. \"Please, that's not the sort of preciosity I speak of.\" There was distaste all over his face. \"I have no such base inclinations.\" \n\n\"Yeah, well, consider yourself warned. And don't fetching try to recruit her either.\"\n\nHe shrugged. \"She's too young yet anyway. I make it a rule not to recruit anyone under 16.\"\n\n\"Oh, joy.\" There was something to look forward to. It's not like 16 year old girls weren't already enough trouble to keep tabs on. She could picture it now...an exasperated Max dragging home a bony, teenage Mori, and she looking between the two of them asking \"tell me it's just petty theft...or pregnancy! Please Azura let her be pregnant!\" And then her having to hunt Lachance down and repeatedly introduce his face to a special made pair of steel boots. For that she'd bend her rules and wear heavy armor. Totally worth it. She could feel the dark, satisfied smirk creeping across her features.\n\n\"Why Madam, are you having homicidal thoughts about me?\" His voice was suddenly velvety...darkly seductive, as if he'd just caught her thinking about fucking him instead of grinding his face beneath an Orcish boot. Ugh. Gross. Only he would turn death threats into a come on.\n\n\"Sorry, nothing kinkier than aggravated assault.\" She returned blithely.\n\nAn ambiguous, \"Hm.\" Was his only response. Fetcher. There was a pause and he tilted his head toward the door. \"What are they, exactly?\"\n\nShe eyed him for a moment. \"They're special.\" She finally answered.\n\n\"I take it all these shadowy figures aren't lurking here for your benefit then?\"\n\n\"Only you, handsome.\"\n\nHis lip twitched slightly at that. \n\nHe nodded then, and slipped back into the shadows of the hall. She in turn ducked back into the room and hissed at the sleeping figures. \"Rise and Shine kitty cats, we've gotta get a move on.\" She saw two sets of gleaming eyes watching her in the darkness. \"Ambrose, Mori, get them up, we have to get out of here, it's compromised...and let them know it has to be quiet. Lions only...we're playing a very important game of hide and seek.\"\n\nA moment later they were all downstairs, waiting for her. All but Mori who watched at she dressed and fished out as many useful potions and trinkets as she could find in her cupboards and drawers. There weren't as many a she'd liked, but they were good for emergency use. Mostly to do with healing. She wasn't worried about taking much food...they could hunt just fine if it came to that. She was worried about the safety of the cubs though. Lucas, and Aina could take care of themselves, but it was quite a burden to ask them to watch their own backs and those of the little ones. She glanced at Mori who was still laying on the bed watching her, hers eyes shining in the darkness.\n\nMori could fight as well, if it came to it. But she was still so young, and so inexperienced...even natural ability would not be enough. If she were Dunmer she'd have other abilities to call on...but she wasn't.\n\nIna licked her lips and glanced again at the cat. But she could be. Now there was a thought. If anything happened to her, it would certainly give them an added advantage.\n\n\"Mori, would you change for a minute.\" She sat up. In the darkness the shift seemed even eerier. She wasn't sure she'd ever get used to it...it was as though their very reality seemed to blur and fuzz, as if you were looking at them through water, and then the blurred lines shifted and rearranged themselves only to solidify as something totally different. \"Does that hurt at all?\" She asked curiously.",
        "\"No. Why would it?\" She asked softly, turning to sit cross legged on the bed, pushing her orange-red hair back behind her ears.\n\n\"Just curious.\" She knelt before her and pulled a knife from her belt. \"Here, give me your hand.\"\n\nShe did it, but she was looking warily at the knife. \"What are you going to do?\"\n\n\"I'm going to cut both of our hands and press them together, then say a few words.\"\n\n\"Why?\"\n\n\"It's how we adopt people. I'm going to make you an Ashlander.\"\n\nShe smirked. \"Just by saying a few words? Is it a blood magic thing?\"\n\n\"No, it's an Ashlander thing. It would take a long time to explain, and I don't have a lot of time to explain right now, but I will.\"\n\n\"Like how Desdemona is your sister?\"\n\n\"Just so.\"\n\n\"Ok...but why me?\"\n\nShe smiled at that. \"I've technically already claimed all of you to my ancestors. And where I'm from, there are no such thing as orphans in a clan. You always have parents. When you lose the originals, someone else will step forward and claim you. No one's claimed you yet, so I'm going to do it.\"\n\nShe narrowed her eyes. \"What about Ambrose? Or Lucas? You could pick him instead.\"\n\nShe smiled even wider. \"Two reasons...well one reason which doubles as two. You're a fighter, a special kind of fighter...my children inherit my ancestral guardians and if anything happens to me before I can get you to a safe place, then they can help you protect the others and watch your back. It also means that there's more I can teach you. I like Ambrose...but I wouldn't be much use to him. And while I try to help Lucas where I can, he's all grown up. And we both know he has Aina. Do you understand?\"\n\nShe looked hard at her for a moment, then thrust her palm out. Inanna took her hand in hers and brought the blade to her palm. She paused there and looked up into the girls eyes. \"You're sure?\"\n\nThere was a little fear around the eyes, but her jaw was set. She nodded. Inanna nodded back and winked. \"That's my girl.\"\n\nMori giggled nervously, then let out a little squeak of pain as the tip bit into the skin. Inanna cut her own hand and took her hand in hers again, this time palm to palm and closed her eyes. She held her other hand over the two and murmured a few words in Dunmeri. She released her hand and smiled.\n\n\"Welcome to the family Mori\"\n\n\"That was it?\" She looked curiously at her bloodied hand.\n\n\"Yep.\"\n\n\"Is it ok to heal it?\"\n\n\"Sure. Now change back...we have to get a move on.\"\n\n**\n\nFeric growled as the muscles of his neck and back twitched and tightened in response to the sight before him. They had traveled all day, slept fitfully, then attacked before first light expecting the hunters to be groggy and unprepared. They had been. All five of them. All five who now lay dead in the halls behind them leaving the main hall of the fortress standing empty. He shifted and turned to the lioness who'd entered the room from the one of the side doors. \"Anything?\"\n\nShe shifted as well. Her expression as dark and threatening as the vibrations she was giving off. \"No. Nothing. Though there should be many more if the barracks were any indication. A lot more.\"\n\n\"Then where the hell are the rest?\" He snapped. \n\nShe gazed back at him silently. \n\nThey should have turned back. When they felt it, they should have turned back. He could have ordered it...but he didn't. He knew his brother-in-law had felt something as well...he'd seen it in his eyes. Something was wrong...now they knew what. One hundred septims said those bastards were at the lair. \n\n\"We're leaving.\"\n\n\"I don't think so.\"\n\nHe turned at the sound of the unfamiliar voice and saw a somewhat familiar face. It was the mercenary, the one from the night Inanna had tried to hide him in her place by the Imperial city. There was something about those eyes that was hard to forget. They were like stone.\n\nMirisa shifted instantly into her lion form and snarled. He held out a stalling hand to keep her from leaping. Something wasn't right. He couldn't smell anything...but then he hadn't sensed the man approach either. Without taking his eyes off the man in the doorway he leaned down to retrieve the fallen sword of one of the dead hunters.\n\n\"He's not alone.\" He warned her. She was watching the mercenary, so he let his eyes scan the walls around the doorway. He almost missed it, but something fluctuated near him, as if the air itself had taken shape...a human shape. He dodged and raised the sword almost instinctively. The jar of blade against blade could be felt all the way to his teeth. \"Chameleon! They're blocking their scent and using chameleon.\"\n\nShe snarled again and he felt rather than heard her response. Apparently she was already well aware of the fact. He didn't have much time to think about it as a second figure came into his field of vision. It was easier to spot them now that he knew what to look for, thankfully chameleon wasn't true invisibility...but then unlike invisibility it didn't falter when they attacked either so it wasn't exactly something to celebrate. He managed to dodge the newcomer as well and got enough of a hit in on both to determine one hunter was wearing light mail and the other plate. He darted away, throwing the sword toward them and shifting as he moved. \n\nHe roared out a retreat and made for the door. Mirisa was close on his heels when another hunter came between them, slicing the air with a blade. Thankfully it hit stone and not flesh as Mirisa danced back. \n\nHe twisted himself, lunging at what he thought was a leg. It was, and though the chain mail jarred his teeth and made his jaw ache, it wasn't enough to keep the bone and muscle beneath from being crushed. He used his grip to toss the now screaming hunter towards a mass of shifting air trying to close the gap between them and the exit. They pushed them back enough for Mirisa to slip through. \n\nA yowl of pain let him know they'd nicked her as they closed in again. \n\nHe saw at least two follow her as several more closed back in on him, forcing him to back away lest he too be caught by an unseen blade. There was another door at the far end of the hall...it looked like he might have to take it.\n\nHe darted away, moving too fast for them to keep up, and shifted at the last second. He slammed into the door as a man and winced as his shoulder met one of the iron rivets. Luckily it creaked open at the force and he tumbled through inelegantly only to shift once more in the murky darkness. \n\nHe sheathed his claws so that they made no sound as he bound down the damp stairwell, and his eyes adjusted quickly to the darkness. The air was stale and smelled of dust and old death. Very old. This place was not often disturbed...and there were things still here, wandering the crumbling corridors. None of them living.\n\nHe could hear a clamor at the top of the stairs and slowed, slipping through the shadows so as to not alert whatever was haunting this place. With any luck, the hunters would do that for him. \n\nLuck was with him, apparently, and he spotted several broad stone overhangs from which long empty censors still hung. It didn't take much to climb up with all the pitted walls and rubble laying about. Once he was high enough that even the light of a lamp would be hard pressed to reach him, he settled in, examining the dark corridors and crumbling architecture with a hopeful eye and strategic interest.\n\nHe didn't have to wait long for the main event to arrive, though it worried him that there were far fewer than he had anticipated. \n\nHe considered that it might be enough to simply wait them out. He was no expert on the subject, but he'd been around long enough to know that the level of spell they were using was only something only a master illusionist could use. He doubted very much that all of his opponents were capable of such high level spells. Which meant they were using some sort of enchanted item, which again was more likely but that many powerfully enchanted items seemed rather unlikely. If it were a potion or a spell scroll, then it would run out eventually. \n\nThen again he had no idea just how badly Mirisa was injured or what had become of the other two. Biding his time wasn't necessarily an option if one of them were seriously injured.\n\nHis tail twitched in restless anticipation as he watched the fleeting shadow forms moving beneath him.\n\nHe thought he counted four, but it was difficult to tell. All four disappeared, moving down the corridor and deeper into the catacombs. \n\nStill he waited, trying to ignore the sound of his heart pounding in his chest as his ears and eyes strained for any sign of a hidden body.\n\nHe had just about given up when a figure flickered into reality in a far corner, then vanished as suddenly as it had appeared. His muscles jumped beneath his skin at the start, but he was able to restrain himself from making a sudden move or sound.\n\nAll he'd seen was a glimpse out of the corner of his eye. Enough to know the hunter was crouched and not overly large. He also thought he had seen a blade in its hand, which meant it probably wouldn't be using arrows. He licked his lips and leapt silently to the ground, watching in the opposite direction of the figure, as if looking for the figures who had vanished down the hall. However, his senses were trained in the direction of the hunter as he waited for it to approach. \n\nHe was rewarded with the faint sound of a leather sole on rough stone....five feet to the right he gauged. He slowly hunkered into a crouch\u2014slowly so as to not startle the creeping figure drawing ever closer. \n\nThe blur...blurred, for lack of a better term, as the figure lunged in toward him, hoping, Feric guessed, to put a blade between his shoulders. Or perhaps between his ribs, he reconsidered as the blur tipped downward.\n\nFeric twisted at the last second and lashed out, catching leather and flesh with his claws, and even more with his teeth. The crack of bone blended with the scream as the figure, a slender human male, became suddenly visible. There was a moment of confusion as the man stumbled back, releasing his knife and clutching for the arm no longer there.\n\nFeric locked his jaw back around his shoulder and neck as he fell, and twisted his head sharply, sending the man flying into a nearby wall, silencing him. \n\nShouts rose up in the darkness around him. He glanced toward the exit and hesitated. It was too far...and now it was too late, he added mentally, cursing himself for the moment of doubt. There was no time for that.\n\nHe turned toward the darkness and was suddenly afraid. How would he fight what he couldn't see? How long would luck carry him through?\n\nAnd then hope. A glint of gold on a bloodied hand. This time he didn't hesitate.\n\nIt was an easy thing to snap off the man's finger, not as easy to hold it in his jaws as he climbed back into his hiding place. \n\nHe shifted and made a silent prayer to Kynareth as he slipped the ring onto his smallest finger. It was tight, but it went on...and nothing happened. \n\nPanic gripped him as the sound of steel and leather against the stone floor began to sound out beneath him. His mind flashed back, looking for something to help him. He'd never used an enchanted item like this before...never used magic...no! Ina! He'd healed Ina!\n\nHis tongue darted out to lick dry lips. Focus...she'd said focus...turn it outward...\n\nHe thought of healing, of shifting, how it felt...how it moved in his veins and muscles...and turned it outward...toward the ring.\n\nHis eyes had been closed. They were still closed as he listened to the voices beneath him turn from surprise, to anger, to frustration. They were going...fanning out, and heading toward the exit.\n\nHe looked down at his hand and found he couldn't quite see it. It was eerie. He moved it slightly and watched as the air seemed to ripple and shift. It wasn't perfect, but if he held still it would be enough.\n\nHe moved after them once he was sure they were out of eyesight. He wasn't worried about them hearing him, very few ever could....even in this form. It was that thought that gave him pause however. He was feeling somewhat exposed, naked and unarmed as he was...but if he shifted he would no longer be hidden from sight. He suppressed a growl of frustration and pressed on before he could change his mind. \n\nHe still didn't know where his people were or what they were facing, and until he did there would be no time to sit and worry. \n\n**\n\nThe sun was already past its zenith when she finally decided it was time for a prolonged rest. There had been a pause or two to let the little ones sit. More than a few times the twins just had to be carried, but Talon and Mori and Ambrose didn't have that luxury. In their defense they'd all been troopers about it, and even the itty bitty ones were somber and quite, and always careful not to give themselves away. Perhaps they understood the danger, or perhaps they were just frightened...either way, they'd earned a break ten times over.\n\nIt didn't seem like they'd been followed. Every now and again she hid them with Aina and she and Lucas doubled back. Aina seemed to understand her reasoning for leaving her with the cubs, or was at least being a good sport about it. They never caught anything more troublesome than an actual mountain lion who had caught their scent and was following both out of curiosity and very likely territorial interests. It didn't take much for Lucas to discourage that curiosity. Even though he was young he was still full grown and easily outclassed the unwitting creature.\n\nShe'd also gotten jumped by a rouge troll while she was on one of her doubling back missions...but that had been almost fun...a little well earned stress release. Nothing like a little Troll flambe, extra-crispy.\n\nShe found a small clearing backed on one side by a few high rocks and on another by a convenient drop off. If anything showed up, they'd only have two directions to come at them by. Thankfully it had been a relatively uneventful trip thus far...but that could only last so long. \n\nOnce she'd cast detect life a few times and was sure all was well, and the smaller cubs were settled near enough that she could keep an eye on them, Inanna set herself down for a moment of much needed rest. The lack of sleep was starting to make her a less than perfect guardian. She sighed. They'd need to find a place to hole up soon enough or she was going to slip. As much as she wanted to keep pushing on, it just wasn't going to happen. \n\nPlus this whole cheery, everything is going to be ok act was getting a lot harder to keep up. \n\n'Cause it really wasn't. All it would take was a pack trolls, or a couple of rowdy ogres, and they were done for. It wasn't a happy thought....nor were the thoughts she was trying not to have about Bella. All she could do there was pray. Which wouldn't do her much good in this case since her ancestors were being jackasses.\n\nMori had separated herself from the group of cubs and trotted toward her, shifting as she came, and squatting in front of her. \"Are we sleeping here?\"\n\n\"No, too open...I just thought we could use a rest.\"\n\nShe nodded. \"I'm getting tired.\"\n\n\"Me too. Hey,\" she nodded to her, thinking of something which might distract the girl from her tired body and the potential crankiness it could cause, \"sit down here, there's something I want to show you.\" She picked up a stick and leaned over a patch of bare earth, scratching four characters into the dirt.\n\n\"What's that?\"\n\n\"That's your name. Phonetically at least. That's Meht, Oht, Roht, and Iya. I think most of the languages are spun off another more ancient language, so they have a good deal in common. At least the human and elven languages seem to have come from something which is somewhat related to Daedric languages so the alphabets match up...with half a dozen minor exceptions. In my home lands the alphabet at least is still essentially Daedric in origins. \n\n\"Here, you try. Spell your name.\" She picked up another stick and handed it to her.\n\n\"Why?\"\n\n\"I'm teaching you.\"\n\n\"Why?\"\n\n\"That's what I do, isn't it?\"\n\n\"I don't know. Why would you want to? What good is it?\"\n\n\"What good is anything? You never know when something is going to come in handy? And I'm your mother now. It's my job to make sure you know how to survive. So I teach to you everything that I know. Isn't that how this works?\"\n\nShe just looked at her. Inanna sat and waited for a response. \n\n\"You were really serious about that?\" \n\n\"Yes.\" Inanna held her breath...half expecting her to get upset or give her an 'I don't have to listen to you,' 'who do you think you are' rant. It's probably what she'd have done...in fact she did it a lot as a kid. And got her ass whupped for it too. She learned pretty quick to keep that crap to herself.\n\nBut she didn't. She just shrugged.\n\n\"I guess so.\"\n\nSmall mercies. \"Good. Now try your name.\"\n\nShe took the stick and drew. \"How's that?\" It wasn't bad.\n\n\"The top line on the last letter is too long. And the down stroke is too curvy. It looks like a Geth.\" She drew the two letters side by side. \"See what I mean?\" She nodded for her to try it again. Mori looked at her askance, but went ahead and did it. They both looked at the characters for a couple minutes, Inanna idly doodling words in the earth before her. Mori watched her out of the corner of her eye.\n\n\"So this alphabet is used by Dunmer?\"\n\n\"Yep.\"\n\n\"But the language is different...so even if I could spell the word...I wouldn't understand it.\"\n\n\"Not till you learn it.\" She drew another word in the dirt. Just three characters, then wrote BAL beneath it. \"This word is the same in pretty much all elven and Daedric languages...there are a good number of words which are. At some point I'll teach them to you.\"\n\n\"Bal? Like the Daedra Molag Bal?\"\n\n\"Precisely.\"\n\n\"What does it mean?\"\n\n\"Stone.\" She wrote Molag in Daedric but didn't translate it. Mori looked at it, then at the other two words...Bal and her own name, then wrote the imperial characters beneath it. \n\nShe grinned at it, then at her. \"That worked out pretty good, didn't it?\" \n\nInanna grinned back. \"Very clever.\"\n\n\"So...what does Molag mean?\"\n\n\"Fire.\"\n\n\"Ah...that kind of makes sense. He's one of the Bad Daedra...isn't he?\"\n\n\"Depends on your perspective...but generally speaking, yes, he is ranked in the top four of Daedra you do not want to be intimately involved with.\"\n\n\"So do you know some Daedra language then? Since you've got that blood thing?\"\n\n\"The two things aren't necessarily linked...but yes, I do know a little bit about one or two Daedric languages. It's important to remember that not all Daedra share languages...you can get yourself into trouble with that...especially if you're messing around with magic.\"\n\n\"What do you use it for?\"\n\n\"Sometimes spells...sometimes reading things I shouldn't be reading...\" she smirked. \"But mostly it comes in handy when you're off adventuring and get yourself into a bind. Once in a blue moon you might get lucky and see inscriptions that read 'in case of emergency, push stone.'\"\n\nMori laughed. \n\n\"I kid you not.\" \n\nMori snorted disbelievingly.\n\n\"Ok...not those words exactly...but this one time I was trapped in this tomb, completely out of regular arrows, and there was this wonky sorcerer who had decided to camp out in the sacred chapel. I'd made quick work of the skeletal guardians, but the s.o.b. had gone and summoned a storm atronach...\" the girl's eyes widened, \"you ever seen one of those?\"\n\n\"No.\"\n\n\"Huge...and weird. Like a pile of floating rocks, but vaguely man shaped. And they don't respond well to magic...well not if you're the one using it... they just reflect it back you see...and all I have on me is a handful of magic infused arrows, an enchanted blade, and my own magic. I'd been saving the arrows, but at that point they were less useful than your standard hunk of pointy metal. There's a valuable lesson somewhere in there about spreading out rather than hording your advantages...but that isn't my point here.",
        "\"Anyway, you see my dilemma? I would have made for the front door, but the atronach is so big it blocked the passage. I managed to hide behind an altar...because these things are dangerous but not terribly smart or observant, and on the altar is an inscription written in some kind of Daedric. I recognized enough to know it was talking about blessings and doorways and protection...and underneath the inscription was a round suspicious looking stone. So I pressed it, and voila! A Dunmer size escape hatch for one. The creature heard it, but too late, and it was way too big to get through after me.\"\n\nOf course getting out of the sub-catacombs was another adventure and a half, but-\"\n\n\"Ina!\" A shrill voice cut her off, and they both jumped to their feet, Mori shifting as she moved, almost instinctively, and they scrambled toward the sound. Her heart was in her throat as she came around the corner and found the cubs gathered around a panicked Lucas and an unconscious Aina. \n\n\"What the hell happened?\"\n\n\"I-I don't know...I was taking a look around...I didn't smell anything...nothing at all. Then I heard a sound like someone was surprised ...and she was like this.\" He looked up at her, his dark eyes wild and beseeching. She dropped to her knees and felt the girl's neck, casting life detect at the same time. Her pulse was weak...but her life force looked just fine. \n\n\"I thought I saw something...a glowy thing.\" Little Sonja offered meekly. Her brother nodded from behind her shoulder.\n\n\"Crap. Ok, everyone shift, now!\"\n\nShe looked up to see Ambrose beginning to nod his agreement, then freezing with a shocked look. \n\n\"Oh!\" was all he got out before something nasty and fizzling and just plain awful hit Inanna between the shoulder blades.\n\n\"Get...down!\" she managed hoarsely as her knees buckled. She cursed silently as she tried to pull up her fire. It came slow...sludge like. \n\nGoddamn, fetching fay s'wit! \n\nShe stumbled to her feet, her vision a blur and launched her body at the twinkly 'glowy' thing now hovering directly ahead of her. She felt another nasty fizzle...but also heard an unearthly screech as her hand made contact and the heat flowed into her attacker. \n\n\"Stay down,\" she croaked again, her voice dry and throat worn. She pulled an arrow, feeling around for something enchanted and hoping to Azura above that she grabbed something useful. She twisted around just in time to see something blindingly white hit the tree next to her, and to see the willow-wisp vanish once more. \n\nShe narrowed her eyes and searched the clearing. Luckily all the cubs were playing nice and keeping their heads below her sight line...but so was the squidgy bit of fay dust she was trying to hit. \n\nThere it was! Her fingers released the moment her senses had picked it up, and the thing was down before she had a chance to inhale. Just a shivering pile of eerily green gloop splattered in the dust. Well...that was ok then. \n\nBlearily...still feeling the drain from the attack, she hobbled over to the others. \"Izs ok,\" she muttered, \"She's just drained.\" She blinked to keep her own eyes open and fought the enervation spell. She faltered and knelt carefully down next to Aina, taking a deep breath. She closed her eyes and felt out the spell twisting away under her skin, draining her. Powerful little critters those wisps were...for insubstantial non-entities anyway. She winced and forced herself to concentrate on the task at hand, using her will to push at the foreign energy, subduing it, compressing it...until it popped like an overripe berry. She started at the sensation and blinked her eyes open. It hadn't undone the damage...but at least the spell wasn't still chipping away at her. \n\nNow to Aina...\n\nThe girl was still unconscious, and Inanna could feel she was suffering from the same enervation spell. It was harder to dispel another person...but she would. Of course at that point she was in no condition to anything more than sleep. Neither of them were. \"Ambrose, give me your hand, I need to borrow some mojo.\"\n\n\"Pardon?\"\n\nShe closed her eyes and shook her hand impatiently at him. He gave in and placed it in her. \"It'll feel strange, but it won't hurt. Try to keep yourself open, like when I was reading you guys. I'm going to pull power from you. Mages call it chaining.\" She reached out with what she had left and hooked into his magica. Once she hooked it, she pulled it into herself. He gasped softly but didn't resist. Or even falter really. Kid had some potential. He was gonna be right scary one day. She'd see to it herself. \n\nShe placed a hand on Aina's shoulder and repeated the process she'd performed on herself. It was harder with some one else, but she had Ambrose singing back up.\n\nShe looked up at Lucas who had been kneeling nearby and watching Aina carefully, his hand cradling the back of her head. He met Ina's glance. \"She'll recover in a bit, but she's going to have to sleep it off, and so am I. We need to find shelter and a good place to hide out for a few hours. Neither of us will be any use for a fair while.\" He took a deep breath and nodded.\n\n\"Ok...do you think it's safe if you stay here and I go look for a place?\"\n\nShe was about to answer when a light tinkling sound...like a high pitch laugh sounded out to their right, and they both turned to look. The right side of this particular clearing was spotted with a few large rocks...common in this rugged terrain...and inconvenient in that they hid all sorts of nasty annoying things apparently. In this case it was hiding one of her worst case scenarios. \n\nA bloody Spriggan. Why...why me? Seriously...why? If this was Kynareth's idea of being helpful she could take her help and shove it way the fuck up her uppity Aedric ass.\n\nLucas looked suitably horrified. She could tell right away that it was more from his not having spotted the danger than from any actual fear of it. \n\n\"It's ok Shadow...they don't smell, right?\" He nodded dumbly. \"You couldn't have known. I didn't spot her either...so she might have been out of range before.\"\n\n\"I...I've never seen one before.\" He whispered.\n\nShe got slowly to her feet and reached for her arrows, choosing more carefully this time. It felt like a silence enchantment as her fingers brushed the smooth shaft of the arrow...but she was still fuzzy around the edges so it was an educated guess at best. \"Alright bitch...I've got a silenced arrow and a fire ball with your name on it. So I suggest you just turn around and walk away.\"\n\nShe didn't expect that to work, and wasn't surprised when the creature made some ungodly and wholly discouraging sound at her, it's arms rearing back and raising into the air in an all too familiar way. But then she froze...which made Inanna freeze. Why were they freezing? The spriggan hissed and jumped forward and Inanna was about to reply with an arrow to the face when a soft voice pipped up behind her.\n\n\"Wait...\" Ina flicked her eyes over her shoulder and caught a movement in the grass as Aina struggled to her knees, then became a flash of gold in the corner of her eye. The spriggan hopped again, and seemed confused and distraught...but wasn't doing its usual 'kill the mortal!' thing. In fact it was letting out strange squealing meeps and holding its arms like it didn't know what to do with them. She could almost imagine it saying something like, 'well, this is awkward...'\n\nInanna allowed herself to glance around and noticed the cubs had all changed and were watching Aina as she made her way toward Inanna. She paused near her and swerved, rubbing her head and shoulder against her hip and side. Ina lowered her bow and dropped her hand to brush Aina's back as she passed by her, purring.\n\nShe kept going, still purring, and Ina watched with fascinated trepidation as she approached the twitchy little wood nymph. Aina let out a plaintive yowl and stopped a couple of feet in front of the Spriggan. The creature glanced between the lioness and the armed Dunmer and stepped forward with obvious hesitance. Ina's whole body went wire taunt as the Spriggan reached out toward Aina...but Lucas, now a lion, bumped her as well, glancing up at her as he passed. Warning her? \n\nAina made a sound like a soft roar, and the smaller cubs started forward. The Spriggan didn't seemed bothered by the roar and in fact seemed to become less twitchy and ran a hand over the lion's head, with a tinkling laugh. At that the smallest of the cubs bounded forward, suddenly gleeful, and the nymph thing seemed keen to respond in kind until they were literally romping around in the long grass like long lost litter-mates.\n\nAnyone want to let me in on what's happening here? She thought wryly, then shrugged to herself. If it worked it worked. The gesture must have caught the Spriggan's eye and her head shot up. She was close enough that Ina could see her eyes narrow. Screw it, if twiggy wasn't going to hurt the cubs...then what did she care, she'd take her chances with her own life. She was too damn tired to do anything about it anyway. She stalked over the nearest tree, dropped her bow indecorously then sat down where she was and took up a meditative posture. Defeated but still watchful.\n\nOn the other side of the clearing the spriggan had turned her attention back to the cubs and was making delighted sounds once more, only casting occasional glances toward Inanna, who for her part was watching through slitted eyes, and doing her damnedest to take this apparent lull in 'the crap life throws at you' to recharge before the weird creature changed its mind. \n\nBut really it seemed happy enough with the cats and unlikely to do anything rash. Made sense in a way, all things considered. If these really were the children of Kyn, and the spriggan was the servant of Kyn, then they should by all rights be best-est buddies. And if fortune had decided to stop screwing with her for five fetching seconds, so much the better.\n\nIt was interesting to look at though. She'd never had the chance to watch one...usually there was a lot of fighting for ones life and running like hell when one had a spriggan encounter. \n\nThey actually looked harmless enough at first glance...like a half-septim stripper covered in some kind of may-queen get up...all leaves and flowers and whatnot. Only their skin was obviously green and sort of shiny...as if it too were made of leaves...or vines...and large patches were covered in something which definitely looked like bark. And they didn't have feet so much as they had strange root like...things. As she watched they actually seemed to dig into the dirt where they landed, as if she were rooting and uprooting herself with every step. Weird.\n\nThey were damned tough though...Ina had the scars to prove it...and Talon was illustrating the fact by clawing and gnawing at her ankle playfully and getting nothing but creepy giggles in response. She swatted him away, and then seemed game to let him do it all over again. Plus they could regenerate...a lot. You couldn't kill the damn things...nothing short of a full out forest fire worth of incendiary spells could knock one of those suckers out.\n\nShe paused to consider that. The healing thing...it must be part of belonging to Kynareth. Everyone knew the Spriggans belonged to Kyn...and clearly there was some bond between them and the cats, so they must recognize that they're on the same team. Though that was in no small part due to Aina. She had no idea what the girl had said, if she'd said anything at all, but it had worked. \n\nShe thought of what she'd said to Lachance before they'd left. \"They're special.\" They were...and not just because of the lion thing. She suddenly felt more than a little blessed to have landed so squarely in the middle of their lives. It was a little humbling to her that in less than a century she should already have been witness to as much as she had...to know the remarkable people she'd had the luck and pleasure to know. It was kinda crazy really.\n\nIna and the nymph continued to watch each other out of the corner of their eyes until Aina left the little ones frolicking under the watchful eyes Lucas. \"Hey.\" Ina murmured as the lioness approached her. \n\n\"That was pretty impressive luv. Did you know what she'd do or were you just taking a shot in the dark?\" Aina didn't bother shifting to reply but cast a look at her that Inanna decided to interpret as 'shot in the dark.' She smiled and sighed as the young lion stretched out next to her, resting her head on her paws and watching the cubs with heavy eyes. \n\nInanna felt the urge to pat the nearby shoulder but hesitated. She wasn't as comfortable with Aina as she was with the cubs...perhaps because she wasn't a child...or perhaps because of her own relationship with girl's father...whatever the hell that was. Gods, but there was still that to deal with wasn't there. Bloody murder. Maybe she wasn't so blessed after all, seeing as how the epically amazing seemed to bring with it the completely awful as well. Must be one of those glass half full/empty things.\n\nShe let out an even heavier sigh and then an unlady like \"ack\" as a large, warm body rolled over next to her, nearly knocking her over. She righted herself then looked down at the prostrate lion, who yowled softly and then flopped her head into her lap.\n\nShe chuckled and gave in, having been given a sort of permission, reaching out and scratching her up beneath her chin. Aina let out throaty growl and closed her eyes. Inanna gave her shoulder a rough pat and looked up to find the Spriggan only two feet away and watching her intently. \n\nCrap. She'd let her guard down and now that twiggy bitch was going to have her eaten by black bears...or worse turn her own lions on her...could they do that?\n\nBut twiggy just stared. Inanna stared back. Aina appeared to be comfortably dozing, her head pinning one of Ina's legs rather inconveniently. \n\nInanna couldn't think of anything to do in this situation, so she smiled, and waved. \"Hi....So...how about those oak trees? Nice big branches...great for a climb.\" \n\nStill more staring. \n\n\"If you're going to kill me, would you kindly get it over with, the wait is driving me nuts.\" \n\nLittle Serus shifted back to his human form and trotted over, only to throw his bare-assed self into her lap, knocking the air out of her with a well placed knee. He seemed to think this was intensely amusing. He grinned and patted her cheek in a way which would have been condescending had it come from anything other than a plump little imp-child. \n\n\"She's not going to kill us silly. She likes us.\"\n\nInanna smiled tolerantly and shifted the child so that his heel wasn't digging into her thigh quite so painfully, and gave Aina a doleful look. The lioness in question just kept right on sleeping...or at least feigning sleep...shocked she would not be if that were the case.\n\n\"That's you sweet heart.\" Inanna corrected. \"She likes you folk since you're her people...me, not so much.\"\n\n\"But you're ours too now aren't you? \"\n\nInanna sighed. \"Yes, guess I am, and you're mine. I claimed you too...but just because I claimed you doesn't mean all my people will be quick to accept that fact...same goes for your people. Spriggans protect the creatures of the wild...and that seems to include you\u2014and thank Kyn for that\u2014 but that doesn't mean she's going to accept me as well.\"\n\nThe creature made some sort of sound which might have been speech, but was all incomprehensible tittering as far as she was concerned. \n\n\"She says you're tired and should go to sleep.\"\n\n\"You can understand her?\"\n\nHe shrugged and yawned. \"Yeah... like how we tell each other stuff when we're lions. You know?\" He shifted, right there in her lap to demonstrate. It was an odd experience as his skin literally shifted beneath her hands into fur. Plus he didn't get any lighter as a cat, far from it.\n\n\"I guess so.\" She grunted, once again shifting him so that his joints weren't\u2014once again\u2014trying to put a hole through her leg.\n\nLucas walked up. \"It's ok. I'll keep an eye out...and she'll keep anything I can't handle at bay.\" He stood beside the creature as casual as you please.\n\n\"You're sure?\"\n\n\"Definitely. She says they know about us, and had been watching for us. She thought you might be a hunter at first and was confused.\"\n\n\"Told you all that, huh?\" He nodded. Well, maybe Kynareth wasn't such an uppity bitch after all.\n\n\"I thought you said you'd never seen one before? You seem awfully comfortable with it now.\"\n\nHe looked at her and smiled. \"I hadn't. They're really beautiful aren't they?\" the Spriggan seemed to understand him and made a cooing sound, patting his shoulder with her twig like fingers. It wasn't the word she'd use, more like 'freaky looking' but she wasn't about to insult the dangerous woodland creature by saying so.\n\n\"There's certainly nothing like them.\" She agreed. \"But don't forget how powerful and dangerous they are. They aren't to be trifled with, so don't get too comfortable...and watch your back.\"\n\nLucas blinked then looked down at her in shock. \"Seriously? This coming from you?\"\n\n\"What? I'm very serious.\" Lucas scoffed and rolled his eyes before turning away and shifting, stalking off to his post once more. \"What?\" she asked the retreating cat again. Nothing. She looked at the Spriggan who tilted her head at her curiously. \"What?\" She asked it...it tweeted at her, then turned and trotted away after Lucas. \n\nThe cub sprawled in her lap adjusted itself and looked up at her with a huge, toothy yawn, stretching his forelegs so that his sharp little claws spread and retracted against her thigh. \"Well you look comfortable.\" She muttered. She cast a sidelong look at the much larger cat spread out next to her. \"So do you.\" \n\nNeither deigned to respond. On the plus side they were toasty warm, and there was a definite chill in air. It was tolerable, but Dunmer don't do cold very well. And it was clear the extended summer they'd enjoyed was at an end. Even the leaves had been changing on her. Funny the things that slip your notice when you're preoccupied. And preoccupied she was.\n\nScrew it, this day wasn't going to get any less weird any time soon. She did the only thing she could do. She took off her arrows and leaned back again the tree behind her and closed her eyes. If she had to sleep though it to make this day end...then so be it.\n\n**\n\nInanna awoke to a nudging against her arm. She grumbled and ignored it, imagining it was probably a cub trying to get comfortable. She tried to focus back on the lovely Feric shaped dream she'd managed to slip into...or rather, had managed to slip into her, she considered dreamily. Besides, no one was screaming in terror so it couldn't be that important. \n\nThere was a pat against her cheek and she begrudgingly opened her eyes as the dream had already faded and eluded the grasp of her mind.\n\nIt didn't take long to shake herself free of her sleepiness when she saw the face hovering over hers.\n\n\"Bella!\" She scrambled to her knees and threw her arms around the woman's neck, nearly knocking her over. Bella chuckled and hugged her back, but began shushing her at the same time. \"Thank Azura,\" she rasped out in a harsh voice. \"I was so worried you'd go to the house. It's been compromised\"\n\n\"I did.\"\n\n\"And?\"\n\n\"There were city guard everywhere, so I went else where. I was worried at first that something had happened...but I caught your scent moving away from town and followed. I would have caught up sooner, but I had to double back a few times to be sure I'd lost the last of them.\"\n\nInanna nodded knowingly, recalling her own attempts at the same. Bella nodded over to a nearby tree where twiggy was sitting cross-legged tittering happily at them. \"That's unexpected.\"\n\n\"Tell me about it. She seems taken with the ankle-biters though, so I'm not going to make a fuss if she wants to baby-sit. Better her ankle then mine.\" Inanna looked around. It seemed like she was the only one not awake. In her defense she had gotten blasted by the wisp, and that was while still recovering from earlier adventures. Going by the sun it didn't look like she'd been asleep all that long though. Maybe two hours. She was still pretty tired, but seeing Bella alive and well was probably enough to keep her going until they could find a proper place to rest. ",
        "She looked around the clearing again. \"I just stopped here for a short rest. I was hoping to make a little more headway then find somewhere a little safer to get some real sleep. I don't suppose you could ask her if she knows of a place.\"\n\nBella turned and looked at the spriggan, as though she were staring her down. The spriggan just kept tittering.\n\n\"Sounds like there's a cave nearby with nothing but a few others like herself...and bears apparently.\"\n\n\"Yeah, I've noticed they have a thing for bears.\"\n\n\"She says they won't harm us.\"\n\n\"Us-us or you-us.\"\n\n\"How do you mean?\"\n\n\"Well you're all lions, and followers of Kynareth...I'm Mer...a Mer with a bow.\"\n\nBella smiled gently. \"She seems to get that you're with us...and seems to know that she's not to attack you as well. I sense her confusion about it, but she accepts it. Which is enough. Come on.\"\n\nThey both got to their feet and Bella shifted, leaving just Ina and twiggy on two legs. Bella growled softly and the young-ones fell in line and as one they followed the spriggan to her cave.\n\nIt was farther than expected, but it was, thankfully, headed in approximately the right direction. True to form, the caves were fetching weird. She'd seen caves like this before, but usually when she did, she'd turn tail and would go find herself something easier to kill. \n\nNow, this might sound odd to the inexperienced adventurer, but contrary to popular belief, vampires and necromancers weren't all that difficult to kill, not if you played it smart and sneaky. You couldn't be sneaky with spriggans, because guaranteed that first hit is not going to kill them...or the second. What skull or artery is there to pierce or sever? And how does one burn that which renews itself instantly? And that's before the bears. Always with the damn bears. \n\nZombies may be creepy, but bears were still...fetching bears! One does not take a thousand pounds of muscle and claw lightly if one wants to live long enough to reproduce.\n\nTherefore one did not take them or their controllers on unless they had serious fire power, and some heavy back up. Now here she was trotting into a nest of the things. It was freaking her out a little.\n\nThey were taken into a little side cavern and left there to make themselves at home she supposed. There wasn't much there except damp rocks and more damp rocks. Ah well...at least it was secure. There was no way in Mundus those half-assed hunters were going to get in here. She couldn't have. \n\nShe dropped her pack and, using it as a pillow, curled up on a relatively dry looking patch of cave floor. The others followed quickly enough. She was beyond grateful that they decided to make it a group effort and clumped together for mutual warmth so that by the time everyone was settled they were essentially a pile of lion with a random dark elf tossed in to the mix. It was actually a warm enough arrangement that she was able to ignore the chill of the caves, and fall almost comfortably back to sleep. \n\n**\n\nSundown in the Imperial city was always a prized moment of the day for its citizens. Especially on such a crisp, clear day as this. For this is when the magnificent spire at the heart of the city, the White Gold Tower, caught the last rays of light, and reflected them in a brilliant array of dazzling silver, gold and red. \n\nIt was in these few moments the city paused: merchants closed shop for supper or a walk, clerks left off their scribbling for a moment of fresh air at the window, gazing out over the green way or the courtyard of the Imperial University, and beauty lovers of all kinds took a few minutes to stroll the arboretums and garden walks. It was as if the city breathed as one, slowly and deeply, before returning to its fretful pace.\n\nThe temple district was no exception, and the priests guarding the temple of Talos stepped out to stretch their legs and admire the way the pristine white dome of the Temple caught the last light and reflected it back into the world. Some might have read a metaphor or two into it, others simply took pleasure in its unadulterated beauty.\n\nAcross the flagstone street the same warm light filtered in through the fine curtains drawn over the windows of the elegant sitting room, casting strange shafts of color into the cool darkness. \n\nAt the center of the room, quite out of place with the stately and conservative elegance of the decor, was a dark cushion placed carefully in the center of a circle of tallow candles, between which were figures drawn on the hard wood floors in what one hoped was colored chalk or red paint.\n\nIn the center of this circle, as still as a statue, knelt a handsome Altmer. He wore loose pants, but his chest was bare, and his pale silvery-golden skin glinted strangely in the flicker of candle light, and was tinted to a red-gold by the shafts of filtered light from the fading sun.\n\nHe bore the features of a full blooded Altmer. His long, lean frame had the gracile delicacy that his people were so well known for. His face too was long, and thin, with angular features. Though not in that sharp cutting way one sees in Dunmer, and which speaks to the cunning and violence they claim as part of their nature, but rather in a softer, elegant way, which only bespoke grace and nobility. Or that, at least was how he might have seen it.\n\nHis loose hair hung in long white strands over his bare shoulders, almost hiding the only flaw on his narrow chest\u2014an uneven, cross-shaped scar raised over his heart.\n\nHis long fingered hands rested lightly on the silky material of his pants. His eyes were closed...though they saw. They saw far and long in all directions. Sometimes they saw the past, sometimes the myriad future, but now they saw into a candle lit room two districts over, one not unlike the one in which he presetly rested.\n\nHe saw a warm fire, and the ornate mantle over it. He saw the silk chaise, the side table holding the near empty bottle of wine. He saw a half filled glass rise to unseen lips\u2014 raised by the nude male, human body which stretched before him in a steaming bath. Across the bath, her legs entwined with the man's, reclined an attractive Breton woman. Her own glass of wine was resting on the floor next to the bath and her arms hung loosely over the edges. \n\nShe smiled. It was an expression of concentrated lust and knowing guile. She had a mouth that looked like it might devour you whole, and brilliant green eyes made to bore into ones mind and pulled away all rational thought.\n\nShe slid lower into the bath, her only half covered breasts dipping lower into the steaming water as her foot press slowly along the man's upper thigh, stomach, and chest.\n\nSarandus, the Altmer, smirked. He couldn't feel the movement, but his unwitting 'eyes' had looked down and followed its progress with interest. A hand came up and lightly caressed the finely turned ankle and calf.\n\nThe Altmer's brow furrowed. Delatour was too good at what he did to give himself away, or reveal his thoughts to Sarandus, or anyone else for that matter, and if Sarandus hadn't already been using him as his literal as well as figurative eyes, he would never have known about this particular creature.\n\nHe wasn't absolutely sure what she was or what she signified, but even through borrowed senses, he could see she was likely to be trouble. He had thought so before, and she'd done or said nothing to dissuade him from the notion.\n\nOf course Delatour had no idea he'd been enchanted in this way, they never did. But it was common practice for Sarandus when dealing with those who managed his affairs. After all, one never knew when the knife in the back was coming. And it was always coming. \n\nThis was simply a form of insurance for the inevitable. \n\nNormally he wouldn't take much interest in the assignations of his employees, but he had seen enough to know this woman called herself Telvanni, and had shown some interest in Sarandus specifically. She'd been asking questions.\n\nGranted she possessed Delatour's subtlety and much of their conversations were more like skilled games and dances and contained little in the way of useful revelation...but it was enough to cause him concern. Normally he would have Delatour look into this, but it was possible he was already compromised. Or not...but he couldn't be sure.\n\n\"So...Messieur,\" She grinned and her eyes glowed, \"have you given any more thought to a trip to the eastern courts.\"\n\nSarandus perked slightly, focusing on the woman once more.\n\n\"I have.\" There was a long pause and the woman's smile grew until she chuckled, drawing a curl of dark hair around a finger. \n\n\"I see.\"\n\nThe man maintained eye contact with her as her grin turned impish and as she slipped lower into the tub.\n\n\"You know, I've been...musing. And it occurs to me, that we're very much the same, you and I. It doesn't matter what out reasons. Nor our histories...though I'm sure you might disagree on that account.\" Her lip twitched.\n\n\"Oh? Dare I take that bait?\"\n\n\"Does it tempt?\"\n\n\"It wouldn't be polite of me to say it didn't.\" He smoothed back, his eyes and hand casting for the wine glass on the table. Sarandus could imagine the expression of polite indifference. The woman laughed lightly.\n\n\"It would be cruel of you to leave it off. But you must ask. I would seem to forward to offer up such intimate detail.\" \n\nHe cleared his throat theatrically, \"What, pray-tell, to you mean by that, my lady? Are our histories so different.\"\n\n\"Indeed they are, sir. In the realm of lineage, I dare say.\" She smirked but said no more.\n\n\"You are cruel with your coyness, Madam.\"\n\n\"Well, I'm sure you already know too much. A lady must keep some of her secrets.\"\n\n\"What? That your name is invented?\"\n\nShe chuckled. \"And what else?\"\n\n\"That you were not born Telvanni.\"\n\nShe said nothing, but smiled wickedly.\n\nDelatour scoffed. \"Crueler still. You mock me.\" Though there was a note of amusement in his voice.\n\n\"And what else should I do? Did you hope I would gasp and wonder at how you knew it? That I would be overcome by such skillful maneuvers?\" She teased, her suddenly sultry expression belying her words.\n\n\"Then what, lady, do we have in common, if you will not enlighten me on the nature of our difference?\"\n\nShe turned somewhat more somber. \"I suspect you know that too. We want the same thing, you and I, and we'll do just about anything for it.\" She smiled and brightened, shifting slightly in the tub, a wicked gleam in her eye. \"Do you know what the key to success is, Delatour?\" suddenly shifting modes. \"Diversification. Spread your investments around...always keep more than one iron in the fire. One plot or another is bound to trip up at some point. Some golden goose dies, a ship sinks, some busy body catches you doing something polite people don't talk about....diversify. That is my advice to you, my fellow traveler.\" She shifted again as she spoke, her leg appearing and disappearing beneath the line of his sight.\n\n\"I hope that isn't your sales pitch.\" He quipped after a moment.\n\nShe giggled, but gave no sign of stopping whatever it was she was doing.\n\n\"Est-ce que c'est?\"\n\n\"Je n'oserais pas savoir.\"\n\n\"Alors, qu'est-ce que vous osez?\"\n\n\"Rien.\"\n\n\"I don't believe you.\"\n\nThis time it was Delatour who chuckled and the woman's eyes fluttered closed as she moaned in pleasure. \n\nThe Altmer made a sound of disgust and his eyes flicked open, cutting short the scene and replacing it with the sight of the dimly lit room. He didn't time to waste sifting through whatever subtext might be hidden under their courtly nothings...if there was even something to find. \n\nThere were more direct methods which might be employed. He would have to think on it. Meanwhile, he had other matters to attend to. He rose, snuffing the candles with the wave of his hand, and waving a pale blue mage light into existence a second later. The little light hovered sedately behind him as he slipped back into his robes, and followed him a few paces back as he left the room and turned down the hall, away from the main stairs, taking instead a set of servants stairs down into the basement.\n\nOne half of the stonework room was storage, but behind this was a small door, and behind this was a store room of a different sort.\n\nHe passed a hand over the lock, willing the tumblers into place and the door to swing open.\n\nThe woman laying on the table moaned and shifted, twisting her head limply. Sarandus glanced at her as he passed, noting her still unconscious state. \n\nHe paused before his primary work bench, passing a critical eye over one of the alembic stills before passing on to the condenser, nodding with satisfaction and snuffing out the flame under flask with the tips of his fingers before running them up the length of the cool condenser with an affectionate pat, careful not to jostle the delicate layers of glass piping. \n\nThe woman groaned again and he sighed. He would deal with that first. He wouldn't be able to focus with her squirming around behind him.\n\nHe tugged up his loose sleeves as he turned, shrugging them into place. The female was a dark elf, some tidied up species of gutter rat that had come into Delatour's recent employ. He seemed to think her rather knowledgeable about the comings and goings of the local underworld. Sarandus wasn't fully convinced, but Delatour had made a good case. \n\nThe new female who had inexplicably made herself his enemy was said to reside in the waterfront, and casual inquiry seems to have illuminated the fact that the creature had ties with less than wholesome individuals.\n\nAnd of course they were both Dunmer. He wasn't sure how useful that was as he had never known Dunmer to be any less suspicious of their own people than they were of everyone else. Their aggressive paranoia was practically legendary. But, it probably wouldn't hurt. \n\nHe had yet to get a look at the woman himself, through any of his borrowed eyes. A case of poor luck or poor timing. It was unfortunate one couldn't just pluck thoughts from the mind at will...dead or alive. The eye witness reports were hardly helpful. Red-haired Dunmer woman wasn't all that useful. Not when hair color could be so easily changed. The name was the only thing useful at this point.\n\nPerhaps this female could be of use. Perhaps not.\n\nBut the more the merrier, they say.\n\nHe passed a hand over her forehead and she calmed, settling with a sigh. \n\nShe had no idea where she was or who he was. He made sure of it. She wouldn't remember a thing.\n\nHe stood next to her and slid his hands gently up the sides of her face, letting the pads of his thumbs fall and rest in the sockets of her eyes. He could feel them twitching beneath the thin delicate skin of her eyelids and smiled. He always marveled at the delicacy of the flesh. It's vulnerability. So little between the tender, sensitive working of her eyes and the rest of the world...or in this case the gentle pressure of his own fingers.\n\nHe pushed the stray thought away and focused on his hands, focusing his will into them, into the pads of his thumbs, feeling it roil and churn there, building and contorting to shape itself to the spells he whispered in a low, insistent voice. \n\nIt came to fruition all at once, pinpointing itself and aiming like an arrow toward the woman's mind. A metaphysical push and it was in.\n\nSarandus kept his hands over the woman's face, though cautiously as she bucked and writhed beneath him, her mouth an O of silent pain and terror. It wouldn't' do to put out her eye accidentally. He still had use for them. \n\nHe pulled away and let watched her a moment as she panted on the table. A few moments and he would check his work then have his man see to her removal. He considered sending her to Cheydinhal, but decided against it. They'd fled, that much was obvious, and he doubted they'd be returning any time soon. Besides, she was a resident of Chorrol, and it wouldn't do to be inconsistent. And if they fled to a city, Bruma or Chorrol were two of the closer options, not including the Imperial city of course.\n\nHe nodded satisfied. Besides, if Delatour's mercenary had managed not to botch the trap Sarandus had arranged, then it would be all the easier to flush out the remainder once the more powerful creatures had been secured. And who knows, they might not even be necessary.\n\nAnd children did provide a very shabby quantity of blood. And died so easily. \n\nHe rang the bell by the door and returned to his work. Waving in the direction of the unconscious mer when his man finally arrived. \n\n\"Return her where I acquired her, sir?\"\n\nHe made a distracted sound of affirmation and carefully drew his knife across the lotus, scraping the black seeds into a mortar. \"And be sure the letter of instruction is somewhere she won't miss it.\"\n\n\"Very good, sir. Shall I send for Delatour, sir?\"\n\n\"Not necessary. I suspect he's rather...preoccupied at the moment.\"\n\n\"Very good, sir.\"\n\nSarandus straightened and tipped his head toward the sound of the closing door. \n\n\"We shall see how good it is.\" He murmured.\n\n**\n\nIt took Feric more time than he liked to slip by the guards and find his family. \n\nIn part because he knew some of them could be using enchantments as well, and he half expected to run into someone as he crept through the maze like halls of the ancient fortress. The air was cool on his bare skin, and despite being essentially invisible, he felt incredibly exposed. \n\nBut find them he did. However, he didn't much like what he saw. Somehow Mirisa and Owyn had gotten themselves trapped in a great hall, the gates around them closed tight. One of them looked like a it had dropped from above. A trap. \n\nHe was above them, looking down from one of the high walkways that crossed over head, too high for them to reach in any form as the walls were smooth and offered no hand holds. Not that it would have helped...he wasn't alone on the walk ways. There were hunters waiting there, though for what he could only guess. Some were training arrows on his people below. It was no easy thing to contain the snarl of rage that threatened to rip from his throat at the sight.\n\nHe looked around the room and saw what he thought...hoped, was the mechanism which controlled the gates shutting them in at the end of a different walk way. He took a deep breath. \n\nHe might be able to make the jump to the lower walkway as a human...but IF he did, it would hurt, and they'd probably see the movement, and definitely hear him. He knew he could definitely make it as a lion...but then they would see him...though, would they see him quickly enough? \n\nThere were three hunters on the walkway, one right in front of the gear and chain. He could take out one with his first jump, but one of the others would definitely be able to get a hit in. He sighed deeply. It was a risk he'd have to take. \n\nHe pulled the ring from his finger, slipping the ring under his tongue, hoping to hell he didn't accidentally swallow it as he shifted. He leapt, hearing a cry of surprise mid leap, but felt the hunter, a human of some kind, go down beneath him, screaming as claws shredded into leather armor. He bound toward the man who guarded the gears, dodging the arrow he fired toward him. The narrowness of the walk only let him dodge so far, and the metal barb nicked his shoulder, tearing the flesh, but not catching fully. He snarled in pain, and roared. \n\nThe sound served to startle the woman he now bore down on, and also to warn his people\u2014 an order to retreat. He heard their snarling replies...they would obey, if grudgingly. Another pain shot up his spine, coming from one of his hind legs, and another, though he couldn't discern where...hot...so hot...\n\nThe woman vanished and he threw his body into the space she had been standing, and felt it connect with hers. He knew she had a knife when he felt it slice into his already injured shoulder.",
        "A crack and another gurgled scream later, and she was still beneath him. He whirled, barely missing another arrow which cut the air next to him. The other hunter was firing at him....he heard the snarls from the makeshift pit beneath them...he didn't have time.\n\nWith another snarl of anger and frustration he shifted, crying out involuntarily from his human throat as the pain shot through him in a whole new way, making his weaker, human body tremble in shock and exhaustion.\n\nHe grit his teeth and pushed off the wall he'd half collapsed against, lurching forward to grab the chain of the gear, wrapping it around his wrist and hauling with all his might. Metal screeched, and someone...Mirisa he thought, roared, and something hot ran through him, burning. Making him gasp as a scream of pain lodged in his raw throat. \n\nHe released the chain and spit the ring from his mouth with a cough, sliding it onto his finger, and stumbling away into the darkness of the hall. He hoped they were far enough away as he twisted down a narrow, side corridor, collapsing onto the floor, focusing on the ring, trying to will the fool thing to work.\n\nIt came a little easier this time...a little...though it took too much from him, nearly drained him, as weak as he was.\n\nHe turned his head to see two hunters run down the corridor he had left, only pausing to glance toward him, and not seeing him. They didn't know he had the ring. Small mercies, he thought bitterly.\n\nSomewhere far away the cries and screams of men melded with the snarling roars of lions...the sounds were getting farther away. \n\nGood, he thought. They were escaping. They would know where to go. And he was sure Cyrus had escaped and would lead them to safety. \n\nHe grimaced in pain, and tried to pull himself together, to heal himself. He felt a faint tingling in his limbs, but it wasn't enough. There was something else...something he couldn't heal...something in his blood. Poison? He swallowed a groan. He had to get out of here. If he passed out,where he was they'd find him for sure. \n\nHis legs trembled beneath him as he fought his way to his feet, hoping the enchantment on the ring would last long enough to get him outside. \n\nThe journey was long and torturous...though it seemed the hunters had left to follow the others. He was glad to not have to contend with them, but not a little fearful that if he was poisoned, he would be left to find help on his own. If he was near Chorral he might have gone to the fighter's guild...or to Ina's friend, the innkeeper in Cheydinhal, but he was more than a day's travel away from anything. \n\nHe smiled bitterly as he dragged himself along the wall, hoping to hell he was moving in the right direction, following the scents of the hunters which he hoped would lead him out of the maze of halls. He understood now why she'd dragged him around to meet so many people...even that Altmer, Honditar, would be a more than welcome sight right about now. Fat lot of good it was doing him though.\n\nHe was panting by the time he finally reached the entrance, unsure of how much time had passed. He had to pause often...each step was like having a knife plunged into his leg, and the longer he went the heavier his body felt until it was as if he was dragging a minotaur behind him. \n\nThe scent of the clean, cool air as he stumbled through the heavy doors was enough to propel him forward, half stumbling, half crawling into the woods. He tried to catch the scent of his pride, but he was too exhausted, dizzy and disoriented...so he focused on aiming his body away from the old ruined fort, and toward the alluring smell of fresh water and clean air.\n\nAt some point, he knew not when, his legs finally gave out, unable to support his weight and he felt himself collapse with a shudder. There was grass beneath him, broken light above, and the scent of lavender...there were worse places to die, he thought absently as he closed his eyes and slipped into darkness.\n\n**\n\nThe weird didn't end when Inanna awoke. Twiggy had taken them on, it seemed, and chaperoned them all the way to Chorrol. Once there it was easy enough to shepherd them all to the fighters guild, once it was dark of course. It was all a bit weird, yes, but all's well that ends well. However, the growing sense of foreboding she'd managed to ignore had managed to make itself irrefutably known now that the sense of imminent danger was no longer providing distraction. \n\nThere was something worming around in the back of her head whispering something was wrong. Too bad it wasn't also giving details...just murmuring loud enough to piss her off something fierce.\n\nBack on the upside of things, Modryn didn't give her much trouble when they arrived in Chorrol, and gave her none at all in front of Bellane and the kiddies. He set them up in the underground store rooms since that was the safest place until they knew what was what. One entrance in and one out, and only the local fighter's guild members knew about it: A trap door hidden behind the sword racks, through which she happened to be passing at just that moment. \n\nThe hour was late and the place dimly lit, so she wasn't worried about anyone seeing her slip out of the cellar or out of the hall. Plus whoever was passed out and snoring on the table would give her cover. As she neared she caught a glimpse of tusk-like fang jutting up from a heavy bottom jaw and figured she could guess who it was. She shook her head. He'd never learn.\n\n\"Where are you off to?\" A deep voice rumbled from the dark. She paused at the door and glanced over her shoulder at the big, scowling Dunmer. What was it that thief had said to her? 'Can't sneak a sneak'? Hell, leave it to a fellow Dunmer to get the drop on her. Again.\n\n\"I have a quick errand to run while I'm in the city. I won't be long.\"\n\n\"Oh, yeah?\"\n\n\"Sorry, hush-hush-cloak-and-dagger type stuff. You know how it is. One day I'll tell you all about it.\"\n\nHe grunted, which she took as permission to go on her way. \"What about them?\"\n\n\"What about them?\"\n\n\"You gonna fill me in on that too?\"\n\nShe shrugged. \"They're well behaved enough, and the little ones will obey Bella and the older kids. And she won't be any trouble. She's good people, you'd like her...don't get any ideas though.\" She grinned. He snorted. She turned to leave, but then paused with her hand on the door. Her expression turned serious. \"The red head, Mori, she's mine. I claimed her the other night.\" He raised a brow but said nothing. \"If anyone causes any real trouble it'll be her...you're kin now...so...you know the drill.\" He looked at her, his expression unreadable, then nodded and turned away.\n\n\"Well hurry the hell up, I'm not a fetching wet-nurse\" she heard him grumble as he clomped up the stairs to his office and as the door swung slowly closed behind her. She smiled fondly to herself and with a shake of her head slipped off into the chill, silent evening.\n\n**\n\nThe drop went off uneventfully and she was on her way after a few brief moments of friendly chit-chat. He seemed distracted, like something was doing with the guild and he was anxious to get back to it. Which was fine, since she was too distracted by that still present, yet vague, sense of foreboding rolling around in her gut. It didn't leave her in the socializing mood.\n\nShe was passing the chapel, cutting around back through the cemetery, when something caught her eye. She veered, and made for the chapel wall, turning around the side of it, and hiding herself behind one of the buttresses. It wasn't hard considering the atmospheric fog rising from the earth was giving her plenty of cover. A moment later she had her knife against a slender blue-black throat and was looking up into red, glowing eyes.\n\n\"What the hell?\" She snarled.\n\nGlistel regarded her evenly, \"Oops,\" she drawled, \"looks like you caught me.\"\n\n\"And if I hadn't caught you?\"\n\nShe smirked and shrugged.\n\n\"Bitch.\"\n\nShe chuckled. \"Maybe. But you 'caught' me fair and square.\"\n\n\"What? Are you suggesting you let me catch you.\"\n\nShe shrugged again, carelessly, as if there weren't a knife pointed at her larynx. \"I've been able to stay out of jail longer than you have.\"\n\nInanna snorted.\"Only 'cause you actually pay them those ridiculous fees. I'd rather cool my heels for a couple weeks than be party to that blatant extortion.\" Inanna shook her head and removed the knife. \"You never answered my question. What. The. Hell.\"\n\n\"I was paid by a Breton from the Imperial city to watch you. He's got all the cities under watch from what I gather.\" \n\nInanna cursed under her breath. That was the thing about guilds. They provided contracts, but their members were free to do a little freelance in the side so long as they didn't shirk their duties. Conflicts did happen sometimes. Like now.\n\n\"Delatour, right?\"\n\n\"I don't know. It seemed gauche to ask for names, and he wasn't stupid enough to provide it.\"\n\n\"Medium height, sandy brown hair, brown eyes, impeccably dressed, puts on a few more airs than your average Breton...likes charm spells. He thinks he's a slick mother-fucker...\" She growled lowly.\n\nShe pursed her lips. \"That could describe a number of Bretons, but yes, that sounds about right.\" She grinned sideways. \"He tried to use a charm spell on me to bring my price down. He didn't seem all that surprised that it didn't work.\"\n\n\"I bet.\"\n\n\"So, what do I tell them then?\"\n\nInanna sighed. \"The truth I suppose. I'm here to meet with my contacts, crashed the night in the fighters guild, and am headed to Kvatch in the morning to dispatch a contract for them.\"\n\n\"That's the truth?\"\n\nInanna smirked. \"Sure. It's also convenient cover for my real business in Kvatch...but that's none of your business. Say hi to Armand for me when you're in the capitol.\" She paused before turning away, and gestured at the Dunmer woman with the tip of her dagger, \"Oh, and if I catch you again, I'm not going to be so cool headed about it. Understood?\"\n\nGlistel smirked and nodded, and slipped back into the dark of the cemetery. \n\nFuck. Those oblivion-damned s'wit son-of-a-bitches. Fuck.\n\nThe guild hall was quiet when she arrived, and the sleeping orc somewhere else. She glanced around and headed up stairs to find Modryn sitting at his desk, staring at her as if he'd been waiting there since she left. She wouldn't have been surprised if he had been.\n\n\"Well?\"\n\n\"Glistel followed me to the chapel. Turns out she's working free lance for the people trying to find me. I fed her a cock-and-bull story about you sending me to Kvatch.\" He watched her a minute then leaned forward to riffle through a pile of folders, pulling out one from the middle and tossing it in front of her as she sat down.\n\nShe read it. It was a contract to clear out a group of bandits from one of the mines. Apparently its new owner wanted to put the mine back into production. It was just outside Kvatch. She looked up from it.\n\n\"I'll send Gro-ba down when he gets back. He'll meet you down there, help you finish up. She resisted the urge to smile. Gro-ba was good people. He wouldn't say anything. And they all knew Ina or Gro-ba could do this one alone if necessary. They'd done it before. They almost always worked alone, but they had worked together enough that there wouldn't be anything strange about the arrangement. She nodded. \"Where are you really headed?\"\n\nShe sighed. \"I'm loathe to admit it, but Des...you remember Des? Well Des wants me to see a witch about a cat, so I'm heading there to see if there isn't anything doing.\"\n\n\"A witch?\" His brow shot up, suddenly looking very curious.\n\n\"I know. But what are you going to do. Things are getting hairy, and I don't want to risk lives if I can simply solve this by breaking a few eggs.\"\n\nHe chuckled. \"They're sacred tenets...only you would compare those to eggs.\"\n\nShe scoffed. \"Says the turn-coat out-lander.\"\n\nHe grinned at that. \"Pot meet kettle, woman. Pot meet kettle.\" He leaned back with a sigh. \"You watch yourself with them. Waste witches are at least honest about the danger you face when you deal with them, these imperial witches are all sweetness and light on the outside, you never know what you're going to get.\"\n\n\"You've dealt with them before?\"\n\n\"They give us contracts sometime. Usually hunting for dangerous ingredients. Some of them seem like decent enough folk, and if you stay on their good side and watch yourself, then you should be ok. So watch your lip, hear.\"\n\nShe nodded. \"I intended to. I had my share of run-ins with waste witches, so I know better than to take them lightly.\"\n\nHe smirked, but his eyes were hard. Or at least, serious. \"How have you been?\"\n\nShe quirked a brow at him. \"How do you mean?\"\n\n\"You look like hell. So I'm asking how you've been.\"\n\nShe let out a humorless laugh. \"Well yeah. That sounds about right. I feel like shit. I'm exhausted. I can barely think straight...and I just feel...weird.\"\n\n\"Weird?\" \n\n\"Yeah. I can't think of a better word than that. Sorry.\"\n\nHe shrugged but said nothing.\n\nShe mimicked his shrug and slouched deeper into the chair and rubbed her forehead with one hand. \"I don't know what it is. I want to say I'm just tired, or I'm just in the middle of some craziness right now...but I've been stretched further than this...dealt with stranger things...this is different. It's me...somehow. Sometimes...it feels like I'm wearing someone else's skin. You know?\" She shrugged again. \"I'm guessing it's just hormones gone wonky. But whatever it is, it's just...different...and weird.\" She smirked. \"But I'm still young, relatively speaking...there's still plenty of things that'll be new to me I'm sure.\"\n\n\"you're not...sick or anything?\"\n\n\"Nah. It's little things mostly. I get queezy, nervous, sweaty...giddy...all at unexpected times.\"\n\nHe grunted. \"Might be right then. Don't ignore it though. Sometimes lots of little things add up to a big thing.\"\n\n\"Yeah.\"\n\nHe nodded then tipped his head to the left in a very odd way. She frowned, then pursed her lips and cast her senses out around her without turning. She felt a niggling off toward the stairs...she went after it and recognized the feel of it right off. \n\n\"Mori. What are you doing up here?\" She did turn and glared at the stairs as the little ginger moppet appeared around the corner. At least she was dressed this time she thought with a mental eye-roll. She held a hand out to the girl, and Mori approached cautiously. Inanna just wrapped an arm around her shoulder and pulled her to her side. \n\n\"Mori, this is Modryn, he's the eldest son of my great-great-grand mother's great grand daughter.\" Mori screwed up her face.\n\n\"What the heck does that mean.\" \n\n\"Second cousin, twice removed.\" Modryn answered with a smirk. \n\n\"Cousin Modryn, this is my daughter, Mori.\"\n\n\"Welcome to the family, Mori.\"\n\n\"Thanks.\" She said softly, suddenly and uncommonly shy.\n\nInanna prayed and a moment later Uncle Assurban peered down at her and Mori. \"Honored uncle, I'd like you to meet my new daughter, Mori. Mori this is my Great uncle Assurban, and my spirit guardian.\" Mori didn't look scared per-say, as she probably remember seeing him before during the summoning, but she was still looking a little timid.\n\n\"H-hello uncle Assurban.\" She offered, wide eyed.\n\nHe nodded and smiled gently. \"Hello child.\" He raised a brow at Inanna, and switched to Dunmeri. \"You've claimed her as your own then? You understand that it's highly unusual for those who have not yet had children to claim the orphaned.\"\n\nShe glanced at Modryn who watched impassively. \"I know. But she needs someone now. And I think of all her family, what few she has, I can be the most help to her. She has something in her I recognize, something I have in myself, and she needs a close and firm hand to learn to control it, as I did. Hell, I had at least three hands, and that was barely enough. And before you make a smart ass remark, yes, I am controlling it. This can't wait until I get lucky and get knocked up. We could be talking at least another century. By then it will be too late.\" \n\nHe nodded. Then addressed Mori, who was watching with curious apprehension. \"Young lady, your mother and I have just been discussing you. I reminded her that it was highly unusual for a person with no children of their own to claim the young of those who have passed. But she assures me that she feels she is best suited to your particular needs. Do you agree?\"\n\nMori looked stunned, and looked around anxiously for the answer from the three dark elves watching her patiently. Finally Modryn took pity on her. \"Just say what you think girl, there's no wrong answer...and what's done is done, you're stuck with her either way.\"\n\nShe opened her mouth, then clapped it shut again with a frown. She looked like she was thinking hard about it. Then looked back up at the ghostly figure, her eyes narrowed. \"If it doesn't matter then why ask?\"\n\n\"I'm curious how you see the arrangement.\"\n\n\"I agreed to it.\"\n\nInanna could see the tug at the corner of Assurban's mouth. \"Yes you did. Was it under duress?\"\n\n\"Define duress.\"\n\nInanna laughed, she couldn't help herself. \"Mori, luv, just give the poor man an answer.\"\n\nShe was still eying him with suspicion. \"I will when I get a proper question.\"\n\nHe chuckled. \"It is my job to protect your mother, not just physically. This will be known by the others of her line, if it isn't already, and they will ask me many questions. I wish to know what to tell them, or what not to tell them. In either case I wish neither of you harm. They will want to know if you understand what your bond to Inanna entails. So I ask now, what do you think it entails? So that I might pass this on, where relevant, to your new kin.\"\n\nShe blinked and looked down at her feet. \"Well, um...I guess it's like what she has with Desdemona, like they're family and they're always there for each other, no matter what. Like in the pride. I'm not related by blood to them but they're my pride and they come first. Talon always ticks me off, and I beat him up for it...but if he was in danger, I'd help him.\" She gnawed her lip and looked up. No one interrupted, so she continued. \"And like how Inanna is with us now. Our Alpha claimed her, but she's always acted like one of the pride, and she claimed us too right? So she helps us, and we help her. And her making it so I'm her daughter means that I can call her relatives mine and make them part of my pride too. And so she can watch out for me and teach me stuff the others can't.\"\n\n\"What sort of...stuff?\" Assurban pressed when she stopped talking. She looked to Inanna for guidance and she waved the girl on. \n\n\"Well...um, she showed me Daedric writing and talked to me about how to\u2014ah, the best way to kill things that are bigger than me...and that sort of thing.\" She shot an inscrutable look to Inanna again and looked cautiously up at the spirit. He nodded sagely. \n\n\"And this is pleasing to you?\"\n\n\"Yes.\"\n\n\"Well if you are content, I am content. May I bless you child?\"\n\n\"Um...yes. Thank you?\"\n\nHe gave her a kind smile and touched her forehead the way he'd touched Inanna's after the summoning, and murmurer his blessing in Dunmeri. A moment later a second spirit appeared beside the girl. She looked at Inanna and Inanna looked at her.\n\n\"Inanna!\" She chided. \"What do you think you're doing?\"\n\n\"Kill me now.\" Inanna groaned. It was her great-grandmother. Queen of the self-righteous wise-women.\n\n\"Child,\" Assurban, said, gesturing to her grandmother, \"this is your spirit guardian.\"\n\nInanna groaned and poor Mori looked more uncertain than ever. Her great-grandmother took the girl by the hand, and she saw Mori jolt. It was a weird sensation when they touched you, especially if you weren't used to it. \"Don't be afraid child. I won't hurt you. I'm just cross with your foolish mother. You are an innocent in this.\""
    ],
    "authorname": "Enithermon",
    "tags": [
        "oblivion",
        "fantasy",
        "bethesda",
        "dark elf",
        "inanna",
        "were",
        "feric",
        "rough sex",
        "public sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-08"
}