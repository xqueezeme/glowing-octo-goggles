{
    "title": "The Bully's Birthday",
    "pages": [
        "\"Now the Sirens have a still more fatal weapon than their song, namely their silence.\" - Franz Kafka, The Silence of the Sirens\n\nDisclaimer: First: All people engaged in sexual acts are 18 or over. Second: While traditionally sirens are half-woman and half-bird creatures, their name became synonymous with mermaids around the middle ages, though depicted as much more deadly than the traditional mermaid. For creative purposes, I am using the mermaid version of a siren and not the original Greek depiction. \n\nEdited by: PTMCPilot and Privates1stClass\n\n*\n\nGavin Davis, my crush -- and part of the bully-pack I'd endured since my family moved to a snotty self-serving area in middle school -- was throwing a Halloween party. \n\nI wasn't invited, so I decided to crash it.\n\nFor years, he put me down to the glee of his girlfriend, Chelsea. Which wouldn't have bothered me so much if he was always like that, but he wasn't. There were times when I saw another side to him. It would have been so much easier to hate him if those times didn't exist\n\nIn fact, Gavin's ridicule only got to me because my interactions with him traversed more than school. His dad was my dad's boss. His dad hosted work functions for every major American holiday.\n\nI had to attend these functions with my mom and dad. This put me in a position to be alone with Gavin and he wasn't awful to me. No, worse, he was actively nice to me. Because of that, I let my guard down a few times and allowed him to see glimpses of me I'd never meant to show him.\n\nHis dad's company threw a 4th of July party right before Gavin and I entered our senior year of high school. His mom sent me a dress to wear. It was a perfectly normal dress for a teenager, a halter-style bodice, a sparkly deep navy material. An uncomfortably figure-hugging material on my body. It fell about mid-thigh on me. I'm a short girl. It falling mid-thigh on me meant it was either supposed to be a shirt or someone had it tailored to fall mid-thigh on me.\n\nDad sighed when I came down with a pair of nice black slacks underneath it with a long-sleeved white sweater covering my arms, \"Would it kill you to wear a nice dress for once, Jessica?\"\n\nI looked to mom for support and she shrugged, \"It was a gift, sweetheart. Mr. Davis sent outfits out to all the kids who would be attending. He might take offense at you altering it.\"\n\n\"Is there a reason a middle-aged man needs to see my arms and legs, Mom?\"\n\n\"Just go put on some heavy tights so it at least looks like you aren't insulted by having to wear a dress most girls would love to have,\" she replied.\n\nI changed with great reluctance. I wore thick white tights under the dress. I refused to remove my sweater, but I did agree to push the sleeves up my forearms. Same effect, more effort on my part, whatever. \n\nEven covered, I was uncomfortable. I kept tugging at the skirt to try and pull it down a little further while fussing with the sleeves of my sweater. When we arrived, Mr. Benjamin Davis, Gavin Davis, Mrs. Juliette Davis and Natalia Davis, Gavin's older sister, were standing at the door, greeting everyone.\n\nEverything was stuffy. I was trying so fucking hard not to scowl when I had to shake hands with Mr. Davis and Gavin then hug Mrs. Davis and Natalia all with an empty smile plastered on my face.\n\nI walked away upon hearing my mother say, \"Oh, the dress you sent over for Jessica is beautiful, she absolutely loves it!\"\n\nFucking liar, I smirked.\n\nFollowed by Mrs. Davis saying, \"It really is, isn't it? You know I was so surprised that...\"\n\nI tuned them out. The only high point of these parties was the amazing food. So, I went searching for the ever-replenishing array of bite-sized nourishment. \n\nAnother positive thing about the gatherings: Chelsea was never at them. Mrs. Davis didn't seem to like her much. Which was why I saw a different side of Gavin while trapped with him.\n\n\"Don't try the pink stuff,\" he said, coming up behind me when I finally found my way to the buffet. \n\nHe was so close to me when he said it that I jumped, then I scowled.\n\n\"Seriously, don't try it. It doesn't taste edible.\"\n\nI took one of the pink things.\n\n\"I'm not joking, you do not want to try that, Jessica.\"\n\nAnd bit into it. \"Oh, fuck,\" immediate regret washed over my face before I could grab a napkin to spit it into.\n\nHe laughed and handed me the much-needed paper receptacle for the disgusting food, \"Told ya.\"\n\n\"It tastes like moldy flowers smell.\" I wiped my tongue with the napkin he'd offered.\n\n\"Yup.\"\n\n\"Why would they serve that?\"\n\nGavin smiled, \"Oh, they didn't serve it. I made a nice little powder from dehydrated flowers and sprinkled it on almost everything.\" He looked around the party, \"I really don't wanna be here with all of these people. Sabotaging the food seemed like a good way to clear the place early.\"\n\n\"Is there anything here that you didn't adulterate so I can get this taste out of my mouth?\"\n\nHe grabbed a tall glass of a red, white and blue layered drink one of the waiters was carrying on a tray, \"Anything on a tray is probably safe,\" he handed it to me but didn't let go of the glass right away.\n\n\"You ruined the best part of these parties,\" I said, pulling it from him and taking a desperate sip of what tasted like pure sugar with a light cherry after-taste.\n\n\"No, I made the best part of these parties come a little faster. Don't tell me you aren't anxious for the night to end.\"\n\n\"Maybe,\" I said, \"but the food made it tolerable.\"\n\nHe looked around, my own gaze followed his. We were the only ones over the age of 12 and under the age of 25, \"I tried to tell my mom not to send you that dress, by the way. Most of dad's employees have little kids. She thought it would be a great gesture to include you. She didn't care what her son had to say on sending a classmate a dress he knew she would hate.\"\n\nI tugged on the skirt again, shifting from one foot to the other as I crossed my arms over my stomach, clutching the top of the drink awkwardly, \"I don't hate it. I'm just not comfortable in it.\"\n\nGavin reached out to me, grabbing my arm above my elbow. I winced and jerked away from him, \"Don't touch me,\" I said a little louder and sharper than I meant to.\n\nHe held his hands up and backed away a couple of steps. Some nearby eyes turned to us. My cheeks were burning and my eyes widened with embarrassment. He seemed offended by my outburst. Gavin grimaced and walked away from me.\n\nI took the layered drink he gave me and went to find a quiet place to sulk. Eventually ending up on the backstairs near the kitchen, where I sipped the tolerable drink while scolding myself for always reacting poorly.\n\nAfter a while, Gavin walked into the kitchen from the backyard with a pizza in his hands. His shoulders slumped when he saw me. I thought he was going to turn around and walk back out, but he continued over to the counter. With the pizza box dropped on the island, he pulled two of the barstools out. He sat on the one further away from me and flipped the box open.\n\nI went over and sat beside him.\n\n\"I didn't mean to yell at you,\" I said.\n\n\"It's fine. I shouldn't have grabbed you.\"\n\nI looked at the pizza, \"What's on it?\"\n\n\"Not the moldy flower powder.\"\n\nI took a slice, and, while it wasn't my favorite type of pizza, it didn't taste like a rancid garden. \"Thank you,\" I said, glancing at him.\n\n\"Well, I was starving but no one's leaving. I rendered the food inedible and it failed miserably,\" he said with a laugh.\n\n\"Pizza's better than the stuffy food anyway.\"\n\n\"No, it's not.\"\n\nI agreed, \"No, it's not. Those crab things are so good, why'd you have to ruin them?\"\n\n\"Because I wanted people to leave, Jessica. No good food usually means people take off. I underestimated how much people want to suck up to my dad.\"\n\nWe didn't talk much, only sat there eating pizza together. Though after he swiped a swig of the drink he'd given me, he snuck off to grab us some drinks from the party that weren't sugar bombs. The night wore on and eventually they ushered everyone outside for the big display of fireworks. I was leaning back against a tree on the lawn, my ankles and arms crossed while I looked at the sky. Gavin came over next to me and I didn't complain.\n\nHe wasn't so bad when he wasn't trying to keep his friends impressed. He leaned back on the tree beside me, mimicking my stance with his arms and ankles crossed and his back pressed to the bark of the thick tree. \n\nI couldn't be sure, but it seemed like he was watching me. I caught him glancing away from me and back to the sky a couple of times during the show.\n\nToward the end of the fireworks display, he leaned over to me and pushed my hair away from my face, getting close enough to whisper, \"The dress looks nice on you, by the way.\" His breath was soft against my ear and I fought off a chill that tingled along the nerves across my neck and down my spine.\n\nAnd with that, I found myself disgustingly enamored with him while hating myself for it.\n\nBetween his dad's 4th of July party and Halloween, Gavin had changed from the mostly clean-cut executive's kid to someone I not only had a crush on but was actively attracted to. He went from a couple of tattoos and piercings which were largely hidden, to tattoos scattered along one arm and at least one on his back. He also had some small gauges in his earlobes and a new lip and eyebrow ring, along with the barbell tongue ring he'd had since he was sixteen. His light-brown hair was shoulder-length and perfectly messy, suiting his tall, lithe frame.\n\nHe had always been the bad boy of our school; the rich kid who got away with anything, because \"Daddy.\" He also ran the student hierarchy, with himself on top, of course. The more blatant \"bad boy\" look enhanced his reputation and gave him more ammo to throw at any other students who dared to emulate his style, even if they had the look before him.\n\nHalloween was my secret weapon. My chance to leave a lasting impression, not only on Gavin but on our entire senior class. And what an impression it would be.\n\nThe air was biting, but it was an otherwise beautiful Friday, the 31st of October. The leaves were falling, leaving a carpet of red, orange, yellow and brown. Each bitter wind gust cut across the nearly barren limbs and knocked another scattering of leaves to the ground. I didn't have time to take in their beauty as I normally would. \n\nI had a mission.\n\nWhen I stepped into my house, a giddy tingle of anticipation crept through me. I ran to my bedroom to begin my transformative preparation. My first step was to dye my peanut butter brown hair a deep auburn. I went against the box warning and dyed my eyebrows as well. Another layer of protection between myself and my costume.\n\nAfter a shower to further prep myself for the night I hoped I'd have, I tied my wet hair up with cloth strips close to my head. It was the best way to ensure my hair dried in perfectly formed ringlets. I moved on to the next elements of my costume and couldn't help but smile.\n\nChelsea was the attention grabber and I had been the wallflower for the past six years. But that Halloween would be different. Gavin's party was my night to shine and there was nothing she could do or wear to get in the way of my goal.\n\nWhat was my goal? Gavin.\n\nMy makeup was bold and heavy, a rich royal purple smoked out into a thick black winged eyeliner. My complexion was already nice, but I wanted the perfect model look. I contoured and highlighted, changing the apparent shape of my face with an effective illusion. A bluish-green lipstick topped with a shimmering emerald and violet gloss enhanced the shading of scales I'd dusted around my face and chest.\n\nI shimmied my way into my outfit, which was little more than a corseted bodice zipped up my side and a short, V-shaped skirt where the high points of the V came up to my hips on either side. With body glitter on my chest, arms and legs, my movements created a slight twinkling across my skin. Emerald, light blue, and violet beads and gems on the princess-cut bodice shimmered similarly. Even my posture changed as my costume came together.\n\nThe sleeves were little more than decorative blue and emerald silk ribbons draped over my upper arms. Beads of pearls and strands of seaweed decorated my bodice and shoulders. I stepped into the overpriced, designer, purple-velvet high-heeled boots I bought for this outfit and the expense seemed worth it.\n\nI let my hair down and tousled my curls loose into thick beachy waves and spritzed them with a saltwater spray. After putting in violet contacts, I checked myself in a mirror. Pleased with the results, I added a few decorative pieces to my hair and glued some pointed fangs over my eye teeth. \n\nMy own nails had grown long and I sharpened -- sorry, shaped them into claws. Between the changes to my appearance and posture, I was a different person. Even the way I carried myself was different, standing straight with my shoulders back and chest lifted. My roller derby confidence shone through.\n\nI was certain no one would recognize me, even without a mask.\n\nBesides, no one would be looking at my face. Their attention would be on either my glimmering-in-the-light cleavage or my peek-a-boo legs which emerged from my skirt when I walked.\n\nBeneath the layers of clothes I wore on the regular, I had a toned and athletic body which was only seen through freshman year in Phys Ed. I got my credit and it wasn't required after my first year, so I had no reason to torture myself further. \n\nRoller derby gave me all the exercise I needed. It was a constant workout for my core, ass and legs. I also trained on heavy bags and speed bags three times a week to keep my ability to defend myself and my team on point.\n\nMy name on the track was Sunny Red Fields. Perhaps not the best name, but I liked the Resident Evil game series, Claire Redfield especially, and I wanted a play on her name and a way to include sunflowers. I kept trying to find a way to get a reference to Leon's name in there, but it never worked out in a way I liked. So, from junior leagues on, I was more comfortable with \"Sunny\" than \"Jessica.\"\n\nI pinned a light blue and green, intricately scrolled and decorated Venetian mask into my hair with pearled bobby pins and covered my whole outfit with the thrift store find of an old Soviet Naval-style long black leather coat. Since the intent behind the party was not only Halloween, but Gavin's birthday, the coat served the dual purpose of hiding my outfit until the big reveal and a gift for him once I removed it. I bought it in his size in an attempt to be the most memorable guest he didn't invite.\n\nMy ride dropped me off down the block. I arrived at the door about an hour after the festivities had begun. Being intentionally late meant truly making an entrance and allowed time for my classmates to have slipped under the influence. I walked inside and took in the various costumes around me with a sweeping gaze.\n\nSomeone handed me a drink and I readily sat it on a nearby table. I recognized everyone in the low-effort costumes, but a few classmates had made more effort. It was harder to tell who they were. I walked between people, smiled and mingled, but didn't speak. \n\nCurtsying my way through our fellow seniors and some college freshmen, I sparked rumors and left curiosity in my wake even as the main event of my costume lay hidden under a heavy coat. After making it to the kitchen, I mixed my own drink and carried it with me while I made my way up the backstairs.\n\nI worked my way through the crowd until I was back in the living room. Gavin was sitting on a couch with some friends. Most party-goers were already flying high, having taken one, or a variety, of the little pills and powders spread over the coffee table. Gavin was in the middle, laughing about something. He seemed clear-headed while I watched him. I doubted he'd indulged in anything beyond a drink at that point.\n\nApproaching him, Gavin glanced up at me. His devil costume was low effort, but quite effective. He was wearing normal clothes, but he'd added some actual FX around his forehead to make it seem as though horns were protruding from his skin. Glued on toilet paper or torn apart cotton balls, maybe? He also had some nice new double fangs, which were noticeable when he smiled.\n\n\"I like your jacket,\" he yelled at me over the roar of the music.\n\nI smiled and curtsied, pulling up the jacket's hem and allowing a glimpse of my skirt. I stood back up and curled my finger, tilting my head and beckoning him from the couch. He smirked and put his cup on the coffee table, got up and moved through the crowd toward me. I lured him off to a quieter part of the room. He followed, backing me into the corner I led him to. He appeared pleased, maybe even excited, at having me trapped. I sat my cup on a nearby table and lifted my masked face to him.\n\nI began to unbutton the coat, performing the slow reveal of my costume beneath. His smile grew to match the noticeable bulge which presented itself, even through his jeans. I slid the jacket off my shoulders. He reached out toward me and I moved, dodging his attempted touch with ease even as I slid the jacket onto his arm. He laughed and shook his head, then watched me slink behind him to get his other arm in the jacket.\n\n\"What's your name?\" he asked in a more normal tone.\n\nI put my finger to my lips and arched my eyebrow, though he couldn't see it beneath my mask.\n\nHe looked around the room, trying to figure out who I was. \"Adriane? Lexi? You're not Chelsea, she wouldn't hide her face behind a mask no matter how much it suited the costume.\"\n\nI shook my head and crinkled my nose at his guesses.\n\nHe moved closer and I backed up, bumping into the table which had my drink on it, causing it to slide off. Gavin caught it before it fell. He leaned over me and I breathed in his scent -- an intoxicating mix of old leather, diesel fuel, metal and black pepper.\n\nWhen he moved to put the drink on the bookshelf his crotch pressed against me. The visual bulge hadn't done him justice. He didn't make a move to step away though, so I slid my fingertips up his inner thigh. \n\nHe was blushing and his gaze scanned my face rather than my barely covered body. Those eyes of his should have stayed below my neck. Naughty.\n\nHe closed his eyes and swallowed hard when I pulled my hand away before I touched his cock. My fingertips slid under his shirt and my hand grasped his hip.\n\n\"Who are you?\" he asked in such a quiet tone I wasn't sure if he'd meant for me to hear him.\n\nI moved my other hand to cup his cheek and he grabbed my wrists, pushing them away from him as Chelsea approached us -- fury on her face.\n\n\"What. The. Fuck?\" She yelled when she was certain he had seen her.\n\nHe rolled his eyes, \"Chels, you broke up with me two weeks ago to fuck Zeke. I don't even know why you're here. I didn't invite you.\"\n\nShe was in a novelty store angel costume which was little more than white hotpants, a bustier, wings and a halo. She was a little older than the rest of our class after getting held back before I moved there. She liked to flaunt the fact she had matured first, but not the reason why. Though there wasn't anything mature about her beyond her body and the legal status of her usable orifices.\n\nI was getting the attention she normally did and she didn't like it one bit. She tried to push past Gavin, but he held his arm out and blocked her path to me. Chelsea was a good six inches taller than me, but somehow I wasn't scared of her anymore.\n\n\"Go home, Chels,\" Gavin said, staring her down.\n\n\"I wanna know who the slut is,\" she countered, grabbing his wrist and trying to get past him.\n\nHe looked around, \"Looks like you're the only slut here. Now either get out or go try and make me jealous by fucking whatever desperate lonely soul you can get your claws into.\"",
        "Her nostrils flared and her cheeks nearly glowed red before she turned and huffed away. After she was out of sight, Gavin reached back and grabbed my hand, leading me upstairs and down the hall. Reaching what I gathered was his bedroom, we found a couple of his friends fucking on the floor. Groaning loudly, he yelled, \"Get the fuck out of my room. Christ!\"\n\nThey scrambled to gather their clothes before he shoved them out the door and slammed it behind them. He laughed and leaned his head against the door. \"I didn't even want to have this fucking party,\" he said before he turned to me. \"But it's expected of me. My parents even went away for the weekend so I could make it last as long as I wanted.\" His eyes scanned my body before they settled back on my masked face, \"However, you might make me glad I endured throwing it.\"\n\nI was standing near his bed. Sketches and drawings were laying on nearly every flat surface across his room with more pinned to walls in various places. They looked like tattoo designs, full of bold colors and clean lines. \n\nWith my hands clasped behind my back, I twisted my hips and turned my attention back to Gavin.\n\nHe leaned his back against the door and examined the jacket sleeve as he tugged at it, \"So is this for me?\"\n\nI nodded.\n\n\"I don't even know who you are, and you got me a leather coat for my birthday? Everyone else brought booze and drugs, mostly for themselves,\" he said with a laugh. He pulled the jacket off and looked at it. Eyeing the label inside he drew in a deep breath, \"This is a legit... Who are you?\"\n\nI shrugged and his eyes focused intently on mine.\n\nIt was an old and valuable World War II relic, and I might've overheard him mention it being on a wishlist of items for his Allied memorabilia collection. I'd found it months ago in a thrift store marked down to $20 because nobody knew what they had. It could have sold for a few hundred dollars online.\n\nHe put the jacket over a chair and huffed, \"What's with the no speaking routine?\"\n\nI smiled and motioned to my outfit.\n\n\"Part of the costume?\"\n\nMy head tipped in affirmation.\n\nHe approached and backed me up to his bed, \"Will you talk if I get you out of your costume?\" He said it with a smirk well-suited to his costume.\n\nI bit my lower lip and tried hard to not blush or smile too big.\n\nHe ran his fingertips up my jawline. A tug on the mask when his fingers came to my temples met a slight resistance. The bobby pins securing it in my hair stopped his attempt to remove it for a moment. After finding each pin holding it in place, he pulled the mask away from me. His finger slid under my chin and he lifted my face toward him. He was looking at me intently, trying to place me but not quite doing so. There was only the slightest hint of recognition in his eyes.\n\nI smiled and closed my eyes, pulling free from his grip with ease. Heading over to his desk, I slid each drawing aside to see what was underneath, managing to catch glimpses of three before he came over and gathered them then pushed them aside. Abandoning the desk, I pulled off a fairly long cut-out with a drawing of a wilting sunflower on it from a nearby wall. I held it up to my outer thigh. Gavin watched me lift it a little higher, until the top of the sunflower was on my outer thigh, below my hip. I angled the paper to have the stem flow over my leg and toward my inner thigh.\n\nHis head tilted to the side, I mirrored his movement, causing my hair to fall over my shoulder. \n\n\"That one doesn't suit you.\" He flipped through the papers he had moved aside. Having found what he wanted, he unfolded a drawing of a large octopus. \"This one,\" he said with a pause, \"suits you.\"\n\nGavin took my hand and pulled me across the room, over to a tall standing mirror. His hand gathered my hair and pushed it behind my shoulder, revealing the bodily canvas he wanted for his design. Flattening the drawing over my shoulder, he ran his fingers over the paper, showing me where the tentacles would fall upon my back, upper arm and chest, \"I'd have to adjust it to get it to fit right,\" he said before he pulled it away and examined it.\n\nIt gave me pause that he had considered an octopus for me. It was one of the few things I could draw well and often took to sketching them during our science class. I found them fascinating even though they were little more than eight limbs and a blob. I watched his reflection while he studied the drawing and bit his lip ring, furrowing his brow in what appeared to be deep thought.\n\nDid he recognize me?.\n\nHe put the drawing down and his attention came back to me, \"You have such beautiful skin, though. Seems a shame to cover it,\" he said, running his fingers over the back of my hand and up my arm.\n\nI pulled away from him and walked toward the door. He lowered his gaze and sighed, seeming resigned to me leaving. The click of the lock was louder than I anticipated when I turned it. I glanced back at him and he tilted his head.\n\n\"You're not leaving, then?\" he asked.\n\nI shook my head.\n\nHe moved over to the door with me. I leaned back against it. Gavin put his hands behind me, flat against the door on either side of my head.\n\n\"I know you. I know I do,\" he whispered.\n\nAgain, I wasn't sure if he'd intended me to hear it or if he was speaking out loud to himself, but some relief washed over me -- he still seemed uncertain of my identity. He slid his hand down the door then along my side until his fingertips came to the slits in the fabric at my hips.\n\nWhen his skin touched mine he pulled away with haste, as if he'd burned himself on my flesh. His recoil only lasted a moment. I didn't flinch or even look away when he put one hand back on me and slid it back to grab my ass. His other hand moved to the back of my head. He looked me in the eyes and I said nothing. \n\nHe seemed to rack his brain for the answer he knew it held.\n\nHis hand grasped and rubbed my ass, \"I don't know any redheads,\" he said under his breath.\n\nA smile flashed across my lips, and he smiled in return, \"You're not a redhead...\"\n\nI tried not to smile bigger.\n\n\"It's not a wig,\" he whispered while rubbing the back of my head and gently tugging on my hair.\n\nI shook my head. \n\nHe lifted me off the floor and pressed himself to me.\n\n\"Do you go to school with me?\"\n\nThe slight flush on my cheeks before I glanced away made him smile, \"So come Monday I'll know who you are regardless since your hair will give you away?\"\n\nMy eyes glanced to the floor and he parted my lips with his. A soft, gentle kiss which deepened with a startled moan from me.\n\nPulling his lips from mine he looked me in the eye, \"You even taste familiar.\"\n\nMy mind flashed back to him swiping my drink at the party back in July and I smiled. I was sure he'd kissed many girls, but the only time he'd tasted me was on a glass we shared for a moment.\n\n\"What are you supposed to be?\" \n\nI pointed to my throat and shook my head.\n\nGavin brought his lips near me again and barely dragged them against mine, a tease of a kiss before he glanced over to the desk in his room, \"Would you write it down?\"\n\nI followed his gaze to the notebook sitting on the corner of the desk and reached my hand out. Telling him in a silent gesture I would take it if he handed it to me.\n\nHe grabbed the notebook and pen, opening it to a blank page before placing it in my hand.\n\nI wrote Siren along the top corner.\n\nHe looked me up and down, \"Aren't they supposed to have a tail?\"\n\nI wrote, Not on land.\n\n\"Aren't they supposed to sing and lure nearby men to their doom?\"\n\nI smirked -- eyebrow arched -- and wrote, You have to get me wet to hear me sing, Gavin.\n\nHe slid his hands over my outer thighs and pushed harder against me, \"Is that an invitation?\" he asked.\n\nI lifted my head and looked into his eyes.\n\n\"So you're trying to not doom me?\"\n\nYou'd like my voice, I wrote, tipping my head and biting my lower lip at the corner.\n\n\"Will you do one thing for me?\"\n\nAn inquisitive arch lingered at my eyebrow.\n\n\"Tell me happy birthday,\" he said more than asked.\n\nI put my hands on his shoulders and pulled myself to him as he leaned down to me. I kissed his cheek and his jaw. I held his chin in my hand, turning him away from me, and brushed my lips against his ear. In a slow, steady breath I whispered, \"Happy birthday, Gavin.\"\n\nHe closed his eyes and smiled. \n\nI pressed my lips to his while my hand moved to the nape of his neck and caressed it.\n\nGavin grasped my butt and lifted me again, pressing me tighter to the door. His body held me high enough for his lips to part and close over mine with ease. I moaned and my fingers slid from the soft warmth of his neck to his thick silky hair, pulling slightly. I enhanced the tension between us. With one hand grasping his hair and the other on his shoulder, I trapped him in the kiss and he moaned. A tremble coursed through him when I pressed my body against his.\n\nHis hands were hot on my upper thighs and ass and the stiff wood of his door pushed against my back. His grip on me was tight enough to leave bruises, and I didn't mind. He pulled away from the kiss and lowered me back to my feet on the floor. His hand left my ass and went to the lock on the bedroom door. Though he didn't look away from my eyes, his face crinkled into an almost sorrowful expression while his other hand caressed my cheek. He fumbled with the lock but managed to open it after a few seconds.\n\n\"You should go,\" he said in a whisper.\n\nAll the doubts I had pushed aside to pull this evening off came rushing back and I fled.\n\nHad he figured out who I was? Did he hate me that much? Was I too forward about things? \n\nSo many questions flooded my mind while I pushed past other classmates and made my way out the front door at a quick pace.\n\nHalfway down the block, I stumbled and leaned against a stone wall to take off my boots. Though it was almost five miles to my house and I was in a costume which barely passed the mark to consider me clothed, I ran. I was breathing hard, panting and shivering in the cold night air when I came upon the library not far from my house.\n\nWhile I could've turned and headed six blocks over toward the party going on at the civic center, I instead opted to stay in the deserted part of town. I looked like a mess and would rather my parents not see the outfit I chose to wear after so many years of outright refusing normal cocktail-length dresses.\n\nI stopped and sat on the stairs. Tears streaked my cheeks and makeup while I tried to not feel stupid. It wasn't my interaction with Gavin or his rejection which invoked my frustration, it was because it was freezing and I hadn't brought anything warm to wear home. I didn't even have my phone to call a ride. Stupid because I wasn't going to leave the party with the jacket I'd given him as a present. Stupid because my whole body ached now and my lungs burned with each pained drag of air into them.\n\nI'd hoped he wouldn't want me to leave the party.\n\nI lay my head against the cold stone at the side of the stairs and closed my eyes, taking deep breaths of icy air while my side and lungs ached. I tried to gather my thoughts and calm down so I could breathe without feeling panicked.\n\nI sat there, curled up to conserve warmth the best I could in almost no clothing while sweating from the intensity of running at my top speed for much longer than I ever had before. Falling asleep half-naked in the cold was not my plan, but my body had its own ideas upon my imposing emotional and physical exhaustion on it.\n\nWhen I opened my eyes I was strangely warm, with a softness under me rather than the hard stone. The smell of diesel fuel was pungent, as was an acrid metal and dusty old carpet scent. My vision was blurry for a few seconds, but it cleared and Gavin was sitting beside me. We were in a car. An old car with a long bench seat and few dials or knobs on the dash. He had his head on the steering wheel and his hands linked together on the back of his head.\n\nWe weren't moving. He was staring at the floor, not the road. There was a blanket over me and the heater was on. The library was still off to the side. He must have come looking for me.\n\nI lay there, quietly observing him. After a few minutes, he glanced over at me and smiled when he realized I was awake. I didn't move, or smile, or do anything but blink.\n\n\"You're lucky I figured it out,\" he reached over to feel my cheek, his eyes narrowed at me. He seemed angry, but he was the one who told me to leave. Though windburned from running in the cold, they were warming and he sighed, the anger leaving his expression.\n\nI pulled the blanket off, my hands and arms were also reddened from the cold, though they felt like they were burning. He pulled the blanket back over me, \"Stay under until you're completely warmed up. It took me over an hour to find you.\"\n\n\"It's hot though,\" my voice felt and sounded weak and I tried to pull the blanket back off.\n\nHe, again, pulled it over me. \"It only feels hot because you were in the cold. Stay under and get warmer.\"\n\nI continued to struggle and protest.\n\n\"Do you actually know who I am or are you hoping I'll think you know and not try to hide it?\" I asked.\n\nHe smirked, \"I know. I went around after you left and took note of who was there and who wasn't. The level of exposure threw me. Your assertive stance... The makeup and hair, too. But it was you telling me happy birthday along with the S in Siren that gave you away. Your S looked like the one on your Science notebook. And your voice... \n\n\"Anyway, I'm glad I was right. You crashed my party, but since you're also the only one who told me happy birthday or brought a gift, I can't even be mad about it.\"\n\n\"What if I'm not your classmate?\" I asked in a last-ditch effort to avoid discovery.\n\n\"Jessica Brighton, the frumpy girl with mousy brown hair and oversized clothes.\"\n\nI shrugged, getting my confident fire back as I warmed. \"You didn't treat me like I was frumpy tonight.\"\n\n\"Because you weren't. Where's this girl been the past four years?\" he asked with a chuckle.\n\n\"Bullied and afraid to express anything different.\"\n\nHad my tongue been a blade it would've cut deep. I watched him recoil from the implication his actions had an impact on how I presented myself to the world. \n\nHe didn't try to deny it or excuse it.\n\nGavin looked away from me, then turned back, an air of remorse to his words, \"Of all people, why did you get me a present? I've treated you like shit. You had the most reason to avoid anything celebrating me at all.\"\n\nI pulled the blanket over my head and he tugged it away from my face.\n\n\"You said I had to stay covered until I'm warm,\" I protested.\n\n\"You're avoiding my question, not warming yourself.\"\n\nI pulled the blanket off and pointed at my costume, \"I wanted to be memorable but unknown, a ghost of a girl you'd never see again -- but would always wonder about -- after tonight.\"\n\n\"Wouldn't the hair be a dead giveaway come Monday?\" he reached over and tugged on my curls.\n\n\"I was going to dye it back over the weekend.\" I pulled my hair from his grip before continuing, \"Why'd you want me to leave?\"\n\n\"I didn't say I wanted you to leave, I said you should leave. Should leave, as in an 'I can still think clearly right now and know this is going to progress, but I don't know how sober you are and you aren't saying anything, so consent is murky and I don't want to fuck up my life because I got turned on and ignored reason,' type of you should leave,\" he replied.\n\n\"So you didn't want me to leave?\"\n\n\"No,\" he sighed. \"No, I wanted you to stay at the party. Let me figure out who you were, not run away barely dressed. Once I did figure it out, I came to find you.\"\n\n\"Why?\"\n\nHis cheeks flushed and he looked to the floorboard of his car, \"Your place is about seven miles from my house. It's not even forty degrees out and the jacket you came in was laying on the chair in my bedroom. I've been an asshole, but I'm not a monster. You getting frostbite or freezing to death because I upset you...\"\n\n\"It was too warm for me to get frostbite unless I was out here for more than a few hours. And it's closer to five miles from your house. I was almost home and sat to catch my breath after running this far.\"\n\n\"You passed out. I tried to wake you but you mumbled something about your boots and then you were back out...\"\n\n\"That's a sign of hypothermia, not frostbite.\" My boots were laying on the floorboard and I kicked them aside.\n\n\"You're lucky I found you and not some perverted creep,\" he snapped.\n\nI laughed, \"Are you sure...\"\n\nGavin put his hand over my mouth before I could finish what I was going to say. \n\nHe smirked, \"I liked it better when you weren't talking.\"\n\nMy eyes narrowed at him and he moved his hand over to my arm, putting the back of it against my skin. \"You're still cold,\" he said.\n\nClimbing over beside me and moving under the blanket, \"Put your arms under my shirt,\" he wrapped his arms around me.\n\nHe cringed when my arms touched his skin.\n\nSo did I.\n\nHe was so warm I'd swear he was burning me. Gavin reached over and turned the heater up higher and pulled my legs into the seat. His hands rubbed over my back, then up and down my arms and legs. \n\nI curled against him and didn't object. I was trying to act fine, but I was still shivering.\n\nAfter a few minutes, he put his hand under my chin and lifted it to get me to look at him, \"Your lips are still kinda blue,\" he said.\n\nA slight laugh escaped me as I pulled my hand out from under his shirt and wiped a bluish-green lipstick smear from his lower lip, \"So are yours.\"\n\nHe looked in the mirror, \"It's lipstick?\"\n\n\"I didn't think through the leaving part, but yeah, it's only lipstick. I'm not quite that frozen. I just pushed myself too hard.\"\n\nHis lips pressed to mine and I tensed for a second. Despite my better judgment, his lips were warm and soft and a welcome distraction from the sporadic shivers coursing through me. I returned his kiss with a soft moan while my fingers caressed his cheek.\n\nHe smiled.\n\n\"Can I take you back to my house? Or I can take you home if you want,\" his gaze fell away after quickly correcting his offer.\n\nI hesitated before answering, \"I want to go home.\"\n\nWhile I didn't want to face anyone from the party again, I also wanted to spend more time with him. With only him. \n\nMaybe it would be worth facing people?\n\nHe started to climb back to the driver's side but I grabbed his hand, \"Is everyone still at your house?\"\n\n\"Yeah,\" he said, \"I doubt they even noticed I left to be honest. But I'll be kicking them out when I get home, I'm done.\"\n\nHe rubbed his hands over my exposed skin; the warmth he offered me had faded but his touch was still nice. My mind swirled with options, but I finally lifted my gaze to him before saying, \"Let's go to your house.\"\n\nHe climbed back behind the wheel and pulled away from the library.\n\nIt was such a short drive, but it was long enough for us to talk. Along the way, I became warm enough to pull the blanket from me. \n\nBefore we pulled into his driveway, I asked, \"Why do you give me such a hard time at school?\"\n\nHe scowled, \"You tripped me in sixth grade and I was fucking mortified by it. I hit a growth spurt -- while you stayed teeny tiny -- and I became an asshole.\"\n\nI glared at him, \"I didn't trip you. I was kneeling at my locker and you tripped over my leg. I jumped and hit my head on the bottom of your locker. Besides, you weren't that mean to me at your dad's parties.\"\n\n\"I wasn't myself at those parties,\" he retorted.\n\n\"Pity. I like that Gavin.\"\n\n\"Well, I like...\" His thought fell away before he changed the subject, \"You really hit your head on my locker when you tripped me?\"\n\nI narrowed my eyes at him, refusing to let him continue with the narrative of me tripping him, \"Yeah. When you tripped over my leg, you twisted my knee and it made me jump. I gave myself a mild concussion. It slowed my training and delayed me trying out... never mind,\" I said, catching myself mid-rant.",
        "\"Training and trying out for what?\" he asked, a sudden curiosity at the hint of information about me.\n\n\"A thing I like.\"\n\n\"Oh come on, I've only ever known you to go home, go to my dad's work functions, and go to school. You have some secret assassin training you do or something?\" he teased.\n\n\"I'm on a roller derby team.\"\n\n\"Wait, roller derby? Like girls on skates with blood and bruises?\" He put his car in park and turned to me.\n\n\"Part of why I wear the clothes I do is to cover my bruises from practice. The other part is I like my clothes.\"\n\nHe looked me over, \"I don't see any bruises right now.\"\n\n\"I don't play or practice in October. Halloween is my favorite holiday and the only way I'm going to get beat up in October is if I want to be a zombie derby girl,\" I said.\n\n\"Zombie derby girl?\" he shook his head then grinned, \"That's kinda badass. What are the odds of you inviting me to a game?\"\n\nI smiled, \"Slim and none.\"\n\nHe groaned, \"Aww, come on. Let me make up for being an asshole for the past six years by cheering for you.\"\n\nI shook my head, \"Maybe I'll warm up to the idea in time if you... If you decide you want to keep not being an asshole to me. But for now, the track is a place for me to be me without judgment or fear. Besides, I only do training matches right now. I don't get to play in a full-contact match until I graduate. My mom's requirement for letting me explore such a 'barbaric' sport.\"\n\nHis gaze, while it did lower to my costume for a moment, stayed mostly on my face. He turned off his car, \"Make me a deal, if you still want to be around me next Halloween, you dress like a zombie derby girl and you take me to a match for my birthday.\"\n\nI narrowed my eyes and stared him down, trying to figure out if he was working some angle. I didn't see one, and the fear of rejection became stifled by his fingertips caressing my hand.\n\n\"Okay, it's a date, I suppose.\"\n\nWhen we got back inside, the party had died down. Some people had left while others still lingered. The alcohol was gone, the drugs and the people who brought them were gone as well. He started kicking people out and we ran into a drunk, or maybe high, Chelsea.\n\n\"You cunt,\" she said, advancing on me. Her finger jabbed my shoulder and my fists clenched.\n\nI arched my eyebrows and took a step back. The derby girl could take her, but I didn't want to go there. I wasn't a fighter, but I especially didn't want to fight with her being so out of it.\n\n\"Who d'you think you are,\" she slurred, \"coming here, flirting with my boyfriend in your slutty little outfit that isn't even a costume.\"\n\nI wasn't going to hit or shove her, but taking crap from her? Nah, the night had given me a much-needed confidence boost and I'd had enough. I stood my ground, my fists clenched and lips pursed. Gavin moved between us.\n\nHe put his hands on her shoulders and guided her toward the living room. Her attention moved to him and she wrapped her arms behind his neck, \"Gav, you miss me right? You wanna go to your room and play devil to my angel?\"\n\nHe pried her arms off him and guided her to the couch, \"Have you done anything besides drink?\" he asked.\n\nShe started tugging at his belt, trying to unfasten it while he tried to get her hands off him. He won and, with her wrists clasped in his hand, he guided her back to the couch and knelt over her. She was smiling, \"Am I s'posed to be afraid of the big bad devil?\" she asked, her eyelids appeared heavy.\n\n\"No, Chelsea, you broke up with me. I only want to know if you need to go to the hospital or if you're okay to sleep it off,\" he said. \"Did you take anything or not?\"\n\n\"I had a few drinks. But I didn't make them,\" she said in a sing-song tone with a half-smile, her back arched and she tried to pull free from his grip.\n\nHe pulled his phone out and sent a text. Chelsea became distracted by the alert tone of her phone receiving a message. She clearly couldn't place where it was. When he let her go she started looking around for it.\n\nIt was a pretty amusing sight.\n\nHe came back over to me and said, \"That should keep her busy until she passes out.\" Putting his hand against my cheek, he continued, \"You're still cold,\" and guided me to turn around.\n\n\"Not as bad, though,\" I said.\n\nI walked with him and he smiled at me, \"I'm sorry. I could call a cab and send her home or something, but I know no one's gonna take advantage of her while she's sleeping on my couch.\"\n\n\"I get it,\" I said. \"Just because she's being a drunk bitch doesn't mean she shouldn't be safe.\"\n\nHe guided me up the stairs and down toward his bedroom, but he stopped before we got there. Instead, he turned into the room before it and pulled me in while he turned on the light.\n\nIt was a large bathroom with a big tub sitting in the corner. I blushed and he tugged me toward the bath, only letting go to turn the water on, check the temperature, adjust it and check it again.\n\nWhen he turned back toward me he motioned to the tub, \"This should help you warm up quicker. There's towels and such behind this door,\" he lifted his hand and pointed to a door on my right. \"I'll be outside if you need anything.\"\n\nHe walked by me, one hand on the door handle when I grabbed his other, \"Stay?\" \n\nHe closed the door and locked it before he turned toward me. His eyes narrowed but his gaze remained on my face. It seemed like it was his turn to be wary of me. As he moved closer to me, he seemed to shrug off whatever worry had entered his mind. His knuckles lay against my cheek. They trailed along my neck, over my shoulder and down my arm, \"You feel a little warmer.\"\n\nI gathered the courage to move closer to him, \"My hands are still cold though.\"\n\nHe clasped his fingers in mine and smiled at me, \"They don't feel so cold,\" he said, stepping closer. Gavin leaned down and kissed me, his hand squeezed mine and the other cupped my cheek, pulling me closer to him. My lips pressed to his, parted by his tongue when he moved closer and kissed me deeper.\n\nHe pulled away and curved his fingers so the knuckles on his fingers rubbed along my jaw, \"If you're still cold you should get in the bath. I'll turn around and sit here on the floor so you aren't alone though, okay?\"\n\n\"Are you cold?\" I asked.\n\nHe pulled his hand from mine and tilted his head. His eyes seemed to search my face for something. Gavin's hands were warm on my legs. He tried to guide me to turn around and get into the tub. I looked back at him, over my shoulder, and smiled, \"Do you want to pretend you're cold so you can come into the bath with me?\"\n\nGavin whined and looked from me to the tub then back at me again, \"What are you doing, Jess?\" he asked while his hands slid up my outer thighs and under my skirt.\n\nNo one ever called me Jess, but I liked the way he said it. I grinned and said, \"Letting you finish apologizing to me.\"\n\nMoving a couple steps closer to him, I picked up where Chelsea had left off, pulling his belt open with ease. I was much more fluid than she had been. But, I was also sober and Gavin didn't resist me, not even a little. I attempted to gauge his willingness by unfastening and unzipping his jeans. Each move halted, giving him ample time to raise any objections he might've had.\n\nHis hands tightened their grip on me. Grasping his waistband, my fingertips slid his pants down his hips with ease. I moved down his body while his hands slid up mine. Still looking up at him, I stayed on my knees -- intentionally making myself available to him.\n\nI expected his hand on the back of my head, guiding me toward his cock, encouraging me to blow him. Instead, he grabbed my hands and pulled me back to my feet.\n\nHis shoes and pants came off in a hurry, messily kicked aside before he turned me around. His hand slid along the side of my dress, unzipping it and pulling it from my body much slower than I'd removed his pants. His hands grazed my skin and my cheeks flushed.\n\nI stepped away from the discarded fabric and turned back around to face him. My hands slid under his t-shirt, along his stomach for a moment before I gathered the hem in my hands. I pulled and lifted it. He bent forward and helped me get his shirt off. \n\nOne of the downfalls with being so much shorter than him -- I couldn't effectively be seductive when removing his T-shirt because I either had to have him leaning over or sitting.\n\nA small pair of emerald green panties remained on me. He still wore a pair of black boxers. His fingers hooked into the waistband of my panties and slid them down my legs until they were at my ankles and I could step out. I expected him to stand after he'd pulled them off. Instead, his gaze cascaded over my body and his hands slid up the backs of my thighs while moving himself closer to me.\n\nThe way he gazed at me made my insecurities rise -- panic was close to setting in. My mind raced with thoughts about this being a trick -- he tricked me and this was another game, another way to ridicule and hurt me. \n\nThose thoughts quieted when he kissed my inner thigh, forcing my legs open a little bit with his hands. His lips moved higher, then to the right. They closed over my clit, a series of long slow licks made me a little lightheaded. Back and forth, his tongue ring glided across the sensitive organ with firm pressure. I moaned and my knees went a little weak, causing me to grab his shoulders for support.\n\nHe squeezed my inner thighs and dragged his tongue over me. His hands pulled me, one leg over his shoulder. My hands moved to the back of his head. My other leg trembled while his tongue worked me over. \n\nHe attempted to penetrate me with a firm lick but met with the resistance of my vaginal opening tensing in response to his touch. I moaned. It was nice -- quite nice, actually. But, it was new to me and -- much like the first time I took a real hit during a junior derby game -- it scared me a little.\n\nGavin tightened his hands on my hips, lifting and guiding me back until my butt made contact with the edge of the tub. His tongue lifted to a point and pushed into me, stretching me in a delicate motion. The metal ball of his tongue piercing caught when he curled his tongue inside. I moaned and my hand tightened in his hair. My hand left his head and moved to the tub, offering myself a little balance with the back of my knee resting on his shoulder. His back was warm as my leg curled over it, pulling him closer to my body.\n\nThe small hoop in his lip dragged along my labia and his mouth closed over my clit. His moans -- and his lips firmly moving against me -- resonated against my body. It made my hips lift to him, causing me to moan and almost slip from the side of the tub.\n\nGavin's hands tightened on my inner thigh and he lifted to press his lips against my hip. My eyes locked on his as he gave me the most lascivious grin before he lowered his lips back to my pussy. My brow furrowed and I clenched my jaw, attempting to regulate my own shallow, gasping breaths at the new sensation. \n\nHis hand moved to my thigh and pulled my leg from his shoulder. He put his other hand on the nape of my neck and lifted himself from between my legs before he pulled me to him for a kiss. An amber-like musk wafted from his lips while his middle finger pressed into me. He smiled when he made me whimper and gasp.\n\nHis lips pulled away from mine and, in a quick motion, he was back between my legs with my knee over his shoulder again. My leg trembled and my breath caught with each twist of his tongue and glancing graze of the small metal ball pierced through it, he continued to shower me in a pleasure I'd never known before.\n\nI was tingling, arching, aching, and didn't know what to do with myself. The one leg still on the floor was no longer effective at holding me up. He got his hands under my thighs and ass then guided my other leg over his shoulder. Gavin moved closer to me, seemingly enamored with my response to him.\n\nMy hands grasped the tub's edge, helping support my weight so it wasn't all on his shoulders, not that he seemed to care. No, he moaned and pushed himself closer to me every time my hands tried to give out and I put a little more of my weight onto him.\n\nHis thumbs pulled my labia and his fingers curled under my thighs. Gavin's lips and tongue pushed harder against me. A flick of his tongue over my vaginal opening before it curled up and over my clit made my head loll back with a gasp and moan.\n\nHe squeezed my leg, right beneath my ass, and his mouth closed over me, leaving me trembling. I wanted more and he seemed to savor giving it to me. His lips and tongue caressed and toyed with me until I tensed and cried out with release. \n\nMy hands moved up to his head as I shot up, with only his shoulders and our hands supporting me. My position allowed me to roll my hips toward him and he not only let me grind myself against his lips, but pulled me tighter to him in response.\n\nWhile his movements softened, the tension in my body began to ease. My hands dropped from him and my hips settled. I would've fallen backward had he not grabbed my ass and lower back to hold me to him. He was careful, supporting me while he pulled one trembling leg from his shoulder. Gavin kissed my inner thigh before he moved his hands to pull my other leg back to the floor, repeating the kiss to my thigh once he was certain I wasn't going to fall.\n\nHis lips glistened with my fluids and he guided me to my knees. With his hand on my neck, his lips parted mine in a deep kiss. His tongue twirled with mine and I could taste myself on him, more bitter than the earlier onion-like sweetness which had coated his tongue, muskier in this second kiss, but not unpleasant.\n\nI circled my tongue around the smooth metal ball on his barbell piercing and he moaned. His fingertips created white dimples at my hips, his grip tightened while he continued the kiss. His cock was stiff and warm, even through his boxers I could feel it throbbing when my palm rubbed over him. \n\nHe pulled the dark fabric down his hips -- freeing me to touch him, and I did. Trailing my fingers over his shaft and along the wet, sticky tip, I wrapped my hand around him and started stroking with slow, gentle motions.\n\nGavin pulled away from my lips, stroked his thumb across my cheek, then looked me in the eye, \"Your bath is getting cold,\" he said, attempting to keep his breath and voice steady.\n\nBent over, I licked the moisture from his cock. He groaned and gathered my hair in his hands, rubbing the back of my head and neck, \"Jess, you don't... Don't have to...\" his voice was more restrained breathing than formed words.\n\nI closed my lips over his dick, lifting my tongue, trying to push myself further down on him. He didn't seem to mind that I didn't know what I was doing. He let me move my lips over him at my leisure. I imagine any girl would do when that desperate for release. He moaned and I dragged my tongue up his shaft then pulled my lips back to his crown.\n\nWhile I couldn't do much more than suck and lick his cock's tip and right below, his moans and the tightening grip in my hair were encouraging. I ran my tongue beneath his crown, Gavin's hand pulled my hair as he lifted his hips toward me. A groan passed his lips when he tugged me away from him. \n\n\"Can I...\" he asked, trailing off and rubbing his fingers along my wet pussy.\n\nI nodded and he wasted no time pulling me onto his lap. He found the familiar resistance his tongue met moments ago when he tried to push into me.\n\nI shifted then took a deep breath to relax.\n\nHe lifted his hips and held mine firmly still. There was a pop of sharp pain followed by an intense fullness. We both whimpered when I slid onto him a little further. The pressure of his cock stretching me hurt more than I anticipated.\n\nHe was gentle, careful, his hands trembled with the restraint he showed in not simply pulling me down in a swift move. I was shivering again for completely different reasons. Electric-like jolts coursed from my clit to my fingers and toes at the slightest move of his dick.\n\nGavin moved one hand up my back and curled it over my shoulder. A better grip on me, maybe? Light pressure from his fingers on my shoulder urged me a little further onto him.\n\nI gasped and he stopped.\n\n\"You okay?\" His fingers rubbed my shoulder while he lowered his gaze to his dick sliding into me.\n\n\"Yeah,\" I choked out, blinking away the tears filling my eyes. He began to move again, his dick stretching me around him before another sharp pain at my entrance made my breath catch with a whimper.\n\nHis gaze lifted back to my face.\n\nHe stopped and tugged my lip free of my teeth with his thumb, \"You're not okay, we can stop.\" Gavin moved his hand from my shoulder to my inner thigh and started to lift me off him, but I pushed his hand away. \n\nI put my hands on his shoulders, curled over his back and lowered myself with a fast, trembling gasp before he could stop me. My thighs and stomach tensed and I cringed. A few deep breaths helped me focus on the way my body was beginning to adapt to his cock creating an intense fullness within me.\n\nGavin's arm wrapped tightly behind my back. I lay my ear to his chest. I could hear the quickening beat of his heart. I sat there, eyes clenched tightly shut and chest rising and falling in erratic, labored breaths. He lowered his face closer to my cheek, groaning as his back tensed beneath my fingers.\n\nA few tears were trailing over my cheeks and he tried to get me to lift my face to him with a nudge. I clung to him and kept my ear pressed against his chest, breathing through the pain of having lowered myself onto him so fast and haphazardly.\n\n\"Jessica?\" he whispered into my ear, a catch to his voice which sounded like he was in pain too.\n\nIt got my attention. I lifted my tear-logged gaze to see him cringing, tears falling over his cheeks at almost the same rate as my own.\n\n\"You're digging your fingernails into my back,\" he choked out while he tried to laugh.\n\nI had blood on my fingertips when I pulled them from him, \"Oh god! I'm so sorry!\"\n\n\"Fair's fair,\" he said, moving under me and causing me to whimper.\n\nI put my hand on my lower abdomen and my body clenched around him.\n\n\"Do you want to stop?\"\n\nI shook my head, \"No, I just need a minute.\"\n\nHe kissed my forehead and pushed my hair off my shoulders until it was all flowing along my back, \"It'll hurt less the more we move,\" he offered.\n\n\"Ok,\" I whispered.\n\nWe both moved, though my own movement was more his hands on my hips guiding me over him than embracing my own volition. Rocking back and forth while on his lap helped ease the pain some, but his gentle upward movements after he moved his hands to my lower back helped more. \n\nHe kissed my breasts each time I lifted myself, sucking on them and teasing my nipples with his tongue before his teeth pulled at them. His smooth tongue ring made me shiver and hardened my nipples much faster than his tongue or teeth alone. He seemed excited by the way his lip ring caught my nipple when he kissed above it, too.\n\nI have to admit, I liked it. The hoop caused a gentle tug on the sensitive and protruding nipple when his lips pressed to the soft skin above.\n\nHe groaned when I put my hands on the nape of his neck and pulled him to my neck. His teeth caught a sensitive spot near my shoulder and his hands moved back to my hips, guiding my body against him. Gavin's thumb rubbed my clit and his teeth bit down harder, right where my shoulder met my neck. His hands grasped my upper thighs, guiding me over his cock. Leaning his head back a little, he moaned, \"Fuck, me.\"\n\nIt seemed more like an utterance of enjoyment than a direction, but I was feeling a bit more confident and took it to heart.\n\nMy hips rolled. I lifted and lowered myself on him a little faster -- he moaned louder. His thumb barely touched me as it slicked over my clit. He seemed focused on something else. His cheek pressed to mine and his moans were heavy against my ear. An attempt to not cum, maybe? Fear about his social standing if word of him fucking me got out? I didn't know and at that moment, I didn't care.",
        "I lifted myself and brought my lips to his, tugging at the small hooped ring curving around his lower lip. A renewed smile brought his attention back to me. He squeezed my hips, tugging me down hard against him and making me yelp with a sharp jolt from my belly button to my clit. Gavin tipped his head back and groaned at my body grinding against his while deeply penetrated by his cock. When I stopped he grasped my hips and urged me to continue by moving me in the same way.\n\nWith the bath forgotten in favor of a more mutually pleasurable warming experience, his thumb continued rubbing in light little circles around my clit. The heavy scent of musky, somewhat metallic and peppery sex lingered around us.\n\nI leaned forward, my firm nipples pressed against his smooth chest. I moaned and ran my hands over his shoulders. The shift caused his pelvis to push his thumb more firmly against my clit, making me shiver and moan. \n\nI gasped and he smiled, rubbing me harder and a little faster. My lips parted, my brow furrowed and I rolled my hips toward his thumb.\n\nI tipped my head to the right, my eyes locked on his. He matched my movement and his cock throbbed within me. My muscles tightened under his grip. His shoulder and the back of his neck were soft under the tightening and loosening grip of my hand. The same involuntary spasmodic rhythm of my pussy caressing his dick.\n\nHe closed his eyes and leaned back for a moment before he seemed to refocus, watching my body. I rode him a little harder and faster through my orgasm. My breasts swayed with my movement. While not particularly large, they suited my frame. \n\nGavin seemed to enjoy the way they fit right against his palm with a little over-spill when he cupped his hands over them. He slid his hands from my breasts over to my sides and pulled me against him.\n\nWhile he seemed to still be trying to hold control, and trying to avoid cumming, my thumb grasped his lower lip and pulled at it, parting them so I could lean over and gently bite it. He smiled and brought his gaze to mine.\n\nI returned his smile and tugged on his lip with my teeth before lifting myself until my lips were at his ear. I kissed his jaw and whispered, \"Gavin, may I have your cum now?\"\n\nHe groaned and started to lift me off him but I pushed myself back against him and rocked on his cock. My lips brushed against his earlobe this time, \"I want you to fuck your cum deep inside my pussy.\" A bold move I didn't know I had in me.\n\nA whimper passed his lips and his face strained between a look which seemed like he wanted to give me exactly what I begged for and one which ached to be more responsible than we had been thus far.\n\nUltimately, he put his hands on my lower back and lifted me so he could maneuver us without removing his cock from me. He laid me on my back against the cold tiles on the bathroom floor, causing a chill to course through me and my nipples to renew their erect state.\n\nGavin guided my legs until my ankles pressed against his shoulders. His hands grasped my upper thighs, holding me to him while his hips bucked against me hard. My breath caught. In this position, I could do little more than lay there being an open receptacle for his desire.\n\nHis hands moved from my thighs to clamp onto my wrists, where he pinned them above my head. Stretching my thighs to their limit, his weight pushed my knees to my chest. The fullness of his cock in me brought sharp tingles throughout my body, though he still held a conflicted contortion upon his face.\n\nHe pulled my wrists together and held me in place with one hand while the other moved to my jaw and grasped me, holding my head still while he watched me arch and writhe beneath him, \"If you cum for me again, Jess, I promise to overflow you with mine,\" he panted more than said it.\n\nHis hands released my wrists and I moved my hand between us, carefully rubbing my clit as he slowed and fucked me with more determined and steady thrusts. Sweat dripped from his forehead and his cheeks reddened as he appeared to resist his own desire to release in me.\n\nBetween his throbbing and my fingers making me arch and push against him, I was nearing another orgasm.\n\nHe groaned and closed his eyes. Gavin's hand caressed over my knee and outer thigh before he turned his head and gave my lower leg a firm, though not especially painful despite the fangs, bite. He moved my legs again, my knees pressed against his thrusting hips. His grip held me still while I continued to rub myself -- though my hips were stronger than his hands. They shifted in a rocking motion, moving over his dick enough to help me over my crest.\n\nI whimpered, a gasp catching my breath when he pushed deeper. My hand moved onto his and I moaned, \"Gavin...\"\n\nHis hand caressed my cheek, \"Oh, you were so right. I do like your voice, Jess. But that silent game you played had me on fucking edge all night,\" he groaned before pressing his lips to mine. His lip stuck to mine slightly when he pulled away.\n\nGavin moved his hands to my hips and lifted me so he could push deep inside. \n\nHe kept his word. \n\nWith a grunt and groan his cock twitched a few times deep inside me. His head tipped back and mine tipped to the side, watching him. \n\nShit. This isn't enough. I want him... I want him to keep wanting me.\n\nHe was panting as he collapsed onto his forearms, barely holding his upper body above me and keeping his lower body tight against me. With his labored breathing and his pulse racing, I stroked his wrist beside my head.\n\nMy other hand slid along his jaw while he worked on catching his breath, \"Are you still going to be an asshole to me at school?\"\n\nHe laughed a little and shrugged one shoulder when his gaze connected with mine, \"Do you want me to be?\"\n\nI shook my head, \"I want you to come up to me in school on Monday -- no matter how I'm dressed or what makeup I'm wearing -- and kiss me.\"\n\n\"Tell me happy birthday again?\" he asked, his brow furrowed while his eyes focused on mine.\n\nI leaned up and kissed his cheek, then his jaw and whispered, \"Happy birthday, Gavin. I hope I get to celebrate it with you again next year.\"\n\nHe lifted and pulled himself free of me, watching his cum spilling from my pussy and toward my ass. His creamy white fluid mixed with a bit of blood from my own impatience around his efforts to take things slow.\n\n\"People are going to freak out if I run up to you on Monday and kiss you out of nowhere. Everyone was talking about you at the party. I heard whispers of you before you even found me. You had them all wondering who you were, where you were from, why no one recognized you...\n\n\"You should keep the red hair. It suits you. Besides, jaws will drop when I kiss you,\" he said, helping me to my unsteady feet.\n\nHis cum dripped along my inner thighs, warm, wet and sticky.\n\n\"I'm going to go get something for you to wear. You should pee so you don't get an infection.\"\n\n\"Infection?\" I asked. \"What...\"\n\nHe cut me off with a smile and a quick, \"It's pretty common for a girl to get a urinary tract infection after she has sex for the first time because no one ever tells her it's a thing. Don't worry, I've been getting myself checked regularly since I lost my virginity. Chelsea is, you know, Chelsea. Seemed like something a bright boy should do.\"\n\nHis gaze trailed over my body for a moment before he looked into my eyes, \"If I had any doubts, I would've stopped and gotten a condom before you ever got me undressed. I have no intentions of hurting you, Jessica. I'm sorry I ever did.\"\n\nDoes he still want me, or is he done? My gaze lifted to the ceiling and I closed my eyes, taking a deep breath to steady myself.\n\n\"I'll be back in a minute, okay?\"\n\nI nodded, though he was already gone by the time I did. I looked at the mess we'd made, a renewed flush on my cheeks. My goal in crashing this party was to be memorable, but what was this? \n\nDid he want more than a single good memory? Was he interested in me before the Halloween party?\n\nAfter peeing and partially cleaning myself of the thick, dripping mess his cum made in me, I got caught up in a series of what-if questions. The question which kept repeating in my head was, What if it started back in July? I stood beside the tub, leaning over the side and stroking my hand through the water, smiling at the thought.\n\nWhen Gavin came back, I looked over my shoulder at him. He took one look at my body leaning over the tub and groaned, \"That's not fair.\"\n\nI smirked and turned toward him, \"Can you trust a siren in water, Gavin?\"\n\n\"It's a little late for me to not trust you, Jess.\" He approached me before he continued, \"Besides, you promised me a song if I got you wet and I covered all bases except using actual water, so hop to it.\"\n\nHe smacked my ass lightly, prompting me to glare at him and cross my arms over my chest, \"I do not recall promising you a song.\"\n\n\"But no one sang happy birthday to me. You said I'd like your voice, I already enjoyed one type of song from you. So, now I want a real song. Besides, isn't it part of your costume to finish me off?\" His voice shifted from a faux whine to a soft taunt as he ushered me into the tub.\n\nI turned my head toward him when my feet made contact with the tub, covering up to my knees in tantalizingly hot water, \"Well, now you're doomed, Gavin.\"\n\n\"You doomed me when you took off that fucking coat.\"\n\n\"Are you sure it wasn't at your dad's party in July?\" I asked before I thought better of it.\n\nHis cheeks flushed red and he didn't answer me. I didn't push.\n\nInstead, I held my hand out and started singing \"Happy Birthday\" to him.\n\nHe smiled and took my hand. I tugged him toward me and stepped further into the tub. Gavin hesitated but another gentle tug urged him to follow me.\n\nThe water felt wonderful when I stepped in, but it was positively sinful after he climbed in with me, though it might've been because he still had the horns on his forehead.\n\nHe sat in the water and I sat on his lap with my back against his chest. My head lay on his shoulder. His arms wrapped around me, stroking his hands along my stomach.\n\nAfter a few minutes, he urged me to look at him, \"The question I have for you is: I've been an asshole to you for years, so why did you ask me to stay? Why'd you encourage me to get closer to you?\"\n\nI leaned toward him, twisting my upper body further and kissed him. A light smile upturned my lips at the corners before I responded, \"You might've saved me from freezing to death tonight. I kinda owed you.\"\n\nHe furrowed his brow and pulled away from me, \"You don't owe me shit for showing you a basic level of human decency, Jess. Not letting you freeze to death isn't something I get rewarded for. Just like not sending Chelsea home in a cab with a stranger while she's on god knows what and vulnerable doesn't get rewarded. You should protect people when they can't protect themselves. Please tell me there was more to this than you feeling obligated because I was halfway decent to you for once?\"\n\n\"I didn't feel obligated, sorry, that... That wasn't what I meant,\" I said, a blush erupting across my cheeks. \"Look, I've had a crush on you for a while now. Given how you treated me, I don't know why. I meant you were nice to me tonight, even after you knew who I was. It felt safe to act on the crush.\n\n\"It was different than how you acted with me at your dad's parties. More genuine? I don't know, different, safer. There was a moment I almost stopped you because I was afraid you were playing a trick on me. Chelsea was here and I thought maybe you were using me to get back at her...\"\n\nA rush of words flowed from me. I couldn't control it. I simply spewed rambling word vomit trying to explain myself before it finally died off. I asked him my own questions when it finally did, \"Why did you stay when I asked you to? You've hated me for years. Why show interest at all once you knew it was me?\"\n\n\"I never hated you. And, I stayed because of the look you gave me when you asked,\" he said before he added, \"Also, because I'm a guy and your costume was extremely hot.\"\n\n\"What look did I give you?\"\n\n\"Like I'd break your heart if I chose to leave,\" he said with a sigh. \"You know you intimidate me, right?\"\n\n\"How so?\"\n\n\"You don't back down when you want something. You don't cave to pressure from people around you. I pushed hard to get you to change, but you didn't budge, you kept coming to school looking exactly like yourself. I even got my mom to send you the dress back in July to try and force you to wear something normal and you still managed to just be you with it.\"\n\nI interrupted him, \"You said...\"\n\n\"I know what I said. Did you really expect me to admit I sent you a dress? Especially one I knew you'd hate? If you had worn it normally, I might've admitted to it...\"\n\n\"I didn't hate it. It was a very pretty dress, it just wasn't a 'me' dress.\"\n\nHe looked outside of the tub to our discarded clothing, \"But the dress you wore tonight was a 'you' dress?\"\n\n\"No. The dress I wore tonight was a costume. No one who knew me saw me in it.\"\n\n\"Come Monday everyone who saw you in it is going to know you,\" he retorted with a smile.\n\n\"What about you? You have the tattoos, the piercings and gauges, the fearless attitude. You put yourself on display like it's nothing for you to express yourself. No matter how much I wanted any of that, I didn't feel like I could do it.\"\n\n\"You want tattoos and piercings?\"\n\n\"Yeah, but you made me afraid to do it. I don't have friends. I haven't had friends since I moved here and first met you guys. I became toxic within a day of daring to step into Chelsea's school. I didn't have anyone to back me up when you guys went off on me. I saw how you reacted to other people getting tattoos and piercings, calling them out for trying to be trendy and copying you. I can only imagine what you would have done if I came to school with a tattoo or a piercing other than my ears,\" I snapped.\n\n\"What would've been the first thing you got if I wasn't an asshole?\"\n\n\"My dog's paw print on the back of my hand. He wouldn't give me his paw in my palm, he'd only ever put it on the back of my hand. He waited until I got frustrated and turned my hand over when I pulled it away. He'd give me his paw every damn time as long as he could touch my hand and not my palm,\" I said with a smile.\n\n\"And piercings?\"\n\n\"Eyebrow.\"\n\n\"Why your eyebrow? Most girls go to more intimate parts first.\"\n\n\"I like the way it looks, lower infection risk, seems like a less intimidating place to start before showing a random person my tits, or even my belly button. Plus, I wear a helmet in roller derby, and the piercing is usually a bar, less likely to get pulled out or injured from it in a hit. We skate fast, take an elbow to the chest and you have to hope your shirt doesn't catch unless you tape them down before every match and training session,\" I said.\n\n\"I'm sorry I made you feel like you couldn't explore those things,\" he said. His thumb rubbed along my right eyebrow, stopping at the edge, \"A black bar would look amazing here.\"\n\nHe pulled me to him, and while his thumbs caressed my cheeks, he curled his fingers behind my ears, lifting my head and lowering his lips to mine.\n\nI pulled away and turned toward him, \"What would you like to see on me?\"\n\nHe leaned over and dragged his teeth across my nipple, \"Here would be nice.\" I whimpered at his gesture, then he added, \"You wouldn't have to go to some random person to get it done, either. I'm working on the required classes at night. I have an apprenticeship for tattooing starting in the spring and piercing will follow soon after. So, if you're okay with waiting a little while...\"\n\nI opened my eyes and looked at him with a smirk, \"What, you expect me to let you have all of my first experiences with things?\"\n\n\"God, I hope so,\" he gave me a once over and smiled.\n\nI pushed his head under the water. He came back up smiling and splashed me. He glanced toward the bathroom door then back at me, \"Can I wash your makeup off?\"\n\nI nodded and he grabbed a cloth hanging nearby. His gentle hand wiped the already smeared makeup from my face until only a thin remnant of eyeliner lingered.\n\n\"And the contacts? Can you take those out?\"\n\n\"I don't have anything to put them in and these things are expensive.\"\n\n\"When are you planning to have violet eyes again?\" I pouted and he added, \"I'll buy you a new pair, please?\"\n\nI removed the violet contacts to reveal my own blue eyes, \"Isn't this taking away what made you interested in me tonight?\" I asked.\n\n\"No,\" he said in a blunt tone, \"those things only grabbed my attention. What made me interested was how you carried yourself. Your confidence -- maybe even a little arrogance -- is fucking sexy on you.\"\n\nMy head tilted and he pulled me into a kiss, causing me to giggle when he hardened beneath me again. I pulled my lips away from his and looked him in the eye, \"Were you testing to see if you'd still find me attractive without the costume?\" I asked, somewhat afraid of what his answer would be.\n\n\"No,\" he said, \"I was trying to figure out why I've been such an asshole to you over the years. You aren't any less beautiful without the makeup on. Tripping over you was a lame excuse because I honestly don't know why I've been so awful to you. You never did shit to anyone. You're smart. You're extremely shy, but that's not a reason to treat you like I did.\"\n\n\"Chelsea,\" I said, turning my gaze toward the bathroom door, \"All it took was Chelsea. My first day here, people came up to me, asking me questions, curious about me because I was new. Even you did. I think she felt like I was taking attention away from her. But I didn't want the attention people were giving me. I only wanted to go to school and go home.\n\n\"You were nice to me for a few days. Just long enough for me to think, 'Maybe it won't be so bad here.' Long enough for me to make the mistake of smiling at you during class one day. The crush I had on you started with that smile. But Chelsea was older than us, and she liked you, too, even though I wasn't competition to her in the slightest. I went from being a nobody who got overlooked to being the prime target for her hatred.\n\n\"You liked her, so you joined her. I think it made you feel more appealing to her. You and Chelsea have been on the outs this year, and this is the first year you've let me exist quietly. I really don't think that's a coincidence. I think you stopped wanting her to find you attractive for cutting down the person she most loathed.\"\n\nHe looked at the ceiling and appeared to contemplate it deeply. With a shake of his head he laughed and brought his gaze back to mine, \"Holy shit, you're right. I was a fucking idiot.\"\n\n\"Yeah, you kinda were,\" I said, pressing myself against his cock.\n\nHe leaned down and kissed me.\n\nI pulled away without kissing back and looked him in the eye, \"I'm terrified this is a game for you, and come Monday you're going to go right back to being awful to me.\"\n\n\"And how will you feel if I walk up to you and kiss you on Monday?\"\n\n\"Like crashing your party was worth the risk.\"\n\nI slid him back inside me and kissed him while he leaned back in the tub, his forearms rested on the sides. He seemed to enjoy the way my body moved against him. My movements were slow, exploratory to see what I liked and what he reacted to.\n\nHe only touched me when he was ready to cum, and this time he lifted me away -- despite my whining objection -- right as he came in the water.\n\n\"Fuck, Jess. Are you even on birth control?\"\n\nI turned my arm to show him the little bump of the implant.\n\nHe rolled his eyes and smiled, \"I have condoms in my room to further limit the risks to you if we could only make it in there...\"\n\n\"I guess I'm sleeping over here too, then?\" \n\n\"Yeah, I'm definitely not done making things up to you.\"",
        "We took our time drying one another after we got out of the bath. The movements he made over my body were gentle and experienced, but not particularly sexual. I sat on the floor of his bathroom in a towel and he combed and dried my hair. It was something I hadn't expected, something he simply started doing on his own. Maybe he really did want to make things up to me.\n\nI let him. No one had done that for me since I was a kid and my mom was less than gentle when dealing with my wild-child hair. It was a sweet gesture. My hair was long and thick so it took a while and I fell asleep with my head on his inner thigh.\n\nHe woke me up when he attempted to pull a T-shirt over my head.\n\nI looked at him, eyes barely open. His horns were gone and I was a little sad about it. He caressed my cheek then said, \"Let's go to bed, Jess.\"\n\nGavin picked me up in his arms and carried me over to his bedroom. He laid me back on his bed and I pulled him down to me in a kiss. \n\nHis smile brought a glint to his eyes and he ran his hands over my breasts and along my hips on top of the T-shirt I wore, \"You don't need clothes to sleep in, right?\"\n\nI shook my head and his hands slid under the fabric, lifting it from me with an ease he hadn't shown when he was putting it on me.\n\n\"You don't either,\" I said in a sleepy haze.\n\nHe undressed and crawled into the bed behind me and pulled my body to his. He wrapped his arms around me in a warm embrace, it seemed protective to me. Genuinely protective. He kissed my neck and whispered, \"Can I push you against the lockers when I kiss you on Monday?\"\n\n\"Mmhmm.\"\n\n\"Can I wait until Chelsea is around? I want her to see it.\"\n\nA smile crept its way over my lips, \"Of course.\"\n\nHe stroked my hair and whispered, \"Can I wake you with a kiss in the morning?\"\n\n\"Yes, please,\" I said with a yawn.\n\nHe caressed my body and we fell asleep together.\n\nWhen I woke in the morning I was on my back, moaning with my legs spread and Gavin's tongue making me squirm while he lifted my hips to his mouth. Not the kiss I was expecting, but a very good one nonetheless. His tongue ring made me shiver and I wondered, for a moment, how he'd react if I blew him with one of my own. His fingers rubbed me while he watched me squirm, adjusting until he found which movements made me whimper and gasp.\n\nI ran my fingers through his hair and whispered, \"Fuck me,\" in a tone that was more akin to an utterance of pleasure than a direction. My stomach tensed and my orgasm cascaded from my pussy outward. He kissed his way up my body and stopped, holding himself above me.\n\n\"Can I?\" he asked.\n\nI nodded and he kissed me again, \"No, Jess. Say it, please? Can I?\"\n\nI begged, \"Would you please fuck me again, Gavin?\"\n\nHe smiled and leaned over, opening a bedside drawer to get a condom. After opening it and rolling it on he pushed into me, lifting my hips and thrusting. He kept himself lifted above my body, only his dick and pelvis had contact with me. I brought my hand between us and rubbed myself. He watched and smiled while my body arched and tensed in pleasure.\n\nGavin pulled out of me and I whined until he replaced his cock with his tongue. His kisses and licks, a gentle and insistent blend of movements, made my toes stretch and curl. After bringing me right to the edge of another crest, he crawled back up and slid into me again. His arms curled under my back and lifted me to him.\n\nI clasped my wrist behind his head and let him guide me over him. My body tensed in his arms and my pussy squeezed his dick, making him gasp and pull me down onto him with urgency. He came with a loud groan of, what I hoped was, pleasure.\n\nA soft knock on his door drew our attention away from one another.\n\nHis nose crinkled and his lip lifted into a snarl as he looked toward the source of the intruding noise. A slightly louder knock sounded and he groaned. Leaning over and placing me back on the bed with a kiss on my lips before he withdrew from me. He got up and removed the condom, tossing it into a nearby wastebasket before pulling on some boxers. His shoulders slumped when he opened the door.\n\nChelsea's long blonde hair twirled around her finger and Gavin made a point to leave his bedroom door open long enough for Chelsea to see he had not spent the night alone, but not long enough to see who I was. He put his hand on her shoulder and they turned and went downstairs.\n\nThe last several hours notwithstanding, my worry of him using me to get back at her for dumping him lingered. I put on the T-shirt he'd given me to wear after the bath and went to stand at the stairs. They were arguing about me, though it seemed Chelsea hadn't yet figured out who I was.\n\nGavin was trying to stay calm but there was a clear strain in his voice, \"I don't care, Chelsea. I don't like who I am when I'm with you. We're toxic together, we hurt each other and we hurt other people. We don't work as a couple, we never did.\"\n\n\"I love you, Gavin. I made a mistake and I'm sorry,\" she said through sobs.\n\n\"I don't, Chels. You need to go home and forget about the idea of us getting back together this time. It's not happening.\"\n\n\"Why? Because some slut boned you last night? You'll get bored of her and come back to me. You always come back to me because no one else gets you off like I do.\"\n\n\"Stop,\" he said. \"It's because of Jessica, okay? I don't like that it took zero fucking effort for you to make being so cruel to her so appealing to me. I don't like that she recoils when people come near her or that she sits in the back of the class so she can be the first one in and the last one out so no one fucks with her while she's trying to get through her day. I don't like that you take pleasure in her fear and pain. It's disgusting and I won't be a part of it anymore.\"\n\n\"Jessica? What made you grow a spine for her all of a sudden? You're the one who said she shouldn't get away with hurting me like she did.\"\n\nI sat on the stairs. Hurt her? How did I hurt her?\n\n\"How did she hurt you? You never shared details with me. You said she hurt you and I went along with it.\"\n\n\"Does it matter? She hurt me, Gavin. She deserves to hurt too,\" she whined.\n\n\"She didn't do shit to you, did she? You are a cunt. A fucking sadistic sociopath. Get out and don't come back. Don't call me. Don't even come near me.\n\n\"If you mess with Jessica even once more this year, I will personally see to it your dad finds out all about that little mishap at his store, understand? How do you think he's going to react when he finds out he fired his best employee because of something his daughter did?\"\n\nShe huffed but the door slammed and Gavin came back toward the stairs, stopping when he saw me sitting there with my head leaning back against the wall. He came up the stairs and sat on the step below me, \"How much did you hear?\"\n\n\"Enough,\" I said and leaned over to kiss him.\n\nHe pulled away, \"What was that for?\"\n\n\"How you've treated me over the years actually bothers you, doesn't it?\"\n\n\"Yeah. I don't like the person I've been the past few years. Not only with how I treated you, but how I treated most of the student body. I was an asshole surrounded by assholes who made it so much easier to be cruel than it should've been. I'm sorry it took me so long to figure myself out.\"\n\nI laughed, \"You know, I had a plan back in May. Endure one more year. Then, at graduation, show off the derby style I've held back on for the past six years.\"\n\n\"You were going to fight Chelsea?\"\n\nMy eyes scanned over him, \"What makes you think it would've been Chelsea I taught a lesson to? You were the one who dished most of it, she only fucking encouraged you.\"\n\n\"So, instead of punching me, you opted to fuck me?\"\n\nI shook my head and he spoke before I could say anything, \"Oh, so you're still going to punch me?\"\n\nWith a glare and gentle tap on the shoulder, I said, \"No, I was going to say, when you stopped being cruel it no longer had the same cathartic impact for me. It seemed pointless to punch someone who wasn't being mean to me anymore. When I found out you and Chelsea broke up, I decided on a better way to get back at Chelsea.\"\n\n\"Fuck me?\" he asked.\n\nA smirk spread on my lips involuntarily, \"Yes. Along with having the satisfaction of knowing I took what she really wanted.\"\n\nHe laughed, \"I am not what Chelsea wants. What Chelsea wants is herself with a dick and endless money. She never understood. My dad's money is not my money.\"\n\n\"Oh, I know. I meant attention. I took all the attention away from her with my mysterious display. And, if you kiss me on Monday, I'll take even more away from her.\"\n\n\"Is that all you got from this?\"\n\nI shrugged, \"A friend would be nice.\"\n\n\"Maybe more than a friend?\"\n\n\"You've been watching me at school?\" I asked, changing the subject with the subtlety of a devout Satanist at an Evangelical conference.\n\nGavin smiled, but let me drop it, \"I approached you in the hallway back in August because I wanted to apologize to you. You stopped dead in your tracks and ran into the restroom and waited there. You skipped class because I sat outside waiting for you to come out.\"\n\n\"I didn't skip class, I climbed out the window and by the time class let out you were being yelled at by Mrs. Simmons for skipping.\"\n\nHe laughed and pushed his shoulder against me slightly, \"I got detention, you sneaky little bitch.\"\n\nWithin a moment, his hand was on the nape of my neck, pulling me to him. His lips were firm against mine. When he pulled away he looked into my eyes, \"I saw you before last night. I didn't know how to approach you without scaring you, so I kept my distance to do the least harm I could and tried to keep my friends out of your way too.\"\n\nHe smiled and ran his fingers over my cheek, \"You asked me if I was taking your makeup and costume off to see if I was still attracted to you. The truth is, it was at the beach over the summer when I first noticed I found you attractive.\"\n\nI tilted my head, \"I don't go to the beach.\"\n\n\"Okay, I was at the beach. You were trying to eat an ice cream cone hastily so you could go into the bookstore.\"\n\nI blushed, \"I...\"\n\n\"Dropped ice cream down your shirt and god did I want to go help you clean it up,\" he said with a big smile.\n\nI covered my face with my hands and he pulled them away.\n\n\"You had on an oversized plaid shirt and you took it off. You were standing there in a black tank top and jeans with a smear of ice cream going from here,\" he brushed his hand over my right clavicle, \"to here,\" and cupped my left breast. \"Just a thick white smear...\" he trailed off before he kissed my neck and groped my breast.\n\nI smiled and turned his attention back to my lips, kissing him and licking my tongue along his tongue ring. He grasped the sides of my head and held me in a deep and needy kiss.\n\nWhen he pulled his lips away he smiled at me. \"For what it's worth, I enjoyed myself more with you in the last day than I ever enjoyed being with Chelsea. What she said about no one getting me off like she does?\n\n\"Well, you only had to let me push you against my bedroom door and kiss me to get me off, which is part of why I said you should leave right after. I've never had... That's never happened to me before,\" he said, narrowing his eyes at me, though his smile grew.\n\n\"You...\"\n\n\"Came hard when you pressed yourself against me through my jeans. I didn't know how to deal with getting so overwhelmed by a girl, especially when I didn't even know who the fuck she was.\"\n\nI looked at him, \"I dropped my ice cream cone before July.\"\n\n\"I know.\"\n\n\"So at your dad's party?\"\n\n\"I told you, I wanted it to end early and everyone to go home. Your dad is always the last to leave. I thought after everyone else was gone, we could order a pizza and watch the fireworks.\"\n\n\"I had a bruise on my arm from roller derby.\"\n\n\"What?\"\n\n\"When I snapped at you. I fell on the track during practice a few days before. I hit a pole that wasn't covered above my elbow pad, almost broke my arm. You grabbed that bruise and it hurt.\"\n\nHe stroked his hand over my cheek, \"That really bothered me. You seemed scared of me and I was so fucking mad at myself.\"\n\n\"What were you going to do if I hadn't snapped at you?\"\n\n\"Take you outside to talk to you. I didn't exactly want to apologize in front of all of my dad's employees and their families.\"\n\n\"Why didn't you apologize when you shared your pizza with me?\"\n\n\"You were sitting with me. You were eating. I didn't wanna fuck it up.\"\n\nAfter a call to my mom saying I was going on an impromptu trip with some derby friends, Gavin and I spent the weekend together. It wasn't like the whole time was a romp. We talked. We joked around. We ordered a lot of food, including the little crab things he had ruined for me on the 4th.\n\nHe took me home on Sunday night and lingered at the end of the driveway until I closed the front door behind me. I didn't sleep much. I was anxious about what would happen the following morning.\n\nI wore my normal clothes, no makeup and no-frills, but I did keep the red hair. I was standing at my locker when Gavin wandered into the hallway, shortly after Chelsea.\n\nChelsea was staring me down. My hair was naturally straight and the normally peanut butter brown strands were laying over my shoulders in long red waves. You could almost hear the wheels turning in her head as she tried to put two and two together while removing the drunken distortion blanketing her memories of the party. \n\nI almost turned to walk away when Gavin put his hands on my hips and turned me back toward him. He picked me up and pushed me against the lockers. Initiating a kiss passionate enough to warrant two of our teachers interfering amid the absolute silence that fell over the hallway.\n\nGavin had a huge smile on his face when he lowered me back to the floor. Mr. Ryland moved to pull him away from me.\n\nMrs. Simmons ushered me into her classroom. Before she shut the door the expression on Chelsea's face told me she finally got it. It was half scowl and half pout.\n\nGavin was pleading with Mr. Ryland, \"Please, let me talk to her for a minute, I need to...\"\n\nI had my fingertips on my lips, Mrs. Simmons was asking me questions, stressing proper conduct and asking if he had assaulted me. I only half heard her. I legitimately expected things to go back to normal after the weekend ended. He got a prolonged birthday fuck to make Chelsea jealous then they hooked back up on Monday. That's how it should have gone.\n\nMr. Ryland finally let Gavin go into Mrs. Simmons's room and she started to object, but Gavin ran over to me and hugged me.\n\nIn a rush, he said, \"Go to all the things with me, please, Jess? Prom, homecoming, whatever stupid dances and functions there are. Go with me?\"\n\nOutside the door, a small crowd had gathered, including Chelsea.\n\nI nodded and he kissed the top of my head. Looking at a clearly flustered Mr. Ryland he said, \"Okay, how much detention gets added on if I kiss her like that again?\"\n\nMr. Ryland balked.\n\nChelsea's cheeks flushed red with anger and the other students were whispering about what happened. There was a video because of course someone was recording a normal day at school like it was some big event. Most kisses shouldn't have the word 'viral' attached to them, but the excitement people expressed over how he kissed me was something else, and it spread fast."
    ],
    "authorname": "Erozetta",
    "tags": [
        "bully",
        "high school",
        "first time",
        "halloween",
        "tattoos",
        "piercings",
        "crush",
        "costume",
        "confrontation",
        "bullied girl"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-bullys-birthday"
}