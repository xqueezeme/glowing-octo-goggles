{
    "title": "Cindy Heller Ch. 1",
    "pages": [
        "Hey, you! Yes you, dear reader. Are you looking for something really HOT? You looking for a little STEAMY ACTION? \n\nWell, then, you better stop right now. Go look in 'Extreme' or 'Erotic Couplings'.\n\n'Cause this here's a FAIRY TALE, for us ROMANTIC TYPES who want something more out of life than SEX, SEX, SEX\u2026\n\nOkay, that's got rid of the Jack-Off crowd. Those of you who are left, prepare to be enchanted, as I weave a web of words I call\u2026\n\n************\n\nOnce upon a time there was a young girl named Cindy Heller, who lived in a big house with a woman she called Mom, and two older girls called Kimberlee and Symphonee, whom she called her sisters.\n\nThe house was high in the Hills. The Beverly Hills.\n\nCindy was slim and fair with a pretty little upturned nose and was generally an Aryan type girl. Her Mom and sisters were darker, straight nosed Mediterranean or East European types, but this was kind of hard to tell, on account of all the expensive surgery and bleach that had been applied.\n\nHow come she was so different to her Mom and Sisters? \n\nBecause 'Mom' was not really her mother, and Kimberlee and Symphonee were not really her sisters. \n\nYou see, Mom in her younger days had a job as a digger for gold, and while digging, she had come up with a real nugget, whom she had married.\n\nWhen the nugget had passed on, Mom had wound up with a big house in Beverly Hills, and a little fair haired girl called Cindy, who was not her daughter.\n\nThe nugget's lawyers had given her the option of keeping both the house and the little girl, or keeping neither.\n\nSo Cindy had had to live with her wicked stepmother, who already had two daughters by a previous marriage.\n\nAnd Cindy grew into a great beauty, while they turned out plainer than Gila monsters, which meant they made her life hell, and treated her cruelly.\n\nBut you've seen the Disney version so you already knew that.\n\nOur Cindy was made to serve as their maid. But she was treated far worse than any maid; even maids are sometimes allowed days off for Ricky Martin concerts.\n\nAnd unlike Cindy, who was forced to remain butt-naked, maids are usually expected to wear at least ONE article of clothing.\n\n************\n\nNow, as this is supposed to be an erotic story, I will digress here and introduce a gratuitous Eric Stanton BDSM type interlude that went on between the four of them.\n\nOne day in their living room Cindy was sweeping out the huge Genuine Antique Victorian fireplace that burned real wood, while her sisters were sprawling on the sofa talking. \n\nKim was painting her toenails cerise. Sym was exfoliating her chin with a pair of tweezers. \n\n\"Did you see that shmatah Melodee was wearing yesterday\" said Sym without looking up from her toes.\n\n\"Yeah,\" agreed Kim putting down the tweezers and grabbing the TV remote to change channels away from the News. \"Lisa Kline my ass; 'Ross Dress for Less' is more like it\u2026 and did you notice the STINK! She must have emptied a whole bottle of Farragamo on her pussy and she still smelled like last month's lox. Hey, FUCKFACE, watch what you're doing!!\"\n\nThis last outburst was addressed to our Cindy, who had sneezed on account of the dusty fireplace, and also from being forced to go around the house naked with the aircon on full blast.\n\nThe sneeze had blown dust all around her, and across the floor.\n\nCindy sat by the fireplace surrounded by ashes, her eyes streaming from the cloud of dust.\n\nKim stood. She marched over to the fireplace in her Christian Louboutin seven-inch stilettos and pushed poor Cindy over, sending her sprawling and knocking her little forehead with a clang onto the grate in the fireplace.\n\nIgnoring the even bigger cloud of dust this had made, Kim and Sym got to work immediately on Cindy, incensed by the sight of her infuriatingly cellulite-free ass, which had presented itself most fetchingly after she landed.\n\nKim held her down with her foot, pressing one stiletto heel into the small of Cindy's back so hard it threatened to puncture her flesh, while Sym grabbed the brass poker from the fireplace.\n\n\"Pity you hadn't got the fire going,\" laughed Sym over Cindy's screams of pain as she thwacked her repeatedly across her buttocks. \"We could have had a branding!\".\n\n\"Go on, Sym, there's still some parts that aren't bleeding,\" shouted Kim to her sister. Symphonee let fly blow after blow with the poker, until there was no trace of pearly-white left of Cindy's burning ass.\n\nThen Mom came into the room from her work-out, wearing a perspiration-drenched gray leotard. \"What's all this noise \u2013 OH! My Neapolitan floor tiles! You \u2013 you\u2026\" she was dumbstruck with rage.\n\nThe three of them dragged Cindy from the fireplace into the middle of the room and laid into her with their fists, nails, heels, teeth. Even the TV Guide was used as an impromptu but slightly ineffectual weapon.\n\nThen they calmed down a little, and began on a slightly more considered punishment.\n\nSymphonee sat on her face, Kim on her belly. Mom picked up the poker which had rolled across the floor. She prized Cindy's legs apart.\n\n\"Now Cindy,\" said Mom with chilling calm, \"there comes a time in a young girl's life when she must lose that precious thing, which she has kept and treasured all her life, saving it for Mr. Right. Trouble is, my dear, the nearest you'll ever get to Mr. Right is this goddam poker. Now be a brave girl, it'll be all over, then you'll be a WOMAN\u2026\"\n\n\"Hurry up Mom, she's tickling me\u2026I'm going to pee\u2026\" Symphonee's warning came too late, as a stream of urine trickled through her knickers, into Cindy's mouth and down over her grubby, tear-stained cheeks. She choked and spluttered through her sobs.\n\nBut Cindy's coming-of-age was to be postponed, her virginity being literally saved by the bell. Or rather the phone, which started ringing. It was one of Mom's neighbors, with news about the Big Party next week.\n\nAnyhoo, enough action, on with the tale\u2026\n\n************\n\nSo her wicked stepmother and two ugly stepsisters spent the next week planning for the Big Party. \n\nCindy, of course, was not going, even though the gold-embossed invitation, which had been sent to all the (largest) houses in the neighborhood, expressly had said 'All Residents Are Welcome'.\n\nThe invitation was from a young film-star called Phil \"Prince\" Charming, who had recently moved into the area. He was taking the opportunity to show off\n\nA.his neighborliness, B.his forty-room mansion, set in ninety-acres of landscaped garden, complete with a full-scale replicas of Rome's Trevi fountain, and London's Nelson's column, and C.his finely-chiseled body that just undergone extensive cosmetic surgery from Los Angeles's foremost surgeon (who had personally performed the fine chiseling).\n\nIn addition, Phil's manager had strongly suggested that unless he wanted to lose the straight crowd altogether, he better find a young girl and announce his engagement as soon as possible. So the Party would provide a good opportunity to meet a few prospects.\n\nCindy felt even more wretched now, knowing that she would never be allowed to the Big Party. You see, she was in love with the handsome actor. She had watched every one of Phil Charming's movies, which had been shown every day on TV for the last month, as a build-up to his new blockbuster, \"Fowl Service\" (about a tennis star caught sleeping with a chicken).\n\nNo matter that there were probably fifty million women all over the country that had also fallen for him. She felt that their destiny was together. In her favorite of his movies, Scorsese's gritty 'From the Gutter', he had mumbled a particularly appropriate line: \"Uh, I love you. You and me gotta get outa this shit-hole together or die tryin'\".\n\nRidiculous and hopeless as it seemed, she just KNEW that this was addressed directly to her, Cindy.\n\nIf only they could meet\u2026\n\nOn the evening of the Party, her stepmother and stepsisters were out visiting the Fred Segal store on Melrose, in a last-ditch (and futile) attempt of Mom's to clothe her daughters as potential mates for the Prince.\n\nCindy, left alone in the house as usual, was startled by a loud scuffling and clanging in the front yard. Coyotes? Burglars? Either way the desperate girl didn't care. At least being torn apart by coyotes or raped by burglars would provide an escape from her miserable life. \n\nShe unlocked the front door and peered into the darkness. \n\nA grasshopper, that had been chirping noisily, suddenly stopped.\n\nJust in front of her, lying on the driveway, was a chubby little man dressed in a white linen suit. He was in the process of extricating himself from a garden hosepipe, which he evidently had just tripped over. Seeing her, he looked up and beamed.\n\n\"Ahh, Cindy Heller, I presume! Look at you, all naked, just like the day you were born!\"\n\nHe stood up. He was very short, with fair curly hair that had almost completely receded from his big, round head. He looked like an aging cherub. His suit was grubby after his fall, and he tried to dust it off, to no effect.\n\nCindy looked at him, wide-eyed but without fear. He was simply too unthreatening a sight to scare anyone, even the paranoid residents of Beverly Hills.\n\n\"Yes, as naked as the day you were born, but a little bigger in places\u2026 My word, you have grown into a delightful young thing! \u2026But I forget my manners, allow me to introduce myself. My name is Mitchell Goldfarb, of Goldfarb Public Relations Consultants. But you can just call me your Fairy Godfather.\"\n\nCindy eyes widened even further. \"Are-are you really my Godfather?\" she asked.\n\n\"Yes, and I'm really a Fairy too -- luckily for you!\" he giggled. \n\n\"Yes, honey, I knew your mother well. Not your stepmother, that BITCH. I mean your REAL mother. She was a sweet thing, God rest her soul. Now, let's get you ready for the Party; I assume you DO want to go to the Party?\"\n\nCindy almost swooned with longing at this offer. She swayed, clutching at the doorframe. Goldfarb ran up and put a hand under her arm to support her. \"I'll take that as a yes,\" he said, and he led her out into the driveway.\n\nGoldfarb suddenly assumed a professional attitude: \"Okay, honey, turn around, let's get a look at you \u2026\".\n\nHe considered Cindy from every angle, like a sculptor deciding where to start chipping at a slab of marble.\n\n\"Nice, slim figure, real tits for a change\u2026 that's good, boob jobs are out these days\u2026 a little on the short side, maybe. Hey, bubbele, are those eyes your own color, or are they lenses?\"\n\n\"I \u2013 I've never had any problem with my eyesight.\"\n\nGoldfarb laughed until he coughed. \"Oh, how MARVELOUS , what a natural, so naive, so PURE! 'never had any problem with my eyesight!' Wonderful! Now, what she we do with you? I really mustn't blow this: Keep it understated, keep it subtle Mitchell, think PURE. Pure like\u2026 like... like\u2026 oh FUCK, What's the metaphor? Pure like\u2026\"\n\nCindy offered a suggestion. \"...like crystal?\"\n\n\"Like crystal...\" Goldfarb thought. \"Yes, that's not bad, like crystal. Cindy, tonight you shall be the Mysterious, the Untouched, the Unbroken Crystal. You shall be Crystal Marshall, Undiscovered Movie Starlet. If they ask you who your manager is, say: 'I'm between managers right now.'\"\n\nGoldfarb laughed and began twirling to an imaginary waltz. \"And you SHALL go to the ball, and you SHALL dance with the Prince! PASTAFAZOOLA BAGELACANTA BIPPITY BOPPITY BOO!\"\n\nAnd with that the Fairy Godfather waved his magic wand and Cindy Heller was transformed into\u2026 CRYSTAL MARSHALL.\n\nHer gown was a pearly Monique Lhuillier number.\n\nHer pure blue eyes outsparkled her Harry Winston necklace.\n\nShe was Untarnished Beauty, clear and pure as crystal. \n\nGet the picture?\n\nGoldfarb led her by the arm, like the father she had lost but no longer remembered, to a White Lamborghini Diablo, and handed her the keys.\n\nAs she revved the huge Flat 12 engine, he shouted to her over the roar, \"One VITAL thing, sweetie\u2026All this stuff, all your clothes, jewelry, the car, basically the WHOLE SCHMEER, goes STRAIGHT back to the rental company the instant the clock strikes twelve midnight! Remember, honey, DON'T stay after midnight if you don't want to plotz with the embarrassment!\"\n\nCindy sped off along the dark, silent sidewalk-less street into the darkness.\n\n************\n\nSo. I counted around 2,000 words so far in this story, of which only around 350 or so have had any sexual content. \n\nYou HAVE read up to here, haven't you? You're not being impatient and SKIMMING past the boring stuff are you?\n\nFor those of you who made it this far, here's something to keep you going:\n\nSHE LICKED THE PRECUM, SLOWLY, DELICIOUSLY, FROM THE TIP OF HIS PULSING COCK.\n\nSHE SAVORED THE SALTY TASTE. HER NIPPLES GREW AS HARD AS A HARVARD ENTRANCE EXAM. HE STOOD OVER HER, ARMS FOLDED, HIS HAIRY BALLS HEAVING IN TIME TO HIS STEADY BREATHING AS HER LIPS SUCKED RHYTHMICALLY AT THEM, FIRST THE LEFT, THEN THE RIGHT, THEN THE LEFT AGAIN, JUST TO MAKE SURE SHE HADN'T MISSED A BIT. \n\nHER LABIA WERE SWOLLEN AND MOIST NOW AND SMELLED SWEET, LIKE HONEYDEW MELON MIXED WITH A FAINT AROMA OF SEA BASS LEFT OUT IN THE HOT, HOT CALIFORNIA SUNSHINE TO DRY\u2026\n\nOkay, feeling better now? Shall we go on?\n\n************\n\nCindy left the keys with the valet and stepped delicately and a little hesitantly up the steps of Palace.\n\nEven before she entered the hallway, heads were turned towards her as one by one the members of the glittering crowd noticed her great beauty.\n\nAn uninvited paparazzo ran in front of her and fired off a whole roll of film before he was discretely ejected by Phil's private police force, to be brutally beaten to a pulp out of sight and earshot of the guests.\n\nShe walked into the crowded entrance hall and through into the ballroom, as the toastmaster announced her as \"Ms Crystal Marshall.\"\n\nAnd then their eyes met. (Cindy's and Phil's, stupid!)\n\nHe was everything she had hoped he would be: Tall, polite and charming, strong and yet somehow as vulnerable as a little boy, with that long wisp of hair that was constantly falling over his eyes.\n\nAnd he? He, like all the others, was enchanted. In fact he got so enchanted his woody almost ripped through the pants of his Armani Suit.\n\nWithout a word, he held out his hand for them to dance.\n\nThey waltzed, and the dance floor slowly cleared, not because they were terrible dancers, but because the guests were so captivated by this beautiful couple, who seemed to embody the pure, simple magic that is Hollywood.\n\nEven the hard-bitten, cynical Martin Scorsese, director of 'Raging Bull' and 'Goodfellas', who was one of the guests, turned to his companions with a tear in his eye and said in a choked voice, \"See, I fuckin' told you romance isn't fuckin' dead in this town!\"\n\nAs they danced, he whispered to her and asked if they could be alone. Coyly she looked up at him and agreed.\n\nHe led her out to the starlit gardens, accompanied by the tinkling of the fountains and the fading sound of the hired orchestra, who were now playing a wistful and almost painfully poignant rendition of Busta Rimes' 'Gimme Some Mo'.\n\nThey came to a little gazebo, and sat a while in silence. Eventually Phil produced an object from his breast pocket. It was a glass dildo.\n\nCindy looked at it uncomprehendingly. \n\n\"Do you like it?\" Asked Phil.\n\n\"It \u2013 it's beautiful, said Cindy, running her little fingers gently along it, feeling the smooth coolness. What is it, exactly?\"\n\n\"It's an heirloom\", said the Prince. He seemed to grow pensive. \"It was my Mothers. I \u2013 I never knew my mother.\"\n\nSuddenly moved, Cindy put her hand over his, while he stroked the shaft of the dildo sadly. She looked him in the eye, no longer shy. \"I never knew my Mother either.\"\n\nThe stars overhead seemed suddenly close enough for them to touch, as their lips moved towards each other, slowly, drawn by that mysterious power, Love, which is like magnetism, only more mysterious.\n\n************\n\nWell, that's nigh on 3,000 words, which is plenty enough for Chapter One. \n\nTell you what, I'll do you a deal, okay, give me your 5 vote, and I'll give you the whole of Chapter Two, the concluding part of this tale. Vote 5. I need the incentive. \n\nMeanwhile, here's a preview of what's in store in Chapter Two! \n\nKIM'S LIPS CLOSED TIGHTLY OVER HIS HOT, SMOOTH HELMET AS THE CUM PULSED INTO HER MOUTH, SO THAT NOT A DROP OF HIS DELICIOUS FLUID WOULD SPILL. SHE GULPED IT ALL DOWN GREEDILY\u2026.\n\n************\n\nHE TUGGED AT CINDY'S NIPPLES, STRETCHING THEM FURTHER AND FURTHER OUT, LIKE A CHILD PLAYING WITH HIS GUM INSTEAD OF CHEWING IT. SHE SCREAMED IN AN IMPOSSIBLE COMBINATION OF AGONY AND ECSTASY\u2026 "
    ],
    "authorname": "NoJo",
    "tags": [
        "glass dildo",
        "cinderella",
        "kimberlee",
        "symphonee",
        "wicked stepmother",
        "mom sisters",
        "cindy heller",
        "big party",
        "time young",
        "day born"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/cindy-heller-ch-1"
}