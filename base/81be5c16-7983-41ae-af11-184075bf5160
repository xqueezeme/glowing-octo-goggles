{
    "title": "Love Note Pt. 01",
    "pages": [
        "Ana is -- and always has been -- her own woman. She doesn't need trends, popularity or silly sentimentality. She has also learned the hard way that she doesn't need a man. Any man. She knows herself well and doesn't want to be like everyone else; she doesn't crave what they have. \n\nLeo is a musician that sings about the kind of love that Ana scoffs at. His work has exposed him to enough women to make him realise everlasting love is en route to extinction. So, he lays down his mic and walks away from both the industry and all emotion. \n\nWhen they meet, each unbalances the other's neat resolutions. Is the music industry shallow and love a fallacy? Do high walls really make for safer hearts? And what is to happen now that Leo has found the one woman who re-inspires him to write love notes worth singing... but also doesn't want to hear what she doesn't believe in? \n\n*** *** *** \n\n*** I *** \n\n\"Why do you still live in this grey, sweltering jungle?\" \n\n\"I like being employed -- and this is the best jungle for that at the moment. And it only feels excessively hot when crazy people like you opt for waist-length twists in summer.\" \n\nAna cracked a lazy eye open and peered at her friend behind the wheel of her sporty little Mercedes Benz. She and Thandi teased each other all the time, easy considering how different they had turned out. Ana had moved around enough in the last five years to be unsure of where her home was anymore. Thandi had called Johannesburg home since their families had both moved and met there when the girls were five. Ana had never lasted at any job for more than a year; meanwhile Thandi was... disgustingly successful. \n\nShe lifted her twists and draped them over the back of her headrest. \"I'm not crazy -- my hair's never been a problem before. This November is just far hotter than any I remember -- it's technically not even summer yet. I want a spring do-over... Hey. Are we in Hyde Park? Why are we in Hyde Park?\" \n\n\"Because I live here now.\" With that, Thandi pulled into a small complex with two uniformed guards at the gate. \"So, this is the pad you're visiting for the next month.\" \n\nAna pushed her oversized sunglasses up into her twists. \"Fancy, Ms Moyo... Okay, I think I could put up with this for a month -- especially considering the nightmare you've tricked me into.\" \n\n\"I did not trick you, Ana.\" Thandi parked outside a facebrick block. \"I just didn't tell you over the phone about how desperately grateful I am that you're the sort of friend who would save a sister in need during a work emergency.\" \n\n\"Hm,\" Ana scoped the adjacent matching block while her friend unlocked. \"Luckily you're paying me well enough for me get over the pseudo-deception pretty quickly.\" \n\nThandi laughed. \n\nThe two-bedroom apartment was small but pristine; boasting scarily shiny appliances and a view of small shared garden out back. Ana took in her guest room: creams, yellows and pale pinks; a thick rug at the foot of the bed; and bright daises in a vase on a glass table flanked by two armchairs. She twisted her full lips. \n\n\"It's not that bad, oh, Goddess of Grunge.\" \n\n\"I'm nowhere near... \"grungy\". I'm told teens in the '80s were... meh, never mind.\" Ana tilted her head at a painting of a photograph. \"And this is that bad. That picture doesn't even make sense. Why paint a photograph in a totally unpainting-like manner??\" \n\n\"It's art. Very expensive art -- so, there.\" \n\nAna snorted. \"You do know that people who live in places like this eat tofu and... break into musical dance numbers, right?\" \n\n\"Dork.\" Thandi elbowed her. \"I didn't take the afternoon off to suffer abuse. Get freshened up so I can prep you for your job.\" \n\n\"Ah, fuck. Really?\" \n\n\"Yes, really. We need you ready to go, go, go by Tuesday morning, my friend.\" \n\nAna tossed her bag on the bed and went to check out the rest of the apartment. It was all very light and spotless. She tugged her tank top down, as if not ready to expose her tattoos to the virginal ambience. \n\n\"And... these are for you.\" Thandi held out a set of keys attached to a gate clicker... on a pink keyring. \n\nAna scowled at the print on the keyring. \"'If you change the way you look at things, the things you look at change'...?\" \n\nThandi did a mini fist pump which looked cute in her tailored outfit. \"Wayne Dyer. You'd love him.\" \n\n\"Uh huh.\" \n\nAna took in Thandi's designer clothes and neat weave. The apartment and suburbs suited her perfectly. Unlike Ana -- who had to be sticking out like a disorderly delinquent with her scuffed sneakers and purple lips. \n\n\"What?\" Thandi had her hands on her hips. \n\n\"Nothing... You just seem hell-bent on challenging me to love you in spite of you.\" \n\n\"What the hell's that supposed to mean?\" \n\n\"Nothing, geeko.\" Ana flopped onto a white couch. \"I'm just saying tricking me into a holiday that turns out to be a temp job is one thing; finding you knee-deep in convertibles, private complexes and White people is quite another.\" \n\nThandi's spine straightened. \"There are Black people here.\" \n\n\"True,\" Ana smiled. \"I saw a whole two in uniform at the gates.\" \n\n\"You only been here two minutes and haven't seen anyone else!\" \n\n\"I know, my sweeto geeko.\" Ana laughed, tugging her down next to her. \"Just teasing your prissy weirdness. Now, quite foolin' and tell me about this slave labour. Focus.\" \n\nSupper was Chinese takeaway and they devoured it over a four-hour briefing session. \n\nAt least an hour of that work time was spent reminiscing and laughing. Ana actually only appreciated food when around her friend -- the rest of the time she lived on junk... or skipped meals entirely. \n\nThe junk partly accounted for her curves, no doubt. \n\nWhere Thandi had a slim, compact frame, Ana constantly felt too curvy... like she was spilling out all over the place. Her hips alone were every slim-fit jeans' nightmare. She'd long ago given up on wishing herself into a less attention-grabbing shape and focused on low key clothing instead. \n\n\"Your first goal will be to have a band assembled by Friday,\" Thandi told her. \"We have conditional agreements in place, but no one has signed on the dotted line yet and I want that secured before rehearsals begin.\" \n\nAna tried to mumble a response past her full mouth -- then just settled for a chopstick salute. \n\n\"You also need to get the official track list okayed as soon as possible, so we can arrange backtracks should they, God forbid, ever be needed. But mainly to get the new songs done.\" \n\n\"How many new tracks still need to be produced?\" \n\n\"At least six.\" \n\nShe coughed. \"Six new tracks and as many backtracks in five days??\" \n\n\"See why I refused to entrust this to anyone but you?\" \n\nAna grinned. \n\nShe really had been irritated at first learning that Thandi had invited her over with ulterior motives. But whom was she kidding? It felt fantastic to be back, doing what had come so naturally to her a few years ago. Also, this was the best-paying gig she'd ever had; and even if it weren't, she would have wanted to help her overextended friend. \n\nThe true pillock in this scenario? Leo Boreas. \n\nThandi Moyo ran an efficient management company that had never let down a single musician to date. The fact that Leo Boreas -- whoever the hell that was -- was stuck four weeks before a once-off national event with no management team and no assistant was his own damn problem. The crap with celebrities (even retired boy wonders) was that they always assumed the world was at their beck and call. \n\nA pragmatic human being would understand the logic of sticking to an agreement. But not this dolt. No. He had started out with a mid-December appointment with Thandi to begin work; but then, the very next day (apparently for shits and giggles), announced that he'd be arriving on the first of the month instead and expected an assistant to be ready to work on non-existent notice. \n\nThis gave Thandi less than two days to find a stand-in since she wouldn't be around much in the first two weeks. She wasn't even given any negotiating room -- not that she would ever piss off a big client by messing with his plans as he'd messed with hers. \n\n\"I'm going to be in Botswana a lot and can't afford handing a client this big over anyone less than 110% committed.\" Thandi's dark eyes were earnest. \n\nAna was lying on her back, her eyes barely open. \"God, I know. Look, Botswana isn't that far -- go as often as you need to in order to get those studios set up. This is not as freaky-scary as you're making it out to be. If I have questions or anyone catches fire while you're gone, I'll call... Unless you'd prefer handing this account over to one your lackeys -- not too late, y'know.\" \n\n\"Uh uh,\" Thandi shook her head. \"I trust those two, but not with this. Because Leo Boreas is \"freaky-scary\", ntombi. Don't underestimate the man just because he stepped down from music five years ago --\" \n\n\"I'm not. I'm underestimating him because he sings R&amp;B and no one has taken love songs seriously since the '90s.\" \n\nThandi ignored the interruption. \"He is huge. I've had my balls in a vice for months just hustling to secure this job --\" \n\n\"Your balls -- that's... almost cute.\" \n\n\"-- because women -- and many guys, I reckon -- around the world, between the ages of fifteen and fifty are insanely in love with this man and his talent. We have to pull this off, Ana -- just this once, just this month.\" \n\n\"Then I should mention one last time that putting him in the care of your friend who hasn't worked the music industry in five years and doesn't pay attention to social hype, is probably not the wisest move.\" \n\nThandi held up her wine glass. \"I'm not just doing that -- I'm putting him in the care of my friend who was even better than I was when we worked together for that shady little music company way back when, my friend who has artist management in her blood.\" \n\n\"Okay. 'Cause I might dig being back in the game.\" Ana held up her glass, but didn't clink. \"Hang on: if he turns out to be an arrogant diva can I hang him up by his toes and burn him over a bonfire out of his mushy music?\" \n\n\"No. He's paying us to promote his mush, not burn it. Besides, I know his music and I can assure you that it isn't bad at all.\" \n\n\"Blegh.\" Ana tapped her glass to her friend's. \"Here's to surviving the mush...\" \n\n*** \n\nTuesday morning dawned cool and grey, surprising for the first day of summer in the country's most gorgeous stretch of climate. Richly green trees towered in sharp contrast to the dull skies. \n\nAna felt Thandi's eyes on her throughout their drive to Sandown, but liked that her friend chose her words carefully. \n\n\"Just be professional... And nice.\" \n\nA summary of what Thandi actually wanted her to hear: If you insist on turquoise All Stars, low cut jeans and a floppy, off-the-shoulder tee for your first day with an acclaimed star, at least have the courtesy to follow orders and refrain from deriding his work. \n\n\"I'm always nice.\" \n\nAna would never admit it, not even to her prim pencil-skirted pal, but the sight of the office block they entered intimidated her on a level few things could. She had put on her outfit to make it clear to Thandi -- and Mr Diva -- that she was here to work, not conform... but now she regretted it. Women in perfectly cut suits and flawless makeup smiled at Thandi, then raised plucked eyebrows at her. The men were worse... none of them even saw her. \n\n\"This is a shared office block. I rent the top floor.\" \n\nThandi led her through the foyer and down a series of corridors. In a small office she spoke to four people and filled out two forms -- and an hour later, Ana was handed an access card and ID badge. Ana scowled at her dark eye shadow and dull expression in the photo as they rode the elevators to the tenth floor. \n\n\"Okay, the appointment is set for nine o' clock, but Leo called to say he's running late. When he gets here --\" \n\n\"Blah-blah-blah, ego stroke -- I know, Thands.\" Ana stuffed her disappointing ID card in her pocket. \"It's been five years, but I do still remember how this is done. For the next week or so I just need to focus on helping Romeo get his songs done, visit the venue; sort out media liaisons... and make sure he's still all smiles by the time rehearsals begin next week. I've got this.\" \n\nThandi tugged her friend to a standstill right outside a set of large opaque glass doors. \"One more thing, Ana. He's not... your dad.\" \n\nAna froze. \"What the hell is that supposed to mean?\" \n\n\"I'm not bringing this up to be cruel.\" Thandi had taken a small step back, giving her some room. \"I just worry about you, An.\" \n\n\"And bringing up Andile is supposed to achieve... what? Why here and now??\" \n\n\"You pretend to be tough and over what happened, but I know you're not, An. For years you've cut yourself off from the world and ridicule anything to do with... love.\" \n\nAna was still, her flare of anger weakening. \n\n\"I've never cut you off,\" she said. \n\nThandi took her hand this time. \"I know. But I do still worry about you.\" \n\n\"Well, there are better times you could have brought this drama up, you know.\" \n\n\"I know -- and I'm sorry. I just wanted to say don't let this... heaviness... burden you any further. You're about to step into a new opportunity here. I just want to see you build something good for a change instead of rip through anything that might mean something to you.\" \n\nA man and a woman approached wearing expensive suits and serious expressions. They stopped at the same doors, taking a moment to peruse Ana curiously before turning to Thandi. \n\n\"You ready, Thandi?\" The man's lips were thin and humourless. \n\nThandi nodded, equally collected. \"In a minute, John. We'll be right there. Please wait in my office.\" \n\nThe duo entered and closed the door behind them. \n\nAna was never one to admit to nervousness, but she found herself suddenly wiping damp palms along the seat of her jeans. Being ambushed as she had been still stung, but she was starting to understand Thandi's point: this was no game and it wasn't personal. If she messed up, she'd be taking her friend down with her -- after having assured Thandi that she could (and wanted to) do this... \n\n\"I know that this has nothing to do with Andile, you know.\" She eyed her friend. \n\nThere was a flash in Thandi's eyes, something almost too fleeting to call sadness. \"You laugh off anything to do with love -- and I worry about what that will lead to with you spending the next month with someone who made his living singing about love.\" \n\nAna snorted. \"Come on, Thands, I can handle this job without snapping -- it's not like I'm some ticking time bomb...\" \n\n\"Okay, then. I believe you.\" \n\nShe looked at the doors before her then back at her friend. \"I'm going to nail this, Thands. For you.\" \n\n\"For you as well, ntombi. Let's go big -- 'cause we need a home run.\" \n\n\"Got it. Except we don't play baseball here.\" \n\n\"Yeah, I know -- it's just that Americans make really cool speeches in their sporty movies.\" \n\n\"Movies that you never watch.\" \n\nThandi opened her mouth but had no words. \n\n\"Hush,\" Ana grinned. \"Let's just win this.\" \n\n*** \n\nThe ripped jeans, captioned t-shirt and purple scarf had not been a good choice after all. \n\nAna twisted in her plush seat, trying to look more professional while listening to the two casino managers go over the charity event plans and their specific agreement with Leo Boreas. It was all a much bigger deal than she had expected and, not only did her respect for her friend's success increase, but she also realised how much Thandi was entrusting to her. \n\nAnd she hadn't even been reliable enough to tie her hair back. \n\nTo make up for her earlier taunts -- and squash the blatant doubt she saw in John and Jade's eyes -- she paid close attention and volunteered suggestions and extra commitment that surprised even her. One corner of Thandi's mouth was tilted up slightly by the time the New Year's Gala at Karma had been mapped out. \n\nEven John and Jade were able to curb their premature scepticism and remember to shake her hand as well as Thandi's before leaving. \n\n\"My girl's back!\" Thandi giggled and hugged her as soon as they were alone. \n\n\"Getting there,\" she smiled. \"And thank you... for earlier.\" \n\n\"Of course, ntombi. Now let's go down to meet Leo -- he's on his way but can't stay long. I told him we'd wait out on the patio.\" \n\nOn the way down Ana frowned down at her sneakers. If she could get two casino managers to look past her exterior within two hours, why not this crooning Casanova as well? She was the right person for the job -- she believed that now... even if she didn't look like she belonged within a hundred-kilometre radius of this building. Or this event. Or famous singers. \n\n\"Why did you let me leave your place like this?\" she muttered. \n\nThandi grinned. \"Because you wouldn't have listened to me if I'd suggested changing into a suit. And I was more worried about how you'd react to me bringing up a tender topic like your dad.\" \n\n\"You can bring up anything you want -- I know you love me.\" \n\n\"Good.\" \n\n\"And I don't have any suits.\" \n\n\"I know.\" \n\nThe \"patio\" turned out to be a large paved area with oversized potted plants, wrought iron tables and French-looking chairs -- right off a small air-conditioned restaurant. It was too chilly a morning to spend around aircon, so Thandi found them a table out in a pale patch of sunlight. She greeted a few people she knew at other tables. \n\nThere wasn't much Ana could do about her attire -- but she could, at least, tame her mane. Under her friend's amused gaze, she gathered up the long twists and tried to roll them into a bun. A task easier dreamt up than accomplished. After two failed attempts, she raised the bun higher than she would have liked, whipped her thin scarf free and wrapped it around the unruly twists. \n\nThe result was more of a tangled rosebud than a neat bun. \n\nThe winds suddenly changed direction, coming at her from the north instead -- and tauntingly waving loose twists before her eyes. Something annoyingly close to a giggle escaped her friend. \n\n\"Shut u--\" \n\nAna suddenly stilled. \n\nThere was a man standing at one of restaurant entrances, watching her. \n\n\"I'll get us a couple coffees.\" \n\nAna heard the words, but barely registered her friend's departure. \n\nHe shouldn't have stood out to her the way he did... she didn't think... but he did. He was tall, but not excessively so -- just enough to carry the width of his muscular shoulders and those hints of aloof arrogance in a way that made a few people do double takes. His hair looked black, his eyes dark as well. \n\nSomething about him was familiar. Not just his face, something else. \n\nAna lips parted and for a moment she was set on answering... something, but then she realised there had been no question, no words. He was too far for that. So, there she sat, holding her hair up high as if that alone could hold her world in place. \n\nA second man joined him and Ana's flimsy poise slipped. The other man wasn't quite as tall, but he was more than beautiful. Blond hair and light eyes that danced with matching hints of the smirk lingering along his lips. This was a man aware of his effect on the world. \n\nHe and his intense friend exchanged a few words -- and from the way they watched her, Ana almost came to the silly conclusion that she might be the topic of discussion. She pressed her lips together and nearly shook her head at her own delusional wish. \n\nWish...? \n\nAnd then Thandi walked right up to them, smiled and chatted as if she approached handsome men for no reason every single day. Ana was surprised. But when Thandi started leading them to her table, she realised who they were. ",
        "No... \n\nLeo Boreas' clothes -- a light suit and blue shirt open at the neck fit the setting perfectly. \n\nAna's last relationship or two had been irritating enough to put her off men for some time -- but this one had her attention... There was something about the column of his throat in contrast to his shirt, rich material against his lightly tanned skin; something about his longish (brown, it's dark brown) hair, that made her want to... \n\nWhen he broke eye contact she finally felt able to pull herself towards herself. He looked down at Thandi, nodding at something she was saying then tossed a few irritated words at his blond companion when the man appeared to make a joke. \n\nThey finally arrived at the table. Where Ana grappled for even an ounce of the brilliance she'd demonstrated upstairs. Or an ounce of intelligible English. \n\n\"We coped just fine,\" Thandi smiled as she put the coffees down. \"We managed to get caught up inside with John and Jade -- everything's set as you and I had discussed -- so I don't think Ana will have any problems getting started.\" \n\n\"We?\" When he turned to face her again, the sun picked up the shifting gold in his eyes. \n\nWhy had she thought they were dark? \n\nAna stood up and held her hand out. \"Yes, 'we'. Hi, I'm --\" \n\nHe drew back slightly. \"You're Ana\u00efs??\" \n\n\"Well, hello,\" the blond man reached over and took her hand. \"I'm Kyle Fourie -- the Grinch's main producer.\" \n\nShe brushed stray strands from her face, flustered; unsure about the possessiveness of Kyle's grip. \"Ana Kem. We'll be seeing a lot of each other over the next few weeks then.\" \n\n\"Perfect,\" Kyle smiled. \n\n\"No.\" \n\nThey all turned in surprise. \n\nLeo's gaze had darkened to a glare she almost couldn't meet. Sheer willpower kept her shoulders back and her chin up. In the next instant he turned on his heel and strode off. \n\n\"'No'? No what?\" Thandi turned on her. \"What was that??\" \n\n\"How the hell am I supposed to know?\" Ana folded her arms defensively; there was something so personal in Leo Boreas' determination to walk away from her. \"He's just another celebrity with the cocky quirks of a --\" \n\n\"Just wait here. Don't move.\" Thandi rushed off after him. \n\nKyle stepped beside her. \"Well. That's new.\" \n\nAna glared after Leo for a heartbeat; then out at the rest of the patio when the sight of him leaving made it difficult to inhale. A few people were giving her curious glances, but most of the women had their eyes on Leo's retreating back. And on Kyle. \n\nAna rubbed her palms along her arms, telling herself the goosebumps were no more than the product of the sudden northern winds. \n\n*** \n\n\"I'm not sure what the hell is going on and Leo isn't talking.\" Thandi was weaving through lunch hour traffic, her sunglasses hiding her agitation... sort of. \"I'll call him from the apartment. You should take the car and go do some shopping -- you need grownup clothes.\" \n\nAna scowled out the window. \"I don't see the point -- the man obviously does not want me working for him.\" \n\n\"Well, you don't -- you work for me.\" \n\n\"You know what I meant.\" \n\n\"And that's nonsense. Yes, something has upset him -- but I'll find out what it is and fix it. It couldn't have been about you.\" \n\nAna faced her. \"He wouldn't even shake my hand, Thands.\" \n\n\"Don't worry about this -- Kyle also said he'd talk to him. You focus on getting a couple serious outfits. Not too many just a few things for fancy meetings or media appearances.\" \n\n\"I won't be making media appearances. Sourpuss will.\" \n\nThandi ignored that. \"And I'll try to arrange a car for you for the month. In the meantime, this one will have to do. Hyde Park shopping centre's right over there -- it's small, but you might find a few items you like there. Do you need an advance or anything?\" \n\n\"No, I'm fine.\" \n\nAt least Leo had the courtesy to talk to Thandi when she called. Though the conversation didn't seem to be going too well from what Ana could hear. She paced the kitchen as she listened to her friend defend Ana's capabilities to that arse of a man. \n\nAfter ten minutes, she decided she'd had enough. There was no way she could stand another minute of listening to Thandi reason with the egocentrically insane. She needed to get away from hearing her friend say that name... and how his name conjured up distinct images of his face. \n\nThandi's car keys were on the entrance table. \n\nYou should take the car... \n\nYes, going out seemed a fantastic idea. \n\n*** II *** \n\nLeo had watched her for at least ten minutes before she saw him. \n\nIt was his first time back in Jo'burg in six months and his first professional gig in five years. The hustle and rush of his previous week before flying in that morning had been an exasperating reminder of all the reasons he was happy with his time away. \n\nFrom both the city and the industry. \n\nAfter an early morning of talking to promotors at the wish-fulfilment foundation; a dismal breakfast mostly consumed in his car, and a lying weatherman singing sunshine all across the country, it was startling to be brought to a standstill by an edgy girl in an off-the-shoulder t-shirt that proclaimed: Music Is My Master. \n\nHe was sure it had been her smile that had captured him. \n\nShe was sitting out in the sunlight, her full mane of thin twists dancing and irritating her, when she suddenly turned and he caught a glimpse of a smile at a private thought. She stood out, a burst of vibrant colour amidst a sea of dark suits. Leo took in the cinnamon glow of her neck as her hair war revealed more skin with each handful she lifted. Skin like that could only taste hot and sweet. Surely? \n\nAnd then Kyle stepped up beside him. \"She's sexy. I bet she'd be a wild ride...\" \n\n\"Shut up.\" \n\nKyle laughed. \"You sound like your next line's going to be 'I saw her first'.\" \n\nLeo's jaw clenched. \n\nHer arms were still up as she set about the impossible task of trying to make her hair defy the breeze and obey her coiling. The position made her look like a seated ballerina; in fact, all her moves seemed dance-inspired, as if she flowed through her days to a song only she could hear. It fascinated him that she could have a body that decadently curvaceous yet still make it move as gracefully as she did. \n\nHer legs, crossed before her, were long, her thighs firm and her entire frame strong. Nothing about her was trying to come across as dainty or fragile -- she was a beautiful testimony to feminine depth. And it was her very strength that he couldn't turn away from. \n\n\"Regardless of who saw her first, I say I know exactly how to unleash her wildness. You may have retired from the fame -- and life -- but I definitely haven't.\" \n\nLeo didn't respond. \n\nThere couldn't be anything else keeping him rooted there. It had to be this strange girl's fierce individuality -- if it was real and not just some shallow trend. She wore bright sneakers and dark makeup. And she was Black. He tilted his head speculatively at that thought. \n\nThe side of music that had annoyed and exhausted him, the fame, had come with scores of women. All types. He'd been involved with someone -- Gods, involved -- when he'd gotten his big break, so none had interested him. But after Melissa... \n\nSometimes burying yourself in sweat and sex hid you from certain memories for a night -- or two. Making someone scream was a good way to drown out your own incessant voices. \n\nBut not for long enough. \n\nKyle rocked on his heels. \"Or are you back in every way now, old friend? Ready to live again? The Leo who whipped music is the same man who tamed women, isn't he? Eh?\" \n\nAll those women who'd tried to slip him their panties with their numbers scribbled on them; who'd tried to get on his videos; who'd fought for a permanent place in his bed... those he had turned down consciously. But Black women? That had somehow just never happened. \n\nAnd now you find yourself staring at one gorgeous lady like witless boy. \n\nHis life, business and travels were such that he had met pretty much every race there is. So, there must have been women with skin exactly this alluring and poise this noticeable in the past. Right? \n\nRight...? \n\nSo, why can't you recall even one? \n\nShe looked up and her eyes suddenly found his. \n\nAnd the rush in his mind instantly silenced. He needed nothing more than to look at her, to watch her cross her legs, tie her hair and smile at things that made her happy. An absurd thought he attributed to the poet in him, the dreamer that sang about things that weren't real. \n\nSomething inside him was already moving towards her even as he stood still, his hands in his pockets. That pull disconcerted him. He watched as she tried to place him, tried to work out why he was watching her... maybe tried to work out why she was drawn to him? \n\nHa. Wishful thinking, fool. She's not drawn to you -- you're the only one caught in this web. \n\n\"Oy. Are you even listening to me?\" Kyle snapped his fingers. \n\nLeo exhaled and turned to him. \"What?\" \n\n\"Do you still have what it takes, bud?\" Kyle grinned. \"Let's go up and say hello -- see who gets her first. Not just her number -- see who fucks her first.\" \n\n\"Are you serious?\" \n\n\"What?\" \n\n\"I'm not here to make a game out of fucking a girl I don't know.\" \n\n\"What you're saying is fun,\" Kyle drew back, \"but why are you saying it all wrong? Let's try that again -- but with this word order: 'Hells yeah, Kyle, I'd love to make a game out of fucking a gorgeous girl I don't know!'\" \n\nLeo grunted in exasperation. \"We're here to work. Let's do that.\" \n\n\"We can work and play, though, huh?\" Kyle gave him a playful nudge. \"We used to before you donated your balls to old age and sentimentality.\" \n\nShe didn't blink or pretend to be glancing at someone near him. She just watched him for every heartbeat that he watched her. \n\nHe was almost relieved when Thandi unexpectedly interrupted them. He hoped she hadn't heard Kyle idiocy; not many people understood it. Few were patient enough to understand Kyle. Not arguing with Kyle for the sake of sanity was one thing -- but he didn't want his new acquaintance thinking he was into such crass wagers. \n\nIt was best that their childish conversation had been disrupted and they were going to move on with their day -- and lives. This is what he told himself. \n\nUntil Thandi led them right up to her. And then she had said her name. Ana\u00efs Kem. \n\nLeo Boreas had been able to create the life he had for himself through one main ability: knowing when his art was calling and hearing it clearly enough to sing it. Now, for the first time in his experience, a woman he'd never seen before was calling to him in a similar way. \n\nIn a way he'd rather be damned than answer. A fantasy was one thing -- falling for it was bullshit. There was nothing Ana\u00efs Kem had that he wanted. So, he turned his back on that voice and sped all the way to Sunninghill. \n\nAccompanied by the winds. And her. \n\n*** \n\nAnnoyance had been his first reaction to the knock at the door. The security and staff were usually good about keeping visitors away whenever he made it clear that he did not want to be disturbed. This better not be some wild joker or paparazzi person who'd managed to get past them. \n\nHe did a quick scan of his lounge, but spotted no shirts nearby. \n\n\"Not now.\" A bellow ruder than his usual self as he yanked the door open. \n\nNo pranksters or journalists. Just Ana\u00efs Kem in her Rebel Circus tee and flawless skin. \n\nA hesitant guard stood near a patrol car at the bottom of the steps. \n\nAna\u00efs was trying to catch up to his testy greeting. \"Oh. When then? Because I don't know if you've noticed, but I kinda need to start working for you if we're going ahead with that little plan to make your fans fall in love with you all over again at the Dream Reality gala...\" \n\nHe wanted to close the door in her face and call around for a different management team. But how many times could a thirty-five-year-old man avoid... whatever the fuck this was... before being called on his childish tantrums? He didn't care. He was not in the mood for... ugh. \n\n\"I made it clear to Thandi that I would prefer not work with you.\" He folded his arms in a pose that had often asserted control over others. \n\nShe seemed unaffected. \"Yeah, I know. Can I come in now?\" \n\nShe walked past him before he could respond. Leo scowled down at the guard then nodded that he could leave. \n\nAfter a look around the foyer, Ana turned back to him and held her hand out. \"Now how about we try that first meeting again? Hi, I'm Ana and I will be managing your work needs over the next four or five weeks.\" \n\nHis eyes narrowed at her. \"Listen here, this may all be a game to you -- but I will not be managed by some girl who looks like she still working through her teenage phase and clearly has no clue about this hectic industry.\" \n\nHis voice was deep, his tone a little harsh. He liked how resolute he sounded. \n\nShe watched him speak, even taking a moment to run her eyes across his chest. Leo felt his cock lengthen a little, nudging at his boxers. Her t-shirt had dipped further when she'd extended her right hand, exposing more of her left shoulder, the soft material outlining her full breasts. His gazed traced the line of her thin black bra-strap, his excitement rising a little more at remembering how it excites him to unsnap a bra and watch firm breasts come into view. \n\nAna\u00efs' looked bigger than those he was accustomed to -- finally a succulent handful for him. \n\nHis hunger for her was not what he expected, but the reaction didn't surprise him completely. There was a reason he hadn't been able to take his eyes off her earlier -- and why Kyle's words and wager had incensed him. \n\nAna\u00efs still had her hand out. \n\nHer eyes were dark pools as she watched him, rich and direct; and he couldn't tell if she had felt the slight spike in his sexual interest in her or if she was simply emanating defiance. A deviant gust whooshed past him and collided with her, lifting her loose, high bun briefly, but she seemed unconcerned with looking perfect. \n\nMaybe that is what drew him to her? One of the things at least? He'd spent so many years around plucked, sucked, tweaked and bleached women that it was almost exotic encountering a real one. A woman of flesh and curves and flames. \n\nHe continued. \"I'm not in the mood for any games, Ana\u00efs --\" \n\n\"Ana.\" \n\n\"-- either Thandi handles this gig herself or I'll go with a different company.\" \n\nWas she drawn to him? \n\nHow many women did he know who couldn't care less about their hair turning temptingly wild or could meet his glare like that? Melissa had been strong and sure of herself -- then again, she'd also met him before the fame and money. Melissa after his rise had been an entirely different woman... Insecure, whining, suspicious. \n\nMost women melted at just hearing his name these days. Still. Even after retiring and rebuilding his privacy over the last five years. \n\nAna\u00efs wasn't most women, though. \"No. Something is going on here and we're going to sort it out.\" \n\nThe way she stood, one hand on her pronounced hip, her lifted chin unimpressed... it was all a challenge in physical form. And no matter how much he disliked whatever it was he felt around her, he had to admit that he had missed being challenged. He most especially missed the hunt... \n\nSomeone to hunt...? \n\nIndeed. \n\n\"Hello, Ana\u00efs, I'm Leo Boreas.\" He took her hand. \"Looking forward to seeing how well you manage my needs, though I must say I'm sure you can't.\" \n\n\"Why?\" She skipped his overt insinuation. \n\n\"I don't owe you any explanations.\" \n\nHer laugh was incredulous and clipped. \"Actually, you do.\" \n\nWhen she laughed her teeth shone bright and her lipstick look more luscious. She looked as if she'd been gorging herself on ripe berries, as if her kisses would taste so sweet, addictive... \n\nLeo shook his head, releasing her hand. \n\n\"Let's get a few things straight before you gallop off on that high horse of yours, Boreas.\" Her eyes were somewhat angry, but there were hints of a tremor in her voice. \"I will not be judged on how I look -- ever.\" \n\n\"You think I don't want to work with you because you're Black? How the hell did you make that leap?\" \n\nShe pulled up short at that. \"No, I meant that I know I'm not as polished as those women gliding all over Sandown.\" \n\n\"Oh.\" It was his turn to take pause. \"Well, that's true. But your look has nothing to do with anything.\" \n\nShe walked through his lounge, stopping at the sliding doors that led onto the balcony. \n\n\"Then if there is anything that affects my professional capacity that you are wondering about, ask me,\" she ordered. \"We're not here to be best buds or take a last desperate swing at our mess of a marriage or whatever. We're here to do business, to deliver the best we can on a gig I assume means a lot to both of us. So, let's sort out whatever this shit is between us and get on with it.\" \n\nHis chest burned... but he admired her spark, respected her courage. And was curious about that brief tremor. \n\n\"How old are you?\" he frowned. \n\nA crease formed in her brow to match his. \"Twenty-seven.\" \n\n\"And you work in music? For Thandi?\" \n\n\"I used to work in the industry,\" she shifted her stance. \"Thandi and I worked together for a few years while also studying. She stuck with it; I didn't. Now she needs someone to help her out with an important account -- so here I am, back in Jo'burg.\" \n\nWith the sunlight behind her, her face looked darker, mystical. The heat he'd been aware of since Sandown was threatening to form tangible waves as he took in the now mahogany tones of her shadowed skin. \n\n\"You're not in music anymore?\" The impromptu interview was a good distraction. \"Wouldn't you think that's reason enough for me to request someone else?\" \n\n\"If Thandi didn't feel that way, then no.\" Her answer wasn't defiant, just frank. \"Besides, if you can be asked back after five years, why not me?\" \n\nHe grinned. \n\nAna\u00efs seemed taken aback by his change of expression. He found that interesting. The woman had done a brilliant job of ignoring the fact that he'd been half-naked and half-furious since she'd barged in -- so, it was surprising to see her reaction to his first smile. \n\nHe stepped closer. \"What have you been doing these last five years?\" \n\nShe circled around him, suddenly wary. \"Finding myself, I guess... I don't know. Lots of travelling; some, uh... people. You know, the usual. So. Do you have a track-list for me, so I can wrap my head around your set at Karma?\" \n\n\"People, huh?\" He turned and watched her put the full length of the lounge between them -- as with her statements, this was done a little too casually. \"You know, when anyone says 'uh... people' the way you just did, it usually means someone in particular.\" \n\n\"Rubbish.\" \n\n\"No. Fact. I made a living from recognising the signs of falling in love, lady.\" \n\nAna\u00efs scrunched her nose at him. He'd touched on something real completely unexpectedly. \n\n\"There's someone you left behind to take this job?\" \n\n\"What do you care?\" she demanded. \"I was gone; now I'm back and really want to do a good job for my friend.\" \n\nBefore going back to this man you're in love with? \n\nLeo didn't verbalise the question. What was the point? Ana\u00efs was... in love. And that was that. \n\nWhich should have been more of a relief. He couldn't think about any of that now. \n\n\"Jade had suggested,\" he hooked sarcastic air quotes before him, \"twenty songs for my forty-five-minute set.\" \n\nAna\u00efs blinked -- once. \"Interesting 'suggestion'. And what will actually be happening? Realistically.\" ",
        "His smile took on a different shade. Unfortunate as it was, he was beginning to like her. \n\n\"I'll be performing twelve songs: six old ones and six new ones. I'll prepare a couple extras in case they're needed.\" \n\nShe shifted her balance, unconsciously jutting a hip out. \"Are we going to have problems if you don't deliver twenty songs? Jade hadn't mentioned twenty in the meeting this morning.\" \n\n\"Because it was never part of our agreement.\" Leo approached her again. \"The contract says twelve -- she's just trying to push her luck. I'm bringing this up now in case she tries to bully my management team into anything shady behind my back.\" \n\n\"I see. Then take me through the track-list.\" \n\nHe could tell that she was aware of the closing distance, but was still deciding whether to react to it or not. \n\n\"No. First I want you to answer me one thing.\" \n\nHer eyes met his, but he knew his face had to be as unreadable as hers had been when the light was behind her. \n\n\"What?\" \n\nLeo took another step. \"Do you believe in love at first sight?\" \n\n\"Excuse me?\" She tried to laugh his question off, but didn't quite manage. \"No.\" \n\n\"Okay.\" He was close enough to smell her now -- vanilla, ginger... along with something fresh and juicy. \"Another thing: Did you... feel... anything when you first saw me?\" \n\nShe straightened sharply -- the shift in him had become a conscious predator to her senses now. \n\nThere was definitely something in him that responded more strongly the closer to her he got. Damned if he knew what it was or why it wanted her. He'd spent years of his life on the topic of love, had meant it when he told her that he understood falling in love. \n\nUnderstood his own past experiences of love, at least. But this... \n\nYou're in love? Falling? \n\nNo, that couldn't be right; not for a woman he didn't know. A woman who would only be here for a month before heading back to whichever idiot had her heart and still let her out of his sight. \n\n\"What are you doing, Leo?\" \n\nHe'd been asking himself the same thing for hours now. He wanted her, wanted something from her. But Zeus alone knew what. \n\nThe small of her back bumped into the counter behind her. Her eyes widened the moment she realised she was trapped. Apricots -- this close to her, he picked up the scent of succulent apricots as well. \n\n\"This is a bad idea.\" \n\nOf all the things she could have said. She could have made it clear that she didn't want him. But didn't. \n\nLeo's smile faded slowly. \"I know.\" \n\nHis lips met hers gently. When he was sure that she wouldn't run, wouldn't vanish, all he wanted was to savour her; and take his time doing so. \n\nHe continued the slow onslaught, nibbling at her until she finally opened to him. His tongue found hers on a groan, the heat in his chest spreading through the rest of him. She wasn't yet fully pliant, but he was aware of the instant her head tilted and her tongue reached for his. \n\nHe took her hands in his, lifted them and pressed her palms to his chest. Ana\u00efs immediately reared back. Leo stilled, breaking the kiss to watch her; continuing the pressure on her hands, making her touch him. She stared up at him, yielding as he guided her, her breaths deep and ragged. \n\nHer touch was affecting him more than he let show. \n\nThey hadn't even really done anything yet and he was already getting hard, already picturing her riding him as her tits filled his hands. There was time for that -- plenty. For now he wanted to take his time making her acknowledge how much she wanted to touch him. \n\nOnce her palms had covered the breadth of his shoulders, he slowly guided them back together and up towards his neck. He leaned in and she pulled back a fraction. Leo stopped and looked into her dark eyes, daring her to break free. Daring her to lie about what they were both feeling. \n\nAna\u00efs glanced at his lips then back up into his eyes. He leaned forward again, meeting her lips with more hunger this time and feeling it ignite in her as she wrapped her arms around his neck before he could make her move. Her tongue explored him this time. She pulled him close and melted into him. \n\nHe lifted her onto the countertop, forcing her thighs apart with his hips, feeling his heart thud at how trim her waist felt when he embraced her. He brought his hands to her sides, tracing the shape of her like a blind man. There was something that almost didn't add up about the shape of her: opulent tits between strong arms, then the suddenness of her tiny waist... spilling out into the perfect hips to grab onto while -- \n\nAna\u00efs moaned. \n\nThe fullness of her hips made him thrust at her, push his erection into the juncture of her jeans. He wanted to tear through everything separating them. \n\nSomething feral awakened at the realisation that her breasts were more than he could cup. Leo smiled savagely into her kisses as she whimpered, feeling her straightening so she could push herself into his cupped hands. He deepened the kiss, seeking parts of her no one else knew. He needed this to be as unique and intense to her as it was to him. \n\nHe found her nipples with his thumbs, circling them and making her hips roll. Her fingers were in his hair, drawing him even closer as she wrapped her legs around his lower half. She was all raw response and he was high on her potency. \n\nHer breath caught when he pinched both nipples, a primal feminine hitch that he wanted to hear again. So, he pinched again, slower, feeding her his tongue, his need, as he gently pulled at her peaks. And there it was: the stutter-stutter of her inhalation... followed by her moans melting in his mouth. \n\nLeo slipped his hands beneath her tee, squeezing at her delectable waist before moving higher. Her fingers tightened on his scalp -- but this time it felt different. \n\nHe was still caught up in her taste when she pulled back. \n\n\"Leo...\" \n\nHer eyes, when he looked into them, were a mess of emotion. She wanted him -- he was sure of it -- but there was something else as well. His urgent craving faded from the forefront. They watched each other, embracing still, gasps mingling. \n\nWhen she pulled back, removing his hands from beneath her t-shirt, Leo put his walls back up. What the fuck had he been thinking anyway? This wasn't some game and he didn't have room in his life -- in him -- for anything serious. He was supposed to have outgrown the years of letting his dick drive his actions. \n\nHe took a step back. Then another. When his back hit the wall opposite her, he turned away. He was leaning his forearm against the cool concrete with his head down as she collected herself and headed for the door. His other hand was squeezing his still-hard cock by the time his door quietly clicked shut behind her. \n\nThe empty silence of the house took her shape. It smelled like her and mocked him. \n\nLeo grabbed a bottle of water from the fridge and walked out onto the balcony. After drinking half of it he could still taste her. In frustration, he ended up bending forward and pouring the rest on his head. Thin slivers of coolness cut into his scalp. Afterwards, his mind none the clearer, he threw the bottle with all his pent up frustration across the lounge, in the direction of the front door. \n\nHis house had three storeys and the serene view from the first-floor balcony pissed him off all the more. He glared out at the setting sun before shaking his wet head and stepping back into the lounge. \n\nHis cell phone was on a couch; the number he sought easy to find. Thandi answered after two rings. \n\n\"Forget all that earlier shit. I've decided to go ahead with Ana\u00efs Kem.\" \n\nHe hung up before the inevitable questions started. \n\n*** III *** \n\nFour cigarettes in twelve hours. Her life had taken on chapters in puffs. \n\nThe first had been lit in the car. In the midst of fleeing Leo, she'd turned on some music and Dwele had immediately teased her mid-song: \n\nWon't you be my lova, my lova...? \n\nWon't you be my lova, baby? \n\nAna snarled silently at the dashboard. Thandi and her ridiculous R&amp;B music. \n\nSay, baby... if I pinch you here... \n\nWill the other respond like a twin would...? \n\nShe'd switched back to silence then, her nipples hard again. Both responding as they had when Leo had pinched them minutes earlier. That cigarette and the one after had not erased the memory of his taste. \n\nThe third had been lit when she got home and Thandi called from her Gautrain-bound cab to tell her she had the job. Her friend sounded about as surprised as Ana was. But added that her flight would be a happy one now that everything was \"sorted\".  \n\nAna dragged on her fourth cigarette first thing the next morning before her shower. \n\nThe shower itself did nothing to answer her greatest questions. Why did Leo suddenly change his mind about working with her? Was it their conversation that had convinced him... or did a part of him think she'd be an easy lay? \n\nNo, he wouldn't jeopardise a job this big for a reason that stupid. \n\nAnd what the hell had happened between them back there?? She still couldn't wrap her mind around the attraction that had taken over both of them. \n\nIt was a sunny morning, hotter than the day before. \n\nAna was in the bustling offices by eight, two hours before the rest of her crew was due. She might've been toppled by her kiss with Leo, but she did still have a sharp mind with great ideas. After a call to Jade the previous evening, she'd gotten on with an inspiration she knew would help a great deal in the coming week of recording new tracks. \n\nThe drummer and bass player were first to arrive, followed shortly by the guitarist, pianist and backup singers. \n\nAna introduced them to each other as they arrived. \"Dev, Brian, Gary... Khaya on keyboard; and Lara, Sarah and Will on backing vocals.\" \n\nHer head hurt as she briefed the team on the rehearsal weeks, but it was nothing compared to her other disoriented feelings. She handed out copies of the schedule they would be sticking to. After that she spent a few minutes with each individual in Thandi's office, going over their specifics and signing on the dotted line. \n\nLeo walked in just as she returned to the group with Will. He was the joker in the crowd and it felt nice to laugh despite the faint thud at her temples. \n\n\"Ana!\" Kyle stepped around his scowling friend to hug her. \n\nAgain Ana was surprised by his pulverisation of personal space boundaries, but found rolling with it easier than questioning it. He was extroverted but harmless. Leo stood by the windows watching them embrace, his face inscrutable. \n\nOnce they were done getting acquainted with the band, Leo approached her. Ana felt her skin prickle, but held his cool gaze. \n\n\"Hey,\" he said. \n\n\"Hey?\" \n\n\"Hey,\" he repeated after an uncertain pause. \n\nWhat more had she expected? \"Hey.\" \n\n\"Is it my turn now?\" Kyle grinned, looping an arm around her shoulders. \"Hey.\" \n\nLeo turned away. \"Let's move this along. Can we go through to the studios now? I'd like to see what we're working with.\" \n\n\"Actually, I'm going to need a few more minutes before we do.\" Ana shrugged Kyle's arm off as she spoke. \"I could have someone bring you some coffee or something while you wait.\" \n\nLeo shook his head, but Kyle grinned at her. \"I'll take mine black and sweet.\" \n\nHis lurid emphasis finally got her to roll her eyes at his cheesy line. Kyle laughed. \n\nAfter dropping off the contracts with one of Thandi's assistants, Ana slipped into the main office. She breathed her relief into the quiet space before sitting down to make a call. She had won over two casino managers in this room -- she could work this miracle, too. When she was done with her phone call, she smiled, liking the ease outside free of stressed wariness -- it felt good to know she was on top of her first day. \n\nTrue to his word, the man she'd been hunting down since the day before walked through the doors ten minutes later. It was with controlled pride that Ana led him into the boardroom. \n\n\"Eric?\" Even Leo couldn't hide his surprise. \n\n\"Leo, my man!\" \n\nEric Dlomo was a large man with skin the hue of liquorice and a booming voice. Ana watched in pleasure as all three men hugged and caught up. \n\nFinding out the night before that she had this job after all had knocked all equilibrium out of her for a while. It had been humiliating to consider the possibility that it had been the easy way she had fallen into Leo's arms that had secured the position for her. But after that she had gotten pissed -- and fury was far more empowering. She had made up her mind to blow this job out of the water -- in every way. \n\nEric had partnered up with Leo numerous times in the past. Granted this wasn't a new album that they were working on, but Ana still felt bringing the brilliant music director in would not only speed up productivity, but also fine-tune Leo's twelve-track set and give it a cohesive feel. Hearing his esteemed colleague's name had been enough for Dlomo to gloss over the extremely short notice and agree to be at Moyo Management the next morning. \n\nThe other two men looked at her with a new light in their eyes -- not only for coming up with the idea, but for actually pulling it off. There was real respect in Kyle's eyes as he thanked her. \n\nAlmost matched by the approval all three expressed when she walked them to the studios occupying the anterior half of the Moyo floor. Thandi made a good bundle renting the studios out to various artists. \n\nIt was a good start to the day. \n\n\"We've lost a few hours, but we can still get a lot done today,\" Leo told her. \"The guys and I need to go get some stuff -- but we'll get started right after lunch and most likely push through the night. Eric, that should give you enough time to catch up on the basics -- hope you're inspired and ready to go in an hour.\" \n\nEric spread his arms wide with a tilt of his head, as if to question the implication that inspiration might elude him. \n\n\"I'll be here at five then,\" Ana told Leo. \n\nHe was already pulling his jacket back on. \"You don't have to do that.\" \n\n\"Except I do. None of the companies in the building are allowed to leave non-staff members unattended. I'm registered as a temp in case any of my crew needs to be here after hours. I have some errands to run, but will be sure to get back here by closing time. Just call if you need me before then.\" \n\nLeo was already out the door. \n\nAna grabbed her bag. Okay, so he clearly had lost all interest in her; he'd been in work mode all morning. Not just working... ignoring her. Whatever had flared between them the day before had died just as swiftly and that was... good. Ana was glad to be focusing on work again. \n\nHer day ended up busy enough to make her believe she preferred this new strictly professional role. \n\nBy late afternoon her neck was stiff, her headache unabated -- but she was also proud of how much she had gotten done. Between her past reputation and Thandi's current one, she was able to get in to see music compilers from five major radio stations -- all of whom promised to up Leo's rotation on their playlists immediately. It didn't hurt, of course, that the R&amp;B legend's once-off return had their interest piqued. Once those stations started talking about him, she knew hundreds more would follow. \n\nIt was going to feel good to show that she could be trusted in Thandi's absence. \n\nThe block was strange to enter without all the high-end suits in it that evening. \n\nThe two guards at reception watched her swipe herself in then paid her no mind after that. Ana stared at her reflection in the mirrored elevator on the way up. Cargo pants and a plain t-shirt... Impressive. \n\nKyle and Eric were in Moyo's main reception area. Eric had a laptop open and headphones plugged in. Kyle was flirting with Laurika, one of Thandi's assistants... who either didn't appreciate the unwanted attention, or was ticked off about still being in the office at 17:03. \n\n\"Dankie, Lauri, I'll take it from here,\" she smiled. \"Right, guys, wanna go through?\" \n\nKyle's special smile for Laurika was equally bright when he turned it her way. \"Great. Except the star dashed out and isn't back yet.\" \n\n\"Of course I am.\" \n\nAna pulled her bag a little tighter against her body as Leo passed her. His hair was tangled as if he'd showered in a rush and then just let it dry on its own. And the jeans he wore were worn and his t-shirt fitted. Nothing special... yet just enough to have her remember that his body interested her far more than it should. \n\nThe studio, one of three, was spacious and well equipped. They first walked into the small room preceding the sound booth and set their bags on the centre table. Ana unlocked the booth and led all three men in. \n\nThey instantly commenced work in sync. \n\nEric planted himself behind the control desk and looked right at home next to Kyle who set up his laptop so the rest of his samples could be pumped out the speakers instead of the headphones. They were talking softly with occasional interjections from Leo who was perched on a high stool and scribbling in a thick notebook as he spoke. \n\nAna wasn't quite sure where to park herself, but figured far away to be her best bet. She headed off to the kitchenette and got coffee going. Then she stepped out onto the small balcony and lit a cigarette. It wouldn't ease the tension headache, but deep pulls of the menthol smoke always relaxed her in ways she couldn't achieve outside of smoking. \n\nAnd it was a great way to hide. \n\nCoffee, orange juice and her bottle of chocolate milk were lined up on the tray she planted on the table in the room outside Booth One. There was a low couch in this room, some magazines, a filing cabinet and chairs around the table. \n\nSpartan was the word that came to mind, functional. \n\nThat room became her second home in the evenings. For three days straight, Ana ran around like a maniac by day and found herself holed up in the dark, cool room each night. They spent the entire balmy Friday there, breaking only for meals and short walks to the balcony. Kyle often buddied up with her on balcony trips. The only time Ana ever saw him serious was when he was dragging on a cigarette of his own. Whatever went through his mind must have been a captivating process because he always crushed his butt with renewed vigour and rushed back inside to push for hours through his immense workload. \n\nAna watched his latest leap in quiet amusement, sipping her chocolate milk. When she finished, she stretched stiffly then headed back inside. \n\nThe guys barely registered her presence once they got going. Kyle, for all his antics and flirtation, was rather impressive once he got focused. All Leo and Eric had to do was lay out a song concept and make basic sounds denoting its rhythm -- and Kyle turned that into... music. Good music. It was a repetitive practice of going over the song a hundred times while adding subtle tweaks with each new round; and, though Ana quickly grew impatient with hearing the same bars again and again, she also had to admit the progressions fascinated her. \n\nEspecially watching how dark Leo's eyes got as he wrote and instructed the others. \n\nOn occasion, Kyle let the song play out while Eric closed his eyes and bopped his head. At those times Leo stared at something no one else could see, his lips moving as if the song already had lyrics and he was singing quietly along. \n\nAna watched those lips all of Friday night, remembering their taste -- until his gaze suddenly refocused and flicked to her own each time her stares immobilised even her. Suddenly being seen by him was as paralysing as being kissed by him and all she could do was stare. How did he know when to look her way? Gold would start flowing through the dark intensity of his eyes and she knew exactly what he was thinking. ",
        "Midnight came and went. \n\n\"Ahem,\" Kyle's fake cough snapped the cord between them. \"You both win the staring contest -- neither of you blinked. Now, for the third time: Leo, could you weigh in on the bridge for this tune? We're stuck.\" \n\nAna had grabbed a throw from the foot of her pastel bed on her first day preparing for studio. It was now a part of her nightly kit. She very deliberately padded into the adjacent room and drew the blanket out of her backpack before heading to the couch, avoiding the gazes of all three men. The couch was old and weary, offering little support. But she liked being alone and getting a chance to lie down. \n\nHer sore back protested, but she closed her eyes anyway. \n\n*** \n\nShe was on a stage beneath a clear, starry sky. An audience of elite spectators stared up at her, perplexed by her attire: the pastel green throw. She looked out at their expensive gowns, tuxes and jewels -- and didn't know how to tell them that she wasn't worth watching; she wasn't beautiful or talented in the ways they'd prefer. \n\nThe longer she stood there, the more they began to murmur. Just as her humiliation was about to solidify, a gentle breeze started up. It played through the crowd, rushing towards her. Instinctively, Ana opened her arms, welcoming it. Her blanket fell and she didn't care about being seen naked. As she turned to face north, the breeze suddenly gathered strength, whipping around her, lifting her. Laying a kiss at her temple. \n\n\"Ana\u00efs.\" \n\nHer eyes flew open. Leo was kneeling beside her. Ana noted his clean smell, stubble and concerned eyes... and wanted him to wrap his arms around her. \n\nThe kiss in her dream... Had he...? \n\n\"Hey. Are you okay?\" \n\nShe blinked, tried to nod, but ended up just blinking again. She must have been asleep a while; the room felt much cooler. Cold, in fact. \n\n\"We ordered some pizza,\" Leo continued. \"Come eat.\" \n\nThe ache had taken a firm hold of her neck, shoulders and arms. Her back was no longer her own. No wonder she couldn't nod. Ana winced as she sat up, finally noting the smell of melted cheese. \n\n\"Hey, hey... easy.\" Leo shot up and his arm wrapped around her middle when her first attempt at getting up turned into a collapse. \"What's wrong?\" \n\n\"Nothing.\" Her mouth was almost burningly dry. \"Just groggy.\" \n\nShe pulled away as soon as she could stand. Dragging her feet all the way to the table a few steps from the couch gave her something to concentrate on -- other than Leo's sceptical vigilance. \n\nShe was hungry, but two bites into her first slice of pizza, Ana pushed her supper away. \n\n\"Tell me what's wrong.\" \n\nKyle and Eric were laughing in the booth, their voices muted, the lighting bright on their faces. Ana allowed herself two long blinks as she tried to focus on them. Even her eyelids hurt. \n\n\"What's the time?\" she asked. \n\n\"After two. Now what's wrong with you? Are you sick?\" \n\nKyle stepped out of the booth. \"Who's sick? Ana, what's wrong?\" \n\nKyle was so simple and easy to deal with. Ana felt him rub her aching shoulders and smiled despite the pain. \n\n\"I'm okay, Kyle,\" she repeated. \"I've just had a headache that won't go away for the last few days; and my muscles are stiff.\" \n\nHe frowned. \"Then what the hell have you been doing coming in here each night after a full day's work?\" \n\n\"Babysitting the talent,\" she smiled. \n\n\"Rubbish. Go home.\" \n\nHer head was feeling heavy. \n\n\"Can't.\" Her answer was muffled by her touching her forehead to the table top. \n\nKyle rubbed her back. \"You can't keep doing this to yourself, sexy.\" \n\nAna turned her head sideways with a sigh. Kyle's warming hands and concern felt good; even his silly endearment made her smile. It was nice to know that someone cared. Someone easy to be around. If she ever remembered to quit pushing everyone away, she could have more friends and enjoy this feeling regularly. \n\nShe couldn't see all of Leo from her prone position -- but what she did see was the blatant disapproval in his eyes just as he turned and walked out the room. Yes, easier people were... easier. \n\nHer eyes must have slipped shut again without her knowledge, because when she finally opened them again, more of her body felt sore and the room on the brink of freezing. Was that right for a summer's night...? \n\nSomething had disturbed her. \n\nOr someone. \n\n\"Hey... come on.\" \n\nObviously this was another dream. Why else would Leo be touching her, so tenderly, too? And speaking to her in a nicer tone than he'd granted her in nearly a week? \n\nAna forced her eyes open and peered at her watch. It wasn't even four o'clock yet. Her groan was barely audible past the tender rawness of her throat. \n\n\"No to whatever you just tried to say,\" Leo replied. \"I've called security to lock up -- and now need you to help me get you downstairs.\" \n\nHe was right -- everyone was gone. It was both quiet and slightly dimmer in there than she was used to. \n\n\"Uh uh,\" she shook her head. \"We... have another three hours before... before our breakfast break.\" \n\nHe ignored her; got her into a teetering position, then scooped her up into his arms. \"Put your arms around me.\" \n\nAna woke up instantly. She hadn't been picked up since her early teens and had long ago accepted that nobody could anymore. Her headache was firmly set at both temples and a general fogginess filled the entirety of her skull. Yet even through all that, she was able to make out the ease with which he walked with her in his arms... and the warmth that eased through her at his scent. \n\nHer head on his shoulder, the tip of her nose pressed to his throat, Ana couldn't help but think of all those songs with all those promises about not letting the one go. Ever. \n\nShe'd spent the last few days listening to the three men work on the New Year's set for Karma, but had never actually listened to any of Leo's albums. Thandi had told her to, but after the first few mornings of waking to the sappy accompaniment of Marvin Gaye, Babyface and Dwele, Ana had preferred the apartment in silence once her friend had left for Botswana. \n\nBut now she wondered about what Leo sang about. Had he ever held someone like this, whispered to them as he carried them under the stars? Had he ever written a song for someone he never wanted to let go...? Ever? \n\nHe buckled her into the plush leather seat of a black Audi and then something bothered her as the car glided through the dark. She tried to pinpoint it, but sleep was lapping at the edges of her concentration and her stiff body was submitting to bliss of being embraced by warm, cream-coloured leather. It wasn't cold outdoors per se, even for the pre-dawn hour -- but she was shivering faintly and Leo must have turned on a low heat setting on her seat to help her relax. \n\nAn unfortunate side effect was that it also infused her pelvic area with a slow-building throb that had her glancing at her silent companion repeatedly throughout the drive. His hair was in his eyes, tousled from being raked in absorbed moments. Dark, messy... tempting. \n\nJust like him. \n\nParts of his face were in shadow, so she couldn't even guess at his thoughts or mood -- but those lips... Her hips rolled subtly as she remembered what those lips could do. The heat rose, travelling through her, turning her spine into a bright, symmetrical bolt of hot lightning. \n\nThe niggling error came to her when the car stopped and a gate she had only ever seen once before quietly slid open: He'd been driving the wrong way. \n\n\"What are we doing here?\" she asked. \n\n\"I brought you to my place so I can take care of you.\" \n\n\"No.\" \n\nLeo waved at the night duty guards and drove through the country estate to his house. The complex grounds included a small park in the centre and his house was at the top of the uphill slope that began beyond the park. The other widely-spaced properties were all shadowy cocoons. \n\nShe'd been too pissed off and anxious on her last visit here to notice how tranquil the place was. When they stepped out of the car -- Ana refusing to be picked up this time -- the view of the park's trees and man-made lake below in the moonlight was breath-taking. \n\nLeo left the car outside the ground-floor garage and stood patiently near the steps that led up to the patio and main entrance on the first floor. Ana took her time listening to the stillness and watching the light undulate on the water. When she turned she noted the long balcony running the length of the second floor, the bedrooms' floor, and wondered about the view from there. \n\nLeo's golden eyes looked hot... amber. \n\nShe slowly passed him on her way up to the front door. \"This is kidnapping.\" \n\n\"I know.\" He unlocked from behind her, one hand absentmindedly touching her hip as the rest of him pressed up behind her, fitting to her as if they came home together at dawn all the time and no longer needed to think about making their bodies work together. \n\n\"I could do without your bossiness.\" She was walking ahead of him, pausing at the couch to toss her backpack on it. \n\n\"Of course.\" He picked up her bag and took her hand. \n\nAt the top floor, he walked her past a few doors then opened the one at the end. The thick carpeting nearly made her moan and sink to the floor. \n\n\"I know how to take care of myself,\" she told him. \n\nLeo pressed a few buttons on a console and the motorised ceiling-to-floor drapes hummed shut as the recessed lights came on. The room was big enough to house a small family and was decorated in unmistakably expensive and masculine tones. Ana stared at the king-sized dark imbuia bed with its plush cream duvet. \n\n\"I never said you can't take care of yourself,\" Leo murmured, taking her hand again. \"I'm just asking for permission to help, just this once.\" \n\nHe led her past the wall of closets to a door beyond them, dropping her bag on an armchair along the way. The bathroom was done in muted caramel and cream luxury. The enormous free-standing tub, a marble poem. \n\nAna walked in without another word. \n\nLeo returned with fresh towels and a robe as she kicked off her sneakers and socks. The water hissed out of the faucets as he poured things into the rushing bubbles. He paused before leaving, his last look an order to shout if she needed anything. Ana nodded. \n\nShe grimaced at the protest screaming all the way up her legs, ribcage and arms as she undressed. The water felt so good as she sank into it, a tear actually escaped. She'd pushed herself harder than she should have all week long... and for the first time had someone setting up self-punishment boundaries and taking care of her. \n\nShe'd never had a man care before. Fuck her, sure. Because fucking is what she chose. But run her a bath with therapeutic salts? Nah. \n\nIt was the fact that it all felt so good that made her cry in relief. It was sad that something so simple could mean so much to her; that she'd never been given this before. And it was scary even contemplating liking any of this. \n\nMost dangerous of all, was Leo -- the man who could put aside sexual attraction and personal differences... and a whole week of exhaustion... to make her feel like she mattered. The tingling permeating her skin could have been due to the hot water... or her thoughts. Hard to tell. \n\nShe got out when the fantasies about bathing there more than once began. \n\nThe bedroom was empty and she could make out faint music downstairs. Black pyjama pants and a white vest lay on the bed. Ana raised an eyebrow at that. A quick search did not produce her bag -- not that it would have mattered, she didn't have any clean clothes in it. And the ones she'd taken off in the bathroom made her grimace. \n\n\"They'll be big on you, but it's something to wear while I figure out how to run your clothes through the wash.\" \n\nShe turned to find Leo watching her, a tray in his hands. He set it on a low table near the curtained windows and turned back to her. He came closer. Ana pulled the robe tighter as he approached her. \n\nHe ran a thumb slowly in a half-moon under one eye; tracing a dark circle, no doubt. \"How long has this been going on?\" \n\nAna thought about deflecting, but was too tired. \"Since the first day.\" \n\n\"And you were seriously just going to push on?\" He was holding back the full force of his outrage, she could tell. \"Have you at least been to a doctor? What caused this?\" \n\n\"I don't know,\" she shrugged. \"I've been fine for ages -- haven't done anything that could bring on this flu-like attack; haven't eaten anything out of the ordinary. I've been strong and busy all year. The gig I had before this was way harder and --\" \n\n\"What were you doing?\" \n\n\"A tv series,\" she replied. \"My official job title was 'production manager', but the show was under-budgeted and understaffed. I ended up working like a maniac -- we all did -- research one moment and lugging lighting equipment around the next, location scout for a day then striking sets after that. I often went from D.O.P to gaffer to floor manager in the span of an hour. It was actually ridiculous, come to think of it.\" \n\nShe almost chuckled at the memory. When she looked up Leo was looking at her the way he had that first day, like he was really seeing her and didn't want to stop looking. \n\nShe fumbled on. \"Anyway. If I could do that for six months straight with no glitch, it makes no sense for me to get sick now from a little sleep deprivation.\" \n\n\"Your body's crashing.\" \n\n\"Say what now?\" \n\nHis lips compressed briefly. \"It makes sense. You pushed yourself too hard for too long; when you eased up -- even just a little, your body basically collapsed in on itself. I've had some strenuous tours do the same to me.\" \n\n\"I'm shutting down?\" Her eyes widened slowly. \"Lovely...\" \n\nLeo smiled. \"It's nothing a little pampering can't cure. Speaking of which, I need you to get dressed so I can give you your foot rub before bed.\" \n\n\"My wha...?\" A stunned look entered her already large eyes. \"No. You're not rubbing me.\" \n\nAnd yet two minutes later she found herself dressed and sitting in an armchair, her feet in Leo lap and a bowl of vegetables in hers. There was also rooibos tea and orange juice on the tray he had set on the low table. \n\n\"I'm more of a chocolate milk kind of girl,\" she muttered at her bowl. \n\n\"Actually I would have called your skin-tone a rich, sun-kissed cinnamon -- but okay.\" \n\nHer eyes narrowed at him. Leo chuckled, his large hands wrapping her feet in warmth. After running around all day every day, they were the weariest part of her. He had warmed some argan oil between his palms before making good on his foot-rub promise and Ana felt her eyes sting again at his thoughtfulness and the decadence of his touch. \n\n\"So, do you have any chocolate milk? I'd rather have that and a cigarette out on the balcony.\" \n\nHe eyes darkened sternly. \"No sugary crap and definitely no cigarettes while you recuperate. Could you just follow my lead on this without being so difficult and stubborn all the time? A little broccoli won't kill you, Ana\u00efs. I called Thandi before waking you at the office; I know that she's out of country until next week and that you have no one else to look after you while going through this. Just give me the chance to stand in for whoever you'd prefer -- and make up for pushing you twenty hours a day since meeting you.\" \n\nHe was right. More than right, in fact. She needed someone right then. \n\nShe had no idea where the food was from, but the vegetables were delicious -- as were the juice and tea... and his touch. The ache in her feet dimmed away as Leo worked while asking her about her previous jobs. He laughed a few times at her crazier tales and Ana couldn't help enjoying the sound. \n\nShe wasn't sure what to make of the man... but at least knew that she relished watching him laugh. \n\nHe was barefoot and wearing pyjama pants and a t-shirt, half reclining in a chair facing her own so her foot could rest on his lower abs. Either the lighting or his mood made his eyes look brighter as he talked -- Ana just knew she'd never seen them glow quite like that before. His hair was damp and pushed back, his chiselled features completely exposed to her scrutiny. \n\nThe man was absurdly good-looking. Not like the men in magazines and tv ads -- better. Much better. \n\nIn a real way. \n\nHis dark hair hadn't 'behaved' a single day since she'd met him and most likely wouldn't even if cut shorter. His eyes were slightly deep-set, often giving him an intimidatingly intense look; and the line of his jaw a little too rugged to ever be called perfect. But she liked how everything came together to make him look strong and self-assured. So... male. There was an air about him that made it clear he was never to be underestimated. \n\nAnd that was the sexy god rubbing her feet... And telling her about some of his travels. \n\nAna tried really hard to participate in the conversation, but it was challenging. His hands had miraculously healed her feet and had moved up to a calf. That heat and conversing also meant paying attention to his one truly perfect part: his mouth. The form of his lips as they moved, as he smiled, along with the feel of his oiled hands on her flesh... More than once she lowered her lids, hoping her dark lashes were enough to shield the languid desire flowing through her. \n\nLeo, for his part, was either oblivious -- or truly meant it when he said he simply wanted to help her feel better. \n\nOnce done with the first leg, he rested her calf in his thigh and turned to the other. Ana had never considered herself dainty by any means -- so, it was with great intrigue that she noted how small his strong hands made her legs and feet look. \n\nWhen she looked back up at him, he was watching her expectantly. \n\n\"Huh?\" she blinked. \n\n\"Rehearsals,\" he said. \"Will Karma be ready for us to start rehearsals on Monday?\" \n\nShe nodded. \"Sure. Will you be able to manage days in rehearsal and nights at the studio?\" \n\n\"I've done it before,\" he shrugged. \"Shows are tougher with a live band. We need to rehearse as much as possible; no time for rest now.\" \n\nAna inclined her head. She hadn't said it to him in any way yet, but she couldn't deny that her respect for Leo was growing. She'd expected a whiny brat spewing demands and shirking his responsibilities. Instead he had put his commitment first right from the start. It couldn't be easy juggling everything he was. Yet he did more than was expected every day. \n\nAnd he still made time to take care of her. \n\n\"Okay, bed for you,\" he announced. \"You're barely keeping up with my absorbing conversation -- and my ego can't take being ignored much longer.\" \n\nAna straightened in her seat. \"I'm sorry. I... I'm just distracted, I guess. This has been a most unusual night.\" \n\n\"In a good way?\" he asked seriously. \n\nThere was some distance between them, a minimal sanity border... but it was still hard to ignore that he was sitting between her legs. She blinked at the one foot grazing his left hip and the other calf resting on his right thigh. Was this good? His treatment of her, yes. But this intimacy? \n\n\"Just unusual,\" she murmured. \"And about to get stranger, no doubt -- since you seem to think you can keep me from having a cigarette before bed.\" \n\nHis eyes narrowed at her. There was mostly amusement there, but she could tell that he was also considering pushing her for a real an answer to his question. \n\nHe stuck with humour. \"Challenge accepted, Ms Kem.\" \n\nHe stood then and, taking her hand in a way she didn't like liking, led her to the enormous bed. His bed. \n\nAna halted. \"Uh uh. I thought you... Don't you have guestrooms?\" \n\n\"Three,\" he answered, smiling. \"But you're a high insomnia risk. And I... don't trust you not to sneak a puff if I leave you alone. So. Guard duty it is.\" ",
        "It was a terrible idea. \n\nNot protesting his solution -- well, barely protesting; watching him watch her as she wove her long twists into a thick plait that fell over her shoulder; climbing into the bed once he'd drawn the covers back; staying despite the thudding of her heart once he'd killed all lights but one lamp and climbed in beside her... \n\nMoving to the far end of the bed -- but then letting him draw her back towards him. \n\nAll parts of the worst idea ever. \n\n\"Two things,\" he murmured behind her once the room was dark. \"One: I've never crossed this line with a colleague before -- in case you were wondering -- I want you to know that; and two: no games, no expectations. I was really shitty to you when we met -- and you've proven me wrong ever since. I only want to make up for my initial madness, so we can get back to work on better terms. I don't expect this weekend to lead to anything neither of us wants.\" \n\nHe was warm behind her, but not really touching her. \n\n\"I'm never going to fall asleep like this...\" \n\nLeo shifted. \"Of course you will.\" \n\nHe pushed her gently, encouraging her to roll onto her stomach. Then Ana felt his fingers lightly trail along her back. Free-flowing back tickles. \n\n\"I always reminisce in winter \n\nWith the rise of the first flame \n\nAt dusk, alone, I miss her \n\nMidnight is her name...\" \n\nAna's brow furrowed. \"What is that?\" \n\n\"One of my songs.\" He leaned closer. \"My plan is to bore you to sleep.\" \n\nShe laughed softly, her pillow cushioning the sound. \n\nIt wasn't Leo's fault that she felt... something... that often made her hairs rise around him. The kiss had been a moment of madness, as he'd said -- the rest of their relationship didn't have to be. It didn't have to be anything neither of them wanted. She would be home suffering alone if it weren't for this genuinely good man with the surprisingly poignant lyrics. \n\nAna hugged her pillow and dared to close her eyes. With a faint curl of her lips she noted his fingers resuming their journey all over her back, and focused on the soft touch. \n\n\"She has a home now \n\nShe has a life safe from harm \n\nBut I didn't build it, I'm not in it \n\nShe's not in my arms...\" \n\n*** \n\nBefore her eyes opened and before even her mind could stretch and awaken, Ana's body woke to Leo tickling her back. At first she thought him still here, but soon realised it was merely a memory, one too vivid for her own good. \n\nShe was alone in his bed, the plush duvet on the floor and the pale sheets tangled around her. The room was still rather dark, but she could make out the expensive furniture, hints of morning light... and the bottle of argan oil on the bedside table. \n\nRemembering the foot massage had her wondering about his personal life. Thandi had stressed that he was a very private man, but surely there should have been evidence of a woman by now? If he had one. \n\nAnd if he didn't, why didn't he? \n\nShe looked around the spacious room. \n\nLord knew the man wasn't easy to understand -- and definitely no pushover. Stubborn, stern and intense were words that readily came to mind... But he was also beautiful in the most unconventional of ways. \n\nSo, why did he spend a night with her instead of rubbing some fair-skinned nymph's feet last night? \n\nShe immediately got out of bed on a quest to pursue easier answers. \n\nWhere was he? What did the rest of this stunning house look like? Why were her clothes still missing? \n\nLeo was in the kitchen, glasses and slippers added to the outfit from the night before. \"Hey, snoozer. Breakfast is nearly ready.\" \n\n\"Why is it so bright down here?\" she squinted irritably. \n\n\"That is called the sun, oh, feisty one. And it always looks like that at 10:30.\" \n\nHe calmly continued chopping up fruit through her exclamation. \n\n\"We were meant to be in studio two hours ago, Leo!\" She wasn't even wearing shoes. \"The weekend is the only time we can really push day and night.\" \n\nHe arranged cubes of mango, pear, kiwi and strawberry in the bowl and added blueberries on top. After leading her to one of the tall stools at the counter, he placed the bowl in front of her. \n\n\"How are you feeling?\" He asked as he poured himself a cup of coffee and pulled the newspaper closer. \n\nAna gaped at him. \n\nWhen he saw the flames in her eyes, he sighed. \"I called everyone and told them Thandi had called to let me know you weren't well, that you'd spend a day or two in bed and see the doctor if you still feel the same on Monday. I had to go through your phone for the numbers -- hope you don't mind.\" \n\n\"That doesn't matter nearly as much as wasting a weekend when we have so little time left to finish producing this music so everything can be rehearsed in time.\" \n\n\"You need to take it easy, d'you know that?\" He sipped his coffee. \"And this isn't me talking -- it's your body, the one that might put you through worse if you don't figure out some sort of balance.\" \n\nAna pulled back at that. \n\n\"Now. You still haven't told me how you're feeling.\" \n\n\"Still a little discombobulated... but good,\" she admitted. \"Thank you for being there when even I wasn't.\" \n\n\"You're welcome.\" He glanced at her, he eyes tracing the shape of her in his clothes. \"If we take good care of you now, you'll be far more useful for the of the project's duration. We've had a good week, Ana\u00efs -- good enough to start rehearsals on time. The guys and I will put in a few more nights next week to finish the last of the backtracks.\" \n\n\"With me.\" \n\nHe thought about that. \"Yes. With you. Everything will be fine. Now finish your breakfast.\" \n\nAna sat and ate in silence. The fruit -- definitely not what she would have chosen -- was delicious, juicy and sweet. She eyed her silent companion as he read the paper. \n\nThe glasses were black and the thick frame had a bold, rectangular cut. Those along with his hair now tumbling across his forehead and dark, dark stubble gave him a look that swept all sense from her mind. She watched his lips as he sipped his coffee and his eyes as he read. \n\nIt was mesmerising how fully he gave his attention to all that he did. \n\nHe spoke suddenly, startling her, though his gaze remained on the paper. \"Your clothes are in the wash and your phone is off. It's a lovely morning if you'd like to spend some time in the garden. I do, however expect you back in bed, resting, before lunch.\" \n\nAna made a face at him, but she didn't argue. \n\nLeo smiled into his mug. \n\n\"Can I at least have some coffee if I am seriously to forgo my chocolate milk?\" \n\nHe poured her a glass of water and slid small white bottles towards her. \"Supplements -- take one of each... and this is a mild painkiller. Finish your water with those and I'll gladly make you some coffee.\" \n\nAna downed the glass without hesitation. \n\n*** \n\nAfter her shower her clothes weren't ready yet, so Leo handed her another t-shirt and a pair of shorts that reached past her knees. Ana grimaced, but the outfit was a small price to pay for some sunshine. Besides, it wasn't as if her own clothes were haute couture. \n\nLeo surprised her by following her out the front door. \n\nShe knew that he'd arranged for her to take the day off, but hadn't expected him to spend the entire time with her. She'd thought he'd ignore her for the most part and do... his stuff... whenever she didn't need him. \n\nInstead he was strolling by her side in what he had (laughably now, she realised) called the \"garden\". The estate was more the size of a small suburb. Houses in various beautiful designs stood tucked along the foot of the hill and across the lower planes on the other side of the lake. The water itself was surrounded by neat lawns which were in turn encircled by majestic trees that separated the park from the roads leading into each residential section. \n\nLeo pointed out the private schools in the distance and told her about the restaurants and other amenities. Enormous organic nurseries and a horse-riding school were set up too far for her to see from his house. It was a sublime slice of heaven, right in the city. Ana didn't even want to know what it cost to live there. \n\nWhen Leo took her hand and led her down toward the water, she was glad to have him there. Partly because she was getting more out of a guided tour than she would have getting lost on her own; but mainly because it was disconcerting coming across a few of the other residents and having to steel herself against their curious double-takes and occasional blatant stares. \n\nOf course it didn't help that Leo's grip on her hand tightened when she tried to tug free. \n\nThey sat on a bench near the water and talked. Ana couldn't remember the last time she'd just let herself just be like that. \n\nIt had to be the way that he quietly told her silly and significant things about himself that eventually had her talking about the death of her father when she was fifteen. She didn't speak about her father anymore -- because his death had torn her apart... and what she learned after had crushed her. So, it was strange to say his name with genuine neutrality for the first time. \n\nLeo's attention was on her twists, his fingers loosening the plait she had woven the night before. \"You two were close.\" \n\nIt wasn't a question, but she nodded anyway. \"I'm an only child and he doted on me. My mom and I were the centre of his world. When he died I just couldn't see how the earth could continue rotating and revolving... how days and life would go on.\" \n\n\"Not many get to have a relationship like that with their fathers.\" \n\n\"I should hope not,\" she said wearily. \"A few years later, right after my eighteenth birthday, I found out the truth. He'd been cheating on my mom for years. She'd put on an act the whole time, faking happiness so I could grow up happy.\" \n\nHis fingers never left her hair. Maybe that was why she couldn't resurrect the anger she was so accustomed to when thinking of Andile Kem. \n\n\"Ag, it's all done now,\" she concluded, \"and I got to learn some valuable lessons along the way about secrets and trust --\" \n\n\"And love?\" \n\nShe didn't answer. \n\nSo, he spoke some more. About himself. \n\nIt was relaxing listening to Leo who was so comfortable with his own background and story. Tales of struggle and strength from his mother's side of the family; and ones of passion and humour from the Greeks on his father's side. \n\n\"Greek -- that makes sense,\" she said. \"Boreas.\" \n\n\"Not many pick that up,\" he smiled. \n\n\"Well, it isn't a common Greek surname, is it?\" \n\n\"It isn't,\" he conceded. \"We're not quite sure how we ended up with a deity's name, but here we are... Impressive, Ana\u00efs.\" \n\nShe shrugged. \"I like mythology.\" \n\n\"And passionate writings?\" He leaned in, his arm behind her. \"I don't know why you insist on calling yourself Ana when you embody your namesake's fire so perfectly.\" \n\nAna shook her head. \"Nah, not me. I'm nothing like her.\" \n\n\"Please understand,\" he quoted, \"that I am in full rebellion against my own mind, that when I live, I live by impulse, by emotion, by white heat.\" \n\nAna stilled. When she turned to him, his expression was unwavering, his golden gaze direct. \n\n\"She wrote that, you know.\" He ran his fingers through the tips of her hair, making her shiver. \"You've been nothing but passion, emotion and heat since I met you, Ana\u00efs.\" \n\nShe'd never seen herself that way. \n\nShe'd been told she was stubborn, aggressive, difficult... hard, flawed, different... \n\nBut passionate? Fierce? She'd never been taught to see herself like that. \n\n\"I don't... fit in.\" She frowned thoughtfully. \"Not that I want to -- it's just had to miss how different I am.\" \n\n\"Ana\u00efs Nin didn't either,\" he murmured. \"In fact, she said if she hadn't created a world of her own, she would have died in the worlds of others. Hate to break it to you, but that's true for everyone. What makes you different is most people are too scared to show themselves.\" \n\nShe would not let Leo make her believe the fire in her was beautiful in any way. She was quiet all the way back to the house. And he let her be. \n\nAs promised -- threatened? -- he tucked her back into bed upon their return. Then surprised her by bringing her a few books to read, Henry &amp; June at the top of the pile. She finished both the juice and water he brought her as she read.  \n\nWhen she fell asleep, she noticed neither the book that slipped to her lap nor the man who stopped to watch her slumber after he'd retrieved it. \n\n*** \n\nLunch was chicken broth in the lounge. According to Leo, one supremely miffed restaurant manager, chef and waiter had all assisted him with packaging the meal after he'd insisted for twenty minutes straight that he deserved a once-off takeaway policy. Ana shook her head admonishingly. \n\nBut she couldn't be mad at him, not really. Not after the trouble he'd gone through to make her comfortable on the couch with pillows and a comforter from one of the guestrooms. He flicked through the tv channels until her breath caught at the sight of Perfume -- then surprised her yet again by joining her. \n\nAfterwards they argued about chocolate milk and cigarettes. If \"arguing\" could be defined as her threatening darkly... and Leo ignoring her. \n\nIn the afternoon her headache threatened to split her skull in two. \n\nLeo brought her stronger painkillers and stood over her until she finished her water and juice. Then he ordered her to stretch out on the couch and began massaging her head, neck and shoulders. She might have moaned a few times. \n\nAgain, he talked while she listened. His hands never stilled and slowly the pain was beaten back. She was sound asleep within an hour. \n\nAt one stage she surfaced briefly and saw him as she was rolling over. He was sitting in an armchair, his feet on the coffee table. His glasses were on again and he was tapping away at the Mac on his lap. She wanted to apologise for being in the way while he had so much to do, but sleep reclaimed her before her tongue could wake. \n\nThe sky was filled with champagne and flames by the time she was done napping. \n\nThey watched the rest of the sunset together out on the patio, sipping coffee. Leo's phone rang, but he made no move to answer it. \n\nBy the time he asked her what she wanted for supper, Ana knew she would be spending another night at Leo's. Upon arriving, all she'd thought about was leaving. But somewhere along the way she'd come to appreciate and really accept all Leo was offering. Not just because she was worn out and needed the attention. But, rather pathetically, because she'd never let any man take care of her before... and was finding that she quite liked letting go a little and letting someone else be strong for her. \n\nFresh pyjamas awaited her on the bed by the time she stepped out of the bath. \n\nAgain Leo sat with her at the counter as they shared a meal. He told her more about Ana\u00efs Nin when she demurely asked about the writer. Sensing her restlessness, he wrapped her in an oversized robe and took her for a walk through the violet night gardens. Went past the park and all the way to the gym and beauty spa. When she felt tired enough to sleep, he held her hand and led her to bed as he had the night before. \n\nIn the bed, he tucked her head on his shoulder then waited to see if she would protest. She didn't. So, he tickled her back again with one hand, reciting song lyrics until she drifted off. \n\n*** IV *** \n\nAna slept late again. And this time woke to an empty house. \n\nHer body was already so much better, stretching gratefully in the morning sun. She lined up bacon, coffee and a muffin -- but then pondered her choices guiltily. Birds out on the window sill cheered on her conscience. \n\nWith a huff she retrieved a bowl instead and diced up some papaya. After adding some Greek yoghurt to it, she snuggled on the couch and watched a chirpy woman cook all the things she'd love to feast on. Well -- maybe not pork sausages baked in grapes... \n\nWhen it seemed her loneliness would stretch on indefinitely, she raided Leo's closet. Dressed in fresh shorts and a vest, she took a deep breath and ventured out the door. She headed in what she hoped was the direction of the stables, but found herself at a small complex of shops an hour later instead. The bookshop was closed, but the coffee shop and bakery made her stare wistfully. \n\n\"They have wonderful quiches.\" \n\nAna nearly jumped out of her skin. \n\nTwo blonde girls were smiling enquiringly at her. They wore tennis outfits and carried brown paper packets with the bakery's logo on them. \n\n\"Sorry, my sneaky ninja sister didn't mean to startle you.\" The taller one held out her hand. \"I'm Mandi and this is Nicki. We're your neighbours -- sort of. We live in the same section, just a few streets down.\" \n\n\"Ana.\" She shook hands warily. \"How do you know where I... am from?\" \n\n\"Your clothes,\" Mandi grinned. \"Ninja-stalker over here wants to marry Leo and have his babies. Apparently the first step to getting there is memorising his entire wardrobe... amongst many other creepy practices.\" \n\n\"I'm not creepy!\" Nicki's was outrage wrapped in an apology. \n\n\"Yeah, well -- how much you wanna bet Ana didn't have to stalk him in order to get him?\" \n\nAna couldn't believe what was happening. The day before she'd eyed everyone with caution, thinking they'd attack or at the very least run her off the property if they found her alone. Now, instead of being treated like a trespasser, two sweet girls were actually making her laugh. In the middle of horrifying her. \n\n\"Oh, I don't have him at all,\" she corrected emphatically. \n\nBoth girls stopped squabbling to eye her with the suspicion she'd initially expected. Ana laughed at their matching expressions. \n\n\"You're telling you me the man who never has anyone over just did God-knows-what to you for days and has you wearing his clothes all because, what? You're such swell buddies?\" \n\n\"We're colleagues.\" \n\nMandi giggled. \"You're such a terrible liar. Obviously you two are into each other -- we saw you over by the lake.\" \n\n\"No, really. We've been working too hard and I eventually got sick.\" Ana's hands, unaccustomed to anxious gesticulation, floundered through her earnest argument. \"He just felt bad and brought me here because I don't know anyone else. Nicki can still, er, have his babies...\" \n\nThey weighed up her story. \n\nFinally Nicki spoke. \"Well, you should try out those quiches sometime. Probably not while you're... sick. Want a lift back? We're supposed to be on a breakfast run for the family and they must be starving by now.\" \n\nWhat the hell. Ana got into their deluxe cart with them. After the heat of her walk it was nice to feel the wind lift her hair as Mandi drove. \n\nShe turned to her. \"You don't believe me, do you?\" \n\n\"I'm not saying I don't,\" Mandi grinned. \"I'm just saying this: if that man releases any new love songs, I know exactly which face will come to mind.\" \n\nNicki giggled in the back. \n\n\"Not yours, Creepy Spice.\" \n\nAna laughed. It felt good. \n\nThe rest of the day was peaceful. Leo came back with lunch and shook his head when she mentioned the blonde neighbours. What interested him more was hearing about her walk and noting the happiness in her eyes. He drove her over to the stables before sunset where she got to meet the instructors and a couple of the horses. \n\nThere was curiosity in everyone's faces, but no one asked awkward questions or mentioned her attire. \n\nAfterwards they picked up supper at one of the restaurants that allowed takeaway and enjoyed the vegetable wraps down by the lake. Leo told her about his morning. Her breath stilled as he spoke about an argument with an annoying distributor -- not because of the disagreement, but because she found she liked having him lean on her a little by confiding in her. ",
        "Ana sipped her juice, ruminant. \n\nThat night she asked him about the years after he retired. He skimmed over his reasons and that time in a way that told her how serious a transition that had really been. Leo had parts of himself he couldn't share yet. She understood that. So, she asked him about the six month before his return instead. \n\nHe had his arms around her -- no tickling tonight. And the whole experience felt far more weighted with meaning. He spoke about his family in the Western Cape and his trips out of the country. As sleep snuck in she imagined that his tone and the gentle breeze outside were one and the same. \n\nAnd she imagined more. Imagined that when she grew too tired to talk, he whispered her name a few times... then leaned in and inhaled the scent of her before drawing her closer and drifting off. \n\n*** \n\nMonday morning felt different. \n\nOr Ana\u00efs did. In a way. \n\nShe woke to find her clothes neatly folded on the ottoman at the foot of the bed. The silence of the house was soon broken by the front door opening downstairs. \n\nShe made no comment upon finding Leo on his way upstairs, back from the residential gym. Seeing the new definition in his arms and the brilliance in his eyes made her feel many things, but she didn't want to ruin the simple camaraderie he'd worked so hard to cultivate all weekend. So, she said nothing. \n\nHe passed her with a smile and his scent left her reeling. \n\nFor the next ten minutes she sat curled up on one of the bedroom armchairs, listening to the shower run and Leo adlibbing a deep, smooth version of a Musiq Soulchild song. His singing... His recorded music was beautiful, even she had to admit that -- but listening to his voice live was so special it shook her. \n\nShe hurried out as soon as the shower stopped. \n\nBreakfast was her treat -- omelettes that made him grin at her until she self-consciously thumped him on the arm and walked away. She was feeling a little vulnerable and sensitive after hearing him sing; and deflated at being back in her own clothes and on the verge of leaving the little bubble they'd created. \n\nAll the more reason to get the hell out of there. \n\nLeo drove her back to the office to pick up the car. It was just after dawn, quiet and unrushed as dawn tended to be -- and Ana didn't know what to say to the man beside her. \n\nIn the office's basement parking lot, he walked her to the car -- then stopped her before she could get in. \n\nHis lips met hers gently. \"Thank you for this weekend, Ana\u00efs.\" \n\n\"I, er...\" Her surprise slowed her brain. \"You did so much for me -- I should be thanking you.\" \n\nHis lips met hers again and this time it was no platonic peck. \n\nIt was strange that she remembered his taste so well. The moment his tongue met hers, something at her core tightened then slowly uncurled and blossomed. They had only known each other a week, but there was something in the kisses they shared that was timeless. She recognised his heat and the feel of his hands on her hips. \n\nShe moaned when he started drawing back and pulled him closer to her. \n\nThe weight of his body pressed her to the car, her tightening nipples crushed against his chest. His hips pushed into her, fitting against her; his hands traversed the curve of her arse, pulling her to him... and she gasped at the excruciating intimacy of the contact. \n\nShe'd stopped him from pulling away. She'd asked for him and now he was giving her everything. \n\nHer arms locked around his neck when she felt him lift her. Being at eye level with him almost felt a little too high, a little too dangerous. All the while, through the hush of desperate breaths and this unexpected blaze, Ana was aware of the deliberate rocking of his hips. He held her to him and watched her as he pushed up into the apex of her thighs. He made her hate their clothing and fear her need for him. Because he was getting her to confess her desire with undulating thrusts of her own. \n\nHis erection felt fit to cut through his pants and fill her. And though she wanted him to, she wasn't sure she could handle all that came with that. She'd be a fool not to acknowledge that this man was nothing like the ones she'd slept with in the past. \n\nThis one... \n\nLeo saw something in the way that she looked at him that made him plunder her mouth with his tongue. He was trying to convey something to her... or seeking something... she wasn't sure. She just knew that they were locked in a significant storm. She just knew that she wanted him to remember her shape and... her fire. \n\nShe put everything good and beautiful that she had ever been into that kiss... and gave it all to him. He made her believe that she could. Slowly, deeply. \n\nAnd then it was over. \n\nHe pulled back and this time she let him. He slowly eased her down to her feet and leaned his palms on either side of her against the roof of the car. Ana used her fingers to comb back his hair, watching it tumble forward again. \n\nWhen she moved to step out of the circle of his arms, he let her. One hand on the driver's door, she turned back to him, looking for a way to explain that this would be their last kiss. Because of work, but also because she didn't want to feel things. \n\nEspecially things that could go nowhere. \n\nHe read her eyes and quickly stepped forward to speak before she could. His words never formed, however, as the sound of the boom mechanism at the entrance disrupted their spell. A car entered, but headed to a different section of the lot without its lights ever reaching them. \n\nAna opened the car door, got in and drove off. \n\nLeo let her. \n\n*** \n\nAna sat at the kitchen table. Condensation gathered on the open bottle of chocolate milk in front of her. Next to it was a new pack of smokes. \n\nShe put all her focus into combatting the silence around her, tapping aggressively at her phone's screen and glowering when her efforts produced no sound at all. According to Thandi's email that morning, Ana had two more days of muted reflection to look forward to. Two more days of pastel walls, questions and yearnings. \n\n\"Bloody hell...\" \n\nShe got up and went to open the fridge for the fifth time. The cottage cheese remained unfazed, stubbornly refusing to transform into something she might want to eat. The lemon beside it watched on in pinched approval. \n\nShe slammed the door shut. \n\nHer skin felt hyper-sensitive, and not in any understandable way. No matter what she concentrated on, she could feel Leo pressed against her. Her phone beeped a few times, messages popping up in response to the ones she'd sent. The cheerful pinging was almost a nice distraction -- but it also stopped too soon, as if it wanted only to remind her of how truly alone and silent she was. \n\nAnd that was the problem. \n\nThandi's apartment had never bothered her before because it was simply an apartment. It was beautiful and sturdy and untroubled. It was peaceful. \n\nShe was the one who was different. Restless in her aloneness. \n\nUnfinished. \n\nMore beeps, just in time to cut off her urge to curse. \n\nShe picked up her phone and checked the messages. At least the good news was that the whole band had 'punched in' at the office and would manage without her for the day. She trusted Eric to keep everyone in line. The drive that he and Leo displayed almost had her feeling sorry for this new crew on their first day of practice. \n\nWill sent a meme that made her smile, wishing her a speedy recovery. She felt bad for lying, but chose that over admitting she was much better. She wasn't ready to be near Leo again, not with her heart tripping and her skin this hot. \n\nThe trees outside rustled. Damn tomb of a building. \n\nShe marched resolutely to the bathroom, unbuttoning her pants as she went. \n\nThe shower helped massage the heat in her skin all the way into her flesh. Ana couldn't decide if this was a good thing. Her bun, tucked into a cap, left her neck bare and the water pelting the back of her neck felt wonderful for a minute. But then in the next minute, the hushed patter had her remembering what it felt like to have Leo's heat behind her as he whispered lyrical spells into her ear in perfect darkness... \n\nThere was a new message on her phone when she padded back into the kitchen, refreshed but still restless. \n\nLeo. \n\nIf you really aren't feeling well yet, you should have told me. If, however, this is all just a ruse to avoid me, you needn't worry: I'll be home all morning then in Fourways all afternoon. Do what you want. \n\nAna bit her lip. The restlessness was humming through her bones, making the heat on her skin ripple. She looked around but no answers appeared; no company but the rustling of the tall trees. \n\nDo what you want. \n\nShe marched into the bedroom and didn't stop moving until she was dressed in jeans, a strappy vest and black pumps that sported a pattern made up of little white bones. She grabbed her tote bag then was halted by the glimpse of herself in the mirror. Her skin seemed to glow and there was a proud straightness to her spine. It was her own eyes that had made her stop, though. There was fire in them. \n\n\"... I live by impulse, by emotion, by white heat.\" \n\nShe left without a second thought. \n\n*** \n\n\"Ungangena, sisi.\" \n\nIt was her third time in a week stopping at these gates and the guard with the neat goatee was now a familiar face. No doubt his smile meant he recognised her too, but that did not make sense of his words. \n\nAna cocked her head. \"Are you sure? I've already dropped in unannounced once before and... got into trouble.\" \n\n\"Very sure,\" the young man nodded confidently. \"Mr Boreas cleared you to come and go as you please. We won't need to call up to the house or escort you. Go on in.\" \n\nAs if in agreement with him, the gates slowly slid open. Ana tightened her grip on the steering wheel as she drove in. \n\nWhy would Leo leave special permission for her to come and go as she wanted? Had he known she'd be back? Was he really that cocky about his effect on her? \n\nIt took ten minutes to reach his cul-de-sac and drive up to his house -- nowhere near enough time to figure out the man's motives. Not surprising considering she could barely read her own. Grim humour twisted her lips as she parked in the empty carport. \n\nSoft music was playing inside. This she only heard when she reached the door and knocked. \n\nHer hair was still up, a realisation far too late to help -- so she settled for quiet cursing. It only served to show how good she was at what she was about to do. The last thing she wanted was to arrive looking like a schoolmarm, but what were her options beyond that, really? Inked renegade? It's not like she was anywhere near being the nothing-but-a-trenchcoat-and-heels kind of woman who just -- \n\nLeo wasn't wearing a shirt when he answered the door. Again. \n\nHis feet were also bare and he held a sheaf of papers in his hand. Dark, dark locks tumbled forward, touching at his glasses. He seemed inordinately surprised to see her -- so much so, Ana started wondering if the guard at the gate hadn't been mistaken after all. \n\n\"What?\" she demanded when a minute passed without a word from him. \n\nHe blinked then straightened to his full height. \"You, uh... Hi.\" \n\n\"Why are you looking at me like that?\" \n\n\"You're not wearing your usual makeup.\" \n\nShe instinctively touched her fingertips to her lips. \"Shit...\" \n\n\"No, not shit -- not shit at all actually.\" A tilt of the corner of his mouth. \"I was kind of preparing myself for distance and platonic professionalism -- and the reconstruction of your walls.\" \n\nShe held his gaze. \"Why did you tell the guards --?\" \n\n\"Because you're welcome here. Always. In whatever ways.\" \n\nShe couldn't face that any longer. She turned and swept her eyes across the sunlit estate. Puffy clouds hovered in the distance. The breeze had followed her all the way here, was still whispering to her... but had done nothing to cool her fervour. \n\nHonesty. Be honest. \n\nShe turned back to him. \"I don't want 'always', Leo. And definitely not all ways.\" \n\nThere it was: gold flowing into his narrowed gaze. He turned and headed into the lounge, leaving her standing in the open doorway. Ana sighed, stepping over the threshold. \n\nMore papers were piled on the couches and his laptop was on. Ana felt bad for interrupting his work -- only to reject his blatant vulnerability. \n\n\"I'm sorry...\" \n\n\"Bullshit.\" \n\nHer hands shot to her hips. \"Excuse me?\" \n\nSo much for vulnerability. \n\n\"Bull. Shit,\" he repeated with surprisingly casual humour. \"I don't believe you don't want any of this.\" \n\nOh. She took in the width of his shoulders, remembered snuggling in his arms and forgetting her pain. \n\n\"I don't do relationships, Leo.\" She spoke softly. \"I tried once and it... didn't work. But that's okay -- I'm just not a forever-girl.\" \n\nHe tossed his papers on top of one of the haphazard piles. His glasses followed seconds after. Ana had expected an arrogant comeback, some kind of challenging dare. So, it surprised her to see him weigh up her words seriously. \n\nA moment later he pinned her to the spot with his lion's gaze and one simple question. \"Then why are you here?\" \n\nShe still had time. She could fabricate something about work then step out into the sunshine and drive off. She could go back home and drink the fucking chocolate milk she'd left on the kitchen table. She could put her makeup on. \n\nHe was watching her, reading her mind. \n\nShe knew he'd sensed the words before she said them, but she said them anyway. \"Because I do want you. I want you, Leo, and I don't know how else to stop this.\" \n\nHer feet left the floor before she could steady herself. \n\n\"I've got you.\" \n\nAnd he did have her. \n\nLeo locked his arms around Ana's waist until her legs had no choice but to wrap around his. He looked into her eyes as he walked, carried her upstairs without ever breaking eye contact. \n\nShe hadn't been celibate all year, far from it. She'd fucked a guy or three and it had been fun -- when they weren't annoying. But what Leo's eyes were saying now looked forebodingly like a promise to make love to her -- and that was different. She lowered her gaze. \n\nHe wasn't having that, though. \n\n\"Hey.\" His fingers gripped the knot atop her head and he pulled until her neck strained back and she was forced to look into his eyes again. \"Stay here. I expect you to stay connected for every second of this.\" \n\nHis bed was neatly made, everything else in its place. \n\nAna tightened her arms around Leo's neck at being in that familiarly intimate space. The music was still playing downstairs, faintly seeping through the walls. A man was singing soft promises in Spanish. \n\nAna was naked. \n\nLeo had slowly removed her clothing and made her watch him do it. The only time he'd broken eye contact was when she undid the knot of twists and her breasts lifted with the movement of her arms. \n\nThere was something to be said for looking absolutely nothing like the girls in the music videos. She'd long ago quit even hoping to match them in any way. The best part of that was that she was freer than most women she knew. She didn't use her looks to get special treatment or ever assume any man would be arrested by the sight of her nudity. \n\nUntil now; until she got to live exactly that. \n\nThe heat in Leo's gaze agitated the sizzling along her skin. He was looking at her as if he'd never seen a woman before. And his touch, when he cupped her full breasts, spoke the same. \n\n\"Since the day we met this is all I've been able to think about -- seeing you, all of you.\" His eyes were on her thighs, her navel, then back on her breasts. \"You've been tormenting me, beautiful.\" \n\nAna's nipples tightened instantly. \"I wasn't trying to...\" \n\n\"You didn't have to try.\" He ran his thumbs over her eager nipples. \"I've never seen anyone stand out as much as you do while trying to hide in plain sight. You don't even realise how remarkable you are, do you?\" \n\nWas she meant to speak? And say what? With his lips at her earlobe and his words mesmerising her, was she really expected to maintain coherence? \n\n\"You will always be impossible to miss, Ana\u00efs.\" His teeth grazed her earlobe. \"For as long as you walk and move the way you do, men will wonder about your hips and skin -- no matter how practical you think your jeans or how baggy you believe your tees are. Each day you've arrived with smoke around your eyes and berries on your lips, I have gone through fucking hell trying to concentrate on work -- instead of constantly thinking about your kisses and the fire in your eyes.\" \n\nHer head dropped back as she succumbed to his words. \"I'm not like other women.\" \n\n\"That's exactly my point, sweetheart.\" \n\nShe was used to furtive fumbling and dark beds. Standing before the most beautiful man she'd ever met and letting him study her flesh was unnerving. Letting him say things to her that made her yearn for his words to be true... that was ripping the very seams of her reality. She was telling him, showing him, who she really was. And he was agreeing -- but in a way that made her wonder if she was beautiful. \n\nHe wasn't even naked yet. \n\nThe tip of one finger lowered and touched the tip of her biggest tattoo -- just inside her hipbone. From there he traced the flock of birds -- some whole, some partial, all uniting to form swarms of music notes -- up the edge of her tummy, around her waist and up to her shoulder blade. From behind her he reached forward to cup her breasts again as he put his lips to that first note right at the top. \n\nShe didn't think much of the repeated paths he kissed up and down that tattoo. Mainly because she could barely think. The last thing she expected was that he was reading the music. \n\n\"This is from his... first ballade.\" The conclusion was whispered against her skin as he knelt to kiss the last of the flying notes on her pelvis for the hundredth time. \n\nNo one ever recognised the artwork for what it was. \n\nAna swallowed so she could speak past the lump in her throat. \"Yes.\" \n\n\"I used to play this... a long time ago.\" He stood and lifted her in his arms before walking over to lay her on the bed. \"I wouldn't have guessed you to be a fan of Chopin.\" \n\nHis hands were on her thighs, large and sure. He made her feel delicate. \n\n\"I love Chopin.\" \n\nLeo smiled at her words. \"You give yourself away.\" \n\n\"I don't know what you mean,\" she lied. \n\n\"This ballade... It has no exact form that one can pinpoint.\" His fingers raised goosebumps as they played the notes on her skin. \"It plays with the idea of form, switching themes from intimacy to triumph... It doesn't simply fit in with the classical norms.\" \n\nThe birds were on fire now, spreading the heat of his kisses through the rest of her. Leo pinned her to the bed when she tried to roll away, when she needed some distance between them so her mind could work again. \n\nHe braced himself over her, his lips a breath from hers. \n\n\"It's been described as melodic, soft... sensitive, mesmerising...\" His lips moved along her jaw and back again. \"Yet it's also brilliantly majestic... It's a romantic rebel.\" \n\nAna's breathing accelerated. She knew what he was getting at but didn't say a word. \n\nHis eyes met hers. \"It's you.\" \n\nHe saw too much. \n\nShe rose up to kneel before him, pushing him down into the position of defencelessness in her stead. Except he continued to look strong and unafraid even on his back. He continued reading her, seeing more than she would ever admit to or willingly show. \n\nEven as she'd stripped him and wrapped both hands around his erection, he held his power. He continued to pour golden lava over her breasts and the width of her hips. He bathed her in it with his eyes, watching her touch him. ",
        "She ran her tongue up the length of him to make him shudder, to prove to herself that he was human. Hearing his breath kink and stutter was not the victory she expected it to be, however. When she looked up at him, it was directly into a blaze. Melting on her tongue, being vulnerable, didn't daunt him at all. \n\nHe gave her what she sought and made it clear what he needed. \n\nBy the time she took his cock into her mouth, her power-play was forgotten. She did it because she wanted to know his taste, wanted to feel him in all the most intimate ways possible. She did it because she loved hearing his responses to her. \n\nThunder rumbled in his chest as he thrust up at her. \"Fuck, baby...\" \n\nHer own hips rotated reflexively. Her twists fell forward, obscuring her face. Leo immediately circled a wrist lightly in them until he was loosely wrapped -- then gripped firmly after a few minutes to halt the bobbing of her head. \n\n\"I'm going to come if you don't stop that. I've wanted you for too long.\" \n\nAna spread her thighs and pressed her pussy to the plush duvet as he held her away from his erection, a wanton smile tugging at her lips. He'd barely touched her and she was already wet. \n\nShe'd always thought his honesty was his weak point; that anyone who gave another as much ammunition as he'd repeatedly given her was simply setting themselves up to be hurt. But now she knew better. His directness had been his not-so-secret weapon all along. \n\nLeo Boreas was man enough to know what he wanted and make that clear at all times. He watched her without pretence; he touched her like no other existed; and he moaned the deeper she took his cock in her mouth. Then he stopped her because she had the power to make him explode and he wanted her to know that. \n\nHe freely acknowledged her effect on him. \n\nWhat she hadn't given any thought to was his power in all this. Once all is exposed and admitted to, what more could be used against him? He'd bared all his needs and made it clear he would have her fulfil them exactly the way he wanted. \n\nBut what about her? With so much hidden and denied, her flimsy fa\u00e7ade would reveal far too much the moment it crumbled. She had never allowed the tender parts of her to be exposed before. \n\nAnd expose her he did. \n\nThe way he gripped her thighs was possessive, his hands splayed out and slowly stroking up to her behind. She was no nubile nymph. This could not be denied considering the shape his hands mapped out along her curves. She wasn't made for skinny jeans or teeny bikinis. \n\nBut. \n\nHis hands told her something else as well. \n\nShe was a woman. Women look, sound and feel different, all unique -- and she was being touched by a man who couldn't get enough of her form. It took tight control for him to hold himself in check as he squeezed her lush derriere. And when she let her thighs flow apart and arched up at him, he groaned her name. \n\nHe opened her further. Tasted her. Pushed one leg all the way up and the other out and explored her until she sang in breathless tones. He made her own body surprise her -- with a flexible freeness, with sparks that shot all the way to her toes, and with an aggressive hunger that sank her fingers into his hair and rolled her hips up at him. \n\nHis foreplay was the reverse of what she was used to. \n\nHe started where most men never went, using his tongue to make her juices trickle then flow. Avoiding her clit until she thought she'd scream, but then suddenly sucking it into the heat of his mouth -- deliberately making her scream as her toes curled and her whole body locked into a lightning bolt. \n\nThen he secured her with his hands at her hips, lightening his attentions, but never stopping his explorations of her. He licked a line up her sensitive pussy. He kissed her mound. He sank his teeth into the curve of her tummy, making her body jerk. \n\nHis hands soared up like two sets of music-note birds, travelling over the hills and slopes of her and disappearing behind her back. He fitted his hips to hers and sucked her nipples. Ana held him to her. She'd never felt that way before and needed an anchor. \n\nAnd, finally, he kissed her. He claimed her lips. \n\nHe buried his hands in her endless hair and plundered her mouth. Ana's palms stroked along his back, her fingertips taking in the bulge and play of muscles denoting the force with which he held her. She couldn't be sure if he realised how aggressive he was being, how urgent his kisses were. \n\nWhen she used her nails on him, his grip on her hair tightened, making her scalp tingle and shivers race down her spine. She pressed her aching nipples to his chest. \n\nHe pulled back and looked into her eyes again. This time she didn't look away. She kept her eyes on him as she traced his cock up and down the length of her heat. She watched him through her lowered lashes as she pressed him to her entrance, grunting when his head dipped in and made her stretch around him. \n\nShe refused to let her eyes close even when he pushed her hands above her head and began small thrusts to make her take more of him inside. His fingers interlocked with her and they held onto each other, each witnessing the unravelling of the other. \n\nShe tilted her hips and he sank in further. Her moans drowned out his whispers. His jaw was tightly clenched by the time he bottomed out, filling her and making her plant kisses along its tense line. \n\n\"You better be able to take this, baby,\" one hand held both of hers and the other now gripped her arse, \"because I can't be gentle anymore.\" \n\nHe pushed in then, a sharp thrust that stretched her further. He pinned her beneath his frame and worked all his muscles in possessing her completely. His eyes narrowed on hers, his expression intense as he built a rhythm of pulling out to the edge of her then making her take all of him in powerful thrusts. \n\n\"Ah, gods...\" She was filled, consumed, undone. \n\nHe stopped. \"Say my name.\" \n\nHer blinks were languorous. \"Leo, I don't see --\" \n\n\"Say it again.\" \n\n\"Leo...\" Her hands were on his arse so she felt the full force of his next thrust. \n\n\"Again.\" \n\n\"Ah! Fuck -- Leo... Leo...\" \n\nThe shivers running through her; the sweat beading around her bellybutton and the beads trickling into her hair; the swelling waves of desire in her; the thrusts, the ache, the grunts... \n\nThe craving. \n\nIt all had a source. It all had a name. \n\n\"Leo... Leo...\" \n\nThey were moving as one, his fingers biting into her. She was losing herself and it scared her a little. How much further could she let him take her before being unable to find her way back? \n\nHis pace picked up, his face feral. \n\n\"Oh, shit, Leo... I --\" \n\n\"Come for me, Ana\u00efs.\" His lips were on hers. \"Come on my cock, sweetheart.\" \n\nIt was too late to turn back anyway. It had always been too late, since the moment he'd watched her out in the sunshine with the northern winds bounding towards her. Her resistance had been so crucial because Ana\u00efs had known all along that this man could get to her. That he could reach inside and undo her. \n\nJust as he was now. \n\nShe came. \n\nShe pulled him to her, screamed his name and came. Leo pumped into her, answering her cries with the emphatic growling of her name as he orgasmed with her. Her nails left marks. His tongue picked up the salt on the pulse at her throat. Whatever she had been before barely existed anymore. \n\nHer eyes closed. \n\n\"Stay with me, Ana\u00efs.\" \n\nHe wasn't just asking her to hold their connection through the aftermath of their lovemaking. He was asking for more and they both knew it. Despite what she'd said he'd walked in and turned her world upside down. And now he was asking her for the one thing she'd said she'd never give. \n\n\"Stay with me.\" \n\nShe couldn't open her eyes. \n\n\"Stay...\" \n\n*** *** ***"
    ],
    "authorname": "BaalatErotas",
    "tags": [
        "music",
        "tattoos",
        "summer",
        "johannesburg",
        "black woman",
        "bw/wm",
        "alpha male",
        "love at first sight",
        "seduction",
        "northern winds"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-note-pt-01"
}