{
    "title": "Agent in Distress Ch. 11",
    "pages": [
        "Dear readers,\n\nThank you again for your wonderful support and comments as you go along on this journey with me. A couple of your suggestions have made it into this chapter - I really do take your comments to heart. I'm sorry that real life keeps intruding and keeps me from writing, so please bear with me at the slow pace of updates. But I'm glad to know that reader feedback has helped me make this story far better than it would have been if I'd written it completely before posting. I hope you enjoy this chapter as much as I enjoyed writing it, as I try my hand at an unfamiliar theme (which I won't spoil for you). Please, please keep the comments coming, I love them all!\n\nTanuki\n\nChapter 11\n\nAfter the show was over, helpers came to take away the slave girls, and the magistrate's helpers got Lana to her feet, giving her a moment to stretch out her stiff legs. Lana shook her legs one at a time, which brought feeling back to them. But she could do nothing about the aching need that made standing slightly uncomfortable. Watching other captive women being pleasured, some to orgasm, had left her feeling overheated and aching. She knew she had to keep her wits about her, and not to give in, but their training methods seemed just so effective, she didn't know how to resist them. The magistrate noticed she'd stopped stretching, so he guided her out of the tent. \n\n\"You must be tired and hungry,\" he said. \"And you've been such a good girl, I'll arrange a short break for you.\" Lana looked at him suspiciously, and the man smiled. \"I know what you're thinking, but as I've said before, we do not treat our pleasure slaves like beasts of burden. Your primary purpose is to be pleasing to your Masters, and you can't very well be pleasing if you are exhausted and starving, can you?\"\n\nLana nodded. There was a certain twisted logic to his words. She didn't want to argue, for a break sounded very appealing. She let him guide her out of the courtyard and through a new door, on the opposite side they'd entered from. The first open room they reached was their destination it seemed, for the magistrate guided her inside. It was another training room, with racks, a wooden horse, and chests along the walls, no doubt containing more torture implements. She still wasn't used to the sight of such things, and it gave her a slight chill. In fact, she hoped she never got used to the sight of the slaver's toys. Lana noticed in this room that everything seemed to have a soft edge to it. The rack was padded, as was the horse, as if designed to be comfortable rather than painful. There was a bed that looked quite soft and lush in fact. She hoped that her reward wouldn't involve the bed.\n\nThere were a couple different helpers standing at attention, and when the magistrate guided her to a low wooden platform, they came over and began to untie her bindings. \"Let her breathe a little, just . . . tie off her collar, she'll behave.\" One of the helpers went to a wall cabinet and returned with a metal chain, which he connected to her collar, then stood nearby, holding the leather handle on the other end. Lana hated the feel of the collar, like she was some animal, but it was worse when someone had a leash attached to it. The first helper finished undoing her bindings, and Lana, grateful to have her hands free again, rubbed her arms where they'd been bound, frowning at the red marks on her forearms. \"Fetch her some water,\" said the magistrate. \"And some fresh bread.\"\n\nTen minutes later, Lana was feeling better after eating the surprisingly tasty bread and drinking her fill of water. Her debilitating arousal had subsided somewhat, and she thought maybe she could make it through the day. The magistrate returned, framed by his two helpers, and immediately smiled. \"Ah, my dear, you look refreshed! We can't have you losing weight and your lush curves along with it, now can we? Good! Are you ready to resume your training?\"\n\nLana grimaced, but said nothing. \"Oh, come now,\" said the magistrate, placing his arm around her shoulders. \"You're learned so much, and come so far. You should be proud of the way you've bravely overcome your childish inhibitions!\"\n\nLana shook her head. She did not want him to praise her! But the magistrate did not seem to notice her conflicted emotions. \"You are shy, I understand. Let's go, Miss Torina,\" he said, unhooking her collar and guiding her from the room. \"You show great promise, so I think you are ready for more training. Come, now that you're refreshed let's get you going.\" Lana walked with trepidation back in the direction of the outdoor courtyard, and she dreaded going back there. But instead, the magistrate led her to an interior door, and stopped her just outside of it, turning to speak to her.\n\n\"Now, my dear, let's go over a few things,\" he started. \"You saw in the courtyard the wide variety of methods we have to discipline our slaves; I believe I don't have to tell you that your time here will go easier if you are respectful and obedient?\"\n\nLana nodded quickly. The courtyard had indeed made quite an impression on her. Swallowing her pride seemed like a relatively palatable choice given her options.\n\n\"And I trust you don't want me to send you to those two young men, Henri and Varga, for some disciplinary training?\"\n\nLana paled. \"Please, Master,\" she pleaded, remembering how to address him properly. \"Anything but that!\"\n\n\"Good,\" said the magistrate. \"Now I'm going to leave you in capable hands for a while, but I want you to remember your training. Speak only if spoken to by your masters. Always address them as 'master' and follow their commands without hesitation. And remember your posture at all times. Can you do that?\"\n\nLana nodded with a gulp. Things that had seemed to repugnant a few days ago, now seemed relatively minor in comparison to what they could and would do to her if she misbehaved.\n\n\"Excellent!\" said the magistrate. He then turned to open the door, guiding her inside. It was another training room, not unlike the one she'd seen before. It was divided into four sections it seemed, and the magistrate guided her to one corner where a row of six girls knelt before several men in the slaver uniforms. One of them was lecturing the kneeling slaves, in the now familiar but still shocking mantra she'd heard from various sources here on Dellune. The magistrate quietly guided her to the end of the line, and gently pushed her down to a kneeling position.\n\n\"You'll spend the rest of the day here, my dear,\" he whispered in her ear. \"When your day is done, I'll come fetch you and take you to your sleeping quarters.\" Then he patted her on the shoulder and she watched him stand and exit out the door they'd come in. To her relief, the instructors didn't seem to single her out, and she seamlessly joined the class, her experiences of the day motivating her to keep quiet and acquiesce to their commands.\n\nOver the next few hours, Lana and the other new slaves learned to refine their postures, how to bow and kneel, and even how to serve tables, which she noted was not much different than what she'd done at Lord Khan's castle. Fortunately there were no male customers to practice on, but they were informed that they must quietly endure whatever such customers deigned to do, while executing their duties. \"Don't worry, later on you'll get to practice on some real men of Wight, and they'll be sure to test your ability to perform your tasks while distracted,\" said the instructor with a suggestive look at his kneeling subjects.\n\nLater on, they were given instructions on the daily life of a slave, how they must keep themselves clean and fresh, bathing between uses if possible, since the men did not want the scent of another man on their slaves' bodies. The instructors brought out several sets of slave garments, and instructed the girls on how to wear them. Lana found this training particularly challenging, for the slave garb invariably was designed to titillate and tease, rather than to cover their bodies. Lana found some of the outfits less preferable to nakedness. Having to dress and undress in the lewd outfits would have been unbearable, except that the trainers themselves seemed little interested in ogling their trainees, and seemed preoccupied with shouting and disciplining the slow students. Nor did the trainers seem particularly interested in touching the girls, in sharp contrast to her training up to that point. Lana didn't question the reason for that, she was simply grateful for the lack of attention.\n\nIn fact, the hardest part of this particular training was for Lana to keep her sense of self. The constant barrage of forced servitude, and the way they criticized expressions of independence, and praised abject subservience, began to weigh on her psyche. Lana very much wanted to obey, to avoid the implied punishments. More than once, an instructor had described what they would do to her if she failed to perform to their liking, and that was strong motivation. At the same time, Lana gradually found herself struggling to maintain her inner rebellion, while outwardly being a good obedient slave. It was a balancing act that required constant concentration and effort. Over time, she found herself getting a little too comfortable, obeying too quickly and eagerly for her own liking. The constant fight to balance her inner and outer self became exhausting and confusing. It was for that reason, when she finally saw the magistrate enter the room, she felt an enormous relief, and she smiled at him, despite herself. He returned her smile before going to speak quietly with the head instructor. Other handlers entered the room to take the slave girls away one by one, and then the magistrate, himself grinning proudly, came to her side excitedly. Without thinking, she'd waited patiently in her resting posture, kneeling with her thighs spread wide. It was a position she'd have loathed to take just days before, but now, she was simply too tired to break the rules.\n\n\"Little slave,\" he said, getting her to her feet. \"They tell me you were an outstanding pupil. They think you will be a graceful and obedient slave!\"\n\nLana gave a half smile as she felt a jolt of pride, before she quickly realized the absurdity of that emotion and tried to suppress the unwanted feelings. She cursed herself for letting their twisted training get through to her. The magistrate must have sensed her conflict.\n\n\"Pardon, my dear, I did not mean to embarrass you,\" he said softly. \"Do not fret, it is simply natural for a female to take pride in her own grace and beauty, especially a Calambrian. You should not fight what you are, my dear.\"\n\n\"I'm not a slave!\" protested Lana softly. She'd almost said she wasn't Calambrian, and she reminded herself to stay in character at all times.\n\nThe magistrate was looking at her with a grin. \"Of course you are, dear.\" Then he leaned in to whisper conspiratorially. \"Did you not find the obedience training to be arousing? Your nakedness allows me to see your state easily, you know.\"\n\nLana gasped, suddenly using her arms to cover herself. He was not wrong, her body still burned, more than ever. But it was the fruit, and the salve, or lack of it, not some inner need for obedience.\n\n\"Would you like me to ease your suffering, little slave?\" he whispered, looking at her intently.\n\n<br >\"No!\" Lana whispered quickly. But it was too late, her body flamed high at the thought of the enigmatic magistrate touching her.\n\nThe man chuckled, raising a hand to gently stroke the outside of her breast, in a way that made her shiver. \"Poor girl, the mind wants one thing, the body another. My job is to make bring those two divergent roads together.\" His single finger continued to tease the sensitive swell of her breast below her armpit, and Lana quickly slipped away, unable to bear the sensations. She knew he'd probably summon the helpers to put her in bondage again, but he simply smiled and shook his head. \"My dear girl, I am simply offering to make your night's sleep more comfortable.\" When Lana looked at him in confusion, he sighed. \"In your agitated state, you might find restful sleep to be . . . challenging.\"\n\nLana looked at him carefully. \"What are you proposing?\" she offered, tentatively. It didn't hurt to ask, she thought, to make sure she understood his meaning. Then she jumped when he swiftly moved in close, encircling an arm around her waist. His closeness made her acutely aware of her dormant arousal, threatening to spill over and flood her mind at the slightest provocation. She held still, trembling slightly as the fingers of his free hand stroked her firm belly, moving upwards toward her navel.\n\n\"I could simply use a finger, or two, to give you what you so clearly need, my dear,\" he explained. Then his hand drifted downward, gently stroking the string that passed between her legs. Lana's mouth fell open and she drew in a sharp breath at the riveting sensations. It felt so good, it would be so easy to give in, to let him pleasure her, perhaps even to orgasm. That enticing thought delayed her response a few seconds, during which his gently stroking finger made her spasm in his arms. Though his finger wasn't contacting her flesh directly, it sent tiny sensual vibrations through the string, which she found captivating.\n\n\"No, don't!\" she murmured softly, not really moving to escape, though her hips were trembling to his touch. When he continued stroking the now slickened string, she moved her hand to his, grasping it and pulling it away.\n\n\"Please your hands behind your back,\" said the magistrate, softly but with a commanding tone. When Lana hesitated, he added, \"it will take but a moment to attach bindings for you, it's your choice. Many slave girls take comfort in being bound; as freedom is too intimidating.\"\n\nLana paused, looking at him, but seeing no sign he was teasing her. \"That's . . . absurd!\" she said, softly. \"You . . . actually believe that nonsense, we want to be bound?\" There were still others in the large training area, and by keeping her voice low, it gave her some sense of privacy. \"Master?\" she added, remembering her training. The magistrate was lenient with her, for which she was grateful, but she had best not press her luck.\n\n\"I do love hearing you call me Master,\" the magistrate said with a grin. Then he simply shrugged. \"It is no great mystery, my dear. With freedom comes a sometimes bewildering array of choices, with consequences, and risk of failure or embarrassment. A bound slave is relieved of all those uncomfortable outcomes, and is free to focus entirely on her own pleasure. And that of her master of course.\" He looked at Lana and saw her sputtering indignantly. With a sigh, he pulled out a set of leather manacles from his rear pocket. \"I see I must show you, as always. Here, give me your hand,\" he commanded, taking her right wrist. Lana reluctantly surrendered her wrist. She realized it was possible, perhaps, that some girls felt that way. But she certainly wasn't one of them, as the magistrate would realize.\n\nShe watched as he placed her wrist in the leather loop, then he then took her other wrist and fastened it to the first. Then he lifted both her hands over her head, and then down to fasten to the back of her slave collar. Her hands were now facing each other behind her neck, with her elbows sticking out before her. It was a new way of restraining her hands, but she didn't find any revelation in the position. \"Assume your slave position,\" he commanded suddenly. After training on it all day, Lana immediately spread her thighs where she knelt, and straightened her back without so much as a thought. The only difference was now her hands were bound behind her neck rather than resting on her thighs, or bound behind her back. \"Very good, you've really learned well today!\" purred the magistrate, looking down at her out-thrust breasts and wide tanned thighs and smiling. Lana blushed in embarrassment at his compliment, and she scolded herself for jumping at his every command like an eager slave. She didn't want to be a good slave; she didn't want the training, but the constant threat of much more terrible humiliations kept her pride in check. At any moment, she knew she could 'unlearn' all the shameful postures and saying \"master\" to the men, but being given to a dozen men to use, that would scar her for life.\n\n\"Now then, where were we . . .\" said the magistrate said softly, his hand moving between her legs. Then Lana felt his finger stroking the string again, and she jumped at the jolting sensation. As his finger made long strokes up and down the string, Lana shuddered, her arms pulling against the collar as she instinctively tried to grab his hand. Unable to use her hands, her next thought was to close her thighs.\n\n\"Now, now,\" warned the magistrate. \"Do not lose your posture or I'll have to bind your legs as well.\"\n\n\"I'm sorry . . . Master!\" whispered Lana, keeping her legs widespread, which unfortunately gave him such easy access to her throbbing center. His long middle finger slowly traced the string from her front above her sensitive clit all the way back to press it gently into her anus. She jerked at the sensation, her arms pulling helplessly on her collar, but she was powerless to stop him. \"Master . . . please don't,\" she pleaded, as his finger continued tracing between her quivering thighs.\n\n\"Little slave, you seem distressed - the pleasure is greater now that you are bound, is it not?\"\n\nLana's eyes had closed for some reason, but they flew open wide at his question. \"No!\" she protested. His free hand came to her breast to trace a small circle about her nipple, and Lana gasped softly. \"Untie my hands, please!\"\n\n\"Why?\" murmured the magistrate, continuing his dual teasing of her heaving breasts and wet crevice. \"If it makes no difference, why do you wish your hands to be freed?\"\n\nLana found it hard to concentrate on his confusing words when she was touched like that. \"I . . . if my hands were free . . . I'd stop you!\" she responded.\n\n\"Would you?\" mused the man, grinning at her suggestively. \"I think deep down you want this, you need this. All that pent up frustration.\" He gestured around the room. \"You see, we're alone now, there is no shame, I could give you just what you need, you have only to swallow that considerable pride and ask.\"\n\nLana looked about the room. He was correct, they were alone now in the large training area. She had a fleeting thought of escape. Even with her hands bound to her collar, she could likely overpower the magistrate, who didn't seem like a warrior, though he was fit and muscular enough. And yet, what then, if she escaped? How would she find Warrick, and how would they get the mission back on track? No, she had to stay with the plan. They would send her to Nikolai, she was certain of it, but she hoped it was soon. The less time she spent here the better.\n\n\"I see you are conflicted,\" observed the magistrate, misinterpreting her thoughtful pause. \"Of course, you are still holding onto your pedigreed sense of modesty. You hesitate to let a lowly administrator like me touch you, a beautiful, high-born creature.\"\n\n\"Oh no--Master!\" Lana interjected. \"I do not think of you that way! Or myself. I am not high-born . . . I was raised by simple people, there is nothing privileged about me . . .\" she paused, surprised by her outburst, and her revealing too much. It was probably better for the mission to let them think she was some kind of princess.\n\nThe magistrate chuckled. \"Do not take me for a fool, girl. I know noble stock when I see it. But no matter, I will not embarrass you with such accusations of privilege.\" Then he winked at her. \"So, you will allow me to bring you to the heights of ecstasy? To ease your discomfort so you may sleep well tonight?\"\n\nA wave of heat at the thought of him bringing her to orgasm made Lana woozy. It was an offer nearly impossible to resist. And yet, she thought of Warrick. What would he think of her letting this magistrate pleasure her? She shook her head desperately. \"No, Master, I cannot!\" she answered finally.",
        "\"Would you like to know how I would do it?\" said the magistrate, as if he hadn't heard her. Lana quickly shook her head. She did not want to know! The magistrate nodded, again ignoring her. \"Well, in your state of extreme need, I could do just about anything and push you over the edge. I could do this . . .\" he leaned down his head to her chest. He gently kissed the sensitive sides of her breast, before moving to her engorged nipple to suckle and tease with his lips and tongue. Lana's mouth fell open like a fish starved for air, and she instinctively tried to pull away, but his hand came to her upper back and kept her in place to minister to her breasts. In a short period of time, Lana felt her insides begin to clench as his mouth brought her closer and closer to orgasm. Then he lifted his head.\n\n\"You might be embarrassed to climax from just your breasts,\" he said, shaking his head. \"I've a better idea. Sometimes the simplest way is the best.\" With that, he reached down and gently inserted his thick middle finger passed the string and deep inside her wet folds.\n\n\"Oh god!\" moaned Lana, her pent up desires nearly making her cum on the spot. The magistrate curled his finger inside her, touching a sensitive spot that made her arch her back and rise up off her heels. \"Oh! Not . . . there!\" she choked as he stroked that trigger point mercilessly for a few seconds, chuckling as he felt her wet pussy clamping down on his finger. \n\n\"Oh dear,\" he said, withdrawing his finger. \"That wouldn't take long at all, would it?\"\n\nLana whimpered at the desperate feelings of regret as his finger left her, so close to cumming. \"Please, Master, don't tease me so,\" she protested softly. She instantly regretted her words, which he'd surely take as tacit acquiescence. But truly she couldn't resist anymore, his touches felt too good, and when he stopped, the disappointment was nearly unbearable.\n\n\"Do you know the special string you wear has another trick to it?\" said the magistrate, seemingly ignoring her words, and their implied meaning. He waited for an answer, so Lana shook her head. \"Well, let me show you!\" he said, reaching down. \"You see, the string is cleverly sewn by our most skillful seamstresses.\" As he was speaking, he was pulling it away from her, and looking for something. \"There, you see, in this area, the string splits into two. It's quite clever, we just place it . . . here,\" he continued, but Lana was no longer hearing his words, for he had skillfully placed the opening in the string around the hood of her tender clit. Now the string split into two thinner strings that went around her clit before joining again at the center of her pouting crevice. \"It helps if I tease your little nub into hardness,\" said the magistrate. He then used to tip of his finger to rub the fleshy part contained by the string. Lana jerked, instinctively closing her thighs before a sharp word from the magistrate made her spread them again. Lana gasped and squirmed as he teased her clit for a few seconds, and then he stopped, seemingly satisfied by the results.\n\n\"You see?\" said the magistrate, then his fingers grasped the string just below her belly button. \"Now if I tug like this . . .\"\n\n\"Oh! S-stop!\" cried Lana, stiffening as he pulled gently on the string, which caused a stab of intense pleasure in her clit.\n\n\"It works if I pull from the back as well,\" said the magistrate, reaching behind her. Lana moaned, leaning her head against his shoulder to try to bear the shocking pleasure. Now with one hand in front, and one behind, the magistrate began gently tugging the string back and forth in short little strokes. \n\n\"Oh! Oh! Oh!\" cried Lana in short desperate gasps as her body flamed high heading for an intense climax.\n\n\"Yes, most girls find that one stimulating,\" said the magistrate, his understatement just adding her to her humiliation. Lana was spasming and moaning, ready to revel in the impending orgasm. Then his hands suddenly left her just as the needed wave was formulating. \"But I wouldn't want to make the choice for you,\" he added.\n\n\"Oh no, please, Master!\" cried Lana, gasping for breath. \"D-don't stop! I . . . I don't mind if you . . . continue . . .\"\n\n\"Really?\" said the magistrate, looking at her curiously. \"You will not be shamed?\"\n\nThe burning need threatened to drive her mad, and the words spilled from her lips in a quiet but desperate whisper. \"I will not be shamed, Master! Please . . . I need it . . . don't leave me like this . . .!\"\n\n\"Which method would you prefer?\" said the magistrate, seemingly in no hurry as he wished to make sure he understood her preference. \"Your breasts?\" he said, reaching up to cup her breasts, using his thumbs to trace circles around her nipples.\n\n\"Y-yes! That! Anything!\" gasped Lana, moaning helplessly and pushing her chest into his hands as encouragement.\n\n\"You like when I touch your breasts?\" said the magistrate, continuing to squeeze with his hands and massage with his thumbs.\n\n\"Yes!\" moaned Lana, nodding her head, her cheeks red with shame at having to admit such a thing.\n\n\"Yes, what?\" he corrected.\n\n\"Yes, Master!\" cried Lana, her voice getting loud before she could stop herself.\n\n\"Yes, Master, what?\" said the magistrate, patiently.\n\nLana looked at him in confusion for a second. \"Yes, I . . . like when you touch my breasts, Master?\" she offered. When the magistrate grinned and nodded, Lana felt a gush of heat at his approval, and she shook her head. Why was her body responding in such confounding ways?\n\n\"Or perhaps you'd like me to finger you to a good climax?\" said the magistrate. His hands left her breasts and he inserted his middle finger inside her again, wiggling it about before slowly pushing it in and out, a slow, deep stroking that instantly made Lana shudder with pleasure.\n\n\"Y-yes, that w-would be g-good too!\" she gasped, tilting her head back as she felt the wave building from his simple stroking.\n\n\"You enjoy it when I finger you like this?\" said the magistrate, in his methodical, matter-of-fact tone that was starting to drive her mad.\n\n\"Yes, yes!\" cried Lana desperately. \"I mean . . . Yes, Master, I enjoy it when you finger me!\"\n\n\"Would you like me to make you cum on my finger?\" said the magistrate, raising an eyebrow.\n\n\"Yes, oh yes, please, Master!\" cried Lana, her thighs clenching as she felt an orgasm on the way. Suddenly his finger left her with a wet sound that made her whimper in disappointment.\n\n\"But before you decide, we mustn't forget the string, so painstakingly sewn by the old ladies who work for us. Former slaves they are, you know?\" said the magistrate. Before Lana could respond, he was reaching his hands in front and behind her, and then he grasped the string and began gently tugging back and forth. It was just what she needed, and Lana nearly came on the spot, in fact her body seemed caught on the edge of an orgasm.\n\n\"Oh god, I-I think I'm cumming!\" cried Lana as the delicious sensations made her shudder and quake.\n\n\"That's interesting, just like that?\" said the magistrate, innocently.\n\n\"Yes!\" cried Lana, moving her hips in tune with his gentle tugging. Her breaths came short and desperate, and yet . . . the orgasm eluded her. \"No! Please, Master . . . pull harder!\" she beseeched him desperately.\n\n\"Like so?\" said the magistrate, tugging a little faster and harder. Lana cried out as his movements got her closer still. She could almost taste it, and she moaned in anticipation, but still, she was denied.\n\n\"Mmm, I'm afraid that's the effect of the salve you'd used so much,\" said the magistrate, backing off a bit but still slowly jerking the string back and forth.\n\n\"Oh no!\" groaned Lana. She'd forgotten, the salve made it difficult for her to reach orgasm. But not impossible, they'd said. \"Please, Master, please try harder!\"\n\n\"Do you like this string, you like what I'm doing to you?\" said the magistrate.\n\n\"Oh god,\" groaned Lana. More questions, he was insufferable. \"Yes, Master, I like the string!\"\n\n\"Would you like to wear it all the time, so that your masters may use it on you whenever they please?\" he continued, his voice a picture of calm, in contrast to her own desperation.\n\n\"Yes! Anything!\" Lana cried, not really paying attention to his words, for the string was driving her mad, and she was so close to cumming.\n\n\"Say it, slave,\" said the magistrate. \n\nLana looked at him in confusion. What had he said? \"Uh . . . I'd like to wear the string all the time . . . so my masters may use it as they please, Master?\" said Lana.\n\nThe magistrate nodded, clearly pleased, which made Lana shiver with pleasure. \"Very well, I'll make a note that you'd like to wear the string every day during your stay with us.\" Lana looked at him, and she noticed he seemed to be gesturing to someone behind her. Frowning, she turned to look, when suddenly the magistrate jerked upward on both ends of the string, making her cry out and forget all about looking behind her.\n\n\"Now then, let's see if we can make you cum for me,\" said the magistrate. Then he paused. \"Oh, silly me, girl. Probably the string is not your preferred method, that could be the problem? What is your favorite?\"\n\nLana gaped at him, blushing deeply at being forced to answer such a question. The magistrate waited patiently, but her need made patience impossible. \"Your finger, please, Master,\" whispered Lana, lowering her head in shame. \"Please use your finger.\"\n\n\"How sweet,\" said the magistrate. \"That is also my favorite! Well, at least of the methods that don't involve my unusually large cock.\" He inserted his finger inside her then, drawing a deep moan from the needy girl. \"Your tight, little Calambrian pussy is not ready for my thick and long cock, is it, my dear?\"\n\nLana whimpered at the gush of fluid she felt enveloping his finger. The magistrate smiled a wicked grin. \"Oh, little slave, I see the thought of my big cock makes you wet, doesn't it? You will not be disappointed when it fills your tight little pussy, I assure you!\" Lana shook her head, groaning in shame, but she couldn't deny her body's responses. She wished he would stop talking about his manhood, for when he did, she couldn't help imagining it. The magistrate smiled at her. \"Shall I make you beg for my cock, little slave?\"\n\n\"Oh god, please no, Master!\" wailed Lana, shaking her head in misery. In her state, she couldn't be sure she'd be able to stop herself, should he decide to make her beg.\n\n\"You don't think you could resist, is that it?\" purred the magistrate in her ear as he pulled his finger out to stroke the two strings that still encircled her tender clit. Lana didn't answer, but the pitiful sounds of distress coming from her throat told him the answer. His finger on the string wasn't nearly as satisfying as having it inside her. \n\n\"Master, please . . . put your finger back inside me,\" she whispered, too ashamed to raise her voice.\n\n\"I can do better than that, my eager little slave,\" purred the magistrate in her ear. \"How about two fingers?\" Lana moaned then as two fingers filled her. It was even more satisfying, and after a few strokes, she felt the orgasm coming.\n\n\"Yes, yes!\" she cried, arching her back as her soaked pussy clamped down on his fingers. The magistrate changed his motion into more of an arc, each outward stroke now rubbing against her clitoral hood. The sensation made her jerk against him, the sensation almost too intense. \"Oh god, oh god!\" she cried.\n\n\"I am so pleased that you no longer feel ashamed of your own desires,\" said the magistrate, changing his stroke yet again just as she felt the wave about to crest. \"That is a critical step in reaching your goal. I think you'll be an exemplary pleasure slave, my dear!\" he announced, his voice dripping with approval.\n\nHis words had the opposite effect on Lana however, filling her with shame. \"No, please . . . I don't want to be . . . exemplary!\" she choked out as his middle finger stroked her inner spot.\n\n\"You cannot help what you are,\" said the magistrate, shrugging as if she had no choice. \"Why not embrace it? It will make you even more pleasing to your Masters, if such a thing were possible.\"\n\nLana could barely comprehend his words, so great was her need. If she didn't cum soon, she thought she might lose her mind.\n\n\"If you wish to cum,\" said the magistrate softly in her ear, \"just tell me you'll be a good little pleasure slave.\"\n\nLana moaned in misery, in part due to shame, and in part from his finger, skillfully tormenting her, keeping her so close to the release she craved. She had no will to fight this sort of torture.\n\n\"I\u2014I'll be a good little . . . pleasure slave, Master!\" she whispered, her face red with shame. After the words were uttered, she trembled in rapt anticipation of what he would do to make her cum.\n\n\"I know you will, my dear,\" said the magistrate, leaning in to kiss her. \"And you shall cum, all in good time,\" he added, grinning at her. \"You've come so far today, let's give you some time to absorb and digest your progress.\" His finger left her suddenly, and she gasped, before looking at him in confusion and disappointment.\n\n\"But Master, I haven't . . . you said you would . . . \" Lana began. Then she realized he'd tricked her, yet again. She'd said the terrible words, and had not been rewarded as promised. \"You're so cruel . . .\" she murmured.\n\nThe magistrate cupped his hand behind her neck and reached in to kiss her on the lips, tilting her head up for easier access. Lana moaned into his mouth, the simple kiss a torture in her exceedingly aroused state. He broke off the kiss and smiled warmly at her. \"My dear, you are simply too adorable when you're suffering such crippling need, I admit it makes me want to keep you in this state forever.\"\n\nLana groaned in misery, her shoulders slumping in defeat. She was a victim of her own weakness.\n\nThen suddenly she heard footsteps, and female voices, approaching from behind her. She turned to see four girls, slaves by the look of them. They were smiling eagerly and coming straight toward them. Lana instantly felt a surge of embarrassment, and she began to close her thighs, to hide her obvious need. The magistrate corrected her with his hands, keeping her thighs spread wide in a most humiliating pose.\n\n\"Ah, Gwen . . .girls, how good of you to come. Miss Torina, my dear,\" said the magistrate. \"There's some people I'd like you to meet.\" Lana's attention was drawn by the young woman in front.\n\n\"Is this my new girl?\" said the woman. She was stunning, in a way that only Dellune women seemed to pull off. Her shoulder length brown hair had auburn highlights in it, and her round youthful face framed the prettiest pair of brown eyes Lana had seen. Her slender but athletic frame was draped in a thin black silk dress that pushed up her breasts into a perky little cleavage. The girl had a grace to her stance and movements that made Lana immediately jealous.\n\n\"Yes, this is Lana. She's from Calambria, and she's just joined us. She did quite well on her first day,\" said the magistrate.\n\n\"Oh, a Calambrian? She's adorable!\" exclaimed the girl, her broad smile so contagious that Lana couldn't help wanting to smile back at her, but her agonizing state made that difficult.\n\nGwen seemed to notice right away, and she glared at the magistrate. \"You've been tormenting the poor girl, haven't you? Has she cum today?\"\n\n\"No, she has not,\" said the magistrate. \"But she has earned that right with her excellent progress, when I decide to reward her.\"\n\n\"That's wonderful!\" exclaimed Gwen. \"Will she be sleeping with us tonight, then?\"\n\nThe magistrate nodded. \"She did so well today that I'm giving her an early break. We'll pick up in the morning.\" Then he turned to Lana. \"My dear, the girls will show you the ropes, so to speak, and you'll spend the night with them in the pleasure slaves quarters, which is quite plush, you are lucky. It should also be a nice break from all the men in your training regimen.\"\n\n\"But I . . .\" began Lana, then she stopped. She couldn't possibly ask the magistrate to finish what he had been doing in front of the four slave girls.\n\n\"Yes?\" said the magistrate, expectantly. He had a slightly mischievous look, and Lana realized he knew what she was afraid to ask, and was perhaps daring her to do it.\n\n\"N-nothing, Master,\" she answered, dejectedly.\n\n\"Very well,\" said the magistrate. \"Oh, and Lana, as a new slave, you will treat these girls as your superiors. You must obey them as you obey your masters. Is that understood?\"\n\n\"Uh, yes, Master,\" said Lana, looking warily at the four slave girls.\n\nThe one named Gwen stepped forward suddenly and hugged her. She smelled like wild berries and fragrant soap, but Lana gasped as the girl's body pressed against her over-sensitized nipples. \"Don't worry, dear,\" said Gwen. \"We will take good care of you, we're not like the men!\" The four girls giggled, and the magistrate shot them a mock look of annoyance. Lana tried to smile, but all she could think of was her aching need to cum, and she couldn't believe the magistrate was going to leave her hanging after all the humiliating things she'd been forced to say.\n\nHe stood then, and helped Lana to her feet, though he made no move to undo the bindings that held her wrists to her collar. \"I'm afraid I cannot remove your bindings. As a new slave, you are supposed to be restrained at all times, until you earn the right to go without. Girls, make sure Miss Lana doesn't break the rules tonight, is that understood?\"\n\n\"Yes, Master,\" said the girls. Lana simply frowned, rubbing her wrists behind her neck where they were held by the leather manacles.\n\n\"Good, I'll leave you in Gwen's capable little hands, and I'll pick you up after sunrise tomorrow morning.\" With that, the magistrate left, and Lana watched him go, a strange feeling of longing in her chest. She told herself it was simply her need to cum, and tried not to think about it.\n\n\"Come, honey, let's go get you cleaned up, you look like a drowned rat!\" Gwen was smiling at her, looking her up and down, and Lana blushed in embarrassment. She must have looked a sight. The girls left the assembly area and guided her down a sequence of hallways to an open door, directing her inside. It was a large, colorfully decorated room, that was clearly a living area for females. It looked to her like the slave girls were allowed to decorate their living chamber, which seemed odd to her. She'd always pictured slaves sleeping on bare stone floors, and this didn't fit that image at all.\n\nThere were a number of simple beds, with barely any space between them, but someone with an eye for color had spruced it up with beautiful red and yellow flowers, colorful silks and all manner of sundries. There were two girls already in the room, playing some sort of card game over in the corner, and one of the 4 girls left Lana's side and rushed over to join them. Gwen and the other two guided Lana through the sleeping area to an opening that led to a surprisingly attractive bathing area, with a large, deep pool and several washing stations. It made Lana think of a harem.\n\n\"Are the men allowed in here?\" she blurted out, anxiety filling her suddenly.\n\n\"Not for anything interesting,\" said the redhead. \"Don't worry honey, you are safe in here. I'm Gwen,\" said the girl, her eyes shining. \"And this is Cade,\" she continued, pointing toward a pretty, short blond who had a bubbly and sexy demeanor to her.\n\n\"And I'm Dawn,\" said the third one, a tall, dark-haired girl with big brown eyes and a shy smile.\n\n<br >\"Nice to meet you,\" said Lana, pleasantly. She couldn't help noticing all of the other girls wore quite more substantial, though still skimpy clothing. She felt awkward in her string panties and topless state.\n\n\"Let's get you cleaned up, sweetie, come,\" said Gwen, taking her arm, which was still bent by the bindings that held her wrists to her collar. Lana let the girls guide her to one of the bathing stations, one that had two low stone pillars a few feet apart. Gwen produced a key to unlock her bindings, removing the leather manacles. Lana rubbed her sore wrists gratefully, but she looked at Gwen. She didn't want to break the rules.",
        "\"I know, don't break the rules,\" said the redhead. \"Place your wrists here.\" Lana noticed the short stone pillars came up to her hips, and each one had a cut-out to place her wrists, and when she did so, the redhead attached a metal ring around each of her wrists. Now she stood with her arms stretched out to right and left, and it made her feel acutely vulnerable in her nakedness. But Gwen had assured her the men wouldn't be coming in, and she believed the redhead, for some reason. She watched in fascination as the three girls prepared to wash her. One of them fetched a bucket of water from the pool, which appeared steamy, most likely a natural spring. Another girl brought some bathing towels, while Gwen fetched at short stool to sit on. The dark-haired girl named Dawn was untying the string at her lower back, and Lana gasped as the girl inadvertently tugged the string upward.\n\n\"Oh, I'm sorry, you poor dear,\" said Dawn, placing a warm hand on Lana's neck. \"I remember my first day. Ooh,\" she said, making a mock shiver and grinning shyly at Lana. She finished untying the knot and removed the string skirt from Lana's hips, carrying it over to a wicker basket and tossing it in. Lana was glad to be rid of the damned thing, until she remembered with a pang of shame how she'd told the magistrate she wanted to wear that skirt every day. It was so unfair to make her say things when she was so overcome with arousal.\n\nGwen appeared before Lana with a bucket of water. \"Kneel down for a second, hon?\" Lana knelt down and Gwen carefully lifted the bucket and poured the warm water slowly over Lana, while the third girl, Cade, rubbed the water into her hair and around her body. When she was thoroughly wet, Gwen stopped pouring. \"Just keep kneeling while we wash your hair.\" While Cade proceeded to apply some sort of lotion or soap to her hair and rub it in, Gwen sat down on the stool and smiled at Lana.\n\n\"So how did it go on your first day, Lana?\" she said. \"What did they do?\" \n\nLana hesitated for a moment, but then began to describe the day's events. The girls used wet towels and soap to bathe here while they listened, and Lana realized they were quite careful around her over-sensitized body. Nevertheless, Lana couldn't help squirming and gasping at times as they washed every corner of her naked body. But the girls didn't seem to even notice her reactions, for which she was grateful. Lana kept talking, the girls asking pointed questions at times, and giggling at others. Sometimes they nodded knowingly. Finally, she got to the part about the magistrate asking her to pick how she wanted to cum.\n\n\"Oh, did you beg him to finger you?\" said Gwen excitedly. Lana hesitated, before nodding. Gwen clapped her hands. \"Oh good, honey, you've come so far! Dawn there held out for 3 days, stubborn little goose that she is!\"\n\nDawn blushed. \"It was just so shameful, you know, to beg some strange man to make you cum?\"\n\n\"Oh, but he's not some strange man, the magistrate, he's Luthor!\" giggled Cade.\n\n\"Yeah, he turns my legs to mush whenever he speaks to me,\" said Gwen nodding. \"Still, I didn't beg til the second day.\"\n\n\"Oh god,\" said Lana, blushing herself. \"Am I the only one who did it on the first day?\"\n\n\"You're a natural, honey,\" said Gwen, patting her on the cheek.\n\n\"What?\" blurted Lana, \"a natural what?\"\n\n\"Why, a natural pleasure slave, silly!\" said Gwen. \"Like Cade there. I think she was begging for cocks as soon as they put her in chains, hehe.\"\n\nCade frowned. \"I was not!\" With her hands on her hips her ample breasts pressed against her shift, looking too large for her slender frame.\n\n\"Oh yes, you were,\" said Gwen, smiling wickedly. \"The way I heard it, the magistrate threatened you with a whip, and you were on your knees begging to suck his big cock. In fact he made you service that big slave, what's his name?\"\n\n\"Gregor,\" said Dawn, helpfully.\n\n\"Yes, Big Gregor,\" giggled Gwen. \"You were so eager to please, they started you off at the top! I heard you came while you were servicing him, and you earned your collar on the spot.\"\n\nLana was listening to the story with a horrified expression, and she saw Cade biting her lip with a deep red blush on her cheeks.\n\n\"I . . . I get excited when I'm . . . you know!\" she protested, turning even redder when the two girls laughed.\n\n\"Like I said,\" said Gwen, \"you're a natural, just like our new girl here.\"\n\nLana finally found her voice. \"No, no! I'm not like that!\" she blurted, shaking her head. To be turned on by being forced to use her mouth on a man? Then she stiffened. Had she gotten aroused when forced to do that for Warrick? But he'd been touching her, that was entirely another matter!\n\nLana blushed when she realized they were all looking at her. \"Look at you,\" said Gwen. \"Just one day and you earned your collar, you willingly used your mouth on a Captain of the Guard, and you begged your Master to be made to cum.\" Then she gestured at Lana's naked pussy. \"They even shaved you! They never do that on the first day. I'd say you're in the top of your class!\" Then she stopped teasing Lana when she saw the stricken look on her face, and she placed her hand on Lana's shoulder. \"Oh dear, I'm sorry! It's alright honey, don't be upset, we're all slaves here, like you.\"\n\nLana was shaking her head. \"No, I'm not a slave!\" She didn't even want to mention her natural hairless state. The less attention on her nether regions the better.\n\nGwen adopted a skeptical stance, her hands on her hips, smiling at Lana. \"Of course you are slave, dear, you just haven't realized it yet.\" Then she leaned in, speaking in a low voice, as if conspiring with her. \"Tell me, hon, when they put the chains on you, does it make you wet? They showed you the outdoor slave training hall, didn't they? Did you get all hot thinking about being at those stations? How about when you served that handsome captain with your mouth, did that get you all wet down there?\" \n\nLana was gaping at her, shaking her head more vigorously at each question. Suddenly she yelped, jerking toward Gwen. Cade had reached up between her legs to stick two fingers in her exposed pussy. \"Look, she's a sopping mess!\" announced the petite blond. \"And this isn't water!\"\n\nLana was desperately shaking her head. \"No! I . . . they . . . I mean . . . I've had too much of that Somarian fruit, and the salve, that's why I . . . get aroused easily!\n\nGwen raised an eyebrow. \"Somarian fruit? That's expensive, they gave you that?\"\n\n\"No, not them,\" corrected Lana. \"The, uhmm, my own people gave it to me . . . I didn't know what it was . . . and then I got so . . . uncomfortable from eating so much fruit that they gave me the salve-\"\n\n\"Somarian slave salve?\" said Dawn. She made an amused sound in her throat. \"Oh, you poor dear, I've heard that will drive any girl mad with the need.\"\n\n\"Your own people gave you those things?\" said Gwen, looking at her curiously. \"Don't you see, dear? Your own people knew you were a slave at heart, so they helped you find your way.\"\n\nLana paled. \"W-what? No! I . . . I didn't know the fruit had effects . . . so I kept eating it.\"\n\n\"And they didn't tell you, did they?\" said Gwen, nodding, secure in her own understanding.\n\n<br >\"No . . .\" said Lana, her shoulders sinking. She couldn't explain everything without revealing too much, so she simply gave up.\n\n\"They were trying to help you honey,\" said Gwen in a comforting tone. \"But I can imagine it must be terrible for you, especially with the magistrate doing his thing for the new girl.\"\n\n\"Yes!\" said Lana. They were finally starting to understand. \"Between the fruit and salve, I'm beside myself, and I can't seem to resist what they do to me! I just need a day or two to . . . let the effects wear off, and then I'll be myself again.\"\n\nGwen chuckled. \"They're not going to give you a day, honey. And just so you know, the Somarian fruit doesn't turn a good girl into a natural pleasure slave. You have to have it in you,\" she added, gently pointing at Lana's chest.\n\n\"It's not in me! I'm a good girl!\" protested Lana, looking at each of them.\n\n\"I'm a good girl too!\" said Cade, frowning. \"Why can't you be both? Good girl and a slave at heart?\"\n\n\"But . . . but,\" said Lana, at a loss for words.\n\n\"Look at you,\" teased Gwen. \"You're getting turned on by being bathed by girls,\" she gestured. As if to help her point, Cade used one of the towels to rub softly between Lana's thighs. Lana blushed, squirming despite herself. All the soft rubbing of the wet towels had indeed become very distracting, and she'd gotten so used to being aroused that she had forgotten about it until Gwen had pointed it out. She shook her head.\n\n<br >\"No, that's the fruit, again!\" she wailed. \"I'd never get turned on by something like this, normally!\"\n\nDawn stuck out her lower lip in a mock look of dismay. \"You don't find us attractive?\"\n\nLana laughed nervously. \"Of course I do, you three are beautiful! You make me feel . . . ordinary.\"\n\nAll three of them laughed at that. Gwen answered for the rest of them. \"Oh, you are anything but ordinary, hon. Do you have any idea how much a Calambrian pleasure slave is worth around these parts?\"\n\n\n\n\"You're just different, hon. The dark, silky hair, almost black, your natural tan. Do you see girls like that around here? And your Calambrian warriors are so strong, it makes capturing your females very challenging. But most of all, it's your reputation for being shy and proper, but when they put the slave chains on you, you turn into eager little sluts!\"\n\n\"No!\" wailed Lana. \"That's not true!\"\n\nThe girls laughed then, and began calling Lana a 'slut', while poking and teasing her with their fingers and towels.\n\n\"She's so sexy, I can't resist!\" giggled Cade, her hand cupping Lana's breast and diddling her sensitive nipple, the lovely blond smiling up at her.\n\n\"Me neither!\" said Dawn, running her hands up the insides of Lana's thighs. \"Her skin is soooo soft, it's like velvet.\"\n\nLana gasped and squirmed, protesting as the girls teased her mercilessly, their hands exploring everywhere. She strained in the bonds that held her arms to either side, but there was nowhere to escape. Her body responded eagerly to their teasing torments, despite her best efforts at denial.\n\n\"I can't resist her pouty little lips!\" said Gwen, her voice husky as she suddenly grasped a handful of Lana's wet hair and pressed her lips against Lana's open mouth. A wet sound of protest was muffled by Gwen's kiss as Lana closed her mouth to the invasion by the woman's warm, soft lips and seeking tongue. She'd never kissed a woman before, and it was a shock to find her body responded to the pleasurable sensations. At that moment, Cade, or perhaps it was Dawn, pushed a finger or two into Lana's soaked nether lips, and Lana yelped and broke off the kiss, panting in shock and need.\n\n\"Please!\" she gasped, panting and pleading with the amorous trio. \"W-what are you girls doing?\"\n\nThe girls looked at each other suddenly as if caught in the act of something illicit. Gwen was licking her lips, and she suddenly smiled sheepishly. \n\n\"We're so sorry, dear,\" she said, placing the back of her hand to her lips. \"You just looked so . . . delectable . . . standing there all wet and needy.\"\n\n<br >\"Yes, I'm sorry too, Lana!\" said Cade, rubbing her hand against the side of Lana's hip. \"You really are irresistible, you know?\"\n\n\"I've never touched a Calambrian girl before . . .\" said Dawn, with a shy smile.\n\nLana looked at the three of them, and if she wasn't mistaken, they looked sincere, and genuinely embarrassed by their actions.\n\n\"It's alright . . .,\" murmured Lana, still confused. \"Just please, don't do it again?\"\n\n\"Of course, dear,\" said Gwen, smiling warmly. \"We won't take advantage of you again, I promise.\" The other two girls were also nodding eagerly, and then suddenly they were interrupted by the bark of a deep female voice, coming through the heavy wooden door in the main room.\n\n\"Girls, finish up in there! It's almost lights out.\" Lana couldn't see the source of the voice, but it sounded like an older woman. The slave girls instantly jumped into action and quickly grabbed dry towels and used them on Lana. When she was dry, they untied her arms and raised a simple peach-colored slave shift over her head, helping her into it. The shear material came down to mid-thigh, and had short sleeves that just covered her shoulders. Then Dawn brought a brush and quickly and skillfully brushed Lana's hair to a smooth shine. \n\n\"Your hair is so pretty,\" murmured Dawn in her ear. \"It's like silk.\" Then Dawn blushed. \"I won't touch it, I promise!\" she added. Lana blushed as well. It was one thing to receive comments from leering men, but another thing to get genuine admiration from another female. She still wasn't used to compliments after all the years in the Institute. It was also a wonderful relief to feel clean and fresh from the bath, and she thanked the girls for taking care of her.\n\n\"Hurry,\" said Gwen, guiding Lana out of the bathing area and back to the living quarters. \"They will come by to make sure we turn off the lanterns in a few minutes and then we have to all be in our beds.\" \n\nLana went along as they took her to one of the beds and sat her down. She noticed then that the bed had two leather manacles attached by ropes to the head board above the pillow. She looked around and found two more at the foot of the bed, one tied to each short post. Gwen saw her eyeing the bindings skeptically and she patted Lana on the shoulder. \"You're new, honey, so you have to wear those at night, I'm afraid.\"\n\nLana looked at the pretty redhead smiling at her, then she looked about the room. \"Gwen,\" she said nervously in a low voice. \"Are we . . . safe in here? They won't let any of the men come in during the night?\"\n\nGwen shook her head reassuringly. \"Oh no, dear, they lock the door from the outside, and only the magistrate and the head trainer have a key.\"\n\n\"And . . . they won't come take advantage of us?\" Lana asked, concerned.\n\n\"No, no,\" said Gwen, her expression serious. \"The magistrate wouldn't violate our privacy. He only comes in to talk to us. No one touches us in here, this is like our sanctuary.\" Then she shook her head, sadly. \"Just be glad you're a high-grade pleasure slave. Some of the other living quarters a lot less secure.\"\n\n\"Secure?\" said Lana with a frown. \"Y-you're slaves! This is a prison, not a sanctuary!\"\n\nThe girls looked at her in confusion. Gwen spoke what they all were thinking.\n\n\"Miss Lana, we are slaves, yes, but we are well treated, and in here, we don't have to worry about our throats being slit by bandits, or being raped by village men while our husbands are at war, or . . . all the bad things that happen to girls like us . . . out there,\" she gestured with her hands. All three girls were nodding, and looking at Lana strangely.\n\n\"There's no sanctuary for girls out there in the world,\" said Cade, gesturing with her arms spread wide. Lana suddenly felt a pang of guilt. She had no right to judge these girls, for their world was a much more dangerous place than her own. Perhaps a secure room to sleep in was more than they'd ever get if they were free. Still, she couldn't sit by and let them accept their slavery.\n\n\"I'm sorry,\" she said, softly. \"But there must be something better than slavery for you?\" Then she looked at them. \"How long have you been here? Isn't this a training camp, don't they send you somewhere when you're done your training?\"\n\nGwen smiled. \"Yes, but the magistrate keeps a few slave girls here, to entertain the many visiting dignitaries, like your Captain,\" she added with a sly wink that made Lana redden. \"And he uses us himself on occasion.\"\n\n\"Too rare an occasion!\" piped in Cade. Dawn nodded her agreement.\n\n\"He likes you the best, Cade. He hardly ever chooses me,\" added Gwen with a dejected look.\n\n\"Your breasts are too small,\" said Cade, winking at the redhead, who made a face. Then Gwen smiled at Lana. \"So yes, we've been here . . . over a year now,\" she said. \"Six months for Cade, isn't that right, girl?\" She turned back to wink at Lana. \"I can see he likes you, he's never paid so much attention to a new girl. Maybe he'll let you stay with us!\"\n\nLana gave a nervous laugh, nodding. She had to fight down the feelings of pride that always surfaced when they referred to her high value. But deep down she was terrified of what six months in this place might do to her. Even another day in the hands of the magistrate was a deep concern. Somehow he seemed to know just how to get past her mental walls, to reach her vulnerable inner core. She had to get out of here, and get to Nikolai, while she still had her sanity, and some semblance of her modesty.\n\nLana looked at the smiling faces of the slave girls who sat around her. So maybe freedom for these Dellune girls wasn't such an improvement, but Lana knew that having Nikolai running the country couldn't be a good thing for this world's women. She felt her resolve grow every time she saw women being mistreated -- she needed to complete her mission, and hope that things improved for them. She looked about the room. It never ceased to surprise her how happy the slave girls seemed, but she knew they were probably just conditioned to appear happy, to avoid punishment. That had to be it. Still, it was unnerving, for she realized she probably saw more unhappy females in her home world than she did here on this primitive world.\n\n\"Come dear, stop thinking so much, you need some rest,\" said Gwen. Lana gave her a slight smile and let the girls guide her to lay down on her bed. Her slave shift bunched up around her hips, and Lana quickly pulled it down to her thighs to cover her nakedness. Then Dawn and Cade raised her arms above her head, and placed her wrists in the leather manacles, locking them closed with a key that was hanging on the wall behind her bed. Then the two girls each took one of Lana's ankles and fastened them to the manacles at the bed posts. With her legs spread apart, Lana blushed, for her slave shift was only a hand's length below her still overheated center, and the cool air tingled her flesh. The teasing by the girls had rekindled her inner heat, and she squirmed slightly on the soft bed. At least the cloth-like rope material that kept her wrists and ankles tied to the bed was long enough that she'd be able to move a bit and get comfortable, maybe even turn on her side.\n\n\"Gwen,\" she said, seeing the pretty redhead looking at her. \"If the door is locked, why must I be bound while sleeping?\"\n\nGwen giggled, making Lana frown. \"Sweet girl, it's to keep you from touching yourself, of course!\"\n\n\"Oh,\" said Lana, blushing. It wasn't like she would do that, even if unbound. Then again, it might help her sleep.\n\n\"You'll see in a minute, dear,\" said Gwen. As if on cue, they suddenly heard a loud click, like a key turning a lock, then a creak as the magistrate entered through the door. He looked about and spied the four girls and approached quickly, as if in a hurry. Lana suddenly felt terribly naked and vulnerable, tied to the bed. It was one thing being so before the girls, but in the presence of the magistrate, she felt the overwhelming urge to escape her bonds and cover herself. The dark-haired man strode confidently toward Lana's bed, ignoring the admiring looks from the other slave girls. He quickly took a seat on the bed next to Lana's naked hip. His closeness made her spine tingle and her breathing grew slightly rapid.\n\n\"I'm afraid I don't have time to dally, my little pupil,\" he said, bringing a hand to gently touch Lana's cheek. \"I must entertain some guests from the capital.\" He smiled warmly. \"With more training, you could join the girls in helping me with the entertaining.\" He ignored Lana's look of trepidation and instead pulled a small glass vial from his pocket. It contained what looked like red powder. Lana watched with wary concern as he unscrewed the top, then looked at Lana. Suddenly he leaned his head down, taking one of her nipples into his mouth. Lana gasped at the exquisite wet sensations of his lips and tongue, but all too quickly he raised his head, and moved to her other breast, moistening the nipple with his mouth and tongue. The magistrate chuckled at the gasps from Lana's lips, before raising his head and smiling at her. She looked at him in confusion as he dipped two fingers into the glass vial, and then reached for her breast. He sprinkled the tiny pinch of powder on her damp nipple, then reached over and did the same to her other moist bud, before using a finger to spread it around. His finger felt rough from the powder, but it quickly dissolved into a wet thin paste, leaving an odd tingling sensation.",
        "\"What did you put on me?\" she asked suddenly, hoping he hadn't noticed how swollen her little nipples had become from his touches.\n\nThe magistrate smiled at her. \"It's a Veruvian spice, commonly used in cooking. Do not worry dear, it will not hurt. We use it on new slaves to . . . distract them. To keep them restless and fervid on their first few nights.\"\n\nIt was probably going to itch, thought Lana. They wouldn't even let her sleep in peace. If she had her abilities back, she could probably have meditated herself to sleep. \"W-wait, what are you doing?\" she blurted suddenly. The magistrate had taken another pinch of powder and was reaching between her widespread thighs.\n\n\"Oh, don't worry dear, you're quite wet down there already, no need to use my mouth.\" Then he deposited the powder in a neat little row between her nether lips, and before she could protest, he used his finger to spread it around. Lana gasped, squirming to escape the finger, rough with the powder, but the magistrate only grinned as he continued mixing the red powder into liquid, using her own copious juices. She cried out softly when he delved inside a short distance to spread it around, but he didn't go very deep, and then he removed his finger. Lana gasped in shock as he raised his finger to his mouth, sucking it clean. He then patted her on the cheek again and stood. \"Get some sleep, my new slave . . . if you can.\"\n\n\"Will you be needing us tonight, Master?\" said Cade suddenly, eagerness in her voice.\n\n\"No, my dear,\" said the magistrate, taking Cade's prominent chin in his hand in a warm gesture that made Lana feel oddly annoyed. \"These visitors are not worthy of your charms. I'll send some regular girls from the brothel for them. But thank you for your kind offer.\"\n\nCade gave him her most enticing smile. \"Of course, Master. And we'd be happy to serve you . . . perhaps after a long day you are in need of release?\"\n\nThe magistrate chuckled, shaking his head. \"A nearly irresistible offer, little one, but I'm afraid I'll be up late tonight making tedious conversation. Get some beauty rest, girls, your services will not be needed tonight.\"\n\nThen he turned to leave, walking away without looking back, before closing the door behind him. They all heard the key turning and locking the door.\n\n\"Cade, you're such a slut!\" said Dawn, scowling at the blond girl. \"You'll spread your legs for anyone on a guest list!\"\n\nCade giggled. \"If they're on the magistrate's guest list, they're probably rich and handsome!\"\n\n\"Oh, and they're going to have one taste of you and want to marry you, is that how it works?\" said Dawn, her dainty features bunched up with skepticism.\n\nCade nodded, making a motion with her fist in front of her mouth. \"Oh yes, a little lip service and the proposals come pouring in!\"\n\n\"That's not all that comes pouring in, you little tramp,\" said Gwen, teasing the blond, who made a face and stuck her tongue out at the redhead. \"It's a pity you're a slave, so marriage isn't in the cards,\" she added with a jab of her finger into the soft side of the blond girl, who squealed in protest.\n\nLana found the banter fascinating, if rather shocking. \"But . . . could these rich men really . . . want to marry her? Could they buy her or something?\"\n\nGwen nodded seriously. \"Oh yes, you've had offers, haven't you, Cade?\" The blond nodded eagerly, grinning. \"And when the magistrate tires of her, he'll probably take the next offer.\"\n\nLana sighed. \"Well, that doesn't seem too bad . . . to get out of here and marry a rich man.\"\n\nDawn giggled suddenly. \"Oh, Lana dear, they don't want to marry her! They have their rich, fancy wives, they want Cade as their little pleasure slave. She'll have to serve two masters, a kind but perverted man, and a cruel, jealous wife.\"\n\n\"Oh,\" said Lana. That didn't sound so good after all. She noticed that Cade was glaring at the brunette.\n\n\"The last offer was from an unmarried general, I'll have you know!\" she exclaimed, her little fists on her hips.\n\n\"Oh, what a lovely imagination you have, sister,\" said Dawn, patting Cade on the head before the blond slapped her hand away.\n\n\"I can't imagine any general being able to resist you, Cade,\" said Lana, softly. \"Your time will come.\"\n\nCade's anger was replaced with pride, and she leaned over to hug Lana's leg. \"Aww, thank you, Miss Lana!\" she exclaimed. Then she smiled. \"Maybe you can take my place, and the magistrate will release me? He sure is taken with you!\"\n\n\"Y-you think so?\" said Lana, nervously. She really couldn't tell, not having known the man before that day.\n\n\"Oh yes,\" said Gwen, nodding. \"He's got it bad for you, dear. But don't get too excited. He saves his most devious torments for his favorite girls.\" She grinned at Cade. \"Isn't that right, honey?\" \n\nLana sucked in a sharp breath when she saw the girls nodding, and Cade was chewing on her finger, her eyes lost in thought.\n\n\"Poor Cade,\" said Gwen. \"He took her from innocent virgin to screaming pleasure slave in just a few days. She never stood a chance.\"\n\n\"I was a good girl! I still am!\" protested Cade, stilling chewing and thinking.\n\n\"You thought you were,\" corrected Gwen, \"just like our new girl, Lana. She thinks she's a good girl too, but the magistrate, he can see the horny slut inside girls like you two.\"\n\nCade was blushing and kept silent, but Lana was shaking her head. \"No! There's no . . . horny slut inside me! Where do you get this nonsense?\"\n\nGwen was looking at her strangely. \"Why are you so resistant, honey? Don't you see? Girls like Cade will get bought by generals, they'll get taken to a good home. You should be happy! You'll get a much better man than Dawn or I will, I'm sure of that.\"\n\nLana looked at her in alarm, but she didn't seem distressed by her future prospects. And Lana didn't agree for a moment. \"You are beautiful, Gwen!\" she protested. \"And you too, Dawn. You'll both find men to love you . . .\" He voice trailed off, for she wondered if that were true. What was the future for a pleasure slave?\n\nSuddenly Gwen was giggling. \"Oh, I know that, silly! You look so worried, it's sweet. But don't worry about us, we'll find our husbands, or masters. I'm happy either way.\" Dawn was nodding too. \n\nSuddenly there was a banging on the door. \"Lights out, girls!\" barked the same female voice they'd heard before. Dawn quickly dashed to the lanterns and turned them off one by one. She moved so fast that Lana imagined they must get punished if they dallied. With the lanterns off, she could still see fairly well due to the moonlight passing through the various windows, some of them covered in glass, and some open but barred. She watched in fascination as the three girls all went to their beds, pulling sheets or covers over themselves. It wasn't really cool enough for her to want a sheet for warmth, but she wished she could cover her nakedness. She was getting used to being naked, and that worried her.\n\n\"Good night, new girl!\" whispered Dawn. \n\n\"Good night, little inner slut!\" whispered Cade, followed by a chorus of giggling.\n\nIn minutes, she heard the soft, heavy breathing of sleeping girls, and Lana tried to close her eyes and sleep. Tomorrow might bring back her abilities, and that thought warmed her heart. If she was going to wait for Warrick to get around to rescuing her, she might be waiting for a long time. Yet as she lay on the bed listening to the sounds of Cade snoring softly to her left, Lana realized she was having trouble relaxing. Her nipples were tingling slightly, and even worse, she felt almost a soft burning between her legs. She tried closing her thighs, but it made no difference. The spice the magistrate had applied wasn't really burning or itching, but it seemed to increase her awareness of her own arousal, which after a long day of torments, didn't seem eager to go away. Nevertheless, Lana's exhaustion eventually overcame her mild discomfort and she drifted off to sleep.\n\n\"Lana, honey,\" said the soft voice near her ear. \"Wake up!\" The insistent voice was bringing her out of a deep sleep, and Lana immediately became aware of a burning, itching sensation. She moaned, squirming about, but her arms and legs seemed to be restrained. She opened her eyes, to see Cade leaning over her, the moonlight showing her blue eyes filled with concern. <br >\n\n\"It itches!\" blurted Lana, loudly. Cade shushed her silent. The burning seemed centered on her breasts and between her legs, but the sensation made her whole body burn. It was so uncomfortable that she couldn't lie still. \"Please, get it off me!\" she said to Cade, trying to keep her voice down.\n\n\"I can't, honey!\" whispered Cade, looking past Lana to make sure her friends weren't being woken up by the commotion. \"You'll just have to bear it. You can take a bath in the morning. Just . . . try not to be so loud ok? You were moaning in your sleep!\"\n\n\"Cade, I can't . . . I can't sleep like this! It's driving me crazy!\" whispered Lana, looking desperately at the exasperated blond. \"C-can't you get a wet towel and wipe it off?\"\n\nCade shook her head. \"That stuff will get the towel all red, and I'll get in trouble.\" The blond patted her reassuringly on the shoulder. \"Just try to keep quiet ok? If you're too loud they'll come to the room and we'll all get in trouble! None of us slept much the first night.\"\n\nLana shook her head. If she didn't get some sleep, her abilities wouldn't return! In desperation, she tried to turn over on the bed, but her leg restraints kept her hips from rotating far enough. She was able to turn her torso enough that her chest faced the bed sheets, and she twisted about, rubbing her breasts on the sheets, trying to rub off the infuriating spice.\n\n\"No, honey, don't!\" whispered Cade, but too late. The rubbing served to greatly increase the burning sensation in her nipples, and Lana turned back over, whimpering in misery. She needed water to remove it. Then she remembered how the magistrate had applied it. Her desperation overcame her shame.\n\n\"Cade?\" she said, tentatively. \"Could you . . . use your mouth to . . . suck it off my nipples?\"\n\nCade's eyes went wide, first with surprise, then with realization. \"That might work!\" she exclaimed.\n\n\"Ok, you can---ohh!\" gasped Lana, for Cade had already leaned over and placed her mouth over her itching burning nipple and was sucking and tonguing away. Her soft lips and warm tongue initially made the burning much worse, but in seconds, that subsided, replaced by intense pleasure as the girl showed her oral skills, using her saliva to thoroughly wet Lana's nipple, before sucking and licking away the spice-laden moisture. Lana moaned at the sheer overwhelming pleasure, and Cade raised her head to shush her quiet. She watched as the girl reached up to squeeze her breast, making the nipple protrude further so she could attack with vigorous sucking. Lana whimpered, the noise escaping past her tightly clenched lips as her thighs clenched reflexively at the pleasure Cade was inadvertently giving her. Finally the girl seemed satisfied that she'd got all the spice, so she sat up, smiling.\n\n\"I got it all, honey!\" she whispered, pride in her voice. \"I can taste it, you know? Once your nipple no longer tastes like spice, I know it's clean,\" she added, giggling softly.\n\n\"Thank you, Cade!\" whispered Lana. \"C-could you . . . do the other one?\" she added, sheepishly. She couldn't believe she was asking another girl to suck her nipple, but she had to admit, Cade's sucking had been extremely effective.\n\n\"Allow me,\" said Dawn, suddenly appearing at Lana's side, making her jump in surprise. Then Lana blushed. \"It's alright,\" said Dawn, amused at Lana's look of shame. \"I wish I had someone to suck off the spice on my first night,\" she added, wistfully, before giggling softly. Then before Lana could speak, she lowered her face to Lana's other breast. Like Cade had done, she took Lana's breast in her small hands, squeezing it to make the spice-covered nipple easier to suck on. Lana felt a jolt of pleasure as Dawn smothered her nipple with her warm, wet mouth, sucking and drawing away the maddening itch from her over-sensitized flesh. Then Lana made a soft yelp when Dawn inexplicably bit her nipple gently but firmly. Both girls shushed her, but Lana shook her head, whispering,\n\n\"Dawn, don't bite me!\" she whispered, indignant. Then Lana's eyes went wide. \"Hey, it's gone! The itching, you did it! Thank you so much!\"\n\nDawn and Cade smiled. \"You're welcome,\" they said in unison. \"I kind of enjoyed that, didn't you, Cade?\" added Dawn.\n\n\"Mm, hmm,\" murmured Cade, looking down at Lana's still heaving chest. \"And I know Lana enjoyed it even more than we did!\"\n\n<br >\"Stop, I did not!\" whispered Lana, blushing. The itching in her chest was gone, but . . .\n\n\"Aren't you going to ask us to take care of the rest of the spice?\" said Dawn. Her eyes were filled with mischief.\n\nLana's eyes widened slowly and she started shaking her head. \"Oh, no! N-no, that's alright! I . . . I think I can sleep now!\"\n\nCade caught on and also smiled. \"You're right, Dawnee, she'll sleep so much better if we can get rid of the rest of the spice!\"\n\nSuddenly, Gwen appeared between Lana's legs, surprising all three girls. \"Can I help?\" said Gwen, mischievously.\n\n\"Yes!\" said Cade. \"We sucked the spice off of Lana's little nipples\u2014well, they're not so little after all that sucking, are they?\" she added, making Lana blush profusely.\n\n\"I see,\" said Gwen with a glint in her eye. \"And she wants you to suck the spice off her adorable lower lips as well.\"\n\n\"N-no!\" exclaimed Lana, still trying to keep her voice down even though Gwen was clearly awake. \"I don't want that! I'll be fine, please . . . go back to bed.\"\n\n\"How can we sleep with all that moaning you were doing?\" said Dawn with mock annoyance.\n\nLana was mortified, but she didn't doubt the girl. The itch was maddening, and only her exhaustion had kept her from waking. As good as it felt to have her breasts clean of the spice, the maddening itching and burning between her thighs was even worse. Still, she'd endure that before letting the girls . . . She gasped, seeing Gwen move closer until her head was directly above Lana's itchy furnace. \"Don't you dare!\" she whispered. \"I said no!\"\n\n\"How charming,\" said Gwen with a smile. \"The slave girl is making demands of her mistresses. Is that any way to speak to your mistresses, slave?\"\n\n\"W-what?\" said Lana in confusion. \n\n\"What, Mistress,\" corrected Gwen. \"Did the magistrate not explain to you that we are your masters as well? As the new girl, you are truly at the bottom of the tree.\"\n\nHe had mentioned that, Lana realized. It hadn't seemed to matter before. \"Gwen, please, be serious,\" said Lana, pleading. \"I'll be fine, just . . . go back to bed, I'm begging you.\"\n\nGwen shook her head slowly, a wicked grin forming on her pretty face. \"You'll be begging soon, and not for me to stop. Girls, the slave needs a lesson. I think I see a bit of spice remaining on her breasts, could you take care of that for me?\"\n\n\"Of course, mistress!\" said Cade and Dawn, smiling at Lana. Then they slowly and deliberately lowered their heads to Lana's breasts.\n\n\"Cade . . . Dawn . . . no, please! Nah!\" moaned Lana as two sets of lips attached themselves to her protruding nipples at the same time. Her hips jerked as the pleasure rippled through her struggling body. She yelped in surprise when Dawn gently bit down on her flesh again, and she moaned when Cade did the same to her other nipple.\n\n\"Lana, please keep your voice down,\" instructed Gwen. \"Need I remind you that we will all be punished if someone hears us through the door?\"\n\n\"I'm s-sorry, m-mistress,\" gasped Lana, struggling to speak amidst the onslaught of sensations the two slave girls were forcing on her. Suddenly Lana felt small, soft hands on her inner thighs, and she looked down past the locks of blond and brunette hair that were draped over her breasts to see Gwen leaning down and moving toward her quivering pussy. \"Gwen\u2014mistress! Please . . . don't!\" whispered Lana desperately. When Gwen didn't stop, she blurted. \"I'll scream! I . . . I won't be able to help myself! They'll hear me for sure!\"\n\nGwen stopped then, sitting up. \"You're right,\" she said finally, pausing. She got up off the bed then and came toward the top of the bed near Lana's head. She leaned down to open a drawer and pulled out a thick length of cloth.\n\n\"Gwen, no please don't do tha---mmmph!\" Lana's words were cut off by the cloth as Gwen pushed it into her open mouth, lifting Lana's head to tie it behind her. Lana's protests grew more frantic, but they were now muffled enough that no one would hear her outside the door.\n\n\"Much better,\" said Gwen, moving back to her position at the base of the bed, before crawling forward toward Lana's thighs, which she was trying in vain to close. She had some slack in her leg bindings that let her close her legs, but there was still enough space for Gwen to insert her head. And then Lana jerked in her bindings when she felt soft lips on her quivering pussy, the shock almost electric. And when Gwen's warm tongue pushed its way between her nether lips to lick at the spice-flavored folds, Lana threw her head back and mewled helplessly into the gag. She thought she might faint, but that mercy was denied her, and she could only thrash and jerk as a the sensations overwhelmed her. It was so wrong, she thought, to be touched and licked in this manner by girls, yet why did it feel so good? It was yet more evidence of the fruit's diabolical effects that she couldn't resist even her sisters in bondage. Lana told herself it was not her fault, the day's events had left her overheated and vulnerable to the skillful lips and tongues of the experienced slave girls, how could she resist? The two girls on her breasts giggled and continued their sucking, licking, nipping of her tender flesh, while Gwen used her arms to push Lana's knees flat to the bed, spreading her wide so she could carefully and thoroughly lick up every bit of spice. Lana shook her head, mewling protests as her body flamed higher with each lick, each tonguing, each sucking of her enflamed pussy. Soon, she forgot all about right and wrong, shame and denial, and was lost in her own pink haze of need.\n\nIndeed she couldn't hold out very long, for Lana's body suddenly tensed, her every muscle rigid and her toes curling up as a shuddering orgasm rippled through her. The two girls both bit down on her nipples at that moment, and Gwen stroked her clit with her tongue, drawing a muffled scream from Lana, who arched her back as they drew out her climax before mercifully letting her collapse back onto the bed.\n\nAs Lana lay on the bed in a daze, panting and trembling, Cade lay down next to her, gently stroking her silky hair and doodling circles on her breast with a finger. \"That's it, dear,\" she cooed in Lana's ear. \"you'll sleep much better now.\" Dawn was also stroking Lana's damp hair and sensitive breast, and finally Lana opened her eyes. Cade smiled at her. \"Oh, you're back, honey! Did you enjoy that?\" Lana blushed deeply and turned her head, to try to hide her shame.\n\n\"Aww, she's shy,\" said Dawn. \"Was it your first time with girls?\" Lana nodded, her face still buried in the pillow. Dawn chuckled. \"Well, that's wonderful, Lana! You came on your first time!\"\n\nLana turned her head back to look at Dawn in confusion. Seeing her expression, Dawn explained. \"Well, a lot of girls are too shocked their first time to really enjoy it. It took me a few sessions to get used to it.\"\n\n\"Not me!\" squeaked Cade proudly. \"I loved it immediately, just like Lana! We really are little twin sluts, aren't we girl?\" she added, patting Lana on the chest.\n\nLana shook her head in horror. She protested that it was the fruit, that she wasn't a slut, that she'd never have enjoyed this normally. But all that made it past her gag was some pitiful garbled noises. She saw the girls grinning at her, as if enjoying her attempts at denial, and Lana vowed to never let herself cum again from the attentions of females. They'd caught her off-guard, and truth be told, she'd really needed to cum, after all the times she'd been teased and denied that day. But she wouldn't let them get to her the next time.",
        "Cade was looking at Gwen. \"I'm tired, can we go to bed? Did you get it all, Gwen?\"\n\n\"No,\" said Gwen, shaking her head. \"He put some of it too deep for me to reach with my little tongue,\" she added, sticking out her tongue. Cade giggled and Gwen frowned.\n\nThen Dawn stuck out her tongue, and Cade laughed out loud. \"Oh Dawn, that thing's like a snake!\"\n\n\"Yeah, you give it a try, Dawn,\" said Gwen. Suddenly the girls got up and switched positions, and Lana finally caught on to their intentions. She shook her head vigorously, her eyes as wide as saucers. No, not again!\n\n\"Lana, honey,\" said Cade, stroking her cheek with her fingers. \"We have to get the deep spice off of you or you're going to be so uncomfortable. Just relax and enjoy it again.\"\n\nLana was desperately trying to speak, so Gwen reached up to remove the gag. \"Cade? Gwen? Please, not again, you can't, I'll be alright, I can sleep! \" she babbled, the words tumbling over each other.\n\n\"Don't worry, dear,\" said Gwen, reaching up a hand to Lana's cheek. \"Your naughty secret is safe with us.\" She turned her head to look at Dawn. \"Go ahead, Dawn, use that snake tongue and get as deep as you can.\"\n\n\"Don't you want to gag her again?\" said Cade, idly tickling the inward curve of Lana's hip with her slender fingers.\n\n\"No need,\" said Gwen, \"I'll make sure she's kept quiet. It'll give me an excuse to continue what I started in the shower.\" Then she leaned over, moving her lips to Lana's gaping mouth. Lana let out a string of desperate pleas that were cut off by Gwen's pink lips pressing against her own. She felt her thighs clench slightly at the delicious feel of Gwen's mouth on her own, and she whimpered as she realized where Gwen's tongue had recently been. Then she gasped and choked when she felt Dawn's tongue pushing deeply inside her. She fleetingly remembered her vow to resist the touches of the girls, and that thought was instantly swamped by the flood of impossibly arousing sensations. Not to be outdone, Cade was also leaning over to plant wet kisses on Lana's belly, which Lana realized was terribly sensitive. The blond girl seemed to know just where to kiss, and how, and Lana squirmed, her hips captured in place by Dawn's hands on her thighs and Cade's searching lips. The onslaught of sensual attacks on her nervous system was impossible to fight, or to escape, and in another minute, Lana felt her body tensing again. She whimpered protests into Gwen's warm mouth, straining in her bonds as she tried in vain to fight the rising tide of pleasure. Dawn's tongue was indeed unusually long, as she used it to plunge and seek out every last bit of the flavorful spice.\n\nWhen the orgasm came, it was more intense than even the first, and Lana screamed, the sound caught and silenced skillfully by Gwen's mouth. As skillfully as Gwen had done, Dawn tongued Lana's clit, extending and intensifying her orgasm, until finally she collapsed, trembling and panting for air. Lana had never felt so good, so . . . satisfied, and in seconds, her exhaustion took over and she drifted off into a deep, much needed slumber.\n\n\"Poor thing, I think we were too much for her,\" said Cade softly as she gently caressed Lana's cheek with her fingers.\n\n\"She'll sleep well now,\" said Gwen, leaning in to place a light kiss on Lana's parted lips. The girls quietly got up off the bed, gently pulled the covers over their new friend and went to their own beds."
    ],
    "authorname": "Tanuki",
    "tags": [
        "lesbian bdsm",
        "lesbian",
        "female submissive",
        "fantasy",
        "bdsm",
        "pleasure slave",
        "non-consent",
        "slave training"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/agent-in-distress-ch-11"
}