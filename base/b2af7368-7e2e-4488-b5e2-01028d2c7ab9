{
    "title": "Time Rider Ch. 02",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented are done strictly for context and humour, I lay no claim to them. As always, critiques and reviews all welcome, illiterate flames will be snickered at. Enjoy! \n\nChapter 2- Always The Student \n\nMark was lying on his back, panting while Becky squirmed and writhed on top of him, moaning in pleasure. His hands were on her opulent breasts, kneading them just how she loved it. The lovers were covered in sweat as she ground her pussy down onto his cock, taking him deep inside. He matched her sensual rhythm, pushing up while she pressed down, squeezing his shaft with each thrust he made. \n\n\"Yes, Mark...\" she gasped, her hands resting on his chest while she writhed on him shamelessly. It didn't matter that she was his former high school Physics teacher, or even that she still was, in a sense, she was committed to fucking him because she'd promised herself she'd enjoy this, and Becky did her damndest to always follow her own advice. \"Yes, baby, right there...\" \n\nBecky now began gyrating her hips in a circle on to of him, interrupting the rhythm that would certainly had led to both of them cumming and she wanted to prolong this session. She felt Mark regain control of himself, adapting to the new pace, although he continued to molest her breasts, pinching and tugging on her nipples. Her flawless skin glistened with her exertions, the wonderful scent of a woman making love permeating the air. \n\n\"Mmmmm, good boy,\" she purred, smiling down at him. \"You're learning.\" \n\n\"I've got the best teacher I could ask for.\" Mark replied, grinning back. \"Forget all the time travel stuff you're helping me figure out, you're amazing in bed, Becky. I've never cum so hard before, not like when I'm with you.\" \n\n\"You're so sweet, darling,\" she cooed, reveling in the feel of his throbbing cock deep inside her. Ever since that night he'd snuck into her home and failed so miserably at trying to seduce her so she would change his Physics grade, they'd become ardent lovers, with her being nearly as addicted to their sex as he was. \"You make me cum really hard too, just so you know. And the gift you brought me back from London was so thoughtful. How would you like to fuck me next?\" \n\nMark nodded, pondering her question. He had indeed brought her back a gift, from London in the 1880's. He'd come back with a lovely dress from the period and a bottle of Italian wine. Even though she had never accompanied him on a temporal trip (except that very first one, to prove he had a time machine at all), she seemed to have an innate understanding of how to time travel without screwing things up, which was very easy. \n\nHe took hold of her hips and slowly rolled her onto her stomach. She purred as she pushed her legs together and then knelt over her thighs. She put her chin on her arms and sighed as he pulled her ass cheeks apart and pushed his cock down into her pussy. Her clamped legs made her feel tighter than ever and he groaned in pleasure as he bottomed out. Keeping himself up on his hands, his back arched so that she was pinned beneath him, he began to piston his hips, fucking his teacher. \n\n\"Ohhhhhh, Mark...\" she murmured. \"It's so good this way. Your cock feels so wonderful inside me.\" \n\n\"Gnnnnn, God...\" he breathed, shuddering as she squeezed her cheeks together, clamping her pussy around him as he thrust. \"I never wanna stop fucking you.\" \n\n\"I don't want you to,\" she gasped as he hit her sweet spot. \"And because you- ooooooh- have your time machine... we can find a way... to fuck forever...\" \n\nShe squirmed and writhed beneath him while he pushed up and down on her, both of them getting slick with sweat. They groaned and panted together. He leaned down and bit her shoulder Becky keened in pleasure. Trembling, she arched her hips, pushing up against him. She could feel his cock twitching and swelling inside her. \n\n\"Gonna cum...\" he breathed, pushing down and straining. \n\n\"Uh! Yes, cum in me, Mark!\" she wailed. \n\nShe pressed her face into a pillow as she screamed, feeling her student's cum spurting inside and filling her spasming pussy. Mark shook and groaned loudly, so glad they were in her house and could be as loud as they needed to be. Her slammed his hips down onto her, tingling pleasure blossoming through him. \n\nMark collapsed on top of her, both of them limp and breathing heavily. He reached under Becky and put his hands on her breasts, squeezing gently. She hummed and undulated her soft cheeks beneath him, milking his cock for all of his cum, her wet pussy wanting every last drop. They said nothing for several minutes, just laying there in bliss. \n\nBecky finally slowly turned over, Mark's member slipping out of her and they wrapped their arms around each other, kissing deeply. He pushed his still-hard cock back in and moved back and forth gently inside her and she squeezed him in rhythm. Tongues tangled and they hummed contentedly into one another's mouths. \n\n\"God, I want to find a way to have multiples of you fucking me all at once,\" she purred, smiling into his eyes and caressing his cheek. \"One in my pussy, one in my ass, another in my mouth... mmmmmm, that sounds heavenly.\" \n\n\"Yeah, but won't I, like, blow up spontaneously, or collapse the universe if I encounter myself?\" he asked somewhat warily. He liked the idea of fucking all Becky's holes, but not if it made everything go boom. \n\nShe giggled and booped his nose. \"Silly. Why are you asking me? You're the one with access to this time-travel police force. What did you say they were called? TEA?\" \n\n\"Yeah, they said they're called the Temporal Enforcement Agency.\" Mark confirmed. \"I called them TEAbaggers and they didn't think that was funny.\" \n\n\"Oh, be nice to them, darling,\" she chided gently. \"After all, they're protecting the timeline for crazy kids like you.\" \n\n\"Yeah, I guess,\" he admitted, knowing she was infinitely more sensible than him about these things. She was already so much smarter at this temporal stuff than he was. The only reason his little trip to 1800's London went well was because she'd prepped him and made him think it through. \"Getting myself killed is apparently pretty easy.\" \n\n\"Boo, and then we couldn't fuck any more,\" she said, sounding sad. \"And even if you stopped time-travelling tomorrow, I'd still want to fuck you. You've unleashed a demon in me.\" \n\n\"I know it,\" he laughed. \"I have to rest a few days after our marathon fuck sessions, only to come back in your next day to keep up with your libido. Not that I'm complaining, mind.\" \n\nShe giggled. \"Well I do love to fuck,\" she agreed. \"Maybe one day, I'll go with you. I'd love to fuck in a harem bath house or a Parisian brothel.\" \n\nMark rolled off her and lay on his back, staring at the ceiling. He could almost see the steam rising off them. As tricky as time travel was, he never would have ended up in bed with his Physics teacher if it hadn't been for his time machine. \n\n\"That chronometer the agents gave me comes in really handy,\" he said, his thoughts drifting. \"It actually gives me little warnings if I'm getting too close to another temporal event. It means I can't do some things I'd like to do, but things get complicated.\" \n\nShe smiled. \"You said they called it 'the Limelite Effect' or getting clockhammered, depending on what you were trying to do.\" \n\nHe nodded. \"They didn't like it when I called it 'clock-blocking'.\" \n\n\"You said they had no sense of humour.\" Becky mused. \"But maybe practicing with your Holmes Field Device in minor ways will help.\" \n\nHe turned and looked at her. \"How so?\" \n\n\"Well,\" she began, turning on her side to look at him, her hand propping up her head. Her nipples gently kissed the skin of his arm. \"How about you take me out for dinner? We'll pick a low-traffic area, somewhere time travellers don't go. You said that your chronometer dials are difficult to physically turn and the Holmes Field device always skews numbers if you're trying to get anywhere that would prove troublesome.\" \n\nHe considered what she was saying. \"So, take you to some remote village in the past where no one else is ever interested in going. We can try finessing my control of the device.\" \n\nShe nodded. \"Precisely. I don't know about you, but I speak flawless French, we could visit a little village in France's past and we could get some dinner. You could learn how to deal with the locals, get a feel for what you'll have to do if you keep travelling the timestream.\" \n\n\"It's weird how you can say words like 'timestream' so naturally, like it's normal,\" he sighed. \"Still, you're right, careful practice is probably a good thing.\" \n\n\"It'll be fun,\" she said, reaching over and taking hold of his hip to turn him into her. Her breasts were now squashed to his chest, his soft cock against her gooey pussy. \"How bad a teacher can I be for this? You made it through my physics class without tearing a hole in reality.\" \n\n\"And yet I failed,\" he sighed. \"I doubt I can fuck my way out of every bit of trouble I get myself into.\" \n\nShe giggled and took his hand, pulling him off the bed and leading him to the bathroom. She sat down on the toilet to pee while she stroked his cock gently, She shivered as she peed, feeling his cum trickling of her, pulling him closer and taking him in her mouth. She hummed as she bobbed back and forth, enjoying their mingled taste. Mark had to admit that he was enjoying how relaxed she was around him now that they were lovers. \n\n\"So,\" she said finally, pulling his cock out of her mouth with a quiet pop. \"We'll shower and get cleaned up. Then we'll head to the public library to figure out where and what we're doing. Anybody asks, I'll say I'm helping you with your schoolwork.\" \n\nHe smiled slyly, feeling a familiar tingle in his member at the thought of showering with her. This was going to be a good night. \n\n*** \n\n\"So here's a question,\" she remarked as she watched Mark get dressed in the outfit they'd bought for the occasion, hidden from prying eyes in her basement, where he kept the Holmes Field Device. They'd visited a costume shop and found clothing that was a good fit for the period they were visiting, that being France in the 1600's. \"Did they ever tell you about any contacts you can make in the timestream? You know, like dealers?\" \n\nHe looked at her quizzically. \"Dealers?\" \n\n\"Sure,\" she said, nodding. \"There must be time-travellers who make their living by providing goods and services to other travellers. I mean, you need to be able to get money and supplies somewhere, so that you don't stick out like a sore thumb, right?\" \n\n\"Yeah, that'd make sense,\" he admitted. \"I mean, I got lucky when I tried going to London and got that dress, I managed to pawn off some knick-knacks I'd brought with me, because I didn't know how else to pay for anything. And they thought I was just some ignorant American. I got out a lot quicker than I thought I would.\" \n\n\"I think we should find out,\" she reasoned. \"If you're going to do this, you should really learn how to find what you need.\" \n\n\"Exactly how much time-travelling do you think I'm gonna be doing?\" he asked, giving her a wry look before continuing to put on his new outfit. \n\n\"Well, we know you have no future as a physicist, maybe you'll find something you're good at in the timestream,\" she giggled, making him sigh. She moved forward to help him get into his clothes, since he clearly had no idea what he was doing. \"And even if you don't know how to find a dealer, I'm willing to bet that they'll know how to find a traveller.\" \n\nHe couldn't argue with that logic and stood still while she corrected his attire, kissing his nose as she finished. He then watched as she got into her own period garb, doing so much more efficiently than he had done. She saw him looking at her and winked. \n\n\"In spite of my physics major, I also did a lot of work in theater,\" she quipped, holding her top loosely in place over her opulent breasts. \"I've been in Les Mis a few times, so I know my way around period garb.\" \n\n\"I feel bad about you bringing that jewelry to trade for money,\" he said, wishing he had more to offer. He didn't just yet, however. \n\n\"Oh, they're nothing, it's just old gold I never wear,\" she said dismissively. \"I'd probably just end up selling them in a pawn shop at some point. This way, at least it's getting some use. I sell these things I never wear, we get the proper currency, then we go and have some fun. I don't see how this can be a bad thing.\" \n\n\"I guess I just feel like it should be me paying.\" Mark murmured, trying not to blush. \n\n\"Silly,\" she giggled again. \"You're an eighteen year-old boy. What one earth could you possibly have accumulated that the timestream would be interested in?\" \n\n\"Well, you got me there,\" he sighed, giving up and letting her continue. \"Maybe I'll make it big in the timestream and then I can keep you buying you the presents you deserve.\" \n\n\"Ooh, you honey-dripper,\" she cooed, smiling and kissing his nose before stepping back and examining him. \"Well, you're starting to look the part. I'll use some gel in your hair to tousle it a little and then I think we're probably as close as we can get, since neither of us has syphilis or tuberculosis.\" \n\nHe waited while she fixed his hair and then took care of her own, pulling her golden locks back in a bow. She was wearing a peasant dress, one that accentuated her small waist and large bust. His outfit, was more akin to a gentleman of northern Europe, with a blue vest and white breeches that he found rather tight, especially around the crotch. \n\n\"So, milord,\" she lilted, threading her arm through his and smiling at him. \"Shall we sally forth?\" \n\nHe nodded and walked over toward the time machine, his chronometer in hand. \n\n*** \n\n\"Combien allez-vous me donner pour ce pendentif?\" Becky asked the owner of the dingy little shop they were standing in. Candles flickered on the walls, dimly illuminating the musty room. The shop-owner, a wizened little man wearing crooked spectacles, looked up her with rheumy eyes. He held out a gnarled hand and she gently put the dull gold bangle into it. Her brought it close to his face, examining it intently. He weighed it in his palm and then scratched the inner surface, testing its contents. He licked his lip as he considered her offering. Finally he put it down. \n\n\"Onze Louis,\" he declared, nodding. \"Onze Louis, quatre livres, douze sous et vingt-et-trois deniers.\" \n\nMark looked at Becky, who was considering what he had told them. After a few seconds, she seemed to think he was being reasonable. \"Bien. Tout en livres et sous, s'il vous plait.\" \n\nThe man counted out one hundred and sixty-six sous and pushed them across the counter. His eyes widened slightly as she pushed a gold necklace and two rings to him for appraisal. Half an hour later, they exited the shop with a small purse containing the equivalent of nearly fifty Louis, a small fortune by the standards of the period and their locale. \n\n\"Here you go, milord,\" she said sweetly, pressing the purse into his palm. \"It's only appropriate that you carry our funds, since you're the one cosplaying as the aristocracy.\" \n\n\"Except my French sucks balls.\" Mark muttered as they walked down the dirt road. It was mid-morning and they'd arrived in a fallow field outside the town. Google maps indicated that it was empty in the modern day and online archive maps from France in 1652 indicated that it was much the same way back then. With careful calculations of time and distance, they'd arrived without incident. \n\n\"Well, you speak Spanish, so we'll pretend you're from Madrid or something,\" she said simply, holding his arm again. \"And I'll be the lusty French tart from Rouen who travels with you, keeping you enamoured with our fair country.\" \n\n\"You'd be stupidly good at LARP, you're really getting into this,\" he sighed. \"Any other hidden talents I should know about?\" \n\n\"If I told you then they wouldn't be surprises,\" she pointed out. \"We women love to be mysterious.\" \n\n\"Well, at least you're a woman, most of the girls I know who do that stuff are just crazy.\" \n\n\"That's because they're teenage girls, who are, by definition, 'bugfuck insane'.\" Becky added. \"A lot of women are too, I suppose, but at least there's a chance our hormones have straightened out. Probably not much different here, except for the mortality rate.\" \n\nThey walked down the cobblestone rode, attracting the occasional stare as they walked into the town. They stopped a stout, middle-aged man and asked where they might get some decent food and accommodations. \n\n\"You are dressed rather unusually to be walking,\" he said, looking at Mark. \"You seem to be a gentleman of quality, sir. I am the town's physician and apothecary, my name is Henri. And yours, monsieur?\" \n\nMark stuttered. \"Mark, uh... mon nom... es...\" \n\n\"Marco,\" Becky interjected suddenly, relieving him of the burden of struggling to make his name known in French. \"He is Senor Marco Del Strade, and he is a baron from Valencia.\" \n\n\"I thought I was from Madrid.\" Mark whispered out of the side of his mouth. \n\n\"Shut the fuck up, I'm thinking on the fly here!\" she hissed back. \n\n\"What did the Spaniard say?\" asked the portly physician. \"That didn't sound Spanish.\" \n\n\"A curse of our association,\" she said sweetly, beaming a radiant smile at him. \"The baron speaks no French, and I no Spanish, so we communicate en Anglais, with which we both have some facility.\" \n\n\"A rather unusual arrangement,\" grunted the man. \"Nonetheless, it would not do for our humble town to allow a gentleman of quality to not be looked after. I would recommend L'Auberge Des Loups.\" \n\n\"The Wolves' Inn?\" Mark muttered outloud, knowing enough French to get that translation. \"That doesn't sound too safe.\" \n\n\"Be at ease, my friends,\" Henri said, chuckling. \"The wolf is on our town coat of arms, and the Inn is our most reputable establishment. If you have the money, they will give you what you need.\" \n\nHe turned and pointed down the road. \"There, you can see the inn from this spot. The two-story building with the gambrel roof and all the smoke coming out of the chimney. See it?\" \n\n\"Yes, good sir, and we thank you.\" Becky said, curtseying before smiling at the man and putting his rather fat, gout-ridden hand in hers. \"For all of your help.\" \n\n\"Ah, well, yes,\" he said, blushing and withdrawing his hand from hers. \"When you go to the inn, tell the proprietor that Henri sent you. This will make things easier for you.\" \n\nAnd with that, the man waddled off. \n\n\"He seemed nice, I guess,\" Mark mused as they resumed their trek into the town. \"I mean, I missed a lot of what you two said, but it seemed to agree with you.\" \n\n\"We just need to mention his name when we get to the inn and that'll apparently make our lives easier.\" Becky replied, thinking how quaint everything was. She couldn't believe she was actually in seventeenth century France! \n\nBut then, she was fucking her former student who was a time-traveller, so clearly anything was possible. She had already promised herself she would enjoy every moment of this experience. She'd chosen the year as carefully as possible, noting that there were no major Plague outbreaks mentioned and she had insisted they bring very discretely concealed medications with them. \n\nIgnoring the stares of the townsfolk, they continued down the main street until they reached the inn. They tacitly avoided stepping in the various effluences that trickled between the cobblestones and stepped over the unconscious peasants who were sprawled in the middle of the street before opening the faded green doors and entering. ",
        "Dark and musty, lit by wall sconces and an ancient wrought-iron chandelier overhead in which guttered many candles, the large common room was like something out of an HBO special, minus the lighting budget. Large, round table dominated the space, while a great hearth and a long counter encompassed most of the back wall. Lots of sun-browned peasant faces turned to look at them while some stringed instrument plunked away from a corner. The place smelled of smoke and what was probably body odor. \n\nStill ignoring the stares, Becky led Mark up to the counter, behind with stood a surly-looking man with a black moustache and beard. He observed them with interest as they approached. Mark stood silently while Becky addressed the man in French. \n\n\"My lord the Baron is looking for clean and welcoming accommodations for the night,\" she began, indicating Mark. \"Henri sent us to you, saying that you were the establishment in this town worthy of his business.\" \n\n\"If you can pay, then yes, we will be able to room you comfortably,\" he answered, looking at Mark. \"Our best room is one livre per night. I assume the baron can afford this?\" \n\nShe looked at Mark now. \"A single night is one livre. Those'd be the silver coins. Get one out and just give it to him, without showing how much you actually have.\" \n\nMark nodded and fished out one of the coins indicated, putting it on the counter for the proprietor to inspect. Satisfied, the man nodded. \"This will cover the room. If his lordship has need of a bath or food, we can provide these things as well.\" \n\n\"Fresh food?\" she asked pointedly. \n\n\"Only the freshest for the lord,\" laughed the man loudly, causing people nearby to chuckle. \"Is he a mute?\" \n\n\"No, he is Spanish and speaks no French,\" she said flatly, fixing the man with a hard look. \"You can speak to me, his servant, if you feel the need to communicate. You can bring him food now, and your finest wine, good sir.\" \n\nShe then turned and took Mark's arm, leading him over to an empty table in the corner, once again ignoring the gazes that followed them. She sat down and sighed, nodding. \n\n\"We'll eat and then see about the room and a bath,\" she declared, looking around and taking everything in. \"If it's big enough, I'm sure we can get into all sorts of trouble in the tub.\" \n\n\"I'd like that,\" he said, finally relaxing. \"I'm glad you're taking to this so easily, because I'm way out of my element. London in the 1880's was hard enough, and all I was doing was pretending I was an American traveller. France in the time of the Louis the Sun King, that's a little out of my league.\" \n\n\"Don't worry, once you hit your stride, you'll do fine,\" she said gently, patting his hand. \"I've just had more weird experiences over the course of my life than you have and am adapting a little quicker is all.\" \n\nA jug of wine, two goblets, some hearty bread with butter and some onions and cheese was brought over by a wench who looked like John Rhys-Davies in drag. She belched and tottered off, having delivered her goods. \n\n\"Although I'm not so sure about adapting to that.\" Becky said, shaking her head to clear it of the image. She unstopped the jug and poured the dark red wine into their goblets while Mark portioned out the bread, butter, cheese and onions. They both dug in, finally realizing how hungry they were. \n\n\"Oh, wow, that's good,\" Becky remarked, looking into her goblet, having tried the wine. \"Just remember to eat a lot of bread and butter, Mark, or you'll have the hangover from hell.\" \n\nHe'd never had a wine quite like this before and they quickly polished off the jug before ordering another. They finished their bread and cheeses before being presented with a roasted suckling pig and two pheasants, stuffed with local herbs. They enjoyed eating, but the wine was strong enough to eventually get through all the food they'd lined their stomachs with. Becky was giggling and tipsy within the hour. \n\n\"I can't beli... believe we're here in France,\" she said, her head tilted to one side. \"An' we're gonna fuck... in the tub... an' then in our room, because... because... defiling the timeline... sounds like fun. It's fun, you know, to fuck across history...\" \n\n\"It is,\" Mark agreed, not as drunk as Becky but still feeling rather buzzed. His tongue felt thick from the wine, which she had explained was not treated with any modern pasteurization process and therefore would be full of tannins and sediments they would need to account for or suffer an assured hangover. \"And you're the person I'd want to do it with, Becks...\" \n\nBecky giggled and slid her hand along his leg, finally arriving at his crotch and giving the bulged contained in the tight breeches a squeeze. \"You're not... not a time cop... you're a time cock... timeless cock...\" \n\nSome musicians had come in a few minutes earlier and were sitting in another corner of the common room. They struck up a lively tune on their lutes, fiddles and a small drum. Becky's eyes lit up as the music reached them. \n\n\"Oh, I love this song!\" she said loudly in English before hopping up from the table and dancing her way with abandon into the middle of the room. People watched on and began to clap and cheer as she stood on a table and began capering. \n\n\"How the hell does she know this song?\" Mark wondered, frowning as he watched his Physics teacher begin to dance and sing. \n\nAh! Si mon moine voulait danser! \n\nAh! Si mon moine voulait danser! \n\nUn capuchon je lui donnerais \n\nUn capuchon je lui donnerais \n\nDanse, mon moine, danse! \n\nTu n'entends pas la danse \n\nTu n'entends pas mon moulin, lon la \n\nTu n'entends pas mon moulin marcher. \n\nAh! Si mon moine voulait danser! \n\nAh! Si mon moine voulait danser! \n\nUn ceinturon je lui donnerais \n\nUn ceinturon je lui donnerais. \n\nDanse, mon moine danse! \n\nTu n'entends pas la danse \n\nTu n'entends pas mon moulin, lon la \n\nTu n'entends pas mon moulin marcher. \n\nMark watched in wonder as she tottered back over and flopped onto the bench next to him, breathing heavily and perspiring. She grinned at him lop-sidedly and winked, still obviously rather inebriated. \n\n\"Why did you know the lyrics to that song?\" he asked, utterly baffled. \n\nShe poured herself more wine and drained her goblet in one gulp, with a very loud GLUK! noise. Clearly, she was intent on partying. \n\n\"Went to... a Cath'lic school... run by nunsh...\" she slurred, trying to fill her cup again. \"Lotsh of shingin' to... keep our little teen girl mindsh... off sheksh... Fuckin' love that shong, used to shing that shong... all th' time... fuckin'... great to dansh to...\" \n\n\"Yes, I noticed,\" he said, nodding and smiling. \"You were almost flashing your tits and your pussy at the... the patrons...\" \n\n\"They can peek... but noooooo touchy...\" she said, taking another drink. \"Thish pushy... only for you... I think... we'll shee...\" \n\nShe turned and looked at him, her eyes glazed and her skin flush from her exertions. \"We're here... t'gether, Mark, but... if you... y'shee a girl y'wanna fuck... I'm okay with- with that. \"Jus' don' get the crabsssss-ss-ss-ss-ss-s-ss-s-s-s!\" \n\nShe had broken into a snickering fit, pressing her forehead against the table as she tried to not fall over completely. Mark was chuckling and feeling really good watching how silly his teacher was being. She looked up suddenly, trying to wear a serious expression. \n\n\"But one thing,\" she cautioned, holding up a finger and wagging it at one of the Marks she was looking at. There were three of them, so she chose the one in the middle. \"No, more'n one thing, but th' one thing'sh... important...\" \n\nShe leaned forward to whisper to him. \"Keep your dicky in your pantsh unlesh... unlesh you know she'sh eighteen... 'cush the lawsh right now... 'sh prolly legal to fuck 'em younger... but... you're from our time... our time...\" \n\nShe glowered at him drunkenly. \"An' we don' fuck 'em if they're not eighteen... y'got it?\" \n\nHe nodded. \"Eighteen or older. Got it. And you can... miss, you can-\" \n\n\"Not mish,\" she interrupted, waving away his comment. \"Becky. Not fuckin' mish, remem'er?\" \n\n\"Sorry,\" he intoned, letting out a belch and patting his chest. The wine and cheese tasted great but were really fucking with him. \"I'll be better... remember...\" \n\n\"Well, what wash it I can do?\" she asked. \"You were gonna... shay... I could do... what wash it?\" \n\nMark thought about that for a moment, unable to push through the wine-induced haze in his head. \"I don' remember...\" \n\nThey both broke into laughter, much to the amusement of nearby patrons. Becky had her head on the table again, giggling until Mark slammed his palm on it in an expression of entertainment, shocking her and making her yelp. They looked at one another and burst into more fits of laughter. \n\nThey'd drained another jug and polished off the pig and pheasants. Mark felt incredibly full, and drunk. Becky could barely stand up and she asked Mark to take her arm and lead them over to the proprietor behind the long counter once again. She shook her head a few times to clear it and he waited patiently for her to speak. \n\n\"Shir, we'll be needing the bath now, and our room,\" she said slowly, making sure she could be understood. \"Would you be so kind ash to show ush the way?\" \n\nHe tilted his head slightly. \"Comment?\" \n\n\"You just spoke to him in English, Becks.\" Mark told her. Her glassy eyes widened and she squeezed her eyes shut, willing herself not to die of embarrassment. \"For fuck's sakes...\" she muttered. She took a deep breath and repeated herself in laboured French. He nodded and led them up the back, away from the common room. \n\nIt took Becky fifteen minutes to get up the single flight of stairs because it wouldn't stop spinning. \n\n*** \n\nMark sighed as he sat in the large, round wooden tub, his arms resting on the side while his hands gripped the rim. The steaming water splashed over the side as he shuddered and groaned loudly, cumming. Spent, he sank back onto the small ledge and breathed heavily. The water stirred and Becky surfaced, exhaling. Her golden hair clung to her wetly and her glorious breasts glistened. She grinned at her student. \n\n\"See?\" she declared, obviously pleased as she pulled her hair over her shoulders. \"Told you I could make you cum before having to surface for air.\" \n\n\"Jesus, you must've been down there over two minutes,\" he breathed, never ceasing to be stunned by her carnal skills. \"How the hell do you hold your breath that long?\" \n\nBecky cricked her neck and settled onto Mark's lap, her arms around his neck. She gave him a peck on the nose. \"Lots of cardio and physical training.\" \n\n\"Obviously.\" Mark agreed. \"Not that I'm complaining, mind.\" \n\n\"Mmmm, didn't think you would,\" she purred. \"But only half of this equation has been solved, big boy. I haven't cum yet. Since you're friend down there is taking a nap, how good are you at holding your breath?\" \n\n\"Not that good,\" he chuckled. \"I'm happy to lick your pussy, but you'll need to keep it above water.\" \n\nShe smiled and rolled her eyes before getting off his lap. He moved aside and allowed her to kneel on the little ledge he'd been sitting on, leaning over the rim of the tub and resting her forearms on it. She looked back at him and winked while wiggling her sexy, toned behind him. Her pussylips were dripping and looked inviting. \n\nMark knelt in the middle of the tub, behind Becky's ass and took hold of it, kissing the wet cheeks. Becky cooed and squirmed under the attention, one of her hands cupping a breast and squeezing it. She could feel Mark's lips and tongue moving slowly inward toward her core. She bit her lip and sighed. \n\nHe touched her pussy, kissing it gently and sliding his tongue up and down the slit, which parted easily before him. Her heard her moan and tasted her tang as he pushed inside her while using his thumbs to pull her inner thighs apart so he could get further into his teacher's womanhood. She shivered and pushed back against him, eager for more. \n\n\"Mmmm, Mark...\" she cooed, her eyes shut as she felt his tongue inside her. \"Yes, right there, lover. Ohhhhhh, you really know how to use your tongue...\" \n\nHe smiled at her compliment and pulled his tongue out to massage her clit with it, rolling around the little bud and making her gasp sharply. He slid a finger inside her, followed by another and she groaned. He could feel her pussy tightening around his digits and began to push them back and forth slowly while he nibbled and sucked her clit. \n\nBecky shuddered again and leaned down, biting at her knuckle while squeezing her breast harder, massaging it vigorously. Mark lashed her clit while fingering her tight slit and then slid a single finger into her ass. Her breath caught in her throat and she gripped the ledge of the tub, her fingers raking along the iron-bound wood. \n\n\"Fuck, Mark,\" she whimpered. \"Yes, make me cum. I want to cum in your mouth!\" \n\nMark worked her pussy harder, sliding the fingers back and forth, pushing in deeper each time. His tongue massaged her clit relentlessly or he sucked on it. She was squirming and writhing back against him, groaning unashamedly. He was beyond caring if anyone heard them at this point. \n\nBecky was panting heavily now, her eyes glazing over as she ground her ass against Mark's face, feeling his fingers in her pussy and her ass, wiggling and pushing her closer and closer to orgasm. She would miss his cum inside her, but she would surely get it before long, Mark was developing good stamina under her guidance. \n\nShe arched her back and moaned loudly as she began to cum, pleasure blossoming through her from her pussy and out to her fingers and toes. Her body shook while she climaxed, the wet, gooey ecstasy of colours in her mind letting her- \n\nThere was a smash, like wood splintering, the creak of worn metal. Her eyes snapped open in confusion, the unreal delight of her orgasm draining away as men in masks and dark clothes surged into the room, at least five of them and more shadows in the hallway. Most were holding knives or small clubs, but she saw the one in front carrying a heavy flintlock pistol. Even in the darkness of the room, lit only by candles around the wall, she could see the wicked scar on his cheek. \n\n\"Arr\u00eatez! Reste tranquille et je ne te tuerai pas!\" he rasped, pointing his pistol at her while his comrades moved into the room and began searching for something. \n\n\"Qui es-tu?\" Becky demanded, getting angry not only about the intruders, but the fact that her orgasm was slipping away. She could feel Mark still kneeling behind her, looking on in shock at what was happening. \n\n\"Tais-toi, salope!\" the man barked, moving toward her and drawing a wicked knife from his belt, his men now ransacking the room. He placed the point of the knife at her throat and Mark felt a cold fear run up his spine. \"Do not speak to me in that tone if you-\" \n\nHe never finished the sentence as Becky grabbed the wrist of the hand holding the knife and twisted, hard. The man with the scar yelped as he lost his grip on the knife and the blonde woman leapt out of the tub, her knee smashing into his face. He staggered backward and then went flying as her foot slammed into his ribcage. He crashed through a table and this got the attention of the thugs he'd brought with him. They all looked in shock at the naked blonde tigress for a moment and then surged in on her, knives and cudgels ready. \n\n\"A little help here, hero!\" Becky shrilled as she scampered away from the incoming bandits. \"This isn't sex, don't make me do all the work!\" \n\n\"Hey now!\" Mark protested, half-rising out of the relative protection of the tub because of her taunt. \"It's not like you do all-\" \n\n\"Goddammit, Mark!\" Becky shouted as she ducked the swing of a club and punched her attacker in the balls. \"You'd better hope they kill us, because if I survive, I'm going to crack open your skull and suck your brain out with a straw! Help me!\" \n\nMark came to his senses and vaulted over the side of the tub, trying not to think about the fact that he was buck naked and rushing toward his teacher and her assailants. He crashed into the smallest man, bearing him to the ground and winding him. Not sure what else to do, he began punching the bandit, knocking his cloth mask askew so he could not see. The man struggled wildly to get out from underneath his naked foe. \n\n\"GLAK!\" Mark choked out as another thug grabbed him by the throat from behind and started pulling him off the man he was on top of. He could feel his tongue beginning to bulge out of his mouth and was thinking he must look incredibly foolish, like Jabba the Hutt when Princess Leia strangled him with the chain. \n\nHe couldn't die like that. He couldn't. With a limp dick and a swollen tongue? In front of Becky? \n\nHe'd taken some karate, although he was no expert. His skin was still wet and he went limp, using sudden deadweight to break his attacker's hold on his throat, although he hissed in pain when he felt the man's ragged nails crease through his skin as he lost his grip. \n\nWith a thud! Mark hit the floor and did the only thing he could think of doing- he grappled onto the man and took him down in a rough tumble. He desperately rolled until he was on top and rammed his knee into the man's stomach. He heard the man wheeze but then sparks exploded behind his eyes as something cracked across the back of his head. He didn't fall over but scrambled away in a panic, wishing he could see in the darkness or that the room would stop spinning. \n\nBecky landed in a heap on top of him, knocking him back to the floor. She was still naked and incredibly angry from the sounds of her. \n\n\"That's it, buster!\" she roared as she surged back to her feet and charged her attacker. Mark dazedly looked over and watched as his teacher sprinted across the room, her foe giving chase. She leapt in the air and to the wall, her foot making contact. Before anyone was ready, she sprang backward, smashing her foot across the man's jaw in a roundhouse kick that they must have heard on the edge of town. The man went down like a sack of flour. \n\n\"Alright, who's next?!\" she shouted, standing in the middle of the room, naked and scratched up. She grabbed a pewter jug and slammed it backward into the head of a man coming up behind her. He went down. \n\n\"I didn't know you did parkour!\" Mark called out as he tackled another thug from behind, taking him to the floor. \n\n\"I do a lot of things to take out my sexual frustrations!\" she snapped back, picking up a bench and throwing it at two assailants to keep them off-balance. \"Parkour, jiu-jutsu, archery, Krav-Maga. I was kind of hoping that fucking would allow me to vent a little steam!\" \n\n\"I can see why!\" Mark said as he smashed the man's face into the floor repeatedly. Even in his weirdest dreams, he'd never imagined fighting French bandits while buck naked. He wondered if the Temporal Enforcement Agency would be up his ass about this incident. \n\n\"Oh, shut up!\" she shrilled, kicking a man between the legs from behind and then suplexing him after he doubled over in pain. The floor splintered with the impact, but Becky rolled to her feet and grabbed his cudgel. \"You still owe me an orgasm, mister!\" \n\n\"Okay, okay!\" Mark said hastily. A sallow man confronted him, wearing an eye-mask, who brandished a knobbed club. The bandit grinned at him, clearly intent on bashing his head in. Thinking quickly, Mark stood and looked somber, clasping his fist in his hand and bowing, like they did in his mom's tai chi class. \n\nThe bandit looked confused for a moment before Mark bowed again and then made a motion urging the bandit to do the same. Still not sure what was happening but wanting to get on with things, the bandit bowed at the waist clumsily. ",
        "Mark broke a chair over his head before grabbing the cudgel and rushing to Becky's side. \n\n\"So very nice of you to join me,\" Becky panted as they faced off against the three remaining intruders, who were trying to surround them. Mark and Becky backed up toward the outer wall, the window behind them. The men closed in. \n\nThere was a groan and a clatter as the man with the scar on his cheek slowly got to his feet from the pile of broken furniture he'd been laying in and approached them, his henchmen parting to make way for him. \n\n\"Pour votre arrogance, je vous verrai mort.\" he growled, pointing his pistol at Mark. Trapped, Mark squeezed his eyes shut... \n\n*click!* \n\nMark blinked and opened his eyes. The scar-faced man was scowling at his pistol, which was letting off a small tuft of smoke but had failed to go off. Was the powder wet? \n\nWith a roar of fury, Becky was on him. \n\n\"Get the other three!\" she yelled as she rearranged his face. \"I've got this one!\" \n\nToo bewildered to be afraid and exhilarated to be alive, Mark charged the remaining three thugs, who were all backing away in confusion. None of this had gone according to plan, the majority of their fellow bandits were strewn around the room, beaten unconscious by a naked man and a crazy blonde hellion with big tits and a shaved cunt. \n\n\"C'est des conneries!\" she raged as she beat the man around the room, showing no mercy. \"I came to the Sun King's France to drink wine, have a good time and get laid! And you fuckers just had to try and rob me, didn't you? All sorts of peasants to pick on, but noooooooo! You thought you'd get lucky with two strangers! Well va te faire enculer, pal!\" \n\nMark lost track of the whirlwind of violence his teacher had become while he ducked the swipe of a knife and then kicked the leg out from under a thug, dislocating his knee and dropping him. He whirled around and got lucky with the cudgel, cracking it across the jaw of another man, who spun like a top and fell to the ground. He was beginning to notice that he was taller than just about all these men, often by a significant margin. Some were barely taller than Becky. \n\nHad nutrition really been that bad in this era? \n\nThe last one got desperate and lunged at him, but Mark twisted and used his foe's momentum to send him sailing past and smashing into the window. The unconscious man slumped halfway through the shutter and the sounds of commotion in the street below reached him. He shouldn't have been surprised that they were causing a stir. \n\nHe looked around the room to see if any other foes were standing, but saw only sprawled bodies everywhere, some stirring slightly. The only other sound was that of a face being punched. He looked over to see Becky squatting on the scarred man's chest, grappling into his collar and socking him repeatedly in the mouth while swearing in French. \n\n\"Nique ta mere!\" *thump!* \n\n\"Oooooooh, you really pissed me off!\" she growled as she huiled the man up by the shirt and dragged him stumbling over to the tub, where she pushed his head under the water. He thrashed about in a panic before she let him back up, gasping for air. \n\n\"You like that?!\" she shouted, thumping his head off the side of the tub several times for emphasis. \"Y'think it's funny to barge into a girl's room when she's about to get her rocks off?! Is that it?!\" \n\nShe shoved his head back underwater again, waiting until he was thrashing around in terror again before pulling him back out and dragging him over to the bed. She threw him against it so that he was kneeling, supported by the straw-stuffed mattress as he swooned. \n\n\"Hold him down, Mark...\" she growled. \n\nUnsure of what to do aside from comply, Mark got on the bed and pinned the man's arms against the mattress, putting all his weight on them to keep him in place. He watched in growing confusion as Becky knelt behind the man and yanked his breeches down, exposing his pock-marked behind. She found his flintlock pistol and glared at it for a moment before fiddling with the mechanism, cocking it. \n\nThe man's eye flared wide and he howled in pain and horror as she pushed the barrel inside his ass. \n\n\"Alright, buttercup,\" she said with a sweetness that oozed cruelty. \"You're going to explain who told you to come and rob us. And if you don't, I pull the trigger and put your brains on the ceiling.\" \n\nMark warily shuffled aside on the bed, away from the top of the man's skull. \n\n\"Do you understand me?\" Becky asked quietly, giving the pistol a jiggle. \n\n\"Probably not,\" Mark said, trying to sound conciliatory. \"You're speaking English again.\" \n\nBecky realized he was right and swore under her breath. Rather than say it all again in French, she decided to just get to the point. She pressed the pistol in an inch further, ignoring the resistance she encountered. \n\n\"Dites-mois qui vous a envoye,\" she growled. \"Tell me or I blow an asshole in the top of your head.\" \n\n\"Henri!\" the scar-faced man gasped and whimpered. \"He told us you would be here and you have much money!\" \n\n\"Oh, did he now?\" Becky growled, forgetting to speak French as she glared at the bandit. \"I am going to eat that man's children...\" \n\nShe roughly grabbed the man and spun him around to face her, without removing the pistol muzzle from his ass. His face was pale with fright and artfully rearranged by her fist. He was still leaning back against the bed, not daring to move, breathing heavily. \n\n\"Maintenant,\" Becky began, still glowering at him. \"You're going to tell me where to-\" \n\nShe paused as she looked down at the man's crotch and saw that he was sporting a throbbing erection. \n\n\"Are you fucking kidding me?!\" she shouted angrily, yanking the pistol out of his ass and then slamming the grip across his head with a loud crack! The bandit's eyes rolled into his head and he slumped to the ground, very unconscious. \n\n\"Huh,\" Mark said as he glanced down at the prone villain. \"I guess guys really can get erections from that sort of thing. I thought it was bullshit.\" \n\n\"It ought to be, under these circumstances,\" Becky groused, folding her arms and looking pissed off. \"You don't spring wood when a girl's got a gun shoved up your ass, especially after you try to rob her! I son't feel the least bit bad about not giving him a reach-around. Fucker...\" \n\n\"Would you really have pulled the trigger and blown his brains out?\" he asked somewhat nervously. \n\n\"Oh, of course, not,\" she snorted, giving him a wry look. \"I'm not a monster.\" \n\n\"You sure fight like one.\" Mark said, using his hand to indicate the carnage around the room. Bad guys were strewn everywhere, and he was pretty sure he couldn't claim most of them. \n\n\"Well, they had it coming,\" she sniffed. \"They interrupted my orgasm. It's just rude.\" \n\nShe then turned and looked at him, her expression much softer. \"Thank you, Mark, for all your help. You saved me, I couldn't have done it on my own.\" \n\n\"Yeah, well, you wouldn't have been in danger if I hadn't brought you here in that damn time machine.\" Mark said, a feeling of guilt washing over him. \n\nShe knelt next to him on the bed and hugged him close, their bodies pressing together. She smiled at him and kissed his nose. \n\n\"Don't be sad,\" she cooed. \"I haven't had this much adventure in ages.\" \n\nMark smirked. \"If you've got romps in your past that compare to this, I wanna hear about them.\" \n\n\"Oh, you'll need to do a lot more fucking to coax those out of me, young man,\" she whispered, reaching down between them to take gentle hold of his cock and begin stroking. \"But maybe I won't make it too difficult for- Mark, it's very rude to stare off into space while a girl is trying to seduce you. Mark?\" \n\n\"I'm not staring off into space, Becks.\" Mark said, staring past her shoulder. \n\n\"Oh, really?\" she asked, putting her hands on her hips and looking annoyed, still kneeling in front of him. \"Then what is so fascinating that even my tits can't distract you?\" \n\nHe indicated a direction behind her with a nod. \"Voyeurs.\" \n\nBecky turned her head slowly and looked across the room at the door. Her eyes narrowed as she noticed several dark shapes in the hallway, gazing into the room in astonishment. With a sigh, she got off the bed, grabbed a candle that hadn't been destroyed and walked over to the door, clearly beyond caring that she was still naked. She could see men and women now, backing up uncertainly at her approach. \n\nShe also spied one particular silhouette, large and with a big beard, lurking near the back and trying to not be seen. \n\n\"Oh no you don't, pal,\" she called out, snapping her fingers and then pointing at the man before making a beckoning motion. \"Get your sorry ass over here...\" \n\n*** \n\nMark sighed in pleasure and took another drink from the jug of wine he was holding, trying to not spill any. He pulled his lips away and looked down his body. He was sitting in a large, plush bed, blissfully naked. Between his legs, a local girl with dark brown hair girl was bobbing her mouth up and down on his cock ardently, clearly interested in pleasing him. \n\n\"This one's the proprietor's daughter?\" he mused, enjoying her mouth. She paused sucking on him for a moment to look up and smile eagerly before returning to her task. \"She loves dick for sure.\" \n\n\"She's one of his daughters,\" Becky agreed, propped up beside him, equally naked and holding the head of a girl who was lying between her legs, her face buried in the blonde's pussy, which she was licking hungrily. \"This is the other one.\" \n\n\"You frightened him so badly that he's letting us fuck his daughters?\" Mark laughed. \"He's given us his personal quarters, given us all the food and drink we want and we can fuck his daughters?\" \n\n\"What can I say, I'm persuasive.\" Becky grunted, shivering and grinding herself into the face of the daughter. \"He'll let us stay for the week, he doesn't want word getting around that a noble had a fiasco in his inn. He'd probably give us his wife, too, if I demanded it. We're too close to Paris and word would get around and wreck his business.\" \n\n\"If trashing that room and leaving bandits everywhere doesn't, nothing would.\" Mark breathed, holding the girl by the hair. \"Seriously, it looks like Metallica stayed in that room now. What'll we do about that Henri asshole?\" \n\n\"I'll think of it later, I'm a little busy.\" Becky hissed, squirming and knotting her fingers in the peasant girl's hair. \"Gnnnnn, it's been so long, since a girl ate me.\" \n\n\"You had a sexy phase? I didn't know you liked girls.\" Mark said, smirking at her. \n\n\"Back in high school, maybe,\" Becky admitted. \"Haven't been with one since then.\" \n\n\"But I do have a question,\" he said, focusing past the daughter's wicked mouth. \"In all the hassle and afterward, I never asked the innkeeper how old his daughters were.\" \n\n\"So?\" Becky gasped, eyes squeezed shut and bucking her hips. \n\n\"Well, what if they're not eighteen? You said yourself that we have to hold ourselves to the standards of the time we come from, right?\" \n\n\"You're thinking of that now?\" she groaned through clenched teeth. \"I... fuck... Mark, it's 1640 right now. That means these girls can't be any less than three hundred and ninety-two in our time. Good enough?\" \n\n\"Good enough!\" he laughed. Rationalization seemed to be a handy skill when you were time travelling. He looked over and saw Becky pull the girl away from her crotch and rustle over to him. He stayed still while she straddled his lap, facing down his body. With one hand, she took hold of his cock and held it steady while she positioned herself above it. The two sisters, every bit as naked as them, nestled on the bed below his legs, pressing against one another's sides. They grinned at one another and kissed, their tongues tangling as they waited for Becky to continue. \n\nWith a sigh, his teacher lowered herself onto his cock, the mushroom head splitting her wet lips before sliding inside her. She sunk down with a groan until he was in to the hilt. She then slowly laid herself back against him, allowing Mark fondle her breasts while she squirmed and writhed on him. The sisters moved in and began licking at his cock or kissing her pussylips and clit while the two guests fucked. \n\n\"Ohhh, Heaven...\" Becky purred as she caressed his cheek, turning her head to kiss him, their tongues slithering around while she undulated slowly on his lap. \"This is what time travel's all about...\" \n\nMark held her with one hand, fondling her breasts and pinching her nipples while his other hand found the wine jug and poised it just over her torso. She hummed in pleasure as he trickled the dark red liquid over her fair skin, letting it cascade down her exquisite form. One of the sisters noticed and knelt up, beginning to lick it off Becky's breasts and stomach while the other noisily slurped it from the Mark's cock and Becky's pussy. \n\n\"God, forget the Sun King's France, we belong in Caligula's Rome,\" Becky moaned, shivering in delight at how decadent they were being. \"We'll need to- mmmmmmmmm - we'll need to find time to attend an orgy, Mark... how's your Latin?\" \n\n\"Not as good as yours, I imagine,\" he replied, his tongue still swirling around with hers while they fucked. \"But I'd be happy to learn it if we can attend a real orgy.\" \n\nHe put the jug of wine aside and used both hands to molest her again, squeezing her breasts and gripping her skin. Becky writhed and him, pressing down with her hips, shuddering as the two sisters licked her and nipped at her skin. She begged the universe not to let anything interrupt the orgasm she could feel building inside her. \n\n\"Mmmmm, Mark...\" she moaned into his mouth. \"I'm going to cum so hard on you.\" \n\n\"I'm gonna cum too,\" he gasped, feeling his muscles beginning to tingle and his toes curl. \"My first four-way, y'know.\" \n\n\"Mmmmm, cum in me!\" she whimpered, moving her hips in circles faster and faster, kissing him ardently. \"Let me feel it!\" \n\nHe was gripping her tightly, pulling her down onto his throbbing cock, his legs starting to squirm and then she went rigid, gasping before breaking the kiss and moaning loudly and shamelessly. She ground down on him ferociously as he cum inside her, pumping his hips for all he was worth. The peasant sisters licked and lapped eagerly at them, clearly also fingering themselves to orgasm, as they too whimpered and groaned in pleasure. \n\nBecky sagged on top of Mark, their bodies glistening from their exertions, flush with pleasure. She nuzzled her lips against his neck while he caressed her breasts and stomach gently, the two of them basking in the aftermath of their lovemaking. The sisters kept kissing and licking dutifully, clearly not considering their task accomplished. \n\n\"Best sex I've had in centuries,\" Becky giggled into his ear before nipping the lobe. \"You sure know how to show a girl a good time.\" \n\nShe slowly straightened herself up and then turned around to straddle his lap but look into his face. Her arms were around his shoulders while his rested on her waist. His cock slipped out of her and one sister began sucking it clean while the other leaned in to kiss Becky's ass and lap at her pussylips while Mark's pearly cum trickled out of them. \n\n\"It's a good thing I've got iron control of myself,\" Becky whispered softly to him while gazing into his eyes. \"Because a girl could fall for a guy quite easily under these circumstances.\" \n\nHe smiled and rubbed his nose against hers. \"Yeah, I could fall for you too, teach. Never known anyone like you before. Hell, I didn't know you were like you before I got that dumbass idea of trying to go back in time and seduce you.\" \n\nShe kissed his nose and smiled. \"Well I'm glad you did. I think this worked out well for both of us, wouldn't you say?\" \n\n\"I couldn't agree more.\" Mark murmured as he kissed her again. This was a very interesting week so far. \n\n*** \n\n\"Mmmmfff-mf-mmrrrrrrmmmmmffff!\" Henri protested through the cloth gag that was stopping up his mouth. He was decidedly naked, his hands bound while he was tied and trussed up in rope like some sort of shibari revenge nightmare. He was on all fours, his knees and elbows on the ground. Worse still, the crazy blonde woman had poured oil all over his exposed ass, making it shine like a beacon. \n\nMark looked around at their surroundings, in the woods just off to the side of the road. You'd have to be blind not to see Henri from there. \"You sure this is a good idea?\" \n\n\"Since our friend took it upon himself to see us get robbed and potentially raped and killed, I'd say yes,\" Becky replied, standing over their captive, her arms crossed under her breasts while she looked down at him. \"Normally I'd never consider it, but let's be honest, he has this coming.\" \n\n\"Which brings me to my next question,\" Mark said, finishing tying one of the ropes that bound Henri to a tree. He wasn't going anywhere. \"What is it you think he has coming?\" \n\n\"Whatever,\" Becky said, her voice indicating she didn't really care. \"He might get raped by a bear, maybe a gypsy caravan will find him, ants might crawl up his ass, who knows? With any luck, though, no one will rescue him before rectal trauma ensues.\" \n\nShe squatted down in front of him now and removed the gag from his mouth. He coughed and sputtered for several seconds before glaring up at her, his face red with outrage. \n\n\"Vous etes fou, salope!\" he snarled, breathing heavily from the awkward position he had been kept in. He was essentially face-down and ass-up in a forest. \"Vous etes fou!\" \n\n\"If that's true, then it's men like you who make me that way.\" Becky sneered. \"We were perfectly nice to you and you betrayed us. This is a lot better than you deserve, since you tried to have us killed.\" \n\nHe glared at her hatefully. \"Souillon!\" \n\nBecky's eyes widened in shock at the epithet, but before she could react, Mark had lunged in, knelt and punched Henri in the face. The Frenchman went unconscious. Mark glared at him in fury before standing up and looking at Becky, shaking the sting out of his fingers. \n\n\"I don't know a lot of French, but I know what that was,\" he said to her. \"You're right, he deserves a conga-line of wolf dicks up his ass. Let's get out of here before anyone sees us, though.\" \n\nHer smile was a glowing one as she looked at her student, her valiant knight in shining armour who had defended her honour. Okay, maybe he was more of a retard in tinfoil, but he'd get there. He'd have all the time he needed, literally. \n\n\"Let's go,\" she said gently, threading her arms through his and leading him back to the road. \"We have money to spend and lots of places we could be making love in. The Sun King's France awaits us. \n\n*** \n\n\"Y'know, I was thinking we could probably have a lot of fun without getting in too much trouble.\" Becky mused as they sat in the back of a coach, holding hands while it rumbled down a dirt road. \"It'd be great to do things like attend rock concerts we both weren't alive for, like Woodstock, or the Beatles rooftop concert.\" \n\n\"Yeah, that would be pretty cool.\" Mark agreed, smiling at her. \"You're pretty damn cool, Becks.\" \n\n\"Thanks, I've worked hard to become so,\" she said sweetly. \"You've turned out to be a pretty nifty guy yourself. And here you seem like such a doughhead in my class. Cute, though.\" \n\n\"That does bring up a point,\" Mark mused. \"Since I first visited you, we've been fucking and messing around, but we're still out of sync.\" \n\nShe thought about what he was saying. \"Hm, the you I'm talking with is from three months in my future. I see your earlier self in class and just smirk to myself, thinking about how I'm going to probably fuck you that night. You have no idea how hard it is to not stare at your crotch or your ass.\" ",
        "\"And I was too dumb to notice,\" he sighed. \"But I'm worried it might become a problem. I keep coming back in time to see you, but you never catch up. It might end up causing one of those time knots or whatever the agents called it.\" \n\n\"And waiting three months to see you would suck,\" she muttered, scowling at the floor. \"It won't make a difference to you, but for me, it'll seem like forever.\" \n\n\"What if... what if we broke it up into chunks?\" Mark suggested. \n\n\"So, you don't visit me every night like you do now but say every two weeks or something?\" Becky mused. \"That could work, although you'd better toughen up, because I'll be going crazy between visits, humping my bedposts in desperation. When you step through my door, I'll probably tackle you and try to fuck you to death.\" \n\n\"Helluva way to go,\" he laughed. \"But I do think it's a good idea to sync up our timelines, even if it means we have to fuck less for a bit.\" \n\n\"From my point of view,\" she grumped. \"But you're right. Well, I am going to Hawaii for a week, I suppose you could join me.\" \n\n\"I remember you doing that,\" he said. \"We got stuck with that awful sub, the one we all call Miss Grundy. Pretty sure we were all glad when you got back. So, you won't mind me tagging along to Hawaii with you?\" \n\n\"It'll be fun,\" she giggled, stroking his hand. \"We'll go to luaus, make love on a black sands beach and in the bamboo groves...\" \n\nHe considered. \"We'll need a way for me to make some money so I'm not a burden. We have access to a time machine, how hard can it be?\" \n\nThey paused the conversation as they felt the coach slow down and come to a stop. There was nothing but silence for several seconds. \n\n\"What now?\" Becky muttered, wondering if someone was going to try and rob them again. Her hand left Mark's lap and came to rest on the flintlock pistol hiding beside her. \n\nA little slot in the front of the coach opened and a sly, pencil-mustachio'd face grinned back at them. \n\n\"Pardon my intrusion,\" he said in what could only be described as a New England accent. \"But my name is Chester Edgeworth, and I couldn't help but overhear that you're looking to clear a tidy little profit from your time travelling?\" \n\n*** \n\nAuthor's Notes: I'm personally enjoying this story, because I like writing about the complexities of time travel, at least from a sci-fi bumf point of view. Think about history and there's so much fun to be had, especially if you're someone like Mark and looking to get laid. \n\nAnd since we do not, at this point in time, have any particular idea if temporal travel is even possible, let alone how it would work, you might as well refrain from criticizing how the quantum mechanics of this story flow, because it's as good a theory as any. If you have an idea about it, PM me and I'll consider. \n\nAs for anyone who gets confused by the somewhat Pulp Fictionesque aspect of this story, in terms of bouncing around between timelines and incarnations, if you could not follow that movie, don't try to follow this story. It'll just upset you and you'll throw a tantrum on the story's rating. There's the door. \n\nI'm enjoying Becky being the strong one (for now), since strong female leads are often hard to come by. Yes, it's Mark's time machine, but he's an 18 year-old idiot, so he needs a guiding hand. A teacher is as good as anyone. \n\nAnyhoo, I'm hoping this story will give you a chuckle. It's meant to be funny and sexy, not some deep, deep work of erotic genius. Enjoying it on an ephemeral and even visceral level is fine by me. \n\nKeep your stick on the ice! \n\n-Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "time travel",
        "weird physics",
        "action adventure",
        "attraction",
        "teacher"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-02"
}