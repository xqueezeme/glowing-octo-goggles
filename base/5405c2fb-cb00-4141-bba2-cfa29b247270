{
    "title": "An Obsession...or Two",
    "pages": [
        "It wasn't intended. It wasn't a conscious decision. Hell, it wasn't even a curiosity or a fantasy of mine. It just happened.\n\nI was a product of the 21st century. I grew up on the internet, Facebook, Twitter, and several other types of social media. Therefore, by the time I went off to college, I was somewhat desensitized to certain things\u2014sex not least among them.\n\nGrowing up in a home without a mom, but with just my dad and older brother was challenging. But that just seemed to desensitize me even more. Dad tried his best to insulate me from Brian's shenanigans, but he was a year older than me and quite the jokester.\n\nI had to get used to him strutting around the house in his tidy-whities with his boner obvious, or even worse, him walking naked from his room to the bathroom with it waving proudly in front of him. When he'd see me, he'd laugh, grab his boner and wave it all around, \"Come and get it.\" That was just Brian. I'd roll my eyes and shake my head.\n\n* * * * *\n\nOne night, I was in my dorm room at UT Austin, and chatting in a local Dallas chat room on the internet. A guy named 'DifferentStrokes' sent me a private message that read, \"I have something you'll probably want to see.\" \n\nI laughed out loud. I found it funny that every guy in the chat room automatically assumed I'd like to watch them jerk off. I contributed some of that to the picture I'd posted on my profile. I wasn't nude in that picture by any means, but it was a rather sexy picture. I was in a silk tank top, braless, and with more than a little hint of my D cup tits showing.\n\n\"Thanks, but I don't care to see you jerk off. I get dozens of offers like that every night.\" Which was true.\n\n\"That wasn't what I was offering to let you see.\"\n\nOkay, so now he had my curiosity piqued. \"Give me a hint.\"\n\n\"Oh no. I won't do that. Watch and you'll find out.\"\n\nI couldn't imagine what he wanted to show me, so 'what the hell', I clicked on his cam icon, fully expecting to see him jerking off, despite his denials. If that was the case, I'd just close his video. It wouldn't scar me for life.\n\nSure enough, when his video image came into focus, he was standing naked in his bathroom facing his bathtub. And, as I suspected, he had his hand around his hard dick. But just as I was about to close his video, I noticed something different about what he was doing. He wasn't jerking off 'exactly', even though his actions were similar to that. With every upstroke of his hand, a stream of pee shot out of his dick and splashed onto the wall behind his tub.\n\nAfter several such spurts, he stopped stroking his rather impressive dick and removed his hand. There was a stream of pee arching high in the air, almost straight up. I had to laugh as I closed his video, 'THAT was different'.\n\n*****\n\nI was yawning, so I crawled into bed and turned off the light. I giggled again while struggling to get the image of that guy out of my head.\n\nI'd finally managed to slip off to sleep when Angie, my roommate came in. I was surprised to see her. It was Friday night, and she usually spent all weekend at her boyfriend's house off campus.\n\n\"Sorry.\" She said when she saw me stir. \"I was trying to be quiet.\"\n\n\"That's okay. I wasn't really asleep anyway.\" I lied to make her feel better.\n\n\"So, what were you doing all evening while I was getting plowed from behind until I couldn't take anymore? Oh wait! Don't tell me. You spent the evening in the Dallas chat room watching some cowboy jack off.\"\n\nI chuckled, \"Not exactly, but close enough.\"\n\nShe rolled her eyes as she reached behind her and unclasped her bra, tossing it over the back of the chair. Damn she had huge tits. They sagged though, so I was glad mine weren't that big. \"Well, if it got you all hot and bothered,\" She said as she stepped out of her panties, \"You're going to have to take care of yourself. I'm beat. I'm going to take a shower and crash.\"\n\nAngie was one of the most sexual people I'd ever met. She had an awesome body with DD tits that looked WAY too big for her slender body. She was bisexual, and even though I was straight, I wasn't opposed to fooling around with her when we were both too horny to sleep. She had an incredibly talented tongue that never failed to get me off several times.\n\nI'd even seriously considered taking her up on her many offers for me to join her with her boyfriend. I probably would have, if I thought there was a chance I could come away from it still a virgin. I wouldn't mind giving Greg a blowjob, which would be my first, and letting him eat my pussy, but I knew there was little chance of keeping things limited to that.\n\nThat would be, after all, the best of both worlds in my opinion. I could 'dabble' a little with sex without doing the whole 'dating' thing and putting up with a horny boy pressuring me to do more, and even worse, branding me as his girlfriend and pestering me to go out all the time. I was definitely not in college to get a 'MRS Degree'. I was eventually going to become a lawyer, and that meant maintaining the best possible grade point average I could. I couldn't afford any distractions. Sex would just have to wait.\n\n*****\n\nThe next morning, Angie was still asleep, so I tried to be quiet as I got up to pee. We kept the room fairly cool at night, so I grabbed my laptop and crawled back into bed.\n\nAfter logging in, I went straight to the Dallas chat room. 'DifferentStrokes' name was in the list of people in the chat room. I giggled when I remembered the show he'd given me the night before, but I resisted the urge to message him.\n\nAfter several minutes of saying \"Hi\" to the regulars, I saw a message pop up from DifferentStrokes. \"Let me know in advance if you want to see a repeat performance.\"\n\nI giggled and then typed my reply, \"I didn't think guys could do that.\"\n\n\"LOL, it gets easier with practice.\"\n\n\"Do you practice that a lot?\" I asked him.\n\n\"Only a couple times a day. You can always come over and watch in person, you know.\"\n\n\"I'm at college in Austin. I won't be back in Dallas until Summer Break.\"\n\n\"I can wait.\"\n\n\"I have to warn you: I'm a virgin, and I plan to stay that way.\"\n\n\"Hum, that's too bad, but I'm not opposed to a blowjob, or even a handjob. Is that possible? After all, if you're here, it's going to be your job to get me hard enough to show you what you want to see.\"\n\n\"LOL, it looked to me like you did just fine on your own, or was there someone off camera I couldn't see?\"\n\n\"No, I had to do it myself, but that's not my first choice. I also had to take care of 'things' myself after the show, and that's not my first choice either.\"\n\n\"Poor baby. Lol.\"\n\n\"So, are you going to come over and watch in person this summer?\"\n\n\"I'll think about it.\"\n\n\"Okay, just so you know, I'm going to turn my cam on this afternoon and do an encore.\"\n\n\"What time?\"\n\n\"Let's say two.\"\n\n\"I'll see how my day goes.\" And then I closed the message box and logged out.\n\nFUCK Tina, what the hell was that all about? Why do you want to see that again? Are you really that perverted or kinky or whatever? Or are you just horny?\n\nI closed my laptop, lay back and slid my hand inside my panties. A few seconds later, I was moaning and bucking my hips. I must have been louder than I intended, \"Need some help with that?\" Angie asked from across the room.\n\nI'd already given myself a preliminary orgasm and was building toward a better one, \"Sure, if you don't mind.\"\n\nShe giggled, \"I need to pee. I'll be right back. You get naked.\"\n\nA minute later, I was pulling on my nipples roughly while my roommate licked my pussy. It didn't take her long to give me a mind-blowing orgasm. \"Oh Fuck!\" I moaned out as I arched my back and thrust my hips up to smash my pussy to her face harder, pinching and pulling my nipples to the blissfully painful point.\n\nAngie was laughing as she got up and walked back to her own bed, \"That was fast.\"\n\n\"You need me to-\"\n\n\"Thanks, but I'm still sore from last night. Greg was in rare form.\"\n\n\"Gotcha.\"\n\n*****\n\n\"He gets his dick hard and pees straight up into his bathtub.\" I couldn't resist telling Angie about it.\n\n\"No Way! They can do that?\"\n\nI shrugged, \"I guess so. I'd never heard of it either. If you want to see for yourself, he's going to do it on cam again at two.\"\n\n\"Will he be able to see us?\"\n\n\"He didn't ask, so I didn't turn on my cam last night.\"\n\n\"It might help him get it up.\" She said with a giggle.\n\nI rolled my eyes, \"You just want to show him your tits.\"\n\nShe laughed, \"And that's a problem because?\"\n\n\"Hell, it's not a problem for me, unless you try to talk me into showing mine. I'm not going to go there.\"\n\n\"You're such a prude. It wouldn't hurt you to loosen up a little, you know.\"\n\n\"Call me a prude if you want. I'm not going to flash my tits to the world. Once you do that on the internet, you can't take it back. It's out there forever.\"\n\n\"I don't give a shit.\" Angie said in a matter-of-fact tone.\n\n*****\n\n\"My roommate wants to watch too, and she has a couple of things she wants to show you.\" And then I turned on my cam in a way only DifferentStrokes could see it.\n\n\"Wow! Very, very nice.\" He typed back when he saw Angie standing beside me totally naked.\n\nHe watched her cup her huge tits and bounce them up and down for him, and then tease her hairless pussy.\n\n\"Okay, you're on.\" I typed to him.\n\nHe looked at Angie for another minute and then turned to the bathtub. His cam was positioned in such a way that gave us a great view. Once again, he began stroking his big cock.\n\nAngie put her hand on my shoulder and said, \"He's just jacking off.\"\n\n\"No he's not. Just watch.\"\n\nSure enough, a few seconds later, the first spurt of pee flew out of his dick and splashed on the wall, and then another and another. Finally, he managed to get his stream going, so he released his dick, put his hands on his hips, and peed almost straight up for a very long time.\n\n\"Oh my God!\" Angie exclaimed, \"That is way too cool. I'm gonna have to see if Greg can do that.\"\n\n\"He said it took some practice.\" I told her.\n\nBy the time he was finished and turned back to his laptop to see our video feed, Angie had two fingers inside her pussy. It was right by my ear, so I could clearly hear her wet fingers fucking herself and rubbing her clit furiously.\n\n\"Do you need to sit down?\" I asked her.\n\n\"Hell yes.\"\n\nSo I got up and let her sit in my chair. I made sure he had a clear view of her splayed pussy. Just to pay him back for such a great show, I stood behind her, reached over her shoulders and began playing with her incredible tits.\n\n\"HOLY SHIT!\" He typed when he saw that.\n\n*****\n\n\"I need you to help me finish.\" She told me in a raspy voice when I turned off the cam. And then she got up and moved to her bed.\n\nA few seconds later, I was licking and sucking her clit. Actually, I didn't mind doing that at all. I'd enjoyed it from the very first time, and continued to enjoy it the dozen or so times I'd done it since. Having that much control over another person's orgasm made me feel powerful. I assumed it would be the same when I finally started giving blowjobs.\n\n\"FUCK!\" She moaned out when I finally managed to give her a great orgasm.\n\nI teased her, \"That didn't take long. I guess watching him got you really horny, huh?\"\n\n\"Hell yes!\"\n\nI chuckled, \"I don't blame you. That's what got me going this morning too.\"\n\n*****\n\nGreg and Angie asked me out to dinner on Saturday night. It wasn't the first time, so I agreed to go.\n\nAngie was very open with Greg. He knew she was bisexual, and they'd had more than one threesome together. She told him she and I fooled around sometimes. I was a little embarrassed when she told him with me sitting right across the table, but I got over it, especially when he took it right in stride without making a big deal out of it. He'd responded simply, \"Cool.\"\n\nAnd Greg knew I was a virgin and planned to stay that way for the foreseeable future. He didn't make an issue out of that either. He'd said only, \"You don't know what you're missing.\" And then he changed the subject.\n\nThat evening, while we were waiting on our food, Angie told him about DifferentStrokes and what he did on cam. That did get a reaction out of him, \"Ouch! That doesn't sound like fun, even if it is possible.\"\n\n\"You've never done it?\" Angie asked him.\n\n\"Not like that\u2014not standing up. Sometimes when I wake up with a piss hard, I have to sit on the toilet and scoot back as far as I can so I can still piss in the bowl without aiming it down too much. A man can't piss with a hardon if he's pushing it down. So yeah, I guess standing up and pissing up into the air would probably be easier. I've never tried it.\"\n\n\"You should try it for us.\"\n\n\"US?\" I piped in.\n\n\"Hey\" Angie defended, \"Think about it. If it was that much fun to watch on cam, just think how much better it'd be in person.\"\n\n\"You just want an excuse to get me over there with the two of you.\"\n\nAngie rolled her eyes, \"I promise you'll get back to the dorm still a virgin . . . at least your pussy will. I make no promises, express or implied, about your mouth.\"\n\nThat got a chuckle out of Greg. \"I like the sound of that.\"\n\nAngie giggled and said, much too loudly to suit me, \"Oh, you want to get her blowjob cherry, do you?\"\n\n\"Well, you got her pussy eating cherry going both ways,\" He told her, \"fair is fair.\"\n\n\"Guys\" I scolded them with my tone, \"It wouldn't hurt you to lower your voices a little. And I'm sitting right here, so please stop talking about me like I'm not.\"\n\n\"Oh stop it.\" Angie scolded me right back. \"It's not like you and I haven't had this conversation before. Greg being here doesn't change anything, except we just might be able to talk him into doing something for us.\"\n\n\"Why do I feel like I'M his payment, IF he agrees to do it?\"\n\n\"Angie giggled, \"That's because you are.\"\n\nGreg laughed out loud, \"Works for me.\"\n\n*****\n\nThe minute we got to Greg's home, Angie pulled three beers from the fridge and sat them on end table next to his recliner. After practically ordering him to drink them before they got warm and NOT to go pee, she began taking off her clothes, \"C'mon, Tina. The pool is amazing.\"\n\nWhen I hesitated, Angie rolled her eyes. She was already totally naked, \"Oh hell.\" She said, \"C'mon\" and she took my hand and led me into the kitchen. She poured two shots of Tequila and handed me one. And then she said, \"Down the hatch\" and tossed back her shot, \"C'mon, what are you waiting for? It'll loosen you up.\"\n\n\"That's what I'm afraid of.\"\n\n\"Oh hell. It's just going to be you and me in the pool, and I've already seen you naked . . . like a thousand times.\"\n\n\"Okay, okay.\" And then I headed out the patio door and began taking off my clothes. When I was totally naked, I turned to Angie, \"Satisfied?\"\n\nIn the pool, Angie giggled, \"I'm going to leave it up to you to get him hard, but when he sees you naked, I don't think that's going to be a problem.\"\n\nI giggled, feeling a little frisky, \"Oh, that's too bad. I was hoping he'd need a little more than that.\"\n\nAngie caught me by the shoulders and turned me to face her, \"Hell, you can still blow him, but I think you should wait until after the show. We don't want him getting off too soon.\"\n\n\"I just might do that.\" I said, hoping I sounded more confident than I felt.\n\n*****\n\nIt was probably thirty minutes before Greg came out to the pool and told us, \"Okay, I'm ready when you are.\" \n\nAngie, realizing that I was feeling a little frisky, purposefully kept me that way.\n\nShe called out to her boyfriend, \"Oh no you're not. We want you to be really, really ready. Hang on.\" And then she looked at me and raised a daring eyebrow, \"Go inside and get him another beer.\"\n\nI protested, \"He's already had three.\"\n\nAngie just giggled, \"I know, but I want him to get a good look at you naked. That should get him hard.\"\n\nI feigned resistance, when in truth, the idea excited me greatly. I'd never been totally naked in front of a boy before, except when my brother snatched my towel away from me when I came out of the bathroom after a shower.\n\nSo, I climbed out of the pool, dried off and headed inside. Wow! Just strutting around naked so boldly in front of Greg had my pussy wet. When I got to the kitchen, I took a swig from the bottle of Tequila before getting Greg a beer from the fridge.\n\nWhen I got back outside, I took a deep breath and walked right up to Greg. I was shocked to find him totally naked, and his cock was already semi hard.\n\nHe took the beer from my hand and set it on the concrete, and then he said, \"Don't move.\" I watched him get to his feet, and then he turned to me, immediately putting his hands on my tits and kneading them.\n\nI was too paralyzed to move, but I finally managed to turn my head toward the pool. Angie was standing in the water a few feet away. She had a huge grin on her face.\n\n\"Having fun?\" I asked her.\n\nShe laughed, \"Not as much as Gregie is.\"\n\nHearing that, I turned back to Greg, \"May I get back in the water now?\"\n\nHe chuckled, and tightened his grip on my tits, \"Yeah, I guess, as long as you let me do some more of this later.\"\n\n\"Okay then. You can let go now.\"\n\n*****\n\nIn my mind, we would end up in the bathroom with Greg standing next to the bathtub. That's not at all what happened.\n\nAbout ten minutes after finishing his fourth beer, he got to his feet. I was delighted to see that his average-size dick was fully hard. \"C'mon ladies.\" He said to us, and he walked over to the edge of the concrete.\n\n\"Do you want us to do it for you?\" Angie asked him when we stepped up on each side of him.\n\n\"Nah, I'd better do it.\" He said as he began trying to coax pee out of his hard dick. It took him quite a bit longer than it'd taken DifferentStrokes, but I didn't mind. I was really enjoying seeing his dick up so close.\n\nAfter a few minutes, he finally managed to shoot a short stream of pee into the air and onto the grass in front of us, and then another and another. Finally, those short spurts turned into a solid stream arching high into the air.\n\nGreg turned his dick loose and put a hand over each of us, immediately grabbing a handful of tit.\n\n\"Oh my God!\" Angie exclaimed.\n\n\"I second that.\" I agreed as I watched his pee arch up into the air. \"That's too fucking hot!\"\n\n\"Actually, it's not that bad.\" Greg admitted. \"It doesn't hurt like when I have to point it down some.\"\n\nI couldn't resist. I reached over and slid my hand around his cock while he was still peeing. \"Not too tight\" he instructed me.\n\nGod! I loved it so much; I hoped it would never stop. But of course, it eventually did. I didn't even mind when the last little bit dribbled out onto my hand.\n\nAngie giggled, \"Okay, girl, you're up. It's time for your first blowjob.\"\n\n\"Here?\" I asked, somewhat incredulously.\n\n\"Sure.\" Greg said, \"Right here at the scene of the crime.\"\n\nAngie prodded me on, \"You get started. I'll be right back with three shots.\"\n\nMy heart was beating so violently; I was afraid I'd have a heart attack. But I was determined too. I got on my knees in front of him and kissed the tip of his hard dick. It tasted a little salty, which I assumed was the last remnants of his pee, but I didn't let that deter me from my mission.\n\nI began licking up and down his shaft, kissing the engorged head every time I got to the top. When I put my lips around the head, I was amazed at how warm and soft it felt. I loved the way it felt against my tongue.\n\nI'd just started lowering my mouth on it when Angie returned, \"How's she doing?\"\n\nGreg let out a chuckle, \"Like a pro.\"\n\nAfter laughing, Angie said to me, \"Hell, you could be drawing blood with your teeth and he wouldn't complain. There's no such thing as a bad blowjob, is there, Gregie?\"\n\n\"I'm not sure I'd go quite that far.\" He said with a chuckle.",
        "And then Angie said to me, \"Take a time out long enough to drink this.\" And she handed me the shot glass.\n\nI didn't want to take his cock out of my mouth, but I forced myself to. I downed the contents of the shot glass and then went immediately back to sliding his dick in and out of my mouth.\n\nAngie got onto her knees beside me and began playing with my tits. \"Put your fingers around the base and move it up and down in time with your mouth. Grip it fairly firmly.\"\n\n\"Yes, just like that.\" Greg encouraged me, \"That's perfect.\"\n\nA few minutes later, Greg said, \"You're about to get a mouth full of cum.\"\n\nAngie began tugging at my nipples, \"Don't worry. Just get ready for it. You'll be fine.\"\n\nSure enough, his dick began shooting cum into my mouth. I was ready for it, but the first spurt or two still surprised me. After that, I just kept my mouth over the head and continued stroking it with my hand. \n\nIt didn't last that long, but I loved it. It didn't taste bad at all, but it did take me a few seconds to get used to the texture.\n\nWhen I finally let Greg's dick slip from between my lips, Angie immediately pulled me in and gave me a passionate kiss.\n\nWhen we came up for air, she half squealed, \"That was awesome. How did you like it?\"\n\n\"I LOVED IT!\" I said honestly. \"Get him some more beer so we can do it again.\"\n\nThat caused Angie and Greg to burst out in laughter.\n\n*****\n\nWe did in fact get to watch Greg pee into the air a second time before the evening was over. This time, it was Angie who gave him a blowjob.\n\n\"God! Watching that has me sooooo fucking horny.\"\n\n\"I'm sure you know you have my permission to fuck him.\"\n\n\"I wish I could take you up on that.\" I told her, \"but I promised myself I wouldn't, and you promised me you'd help see that I make it back to the dorm still a virgin.\"\n\nShe shrugged, \"I guess I should have let you blow him again, but I wanted you to watch me do it. If we stay the night, you can blow him next time. In the meantime, I'll get you off, and then you can watch us fuck.\"\n\nShe and I were sitting on the sofa in Greg's living room. He was taking a shower. \"You don't have to ask me twice.\" I said as I leaned back against the cushion and pulled my feet up to my butt cheeks, spreading my knees wide.\n\nDutifully, Angie slid to the floor and began licking my pussy. Just as Greg emerged from the hallway, she raised my hips a bit and began licking my ass. She'd never done that before, and it felt so good; I let out a moan of pleasure.\n\nAngie looked up at me long enough to say, \"If you like that, you're going to love getting fucked there.\" And then she went right back to licking my ass, even forcing the tip of her tongue inside me.\n\n\"Holy shit!\" I moaned out when she began rubbing my clit while still tonguing my ass.\n\nGreg walked up to watch for a minute, and then he sat down beside me and began playing with my tits. \"OH GOD!\" I cried out as a second, much more powerful orgasm flooded over me.\n\nAfter my third orgasm, I had to make Angie stop. I couldn't take anymore. She got up and ran down the hall, 'I'll be right back.\"\n\nShe returned less than a minute later and tossed Greg a tube of something. And then she pulled a pillow from the sofa, got on her hands and knees, and stuck her ass in the air. \"Greg, get over here. I want Tina to watch you plow my ass.\"\n\nWhen he had her ass and his dick lubed up and knelt behind her, Angie turned her head to look me in the eyes. Her face contorted slightly when he pushed forward, but then she grinned at me and showed me a wink. \"Next time, we'll trade places.\"\n\nI'm sure that caused my eyes to widen, but while watching them, I thought to myself 'Why not?' I could 'dabble' with him without him getting all 'clingy', and I'd still be a virgin . . . technically speaking. It would be the best of both worlds. The only thing I had to get over was the total fear of having something in my ass. That was a scary thought.\n\nThe more I watched him slam his hard dick into her ass, the more I warmed to the idea. Greg must have been reading my mind. He looked over at me with a wide grin, \"Just let me know when your ready.\"\n\n\"Not now!\" Angie almost yelled. Her voice sounded both raspy and panicked, \"No way I'm going to let him stop now. He owes me four or five good cums.\"\n\nI giggled, \"Hell, Greg, it sounds to me like you've got your work cut out for you.\"\n\nHe looked over at me and shook his head, slamming hard into her ass the whole time, his thighs slapping her butt cheeks loudly, \"Nah, piece of cake. I'm just getting warmed up.\"\n\nIt was about that time when Angie slid her hand up and began rubbing her clit. She furrowed her brows at me and bit her lower lip hard. And then she let out a loud moan. A few seconds later, she opened her eyes again and showed me another grin, \"That's one.\"\n\nBy the time Angie came for the third time, Greg seemed to be under a great deal of distress. He was still fucking her in the ass hard and fast, but his breathing was labored and he was sweating profusely.\n\nFinally, he let out a loud grunt and yanked her hips back toward him, holding her impaled to the hilt while he only moved his hips from side to side. That's all it took. Angie, screamed out in pleasure, and then she collapsed onto the floor. Greg followed her to the floor, keeping his cock buried deep in her ass.\n\nI waited until Angie recovered enough to show me a grin to express my feelings about what I'd just seen. I said only \"WOW!\"\n\nShe let out a giggle, and then she told Greg, \"Get off of me now. I can't breathe.\" After she rolled over on the floor and stretched mightily, she told me, \"Greg and I need a shower. You can join us if you want.\"\n\n\"Thanks, but I'm going back into the pool.\"\n\n*****\n\nI woke up the following morning in a precarious situation. I was squeezed between Angie and Greg, and I badly needed to pee. Seeing no other options, I crawled over Greg, trying my best not to wake him. He was on his back, and I had to chuckle when I felt my thighs slide across his hard cock.\n\nI'd just sat down on the toilet when Greg walked in. I thought both he and Angie were still asleep, so I hadn't bothered to close the bathroom door.\n\n\"Sorry.\" He apologized. \"I can't wait.\"\n\n\"I'll be done in a minute.\" I told him.\n\n\"Maybe I'll just try it the new way.\" He said as he pulled the shower curtain aside and stepped up to the bathtub.\n\nI was still peeing, but I only had to lean slightly to my left to have a great view of his actions. He was doing exactly as he had outside the evening before, slowly stroking his hard cock in a manner not inconsistent with jacking off.\n\nI was just finishing as he was beginning to achieve some results by coaxing a couple of short spurts of pee from his cock. I dried myself quickly and then stood up beside Greg.\n\nI waited until he got a good stream arching into the air. And then, when he removed his hand from his cock, and without asking his permission, I slid my hand around his hard cock, being careful not to grip it too firmly.\n\nIt only took a second to have my pussy tingling. Feeling of his warm cock as it spewed out his pee into the air in a high arch was extremely exciting to me. Also not unlike the evening before, Greg immediately put his hand over my shoulder and hugged me to him, his hand finding my tit and kneading it.\n\nThe minute the last spurt of pee shot from his cock, I slid in front of him and sat on the edge of the tub, immediately taking the head of his cock into my mouth. And again, there was a slight tangy or salty taste.\n\nI'd been moving my mouth and my hand up and down on Greg's cock for a couple of minutes when I heard a giggle from the direction of the door. It was, of course, Angie.\n\n\"You go girl.\" She encouraged me as she came into the room and sat on the toilet. Even after she finished peeing, she sat there and watched me give her boyfriend a blowjob.\n\nAnd also, just like the previous evening, when I was finished milking his cum out of his cock, she moved beside me and kissed me passionately.\n\n\"Wow! What a way to start the day.\" I giggled as I got to my feet.\n\n\"I second that.\" Greg said with a laugh.\n\n*****\n\nIt was Sunday and I needed to get back to the dorm to study. Greg and Angie dropped me off in front of the dorm, but Angie didn't get out of the car. \"I'm not through fucking him yet.\" She told me with a giggle.\n\nIt was late when she showed up at our dorm room. I was already in bed, but I hadn't fallen asleep yet. \"Well, did you have a good evening?\" I asked her.\n\nShe chuckled, \"Shit, I can barely walk.\"\n\n\"I'll take that as a yes.\"\n\n\"Don't worry, by this time next weekend, you're going to know exactly what I'm feeling.\"\n\nI understood her meaning, \"Yeah, I've been giving that some thought. Honestly, I want to do it, but it scares me a little.\"\n\nShe nodded, \"No problem. We'll just have to get your ass ready between now and then. Just leave that to me.\"\n\n\"Okay then, I have an early class, so I need to get to sleep.\"\n\n*****\n\n\"Okay, are you ready?\" Angie asked me.\n\nIt was Tuesday night just before bedtime. I was naked on my hands and knees on my bed, and she'd just spent about ten minutes tonguing my ass while I rubbed my clit to a nice first orgasm.\n\n\"I think so.\" I responded pensively.\n\nI looked back and watched her pull her small vibe from the plastic tub of hot water. She dried it, and then lubed it up, and my ass. \"You have to relax. The more you relax, the easier it will go in.\"\n\n\"I'll try.\" I said, turning back to the front and burying my head in a pillow.\n\n\"Fuck!\" I screeched when she began pressing it into my ass. It hurt like hell.\n\n\"You're all tensed up. You have to breathe and relax.\" And she kept pushing on the vibe.\n\nI really did try to relax, but with little success. I huffed, \"Just do it.\" And then something happened. The pain didn't go away, but it got easier. \"Okay\" I panted through the pain, \"It's not so bad now. How much of it do you have in me?\"\n\nShe giggled wildly, \"About an inch, but don't worry, that's the worst of it.\" And then I felt her push even harder.\n\nAs more of the vibe entered me, the pain got less and less. And then Angie said, \"That's all of it. Just be still and let your ass adjust to it being in there.\"\n\nAfter maybe two full minutes, I felt her start to pull it out. That actually felt kind of nice. \"Ummm\" I moaned.\n\nAngie giggled again, \"Just wait. You're going to love this.\" And she began sliding the vibe slowly in and out of me.\n\n\"Oh wow!\" I said as I began rubbing my clit again. It only took a few seconds for me to have another nice orgasm, this one better than the first.\n\nAngie's voice sounded excited when she said, \"Okay, you're ready to get fucked. Just stay as relaxed as you can and you'll enjoy it.\"\n\nMy roommate was right. When she began fucking my ass more urgently with the vibe, the pleasure was more intense than I could have ever imagined. \"Hell yes! Fuck me!\"\n\nWhen my third orgasm hit me, it was so powerful I almost blacked out. I had to stop rubbing my clit, and then I fell forward on the bed. The vibe still embedded in my ass.\n\nAngie laughed as she crawled off the bed. \"Make sure it doesn't fall out. I'm going to wash my hands and pee.\"\n\nI just lay there, very much enjoying the feel of having the vibe inside me.\n\nWhen she returned, she took her bottle of Tequila from her closet. \"A celebration is in order.\" And she filled two shot glasses.\n\nNormally, I'd never have even one drink on a school night, but I rolled over onto my side and propped myself up on an elbow. I had to reach around to insure the vibe was still fully embedded. And then I took the shot glass and threw back its contents. \"One more.\" I said with a giggle, holding the empty glass out to her.\n\nWhen Angie handed me another shot, she chuckled, \"Tomorrow night, we'll go for the next size up. That one is about the same size as Greg's dick.\"\n\n\"Sounds great to me.\" I said after downing the shot of Tequila.\n\n*****\n\nIt was difficult for me to concentrate in my classes the following day. All I could think about was Angie fucking my ass with a larger vibe. I wasn't afraid of it anymore\u2014not in the least. I was totally excited about it.\n\nThat night, I hurried through my homework so I'd be ready when Angie got home. And then my excitement got slammed into the dirt. She called and apologized, but she was going to stay the night with Greg. \"Fuck!\" I practically shouted my frustration.\n\nI sat on my bed pouting until I had an idea. I got up and went to Angie's closet, got out her bottle of Tequila and took a long swig, shuddered, and then took a second.\n\nNext, I went to the bathroom and filled the plastic tub with hot water. I took her larger vibe and lube from her drawer, put it into the water, and took off my clothes.\n\nI lay back on my bed on a towel and began playing with my pussy, making sure to slide a slick finger down to my ass occasionally. It didn't take long before I was sliding first one finger and then a second into my ass.\n\nAfter my first orgasm, I felt I was ready. I dried the now warm vibe and lubed it up, and then used a finger to lube the inside of my ass.\n\nWow! It was difficult to get the head of the phallic-shaped vibe inside me. Actually, it didn't hurt as bad as it had the night before. I attributed that to the fact that I was in charge, and therefore more relaxed.\n\nJust as Angie had done, I stopped when I had the vibe fully inside me and waited for my ass to adjust to it. And then I began pulling it out slowly and pushing it back in.\n\nAfter only a minute or two of that, I used my other hand to rub my clit and I started fucking myself with the vibe. On a whim, I turned the vibe on, but I turned it off quickly. Greg's dick wouldn't vibrate, and that was, after all, what I was getting myself ready for.\n\nI gave myself three more great orgasms before stopping. What I did next was difficult. I got out of bed and went back to Angie's closet, careful not to let the vibe slip out of my ass.\n\nI didn't have any early classes, so I carried the bottle back to my bed. I pulled both of my pillows up to the headboard and sat back against them while I took small sips from the bottle.\n\nEven though I wasn't moving the vibe, just clinching and unclenching my ass muscles sent waves of pleasure through me.\n\nFinally, I capped the bottle and sat it on my end table. Then I scooted down on the bed and just lay there until I finally fell asleep.\n\n*****\n\nWhen Angie came in the next morning, she didn't expect me to still be asleep, so she wasn't quiet. \"Oh, shit, I'm sorry.\" She told me. And then she spotted the bottle on my end table, \"Ahhh, that explains why you're still in bed.\n\nIt took me a minute to clear the cobwebs, and then I immediately became aware of the vibe still in my ass. I got a smile on my face as I remembered the wonderful time I'd had with it the night before.\n\n\"So, what brought that on?\" Angie asked me in a concerned voice while standing over my bed.\n\nFinally, I managed a giggle and threw back the covers. When I rolled onto my knees and stuck my ass in the air, I said, \"Wanna take that out for me?\"\n\nAngie started laughing. She was still laughing while pulling her vibe from my ass, and still while she carried it into the bathroom and put it into the sink.\n\n*****\n\nAngie and I went to Outback Steakhouse for supper early Friday evening without Greg. \"He's home drinking his supper.\" She told me.\n\n\"Beer?\" I asked with a giggle.\n\nShe nodded, \"I told him to go easy and alternate between the beer and bottles of water.\"\n\n\"What if he can't wait until we get there?\"\n\nShe showed me a naughty grin, \"Then he'll be cut off for the rest of the semester, and he knows it.\"\n\nI laughed, \"That's only two weeks.\"\n\n\"Shit, he can't go two days without sex. Two weeks would kill him.\"\n\n\"Still, let's eat up and go put him out of his misery.\" I told her.\n\nShe giggled, \"I don't think his misery is the real reason you're in a hurry. Be honest.\"\n\n\"Okay, so I might be just a little anxious about what will happen later.\"\n\n*****\n\nWhen we walked through Greg's front door, he scolded Angie, or both of us, \"It's about fucking time. I'm dying here.\"\n\nHe was already naked, but his dick wasn't hard, so Angie looked at me and giggled, \"You can do the honors.\"\n\nI feigned irritation by rolling my eyes and letting out a long sigh, \"Okay. It's a dirty job, but someone has to do it.\" And I dropped to my knees and began taking his dick into my mouth.\n\n\"Careful\" he told me when I didn't stop after getting him fully hard, \"You might get it in the mouth, and I don't mean cum.\"\n\nSo I released him and led him by his dick into the bathroom.\n\nWith me on one side of him and Angie on the other, he began stroking his dick slowly with one hand, while hugging me to him with his other hand. Of course, he had a firm grip on my tit.\n\nI didn't know if the whole thing was getting easier for him, or if he just needed to go really badly, but it only took him a few seconds to have a full stream of pee arching high into the air.\n\nAs I'd done before, I reached over and slid my hand around his cock, aiming it back and forth.\n\n\"Damn, we're going to have to disinfect the whole fucking bathroom.\" Angie said with an excited laugh.\n\n\"We'll have to start doing it outside again.\" I told her.\n\nGreg let out a relieved sigh \"Ahhhhhh\" and then he said, \"You don't hear me complaining.\"\n\nIt was a very long time before his stream began to dwindle. By that time, I was so fucking turned on; I sat down on the toilet and turned him to me, taking his dick into my mouth immediately.\n\nI tasted a little more pee this time, but I didn't care. I wanted his cum.\n\n\"Hey\" Angie scolded me, \"Don't be so greedy. You're going to have that in your ass later. You should let me have him first.\"\n\nI responded by flipping her off.\n\n*****\n\nIt was almost two hours when Angie suggested we go to Greg's bedroom. \"It's a lot easier on the bed.\" She told me, \"You don't want rug burns on your knees.\"\n\nWhen I was in position on my knees near the foot of the bed, Angie slid to the floor and began sucking Greg's dick while he tongued my ass. It didn't take much of that to make me experience my usual preliminary orgasm.\n\n\"She's ready.\" Greg told Angie. So she got up and fetched the tube of lube.\n\nAfter using her finger to lube the inside of my ass, she applied the lube to her boyfriend's hard dick. I was surprised at how relaxed I was, even after having only one shot of Tequila.\n\n\"Are you ready?\" Greg asked me as Angie spread my butt cheeks for him.\n\n\"God! I'm soooooo ready.\" I told him as I gripped the bedspread to brace myself.\n\nAfter the momentary pain of the initial pressure passed, I felt his dick slide slowly into my ass. After only a few seconds, I told him, \"Fuck me now. I'm ready.\"\n\nGreg didn't have to be told twice. He began slowly working his magical dick in and out of my ass. Angie urged him on, \"Fuck her now, Gregie. Give it to her good.\" And then she moved around the bed, pushed my hand away from my clit and began rubbing it gently for me. \"I'll take care of this. You just enjoy.\"\n\nOh My God! It felt so good, I never wanted it to end, and Greg didn't disappoint. He fucked my ass until my eyes crossed. The combination of him fucking me and Angie rubbing my clit was almost too much for me . . . ALMOST!\n\nI don't know how many times I came, but it was several. When I finally collapsed onto the bed, he stayed on top of me and kept fucking me without missing a beat.\n\n\"Don't stop.\" Angie told him, and he obeyed.\n\nIt was a long time before I felt his dick grow even more, and he began flooding my insides with his cum. That didn't escape Angie's notice. \"That's right, Baby. Fill her ass with your cum.\"\n\n*****\n\nWhen I woke up, I felt empty inside, and it disappointed me. I missed the feeling of being filled with Greg's hard dick. After going pee, I started looking through the house for them. I finally found them outside in the pool.",
        "When Angie saw me step out onto the patio, she called out, \"Well, how's our ass?\"\n\n\"Lonely\" I giggled back, and we all laughed.\n\n*****\n\nIt was just over a week later when the unspeakable happened. We were in our dorm room when Angie got a call from her parents. She went into the bathroom and closed the door, but I could still hear her. I couldn't understand what she was saying, but I could discern the crying and begging.\n\nWhen she finally came out of the bathroom, her hair was plastered to her tear soaked face. She looked like her world had just come apart.\n\nI didn't press her. She walked straight to her closet, got her bottle of Tequila, and took a long tug. \"It looks like you're going to be on your own next semester. I won't be here.\"\n\n\"No way!\" I exclaimed. \"What happened?\"\n\nShe started crying again, \"My grades. Me being here is a waste of money.\"\n\nAnd then she came to me and we hugged, both of us crying now, \"Is there anything I can do? If it's just money, Greg's parents are well off, right? You said that's how he can afford that house.\"\n\n\"I wish it was that easy.\" She said, and then started crying again.\n\nAll I could do was hug her tightly.\n\nWhen she'd consumed a sufficient amount of Tequila, she began to fall asleep in my arms. Her last words to me were, \"Take care of Greg for me.\"\n\n*****\n\nMy brother, Brian beat me home for the summer by a couple of days. \"The prodigal daughter returns.\" He teased when he saw me enter the front door.\n\nI didn't plan it, but as it turned out, it wasn't all that difficult to put my brother in his place. \"Oh Brian, it's really good to see you. Oh, and by the way, it's too bad you couldn't meet the black football player I was fucking at school. I swear, his dick was almost a foot long and almost as big around as a Coke can. So, next time you get the urge to show me that little prick of yours, don't bother.\"\n\nI was laughing inside when he just stood there with his jaw agape.\n\n*****\n\nThat proved to be a really boring summer. DifferentStrokes sent me dozens of messages, but I just didn't have the heart to go to him. I was still mourning the loss of Angie, the one who had opened my eyes to the joys of sex.\n\nAnd then, near the end of summer break, I got a call out of the blue from Greg.\n\n\"I'm sorry for bothering you, but Angie gave me your cell number. I hope we can get together when you get back to Austin . . . on your terms, of course. Maybe we can just have dinner or something.\"\n\n\"Dinner? Yes, that would be nice.\" I told him.\n\nHe sounded relieved, \"Okay then, it's a date. You have my number now, so please give me a call when you get back here.\"\n\n\"I will.\" I promised him.\n\n*****\n\nI did too, but just for dinner at the Lone Star Steakhouse. After observing Greg all through dinner, I came to the conclusion that he wasn't all that broken up about losing Angie.\n\nWhen I finally called him on it, he just shrugged, \"We were teetering on the verge of breaking up in the two months before the end of the semester.\"\n\nI couldn't believe what I was hearing, \"I thought . . . you and Angie were . . .\"\n\n\"What, that we were destined to be together or something?\"\n\n\"Well yeah, something like that.\" I told him.\n\n\"Tina, I hate to break it to you, and I'm sorry if this sounds cold or whatever, but the only reason we hadn't already broken up was because she brought you into our relationship to spice things up. Before you came into it, we'd gotten bored with each other.\"\n\n\"Bored!\" I said way too loudly for the restaurant, \"Angie . . . boring?\"\n\n\"It's not that she wasn't fun.\" He defended, \"But she never wanted to try anything new\u2014to spice up our sex, I mean. She'd never try to come up with anything, and she'd rebuff me when I did.\"\n\nMy mind was totally blown. Finally, I lowered my voice and asked him, \"Wait. Angie liked it in the ass. She was bisexual and proud of it, and she really got into watching you pee with a boner. That's boring?\"\n\nGreg leaned over the table and look straight into my eyes, \"Tina, you're new to the whole sex thing, so I don't expect you to understand. To most guys, Angie would have been a dream come true, but I like pushing the edge of the envelope, otherwise, I get bored. I like keeping things interesting by trying new things. Angie and I were together longer than I've ever been with any one girl.\"\n\n\"New things like what?\"\n\n\"Wouldn't this conversation be a little easier in my hot tub with a drink?\"\n\n\"You have a hot tub? I've never seen-\"\n\n\"I had it installed this summer. It's great.\"\n\n*****\n\nGreg was right. His new hot tub was wonderful. I got in it first and waited for him to come out of the house. When he appeared, he tried to hand me a shot of Tequila. I didn't take it.\n\n\"Greg, I love Tequila. It helps settle my nerves when I need it, but I don't need that now. I'm not nervous or anxious. I know you have Vodka and OJ, so I'd like a mild Screwdriver if you don't mind.\"\n\nHe raised an eyebrow, sat the two shot glasses on the ledge of the hot tub and went back inside. While waiting on him, I reflected on how comfortable I was being naked in front of him without Angie there. I would have thought it would be more awkward. \n\nWhen he returned, he handed me a tall slender glass containing my requested drink and climbed into the hot tub. After I'd taken a sip of my drink, and while he was getting over the shock of the hot water, I asked him again, \"So, what new things?\"\n\nHe threw back one of the shots, and then he grinned and said, \"That's the problem. If I give you a grocery list, and then you just do those things, hell, any twenty dollar hooker would do that.\"\n\nI understood completely. One of the things I loved about Angie was not knowing what she'd do next. \"I understand.\"\n\nHe raised a questioning eyebrow, \"Do you really?\"\n\nI nodded, \"I do, and I think we should make each other a deal.\"\n\n\"Oh, do tell.\"\n\n\"If one of us steps over some line, we shouldn't be shy about saying so. That way, neither of us will have to worry about where the line is. And if that happens, if one of us steps over the line, they won't be decapitated for it . . . unless of course, they do it again.\"\n\nGreg raised his second shot glass, \"I'll toast to that.\"\n\nI climbed out of the hot tub, dried myself and then went inside. I returned a minute later with a fresh Screwdriver and two beers.\"\n\nGreg laughed, \"We need to talk about this whole peeing thing.\"\n\nI chuckled, \"There's nothing to talk about. I like it, and you'll keep doing it. That is not negotiable, so drink up.\"\n\n*****\n\nAs with the last time we were together, I was on my knees in front of Greg and sucking him to full hardness. The only difference being that we were outside on the grass instead of in his living room.\n\nI was shocked when he grabbed my hair and forced my mouth down on his dick. It wasn't fully hard, but it was difficult for me to breathe. He held me there firmly, \"Breathe through your nose.\" He instructed me.\n\nI was amazed at how erotic it was to feel him growing in my mouth, and having no control over what was happening. He must have held me there for more than two minutes before letting me withdraw and take in some air.\n\n\"Are you okay?\" He asked me.\n\nStill gasping, I told him, \"If I wasn't, you'd know it. I still have teeth, you know?\"\n\nGreg laughed and forced his now fully hard dick back into my mouth, and he told me in a serious tone, \"I tried this with Angie once. She wouldn't speak to me for three days.\"\n\nAgain, he held me there for a very long time. When he finally let me up to breathe again, I said, \"I'm not Angie.\"\n\nHe responded by forcing his hard dick into my mouth again. It was only another minute before I felt it . . . a spurt of pee hitting the back of my throat. I was tempted to bite down on his dick, but I decided 'fuck him, he can't intimidate me that easily', so I just took it.\n\nTo his credit, Greg let me up before he shot his pee into my mouth again, but I was still on my knees in front of him. He lifted me to my feet and began peeing upward, over my chest, tits, and stomach.\n\nI honestly didn't know what to think of that, but it didn't repulse me. I just reached out and put my hand around his dick, aiming his pee onto my tits and making sure it didn't hit me in the face.\n\nWhen I looked him in the eyes, his grin told me I was pleasing him. If 'bold and different' was what he wanted, I was determined to show him I wasn't afraid to go there.\n\nAfter a minute, his pee stream began to diminish. Before it stopped altogether, I slid back to my knees and took his dick into my mouth again, swallowing more than a few drops of his pee.\n\nWhen he was finished, he helped me to my feet again. I put my arms around his neck and kissed him passionately, almost daring him to resist. He didn't.\n\nWhen I broke our kiss and leaned back in his arms, I giggled and said, \"Next time, you can just tell me what you want.\"\n\nHe laughed, \"What fun would that be?\"\n\n***** \n\nBack in the hot tub, Greg asked me, \"So, did I cross the line?\"\n\nI suppressed a laugh, \"Did you get your face slapped?\"\n\n\"Uh, no.\"\n\n\"That's how you'll know\u2014either that or you getting kicked in the balls or have your dick bitten off. One way or the other, you'll know.\"\n\n\"Fair enough.\"\n\n*****\n\nStill in the hot tub, I told Greg, \"You're going to have to find us a girlfriend.\"\n\nHe looked surprised, \"Really?\"\n\n\"I miss Angie. We had fun together.\"\n\n\"I'll do my best.\" He assured me. \"But, just so I understand, what if I want to fuck her?\"\n\n\"Angie didn't mind, did she?\"\n\nI was shocked by his answer, \"Only you, and only when she was there.\"\n\n\"Angie?\" I expressed my surprise, \"Are we talking about the same Angie?\"\n\nGreg laughed, \"I told you she wasn't nearly as open-minded as she let on.\"\n\n\"Wow! I think I need another drink. Would you do the honors?\" When he took my empty glass, I added, \"Make this one a little stronger, please.\"\n\nWhen Greg returned with a fresh drink for me, I shook my head, \"That's just the opposite of the opinion I had of her.\"\n\nHe raised his eyebrows, \"Yeah, I know. She liked being thought of as a wild child, but that just wasn't her. She was much more hung up than she wanted people to believe.\"\n\n\"Well, I don't know what you'll tell your next girlfriend or fuck buddy or whoever about me, but I hope it's not that I tried to portray myself to be something I'm not.\" \n\nHe grinned, \"I'm sure that won't be the case.\"\n\n*****\n\nIt was almost two hours later that I was on my knees near the foot of Greg's bed with him pushing his hard dick into my ass. That's when I got my next surprise.\n\nGreg, just as he was pushing inside me, grabbed my hair and roughly yanked my head back and twisted it to one side so he could kiss me passionately. Fuck that hurt, but I made no sign.\n\nThe entire time he was thrusting his dick into my ass, he kept my head pulled back. As his thrusting continued, he pulled my head back even more roughly. It felt at one point like he might actually yank the hair out of my scalp, but it was erotic too. There was just something about being controlled that made it even hotter for me.\n\nSeveral minutes after filling my ass with his cum, Greg rolled off me and lay beside me with a huge grin on his face. \"Damn! Don't you look all proud of yourself?\" I said in a semi sarcastic tone. \"Did you think a little hair pulling was going to make me yell 'uncle'?\"\n\n\"It did Angie.\" He said somewhat smugly.\n\nI put my hand on his cheek and forced him to look at me. \"I told you already; I'm not Angie.\"\n\nJust before we fell asleep that night, Greg whispered to me, \"We should move your things in here tomorrow.\"\n\nI put my head on his chest and yawned, \"Okay.\"\n\n*****\n\nThe following Friday night, while we were about to go to sleep after a fairly rough ass fucking, Greg told me, \"I want to fuck you.\"\n\nI giggled, \"Again?\"\n\n\"No, I mean REALLY fuck you . . . your pussy.\"\n\n\"I'm not ready for that. Why is that so important anyway? Don't you like fucking my ass?\"\n\n\"Of course I do, but I don't like you withholding something from me.\"\n\n\"Greg, so far, I'm sure you'll agree that I haven't denied you anything, and I won't start now. I'm just not ready for that yet.\"\n\n\"You'll never deny me anything else? Is that what you just said?\"\n\n\"Yeah, you heard me right . . . anything but that, and I promise you'll be the first when I'm ready.\"\n\n\"Okay, but I'm going to hold you to the 'anything but that' promise. Are you sure you don't want to take it back?\"\n\nI shook my head, \"No, I don't.\"\n\nHe kissed me warmly on the lips, and then he yawned, \"We'll see about that.\"\n\n*****\n\nThe next Friday evening, Greg again gave me plenty of opportunity to retract my bold statement that I wouldn't refuse him anything but access to my pussy with his dick. But WOW! I never expected what came next.\n\nWe were in the hot tub. I'd just mixed myself a mild Screwdriver, and he was half way through his first beer. \"I bought you a present.\" He told me.\n\n\"Oh? I love presents.\" I said with a smile.\n\nGreg climbed out of the hot tub and took a small box from under a towel. And then he got back into the hot tub and handed it to me.\n\nWhen I peeked inside it, my eyes flew open and my jaw dropped, \"You've got to be fucking kidding?\"\n\nHe just sat there, sipping his beer, a huge grin on his face and raised a daring eyebrow. \"I have them set on the mildest setting.\"\n\nHoly shit! I couldn't imagine any setting being 'mild' enough for me to be able to endure the pain I was sure would accompany putting on the nipple clamps in the box.\n\n\"Really?\" I questioned him, hoping beyond hope that it was just a twisted joke.\n\nWith a grin still on his face, he said, \"You can always give up some of that pussy you're withholding from me.\"\n\n\"Fuck you.\" I said as I removed the clamps from the box. I held them up by the gold chain which connected them. \"Go get me another Screwdriver\u2014a strong one, and bring the bottle of Tequila out here just in case I need it.\"\n\nHe let out a very satisfied laugh, \"Yes, Ma'am.\" He was still laughing all the way into the house.\n\n*****\n\nWhen Greg returned to the hot tub, I immediately took two long tugs from the bottle of Tequila. I waited a couple of minutes for the alcohol to begin tingling my nerves, and I hoped dulling them.\n\nGreg just sat there sipping his beer and grinning like the cat that just ate the canary. Finally, I couldn't put it off any longer. There was no way I was going to let him win this round.\n\nI pulled on my left nipple, pinching it with increasing pressure until I was sure it was as numb as it would get. And then I took a deep breath and put the clamp on it. HOLY FUCK! Just to make sure he wasn't lying, I twisted the small knob. Sure enough, the pain got even worse, so I backed it off again.\n\nBless his heart, Greg tried to give me an out, \"Tina, you don't have to do-\"\n\n\"Fuck you!\" I said again as I put the other nipple clamp in place. Proud of myself for enduring the pain and not showing weakness, I tipped up the bottle of Tequila and took another long swig.\n\nI looked at Greg defiantly, \"So, what's next? Did you buy a cat-o-nine tails or a riding crop . . . handcuffs, a ball gag?\"\n\nHe chuckled, \"No, but I can always make another trip to the sex shop.\"\n\n\"Maybe I'll go with you so I can buy a strapon to use on your ass.\"\n\n\"Ouch!\" He winced.\n\n\"Just remember, two can play this game. What's good for the goose . . .\"\n\nEven though I didn't admit it to Greg, once the initial pain of the clamps passed, I found it VERY erotic. \"Just hurry up and drink your beer.\" I said as I got out of the hot tub. After drying off some, I went inside and got two more beers and three bottles of water.\n\n*****\n\nIt was almost forty-five minutes later when Greg announced that he needed to pee 'really badly'. I just laughed at him, \"You can wait.\"\n\nThirty minutes later, he was literally begging. \"Okay, come over here and let me get you ready. When he was standing in front of me, I began getting him hard with my mouth and tongue.\n\nWhen he was fully hard, I crawled out of the hot tub with him following close behind. On the grass, I stood in front of him, \"See if you can hit my tits, but you can't use your hand.\"\n\nHis face reddened, \"I need to use my hand to get it started.\"\n\nI looked him right in the eyes, \"If you need that, then you don't need to go bad enough yet, so we'll just stand here until you make it happen.\"\n\n\"Bitch!\" He said, but I knew he was just kidding.\n\n\"Asshole.\" I fired back at him.\n\n\"Cunt.\"\n\n\"Pussy.\"\n\nAnd then, all of a sudden, a short spurt of pee shot out of his dick. \"See\" I giggled, \"I knew you could do it. Now get with the program.\"\n\nA few seconds later, his stream started arching into the air. At first, it flew over my shoulder, but he shifted his position until hit was landing on my tits with only a little splashing off my chin. \"That's a good boy. I knew you could do it, so don't give me any shit next time.\"\n\n\"Yes, Ma'am.\" He said with a chuckle, followed immediately by a relieved \"Ahhhhhh\".\n\nWhen his stream began to diminish, I took a step forward so he could still reach my tits with it. In all honesty, I found that hot as shit. I needed to pee as well, and I almost squatted in front of him to relieve myself, but I had a better idea.\n\nWhen he was finished, I made him lay down on the grass, and then I squatted over him, guiding his hard dick into my ass. I managed to get him inside me, using only spit for lube.\n\nWhen I had him fully inside my ass, I put my hands on his shoulders and had him sit up. \"Now, don't move.\" I instructed him. I sat there, my ass impaled with his hard dick for a couple of minutes, concentrating totally until I managed to accomplish my mission.\n\nSure enough, it wasn't long before I managed to begin peeing, spurts at first, and then a total flood. When he felt it, he started laughing, and that made me start laughing, and then we kissed passionately while I drenched us both.\n\nFinally, when I was finished relieving myself, I got up, walked over to the pool and dove in. He was right behind me.\n\nWhen Greg caught up to me in the deep end, we hugged and kissed again. And then he said something that shocked me, \"You'd better be careful. I might just fall in love with you.\"\n\nI didn't want things to get too serious, so I forced a giggle and pushed away from him, \"You already love me. You just don't know it yet.\"\n\n*****\n\nWhen Greg informed me we were invited to a party the following weekend, I questioned him about what kind of party. \"It's not an orgy, if that's what you're asking. It's just a normal party.\"\n\n\"Whew!\" I teased him, \"I was afraid you were going to start pimping me out.\"\n\nTo his credit, he got that I was kidding, \"Nah, that won't come until next month.\"\n\n*****\n\nI spent two days shopping for just the right blouse to wear to the party. I was one of those lucky girls who had fairly large tits, but could still go braless without them sagging much at all. The instant I pulled it from the rack, I knew it was the right one.\n\nEven though it was warm on the night of the party, I covered my new blouse from Greg's eyes until we pulled up in front of the house. And then I removed the cover as I got out of his pick up. We were half way up the sidewalk before he noticed.\n\n\"Wait!\" And he turned me toward him, \"Holy shit! That's one hot top.\" He said with his eyes wide and a huge grin on his face.\n\n\"I'm glad you like it.\" I giggled and continued on to the front door.\n\nHell, I agreed with Greg. It was hot. It was a very thin white silk blouse with no buttons in the front. The only thing that kept it from being too blatant was the long tails that were tucked into my blue jeans. The wide plunging V traversed my D cup tits, showing plenty of their round insides. Of course, it was easy to see the nipple clamps through the material. The gold chain which traversed from one nipple to the other was in clear view.",
        "Being so bold excited me, especially once we were inside the house and Greg was introducing me around. Most of the attendees didn't make much effort to disguise their staring. I loved it.\n\nAt one point in the evening, while waiting in line in the hallway for my turn in the bathroom, one of the other females pointed at my chest and asked me, \"Don't those hurt?\"\n\nI looked her right in the eyes, \"A little, but in the most delicious way. Would you like to try them?\"\n\nI couldn't help but laugh when she declined.\n\n*****\n\nIt was probably an hour later when I was in the backyard and sipping on a Screwdriver, that another girl approached me. \"That is one sexy look\" she told me after introducing herself as Jana.\n\nShe was a cute blonde, about my height, and also wearing a practically see-through blouse which did little to hide her long dark nipples. They were perched proudly on what I guessed were C cup, perky tits.\n\n\"Thanks, it's the first time I've tried it.\" I told her with a big smile.\n\n\"Well, if I may say so, it fits you perfectly. You might even tuck it in a little further around your waist.\"\n\n\"Oh?\"\n\n\"May I?\" she asked, looking me right in the eyes.\n\nWhen I raised an eyebrow and nodded, she slid her fingers inside the hem of my jeans and slid them out and pulled the tails of my blouse around me further. That made the V wider, just enough to allow a portion of my nipple clamps to show.\n\nI giggled, \"You don't think that's a bit . . . much?\"\n\n\"Not at all.\" She said with a chuckle, \"Everyone can tell you're wearing clamps, so you might as well give them a little peek at them.\"\n\n\"Have you ever tried wearing clamps?\" I asked her.\n\nJana took a sip of her drink, \"I have, but I need to be in just the right mood to enjoy them. The guy I was dating loved it. He liked hanging small gold weights on the chain to intensify the harshness.\"\n\n\"Ouch!\" I exclaimed perhaps a bit too loudly, \"I still have mine set on the mildest setting.\" \n\nShe put a hand on my shoulder, \"Don't worry, hun. You'll be tightening them down to the highest setting before you know it. And, if you have a long enough clit, you'll be amazed at how hot you'll get wearing one there too. Do you think yours is long enough?\"\n\nI couldn't believe we were standing there, total strangers, and discussing the size of my clit. I shrugged, \"I don't know.\"\n\n\"Well, if it won't freak you out, I'll be happy to have a look sometime and give you my opinion. You don't have to answer right now. If you ask for my number before leaving, I'll take that as a yes.\" And then she gave me a playful kiss on the cheek. When she turned to walk back inside, she paused just before stepping inside, looked over her shoulder at me, and showed me a sexy grin.\n\nI did get Jana's phone number before leaving the party.\n\n*****\n\nWhen Greg and I got home, we were barely inside the front door when he ripped down my jeans and panties and bent me over his stuffed chair. At least he was kind enough to moisten his dick with spit before forcing it into my ass.\n\nVery unlike him, he came within a couple of minutes. \"I'm sorry\" he apologized, \"It's just that you were so hot tonight, I couldn't wait.\"\n\nI turned and wrapped my arms around his neck. Before kissing him, I purred, \"That was the whole point.\n\n*****\n\nJana wanted to meet me at the Diamond Club for afternoon cocktails. I told her I was only nineteen, but she insisted it wouldn't be a problem. \"I know everyone who works there.\"\n\nWhen the waiter had delivered our drinks, a Screwdriver for me and a Rum and Coke for her, she said, \"Well, get that clit out here and let me have a look at it.\"\n\nI'm sure my jaw hit the table and my eyes shot open wide. And then she laughed so loud, it echoed through the whole club. \"Oh my god! Girl, you should have seen your face just now. Too bad I didn't have my camera ready.\"\n\nAnd then the humor of it hit me and I started laughing too.\n\n\"So, the guy you were with . . .\"\n\n\"Greg\" I offered, \"We live together. He has a nice house off campus, pool, hot tub, the works.\"\n\n\"Lucky girl.\" She mused, \"So, does he know you're bi?\"\n\nI played coy, \"What makes you think I am?\"\n\nJana showed me a stern look, \"Just a second.\" She got up and scooted into the booth beside me, and then she immediately kissed me. When she broke our kiss, she smirked, \"That's how I know. Now, I only have a couple more questions.\"\n\n\"Okay\"\n\n\"Is Greg going to freak out when you bring me home? And are you going to freak out if I fuck him?\"\n\nI looked her right in the eyes, \"No to both.\"\n\n\"Good, then set it up for a weekend in the near future.\"\n\n\"I will.\" And I leaned in and kissed her again.\n\n*****\n\nWhen I got home, I was so horny, I almost took care of myself, but I managed to wait until Greg got home. \"I need your dick in my ass, and I mean right now.\"\n\nI waited until Greg was behind me and slamming his hard dick into my ass, and until I'd already cum twice, \"I met a girl for drinks this afternoon. She wants to fuck both of us.\"\n\nGreg never missed a thrust. He grabbed my hair and pulled my head back roughly, \"But do we want to fuck her? What does she look like?\"\n\n\"Shoulder length auburn hair, green eyes, my height and general build, firm tits a little smaller than mine, and she has an incredible ass. And yes, I want to fuck her. You'll like her too. She has a kinky side.\"\n\nThat's when he pulled my head back even more and started filling my ass with his cum.\n\n*****\n\nFriday evening at six p.m. sharp, Jana rang our door bell. Two steps inside the house, and after dropping her beach style shoulder bag onto the floor, she pulled me in for passionate kiss. And then she released me and gave Greg a similar kiss. \"Okay, now that the ice is broken, where's the pool?\" She asked with a laugh.\n\nGreg just looked at me, raised his eyebrows and shook his hand as if it was hot. I giggled, \"I told you she wasn't shy.\"\n\nBy the time I got to the back door, Jana was just stepping out of her panties. That's when I got my first look at her naked body. Her tits and ass were incredible. \"Do you want something to drink? Rum and Coke?\"\n\nShe turned and showed me a smile, \"I'd love one, thanks.\" And then she turned and dove into the pool.\n\nI peeked my head inside as I was peeling off my clothes, \"Bring a Screwdriver and a Rum and Coke, please.\"\n\nWhen Greg came out with our drinks, Jana and I were making out in the shallow end of the pool. When we heard him say, \"Here ya go,\" and we looked around at him, we both giggled when we saw he was already naked and semi hard.\n\nI loved the way Jana's perky tits felt against mine. They had a much different feel than Angie's, firm with very long taut nipples. It was all I could do to turn loose of them long enough to take my drink from Greg.\n\n\"Nice tits.\" Greg told Jana when handing her the Rum and Coke.\n\nSeeing he'd grown to almost full erection, she giggled, \"Nice cock.\" And then she let out a \"YeeeHaaa, there's going to be a hot time in the old town tonight.\"\n\nGreg added, \"Save a horse, ride a cowboy.\" When he stopped laughing, he told us, \"I'm going to head to the hot tub and let you two have some time to yourselves.\"\n\n\"Awwww\" Jana said, \"You didn't tell me he was such a sweetie.\"\n\nGreg laughed again and looked over his shoulder as he was walking away, \"Hey, don't go blabbing it around and ruin my reputation.\"\n\n*****\n\n\"So, is there anything special I need to know?\" Jana asked me when Greg was out of earshot.\n\n\"About me or Greg?\"\n\n\"Both.\"\n\n\"When he's fucking me from behind, he likes to pull my head back by my hair. Sometimes it gets a little intense.\"\n\n\"Sweet! I love 'intense'. Now, how about you?\"\n\n\"Just two things: I prefer it in my ass, and I like to watch him pee with a hardon . . . sometimes on me.\"\n\n\"Awesome!\" Jana said with a giggle. And then she put her hand behind my neck and pulled me in for a passionate kiss. When our lips parted, she purred, \"We're going to have a lot of fun.\"\n\n\"You don't think that's too weird?\" I asked her.\n\nShe laughed, \"Tina, on the weird or kinky scale from one to ten, those things combined put you at about a two. He can pull my hair all he wants . . . the harder the better, and as for the other thing, I've never seen a guy do that. I didn't know they can. Count me in.\"\n\n*****\n\nJana and I went inside and mixed ourselves fresh drinks, and then I grabbed three beers and three bottles of water out of the fridge. When Jana gave me a questioning look, I giggled, \"This oughta be enough to make sure he really has to pee. Oh, and by the way, when he's finished peeing, I always get him off as a reward, and-\"\n\n\"I'll take care of that.\"\n\n\"Okay then, we'll add 'mind-reader' to your list of talents.\"\n\nBefore going back outside, Jana went to her bag and pulled out a set of nipple clamps. \"Go get yours.\"\n\nI pinched my nipples hard to numb them on my way to our bedroom. When I got back to her, both of us had our clamps in place.\n\n\"Very nice!\" Greg said when he saw us wearing the clamps. And then he laughed when I sat the three beers and water on the ledge of the hot tub. \"Have you two been conspiring against me?\"\n\nJana spoke up, \"Against you\u2014NO\u2014FOR YOU\u2014absolutely.\"\n\n\"I like the sound of that.\" He said, looking at me as he reached for the first beer.\n\n*****\n\nJana stood up and walked across the hot tub. She stepped up between Greg's legs, and then reached down under the water. Just as quickly, she spun around to me and said, \"I was just checking, and YES, he's still hard.\" And then she walked back to me, bent over and kissed me passionately.\n\nWhen we came up for air, I told her loud enough for Greg to hear, \"You should keep checking every few minutes. We don't want any surprises.\"\n\n\"Oooooo, I'd love to.\"\n\nWhen I looked at Greg, he was tipping up his beer and taking a long tug.\n\n*****\n\nJana and I were sitting side by side and playing with each other's tits when she said to me, \"It's pretty progressive of you not to care if your boyfriend fucks me.\"\n\nI chuckled, \"Hell, it wasn't that long ago I was you. He was fucking my roommate when she brought me into it. And then she couldn't come back this semester, so here I am\u2014we are.\"\n\nI was being totally honest with her. Even though my feelings for Greg had evolved into more than just 'liking' him, the whole sex thing didn't bother me one bit. If you'd told me six months earlier I would feel that way, I wouldn't have believed it.\n\nI guess I'd feel differently if I found out he'd been sneaking around and fucking someone else behind my back, but that wasn't the case. \n\n\"Sweet.\" And then she looked at Greg, \"Do I need to check you again, Cowboy?\"\n\nGreg stood up and shifted his hips back and forth, causing his hard dick to swing to and fro. \"You can check if you want, but I think I'm good.\"\n\nI laughed, \"I think he likes watching us make out. What do you think?\"\n\nShe looked over at me, \"Then I think we should do some more of that.\"\n\nSo we did.\n\n*****\n\nWhen Greg notified us that he needed to pee really badly, Jana turned to me and asked, \"Okay, show me how you do it.\"\n\nI crawled out of the hot tub, \"I'll be right back.\"\n\nI returned a minute later with another beer and another bottle of water. Even before I got to the hot tub, Greg was pleading for relief and Jana was laughing her ass off.\n\nWhen I handed Greg the drinks, Jana said, \"Ooooo goodie, 'pee deprivation torture.' I love it.\"\n\nI laughed, \"They actually have a name for it?\"\n\nGreg spoke up, \"Yes, the name is 'pay back is a bitch'. Just remember that.\"\n\nJana looked at me, \"I'm scared. Are you scared?\"\n\n\"Shaking in my boots . . . oh wait, I'm not wearing boots.\" And we both laughed.\n\nGreg was a real trooper. He resisted the urge to pee while he downed the beer and water, and for the fifteen minutes after that. Of course, it didn't hurt that Jana increased the trips she made over to him to 'check' that he was still hard.\n\nFinally, I thought it was time to let Greg off the hook. \"Outside is the best.\" I told Jana, \"No cleaning up afterward.\"\n\nI stood on the grass a few feet in front of Greg and told Jana, \"Sometimes I like to go down on him until he's ready, kinda like siphoning liquid from a hose. I'll warn you though, if you want to do that, you may get the first shot in your mouth.\"\n\nJana responded by dropping to her knees in front of Greg and immediately taking his hard dick into her mouth.\n\n\"I'm there.\" Greg warned her, but she just kept sucking on his hard dick for another minute.\n\nWhen she finally removed her mouth from him, his pee shot out and arched high into the air, landing on my shoulder and chest. She then stood up and turned to me, letting a mouth full of Greg's pee dribble out of her mouth.\n\nAnd then Jana grabbed his dick and began aiming it so that his arching pee fell on my tits and stomach. She then turned to one side and moved in so that his stream hit her tits on the way up.\n\nI was shocked when she didn't seem the least bit affected when it missed her tits and splashed against her face. She even opened her mouth to take some in before aiming his stream back to where it would land on me.\n\nWhen he was almost finished, she dropped to her knees again and took his dick into her mouth.\n\nFinally, Jana stood up and said, \"Don't move. I'll be right back.\" And then she dove into the pool, immediately crawling out and drying herself briefly before running into the house.\n\nWhen she was out of earshot, Greg raised his eyebrows and said, \"WOW! She's a little freaky, huh?\"\n\n\"Well, are you complaining?\"\n\n\"Hell no, not at all. I love it.\"\n\n\"I'll keep that in mind.\" I told him with a grin.\n\nWhen Jana returned, she had a small item covered with plastic as if it'd been taken from a peg at any store. When she opened it, there were five rubber rings of various sizes. All of them had little knots or bulbs on them.\n\nShe pulled out the smallest one, licked it, and then stretched it until she could work it over the head of Greg's dick. And then she rolled it down until it was at the very base of his dick. \"There! That should keep his cock hard until we're ready.\"\n\n\"We're not ready?\" I asked her.\n\n\"Nah, not yet. Tonight should be about us. We can make it up to him tomorrow.\"\n\n\"Any complaints?\" Jana asked Greg.\n\nHe shook his head, \"I'm all yours, except this thing is pulling my hair.\"\n\nJana laughed and looked at me, \"We should shave him later.\"\n\n\"Later? Why do we have to wait?\" I asked her.\n\nJana laughed, \"Hell, go get a razor, hot water, and some shaving cream.\"\n\n*****\n\nWhen we were done shaving Greg's dick and balls, which he seemed to really enjoy, instead of putting the constrictive ring back on his dick, Jana suggested we give it a break, \"Remember the four hour rule\", she said while laughing.\n\nGreg and I both got her reference to ED commercials on TV. \"Go take a shower and rest up.\" I told him, but then I admonished him, \"But no peeing and no beating off.\"\n\n*****\n\nJana and I were sitting side by side on the steps of the pool, both of us enjoying the sun and the cool water when I confessed to her \"I don't know what it is about the whole pee thing that I like so much.\"\n\nShe chuckled, \"I do. It makes perfect sense.\"\n\nI turned to face her, \"Oh? Do tell.\"\n\n\"Two years ago, right after high school graduation, a bunch of us drove down to Corpus to party. On our second evening there, the guy I was with dared me to go skinny dipping. Everyone else was wearing suits, but I did it. After a brief swim, I walked out of the water only to find the asshole had carried my bikini back to the bonfire.\"\n\n\"Oh my god! What did you do?\"\n\n\"What could I do? I walked past all the others, up to him, and held out my hand for my bikini.\"\n\n\"Okay, so you had guts. I don't see your point.\"\n\n\"Tina, the point is how I felt between walking out of the water and getting my bikini back on\u2014defiant for sure, but it was much more than that. It made me feel naughty as hell, and I loved it.\"\n\n\"Naughty, huh?\"\n\n\"Yes, I call it the 'Naughty Factor'. Your roommate last semester, what's her name, was she your first girl-girl?\"\n\n\"Angie, and yes, why?\"\n\n\"I'm sure it made you horny as hell, but didn't it also make you feel a little bit naughty?\"\n\nI chuckled, \"More than a little.\"\n\nAfter nodding, she continued, \"And the first time you took it in the ass, and when you walked into that party with your nipple clamps showing, and every time you have Greg pee with a hardon?\"\n\n\"I guess, yes to all of the above.\"\n\n\"That's the 'Naughty Factor'.\"\n\n\"I'm afraid I'm not as bold as you are.\" I told her.\n\nWhen Jana stopped laughing, she looked me straight on and said, \"Before this night is over, you're going to watch your boyfriend fuck me, and we're going to get it on in front of him. I'd say that's pretty bold.\"\n\n\"That's just the three of us.\"\n\nShe showed me a scolding look, \"It was more than the three of us at the party last week.\"\n\nAfter considering her words for a few moments, I had to admit, \"True\".\n\n\"And I'm guessing the sex that night was incredible. Am I right?\"\n\n\"Yes, it was mind blowing. We barely got into the house.\"\n\n\"Okay then. It turned you on, and it turned him on. Naughty is hot. Nuff said!\"\n\n\"Gotcha.\"\n\n*****\n\n\"Greg\" I called out, \"I need to pee.\"\n\nHe understood what I wanted, so he crawled out of the hot tub and walked over onto the grass. He immediately lay down on his back.\n\nJana giggled as I squatted over his hard dick and started peeing on him. Even before I was finished, Jana was squatted over him facing me. She pulled me in for a passionate kiss and then let her pee begin splashing down onto his chest and stomach.\n\nWhile she was kissing me, Jana put her hand over my pussy, causing my pee to splash all over the three of us. Without thinking, I did the same to her. Greg yelled, \"Hey!\" and I realized that my hand was causing her pee to splash onto his face.\n\nJana laughed and said, \"Shut up.\" And with that, she moved backward, causing the last of her pee to hit him right in the face.\n\n\"That wasn't nice.\" He said when she was finished and the two of us stood up.\n\n\"Get over it.\" Jana said while still laughing.\n\nHe responded, \"Payback's a bitch.\" And we all jumped into the pool.\n\n* * *\n\nA few minutes later, Jana rolled the rubber ring off of Greg's dick. \"Would you be a doll and give us some alone time? I promise we'll take good care of you later.\"\n\n\"Sure.\" Greg answered.\n\nJana and I dried off and went into the house and to our bedroom. The first thing we did was remove our nipple clamps. God, what a relief. I massaged my poor nipples, trying to urge the blood to reenter them.\n\nAfter making out for awhile, Jana told me to lie down on my back, but I asked her, \"Please, can I do you first?\"\n\nWithout answering, she lay down on the bed. I started by kissing her a couple of times before moving down and spending a long time licking and sucking her beautiful firm tits.\n\nWhen I moved between her legs and began licking her pussy, I got a wonderful surprise. I couldn't believe how sweet she tasted\u2014much sweeter than Angie. I made a mental note to ask her if she did something special to her pussy or if it was just the way she was.\n\nIt took me a long time to give her a first orgasm, and I could tell it wasn't a great one. \"My clit\" she answered my questioning look, \"Suck it in and bite it. Don't be gentle.\"\n\nI was tentative when I first closed my teeth on her clit. When I looked up at her, she was pulling and twisting her nipples so much, it looked like she might actually pull them off. \"Harder\" she instructed me. So I applied more pressure with my teeth. \"Harder\" she commanded.\n\nI was afraid I'd hurt her, but I thought it best to trust her, so I really clamped down hard with my teeth, flicking her clit with my tongue the whole time. Her response was almost immediate. She began bucking her hips up and moaning loudly.",
        "When Jana finally came hard, she flooded my mouth with her slick sweet cum. I lapped it up as fast as I could and then used my fingers to get the last of it out of her pussy. \"God! You taste incredible.\"\n\nJana giggled, \"Yes, I know.\"\n\n* * *\n\nI was so horny, I couldn't wait to feel Jana's mouth and tongue on my pussy, but she wanted to take a break. On our way to the kitchen to mix our drinks, we saw Greg sitting in his recliner watching TV. We both giggled when we saw a beer and two bottles of water sitting on the end table.\n\nJana elbowed me when we got into the kitchen, \"I think he likes the whole pee thing. He's not just doing it for us.\"\n\n\"I'm glad.\" I told her.\n\n* * *\n\nBack in the bedroom, it didn't take long for Jana to give me my first orgasm. As usual, it was a mild one. When she looked up at me, I told her, \"That's normal for me. The next one will be a lot better.\" Hearing that, she grinned and went right back to eating my pussy.\n\nWhen I began cumming again, Jana surprised me by slapping my outer thigh hard over and over. Wow! For some reason, the pain made my orgasm even more intense. I never would have thought that.\n\nJust as I was recovering from my orgasm, Greg knocked on the door facing. \"I really need to pee.\" He told us.\n\nJana looked around at him and gestured to the dressing chair, \"Sit and watch.\" He obeyed, but he had a strained look on his face.\n\nFive or so minutes later, she had me cumming again. This time, just as my orgasm started, she reached up and began pinching and pulling on one of my nipples so hard, it caused me to cry out \"GOD!\" That orgasm was so intense; I had to struggle not to pass out.\n\n* * *\n\n\"He's going to try to pay me back for pissing on his face.\" Jana whispered to me when we broke a passionate kiss and before we led Greg into the bathroom.\n\nI giggled, \"What are you going to do?\" I whispered back to her.\n\n\"The best defense is a good offense. Are you in?\"\n\n\"What's with all the whispering? I'm in pain over here.\" Greg said in a strained voice.\n\nI didn't know what she had in mind, but I nodded anyway.\n\nA minute later, Jana and I were sitting side by side on the edge of the tub with Greg standing in front of us. His dick was only semi hard, so Jana took it into her mouth and began working him to full hardness.\n\nI didn't realize he managed to get a spurt or two of pee out until I heard the gurgling sound come from Jana's mouth and saw a dribble escape from her lips. When she withdrew, Greg's pee shot out over her head. She immediately pointed it toward me, aiming it right at my face. \"Open up\" She instructed me.\n\nWhen I did, I was surprised that his pee had lost that salty, tangy taste. It was almost like water. I surprised myself by moving my mouth over the head of his dick, swallowing as best I could.\n\n\"Don't get greedy.\" Jana told me, yanking his dick out of my mouth and replacing it with hers.\n\nAfter a few seconds, I pulled his dick out of her mouth and back into mine, gulping as fast as I could. Before his stream began to wane, Jana took it back and kept her mouth on it until he was totally finished. And then she kissed me.\n\n\"Holy shit!\" Greg exclaimed, \"That was hot as fuck.\"\n\n* * *\n\nLater, while Greg was fucking Jana's pussy with his hard dick, I had to admit to being tempted to try it myself. He was really plowing her hard and fast, and she was cumming every few minutes. Of course, it didn't hurt that I had my hand between them, rubbing her clit while he fucked her. I was also biting one of her nipples, which she seemed to love, telling me \"Harder\" over and over.\n\n* * *\n\nThe following Wednesday evening over dinner at The Olive Garden, Greg told me, \"I've invited some friends over to watch football on Sunday.\"\n\nThat made sense. He did, after all, have a wonderful seventy inch flat-screen TV mounted on his living room wall. \"Okay, I can go to the mall or something if you want me to make myself scarce.\"\n\nHe looked right at me, \"I was hoping you might be our waitress.\"\n\nI analyzed the grin on his face. \"Oh, do you want me in a sexy little waitress uniform?\"\n\n\"That would be great.\"\n\nI giggled, \"I'll see if I can find something suitable.\"\n\n* * *\n\nWhen I told Jana what Greg wanted me to do, she practically begged to join me. I agreed, but I didn't tell Greg.\n\nJana showed up at our house just after nine on Sunday morning. Greg was sleeping in. We hadn't gone to sleep until almost three in the morning after me giving him a blowjob and him fucking my ass twice.\n\nGreg's friends were supposed to show up at eleven thirty, so I woke him up at eleven. \"Your friends will be here in thirty minutes, and you definitely need a shower.\"\n\nAfter his shower, he came into the kitchen and found me and Jana making a variety of finger sandwiches. We'd already made the dip, which consisted of a pound of melted cheese mixed with two cans of Ro-Tel, some chopped onions, a half pound of cooked ground beef and a little miniature elbow macaroni, all simmering in a Fondue pot. We were both wearing our nipple clamps and red thongs.\n\n\"Oh, hi\" He said to Jana.\n\n\"I hope you don't mind. She wanted to join us.\"\n\nHe shook his head, \"No, I don't mind a bit. I think it's great. Have you two decided on what you're going to wear?\"\n\nJana and I both laughed. \"You're looking at it.\" I told him.\n\nGreg's eyes shot open, \"Really?\"\n\n\"Unless you really want us to put on more.\" Jana told him.\n\nThat caused Greg to chuckle, \"No, no, what you're wearing it perfect. The guys probably won't be able to concentrate on the game, but that's their problem.\"\n\nI'd just finished tossing back two shots of Tequila and mixing myself a Screwdriver when the doorbell rang. \"I'll get it.\" Jana said with a giggle.\n\nGreg went with her to the door and a few seconds later, Greg was introducing me and Jana to James and Kyle. Both boys had their eyes bugging out while they shook our hands.\n\n\"You guys go on into the living room. What do you want to drink?\"\n\n\"Beer for me.\" Kyle said, his eyes still bouncing from my tits to Jana's.\n\n\"James likes Jack and Coke.\" Greg said when it was obvious James was struggling to get his voice. \"I'll take a beer.\"\n\nI was surprised how much being naked in front of Greg's friends made my pussy begin to moisten.\n\n\"Are you okay?\" Jana asked me when the guys were gone.\n\nI looked her right in the eyes, \"I'm better than okay. I'm afraid my thong is going to get soaked.\"\n\nShe giggled, \"I know. It's fun, isn't it?\"\n\n\"Yes.\" I said while I was mixing James a light Jack and Coke.\n\n\"Just wait till the other three show up.\" She said with a chuckle.\n\nWe were just delivering the drinks to the living room when the door bell rang again. Greg got up and went to the door while Jana and I headed back to the kitchen to get the snacks.\n\nTodd, Travis and Jonathan (they called John Boy) had about the same reaction to seeing us as Kyle and James had. After taking their drink orders and delivering them to the living room, we began carrying out the snacks.\n\nWe put six plates and six small bowls on the coffee table and the Fondue pot with a dipping spoon. Next was two larger bowls, one containing round corn chips and the other filled with Nacho flavored Doritos. Lastly, we carried in two plates stacked high with finger sandwiches.\n\nBy the time we were finished delivering the snacks, my pussy was so wet, I was afraid it would start running down my thighs. Jana told me she was in about the same shape.\n\nWhen we weren't refilling drinks, Jana and I sat at the dinning room table where we could see into the living room. More than once, we caught the guys looking our way.\n\nDuring a commercial break, John Boy got up and told the others he needed a pit stop. Jana jumped to her feet and hurried over to him. She took his hand, \"C'mon, I'll show you the way.\"\n\nI wondered if she was actually going into the bathroom with him, but when I got up to take Kyle another beer, I glanced down the hallway and saw Jana waiting just outside the closed bathroom door. Soon, she was escorting John Boy back into the living room.\n\n\"Next.\" James said, getting to his feet. I did just what Jana had done, escorting him to and from the bathroom.\n\nPrior to the end of the first half, Jana and I had escorted all the guys to the bathroom and refilled their drinks. Then, she and I went out back. We took off our thongs and nipple clamps, leaving them on concrete.\n\nWe were laughing and giggling the whole time. A few minutes later, the sliding door opened and all six guys came outside. \"Halftime\" Greg told us.\n\n\"Oh, you don't want to watch the halftime show?\" Jana giggled.\n\n\"Not when there's a better one out here.\" Travis said with a chuckle.\n\nJana whispered to me, \"Let's give them a show.\" And she pulled me in for a really toe curling kiss. The guys all started whistling and clapping.\n\nWhen we broke that kiss, Jana lowered her head and began sucking on one of my tender nipples. I put both of my hands on her head and looked at the guys, \"Is this the kind of show you had in mind?\"\n\n\"Hell yeah!\" and \"Awesome\" and more whistles were their responses.\n\nAfter moving up and kissing me again, Jana whispered to me, \"Go to the steps and lay back on the edge.\" When I did, she immediately got between my spread knees and began licking my pussy. I put both hands on her head and smashed her mouth to my pussy. Of course, the guys were all going crazy, whistling and whooping it up.\n\nWhen I came a couple of minutes later, I made a show of it, \"OH FUCK! I'M . . . OH FUCK!\" And I began bucking my hips off the concrete. When I settled down, Jana looked up at me and winked, signifying she understood my reaction to cumming was all for the benefit of our audience.\n\nI heard one of them say to Greg, \"Shit, we need to hire them for our next party.\"\n\nGreg sounded offended when he told the group, \"They're not for hire. Tina lives with me and Jana is a friend of ours.\"\n\n\"Sorry, I didn't know.\" Todd said in what sounded like a sincere tone.\n\nWhen Jana stood up and dove into the water, I did the same. She called to the guys, \"show's over. Who needs fresh drinks?\"\n\nThe guys got the hint and went back inside. When the door closed behind them, I told her, \"Whew! That was incredible.\" She and I both burst out laughing.\n\n* * *\n\nBack inside with our thongs and nipple clamps back in place, Jana and I continued delivering drinks and escorting them to and from the bathroom.\n\nWhen the game was over and they were all leaving, she and I gave each of them a full body hug. I wasn't paying any attention to Jana, so I assumed none of them took liberties. They hadn't with me.\n\nBefore cleaning up, Jana and I gave Greg a double header blowjob. We wanted him to have time to recuperate while we were cleaning and loading the dishwasher. Then we took Greg into the bedroom and spent the next many hours fucking him and each other.\n\n* * *\n\nThe next three weeks, Mother Nature called, so first me and then Jana were out of commission. We still took care of Greg though. He couldn't understand why my ass was off limits, but I just explained that I wasn't in the mood.\n\nDuring that time, Greg spent every evening on the internet. I practically had to drag him away from it to come to bed. When I asked what he was doing, he'd just blow me off with some lame explanation.\n\nFinally, he invited me to join him at his computer. He showed me what he'd been doing. He'd been visiting a website that had literally dozens and dozens of chat rooms. The one he chose to monitor was one called \"Fetishes\".\n\nThe unique thing about the chat room, other than the topic, was that it had live video feeds. Everyone with their video camera turned on would have an icon on the left side of the window. As with most other chat rooms, a list of the people in the chat room was on the right. To view a live cam, all you had to do was click on the icon on the left.\n\nMost of the cams showed men peeing. There were a few girls sprinkled in, but not many. Usually, the cam would be zoomed in to just show the guys dick or the girl's pussy. One video showed a guy wearing a bra and panties. Another showed a guy licking and sucking a girl's toes.\n\nWhen Greg asked me about the one with the guy in girls underwear, I poked him with my elbow, \"Hell no! I like my man to be all man.\" And when he asked me how I like the toe sucking one, again I told him no, \"But I wouldn't mind a good foot massage sometimes.\"\n\n\"Wanna have some fun?\" Greg asked me.\n\nThe chat room had my interest, so I asked him, \"What do you have in mind?\"\n\n\"Can Jana come over this weekend?\"\n\n\"Probably. What should I tell her?\"\n\nHe chuckled, \"Just tell her we found a new game.\"\n\n\"Okay.\"\n\n* * *\n\nGreg created a profile on the website. Our screen name was \"GoldenGirls\" Next we took still pics of each other. He had me put on one of the three Zorro masks he'd purchased and strip naked. After he took a sexy pic, he had me take one of him. I thought his dick should be hard, but he insisted it shouldn't be.\n\nWhen Jana arrived on Friday evening, we took a similar pic of her. And then Greg posted all three pics on our profile page. I had to laugh when I read what he posted on our profile, \"Just three friends enjoying a little pee fun.\"\n\nGreg moved his laptop into the bathroom and connected it to his camcorder, which he had mounted on a tripod. He positioned the tripod so that one leg was in the bathtub and two were on the floor. And then he had us sit on the edge of the tub side by side. He checked his view finder, telling us \"scoot a little to you left\".\n\nGreg then went to his laptop and told everyone in the room that the show would start in ten minutes.\n\n\"Don't you want to be hard?\" Jana asked him.\n\n\"Not this time.\"\n\nHe went to his laptop and started the video. Seconds later, he laughed, \"There's two dozen or so of them watching us, almost everyone in the room.\"\n\nWhen he stepped up in front of us, he told us to get cheek to cheek and open wide. It only took him a few seconds to start peeing. First, he soaked our hair and faces, and then he adjusted his stream to hit us right in our mouths.\n\nJust as Greg's stream started to wane, he told us to kiss. As we did, he kept aiming his stream on our joined faces. We kept kissing long after he was finished, and then we both turned to the camera, smiled and waved. Then Greg stopped the video.\n\nGreg moved the tripod so we could take a shower. While we were in the shower, he was scrolling back through the chat in the room. \"The chat room went nuts.\" He told us. \"They say ours was the best show they'd ever seen. We have about a hundred private messages to read.\"\n\n* * *\n\nWe gave the chat room a similar performance the following weekend. The only thing we did differently was Greg moving closer to us so we could actually lick the head of his cock while he was peeing in our mouths.\n\nWhen we were finished, Greg asked the people in the chat room, \"Would you like to see them both take it in the ass?\"\n\nThey said they would, so he told them we'd be back on cam in thirty minutes.\n\nJana and I took a shower and then took turns giving each other an enema, just in case. Greg was busy moving the laptop and tripod to the bedroom.\n\nA few minutes later, she and I were side by side on our knees on the foot of the bed with our asses stuck high in the air and our hands spreading our butt cheeks. After checking the view finder to ensure the camera was aimed properly, Greg turned on the video.\n\nThe people in the chat room got to watch as he got behind us and began licking our assholes, alternating from one to the other. They couldn't see our faces, so there was no need for the masks. Our faces were close enough so we could kiss at will . . . and we did, a lot.\n\nNext, Greg made a show out of lubing up his fingers and working them into our assholes while he had the fingers of his other hand going in and out of our pussies, again alternating between us.\n\nWe'd been teasing Greg a lot about not needing any help getting hard. His cock was as hard as I'd ever seen it. I didn't have to look back to know when he was pushing his cock into Jana's ass. Her face scrunched up and she let out a strained grunt when he entered her. And then her expression softened and she showed me a smile. I responded by kissing her and thrusting my tongue into her mouth.\n\nJana started moaning when Greg began rocking her body forward and then pulling her back. After only a couple of minutes though, he withdrew and moved behind me. Seconds later, he was buried to the hilt in my ass and began rocking my body just as he'd done to Jana.\n\nBoth of us expressed our displeasure when he'd abandon us and move to the other, but we knew this wasn't for our pleasure. It was all about giving our audience a good show.\n\nJust like in the porn movies, Greg pulled out and grunted as he came all over our asses. When he was finished, he turned off the camera.\n\nLater, we made sure he made it up to both of us. We didn't let him go to sleep until after four in the morning.\n\n* * *\n\nWhen the semester finally ended, I was sad to have to leave Greg and go home. I did talk to both him and Jana on the phone every day while I was at home.\n\nMidway through the break, Greg hit me with an idea, \"I've been thinking about asking Jana to move in with us next semester. I can clean out the guest room. What do you think?\"\n\nI was elated, \"Why can't she sleep in our bed? It's big enough.\"\n\nGreg stammered a bit and then he said, \"I'd rather keep our bed just for you and me, except for when we're playing, of course.\"\n\nHis words hit me like a sledgehammer. He really did love me, and he wanted to keep our \"play time\" separate. My heart melted. I made up my mind right there and then that I would let him fuck my pussy anytime he wanted.\n\n* * *\n\nThe End\n\nPlease remember to vote, leave a comment, or email me at my profile. I love hearing from readers, and I try to respond to every email."
    ],
    "authorname": "Tina_Kerr_36",
    "tags": [
        "anal sex",
        "oral sex",
        "female/female",
        "male/female",
        "water sports/pissing",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/an-obsession-or-two"
}