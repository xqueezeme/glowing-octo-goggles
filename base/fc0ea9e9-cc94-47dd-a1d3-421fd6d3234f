{
    "title": "Lesbian 101 Ch. 02",
    "pages": [
        "Brooke's eyes slowly opened and it took her a moment to realize she wasn't waking up in her own bed. She was lying on her side, her hand clasped over someone else's arm, which in turn was wrapped around her mid-section. Moving herself ever so slightly, Brooke felt another body spooning hers and a soft breath fell at the back of Brooke's neck. The room was dark and silent, except for the soft hum of heated air coming out of a furnace vent. Brooke didn't want to move for fear of disturbing Tyler, so she remained still and enjoyed the luxurious feeling of being spooned by her lover in the calm quiet. \n\nTyler shifted in her sleep, tightening her arm around Brooke, and a soft sound escaped her throat. Brooke smiled, wondering if Tyler was having pleasant dreams. She imagined what it would be like to sleep with Tyler every night, sharing a bed as a couple, and found the thought pleasant. \n\nThe clock/radio alarm beside the bed suddenly switched on, as the six o'clock hour arrived, tuned to one of the local pop stations. Tyler made a muffled moan and cuddled her face against the back of Brooke's shoulder, trying to refuse the sounds of morning. \n\nBrooke's voice was soft, \"Good morning, baby.\" \n\nTyler kissed Brooke's shoulder, \"... mm, don't want to get up...\" \n\n\"I could get used to this,\" Brooke rubbed the top of Tyler's wrist, \"Waking up in your arms.\" \n\n\"Me too.\" Tyler groaned cutely, \"I don't want go to school. I wanna stay in bed.\" She entwined one of her legs between Brooke's, beneath the covers. \n\n\"Want to skip?\" Brooke's tone was mischievous. \n\n\"So badly,\" Tyler nodded against Brooke's shoulder, \"But I can't. I have volleyball practice after school.\" \n\nBrooke knew better than to ask Tyler to miss volleyball, \"Probably for the best; my History teacher likes to spring quizzes on Wednesdays. Shower with me?\" \n\nTyler smiled against Brooke's soft skin and thought of the night prior when they showered together for the first time, \"Okay, but I'm not eating your pussy again. We'd be late for school.\" \n\nBoth girls giggled at each other. \n\nTheir shower was relatively uneventful, other than some light petting and a few kisses under the spraying water. After, the girls stood together wrapped in towels and shared the wide bathroom mirror as Brooke coiled her hair with a curling iron and Tyler tweezed her eyebrows. \n\nA voice called from upstairs, \"...Tyler? Brooke? Breakfast is almost ready!\" \n\n\"Be up in a minute, Mom!\" Tyler yelled. \n\n\"Can I wear that pink top you got at the mall?\" Brooke asked, setting the curling iron down next to the sink and pushing a hand through her ringlets. \n\n\"The really tight sleeveless one?\" Tyler wondered, \"I dunno if your boobs will fit, but it's hanging in my closet.\" \n\n\"It's okay if I spill out a bit,\" Brooke said, shedding her towel and moving towards the closet, \"Maybe my History teacher will give me an 'A' if I sit in front.\" \n\nTyler shook her head and smirked. \n\n======= \n\n\"Jeffrey Abram?\" an aging man with a severe balding problem called out, Brooke's Homeroom teacher. \n\n\"Here,\" a scruffy looking boy raised his hand. \n\n\"Brooke Adams?\" the teacher out the next name on his list. \n\n\"Here,\" Brooke called, staring at her phone. \"Unfortunately,\" she added quietly. \n\nThe teacher continued to monotonously call out the alphabetical attendance and Brooke tuned him out, uploading a picture to her social media page; it was a shot of her and Tyler from that morning, singing in the car to their favorite song as it played on the radio. \n\n\"Hey, Brooke,\" someone greeted from the left. \n\nBrooke glanced to see Todd Allan sitting in the desk next to hers, a fellow senior who hung with the band and drama crowd. Brooke was surprised; she couldn't remember Todd saying more than two words to her all school year. In Brooke's mind, the band and drama students were a bunch of artsy, elitist snobs who all thought they were more cultured than everyone else. \n\nTodd had on a pair of loose cargo pants and a black tee-shirt with the image of Beethoven on the front. Or maybe it was Mozart... Brooke couldn't tell. Todd was staring at Brooke's chest as he pushed a pair of glasses up the bridge of his nose. Brooke was crammed tightly into Tyler's sleeveless pink top and her cleavage bulged out at its plunging neck line. \n\nBrooke asked, \"Something I can do for you, drummer-boy?\" \n\n\"Uh, I play clarinet,\" Todd corrected her. \n\nBrooke stuffed her phone into a blue jeans pocket, \"Just get to the point.\" \n\nTodd cleared his throat, \"Um, you and Tyler Sorenson are best friends, right?\" \n\n\"Something like that,\" Brooke replied disinterestedly. \n\n\"Do you know if anyone has asked her to... um, prom?\" \n\n\"Prom?\" Brooke blinked, suddenly remembering it was just over a month away. \n\n\"Yeah,\" Todd nodded, \"You know, the formal dance? In April?\" \n\n\"Yes, Todd,\" Brooke's tone was dry, \"I know what prom is.\" \n\nTodd looked nervous, \"So, is Tyler, uh... going?\" \n\nBrooke took a deep breath and studied poor Todd with a scrutinizing gaze, \"Do you have a crush on Tyler?\" \n\nTodd blushed furiously, \"N-no... I mean...\" \n\nBrooke lifted her eyebrows, \"You don't have a crush on her? But you want to take her to prom?\" \n\nTodd's face wrinkled with frustration, \"I was just asking, you don't have to be such a bitch.\" \n\n\"Spare yourself the heartbreak, Todd.\" Brooke gathered her things as the Homeroom bell sounded, \"You're not her type.\" \n\n======= \n\nTyler was at her locker switching books after first period. She was feeling chilly and grabbed a white cotton hoody, slipping it on over her tee shirt. Black tights clung to her athletic legs and blue Nikes adorned her feet. \n\nAmidst the bustle of students traveling between classes, Brooke suddenly appeared and leaned against the neighboring locker with her arms wrapped around a stack of text books, \"Guess what?\" \n\nTyler looked at Brooke, clueless, zipping up her hoody halfway. \n\n\"Todd Allan wants to ask you to prom.\" \n\n\"Who?\" Tyler's face scrunched, not recognizing the name. \n\n\"I think he plays trumpet,\" Brooke shrugged, \"Or something... anyways, he asked me in Homeroom if you have a date to prom yet.\" \n\nTyler grabbed a book and cradled it in her arm, pushing her locker closed. \"A trumpet player!\" she smiled proudly, \"I'm moving up in the world. Do you think I should hold-out for someone who plays a string instrument? Or should I just settle for Todd.\" \n\nBrooke scoffed, \"Just be on the look-out for a dork in a Mozart shirt and glasses.\" \n\n\"Will do. I haven't really thought about prom,\" Tyler mused, \"Have you?\" \n\n\"Well, no one has asked me,\" Brooke frowned, \"Which is a little depressing. You'd think with my boobs hanging out like this they'd be lining up with corsages in their hands.\" \n\n\"I'm sure Rob wants to ask you,\" Tyler teased, feeling a twinge of jealousy as soon as she said it. She imagined Brooke going with anyone to prom and realized she didn't like the thought. \n\n\"Oh, shit.\" Brooke fretted, \"I still have to let him down and bail on Friday night.\" \n\n\"Be gentle,\" Tyler advised, and then gave Brooke a quick kiss on the lips. \n\nBrooke immediately stiffened and didn't respond with any affection. \n\nTyler immediately knew she had done something amiss. She hadn't thought about kissing Brooke, she had done it instinctually. Brooke quickly looked around to see if anyone had seen what they did or was looking at them. Tyler did the same, but no one seemed to be paying any attention. \n\n\"I'm sorry -\" Tyler whispered. \n\nBrooke backed away a step, \"We can't do that. I mean, we shouldn't... here.\" \n\n\"I know,\" Tyler nodded, biting her lip, \"I'm sorry, I wasn't thinking.\" \n\nBrooke immediately seemed distant, \"I have to get to class.\" \n\n\"Brooke, wait,\" Tyler pleaded, \"Can't we talk about this?\" \n\n\"I have to get to class,\" Brooke repeated and hurried away. \n\nTyler leaned back against the locker bank and rested the back of her head against a metal door. \"Shit,\" she cursed, frustrated. \n\n======= \n\nWhen lunch period arrived, Tyler hurried towards the cafeteria but Brooke was nowhere to be found. The two girls had always met in the hallway outside the cafeteria before lunch; it had been a daily ritual for nearly four years - the entirety of their high school careers. Tyler stood outside the cafeteria doors for a while, hoping Brooke had been delayed by something, but after a couple of minutes the hallway had emptied of students and everyone was inside having lunch. \n\nTyler frowned and wandered into the cafeteria. Looking around, she spotted Brooke already at a table with many of their friends. Brooke had her lunch tray and was talking with several other girls, oblivious to Tyler's arrival. Tyler felt like someone had suddenly stabbed her in the gut. \n\nHurrying out of the lunchroom, Tyler felt hurt and alone. Tears began welling in her eyes as she dashed down the hallway and pushed open a set of doors leading into the gymnasium. A pair of sobs escaped Tyler's throat once she was out of view and she slumped against a wall, sliding down to sit on the floor with her head cradled in her hands. \n\nShe didn't realize someone else was in the gym. \n\nRob Johnson was an African-American student and a friend to both Brooke and Tyler. As one of the few black students at Cooper, a high school in a predominantly Caucasian suburban neighborhood of Minneapolis, Rob often felt isolated. Tyler and Brooke had always been friendly to him and never treated him as someone different. \n\nRob was dribbling a basketball and preparing to shoot when he heard Tyler's soft sobs. Palming his basketball he looked her way, \"Tyler?\" \n\nTyler sniffled and wiped a hand across her face as soon as she discovered she wasn't alone, a futile attempt to hide the fact that she was crying. \n\nRob made his shot, then abandoned his basketball to approach Tyler in his baggy jeans and Minnesota Timberwolves tee shirt. \"Hey, girl. You all right?\" \n\nTyler sniffed again and exhaled a teary breath, \"I'm fine.\" \n\n\"No you ain't,\" Rob knelt beside her. He inspected her, making sure she was physically okay. \n\n\"What are you doing in here?\" Tyler dodged the question and wiped at her cheek again, \"Why aren't you at lunch?\" \n\n\"I lost my appetite,\" Rob answered, \"Your best friend ripped my heart out this morning. I came here to shoot around; basketball always clears my head.\" \n\n\"I know what you mean,\" Tyler murmured, \"This is my sanctuary, too.\" \n\nRob situated himself beside Tyler, leaning against the wall as he sat, \"Yeah, I guess the gym is every athlete's temple. So, you gonna tell me about whatever drama has got you down?\" \n\n\"It's complicated.\" \n\n\"Uh-huh,\" Rob nodded, \"It always is. Boy trouble?\" \n\nTyler shook her head, \"Not exactly. I did something stupid and I think I scared away someone really important to me.\" \n\n\"Did you cheat?\" Rob asked, not believing for a second Tyler was crying about anything other than romantic problems. \n\nTyler glanced at him, \"No...?\" \n\nRob rubbed a hand over his shaved head, \"Then you didn't do nothing that can't be fixed. Trust me. A guy'll forgive anything except if you do him dirty with another guy.\" \n\n\"I'll keep that in mind,\" Tyler replied meekly. \n\n\"Hey,\" Rob elbowed her playfully, \"Let's you and me bounce outta here. Empty gyms are depressing.\" \n\nTyler considered, \"I would, but I have practice after school.\" \n\nRob stood up, \"Practice ain't gonna make you any better, but pizza and skee ball might.\" \n\nTyler looked at him with a tempted expression, \"I love skee ball.\" \n\nRob held out his hand, \"Come on, shorty. Having a beautiful girl like you at my flank will do my wounded ego some good.\" \n\nTyler grabbed his hand and Rob pulled her up. \"I'm not short,\" she pouted cutely. \n\n======= \n\nBiting her lip in concentration, Tyler loosened her grip around the skee ball and spun it in her fingers. Cocking her arm carefully, she let loose with a confident bowling motion. The ball rolled along the track and launched up the track's ramp, bouncing chaotically around before falling into the 100 point pocket. \n\n\"Yes!\" Tyler thrust her arms up into the air triumphantly. She spun around and smiled tauntingly, \"That's game, Johnson! You owe me a pizza.\" \n\n\"Unbelievable!\" Rob lifted hands to the sides of his head in defeat, \"That was the luckiest bounce I ever seen.\" \n\nTyler wagged a finger at him, \"That wasn't luck, that was pure skill!\" \n\nRob grinned broadly and wrapped a curling arm around Tyler's shoulders, \"All right, all right, but I want a re-match after we eat.\" \n\nTyler leaned against him as they returned to a table filled with empty soda glasses, \"Anytime, anywhere.\" \n\nThe two friends were at the local Dave and Busters, a bar and restaurant that featured games and arcade machines. Televisions were scattered everywhere displaying different sports broadcasts and many people filled the place from all walks of life, enjoying food and fun. \n\nTyler reclaimed her chair and Rob sat across from her. She glanced at her phone sitting on the table and picked it up, seeing a message had arrived. \n\n'Where R U?!' a text from Brooke read. Tyler's face immediately sobered. \n\n\"Drama chasing after you?\" Rob saw her expression. \n\n\"More or less.\" Tyler's thumbs typed a reply: 'D&amp;Bs w/Rob' \n\nShe set her phone down and reached for a glass, sucking the last remnants of soda from the bottom of melting ice. \"You were right,\" Tyler said, \"I needed this.\" \n\n\"Me too,\" Rob gestured towards a server, \"What's going on with your homie? She canceled on our date. Wouldn't say why, either. I thought she was into me.\" \n\nThe irony that Rob was also upset about Brooke wasn't lost on Tyler, \"Don't get too down on yourself, hon, she's just going through some stuff.\" \n\nRob didn't seem convinced as a waiter approached. \"We need another round of Coke's,\" Rob told him, \"And a pizza.\" He pointed at Tyler, \"Winner's choice.\" \n\nTyler bit her lip in thought, \"Um, pepperoni and sausage, with olives. Oh... and onion.\" \n\n\"You got it,\" the water nodded. \n\n\"You going to be okay?\" Tyler asked once they were alone. \n\n\"It's someone else,\" Rob presumed, \"Brooke's probably hooked-up with some preppy white boy driving daddy's beamer.\" \n\n\"Brooke definitely doesn't have a boyfriend,\" Tyler assured him, \"I can promise you that.\" \n\n\"You know Brooke better than anyone,\" Rob pressed, \"If it ain't another guy, I'm willing to back off and let her deal with whatever. I just want to know... do I have a shot?\" \n\nTyler, put her elbow on the table and rested her chin in a palm, \"I find myself asking the same question.\" \n\n======= \n\nA white Ford SUV screeched to a halt in front of Dave and Busters and a furious blonde exited the vehicle. The last gasps of winter's chilly air still clung to Minnesota, but Brooke wasn't wearing a jacket and didn't care. Her breasts jiggled in Tyler's borrowed, too-tight top as she charged into the restaurant. She spotted Tyler and Rob sitting around a half-eaten pizza and stalked towards them. \n\nRob caught sight of her and his brow furrowed, \"Brooke?!\" \n\nBrooke ignored him for the moment and leveled her gaze at a surprised Tyler. \"I can't believe you!\" she spat angrily, \"You skip school and your practice, after telling me this morning you wouldn't skip with me, and you do it with Rob?! I waited for you at your stupid volleyball practice like an idiot so I could give you a ride home and you couldn't even send me a fucking text?!\" \n\n\"Oh, don't even...!\" Tyler fumed, \"What about lunch? You left me standing outside the cafeteria waiting for you and then I found you sitting inside, pretending like I don't even exist! As for me being here with Rob, he's my friend, too. At least he gave a shit about me when he found me in tears crying over you!\" \n\nRob lifted surrendering hands and suddenly didn't want any part of the feuding girls. He mistakenly thought they were fighting over him. \n\n\"How was I supposed to know where you even were?!\" Brooke exclaimed, spreading her arms. \"You ditched without me!\" \n\n\"You wouldn't know,\" Tyler's brow scrunched with anger, \"Especially since you just walked away after I kissed you. Do you have any idea how awful you made me feel, Brooke?\" \n\nRob's eyes widened at the mention of a kiss. \n\n\"I freaked out,\" Brooke tried explaining herself, \"I didn't know how to react, okay? I told you last night that this was all new to me!\" \n\n\"Argh,\" Tyler growled, \"It's not that fucking hard, Brooke. I'm either your girlfriend, or I'm not. Which is it going to be?\" \n\n\"Whoa, whoa, whoa,\" Rob lifted a palm trying to pause the two girls, \"Girlfriend?\" \n\nBrooke finally looked at Rob. \"Oh my god,\" she muttered and pushed an embarrassed hand through her curls \n\nRob gestured between them, \"Aw, shit. Let me get this straight. You two are...?\" \n\n\"Yes,\" Tyler irritably told him, \"So pick your jaw up off the floor and deal with it.\" \n\n\"This all makes so much more sense now,\" Rob laughed and looked to Brooke, \"You didn't ditch me because you ain't into me. You ditched me because you ain't into guys!\" \n\n\"Not right now, Rob,\" Brooke pleaded, \"Can't you see Tyler and I are in crisis mode?\" \n\n\"Oh I see, all right.\" Rob grinned, \"I see you two are on a whole 'nother level.\" \n\n\"Fuck this,\" Tyler grabbed her coat, \"I'm out of here.\" \n\nBrooke frowned, \"Tyler...!\" \n\nBut Tyler didn't seem interested in further argument and continued towards the door. \n\nBrooke let out a heavy sigh and cast frustrated eyes towards Rob. \n\n\"Hey,\" he held up innocent hands, \"She ain't my girlfriend. Go on, go get your girl.\" \n\nBrooke lifted a threatening finger, \"Not a word of this to anyone.\" \n\nRob grinned and made a zipper motion over his lips. \n\nTyler had made her way out of the restaurant and was walking along the strip-mall sidewalk past a Verizon store. Mounds of snow were piled on the curb from winter plowing and Tyler's hands were stuffed into her coat pockets away from the chilly March air. \n\nBrooke came running after her. \"Tyler,\" she called, \"Tyler! I'm sorry!\" \n\nTyler growled and stopped, allowing Brooke to catch up before turning around and seeing Brooke in nothing but a pair skinny-jeans, heeled shoes, and the tight pink top which barely contained Brooke's chest. \n\n\"I am your girlfriend,\" Brooke professed as soon as she reached Tyler, \"But I fucked up, okay? And I'm sorry! I'm sorry I turned all 'ice-queen' on you at school, I just... this whole lesbian thing is happening really fast, you know? And I want it, I want you, I really do. But I'm also really scared of losing all our friends and of what my parents are going to do, and -\" \n\n\"Brooke,\" Tyler had to stop her, \"What the fuck are you doing out here without a jacket? It's like, thirty degrees out. You're going to freeze your boobs off.\" \n\n\"I know, I'm really cold,\" Brooke pouted, \"I was so mad at you I forgot to take my coat.\" \n\nTyler rolled her eyes and took her jacket off, \"Come here, silly.\" \n\nBrooke turned and stuck her arms out, letting Tyler slip the jacket on her. \"What about you?\" Brooke worried. \n\n\"My hoody is good enough,\" Tyler assured her, rubbing Brooke's shoulders through the jacket to warm her with friction. \n\n\"Do you forgive me?\" Brooke sounded hopeful. \n\n\"I don't mind waiting to tell our parents,\" Tyler took both of Brooke's hands in hers, \"But at the same time I'm not going to be ashamed of us... of this. I love you, Brooke. I love the way you make me feel and I love the fact that my girlfriend is also my best friend; I mean, how great is that? And I don't give a fuck what anyone at school thinks about us. In two months we're going to graduate and none of that will matter anyway.\" \n\n\"You're right,\" Brooke nodded, \"You're always right. God, I hate that about you.\" \n\nTyler laughed. ",
        "\"So, you forgive me?\" Brooke made puppy-dog eyes. \n\n\"Of course I do,\" Tyler pulled Brooke into a hug, \"Let's go home.\" \n\n======= \n\nBrooke pulled into an empty driveway just as the sun was beginning to set, \"Where are your parents?\" \n\n\"Wednesday is their date night,\" Tyler commented, \"Whatever that means. They'll be home later; do you want to hang-out for a while?\" \n\n\"I want to, but I should go, before my parents start putting my picture on milk cartons. I haven't been home in two days.\" \n\n\"Okay,\" Tyler nodded understandingly. \n\n\"Hey,\" Brooke said, letting her car idle, \"Can I ask you something?\" \n\n\"Anything,\" Tyler looked to her. \n\nBrooke pushed a coil of hair behind her ear, \"Do you want to go to prom?\" \n\nTyler shrugged, \"I dunno.\" \n\nBrooke's eyes narrowed, \"What do you mean you don't know? What kind of answer is that?\" \n\nTyler lifted her hands, \"Like I said this morning, I haven't really thought about it. I guess I'll figure it out if someone asks me.\" \n\n\"Argh,\" Brooke pushed out an aggravated breath, \"I'm asking you!\" \n\nTyler blinked with realization and caught up to the conversation, \"You want to go to prom? With me?\" \n\n\"You're my girlfriend, aren't you? Of course I want to go with you! I mean, if you went with someone else I'd be so fucking jealous. Oh my god.\" \n\nTyler's smile was full of warmth, \"Okay. I'll go to prom with you.\" \n\n\"Really?\" Brooke leaned over between their seats and reached for Tyler. \n\nTyler hugged her and nodded against Brooke's shoulder, \"Yes, really. But if you rent a cheap motel room and try to take advantage of me, I'll never forgive you.\" \n\n======= \n\nTyler sat cross-legged on the sectional couch in her bedroom, wearing nothing but a tee shirt and a pair of underwear. The hour was late and a History book was spread out on her lap as she was reading the chapter due for class the next day. Her cell phone buzzed on the couch beside her and Tyler smiled when she saw it was Brooke. Swiping to answer she lifted the phone to her ear, \"Hey.\" \n\n'What are you doing?' came Brooke's voice. \n\n\"I'm reading about British tariffs prior to the Revolutionary War,\" Tyler replied. \n\n'That's lame. What are you wearing?' \n\nTyler made a curious grin and looked down at herself, \"Um, my white Guess tee-shirt and pair of blue underwear.\" \n\n'I bet your legs look sexy right now.' \n\nExtending her legs and propping her feet against a coffee table, Tyler checked out her own stems. \"I guess so,\" she said, \"I shaved them about an hour ago and put lotion on them.\" \n\n'You have the sexiest legs.' Brooke sounded a little breathless through the phone. 'Whenever your legs are bare I can't help but stare at them.' \n\nFlattered, Tyler closed her book and set it aside, \"Brooke, what are you... are you...?\" \n\n'I'm touching myself thinking about you.' \n\nTyler laughed, \"Oh my god.\" \n\n'I miss you.' \n\n\"Silly girl. You just saw me like, four hours ago when you dropped me off.\" \n\n'So?' \n\n\"I guess I miss you, too\" Tyler bit her lip happily. \n\n'It's going to suck sleeping alone. I loved sleeping with you last night.' \n\n\"I know,\" Tyler stood up and padded across the carpeted floor of her bedroom, \"I liked it too.\" \n\n'Talk dirty to me, Tyler. I want to cum. I want you to hear me cum.' \n\nTyler blushed, \"Brooke, are you trying to have phone sex with me?\" \n\n'Duh. It feels so good touching myself, Tyler. And it's even better now that I have a girlfriend to share it with.' \n\n\"Oh my god,\" Tyler giggled embarrassedly as she moved towards her bed, \"Um, I don't... I've never... I don't know what to say!\" \n\n'Right now I'm lying in my bed and I have a finger in myself. Every so often I take it out and suck it, pretending that I'm tasting your pussy.' \n\nTyler stretched herself out onto her bed, lying back against a plush pillow, \"That's really hot. I love the way your pussy tastes.\" \n\n'I wish you were here licking me. Remember when you ate me out in the shower and then kissed me? I could taste myself on your lips.' \n\nA twinge of arousal went off between Tyler's legs, like a tuning fork, at Brooke's dirty talk. \"I remember,\" she slid her free hand beneath her panties, \"I remember sticking my tongue inside you.\" \n\n'My pussy belongs to you, baby. You ate my pussy so good. I wish we could be together every night so you could eat my pussy before bed and make love to me.' \n\nA soft moan came from Tyler's lips as she started masturbating herself, fantasizing about living with Brooke and sharing a bed, \"We could eat each other out every night.\" \n\n'Oh fuck yeah. We could sixty-nine and eat each other's pussies at the same time.' \n\n\"Oh, shit, you're turning me on, Brooke.\" \n\n'Are you touching yourself?' \n\n\"Yes,\" Tyler nodded against her phone, \"I'm already all wet.\" \n\n'I wish I was beside you right now, sucking on one of your tits while you masturbated.' \n\nThe hem of Tyler's underwear stretched around her wrist as she pushed more of her finger into herself, \"After I came, I'd want you to lick me up. Clean my pussy of all my cum.\" \n\n'Oh god,' Brooke moaned loudly through the phone, 'I'd make you cum again by sucking on your clit.' \n\nTyler winced with pleasure and shoved the annoying panties down out of her way, letting them stretch between her trim, tanned thighs. \"You're so sexy, Brooke. I love your sexy body. I wish you were here right now, so I could touch you and run my hands all over you.\" \n\n'Oh fuck, I can't take it anymore. I'm coming over!' \n\nTyler blinked, \"What?\" \n\n'I fucking need you so bad. I'll be there in two minutes. Unlock your back door.' \n\nTyler was of no inclination to argue, \"Park across the street. Don't wake my parents!\" \n\nThe phone disconnected and Tyler tossed it to the side. Brooke's house was less than three blocks away so Tyler knew it wouldn't take long. She slid off her bed and moved to unlock the back sliding door that led directly into her room, hopping on one leg to remove her panties along the way, then she hurried into her bathroom and checked herself in the mirror. Brushing a hand through her long black hair, Tyler then cupped a hand over her mouth to test her breath. Grabbing a tube of toothpaste, she performed a quick brush and followed that up with a gargle of mouthwash. Taking a washcloth next, she ran it under steaming hot water before wiping her vagina as clean as she could get it. \n\nThe sliding glass door opened from her bedroom. \n\n\"Tyler?\" Brooke whispered as loud as she dared. \n\nTyler appeared from the bathroom in nothing but a tee shirt. She saw Brooke was wearing a winter coat, pajama bottoms, and clunky boots. Her loose curls were tied back behind her head and Brooke wasn't wearing any make-up, though she still looked pretty. \n\nBrooke took her jacket off and Tyler grinned when she saw Brooke was topless beneath. \"I'm so horny right now,\" Brooke whispered, stepping out of her boots. She pushed her pajama bottoms off and wasn't wearing any underwear beneath. \n\nTyler stared at Brooke's soft feminine curves, \"You're so sexy.\" She rushed to Brooke and they embraced, kissing hungrily. Tyler's hands grabbed at Brooke's butt while Brooke cupped Tyler's face. Their lips made wet smacking noises and their tongues bumped into one another, the girls tasting, licking, and sucking on each other's mouths. \n\nBrooke started tugging on Tyler's tee shirt and they broke their kissing long enough for Tyler to lift her arms up so Brooke could pull it off. The tee shirt floated to the floor and Tyler's arms fell around Brooke's head, curling around her neck as they resumed their heated kissing. \n\n\"Do what you said on the phone,\" Brooke whispered against Tyler's mouth as Tyler was licking one of Brooke's lips, \"Touch me all over.\" \n\nTyler drew her towards the bed and nudged Brooke to lay down. Brooke crawled backwards, her green eyes never leaving Tyler, until her shoulders found a pillow. Tyler absorbed Brooke's body with her gaze and bit her lip with desire. \n\nBrooke had wonderful proportions, slender at her arms and calves while curvy around the hips and thighs. She was utterly feminine and soft-looking, with a tiny baby-fat tummy and large, pillowy C-cup breasts. Brooke shaved her bush and had a golden tan from regular visits to the tanning center. She was pretty, too, with full lips and a round nose surrounded by a heart-shaped face. \n\nTyler was certain she had never seen anything so beautiful. She was also certain, more than any other point in her life, that she was gay. Brooke's body aroused her. She wanted to touch Brooke's body, taste it, and make love to it. Tyler had never looked at a male and felt such sexual desires. \n\n\"You are so gorgeous,\" Tyler whispered, kneeling at the foot of the bed and smoothing her hands up Brooke's legs. Brooke's skin erupted with goose bumps at Tyler's touch and she spread her legs slightly. Tyler kissed the inside of Brooke's thighs, rubbing her hands up to Brooke's hips, and then briefly let her breath fall on Brooke's pussy. \n\nBrooke whimpered, stretching her arms out to the side. But Tyler was only teasing her and kissed Brooke's tummy, her hands gliding across Brooke's sternum. Tyler kissed Brooke's adorable belly button and licked it. Brooke giggled softly, ticklish, and watched Tyler move up to her breasts. Placing her palms on the soft under-curve of Brooke's breasts, Tyler pushed up and squeezed them, kissing Brooke between her cleavage. She let her face drag against the inside of Brooke's breasts, nuzzling and cuddling her cheeks against the plush flesh. \n\nAt that point, Tyler straddled Brooke around the waist and lowered her neatly-trimmed bush to Brooke's tummy. Tyler rolled her hips, dragging her pussy against Brooke's soft skin and leaving a swath of wetness behind. Tyler leaned forward on extended arms so her face was hovering above Brooke's, her black hair dangling at the side of her head. \n\n\"Tell me you love me,\" Tyler murmured, rubbing her pussy on Brooke's stomach. \n\nBrooke reached up to cup Tyler's jawline. \"I love you, Tyler,\" she whispered. The passion in her eyes matched her words. \n\nTyler turned her face against one of Brooke's hands and kissed the palm. Brooke stuck her thumb into Tyler's mouth and let Tyler suck on it. \n\n\"I love you so much,\" Brooke whispered again. \n\n\"It turns me on when you tell me you love me,\" Tyler continued dragging her pussy against Brooke, up and down her abdomen, her arousal leaving a glistening wetness that looked like morning dew on Brooke's tanned skin. \n\n\"I fucking love you... god, you're turning me on,\" Brooke's voice cracked with desire. \n\nTyler smiled and lifted herself on all fours. She swung a leg around and reversed herself over Brooke so that she was facing Brooke's feet. \n\n\"Oh my god,\" Brooke whispered at the view between Tyler's legs. She reached for Tyler's slender hips, coaxing Tyler to lower herself onto Brooke's face. \n\nTyler's mouth opened when she felt Brooke's tongue enter her, but she held silent and didn't cry out for fear of being heard by her parents sleeping upstairs. Brooke pulled at Tyler's hips, licking on Tyler's pussy and dragging her tongue between Tyler's labia. \n\nBrooke lifted her knees and spread her legs invitingly. Tyler took the bait and curled her hands under Brooke's thighs, dipping her face so that they began to sixty-nine. Brooke made a muffled gasp against Tyler's pussy when she felt Tyler start sucking on her clit. Both girls started moving their hips up and down, humping against each other's faces. Brooke reached between them and grabbed Tyler's small breasts, palming and squeezing them; Tyler's dark nipples grew stiff with arousal at Brooke's touch. \n\nWhen Tyler did something that Brooke liked, like flicking her tongue against Brooke's clit, Brooke would mirror the action. Tyler did the same thing when Brooke did something she liked and soon the girls were moaning, humping, and sucking each other in rapt pleasure. Tyler was the first to orgasm, her musky cum leaking onto Brooke's face. Brooke lapped at the flavor eagerly, which triggered her own orgasm. \n\nBut neither of them relented. They continued eating each other's pussies, grinding and humping against one another. They both came again, whimpering moans escaping their throats - the sounds muffled by their pussies. \n\nWhen they finally stopped, Tyler rolled to Brooke's side and lay opposite on the bed. Their faces were wet and they were both breathing heavily, the aftermath of their multiple orgasms tingling throughout their bodies. Tyler reached out blindly and found Brooke's hand, which she squeezed lovingly. Their fingers entwined and communicated the affection they felt for each other as they both recovered. \n\n\"I better get home,\" Brooke finally whispered. \n\n\"Yeah,\" Tyler stared at the ceiling. She didn't want Brooke to leave but understood that their parents would start asking questions if she stayed. \n\n\"I'm in love with you, Tyler,\" Brooke kept her voice quiet. \n\nTyler smiled and closed her eyes, letting the words echo in her mind. \"I know,\" she finally replied, \"I'm in love with you too.\" \n\n\"Tomorrow at school, I'm not hiding it.\" \n\nTyler squeezed Brooke's hand, \"Should be interesting.\" \n\n======= \n\nLike any other morning, Brooke came to a stop at the curb in front of Tyler's house and honked her horn. And like any other morning, Tyler hurried out of her home with a sporty book bag slung over a shoulder. But both Tyler and Brooke knew it wouldn't be like any other morning. \n\nThe sun was out and the temperature had warmed considerably to an almost spring-like sixty degrees. Brooke's car windows were open and Tyler could hear the radio as she approached. \n\nTyler got into the car and leaned over to kiss Brooke, \"Hey.\" \n\nBrooke looked at her after the kiss, \"Hey, girlfriend. You look hot.\" \n\nTyler was wearing a one-piece polyester, long-sleeved dress that covered the entirety of her torso. It hugged her figure tightly to the hips and covered little of her legs which were bare from mid-thigh down. It was dark blue, but black down the sides. Tyler's shiny leather boots were heeled and rose just below the calf; they zippered equally tight to hug her ankles. Her black hair was pulled back tightly and formed her signature ponytail. \n\nTyler smiled at the compliment, \"I wanted to look sexy for you. You look good too, I love that outfit.\" \n\nEvidently Brooke wanted to look hot as well. She had a leopard print blouse that hung low on her hips above a pair of black short-shorts and black strappy heels. The blouse was cut low and displayed a proper amount of cleavage. Her golden hair was done perfectly, coiling ringlets framing her fully made-up face. \n\n\"Thanks,\" Brooke pulled her car into gear, \"Thank God for public schools and their lack of dress codes.\" \n\nTyler laughed and turned up the radio. \n\nTen minutes later, Brooke was pulling into the student parking lot. Both girls sat quietly for a moment after Brooke turned off the ignition. \"Are you ready for this?\" Brooke asked. \n\nTyler took a deep breath, \"Yep.\" \n\nThey got out of the car and started walking towards school amidst the many other students. They were side-by-side, just like any other day, but both of them knew everything was about to change. Tyler felt Brooke's hand find hers and they laced their fingers together just like any other couple would; but they weren't like most other couples. \n\nThey were a lesbian couple. \n\nBoth of them were silent as they entered the school hand-in-hand. At first no one seemed to be paying any attention, but Tyler and Brooke were two of the most popular and attractive girls at their high school and they were dressed to kill. People were going to look. A few students began to point at them as they walked through the crowded hallways and the girls overheard several hushed mutterings. \n\nOne student, a friend of theirs named Jenny Anderson who was one of the most popular girls at school, spotted them. \"What the fuck?\" she said as she approached the pair, her straight blonde hair parted down the middle of her head and falling to perfectly frame her slim shoulders.. \n\nTyler smiled as she and Brooke paused in the hallway, \"Hi, Jenny.\" \n\nJenny stared at their adjoined hands. \n\nBrooke cleared her throat, \"Nice weather, huh Jenny?\" \n\nTyler grinned at Brooke's lame attempt at small talk and squeezed her hand tightly for support. \n\nJenny's expression was one of disbelief, \"Um, what's up with you two? Are you guys like lesbians now, or something?\" \n\nOther students passing by began slowing down to watch the encounter. \n\nTyler was bold, \"We're together, yeah. Do you have a problem with that?\" \n\nJenny let out a scoffing breath, \"Whatever.\" \n\nBrooke tugged on Tyler's hand, \"Come on, Tyler. We don't want to be late for Homeroom.\" \n\nThey left the crowd behind and reached Tyler's locker without any further confrontations. Tyler began working the combination open and Brooke leaned back against the locker next to it. \n\nBrooke reached a comforting touch to Tyler's waist, her hand smoothing against the tight material of Tyler's dress. \"Are you okay?\" she asked. \n\nTyler got her locker open and hung her book bag inside, nodding. \"Yeah, you?\" \n\nBrooke shrugged, \"I always thought Jenny was a total bitch, anyways. Who cares what she thinks?\" \n\nTyler smiled, \"You're the best, you know that?\" \n\n\"I better get to my locker,\" Brooke said, moving closer. \n\n\"Okay,\" Tyler replied softly, her lips parting expectantly, \"I'll see you at lunch?\" \n\nTheir faces hovered near one another's for a brief moment, each one unsure if they should do it. There were many other students around and surely they were watching after the scene with Jenny. Brooke smiled shyly, taking one of Tyler's hands in a loose grip. Tyler smiled back, their mouths a breath away. \n\nAnd then they kissed; a lingering union with no small amount of passion. And everyone watched. \n\n======= \n\nCasey West quickly gathered his things when the bell rung, signaling the end of fourth period. He followed Brooke out of the History class they shared together and caught up to her in the hallway. \"Brooke,\" he called, \"Hey, Brooke!\" \n\nBrooke turned at the sound of her voice and saw Casey, the basketball team's star senior center. At 6'4\" tall, Casey was hard to miss. He was of classic Scandinavian descent with fair skin, blonde hair, and blue eyes. \n\n\"What's up, Case?\" Brooke pushed one of her golden ringlets behind an ear. \n\n\"Is it true?\" Casey spoke in a deep voice, towering almost a foot taller than Brooke, \"What everyone is saying?\" \n\n\"Gee, I dunno,\" Brooke played coy, \"What's churning through the gossip mill today, I wonder?\" \n\n\"Everyone's talking about it,\" Casey told her as though Brooke didn't already know, \"That you and Tyler are dating, that you've come out of the closet?\" \n\nBrooke resumed her path through the hallway as Casey walked beside her, \"Well, neither of us were in any kind of closet that I'm aware of, but the rest is true. She's my girlfriend, all right.\" \n\n\"That's so cool,\" Casey proclaimed. \n\nBrooke glanced upwards at him with a surprised expression. \n\n\"I think you guys are really brave,\" Casey continued, \"It takes a lot of courage to do something like that.\" \n\n\"Thanks, Casey... that means a lot to me.\" \n\n\"Sure,\" Casey had to pivot his wide frame to avoid bumping into someone. \n\n\"I wish everyone felt the way you did,\" Brooke lamented, \"So far this morning I've been passed a note that said 'Lesbo', Krystal Summers asked me if I was really a dyke, and some other kid I don't even know offered to pay me a hundred bucks if he could film Tyler and I doing something called 'muff-banging'. I'm going to Google that one later.\" ",
        "\"You want me to kick anyone's ass for you?\" Casey offered. \n\n\"That's sweet,\" Brooke was actually tempted, \"Let's see how my afternoon goes and I'll get back to you.\" \n\nCasey parted ways when they reached a Y in the hallway, \"Hey, I'll see you later. Don't let everyone get you down.\" \n\nBrooke waved at him and made a stop at her locker to deposit her things before heading towards lunch. Tyler was waiting for her outside the cafeteria doors; Brooke spotted her and trotted as fast as she could in her heels. \n\n\"Hey, girlfriend,\" Brooke practically bounced up to her. \"I missed you.\" \n\nTyler held Brooke's hand as they made their way into the cafeteria and got in line, \"I'm so glad to see you. People are being weird. How's your morning going?\" \n\n\"Do you really want to know?\" Brooke asked dreadfully. \n\nTyler frowned, \"That bad, huh?\" \n\n\"Other than the name-calling, the disgusting notes, and an offer to star in our very own porno, everything's been great.\" \n\n\"Oh god,\" Tyler exhaled and grabbed a plastic lunch tray when they reached the counter, \"I'm sorry, Brooke. Maybe we should have been a little more subtle, this morning.\" \n\n\"I'm fine,\" Brooke assured her, taking her own tray. \"Mm, chicken nugget day,\" she commented sarcastically, \"My favorite.\" \n\nThey each grabbed bottles of water and Tyler paid for both of their lunches with her student ID card. \n\n\"Casey West was pretty cool,\" Brooke said as they carried their trays towards the cafeteria tables, \"He said we were brave for coming out of the closet.\" \n\nTyler choose a large circular table that was empty, placing her tray down and setting her bag beside it, \"Wait, were we ever officially in the closet?\" \n\n\"That's what I said,\" Brooke laughed, sitting beside Tyler. \"Still, he was really sweet about it.\" \n\nTyler twisted her water bottle open and set it aside. She poked at a piece of chicken on her tray and briefly wondered if it was made of rubber before taking a bite. \n\nBrooke ignored her lunch for a moment and typed on her phone's screen. \n\nTyler wondered, \"Do you want to go to the mall after school? We could look at prom dresses and -\" \n\nMoaning sexual noises started coming out of Brooke's phone as she stared at it with rapt interest. \n\nTyler glanced, \"Brooke, what are you watching?\" \n\nBrooke answered casually, \"I just Googled 'muff-banging'.\" \n\nTyler nearly spat up her bite of chicken, \"You're looking at porn?!\" \n\n\"So?\" Brooke wondered what Tyler's problem was. \"Some kid offered us a hundred bucks to do this for him. I wanted to know what... oh my god.\" \n\nTyler instantly slid her chair closer to see what was on Brooke's phone screen, her eyes forming a curious squint. \"Oh my god,\" she echoed, \"Are those two...?\" \n\n\"That looks totally fucking hot,\" Brooke murmured, \"We should do this.\" \n\n\"Brooke!\" Tyler swatted her shoulder playfully. \n\n\"Well, not on camera!\" Brooke clarified. \n\nTyler laughed and covered Brooke's phone with a palm, \"Put that away before someone hears, would you?\" She glanced over a shoulder to see if anyone was looking at them. \n\n\"Baby, I think our secret is out,\" Brooke turned off her phone's screen and set it on the table. \n\nTyler smiled demurely, \"I like it when you call me that. 'Baby'.\" \n\n\"Really?\" Brooke smiled at her. \n\nTyler nodded happily. \n\n\"Baby-baby-baby,\" Brooke teased. \n\nTyler giggled and grabbed one of Brooke's chicken nuggets, lifting it to Brooke's mouth, \"Don't tease me and eat your lunch.\" \n\nBrooke opened her mouth as she was fed, sucking on Tyler's finger for a brief instant. The two girls looked each other in the eyes, sharing a silent romantic moment. \n\n\"Oh, you two are just too cute,\" Rob interrupted them suddenly, setting his tray down across the table and sitting. \n\nBrooke blushed at being caught in their moment and Tyler quickly withdrew her finger. \n\n\"Hey, Rob,\" Tyler greeted the outgoing shooting guard. \n\n\"Hi, Tyler,\" Rob smiled, then looked to Brooke, \"Hey, beautiful.\" \n\nBrooke wriggled some fingers at him. \n\n\"Guess it didn't take your secret long to get out,\" Rob looked upwards towards the ceiling, \"Please, God! Tell me that I still got a chance with Cooper High School's sexiest bitches.\" \n\nTyler laughed. She didn't mind being called a bitch, knowing a compliment when she heard one. \n\n\"Don't fuck with me,\" Rob flashed his pearly white grin and pointed between them, \"You two are definitely together? Total girl-on-girl love?\" \n\n\"Yep,\" Brooke teased, \"We've gone totally lesbo.\" \n\nTyler snorted out her amusement. She put an arm around her partner's waist and rested her head on Brooke's shoulder. \n\n\"Well, ain't that some shit,\" Rob replied, eating some of his lunch. \"I didn't want to believe it yesterday. But here you two are. God damn.\" \n\nBrooke tilted the side of her face so it rested against the top of Tyler's head, \"So, since Tyler and I are together, does that mean you're going to stop hitting on me?\" \n\n\"Aw hell no,\" Rob waved a dismissive hand, \"I'll just have to flirt with both y'all.\" \n\nTyler gave Rob an appreciative look, \"Thanks for being cool about this... really, it means a lot.\" \n\nRob suddenly sobered, \"Yeah, listen... I know you guys are probably going through hell today, but fuck all that. I got love for you girls. I just want you both to know not everybody's a hater, you know? No matter what, I'm behind my favorite girls one-hundred percent. Whatever you need.\" \n\nBrooke made a pouty expression, \"That's so sweet. You're going to make me cry.\" \n\nTyler quickly produced a tissue from her bag, \"Here, baby.\" \n\nRob watched them, \"Damn. You two really are in love, huh? Our school's two finest, off the market! Boys all over the neighborhood are going to mourn tonight.\" \n\nAs the girls laughed, Jenny Anderson and her perfect blonde part was walking by carrying a lunch tray. She stopped short and looked to Brooke and Tyler. \"You know,\" she spoke in a snotty tone, \"You two are just embarrassing yourselves today.\" \n\nBrooke's expression lost its mirth and her eyes narrowed dangerously. \n\n\"And you,\" Jenny looked to Rob, \"How can you sit with them? Don't you know there's a special place reserved in Hell for gays and lesbians?\" \n\nRob snorted with amusement, \"Take your crazy someplace else, blondie. I'm agnostic.\" \n\nBrooke started to rise from the table angrily and Tyler quickly grabbed her arm to prevent Brooke from doing something that would get her in trouble. \n\n\"Get your bony ass out of my face,\" Brooke threatened, \"Before I kick it from here to St. Paul!\" \n\nJenny opened her mouth and let out an offended tsk. \n\n\"Brooke!\" Tyler urged, \"She's not worth it.\" \n\nFortunately for Jenny, she spun without saying another word and sauntered towards another table. \n\n\"What a bitch,\" Brooke sat back down, \"I'd like to smack that awful part right off the top of her head.\" \n\nTyler put her arm around Brooke's back, \"Forget about her. In five years she'll be married to a fat tow-truck driver and feeding her three kids with food stamps.\" \n\nRob grinned, \"Oh, man. That's cold.\" \n\n======= \n\nAfter school the girls found themselves at Ridgedale Mall, the nearby mecca of shopping, food, and fun. They were in Macy's department store looking at dresses. Since it was nearly prom season for high schools all over the Twin Cities, Macy's had a vast section of racks devoted to the occasion. The two seniors mingled amongst several shoppers, mostly other teenaged girls and a few mothers. \n\n\"What do you think of this one,\" Brooke wondered, holding a dress up against her body. \n\nTyler glanced and made a sour face, \"That pink is too soft. You look better in hot pink.\" \n\nBrooke agreed and replaced it, \"Do you think this will be weird, us going together to prom?\" \n\nTyler ran her fingers along several dresses hanging on a circular rack, \"Maybe a little. But if we trade-off who leads when we're dancing, I think we'll be okay.\" \n\nBrooke rolled her eyes at Tyler's dry humor, \"What are we going to tell our parents?\" \n\n\"We could play the pathetic card,\" Tyler suggested, \"Tell them no boys asked us, so we decided to go together.\" \n\n\"What about corsages?\" Brooke found a red dress that caught her eye, inspecting it. \n\n\"I think they look silly,\" Tyler mused, never one to like frilly things, \"But I'll get you one if you like?\" \n\nBrooke shook her head, \"Nah. I think they look stupid, too.\" \n\nTyler pulled a blue dress up to her neck and glanced down at herself. \n\n\"I like that color,\" Brooke told her, \"But you should pick one with a short skirt that shows off your legs.\" \n\nTyler smiled and swung a flattered shoulder, \"Are you going to be checking me out all night?\" \n\n\"You know I love your legs,\" Brooke murmured shyly. \n\nTyler put the blue dress back and moved towards a rack that had dresses with shorter skirts. \n\n\"Oh my god,\" Brooke saw the price tag on the red dress and immediately put it back. \n\n\"I forgot to tell you,\" Tyler circled a rack, \"Tomorrow my parents are going to Duluth for their anniversary. My mom said it would be okay if you wanted to stay over this weekend, so I wouldn't be lonely.\" \n\nBrooke smirked, \"Seriously? It'll be awesome having two nights together. I was so lonely in bed last night, I could barely sleep.\" \n\n\"You want to do anything special?\" Tyler asked. \n\n\"We could try muff-banging,\" Brooke casually suggested. \n\n\"That's not what I mean,\" Tyler laughed, \"I meant something to do when we're not having sex.\" \n\n\"We could go to the Mall of America,\" Brooke placed her hands at her hips and looked around hopelessly, \"Because I'm not finding anything here.\" \n\nTyler gave up too, \"Let's go over to Victoria's Secret.\" \n\n\"They don't have prom dresses,\" Brooke informed her. \n\n\"I know,\" Tyler lifted a grazing hand to Brooke's cheek and made a flirtatious smile, \"I want to get some fishnet stockings. I can wear them while we're muff-banging this weekend.\" \n\n\"Oh my god,\" Brooke looked excited and grabbed Tyler's hand, hurrying towards Macy's exit. \n\n======= \n\nThe following day, Brooke was sitting in the back row of her Advanced English classroom, praying the final bell would sound and signal the beginning of her weekend. Looking up at the clock, Brooke noted that exactly thirty seconds had passed since the last time she looked it. She sighed and returned to the reading assignment in front of her. Why did the clock always seem to travel in slow motion during the last class on Friday? \n\n\"Brooke,\" someone whispered to her right, \"Hey, Brooke.\" \n\nBrooke glanced at the student seated in the desk next to hers - Brian Walters. A fellow senior, Brian was a tall and stocky boy with messy brown hair. He was on the wrestling team and known for bullying anyone smaller than he was; especially infamous among freshman ninth-graders, whom he tormented with regularity. \n\nBrian lifted a hand to his face and spread his pointer and middle fingers in front of his mouth, sticking his tongue out between them while making a licking motion - a juvenile gesture that signified licking a vagina. \n\nIn response, Brooke showed Brian her middle finger - a universal gesture to fuck-off. \n\n\"I heard you're a carpet-muncher, now,\" Brian whispered, \"What's it like being a fucking dyke?\" \n\n\"Every night I have sex with one of the hottest girls in school,\" Brooke whispered back, \"What's it like being a loser and jerking-off alone every night?\" \n\nBrian's face twisted in seething frustration at the insult. A student sitting in front of Brian had to stifle his laugh with a hand over his mouth, so as not to alert their teacher. \n\n\"You always were a cunt, Brooke,\" Brian muttered, \"I guess you are what you eat.\" \n\nBrooke placed an elbow on her desk and rested her face against a palm, turning away from Brian and doing her best not to let him bother her. Bullies like Brian were easy to ignore, but it seemed like everyone at school was talking about her and Tyler being together; Brooke had been subjected to teasing insults in almost every one of her classes that day. \n\nWhen the final bell finally sounded, Brooke quickly packed her things into a shoulder bag and hurried out of the classroom. She stopped briefly at her locker to deposit some books, take a sip from a bottle of warm Diet Coke, and grabbed a light jacket before leaving to find Tyler. \n\nAfter Brooke rounded a hallway corner she saw a crowd of students gathered around the area of Tyler's locker. She moved closer and quickly realized something was amiss as several students were laughing and pointing towards Tyler, who was staring at her locker. Brooke had to push herself past several students to finally see what everyone was looking at. \n\nTyler's locker had been spray-painted with the word 'DYKE' in bright red letters. \n\n\"Oh my god,\" Brooke grabbed Tyler and pulled her into an embrace. Tyler was crying and pressed her face against Brooke's shoulder, clinging tightly. Brooke wrapped her arms around Tyler protectively, \"What kind of sick asshole does this? Are you okay, baby?\" \n\n\"Get me out of here,\" Tyler sniffled, \"Just get me out of this fucking school.\" \n\nBrooke kept an arm around Tyler and led her through the teasing crowd; she didn't let go until they were walking out of an exit. They walked together towards the student parking lot, Tyler meekly wiping at her face trying to conceal how upset she was in case anyone was looking. When they reached Brooke's SUV, Brooke got Tyler into the car and then walked around to get in on the driver's side. \n\nTyler was digging in her purse for a tissue by the time Brooke started the ignition. \"Brooke, I'm so sorry,\" Tyler sniffled. \n\n\"What are you apologizing for?\" Brooke wondered incredulously. \n\n\"This is all my fault,\" Tyler wiped her nose, \"I'm the one who insisted we broadcast our relationship to the entire fucking school. God, I'm such an idiot. If I hadn't -\" \n\n\"This isn't your fault,\" Brooke interrupted, pulling out of the parking lot, \"It's just... high school. It sucks. Thankfully we only have to suffer through two more months of it before we can move on with our lives.\" \n\n\"I didn't know,\" Tyler stuffed the tissue back into her purse, \"I didn't think it would be this bad. People have been saying awful things to me all day. I'm sure it's been the same for you and I'm so sorry, Brooke.\" \n\nBrooke reached across their seats and put a hand on Tyler's leg, \"Don't you remember what you said to me at Dave and Busters two days ago? About not giving a shit about what anyone else thinks?\" \n\n\"That's what I'm talking about,\" Tyler looked at her, \"I pushed you into this.\" \n\nBrooke shook her head, \"But you were right. Don't let it get to you, baby. You're supposed to be the strong one. I'm the emotional wreck, remember?\" \n\nTyler made a weak smile at Brooke's description. \n\n\"If loving each other makes us dykes, then so be it. Let people call us whatever they want. Fuck them.\" Brooke flipped her turn signal on and made a right, \"Except for that douchebag, Brian Walters. I should have Rob kick his ass. He called me a cunt. I fucking hate being called a cunt.\" \n\nTyler breathed out a laugh, \"I love you so much, Brooke. I don't know what I'd do without you.\" \n\nBrooke smiled, \"Aw. I love you too, baby.\" \n\nWhen they reached Tyler's house Brooke pulled into an empty driveway. Tyler's parents had left earlier that day for an anniversary getaway and the girls had the house to themselves for the weekend. Brooke hefted a massive duffle bag out of the back seat of her SUV, which she had packed that morning in preparation for staying at Tyler's house. \n\n\"Let's order pizza,\" Brooke suggested as they walked to the house, \"I want to eat something fattening. We can work it off later with lots of hot sex.\" \n\nTyler laughed and unlocked the house. She was already feeling better and forgetting about her miserable day, thanks to Brooke and her incorrigible sense of humor. \n\nThe girls left their shoes, jackets, and school bags in a pile at the door and immediately went down the stairs to the basement apartment that served as Tyler's rooms. Brooke unpacked a few things from her duffle, hanging some clothes up and depositing a tackle box-sized beauty case into the bathroom. They changed out of their tight, restrictive school clothes into more comfortable garments. \n\nBrooke put on a pair of trendy black sweats that hung low on her shapely hips along with a short-sleeved white crop top that bared her abdomen and came dangerously close to revealing the bottom of her breasts. Tyler wore her favorite blue short-shorts and a grey sports bra. \n\nBrooke eventually settled at Tyler's desk in front of a laptop computer to get online and order a pizza delivery. \"Do you want meat lovers?\" \n\nTyler came up behind her and leaned forward, letting her arms fall over Brooke's shoulders and resting her hands on Brooke's thighs. \"Sure,\" she agreed, kissing Brooke's neck, \"Get some breadsticks, too. The cheesy kind.\" \n\n\"Those are so yummy.\" Brooke tilted her head to give Tyler better access to her neck. She had to pull a few golden ringlets out of Tyler's way, tucking them behind an ear, and then returned her hand to the computer mouse. \n\nTyler licked a spot on Brooke's neck to get it wet, then sucked on the skin there. Brooke shivered in response, struggling to concentrate on the computer. Tyler's hands caressed Brooke's thighs, then slid up Brooke's bare tummy. She kept sucking on Brooke's neck, creating a sensual vacuum with her mouth. \n\n\"You're going to give me a hickey,\" Brooke protested softly, but did nothing to stop Tyler. In fact, she tilted her head further, pushing her neck against Tyler's lips. \n\nTyler slid her hands under Brooke's top, cupping them beneath Brooke's breasts to lift their plush weight. \n\nBrooke whimpered, clicking the mouse one last time to confirm their order. \"It'll be here in thirty minutes,\" she murmured distractedly. \n\nTyler's mouth indeed left a bright red mark on Brooke's neck and moved to nibble at Brooke's earlobe. She pinched both of Brooke's nipples at the same time, rolling them between her thumbs and pointer fingers until they became hard and erect. \n\nBrooke pulled her crop top up to bundle above her breasts, exposing them, and then slid a hand down beneath the hem of her sweats so she could masturbate. \n\n\"I love being your girlfriend,\" Tyler whispered right at Brooke's ear, \"I love touching your body and being your lesbian girlfriend.\" \n\n\"Oh, baby,\" Brooke moaned breathlessly, \"You're driving me so crazy right now...\" \n\nTyler's hands began mauling at Brooke's breasts, squeezing them and mashing them in circles against Brooke's chest. Tyler nibbled some more on Brooke's ear and then whispered, \"I want you to eat my pussy tonight. I want to feel your tongue inside me as you eat my pussy.\" \n\n\"Oh god,\" Brooke's breaths grew sharp as she fingered herself, her hand stuffed under her sweats and stretching out the elastic hem. \n\n\"I want you to eat my pussy like it belongs to you,\" Tyler continued, \"I want you to make me cum so hard that I swear to never let anyone else near my pussy - just you. I'll give you my pussy any time you want it...because I'll be your bitch.\" \n\nBrooke's body convulsed when Tyler said that and she cried out, \"Oh my fucking god!\" Brooke's toes curled beneath the desk as she orgasmed. She couldn't remember ever bringing herself to the brink so quickly and attributed Tyler's dirty talk for taking her to the edge. \n\n======= \n\nTyler sat on the floor in the living room, leaning back against a couch with her legs extended straight out. Brooke was lying on her side, her cheek in Tyler's lap. Brooke's hickey was still obvious at her neck. \n\nThey were watching television and the half-eaten remains of a meat lovers pizza was on the floor beside them along with cans of diet soda; only crumbs remained of the breadsticks. Brooke wondered, \"How can they stuff one girl into a house full of shirtless guys and call it 'reality'?\" ",
        "Tyler was playing with Brooke's hair, slipping her fingers through the soft ringlets. \"Do you like looking at half-naked guys?\" \n\n\"Not really,\" Brooke replied, \"I mean, there are guys who I think are cute but... I guess I've always liked looking at girls more, even though I was in denial. What about you?\" \n\nTyler shook her head, \"Nope, pretty sure I'm totally gay.\" \n\nBrooke rolled to her back, hear head still in Tyler's lap. She looked up to Tyler's face, \"Were you into me before... you know, that night at the rave?\" \n\nTyler lifted a shoulder, \"I don't know, maybe? I mean, I've always thought you were attractive, but you were my best friend long before I ever cared about who I was or wasn't attracted to; it was hard to think of you as anything else.\" \n\n\"If you knew you were a lesbian,\" Brooke asked gently, \"Why didn't you ever tell me?\" \n\n\"I was scared,\" Tyler continued petting Brooke's hair with a loving touch, \"You had always dated boys, so... I didn't want you to get freaked out. I didn't want to lose my best friend.\" \n\n\"I tried dating boys,\" Brooke mused, \"But deep down I always knew it didn't feel right. I was just doing what I thought I was supposed to.\" \n\n\"I didn't want to be a lesbian, either,\" Tyler remembered, \"I knew that it made me different and I felt like something was wrong with me. I think that's why I got so upset today when I saw my locker. All those old feelings of confusion and self-loathing managed to creep back into me.\" \n\nBrooke rolled onto her other side, facing Tyler, her face resting on Tyler's leg just above the knee. Tyler brushed some coiling strands of hair away from Brooke's face with a gentle touch. \n\nBrooke spoke in a soft voice, \"You know, right after we hooked up last weekend I thought it'd be weird with you - because we're best friends. But it hasn't been that weird. I can't even begin to explain how amazing it's been exploring this side of myself with someone I can trust completely. I don't have to worry about being shy or embarrassed because we've been so close for so long. I mean, I've always loved you and now that love gets to be so much more. It doesn't matter what anyone at school says, or writes on our lockers, because I'm the luckiest girl on the planet.\" \n\nTears swiftly dripped down Tyler's cheeks, \"Oh my god, Brooke. That has got to be the sweetest thing I've ever heard. You are so amazing.\" \n\nBrooke's expression pouted, \"Oh, baby. Don't cry!\" \n\nTyler sniffed and laughed, wiping a cheek, \"Don't worry, they're happy tears.\" \n\nBrooke fondled Tyler's leg, trailing a finger across the top of her thigh, \"Tell me what you're thinking about.\" \n\n\"I'm thinking about how much I love you,\" Tyler said, placing a hand on Brooke's shoulder, \"And how happy I am that we get to sleep together tonight.\" \n\nBrooke smiled, \"Yeah. How great would it be to live together, just like this right now?\" \n\n\"We could get an apartment this summer, after graduation. We'd have to get jobs...\" \n\nBrooke stuck her tongue out, \"Ew, I don't even want to think about it. I'll have to get a job either way. My parents said they'll pay for college, but no more allowance on the debit card after graduation.\" \n\n\"Same here,\" Tyler nodded, \"I don't even know where I'd want to work. Maybe a health club, or something.\" \n\n\"We could start one of those cam shows,\" Brooke suggested, \"And let boys pay us so they can watch us have sex while they jerk-off.\" \n\nTyler laughed loudly, \"Brooke!\" \n\n\"What? It was just an idea.\" \n\n\"You are such a slut sometimes,\" Tyler teased. \n\n\"Oh, whatever!\" Brooke playfully slapped Tyler's thigh, \"We'd probably make a fortune.\" \n\n\"We are so not doing that,\" Tyler told her, still amused. \n\nBrooke sat up and reached for her can of soda, taking a sip, then slid along the floor to sit right beside Tyler against the couch, resting her head against Tyler's shoulder. \"We'd only need a single bedroom apartment.\" \n\nTyler smiled, \"That's true.\" \n\n\"You'd get a high-paying job as an Olympic beach volleyball player,\" Brooke fantasized, \"I'd cook, clean, and stay home with the children.\" \n\nTyler covered her laugh with a hand over her mouth. \n\nBrooke continued, \"Once the kids were tucked in at night I'd take you to bed and finger-bang you like a good lesbian wife should.\" \n\nTyler doubled over as she kept laughing. \n\n\"Unless I wasn't in the mood,\" Brooke told her, \"In which case I'd fake a headache.\" \n\n\"Stop!\" Tyler cackled, \"You're making my stomach hurt...\" \n\n\"Yep,\" Brooke let out a satisfied sigh, \"Domestic bliss.\" \n\nTyler held a forearm over her tummy until her laughter subsided, \"Maybe we better just wait to live in the dorms next year for college. I don't think there are many job openings for Olympic beach volleyball players.\" \n\nBrooke grinned, \"You would look sexy in those sporty bikinis they wear, though.\" \n\n\"Speaking of which,\" Tyler kissed the top of Brooke's head, \"Stay here for a second.\" \n\nBrooke lifted her head off Tyler's shoulder, \"Where are you going?\" \n\nTyler bent to pick up the pizza box and folded it closed, \"I'll be right back.\" \n\nBrooke shrugged and grabbed the TV remote to see what else was on. She heard Tyler put the leftover pizza in the kitchen fridge before going downstairs. After a few minutes Brooke had cycled once through all the cable stations and hadn't found one thing to settle on. She wondered what Tyler was doing and was ready to get up and go see, but then she finally heard Tyler coming back up the stairs from the basement. \n\nBrooke called out, \"What have you been do-\" \n\nTyler walked into the living room wearing nothing but the stockings she had bought at Victoria's Secret the day prior when she and Brooke had been at the mall, along with a pair of red high heels that arched her calves. \n\nTyler's figure was slender and toned, with small breasts and abs taut from years of athletic activity. Her legs were feminine perfection encased in sheer black fishnets, which lifted to a lacy end high on her thighs. A thin landing strip of pubic hair rose up her pubic mound, in the white area of her bikini tan lines, and her ass was chiseled firm. \n\nBrooke clapped, \"Oh shit, baby! You look amazing.\" \n\nTyler blushed and looked down at her feet, \"The heels aren't too much?\" \n\nBrooke shook her head and stood up, \"Absolutely not. I'm so jealous of the way you look right now. God, you look so fucking hot.\" \n\nTyler held her hand out towards Brooke and beckoned her, \"Come here, I have a present for you.\" \n\n\"You got me something?\" Brooke beamed and crossed the room, taking Tyler's hand. She was led through the kitchen, down the basement stairs, through the laundry area, and into Tyler's cavernous room. \n\nLaying on Tyler's bed was a piece of sexy lingerie, white and lacy. \n\n\"Oh my god,\" Brooke rushed towards it, \"When did you get this?\" \n\n\"Yesterday at the mall,\" Tyler watched her lift it up, \"I saw you looking at it in the store, so I grabbed it when I went to pay for my stockings. I really wanted to see you in it.\" \n\nBrooke quickly took her clothes off, stripping entirely naked, and then slipped the baby doll nighty over her head. It hung from thin straps over the shoulders and was made of a sheer white material. The top and bottom hems were trimmed with lace, teasingly covering Brooke's breasts and pubic area. \n\nTyler covered her mouth at the vision of Brooke, who twirled as she modeled the nighty. \"That looks so sexy on you,\" Tyler told her. \n\n\"I can't believe you got this for me,\" Brooke rushed to Tyler, their bent arms tangling up between them as they cupped each other's faces and kissed. \n\n\"I love kissing you so much,\" Tyler said, licking Brooke's upper lip. \n\n\"Mm,\" Brooke sucked on Tyler's lower lip, \"Me too.\" \n\nThey sat at the foot of the bed and started making-out, hands at each other's jawlines as they kissed. After nibbling on each other's lips for a while, Brooke stuck her tongue out. Tyler drew it into her mouth and started sucking on it, cocking her head to the side so her nose wouldn't get in the way. They licked on each other's tongues, mouths wide open, before returning to their sloppy kissing. Minutes passed and their passion only grew, neither of them able to get enough of the other's mouth. \n\nTyler shifted her hands to Brooke's neck and she slid her lips to Brooke's cheek, kissing her there. \n\nBrooke was breathing heavily, \"It's so hot when we do this.\" \n\n\"Mm-hm,\" Tyler hummed against Brooke's face. \n\nTheir lips found each other again and they continued making-out. \n\nBrooke was talking between their kisses, \"...I want... mm... to do it... mmf... I want to...\" \n\nTyler stopped kissing her and stared at Brooke with passion filled eyes, wondering what Brooke was trying to say. \n\nA bead of Tyler's saliva hung from Brooke's chin, \"I want to rub our pussies together.\" \n\nTyler asked, \"Like in that video you were watching the other day at lunch?\" \n\nBrooke nodded, kissing Tyler a couple more times. \n\n\"Okay,\" Tyler agreed, willing to do anything for Brooke. She looked between them, \"Um...?\" \n\n\"Here,\" Brooke slid herself further onto the bed, still sitting upright. She recalled the pornographic video they watched, \"I think they were sitting on a bed like this.\" \n\n\"Let me take my heels off,\" Tyler said, still breathless from their kissing. She leaned down to pull one shoe off, then the other. \n\nBrooke reached out when Tyler slid onto the bed, affectionately rubbing Tyler's sides. \n\nTyler wondered, \"How do we...?\" \n\n\"I think we have to pivot like this,\" Brooke tried, lifting one of her legs over Tyler's. The stocking on Tyler's leg rubbed against the underside of Brooke's thigh. \n\nTyler tilted her body the other way, putting her other leg over Brooke's. She braced herself back on an outstretched arm and giggled at their fumbling inexperience. \n\nBrooke reached around Tyler's hip and grabbed her ass, maneuvering in a way that allowed them to scissor their legs properly. She pushed her pussy against Tyler's. \n\nTyler saw what Brooke was trying to do and spread her legs a bit more. Suddenly, she felt the friction on her clit. \"Oh fuck,\" she bit her lip, \"Brooke, I can feel your pussy on my clit.\" \n\nThey figured it out at the same time and began rolling their hips against each other. \n\n\"That feels really good,\" Brooke clenched Tyler's butt, pulling Tyler against her to increase the pressure of their contact. \n\nOnce Tyler got the hang of it, she sat up straighter and curled her arms around Brooke's neck to keep their bodies close. Brooke responded, wrapping her other arm around Tyler's waist so both her hands were on Tyler's ass. \n\nBrooke moaned, \"Fuck me...\" \n\nBrooke's words turned Tyler on and she realized that's exactly what they were doing. They were fucking. \n\nTyler kissed Brooke hotly, their mouths falling easily back into a passionate tangle of lips and tongues. Brooke was pulling on Tyler's ass, humping her pussy against Tyler's and her heavy breasts jiggled between them. They both started moaning and gasping, their kiss broken but mouths remaining close enough to feel each other's hot breaths. Tyler clung to Brooke's neck, her black ponytail flopping behind her head as they humped and gyrated against one another. Her clit felt swollen and the constant friction was making her delirious. \n\n\"Fuck me,\" Tyler begged wantonly, \"Fuck my pussy.\" \n\nTheir pussies and inner thighs were glistening as each girl leaked out her pleasure. The union of their slippery, mingling fluids made wet noises as their pussy-flesh rubbed and slid against each other. \n\nBrooke suddenly cried out, an orgasm burning through her. Her torso fell back on an outstretched arm as Brooke shoved her cunt against Tyler's. \n\nTyler did the same, stretching one of her stocking-clad legs up along Brooke's torso to curl over Brooke's shoulder. \n\nBrooke grabbed the leg and held it close, \"Fuck me, baby! Oh, god, fuck me...!\" \n\nTyler screamed in pleasure as her orgasm came, her voice filling the basement. \n\n\"Oh god,\" Brooke collapsed backwards. Tyler rubbed and humped her cunt against Brooke's a little longer until she too became spent. They both laid on the bed, chests rising with labored breaths, their legs tangled between them. Their bodies held a sheen of sweat and the bedspread was a wrinkled mess, stained with a dark wet spot where they had humped. \n\n\"We just fucked,\" Brooke murmured, \"That was my first time fucking anyone.\" \n\nTyler made a throaty giggle, \"Me too.\" She slowly sat up, sliding herself away from Brooke. \"Oh shit,\" she smiled, looking at the bedspread's wet spot. \n\nBrooke pushed herself up and laughed, \"Did we do that?\" \n\nTyler nodded, \"I'm soaked.\" \n\nBrooke suddenly scrambled on the bed towards Tyler, \"I'm totally eating your pussy right now.\" \n\nTyler squealed with laughter, \"Brooke! What are you -?!\" \n\n\"You practically begged me to do it earlier,\" Brooke flopped to her tummy and laid between Tyler's legs, curling hands around Tyler's stocking-clad thighs. \n\n\"Brooke!\" Tyler gasped, spreading her legs into the air with bent knees, \"Baby... I'm still tender... oh, shit!\" \n\nBrooke began licking at Tyler's pussy, lapping her tongue in deep swaths and tasting Tyler's wetness. \n\nTyler put a hand to the back of Brooke's head, messy curls tangling between her fingers. Every time she felt Brooke's tongue drag across her clit, Tyler shivered uncontrollably. Her other hand stretched out to the side and Tyler clenched the bedspread tightly. \n\nBrooke was tasting Tyler deeply, shoving her tongue as far as she could into Tyler's opening before licking in the taste. She was cleaning Tyler's cunt of its orgasmic fluids and savoring the flavor. \n\n\"Make me cum again,\" Tyler begged, squirming with pleasure. Her legs were in the air, spread obscenely wide, bent so that her calves were dangling against the bottoms of her thighs. \n\nBrooke moved a finger to Tyler's clitoris and rubbed it teasingly, \"Do you remember what you told me earlier?\" \n\nTyler bit her lip and nodded, \"Please make me cum.\" \n\n\"Swear to me,\" Brooke told her, \"Swear that your pussy is mine and I'll make you cum. Come on, baby. Swear to me and I'll make you cum so good.\" \n\n\"I swear,\" Tyler spoke with a desperate tone, lowering her chin to glance between her legs at Brooke. \n\nBrooke smiled tauntingly. \"Say it,\" she urged, flicking her thumb against Tyler's clit. \n\n\"Oh god,\" Tyler squeaked, \"My pussy belongs to you, Brooke. Make me cum and I'll never let anyone else touch my pussy.\" \n\nBrooke lowered her mouth and put Tyler's clit between her lips, sucking on it briefly. \n\nTyler moaned but panicked when she felt Brooke's mouth leave her, \"Baby... please?!\" \n\nBrooke had abandoned Tyler's clit momentarily, \"When I make you cum, you better tell me what you are.\" \n\nTyler nodded urgently in agreement. \n\nBrooke smiled again, \"And remember, I love you.\" She shoved a pair of fingers into Tyler's pussy and returned to sucking on her clit. \n\nTyler gasped with pleasure and began writhing on the bed. \n\nBrooke sucked on Tyler's clit relentlessly, finger-fucking her at the same time. When she wanted Tyler to cum, Brooke started flicking the tip of her tongue against Tyler's engorged button. \n\nTyler's back arched and she cried out, \"Oh my god! I'm cumming! I'm cumming! I'm your fucking bitch!\" \n\n======= \n\nThe hour was late and Tyler's room was dark, save for a hint of moonlight shining through the sliding glass door from the back yard. Brooke was laying on her back under the covers and Tyler was nestled up against her, cuddling close. One of Tyler's legs was hooked around Brooke's and their arms embraced each other. Tyler had removed her sexy stockings and was nude, but Brooke was still wearing her nighty. \n\n\"Will you spoon me while we sleep?\" Brooke asked softly. \n\nTyler nodded against Brooke's shoulder, \"Yes.\" \n\n\"Do you love me?\" Brooke asked. \n\nTyler smiled, \"Yes.\" \n\n\"Did you like our dirty sex? \n\nTyler giggled, \"Yes.\" \n\n\"Do you think I'm sexy in this nighty?\" \n\n\"Yes,\" Tyler answered, sliding her hand beneath the nighty to rest on Brooke's tummy. \n\n\"Will you make love to me in the morning?\" Brooke's voice was growing sleepy. \n\n\"Mmm,\" Tyler purred, \"Yes.\" \n\n\"Do you love me?\" Brooke asked again. \n\nTyler breathed out a laugh, \"You already asked me that one, silly.\" \n\n\"Oops,\" Brooke trailed a gentle finger in circles against Tyler's bare back, \"I guess it's your turn.\" \n\nTyler liked their game and thought of a question, \"Are my legs your favorite part of my body?\" \n\n\"Yes,\" Brooke answered shyly. \n\n\"Do you like kissing me after I've been eating your pussy?\" Tyler asked. \n\nBrooke giggled at that, \"Yes.\" \n\nTyler rubbed Brooke's tummy gently, \"Will you shower with me after we make love in the morning?\" \n\nBrooke nodded, \"Yes.\" \n\n\"Did you like your present?\" \n\n\"Yes.\" \n\nTyler's eyes closed. \"I love you, Brooke,\" she murmured sleepily. \n\nBrooke turned to her side and clutched Tyler's arm around her, \"I love you too, baby.\" \n\nTyler adjusted herself and spooned her body against Brooke's back as they fell asleep. \n\n======= \n\nBrooke was startled awake by a metal clanging noise, followed by the sounds of running water. She shot up in the bed and reached to shake Tyler's shoulder beside her. \"Tyler,\" she whispered, \"Tyler!\" \n\nTyler groaned and squinted against the morning sun pouring through the sliding glass door, \"...what...?\" \n\n\"I think someone is in the laundry room,\" Brooke whispered, fearful. \n\nTyler looked annoyed that she was awake and pulled the covers back so she could get out of bed, wondering if her parents had come home. \n\n\"What are you doing?!\" Brooked hissed, grabbing Tyler's arm to stop her, \"It could be a rapist!\" \n\nTyler gave her a strange look, \"Why would a rapist be doing laundry?\" \n\n\"I don't know! Maybe he's washing the blood of his last victim off his clothes.\" \n\nThe door into Tyler's room suddenly opened and a tall, young guy walked into the room. He was broad-shouldered with strong arms and a firm jaw. His hair was black like Tyler's, but cut short and evenly trimmed. He was wearing a pair of jeans and a maroon football jersey. His name was Derek and he was Tyler's older brother by two years - a sophomore at the University of Minnesota and a tight-end for the Golden Gophers football team. \n\n\"Whoa,\" Derek stopped short when he saw the girls together. Brooke was in her nighty, which partially concealed her modesty, but Tyler was sitting up and her bared breasts were in plain view. \n\n\"Derek?\" Tyler quickly yanked up the sheet to cover her chest, \"What are you doing home?\" The University was barely thirty minutes away from where Tyler lived with her parents, but Derek lived on campus and Tyler only saw him sparingly. \n\n\"I'm doing laundry,\" Derek answered her, \"What are you guys doing?\" \n\n\"Um,\" Brooke glanced at Tyler next to her, \"Nothing?\" \n\n\"Really?\" Derek gestured towards them, \"Because it looks to me like you're in bed naked together.\" \n\n\"I'm not naked,\" Brooke corrected him, leaning her head towards Tyler, \"She is.\" \n\nDerek chuckled. He had known Brooke for almost her entire life. When they were younger children Derek hated Brooke, but as they grew into teenagers he found he enjoyed her sense of humor. It didn't hurt that his sister was always bringing a beautiful blonde home to hang around the house. \"So what's going on? Are you two like lesbians now, or something?\" \n\n\"You know,\" Brooke mused, \"It's funny you should ask...\" \n\n\"Don't freak out,\" Tyler begged her brother. \n\n\"Holy shit,\" Derek grinned broadly, \"Seriously?\" \n\nTyler nodded her admission. \n\n\"Do Mom and Dad know?\" Derek wondered. \n\n\"No,\" Tyler replied, \"And we'd like to keep it that way for a while, okay? Please don't tell them.\" ",
        "Derek lifted an easy shoulder, \"Yeah, sure. Whatever. I'll leave you guys to it.\" He turned and went back into the laundry room, closing the door behind him. \n\nBrooke commented, \"Well, that went well.\" \n\nTyler let out a heavy sigh, \"Oh my god, I can't believe that just happened.\" \n\n\"What?\" Brooke grinned, \"He seemed cool with it.\" \n\nTyler lifted the sheet and slid out of bed, \"Do you want some breakfast? I'm sure Derek's hungry.\" \n\nThe girls spent a few minutes washing and getting dressed before going upstairs to see about breakfast. Derek joined them and they all settled in the kitchen, a squared area centrally located in the house and flanked by a larger dining room. The kitchen held a small table against a wall where the family most often ate. Tyler stood at the stove in a pair of cutoff jean shorts and a sweatshirt, frying several breakfast goodies including eggs, bacon, and hash browns. Brooke sat at the table with Derek in a pair of pajama bottoms and a clinging sports bra. \n\n\"You're filling out nicely,\" Derek told Brooke, not hiding the fact that he was admiring her, \"You're eighteen now, right?\" \n\nTyler rolled her eyes and flipped the sizzling bacon. \n\n\"Keep it in your pants, college-boy,\" Brooke poured herself a glass of orange juice from a pitcher on the table, then she pointed at herself, \"Lesbian, remember?\" \n\nDerek scoffed, \"Yeah, but... you guys are just fucking around, right? Experimenting with each other? You're into guys...?\" \n\nBrooke shook her head slowly, \"Nope.\" \n\n\"I'm gay, Derek,\" Tyler announced. She brought him a piece of bacon, knowing how much her brother loved it, \"Brooke and I are together, now, and we love each other. Please don't make light of it.\" \n\n\"So, uh...\" Derek nibbled, \"How long have you guys been together?\" \n\n\"A week,\" Brooke smiled over at Tyler, \"In fact, today is our one week anniversary.\" \n\n\"A whole week?\" Derek chuckled sarcastically. \n\nTyler's brow furrowed, \"We've been together our whole lives, Derek. You know that as well as anyone. Just because we've only been kissing for a week doesn't mean we haven't loved each other for years.\" \n\nDerek lifted his hands in surrender, \"All right, all right, I get it. You guys are serious.\" \n\nTyler stirred the hash browns, \"What are you doing home, anyways? Don't you have laundry at your frat house?\" \n\n\"The washing machine is broken and I've been wearing the same pair of underwear for three days.\" \n\n\"Ew,\" Brooke's face scrunched up. \n\nTyler dumped a pan of scrambled eggs into a bowl and carried it to the table, \"Mom and Dad will be disappointed they missed you.\" \n\n\"Speaking of which,\" Derek reached for the pitcher of juice, \"When where planning on telling them about this new lifestyle choice?\" He poured Tyler's glass full, then his own. \n\n\"We're not putting a timetable on it,\" Brooke said, \"My Dad is going to flip his shit when he finds out, so maybe in about ten years or so.\" \n\nTyler carried the rest of the food to the table and sat down, \"At least until after graduation.\" \n\nAll three of them started reaching around the table and taking food. \n\n\"Don't you think they should know?\" Derek asked. \n\n\"We're still figuring it out ourselves,\" Brooke pinched a piece of bacon to her plate and licked her fingers after, \"It's not like there's a text book... Lesbian 101, to teach us how to do this. We've had to Google some stuff.\" \n\nTyler grinned at Brooke's private joke and scooped some eggs. \n\nDerek wondered, \"So which one of you is the top?\" \n\nBoth Brooke and Tyler looked at him questioningly. \n\n\"You know,\" Derek looked between them, \"In bed? The dominant one? The male role? The one who wears the strap-on?\" \n\n\"Oh my god,\" Brooke shook her head. \n\nTyler hit Derek in the shoulder. \n\n\"Ow! What?\" \n\nTyler scolded him with an irritated expression, \"We don't even have a strap-on, you big idiot, and I told you not to tease us.\" \n\n\"Though if we go to the Mall of America today,\" Brooke suggested, \"We should totally get one.\" \n\n======= \n\nAfter they finished breakfast and Derek had left with his laundry, Brooke and Tyler were sharing counter space in the bathroom in front of a large wall-mounted mirror above the sink vanity. They were each wrapped in a fluffy towel after showering and feminine products were scattered everywhere. \n\nBrooke was leaning close to the mirror and applying lotion to her face, \"I'm so dry. God, I hate winter.\" \n\n\"It's almost over,\" Tyler applied some deodorant beneath a lifted arm. \n\n\"You're brother seemed cool with us,\" Brooke mentioned, \"I mean, other than a little teasing. But he wasn't too freaked-out or anything.\" \n\n\"Yeah,\" Tyler agreed, \"Derek's all right sometimes, I guess.\" \n\n\"Do you think I'd fit into that blue and black dress you wore the other day to school?\" Brooke wondered. \n\n\"It might be a little tight in the butt,\" Tyler guessed. \n\nBrooke looked to Tyler's reflection in the mirror, \"Are you saying I have a fat ass?\" \n\n\"I'm saying I have a flat one,\" Tyler assured her, \"You have a beautiful ass. I love your butt.\" \n\n\"Oh. Well okay, then. I thought I'd wear that dress to the mall,\" Brooke applied some blush. \n\nTyler glanced at her with a tiny hint of jealousy, \"Who are you trying to impress?\" \n\n\"You, silly. Can't I try to look sexy for my girlfriend?\" \n\nTyler smiled, \"You always look sexy to me, baby.\" \n\n\"What do you find sexiest on me?\" Brooke wondered, \"What part of my body?\" \n\nTyler blushed and offered a shy expression into the mirror. \n\n\"Tell me,\" Brooke urged. \n\n\"Everything,\" Tyler spoke softly, \"But... your boobs, I guess.\" \n\nBrooke grinned, \"I noticed you like to touch them when we make love.\" \n\nTyler bit her lip and nodded. \n\nBrooke went back to looking at herself in the mirror. She played with her curls a bit, applied a bit more blush, then she reached to her side and untucked the towel wrapping her figure, letting it fall to the floor in a puddle at her feet. \n\nTyler looked at Brooke's naked figure in the reflection. Brooke was lifting her own breasts, feeling them and showing them off in the mirror. Tyler watched, reaching for the moisturizing lotion. \n\nBrooke pretended like she wasn't showing-off as she arched her back a little and turned sideways to view the mirror, looking at her breasts in profile. \n\nTyler squirted some lotion into a palm, rubbed her hands together, and then applied the moisturizer onto her forearms. But her eyes never left Brooke's reflection. \n\n\"You know when you suck on them,\" Brooke mentioned casually, \"It's like there's a cord in my body that connects my nipples with my clit.\" \n\nTyler squeezed some more lotion into her palm, \"Turn around.\" \n\nBrooke did, spinning to face Tyler. \n\nTyler made her hands sticky with lotion and then reached to Brooke's breasts. She started smoothing the lotion all over them, sliding her hands around the sides of their soft curves. \n\n\"Mm,\" Brooke stepped closer, \"That feels nice.\" \n\nTyler's tongue poked cutely out of her mouth as she concentrated on covering Brooke's breasts with the lotion, pivoting her hands to slather the soft undersides where they folded against Brooke's sternum. As she did so, Tyler teased Brooke's pink areola with her thumbs. \n\nBrooke's nipples stiffened at the attention. \n\n\"Turn around again,\" Tyler instructed her. \n\nBrooke did, stepping around so that her back was facing Tyler. She felt Tyler reach around, under the arms, and grab her breasts once again. Tyler's chin rested on Brooke's shoulder and they both watched in the mirror as Tyler played with them. \n\nPausing to reach for more lotion, Tyler applied even more moisturizer and rubbed it all over Brooke's breasts until they were slick and glistening. Tyler cupped her hands and made smoothing circular motions, her palms rubbing against Brooke's nipples. \n\n\"Tyler...\" Brooke squirmed a bit, \"You're really turning me on.\" \n\nTyler smiled knowingly into the mirror. She had to pull one of Brooke's hands away when Brooke started reaching between her own legs, preventing Brooke from touching herself, and then returned to massaging Brooke's breasts. \n\n\"Don't be mean,\" Brooke whimpered, squirming and rubbing her butt back against the towel wrapped around Tyler, \"I want to cum. Last night you said we'd make love this morning.\" \n\nTyler giggled softly over Brooke's shoulder, \"I want you to cum too.\" \n\nBrooke took that as permission and drew her hand between her legs, But Tyler grabbed Brooke's wrist again and pulled it away. Brooke's whimper was desperate, \"Tyler...!\" \n\nTyler started rubbing Brooke's nipples, punching them and caressing them softly, \"In a minute, I'm going to eat your pussy.\" \n\n\"Oh god,\" Brooke moaned, liking the sound of that. \n\nTyler continued, \"I'm going to kneel behind you, spread your legs, and suck on your pussy until you orgasm. Then I'm going to lick up all your cum and clean your pussy for you. Because I love you, Brooke. And I think you're the sexiest girlfriend I could ever have. I want to show you how sexy I think you are by shoving my face in your pussy and making you cum.\" \n\n\"Oh my god,\" Brooke groaned, her nipples on fire under Tyler's attentions, \"Lesbian sex is so fucking hot.\" \n\nTyler smiled, then knelt. \n\n\"Oh fuck,\" Brooke looked over her shoulder and slid her feet outwards to spread her thighs. \n\nTyler folded her legs beneath her, placed her hands at Brooke's hips, and then pushed her face between the crack of Brooke's ass while shoving her tongue into Brooke's pussy. \n\n\"Oh jeezus,\" Brooke gasped. \n\nTyler's head shifted from side to side against Brooke's butt as she swathed her tongue all around Brooke's sex. Tyler's hands slid from Brooke's hips to the cheeks of her ass, pushing them apart so Tyler could push her face even further and start sucking on Brooke's clitoris. \n\nBrooke instinctually spread her legs even further and was unable to support herself, sweeping an arm across the bathroom vanity counter to clear it of clutter. She bent forward, resting her torso on the counter and pancaking her breasts against its surface. Brooke reached her arms behind herself and helped Tyler pull her ass cheeks apart. \n\nTyler practically had her nose buried in Brooke's asshole as she continued feeding on Brooke's pussy, sucking on the clit like it was a tiny little cock. Tyler's mouth made loud suckling noises and every few seconds she broke the vacuum to flick Brooke's swollen clit with her tongue. \n\nBrooke began gasping loudly, staring at her own face in the mirror as her expression twisted from the ordeal of pleasure she was experiencing. Her torso shifted and slid on the vanity counter, all the lotion on her breasts making her slippery against the fiberglass surface. Brooke's thighs quivered when she came, her orgasm sending sparks of electricity down her legs and up her spine. She cried out, reaching with a hand to clutch at the side edge of the counter to brace herself. \n\nFluids leaked from Brooke's pussy and Tyler lapped at them with carnal thirst. She licked all over Brooke's slit repeatedly, swallowing the flavor and then licking some more. Tyler licked and cleaned Brooke's cunt until she could no longer taste the sweet nectar of cum before finally pulling her face away. \n\nBrooke was breathing heavily, gasping for air and still tingling from the power of her orgasm. \"Holy shit,\" she gasped, \"I will love you forever for doing that.\" \n\nTyler smiled demurely, her cheeks wet with sexual fluids, and caressed Brooke's butt before kissing it and rising to her feet. \n\nBrooke struggled to push herself up, still shaking, but also regained her feet. She turned and embraced Tyler, kissing her. Brooke could taste herself on Tyler's lips and their kiss lingered as Brooke licked and sucked herself from Tyler's mouth.  \n\n\"I love you so much,\" Tyler pushed her hands through Brooke's curls, \"I swear I can feel it deep in my stomach, like a warm knot. It's hard to describe. But it's there.\" As she spoke, tears began dripping from Tyler's eyes, \"I'm so happy, Brooke. You make me so happy... and I know we've only been together for a week but I love you so much that I swear it will last forever.\" \n\n\"Oh my god,\" Brooke started crying too. She hugged Tyler in a clinging embrace, \"I can't even imagine life without you, baby. This has been the most amazing week of my life, even with all the drama and bullshit at school. I love you and I don't ever want to be without you.\" \n\nThey stood in the bathroom and hugged for several long moments before letting go. \n\nBrooke smiled and wiped at the tears on her face, \"I've ruined my make-up again.\" \n\nTyler made a sobbing laugh, \"It's okay. I'll help you put some more on.\" \n\nBrooke bent to pick her towel up and wrap it around her body once more, \"Skip it. I don't even want to go the mall, anymore.\" \n\nTyler looked to her as she reached for a tissue, \"No?\" \n\n\"Prom isn't for another month,\" Brooke decided, \"We can go get dresses next weekend.\" \n\nTyler blew her nose. \"Okay,\" she nodded, \"Do you just want to stay home?\" \n\nBrooke's eyes twinkled, \"I want to stay in bed.\" \n\nTyler grinned, \"You want to lay in bed all day?\" \n\nBrooke lifted a hand to Tyler's cheek, \"I want to make love all day.\" \n\n\"Oh, Brooke,\" Tyler hugged her again, \"I love you.\" \n\nThey never did make it to the mall that weekend."
    ],
    "authorname": "lingual_arousal",
    "tags": [
        "lesbian kissing",
        "lesbian oral",
        "lesbian sixty-nine",
        "tribbing",
        "lesbian romance",
        "teen drama",
        "athletic brunette",
        "sexy blonde"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/lesbian-101-ch-02"
}