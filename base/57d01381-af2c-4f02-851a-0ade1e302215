{
    "title": "Warren Gets Scammed Ch. 03",
    "pages": [
        "Warren stared at the screen. \n\nIn front of him; his wife sat on their marital bed, the sun pouring through their south facing window, highlighting the flawlessness of her pale skin. Holly was smiling as she lewdly held her legs open, displaying her bare pussy for his camera.\n\nLike almost every night, he had logged on to the website to look over her pictures. This particular one had been viewed over 6,000 times. Warren stroked his aching cock through his jeans as he thought about how many people had looked at his naked wife. \n\nThis was his porn. He didn't care about all the other girls displayed on the website. He got off on looking at the pictures of his wife being shown to the world. Barry had kept up his end of the bargain. After Warren had shared the last batch with him, Barry had logged in to the website, removed Holly's name from the posting and deleted his account. The effect was that Holly's now anonymous pictures were on display and there was no way for either Warren or Barry to remove them. \n\nAbout 3 weeks ago, Barry sent Warren a link. Following it, Warren found a handful of Holly's pictures had been taken and re-posted to another website. It didn't list her name, just listing her as UK slut, but every single one was of her spreading, her face and pussy clear in each. \n\nAfter using a reverse image search, he had found her on a further 13 sites, from all across the world. The majority were mixed in with other pictures of various naked women, but one stood out. It was from a niche forum and when he clicked on the link, found Holly had her own thread, titled 'UK Teacher exposed'.\n\nIn this thread, it had over 100 of Holly's pictures, spread out over 14 or 15 pages, with countless comments from her fans. Warren devoured each comment, from the relatively unimaginative \"love her tits\" to the in-depth descriptions of what they would like to do with her and to her. \n\nThey were able to 'like' a picture as well as comment and Warren took perverse delight in watching the counter rise every time someone 'liked' a new picture. Holly's thread was being updated by multiple contributors who each had made it their purpose to scour the web in the hopes of uncovering new pictures.\n\nThey debated on whether Holly really was a teacher and more than one of them asked if anyone knew her name or where she was from. \n\nOne of the main contributors was a user calling himself ProfessorxX. He had started the thread with a post, stating that he had traded some pictures with a guy on another forum who swore blind that this was a fellow teacher at the school he worked at, though refused to give any more details than that. \n\nProfessorxX went on to say that since then, he was making it his mission to find out everything he could about her. From the way the other guy had talked, some of the words he used, ProfessorxX believed that the original poster was a Brit. \n\nWarren was engrossed as they scoured every picture for clues to the identity of the mystery woman. \n\nWarren watched them over weeks, desperate to see them make progress and identify his wife. He felt a bizarre thrill when one user; 'MoleKingCole' uncovered the picture of her standing at the blackboard. Her name had been blurred out and it just read Mrs ***** ********* - Slut Teacher.\n\nThe room had really kicked off then. The excitement that she really was a teacher reverberated around the room. Comments flooded in of how they would like to get detention from her or bend her over her desk and spank her whilst she recited prime numbers or dates of famous battles.\n\nWarren loved logging in to the room just to see them talk about her, completely unaware that she was his wife.\n\nWhen Warren uploaded 3 new pictures of Holly to the site, he had an influx of private messages, asking him where they had come from etc. Warren chatted happily with them, saying he had swapped them with a guy claiming to be a collector of UK housewives. He tried to be pretty vague about it, but the new material instantly made him popular among the other users. \n\nWithin a couple of days, ProfessorxX made contact. He asked for details on where the pics came from and how to get in contact with the guy who shared them. Warren loved the interest this guy had in his wife. He told ProfessorxX that he didn't know the guy's contact details, but would definitely share with the group if he found anything out.\n\nProfessorxX gave him an email address to contact if he got anything new and Warren promised he would be the first to know if Warren got anything new.\n\nWarren had found someone new to talk to. He still spoke with Barry most evenings, but here was someone discovering his wife for the first time.\n\nBefore long, the itch to display more of Holly returned. Warren called up the unedited picture of Holly in front of the blackboard. He desperately wanted to send the full picture to ProfessorxX, but managed to restrain himself. He put it into photoshop and blurred out everything but her initials.\n\nWarren looked at the picture, squeezing his hardening cock through his jeans.\n\nIt showed his wife, smiling and naked, holding the chalk. On the board, the writing now stated 'Mrs H**** M****** Slut Teacher.\n\nWarren clicked send.\n\nHe could feel he was following the same path as before. He knew that he would need to push the bar further and further. But for now, the thrill of sharing her initials had him throbbing.\n\nWarren was toying with adding another revealing pic, when he heard the key in the front door, signalling Holly's return. Quickly, he shut down the laptop, willing his erection to go down before Holly noticed.\n\nAs she walked into the room, Warren tried to act as naturally as possible, but he could tell Holly wasn't 100% fooled. However, without anything to give him away, Warren hoped that she just thought he was having a wank to good old regular porn.\n\nAs she sat down and started telling him about her day at school, Warren couldn't shake the picture of her standing there in front of the blackboard and he started to feel his cock stir again.\n\nSuddenly, he realised she was saying something to him and he looked up.\n\n\"Sorry hun, what was that?\" he asked.\n\nHolly smiled \"I was just saying, I could do with going shopping this weekend. I need a new dress for the Christmas party.\"\n\nWarren's gut wrenched. He realised the party was only 4 weeks away. When they went, he would come face to face with Barry for the first time since he had willingly given him all of her pictures - and asked him to expose her online.\n\nWarren found himself more nervous than he had been in a long time.\n\nHe managed a faint smile at Holly and said \"sure\", but couldn't really focus on anything else that evening.\n\nThe following day wasn't much better. Warren found he loved the impending dread he was feeling. He had a perverse excitement about seeing Barry, looking him in the eye and knowing he knew every inch of Holly's body. That he had betrayed his wife to him. That he was owned by that blackmailing weasel. Just thinking about it was making Warren hard.\n\n...\n\nThat weekend, Warren and Holly set off into town to go shopping.\n\nWarren didn't mind - Holly was usually pretty decisive when shopping and he quite enjoyed sitting outside the changing room, watching below the gap in the curtain as she stripped between each dress. He watched intently, pinpointing the moment when she was down to her underwear, or even better, naked, imagining Barry somehow being able to see inside.\n\nWarren was abruptly brought out of his day dream by Holly asking him what he thought of a silky blue dress she was wearing. Warren answered honestly that it looked fantastic, that she would be main focus at the party. Holly was turning this way and that, looking at herself in the full length mirror out in the waiting area. \n\n\"Can you see my pantyline in this?\" she asked, seemingly unsure. Warren seized on the opportunity to study her backside in detail.\n\n\"Well, yeah, maybe a little.\" Warren confirmed suddenly fearing that this would mean they be back to square one in the hunt for her dress.\n\n\"So, my choices are this, with no panties, or the black one with no bra.\" Holly summed up matter of factly. \n\nWarren felt his cock stir slightly at the statement. He hadn't considered Holly would ever dream of going to the party without a full set of underwear.\n\n\"Maybe, you could whip your panties off now and model for me - you know, so I can help make a more informed decision.\" Warren said, grinning.\n\nHolly looked at him with a twinkle in her eye. \"Maybe I should - you know, just so we can be sure.\"\n\nShe went back into the dressing room cubicle and pulled the curtain shut most of the way, leaving a gap of about four inches. She looked into the mirror, Warren making eye contact with her in the reflection as she slowly hitched the dress up to the top of her thighs, reached up under the dress and pulled down a lacy white pair of panties.\n\nWarren watched, feeling his cock stir some more, aware that his jeans were getting uncomfortably tight.\n\nHolly bounced out of the dressing room and twirled for him. Warren inspected her once more. Despite seeing it with his own eyes a moment ago, you couldn't really tell Holly wasn't wearing any panties.\n\nWarren did his best deep in thought look and said \"maybe, you should try the other one on again, just to be sure\".\n\nHolly nodded with a smile and walked back in to the cubicle, leaving the gap just like before. Warren realised he could sneak a couple of pictures of her whilst she changed, so, as subtly as he could, reached in to his pocket for his phone. \n\nHolly caught him almost immediately and he went slightly red, feeling just like a child, being caught doing something he knew he shouldn't do.\n\nHolly smiled and then continued stripping out of the dress. Warren rapidly pressed the shutter on his phone, hoping that the more he took, the greater chance some would come out that weren't blurry. \n\nHolly came out wearing a shimmery black dress that looked fantastic on her. As before, she twirled for Warren to take in the full effect. It was backless and her white bra stood out starkly against the black. Warren mock winced at the sight. \n\n\"Yeah, you probably will need to leave the bra at home with that one.\" Warren observed. \"Maybe, try it like that.\"\n\nHolly grinned, fully aware of Warren's motives. Playing dumb, she replied \"Yeah, ok, we need to be sure,\" and walked back in to the cubicle. She closed the curtain fully and Warren could hear her cackle at thwarting his voyeuring schemes.\n\nWhilst Holly was in the cubicle, another lady came into the changing area with a handful of dresses and walked into the cubicle next to Holly. \n\nJust as she was about to pull the curtain closed she called out to someone, Warren assumed was her husband, saying \"Aaron, can you grab me the pink version of this one\" before thrusting an orange dress towards a guy already laden down with bags.\n\nShe pulled the curtain closed and Warren and the new guy exchanged momentary acknowledgement with a 'you've been dragged out here on your weekend too' shrug.\n\nHolly pulled back her own curtain with a flourish and stood at the threshold of the cubicle striking a pose for Warren's enjoyment.\n\nAlmost immediately, Warren noticed the effect that not wearing a bra made. The shape of Holly's breasts was clear, the hint of her nipples poking through. Warren imagined Holly wearing that to the party and his cock stirred at the thought. Barry would be able to see her as the sexy young woman in the flesh. Hell, everyone would see how sexy she was.\n\n\"That one,\" Warren said firmly, \"definitely that one\". \n\n\"You think?\" Holly replied, staring at herself in the full length mirror. \"You don't think it's a little too... clingy?\" \n\n\"Not at all. I think looks fantastic on you. It makes you look sexy, but you know, still professional.\" Warren stumbled, not even convincing himself with that one.\n\n\"Hmm, maybe,\" Holly pondered, continuing to assess herself in the mirror. \n\n\"What do you think?\" Warren continued, desperately trying to draw her attention away from the mirror, hoping she wouldn't realise how well you could make out her breasts in it.\n\nWhilst Holly was telling him about the time Janet had worn a strappy gown with a deep cleavage and how everyone was talking about it on the following Monday, the husband - Aaron, returned with the pink version of the dress he had been tasked with hunting down.\n\nAaron called out to his wife that he had it and she pulled back the curtain slightly to reach out for it. As she pulled the dress through, the coat hanger caught on the edge of the curtain pulling it open briefly. It was over in a flash, but Warren had caught a brief glimpse of her in a tan bra and panty set. \n\nHe looked back toward Holly and she stared at him and mouthed 'busted' before walking back into her own cubicle.\n\nWarren was a little coy and tried not to watch her as she walked back in, instead looking towards his fellow husband, who now, task complete, was looking to rest up and wait.\n\nHe took the seat next to Warren and sat down, sighing. \n\n\"We've been here three hours,\" Aaron exclaimed in a whisper, careful not to let his wife hear. \"It's only her niece's Christening for fuck sake - surely one of these would be enough!\" he said gesturing to the handful of bags he had laid at his feet. \"I mean it's enough that...\" \n\nAaron's eyes, a moment ago looking at Warren were now fixed directly at Holly's cubicle. Warren looked over and let out a soft gasp.\n\nHolly had closed the curtain, but left the same gap four inches wide. She had her back to him as she slowly peeled the dress off, revealing her naked body from behind. She stood, fiddling with the dress, carefully placing it back on the hanger, the long curve of her back and her peachy round ass framed by the gap in the curtain.\n\nWarren looked back at Aaron, who was transfixed, staring at Warren's wife.\n\nWarren knew he should do something to warn her, make a noise, or stand up and close the curtain, but he did nothing. He sat there, his cock stiffening again in his jeans as he watched Holly's unaware show. \n\nHolly reached for her bra and wrapped it around her waist, fastening the clasp at the front, then turned 90 degrees to look in the mirror as she twisted her bra round. It was brief, but they both had a great view of Holly's breasts in profile as she pulled the cups up over her breasts. \n\nHolly stood there, wearing nothing but her white lacy bra, adjusting her breasts until she seemed satisfied and reached for her t-shirt.\n\nWarren watched, fascinated that she opted for that item next, considering she was still naked from the waist down.\n\nWarren watched his fellow voyeur out of the corner of his eye as Holly pulled the t-shirt on, then realising it was inside out, and pulled it off again. Warren felt giddy as he sat watching his wife give an unaware peep show to them both, his co-conspirator's gaze never wavering from Warren's wife.\n\nWarren watched as Holly finished pulling the t-shirt the right way out and just as she was about to put it on, dropped it to the floor, tutting to herself. He heard the gasp from Aaron almost before he registered what was happening as Holly bent at the waist to pick it up, ever so briefly exposing her delicious bare pussy lips and puckered anus to them both. \n\nWithin a second, she had straightened up and was putting on her t-shirt, completely unaware of what she had just done.\n\nAaron exchanged glances with Warren, trying to imply embarrassment at the gratuitousness of the show they had just witnessed. Warren looked back and shrugged, trying to convey similar embarrassment, whilst simultaneously wanting to grab his crotch and masturbate furiously at what Holly had just exposed to them both.\n\nHe looked back at the cubicle, drawn once more to Holly's exposed pussy, bending over again as she stepped in to her panties. She pulled them up with a wiggle and grabbed her jeans, Warren noticing a slight pinkness to her cheeks.\n\nAt that moment, Aaron's wife pulled open her curtain and the spell was broken, Aaron jumping up to assist her.\n\nMoments later, Holly came out looking flushed. She looked at Warren, holding up the black dress and signaled for them to leave. Warren noticed she didn't look up when she passed Aaron.\n\nThey paid and left, Holly seemingly a little distracted as they walked out of the store. Once outside, Warren tried making small talk, but was getting little if any response. \n\nThey stopped off at a cafe and Warren grabbed them both a coffee, sitting down opposite Holly. She sat there stirring her drink and staring out of the window, whilst Warren studied her closely and asked how work was going. \n\nHolly didn't answer, continuing to stare blankly out the window.\n\n\"Holly?\" Warren said, again, this time a little louder. She snapped out of her daydream and looked at him.\n\n\"What's up Hol?\" Warren questioned, giving his best 'we need to share' look. \n\n\"Oh, nothing really,\" Holly replied, unconvincingly.\n\n\"C'mon, tell me. You've hardly said a word since we left the boutique. What's on your mind?\"\n\n\"Well...\" Holly began. \"it's embarrassing.\"\n\nWarren felt a slight flicker in his crotch. \"Don't be silly, you can tell me anything,\" he reassured her.\n\n\"Well, when I was showing you the last dress, I kinda noticed you getting distracted by that lady in the next cubicle showing you her underwear,\" Holly, began, looking Warren directly in the eye.\n\nWarren could feel himself going a little red in the cheeks \"Er, well, I don't...\" he stammered before Holly cut him off.\n\n\"It's ok, she was pretty, and guys like to look - I understand that.\" Holly went on. \"but, I must admit, I was a little jealous, so I... \" she looked hesitant \" I left the curtain open a bit for you to see me whilst I took off the dress.\"\n\n\"Yeah, you did.\" Warren smiled.\n\n\"I figured, I would give her a run for her money.\" Holly replied, her cheeks going a little pink too. \"Anyway, as I was getting dressed, I looked up and noticed in the mirror that the guy sitting next to you could see in as well.\"\n\n\"Ah\" Warren said, awkwardly knowing he was on thin ice. \"yeah, I mean, I don't think he could see much,\" Warren bluffed, not really sure what he should say.\n\n\"Why didn't you say anything?\" Holly asked.\n\n'Busted' Warren thought to himself. He took a sip of coffee whilst trying to come up with an answer.\n\n\"I wasn't sure and I didn't want draw attention to it, and cause you any extra embarrassment.\" Warren told her. He looked in her eyes, trying to gauge whether she was buying it, or whether, maybe she suspected something. \n\nWarren decided the best course of action was to deflect. \"So, once you realised, why didn't you close the curtain fully?\" He asked.\n\nHolly looked down, somewhat shyly. \"I...I don't know. When I realised, I kinda froze. Then I guess I didn't want to acknowledge it. Maybe pretend it wasn't happening. Or, maybe, I didn't want the guy to know I knew. That way, it wasn't my fault... maybe. It was him being wrong for looking. I didn't want to cause a fuss.\"\n\nHolly sighed. \"I figured, once he had seen me naked, there was no point covering up after that. He'd already seen everything.\" \n\nWarren stared at her, trying his best to be sympathetic to her obvious embarrassment. In his mind, all he could think of was his wife bending over, displaying her puckered anus and beautiful bare pussy lips to a stranger, and her being concerned about 'causing a fuss'.\n\nAll of a sudden, something occurred to Warren. He looked at Holly and asked: \"Just out of curiosity, at what point did you realise he could see in?\"\n\nHolly seemed to go an even brighter pink. \"Well...\" she started.\n\nSuddenly, there was a thumping on the window of the cafe. \n\nWarren and Holly both looked up to see Elliot waving manically at them.",
        "Elliot was Holly's housemate at university when they were both doing their teacher training. She had graduated the same year as Holly and they had both wound up teaching at the same school straight after.\n\nAs a result, Elliot and her partner Chris often double dated with Warren and Holly. Chris taught at the school as well, meaning Warren often ended up on the periphery of their conversations when they went out.\n\nHe didn't mind though. Elliot was fun and great to look at, with a body at least every bit as good as Holly's and Chris was always really charming and entertaining, not to mention blessed in the looks department as well. \n\nTruth be told, Warren was a little jealous of him. He had a hot wife, was a thoroughly nice bloke and was always the one getting second glances whenever they went out as a group. \n\nWarren had once asked Holly if she thought Chris was attractive and she replied a little too quickly that he wasn't her type. The way she said it didn't convince Warren for a second, but he thought better than to press further and dropped it, though something always nagged at him that Holly did have a bit of a soft spot for him.\n\nElliot came bustling in shopping bags in hand and plonked herself down next to Holly with a sigh.\n\n\"Phew\" she sighed. \"It is manic out there!\" Elliot turned to Warren - \"hey big boy, haven't seen you in weeks,\" she smirked.\n\nIf Warren was honest with himself, Elliot intimidated him. She was beautiful and funny and from what Holly had hinted at, quite sexually adventurous. She was also outspoken and extroverted and had a fantastic figure. \n\nShe would harmlessly flirt with Warren and time and again, he would find himself tongue-tied in her presence.\n\nWarren stared at her confused. He hadn't seen Elliot in months. As he looked at her, Elliot licked her teeth and stared straight back at him.\n\n\"What have you been buying?\" Holly interrupted, her keenness to change the subject not lost on Warren.\n\n\"Oh, this and that,\" Elliot replied. \"I bought some lingerie for a treat for Chris this weekend. Wanna see?\" \n\nWhilst the conversation was between Elliot and Holly, Warren knew the comment was aimed at him.\n\nShe pulled out a lacy light blue bra, with frills and flowers sown into it. Warren couldn't help notice how the cups were made of such a thin gauzy material that they would offer no concealment to what was underneath.\n\nWhilst Holly was gushing over how pretty they were, Elliot 's gaze focused on Warren, looking for a reaction. \n\n\"Well, what do you think?\" she asked, still looking his way. \"I'm keen to get another man's opinion - if I walked into the bedroom wearing this, would it get you all hot and bothered?\" she asked him with a glint in her eye.\n\n\"You personally?\" Warren countered, trying not to let her fluster him.\n\n\"Yeah, me personally\" Elliot retorted. She held the bra up to her chest and gave a slight shimmy, maintaining eye contact with him. \"Would you feel a stirring in your loins?\" she grinned.\n\nHolly slapped her arm playfully \"stop it\" she chastised, smiling along with Elliot. \n\nAt that moment, her phone beeped. Elliot looked at it, sighed, then got up and gathered her bags. \"Sorry, gotta go,\" she said, then looking at Warren put on a mock frown and asked \"are you still picturing me in my lacy blue lingerie?\"\n\nWarren, trying not to show she was getting a rise out of him retorted \"no need, I have it burned to memory now. Will be able to use that next time I get some alone time.\"\n\nCompletely unfazed, Elliot smiled and replied \"Well, if you are good and ask really nicely, maybe Chris will show you a picture of me in it - really help you with your imagination.\"\n\n\"Hmmm, yeah, a photo would be helpful,\" Warren said grinning \"I think I'd like that.\"\n\n\"Oh yeah, I know how much you like photos!\" Elliot shot back, cackling as she turned and walked away.\n\nWarren felt himself blushing. He looked over at Holly who was avoiding eye contact with him, her face as rosy as his felt.\n\n...\n\nThey had ridden home in near silence, neither making any meaningful attempts at conversation.\n\nWhen he could bear it no more, Warren asked if he could have a quick word with her, and Holly sat down waiting on the inevitable.\n\n\"So, when we were out earlier,\" Warren began. \"remember when Elliot was leaving, she made a comment about liking photos. What did she mean?\" he asked trying not to sound too accusatory. \n\n\"Oh, nothing,\" Holly shrugged, her face betraying her. \n\nWarren pressed on, showing he wouldn't let her get out of it that easy. \n\nAfter a couple of false starts, Holly took a deep breath \"Well, you see...\" She started \"er, you remember when I went in to school that weekend...\"\n\nWarren felt a knot in his stomach. What did she know? Was she aware that he had been sending the pictures she took for him to his online blackmailer? \n\nDid she know that he had willingly sent him more than he asked for, that he had volunteered the most revealing ones, the ones that showed her fucking herself on her school desk, the one that showed her with her name emblazoned across the blackboard?\n\nWas she aware that he had been logging in to a website for the last week as a group of guys he had never met posted pictures of his wife and talked about what they would do to her?\n\nWas she aware that his deepest fantasy was that someone would find the original picture of Holly standing naked, next to her name and the words 'Slut Teacher'? \n\nEach night, that was the thought that made him cum, his orgasms more intense than anything other than when he had asked Barry to make her online exposure permanent. \n\nWarren noticed his breathing ragged and the tips of his fingers begin to shake.\n\n\"er, yeah...\" he replied cautiously, not knowing where this was going.\n\n\"Well, you see, I wasn't quite ALL alone...\" Holly replied, biting her lip nervously.\n\nWarren was jolted, the surprise on his face evident.\n\nHolly took a deep breath and decided that she was just going to get it over with.\n\n\"so, Elliot was there.\" she exhaled. \"She had been passing by and popped in to keep me company.\"\n\nWarren sat rigid, not sure what emotion he needed to convey.\n\n\"She was there when I sent you the first text. She was there when you asked for a naughty pic.\" Holly said.\n\nHolly took another deep breath \"and she was the one that convinced me to send you the smutty pics... In fact...\" Holly sighed again. \"In fact, she was the one that took them...\"\n\nHolly covered her face in her hands, her eyes poking out from between her fingers in the cute way she knew Warren was a sucker for.\n\n\"Woah,\" Warren responded. \"Really?\"\n\n\"Uh huh\", Holly nodded. \"She wrote 'Holly Marksmith, slut teacher' on the board and told me to stand next to it. She told me to sit on my desk and spread my legs for you.\" \n\nWarren stared at her as Holly's face reddened further. \n\n\"Elliot took my phone from me after the first text and pretty much directed everything from there\" Holly said, clearly relieved to get it off her chest.\n\n\"That is so, so very... hot\" was all that Warren could articulate. \"I mean, wow, just wow.\"\n\nHolly looked at him. \"So you're not mad?\" she asked. \n\n\"No\" he laughed, \"why would I be mad?\" \n\n\"Because... another person saw me naked. And spreading my legs. And... Masturbating\" Holly said in a whisper. \"And... Oh god... she maybe... er... she...\" Holly took another deep breath \"may have gone down on me a bit.\" \n\n\"Wait, what?!\" Warren blurted out.\n\nHolly's face was bright pink. \"So, are you mad?\" she asked again.\n\nWarren sat there in shock. After a few minutes, he spoke.\n\n\"No, I'm not mad. I'm... god, I don't know. Shocked. Surprised. Turned on. I mean... wow. What...how...I just... Was that the first time you ... y'know?\" he made a gesture with his tongue.\n\nHolly's face had started to regain some colour. She looked at him as she spoke. \"Well...actually no. We may have fooled around a little bit when we were at Uni. There was this time... well, we'd drunk quite a bit and you know, just kinda came back after a party and...\" Holly made an awkward shrugging gesture to fill in the rest of the sentence.\n\n\"Fuck!\" Warren exclaimed. \n\n\"So, not mad?\" Holly checked again.\n\n\"No, not mad\" Warren reassured her. \"Surprised. I know you're a little more adventurous than me, but I'd never have thought you'd get up to that sort of stuff. And Elliot too, huh. I'm surprised by that as well. O.K., she's a bit of flirt and all, but I never pictured her going down on another girl.\"\n\n\"Oh, you'd be surprised.\" Holly replied a little too quickly.\n\n\"What do you mean?\" Warren queried.\n\n\"Oh, never mind.\" Holly replied trying to look away.\n\n\"No, come on,\" he pressed. \"We shouldn't have secrets from each other, right?\" \n\nEven as he said it, Warren felt a bit slimy, knowing how many secrets he had been keeping from her.\n\n\"Yeah, I guess...\" Holly said. \"Well, it's just that Elliot and Chris like to... well... hook up with other people sometimes.\"\n\n\"What like an open marriage?\" Warren asked.\n\n\"Sometimes. Other times they all go to bed together.\" Holly replied.\n\n\"Woah!\" Warren responded. This was a revelation. They had been out as a group countless times and nothing like this had ever come up.\n\nWarren's mind wandered to imagining Elliot naked and being fucked from behind by some anonymous lover while Chris sat and watched. Then without realising it, he had morphed into the watcher as Chris was pounding away on Holly. The thought made him feel faint. He choked back a weird feeling in the back of his throat, almost like a dry heave as his mind fixated on his wife being taken doggy style by his friend. That was a step to far.\n\nWarren shook his head, as if trying to shake loose the thoughts.\n\n\"Are you ok?\" Holly asked, her look one of concern.\n\n\"Yeah, I'm fine\" he replied. \"Let's talk about something else for a bit.\"\n\n...\n\nAll evening, Warren couldn't get the image of his wife being eaten out by another woman out of his head. In fact, every minute or so, he found himself going back to the thought of it. Holly throwing her head back in ecstasy as she was expertly tongued by one of her oldest friends. Of course, in Warren's imagining, Elliot was naked too. \n\nMaybe, they were sixty-nining, Holly's face covered in Elliot's juice.\n\nWarren felt his cock twitching at the thought. He reached down to subtly squeeze it. Holly spotted it instantly. She reached out and ran her fingers along the bulge in his jeans.\n\n\"What are you thinking about mister?\" she purred.\n\n\"You and Elliot, to be honest\" Warren replied. \"I can't get it out of my head. Tell me again what happened. In detail\".\n\nHolly smiled. \"O.K, so what happened was...\" She said toying with the button of Warren's jeans. \"I went in to work through the prep for the inspection, and Elliot showed up maybe 20 minutes later.\" \n\n\"She said that she had been passing and thought I might like the company. We chatted whilst I got everything ready. She told me about an adventure she and Chris had the night before,\" Holly leaned in and coyly whispered \"a sexual adventure.\"\n\nWarren raised an inquisitive eyebrow as she continued - \"So... there she was, telling me about what they had done the night before and it was getting me a little hot under the collar. Then you sent me that text, asking how I was getting on.\" \n\nHolly went on. \"As I was replying, Elliot asked me what you were asking. So I told her you were asking for a sexy photo. She encouraged me to send it. When I did the first one, she laughed at how tame I was being. She convinced me to take the pic with my boob out.\"\n\nAs she was talking, Holly had loosened Warren's jeans and her hand had snaked inside.\n\n\"I was a little unsure, but she took the phone from me and sent it to you before I could object.\" Holly continued. \"She still had my phone when you responded, but wouldn't give it back. She told me how much you loved the pic and was asking for more. She said you were asking me to take of my bra completely.\"\n\n\"At first I refused. I told her to tell you that there was no way I was getting topless at school. But she kept on at me. Telling me how hot it would be. And how much you would love it, and loads of other reasons I should do it. In the end she asked when I would ever have the chance to be topless at school again. It kinda made sense in a weird sort of way, so, yeah... I whipped em out... Then got cold feet and covered my boobs with my hands.\" \n\nSmiling, Holly admitted \"It took 4 attempts to get a pic of me not looking petrified that someone would come in.\" \n\n\"Elliot took the picture and I was just about to put my bra back on when she suggested one, as a memento and to drop my hands. So I did and she took the pic. She then told me that she had sent that one to herself.\" Holly said, a little bit more colour returning to her cheeks.\n\nWarren looked up at her, surprised.\n\n\"Yeah,\" Holly continued. \"She told me that I had to do what she told me, or she would 'accidentally' send the picture to Barry Snelling.\"\n\nWarren's cock twitched at the mention of Barry's name. \"What? Really?\" he asked, trying to keep the excitement out of his voice.\n\n\"Yeah, she was always trying to get me to do stuff when we were at uni together by threatening to expose me or something similar.\" Holly went on.\n\n\"Really, like what?\" Warren asked, painfully conscious of how hard his cock was.\n\n\"Just stuff like going out to a bar, when I was tired, or skipping out on class with her. She had a grainy pic of me in the shower she took when we went to Ibiza and she would threaten to show it to this boy I had a crush on if I didn't do what she wanted\"\n\n\"Wow,\" Warren replied. \"Did she ever do it?\"\n\n\"Yeah, once or twice,\" Holly shrugged. \"It started off with showing our group of friends. Then it was the boy I liked. After that, she stepped it up a gear and pinned it up in the men's toilets at the bar I worked at. I had guys grinning ear to ear at me all night.\"\n\nWarren was hard as a rock as Holly told him this. She had his cock in her hand and was slowly stroking him as she went on.\n\n\"After that, she pinned it up on the Student Union notice board. I didn't realise for nearly 2 days!\" Holly squeezed his cock extra tightly as she said it.\n\n\"I kind learned not to doubt her after that,\" Holly shrugged. \"However, I thought maybe, she had grown out of all that - y'know, with it being 6 years later and all, so I tried to call her bluff and started getting dressed.\"\n\nHolly went back to stroking Warren's cock as she continued \"I had just stared to put my bra back on when she showed me her phone. It had my picture as an attachment and she had selected Barry's phone number!\"\n\nWarren felt his cock pulse.\n\nHolly went on \"Her finger was hovering over the send button. She gave me a 5 second countdown.\"\n\n\"I've never taken off my bra so quickly in my life!\" she exclaimed.\n\n\"Elliot told me to take my jeans of and smile for you. I did as I was asked and she took the picture. She started typing on my phone, saying how much you liked it, then told me to lose the panties.\" Holly watched for Warren's reaction as she went on.\n\n\"Again, I did as I was told and she took another picture. It was so weird being naked in school. Looking at all the empty chairs where my students sit. I was imagining them all sitting there, staring at me... I started to...I started to get a little turned on.\"\n\nHolly covered her eyes with her hand. She was still stroking him as she spoke.\n\n\"I told Elliot that I was getting turned on by the thought of all my students seeing me naked and exposed and she laughed and called me a slut! I said, 'yeah, I guess I am' so she decided that she was going to write it on the board and make me stand next to it - saying... well, you know what it said.\"\n\nWarren sat there, engrossed in the story Holly was telling him of her own blackmail.\n\nShe continued \"All the while, the phone is pinging and she is saying how much you are loving the pictures, which is turning me on even more... \n\n... before I know it, she has me sitting on my desk, masturbating furiously, whilst she continues to take pictures.\"\n\n\"Eventually, she puts down the camera and walks over to me, bends down and runs her tongue straight along my slit, then when she gets to my clit, she flicks her tongue over it. I was sooo horny, I came right there and then\" Holly said, lowering her head down towards Warren's throbbing cock.\n\nWarren let out a moan as she engulfed it, dragging her tongue firmly from the head and down his shaft, her hand cradling his balls.\n\nWarren sat back, enjoying the sensation and the image of his wife getting her pussy licked.\n\nSuddenly, he sat bolt upright, a thought occurring to him. Holly recoiled slightly in shock as he abruptly brought the blow job to a close.\n\n\"Elliot had your phone!\" Warren blurted out. \"from when you took the pic of your tit, right up to the end?\"\n\nHolly looked at him, a little confused. \"Yeah, why?\" she asked.\n\n\"Why?\" Warren replied \"Why! Because she was sending me messages pretending to be you. She...she asked me to send a dick pic to her.\"\n\nHolly sniggered. \"Did she?\" \n\nWarren nodded. \n\n\"And did you?\" Holly asked, wide eyed. Warren nodded again.\n\nHolly laughed out loud. \"Fuck, really? How much did you show?\"\n\n\"In that pic, just my dick, but you, er she asked for more!\" Warren said animatedly.\n\nHolly's eyes widened \"O.K. so what did you send?\" she asked.\n\nWarren took a deep breath. \"She asked to see me cumming. I sent...I sent her a video of me facing the mirror.\"\n\nHolly cackled with laughter \"Shit, really?\" she said. \"Elliot has seen your cum face.\" Holly was laughing, wiping the tears from her eyes.\n\n\"It's not funny!\" Warren stated. \"I'd never have sent that if I knew someone else would see it!\"\n\n\"It is a little funny\" Holly laughed, still wiping the tears from her eyes. \"And, besides, it's only Elliot.\"\n\n\"That makes it even worse\" Warren said. \"Now every time I see her I'll know that she has seen me naked...and...\" Warren lowered his voice \"and...cumming\" he whispered.\n\nHolly continued to grin, clearly not seeing his point. \n\nShe grabbed for his cock, but Warren brushed her hand away.\n\n\"How would you like it...\" Warren asked, the irony of what he was saying, completely passing him by \"if someone you knew and saw every day had seen you naked?\"\n\nFor the briefest of seconds, Holly's demeanor flickered, before she composed herself.\n\n\"It wouldn't bother me\" she shrugged.\n\n\"Really?\" Warren asked \"if someone you saw every day saw you naked?\"\n\nHolly shrugged again. \"No, it's just a body.\"\n\nWarren couldn't tell if she was bluffing or not, but either way, he wasn't going to waste the opportunity, taking out his phone.\n\nHolly smiled \"you gonna take my picture mister?\" Warren nodded.\n\n\"And what ya gonna do with it?\" Holly asked sultrily as she struck a pose.\n\n\"I'm gonna show it to someone you know, then they will know exactly what you look like naked\" Warren replied. \"Actually, I'm gonna film you\" he said, flicking the phone to video mode.\n\n\"Mmmm...\" Holly replied, as she started to play with the hem of her sweater.\n\n\"You're gonna film me taking this off?\" She said pulling the hem up to just below her chest.\n\n\"Yeah, you're damn right I am\" Warren affirmed.\n\nHolly pulled the sweater off, looking into the camera.\n\n\"So, who are you going to show this to?\" Holly asked.\n\nWarren looked at her and felt his cock throbbing mercilessly. \"I'm going to film you stripping naked and then I'm going to send it to Barry Snelling.\"\n\nHolly flinched momentarily, before regaining her composure. Trying to maintain calmness in her voice she went on. \"Oh yeah? You think he'd like to see my tits?\" she said, toying with her t-shirt , exposing her stomach. \n\nShe looked at Warren as she instructed him \"Start the recording now.\"\n\nHolly looked directly at the camera and spoke as she peeled the t-shirt up her body. \"Hey colleague. I've noticed you looking at me. Trying to see what I have under my shirt. Trying to get a glimpse at my bra. Well here it is.\" ",
        "Holly lifted her t-shirt up and off, exposing her black, lacy bra. She cupped her bra covered breasts \"Do you like this. Is it what you imagined? Do you wanna see more? You wanna see my tits?\" \n\nHolly played with the strap of her bra, peeling it from her shoulder, then pulling it back up. \n\n\"Maybe you want to see me in my underwear? I know you try to look up my skirt whenever I wear one. I've seen you purposely sit opposite me and stare hoping for a glimpse\" Holly purred.\n\nHolly lifted the hem of her skirt up, showing the bare hint of her panties.\n\n\"You wanna see more? You wanna see my panties?\" Holly's hands delved under her skirt, finding the waistband of her panties. Slowly, she pulled them down her thighs, her skirt falling back in to place as she did. Once past her knees, she stepped out of them one leg at a time, her gaze never wavering. \n\nContinuing to look directly at the camera, she held them up. \"So here they are. Next time you see me in the staff room, you can picture what I am wearing under my skirt. Either these, or...\" \n\nHolly turned slightly and lifted her skirt from behind, showing off the curve of her ass \"maybe nothing\" she said and winked.\n\nWarren was hard as a rock watching his wife perform this strip tease. Even though he had told her he would be sending it to Barry, he knew she didn't believe him for a second. There was no way she would do any of this if she thought he would really see her. Warren's cock throbbed at the thought of sending it to him. \n\n\"So, you like what you see?\" Holly continued. \"You want to see more?\" \n\nShe toyed with her bra strap again, pulling it lower. Then she moved to the other and did the same. \n\nSmiling, she deftly, she pulled her arms through and stood there, looking at the camera, a little more slack I her bra now that it was only supported around the back.\n\n\"What do you think?\" Holly asked, looking directly into the camera. \n\n\"Do you want me to take this off?\" She said, pulling one of the cups away from her breast. \"Do you want me to show you my tits?\"\n\nHolly reached behind her back and unfastened the clasp. Her bra sagged forward, the cups holding loosely to her breasts.\n\nShe smiled and pulled the cups away, exposing her breasts to Warren's camera. Holly cupped them, almost offering them up to the viewer. She tweaked her nipples, making them stand to attention, then started to circle them with her index finger.\n\nWarren watched on, captivated. He knew that Holly only played with her nipples when she was really turned on. \n\n\"You like my tits?\" She asked, looking down the lens. \"Would you like to feel them wrapped around your cock? Or maybe, you'd prefer my mouth?\" \n\nHolly opened her mouth, making an 'O' shape, then flicked out her tongue, seductively. \n\n\"Or... maybe, you'd prefer this?\" She lifted her skirt higher, slowly raising it until it hung just below her crotch. She looked to the camera, running her tongue across her teeth, a slight smile in the corner of her mouth and lifted the hem, exposing her bare pussy to the camera.\n\nHolly ran her finger along her slit, pushing the folds apart and let out a mild whimper as she repeated the action.\n\nHolly looked in to the lens of the camera and said simply \"I want to suck your cock.\"\n\nShe knelt down in front of Warren and took his member in her hand. \n\nWithout breaking eye contact with the camera, she bent down and took it in her mouth, bobbing her head up and down and making exaggerated gestures for the benefit of the camera. \n\nTaking his cock in her hand, Holly ran her tongue around the head licking it with ferocity before returning to taking it in her mouth, going so deep that every so often, Warren would hear her gag, though never breaking her rhythm. \n\nEvery so often, Holly would look up and ask:\n\n\"Are you enjoying this? You like seeing my mouth used as a fuck hole? Next time you see me in the staff room, I want you to picture me like this.\"\n\nThe way she was talking and the thought of Barry seeing this video of his wife behaving like a slut had Warren on the edge in record time. He had barely time to tell Holly he was about to cum, before the first spurt hit her in the back of her throat.\n\nShe pulled away, working her small fist furiously along his shaft as stream after stream hit her full in the face. She knelt there, mouth open as Warren's cum shot over her hair, in her eyes and down into her mouth. Warren watched as she bent back down to take his cock back between her lips, sucking it dry, before pulling away and collecting the cum dripping down her face and scooping it in to her mouth.\n\nSpent, Warren sat back, barely able to hold his phone up, the video still recording.\n\nHolly looked at the camera as she lay back on the floor, her hand working frenetically on her pussy. She stared intently into the camera as she brought herself to orgasm, trembling at first, before throwing her head back in ecstasy. \n\nAs she did, Warren noticed her open mouth was still full of his cum. As Holly began to come down from her orgasm, she looked at the camera and opened her mouth, showing his semen on her tongue, then smiled, dripping in sweat and cum as she swallowed it, showing the camera her empty mouth. \n\nAfter recovering for a few minutes, Holly managed to drag herself up from the floor leaving to take a shower. As she went about the room collecting up her clothes, she turned back to Warren. \n\n\"You're not really going to send that to Barry, are you?\" she said nervously.\n\nWarren feigned shock. \"No, of course not\" he said.\n\n\"Ok, good. Just between us, right,\" Holly said, trying to reassure herself.\n\n\"Absolutely\" Warren replied.\n\nSatisfied, Holly smiled and walked out of the door, heading for their bathroom.\n\nThe moment he heard the water running, Warren opened his email and attached the video. His cock throbbing as he addressed it to Barry and typed out a quick note. Warren squeezed his aching cock and clicked send."
    ],
    "authorname": "Kamac",
    "tags": [
        "dressing room",
        "exposed",
        "pictures",
        "voyeur",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/warren-gets-scammed-ch-03"
}