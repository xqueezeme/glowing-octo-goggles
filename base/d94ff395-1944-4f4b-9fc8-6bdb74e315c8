{
    "title": "What The Cat Dragged In Ch. 10",
    "pages": [
        "I'm so excited to see that this story has drawn so many readers so quickly. To the person who asked if i have personal experience with someone like Creed, the answer is no. I like to think that studying developmental psychology has helped me to get a better feel for all of my characters, though. :) Thank you for all the wonderful, passionate reviews.\n\npsyche b\n\n10. Separation Anxiety\n\nCreed woke up for the fifth time at around five-thirty in the morning, or what he guessed was five-thirty judging from the time of year and the quality of light in the room. He gave up trying to go back to sleep. He shifted the pillows and sat up against the headboard, then pulled the frail up so that she was resting against his chest. For a minute she squirmed, then she murmured something and settled again. Her arm draped around his waist, her leg resting on his. It was the first decent sleep she'd gotten all night as far as he could tell.\n\nEvery time he'd woken up, she'd been either awake or so lightly asleep that his shifting on the bed had awakened her again. She'd never said a word about him leaving, but when he mentioned it tension would settle around her shoulders and worry lines creased her forehead. He halfway wished she would say something. That way he'd know what was going on in her head at least. He'd about given up trying to guess, especially when she got like this.\n\nShe squirmed a little and he shifted her again, letting her lay down. He stretched out behind her, his arm resting around her waist. She trembled and moaned, but she didn't wake. Probably pure exhaustion. As far as he could tell she hadn't had a good night's rest since he found her in the kitchen. The tips of his claws absently teased the soft flesh on her tummy. A little tremor of relaxation went through her, and she snuggled back against him.\n\n*~*~*~*~*~*\n\nKelly woke up at a little before ten. Victor wasn't in bed, but his side was still warm. She was torn between snuggling into the warm spot, hoping that he would come back, or getting up. She knew he hadn't slept much, but it was late enough that he'd probably want breakfast. Kelly got up and pulled on the shirt he'd worn the day before. \n\nA low chuckle from behind her made her turn. Victor was grinning from the bathroom door. \"Gonna miss the sight of that ass in the morning.\"\n\nKelly blushed deeply. \"I thought you were already up.\"\n\n\"Halfway there, frail.\" He stroked his halfway hard shaft, a fang-baring grin on his face.\n\nA familiar, needy ache settled between her legs. She forced herself to stop staring, then to walk toward the door. \"It's late.\" A little smile on her lips. \"Don't you want breakfast first?\"\n\n\"You sayin' no to me?\" He advanced slowly, a little smirk on his lips.\n\n\"Just saying that I want you to keep up your strength.\" She held out her arm, her hand flat on his chest.\n\nHe took hold of her wrist and spun her around. Kelly whimpered and twisted her wrist in his grasp, remembering the pain from the last time he gripped her wrist so quickly. \"Nervous, frail?\"\n\nShe rested against him, her back against his chest. Some of the tension left her body. \"A little.\"\n\n\"Good. Maybe next time you'll remember your manners.\" His free hand came up and started to toy with a pebbled nipple. Her back arched. \"Still worried about my lack of strength?\"\n\n\"It's late. Thought you might be hungry.\" Kelly moaned softly, her eyes half closed.\n\n\"Only thinking of me, huh?\" A harder pinch to her throbbing nipple.\n\nShe squirmed against him. \"God, Victor, please stop teasing me.\"\n\nHe chuckled. \"This is your game, frail.\" He deftly sliced through the threads holding the last three buttons on, then reached down, letting just the tips of his claws tickle the front of her mound. \"I just play it better than you do.\"\n\n\"Alright, yes, you do. You win. \" She reached back to stroke his thigh, then let her hand move higher.\n\nHe chuckled. \"Nah. You're just saying that so I'll fuck you. Where's the challenge in that?\"\n\nKelly laughed and squirmed. \"Well I can't exactly be very challenging at the moment, now can I?\"\n\n\"Guess not.\" He bent down and nipped the side of her neck. \"Tell you what, when I let you go, you run. You get to the kitchen before I catch you and I'll make you cum before you cook me breakfast.\"\n\n\"What if you catch me?\"\n\n\"We'll just have to see, now won't we?\" He grinned and shoved her away from him hard enough that she nearly lost her balance.\n\nKelly wasted no time in getting out the door. The second floor was partially open, she held the shirt closed in front of her and headed for the stairs, expecting to hear him behind her in a couple of strides. When she didn't, she turned in time to see him put one hand on the second floor railing and jump over. The movement was pure fluid grace and for a moment she simply stood there watching. It wasn't until he was falling through the air that she realized he'd just jumped from an unusually high second story and was about to hit the floor. That thought had her frozen to the spot, at least until he actually hit the carpet and hardwood with a resounding thud. His shoulders quivered once and then he was still.\n\n\"Victor!\" She forced her feet to move and ran over to kneel beside him. She reached out with trembling fingers to touch his shoulder. When she was barely an inch away from his skin, his hand shot out, and he grasped her wrist tightly. \"What-?\"\n\nHe pulled her under him so that she was face down on the carpet. \"Looks like I caught a little frail.\"\n\n\"That was not fair! I thought you were hurt!\" She struggled, but he had her wrists pinned to either side of her body.\n\nHe laughed. \"Who the fuck said I had to be fair?\" He opened her legs wide with his thighs. Without thinking, Kelly pulled her knees up under herself, her tenderest places presented to him. \n\nShe felt him shift behind her. He brought her hands together in the small of her back, then pulled the shirt out of the way. As hard as she tried to relax, Kelly couldn't banish the tension in her body. \"Wait, please-\"\n\n\"Wait? You weren't askin' me to wait a minute ago. Were you?\" A knuckle moved roughly through her folds, she shifted forward.\n\n\"When you hit the floor like that-\"\n\n\"Should fuckin' know by now that I always land on my feet.\" The knuckle pressed into her clenching entrance. \"Better relax that frail.\" He leaned over her, his voice laced with growling threat. \"'Cause if you don't I'm gonna tear you open.\"\n\nShe whimpered softly, but the nervous tension increased. The rough side of his knuckle moved down to the protruding bundle of nerve endings. If his touch had been gentle or teasing, it wouldn't have worked as thoroughly as it did to put her back into that needy, achy state. The demanding aggression of it, and the feeling of his claws biting into her wrists had her moaning and arching back against him.\n\nHe pressed the broad head of his erection against her hungry entrance. \"Should make you wait now.\" \n\n\"No, please, don't stop.\" She pressed back against him.\n\nHe took his hand away and drew his claws over her thigh, just hard enough to make blood well up to the surface. \"Say it again, frail.\" \n\n\"Please don't stop, I need to feel you inside me.\" She pressed back again.\n\n\"Why?\" Claws grazed her thigh again, crossing the stinging lines with others. \n\nKelly whimpered. \"Because I'm yours.\"\n\nFor what seemed like an eternity, he didn't move at all. When he finally entered her, his passion bordered on brutality. Kelly screamed against the carpet, her muscles clenching around him. Once he was completely sheathed inside her, he leaned forward over her back. \"Get used to it, frail; 'cause I'm gonna fuck you raw today.\"\n\n*~*~*~*~*~*\n\nKelly lay against Victor's chest, her legs straddling his hips. The more still she was, the less she hurt, so she tried to stay very still.\n\nTrue to his word, the hall had been just the beginning. By three-thirty she'd given up trying to get dressed and kept his shirt and a blanket wrapped around herself when she wasn't snuggled up against him. After dinner, they'd migrated back to bed. Well, as soon as she'd finished the dishes, he'd picked her up and carried her back to bed. The thought of resisting hadn't even crossed her mind though.\n\nAs the day had gone on she'd gotten progressively more sore, but he'd gotten progressively more careful with her, or at least as careful as he knew how to be. The last time was the only time she'd actually protested. He'd taken his time, but she still ended up in tears halfway through. After, he'd retreated from her to the other side of the bed, almost as if he was preparing himself for rejection. She'd followed, settling against his chest when he offered her the chance. He hadn't said a word about leaving all day, and neither had she, even though every time he moved she was afraid it was to get ready to go.\n\n\"You ever gonna fall asleep?\" The rough edges of his voice was in sharp contrast to the careful way he stroked her back and thighs.\n\nKelly glanced over at the clock. It was nearly midnight. She sighed, trying to lock away all the details of this moment. She wasn't sure when she would need to retreat into it. \"No. Not until after you go.\"\n\nHis fingers twined in her hair, but he didn't move her head. \"I know you wanna ask.\" His voice was softer, more subdued.\n\nShe had been wanting to ask all day, but he'd been in such a good mood, even accepting her affection a few times, that she hadn't wanted to jinx it. \n\n\"Ask.\" His voice rumbled close to her ear.\n\nKelly opened her mouth a couple of times, unsure how to phrase it. \"What you do is illegal, isn't it?\"\n\nHis hand paused on her thigh; he turned her head so that she was looking up at him. \"What the fuck makes you say that?\" The guarded tone was back, but there was something else under it. Something she couldn't describe.\n\n\"It's just-\" She closed her eyes and took a deep breath. \"I've tried to picture you doing a thousand things.\" She looked up into his eyes again. \"I know you're brilliant, I know you could do any of them, but none of them fit. You never talk about a specific job, except for the time you spent in the military. Beyond that....beyond that I don't know. Maybe it's a stupid idea.\" She tried to look away again, but he held her head in place.\n\n\"Legal and illegal ain't as simple as you'd think. A lot of the time, what I do is set in motion by people who make the fuckin' laws.\"\n\nKelly looked up at him. \"I don't-\"\n\n\"That's all you need to know.\" His hand tightened in her hair and then relaxed. \n\nKelly put her head down against his chest again, listening to his heartbeat. Violence came as easily to him as breathing. She knew he'd killed Dawes. Now she was certain that he'd killed the detective as well. He didn't really have to tell her any more about what he was going to do while he was gone. Maybe that wasn't the most important question anyway.\n\n\"Get some rest, frail.\" Claws traveled carefully down her spine, then back up again. She arched a little closer.\n\n\"No.\"\n\nHe snorted a little. \"Fuckin' contrary little thing, aren't you?\"\n\nKelly looked up at him and smiled a little. \"You expect any less?\"\n\nFor a minute she thought she'd sparked his anger, then she saw the corner of his mouth twitch in a little grin. \"Too fuckin' much.\" He twisted his fingers in her hair and brought his mouth down firmly on hers. Kelly moaned into his mouth, her tongue lightly teasing his. He nipped her lip hard enough to draw blood and then moved away from her, another little twitch of a smile on his lips.\n\n\"Get your ass up. I gotta get ready.\"\n\nKelly moved off of him carefully, clenching her jaw to hide the pain that radiated from her pelvis. She dozed under the covers while he dressed, figuring he would wake her before he actually left. She wasn't far wrong. Something heavy hit the bed next to her.\n\n\"Thought you weren't gonna sleep.\" He was dressed and wearing that long coat again. Just the sight of it sent shivers down her spine. There was a tension around him too.\n\nKelly held the sheet over her breasts and sat up. \"Just resting my eyes.\"\n\n\"Uh-huh. Open the envelope.\" He sat down, watching her.\n\nKelly picked up the thick envelope and opened it. She nearly dropped it again when she saw the amount of money inside. \"Victor, I don't need-\"\n\n\"Bullshit. You'll need groceries at least. If you want to go shopping, go. If you want something this don't cover, tell Conlon. He'll make sure that you get it.\" Patrick Conlon was her 'babysitter'. He seemed nice enough, and he'd spent most of dinner the other night trying to put her at ease. The idea of being alone with him made her nervous. She trusted Victor and his judgment, and she had to keep reminding herself of that fact.\n\n\"Will he get here in the morning?\" Kelly set the envelope on the nightstand.\n\n\"No, he'll be here before I leave. Now get over here and tell me you remember the fucking rules.\" \n\nKelly moved into his lap and repeated what he told her to repeat while nuzzling the side of his neck.\n\n*~*~*~*~*~*\n\nHis business attracted two general types; the predators and the protectors. In the beginning, most people tried both because they took what they could get. Hell, he'd even tried both but found taking a good shit to be more interesting than waiting for something to happen to someone he didn't give a flying fuck about. He figured it was a basic matter of temperament. Once a person found their place on one side, they didn't really have much to do with the other. That's one of the reasons finding Patrick Conlon had been so fucking hard.\n\nAside from the obvious skills to keep the frail safe, he'd wanted someone she could be relatively comfortable with, and someone who didn't know all of his reputation. In the past, if a frail survived until he was sick of her, she became community property. This frail wasn't on that level, and he didn't want to deal with anyone who had the idea in his head that she was available.\n\nConlon and one other seemed to fit. Conlon was better at the job than the other one. Creed was pacing downstairs. He could hear the frail turn on the shower. The closer he got to walking out and leaving, the more agitated he got. Conlon had the right answers on the phone and at the bar. He had parents in the CoH so he had some idea of what the organization as a whole was capable of. The other night at dinner, Creed's nose told him that Conlon had found the frail attractive but nothing beyond that. He still wasn't thrilled about the arrangement, but he couldn't leave her alone and he sure as fuck couldn't take her with him.\n\nA soft tone sounded, indicating that someone was at the gate. He hit the intercom button. \"Talk.\"\n\n\"It's Conlon.\"\n\n\"Enter the code.\"\n\nAfter a moment, a green light flashed. He pushed a button and collected his bags. He watched an old brown pick-up approaching slowly. There was only one person visible in the cab.\n\nHe opened the door to the broad-shouldered, sandy-haired mutant. Course, anybody who didn't know that Conlon was a mutant wouldn't have guessed without a demonstration.\n\n\"Mr. Creed.\"\n\n\"Keys?\"\n\nConlon handed over the keys to the brown truck, he handed Conlon the keys to the Escalade and advanced on the smaller man. Conlon stood his ground, but he could smell the anxiety. \"You touch her, or you let anybody else hurt her in any way, I'll make sure you suffer more than anybody else who's ever crossed me and I'll enjoy every fucking minute of it.\"\n\nWithout waiting for a response, Creed turned walked out the door. There was nothing more to say, he'd said it all already. The sooner he got the fuck out of there the sooner he'd finish and get back.\n\n*~*~*~*~*~*\n\nThe hot shower, some sleep and some ibuprofen had eased the worst of Kelly's ache, but she lingered in the bedroom for awhile after getting dressed. With Victor gone, there was some spark of life missing from the house. That made it feel almost unfamiliar. At around nine-thirty the room and bathroom were straightened and she was hungry. She went downstairs and stared into the fridge, trying to decide if she wanted to cook something or if fruit and cereal was good enough.\n\n\"Morning.\"\n\nKelly jumped, not at all expecting such a cheery greeting. She looked at the man standing in the doorway.\n\n\"I'm sorry; I didn't mean to startle you.\" Morning cheerfulness turned to a look of concern. \"I thought Mr. Creed let you know I'd be here.\"\n\nKelly took a deep breath and cursed herself for being so jumpy. \"He did. Everything was so quiet though, I kind of forgot.\" She smiled a little.\n\n\"I didn't want to disturb you.\"\n\n\"Have you eaten yet?\"\n\n\"No, but you don't have to go to any trouble for me.\"\n\n\"It's no trouble. If I cook for you I'll cook for myself. Probably better than living on fruit and cereal for two weeks.\" Just saying 'two weeks' made her heart constrict.\n\n\"Okay. Whatever you're having.\" He sat down at the table. \n\n\"Eggs and bacon?\"\n\n\"Sounds good.\" He smiled. It was an expression that set his whole face in motion, but revealed very little.\n\nShe got out the food and dishes. \"You'll have to tell me how much you want. I'm used to cooking for Victor.\"\n\n\"Two eggs, couple of strips of bacon. He eats a lot more than that?\"\n\nKelly smiled a little. \"You saw him the other night at the restaurant.\"\n\nShe prepared the food quietly, always aware of Conlon's presence. It wasn't necessarily uncomfortable, just different. She set the plates of food on the table and sat down.\n\n\"How is this supposed to work?\" She asked.\n\nThe fork paused halfway to his mouth. \"I'm sorry?\"\n\n\"This. Do you follow me around the house? Do you hide in a corner somewhere? Victor told me I'd be safe and that you'd make sure I got to anywhere I wanted to go, but that's about all.\"\n\n\"Well, that depends on you. If you'd rather not see me until you need something, we can arrange that. If you don't mind me being present on a friendly basis, then I can do that too. No following you from room to room though, I promise.\" Another wide - but blank -- smile. \n\nKelly knew hardly ever seeing someone she didn't trust was probably not a good idea. She smiled a little. \"Make yourself comfortable in the house; it'll be nice not to feel so alone while Victor's gone.\"\n\n*~*~*~*~*~*\n\nCreed had been gone six days. It felt like a lot longer in some ways. In others it was working out better than he could have hoped for. He'd never had anything to keep him in one place for very long, so being constantly on the move was no big deal. He'd take jobs as they came and grab a few days R and R when he wanted it. Now, he didn't want to leave the frail alone all the time, but it felt so fucking good to feel his claws slice through flesh and muscle again that the first time the screams and the scent of thick blood mixed with fear hit him, he'd damn near cum in his pants. He fucking loved the rush, probably always would, but he noticed that there was something hollow about it too. \n\nThe first and third had been clean kills. \n\nThe second one'd had some special circumstances. Nothing too fancy, just a general 'scatter the pieces around' kind of special. Made more work for him, but that's why he charged extra for it. Got fucking boring after awhile though.\n\nThe fourth was proving to be interesting. Johnny LeSelva, small time hood with ambition who'd stepped on the wrong toes, and the owner of those toes had deep pockets and a love of revenge. Fucking stupid, but he had to admire the kid for trying. Course now the kid was laying in a sticky puddle of his own blood and puke on the cement floor of an abandoned warehouse begging for whatever miserable life he had left. \n\nHe squatted and looked at the pulpy face of his captive. \"You must've really pissed somebody off, Johnny.\"\n\n\"Please, I don't know-\"\n\n\"You don't appreciate any of this, do you?\" He pushed on the kid's busted nose, dislocating the break in it even further and drawing a fresh flow of blood.",
        "\"Please, let me-\"\n\n\"This don't come cheap you know. So much of my time and effort on a little punk asshole like you is gonna set somebody back some serious cash.\" His tone was conversational. He grasped Johnny's leg and snapped his knee so far out of joint that he felt the ligaments rip. For a moment there was nothing to shocked silence, then the kid screamed loud enough to practically make the windows rattle. \n\n\"Kill me, please. Just kill me!\" The tone was desperate, and not wholly unexpected.\n\n\"Can't do that Johnny. Wouldn't be fair to whoever you pissed off. Besides, I love my work.\" His watch beeped and he looked down at the time, a minute later, he felt his cell phone start to vibrate. Every day he checked in with Conlon. Every few days he talked to the frail. Those were the toughest conversations. He still had no fucking idea what to say to her. He let the call to voicemail for the moment. \"You got somebody waiting at home for you?\"\n\nJohnny just cried and shifted around, trying to ease the pain in his ruined knee.\n\n\"Don't want to tell me? Well, I don't guess it matters either way. I do and you're gonna be fucking quiet while I make sure what's mine is still alright.\" He stood up and used his foot to push Johnny over onto his back. Then, he put his foot on the kid's throat and applied just enough pressure to keep him from making a sound. He dialed. It didn't even ring once before she answered.\n\n\"Hello?\"\n\nHe could hear the anxiety in her voice. \"You alright, frail?\" Johnny grabbed weakly at Creed's ankle, he ignored it. The kid's hands were so broken up they weren't useful anymore anyway.\n\n\"I'm okay; I just wasn't expecting to get your voicemail.\" \n\nHe heard her climbing the stairs. \"Yeah, I had my hands full when the phone rang.\" He grinned down at Johnny. \"You doing okay with Conlon?\" He heard a door close. She was probably in the bedroom.\n\n\"Yes. He took me grocery shopping today. That went fine.\"\n\nThere was something wrong, he could hear it. \"Great, you wanna try telling me the truth now?\" Johnny's lips were starting to turn blue. He eased the pressure just enough to let the kid get a short breath.\n\nShe sighed. \"He hasn't done anything wrong, or said anything strange. He was almost as watchful as you are when we were in the store today. I guess I just have a really hard time trusting people. I trust your judgment, though.\"\n\nThat sounded like something she'd repeated to herself over and over. \"Anything weird, you call me and keep calling until I fucking pick up. Call you again in a few days.\" \n\n\"Okay.\" She took a deep breath. \"I miss you.\"\n\nHe couldn't keep the little smile off of his face. \"Sentimental shit.\" He ended the call and turned his attention back to Johnny. The kid would last for a few more hours anyway.\n\n*~*~*~*~*~*\n\nCreed lay awake in an apartment in Columbus, Ohio. He'd showered off Johnny's blood, brains and various other fluids, but he was still too keyed up to sleep. He had one more thing to take care of before he went back to the frail, and that thing was probably the most important one on the agenda. \n\nThe kills had brought in money and given him some personal satisfaction, but they didn't do shit toward getting Stan out of the picture. Stan'd be a little more insulated now, but that was nothing he couldn't handle. The brother and unstable mother were a goddamn complication. Mom could go fuck herself for all he cared. He didn't really care about the kid either, but the frail did and she was smart enough to recognize that he wasn't about to live with a mutant-hating brat.\n\nThe grandparents were probably the best idea, but letting someone he didn't know or trust get close to his frail wasn't an idea he relished, family or not. He'd been surprised but almost glad when she couldn't find them. At first, he figured she just fucked it up. \n\nNobody tells you how to search for someone, but she did a damn thorough job for someone who didn't know what the hell they were doing. She'd started in known locations, worked her way out to where they had relatives, then to places they'd vacationed and talked about a lot, then to places people liked to retire to. Perfectly logical, but she found nothing. So did he when he did a basic search. That had struck him a pretty fucking weird. He could find most anybody who wasn't actively trying to hide. It'd taken Link close to three hours to track them down. It went from being weird to fucking suspicious.\n\nOnly good thing about it was that he got to check them out first. It was a little after six in the evening and he wasn't gonna fucking sleep until he made the call. He sat up and dialed the number. It rang twice before a man answered.\n\n\"Demmer.\"\n\n\"Josef Demmer?\" The familiarity struck him again, harder this time.\n\n\"You're calling me. Don't you know?\" Guarded suspicion. He wouldn't have expected less from a man who took such care hiding.\n\n\"This is Victor Creed-\"\n\n\"Victor Creed?\" There was a little chuckle at the other end. \"Well ain't that a blast from the past.\"\n\nThe realization hit hard enough to make his fucking teeth rattle. \"Joe Demmer.\" \n\n\"The same. This a social call?\" "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "mutant",
        "chase",
        "rough sex",
        "sex from behind",
        "painful sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-10"
}