{
    "title": "A Touch of Death Ch. 13",
    "pages": [
        "Any hopes and plans I'd had for the next morning didn't survive once someone started pounding on the front door. I shot straight up out of a deep sleep and fell off the bed. I lay on the floor, blinking at the ceiling in confusion until Ty slipped out of bed much more smoothly than I had and helped me up.\n\n\"Have I mentioned how graceful you are?\" he asked with a sly grin.\n\n\"I'm not human before coffee,\" I protested weakly. \"Who the hell even knows where we are?\"\n\n\"I left word at the hospital.\" He peered out the peep hole. \"I think it's your brother.\"\n\nI mentally kissed my plans for morning sex goodbye. Say what you like about Frank, he was constant. He always seemed to turn up when I had intimate plans. Except, of course, when it had been Calvin. The fates hated me.\n\nFrank rushed in the moment Ty opened the door. My brother didn't walk. He wasn't patient enough for something that slow. \"I just came from the hospital but they wouldn't let me in. Are you okay?\" Without waiting for an answer, he crushed me to him in a powerful hug.\n\n\"I'm fine,\" I protested. \"But I can't breathe like this.\"\n\nTy closed the door and nodded at Frank. \"Candy, I picked up some tooth brushes and stuff. I left them on the bathroom counter. You might want to straighten up a little.\"\n\nFrank seemed to be surprised to see Ty. He frowned and his eyes darted between the two of us, his eyebrows slowly rising. \"Oh! Ah, I had no idea. Do I know you?\" he asked Ty. \"Candy seems to have forgotten to mention you.\"\n\n\"Don't worry. I'm just a guy she picked up last night.\"\n\nFrank's mouth dropped open and I couldn't stop a bark of laughter from escaping my lips. \"That's right, Frank. He was just leaving.\" I lifted my chin at Ty. \"The tip is on the nightstand. Leave a card and maybe I'll call you again.\"\n\nI turned my back to their flabbergasted faces and closed the bathroom door with what dignity I could manage. One look in the mirror told me what I already suspected. I looked very rumpled. My clothes were half askew and my hair would frighten the Bride of Frankenstein. I might not have had wild monkey sex this morning, but I sure looked like I had.\n\nA quick, hot shower made me feel more human. A few minutes of hair care made me look more human. I eyed the wrinkled clothes. I needed something clean I could go out in, but they would have to do for the moment.\n\nTy and Frank were sitting at the table when I came out.\n\n\"Are you still here?\" I asked Ty.\n\n\"I don't think you've gotten your money's worth, yet,\" he smirked. \"Besides, Frank was just telling me the most interesting story about your senior homecoming.\"\n\nI scowled at Frank. \"Talk and die, string bean. You've been warned.\" I pulled an empty bag from inside the trashcan and put my filthy clothes inside it. \"I need some clean clothes before I go to the hospital.\"\n\nThey rose from their seats. Ty put his clothes with mine, minus his wallet, keys, and gun. Those he slipped into my purse. They barely fit with all my junk.\n\n\"We can stop by someplace on the way and get something,\" Ty said. \"Then we can get some food. I feel like something a bit more substantial than the buffet here.\"\n\n\"I'll follow you, then,\" Frank said. \"I want to know exactly what happened before we get to the hospital.\"\n\n* * * * *\n\nI picked up a cheap pair of jeans and a dark blouse. Ty found black jeans and a tight, dark blue tee shirt that made me regret Frank's early arrival all over again.\n\nWe followed Frank to one of those pancake places. The waitress took our order and left us with steaming cups of coffee.\n\n\"Now, tell me everything,\" Frank said, eying me over the rim of his cup. \"And make it good.\"\n\nI sighed, glanced at Ty, and told him the public version. Judging from the redness of his neck, his blood pressure was slowly rising as I spoke. By the time I was done, he was brick red.\n\n\"Are you insane?\" he asked when I finished. \"You have absolutely no business getting involved in something like this. You could've been killed. Mom could've been killed. He waved his cup around, sloshing coffee on the table. \"Hell, you could've gotten half-a-dozen people killed! What were you thinking?\"\n\nI shrugged while he patted the coffee off the table. What could I say? He was right. \"I did what I thought I needed to. I'm sorry this happened. I should've seen that, so you're absolutely right.\"\n\nThat seemed to throw him off stride. He frowned at me. \"What did you say?\" He turned to Ty. \"Did I just hear her tell me I'm right about something?\"\n\nI gave him a flat stare. \"Don't push your luck, smart ass. If I knew what was going to happen, I'd have done things differently. At least with everything about the murders and gold out in the open he has no more reason to bother us.\"\n\nFrank raised an eyebrow. \"Really? What about that old standby, revenge?\"\n\n\"Sticking around at this point would be crazy,\" I said.\n\n\"So is killing and kidnapping people,\" he shot back.\n\n\"This is all spilled milk,\" Ty said as the waitress arrived with our food. \"Rather than looking back, we need to be looking forward. How can we minimize the chances of more bad things happening?\"\n\n\"Lock Candy in the storeroom at the lodge?\" Frank asked.\n\n\"Very funny.\" I dug into my food and discovered I was starving. \"I'm not worried about myself, but I'm worried about Mom. She needs to stay somewhere until the police track Stanton down.\"\n\n\"I disagree,\" Ty said, pointing his fork at me. \"You're more at risk than your mother. By all means, have Frank stash her somewhere, but you're not going anywhere without me. There is no way that nut is getting another shot at you without me there.\"\n\n\"Weren't you right there with her during all of this?\" Frank asked.\n\n\"That doesn't count,\" Ty said, taking a big bite of his pancakes. \"I didn't realize just how dangerous she was back then. Now I know to watch out.\"\n\n\"I am not a trouble magnet,\" I protested. Neither of them even bothered to argue with me, like it should've been self-evident.\n\n\"I'll run herd on Mom,\" Frank said, as if I'd never spoken. \"I know some out of the way places that we can stay for a few days.\"\n\n\"She's not leaving Josh,\" I said with a shake of my head. \"No way. You'll need to work inside the hospital.\"\n\nFrank frowned. \"Josh? I have no idea what you're talking about.\"\n\nI mentally bit my tongue. Dammit.\n\n\"Josh Cavanaugh,\" Ty said while I dithered and searched for a good answer to Frank's question. \"Your Mom's boy toy.\"\n\nI'm not sure who looked at him more aghast, me or Frank. \"Ty! I can't believe you just did that!\"\n\n\"Boy toy?\" Frank asked. \"Someone better trot out an explanation right now.\"\n\nTy smiled at me silently, the rat.\n\n\"Fine,\" I huffed. \"Mom's been seeing someone. You know, dating. I thought I mentioned him when I told you about the kidnapping. He was with Mom at the mine and got shot. He's in intensive care. She won't want to leave the hospital.\"\n\n\"You somehow left that out,\" Frank said dryly. \"An oversight, I'm sure. Well, if he took a bullet for Mom, he can't be too bad.\"\n\n\"He seems like a good guy,\" I agreed. \"I didn't want to tell you about him until she was more comfortable in the relationship. Besides, I only found out about them in the last couple of days.\"\n\nFrank looked at me warily. \"Boy toy. Forty-five, forty?\"\n\nI let my breath out in a slow stream. \"Ah, well, no. He's a bit younger than that. Twenty six.\"\n\nFrank dropped his fork onto his plate with a clatter, sending pancake and syrup flying onto his shirt. \"Jesus! He's younger than me! Is she crazy?\"\n\nI leveled a finger at him and glared. \"Frank Alan Kane, you will not make a big deal out of this. You can rant at me all you want. You can go kick cans and throw rocks. What you can't do is have a cow in front of Mom. If you make her feel self-conscious and ruin this, she may go back inside her shell. Do you understand me?\"\n\nFrank twisted his mouth sullenly. \"That's not playing fair.\"\n\n\"What's more important to you? Mom or your self-righteous anger?\"\n\nHe started trying to clean his shirt with a napkin, a chore that looked to be doomed to failure. \"Okay. I'm not happy about this and I'm not making any promises but I will keep my opinion to myself for now.\"\n\nI let out the breath I hadn't realized I was holding. \"Thank you.\"\n\nTy's cell phone rang and he handed it to me after answering it. \n\nWho would be calling me on his cell? The hospital? My heart sped up in panic. \"Hello?\"\n\n\"Candy? This is Ginger Armstrong. I just heard about your mom. Is she okay? Are you?\"\n\n\"You scared me to death! I thought it was the hospital calling. We're both fine, but Mom's boyfriend is in intensive care.\"\n\n\"You wouldn't believe how hard it was to get his number. I had to track down Damien Manchester to get it. I should've known this was too dangerous. I want you to stop.\"\n\nI laughed without humor. \"It's a little late to back out now. I'm committed. Look, my brother is here now and he'll go sit with Mom. I need to come over and tell you what I've found out.\"\n\n\"Is it safe?\"\n\n\"The police are on the alert now. I hope that means Stanton is holed up or running.\"\n\n\"Stanton?\" Her voice rose an octave. \"Is it him? He killed my brother?\"\n\n\"I'll tell you in person. Say half an hour?\"\n\n\"Meet me at Steven's place.\" She rattled off an address in an affluent neighborhood on the lake shore. \"I have some stuff to show you, but nothing like what you found out. Be careful.\"\n\nI closed the cell and handed it back to Ty. \"I need to go see Ginger Armstrong. She deserves to know what we found out. Why don't you go to the hospital with Frank and stay with Mom?\"\n\nTy smiled and shook his head. \"If you think I'm letting you out of my sight, you're crazy. I'm your shadow until this is done.\"\n\n\"Both my Mom and my sister get boyfriends and I can't find a girlfriend to save my life,\" Frank sighed. \"There's a police guard at the hospital. I think we should all stay together and go to the hospital after Candy sees her friend.\"\n\n\"Then finish eating,\" Ty commanded. \"You never know when you need every bit of energy around Candy.\"\n\n\"Smart ass,\" I grouched. My annoyance didn't keep me from cleaning my plate. After all, you never know.\n\n* * * * *\n\nSteven Armstrong's house was even more of a mansion than Edward Stanton's place. Three stories tall, made of carved stone and glass, it was elegant instead of gaudy. Classy. It didn't pretend to be the home of a wealthy man, it just was.\n\nWe pulled into the driveway and walked up to the dark, polished front door. Ginger answered on the first knock. She must've been camped out next to the front door.\n\nShe yanked me into an unexpected embrace. \"This was such a bad idea. I wish I'd never asked you to do this.\"\n\nHer fervor surprised me, but I hugged her back. \"If wishes were horses, we'd all be hip deep in horse crap. I'll be fine.\" I stepped back. \"You know Tyrone Walker. Let me introduce my brother Frank. Frank, this is Ginger Armstrong.\"\n\nFrank shook her hand, holding on for just a moment longer than was strictly proper. He looked like someone had hit him over the head with a club. \"I... My pleasure to meet you.\"\n\nGinger's eyes twinkled but she didn't otherwise show she noticed his reaction. \"Why don't the three of you come in and join us? I have some tea out on the patio.\"\n\n\"Us?\" Ty asked as we stepped inside.\n\nThe foyer was dominated by dark, polished wood and a marble floor. Unlike the inside of the Stanton home, this was subdued and rich in a way that didn't offend the senses. The staircase leading to the upper stories was solid oak, curved and smooth. It made me want to run my fingers along the rail. Other antique pieces of furniture were scattered about, not dominating the room but accenting it.\n\nGinger pulled me by the hand past the wonderful staircase and into a hall. Other rooms filled with dark leather seats and more wooden furniture passed by to either side.\n\n\"Damien Manchester is here. He insisted on coming over after I called him looking for you.\" She shook her head. \"He told me some of what had happened and I freaked.\"\n\nI shrugged. \"I need to fill him in anyway. Steven was his partner, so the two of you deserve to know the whole truth. This is as good a time as any to fill you in on what I've found out.\"\n\nThe hall opened into a huge kitchen filled with stainless steel appliances and vast marble counter tops. Like just about any woman on the face of the planet, I fell instantly in love with it. It was only with great reluctance that I let Ginger drag me out onto the patio.\n\nThe flagstone covered area directly behind the house was surrounded by a gleaming wood railing on all three of the open sides and by thick shrubs to both sides, restricting the view to the lake. It stretched off to the distant mountains in placid splendor.\n\nDamien rose from the table he was sitting at as we came out the back door. \"I'm glad to see you in one piece, Candy. Ty.\" He raised an eyebrow at Frank and I repeated the introductions. Ginger got frosted glasses of tea for us from the kitchen and we sat down.\n\nHopefully for the last time, I ran through the public story again. Ginger looked shocked at how my mother had been treated. Damien and Frank looked at me with barely controlled fury. Ty's eyes narrowed but his controlled face didn't let through what he was thinking. I hoped I hadn't slipped up somewhere.\n\nDamien took a deep swallow of his tea before reaching into his jacket. \"That matches up with something I found this morning.\" He pulled an unmarked envelope from an inside pocket and handed it to me. \"I found this in Steven's office on the Aztec Warrior. It was stuffed under some papers in his desk.\"\n\nI pulled the single folded page of notebook paper out and shook it open. It was a brief, handwritten note. It wasn't addressed to anyone or signed either.\n\nRaising that ship is dangerous. Accidents happen. Don't make one happen to you. A permanent one. This is your last warning. Cancel your plans publicly tonight or suffer the consequences.\n\n\"Bets that it ends up matching the handwriting of one of our bad guys?\" Damien asked, almost challenging us to deny the possibility.\n\nIt did look like the notes of Jake's that I'd read, but I was no expert. It might be someone else. That was for the police to decide. If it matched, then that was another nail in their collective coffin. If not, it was a lead to the real killer.\n\nI looked up at Damien as a thought hit me. \"Crap. We shouldn't have touched this. There might have been fingerprints or DNA on it.\" I quickly slipped it back into the envelope as he grimaced.\n\n\"I didn't think of that,\" he admitted. \"Still, what kind of moron wouldn't use gloves or something?\"\n\n\"The kind that sends a hand-written note?\" Ty interjected dryly. \"Still, they can probably exclude the two of you just like they would have to exclude Steven. That will leave them with something.\" He smiled at me. \"Not to say that will save Candy from another ass chewing from Deputy Cooper.\"\n\nMy eyes involuntarily rolled up into my head. \"Please. Like he needs an excuse.\"\n\nGinger stood up. \"I found something, too. It isn't much and it seems unneeded, but I should show you.\"\n\nWe followed her into the living room. I set my glass onto one of the table protectors while she retrieved a small jewelry box from the end table.\n\n\"This looked out of place, with the ladies jewelry,\" Ginger said. \"These and the clothes prove there was a woman, but that doesn't seem to matter now.\"\n\nShe handed me the box and I opened the lid. It contained a few strands of gold and something silver under the tangle.\n\nI was about to spread them on the coffee table when movement at the door caught my attention. Edward Stanton stepped in from the hall, a sleek, black pistol covering us all.\n\n\"Hands out where I can see them,\" he snarled.\n\nI dropped the jewelry case and gold and silver scattered to the floor at my feet. Oh, crap! How the hell did he find us?\n\nMy clatter was not the only noise. Ginger dropped her glass of tea and it shattered, spilling tea all over the end table. For their part, the three men with us raised their hands as they were told.\n\n\"You can't get away with this anymore,\" I said. My voice didn't sound nearly as shaky as I felt. \"The police are on to you.\"\n\n\"And whose fault is that,\" he growled. \"Jesus, you're like the terminator. Nothing stops you.\"\n\n\"I'd have gotten away with this if it hadn't been for those meddling kids,\" Ty mocked from his seat.\n\nThe gun swiveled to point directly at him. \"Don't push me smart ass. This isn't Scooby Do and I owe you bastards. One way or another, I'm ending this right here, right now.\"\n\nThe expensive lamp next to Damien crashed to the floor in the sudden silence, causing Stanton to jerk his pistol to cover him. Ty exploded from his seat the moment the gun was off him and suddenly everyone was moving and everything was happening at once.\n\nDamien heaved himself out of his chair and to the side as Stanton's gun went off like a canon. Ginger shrieked as Frank leapt on top of her, knocking the chair over and shielding her with his body. I snatched my tea and hurled the glass at him.\n\nI missed, of course.\n\nStanton was already throwing himself to the side and shooting at us as fast as he could pull the trigger. The window behind me shattered and I dropped for the floor. Ty opened fire before I hit.\n\nI huddled on the floor, waiting for the sharp pain of a gunshot but silence had descended on the room. Well, there might have been some noise but my ears were ringing so I might be forgiven for missing it. I peeked up to see what was happening.\n\nStanton lay twisted on the floor, his face covered in blood. Ty covered him with his pistol as Damien took our attacker's pistol and checked his neck. Damien shook his head and stood up.\n\nTy set his pistol on the coffee table and helped me up. The room was a shambles. Broken glass and splintered furniture was everywhere. The sharp smell of burnt gunpowder hung in the air along with another scent. A metallic tang like iron. Blood.\n\n\"I need some help over here,\" Ginger said. She knelt beside Frank, who was sitting on the floor with his back against her overturned chair. He was holding his left forearm tightly and grimacing in pain. Blood dripped down his arm in spite of the pressure on his arm.\n\nDamien pulled out his cell and started dialing while I ran in search of a towel. I found plenty in the kitchen and rushed back to my brother's side.\n\nThey'd moved him to the couch and Ty was providing the pressure. Ginger hovered beside them, distraught. Ty took the towel from me and wrapped it around Frank's arm. The gunshot was an ugly wound, bleeding freely.\n\n\"It's not as bad as it looks,\" Ty said. \"It's not arterial and as long as we keep pressure on it he'll be fine.\"\n\n\"He was going to shoot me,\" Ginger said to Frank. \"He would have killed me if you hadn't got between us.\"\n\n\"It seemed like the right thing to do,\" Frank said with an expression that was half grimace and half smile. \"I was moving before I thought about it. Even getting shot, I'd do it again.\"\n\nGinger's face lit up with a smile. I didn't think my brother was going to be worried about lacking a girlfriend much longer.\n\n\"EMS is on the way,\" Damien said, snapping his phone closed. \"Is everyone else okay?\"\n\nI nodded mutely. I couldn't believe how fast things had gone to hell. Now another man was dead. Would this nightmare never end? At least all this bloodshed was at an end.\n\nWearily, I sat on the floor and grabbed the jewelry that had tumbled to the now-ruined white carpet. I was sure that blood wouldn't come out easily.\n\nMy hand tingled and I had a moment to curse myself for not thinking. I plunged into a vision right in front of God and everyone.\n\nMy host, a man by his hand, was sitting on a boat that bobbed gently in the middle of the lake. The mountains excluded every other lake it might have been. His hand was tanned, the nails trimmed neatly.",
        "In his hand he held a heart-shaped friendship pendant with two silver chains. He drew a wavy line in blue ink across it and snapped it in two. He looked up and handed one of them to the woman sitting across from him.\n\nIt was Elsa Manchester. A nude Elsa, and not at all pale. Her skin glowed with health, or perhaps arousal. She looked like a woman that had just had a good tumble in the sheets.\n\n\"When you wonder if you can make it,\" my host said, \"hold this and remember our love for each other.\" The voice was familiar. I'd heard it at the start of this adventure. Steven Armstrong, the murder victim.\n\nElsa's eyes lit up like Ginger's had a minute earlier. \"I love you.\"\n\nThe vision dissolved and everyone was staring at me. Including, the cuckolded husband, Damien Manchester. Who was staring at me incredulously, Edward Stanton's pistol still in his hand.\n\n\"Well, hell,\" he said. His hand snapped up and the pistol smashed against Ty's head. Ty went down bonelessly, knocked right out.\n\nI guess that settled the question of who the killer was. No wonder Elsa had looked like death warmed over. Her lover had just died. I grabbed Ty's pistol from the table and turned it on Damien.\n\n\"Drop it,\" I said. \"Don't make me shoot you.\"\n\nHe smiled and stepped back, aligning his pistol with my head. \"I don't know how you knew that was Elsa's.\" \n\nGreat. I must've called out her name. He already knew this was Steven's so I'd just let the cat out of the bag.\n\n\"You've never shot a gun before, remember?\" Damien continued. \"You told me that yourself. Ty put that back on safe before he set it down. Do you really think you can figure it out before I shoot you? Put it down.\"\n\n\"So you can do what?\" I asked, not lowering my wavering aim. \"I don't see you letting us go.\"\n\n\"I don't understand,\" Ginger said and she picked up where Ty had been holding down the makeshift bandage.\n\n\"I just can't understand you,\" Damien said ruefully, ignoring her. \"You just wouldn't stop. Even after I tracked down Jake Wallace and took him out of the picture. What is with you? How the hell did you know?\"\n\n\"You made him write that note, didn't you? To cover your own tracks. Steven was sleeping with your wife and you killed him. Then you needed a scapegoat like Jake.\"\n\nDamien shook his head. \"Jake and Edward were in their own scheme. I had nothing to do with it and I didn't know anything about the gold until you found it. Steven... Yes. It doesn't matter now. I found out and I confronted him.\"\n\nTy moaned and twitched, but I didn't look away from Damien.\n\n\"On the dock,\" I said. \"You smashed his head into the piling and killed him. Does Elsa know you killed her lover?\"\n\n\"I didn't go out there to kill him,\" Damien said, his voice going flat. \"It just happened so fast. I didn't mean to kill him but he took what was mine. She thinks it was an accident. Now she'll think Jake Wallace did it. One way or the other, she'll get over it.\"\n\n\"Put the gun down,\" Frank said. \"You don't have to keep killing. It's over.\"\n\n\"Shut up,\" Damien said, his voice firming up. \"Don't be stupid. It's far too late for that now. I've already killed one man to keep this a secret and now you force me to kill more.\" He gestured at Stanton's body. \"He came in, angry. He started shooting and killed you all. Ty managed to shoot him before he died. I was the only survivor. I'll be traumatized by the time the police get here.\" \n\n\"You already told them Frank was alive,\" I pointed out.\n\n\"Sorry,\" he said with a dry smile. \"I just told them there had been a shooting and they needed to send an ambulance. Say goodbye to your lover, Candy.\"\n\nHe had let his aim drift lower until he was half-way aiming at the floor. I had time to do something, but only if I acted right now.\n\nI heard Ty's father whispering in my ear. \"Put the dot on the target and between the sight posts.\" I lined up the pistol and snapped the safety off. I cocked the hammer back with my thumb. Time seemed to be flowing like molasses. Damien's gun was coming back up, slowly, so slowly. Ty's father continued. \"Squeeze the trigger slowly. Let the shot come as a surprise to you. That's the only way to not jerk the barrel up and miss.\"\n\nThe pistol exploded in my hand and Damien stared at me in shock. I thought the recoil was going to yank it from my grip but I managed to hang on. For a moment, we stood there staring at one another and then he dropped the pistol and fell down sideways. A stain of blood was spreading across his chest.\n\nBefore, I'd only thought my ears were ringing. Now I could hardly hear. I kept pointing the pistol at Damien, waiting for him to move.\n\n\"If I shoot a man, I shoot to kill,\" I said, apropos to nothing, repeating what Ty had told his father in my vision.\n\nI stood there pointing the gun at him until Ty pulled it out of my hand and bundled me in his arms. Then I sobbed my relief into his shoulder.\n\nThe nightmare was finally over."
    ],
    "authorname": "Wine_Maker",
    "tags": [],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-touch-of-death-ch-13"
}