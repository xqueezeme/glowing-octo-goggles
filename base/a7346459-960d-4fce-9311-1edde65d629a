{
    "title": "Sharkbait Down Under Ch. 71-80",
    "pages": [
        "Leo Volkov's POV\n\n\"LEO GET IN HERE,\" Adrienne sent to me. \"Sharkbait used the under duress code.\"\n\n\"Coming.\" I was out in the garage getting the snowmobiles ready for the expected snowfall tonight. Running back into the house, I headed for the office while I listened in over the link.\n\nVicki was talking. \"I need Monique Robinson's address.\" Monique Robinson? She was the Omega who Sharkbait's first mate raped and impregnated. Adrienne had her in hiding, as her son was a Mantled Alpha with no Pack, just like Sharkbait had been when I found her. We were hiding her with a retired couple from our Pack, far enough away that anyone looking wouldn't find them.\n\n\"Why?\"\n\n\"You know I want to make sure my Pack has the opportunity to find their mates, but I realized Monique would never be able to attend a scratch 'n sniff while in hiding. I'd like to send her a formal invitation to come down here for a private visit, where I could bring my unmated males to meet her. I'm sure you're moving her periodically for safety, so why not thousands of miles away? Nicholas and I will make sure she's safe here.\" That was suspicious as well; if enemies had her name in the TSA database, they'd know where she was going. Avoiding commercial flights and anywhere else required to show identification was one of the first rules of staying hidden.\n\nI thought quickly before sending a mental suggestion to my mate. \"The Temples are in Arizona for another week, but Monique and Tyler stayed behind. Set a trap at their house,\" I sent to Adrienne as I sent out an alert on my phone to all Pack Warriors to gear up and assemble immediately at Volkov Construction in Red Wing.\n\n\"That could work,\" Adrienne said. She rattled off an address. \"She's staying with Paul and Lois Temple down in Lake City.\" Paul and Lois were retired teachers from the Miesville Pack who lived in a condo overlooking Lake Pepin.\n\n\"Thanks, I'll get in touch with them as soon as possible. Bye, Alpha.\"\n\n\"What the hell is going on,\" I asked my mate as she sat back in her chair.\n\n\"She used the under duress code again at the end to make sure we picked up on it,\" Adrienne said. \"Someone has her or is blackmailing her to get Monique's location.\"\n\n\"Timothy,\" I said as I unlocked the gun safe behind my desk. \"He keeps doubling down on stupid.\"\n\n\"I'll work the phones, and you take down whoever they send to get him.\" She was already dialing a number. \"Who knows who he's in with now? It could be werewolves, humans, or vampires.\"\n\nTaking out my Smith and Wesson M&amp;P40, I threaded on a silencer since we'd be working in town. I pulled on a shoulder holster and slid the long pistol in place, then grabbed an extra two magazines of Silvertips and placed them in the holders on the right side. The bullets were for werewolf use; we started with normal hollowpoints and dripped a small amount of molten silver into each. They'd work fine on humans, too. Vampires were a whole other thing. I wrapped a sheath with a silver-coated dagger on my right calf and hooked a Taser on my right hip.\n\nI wanted at least one alive.\n\n\"I'll call you when we are in place.\"\n\n\"Be safe,\" Adrienne told me as she kissed me goodbye.\n\nI called Tony and Lois Blackman in Frontenac as I was driving to work; they were a young warrior couple who joined the Pack three years ago. They lived closest to Lake City, so I sent them to watch the Temple's townhouse. \"Use the ice house, bring rifles, and stay out of sight,\" I told them. Our Pack owned a twenty-five-foot Ice Castle trailer that sat a few hundred yards from their townhouse on Lake Pepin. It could sleep six beer-drinking adults in RV comfort, plus it was a fun place to take the kids during the day.\n\nIt took another twenty minutes after I got to Volkov Construction for everyone else to arrive. While I was waiting, I'd called Monique to fill her in on the threat. \"I don't know where the threat is coming from or how long until they arrive, but they want Tyler dead,\" I told her. \"I need the two of you in the panic box, and don't come out until I give the all-clear.\"\n\n\"Shouldn't we leave?\"\n\n\"No, we need your scent, and only your scents there, or we'll spook them. They won't get to you before we can follow them in and take them down. I can't have a gunfight out in public, Monique. You'll have to be the bait.\"\n\n\"I understand. I'll grab a few things and get Tyler inside.\"\n\n\"Stay safe and quiet.\" I hung up and thought about what I was doing. I was confident they would be safe during the attack as long as they stayed in the box. After moving the two into the Blackman's basement bedrooms, I'd installed a 'tornado shelter' for them. The steel box was the foundation for her bed, bolted to the concrete floor, and the top raised on hydraulic assists to access the shelter. It locked in three places from inside, and the inch-thick plating was bulletproof and bomb-resistant. She kept sleeping bags, emergency supplies, and battery-powered lighting inside.\n\nI used a satellite overview of the area to give out assignments. I had a dozen men, split into six teams. Three teams would cover the parking lot and street, while two teams covered each side's shoreline. The Blackman's were responsible for the frozen lake. \"Teams one and two will be here, across 61 from Central Point Road at the trailer park where we can cover the entrance. Three and Four, you park at least six houses down on the dead-end road. Teams One and Three go to the house after the attackers are inside. Team Three stays upstairs while One goes downstairs. Team Two is responsible for any support vehicles or trail vehicles. Teams Four and Five, you approach from the lake, each entering through a patio door using the spare keys.\" The twin-homes lined the shore where it jutted east into the lake just north of the city, so the street and garage were on the north side and the lake to the south. \"Team Five will be here, in Hok-Si-La park on the south loop. You won't be able to see the house, but be ready to go wolf and chase down any that try to flee north through the woods. Team Six is in the ice house.\n\nThe wind is out of the northwest, so we have to watch our placement,\" I told the men. \"Get into place. Keep one alive if you can, but protect each other as a first priority.\"\n\nIt was just above zero as we passed lunchtime, so the cars had to stay running. By two, I started rotating people around so vehicles could get gas, food, and use the bathroom, plus we could change locations to avoid suspicion. We were about to get food when I got a text message from Adrienne. She was calling an emergency teleconference.\n\nI used my phone to get on. I saw Alpha Steven and Luna Carolyn, Adrienne, Master Cyprian, and Chairman Wolfe. As soon as Nicholas joined, and ONLY Nicholas, my heart dropped. \"Nicholas! Is Vicki safe?\"\n\n\"She is now,\" he said. He turned his phone to show her face; they were in a car, and she was asleep with her head on his lap. \"Timothy and Traci showed up in Sydney along with Caroline from Los Angeles and her friends.\"\n\nShit. Master Caroline was the Vampire Master of Los Angeles! She was powerful and dangerous and not necessarily an ally.\n\nCyprian's face showed a brief bit of shock before he regained control. \"How is Caroline now?\"\n\n\"Caroline and her friends are no longer a concern of mine, nor are Timothy and Traci. I do need to find a long-term babysitter for Todd. Perhaps you know a good family?\" He was saying things that would be innocent if overheard, but I was relieved. Vicki and Nicholas were safe, the bad guys were dead, and a baby needed to find a home with its relatives.\n\n\"I'll see what I can come up with,\" Adrienne said.\n\n\"Cyprian, fair warning. Things will get heated, and it will all be in public with our friends in Los Angeles. New leadership is needed quickly, so we need you to step in. Austin, Frank, and Paul will be sitting down with David, Elsa, and Andrew to discuss what happened. Uncle Samuel will be all over this.\"\n\n\"I understand and will handle my end.\"\n\n\"You have maybe three or four hours before it all blows up, so take advantage of the time,\" he said evenly. \"I have to go. I'll call when we're back to our room.\"\n\n\"Thank you, Nicholas. Keep our girl safe.\"\n\n\"You know I will, Unky Leo.\" He exited the conference, quickly followed by Cyprian.\n\n\"Any change where you are, Leo?\"\n\n\"Still quiet. I'll call you later.\" With that, I exited the conference and started thinking back to the names he'd used. Caroline and her Coven were dead, and they'd been working with Timothy and Traci to take down Alessandro and Vicki. They must have forced Vicki to give up Monique's location before being rescued.\n\nCyprian was going to have a mess on his hands. The Los Angeles Coven was one of the richest and most influential, and now it was gone.\n\nThe other names made no sense until you got to the abbreviations. AFP stood for the Australian Federal Police, and DEA was the Drug Enforcement Agency. Uncle Sam? Nicholas meant they were making it look drug-related, so he warned Cyprian about potential investigations into Caroline's activities. I was glad I didn't have to clean THAT mess up.\n\nMore information came through as we maintained our vigil. Monique asked if she could relax a little since it had been hours already; I agreed, provided she kept the entrance open and didn't leave the room.\n\nI kept an eye on the Australian news websites, and it was late afternoon when the first headlines started. \"CARTEL WAR COMES TO SYDNEY,\" one headline blared. There was little concrete information for a few hours, just the initial reports of decapitated bodies found stacked like cordwood in Bradley's Head Park, plus an unidentified baby found in a running SUV nearby. A little later, 'confidential sources' confirmed two of the bodies were Australian Federal Police agents, and some of the bodies were Americans. \"In what appears to be a drug deal gone bad, the bodies of six men and three women were found in Bradley's Head Park on Sydney's north harbor this morning. Two of the men were members of the Australian Federal Police, while several other victims had United States passports. Police recovered a large amount of cash at the scene near one of the victims, and drug dogs found cocaine residue in the car. The child, a months-old boy, was taken to the hospital as a precaution. More updates as they become available.\"\n\nYep, Cyprian had a mess on his hands.\n\nIt was five-eighteen in the afternoon and just after sunset when I called the alert. A car pulled into the drive, dropping off two males a few houses short of the townhouse, then parked across the street. \"CODE RED Coming in from the front, four men, one vehicle,\" I sent to the team. \"Monique, get safe. Four and five, start walking towards the house.\"\n\n\"In and locked,\" Monique sent back a few seconds later.\n\nI pulled out of my parking area and crossed the road. I could see the men kick the door down, and the four went inside with guns drawn. \"Team Three, go,\" I said. We both arrived in front of the house at the same time. The four of us leaped out and ran for the broken door, smelling the werewolves preceding us. \"Four, Five, GO!\"\n\nEight men entered the home from both sides, leaving the attackers had no chance. I put two into the chest of a man in the living room, while my partner took out one in the kitchen. I could hear the suppressed shots from downstairs, followed by the crashes of furniture breaking. My partner and I headed down the stairs while the other two checked the rest of the floor. \"UPSTAIRS CLEAR, TWO DOWN,\" Team Three reported\n\n\"DOWNSTAIRS CLEAR, ONE DOWN, ONE INJURED,\" Team Four reported.\n\n\"Stabilize him and tie him down.\" I entered the bedroom to find a young woman lying on the floor as one of my men applied a battle dressing to the gunshot wound on her thigh. The leg was lying crooked, so the bullet had broken her femur. \"Back one of the cars into the garage and start loading bodies and cleaning up,\" I told the men.\n\nI started a video camera for the interrogation. The prisoner didn't look at me or beg for mercy. Instead, she was crying over the man with a bullet through his temple. \"Your mate?\" She nodded her head. \"If you cooperate, I'll make your end clean and painless. You got shot with silver, so you know what that means.\" Her eyes got wide; silver poisoning was a bad death. \"What Pack are you with?\"\n\n\"We aren't,\" she said. \"We were Stillwater until the Alpha died, and Alpha Ivan made us rogue.\" The previous Stillwater Alpha was into some bad stuff, and Ivan cleaned house.\n\n\"Who told you to kill him and why?\"\n\n\"Timothy Lords,\" she said through gritted teeth. \"He promised us money and a spot in his Pack in Australia.\"\n\n\"Timothy died a few hours ago,\" I said. \"Who should I contact about your bodies?\"\n\nShe gave me the name of a relative, then looked away. I put a round into her head, ending her suffering. A few minutes later, the bodies were gone, and I told Monique to open the safe space. \"Alpha!\"\n\nTyler reached for me, and I picked him up and held him to my chest. \"Don't look around, Chum, we're going to my house.\"\n\n\"I can see the sharks?\" He looked up at me with wide eyes.\n\n\"Of course you can, Tyler. The sharks miss you.\"\n\nCh. 72\n\nNicholas Corcoran's POV\n\nWe arrived back at the casino at three-thirty in the morning. Becky pulled into the private parking level for residents, turning the SUV into Alessandro's reserved spot. I carried my sleeping mate in my arms to the elevator, where we headed for the 70<sup>th</sup> floor. The Coven headquarters had a dozen bedrooms, and Becky showed us to one. I took Vicki's clothes off and tucked her in without her waking. I walked back to the living area overlooking the harbor, spotting Becky out on the balcony. I went through the door, marveling at the view of the city and its waterfront. \"What now?\"\n\n\"Once I have you settled, I will hack the security footage to show you arriving at midnight and going straight to bed. I'll loop the video in the garage and elevator to make up the time,\" the redheaded vampire told me.\n\n\"The police will track their men back to us; we are their last known assignment,\" I said.\n\n\"True. A group of your mermaid friends arriving chartered a tour boat last night in Sydney Harbor. The police officers dropped you off at the King Street Wharf at six. You boarded the Starship Sydney with your friends, eating and drinking until you fell asleep in the corner at nine. I picked you up when the tour boat returned and brought you here about midnight.\"\n\nIt was a lot to do. \"How is that going to work?\"\n\n\"Alessandro will be at the tour boat this morning and speak to the Captain and crew. They will tell the police they remember seeing you, but no details. Maribel has already spoken to her people, who will swear you were on board. There are no security cameras on the tour boat, and the cameras providing good visibility of the dock will have technical issues. Keep your answers general; they care about what the officers did after dropping you off.\"\n\n\"And Alessandro's involvement?\"\n\n\"He worked through a private company to provide security for VIP guests up in Queensland. The two men clocked out last night with their superiors, just before they drove you to the electrical supply house. As far as the security company is concerned, the men completed their assignment and were off the clock last night.\"\n\nI wasn't sure. \"How is all this possible?\"\n\nBecky just laughed. \"Planting a vague memory is easy for a Master Vampire, and all that is required is that they remember you were on their cruise boat if the police ask. The surveillance is all on computers. If it's a computer, I can get to it. As for the security company, who do you think owns it?\"\n\n\"Alessandro?\"\n\n\"Close, but it's Rick. Our Coven splits ownership of various investments and companies among us for tax and other advantages. A security company gives us access to law enforcement, weapons, and equipment we couldn't access legally without it.\"\n\nIt was a slick setup. There were advantages to never aging and never having to sleep. I didn't have those advantages; it had been a long day, and I was fading fast. \"I'll leave you to it. Goodnight, Becky.\"\n\n\"You and your people did well tonight, Nicholas. I'll make sure our secrets stay that way.\" I closed the door behind me and walked back towards the bedroom. I took a shower to wash the rest of the blood and seawater off, then tucked into bed. Vicki rolled towards me; her skin was cold, so I gathered her into my arms and went to sleep.\n\nI woke to a knock on the door; looking at my phone, it was eight AM. Vicki was still out cold. \"Yes?\"\n\n\"It's Consuela. I'm here to check on Vicki.\"\n\n\"Just a moment.\" I woke Vicki gently, as she was SO not a morning wolf, then pulled on shorts and went to open the door before going to take care of my morning routine. When I came out of the bathroom, Consuela had finished her examination. \"How is she doing,\" I asked.\n\n\"I just want to SLEEP,\" Vicki said.\n\n\"She's anemic and dehydrated. She needs fluids, food, and rest in that order,\" Consuela told us. \"She's on bedrest today. Go, bring your wife her breakfast.\"\n\nI quickly dressed and went into the hallway, following the smell of bacon to the kitchen. \"Good morning,\" I said to Oksana, who was cooking up a lot of food. \"Is someone else coming?\"\n\n\"Just the two of you, but Consuela said you needed lots of food. I don't get to cook often, so I volunteered,\" she said. \"Bring those trays over.\" The trays each had large glasses of milk and orange juice, and one had butter and syrup. Each had two plates. I handed them to her when directed, and she heaped on scrambled eggs, bacon, and a steak on two of them. I set those down, and she took the other two and filled them with thick pancakes topped with strawberries on the other two plates.\n\n\"What are these,\" I asked.\n\n\"Syrniki, Russian cheese pancakes,\" Oksana told me. \"My mother used to make them for me on special occasions like my birthday or the Tsar's.\"\n\nYou never ask a woman her age, but that was a hint and a half. I carried one tray into the bedroom, where Consuela had brought over a folding table next to the bed. Vicki's eyes widened at the sight of all the food. \"Steak AND bacon?\"\n\n\"Get your food baby going, and then you can sleep,\" I told her. I set the food before her before going back to get mine. My wife wasn't shy about eating, and she'd made a dent by the time I returned. We both liked the Russian pancakes.\n\nBecky came in and verified the surveillance tapes matched our story, which she went over with Vicki. Vicki was a little unsteady on her feet, and we'd just washed up when Alessandro joined us. \"It's all over the news,\" he told us. \"I'd expect the first detectives to call you in the next few hours.\"\n\n\"Becky briefed us on everything,\" Vicki said.\n\n\"I've delayed the talks on the Council until tomorrow morning so you can rest,\" the Master Vampire told us. \"The mermaids are taken care of; there's plenty for them to do at Bondi Beach.\"\n\n\"I should call and see how the meetup is going,\" Vicki said as I tucked her in.\n\n\"I'll find out. You go to sleep.\" I kissed her forehead as she turned on the news, then followed Alessandro out to the living area. He gestured me to a chair by the windows. \"How bad is the blowback going to be?\"\n\n\"Manageable,\" Alessandro said. \"We had a few hours to work before the police found out, and that gave Cyprian and Becky a chance to plant some evidence. It's enough to lend credence to the drug angle without casting suspicion on the rest of her operations.\"",
        "\"What will happen with Caroline's estate? Is she married to someone?\"\n\n\"Caroline was not married; unlike Vespucci, she wasn't planning to change identities or move to a new territory. Designating an heir in a competitive Coven can paint a target on your back,\" he said. \"The Council requires all vampires to have similar languages in their wills to avoid entanglements in human courts. In a case like this, with the entire Coven leadership gone, what happens depends on how she structured her fortune. Many structure their finances as a private corporation and give their people stock, while others hold it closely. I suspect she isn't as trusting as I have been with my people.\" That made sense after hearing how Rick owned the security company. \"The lawyers will handle the estate, and new leadership will come in. The vampire world is in the middle of a shakeup as new Masters arise, and others move where they have opportunities.\"\n\nI'd grown up ignorant of Vampires in my country, so all of this political stuff with Packs and Covens was new to me. \"I've got so much to learn,\" I said as I looked out over downtown.\n\n\"When you think you have nothing to learn, you are merely existing,\" he said. \"I've been a vampire for centuries, and I never stop learning new things.\" Oksana brought over a Coke for me, and I thanked her for breakfast again before she retired. \"What did you think of the land? Are you going to take it?\"\n\n\"Vicki's picking out drapes for the home we haven't designed yet,\" I said. \"I may need your help getting the coastal commission to agree with our plans.\" I showed him the satellite view of where we were hoping to build and what zoning laws were. \"A hundred-meter setback from the high water line kills our dream.\"\n\n\"All of these are 'should' restrictions,\" Alessandro said with a smile. \"I've dealt with government regulations and zoning rules more than I'd like to admit. Think of what the Commission's goals are, then tailor your proposal until its benefits outweigh the effects of the waivers.\"\n\n\"Like what?\"\n\n\"Come on.\" We went to his conference room; the computer screen there took up most of the wall. Alessandro brought up the satellite view of the property along with the zoning laws. \"The coastal development plan has two goals; minimal visual disruption of the coastline, and conservation of native vegetation. Are you planning to raise sheep there?\"\n\n\"No, we'd like to let the land return to nature. All we want is to run on it without interference, which means keeping it private.\"\n\nHe backed the view up to show the peninsula. \"You can donate land to a charity and take the tax deduction, and not allow the public to access it,\" he said. \"You should consider redrawing the boundary lines if you do that. Combine that with an easement across the northern portion of the properties to connect the Blowhole Beach park area with the Talisker Park; the public good then outweighs the variance. A strip wide enough to put in hiking and bicycle paths would buy a lot of goodwill. The South Australian Government has inquired about buying the land, but it wasn't a high enough priority.\"\n\n\"We've talked about an airstrip on the west side, maybe some houses for Pack members who want to live close. The farmhouse here is all right, but the resort doesn't fit what we want. I don't know what they were thinking with that spaceship.\"\n\n\"Then put that in your proposal. Removing eyesores and structures helps, as will using historical designs and natural materials for your proposed structure. If you can show the Commission that the coastline will be better after your proposal than now, you have a chance.\"\n\nThe idea had merit. \"If it doesn't work, can you come to the meeting and use your power to change the Commissioner's minds?\" He looked at me like I was kidding. \"Vicki wants this bad, and I don't want to disappoint her by saying we can't do it.\"\n\n\"We should probably come up with a great proposal first,\" he said.\n\n\"Nicholas? Linda called; she needs to talk to me in person.\"\n\n\"Is something wrong? Is it the show?\"\n\n\"She has some rough cuts we can watch, but she needs to talk to me about personal things, too.\"\n\n\"I'll ask Alessandro if we can bring her.\"  A few minutes later, Oksana volunteered to drive to the beach and pick up our Sharkbait Productions Director and her Merman.\n\nCh. 73\n\nVicki Corcoran's POV\n\nConsuela was right; it was going to take a while to feel right again. My blood was already thin after my kidnapping; having Caroline treat me like a juice-box a little over a week later? Bad news.\n\nI needed a blood transfusion, but Nicholas's blood wasn't compatible, and he had vampire blood inside him. It allowed him to heal quickly and made him immune to vampire venom last night, thank Luna. Alessandro told him the effects would only last a few days, maybe less since he'd used it for healing his gunshot wound and the slashes Caroline gave him. No one knew what would happen if Consuela used mermaid blood, and human blood would require a visit to a hospital and an explanation I couldn't give. When my Pack representatives arrived, we'd see if any of them had my blood type.\n\nI turned on the news, resting back against the pillows in the bedroom at Alessandro's Coven. The coverage was breathless yet shallow; the police hadn't released all the details yet. A photo of bodies stacked high, decapitated heads piled like cannonballs on top, couldn't be shown without blurring it out.\n\nI pulled out my phone and started checking messages. My family flying home from their time at Mermaid Beach didn't say much. I sent a group text, telling everyone I overdid it last night and was spending the day resting up with my husband.\n\nI was watching the weather when my phone buzzed with an incoming call. It was Linda Cartwright, my mermaid friend and reality show producer. \"Morning Linda, how is the party going?\" I'd made sure she was around for the SAMM, Sharkbait's Australian Mermaid Mixer.\n\n\"It worked, Vicki! I found the one for me!\"\n\n\"WHAT?\"\n\n\"His name is Commander Matt Rooney; he is the Commanding Officer of Clearance Diving Team Four out of the Naval Base near Perth. He's four years older than me, never married, and OH GODDESS is he great in the sack,\" she said dreamily.\n\n\"Back up a bit, Linda. Tell me how it happened.\"\n\n\"I slept all afternoon and then worked until one in the morning instead of hitting the welcome party last night. I was finishing up for some deadlines, and I had to talk to my people in California. The time difference sucks, right?\" Bedtime in Australia was early morning in the States, especially on the west coast. The only way you're awake for any time together is if one of you works nightshift. \"I came down to the pavilion we have at the beach around midnight; I talked to dozens and dozens of guys, but nothing clicked, you know? I was about to give up because who wants an American woman with a demanding career who's pushing forty?\"\n\n\"A smart guy. You're smart, courageous, and you still have a hot body,\" I told her.\n\n\"I was disappointed and told some of the other women that when I joined them at a table. They encouraged me not to give up yet because some guys were off doing some important stuff. I wasn't tired, so when they took the vans to pick them up, I asked to go along.\"\n\n\"What time was this?\"\n\n\"Three AM, but I wasn't drunk or anything. We waited at the pier, and when Matt walked off the boat, and I looked in his eyes, I just knew. It was love at first sight.\"\n\n\"What did he think?\"\n\n\"He just stared at me, unable to move for a few seconds. Finally, he walked up, put his hand on my cheek, and asked if I was real. I kissed him and proved it.\"\n\nI could just SQUEAL. \"That's SO hot! Did anyone get it on film?\"\n\n\"Yes, but it's not going on your show because I'm behind the camera, not in front of it,\" she insisted. \"Things were tight, so I had to sit in his lap on the way back. He told me about himself, and I told him what I did.\"\n\n\"How did he react?\"\n\n\"He knows you, and he's a diver, so yeah,\" Linda said. \"He retires next month from the Royal Australian Navy and was looking for a job, and I want to give him one. I want you to meet him and approve the offer I made him, Vicki.\"\n\n\"What did you do?\"\n\n\"I asked him to be our new Dive Master for Sharkbait Productions. I know you originally planned for an all-girl for the Sea Scout, but that's not realistic, and we both know it. Married couples onboard can work, with females in front of the cameras.\" She was right; limiting it to just women was making it hard to fill out the crew. \"We need someone with decades of diving experience, and that's been Matt's life. On the bonus side, if we ever need to disarm a sea mine or set a charge underneath a rival ship, we're covered. The Clearance Diving Team is part of the Australian military's Special Forces, like the SEALs, but he says they don't go more than a couple clicks past the waterline.\"\n\n\"He sounds like a good guy, Linda. I'm happy for you.\"\n\nShe giggled like a teenager. \"Can I bring him to meet with you? I know you're probably tired, but Matt and I have to fly to Perth this afternoon, so it's now or much later.\"\n\nDamn, that was fast. Linda meets a Navy guy at three in the morning, has him in bed by six, and is flying home with him by two. \"Let me make sure it's all right. They've got me on bedrest at Alessandro's place downtown.\" I linked Nicholas, who made the arrangements. \"One of Alessandro's people will pick you up from the hotel in about forty minutes,\" I told her. \"I can't wait to meet this guy.\"\n\n\"I'll see you soon,\" Linda said. I hung up, excited that there was at least ONE couple that came out of this meetup.\n\nI did some reading on the Web about the Clearance Diving Team and Australia's special forces. Matt would fit right in with Ian, Hammer, Kai, Manuel, and Ricardo.\n\nI was reading about combat divers in the Iraq War when Nicholas told me we had detectives on the way up. The pair, an older man and his younger female partner, talked to the two of us for about twenty minutes. We answered their questions while staying within our cover story; Alessandro hired them for our security, we didn't talk much, the guys were professional, and we didn't see them after they dropped us at the pier. I pretended to be shocked when told the officers were dead, and I made the connection to the news I'd been watching. We wrote out and signed statements, and they were gone.\n\nNicholas got me more juice, then returned with Linda and a tall, dark-haired man with a close-trimmed beard and mustache. \"I've seen you before,\" I said as he walked it.\n\n\"Quite,\" he replied. \"Commander Matt Rooney at your service. We spoke briefly at your Surf Shop appearance in Perth.\"\n\n\"You asked me to sign my poster with a saying.\"\n\n\"United and Undaunted, it's the motto of our unit,\" he said. \"You'll be happy to know you and Amy have an honored place on the wall of our ready room.\"\n\nI could just bet; the photo from above of Amy and I free-diving in thong bikinis would fit right in. We spoke about his background, and I was impressed. \"How are you two going to work things out?\"\n\n\"I haven't the foggiest,\" Matt answered. \"We'll figure it out. Once I retire, my schedule opens up a bit.\"\n\n\"Welcome aboard,\" I said. \"Take care of her; Linda's the best, but she needs to take a break once in a while.\"\n\n\"I think we've already proven that this morning,\" Matt said with a grin. Linda blushed and smacked him, and we spent a little more time getting to know each other.\n\nWe spent an hour watching her rough-cut of the episode she was working on, which happened to be the caves off Rottnest Island. Matt had lots of stories about his diving career, including a few shark encounters that were a bit too close. All too soon, they had to leave.\n\n\"Thank you, Vicki,\" Linda told me as she hugged me goodbye. \"I wouldn't have found him without you.\"\n\n\"If you'd gone to the surf shop in Perth instead of the hotel to start editing, you'd be married already,\" I teased her. There were only so many autograph sessions you could put into the show, and she'd reached her limit. \"Send us an invite to your retirement ceremony, Commander. I'd love to see your unit.\"\n\nThat had Nicholas doing a spit-take and Matt laughing. \"The boys would love to meet you, and I'm sure my lady would film it,\" he said.\n\n\"Linda, you know we were going to do a show about SEAL training? Maybe we could fit in a segment with the Aussie divers?\"\n\n\"I'll talk to the Base Commander,\" Matt promised. \"I'm sure I can find something that will look good on film. And thank you for arranging the meetup, Vicki. My nephew texted me that there are a dozen other couples out of it already. He found his woman too; she's a Mermaid from a fishing village in Mexico.\"\n\nNicholas looked up. \"Maribel?\"\n\n\"How'd you know?\"\n\nCh. 74\n\nThe Australian Council Treaty was a foregone conclusion after the events of the last few weeks. Werewolves, Mermaids, and Vampires had proven themselves to each other in a way that built up the trust needed. Not every leader in each species in the world was that way, but our Continent had it.\n\nAdrienne had provided a draft treaty and structure based on her experiences that made sense. Covens and Packs had top-down leadership that lent itself to single representation, but the Mermaids did not. Having one representative from each species would be simple but concentrated power into too few people to satisfy the Mers. It would also make things more difficult down the road if another Pack or Coven got started. In the end, we agreed on a nine-person Council, with each species having three representatives and one alternate. Changes to the Council Bylaws required eight of the nine to agree, ensuring fairness to all species. A three-person subcommittee could do day-to-day things like approving visitors.\n\nI felt better after a blood transfusion, so the rest of our time in Sydney went smoothly. The Mermaids knew how to party, and I didn't even try to keep up. Consuela wanted to see the country, so we brought her along in a rental car. For security, we had two single Werewolves from our Pack who volunteered to drive us home.\n\nDriving had been Nicholas' idea, but it was fine with me. I hadn't seen much of Australia yet, and we planned to stop to visit Pack members and unaffiliated werewolves at every stop along the way. I'd met most of them when we were in Bonnie Doon, but that seemed like a year ago now. Our visits were more relaxed, and I got to know my Pack members personally and share our vision for the future. \"We can be a Pack all spread out like this, but over the decades, you'll feel the desire to move closer due to your wolves,\" I told them. \"It's a natural impulse for your wolves to gather. We will help where we can; relocation allowances, help finding jobs in the Adelaide area, educational assistance at the local colleges and trade schools. The more often we gather as a Pack, the better your wolves will feel. We've got plenty of room for our wolves to run on, and the ocean is our backyard.\"\n\nSix families didn't want to join our Pack. In all six cases, the wife didn't want to make the change, and the husband didn't want to risk another situation like Ian and Dorothy. Until that happened, the promise of a change and choice mating seemed worth the risk.\n\nWe stayed for a week in Bonnie Doon with the remaining sixteen wives who elected to make the change. All sixteen made it and became choice mates of their husbands. Our Pack was now twenty-five for twenty-five on changes, a success rate that defied belief. I asked Adrienne what she thought it meant on our daily conference call after I woke up, and she couldn't explain it. \"I ran the numbers; it's more than a one-in-thirty-three-million chance of happening this way, Vicki. If you're this lucky, you should buy lotto tickets. I have to believe there is something else in play.\"\n\nI didn't know how to explain it. \"It's not you, Unky Leo. You weren't here for this set.\"\n\n\"And it's not you either,\" Leo said. \"You were on tour when Adrienne and I supervised turns with Nicholas. No, I think this one is all Luna.\"\n\n\"What do you mean?\"\n\n\"I think the Goddess took pity on your people for being isolated and alone for so long. The wives showed loyalty to our kind and bore sons and daughters to keep Her people going. It is her reward for them.\"\n\nIt was as good a reason as any. \"How should I handle it?\"\n\n\"Like the blessing it is. If anyone asks, you didn't do anything we don't do in the rest of the world, and the Goddess does what she wants.\"\n\nThat made sense.\n\nThe migration towards Adelaide was already underway. Ian stayed with his brother and his family while the divorce went through. Their family had found a place in Wirrina Cove, a small vacation town about fifteen minutes north of Cape Jervis along the St. Vincent Gulf. It was in the hills and had a view of the ocean, plus he could be at the marina in five minutes. In another surprise move, two sisters in another family decided to transfer to the University of Melbourne to Adelaide, and four more families were actively looking for jobs near us.\n\nIt was January 29<sup>th</sup>, and we were visiting a family in Mount Gambier. I called my accountant back after brekky in response to his urgent message. Early morning in South Australia was late afternoon the previous day back home, so he was in his office. \"Hey, Stan, what's going on?\"\n\nStan Greenberg had been busy. \"Vicki, do you remember that offer on the yacht I told you about?\"\n\n\"Yeah, one-point-five if I paid cash by the end of January.\" It was a good discount, but I hadn't given him an answer yet because I'd been busy with other things.\n\n\"He called me today and asked if he could do anything to sweeten the pot. I told him it would cost us sixty grand to sail it to Adelaide and change the registration, so you were thinking about buying something down there instead. He panicked and offered to drop it to one-point-four if you paid cash by tomorrow.\"\n\n\"Money problems,\" I said.\n\n\"Worse. The owner has divorce problems, and the ex wants the money now.\"\n\n\"Let me call you back.\"\n\nI had Nicholas in the room with me, and I set up a call with Amy and the twins, Ian, and my parents. After explaining what was going on, Mom urged me to buy it. \"You like the boat a lot, and it's going to be a year or two until your home gets built,\" she said. \"Then there is school; a boat in a marina could serve as an apartment in Adelaide if you don't want to drive a hundred minutes each way.\"\n\n\"Don't worry about us; we can find a luxury apartment or two until the boys get their next orders. It's not like we all can't afford it,\" Amy teased. \"Our lawyer said the lawsuit settlement sailed through the Justice Department, and we should have our checks in hand next month.\" Consuela Vespucci had set this windfall up with her lawyer and ours. The seized funds from Vespucci's American account was going to the six kidnapping victims and Linda. She'd been added to the lawsuit because she'd witnessed the attack and the killing of our guide when he was feet away. The proposed settlement would give the six of us just over six million each, plus three million for Linda. The rest went to our lawyer. Naturally, the Government did nothing but was going to end up with half of it via taxes.\n\n\"I'll bring it down for you,\" Ian said. I looked at him in shock. \"It's not like I have much to do right now, and my brother would love to take his wife on a cruise. We could take a month and see the world on your dime,\" he said with a smile.\n\n\"Could that work?\"\n\n\"Sure, we're both ship captains, and from the photos, you've got an indoor and a flying bridge with modern electronics. You cover the expenses, and we'll get her here safe and sound.\"",
        "I looked at Nicholas, who just nodded. \"We're not just going to LOOK at the water, Vicki,\" he said. \"I'm sure you can dive off this yacht too.\"\n\n\"I want it,\" I said. Ian called back, saying his brother and his mate would do it, and I made one more call. \"Linda, it's Vicki. What's your plan after Matt retires?\" Nicholas and I had tickets to Perth tonight. We would film me diving and training with Matt's unit, and then we'd stick around for his retirement ceremony.\n\n\"I have to go back to Los Angeles to close out my apartment and prepare my stuff for shipping,\" she said. \"We'll do some traveling, I hope.\"\n\n\"Do you know where you're going?\"\n\n\"Adelaide area,\" she said. \"Matt's open to anywhere, and I figure Sharkbait Productions is moving there soon.\"\n\nShe was right. \"Have I got a deal for you,\" I told her. They'd have a stateroom on my yacht, get to travel, and there was plenty of room for her stuff. She could even set her editing equipment up and keep working on the episodes in between ports.\n\n\"We'll do it,\" Matt said. \"I commanded a Minesweeper years ago, and I can handle myself on a bridge. With three of us to split the bridge time, it will be easy.\"\n\n\"OOOH!\" Linda was practically bouncing in her seat. \"What if you talked to Admiral Kirk and your SEAL team friends in Coronado and got us permission to film a day there with the other girls? We could make a whole episode showing you with the Aussies and the twins and Amy with the Americans!\"\n\nIt was genius, and we made it happen.\n\nLinda taped a day in Perth at HMAS Stirling as I spent a day with the dive team. We started with calisthenics and a beach run. For some reason, they insisted I run in front of the group with the Commander and Master Chief. After that, we boarded a rigid-hull inflatable and headed out to a training exercise just offshore. Linda and some volunteers filmed me as we walked through disarming a mine on the seafloor. In the next dive, we used rebreathers (think scuba without bubbles) to infiltrate the harbor and plant a limpet charge on the keel of a warship. It was fun, as was the retirement party on the beach they threw for Commander Rooney. The next day he was relieved of command, and they started the multi-flight trip to Los Angeles a few hours later.\n\nNicholas and I returned to the resort overlooking our new beach and didn't come out for three days.\n\nCh. 75\n\nAfter our 'retreat,' it was back to work. I'd continued the morning calls with Leo, Adrienne, Mom, and Dad because there was so much going on, and my family was involved in the Sharkbait Foundation and other activities. My current frustrations dealt with mating meetups. \"There's no way to make the Scratch 'n Sniff into an international meetup, is there,\" I said as I looked at the camera.\n\n\"It won't happen at the North American Alpha Summit,\" Leo said. \"I tried, but it's too late.\"\n\nAdrienne slowly nodded. \"The Council Chairman is dead, the Midwest Chairman is retiring, and the Pacific Northwest chairman's term is up. No one is willing to change anything until a new Council gets voted in, Vicki. That won't happen until the Summit.\"\n\n\"Who is going to replace Chairman Wolfe in your region? Unky?\"\n\nHe just laughed. \"Can you imagine Volkov School of Diplomacy in the Council?\" We all laughed; he'd be a bull in a china shop. \"No, I've been lobbying for Larry Winters.\"\n\n\"Good choice,\" I said. Larry and Donna were former Alphas, turning over the Winona Pack to Doug and Jenny Winters two decades ago. Larry had been Leo's father-in-law after his first mating, and the Winona Pack remained close allies to the Miesville Pack. \"How'd you get him to agree to come out of retirement?\" Regional chairs were not allowed to be active Alphas, so the pool of candidates was small.\n\n\"Given the alternative, he agreed to be drafted.\"\n\nThat didn't sound good. \"Who else has a hat in the ring?\"\n\n\"Carl Owens,\" Leo said. I shivered; Alpha Owens tried to get control of me twice when I was five, once at the Mall of America and once at the Alpha Summit. He'd also been the one filing charges against Leo that got him arrested, and me silvered, when we arrived for the Summit. \"They have an heir that is of age now, and he's a power-hungry bastard.\"\n\nHe never got his mantle, but he did mate an Alpha-blooded widow and adopted her ten-year-old son shortly after he failed with me. \"That would be bad. He'd set our kind back a century.\"\n\n\"Agreed,\" Adrienne said. \"There is a divide in our people between the traditionalists and the modernists. The reformers are the ones willing to consider working with vampires and recognizing the Australian Council. The Alphas are split, so a lot depends on how the Council shakes out after the new votes.\"\n\n\"And who the new Council Chairman is.\" It was a lot of political maneuvering, a game Leo and I didn't like, but Adrienne excelled. Luna did well pairing those two as second-chance mates. \"How is Dorothy doing?\"\n\n\"Settling in. Dorothy hasn't met her mate yet, and since she's an Omega, she can't attend the Scratch 'n Sniff,\" Mom said. \"It will be the four of us since no new Betas have come of age.\"\n\n\"I don't understand why the Alphas don't bring ALL their unmated along. It's not efficient,\" Nicholas said.\n\n\"Tradition,\" Adrienne answered. \"In the old days, it was expensive and hazardous to travel to the Summit, so they focused on the Pack leaders.\"\n\nI rolled my eyes. \"It didn't take much money or time to bring the Mermaids together, and it was a big success. They are doing another meetup in Florida over spring break, and a dozen Aussies are flying up for it. You don't have to look past the number of unmated to figure out how inefficient the current practice is.\"\n\nLeo nodded. \"There's a selfish reason, Vicki. In almost all cases, the female goes to the male's Pack and often a lower rank. Some Packs have fewer males than females, based on wars or other factors. Alphas hate losing members, so some prefer their members stay in-house, so to speak, with choice mates. The best way to get that is to let them go years without finding their true mate.\"\n\n\"I guess I'll need to push this on my own then,\" I said. \"I'll get the European Council on board and ask them to host. The Australian and European Councils can extend the invitation to the North American Alphas next week at the Summit.\"\n\n\"The Council may not approve it,\" Leo said.\n\n\"The Council cannot prevent interested wolves from traveling,\" I replied. \"Look, I've got a population of DOZENS of unmated wolves who have never attended a meetup. Add in those newly freed after choice matings, and we'll have multiple second-chance mates available. I can't afford to send my people on a tour of America. You guys slap some sense into them because our people NEED this.\"\n\n\"I almost wish you were still in the North American Council. You said it better than I could,\" Leo replied.\n\nI wasn't going to their meeting; I was on the Australian Council, and we declared independence from the North American Council. We finished our call, and I called up Lars Svensson, the European Council Chairman. I explained the issue and asked if he would co-sponsor the meetup there. He readily agreed, and after some discussion, we decided to hold it in Dublin, Ireland. The location worked for Lars because there was a major airport and two Packs nearby, and for me because I wanted Philip Corcoran's descendants to see where they came from in the Wicklow Mountains. Checking my schedule for the Sea Scout filming, we picked a week in June between filming sessions.\n\nI checked in with Linda; they had closed out her apartment and packed most of her stuff onto the Good Times. She brought her editing equipment along but shipped her other gear to New Orleans and the Sea Scout. They'd be leaving for Australia tomorrow, stopping in Hawaii, French Polynesia, Fiji, New Zealand, and Tasmania.\n\nMy next call was to the Sea Scout Captain Lynette Dauntless and Engineer Patty Holmes. We caught up on readiness for the first two scientific cruises the Scout would be taking. Our Foundation needed to keep the Scout busy, but we weren't planning to start filming until mid-March, so the girls and I wouldn't be along.\n\nWhen the Sharkbait Foundation publicized the Sea Scout's availability for short-term research cruises at minimal cost, we got a lot of interest. The ones featuring female scientists and sharks got scheduled with our film crew, while other expeditions filled in around it. The combination kept the Scout's staff employed and was in keeping with the Foundation's research focus. It also would shake down the ship before adding the pressures of reality television. Captain Lynette was on top of everything, and I looked forward to her updates.\n\nNicholas cooked me breakfast while I was on the phone. When we finished eating, we dressed in work clothes and waited for our guests to arrive. We weren't waiting long. Three vehicles arrived right on time, pulling into parking spaces at our home in the former resort. \"Jennifer,\" I said as I smiled at our architect. Another six people got out, one being our General Contractor, Zach Perkins. Mrs. Hawthorne introduced us to the five-member Coastal Zoning Commission.\n\nShe'd been working overtime to get drawings ready, and last week we'd presented it and our variance requests to the Commission. Due to the complexity of the plans and the variances requested, the Commission wanted a site visit. \"This doesn't fit in at all,\" one Commissioner said as she looked at the former resort and its spaceship-like outbuilding.\n\n\"Not at all,\" I said. I walked the group to the edge of the cliffs in front of our home. Looking back, they could see the buildings we promised to demolish, restoring the land to its original condition. They could look across to the point on the other side of the cove that was our building site. Zach had laid out the outline of the home and attached pool and cottage using stakes and orange tape; wooden poles and yellow rope showed the height of the walls and roof. \"That's a dominating building,\" one of the commissioners complained.\n\n\"Only when viewed from either side, both of which are private land,\" Jennifer replied. \"With the shape of the point, the building is long and thin. From out on the ocean, it isn't as conspicuous as the building beside us. It also helps that the point is at a lower elevation than this section or the adjacent. You'll see that the surrounding topography reduces the visual impact, especially with our use of native stones that will blend in with the cliffs.\" One design decision had been to use the same type of rock on visible portions of the home that made up the bedrock underneath us.\n\nWe walked around the cove and onto the point, spending time looking at the layout. \"This is a big home, almost a castle,\" another said.\n\n\"It will be worthy of the land it is on,\" I promised. \"The property and land will have significant tax valuation when finished, roughly double what it is now. Building in a manner that is historically correct yet modern inside is not cheap.\" The architect and general contractor answered questions about construction methods, water storage, solar panels, utilities, and other concerns. You wouldn't see them from the water because of their placement behind the building or natural features.\n\nWe spent thirty minutes at the site as they took pictures and made notes, then we looked from the other side before I led them down to the inlet. We loaded onto a waiting boat that took us out into the Southern Ocean. As we traveled back and forth parallel to the coast at different distances, Jennifer had them go between their eyes and the computer drawings showing the eventual look. I want to think we convinced them that the building would add to the scenery, but we wouldn't know for another week.\n\nThe Commission granted our variances after we agreed to several conditions. The spaceship removal must happen within three months, and this was fine. They wanted two easements on the north side of our property at different elevations through the reserve, allowing them to put in multiple trails. Since there would be no camping overnight, we agreed. Finally, the Commission rearranged our proposed property lines so the coastline on either side of our home would be part of the Sharkbait Foundation nature preserve. Our road would move further up from the coast, and the change would prevent us from building additional homes on the ocean.\n\nThe Commission did approve ten single-home subdivisions for future construction, all on five to ten-acre sites. Half were on the western side along the road and had no special restrictions. The sites reaching up the valley from our home had to be single-story and use the same exterior stone. We also got permission for the airstrip and hangar building on the far west end, along with additional home sites. I was thrilled about this, as it would let us build homes for Pack members who wanted to live on Pack land.\n\nWe had our deal, and I'd get my dream home. Excavation would begin next week.\n\nCh. 76\n\nLuna Adrienne Volkov's POV<br >Friday, February 11<sup>th</sup>, 2034\n\n\"How are we going to handle things,\" I asked as we drove onto the grounds of the Atchafalaya Pack in Louisiana for the annual Alpha Summit.\n\n\"You do the handshakes and conversations, and I'll stand around looking intimidating?\" I laughed, and Leo chuckled. \"Hey, it's what I'm good at.\"\n\n\"You're impossible,\" I said. \"I need your help lobbying the other Midwestern Alphas for Larry Winters. I'll be busy dealing with the Vampire issue with the Council, and there are a lot of Alphas nervous right now that I need to calm the fuck down.\" I wasn't kidding; Vicki's abduction and the fake-at-first-but-then-actual death of the Council Chairmen had the Alphas nervous. Add in the formation of a Council containing previous enemies like mermaids and vampires, and tensions were high. I was briefing the Alphas on the situation tomorrow morning, right after the regional Council elections. Alphas could submit nominees for Chairman until ten, but the Alpha voting wouldn't happen until that evening.\n\n\"I've got the easy job, then.\"\n\n\"No shit, Sherlock.\" Vicki's work with Vampires and Mermaids would be easier to take if it was just the Southern Cross Pack in a different Council. I had gone to Master Cyprian and engaged the other species, bringing the dangers right to the North American Alphas. I had to defend our actions plus show everyone what Vicki had accomplished in Australia.\n\nAnd if I couldn't get them to understand, the votes would go against us, and we'd be closer to war than peace.\n\n\"You'll do fine, Adrienne. There's no one I'd rather have speaking to this than you.\" He took my hand, his thumb lightly rubbing the back of my fingers to calm me down.\n\n\"It would be easier if we had some Aussie Betas with us,\" Liv said from the back seat.\n\n\"I can't believe the Council wouldn't let them come,\" Brent added. \"Why would you take away opportunities for the scratch 'n sniff?\"\n\n\"The Southern Cross Pack isn't part of the North American Council,\" Leo said. \"If they invited Vicki's people, they'd have to invite the Europeans. Sure, it would make sense, but that's why we can't do it. Petty politics by people who should be above that crap.\"\n\n\"I'm glad Vicki asked me to present the invitation to the Alphas,\" Olivia said as she sat back. \"The European Council recognizes her as a peer, and our Council needs to. Without a mutual treaty, she may not be able to return home.\" Within a Council, the Alphas granted permission to enter each other's lands. If you wanted to go to another Council territory, you were supposed to go through the respective Council. \"What would we do if they decide Vicki can't return to film her shows or do her modeling?\"\n\n\"We can't let it get to that,\" I said. We pulled up in front of the plantation house, and Omegas ran forward to get our luggage and get the doors. We stepped out and were greeted by the Atchafalaya Pack Alphas, then shown to our assigned trailer.\n\nThe scratch 'n sniff went off without issues, though only one couple found each other. I spent a lot of time socializing and prepping, answering questions, and talking informally about what happened in Mexico. We were up late into the night at the cocktail party.\n\nThe next morning after breakfast, the Midwest Council Alphas met to elect their new chair. After speeches by both candidates, a secret ballot elected Larry Winters as our next Chairman. \"Congratulations,\" I told Larry and Donna as we reached the front of the line. The Pacific Northwest election didn't go our way, with a traditionalist taking the spot.\n\nAfter the new Regional Chairs were seated, the next business was nominations for Council Chairman. Four Alphas gave short speeches nominating three serving Regional Chairs and one former Regional Chair before Alpha Steven Dauntless stood up. \"The person I nominate is uniquely qualified for the position. Universally respected, possessing a keen intellect, even temperament, great personal courage, and a vision for a better future. I proudly nominate Luna Adrienne Volkov of the Miesville Pack for Council Chairman.\"\n\nThere was a short period of silence as the room processed what was just said before it exploded into shouting. I turned to glare at Leo, but he was just as shocked as I was. Steven had said nothing before dropping this turd in the punchbowl, and he was grinning at me in triumph.\n\n\"SILENCE!\" Kurt Markingham slammed his fist on the table, shocking the room into compliance. The Western Canada chair was the oldest member of the Council and interim Chair. \"If you have an objection, raise it properly and be recognized.\"\n\n\"I object,\" one of the Idaho Alphas said. \"Luna Adrienne is female and is the current Luna of the Miesville Pack. She is not eligible for the position.\"\n\n\"Alpha Steven?\"\n\n\"I have the relevant section of Council law, sir. 'Eligibility for Alpha Council positions. Any person over forty who is a previous Pack Alpha. If serving as Pack Alpha when elected, the person must relinquish control over the Pack before taking the Council position.' Notice that there is no requirement for the person to be male, and without asking a lady her age, Luna Adrienne meets that requirement.\"\n\n\"She's a LUNA, not an Alpha,\" the Idaho Alpha objected.\n\n\"She was an Alpha of her Pack for months after her first mate died before she turned the Pack over to her son. And thank you for making my second point; she is a Pack Luna, NOT an Alpha. Alpha Leo is and remains Alpha of the Miesville Pack, so Luna Adrienne can serve without changing the head of the Miesville Pack.\" I glared at Steven; he was enjoying this.\n\n\"Do it,\" Leo said. \"Our people need your leadership, and you are the only one who can rally the Alphas to change.\"\n\n\"I need this like a hole in the head,\" I replied.\n\n\"Objection overruled. Luna Adrienne's name will be on the ballot,\" Chairman Kurt said with a sly grin. \"Any other nominations?\" There were none. \"Ten-minute break, then we continue with Council business.\"\n\nI made a beeline for Alpha Steven as others gathered around me. \"You could have warned me,\" I told him.\n\n\"You might have said no,\" he answered with a grin. \"I've had a gutful of people who hunger for the power of the job; it's about time we had the right person reluctantly agree to take it.\"\n\nI rolled my eyes, but he slipped away as others talked to me or congratulated me. The Lunas were in my corner; they knew what this could mean. \"I'll get my mate to support you,\" was the common refrain.\n\nThe next order of business was my presentation. I spoke for over an hour to the assembled Alphas. I started with Vicki's meeting with Master Alexander, through Timothy and Tracy's rescue from his Coven, and the events in Mexico. I finished with an update on the Australian Council and the Southern Cross Pack, emphasizing the mateless Beta-ranked wolves and the inter-species cooperation. \"Our experiences in the last two months show the value of such an alliance, and there is a path to lasting peace if we are willing to travel it. Thank you.\"",
        "I took questions for another hour before we broke for lunch. Our table was popular with Alpha pairs stopping by to ask questions or lend support. In the afternoon, there were other presentations before the speeches by the candidates for Chairman. Under New Business, I spoke out about our current system's failure to help wolves find their fated mates. \"Math doesn't lie. Only ONE new pair out of all the unmated attending this weekend because we cling to archaic rules, bringing the same wolves together and hoping it will be different this time. If you believe the Moon Goddess has a mate for all of us, the answer is simple. Bring EVERY unmated wolf of age together in one place. North American, European, Australian, rogue, EVERYONE.\"\n\n\"That's impossible,\" someone said.\n\n\"Not at all.\" I played the video Chairman Svensson sent; he appeared with Vicki on the screen, inviting all North American single wolves to a meetup in Ireland this June. No one spoke as it finished. \"If we care about our people, if we respect our Goddess, we MUST send our people.\"\n\nThe room exploded in conversation as I stepped down. Leo was grinning as I returned to my seat. \"We haven't had this much excitement at a Summit since Sharkbait first arrived,\" he teased me.\n\n\"No silver collars, trials, or assassination attempts yet,\" I replied.\n\nThe Lunas were excited about the meetup, and several volunteered to help with planning. Our dinner was just as hectic as lunch, with many stopping by to talk.\n\nVoting that night was by rounds and the candidate with the lowest total out. It was by secret ballot with a simple majority required for election. After the first round, I was shocked to be in second place, but no one had a majority. Recognizing the chance for a reformer to take office, two allied Chairmen withdrew their names and threw their support to me.\n\nI had sixty-one percent on the next ballot.\n\nMinutes later, I was sworn in as Council Chairman Adrienne Volkov.\n\nI had a lot of work to do.\n\nCh. 77\n\nVicki Corcoran's POV<br >Dublin Airport, Ireland<br >Friday, June 9<sup>th</sup>, 2034\n\n\"I can't wait to see my mate again,\" I told Adrienne as we waited in the International Arrivals section of the airport. Adrienne had been here for two days, working with the European Council on the SWIM (Single Werewolf International Meet-Up) planning. I'd arrived an hour ago on my connecting flight from Washington, DC.\n\n\"Not long now,\" she told me. Her security detail was unobtrusively surrounding us as we waited outside the gates for the flight from Dubai to arrive. My security was outside with the bus that would take us to our hotel.\n\nShe had no choice in the added security after an unsuccessful assassination attempt. While Adrienne was traveling through Western Canada in late March, attackers used spike strips to take out her car, then shot up her car. The attack killed two Council Enforcers before Leo's car arrived a minute later. He left only one of the attackers alive to find out who sent them.\n\nThe Canadian Alpha responsible turned on his co-conspirators, and three old-line Alphas faced trial for the failed attack. A plea bargain stripped them of their Packs and imprisoned them for twenty years.\n\nIt was a better deal than Leo would have given them. Adrienne doubled down on her reforms, pushing forward with formal treaty talks with Master Cyprian and the Vampires, and beginning talks with the Mermaid population.\n\n\"How is filming going,\" Adrienne asked.\n\n\"Good,\" I said. \"We just finished up a two-week expedition off Cat Island in the Bahamas, studying the Oceanic Whitetip population. Mom loved it.\" Adrienne chuckled; while my wolf colors looked like a Great White, Olivia's were like an Oceanic Whitetip. \"Linda got some great shots of me free-diving with a big one, and I'm getting it turned into a print for her wall. The water's amazingly clear.\"\n\n\"Season two is going to be fun?\"\n\nI nodded. \"It will be a little different since the four of us are married women now.\" Makani and Noelani got married when their SEAL boyfriends had a week of leave in March, right before filming started on the new season. Ricardo and Manuel hadn't taken the change yet, waiting until they had at least two weeks of leave saved up. \"The diving is always good, and our photography is getting better. The Sea Scout is an amazingly stable and versatile platform for filming, and we're taking advantage. We're using remote-operated vehicles, drones, underwater cameras, even mini-submarines now. We still have some Bodyglove appearances, but the focus has shifted off of modeling and boys.\"\n\nAmy and I chose not to renew our Bodyglove modeling contracts, though they remained a sponsor of our show. Makani and Noelani were still under the company's banner until November. Mercedes was trying to convince the twins to keep modeling, but it wasn't going to be easy. All of us were multi-millionaires now that the settlements had gone through with Vespucci's estate.\n\n\"Have you used the cage?\"\n\n\"A few times,\" I said. \"The Scout can carry a much larger shark cage, so we can get camera divers down there and not be packed together. We often had multiple shark cages in use for filming.\"\n\nAdrienne used a deep, gravelly voice. \"You go in the cage. Cage goes in the water. You go in the water. Shark's in the water, our shark.\"\n\n\"Yes, Captain Quint.\" It was hard to believe that the movie Jaws was coming up on sixty years old and that we were still using lines from it. We'd smack Amy any time she tried to use a Sharknado quote, though.\n\n\"Is Amy showing yet?\"\n\n\"We started seeing the baby bump from her twins three weeks ago, and she's finally over the morning sickness at week twelve. Her doctor doesn't want her on compressed air, so she's restricted to snorkeling and free-diving this season. Makani and Noelani are getting more screen time as a result.\"\n\nThe conversation ended when I saw the familiar face walking towards the door. Nicholas exited the secure area and into my arms, kissing me and swinging me around. \"I missed you, my love,\" he said when he finally set me down.\n\n\"I miss you too.\" The twenty-three Pack members attending the meetup, fifteen women and eight men, moved to baggage claim while Master Alessandro, Terry, and Tina and greeted Adrienne. Terry and Tina were the Fremantle-based mermaids who helped kick off the Australian Council. We were taking advantage of the gathering to sign treaties with the two Werewolf councils.\n\nI left them to it while Nicholas and I gathered up our Pack to the tour bus we'd rented. The driver took us towards the Wicklow Mountains to the southwest. We unloaded at a triangular park next to the Saint Nicholas of Myra Catholic Church in the town of Dunlavin. Waiting for us was the European Council Archivist. \"It's an honor to meet you, Henrietta,\" I said to the grey-haired woman I'd only seen on video calls.\n\n\"Welcome home, Corcoran Pack,\" she said with a wide smile as we gathered around. \"How many of you are direct descendants of Philip Corcoran?\"\n\nAll but four raised their hands. \"As you know, Philip was captured and imprisoned in the 1798 Irish Rebellion. Only his age prevented him from the fate of the rest of his family,\" she said. \"English troops located their den and massacred almost all of them. Two men of the Pack, Philip's Uncle Samuel and cousin William, were brought back for questioning and ended up here in Dunlavin. The two joined other prisoners held in the Market House.\"\n\n\"What happened to them,\" Ian asked.\n\n\"Following an attack on an English Captain by rebels, a group of prisoners were taken from the Market House and marched through town by English troops. The soldiers lined them up over here before the soldiers lined up across from them with their muskets. The firing squad executed them all, without trial, as a warning. The soldiers then returned to the market house and flogged or hanged more. In all, thirty-six brave Irishmen died in the Dunlavin Green Massacre.\" I wiped away a tear. \"Your ancestors were among the dead. Follow me, and we can see the memorial to these heroes.\" We walked across to the church, where the Parish Priest met us. He led us to the stone that sat in the grass, a brass plaque marking the event.\n\nI squeezed Nicholas' hand as he fought to avoid crying, but some Corcorans were openly sobbing. Henrietta stepped forward when we'd all had a chance to touch the stone and take photographs. \"The families of the dead hauled their men off for burial, but the Corcorans had no one left. Father, can you show us their final resting place?\"\n\n\"Of course,\" he said. He led us towards the town center in a large group, stopping at a cemetery and walking us to an open area. \"The pauper cemetery was here,\" he said. We stayed for a few minutes, paying our respects.\n\nWord of our arrival had spread, and townspeople joined us in an informal parade to the Market House. Nicholas explained to the townspeople that their surviving ancestor, Philip Corcoran, had been sent to Australia on a prison ship. The crowd grew to over fifty by the time we reached the Market House and the Green adjacent to it. \"There was a song written about the massacre,\" one of the townspeople said. \"Would you like to hear it?\"\n\n\"I would love to,\" Nicholas said.\n\nThe older woman and five others gathered together and started to sing.\n\n\"In the year one thousand seven hundred and ninety-eight\n\nA sorrowful tale the truth unto you I'll relate\n\nOf thirty-six heroes to the world were left to be seen\n\nBy a false information were shot on Dunlavin Green\n\n \n\nBad luck to you Saunders, for you did their lives betray\n\nYou said a parade would be held on that very day\n\nOur drums they did rattle - our fifes they did sweetly play\n\nSurrounded we were and privately marched away\n\n \n\nQuite easy they led us as prisoners through the town\n\nTo be slaughtered on the plain, we were then forced to kneel down\n\nSuch grief and such sorrow were never before there seen\n\nWhen the blood ran in streams down the dykes of Dunlavin Green.\"\n\nI clung to Nicholas and a few others as they mourned for the ancestors he'd never known.\n\nThe whole group headed to a pub for lunch and beers as the townspeople embraced our heritage. Finally, we loaded back onto the bus and headed into the mountains. The bus let us off at a trailhead. \"Don't bring anything along except water,\" Henrietta told us. Once out of sight of the road, we stripped and shifted. Henrietta led us up into the mountains for an hour, finally stopping at a clearing. We all shifted back. \"It took a week, but we finally located this place. We believe it is the location of the Corcoran Pack Den.\"\n\nWe wandered around the site, seeing the loose rock foundations. What the English troops hadn't burned and destroyed, the centuries had finished. It was a sad group that filed back into the bus just before dark.\n\nWe arrived at the Dublin Pack lands after dark, and hundreds were waiting for us. There was no scratch and sniff; most of the people here were single and ready to mingle. Some of my Pack members didn't make it five paces off the bus before their mate swept them up.\n\nI waited with Nicholas until they were all off, smiles on our faces over the pairings made. It looked like every unmated wolf we brought here would be mated by sunrise. \"Luna has done a great thing here,\" I told Nicholas as we walked hand-in-hand to the Pack House.\n\n\"Luna set these pairs up a long time ago,\" Nicholas said. \"YOU did this, Vicki. You formed our Pack. You taught us what mates were. And you convinced the Packs of the world to participate. You're amazing, my love.\"\n\n\"Come on, we have to check-in,\" I told my mate. I was thrilled; bringing new blood into the Pack, already familiar with how a Pack operated, would help our Pack more than any visits and stories I could provide.\n\nTwo days later, the Werewolf world was a different place. Three dozen wolves didn't find their mates out of all that attended, and almost all were female. For the younger ones, it was likely their mate was not of age yet. It was a numbers game; there were more female adult werewolves than male.\n\nThe other sticking point was who went where. My Pack was all Beta blood, and Luna addressed the imbalance by matching almost all our Betas up with Warriors and Omegas. Since our wolves were higher ranked, the mates all agreed to come to the Southern Cross Pack. One of our Beta females mated the fourth son of an Alpha, but they chose to join our Pack instead of his. My Pack swelled us to over a hundred wolves in a day.\n\nFour older females were in limbo. Each recognized their mate from the scent of the clothing I'd brought in ziplock bags; their fate mates were in Australia but didn't want to put aside their wives. They gave me their contact information and pictures to take back home.\n\nI brought my headache to the Alphas and Council in a private meeting. I told everyone what had happened with my Pack and the different paths taken regarding human females as mates. \"I can't force them to put aside their wives, the women have done nothing to betray our kind, yet four female werewolves are in limbo because the males won't choose,\" I complained. \"They won't join our Pack or travel because they don't want to meet their mates.\"\n\n\"You could send their mates to them,\" someone suggested.\n\n\"That doesn't always go well,\" I said. I described how Fiona reacted to finding her male married to a human.\n\n\"Let's say send the females to Australia, and the males reject them in person. The four females get second chance mates, but what happens to the males? If they don't turn and choice-mate their wives, Luna could give them another female. You'll move the problem around, and you haven't solved anything,\" another Alpha said.\n\n\"Would Luna do that to the male who rejects his fate mate?\"\n\n\"There are cases when the male had no choice but to do the rejection,\" the Alpha answered. \"Would Luna treat this the same way? These men have families, and they've sworn fidelity to their wives.\"\n\nChairman Lars spoke next. \"The ones who have taken the change, how did that go?\"\n\n\"Twenty-five females agreed, and all of them made it through the change.\" Jaws dropped at this news; they would have considered it Luna's favor if fifteen had made it.\n\n\"That is your answer,\" Lars said. \"Luna accepts the wives, so they must change and find their mates. If they do not, we know their fated mates will track them down and force the issue. None of us can stop that.\"\n\n\"I know,\" I said. It was going to take time.\n\nCh. 78\n\nVicki Corcoran's POV<br >Los Angeles, California<br >Sunday, September 24<sup>th</sup>, 2034\n\nIt had been a good day, and it could get a lot better tonight. \"I can't believe it,\" I said as I looked at the Emmy statue on the bedside table of our hotel room.\n\n\"You guys deserve it, and I feel great about tonight. Shark Tails is a hit because of you.\" Nicholas zipped up my tiger-shark-inspired dress from my signature Bodyglove line. I checked my makeup one last time. \"I'm ready.\"\n\nToday was a reunion for me, as our groups from our reality series and my Cape Cod documentary gathered. Earlier today had been the ceremony for the minor awards.\n\nThe Emmy Awards recognized excellence in television programming, but there was no way the primetime shows could cover all one hundred and twenty-five categories. At nineteen years of age, I'd won the Emmy for \"Outstanding Host for a Reality or Competition Program.\" It was sitting on the bedside table, ready to go back with us to the theater.\n\nIt would join a few other statues on our table. Linda had taken two awards so far for Shark Tails. She won individually for \"Outstanding Picture Editing for an Unstructured Reality Program,\" and together with Fiona Corcoran and Carly Kanoheh for \"Outstanding Technical Direction, Camerawork, Video Control for a Series.\" Erik Johnson, the Producer/Director that hired me for the 'Sharks of Cape Cod' documentary, won for \"Outstanding Directing for a Documentary/Nonfiction Program.\"\n\nOur security team knocked, and it was time to go. I grabbed my award, and we walked out of our room, joining the rest of my team in the hallway. The Navy made special arrangements for our SEALs to attend the awards. The publicity of the SEAL trainees appearing on our reality show had been a boon to recruitment, and it was easy to see why. Ensign Kai Steele was in his formal Mess Dress uniform; black pants, gold cummerbund, ribbed white dress shirt with a black bowtie, and a white jacket with his shoulder boards and medals. Amy was on his arm, wearing one of the new Bodyglove Maternity dresses in ocean blue. Petty Officers Ricardo and Manuel Jimenez looked great in their dress white crackerjack uniforms with the beautiful Makani and Noelani holding their arms, each in coral-colored mermaid-cut gowns. Linda rounded out our group with her husband Matt in his Australian Navy dress uniform. Our group went down the elevators to the waiting limousines, bodyguards surrounding us the whole way.\n\nIt was a dream come true to walk the Red Carpet of a major awards show. We'd dealt with cameras and paparazzi before, but this was a step beyond. I talked to several reporters on the way inside, smiling and posing for photos. The producers scheduled us to arrive before the television stars and bigwigs. We found our table near the back and set our hardware down as they brought us champagne and sparkling cider. We had ninety minutes to kill before the program started, so Nicholas and I got to talk to the Hollywood elite before returning to our seats.\n\nI wasn't seated for long. \"In the category of Outstanding Documentary or Nonfiction Special, the winner is; Sharks of Cape Cod, Producer and Director Erik Johnson, Host Vicki Corcoran, Expedition Leader, Dr. John Holliday, and Captain Stueben Merrill.\" Discovery Channel had the table next to us, and we erupted in cheers. I joined Erik and his team on the way to the stage. He gave a short speech, and I accepted my second Emmy of the night.\n\n\"Congratulations, love,\" Nicholas said as I returned to the table. I'd barely sat down when our final category of the night came up.\n\nThe host read the nominees for the Outstanding Unstructured Reality Program, and the cameras showed our table as they called out Shark Tails. \"And the winner is? Shark Tails, Producer Vicki Corcoran and Director Linda Cartwright.\"\n\nI let out a scream, and everyone at our table jumped up. Linda and I walked onto the stage where I accepted another trophy, but I had a speech to give this time. \"Thank you so much. I'd like to thank Linda Cartwright and her team for bringing our adventures to the screen. Working with Amy, Makani, Noelani, Linda, and a thousand some sharks has been a dream. I'd also like to thank everyone at Discovery for giving our team a chance, and especially my support back home. Mom and Dad, Ivan and Karen, Unky Leo and Aunt Adrienne, I love you all, and I love my husband Nicholas so much. Thank you.\"\n\nLinda thanked her husband and a few others, then we exited the stage to the left. After photographs, we headed back to our table to watch the rest of the evening's awards. I was floating on clouds, looking down occasionally to see the three statues lined up in front of me on the table. \"I can't believe we won,\" I told Nicholas.\n\n\"You guys worked hard for this show, and it shows,\" he responded as he squeezed my hand. \"Do you know what is going to be fun?\"\n\n\"What?\"\n\n\"Negotiations for Season Three. With Season One an award-winning hit and Season Two filming wrapped up? You've got them over a barrel.\"",
        "\"I'm glad we built those escalators and conditions into the contract. I've had a lot of fun with the after show, too.\" The \"Shark Tails After Dark\" show only took a day to make but was a lot of fun to do. We'd even done live broadcasts from the Sea Scout. I loved talking to the fans and all the little contests we would do. It was making Sharkbait Productions and the Discovery Channel a boatload of money.\n\nWe partied late into the night, with the four of us invited to some of the better Hollywood parties. Two agents tried to convince me to get into acting, but I had no interest. \"All I want is my mate, my Pack, and my sharks,\" I told Nicholas after one of them left us.\n\nOur group met for a late brunch the next morning, and I had an announcement. \"I'm moving Sharkbait Productions and the Sea Scout to Adelaide after this season finishes taping,\" I told my friends.\n\nNo one seemed shocked. \"I expected that,\" Amy said. \"It makes sense now that you, Linda, and Fiona are all living there already. Does this mean you'd be doing production on an Aussie schedule?\"\n\nI nodded. \"The Scout will arrive in Adelaide in early November. We'll film from December through March.\"\n\n\"I won't be able to do that,\" Amy said as she rubbed her large pregnancy bump. \"I won't be in bikini shape for six months to a year, if ever. Kai ruined me for modeling,\" she teased.\n\n\"You've never been more beautiful,\" Kai said as he embraced his mate.\n\nI smiled at my best friend. \"I still want you to be part of the show,\" I said. \"We'll figure out something.\"\n\n\"It might be better for me to bow out gracefully and move on,\" she said. \"Kai will be in training, and I'm not going to leave my babies for any length of time. We'll stay in Coronado unless he's gone for a while.\"\n\nDang. \"I'm sorry.\"\n\n\"Don't be. Even if we stayed in North America to film, I'd still bow out.\" She looked at Kai and smiled. \"I don't need the money, and I don't want to be gone from my babies. I'm going to take care of them and return to school while my in-laws watch them.\"\n\n\"Maybe I can find a cameo, or we can set something up closer.\" She nodded, but her mind was made up. \"What about you two?\"\n\nMakani looked at Noelani for help. \"It's going to be hard,\" she said. \"We don't know what schools they will be attending, and then they join their Teams. I can't be gone for months only to get back before he deploys for a year.\"\n\nNoelani agreed with her twin. \"We're going to have to see what orders Manuel gets. We don't even know which coast we'll be on yet.\" Nothing came easy with a military wife, even a famous one.\n\nAs we said goodbye at the airport, I had a sinking feeling in my stomach. Life was pulling us apart; mates, children, responsibilities, all the real-life things that adulting brought. Nicholas could tell I was feeling down as we waited at the gate for our flight to Minneapolis; he didn't say anything, but he didn't let me go. I started nodding off as he was texting people on his phone.\n\nThe ding on my phone caused me to look down. It was a text from Unky Leo. \"See you in a few hours, Sharkbait. I'm making ribs.\"\n\nI smiled as I composed my reply. \"I love you, Unky.\" Everything was going to be all right.\n\nCh. 79\n\nVicki Corcoran's POV<br >Deep Creek, Southern Australia<br >Friday, March 23<sup>rd</sup>, 2035\n\n\"Relax, my love. The catering staff is ready to go, our home is amazing, and everyone is going to have a good time tonight,\" Nicholas said as he wrapped his arms around me from behind.\n\n\"I know, but?\" I leaned back into his chest and let out a breath. We'd worked fourteen months to get to this point, and it was hard to believe our new home was ready for the housewarming party tonight.\n\n\"But nothing. The hard work is over, and now we relax and enjoy it.\"\n\nI let out a breath and turned around in his arms, pulling him close and taking a deep sniff of his chest. \"I love you,\" I told him. \"You deserve all the credit. You worked your ass off to get this done.\" While I'd been busy with the Sharkbait Foundation, Sharkbait Productions, and Pack and Council business, Nicholas had stayed home and ridden herd on the contractors and inspectors. Thanks to my mate, we'd gotten the certificate of occupancy three months earlier than expected.\n\n\"It's your dream, and we are a team. Nothing would have happened without you. This wall is perfect; I can't believe how much it brings the ocean into the house.\" Nicholas took my hand and walked me forward to the windows. The original plans had a rectangular house, but I loved the view off the end of the point. I had our architect push the limits of the zoning setback, adding a curved southern wall that opened the room into the view. A bench with custom cushions followed the wall, letting you sit and watch the waves. With the windows opened, the sea breezes and smells made you feel like you were out at sea, not in a home. He sat down, pulling me into his arms and kissing me until I couldn't think straight.\n\nMomma Dorothy walked in and stopped us. \"Five minutes until we let people onto the property, kids. Quit with the snorgling and get ready to greet them.\" Dorothy was living with us, taking over the kitchen and helping me manage the Omegas we'd taken in as household staff.\n\n\"Oh, Luna,\" I said. \"I lost track of time.\" I got up and led Nicholas through our home as we made the final checks. Our catering company had four bars set up with drinks and snacks; one in the great room, one in the basement Sharkbait-cave, one in the pool area, and one on the rooftop. The caterers brought in a trailer-mounted smoker to prepare the meats and all the side dishes onsite. The roast pork and lamb had been going since before sunrise.\n\nThe catering company owner was giving final instructions to waitstaff as we walked through the main entrance. The entry door, handcrafted from Australian timbers, showed sharks and creatures of the coral reef in its detailed carvings. The main home was impressive; two stories tall plus a full basement, each level over four hundred square meters of living space. Outside, a stone patio wrapped around the three sides, with stone columns supporting a second-floor deck. The shallow-pitch roof overhung them both and diverted the runoff into water storage tanks for later use.\n\nA six-car garage was across the driveway circle, set into the hillside and painted to match the house. Our deal with the Coastal Commission required us to use rocks matching those on the native cliffs, helping the home blend seamlessly into the surrounding hills. Behind us and to our right, the Pool House extended at an angle, so its southeast side overlooked the cove. Tonight was a warm fall evening, so the glass panels were open to let the breezes through. Beyond that was the three-bedroom guest cabin, one our in-laws and friends had booked up through next Christmas.\n\nNicholas and I had kept our families in the dark during construction. We'd made a decision early on to move into the farmhouse, demolishing the former resort and that ugly starship. Only the contractor's people and the architect had site access; if we met with Pack or guests, we'd often do it in Adelaide on our yacht. \"I can't wait to see their faces when they see it,\" I told my mate.\n\n\"They'll get a good view on the way down.\" The access road had moved away from the coast per the zoning agreement. It now wound along the hills until turning towards the ocean and running downhill to our home.\n\nIt wasn't long until a line of cars and hotel shuttle vans came into view, our security letting them through at exactly four PM. Parking attendants directed them to a marked-off area of grass, and our family and friend started to get out of their cars.\n\nThere were a lot of open mouths and shocked faces as they walked up. \"Welcome to Corcoran Castle,\" Nicholas said as almost a hundred people gathered around us. With the scale and stone veneer walls, it looked like it had been here for centuries. \"My wife and I will each take a group of people on a short tour of our property, and then you are welcome to wander about and enjoy our hospitality.\"\n\nI let Nicholas take his group inside first while I talked to my group about the property and the challenges we had in building it. I took them around the outside first, walking them around the patio before entering on the other side into the great room. The kitchen was on the entry side, and a formal dining room overlooked the cove on the other side.\n\n\"These views are unbelievable,\" Mom told me as we looked out over the ocean.\n\n\"Just wait,\" I promised. I took the group downstairs, where the hallway opened up into the Sharkbait Cave. \"It's like a man-cave, but better,\" I said as they filed into the room. It looked like a sports bar with a long bar, big-screen televisions, pool and poker tables, and a mini-kitchen. What made it a Sharkbait cave was the massive saltwater aquarium that took up the entire wall opposite the bar.\n\n\"Holy moly,\" Leo said as he looked at it. \"That's three times the size of mine!\"\n\n\"Four times,\" I said. \"One hundred thousand liters, or twenty-seven thousand gallons. This baby is ten meters long, three meters deep, and three meters tall. There's access for lighting and diving via a hallway in the back. All the LED lighting, cameras, feeding stations, and controls connect to my phone.\" I pulled up the app and triggered a small feed, the tropical fish swarming the food pellets as everyone watched. \"I can set daily cycles, set moods, even simulate storms with light and waves. What makes it unique is that it's a flowthrough system instead of using jumbo filter systems. We take seawater from an inlet deep offshore. Then we purify, sterilize, and heat it before pumping it in at twenty liters per minute. A separate pipe takes the overflow, and the backwash from the recirculation filters, and releases it back to the ocean.\"\n\n\"Amazing,\" he said as he looked in one of the two thick acrylic panels with a sturdy column separating them. The entire group was gazing in wonder at the artificial coral inside and the hundreds of fish swimming around. \"How the hell do you clean this?\"\n\n\"You dive it once a week,\" I said.\n\n\"It must have been tough to build,\" Ivan remarked.\n\n\"We poured the aquarium with the foundation and had a crane lower the panels in before we put the main floor on. After system checks, we had it drained for eight months until we got it running and stocked it with over four hundred fish in over eighty species last month.\" I loved my house, but I LOVED this aquarium. In the event of an attack, this room was the Pack Safe Room, and I'd still be able to watch my fish.\n\nI showed them the rest of the basement. We had a twenty-seat home theater next door, then four small bedrooms for household staff. The rest of the basement held storage, laundry, and utilities. \"We use multiple ground-source heat pumps to heat and cool the homes, the pool, and the aquarium. There is a sizeable solar farm hidden behind trees up on the hill that provides most of our energy needs. An emergency generator sits behind the garage.\"\n\n\"Those heat pumps are expensive up-front, aren't they,\" Leo asked.\n\n\"As isolated as we are, and as big as this home is, we wanted to be as energy-efficient as possible,\" I said. \"We didn't cut corners in this project.\"\n\nLeo nodded; as a general contractor, he knew just how well-built our home was. We headed back to the stairs, going up to the second floor. \"It's all bedrooms up here,\" I said as I led them into the Master Suite. A California King bed dominated the room, centered on the bump-out and looking over the water. A spacious his-and-her bath suite had separate toilet/sink areas on either side of the deluxe shower and jacuzzi overlooking the cove. Two spacious closets and a sitting area/reading nook finished off the space.\n\nI led everyone back to the hall. \"We designed these rooms for the nanny and the nursery,\" I said. Mom stared at me, her eyes demanding the answer to her unspoken question. \"Mom, it's too early,\" I sent her over the link.\n\n\"You mean you're late,\" she said with a smile.\n\n\"It's only the eighth week. After last time, I'm not saying anything until the first trimester is over. I haven't even told Nicholas yet.\"\n\n\"I won't say anything, but you need to tell him soon,\" Olivia said into my mind.\n\nI turned to the crowd. \"We have five more guest rooms on this level. Thanks to the location, each has a view over one of the coves and private beaches below. Now, if you'll follow me outside?\" I led them onto the deck via French doors from the hallway and around to a stairway leading up. \"Welcome to the Observation Deck.\"\n\nThe pitched roof extended up from the outside of the foundation until it was just over waist-high, then dropped vertically to the decking that covered the top of our home. The stairway exited into a flat, open roof area featuring unlimited views in three directions. A band played at one end, there were tables set up on the other side of the dance floor, and a bar was off to the side. Everyone was at the rails, the warm summer breezes in their hair.\n\nBrent walked up to me and put his arm around my shoulder. \"This is beyond anything I imagined,\" he said. \"You guys did a great job with your home. Your Pack will congregate here, and that's what Southern Cross needs right now.\"\n\n\"Thanks, Dad,\" I said.\n\n\"All you need up here now are some cannons,\" Hammer said as he looked out at the ocean.\n\nWhen the group had seen everything, I led them down a stairway and through a door to the indoor swimming pool. \"We used a polymer, translucent material for the roof instead of glass. It is far more energy-efficient, doesn't collect moisture, and transmits the light without the glare. With low pitch and the walls extending higher, you can't see the panels from the ocean. Zoning rules limited the roof height, so we excavated the pool deck a meter below grade and dug it out from there. This upper level surrounds the pool area and provides access to the waterslides and lounge areas away from the pool itself. If you want to try the slide, go ahead; otherwise, follow me.\" We went down a stairway to the pool, which was divided into areas for multiple activities. There was a play area with deep water for diving off platforms and a three-meter board. In the middle was a chest-deep area for volleyball and basketball plus the waterslide exits, and on the right were full-length lanes for swimming laps. At the near end was a twelve-person hot tub surrounded by a shallow play area with bubblers for the little ones. Next to it was a snack bar and a few tables; lounges and chairs were in groups all around.\n\n\"I know where I'm going to be spending most of the party,\" Makani said as she looked at the hot tub.\n\n\"Maybe later. I want to watch the sunset from the party deck,\" Noelani said. The twins were here for three weeks as their mates were off at training assignments. Both had taken the change and were Beta-ranked wolves in the Three Sisters Pack now.\n\nAmy looked over at me. \"Then Sharks After Dark? I want to get a sleeping bag and crash by the sharks like the old days,\" she said.\n\n\"I'm not sleeping on the floor in this house at my age,\" Susan told her daughter. Hammer just laughed and pulled his mate closer. \"We've got a guest room tonight, and we're going to take advantage of it.\" Both pairs were only in Australia for five days, not wanting to leave their children for more than a week.\n\nI offered to show the guest house to those interested, but I'd lost many to the changing room or places they'd previously seen. Brent and Olivia, Ian and his mate Svetlana, Ivan and Karen, Leo and Adrienne, plus Masters Cyprian, Alessandro, and Emily all joined me for the tour. The guest house wasn't huge, but it had a small kitchen and living room, a master bedroom overlooking the beach, and two smaller rooms. \"It's beautiful,\" Adrienne said.\n\n\"I never expected I'd live so far away from you guys,\" I said as I started to tear up. \"I love you so much, and I miss you. There's plenty of room for you to visit and stay for a while, and you can have your privacy,\" I said. The tears kept coming. It felt like everything hit me at once; stress from the party, pregnancy hormones, and work pressures. Mom pulled me into her lap and comforted me, waving the others went back to the party.\n\nI rejoined them when my emotions were under control again.\n\nCh. 80\n\nVicki Corcoran's POV<br >Deep Creek, South Australia\n\nPeople say that all parties center around the kitchen, but no one at our housewarming wanted to be there. Not with everything else around; they'd take a plate and sit on the window seats overlooking the ocean. Others went to the pool or downstairs to watch the fish swim in the aquarium. I'd been circulating throughout our home all night, greeting people and socializing. It was after ten at night, and I was up on the roof. Nicholas was taking me for a moonlit spin on the dance floor.\n\n\"This night has been perfect,\" I told him as I leaned my head onto his broad shoulder. \"The party went without a hitch, and we caught a break with the weather.\" It was cooling off now, just below 20 Celsius, as I got used to the whole Metric thing. There was a light breeze off the water and a few high clouds in the sky. The railing around the roof had downward-pointed LED lights that illuminated the edge gently without spoiling the view. There were only three other couples on the dance floor and a dozen more drinking at the tables. \"I need to tell you something,\" I whispered in his ear.\n\n\"You're pregnant,\" he whispered in my ear.\n\nI stopped dancing, stepping back from him in shock. \"You knew?\"\n\n\"For a week or so. The nose knows.\" He pulled me back in and started dancing with me. \"I figured you'd tell me when you were ready.\"\n\n\"I'm sorry,\" I told him. \"I just...\"\n\n\"You couldn't say anything until you were farther along because you're afraid you'll lose this one too,\" he told me. Damn, he was good at this mate stuff. \"You're right. Many couples don't announce it to their friends and family until they make it through the first trimester. I think in this case, you should announce it now before the party breaks up.\"\n\n\"Why?\"\n\n\"First off, people already suspect because the scent is faint around you. Still, you'll never have this group of people in one place again. If you wait a month, they will never be able to congratulate you in person. Our Pack can use this, too. Heirs settle a Pack and give them hope for the future.\"\n\nHe was right. \"How should we do this?\"\n\n\"Our parents should hear it before anyone else. Ask them to come up here.\"\n\nI sent them a mental summons and asked them to bring Linda, Amy, Makani, Fiona, Carly, and Noelani too. Those girls had helped me through my miscarriage, and I wanted them to be among the first to know. I led Nicholas to the edge facing the larger of the two coves; with the band taking a break, you could hear the surf below along with the noises from the party and the pool. Soon the group gathered around, and Nicholas held me from behind with his hands around my stomach. \"I have an announcement to make,\" I said as their faces lit up in anticipation. \"I'm pregnant. Eight weeks along.\"\n\nThe screams from the twins caught everyone's attention, and I got pulled from one hug to another as we celebrated the news. Only Mom stayed back since she already knew. Amy whispered in my ear when she got her turn. \"Don't say anything, but we're pregnancy buddies this time around. I found out just before I left home.\" I hugged her extra tight; she was a great Mom, and I was thrilled for her and Kai.\n\nThe bartender poured champagne and sparkling grape juice, and they toasted my news. \"I have to tell the others,\" I said. We repeated the scene in the great room, pool, and Sharkbait's Cave. My Pack was thrilled with me joining the worldwide WolfyBabyBoom. The new couples from the SWIM had wasted no time in adding to our numbers. Mates, transfers, and babies had swollen the Southern Cross Pack to over a hundred and twenty now.",
        "Families had moved into eight of the ten homesites that were part of our zoning, and another five lived in nearby towns. Our Pack was coalescing into two areas; many remained northeast of Melbourne, while others relocated between here and Adelaide. A number now worked for the Sharkbait Foundation or Sharkbait Productions, including a dozen Mermaids.\n\nNobody knew Master Caroline was such a philanthropist until she left most of her estate to the Sharkbait Foundation. Master Cyprian was unapologetic about the eighty-seven-million-dollar bequest to my charity they'd inserted into her will, along with large donations to other conservation organizations. \"It was a good move, Vicki,\" he told me. \"By donating the fortune to charity, it changes the picture with the Government. Foundation lawyers will go to court to get the money, and since no bad guys benefit, the Justice Department isn't as interested in seizing the accounts. It stopped the Federal investigations into Caroline's finances that were looking for drug ties. It forces the next Master to rely on his existing wealth, giving a clean transition to the new leadership. And it's good for you.\"\n\nWe put the money to use. The Sharkbait Foundation had a strong educational and conservation focus, expressed through research, documentaries, and advocacy for marine preserves. The tagging programs I'd started in high school were still going strong; the data allowed us to target areas like mating and nursery grounds for the sharks. The Sea Scout, now based out of Cairns by the Great Barrier Reef and staffed by a crew of mermaids, had become a premier research vessel in Australia. After our reality show fell apart, I'd produced four documentaries on Australian sharks in the past year. When not filming our shows, we worked with university scientists and other organizations to use the Sea Scout's unique capabilities.\n\nAs I was accepting congratulations from people in my Sharkbait Cave, I scented Consuela enter the room. I looked at her and smiled as she rushed forward. \"I just heard,\" she said as she embraced me. \"Congratulations.\"\n\n\"Thank you. How was school?\"\n\n\"Clinic practicals ran late, so I missed most of your party. It's good to see people again.\" Consuela's position was unique; although she'd only been a vampire for a few years, she was more controlled than most and retained more of her humanity. She'd joined Alessandro's coven but wasn't comfortable in Sydney. She lived in downtown Adelaide and went to school for her medical degree under my supervision. I trusted her, and she'd found a home in my Pack.\n\nMaster Alessandro approached with Becky on his arm. \"Consuela,\" he greeted her warmly. \"Still coming back to Sydney next week?\"\n\n\"Right after my exams,\" she replied. Master Alessandro's allowance for Consuela to stay in Adelaide still required her to return to Sydney every month. Young vampires needed training, and she was still in his Coven. \"Are you still getting calls about me?\"\n\n\"The other Masters have gotten the message now,\" Alessandro said. Some older Vampires wanted Consuela for their own, but she was not available. Alessandro wouldn't let her be abused and used again. \"Mexico City isn't happy, but in Australia, we are out of their jurisdiction. Master Cyprian made that clear.\"\n\nI heard a commotion upstairs. \"Vicki, there's a situation up here,\" Dorothy said.\n\n\"What's going on?\"\n\n\"It's Luke Miller. He's scenting and running around in a panic.\"\n\nLuke had turned eighteen two months ago, well after the international Scratch n Sniff, and hadn't found his mate at the North American Alpha Summit. \"Keep everyone clear. His mate is here somewhere.\"\n\nI was trying to think of who in my Pack it might be when I heard a commotion from the stairway. \"Stand back and let him find her,\" Leo yelled from upstairs. I saw Luke rushing down the stairs, still wet from the pool and wearing his swimsuit. His nose was high, and his wolf was forward as he tried to find her. Glowing eyes swept the room, looking for the source of that smell he craved.\n\nMaster Alessandro moved me behind him, not wanting a pregnant woman to be near a wolf seeking his mate. Rational thought could go out of the way, and bystanders could get hurt.\n\nThe guests remained still, moving apart and towards the walls out of the way. They didn't have to worry; his wolf had found his other half, and he ran forward and swept her up, burying his nose in the side of her neck. \"MINE,\" he growled lowly as we looked on in shock.\n\n\"What?\" Consuela was confused as Luke set her back on her feet. She didn't get to say more as Luke started kissing the hell out of her.\n\nI could see her relax into it and stopped Master Alessandro before he moved to separate them. \"Wait,\" I said. \"She's not fighting him.\"\n\n\"Werewolves and vampires cannot be mates,\" the Master said. \"It's never happened before!\"\n\n\"You've got a front-row seat at history,\" I replied. \"Luke's wolf knew his mate at first scent. She was human not long ago, and werewolves have had human mates.\"\n\nHammer and Susan came down the stairs along with the other Masters and Alphas. Luke and Consuela didn't notice as they continued to kiss and hold each other. Luke whispered something in her ear, and she nodded. Before we could stop them, Luke's elongated canines flashed white and he claimed Consuela by biting the left side of her neck where it met the shoulder.\n\n\"NO!\" Master Cyprian couldn't stop it now; Luke was drinking her blood, finally licking the wound clean as his teeth went back to normal. We watched as Consuela's teeth extended into points; Luke bared his neck to his mate, and she bit deeply into him and drank. When she'd taken enough, she withdrew her teeth and closed the wounds.\n\n\"Will that even work?\" I asked the question, but no one could answer. Our first clue came with the healing or lack of it. When vampires fed on humans, their saliva healed the wounds almost instantly, with no bruises or scars left behind. Together with their ability to affect memories, it allowed them to feed off humans and not leave evidence behind. Vampires had super-fast self-healing, so everyone expected the neck bite that Luke gave her to disappear within a minute.\n\nNeither occurred the way we expected. Consuela's neck closed up, but the faint scars left behind pronounced Luke's claim to other werewolves and supernaturals. Luke's puncture wounds healed, leaving the same scars behind on her mate.\n\nTheir activities were getting more sexual by the moment, so I asked Dorothy to show the pair to the one spare bedroom we still had upstairs. It didn't matter if we thought it possible; Luke and Consuela were mates, and they had only one thing on their minds right now. Consuela wrapped her legs around his waist as he carried her up the stairs to bed.\n\n\"Alessandro, the bartender,\" I said quietly. Not everyone at my party was supernatural, and this young woman had just witnessed a werewolf and vampire claiming each other. He nodded, understanding he'd have to remove the memories. \"Everyone else, please join us in my conference room.\"\n\nIn the back of the main floor was our home office, a large room overlooking one of the coves. It had plenty of couches and a conference table, and that is where the leaders of our world sat. Master Cyprian, Master Emily, and Becky represented the Vampires. Leo, Adrienne, Hammer, Susan, and Chairman Lars Svensson represented the werewolves, while Linda and Terry represented Mermaids. Nicholas and I had just sat at the head of the table when Master Alessandro joined us. \"It's happened, so what do we do now,\" I asked.\n\n\"It's Luna's will,\" Adrienne replied. \"Don't get in the way.\"\n\n\"It's never happened,\" Master Cyprian said. \"Why now?\"\n\n\"Maybe Luna is trying a new thing, maybe it's always been this way, but our kinds never interacted enough for mates to find each other,\" my aunt replied. \"The claims show the bond is accepted. We'll have to wait and see what happens next.\"\n\n\"She could kill him,\" Lars said quietly.\n\n\"Vampires only inject venom from their claws as a defensive measure,\" Cyprian replied.\n\n\"And if you have vampire blood in your body, it won't affect you,\" Nicholas said.\n\n\"Our kinds are each affected by taking the other's blood,\" Emily said. \"We will have to wait and see what happens over time. She will feed off him often, I would expect.\"\n\n\"And werewolves like to bite,\" I said. \"They need to be together, and I don't want the first interspecies mates to end up in the Minneapolis Coven. I think it would be better for everyone to leave them here, in our Pack. Consuela will continue to train with Master Alessandro as before, and she can remain in University.\"\n\n\"Luke is still in high school,\" Susan said.\n\n\"He probably has enough credits to graduate, and if not, he can complete his coursework online as I did. He can start college next year with the other Pack members.\"\n\n\"It's up to them,\" Hammer said. \"If they want to return home to the Miesville Pack, I would ask Master Cyprian for help in defusing any issues that would come up. If they choose to stay here, then his mother and I have no objections. We know he will be safe in the Southern Cross Pack.\"\n\n\"Master Cyprian?\"\n\n\"I agree,\" he said. \"I have to say, Vicki, spending time with you is never boring.\" There were laughs around the room at this. \"As you say, new things are happening, and who knows what they may lead to?\"\n\n\"Just wait until Consuela gets pregnant,\" Susan said.\n\n\"Vampires can't get pregnant,\" Emily scoffed.\n\n\"Twenty minutes ago, we were all convinced vampires didn't have mates,\" I replied. \"I won't put Luna in a box; if she made them mates, it was for a reason. We will have to see. I will ask Consuela to research the changes that their mating has on them.\"\n\nIt was silent for a bit before Nicholas spoke up. \"The scratch 'n sniffs will be more interesting,\" he said quietly before we all started laughing.\n\n\"Let's go back to the party,\" I said.\n\nThe band and the catering staff left at midnight, allowing the party to go Full Wolfy. The pool guests removed their suits and inhibitions with the all-clear announcement; shaggy wolves started sliding down the waterslides into a swimming pool filled with mermaids, and mated pairs took advantage of the giant hot tub. Others headed down to the beach, building a fire in the private cove, while others ran up the canyons and hills on a kangaroo hunt.\n\nI ended up with Nicholas and my girls at a table in the pool area by the snack bar, where we were cooking pizzas in the oven as fast as we could. We were laughing as we told stories, catching up after our time apart. I had to leave and do the hostess thing after I finished my pizza.\n\nNicholas and I stayed near the entrance so we could say goodbye to our guests as they left. By two in the morning, everyone that wasn't here for the night was gone. I ended up sitting in front of my aquarium with my Mom and Dad. The room dark and empty as we watched the fish swimming in the simulated moonlit night. \"I love you, Dad,\" I told him as I rested my head on his chest.\n\n\"I was right, you know,\" he said as he pulled Mom closer on the other side.\n\n\"When?\" Mom's voice held a touch of sarcasm.\n\n\"When you were getting ready for your eighteenth birthday party, you were nervous about finding a mate that night and having your whole life change. I told you that day you were an amazing young lady. You are smart, driven, beautiful, and a natural leader. Then I told you not to be afraid of your destiny. Do you remember your answer?\"\n\nI nodded. \"I wanted to choose my destiny for myself.\"\n\n\"And I told you Luna laughs at your attempts to tell her what to do. You needed to trust that she has your best interest at heart and be open to what she gives you.\"\n\n\"I remember,\" I said as the tears started to flow.\n\n\"Luna did well with you,\" Mom said. \"It wasn't easy, but you've got so much now. I think tonight proved Luna is not done with you yet. We couldn't be prouder of the woman you have become. \"\n\n\"Thank you,\" I said softly.\n\nI fell asleep with my head on Dad's shoulder in front of the sharks, just like I had dozens of times before in Leo's basement.\n\nTHE END\n\n \n"
    ],
    "authorname": "partwolf",
    "tags": [
        "action",
        "diving",
        "mermaid",
        "pack",
        "vampire",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/sharkbait-down-under-ch-71-80"
}