{
    "title": "Shy Ronny",
    "pages": [
        "Are you legitimately hung like a horse? So fucking thick girls have turned you down for sex? So long you rearrange a girl's insides and never quite get that balls deep experience you have been dreaming of? So fat you put a coke can to shame, and can't wear tight pants without making girls pass out? The kind of guy the term \"cock shock\" was invented for? If so... I have a once in a lifetime offer for you. I want you up my ass*. That's right, I want to give a lucky, monster cocked guy a chance to not only TRY anal, but to pound that monster balls deep in a tight asshole while I whimper and moan under you, feeling like I might split in half at any moment, and loving every minute of it. If you're big enough to fit my needs, I'm willing to bet you have never had a chance to go in the backdoor before, and I would love to challenge myself on your dick. \n\nPlease don't waste my time if you're just a bit big or are TOTALLY into it but don't measure up. I am ONLY looking for a nice fat monster cock. Be polite, be direct, and be sure to show me what you're working with. Play your cards right, and we'll have the kind of weekend we can both hardly walk away from. \n\n*I said ass, and I meant it. The butt and nothing but. This is a ONE-hole offer. My pussy's not up for grabs and if you're big enough you won't fit past my jaw anyway.\n\nRonald \"Ronny\" Jones read the post, blushing furiously, and then read it again. He was never sure why he kept coming back to the personals section on Fetlife. It was not like he ever had the guts to message any of the women on here, hell, he was too embarrassed to even follow any of the cute girls he saw on the site. But this post... fuck... This post was something else. It was like she was calling out to him through the monitor. He had clicked on the profile that went with the post and saw that it belonged to a gorgeous young dirty blond. Behind the domino mask she wore in all of her pictures, her eyes were the most captivating pale blue. In the photos that didn't display her face.... well, the rest were of her taking truly impressive toys up her ass, in all sorts of outfits and positions. The largest of her toys was almost as big as he was, and that made him wonder. His usual nerves almost stopped him from replying, but the third beer gave him just enough courage to force out a short greeting and provided him with the requisite can for his reference pics. He quickly snapped a couple photos with his phone and attached them to his reply before he could overthink it, and then waddled off to the shower to deal with the achingly hard erection the mysterious woman's pictures and advertisement had given him.\n\n \"Hi... um. HI there. You seem really... um... nice. Anyway, I saw your post, and I think I might fit the bill, maybe? Anyway, sorry to bother you, pictures attached. If you're not interested, I totally understand. -Ron\"\n\nAmanda rolled her eyes at the message. It was hardly the confident, direct approach she looked for from a man, and she nearly deleted it before realizing there were three pictures attached. Bracing for another boring 8-inch cock, her eyes widened, and her pussy clenched as she took in the impressive sight of Ron's equipment. The first picture was just of his cock, curving away from his body under its own weight. It looked intimidating, a fat pillar of vein-crossed flesh, the head a swollen purple mushroom tip flaring out. He was shaved, and that only served to make it more impressive, as there was nothing to hide the long expanse of him. In the second picture, he gripped the base, his fingers not able to close fully around his girth, highlighting just how big he must be, and making it clear it was not photoshopped. The third was the required can shot, his cock clearly visible on either side of the can, the shaft protruding up at least 3 or 4 inches past the top of the can.\n\nAmanda bit her lip, realizing her skin was flushed, and her cunt was dripping from just those three pictures. Part of that was probably the effects of the cruel anal only challenge she was undergoing, but regardless, she WANTED that cock, even if it was even bigger than she had hoped, or imagined when she posted the ad. She paused to scan his profile, and found it mostly, empty, some boring \"nice guy\" platitudes in his 'about me' section, and one headshot that showed a cute, but kind of mousy-looking guy. Surprisingly, there were no other shots of that cock of his. She would have expected someone packing that much meat to be swinging it all over. Regardless, he did not read like a serial killer, and for that much cock, she was willing to make the leap in responding. Before she could change her mind, she typed a hurried response then grabbed her wand massager and headed for her room, once again glad that 'No Pussy November' did not include restrictions on clit play this year.\n\n\"Damn, Ron, you more than measure up. Are you free this weekend? I have my place to myself, and I think I want to try this out before I chicken out. You in? - Amanda\"\n\nOh shit... she said yes. now what? Ronny stared at the screen in something of a blind panic for several long minutes. He could feel himself blushing, the blood rushing first to his face, and then elsewhere, making him a bit lightheaded. He dithered, even debated delating the message. She had to be catfishing, right? No one that sexy would be interested in him. But... she said she was... Finally, the insistent ache from the embarrassment between his legs won out, and he typed a quick reply.\n\n\"Yea, I'm free. Just um, where and when?\" He hit send before he could stop himself, and then scuttled to the shower for the third time that day.\n\nA few more messages passed, hammering out where and when they would meet, and discussing other details that only served to ratchet up the tension between them both, and then finally, it was time. Ron bit his lip, shifting nervously from foot to foot. He was there, in front of the modest townhouse she rented. All he had to do was press the button. 2B - Amanda Smith. He could already feel himself pressing against the baggy jeans he wore, the flush he could never seem to escape crawling up his neck once more. He reached out for the button, then let his hand drop. There was no way he could do this, it was crazy.\n\nJust as he was about to turn away, the door opened, and there she was.\n\n\"Hi! I saw you standing there. You were not considering chickening out on me, were you? After all, I'm the one who should be intimidated.\"\n\nRon just gaped, totally at a loss for words. Amanda was even cuter in person than she had been in pictures. Without the mask, her face was a bit softer, younger than she appeared with it on. His eyes traced downwards of their own accord, drinking in the smooth expanse of skin she was showing off, a low-cut tank-top exposing the curves of her breasts. He caught himself, looked up and caught her eyes, that startling pale blue boring into him as a mocking smile slipped over her lips.\n\n\"Like what you see, big boy? You can see a lot more if you come inside...\" She stepped back, and he shuffled nervously into her front room, a small hallway with a coat rack, and stairs disappearing down and up, leading higher or deeper into her house. \"There is no need to be so shy. I won't bite. Let me take your coat. Shoes off as well.\" Ron found himself doing as he was told almost without thinking, nerves had him almost shaking, and he mechanically shuffled out of his coat, letting the shorter girl take it from him and hang it up while he stepped out of his beat up sneakers. \"There you go, now, up the stairs, I think we both need a drink, don't you?\"\n\n\"A drink? I don't really. Um... that is, I don't usually.\" He trailed off, realizing she was already heading up the stairs, the tight jeans she was wearing showing off her ass as she swayed around the first bend.\n\nHe tried to ignore both how hot his skin felt, and how tight his jeans were feeling as he follower her up into an open plan kitchen, where she was already mixing something in two glasses.\n\n\"Here you go. Drink up, big boy.\" She smiled as she said it, pushing one drink towards him as she took a sip from her own, her eyes raking him up and down as she did so. Not bad, I guess. She thought to herself, trying to gauge what his build was under the baggy sweatshirt and those loose, tattered jeans. He certainly did not dress to impress, but with what he was packing, maybe he didn't need to. She took another, even bigger sip of her drink as she watched him gulp his own, trying and failing to mask his wince as the burn hit going down.\n\n\"You really don't drink much huh? It's just a long island.\" She giggled at him, unable to help herself. The blush it brought blazing back to his cheeks was cute, but he was SO nervous it made her wonder. \"You're not a virgin, are you, Ronny? \"\n\nHe froze, the drink all but forgotten in his hand. \"Um. Well... that is...\" He hated himself for stammering but could not seem to get his brain to engage properly.\n\n\"You ARE. Fuck, that's so cute. It's ok. Technically you still will be, I think?\" She trailed off, looking at him speculatively. \"OK... that's enough teasing... I wanna see.\"\n\n\"Um... See?\" She rolled her eyes at him and crossed her arms under her breasts.\n\n\"Yea, duh. Come on, out of those pants, time to prove to me those pics you sent were not just photoshopped bullshit.\" She twirled her finger in the classic 'get on with it' gesture, and tapped her foot impatiently. They were both surprised to discover Ronny could, in fact, blush even more red than he had already been. He opened and closed his mouth a few times, but nothing came out. Finally, hesitantly, he moved his hands to the front of his jeans, clumsily undoing his belt, and then fumbling for the button and zipper. With one last shy glance at her, he pushed, and his jeans slid down his legs, taking his boxers with him.\n\n\"Holy fuck!\" Amanda gasped, unable to contain herself. The photos had, if anything, not done him justice. His cock curved away from his body, already semi hard, but dragged down by its own weight, and gravity's undeniable pull. Amanda could feel her mouth water, and her woefully unused cunt clench as she took in the sight of him. He was totally shaved, the shaft intimidatingly thick, nothing hiding the impressive curve. Between his legs, his balls hung low, full orbs that would have looked oversized on anyone less well-equipped, but on him, if anything, the baseball sized testicles seemed too small. She fought the urge to fall to her knees before it, something that impressive just demanded worship. Before she did anything to embarrass herself, however, she was snapped out of it by his mousy, dejected voice.\n\n\"Um... if it's too big, I can go...\" He could not even bring himself to look at her, 10 years of locker room teasing, and a few painfully embarrassing \"dates\" were running though his head, spoiling the moment and keeping him from registering the looks of lust and wanton desire that had rolled across her face as she took him in.\n\nShe shook herself, reminding herself she was in charge, and that this was supposed to be a one-hole deal. Moving closer, she wrapped one hand around his shaft, just behind the wide, flared head. Or at least, she tried to, it turned out that even semi-soft he was too thick for her to get her fingers all the way around. She looked up at him, her other hand gripped his chin and forced him to meet her eyes. \"You are WAY too big, but that's exactly what I wanted, silly boy. I don't want to hear any more of this whining or moaning. In fact, the only things I want to hear out of your mouth are 'Yes, Miss', 'no, Miss', and 'oh fuck, Miss, I'm going to cum'. Do you understand?\"\n\nHe blushed and opened him mouth. \"Umm...\". At that, she squeezed his cock hard, turning whatever he was going to say into a groaning whimper instead.\n\n\"Umm, was NOT on the list of things you are allowed to say. Now, try again.\"\n\nHe bit his lip, took a breath and managed a soft, \"Yes, Miss.\" She smiled up at him, leaning up to give him a peck on the cheek, her hand keeping a firm grip on his cock.\n\n\"There you go, I knew you could be a good boy. Now, step out of those jeans, and follow me. I can't ride you standing in my kitchen after all.\"\n\nBoth of their minds were racing as she tugged him by the cock down the hallway and into a small living room, barely giving him time to step out of his jeans. Ron could not believe this was really happening. Was he really going to have his first time with the gorgeous woman? Did she really... LIKE... his cursed thing? He kept expecting to wake up from yet another cruel dream, but he did not, and the warm tight grip of her hand was all too real as she pulled him into the living room, and then backed him up until he fell down onto a low couch.\n\nAmanda was close to panic in her own way as she pulled her big new toy down the hallway. How could he be this big? Had she bitten off more than she could chew? How was someone this hung not a lady-killing stud? She half expected to wake up from yet another denial-fueled dream, but she did not. That massive cock was still there in her hand, hot to the touch, and too big to fit her fingers all the way around. She shivered; this guy was going to split her in half if she was not very careful. As she turned and pushed him backwards towards her couch, she was glad she had prepared for almost any eventuality.\n\nAs Ron hit the couch, Amanda finally let him go, only to straddle his lap a moment later, the rough fabric of her jeans slid over his cock, making him wince slightly.\n\n\"OK, Ronny, we made a deal, and I plan to keep it, but you have to be a good boy, and let me do things at my own pace, ok?\" As she spoke, she slid her hands up his chest, getting under his shirt, and forcing it upwards, finally pulling it up and over his head. As it fluttered to the ground behind the couch, she ran her fingers along his shoulders, and then leaned left, pushing his arm out until it hung over the back of the couch. Leaning out after it, she slipped his hand through a cuff, and tugged it tight, trapping his arm.\n\n\"Hey, what are you...?\" As she felt him start to struggle, she settled back into his lap, letting her ass grind over his cock more firmly.\n\n\"Calm down big boy, I just need to make sure you don't get too enthusiastic, ok? Just relax, let me do this, and I promise you won't regret it.\" She worked her hips as she spoke, running his cock back and forth between her cheeks, the rough fabric of her jeans making it a painfully pleasurable sensation.\n\n\"Ohh fuck... um... Yes, Miss,\" he finally responded, settling back into the couch.\n\n\"That's a good boy.\" She leaned the other way, running her hands across his pecs, over his shoulder, and down his other arm, the other cuff sliding home and ensuring he would not be going anywhere.\n\nWiggling backwards off his lap, she stood, looking down at him as she took in his whole form. He was really not bad looking -- maybe a little chubby, but there was plenty of muscle on his frame. Tied as he was, she could admire every inch of his front, but her eyes were inevitably drawn to his cock. It was still not totally hard, curving away from his body between his widespread knees. She pouted a bit, sticking out her full bottom lip.\n\n\"You're not even hard for me. I feel like I should be insulted, but maybe you just need a little extra to get all that blood pumping huh?\" He opened his mouth to speak but she shushed him. Moving to the corner of the room, she flipped on the stereo, a nice bass beat pumping through her speakers as she swayed back to the center of the room, feeling his eyes on her as she ran her hands across her body, from her neck down across her breasts curving over her toned belly, and down, bending to put her cleavage on display for him, showing off her flexibility.\n\nAs she came back up, her hands slipped under her tank top, and she worked it up her body, still swaying to the beat of the music, teasing him with the slow reveal of the lacy red bra she wore underneath. As the song sped up, she tossed her tank top aside, and twisted, curling her body around until she faced away from him, undoing the buttons that held her tight jeans in place as she swayed. Slowly, she worked the straining denim down over the swell of her ass, feeling Ron's eyes locked on her ass as she revealed not only the matching red thong, but the base of the fat glass plug she had been wearing since early that morning, and which the skimpy underwear did nothing to hide.\n\nAs the song ended, and another began, she kicked off her jeans and turned around, smiling as his now much harder cock. The mammoth pillar of flesh standing almost upright between his legs, glistening from where thick drops of precum had started to ooze from the tip, and slide down his shaft. \"Did you enjoy that Ronny? It sure looks like you did.\"\n\nTied to the couch, naked and exposed, Ron could only stare in rapt fascination as Amanda put on her little strip tease for him. Blood rushed through his ears, and his cock throbbed with every beat of his heart, getting harder and harder as she danced for him. He blushed when he felt the first drop of precum oozing down his shaft, he was not even being touched and already he was leaking.\n\nClad in only her underwear, she moved back between his spread legs, and finally gave into the urge to kneel between them, both hands reaching out to wrap around the base of him. \"Fuck, you're even bigger than I thought. how can you be both a shower and a grower, huh?\" She did not wait for a response, instead sliding her hands slowly up his shaft, feeling the thick, sticky trails of his precum sliding under her hands as she forced out more of the thick cream, fighting the urge to lean forward and lick the next fat bead off the tip of his cock before is slid down to ooze over her fingers.\n\nBy the time she wrapped both her warm hands tightly around him, he was already ready to explode. As her hands started to move upwards, he whimpered, embarrassed to feel that familiar tightness in his balls. He struggled to hold back, at first biting his lip, but as she kept going, slowly working her way upwards, his inexperience started to get the best of him. \"Am... um... Aman... uh. Miss!\" He stammered, unsure what to say, hoping to stave off the inevitable, but it was already too late.\n\n\"What is it, Ronny? Am I gripping too tightly or som... oof!\" Even as she spoke, he involuntarily threw his head back, crying out as his premature orgasm overtook him.\n\nHis cock pulsed in Amanda's hands, and the first thick shot of cum arced up into the air, to splatter down across her breasts. In surprise, she foolishly looked up, taking the second and third shots across her face as his balls pulsed, pulled up tight to his body as he pumped out shot after thick shot, every one of them worthy of someone his size. Amanda held onto his cock in shock, feeling it pulsing under her fingers as his orgasm continued, pouring out with less velocity, but no less volume, splattering her breasts, and then finally oozing down coating his cock and her hands.\n\n\"Fuck,\" she finally said as he relaxed back into his bonds. \"You could have at least warned me.\" Cum oozed off her face, dripping onto her coated tits. Her nice lacy bra a soggy, sticky mess.\n\n\"I'm... so... SO sorry, Miss. I just um. It just... uh... happened,\" he babbled, head down in embarrassment.\n\nAmanda grinned, pulling her cum-coated fingers off his cock and carefully scooping the worst of the mess off her face, sliding two cum coated fingers between her lips, and slowly sucking them clean before pulling them free with a wet pop.",
        "\"It's OK, big boy... as long as that was not all you had for me.\" She paused to suck two more fingers clean, getting the rest of cum off her face, and moving down to her chest. \"I have never seen a guy cum so much... but you and I are SO not done.\" As she spoke, she scooped more of the thick cream from between her tits, letting him watch as she finished sucking her fingers clean. She frowned down at her cum-stained bra. Reaching back to unhook it, she shrugged out of the now soggy lace and tossed it aside. She looked up, and followed Ronny's gaze downward. Leaning forward, she pressed her arms together, presenting her still cum covered tits for his inspection. \"Like seeing me all covered in cum, Ronny? I'm impressed. Do you usually cum this much?\"\n\n\"Um... uh...\" He stammered once more, and she giggled, reaching up and pressing two still-sticky fingers to his lips, shushing him even as she smeared his own cum across them.\n\n\"That was rhetorical, Ronny. Now, you had your fun, you better not cum again until I'm done, understood?\"\n\nHer eyes flashed as she reached out with her other hand, wrapping it tightly around the base of his softening shaft and stroking upwards, forcing the last of his cum to pour out and down, his whole cock coated with it. He whimpered, still in the grips of post orgasmic oversensitivity, but Amanda did not care. She stroked him over and over again until he started to harden once more. \"There you go, big boy. I knew a nice fat cock like this had to be good for more than one round.\" After a few more strokes, she paused, and with a wicked little grin pulled a hair tie off her wrist, stretching it over her hand before rolling it down his cock to the base, letting it snap tight around him. \"Just a little extra help to keep you from blowing before I'm ready.\" Satisfied he would be nice and hard for her, she stood and swayed over to an end table, returning with a massive bottle of thick lubricant.\n\n\"As hot as it would be to just use all that cum you wasted as lube, you're way too fucking thick to go in without some of this, I think,\" Amanda mused -- more to herself than to Ronny -- as she popped the cap off, and let the thick clear liquid drizzle down over his still cum slick cockhead, watching it pool there until it slid slowly down the sides. She kept pouring until he was coated and the excess was drizzling down over his balls before snapping the cap shut. \"Mmm, I guess this is it then. Time to see if I can really take something this fucking big.\" She set the bottle down and pointed at him. \"Your job is to sit there, and hold still, understood? No thrusting, no helping, just sit still, and let me work. You're tied down for a reason, I can't have you getting overeager and trying to force that thing home or you'll split me in half. If I want you to move, I'll tell you, understood?\" Ron could only nod, biting his lip in either anticipation, or embarrassment.\n\nTurning around, Amanda carefully wiggled out of her panties, wondering if Ronny noticed the huge wet spot she had left in them. Tossing them aside, she bent over, looking back over her shoulder. Ronny was flushed, eyes locked on her ass, and the fat plug that still held her open. His cock was fully, achingly hard once more, the tight hair tie ensuring it would stay that way. Now that she was sure she had his attention, she reached back, working her fingers under the base of the plug, and started to pull. She groaned softly as she did so, feeling her asshole resist at first as she tugged on the plug she had been wearing all morning. All her training served her well, however, and with a few relaxing breaths she was able to pull the plug free, her backdoor gaping open for a few moments before closing. \"Mm fuck, that's my biggest plug... and you're even bigger...\"\n\nAmanda trailed off, setting the plug down next to the lube, and standing. She moved over to the couch, putting her back to him, and finally, cautiously, she started to lower herself onto his lap. She felt him press against her cheeks. Not between them, he was too thick for that, he just pressed against them, until she reached back to spread herself, feeling that blunt monster finally slide between.\n\n\"Fuck, you really are huge, big boy. Just, hold still and let me get a feel for this. Ok?\" He felt even bigger than he looked, and she bit her lip, questioning if this really was a good idea. Settling back, she pressed harder, and he slipped forward. The sudden loss of resistance caused her to overbalance. She fell backwards with a yelp, landing in his lap as every inch of that fat cock slid between her legs and ground along her pussy lips, teasing her denied hole and making her cry out from more than just the shock of the fall. Taking a breath, thankful he had at least slipped between her legs, and not into anything else, she looked down. His cock bobbed between her spread thighs, extending upwards to nearly reach the underside of her tits. She shuddered, imagining what that much cock was going to do to her insides -- assuming she managed to get it in at all.\n\nAfter a moment to compose herself, she pushed back up to her feet and turned around again. \"I think I need a different angle for this. You're doing well holding still so far.\" Stepping up onto the couch, she straddled him, lowing herself back down, this time facing him with one arm around his neck for balance, and the other reaching back to guide that oversized cock where it belonged. \"There we go. Just hold very, very... oh fuck... still!\" As she spoke, she settled more and more of her weight, keeping his cockhead pointed directly at her backdoor with her other hand.\n\nShe could feel the pressure building as she lowered herself. It was too big, and there was nothing to open around. All she could feel was a hot, relentless pressure building against her asshole. Stubbornly, she kept going, lowering more and more of her weight onto him, and finally, she felt herself starting to stretch open. It was nothing like one of her plugs, no slow widening of that tight ring of muscles, she was just being forced open all at once, the lube allowing just enough give for that fat head to slip deeper and deeper between her cheeks. They both whimpered and groaned as the pressure grew, and she felt herself forced wider, wider, and wider still.\n\n\"Fuck... how are you not in yet?\" she asked, breathlessly. Her asshole was burning with an aching stretching pain that she only ever achieved with her largest toys, and still she had not even taken the head. She struggled to breathe and to relax. The entirety of her focus narrowed down to the pressure, the aching, burning pain, and how much both sensations were turning her on.\n\nShe might have tapped out then, deciding it really was too much, but under her, Ron shifted. Not much, and almost certainly not intentionally, but he shifted his weight under her, and with a last burning flash of overstraining muscles, his head popped inside. Amanda's eyes flew open, and she cried out, throwing both arms around his neck to hold on him as her asshole clenched and spasmed around the sudden intrusion.\n\n\"Oh fuck, oh shit, oh fuck, too much!\" she babbled. Her backdoor clamped tightly around his massive shaft, while her inner ring was forced as wide as it had ever been by his cockhead. For his part, Ron did everything he could to hold still, his own brain overloading with the sensations of having his technically-virgin cock crammed into a hole tighter than he could ever have imagined.\n\n\"Don't... you... fucking... move,\" Amanda finally managed to say though gritted teeth. \"Not an inch. Not a muscle.\" She was clinging tightly to his neck as she spoke, urging her weak thighs not to let her down until she managed to adapt. And slowly, she did. The burning, white hot pain of overstretched muscles started to recede, just a bit, and an oddly intense feeling of satisfaction started to creep over her. It helped that he was so thick she could practically feel him in her pussy as well; the thin wall separating them stretched, her cunt compressed by the sheer size of what she had just shoved up her ass.\n\nExperimentally, she tried pulling up, and quickly gave up the idea, feeling as if he was going to turn her inside out as her already sore asshole asserted that it was totally unwilling to stretch that wide again so soon. She took in a deep breath before letting it out slowly and attempting to settle down into it instead. The sensation was intense, to say the least. As she moved herself further onto his cock, she could feel him slipping deeper, stretching her insides. The first couple inches were almost a relief, as that oversized head pushed past her overstretched inner ring, his thick shaft a relief, at least in comparison.\n\n\"OK. OK,\" she assured herself, \"I can do this. You're so fucking lucky you met me, Ronny, you know that?\" She looked down at him, realizing for the first time just how intimate this position was as she lowered herself. He had been mostly smothered by her cum-coated tits as she struggled to take him, but as she slowly, achingly forced him deeper, they were getting closer and closer to being face to face. His expression was almost unreadable, a confused mix of pleasure and pain, as his oversensitive, and now achingly hard cock was squeezed in the vice of her asshole. Hers was a look of intense concentration, as she tried to block out all the warning signals her body was sending her about just how far past her limits she was. Her thoughts narrowed to a simple mantra. Breath In, breath out, push down. Breath in, breath out, push down. Her thigh muscles were starting to ache from the strain of holding herself up, but there was no way she could sit down yet. She kept checking with her free hand, each time shocked by how much of his shaft there was still to go.\n\nSlowly, achingly, she forced herself to take him. She could feel him getting deeper and deeper in her belly, stretching out every inch of her, forcing parts of her straight that were not supposed to be. It hurt, but it was the kind of hurt that made her ache for more, so she kept going. Finally, an eternity later, her cheeks brushed his thighs, and she settled down with a last breathy sigh. It felt like his cock was shoving the air out of her lungs, but she had done it, she had taken that monster cock balls deep.\n\n\"Ohh fuck, you SO owe my Ronny. How does it feel?\"\n\nRon looked dazed, breathing heavy as if he had done a great deal more than just sit there as she impaled herself on him. \"It... feels... fucking... incredible,\" he finally managed, his voice barely over a whisper.\n\n\"I'm glad you like it, because we're just getting started.\" With a bravado she did not feel, she started to force herself upwards again, shocked at how much of a struggle it was to pull that fat cock free of her guts, inch by clinging inch. It should have been easier, as it was going through territory already explored, but she felt every single inch, and she could only whimper as the head ground across her g-spot from the wrong side, making her empty pussy clench in response. Finally, she had just the head inside, and she held it there, feeling her inner ring burning once more from the stretch, before she lowered herself, a bit faster this time. The sensation made her gasp, feeling him rearranging her insides, forcing her body to conform to his size, to his needs over her own. The fact she was doing it to herself only heightened the strange and bizarre feeling.\n\nOnce again, her cheeks met his legs, and she grunted, the breath exploding from her lungs. Once again, she forced herself upwards, feeling him stretching her out on each pass, that exquisitely intense moment when he ground across her g-spot, still from the wrong side. She worked herself into a rhythm, up and down, riding his cock and rearranging her own guts, stretching herself out until his monster of a cock could slide in and out easily. The aching, burning, stretching pain morphed into the deep, aching pleasure that only the largest cocks or toys could drag out of her, the confused pleasure of warm flesh stroking nerve endings not designed for the sensation. She came, or at least she thought she did, her cunt clenching on nothing as his cock ground over her g-spot relentlessly.\n\nShe lost track of time, lost track of herself, and did not even notice when he too lost himself and began to thrust upwards, desperately meeting her downward strokes, until the room was full of the wet sounds of flesh hitting flesh, both of them moaning, whimpering, and gasping for air. Another deep, rolling orgasm dragged through her, making her writhe atop him. He responded by thrusting upwards even harder, straining uselessly against his bonds as his own edge drew closer.\n\nFinally, he begged.\n\n\"Please... oh, Miss.. please!\" She struggled to bring enough of herself together to respond, meeting his desperate eyes with her own.\n\n\"Do it,\" she commanded. \"Cum for me.\"\n\nThose words were all he needed, and he threw his head back, crying out as he thrust himself as far inside her as he could, hilting himself as he came, balls pulsing and throbbing to force his orgasm past the hair tie, past the tight seal of her asshole, to erupt inside her. She could feel him filling her, far deeper than anyone ever had, and she lost herself in the sensation, one hand gripping his hair and pulling his head to hers as she kissed him deeply, forcing her tongue into his mouth and drinking down his whimpering moans as he came again and again, pouring himself inside her until she felt as if she might burst.\n\nFinally, their energy spent, she collapsed back down onto his lap, one hand moving to her stomach, where she could feel a slight bulge, gradually receding as he finally softened inside her.\n\n\"Damn, Ronny, that was... wow... that was something.\" She grimaced, the ache in her thighs, and the screaming of her abused asshole starting to make themselves known through her endorphin rush. \"I hope you're up for another round eventually. I'm pretty sure you just ruined me for other men.\" He could only smile, too spent to properly respond.\n\n \n"
    ],
    "authorname": "Prof_Owen910",
    "tags": [
        "anal",
        "power bottom",
        "shy",
        "size queen",
        "first time",
        "huge cock",
        "virgin",
        "fdom",
        "msub",
        "femdom"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/shy-ronny"
}