{
    "title": "My Little Ventrue Pt. 05 Ch. 07",
    "pages": [
        "~~Jack~~\n\n\"Promise me ye'll keep this a secret,\" Fiona said to the two of them. \"Azamel's warning wasn't for aw folk to hear. I screwed up.\"\n\n\"I hadn't told anyone about this before you brought it up.\" Laughing, Jack gestured to the darkness ahead of them. \"How'd you get us here? One moment I was in a jungle, next I'm walking through dark again, now I'm... in a warehouse?\" Yeap, warehouse. The large, dirty windows high above, the towers of metal beams holding rows upon rows, shelves upon shelves, of boxes, the forklifts, and all the amenities. He did not envy anyone a job moving or boxing products, dealing with nothing but enormous walls of capitalism personified. Slave labor.\n\n\"Mmhmm.\" Giggling, the Scot tugged on their hands, and dragged them both through the warehouse, between the isles of boxes piled sky high. A big damn warehouse, exporting some sort of toy or blanket or something equally innocuous. \"There's a lot of tricks I've learned from Vrall. And, both in the dream, and in the physical world, I can see the gates.\"\n\n\"... gates?\" Damien said, glancing around. \"This is Banner's Fields warehouse. They sell... I don't know, really. Nothing anyone cares about. I don't see any gates.\"\n\nJack nodded. \"And we should be careful. Could be people working late.\"\n\nFiona took a moment to glance around, and everyone took a longer moment to listen. But other than distant cars, it was unlikely anyone would be around this late in North Side. Damien shook his head too; no one around.\n\n\"Lads, there are tunnels atween worlds. Ye ken nae everything is limited to the physical world, to these flesh and bone things we all like so much. There are... strange places, in the beyond. And ye ken who can see those places? Visit those places? This lass.\" She pointed her two thumbs at herself.\n\n\"... what sort of places?\" Jack said.\n\n\"I'm nae sure, honestly.\" She shrugged, and skipped ahead, sneakers kicking along the concrete, and fingers touching boxes as she moved by. \"There's the Shadow world, that the Uratha deal with. Begotten don't normally go there, according tae Vrall. Nae reason to. The things there are... they aren't what we need. We cannae feed off them.\"\n\nJack tilted his head to the side as he followed after her. \"Something monsters can't eat? The spirits?\"\n\n\"Exactly. That place is... it's a shadow, and it doesn't have what we need for food, like we find in folk. Nothing for us to devour. And, it's a dangerous place.\"\n\n\"More dangerous than Dolareido?\" Damien didn't sound convinced. \"Considering the ritual Jack described, I find that hard to believe.\" Walking slow, he continued looking around, eyes open for anyone that might be nearby, and no doubt ready to turn on his cloak of night if needed. \"And, we have assault rifles and explosives here. Shotguns too.\"\n\n\"They have entities that defy reasoning!\" She leaned in toward Damien, hugged his arm to her chest \u2014 hoodie and jeans were hilariously cute on her \u2014 and waved across the empty air over her. Parting the night sky they couldn't see. \"Trees that talk. Deer with wings. Roads that walk.\"\n\n\"... roads that walk?\" Jack said. What? How the fuck did that make any sense?\n\nFiona laughed at him, and poked him in the shoulder. \"Ye'll find out soon enough. But, be careful to not... do anything? I dinnae ken much about this world, except that it's dangerous, and there's these... we'll, maybe ye'll be able to make sense of it. I can't.\" At the end of the warehouse, before a roll-up door, she held out her hands.\n\nAnd the world changed.\n\nDamien and Jack stepped back, and drew weapons as the wall started to vibrate and screech with a loud hammering, as if a hurricane had shot itself across the ocean and decided to pay them a surprise visit. The walls shook, trembling with the weight of the impacts Jack could not identify. The walls began to do more than vibrate, they began to bend. Both vampires ducked, expecting the twisting material to shatter or explode with the colossal pressure, but the walls had no intention of losing their solidity, bending with a curve of the air like looking through shaped glass.\n\nIt was like looking into a black hole. Fiona kept her hands up, fingers trembling, the horror inside coming out and engulfing her in its form. No longer simply Fiona, but the Vrall creature as well, both standing there, both with hands outreached. Vrall had a lot more limbs though, and she used them against the air, pulling it apart to expose the guts of the universe. The universe didn't like that, and the little bit of light in the warehouse flickered, lost to the void descending on them. Jack expected the light bulbs overhead to shatter, and rain down sparks, or for fire or lightning to crack the air. Instead, he stared into a void, a black void that cut into the emptiness before them. Black didn't do justice to describe the depth of the abyss.\n\nWhat was the name of that new black, blacker than black black? Vantablack? Blackest? Like that, something that pulled his eyes in until he felt like he was sinking.\n\n\"You... found this?\" Damien said.\n\n\"Mmhmm. Someone, or something, made it, a long time ago. And there are others, in the city. The wolves don't know about them, or at least don't use them, but they don't need them to get into the Shadow world. And these gates can go other places too, if you can find them.\"\n\nJack gulped, and stepped beside her, and the deadly spider creature sharing her space. \"You can't make them?\"\n\n\"Maybe some Begotten can. I can't. I can tunnel into the dream, and into this physical world. But other places? I have to find those doors, like this one, and they're almost always locked. But...\" With a big, happy grin, she winked at him, and looked back to the portal before them. \"Begotten are monsters. True, real, monsters. We go where we want.\"\n\nShe yanked her hands apart, and tore the blackness open. It bled gold and white over them, a rushing water that had both vampires reaching up to block it with their hands. But it did not touch them, despite washing over them, covering them, burying and drowning them in the flowing colors. Plenty to see, colors shining, but nothing to touch them, like it didn't exist.\n\n\"I... holy shit.\" Jack lowered his gun, and looked out to the sides of golden road ahead of them. Not a road, no, an unending wall of fog, that was a road, that was surrounded by swirling gray cracking against an endless tapestry of blacks and vortex whites.\n\n\"Stay on the road,\" she said, hand gesturing out to the gold before them. \"There are... things, in the black out there. And ye could get stuck, or lost, or... or things. Vrall has memories of things in the black, dangerous things.\"\n\n\"In the black?\" Damien caught up, and looked out to the void around them, the dark gray of a storm incoming, with ebbing onyx tipped with curving sparks of silver. \"Something... something lives in there?\"\n\n\"Something lives everywhere.\" Fiona shrugged, rubbed her arms a little, tiny shivers working up and down her arms and legs. \"I dinnae ken what or how something can live in this wall, this strange wall, but things do. Other things live in the Shadow, where we're going, and other things live in... other places. Live, in their own way.\"\n\n\"Nightmares,\" Jack said.\n\n\"No, that's where I come from. That's what I am.\" Fiona hip bumped him. Her horror was gone. Now, it was a only the girl, a small, curvy little redhead with a grin on.\n\nHe remembered the bloody Dolareido nightmare. He remembered the stairway to hell, where Athalia waited for him. He remembered the jungle, dark, filled with rot, insects, howling monkeys and growling jaguars. The smothering humidity that threatened to drown him, if he needed to breathe. The two moons.\n\nNone of that was as scary as the wall he was walking through, the unimaginable, the strange, a wall he couldn't begin to think about in terms of measurements. Might as well have been an optical illusion.\n\nAt least nightmares made sense, in a way, a thing born of human fear, and human imagination. His simple, weak little mind couldn't handle the width of a literal dimension he was walking through. Would it even look like a gray and black void filled with white lightning to others? What would the Uratha see? What did Fiona see?\n\nMaybe he'd be better off not seeing where this rabbit hole took him. Ah well, too late.\n\nThe golden road was a gateway Fiona had found, not created. That alone was terrifying enough. But, as they moved along, and the golden road came to end, a wall of a new color presented itself, silvers, with black jagged streaks running down through them.\n\n\"Someone tore this door open from the other side,\" Fiona said. \"Ye can see it 'ere. Can ye see it? There are... na words I can use to describe the shape or color, na English words for them.\"\n\nGuess his gut was correct then. A simple little vampire; Athalia called his kind nothing more than blood leeches. Now, looking up at such alien and colossal constructs, things well beyond him, things that monsters touched upon in their everyday life, he couldn't blame her for looking down on him.\n\n\"I can see... a little of damage, I think?\" Damien said. His sword was still in his hand, but Jack doubted it'd do anything to anything in this place.\n\n\"It's closed now. I'll open it.\"\n\nJack leaned forward past Fiona a few inches, eyes staring at the bleeding, crackling colors. \"I don't understand how you're doing this.\"\n\n\"The world is our playground, Jack.\" Her voice dropped deeper, losing its giggles and chuckles as she stuck her hands out, Vrall shadowing over her once again. \"The physical world is our feeding ground, but the whole world is... well, ye'll see.\"\n\nThe white cracks of lightning broke away, and the silver cascade of waterfall aether started to split, as Fiona's arms began to shake harder. Big grin on her face, despite the tonal shift of the voice. She was happy to be doing this for them, taking them along on this perilous journey into fucking only God knew where. She knew, but she was some sort of inter-dimensional traveler! Biggest leap Jack had made this far out of his comfort zone, of his own choice anyway, was visiting a club. This was a bit bigger a jump.\n\nHe tried to imagine Azamel doing this, the titanic, giant elephant monster, opening doors for the two little vampires. He couldn't.\n\nThe door, or silver waterfall, or whatever the fuck it was, split apart, and the next world greeted them. The gold and white of the road, the black, gray, and white lightning of the wall between realms, it all collapsed and shattered, crashing down around them with explosive effect. Jack and Damien jumped, smashing into each other as each leapt away from the walls that had once surrounded them, threatening them with its void. For a moment, Jack thought he was inside a mirror, and someone had come along and smashed it, like falling sparks, bits of mirror glass splitting and crackling around the asphalt around them.\n\nAsphalt! Street! Oh thank fucking god. Jack climbed off of Damien, and tapped on the street a few times with his palms, before bouncing up onto his feet. Yes, asphalt, something he understood. Damien held out a hand, and Jack yanked him up so the two of them were standing, and looking behind them. The wall of the factory where Fiona had originally opened the strange gate. Now they were on the other side, out on the street.\n\nIt looked like a dinosaur had gone to town on the wall. Enormous claw marks decorated it, jagged, snaking, black lines left in their wake; the poor building was ripped into. The claw marks didn't penetrate the wall, but they looked deep enough, big enough, like they should have. Instead of being able to see through the giant slash marks, he found only a strange blackness inside the slashes. Staring into the void? No, the void, or wall between realms, had been black and gray, with white lines, to his simple Kindred eyes. Whatever he was seeing beyond these slash marks, was solid black.\n\n\"Torn... open...?\" He looked to Fiona, and she nodded as she scanned the scar marks herself.\n\n\"I guess ye cannae see it? I can see the gate, and the damage this thing did, opening the gate. But nae on the other side where we entered the gate, almost as if someone opened the other side with a key.\" She shrugged, and reached out a hand to press against the wall of the factory, beneath one of the enormous scars. \"I've seen other gates too, with this sort of damage, opened from the physical world's side though. Someone or something is traveling around, and doing... something. Lot of somethings. But that's why I brought ye lads! Ye're the smart ones, sneaky ones. I bet ye'll be able to find out who.\" She shrugged, and gestured back out to the street behind them.\n\nJack and Damien stared on, and gulped.\n\nThe Shadow world. The most ridiculous name he'd ever heard, but, as he looked across the darkened asphalt, the twisting and bending street lamps, the moon above fading in and out like a heartbeat, and the skittering black wisps on the air, he couldn't think of a better name.\n\nIt was Dolareido! It was, and it wasn't. What the fuck was going on? He stepped out onto the street and peeked left and right. It was North Side, not too far from South Side at this point, and normally there'd be visible traffic no matter the time of night in this area. Not here. And yet, it was Dolareido, sort of. The street lamps all had a bend to them, and a bit of a corkscrew twist, each pointing toward South Side. Bats flew by, but they weren't bats. Eyeballs? They had tendrils, tentacles even, so they looked a bit like a squid, who happened to have a giant eyeball in the center of the main body.\n\nThe insanity didn't stop there. It wasn't obvious at first, hidden in shadows and the uneasy lights that never stayed perfectly consistent, but there were things, moving things. Jack drifted toward a sidewalk, and looked up and down the building. The windows were solid black, and they dripped of a clear liquid. Water? He bent down by the building's side, and squinted at what looked like rats. Except, not rats. Their features weren't defined enough, as if someone had only done the basic layout of a rat, and forgot to tighten it up with specific fingers and toes or a face. And it wasn't running, it was floating, a couple inches over the pavement. Three of them hovered together, and moved along the base edge of the building, into the shadows beyond.\n\nHe looked up, and gasped. A crow! Except it was huge. Gargantuan and overwhelming, the great creature flapped its wings once, twice, and settled on the top edge of the building.\n\n\"... from Gurihal?\" it said, blinking its immense black eyes at them. The head tilting was very birdlike, but it was talking English. The voice was crow-like though, a half caw, half croon sound.\n\nEither this was a strange coincidence, or crows and Dolareido had more of a connection than Jack thought. Mental note: get back to the real world and give Mulder and Scully some attention. They deserve it.\n\n\"You speak English?\" Damien said.\n\n\"Yes. I speak English. Give me your names, tiny bugs.\"\n\nSo very tempted to say 'well fuck you too', but, that wouldn't work so well on this side of the wall, he imagined. Oh good god he was going to play intermediary to spirits, or at least, first contact... ambassador?\n\n\"I'm Jack Terry, Kindred of the Invictus,\" he said, to the giant talking bird. Hard to wrap his mind around, hard to accept, but there it was, sitting on a building with black windows that continuously dripped rain despite the lack of rain. \"I'm investigating this.\" He gestured to the damage behind him.\n\nHe had no idea if it was a good idea to be honest with this giant bird thing. It wasn't like it was a secret, but having these spirits know who he was wasn't the smartest idea. Lying wasn't necessarily better. Welp, when in doubt, go with your instincts. Something Jessy would say, he was sure, and something he'd never do in the past.\n\n\"... so you are the Terry.\" The enormous creature flapped its wings once again, before settling down, and began preening itself.\n\n\"The Terry?\" Fiona said, standing beside him. \"I'm sorry, ye know about Jack?\"\n\n\"... you wish to know?\" It flapped its wings once again, thrice this time, and the heavy air fell on them with the gust. Jack couldn't identify the smell. Kind of like Mulder and Scully, but not. \"Trade.\"\n\nDamien frowned, and came in close to the two of them. \"We should leave. We have seen what we wanted to see.\" Hand back and pointing to the enormous claw marks and the dark abyss they left behind, he came in closer until he was almost touching foreheads with them. \"This place is unnatural.\"\n\nFiona shook her head. \"It's nae unnatural. This place is old, Damien, just as old as the physical world that ye think is the normal world. Been 'ere since...\"\n\n\"Since the divide. But, that is not knowledge for me to share.\" With a long, gentle caw, the bird entity stuck its head out, and tilted it to the side to look at them with one eye. \"I will tell you why people know the name Terry, if you will tell me why you have come.\"\n\n\"... you could lie,\" Jack said.\n\n\"Could I?\" The creature shook its head, ruffled its feathers, and clawed at the building's roof edge a few times.\n\nDamien did not like that. Frowning all the more, he began to walk around, pacing, steps slow and calculated, eyes darting around. Normally he'd walk with his hands in his overcoat pockets, but he had them out, sword drawn and free hand ready to draw his pistol at a moment's notice. Would those things even work in this place?\n\nThis was the third Dolareido the three of them had seen, now that he thought about it. The physical one, the specific nightmare version that Fiona had found, and now some sort of mirror world of Dolareido. Why, why couldn't things remain simple, grounded in solid matter? This was turning into witchy magicy overload. He had to get back to the physical world, go hang out in a club and seduce some ignorant kine, or maybe stalk the alleys and catch one by surprise. Hunt on the asphalt, hunt in the buildings made of wood, brick, marble, concrete, and steel. Wear sunglasses at night and edgy trench coats, typical vampire stuff. Solid things he could wrap his mind around. Looking around at the spirit world was giving him the impression it wasn't solid at all. Felt solid, but whenever he let his eyes linger on something, he started to notice a piece of it wasn't holding perfectly still.\n\nPoor Damien couldn't have been happy about this. Visible confirmation of a parallel world probably didn't jive too well with his beliefs. Jack didn't think they were mutually exclusive, but he was no expert.\n\n\"Ye cannae lie?\" Fiona said.\n\nThe crow shrugged. \"Maybe?\"\n\nOk, diplomatic moment. Trust the bird. Don't trust the bird? He knew nothing about negotiating with spirits, and he doubted any Kindred did. The Uratha did, but they wouldn't share that information. What did Avery say about the spirits? They existed for one purpose only, to spread their influence, and for the case of spirits, that was a far more impactful, palpable thing. And how they went about doing that wasn't something that just happened to be a motive, it manifested in the spirit itself, if those sex spirits were anything to go by.\n\nWhat did that make this bird? It was enormous, and it was a crow. A bird well adjusted to living in the city, smart, observant. And maybe it wasn't only the bird itself, but what did crows represent? He had no idea if what they represented would affect its portrayal here, but, crows were often considered signs of death in some cultures, signs of messages and revealing information in others. In Dolareido, they were the denizens of the sky, as much a part of it as the humans living there, so people generally felt. Maybe that was it.\n\n\"... like I said, we're investigating,\" he said, and he gestured back to the cut in the world, the slithering black lines, and the deep crevices they'd left. \"We want to know who or what is causing things like this, as there are more damaged gates like it.\" ",
        "\"Oh? You search for knowledge about the scars?\" The bird picked at a feather under its wing a few times, before eying them once again, head to the side. \"Why?\"\n\n\"That wasn't part of the deal. I told you why we came here. I don't need to tell you the why of the why.\"\n\n\"... I see why the eyeless one mentioned you.\"\n\n\"... w-what?\" Jack looked to Damien and Fiona, and his fellow Kindred winced as he grit his teeth. Fiona did too, a moment later once she pieced it together. \"Jacob was here?\"\n\n\"The eyeless one may or may not have been. I tell you that he mentioned your name, to some denizens of the Hisil. I need not tell you how.\"\n\nHeh, yeah, fair play. But, why would Jacob bring him up? And who did he bring him up to?\n\n\"... two minute conversation with the first thing that can talk in this realm, and we're rendered confused as all shit.\" He looked behind him, to the enormous scars. Go back? They probably should go back, it wasn't sa\u2014Damien tapped him on the shoulder. Jack looked at him, and followed his gaze up, to the sky.\n\nA cloud was coming. Massive, black, and unless he was hallucinating, it had wings. A lot of titanic, black wings, that spread across the sky. It cut through the moonlight, and shimmered as the moonlight struck it, caused it to gleam with far more presence than any cloud should have. And, after a quiet moment with everyone staring, it cracked lightning, a streak of blinding white that hit the city somewhere in the distance. But a second later, the skull-rattling thunder said it wasn't so distant.\n\n\"Um, Fiona?\" Jack said, backing up.\n\n\"Y-Yeah, let's go.\" She tapped Damien on the shoulder, and began to back up toward the scar.\n\nThe bird didn't like that. It flew down, and let the impact of the wind gush knock them back a few feet as it fell in front of the damaged wall. \"Why do you leave?\"\n\n\"Um, because of that thing?\" He pointed to the incoming cloud.\n\nThe crow shrugged, if that's what a shrug looked like on a crow anyway. Jack's crows never did that, never raised their wings up at the tip toward their heads. Human gesture on a crow was strange.\n\n\"The Harrowing Provisioner? It will come, it will go. You three, you must stay. Talk with me.\"\n\nCome and go? Giant death cloud will come and go?\n\n\"I don't trust you,\" Damien said.\n\n\"Smart, smart to not trust.\" The crow nodded its head up and down a few times, each time turning its skull to look at them with a different eye. \"But, safe with me. Jacob is no friend of I. Black Blood and his agenda do not concern me either. Come, I'll show you.\" The giant crow started walking, same as Jack's crows would. Which made no sense, because the larger an animal, gravity and mass distribution across surface area worked differently. But, it did anyway, same as Azamel's giant horror did. Nothing in these worlds ever followed the rules.\n\nOk, follow the enormous spirit crow, or run away, from a possible treasure trove of information. He already had his hands full with hunting down the hunters, and trying to learn more about the ritual that had the picture of him. He really shouldn't be biting off more than he could chew. But he wanted to know more about this Black Blood too.\n\nWhat the heck.\n\n\"Alright,\" he said, and shrugging at Fiona and Damien, he followed after the enormous bird. \"What's your name?\"\n\n\"I am the City Sky.\" It nodded, cawed, and continued along. Birds could walk, and it was often easier for them to do so than fly, from Jack's experience. But seeing a giant bird do it was bordering on hilarious.\n\n\"City Sky? I... I suppose, yeah, crows do represent the sky of a city, in a way.\" The name made him smile. Fellow citizens, denizens of the sky. He had it right.\n\n\"Jack,\" Fiona said, catching up to them, \"this is dangerous. We cannae trust this spirit, and who the fuck knows what's waiting out 'ere for us?\"\n\n\"You don't know?\" he said.\n\n\"Na! I don't explore this place. This isn't for Begotten. These spirits have as much mind as the wind or stone. They are wind and stone! Without a subconscious, there's nothing for me to feed on.\" Shivering again, she rubbed her arms, and looked out into the city streets, and the twisted reality it had. \"And there are things 'ere we should be scared of.\"\n\n\"Black Blood is busy,\" Sky said, turning its head and pecking Fiona in the arm, hard enough to make her squeak and jump away. And Jack laughed, cause it was damn funny to see a huge crow peck at a person smaller than them. Funnier, to see her punch back, and miss, as the crow yanked its head back and hopped away.\n\nHe really needed to go find Mulder and Scully the moment this insanity was done.\n\nDamien came up on the other side of the bird. \"Busy? Do we care about this Black Blood?\" For all the madness being dumped on them on the reg, Jack was surprised the man was looking the bird up and down like it was a mythical, dangerous creature of legend, and not just a big bird. Jack was starting to become jaded, at this point, to the wonders that existed beyond what he knew only a year and a half ago, much as he preferred the solid world. And Fiona might as well have been walking down Ordinary Lane, despite the fear she was showing.\n\n\"Black Blood has much to say, much to control, in Dolareido,\" the bird said.\n\nJack chuckled. \"I'm surprised you call it that, Dolareido. I figured it'd have a more spirit-y name.\"\n\n\"It does. Translates to: Blood-Flowing-Sex-City. Jacob laughed, when he heard that. Called it Dolareido.\"\n\n\"You met Jacob?\" he said. Blood-Flowing-Sex-City was a bit of a mouthful, but apt.\n\n\"Yes. Trade?\"\n\n\"... do we have to trade? We are trading anyway, that's what a conversation is.\"\n\n\"Spirits trade.\" The bird laughed, if it could be called that, a weird cawing croon sound, and pecked at its breast feathers some before it resumed walking. \"But, not all trades must be so exact. So, yes, conversation. Yes, half-head,\" the bird said as it glanced Damien's way. Jack had to try doubly hard to not laugh at the hair remark, and Damien's half shaved head. \"Yes, Black Blood is dangerous. Very dangerous. Controls much of Blood City. The Harrowing Provisioner does not get along with him. Neither does Red Tide or Street-Tail King.\" \n\n\"Who are they?\"\n\n\"Powerful. Powerful entities.\" Caw caw. \"Politics in city are dangerous. Uratha meddle, try and fix problems. Sometimes work. Sometimes. You?\"\n\n\"Ha, yeah, not too dissimilar a boat, actually. Uratha causing trouble for us, but helping us out too.\" Careful, don't throw away information by being too honest. Control your Achilles heel. Oh, oh, oh! \"Does the name Minerva sound familiar to you, Sky?\"\n\n\"Yes.\"\n\nYes! Oh shit, he was dancing on the edge of another precipice, and this one was pure information. Even more dangerous.\n\n\"What can you tell me about her?\"\n\n\"Nothing. Know nothing.\"\n\n\"... shit. Where did you hear her name from?\"\n\n\"Where did you?\" Caw. Good play though, good play on its part.\n\n\"Jacob and the Uratha said her name. She was Jacob's old love. Killed by the Uratha over sixty years ago.\"\n\n\"Oh! Big info, big. Very big.\" It nodded, a bunch of times, never stopping its bird walk though. \"Black Blood once mentioned her, to his wraiths, long ago. Maybe sixty years ago. Something about failure. That's all I know.\"\n\nThis creature had gone from uncooperative, to very, in a small amount of time. Either Jack had a natural affinity for crows, or this spirit of the city sky spoke a language Jack understood: city gossip, the sort of gossip an eavesdropping crow might be interested in.\n\nA hand on his shoulder pulled him back. Fiona, eyebrow raised, and glaring into him.\n\n\"Jack,\" she said, \"this isn't a good idea. What are ye doing?\"\n\n\"Sky is giving us info, info we so terribly need.\"\n\n\"It's a spirit, Jack! Spirits give nothing for free.\"\n\n\"So I've noticed. We're trading information.\"\n\nDamien stepped in, pushing Sky's beak out of the way so he could stand in close. \"You're trading information with a spirit, and you have no idea what the repercussions of that will be.\"\n\nTypical Kindred. He could understand the paranoia, the concern, always looking over the shoulder thinking an enemy was on your tail. But they were flying blind, in trying to figure out this warning Azamel gave them. They had to try something.\n\nAnd maybe, City Sky might know more.\n\n\"Sky, do... have you ever heard of a ritual, involving a human sacrifice, and drawing body parts?\"\n\n\"I have, I have.\"\n\n\"Know anything about it?\" Booya!\n\n\"No,\" it said. Fuck. \"But Street-Tail King does.\"\n\nHe looked back at Damien and Fiona again. Both were shaking their heads. What do what do what do what do.\n\n\"Where is Street-Tail King?\"\n\n\"Near the Blood Tower.\"\n\n\"... can\u2014\"\n\nDamien and Fiona both grabbed him, and started dragging him back to the gate. Shit.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\n\"You ok Kat?\" Eric said. The little dumbass meowed at him, and rubbed against his leg. \"Probably didn't even know I was gone.\" Meow meow.\n\nRolling his eyes, he sat down on the couch, lay down, and put his feet up on the arm. Kat wasted no time, and jumped onto his chest. Within moments, she had her head against his neck, forehead pressing into his jaw and under it, body vibrating with purrs. Not a care in the world.\n\nHe looked around at the boxes lying everywhere, and smirked. Other cats would be upset, other cats would be freaking out, other cats would be backed into a corner and hissing at anyone nearby, if their home was getting uprooted. Not Kat. Kat was beyond dumb, and he appreciated it. Loved her for it.\n\nMaybe he needed a woman in his life, of similar temperament and intelligence? That Fiona girl was a joyful sort, and perhaps not the sharpest tool in the shed. A lot of similarities between Kat and her, young and stupid and eager to make friends. Then again, so was his wife, in a way; her joviality hid the insidiousness underneath, though.\n\nHe set his hand on Kat's ears, and began to scratch. Gentle little strokes of the fingertip along her cheek, under her chin, around and over her eyebrow, and the inner tip of her ear. She wasn't a big fan of the full body stroke, much preferring to keep it localized to the head and neck. So he did, and smirked as her purring increased in volume, until it was like a massage against his chest.\n\n\"Tomorrow, Kat. Tomorrow we'll be moving to a new place. Bigger, better, a lot more room for you, and less smell.\" The scent of pot and cigarettes was soaked into the walls at this point, and his new nose did not appreciate it. \"You'll probably see Jessy at some point, more than likely. And maybe that Fiona girl.\"\n\nHe closed his eyes, and let his mind drift to the two women. Fiona's body, curvy, hourglass, short, stacked. Her cute button nose, her long, frizzy red hair, her bright smile, her gold eyes. The feel of her insides clenching on his finger had been heavenly. The sight of her large, soft breasts jiggling as she came on his fingers, had been intoxicating.\n\nAnd then there was Jessy, his new boss. Muscle, lean and curvy, plentiful breasts bouncing against her defined chest, abs crunching and rolling as she ground on his dick. The blissful smile.\n\nHe was getting hard just thinking about the two of them.\n\nThe divorce had put a serious dent into his sex drive, he knew that, but since the changes had started to happen, his dick had returned with a vengeance. Sex was on his mind all day, every day, since that first night at the club with Jessy and Fiona. He tried to pass it off, and not let the manipulative vampire realize how much he was hurting for it; but no doubt the woman could read through him. She had a lot of years on him, and probably knew how to manipulate men \u2014 and women \u2014 easily. So he cut himself a break, and didn't beat himself up over letting her manipulate him. Win win scenario for everyone involved, far as he could tell.\n\nHe spent a lot of time looking for a catch in the deal too. The dangers were upfront and spelled out for him though, and the new rules and walls on his life were plain to see. If there was a catch he couldn't see, it was hidden damn well, because everything else was told to him straight. And the perks? God damn, the perks were amazing. Getting his idiot dad to a better hospital was great. Getting himself into a luxury suite on top of that was even better.\n\nGetting his life controlled by vampires and their dark agendas, not so much. A gilded cage.\n\n\"... the dreams haven't stopped, Kat.\" Sighing, he sat up, and adjusted his baby so she was on his lap instead. Damn girl didn't even bother to open her eyes. \"They're only getting worse.\" Nightly, vivid dreams, or nightmares, about hunting and defending territory, about howling at the moon, about the moon trying to talk to him, none of that was stopping. \n\nWhere the fuck was Fiona?\n\nHe got up, set Kat down on her tower, and walked around. Boxes all over the place. Ultimately, not as many boxes as he figured most people would need. He threw out most of his old shit from his old life, or sold it. Paintings and crap, sold. Pictures of him and his wife, thrown out, sometimes burned. The really nice blender he used to have? Sold. The pillow cases that his wife had picked out? The texture alone warranted burning, tainted by the whole experience.\n\nSomething about divorce brought out the worst in people, the thousands of idiosyncrasies that grated on each other building up to explode over years of being at each other's side. A lot more going on in that marriage than just her being the asshole; he'd been one too.\n\nHe sighed, set his hands down on the counter top in his kitchen, and took a moment to do some exercises for his bad knee. Slow, gentle motions, keep things aligned, keep things flowing smooth.\n\nThe box on his counter labeled KITCHEN SHIT was filled with nothing but utensils, plates, cups, and some other bare bones miscellaneous crap. Maybe now he could afford some fine china again? Ha, no, never again. Fuck the useless crap, fuck anything that weighed him down with pointless burdens. From now on, if it wasn't something he was going to use at least once a month, he wasn't going to buy it.\n\nMaybe he'd try living without a car for a while? He was within walking distance of his new job, and if he wanted to go anywhere, the thought of driving there made him gag. Then again, the thought of being in a cab made him gag twice over. Never again.\n\nKat jumped up onto the counter, rubbed against a box, and then against his arm. Needy, so needy. He chuckled, and started to scratch and stroke her chin once again.\n\n\"What do you think, girl? Think you'll like a luxury suite? Expensive furniture included, ready for you to destroy.\" Meow. \"A hot tub for you to avoid like the plague.\" Meow meow. \"And I'll start getting you the best food, all wet food, chicken and turkey and duck and rabbit.\" Meow.\n\nKnock knock.\n\nHe raised a brow, and looked down at Kat. The idiot did not hesitate to jump down from the counter, and walk from the kitchen, through the living room, and up to the front door of his shitty little apartment. Meow. With a sigh, he followed after her.\n\n\"Kat, that could be a huge dog barking itself hoarse and you wouldn't care. Come on, get outta here.\" He scooped her back with his foot, and stepped up to the door. But, didn't open it, using the peep hole instead. Something told him not to look, to step back, something in his gut. His gut had been talking to him a lot lately, telling him so and so was dangerous, so and so was not, and so and so was easy prey. His gut helped keep him alive during that whole fiasco with Fiona and the hunters. And his gut was telling him to step away from the door. Maybe he should listen to it more.\n\nToo late. The door greeted him with all the enthusiasm of an avalanche, and his attempt to peek through the peep hole gave it free reign to destroy his face.\n\nThe world went black, and then red, as he fell back onto his ass and spine. The cheap, thin carpet of his living room said hello, and slammed into his skull, two-teaming him with the door. The world got blurry along with the red, and pain joined in a moment later.\n\nHe knew his nose was broken. The sound of crunch combined with the blood splatter, and the warm sensation filling his sinuses made that easy to discern. And there was a certain sort of pain that came with a broken nose, a lovely mix of a high spike, and then a gargling headache. All his new senses, undone by the constant smell of smoke, the background noise of an apartment, and the idiocy of thinking his door would protect him.\n\nWolves were right to stay in the woods.\n\nHe forced himself onto his palms, and looked up. Through the swirling images taunting him, he recognized two faces, and didn't recognize two more.\n\n\"Hey there, buddy,\" the short fucker said.\n\n\"... Pitt.\"\n\n\"Mr. Pitt.\" The bastard snapped his fingers, and the two new faces came into his apartment, with Pitt's usual henchman following suit. They grabbed him, the two new fuckers taking his arms and yanking him up to standing. All of them were bigger than him, heavier than him, stronger than him. Came with the territory of steroid abuse, and hiring people only for their size.\n\nPitt's favorite henchman punched Eric in the gut, knocking the wind out of him, and the thoughts. So much for Jessy's promise.\n\n\"Montel got specific instructions from Mister Long, that he was to avoid you, leave you alone, not touch you. Debt cleared, supposedly.\" The short fuck came up to him, and, sly grin chiseled into his face, kicked Eric in the knee. The bad knee. Eric tried to scream, but the big guy in front of him grabbed him by the jaw, covering his mouth. Steel palm against his lips, the henchman glared at him as he squeezed until Eric could hear his cheek bones creak. \"And you see, Montel, he's got the boss's back. Mr. Long's gonna make things happen, Eric. And you, you stupid fuck? You're gonna be the message.\"\n\nEric glared at the fucker with every bit of malice he could. Worthless shithole on his left, worthless shithole on his right, big guys with tiny brains. They didn't know what they were doing, mindless thugs following Pitt's word. Pitt didn't know what he was doing, doing what Montel told him to. None of them knew what they were doing, and that was going to get Eric killed.\n\nEric shook his head. Bad idea. One of the fuckers holding his arm punched him in the lower back, beside the spine. Going for the organs. A second punch joined in, higher, getting the ribs hard. Nothing broken, yet, but the familiar pain of collision on flesh caused Eric's body to wrench, and for the pain to jolt through him. Without being able to lower his arms, and a dumbass's disgusting hand on his mouth, he couldn't brace for the hit, couldn't prepare for the pain, anything.\n\nGet out, get out, free yourself. Free yourself and kill these fucking slabs of meat.\n\n\"Now, you're probably wondering to yourself, 'what sort of message, Mr. Pitt?'\"\n\nKill him. Kick your legs out, get them around his neck, and kill him. Break bones. Break all their bones.\n\n\"The man asked you a question!\" Goon number one tightened his grip on Eric's face, jaw, and mouth, forcing him to breathe through his broken nose. And naturally, he followed the yelling with a punch to Eric's gut, causing him to hunch over. He couldn't hunch over though, not with goon two and three keeping him upright along with goon one. He had to stand there, and take it.\n\nA few more hits to his body mixed the pain into a whirlwind in his head. His eyes began to close, a moment of weakness, of agony blinding him and forcing his eyelids to press down. He knew it was a mistake to close them, but he couldn't help it, and goon one took full advantage, driving his fist into Eric's gut once again when he wasn't looking, wasn't ready for it.\n\nHe couldn't answer the question. They didn't want him to.",
        "\"You see, Eric Tanverson, the sort of message we're gonna send is 'fuck you, I won't do what you tell me.'\" Laughing, thinking his RATM reference was genius, Pitt paced around in front of him, and kicked him in the knee again. Eric got some sound out through his broken nose, and some gargled splattering of blood running over goon one's hand. Bastard didn't blink. \"We got plans, Eric. Mr. Long is going to push those shit wipes out, and we're going to take over this city. Xnomina? Fuck them.\"\n\nThe idiot was telling him a lot of stuff. Either he loved to monologue, or he knew Eric wasn't going to survive this encounter. Or both, probably both.\n\nEric started panting, eyes snapping around. Each goon was a big threat, but the Pitt fucker wasn't, just a maggot with a mouth waiting to be torn apart. He had to kill them first, break them apart, tear into them, rip and tear and shred. But he couldn't. Fucking christ, he couldn't. He tried, pulled on his arms, tried to break them free, but their grips were absolute and their weights bigger than his.\n\n\"And since that bitch Jessy has her eyes on you, what a perfect place to leave a message.\" Chuckling, Pitt pulled out a knife, and twirled it around in his hand.\n\nA door at the end of the hall opened. A woman came out, flab hanging off her arms, gut hanging out from her t-shirt and between her stained bathrobe, cigarette between her fingers. Everyone looked at her. She looked at them, eyes wide, flicking between everyone a hundred feet from her.\n\nShe backed away, and slammed the door. No chance in hell she was going to call for help, call 911, the police, nothing, not now after the criminals saw her face. Had to protect herself of course, not do anything to attract attention from the wrong sort of crowd. God, he fucking hated this place.\n\nKnife. The fucker had a knife. And from the look in the stupid little man's eyes, it seemed like he was going to use the knife on Eric, probably with intent to kill. Message, he was a message for Xnomina that Terra Den wasn't going to get bossed around anymore. They probably had no fucking idea about Xnomina's true nature, that they were going up against vampires. Idiots, fucking idiots.\n\nThe fucking idiots were going to kill him.\n\n\"Any last words, Tanverson?\" The short stack of meat said, standing a foot from him, knife up and picking at his nails.\n\nNow or never. Eric kicked ou\u2014goon three caught the foot with his own, a preemptive trip, and goon two kicked him in the bad knee, causing Eric's weight to give out from underneath him. The two assholes holding him let him fall to his knees, including the bad one, and Eric screamed into the hand of goon fucking-one as his weight crunched against the kneecap.\n\n\"Now now, that's not a word, Tanverson.\" Pitt winked at him, and came in closer, taller than Eric now. To be looked down on by this tiny, pathetic, weak stack of flabby meat, was infuriating.\n\nEric forced himself to breathe harder, and faster, forced air into his lungs as his felt his blood begin to boil. He shivered, eyes snapping around, heart beating into a frenzy in his chest until it was a machine gun in his ears. He started to struggle, harder, hard enough to feel his muscles strain to pain, hard enough he could feel his bones ready to break. One time, in a match, he'd blocked an opponent's kick with his shin, and the impact had nearly broken the bone; it did break the opponent's. The sickening texture of breaking bone, and the feel of it, was a scar on his mind. He could feel his bones approaching that point, going too far.\n\nBut something in him didn't care. Bubbling, groaning, rising to a roar in his mind, between the eyes. It told him to keep fighting, to push against these idiots, these fools, this prey that was stupid enough to challenge him in his territory. His! It was his territory, and they were violating it. It was his life, and they were threatening it.\n\nMove, fight, rip and tear and shred. Bite them! Go for the neck! The stomach! Soft spots, kill spots, the belly and throat. Survival of the fittest, the strong eat the weak, the strong kill the weak, the strong build their futures on the bones of the weak.\n\nThe knife came closer. The fucker's smirking, shithole face came closer.\n\nSpill their guts.\n\nBreak their bones.\n\nBite into their lives, and end them. Bite into them! Bite into them! Bite!\n\nHe struggled, panic mixing with anger, until bile rose in his throat, burning his esophagus. Closer, cold metal held by a cold, idiot prey. Eric was the wounded predator, and this prey was taking advantage of it, rats attacking the sickly, injured cat. A sickly, injured cat deserved such a fate if it couldn't defend itself, but Eric was not a sickly, injured, fucking cat.\n\nOh god, Kat.\n\nOh... god... Dad.\n\nPain, pain he could not imagine, started up from his stomach. The tall, muscly thing in front of him holding his jaw did not let him look down, and Eric wasn't sure he wanted to. Metal, cold and cruel, eased its way through his shirt, his skin, his stomach, and into the things inside. Soft, belly, no bones to protect the contents.\n\nHe was going to die, in this most pathetic way. The most possibly pathetic way he could imagine.\n\nBoom.\n\nBoom.\n\nTime slowed down. Somewhere, in the back of his mind, he dug up, through the fog of rage and hunger, the memory of a movie he once saw. It said time slows down when you're about to die. Life flashes before your eyes. But all Eric was seeing in his eyes, was misery, and a short, stupid stack of meat that needed to die. The moving pictures had been right about the slowing down though; his pulse was like a whale's, thundering in his skull, slow, and overwhelming.\n\nBoom.\n\nBoom.\n\nHis eyes looked up at the big prey still holding his jaw. This one met his gaze, but Eric could see the meat was too stupid to appreciate what was happening, that he was committing murder. Eric tried to look to the others, but they'd pulled their heads back, and watched from above, beyond Eric's line of sight. No stomach for the kill.\n\n\"Eric...\" The small meat's voice was slow, almost warped, as Eric's eyes snapped to and fro.\n\nBoom.\n\nBoom.\n\n\"You're... going... to... die... as... a... message.\"\n\nSlower, slower. Time pulsed in his skull, joining his heart, joining the life-ending headache that worked down through his spine. There was a piece of something in his gut. Something hard. What was the word? Metal? Something, something sharp. A claw. This meat's claw. This meat that didn't have his own claws, had to use something hard from the ground, something it tore up from the ground, and cut into him with.\n\nStupid, idiot meat. Meat was only good for one purpose. And this meat, the stinking pile of meat didn't have claws, or fangs.\n\nThis wolf did.\n\nBoom.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\nIt was one thing after another in Dolareido these days.\n\nJulias stared around at the mess, at the red that coated the walls, the curtains, the floor, the couch, the boxes, and sighed. What in the ever living fuck.\n\nHe wandered around, inching his way through the shitty apartment. The blood coated the walls in streaks, like someone had been finger painting in some places, or trying to do a Pollock. Randomness, and yet not, a moment of action given form. Someone had done something, something visceral, and it'd led to the deadly paintings of blood around him.\n\nThe fact it was a shitty apartment kind of ruined the artistry though. In a nicer place, a house or some such, it would have been oddly beautiful. Might have made for a good painting in his old apartment. But here, the cheap carpet embraced the blood to the point he had to avoid the puddles.\n\nA meow drew him into the kitchen. He raised a brow, and entered into the tiny thing, to look down at a cat on the counter.\n\n\"... the hell?\"\n\n\"Eric's cat. Kat,\" Jessy said. She was in the kitchen with the creature, and sighing as she stroked the small animal's cheek. \"Said she was a dumbass. Considering she's still here, after this fucking insanity, and has zero issue with strangers? Yeah, total dumbass.\"\n\n\"Ferret, trapped in a cat's body.\"\n\n\"Excuse me?\" She raised a brow at him, and scratched the cat behind the ears. Audible purrs followed.\n\n\"Never seen a ferret before?\"\n\n\"Cat snakes?\"\n\n\"... um, sure. I owned some, in my early experiments with animalism. Give them five minutes around humans, and they become sociable with them for the rest of their lives. Zero survival instincts.\" Cute as buttons, though. There were few animals that personified playfulness and obliviousness quite like a ferret.\n\nJessy smiled, for a moment, but he didn't manage to get a laugh out of her. She looked sad. That was surprising, considering how the girl never looked sad. Angry, sure. Happy, often. Sad? Never. But her eyes were downtrodden, and her shoulders hung heavy as she slipped past Julias and back into the crime scene. He followed after her, but made a glance back at Kat the cat. The animal sat there on the counter top, and did nothing.\n\nBack through the apartment, small as it was. The knocked over boxes were almost tragic, with how few things were in them, some clothes fallen out of them and scattered about onto the soaked crimson carpet. This Eric fellow must have been living a sparse life.\n\n\"Any signs of struggle in the bedroom?\" he said.\n\n\"No, everything is localized to the living room and the front door.\"\n\n\"Any idea what happened?\"\n\n\"Sort of.\" Jessy waved a hand over. A couple of ghouls were walking around, taking pictures while also preparing cleaning supplies. One of them was Jessy's. The man nodded to Julias, almost a bow, and Julias made eye contact with him, enough to accept the gesture, ghoul to vampire.\n\n\"What have you got?\"\n\n\"Arm,\" Jessy said.\n\n\"Arm?\"\n\n\"Arm.\" She squatted down, and pointed to the corner of the apartment. Behind one of the blood-splattered boxes, was an arm, sleeve wrapped around it and half-soaked red. The arm wasn't cut off, and Julias doubted it could have been shot off, despite all the bullet holes and casings lying around. No explosives had been set off either. But arms didn't magically fall off, someone had to have removed it from someone else.\n\nSomeone must have torn the arm off.\n\n\"It's not Eric's arm,\" she said. \"I... oh shit.\" Waddling forward, still in a squat position, she reached out, and pushed aside some more boxes, ones that had been sitting underneath the most bloody wall.\n\nBody parts.\n\n\"... Pitt, you fucking little sack of garbage.\" She reached out, and yanked out a head from the pile. His dead gaze stared up at them, mouth open, fear etched into his paralyzed muscles. It would have been more normal to see such a head on a pike. \"See this fucker? This is Pitt, works for Montel.\"\n\n\"Long's man?\"\n\n\"Yep.\" She stared at the head, glaring, grimacing, lip curled into a sneer as a tiny growl escaped her. \"Always wanted to kill this fucker, but it'd be juvenile of me. No reason to make things harder with Terra Den either.\"\n\n\"Why's he here?\"\n\n\"Eric had a debt with Montel. I told Long to drop it.\"\n\n\"A large debt?\"\n\n\"Nope. Pennies. I'm guessing Montel overstepped, or Long was looking to piss us off on purpose.\" Shrugging, she pulled the boxes further away from the wall, exposing more body parts. Some more heads, two of them missing significant chunks of their skull. More arms, more legs, many again having been torn or otherwise missing too many pieces to complete the limb.\n\nThe smell wasn't too bad yet. Scene couldn't have been more than six hours ago. Happened before Jack called him about the ritual then.\n\n\"How'd you know to come here so quickly?\" he said.\n\n\"Ganders called me. Said Eric didn't show up for work.\"\n\n\"He called you?\"\n\n\"He knows I hang out with Eric at the club sometimes. And he knows that Eric knows about Kindred, so he knows Eric wouldn't just randomly take a sick day with him under our thumb, especially not without telling him.\" She shrugged, but every time she said the man's name, her shoulders slumped a little more, and her head fell down a little more. Poor girl probably didn't realize it, or what it meant.\n\nBut, not his place to pry into something like that.\n\n\"Anything here that could be him?\" he said, gesturing to the pile of body parts. The fuck was in the Dolareido air lately, that could cause these sorts of scenes? Jack's report about the ritual was barbaric and brutal enough, but now it was Julias standing before a disgusting sight, not Jack.\n\n\"Nah. I'm seeing... well, I mean I guess I'm seeing... three?\" She got up, moved over to a different corner, and pushed aside some more boxes. \"Make that four bodies. Missing a lot of meat though, lot... ugh, ok, well, the guts are here.\" Gagging, she stepped back, and brushed her fingers off on her jeans. \"And... there... and over there...\"\n\nThe blood on the walls that surrounded the apartment, was because someone had flung the limbs, the torsos with opened bellies too, into the walls like water balloons. Splat. That explained the patterns.\n\n\"Not enough mass,\" he said, stepping around Jessy's ghoul, and pointing to the body parts. Another box here, another box there \u2014 most of them were mostly empty, poor guy owned almost nothing \u2014 pushed aside revealed more shreds of flesh. A hand with a ring. A shoe, quality, with the attached foot and leg coming halfway up the shin. The bones were broken, cracked like twigs.\n\n\"So many claw marks.\" Jessy gestured to one of the legs, where another ghoul was taking a picture. \"This is nothing like that ritual site Jack found. That was planned, and meticulous. This is chaos incarnate.\"\n\nTwo clean ups in one night was unheard of, and they were of polar opposite nature too. Chaos didn't begin to describe it.\n\n\"Gangrel gone on a frenzy, perhaps?\" He walked over to the front door again, and looked down the hall. The walls were damaged, and now that Jessy said the word 'claw', he had no choice but to frame everything in that mind. The trio of lines down the wall, all the way down the hallway? Claw marks. Enormous claw marks. Something had been dragging their claws against the wall as they moved.\n\n\"Maybe. We could do that, make some claws big enough for that. Doesn't seem Gangrel style though.\" She followed him out into the hallway, where two more ghouls, and Vivienne Maiorie were standing.\n\n\"This... is pretty bad,\" Vivi called out from the room at the end of the hallway. \"Old woman in here, scared senseless. Alive though.\"\n\nNodding, Julias looked down as he walked. There was some blood splatter in the hall, but not where Julias wanted it, on the feet. A bloody footprint would have been great, something he could use to identify. Instead, there were various puncture marks along the shitty ceramic tile. Weird patterns, weird scratches.\n\nNo, not so weird, not if he let himself consider the possibility.\n\n\"Someone tall made these claw marks?\" he said, looking over his shoulder to Jessy as he walked to the other apartment.\n\n\"Someone, something, yeah.\"\n\n\"Someone or something that can rip apart people like paper.\"\n\n\"... I see where you're going, Julias.\" She jogged up to him, shaking her head. \"No chance in hell one of Avery's people did this. I mean, why the fuck would they? The hell reason would they have to be here?\"\n\n\"Mister Mire may be correct.\" Vivi came forward, and offered him a bow. Natasha's childe, a meek and shy girl, offered her best smile, and most confident stance. Not very. \"If you look here, you'll see the weird scratches in the floor are mostly in line with each other, and there are four of them at a time, the two in the center slightly ahead of the others.\"\n\n\"Claw marks on the feet?\" Jessy got down beside one of the long stretches of slashed tile, and looked back over her shoulder. \"The fuck... we got any surveillance on this building?\"\n\n\"Only the entrance to the building, outside.\" Nodding as she looked down, Vivienne walked up to Jessy and offered her her phone. On the screen was a camera feed, and Julias stepped in to look over the Gangrel's shoulder to watch.\n\nA shitty angle, providing little detail. Blurs from cars driving by, and a long distance, meant the footage wouldn't be providing much.\n\nBut the three of them gasped when the front door of the building smashed open, and a blur came out. Well, that explained the front door of the building being busted open and sent into the street. It didn't explain the blur though, a smudge darting down the alley, and into the darkness. A large blur.\n\n\"... can you enhance this at all?\" Jessy said.\n\nVivi raised a brow at her. No, technology couldn't do that, it couldn't fabricate accuracy from nothing; or at least, not technology that was being circulated yet, or available to the Invictus. Julias tried to hide his smirk, but he could see Vivi struggle on how to tell her superior that she watched too much TV, and the zoom in and enhance thing was bullshit.\n\n\"Um, no, sir. That technology is still in the works.\"\n\n\"Damn.\" She threw up her hands, and leaned in closer, as if a few more inches gained on the blurs would help identify. \"This... this blur doesn't look like the rest of the blurry shit though. This is extra blurry. Like it's warped.\"\n\n\"... didn't we have reports that pictures of the Uratha, when Simon visited, were warped?\" Julias stepped away from the two, and walked down the hall into the where the claw marks continued. They went down the stairs and out the door as well, a mix of slashes and cuts that, now in the new context, did indeed look like the marks a huge wolf might leave behind. He started down the hallway, away from Eric's apartment, and toward the door at the end of the hall that was forced open. \"I remember cameras were new technology at the time. We chalked it up to bad tech. But, if this is something that Uratha lunacy can do...\"\n\n\"Similar to Kindred, in a way... except for this.\" Vivi followed after him, and cut by him. Surprising, but she had the look of someone determined on her face, lost in her moment of realization.\n\nShe guided him into the apartment ahead. No blood except for some around the claw marks. The door had been kicked in hard enough that it came off the hinges, and slammed into the wall of the small home. And there, a raggedy woman sat in a chair, hands on her temples, rocking back and forth.\n\n\"I... I... my door is gone... I... I...\"\n\nJulias looked back to Jessy, but after settling in the room, she raised a brow at the woman, and shrugged. \"Looks pretty loony to me,\" he said. Terrible, terrible way to describe it, but it was accurate enough. Her eyes were all over the place, or staring ahead into nothing, as she cradled her skull like it might fall off if she didn't. \"What did you see?\" He squatted down in front of her, and waited.\n\n\"A... b-blur... blur... blur? It... the bad men, they came and... they were hurting him, and... blur... and... blood... and... screams and yelling.\"\n\nHe raised a brow and looked at Vivi. \"Bad men?\"\n\n\"She means Pitt, and his goons,\" Jessy said. \"Fucker was a slimy piece of shit, and you could tell just by looking at him.\" Jessy moved in front of the kine, and waved a hand in front of her eyes. No reaction. \"Yeap, loony. What a fucking stereotype.\"\n\nIt was a silly stereotype. The vampire stereotype was that they didn't appear in mirrors, or on film, which was absurd. They appeared, but in pictures or footage, the faces were always a touch blurry, or never met the lens straight on. The fact this woman was actually confused, and dazed, almost to the point of appearing like a lunatic for the Uratha sighting, was so on-the-nose as to almost be dr\u00f4le. The fact the footage of the werewolf was blurry, blatantly blurry, was just as aggressive and obvious as Uratha were in general.\n\nMaybe Jack was right. He was hard on Azamel, threatening her and her hole in the ground, but he was kind to the Uratha, asking for their help and giving them their space, when the evidence was here in front of him that maybe the Uratha were a bigger issue. He hadn't seen damage like this since a young Gangrel had gone frenzy in their apartment building, and had killed their neighbor. A blood bath, and a lot of work for the Invictus to clean up, and hide from the media.",
        "That Gangrel had been found, and once it became clear they were lost to their beast, in a near constant state of frenzy, they were executed. If they found this Uratha in the same state, the result would be the same, no matter what Avery said. The Prince and the sheriff would deal with it, and as much as the Uratha were brutally strong, the dragons would be able to handle it. But if they did, Avery's backlash could be catastrophic.\n\nThis night was turning into a pain.\n\n\"Ma'am.\" Julias snapped his fingers in front of the woman's face. No response. He touched her shoulder, and her gaze snapped to him. Better. \"Ma'am. Nothing happened here tonight. Nothing happened to the man down the hall, and nothing happened to your door. It was all a construction accident.\"\n\nHe stared into her eyes, her trembling gaze, and reached into her mind. A spark, a white spark, floating around inside her, something he could see as he reached out for her mind. Something mystical, something beyond definition, except that it was inside the shell of her mind, and a mind was something he could define, and rewrite.\n\nHis thoughts drifted to Jen, and her verbal jousting. Did he believe in a soul? Yes, he did. He believed he could crush it, too. But he had no need to crush it, he wasn't Viktor. A subtle touch, gentle fingers on the mind, to wipe aside the memories until they were nothing but blurred tracks in the sand, was more than enough.\n\n\"Sleep.\"\n\nDown she went, head rolling back, body collapsing backward in her chair as she went limp.\n\n\"Fucking impressive,\" Jessy said.\n\n\"Yes, very.\" Vivi smiled up at him, nodding.\n\nNothing like compliments from a couple of beautiful ladies to stroke a man's ego. He winked at Vivi, and motioned for them to come back out to the hallway, then down the stairs to the front door of the apartment building.\n\nSeveral cops stood around, with police tape blocking off the scene. Thralls, and one ghoul. The residents who came home from work stood outside, waiting to get in, arguing with the cops about how their oven might be on, or their cat needed to be fed.\n\nAnd, thinking of, Julias looked behind him, and raised a brow as Jessy came down with Eric's cat in her arms.\n\n\"... what? She needs someone to look after her, until we find him.\"\n\nHe came back in, and stood with the two women on the stairway, small glances over his shoulder to make sure no one could hear. \"You don't think the Uratha got him? Assuming it was an Uratha, and not something else.\" Always the possibility it was a Begotten, after all.\n\n\"I...\" Frowning, she looked down at the cat in her arms. The cat was oblivious to what was happening, except that someone was holding him, and that that meant snuggles. Cute, but kind of pathetic too. Pathetic could be cute though, when it was on something like a cat. \"I'm not sure he wasn't the Uratha who did this.\"\n\n\"... say what?\"\n\nVivi turned around as well, both eyebrows raised. \"Why do you say that?\"\n\n\"He felt... different, you know? Didn't feel like other kine. And I tasted him. Fucker tasted damn good.\" She held Kat to her chest, and the cat had no issue rubbing herself into her neck. Perhaps she smelled Eric. \"But, yeah, I didn't think he had this in him. So, I dunno, it might not be? I... oh fucking shit, Fiona.\"\n\nJulias motioned for Jessy to follow him, and continued outside. \"What about her?\" The police had the alleyway blocked off as well, and the two of them went down the path. Invictus clean up crew included Vivi, and she nodded to Julias as he nodded to her, before she stayed behind.\n\n\"Fiona had an interest in him, kind of out of the blue. And... and didn't she go to him, asking if he'd seen Jack and whatnot, when he disappeared?\"\n\n\"That's what the Prince told me, with what she was willing to share in her report. So Eric told her, anyway.\"\n\n\"I wonder why she was so interested in him, why she went to him specifically.\" Shrugging, she jogged to catch up to him, and walk beside him shoulder to shoulder. \"She's a monster, right? Jack says she can see us, see other paranormals, see what we are with only a glance. So, if she saw something in Eric... knew he might be able to help finding Jack...\"\n\n\"... that does make sense.\" He stopped at the manhole between buildings, and peered down into the black. Someone had yanked manhole cover off, and thrown it. A hundred-and-fifty-pound disc, embedded into a dumpster thirty feet further down. God damn.\n\n\"We going down there?\" she said.\n\n\"I shouldn't, supposedly. I'm supposed to be working on the macro, and letting you do the micro.\"\n\n\"Yeah, but Jack and Damien aren't nearby, and neither is Isabella's crew, or\u2014\"\n\n\"Exactly.\" Sighing at himself for being such a moron, he started to climb down the ladder. \"Bring the cat. If you're right and it's Eric, and he's going berserk, then maybe the sight \u2014 or smell \u2014 of his cat will make him hesitate.\"\n\n\"And if it's not Eric?\"\n\n\"Then the cat's owner is dead.\"\n\nShe winced, and looked back to the alley they came from.\n\nIt was written all over the girl's face, and she didn't know it. A lot like Beatrice in so many ways. But he couldn't tell her, it'd only damage the outcome; what that outcome would be, he had no idea, but best to let it progress on its own. Maybe she'd figure it out, with how much she'd suddenly developed an attachment to the man's cat.\n\nA cat. If Eric was a werewolf, it didn't make much sense that he owned a cat. Then again, Kat the cat seemed more than stupid enough to not care. Lucky for Eric, if Jessy's hunch was correct.\n\nAnd she probably was. She was an Invictus right hand both because she had brawn, and she had a knack for good hunches. Worked well with Natasha's analytical side.\n\nGod damn, he missed Tash.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nBite.\n\nKill.\n\nTear.\n\nShred.\n\nEat.\n\nHunt.\n\nHide.\n\nHiding was strange, and weird, and wrong, but a part of him, somewhere inside the pulsing waves of his mind, knew he had to hide. They'd be coming. He had to defend his territory, defend himself, but he couldn't do that if he was surrounded. He needed a better place, someway to defend himself, and then return to his territory. His territory. His. No one else's.\n\nHe looked at the walls of the tunnel. Hard wall. Man's wall. The shapes in repeating patterns made him growl in frustration. Flickering light ahead, from the walls above him. Dead silence ahead of him, unending, deep into the ground where it was safe. Safer.\n\nGet back to the top, kill everyone and everything.\n\nNo! Safe, find safe place, let this pass, then go back, then make safe. Rip and tear and eat anymore who dare violate your home.\n\nHe licked his chops, mind swirling with the thrill of the kill, the taste of blood, of human flesh. Human, man, stupid prey, mostly bone. But that small human, the one he hated, hated with everything, was tasty. Fat was tasty.\n\nEric crunched down on his teeth, and let out a satisfied rumble as he felt the remains of human bone break apart between his back teeth. Yes, humans, in their stupid layers of color. The colors, blue and white and black, they did not taste good. But the meat inside, the flesh, the blood, was delicious.\n\nThere had been other humans, a couple, that had seen him as he ran for the tunnel entrance. They squeaked like rats as he tore the hard thing from the tunnel's mouth, and jumped into the blackness below, getting underneath the ground. He knew they would be no threat, and his hunger was satisfied.\n\nThe hunger was, the anger wasn't. \n\nHe knew which tunnel he picked, knew how to get to it, the tunnels beneath the tunnels where humans didn't go. There was a barrier between him and the tunnel, of that same hard thing that had cut his belly, but the word was long lost. Whatever it was, he tore it off the human wall, nothing more than a piece of grass in his path. Now, he was deeper, and deeper into the ground.\n\nAlone, in the dark, he howled until it rang in his ears, until it echoed down the long darkness between the flickering light, man light, and he slashed the wall. The hardness gave way to his claws, like grass, like twigs, like skin. He slashed again, and again it split apart. Again, and again, he slashed, and slashed, until a roar was joining it. He didn't mean to roar, but it came out, came pouring out of him, echoing down the tunnel with more heat and impact than his howl could hope to match.\n\nHe wanted to kill.\n\nHe wanted to tear things apart.\n\nHe wanted to feel a living thing bleed in his mouth. Feel them die between his teeth. Feel them snap, break, crush. Nothing else mattered, nothing in the world. All that mattered was the hunt, the kill, the pulsing fire rushing through his veins, the saliva dripping from his chops, the hunger in his chest for violence.\n\nSome inkling, some tiny spark of him knew what he was doing, knew he was stalking through the tunnels, knew he was bigger, and stronger. Knew he had survived getting stabbed.\n\nStabbed. Not clawed, not bitten, stabbed. Human word, stab, with metal. Metal was the word, to stab with metal. Metal knife, metal cover tunnel, metal door in the tunnel, and... concrete.\n\nHe shook his head left and right, and smashed his shoulder into the human wall, hard enough for some of it to crumble away and fall at his feet. His feet? His claws. Talons. His paws.\n\nThoughts bubbled beneath the rage, but he couldn't pull them up. Every time an image, a word, someone or something that made sense, that reminded him of... something... it was washed away in a torrent of red rapids. Fight. Kill. Bite and tear. Rip and shred. Hunt.\n\nHe continued along the tunnels, and raised his nose as he sniffed the air. Dead things were walking around, dangerous. They weren't prey, he couldn't eat a dead thing, but he could kill them if he had to. Most of them were not dangerous enough to stop him; some were, but not most. None of them were around either, not as far as he could tell. The still air hid the scents of others, but only to a point. He was alone.\n\nOr, wasn't. He came to a stop, crouched down low until his colossal claws found the old, worn hard things beneath him, two of them running together along the ground behind and in front of him. He licked his chops, felt his saliva drip from his tongue, and moved forward into the awaiting blackness. The human's lights no longer worked, no longer shined upon the hard earth and tunnel around him. Darkness, around the turn, darkness ahead into the depths of the awaiting chasm. Darkness, to cover his guise for the two seconds he needed, before he could strike.\n\nThis one ahead of him, in the black, wasn't one of the dead walkers. This one was alive.\n\nThey weren't there a moment ago, though. Out of nothing, out of the ground or the sky, or the walls of human hand, this one came. This new prey wasn't human, but, was. He could smell it, smell the blood, the flesh, the breath. He could hear the beating heart, he could hear the swishing of human colors rubbing human skin with movement. And most of all, he could hear the tap of feet against the tunnel floor.\n\nTap.\n\nTap.\n\nTap.\n\nThe beat of it\u2014her, from the smell, the beat of her heart matched her footsteps almost exactly.\n\nThump.\n\nThump.\n\nThump.\n\nCloser, and closer, the human came closer, unsuspecting, unknowing. Easy prey, easy food, easy to taste more of that flesh. More of that sinful flesh.\n\nSinful flesh?\n\nMeat! Meat, organs, bone, sinew. Rip and tear. Kill them, hunt and hunt and hunt and drown in the taste of flesh. He threw himself at the oncoming movement, his roar shattering the silence as his talons sundered the hard ground underneath him. He was heavy now, massive, and yet, light, his strength having no trouble moving him with the grace of a hare. One leap, two leap, the ground underneath flew by as he sailed over it, pounced over it, and threw the whole of his body at the woman.\n\nShe threw her hand out at him, and from the darkness, movement came. In the obsidian depths of the tunnel, where what little light existed was lost around the corners, he caught a glimpse of the massive, skeleton arm, that greeted him with its knuckles.\n\nHe bit, and clawed, and tore into the enormous hand, but he was biting, clawing, and tearing into bone, a giant bone arm. This woman had bone arms?\n\nThe darkness was close to absolute, in this section of the tunnel, almost as if the female had wanted the darkness, had come from, or had sought the darkness. And whoever, or whatever she was, she could see him well enough to punch him. He had trouble seeing her though, the black burying him.\n\nIf only there'd been a flicker of moonlight, this alien thing would be dead and eaten.\n\nHe lunged again, and she threw herself back, rolling onto her shoulder and back onto her feet. All blurs in the dark, a subtle silhouette all he had to go on, and his ears and sense of smell. It was enough. He pounced at her again, snarling, roaring, and landed on her with his claws.\n\nBut again, hard bone formed a well between him and the soft flesh, between him and the thing that smelled of sweat and skin, between him and meat. It had to be an arm, enormous, and strong enough to catch his weight, and launch him back. He had no idea how some sack of meat could be that strong, but he flew backward, and landed on his back, hard ground greeting him. Pain? A tiny thing, pain, background noise, lost in the raging, screaming tides of pumping blood in his skull.\n\nAgain he dove at her, this time going low. But, despite being on all fours, he was still as tall as the human-looking thing he was hunting. If only he could see her! See her, bite into her, rip her open, eat her muscles and taste the layers of fat under her skin.\n\nFor a moment, a fleeting second in the dark, he saw eyes. Two white, beady eyes in the dark, spread further apart than a human's eyes. This human thing had something with her, inside her, something defending her, fighting for her, with her. Something he could kill.\n\nHe rammed into her, shoulder first. She blocked with the arm again, and he knew she would. With the whole of his weight smashing into her, and his talons digging into the hard rock of the tunnel ground, he slammed her back. She flew, rolling against the floor, body almost bouncing. Opportunity! Throat, go for the throat, or the belly, tear open the soft flesh, bleed the prey. He dove at her again, claws first.\n\nThe giant bone hand came out from underneath him, up through the ground. No sound, no rumbling, and the ground did not break. Like a ghost reaching through the earth, the hand came into existence, materialized, and the enormous silhouette punched into his stomach and legs. The forward momentum caused the punching monster arm to crush his legs against the ceiling, and he thundered agony and rage as the angle caused his shin and ankle to bend, bend, and break.\n\nHe fell, body limp, pain causing the muscles in his body to clench, only making the pain worse. And then, the pain renewed, as he felt the muscles and tendons within the mangled and ruined limb force the bones back into position, force the cartilage back into form, and seal, as if by fire. Crack. Crunch. His body was not gentle with the process. It did not care for his pain, for the misery coursing through his veins, it snapped back the flesh and sealed the wounds with all the grace of an earthquake.\n\nBut he was healed, and he could continue the hunt. All that mattered now was to get up, and pounce at her again. He was bigger than her, stronger than her, and\u2014\n\nIn the darkness, the blur of onyx unleashed both fists, each fist almost as big as his body, and each fist made of hard bone. Each fist slammed into his body. The shock of impact was like falling into a frozen river. He slammed into the tunnel wall, and his skull crashed into the concrete hard enough to dent it, to earn crumbling bits of it onto his fur.\n\nHe recognized that arm.\n\n\"At... thalia?\" His tongue didn't move the way he wanted it to. His lips didn't exist. But he wanted to talk, had to talk.\n\nAnd the voice, what did the great voice tell him? Breathe. He had to breathe.\n\n\"... you must be Eric.\" The woman walked over to him, and stared down at him, from what he could tell from the silhouette. Down. He was lying down, on his ass, enormous legs out in front of him. Fur. Claws. \"I suppose you know who I am because you saw me in the nightmare, after I showed up with Beatrice.\"\n\n\"I...\" I. Eric. Wake up. Wake up you fucking idiot, wake up and fucking breathe!\n\nHe looked back at the dent in the wall. A big fucking dent, made by his body. His steel body. He got back to his feet, easily at that, the wounds, the concussion, all fading away in moments. Some nicely, some not so nicely, screaming their vengeance at him in a flurry of pain as the wounds within him healed.\n\nHe stood tall, and breathed deep, each breath bombarding him with a thousand scents. With this woman so close, most of them came from her. He could smell old bone. He could smell the stones of a cemetery. He could smell cigarette smoke, a complicated aroma. And he could smell rotting flesh. Most of those he could guess, but the rotting flesh?\n\nHe looked at her, then the ground, the wall, the ceiling, all details lost in darkness. But, a smash into the wall jolted his body just like an ice bath did, and he forced that little spark of thinking up through the lava coursing through his veins.\n\n\"I'm... Eric.\"\n\n\"Having trouble talking there, big guy? Christ, get out of that form before you give me a heart attack.\"\n\nForm. Form? He was in a form. He was so fucking tall! He put out his hands in front of him, and blinked at the titanic size of his claws, his palms.\n\nHe was a fucking werewolf.\n\n\"I... I don't... I...\"\n\n\"Sounds like you're going through your first change? Well fuck me, if I hadn't seen you coming, I'd be dead.\" She gestured to the darkness around them, arm a blur in the black. \"Perk of who I am, darkness is no issue. Now, let's just step back out into the light, and you can take a breather and calm down.\"\n\n\"C... Calm down...\" Hard to talk, but the words had to come. But, as he talked, so did the memories. \"I... trying to remember... trying to\u2014\"\n\nBREATHE!\n\nThe thunder of the moon's voice shattered his mind, and he fell to a knee as his claws grabbed his skull.\n\nBREATHE!\n\nHe gasped, lungs fighting against him, muscles clamping down, air resisting until he forced it in. One hand fell to the ground, and he grumbled and groaned as agony shook him, paper cuts on his insides where he couldn't see or touch. Biting, gnawing, eating at him from the inside out. Something, he was supposed to do something.\n\nHe was supposed to calm the fuck down. Let it out. Let it go. Breathe. Just breathe.\n\nDon't breathe! Not next to this monster, this alien, this deadly thing from the black.\n\nBreathe. She is not your enemy. Those hunters are. This Athalia women is not. Fiona is not.\n\nHe forced in the breaths again, each deep into his diaphragm, each causing a low rumbling sound, quiet but there, almost a purr. The monster next to him chuckled, and smirked at him, as the two of them walked a little further until they were under some weak light a ways down the tunnel.\n\nBreathe, and relax.\n\nHe groaned again, pain working through his bones and muscles as they began to shrink, as the weight began to fade. The ceiling above him grew more distant. The claws beneath him grew closer, and smaller. The length of his arms decreased, pulling into him, as well as his claws.\n\nClothes began to reform. Human fabrics. His fur faded, along with his tough skin, and human fabric colors emerged, the black pants and the tight gray t-shirt, the nice shoes, all clothes he couldn't afford before he got his new job.\n\nJob. He had a job.\n\nJessy. Jessy had said she'd dealt with his debt.\n\nPitt, Montel, and Long disagreed.",
        "He'd eaten Pitt. Eaten. Eaten. Eaten.\n\nEric fell to his knees, and vomited.\n\n\"Oh god... oh... fucking god... I ate someone, I\u2014\"\n\n\"Avery should have visited you to deal with this, help you deal before it got to this point.\"\n\n\"Avery... I don't know an Avery. Fiona mentioned her, but... where is she? Where is Fiona? She was supposed to... to tell me... about who I am.\" He stared at the mess of shit he vomited up. It was red in color.\n\nMore memories surfaced, digging up through the crimson rapids they were lost in. Faces. Clothes and flesh tearing in his hands, bones breaking. Screams. The sweet satisfaction of meat, of prey, breaking apart in his jaws. He was defending himself, his territory, and succeeding.\n\n\"I need to go back. I... I have to... my cat, and... oh god, the damage, and... and...\"\n\n\"The Invictus will cover up the damage. Your concern should be whether or not you'll get in trouble for damaging their stupid little Masquerade.\"\n\n\"... shit. Shit shit shit.\" He forced himself back up to his feet. \"I... I must have destroyed... so much. Fuck. What do I do?\"\n\nThe woman shrugged, and rotated her shoulders a few times. Recovering from the fight. She looked like a regular woman now, but the monster inside her had managed to hold him off, hit him hard enough to knock some sense into him. Scary.\n\n\"I hate to say it, but I suggest you stay down here with us, honestly.\" Sighing, she waved a hand in the direction he came from. \"The vamps might shoot you on sight, if they think you're too dangerous to keep alive. They might not, I don't know. And they'll use silver bullets too.\"\n\nSilver bullets were a thing? Shit.\n\n\"And... and this Avery woman?\"\n\n\"Werewolf. Bunch of werewolves here in Dolareido, a pack of them. They'll want to talk to you.\"\n\n\"Oh...\"\n\n\"Just, follow me. Don't do anything stupid, ok? Follow me, remain calm, and keep yourself under control.\"\n\n\"You make it sound like I'm a wild animal.\"\n\nShe laughed at him, and shrugged, complete with a slow head shake. The classic 'you're an idiot and what am I going to do with you' sign.\n\n\"You are.\"\n\n\"I...\" He breathed deep, and his eyes went wide as the bombardment of smells washed over him. Sensory overload. He could feel every crevice of the soles of his shoes. He could feel the ground, the hard metal of the old tracks, pushing through his shoes too, the specs of dirt. He could taste the stagnant air, and the individual smells of vampires that used it. His nose knew they were dead things, just from the smell. He could see better; not in pitch dark better, like this monster woman apparently could, but he could still see a shit load better than before. He could hear the distant vibrations of cars overhead, and their sounds echoing down and dancing through the tunnels.\n\n\"Yeah, your first change must be quite the night. So, keep yourself in check, or I'll put you in the ground, ok?\"\n\n\"Yeah... yeah ok.\" As he followed after the deadly monster, a big smile started to grace his face.\n\n\"The fuck you smiling about?\"\n\n\"... my knee feels fine.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nCemeteries were cliche.\n\nSuch was the way of Dolareido, created by vampires over the course of its growth, from a simple village to a massive city of millions. The elders had shaped its growth and biased its construction, turning it into both a utopia for Kindred to enjoy sustainable food, but also, to enjoy other indulges. Macabre art? Check. Cemeteries and catacombs? Check. Hilariously common dark alleys were functional for Kindred to take advantage of too, but a lot of the lighting placement also emphasized the shadows in drastic ways, purely for edgy aesthetics.\n\nIt was Maria's Cathedral, once Lucas's Cathedral, that was perhaps the most impressive sight though. The Elysium Tower, the Black Hall, Xnomina HQ, the strips of clubs and high roll casinos, they were all impressive sights to behold. But it was the Grand Cathedral of Dolareido that Lucas built, without the Prince's permission, that was the most grand site of all. Tash was surprised the Prince didn't tear it down after the purge. She knew Maria protested, but it wasn't like Antoinette couldn't do it anyway. \n\nMaybe the Prince liked the giant, Gothic building, and refused to admit it?\n\nTash stared at the huge building in the distance, as she and her two werewolves stepped into the Three Kings Cemetery.\n\n\"God damn,\" Art said. \"This place is fucking amazing.\" He walked on the path of stones interspersed along the smooth ground, and gestured to the enormous tombstones around him. \"This is something straight out of a museum, or history, or something. Look at this.\" Eyes wide and jaw almost dropped, he stood before an enormous tombstone, an angel, covered in a cloak to hide her face. She stood over him, enormous, sword and shield dropped and sculpted into the base of the robe. \"Here lies Carla Bianco, protector and saint.\"\n\nMatt came up to join him, whistling as he looked up at the angel. \"What's her story?\"\n\nTash shrugged, and joined them. \"1894 t-to 1905. Oh, I remember r-r-reading... about this. She was a child, who saved s-someone from an angry d-d-dog.\"\n\n\"Oh fuck.\" Art stepped back, grimacing, and looked down to her with sad puppy eyes. \"A dog killed her?\"\n\nSighing, she shook her head, and walked along the path to the next grave. \"N-No, it was the story that m-m-made her famous. She... d-died of an illness.\" It was 1905 after all, and diseases were deadly back then.\n\n\"Hard to imagine that this city's been around for centuries, with vamps here for most of it.\" Matt gestured to the Cathedral in the distance, and then continued along the path up further, toward the mausoleums in the back. \"Centuries is a long time.\"\n\nYeah, it was. She was fifty years embraced, and it was a becoming a reality that was she becoming one of those older, stronger, deadlier vampires. Ancilla. Was it fifty-one now? It was a lot of years, and the earlier years, especially her human years, were blurs. Remembering the details of a former life was difficult.\n\nShe'd once heard a theory that people had trouble remembering their childhood memories, especially those before the age of four, due to the difference in how a person's mind works as an adult. Incompatible. She had no idea if there was any truth to that, but, she felt similar, with how her mind had trouble remembering things from her time as a human. The disconnect between smells, hunger, taste, even how things felt to the skin, was too huge.\n\nNot being able to feel the sun on her skin again, well, she'd always been a library geek anyway. The sun had been nothing but cruel to her pale skin, if memory served. Now it was doubly cruel, so no real loss there. Jessy, she remembered lamenting the loss for years. Said she was a fan of the nude beach. Dolareido didn't have a beach; she'd meant tanning on the roof. And probably fucking on the roof, too.\n\nWow. She stopped, and blinked. Strolling through a cemetery was sending her mind into a stroll down memory lane, like a fly to honey. Arg, so hopelessly cliche! Bleh.\n\n\"W-Why are we here,\" she said to the boys, as they started following her. It was their noses that took her here, after all.\n\nArt caught up, but stopped the moment another tombstone caught his eye. \"The sort of fucked up shit you found at that strange ritual is the sort of shit wraiths are interested in, the weird kind of wraith spirits you find in Dolareido anyway.\"\n\n\"W-What kind of wraiths are you... more used t-t-to dealing with?\"\n\nMatt caught up as well, but like Art, stopped as his eyes locked onto the tombstone. \"Well, your typical shadow wraith is your black shadow fear monster. Looks kind of like a ghost, all black and inky and shit, vague features, big glowing, scary eyes. They spread fear, they are fear.\"\n\n\"But,\" Art said, cutting in, \"what you got here in Slut City is a bit different. The wraiths here are a bit bloodier, and a bit more interested in... well, gore.\"\n\n\"... gore?\" She shivered again, rubbed her arms, and looked at the tombstone they were looking at. A man, a knight, carved into the stone, standing with his sword blade pointed down between his legs, hands on the hilt while the sword stabbed into the nameplate. The knight looked like something out of the age of King Arthur, fantasy and history combined, with many of his features hidden in a cloak billowing in the nonexistent wind. It would have been tacky, if not for the similar tombstones everywhere.\n\nDolareido was many things, but subtle wasn't one of them.\n\nArt nodded. \"Yeah. They like fear, but they also have this infatuation with blood, and guts, and bones and shit. I have no idea what sort of soil would grow fucked up spirits like that, but apparently that's what you got here.\"\n\n\"And we know they come here regularly, this specific cemetery... and... I smell... something weird.\"\n\n\"W-Weird?\" she said, looking up at the boys.\n\n\"Something's going on,\" he said.\n\nNodding, the two boys looked at each other. \"Ruh roh. Time to investigate.\" Together, in unison.\n\nOh god damn it.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Author's Notes~~\n\nSorry about the delay! Life throwing me some curveballs. But I'm back on track and will try and get 3 chapters out a month until someone shoots me dead."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal",
        "paranormal romance",
        "slow",
        "supernatural",
        "vampire",
        "violence",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-05-ch-07"
}