{
    "title": "\u04d4gir's Captive Pt. 14",
    "pages": [
        "If it could be called that. If Tilbury had been sleepy and laidback little town, then Fjorthen barely qualified as a village. A couple of dozen wooden framed houses, some on stilts as the waters came right under them, a single high street and one shop that was store, post office and caf\u00e9 all rolled into one. \n\nShe observed the woman that she supposed was her 'mother-in-law.' She still was having trouble reconciling this vivacious and stunning woman with the image that she had built in her head. From the moment that she had stepped on board \u00c6gir's Captive, she had taken control. Kirsty smiled at the way the woman directed them all like they were an orchestra and she the maestro. \n\nThe shop keeper smiled as they entered. She greeted them in a language that Kirsty tried to place...vaguely a mix of the French which she knew well and German of which she knew only a few words. It made her uncomfortable that she could not understand anything that they said, but the woman seemed to be delighted at whatever Sven said to her.\n\nWhile Sven and Petrine chatted with the woman, Olaf drifted off from the main group to greet a handful of older men who were playing chess as they drank coffee. They laughed loudly at something he said. Mikael had his hands full trying to keep Monika from touching every single thing in the shop. Kirsty frowned and considered approaching them. But she really had no idea where she stood in this situation...with him in particular. Would he resent her intrusion? \n\n\"What do you think?\" Bjorn's voice caressed her mind as he laced his fingers through hers. \"I know that it is nothing like your London, but it is home...to us anyway,\" she wanted to laugh at how sheepishly he looked at her.\n\nShe shook her head, \"I guess some part of me is surprised that a place like this still exists...it is lovely. Really. Like something you would see in a painting.\"\n\nHe chuckled, \"Don't be deceived. We all have satellite TV and the Internet. Not even Fjorthen can escape the twenty-first century.\" He nodded towards his uncle and the older men, \"Even if some of them still complain about it.\"\n\nBefore she could ask anything else, Petrine and Sven joined them. \"We should get a table. Adelaide will bring the food shortly.\" She smiled once more at Kirsty, \"I know it is a bit to take in all at once, but we will chat later,\" she said before she glided across the room to the men. \n\nShe greeted them with a smile as she placed her arm lightly over Olaf's shoulders. Her laughter seemed to rise above all the others at something one of them said. \"If you are finished, Old Man, the food will be here shortly,\" she directed at Olaf in English. Kirsty got the feeling it was primarily for her benefit. \n\nThe man had a twinkle in his eyes as he slapped her jean clad behind. Kirsty was more than a bit envious...her butt would never look that good in jeans. And this woman was at least sixty. As friendly as Petrine had been, she could not help feeling even more inadequate. \n\nOlaf stood and wrapped his arms about her, drawing her tightly into his embrace as he said his farewells to his friends. Kirsty frowned as she saw the looks that the couple got once they had turned their backs on the group. Lust. Envy. Disgust. It was all there. She shook her head and reminded herself that this was a different culture, perhaps as with Monika, she was just reading things into the situation that were not there. But the stiffness in Sven's body next to hers and the dark scowl upon his face said that perhaps she was not. \n\nWhen the couple re-joined them though, they were all smiles. Petrine took her hand and pulled away from Olaf, \"We have so much to talk about. I have waited so long for this day. I know I must seem incredibly pushy. Blame it on my Americanism, everyone else does,\" she smiled as she led her to the largest table at the back of the shop. Kirsty glanced over her shoulder to see all of the guys falling into step behind them. \n\nBut it was the looks from those men that froze her blood and set off all too familiar anxieties in her. It was not just Petrine and Olaf, but now her as well. It made her feel...dirty somehow. She fought back tears. Then Sven stepped forward, blocking her view of them. His hand went to the small of her back as he bent in, whispering in her ear, \"Keep walking, Kirsten. Ignore them.\"\n\nShe looked up into his face, ready to argue that it was not that easy. But the hard look in his eyes dared her to say anything. Then he smiled, though she could tell it was forced, it relieved some of tension, gave her a bit of courage as he held out a chair for her. He brushed a brief kiss on the top of her head as he pushed the chair forwards. She frowned, had he purposefully seated her so that her back was to the men? \n\nOlaf and Petrine took seats across from her, leaving the two at the end open for Mikael and Monika when they joined them. So Kirsty found herself squeezed in between Sven and Bjorn. She could not stop his naughty words from last night flitting through her brain, but that only made things worse. \n\nMaybe something was wrong with her. Maybe she deserved those stares. She looked down at the white table cloth as she felt those tears burning in her eyes again. She tried to hold them back, tried to focus upon the conversation going on all around her. When she finally found the courage to look up, Petrine smiled at her knowingly. The older woman reached across the table and put her hands over hers. \n\nShe would never know what the woman would have said though as the food began to arrive. Mikael brought Monika over and the little girl was sandwiched between him and his mother. The woman seemed to soothe the child though the girl would not eat and kept fidgeting in her seat. \n\nThe meal was peppered with more loud conversation some in English for her benefit and others in at least one other language...maybe two, she was not certain. As the meal progressed though it became harder and harder for the child to remain quiet. She was not particularly interested in food at the moment anyway so she suggested, \"How about I take Monika for a walk?\"\n\nShe was certain that they would decline her offer from the dark scowl on Mikael's face but Petrine spoke first, \"That would be lovely, dear. There is a small park behind the school. Mikael will show you where it is. We won't be much longer then we will all join you.\"\n\nIt was not exactly the response she wanted. Remembering their time in the cabin that morning, she had hoped to avoid being alone with this man for a while. But she supposed it was best. After all Monika did not know her yet, so perhaps it was best if her father joined them. So she nodded and held out her hand as she stood. \"What do you say, Princess? Would you like to go to the park with me?\"\n\nThe little girl did not answer. Well, no words, not even a nod of her head. She just kept looking to the side somewhere. But she was out of her seat in an instant and trying to push past her father, who impeded her progress. This seemed to frustrate her though and she squealed. \n\n\"Let her go, Mikael. She will be fine. She knows her way to the park,\" said Petrine. With a smile to Kirsty, she added, \"Just keep her in sight so she does not get distracted and wonder off.\" \n\nMonika nodded and followed the little girl, who was already heading out the door. She did not even look back to see if Mikael was following them. But the woman seemed to be right as the child took a muddy path at the side of the store, it was too small to be called a road and the stones that paved it were loose. It was only fifty yards or so until they came upon another building, this one was stone and two story with a wide cement walkway leading to wooden double doors.\n\nThe child went right past the doors and disappeared around a corner. Only then did she notice that Mikael had followed them as he overtook her and called out for his daughter. Kirsty raced after him but there was no reason for alarm. Monika had found a swing and was happily rocking back and forth in it. She was not able to gain enough momentum to actually swing but that did not seem to matter to the child. \n\nMikael slowed as he approached his daughter, speaking to her in that language. Kirsty was not certain if he would welcome her intrusion so she hung back a bit, watching them interact from her perch near the small picket fence that surrounded the play area. There was not much in the park: a double swing set, a climbing frame and a slide. The little girl seemed to bounce happily from one activity to the other, barely noticing the father that hovered and spoke quietly to her on occasion.\n\nKirsty frowned; not once did the child look her father in the eyes, nor did she speak other than to grunt or squeal once in a while if she did not immediately get what she wanted. She felt pieces of an all too familiar puzzle falling into place. She shook her head as she reminded herself that she was not a psychologist or a pediatrician. She was not qualified to make a diagnosis that required a full history and a battery of exercises to evaluate. But she had worked with hundreds of Monikas for almost five years...and she could not help but see the truth that was staring right at her...even if the child was not. \n\nOther truths were too. It was obvious from the way this man followed after his child that he loved her very much. Although she had worked almost exclusively with Mums, many of whom were single, Kirsty knew a concerned father when she saw one. The way he pushed her on the swing, stood extra close as she climbed on the frame, just in case she fell. He even clapped when she came down the slide...head first. That made it hard to stay mad at the man, damn him. As much as she wanted to, she found herself smiling at them.\n\n\"He loves her very much,\" that feminine voice said from behind her. She turned to see Petrine and Olaf walking up the path. She smiled and nodded in greeting as the older woman pushed open the gate that she was standing next to.\n\n\"But my granddaughter needs more than I can give her,\" she frowned. \"I guess you have noticed, she is not a 'normal' five year old?\"\n\nKirsty simply nodded, \"She won't talk...or maybe she can't. Oh, she says a few words...mostly 'no' at the top of her lungs and our names...sort of anyway. But that is it.\" The woman shook her head and her long silver tresses moved against ivory skin, \"Well, honestly, I am hoping that you might know more than we do,\" she smiled as she held out her hand. \n\nKirsty did not want to seem rude so she took it. This woman seemed so much more...touchy, feely than she was used to. She looked down at the grass, what little of it survive the mud, \"I am not doctor. I can't really diagnose these sorts of things,\" she stammered.\n\n\"That is not what I meant, dear. I...we...don't want her tagged with anymore labels. But I suppose what I am saying is maybe, once you are settled, once you know her better, well, maybe you would have some ideas we could use to reach her,\" Kirsty could hear the way the woman's voice broke even before she looked up to see tears glistening in green eyes that reminded her so much of his. \n\nShe could not help, but nodding, \"Of course, if I can. If...\" She caught herself, uncertain how much she should reveal to this woman...his mother.\n\n\"If what, Kirsty?\" the woman said, reaching out and lifting her chin. Maybe that was where the boys got that from. But when this woman did it, she felt like a schoolgirl again, trying to hide something from her mother. \n\n\"If he doesn't mind...if he won't get upset for me interfering...I really don't know what he expects or wants...where I stand with her...or him?\" She had not meant to say anything, yet one stare from this one and all of it came bursting forth.\n\nPetrine chuckled and drew Kirsty into another of those embraces, \"Oh, dearie, you and I need to have a long talk,\" the way that the woman emphasized 'long' made Kirsty want to laugh. \"But it can wait until we get back to the Holding. Sven and Bjorn have gone with Adelaide's sons to unload the ship. In addition to the fish, they bring back supplies to stock her store,\" she explained. \n\n\"Then we will be heading home,\" she motioned to Mikael, who collected the reluctant girl. \"You may ride back with Olaf, Monika and I...if you prefer.\"\n\nMikael frowned as he heard this, \"I'll come with you too.\"\n\nHis mother gave him what Kirsty could only describe as a wuthering look. Not that she was not used to such things, it was the norm for her relationships with her own mother. But it just seemed so out of odds with what little she had seen of this woman. \"Suit yourself, Mikael,\" was all she said as they turned and walked back through the town. \n\nThe little girl was fine, skipping along the narrow lane for pedestrians, until her father tried to take her hand as they crossed the street to the small docks where \u00c6gir's Captive was berthed with a handful of other smaller boats. She squealed and pulled away from her father. She would have even run into the street, which admittedly was not as dangerous as it sounded since there was little traffic. In fact, there was only one car in the distance. \n\nBut Olaf reacted quickly for a man his age, holding her back with a firm tug on her shirt collar. \"Stop, look and listen, Monika.\"\n\nThe child stopped and nodded her head, she even managed to look in the man's general direction for a moment. \"Good girl,\" said the older man and an odd tingle shot up Kirsty's spine. \n\n\"Thanks, Papa,\" Kirsty could hear the begrudging tone in Mikael's voice.\n\nBut the older man ignored it as he guided the child across the road with the back of her shirt, \"She is learning, Mikael. It will just take you a couple of days to catch up, son,\" he smiled.\n\nWhatever Mikael might have said was lost in the loud whistle and catcall that came from the only other large fishing boat that they were passing. Instantly, Olaf and Mikael shoved the three females behind them. The men almost bristled...their shoulders back, chests out. The oddest image of artic wolves encircling and protecting their pack whispered through Kirsty's mind. \n\nThen everything happened so quickly. One of the men called out something in that language. Kirsty did not know what but from the blush on Petrine's face and the way that Mikael and Olaf took two steps towards the boat, she knew it could not be good. Out of thin air Sven and Bjorn suddenly stood shoulder to shoulder with them. Sven called back something to the men.\n\nFor a moment that seemed to stretch into eternity, the two groups of warriors stood facing one another. Then the man, who had spoken for the group, spat on the wooden planks at their feet, he shrugged and turned his back. The other men followed after a moment with backwards glances at them. Then slowly the tension drained from their protectors. Petrine said something to Sven, but he just shook his head and scowled at his mother. \n\nIt was over as Bjorn stepped forward and brushed the hair back out of her face. \"What happened? What did that man say?\" Kirsty demanded.\n\nHe inhaled deeply and plastered on that forced smile, \"Nothing. It does not matter. Don't worry about it. You will go with Mama and Olaf in the car. Sven and I will bring the boat home up the fjord.\"\n\nShe wanted to stay, wanted to argue that she had every right to know what was going on, but Petrine stepped forward and took her hand, \"Come on, dear.\" \n\n***\n\nMikael stared out the window as the familiar country side passed by. It was swampy. The road was windy like the dot-to-dot puzzles that he tried to get Monika to do. It connected small island to small island, broken by the occasional bridge between them. Some of the islands were so small that they could not support life, others were populated by only trees and birds. Some had a house or two sprinkled on them. None were as large as the Holding. \n\nBut right now, none of that mattered. He was in a foul mood. If their conversation this morning had not been bad enough, the way that she just hung back...saying nothing, do nothing...made him doubt this whole thing. Perhaps they would have been better off with the Russian woman at least she was a mother herself. Perhaps this one had no interest in his daughter because she was not one of her patients. \n\nThen the other. He did not want to even think about it. He should be used to it by now. They all should be. But still...sometimes...it just got to you. He gripped the handle of the door. He wished his father had let him drive at least, but the old man knew him too well. He could not argue, he did not belong behind the wheel with the three females in the car.\n\nIf that was not bad enough, suddenly Monika grew tired of being strapped into her booster seat. She began crying and rocking back and forth, pulling at the strap across her chest. He tried to calm her but the moment he touched her, she let out an ear piercing scream and drew back, arching and fighting to get out of the seat. \n\nThe woman, Kirsty, his wife, looked at the child. He gave her his sternest look, he did not need some smart ass comment from her about 'controlling' his child right now. Instead she reached into her bag and pulled out something. It took him a moment to realize that it was her damned tablet. Fair enough, he supposed her sticking ear phones into her head and listening to music was better than that comment he dreaded.\n\nBut instead of head phones, it was that popular song...the one from the movie that Monika could not get enough of. The woman did not offer the tablet to his child, in fact at first she seemed to ignore her completely, focusing all her attention upon the song and video that went with it. Nonetheless, it worked. Monika quieted. Not completely, she still fidgeted in her seat. But her tiny body was no longer so tightly strung with tension that he feared she would break and she was no longer screaming.\n\nThen he noticed that she had tilted the screen so that Monika had a better view of it than she did. When the song came to an end and his daughter began to fidget once more, she hit the replay button. \"Is it much further?\" she asked no one in particular.\n\n\"About another ten or fifteen minutes,\" his father replied from the front.\n\nShe nodded her head, \"The seat belt is probably bothering her. Is there some place where we can pull over and let her get out for a bit? Run and play just to burn some of it off.\"\n\nHis mother turned in her seat and smiled. He shook his head at her...'I told you so.' \"Not really, dear. Here is Joey though,\" she replied handing him back the stuffed kangaroo that was his daughter's favorite. Monika snatched it before he could. And between the stuffed toy and the music she seemed satisfied enough to make it the short distance remaining to the Holding. \n\nHe still was not completely convinced, but he relaxed just a bit as he watched the two heads, one deep red and the other smaller one light brown bent together over the tablet. Time would tell...only time. But time was the one thing he always felt was running out...if he was to reach his child. Watching them, he wanted to hope that this woman held the key. But hope was not something that came so easily to him anymore. \n\nHe turned back to stare out the window as a new song...another one from that movie blared from the machine. \"This is my favorite, sweetie,\" said that voice that did funny things to his gut. He could not help but listen to words about true love saving them all. But sometimes...love was not enough to hold onto what you wanted most...\n\n***\n\nBy the time that the older model Land Rover pulled up in front of the red wooden frame house that was similar to those she had seen in town, only larger, Kirsty was not sure who was more tense...her, Monika or him. But the tiny space was filled with silent, nervous tension that felt like they would all explode at any moment.",
        "That was pretty much exactly what the little girl did the moment that the car stopped in front of the house. She fumbled with the seat belt until Kirsty assisted her, then she was pushing past her father and trying to open the door. He smiled at her efforts and opened it. And she was off...like the horses out of the gate at Ascot. \n\nThe rest of them piled out of the car. Petrine reached for her once more, taking her hand, \"You, guys, go and help Sven and Bjorn. Kirsty and I will go after Monika. It will give me a chance to show her around a bit.\"\n\nMikael was scowling...again. But his father did not give him a chance to say anything as he put his hand on his shoulders and guided him towards the dock that she could see behind the house.\n\nPetrine turned to her and smiled once more, \"Well, that was easier than I thought it would be. Walk with me and we can have that talk. Monika will be in her play area near my greenhouse. It is just over there,\" she said as she nodded towards a stand of trees. The undergrowth had been cleared out so Kirsty would not consider it a forest but the mix of hard wood and conifers stood like centurions guarding the gates of this place. \n\nShe found herself following along after the woman, looking around as she went. Quiet, peaceful, tranquil...none of them seemed to adequately describe this place. She inhaled deeply smelling the mixture of loom, pine and the sea. This place, nature, relieved some of the tension inside of her. \n\nWhen they came out of the trees into a clearing, she could almost imagine it blooming with wildflowers in a few months. But now, it was preparing for the winter which lay ahead, the grass tall and tan as it blew in the brisk late autumn winds. As the woman had said the little girl was happily swinging on a play set that was larger and much more elaborate than the one at the school. What was more, she noticed a pink wooden play house, a sand box and a tricycle strewn about the area.\n\n\"My sons spoil her as you can see,\" smiled the woman. She reached out a hand and brushed back a strand of hair that the wind had blown into Kirsty's eyes. Or that was the excuse she was using for the tears that burned her eyes at that moment. \n\nThen she was wrapped in those arms. She had no choice but to go as the woman held her tightly. \"Let it go, sweetie. Let it all out,\" those were the words that Kirsty felt she had waited a lifetime to hear. In that sweet maternal way that she had always imagined. She could not fight it. Any more than she could fight Bjorn when he looked at her that way. It all came out then. A life time of tears that 'good girl' had held back. \n\nShe did not know how long they stood there like that. Her crying and blubbering over this woman, who was a stranger. But when she came to her senses, she tried to pull back. Looked down embarrassed at the muddy ground, \"I'm sorry. I don't know what came over me,\" she mumbled.\n\nThe woman laughed, \"My sons, I imagine. They can be a bit...overwhelming.\"\n\nKirsty reluctantly looked up at her with a smile. Somehow as hard as she fought it, she felt connected to this woman. It was different, of course, but the feeling was just as strong as she had felt that day when she looked up into Sven's face as he pulled her through the turnstile. And the smile, on the woman's face that still shone with the beauty of her youth even through the lines, wrinkles and silver hair, said that she felt it too. \n\nThey stood silently watching the child play for a couple of minutes. It was odd. Most people would be uncomfortable with such things, but this was not like that at all. It was as if the silence spoke louder than any words could. It was that silence that finally gave her the courage to ask the question...one of them anyway...that had been on her mind at least for the past hour or so, \"What did that man say?\"\n\nPetrine turned to her and sighed heavily, \"My sons would not want me to answer that question. But I never liked the way that they and their fathers always tried to shield me from such things. I don't get the feeling that you do either. I will tell you...it was not pretty. But if you honestly want to know I will tell you,\" this time her smile was tighter as if this weighed as heavily upon her as it did upon Kirsty.\n\nShe looked over to where the child played carelessly upon the swing. She wanted to be like that...in her own world, oblivious to it all, not caring what anyone said. But as much as she wanted that, she could not overcome the trainings of a lifetime where what other people thought mattered more than what you wanted. \"I am not sure I want to know, but I need to, don't I?\" she asked turning back to the older woman.\n\n\"As wise as you are beautiful, my boys did well,\" this smile reached those dancing green eyes that she had gifted to her youngest son. Then they clouded over once more, \"My Swedish is not quite as good as my Finnish, so I cannot say word for word, but the gist of it was...asking if my sons had found another whore to service the lot of them and breed another generation of mongrels. That if you wanted to enjoy real men they would 'entertain' you for a bit.\"\n\nKirsty had not known what she expected but something so vitriolic was beyond even that. She felt her knees begin to buckle as her hand flew to her mouth and tears stung her eyes once more, \"Oh my god,\" was all she could say. \n\nThe woman lifted her, just held her for a long moment. She trembled as those words played through her mind, but there did not seem to be any more tears inside of her. Finally, the woman pulled back just enough so that she could stare into her face. \n\n\"It has been over four decades, sweetie, since I visited your home land. But do you know what struck me the most when I traveled there?\" Kirsty shook her head as the woman continued though Kirsty was not sure what any of this had to do with what was paramount in her mind, \"No one smiled. You could walk down the streets of your London. Pass thousands of people, all the same, their heads down as they rushed about...and not a single smile from any of them.\"\n\nShe turned her back so that Monika filled her cloudy vision, \"Worst of all, I remember the children. Tiny little things. All dressed exactly alike in their grey wool skirts and shorts. Stiff white shirts buttoned up and matching sweaters. I remember them too marching in their lines early in the morning to school.\" She paused and brushed back that hair which once more had blown into Kirsty's face, \"And none of them smiled either.\"\n\n\"Life comes at a price. It always will, sweetheart. Those sons of mine are the direct descendants of the Jarls and Kings that once ruled these islands. Like those strong men, they make their own rules. And like the villagers and warriors than once followed their ancestors, few people have the courage to call them on it. Oh, it happens, like today, but that is rare. But I will not lie to you...making your own rules comes at just as high a price as following everyone else's.\"\n\nShe sighed and studied Kirsty's face. She wanted to look away, feared that this woman would find her lacking, inferior, not good enough for those kings that she had born and raised to be such men, each fine in his own way. But as much as she wanted to look away, this woman deserved so much more than that, so she met that gaze just as boldly.\n\n\"Kirsty, if that life is what you truly want, then I will personally take you to the main land. Place you on a plane and see you safely back there. I promise you not a one of my sons will dare cross me on this one. But like me, I don't think that is what you want. I believe that you are willing to pay the price...and trust me it is a relatively small one...for making your own rules,\" she finished.\n\nHer words shook Kirsty's world like an earth quake. Somehow this woman had looked into her very soul and hit upon the very dilemma that haunted her. Not just for the past few days, but a lifetime. The only difference was that now she had an option besides merely pushing on with all the others, unsmiling and unhappy. The past three days she had seen that, they had given her that. This woman's sons. But did she have the courage to take it? That was the question.\n\n\"How do you do it?\" she whispered.\n\nThe woman's laughter was rich and as fragrant as this place, like coming home...and that was how she felt. For the first time in her life, Kirsty could almost believe this place, this woman, her sons...it could be home. If she had the courage to reach out and take it.\n\n\"Mostly, I ignore it. The other thing is that I make myself indispensable to them. There are not too many things that I learned from the few times my grandparents drug my wild ass to their strict Pentecostal church when I visited them in the summer. But one was something about kindness heaping burning coals on the heads of your enemies. I always liked that image,\" she winked.\n\n\"When I first got here like you, I did not speak either Finnish or Swedish. English, some French and a few words of German were all I had to get me by. But it did not take me long to figure out that these people were talking behind my back. It bothered me. But then again I was only in town a couple of times a month to shop. So I was happy to just pretend I did not see their stares...I still do sometimes,\" Kirsty realized then that this woman had not been as ignorant of those men in the store as she had seemed.\n\n\"When Sven went to school, it all came to a head. He was already reading by then. With his fathers at sea, I had long periods alone with my son...and five almost six years before Mikael came along. So I sent him to school reading and doing basic math, way ahead of the other children. So I was not worried too much. But when I picked him up that afternoon, he had a split lip and a black eye. The principal, head master I think you would call him, met me at the door. There had been a fight. Sven was suspended for three days,\" she frowned at the memory.\n\n\"Poor kid,\" Kirsty frowned, trying to even imagine Sven as a child was beyond her.\n\nPetrine laughed again, \"Poor Sven my ass. My son might have had a black eye, but the bully who was three years older had a broken arm. When I got my son home, lecturing him all the way about not fighting mind you, he did not want to tell me what happened. It was Stig, who finally got it out of him, including the words 'whore' and 'slut.' That was the only day that any of my boys spent in that school. And she won't either,\" the woman said nodding towards the child.\n\n\"So again I ask...how do you do it?\" Kirsty felt weighed down by the isolation this woman must have felt, perhaps still did.\n\nBut the smile on her face said she was anything but to be pitied. \"I had my boys and their fathers,\" Kirsty blushed as she could well imagine what that secretive smile truly meant. \"And Stig built me my greenhouse,\" she said as she nodded towards the glass building that was truly the size of a small house. Kirsty saw shadows across the woman's face and wondered what she was thinking...was she remembering those days? Happiness that was gone? The man who had built it? She tried to imagine how she would feel in this woman's shoes but it was more than she could manage. \n\nTears glistened in the woman's green eyes when she turned back to her, \"And once Bjorn was older and took to the sea, well, I found things to keep me busy. I teach in that school now. Not full time mind you, but I instruct the older ones in creative writing and ancient mythology every year. I also work with the local nurse practioner, we are too small to have a doctor here. But we can handle most things. A lot of my plants these days are medicinal and I dry those and share them with those in need. I am even the first one there with a cake when someone dies or a new baby is born. I have not worked up the nerve to go to church yet...afraid I might go up in flames with my pagan self,\" she laughed.\n\nShe looked her in the eye as she continued, \"But they take it all, the people in the village. Adelaide Johansen is the worst, biggest gossip of them all. Yet without my sons picking up stock for her on their journeys that store of hers would be closed down like so many of the other shops have in other villages.\" Kirsty nodded once more trying to imagine how that made this woman feel...her sons too.\n\nBut she continued her story without pausing, \"I feel their eyes on my back when I walk away though. I hear their whispers. And I hold my head high, knowing that none of them have been as loved or as happy as I have been for a lifetime. It is not easy, but then again nothing worth having ever is. So I ask again, do you want me to fight Olaf for the keys?\" \n\n\"Fight my boys, knowing that I am hurting them more than they already have been? Because I will, if this is not the life you want. I have had one 'daughter-in-law' that could not...or did not want...this life. And she tore my boys to pieces, opened chasms in them that are still growing larger. If you honestly want your old life back, if you cannot allow yourself to love them, then tell me now...and I will. You have my word on that,\" her face reminded her of Sven when he got that 'look,' the one that withered her inside, that said he knew everything in her mind. \n\nKirsty felt as if this was the single most important moment of her life. As if she stood at a crossroads and everything rested upon which she took. She weighed what the woman said...and all that she had not. And she shook her head slowly, \"No, no, I don't want to go back.\"\n\nPetrine beamed then. The woman glowed from within, like one of those cheesy movies where the angel reveals itself with backlighting. Then once more Kirsty was absorbed into those arms. This embrace was tighter than all the others. As if the woman did not want to let her go, her words seemed to confirm that, \"I have waited a life time for this moment. Wanted a daughter for so long. Welcome home, Kirsty. Welcome home.\"\n\nIt was the woman who was crying uncontrollably then. And while she tried, Kirsty was not sure she did a very good job of comforting her...she did not have much experience with such things. Her meager efforts must have worked though because then she was laughing.\n\n\"All right then, you need some lessons on how to control those guys. You need to learn...you are the one in control now. And you need to use that control wisely. Oh, we have so much to talk about,\" the years melted away from her face and in addition to be what Kirsty had always imagined a mother should be, Petrine became the girl friend that she had never really had. That best friend with whom you shared everything. \n\nMaybe she was right...maybe this life would not be so bad after all."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "non-sexual",
        "bdsm",
        "romance",
        "love"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/aegirs-captive-pt-14"
}