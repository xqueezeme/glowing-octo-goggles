{
    "title": "Behind Blue Eyes",
    "pages": [
        "This is the current \"Endcap\" of The Shack series so far. Or at least a landing on the stairwell. It will not be the last Tale from the Shack. There are many more to be written. It could stand alone, I suppose, but it really should be read after Gun Gun Teddy Bear, Blue Topaz Eyes CH1 and CH2 (Emma's Tale), Shameless, Monster, Pogo and Spooky, and Pogo's Very Long Day, so if you've forgotten those, you might want to scan them again. Yes, all of them if you want the full impact. Sorry about that, but they all tie together. This ended up being an unintended novel. I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x for the editing and Crkcppr for Beta reading it for me. Any remaining errors are entirely mine - probably added after their assistance. And thanks to everyone for the encouragement and support. \n\n***** \n\nBehind Blue Eyes \n\nThe curtains on the farmhouse windows were all calico patterns. \n\nThat was oddly disconcerting. \n\nFitting for a hundred-and-fifty-year-old farmhouse, I suppose. But it didn't match what I knew about my targets at all. \n\nI tried to find that node, that calm space that I'd trained so many to find, but it just wasn't there. I'd waited so long for this moment, for this peace, that I just couldn't settle down and enjoy the process. \n\nLying in that tall dry grass with the gentle breeze to cover any motions I might make should have been settling, calming. I was in a perfect position, perfectly comfortable. It would have been nice to have a spotter along, but other than that it all felt flawless. Except that I couldn't settle into the calm. \n\nMy mind flickered over the reason I was in that tall grass and an overwhelming wave of loss surged over me. \n\nI couldn't even remember Gabby's laugh anymore. \n\nI was sure I could remember it just a couple weeks ago, but it was all fading, even Tricia's smile. Maybe I was the only one who remembered them at all. Sometimes I thought, if I could just get some sleep, some real sleep, I might get it all back. \n\nThe front door opened and a lone figure stepped out onto the broad wooden porch. \n\nShe was elegant, even in faded, stained blue jeans and an oversized, worn man's Carhart farm jacket. One of the tan canvas ones. The wind toyed with her long silver hair for a moment, until she pushed it back behind her ears with a curiously girlish impatience. I hadn't expected her to be at the house yet - she and the others were all due to arrive in an hour or two from a Thanksgiving vacation. \n\nShe glanced around for a moment then looked up - right at me. I could see her clear blue eyes through my scope as they settled on my position. \n\nI tried to tell myself it was a fluke, but it was soon very clear, all too clear. She knew. She couldn't see me, but she knew I was there. She seemed to resign herself and began to walk slowly toward my hummock. \n\nIt was a long walk - almost 700 meters by my scope - through the slowly waving sea of grass, and I watched her pick her way through it. She'd left the jacket unzipped and I could see she wasn't wearing a vest, just a flannel shirt. \n\nThat was probably deliberate. The breeze caught her every now and then, and she'd clutch the tan canvas jacket closed reflexively for a few second to shield herself from the chill of the late November day. Then let it go to hang open, just as reflexively. \n\nShe wanted me to see she had no weapon, no vest. \n\nA vest wouldn't have helped any against the heavy rifle trained on her anyway, but it was clear she wanted to talk and wanted me not to feel threatened. \n\nI scanned around me. There simply wasn't anyone else. I had a clear view across the rolling fields in practical range, and except for this one, all of them had been cut for hay late in the summer, leaving them almost bare. \n\nMy puzzlement and curiosity had allowed her get to the bottom of the small hill and I watched her pause there. She carefully stepped over a dry creek where a sometimes-rivulet had dug a shallow trench. Her light blue boots were traced with colorful embroidery and sparkled with rhinestones, strangely at odds with her practical, worn farm clothes. \n\nAs she picked her way up the low hillock, I rolled up into a sitting position, leaving the rifle to rest, and drew my revolver. It's pretty old school; nobody carries a revolver anymore, but this one was special. The Colt Pythons had always been among the finest revolvers ever made; they were works of art and I'd always wanted to have mine with me at the end. \n\nAnd this was probably it. \n\nI pushed the hood of my ghillie suit back and pulled the mask down. \n\nShe just glanced at me with a polite, distant, smile and a nod, then sat down a few feet away, looking over the farmhouse, with her arms around her knees. \n\nWe just sat there for an eternity. \n\n\"They won't be coming, you know. It's just me.\" \n\nHer voice was cultured, finishing school perfect, but almost lyrical despite the training. \n\n\"I figured that.\" \n\nWe sat silent for another eternity, just watching the grass sway like ocean waves until the wind kicked up a bit as if it needed to do something to fill the void. \n\n\"I have coffee down at the house if you want some.\" \n\nShe was so calm and centered. I suddenly felt like a kid playing soldier. \n\nI holstered my revolver, stood up and picked the rifle up, folding the bipod as I slung it behind me. \n\nShe sat, slightly huddled in the oversize jacket, looking up at me with impossibly blue eyes. \n\nI reached down to help her to her feet. She took my hand and slid up as gracefully and graciously as she seemed to do everything. \n\nIt was hard to believe that this was the demon that had killed my family. \n\nThe demon that I had hunted for so long and sold so much of my soul to reach. \n\nWe walked carefully down the small hill. She grasped my forearm to help herself over the small dry cut at the bottom, as if it were perfectly natural to do that. \n\nI had a moment of concern as we stepped into the house, but it was empty. A battered military saber hung over the fireplace under a painting of some mostly-forgotten 17<sup>th</sup> century battle. \n\n\"We can sit in the kitchen or take a service to the parlour.\" \n\n\"The kitchen would be fine.\" \n\nI leaned the rifle in the corner of the huge kitchen. The rubberized pad on the butt of the big M24A3 sniper rifle wouldn't let it slip and fall, and I always had the Python if anyone showed unexpectedly. I'd only really need one bullet for her anyway. Now that the rest of the targets were out of reach, I didn't really care what happened after that. \n\nShe hung her jacket on a set of hooks near the side door out of the kitchen and I hung my Ghillie poncho next to it, then sat on one of the high stools at the tall rough-cut table. \n\nNo point in being uncivilized. \n\nShe carefully poured rich black coffee into a couple of honest-to-God John Deere tractor mugs. I'd always figured her for fine bone china, but she seemed perfectly content with these as she slid on to a stool opposite me. She didn't bother to put out cream or sugar. \n\nShe sipped a bit and closed her eyes for a second to enjoy it. \n\nIt was damn good coffee. \n\n\"Do you prefer Ken or Kenneth, or should I call you Colonel Howard?\" \n\n\"Ken is fine.\" I paused awkwardly, a bit off my game. \"And you?\" \n\n\"It's usually Evelyn, but I'd rather be called Evie here if you don't mind.\" \n\nI glanced around at the dried peppers and garlic hanging in strings along doorframes and off cabinets. Evie did seem more appropriate here. \n\n\"So how did you know?\" \n\n\"Maria contacted us last night. She's been watching you since the incident in Macao. The one with all those poor girls.\" \n\nI caught myself before I responded to that. She'd been at least partly responsible for what happened to \"all those poor girls\". \n\nAs to Maria... \n\nDeputy Director Maria Hawthorne of the FBI. I was hoping I hadn't caught her attention. \n\nHope is not, as they say, a course of action; it was all I had though, I couldn't be certain either way, and digging to find out would almost certainly have drawn her attention. \n\nDepending on how deeply involved she was, there might be an HRT parked in the basement right now. Actually, even if she wasn't involved, there might be a team waiting. Not that it could possibly reach Evie in time. \n\nShe continued on. \"She was trying to figure out your angle, why an organization like yours would even be interested, and want to be in on that raid. She appreciated the help, but she started wondering about why after a while.\" \n\n\"I needed the papers, shipping manifests, the contact lists, everything. She and her people were so tied up with getting all those girls to safe places, my guys on the ground had plenty of time to photograph all that.\" \n\n\"She guessed that. She said a couple of people disappeared before she got to them.\" \n\nI nodded. \"I needed more answers.\" \n\nEvie sipped a bit more. \n\n\"She finally figured it out. And guessed what you were planning on doing today. She had Homeland tracking your travel. They saw the plane ticket to BWI.\" \n\nI'd left too many clues over the years. It was impossible to avoid. I'd had to take chances, risks to get the information I needed and had the bad luck to trigger the interest of one of the few people that could have figured it all out. \n\nI didn't understand why Hawthorne hadn't simply had me rolled up. If she'd figured out this much, she had to have known I wouldn't be a risk to her agents. \n\n\"Who told you I'd be on that hill?\" \n\n\"Maria's... friend, Michael. Said it was the only sane place a real sniper would choose. He seemed to know more about your organization than anyone else.\" She stopped for a second. \"Given your reasons for this, I asked Maria to let me handle it.\" \n\nI closed my eyes against a surge of unwanted, nightmare images. \n\nShe drove on, unknowing. \"I asked her not to interfere. Just to keep Emma and her family out of it. She didn't like it, but she honored my request. Personal promises mean a lot to her. She really cares about Emma. Sometimes I think Maria is more her mother than I am.\" Her voice faded at the last of that - reflective, saddened. \n\nI wasn't sure what she intended; maybe she sought pity, maybe nothing. It didn't matter, nothing could help her in my eyes. If she'd failed as mother somehow, it was her choice - at least her daughter was alive. I hadn't had a choice. I'd have given anything to get Tricia and Gabby back. To be a husband and father again. All I'd wanted was to be the best Dad ever. \n\nI'd settle for vengeance, though. \n\nIf it was all I could have, then I'd take vengeance. \n\nShe looked down for a moment, studying the floor. \"Your plan won't work. You can't hurt him through us. I know why you want to, but he simply doesn't care about us at all. Not that way. We never emotionally mattered to him, and we really ceased to matter once he understood that Emma would rather die than be involved with him. With Reinhardt IG. My death might even make things easier for him.\" \n\nShe closed her eyes and held her hand up. \n\n\"Sorry, that sounded kind of pathetic. I'm not trying to dodge responsibility. Or the consequences. My name, my family name, was on those companies, on those bank transfers. They were my responsibility and I just wasn't looking. It's inexcusable, really.\" \n\nI'd wondered if it was something like that. The pattern of death stretched much further back on his side, Reinhardt IG, than hers. But she was right, it was inexcusable. \n\nUnforgiveable might be a better word. \n\n\"Emma and her family have a right to be out of this. She isn't part of it.\" \n\n\"If she's not working for him, why has she infiltrated the FBI?\" \n\nShe looked genuinely shocked at that. \n\n\"Oh. I never thought how that would look ...\" she gazed into her coffee for a second, watching the steam scud across the black surface, then swirl up and off. \"She didn't infiltrate the FBI, that's where she was hiding. From him. From us, really. Where the money couldn't really reach her. She hated us, hated the money. Hated the power. I don't think she'll ever completely forgive me for how she was raised. What we did to try to prepare her.\" \n\nShe gave a wry smile \"I'm lucky she lets me into the children's lives at all.\" She gestured down at her clothes \"She thinks this is some kind of penance for me, like sackcloth and ashes.\" \n\nI raised an eyebrow. \"It isn't? Everything I've found makes it pretty clear that denim and flannel aren't exactly what you're used to.\" \n\nShe shook her head, an honest smile lighting her face. \"Not what I'm used to, but I've found out it's what I want. Everything else seems so superficial.\" \n\nI soaked that in. It all rang true. I've been lied to by the best, at their most desperate. Not for very long. \n\nAnd never twice. \n\nIf it was all true, and if I did survive this, I would have to figure out another way to hurt him. \n\nShe took my silence as a signal to keep talking. She shouldn't have. \n\nIt very nearly killed her. \n\n\"I'm sorry about Patricia and Gabriella...\" \n\n\"STOP.\" I stood, slamming my hand on the table, an eruption, an almost uncontrollable surge of hate and anger welling up. Screams echoed in my head. The screams of my wife and little girl. Images of wreckage floating on the ocean flashed through my mind. \n\nThere had been a throw away comment in a news story that the passengers were \"probably conscious for all of the ten minutes it took the struggling airliner to finally make impact after the bomb had gone off\"; it was burned permanently into my brain, and it ripped into my sanity again. I had a vivid image of Tricia huddled protectively over Gabby, waiting, praying, for the salvation that wouldn't come. \n\nShe flinched, stunned. Then stayed very, very still. \n\n\"You don't get to say 'sorry' about them. You don't get to do that. Not about Tricia and Gabby!\" \n\nFor a second I felt the checkered wood grips of the Python against my fingertips. \n\nShe faced me, raising her chin slightly as if giving me permission. She didn't look angry or scared. She just looked resigned. \n\nIt took all my strength to pull my hand from the grips. \n\nEven she, as composed as she was, breathed a small sigh of relief at that. \n\nI forced myself to sit back down, the screams in my mind fading slowly. \n\nWe just sat, rigidly staring across the table past each other. \n\nShe spoke first. Certainly couldn't fault her for courage. \n\n\"Apologizing was a reflex Ken, I don't expect you to accept one or even acknowledge it. You're right, for some things there is no forgiveness.\" \n\nI closed my eyes for a second and breathed deep, the rich coffee scent calming me a little. \n\nShe started again. The woman was relentless. \"It took me a long time to figure out even some of what was happening, and even longer to accept that Erich was that inhuman. Even when Maria explained it, I had trouble believing it. Because it meant I helped him, enabled him. Even if I didn't know it\" \n\nInhuman was an excellent word. Somewhere along the way, The Reinhardt, of Reinhardt Interessengemeinschaft - Reinhardt IG - had realized that the stock markets could be manipulated with a few small engineered 'incidents'. The massive conglomerate that was Reinhardt IG was so large that different companies could exploit sudden changes in the stock market from different angles. A fire in an oil refinery, a mechanical failure at a pharmaceutical plant. An ethnic uprising in Africa. \n\nOr the terrorist bombing of an airliner. \n\nAfter I'd worked my way into position as the head of a Special Mission Unit that had always been more rumor than anything, I'd first used it to exterminate the terrorist group that had been tagged with the crime - only to discover that they'd merely been puppets. \n\nBut I'd still had that unit. \n\nThe convenient thing about a \"Black\" unit is that nobody looks too closely at it. Nobody wants to really know what it's doing as long as certain lines aren't crossed. \n\nBecause what you don't know, you won't have to testify to in front of Congress. \n\nOnce I'd confirmed the existence of the unit, I'd done everything necessary to become what was needed to lead it. Then it had found me. I'd reshaped the unit to suit my needs. \n\nThe unit still filled the niche it already had, but it grew more capabilities. Capabilities I needed. And I'd used those capabilities to pursue my agenda. If anyone ever figured out what I'd done, I'd likely be in prison for the rest of my life. Kidnapping, extortion, illegal surveillance. Theft on a particularly grand scale. The \"extra-judicial\" executions alone would ensure my permanent incarceration - although every one of those killed deserved it. I wouldn't have innocent blood on my hands. I'm pretty sure I couldn't be accused of treason, although that admittedly depended on who defined it. \n\nI'd recruited carefully. When the unit needed a new Senior Non-commissioned Officer, I recruited Sergeant Major Godek. It always struck me as odd that we actually became good friends. He's pretty much the only one I'd had in the last three decades. I hadn't sought him out solely for his obvious abilities, but because it had given me an informal link into the CUMULOUS programs through his sister, Donna. Ironically, it ended up allowing me to keep an eye on Emma Reinhardt and her progress at the FBI when Emma had married a CUMULOUS operative. \n\nI'd decided on \"an Eye for an Eye\" for The Reinhardt - he'd lose his wife and daughter too. Before I killed him. \n\nIt'd taken me a while to track down Emma Reinhardt, and when I did, I found out that a terrorist cell in Turkey had nearly beat me to her. \n\nIronic. No other word for it. \n\nShe interrupted my reverie. \"The only things he cares about are money and power. If you kill me, he'll suffer a little, when the stock market fluctuates. I can't really offer more than that.\" \n\nShe left it at that, standing up to refill both our cups without saying a word. \n\n\"I assume Maria looked into my background. Did she tell you what I did before I applied for OCS and joined Special Forces?\" \n\n\"She said something... Enlisted, I think, a Sergeant or something.\" \n\n\"I was in Finance; a numbers guy. I enlisted to pay for my degree in Accounting. That's how I know your death won't really hurt him.\" \n\nShe shook her head, then frowned pensively. \"It'd be temporary; he'd recover everything and then some in a just a few weeks.\" \n\n\"Reinhardt might even make money off it; big companies, financial institutions, can make money off good news or bad news.\" I felt a grim smile start as a thought struck me. \"If you live or die, Reinhardt will be fine, they'll still make money. As long as they know.\" \n\nI sipped the last of my coffee. \n\n\"Its uncertainty, the \"not knowing\" that they can't handle.\" \n\n*** \n\nI allowed Evie to write a note to her daughter, reminding her that Maria had promised not to interfere in any capacity. \n\nWhen I told her to find some clothes to take with her, she was confused at first - unsure If I was really going to let her live. \"I don't have any clothes here - they're at my house\" She gestured to toward the east where I knew a small cottage sat. \n\n\"No, find something here.\" \n\nShe pulled a box of tie dye skirts, blouses, T-shirts, shoes and beads from the closet of what was obviously a spare bedroom. \n\nI must have looked baffled, and she just gave a sort of odd smile and said \"Monica left these when Cat took that Fellowship in England. It'll be another six months before she misses them.\" \n\n\"Tie dye should be banned.\" \n\n\"Believe me, nobody who knows me and sees me in this will believe it's me.\" \n\nFrom what I'd learned of Evelyn Cabot, that was probably true. \n\nI pulled a pair of jeans with rainbow colored peace signs on the back pockets, a mostly bright-blue tie dye blouse, a pair of little cloth dock shoes, and a heavily beaded denim jacket and tossed them on the bed. ",
        "\"Strip to your underwear and throw the clothes over there in the corner.\" \n\nShe shrugged and began to pull off a boot. \"I'm not wearing underwear.\" \n\nIf she thought I was willing to accept risk to save her modesty, she had another thing coming. \"I'm not leering; I just need to be sure you don't have any weapons.\" \n\nOr radios, or phones, or whatever. \n\nShe shot me a look from under her sculptured eyebrows as she took off her second boot. \"I don't get a lot of leers these days. But you should've seen me twenty years ago.\" \n\nShe peeled her jeans off, then pulled her flannel shirt off over her head and pirouetted slowly, arms raised like a ballerina. Her slender form had aged extremely well - she was still certainly worthy of a few leers. \n\nShe didn't have any weapons either. \n\n\"That's fine, you can get dressed.\" \n\nThe only thing she seemed to regret was leaving her fancy boots behind. \n\n\"So what now?\" \n\nI led her across the fields. It was a bit of a walk to the sedan I'd borrowed, but it wasn't entirely unpleasant - the wind was warming just a bit. \n\nOnce in the sedan, she just sat quietly, staring at the passing farmland as we headed south. \n\nI explained to her that if she caused me any trouble at all, someone would go back for her daughter. And grandchildren. I might not be able to hurt The Reinhardt that way, but I could hurt her. She sank into her seat a bit, but nodded her agreement. \n\nI needed to switch vehicles, but I'd made arrangements. They just needed adjusting. \n\nIt was nearly a hundred and forty miles to Needle's salvage yard. \n\nHe'd been a team medic once upon a time, and I'd shielded him as much as I could from the fallout of a pill habit he'd fallen into after an ugly divorce. I'd made arrangements with him for the car we were in. He'd drop it into a car crusher as soon as we left. I'd also dropped my bags with him before heading up to the farm. \n\nHe opened the door as we pulled up; his mustache had exploded to the point it was almost taking over his face under his faded \"Coors Lite\" fishing hat. \n\nHe looked puzzled when Evie got out of the car on the other side. But he knew better than to ask questions. It wasn't the payment he'd gotten from me, although that was probably enough for any amount of inconvenience, it was that residual loyalty that comes with serving together. \n\nHe just waved us into his office trailer. \n\n\"I need something we can live in for a few weeks, a van or a big car. Transportation just got a lot harder and I need to give my travel agent a bit of time to work it.\" \n\nHe pulled his hat off, and scratched his balding head for a second, then glanced at Evie with a smirk. \n\n\"Got just the thing, Boss. Papers are flawless, nobody's looking for it and... damn, it's perfect. Wait here, might be an hour.\" \n\nIt was just about 50 minutes before he pulled it around front. We walked out to meet him and I brought my stored bags with me. \n\nThe engine sounded beautiful. But that was about it. An aging used-to-be mostly-white RV, half-covered in Deadhead stickers, and a flowery hand painted sign that proclaimed the warning \"If the Camper's a-Rockin Don't Come Knockin\" on the back. The sides were painted with enormous fading murals of the 1978 \"Blue Rose\" Winterland poster. Even the curtains looked to be blue-and-black tie dyed. \n\nNeedles swung out of the driver's seat with a huge shit-eating grin. \"It's in better condition than it looks. 1970 Ford Econoline 300 Shasta RV. Class C. Everything inside is in great shape. Stove, toilet and shower all work. Maybe a little out of style, but it all works. Filled the water and charged the LP gas for you. Even filled the tank. Bought it at auction for practically nothing six months ago. It was in barn storage for about 20 years, but fired right up when I started it.\" \n\nHe waved toward the giant mural. \"I figure you and your lady friend can ride in a style she appears to be accustomed to.\" \n\nI glanced over at Evie. At first I thought she was crying, then I realized she was desperately trying not to laugh. \n\nWe needed to get out of here before Needles actually learned something that could be bad for him. Still, anyone who tried to get anything from him would quickly learn that my Medics weren't harmless pacifists. \n\nAnd to be honest, a couple of aging hippies in an outdated RV weren't exactly going to register on the radar of anyone I was worried about. \n\n\"You search it?\" \n\n\"Yeah, a couple kilos of really, really old weed were stashed under the wheel well, but that's all. \" \n\nI didn't ask what he did with the weed. Not my problem anymore. And from his description it likely would have been about as strong as oregano by now. \n\nEvie looked to me and then at the side door of the monstrosity, silently waiting for my permission, I nodded her on in. She knew the penalty for doing anything stupid. \n\nShe opened the door and pulled herself up into the camper with her bag of clothes while Needles and I circled the battered vehicle. \n\nThe tires looked surprisingly good, and everything else looked... functional, at least. \n\nAs I rounded the behind the camper, she slid the back window open. \n\n\"Honey, it's perfect, got a queen-size back here, plenty of room to stretch out and, well, everything.\" \n\nThe lyrical trained voice was gone, her accent was pure Southern Belle. \n\nBut it was the wink and the slight teasing tone really caught me out. \n\nNeedles grinned. \"See? Perfect.\" He paused. \"Let me get that spare set of keys for you two lovebirds.\" \n\nAs he slipped into the office, I glanced up at Evie. \n\nShe gave a half smile. \"Maggie the Cat from 'Cat on a Hot Tin Roof'. I minored in Drama.\" \n\nKeeping one eye on the door, she continued. \"He doesn't know anything does he?\" \n\n\"Not much. Just paying back a favor or two.\" \n\nHer mouth twisted. \"What happens if Erich's men find him?\" \n\n\"More than likely The Reinhardt loses a couple men, and Needles pops smoke.\" \n\n\"Shouldn't you warn him?\" \n\n\"Me just being here is a warning. He knows.\" \n\nShe looked a little unconvinced, but I knew. When we'd initially gone into his office I'd seen him glance at his hides. I'd guess 3 handguns and probably a shotgun or carbine - the salvage yard was no place for a rifle. And he probably had a dozen more weapons stashed around the yard. \n\nHe came back out the door with a battered surplus backpack. \n\n\"I cross loaded a Unit One Medical pack and some extra antibiotics and meds in this.\" \n\nAs he handed it to me, he quietly added \"There's a clean 1911 Gold Cup Match with four mags and an extra 200 rounds in the bottom. I know you love that damn flintlock of yours, and it truly is a thing of beauty.\" He grinned under his ridiculous mustache. \"But, Jesus, Boss, six rounds, no rapid reload? \" \n\nLike I said, he knew. \n\nI nodded my appreciation. At least it wasn't a Glock. God, I hate those things. \n\nWe were on the road a half hour later heading south, and she seemed far too relaxed for my comfort. She'd dug an old hardbound Cram's Easy Reference Business-Man's Atlas out of somewhere in the camper and started perusing it. \n\n\"You know, I've never seen the Grand Canyon.\" \n\n\"I'm not sure you understand the whole 'kidnap victim' thing.\" \n\nShe shrugged and kept on tracing out routes with a fingertip, her nails were trimmed rather shorter than I'd have expected. \"You said this would take weeks, maybe months. There's no point in being miserable the whole time. I already promised to see this through, so you don't have to worry about me. Besides, sooner or later Stockholm Syndrome should set in, right?\" \n\n\"That's fine, but this isn't a sight-seeing tour. And I don't plan on going anywhere snow might hang us up.\" \n\nI thought I saw her give a slight, secretive smile, but I couldn't be sure. \n\n*** \n\nBlue Highways. That was the book. By a guy named Least Heat Moon. A rambling account of the back roads of America. I'd stumbled across a tattered copy while crossing the Pacific in a C-141 that felt like it wanted to come apart at the seams. \n\nLeast Heat Moon had traveled thousands of miles by backroads and secondary highways. I'd pretty much decided that was my plan. \n\nIf a road had the word \"Interstate\" by it I intended to avoid it if at all possible. Stay out of any major cities. We'd head south to Florida from Virginia, then west on a crooked path until I reached my \"travel agent\". \n\nWhich Evie pointed out, was a pretty odd idea, given that \"my plan\" had been on the New York Times Bestseller list for nearly a year. \n\nShe arched one eyebrow. \"So are we stopping at all the little diners too? I've read the book, you know. \n\nI always wondered what it would be like to just 'go' like he did. No destination, no deadlines, no pressure.\" \n\nI shrugged with one shoulder, watching the road. \"I don't know. I've always had a destination. An ending.\" \n\nShe was quiet for a while after that. \n\nThe only electronic device I had was an absolutely clean tablet, purchased months ago at a random Walmart - I'd never even unboxed it, much less turned it on until we stopped at a McDonalds in Catawba County, North Carolina where I set up a Yahoo account, and did a \"Buy-it Now\" on a ten-dollar battered vintage friction-drive toy plane on ebay. \n\nI bought two of them and had them shipped together. \n\nBy the time we'd finished our meals - well, I had anyway, since it turned out that Evie wasn't a fan of McDonalds - I had a response. In three months I could get two planes of the same type. It'd be three times the original price. \n\nEvie had watched the whole process wordlessly. Strictly speaking you shouldn't let your captive watch you do this kind of thing, but I was certain she wouldn't risk her grandchildren. I'd seen her eyes when she talked about them. \n\n\"Since this is an odd item to be picking up collectables, I'd guess this has something to do with our journey.\" \n\n\"It's thirty thousand dollars for quiet passage for two from California to Fiji, and it will be three months. I have connections to get to our final destination from there without passing any customs.\" \n\n\"May I ask, where is our final destination?\" \n\n\"You may not. It's part of that whole 'kidnap victim' thing. I can just abort the Fiji link if I have to.\" \n\n\"Oh. I guess that makes sense. Not wanting to be met at the airport by the police if I run away.\" \n\nI considered reiterating my threat, but it seemed unnecessary. \"Yeah, that.\" \n\nActually I wasn't too worried about that. Once we got to the islands, I was more than a little certain that local law enforcement there wouldn't take kindly to FBI or Reinhardt interference. Chief, Frank Rotuma, owed me a favor or two, and he really disliked outsiders throwing their weight around. \n\nThe idea of someone trying to arrest me at The Shack with Pogo, his feral little wife, and Monster around induced a grin. They'd better send someone they didn't want back. \n\n\"Something amusing?\" \n\n\"Mildly. Just pondering the difficulties of law enforcement.\" \n\nI didn't bother explaining further than that. \n\nShe was uncertain that first night. We laagered down in a Walmart parking lot. She changed into a t-shirt and shorts in the camper's tiny bathroom. I could sense her steeling herself in case I turned out to have expectations. \n\nThe only expectation I had was rest. I hadn't slept well for over thirty years. . \"Light sleeper\" didn't even begin to cover it. I wasn't too concerned she would get the drop on me. \n\nI tossed a blanket and a pillow on her side of the bed, and another set on mine. She might get skittish, so I decided that comment I'd skipped earlier might be a good idea. \n\n\"Just a reminder, I have friends. Sooner or later, if something happens, they will get around to dealing with your daughter and grandkids.\" \n\nI wasn't actually sure about that. The grandchildren, anyway. Monster seemed a little odd about children. If he saw Emma Reinhardt as a threat, she was as good as dead, but her children, maybe not. If what Finn had told me was true, they were probably safe. But she didn't need to know that. \n\n\"I made a promise, I'll keep it.\" Cold, lawyer-like. \n\nShe slept with her back to me, wrapped tight in her blanket. \n\nI put a line of pillows between us. \n\n*** \n\nShe was almost rigidly courteous the next morning, probably because it felt less like an adventure and she'd had more time to dwell on the consequences. \n\nAs I watched her put herself together as much as much as she could, I thought about the logistics of the next three months. We'd need food, more clothes. Soap and shampoo, another toothbrush. Some toiletries. \n\n\"We need to do some shopping. Groceries, some clothes.\" \n\nShe looked over at me \"Can we pick up a hair brush? \" \n\nHer hair had fallen back into near perfect order without her doing much more than running her fingers through it. It seemed to be as determined to put up a graceful appearance as she. \n\nStill. \"Sure, if you need make up, or anything, we'll get it. Probably not exactly the quality you are used to, but it'll work.\" \n\nShe brightened just a little. \"I don't need much in the way of make-up.\" \n\n\"Much\" appears to be a relative term. I hadn't actually lived with a woman in so long, I'd forgotten how much make-up it takes to look like no make-up at all. It was easier to buy it than make a scene, though. And it seemed to do wonders for her mood. All we ended up picking up were the toiletries, make-up and some underwear. Didn't need make ourselves too memorable by making a large cash purchase. \n\nWe had to spread the purchases out, hitting a Goodwill store a few towns over and a grocery store in another one. \n\nAt the Goodwill store, I picked up cooking utensils and silverware. Evie ended up picking out several more outfits - sticking with the \"aging Woodstock refugee\" theme. Frankly, she seemed to be enjoying the whole thing a lot more than she should. She still didn't seem to completely understand the whole kidnap victim dynamic. \n\nIn public, she used a toned down version of her southern accent. She also apparently decided to use the name \"Libby\" and called me \"K\". \n\nOne we'd loaded her treasures up and were back in the rolling Summer-of-Love shack, I had to ask. \n\n\"Libby? I get 'K', it's easy to remember, makes sense. But why 'Libby'?\" \n\n\"It's short for Liberty Moonflower. When I was a teenager, I decided that if I'd been a hippy that would've been my name. 'Liberty Moonflower' just sounds... free. I'd have had tie-dye dresses, love beads...\" she held up her clunky rosewood bead necklace -one of the milder ones from Monica's collection \"and a fur-person companion named 'Spindrift'.\" \n\nThat sounded entirely too thought out. And too earnest. The last bit of that had been more to herself than to me. I glanced over out of the corner of my eye. She was just distantly looking out the widow, lost in some kind of reverie. \n\nThe Bird in a Gilded Cage. We all want whatever is on the other side of the fence. For the poor it's wealth. For her it was freedom. Freedom from her life, freedom from the responsibilities that had held her. \n\nI let her sit for a while until she started to come out of the dream she was lost in. I pretended not to notice. \n\n\"So exactly what the hell is a 'fur-person companion'?\" \n\nShe smiled \"A dog. I think. Maybe a cat, but probably a dog. I never had a dog.\" \n\nThe grocery store was another revelation. She had no idea how to cook. At all. She'd had people for that her whole life. \n\nThirty years of bachelor living had made me a passable cook. \n\nBesides, on the darker fringes of the Army when you show up at a remote jungle camp or safe house far from normal facilities, nobody asks if you can shoot or fight. Everybody assumes you can do that or you wouldn't be there in the first place. They want to know if you can cook something other than ramen noodles or cut hair without leaving someone looking like they have the mange. \n\nShe looked on in frank puzzlement as I put together all the basic ingredients to cook. I swear she had no idea what cooking oil was used for. Much less why anyone would need both shortening and cooking oil. \n\nAs we moved on, we tried to be obvious. The best way to hide is to get people to see you as something else. Other people in the campgrounds just saw a couple of ex-hippies who'd pulled the old camper out and hit the highway on a retirement tour. Evie kept her word about cooperating, to all appearances whenever we were out of the camper, she was \"Libby\". \n\nBy the time we reached the panhandle of Florida, we had a rhythm established. \n\nI drove four or five hours each day, stopping at either a campground that took cash, or a Walmart parking lot if necessary, seeking a fairly dark corner of the area. I was as random about routes as I could be. Humans aren't actually very good at random, but I did my best. \n\nWe'd typically fix breakfast and dinner in the camper. Or rather I would fix breakfast and dinner. But we ate lunch on the road, stopping at some restaurant or other. \n\nEvie never chose a regular chain restaurant when it was her turn to choose where to eat, always a local place, usually with some kind of specialty. Foot-high pies, emu, gator stew, deep-fried-damn-near-anything. \n\nI wasn't even sure how that had happened in the first place. I was more than a little certain that kidnap victims typically don't \"get turns\", but somehow it'd just happened. \n\nShe really seemed to relish the strange stuff. Somewhere in Louisiana, I finally asked her about it. \n\nShe smiled over her plate of alligator sausage jambalaya. \"I was raised on French cooking. Calf's head, pancreas, escargot. I just like to try food that is a little beyond McDonald's. You certainly don't seem to have a problem with it.\" \n\n\"Jungle survival school. Nothing like living on grilled tarantulas, steamed paddy bugs and fried crickets to burn the food aversions out of you.\" \n\nShe wrinkled her nose impishly. For the life of me, I couldn't figure out how she'd managed to so completely drop her Swiss boarding school upbringing and be so normal. \n\nShe delicately speared a bit of sausage and chewed it. \"A lobster is really just a giant water bug with good public relations, I guess.\" \n\n\"I think the definition of 'good' depends on whether or not you're the lobster.\" \n\n\"That's certainly true.\" \n\nShe picked up another cayenne cornbread biscuit and smeared extra butter on it. \n\nI couldn't help myself \"It's nice to see a woman who actually eats like she means it.\" \n\n\"I'm going to have to slow down a bit, I was doing yoga and riding every day when you decided to carry me off. If I keep eating like this and not getting exercise, I won't fit in Monica's clothes for too much longer.\" \n\nAs far as I had been able to tell, she wasn't in much danger of that. \"Seriously, I doubt you have much to worry about.\" \n\nShe suddenly lapsed into her Southern Belle accent. \"While I do so appreciate the compliment, Kind Sir, my ever-widening ass must beg to differ.\" \n\nI damn near snorted alligator out my nose. \n\nI couldn't help it, I began to laugh; she joined in shortly, right along with me until we were both near to tears. We were over a half hour down the road before we could make eye contact again without starting up again. \n\nShe had her atlas out again. \"I'm not sure how important this is, but if we stay on course, we'll be in California, waiting for two months.\" \n\nThat concern had been playing on me for a while. I wasn't worried about Hawthorne; she'd already had a chance at the farmhouse. She could have had me cold, but hadn't taken the shot. I really didn't want to be a static target for The Reinhardt, if he'd started looking, though. I was thinking about how to respond when she continued softly. \n\n\"I've really never been to the Grand Canyon.\" \n\nIt had an almost pleading sound to it. \n\nI sighed. \"You really are missing the point of being a kidnap victim. But it'd kill a little time. We'd better pick up a couple heavy comforters at the next stop. And some flannel pajama sets. It can be damn cold there in winter.\" ",
        "Somehow at the next stop we not only bought down comforters and pajamas, but a foot-tall battery-powered Christmas tree ended up clamped to our little dining table. \n\nShe seemed a little dreamy after that - she'd been cooperative about the whole thing, but the Grand Canyon was obviously important to her. I got the impression it symbolized something, something she'd lost maybe. \n\nShe was a little quieter. Almost shy. \n\nWe didn't really discuss anything serious for several days after that - sticking to harmless subjects and meaningless trivia. Still, things felt more comfortable than I'd have thought they could. \n\nUntil we ran to central Illinois for a hamburger. \n\nIt was called Moonshine Diner. I'm not even sure where we heard of it, but it was supposed to serve amazing burgers. And they are really good. Maybe not quite as good as the hype, but just finding the place in the maze of country roads makes it success. \n\nExactly the sort of meaningless side trip that would kill time and fit our \"two hippie road trip\" cover story. \n\nGet there before 1230, though - that's when the grill gets turned off and you're relegated to cold sandwiches. \n\nWhich is why we had to spend the night at a mostly empty campground so we could be on time to get lunch the next day. \n\nCentral Illinois in the winter time is not exactly camper friendly. The wind almost never stops. There's just nothing to really slow it down. No hills, no ridges, nothing but bare, open fields from horizon to horizon. Just a few sparse lines of mostly barren trees separating endless bare fields. Even in a solid house, the sound and feel of the wind sneaks through. \n\nIn a 1970 RV camper, you feel every bit of it. \n\nWe'd already turned in, as usual, facing away from each other, each covered with one of the comforters, our Great Wall of Pillows separating us. \n\nThe camper seemed to shiver and tremble as the wind stepped up its effort. \n\nI heard her shift a little. \n\n\"I'm cold.\" \n\nThe camper shuddered at a harder gust and she began to pull pillows from The Wall to insulate her side of the camper. \n\nThe wind kept coming, rocking the camper a little. The chill seemed to settle deeper over us. \n\nAfter a moment she sat up. \n\n\"Ken, we're both adults and you've been more than accommodating to my... concerns. Maybe tonight, we can just pile our comforters on top of each other and sleep back to back?\" \n\nI agreed and we settled in with her back pressed firmly to mine. \n\nThe next morning was a bit trickier. We woke up at the same time. At some point we'd rearranged ourselves and ended up with me on my back, my arm around her, as she nestled into my side with one hand gripping my shirt. \n\nI couldn't imagine sleeping so heavily I wouldn't have noticed our rearrangement, but it had obviously happened. \n\nWe untangled ourselves slowly and wordlessly; from the bemused look on her face, she was as surprised as I was. \n\nShe ventured a comment in a wry tone. \"I must finally be developing Stockholm Syndrome.\" \n\n\"If it helps any, I don't plan on robbing any banks in the near future.\" \n\nShe sat on the corner of the bed and looked over at me thoughtfully. \n\n\"So what is our plan?\" \n\n\"'Our' plan?\" \n\n\"Stockholm Syndrome, remember?\" \n\nI considered her for a long second. \"No real harm in telling you. You've never been the 'stay-at-home-mom.\" She winced at that, but I continued on \"Most of your stuff is on automatic, but you do sit on some boards and cast votes. Important boards, substantial votes, even when Reinhardt is present. Unless I miss my guess, Reinhardt can't vote for you.\" \n\nI paused until she nodded slowly. \n\n\"So if you don't show up at the meetings, what happens? Odds are, if you're incapacitated or dead, someone will pick up the proxies, but if there's proof of life coming out periodically, it'll make things complicated. It'll add uncertainty to decisions, put off long term plans. All of that will impact Reinhardt's bottom line. Over the long term it will cost him enough to provoke a response.\" \n\n\"It's not like he'll come for you himself, he has people for that. People like you.\" \n\n\"They won't be coming for me at all. They'll be coming for you.\" \n\nHer eyes widened slightly at that. She'd started to feel that we were allies of sorts, maybe; maybe a real touch of Stockholm Syndrome. I shook my head to forestall a response. \n\n\"He won't get to you. I'm choosing the battlefield, and unless we do something really stupid, he won't be aware there is a battle until it's too late.\" \n\n\"So, I'm bait?\" a hint of suppressed disbelief, coupled with a weariness that seemed deep and profound. \n\n\"Partly. Mostly, at first, but now I'm starting to hope you might be an ally. Maybe even a partner.\" \n\nShe looked down meditatively, \"Are you going to kill him?\" \n\n\"If everything goes right. But I want to hurt him first, make him feel some of the pain he's inflicted on so many people.\" \n\nShe stood up wordlessly, picked up her clothes and went to change in the tiny bathroom. \n\nBy the time she reappeared, I'd changed and poured two cups of coffee. \n\nShe stood staring at me for a long moment. \n\n\"If you want cooperation, I have conditions.\" \n\n\"You still don't get the whole 'kidnap victim' role.\" \n\nShe didn't bat an eye; this was the woman who'd stared down boards of directors repeatedly, much more the person I'd expected her to be when I met her. \"I know ways to hurt him you haven't even considered.\" \n\nI could respect that. \"What do I get in exchange?\" \n\nHer clear blue eyes seemed to radiate ice and cold. She ignored my question. \"Emma and her family. He'll lash out at them to get to me. If we do this, I want them where he can't get to them.\" \n\n\"Moving them would be too obvious. But I can put real protection on them, call in some markers. If Hawthorne is as fond of her as you say, she'll probably help. If not, I can force her.\" \n\nShe didn't ask, but raised one eyebrow in question. \n\n\"I have video of her killing an official in that Macau raid. One of my snipers got it on gun camera when she stepped on him. He deserved it, but that won't matter, he wasn't actually attacking her. I'd rather not use it though.\" \n\nBlackmailing the Deputy Director of the FBI should always be used as a last resort. Nobody gets to that position as a delicate wilting flower. And I'd reviewed that video; she hadn't hesitated at all. I doubted she'd mellowed that much. \n\nShe shook her head and reached past me to pick up her cup of coffee. \"Maria warned me you'd be ruthless.\" \n\nWe drifted over to the little table. \"I'll take that as a compliment from her.\" \n\n\"You're sure you can find people to protect them?\" \n\n\"One of my former team members runs a private security firm. He owes me a favor.\" \n\nI'd passed Kurt lots of small contracts after he'd left the Army and started his firm. He wouldn't mind more business. Katie would probably be a little less ambivalent about it, but she was a pretty practical girl. \n\nEvie traced a random pattern on the table to next to the Christmas tree. \n\n\"Erich isn't just about money, his weakness is his pride.\" She seemed to come to a decision. \"It's also what makes him dangerous. That's why I'm here, really.\" \n\nMy turn to raise an eyebrow. \"Really? I distinctly remember kidnapping you at gunpoint a few weeks ago.\" \n\n\"And if I hadn't already decided to talk to you, maybe work with you, Maria would have had a team there. Maybe they'd have gotten you, maybe not; Michael said you're good enough that it wouldn't be a sure thing. But, either way, I wouldn't be here.\" \n\nTrue enough. \"So why?\" \n\n\"My grandchildren. And Emma. Erich will go after them eventually, especially if something happens to me. Emma defied him, did what nobody else has ever done. She told him to fuck off and take his money with him. He is patient, but not forgiving. Never forgiving. He'll never let that go.\" \n\n\"And you've protected her.\" \n\n\"I've been the only one that could. Until now, all I could do was be a shield for them and wait for him to act. Shields aren't the best weapons.\" She fixed me with her suddenly icy eyes and I knew what she was about to say. \n\n\"I needed a sword.\" \n\nI got up and refilled our coffee to buy myself time. It made sense. I hadn't known about Emma's rebellion until Evie told me. After that, I'd assumed Evie was offering herself as a martyr just to protect her grandchildren from me. But in her eyes, I was a minor evil, hardly a monster at all. She'd been married to a real one for decades. And with Hawthorne's input, she'd just realized how dangerous he was. \n\nI sat back down with our coffee. \"So, partners.\" \n\nShe smiled a grim little smile and reached across the table to grip my hand lightly. \"Partners.\" \n\nWe headed over to get our special burgers. \n\n*** \n\nWe headed toward Dallas where Kurt's firm was headquartered. A quick stop at a McDonald's, to Evie's suppressed chagrin. She knew we needed access to Wi-Fi, so she didn't complain. At least not out loud. \n\nI just ordered a couple coffees though and waited for the reply to my dinner invite. It didn't take long. While it was tentatively positive, I had the feeling Katie wrote it. \n\nThere was a cold undercurrent to the email that was completely unlike Kurt. \n\nThat evening, when we stopped, we ended up laying down back to back again. \n\n\"Ken?\" \n\n\"Yeah?\" \n\n\"I didn't choose any of this. I was born into it.\" \n\n\"That's pretty much what I thought.\" \n\n\"I wasn't like Emma, I wasn't strong enough to fight back.\" \n\n\"Did you even want to?\" \n\n\"For a while... but it just seemed impossible to even begin.\" \n\n\"Tough life.\" \n\n\"Don't be condescending. I didn't get to choose anything. The one time I tried...\" \n\nHe voice trailed off. \n\n\"What happened?\" \n\n\"I was seeing a guy, Nick. He seemed perfect. Until he disappeared. I thought my parents approved. He was a Yale educated lawyer and came from a well-connected family. We were planning on going to hike the Grand Canyon, and he just didn't show up.\" \n\nThat at least explained that. \n\nShe sighed. \"My father had a talk with his father, and they decided that that both families would benefit if we parted ways. My family had been approached by Erich's father about a match. Like some 17<sup>th</sup> century royal family. Father made it clear to me that it wasn't optional.\" \n\n\"You could have walked away.\" \n\n\"From everything. I'd have lost everything. Nobody ever said it outright, but it was clear. Money, privilege, status. Like I said. I'm not Emma. She has Erich's willpower. I didn't.\" \n\nI smiled to myself. \"That's changed.\" \n\n\"I suppose it has. But it's a bit late.\" \n\n\"So, whatever happened to the other guy?\" \n\n\"He found someone else and married in less than six month. About three months before my family was joined to House Reinhardt. I guess I thought he'd pine for me for years. That killed any romantic notions about life I might have had.\" \n\nShe grew quiet for a while, then nestled back against me a bit harder. \"I wanted it to be something it wasn't - you know the old love stories where the two people who have nothing in common are forced together against their will and eventually fall in love? It started off just like that - we disliked each other on sight. But it never got better.\" \n\n\"Just not right for each other, huh.\" \n\nShe laughed, a single sardonic, soft bark of a laugh. \"He tolerates two types of women. The weak little submissive girls he can - and does - force to do the vilest, most degrading things. And the hardest, lowest, most experienced, and crudest street whores he can find. They reinforce everything he already believes about women.\" \n\n\"Must have burned him to have a daughter.\" \n\n\"My second, unintentional, act of defiance. My first had been to refuse to take his family name. My third was to refuse him another child, after he gave me gonorrhea.\" \n\n\"I can see that would be a problem. But people get over infidelity all the time.\" \n\n\"Infidelity wasn't the issue. He never promised fidelity, and frankly, after meeting him, I didn't expect it of him. We lived separate lives, our marriage was almost strictly a financial arrangement, but I agreed to two children. After the disease, I refused him another child. We'd had trouble conceiving and I'd been tested over and over again. He'd never consider that he might be the problem. I paid - very dearly - for the privilege of viewing his medical records. Emma was almost literally a miracle.\" \n\n\"Are you certain that she really is his.\" \n\n\"Fair question. I wasn't as bad as he was, but I had my share of very discrete liaisons. Still, I was careful, and Erich had her tested to be sure. Trust was, for obvious reasons, in short supply.\" \n\n\"Any bastard Reinhardts running around?\" \n\n\"No, thank God. I've kept a very close eye on that.\" \n\n\"So, I'd guess that brings us to his third weakness. Money, Pride. Now his Legacy.\" \n\n\"How did you know?\" \n\n\"Seriously? Hundreds of years of Reinhardt merchants growing Reinhardt IG, a demand for two children? His fury over Emma? I don't have to turn that over to the G-2 to figure it out. Legacy is important to people like that. If Emma has completely rejected him, what can he do?\" \n\n\"I'm not sure. I know he's started to depend on the Board itself to reinforce him. The bloodline is important to him though, he may have designs on Ellie.\" \n\nShe spoke with perfect control, perfect volume, the cadence never wavered; but underneath it, her fear coiled waiting like a venomous snake. \n\nShe was terrified. \n\nIt was quiet after that and I felt her slip off to sleep behind me; she'd voiced her fears, made them easier to deal with. \n\nBut my nightmares had just gotten far worse. I'd very nearly handed the Reinhardt exactly what he wanted. If I'd killed Evelyn, Emma and Emma's husband, it'd have left him the guardian of the girls. They were innocents, and despite my threats, I doubted I could kill them. With no parents they'd have been easy to shape. He could have used their anger at my actions to turn them into whatever he wanted. He'd have had three of them, three Reinhardts to work with; certainly one of them would become what he wanted them to be. \n\nI needed to revise my plan. Long term suffering just couldn't be in the cards. Too many variables, too much chance. He needed to feel the pain, loss and hopelessness, but he couldn't be left alive. \n\nWe never really talked about it, but the pillow wall never went back up between us. And as we retreated south from the cold, we just kept sharing a single blanket. \n\n*** \n\nI never had any intention of actually entering Dallas. Maneuvering the camper through Dallas traffic wouldn't have been appealing at the best of times. More importantly, cities are covered with cameras - bank cameras, store cameras, traffic cameras. \n\nSo I'd arranged to meet Kurt at a steakhouse several miles out of town. \n\nAs I expected, expected Katie showed up with him. Kurt had let me know that she ran the business side of the firm; I was more than a little certain she didn't trust me at all. Not that I blamed her. \n\nShe kept her expression carefully blank as the two of them walked over to the table. Kurt scanned the restaurant with a professional eye. \n\nHe seated Katie opposite Evie, then sat down. A curiously old-fashioned gesture for his generation. I'd done the same for Evie, but that was a little less unusual for our generation. \n\n\"Colonel.\" \n\n\"I wasn't sure you'd show.\" I nodded over to Katie. \n\nKatie gave an utterly plastic smile. \"Business is business.\" \n\nLike I said, practical girl. \n\nKurt gave a slight smile. \"How's Pogo?\" \n\n\"Married.\" \n\nBoth Kurt and Katie jolted at that. Pogo - Sergeant Major Godek - had been the perennial bachelor forever. \n\nKatie stared in absolute shock. \"Seriously, what girl would be crazy enough to...\" \n\nKurt put his hand over hers with a soft smile. \"Katie.\" \n\nShe slouched back in her chair just a bit. She'd obviously been demonizing us over the last few years. We probably deserved some of it, but Kurt was what he was. We'd just harnessed it. Maybe a little too long. \n\nEvie watched the whole exchange with fascination. \n\nKatie restarted. \"So who's the lucky girl?\" \n\n\"He met her on leave about 15 years ago or so.\" \n\nKurt shook his head. \"I ran into him about 10 years ago and he never mentioned her. \" \n\nI shrugged. \"It's a long story. She was tied up for about a dozen years before they managed to really get together.\" \n\nKatie gave a sardonic smile \"You make it sound like she was in prison.\" \n\n\"Not quite.\" But not far off either. I wasn't sure how much I wanted to go into. \n\nFortunately a waiter arrived to take orders, forestalling any further discussion. And when we picked back up, it was back to business. \n\nKatie's plastic smile disappeared. \"So what can K2 Executive Services do for you?\" \n\nKurt pulled out a notepad. \n\n\"We need a long term protective detail on a family.\" \n\n\"How long term? And what kind of detail?\" \n\n\"A year, maybe more. Full package; drivers, panic buttons, armed escort. I think the father is capable of protecting himself, the mother will probably have an official - or at least unofficial fed with her. So primarily the home and three children.\" \n\n\"We'll have to recruit. I can put a three man detail on them immediately; it will have to expand it to six, but this is going to be pricy.\" \n\nEvie leaned forward, locking eyes with them. \"There is no such thing as too expensive on this. Make it twelve men if you have to. Twenty. Buy armored cars.\" \n\nKatie gave her a soothing smile, she'd obviously dealt with concerned customers before. \"The cost for a six man team is nearly 800 thousand a year, and that's just the baseline man-hours and overhead.\" \n\nEvie turned toward me. \"Did you bring your tablet?\" \n\nI handed it to her after checking to see that the restaurant had Wi-Fi. \n\nShe tapped rapidly on the tablet. \"What bank do you accept payment at? And do they have your cell number?\" \n\nKatie gave her the name. \n\n\"You should be getting a call soon.\" \n\n\"Banks are closed.\" \n\n\"For some things, banks are never closed.\" \n\nKatie gave her the kind of look you save for the dangerously unbalanced just as the salads started to arrive. \n\nHer phone rang a few minutes later. She talked quietly for a few minutes then checked something on her smartphone. Her face went very grim. \n\n\"Who the hell are you, and tell me why we shouldn't be running for the door right now.\" \n\n\"A very concerned grandmother. I just need my grandchildren protected at all costs.\" \n\n\"Why us? We're a small firm, you can afford Cass Global or Clark International. They may be better suited...\" \n\n\"But Ken doesn't know them. He knows you and assures me you can do this.\" \n\nI think Katie was seriously considering stabbing me with her steak knife. But she kept glancing at her cell phone - undoubtedly at their business bank balance. \n\nI pulled my own memo pad out, and opened it to the list I'd written up on the way. \n\nI passed it to Kurt. \n\n\"All the former team members who might be available. The red stars owe me favors.\" \n\nKurt glanced over the list \"Hollywood... Needles... \"he paused and looked up at me \"You sure about him?\" \n\n\"You see that hideous camper on your way in?\" \n\n\"Seriously. The Deadhead Express out there?\" He seemed to really notice Evie's tie dye blouse for the first time and broke into a grin. \"Still has that warped sense of humor.\" \n\nKatie leaned over and looked at the list. \"That's an awful lot of favors. But with the money your lady here just dropped into our account, we can make it worth their time anyway.\" Then she looked at Evie. \"You have a personal banker who was willing to call the president of our bank direct?\" \n\n\"No, I have a personal bank. I'm the only customer.\" She paused, \"Actually, I own five banks, but I trust one more than the others.\" ",
        "We outlined Emma's situation and the tactical situation as best we could. We very carefully didn't explain just how I'd gotten involved. \n\nI'm pretty sure Katie noticed, but I think the sheer amount of money Evie had dropped into her bank account went a long way toward stilling her. \n\n\"How do we reach you if anything happens?\" \n\n\"I can't intercede, so it's information only. Use PGP, it will beat most non-government hacks. Pass it to Wendy and Pogo for the next month. Then just Pogo\" \n\nKurt just gave a nod, Katie looked a little perplexed. \"Wendy? As in The Wendy?\" \n\n\"She's a travel agent now. Met an Aussie pilot we used out of Asia and decided that the Army wasn't for her anymore. They set up in the discrete travel business.\" \n\nKatie knew what that meant. The wives learn, no matter how hard you try to prevent it. \n\n\"Seriously? All of us wives worried about her being around our guys, but she was so icy toward them we'd about decided she must be gay.\" \n\nI looked at her. \"Katie, I know your opinion of me, I always did. But I made it clear as hell to Wendy and the guys that none of that shit was happening in my unit. Ever.\" \n\nShe glanced over at Kurt. \"I never heard that.\" \n\n\"Would you have believed him? Or me?\" \n\nShe shook her head. \"Probably not.\" \n\nThe conversation wound down after that. \n\nAs we stood up to leave, Katie smiled slightly at Evie. \"The money is good, but don't think I don't know we should have red star by our name in that book too. Those first couple of years after we started the company, we were barely getting by. Somebody...\" she paused, glancing in my direction \"somebody recommended us for a bunch of small, short duration, high profit contracts that we could handle. Legal ones that required discretion, some protection, some training. That gave us the chance to really make a go of it and be something.\" \n\nKurt gave me a slightly guilty look. I didn't blame him though. Katie had to have known something was up, and sooner or later, she'd have figured it out it had to be me. \n\nAs we drifted outside, I noticed Katie eyeing the camper with a disbelieving, amused grin and giggling something to her husband. \n\nThey looked happy together. \n\nLet them. \n\nJust because I had no \"happily ever after\" didn't mean they couldn't live theirs. \n\n*** \n\nWe arrived at the Grand Canyon almost three weeks later. We'd wandered some, but the Canyon was an inevitability. It was a risk, what people in my business avoid - she'd been so dedicated to making sure we stopped at the canyon, I had to consider the possibility that she'd preplanned a meeting or check in of some kind. If so, she still didn't have anything useful to pass anyone. Kurt and Katie were legitimate if the FBI became interested, and heavily armed if it turned out to be anyone less official. If there was some plan in place, it was simply better to trigger it now. \n\nWe arrived just before sunset on Christmas Eve. We just stood on the rim alone, in the near silence, with just the sound of the cold breeze, watching the sky turn unreal colors. \n\nI felt her hand reach over and hesitantly creep into mine. \n\n\"You won't need the revolver. Or the .45. There's nobody here. I just wanted to see it.\" \n\nSoftly, wistfully. \n\nI didn't say anything. To be honest, I'd lost myself in the colors, in the darkening sky overhead. \n\nShe edged just a little closer. Maybe seeking some shelter from the wind. \n\nMaybe. \n\nI let go of her hand and put my arm around her to shield her from the wind. \n\nMaybe. \n\nShe slid her arm around my waist to settle closer into the warmth and we watched until the hard-bright stars swarmed the western sky. \n\nThat night, in the gentle flickering light of our little tree, instead of facing away from me, she faced toward me. \n\n\"I'm tired of being lonely.\" \n\nAffirmation. A desperate need for a human touch. Maybe even Stockholm Syndrome; although for which of us was unsure now. \n\nThere was certainly a sense of urgency, a sense of hunger and need to it. \n\nBut it was smooth, no fumbling, no clumsiness. Two people who'd grown to know each other, probably more than anyone had really known either of us in decades. \n\nThe next morning, instead of quietly moving apart, we just lay there. She was snuggled into my side with one leg wrapped through mine and her hand splayed on my chest while I ran fingers through her hair. \n\nShe sighed, almost soundless. \"I may just stay like this all morning.\" \n\n\"I'm okay with that. Besides, it's cold and our clothes are somewhere on the floor.\" \n\nI could feel her smile. Then felt it go away. \n\n\"Ken, I know this is... limited. And I'm about to ask for a lot. But can we just be an 'us' until we get... wherever we're going?\" \n\n\"Just 'K and Libby' wandering around the country? Holding hands?\" \n\n\"And chasing each other around the bed. Getting up late. Sitting next to each other and sharing dessert at restaurants.\" \n\n\"One bowl of ice cream, two spoons.\" \n\n\"I've never had that. This is already more real than my marriage.\" \n\nIt was a little unsettling. These were things I'd done with Tricia, but it didn't feel wrong, not really. \n\nJust odd. The idea of turning her down seemed like it would be cruel for no end. And maybe I wanted it too. \n\nI mussed her hair. A long-unused reflex made me kiss the top of her head. \n\n\"We can do that.\" \n\nShe trembled against me for a long moment - At first I thought she was cold, but I felt tears as she struggled not to cry out loud. \n\nI really didn't have any idea what to do or how to act. It'd been so long. I just held her and said nothing. \n\nIt must have been the right thing. She eventually looked up at me with a weak smile and too-shiny red-rimmed eyes, sniffling a little. \n\n\"I'm sorry. I'm just being... I don't know. Stupid.\" \n\n\"No. Not stupid. We're away from everything. All the things you've been protecting, everything you've been watching over. It's all being watched by someone else now. You don't have to be tough for anyone right now.\" \n\nShe lowered her head back down and let out a long slow breath. \n\nWe just rested like that for hours. \n\nSomewhere along the way, Evie had managed to purchase a couple bottles of wine and slip them into the camper. \n\nWe pretty much spent Christmas Day in bed. Mostly just being together. \n\n*** \n\nThe next weeks were the best I'd had in a very long time. We wandered almost randomly, stopping at odd little tourist attractions. \n\nWe toured endless wineries. \n\nIn some ways it was the same thing we'd been doing before Christmas. \n\nBut instead of pretending to be a couple, we just were one. We held hands all the time, teased each other. We also shared every dessert. One dish, two spoons. \n\nReality only intruded when we stopped in various places to coordinate with Wendy. Our pajamas ended up stuck in a drawer for the duration. \n\nEventually, though, our vacation had to end. \n\nSo on a desert back road in southern California overlooking a heat-lashed desert with odd patches of heavily watered farm field, we met my travel agent. \n\nTwo SUVs, seven men and one woman - Wendy. \n\nI pulled off the road and parked. \n\nFour of the men split off and began to advance toward the camper, submachine guns appearing from under jackets. \n\nThey looked like Vityaz-SNs, efficient little Russian pieces. I wasn't sure of the variant though. \n\nEvie watched through them warily through the window. \n\n\"So what do we do now?\" \n\nI unloaded both hand guns and put them on the little table under the little Christmas tree; I was pretty certain nobody could compromise Wendy, but if they had, a couple of handguns wouldn't make a difference. \n\n\"We move very slowly.\" \n\nWe stepped out the door - hands slightly raised. Two of the men slipped past us into the camper, while two covered us. The rest watched outward. \n\nWe just stood patiently until they'd cleared the camper. \n\nFrom the way the SUVs sat, they were heavily armored. Beefing up the suspension can only hide so much. \n\nWendy caught a signal from her men and waved us forward. \n\nEvie reached out and took my hand as we crunched forward on the dusty road. \n\nWendy gave a lupine, off-kilter smile as we reached her. \n\n\"I don't normally do family vacations, Colonel. But for you we'll make it work.\" \n\nI glanced at the Land Cruisers. \n\n\"Japanese SUVs, Russian guns? Nobody buys American these days.\" \n\n\"The guns are so heavily modded, they're probably half made in America. And I got the cruisers cheap from some of our old playmates in Iraq. The American government bought them in the first place. Shipping would normally kill you, but we were bringing back empty planes anyway.\" \n\nI looked back at her security team. \n\n\"Wendy, what gives? This isn't discrete. Half a team, up-armor cars and your security is focused out.\" \n\nThe smile fell off her face. \n\n\"Somebody tried to knock off one of your principals. Didn't go well. Kurt sent me a package.\" \n\nEvie's eyes shot open. \"who...\" \n\n\"The husband. I don't know much. Kurt said everyone is okay. There's another note from him to the Colonel here. \n\nShe handed me a sealed package as we loaded into one of the SUVs - it looked secure but I assumed Wendy had read it. \n\nIt's what I'd have done in her place. Business is business. \n\nEvie was barely containing her rage; hands white with tension, nails biting into her own palms. \n\n\"That bastard. We've only been out of touch for three months.\" \n\nI sorted through the package. Summary reports from Kurt. And an anonymous report just signed \"M\". \n\n\"M\". Very James Bond. Obviously Maria. \n\n\"They tried to make it look like a road rage incident. Force him off the road with an SUV and use handguns. Big mistake.\" \n\nEvie gave a grim smile \"He was in his pickup truck?\" \n\n\"Somebody paid big money for that.\" Her smile broadened further. I was almost sure I could see fangs. \"Kurt says level IV plus armor. And all that extra weight made it a lot harder to push off the road than they thought.\" \n\n\"So what happened?\" \n\n\"Kurt had a team in a car trailing him, but they didn't even have to engage. When they tried to force him, he ignored the shots and just bumped them head-on into an overpass support. No survivors, but Maria's people traced some of the money to a subsidiary of Reinhardt IG.\" \n\nEmma's husband was with CUMULOUS GREEN; the Army part of the CUMULOUS program. Not real door kickers like mine, but they had a reputation as well-trained hard cases. They were also known for being utterly pragmatic. To use the old phrase, they believed scruples were money used in Russia, and morals were paintings on walls. \n\nWendy was trying to conceal a smirk. She obviously knew who Maria was. \n\nShe just couldn't contain herself. \"Jesus what a mess. When we're on the same side as the Feebees, it's probably the apocalypse.\" \n\nShe tried to say it laconically, but couldn't quite pull it off. The idea of being pulled into something crazy still excited her. Even if it was bad for business. \n\n\"Your end is just getting us to Fiji off the books. But Maria might sniff around a bit, so don't carry any pharmaceuticals or anybody on their Most Wanted list for a while.\" \n\n\"Most of the guys on the Most Wanted list are already out of the country, the rest don't have the price of a ticket. I keep tabs. And we haven't carried 'pharmaceuticals' for a while, other than black market Viagra. You need any of that?\" She eyed Evie with a raised eyebrow. \"I'll consider it included in the price of a ticket.\" \n\nEvie met her stare coolly. \"I don't think so. We've been doing just fine on cheap wine and mutual Stockholm Syndrome.\" \n\n\"You kidnapped each other?\" \n\n\"It's a long story.\" \n\n\"Well, I'm glad you're getting along so well. You'll be sharing a shipping container for about 40 hours.\" \n\nEvie looked less than pleased. \"A shipping container?\" \n\n\"It's a very nice one - well lit, queen size bed, has its own bathroom. The whole nine yards.\" \n\nEvie shot me a look that promised a complete lack of boredom for the next forty hours. \n\nIt really was a very pleasant shipping container, and it turned out to have a small wine cooler with sixteen bottles of very respectable wine. \n\n**** \n\nWe passed under the sign that said \"WELCOME TO FIJI\". \n\nOnce we'd reached Fiji, we slipped from the shipping terminal to the passenger terminal to pass through customs. \n\nThe objective wasn't to avoid customs - it'd been to avoid using our own names and dodge the ubiquitous airline security cameras that could be hacked for facial recognition. \n\nWendy's passports worked perfectly - a testament to her \"ticket man\" more than an indictment of the Fijian Customs and Immigration Department. Mr. Ellis Banks and Mrs. Candace Touhy had both died less than three months earlier. Whoever Wendy's inside man - or woman - was, they'd sidetracked the death notices for a few months. \n\nJust long enough for Evie and I to get through Fiji, and the delay in processing still be explained by ordinary bureaucracy. \n\nEvie shouldered her backpack with a cheerful smile as we exited customs. \"So, 'Ellis', where to from here?\" \n\n\"We have a bus to catch -It's a four hour ride to Suva.\" \n\n\"A bus? Like a real vehicle?\" \n\n\"Air conditioned and everything.\" \n\n\"Really? I figured after our shipping crate adventure, we'd be going under a truckload of produce or chickens.\" A wicked glint lit her eye. \"Not that I'm complaining about the shipping container. Best international flight I've ever taken. Didn't get bored at all.\" \n\nThe express bus was exactly on time and only about half full; we shared a bench seat and she rested against me while we rode. \n\nEvie's vengeful mood seemed to have been put on pause by our flight to Fiji, although I could still sense her cold fury at Reinhardt. She even enjoyed the brief stop at Sigatoka market, buying a giant shopping basket of fresh fruit, then grabbing a big greasy paper bag of samosas. \n\nShe'd been to Fiji before, but she'd spent her time at private reports rather than touring the coast by bus, and she watched the small villages and coastline glide by with fascination, while crunching a samosa and handing one to me. \n\n\"Love these things. Kind of surprised to find them here.\" \n\nI took the offering. \"They make good ones out here. Indian workers came over to work sugar cane brought some of their culture with them.\" \n\n\"I must have missed that in History class.\" \n\nI paused for second. \"Not to be indelicate, but I doubt your schools were particularly interested in the history of indentured servants.\" \n\nShe gave me a slight scowl and edged away to the far side of our seat, but didn't say anything for a second. Then, \"I'm not completely indifferent to other people, Ken.\" \n\nHer voice was stiff but fragile. \n\nI felt like an ass. She'd been trying hard - really trying and mostly succeeding, at being normal. \n\n\"I know you aren't. I'm not blaming you Evie; and to be perfectly fair, the public school system doesn't exactly dwell on it either.\" \n\nWe crunched our way through the rest of the samosas in silence. The seller had shorted her three, but we were full anyway. \n\nBy the time we got to our destination in Suva, she'd melted back against me. Slowly, as if weak gravity was pulling her. \n\nOnce we 'd collected our backpacks and giant basket of fruit, I started guiding her toward the harbor - it was a bit of a walk, but I'd rather walk than have a cab driver remember me. The early afternoon sun was casting shadows that seemed to be just a bit out of rhythm with us. \n\nWe'd only gotten few hundred feet when a soft voice drifted up from behind us. Female, but ragged, the voice of someone who had seen too much of the wreckage of an uncaring world. The kind of damage that leaves a mark forever, no matter what happens later. \n\n\"You're clear.\" \n\nIt was so oddly soft that Evie didn't even react at first. I reached over and took her hand before she could. \"Eyes front and keep walking Evie.\" I carefully kept my voice even. \"How long have you been on us?\" \n\n\"Since you got through customs. And thanks for the samosas, I was starving.\" \n\nDamn. Pogo was right. Spooky was unbelievably good. \n\nEvie didn't look back \"So are you our guardian angel?\" \n\nA soft, humorless laugh. \"Howard doesn't know many angels, Princess. Only one that I know of. And I'm not her.\" \n\nShe'd put a bit of mocking growl into it when she said 'Princess'. Spooky's opinion of wealthy people falls somewhere between \"first with their back against the wall when the revolution comes\" and \"emergency food supply\". She'd spent most of her life in foster care even before her \"white trailer trash drug addict parents had done the world a favor and burned themselves up\". Her words, not mine. \n\nLike I said, some things leave a mark. \n\nEvie decided not to respond, perhaps realizing that stealing snacks almost literally out of her hand could easily be upgraded to something bladed. \n\nA wise decision - Spooky had spent 14 years working for the darker side of the CUMULOUS program - RED. They recruited the debris - prostitutes, thugs, bookies, drug addicts. The unloved, the unwanted; disposable people doing the unpleasant things that everyone else shied away from. Honey Traps, Badger Games and much, much, worse. \n\nSpooky had not only survived, she'd thrived. \n\n\"Where to, Spooky?\" \n\n\"Royal Suva Yacht Club, Grease has the Sea Angel docked there.\" \n\nThe corner of Evie's mouth quirked up a hair. \"Needles? Spooky? Grease? Don't any of your friends have real names?\" \n\nBefore I could respond, Spooky cut in, her hissing voice edged in ice and razors. \"Spooky is my real name, Princess.\" \n\nThat much was certainly true - I'd signed as witness on her marriage license. \"Spooky No Last Name\" had become \"Spooky Godek\". Spooky was the name Pogo had given her, and as far as she was concerned it was the only real one she had. The only one that mattered. Nobody in the Administration of the islands really gave a damn what her name was as long as the license fee was paid. She certainly had a number of passports under other names. \n\nBut none of them could ever be as real to her as \"Spooky\". \n\nI knew how important it was to her - I'd given her away at the wedding, and been something of a surrogate father for her for the last couple years. \n\nEvie started to bristle, so I decided to cut this off before it became a problem. \"Evie, its tradition in my world. And tradition out where we're going because it used to be a smuggling port. Besides, it's safer. Can you imagine how useless most of what you've learned really is?\" \n\nShe walked quietly for a moment, gripping my hand tightly. \"I suppose all anyone could really prove is that I paid a small security firm to watch over my grandchildren.\" \n\n\"Exactly.\" \n\nWe walked on in silence for a while until Spooky slid up beside Evie. \"Just head over to the fifth slip, Grease is there. Nobody will be watching the boat.\" \n\nEvie looked pensively in the direction of the slip, probably sensing that we didn't have any room to maneuver if something went wrong now. \"How do you know?\" \n\nSpooky nodded in the direction of an open air shop. Nearly everyone was staring at it. \"Angel and Danni are shopping. In bikinis.\" \n\nThat would do it. \n\nSpooky drifted away as we boarded the boat quietly and slipped below to the salon with a quiet nod to Grease, who barely acknowledged us. He was checking something inside an access panel with a flashlight and a look of intense concentration. \n\nWe slid onto a couch next to each other. Evie looked around. \"A Viking?\" \n\n\"I'm no expert on these, but I think Grease said she's a 68.\" \n\nShe touched the teak paneling lightly \"Very nice.\" \n\n\"It's a charter fishing boat, for the high end crowd. Not quite your people, but they aspire to be.\" \n\nShe seemed about to say something, but a slender, very pretty, dark haired woman in a forest-green-and-plumeria-flower pattern bikini stepped in. She'd just had a baby a year ago, but like her father, she exercised relentlessly, giving her the lean build of a distance runner. ",
        "She flashed me a genuine smile. \"Uncle Howard! Did you have a nice trip?\" \n\n\"More productive than I expected.\" \n\n\"So I see. You know most people collect shot glasses or those kitschy little spoons as souvenirs, not hostages.\" \n\nDanni was always a bit of a smart ass. \n\n\"Danni, this is Evelyn. Evelyn, this is Danni.\" \n\nDanni gave Evie a distantly polite nod and a bit of a smile. Then looked at me. \"I thought you were going to kill her.\" \n\nI could see the off-handedness of the comment took Evie off guard. \n\n\"Plans change Danni - not everything was what it looked like, she's an ally, not a hostage.\" \n\nShe shrugged, \"I suppose we can always shoot her later.\" \n\n\"Shoot who?\" A melodic, lightly Russian-accented purr from the doorway. I didn't have to look. Even if I hadn't heard the voice, from Evie's wide eyes and Danni's smirk, it had to be Angel. \n\nDanni gestured toward Evie. \"This is Evelyn.\" \n\n\"Alive?\" \n\nI glanced over at Angel and counted the almost-required three heartbeats. I'd seen her countless times in everything from pregnancy dresses to scraps of bloody shirt, but nobody was immune. Golden hair, startling blue eyes and beautiful pink lips. \n\nWith smeared lipstick - that must have been why Angel lagged behind, she just couldn't walk past Grease without kissing him as if they'd been apart for years. \n\nLike Danni, it was almost impossible to believe she'd born children. And she had three. \n\nIn Angel's case it was probably some form of magic. I'd never seen her exercise at all, unless you count gleefully chasing her little girls on the beach. \n\nEvie managed to speak \"You must be the Angel the angry girl was talking about.\" \n\nAngel just smiled. \n\nEvie turned to look at me. \"Just how many people know you were planning on killing me?\" \n\nI thought back to the uncomfortable conversations I'd had before setting off. Explaining to my friends - my family, really - what I was doing and why. Nobody had even questioned my decision to kill Evelyn and Emma, or my desire for vengeance on The Reinhardt, just some concern over the possible reactions of the FBI and CUMULOUS GREEN. \n\n\"Nine.\" \n\n\"Doesn't seem like you were keeping it very secret.\" \n\n\"Do they seem like the talkative type to you?\" \n\nShe looked over Danni and Angel critically. \"Not really.\" \n\n\"I needed their help; and if I failed, I wanted them to know what was likely to come down the tracks.\" \n\nDanni settled in the chaise across from us. \"Tracks work both ways. If something had happened to Howard we'd have come looking for answers.\" \n\nHer voice sounded all too much like her mother's sometimes. But she was a Daddy's girl all the way. Of Monster's three children, she was the most like him. \n\nAs relentless, calculating and pragmatic as a machine when necessary. \n\nI waved Angel over. \"Evelyn - Evie - is going to help me. She has reasons of her own to take down Reinhardt.\" \n\n\"So she can have all his money too?\" Spooky had come in at some point and was behind the bar, slicing up some of the fruit Evie and I had bought. She didn't bother to mask her distaste. \n\nI could see Evie struggling with the \"discretion versus valor\" equation; sooner or later her pride was going to win out. She just wasn't used to being talked to like this, even if she suspected just how dangerous Spooky was. With her pride and Spooky's anger I doubted it would be a pleasant scene. \n\nShe managed, at least this time, to reign herself in. \"For my daughter and my grandchildren. They can burn all the God damned money in Times Square for all I care.\" \n\nSpooky looked doubtful about that, but I could see that the idea of Evie protecting her family had tripped her up. She'd only become a mother a few months before I'd left, but it had hit her like an anvil. I'd seen her staring into her baby's face, then at Pogo, completely lost as to how her train wreck of a life had reached this bizarre point. \n\nEvie sensed her hesitation. \"I'm not a monster, just a grandmother trying to do the right thing.\" \n\nSpooky shot her a scowl, but seemed slightly mollified. \"We already have a Monster anyway.\" \n\nDanni's smile broadened slightly at the mention of her father; Angel was simply ignoring the whole thing, pulling a couple beach towels and sunblock out of one of the lockers. \n\nThe engine growled to life below us - we could barely hear it, but it was enough of a signal. \n\nAngel smiled, almost blindingly. \"We have to go be distractions.\" \n\nDanni smirked. \"We're going to sunbathe on deck on the way out of the harbor. Topless. They'll remember us, remember the boat, but they'll swear there were just four of us.\" \n\nShe looked over at Spooky who cut off her unspoken question. \n\n\"I don't think so. They wouldn't notice me with you two up there anyway.\" Spooky grabbed her plate of fruit. \"I'll see if Grease needs me to man his radio or something.\" \n\nI watched them walk out. Angel was already untying her top -there was no way she'd pass up the opportunity to grab Grease for another kiss on her way up to deck, and I guessed she was looking for maximum impact while she had an excuse. \n\nGrease was a very lucky man. \n\nEvie stared after them until they were out of sight. \"So what's her problem with me? Is she some kind of anarchist?\" \n\n\"She's not political at all. Probably never heard of Chomsky. Just doesn't like rich people.\" \n\nShe glanced around the yacht. \"Really? She seems pretty comfortable here.\" \n\n\"Grease and Angel are her friends and they didn't start off rich. Besides this boat is part of their fishing charter service, not a personal limousine.\" \n\nI wasn't really ready to explain how Grease and Angel had come by their money. Especially since the official report said her nasty gunrunner 'husband' had drowned on a night fishing trip to the Deeps - and made no mention at all of the four Russian mafia gunmen who'd also disappeared. \n\nIt was all very official, with signed affidavits from a couple respected business owners and the Chief of Police. \n\n\"She's also possessive and protective about people she sees as family.\" \n\n\"Which includes you doesn't it?\" \n\n\"Yeah. I think I'm sort of her adopted father. I think of her as my daughter.\" \n\nSpooky had once drunk too much and told me I was the only father she'd ever really had. \n\nSomething, a cross between understanding and sorrow flashed over Evie's face, but it was gone in less than a heartbeat. \n\n\"That explains that.\" \n\n\"Some of it, I suppose, but don't sell the effects of growing up 'in the system' short.\" \n\nShe was looking down at her feet. \"It's funny. Well, not funny, maybe just... odd. I'm sure at times Emma wished she was an orphan like her. The way I treated Emma, I wonder if I did just as much damage to her as...\" \n\nShe glanced up and stopped, looking at the doorway. \n\nWhere Spooky was standing motionless. Unreadable. \n\nAs soon as we made eye contact, she slipped back and flickered away. \n\nI moved looking at Evie. \"I need to talk to her.\" \n\nEvie nodded quickly wide-eyed. \n\nI caught Spooky on the stern - there just aren't many good places to hide on a 68 foot yacht. \n\nShe was looking at me with shock. I was completely prepared to warn her off of Evie, to defend myself for talking about her. \n\nI wasn't prepared at all for how shaky her voice was, or how lost it sounded. \n\n\"Your daughter?\" \n\n\"I did give you away at the wedding, didn't I?\" \n\n\"But that was a favor to Pogo.\" She sounded almost desperate. Scared. And Spooky was never scared. \n\n\"How many people have you ever told why you like to grill on Beach Party Fridays?\" \n\n\"I couldn't have been that drunk.\" \n\nI laughed out loud and made a smacking motion with my right hand. At butt level. She flushed beet red. \n\nAnother first. \n\nShe'd been coming back to see Pogo for almost a year when it happened. She'd expected they'd have a good time until the mutual attraction faded. And she was sure Pogo felt the same way. \n\nUntil he came up short handed and she found herself manning the grill, under the stars, on the beach. Pogo, shuttling food back and forth, slapped her lightly on the butt as he walked by. \n\nShe had shot him a look and he'd grinned in response. \"Can't pass my girl when she's cooking without smacking her on the ass.\" \n\nAnd that, as they say, was that. She'd realized that what he'd said was more true than all the expectations or self-deceiving bullshit they'd been feeding themselves. She was his girl. And he was all hers. The next year had been one of quiet desperation as she tried to figure out how to tell him she felt the same way. Grilling every chance she got. Pogo never missing that possessive little gesture. Until she'd come up pregnant and everything had come out. \n\nShe reached out and just touched my fingertips with hers. From her, that was a full-on bear hug with rivers of tears. \n\n\"So is that my new step-mom?\" Grim humor. \n\n\"We are comfortable allies.\" \n\n\"You're tapping that though, right?\" \n\n\"Very ladylike, Spooky.\" \n\nShe smiled, a Cheshire cat smile, hungry and dark. \"You are! Seriously, you're hanging horns on the guy that started a genocidal war in central Africa to raise oil prices a dollar and thirty seven cents. Fifty thousand dead. You win the award for the biggest brass balls in history since the guy banging Josephine. Charles, whatever-it-was.\" \n\n\"Hippolyte Charles.\" I paused. \"And since when did you...\" \n\n\"The only books Pogo has are military history books. All over the damn house.\" She was trying to look irritated and failing badly, smug self-satisfaction at surprising me glimmering through. \n\nShe shifted uncomfortably and ran one hand through her hair \"This is going to get bad, isn't it.\" \n\n\"For him.\" \n\nShe looked back over the waves. \"I think Donna may know what's going on. Some of it anyway. It wasn't me.\" \n\n\"Probably Maria Hawthorne.\" \n\n\"The Triple B?\" \n\nI just waited for her to explain. \n\n\"The Bad-Ass Bitch of the Bureau. The Deputy Director. Supposed to be hard as a coffin nail.\" \n\n\"Yeah, her. I'm on her radar. Must have fucked up somewhere.\" \n\n\"We all fuck up somewhere. But if she knows, why are you walking around free?\" \n\n\"I think she has a dog in the fight. A personal thing. I think she's fond of Evelyn's daughter Emma, the one she is trying to protect.\" \n\nSpooky raised an eyebrow. \n\n\"Not that way. I guess Evelyn wasn't the best mother, her daughter hated her, and it looks like Maria kind of took over.\" \n\n\"Well we're a real merry band of losers, aren't we? Fuck-ups, whores, sociopaths, obsessive murderers and drunks. Shit. Isn't anyone just normal anymore?\" \n\nShe actually smiled a bit warmly, when she said that. Then she shook her head with a wry look. \"Probably ought to beat the rush and get a mother's day card. She fits right in.\" \n\nBy the time we went back to the salon, the sun was low on the horizon and there were soft rustling sounds coming from the enclosed bridge. Angel had probably slipped in there as soon as we'd cleared the harbor. Her bikini bottoms were lying on the deck outside the helm door. Spooky just hung them on the latch without comment. \n\nEvie was in animated conversation with Danni as we entered. She ground to a halt and watched us warily. \n\nSpooky took a deep breath. \"Alright. What's the plan?\" \n\nEvie set her jaw. I could see her anger at The Reinhardt was as black and hardened as iron. \n\n\"Money. Pride. Legacy.\" \n\nBy the time we reached the Islands, the Plan was roughed out. \n\n*** \n\nGrease and Angel's two oldest girls came screaming down the dock, bolts of golden haired lightning, while their youngest girl rode on the shoulders of a monster. \n\nThe Monster. \n\nHe jogged after Kisa and Lily, with the smooth stride of leopard, the toddler's hands gripping his hair on one side and scarred ridges on the other while she smiled and laughed. \n\nHis clear eye flicked over us as we walked toward them. He lingered on Spooky a little less than he used to - she'd dropped a bit on his threat matrix since her baby was born. But he hung his gaze on Evie for a moment, figuring out when he should kill her, rather than if. \n\nJust as he placed us all. Maybe even his own daughter. \n\nDanni pushed a little ahead of us. Partly to make eye contact with her father, partly because she could see Ex and her own little boy - they'd stopped to poke at something back on the beach. \n\nSpooky hung back near me - she'd been doing that a lot since our discussion. She knew her own little boy would be exactly where he should be, with Pogo while he worked at The Shack. \n\nMonster gave a smile and a cheerful greeting, a meaningless line that meant nothing to him except for its value at making him look human. \n\nEx came up beside him, handing Danni her little boy as she eyed Evie. \n\n\"Alive?\" \n\nEvie rolled her eyes like a teen age girl. \"I don't know whether it disturbs me more that everyone keeps saying that, or that I'm getting used to it.\" \n\nEx smiled a smile that was possibly less meaningful than Monster's. \n\nSometimes I wondered if she was a monster of sorts herself. \n\nEx shrugged. \"I suppose we can always just shoot you later.\" \n\nEvie's gaze shifted from Ex to Danni and back. \"Your daughter's just like you.\" \n\n\"Oh, she's a bit like of both of us.\" \n\nI took one of Grease and Angel's golf carts to shuttle Evie back to my house. \n\nShe looked over the small beach house. \"It kind of reminds me of the camper. Small, efficient. One bed.\" \n\nShe smiled and tossed her backpack down by the bed. \"What are they going to do with our camper anyway? And your guns?\" She had a wistful tone. \n\n\"Wendy will put the camper in storage in case we... I need it again, and the guns will get here soon enough.\" \n\nI had more stashed here anyway. \n\nI checked the place over quickly - nature likes to nibble on houses in the tropics, and sometimes takes rather large bites without warning - but it was near dinner time on Friday. And Grease's two other charter boats had been out when we got in, so Pogo might appreciate a hand for the Beach Party. \n\nWe could hear the sound of Jimmy Buffet rising over the sound of the waves long before we reached The Shack. \n\nWe ran into Pogo on the beach. \n\n\"This must be Evie.\" He nodded to her. \n\nEvie sighed, \"Yes. Alive. And yes, you can always shoot me later.\" \n\nPogo grinned. \"Obviously.\" \n\nI shook my head. \"She's working with us on this - trying to protect her kid and grandkids from her husband.\" \n\n\"Spooks said you had a plan. Right before she nudged Chief out of the way and took over the grill. Didn't get a chance to talk about it.\" \n\n\"We'll start working on it tomorrow.\" \n\nHe looked to Evie \"Yeah. I need to get back to running this Party. Nice to meet you, and if I have to shoot you, I'll make it quick, I promise.\" \n\nEvie tilted her head politely. \"Thank you, I'd appreciate that.\" \n\nWith the Party in full swing I figured it would be a little easier to grab a table in The Shack - the bonfires and grill were almost 50 yards away. \n\nAs soon as we entered, though, Danni and Ex pounced, dragging Evie away. Apparently, tie dye blouses, love beads and jeans are inappropriate attire for the Friday Beach Party. \n\nI shrugged and went out to the grill to grab a couple plates of finger foods and wait for her to return. I hoped Danni wouldn't find a reason to kill her out of hand. \n\nWhile I was loading the plates, I saw Spooky jump as Pogo crossed behind her. She gave him a glare, then caught my eye with a sly look and went back to turning steaks. \n\nEvie returned in a silvery sarong with a couple of bags. \n\n\"Apparently I was out of uniform. Sarongs are required on Fridays. Shorts and t-shirts are okay on other days, although sarongs are still preferred. Oddly, while tie-dye is forbidden, batik is fine, even encouraged. You could have told me the dress code, you know.\" \n\n\"I didn't know it applied to kidnap victims.\" \n\n\"I wonder if there's an etiquette guide for kidnap victims. That would be a huge help.\" \n\n\"I'd think it would be kind of hard to order tied up in a basement.\" \n\nEvie looked up over my shoulder. \n\n\"It is.\" Spooky's voice floated from behind me. \n\nI looked up at her and she put her hand on my shoulder. \n\n\"You're not the first one to be kidnapped. Mine sentenced me to purgatory for 12 years before I tracked him back down. And he planned to kill me at first too.\" \n\n\"So you were kidnapped and ravished by a pirate too?\" \n\n\"The actual kidnapping isn't much fun, but the ravishing is pretty good.\" \n\n\"It is.\" \n\nThey'd reached some kind of truce, some kind of understanding that I wasn't completely privy to, but I was perfectly okay with that. I had enough sense to realize I wasn't likely to comprehend it, even if they explained it. \n\nAs we walked back to the house, Evie nudged up against me. \"Apparently one is not supposed to wear anything under the sarong.\" \n\n*** \n\nThe next afternoon we staged our counsel of war. \n\nEvie explained the plan. \n\nPogo leaned back and stared up at the ceiling, watching one of the woven wicker fans slowly rotate. \"You need to call Kurt. You're about to seriously piss this guy off. Get more security on the kids. Kurt's good, but you need to get him all the back-up you can.\" \n\nMonster's head swiveled like a weapons turret. He'd been watching the scrum of kids playing in the sand. He stared at me for a second. But didn't say anything. Ex was watching him out of the corner of her eye. Like she always did. \n\nShe shifted. \"What are the odds he can track back to here?\" \n\nI thought for a second. \"Low. Not non-existent, but damn low. Kurt, Needles and the rest have no idea where we are. Only Wendy can even link us to Fiji. I'll warn her to lay on extra security.\" \n\nEvie spoke up. \"Is there a way I can get on the internet safely? I can send more money to Katie.\" \n\nPogo nodded. \"I have a couple ways to do it. It'll track to Europe. I have a satellite phone that will tell lies about where it is too. Have her call it.\" \n\nPogo set the connection up and within a half hour, the phone Pogo had handed me was ringing. \n\nKatie. Terse. \"Talk to me. We just got dropped enough money to hire an infantry brigade.\" \n\nI explained in as much detail as I could what we were looking at. \n\n\"So we need to be prepared for an all-out war in Northern Virginia. For how long?\" \n\n\"This won't last forever. Six months, either it will work or it won't.\" \n\n*** \n\nOur moves were subtle at first - The news stories in the European society pages had been relatively benign since we'd disappeared. \n\nJust in case she'd run off for a liaison with a ski instructor or something equally lurid but somewhat expected of the super elite. \n\nIt wouldn't do to tar Evelyn Cabot too heavily. It just wasn't done. \n\nNow though, various Boards of Directors were beginning to show concern. Part of their marriage had been a vast exchange of shares. Evelyn's proxy votes had time limits, a method she'd used to shield herself from The Reinhardt. As the time limits began to run out, large blocks of shares were starting to go unvoted. \n\nUncertainty. \n\nMarkets and financial institutions hate uncertainty. \n\nThe Reinhardt began to move to take over her votes, but the tangle of legal difficulties was almost beyond comprehension. Over the last few years, Evelyn had moved to protect her daughter and grandchildren from his influence. \n\nWhich meant creating a web of interconnected and independent legal roadblocks against him. \n\nTo make matters even more uncertain, she contacted her banker, sending proxy authorizations and instructions that caused even more damage. The financial maneuvers her husband had always used to pull more money weren't possible without her help, or at least her submissive acceptance. \n\nThe Reinhardt was furious - losing insane amounts of money - and shares. He sent burning messages to her banker to be relayed to her. ",
        "They started off seething and rapidly escalated to apoplectic. \n\nThe Reinhardt would never, ever be poor - there simply wasn't any way to lose enough money to alter his lifestyle in any real way. But money was how he kept score, how he proved he was better than everyone around him. \n\nOver time, it became obvious to me that Evelyn had planned her moves for quite a while - even as entangled as their finances were, she was losing money and shares far more slowly than he was. \n\nAnd more importantly, shares translated to votes. \n\nEvelyn was watching one little company above all. One that would hurt him more than anything else. \n\nAfter six weeks of subtle but ruthless attacks, I could tell she was getting impatient for her target to 'clear cover' as we put it in my world, to present itself. But it was getting close. \n\nWe sat sipping coffee, watching the orange of the rising sun shimmer over the waves. \n\n\"Ken, we need to distract him.\" \n\n\"Spooky is pretty good with a camera.\" \n\nEvie nodded a single time with the grim assurance of a raptor sighting prey. \n\nAnd so we assembled the weapons. A beach chair. The ocean. A camera. \n\nThe picture was obviously taken from a great difference - and apparently from a tree. \n\nJust a picture of a woman laughing. Sitting in a man's lap with her arms around his neck. \n\nObviously topless. \n\nA disreputable female paparazzi sold the picture and an accompanying rumor to a third rate European scandal sheet with pretentions of journalism, for less than they would have paid for it. And far less than The Reinhardt would have paid to keep it under wraps. \n\nIf he had known in time. If the paper had really understood the gravity of the picture. \n\nAs it was, the paper wouldn't survive the ensuing storm, but that was certainly no big loss. \n\nThe Reinhardt was publicly shamed. The accompanying rumor claimed that his wife was seeking comfort from someone who wasn't \"completely impotent.\" \n\nThe Reinhardt's messages through her banker ceased entirely as his pride forced him to seek to control the damage to his reputation. \n\nPictures of him with young attractive models and heiresses began to crop up in various society columns. But everyone seemed to know what he was doing, and he couldn't seem to control the rumors that kept cropping up, despite the rapid and awful demise of more than one newspaper. \n\nIn his fury, he completely forgot that the key to magic is distraction. The audience is always looking at the pretty girl in skimpy suit when they should be watching the magician. \n\nAlthough in this case, the girl in the skimpy suit was the magician. \n\nWe had to fly Air Wendy to Germany. Another enjoyable interlude. \n\nSpooky, Danni, and Monster had already been there for a week. \n\nWe arrived at the small, old-fashioned boardroom just as the meeting started. I followed her, masquerading as a standard issue bank drone. \n\nEvelyn Cabot strode into the dark wood panel room as if she owned it. Which to some degree was true. \n\n\"Gentlemen. Under Article seven Section three, extenuating circumstances require a vote of confidence. A fifteen percent loss in value over the last six weeks qualifies.\" \n\nThe Director was completely unprepared for her demand. \n\n\"That would be highly irregular...\" \n\n\"Yes it is. But it is legal.\" \n\n\"Not all of the board members are present...\" \n\n\"Unnecessary. We have a quorum.\" \n\nIn the end, the vote went exactly as Evelyn had intended. \n\nShe did, after all, have the proxies for three of the four missing board members. \n\nOne of whom was panicking as he packed quickly. Spooky had somehow come by evidence of his involvement in his former wife's demise. \n\nThe other two had less homicidal, but no less compelling reasons for giving Evelyn their proxies. \n\nThe remaining missing board member had been a very loyal supporter of the Reinhardt. He'd also had a fondness for doing rather distasteful things to very underage girls and boys that he thought his extremely privileged life allowed him to exercise freely. He wasn't panicking or packing. He never would; Danni's maternal instincts had had rather direct consequences in his case. \n\nHe had just turned forty-eight when he was pulled out of his penthouse apartment by Danni and her father, but he died a very, very old man later that afternoon. \n\nMonster no doubt thought it was a waste of time and effort to torture a man who had no answers you wanted and who you were going to kill anyway. But he'd always indulged his little girl. \n\nThe company was far from the largest in The Reinhardt's portfolio. Far from the most profitable. In fact, it barely made any real profit worth mention on the scales of finance that he was used to. \n\nBut it would hurt far worse than any other could. \n\nFor the first time since its founding during the Thirty Years War, almost 400 years prior, the leader of Reinhardt Pulverhof was no longer a Reinhardt. The small company, originally a supplier of gunpowder for the mercenary armies that raged across Europe, still made and supplied specialty military and industrial explosives. \n\nBut the real importance of the company was that by byzantine regulation intended to keep power in the hands of The Reinhardt, the CEO of Reinhardt Pulverhof was the Director of the far larger, and far more significant transnational super conglomerate known as Reinhardt IG. \n\nEvelyn Cabot was now the CEO of Reinhardt Pulverhof - and the Director of Reinhardt IG. \n\n*** \n\nThe radio link in my ear snapped awake with no warning. \n\n\"Control this is Alpha. Tango. Tango. Tango. Sector three. Over.\" \n\n\"Alpha this is Control. Go ahead. Over.\" \n\n\"Eight tangos sector three. Standard two by two formation moving toward point Blue. Over.\" \n\n\"Roger Alpha. I have them on visual. Break. Break. All Kilo Elements. All Kilo Elements. Stand by for contact. Over.\" \n\nThere was a long pause as I watched the dark forms breaking for the stables. They moved like pros. Not as good as ours though; they were hugging the stone walls of the stable too close. That's a mistake. Bullets tend to skim along stone walls for some physics reason. The intention was probably to form up for final entry there. Which meant they were almost certainly moving support elements up on the other side. Before I called a warning onto the net, another voice came on, raspier, older, authoritative. \n\n\"All Kilo Elements. This is Sandman. Four pax moving to point Green. Over.\" \n\n\"Sandman this is Control. Good copy. Do you require support? Over.\" \n\n\"Negative Kilo Control. Fish in a barrel. Over.\" Grim humor seeped into the voice. He'd emphasized the \"Kilo\" in Kilo control. Emphasizing he wasn't one of us. \n\nJoint operations are always a little painful. \n\nThe actual firefight lasted just under 53 seconds. Our team performed flawlessly. We were prepared for close contact if necessary, but it wasn't required. Katie would be thrilled. No matter how confident she always acted, I knew she worried about me every time. Not that I was going to be directly involved. I was watching the whole thing through the video surveillance system in the basement. My MP5 was sitting comfortably by my side, but realistically, the odds of them getting through were as close to zero as possible. \n\nSandman handled all four of the Green targets with cold precision. Hollywood cut two of the entry team down before they even realized they were under fire. \n\nThe rest of the entry team tried to break contact, but we'd already closed that door. \n\nAll elements reported back. No survivors. \n\nThey'd agreed to kill a family with three kids for a great deal of cash, so I didn't feel bad for them. As the old gamblers say, \"you rolls the dice, you takes your chances.\" \n\nThe only sounds anyone could have heard outside the immediate area were the six shots from the heavy sniper rifles. The local sheriff would have a citation on file for a couple of minors using illegal fireworks. \n\nWhile the observation posts remained in place, the rest of the team loaded the bodies into a couple delivery vans we had standing by. Needles had a car crusher that would come in handy. \n\nThe irony was that while the husband and wife were in the house, waiting heavily armed in the basement library, the children were long gone. An armored van had come for them days before. From what Katie told me, the grandmother, our client, had insisted. The driver had simply introduced himself as Patrick while his partner had only introduced himself as Finn, but I saw the resemblance to their father. They had that same self-assurance, same hyper-awareness. I had no idea where they were taking the children, but anyone who crossed those two would regret it. Probably only for a moment or two. \n\nThe Sandman came in. \n\nMichael Sanders. Maria Hawthorne's \"partner\". Officially, of course, as far as the FBI was concerned he was on vacation somewhere in Florida. Hunting alligator. Or so I'd been told. \n\nThey'd tipped us about the hit team. From the tone of things, they had probably overstepped some boundaries somewhere learning about it. \n\nI gave him an edited copy of the video - no audio and no faces. He would be taking it back to Maria Hawthorne along with anything the bodies had on them that would aid in the identification of the hit team. I suspected there wouldn't be much. Probably Russian or Eastern European, a lot of well-trained guys were coming onto the market out of the special operations units in those countries, but it really wasn't my problem. \n\nI keyed the scrambled phone. \"Katie? Yes. All done. Twelve total. Love you too, Babe.\" \n\n*** \n\nThere were no curtains on the windows of the Alpine lodge. Just window polarization. Pricey, but that's about what I expected from my target. \n\nDespite the polarization, my optics let me see him clearly. \n\nHe sat at his 400 year old desk, never deigning to look out the huge window with its incredible view of the snow-capped mountains. He shifted repeatedly, frustrated, unable to really come to terms with what had happened. \n\nDespite the distance and thick window, I could still feel his fury at the loss of his money, his pride and his legacy. I could feel his desperation, his revulsion at what had happened. \n\nI waited as he picked up the red-edged folder that designated critical information. He opened it to look in complete puzzlement at two photos. \n\nThey started to darken slowly as soon as the light hit them. Soon they'd be unrecoverable black sheets of paper. \n\nI felt the heavy rifle fire and let the shock of the recoil ripple through my body. The shot had been a complete surprise to me. Good ones always are. \n\nA thousand meters. Not a record by any means, but I had to be close enough to ensure the round would penetrate the glass without too much deflection. \n\nHe was still watching Tricia and Gabby's pictures darken when the custom armor piercing round slammed through the supposedly bullet-proof glass and took him through the center of the sniper's triangle, just above the aortic arch. \n\nI watched him sag in the chair while his mouth opened and closed spasmodically for a few seconds, then I shouldered my rifle and began the long trudge down to where I'd left the car. \n\nSomewhere in the back of my head I could hear Gabby's laugh. \n\nDistant, but clear and beautiful. \n\nSomewhere Tricia smiled. \n\n*** \n\nPogo brought a bottle of black rum to the table and sat down in the chair next to mine. Donna looked at the bottle with a slight, knowing, smile. Maria looked less thrilled, but was too polite to turn it down. \n\n\"Mike\" was looking up at \"The Shack\" sign over the bar, chuckling and shaking his head. \n\nMaria looked at him. \"What's so funny.\" \n\nMike smiled. \"They just hung it up over the bar.\" \n\n\"Hung what?\" \n\n\"The name of the unit.\" \n\nI knew what was coming, although I had no idea how Mike knew. \n\nHe continued. \"When they worked with you they used the name '16<sup>th</sup> Training and Readiness Group', and they've used a dozen others. But originally, they started under MACV-SOG as the '5<sup>th</sup> Hunter Killer Detachment' in Vietnam.\"  \n\nMaria looked even more puzzled. And now Donna looked interested. \n\nI sighed. \"It's unit tradition. In 1972, the sign over the 5<sup>th</sup> Hunter Killer Detachment was destroyed in an NVA mortar attack. The unit clerk, a guy named...\" I paused, straining to remember. \n\nPogo kicked in \"Bugs, it was Bugs.\" \n\n\"Yeah, Bugs. He was a serious pot head. Painted a new sign, totally out of regs, using those weird 1970s balloon graffiti letters. So the '5' looked like an 'S', and the whole thing looked like 'SHK'.\" \n\nMike laughed. \"Heard it from Jorge at the Academy. He lived in your world for a while. You know how CIA agents refer to it as 'the Company', and NSA agents refer to NSA as 'the Building'? These guys always call their headquarters...\" \n\n\"The Shack.\" I finished. \n\nDonna eyed the sign. She didn't say anything, but I knew she was aghast at the complete violation of Operations Security. \n\n\"Hey, we're retired.\" \n\nShe looked at me. \"I hope not completely.\" \n\nI shrugged. No point in committing to anything. \n\nMaria glanced over at Mike. \"Somebody has to slay the monsters. Sometimes we can't reach them legally.\" \n\nMaybe it was time to get rid of that video of Maria killing the Chinese official. \n\nPogo shot me a look. I glanced around the bar, at the odd, twisted, little family we'd assembled over the years. \n\nFuck-ups, whores, sociopaths, obsessive murderers and drunks. \n\nSpooky's words. \n\nMaybe we could help. \n\n*** \n\nIt was six months before Evie came back. \n\nI was sitting on the beach chair; enjoying the cool breeze off the sea and watching gulls dip and dive over the water when she walked up. \n\nIn a silvery sarong. \n\nShe slid into my lap with a quiet, contented sigh. \n\n\"I'm tired of being lonely, Ken.\" \n\n\"How long are you back for?\" \n\n\"Three months.\" \n\nIt was better than nothing. I patted her hip. \n\n\"Then I was hoping you'd come to the farm with me for three months, then back here for three, and so on. Emma's family may even come out to visit sometimes.\" \n\nThat took me off guard. \n\n\"So, what about the company?\" \n\n\"It's in blind trust for now. I did an audit and 'discovered' some irregularities. I recused myself and made some calls. I have investigators from six countries tearing Reinhardt IG apart right now.\" She smiled. \"It will take years to finish and the conglomerate will never be the same.\" \n\n\"Then what? How does Emma feel?\" \n\nShe sighed again. \"I don't know. But hopefully I've bought time to figure it out. She doesn't seem angry with me anymore.\" \n\n\"It's a start.\" \n\nShe snuggled back into me a little more and we just rested there for a long moment. \n\n\"Maybe we can get the camper out of mothballs and take another trip. I've got a guide to Yosemite.\" \n\n\"Another road trip for Ken and Libby?\" \n\n\"Or two or three.\" \n\n\"I do have some obligations here though. Off and on.\" \n\n\"Maria hinted at that.\" \n\nWe watched reds and oranges flare over the horizon as the sun set. We finally extracted ourselves from the chair as the colors faded to black and started on our way to The Shack. \n\n\"Ken, I do have a serious question.\" \n\n\"Yes?\" \n\n\"I looked into you after Maria warned me. And you've got a comfortable, normal retirement for a Colonel. A decent portfolio and some solid investments. But... the travel, the guns, all of this...\" \n\n\"You want to know where the money came from?\" \n\nShe nodded. \n\n\"We took down a drug lord and I found a Cayman Bank account number and password in his effects. Nobody else recognized it. It's not your kind of money, but it's significant.\" \n\n\"Ah. That makes sense. I remember you were in finance.\" \n\nShe stopped me at the door. \n\n\"One more thing.\" \n\n\"What?\" \n\n\"When I came in here earlier, I swear, I think Spooky called me 'Mom'.\" \n\nSome terminology that may not be familiar: \n\nM24A3 is an M24 military sniper rifle chambered for the .338 Lapua round. Some of the longest range sniper kills in history have been accomplished with this rifle. With just standard armor piercing rounds, it can penetrate standard military body armor at 1,000 meters. Still favored over the various .50 cal rifles by some organizations, often due to the lighter weight - just about half that of the M82 .50 cal rifle. \n\nTo Laagar is to form vehicles up for the night in a defensive position. It used to mean interlocking tongues and tails of wagons in a circle to create a fortress. Originally it was primarily used by the Boers, but is now a common term in US and UK militaries. \n\nVityaz-SN is a 9mm Para Russian submachine gun based on the AK-74 action. Surprisingly well made, sturdy, and, with some aftermarket mods, can be accurate and lethal. And becoming widely available on the grey and black markets these days. \n\nThe HRT is the FBI Hostage Rescue Team, the counter-terrorism and hostage rescue unit of the FBI. It is occasionally used as a very high level SWAT team by the FBI. \n\nPGP is \"Pretty Good Protection\" a public key encryption system that is reasonably good, though it is aging rapidly. No government has openly claimed to be able to break the encryption at this point. \n\nNIJ Level IV plus armor is the US term for heavy rifle armor piercing round repeat strike resistant armor, IV plus is an even more enhanced version. B7 or B7 Enhanced would be the European equivalent. Not legal for individual ownership in most countries. But used black market vehicles of that protection level trade for around 500K USD and up. Mostly up. \n\nTango is a common term for enemy personnel in the US military comms. \n\nPax originally meant passengers in a vehicle, but is often used generically for \"persons\" in military and law enforcement comms. \n\nMACV-SOG stands for Military Assistance Command, Vietnam - Studies and Observations Group which ran a wide range of highly classified covert warfare efforts during the US war in Vietnam. \n\nHippolyte Charles was the Jody of all Jodys, an absolutely charming asshole who was pretty much openly \"tapping\" Josephine while Napoleon was off at war. He more or less got away with it."
    ],
    "authorname": "Todd172",
    "tags": [
        "shack",
        "violent",
        "romance",
        "espionage"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/behind-blue-eyes-3"
}