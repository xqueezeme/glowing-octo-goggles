{
    "title": "Speech and Debate Pt. 05",
    "pages": [
        "The Shattered Expectations of New Locations\n\n\n\n\nSometimes, living inside your mind can be far preferable to reality. For most people, that's one of the main purposes of dreams: to live out the things we would never do, or say, or feel, when forced into the real world. We can be anything we want to be, change the parts of ourselves we wish were different, and explore our deepest desires, all in the comfort of our imaginations. No consequences. I lived in that dream world a lot, and not only while sleeping. \n\nWhile my physical body was beginning to come to life on the now familiar hotel room bed on my final night in Boston, my mind tried desperately to remain in my fantasy. I remember my voice in my head saying, \"No! Please! Not yet, don't wake up. Just give me a few more moments here!\"\n\nBut as is always the case, when you try to grasp at something as ephemeral as your dreams, they dissipate all the quicker, leaving you with only a dim, vague, misty remembrance of the happiness you traveled through while the moon reigned in the skies. \n\nOn this morning, our last together, I awoke from the alternate life in my head and fought against it's fading for only a moment. For once, and maybe for the last time, my body was in a reality that my dreams themselves couldn't hope to match. My contented interior journey was given the permission to continue.\n\nMy head rested on Daniel's chest, and I wondered at how he could feel so hard and so gentle at the same time. My body was wrapped around his like a koala clinging to a tree, every limb and appendage finding a place to take hold and pull him closer into me. My eyes were itchy and I rubbed them as I got my bearings. I felt Daniel shift under me, turning his neck awkwardly to look down at me as I began to stir.\n\n\"Hey there. Morning,\" his voice was soft and gentle, pitched so that only I could hear it, even as close as we were. His hands traveled the open space of my back and he rocked me gently into him so he could kiss my hair.\n\n\"Hi,\" I replied when I realized this was not, in fact, a dream and I possessed the power to speak. \"How long have you been awake?\"\n\n\"A little while, now.\" His hand came to rest lightly on my ass, squeezing gently.\n\n\"You should have just pushed me off.\" \n\n\"I like you right where you are.\"\n\nI smiled and nuzzled into him again. We lay like that in the silence for a while, my fingers tracing the outline of his pecs and his lazily tripping over my back and shoulders. I think that neither one of us wanted to move from there because we knew, if we did, that it would mean what I feared was truly about to start. If we moved, we would have to leave this place, go back home, and this world we created together would come to an end. So we stayed there, together, for as long as we could.\n\nWhen the time came that we could hold out no longer and our obligations to life, no matter how cruel they seemed at the time, were truly before us, Daniel moved first.\n\nQuietly and with a gentleness I will always remember him for, he unwound my limbs from him and rose to his feet. I took a final look at his splendid nakedness, knowing this could be the last. He reached back to me and held out his hand. I took it silently.\n\nI don't know why we didn't speak, why we didn't say the things that I know I wanted to say to him. But it seemed sacrilegious to spoil this time with speech. He pulled me to my feet and steadied me against him, my palms moving to his chest, rubbing the hairy mounds tenderly. Daniel brushed a light kiss against my lips, looking up at me through his bright brown eyes. He retook my hand, his fingers easily weaving into my own, and lead me to the bathroom, our bare feet on the carpet the only soundtrack to my waking dream. \n\nDaniel's hand never let go of mine as he turned on the shower, checked the temperature and pulled back the curtain. He pulled me gently into the spray, the water barely registering against my skin, so entranced was I by him. I leaned my head back into the water and felt Daniel's fingers, finally released from my embrace, rake through my hair, pushing it back from my face. \n\nHe stared at me for what felt like hours as the water splashed against us, his palm pressed to my cheek. When he turned his head and leaned in to kiss me, I was there to meet him halfway.\n\nHis lips on mine, as they had been so often over the past few days, were somehow terribly new now. Our tongues began their familiar dance, but the music they danced to today was full of loss and regret. \n\nIt felt like a goodbye. One that I didn't want to end and that I intended to draw out until the sun turned cold.\n\nSoon, the bond we had formed began to overpower even the possibility of its own destruction, and I felt Daniel's cock press against our stomachs, the sensitive parts of me rubbing into the sensitive parts of him. My kisses moved from his lips to his neck and I pulled him into me. My hands prodded at his ass, spreading his strong muscles and exploring the valley between them, easing close to and lightly pressing on his hole, making him sigh. \n\nI slipped my finger inside him and felt him go onto his toes, his hole squeezing me, his hand grabbing my face and pulling my lips back down to his. My finger worked in and out, feeling him relax and get used to the pressure. When he released my face, he reached between us to grip my hard cock and gently pushed my shoulders against the now slick tiles of the broad wall.\n\nDaniel turned gracefully, the bulk of his muscles betrayed by the lightness of his movements, and guided my cock head towards his willing hole. There was none of the hesitance or teasing as in the previous sessions, and none of the animal lust and passion either. Just a tenderness and eagerness that set my nerves to singing before I'd even entered him.\n\nPressed as I was to the wall, Daniel had complete control and he used it. I felt his ass expand around my cock as he slowly pushed himself back against me. His body responded on instinct, opening for me and mixing our two beings together without conflict. His hips rested on my own in a matter of seconds and I felt myself fully encased in him, the pressure of his body milking my shaft in soft waves.\n\nDaniel reached behind him with one massive arm and craned his neck around, drawing my head down so he could kiss me. He rocked his hips forward and back against my hardness as we kissed, causing him to moan into my mouth as he found his rhythm.\n\nI could have lasted for hours like that. The slow and steady pace Daniel set for us seemed designed to fire each nerve in turn, dialing up the tension in ever-so-slight amounts. I watched the muscles in his back and shoulders contract, felt his ass press against my hips and reveled when my cock head brushed against his prostate and he'd convulse around my tool. \n\nThough I loved his dirty talk previously, even heard it on repeat in my mind when we were apart, it was out of place that morning. Instead of speaking, I simply listened to his body and my own as they fought the rising pleasure and postponed their imminent separation. \n\nLanguage has it's limits.\n\nDaniel must have felt every minute adjustment my body made while pressed inside him. Without saying anything, he sensed when I was nearing my orgasm and gently removed himself from my cock, turned, and sank to his knees. He jerked my shaft for only a moment before I felt it rising.\n\nHe tilted his head back and opened his mouth with my cock on his outstretched tongue. His eyes stared up at me, the water beading on his smooth olive skin, trapped by his morning stubble. I had the pleasure of watching as stream after stream of my cum flew into his mouth, coated his tongue in white. He groaned and took half of my length inside him, swallowing my seed despite his full mouth. Gently, he kissed and licked my cock clean, careful not to spill a drop of me.\n\nWhen he rose to kiss me again, so I could taste myself on his tongue, I was racked by a wave of what I can only describe as gratefulness. In that moment, I was so blessedly thankful to be where I was, with him. It felt as if everything I'd been through till that point, all the hardships and heartache, the happiness and misery, joy and pain, everything that stitched together into what we humans call a life, all of it had lead me to be there, Daniel's lips pressed to mine, where I was supposed to be. \n\nYesterday, he had made me feel wanted and desired. Today, he made me feel...right. I will be in his debt forever for that alone.\n\nThe mediocrity of the hotel towels wasn't an issue when Daniel pressed the fabric to my skin and began to dry me off. My chest and stomach trembled under his placid touch. First one arm and then the other, he wrapped in the terrycloth. He knelt down before me, crouching easily on his heels, his skin glistening wetly in the harsh fluorescent lights. He slowly drew the towel up my legs, working from my ankles to my calves and then encircling my thighs. My cock he saved for last. The fabric on my throbbing, post orgasm tingly member sent my head back and my eyes fluttering closed. \n\nAll of this, the attention he lavished on my inferior body, he did in silence, only looking up at me from time to time, his eyes and face inscrutable.\n\nI found myself paralyzed where I stood, transfixed by his eyes, caught in the web he didn't seem to realize he had spun around me with chords of iron. Daniel seemed to understand that I was unable, maybe unwilling, to budge from the spot where I stood, glued to the floor in awe. He retrieved another towel and held my gaze as he dried himself.\n\nHe must have known that he didn't need to ask me to follow him when he turned and reentered the bedroom. He simply sent me one of his half-crooked smiles, pressed his palm, fingers spread, to the center of my chest, over my heart, and exited the bathroom.\n\nHave you ever been in one of those situations where you just knew, if you opened your mouth, you would set off a chain reaction the likes of which you were simply incapable of handling? That is where I was as Daniel and I picked out our outfits and dressed in the growing morning light. So many times, I came near to speaking, screaming, shouting what was roiling inside me. But my tongue remained lead in my mouth. \n\nWe collected our discarded clothes and belongings from wherever they had been thrown in last night's marathon sexploits and tucked, folded, or threw them into our suitcases. Daniel packed away the vibrator and lube he'd bought, and tossed me the stainless steel cock ring he'd gotten me, as yet unused in the confusion and rush of the weekend. \n\nHis zipper wound around his luggage and we stood, him on one side of the bed, and me on the other. His hands rested easily on his hips and I pushed mine nervously into the pockets of my jeans. \n\n\"Daniel, I...,\" I started in a rush.\n\nDaniel shook his head and I quieted.\n\n\"Please,\" he begged, his voice breaking a bit and shattering my heart in my chest when it did. \"Please, don't. I can't take it. Okay?\"\n\nI nodded.\n\nMy luggage seemed to weigh more than I did as I pulled it from the bed, extended the handle and rolled it to the door. My hand reached for the handle, but hesitated just centimeters from the cold silver metal.\n\nIf I turned that handle, I knew what it meant. I...couldn't. \n\nI felt Daniel behind me, waiting for me to open the door so we could meet our group in the lobby, as we both knew we must. I could hear his breath, long and deep, as if he was trying to calm himself against a tide of emotion. I felt the tears coming to my eyes again and silently cursed myself for allowing this. Three times in as many days, I had let Daniel see me cry.\n\nFuck it. Fuck it all.\n\nI turned, my luggage abandoned behind me and grabbed his face in between my hands, smashing myself into him with a roughness I didn't intend, but have never regretted. His arms clasped instantly around my waist. I fought to breathe between our kisses, sucking in air when I could but never wanting to pull back from his lips. I grabbed at him, clawed at his clothes with abandon, everything else forgotten but the feel of his lips. My tears came hot and fast and, had Daniel's mouth not covered and devoured mine, the sobs would have wracked me. \n\nTo my surprise, Daniel's cheeks shone wetly with his own tears. When the moment subsided, I held him to me, my forehead pressed to his, our noses nearly touching, chests heaving in time, punctuated by a falling drop of liquid sadness from either him or me. It didn't matter anymore. \n\nI would have been perfectly happy to stay like that until I died of hunger or old age. All else seemed meaningless. I don't know if this was love, but whatever it was had pierced me and destroyed what I thought had mattered before. It all seemed like dust, now.\n\nDaniel's last kiss, as soft as breath, drove what was left of my mind from me.\n\nDaniel must have opened the door and lead me to the elevators. I don't remember moving. Part of me is still standing in that hotel room in Boston, holding Daniel against me and feeling that last embrace of his lips on mine. \n\nThe ride to the airport was uneventful. The security checkpoints and check-in counters passed me by in a daze. My classmates chatted amiably around me, but their words were like so much buzzing. I heard none of it. When someone called my name, I tried to smile half-heartedly at them, but they each seemed to recognize that I was not my self and were unwilling to press me further. \n\nI don't know what I would have said if they had been.\n\nThe wait for our flight seemed both interminable and instant. Walking the causeway towards the airplane door felt like I was walking to my execution. I could sense Daniel plodding along behind me but found little comfort in his presence. \n\nDaniel had somehow found the presence of mind to arrange our seats together again. This plane was much larger than the one we'd taken to get here: three seats on the outside of two aisles and rows of five abreast snaking down the middle. I found my place on one of the window seats about halfway down the plane and leaned my forehead to the ovular glass.\n\nI watched the people scurrying about the tarmac below, hauling luggage and waving flashlights. I'm sure it was all very important but I paid it no mind. My hands came to my face every now and then to dislodge the unshed tears I couldn't keep from appearing at my eyes time and again. We readied for take off and I still sat, head against the window, staring blankly. \n\nI hadn't heard Daniel ask one of the flight attendants for a blanket, so when I felt it brush against my left side, not covering my lap, but pooling beside me and obscuring my left hand beneath it's navy blue lengths, I jolted a bit.\n\nDaniel's strong fingers searched for mine beneath the cover, found them and clung to my grip. I turned to look at him and he smiled at me, squeezing my hand tightly in his own. His thumb worked lazy circles over my fingers, tracing my knuckles.\n\n\"I'm not going anywhere, nerd,\" he said quietly. \"It's going to be alright. I promise.\"\n\nOur fingers remained laced together for the entire hour and forty five minute flight, though we still held our silence. I would have caused a scene if I had spoken. Even if we could have engineered a repeat performance of our bathroom antics from our first flight, I wouldn't have been able to. I tried to take what little strength I could from Daniel's sure grip on my hand and began the attempt at putting my life together again, futile though that seemed to be.\n\nThe flight ended too soon and our grip on each other had to come to an end. Even the excitement of baggage claim and the chatter about school in the morning did little to lighten my mood or unshackle my tongue. The hour long ride back to campus was spent as the flight had been, Daniel next to me, our fingers gripped together until my knuckles were white from the strength of it. \n\nThe wide gates of our school, with the well manicured lawns and majestic fountain soon came into view and the van we'd hired to drive us from the airport pulled into the mostly abandoned Senior Parking Lot.\n\nMy used Toyota Camry seemed out of place, even in the almost empty lot. Escalades and Beamers, Mercedes and Audis were more the style for my prestigious private school. Several parents sat in their cars, most of them of the brands listed, waiting to retrieve their younger children. Daniel's well known red Jeep stood out almost as much as my own economy car, but only because it was covered in mud. The luxury cars all gleamed pristinely in the afternoon sunlight.\n\nWhen I got my bag from the back of the van and headed towards my car, the urge to break into a run suddenly took over. My pace quickened and I very nearly lifted my suitcase from the pavement as I hurried towards the relative safety. I felt every eye on me, as if all the parents and other students knew, could sense, that I was a basket case dangerously teetering on the verge of a nervous breakdown.\n\nI threw my bag into the back seat, yanked my seatbelt around me and started the car. It rumbled to life slowly, and not for the first time, I cursed my inability to afford a more reliable ride. The car was in drive and I nearly pushed the pedal to the floor in my haste to escape.\n\nI hadn't even said goodbye to Daniel. I couldn't have. If I had spoken, I would have lost it. I just...I needed to go. To get away from it all somewhere. It may seem so petty or dramatic now, nearly a decade on, but I can assure you, if you think back to when you were just 18, you will recall those times when your hormones and conflicting emotions ruled your brain and made you do, feel, and say things your adult brain never would.\n\nI pulled out of the school parking lot and drove to the nearby highway. I merged onto it and soon found myself nearing 80 MPH and headed in the opposite direction of my house. I turned the radio to its highest volume, uncaring what mindless pop drivel assaulted my ears, rolled the windows down and felt the chill air blast against my face.\n\nThe tears were unstoppable, but I took some small measure of pride in keeping my sobs internal.\n\nA vibration in my pocket startled me and I nearly swerved into the next lane. It vibrated again. It my state, it took me a moment to realize that I had my phone in my pocket and it was apparently still set to vibrate.\n\nI fished it out and flipped it open. Yes, there were flip phones when I was 18.\n\nI had 1 unread text message. I pressed the button.\n\nDANIEL: Come back. Varsity locker rooms. 15 mins.\n\nIt was sheer dumb luck that I didn't cause an accident as I raced towards the next off ramp and reversed direction back to school. I had been speeding on my escape from the parking lot. I was damned near to breaking the sound barrier on my return.\n\nDaniel's red jeep was the only car in the parking lot by the time my little Camry screeched to a halt. My adrenaline from the lightning fast trip back mixed with the incomparable high of reading Daniel's text. It seemed to me that I had been living on the fringe edges of the emotional spectrum since I'd roomed with him.\n\nI didn't care who saw me as I ran towards the gymnasium complex. \n\nThe first set of doors I pulled were locked, as were the second and third. I remembered that there was a small \"Coaches\" door around the back, facing the football, soccer, baseball, and lacrosse fields. I'd never been a very athletic person up to that point, but I sprinted for all I was worth towards it and yanked it ajar.\n\nThe smell of the locker-room, with it's mix of sweat and pheromones, sex and competition, washed over me like a flood and made me swoon a little as I entered. Only a few emergency lights were buzzing along the ceiling. I hadn't ever been to this part of the gym, much less when the school was closed, but I had a general idea of where to go. ",
        "Daniel must have heard me approach. When I entered the Varsity locker, denoted only by its' larger individual lockers and marginally cleaner appearance, he leaned against his own locker casually. His arms were crossed over his spacious chest and he faced me, looking down at his nonexistent wrist watch, as if he'd been timing my approach.\n\n\"Not bad, nerd,\" he joked looking up as I entered, out of breath. \"11 minutes.\"\n\nI rushed him. \n\nHis shoulders slammed into the metal locker behind him and my grip on his wrists pinned his arms above his head. His eyes widened. I assume that it was rare for him to be taken by surprise, especially by someone so physically inferior. I didn't give him time to regroup before I kissed him, hard and deep.\n\n\"That was a dirty trick you pulled,\" I said when I finally let him go and joined him to lean against the locker next to his. \n\nHe still seemed dazed. Maybe I had slammed his head into the metal with a bit too much force?\n\n\"Hmm?\" he looked confused. \"Sorry, I can't breathe. Damn nerd, you're stronger than you look.\"\n\n\"Thanks, I think,\" I said as humbly as I could manage.\n\n\"I put my number in your phone when you were sleeping last night. Figured it would come in handy.\"\n\n\"Well, it did.\"\n\nI looked around the locker room, taking in my surroundings for the first time. Long horizontal windows lined the ceiling, raining in bright light from on high. The tall blue lockers each had a name of one of my jock-inclined classmates written on a piece of tape near the top. First initial, period, last name. Two lines of 10 lockers each lined the two longest walls and a smaller bank of 6 occupied a shorter. Long, two feet wide wooden benches were placed at even intervals around the room, each about 5 feet long. The floor was a patchwork of black and white checks in a dizzying pattern that twisted the eye.\n\n\"So, this is the Varsity Locker Room, huh? Not so scary,\" I said as my breath returned.\n\n\"Why'd you think it'd be scary.\"\n\n\"I always picture it full of varsity jocks. Nerd, here, remember? The natural prey of the varsity jock. It'd be open season if I were ever in here.\"\n\nDaniel laughed at my hyperbole.\n\n\"Nah,\" he offered. \"They aren't all that bad when you get to know them.\"\n\n\"I'll make sure to ask after their families the next time they decide to shove me into the fountain.\"\n\n\"They didn't!?\" He asked, appalled.\n\n\"Freshman year,\" I added.\n\n\"Shit, that sucks.\"\n\n\"Not you're fault. You were only a lowly JV player back then remember?\"\n\nDaniel's hand found my own and took it. I shook a bit at the familiarity and comfort of that touch. Daniel did too.\n\n\"I never thought I would be holding a guy's hand in the locker room,\" he said quietly.\n\n\"Ditto.\" I returned. He held my hand in silence for a moment.\n\n\"How do you like it, so far?\" I asked. My thumb moved over the hairy skin of his hand.\n\n\"Not bad,\" he joked. He pulled on our entwined grip and drew me on top of him, so that my body pressed into his as I was yanked from my leaning position. He leaned forward and kissed me again.\n\n\"Wonder what it'll feel like when you fuck me in here?\" he breathed, our faces so close he filled my vision. All of the mixed up craziness I had been wrestling since we left the room this morning vanished. We were home. But Daniel....amazingly, Daniel was still here.\n\nI tore at his belt and yanked open his jeans while our tongues pressed together. The combination of his sexual advance and our decidedly hyper-masculine location acted on me in a way I couldn't have expected. He moaned into me as I moved down his neck and to his chest. His fingers tugged roughly on my hair and pushed me down.\n\n\"Fuck...,\" he groaned.\n\nIn a swift motion, I had his pants and black boxer briefs around his ankles. I took only an instant to look at his uncut cock in the misty light. I remember that it bounced and arched gracefully upwards, as if it were a lure and I the intended catch.\n\nI dove onto it and sucked him into me, burying my nose in his pubes and breathing him in. This morning had been about restraint and emotion. We had made it over that hurdle and now, my pent up passion for him rebounded in full force. My tongue swirled over his cock, nipping and running along his foreskin.\n\n\"Yes, David, take my cock, fuck that feels amazing.\"\n\nDaniel's bare hips thrust into me, seeking to push his tool further down my throat. I opened myself to him and urged him to increase his speed by grabbing his rounded ass and shoving him forward.\n\n\"Fuck, dude,\" Daniel groaned. His voice echoed strangely in the large open room. Had anyone been there, we would have surely been discovered, but that was the farthest thing from our minds. At least, for me.\n\nThe moans that escaped my occupied mouth were full of pure bliss. It had only been hours, but I'd missed his cock, his taste, more than even I'd realized. \n\nDaniel continued to thrust into my mouth, fucking my face and forcing my eyes to water a bit. I looked up his body and marveled at the magnificence of him as his muscles moved and jerked while he used me. \n\n\"You have to fuck me,\" he said as he pulled me from his cock. I ached to remain on my knees in front of him, but his fingers in my hair tugged me up to meet his lips.\n\nHe turned and placed his palms on the locker, his own name emblazoned on the tape between them. He pushed his ass back towards me, arching his back and exposing his hole to the open air.\n\nOnce again, I found myself drawn to my knees. My hands parted his cheeks with ease and I lapped at his warm ass, wetting him thoroughly. I panted and breathed hard, pulling back between bursts to survey my work. I spit directly on his hole and dove back in.\n\n\"Oh my god. Eat my hole. FUCK ME! Yes.\" \n\nDaniel's legs trembled under him, his fingers beginning to claw on the unforgiving metal as I rimmed him.\n\n\"Give it to me, David. Give me your cock.\" He turned his neck to look towards me. \n\n\"You sure you can handle it, jock?\"\n\nThat seemed to drive him crazy. He growled at me, his eyes narrowed and he danced on the balls of his feet, pressing his ass towards me like a dog in heat.\n\n\"Mmmmm, yes. Fuck me.\"\n\nMy jeans hit the floor. I rubbed my thick cock head on his pink opening, feeling him press back against me. I didn't even spit in my hand to lube it up.\n\nI pressed my hips forward and he opened for me. I wasn't gentle. I buried myself in him, my hands on his hips in a death grip. \n\n\"AAHHHHHH....oh shit,\" Daniel screamed high, his breath driven from his lungs, a mix of pleasure and pain competing for mastery of him. His hole twitched around my rigidness. \n\nI pulled back and rammed back in.\n\n\"Oh!\"\n\nAgain.\n\n\"Ahhh!\"\n\nAgain.\n\n\"Yes, GOD!\"\n\nI felt him loosen a bit, his ass growing used to my girth filling him. I began to fuck him in earnest, my hips slamming into the globes of his smooth tan ass with a satisfying \"thwack.\"\n\nDaniel seemed unable to stop speaking. He babbled a continuous string of urgings, mixed with moans, groans, sighs, and curses.\n\n\"Ahh...ohh...fuck my hole...yes...shit you're huge...oh my god....ahhh...David.\"\n\nOver and over it poured out of him, driving me on, urging me to continue. His ass was beginning to turn red from my pounding. \n\n\"I'm gonna shoot, dude,\" he started to whimper. \"Oh fuck me, this feels amazing. Your cock is amazing.\"\n\nKnowing he was close made me close. \n\n\"Harder...oh fuck me harder.\"\n\nHe was a glutton for punishment. My huge cock massacred his hole at blazing speed. The groan Daniel let out started deep in his chest and rose steadily until he was screaming full force, his orgasm coming closely behind. When I knew he was past the point of no return, I pulled my cock from him, leaving him empty. He didn't know how to react; he seemed to falter a minute.\n\nI lined up and slammed my cock back inside him, driving him to his tip toes, his fingers clawing at the top of the locker as I straightened his insides in one swift thrust.\n\nHis cock erupted and sprayed a massive jet of white onto the slick blue metal in front of him. That was enough for my own dick to begin painting his insides white.\n\nI collapsed onto his back, my hands still holding my throbbing cock inside of him, letting my orgasm dwindle. He held us both up. \n\nI was exhausted. The emotional roller coaster followed by flight and now ending in fucking was too much for my little nerd body to bear.\n\nAfter a while, Daniel pulled himself from my pole slowly, whimpering when it brushed his prostate. I watched a little of my cum leak from his stretched hole before he could trap it all. It oozed between his thighs and mixed with his leg hair in a very satisfying manner. I collapsed onto the wooden bench, my legs finally giving way without the strength of his ass to hold me aloft.\n\n\"Jesus Christ, nerd,\" Daniel said, out of breath still. \"Where did that come from?\"\n\nI shrugged, trying to work some moisture back into my mouth.\n\n\"Well, that ought to hold me over till school tomorrow.\" He joked. He pulled his pants back up and fastened them once more. Mine still remained around my ankles, my bare ass on the rough wood of the bench, my deflating cock still jumping every now and then.\n\nIt took me a moment to register his remark. When it hit home, I smiled, but said nothing.\n\n\"Pull 'em up, nerd. We gotta get going.\" Daniel motioned to my pants. I complied.\n\n\"Aren't you going to clean up first?\" I asked.\n\n\"Nope. You're right, it feels great in there. May keep you inside the whole night till I use our little purchase before bed.\" He winked at me and brushed a kiss against my lips. He nearly skipped from the locker room. I had to hurry to catch up to him. \n\nDaniel walked beside me as we strolled back to the parking lot. It's amazing the things you notice when you aren't sprinting towards the building in a sex-fueled rampage. I was admiring the lack of snow on the ground after a weekend of avoiding slushy brown piles of the vile stuff when Daniel suddenly laughed.\n\n\"Dude! Who taught you how to park?\"\n\nMy little Camry was not anywhere close to any of the white lines painted at regular spaces around the parking lot. One wheel was on the grass, and the hood of the thing pointed towards Daniel's red Jeep, taking up three full spaces behind.\n\n\"I was in a rush. You said 15 minutes.\"\n\nHe chuckled and grabbed my hand. I almost stopped dead in my tracks. He held MY hand. At SCHOOL. Sure, no one else was there, but the location remained the same. It felt...strange and dangerous, but wonderful.\n\nWhen we made it to our vehicles, I felt like a character in an old James Dean movie when he leaned in and pressed me to the door of my car and kissed me, long and slow. The street lamps flickered to life at that moment, the sun just beginning to sink behind the trees. \n\n\"That was good timing,\" I joked. He smiled.\n\n\"Get home safe, nerd,\" he said as he turned to walk to his car. \"Thanks for the present.\" He grabbed at his own muscled ass as he walked. His last kiss had almost made me forget that he still carried my load inside him. The point was driven home.\n\nThis time, I was much safe as I drove home. I called my parents to ensure them I was alright and on the way back from school. I made up an excuse of my under inflated tires as to why I wasn't back as scheduled, but nearly two hours late. Maybe now they would consider helping me pay for a new car. College was coming, after all.\n\nI chatted amiably with them when I returned and ate my mother's cooking with pleasure. My sister was her usual charming self, meaning she lounged on the couch and sighed heavily from time to time to remind us that her life was meaningless and death came for us all. 14 year old girls. Thank god I turned out gay.\n\nWhen I finally crawled under the covers, I stared at my digital alarm clock as it counted down the minutes until school tomorrow. If I go to bed RIGHT NOW, I can still get 6 hours and 37 minutes... 35 minutes.... 9 minutes....Shit, 5 hours 55 minutes.\n\nI couldn't stop thinking about what would happen when we arrived. Daniel had made it clear that some part of what we had started in Boston would at least remain partially intact. But how much?\n\nMy phone buzzed beside me on my bedside table and I scattered my collection of my favorite novels to the floor in my haste to retrieve it.\n\n1 unread text message:\n\nDANIEL: Sleep well. Thinking of you. Sweet Dreams.\n\nIt buzzed in my hand again.\n\n1 unread picture message.\n\nI opened it and waited for it to download. I instantly recognized his beautiful cock, his foreskin covering his head, surrounded by his dark body hair. I could just see his belly button and lower abs, the V lines of his adonis plate standing out in stark relief. His thighs were spread apart, but one muscled forearm eased in from the left hand side of the frame, holding the last two inches of his purple vibrator in place. From the top angle, I couldn't see it enter his hole, but what I could see was more than enough.\n\nIn a moment, my cock was in my hands, my eyes glued to that photo. I came all over my chest before I counted 10 strokes.\n\nI drifted off to sleep quickly after that. My phone stayed open beside me, my cum drying on my skin. My last thoughts as I floated back to dreamland was that I hope to hell that I don't oversleep and someone has to come wake me up. \n\nThey would be in for quite the morning surprise."
    ],
    "authorname": "DAMackey",
    "tags": [
        "locker room",
        "gay",
        "rimming",
        "jock",
        "nerd",
        "emotional",
        "southern",
        "shower",
        "cum",
        "uncut"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-05"
}