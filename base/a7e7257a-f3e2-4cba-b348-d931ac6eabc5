{
    "title": "There and Back Again Ch. 013",
    "pages": [
        "Chapter Thirteen: Laying Groundwork \n\nWhen I woke, I was lying in front of the fire, surrounded by familiar tents. Alistair, on watch, shouted in surprise, and my new companions came pouring out of their tents. I expected suspicion or weirdness, showing up in the middle of them like this, but all I got were relieved smiles and some teasing about yet again wearing my strange Earth clothes. \n\nThe clothes thing was starting to weird me out. Somehow Ferelden clothing stayed here, but Earth clothing transferred over? What the hell? I shrugged. Nothing I could do about it. \n\nLeliana and Aedan hugged me, and Theron attempted to, which was awkward. Sten ignored me, but I thought I saw a smile when he thought no one was looking. Alistair smiled and clapped me on the shoulder, almost knocking me over. Morrigan sniffed, but managed to somehow look not totally unhappy. Bodahn smiled broadly and welcomed me back, though where he thought I'd gone was anyone's guess. Sandal seemed unfazed, muttering his usual \"enchantment?\" and we all chuckled. \n\nWe decided to break camp early, since everyone was awake anyway. Aedan figured we were just over a day's march from Redcliffe. I changed into my local clothing, while everyone else got ready. We walked, and I carried my sword as usual. Having rested well while at home, I was actually energetic, and spent most of the day teasing everyone. At one point Leliana pulled me aside, walking where the rest of the party couldn't see. \n\n\"Here. I want you to have this.\" She handed me a small circular object, attached by a loop onto a leather tie. I realised it was a necklace with the symbol of Andraste on it. The stone was smooth with wear, the symbol slightly faded. I tried to refuse, but she interrupted me. \n\n\"I know you're not an Andrastian. You don't believe in the Maker. I'm not giving this to you as a religious symbol. I'm giving it to you because...I hate it when you disappear, and it's only happened twice, so far. I hate wondering if you disappeared, or just left us. I hate feeling like we're leaving you behind when we keep going without you. What if you were kidnapped? Caught by darkspawn or bandits or...and we just left you, because we assumed you disappeared? \n\n\"I want you to wear it. I want you to promise that you will never leave your tent without this on. I assume if you disappear right in front of someone's eyes, it won't bother me. But if you promise me always to take it off when you sleep, and never to get up without putting it back on, at least then I'll know. If this is left behind, you disappeared, you didn't choose to leave us. If you aren't there and neither is this, we need to look for you. It lets me figure out when to worry, and when to just assume you went home. \n\n\"Promise me?\" \n\nI nodded, touched beyond belief at the gesture from the bard. It hinted that her fears and mine weren't so very different, made me feel slightly less insane for hating to go to sleep like I did. I put the token around my neck, tucking it out of sight, and hugged her gratefully. She seemed to understand that I didn't have the words. \n\nThat night we camped a couple of hours outside of Redcliffe. Everyone was on edge, with armour being polished, weapons sharpened, and no one talking much. Aedan showed me how to sharpen my thin sword and the dagger strapped to my leg, and then I spent some time reminding everyone what we would face. I quietly encouraged Alistair to have his little parentage discussion with Aedan now, rather than wait, and he grimaced but complied. It seemed like everyone else remained unaware, though how they could with Theron sitting right there was beyond me. Even with the different haircut and the bottle-brown disguise, the resemblance between Theron and Alistair was uncanny. \n\nThe plan was relatively simple - they would all aid the townsfolk in preparing for the battle, and then Theron and I would wait in the Chantry during the fight. Theron wasn't pleased, and frankly neither was I, but we all knew it was necessary. We decided that I would be 'Lady Sierra' again, and could therefore claim Theron as my personal bodyguard to explain why he wasn't fighting. I thought letting Teagan know Theron's actual identity would be fine, but Aedan wanted to wait until we had cleared the castle and sedated Connor. And we didn't need anyone else in town knowing, so we all agreed. \n\nI got a quick lesson from Aedan, with comments thrown in by Theron, on how to address nobility assuming I was truly the daughter of some unknown minor lord. The King, obviously enough, was 'your majesty' or sire. No 'your highness' in Ferelden. A Teyrn or an Arl was 'your Grace' to someone unfamiliar; everyone underneath that was 'my lord'. \n\nI was sitting by the fire, after everyone had finally crawled off to their tents except Sten who was on watch, when Aedan approached me. He started with a few pleasantries, but I could tell he had something on his mind. He finally got to it after a few awkward minutes. \n\n\"So, why are you here?\" \n\nI blinked, unsure how to answer that. \"Did you want me to leave?\" \n\n\"No, no. I meant why are you out here? Instead of in your perfectly serviceable tent, for example.\" \n\n\"Oh. Uh, yeah, I...look, I really don't want to talk about it.\" \n\n\"I notice that when you think we should talk about something, even if we're set on protecting our secrets, you're quite single-minded. But you have quite a few secrets of your own, it seems. I would normally try to respect your privacy, but I think in this circumstance I'm going to have to insist. There's something very wrong, and everyone can tell. It's impacting your ability to cope, and we need you alert. So please. Tell me. Is it Duncan? Or something back in your world? I won't tell everyone, I promise.\" \n\nI examined his face, seeing only worry for me there. I thought back to being so exhausted I was forced to ride the cart. I sighed. \n\n\"I'm afraid to sleep alone.\" \n\n\"What? Do you normally share a bed with someone at home? I had understood you to be unmarried.\" \n\n\"I'm not married. It's not a problem there, I sleep alone no problem. It's just here.\" I struggled to make sense of it myself, never mind explain. Impossible. \"I can't defend myself. What if we get attacked while I'm sleeping? I know for a fact that one morning we're going to be ambushed by shrieks.\" \n\nAedan studied my face, his expression thoughtful. \"It's a good point, although I think we should have decent warning given how you've changed our watch schedule. And while I'm sure it's part of the reason, your face says there's more.\" \n\n\"Look, I...I hate not knowing what's going to happen. Sometimes I sleep and I wake again and everything is fine. Sometimes I sleep and wake up...there. I'm afraid...I don't know. It feels like if I fall asleep, I might just disappear altogether. Maybe never come back. Maybe just die, and never be anywhere. It sounds ridiculous, and having someone share my tent isn't going to prevent any of that but...maybe I'm just afraid of dying alone? I truly don't know. All I know is that the idea of crawling into that tent and just going to sleep in there, all alone, makes me feel like I'll just start screaming and never be able to stop. If I'm out here, at least I'll be so sleepy when I end up in there that I don't notice.\" \n\nAedan examined me for a few more moments, his face sympathetic. I was mortified. It was different with Tomas - it seemed somehow okay to lean on him. I didn't want Aedan to see me as being this weak. He finally pulled me into a fierce hug, which I was suddenly intensely grateful for. I hugged back, a few tears falling, trying to be okay with being vulnerable. I was terrible at it. He finally let me go, wiping a tear away with a calloused finger. \n\n\"So...you're my sister.\" The way he said it wasn't a question. I nodded - I felt the same. \"Which means it would be completely appropriate for me to protect your virtue by insisting you share your brother's tent. What if you move your bedroll into my tent for now? We can make our tent bigger next time we set up camp, but I think we can both fit if we stow our gear in yours. What do you say?\" \n\nMy mouth hanging open in shock as I listened, I could only nod gratefully. Twice in one day these people were being incredibly kind to me, when they really didn't need to be. \n\nI feel so lucky. \n\nI ducked into my tent, quickly, grabbing my bedroll, and he took his large pack out of his tent and tossed it into mine. I placed my bedroll beside his, crawling in and settling down to sleep as he collapsed beside me. I slipped Leliana's amulet over my head and tucked it into the blankets beside me as Aedan watched, curiously. \n\n\"Thanks, Aedan.\" \n\nHe reached over and took my hand, not letting go. \"You're welcome, sister.\" \n\nI fell asleep still clutching his hand, and slept better than I had since first finding myself in Ferelden. \n\nThe next morning I woke before Aedan, noting with an embarrassed smile that I still held his hand. I carefully let go, sitting up to rub my eyes. Having slept fully dressed, I decided to head out before I accidentally woke him with my fidgeting. I put the amulet back on, then crawled carefully away, silently slipping through the flap of the tent. I paused at my own tent to grab my pack, and headed down to the stream Bodahn had mentioned. If I was going to play the part of the noblewoman again, I needed to look it. \n\nAs I approached the location where I thought Bodahn had pointed, I heard splashing. Assuming Leliana or Morrigan were already there, I thought to share my shampoo and headed through an opening in a thick hedge towards where the sound originated. I stopped cold, however, and quickly backed away again as I realised that I had incorrectly guessed not only the identity, but also the gender of the bather. Alistair was kneeling, naked I assumed, in waist-deep water, eyes closed while he scrubbed soap into his blond hair. \n\nHis chiselled face was upturned, the early morning light making his skin appear to glow. He had just a hint of stubble on his chin, and it emphasized the masculinity of his strong jaw. Water and soap suds trickled down his neck and chest to dissipate into the stream, highlighting his broad shoulders, tight muscles, and rippling six-pack. He turned to dunk his head, and his equally buff back was also dripping water and soap. My fingers clenched involuntarily, and I realised that I had never wanted to touch anyone in my entire life as much as I wanted to touch him right then. I groaned softly to myself as his impressively firm ass came into view as he stood. I had a minor freak-out - this was actually Alistair. The real one. Gorgeous and built and beautiful and absolutely corporeal, not imaginary. I suddenly panicked, realising that if he turned, I was screwed. I spun, quickly, and hurried back up the trail, plowing straight into a very surprised Aedan. \n\n\"Good morning, Sierra. You're sure up early. I was almost worried when you weren't in the tent when I awoke.\" His brow wrinkled as he took in my wide eyes, flushed cheeks, and gasping breaths. \"What's wrong?\" \n\n\"N-nothing, Aedan. Um. The stream is, ah, occupied. I'll come back.\" \n\nDodging around him, I slipped back into camp and crawled into my now empty tent, hoping to God no one else had seen me. I was certain my face was scarlet, and I couldn't seem to burn the image of the naked Greek Adonis that was Alistair out of my brain. Part of me wanted to strip down and fantasize about him like I did in the dark privacy of my bedroom after the romance scenes from the game. Another good sized part wanted me to crawl back out of the tent, go back to the stream, and throw myself on the mercy of the naked man himself. A small part of me seriously considered throwing up. All of the feelings were as embarrassing as they were unwelcome, and I ended up doing none of the above; instead I put my head between my knees, wrapped my arms around myself, and tried to recite annoying quotes from the bible that one of my foster-mothers had made me learn. \n\nWait, hell no. If I'm in Thedas I might at least try to quote the Chant of Light...Great, now all I can think about is the Peas of the Maker and the Bacon and shield, from that crazy sister in Denerim. \n\nAt that I could finally laugh, a little, and decided I was as together as I was likely to get. I'll never look Alistair in the face again, though... With a sigh, I crawled back out of my tent, with pack still in hand, and found Alistair walking by just as I emerged. Avoiding eye contact, face reddening instantly, I heaved my pack onto my shoulder, muttered something about washing, and dashed away. Spotting Leliana, I dragged her with me, making her stand guard so no one wandered in on me the way I did on Alistair. I washed almost frenetically, scrubbing myself thoroughly, washing away the dirt and sweat of a couple of days of hard walking. I washed my hair, rinsed it thoroughly, and then climbed into the safety of my normal clothes, before throwing my dress and cloak overtop. \n\nBack by the fire, Leliana made a fuss of doing my hair to look the part of the Fereldan noblewoman. She frowned as I strapped my dagger to my thigh under the dress, and then asked Bodahn if he had a sheath for my sword which would work with a dress. He found one which looked mostly like a simple leather belt, but was adjustable enough that I could spin it to hide the sword underneath the cloak. I was surprised, but she just gave me a serious look. \n\n\"You will need to be able to protect yourself. I won't see you helpless.\" I nodded, and admitted that even though it was heavy, I felt safer with the sword at my hip. And later I can use it on Alistair if he so much as looks at me. I sighed and wandered off to pack my belongings and put my tent into Bodahn's cart. \n\nOnce everyone was packed, we bid a temporary goodbye to Bodahn and Sandal, who were going to stay put until we came back for them at the campsite outside the beleaguered town. Setting out at a quick pace, we headed to Redcliffe and whatever uncertainty awaited us there. \n\nAs we walked, Theron approached me, taking my arm and slowing up a bit so that we trailed behind a little. Distracted by my stupid dress and the sword getting stuck in the folds on my cloak, I didn't really notice until we were out of earshot of the rest of the group. \n\n\"Are you really going to stay in the Chantry during the fight?\" \n\n\"Yes, Theron, and so are you.\" \n\n\"But-\" \n\n\"No buts. You will stay alive. I have reason to believe that they,\" I pointed at the group in front of us, \"will be fine. I have absolutely no reason to believe the same thing about you. So you will stand in the Chantry and behave like a good bodyguard, and live to see tomorrow, or I will have Aedan and Alistair tie you up and leave you there. Your choice.\" He was quiet, and I sensed resignation, not resentment. Thank God for small mercies. \n\nI sped up again, catching up to Sten, and enjoyed the silence of his company for a while. Theron went to walk with Aedan and Alistair, the three of them trading bullshit like any group of boys. I rolled my eyes and concentrated on just keeping walking. I'd been spoiled by having Bodahn carry all our stuff, and I wasn't really happy to have my heavy pack back on my shoulder. \n\nBy the time we were close enough to see the smoke from the pyres burning in Redcliffe, I was in agony, again. I tried valiantly to hide my discomfort, and mostly succeeded. As before, Alistair was the only one to notice. He took the strap off my shoulder, looking confused and slightly offended as I blushed and refused to meet his gaze. Shrugging, but ever the gentleman, he shouldered my pack alongside his own and walked on. I followed, miserable to have hurt him, even unintentionally, but absolutely unable to ever explain. \n\nWhen we reached Redcliffe, Aedan took the lead with Sten, Leliana, Morrigan (who had landed and joined us just before we hit the edge of the cliff), and Alistair falling in behind him, Prince at his side. Theron had taken my pack and hovered behind me, helmet on, hand on the pommel of his sword, looking every inch the protective bodyguard. We followed the sentry down to the Chantry and were ushered inside to meet with Bann Teagan. \n\nHe greeted Aedan and company like a man who has just been thrown a lifeline when he was convinced he was going to drown. He was polite to me, hurrying to offer 'Lady Sierra of Wentwater' a seat, but really only paid attention to those he thought could fight. The poor man looked exhausted, and I wondered if he'd had any sleep at all in the last few days. He was almost in tears when Aedan told him that they would help defend the village. \n\nI followed them outside, Theron hovering, as they spoke with the Mayor and split up tasks. Aedan went off to deal with the reluctant, drunk blacksmith and get him working. It took a bit of doing, but I had convinced Leliana to speak with Ser Perth and then cajole the Revered Mother into a little white lie to improve morale. Alistair, Theron, and Sten went to the village store and picked up massive barrels of lamp oil to ignite the path and hopefully slow, if not re-kill, the undead up the hill. Morrigan went...I have no idea what she was doing, actually. Prince was largely running around and smelling the entire town, including the pyres burning the remains of the attackers and those that had perished from the night before. I spoke with several of the families in the Chantry, giving reassurance as much as I could, and went and found the little boy who had run away from his sister. I ran into Aedan, who had finished with the blacksmith, and talked him into coming with me to the home of Dwyn, the dwarf mercenary I knew was hiding out in town. \n\nAedan picked the lock to Dwyn's place - I wondered where he'd learned those skills - and we were in. It smelled like a locker-room for a high school football team, mixed with stale beer. Ugh, man sweat. Why don't they have deodorant in Ferelden? I took a moment to thank the Maker (or whoever) that my companions had adjusted to bathing as frequently as I liked to, so most of them were not as pungent. I shuddered as I considered a future travelling with Oghren. Aedan managed to convince Dwyn to fight while I was daydreaming, offering that both he and I would favourably mention him to the Bann and the Arl, but I shocked even Aedan when I spoke. \n\n\"Dwyn, may I ask, have you recently bought any new weapons?\" I smiled sweetly, trying to look girly. Knowing my luck I probably just look constipated or something. I persevered. \"I heard a rumour that a brave dwarf near these parts might have bought a Qunari blade in the last few weeks.\" \n\n\"What's it to you, sweetheart?\" Aedan tensed at my side and I gestured at him to stay out of it. \n\n\"I'd like to buy it from you, actually.\" Both Dwyn and Aedan stared at me, dumbstruck, and I laughed. \"Come now. Will you show it to my friend here? Please?\" \n\nMuttering to himself, Dwyn stomped into a back room. I heard some cursing, some rustling, and a loud squeak, and then he reappeared with the largest sword I'd ever seen. Aedan examined it with interest, but I didn't even try to pick it up. I doubted I'd be able to even carry it, nevermind swing it. \n\nDwyn named a ridiculous price, and Aedan immediately countered far too low. As they haggled, Aedan was getting frustrated and it seemed like Dwyn was being a jerk, just because he could. And then I got an idea. \n\n\"Wait, Aedan. You know what? Instead of buying it, maybe I'll just go and get Sten.\" Aedan caught on to my bluff right away. \n\n\"Who's Sten?\" \n\n\"Oh, you know who I mean. Seven feet tall, cranky disposition? The one who murdered eight people with his bare hands just because they didn't know where this sword was? I'm sure if I tell him that Dwyn here knows where it is, he'll be quite reasonable when he comes to collect it.\" ",
        "Dwyn's face paled, and he held his hand up in a conciliatory fashion. I wondered if he'd ever met an angry Qunari before. \"Wait now, sweetheart, don't be hasty. I didn't say I wouldn't sell it. How about we make a deal.\" I nodded, and he and Aedan agreed on a price we could live with. Dwyn promised to be out in the square when night fell, and Aedan hoisted the enormous weapon on his shoulder as we strolled back through the village."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-13"
}