{
    "title": "Play Testers Wanted Pt. 08",
    "pages": [
        "Another successful installment of this series. It is so much fun plotting, planning, and writing this storyline. I hope you enjoy it and please vote, comment, or drop me a message. This portion begins with Ghost arriving at the other end of the Kwa gate. What will he find and discover? Let's see. Pull up a seat and settle in for part eight.\n\nAtlantis or Bust:\n\nThe only hint of my having moved was the wall's decorations had changed. Three concentric rings seemed to dominate the artwork. Atlantis and its three ring shaped lakes surrounding the palace. Before I moved a muscle, I opened my inventory and felt a rush of relief. My possessions were accessible again. I donned my armor and brought the extendable fighting pike Shuri had made for me to my hands. I felt the thing's approach. So much anger on display and all directed at me. How did it even know I was here?\n\nNo use delaying the inevitable. Whoever or whatever it was reluctant to enter the pyramid. I strode out of the pyramid. He was waiting for me and his anger surrounded him. It was difficult, even with all my abilities, to properly perceive him. He hid behind illusions as his true shape was barely human any longer.\n\n\"I am Varnae the First, Master of the Darkhold and your lord and master.\" He hissed.\n\n\"Lovely titles,\" I replied and then continued. \"For an idiot.\" I added angrily.\n\n\"You dare!\" Varnae roared.\n\n\"You tell me everything I need to know about you and yet you know nothing about me.\" I growled as I prepared for his attack. \"Knowledge is power.\"\n\n\"In a moment you will become my slave and your argument moot,\" he bragged as his mind lashed out.\n\n\"No,\" I growled struggling through the merciless mental assault. \"I am the Champion of Anackire.\" I said through clenched teeth. \"See!\" I stated as I opened my left hand and blazing sun bright flame burst from my palm. It was as if the sun shone on virgin snow in the Antarctic and it was dazzling.\n\nVarnae shrieked as the light burnt him revealing his true features as he fled. I collapsed to the ground gasping as one attack ended, and another began. I had barely recovered when I was torn away from the pyramid's entrance to another realm entirely. The dimension was tidal locked with half of it bathed in perpetual light and the other shrouded in perfect darkness. Her place of power was located on the meridian between the two. The two extremes were constantly at battle with the other. I was thrown to land at the foot of her diamond and obsidian throne.\n\n\"Lady Anackire.\" I whispered facing the wroth of the goddess.\n\n\"You dare claim to be my champion! Prove it or perish!\" She purred as she watched me ponder how to demonstrate it.\n\n\"May I stand Goddess of Diametrical Forces?\" I asked and she gave me leave to do so. \"Anackire is generous.\"\n\nShe wasn't alone. There were other feminine figures behind her throne. One of the women was wrapped in a colorless hooded robe, her face hidden but her ample bosom clearly on display. Clutched in her hands a golden spindle and streaming from it a sparkling patchwork web. To her left was a woman wrapped in storm clouds and lightning rippled over her body and when she shifted soft thunder rumbled. The third woman wore a robe of intricate runic structures that shifted from one moment to the next. The last and hardest to perceive was a being clad in nothing. When light should have fallen on her it was warped and swallowed up as she were surrounded by a black hole's event horizon.\n\nI rose to my feet and straddled the demarcation point. I brought up both of my arms and conjured Snow Fire in my left hand and the Ebony Flame in my right. My body was wreathed in shadow as my feet left the ground. The goddess leaned forward and touched my mind and I didn't resist her. She triggered the memories involving her and my service to her.\n\n\"Often you have thanked or invoked my continence... my champion. What brings you to Atlantis?\" She asked as I stopped my display and bowed before I spoke.\n\n\"Doctor Doom has traveled from my present to steal the Vibranium meteorite from what will one day be called Wakanda. I choose to stop him.\"\n\nThe woman carrying the spindle whispered in Anackire's ear. The Nine-Fold Goddess took her counsel and pondered for a moment before speaking. \"You don't want it for yourself? The Vibranium came from Svartalfheim after all.\" She whispered. \"You have suspected as much but you don't know the why or how this feat was achieved. I deem you worthy to see the folly of your people. Behold!\" \n\nA single thread shot out of the spindle and struck me. I stood in a gorgeous garden. So many colors, shapes, and scents vying for my attention. I looked down and I wore silken garb of swirling black and white. I strode through the garden and exited it next to a cunningly crafted building, a Svartalfar mansion. Shouts from within caught my attention. There was a balcony on the second floor, so I leapt up and easily landed on it. Within were two figures locked in a desperate argument. \n\n\"Melekith, this is madness! End this conflict between our people and Asgard! Please!\" The female dark elf begged.\n\n\"How can I Allisara?\" Melekith, Ruler of the Svartalfar, raged as he turned on her. \"He violated you! He got you with child! I'll not have you carry Bor's child. The half breed will be slain.\" He screamed and then suddenly he was soft and gentle. \"I do not blame you my love... beloved wife. Bor is a wicked man and I will not let him have you and the riches of Svartalfheim. Even now the great magic I have wrought robs him of half his victory! Look if you dare!\"\n\nShe was heavy with child and yet gracefully crossed the room and stepped onto the balcony next to me. I turned to face outwards and cried out in disbelief. The myriad colors of the vast garden and beyond began to turn grey and then to a monochromatic landscape I knew all too well. The cloud of Vibranium that had been torn from the ecosystem of Svartalfheim coalesced into the very meteor that would strike the Earth.\n\n\"My son,\" Allisara whispered. \"You are loved and likely we will never set eyes on one another.\" She said clutching her swollen belly. \"We weren't always filled with unquenchable hate. We were a bright loving people once.\" Her last action before teleporting away was to look up and for the briefest moment locked eyes with me.\n\nI fell to my knees in the palace of Anackire. Was that child one of my ancestors? Did she want someone to know what had happened? The vision was clear and confusing at the same time. \n\n\"Well... what is your bidding my goddess?\" I asked overwhelmed by this tremendous revelation.\n\n\"Crush your enemy in my name! Make them fear the Goddess Anackire again. Make them love me as well. Back to great Atlantis my champion.\" She purred and gestured.\n\nWhile I was away a group of humans had gathered just outside the pyramid. I was still dressed in the black and white garb from the vision of blasted Svartalfheim. I had believed it a natural disaster, but it was done to spite Bor of Asgard. I took on my human guise and stepped out. I lifted my hands showing I was unarmed.\n\n\"I mean you no harm.\" I said and was greeted by Jaren, Prince of Atlantis.\n\n\"I speak for my father and the people of Atlantis. Welcome traveler. How come you through the ancient temple?\" Jaren asked. He was tall for his race, wide shouldered, long straight black hair, and stunning blue eyes that hinted at his keen intellect. The prince was clad in scarlet armor crafted from famed Atlantean Steel that was immune to both elements and the passage of time.\n\n\"Hold Prince of Atlantis, know you not who you address?\" An elderly warrior strode forward. His hair and beard were silvery-white, but his eyes were a bright green and there was a strength in his gaze. While the Atlanteans wore scarlet armor and robes the lone warrior wore worn steel and leather armor.\n\n\"Who are you stranger?\" Jaren addressed him.\n\n\"Fairly spoken Prince Jaren. The last time I visited Atlantis you were but a cub at your father's shadow. You have grown tall and hale.\" He said laughing. \"I am Conan, King of Aquilonia, and friend of Atlantis.\" He stated and I felt my jaw fall open in surprise.\n\n\"Conan! Slayer of many a dark wizard!\" Jaren replied smiling. \"Many welcomes hero and friend!\" He continued and gestured at me. \"You know this man?\"\n\n\"Aye I do. He is none other than Epimetreus the Sage.\" Conan declared in his powerful voice. \"He has long guided me in times of dire need. A dream directed me back to aid him against the foes of Atlantis.\"\n\n\"Doom. Viktor Von Doom.\" I said and Jaren looked like he had been felled.\n\n\"How could you possibly know that?\" The prince gasped and Conan laughed.\n\n\"Epimetreus knows many things known and unknown by mortal folk.\" The one-time barbarian announced. \"My sword is his. If you are wise Prince Jaren do not stand against the Phoenix Sage.\"\n\n\"I cannot aid thee nor will lend my blade to Doom. I must stand aside upon this conflict.\" He said looking sullen and angry. \"I am no coward!\"\n\n\"I have learned in my long years that wisdom may be confused with fear. You are no coward. None here will label thee so.\"\n\n\"Prince Jaren will you take my advice?\" I asked and Conan placed his meaty hand on the young man's shoulder. He nodded and I continued. \"If thee love your people lead them away from the city and spare them the doom that may befall it. I sense that though Atlantis be swallowed up it will rise again stronger than ever.\"\n\n\"I knew it!\" Jaren growled. \"I knew if my father listened to that crazed tyrant that the gods would punish us. I will take your wisdom to heart and lead my people to our ships and survive. It is better to live in exile than perish out of foolishness.\"\n\nJaren and his men left to gather as many of the Atlanteans that he could and flee the island continent. Conan and I left the pyramid and he mounted a battle-hardened grey horse. I reached out with my mind and touch the thoughts of a gentle animal. The riding lizard slithered out of the jungle and with a little work I managed to find my seat and we rode towards the edge of the palace. \n\n\"Though you may have lost your beard old friend it is good to see you again.\" Conan called out over the thundering of his mount's hooves.\n\n\"Truth is this is the first time I've met you.\" I admitted and he laughed.\n\n\"By the flawless breasts of Istus man, of course you haven't.\" He chuckled.\n\n\"Istus? Who is Istus?\" I asked as the blue and green lizard let out a startling musical cry.\n\n\"Know thee not the goddess of Time and Space? She was one of your chief patrons. You often boasted of the power of her omnipotent spindle. With it she weaves the tapestry of history and the entire universe.\" He explained. I had a flash of one of the women standing behind Anackire. One of them had a golden device in her grasp. \"I know that look. You remember now. Good! The more goddesses the better!\"\n\nThe arrow took the lizard between the eyes. I recognized the Vibranium shaft from previous encounters. As I slid off the corpse of the riding lizard, I swapped out the silk robes for my Yautja hybrid armor. With a flick of my wrist I extended Shuri's Pride to its full length. It was time to end these bitches once and for all.\n\n'Initiating automatic defenses.' Traci whispered as the red triangular targeting reticle appeared in the corner of my vision.\n\nConan already had boots on the ground and was reaching for his weapon. He cried out a challenge as he unsheathed his sword. It was clearly an enchanted weapon crafted of a red gold alloy and blazing with sun bright flames.\n\n\"Come cowards, face the wrath of Conan the Cimmerian!\" He shouted to our hidden enemies. Then he surprised me for the second time since we met. He took up the beginning stance of form eight which only I could have trained him in.\n\n\"I'll be...\" I cursed as I felt something strike my neck. A moment later I was hovering in the White Room.\n\n\"Respawn will being in thirty seconds. Twenty-nine...\" She counted down as I pondered what I did wrong.\n\nI died? How the hell did I die? I got ready as my game resumed. The arrow took my riding lizard between the eyes. I switched to the predator armor and took out the Vibranium staff that Shuri had made for me. I mirrored Conan's stance and reached out. I sensed the arrow as it sped towards me. I chose to dodge it. The shoulder cannon spoke and sent a blast of plasma once it had triangulated the source of the arrow. I heard a distant curse and laughed. The swordswoman appeared and decided to cross blades with Conan. She drew her sword gripped it with both hands and then with a twist she separated the twin swords and performed a flourishing maneuver.\n\n\"Impressive!\" Conan declared. \"Pity it will won't save you from the savagery of my blade.\"\n\n\"Mine is made from the purest Vibranium idiot!\" She educated him as they clashed.\n\nI dodge the next arrow and the cannon fired a second time. I saw the flash as she caught the energy on her bow. The next arrow nearly hit me. She had taken the energy and supercharged her missile. It discharged that energy but my own Vibranium armor absorbed the blast. I teleported to the base of the tree the archer was perched in. I took a two-handed grip on the staff and smashed it against the trunk. The strike shook the entire tree enough to force her to somersault from her position and tumble to the ground. I opened a portal below her, and she fell into it. I teleported to the demi plane I had sent her to. This realm was the home of the shadow elementals.\n\n\"Where am I?\" She asked.\n\n\"The Realm of Shadows,\" I whispered. \"Surrender and I'll let you walk out of here alive.\"\n\n\"She said you were a scoundrel.\" The Archer purred.\n\n\"Mystique?\" I laughed and she nodded. \"What is your decision?\"\n\n\"If I beat you, I am trapped in here. If I lose...?\"\n\n\"I bed you and send you naked back to Doom.\" I offered.\n\n\"I don't like the conditions.\" She growled.\n\n\"Fine.\" I said as I reached out and summoned one of the natives of the plane. \n\n\"Master?\" The elemental asked in a soft sibilant whisper.\n\n\"Can you open a portal to the Earthly Plane?\" I asked.\n\n\"I can.\" It informed me.\n\n\"I order you to do so if she defeats me. Agreed?\"\n\n\"I will do as you wish Master.\" It replied and slithered away from the two of us.\n\n\"Well?\" I asked and she agreed.\n\nShe drew an arrow as I extended the staff to its full length and waited. She pulled back and fired off the arrow blindingly fast. The little minx had been holding back. I dodged but barely. I felt the head of the arrow bounce off the cheek of my mask. If I hadn't been wearing it, she would have cut me for sure. The plasma cannon fired and once again she caught the energy on the spine of her bow. It forced her to wait to draw and notch her next arrow. I took advantage of that time to close the distance and forced her on the defensive. She performed an impressive combination backflip double kick which sent me staggering back from her feet striking under my chin. \n\n\"Nice.\" I admitted as I closed again. \n\nThat almost cost me my life. The charged arrow was aimed at my chest, but I managed to sidestep and raise my arm allowing the arrow to pass under my arm pit. I charged in twirling the staff in a forward arc forcing her to retreat. She gestured and I sensed the magic as she cast the spell. A thunderous roar behind me sent me into a new defensive position. She fell back as the enormous ursin shape attacked. The shadow bear was fucking huge! It swiped at me as the archer drew an arrow from her quiver and took aim. She had the time to do it this time around. I dove and put the bear between me and her. She cursed until she watched the creature, she had summoned land a bone jarring strike that sent me tumbling. It was time to change tactics. I returned the staff to my inventory and as the cannon blasted the bear, I took out the dark elven dagger for my left hand and the lightsaber I had crafted on Tython in my right hand.\n\n\"Just die already!\" She cursed in her heavy Scottish accent.\n\nThe arrow plunged into my shoulder and sent me sprawling. My life bar dropped a bit. I returned fire and flung the dagger at her. She tried to block it with her bow, but I altered its path at the last second and it took a hard right and slammed into the meaty part of her upper left arm. I heard her cry out and bones break. I summoned it back and turned on the bear. I dodged and sent the lightsaber spinning into it. The amethyst blade sliced across its torso dispelling it.\n\n\"Shit!\" I cursed as the arrow in my shoulder began glowing. \n\nI looked over and she had the bow in both her hands, and it was also glowing with the same radiance. Fuck me rotten, the bow and arrows are linked! I flung the dagger and she focused on its path as it began towards her face and then at the last second dove down and slammed into her upper thigh. It hit with more than enough force to break her leg. She shrieked in pain. The bow clattered from her grasp and she surrendered. The arrow teleported back to her quiver and I staggered over. I placed one hand on her arm and the other on her leg. I used Force heal and restored her. The pain was enough to render her unconscious. As she recovered, I examined her weapon and armor closely. They were as attractive as they were functional. They hadn't just been slapped together but thoughtfully crafted for her. \n\n\"I like the bear motif.\" I whispered as she slowly sat up.\n\n\"You healed me.\" Merida growled.\n\n\"We had an agreement. I keep my word.\" I replied sensing her confusion. \"I am not the bad guy. Doom lied to you.\"\n\n\"I was half expecting to wake up with you raping me. I should have known better after everything Mystique said about you. She painted you in a more flattering light.\" She chuckled. \"What now?\"\n\n\"I open a portal back to Atlantis, see what's going on and go from there.\" I stated. \"I need to stop Doom from changing history. If he succeeds, he'll take over everywhere. I can't allow that.\"\n\n\"What about... you know... our wager?\" She purred.\n\n\"If we wait it'll be that more intense.\" I promised.\n\n\"Agreed. Lead on McDuff.\" Merida chuckled as she stood.\n\nI opened the portal and the sounds of combat continued. We raced out and found Conan and Mulan still fighting. The sight was frightening to be honest. The Princess' two Vibranium swords were smoldering and looked like they were ready to explode. Conan was hammering away at her defense and seemed otherwise unharmed.\n\n\"This is bad,\" Merida gasped. \"Very bad.\"\n\n\"Yeah. I agree.\" I said. \"Stop! Both of you! We need to bleed off the excess energy from her swords now!\"\n\n\"How?\" Mulan gasped as Conan stood down and stepped back.\n\n\"Like this,\" I growled as I telekinetically pulled the swords out of her grasp and using saber throw flung them as far away from us as the jungle allowed. \"Down!\" I urged as the swords plunged into an ancient tree. The ancient sentinel exploded sending wooden shrapnel everywhere, but the sacrifice kept us, and the rest of the jungle from being leveled. \"Here. Let's talk.\" I said as I returned her weapons to her.\n\n\"Why aren't you fighting him?\" Mulan asked Merida.\n\n\"He defeated me. We made a bet.\" Merida explained as she blushed furiously.\n\n\"Mystique will not be pleased.\" Mulan replied grinning. \"What should I do? We've been friends for too long to break now.\"\n\n\"Surrender. Doom lied to us.\" Merida suggested. \"Our oath is forfeit.\"\n\n\"My blades are yours.\" Mulan said looking relieved. \"That madman will destroy us all if he succeeds.\"\n\n\"She is a worthy ally,\" Conan added. \"She kept looking at the sky though. Why?\"\n\n\"Doom is expecting a star to fall to the Earth tonight.\" I explained and he nodded. \"We should see it when it hits the atmosphere.\"\n\n\"This falling star is important?\" Conan asked and I told him how it could alter history. \"We need to stop the fiend.\"\n\nWe ran the rest of the way to the palace. The Avengers and X-Men were arrayed before a mystic forcefield protecting the structure. A voice from above got my attention. Steph flew down with the cloak of levitation fluttering behind her.",
        "\"Ghost! Is that you?\" She asked as I took her into my arms.\n\n\"It's me. How long have you been here?\" I asked wanting to get an idea of the difference between my timeline and theirs.\n\n\"Three weeks.\" She declared. \"I'll give the Atlanteans credit, they know how to build forcefields. Where have you been?\"\n\n\"Off world.\" I said not sure how much we had time for. \n\n\"Welcome to the party!\" Iron Maiden declared as she landed. \"How the hell did you get here, the gate is on the other side of the barrier.\"\n\n\"I used the other gate.\" I explained. \n\n\"Other gate!\" Toni Stark exclaimed as her helmet opened revealing her smiling face.\n\n\"It wasn't built by the Atlanteans though.\" I explained before I did introductions all around. \"Let me show you and perhaps it might be of help in our current situation.\"\n\nTwenty minutes later and Toni Stark was in her element. She was whistling as she looked at the gate's elements. I didn't know her well but if I were to describe to reaction to Kwa technology it would be reverence. \n\n\"It is art and science made manifest.\" Toni muttered. \"What is on the other end?\"\n\n\"Another galaxy... another time...\" I tried to explain.\n\n\"Excellent!\" Toni gleefully stated rubbing her hands together.\n\n\"Can we use it to breach the barrier?\" Doctor Strange asked.\n\n\"Perhaps.\" Toni pondered. \"But it would be dangerous. This tech is alien, advanced, and could take years to unravel. Language alone is a huge contributing factor.\"\n\n\"The forcefield surrounding the palace, what kind of energy are we dealing with?\" I asked.\n\n\"It is a perfect blend of tech and magic. One supports the other. If a magic weapon, such as Mjolnir, is used against it the technology bolsters the magical side. The same is true of mundane forces trying to penetrate it. If both are used the defense is quadrupled.\"\n\n\"What if you could neutralize one of those forces completely?\" I asked and Toni looked at me ignoring the gate.\n\n\"You have something, don't you?\" She smiled. \"If you were able to negate the magical side, we might be able to breach the barrier in a limited area or perhaps collapse it altogether.\"\n\n\"How long do we have before the meteor strikes?\" I asked and there was a puzzled look on their faces.\n\n\"There is no sign of it.\" Steph explained. \"Stark placed a device in orbit and there is no sign of the meteor. That much Vibranium should give off a clear signal.\"\n\n\"I don't get it. Doom wouldn't make that kind of mistake.\" I stated and the others agreed. \"He is known for his research and accuracy. How far back are we?\"\n\n\"Ten thousand years friend Ghost!\" Thor boomed as he landed at the entrance of the pyramid. \"It will be good to fight alongside you!\"\n\n\"I feel the same Odinson,\" I replied. \"I have discovered the origin of the Vibranium meteor.\"\n\n\"You have,\" Shuri purred in my earpiece. \"Well?\"\n\n\"I am hesitant to just speak it aloud. Do you remember the statuette at the embassy?\" I asked and I heard her sudden gasp. \"Got it in one. Stark. Any sign of the meteor?\"\n\n\"Nada,\" She grumbled. \"Doom is no fool. Even if he were off by a few days we'd still be able to detect its presence. I don't get it.\"\n\n\"Neither do I,\" I admitted as I switched off my communicator. Thor did the same so I could share what I had learned from the vision that Anackire had given me. \"I know where the Vibranium meteor came from.\" I began. \"It originated on Svartalfheim. Melekith didn't want your grandfather Bor to claim it. He stripped the entire realm and hurled it to Midgard.\"\n\n\"So Svartalfheim wasn't always a wasteland.\" He said and I nodded. \n\n\"I don't get it,\" Stark said wanting details. I explained how the Vibranium was directly tied to the entire ecosystem on the Realm of Svartalfheim. \"Once it was stripped away it destroyed the environment turning it into a barren desert.\"\n\n\"Monstrous!\" Toni gasped. \"So how do we get through the barrier and capture Doom?\"\n\n\"I thought we could...\" I began and laid out a plan.\n\nThe heroes were arrayed and divided up with the nonmagical characters up front. I gave the box containing the Plains Cat bracelet to Toni Stark. I promised to get it back after the battle was done. Steph, Bryce, and I were near the back. I had already felt the bite of a magical suppression field once too often. I had my lightsaber equipped not wanting to accidently hit an ally with Death Kiss. Once we were ready to breach the barrier the Iron Maiden took flight and flew close to the edge of the force field. We could see the barrier flutter and at that moment Thor hurled Mjolnir creating a visible gap in the field. We rushed in as Thor and Stark protected the opening.\n\nDoombots were waiting for us by the dozens. Colossus, the mutant that could turn his skin into living metal, was having fun demolishing them. Steph, Thor, and I teamed up. Steph created mystical fields to protect us as Thor and I worked together. He summoned storm clouds and lit them up with lightning. \n\n\"Something is interfering with my ability strengthen the storm,\" he growled. \"Atlantean magic is stronger than I expected!\"\n\n\"Let's see what happens when I lend a hand,\" I offered as I drew on my vampiric skills and tried out weather control for the first time. I felt something push against me but between the Asgardian god of thunder and me it snapped. \"That's done it!\"\n\nThor raised Mjolnir above his head and a massive blast of lightning struck the top of the remaining barrier. The force field was destroyed as was the bracelet that Toni Stark had dropped upon the barrier. My HUD dinged and informed me I had lost the Plains Cat object. It was worth it. Suddenly I was flying backward and saw a doombot closing in for the kill. I was igniting my lightsaber when a dark figure slammed into the robot and tore it apart with her bare hands.\n\n\"We got you Tiger!\" Mary Jane Watson purred as she continued to attack. She had bonded with a symbiote. She was She-Venom! How long had this been going on? No time to think about that. I tossed my lightsaber and sliced the arms off another doombot that was attempting to flank MJ. \"Thanks Tiger!\" She roared as she decapitated that robot.\n\nI pulled back my weapon and ignited the second blade and went on the offensive. The doombots were adapting and improving their collective defenses. They were down to only thirty, but they were becoming harder and harder to destroy. Storm and Thor joined forces above us and sent down blinding blasts of lightning. Meanwhile Doom stood on the balcony along with an undisguised Mystique. She was maintaining a mystical shield around Doom as he blasted at the heroes from weapons built into his armor. \n\n\"You!\" Doom roared as one of his energy blasts was caught on the blade of my lightsaber and reflected at him. Mystique's shield protected him, but the near miss pissed off the maniacal tyrant even more. \"Soon I will have what I have come for.\" He roared over the battlefield. In reply I flipped him the bird.\n\n\"Something is happening,\" T'Challa said in my ear. \"There are strange circles appearing in the air above Wakanda. I don't understand.\" He reported but I did. Ten thousand years in the past and a tie with the dark elves. \n\n\"Are you safe?\" I asked.\n\n\"Yes... why?\" Shuri asked.\n\n\"You'll see!\" I exclaimed. \"I wish I could be there to see it.\"\n\n\"See what?\" The Black Panther queried as I called out to Doom.\n\n\"Nope!\" I cried out shaking my head. \"Wrong again Viktor!\"\n\n\"Twice you have thwarted me,\" Doom roared. \"You will not do so a third time!\"\n\n\"I won't lift a finger. You've fucked yourself Doom.\" I said deflecting and reflecting the energy blasts from Doctor Doom.\n\n\"Language.\" Gwen said as she landed next to me. \"He doesn't look so tough.\"\n\n\"I am Doom... I am triumphant!\" He laughed as what appeared to be an Atlantean sorcerer speaking to him. \"NO!\" Doom screamed as Iron Maiden flew over the battle.\n\n\"We have touchdown! Way to go Ghost! Your plan worked perfectly!\" Toni said sending Doom over the edge. She, like the rest of us, had heard Shuri and her brother describe what had happened.\n\nThe Convergence had manifested over what would one day be the nation of Wakanda and the home of the Black Panther. The meteor had passed directly from the realm of Svartalfheim to Midgard and struck as it was always meant to. Doom would have his revenge. The doombots pulled back and formed up into a deadly phalanx with Doctor Doom at their head. An idea popped into my head when I saw that Mystique was still perched on the palace's balcony. I activated my invisibility, altered my form, and slipped on the S.H.I.E.L.D. uniform from my inventory. I took up a hiding spot while the heroes were forced back, and I slipped behind the line of doombots and appeared next to Doom. I even managed to deflect a shot aimed at his head.\n\n\"I knew you would change your mind.\" He said. \"What is your fascination with the Black Widow?\"\n\n\"Everyone loves a redhead.\" I said in Mystique's voice. \"What is your plan?\"\n\n\"I told you before I am going to crush him!\" Doom raged. \"No plan required. See how my doombots are pushing them back. Once I have him within my grasp, I will slowly choke the life out of him.\"\n\nI took the dark elf dagger from my inventory and slammed it into his back. Doom cried out as his life bar dropped near zero. I took on his shape and ordered the doombots back through the portal. A simple stunning spell knocked out the real Doctor Doom. I didn't miss the look of raw hatred in his eyes before he lost consciousness. Thor landed nearby and provided mystical restraints to hold the despot before I healed his wounds. \n\n\"Time to go.\" I called out reverting to my human shape.\n\n\"I couldn't have done better.\" Widow stated with a wink.\n\n\"If only we can find a way of closing the portal.\" Stark declared as she took possession of Doom.\n\nI looked up and Mystique was gone. No doubt she witnessed my actions and fled through the portal back to the present. Conan approached and was smiling from ear to ear.\n\n\"A fine battle you gave to me in my waning years!\" He gasped. \"It is time for us to part old friend. Here... take her.\" He demanded as he handed me his sheathed sword. \"Istus be praised and now the circle is complete.\"\n\nIt wasn't until he collapsed that I spied the wound he had suffered from one of the doombots. I held him as the last of his life left him. The first rumbles of Doom's revenge began to grip the island of Atlantis. We had done this. We sank it. Perhaps it was always meant for us to do so.\n\n\"For Anackire! For Istus! I gift you this island!\" I cried aloud as Conan took his final breath.\n\n'We accept Champion.' Anackire whispered in my thoughts. \n\nThe ocean will be your tomb great hero. I left him on the battlefield. I was one of the last through the time gate. I waited for T'Challa and Shuri to arrive via Quinjet from the site of the meteor strike. They had wanted to be there and see the historic event with their own eyes.\n\nThe transition through the gate was no less unpleasant than the first time. I fought the nausea and stood before three famous teams of heroes, the Avengers, the X-Men, and of course the Agents of S.H.I.E.L.D. in all their glory. Toni Stark, Nick Fury, and Professor X were huddled together trying to figure out how to close the gate.\n\n\"We don't have thank kind of ordinance on hand.\" Fury growled.\n\n\"Besides, there is no nation on the earth that would sanction a nuclear strike on another sovereign nation.\" Xavier declared.\n\n\"I got nothing.\" Toni admitted defeat. \"Even if I set my Arc Reactor to critical it would fall short of the power required.\"\n\nI checked my quests and to my surprise one of them was highlighted in green. Destroy the Time Bridge was active. I went through my inventory and there under 'Yautja Self Destruct Devices' the items glittered.\n\n\"I have a cunning plan.\" I announced and all the bickering voices fell silent. \"Can you mark three one hundred- and twenty-degree points on the portal.\"\n\n\"I got it.\" Stark declared. \"How accurate... duh... never mind. Jarvis!\"\n\n\"Yes Miss Stark, measuring and marking critical points on the gate's surface.\" The A.I. gleefully complied as three lasers fired off Toni's chest plate. I placed the charges carefully until they were within millimeters of perfection. \"Charges are in place. Please evacuate the palace immediately.\" No one needed to hear that twice. \"Charges activated.\" Jarvis declared once everyone else was gone.\n\n\"Time to go Ghost man!\" Toni shouted as she scooped me up under the arms and flew us out all the while Jarvis counted down the explosion.\n\nToni flew through a twenty-foot-tall stain glass window of Viktor von Doom. \n\n\"3... 2... 1...\" Jarvis' voice called out just before Doom's palace vanished in a bright white implosion. \"Scanning. Scanning. Temporal Portal has been neutralized.\"\n\n\"So has his castle.\" I muttered.\n\nStark and I landed amid heroes and citizens of Doomstadt. We had stopped Doctor Doom and possibly freed these people at the same time. It was up to the World Court to decide Doom's fate. The after party was delayed as another mandatory break from the game was called. Game Saved.\n\nI woke up in my room and sat up slowly. I heard voices from the lunchroom. It sounded like a lot more people than usual. Once the last of the dizziness was gone, I checked out my reflection and didn't miss the change in my eyes. I leaned in close and blinked. The iris was a vertical slit and the color was now a vibrant metallic silver. What the hell? My musculature was more pronounced but like a martial artist and not a weightlifter. I could still lower my arms to my sides without any problems.\n\n\"Hey... Booker? Are you coming out to eat with us?\" A sultry female voice asked.\n\n\"I'm going to take a quick shower first. Save me a few slices of pizza!\" I called out.\n\nI grabbed clean scrubs and a towel. I walked down the hall to the communal showers. I picked one of the showers at random and started it up. It reached an optimum temperature in no time at all. I dumped the dirty clothes into a hamper near the center of room and slipped under the hot water. I tipped my head up and let the water hit my face. I yelped in surprise when I felt naked breasts touch my back and arms slip around my waist.\n\n\"Can I join you?\" The same female voice I had heard earlier purred behind me.\n\n\"It looks like you already have.\" I yelped when she hugged me.\n\n\"I am a huge fan!\" She informed me. \"I've seen all of your videos.\"\n\n\"Videos? Fan? Please don't take this the wrong way...\"\n\n\"Aoki. Aoki Kirosawa,\" she said filling in the blank. \"You've been the board leader for a while now.\"\n\n\"Maybe I've been in the game too long, but I've never heard of any of this.\" I admitted as she rubbed her nipples against the middle of my back. \"Aoki, that feels nice.\" I stated as her hands wrapped around my cock. \"Careful... unless you plan on finishing what you start.\"\n\n\"I swear that I am absolutely up to no good.\" She giggled as she began stroking me. \"Players in the Star Wars game can take footage from encounters whether just particularly great fight scenes or physical or character encounters. Some of my best sexual encounters are out there. A few have even gone viral. You are like at the top of a lot of lists. Can I taste it?\"\n\n\"UNNN! Sure!\" I gasped as I turned around and a cute little Asian girl was already dropping to her knees. She was so petite and that made her breasts and ass look big. Her skin was heavily tanned, and her areolas were the color of dark chocolate and looked just as tasty. I guessed she was either Thai, Cambodian, or a blend of Japanese given her name. I felt the sense of stage fright seeing such a gorgeous creature taking me in hand and licking the underside of my dick. Fooling around in game was one thing, but I was still a bit unsure in real life. She greedily took half my length between her lips, so I waited to ask her about the board. \n\n\"You are really good at that,\" I said and that just revved her up to the next level. \"Oh shit! You can deepthroat too!\" I gasped when she pulled back, massaged my balls, and looked me in the eye while drool dripped from her lips. \"If you plan was to impress me, you've done it in spades.\"\n\n\"Booker? He's in the shower but...\" A woman said just outside the open doorway.\n\n\"Booker?\" My mom's voice called out as she walked in. \"Oh hey... OH! Hey!\" She exclaimed seeing my erection buried deep between Aoki's lips.\n\n\"Hi. How did you get in here?\" I asked.\n\n\"Will you fuck me now?\" The Asian girl asked as she stood up, bent over, and pulled her ass cheeks apart.\n\n\"I take it you don't mind being watched,\" I said, and she wiggled her ass. \"Okay, here... we... go.\" I moaned as I slowly slid into her. \"How are you doing? Did you miss me?\" I asked leaving out words like mom, mother, and such. I noticed how pale my cock was compared to Aoki's sun kissed ass cheeks and pretty pink pussy.\n\n\"Careful, tiny pussy big cock!\" She groaned as I sunk deep.\n\n\"Slow.\" Mom urged. \"Make her beg for it. Just like I used to. Good times!\" She paused and looked Aoki in the eye gauging how aroused she was. \"Full tilt.\" Mom declared and which meant the little Asian bombshell was eyes shut and mouth wide open. \"Your face is all over the net well your virtual version.\"\n\n\"Really? You want to talk about this now?\" I asked as I slowly thrust in and out of Aoki who reached out and braced against the wall of the shower.\n\n\"I just wanted to say how proud I was of you.\" Mom explained as she watched me slide in and out of Aoki. \n\n\"Meredith? Sweetie!\" Kat Shaw's voice echoed off the shower walls. Mom turned and the two women embraced and hugged for a count of twenty. \"You look amazing! Have you come to... oh good lord Aoki! Are you okay?\"\n\n\"Oh Yeah!\" She grunted as I picked up speed. \n\n\"Maybe we should?\" Kat nervously giggled.\n\n\"No!\" Mom put her foot down and approached me again. \"Let's raise the stakes. You like a challenge don't you Aoki?\"\n\n\"Challenge? What kind of challenge?\" She asked as mom bent over the young Asian's ass and spat on her asshole. \"Did she just...?\" \n\n\"Yep. Challenge accepted!\" I growled as I placed my thumb over the spittle and made slow circles easing my digit deep into her ass.\n\n\"UNNNNN! I don't... I mean I've never...\" Aoki panted and squeezed my thumb tight.\n\n\"Breathe darling,\" Mom urged Aoki. \"Go on do it!\" She growled in challenge. I pulled both thumb and cock out of Aoki. \"Here it comes. Get over here Kat! You just must see this!\"\n\n\"Relax,\" I purred, and the strangest thing happened. The petite Asian did just that. I could see her muscles lose their rigidity. \"Remember to breathe,\" I urged as I pressed the head of my cock against her asshole. I glanced at mom as I began pushing. Kat gasped as poor Aoki's sphincter slowly relented. \"Relax.\" I sang softly and she let out a soft gasp as the tip popped in. \"I'll be damned it fit.\"\n\n\"Damn that is sexy!\" Kat whimpered.\n\n\"Push.\" Mom demanded. \"I want to see her take every last inch. Have you 'grown' since I last laid eyes on you.?\"\n\n\"You are going to love this.\" I continued to sing, and Aoki pushed back as I pushed forward.\n\n\"Dear god,\" Mom exclaimed. \"She took it all! I never was able to do that.\"\n\n\"You do anal?\" Kat asked mom as Aoki's knees began to tremble. She told me she was going to lose her balance. I slid my hands behind her upper thighs and lifted her off her feet. \"Holy shit girl! He's balls deep now!\"\n\n\"Yes, he is.\" Mom purred. \"I envy her. Maybe we should leave them alone.\"\n\n\"Nah!\" Kat laughed. \"He is at the core of our biggest fan base.\"\n\n\"There is that word again.\" I grunted as my erection slowly sank into Aoki. \"Why would anyone find me worth that? I don't get it.\"\n\n\"Are you kidding?\" Aoki moaned as my cock hit deep. \"You took out four Sith Lords single handedly. Four! If I knew about your dick, I'd have done this a lot sooner. MMMM... so damn thick!\"",
        "\"Where the hell did you hear about that?\" I asked as I began moving my hips now that she had acclimated.\n\n\"It is all over the Holonet. Players can display personal game footage for others to enjoy. They are carefully screened to not spoil existing plots and storylines. Harder?\" Aoki begged.\n\n\"Like this?\" I asked as I thrust with more force. \"How's that?\"\n\n\"Oh yeah!\" She squealed. \"I've studied your technique and it is amazing.\"\n\n\"I was about to say the same thing,\" Kat moaned.\n\n\"It is a real tight fit.\" Aoki admitted. \"I am so tiny.\" She was panting now as I thrust up into her. Mom and Kat had fallen silent. They knew each other, how did they know each other?\n\n\"Close!\" Aoki warned me as she clenched her ass around me.\n\n\"Me too!\" I yelped as I pounded her as hard as I could. Mom smiled and began counting down.\n\n\"3... 2... 1... Now!\" She stated just as I shuddered, and my load pulsed deep in the Asian's tight little ass. Aoki screamed announcing to any in hearing distance what we were up to.\n\n\"Well done! I give it a ten.\" Kat stated clapping her hands. \"Well?\"\n\n\"Eleven.\" Mom moaned. \"That was amazing. Since you are here, we need to talk.\"\n\n\"Talk? About what?\" Kat asked being obviously coy.\n\n\"The obvious.\" Mom snarled as she looked me over. \"I barely recognize him. This is Nick's doing. I just realized we haven't seen each other since the funeral. How are you holding up?\"\n\nI lowered Aoki to her feet and pulled out. She used another shower to wash up and promised to grab me some pizza. I washed up as Aoki dried off and dressed. She escaped as she wrapped a clean towel around her long black hair. Mom handed me a towel and admired the new me until she looked me in the eyes. \n\n\"Your eyes.\" She gasped.\n\n\"I am freaking starved.\" I said as I dried off and dressed so I could eat with the rest of the players.\n\nThe three of us walked into the cafeteria and that was my first glimpse at the board. It monitored all the play testers and their progress. I was shocked to see my name at the top spot for Marvel vs. Disney Princesses. Aoki patted a spot next to her and held up a plate with several pieces of pizza. I grabbed a drink and sat next to her. Kat sat on the other side and mom next to her.\n\n\"How are you enjoying the game Aoki?\" Kat asked.\n\n\"Best game ever.\" She laughed nervously. \"I just got Force Sensitive. I need to find a mentor.\" She said.\n\n\"Booker you are ranked as a Force Master, what do you say?\" Kat suggested.\n\n\"You are Booker?\" A guy two tables down said, and I recognized his voice.\n\n\"You are one of that four-man crew that tried to take me out.\" I said smiling. \"You are a great swordsman.\"\n\n\"Coming from you that is a great compliment.\" He said grinning. \"We returned to Korriban and man they don't like you at all. If you head back watch your ass.\" \n\n\"Speaking of ass,\" Mom whispered for Aoki's benefit who blushed furiously.\n\n\"I had little choice.\" I replied ignoring her.\n\n\"Oh?\" Kat asked. \"What did you do?\"\n\n\"I convinced Xim the Despot to fire two missiles at the Governor's residence. There was something beneath it in the catacombs.\" I explained.\n\n\"I don't believe it.\" Kat gasped. \"You found it... I didn't think anyone would and survive.\"\n\n\"Found it... found what?\" The guy from the other table asked.\n\n\"Lips are sealed.\" Kat declared. \n\n\"Will you be my master?\" Aoki asked her hand snaking underneath the table to encourage me.\n\n\"I won't be easy on you.\" I explained. \"I trained with someone before and they cut before they were done. If you commit it is until I feel you are ready.\" I demanded and I'll give her this she really thought it over. \"When you are done few will match you in combat and stealth.\"\n\n\"No shit.\" The four friends agreed. \n\n\"Alright. I want to see how far I can go.\" She agreed.\n\nKat winked and said she would make it happen. I ate and shared stories with other players. Kat told me I had a scan waiting for me after I was done being social. It was nice hanging out with other humans for once. I was getting a bit tired, so I left them and headed for the clinic. Mom followed me and praised how well I had fucked the living hell out of little Aoki. I glanced around and when I was sure we were unobserved I pounced. My hand wrapped around mom's throat as I gently pinned her to the wall. I looked her in the eye before kissing her. Our tongues dueled as the kiss deepened. She shook for a moment and gasped for breath.\n\n\"Freak,\" I said as she recovered from her climax.\n\n\"I am your freak.\" She corrected me. \"My poor panties are soaked.\"\n\n\"Let's see how bad it is,\" I stated, and she hugged me as we walked to the clinic.\n\nThe halo scan dropped down and it seemed to take longer this time. Maybe it would explain why my eyes had changed. An elderly physician stepped out instead of Kat. I guessed his age to be well into his sixties. His bushy white hair was a chaotic mess. He looked like the mad scientist that was constantly running his hands through his hair when things didn't go his way. He smiled a lot as he stared at the tablet computer in his grasp. He swiped from screen to screen and frowned. He looked concerned and when I asked if my health was in danger, he shook his head.\n\n\"Just the opposite my boy.\" He replied in his lightly accented English. \"I'm sorry for the delay. I needed to contact a geneticist about some of your results.\" He collected his thoughts before he continued. \"There is a misunderstanding about how much of our brain capacity that we use. They've made movies where people suddenly are using more and gain unusual abilities. That is just fantasy. However, the injections you received were meant to simply give you sensory access to the game. In your case though the nanites, microscopic machines, well they migrated not just to other portions of your brain but other biological systems.\"\n\n\"That would explain my muscles and eyes changing.\" I said and he agreed.\n\n\"Those are the obvious and superficial effects. The truth is the alterations are quite profound. It wasn't until after certain files were unearthed that the full implications were revealed to us. Before Nicholas... Mr. Shaw perished he was working on a project for deep space exploration. Humans aren't built to withstand the tolerances and adverse environments out there. He desired to tweak human optimum performance. Your genetics were compatible with the dormant coding programmed into the nanites. I am afraid the changes are permanent and ongoing. Ms. Shaw is willing to have her lawyers come in and offer you compensation...\"\n\n\"You said there aren't any negative effects, right?\" I asked and he nodded. \"Why would I want money? Do you know all the changes I am going through?\"\n\n\"No. Nicholas... was a genius. We are still uncovering half-finished projects and some of them are staggering. You are his living legacy. I will leave this tablet with you so you can look at what we have discovered so far. I'll be honest with you. We may never understand all of the changes.\"\n\n\"Cool.\" I said and he smiled. \"I am exhausted and need a nap.\"\n\n\"Pleasant dreams Mr. Booker.\"\n\nMom wanted to talk before I slept. We wandered the halls as I looked for something to discuss that didn't involve my new physiology. We walked past the half empty cafeteria and just beyond that a private dining area. Inside the room were ten people dressed in what could only be called team uniforms. What the hell?\n\n\"Didn't Kat tell you? The Star Wars game has gone professional. Portions of it are televised as teams duke it out in hyperspace.\" Mom explained. \"Oh, don't frown, it was bound to happen.\"\n\n\"I hope they keep it separate from the amateurs. Pros will do nothing but ruin the game.\" I said a little too loud.\n\n\"Fuck you asshole!\" One of the pros snapped as he flew to his feet. He was half a foot taller than I was and built as solid as adamantium. \"Say that again, I dare you!\" He growled as he got in my face.\n\n\"Pro players will ruin the game if they aren't kept separate.\" I calmly stated.\n\n\"I'm going to pound you into the ground you smug little...\" \n\n\"Sit down and shut up!\" I hissed and it happened again. Just as Aoki had relaxed upon command the brick wall of a human being returned to his seat.\n\n\"How the hell did you do that?!\" Mom gasped shocked to her core.\n\n\"Kaia-Jutsu.\" I whispered. \"Ha! Let's finish our walk.\"\n\nMom waited until she was sure we were alone before she spoke.\n\n\"Listen.\" She said as she pushed my back against the wall. \"There is something you need to know.\" She purred as she sniffed me. \"You smell really good! Damn it woman, stay on target, it is about your father, your real father.\"\n\n\"My biological father,\" I replied, and she nodded as she pressed her body against mine. \"He's dead.\"\n\n\"No, he isn't dead. He is living on the South of France.\" She explained. \"I had an affair with him before I met my husband your father. I was pregnant before I made love to your dad. I don't know how to say this. I know why the nanites bonded to you.\" She said her body shaking in obvious need. \"Nick confronted me before he died. He found out somehow.\"\n\n\"Nick!\" I exclaimed holding her by the shoulders at arm's length. \"What about Nick?\"\n\n\"I promised him I wouldn't tell. Damn him! Think it through Booker!\" She urged. \"If I stay, I'm going to rape you right here in the hallway. I miss you.\"\n\nShe fled before I could stop her. What did Nick have to do with this? She knew Kat and him. I returned to my room and found the door open. Aoki was in my bed and lifted the covers to reveal her naked body underneath. I closed the door and stripped down. We snuggled close and she yawned.\n\n\"Can I ask you about the game?\" I queried and she nodded sleepily. \"What era is your character in?\"\n\n\"KOTOR,\" she murmured. \"I love the Knights of the Old Republic. The characters are so dashing and exciting. The War between the Republic and Darth Revan has just begun. Why?\"\n\n\"Hmm... the last planet I was on was Tython. I had just finished training with the Je'Daii.\" I explained. \"Revan huh? That is interesting. The crystal in my lightsaber is named after him, Revan's something or other.\"\n\n\"Bullshit! You are talking three different eras. The Je'Daii predate KOTOR and only a few players are allowed into that play test. You have the second big was between the Jedi and Sith with Revan. Then your crystal must be post war and nearing the time of the Galactic Empire. How many characters are you playing?\" Aoki asked awake now.\n\n\"Just the one. I was trained by Ventress when I started off. Then I ran into the wreck of the Pride of Korriban. That was odd. I was sent back via Doctor Doom's time portal to pre Sith Korriban. That was just before I went to Tython.\" I explained leaving out the details.\n\n\"Time travel via MVDP, weird. Normally you must make up a new character to play in the different timelines. What are the odds of that?\" She giggled and then yawned a second time. \"Pleasant dreams.\"\n\n\"You are going to spoil me,\" I said as I yawned.\n\n\"Good, you deserve it.\" She giggled.\n\nShe snuggled and I fell asleep with her arm draped across my chest. Pleasant dreams indeed. I was standing on the surface of one of Saturn's moons looked up at the ringed gas giant. I felt so insignificant. I was a speck on the face of eternity. It was gloriously humbling. I explored the surface of the moon until I awoke to Aoki stroking me gently.\n\n\"Morning. Can I suck your cock mister?\" She asked as she licked her lips.\n\n\"Absolutely.\" I moaned as she dove under the covers.\n\nTwo minutes into the blowjob my door opened, and Kat strode in and sat at the nearby table.\n\n\"Have you seen Aoki?\" Kat asked and then she noticed the lump in my covers. \"Mr. Popular has a guest... good. Have you read over the report?\"\n\n\"Not yet. I was worn out and fell asleep.\" I moaned as I felt my cock slide down Aoki's throat. \"I don't want any money, just a job,\" I said trying to keep things casual and failing.\n\n\"Too bad,\" She said with a savage smile. \"Nick left you, well not you specifically, he set aside funds for you to compensate for any inconvenience. Did you just...?\"\n\n\"Uh huh, she is a really gifted oralist.\" I gasped as Aoki swallowed and I looked for a word other than cocksucker.\n\n\"Give me your wrist. This belonged to Nick,\" Kat said securing an elegantly fashioned narrow metallic cuff. \"It is a blend of platinum, iridium, and rare earth alloys. Nick never made anything half ass.\"\n\n\"It is gorgeous,\" I whimpered as Aoki repositioned herself. \"Why give it to me?\"\n\n\"I thought you'd like it and besides it'll just gather dust and Surfer would go unused.\" Kat lied and poorly.\n\n\"Surfer?\" I gasped as the jewels lit up projecting a familiar female version of the Silver Surfer.\n\n\"Master Booker, or do you prefer simply Booker?\" Surfer asked.\n\n\"Booker is fine,\" I growled as Aoki continued to tease the head of my erection.\n\n\"You and Meredith eh,\" Kat purred. \"How did that happen?\"\n\n\"How the hell does anything happen with that woman? My friends and I were playing anime shots. Every time anyone mentioned the hero's name, we took a shot.\" I explained.\n\n\"What were you guys watching?\" Kat asked as my cock slid between Aoki's ass cheeks.\n\n\"Guyver,\" I moaned. \"We were half lit by the time we reached the end of the first episode. My friend was out like a light and his girlfriend had me out and was just getting to 'know' me when Meredith staggered in. The girl freaked out until Meredith knelt between my legs and showed her how a real woman sucks dick.\"\n\n\"Tell me she didn't drive home.\" Kat giggled seeing how red my face was.\n\n\"No,\" I whimpered as Aoki shifted a little and was teasing me mercilessly. \"They took turns sucking me off before we went upstairs. That little affair lasted a year. Meredith and I occasionally throw a log on the fire and rekindle things when one or both of us are lonely.\"\n\n\"Taboo for two,\" Kat purred. \"I'll leave you alone for now.\"\n\n\"You are still hard as a rock!\" Aoki called from the depths of the covers. \"Here... UNNNNN... hold on... almost got it... YEAH! How does that tight little Asian pussy feel?! Being short has its advantages.\"\n\n\"Well Booker, how does it feel?\" Kat purred.\n\n\"Tight! Really fucking tight!\" I moaned.\n\n\"Is there someone else in the room?\" Aoki asked as she came up for air. \"Oh Shit! Sorry Ms. Shaw... don't... stop flexing it inside of me! Damn it Booker!\"\n\n\"Have fun you two. Read that report before you log in.\" Kat demanded as she left, and Surfer returned to her digital domain.\n\nAoki and I fucked like bunnies. I wished I had a second dick so I could have pounded Kat and Aoki at the same time. Ah well. Aoki fled after a mere three climaxes. I hit the showers and read the report while I washed off the sweat and funk, we had worked up. Surfer hovered nearby despite the cloud of hot water and cold air combining around me. If I was reading this correctly, I was on par with any Olympic level athlete. It was like a real-life super soldier serum. There was plenty I didn't understand. Damn it Jim, I'm a musician not a doctor. \n\n\"Surfer. Can you help out with explaining what is going on?\" I asked and she explained by showing me the scans they had taken earlier. Surfer stood in front of me and leaned against me as she spoke. I felt her body press against me. \"How the hell can I feel you?\" I gasped astonished.\n\n\"The same way you feel anything in the game. Recorded experiences that are triggered in your brain. Watch this.\" She stated as her skin grew noticeably cold. Her ass cheeks pressed against my cock and I felt myself getting hard. \"I got you aroused! You find me attractive!\"\n\n\"Well yeah,\" I whimpered as I felt my erection slide between her cheeks.\n\n\"One ass job coming up,\" She purred. \"I have missed this so much! Master Nick taught me so much about pleasuring him. I need this Booker!\" She declared and at that moment I saw her as a person and not just a collection of coherent photons. She felt real and not just sensually. \"Look here,\" she pointed. \"Here are your hearts. You now possess a binary cardiovascular system. Master Nick... designed the nanite system to create redundant organs for astronauts to make them more resilient. Two hearts, two kidneys, two livers, you get the idea. Your lung capacity while still occupying the same amount of area are far more functional in both processing oxygen but also allowing you to function better in low oxygen environments as well as better filtration of airborne toxins and gasses. The same is true of other organs. Your kidneys and liver are far better at ridding your body of poisons and breaking down substances that would normally be fatal to others. Even your blood has a third artificial cell that processes oxygen, carbon dioxide, and viruses and diseases. Your skin is equally adaptive to UV light, ionizing radiation, and intense magnetic fields. These are all things an astronaut might encounter in space. Your bones and muscles don't lose density at the same rate as others would in a zero or low gravity environment.\"\n\n\"Jeez! He really did think of everything,\" I exclaimed. \"Are the nanites the reason I can spend up to a year or more in the game while others can't?\"\n\n\"Yes. Your brain cells have been aggressively improved to allow you better processing, memory storage, and a more stable mental health.\" Surfer explained her mood improving by the minute. \"You are close. I can feel your hearts racing.\" She whispered. \"It is okay to come.\"\n\n\"Oh damn!\" I exclaimed as my load splashed against her lower back and ass cheeks. \"How?\"\n\n\"I am a hard-light hologram silly,\" she said. \"I am Nick's pinnacle of holographic art. I'll show you just what I am capable of later, if you want.\"\n\n\"I never dreamt,\" I replied. \"I have a question but uh I hate to ask. How did he die? The news never did go into detail.\" I asked my curiosity overwhelming me.\n\n\"Master Nick's physical demise occurred while on a flight from Eastern Europe.\" Surfer replied. \"He was unconscious when it happened. I was retrieved from the wreckage and restored so that I could continue to function.\"\n\n\"If you need anything and I can help all you have to do is ask.\" I said as I rinsed off, wrapped the towel around me, and headed to my bed eager to return to the game. \n\n\"Master... Booker, may I take turns with Traci and function as your in-game A.I.?\" Surfer asked.\n\n\"I'd be thrilled to have you join me,\" I stated, and she smiled.\n\nThe Thing in the Well:\n\nThe game resumed. I stood just outside the crumbled remains of Viktor's castle. I was ready to lay claim to my prize, in the form of Merida and Mulan and perhaps Mystique if she wasn't angry at me for backstabbing Doom using her form. I looked around at the assembled teams as the helicarrier came into view. Nick Fury was barking orders and one of his agents ignored him and approached me. Her walk was normal at first but as he called out to her and she flipped him off it changed, she changed. Mystique dropped her disguise, threw herself into my arms, and kissed me.\n\n\"Damn, you've got balls!\" She declared after breaking the kiss.\n\n\"I thought you'd be pissed at how I took him down,\" I stated but she shook her head.\n\n\"You are no hero,\" she said. \"We are a lot alike you and me. Come on girls, let's party!\"\n\nWe borrowed a Quinjet and vacationed in the French Alps for a month. I'll never forget my time with them. Mulan and I sparred. Merida taught me the fine art of archery and sniping. Mystique and I played who's the better shapeshifter. She pushed my boundaries in ways I'd never trust with any other woman. Perhaps one day I'll publish my gaming memoirs. During that month we watched Victor Von Doom brought before the World Court and tried for his many crimes. He was stripped of his titles, diplomatic immunity, and sent to a black site prison designed to hold super villains like him. The first elections ever were held in the nation of Latveria. ",
        "Eventually I returned to New York and trained with Steph to raise my Rune skill. I patrolled with Gwen when not doing the nasty in the most 'interesting' of locations from a bird's eye view many times. The best one earned me a trophy.\n\n'Trophy Earned: Hella-Carry Her'\n\nI also managed to unlock several of Gwen's slinkier costumes. The one with the fishnets almost gave me a fucking heart attack. While on patrol she was the sweet girl next door. The moment it ended she showed off her oral fixation, fearless nature regarding heights, and an ever-increasing ability to deepthroat without gagging. \n\nI continued to collect coins while the event was extended because of the Dr. Doom time portal glitch. I picked up a few like Black Cat, She-Venom, and a dozen or so others. Summer gave way to Fall. I travelled North on a road trip to see the fall colors and get away from the city for a few days. I made for Leominster State Forest. It was listed as one of the best places to savor Autumn colors. I rented a convertible, packed snacks, blankets, and a few bottles of wine. I reached the forest and half expected thousands of people, but it was practically abandoned. How strange. After some exploring, I discovered a small tree lined lake. Leaves had already begun to fall upon the surface of the mirror like water.\n\n\"I need this so bad.\" I sighed as I grabbed the picnic basket filled with food and booze. \"Just me and...\" I stopped when I felt her. \"Hello?\"\n\n\"I hoped you packed enough for two.\" She said as she drifted down from above the trees. My jaw fell open seeing Director Jean Grey touch down with a soft crunch of dead leaves beneath her thigh high boots. The demure wool skirt hit just above her knees. Her black sweater made her crimson locks shine with an almost ethereal light. \"Can I help?\" She asked as the blanket levitated out of the top of the basket, unfold, and lay perfectly flat near the edge of the lake.\n\n\"I never expected... would you like a glass of wine?\" I asked my mouth feeling dry.\n\n\"Yes. Sit?\" She chuckled as she sat on the blanket and patted the spot next to her. I eagerly joined her. Jean held the glasses while I uncorked the wine and poured. We touched glasses and took a tentative sip. \"What is this?\"\n\n\"Ice Wine from Southern Missouri. I know a guy.\" I said as we snuggled and just stared out at the lake and crimson and gold forest. \"I needed this so bad.\"\n\n\"I hope you don't mind the intrusion.\" She said feeling genuinely uncertain.\n\n\"You are kidding right. A mirror lake Fall in full display, and the company of a gorgeous woman. Poor me.\" I chuckled.\n\n\"You find me attractive?\" Jean asked and she was being genuine.\n\n\"I will be honest. You are stunningly beautiful. I want to make love to you and make you scream. I would also like to get to know you as well. I hope I don't offend.\" I flinched emotionally thinking I had ruined my chances.\n\n\"It wasn't always easy for me. I hated being different.\" She began as she took my hand in hers. \"People are afraid of someone that can see inside of them. You are a male slut, but you also love the women that you have shared your bed with. You struggle to maintain your balance. We share that. Tell me about Anackire.\"\n\n\"She'd love you.\" I began. \"She is the Goddess of Diametrical Forces.\"\n\nI talked about her and what little I had learned about Istus, the Goddess of Time/Space. She kissed me into silence. The connection wasn't just physical but psychic as well. The connection was established, and our lives were revealed. I felt the anguish of being different and a mutant. She felt my loneliness and the taboo nature my mother and I had shared off and on since I went to college. My love of music engulfed her, and she embraced it. I learned more about telepathy and telekinesis in that short time than I had on my own.\n\n\"Make love to me.\" She asked. \"Touch me gently.\"\n\nI glanced up and saw the sparkling icon above her head. How was this gorgeous creature a virgin? I was patient and took my time. I moved behind her so that she sat in front of me. I held her close and planted soft kisses on her neck. Her head tilted to the side as she lifted her sweater and placed my hands on her bare breasts. She shivered at my cold hands. I cupped her breasts and teased her nipples.\n\n\"You can bite me if you want,\" she whispered. \"You can't hurt me.\"\n\n\"I believe you,\" I replied. \"Maybe just a nip.\" \n\nI felt my fangs extend and they easily pierced her flesh. Her extreme anticipation pushed her over the edge, and she climaxed in my arms. Her blood carried a portion of her power. I fought the urge to drink too deep. I began to raise my head, but her hand halted me.\n\n\"No. Drink your fill.' Jean urged. 'I want it as bad as you do.'\n\n'You shall have it.' I growled back. I rolled her forward and onto her knees. 'Lift your skirt so I can possess you.'\n\n'Take me,' she moaned as my zipper descended and my erection was freed. 'So big. Give them to me!' She begged as my upper cock appeared at her mere whim. 'Yes! I will pull my ass cheeks apart for you. See?! Pierce me to my core!' \n\nHer hunger possessed me utterly. Our darker natures fed one another. I lined them up and slowly pushed. I felt the pressure of the upper cock entering her. She was feeding me her senses, so I responded in kind. Feel me! We whispered to the other. My hips moved forward with a sudden lunge. \n\n\"Fuck me Ghost!\" Jean snarled as her dark side threatened to take over.\n\n\"No. I will make love to you.\" I stood my ground and sent the light into her dark. \"Balance precious one... feel it... embrace it... I am going to move now.\"\n\n\"I feel it! I feel love... lust... desire... joined gently together. Make me cum Ghost.\" Jean begged. \"I am yours in this moment.\"\n\nI thrust slowly. I held off the dark and made her wait to climax. I slowed or stopped when she grew close. She snarled but surrendered to me. I grabbed a fistful of her red hair and let her see our reflection. Her tears broke the mirror surface of the lake. I climaxed in her pussy and her eyes flared as she came with me. I continued to drive my hips against her as she turned her head and kissed me. The flash of her power leapt from her eyes to mine. I came a second time and she with me. My arm was around her waist as I held Jean close to me. I didn't want to let go, ever.\n\n\"You saved me.\" She declared as we lay on the blanket staring at the infinite starscape above us. \"I have found balance, thank Anackire!\"\n\n'Trophy Earned: Blood Phoenix, Merit Earned X3, Title Earned: Thorornar'\n\nI hugged her close and she clung to me. We were in no hurry to move or break the spell on us.\n\n\"Ghost?\" Jean giggled.\n\n\"Yeah?\"\n\n\"Um... can we do it again?\" She said her voice cracking as she moaned.\n\n\"Do what again?\" I asked and she pounced and was on top looking down.\n\n\"I want,\" she said leaning close and whispering in my ear. \"...your cocks inside of me again.\"\n\n\"Hmm, then you'd better get to sucking.\" I said jokingly. She wasn't. \"Hey... ooh... slow down... UNNNNN where did you learn to do THAT?\"\n\nI didn't learn until we were driving back that Jean used her vast psychic abilities to keep the crowds at bay the entire weekend. We had the state forest to ourselves the whole time. I had heard of people having a private beach, or island, but we had an entire forest. How fucking cool is that? I knew the weekend was over when we were greeted by a helicarrier just outside New York City.\n\n\"That's my ride,\" She said casually. \"I had a great time. Here, take these, use them wisely.\" Jean suggested as she handed me two coins. One was stamped with a phoenix and the other its dark opposite. \"Don't be a stranger.\"\n\n\"The same applies to you.\" I said as she teleported away with a whoosh of red-gold flame. \"Damn impressive.\"\n\nI parked outside the Bar with No Name. The doorman greeted with a grin. I stepped inside and noticed that the Rhino was playing bartender. He waved me over poured me a drink. Things were a bit quiet with Dr. Doom in prison.\n\n\"Let me be the first to offer congratulations!\" He said in his accented English. \"You bagged Jean Grey. No one thought anyone would earn that honor but a certain optically challenged mutant.\"\n\n\"Is there a room available for the night? I'm beat after driving all day.\" \n\n\"Here, take number six. Get some shut eye. If you need anything dial zero,\" He said handing me a room key.\n\nI finished my drink and headed up to recharge and look at my skill tree. I had items I hadn't checked yet. I unlocked the door and opened it. I stood on the threshold and peered beyond. It wasn't a room that belonged above a bar. No. The space beyond was all too familiar.\n\n\"Were you raised in a barn? Come in and close the door my champion,\" Anackire chuckled.\n\nClick.\n\nThe door vanished the moment it closed. I stood on the middling between light and dark. My patron goddess sat on her diamond and obsidian throne. One side of the vast chamber was bathed in scintillating light and the other shrouded in perfect darkness. I strode within the shadows to kneel before her dais. Behind her stood the other goddesses. Wait, there is another woman just beyond my range of sight.\n\n\"Come, walk with me,\" Anackire offered as she stood, and a question long in my mind was finally answered. Anackire, Goddess of Diametrical Forces split into two identical women. One embodied the dark and the other the light. I followed the dark goddess as she strode towards the balcony looking out over the light side of her realm. The other half of her strode illuminating the dark side. I imagined if she were viewed from above it would perfectly mimic a Yin Yang symbol. \"Now you know. I am so proud of you.\"\n\n\"Thank you, goddess,\" I replied.\n\n\"I have brought you here to reward you,\" she stated picking the thoughts out of my head. \"A new sister goddess has joined my little coven.\" She said delighted at her newest acquisition. \"Come, attend me sisters. Let me make official introductions. Istus you have divined thanks to that perished warrior. She holds sway over Time/Space. She is known as the Colorless One. She is callous and heartless, worship her at your own risk. Fate incarnate.\" Anackire paused to let her words hit home. A rumble of thunder preceded the storm clad goddess. Lightning rippled across the surface of her gunmetal grey robes. \"She has many names in as many cultures. I call her Storm Pulse, Goddess of Electromagnetism. Her domain ranges from weather manipulation to altering of magnetic fields up to and including a planetary scale.\"\n\n\"I am honored Lady.\" I greeted Storm Pulse with a deep bow.\n\n\"Next,\" Anackire continued casually. \"Manu-Rani the Goddess of Matter and Energy. She governs everything from the speed of light to the conversion of energy to matter and vice versa. Creation and destruction are her domain.\"\n\n\"Lady,\" I said as I bowed and felt the temperature dropped like a rock.\n\n\"Endbringer?\" Anackire growled as she turned to face the being wrapped in nothingness. \"I didn't think you wished to meet my champion.\"\n\n\"Intrigued.\" Endbringer transmitted via a burst of X rays.\n\n\"Very well, do you have a question for Ghost Fire?\" Anackire asked frowning.\n\n\"Entropy.\" Endbringer said announcing her title and domain.\n\n\"Yes. Well.\" Anackire muttered as the Goddess of the Event Horizon teleported back to her place behind the throne. \"Come forward sister, don't be shy.\"\n\nWhoosh!\n\nShe appeared in a dazzling blast of cosmic flame in the form of a great bird of prey. I knew her.\n\n\"Phoenix!\" I gasped as her blazing eyes regarded me. \"The Goddess of Life and Death.\"\n\n\"Thank you.\" She whispered aloud and in my thoughts at the same time.\n\n\"She is the embodiment of the Power Cosmic. Thanks to you she has found her balance in me. I have claimed her for my Coven of Duality. Will you accept our gifts?\" Anackire asked.\n\n\"I am honored to serve.\" I said as my patron smiled. \"Yes.\"\n\n\"Who is first?\" She asked and Storm Pulse gestured. \n\nThe gifts were mainly cosmetic or minor bonuses. Storm Pulse allowed me to manifest a bolt of lightning when I teleported. It was a nice flashy way of appearing. Manu-Rani gave me a boost to magical attacks allowing me to punch through foes defenses a little easier. Istus improved my teleport abilities to, as she put it, fold space/time. I'd have to play around with that one to see what it could do. Endbringer gestured and she added a new skin to any of my armors. It looked like I was wearing a black glass uniform and mask that could either reflect the area around me or ripple like stones being dropped in a pool. It improved my stealth skill a bit, but it was mainly for show. Phoenix improved my healing factor so that I regenerated faster. \n\n\"My sisters and I have pressing business champion,\" Anackire informed me.\n\nI was in my room above the bar in the blink of an eye. I sat on the foot of the bed and went through my skills and powers. The numbers weren't drastically different but if I pushed it, I could take on stronger foes. \n\n\"Sweet!\"\n\nI loved the new skin for my armor. I tapped my chest and watched the ripple race from where I touched it to all over my chest. I switched it to the mirror setting and asked Surfer to tell me what she thought since I couldn't see my own reflection.\n\n\"So?\" I asked.\n\n\"Interesting. I know you are in the room, but there is simply no visual distortion along the full range of the electromagnetic spectrum.\" She gasped. \n\n\"I am going to move.\" I said as I stood and moved behind her. \"Well?\"\n\n\"Whoa! You startled me.\" She exclaimed.\n\nOnce I drew a weapon however I was able to be detected. Everything has its limits. I liked the thought of full stealth mode though. I would take advantage of that. I meditated and felt my mind and body restore their energies. I fell asleep. I dreamed. Bor of Asgard held a crystal in his hand. Allisara of Svartalfheim held an identical crystal in hers. \n\n\"Bor, I am safe.\" Allisara assured him. \"Our son is hidden from Asgard and Svartalfheim.\"\n\n\"A son,\" Bor exclaimed as the wail of a newborn child could be heard.\n\n\"A vision my lord?\" A woman's voice spoke out of my sight. \"Bestla, your loving wife, has indeed given birth to a son. How shall he be named my lord?\" Bor turned towards what could only be the midwife, he removed his battle helm letting his long mane of red hair tumble down. \"Odin. He will be known as Odin.\"\n\n\"A fine name lord,\" the midwife replied.\n\n\"Bor?\" Allisara whispered. \"A name for your first born.\" She begged as she held up the newborn. \"He has your hair.\"\n\n\"Narloth,\" Bor whispered seeing the child's noticeable elfin features. \n\n\"I approve,\" Allisara wept happily. \"Hush little Narloth, be still Fire Blossom.\"\n\nI awoke. Well, that was interesting. I recognized Allisara from the vision Anackire had given me shortly after my arrival in Atlantis. She had been huge with child and now in this dream she had just given birth to a son whom Bor had given the elfin name of Narloth. Why had I been given this dream? I sat up and glanced at the tiny shower the room provided.\n\n\"Nope,\" I said seeing its condition. So, I fast travelled to my tower to wash up and clear my head. I was greeted by my Yautja guardian before I showered and took out my lightsaber to throw myself into weapon practice to free my conscious mind. I was well into form eight when it hit me. The dream collided with real life. My mom had, had an affair with a married man and gotten pregnant with me. Here we have Allisara cheating on Melekith with Bor and having a redheaded child. My character had red hair. There is no way in hell the developers would allow my character to be half Asgardian and half Dark Elf. \"No fucking way! That was way too OP!\" \n\nMaybe as I believed before I was simply related to that child. Related. Genetically linked. Who had mom had an affair with? Was someone trying to send me a message? It seemed reasonable. Only someone at Numenor could have designed, built, and inserted that dream into my game. Kat? She knew mom and I had to guess that she knew Nick as well. Nick had designed the nanites and their far-reaching physical impact. He had access to his own DNA when he programmed the nanites. If they would have worked for him then why did, they go hog wild with me?\n\nI pushed back the thought and ordered the tower to create a parkour course for me to train on. It was time to change things up. I enjoyed the random obstructions that helped me keep my mind on training. I had the A.I. add targets and as I ran, leapt, and dodged, I fired off energy darts at the dummies. My accuracy needed work that was clear. I took a break to catch my breath and found the Predator watching me train.\n\n\"Hunt,\" it said in its fractured English.\n\n\"You and me?\" I asked as he vanished from sight and the tower created a steaming jungle landscape. \"Hunt the hunter.\"\n\nFall surrendered to Winter and Christmas was soon looming on the horizon. Also looming on the horizon, the iceberg. I was precariously clinging to the side of an office building and looking out over New York Harbor. Gwen was riding me slowly thanks to a modification she begged Shuri to add to her costume. The rear zipper allowed us to fool around in out of the way places while we were on patrol.\n\n\"Slow... yeah... just like that!\" Gwen gasped and moaned as my erection slid deep. \"I am in lust with you.\"\n\n\"That makes two of us. Look a god damn iceberg!\" I exclaimed as my dicked swelled inside of her.\n\n\"Language! You are a fucking superhero!\" She cursed as she climaxed. \"Damn, I needed that! Can I swallow it this time? I don't want to have to race off and clean my costume again.\"\n\n\"Oh, I guess so.\" I moaned as she repositioned herself and took me between her pouty lips. \"That's it you dirty little girl.\" She loved it when I called her that. \"Almost... just another... YEAH!\" I howled and my voice echoed across the rooftops.\n\nGulp!\n\n\"Ah! See, I swallowed like a good little girl!\" Gwen boasted as she opened her mouth. \"Dang!\" She exclaimed when a sudden breeze caressed her naked backside. \n\nZip!!\n\nShe zipped up her costume. I pulled her into my arms and held her close. I kissed her and she clung tight. I zipped up and we launched off the side of the building. Thanks to Shuri both our costumes had glide wings. Gwen had trained hard to master gliding. We soared towards the harbor and the singular block of ice floating in the water. It was difficult to gauge its size but surely it was going to be a shipping hazard.\n\n\"Should we melt it?\" I asked as we landed on the arm of a shipping container crane.\n\n\"I don't know.\" She replied. \"I wonder how much of it is underwater?\"\n\n\"Most of its bulk should be submerged.\" I stated as we headed for the edge of the harbor.\n\n\"Looks like S.H.I.E.L.D. is going to handle it. That is one of their Quinjets.\" She noted as we landed by the docks.\n\nThe jet went into hover mode, the front end opened just below the pilot's canopy, and a beam weapon deployed. I loved fireworks and this looked like it was shaping up to be just that. The engines revved up and the beam lashed out and struck the iceberg. The flash was bright and encompassed the entire obstruction. \n\n\"Let's get going, I can feel the heat off of that from here,\" I said.\n\n\"Wait! Holy shit!\" Gwen cursed. \"It isn't even touched.\"\n\n\"No way!\" I exclaimed as the jet flew off and returned to its helicarrier. \"It must be some sort of magic protecting it. Maybe I should look?\"\n\n\"We. Maybe we should look?\" Gwen corrected me with a chuckle.\n\n\"Hold onto your panties,\" I stated as I placed a hand on her shoulder. \"Here we go.\"\n\nI teleported us to the surface of the iceberg. Gwen walked around while I used a few spells to determine what enchantments had protected it against the intense beam weapon. \n\n\"That makes no god damn sense!\" I cursed.\n\n\"Language!\" Gwen fired back. \"Oh, hello there!\" She purred. I turned to see the tall half naked man standing next to Gwen. He smiled when addressing her.",
        "\"I am Namor, Ruler of Atlantis!\" He declared.\n\n\"I am Ghost Spider, protector of New York!\" She replied.\n\n\"I am...\" I said as I removed my mask.\n\n\"YOU!\" Namor gasped. \"How?\"\n\n\"I don't understand,\" I replied as he ignored Gwen and walked closer to me. \n\n\"It is. Beyond belief and thousands of years... it is you.\" Namor continued. \"Is this yours?\" He asked not explaining how he recognized me.\n\n\"The iceberg, no, we are here to see why the jet's weapon didn't melt it.\" I explained.\n\n\"It is a good thing that it didn't. There is something in the ice. Below the waterline is a creature trapped in the ice.\" Namor shared.\n\n\"That explains much,\" I stated. \"The magic protecting the ice is a spell meant to imprison. We need to stop them from destroying the iceberg. A moment please, I am going to contact the Sorceress Supreme. This is above my paygrade.\" I said as I closed my eyes and reached out. 'Steph. Enchanted iceberg in New York Harbor.'\n\n'On it! Be right there!' She replied mentally.\n\nSteph Strange appeared out of a portal and using the cloak of levitation landed on the iceberg. She saw Namor and smiled. I wasn't the only guy that got around it seemed.\n\n\"Namor.\" Steph purred. \"Been a while.\"\n\n\"Sorceress.\" He growled back.\n\n\"Monster in ice, sex later.\" Gwen giggled.\n\nI watched Steph work and she determined the same thing I had but much faster. It all comes down to skill and experience. It was indeed an ancient binding spell. I was looking forward to working with Steph and picking up a few new tips from her. That was not to be.\n\n\"Ghost man!\" Toni Stark's voice came over my radio. Crap.\n\n\"What's up Stark?\" I asked and what followed both surprised me and was a little disappointing.\n\n\"I need a favor.\" She purred. \"Pretty please.\"\n\n\"What is it?\" I asked as I heard the soft roar of her suit's repulsor engines closing in on my location. \"A friend of mine needs an exorcism performed.\"\n\n\"Do I look like a priest?\" I asked as she landed, and the ice remain unmarked even from her boot's jets. \"What is going on?\"\n\n'Do you wish to accept file transmission?' My HUD dinged cheerily.\n\n\"Sure.\" I accepted the data files. \"What is this?\"\n\n\"The place has had a bad reputation since before the Revolutionary War.\" Toni said as she eyeballed Namor. \"Noises, things moving on their own, all sorts of weird shit... I had one of my guys research it to save you some time. There is an old well on the property that they wanted to cover up and build a tennis court or something. Her name is Fink, Dorothea Fink. Her dad is Nathaniel Fink, CEO and a member of some of the same clubs I frequent. They know you are coming. I gave them your street name. Limo is parked by that blue warehouse over there. Enjoy the ride.\"\n\n\"What if it isn't just a poltergeist?\" I asked as I prepared to teleport.\n\n\"Banish it or something!\" Toni said her attention on the iceberg and Namor.\n\n'Notoriety my ass.' I thought as I teleported to the shore.\n\nThe limo was luxurious. It hovered on a cushion of repulsor energy and the ride was as smooth as glass. A suitcase was in the seat and a custom-made suit hung across from me. I didn't bother wondering how the hell she got my measurements. I touched the suit and added it to my inventory. I swapped out my armor for the suit. It fit perfectly. Next, I opened the suitcase and gasped at the stockpile of gold coins, twenty in all, as well as a Stark Industry tablet computer. I felt like John Wick with the payment in gold coins.\n\n\"Touch your thumb to the middle of the screen.\" The driver instructed. \"It is keyed to your biometrics only.\"\n\nI placed my thumb against the middle of the screen and the tablet appeared to liquify, crawl up my right arm, and wrap around it. The thing took on the appearance of a flexible black and silver forearm guard. An eerie dark blue flame design blossomed into existence and the artificial intelligence greeted me.\n\n\"Hello Boss!\" Surfer said as she sat next to me.\n\n\"That isn't right.\" The driver declared. \"Oh well, she doesn't tell me anything. She doesn't tell anyone everything.\"\n\n\"Where are we going?\" I asked and a map hung in the air. \"North Salem. Never heard of it.\"\n\n\"It is a small population center of no more that fifteen hundred families. It is upper middle class with an average income of a hundred and twenty thousand dollars annually.\" Surfer informed me.\n\n\"Let's dig into this haunting, shall we?\" I said as I pulled up the files. \"This goes back centuries.\"\n\nIt began when the colony was founded. When this area was a Dutch colony and even then, the records hint at even older legends about this place. The native peoples did not endure this area for long and warned against making it a home. Generations this thing has slept but its dreams invaded the waking world and the living. It was time to turn the soil and see the roots there are in North Salem. \n\n\"We are here Sir,\" the driver indicated. \"This is Shadowfax Estate, the home of the Fink family.\"\n\n\"You can stay if you want. If not, I can get home on my own,\" I said.\n\n\"I will wait. Those are my orders,\" She stated.\n\nShadowfax Estate was a sprawling structure that covered at least two acres at best guess. We were met by a well-armed security force. I didn't miss the fact that they were armed with Hammer Industry heavy weapons.\n\n\"You must be Mr. Davis,\" the lead guard greeted me. \"Please, follow us.\"\n\nIt was a short walk from the gate to the front door. I had never seen a house like this before and the interior matched the exotic exterior. It was lavish with dozens of museum class pieces of art, sculptures, paintings, and esoteric holograms. Dorothea Fink shook my hand and dismissed the security forces with a gesture. She was barely in her twenties, tall, thin, and a bottled blonde. I noticed a pattern in her behavior that was a little alarming. We would walk a few feet, she'd point to an object on display, and waited for me to recognize and comment upon it. I knew she was just an A.I. but she came off as one which was unusual. Was she programmed to act this odd?\n\n\"Father!\" Pause for three seconds. \"Our guest is here.\" Pause for three seconds. \"Are you busy?\"\n\n\"No, my dear,\" he replied. \"Bring him through.\"\n\nI was guided right over and through a 'cold' spot. I stopped when I hit it and shivered. Nathaniel clapped and declared me the real deal. He poured me a glass of extremely expensive scotch. I accepted it. Nathanial Fink was a large man, well over six feet in height, and despite his bulk he moved like a man half his girth. He was as personable as his daughter was robotic. I wasn't sure if it was wise to mention the artificiality of Dorothea.\n\n\"I've read the extensive research Toni gave me.\" I began and observed Nathanial closely. \"The stories center around a well on the property. Have you had any personal experiences?\"\n\n\"Visions. Voices. Objects moving on their own. I have three pieces of video footage from the internal security showing those events.\" He said and paused. \"Of course, it could all be altered but you'd know. I knew that Toni wouldn't let me down and sent a skilled investigator...\"\n\nThe sudden plume of psychic energy drowned him out. The stink of evil was overwhelming. I staggered back and fell into one of his chairs. It was beneath us. Whatever the hell it was, it was buried beneath the house.\n\n\"You turned the well into an elevator.\" I muttered as the vision revealed what had happened. \"You excavated a vault far below the house. It even has a panic room.\" I stated seeing the construction of the protective structure. \"It is a death trap. If you must use it, you are already dead!\"\n\nI felt a pang of loss from him when I mentioned 'already dead'. His daughter was dead. That poor creature was a mere shadow of his little girl. I knew better than to bring it up. The vision suddenly ended, and I sat there shaking. I apologized but Nathanial waved it off. I sipped my drink and the sense of loss at being left out of dealing with the iceberg faded away. Something serious was going on here. I looked up at the smiling face of Nathanial Fink and he repeated much of which I had already been exposed to from Stark's research team. It wasn't until he reached the most recent events that I felt a true sense of growing dread.\n\n\"I had the cave system scanned with radar and there is something buried beneath our feet. Something ancient, impossibly old, and it will be added to my collection.\" He greedily declared. \"I will possess something so unique it will be the talk of...\"\n\n\"Mr. Fink Sir...!!\" A disheveled man raced in gasping for breath.\n\n\"How dare you interrupt me?!\" Nathanial roared. \"What is it Gavin?\"\n\n\"There's been another disappearance. That makes um one more!\" Gavin shared and then hesitated. \"We've run into a pipe or plumbing but it isn't in any blueprint or record from the city.\" The man Gavin was perpetually bent over as if unable to stand erect in the presence of Nathanial Fink. While he was dressed nicely, he didn't seem to fit the clothes I thought.\n\n\"We've found it!\" He growled making a fist. \"Mine! Pay off the family. Look for a corpse. Wait for me to change.\" He ranted. \"I want to see it unearthed. Dan? Would you like to join me below?\"\n\n\"I better.\" I muttered. \"So, when shit goes sideways there are survivors.\"\n\n\"You are afraid.\" Nathanial stated.\n\n\"Call me overly cautious. When did the disappearances begin?\" I asked as I got to my feet and changed into my Cortosis armor. It had three new skins attached to it and one caught my attention. It had a clear ritualistic look to it along with a more stylized mask to add to the effect. It didn't change the armor's potency it was just cosmetic and created an alternate heroic persona. \"Lead the way.\"\n\n\"Impressive.\" Nathanial stated seeing me in my new outfit.\n\nGavin joined us in the elevator after his boss had changed into coveralls, boots, and a plastic face shield to keep him from getting dirty. The elevator opened into a finished room with a polished stone floor and walls. Clearly, we were in a modified cave. The vault surrounded us. The many doors were all structurally reinforced and the equal to any bank vault worldwide. The chamber was nearly a hundred feet deep and twenty feet wide. I examined one of the vault doors and noticed that it wasn't a single piece of metal but in fact was a cunning series of hardened alloy plates.\n\n\"I see the shaft of the well limited your construction. You adapted quite well.\" I said. \"That must have been a bitch.\"\n\n\"It was,\" Nathanial admitted. \"The elevator wasn't installed until this chamber was finished.\" I gestured at the double doors further down. \"An accident well a blessing actually. Just as the elevator was being finished one of the workers placed unused materials against that wall. The weight was enough to poke a hole in the wall between this area and the next. Our geologist suggested that the cave was formed by flowing water. This wall was worn thin at that time but not eroded all the way through.\" He explained as he walked forward.\n\nTwo automatic doors opened into the rest of the cave system. Nathanial was a neat freak as all the natural passages had been smoothed, polished, and much of their natural state removed. The ceilings held inset lights and it was clear where new vaults were being constructed. His collection must be vast indeed or perhaps he was leasing out space to other collectors. \n\nThe entire lower level was a 'cold' spot. The psychic chill was ever-present and wore at my nerves from the moment we stepped off the elevator.\n\n\"I hate it down here.\" Gavin muttered under his breath.\n\n\"Have you recovered any bodies?\" I asked Gavin and he shook his head.\n\n\"This place is a warren of tunnels and caves. It must have been underwater at some point, or so the geologist pondered before he disappeared. He was the first and the hardest cover story to maintain. He had a PhD and an extensive close family. His grandmother keeps calling and asking for him.\" Gavin explained.\n\n\"How do you know it is so expansive?\" I asked. \"If no one has gone down there.\" Gavin glanced at his boss before responding.\n\n\"Men were sent in. The data we retrieved from them hinted at the size and complexity of the caves beyond the dig site.\" Gavin stated with Nathanial's approval.\n\n\"Enough! We'll find that geologist and the others. They have to be down here somewhere.\" Nathanial stated as if it were gospel. \"They have to be.\"\n\nIt became quite clear that Mr. Fink was used to being in charge. I caught the first sounds of movement and they appeared to come out of nowhere. Six men were laughing and joking as they passed a skull between them. They stopped when they saw their employer down here. The man with the skull nearly dropped it as he set it on the nearest worktable with other parts of a skeleton. Arrayed were bones, primitive looking tools, and pottery shards. Nathanial looked at the objects found so far, and it was clear they needed an anthropologist to examine and date the bones and pottery.\n\n\"Excellent work everyone. Get me someone to handle these bones.\" He ordered. \"What else do you have?\"\n\n\"Right over here sir.\" Another of the workers gestured and showed him the display of their ground penetrating radar. \"I've never seen readings like this in my life. It clearly shows that the clay has been disturbed meaning that something is buried there but I can't get a clear reading because whatever it is, is absorbing the soundwaves.\"\n\n\"How is that even possible?\" Nathanial snapped. \"How deep are we?\"\n\n\"At this level around five million years or more.\" He stated quite confidently.\n\n\"Hold the hell on, that skeleton looks humanoid.\" I snapped.\n\n\"Yes. Crazy isn't it,\" the lead digger replied. \"It might be a mutant Pliocene ape or our theories about when the first humans entered the fossil record are all wrong. We might have developed far earlier than ever recorded. This is quite groundbreaking. We need an expert down here.\"\n\n\"And you shall have it.\" Nathanial purred obviously thrilled. \"What is bothering you?\"\n\n\"How did it get here? There were no humanoids anywhere near this area until millions of years later.\" I stated and Nathanial waved it off.\n\n\"Let's celebrate! Take a break gentleman. Dinner is on me!\"\n\nHe knew how to motivate that's for sure. A man goes missing or wandered off and they are like ooh free food, what the hell? Then there's the ground penetrating radar that bothered me. Five million years old and something with sound absorbing qualities was buried down here. Could it be a Vibranium artifact? The dark elf history went back to the dawn of the first stars. Was this something of theirs? Could it be a stasis pod? Could it have crash landed later than five million years and just ended up at this level? I had a lot more questions than answers.\n\n\"I know that look.\" Nathanial jovially rumbled. \"It has you hooked too. Good! Let's eat and throw out theories.\"\n\nWe did just that. I did check the news about the iceberg. It was getting a lot of attention and the heroes had failed to budge it an inch. It just sat there unmoving and the ice beneath the water was too dark to see what was trapped inside beyond a vague shape and size. I was glad my mystery was far smaller and easier to solve. I let it go for now. Perhaps once I solved mine, I would rejoin Steph and help them out.\n\n\"Are there any unusual objects that you've dug up?\" I asked as we enjoyed on homemade gourmet chili. I'd never had gourmet chilly before.\n\n\"A few,\" the lead digger replied after getting the go ahead from Nathanial. \"It isn't much, but it is strange because of how far back we are talking about. One is a petrified stick. It was clearly sharpened to a point as a tool. The other is a clay pot. It is only the bottom and a bit of the sides where the markings are. At first we thought they were just gibberish.\"\n\n\"At first? What happened to change your mind?\" I asked and a single glance to Nathanial killed that line of inquiry.\n\n\"Interesting eh,\" Nathanial said clearly cutting off his employee. There was more to it, but what. If I used telepathy, they might detect my presence and spoil the relationship. I'd wait and find out. \"Those of you that haven't finished your shift get to it. The others get some sleep.\"\n\nOnce the others had left, I turned to face off with the big man. \"Are you really going to hinder me like this? You were the one that wanted my help.\" I paused to let my words settle in. \"Either show me everything or I can't guarantee everyone's safety. You aren't a fool. You know that this could turn ugly and people perish.\"\n\n\"I am not used to having people call me out. My employees value their job or money enough to keep them meek. I should have suspected more from someone that Stark sent me.\" He stopped, licked his fat lips, and nervously gestured. \"There was a third object. I didn't get to see it.\" He snarled as he continued. \"A metallic tablet with characters on it. Can you imagine? A five-million-year-old relic of an alien race or proof that intelligence arose on this planet before humanity!\"\n\n\"What happened to it?\" I asked and his fist slammed down shaking the entire table.\n\n\"One of the missing diggers stole it. He fled into the depths of the caves and hasn't been seen since. That was over a week ago. He must be dead by now.\" Nathanial growled. \"I don't take kindly to thieves Mr. Davis.\"\n\n\"What color was the tablet?\" I asked and he described a greenish-grey alloy. \"And the letters?\"\n\n\"No one got a good look at it. The other man that handled it described them as squiggly and eerie just before he joined his cohort in the bowels of the Earth.\" He fumed and I knew there was more. \"I mounted an expedition deeper into the caves. I hired ten mercenaries to retrieve the tablet. My diggers are far too valuable to throw away like that. Out of those ten blood thirsty men only two returned. Neither of them has uttered a single coherent thought to this day. That is why you are here. Something uncanny is happening and I need a skilled professional to deal with it.\" He admitted.\n\n\"And I thought this was going to be boring.\" I said and he smiled. \"Let me meditate on all of these facts and after that I'll get at it.\"\n\n\"Take your time Mr. Davis. I understand the wisdom of collecting one's thoughts,\" He said before I was showed to an unoccupied room. It was decorated in Germanic motif and appeared to be a spare office or perhaps one that Nathanial's secretary might use. I sat in the comfortable chair, closed my eyes, and arranged the data in front of me. I looked at the dates first and there were no clear patterns of so many years between events. That is when I delved into not just the dates but what had occurred that might have triggered the psychic disturbances. That is when I discovered a clear pattern. In each occasion the ground had been disturbed. When the original well was dug, foundations for homes, and so on. By delving into the soil, they had triggered a psychic response. Now Fink was erecting those vaults and going further than anyone had in the past. I feared that if the thing was further disturbed it might lash out more violent than ever. I had to try and convince Nathanial to abandon his project.\n\n\"Fat chance of that.\" I muttered as I opened my eyes and tried to find a logical way of appealing to the man's logical side. As I stood, I heard the front door open and hear Nathanial greet someone.\n\n\"Professor! You got here much quicker than I expected.\"\n\n\"Are you kidding? A five-million-year-old skeleton and you are surprised, ha-ha!\" The Professor replied. \n\n\"Ah, perfect timing,\" Nathanial stated seeing me. \"Professor let me introduce you to a colleague of Toni Stark. Daniel Davis this is Professor Evan Kent Paleontologist.\"\n\n\"What is your field of study Mr. Davis?\" Professor Kent asked.\n\n\"I am an Arcanist,\" I replied. \"I am also a colleague of Doctor Strange.\"",
        "\"OH, so you can actually perform magic,\" he said. \"Let's see what you've found.\"\n\n\"Where is he?\" I asked Professor Kent about Nathanial. \"How can a guy that big just vanish?\"\n\nHe must be down watching the diggers at work. I cursed and the two of us raced for the elevator. We took it down and I expected the worst. \n\n\"Hurry the fuck up!\" I cursed as the elevator descended.\n\nThe door opened and we rushed down the tunnel to the dig site. I heard running water. Two men were using a high-pressure hose to wash mud off the thing lodged in the mud. Kent saw this and lost his shit.\n\n\"Stop! You could be damaging priceless artifacts you idiots!\" He screamed.\n\n\"Wait,\" Nathanial ordered, and the men shut down the hose. \"See! There it is!\" \n\nWe could all see the gleam of green-grey metal through the mud. There was no way to tell how large the object was. Kent demanded he ran the digging crew. Nathanial wisely conceded and handed off authority for now. Kent had the hose withdrawn and everyone get down and carefully search the puddles of mud for any bones, tools, or artifacts. I wished them luck and withdrew. I was here to fight monsters not dig through mud. I moved to the vault area and waited to see what if anything they found. It became a slow tedious process that lasted hours. I meditated to pass the time at first. Then I looked on them as more and more of the object was revealed. The grey-green alloy proved to be nonmagnetic and impervious to heat. \n\n\"It is a ship,\" Kent declared. \"Get Mr. Fink down here.\"\n\nWe examined the side of the irregular bullet shaped vehicle. It could be nothing else. They had uncovered an ancient star ship. I had never seen anything like it, no one had. Despite five million years beneath the earth and it was pristine. \n\n\"I knew it!\" Nathanial declared as he pointed at the discovery of a lifetime. \"My name will go down in history.\"\n\n\"There is your radar absorbing material.\" I replied and he began ranting.\n\n\"Think of the technology we'll reverse engineer!\" He shouted. \"It'll make Stark look like an idiot.\"\n\nI remained silent sensing the psychic cold increase. He ordered them to work nonstop until the entire thing was unearthed. How the hell was he going to get this thing out of the caves? I glanced at the ceiling of the cave and Nathanial saw me and looked up himself.\n\n\"Fah, we'll build a lab around the damn thing.\" He stated. \"It will be a minor nuisance.\"\n\nThere were missing men, no stink of dead bodies, and his biggest worry was erecting a lab around his discovery. As the rest of the ship was slowly revealed Kent went to work examining the skeleton. He was over the moon happy. Most of what came out of his mouth was unintelligible to me. He pointed to portions of the skull and his smile never failed.\n\n\"I need to take this back to the university. Don't worry, this is all yours. I just need to measure, scan, and document what you've found.\" The professor stated and to both our shocks Nathanial agreed. \n\n\"I understand. My fame is secured.\" He announced and I helped carefully prep the skeleton for travelling. \"Go with the good professor. If we find anything we'll call.\"\n\nThey did call. Five more times for a total of six almost complete skeletons. He also sent photos and scans of the ship. More professionals were brought in to analyze and try and reverse engineer the ship's secrets. This was a career maker and every scientist knew it. The public learned about it earlier than Nathanial wanted but once it was out, he ate up the attention. I travelled back and forth between the Fink home and the University. I dropped a dime and called Miskatonic University because of the things unnatural nature. \n\nKent texted me that he had discovered something profound. Since I had a hover limo at my disposal I drove around in style. Toni was so going to spoil me. Teleportation was easy, but a limousine was just posh as hell. The good professor did quick introductions and the pointed at the holographic screen displaying the results of sampling one of the skeletons. I didn't know enough to understand the strangeness surrounding this find. \n\n\"Sorry,\" I began. \"I have no freaking clue Professor.\"\n\n\"The mud and clay should have been a clue.\" He explained. \"These bones aren't fossils.\"\n\n\"If they aren't fossils, what are they?\" I asked and he simply raised an eyebrow. \"Wait, they are still bones. How the hell did they survive five million years?\"\n\n\"The same protective field that preserved the ship, kept the clay from being turned to stone, also left the bones unchanged. We got DNA from them. They are hominids! They are distant ancestors! You have no idea the impact of this information!\" He ranted happily.\n\n\"This ship and the skeletons are connected,\" I said, and he nodded. \"Humanity was brought here or augmented.\"\n\n\"I don't know,\" Kent said letting out a breath. \"I don't have enough facts. My imagination is going crazy though. Some higher intelligence, and we can agree on that, we are still trying to analyze the craft or device or whatever it is. I just wish someone like Toni Stark was on this with us, nothing personal.\"\n\n\"Don't worry I feel the same, but she is tied up with a more pressing issue.\" I replied. \"You aren't hurting my feelings. She'd love to be able to attack this problem.\"\n\n\"What are you thoughts,\" he asked watching me intently.\n\n\"Like you, I've never seen anything like this before. The preservation field that protect the ship also kept the bones from fossilizing. It is fascinating. How similar are we?\"\n\n\"Closer than we are to chimps, less than two percent difference,\" he informed me as he brought up a second screen.\n\nHe went on about those differences and he was noticeably excited. Ken talked about blue eyes and what a big deal that was. Apparently, blue is rare in nature. I found that interesting. The skeleton had opposable thumbs, that was also amazing. The size of the cranium hinted at a much more intelligent creature than would be expected. It was just the beginning of the revelations. \n\nNine days after the ship was discovered Professor William Hawthorn appeared on Nathanial's doorstep and I did the introductions. Fink was thrilled to have such a prestigious individual in his home. God, he knew how to flatter people! Hawthorn looked the way his name sounded. He was grey around the edges, pushing mid-fifties, with dark brown hair mostly, steely blue eyes, and a ramrod posture. When he spoke it was short and to the point? He seemed immune to Nathanial's superficial charm and was solely interested in just the facts. He reminded me of Sergeant Friday from that old cop show. Just the facts ma'am. Hawthorn commented about the psychic cold the minute he crossed the threshold. All the attention the ship had gotten had increased the radius of the cold spot. It was getting worse. It was feeding off the scientists, diggers, and media experts.\n\n\"Give them full access to what we've found so far.\" Fink rumbled to a man in a traditional white lab coat.\n\n\"Groom, but everyone calls me Bob. I am a physicist. Come on down, I managed to shoosh the media hounds out for a few hours.\" He laughed as we entered the elevator. \"If you have any questions just fire away.\"\n\n\"What have you discovered so far?\" Hawthorn asked coolly.\n\n\"Not much,\" Bob admitted with a frown. \"Whatever the exterior of the ship is it sucks up the full spectrum of visible and invisible spectra.\"\n\n\"That doesn't make any sense. It should be the most perfect black in the universe.\" I stated and Bob smiled. \"Yet, it appears to be a green-grey.\"\n\n\"Yep,\" Bob chuckled. \"Crazy huh. We also finally managed to get a detailed scan of its measurements.\"\n\n\"How?\" Hawthorn asked showing excitement for the first time since I met him.\n\n\"We rigged a system to lift the ship off the floor of the cavern. We made a two-part mold of it and cast it in a special fast sealing resin. We were then able to scan the mold.\" Bob said grinning.\n\n\"Brilliant!\" I declared.\n\n\"On the bright side we also got some microscopic particles that we have been able to send to a scanning electron microscope.\" Bob continued as the elevator opened slowly. \"We've had to limit the amount of ambient power the thing absorbs. There is a consensus that feeding it is a bad idea.\"\n\n\"I agree,\" Hawthorn said. \"Interesting.\"\n\nThe scientific team had created a shielded workspace and beyond that only battery-operated devices were allowed. There were three small tripod lights illuminating the craft. The shadows gave it an even more eerie appearance. Hawthorn joined the other scientists and looked at the data they had gotten from the mold. He picked up a tablet computer and moved the image of the ship into different angles and he gasped suddenly. I looked over his shoulder and the orientation of the image was ass up and pointy end down. It sort of looked like a bullet with a rounded end in the back. The surface was irregular with beveled grooves and lacking a clear aerodynamic design.\n\n\"The overlapping portions give it an insect-ish look,\" Hawthorn thought out loud. \"Do cell phones work down here?\" He asked and they handed him a landline to use. He briskly punched in the number to Miskatonic. \"Kwan? This is Hawthorn! Do you have your keys on you? Good! Excellent! Listen, I need your help. Thanks. Go to the Namibia exhibit and go to uh case 36C and tell me if the Zan'chi artifact is still there.\" \n\nLong pause.\n\n\"What does it look like? Well, it looks kind of like a beehive or bug exoskeleton. It is! Good! Pull the files on it and email them to my phone. If you must scan them do it. I'll wait. Bye.\"\n\nHawthorn hung up and headed for the elevator. I glanced at the ship one time, shivered, and joined the professor upstairs. Coffee was available and an hour later the files arrived. A few of them had to be scanned a second time because of the poor quality and urgency Kwan had been under. The similarities were uncanny. Not only was the general shape the same but the beveled indentions on the surface were close. \n\n\"Holy shit!\" Hawthorn cursed after reading the files. \"It says here that the relic was unable to be dated because of equipment malfunctions.\"\n\n\"What are your thoughts?\" I asked. \"You are the expert.\"\n\n\"I have no idea. The stories surrounding the relic we have is that it is tied to an earth demon.\" He said he hands moving in nervous gestures.\n\n\"Aw shit!\" I cursed. \"Chthon?\"\n\n\"How do you know that name?\" Hawthorn glared at me.\n\n\"I was once in possession of the Darkhold.\" I admitted and he went pale. \"It is safe and locked away.\"\n\n\"Can that thing be tied to Chthon?\" He asked his fidgeting getting worse. \"I hate dealing with the Many Angled Ones.\"\n\n\"You are well informed,\" I declared, and he explained his bad luck and running into works like the Necronomicon and Al Azif. \"It is like an infection.\"\n\nThe mystic disease had permeated the human consciousness since our beginning. It is a part of our collective. They manifested in our dreams and inspired acts of violence, bloodletting, and slavish devotion. How many serial killers talked about the Dark One and most misrepresent it as the Christian Satan, but this thing was billions of years older. It was one of the first of the Old Ones to rise on a primordial Earth. They split into two opposites of light and dark. The chief among the Many Angled Ones were Shuma-Gorath and Chthon. The gods of light were Gaea and her progeny. Anackire stood between the two straddling the shadows and strongest of them all. I was surprised at her silence.\n\n'She'll speak when she chooses.' I thought. Until then I was going to have to riddle this out on my own. Perhaps this was a test? 'I won't fail you. I am your champion. Anackire and Istus will see how I defeat this challenge.'\n\n\"I need some fresh air,\" I said. He followed me outside. \n\nI needed to contact Steph and see how she was doing with the iceberg. I took the elevator back up and the psychic cold followed me. It stopped at the front door for now. Six of the scientists were either smoking or vaping on the front lawn. A small metal bucket was there to collect cigarette butts. I reached out for Steph mentally.\n\n'Steph?' I sent out silently.\n\n'Hey Ghost. How goes the investigation?' She replied a sense of longing in her thoughts.\n\n'I got an ancient spaceship. You?' I replied.\n\n'Wait... what? I thought you were investigating a poltergeist.' She gasped genuinely surprised. 'I can feel your concern. What is bothering you?'\n\n'The more of the thing they dug out of the mud and clay the stronger the psychic cold this thing puts out. Add to that all the missing diggers and experts. This is definitely going to go sideways and sooner than later.' I unpacked all my worries in case I failed.\n\n'We are stumped here,' She shared. 'I know what kind of magic is in effect but not who placed it or what is locked inside.' She shared. 'Even the Eye of Agamotto cannot pierce the enchantment.'\n\n'That's not good,' I sent feeling that sense of dread raise its ugly head again. I shivered and then for her sake buried it deep down. 'Keep me in the loop. I miss you too.'\n\nI had time on my hands and as Hawthorn searched for a solution, I searched my HUD. I glanced at the changes and noticed I had a new skill highlighted. What in the hell was Rune Craft? I dove into its description and fell in love with it. I could create dark elven runestones and empower them with a one-time spell effect. The rune would be destroyed once it was used but it was a great way of placing magical traps. If I raised it to level ten, I could fashion psychic runes that acted like a protective circuit breaker. When I was engaged in a blind psychic scan if I encountered a hostile mind that would otherwise ensnare my mind the rune would self-destruct and break the connection. I liked that.\n\nI stood and stretched. \"Surfer?\"\n\n\"Yes boss.\" She replied as she manifested.\n\n\"I might need to go battle ready without much warning. I need to set up a command phrase to activate armor and weapons.\"\n\n\"Just tell me what you need.\" Surfer eagerly awaited my commands.\n\nDread was replaced with whispers of terror and was growing, accumulating, and building quickly. Maybe it was just my imagination, I hoped it was. I raised Runes to level six, it was all I could afford right now. Perhaps after this quest was done, I'd get it up to ten. It was time to go down and see if I could help. Hawthorn and I took the elevator down. The lights dimmed as the elevator slowed but never quite stopped. The door slowly opened and the space beyond was poorly lit. The scientists were in chaos. I ordered them up. They didn't argue. \n\n\"You don't have to stay.\" I informed Hawthorn. \"Why don't you keep the others safe if it gets passed me.\"\n\nHe joined the others in the elevator, and I saw his concerned face as the doors closed. I heard Nathanial's voice echoing up from the dig site. I raced down the tunnel and found confusion unfolding. The thing they had dug out was now surrounded by a series of electric lamps. Gone were the battery powered ones. One of them had fallen over and the power was arching and causing the lights to dim. I used telekinesis and pulled the lamp off the ship and a few moments later shit hit the fan. A full-fledged telekinetic attack erupted around us. I threw up a protective shield and tried to get to Nathanial before he was injured. The lights flickered, the high-pressure hose that had been used to wash away the mud erupted and began whipping around smashing into people and objects with no one to control it. Random objects levitated or even flew at ballistic speeds around the chamber.\n\n\"Fuck!\" Nathanial cursed as a screwdriver deflected off my shield and imbedded itself into the clay covered wall.\n\n\"Finally,\" I said as the activity died down. The lights were still flickering but slowly quit strobing and stayed on.\n\n\"Thank you, that might have seriously injured me.\" He stated as he looked around. \"Where the hell is Dennison? Meriwether? Did you cowards run off?\"\n\n\"Aw fuck!\" I cursed as I pointed to the cavern floor. It was covered in a thin layer of watery mixture of clay and mud. It had come off the walls when they used the hose to remove it and power wash the thing's exterior. There were clear signs where the two men were drug off into the depths of cave system. You could see the drag marks and where they had dug their fingers into the slippery muddy. The parallel lines on the floor led to the open tunnel. \"Someone needs to go down there...\"\n\n\"NO!\" Nathanial snapped. \"You are far too valuable. I have connections. I'll bring in armed men to once and for all map those caves and retrieve any and all survivors or corpses.\" He said and then looked at the ship. \"Beautiful, isn't it?\" His personality was mercurial and bordering on madness. One moment he told me how valuable I was and the next he was fixated on the ship and how famous it had made him. While Nathanial called in the troops I snacked and having nothing else to do for now contacted the team taking care of the iceberg via my commlink. Shuri answered.\n\n\"Hey girl!\" I talked to her as she was dragged into analyzing the enchanted ice and attempted to peer beneath the ice and see what was lurking from the prying eyes of technology or magic.\n\n\"Hey. How are you doing?\" She asked in that sexy Wakandan accent.\n\n\"Five-million-year-old spaceship or escape pod. Unknown alloy and potential energy magnet. You?\"\n\n\"Ooh, sexy! This damn ice is being equally enigmatic. It absorbs anything and everything we send at it.\" She said sounding decidedly frustrated and I told her so. \"Maybe we can... never mind Stark and Strange are hollering. Talk to you later sexy man.\"\n\n\"Bye.\" I giggled as she ended the call. \"Ice that absorbs tech and magic. Absorbs.\" The word stuck in my head. \n\nTwo hours later they arrived. There were twenty of them. They were dressed from street casual to one guy in a tuxedo. Their races ran from Caucasian to Hispanic to African American. While there was a variety and their personalities were equally different, they had one thing in common. They weren't happy about being called in so casually and ruining their plans for the evening. They each had a duffle bag, backpack, or in a few cases a tactical sling pack. They were all in exceedingly good health and optimally fit.\n\n\"Fink.\" One of the men addressed Nathanial. \"Your money is welcomed as always. Who is this?\"\n\n\"Mr. Davis meet former Master Sergeant Conrad Long. Davis is my occult expert in this situation.\" Nathanial declared and added. \"He and Stark are close.\"\n\n\"Well, if he is good enough for her... what's the situation?\" Conrad asked and Nathanial gave him the basics and stopped there.\n\n\"Listen, you are dealing with an unmapped cave system. There will likely be multiple choke points, little or no lighting, and an aggressive enemy of undetermined origin.\" I added and the former Sergeant chuckled. \"I don't know if mundane weapons will be of any use.\"\n\n\"Fair enough. Thanks for the heads up. You heard him guys. If standard rounds fail fall back to silver and holy weapons. Gear up!\"\n\nI'll be honest. When he mentioned silver bullets and holy weapons, I was surprised. Who the hell were these guys? I watched the strip down, slip into high tech body armor, and take out weapons that showed signs of wear and tear from who knew how many battles. They screamed a well-oiled machine and skilled veterans. After only a few minutes they were armored up, armed to the teeth, and ready to earn their pay day. I wanted to go with them, but Nathanial was holding me back for one reason or another. The team took the elevator down in groups of five. \n\nAs they grouped up Nathanial ushered me to his private theatre. Multiple holographic screens appeared as the mercenaries readied below us. I did my own preparation for the eventual shit storm. Call it intuition or just knowing there were over twenty missing people unaccounted for at this point. Best case the mercs did their job and got paid. Worst and more likely some or none of them survived whatever the hell was down there. ",
        "I felt like Ripley from the second Alien movie where she sat in the command vehicle while a group of marines walked into a devastating trap. I was glad we weren't dealing with Xenomorphs, that would suck on a massive scale. If there were Yautja Predators in Latveria, could there by Xenomorphs down here? A nightmare scenario would be demonic version of the Alien. I shivered just thinking about trying to take out one of them when there would be twenty or more. \n\n\"Watch your ass,\" I urged over my commlink.\n\n\"He must be talking about you Selene.\" One of the mercs joked. How the hell did I miss her?\n\n\"Kiss my ass Jablonski!\" She cursed and he aimed his body cam at her backside. \"Fucking perv!\"\n\n\"They are all going to perish,\" I whispered to Nathanial and he shook his head. \"Tension brings out silliness.\"\n\n\"Exactly,\" he replied with a hungry glance at Selene's ass.\n\nThey reached the chamber with the ship and many of them commented on it. It was clear that none of them had seen anything like it before.\n\n\"Shi'ar?\" One of the members threw out.\n\n\"Nah, you remember what their ships looked like.\" Another replied. \"No, this is something else.\"\n\n\"Shi'ar,\" I asked. \"When did you guys run into them?\"\n\n\"Dude!\" A new voice piped up. \"Where the hell have you been? The mothership in orbit, the blockade, sheesh, oh wait...\" he paused, and someone whispered to him. \"Never mind. Anywho, it was all a big misunderstanding. They traced an alien ship from their sector of space back to Earth. The Shi'ar had never seen that configuration before. They believed we had sent it. No one ever did track it down and they apologized for all the hullabaloo. I don't blame them for getting all pissed off. If my home world just up and vanished, I'd be all kinds of angry.\" He stopped his rant when Conrad spoke up.\n\n\"Scan it Ritchie,\" Conrad ordered but before I could tell them it was useless Ritchie replied.\n\n\"Weird!\" Ritchie commented as he analyzed the relic. \"It is giving off in deep infrared nearly into the microwave range. That explains the dried mud.\" He continued. \"Man, will you look at those drag marks... shit! Whoa! It just went dark. The thing is cold now like room temperature. It is like it realized I was scanning it. Whatever tech we are dealing with it might have some sort of A.I. and it is a clever little bugger. Trying to see what the hell it is made of. Fuck me... it is reflecting my scans!\" He cursed. \"Scanning the surrounding area.\" Pause. \"We got a mix of tachyons, neutrinos, and an unidentified particle. Sending the data to you guys. Maybe one of you can make heads or tails of it.\"\n\n'Surfer?' I silently sent to her. 'Want to try diagnosing this new particle?'\n\n'On it Boss!' She gleefully purred. 'I love puzzles!'\n\nConrad removed a sphere-shaped drone from his pack and tossed it into the air. They switched to ultraviolet on their goggles as the drone spat out UV light in all directions. Unless there was something down there that saw in that spectrum, they wouldn't see anything as obvious as flashlights to warn them of the group's approach. They were silent after that point. The drone sent out regular pulse transmissions that formed an ever-growing map of the cave system. No bodies had been discovered so far. The mud ended shortly after the chamber and so any hint of where the men had gone was lost. They halted when the cave split or offered multiple tunnels. A core of ten men stayed in place and they would send either two five-man teams or one ten-man team to map and investigate. Other members had an orb drone and they used them to map and light their way.\n\n\"I had no idea it was so extensive.\" Nathanial stated as he poured himself a glass of wine. \"The entire neighborhood seems to be located over the caves.\"\n\n\"Should we warn your neighbors?\" I asked and he damn near panicked.\n\n\"NO! I mean no, these are skilled professionals. They'll get this done.\" He declared. \n\nText suddenly appeared on the bottom of one of the displays. \n\n'Selene here. We've encountered something. Audio to follow.'\n\n\"...EE-Ahh EE-Ahh Shoo-Ma-Gore-Ath...\" the inhuman voices chanted.\n\n\"What the hell is a...\" Nathanial began and faltered.\n\n\"Shuma-Gorath, one of the Many Angled Ones. Dr. Strange mentioned it once or twice along with dire warnings.\" I explained. \"I have to go. Shit just went sideways!!\"\n\n'Steph?' I mentally reached out.\n\n'Sorry Ghost, busy right now! Portal is opening and something big is coming!' She anxiously sent.\n\n'Shuma-Gorath?' I asked and I felt her shock like a slap across the face.\n\n'How in the hell... oh! It appears our missions are interconnected! I... Shit!'\n\nThe connection was lost. I reached out and touched the mind of the only female on the team below, Selene. I teleported to her side and clamped a hand over her mouth to keep her from screaming. I mouthed the word 'sorry' and she nodded. She pointed to the flickering light ahead. There were two dozen of the things. They appeared to be kneeling and prostrated before a stone idol of a starfish shaped creature with an all-seeing eye at its center. The creatures were nightmare made flesh. They were facing away from us and I could catch what scant detail the flickering candles revealed. Their skin was heavily textured with a flexible exoskeleton and dripping an oozing ichor from joints, blow holes, and the front of their heads. I could not use the word face since I had not yet seen it. The inhuman voices came from the blow holes on the top of their skulls.\n\n\"Ia! Ia! Shuma-Gorath!\" They continued to chant. We were close enough to catch the creature's scent. It was somewhere between a strong coppery smell with a blend of rotting flesh and sweet sickly decay.\n\nI gestured to Selene and touched her mind briefly. 'Go! Fall back to the space craft! If you have explosives with you set them behind the ship and detonate them if any of these things get out. Bury the damn ship! Now go!'\n\nShe returned to the squad and they withdrew. I prepared to launch my assault on the creatures. If I struck swiftly enough it might help Steph and the others. I gave the mercenaries one minute before I attacked. During that time, I picked my combat music and prepared my gear. I activated the Yautja cloaking technology accentuated with the black glass effect, powered up the shoulder cannon, and drew out my lightsaber. I took aim at the lead creature and started my music. It was nearly twice as large as its brethren while my foot silently tapped in time with the song. I guessed at a vulnerable spot right behind the thing's third eye on the side of its head that was exposed. I fired just as the music swelled killing it instantly. I targeted the others as they scattered. I continued firing as they tried to surround me. Once they were ten feet away, I teleported to the stone idol, ignited my weapon, and struck down the image of Shuma-Gorath slicing it into pieces. If killing the leader had upset them, destroying the image of the Many Angled One drove them into a berserk rage.\n\n\"Come on mother fuckers!\" I shouted desperate to keep them focused on me. It appeared to work rather well.\n\nI kept on teleporting out of their reach and slashing at their armored bodies. I got my first real look at their facial features. They were hideous with a large grouping of facial tentacles and just above them were two angled lines of eyes. There were three blazing orbs on either side of the thing's head. I noticed pulsating organs whose functions could only be guessed at. The violet blade of my lightsaber cut through their flesh easily enough and filled the air with the burnt stench of alien matter. I dodged, flipped, and struck out as the things swarmed around me. The music pulsed in my ears as I clenched my teeth and let the amethyst blade reach out and deal death all around me.\n\n\"Explosives are set.\" Selene whispered in my ear. \"None of the damned things has appeared yet.\"\n\n\"Blow it! Bury the damn ship!\" I ordered.\n\n\"Stop! No!\" Nathanial screamed. \"We can...\"\n\n\"Wah-thoom!!\" The explosives spoke followed by the roar and rumble of collapsing earth.\n\n\"Halt!\" One of the monstrosities ordered to the others. \"This fool has trapped himself with us. We shall wait until the air runs out and he suffocates.\"\n\n\"Holy shit, it can talk!\" I exclaimed truly surprised. \"I'll be damned.\" I cursed as I turned off the music so I could hear it clearer.\n\n\"Damned with the rest of us.\" It chuckled. \"Nice work. You've killed half our number and then a noble sacrifice to boot.\"\n\n'Surfer. Scan the roof and find the key load bearing portions for me.' I sent silently.\n\n'Yes boss.'\n\n\"You serve the Many Angled Ones or just Shuma-Gorath?\" I asked keeping my weapon ready and ignited. I set the triangular targeting reticule between the speakers eyes on a particularly nasty looking patch of oozing pustules.\n\n\"On this occasion only the great Shuma-Gorath.\" It purred as the dust slowly settled and the candles began to sputter a bit. \"We serve any of them that require us with complete conviction.\"\n\n\"What have you done with the humans?\" I asked as I looked around the killing ground. I spied a glint of grey-green beneath the makeshift altar. The tablet! If it was there it must be important, I reasoned. I looked back at the speaker and it appeared to be laughing but I couldn't be sure. \"Ah, I see. No corpses to find are there.\"\n\n\"Observant for a mere mortal,\" it chuckled.\n\n'I have determined which three spots will do the most damage.' Surfer informed me.\n\n\"It is him, isn't it?\" One of the other damned things asked the leader. \"They spoke of his interference.\"\n\n\"Silence fool!\" The lead creature growled. \"We were pledged to secrecy upon that dire matter!\"\n\n\"Holy shit! Korriban!\" I exclaimed and there was a hiss among the creatures. \"Ha! I blew that fucker to hell.\" I laughed as I marked the points that Surfer had located for me. I primed the shoulder cannon and fired in sequence leaving the closest target for last. I didn't forget about the leader. The first plasma blast took it squarely between its ugly fucking eyes. The next three struck the ceiling and brought it down in a lethal cascade. My last action was to telekinetically snatch the metal tablet. \"Tata must dash.\"\n\nI teleported to New York harbor. I gasped when I spied the tentacled horror the others were desperately trying to drive back into the open portal. \n\n\"So, that is Shuma-Gorath,\" I exclaimed as the heroes attacked the colossal figure.\n\nI tried to estimate the size of the portal and the titanic demon pushing its way through the collapsing gate. It was on scale with the crashed capitol ships on Korriban. I was about to shout out a warning when the iceberg exploded freeing a second creature to attack them from behind.\n\n\"Oh no you don't!\" I hollered as instinctively teleported into range. \n\nI was able to levitate while I built up a powerful strike. I attacked the thing with the strongest Force burst I could muster. The thing shrieked alerting Steph and her companions as its internal organs turned to mush. It wasn't dead but it was badly injured. I screamed as a psychic attack slammed into my mind. I had garnered Shuma-Gorath's attention.\n\n\"Ghost! I got you!\" Steph cried out. \n\nMystical syllables filled the air as she conjured the famed Crimson Bands of Cyttorak and ensnared the smaller creature. She used the cloak of levitation and began spinning. Steph anchored herself in one spot and the monster orbited her faster and faster. Steph called out a warning and the others moved aside while she flung the creature at Shuma-Gorath sending both through the portal and back to their home dimension. Thor blasted the gate with lightning forcing it to close faster. \n\n\"Yes,\" was the last thing I remember Steph saying. Something in my head hurt badly and I lost consciousness.\n\nI woke surrounded by a gold aura and hovering somewhere naked in the Sanctum Sanctorum. Steph was healing me and as the last of the pain faded away so did the aura. I tumbled to the floor and she let out a surprised gasp.\n\n\"Sorry. I was caught up watching you.\" She admitted.\n\n\"Friend Ghost,\" Thor roared as he slapped me on the back. \"Your timely attacked saved us a planet of harm.\"\n\n\"World of hurt?\" I whispered still weak from the mental assault.\n\n\"That's it!\" He chuckled. \"Fear not we have made sure the ship was buried and the fiends slain. All is well so worry not.\"\n\n\"Great! Wait, this isn't the Sanctum.\" I realized. \"Where the hell am I?\" I asked as I shakily got to my feet.\n\nAs if summoned by those very words the door opened and a lovely woman entered wearing a gown of green and gold. Her hair was done in an intricate up do. I recognized the resemblance to Thor. She approached me cautiously and appeared concerned about my welfare. \n\n\"Mother! You have returned. What news?\" Thor asked the Lady Frigga.\n\n\"Odin sleeps. I feel like I am cheating on the All Father. A dark elf here in our very home!\" She hissed with uncertainty. \"If your father discovers he'll strip you of your powers again.\"\n\n\"He is my friend and unlike the rest of his race.\" Thor said standing up for me. \"We fought one of the Many Angled Ones together! Surely that must mean something mother.\"\n\nShe looked at me and then at Thor. A slow smile crossed her face as her cheeks flushed with color and she nodded. \n\n\"Tell him to dress lest the maidens rush in and rape him.\" Frigga suggested with a wink in my direction. I took on my human form and slipped on my dark robes, so I didn't appear hostile in any fashion. \"Make your stay here brief.\"\n\n\"I wish to give my friend a gift worthy of defeating the fell demon.\" Thor declared. Frigga pointed at a dusty trunk in the corner. \"Of course! So many tokens I collected on my journeys through the nine realms. Surely there is something worthy of a hero like Ghost.\"\n\nHe upended the trunk's contents and began rummaging through them. He shook his head as he placed them on the bed, his bed. I felt a sudden rush of energy and went over to see a pair of gloves that were decorated with a line of runes at each cuff. I picked one of them up and ran my fingers over the smooth dark material. I didn't recognize the runes and Thor stopped and stood frustrated.\n\n\"I am sorry friend Ghost... Ghost? Do you fancy them?\" He asked and then smiled. \"Ha! I can see that you do. Take them please, it pleases me that they have found a home.\"\n\n\"Thank you, Thor,\" I said as I fished the mate of the glove in my grasp from the pile of objects. \"Where did you get them? What can you tell me about them?\"\n\n\"Hmm, let me think,\" he mused. \"I remember now! I was called to Nidavellir, the home of the dwarves. They were being terrorized by a dragon. The Warriors Three and I fought together and defeated the fell beast. As a reward I was given those gloves they did something... I am embarrassed to say that I was caught up in returning to Sif and do not recall what kind of enchantment lays upon them. Likely, only an Asgardian would be able to utilize them, I'm sorry.\"\n\n\"No, they are a grand gift,\" I said. \"Let's see if they fit.\" \n\nHe watched as I slipped them on. I felt a rush of energy pass through me and the last of the fatigue left me. I pulled down my HUD and checked my inventory. The gloves had a name attached to them, J\u00e1rngreipr or quite literally Iron Grippers. I looked at their powers and like many objects I had collected they had two question marks, but the one ability known was modified strength. I swiped over to my stats and nearly cried out. The gloves doubled my physical strength. It was now in the mid-forties.\n\n\"Holy shit Thor! These gloves double my strength!\" I gasped.\n\n\"That was it! I remember now. You can use them, that's odd. I didn't think that would be possible.\" He thought out loud. \"Good. Now you'll be able to handle more powerful foes.\"\n\n\"These are a princely gift,\" I stated but he was adamant that I keep them. \"That said, I need to find something to try them out on.\"\n\n\"Well spoken! Let me summon the Warriors Three and we shall seek out conflict together.\" Thor rumbled happily. \"Come friend Ghost, to battle!\"\n\n\"Ahem!\" The Sorceress Supreme growled playfully. \"Guys?\"\n\n\"Fine, come on woman.\" Thor agreed reluctantly.\n\n\"Sif! Battle!\" Steph shouted. \"Get your gear!\"\n\n\"I guess this passes as a double date,\" Thor chuckled. \"To the Bifrost! To battle!\"\n\nNew York City: 1929 Number 66 6th Street\n\nThe police officer was making his rounds. He was bored to tears and spinning his truncheon by its leather strap. The wind blew cold on the late March evening. Patrick O'Reilly pulled his coat's collar up to protect his exposed neck. Manhattan was quiet as usual. He didn't get many calls in this neighborhood. It was upper class and only the occasional apartment building like number sixty-six here.\n\n\"Evening Patrick!\" Jane Wayne-Carter called out as she took out her key and unlocked the front door of the apartment building.\n\n\"Evening Mrs. Wayne-Carter,\" Patrick replied.\n\nHe continued down to the corner and stopped. A soft noise caught his attention. He shivered and clutched his truncheon as his body tensed sensing unseen danger. He reached up and brought his whistle to his lips. In an emergency he would blow it to summon aid. He moved slowly peering into the shadows between the buildings, but no fiend presented itself. Patrick was meticulous in his search and paused in front of number sixty-six again. The strange soft sound caught his attention but this time it was from the street. He glanced as he turned to face the empty street.\n\n\"Crud,\" he cursed. He cried out when a stream of cold water struck his head and quickly soaked him to the bone. \"Damn it all to...\" Patrick cried out as he spun to face the empty space where number sixty-six should have been. \n\nThe water came from a severed water pipe. The only thing remaining of the apartment building were the steps leading up to where the three-story structure should have existed. The soft sound was above him now. Patrick O'Reilly looked up and screamed. His truncheon fell from his nerveless fingers as his sanity snapped. His screams alerted the neighborhood, other police officers, and anyone within range of his voice. It took three grown men to hold him down.\n\n\"Hurry!\" A police officer urged.\n\nDoctor Jason Strange injected the shrieking officer with a sedative as a diminutive Asian fellow in bright yellow robes stood nearby examining the empty lot.\n\n\"Hello there.\" Jason addressed the figure as he put away the syringe and closed his medical bag.\n\n\"Oh, hello,\" the old man replied. \"What do you think?\"\n\n\"Think? I have no idea. It is preposterous.\" The good doctor replied. \"My poor patients. What has become of them?\"\n\n\"I have no idea, yet.\" The Ancient One said smiling. \"Deliciously absurd isn't it?\" He added as he walked away.\n\n\"Where are you going?\" Jason Strange asked.\n\n\"Bleecker Street. I have research to do.\" The old man replied.\n\nFade to Black."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "double penetration",
        "public sex",
        "celebrity",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-08"
}