{
    "title": "Is That Really You?",
    "pages": [
        "Author's note: An extra special thanks goes to LadyFalcon who edited this story for me. Her keen eye, attention to detail, and helpful suggestions made this story better than originally written. Thanks so much!\n\nI.\n\nIt was a bright, clear late October evening as Gary Buchanan trudged across the vast OSU campus. \"I should have picked a smaller school,\" he grumbled to himself, but he had always had his heart set on going to Ohio State, the same school his parents and grandfather had attended. Since freshmen were not allowed to have a vehicle on campus, his bike was at home, and he did not care to ride the shuttle anymore after using it so much for his classes that week, walking was his only alternative. Besides, it was unusually warm for that time of year in central Ohio, so he might as well enjoy it while he could.\n\nHe had pledged and was accepted into the Lambda Chi Alpha fraternity a week or so prior. It had been the same frat to which his father and grandfather belonged, so there was not too much doubt as to his acceptance. The hazing was not as bad as he had feared. In fact it was non-existent, probably because of all the lawsuits filed in the past, plus it was against school rules to haze the pledges in the first place. Throughout the first semester, usually on a Friday and/or a Saturday night, the frat would have a party and invite a sorority to it and it afforded him a great opportunity to make friends, especially the female variety. Sometimes, a sorority would do the inviting as was the case tonight. These mixers had been a lot of fun over the past few weeks and he met a lot of people and even made a few new friends.\n\nOf course, the Delta Delta Delta sorority, or Tri-Delts, was on the other side of campus, as were most of the sororities, and he would more than likely smell like a sweating horse when he got there, but he could not complain too much. He had showered and loaded up on the anti-perspirant before he left his cramped dorm room, so he figured he would not smell too bad once he arrived. He turned down 15th Street and saw the row of houses that would soon become familiar to him. Loud music reverberated along the street as students lounged on the porches or mingled on the sidewalk or in the yards.\n\nGary found the house without any trouble and ambled up the walkway to the porch. Music could be heard from within, the Stones or some other 60's British group, although Gary did not care one way or the other. He was more into jazz or classical, an odd quirk for a teenager, but he usually marched to the beat of a different drummer anyway. Always had. Bright and somewhat sociable in high school, Gary was known as one of the brains in his senior class and a decent baseball player. He was as comfortable with his nose in a textbook as he was fielding a ground ball at shortstop. He had the choice of an academic or athletic scholarship to OSU, so he chose academic because he knew he was not good enough to play pro ball after graduation. He was not even sure he was going to try out for the baseball team because of the academic workload he planned to tackle.\n\nHe never dressed to the fad of the day, preferring boot cut jeans, no name t-shirts, and a ball cap. He was sans the ball cap this evening and had even added a red polo shirt to his ensemble. It was a special event after all. He rang the doorbell to the two story wood abode and waited to be let in. He had his ID with him as they had a list as to who was invited. Some parties were open to pretty much anyone who walked in, but that was not the case this evening. The door opened and an overly perky petite blonde came into view.\n\n\"Hi there,\" she said enthusiastically, \"I'm Debbie. Can I see your ID and invitation?\"\n\nGary groaned within. A bubbly blonde, he could almost stomach, but he had forgotten the invitation. Everyone in his frat had been given one and he did not know if that would make a difference. He certainly was not going to walk all the way back across campus to get it and then walk back.\n\n\"I forgot the invitation, but I have my ID.\"\n\nDebbie frowned a bit. \"I'm not supposed to let you in without it. What's your name?\"\n\n\"Gary Buchanan.\" He showed her his ID through the screen of the storm door. She peered at it closely, wrinkling her cute button nose a bit as she squinted.\n\n\"I'll be back in a minute,\" she said as she closed the main door part way. Through the open door, he could hear the loud music, definitely the Stones, muffled conversation and laughter. Debbie returned in less than a minute and unlocked the storm door. \"Come on in, Gary,\" she said sweetly as she pushed the door open for him.\n\nGary brushed past her and waited a few feet into the hallway as Debbie shut the door behind them. \"Sorry about that,\" she said apologetically, \"but we've had a lot of crashers lately and we wanted to keep this small.\n\n\"That's okay,\" Gary replied. There was a table nearby with plain labels and a few markers.\n\n\"If you'll just put your name on one of these, it'll make it easier to get to know you.\" Gary was used to doing this as he had done the same for other such parties. He took a label and a pen and began to write his name. \"Where are you from?\" she asked curiously.\n\n\"Detroit.\"\n\n\"Really? A few of my sisters are from Detroit. Maybe you know each other.\"\n\n\"I might,\" he answered as he peeled the back and pressed the label to his shirt. He thought the possibility to be remote since Detroit was a pretty big city. \"Who are they?\"\n\n\"I don't remember off hand. I could look them up in our directory if you like.\"\n\n\"No, that's okay. I guess we'll know each other if we meet.\"\n\nDebbie shrugged indifference. Sometimes, she liked talking to the guys who came over for parties, but tonight, she just wanted to go to her room and be by herself. She already had a boyfriend, but he went home for the weekend. Although she knew these mixers were mainly to hook up with guys, she did not want to give anyone the impression she was available or looking. Because she had to be extra nice as part of hosting the party, some guys took that as being an invitation to perhaps ask her out. The tall guy in front of her, though, looked a little nerdy with his short hair, lean build, and glasses and she wondered how he managed to get into a frat to begin with. He seemed nice enough, but definitely not someone with whom she wanted to converse much longer.\n\nGary could begin to feel the coolness coming off her and knew her time to be the good host and entertain him was rapidly running out. He had been through it before. He was not interested in her, although he found her mildly attractive, but he had been nice back to her and she probably thought he was interested. Gary knew he was not the best looking guy in the world, so he knew his limits as to what type of girl might be worth getting to know. Usually, they were the mousy librarian type who studied as a way of entertainment. In high school, he had been casual friends with some very nice looking girls and it was fine when they talked one on one, but he could tell they became uneasy talking to him when their friends came by, as if he was not in their same class. He was beginning to get that same feeling now.\n\n\"Sure, of course you would,\" she said absently. \"There's snacks and pop in the kitchen down the hall. No beer, though. We got busted last year and we're on probation for the year.\"\n\n\"Busted for what?\" he asked. He was not that curious, but he decided to see how fast she wanted to make her exit.\n\nDebbie sighed lightly, but kept a straight face. \"Some undercover cop caught us giving beer to anyone who came in and one of those happened to be under eighteen. We almost lost our charter, so we have to be really careful now.\" She looked up at him and saw he was making no effort to move. \"Well, feel free to mingle. I'm sure you'll have a great time. If you need anything, let me know.\"\n\n\"I will. Thanks.\" Almost before he could finish his sentence, Debbie had turned and bounced up the steps to the second level.\n\nSlightly amused, Gary followed the sounds of conversation from the room to the right and found himself in a large living room with many people walking around. He recognized a few of his frat brothers and went in to try and enjoy himself.\n\nAs the evening wore on, Gary could say he was having a good time. The girls he talked to were pretty nice and did not grimace or look disgusted when he approached them. He recognized a few of them from classes and at least they could talk about an English paper due or a Biology lab they shared. After a while, he became thirsty and decided to get a soda from the kitchen. Gary excused himself and found the kitchen without any trouble. The sodas were in four large coolers on the floor and there were plastic cups and ice on one of the tables. Chips, crackers, and other snacks covered the table and paper plates were there too. Others were milling around grabbing a Coke or filling a plate with chips and dip and either going back to the living room or to the back yard to socialize.\n\nWith his back to the doorway, he did not notice a tall, brown-eyed blonde studying him intensely not fifteen feet away. Gary straightened with a Sprite in his hand and closed the lid to the cooler. He saw the girl, smiled politely, and turned to leave the kitchen.\n\nHe had taken but a step or two when she said, \"Gary? Gary Buchanan?\"\n\nGary jerked to a stop as if someone had him tethered and he reached the end of the rope. It was not often a girl called him by name, especially one he did not know. He turned to her and looked at her quizzically. He raised his eyebrows, but he still did not know her. She was quite pretty and that was another reason why he was surprised she was talking to him.\n\n\"Don't you remember me? I'm Michelle, Michelle Mayfair from St. Augustine's.\" Her eyes looked hopeful. \"We went to school together.\" She hoped that would jog his memory.\n\nMichelle Mayfair? Gary researched his mind for a scant second. He then remembered her instantly. St. Augustine's was the parochial school they attended from first grade through eighth. Michelle was a classmate all those years and they had always been friendly. She was one of those girls who blossomed very early and paid dearly for it with taunts and ridicules from the boys and girls alike. By sixth grade, she was almost six feet tall and very stocky. She was not fat, but that did not stop comments about her weight, either. Gary was one of the few who never made fun of her. He was a short, scrawny kid with glasses who had difficulty talking to girls and Michelle was one of the few who treated him nicely.\n\nIn the seventh grade, someone started a rumor that they had seen them kissing during the lunch hour. Both vehemently denied the falsehood because, one, it was not true, and two, they would get into very serious trouble if it were. Holding hands was strictly forbidden at the school, so kissing was probably punishable by expulsion. Luckily, the story died quickly and nothing happened, but Gary did not mind being thought of as Michelle's boyfriend and the thought of them kissing was very pleasant in his young mind. They never did anything together outside of school, but they still considered the other a good friend.\n\nUpon their eighth grade graduation, Gary went to Waddell High School, a public school, while Michelle attended Archbishop Sheen Catholic High School. Gary could remember seeing her but once since and that was during their freshman year at church.\n\nHe looked at her again and smiled, knowing the reason why he did not recognize her. In grade school, she had been a brunette, but now she was a dark blonde. It looked really good on her and he was impressed. She also has lost weight or whatever baby fat she had four years prior. She looked athletic and toned in her jeans and knit shirt. Her face had lost its roundness and was replaced by thinner version with high cheek bones and a very nice smile.\n\nHer brown eyes continued to search his face in hopes he remembered her or recognized her. She knew she had changed quite a bit in four years, but she recognized him immediately when he faced her.\n\n\"Gary?\" she asked once again.\n\nGary put down his Sprite and continued to stare. \"Is that really you, Michelle?\" he finally said. \"What happened to you? You look great.\"\n\nMichelle beamed with pride. \"I should say the same about you. You changed so much.\" And that was true because he was barely five feet two in eighth grade and one hundred pounds, but he grew a lot in high school and was now almost six foot three and one-seventy five. Shaking her head in disbelief, she moved to him with outstretched arms and hugged him. It was so good to find a real friend in such a big school.\n\nThey held each other for a few seconds and it was as if those four years apart did not exist. Gary was surprised by her hug and even more surprised as to how long she held him. He was definitely not complaining as he enjoyed the warmth and softness of her in his arms. It was kind of puzzling to him why she was being so affectionate. He never thought they were particularly close in school, very good friends of course, but nothing more serious than that.\n\n\"It's so good to see you again,\" she said when she backed away. \"I had no idea you went to school here.\"\n\n\"Same here,\" he grinned as he shook his head in disbelief. \"I didn't see you before. Did you just get here?\"\n\n\"No,\" she replied, \"I had a massive headache and I was laying down upstairs to get rid of it. I came down and saw your name on the list and I had to see if it was you. It's so good to see you again!\" she repeated. She could not stop smiling, nor could she believe the change in him. Facially, he had not changed too much, but his height and weight was so much different. When she saw him, she almost did not say anything for fear she had the wrong person.\n\n\"So, what have you been doing with yourself for four years?\" she asked.\n\n\"Well,\" he began, and so Gary started to tell her about his high school life. He told her of his playing shortstop on the baseball team and being named valedictorian of his class and all of the clubs to which he belonged; German club, chess club, and math club. He told her everything he could think of except for the one thing in which she was most interested up to that point.\n\n\"So, how many girlfriends did you have?\" she asked when he finished.\n\nGary blushed and looked away for an instant as embarrassment was beginning to creep in. He felt the same as he did his senior year when asked who he was taking to the prom. \"I didn't have any,\" he replied softly.\n\nShe recognized the pained expression and immediately wished she could take back the question. As nice at he had always been to her, she just assumed he dated. What girl would not want to date him?\n\n\"I wish we had kept in touch. You could have gone out with me,\" she said.\n\n\"Me?\" he asked. \"As pretty as you are, the guys were probably standing in line to date you.\" \n\n\"Well, yes and no,\" she replied. \"You see, I didn't lose weight until after my sophomore year. I began to train real hard because I wanted to make varsity volleyball and I was too slow, or so said the coach. I watched my diet, worked my ass off, and the pounds melted away. Well, yeah, the guys started to come around when school started, but they were the same ones who wouldn't even look at me before. Hell, nobody gave me a second look before. Probably not even a first look!\" She laughed painfully as the memories came back to her. \"We could have stayed in touch,\" she said accusingly.\n\n\"We should have,\" Gary said. \"I was an idiot.\"\n\n\"We were idiots,\" she corrected him. \"My phone worked just as well as yours.\"\n\n\"I guess.\"\n\n\"It doesn't matter anymore. We're back together, just like the old days.\"\n\n\"Old days? You make it sound like ancient history. It was only four years ago.\" He chuckled at the thought.\n\n\"I'm only nineteen. Four years is a long time,\" she laughed.\n\n\"True, true,\" he replied. \"So, what about you? What have you been doing with yourself? What wonderful memories of high school do you want to share?\" He grinned at her.\n\nMore people began to come into the kitchen and Michelle felt a bit uneasy talking with that many people around. \"Why don't you grab your drink and take a walk back to campus with me? I'm not in the mood to stay any longer.\"\n\n\"Sure,\" he said. He, too, wanted to leave. He picked up his Sprite and they left the house.\n\nAlong the way to the campus, Michelle talked about her previous four years. Her improvement from her sophomore year to junior year was remarkable as she was named second team all-league. In her senior year, she was named MVP of her league and third team all-Michigan. When she received a volleyball scholarship to OSU, she jumped at it. As she had said previously, she did not date and had pretty good grades. She worked at a teen clothing boutique during the summer to earn some extra spending money. When she finished speaking, Gary was dutifully impressed, but he had a few questions of his own.\n\n\"So why didn't you date?\" he asked. \"Was it out of spite for not being popular with the guys before?\"\n\n\"Exactly,\" she said without hesitation. \"Why would I go out with someone who didn't like me until I changed? I was still the same person inside as before. No way was I going to date someone like that.\"\n\n\"So, you didn't date at all?\"\n\n\"No.\"\n\n\"Seems like a waste.\"\n\n\"Maybe, but that's the way I felt. I don't regret it,\" she added.\n\n\"If someone had shown interest in me, I would have dated her.\"\n\n\"It was a different situation with me.\"\n\n\"I know.\" He looked at her and sighed. \"Can I ask you something else?\"\n\n\"Sure.\"\n\n\"What's with the hair?\"\n\n\"You don't like it?\" she asked as she touched it.\n\n\"No, no, no,\" he said defensively. \"It looks great on you, it really does. I just didn't recognize you back at the house, you know, with the weight loss and your hair and stuff. I always remember you as a brunette, but I guess I can get used to this.\"\n\n\"I hope it won't be too much of a burden for you,\" she said sarcastically. \n\n\"No burden. So, why did you do it?\"\n\n\"No real reason, I guess. I just wanted a change, you know, just like coming here for school.\"\n\n\"You mean you just had it done?\"\n\n\"I had it done a few weeks before school started.\"\n\nGary shrugged and looked ahead. The campus was not too far away. He hoped she did not mean to go straight to her dorm when they arrived.\n\n\"So, coming here was a change for you, too? Why's that?\"\n\n\"Well,\" she sighed, \"everyone wanted me to go to Michigan, Michigan State, or any other school in the state, but OSU was interested from the start. My dad is still upset at me, but I wanted a clean slate.\"\n\n\"I guess I can see your point,\" Gary said\n\nThey walked a bit further and he could see some of the dorms come into view. \"Which dorm are you in?\" he asked.\n\n\"Kiefaber.\"\n\n\"You want to grab a coffee before you head in?\"\n\nMichelle checked her watch and it was only a few minutes after eight. \"It's not very late. Are you trying to get rid of me?\" she teased. \"Do you have another date?\"\n\nGary's face turned red from embarrassment as he looked down. Even though in the back of his mind he realized she was the same Michelle as before, he still had a hard time getting past the fact that a very pretty girl wanted to spend time with him. That sort of thing just did not happen to him. \"No, I don't have a date and I'm definitely not trying to get rid of you,\" he replied without looking up. \"I just thought you were heading to your dorm, that's all.\"\n\n\"Don't worry about it,\" she said as she patted his arm. \"I'd love to have a coffee with you.\" She had a game the next day, but it was not until one. She simply wanted to spend time with the first boy who treated her nice and whom she considered her best male friend while growing up.",
        "They redirected themselves and headed to the student cafeteria, chatting about anything and everything that crossed their minds. They bought their coffees and sat down on an unoccupied sofa.\n\n\"So, you never did tell me why you didn't date,\" Michelle said after taking a sip.\n\n\"Nothing much to tell,\" he replied honestly. \"I wasn't popular, wasn't good looking, still not, and the ladies didn't exactly flock in my direction every morning when I came to school.\"\n\n\"Oh, come on, you are too good looking and surely there was someone who you were friends with who you wanted to date.\"\n\n\"Sure,\" he agreed, \"there were some I wanted to date, but it didn't happen.\"\n\n\"Did you ask anyone out?\"\n\n\"A few times, but it never worked out.\"\n\n\"What do you mean?\"\n\n\"Well,\" he exhaled, \" most of the time, the rejection wasn't too bad. You know, it was the 'You're a really nice guy, but...' rejection, or 'You're a really good friend, but...' rejection. Only a few times did I get the 'Are you out of your freaking mind?' look on their face.\" He smiled sardonically. It still pained him to talk about his shortcomings in the relationship department.\n\n\"You should have asked me out,\" she smiled sweetly. \"I wouldn't reject you.\"\n\n\"Oh, now you tell me!\" he laughed. \"You're a bit too late with that information. I could have used that a few years ago.\" He eased back in the sofa and stretched out with his hands clasped behind his head.\n\nMichelle looked at him as he stared into space. He really had not changed too much, and yes, that meant he was not someone who would turn a woman's head if she saw him, but he was the same friendly, self-deprecating, unassuming person he was in grade school and that appealed to her.\n\nGary looked at Michelle and caught her staring at him. She did not look down or break her eye contact, but merely continued to look at him with a quizzical smile on her face.\n\n\"What's so amusing?\" he asked.\n\n\"I\"m just waiting.\" She took a sip of her coffee.\n\n\"Waiting for what?\"\n\n\"Waiting for you to ask me out.\"\n\n\"Right!\" He looked away. When he turned back, Michelle still had that amused look on her face. Gary looked at her intently. \"You're serious about this?\"\n\n\"Name the time and place and I'll be there,\" she answered before leaning back into the sofa next to him.\n\nGary thought for a minute before remembering something. One of his frat brothers sold him his football tickets for the next day's game versus Illinois. If she was true to her word, then they could go together. \"Okay,\" he said, \" how about going with me to the game tomorrow?\" He looked at her hopefully.\n\nWithout thinking, Michelle blurted out, \"I can't...\"\n\n\"I knew it,\" Gary replied sadly and looked off into space.\n\n\"Hey, wait a minute, let me explain,\" Michelle said quickly, a bit surprised by his response. She touched his elbow.\n\n\"You said, 'Name the time and place', and then you back out.\" His chest heaved as he looked away. \n\n\"If you would just listen and let me explain, I'll tell you why I can't go.\" He still was looking in the opposite direction and trying to maintain control over his emotions. \"Alright then, look away if you want, but you need to listen. I've got a match against Bowling Green tomorrow at one. That's why I can't go with you to the game.\"\n\nGary's shoulders sank as he sighed. Why was he such an idiot? Why did he automatically think she was blowing him off? Because she's so pretty, that's why. No girl with her looks would ever think of going out with him. How could she be different? Because they were friends for a long time before she changed in her looks, that's why. He was just so stupid.\n\nWith his hands touching his pockets, Gary slowly turned her way and she could see the despair in his eyes. \"I'm sorry for being such a jerk,\" he said.\n\nMichelle smiled. \"You're forgiven. How about we do something tomorrow night?\"\n\nGary smiled broadly in return. \"That sounds great.\" He searched his mind for an idea and then it hit him. \"How about a movie at the union? They usually have something good playing on Saturday.\"\n\nThe union was a student campus hangout. It had a small bowling alley, arcade room, pool tables, and a theater. For students who were stuck on campus, it was a great place to go.\n\n\"Sounds great,\" Michelle replied. \"When do you want to go?\"\n\n\"We could meet around six or seven if you want.\"\n\n\"Six is good. That'll give me time to get cleaned up and rest a bit after the match.\"\n\n\"Okay.\" He looked at her again through his wire rimmed spectacles and sighed. \"I really am sorry for that.\"\n\n\"Don't worry about it,\" she said. Michelle could see he was still a bit downcast and it saddened her. She tapped his arm and said, \"Hey, those snacks didn't do a thing for me. Want to grab a bite at The Sandwich Shoppe?\"\n\nGary's face brightened again. \"Sure. I'm pretty hungry.\"\n\n\"Come on, then. My treat.\" She stood up and Gary followed.\n\n\"You don't have to,\" he protested.\n\n\"I want to, so don't argue with me,\" she replied.\n\n\"Okay,\" Gary said sheepishly.\n\nGiven the time of the evening, the small submarine sandwich restaurant was not crowded when they arrived. Finding a table out of the way near the back, Gary and Michelle settled in their chairs and chatted in between bites.\n\n\"I just can't believe how much you changed,\" Gary remarked after he took a sip of his drink. \"And I didn't know you played volleyball. When did that start?\"\n\n\"I played at St. Augustine's. I guess you didn't know that.\"\n\n\"Nope.\"\n\n\"Well, I didn't know you that good of a baseball player, either.\"\n\n\"Yeah, well, I guess there's a lot of things we don't know about each other,\" he replied.\n\nMichelle laughed. \" I don't have to be in early, so we can catch up.\" She looked at him thoughtfully. \"You know, you haven't changed a bit.\"\n\nHer statement puzzled him. \"How so?\" he asked, thinking he had changed quite a lot in four years.\n\n\"Outwardly, maybe, but you're pretty much the same guy you were in grade school. I always liked you then.\"\n\n\"I know. I liked you, too. You were always a good friend.\" A memory came to him and his face brightened. \"Remember when Sally Robertson told everyone we were kissing on the playground at lunch?\"\n\nMichelle's eyes widened and she slapped the table with her palm as she laughed. \"Oh my God, yes!\" she exclaimed. \"I thought we were going to get in so much trouble.\"\n\n\"Me too.\"\n\n\"I mean, it would have been different if we had actually been kissing, but she made it up out of thin air.\"\n\n\"Do you know why she did it?\"\n\n\"I don't know,\" Michelle said while shrugging her shoulders, \"maybe she didn't like me or you for some reason.\"\n\n\"Could be. I know she never said a word to me, but that didn't stop anyone from not liking me back then.\"\n\n\"Don't be so hard on yourself,\" Michelle said. She patted his hand affectionately.\n\n\"It's the truth. At least in high school, girls would talk me sometimes.\"\n\n\"I talked to you,\" she corrected him.\n\n\"You were the only one,\" he replied seriously.\n\n\"You were my best friend.\"\n\n\"I was?\" He knew they were good friends, but he never realized she considered him her best friend.\n\n\"Of course, silly,\" she laughed. \"Everyone else at that damned school made fun of me just because I was taller than everyone and had boobs before everyone else.\"\n\nGary's eyes involuntarily shifted to her breasts and then back to her face and he hoped she did not notice. She did have a very nice set of breasts pushing against her shirt, he saw.\n\n\"But you,\" she continued, \"were always so nice to me and I liked you so much because of it. It hurt me that we didn't go to the same high school. I thought you were going to Sheen, but you went to Waddell instead.\"\n\n\"My folks found out they couldn't afford Sheen,\" he explained.\n\n\"I wanted to go to Waddell after my freshman year, but my parents wouldn't hear of it. I just had to go to a Catholic high school,\" she mimicked her mother. \"Oh well,\" she sighed. \"Well, that doesn't matter anymore. We're back in school together and that's what counts. Right?\"\n\n\"Right,\" he agreed. \"But why didn't they want you to go to Notre Dame, St. John's, or some other Catholic college?\"\n\nMichelle laughed out loud. \"They about had a fit when they saw how much it cost. They were very happy when I started to receive scholarship offers.\"\n\n\"But none from any Catholic colleges?\n\n\"No,\" she shook her head.\n\nIt was only around ten-thirty when they left the eatery. They had talked long after finishing their sandwiches and now their tongues were tired and sides were aching from sharing funny stories from their experiences in grade school. \n\nWalking slowly and quietly along the lighted sidewalk to Michelle's dorm, they glanced at each other occasionally and smiled to themselves. It still amazed them both that they found each other again. Michelle was thankful her dorm was a long walk from the restaurant and was also very happy to learn that Gary's dorm was only a few minutes away from hers. \n\nThe wind was still and quiet and the sounds of the university could be heard easily throughout the campus. All kinds of music emanated from the tall brick structures. Students were milling around the grounds looking for a party to go to or any other particular destination. Michelle and Gary reached her dorm quicker than she would have liked, but she was expected to attend a team breakfast early the next morning and she would need to be rested for the match. Michelle never was able to function well on less than 7-8 hours of sleep. Yet, she still wanted to be around Gary and talk some more or just hang around him for a while longer.\n\nGary peered inside the dormitory and saw the time. \"I guess you need to go in,\" he said absently. He too, did not want their time together to end.\n\n\"Are you trying to get rid of me?\" she joked.\n\n\"You know I'm not,\" he answered. He looked again towards the doors. \"Are you getting along with your roommate so far?\"\n\n\"Gina's okay,\" Michelle replied. \"She's a bit loud with her stereo sometimes when I want to study, but she turns it down if I ask her. She's not around too much anyway. She's usually out with her boyfriend or training.\"\n\n\"Training?\"\n\n\"She's on the track team, a sprinter.\"\n\n\"Oh.\"\n\n\"We get along pretty good,\" she said. \"I can introduce you sometime if you like.\"\n\n\"Whenever,\" he shrugged. Looking back at the dormitory, he sighed lightly.\n\nMichelle looked in the same direction as Gary and then to him. \"You know what?\" she asked.\n\n\"What?\"\n\n\"I really don't feel like going in right now. I wouldn't be able to sleep anyway with all the racket that's going on. Why don't we walk around a while longer, if that's okay with you.\"\n\nGary smiled. \"That sounds fine to me.\"\n\nThey walked around the campus for another hour as she showed him different buildings where she had classes. Likewise, Gary showed her some of the buildings where his classes were. They doubted they would ever have the same classes together because of their differing majors; his English and hers, sports management. It could only happen if they conspired to take some electives together, but that would not happen until the fall quarter of their sophomore year. \n\nThey did not really talk too much during this time together, but they enjoyed each other's company just the same. Gary felt very much at ease with Michelle, but still felt it to be weird to be walking with a girl as pretty as Michelle. He kept reminding himself that Michelle was the same person he knew before and that she really did enjoy being with him. \n\nAs they turned to begin their walk back to the dorms, Gary reached over and took her hand, an innocent gesture that caught Michelle by surprise, yet delighted her at the same time. She remembered in grade school when they walked together during recess how she wanted to hold his hand, yet was unable because of the trouble they would receive. Instinct told her Gary was still a bit hesitant being around her, if only because he had not dated before. It had nothing to do with her personally, yet she expected him to be more at ease around her. His small act seemed to be his way of telling her he was ready to be her best friend again.\n\nLeaning over, she said sweetly, \"We won't get in trouble, will we?\"\n\n\"Not unless someone tells on us.\"\n\n\"What if someone does?\"\n\n\"I guess we'll get detention,\" he shrugged.\n\nMichelle laughed and squeezed his hand as they continued to casually stroll through the leaf-covered walks that connected the buildings.\n\nThe walk back seemed to be much quicker and Michelle was disappointed when her dorm came into view. She knew she would not be able to put off going to bed now, not at this hour, and their time together was about to end.\n\nThey reached the steps leading to the front door and stopped. \"I best be getting inside,\" she said as she looked at the door and then back to Gary. \"I'll meet you at the Union at six.\" Her hand still held his.\n\n\"Six,\" he replied while looking at her face. \n\nShe really was a pretty girl. Yet, he remembered her always having a pretty face no matter what her size was. To see her blossom into the knockout she had become through hard work and determination was a neat gift and he was very happy for her. He broke his gaze for a moment to collect his thoughts.\n\n\"I hope you have a great game tomorrow,\" he said suddenly.\n\n\"Thanks,\" Michelle replied. \"I probably won't play much, but we'll see. We shouldn't have too much trouble beating them.\"\n\n\"I guess I better let you go,\" Gary said reluctantly. \"You'll need your rest.\"\n\n\"Yeah,\" Michelle said. She really did not want to go, but she knew she must. She squeezed his hand once more before pulling him close and hugging him. \"I'm so glad we met up again,\" she said softly in his ear.\n\n\"Me too,\" he replied as he hugged her back. Without thinking, he kissed her cheek.\n\nMichelle pulled back slowly and touched her cheek where he kissed her. At first, Gary thought he offended her, but then, he saw her smile.\n\n\"That was really sweet, thank you,\" she said before turning and leaving him at the steps.\n\nII.\n\nThe next morning, Gary wondered if Michelle had as much trouble sleeping as he did. It was not the noise of the dorm throughout the wee hours of the morning that kept him awake, but the swirling thoughts of Michelle going through his head. Sleep finally did come to him a few hours after he tumbled under the covers, but it was a restless, dream-filled sleep which left him tired after he awoke to the annoying buzzing sound of his alarm.\n\nHe normally did not set his alarm during the weekend, but he had made up his mind before going to bed to give up his tickets to the football game and watch Michelle's volleyball match. He knew very little about volleyball, but seeing her was on his mind. After showering, Gary dressed quickly and went down to the lobby of his dormitory where he looked on the bulletin board where students posted their name and number if they wanted tickets. With his cell phone in hand, within fifteen minutes he sold the tickets at face value to two grateful students.\n\nHe returned to his room and debated as to go back to sleep or stay up. He would have called Michelle, but he did not have her number. Plus, she had said the team was having a breakfast together that morning. Instead, he called the box office and reserved a ticket for himself.\n\nAt twelve-thirty, he left the dorm and made his way to St. John's Arena where the team would play Bowling Green. He did not expect a big crowd because of the football game and he was correct in his assumption. There were maybe one thousand to fifteen hundred fans in attendance. As he settled in his seat, approximately twenty rows behind OSU's bench, warm-ups concluded and the starting lineups were introduced. Gary saw Michelle standing with her teammates in their gray uniforms and red trim. Her blond hair was tied in a pony tail with a red band and she stood and listened to her coach give final instructions. \n\nAs she expected, Michelle did not play a whole lot, but she contributed three kills and a couple of blocks as a substitute. OSU won easily, but that mattered little to Gary. He watched Michelle's every move while she was on the court. If he thought she looked good in her jeans the night before, he was amazed at how good she looked in her uniform shorts. He was unabashedly mesmerized by her toned legs and imagined she would cut a stunning figure in a swimsuit.\n\nAfter the match, he made his way down to the locker room area and waited with parents, boyfriends, and others for the players to emerge. When she came out, she saw him immediately and gave him a light hug.\n\n\"What are you doing here?\" she asked. \"I thought you were going to the football game.\"\n\n\"I changed my mind. I wanted to see you play.\"\n\n\"You certainly didn't see much.\"\n\n\"I thought you played really well, although I don't know much about volleyball.\"\n\n\"I'm really glad you came....\" Someone caught her attention as she looked away from Gary.\n\n\"Hi mom! Hi dad!\" She waved to a couple who were making their way through the crowd. She looked back to Gary. \"It's my folks. They usually drive down for home games.\"\n\n\"Oh.\"\n\nMichelle moved away from Gary and hugged a smartly dressed couple. Although they were diehard University of Michigan fans, they both wore nondescript red sweaters. Michelle pulled them towards Gary and said, \"Mom and dad, this is Gary Buchanan. We went to St. Augustine's together and we met each other again at a party last night.\" She gestured to Gary. \"Gary, this is my mom, Olivia, and my dad, Frank.\"\n\nGary stuck out his hand and shook Frank's hand. \"Pleased to meet you, Mr. Mayfair.\"\n\n\"Call me Frank,\" he instructed as he returned the handshake.\n\nOlivia said, \"Pleased to meet you, Gary,\" but made no motion of extending her hand. Instead, she eyed him warily.\n\n\"Pleased to meet you, ma'am,\" Gary replied.\n\n\"Did you attend Archbishop Sheen with Michelle?\" Olivia asked.\n\n\"No ma'am,\" he replied. \"I went to Waddell.\"\n\n\"Oh,\" she said with just a hint of snootiness as she duly noted his torn jeans and well worn sneakers.\n\nGary noticed the tone, but ignored it. \"How did you like the match?\" he asked Frank.\n\n\"We were hoping to see Michelle play more, but they won and that's the main thing,\" he answered. \n\nSeveral thoughts were running through Gary's mind. He knew he did not want to be there with her parents, yet he wanted to stay and talk to Michelle for a while longer.\n\n\"We were hoping to have some lunch with you before we headed home,\" Olivia said pointedly to Michelle.\n\n\"Sure, that would be great,\" Michelle replied. She looked to Gary, then to her mom. \"Can Gary come, too?\"\n\nThe look that flashed across Olivia's face for but a brief second told Gary all he needed to know. Although it disappeared quickly, the sour look told him he was not welcome.\n\n\"Well, I...\" Olivia began.\n\n\"That's okay, Michelle,\" Gary interrupted. \"I have a paper to write before we go out tonight. I need to get started on it.\" He looked at her and hoped she understood. Gary checked his watch and saw it was almost three-thirty. \"Do you want to back up our date to seven so you can have some time together?\"\n\n\"No,\" Michelle answered as she seethed inside. She, too, had seen the look on her mom's face. \"We have plenty of time. Six is fine.\"\n\n\"Okay,\" Gary said. He looked to her parents. \"It was nice meeting both of you.\"\n\n\"Same to you,\" Frank replied. Olivia remained silent as she thought of Michelle dating the boy in front of her.\n\nMichelle took Gary's hand and squeezed it lightly. \"Thanks for coming. It was a very nice surprise. I'll see you at six.\"\n\n\"See you later.\" Gary looked into her brown eyes and managed a small smile. He took one final glance at her parents before letting go of Michelle's hand and disappearing into the crowd.\n\nMichelle turned back to her parents and asked, \"So, where do you want to go for lunch?\"",
        "Her mom was not going to have any of that, though, when she said, \"I can't believe you're going on a date with him.\"\n\n\"What?\" she asked, astonished at her mother's tone. \"Yes, I'm going on a date with him. What's wrong with that?\"\n\n\"Look at how he was dressed. Thrift stores have better clothes than what he was wearing.\"\n\n\"Mom,\" Michelle rolled her eyes, \"all college guys dress like that. I'm sure if he knew he was meeting you, he would have worn a tux,\" she added sarcastically.\n\n\"You said he went to St. Augustine's?\" her father asked.\n\n\"Yes.\"\n\n\"Why didn't he go to Sheen? Couldn't his parents afford it?\"\n\n\"I don't know,\" she lied. \"I think he just wanted to go to Waddell. Heck, I wanted to go to Waddell after freshman year, but you wouldn't let me.\" Michelle was really starting to get agitated with their questions, or rather, the nature of them.\n\n\"Sheen is a much better school, academically, than Waddell,\" her father explained.\n\n\"That's funny, because Gary is here on an academic scholarship,\" Michelle retorted.\n\n* * * * *\n\nMichelle arrived at the Union promptly at six and searched for Gary. It was not too crowded and Michelle did not expect it to be. There were a lot of parties being held for their football team's win that afternoon, although no one really needed any type of excuse to throw a party. After scanning the room for a few seconds, she spotted him in the lounge watching a football game. As she ambled her six foot one inch frame over to Gary, he was so engrossed in the game he didn't notice her presence. When she tapped him on his shoulder, he nearly jumped out of his skin. He looked up quickly and saw her looking at him.\n\n\"Holy crap, Michelle! You scared me,\" he exclaimed.\n\n\"Why?\" she asked. \"I can't be that bad looking,\" she teased.\n\n\"No, no, no,\" he said, shaking his head back and forth. \"I just wasn't expecting you, yet.\"\n\n\"What?\" she exclaimed. \"You mean you weren't watching every second for my appearance. I expect that out of my dates, you know.\"\n\n\"You said you didn't go out on dates in high school.\"\n\n\"I did say that, didn't I?\"\n\n\"You did.\"\n\n\"Well, let's just say it's what I expect from you.\"\n\n\"Thank you for clarifying that.\"\n\n\"My pleasure.\" Michelle sat down on the sofa next to him. \"So, what are you watching?\"\n\n\"A football game.\"\n\n\"No shit? I thought it was a badminton match in pads and helmets. Who's playing, you twit?\"\n\n\"UCLA and Oregon State,\" he replied, smiling. He liked being teased by her. He looked at her and noticed she had changed into slacks and a blouse from the jeans and t-shirt she was wearing after the match. She looked very pretty and appeared to have fixed her hair a bit. It was away from her face in soft curls. To his credit, he was wearing newer jeans and a dress shirt.\n\n\"Any score?\" she asked.\n\n\"17-13.\"\n\n\"Who's winning?\"\n\n\"17.\"\n\n\"Smart ass!\" she said while punching his arm lightly. She was happy to see that he seemed to be a lot looser and carefree with her than the previous evening. \n\nHe smiled at her. \"So, how was lunch?\"\n\nMichelle thought carefully for a few seconds before answering. It had not gone well as her parents constantly picked at her about Gary. If it was not the social status of his parents, it was the way he dressed. If it was not the way he dressed, it was his looks. If it was not the way he looked, it was his major. The list went on and on.\n\n\"It was okay,\" she shrugged.\n\n\"Not too great, eh?\" he asked intuitively.\n\n\"No,\" she agreed, \"not too great.\"\n\n\"I hope I wasn't the cause of it.\"\n\n\"Don't you worry about it,\" she replied. She patted his hand. \"So, what's playing tonight?\"\n\n\"A movie,\" he teased.\n\n\"Alright, enough of that. That stuff drives me crazy. What movie is playing?\"\n\n\"50 First Dates.\"\n\n\"You're kidding!\"\n\n\"Nope.\"\n\n\"How appropriate, since it's our first date, you know.\" Michelle said sweetly, batting her eyes.\n\n\"And I guess I'm supposed to have that ingrained in my memory from now on,\" Gary replied\n\nMichelle nodded. \n\nHe rolled his eyes. \"I'll note it in my diary,\" he said sarcastically.\n\n\"Of course you will.\"\n\n\"I guess you're not hungry after just having lunch,\" he said, changing the subject. Gary was starving, but did not want to eat in front of her if she was not hungry.\n\n\"No,\" she admitted, \"but I'll have a salad or something light if that's okay.\"\n\n\"Yeah, that's fine with me. Are you ready?\"\n\n\"Sure.\"\n\nGary stood up first and extended his hand to her, which she took and he helped her to her feet. They left the Union and began the mile walk to the off campus eateries. It was much colder than the previous evening and Michelle shivered slightly from it. Gary had already taken her hand by then and they walked close together in the chilly night.\n\nAfter about fifteen minutes, they came to a main thoroughfare with many restaurants lining the streets. \"Do you like Chinese?\" he asked as they waited at a crosswalk.\n\n\"Love it,\" she replied.\n\n\"I know just the place.\"\n\nHe led her a few blocks further until they reached a small, out of the way restaurant named, \"The Wah Fu Palace\". A palace, it was not, for it seated only fifty or so people. Gary had eaten there before and really liked it. It was only moderately crowded when they entered and they had no trouble finding a place to sit. \n\nThe restaurant was small and quaint with Chinese lanterns overhead and red tablecloths on each table. It was owned and operated by a family of six and had done very well in its thirteen years of existence. The university patrons liked their food and their price.\n\n\"You're pretty quiet tonight,\" Michelle remarked as they waited for their food to arrive. He had been relatively quiet during their walk to the restaurant and while they were seated.\n\nGary shrugged. \"Sorry, I don't mean to be.\"\n\n\"I don't mind. Really. I thought maybe something was up.\"\n\n\"No, not really. I guess I should be a chatterbox being on a date with you.\"\n\n\"Oh, God. No!\" Michelle laughed. \"That would be so unlike you. You've always been the quiet type. I can't see you talking a lot, unless of course you were high on something.\"\n\n\"I don't do that,\" he replied seriously.\n\n\"I wasn't implying you did.\" Michelle sighed and looked down for a moment. He seemed to have something on his mind, but she really did not know him well enough to pry.\n\n\"I know you weren't,\" he said quickly. \"It's just that, sometimes, I don't have anything to say. I'm not any good at small talk and I don't say things just to have some noise coming out of my mouth.\" He smiled sheepishly. \"Like I said, I should be talking my head off being with you and having a date.\"\n\nMichelle giggled. \"I don't want you to say stuff just to be talking. I want you to be yourself, Gary. That's what I've always liked about you.\"\n\n\"I guess I can do that,\" he smiled. \"So,\" he announced, \"what do you want to talk about?\"\n\nMichelle could only shake her head and smile at her date. \"You're crazy.\"\n\n\"Oh yeah? What was your first clue?\"\n\nAfter a very nice dinner, they made their way back to campus. True to his word, Gary spoke only when he had something to say or when he answered Michelle. She did not seem to mind at all and had no problem with their lack of conversation at times. Gary was quite grateful for that and simply enjoyed being with her. He did think about how they lost track of each other during their high school years and internally chastised himself for it, but it seemed as if they had not lost a beat in their friendship. In fact, he thought they were perhaps a lot closer than they ever had been in grade school, a no small feat considering they had only seen each other for about 24 hours. It did bother him that her parents did not seem to like him very much and he sensed they thought him to be beneath their daughter socially. Obviously, it did not matter to Michelle and he was happy for that. Of course, he thought he could have made a better impression if he was dressed a little better, but he had no idea it would mean that much to them, plus he did not know he would be meeting them in the first place.\n\nThey arrived at the Union about a half hour before the movie was to start, but they bought their tickets and sat down inside the theater anyway. As the movie started, Michelle took Gary's hand and held it throughout the feature. It was not anything overt or obvious, but Gary enjoyed her touch as much as he enjoyed the movie. At one point, she laid her head against his shoulder for a few minutes, something that surprised him quite a bit. She did not rest it there very long, but it was long enough for him to take in her faint perfume and the scent of her freshly shampooed hair.\n\nBy the time the movie ended, it was near midnight and Michelle was tired. Gary was quite awake still, but he could tell from the look of her eyes how fatigued she was.\n\n\"Time for you to get to bed,\" he remarked as they stepped into the chilly night once more.\n\n\"Yeah,\" she yawned, partly from sleepiness and partly from the cold. \"I really liked the movie. Thanks for asking me.\"\n\n\"You're welcome,\" he replied.\n\nThey walked silently for a few minutes until their dorms came into view. As they neared the steps of Michelle's dorm, they slowed to a stop.\n\n\"So,\" Gary said as he turned to her, \"how did I do for a first date?\"\n\n\"You did just fine,\" she answered softly. \"Of course, I'm no expert on dating.\"\n\n\"Me neither.\"\n\n\"We'll have to do this again,\" she said as she squeezed his hand.\n\n\"I'd like that. Can I have your number? I promise not to make a pest of myself.\"\n\n\"You couldn't be a pest to me,\" she laughed. She rummaged through her purse until she found a pen and scrap piece of paper. She wrote down her number and handed it to him. \"My cell number's there, too.\"\n\n\"Thanks,\" he said as he folded the paper and shoved it into his jeans pocket. He looked at her again. \"I know week nights are pretty much out as far as seeing each other, but would you like to maybe meet at the library and study together sometime?\"\n\n\"I'd like that very much. I hate studying by myself.\" She looked to the door briefly as she was dreadfully tired. She did not want the evening to end, but she really wanted to sleep.\n\n\"You better get in,\" he said quickly. \"I don't want to have to carry you up to your room.\"\n\nMichelle giggled tiredly. \"No, we wouldn't want that. Give me a call around noon tomorrow and maybe we can have lunch or do something if you're not too busy.\"\n\n\"I have a little studying to do, but I can break away for lunch.\"\n\n\"Great.\" She shifted uneasily. \"Well, I better get to bed. I really enjoyed tonight.\"\n\n\"Me too.\"\n\nMichelle pulled him close and hugged him tight before kissing him on the cheek. \"I'll see you tomorrow.\"\n\n\"Okay,\" he replied before releasing her. \"Noon?\" he asked.\n\nShe nodded her head as she released his hand, her hand instantly cooling from the chilly air. Puffs of steam came from her lips that had just a second before touched his face. Michelle blushed as she silently wished to have placed her lips upon his own instead of only his cheek. She prayed he would not notice.\n\n\"Goodnight Shelley,\" he said quietly.\n\nMichelle's head snapped to attention from the nickname he had called her. It had always been his special greeting to her in grade school and he was the only one ever allowed to call her that. The sound of it brought a smile to her face.\n\n\"You remembered,\" she said.\n\n\"It kind of slipped out,\" he replied sheepishly. It really had come out by accident. He did not know what made him say it.\n\n\"I always liked it when you called me that.\"\n\n\"Maybe I'll continue.\"\n\n\"I hope so. Goodnight Gary.\" Michelle turned slowly and began to ascend the stairs to the door. She turned back once more, but by then, Gary was already making his way to his own dormitory.\n\nIII.\n\nAs October turned into November and Thanksgiving approached, Gary and Michelle continued to see each other as often as possible, which was not very much during the week. With their differing schedules, plus Michelle's volleyball matches, the weekends seemed to be the only time they could get together. Gary's parents had been pestering him to come home for a weekend, but he did not want to waste a weekend not seeing Michelle. She had become an important part of his life at that point and he knew he would be spending time with his family over the holidays. He mentioned nothing about her during their phone conversations and he merely told them he was busy or had a lot of studying to, which really was not too far from the truth.\n\nOn the other hand, Michelle's parents continued to bug her about dating Gary. Of course, this infuriated Michelle and only made her more resolved to date Gary. She grew up knowing her parents could be snobbish at times, but even still, this was a puzzle to her. She thought they would be happy she was dating someone who really cared about her and treated her with respect, but that was not the case.\n\n\"I'm sure there are many handsome men on campus who would love to date you,\" they had said on more than one occasion.\n\n\"I'm already dating someone and I have no interest in dating someone else, no matter how handsome they are,\" she replied cooly.\n\n\"I just don't understand it, Michelle,\" her mother replied, trying another tactic.\n\n\"You probably never will,\" was Michelle's answer.\n\nMichelle would cut short any conversation which had anything to do with Gary or dating because it would always end up with an argument. She had allies in her two older sisters, both unmarried, who thought their parents' views about Gary ridiculous. Stephanie, 22, was a senior at Western Michigan and Katie, 20, was a sophomore at the University of Detroit. Michelle found herself confiding in them more and more as her frustration with her parents grew. She was almost dreading the holidays because she sensed there would be no pleasing them whenever the conversation turned to Gary, and she knew his name would come up. At least her sisters would be there. She could count on them.\n\nIt was Stephanie and Katie who picked up Michelle that final Friday before Thanksgiving, a few hours after her last class. Both had been home from school a few days beforehand and volunteered to drive to Columbus. Neither had been to Ohio State, but the main reason was to meet Gary. His father would not be able to pick him up until the next day because of a scheduling conflict, so Michelle figured they could all have a late lunch together before heading home.\n\nBy the time they arrived, Michelle's roommate had already departed for her home in Virginia. Michelle greeted them with hugs when they came to her door before she let them in. \n\n\"It's so good to see you guys!\" she exclaimed as she shut the door behind her. She hugged them both again. \n\n\"I missed you, sis,\" Stephanie said. She was Michelle's height, but was in constant turmoil with her weight. No matter how hard she exercised or how careful she was with her diet, she was never able to maintain a weight that satisfied her. Though not as pretty as her youngest sister, she had an engaging smile, made friends easily, and never was at a loss for male companionship.\n\n\"So, where's this handsome hunk of manhood you've been raving about?\" Katie asked. Katie looked nothing like her sisters and no one would guess they were related. Short, thin, and a bit on the plain side, Katie had always been self-conscious about her looks and was constantly looking for ways to make herself more attractive. She dated infrequently and had almost resigned herself to think she was never meant to marry.\n\n\"He's waiting for you guys to show up so we can eat. He's not going home until tomorrow. His dad has to work late and his mom's got stuff she has to do.\" Michelle looked at her luggage that was on her bed. \"I'm packed, so we can leave after we eat.\"\n\n\"Great,\" said Stephanie. \"Let's meet him and get some lunch. I don't know about you, but I'm starving.\"\n\n\"Me too,\" added Katie.\n\n\"Let's go, then,\" Michelle replied. After she locked the door, they made their way over to the Union where Gary was to meet them.\n\nThey greeted Gary warmly when they met him in the lounge before they went to The Sandwich Shoppe for their lunch.\n\n\"I remember you from St. Augustine's,\" Katie remarked once they were seated. \"I never would have known you from seeing you now.\" \n\n\"Yeah, I guess I've changed quite a bit. Michelle said practically the same thing.\"\n\n\"Michelle says you're an English major. So, what do you want to be when you grow up?\" Stephanie teased, her bright smile telling him she approved of him dating her sister.\n\n\"I want to use big words so you won't know what I'm talking about!\" he shot back.\n\n\"Oh, we've got a live one here, Katie,\" Stephanie said, laughing. \"He's pretty quick, Michelle.\"\n\nMichelle laughed, too, while looking at Gary. He was smiling and very much enjoying the company of the three sisters. He and Michelle had made tentative plans to get together over their break, but a lot would depend upon family plans and the like.\n\n\"Seriously,\" Stephanie said, \" what are your plans after college?\" She liked Gary already and was very happy for her sister.\n\n\"I want to teach,\" Gary replied. \"I'll get my master's degree and then I'll think about a doctorate. We'll have to see.\"\n\n\"Grade school? High school?\"\n\n\"Probably college,\" he answered. \"I don't know if I can have the patience for high school kids.\"\n\n\"I see your point,\" Stephanie said. \"I know I couldn't stand English classes in high school.\"\n\n\"I liked English,\" Katie said.\n\n\"That's only because you were hot for Mr. Walkerton,\" Michelle said. He was Katie's teacher.\n\n\"Was not!\" Katie replied hotly.\n\n\"Oh, come on, Katie,\" Stephanie said. \"He's all you could talk about the first few weeks of class.\" She looked at Gary. \"It's the only time she ever got A's in English.\"\n\nKatie turned beet red from embarrassment. \"I got A's before,\" she protested.\n\n\"Not like you did in his class,\" Michelle reminded her.\n\n\"Can we change the subject?\" Katie said.\n\n\"What's your major?\" Gary asked Katie before he sipped on his drink.\n\nGrateful for the change, she replied, \"Engineering.\"\n\n\"Well, you certainly don't need English for that,\" he laughed.\n\n\"No, but I still have to take it.\"\n\n\"Yeah, but it's not much different than high school. You're just writing more papers, that's all,\" he said.\n\n\"True,\" Katie replied, \"but I still don't like it.\"\n\n\"You would if Walkerton was teaching it,\" Stephanie chided.\n\n\"Alright, alright,\" Katie rolled her eyes. \"Can we please get off this subject?\"\n\nThey went back to eating and drinking. Gary found out Stephanie was a music major, played the cello, and planned to join a symphony orchestra upon her graduation the following May. She had already had several auditions in and around Detroit, but no offers as of yet.\n\nBoth sisters really liked Gary. That was quite evident as they peppered him with questions and barely let Michelle say a word to him. For his part, Gary was enjoying the attention. He found it very easy to talk to them and barely noticed how fast the time was going.\n\n\"I need to hit the bathroom,\" Stephanie announced suddenly when everyone was finished with their meal. She looked at Michelle and tilted her head in such a way to let her know she wanted company in the restroom.\n\n\"Me too,\" Michelle said, receiving the hint and pushing back her chair. Saying nothing, Katie pushed her chair back as well.\n\n\"Don't worry,\" Stephanie said to Gary, \"we won't talk about you too much.\"\n\n\"No, not much at all,\" Katie interjected.\n\nMichelle grinned and tapped his arm. \"We'll be back soon.\"\n\n\"I don't believe any of you,\" Gary said as he smiled back at Michelle. He had hoped to have some time with Michelle before they left, but it was getting late and he knew they would want to leave soon.",
        "\"I didn't think you would,\" Michelle laughed. With that, all three turned and left Gary at the table.\n\nWhen they got to the restroom, Stephanie turned to Michelle and exclaimed, \"He is so sweet! Whenever you get tired of him, I want him.\"\n\n\"You can't have him!\" Katie pouted. \"He's closer to my age anyway. I get him next.\"\n\n\"No one gets him,\" Michelle said emphatically. \"He's mine and I'm not going to get tired of him.\"\n\n\"He is a sweetie,\" Stephanie reiterated. \n\n\"If you weren't dating him, I'd grab him,\" Katie said.\n\n\"You two are impossible,\" Michelle said shaking her head while making her way to the door once again. \"If you'll excuse me, I want some time with him before we leave.\"\n\n\"That's what I wanted to talk to you about,\" Stephanie said as she grabbed Michelle's arm. \"What do think if we drove him home? I mean, he doesn't live far from us, it would save his family a trip, and you guys could have some time together.\"\n\nMichelle's eyes widened at the idea. \"That's a great idea, Steph! I'll see if he wants to do it.\" She hurried back to the table to Gary, who was finishing his drink.\n\n\"Back so soon?\" he said.\n\n\"Stephanie had a great idea,\" she said excitedly as she sat down. \"How would you like to drive back with us? We have plenty of room and you wouldn't have to wait for your dad and they wouldn't have to make a trip to get you. What do you say?\"\n\nGary did not need a second for his response. \"It sounds fantastic, but I'll have to call my mom and see if they don't mind me traveling with three women.\"\n\n\"You don't have to say you're driving with three women,\" Michelle said. \"Just tell her you're driving with some friends.\"\n\n\"I could do that.\" He reached into his pocket and pulled out his cell phone. By this time, the other two were approaching the table.\n\nGary had nothing to fear when he called his mom. She knew his dad would be thrilled at not having to travel to Columbus to pick him up. She told him to have a good time and be careful before they ended their conversation.\n\nAs he closed the phone, he said, \"It's all done. It's fine with her.\"\n\n\"Let's get going then,\" Michelle said.\n\nIt only took Gary a few minutes to finish packing his last minute items and he met Michelle and her sisters at her dorm about a half hour later with two suitcases, his laptop and accessories, and a partially full clothes bag.\n\n\"I'm already packed,\" Michelle said when she opened the door to let him in. Looking at his luggage, she said, \"We should have met you downstairs so you wouldn't have had to bring that stuff up here.\"\n\n\"Too late now,\" he said, shaking his head. He was only slightly out of breath.\n\nAfter she locked the door, they made their way down to her parents' station wagon and packed Gary's gear. Katie and Stephanie occupied the front seat while Michelle and Gary sat together in the back seat.\n\n\"Keep your hands where I can see them,\" warned Stephanie as they began their trek home. Michelle only smiled and took Gary's hand in hers.\n\nThe time seemed to fly because there was rarely a quiet moment as all four bantered back and forth. Usually a quiet person who enjoyed listening to conversation rather than actively participating, Gary joined in quite often and enjoyed the trip immensely. He liked Michelle's sisters very much and thought to himself he would not mind dating either one of them if he and Michelle were not such good friends already.\n\nBefore they knew it, they were within Detroit's limits and Gary directed Stephanie to his house, which was but a few miles from their own. After they pulled into his driveway, he thanked them for a great time before he emptied his gear from the back of the car. Michelle stood with him and shut the tailgate after glancing at the front door of his house. It was open and his mom was eyeing them curiously.\n\n\"Call me and we'll get together during the week,\" she said earnestly.\n\n\"You can call me, too, you know,\" he replied. \"Maybe we can hit a movie or something. Steph and Katie can come, too, if they want. I don't mind.\"\n\n\"I know you don't mind,\" Michelle said accusingly while poking him in the chest. She laughed. \"They like you a lot,\" she said softly.\n\n\"They're really nice,\" Gary said, \"but I like you a lot better.\"\n\n\"You better say that,\" Michelle giggled. \"I just want a day or night to ourselves, okay?\"\n\n\"I'd like that.\"\n\nMichelle reached down for his laptop bag and said, \"Come on, I'll help you with this stuff.\"\n\n\"You don't have to. I can get it.\"\n\nShe ignored him and picked up the narrow, black bag. He picked up the other two suitcases and his clothes bag and he led the way to the front door. His mom opened the door for them and let them pass into the foyer. As soon as he put down his luggage, he moved to his mom and hugged her.\n\n\"Missed you, mom,\" he said after he planted a kiss on her cheek.\n\nEyeing Michelle, she said, \"I can see why you didn't want dad to pick you up.\"\n\nLaughing nervously, Gary said, \"Mom, this Michelle Mayfair. We went to St. Augustine's together and we met up last month at a party.\" He looked at Michelle and gestured. \"Michelle, this is my mom, Cheryl.\"\n\n\"Pleased to meet you, ma'am,\" Michelle said.\n\n\"Same to you, Michelle. Thanks for bringing Gary with you, although I don't know why he didn't want to wait for his dad,\" she added, tongue firmly planted in her cheek.\n\nGary turned a bit red at that remark\n\n\"I didn't mind at all. You guys live only a few minutes away,\" Michelle explained.\n\nTo Gary, Cheryl said, \"You better get those dirty clothes downstairs so I can wash them tomorrow and take your other stuff upstairs before someone trips on them.\"\n\n\"I better get going,\" Michelle said. \"Mom and dad will be wondering why I'm not home.\"\n\n\"You don't have to run off, hon,\" Cheryl said. \"I just want Gary to get his things put away, that's all.\"\n\n\"No, I really must get going. My sisters are waiting for me.\" It slipped out before she could stop it.\n\n\"Your sisters?\" Cheryl asked, her eyebrows raised. She looked at Gary again. \"Now, I really know why you didn't want to wait for dad!\"\n\nGary shrugged and grinned sheepishly. \"Come on, I'll walk you out,\" he said to Michelle as he touched her elbow.\n\n\"It was nice meeting you,\" Michelle said over her shoulder as Gary tried to lead her quickly out the door.\n\n\"Same to you, Michelle,\" Cheryl called back before the door closed.\n\nMichelle burst out laughing as they walked back to the station wagon. \"You should have seen your face. It turned so red!\"\n\n\"It's not that funny. Why did you have to say anything about your sisters? Now, I'll have to answer a thousand questions when I get inside. Thanks a heap!\" He shook his head from side to side.\n\nThey reached the car door and Gary opened it for her. Michelle lingered at the frame momentarily and studied Gary for an instant. For the strangest reason, she had the distinct urge to kiss him. Not a friendly peck on the cheek as she had only done previously, but a sweet, slow, lingering lip lock..... She was liking him more and more and really wanted to show him how she felt, but she had to let the moment pass. Instead, she gave him a kiss on the cheek and smiled sweetly before settling in the seat. It was a moment lost, but she hoped the next opportunity would not slip by.\n\n\"Call me,\" she said again.\n\n\"I will,\" he replied before closing the door. He could still feel the moistness on his cheek as the three sisters drove out of sight. He always loved her soft, feathery kisses against his skin and he enjoyed kissing her back in kind. Her skin was so soft and she always smelled great. 'Someday,' he thought, 'someday I hope we kiss for real.' With that thought in mind, he turned and headed for the house to face his mom's interrogation.\n\nIV.\n\nIn actuality, his mother's questions were brief, to the point, and relatively painless. She was pleasantly surprised to find they were dating, if but casually. She had often worried about him in high school because of his infrequent dating habits and hoped his social life would improve once he went to OSU. Cheryl knew that having a girlfriend was not the be all and end all of going to school, but she wanted him to be happy, remembering his dark moods when he was turned down for dates in the past.\n\nIn the days that followed, Gary called Michelle frequently but they were unable to get together because of one reason or another until the day after Thanksgiving. Michelle's parents were starting to ease up on her about Gary after Stephanie came to her defense during a discussion.\n\n\"Can't you see she's happy with him?\" she had said. \"He's a great guy besides. What's wrong with that?\" she demanded.\n\n\"We think she could do better,\" her mom tried to explain.\n\n\"Do better?\" Stephanie squealed. \"He's smart, he's athletic, and he's not stuck up. What else does he need to be?\"\n\nWhatever happened, it seemed to ease the tension and Michelle was grateful for that. She briefly thought of asking him over for dinner, but thought better of it. She did not want to push her luck. Instead, he picked her up and they had a very nice dinner at a local Italian restaurant. It was a small, neighborhood eatery which Michelle had been to, but it had been a very long time ago. They did not talk too much since their phone conversations had been quite lengthy, but they told each other about their holiday with their families and enjoyed each other's company thoroughly.\n\nThey had not made any permanent plans for after their dinner, so Michelle suggested they go to a mall and look around. Gary was not too thrilled about the idea since he did not like crowds, especially the day after Thanksgiving Christmas sales throng, but he agreed nonetheless. \n\nHand in hand, they strolled aimlessly, stopping in a few stores here and there but not buying anything. \"So,\" Michelle said after they left a bookstore, \"what do you want for Christmas?\"\n\n\"I don't know,\" he replied. \"I hadn't given it much thought.\"\n\n\"Really?\"\n\n\"Yeah. I mean with school and all, I haven't had time to think about that stuff. I don't even have any idea what to get my parents nor Chrissy, either.\" Chrissy was his younger sister.\n\n\"You know what I want?\" she asked as they came to a stop on the outskirts of the food court.\n\n\"I don't have the foggiest...\"\n\n\"You under mistletoe,\" she smiled.\n\nTake aback slightly in surprise, Gary scuffed his shoe against the tiled floor nervously for a second or two. \"That can be arranged,\" Gary replied softly with a sly grin. \"I'd like that a lot.\"\n\n\"Hey!\" she protested. \"That's supposed to be my gift.\"\n\n\"But why can't you being under a mistletoe be my gift?\" he asked.\n\nMichelle laughed lightly. \"I guess it can be our gift to each other, then. Okay?\"\n\n\"Sounds great to me,\" he agreed.\n\nThey continued to walk around the large mall for a short time before Michelle stopped once more and faced him.\n\n\"Speaking of kissing,\" she began, \"have you ever kissed a girl before?\" She was looking at him seriously.\n\n\"I didn't know we were talking about kissing.\"\n\n\"Well, what do you think people do under the mistletoe? What do you think we'll do under the mistletoe?\" she asked sweetly batting her eyes.\n\nGary turned a bit red from embarrassment and did not say anything for a few seconds. He said in a low voice, \"Do my aunts or cousins count?\"\n\n\"No.\"\n\nHe shook his head slowly. \"No, I guess I haven't. Have you kissed any guys?\" He looked at her for her reply.\n\n\"Nope,\" she said, \"the same as you.\"\n\n\"Oh.\"\n\n\"You know what, though?\" she asked.\n\n\"What?\"\n\n\"Real soon, I'd like to kiss you. I mean that,\" she added seriously.\n\nGary smiled. \"I'd like that. I'd like that a lot.\" He looked around at the crowded mall nervously.\n\n\"Oh God!\" she exclaimed with a look of horror on her face. \"Not here,\" she giggled. \"I don't want to kiss you here. I want it to be private.\"\n\nGary exhaled with relief. He certainly did not want to share their first kiss with a couple hundred people gawking at them. He squeezed her hand and began to walk again. \"Good,\" he said in a low voice, \"I'm glad.\" He then pulled her close and hugged her to his side without missing a step. He tried to hide his nervousness as they walked, but he was afraid she would figure him out.\n\nA few minutes later, they stopped in the middle of the mall and sat down on a bench that was unoccupied. Gary put his arm around Michelle's shoulder and smiled. \"This was a good idea,\" he conceded. \"I like walking around with you.\"\n\n\"I like it, too,\" she agreed. Michelle hesitated for a brief instant. \"I'm really glad we met each other again,\" she added.\n\n\"So am I.\" He stared out into space for a few seconds as Michelle eyed him curiously. He shook his head and looked back at her. \"Sometimes, I wonder if we ever would have come across each other again if we hadn't been at the same party.\"\n\n\"I don't want to think about that,\" she shuddered. \"We met again and that's all that counts.\" She squeezed his hand tight before resting her head against his shoulder. \"Besides,\" she said, \"somehow, I think we were meant to be together.\"\n\n\"How so?\"\n\nMichelle raised her head, straightened slowly and stared at Gary. Without a word, she stood and took his hand. Puzzled, Gary followed her as they left the mall through the main entrance even though his car was in the back on the other side.\n\nThe November wind was light, but it still chilled them as they walked away from the warmth of the mall. They walked down the lighted concourse silently hand in hand for several minutes as Gary wondered what was on Michelle's mind. It was in front of the entrance to an eye care store where Michelle slowed to a stop and sighed as a small puff of steam escaped her mouth. Her eyes studied his face and it seemed as if she were trying to decide if she should continue or not.\n\n\"I didn't want to be around a lot of people back there,\" she began, her words slow and carefully chosen. \"Back at St. Augustine's, you were one of only a few people who never made fun of me. You were a real, true friend and I could always count on you to be nice to me and like me for who I was.\"\n\nGary sensed she was about to say something that was really important to her, but he had no idea what was truly on her mind.\n\nMichelle shrugged. \"When we went on to high school, I guess I expected you to call me sometime, but you didn't.\" She raised her hand and quickly added, \"I'm not blaming you or anything. I just guess I really wanted you to call. I was really disappointed when you didn't. I should have called you, but I was scared.\"\n\n\"Scared of what?\" he asked.\n\n\"Scared of you rejecting me.\"\n\n\"I never would have.\"\n\n\"I know. I figured you had a girlfriend and wouldn't have time to talk to me or be around me.\"\n\n\"But, I didn't....\"\n\n\"I know you didn't, but that was what I thought.\" She crossed her arms and walked a few steps away. \"What I'm trying to say is, I never forgot you, Gary. You were that special to me.\" She laughed softly. \"Just when I hadn't thought about you in a long time, I saw your name on the list for the party. I couldn't believe it. All those years and now we're dating!\"\n\n\"I liked you a lot back then,\" she continued, \"and as silly as it sounds, I think I maybe even loved you.\"\n\nGary stood dumbfounded and could not speak. After a couple of seconds, Michelle stepped back to him and smiled. \"The funny thing is,\" she said softly, \"I know I love you now. I love you, Gary.\"\n\nWithout waiting for a reply, Michelle moved forward and hugged him fiercely, her cheek against his face. Instinctively, Gary held her close as a million and one thoughts raced through his mind. He had no idea she felt this way. He knew they liked each other a lot, but he did not love her. He was not in love with her. The thought of loving her and being loved by her exhilarated him, but he did not want to hurt her by not being on the same level as she was.\n\nTheir embrace seemed to last forever, but Gary did not mind one bit. It felt good and wonderful to hold her like this. It also gave him some time to think and decide what he was going to say to her. When Michelle did lift her face away from his, he could see her eyes were shiny with tears.\n\n\"I don't know what to say,\" he said quietly.\n\n\"You don't have to say anything. I probably scared the crap out of you by saying that.\" She looked away sorrowfully, thinking she said the wrong thing by admitting her feelings to him.\n\n\"I'm not scared at all,\" he replied.\n\nHer eyes met his. \"You're not?\"\n\nHe shook his head. \"If you were anyone else, I'd be scared to death. You're too good a friend....\" He stopped.\n\n\"Too good a friend for what?\" she asked.\n\n\"I don't know,\" he sighed. He debated as to tell her his real feelings.\n\n\"Tell me,\" she said, her eyes pleading.\n\nGary hesitated still and was not sure how to begin or to say anything at all, for that matter. Her eyes were melting his resolve, however, so he exhaled and looked at her.\n\n\"I'm not really sure what to say or how to say it,\" he said.\n\n\"Just say what you think. I want to know what's on your mind.\"\n\n\"It's just that...damn,\" he stammered as he looked away. It was too difficult for him to say.\n\nMichelle moved forward and took his hand once more and squeezed it reassuringly. \"Say whatever's on your mind,\" she implored him. \"Don't be afraid.\"\n\nGary looked at her helplessly and shrugged. \"I think you expect too much from me. This past month has been great and I love being around you, but I can't say that I'm in love with you, too.\" Inside, he recoiled for the emotional hit he was giving her.\n\nShe gave his hand a slight squeeze and smiled. \"You're silly,\" she laughed. Gary looked at her stupidly. \"I never said I was in love with you, Gary. I love you as a best friend, the best friend I've ever had besides my sisters.\"\n\nGary sighed with relief and knew exactly how she felt, for it was exactly how he felt about her. She absolutely was his best friend and he could honestly say he loved her for it.\n\nMichelle put her hands to his chest and straightened his coat collar. \"But,\" she said softly, \"I hope I do fall in love with you because I can't think of anything better than to be in love with your best friend.\"\n\nWithin seconds, Gary did not know who began to kiss whom, but there they were embraced in front of Lenscrafters kissing each other. Their kisses were soft and sweet, showing nothing but affection for the other. Eyes closed, Michelle parted her lips slightly and accepted more from him as his kisses became just a bit more urgent. For ones who had never kissed the opposite sex before, Gary felt they were doing a pretty good job because Michelle's kisses were having a profound affect upon him in more ways than one.\n\nMichelle's breathing quickened and she felt her knees go weak as Gary's hands went to her face. His kiss felt so good and she could not believe how soft his lips were! Her arms were pressing against his back holding him to her. Several minutes went by before they finally broke their kiss. Michelle opened her eyes slowly and looked at the young man standing before her. Could he be the same scrawny youngster who was the only one allowed to call her 'Shelley'? Smiling, she only saw her best friend in front of her. Little boy or grown man, he was one and the same to her. \n\nThey stood before each other quietly and let the moment sink in. Gary tried to sort his thoughts, but too many things were swirling through his mind. Perhaps it was her kiss or the way she held him to her, or maybe it was the way she was looking at him now, but he knew they were more than best friends. And by the way he felt right then, he also knew Michelle was right. They were meant to be together.\n\nHow long they stood there, they did not know. It could have been seconds or minutes for all they knew. The sound of a car horn blowing startled them out of their stupor and together, they laughed nervously. Michelle reached forward and lightly touched Gary's face.",
        "\"That was sweet,\" she murmured, wishing to kiss him again.\n\nGary nodded. He felt like such a klutz for not being able to say anything, but he truly did not know what to say. Everything that had happened that evening was what dreams were made of and he was almost afraid to speak, that perhaps he would break the spell and it would all end without discovering the outcome.\n\n\"You've got such a way with words,\" she teased as she stroked his cheek with the back of her hand.\n\nGary shrugged and tried to smile. \"I'm sorry.\"\n\nMichelle put her index finger to his lips and shook her head. \"Don't ever be sorry for being quiet,\" she admonished. \"Don't be someone you're not.\"\n\nA sheepish smile escaped Gary's lips as he looked at her. \"Thanks Shelley,\" he said. Michelle smiled at him. He glanced at the moon and saw a hazy ring of clouds surrounding it. For the first time, he noticed he was cold and even Michelle's warm touch was not helping. He pushed aside a shiver and took her hand before deftly steering her back to the main entrance.\n\nIt was well after midnight when they pulled into her parents' driveway and the house was dark except for a nightlight in the living room. Gary shut off the engine and sighed. His mind was still in a jumble and he could scarcely keep a straight thought. \n\n\"You want to come in for a few minutes?\" Michelle asked.\n\n\"What will your folks say?\"\n\n\"They're asleep and they won't care. Like I told you, I think they're accepting you a lot better now,\" she explained.\n\n\"I don't know.\"\n\n\"Come on,\" she said decisively, \"I'll fix us a snack.\" She was finding out she could gently nudge him and sometimes get her way when he became indecisive.\n\n\"Okay,\" he replied. He deposited his keys in his pocket and followed Michelle into the house.\n\nOnce inside, Michelle turned on a light in the kitchen and told Gary to have a seat while she began to prepare popcorn in the microwave. Without asking, she gave him a cold 7-up from the refrigerator and sat down next to him while the popcorn popped.\n\n\"Thanks,\" he said as he popped the top. \"How did you know?\"\n\n\"It's all you ever drink; that or Sprite.\"\n\n\"I didn't know I was that obvious.\"\n\n\"It's not that obvious. I just notice things about you, that's all.\" She stood up once again and checked the microwave.\n\nGary eyed her from his vantage point and smiled. The soft curls of her blond hair partially hid her face as she stared intently at the growing bag on the rotating tray. He really liked her profile. Of course, he liked looking at her, period. Once he looked at her closely, the change in her was not as drastic as he had originally thought. Sure, her face was thinner, sleeker if you will, but the general features were clearly the same.\n\nMichelle sensed he was looking at her, but she pretended not to notice. She had caught him staring at her a couple of times before, but he would always look away quickly. She did not mind being stared at by him. If it had been anyone else, she probably would have been angered by it and would have told them to stop it, but Gary's stare somehow comforted her. It pleased her that he found her attractive.\n\nShe pulled the popcorn from the microwave when it was finished and placed it on the table in front of Gary. She got a bowl from the cupboard and poured the popcorn into it.\n\n\"Dig in,\" she said as she grabbed a handful. Gary followed suit. As they snacked, they chatted aimlessly from one subject to the next. They talked about school things mostly, but they also discussed Christmas break and their plans once their tests were completed.\n\nOut of the blue, Michelle said, \"I really don't want you to get me anything for Christmas, Gary.\"\n\n\"Why not?\" he asked. \"You asked me what I wanted for Christmas.\"\n\n\"I don't know,\" she shrugged. \"I know you're kind of tight on money and I don't want you spending more on me.\"\n\n\"Shouldn't I be the judge of how much I spend?\" he countered. Gary worked summers and it usually lasted him the school year.\n\n\"I don't know,\" she repeated.\n\n\"How about we set a limit as to how much we can spend, say twenty or thirty dollars,\" he suggested.\n\nMichelle mulled it over for a few seconds. \"If that's okay with you, I can deal with it.\"\n\n\"Good,\" Gary said. \"What do you think? Thirty dollars?\"\n\n\"Thirty sounds fine to me,\" she agreed.\n\n\"Of course, you'll have to give me your sizes in case I buy you clothes.\"\n\n\"You don't have to get me clothes.\"\n\n\"Maybe some lingerie from Victoria's Secret,\" he continued.\n\n\"I don't think so,\" Michelle said.\n\n\"We'll start with bra size.\"\n\n\"I'm not telling you my bra size.\" Amused, Michelle shook her head.\n\n\"Okay, I'll just guess and if it doesn't fit, you'll have to return it.\"\n\n\"Gary,\" Michelle giggled, \"my parents would have a coronary if they saw lingerie coming out of a box from you.\"\n\n\"It would be a great joke, wouldn't it?\" he smiled devilishly.\n\n\"Oh yeah, it would be just great,\" Michelle replied sarcastically. \"I'd be kicked out for the rest of my life!\"\n\nGary laughed. \"Okay, okay, why don't you give me a list of things you might like and I'll go from there.\"\n\n\"That'll work. You do the same for me.\"\n\n\"Sure.\"\n\nAlmost an hour later, Gary decided it was time for him to go. Michelle put the bowl in the sink and the pop cans in the trash before leading him to the front door.\n\n\"I had a great time,\" Michelle said.\n\n\"Me too.\"\n\n\"I loved kissing you.\"\n\n\"It was my highlight, too,\" he grinned.\n\n\"You're silly.\"\n\n\"You wouldn't want me any other way, would you?\"\n\nMichelle shook her head. \"No, I like it when you're silly.\"\n\nGary leaned forward and kissed her lightly on the lips. \"I want to be serious now.\"\n\n\"Do you?\" she asked, eyebrows raised slightly. She moved forward and kissed him back.\n\n\"Would you believe me if I said I loved you, Shelley?\"\n\nMichelle looked at him closely and saw he was all business. \"Yes,\" she replied, \"I would believe you.\"\n\nGary took her face in his hands and kissed her sweetly once more. \"I love you, Shelley.\"\n\n\"I love you, too, Gary,\" Michelle replied.\n\nGary smiled broadly and reached for the door before opening it. Turning back, he said, \"See you later, best friend.\"\n\n\"See you, best friend,\" she replied.\n\nHe left her at the door and walked to his car. A soft snowfall had just started to descend from the skies and Gary looked up into the night before looking at Michelle once more. He waved to her and got into his car quickly before starting it up and driving off.\n\n\"You're up kind of late,\" her mother said from behind.\n\nMichelle jumped from the voice and turned quickly. \"You scared me, mom,\" she said before closing the door behind her. \"What time is it?\" she asked without bothering to check her own watch.\n\n\"It's after one.\"\n\n\"It doesn't seem that late.\"\n\n\"Did you have a good time?\"\n\n\"I had a great time!\" Michelle replied, their kiss still fresh in her mind.\n\n\"I'm glad.\"\n\n\"Are you?\" Michelle asked, her arms crossed in front of her.\n\n\"Yes, I am,\" her mother said earnestly. She truly meant it. \"I know we were hard on you about Gary before, but both of us only want what's best for you. If Gary makes you happy, then we are happy for you.\"\n\n\"Why the sudden change?\" Michelle inquired. \"I mean, I'm glad you approve, but before, you were so against him.\"\n\nOlivia sighed. \"I think we realized you are old enough to make you own choices about whom you date. We certainly weren't going to get you to change your mind, were we?\"\n\n\"No,\" Michelle admitted.\n\n\"Besides,\" Olivia explained, \"your sisters have spoken so glowingly about him, we'd be foolish not to give him a chance.\"\n\n\"Yeah, they like him a lot.\"\n\n\"So....?\"\n\n\"What?\" Michelle asked.\n\n\"When are you going to invite him over for supper?\"\n\nMichelle smiled. \"Anytime you want.\"\n\nV.\n\nThe next month went by quickly as classes and studying took over their lives. As final exams neared, they allowed each other only one date per weekend, but they did study together from time to time. They studied in the medical library because it was quieter than the regular one. It also made them concentrate on their studies instead of each other.\n\nOnce their exams were thankfully completed, they headed home separately and began to prepare for the holidays. Gary's family usually spent a quiet Christmas Eve at home and went to his maternal grandparents' house on Christmas day. His other grandparents had died many years before.\n\nOn the other hand, Michelle's family always has guests over on Christmas day and spent the day before preparing for it. They decided Michelle would come over to Gary's house on Christmas Eve and have supper there, then return with Gary to her house and spend the rest of the evening there, if but for a few hours.\n\nGary had a hard time picking out a gift for Michelle even though her list had been quite thorough and extensive. Everything he saw just did not seem right. Just when he was about to give up, he found exactly what he wanted. His mom showed him a discount jewelry catalog and thought perhaps he could find something in there and he did. It was a matching earring and necklace set, gold with synthetic rubies. Fortunately for him, he ordered them on line a few weeks before Christmas and they arrived in time.\n\nMichelle had no such trouble finding something for Gary. Almost everything on his list had something to do with the Detroit Tigers or Lions, his favorite teams. She bought him a new Tigers ball cap and tee shirt. Together, they cost a few dollars more than what they agreed upon, but she was not going to quibble with him over the price. The tags would be gone before he opened them anyway.\n\nMichelle woke Christmas eve morning with a headache, not unlike the one she had the day she and Gary met again. She was prone to headaches and even had a migraine once in a great while. A few years before, she had a CAT scan done and there were no abnormalities found. The specialist told her the headaches would be something she would have to live with. As she got older, the headaches were infrequent and taking extra strength migraine aspirin usually did the trick to relieve the pain. \n\nThat morning, the headache was not too bad and she decided to deal with it without taking any medication. Delicious smells from the kitchen wafted through the second floor and her bedroom; aromas of baking pies, bacon, eggs and coffee. After dressing in jeans and a sweatshirt, Michelle made her way down the stairs to the kitchen and was greeted by an overly perky Stephanie.\n\n\"It's about time you got up!\" she exclaimed. Michelle raised her hand and winced at the noise.\n\nLooking concerned, Stephanie asked, \"Bad headache?\"\n\n\"Not too bad. You were just a little loud.\" Michelle eased herself into a chair.\n\nKatie got up from her seat and went to the cupboard where she grabbed Michelle's aspirin bottle. Opening it quickly, she dispensed two tablets into the palm of her hand and replaced the cap.\n\n\"I'm okay,\" Michelle protested. \"I don't need any.\"\n\nKatie ignored her and handed the tablets to her. \"That's what you said the last time and you were laid up all day.\" She grabbed a small juice glass and handed it to her younger sister. \"Drink up.\"\n\nMeekly, Michelle nodded and popped the medicine into her mouth before washing it down with the juice.\n\n\"You want some breakfast?\" Stephanie asked in a quieter tone.\n\n\"That sounds good.\" She moved to get up, but Stephanie held out her hand.\n\n\"It's right here. I'll get it for you.\"\n\n\"I can get it. I'm not helpless,\" Michelle protested.\n\n\"Just sit there and be quiet,\" her sister said before turning away to the stove. Stephanie and Katie always looked after Michelle when she was not feeling well, especially when her headaches hit.\n\n\"Where's mom and dad?\" Michelle asked.\n\n\"Doing some last minute grocery shopping,\" Katie answered. \"They should be back soon.\" \n\nStephanie returned with a plate of bacon and scrambled eggs and set it in front of Michelle. \"Thanks,\" Michelle said before digging in.\n\n\"You're welcome.\"\n\nMichelle ate quickly and silently as her sisters busied themselves around the kitchen. There was a lot to do and all three were expected to chip in and help. When she finished her plate, Michelle placed the dish, glass and utensils in the dishwasher. It was almost full and ready for a cycle. Michelle glanced at the clock over the stove and it was but a few minutes after eight. They had plenty of time to get everything done, she thought to herself, before Gary would come over to pick her up.\n\nThe rest of the morning flew by fast as cooking, cleaning, and other errands were accomplished. By two o'clock, everything was done that needed to be done, so Michelle retreated to the bathroom for a much needed shower. The water felt glorious as the droplets pummeled her breasts and abdomen. Her headache had all but faded by this time and the hot, sometimes stinging, water relaxed her tight muscles. She wished she could have languished under the water longer, but she cleansed herself quickly and washed her hair before she heard complaints from other members of her family. There were two other showers in the house, but with four women and a man, time was something they could not afford to waste. Gary was going to pick her up at four o'clock, so she could not dawdle anyway.\n\nOnce back in her room, she dried her wavy hair even more with her towel before letting it air dry the rest of the way. She was one of the lucky women who did not have to do much with their hair once it was dry. Combing and brushing was usually all it needed before she was satisfied. Sitting in front of her mirror in only her bra and panties, she set about applying her makeup. By three-thirty, she was done and the only thing she had to do was get dressed. She chose black velour slacks and a red satin blouse. Her family would be attending a midnight Mass and she did not want to have to change clothes later that evening. Black shoes, small diamond earrings and a simple silver necklace finished her ensemble. She brushed her hair into place and looked at herself in the mirror.\n\n\"Not bad,\" she nodded approvingly. She hoped Gary would notice since he hardly ever saw her in anything but jeans and tee shirts.\n\nRummaging through her drawers, she found a perfume she liked and sprayed it on and about her neck. She even dabbed a little behind her ears in case they had the opportunity for Gary to bury his nose in her neck. Michelle felt that chance to be remote, but she smiled at the thought of it.\n\nGary arrived precisely at four o'clock and was greeted at the door by Katie before Michelle had a chance to answer it. \n\n\"Hey, my date's here!\" she said when she opened the door.\n\n\"Hi, Katie,\" Gary said as he stepped in, smiling.\n\n\"We don't have to tell Michelle you're here. We can make a run for it.\" Katie closed the door behind them.\n\n\"I don't think Michelle would like that very much,\" Gary laughed.\n\n\"What wouldn't I like?\" Michelle asked from the stairs as she made her way down.\n\nGary and Katie looked her way. \"Don't say a thing,\" Katie said to him, giggling. \"She can't prove anything.\"\n\n\"If I've told you once, I've told you a hundred times, he's mine and you can't have him,\" Michelle said to her sister.\n\n\"Aw, can't I play with him for just a little while?\" Katie pouted. Gary stood by highly amused.\n\n\"No.\"\n\n\"You're no fun.\" To Gary, she said, \"If you get tired of her, you know where I live.\" Katie walked away to kitchen, laughing.\n\nGary laughed, too. \"I'll remember that.\"\n\n\"Gary!\" Michelle shrieked. \"You better not.\"\n\nGary took a second look at Michelle and let out a low whistle. \"You look great. What's the occasion?\"\n\n\"It's Christmas,\" she reminded him. \"Didn't you get my email?\" Inside, her heart sang. He had noticed.\n\n\"I must have deleted it.\" He paused for a scant second. \"You look really pretty.\"\n\n\"Thanks,\" she replied. Michelle jumped down the two remaining stairs and skipped over to him happily. \"You look pretty handsome yourself.\" He was dressed in dark blue khaki's and a light blue dress shirt.\n\n\"If you say so,\" he replied absently.\n\nThere was one thing that irritated Michelle about her boyfriend and that was his inability to accept compliments from her. No, he was not the best looking guy in the world, but he was not ugly, either.\n\n\"You drive me nuts when you do that.\"\n\n\"What?\"\n\n\"I pay you a compliment and you play it off as nothing. I wish you wouldn't do that.\"\n\n\"I'm not handsome,\" he said seriously.\n\n\"Who says?\"\n\nGary shrugged.\n\nMichelle put her hands on his shoulders and looked him in the eyes. \"Listen here, I find you attractive and it doesn't matter what anyone else thinks. Do you understand?\"\n\n\"You're blind,\" he grinned.\n\n\"Doesn't matter,\" she replied. \"When I pay you a compliment, I expect you to take it at face value and appreciate it. Okay?\"\n\n\"Okay,\" he agreed sheepishly.\n\nMichelle kissed him softly. \"Good, because I like the way you look and I don't want you to change.\"\n\n\"You're still blind,\" he said quietly.\n\n\"Ooohhh!!!\" she growled. \"You're impossible.\"\n\n\"That's why I'm your best friend.\"\n\nThey stayed for a few minutes before departing for Gary's house. Supper would not be ready until five o'clock, so they had a few minutes to themselves. His sister was in the kitchen helping her mother and Gary's dad was in the basement watching a bowl game on the TV. Chrissy was seventeen and a senior at Waddell High. Tall, with dark brown eyes, Chrissy was a head turner, but she never thought anything of it. She had the occasional boyfriend, but none would be classified as overly popular or anything out of the ordinary. She still had no idea where she wanted to go for college or how she was going to afford it, for that matter. She had good grades, but they weren't good enough for an academic scholarship and since she wasn't athletically gifted, that road was closed also. Every few minutes, Chrissy would emerge from the kitchen and engage in chit chat with Michelle. To Michelle, she seemed to be very down to earth and friendly.\n\nThe supper was fairly simple; baked ham, Boston baked beans, and cheesy potato casserole. Michelle liked everything and had seconds on the casserole, her favorite. For dessert, there was ice cream and cake. Conversation was minimal as Michelle found out quickly the Buchanan family was not a talkative group, save Chrissy at times. She now knew where Gary received his precious gift of quietness. Although it took some getting used to, it was a nice contrast to her family who when in mass seemed to fight each other to be heard. \n\nAfter supper, Gary's father had built a fire in the fireplace and everyone gathered around as Chrissy passed out gifts from under the decorated tree. Soon, each had a small stack of gifts in front of them, each except for Michelle, but she did not mind. She was a bit sad to see the small amount of gifts before them. Michelle knew they did not have much money, but this surprised her. It did not bother Gary, for this was all he knew. \n\nWithin minutes, the gifts were opened and the thank you's exchanged. His parents also knew Gary's love for the Tigers and Lions because four of his gifts pertained to such. Luckily for Michelle, none of the gifts were the same as what she was to give him. \n\nChrissy shrieked with glee as she opened her gift from Gary, 2 CD's of her favorite group, Evanescence. She rushed her brother and hugged him. \"Thanks, Gary. I really wanted these.\"\n\n\"You're welcome,\" he replied, beaming. He was pleased she liked them so much. He looked at his family as they admired their gifts. Then, he looked to Michelle and smiled. \"It seems as if someone doesn't have a gift to open. We need to remedy that.\" He got up and went to the tree where he reached to the back and picked out a small, red papered box with a gold ribbon.\n\nHe went back to Michelle and extended it to her. \"Merry Christmas, Shelley.\"",
        "Michelle took the package from him and carefully pulled the paper from it, not wanting to rip it. When she opened the hinged box, she gasped with joy. There was nothing on her list that pertained to jewelry.\n\n\"They're beautiful, Gary,\" she managed to say. She took the necklace from the box and held it in front of her eyes. Quickly, she unfastened her necklace and gave her present to Gary. \"Fasten it for me,\" she said to Gary.\n\nHe took it from her and after she held her hair from her neck, Gary put it around her neck and fastened it for her. She took out her diamonds and replaced them with the red stoned earrings. Michelle got up and moved to the mantle over the fireplace where a large mirror hung over it. She saw her reflection and the new jewelry and she smiled happily. She twirled back to Gary. \n\n\"I love them!\" she exclaimed. She stopped short of Gary and stared at him. Everything within her wanted to pull him close and kiss him. In his eyes, she could see the pleasure it gave him to see her happy. That made her love him even more. And now, it was those same eyes which were melting her because there was a look of love emanating from them. She knew he loved her then. Maybe he was not 'in love' with her, but he loved her just the same. She had believed him the first time he said he loved her, but now, she could feel his emotions coming off him. For whatever reason, she had not felt that from him before. Her eyes grew misty as she continued to stare. They were oblivious to anyone else in the room.\n\n\"Thank you,\" she managed to say.\n\n\"You're very welcome,\" Gary smiled. It was he who moved forward and hugged her.\n\nMichelle wished she could have stayed in his arms forever, but Gary cut it short as he pulled back after a few scant seconds. She tried not to show any disappointment as she continued to hold his hand when they sat down on the sofa again.\n\nChrissy looked on at what had just occurred between her brother and Michelle and could not help but wonder if perhaps she was seeing her future sister in law. It was the non-verbal clues she saw; the way they looked at each other and held the other. It was the same way she had seen her parents look at each other from time to time.\n\nThey stayed for another half hour before leaving. As soon as Gary was seated in the car beside her, Michelle pulled his face close and kissed him. It was not a friend's kiss, either. It was a lover's kiss and it was exactly the kiss Michelle meant it to be. It was long and passionate and Gary surrendered completely to her by relaxing and letting the moment happen, although below his waist, he was anything but relaxed. \n\nWhen she finally stopped kissing him, Michelle giggled at the steamed windows of the car. \n\n\"What?\" Gary asked.\n\n\"The windows.\"\n\n\"Oh,\" he replied as he noticed them for the first time. He started the car and turned on the defroster. Looking back at Michelle, he said, \"I love kissing you.\"\n\n\"Maybe you'll have to do it more often,\" Michelle grinned devilishly.\n\n\"I certainly hope so.\" He leaned over and kissed her once more before putting the car in gear and driving away.\n\nWithin minutes, they were at Michelle's house with all its richness and finery. Every room on the main floor was decorated with ribbons, wreaths, bows and tinsel. It had been a while since he had visited and he was taken aback by the wonder of it. In the living room stood a large and tall Christmas tree decorated in blazing white. Many branches held an electric candle which made it only more beautiful. All around the tree were gifts wrapped in as many colors of the rainbow, innumerable to count at first glance. \n\n\"It's beautiful,\" he remarked.\n\nMichelle shrugged. \"Mom goes a little crazy at Christmas.\"\n\n\"I've noticed.\"\n\nThe rest of her family gathered in the room as well. Stephanie noticed Michelle's gifts immediately. \"They're beautiful,\" she said as she examined the earrings. She looked at Gary. \"Good taste.\"\n\n\"Let me see,\" Katie said. She, too, thought they were very pretty. Katie looked to the archway and then to Michelle. With her head, she gestured to the mistletoe. \n\nMichelle smiled and shook her head. \"Not yet.\"\n\n\"What are you talking about?\" Gary asked.\n\n\"Oh, nothing,\" Michelle said, \"just a little sister talk.\"\n\n\"Come on,\" Olivia said. \"We've been waiting for you to arrive so we could start.\"\n\n\"Start?\" Gary asked Michelle.\n\n\"Opening gifts,\" Michelle explained.\n\n\"Oh.\"\n\nMuch like Gary's family, the gifts were brought out from under the tree and arranged in stacks in front of each family member. Gary looked in awe as each stack was almost more than what his whole family exchanged. Strangely, he felt no jealousy at all. It pleased him that everyone was filled with joy and giving. Lastly, Michelle took a box that had been set aside and gave it to Gary. \n\n\"It's not as beautiful as what you gave me, but I hope you like it,\" Michelle said.\n\nGary smiled. \"I'm sure I'll love it.\" He hesitated for a minute.\n\n\"Go ahead, open it,\" she urged him.\n\n\"Guests first,\" Frank said.\n\nNot being dainty like Michelle had been with her gift, Gary tore the crimson paper from the box and opened it quickly. Inside, he found the Tigers cap and shirt. He beamed with joy as he held the shirt up. \"These are great!\" he exclaimed. \"I love 'em. Thanks!\" He leaned over and hugged her.\n\n\"I love you, best friend,\" she whispered softly in his ear so no one else could hear. Gary said nothing, but gave her an extra squeeze.\n\nSoon, the room was filled with paper ripping, laughter, shrieks, and murmurs of thanks. It would be almost an hour before all the gifts were opened, but Gary enjoyed the time immensely. He noticed it was not the expensive gifts that seemed to give Michelle joy, but the simpler ones. A pen and pencil set, a funny tee shirt, or the necklace and earrings he gave her. \n\nAfterward, they cleaned up their mess and put the opened gifts back under the tree. Frank left the room and came back with a digital camera and handed it to Gary.\n\n\"We usually set a timer, but would you mind taking some pictures of us?\" he asked.\n\n\"Sure, no problem,\" he responded. Frank showed him how to work it and after a few trial photos, Gary began taking pictures of them in various groups and poses. Some had to be taken over again, but for the most part, he did a very good job.\n\nWhen he finished, Michelle said to her father, \"Take some of us, daddy.\" Michelle took Gary's hand and positioned him in front of the tree where her dad snapped three or four pictures of them together.\n\nWhen it became ten o'clock, the family retreated upstairs to begin changing for the midnight Christmas Mass at St. Augustine's church. Michelle kept Gary company in the living room since she was already dressed and ready to go. When she was sure they would not be disturbed, she turned to Gary and said, \"I have one more gift to give you.\" She giggled at the thought as she looked down momentarily. \"Perhaps it's a gift to each other.\"\n\n\"What are you talking about?\"\n\nMichelle stood and pulled Gary to his feet. \"Remember when I said all I wanted for Christmas was you under the mistletoe?\"\n\n\"Yes.\"\n\nMichelle looked at the archway and then back at Gary. She nodded in its direction. \"It's waiting for us.\"\n\nWithout replying, Gary walked with her to the archway and stood directly under the brown and green sprig. He slipped his arms around her waist and looked into her eyes. Michelle draped her arms around his neck and returned the stare. They stood there for a few seconds and took in the magic of the moment. They became one in their own world and saw nothing but the other standing before them. \n\nSeconds later, Gary moved forward slowly and pressed his lips to hers. His kiss at first was soft and gentle like a spring breeze, but he did not take long before his kisses became more passionate. It was not his normal kissing style and it temporarily caught Michelle off guard. She then realized he was not kissing her like a friend, he was kissing her like a man. Sometimes in the past, his kisses would weaken her knees slightly and small butterflies would dance in her stomach. His kiss was doing that and a lot more to her now. Delicious little tingles centered between her inner thighs, much like the time Stephanie had sneaked a Playgirl into the house on one of her trips home from school and showed it to Katie and her.\n\nMichelle stifled a groan and hung onto Gary as her legs grew weaker. Slowly, he pulled away and looked at her. Michelle's eyes were closed and she was smiling dreamily.\n\nHer eyes opened. \"Why'd you stop?\" she asked softly, almost pouting.\n\n\"You were getting a bit heavy,\" he chuckled. \"I didn't want to have to pick you up off the floor. How would I explain that?\"\n\n\"Who cares? Kiss me again.\"\n\nNot needing any more direction, Gary pulled her close and kissed her sweetly once more. It was not as deep or as passionate as before, but Michelle felt like melting into his arms. It ended all too soon as Gary pulled back once again. \n\n\"Merry Christmas, Shelley,\" he said softly.\n\n\"Merry Christmas to you, best friend,\" she replied.\n\nOne by one, the rest of her family came down the stairs. Although the service was not to begin until midnight, the congregation was invited to come at eleven o'clock to sing Christmas carols with the choir.\n\nAfter Gary excused himself to use the bathroom, Stephanie pulled Michelle aside and asked, \"Are you okay?\"\n\n\"I'm fine. Why?\"\n\n\"If I had been kissed like that, I wouldn't be,\" she winked.\n\n\"You saw us?\"\n\nStephanie nodded. \"I came down to get something, but I saw you two. He was really putting it to you, wasn't he?\n\n\"I could barely stand,\" Michelle giggled. \"I never knew he was such a good kisser.\"\n\n\"Hmm, maybe I'll have to steer him over to the mistletoe myself,\" Stephanie mused.\n\n\"You most certainly will not!\" Michelle laughed. \"You can't have him.\"\n\n\"But it's Christmas,\" Stephanie whined. \"We've shared things before.\"\n\n\"Not boyfriends.\"\n\n\"True, but we can always start a new tradition.\"\n\n\"I don't think so.\"\n\nGary came back with in a few minutes and sensed something was amiss between the two sisters, but he decided to let it go. \"I'd better be going,\" he said to Michelle.\n\n\"Going? Where?\"\n\n\"Well, home. You guys are going to Mass. I can't very well stay here.\" His family normally went to the morning Mass on Christmas.\n\n\"I thought you were coming with us.\"\n\n\"Well, I...we never discussed it.\"\n\nMichelle turned to her mother. \"He can come with us, can't he?\"\n\n\"Of course he can if he wants to,\" Olivia replied.\n\n\"See,\" Michelle said, \"you can come with us. I'd like for you to come,\" she added.\n\n\"Okay,\" he relented, \"I'll come.\"\n\nSoon, they piled into their van and were on their way to church. The Mass lasted over an hour and it was lovely. During the service, there came a point when the priest asked everyone to give one another a sign of peace. Normally, it was a handshake between strangers or a small kiss to a loved one, but Gary was in a quandary about what to do. Michelle and her parents would be easy, but he did not know how to approach her sisters. After he shook hands with Olivia and Frank, he turned to Michelle, who smiled at him. They gave each other a short kiss and hug. He then turned to Katie, who moved to him and hugged him close. She felt so much smaller than Michelle as he had to bend down to return the hug. He then turned to Stephanie, who hugged him in much the same way. If he and Michelle ever broke up, and he hoped they never would, he thought he would very much like to date either one of them.\n\nIt was well after one o'clock when they finally returned home. \"We usually have coffee and cookies after church,\" Michelle explained, \"if you want to stay a while longer.\" Gary agreed, but he was a bit anxious to get home. His time with Michelle had been priceless, but it was late and he had to be up early. \n\nHe had a cup of hot chocolate instead of coffee and few cookies with the family as they gathered in the living room. By two-fifteen, Gary was very tired and ready to go home. After saying good bye to everyone, he gathered his gifts and Michelle walked him to the door. After giving him his coat from the closet, she took one for herself.\n\n\"I'll walk you out,\" she said, not expecting a reply.\n\nOnce outside, the chilly December air surrounded them as the Michigan winter was in full force. Their shoes crunched the frozen, hardened snow as they walked. Puffs of steam escaped from their mouths as Gary opened his car and put the gifts inside. He started the car and closed the door behind him as he got out and stood with Michelle once more.\n\n\"I had a great time,\" he said. \"Would you believe me if I said this was my best Christmas ever?\"\n\n\"I'd believe you,\" she nodded. \"It's been my best, too.\" Her heart was already aching knowing he was about to leave. She really did not want him to go home. She did not want such a wonderful day to end. \"I'll cherish your gifts,\" she added. \"They're beautiful.\"\n\nGary smiled faintly. It was becoming awkward now when it was time for either one of them to leave. It was getting to the point where they did not want to be apart from each other, even if but for a day. \"I hoped you'd like them,\" he said. \"The shirt and cap was great, too,\" he added.\n\n\"Good,\" Michelle smiled. \"If you're not doing anything tomorrow night, stop by. I'm sure the party will still be going on.\"\n\n\"I don't know. We'll have to see how late we stay at my grandparents.\" He was just now getting used to Michelle's family. He was not sure if he wanted to meet a whole new group of family members.\n\n\"Okay,\" Michelle replied, a bit disappointed. Looking up at the light snowfall descending from the heavens, she said, \"Well, I better let you go before we freeze out here.\"\n\n\"I guess so.\" As tired as he was, he did not want to leave. His thoughts traveled back to when they kissed under the mistletoe. He remembered her sweet lips and the way her body began to respond to his kisses. He remembered how his body responded to her kiss. Once again, his underwear became uncomfortable as things began to stir within.\n\nMichelle moved forward and put her hands to his face. Drawing him nearer, she kissed him softly and sweetly. Soon though, her desire to repeat their kiss under the mistletoe overcame her and her kisses became more urgent. With great passion, her lips moved about his, tasting and wanting just a little more. The tingles between her inner thighs were in full force as Gary reciprocated in kind. She forgot about being cold.\n\nHis hands moved to her back as he held her against him. The bulge in his trousers were quite evident by then, but he did not care if she noticed or not at that point. He had the distinct feeling she was having the same feelings in her own way just by the soft moans she was emitting.\n\nMichelle had to stop herself from reaching down and touching the crotch of her pants. She wanted to in the worst way. The ache, the pleasure he was giving her could only be relieved in one way. It was then she realized she better slow down and back off, which she did. Her soft, feathery kisses returned and they both relaxed.\n\nIt was Michelle who broke the seal this time as she stepped back and smiled. The things his kisses did to her! She could not remember being this excited, this sexually charged without pleasuring herself. She knew her fingers would be dancing under covers that night after he left.\n\nGary was a bit puzzled by the change in tempo and then the end, but he got the picture pretty quickly. Michelle's breathing was still ragged as she looked at him through misty eyes. His own penis was throbbing and begging to come out, but that would come later. \n\n\"I'm really lucky,\" he managed to say.\n\n\"Me too.\"\n\n\"I'll try to stop by.\"\n\n\"I'd like that.\"\n\nThey looked at each other for just a few seconds, but in that time frame, they both realized one very important fact; they were in love with each other and nothing could change that. They saw it in each others eyes and they felt it in their hearts. They knew it in their minds and they felt it in their bodies. It was irrevocable and irreversible and it was exactly what they wanted.\n\nGary reached forward and took her hand. \"I love you, Shelley.\" He had said the same thing many times before, but in her heart Michelle knew it was different this time.\n\nBeaming, she replied, \"And I love you, too, Gary.\"\n\nVI.\n\nSchool started much too soon once Christmas was over. After having a few weeks off, it was difficult for Michelle and Gary to get back into a routine that did not include being with each other almost every day, although they did try to eat dinner together as often as possible. They did not go crazy on the weekends, either, because they knew their studies came first, but they still had their time together.\n\nAnd with their time together, they grew closer. In a way, they felt so lucky to have been friends first. They never really went through the awkward stages that some couples face. They felt absolutely at ease with the other from the start and they were comfortable with that. Of course, as with all relationships, they had their differences and arguments, but they were few and far in between and usually were resolved quickly.\n\nIt was a couple of weeks after they returned to OSU when they confessed their true feelings for the other. It was a Friday evening after dinner and it had been a tough day in the classroom for Gary. Gina had already gone home for the weekend and Gary was stretched out on Michelle's bed with his head on her lap. She lazily stroked his forehead with her fingertips in hopes of relaxing him. He seemed unusually tense that evening and did not want to do anything.\n\n\"Hmm, that feels good,\" he said with his eyes closed. \"I'll give you a couple hours to stop.\"\n\n\"What happens after that?\"\n\n\"I'll give you an extension.\"\n\nMichelle laughed and continued to run her fingers around his temples. Little was said as she continued, but this was not unusual. They found they could have a very enjoyable evening together with saying nary a word. She looked down at Gary and had an overwhelming rush of love go through her. All she wanted was to have Gary stay on her lap forever and let her soothe and nurture him. He meant so much to her.\n\n\"You know what?\" she whispered as she bent forward toward his ear.\n\n\"What?\"\n\n\"I was thinking....\"\n\n\"That's scary,\" he interrupted.\n\n\"Brat!\" she exclaimed as she slapped his arm playfully. \"I'm trying to be serious.\"\n\n\"Okay, be serious, but don't stop with your fingers. They feel so good on my forehead.\"\n\nMichelle smiled and once again began to strum her fingers above his eyes. \"I was just thinking about how much I love you and need you.\" She stopped and continued to gaze at him, not knowing if she should continue.\n\nGary did not notice anything out of the ordinary as her fingers were still giving him blessed relief. \n\n\"But, I think it's going beyond that now,\" she continued.\n\n\"Going beyond what?\"\n\n\"I love you more than just as a friend. I think I have for a while now.\"\n\nGary looked up at her. \"I know.\"\n\n\"What? What do you mean?\" Her fingers stopped moving.\n\nGary raised his head from her lap and looked at her. Her statement did not scare him nor surprise him. He was wondering when she would get around to telling him. \n\n\"I've known for a while now. I'm guessing it was around Christmas Eve. At least, that's when I started to fall in love with you.\"\n\n\"You're in love with me?\" she asked incredulously.\n\nHe nodded. \"Does that surprise you?\"\n\nMichelle thought for a few seconds. \"No,\" she laughed, \"I guess it doesn't surprise me, now that you mention it.\" She smiled devilishly. \"You know, your kisses drove me crazy that night. I won't tell you what I did after you went home.\"\n\n\"Probably no different than what I did. Hell, I could barely walk, you had me so worked up!\"",
        "\"You mean you....\"\n\nGary laughed. \"Yeah, my parents were probably wondering why I was taking a shower that late and why I was taking so long.\"\n\nMichelle giggled at the thought. Very rarely had their conversations ever turned sexual and this was the first time they had ever talked about their sexual feelings toward each other.\n\n\"So, did you take a shower, too?\" he asked.\n\nMichelle shook her head. \"No.\"\n\n\"Was it good?\" he asked.\n\n\"Oh yeah,\" she laughed.\n\n\"Mine too.\"\n\n\"Have you done it since?\"\n\n\"Of course.\"\n\n\"Do you think of me when you do it?\"\n\n\"You're the reason I do it,\" he said seriously. Gary remembered many a time after kissing her good night how he needed relief. \"What about you?\"\n\n\"Me?\"\n\n\"Yeah.\"\n\n\"Many times,\" she admitted. She could not believe how wet her panties were after she went to her bedroom that Christmas Eve night. It took her barely a minute of rubbing her clit with her fingers before she came to a hard climax. Since then, she had to be careful and not wake up her roommate when she felt the urge after one of their dates....\n\n\"Oh.\" He was kind of surprised she admitted it. He did not think most girls would be that candid about something like that, but Michelle was not like most girls. She had always been up front with him.\n\nThings became quiet between them for a few minutes. Gary settled back onto her lap and she resumed massaging his forehead. Michelle could not help but notice the slight bulge in his jeans which was not present just a minute or two ago.\n\n\"Can I ask you something?\" she said.\n\nGary looked up and saw a serious look etched upon her face. \"Sure.\"\n\n\"Have you ever thought of me in, you know, a sexual kind of way? I mean, have you ever undressed me in your mind or thought of us making love?\" She waited apprehensively for his answer.\n\nGary gave her questions some thought before he answered. \"I don't know if \"undressed\" you would be the correct term. I've wondered what you looked like naked, if that's what you mean. Yes, I've imagined us being in bed together. Hell, I don't know about the making love part,\" he chuckled. \"I have no experience in that department.\"\n\n\"Me neither.\"\n\n\"I figured that.\"\n\nMichelle pondered her next question and almost backed out before she forced herself to ask it. \"When the time is right, would you be my first?\"\n\nGary could only nod because he knew he would say something incredibly stupid if he opened his mouth. Would he be her first? What kind of question was that? \n\nMichelle bent forward and kissed him. \"That's what I love about you. You're a man of so many words!\"\n\nAnd so, weeks passed without a hint of skin being shown. It was not from lack of opportunity, but simply a matter of respect they had for the other. As best friends and being in love with the other, they felt no particular need to rush into a sexual relationship, silly as it sounds in this day and age. Of course they had their urges and desires, but they thought it best to hold off until they were absolutely sure they wanted to start because there would be no turning back. Gary and Michelle had both heard the stories of relationships going bad after becoming sexual and they wanted no part of that. They could wait.\n\nAs spring break approached, neither made any plans to go south to celebrate. Gary could not afford it and Michelle wanted to be with Gary, so that was an easy decision. Once they were home, they spent most of their waking time together. One such day, Gary drove over to pick up Michelle for an outing. Her family had a membership to an indoor/outdoor pool that was also part of a country club. It was rather large and was enclosed during the winter months. As part of keeping in shape for volleyball, Michelle swam as often as possible.\n\nGary rang the door bell, but noone answered. Above him, Michelle opened her window and called down for him to come in and meet her in her bedroom. Although Gary did not see her, she was clad in only her underwear and was trying to decide what clothes to wear to the pool. She thought about putting on a robe or something to cover herself before he came up, but she did not.. She was going to be in a bikini anyway, so what was the difference? Besides, she had shaved that morning and her bra and panties were modest, so he would not see anything anyway.\n\nGary came to her room and poked his head in. \"Hey, Michelle....,\" he began before actually seeing her. You probably would have needed a forklift to scrape his jaw off the ground.\n\n\"Hey Gary,\" she replied as she held a top against her. When she saw him staring at her, he retreated and moved away from the door. \"Gary?\" she said as she moved to her doorway. She saw him standing with his back against the wall and breathing heavily. \"Gary?\" she said again. \"What's wrong?\"\n\n\"What's wrong?\" he stammered. \"Couldn't you have at least given me a little bit of warning before I came up?\" God, he thought to himself, she looks gorgeous. Down below, he was hard as a rock.\n\n\"I'm sorry,\" she apologized. \"I guess I wasn't thinking.\" She took his hand. \"Come on, I'll put a robe on.\"\n\n\"You don't have to.\"\n\n\"I mean, if it makes you feel uncomfortable....\"\n\n\"No,\" he shook his head, \"I think I can get used to it.\" He laughed softly.\n\nBack in the room, she said, \"So, you like what you see?\"\n\n\"I love it. You've got a beautiful body.\" He eyed her up and down. The tops of her milky breasts bulged slightly over the cups of her plain black bra and her muscular legs looked fantastic. He was almost ashamed to admit how horny he was becoming.\n\n\"Really? You think so?\"\n\n\"Oh yeah,\" he nodded. \"I know so.\"\n\nMichelle noticed the bulge in his jeans as he stood there and she smiled to herself. It was quite evident how much he was enjoying this. She glanced at her watch and frowned. Her parents were expected home soon and she did not want to get caught with Gary in her room, especially in just a bra and panties.\n\n\"If we had more time, I might have given you a little thrill,\" she said wickedly. As soon as it was out of her mouth, she wished she had not said it. It sounded sluttish and that was not how she meant it.\n\n\"A thrill, eh?\" he asked, although he pretty much knew what her meaning was. Now, his libido was in full force and he really wanted to see something. \"What? A peek?\"\n\nMichelle moved to the window and looked out. There was no sign of their van. She turned back and said, \"We don't have much time. Just a peek.\"\n\n\"Okay,\" Gary replied huskily.\n\nMichelle pulled her straps down over her shoulders before taking the tops of the bra cups and pulling them flat under her shapely breasts. She stood there with her hands at her sides as Gary stared. They were a nicely rounded shape, possibly a 36C, with tiny nipples protruding from puffy areolas. And best of all, they fit her frame very well. The look on his face amused her as his mouth was slightly agape in wonder.\n\nThousands of thoughts raced through his mind as he looked at them. They were more beautiful than he could ever have imagined and he wanted nothing more than to touch and explore them.\n\nA sound from outside broke his gaze as Michelle quickly redressed her breasts and threw on her robe. \"It's mom and dad. Get downstairs! You can still make it to the living room before they get in.\"\n\nGary nodded and hit the stairs running. When he got to the living room, he sat down quickly on a sofa and began to flip through a sports magazine. In actuality, he need not have hurried because it was a few minutes before they arrived inside the door. His heart was racing from the exertion, the panic, and from what he had just seen. Their first time together was going to be special indeed, he knew that.\n\nAs they pulled out of the driveway to go to the pool, Michelle could not contain herself any longer as she burst into laughter.\n\n\"What's so funny?\" Gary demanded. They had not said anything about what had happened.\n\n\"Oh my God! Everything, Gary. Oh my God!\" She giggled some more. \"I loved the look on your face, though,\" she said seriously when she was in control of herself.\n\n\"The look on my face?\"\n\n\"It was like you were in a trance.\"\n\n\"They're beautiful. I couldn't help it,\" he grinned as he watched the road.\n\n\"Are they? I never thought they were anything special.\"\n\n\"They're beautiful,\" he repeated. \"I was kinda hoping to touch them, if you want to know the truth.\"\n\n\"Were you?\"\n\n\"Well, we got interrupted.\"\n\n\"Yeah. Maybe next time,\" she said softly.\n\n\"Really?\"\n\n\"I'd like you to touch them.\" She sat back in the seat and smiled. Looking back at him, she said, \"And if you want to know the truth....\" She stopped and glanced at his waist where his bulge was still present\n\n\"What?\" he asked as they came to a red light.\n\n\"You're pretty worked up, aren't you?\" She pushed her other thoughts to the back of her mind.\n\nA bit embarrassed, he replied, \"Yeah, I guess so.\"\n\n\"I'm sorry.\"\n\n\"Don't be,\" he laughed. \"I don't mind.\" Her wonderful vision was still fresh in his thoughts. He hoped he would get soft before they got to the pool. He did not want everyone to think he was that happy to see them.\n\n\"Maybe I shouldn't have done it.\"\n\n\"I don't know, but I'm glad you did.\"\n\n\"So am I,\" she answered truthfully. \"You know what?\"\n\n\"What?\"\n\n\"I'd really like to make love to you soon.\"\n\nGary gulped and suddenly became nervous. \"Wow,\" was all he could manage to say.\n\n\"We'll have to be careful, though,\" Michelle continued. \"I'm not on any birth control and I certainly don't want to get pregnant.\"\n\n\"Okay.\" The light turned green and a few seconds went by before Gary realized it.\n\nMichelle realized she was laying an awful lot on him in such a short period of time. She figured they would get intimate sooner or later, but she was having such strong feelings for him now. It was as if she had to have him inside her and become united in the flesh. She knew they could wait. She knew they should wait, but she did not want to anymore. There were times when her body ached to be touched by him in ways her own hands could not replicate, times she silently cried herself to sleep because he was not there to hold her.\n\n\"What are you thinking?\" she asked. Rarely did she ask that question of him because she did not want him to feel she was nagging or needed to know his every thought when he was quiet. But, this was one of those times when she really wanted to know what he was thinking.\n\n\"A lot of things,\" he said simply. What was he thinking? That he wanted to find a place and make love to her right then and there? That a lot of things were happening between them and he did not know if they were going too fast? He shifted uncomfortably in his seat and sighed.\n\n\"Did I say something wrong?\" She was now unsure of where she stood.\n\n\"No,\" he laughed nervously. \"It's just that it's not every day when a beautiful girl shows me her breasts and wants to make love to me. I'm trying to take it all in, that's all.\"\n\n\"Do you want to make love with me?\"\n\n\"Of course I do, Shelley. I guess I'm just a little overwhelmed about the whole thing.\"\n\n\"I understand,\" Michelle replied. \"It's not something I've conjured up out of the blue. I've thought about it for a while.\"\n\n\"You don't rush into things. I know that.\"\n\n\"Thanks.\" She looked at him through misty brown eyes.\n\n\"For what?\"\n\n\"For understanding.\"\n\n\"Understanding?\"\n\nMichelle sighed and looked down. \"I was just thinking that most guys would be trying to get me in bed from the very start. I don't know. You seem to know me so well and know exactly what to say and do.\"\n\nGary shook his head as they came to another red light. \"That's where you're wrong. Right now, I don't know what to say.\" He hesitated for a moment. \"Sometimes, I think I'm weird because most guys would be trying to get into your pants and I haven't.\"\n\n\"You're not weird. You're just a great guy and I love you for that.\"\n\nGary shrugged and remained quiet for the rest of the drive. Once at the pool, they went their separate ways and changed into their swimming suits. By then, Gary's erection had subsided sufficiently to the point where he felt he did not have to cover himself. Michelle changed into a modest orange bikini. The pool did not allow strings or thongs and the management wanted women's breasts to be covered as much as possible. Gary came out to the pool area after Michelle and could only look in wonder as he saw her by a deck chair. Things began to stir below his waist once more. He knew she worked with weights as part of her training, but he was still surprised to see how well developed her shoulders and upper arms were. Of course, his eyes fell to her tight butt and muscular thighs and he groaned inwardly. And she wanted him to make love to her soon? \"Wonders never cease,\" he muttered to himself. \n\nAfter he got over his shock, Gary made his way to her side and kissed her cheek. Michelle stiffened and tried to smile.\n\n\"No PDA,\" she said quietly as she looked around.\n\n\"Huh?\"\n\n\"Last summer, a couple was groping each other and a lot of people complained, so no kissing and stuff.\"\n\n\"Are we back at St. Augustine's?\" he kidded.\n\n\"Almost.\" She really wanted to kiss him in the worst way, but rules were rules. She eyed him and was impressed. Although his was thin, his upper body was nicely developed. His legs were a bit on the skinny side, but she couldn't care less. She didn't love him for his legs. Unconsciously, she glanced at his crotch and saw an appreciative bulge there. Almost instantaneously, she felt a luscious twinge between her legs. Trying to regain control, she said, \"Also, there's no horseplay, splashing, or dunking. You can only swim laps or dive off the board. Sorry.\" Michelle smiled sheepishly.\n\n\"What do they do for fun here, shuffleboard?\"\n\n\"That's near the golf course.\"\n\n\"Geez,\" he shook his head.\n\nAfter they arranged their towels, they dove in and began swimming laps together. Every five minutes or so, they climbed out and rested on the deck chairs. During one such period, Gary looked over at Michelle and said, \"You look great in that bikini.\"\n\n\"You think so?\"\n\nGary nodded his approval. Leaning over, he whispered, \"You look much better naked, I'm sure.\"\n\nMichelle blushed instantly and slapped his arm. She noticed his bulge had returned. Inwardly, she knew she wanted to get her hands inside his pants and soon. \n\nAfter an hour and a half, they picked up, changed, and began their drive home. All was quiet in the house when they arrived and Michelle noticed no car or van in the driveway. A note was on the kitchen table and Michelle picked it up and read it.\n\n\"What's up?\" Gary asked.\n\n\"Dad's gonna be late getting home from work and mom, Steph, and Katie are out shopping. They'll be back around five.\" She put the note down. \"They didn't say anything about shopping to me.\"\n\n\"Maybe it was a spur of the moment type thing,\" Gary suggested.\n\n\"I guess.\" She glanced at her watch and it was almost two-thirty. Her heart started to beat faster as she began to think and calculate. All of the sudden, she became nervous as she made her decision. Pulling Gary close, she kissed him and held onto him tightly.\n\n\"I love you,\" she whispered into his chest.\n\n\"I love you, too, Shelley.\"\n\nRaising her head, she said, \"Love me. Make love to me.\"\n\nGary blinked and was uncertain he heard her correctly. \"Now?\" he asked hesitantly.\n\nMichelle nodded. \"I want you, Gary. I've wanted you for a long time.\"\n\n\"Shelley, I...\"\n\nMichelle moved forward and kissed him again. It was soft, yet sensual and it told Gary all he needed to know. Wordlessly, she led him to her room. Her heart raced as she thought of what they were about to do. She knew she was safe from pregnancy for at least a week and she had no fear of her hymen being broken. Her gynecologist had done that during a procedure years before.\n\nGary stood at the door of her room nervously as Michelle pulled back the covers. He had never been this anxious before, even when he was about to ask a girl out for a date in high school. In his dreams, he imagined this moment and thought he was ready, but he was wrong. He thought he should be doing something, saying something, but he remained silent.\n\n\"You can come in,\" she said softly. She sensed he was as nervous as she was. \"Sit next to me,\" she added. Although they were a little pressed for time, Michelle was trying not to rush things.\n\nGary moved to her and sat down. He chuckled sheepishly, \"I don't know what to do.\"\n\n\"I'm not sure, either,\" she admitted. \"Maybe if we undressed, we'll just let it happen.\"\n\n\"Okay.\" \n\nGary moved to pull his tee shirt over his head as Michelle began to unbutton her blouse. Soon, they were down to their underwear and giving furtive glances to the other.\n\nMichelle giggled and reached behind her. \"Well, you've seen these before,\" she said as she let the bra fall away from her breasts.\n\nGary's penis strained against the confinement of his blue briefs creating an impressive bulge which caught Michelle's attention. A delicious shiver went through her.\n\n\"Can I touch them?\" he asked.\n\n\"Please,\" she replied in a shaky voice.\n\nHis touch was light and tentative as his fingers brushed against her skin. Instinctively, he leaned over and gently kissed her left nipple, causing it to harden and eliciting a soft groan of approval from Michelle. Gary kissed the other as well and received the same response.\n\nMichelle's breathing quickened as she reveled in his touch and was amazed at her own response to his kisses. She could feel herself becoming moist as her initial sexual responses began to grow.\n\n\"They're so beautiful,\" he murmured as his lips continued to lay soft kisses upon her skin. He never thought anything could ever be softer than what he was touching at that very instant.\n\nMichelle smiled and held his head gently to her breasts. She knew she was making the right decision. He was everything to her and he was showing his true self to her. He was gentle, kind, and above all, considerate of her, and in this he showed his love to her. \n\nHis lips continued to plant delicate kisses upon her nipples as Michelle sighed contented. Gently, Gary tugged at her left nipple with the tip of his teeth. Michelle inhaled sharply at this new sensation that seemed to go directly from her nipples to between her thighs.\n\nShe could wait no longer as she took his face in her hands. Looking into his eyes, she saw nothing but love reflecting back. \"I want you now.\"\n\n\"Are you sure?\" he stammered.\n\n\"I have to have you in me, Gary.\"\n\n\"I don't want to hurt you.\"\n\n\"You won't. I know you won't.\" She kissed him softly. \"Make me a woman.\"\n\n\"You're already a woman,\" he said seriously.\n\nStill a bit nervous, they stripped and for the first time they were completely naked. Michelle looked at Gary's rigid penis and felt herself get wetter between her thighs. It was long and thin, but it had a large head which was already seeping juices at its tip as it twitched from excitement. She wanted to touch it in the worst way, but she feared he would not be able to control himself. She wanted to be touched by him in the worst way, but she was starting to become paranoid.\n\n\"We don't have too much time,\" she panted as she tore her eyes away.\n\n\"I won't last long, believe me,\" Gary replied. Secretly, he hoped he would be a good lover to her, but he knew the first time would be pretty quick. He saw the thin strip of coarse brown hair above her closed thighs and almost ejaculated right there. \n\nMichelle giggled nervously before she kissed him again. She then moved away slowly and lay down before opening her legs as an invitation. \n\nGary stared at her open sex and for a moment was paralyzed in awe. He had only seen Playboys before and they really did not show too much except for pubic hair. This was something entirely different and he was mesmerized by it. ",
        "\"Love me, baby,\" she whispered as she reached for him.\n\n\"You're so beautiful,\" he managed to say. He could hardly believe what was about to happen.\n\nMichelle's eyes grew misty as Gary moved forward and hovered over her. His hands were at her sides as he supported himself. Michelle reached down and felt around her opening. She was soaking wet and she thought she would have little difficulty getting him inside her. Her wandering hand found his hard penis and he gasped audibly at her touch. Carefully, she guided him to her opening and rested it there.\n\n\"Push it in, Gary, nice and slow,\" she instructed.\n\nHe nodded and moved his hips forward. All of his instincts told him to thrust forward, but he tempered them. There was no way he wanted to hurt her. He felt the tightness of her opening as it resisted his intrusion.\n\n\"A little more,\" she panted.\n\nAgain, he pressed forward and little by little, he gained entrance.\n\n\"Oh my God!\" she gasped when his head entered. A mixture of pain and pleasure passed through her, but was soon replaced by a wonderful sensation of fullness.\n\n\"Are you okay, Shelley?\" he asked, a bit worried he had hurt her.\n\n\"No, no, I'm fine,\" she smiled. \"I just have to get used to you being in me. You feel wonderful!\"\n\nIn all of his dreams, in all of his thoughts of when they would actually make love together, Gary had no real idea of how it would feel to be inside her. The feel of her soft, warm vaginal muscles enveloping him was so different from what he imagined. It was so much better than what he imagined. Strangely, his urge to cum was not as urgent as he had feared and he felt perhaps he would last a bit longer than he suspected. He looked at her face and saw nothing but joy. Tears were escaping her eyes, but he knew they were from happiness.\n\nMichelle reached up, took his face in her hands and kissed him sweetly. \"We're one now, Gary. Love me, baby.\"\n\nGary grunted lightly as he began to thrust slowly into her. The feeling was fabulous and his excitement grew quickly. He rudely thought that if he knew they were going to make love, he would have masturbated about five times beforehand to take the edge off. \n\nAfter a few minutes, Michelle groaned as sweet fluttering sensations began to invade her. Involuntarily, she began to move her hips in time with his thrusts. He felt so good inside her! She only wished they had more time to explore and really love each other. She wanted to wrap her lips around his penis and wanted to feel his fingers and mouth around her lips and clit. She groaned again from her delicious carnal thoughts. From above, Gary began to thrust quicker and his breathing was raspy. It was beginning to feel really good for her, but she sensed he was not going to last too much longer. Somehow, the thought of him shooting his sperm into her triggered something deep within her. Rolling waves formed within her that soon intensified.\n\nGary's testicles tensed and he gritted his teeth. He grunted loudly and could not speak as he sent his seed into Michelle with four or five quick, powerful bursts.\n\nHer inner walls collapsed around his penis as a small, lovely inner orgasm went through her. It hit her without warning as she shut her eyes, tensed and clamped down on him. \"Oh, oh, oh...,\" she hissed as the contractions continued. By then, Gary was spent, but he watched Michelle's face contort in a wonderful mixture of ecstacy and discomfort. Her orgasmic contractions were soon replaced by gentle waves which allowed her to begin breathing normally. She opened her eyes slowly and saw Gary staring at her and smiling.\n\nMere words could not adequately describe what she was feeling at that point. For sure, she knew she would never want anyone else in her life and could not imagine loving another human being as much as she loved the man who had just made love to her. Her life was irrevocably changed and she did not want it any other way.\n\nShe reached up and touched his face gently. She would gladly die for this man and not think twice about it. He was everything to her and she would never let him go. \"Not bad for the first time,\" she whispered before pulling him down to kiss him.\n\nVII.\n\nAs one gets older, it seems as if time flies by with little regard to your express desire for it to slow down. Seated on the small upholstered chair in the quaint room, Gary reflected upon this and many other things that sunny August morning. He always thought he would be in his forties and a father before time became an issue with him. The past four plus years had been a blur to him, yet he remembered each day with Michelle with such clarity as if it only a few minutes had passed. Many memories flooded his mind at that point; their first date, first kiss, their many times making love and so on. He remembered the times when they did nothing but snuggle together for an entire evening and think it was the best date they could have.\n\nThings had changed so much in such a short time that he could scarcely believe it and if he had not lived it, he definitely would not have believed it. After his sophomore year, he decided to change his major to journalism, something he and Michelle argued about quite a bit. He had struggled with his decision, too. He knew he wanted to write, but he could not see himself in classroom teaching it.\n\n\"You always wanted to be a teacher,\" she reminded him. \"What changed that?\"\n\nHe had no ready answer for her question, but he only had a deep gut feeling that teaching was not for him. By his senior year, he was chief sports writer and an editor for the OSU school newspaper. Several newspapers offered him jobs after graduation and he accepted a post with the Akron-Beacon Journal, mainly because Michelle was set to work at the University of Akron in their athletic department. Other opportunities were perhaps more lucrative for him at the time, but Michelle's career would provide more for them in the long run and they wanted to work in the same city.\n\nGary broke from his thoughts as a soft knock was heard at the door. \"Come in,\" he said and the door opened slowly.\n\nKatie emerged in her green formal gown looking beautiful. She walked to him and hugged him lightly. In the years they dated, he had grown to love Michelle's sisters almost as much as he loved Chrissy. Chrissy had been in the room earlier when they first arrived and they had a long talk together. It was hard for him to believe she would be a senior in the fall.\n\n\"You know,\" Katie said as she pushed away, \"we can ditch everyone and make a run for it. There's still time.\"\n\nGary laughed. Married for two years, she still teased him about taking him away from her sister. \"I don't think Brian would take too kindly to that.\"\n\n\"He'll get over it.\" She loved teasing Gary. Although she was head over heels in love with her husband, Gary had a special place in her heart. She stopped and looked at him seriously. \"How are you holding up?\"\n\n\"Okay, I guess. I'm pretty nervous. It's getting close, isn't it?\"\n\n\"Yeah, not too much longer,\" she replied after she checked her watch. \"Put on your jacket.\"\n\nHe shrugged on his black tux jacket and Katie pulled and fussed at his collar and shoulders until she was satisfied with his appearance.\n\nStepping back she said, \"What a waste.\"\n\nThe way she said it, Gary was not sure if she was serious or not. Sometimes, he could not tell with her. \"A waste?\" he asked, his eyebrow cocked.\n\n\"Oh,\" she sighed, \"if only I had found you first. Michelle never would have had a chance.\" Katie laughed and smiled. \"But I found my Prince Charming, too. It just took me a little longer.\" She moved forward and kissed his cheek. \"If she ever treats you bad, call me and I'll kick her ass!\"\n\nGary smiled and got a quick mental image of Katie doing exactly that. \"Thanks, Katie, I'll remember that.\" He moved his black shoe nervously over the tiled floor. \"How's Michelle doing?\"\n\n\"She's a wreck, but she'll be fine. We locked the doors so she couldn't escape!\" She saw the look on Gary's face and was amused. \"I'm only joking,\" she added. \n\n\"I know.\"\n\n\"Well, I better get back. The show's about to start.\"\n\n\"Is it?\" Gary checked his own watch and saw it was but five minutes before his wedding. \"I guess it is.\" \n\nKatie smoothed his lapel and straightened his flower. Looking up to him, she said, \"You know, you're the brother I never had. If you ever need help or want to talk, call me. Stephanie and I will always be there for you guys.\"\n\n\"Thanks, Katie.\"\n\nKatie smiled and then turned to leave. A new wave of panic set in as he watched her disappear out the door. He was alone again.\n\nMusic could be heard now as the ancient pipe organ began to play. Gary walked over to a mirror and checked himself. He was so nervous, he could not tell if he looked alright or not, but nothing seemed out of place.\n\nThere was another knock and Gary's best man, his cousin Doug, walked in. \"Everyone's seated,\" he announced in a steady voice. \"Father Joe wants to know if you're ready.\"\n\nGary nodded and walked to the door. The other ushers were there as well and Gary surveyed the audience in the old church. He knew most of the people, friends and family, but some he did not. It was packed and he wondered how many had been invited. He had not been privy to the details and had left that to Michelle and her family. He only worried about what he and the groomsmen would wear.\n\nThe priest emerged from a room directly across from them and took his place in front of the alter. With Gary trailing, they walked to the front of the pews and waited. Gary adjusted his wire rimmed glasses and tried to focus on calming himself. At one time, he had jokingly said he was going to get contact lenses and rid himself of glasses to make him look better. Michelle had jumped down his throat saying she would not be able to recognize him without glasses. Amused, Gary never brought up the subject again. Thinking about that time made him smile.\n\nThe music changed tempo and Gary knew it was time to begin. One by one, Chrissy, Stephanie, and then Katie came down the aisle. Each were greeted by a groomsman at the midpoint before walking the rest of the way and taking their places near the alter. Gary looked to the back of the church and saw Michelle standing with her father. Even from that distance, she took his breath away.\n\nSlowly, they came forward and Gary could see her smile from beneath her veil. Soon, they stood in front of Gary. Frank took her hand and placed it in Gary's. He squeezed her hand lightly.\n\n\"Take care of her, son. She's my baby,\" Frank said sternly to him.\n\n\"You know I will,\" Gary answered sincerely. He glanced at his bride and saw her staring at him intently.\n\nThe priest spoke. \"Who gives this woman to be married?\" he asked.\n\n\"Her mother and I,\" Frank answered. With that, he took his place next to Olivia.\n\nThe priest then greeted and blessed Gary and Michelle before they took their seats to the left of the alter. There were two readings and a gospel reading by Father Joe before he gave everyone an entertaining homily. Throughout all the readings, they stole glances at each other. As always, Michelle found comfort from holding hands with him. Slowly, her nervousness began to ebb away.\n\nAfter the homily, the actual marriage ceremony began. They stood before Father Joe with Katie and Doug by their sides. \n\nFather Joe asked, \"Is there anyone present who finds reason that this man and this woman should not be joined in holy matrimony? Speak now or forever hold your peace.\" \n\nWithout thinking, both Gary and Michelle looked at Katie, who had a bright smile and innocent look etched upon her face. She could barely keep from laughing.\n\n\"Who has the rings?\" Father Joe asked.\n\nDoug stepped forward and placed the rings in a small glass dish. Father Joe blessed them before speaking once more.\n\n\"Gary and Michelle, join hands.\" To Michelle, he said, \"Do you, Michelle Renee Mayfair take Gary Arnold Buchanan to be your lawful wedded husband? Do you promise to love him and honor him in sickness and in health, and put no one else before him all the days of your life?\"\n\n\"I do,\" she replied in a steady voice.\n\nThe priest took Gary's ring and gave it to her. \"Take this ring as a symbol of my love and fidelity.\"\n\nShe stared into Gary's eyes as she repeated the sentence and placed the ring on his finger.\n\nTo Gary, the priest said, \"Do you, Gary Arnold Buchanan take Michelle Renee Mayfair to be your lawful wedded wife? Do you promise to love her and honor her in sickness and in health, and put no one else before her all the days of your life?\"\n\nLooking into his bride's eyes, Gary replied, \"I do.\"\n\nFather Joe took Michelle's ring and gave it to Gary. After repeating the priest's words, Gary placed the ring on Michelle's finger.\n\nTurning his attention to the guests, he said in a loud voice. \"What God has blessed, let no man put asunder. I now pronounce you husband and wife. You may kiss your bride, Gary.\"\n\nMichelle helped him place the veil above her head. Looking into his eyes, she whispered, \"I love you, Gary.\"\n\n\"I love you, best friend.\"\n\n* * * * *\n\nIt was almost eleven in the evening before they pulled into the state park. They had reserved a room in the lodge for a few days, the only amount of time they could get off from their jobs. After checking in, they brought their luggage to their room and relaxed for a few minutes. It had been a long, tiring day and they both knew from talking about it that a night of lovemaking was out of the question. \n\nGary yawned and stretched as he sat on the bed. Michelle was busy emptying her suitcase and putting clothes in the dresser drawers. She was wearing shorts and a tank top and he could not keep his eyes off her. Standing up, he walked over to her and wrapped his arms around her waist and hugged her to him.\n\n\"Umm, that feels wonderful,\" she murmured as she rocked slowly to and fro in his embrace. \"Are we feeling frisky?\" she asked, laughing.\n\n\"No,\" he replied. \"All I want is to hold you for a while before I take a shower. I'm too tired for anything else.\"\n\n\"You wouldn't be too tired for Reese Witherspoon,\" she giggled in his grasp, noting his favorite actress.\n\n\"If I'm too tired for the most beautiful woman in the world, I'd be too tired for Reese,\" he replied. He nuzzled the back of her neck with his nose. Michelle squealed as he hit a particularly ticklish spot.\n\nMichelle turned and wrapped her arms around his neck and kissed him. \"Come on, tired man. Let's hit the showers. I want to get some sleep so I can properly ravage your body in the morning.\"\n\nGary needed no more prompting. Her leading the way in lovemaking always meant a fabulous time for him. It never ceased to amaze him how many ways she could please him in the bedroom.\n\nThey undressed quickly and let the water get warm before stepping in. After they rinsed, Gary took the bar of soap and began to wash his bride. He started at her neck and moved down to her breasts, carefully cleansing each sensitive nipple thoroughly. They puckered and hardened from his touch and Michelle could feel tiny tremors begin to invade her. After cleaning each breast, he kissed her nipples before moving behind her. He washed her back and shapely butt, generously soaping between her cheeks. Her puckered little hole was overly sensitive that evening as he continually rubbed over and around it. More shivers invaded her. Gary knelt down and washed each leg and foot before turning her around. Facing her beautifully trimmed pussy, his already hard penis twitched from excitement.\n\nAs the water cascaded over him, Gary spread her legs apart slightly and began to wash her labia and pubic region. At first, he was all business, but his lust for Michelle and her naked body soon took over. Groans from above told him he was doing a fine job as he discarded the soap and was masterfully toying with her clit. Over and over, his soapy fingers massaged and teased her as she opened her legs even wider.\n\n\"Oh damn, Gary,\" she hissed. \"I love it when you wash me!\"\n\nGary grinned and went back to business. Soon, he could not take it anymore and pressed his mouth to her clit and began sucking on it, swirling his tongue over and around her sensitive little nub. Her body was alive and primed by then as her natural juices began to seep from within. Her breathing became more rapid and heavy and she could not stifle her moans and groans whenever a tremor went through her. It was only minutes later when the sexual tension broke within her and a sweet orgasm rippled through her.\n\nAfter regaining her breath and her senses, she pulled Gary from the floor of the shower and kissed him savagely. In her mind, there was no way he was getting out of that shower without stuffing his wonderful penis inside her. \n\n\"It's your turn, now, baby,\" she growled sexily as she grabbed his rock hard flesh with the palm of her hand. Not bothering to soap her hand, she began to stroke him quickly and with purpose.\n\n\"God, Shelley,\" he groaned as he grabbed the railing. It was feeling so good.\n\nWhen she felt he was ready, she stopped and grabbed the towel rack and thrust her butt in his direction. Gary stared at her wonderful backside and her beautiful sex below for a couple seconds. He never got tired of looking at her naked body, especially from this angle.\n\n\"Stop admiring,\" she groaned. \"I need you in me. Now!\"\n\nGary got behind her and guided his penis to her opening. He pushed in easily from his wetness and her flowing juices. Michelle gasped from the intrusion, but soon moaned from the pleasure his strokes were giving her. For one of the few times she could remember, he was not going slow and gentle with her and she loved it. He thrust hard and fast as their wet flesh slapped against each other. Neither even noticed the water still pouring over them nor the fact that the water was cooling slightly.\n\nHis penis was rubbing her G-spot almost perfectly and her excitement was building rapidly as she pushed back and tried to time her movements with his. Gary was tiring quickly, but he continued to push hard and deep into her. He could feel her velvet inner walls caress and squeeze him as her tremors began to take over. It was but seconds later when he tensed, grunted and let loose with rope after rope of warm sperm into her womb, something he thought of as impossible just ten minutes before. It was not too much later when her tremors turned into spasms. It was not very strong, nor did it last long, but it was something she needed very much.\n\nPhysically spent, Gary pulled out and stood under the water, letting the warmth wash over him. Wordlessly, Michelle turned and began to bathe him. She washed his limp penis soothingly and lovingly before planting a soft kiss on its head. It was always able to give her so much pleasure and comfort. Even if she did not have an orgasm during their lovemaking, just having him inside her left her content and happy.\n\nThey dried off and brushed their teeth before tiredly making their way to bed. It was well after midnight by then and they were exhausted. Under the covers and in each other's arms, Michelle sighed happily.\n\n\"Can you believe we're married?\" she asked in the darkness. She listened for his reply, but only heard his deep, regular breathing beneath her ear. Smiling to herself, she let out another contented sigh and waited to fall asleep in her husband's arms."
    ],
    "authorname": "Tony155",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/is-that-really-you"
}