{
    "title": "Flower Ch. 07",
    "pages": [
        "I woke up, habitually silencing the scream that was building inside of me. After one night of calm, relaxing sleep, my night terrors had finally found their way back; stronger than ever, it seemed. The effect of this particular dream had me lying tense but shivering in bed, the long, old nightgown that Gabriella had given me, with a laugh, twisted around me, as if I'd been turning and tossing for quite some time. \n\nI wondered if the fact that I was now free, or at least a few steps on the way to freedom, was why a dream about being hunted and caught felt more frightening than ever. It was almost as if hope, friendship and love created new paths and chambers inside of me, that fear and panic could more easily travel and fill. Actually being able to see a way out, that famous light in the tunnel, was filling me both with hope and dread. And in the night with no one around to help calm my fears, the sheer terror of thinking that perhaps I wouldn't be able to get away after all, had my muscles tensing almost to the point of cramping, kept my breaths shallow and made tears run down my face. \n\nI got out of bed and walked up to the window, my thoughts a whirling mess. I took deep, calm breaths and looked out the window, seeing the full moon play hide and seek with a few tiny, whisper thin clouds. The lake was calm, with a few small waves glittering magically in the moonlight, and I felt drawn to it. Remembering the calming effect of the short walk down there the day before I quickly decided to see if it could help me once more. I pulled the flowery quilt from the top of the bed and wrapped it around my shoulders, quietly opened the door to my room, borrowed a pair of old boots and stepped out into the night.\n\nThe night air was surprisingly warm and I felt quite comfortable wrapped up in Gabriella's old quilt. I walked down to the lake, found a smooth, flat, large stone that was tilting slightly towards the water, and sat down. My feet almost touched the surface of the lake as I stretched my legs out towards it on sitting down, but my need for comfort had me curling up, my legs pressed close to my body, arms wrapped around them, my head resting on my knees. \n\nMy thoughts were still twisting and turning. Perhaps it wasn't possible to ever be entirely free, to feel completely safe? Perhaps I would still be stuck in this sticky web for the rest of my life, no matter if the spider was taken care of or not. What if I would always be this scared, what if I could never trust again? What kind of a miserable existence would that be? \n\nI thought about the way that I had found hope, friendship and human kindness, the way I had started thinking about a brighter future with a place, and a kitchen, of my own. But the darkness of my previous thoughts kept creeping into those brighter ones, all ending in thoughts of a bleak future where I was still waking up every single night, screaming and shaking.\n\nI sat there, thinking and rethinking, jumping between bright ideas and dark notions, going back and forth, until I couldn't stand it anymore. I removed my boots and scooted down towards the water, pushing my feet into it, then leaning forward just enough to be able to push my hands into the soothing liquid as well.\n\nI let my toes wiggle and my fingers dance in the water, keeping my mind focused on the sensory information sent up through my legs and arms, making a concentrated effort at calming myself, breathing slowly and deeply. But the calm wouldn't come, and peace would just linger for short moments before lifting off and flying away.\n\nI lifted my hands out of the water and looked at the pale, clean, blank surface of them. I so wished there was a way to become clean like that, on the inside, as well as on the outside. A way to be free from all the memories, all of the nightmares, all of the worries and anxieties.\n\nAlmost choking from the sadness that kept filling those deep holes inside of me, I stood up and started walking out into the water. My slow steps and the water caressing my feet and then legs calmed me, pushing back the darkness once more, and I kept walking. When the water reached my thighs I stopped and stood, letting my hands and arms dance a silent dance in the water, creating my own waves that the moon could play and flirt with.\n\nThe sad cry from a lonely bird some distance away stilled my hands, but made me start up my slow walk once more. In the company of the moon and the lake, I didn't feel quite as lonely as before, and the sweet caress of the water made me calm, kept my mind blank, chased my fears away. I kept taking one step after another, growing calmer and more certain as the water reached higher and higher up my body, almost sensing a calming effect on my heart as the water reached my breasts, making my nipples tighten in cold delight. Another step, then another until I was finally completely covered by water. All impressions, senses and thoughts finally calmed by the stillness of the lake. True freedom at last. \n\nOne last thought lingered, about the true circle of life perhaps being more closely related to water than to earth, ash and dust. A sad smile covered my face before I closed my eyes and let myself sleep, some final pictures of my life spinning through my mind, from water, to in sickness and health and then back to water again.\n\n* * * * *\n\nA soft sound woke me from my light slumber and I stretched and rubbed my eyes, not quite as instantly alert as my self-imposed guard duty really required. Sleeping in the car really wasn't all that great. And waking up all of the time from the sounds of nature and wildlife just going about their business didn't really help. With a large yawn I studied my surroundings, quickly scanning the area between the lake, the road and the house, before turning my eyes to the nearby building, seeing a pale shape closing the front door slowly. I almost didn't need the light of the full moon to be able to recognize the person in front of me. She looked adorably rumpled, her hair tousled and her body covered by a wrinkled old nightgown, an old quilt covering her shoulders, boots about three sizes too big covering her feet. At least she was wearing slightly more clothes than the previous morning's too short t-shirt, thank god for small mercies.\n\nShe walked slowly down towards the lake and I watched her, trying to gauge her mood, wondering if I should make myself known to her, not knowing if my presence would be a comfort or an annoyance, or perhaps most worrying of them all, if it would frighten her.\n\nShe sat down on a flat stone by the water and pulled herself into a small Rose-shaped ball. I kept looking at her, aware that not even an earthquake or a laughing relative would have been enough to make me stop doing just that. \n\nI saw a small, sad-looking shape sitting by the water, her hair long and blond, seeming almost white in the pale moonlight, her skin and clothes just as white, as if she was made out of some rare, pure fairytale substance. I was filled, almost to the point of choking, with feelings of awe and worship - somehow natural in the presence of that ethereal, angel-like fairy creature - but also with feelings of sadness and helplessness, because I had no way of removing her pain or erasing her memories. I didn't even know how to approach her, how to reach out to someone who'd been hurt that deeply, heart, body, mind and soul.\n\nNot liking those feelings of helplessness, that reminded me of those early years I would rather forget, I decided that trying, not matter how unsuccessfully, was better than standing - or sitting - idly by. I carefully, silently eased the car door open and stepped out into the night. I stretched my stiff muscles and stifled a groan at the pain in my neck and shoulders. I wouldn't be able to sleep in the car even one more night, so it was time to convince Gabriella to pack up and move back into the city.\n\nI turned my eyes back to the pale, almost ghost-like, shape by the lake and saw her remove her boots and put first her feet and then her hands in the water. I kept looking at her, every heartbeat, every breath concentrated on her movements, as if she was caressing me as well as the water. When she stood up, let the quilt fall off her shoulders and started walking out into the water it was almost as if my heart and breath stopped for just a few seconds. Some part of me wanted to reach out for camera, a paint brush, anything that would help me document the purity, the calm, the beauty of that night, with the moon, the lake and the woman.\n\nShe kept walking, but stopped just as the water reached her hands, and I saw her swaying, moving her arms, almost dancing in the thigh-high water. Without conscious thought I started walking towards her, drawn by some invisible string, needing to get closer, to be near her.\n\nAs I reached the edge of the lake she started walking again, and the magical feeling started slipping away from me. My muscles tensed as she kept walking and fear gripped me when her head disappeared under water. I ran out into the lake, silently cursing myself for not realizing what she was about to do, praying that I'd be able to reach her in time.\n\nI dove into the water, searching for her body with my arms and legs, the light of the moon not strong enough to penetrate the water surface, not strong enough to let me see where she was. A desperate cry wanted to part my lips and send the last of my breath to the surface, when my fingers finally found her hair and my hands could grip her around the arms to pull her up and out of the water. Her arms were slack and it didn't seem like she was breathing, so I hoisted her up in my arms and started walking towards the stone she'd been sitting on.\n\nI half-ran to my goal, fighting the water every step of the way, cursing my foolish romantic ideas about beautiful women taking moonlight swims, fully dressed. Desperately praying once more that I wasn't too late, that I'd be able to save her. I didn't want this; not one more useless death, not one more person dying because of my inability to save her, not one more loved one gone, never to be seen again.\n\nPerhaps it was my quick movements that jolted her back to her senses, because before I reached dry land again she started coughing and spitting up water. When she finally managed to take a short breath and then another I realized I was holding my own breath and had to force myself to inhale and exhale at the same time as she did.\n\nShe was lying still in my arms, but I felt a change in her just a few seconds later. It was as if it took some time for her to sort out where she was, but the very moment she realized that she was being held and carried by someone, I felt her body tensing up, then she started to fight my hold, squirming and flaying her arms around in circles. A low, complaining cry escaped from her tight lips and I started talking to her, explaining what was happening, telling her that I didn't want her to die, telling her that she had to live.\n\nI reached the stone and sat down heavily on top of it, still holding her in my arms. She continued her panicked fight against my hold, but I held her in my lap and talked and talked, not really sure what I was saying, just knowing that I had to get through to her, to calm her, to sooth her. It didn't take long before the fight just left her and she started trembling. I freed one of my hands, grabbed the old quilt and wrapped it around her back. I held her close and kept whispering soft words, until I could feel the fear and tension leaving her, until she turned her face into my chest and started crying, her body shaking from the deep sobs that were running through her.\n\nHer warm tears mixed with the cold water of the lake on my soggy sweater, and as I heard her expressing her deep sorrow I realized I was also crying. Big, silent tears were running down my face, and I could almost hear the squeaking hinges of the sealed door to my innermost fears and regrets as it opened slightly. I cried for Rose, for my mother, for myself, for every single tormented soul in the world and for the world in itself. \n\nI knew I had a tendency to keep my feelings bottled up, partly because I didn't know if I'd be able to stop the whirlwind of emotions if I opened myself to them, partly because, as a man, society dictated that I wasn't supposed to have, or at least not show, my weaker emotions. But by letting those feelings out, joining her in her sorrow, it felt like I was cleansing my soul, that the tears cleaned away my anger, my fear and my sadness. And I was filled with strength, calm and a feeling of absolute rightness. \n\nWe sat there together in the night, on the stone, by the water, sharing the sorrow, the anger, the helplessness of our lives. It was almost like a slow, silent dance, where my body felt what she was feeling, where I could sense her emotions by the speed of her breaths, the rhythm of her heart, the tension of her muscles and the way her hand kept gripping or letting go of my sweater.\n\nNo more words seemed necessary and I was grateful, because I was fully aware of her reactions to my previous attempts at talking, helping and trying to care for her. I didn't want this moment to end in anger and disappointment, so I just sat and held her close until the storm inside of her seemed to calm, until she silently leaned away slightly and looked at me, her eyes scanning my face.\n\n\"I didn't mean to... I wasn't going to...\" she whispered, her eyes begging me to believe her.\n\nI shook my head, and hugged her close again, letting my eyes and body tell her that she didn't need to worry, that I believed her and, above all, that she was safe. Almost without thinking I bent my head and pressed a kiss to the side of her face, letting my lips linger softly on her cheek, closing my eyes and relaxing with a renewed sense of rightness. It felt good to hold her in my arms, it felt like she belonged there, and I didn't ever want to let her go.\n\nI felt her muscles tighten before she leaned away once more. Her sad eyes caressed my face and I saw them soften a few degrees before she leaned back in and pressed her trembling lips against mine. I held my breath and kept absolutely still, instinct telling me that that moment of fragile trust and careful closeness had to be on her terms. Her kiss was soft and then a bit harder just for a short while before she leaned away and looked at me again. Through the sorrow, there was a bright glimmer of something new shining from her eyes. I felt hope and then, as she licked her lips and leaned back in, lust came riding on a wave of warm feelings of compassion and perhaps even love. \n\nHer kiss was warm, decisive, almost desperate in its nature, but I managed to hold myself back, to give her space, to let her control the pace, until she let her teeth nibble my lower lip. I might have groaned or growled, but from that moment passion pulled me under, and my mind no longer registered what was done, by whom and in what order. I just felt an all-consuming need to hold her, to kiss her, to let myself drown in the shivers she sent through my body, to celebrate every passionate response I could feel running through hers. The dance of sorrow replaced by a new, heavenly dance, where sadness and hopelessness had been chased away by comforting closeness and healing warmth. And underneath it all the certainty that we had both taken a few steps towards something better and brighter.\n\nThrough my passion I felt her body starting to shake, and I pulled away to look at her. She was tired, wet, probably in a state of shock and I needed to get her indoors and in a new set of warm clothes straight away. I kissed her cheek and whispered \"dry clothes, now\" before I helped her up and then stood on slightly shaking legs. I didn't want to let go of her, so I held her hand and walked her towards my car, quickly grabbing a set of clothes from the trunk; my cold skin telling me that I needed to get out of my own wet clothes as well. \n\nWe entered the house and she walked towards the tiny guest chamber to find some clothes. I stepped into the bathroom and quickly - or as quickly as wet clothes will allow you to - removed my lake-soaked things, realizing that my phone had been submersed along with the rest of me. I shook my head and thought that saving a person's life was well worth the cost of a new phone. Hell, in this particular case it was worth the cost of all the phones if the known world.\n\nI started hanging my things on one of the clotheslines, my mind filled with thoughts of Rose's hands touching and caressing me, and I realized that I would remember our short moment of passion, of sweet kissing, every single time I looked at that particular sweater. I would also remember the way she kept grabbing the soft cloth of it, in pain and frustration, and the way I was able to help her, to support her in her time of need.\n\nI was happy I'd been able to comfort her and surprised that my actions had helped relieve some of the dark feelings I'd been carrying inside of my own self for so long. The helpless sorrow I'd been hiding from the world, and perhaps even myself, suddenly felt so much easier to bear. \n\nAfter hanging my clothes, I walked out of the room and was met by a cold, shivering Rose. She was carrying the clothes she'd been wearing just a few hours ago and seemed not to want to look at me. I couldn't stand the thought of going back to the awkwardness and embarrassment of our interactions the day before, so I took her hand as she passed me and squeezed it softly. She looked at me, gave my hand a quick press from her cold fingers and then walked into the bathroom.\n\nI waited in the hallway for her, thinking that I needed to say something before we parted but worrying how to end our joint nightly adventure in a positive way. Especially since I didn't want the night to end with us parting, because I didn't want to let her out of my sight.\n\nI bit my lower lip and ran my hands through my wet hair, before pushing my nervous fingers into my pockets to keep still. Perhaps the best way to end the night would be to wish her a good, restful sleep and return to the car, keeping a calm, straight face to hide my worries, wishes and longings.\n\nI heard the low click of the bathroom door unlocking and turned towards it, my good-night-sleep-tight wishes hanging on the tip of my tongue. She looked nervous and anxious, and my worry found new strength as she walked closer and looked up at me with large, scared eyes. \n\n\"I want... could you please hold me? I don't want to be alone\" she whispered before taking my hand in hers and leading me into the small guestroom. Stunned, I followed her, thinking that some wishes did indeed come true quicker than others. \n\nShe closed the door behind us and I climbed into the small bed, keeping my clothes on, for warmth and protection. With me lying on my back, there was just enough room for her to climb in beside me, sideways, with her head on my shoulder and her arm across my torso. And as she settled in, I let my arm hug her close before I exhaled slowly, the surprise, almost shock, of her invitation making my heart beat too fast, my breaths too fast and shallow.\n\nI felt her body relaxing, and before long she was sleeping safely in my arms. I felt her body next to, partly on top of, mine and I knew I would always cherish this moment. I closed my eyes and let her calm breaths lull me to sleep.\n\n* * * * *\n\nI jolted awake and sat up with a gasp. What had happened and where was I? My body started tilting slightly to the left, and I realized that one wrong move would have me falling out of bed. The small bed in the guestroom, in Gabriella's house. The small bed, now filled to the brim with a large mountain of a man who was sleeping peacefully by my side. My tired questions were instantly answered by my quickly awakening mind.",
        "I looked at Sean, sleeping on his back, his right arm partly covering his eyes, his left lying on my pillow. His face was relaxed and he looked younger than I had ever seen him, his soft lips giving him a somewhat vulnerable appearance. \n\nRealizing that I had been sleeping close to, almost on top of him, for several hours, I felt myself go cold and then warm. I shouldn't have asked him to hold me, to sleep with me, but his presence had made me feel safe, and I had slept without disruptions, without fears. By now I knew I didn't need to be afraid of him, I knew I could trust him and, above all, that his presence seemed to chase away my nightmares.\n\nA small smile tickled my lips as I kept looking at him, his big body crowding the bed. He seemed thoroughly out of place in the small princess room. I slowly lowered my body into bed again, and let my head rest on his chest. I could hear his heart beating; strong, heavy and slow heartbeats that made me feel even safer. I wrapped my left arm and leg around him, trying to get as close as possible to soak in his warmth and calm.\n\nI closed my eyes and started thinking about that night, wondering what had really happened and what it all meant. I remembered the moment when I had just let go of hope, of life, when the peace I was feeling was broken by two strong arms. I remembered the feeling of panic and fear as those arms took me away from the freeing embrace of the water. I remembered trying to fight to break free, to get back to that moment of absolute calm. But I couldn't remember taking a conscious decision to take my own life. I just wanted to be free from all of the thoughts, all of the memories, all of the pain.\n\nI really did want to live, to find my happy future, and I thanked my lucky star that I had been saved by my guardian angel once more. And he hadn't just saved me by dragging me out of the water, he had saved me by being there, by holding me, by talking to me, by crying with me and... by kissing me.\n\nI let my mind remember our shared kisses, rewinding and replaying every second of that wonderful moment by the lake. I didn't think I'd be able to feel tenderness again, didn't think my body had the ability to experience feelings of lust and passion anymore. I was happy that I'd been wrong, grateful that I hadn't lost all of myself to darkness and despair. But I was also a bit frightened of feelings that seemed too warm, too quickly. \n\nI thought about Sean, poor Sean, his pain so real, his nighttime tears not just for me. His whispered words, \"not again\", \"not one more\", \"please... not her\", reminding me of his history, the heavy burden he was already carrying inside his soul. \n\nI kept thinking about his life and his needs, wanting to believe that two broken human beings could make one whole, but was unable to discard the many bad things that stood between us. I heard his heartbeats speed up, as if he could tell I was thinking about him, and turned my face towards his to see if he was waking up. \n\nHe was fully awake, looking at me, his face no longer soft and vulnerable, but serious and calm. He reached out and let his hand caress my cheek softly, letting his fingers linger on my skin, his thumb run slowly across my lower lip. I looked at the expressions that were coming and going on his face, the warmth in his eyes turning into heat and I reached for him, meeting him halfway in a careful, slow, tender kiss.\n\nHe sat up and leaned against the head of the bed and I scooted up beside him. He took my hand as I settled in, my head once more leaning against his shoulder. We didn't speak, there was no need for words. He twined his fingers gently with mine and looked down at that small, soft point of sweet connection, before lifting my hand up and kissing it tenderly. He used his other hand to push some of my hair away before leaning in and pressing an equally soft kiss to the side of my face. I sighed and turned my face towards his, my mouth once more longing for his.\n\nThe first gentle, tender moment quickly changed into heat and hunger with our continued kissing. He was met by no resistance when he pulled me into his lap, and his paus as he gauged my willingness to continue had me chasing his lips with mine. His wonderful lips, just as warm and soft as they had seemed as he slept, but also eager, hard, wet, hot, perfect.\n\nI was quickly caught back in the whirlwind of heat and passion as our bodies pressed ever closer to each other, our mouths, lips, tongues reaching for and finding sweet pleasure. Conscious thoughts were no longer present as we let our physical attraction play with our senses, let our bodies sway in the natural rhythm of want and lust, let our souls swim in the pure joy of shared pleasure. \n\nI woke up from my lust-filled, dreamlike reality, when his hands started caressing my body, when his fingers started to inch their way under my t-shirt, and I pulled away, desperate to stop him. I didn't want him to feel, I didn't want him to see...\n\nWe sat in silence looking at each other, his hands around my waist, my hands holding his in a tight grip. I shook my head and he nodded, seeming to understand that we had reached a point that I felt we couldn't pass. I leaned back even further and closed my eyes, trying to calm my breaths. I was sure he didn't understand why I wanted to stop, why we couldn't go any further, because he didn't know. And there were no words to describe it, to explain that where I had once hated my body's pale perfection, I was now more than afraid of its brutal imperfection. \n\nI leaned back in and hugged him close, sad and afraid that the fragile lifeline that our shared passion had given me might be severed if he saw, or felt, the injuries on my upper body. I wanted to cry, but found I had no tears left inside of me. So I sat there, holding him, being held, wishing I was strong enough to tell him.\n\nMy sad thoughts were interrupted by a loud banging sound followed by equally loud voices, before the door to my room opened with another bang and a wild-eyed Mary stepped in, hair on end. She took in the scene before her, stopped the words she was obviously about to yell out, and sat down heavily on the chair beside the door. She took a few deep breaths and leaned back, closing her eyes shortly. With her eyes closed she started talking, explaining her entrance in a few, short sentences.\n\n\"I've been trying to reach you on the phone, Sean,\" she said \"and when the tenth call went directly to the answering services I started to get a bit worried. I'm happy you're taking care of my friend, but since I'm still worried about the whereabouts of the devil-husband, it would have been nice to know that you were all still alive. On top of that I had something really important to tell you about our investigations, so... that's why I... you know... barged right in here... without knocking. I'm both sorry and not...\"\n\nI looked at her as she was speaking and could tell that my friend was upset, her legs jumping up and down, her hands even shaking slightly. \n\n\"My phone got drenched in the lake last night,\" Sean answered, regret coloring his words \"I'm sorry, I should have let you know... but I...\"\n\nMary lifted her eyebrows slightly then wrinkled them, probably trying to think why Sean would have felt the need to throw his phone in the water. She looked at his face and then at mine, and the worry-wrinkle between her eyes deepened slightly. She jumped up and looked at us once more, biting her lower lip before asking me to take a short walk with her. I nodded and stumbled out of bed on slightly shaking legs.\n\nWe walked out past a sleep-rumpled, surprised-looking Gabriella. I started walking towards the lake, but Mary grabbed my arm and pointed towards the small wooded area behind the house. I wondered if she had managed to understand the reason behind Sean's destroyed phone, but I didn't say anything, I just nodded and followed her into the trees.\n\nShe stopped under one of the larger trees, sat down and leaned her back against it. I sat down beside her and waited for her to start talking. It was obvious she had something important she wanted to tell me.\n\n\"We've found the films, and I've looked at them,\" she whispered, her voice slightly cracked \"and there are a few scenes where your husband can be clearly identified, so it's safe to say that he's royally screwed. It worries me that none of my resources have been able to find him though, it makes me think that he's protected by someone smart enough to know how to cover his tracks. We're still looking though...\"\n\nI just sighed and nodded, surprised that the worry I felt was more connected to Mary's obvious distress than that my husband was out there, somewhere.\n\n\"Sarah and Susan are protected by a team of security experts, but I own a house just a few miles away, and I would like to bring all of you there, just for safety's sake. It's the most well-protected place that I know of and I need to know that you're all ok, because all this worrying is almost breaking me apart.\"\n\nI nodded once more, thinking that I would try my very best to convince Gabriella, Edward and Sean that we needed to do what Mary wanted us to. I saw my friend shaking her head slightly before exhaling and looking me in the eyes.\n\n\"I'm not going to ask what you were doing in the lake last night, Rose,\" she continued \"but please remember, that if you hurt yourself, you will hurt a lot of people in the process, people who love and care for you. Stay alive, keep breathing, and the rest will sort itself out with time, I promise. And Sean will help, I'm sure of it, he knows what you've been through. You just need to let him in.\"\n\nI nodded, before I blurted out the thought that kept spinning in my mind.\n\n\"He doesn't know... I don't want him to see the wounds on my upper body, they're hideous. He'll be disgusted...\"\n\nShe looked at me with sad eyes before she jumped up and started pulling her usual black, long-sleeved t-shirt off her body. What was she doing? The answer was obvious as I looked at her body, seeing dark tattoos intercrossed by light scars. \n\n\"Is it worse than this then?\" she whispered, her eyes bent towards the ground. Looking up she probably saw my surprised look, my mouth and eyes wide open.\n\n\"No? Not worse? Then I would say you have nothing to worry about. I don't know what your injuries are but I can tell you that superficial skin damage will most likely disappear completely, and deeper cuts will look red from the beginning but will be less obvious as time passes.\"\n\nShe put her t-shirt back on and shook her head when I started to ask her what she'd been through. Her sad facial expression turned to her normal wickedly smiling one as she continued.\n\n\"And... honestly, you'd be surprised how many girls there are who want to keep their t-shirt on when they're having sex. If you don't want to tell Sean why, just tell him you're shy. And then... rock on!\"\n\nWe walked back to the house in silence and was met by Sean, his eyes worriedly scanning the both of us, perhaps trying to see what we'd been talking about.\n\n\"Sean,\" Mary said, her voice commanding \"walk me to my car!\"\n\nI looked at the driveway, realizing that Mary's car was nowhere to be seen. She started walking with fast steps away from the house in the direction of the main road and Sean followed her. She turned back to me and shouted \"Love you!\" before they disappeared behind a big bush and a couple of trees. \n\nI thought about everything she had said, thinking that her fast words always seemed to make so much sense. I wondered if I would ever see a day where she was wrong about something. God, I loved that woman.\n\n* * * * *\n\nI sat silently watching Mary and Rose leave the room. I had never seen Mary look that worried, and I cursed my thoughtlessness. But my mind had been, and was still, almost completely consumed by Rose and all of the feelings she'd awakened inside of me. And I cursed once more at the way passion had made me go too fast, had made want to tear her clothes off, the way she had had to stop me.\n\nGabriella walked up to me and sat down on the bed, her face kept carefully blank, but her eyes telling me that she was worried, and perhaps a bit angry. She took my hand and held it in silence for a short moment before she started talking.\n\n\"You'll be careful, won't you?\" she asked me with a low voice \"I'm not sure who to worry about more, you or her. I can't even tell if what you're doing is a good thing or a bad thing, but take care, walk slowly, listen to your heart, and hers.\"\n\nI nodded, unable to find words to answer her. I knew the slippery steps Rose would have to walk to begin a new life, I knew the pain and frustration that she would feel in her fight to overcome what she'd been through, I knew it would take all of her strength and that there might not be a place for me in her future life, but I still felt it was worth any price to see her through it all, even the price of my broken heart.\n\nI stood up, put my hand on Gabriella's shoulder, gave it a short squeeze and walked out of the room and out of the house. I walked back and forth outside the front door, hoping that I wouldn't have to wait for too long. \n\nThe two women came walking towards to me, and with every step they took, my ability to breathe improved. They were safe, she was safe. And man, I was in big trouble.\n\nMary looked at me, her eyes stormy, and told me to walk her to her car. Her serious expression and commandeering voice had me following her like a loyal soldier answering the call of his general. We walked in silence, until I could see her car parked on the side of the road.\n\n\"I didn't know if you were safe, so I parked here so that the sound of the engine wouldn't alert the people who were holding you hostage... or whatever. I couldn't think of anything else that would make you shut your phone off.\" Mary said, her voice sounding slightly grumpy.\n\nShe opened the passenger seat door, pulled out an official-looking paper box and held it in front of me. When I reached out to grab it she pulled back slightly and looked at me, her face even more serious than before.\n\n\"This box has everything you need to get the bastard. It has documents, pictures, an external hard drive with all of the films and all of the material we've been able to find. It also has some interesting information about other parts of the family. And you can have it all, if you promise me two things...\"\n\nI nodded, my arms still stretched out, eager to get my hands on something that could help destroy Rose's idiot husband.\n\n\"You have to promise me to not look at the pictures and the films, to just hand it over to your homicide unit contact,\" she said, her penetrating stare fixated on me until I answered with a nod.\n\n\"You also have to promise me to not tell anyone what I'm about to tell you now,\" she continued, her voice wobbling slightly.\n\nI answered with another nod and wondered what could possibly be worse than the contents of that box.\n\n\"I've watched all of the films, and I tell you, there are so many good reasons why I don't want you to look at them. But that's not all...\" she continued \"most of the material have been filmed in a place that I know the address to...\"\n\nI nodded, still thinking about the way the evidence I was holding in my arms would lead to a better life for Rose, until my slow mind realized what Mary was saying.\n\n\"What... why... where?\" I spluttered, still not overly impressed with the speed of my own thoughts.\n\n\"This is not the place or the time to tell you the what's and the why's, but I can tell you the where's.\" she answered in a whisper \"Someone has cleaned the place up slightly, painted the walls in another color, but its fundamental design is still the same... the room is still 23 feet long and 15 feet wide, the manacles on the wall are still placed high enough for a person to almost reach the floor with her toes, the walls still look smooth and soft, but are probably just as rough on your skin...\"\n\nShe stopped herself by putting both of her hands over her mouth, and I could see the panic that was shining from her eyes. She turned around swiftly and puked in the nearby ditch. And I stood there with a box in my hands and not enough brainpower to know what to do or even how to react to what she'd been saying.\n\nShe stood up, dried her mouth on her long sleeve, turned back to the car and pulled a complex-looking phone out of the glove compartment and placed it on top of the box.\n\n\"You'll find the address to the place on the hand-written paper on top of all of the other things in the box,\" she said as she walked around the car. \"Now, get going, get it done and make sure it's done right and right-away. Because if the police force fucks this thing up, I won't be responsible for my actions!\"\n\nI stood there like an idiot, mouth gaping, staring at her car as she speeded away. And then I started running, back to the house, back to my car. In the words of a very wise woman, it was time to get going, it was time to finally get things done!"
    ],
    "authorname": "SomeSayLove",
    "tags": [
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/flower-ch-07"
}