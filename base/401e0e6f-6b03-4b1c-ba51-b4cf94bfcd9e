{
    "title": "Nellie and The Bastard",
    "pages": [
        "Author's Note:\n\nThis is a stand-alone story that is part of a larger series about the titular character, Nellie. Each story that follows can be read on its own or together, in any particular order, though they will be posted in chronological order. The stories may fall under different categories, but all will tell tales of Nellie's various adventures.\n\nIn the eleventh story of the Nellie Belanger series, it's time for Nellie to grow up. She's not doing it without a fight, though. This story follows the events of Nellie & The Scare and is the finale of the current series.\n\n**\n\n\"Eleanor! What a... surprise.\"\n\nI nearly spilled melted chocolate on my dress at the sound of my name. Glaring, I glanced up, ready to snipe that my name was Nellie, not Eleanor, but the words didn't pass my lips.\n\n\"Mrs. Marchand,\" I said instead, hating the fake politeness in my voice. \"Nice to see you again.\"\n\n\"Please,\" she said, extending her hand to me. \"Just Mariette is fine.\"\n\nI smiled tightly and shook her hand. Her husband stood next to her, regarding me stiffly.\n\n\"Eleanor,\" he said.\n\n\"Mr. Marchand,\" I repeated. \"Just Nellie is fine, please.\"\n\n\"Hmmph,\" he said.\n\n\"Be polite, Jean-Luc.\" Mariette's tone was pleasant and biting at the same time. \"I'm so surprised to see you here. I thought things between you and your father were... tense.\"\n\nI tried to smile, but based on the slight uptick of Mariette's eyebrow, it must have come across as a grimace. \"We have our ups and downs.\"\n\n\"Certainly, all parents and children do,\" she said. \"We have our ups and downs with all our children. Well, Jean-Paul mostly, but he's quite free-spirited.\"\n\nThe only thing that could be more awkward than running into the parents of the guy I was casually fucking was running into them at my father's cocktail party. Talking around the situation in some kind of elaborate and complicated charade of a dance made everything far worse.\n\nThat was saying something, considering they only knew I was casually fucking J.P. because we'd had a pregnancy scare the previous month, and they only knew that because my childhood best friend and J.P.'s sister, Anne-Marie, had told them. \n\nAnd Anne-Marie only knew because we'd used her as a distraction so J.P. could sneak a pregnancy test over to my dad's. \n\nAnd she was only a distraction because she'd discovered we were sleeping together. Rather than feeling betrayed that I'd been fucking her brother for months, she was obsessed with the idea of J.P. and me as a couple, which neither of us wanted. I'd tried to distance myself from her, but we had needed an excuse for J.P. to come over with the pregnancy test, so Anne-Marie and her big, gossipy mouth were present when everything went down.\n\nAs if that wasn't enough dramatic bullshit, J.P.'s mom also knew that my father and I had a falling out that day because my dad overheard me blurt that I might be pregnant to Anne-Marie. That snowballed into finding out that my dad's girlfriend, Kimberlee, was pregnant, and that she was apparently sick and tired of him treating me like a particularly valuable piece of property.\n\nI didn't know when my life had gotten so fucking complicated. I missed the days where my biggest worry was which guy I was going to take home from the bar, and my best solution was deciding to take them both home so I could get double-teamed by a couple of cops. I missed the days when I revealed my tits to people in public, not my personal secrets.\n\nIt was probably J.P.'s fault. The bastard.\n\nCalling him \"free-spirited\" was Mariette's polite way of saying he was making poor life choices and that I was one of those bad decisions. She wasn't wrong; I was a horrible life choice for J.P. to make, albeit an incredibly fun one. Considering how often we'd hooked up, he didn't seem to mind too much. Still, I bristled at her words.\n\n\"As long as he's happy, though, right?\" I said.\n\nMr. Marchand snorted. \"Of course. Who cares if he's broke and jobless, as long as he's happy.\"\n\nI frowned, but before I could ask for clarification, Mariette let out a loud, high-pitched laugh.\n\n\"Jean-Luc!\" she admonished playfully, though the tone didn't match the glint of freezing anger in her eyes. \"You'll have to excuse him, Eleanor, my dear husband is a bit of a grump tonight.\"\n\n\"Uh... okay,\" I said.\n\n\"Well, anyway, I thought we'd best say hello,\" she continued. \"Jean-Paul was not able to make it tonight, though I'm sure you knew that.\"\n\n\"Of course,\" I said, smiling fakely and holding the expression as the Marchands excused themselves, then immediately dropping the act.\n\nI hadn't known he wouldn't be here, but that was because he didn't even know I was in town. After the disastrous Thanksgiving debacle, we'd drifted a bit apart. We still texted once in a while, but things were strained. I couldn't blame him; no one wants to be the guy who knocks up his friend-with-benefits. That had to be scary on its own, not to mention he'd been witness to my dad's tirade against me that culminated with both me and Kimberlee leaving. And I mean, he had been more than kind to me after that. He didn't have to let me stay the night at his place or stand up for me to my dad, but he did anyway.\n\nThat should have been it. I should have walked away from the whole situation, refused to take my dad's calls, and moved on with my life. The problem was that Kimberlee was pregnant, and I wanted to eventually meet my baby brother or sister. \n\nStill, I resisted allowing him to apologize for weeks. Well, for the weeks after he'd decided he wanted to apologize. I was too cynical to think that it was because he'd genuinely changed; more likely, it was that two weeks went by with Kimberlee refusing to even speak with him until he considered making the changes she had demanded. Knowing my father was a stubborn, calculating jackass, he had probably silently stewed the entire time, determined to wait until she came crawling back so he could graciously allow her back into his life.\n\nThe problem was that he didn't quite understand how much strength Kimberlee had, and how fiercely protective she had gotten. When he finally seemed to realize that she wasn't going to crawl back to him and that if he wanted to be part of his child's life, he'd have to at least pretend to change his ways, he gave in.\n\nIt could be that he truly loved Kimberlee and realized he was going to lose her if he didn't. However, the chance of me deciding I wanted to settle down and get in a serious relationship or something was much higher. Since the chances of that were practically zero, it seemed pretty unlikely. \n\nThe first call came two weeks after that Thanksgiving.\n\n\"You've got to be kidding me,\" I said, glancing at my phone as it vibrated on top of the bar.\n\n\"Who is it?\" asked my best friend, Sydney.\n\nI didn't have to respond; she glanced down and gasped, grabbing the vibrating phone as she studied the name.\n\n\"What does he want?\" she asked.\n\nI shrugged. \"Don't know and not going to find out.\"\n\nI rejected the call, dismissed the notification that said I had a new voicemail, and deleted it without listening to it a few hours later.\n\nHe called again the next day, while I was in class.\n\n\"...in the second case study, you can see the bullet's trajectory through the internal organs...\" Dr. Spitzki froze as my ringtone suddenly started. \"Miss Belanger, is that\u2014\"\n\n\"I'm on it!\" I said, digging through my bag frantically. \n\n\"Out,\" he said simply.\n\n\"Dr. Spitzki, please, it was a mistake and I\u2014\"\n\n\"Out, Miss Belanger.\"\n\nI sighed, not even able to come up with some witty retort as I collected my things. That, more than anything, made him stare at me as I left the room. As soon as I was in the hallway, I went to delete the voicemail message but jumped as Dr. Spitzki called my name.\n\n\"Yes?\" I asked, turning towards him.\n\n\"Is everything all right?\" he asked suspiciously. \"I've kicked you out of my class almost weekly for the past two years, and you've never left without a snarky remark.\"\n\nMy mouth twitched as I tried to smile. \"Yeah, it's fine. Just some personal stuff. Sorry to disturb the class.\"\n\nI could feel him staring after me as I walked down the hall, but I was so annoyed and on edge about my father's calls that I couldn't even appreciate Dr. Spitzki's obvious befuddlement. That just served to annoy me more. I lived for driving Dr. Spitzki crazy, and now my dad was ruining that, too.\n\nHe called again that evening and again the next morning. For the first time in my adult life, I turned my phone off during class. When I finished for the day and turned it back on, there was another missed call, and most surprisingly: a text message.\n\nFrom my dad.\n\nWho did not text.\n\nI resisted looking at the text for a long time. I could almost picture what it said:\n\nEleanor, answer my calls or I'll have your landlord evict you.\n\nDear God, would you grow up and show some class? Call me by the end of the day or I will ensure you cannot graduate this year.\n\nEnough is enough, Eleanor. There's a charity event next weekend and you WILL be present; otherwise, I will take you to court. Oh, you don't think a father can sue his daughter? Well, I'm enough of a dirtbag that I'd consider trying it. Perhaps Jean-Paul will provide you with some legal advice if you're able to take his dick out of your mouth long enough for him to string some sort of coherent argument together.\n\nBy the time I conceded that I probably imagined the message to be a little worse than it likely was and that I should just consider reading it, my phone rang again. It wasn't my dad this time, though. I almost laughed as the name \"K. DUNN\" flashed on my screen. \n\n\"If you're using Kimberlee's phone to call me under the assumption that I'd answer it, you're right, but I'm going to hang up if this isn't her,\" I said as I answered.\n\nShe laughed. \"So you are ignoring Max.\"\n\n\"Of course I am,\" I replied.\n\n\"I wasn't sure,\" she said. \"He said he was trying to call but that you wouldn't answer. I didn't know if I should believe it or not.\"\n\n\"So you're taking him back, then?\"\n\n\"There are conditions,\" she said. \"One being that he needs to apologize to you.\"\n\nI laughed so hard that I dropped the phone. It took me a good chunk of time before I could even lean forward and pick it up off the floor.\n\n\"I never pegged you to be a comedian,\" I finally managed to say. \"Damn, Kimberlee. That's funny.\"\n\n\"I'm not joking.\"\n\n\"Are we talking about the same person here?\" I asked. \"My dad? Your... whatever, baby daddy? Hell will freeze over before he apologizes to anyone for anything.\"\n\n\"He apologized to me,\" she said softly.\n\nI sighed heavily. \"And you believe him?\"\n\n\"Yes, Nellie, I do. Please consider talking to him. Come by next weekend, if you want.\"\n\nWhen I hung up from Kimberlee, I hesitated again, then checked the text message from my dad.\n\nCan we please talk, Nellie?\n\nThe following Saturday, I drove to Montreal and had the most awkward conversation of my life with my dad. It was almost surreal to sit across the table from him as he apologized for how he had treated me, committed to doing better, and acknowledged that he would understand if it took time for me to forgive him. \n\nThe words were stiff and carefully-constructed, but beneath them was sincerity. I didn't think my dad could stop speaking like a businessman\u2014there was a high probability that he'd show up to the hospital in a suit and greet my baby brother or sister with a handshake as soon as Kimberlee gave birth\u2014but rather than cloaking his meaning, he was actually being genuine. It was that, more than anything, that left me speechless.\n\nOf course, it was only a small step. I didn't think Dad could change completely, and obviously, Kimberlee wouldn't have wanted him to; she'd fallen in love with him as he was. He proved that shortly after I agreed to let him try to earn my trust again.\n\nI protested; I grumbled; I pointed out that this was the exact type of thing he'd expected me to do in exchange for paying my tuition. I told him it made me question if he was actually apologizing or just doing it because he wanted to keep Kimberlee around. Hurt flashed across Kimberlee's face when I said that and I felt terrible, though not entirely wrong. It was only when my dad calmly pointed out that they'd made plans to have a cocktail party before I'd decided to visit.\n\n\"If you truly do not want to attend, you can stay upstairs,\" he said in a tone so reasonable that I barely recognized his voice. \"Or you could go out. I would just ask that you not decide three hours after it starts to come downstairs in your pyjamas and help yourself to leftovers. If you are attending, I ask that you conduct yourself accordingly.\"\n\n\"There will be a chocolate fountain,\" Kimberlee said. \"If that changes your mind at all.\"\n\nIt did, and I hated the fact that it did. I tried to hold a grudge, to pout that even immediately after apologizing for buying not my love but my obedience, my dad was falling into his old ways, but I couldn't quite convince myself that was true. \n\nBegrudgingly, I asked Kimberlee to help pick an outfit for the cocktail party, and she kindly didn't laugh at my change of heart. \n\nIt was only when people started arriving that I cursed myself for falling into the trap yet again. It was easier to blame Dad and Kimberlee for telling me it was just a small gathering and not informing me of who was on the guest list than it was to remember how easily I could be bought. Dad had bought me by paying my tuition, rent, and expenses; I'd finally managed to break free of that, only to find myself right back where I came from under the promise of a chocolate fountain.\n\nI didn't recognize most of the guests. Clinton Thibault was there with a pretty girl who looked up at him with wide, glazed eyes. I wasn't sure if she was love-struck or drugged, though knowing Clinton, I would've put my money on drugged. His parents arrived shortly after, his mother giving me a dirty look as she caught sight of me standing next to the bar. \n\nOther people my dad worked with arrived: investors, clients, acquaintances. People whose names I didn't know and didn't care to learn, even as Kimberlee introduced me to them. I smiled fakely, shook hands, repeated the same piece of small talk ad nauseam, and kept one eye on the dessert table so I could be first in line when they turned the chocolate fountain on.\n\nOccasionally, I watched the dessert table with two eyes, which must have been why I didn't notice when the Marchands showed up until I was heaping chocolate-dipped everything onto a small porcelain plate. \n\nI intended to gorge myself on as much chocolate as I could without actually dipping my entire head in the fountain, then sneak upstairs to my bedroom and spend the rest of my night in stretchy pants watching Netflix while the society types continued their charade downstairs. Unfortunately, Kimberlee caught me on my third or fourth plateful of strawberries and pineapple slices, smiling prettily as she took my arm and brought me into a discussion with some people I just had to meet.\n\n\"Elizabeth is my sorority sister from university,\" she said, introducing me to a tall woman with short hair and impeccable lipstick. \n\n\"Cool. Nice to meet you,\" I said politely.\n\nKimberlee laughed lightly and patted my arm. \"Elizabeth, I just had to introduce you to Nellie. This is Max's daughter.\"\n\nElizabeth nodded, her face measured. \"Oh right, the one who's still in school?\"\n\nKimberlee smiled brightly. \"Yes, taking her degree in forensic science.\"\n\nAs it turned out, Elizabeth had some sort of connection to someone who worked for a government agency that ran a forensic lab in Toronto. That high-society dance started again as Kimberlee spoke; she couldn't just say that she was asking Elizabeth to put a good word in for me or to let me know about any upcoming opportunities, and Elizabeth couldn't just say \"yes\" or \"no.\" No, I had to stand there with a smile that looked crazier and crazier as my chocolate-covered pineapple sat on my plate instead of in my mouth.\n\nIf it weren't for that delay, I wouldn't have had to deal with the Marchands again, but they came up to talk to Kimberlee while I was still mourning the fact that most of the chocolate had stuck on my plate. \n\n\"Oh, how are you, Mariette?\" Kimberlee asked.\n\n\"Just lovely, dear,\" Mariette said, plucking a glass of wine off a tray. \"What a wonderful little soiree you've put together.\"\n\n\"Thank you,\" Kimberlee replied. \"How are things with you?\"\n\n\"Just fine,\" Mariette said. \"Anne-Marie is doing well in school, of course, and Marc-Andre is enjoying his first year. He's doing quite well, isn't he, Jean-Luc?\"\n\n\"Hmmph,\" Mr. Marchand said. \"Doesn't seem to quite have the aptitude to get into law school, but I'm sure he'll try his best.\"\n\n\"He'll do wonderfully,\" Mariette said firmly. \"Besides, if he wants to do something else\u2014\"\n\n\"\u2014then he had better say something now so I can figure out what the hell to do with my firm,\" finished Mr. Marchand grumpily.\n\n\"Jean-Luc,\" Mariette laughed, putting a hand on his forearm in a way that seemed to mean \"shut up.\"\n\nI glanced back and forth between them, confused. It would be entirely inappropriate for me to ask the question that I wanted to. Out of the corner of my eye, I could see Kimberlee looking at me, likely hoping I would keep my mouth shut.\n\nSo, of course, I opened it.\n\n\"I thought the plan was to get J.P. to take over your firm,\" I said.\n\nMr. Marchand turned to me slowly. It was strange; he looked a lot like J.P., but colder. Both were tall and shared the same thick blond hair. Both had similar bone structure, although J.P. did have Mariette's eyes. He also often had a mischievous smirk on his face, but the playful glimmer in his eyes kept him from looking arrogant. His dad, on the other hand, did not have that playful glimmer. Instead, he raised an eyebrow, looking down at me with an air of condescending humour.\n\n\"I would expect you, of all people, to know,\" he said simply.\n\n\"We're just friends,\" I said defensively. \n\n\"I'm surprised you'd say such a thing, given the situation that occurred last month.\"\n\nIf he was trying to embarrass me, it wasn't working. Mr. Marchand didn't seem to know that I had no sense of shame.\n\n\"You mean the one we keep having to dance around talking about because it might be considered improper in present company?\" I said innocently.\n\nHe laughed, surprising me. \"Yes, that one. Young ladies don't generally admit to, ah... well.\"\n\n\"Sleeping around?\" I finished helpfully.\n\n\"Nellie!\" Mariette said, shocked. She looked to Kimberlee, seemingly searching for some kind of verification that I was acting inappropriately. \n\nI was pretty sure that Kimberlee wasn't so bad, but I fully decided that she was actually cool when she covered her mouth with her hand as she tried to stifle a laugh.\n\n\"I suppose you could say it that way,\" she giggled.\n\nMr. Marchand shook his head disbelievingly. \"Jean-Paul has decided to take a job with some do-gooder firm. He has no interest in working at my firm. Apparently, someone inspired him to 'make a difference.' I'm curious to know who it was since it wasn't you, it seems.\"\n\nI think he meant for that to be a biting remark, that he was trying to imply that maybe J.P. had feelings for someone who wasn't me. Rather than protest that J.P. and I were just friends or point out that it had been me who told him to make a difference if that's what he wanted to do, I just smiled.\n\n\"Well, good for him,\" I said brightly. \"You'll have to congratulate him for me.\"\n\n\"Hmmph,\" Mr. Marchand said again. \"If you're such good friends, I don't see why he wouldn't have told you himself.\"",
        "I rolled my eyes as Mariette admonished him again, excused myself, and finally devoured the rest of my chocolate-covered pineapple.\n\nIt didn't bother me that J.P. hadn't told me. He didn't owe me anything; we were just friends. If he wanted to move on, he was well within his rights to. He wasn't obligated to tell me what he was doing with his life, or to thank me for being the one to push him to make a career change if he was unhappy, even though I definitely had planted the idea in his head. \n\nMaybe it bothered me a little bit.\n\nMaybe it bothered me enough that I finally managed to sneak away from the cocktail party and up to my bedroom, where I changed out of my fancy grey dress and into jeans and a T-shirt before finally texting him.\n\nAre you home?\n\nHe responded almost immediately. \n\nYeah. Why?\n\nI'm in town. Can I come over?\n\nI waited for his response, frowning as seconds went by, then minutes. When he still hadn't responded five minutes later, I almost considered texting him again to tell him he was a dickhead. That would make it seem like it bothered me, though, so instead, I just decided to go with my stretchy-pants-and-Netflix plan and not think about him.\n\nOf course, the moment I made that decision, my phone rang.\n\n\"What do you want?\" I answered.\n\n\"Ouch, babe,\" J.P. said.\n\n\"Don't... ugh, you know what? Never mind.\"\n\n\"Sorry,\" he said, chuckling. \"I was in the middle of something. Why are you in town? Are you at your dad's?\"\n\n\"Um, yeah.\"\n\n\"Are you okay?\"\n\nI snorted. \"What do you care?\"\n\n\"Come on, Nell,\" he said. \"I know you think I'm the sexiest piece of meat you've ever seen, but I'm more than just a hot body. I do care about shit, you know.\"\n\n\"And so humble.\"\n\n\"That was barely a burn. You're upset. Talk to me.\"\n\n\"About what?\" I asked. \"All I wanted to know is if this weekend was going to be a total waste of time or if I could at least get laid after suffering through this ridiculous cocktail party.\"\n\nI heard a rustling sound in the background. \"Cocktail party? Last I heard, you were never talking to your dad again. What happened?\"\n\n\"He apologized. It's a long story.\"\n\nThere was another loud, rustling sound. \"Are you gonna tell me?\"\n\n\"Where are you right now?\"\n\n\"What?\"\n\n\"What's that noise?\"\n\nHe laughed. \"You can hear that?\"\n\n\"Yeah. What are you doing?\"\n\n\"If you must know,\" he said. \"I'm in bed.\"\n\n\"Already? It's Saturday night!\"\n\n\"For your information, I had to work all day,\" he said haughtily, then laughed. \"But... yeah. I must be getting old.\"\n\n\"You said you were in the middle of something when I texted you.\"\n\nJ.P. chuckled awkwardly. \"Uh, yeah.\"\n\nI grimaced. \"Oh. Sorry. What's her name?\"\n\n\"Huh?\"\n\n\"The person you were in the middle of when I texted.\"\n\n\"Person?\" he repeated. \"Oh. Uh... hmm. Never thought of naming it before, I just\u2014\"\n\nRealization dawned on me, and I burst out laughing. \"Sorry.\"\n\nIt was pretty rare that I flustered J.P., but I managed it then. He laughed along with me, and even though I was pretty sure I had never seen him blush, I could almost imagine his face turning red.\n\n\"Yeah,\" he finally said. \"I was right in the middle of, uh... badgering the witness.\"\n\n\"That's awful,\" I replied, still giggling. \"And here I thought you were celebrating Palm Sunday.\"\n\n\"Nah, I decided to play a little five-on-one,\" he shot back. \n\nI almost howled. \"Well, don't forget to leave yourself some time to polish the banister.\"\n\n\"Oh, it's polished. Practically shining,\" J.P. said. \"What about you, Nell? Planning to take a self-guided tour?\"\n\n\"You're terrible,\" I said.\n\n\"You like it.\"\n\n\"Not even a little bit.\"\n\nHe laughed again. In my head, I could see his blue eyes sparkling, the corners crinkling as he smirked. \"Sure, babe. You should tell me about it.\"\n\n\"About... are you serious?!\"\n\n\"Yeah, why not?\"\n\nI snorted. \"Come on. You'd make fun of me the entire time.\"\n\n\"Maybe a little, but I'd think it was pretty hot.\"\n\n\"I'm not having phone sex with you, J.P.,\" I said. \"Why are we even having this discussion? You just... and I'm in town.\"\n\n\"True. You should come over.\"\n\n\"Great idea. Why didn't I think of that?\"\n\n\"Probably because I'm the smart one,\" he teased. \"See you soon, babe.\"\n\nI was able to leave without incident; no one seemed to notice as I stole down the stairs and out the front door, though I did tell my dad's butler, Pierre, that I was heading out. I considered it a moment of enormous personal growth; normally, I wouldn't have cared if no one knew where I was, but if my dad could try to make amends, maybe I could, too. \n\nI pulled up to J.P.'s apartment building a short while later, managed to find a spot in the visitor parking, and buzzed him to let me in. The loudspeaker in the foyer crackled as he answered it.\n\n\"Who is it?\" he said teasingly.\n\n\"Yeah, I'm here about the My Little Pony collection you posted for sale on the Brony Montreal group? Have you decided if you're willing to part with it yet?\"\n\n\"Absolutely fucking not,\" came the response. \"They're mine, and I won't sell them to some poser Pegasister. Good day!\"\n\nWith that, the speaker went quiet, and he didn't unlock the door. Laughing, I pressed the buzzer again.\n\n\"Let me in, you asshole,\" I said when he picked up.\n\n\"Asshole?\" he repeated. \"I don't allow that kind of negativity in my peaceful home. Perhaps you should attend a church service before returning.\"\n\n\"Well, if you want me to go, I'll leave. Have fun playing five-on-one again,\" I said.\n\n\"You make a good point,\" he replied, and the speaker turned off again. That time, though, the door buzzed as it unlocked.\n\nI was smiling as I took the elevator up to his apartment and walked down the hallway. I tried to think of something witty to say when I knocked on his door, wondering if it was too cliche to reuse the whole \"pizza delivery\" thing. I was trying to put together some sort of pun about being a pipe cleaner, but J.P. spoiled the whole thing by opening his apartment door before I could even knock.\n\n\"Let me guess,\" he called while I was still a few doors away. \"You're here for your flagpole sitting lesson.\"\n\n\"Nah, I'm from the STD Screening Mobile Unit,\" I shot back. \"We have those results you've been waiting for, Mr. Marchand, and they're fairly extensive.\"\n\n\"Perfect,\" he said. \"One more diagnosis on my punch card, and I get a free coffee from Tim's.\"\n\n\"Just a small one,\" I said. \"And the offer's not valid between seven and nine a.m. or on weekends.\"\n\nHe grinned, holding the door for me. \"That's how they get ya.\"\n\nI stuck my tongue out at him when I walked past.\n\n\"Just like you get... crabs...\" \n\nThe retort dissolved at the same time that I stopped in my tracks. Glancing around, it took me a moment to realize what I was seeing.\n\n\"You're moving?\" I asked as he shut the door.\n\n\"Yep,\" he replied.\n\nThere were cardboard boxes everywhere, though most were stacked neatly against the wall of the living room. The furniture was still there, but the walls were bare, and a half-open cabinet in the kitchen revealed its empty shelves.\n\n\"What... when?\"\n\n\"Monday.\"\n\n\"You just moved here!\"\n\n\"I know,\" he said. \"But I'd already put an offer on this place when I decided to, uh... well...\"\n\n\"Quit working with your dad to go work for some do-gooder firm that isn't in Montreal?\"\n\nHe laughed. \"When'd you see my dad?\"\n\n\"At the cocktail party.\" I picked up a roll of packing tape that was sitting idly on the kitchen table, fidgeting with it so I didn't have to look directly at him. \"He was surprised I didn't know.\"\n\nJ.P. nodded but didn't say anything.\n\n\"I kind of was, too,\" I continued.\n\n\"Were you?\"\n\n\"A little. I thought we were still friends, even if things have been... you know. Weird.\"\n\nThere was a half-smile on his face as he looked at me. \"Sorry. Just seemed like you'd want some space after everything.\"\n\nI shrugged. \"It's fine. I get it.\"\n\n\"Nell\u2014\"\n\n\"It is,\" I said. \"So, you got a new job? Why? Your dad must have been so pissed when you quit.\"\n\n\"Oh, totally. He thinks I'm completely insane.\"\n\n\"He's not wrong.\"\n\n\"Apparently.\" J.P. jerked his head towards one of the boxes. \"If you're gonna play with the packing tape, help me out here?\"\n\n\"I didn't come over to help you move,\" I grumbled, but went up to the box in question and taped it shut.\n\n\"And yet, solely out of the kindness of your heart, you are.\" He came up behind me and kissed the side of my head as I straightened back up, making me roll my eyes.\n\n\"Weren't you in bed masturbating when I texted you?\"\n\n\"Yeah, but I had to get out of bed because this chick I know wanted to come.\"\n\n\"You mean come over.\"\n\n\"That, too.\"\n\nI rolled my eyes again as he snorted back a laugh. \"You're terrible.\"\n\n\"You like it.\" He took the packing tape from me. \"But if it's too much trouble, I get it.\"\n\n\"I just figured there were better uses of our time than taping boxes shut.\"\n\n\"I could try taping your hands behind your back,\" he suggested helpfully. \n\n\"Maybe a piece of tape across your smart mouth would be more effective,\" I muttered.\n\n\"Mmm. Kinky, babe.\"\n\nI smirked at him. \"Tell me why you decided to leave your dad's firm first. I mean, to piss off your parents and give up that kind of money?\"\n\n\"Says the girl who got a tattoo to piss off her dad.\"\n\nI snorted. \"How many times do I have to say it wasn't just to piss him off?\"\n\n\"As many as it'll take to convince yourself, I guess.\"\n\nI rolled my eyes, and he laughed.\n\n\"There's more to life than money,\" he said. \"I wasn't happy there.\"\n\n\"I know, but\u2014\"\n\n\"\u2014but I told this chick I know that I didn't go to law school intending to be a corporate lawyer and that I wanted to make a difference. This smartass told me to make a difference, then, even though I told her it wasn't nearly as easy as that.\"\n\nI tried not to laugh. I'd said those exact words to him at the Diamond Gala. At the time, he'd been irritated, though he had gotten over it pretty quickly when we snuck out of the ballroom to hook up in a deserted hallway. It seemed like that little conversation had left him thinking. \n\n\"So I, uh, started looking into new jobs,\" he continued. \"Ended up finding a firm that was looking for a contract guy, but practices other types of law, too. They're willing to teach me to specialize in something new. The chances of ever having an opportunity like this again are less than zero, so... I'm doing it. All because of what this chick told me.\"\n\n\"Sounds like a pretty smart chick,\" I said.\n\n\"She seems to think so, but the jury's still out on that,\" he replied. \"She is fucking me, after all.\"\n\n\"Well, there's no accounting for taste,\" I said.\n\nHe shook his head as he grinned. \"She's also annoying as hell and busts my balls constantly, but for some reason, I like her anyway.\"\n\n\"As a friend,\" I said.\n\nHe almost agreed. I saw the instinctive response, the small sparkle of laughter just starting, before it fizzled out. He looked at me, then glanced to the side, as if deciding whether or not he should say something.\n\nAnd I knew what he was going to say. I didn't want him to say it, but I knew what was coming. My stomach clenched as the grin on his face faded, and before I could say anything to redirect the conversation, he sighed.\n\n\"No. Not just as a friend.\"\n\n\"Don't,\" I said, my heart starting to pound.\n\n\"Nell\u2014\"\n\n\"We're just friends,\" I repeated, my voice cracking warningly. \"You knew... you know that.\"\n\n\"Just tell me why,\" he said plainly. \"I thought I could keep, I dunno, dancing around whatever I was feeling so we could just keep... you know. But I can't, okay?\"\n\n\"You shouldn't be feeling anything.\" I almost winced as the words came out far harsher than I intended them, but J.P. didn't react. \"Don't do this to me.\n\nThe usual, playful expression on his face was gone, and in its place was one of solemn resignation. I had only seen him look like that one other time; even when faced with the thought that I might be pregnant, he hadn't seemed so stoic.\n\n\"I'm not doing anything to you,\" he said. \"I just can't... we need to talk about this. I need to talk about this.\"\n\n\"Why right now?\" I asked.\n\n\"Because every time I try to say it, you shoot it down,\" he said.\n\n\"Yeah, because I don't want to talk about it!\"\n\nHe smiled sadly. \"You're not the only one involved in this. We've been through a lot of shit, and it's not fair for me to have to keep hiding this.\"\n\n\"So what, you feel like because you stood up to my dad for me and let me stay with you or whatever that I, what, owe you an explanation?\"\n\n\"Not even close,\" he replied. \"You don't owe me shit, and you never will. I don't... that's not how I do things, okay? I stood up for you because it was the right thing to do, and I got you out of there because I care about you. You don't owe me an explanation, but that doesn't mean I don't want one.\"\n\nI stuttered for a moment before glaring at him. \"You're lawyering me again.\"\n\nJ.P. laughed. \"You can't just claim that I'm 'lawyering' you when I'm being logical.\"\n\n\"Well, I don't like it.\"\n\n\"What, logic?\"\n\n\"Yes.\"\n\nHe snorted again and shook his head. \"Look, I can't pretend to just be your friend. It might've started that way, but I can't anymore. I care about you, a lot. More than I want to, trust me. It'd be a hell of a lot easier if I didn't.\"\n\n\"You sure know how to flatter a girl.\"\n\n\"Do you want flattery, honesty, or to pretend there's nothing between us?\" he asked bluntly. \"You only get one.\"\n\nI opened my mouth to reply, but the answer caught in my throat. I wanted to tell him that I tried to pretend there was nothing between us. That was what I had wanted all along. I wanted things to roll back to five minutes earlier when my biggest worry had been what embarrassing thing I could shout in the hallway of his building.\n\nThe thing was, if I picked pretending, I was picking a lie. If I picked flattery, I was picking the same kind of hollow compliments I had spewed at the cocktail party earlier that night.\n\nThere was only one thing I could pick, and I couldn't bring myself to say the word. It was stuck, held back by the throbbing of my pulse through swollen veins, trapped by the dryness of my throat and mouth. My body was protesting, panicking, terrified to face what he was about to say.\n\nThe bastard knew it, too, and his stupid face softened as he looked at me, practically trembling in front of him.\n\n\"I'm not asking anything from you, you know,\" he said quietly. \n\n\"Good,\" I said. \"Because it's not happening. You know I don't do relationships. I don't do feelings. I just want... I want to have fun.\"\n\n\"You have this really specific idea of what relationships are that is just... wrong,\" he said. \"You know that, right? A relationship doesn't have to be about losing your freedom. In fact, it shouldn't be.\"\n\n\"Not the point,\" I said.\n\n\"What is the point, then?\"\n\nI stammered again, grasping for the right words. \"I don't want to be tied to one person.\"\n\nHis mouth twitched. \"A relationship doesn't have to be that, either.\"\n\n\"Oh, right,\" I said sarcastically. \"Because as if being smothered by one person wasn't enough, I could go ahead and be smothered by two, or three, or\u2014\"\n\n\"That's not what relationships are about,\" he said.\n\n\"Could've fooled me.\"\n\nHe laughed, a short, staccato sound. \"I know what you wanted going into this. But it's not just about that for me anymore.\"\n\n\"Why didn't you tell me as soon as you knew, then?\" I managed to say.\n\nHe sighed, the smallest hint of frustration breezing across the room.\n\n\"I tried, Nell. You didn't want to hear it. Every time I tried to... you talked over me. You laughed or ignored it or...\" He took a breath and shook his head. \"Look, I like you, but that's not a great way of treating people you're supposed to be friends with. I like myself enough to know I don't have to put up with that.\"\n\n\"So, I've been a bad friend?\" I replied, my voice shaking more than I wanted it to.\n\nHe studied me for a moment, blue eyes boring into mine. I couldn't look away, but I also couldn't give him what he wanted. \n\n\"I'm in love with you,\" he said. \n\nMy stomach dropped.\n\n\"And that's not what you want,\" he continued. \"I get that. I'm not asking you to change what you want for me.\"\n\n\"Then why are we having this conversation?\" I whispered.\n\n\"Because we... I can't do this. I can't just be your friend.\"\n\nI nodded slowly, biting my lip for the dual purpose of distracting myself with a brief prick of pain and to keep my lip from quivering.\n\n\"If you can't be my friend and I can't be... more than your friend...\" I looked up at him, not ready to finish the sentence.\n\n\"It's okay, babe. Say it.\"\n\nI swallowed, far sadder than I had any right to be. \n\n\"This is it, then. We're not friends anymore.\"\n\n\"Okay,\" he said. \"We're not friends anymore.\"\n\nI pressed my lips together, then nodded slowly.\n\n\"Okay. I'm gonna go, then.\"\n\n\"All right.\"\n\n\"Bye, J.P.\"\n\nHe watched as I turned to leave his apartment. Just as I opened the door, he finally spoke.\n\n\"I'll miss you, Nell.\"\n\n**\n\nThree loud knocks sounded on my apartment door. My phone hadn't gone off, so that could only mean it was Sydney.\n\n\"It's unlocked,\" I shouted from my spot on the couch.\n\nI knew it wasn't just Sydney the moment the door flung open. Even without turning my head, I could sense her energy, and I was already groaning and bracing myself as she barrelled into my apartment.\n\n\"Nellie, cherie!\" Anne-Marie squealed. \"Surprise!\"\n\n\"Did Syd seriously let you in again?\" I asked.\n\nSydney had the decency to blush. \"Well, yes, but\u2014\"\n\n\"\u2014but we both assumed, correctly of course, that you wouldn't let me in if I just showed up,\" continued Anne-Marie. \"So I dialled dear Sydney's buzzer instead and explained that it was very, very important that I see you.\"\n\nI sighed and paused the show I'd been watching on Netflix, brushed some of the chip crumbs off my shirt, and stood up.\n\n\"I'll let you two talk, then,\" Sydney said quietly. \"Text me later, Nellie.\"\n\nThe door closed quietly behind her. I waited until it was shut before turning to Anne-Marie.\n\n\"No,\" I said.\n\n\"You don't even know what\u2014\"\n\n\"I'm not reconsidering being in a relationship with your brother, I'm not calling him, we're no longer friends, and that's that,\" I said. \"Did I miss any points you were going to make?\"\n\n\"Just the one where you are absolutely, completely, horrendously miserable,\" Anne-Marie said frankly. \"It is Saturday night, cherie, and you are sitting at home in your leggings eating chips?\"\n\n\"It was a hard week. Finals are coming up. I had a lot of studying to do.\"\n\n\"And watching Extremely Wicked, Shockingly Evil and Vile counts as studying?\"\n\n\"I'm in forensic science. It's relevant.\"\n\n\"I very much doubt Ted Bundy movies are relevant to your finals,\" she said skeptically. \"Even Sydney seemed worried. You are not acting like yourself.\"\n\n\"How would you know?\" I asked.\n\n\"Because I do,\" she said. \"Because my brother told me.\"\n\nI rolled my eyes. \"He doesn't know anything about me.\"\n\n\"He knows enough to be in love with you.\"\n\n\"He knows fuck-all if he thinks he's in love with me,\" I snapped.\n\nAnne-Marie raised a perfectly groomed eyebrow. \"I seem to have hit a nerve.\"\n\n\"Drop it,\" I grumbled. \"I'm doing just fine.\"\n\nIt was mostly true, as long as the definition of \"fine\" was \"not fine at all.\" However, there was no way I was admitting that J.P. had left me rattled. I refused to acknowledge that it had been two weeks of me replaying every second of that conversation over and over in my mind. I analyzed every word, getting angrier and angrier with J.P. as I covered how angry I was with myself. \n\nI tried telling myself that it wasn't like I wanted a relationship with him. I just wanted what we had, and I was angry that he'd ruined it. I tried to leave it at that, but deep down, I was angry at myself for ignoring it so long. For being a bad friend. For treating him a lot less kindly than I should have.",
        "Those moments of anger only seemed to come out at night, though, and that day, I was doing a reasonably good job of convincing myself that J.P. carried all the blame. \n\nAnne-Marie sighed. \"Nellie, I know you do not want to hear this\u2014\"\n\n\"Then don't say it.\"\n\n\"I will say it,\" she said firmly. \"You and Jean-Paul belong together. Give him a chance.\"\n\n\"I don't want a relationship.\"\n\n\"Why?\" she asked. \"You give him some convoluted excuse about feeling suffocated but\u2014\"\n\n\"Since when does he tell you everything?\" \n\n\"I have my ways,\" she said, her lips curling up into a smirk reminiscent of J.P.'s. \"Just tell me this, Nellie. Why do you think relationships are so suffocating?\" \n\n\"I don't need someone telling me what to do and where to go and how to act,\" I said. \"I got enough of that from my dad. I'm not putting myself into that situation for a regular source of dick.\"\n\n\"You know, I have been with Remy for nearly five years,\" she said. \n\nI rolled my eyes. \"Is that with or without all the times you broke up?\"\n\n\"Without,\" she said patiently. \"We may have broken up a few times, but we always get back together. In any case, I have never felt suffocated by him. He has his life, and I have mine, and at the end of it, we come together and share those things.\"\n\n\"What are you, some kind of walking romance advice column?\" I grumbled. \"I shouldn't have to justify why I don't want a relationship.\"\n\n\"It's just, I don't quite believe that. I think you do want one.\" Her tone was almost condescending. \"You are just scared to admit it.\"\n\n\"No, I'm not,\" I said. \"If that's all you came here to tell me, maybe you should leave.\"\n\n\"Actually, I came here to give you this.\" She pulled a piece of paper out of her purse and handed it to me.\n\n\"What is this?\"\n\n\"Jean-Paul's new address.\"\n\nI crumpled the paper and threw it at her. \"Goodbye, Anne-Marie.\"\n\n\"It's just for when you change your mind!\" she giggled, snatching the paper and flattening it again. \"Believe me, cherie, it is very strange for me to try to talk someone into sleeping with my brother, but you were both much happier when you were together.\"\n\n\"We weren't together!\" I said, exasperated. \"You might not want to hear it, but we were just fucking, okay? He's the one who wanted more.\"\n\n\"You miss him.\"\n\n\"I don't. I could go out right now and find some other guy to sleep with. Anyone I wanted.\"\n\n\"Except you are miserable.\" \n\n\"I am perfectly happy.\"\n\n\"Mm-hmm,\" she said, gathering her purse and slowly moving towards the door. \"That is why you are sitting at home on a Saturday night, alone, watching shows about charming serial killers instead of... what, going out and finding some other guy to sleep with? Anyone you wanted?\"\n\n\"I could if I wanted to, I just don't feel like it,\" I huffed.\n\n\"Of course,\" she said patronizingly. \"It couldn't possibly be because the one guy you want to sleep with, you can't, because for some asinine reason, you're refusing to consider falling in love with him.\"\n\n\"Goodbye, Anne-Marie,\" I said again. \n\nShe smiled, put the scrap of paper with J.P.'s address on it under a magnet on my fridge, and blew me a kiss as she left.\n\nI didn't know who the hell Anne-Marie thought she was, coming to my apartment and telling me how I was supposed to handle things. Pissed off, I marched across the kitchen and plucked the paper off my fridge. I tore it in half, and then in half again, and crumpled the pieces before throwing them aggressively into my garbage can. \n\nThen, I called Sydney.\n\n\"Don't let her in again,\" I said.\n\n\"Nell, I'm sorry, I just\u2014\"\n\n\"And get your ass ready. We're going out.\"\n\n\"Really?\" she said. \"Okay. I just got out of the shower. Let me dry my hair.\"\n\n\"Get dressed and come get ready here,\" I directed. \"And Syd? I'm not joking, I'm aiming to either get laid or black-out drunk tonight.\"\n\n\"That seems like an entirely unhealthy way of dealing with whatever emotions you're currently avoiding,\" she said. \"I'm totally in.\" \n\nMy methods of picking people up at bars were pretty unique compared to most. I didn't deal in high heels and miniskirts; I relied more on shock value and being candid to a fault to get what I wanted. Still, I wasn't taking any chances that night.\n\nI didn't own a miniskirt, but I did own a ridiculously expensive black dress that my dad had approved because, in his words, it was \"tight enough to be alluring, but not low-cut enough to be slutty.\" \n\nWell, a pair of scissors could easily fix that.\n\nI smirked as I pictured what Kimberlee's face would look like if she saw me taking my kitchen scissors to the black Chanel dress. All I had to do was cut a few threads here and there, and then tuck the skirt up so instead of a respectable knee-length, it was halfway up my thigh. After glancing in the mirror, I made one more small adjustment, so the tattoo on my collarbone was showing.\n\nSydney let out a long whistle when I let her into my apartment a few minutes later.\n\n\"You mean business,\" she said.\n\n\"I told you I did.\"\n\nShe was dressed similarly, although she probably didn't have to cut up a Chanel dress for something club-appropriate. Together, we quickly did our hair and makeup, popping open a couple of beers while we got ready. \n\nI had wanted to go somewhere we had been before, since I figured that would be a safe bet when it came to meeting someone to hook up with, but Sydney insisted we try somewhere new.\n\n\"Big risks, big reward,\" she giggled as we got out of the car in front of a bar creatively called The Bar. \n\nIt seemed far too trendy for my taste, the kind of place where my dress would have probably gotten more attention before I cut it up to show off my chest and legs. Still, as a bouncer waved us past the entrance line to the soundtrack of frustrated sighs from those waiting, I decided it got the job done.\n\nThe Bar played music I'd never heard, probably because it wasn't cool yet and therefore was trendy enough to play there. It wasn't quite a club, and it wasn't quite a pub; there was a dance floor, but most of the clientele seemed to be older than Sydney and me.\n\nThat didn't bother either of us in the slightest, especially when we got to the bar and immediately had two complimentary drinks in front of us. As I turned to thank the men who had bought us a drink from the other side of the bar, Sydney's eye caught something else entirely, and she almost dropped her glass.\n\n\"Nell,\" she said cautiously. \"I don't mean to alarm you but\u2014\"\n\n\"You've got to be fucking kidding me,\" I said as my eyes followed hers.\n\nSitting at a table on the other side of the bar were five people. I knew two of them very personally, one of them in passing, and one from pictures that Sydney had tearfully shown me a few weeks earlier. \n\nI had slept with Shaun and Darryl months earlier after meeting them in a bar, albeit a much dirtier, danker bar than The Bar. A woman was sitting between them who appeared to be around the same age as them, and given the way she was touching Darryl's cheek while she had her arm around Shaun's shoulders, she was going to find herself in the same position I had. That is, she'd probably end up with one of them taking her from behind while she sucked the other one off, although who knew. Maybe they'd stepped up their game. I had no hard feelings about the fact that they were picking some other woman up, or about the fact that they'd never called after I'd hooked up with them. It was a one-night thing, and I was okay with that.\n\nHowever, the man who sat across the table from them, looking slightly resigned with his arm around a sweet-looking woman... I had a grudge against him.\n\n\"Let's go,\" Sydney said. \"Let's just... find another bar.\"\n\n\"What?\" I said. \"We're not going over there to confront him?\"\n\n\"Don't,\" Sydney said. \"Let's just go. Please.\"\n\n\"You know how I said I wanted to get fucked or get fucked up?\" I said.\n\n\"Nellie, don't\u2014\"\n\n\"Turns out, I'd rather just go fight with that cheating asshole,\" I continued. \"Come on, let's go confront him.\"\n\n\"I can't,\" she said. \"Not in public, I'm too... I don't want to.\"\n\n\"I'll do it, then.\"\n\nShe sighed, grim acceptance across her resigned face. \"Just... just be nice about it.\"\n\n\"He doesn't deserve nice.\"\n\nBefore Sydney could even say anything, I shoved my drink into her hand and started walking towards Greg Murphy, the man who had strung her along for months. Sydney had been heartbroken to discover that not only was he a cheater, but that she was the other woman. \n\nHe caught sight of me before any of the others at the table. I saw his arm tense around the woman, but he didn't have time to react before I was standing there.\n\n\"Shaun! Darryl!\" I exclaimed.\n\nBoth of them looked up at me, surprised.\n\n\"Nellie,\" Darryl said unsteadily, drawing my name out as he scrambled for words. \"Hey. Long time, no see.\"\n\n\"I know,\" I said, laughing. \"Crazy, right? Don't worry, I'm not here to step on your game or anything, I know how competitive you guys get when it comes to the ladies.\"\n\nShaun laughed uncomfortably as the woman between them looked confused.\n\n\"Oh, oops,\" I continued. \"Sorry, she doesn't know yet, right?\"\n\n\"Thanks,\" Darryl said flatly.\n\nI laughed. \"Actually, I just wanted to say hey to you, Greg.\"\n\n\"Don't,\" was all he managed to grunt.\n\n\"Don't what?\" I said innocently. \"Oh, the whole thing with Sydney? Don't worry, I have no hard feelings. I just wanted to say it's nice to see you moved on so fast and introduce myself!\"\n\nThe woman looked bewildered as I stuck out my hand and smiled. \"I'm Nellie. I was friends with Greg's ex-girlfriend! She was pretty upset when they broke up\u2014I mean, you can't blame her, they were together for months\u2014but she's moving on just fine now.\"\n\nThe woman stared at me blankly, her hand rising to shake mine out of instinct.\n\n\"And sorry, you are...?\" I asked.\n\n\"Marla Murphy,\" she said. \"Greg's... wife.\"\n\nI was lucky looks couldn't kill, and even more fortunate that looks couldn't jump across a table and strangle me in the middle of a crowded bar, because that's what Greg looked like he was about to do. \n\n\"Oops,\" I said, letting go of Marla's hand. \"I'm so sorry.\"\n\nI didn't stick around long enough to find out what happened next. Before Greg could even take a breath or Marla could process what I'd said enough to turn to him, I had whirled around and was striding back to where Sydney was hiding by the bar.\n\n\"What happened to being nice?\" Sydney said helplessly as I took my drink back from her.\n\n\"Nice? I tried, Syd.\" I took a sip of my drink. \"I mean, how nice can you be when you're telling someone her husband's cheating on her?\"\n\nShe looked miserable as she peered across the bar. \"Look. She's trying not to cry.\"\n\nI turned to see Marla Murphy rushing out of the bar, Greg following behind her desperately. He didn't look in our direction, thankfully, but Sydney was right: Marla's eyes were full of tears, and she had a hand to her mouth as she scurried through the throngs of people.\n\nWe both watched as they left the bar, followed a few moments later by a dejected-looking Shaun and Darryl. Sydney shook her head.\n\n\"You need to think about how your actions affect other people,\" she said. \"Marla deserved better than finding out like that.\" \n\n\"Why'd you tell me to do it, then?!\"\n\n\"I asked you to be nice about it.\"\n\nI took another sip of my drink, not willing to admit that Sydney was right. Marla probably did deserve better than how I'd broken the news, but she'd thank me one day. \n\nMaybe. \n\nMaybe it was just another way I'd fucked up.\n\n\"I need to get laid,\" I said.\n\n\"Or maybe we should go home,\" Sydney said.\n\n\"Let's see, be a responsible adult, or have sex and forget all of my problems?\" I replied. \"It's a tough choice, Syd, but\u2014\"\n\n\"Nell, you're spiralling.\"\n\nI glared at her. \"Fuck you. I am not.\"\n\n\"You've been totally out of it for two weeks and now\u2014\"\n\n\"Look, I'm sorry I wasn't nicer to Marla fucking Murphy, okay?\" I snapped. \"Jeez, I just did the first thing that came to mind.\"\n\n\"That's not what this is about,\" Sydney replied.\n\n\"Bullshit,\" I muttered, sipping my drink.\n\n\"I'm saying this as your friend. I'm worried about you.\"\n\n\"I am perfectly fine.\"\n\n\"I'm just saying\u2014\"\n\n\"You're just saying, everyone's 'just saying' everything, aren't they?\" I snapped. \"Why can't people respect the fact that I don't want a serious relationship?\"\n\n\"Because you're lying so obviously that it's painful to see!\" Sydney snapped back. \"You never even gave J.P. a chance to\u2014\"\n\n\"I don't want to talk about J.P.\" I took another sip of my drink, trying to steady the anger that was crawling across my skin and into my stomach. \"You're pissing me off, Syd.\"\n\n\"I'm sorry,\" she replied. \"But you're being ridiculous. You're so stubborn and unyielding that you refuse to admit how miserable you are, and you think you can solve it by picking some random guy to hook up with.\"\n\n\"Why can't you just be on my side?\" I asked. \"You're supposed to be my best friend, not letting fucking Anne-Marie into my apartment and then telling me I'm spiralling.\"\n\n\"Yeah, and as your best friend, I should've said something before it got to this point, so I'm sorry.\"\n\nI scowled, but before I could respond, we were interrupted.\n\n\"Ladies, I hope the drinks we sent over didn't cause all this tension,\" said the tall man who sidled up beside us.\n\nI looked over at him, silent for a moment as I took in the expensive-looking jeans, the perfectly pressed shirt, and the stylish-in-a-careless-way hair that brushed his forehead. Beside him stood a shorter man, somewhat nervous-looking, who seemed to be the one who'd had eyes for me. Unfortunately, I wasn't in the mood to deal with nerves.\n\n\"Yeah, you'll do,\" I said to the taller man.\n\nHe laughed. \"What?\"\n\n\"I said you'll do.\" I drained the rest of my drink and put the glass on the bar. \"Buy me another, and let's go dance.\"\n\n\"Nellie\u2014\" Sydney said.\n\n\"Go home if you want,\" I interrupted.\n\n\"I'm not leaving you here.\"\n\n\"Well, I'm going to dance!\" I said loudly, turning back to the man. \"What's your name?\"\n\n\"Kyle,\" he said. \"But I\u2014\"\n\n\"Nice to meet you. I'm Nellie, and I'm looking to get laid tonight. Play your cards right, and you're the current front runner.\" \n\nThe two men glanced at each other, and the shorter one shrugged before turning to Sydney.\n\n\"I'm Daniel.\"\n\nThere was probably something to the whole theory about me being a bad friend, or maybe I was just immature. Either way, I barely looked at Sydney as I led Kyle to the dance floor. I focused on him, and I knew for a fact he was enjoying it.\n\nOur dancing started innocently enough. After all, if I was too aggressive, he probably would have been freaked out. My body didn't touch his as I swayed to the music, my hands grazing his arm the only form of contact. For one or two songs, we stayed that way, just teasing each other as we moved to the music. \n\nI let him be the one to make the next move; as my fingers trailed down his arm, he turned his palm up to catch my wrist and tugged me closer to him. He leaned in, his lips moving, but I shrugged helplessly.\n\n\"The music is too loud!\" I shouted, and he smiled and returned the gesture.\n\nNot that it mattered. I wasn't there to talk to Kyle.\n\nI took a sharp breath as his body pressed to mine, inhaling the scent of overpriced cologne and subtle sweat. Closing my eyes, I focused on the feel of his hands as they trailed down my sides, strong fingers pulling my body just a bit closer to his. There was a comfort to his body, a gentle familiarity that made me relax against him. I took another deep breath, then frowned.\n\nFamiliar, but not quite right.\n\nThere were two things wrong with that: one, I had never met Kyle before, so nothing about him should seem familiar. Two, it shouldn't have been possible for something to be not-quite-right about him, because there was no reason for him to seem familiar in the first place.\n\nSomething in the back of my mind knew what the answer was, but I refused to acknowledge it. Instead, I touched Kyle, held his body, ground myself against him and pressed my breasts into his chest. His hands moved up and down my sides in a way far too intimate for a man I'd spoken a handful of sentences to. Still, I kept dancing, and I kept letting him touch me, and I kept smelling that strange spice of his cologne. \n\nHe moved one hand to the small of my back, holding me even closer. I rested my hands on his shoulders, trying to ignore that d\u00e9j\u00e0 vu-like sense that was creeping through my nerves. My tension must have been palpable: moments later, Kyle's lips were brushing my ear.\n\n\"What's wrong?\" he shout-asked.\n\nI shook my head as if doing so would shake off the strange feeling and grinned, looking up at him.\n\n\"Nothing!\" I shouted back.\n\nWithout warning, he tightened his grip on me, making me gasp as his body crushed against mine. I looked up at him with wide eyes, and he raised an eyebrow at me questioningly. Before he could speak or I could think, I pulled his face to mine and kissed him as hard as I could. \n\nIt surprised him; that much was evident by the way he jumped slightly. It was just as apparent that he wanted it, though; as soon as he recovered, he kissed me back, his hips grinding into mine. I smirked against his mouth, responding by pushing my chest into his, and I felt him exhale softly against my lips.\n\nHe pulled back and said something, but again, I couldn't hear it. \n\n\"I don't read lips!\" I shouted.\n\nKyle laughed and brought his mouth next to my ear again. \"I said, how serious were you about getting laid tonight?\"\n\nTurning my head slightly, I spoke into his ear. \"Are you wondering how long you have to put up with the dancing charade before you ask me to go home with you?\"\n\nHe laughed again. \"Forward, aren't you?\"\n\nI pressed my body tighter to his, already able to feel his body reacting through his jeans. \"You seem to like it.\"\n\n\"Well, maybe.\"\n\nIt was my turn to raise my eyebrows, though I accompanied it with a shifting sway of my hips. \"Maybe? So that's just your cell phone vibrating in your pocket, then?\"\n\nThe shifting of my hips had the desired effect. His cock twitched again, and Kyle's eyes sparkled as he smirked.\n\n\"Maybe,\" he repeated. \"Maybe I'm just very happy to see you.\"\n\nI knew what I wanted, but I wasn't quite ready to leave with him yet. Instead, I ran my hand up to his cheek, running my hand along his cheek and winding his thick blond hair through my fingers. His eyes fluttered just slightly, and his lip curled between his teeth.\n\nI kissed him again, and again, breathing softly as his lips worked mine, and his fingers dug into my skin. His body was reacting to mine; I could feel his cock hardening beneath his jeans. Usually, that would get a reaction of my own underway. I waited patiently for those tingles of desire to start, for my panties to start dampening and my nipples to start hardening, but they didn't.\n\nFrowning, I kissed Kyle harder, slipping my tongue into his mouth. He exhaled a soft sigh, his hands moving to my ass and squeezing. His tongue flicked against mine, and again, I waited for that shot of arousal to course through me.\n\nNothing happened.\n\nFrustrated, I pulled back just slightly, moving my mouth to his neck. I felt Kyle groan, the sound making his neck vibrate beneath my lips, and he kissed the side of my head. His hips rolled, pushing his erection against me again as his lips found my ear. \n\n\"Leave with me?\" he asked, his voice husky.\n\nMy smile brushed his neck before I made the critical mistake of taking a breath. I inhaled just as he pulled back to look at me, and another whiff of that cologne met my senses. Combined with the sparkling smirk on his face, it hit me all at once.\n\nThe cologne was a mix of woods and spice, but there was one thing wrong about it: a distinct hint of anise. Once I identified it, the licorice-like scent was all I could smell, and it was wrong. The sparkle in his eyes, that familiar smirk, it was reminiscent of someone else, but it just wasn't right.",
        "\"Oh no,\" I said, my smile fading as I stared at him.\n\nKyle frowned. \"What?\"\n\n\"I can't do this,\" I said. \"I... I made a mistake.\"\n\nI managed to untangle myself from his arms, but his hand caught my wrist. I tried to pull away, but his fingers gripped my wrist so tightly it was almost painful. I jerked my arm again and glared up at him.\n\n\"What's with the mood swing?\" he asked haughtily.\n\n\"Let go of me,\" I said. \"Now.\"\n\n\"Not until you explain to me what just happened!\"\n\nI wouldn't have been surprised if he could feel the way my heart was racing. Between the tightness of his hand around my wrist and the way my pulse was bounding, it seemed unrealistic that he couldn't have felt it beneath his palm. It would have undoubtedly revealed the fact that I was terrified, but I refused to show it on my face. Instead, I brought my other hand to his and started prying his fingers away from me.\n\n\"Let go,\" I said again.\n\nHe released my wrist reluctantly, holding his hands up as he stepped back.\n\n\"I just want to know what happened!\" he said, but I turned on my heel and was weaving my way through people on the dance floor before he even finished speaking. \n\nDesperately, my eyes darted around the room. I had no idea where Sydney had gone or if she was still with Daniel. My heart thumped madly as I realized I'd told her to go home, and maybe she had left me there. I couldn't blame her for that; I deserved it.\n\nSydney was a far better friend than I was, though. After another moment of panic, I caught sight of her sitting boredly beside the bar as Daniel slumped miserably beside her. She caught my eye just as I looked at her and slid off the barstool, beelining towards me. I rushed across the bar towards her, my heart racing faster than the music.\n\n\"Can we leave?\" I asked as soon as she was in front of me.\n\nShe nodded, threaded her arm through mine, and led me towards the exit. \n\nAs soon as we were outside, I took a deep breath and started striding down the sidewalk. I wasn't going anywhere in particular, but I had to get away from The Bar. Sydney hurried behind me, not speaking until we were at least a block away.\n\n\"Nell\u2014\"\n\n\"Leave it to me, right?\" I said, laughing unsteadily. \"I don't want to think or talk about J.P., and I manage to pick the one guy in the bar who looks like him without even realizing it.\"\n\n\"Well, I\u2014\"\n\n\"But I didn't even want to sleep with him,\" I said. \"Maybe that's proof that I don't want J.P.\"\n\n\"That seems\u2014\"\n\n\"\u2014like a complete stretch? I know. But what else am I supposed to say, Syd?\" I stopped walking and turned to her, desperately trying to stop myself from begging for an answer. \"What am I supposed to do?\"\n\n\"You could try calling J.P. and telling him you're in love with him.\"\n\nThe words were so blunt, I winced. \"I'm not.\"\n\n\"You most def\u2014\"\n\n\"I am not!\" I said.\n\n\"You know, I am putting up with a lot of your shit because of this,\" she said tiredly. \"Maybe you could just listen to me for five seconds?\"\n\nMy instinct was to snap back, but as I looked at my best friend, I stopped. She was looking at me patiently, her mouth set in a straight line. Reminding myself that I had been less-than-nice to her that night, that I'd been incredibly self-absorbed, and that she could have easily left me stranded at The Bar by myself, I took a deep breath.\n\n\"You're right,\" I said. \"I'm sorry.\"\n\nSydney surprised me by laughing. \"I don't think you've ever apologized to me before.\"\n\nI snorted, then laughed, then brushed my hand across my face as tears threatened to fall. She stepped forward and hugged me, kindly not commenting on it.\n\n\"Why don't you want to be with J.P.?\" she asked after releasing me.\n\n\"I told you, I don't want a serious\u2014\"\n\n\"No,\" she interrupted. \"No. Tell me the actual real truth.\"\n\nI stared at her, then glanced down at the sidewalk.\n\n\"Because he might turn out to be like my dad,\" I said.\n\n\"How?\"\n\n\"Like... you know. He grew up like... like that. With money and the dinner parties and the galas and shit. All that stuff that I don't want to do.\"\n\n\"I thought J.P. didn't want to do that stuff, either,\" she said.\n\n\"Well...\"\n\n\"And the money... didn't he just quit working a really lucrative job to go to some small firm so he could\u2014in your words\u2014'make a difference'?\"\n\n\"Well...\"\n\n\"I mean, that's pretty telling. Your dad wouldn't do something like that.\"\n\nI didn't say anything. Sydney took my hand, holding it lightly as we started walking aimlessly down the sidewalk.\n\n\"What is it really about?\" she asked softly.\n\n\"I don't want a relationship,\" I said. \"I don't want to settle down and get married and like... I don't know. Pop out babies. I don't want that right now. I don't even know if I want that like... ever.\"\n\n\"And J.P. does?\"\n\nI shrugged. \"I mean, probably.\"\n\n\"You... you never talked about it?\" she asked incredulously.\n\n\"Why would we? We weren't in a relationship, we were just friends.\"\n\n\"You knew damn well you weren't just friends.\"\n\n\"...shut up.\"\n\nShe laughed and shook her head. \"No way. I finally got you talking about this. I'm not shutting up now.\"\n\nI sighed. \"It doesn't matter. I blew my chance.\"\n\n\"You don't think he'd be willing to listen? I mean, he said he was in love with you. It's only been a couple of weeks.\"\n\nI fell silent again, thinking for a moment, and then shook my head.\n\n\"I can't.\"\n\n\"Why not?\"\n\n\"What am I supposed to say?\" I said, my voice shaking. \"I've been saying I don't want a relationship for... well, forever. And now I'm supposed to admit to him I was wrong?\"\n\n\"You don't have to be wrong to change your mind,\" she replied. \"You could just... you know... experience personal growth.\"\n\n\"Ugh. That sounds terrible.\"\n\n\"I know, but it's what adults do. I think.\"\n\nI laughed thickly, trying not to cry. \"This is stupid. I don't like feelings.\"\n\n\"But you do like J.P.\"\n\n\"I guess so.\"\n\nSydney gave me an exasperated look. \"Nellie.\"\n\n\"Fine,\" I grumbled. \"Yes. I like him. I want... I miss him.\"\n\n\"So go talk to him,\" she said simply. \"Stop talking in circles with me and go figure this shit out with him.\"\n\n\"He moved,\" I said. \"What am I supposed to do, just text him and\u2014\"\n\n\"Anne-Marie gave you his address.\"\n\n\"I threw it out.\"\n\n\"You could ask Anne-Marie for\u2014\"\n\n\"Not a fucking chance in hell am I telling Anne-Marie I might like her brother,\" I snapped.\n\nShe burst out laughing and let go of my hand.\n\n\"She said you'd say that.\"\n\n\"What?\"\n\nSydney put her hand in her purse and withdrew a small scrap of paper, then brandished it at me. I caught just enough of the loopy writing to realize that it was another copy of J.P.'s address.\n\n\"She didn't!\" I hissed, reaching forward to snatch the paper out of her hand.\n\nShe yanked it out of my grasp. \"She did, and I'm only giving it to you if you promise me one thing.\"\n\nI glared at Sydney, who grinned at me expectantly.\n\n\"Never mind, then,\" I said, turning to stalk down the sidewalk.\n\n\"No, wait!\" she exclaimed. \"Nell, wait! I just\u2014\"\n\n\"I'm not playing this game.\"\n\n\"I just meant that you need to go see him now before you chicken out,\" she said, grabbing my arm. \"I'll give you the address, but I swear to God, you need to get in an Uber and get yourself to his apartment tonight so the two of you can figure this shit out.\"\n\nI should have told her no, that the smart, reasonable, responsible thing to do would be to go home and sleep on it. Hell, it would have been more sensible to text J.P. and tell him I wanted to talk. I didn't even know what city J.P. lived in anymore; he'd been in Montreal before, which was a couple of hours away. It would be downright reckless to commit to going to wherever he was in the middle of the night on the off-chance I might make up with him. \n\nBefore I could even protest, Sydney cut me off.\n\n\"If you two make up tonight, there's probably a pretty good chance you can hook up with him.\"\n\nI hated that it changed my mind, but it did. Sighing, I nodded, and Sydney relinquished the piece of paper. Staring down at the address, I looked up at her in shock.\n\n\"He moved to Gatineau?\"\n\n\"Convenient, right?\" she said, grinning.\n\n\"This is like... fifteen minutes from here.\"\n\n\"Right across the river.\"\n\nPart of me wanted to call and tell him I was going to come see him; a bigger part of me knew I would probably chicken out if I did. The biggest part of me was terrified that if I called, he'd tell me not to, and I didn't know if I could handle that. Instead, I refused to think about it too much, called a cab, and pulled up to his building about twenty minutes later. \n\nThe driver left as soon as I tipped him, leaving me no choice but to unsteadily walk into the foyer of a tall condo building. I opened the door nervously, then scolded myself for being so nervous and boldly walked to the intercom, dialing J.P.'s suite number.\n\nIt seemed to take forever to connect, and when it finally did, it rang four times before someone picked up.\n\n\"Hello?\" asked a breathless, confused voice.\n\n\"J.P.?\" I asked.\n\nHe went silent for a moment. \"Uh... yeah. Nellie?\"\n\n\"Yeah.\"\n\n\"What are you...?\"\n\n\"I need to talk to you.\"\n\n\"It is... midnight,\" he said.\n\n\"I know.\"\n\n\"How did you...?\"\n\n\"Anne-Marie.\"\n\nHe chuckled. \"Fuckin' Anne-Marie.\"\n\n\"So can I, you know... come in?\"\n\n\"Oh, shit. Yeah, uh... yeah, come on up.\"\n\nThe building was tall, but J.P. only lived on the sixth floor, so it didn't take me long to get to his apartment. Still, I walked slightly slower than I usually would. I told myself it was because I was trying to give J.P. more time to get ready since he obviously hadn't expected a midnight visitor. After all, the other option would be that I was walking slowly because I was terrified to talk to him, and I sure as hell wasn't about to admit that, even to myself.\n\nWhen I finally knocked on his apartment door, it took him a second to answer. The door swung open to reveal J.P. looking somewhat flustered. He'd just gotten dressed, his shirt still slightly rumpled and his hair still mussed, but he still looked every bit as delicious as he always did.\n\nThe bastard. I hated how attractive he was.\n\nHe didn't speak right away, just looked at me, then flicked his eyes down my body.\n\n\"Jeez, Nellie,\" he said. \"I don't talk to you for two weeks, and you're already going down the high-class-escort path?\"\n\nI burst out laughing. \"You prick. I was at The Bar.\"\n\n\"I dunno what kind of bars you go to, but\u2014\"\n\n\"No, stupid. The Bar. It's a... club. Called The Bar.\"\n\n\"It sounds pretentious and terrible.\"\n\n\"It was. I ended up here instead, didn't I?\"\n\nHe grinned. \"Right. Still terrible, but slightly less pretentious.\"\n\n\"Very slightly.\" \n\nWe both chuckled, followed by an awkward moment where neither of us knew what to say.\n\n\"Um, can I come in?\" I finally asked.\n\n\"Right, yeah,\" J.P. said. \"Of course.\"\n\nHe stepped back and held the door. Almost shyly, I walked past him into the apartment.\n\n\"Nice place,\" I said, glancing around. \n\nHe had moved into his new place two days after we'd last spoken. Even though it had been less than two weeks, his place was fully unpacked and tidy but lived in. A few plates sat drying in the sink, and there was a throw blanket tossed carelessly across the back of the couch, but besides that, it could have been a show suite. \n\n\"Thanks,\" J.P. said. \"It's... a place, I guess.\"\n\n\"I like it,\" I said. \"It's very, um, modern.\"\n\nI couldn't bring myself to look at J.P., instead choosing to pretend I was taking in the layout of his apartment. \n\n\"Thanks,\" he said again. \"So...?\"\n\n\"Is this granite?\" I asked desperately, moving into the kitchen.\n\nHe started laughing. \"Nell, if you came by for a tour of my new place, that's cool, but I feel like midnight on a Saturday wouldn't be your first choice for that kind of thing.\"\n\n\"I'm stalling, okay?\" I muttered.\n\n\"Yeah, I got that,\" he replied. \"Wanna maybe tell me why?\"\n\nI turned to him slowly, afraid if I moved any faster, I'd faint. My heart was pounding so hard I could feel it in my skin, and my palms were sweating so much I was certain I'd end up dehydrated. \n\n\"Yeah,\" I said. \"I... should do that.\"\n\nHe waited patiently, his eyebrows raised as he bit back a smile. I swallowed hard, then stared at the ground slightly in front of him, unable to meet his eyes.\n\n\"I wanted to talk about... what you said.\"\n\n\"Okay.\"\n\n\"I thought maybe, um...\" I trailed off, thinking, then sighed in frustration. \"Fuck, how do people do this?\"\n\n\"Do what?\" J.P. asked, amused.\n\n\"Tell people they... you know. Want... things,\" I stuttered.\n\n\"What kind of things?\"\n\n\"You know what kind of things,\" I grumbled.\n\nHe smirked. \"Nell, are you here to tell me you like me?\"\n\n\"Ew,\" I said, cringing. \"Ugh. Gross.\"\n\n\"So that's a yes?\"\n\nI glared at him. \"Yes, you bastard. I... yeah. I might've maybe done some thinking or something and realized that... well...\"\n\n\"That you hoped I'd forgive you if you came crawling back to me?\" he finished.\n\nThere was a thread of laughter in his voice, but the words still made heat rise up my neck and through my cheeks. A long moment went by before I shook my head.\n\n\"Nope,\" I said.\n\nJ.P. looked surprised. \"What?\"\n\n\"Never mind.\" I turned on my heel. \"This was a bad idea.\"\n\nHe didn't have time to react before I strode back to his door, yanking it open and marching back into the hallway. I was only a few steps away when the door flew open again.\n\n\"Babe, I was joking!\" he said.\n\n\"Whatever,\" I grumbled.\n\n\"Nellie, wait,\" he said. \"Please.\"\n\n\"I can't do this,\" I said. \"I can't... I thought I could, but I can't.\"\n\n\"Can't what?\" he asked.\n\n\"This... feeling. The feelings thing.\" I folded my arms and turned back to him. \"I don't like it.\"\n\n\"I know you don't,\" he said. \"And I know it probably wasn't easy for you to come here, and I was kind of a dick just now, but you have to admit it was a little funny.\"\n\n\"A little bit,\" I said begrudgingly.\n\nHe smiled. \"Well, I'm still sorry, even though I'm hilarious. Can we talk? Please?\"\n\nI took a breath, steadying myself, and tried to think of all the things I'd planned to say on the cab ride over.\n\n\"I don't know how to do this,\" I said. \"What I know about relationships is that I hate them. I hate feeling like someone owns me. I hate feeling like I have to answer to someone.\"\n\n\"I told you, that's not what relationships are,\" he said. \"That's not what I want, either.\"\n\n\"And you... you're like... you know what my dad is like,\" I said. \"I don't want that life. I don't want to be controlled by money.\"\n\n\"I don't either,\" he said. \"I don't need the kind of life my parents have or that your dad has. If I never have to attend another charity gala, I'd die happy. Unless you promised me anal again, in which case, I'd strongly consider attending another charity gala.\"\n\nI couldn't help laughing, though there was still a hollow place of fear in my chest.\n\n\"And what about, like, life?\" I said. \"I'm still in school, J.P. I want a career. I don't want to give that up and like, pump out a bunch of babies or something.\"\n\nHe regarded me for a moment, then shook his head, smiling. \"You know we can, like, date and shit for a while before having big, serious, rest-of-our-lives conversations, right?\"\n\n\"Yeah, but\u2014\"\n\n\"Like, for the record, I wouldn't ask you to just become a stay-at-home-mom in the next two years or something. I don't even know if that's what I want, babe.\"\n\nI nodded stiffly but didn't say anything. J.P. smirked.\n\n\"There's no legally-binding contract to break if we decide shit's not working out.\"\n\nAnother laugh that I couldn't help bubbled out of my chest. \"Well, what about... I mean... I'd have to give up having sex with other people. What if you don't want to fuck as much as I do? Or what if you start sucking at it?\"\n\nHe burst out laughing. \"You don't have to worry about that.\"\n\n\"But\u2014\"\n\n\"Nell, I'm always gonna want to fuck you,\" he said. \"Even if you get old and wrinkly. I mean, obviously I'm always going to be as stunningly attractive as I currently am, but I'll still think you're hot even when you're not. And I'm not going to magically start sucking at sex. I'm pretty sure I've made you scream my name multiple times.\"\n\n\"You're so romantic.\"\n\n\"You hate romantic shit.\"\n\n\"Yeah,\" I admitted.\n\n\"As for other people...\" He shrugged. \"I mean, we can figure something out that works for us.\"\n\nI looked at him, incredulous. \"You'd be okay if we slept with other people?\"\n\n\"I dunno,\" he said. \"Maybe. I've never really thought about it. I don't want to be with you just for the sex, you know. I like other things about you.\"\n\nI snorted and he laughed.\n\n\"I do,\" he said. \"And hell, if that's the dealbreaker for you, then whatever. We'll figure it out. We don't have to decide right now, and we don't have to have a relationship that fits into some box. We can decide what we want it to be. All I want is\u2014\"\n\n\"You're about to say something cheesy, aren't you?\" I interrupted.\n\n\"Yeah, I am,\" he said. \"All I want is to be with you, okay?\"\n\n\"I kind of want that too,\" I admitted.\n\nHe smiled. \"So, what's holding you back?\"\n\n\"I'm scared.\"\n\nThe words were out of my mouth before they even registered in my mind. I heard them for the first time at the same time J.P. did. \n\n\"Scared?\" he repeated as I looked up at him.\n\nI nodded.\n\n\"Of what?\"\n\nI shrugged.\n\nHe chuckled softly. \"Scared of how much you love me?\"\n\n\"Like you,\" I corrected.\n\n\"You sure about that?\"\n\n\"Don't press your luck,\" I warned.\n\n\"I'm not,\" he said seriously. \"'Cause I'm not joking, Nell. I'm in love with you. And yeah, that scares the shit out of me too.\"\n\nI looked up at him, half-expecting to see a smirk on his face or his eyes sparkling. I wasn't expecting the serious, almost-pained expression on his face.\n\n\"It does?\"\n\n\"Of course it does,\" he said. \"I haven't felt like this about anyone, ever. It's new to me, and that's scary, but it's also...\" He paused, then finally smiled. \"I dunno. Exciting.\"\n\n\"What if it changes things?\" I asked.\n\n\"It will,\" he said. \"Absolutely, it will. I mean, it damn well better. Hopefully, we can stop sneaking around and fucking and just kind of, you know, fuck whenever.\"\n\nI tried not to laugh, but it was futile. J.P. smiled.\n\n\"I think they'll be good changes,\" he said. \"I really do.\"\n\nI looked at him for a long moment, then nodded.\n\n\"Okay.\"\n\n\"Okay?\"\n\n\"Yeah,\" I said. \"So is there some kind of ceremonial words I have to say or are you just, like, my boyfriend now?\"\n\n\"Only if you're my girlfriend now,\" he said.\n\n\"I mean, I guess. Still kind of gross, though.\"\n\nWhen he took me into his arms, we were both laughing, and when he brought an arm to my neck and tilted my face up to kiss me, I couldn't stop smiling. I rested my hand against his side, relaxing into the sudden sense of harmony, the feeling of relief and acceptance and excitement that washed over me. \n\nBefore I could relax too much into the kiss, though, J.P.'s apartment door opened.\n\n\"Wow,\" said a female voice. \"Seriously, J.P.?\"\n\nI parted from him and looked at the door, my mouth open as I took in the beautiful, lanky woman standing in his doorway. \n\n\"Who are you?\" I asked bluntly.\n\n\"I'm Beth,\" she said. \"Who the hell are you?\"\n\n\"I'm Nellie.\"\n\n\"Right,\" J.P. said awkwardly.\n\nThere was an uncomfortable silence as I stared at Beth, who glanced back and forth between me and J.P. No one spoke until she finally crossed her arms and sighed.\n\n\"So some random woman in a low-cut dress shows up to your apartment in the middle of the night, and you decide you want to fuck her instead?\" she asked. \n\nJ.P. grimaced. \"Well, actually\u2014\"\n\n\"You had another woman in your apartment this entire time?\" I asked, raising my eyebrows as I finally looked at him.",
        "He pressed his lips together, fighting back a laugh. \"Uh, well, we were... you know, not together, Nell.\"\n\n\"Oh, classic,\" spat Beth. \n\n\"Classic?\" repeated J.P.\n\n\"Let me guess, you have one fight with your girlfriend and you're out prowling for some other woman?\"\n\n\"She wasn't my girlfriend until... I don't know, five seconds ago?\" J.P. said.\n\n\"You were on a break, were you?\" scoffed Beth. \"You are such a pig!\"\n\n\"Hey!\" I said harshly. \"That's my... oh fuck, I can't believe I'm about to say this.\"\n\nJ.P. was fighting as hard as ever not to laugh, but he was failing miserably. My face was starting to turn red as I cringed. \n\n\"That's my... ugh, boyfriend you're talking about,\" I finished. \"But I mean, if you want to stick around and join us...\"\n\nBeth's eyes went wide. \"What... what did you just say?\"\n\nI looked at her steadily. \"Well, I mean, it's been a while, you know? We haven't talked for like, two weeks. So I'm planning on hooking up with him in the next five minutes or so, but you're hot, so I'm not opposed to you... you know. Also being there.\"\n\nThe snorting sound J.P. made as he started laughing was probably the most unattractive sound I've ever heard, but it made me giggle. The horrified look on Beth's face made me laugh until I was nearly crying. \n\n\"Did you just propose a threesome?\" he asked, managing to compose himself just enough to speak. \"For our first... I dunno, first fuck as an actual couple?\"\n\nI couldn't speak, so just nodded as we both dissolved into laughter again. Beth shook her head, disgusted.\n\n\"You two are complete freaks.\" She stormed out of his apartment and wasn't even halfway down the hallway before J.P. was pulling me back inside.\n\n\"You are such an asshole,\" I scolded as he kissed me again.\n\n\"I know,\" he groaned, his lips moving to my neck. \"I swear to God, I just met her tonight, and when you got here, I told her something came up, and she just didn't get the hint.\"\n\n\"Did you fuck her?\"\n\nHe smirked. \"I got home ten minutes before you got here. We were just making out.\"\n\n\"Wow, ten whole minutes without getting into her panties? That must be a record for you.\"\n\nHe laughed, the sound muffled against my skin. \"Right? Didn't even get a chance for a final hurrah before committing myself to this crazy chick I know.\"\n\n\"A final hurrah? Okay, Grandpa.\"\n\nHis lips trailed back up my neck to my jaw, brushing against my mouth as he spoke. \"You're so mean to me. I just gave up a sure thing for you.\"\n\n\"Oh, I'm so sorry to ruin your one-night stand.\"\n\n\"You better be.\" He nipped at my bottom lip. \"The things I do for love.\"\n\n\"Ew. Stop saying you love me.\"\n\n\"I won't.\" His teeth grazed my lip again, softer that time. \"I can't lie to you.\"\n\nI didn't know what else to say. Luckily, J.P. was easily distracted, and I flicked his lip with my tongue. He made a soft noise of contentment and used his body to guide me towards his bedroom.\n\nIt probably should have bothered me that the sheets were messed up, and another woman had just left his apartment, but I didn't care. I couldn't fault J.P. for sleeping around; I was a lot of things, but I wasn't going to be a hypocrite. It was Beth's presence more than anything that calmed me, that made me feel like whatever happened between me and J.P., it would be good. It didn't have to be my skewed idea of a relationship; it didn't have to be anyone else's idea of a relationship except for ours. \n\nI didn't know if it was the forever type of relationship. I didn't know if we would even last until Christmas. Whatever it was, though, I was eager to find out. I would never admit it to him, but I couldn't think of a time that I'd been happier.\n\nOnce we were in his bedroom, J.P. tugged the zipper on my dress down. The hasty stitches I'd made to alter it popped as he pushed the sleeves down my arms, and he laughed as it fell away from my body. Before I could shoot some snarky remark back at him, his lips were on my neck, then my chest, then the tops of my breasts.\n\n\"I missed you,\" he murmured into my cleavage. \n\n\"They missed you, too,\" I answered on behalf of my tits. \n\nI felt him laugh against me, then his tongue darted out, licking along my cleavage. He planted a quick kiss between my breasts before straightening up and pulling my face up to his again.\n\nAll of those things I hadn't felt when I was kissing Kyle earlier in the night were there with J.P. My stomach fluttered as I tugged on his shirt, the sensation only increasing as he lifted it off and let it fall to the floor. As he did, the scent of his cologne surrounded me, clean and woodsy and perfectly suited to him. Desire pricked my fingertips as I touched his chest like it was embedded in his skin. When he smiled, that spot buried somewhere below my belly button shivered, and when he kissed me, my body sang.\n\nI worked the button of his jeans loose as he unhooked my bra. He shoved his jeans down carelessly and returned his attention to me. I could barely keep up as he kissed me, then moved his lips to my neck, then stooped over to suck on my nipples and kiss my breasts. \n\nPanting softly, I ran my fingers through his hair, lightly scratching his scalp as he played with my tits. He made a soft groaning sound as I did, shifting his head, so my fingers moved to the base of his neck. I played with his hair mindlessly, twirling the thick strands between my fingers, noting the way his breath grew heavier and warmer each time my nails trailed down his neck.\n\nI had to stop playing with his hair after he circled my nipple with his tongue a final time and began kissing the underside of my breasts. Slowly, teasingly, his mouth moved down to my ribs, leaving little marks as he tickled the sensitive skin with his tongue. Large hands gripped my waist as he kissed my stomach, teasing my belly button before dropping to his knees. I whimpered in anticipation, and he pushed his face against my panties, inhaling sharply as he kissed the spot of wetness that was collecting there.\n\n\"I missed you so much,\" he said, gently tugging my panties down to reveal my dripping pussy.\n\n\"It missed you too,\" I teased, and he laughed, then shoved his face into my mound.\n\nI moaned as his tongue darted out, flicking my clit before he licked between my folds. He kissed from the inside of my thighs up to where my leg met my hip, then back down until his tongue was sliding along my pussy lips again. I shifted impatiently, eager to feel him ravish my pussy the way I knew he could, but he took his time.\n\n\"J.P., please,\" I whined softly.\n\nHe glanced up at me, the corners of his eyes crinkled and a laugh hidden between my legs. I could just make out the hint of glistening juices on his cheeks and chin. Biting my lip, I put on what I hoped was a pleading expression.\n\n\"I need you,\" I admitted begrudgingly.\n\nThe wrinkles around his eyes deepened as he smiled. I braced myself, waiting for him to make some snarky comeback, to mercilessly make fun of me for admitting that I needed him, of all people.\n\nHe didn't, though. Instead, he began ravishing my pussy, licking my clit and sucking on it in a way that made me moan in relief. That smile must have been a genuine smile, a sincere reaction, one of those cheesy, awful, beautiful smiles that I would probably have made fun of him for. \n\nWe teased each other constantly. Every moment with him was a challenge, a competition, a chance to get the last word and the last laugh. No one could fluster me the way he could; no one could make me keel over laughing like him. No one in the world could have made me agree to date them, to call them my boyfriend and to take that step that I was so vehemently against, except him.\n\nAs he ate my pussy, those little flutters of anxiety came back. It would take a long time for me to truly trust in whatever this relationship was, but I was willing to try. I'd never said it out loud, but I was sure he knew: he was the only person I would be willing to try for. \n\nThose thoughts weren't quite fully formed; they were barely concepts, hardly more than feelings. All I really knew at that moment was that his blue eyes were looking up at me, deep and earnest and playful. His mouth eagerly kissed my pussy, his tongue licking my folds before turning its attention to my clit again. \n\nMy breathing quickened, and he groaned softly; the sound vibrated against my sensitive clit and made me shudder as my body primed itself for immense pleasure. He pulled back just slightly so he could dip his tongue into my entrance, and I cried out, my knees nearly buckling before he returned to my clit.\n\nIt was all I could do to hold myself up as his fingers began to trail up my leg. Excited, I waited as his hand passed my calf, then my knee, then walked up my thigh. When he reached my pussy, I couldn't stop my hips from bucking forward as he slipped a finger inside me.\n\nThat finger moved slowly at first, sawing gently before curling to hit my G-spot. I trembled, and a second finger pushed into my entrance to join it. It didn't take long for me to start panting, my hands on J.P.'s head for balance, his hair soft between my fingers as he looked back up at me.\n\nI knew he watched me come, though I didn't see it myself. My eyes squeezed shut involuntarily as pleasure burst inside me, flooding my body with bliss and intense light. I didn't mean to pull his hair, but I couldn't stop myself as my body shook and my head tilted back. As the intensity passed and I took a gasping, steadying breath, I loosened my grip.\n\n\"Sorry,\" I whispered shakily.\n\nJ.P. grinned. He wiped the back of his hand across his mouth as he lifted himself from his knees, then kissed me heatedly.\n\n\"If I ever complain about making you come like that, feel free to sit on my face and suffocate me,\" he whispered.\n\nI laughed. \"Deal.\"\n\nHe kissed me hard and held my body to his. Through his boxers, I could feel the heat of his stiff cock. I shifted my hips, making him groan as he nipped at my bottom lip.\n\n\"I need you, babe,\" he said.\n\n\"Don't call me babe,\" I scolded.\n\nHe laughed. \"You're my girlfriend, babe. Should've said something before you agreed to it.\"\n\n\"Asshole,\" I whispered, but I was smiling.\n\n\"See? I let you call me a pet name,\" he teased. \"Though I think the one I have for you is more flattering.\"\n\n\"I can stick with 'bastard,' if you like,\" I offered.\n\n\"Mmm, babe, please,\" he moaned. \"I'm already hard enough to cut glass. Keep this up, and I'm just gonna jizz in my boxers.\"\n\nI nearly fell over as I laughed; we were both still giggling as he guided me onto my back, tugged his boxers down, and pushed his cock inside me. The sounds became a strange mix of giggles and moans as our laughter made his cock jostle inside me in a new way, and the laughter faded away entirely as he began thrusting slowly but deeply. \n\n\"Fuck, I missed you,\" he muttered.\n\nHe wasn't talking to my tits or my pussy that time; his eyes were boring into mine as he said it. I couldn't repeat those words, not yet, but I smiled and pulled his face to mine. We kissed heatedly as he fucked me, his hips moving faster each time until he was drilling himself inside me. \n\nI couldn't do anything but cling to him, my fingers digging into his shoulder as he took every ounce of pleasure he could out of my body. His hair flopped onto his forehead, and I reached up without thinking, brushing it away.\n\nHe was looking at me again, eyes full of all the wonderful things about him: mischievousness and selflessness and awe. The corners of his mouth twitched up into a smile, and he kissed me briefly again.\n\n\"I love you, Nellie,\" he said.\n\nI couldn't respond, not yet, but he didn't mind. He got something better, apparently: the feel of my body quivering beneath him, my pussy spasming on his cock as another dam of pleasure burst inside me. I cried out, gasping for breath as I came, every nerve in my body firing as every muscle tensed and relaxed, my mind soaring as he held my body beneath him.\n\nHe came shortly after, grunting as his cum spilled inside me. For once, I didn't feel guilty about not making him use a condom; for once, I just got to enjoy the sensation as he came. \n\n\"You're going to get sick of hearing this,\" he said, his cock still inside me as he caught his breath, \"but I love you.\"\n\n\"You're right,\" I murmured. \"Sick of it already.\"\n\n\"Mmm,\" he grunted. \"Not gonna stop doing it, babe.\"\n\n\"I know,\" I replied. \"Good thing you're good in the sack.\"\n\nHe laughed so hard he had to roll off of me, but pulled me to him as soon as he had.\n\n\"Careful now,\" he said as he recovered. \"Say stuff like that too often, and I might start to think you actually like me, Nell.\"\n\nI kissed him, relishing the feel of his body pressed to mine and his arms around me.\n\n\"You have your moments,\" I said. \"Turns out, I might love you too, you bastard.\"\n\n\"Might?\"\n\nI sighed. \"Might... definitely.\"\n\nHe smiled softly and kissed me again.\n\n\"I might definitely love you, too.\"\n\n**\n\n\"Hmm. Well, I can't say I'm surprised, Eleanor\u2014\"\n\n\"Nellie,\" I said immediately.\n\n\"It's Nellie, Max, not Eleanor,\" I heard Kimberlee say in the background.\n\nI bit back a grin; Dad didn't have me on speaker phone, so Kimberlee couldn't have known I corrected him. It was kind of nice having her on my side.\n\nDad sighed. \"Right. My... apologies. I'm not surprised, Nellie, but is he really the kind of person you see yourself being with long-term?\"\n\n\"I don't know,\" I said indignantly. \"Maybe. I haven't thought that far ahead.\"\n\n\"Clearly.\"\n\nI bristled at his cynical tone. If my dad was the horse, Kimberlee was leading him to the kind of water that would make him a better person, but he hadn't quite gotten the hang of drinking it yet.\n\n\"Dad, you already approved of him long before this became a thing,\" I said. \"Remember? At the Diamond Gala, you said I could do far worse than J.P.\" \n\n\"Yes, however, at the Diamond Gala he had a promising future with a renowned law firm that he's since given up,\" Dad said coldly.\n\n\"Money isn't everything,\" I reminded him.\n\n\"Certainly not, but critical thinking and decision making skills should be key attributes in a partner.\"\n\nI rolled my eyes. \"I wasn't aware I was supposed to treat relationships like a job interview. Here I thought if he treated me nice and was good in bed, it was a win.\"\n\n\"Eleanor!\" he said harshly.\n\n\"It's Nellie,\" Kimberlee and I said at the same time.\n\n\"I do not need to hear that about my daughter.\" The words were stiff, as though they were being spoken through a clenched jaw.\n\n\"What, that he treats me nice? I would've thought you'd want to know that.\"\n\n\"Not...\" Dad sighed. \"The other thing, Nellie. I understand you're an adult, but... in any case, I just urge you to think about this decision a bit before committing to anything in particular with Jean-Paul. I can't imagine his parents will be particularly pleased with the situation, given what happened last month.\"\n\n\"Probably not,\" I said. \"But we're about to find out.\"\n\n\"What?\"\n\n\"Oh, we're on our way to J.P.'s parents' place,\" I said. \"J.P.'s driving. Also, I guess I should've mentioned you're on speaker.\"\n\n\"Hi, Mr. Belanger,\" J.P. said cheerfully.\n\nI could almost feel the anger dripping through the phone.\n\n\"Eleanor, take me off speaker phone\u2014\"\n\n\"It's Nel\u2014\"\n\n\"Now.\"\n\nI winced and grabbed my phone.\n\n\"Fine. You're off speaker phone,\" I said.\n\nHe started to launch into a tirade about my level of disrespect and how inappropriate my behaviour was, but only got a few words into it before I heard Kimberlee scolding him in the background. Coldly, he explained to her what I had done, and I heard her sigh.\n\n\"Let me talk to her,\" she said.\n\n\"I will handle this, Kimberlee,\" Dad said.\n\n\"Max, let me talk to her.\"\n\nShe had him wrapped around her finger so tightly that he actually did it. I held back a laugh as the phone rustled before Kimberlee spoke.\n\n\"Nellie?\"\n\n\"Wow, you're going to have to teach me how you whip guys into shape like that,\" I said.\n\n\"Unless it involves actual whips, we're not interested,\" J.P. said loudly. \n\nI waved a hand to shush him, though Kimberlee laughed.\n\n\"Nellie, come on,\" she said chidingly. \"This whole 'repairing your relationship with your father' thing works better if you don't purposely antagonize him.\"\n\n\"But it's so much fun,\" I said.\n\n\"Nellie.\"\n\nI sighed. \"Fine, Kimberlee. But if he'd stop being so judgemental in the first place, there wouldn't have been a problem. It's not my fault he said J.P. was terrible.\"\n\n\"He's just being protective. I wouldn't say it's his fault, either.\"\n\n\"That's true. It's actually J.P.'s fault, mostly because he's terrible.\"\n\n\"Hey!\" he protested.\n\nKimberlee laughed. \"Wow, you can really feel the love between the two of you.\"\n\n\"Ugh. Don't say that. I barely tolerate him,\" I replied.\n\n\"And she's a complete annoyance,\" J.P. said.\n\n\"Nellie,\" Kimberlee said slowly. \"Did you not take us off speaker phone?\"\n\nHer scolding was punctuated with laughter, mostly because she was a lot more easygoing than my dad. At the end of it, she promised to help my dad see that J.P. was as good a person as he had been when he worked for his dad's firm, and I promised to actually take them off speaker phone next time.\n\nWhen we hung up, J.P. was grinning.\n\n\"Well, that's your family taken care of.\"\n\n\"I can't believe you talked me into this,\" I muttered, shaking my head.\n\nHe laughed as he turned down the road that led into his parents' neighbourhood.\n\n\"It's gonna be fine. We might as well get this shit out of the way now. Your dad and Kimberlee know. Probably best if my parents talk to us, rather than get half the story from some gossip.\"\n\n\"Like Anne-Marie?\" I mumbled.\n\n\"Yes, exactly.\"\n\nI sighed but didn't say anything. J.P. took one hand off the steering wheel and reached to the passenger seat, entwining his fingers in mine as he drove.\n\n\"It's going to be fine,\" he repeated. \"I mean, I'd say something like 'they'll love you' or 'you have nothing to worry about, my parents will be impressed by you,' but you'd tell me I was full of shit.\"\n\nI laughed, shaking my head. \"You are full of shit.\"\n\n\"Your dad took it better than you thought he would,\" he said.\n\n\"Hardly,\" I scoffed. \"That was Kimberlee's doing, and he's probably starting to wonder if giving into her every whim is worth it. Chances are he's going to realize his balls are firmly stored in her purse and lose his mind.\"\n\n\"Well, maybe. Or, maybe he really loves her and he's just learning.\"\n\n\"Yeah, and maybe I'm going to join a convent.\"\n\nHe snorted. \"Well, your mom was fine with it.\"\n\n\"She's a hopeless romantic.\" I raised the pitch of my voice in an imitation of my mom's. \"'Oh, that's so sweet, Nellie! Ending up with the boy next door! And a lawyer! He must do so well for himself'.\"\n\nJ.P. snorted as he laughed. \"I bet they all say that until they find out how much pro bono work I'm doing.\"\n\n\"No one outside of lawyers has any concept of what that means.\"\n\n\"You do,\" he argued.\n\n\"Yeah, well, sometimes I've got a lawyer inside me,\" I shot back.\n\nHe burst out laughing, shaking his head. \"You would've made a good lawyer. Seriously.\"\n\n\"Stop saying that. I have some self-respect, you know.\"\n\n\"Big words from someone who's fucking me.\"\n\nThe jibes continued until he turned down his parents' street, and I fell quiet, staring out the window. J.P. sighed at my sudden silence.\n\n\"Honestly, babe, they'll be happy that I'm happy,\" he said. \"My dad's almost gotten over me leaving the firm, and I think they'll mostly just be impressed that I'm serious enough about someone to bring them home. I haven't done that since I was in high school.\"\n\n\"Way back in the day?\"\n\n\"Fuck off. I'm not that much older than you.\"\n\nI smirked as he flicked my palm before returning his hand to the steering wheel.",
        "\"Besides,\" he continued. \"We've already seen what would happen if I accidentally knocked you up or something. It'll be fine.\"\n\nI rolled my eyes, sulking as he drove past my dad's house and pulled into the driveway next door. He turned the car off as I hesitantly regarded the large house in front of me.\n\n\"Are you okay?\"\n\n\"I'm fine,\" I muttered. \"Let's get this over with.\"\n\nHe stopped me from getting out of the car by grabbing my hand again.\n\n\"Nellie, it is going to be okay,\" he repeated for the millionth time.\n\n\"It won't be if you keep driving me crazy by bringing it up.\"\n\nHe smirked, letting go of my hand so I could get out of the car. He waited patiently by the hood for me, then took my arm as we walked up to the front door. Whether it was a sign of support or to keep me from running was anyone's guess, though I'd have put money on keeping me from running.\n\nJ.P. knocked on the door but didn't wait for an answer before swinging it open. The Marchands' house was so large that it was for good reason; no one would likely have heard it, anyway. Still, as the door swung closed behind him, he called out.\n\n\"Anyone home? I'm here!\"\n\n\"They're in the living room,\" said a voice from the stairs. \n\nI jumped and looked up to see Marc-Andre, J.P.'s younger brother, bounding down the steps. He froze when he saw me.\n\n\"Oh. Hey, Nellie,\" he said.\n\n\"Hi,\" I replied awkwardly.\n\nMarc-Andre glanced at J.P., then shrugged and made his way down the hallway.\n\n\"What was that about?\" I asked as we followed him.\n\n\"Oh, that.\" He held my arm tighter, lowering his voice as we rounded the corner to the living room. \"Well, I might not have mentioned you were the person I was bringing to dinner tonight.\"\n\n\"What?!\" I gasped.\n\nJ.P. smirked, barely able to contain his amusement. \"Oh, and Anne-Marie doesn't know we're together yet.\"\n\n\"Oh, no,\" I muttered.\n\n\"Hey, Mom!\" J.P. said loudly. \"Hey Dad. You remember my girlfriend Nellie, right?\"\n\nMr. Marchand's eyebrows were raised as he looked at us. Mariette Marchand's lips were in a comical O-shape. And from the couch, Anne-Marie jumped up, clapped her hands together, and shrieked.\n\n\"Ohmigod, Nellie!\" she cried, leaping across the room.\n\n\"You can get me back later,\" J.P. muttered in my ear.\n\nAnne-Marie threw her arms around me, nearly knocking me off my feet. \n\n\"It's about time!\" she screeched in my ear.\n\nI couldn't help but laugh. No wonder J.P. hadn't wanted to tell her on his own. Instead, he'd made sure I was around to take the brunt of Anne-Marie's excitement. It was smart. I'd get him back later, just like he said, but I had to admit it was a smart plan on his part.\n\nIt was a good thing I loved the bastard.\n\n**\n\nSpecial thanks to Bebop3, chasten, norafares, and OneAuthor for editing and providing feedback. As always, thanks to A, K, Paul M, and Kevin Matheny. To everyone who has followed Nellie's journey, commented and messaged, and fallen in love with the characters the same way I have... thank you. Thank you for reading, thank you for your support. It means the world to me.\n\nLove, Cheryl"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "college girl",
        "erotic romance",
        "friends with benefits",
        "happily ever after",
        "happy ending",
        "heartbreak",
        "relationships",
        "romance series",
        "romantic drama",
        "three dimensional characters"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/nellie-and-the-bastard"
}