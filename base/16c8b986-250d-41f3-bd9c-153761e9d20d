{
    "title": "Lisa Ch. 05b: Only Human cont",
    "pages": [
        "Continued from chapter 5a due to length\n\n********************************************\n\nOne week later\n\nJosh couldn't believe his luck. \n\nAngus and Riley had been summoned to a meeting with the others in the clan.  Part of him wished that they were called away more often, but this time they had some additional errands and work to do. They'd be gone for a week. Longer than they'd ever been gone before. That was just fine with him. Not that he begrudged them their nights with Jessica, but it got him more time with her. And tonight he had a particular mission. \n\nIt was a week since the saw incident with Angus, and Jessica seemed a different person.\n\nJosh had been reading the magazines and books that Scott had lent him. And he'd been trying to get some information out of Scott. Even though Scott hadn't been willing to divulge too many specifics, his conversation with Scott earlier in the day confirmed for Josh that Jessica had not only been a willing participant in sex with Scott, but an active one. And from the sounds of it, a far more active than she ever was with him. \n\nThis was the night that Josh planned to remedy that. Josh closed the bedroom door and hung back as Jessica moved to the bed and dropping the towel began to put on her pajamas. Jessica looked back at Josh, a questioning look on her face. Normally Josh was quick to get ready for bed. In a hurry to read comic books, or show Jessica the latest work he'd done on his comic book. Josh nodded toward the end table where Jessica's comics usually lay. Jessica moved over to the table and stood staring down at the magazine that lay open on the table. She picked it up.\n\n\"I want to write some of that into the story of Princess acisseJ and Prince aushoJ ... but I want it to be something Princess acisseJ wants to do. Something Princess ... what the fuck ... something you want to do Jessica.\" Josh moved to where Jessica was still looking at the magazine. There was a picture of a woman being eaten out by a man who was pulling her breast with one hand and inserting his thumb in her rectum with the other. Josh slid one hand under Jessica's shirt, and found her breast. He slid his other hand down the front of her pants.\n\n\"Will you do that Jessica? Will you part your legs for me? Can I eat you out while pulling your nipple and sticking my thumb up your ass?\"\n\nJessica shivered with pleasure as Josh's fingers parted her lips and began to stroke. She wasn't sure about the thumb part ... Angus liked to enter her in the bum and it hurt, it really hurt. But then, Josh wasn't Angus. Jessica turned and pushed Josh back.\n\nReluctantly he stepped back and for a moment he was afraid she'd say no. But instead Jessica moved to the bed. Turning she looked at Josh and bit her lip, as if she were deciding something ... but it was sexy. \n\nJessica felt desire growing. She pulled off her shirt and stood looking at Josh. The look on his face as he stared at her, drool practically running down his chin, made the thought of Josh eating her out very appealing. As if someone had flipped a switch inside her, she wanted him. Really wanted him. Jessica felt a shiver of desire run through her body as she deliberately began to pull on her nipples. She pulled them until they were erect. Josh thought he was going to cum right there. He reached out to take a nipple. But Jessica moved back, out of his reach. She climbed on the bed and removed her pants, and then she lay back and very slowly, and very deliberately , opened her legs. She watched Josh as he advanced on her. As his mouth worked its way around her pussy, Jessica ran her fingers through his hair.\n\n\"Lower ... \" she ordered, pushing his head lower and tilting her pelvis up. \n\nShe tasted so good ... her juices smelled and tasted so good ... Josh was so concentrated on her clitoris that he almost forgot about her ass. Alternating between nipping her clit and sucking it, he parted her bum cheeks, found her anus and began to press his thumb into it. Jessica arched and tried to move away. Josh pulled her closer and held her tight around her waist. And inserting his forefinger in her vagina he began to press his thumb into her anus more forcefully. Somehow the sensation from his thumb, mixed with his teeth working on her clitoris brought on wave upon wave of pleasure.\n\n\"Holy shit!\" Josh exclaimed coming up from between her legs, face drenched. \"I can't believe it, you just ... just ...\"\n\n\"Scott calls it geysering\" Jessica said smiling down at him with a lazy, satisfied, look on her face.\n\n\"Fucking right!\" he exclaimed with a laugh.\n\n\"My turn!\" Jessica said sitting up. Planting her hands on Josh's chest, she pushed him back onto the bed. \n\nShe pulled his pants off and then licked her way up his thighs.\n\n\"Oh my God!\" Josh exclaimed as she licked his testicles and then inserted his whole cock into her mouth and took it down her throat. \n\n\"Hold on!\" Josh exclaimed and pushed Jessica on the bed and then kneeling with his knees on either side of her head he inserted his cock in her mouth and then parting her legs, began to eat her out again. He thrust back and forth into her mouth, harder and harder. The harder he thrust, the harder it was for Jessica to protect his shaft from her teeth. But he didn't care, he liked the occasional scrapes. He nipped her and chewed and licked until she began to arch beneath him ... and then he came. As he spilled into her mouth he lifted his lips just long enough to say, \"swallow Jess, swallow. All of it ...\" and he knew she was swallowing ... he could feel her. \n\nSpent, Josh turned around and crawled up to lay next to Jessica. He grabbed his discarded shirt and wiped his face. \"Would I be safe in assuming that you enjoyed that?\" he asked.\n\n\"Mhmmm ...\" Jessica mumbled with a giggle. When Josh had started to insert his thumb in her anus, Jessica was ready for the same pain that she experienced with Angus. But, a thumb was quite different than a penis, and Josh had managed to make it feel good. She was pleasantly surprised.  He pulled her into his arms and rubbed his hand up and down her arm, his foot along her leg. Gently, slowly.\n\n\"You've never went off like that before. I guess you weren't getting off like I thought you were.\"\n\nJessica shook her head.\n\n\"Sorry about that.\" Josh said.\n\n\"It's okay.\"\n\n\"So, do you think Princess Acissej would enjoy it too?\"\n\n\"Oh I'm certain of it.\" Jessica whispered, closing her eyes and dozing off.\n\nJosh kissed her on the forehead and then gently disentangled himself from Jessica and got out of bed. Grabbing a pillow and blanket he set himself up on the floor. He stared at the ceiling in the dark and smiled. That was some sex. The best in his life. He decided he'd ask Scott for some more of his magazines and books. Things were looking up.\n\n \n\nThe next morning they sat around the table, enjoying a coffee. Jim, Josh and Scott smiling so much they felt like their faces would split ... Jessica looking from one to the other wondering what she'd missed. It was obvious that she was missing the point. With no Riley or Angus around to ruin the relaxed mood, and the three of them getting their rocks off regularly. The men were some happy. \n\n\"Is everything okay?\" Jessica asked when all three just kept looking at her.\n\n\"Just great.\" Jim said.\n\n\"Just fucking great,\" Scott said wagging his tongue at Jessica and winking. Jessica finally got it and blushed.\n\n\"So what's the plan for today? Do you want to make breakfast today Jess? As our official cook,\" Scott asked.\n\n\"Can I?\" Jessica asked bouncing up and down in her chair. \"Can I make eggs?\"\n\nThe men looked at each other and shrugged, \"Sure,\" they said in unison. Jessica rushed to the kitchen. \n\n\"We have some chores to do outside,\" Jim said as Jessica searched through the fridge for eggs. Finding them she began to search through the cupboards for a frying pan. \"Do you want to come along and help?\"\n\nJosh and Scott did a double take. Jim mouthed 'come on!' while Jessica's back was still turned.\n\n\"Can I really?\" Jessica asked pausing in the kitchen, eggs in one hand, frying pan dangling in the other.\n\n\"Sure.\" Jim said. \"I'll be mucking out the horse stalls. Feel up to that?\"\n\n\"Yes, yes, yes!\" Jessica exclaimed.\n\n\"All right then. Finish up with those eggs and we'll get to it.\"\n\n\"How are we going to explain that to Riley and Angus?\" Scott asked in a low tone when Jessica had turned her back.\n\n\"We'll think of something when it comes up. If it doesn't, well then that's not a bad thing ....\"\n\nScott and Josh looked at each other. \"I guess what they don't know won't hurt them ...\" Josh said.\n\nHalf an hour later Jessica stood at the sink cleaning the dishes. Scott was next to her, drying.\n\n\"Hey, did we win anything last night?\" Jim asked from the table where he and Josh sat finishing their coffees.\n\n\"We came out even ... \" Scott answered.\n\n\"Were you in a lottery?\" Jessica asked.\n\n\"Not exactly.\" Scott answered. \"I went to the track ... horse track ... \" he clarified when Jessica's expression went blank. \"We won some and we lost some ... came out even.\"\n\n\"Is that where you go, when you go out?\" Jessica asked.\n\n\"Usually.\"\n\n\"Did you race one of your horses?\"\n\n\"I wish!\" Scott said with a laugh. \"No I was just out there betting.\"\n\n\"Why aren't you racing the horses ... you obviously want to?\"\n\n\"Yeah, well. What you want to do and what you can do are two different things.\" \n\nJessica's eyes snapped up when Scott spoke. He'd sounded dejected.\n\n\"Why can't you race the horses? Won't Riley let you?\"\n\n\"Well, Riley wouldn't like it much, that's for sure. Way too public ... but I'm just too heavy for a horse to run fast enough to race ... muscle heavy, not fat heavy.\" Scott added with a laugh when Jessica looked him up and down. \n\n\"That's too bad.\" Jessica said, handing Scott the last of the dishes. \"Why don't you just train the horses then ... get someone else to ride?\" \n\n\"Sounds easy huh? But you need someone to ride the horses while they train. Back to the same problem.\" Scott said, putting the dishes away.\n\n\"Oh, okay ... \" Jessica said in a tone that indicated that she wasn't so sure his answer made sense. \n\n\"What?\" Scott asked, \"can you see some poor horse running hell bent on leather with me on his back? Or any of us for that matter? What's that look for?\" he asked when Jessica looked at him like he was stupid. \n\nJessica scanned over to Jim and Josh and shrugged when their expressions were as askance as Scott's.\n\n\"There are other people in the world Scott. Your options aren't just limited to you, Jim, Josh, Angus or Riley. Surely you could find someone light enough to ride, and you have all the horses you could possibly need ... what's wrong?\" Jessica asked when Scott's expression changed to something she couldn't decipher.\n\n\"It's not that easy,\" Jim said when Scott hadn't answered and just sat stood staring at Jessica. \n\n\"It's not?\" Jessica asked, but when Scott's expression intensified and she noticed that Josh was looking at her in an equally intense yet unrecognizable way, she clamped her lips shut.\n\nJim chuckled as he looked from Scott to Josh. \"It's okay Jessica,\" he said, \"I think this is the first time Scott and Josh get to see you like I see you, uncensored.\"\n\n\"Is that bad?\" Jessica asked.\n\n\"No,\" Jim said while elbowing Josh. \"It may just take a little getting used to. Right Scott? Right Josh?\" Jim asked emphasizing the names when he spoke and gesturing with his hands palms up in a silent 'get a grip'.\n\n\"Right.\" Scott said, trying to sound convincing when in fact he felt as if he'd just had a conversation with a complete stranger. Never before had Jessica spoken to him like that. It was as if they'd been friends for years and she was berating his stupidity. She'd been more relaxed with him lately but apparently there was another level he had just reached. He liked it, but he felt off balance, like the earth had shifted under his feet. Clearly things weren't done evolving with Jessica yet and he wasn't sure how he felt about her being so candid about his faults.\n\n\"So, is that your way of saying that Scott isn't really doing everything he could be doing to race?\" Josh asked. He'd often thought the same thing, but never bothered to say it. It didn't seem so cut and dry from his point of view given their circumstances ... but clearly from an outsiders point of view, and even Jessica's, it was simple. \n\n\"Face it Scott, if you really wanted to race, you'd find a way to do it.\" Jessica said, moving into Scott's arms when he looked taken aback. \"When there's a will there's a way?\" she asked, and then buried her face in his chest and hugged him. \"All I'm saying is if you really want to train race horses, you can find a way to do it. You'd be great at it.\" She looked up at him. \"Or, are you afraid that you wouldn't be?\"\n\nScott felt like he'd had the wind knocked out of him. No one had ever spoken to him like that. He didn't know if he should be happy about it or miffed. He wished he was alone with Jessica. He had an overwhelming urge to dominate her. Not violently, but sexually. \n\n\"Oh,\" Jessica exclaimed. Scott's expression sent a jolt of pleasure shooting through her. She looked hesitantly from Jim to Josh and then back at Scott. \n\n\"Here?\" she whispered.\n\nScott shook his head but purposely brought his hands up to brush against her breasts. \"Later,\" he said in a voice so guttural that he had to clear his throat. \n\n\"I think we'd better get on with our work.\" Jim said. \n\nJessica's response to Scott was so obvious. Josh had been shifting in his seat. Jim didn't know how Scott was able to resist dragging her off to his room, but he was afraid that left to his own devices, Josh would take Scott's place. Or maybe he himself would \"rise\" to the occasion.\n\nJim shook his head. God if that happened everything would deteriorate into a sex fest ... dragging Jessica to each of their respective bedrooms for sex at any time of the day was something that should never ... could never happen. If it did, Jim couldn't see how they'd ever be able to pull themselves back into something resembling a normal life. \n\nObviously Josh had been thinking along the same lines because as soon as Jim had spoken, Josh had jumped to his feet. \"Good idea,\" he said and headed for the door. He stood in the doorway and looked back at Jessica. \n\n\"Coming?\"\n\n\"Yeah!\" Jessica exclaimed. \n\nThe excitement of helping outside seemed to trump any sexual desire she may have had. She moved away from Scott and strode to the door, leaving Scott standing stock still, staring into the space where she'd been standing. He clenched his eyes as the pain of pent up drive seized his balls.\n\n\"Are you alright man?\" Jim asked when Josh and Jessica had stepped out onto porch.\n\n\"No. How does she do that? Just turn it off like that?\"\n\n\"I don't know. But you may want to take a cold shower ... you look like you sucked on a lemon.\" Jim chuckled as he got up and headed for the door also.\n\n\"Ha, ha.\" Scott said as he shuffled toward the bathroom, \"One day this will happen to you and then we'll see who's laughing ... \"\n\nJim laughed again as he left the house. He had little doubt that it would ... but he intended to be somewhere that he could actually do something about it.  \n\nAt the end of the day, Jessica was exhausted, and loved it. She had helped Jim, Josh and Scott with every chore they had. She hadn't done that much physical exercise in years not even on the universal gym in the basement. As she was stripping her clothes off in the bathroom, looking forward to a hot shower, she noticed Scott looking her over quite thoroughly ... with an even more intense expression than usual. Subconsciously Jessica wrapped her arms around herself, covering her breasts.\n\nScott could barely move his eyes from the places that bits of flesh were exposed behind Jessica's makeshift cover. The day had been excruciating for Scott. First the way she'd spoken so freely to him, but then she'd been so free around him, Jim and Josh all day. It was refreshing but at the same time it enflamed something primal in Scott that he only barely knew was there. The role playing they'd been doing being the first indicator of his tendency to want to dominate Jessica. But now, now after a full day of her carefree ways he just needed to control her sexually. God his cock was straining against his pants ... and he knew what he wanted to do to her. A water torture porno mag had planted the seed but his own imagination was going to bring his need to fruition.  He finally raised his eyes and noticed that Jessica was watching him with obvious curiosity.  \n\n\"Am I in trouble?\" She asked with caution, unsure if she should be afraid. Scott hadn't tried to shower with you her since she'd won showering alone at cards. And there was something about Scott's expression that she couldn't decipher ... something she'd never seen before.\n\nScott shook his head. \"Not in trouble.\" Scott said and took a step forward. \"I just think sometimes you may get a little excited about things ... a little, out of control maybe. I just want to help you relax ... and maybe learn a little control ...\" he said lowering his eyes to the tuft of hair between her legs. Her arms still rested on her breasts but the pussy was just there. \n\nA shock of pleasure jolted through Jessica as Scott's eyes bore into her. And when he licked his lips, she actually came, without him even touching her. Scott inhaled deeply and forced his eyes to Jessica's face. \n\n\"I can smell you.\" He said.\n\n\"You can?\" she asked, surprised.\n\n\"Yes,\" Scott grunted, \"part your legs a little more ... please ...\" Jessica widened her stance, and Scott inhaled deeply, closing his eyes as he enjoyed the smell.\n\nJessica shivered, pleasure mounting but completely unsure where Scott was going with this. Scott opened his eyes and leveled them on Jessica. He held her gaze, not blinking.\n\n\"We're going to take a bath together. A special bath ...\". Scott removed his clothes.  He stepped closer to her and taking her buttocks pulled her against him.\n\n\"Let's get in the tub. You'll be between my legs in the front.\"\n\nJessica nodded but before they moved to the tub Scott smiled and brought his right hand between them, between her legs and inserted two of his fingers in her pussy, and caressed her clitoris with his thumb. Jessica came again.\n\n\"My, my G, \" Scott said bringing his wet hand up. \"You're ready to go ... aren't you?\" he asked and proceeded to stick one of this fingers in his mouth and lick it off. \n\n\"Maybe you'd be interested in tasting yourself?\" He said bringing the second finger to Jessica's mouth and inserting it between her lips. \n\n\"Suck ...\" he said as Jessica licked his finger. \"You taste good, don't you?\" he asked. Jessica nodded. It was ... different. She was not sure that she enjoyed the flavor as much as Scott seemed to ... but just the fact that she was tasting herself ... she practically came again. Removing his finger from her mouth, Scott turned Jessica toward the tub. His hands on her hips, he led her to it. Once in the tub, Jessica sat in the front, Scott behind her, his legs bent on either side of her.\n\n\"Lean back,\" Scott said in a low voice. Jessica did. \"Spread your legs, wide. I want to see the meat of your pussy ...\"\n\nJessica brought her knees up and spread her legs. Scott ran his hand down her pelvis and between the lips of her pussy, using his fingers to spread her lips open.\n\n\"That's it ...\" he murmured. \"Now, the bath will go like this ... I'm going to start the water running at a certain temperature. Then I will push your pussy under it, holding you in place.\" He began to stroke her clitoris as he spoke, his hot breath on her neck. With the other hand he turned the hot water on.\n\n\"You'll tell me if the water is too hot. Look at that steam Jess ... do you think that would be too hot?\"",
        "Jessica came so hard ... the situation, his tone, his hard cock pressing into her back ... she couldn't believe how horny she was. He chuckled in a low, sexy way and ran his fingers over her wet pulsating meat ... \"Keep cumming baby ...\" he murmured in her ear, \"It should make this little lesson even more enjoyable to teach to you.\" Shivers of pleasure rolled over her and she moaned as he pumped a finger into her hungry pussy hole. \"As I was saying, as I hold your pussy under the water it's up to you to tell me if it's too hot. If you don't find it too hot, I'll pull you out, turn some of the cold water off, and push you under again. We'll continue like this until you say it's too hot.\"\n\nHe thrust his fingers into her deeper, harder.\n\n\"And when you tell me that you find it too hot, I'll feel the water and decide if I agree with your decision. If I do, I will push you under and hold you there until you cum and your legs began to twitch ... believe me they will.\" Scott said when Jessica glanced up at him. \"Just like this ...\" he illustrated by finding her clitoris and stroking. Her legs twitched, her clitoris not having recovered from her previous orgasms yet. \"It'll be uncomfortable, but still feel good. At that point you'll have two minutes to come again. If you don't, I'll turn on pure hot water and you will stay under it until you can lay still without squirming or your legs twitching. You'll have to do better than that ... \" he whispered into her ear as her legs continued to twitch as he continued to rub her clitoris.  \"And, of course, if I don't agree with your decision ... then I will also turn on pure hot water and hold you beneath it until you can lay still. And I should add that I want you to beg me to hold you under the water longer. If you don't or if you ask me to pull you out, it'll be even longer.\"\n\nScott reached over Jessica and turned on the cold water. The steam dissipated. \n\n\"Don't want to make this too easy do we?\" he asked as he turned down the cold water until a slight mist of steam returned. Scott grabbed Jessica behind the knees and pulled her legs apart, and held them in place as he pushed her exposed pussy under the water.\n\nJessica shifted a little under the water. \n\n\"So, is it too hot?\"\n\n\"No ...\" Jessica replied, in a not too convincing tone.\n\n\"Ask me to make the water hotter ... \"\n\n\"Scott ...\"\n\n\"The longer you take to ask me Jessica, the longer you'll be under the water.\"\n\n\"Please, please make the water hotter ...\" Jessica said.\n\nScott pulled her out, adjusted the water temperature.\n\n\"And what are you going to ask me now?\" he asked.\n\n\"Please put me under the water?\"\n\n\"Please put your what under the water?\"\n\n\"Please put my ... vagin ...\"\n\n\"No, the other word, the word that I like ...\"\n\nJessica looked back at him, completely at a loss for what he could mean. Scott pulled on her nipple with his right hand as he slid his left hand to her pussy and caressed.\n\n\"Pussy Jessica, I call it a pussy. Ask again ... properly ...\"\n\n\"Please put my pussy under the water,\" Jessica asked. \n\n\"Perfect ...\" Scott said giving her nipple a final pinch as he took her by her knees again and pushed her under the water. This time the water was considerably hotter, and that combined with the steady pressure of the running water caused Jessica to orgasm. And after the pleasure subsided, the pressure from the water falling on her vagina caused her legs to twitch uncontrollably. \n\n\"That's it ...\" Scott muttered. Jessica felt the hardness of his cock on her back and then it softened, replaced by a warm wetness. Scott panted behind her. \"That twitching just drives me ...\"\n\n\"Scott, please ...\" \n\n\"Control your legs Jessica, and start concentrating on cumming. By my calculation you have a minute and a half left to orgasm before I turn on pure hot water.\"  \n\nJessica began to concentrate on keeping legs still, and between the frustration of not being able to, the pressure of the water, and the fear of having pure hot water pouring on her vagina, Jessica came, her head tilting back as the pleasure consumed her.\n\nScott chuckled as he kissed her forehead. Her eyes were closed, her head to one side. Bliss evident in her expression.\n\n\"What do you need to ask now,\" he whispered into her ear.\n\nDrowsily Jessica opened her eyes. \n\n\"Huh? Keep going?\" she asked.\n\n\"Mhmmm. You didn't believe me when I said you'd be having multiple orgasms ... did you?\"\n\nJessica shook her head.\n\n\"You have ten seconds to ask Jessica or I turn on the hot water ...\"\n\n\"Please make the water hotter ...\" Jessica asked . Scott pulled her out and turned down the cold water, and up the hot. Jessica's head had lolled from side to side, immense relaxation consuming her. But it snapped to attention when Scott chuckled and said, \"look at that steam ... that water looks hot ... thirty seconds Jessica ...\"\n\n\"Please put my pussy under the water.\" Jessica said with more calm than she felt. The water was hot and caused her to buck.\n\n\"Is it too hot Jessica?\" Scott asked, pulling her legs even further apart. Jessica's first thought was yes, but then she realized that Scott would never think the water too hot. Jessica shook her head.\n\n\"No, please make the water hotter.\" She said hoping that Scott would pull her out quickly. But then she came suddenly, and her legs twitched. Even more violently than the first time.\n\n\"That one doesn't count ... Two minutes to cum again Jessica ... whoa, whoa, you have to control your legs better than that ...\" he muttered quietly into her ear.\n\nJessica tried so hard to control her legs, to reach orgasm, but it just wasn't working.\n\n\"Ten, nine, eight ...\" Scott began to count the last ten seconds. When he got to one, he reached up and turned the cold water down considerably and turned up the hot.\n\nJessica squirmed a little but surprisingly, it didn't hurt so much as it stimulated.\n\n\"Hold still, and cum ... cum Jessica or you're going to have boiled pussy meat ...\"\n\n\"Scott ... \"Jessica began convinced that she would not be able to come again, but then suddenly she felt pleasure beginning to radiate from her vagina, up her pelvis, into her legs, and then she exploded. She thrashed her head from side to side and the look on her face caused him to cum also. They lay panting in the tub, and Jessica's legs twitched.\n\n\"Scott, I can't ... I can't stop the twitching this time ...\"\n\n\"Okay ...\" he mumbled and leaned over to turn off the water. He brought his hand to her pussy and stroked gently. \n\nJessica's legs continued to twitch. He ran his hand up her stomach and Jessica turned on her side, collapsing her head on Scott's chest. He wrapped his arms around her and drifted off to sleep.\n\n\"Jess, Scott, \" Josh's voice came from behind the bathroom door. \"Are you okay? You've been in there forever.\"\n\nScott and Jessica woke at the same time.\n\n\"Tell him you're okay,\" Scott whispered, tilting his head toward the door.\n\n\"I'm fine,\" Jessica said, sitting up. \"I just took a bath with Scott and it took longer than I thought it would.\"\n\n\"Shhh,\" Scott said, wincing.\n\n\"Really? With Scott eh?\" Josh asked.\n\n\"I wasn't supposed to tell him that?\" Jessica asked.\n\n\" No, that's fine.\" Scott said. \"Honesty is the best policy even if you're supposed to be showering and bathing alone... \" he mumbled. \n\n\"Scott? Are you okay?\" Josh asked with a hint of laugh in his voice.\n\n\"Fine, Josh ... thanks.\" Scott replied, shaking his head. \"We'll be out in a minute.\"\n\nScott helped Jessica to her feet, and then turned on the shower. As he lathered Jessica up he couldn't help but hug her. Again and again.\n\n\"How do you feel down there?\" Scott asked, gently stroking the hair between her legs. \"It doesn't hurt, does it?\"\n\n\"No ... oddly it doesn't.\" Jessica said, and giggled as he nipped her neck.\n\n\"Good,\" he said as Jessica moved into the shower stream to rinse off. Scott watched and sighed. Now that he got the dominance out of his system he began to reflect on what Jessica had said about the horse racing. Now he could see that she may have had a point. \n\nHe didn't honestly think he was avoiding racing ... but for some reason it never occurred to him to try to get someone outside of clan to ride for him. It wasn't practical, that was for sure ... but it was doable. \n\n\"All done,\" Jessica said stepping forward and kissing Scott's chest. And she stepped out of the tub. Scott reached for her arm and missed.\n\n\"Jessica!\" he barked. \n\nJessica jumped. \"What?\" she asked.\n\n\"Sorry,\" Scott said, when he realized that he'd reacted without much thought. Jessica didn't shower with him anymore. She was used to getting out of the shower at will. It was just that for a moment, Scott forgot that. Now his mind raced to cover that fact up. It was bad enough he'd showered with her when she clearly had a shower alone rule. \n\n\"Um, could you get me a towel?\" \n\n\"Sure,\" Jessica said heading to the linen closet. Scott rinsed and got out of the shower quickly. \n\n\"Here you go,\" Jessica said handing him the towel. \n\n\"Thanks,\" Scott and caught her by the arm. \"Come here.\" \n\nJessica stepped into his embrace. \n\n\"I'm supposed to be making dinner you know.\" Jessica said as she ran her hands over the hair on his chest. \"Jim and Josh are going to starve if we don't get dressed soon.\"\n\n\"Ah, they won't starve. They're pretty plump ... could stand to lose a few pounds ...\" \n\n\"Scott ...\" Jessica said, shaking her head, \"aren't you hungry?\"\n\n\"I sure am ... \" he said, bringing his leg up between hers.\n\n\"Poor choice of words ...\" she said, \"I meant for food Scott, real food.\"\n\nScott chuckled. \"Should I take that to mean that you are hungry ... for food?\"\n\n\"Yes,\" she said, \"starving.\"\n\n\"Okay, okay, we'll go.\" He laughed, letting her go. \n\nThey went to his room and dressed and then headed out to the living room.\n\n\"They live,\" Josh said. \"That had to be the longest 'quick' shower ever.\" But he regretted saying it right away. Jessica turned beet red and escaped to the kitchen. \n\n\"Bro ... \" Scott said lifting his hands toward Jessica as she banged around in the kitchen. \n\n\"Sorry Jess, I was trying to razz Scott, not you.\" Josh said going into the kitchen and turning her to face him.\n\nJessica smiled and nodded. \n\n\"Maybe,\" Jim said in an undertone when Josh came back into the living room with him and Scott, \"we should limit having sex to the night time.\"\n\nHe swung his eyes to Scott.\n\n\"Maybe,\" Scott agreed, watching Jessica scurry back and forth from the fridge to the counter, to the stove. \"It is my night with her ... I didn't honestly think it was going to make headline news. But I guess it's only fair to her, right?\"\n\n\"Well, I'll try,\" Josh said, \"but I can't promise anything. Sometimes things just happen.\"\n\nJim rolled his eyes.\n\n\"Hey,\" Scott said, \"you brought out the radio.\" He waved at the black portable radio that sat on the side table, emitting music quietly in the background.\n\n\"Yeah, I thought it'd be fun to have some music. I'm thinking maybe a game of euchre after dinner'd be fun.\"\n\n\"Sounds like a good idea,\" Josh and Scott agreed.\n\n\"Do you need any help?\" Jim asked, moving into the kitchen.\n\n\"Can you put on some rice?\" Jessica asked.\n\nTen minutes later, the food was on the table. Jessica was seated and Jim was handing Josh and Scott a beer from the fridge.\n\n\"It looks great Jess,\" Jim said coming to the table, \"You did a great job cooking and a great job with the chores ...\" he was about to take a swig from his beer, just like Scott and Josh were doing when he realized Jessica had nothing to drink. He looked at his bottle and made up his mind. \n\n\"Here Jess,\" Jim said handing her a new beer he'd grabbed from the fridge, \"you deserve a cold one, just like us.\"\n\n\"Jim ...\" Scott said, watching Jessica accept the bottle.\n\n\"Go ahead, try it,\" Jim encouraged Jessica when she sniffed the opening. Jessica took a sip and her face contorted. \n\n\"Do you like it?\" he asked with a laugh.\n\n\"No!\" Jessica replied and pushed the bottle away from her on the table. \"That's vile!\"\n\nDespite themselves, Scott and Josh chuckled.\n\n\"It takes some getting used to.\" Jim agreed. \"How 'bout some wine then ... we have some white.\" \n\n\"Are you out of your mind?\" Scott asked quietly, following Jim into the kitchen. \n\n\"Not that I know of,\" Jim said, opening the bottle and finding a glass.\n\n\"Yes you are. You can't give her alcohol? What if she tells Riley?\"\n\nJim shrugged. He could see Josh eyeing him from the table but Jessica wasn't paying much attention. \n\n\"Things won't change if we don't keep moving forward. If she tells Riley, so be it. We'll deal with it. I mean, you wouldn't be suggesting that we tell her to not tell Riley?\"\n\n\"No. I'd be suggesting not giving her any wine.\"\n\n\"She's not going to get trashed Scott. But she worked hard, just like we did. What's wrong with her kicking back with a drink? Just like we are.\"\n\n\"Where's that wine?\" Josh asked from the table. \"The foods getting cold.\"\n\n\"Do you want to give it to her, or should I?\" Jim asked holding the glass out. \"Listen,\" Jim whispered, leaning closer to Scott when all Scott had done was stare at the glass. \"This is the opportunity we've needed. She's been different ... you have to admit that. And I for one want it to go all the way. I want a relationship with her Scott and a relationship means that Jessica can help out, she feels free to speak her mind. We have to change the way we deal with her. If she can change then we have to too. And if we want her to change more, then we have to make it possible. Trust me on this, will you?\"\n\nScott took a deep breath. \n\n\"Jesus Christ Jim, you're going to get all of our asses kicked. And in case you've gone senile as well as insane, the person whose going to get their ass kicked the most is Jessica. This is more dangerous for her than us.\"\n\n\"Guys,\" Josh said coming up behind them. \"Jim's right, I'm more than willing to get my ass kicked, and I think Jessica would be willing to get her ass kicked, must move forward, now give me the damn wine, and let's eat!\" He grabbed the wine from Jim and spun around, marching back to the table.\n\n\"Here you go Jess,\" Josh said, \"I think you'll find this tastes way better than beer.\"\n\nJessica took a sip and nodded.  \n\n\"This is delicious,\" Scott said as they ate. \n\n\"Thanks,\" Jessica said.\n\n\"Mmmhhmm\" Josh and Jim mumbled in agreement. Unable to stop shoveling the food in their mouths.\n\n\"You guys want some coffee?\" Jim asked, as Jessica began to clear the table. \n\n\"Sure.\"\n\n\"It's okay Jess,\" Jim said standing and taking the plates from her hand. \"You cooked, we'll clean-up. Why don't you go relax on the sofa ... we'll play some euchre after, 'k?\"\n\n\"Okay,\" Jessica said, moving to the sofa, taking her wine with her.\n\n\"I think we may need some coffee for Jessica,\" Scott said. He'd been watching her for the past twenty minutes as he was drying the dishes that Jim washed. He nodded to the living room as he handed Josh the dry dish to put away. Jessica had made herself comfortable on the sofa, wine glass in hand, but she was sinking lower on the sofa as her eyes began to close.\n\n\"Shit!\" Josh said moving to the sofa, \"Here Jess, better give that to me ...\" He said taking the wine glass from her hands.\n\n\"Hey, how about that euchre!\" Scott said, clapping his hands and rousing Jessica as she was about to fall to sleep. \n\nHe was still holding out hope for some good sex tonight but given all the work she'd done today, plus the wine, he was beginning to resign himself to that not happening. But there was always the chance that she'd perk up if they played euchre.\n\nJessica forced herself to sit up.\n\n\"Hey, what d'ya say to mixing the teams up a little this time?\" Scott asked.\n\n\"What do you suggest?\" Jim asked.\n\n\"Why don't we see who out of Josh and I get the highest card. Whoever gets the highest card, is Jessica's partner. \n\n\"Josh?\" Jim asked. \n\n\"Sounds fair,\" Josh said. So Jim turned a King up for Scott, and then an ace for Josh.\n\n\"What are we playing for?\" Josh asked as he moved to sit opposite Jessica.\n\n\"Fun?\" Jessica asked when all three men looked at her for an answer.\n\n\"Fun is a given.\" Jim said while he shuffled the deck of cards, \"But what do you want to bet for?\" \n\n\"Nothing really,\" Jessica said.\n\n\"Nothing?\" Scott asked.\n\n\"I can't think of anything.\"\n\n\"Really?\" Josh asked, \"Nothing at all?\"\n\n\"I'm sure you can come up with something Jess.\" Jim said as he dealt out the cards.\n\n\"The only thing I can think of, I don't think you can give me.\"\n\n\"Try us ... \" Scott said feeling insulted, and his tone reflected it. But when Jessica looked at him, with an expression somewhere between defiance and smugness he had the sudden fear that she was going to ask to go home.\n\n\"Okay. I want to go horseback riding ... and not just in some tiny corral ... real horseback riding.\"\n\nThe men sat in silence. \n\nScott's sense of relief was short lived. While not as devastating as if she'd asked to go home, Jessica's request definitely topped showering alone in magnitude of difficulty. \n\nJessica had picked up her hand and was organizing it. She held no expectation that she would get what she wanted so she was surprised when she looked up to see that the men seemed to be seriously considering her request. \n\n\"Okay,\" Scott said, eyeing Jessica as she took a sip of her wine. They had already gone down a dangerous path that day, letting Jessica help with the chores, giving her alcohol, how would horseback riding make things any worse? \n\n\"But if Jim and I win, I want to begin showering with you again.\" He may as well get something good out of this. Memories of their earlier sex play in the bathroom brought on an erection that he had a hard time hiding from Jim and Josh. From the way Jessica crossed her legs and smiled he could tell she was remembering as well.  \n\n\"Okay?\"\n\nJessica nodded. She had little doubt that she and Josh would win the game. She had no intention of losing the opportunity to horseback ride.\n\n\"Jim?\" Scott asked.\n\nJim leaned back and observed Jessica. Having always been her partner in the past he'd never had the chance to win anything from her. But he knew what he wanted. To know her better. To know something personal about her. \n\n\"If Scott and I win, I want Jessica to tell us a secret.\"\n\n\"A secret?\" Jessica croaked, taken by surprise. \n\n\"What kind of secrets can Jessica possibly have?\" Scott asked, but as Jessica's expression went from disbelieving to somewhat concerned he looked at her hard. \n\n\"Yes Jessica,\" Josh asked also noticing the subtle change in her expression. He too pinned her down with his stare. \n\nJessica looked back and forth between them, she had no idea what to say.\n\n\"Guys,\" Jim said shaking his head, \"I wasn't implying that Jessica was keeping something from us. Everyone has something private that they keep to themselves. I want Jessica to share something personal and private. That's all.\"\n\n\"I guess your mind is the one part of you I haven't explored yet,\" Scott said in a voice thick with meaning as his eyes held Jessica's and he rubbed his hand over his lips. \n\nJessica couldn't catch her breath. When he looked at her like that she felt like his gaze was physically touching her, stroking her.  \n\n\"What do you say?\" Jim asked.\n\nJessica cleared her throat as she tried to find her voice. \n\nShe took a sip from her wine and took the opportunity to slide her eyes away from Scott, looking for reprieve from the urges that were racing through her. Unfortunately she slid them over to Josh whose expression fanned the flame within her even higher. He was leaning back against the chair, head titled to the right, observing her. Just the way he sat there looking like every fiber of his being was less interested in her mind then her body nearly drove her over the edge. She took a big gulp of wine from her glass, and brought her gaze back to Jim. Though softened by a slight smile on Jim's lips, his expression wasn't much different than Scott or Josh's. Suddenly Jessica's confidence in winning the game faltered. It wasn't fair ... they were distracting her with these overwhelming feelings of pleasure and yearning. How would she win the game in this state? And somehow, she didn't know how, the hard muscles that had always been bulging on their arms, chest, legs, became more pronounced. Not frightening Jessica as they had in the past when she knew the unavoidable violence that they would be unleashing on her, but luring her, attracting her. She wanted them. Despite this, and the fact that she really couldn't think of a secret to divulge to them should she have to, she wasn't sure she could gamble on having to do so. The silence dragged on ... the men watching Jessica, Jessica watching the men, and suddenly she realized that she had stopped breathing. Gulping air, she sat up.",
        "\"Are you okay?\" Jim asked reaching out for her arm. Jessica nodded as she steadied her breathing.\n\n\"So?\" Scott asked leaning forward in his seat, elbows on his thighs. His lips curled into a knowing smile. Jessica's feelings were evident. Josh had leaned toward her also, nodding his head toward her when Scott looked over at him, wanting to be sure he wasn't the only one picking up Jessica's signals. \n\n\"Yup,\" Scott said to Josh and Jim, \"you're not imagining it.\" \n\nAnd then swinging his lust riddled eyes back to Jessica he asked,\n\n\"What's your answer Jess?\" \n\n\"Okay,\" Jessica said. She took another sip of her wine taking the opportunity to look away from the men and stare at her wine. She worked on steadying her breathing and controlling her feelings. Her body was giving her desires away and it was disconcerting ... bordering on embarrassing.\n\n\"Alright,\" Scott said, \"what do you want from us if you and Jessica win Josh?\"   \n\n\"I want one of each of your nights with Jessica,\" Josh replied without hesitation.\n\n\"I wager the same thing with your night Josh,\" Jim said.\n\n\"Me too,\" Scott said.\n\n\"And Jess, you understand that riding is pretty big. You'd win that from both Scott and Jim, not to mention me.\" Josh said. \n\nJessica nodded, returning to examining her cards. \n\n\"Let's play then.\" Josh said.\n\nThe game went swiftly and decisively to Jessica and Josh. When the final point was won, Jessica could barely contain her excitement. Josh was pretty happy himself ... a couple of extra nights with Jessica.\n\n\"So tomorrow morning? First thing?\" Jessica said excitement in her voice.\n\n\"Yes Jessica,\" Scott said more than a little upset that he'd lost his night with her. \n\n\"Well,\" Josh said looking at his watch and then stretching his arms and faking a yawn, \"if we're getting up early tomorrow then we should get to bed. Sorry Scott, better luck next time.\" He continued with a crooked grin. \n\n\"Screw off,\" Scott said and Josh laughed.\n\n\"Ready Jess?\" Josh asked. \n\nJessica put her empty glass in Jim's outstretched hand and kissed him goodnight. She kissed Scott and then held Josh's hand as he led her to his room.\n\n*********************************************************\n\n\"Josh! Josh!\" Jessica said as she shook his arm. Josh groaned and opened one eye. Jessica had climbed down from the bed to his spot on the floor.\n\n\"What's wrong Jess?\" he asked.\n\n\"It's morning ... time to get up.\"\n\n\"What time is it?\" he asked. Jessica pushed up to his side table and returned with his watch.\n\n\"It's seven.\"\n\n\"Seven!\" Josh exclaimed. \"Jess, aren't you the least bit tired? We spent all night going at it like rabbits ... don't you want to sleep in?\"\n\n\"You know,\" Jessica said running her hands through Josh's short hair, \"I read somewhere that rabbits are early risers ... \"\n\n\"Oh really?\" Josh said placing his hand on her thigh and moving it up to the mound of hair between her legs, \"Maybe they get up early to fuck again ... that I can live with ...\" he snaked his other arm up around Jessica's waist and slid her down to lay beside him, leaning in he began kissing the nape of her neck.\n\n\"No ...\" Jessica said giggling as his kisses tickled her. She placed her hands on his chest and pushed away with all of her might. \"I think they get up early so they can go horseback riding.\"\n\n\"What?\" Josh asked, looking up at her. \"Rabbits? I guess you don't mean your regular rabbits ... just us two legged fucking rabbits ...\" He pulled her on top of him again.\n\nJessica laughed. \"Yes, I guess so. Come on Josh ... please ... please can we go?\" She kissed him quickly on the lips and then leaned back, pouted her lips and batted her eyelashes.\n\nJosh laughed. \"Cute Jessica, very cute. Alright ... let's go.\" Josh said and followed Jessica as she stood up.  They were dressed in record time. Neither Scott nor Jim were up yet. Jessica began making breakfast, Josh put coffee on.\n\n\"We should wake them up,\" Jessica said when breakfast was made with no sign of Scott or Jim.\n\n\"Right.\" Josh said. \"Allow me. If you go to get them you may never get to go horseback riding ....\"\n\n\"You're right,\" Jessica agreed, \"they're two legged rabbits too.\"\n\nJosh laughed as he hesitated at the entrance to the hallway. He watched Jessica flutter around the table pouring coffee. He looked at the front door. He'd have to be fast.\n\n\"Where are they?\" Jessica asked jumping up from the table when Josh returned alone. Josh laughed. He'd been doing that a lot lately and despite the fact that his face was starting to hurt, he enjoyed it. \n\n\"They're coming Jessica ... they have to get ready.\" He sat down in the chair next to where Jessica stood and pulled her onto his lap, \"and for the record, they think you're crazy.\"\n\n\"I prefer the word eccentric thank you very much.\" Jessica replied while smoothing a few stray strands of Josh's hair that stood up here and there.\n\n\"Sure,\" Josh said, \"just a fancy way to say crazy but I can oblige.\"\n\n\"What the hell?\" Scott asked as he stumbled into the dining room. \"It's seven fifteen in the morning Jessica ...\"\n\nJessica scrambled off of Josh's lap and pulled a chair for Scott.\n\n\"Here, sit down. Breakfast is ready ... here's some coffee.\"\n\nWhen Jim appeared she pulled a chair for him as well.\n\n\"Are you eating?\" Jim asked as Jessica stood watching them.\n\n\"Oh, right!\" she slid into her chair and began shoveling eggs into her mouth. The men looked at one another, laughing. \n\nScott shook his head. \"Crazy ...\" he muttered.\n\n\"Eccentric ...\" Jessica corrected in between mouthfuls of egg.\n\n\"X what?\" Jim asked with a laugh.\n\n\"Jessica prefers the refined word for crazy.\" Josh replied.\n\n\"I'm done!\" Jessica said pushing her plate away and jumping up. \n\n\"Clearly.\" Scott said. \n\n\"Hey what are you doing?\" He asked when Jessica pulled his plate away when he'd skewered his last bite of eggs with his fork.\n\n\"You're done too, right?\" she asked and moved on to taking Jim and then Josh's plates. She moved to the kitchen dumped them in the sink and bounced back out. \n\n\"Okay ... can we go ride?\"\n\n\"We're not done our coffee yet.\" Jim said with a wink. Jessica looked like she was going to explode. She fidgeted while Jim brought his coffee to his lips.\n\n\"Jesus ...\" Scott said when Jessica looked almost physically pained by the forced wait. \"Okay guys, I don't know about you but I can wait for coffee.\"\n\nJessica began clapping her hands and bouncing up and down ... looking to Josh and Jim expectantly.\n\n\"I guess I can wait too,\" Josh said.\n\n\"Oh okay ...\" Jim said struggling not to laugh too hard. \"Honestly Jessica, I don't know how you maintain that level of enthusiasm without exhausting yourself.\" \n\nBut Jessica wasn't paying attention. She'd grabbed Scott's hand and headed for the door.\n\n\"I take it that you'd like to ride Chestnut?\" Scott asked as they entered the barn.\n\n\"You remembered!\" Jessica exclaimed. \n\n\"I sure did. The thing is that Chestnut can be pretty frisky at times.\" Scott said as Josh and Jim moved off to get their horses ready.\n\n\"That's okay. I can handle it.\"\n\n\"Do you know how to ride Jessica? And your little two minute stint on Ebony doesn't count.\"\n\nJessica was nodding her head. \n\n\"I used to ride a lot.\" \n\nScott caught his breath and watched her face for any sign that she was upset by the mention of her previous life but there was none. She was looking at Chestnut with longing. \n\n\"Okay, let's get her saddled up for you.\" Scott said moving toward the saddle that balanced on the stall railing.\n\n\"Wait!\" Jessica said, grabbing Scott's arm. \"Do you mind if I do it myself?\" \n\n\"Okay,\" Scott said with hesitation. Chestnut was a tall horse he had his doubts that Jessica could manage. But he moved off to the next stall to prepare the horse he would ride. He kept his eye on Jessica as she bridled Chestnut swiftly and confidently. She didn't even have trouble throwing the saddle onto the horses tall back. He was feeling better about this now. Jessica obviously was not exaggerating her knowledge of horseback riding. Or, at least not preparation for horseback riding. They led the horses out of the barn and Jessica swung up onto the Chestnut with ease.\n\n\"Okay Jessica, we're going to warm up a little first. Nothing fancy. You haven't been on a horse in years.\" Scott said catching the reigns of Chestnut as Jessica had begun to urge her forward.\n\n\"Got it?\" Josh asked beginning to wonder if this was a good idea. \"I don't want to have to explain to Riley and Angus if you get hurt ... do you?\"\n\nJessica shook her head but the perma smile that had glued itself to her face when they'd come out to the stables was unmovable.\n\n\"Don't worry. I'll be careful, I promise. Where are we going?\"\n\n\"We've got a lot of land,\" Jim said indicating the countryside ahead of them. \"We'll ride that. Maybe we'll get lucky and run across a few of those wild dogs.\" He continued, tapping the butt of the rifle that stuck out from the saddle holder near his leg.\n\n\"We should be so lucky.\" Scott said as they began to walk out around the corral.\n\nJosh looked at Jessica. \"Would that be good luck or bad luck?\" he said and then motioned his head to Jessica when Scott and Jim picked up on his tone. \"I'm not sure I'd really want to deal with wild dogs right now, with our present company.\"\n\nJessica caught his tone also. \n\n\"Don't worry about me.\" Jessica said. \"Wild dogs are wild dogs. I feel sorry for them but if they're dangerous then putting them down is probably the best thing for them.\"\n\n\"Right Jess,\" Josh said with a chuckle. \"I am concerned about your mental and emotional health too, but my immediate concern would be your physical. I think it'd be better if you were nowhere near wild dogs.\"\n\nJessica smiled as she urged Chestnut onto a trot. \"Don't worry Josh ... they'd have to catch me first.\"\n\n\"This is beautiful! You have beautiful land!\" Jessica said as they pulled up at the top of a hill that overlooked a huge valley. They'd been riding for about an hour, Jessica setting the pace at a canter.\n\n\"Thanks,\" they said in unison. They were impressed with Jessica. She hadn't exaggerated her skills in any way. And she looked even more beautiful on a horse, hair flying, managing Chestnut so confidently.\n\n\"Is that a river down there?\" she asked.\n\n\"Yup,\" Scott answered. \"It flows into a ravine. It's great for swimming on hot summer days.\"\n\nAs they spoke, Chestnut stepped from side to side snorting.\n\n\"Whoa Chestnut,\" Scott said, \"what the heck is her problem?\"\n\n\"She's antsy, she wants to run.\"  Jessica replied reaching down and patting her neck.\n\n\"Run!\" Jim exclaimed, \"What the hell have we been doing for the past hour?\"\n\n\n\n\"That was by no means running,\" Jessica said with a laugh.\n\n\"Really?\" Josh said his voice sounding petulant, even to himself. \"Then what, pray tell, is running?\" \n\nHe regretted it the moment the words left his mouth. Jessica sat up straighter on Chestnut and a look of determination settled onto her face. \n\n\"We'll race you to the river ... last one there is a dirty, rotten egg!\"\n\n\"Jessica!\" All three men yelled at the same time, but it was too late. Jessica had spurred the all too accommodating Chestnut on and was flying at break neck speed toward the river.\n\n\"Holy shit!\" Scott cursed as he and the other men urged their horses after her. She was going so fast ... too fast. \n\n\"Jessica stop! Stop!\" They took turns yelling but there was no way she'd hear them. \n\nDespite the horror of the moment Scott couldn't help notice that Jessica's body had taken on the riding position of a horse jockey ... as much as she could on a western saddle. And she was going so fast! Even though the men were urging their horses on, the gap between them and her kept widening.\n\n\"Is she making a run for it?\" Josh asked suddenly, fear coursing through him.\n\n\"No,\" Jim said but there was no conviction behind it. \n\n\"She has to stop at the river,\" Scott added. \"she's not going anywhere.\"\n\n\"How can she go so fucking fast?\" Josh asked as she pulled even further ahead of them. Chestnut looked like her legs were barely touching the ground.\n\n\"She has no fear ... \" Jim answered with awe.\n\n\"Or she thinks she's going to get away.\" Scott said. And the horror of the possibility became more real as Jessica approached the river. It wasn't a huge river but wide and wild enough that a person and horse would have to slow down and carefully make their way across it. But Jessica wasn't slowing down.\n\n\"What the ...\" Josh began as it appeared that Jessica was actually urging Chestnut on, making her go faster.\n\n\"She wouldn't ...\" Scott said a horrible thought beginning to form. \"She's not crazy enough to try and ...\"\n\n\"Jump?\" Jim finished Scott's sentence as Jessica and Chestnut launched into the air and sailed over the river. \n\nThe men let out a collective sigh when Jessica and Chestnut landed safely on the other side. They had made it to the river and stood watching Jessica continue to ride away.\n\n\"She's not stopping ...\" Scott said. But then Jessica looked over her shoulder. She turned Chestnut in a wide arc and raced back toward the river.\n\n\"Oh no ...\" Josh growled as he realized her intention.\n\n\"No! Stop Jessica, stop!\" Jim yelled as horse and rider picked up speed near the river. All three men fell silent and watched in slack jawed awe as Jessica and Chestnut sailed back over the river. Jessica guided Chestnut in another large circle and slowed her to a trot as she headed back to the men.\n\n\"Did you see that?\" Jessica exclaimed while petting Chestnut's neck, \"Isn't she great?\"\n\n\"Great!\" Josh growled. \n\nScott grabbed Jessica's reins and pulled her closer. He stared into her face, unsure what to say or do. He couldn't decide if he was angry with her or impressed by her. \n\nAs he watched the excitement on her face, in her eyes, the way she looked at him so innocently as if she had no clue what she'd just put him through, the urge to dominate her swept over him like a tidal wave. But Jessica was too preoccupied to notice.\n\n\"Do you know what we should do?\" She was asking in a breathless and excited voice.\n\n\"No ...\" Josh replied through clenched teeth, \"what?\" \n\nBut Scott knew, knew exactly what he wanted to do. But he couldn't do it here.\n\n\"We should time the horses.\" She answered Josh, but then swung her gaze to Scott. \"Chestnut is amazingly fast, I bet you the others are too. Ebony will be like a rocket I'm sure ...\"\n\n\"Don't even consider bringing Ebony into this ...\" Scott growled. \n\nShe was 100% certifiable. What were the chances that Jim and Josh would let him take her to his room right now? He began forming what he hoped would be a convincing argument to not only convince Jim to switch his night with him but also allow him to fuck her brains out during the day, right now.\n\n\"Unbelievable!\" Jim suddenly exclaimed and his tone even caught through Scott's growing urges and got his attention. Everyone looked at him. He was staring at Jessica with the strangest expression on his face. \n\n\"You just live, don't you? You don't even consider the possible dangers involved in anything ... you don't even care. You just do it?\" Jim was excited. He finally understood Jessica. There was no intent behind anything she did. She wasn't planning and scheming at every moment. She just seized whatever opportunities came along. It was all so clear now.\n\n\"I guess ...\" she said when all the men's eyes landed on her and waited. She honestly didn't know what Jim was talking about but somehow his words seemed to mean something to Josh and Scott. They seemed to be relaxing.\n\n\"Just what kind of horseback riding did you used to do?\" Jim asked realizing that this wouldn't be a trait that just developed. It had to be with her from the beginning.\n\n\"Racing, jumping, barrel racing, rodeo ...\" Jessica rhymed off nonchalantly.\n\n\"Your ... parents ... \" Scott nearly choked on the words, \"would let you do these things?\" \n\n\"Of course,\" Jessica replied. \"they never said no to anything. They believed anything and everything was possible.\"\n\nSilence hung in the air as the men absorbed this. Jessica was still smiling at them. She'd answered in a tone that implied it was a matter of fact. No sadness, no anger, no regret.\n\n\"That explains a lot.\" Josh mumbled. Jessica clearly wasn't used to being told no, or what she could or could not do. They'd lost before they'd even begun.\n\n\"So,\" Jessica said, excitement bubbling inside her, \"there's a perfect straightaway right there.\" She said pointing behind them, \"we can run the horses flat out and time them!\"\n\n\"Maybe you can run them flat out,\" Jim said, \"but I sure can't.\"\n\n\"You don't have to,\" Jessica said, \"I can run the horse that's being timed ... but it helps if you ride too, give the horse someone to race. We can start with Chestnut ... Josh will you race too?\"\n\nJosh looked at Scott. Scott shrugged. He didn't really know what to do. \n\n\"Okay,\" Josh replied.\n\n\"So we should start over here,\" Jessica said beginning to move away. \n\nScott let Chestnut's reigns go ... he was lost. \n\n\"Line up here.\" She was telling Jim and Josh. \"And we'll race to that clump of trees. And Scott, you have your watch right? You can time Chestnut. Then we can switch horses and we'll time the others. You can use your rifle as the starting pistol.\"\n\nScott didn't know how Jim and Josh felt, but he felt like he was in a daze. Obediently he pulled his rifle out as Jessica, Jim and Josh spaced themselves out along the imaginary start line. They looked at Scott. As if on autopilot he fired the gun into the air, and the horses took off. Jessica and Chestnut broke out ahead at what seemed to be an impossible speed. When Jessica pulled up at the trees Scott pressed stop on his watch. He looked at the numbers on the watch and his mind had trouble grasping their meaning.\n\n\"How'd she do?\" Jessica asked as she came to join him.\n\n\"Unbelievable,\" Scott whispered. Jessica smiled.\n\n\"How do you stay on the flipping horse?\" Josh asked. He had pushed his horse as fast as he dared ... to the point at which he actually felt fear, and Jessica still blew him away.\n\n\"You just have to get in rhythm with the horse ... \" Jessica said as if it were the easiest thing in the world to do. \"Okay, now switch with me ...\" she said swinging off of Chestnut and moving toward Josh.\n\nJosh pulled his rifle from its holder and swung off of Tanner, his horse.\n\n\"Do you want to run this one?\" he asked Scott. \n\nScott shook his head. \n\n\"Didn't think so.\" Josh mumbled as he climbed on Chestnut. Jessica was already guiding Tanner to the start line. Scott fired the rifle into the air again and the horses flew off the mark. Scott gasped for breath as he pressed stop on his watch ... another unbelievable time. \n\n\n\nHours later Jessica was clanking around the kitchen preparing dinner. The men sat in the living room watching her. They'd run the horses over and over again. Times improving with each run. \n\n\"My ass hurts.\" Josh stated as he brought the beer he'd been nursing to his lips. \n\n\"Mine too,\" Jim replied.\n\n\"Do you think hers does?\" Josh asked nodding toward Jessica.\n\n\"How can it not?\" Jim asked.\n\nScott suddenly sat forward. \"Jessica,\" he called. She peeked over at him. \"How's your ass?\"\n\nJessica looked back at her butt and then back at Scott, confusion evident on her face.\n\n\"Is it sore?\" Jim clarified with a laugh.\n\n\"No,\" she replied.\n\n\"I want to play euchre again tonight.\" Scott said, her answer being enough for him. No sore ass meant plenty of action was possible. His urge to dominate Jessica had not subsided throughout the day. He had to win tonight with her. Since she wasn't sore after the riding there'd be nothing to interfere with the multiple orgasms he intended to give her.\n\n\"Sure,\" Jim said catching the drift of what Scott wanted.\n\n\"Just remember that Jessica has a habit of winning.\" Josh said also understanding what Scott was after.",
        "\"She has to lose some time.\" Scott said. \n\nJosh shook his head. He hoped Scott was wrong. He didn't want to lose his night with her.\n\n\n\nScott closed the bedroom door behind him. Jessica was toweling off by his bed. He had played euchre as if he were playing for his very life. He was so relieved when he and Jim had won. And then even more relieved when he had won the straw draw that determined who between he and Jim had their night with Jessica that night. He'd been so eager to get Jessica to his room that he'd even convinced Jim and Josh to wait for tomorrow to hear Jessica's secret. She'd been unable to think of a secret initially and he didn't have the patience to wait.\n\n\"Don't bother.\" Scott said as Jessica had reached for her pajamas. Jessica turned to face Scott, the towel wrapped around her.\n\n\"Your horses are great Scott!\" She said clearly unable to get the day of riding out of her head. \"Are you going to race them?\"\n\n\"I don't know,\" Scott said moving up to her and running his hands over her towel covered breasts. \"But I'm not thinking about that right now.\" \n\nJessica clued in to the tone of Scott's voice and the look on his face and pleasure shot through her. \n\n\"You know ... you broke a promise today.\" Scott said, squeezing her breast a little over the towel. Jessica looked stunned.\n\n\"I did? I don't remember ... I didn't mean to ... sorry.\" She said as Scott pulled the towel open and let it fall to the floor.\n\n\"Oh, that's okay.\" Scott said, his voice husky. \"Now I get to break a promise too.\" \n\nA chill and then a wave of pleasure ran through Jessica at Scott's words. Something in Scott's tone made her think she should be concerned ... but somehow it turned her on. In a fluid motion Scott scooped Jessica into his arms and placed her on the bed. Then he reached under his bed and pulled out a plastic bag.\n\n\"You see,\" he began, \"I promised never to use those handcuffs on you again.\" He nodded his head to the handcuffs that hung on his headboard. \"But I'm going to. You don't have a choice about that. But you do have a choice about which toy I'm going to use on you.\" He said dumping an assortment of vibrators onto the bed in front of Jessica. \n\n\"Which one do you want? \" he asked lifting one at a time. \n\nJessica looked at them. They'd used a few before ... She personally preferred the ones that worked on her clitoris only, that didn't penetrate her. \n\n\"Look,\" Scott said lifting a long thin one up, \"this is for the anus. What do you think? Hours of stimulation in your ass? That could be fun.\"\n\nJessica shook her head forcefully.\n\n\"No, no, not that,\" Jessica said quickly. \"I'll take that one.\" She pointed to the vibrator that looked like a microphone.\n\n\"Very well.\" Scott said and dumped the others back in the bag. \"Now, shackle yourself with the handcuffs.\" He ordered.\n\nJessica hesitated but only for a moment. Scott had a strange look on his face and Jessica wasn't sure if this was going to be good for her or bad. She got up on her knees and nervously snapped her right wrist into the handcuff. Then sitting, her back against the head board she managed to use her shackled hand to close the handcuff on her left hand.\n\n\"What promise did I break?\" she asked as Scott double checked the handcuffs, tightening them.\n\n\"You promised to not do anything that could get you hurt.\" Scott replied, his voice so low, so calm, so husky that he practically purred. He sat down on the bed in front of her.\n\n\"But I didn't get hurt ...\" Jessica said.\n\n\"That's true ...\" Scott said running his hand down her leg, to her ankle. He ran his free hand behind Jessica's waist and pulled her forward on the bed, laying her down. With the other he raised her ankle to his lips. \"But you did many, many, things that could have gotten you hurt. You broke your promise.\"\n\n\"But ...\"\n\n\"But nothing Jessica.\" He said beginning to raise her leg toward her head, \"I hope you're as flexible as I think you are ...\" he said pushing her leg between two of the vertical bars on his headboard. \n\nJessica gasped as he pulled her leg around a bar until it sat neatly behind her knee, her calf and foot sticking straight out from the headboard.\n\n\"Now the other one ...\" he muttered as he did the same with the other leg. \"Perfect!\" he muttered sitting back on his haunches, looking at Jessica. \n\nHer legs were wide open, the lips of her pussy pulled open exposing her meat. \n\n\"Let's arrange your breasts a little.\" He said fluffing them like they were pillows.\n\n\"I'll need access to them too. Now,\" he said turning the vibrator on. \"I'm going to teach you a little lesson about listening. Do you recall us telling you to stop when you took off for the river?\"\n\n\"No ... \"Jessica said, \"I didn't hear you!\"\n\n\"And, do you think if you had heard us ...\" Scott asked, placing the vibrator on her clitoris, \"that you would have listened? Be careful Jessica ..\" he added as she opened her mouth to answer. \"Be honest ... I think we both know what the truth is ... would you have listened?\"\n\n\"No ...\" Jessica panted as the vibrator did its job and pleasure began to mount.\n\n\"I didn't think so. You need a lesson in obedience.\" Scott said, his voice thick with lust. \"Does it feel good Jessica? Do you feel like you will orgasm any moment now?\"\n\nJessica was nodding her head. Scott took her nipple in the fingers of her left hand and pulled gently but firmly. \n\n\"Well, don't. I'm not giving you permission to cum yet. \" He said with a smile. \n\nJessica shook her head.\n\n\"I won't be able to stop!\" She gasped. \n\n\"Well, that would be too bad ...\" Scott muttered, leaving her breast and inserting his fingers into her vagina. Pressing deep, finding her G spot and pressing rhythmically. \n\n\"See you have three chances. Three chances to hold off on orgasm when I tell you to, or reach orgasm when I tell you to. If you blow those three chances, I will be using the anal vibrator on you.\" \n\nHe smiled when Jessica's eyes widened. \"But it won't be the nice skinny vibrator ... It'll be the nice big, fat, thick one. I may not even put lubricant ...\" his voice trailed off as Jessica's vagina pulsated and liquid gushed out ... Jessica's head lolled from side to side, pleasure shooting through her.\n\n\"I guess that was chance number one,\" he said quietly as Jessica began to calm and turned her eyes to him. He left the vibrator in place, continued to pulsate on her G spot with his fingers, and her legs began to twitch. \n\n\"Does it feel pleasurable?\" he asked as Jessica closed her eyes. \n\n\"Not really,\" she replied. In a way it did, but her clitoris was too sensitive now. Every jerk of her legs represented a strange pleasure yet discomfort.\n\n\"Then, this is a good time for chance number two. You have thirty seconds to cum Jessica. And not a little orgasm but a gusher again ... and before I begin to count let me tell you what will happen once you fail your three chances, and you will. Once I'm done with the anal vibrator, we will return to this vibrator for the rest of the night. It will be on you all night, and you can practice cumming and not cumming on command. Ready now?\" He asked. \n\nJessica shook her head but he began to count anyway.\n\n\"One ...\" he said, removing his fingers from her vagina ... no need to give extra assistance. Instead he placed his thumb on the entrance of her anus and applied a gentle pressure. \"Two ... this is where the King Kong Dong of the anal vibrator world will enter ...\" he said. \n\n\"Please Scott ...\" Jessica gasped ... \"I can't ...\"\n\n\"Three ... oh you can, if you actually try to obey ...\" Scott said, pressing more firmly on her anus. He watched her face as he counted. She was concentrating so hard, trying so hard to reach orgasm. Suddenly his already stiff penis began to throb. He raised himself slightly.\n\n\"Open your mouth Jessica!\" he said. She complied and he exploded, streams of his semen landing in her mouth, and on her face.\n\n\"Twenty-five ...\" he gasped ... the semen on Jessica's face almost brought him to orgasm again.\n\n\"I can't ...\" Jessica said, her legs twitching so hard Scott wondered if she could possibly break his headboard.\n\n\"Thirty ...\" he said. He tisked, shaking his head.  There was no gushing so she clearly had not cum.\n\n\"Please, Scott, it's starting now ...\" Jessica said as her legs stopped twitching and she arched her back.\n\n\"How fortunate ...\" Scott said, \"just in time for chance number three. Don't orgasm Jessica. Don't you fucking do it until I say you can ...\" He inserted his fingers in her vagina again and tapped. He brought his face to her pussy and inhaled. \n\n\"You smell so good!\" he sighed and licked the meat that was not directly under the vibrator.\n\n\"No Scott ... it's not fair! Please!\" But he'd had her taste now and couldn't stop. Wave upon wave of pleasure rocked Jessica and liquid squirted our all over Scott. As Jessica's legs began to twitch, Scott turned off the vibrator. \n\n\"I'd say that was a very big orgasm ...\" he said wiping his face with his hand. He reached into the plastic bag he'd pushed behind him and pulled out a large vibrator. \n\n\"Jessica, say hello to Dong ... King Kong Dong.\"\n\n\"No ...\" Jessica whispered.\n\n\"Yes ... but don't worry I will use some lubricant. I can show some mercy even if you can't obey properly.\"\n\n\"Scott ... please I'm not purposely not listening, I can't control it ...\"\n\nScott watched her face as he slowly and deliberately rubbed lubricant onto the large toy.\n\n\"You just need some practice Jessica,\" he said bringing the vibrator to her anus. \"You can begin now. Lift your butt Jessica. It'll be easier for you if I have some more direct access ... that's it ... \" he muttered as she'd tilted her bum up for him.\n\n**************************************************************\n\n\"Morning,\" Jim greeted Jessica when she and Scott emerged into the living room the next morning.\n\n\"Morning,\" Jessica said going to Jim and then Josh for a kiss.\n\n\"You look tired,\" Josh commented as he pushed her back and looked at her face. A slight shade of pink developed on her cheeks as she smiled.\n\n\"I'm fine. Have you eaten yet?\"\n\n\"No,\" Josh said confused by something in her demeanor ... she wasn't looking him in the eye.\n\n\"I'll make some eggs,\" she said and moved off to the kitchen. \n\nBoth Jim and Josh looked over at Scott. He was watching Jessica and there was something odd in his expression also.\n\n\"Is she okay?\" Jim asked Scott. Scott pulled his eyes from Jessica and looked at Jim and Josh, something like guilt in his eyes.\n\n\"I think so,\" Scott swung his eyes back to Jessica. Guilt nagged at him. He had gone too far last night. She hadn't wanted the anal vibrator, but she eventually seemed to enjoy it. But then after ... he'd gone way too far with the other vibrator. She'd taken it for hours without a peep but then when she'd finally asked him to stop, he hadn't. He couldn't. He was ... addicted. Addicted to her smell, her taste, the look on her face as her legs twitched. He zoned out. It wasn't until the sun began coming up that he'd finally realized what he'd done ... how long he'd done it. He turned off the vibrator, untangled her legs and uncuffed her. She was so tired that she simply turned on her side and went to sleep. He was exhausted also and didn't think much of it until they'd woken up. She'd asked him about the horses again ... what he planned to do ... but he had no clue and when he told her that she lowered her eyes and wouldn't look him in the eye again.\n\n\"Did you have sex all night again?\" Josh demanded.\n\n\"Something like that ...\" Scott said and got up, moving to the kitchen. He came up behind Jessica and placed his hand on her shoulder.\n\nJessica jumped. She was a bundle of nerves. Scott's administration of the vibrator had wore her raw ... but in a good way. Despite having more than enough of it, there was a yearning that still lingered between her legs. But she hadn't heard Scott coming, and her whole body felt raw and particularly sensitive to any touch.\n\n\"Sorry,\" Scott mumbled. \"Are you okay?\" he asked, rubbing her arms with his hands.\n\n\"Sure, I'm fine,\" Jessica said without looking him in the eye. She was deeply disappointed with him. They had proven that his dream was possible yesterday, and he had no plans to do anything about it. It was so unfair. There was so much that she wanted to do and couldn't, and here was his opportunity to live his dream and he wasn't going to take it. \n\nHe dropped his hand to her bum and rubbed it gently.\n\n\"Are you okay down here?\" he asked. Guilt choked his voice. This brought her eyes to his.\n\n\"Fine. I'm fine.\" She replied. \n\nShe'd been surprised at how much pleasure she could actually have there. Once the initial terror had subsided, pleasure had rocked her. \"Do you want one egg or two?\"\n\n\"Two ...\" he answered not overly placated by her response.\n\n\"Hey Jess,\" Jim said from the dining room, \"Scott has to go into town today, but we could go riding again ...\"\n\nDamn! Scott forgot about his appointment in town.\n\n\"I'm not going.\" Scott said without thinking it through.\n\n\"What?\" Jim and Josh asked in unison. \n\n\"I'm going to call and reschedule. It won't be a problem.\"\n\n\"How are you going to call? Riley and Angus took the cell phone.\" Josh said.\n\nScott hesitated. That did pose a problem.\n\n\"I'll just go to the corner store ... call from there. I'll be back in half an hour tops. But ummm, would you mind waiting for me to get back to go riding? I'd like to go too.\"  It was irrational and selfish for sure, but he couldn't stand the thought of her riding with Jim and Josh without him.\n\n\"Okay, fine, we can wait.\" Jim said.\n\n\"Have you thought of a secret to tell us yet?\" Josh asked, overly casually. He'd been a little miffed that Scott had dragged Jessica off before she'd shared. Jessica got that deer in the headlights look again. Scott was thankful that he hadn't thought of forcing it out of her last night. He would've felt even more like a heel.\n\n\"Not yet.\" Jessica said, \"Breakfast is ready ...\"\n\n\"You know, anything personal would do,\" Jim said as he took his seat at the table.\n\n\"Eggs?\" Jessica replied, holding the frying pan over his plate.\n\n\"I think she needs more time.\" Scott said. \"To think about it!\" he added when both Jim and Josh looked at him like they wanted to strangle him. \n\n\"I'm sure you'll think of something by tonight.\" Josh added and dug into his food.\n\nDespite the fact that Jessica shuffled in her seat all through breakfast, crossing, uncrossing, re-crossing her legs in an attempt to get comfortable, Scott managed to finish his meal without completely feeling like dirt. He wanted to promise himself, and Jessica, that there wouldn't be a repeat of what happened the previous night, but he knew he couldn't. Knowing Jessica, she would inevitably do something that would make him want to dominate her again. He would just have to find some way to make it up to her.\n\n\"I'll be back soon,\" Scott said placing a kiss on Jessica's lips and then running out the door. The tires of the car spewed gravel as he raced out of the driveway.\n\n\"If he doesn't wrap himself around a pole first ...\" Josh mumbled.\n\n\"A pole?\" Jessica asked, concern etched on her face.\n\n\"I'm just joking,\" Josh said but he was glad to see that she cared about Scott's health. Maybe she cared about his too.\n\n\n\nScott drove back to the house as fast as he could. He'd made his call, and then wavered about whether he should go into town anyway and pick something up for Jessica. Something special to try to apologize for the previous night. \n\nBut he couldn't for the life of him think of what to get her. Instead he finally decided that he'd have to make it up to her some other way. Decision made, he wanted to get back to the house, to Jessica, as quickly as possible. What, he wondered as he screeched into the driveway and slammed on the brakes, were the chances that he could win euchre and the straw draw tonight again? Near impossible he acknowledged as he slammed the car door and moved toward the barn. He wondered what Jim and Josh had been doing with Jessica while he was gone. He rounded the barn and stopped short. Jessica and Josh were shoving one another, turning in circles and laughing while they fought over a soccer ball. Jim stood between two poles of the corral fences, shuffling back and forth between the poles keeping his eyes on the ball.\n\n\"Don't let her through Josh!\" he was saying, \"She's a ringer!  Not that great at soccer my ass!\" \n\nJust then Jessica managed to break away from Josh, dribble the ball toward Jim and shoot the ball past him between the posts.\n\n\"Damn it!\" Jim cursed but then broke into a laugh. He spotted Scott. \"She scored ten goals on us!\"\n\n\"Really?\" Scott asked. \"Where'd you find the ball?\" \n\nThey hadn't played soccer in so long ... not since Jessica had come here. He'd forgotten about it entirely, but now, especially having seen Jessica playing, he missed it.\n\n\"Jess found it in the loft,\" Josh said. \n\n\"Do you want to play?\" Jessica asked. But as soon as Scott's eyes fell on her, her cheeks turned pink and she shifted her eyes from his. Every time she looked at him, her privates continued to tingled. \n\n\"Sure.\" \n\nJim moved out of nets, Scott took his place and Josh moved into the barn doorway which was going to serve as his and Jessica's net. What seemed like minutes, but turned out to be an hour later, the game was tied up.\n\n\"Hey, it's lunch time.\" Josh said, looking at his watch. \"Do you want to go for lunch?\"\n\n\"I'm not really hungry.\" Jessica said, eyeing the barn.\n\n\"Want to go for a ride?\" Scott asked with a chuckle. Jessica nodded with excitement.\n\n\"I don't believe it!\" Josh muttered later that night. \n\nThey had timed another four horses that afternoon, come home for dinner, and played euchre. Somehow Scott and Jim had won euchre again, and Scott had won the straw draw.  Jim was looking less than impressed also. Scott didn't care. All that had fazed him was Jessica's reaction. She had sighed, as if resigned to some less than enthralling fate. Suddenly he knew how he'd make things up to her. Tit for tat ... he'd let her dominate him. He shuddered at the thought. Partially from the anticipation of pleasure, partially from fear of the unknown.\n\n\"Fine, you won fair and square.\" Jim said, \"But no way are you leaving this room until Jessica tells us two personal things about her. Jess?\"\n\nThey all looked at Jessica and she looked like she wanted to find a rock to crawl under.\n\n\"Just relax Jess.\" Jim said. \"Relax and tell us something about you that we don't know.\"\n\nSilence ensued as Jessica looked even more stressed. Suddenly Jessica's head snapped to the radio. It has just started playing a song with a really good beat to it.\n\n\"I can play that song.\" Jessica said.\n\n\"That song?\" Jim asked. \"On what?\"\n\n\"On your guitar.\" \n\n\"My guitar? Since when can you play guitar?\" Jim demanded.\n\n\"I've played since I was little.\" She replied. Jim sat gaping at her. \n\n\"All this time. All this time that I have been playing for you, you could play guitar too?\"\n\nJessica nodded.\n\n\"Why wouldn't you tell me?\" Jim asked and there was little doubt that his feelings were hurt.\n\n\"I didn't think it was important.\" Jessica replied. She looked confused by Jim's reaction. \"And you never asked.\"\n\n\"And this is a brand new song,\" Scott added. \"There's no way you could have learned it before ... before you came here.\"\n\n\"I play by ear.\" Jessica said. \"I can read music, but I mostly play by ear. Bring me your guitar Jim, I'll prove it to you.\"\n\nJim went to his room and got his guitar. He handed it to Jessica almost afraid to see her play. All this time and never once had she told him she could. Jessica strummed the guitar, and then began to play the song from the radio almost perfectly ... singing the song also. She looked so happy, so enthralled. Jim felt like she'd plunged a knife into his chest and twisted it. When she finished the men sat gaping at her. ",
        "\"That was Avril Lavigne,\" Jessica said more to Jim then to the others. He and she had watched her videos on his TV numerous times.\n\n\"I know.\" Jim said, \"You sounded exactly like her.\"\n\n\"Play something else.\" Josh encouraged. He didn't have to ask twice. Jessica launched into another song. When she was done, she suddenly sat up straight.\n\n\"I've got an idea!\" she exclaimed in an excited voice. \"Scott, Josh, do either of you play any instruments?\"\n\nScott shrugged, \"I can sort of play the drums.\"\n\n\"I can sort of play the piano.\" Josh added.\n\n\"Perfect!\" she said clapping her hands. \"Let's make a band! I can help you guys when you need it and we can practice some songs!\"\n\n\"Whoa ...\" Scott said, not sure he'd heard properly. \"Did you just say you could help us with drums and piano? Just how many instruments do you play?\"\n\n\"Three.\" Jessica replied.\n\n\"Guitar, piano and drum?\" Jim asked. Jessica nodded.\n\n\"We'll have to buy some drums and a keyboard ... but where would we keep them so Riley and Angus don't ask questions?\" Josh asked. He liked the idea of playing as a band, but the practicality of it was hard to imagine working.\n\n\"In your rooms.\" Jim said. After all, it worked for him and the TV.\n\n\"Okay ...\" Scott said almost afraid to ask the next question. \"So what other private thing do you have to tell us? What else are you excellent at?\"\n\n\"Brain surgery?\" Jim asked quietly but regretted it when Jessica lowered her chin to her chest. \n\n\"I didn't mean it the way it sounded.\" Jim said. \"I actually think you are capable of brain surgery ... I didn't mean it as a put down.\"\n\nJessica shrugged. \n\n\"Come on Jess. You used to ride at a rodeo ... race horses, play instruments ... what else?\" Josh prompted.\n\n\"I used to be on the junior rifle team.\" She said. It seemed like something they'd be interested in ... far more interested than the gymnastics she'd done.\n\n\"Rifle team ... \" Scott repeated.\n\n\"Were you any good?\" Jim asked ... weaponry being one of his passions.\n\n\"Yes. \" Jessica replied. \"My team won the championship in our class for two years in a row.\"\n\n\"Well, I guess Jessica has held up her end of the deal.\" Scott said suddenly worried that someone would suggest that she prove her shooting skills to them as she had her musical. He couldn't take another delay in getting her to himself. \"Time for bed.\"\n\nJessica passed the guitar to Jim and then kissed him goodnight. And then she went to Josh to say good night. Scott took her hand and led her down the hallway to the bathroom for her shower. She seemed to be taking a really long time. Scott stood outside the door waiting. Just as he was about to knock on the door the shower turned off. In his room, Jessica stood by his bed drying herself. \n\n\"Can I put on my pajamas?\" she asked. \n\n\"Yes.\" \n\nJessica reached for her pajamas and Scott was fairly certain he'd heard a sigh of relief escape her. Dressed, Jessica crawled onto the bed, turned on her side, pulled her knees to her chest and looked at Scott. The way he was looking at her Jessica had the feeling she was in for another vibrator marathon. Before it got to that she thought she'd give him another try with the horses.  \n\n\"So ... any idea if you're going to race any of the horses?\" she asked.\n\n\"No, not yet.\" Scott answered. He was wondering if he could get away with another night of dominating Jessica, give her a chance another time. He really wanted to dominate her. He'd have to control himself better than he had the previous night ... but he could do it, he was certain of it. But then there was that look on her face again. Guilt washed over him as Jessica sighed and reached for her novel on the bedside table. \n\nSurely Scott wouldn't begrudge her some time reading a novel ... something not sex related, for a little while. Especially after the previous night. But then she felt Scott sit down next to her on the bed. She kept reading. Just half an hour, she was ready to beg for just half an hour to read.\n\n\"Jess.\" Scott said.\n\n\"Yes?\" she asked, not lowering her book.\n\n\"Can you look at me for a minute?\"\n\nJessica lowered her book, but just so her eyes peeked over the top.\n\n\"I know last night was ... a little over the top. But I want to give you a chance to do the same to me.\"\n\n\"You do?\" Jessica asked, forgetting about her book. \n\n\"Yup. You can do anything ... sexual, anything sexual to me that you want. You can even use the handcuffs if you want.\" He gulped as he looked at the handcuffs above his head. It still scared him to be so vulnerable to her. Jessica followed his gaze and was confused by the look on his face. She couldn't decide if it was terror on his face or excitement. But then she decided it had to be excitement. She could remember how much he enjoyed himself the previous night. Well, maybe he wanted to be vibrator tortured too. She had to admit that despite some of the discomfort at times it had been enjoyable and it must have been fun to be the one dishing it out.\n\n\"Okay,\" Jessica sat up, tossing her book onto the side table. \"I'm game. If you're sure.\"\n\nScott nodded. As long as she stuck to sex and not murder, he was okay. And nothing in her behavior over the past few days made him think she had violence in mind.\n\n\"Well then ... ummm.\" She was wondering what direction to go in. \n\n\"Take off your clothes ...\" she ordered and continued contemplating while she watched Scott strip down. Vibrators ... what could she do to Scott with a vibrator. And then it hit her. The perfect idea. She'd been surprised by how much she'd actually enjoyed the anal vibrator. And she'd read many times that it would be even more enjoyable for men. She nodded at the handcuffs when Scott lay back to look at her, his beautiful muscular nakedness staring at her ... tempting her. \"Shackle up ...\" She ordered. Scott nodded and got up to chain his one wrist to one of the handcuff. Then the other. He leaned back against the headboard of the bed ... trepidation flowing over him.\n\n\"Now. I need you in exactly the same position I was in last night.\" She said.\n\n\"What?\" Scott croaked, picturing her with her legs up around her head.  \"I don't bend like that Jess.\"\n\n\"You will, don't worry.\" Jessica said grabbing his right ankle.\n\n\"Jess, don't ... ahhh!\" he groaned as Jessica pulled his leg up by his head and threaded it between the bars of the headboard. And before he had time to protest, she pulled his other leg up also.\n\n\"Very good ...\" Jessica said looking down at him. And then she moved off the bed and reached under it.\n\n\"What are you doing Jess?\" Scott asked. He heard her root around under the bed and then she dropped the plastic bag on the bed.\n\n\"You know,\" she began, \"the wonderful thing about anal vibrators is that they work just as well for men as they do for women. I mean an asshole is an asshole, right?\" she asked smiling.\n\n\"Oh no Jess, you wouldn't ...\"\n\n\"In fact, I've read in the numerous books and magazines that you've given me, that anal stimulation is the best thing going for men.\" She leaned in closer to him, between his spread legs and gently brought her finger to his anus. \"That's where your G spot is after all ... in your anus.\"\n\n\"Jess ...\" \n\n\"Ah, ah, ah,\" Jessica said, slapping his testicles lightly.\n\n\"Hey!\" he protested.\n\n\"No arguing Scott, not a sound at all. You keep nice and quiet or I'll be forced to muzzle you. Now all of that literature states that many men are threatened by anal stimulation. They're afraid that if they enjoy it that may mean that they're gay. What about you Scott. Are you afraid it'll mean you're gay when you enjoy tonight?\"\n\n\"Jessica!\" Scott said sternly. This wasn't funny anymore. God he'd never imagined that she'd butt fuck him.\n\n\"Rules are rules Scott.\" She said as she brought his underwear toward his mouth. \n\nHe sealed his lips, but Jessica pinched his nose until he could hold his breath no longer and when he opened his mouth she shoved it in. Taking his shirt, she tied it around his mouth so he couldn't spit out the gag. He began to shake his head, mumbling a 'no' that no one could hear. Jessica grabbed his penis and began to stroke it firmly. And suddenly he felt something pressed against his anus.\n\n\"Now listen carefully Scott.\" She muttered as his penis stiffened and he began to arch with obvious pleasure. \"If you shake your head no again, I will shove this thing in your butt with no lubricant, no gentleness, no warm up. So all you're going to say from now on is yes. Got it? Got it!\" She demanded when Scott just looked at her. \n\nShe pressed the vibrator a little further and suddenly Scott was nodding frantically.\n\n\"Okay. Now, for lubricant ... that could be interesting. Normally I'd try to find that nice little bottle that you used for me last night ... but I think it may be more interesting if I jerk you off and then use your own semen as your lubricant. What do you think?\" \n\nShe squeezed his cock until he nodded.\n\nShe began to stroke. \n\n\"And Scott, when you come, you can't move, not a muscle ... except of course for your penis that'll have to move. But your head can't move, you legs, butt, nothing. If anything does, the vibrator goes in.\"\n\nShe stroked faster and hard, and suddenly Scott was closing his eyes ... but he couldn't help himself and he threw his head to one side and thrust up as his cock spewed semen. And when Jessica slid the vibrator into his anus, his body arched. She clicked the on button and began to move it back and forth. At first Scott froze in place but as Jessica slid the vibrator back and forth more rapidly, and her hand rubbed on his now slack penis, life began to return to it. Suddenly it all felt good, pleasure racked his body and his cock vibrated in Jessica's hand, trying to spit out semen that just wouldn't come. \n\nAnd then he collapsed on the bed. Jessica smiled and then removed the vibrator. She moved up and undid the handcuffs, and then untied his gag. She pulled his legs down from the headboard.\n\n\"Scott, are you okay?\" She asked as he lay still, panting. She took his face in her hands and caressed the cheeks. He nodded.\n\n\"That was the strangest sensation. Did I actually cum, without actually cumming?\" He asked.\n\n\"Neat isn't it? When your G spot gets stimulated you don't actually eject any semen.\"\n\n\"That's the weirdest shit I've ever seen.\" He said and he turned to wrap his arms around Jessica. \"So you got to chain me up and have your way with me. Now we're even.\"\n\n\"Even?\" Jessica asked sliding down to lay beside him.\n\n\"Yes. Can you forgive me now, for last night? For going too far?\" Scott asked looking up at her in earnest.\n\nJessica looked bewildered. \"Why would I have to forgive you?\"\n\n\"Last night. I'd gone overboard ... forced you to orgasm far too many times. I'm sure it hurt.\" He said running his hand down her body and laying it between legs, over her pants.\n\n\"Well, it was uncomfortable sometimes ... but for the most part I enjoyed it.\" \n\nScott did a double take.\n\n\"What?\" Jessica asked with a laugh when Scott lay staring at her.\n\n\"But you were mad. You were mad at me, I could tell.\"\n\n\"Well, yeah, I was mad at you, but not because of that.\"\n\n\"Let me get this straight. You were mad at me about something other than the overuse of the vibrator and use of anal vibrator against your consent?\"\n\n\"Yes.\" Jessica said. \n\nScott sat up.\n\n\"Why then, why were you mad at me?\"\n\n\"Because of the horses.\"\n\n\"Horses!\" Scott thundered. That was completely out of the blue. \n\nJessica jumped a little. \n\n\"Why would you be mad at me about the horses?\"\n\n\"Why not?\" Jessica asked, \"Now you're mad at me about the horses.\"\n\nScott caught himself before he spoke again. He forced himself the make his voice more gentle.\n\n\"I'm not mad, I'm just surprised. And I just let myself get anally raped to make something up to you that I didn't really need to ...\"\n\n\"You did all of this,\" Jessica said indicating the cuffs, vibrator and underwear, \"to try and make me happy about last night?\"\n\nScott nodded. \n\nJessica smiled.\n\n\"It's funny isn't it?\" Scott said.\n\n\"No. It's not funny. It's sweet.\" Jessica said and cuddled up to Scott. She kissed his lips and then settled her head onto his chest. \n\n\"It's one of the nicest things anyone has ever done for me. Thanks.\"\n\n\"You're welcome.\" Scott said bringing his arms around her. \"Ummm, don't get me wrong Jessica. To see you this happy I would allow myself to have a friggin' tree trunk shoved up my ass ...\" Jessica giggled, and it made Scott laugh too. \"But I am curious about what made you mad at me in the first place. What did it have to do with the horses?\" \n\n\"It has more to do with you really. You and your dream. Scott, you have the chance to make your dream come true. You've seen how fast the horses can run. Do it ... find someone to ride and go race them!\" \n\nJessica's voice was getting louder and more excited as she spoke and she ended-up on her knees, leaning over Scott. \"Don't you know? You can live your dream ... you have to do it. You just have to!\" She stopped talking but she was panting from the effort. \n\nScott lay staring at her. She was right of course. There was no excuse for not following through.\n\n\"Okay.\" Scott said. \"I'll do it. But it isn't going to be easy ... it can't happen overnight. I have to organize a few things first ... and then of course I have to work on Riley.\"\n\nJessica was nodding. \"But you'll do it, for sure?\"\n\n\"For sure.\" \n\nAnd Jessica beamed at him so much that he had to kiss her. \n\n\"And so, last night didn't make you angry at me in the least?\" Scott asked, running his hand on her arm.\n\nJessica hesitated. \"No ... \" she said slowly.\n\n\"But?\" Scott asked.\n\n\"But ... I'm not looking for a repeat too soon.\" Jessica said. \"It was pretty intense.\"\n\n\"And ...\" Scott said, his eyes flicking up to the novel sitting on the side table. \"I'm guessing you'd like a break from sex tonight. Read your book maybe?\"\n\nJessica looked at Scott in surprise. \"How'd you know?\" she asked.\n\n\"I'm the master of observation. You go ahead and read ... I'm going to clean-up.\"\n\n\"Thanks,\" Jessica said as he planted a kiss on her lips and then crawled out of the bed. \n\nScott picked up the book and looked at the cover. \"Gone with the Wind? Not very light reading.\" He said while handing her the book.\n\n\"It's pretty easy to get pulled into the book.\" Jessica said. \"It's even better than the movie.\" She and Jimmy had watched it before she'd started reading the book. It was a shame Scott and Josh didn't know about the TV, there were many shows and movies she was certain they would like to watch too. But it was Jimmy's secret to tell not hers. \n\n\"Well, enjoy.\" He said kissing her forehead and then heading out the bedroom door. \n\nJessica heard the bolt fall into place on the door and then she snuggled down in the bed and found her spot in the book. She was so involved in the story that she barely noticed Scott return. It wasn't until he'd been lying beside her for a while without moving that she glanced over at him. \n\nHe was beside her and reading a novel as well.\n\nJessica sat up and leaned forward to look at the front of the book.\n\n\"You're reading?\" she asked, astonished.\n\nScott lowered the book and chuckled. \"I do know how to read you know.\"\n\n\"I know. But it's not a sex book or magazine ... \".\n\nAt this Scott closed the book and looked at the cowboy astride a horse on the cover.\n\n\"I guess sex is all you really know about me ... \" \n\n\"Sex and horses,\" Jessica agreed falling back down on the bed.\n\n\"Those are mutually exclusive!\" Scott growled in a fake angry voice.\n\nJessica thought about it for a moment and then began laughing so hard she couldn't breathe.\n\n\"Alright, alright ...\" Scott said when the laughter wasn't dissipating. \"I think I know what you're picturing and I have to say that you have one sick mind!\" \n\nThat brought another wave of laughter from Jessica.\n\n\"You know ...\" Scott said when her laughter began to subside, \"I'm only with you one out of every five nights ... I do have other interests.\"\n\n\"So you like westerns?\" Jessica asked, nodding at the book.\n\n\"Westerns are my favorite. Sometimes I wish I'd been born in that time ... sometimes I feel like I should have been born in that time. Travel by horse, wild west ... I would love that.\"\n\n\"I can see you as a cowboy. Maybe you did live in that time ... maybe you've been re-incarnated. \" Jessica replied.\n\nScott did a double take. \"Do you believe in re-incarnation?\"\n\n\"I don't know.\" Jessica said with a shrug. \"But I sure hope it's true. It'd be pretty darn boring just lying in the ground ... being eaten by worms.\" \n\nJessica's voice had trailed off and Scott felt a sense of horror as he imagined Jessica picturing her family in the ground, worms feasting on them. \n\nHe shook his head to rid himself of the image.\n\n\"How about you?\" he said nodding at Jessica's book. \"Epic love stories your cup of tea?\"\n\n\"Not usually.\" Jessica replied. \"I like mysteries mostly. But love stories are up there.\"\n\n\"Hmmm. So is there a lot of sex in these love stories?\" \n\nJessica laughed. \"Surprisingly yes. But not quite as explicit as I think you'd like. Is there sex in the westerns?\"\n\n\"Actually, no.\" And Scott was surprised by the realization that he did actually enjoy something that was not centered around sex. \n\n\"So there's hope for you yet?\" Jessica asked with a chuckle.\n\n\"Yup.\" Scott said. \"But very little hope. If you actually intend to read some of that book tonight Jess, you'd better get to it. I'm starting to get distracted ... beginning to think about kissing you ...\"\n\n\"Got it,\" Jessica said and brought the book up, sinking back onto the bed. \n\nScott watched her for a few minutes. He really did want to go at it again, but that would really reinforce Jessica's image of him as a two dimensional guy. Sex and horses. Well, in truth that really did sum him up. But somehow that didn't feel satisfying. He was fairly certain that there was more to Jim and Josh .... Maybe even Riley and Angus. He forced his eyes back to his book. He'd get her in the morning.\n\n**************************************************************\n\n\"So?\" Josh asked Scott the next morning over breakfast. \"Wanna go into town? Buy a keyboard and a drum set?\"\n\nJessica's head had snapped up. Scott couldn't help but smile, and he soon saw Jim and Josh doing the same. She was so expressive ... now that she was more relaxed around them. She always seemed to have this enthusiasm that never waned. And it didn't seem reserved to just horses and music. Scott remembered how willing Jessica had been that morning. To have sex. It was as if she was the female version of himself. \n\n\"Really?\" Jessica asked, bouncing up and down in her chair. \"Can we really be a band?\"\n\n\"That's the plan.\" Josh said. \n\n\"I have some business to do in town too.\" Scott said, \" so it's perfect timing.\"\n\nJessica continued bouncing. Jim's smile faded as the feeling of betrayal surged again. He'd been awake all night trying to figure out why Jessica had kept her musical talents from him this whole time. Luckily Scott and Josh would be gone for a good portion of the day. This would be his time to figure it out.\n\n\"What'll you do while we're gone?\" Scott asked, hoping that they would not race the horses without him.\n\n\"Jim?\" Josh prompted when Jim seemed off in his own thoughts.\n\n\"Huh? Sorry?\" Jim muttered as his eyes shifted over to Jessica quickly. What possible explanation could she have? He wondered. There was none.\n\n\"... do while we're gone?\" Scott repeated his question.\n\n\"I'd planned on fixing the back fence today. I figured Jessica could help out.\"\n\nJessica was clapping her hands with joy at the prospect.\n\n\"So you won't time any more horses till we get back?\" Scott asked.\n\n\"No, no way. I can only handle that speed every other day. We'll be taking it nice and slow ...\" Jim said looking at Jessica and emphasizing the word slow, \"today. We'll meander down to the back field on the horses, that's it.\" Jessica didn't seem the least bit upset by this. She just kept bouncing up and down and clapping.",
        "Half an hour later Josh and Scott had left and Jim and Jessica were in the barn getting the horses saddled. Jessica was humming to herself as she worked. This was more than Jim could take. He moved around his horse, around Chestnut and took Jessica's elbow. \n\n\"Oh!\" she exclaimed, surprised first by Jim's sudden appearance, and then by his expression. \"Are you okay?\"\n\n\"No.\" Jim said and stood staring at her.\n\n\"Well, what's wrong?\" Jessica asked when it was obvious he wasn't going to say any more.\n\n\"Why? Why wouldn't you tell me that you could play the guitar ... or the piano or drums ... but for Christ sake Jessica ... the guitar? How many times did I play my guitar for you? Surely you could have said something?!\"\n\nJessica felt like the air had been knocked out of her. Jim looked so upset. Sounded so upset. And she knew her answer would only upset him more. \n\n\"Are you just going to pretend that you didn't hear my question?\" Jim asked. His voice hushed. He'd hoped that perhaps it had all been some misunderstanding ... some easily explainable oversight ... some explanation he just couldn't fathom. But Jessica's reaction made it clear that it wasn't.\n\n\"No.\" Jessica said in an equally hushed voice. \"If I told you that I thought that playing the guitar was your thing and I didn't want to steal your thunder, would you believe me?\"\n\n\"No.\"\n\n\"Well. It is partially true. It was your thing.\"\n\n\"But?\"\n\n\"But. I just didn't want you to know.\" There, she'd said it. \n\n\"Oh.\" \n\n\"That was a long time ago ... that I didn't want you to know.\" Jessica said moving into Jim's arms. She laid her head on his chest and wrapped her arms around him. \"Really. It's not the same anymore.\"\n\n\"It was just the other night that I played for you Jessica. You could have told me then.\" He said bringing his arms around her, unable to refrain from pulling her to him.\n\n\n\n\"I know.\" Jessica said leaning back to look at him. \"But by then I hadn't told you for so long that telling you would have been awkward. I don't know if that makes sense.\"\n\n\"Oddly,\" he said bringing his hands up to cup her face. \"It does make sense. I'm not sure how I would have reacted. But now I'm prepped. So, is there anything else that may be awkward for you to tell me? Now that I'm kind of ready for it?\" \n\n\"There probably is.\" Jessica said kissing the inside of his hand as it caressed her cheek. \"But I can't really think of it right now.\"\n\n\"But when you do, you'll tell me?\"\n\n\"Sure ...\" Jessica said hesitantly.\n\nJim sighed. \"That's not very convincing.\"\n\n\"Is it so bad if I have some things I just keep to myself?\" Jessica asked. \"I doubt you tell me everything about you ... everything ...\" she repeated with emphasis when Jim was about to argue.\n\n\"Okay. I haven't told you everything. What do you want to know?\"\n\n\"How many girlfriends have you had?\" Jessica asked, leaning away from him so she could see his face. Jimmy's lips curled into a slight smile. Had he detected a hint of jealousy in her voice?\n\n\"One.\" Jim answered. \"What?\" he demanded when she narrowed her eyes at him. \n\n\"Okay. One serious girlfriend.\" Jessica said, \" But how many girlfriends in total?\"\n\n\"I'm not trying to pull something on you here Jessica. I'm no Scott. I've had one girlfriend ... other than you.\" He snuck in and watched for a reaction. \n\nThat had caught her off guard. She stared at him for a moment, blinked, and then smiled.\n\n\"You consider me your girlfriend?\" she asked in a shy voice. \n\nWithout thought she reached up and started playing with the collar on his shirt.\n\n\"Much more than I considered my other girlfriend to be a girlfriend.\"\n\n\"What was her name?\" Jessica asked still focused on the buttons that were buttoned and needed absolutely no fixing. Jim tilted her chin up, until she was looking him in the eye.\n\n\"I don't remember.\"\n\n\"Oh come one!\" Jessica said with a laugh. \n\n\"Okay. Her name was Scarlet. She was my first and last real relationship, until now. And it in no way compares to how I feel about you. Not even close.\"\n\n\"So what happened?\" She asked, a large smile on her face and pink coloring her cheeks. \n\n\"To her?\" Jim asked. \n\nJessica nodded. \n\n\"Her family moved and she went with them. We weren't Romeo and Juliet, so it was fine.\"\n\n\"I guess she wasn't one of you?\" Jessica asked. \n\nShe felt Jim tense.  \n\n\"One of us?\" he asked quietly. \n\n\"Yes, you know ... one of your clan?\" \n\n\"She was ... one of us.\" Jim said. \n\nSomehow this conversation felt wrong. When they'd first brought Jessica here they'd spoken about their clan and other clans a lot. Part of the barrage of verbal and mental abuse they'd used ... explanations as to why her family had had to die. Why she had to be their prisoner. And there it was ... one of the many reasons this conversation felt wrong. He was in a \"relationship\" with his prisoner, could that ever really count as a real relationship?\n\n\"But her family moved?\" Jessica persisted. \n\nSuddenly Jim wished this conversation was not happening.  \"She was part of another clan ... and they moved.\" Jim's voice was getting quieter and he was desperately thinking of a way to redirect Jessica.\n\n\"I'd heard about that I guess. My parents did say your clans could change permutations ... but for the most part you stayed together, right? Jim?\" Jessica asked when Jim began to turn green. \n\n\"Your parents told you about us?\" he whispered. It felt so wrong ... so wrong!\n\n\"Of course.\" Jessica said. \"You were our mortal enemy. Do you really think my parents would leave us in the dark about you?\"\n\nJim just stared at her. \n\n\"But they had a few things wrong ...\" Jessica continued and Jim could tell that she was remembering something. She had a faraway look in her eye. \n\n\"They said the clan always stuck together. But you've separated from the clan, right? Riley and Angus go out with the rest of the clan. But we have nothing to do with them ... and they also said that you'd kill me as soon as you got the chance. I kept waiting ... but you never did.\" \n\nShe refocused. Jim wasn't sure what his face looked like, but it couldn't have been pretty because Jessica blanched.\n\n\"Jim? Are you okay?\" She brought her hands to his cheeks.\n\n\"No. No I'm not. I need a break from this conversation ...\"\n\n\"Okay.\" Jessica said and she seemed really confused, \"But I thought you were going to tell me everything about yourself.\"\n\n\"What else do you want to know?\" he asked.\n\n\"How many people have you killed?\" \n\nJim felt like he was going to hyperventilate. He pushed Jessica away and pressing his palms against Chestnut he leaned on the horse ... head between his arms.\n\n\" Jimmy, what's wrong with you?\" Jessica asked in alarm.\n\n\"What kinds of questions are you asking Jessica?\" he demanded. \"How can you ask these things so calmly ... like you're asking about the weather? What the hell is wrong with you?\"\n\n\"Nothing is wrong with me!\" Jessica replied. Jim whipped his head up to look at her. There was anger in her voice, but her face didn't reflect any hatred. \"You asked me what I wanted to know. This is what I want to know. And I thought you wanted to know things about me. Well, I'm telling you. So, what's wrong with you?\"\n\n\"I don't want you to know these things Jessica. I don't want you to know how many people I've killed. Can't I be the Jim that loves you, and never mind what I did before I met you?\"\n\n\"Sure.\" Jessica said, but her voice sounded less than enthused. \"We can do that.\" She was rubbing his back, comforting him. This was all wrong. Why was she ... the most innocent person Jim had ever known, going out of her way to spare his feelings ... comforting him because he didn't want to acknowledge the monster that he was.\n\n\"Thirty-five.\" He muttered.\n\n\"Pardon?\" Jessica said leaning in closer to him.\n\n\"Thirty-five.\" He said more loudly ... pushing away from Chestnut and towering over Jessica, staring down at her. \n\n\"I've killed thirty-five people in my life.\"\n\n\"That's a lot.\" Jessica said. \n\nJim nodded. \"That was all before you. Since you came here ... I haven't killed a single person. And, before you ask, I don't miss it.\"\n\n\"Jimmy ... I wouldn't ask ...\"\n\n\"I regret every single life I've taken Jessica. But I can't change the past. If I had to do the same thing again, I would try to find another way.\"\n\n\"My parents believed in justice Jim.\" Jessica said, moving closer to him, craning her neck so she could look in his face. \"They would try their hardest to bring people to court ... for trial and then prison. But if it didn't go that way ... if they ended-up dying in a gun fight or something ... they never beat themselves up about it. It was a war ... even as a kid I knew that. I just wish we could have been on the same side.\"\n\n\"What's going on?\" Josh demanded. Jim and Jessica jumped. They turned to see Josh and Scott, staring at them.\n\n\"I asked Jessica to be honest with me.\" Jim said. \"And she has been. Brutally. How come you guys are back so soon?\"\n\n\"It doesn't take long to buy a keyboard and a drum set.\" Josh said, staring at Jessica and taking a step closer. \"Just how was Jessica being brutally honest?\" He had locked his eyes on Jessica's, and he moved closer still. She stood sandwiched between Josh and Jim.\n\n\"She asked about previous girlfriends ... told me how her family had told her all about us and that she'd expected us to kill her right off, and then she asked me how many people I've killed. Made me feel better about the blood on my hands by letting me know her family had some on their hands too.\" Jim reported in a low monotone voice. He wondered how to go about suggesting Jessica for sainthood.\n\n\"Jesus Christ!\" Scott hissed from behind Josh.\n\n\"Like I said. Brutally honest. But I deserve it. I was pushing her to tell me her intimate thoughts, feelings ... here they are.\"\n\n\"Why does it matter how many people we've killed?\" Josh asked.\n\n\"Because.\" Jessica answered, she reached for his hand and pulled him closer. \"Because I haven't killed anyone. Ever. But I used to day dream about it. About being like my parents ... catching all of you ... putting you in prison. And I'd had my chance. There had been a gun in the car ... my Mom's. Right at my feet. I'd picked it up, and my brother had been yelling, 'shoot, shoot!' but I froze. I couldn't do it. And then, they were all dead.\" Jessica had closed her eyes, remembering the scene. And she stood now, in the silence, eyes closed. \n\nScott had pushed his way between Chestnut and the trio standing next to her, and he stood watching Jessica.\n\n\"And so you have regrets ...\" he said quietly.\n\nJessica shook her head and opened her eyes, turning them to Scott. \"No, actually I don't. I forgave myself for that a long time ago. And, I think my family forgave me too. Had I killed you ... even one of you ... I wouldn't know you now. I wouldn't get to be your girlfriend now. I have no regrets.\"\n\n\"Jessica, you are so far beyond being a girlfriend.\" Josh said. He felt an empty painful hole growing in his stomach. He could tell that Scott and Jim had it too, just by the pain etched into their expressions. Of all the things she'd said, the only thing he could seize on was the reference to being his girlfriend. Maybe the rest would just go away.\n\n\"I am?\"\n\n\"Shit yes.\" Scott agreed.\n\n\"You're a part of me Jessica.\" Josh said, taking her arm in his hand and squeezing. \"I'm pretty sure I can say the same for Jim and Scott. If I lost you ... it'd be like losing a piece of me.\" \n\nScott was nodding in agreement. Jessica looked over her shoulder at Jim and saw him doing the same. She suddenly realized that it was true for her also. She hadn't been apart from them in so long, she wasn't sure she could be.\n\n\"I guess you're more like a wife than a girlfriend.\" Scott said reflecting on the thought. He'd never considered having a wife. But right there, in that moment, it seemed right. \n\n\"I'm not sure about being a wife. I couldn't be your wife.\" Jessica said, shaking her head.\n\n\"Why not?\" Scott demanded. \n\n\"Well. For one thing, polygamy is illegal.\"\n\nSilence ensued. \n\n\"Jessica, \" Jim said quietly, \"we don't often conform to conventional rules. We have many polygamist marriages in the clans. And there are many countries in the world where polygamy is legal.\"\n\n\"Hmmm. I guess that's true.\" Jessica said. \"But I'm sure that those marriages are still based on equality. Where the husband and the wife are equals, where the wife is free to make her own decisions and have them honored. My parents were like that. My Dad never told my Mom what to do. He valued her opinion and followed her advice. That's what being a wife means to me ... so, I can't possibly be your wife.\"\n\n\"Jessica ...\" Scott said through gritted teeth. The urge to dominate her was flooding over him. \n\n\"Jessica,\" Josh interrupted as Scott choked on his words. \"You need protection from yourself most of the time. It's hard to be equal when left to your own devices, you'd break your fucking neck!\" And he couldn't help but wonder if it had been her mother's same inherited stubborn streak that had led to the demise of her family. But he caught himself before he said so.\n\n\"Guys!\" Jessica said raising her hands as if in surrender. \"I never said I didn't want to be your wife.\" She looked quickly at Scott who seemed to be getting himself under control, Josh whose grasp on her forearm kept tightening, and then over her shoulder at Jim who looked like he was being washed down a river without so much as a life jacket to hold on to. \"I just said that I couldn't be a real wife until we were equals. Maybe marriage just isn't the right institution for our situation ... that's all.\"\n\n\"So, what in your humble, unequal opinion, would be the right institution for us?\" Josh demanded.\n\n\"I don't know.\" She said with a smile and a shrug. She said it so cheerfully, lightly. \"But it doesn't matter. Maybe we're making our own institution. We love each other, that's all that matters, right?\"\n\n\"Whoa, whoa!\" Scott said.\n\n\"Can you repeat that?\" Jim asked, stepping forward and taking her other arm, \"That love part?\" All the clouds seemed to have evaporated from his face and he had a huge smile plastered on his face.\n\n\"Jessica ... don't go using the L word unless you mean it.\" Josh said.\n\n\"But, I do mean it.\" Jessica said, suddenly realizing that she really did. She really loved them. That would be difficult to ignore when she avenged her parents ... some time, somehow.\n\n\"You what?\" Scott demanded.  \"Listen Jessica ... you'd better not be playing around with us. You know part of the reason we can't treat you as an equal is because you are always looking for some way to run away ... or kill us. And stooping to using the L word ... that's just lower than low.\" \n\n\"But I don't want to run away ... I definitely don't want to kill you, and I do love you.\" Jessica said.\n\n\"But,\" Jim said, \"you won't marry us.\"\n\n\"No. Not with the way things are with us.\"\n\n\"You don't want to runaway ... \" Josh said. \"Since when?\"\n\n\"It hasn't been long.\" Jessica admitted. \"A few weeks.\"\n\n\"Ahuh. And what exactly changed your mind?\" Scott asked.\n\nJessica shrugged. \"You've been a lot nicer to me.\" She began and took Scott's hand. \"I've been ... enjoying myself a lot more ...\" \n\nShe looked at Josh and Jim. \"And besides, my family is dead. Where would I be running to?\" \n\n\"Sixty-five.\" Scott said into the silence that had ensued. \n\n\"What?\" Jessica asked.\n\n\"Sixty-five. That's how many people I've killed.\"\n\n\"Sixty-one.\" Josh added, raising his hand.\n\n\"Do you still love us now? Still want to stay here with us?\" Scott asked.\n\nJessica gulped. \"But, you haven't ... you, don't kill any more, right?\"\n\n\"That's right.\" Scott said moving up to her until his body was pressing hers against the side of the horse ... Josh and Jim still clutching her arms. \n\n\"We don't kill any more but that's just by luck. Riley and Angus get stuck going out there now ... we get to stay with you. But if we were still killing, would you love us then?\"\n\n\"I don't know.\" Jessica replied, sadness creeping into her voice. \"Can't they stop? Why do they have to do it?\" \n\nShe was crying now. \n\n\"Shit ...\" Josh and Jim swore simultaneously under their breath. Scott stepped back, giving her room. \n\n\"They do it because that's who we are ... what we are. Just like your parents were who they were.\" Jim said. \"But it's a hard life Jess. Maybe they could be persuaded to stop ... some day.\"\n\nJessica was crying harder, wiping her eyes with her hands. \n\nJosh and Scott both looked at Jim, not believing that he was actually trying to set Jessica up to get Angus and Riley out of the clan lifestyle. \n\nJim motioned at Jessica with his hands and mouthed \"stop the crying!\" to Scott. \n\nScott exhaled. He'd been relieved to see Jessica cry at first. It made it seem like what she was saying about loving them could actually be true. But now he felt guilty. He hated it when she cried. It seemed like ages since she'd cried last. He didn't miss it.\n\n\"Jess,\" he said reaching out and pulling her into his embrace. \"I'm sorry I made you cry.\" Jessica wrapped her arms around Scott and held on tight, burying her head into his chest, as she continued to cry.\n\n\"You know ... \" Jim began. \"Maybe with the right motivation, Angus and Riley could be convinced to stop too.\" \n\nJosh reached out and cuffed him. \n\nScott threw him a dirty look.\n\n\"What? What?\" Jim asked ducking another blow from Josh.\n\n\"You can't put this on her!\" Josh hissed.\n\n\"What?\" Jessica asked, lifting her face from Scott's now soaked shirt and struggling to stop her tears.\n\n\"Here,\" Scott said pulling the hem of his shirt up for Jessica to wipe her eyes and nose.\n\n\"Don't do it ...\" Josh warned Jim in a quiet voice.\n\n\"Angus and Riley. Maybe they'd stop killing if you loved them like you love us.\"\n\n\"Oh no ... \" Jessica said. \"They hate me Jimmy, there's no way they'd pass me the salt much less stop killing for me.\"\n\n\"They don't hate you ...\" Josh said surprised that she'd see it that way. \n\n\"Oh yes they do. Angus looks for any reason to hurt me, and Riley just wants to control me. They certainly would not do anything for me.\"\n\n\"Are you nuts?\" Scott asked. \"Have you seen the way they look at you Jessica? They want you just as much as we do ... they just don't seem to know how to connect.\"\n\n\"I don't know what you think you're seeing Scott.\" Jessica said, \"But trust me, it isn't love.\"\n\n\"I never said that they love you Jess. That'd come later ... what I did say is that they want you. They just don't know how to get you.\"\n\nJessica snickered at this and shook her head.\n\n\"In Angus' defense, he was hurt a while back by a woman. He's still not over that yet.\" Josh said.\n\n\"By Beth?\" Jessica asked.\n\n\"Yeah,\" Jim said. \"How'd you know that?\"\n\n\"Angus dreams about her all the time ... he's always yelling her name.\"\n\n\"Well, that's part of the problem ... he's still hurt by her.\"\n\n\"Even so, I don't believe for a minute that they care about me in any way. They never want to do anything with me other than hurt me ... \"\n\n\"Jess, you could so easily turn that around in the bedroom ...\" Scott began, but Jessica shook her head and shivered. \n\n\"Never, ever, ever.\" She said before Scott could finish. \n\n\"Okay, okay,\" Jim said when Jessica looked like she'd cry again. \"Never mind that then. Just do me a favor Jess, and try your best to like them. Try to really observe them ... see if they really do want to hurt you as much as you think they do. Riley has the dogs, Angus the car, try to help them with these things. They're going to be back in a few days Jess and things will be ... different. I really want them to be on the same page as us, but it won't happen overnight.\"\n\nJessica went from being sad to being terrified.\n\n\"I can't Jimmy ... I can't do it. They're too mean!\""
    ],
    "authorname": "JadenL",
    "tags": [
        "hostage",
        "tied",
        "used",
        "trained",
        "dominated",
        "shared by men",
        "used",
        "sex",
        "stockholm syndrome",
        "owned"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/lisa-ch-05b-only-human-cont"
}