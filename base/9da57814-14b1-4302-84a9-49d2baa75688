{
    "title": "My Education Ch. 03",
    "pages": [
        "Chapter 03 - Moving Out\n\nMy thanks to a great editor whose help has strengthened this submission. My apologies for the delay, and my thanks for the emails and comments regarding the story.\n\n* * * * * * * *\n\nI got home that Sunday and managed to take a short nap before going out to dinner with my family. Fortunately, they just thought that Sarah had kept me so busy that I didn't get any sleep. Dinner was great, though my mother was disappointed. Evidently, she didn't know that Outback Steakhouse has a corporate policy against singing for someone's birthday. My sisters and my brother just laughed. They knew why I picked Outback: I always feel awkward when people sing Happy Birthday to me. My mom wasn't going to be deterred so easily. She made everyone sing in the parking lot. It wasn't until we got home and my mom went to bed that my dad broke the news. My mom's mother passed away earlier in the week. They didn't want to say anything, because my younger brothers and sisters were still in school. Their Spring Break was that following week, so they would have a week to deal with the loss. My younger sister Elizabeth was the closest to my grandmother, and it was obvious that this had hit her hard. In an effort to cheer her up, I took her out for a drive in my car, a BMW 318 sedan.\n\nI obtained this fine example of German engineering in November 1994 due to a car accident that totaled both my car and the car of my older sister Jessica. I was following her to the Honda dealership during the Thanksgiving break so she could have her car put through a regular service interval. A car ran a red light and smashed into the rear passenger side of her car and the front passenger side of mine. The collision totaled both cars and the driver fled the scene, but returned later. Jessica and I looked at each other because something was wrong. A blond haired man left the scene in the damaged car but a dark haired man returned. The two witnesses also agreed that the hair color of the driver had changed, but their word wasn't definitive either. The driver was the sales manager for the BMW dealership located down the street from the Honda dealership. Jessica was now going be returning to Chicago without a car. My father showed up about the same time the owner of the dealership did and, after an adults only conversation, the owner replaced both cars with used 318i sedans. Thinking that things had turned out all right, my dad spoke briefly with Jessica and I before talking to the two witnesses. My father then had a very brief and very cold exchange with the dealership owner resulting in Jessica and I driving home in brand new 1995 models.\n\nWhile I was close to all of my siblings, Elizabeth and I got along the best. She and I worked at Rob Jordan's engine shop the previous summer. Rob ran an import engine and transmission rebuild business that also made high-performance engines, exhaust systems, braking systems, and other performance products. While I worked evenings for my mom's brother Mike, I also worked days for Rob to save up for college. Elizabeth and I learned a lot about engines, and we applied that knowledge during a project Rob let us pursue. Over the course of two months, we modified the engine of my car using custom-built parts that Rob had designed and we built or ones that he had selected. Elizabeth, or Liza as I called her, put in a lot of extra hours to help me build that custom motor. Using the racing version of the motor as a blueprint, we turned the 1.8-liter 140-hp engine into a 2.0-liter 195-hp engine. It doesn't sound like much to most people, but our engine pushed that little four-door sedan from 0 to 60 in 7 seconds and the car would hit the quarter-mile mark in 15 seconds. Not too bad for a car that also got nearly 40 mpg on the highway. While the car was mine, the engine that was the heart of that vehicle belonged to her just as much as it did to me.\n\nLiza and I drove around for nearly three hours reminiscing about that summer. Almost a year later, she was still a little disappointed that her age prevented her from going to the BMW driving school with me. She only had her learners' permit at the time, so there was nothing that could have been done. I told her that she could take the car to the school this summer and that seemed to cheer her up a little. After we stopped for gas, I let her drive for a while before heading home.\n\nBetween the large steak dinner, the physical activities of the weekend, and the emotional drain with the loss of my grandmother, I was in bed within minutes after Elizabeth and I got back. I slept nine full hours and I woke up almost completely refreshed. Although I should have been occupied with the loss of my grandmother, as I drove to school my mind was occupied with only one thing: what was Erin's plan? She seemed so certain that she could make something between us work. Four kids meant my parents could hardly afford to pay for me to live at school which is why I still lived at home. Surely Erin wasn't planning to have me live with her. While I would not object, I could not see my parents or the University approving that. Still, I hoped that her plan worked and that I wouldn't have to wait too long before I found out what it was.\n\nI met Heidi and Tony for our morning Calculus class. The professors posted grades by their offices using student ID numbers. Heidi had already made the rounds and collected the grades for everyone. She smiled when she said that she had received a B+ from Professor Grant. After highlighting that I received a perfect 100 on Professor Grant's final exam, Heidi told me that \"I made her sick\" and then she punched me I had in fact received A's in all my classes. . I did ask her if she wanted any more help with this quarter's chemistry class and she just stuck out her tongue.\n\nThroughout the day, it took everything I had to take notes and engage in conversation, providing the illusion that nothing out of the ordinary had happened over the weekend. I simply could not get my mind to stop wondering what Erin had planned. Fortunately, no one asked me what I had me so distracted. Sarah had laid the groundwork for a story. We spent the weekend in because she wanted the company. It was plausible since Sarah had experienced a very unfortunate childhood. While the members of our circle didn't know it all, they knew enough to give her space. Furthermore, they knew what I did for her in high school, which is what made the two of us as close as we were. For Sarah to ask for a few days with me on her own wouldn't even raise an eyebrow.\n\nSarah joined Heidi, Tony, and me for our one o'clock chemistry class. I was more than slightly disappointed when I didn't see Erin at the front of the class. Even Heidi stated that she was hoping Professor Grant would be teaching this class as well. The man handing out syllabus pamphlets to the class introduced himself as Professor Collins. He was one of the professors who taught the biochemistry courses. I figured I had better pay attention since he would likely be my professor again in the future.\n\n\"Mr. Rhodes,\" he said.\n\n\"Yes sir,\" I replied.\n\n\"Please see me after class,\" he said stoically.\n\n'Oh shit' I thought. Heidi and Sarah just looked at me. To say that I was distracted during the class would be like saying Moby Dick was a fish. Was this part of Erin's plan? Did someone know about our time together in her office? Did her plan backfire? My mind raced with the potential meanings that could be behind why Professor Collins would need to see me after class. Sarah leaned over more than once and told me to relax. Heidi told me if I didn't get my act together, I would have to use her notes for the day's lecture. Finally, it was the thought of Erin that allowed me to focus. I took a deep breath and I could almost hear her telling me to relax and concentrate on the task at hand. So I did.\n\nAs the class ended, I walked up to the front of the room. Professor Collins handed me a piece of paper and said, \"Dean Tarayama would like to see you in her office at 3PM.\"\n\n\"Yes sir,\" I said and even I could hear the nervousness in my voice.\n\nSensing my discomfort, he added, \"Dean Tarayama is tough, but for someone who managed to get through Professor Grant's final exam with a perfect score I don't think you have anything to worry about.\"\n\n\"Yeah, it was a tough exam,\" I acknowledged. \"Wait, you know about that?\"\n\n\"Knowing her the way I do, I am certain tough doesn't begin to cover it. I check the grades of all my incoming students. I want to know where they are at with the subject; that way I know what I will be working with during the quarter. I hope you'll be putting that kind of effort into my class.\"\n\n\"Absolutely sir,\" I replied. \n\n\"Good to hear it,\" he said while walking for the door. \"See you on Wednesday.\"\n\nI walked out the door behind him and found Sarah waiting for me.\n\n\"Heidi had to make her English class, but she is as curious as I am.\"\n\n\"I have to meet with Dean Tarayama at three,\" I replied solemnly.\n\n\"Do you know what's it about?\" Sarah asked.\n\n\"No,\" I replied. \"And that's what has me worried.\"\n\n\"Why?\" Sarah asked.\n\nShe was quiet for a few seconds, then she just looked at me incredulously and leaned in to whisper, \"That Friday was in her office wasn't it?\"\n\nI just nodded.\n\n\"Do you think someone knows?\"\n\n\"To my knowledge, only three people do. I think Maria knows as well.\"\n\n\"Her friend from the club?\"\n\nAgain I just nodded. Sarah walked with me to the student center and bought me something to drink. We then walked around the campus.\n\n\"I don't think anything is going to happen to you,\" she said as we walked.\n\nI tilted my head towards her and looked at her. Sarah stopped and looked me right in the eyes.\n\n\"Justin, it may sound crazy but I think she would walk through fire for you.\"\n\n\"It doesn't sound crazy at all. Worse yet, I can see her falling on her sword to keep me out of it too.\"\n\n\"And that's what has you so worried,\" Sarah added.\n\nWe walked in silence to the chemistry building and continued to the dean's office. Just before we got there, Sarah hugged me and said that no matter what she was there for me. I just smiled. With all she shoulders, Sarah is one of the most giving friends I have ever known. I entered the reception area of the dean's office and told the woman behind the desk my name. She picked up the phone and announced my arrival. After hanging up, she told me to go in. As I walked into the dean's office, I felt my heart stop. There was Dean Tarayama, Professor Grant, and my dad. I was so screwed.\n\n\"Come in Justin,\" Dean Tarayama said.\n\nI sat down in a chair next to my father.\n\n\"We've spent the last hour discussing this with your father and he has agreed with our decision,\" she continued.\n\n'Discussing what?' I wanted to scream. The suspense to all of this was killing. I almost didn't care if I got kicked out of school; I just wanted to know what the hell was going on. It took everything I had not to look at Erin. I knew I would be able to tell what's coming if I could see her eyes for just one second. But I couldn't. I was too afraid what they would see in my eyes.\n\n\"At the recommendation of Professor Grant,\" she started and slid a piece of paper forward on the desk. \"The University has agreed to this.\"\n\nI picked up the paper and began reading through it to find something that would let me know what this was about. I skimmed over the date, my name, and my address. I stopped when I read \"Subject: Employment Offer\".\n\n\"Employment offer?\" I said aloud.\n\n\"Congratulations son,\" my dad said.\n\nI looked up at Dean Tarayama. I know she could see the shock in my eyes.\n\n\"The specific terms are spelled out in the employment offer, but in a nutshell you would be acting as both a research assistant and teacher's assistant to Professor Grant.\"\n\nI looked over at Erin. She smiled and walked over to me.\n\n\"Congratulations Mr. Rhodes,\" she said extending her hand.\n\nI stood up and shook her hand.\n\n\"Normally this kind of position is reserved for more senior students,\" Erin continued. \"But after speaking to some of the other faculty, a few of your high school teachers, and your father, I believed that an exception should be made in this case and the Dean was inclined to agree.\"\n\n\"Your Mr. Jackson in particular was very persuasive,\" the dean added.\n\nShe then did a spot on impersonation of Mr. Jackson and said, \"This pup has ... a wondrous capacity for understanding ... the complexities of the chemical sciences ... It would be an insult, I think ... to higher education ... if you passed this pup over ... simply due to his age.\"\n\nWords could never portray just how closely Dean Tarayama mirrored both the voice and the inflections of Mr. Jackson. Randall Jackson had been was my high school chemistry teacher and the one person responsible for my passion in learning about chemistry. He called all of his students \"pups\" because he was over sixty years old, and every one of his \"pups\" knew of his unique manner of speaking. Think of Christopher Walken in front of a classroom and you are pretty close to the image. The man had a razor sharp mind and one of the quickest wits I have ever known. When I was a teacher's assistant for him during my senior year, I learned that he had multiple degrees in Chemistry including doctorate degrees in Biochemistry and Molecular Biology. He was a mentor to me and wrote the letter of recommendation that got me admitted to the university. It should have come as no surprise that he would continue to further my education wherever possible.\n\n\"I don't know what to say,\" I said.\n\n\"I for one am hopeful you will say 'yes' and accept the offer Mr. Rhodes,\" Erin said.\n\n\"Of course,\" I replied. \"Just let me read it and I will sign it right now.\"\n\nI quickly scanned the rest of the document. I was to be employed as a Level II Research Assistant. The pay was approximately $15 per hour, with workloads between 80 and 100 hours a month. My employment was contingent on maintaining a 3.2 GPA with a 3.5 in core chemistry classes. In addition, there would be annual reviews of my performance. I couldn't help but smile when I read who would be providing the reviews of my performance. Finally, upon a satisfactory review of that quarter's work and my meeting of the GPA requirements my school fees for that quarter would be refunded. I had no clue how Erin had managed to swing all of this, but I was certainly going to ask her later.\n\nI signed the paper and handed it back to Dean Tarayama. She signed it and called her assistant in to have copies made. I just stood there in silence while they talked around me. I couldn't even recall what they were saying. Just like that, my life suddenly got much brighter. The financial burden that my family took on when I went to college was going to disappear. I was going to learn under another brilliant mentor. Most of all, I would have the freedom to continue with Erin. It was that thought that gave me the strength not to throw my arms around her and kiss in thanks for what she had just done. I could never betray her trust in me to keep our relationship a secret, let alone the faith she had just put in me with this opportunity. I smiled at that thought.\n\n'I am in a relationship with Erin Grant.'\n\n\"Congratulations again Mr. Rhodes,\" Dean Tarayama said snapping me out of my thoughts.\n\nShe shook my hand and walked us all to the door. I walked out of the office with my father. I know he has always been proud of both my accomplishments and my choices but this was the first time something I had done would have a positive impact to the rest of my family. Over the past two years, I managed to save over $8,000 for school. That money would be gone by the end of June. The cost of going to this school was right at $1,400 per quarter. Add to that $400 in books each quarter, $100 in gas a month, plus some for food, and it averaged around $800 per month. I had turned over the part-time I had with Uncle Mike to Elizabeth as she needed to save for college as well. Mike had offered to employ me as a CAD technician during the summer, but even with that money, I was going to have to get some help from my parents to pay for school. This job was going to both provide a paycheck and be beneficial to my education. Furthermore, Mike's job offer could go to Elizabeth or my younger brother John. Suddenly my family was no longer shouldering any of the financial burden that my education represented. Although my dad would never say it, that money would go a long way with my siblings.\n\nMy only question now regarded when I would see Erin. I was going to have to work on finding a place near campus and I hope I could sell that idea to my parents. With all the hours I would be working plus studying, I hoped it would be an easy task.\n\n\"By the way,\" my dad said. \"Professor Grant and Dean Taramaya both suggested you should move out here to be closer to campus.\"\n\nI should have known that Erin would think of that as well.\n\n\"I absolutely agree with them,\" he said. \"You spend over an hour a day driving back and forth and double that in traffic. Spending six to ten hours a week in the car is a waste of time. So I will talk to your mother and you concentrate on finding a place to live.\"\n\n\"Deal,\" I said with a smile.\n\n\"Mr. Rhodes,\" I heard Erin call after us.\n\n\"Yes,\" we both replied.\n\nErin just smiled. She addressed my father.\n\n\"I know you and Justin have a lot to discuss with your family tonight, but if you don't mind I would like to have him stay late tomorrow. We have an aggressive schedule ahead of us and I want to get a jump on the equipment purchases as well as some of his other responsibilities.\"\n\n\"Of course,\" he replied and looked at me.\n\n\"My last class tomorrow is a lab that goes from one to four.\"\n\n\"Perfect,\" Erin said. \"Stop by my office when you are done and we'll go from there. Be prepared for a long evening though. As you may recall from last quarter, I expect nothing less than 100% from anyone who works for me.\"\n\n\"I'm up for the challenge,\" I replied.\n\n\"That's exactly what I wanted to hear Justin,\" she said while shaking my hand.\n\nTurning to my father, she added, \"Mr. Rhodes, again, thank you for taking the time off of work to come down here at such short notice.\"\n\n\"It was no trouble at all,\" he replied. \"Believe me when I say, I should be thanking you for what you are doing for my son.\"\n\nErin walked away towards her office while my dad and I started in the other direction.\n\n\"So I hear you did a pretty gallant thing last week for her daughter,\" my dad said.\n\nI just smiled. Sarah was waiting for me outside. At first she looked concerned when she saw my dad, but when she saw the smile on my face she knew everything was all right. She greeted him with a 'hi dad' and gave him a hug. As far as my parents were concerned, Sarah was family. She joined us as we walked with my father to his car. I filled her in on my new job and on my dinner plans tomorrow. My dad threw in the part about being 'prepared for a long evening' and laughed about how he thought Professor Grant would work me to the bone.\n\n\"Sarah I hate to impose,\" he started. \"but Justin's mother always worries when he is driving late at night.\"\n\n\"It's no imposition at all. He always cleans my apartment spic-and-span, so it's like having a maid.\"\n\nI just smiled as Sarah ran her hand through my hair.\n\n\"I have to get back to the office to finish a few things, but I will see you tonight when you get home.\"\n\n\"Bye dad,\" I said as Sarah said it with me.\n\nAs he drove off, Sarah just turned and stared at me.\n\n\"You're going to be working for Professor Grant?\"\n\nI just nodded.\n\n\"And you're going to be getting a place out here?\"\n\nI just nodded again.\n\n\"Well now that you are a working man, you owe me some dinner. Let's go pick up some Chinese and you can tell me all about the weekend.\"",
        "I didn't speak until we got to my car. Sarah's apartment was close enough that she usually walked, so she rode with me. I was still reliving the meeting in the Dean's office though I do recall Sarah ordering for both of us. I finally spoke after we were in her apartment with the door shut.\n\n\"I'm in a relationship with Erin Grant.\"\n\n\"I do believe you are,\" Sarah said\n\nThen she slapped me lightly across the cheek and added with a grin, \"So don't fuck it up.\"\n\nWe ate and I told Sarah everything. It felt so good to be able to tell someone just how much had happened in ten days. Sarah listened, smiled, and laughed. She asked the same questions I had asked myself: how did Erin make it all happen? I was only a freshman so how did she get the dean to agree so quickly? It didn't make sense, but then I didn't really care that much. Somehow, Erin had made it happen. She really went the distance to make it happen. Somehow, someway, I would make it up to her.\n\nIt was about eight o'clock when I left to drive home. I wasn't even out of the car when my mom was hugging me and telling me how much she was going to miss me. I was only going to be 30 miles away, but it was clearly a mother-thing. Then she was crying over what I had done for Erin's daughter Michelle. Evidently, she was proud of me the whole way round.\n\nTuesday was a mad house. After my morning class, I went driving around looking for vacant apartments. Fortunately, Sarah knew all of the apartment complexes, so she guided me to the good ones. Like her single bedroom apartment, it was going to cost around $850 to $900 for rent with another $70 to $100 dollars for utilities. Of course, we also talked about possibly becoming roommates when her lease expired so we would both be able to save money. For some reason, I knew it wouldn't bother Erin in the slightest.\n\nThe afternoon lab jumped right into work and the next thing I knew, I was at Erin's office. From the minute I walked in, she was all business. She took me to my office, which was essentially an 8-foot-by-8-foot room with no door located inside a larger laboratory. I didn't complain. One of my tasks would be working with another faculty member in the maintenance of the Chemistry Department's existing assets as well as the new equipment that would be installed over the next six months. Since I was also pursuing a Minor in Computer Science, I would be tapping that expertise along with my physical sciences expertise in this new job. Erin introduced me to Professor Cutler, who was the senior faculty member in charge of the analytical and computer systems for the department. We made the rounds through the department, returning to her office just after five-thirty. I walked into her office and heard the door shut then lock. I turned to Erin to find her smiling at me.\n\n\"Thank you,\" I said. \"The words aren't enough Erin. I just ...\"\n\nCutting me off, she said, \"You are welcome Justin. And you can thank me by excelling here at the University.\"\n\nShe walked next to me and whispered, \"And by continuing to everything you did this weekend ... again and again.\"\n\nI just smiled. It wasn't the thought of what she had said though. The smile was from the phrase that kept running through my head for the past day. True to form, my goddess noticed something.\n\n\"What?\" she asked.\n\n\"I have to tell you at dinner,\" I replied. \"I can't say it here.\"\n\nSlapping my arm playfully, she said, \"You're just trying to get even for me making you wait a day before finding out what my plan was.\"\n\n\"No Erin. Believe me. You'll understand when I tell you. I've been saying for the past 24 hours and I almost can't believe it.\"\n\nPicking up her phone, she dialed a number. She spoke briefly on the phone before hanging up and gathering her things to leave.\n\n\"Ready?\"\n\nI nodded and we left her office. Since the faculty parking lot is closer, she drove me to my car and then I followed her to her home. She parked her Mercedes S-Class in the garage, while I parked in the horseshoe driveway that was in front of her home. She left the door open and I walked through the garage to join her in walking into her house. She put her things on the table and then turned to me. Pulling me in, she gave me a deep kiss, which I returned eagerly.\n\nAs we parted, her eyes were still close when she whispered, \"I've wanted to do that for the past two hours.\"\n\n\"I wanted to do that since yesterday in the dean's office,\" I replied.\n\nShe opened her eyes and looked up into mine.\n\n\"Are you going to make me wait until dinner?\" she said. \"What's been running through your head for the past 24 hours?\"\n\nI just smiled as I said, \"I'm in a relationship with Erin Grant.\"\n\nThe look in her eyes said it all. I could have said \"I love you\" and I don't think it would have made her glow any more than she was.\n\n\"Kristine,\" she said softly. \"My middle name is Kristine.\"\n\nI would never be able to explain how we could just ... understand one another so well. I knew exactly what she wanted to hear.\n\n\"I am in a relationship with Erin Kristine Grant.\"\n\n\"And I am in love with Justin Nicholas Rhodes,\" she replied with a big grin.\n\nShe did have access to my school file.\n\n\"And you were right. I understand why you had to wait.\"\n\n\"Good,\" I said and then kissed her again.\n\n\"I would bet the farm that you want to know how this is possible,\" she said.\n\nI nodded. Erin went on to explain that during her junior year in high school, her parents had hosted an English exchange student named Karen Myles. She and Erin became extremely close friends. They were such good friends, that during her junior year in college, Erin joined her friend at the University of Oxford for a year. Over the years, they've kept in constant touch and visit one another every year. Her friend was promoted to a leading research position with a multi-billion dollar pharmaceutical corporation. Part of her budget included money to fund research at educational institutions through grants. She had been trying to get Erin to take on a research grant at the University ever since, but the toll from her divorce had kept her from having the energy to devote to such an endeavor.\n\n\"But that changed this weekend,\" she said looking straight at me. \"You make me feel more alive than I have in years. So, I had to wait to call her late last night because she's eight hours ahead. Even Karen could hear the change over the phone. This morning Karen had the paperwork in place for research grant. Two hours after that, Dean Taramaya and I had signed paperwork. The grant is for a total of nine million dollars over three year's time with another nine million dollars for equipment and facilities. With three million dollars of research money added to the annual budget, it was relatively easy to get the dean to agree to let me pick my own assistants. It also makes sense to have someone else on the team who is with the project for its entire run, especially in that last year when it will be most beneficial to have an experienced team leader. Dean Taramaya agreed. Once she did, selecting you was relatively easy. You're the only one who got a perfect score on the final exam, and yes, your work earned you that grade. You received glowing recommendations from multiple people. Finally, when you helped Michelle, you demonstrated the ability to make tough decisions and the presence to lead others. You earned this spot. Don't ever think otherwise.\"\n\nI saw her looking at me, realizing that I wasn't speaking.\n\n\"What's running through your mind?\"\n\n\"I'm just ... well ... wow,\" I said, not really know what to say. \"It's just more than a little flattering that you would do all of this ... for us.\"\n\n\"You betcha mister,\" she said while giving me a peck on the cheek. \"But understand that I would have never had the energy to tackle a research project of this magnitude ten weeks ago, let alone ten years.\"\n\nShe tilted my head up to look directly into her eyes and continued.\n\n\"Don't ever think that I'm doing this alone, because I would have never been able to do this without you Justin. You make me feel like I'm twenty-five again.\"\n\n\"Well, you look twenty-five,\" I added. \"You have the face of an angel and the body of a goddess.\"\n\nErin lit up at that. She just hugged me close and kissed me again. The doorbell rang and she told me to wait there. I heard the door open and from the tone of the voices, I could tell that friends had just arrived. Erin and two other women came around the corner and I had to work not to stare. These two new arrivals were positively stunning. In contrast to the night at the club, each of these ladies wore a business suit. The effect was the same though. There was something about successful women that just drives me up the wall.\n\n\"Justin, this is Cristina,\" Erin said indicating the blonde who walked up around her to shake my hand.\n\nCristina wore a dark gray business suit with a white blouse. Her hair was short, just above shoulder length. She had dark brown eyes and a very relaxing smile, though her lips were a little thinner than Erin's. Even with her heels, it seemed she was an inch or so taller than Erin. It was hard not to notice that there was a healthy bounce to her chest as she walked.\n\nExtending my hand, I said, \"Nice to meet you.\"\n\n\"And you as well,\" Cristina replied. \"I have heard so very much about you.\"\n\nI could feel my face flush hearing that. Erin kept things moving.\n\n\"This is Priya,\" she said indicating the woman who had walked up behind Cristina.\n\nFrom her name, I believed Priya was Indian. She was the first Indian woman I had ever met and she was easily the most exotically beautiful woman I had ever seen. Priya was an inch shorter than Erin was, and she had dark brown hair and dark brown eyes. Her lips were fuller than Erin's and she had an infectious smile. As with Cristina, there was a healthy bounce to her chest as she walked.\n\n\"It's nice to meet you,\" I offered.\n\n\"It's a pleasure to meet you Justin,\" Priya replied.\n\nEach opened their briefcase as Erin offered an explanation. Erin owned two townhouses, both of which were close to the University. Cristina and Priya were both childhood friends of Erin's who worked for a law firm. That law firm would lease the townhouse to me, keeping some distance between the two of us. It was obvious that while Erin was clearly going the distance to bring the two of us together, that she wasn't going to be sloppy about it either. In addition, Erin had arranged to purchase a BMW 3-series convertible for herself and have it registered to the firm as well. She wanted a car that couldn't be directly traced to her. A blonde-haired woman driving a 3-series convertible was hardly a unique sight in Southern California, but it was a definite change of pace from the S-Class she had at campus.\n\nThe doorbell rang again. Erin handed me some money and told me to answer the door. I answered the door, paid the delivery person, and received that bags he had to offer. From the smell, I was guessing we were eating Chinese for dinner. I carried the two large bags and headed back to the kitchen. Though hushed, I could make out the last parts of the conversation.\n\nOne voice said, \"As I said at lunch, I am concerned with where this will lead. But I haven't seen you glow like this in twenty years.\"\n\n\"I agree with Priya,\" the other voice said, indicating that this was Cristina. \"And I haven't seen you with this much enthusiasm over anything in years. Plus, Maria said you came so hard you were sobbing and wailing while ...\"\n\nCristina cut off her remark as I rounded the corner. I had to try not to let on that I had heard some of their conversation because there was a very large measure of pride I took from the comments made. On one side, her closest friends were noting that she was happier than they had ever seen her. With each passing day, my feelings for Erin were growing. It felt good to know I was having such an effect on her as well. Still, it was a complete ego boost to hear that her friends were discussing Erin's sex life. A sex life she was currently sharing with me.\n\nErin walked into the kitchen and started putting the food onto dishes. Cristina went over the lease with me while Priya set the dining room table. The lease was simple, only one page in length. I would be paying $600 per month in rent. That would leave me plenty to cover bills and food, and have some left over to take Erin out from time to time. The dinner conversation was surprising light. I was certain her friends would grill me, especially since they were lawyers. There were no hidden questions, just open conversation. They appeared to trust their friend's judgment regarding me.\n\nWhen everyone was finished, I cleared the table and went about cleaning up. I couldn't hear everything that was being said, but I did make out some phrases here and there. They were continuing the conversation regarding what Maria had witnessed. As I finished, Cristina and Priya came in to say their goodbyes. Each left with a quick peck to the cheek and wishes for a great evening. By the tone in their voice, I had a feeling they knew what Erin and I would be up to later.\n\nErin came up behind me and wrapped her arms around me. There's something about having a woman holding me from behind with her breasts pressed against my back that I absolutely love. I moved to turn around, but she stopped me saying she just wanted to hold me like that for a minute. Finally, she turned me around and kissed me deeply. I returned the kiss and moved my hands to her breasts. She just mouthed \"bedroom\" before taking off for upstairs. Erin beat me to her room, but only because she cheated. Her skill set apparently included undressing while running up the stairs because I tripped over the clothes littering the upstairs hallway.\n\nBy the time I reached her bedroom, Erin was standing next to it with her hip cocked to one side. The look in her eyes was one of hunger. I approached her and she kissed me deeply as I felt her hand wrap around my swollen cock. She pushed me back on the bed. I pushed back to the center of the bed and watched as Erin walked around the bed until she got the other side. She got onto the bed and I found myself looking up into her eyes. She smiled at me and then kissed me again. Then she began kissing her way down my body. I returned the kisses, savoring the opportunity to taste her flesh as she crawled down my body. Her pace was slow enough that I was able to lavish both of her ample breasts with kisses. I enjoyed feeling her moan against my body when my mouth worked her nipples. Her mouth was at my waist when I could smell her arousal. I tilted my head back to find her sex so wet that her juices were slowly running down the insides of her thighs. A groan escaped my lips as I felt her take my cock into her mouth. There was no teasing. Erin started working my cock with that wonderful stroking and sucking motion. I wrapped my arms around her thighs and started to pull her down to my mouth, but I felt her resist.\n\n\"No,\" she said pulling her mouth off my cock. \"Watch me. Watch how much sucking you turns me on.\"\n\nMy goddess sucked my cock back into her mouth. She worked my cock deliberately, but I realized her pace was slightly different. As worked up as I was, I knew she could get me to cum in a minute if she wanted to. As I felt her working my cock, I realized Erin knew it too. A smile crept across my face as I realized she wanted to delay my orgasm enough to see how worked up she got from sucking me. As always, my goddess gets what my goddess wants.\n\nI could feel Erin's tits pressed against my body as her hand and mouth worked me. I stared up at her sex, intent on watching her arousal grow as she pleasured me. Her outer lips were open due to the position of her knees and they were shiny with her juices. Her inner lips were a light red, indicating the state of her arousal. Her clit was very red and I could tell it was damp with her juices. It seemed to beg for attention, and it required a fair amount of self-restraint to keep from sucking it into my mouth. I groaned as I felt her sucking me deep into her throat while working my balls with her fingers. I opened my eyes and I swear her sex was visibly wetter. She pulled back and resumed her stroking and sucking motion. Erin's mouth removed all concept of time from my brain and it only heightened my appreciation of the sight before me. Her clit and inner lips were still a light shade of red, but both had gone from damp to wet. As if I needed any further indication of her arousal, her inner and outer lips were both very puffy. The sight alone made me moan. When she heard my moan, she buried my cock into her throat again and my moan lasted until I had no air left in my lungs. I breathed in deeply and could tell that she had increased her efforts.. My arms wrapped around Erin's thighs for leverage as my hips began to thrust up at her mouth. I looked up at her sex only to be surprised at the sight. Erin's entire sex was clearly wet now, nearly dripping with her juices. Her inner lips were now open slightly and I could make out the pink folds of her pussy beyond. The sight made my balls boil. She must have felt it because she started stroking and sucking my shaft even harder. I was groaning and panting as I lay there, relishing in the velvet pleasure her mouth was giving me while watching my goddess's arousal continue to grow.\n\nI felt her mouth pop off my cock, but her hand kept feverishly working my shaft. I felt the cool rush of air around my wet cockhead as she took in a deep breath of air. Time seemed to stop as it felt like an eternity before her lips touch my cock. Erin's entire sex was soaking and her pussy was very red. It seemed to be as much in need of release as my cock was at that moment. Erin buried my cock into her mouth again. I felt her fingers working my balls while her throat milked the head of my cock. I groaned loudly and my hips pushed up driving any remaining bit of my shaft deep into Erin's mouth. My goddess just kept milking me. I felt my cock pulse hard with that first load of cum and my vision became blurry. My goddess just kept milking me. Again and again, I felt my cock pulse hard in Erin's mouth and throat. My goddess took it all, greedily devouring my seed. As my vision slowly returned, I saw just hot aroused Erin was. I was watching it, but I could still barely believe it. Erin's juices were dripping freely from her pussy. Even though I had finished cumming, the sight of her completely drenched sex kept my cock hard. Her clit, her lips, and the insides of her thighs were all shiny with her wetness. My cock had now slipped from her mouth and Erin moaned as I blew across her sex.\n\n\"Fuck me,\" I heard her say groan. \"Fuck me now.\"\n\nOver the next two hours, we fucked in multiple positions. Erin may have been over twenty years older than I am, but she had no problem keeping up with me. At times, our coupling was slow and tender. Later, we were simply rutting each other and the stream of obscenities that flowed from her drove me to fuck her as if I owned her. It amazed me how easily Erin could give herself to me. With the right circumstances, there were times when my goddess seemed to be very submissive sexually. It wasn't the first time an older woman had let herself go to such places with me, but I certainly never expected this from Erin. Then again, there were many things I never expected from my professor.\n\nIt was just after nine when we finished in the shower and then cleaned each other before stepping out. After telling me to get dressed, I went to the hallway to gather up my clothes and hers. I am just finishing when she emerges from her closet looking as fresh and energetic as she had when I met her in her office earlier that day. With her hair in a ponytail and wearing jeans with a tight top, Erin completely gave the appearance of woman in her 20s.",
        "\"Come on,\" she said heading for the stairs. \"It's time you saw your new abode.\"\n\nDownstairs, she gathers her purse and the new keys that Cristina had delivered. I followed her outside, noting how much the ponytail suits her. Erin walks like a woman without a care in the world, and it slowly sinks in that I am, at least in part, responsible for this. We headed outside and I held the car door open for her. As my door shut, she gunned it and sped off for the townhouse and I made certain to watch where we were going. As we drove there, Erin explained that she had many upgrades performed after the last group of college renters wrecked large parts of the place during their New Year's Eve party. Evidently, the three girls living in the townhouse were all daughters of upper-class families in the area who wanted to keep everything quiet. Erin agreed on the condition that they pay for whatever repairs and upgrades she deemed necessary to make the unit livable. She was planning to put the unit up for sale once it was complete, but thought it would see better usage if I rented it for the next few years.\n\nThe townhouse is in a gated community, where visitors would have to dial the phone to get 'beeped' in to the complex. There were 200 three-level units divided amongst 50 individual buildings. There were also 20 executive townhouses. These units were four levels, had generous yards for a townhouse, and were completely detached units. Owners had a garage door opener that opened a separate gate. Using the same opener, Erin opened the garage door and pulled inside. We got out and she gave me a tour of unit. The bottom level housed a three-car garage large enough to accommodate super duty sized trucks. The water heater looked huge and Erin winked when she informed me that the unit had a capacity of 100 gallons. Evidently, we would be enjoying long hot showers here as well. There was an unfinished storage area behind a locked door. \n\nThe second level had a dining room, a family room, a kitchen, a living room, and a half-bathroom. The dining room and living room were empty, but both had sliding glass doors that led out to a deck that overlooked the driveway. The family room had large recliner and a sectional couch. From the few wear marks on each, it was obvious that they were a few years old but they both looked very comfortable. The breakfast area adjoining the kitchen had a small round table capable of seating four people. The kitchen was the eye catcher of the first level. It was huge, at least by my standards. The counters were granite and the cabinets were a wood that looked like cherry. A large angled peninsula provided expansive countertops for cooking and spacious counter seating. Topping all of this off were the appliances, all of which were professional stainless steel units. My mother worked part time as a gourmet chef. These were the only luxuries my mother ever insisted on having. Given how well we ate, my father never complained. The refrigerator was Subzero four-feet wide model with a glass door on the chilled side. The oven was a Wolf model, with two ovens, six burners, and a griddle. In addition, there was a wall-mounted oven with a microwave above it. The island was also large and included a sink as well as Subzero under-counter beverage and wine refrigerators. Topping all of this off was a large amount of counter space. My mom was going flip when she saw this kitchen. Erin smiled at me when she told me that I should learn how to cook for guests. I smiled at that comment, not because I looked forward to learning but because my mother already had.\n\nCombined between them, the family room and breakfast area had three sets of French doors that opened to a veranda leading to the backyard. The backyard was actually quite spacious for a townhouse, but as an \"executive home\" I guess nothing less would be expected. Only a small portion of the backyard was finished, so I guess the infamous New Year's party had wrecked this area as well. A gazebo-enclosed spa occupied this lone area. Best of all, the position of the gazebo combined with the fact the unit was on a cul-de-sac made it almost impossible for anyone to see people going to and from the spa.\n\n\"I love my spa time,\" Erin said with a grin.\n\nThe third level was equally impressive. There were two master bedrooms and two smaller bedrooms. The smaller bedrooms were larger than standard size, with a quick estimate of roughly 14-feet by 12-feet. It had its own private bathroom complete with a standard bathtub-shower unit. Both of these rooms and their bathrooms were unfurnished. Obviously, the New Year's party had caused damage to these rooms. The first master bedroom was much larger, probably 20-feet long by 16 feet wide. This room had a very large walk-in closet that looked to be the size of the smaller bedrooms I had just seen. The bathroom attached to this room had a good-sized shower, a large whirlpool bathtub, and dual sinks. This bedroom and bathroom were also unfurnished. The second master bedroom was the same size as the first, but it was furnished, actually quite nicely furnished. The attached bathroom had a smaller whirlpool bathtub, but the shower was noticeably larger and could easily take two people at a time. The shower had a window that looked into a small sauna. The sauna was built into the bathroom and was made of oak. From its size, I guessed that it could accommodate four people. The walk-in closet was probably half the size of the other master bedroom. This was the only bedroom that was furnished and it had a mattress in it, so I had to assume this would be my room. Looking a second time I noticed it was a king-size mattress. I looked at Erin and she just smiled.\n\n\"You didn't expect me to spend nights with you on a twin-size did you?\" she half-asked half-stated.\n\n\"To be honest Erin, I wasn't thinking that far ahead,\" I replied. \"But I am wondering how I will explain this to my parents.\"\n\n\"Done,\" she said with a mischievous grin. \"Your mother called me this morning to thank me for the job I offered you. She ended up coming out for lunch and I gave her a tour of the townhouse. She is a terrific woman and we spent over an hour talking. I told her about what you did for Michelle. Trust me, as a woman with daughters, your mother understood exactly how much that meant to me. I explained to her that I own this townhouse outright, so any rent I receive is just income. It would mean more to me to rent it to you than to a bunch of other kids who would destroy parts of it like the last bunch. In addition, since the repair work will take another three months, renting it to you by yourself was an easy sell. This way, you have an isolated place to study.\"\n\nShe kissed me on the tip of my nose and added, \"Of course I left out the fact that I will be visiting you quite often.\"\n\n\"That was probably wise,\" I added.\n\n\"Your mom did volunteer your services,\" she said with a wink. \"Evidently, you've learned quite a bit about general contracting from your uncle.\"\n\n\"Yes,\" I said knowing exactly where this was going. \"I would be happy to keep an eye on the quality of the work being done.\"\n\n\"Thank you,\" she said with another quick kiss. \"Though when she offered your services, I'm certain you can imagine what was running through my mind.\"\n\n\"And the furniture?\" I asked.\n\nShe just smiled at me as if I should know the answer already, and said, \"I told her that I was changing out some furniture, and rather than give it to Goodwill, I would let you use it.\"\n\nI just grabbed Erin and held her to me. Erin was an intelligent and successful woman. On top of that, she was positively beautiful. To have such a woman go this far to make \"us\" possible was flattering to the point of being overwhelming. My goddess just held me to her, silently acknowledging my thoughts. She held my hand and led me to the top floor. The top floor was probably the biggest surprise of all. There were two sections. Half was a spacious area that Erin explained used to be a game and entertainment area. The other part of the top floor was an outdoor patio and terrace. Erin said that this area was also under construction.\n\nAs we headed for the garage, she gave me a list of numbers to call which included cable, phone, and utilities. When we returned to her home, Erin pulled into the garage. There were spaces for six cars. Erin laughed when she saw me looking at the three empty spaces. When they originally bought the house, Paul wanted the extra garage space because he liked to have a number of cars. At the time, Erin had disagreed.\n\n\"Now there are spots for my cars, the Jeep, two for the girls, and that one is reserved for your car,\" she said while handing me the remote she used earlier for the townhouse. \"It's reserved for the day when we won't have to hide the fact that you are part of my life.\"\n\nI just kissed her. I held Erin Grant to me and kissed her. If there was any doubt as to her feelings towards me, they were gone completely. In such a short period, Erin had opened up her life to me. As for me, I was flying high. For the first time in my life, I wasn't relying on plans or pre-made decisions. Even though I was only nineteen, nearly everything in my life had been thought out; schools, jobs, after school activities. Only my friends could be considered random, but I did have some say in those I chose to be close friends with. Here I was letting someone else make the decisions. I should have been scared. I would have been scared if it had been anyone else but Erin. I don't know why, but I was completely at peace with everything. And it felt grand.\n\nI did have one question though.\n\n\"What about your girls?\" I asked.\n\n\"We have some time on that,\" she replied. \"They're at UCLA for the quarter. They come back during vacations, and occasionally on the weekends. Obviously, Kathryn figured out I am seeing someone but she didn't get anywhere trying to figure out who.\"\n\nI smiled at the memory of wrecking Kathryn's sheets. Erin saw my smile and hers got a little bigger. \n\n\"She took it pretty well and Michelle was laughing about it for hours. Of course, Michelle took one look at me and knew it was more than that. She told me she has never seen me glow before, so she gave 'provisional' approval until she can meet and interrogate later. We had a great talk on Sunday night while getting all her laundry done.\"\n\nShe paused and looked at me and changed to her professor voice, \"Note for you young man: now that you are on your own, don't take your laundry home for mom to do.\"\n\n\"It was nice for her in a way as well. She knows I loved her father, but she never saw me 'in love' with him. Does that make sense?\"\n\n\"Completely,\" I replied.\n\nErin looked at her watch and asked me when I had to be home. I told her that I was staying at Sarah's and she just smiled. Erin told me to call Sarah to get permission to stay over, and then she left to go make up the guest room. I called Sarah and we spent about five minutes on the phone. She laughed at the question and told me that to have fun but that she expected me to pick her up at seven for breakfast. I told her about the townhouse and ended up giving her a few details to satisfy her curiosity. She changed our breakfast plans to something to go because she wanted to see it first thing in the morning. I agreed and then went to find Erin. Upstairs, I saw a light coming from a room that I had never been in before. I entered it to find a bed with Erin laying in it.\n\n\"We never did make it to this room,\" she said with a grin.\n\nWe spent an hour 'breaking in' the guest room before returning to hers to sleep.\n\n* * * * * * * * I woke at five-thirty to the sound of the shower. As I sat up, Erin walked up to me and pulled me into the shower. Our coupling this morning was primal but intimate. Erin was bent over and wailing through her second orgasm over when I finished with a roar. Starting the day like this was something I could definitely get used to. Erin had me pick out a bra and panty set for her to wear that day. I chose a lacy Brazilian-cut set that was a shade of blue that went with her eyes. I have to confess that it was almost as much fun watching Erin dress up as it was taking it off. Erin gave me a kiss and told me to have Sarah stop by her office when she had time.\n\nAt twenty minutes to seven, I left her home to go meet Sarah. I was early, but it didn't matter because Sarah was waiting for me when I arrived. Sarah went nuts over the townhouse, and was already asking to use the spa. When she saw the second master bedroom, she didn't say anything but I know she was hopeful. So was I. If I could get Erin to let her be my roommate, Sarah could cut back her hours. We both wanted Sarah to work fewer hours, although Sarah would never admit it. \n\nThe rest of the week was a blur. There was so much to do between getting settled in the job and the reading it entailed, adjusting to my new classes, packing, showing the townhouse to Heidi and Tony, and getting utilities hooked up. Erin called me to her office on Thursday to meet with the rest of the project team. It included four juniors and three sophomores. I was put in charge of the computers and test equipment. In addition to giving me instructions for setting up new equipment that would be arriving this month, Erin gave me one after the meeting was far more personal.\n\n\"No playing this week Mr. Rhodes,\" she said softly in her professor voice. \"You'll want to save it all for Saturday night.\"\n\nBefore I knew, it Saturday had arrived and I was moving in. The only furniture I moved was my desk and dresser. There was a television, VCR, a portable CD player, and my computer. Everything else was clothes. My mom donated a bunch of older cookware, dishware, and silverware, which was great for me but not so much for my dad. Those items would have to be replaced and I knew my mother was taking him shopping tonight or tomorrow.\n\nErin stopped by at my mother's request just so they could meet again face-to-face. My parents insisted on taking her to lunch with us as a small token of thanks for everything Erin had done for me. Afterwards, Erin left so I could finish unpacking before it got too late. I picked up on her suggestion and stated to all that I would be 'in bed by ten' which prompted an acknowledging wink from Erin. My parents took me to the bank where I received a very unexpected surprise from late grandmother. While she wasn't rich, she and my grandfather both had life insurance policies. When he died five years ago, my grandmother had amended her will to give each of her grandchildren money towards school. My grandmother's will had placed no restrictions on the money once we reached 18, so Jessica and I were getting checks for just over $60,000. My parents would be setting up trust funds for our younger siblings to ensure that the money was used for school. At first my parents were concerned that I wouldn't handle the money responsibly. The events of the past few weeks had convinced them that I was capable of not going hog wild with the funds. After the bank, they took me shopping for the basics in food at Costco and we returned with enough food for three weeks. They left me to finishing settling in.\n\nAround six, Heidi and Tony called from the gate phone to be let in. I buzzed them in. After a quick tour of the place and Heidi going nuts over the spa, they took me out for pizza and a movie. We got back just after nine-thirty, and I received no objections when I said the day had left me more than a little drained. At a few minutes before ten, I heard the garage door open and a car pull in. I couldn't wait to see Erin, so I bounded down the stairs as I heard the garage door shutting. When the door's motor stopped, I made out the opening and closing of a car door. I swung the door open just as she was walking up to it. Erin was standing there in a black leather jacket, denim skirt that went halfway down her thighs, and a pair of black leather boots that stopped just below her knees. The leather jacket was zipped down far enough to see that she wasn't wearing a bra. My jaw hung open as I drank in the sight. Erin did a pirouette and let me see just how good she looked in that outfit. \n\n\"Erin ... you look absolutely incredible,\" I said.\n\nShe just smiled politely and said, \"Thank you baby. The look in your eyes was the reaction I was hoping for.\"\n\nShe did another pirouette. Her ass made the skirt stick out perfectly as she turned around. The jacket tapered at the waist, which only served to push her breasts together and up. I could have stared at her in that outfit for hours. \n\n\"Do you really like it?\"\n\n\"Fuck yes,\" I replied with a grin.\n\n\"Good,\" she said while walking past me and up the stairs.\n\nShe continued, but in a far softer, almost innocent sounding voice.\n\n\"Cause your professor's been a naughty girl, playing with her pussy for the past two hours. She's been trying to take the edge off because all she can think about is your cock sawing in and out of her horny little pussy.\"\n\nI followed her up the stairs, my cock growing harder with each word she spoke. The innocent sounding tone she was using combined with the way she was referring to herself in the third person was driving me wild.\n\n\"Visions of your cum shooting all over her tits and filling her pussy up. She couldn't tell you how many times she came on her shiny red toy, but it just wasn't the same.\"\n\nAs she reached the top of the stairs, Erin spun around and looked at me. She wore an expression that was half frustration and half pouting. She stared at me as she completely unzipped her jacket. Her breasts were now completely exposed and I could see that her nipples were already hard.\n\n\"She needed to feel the heat from your cock inside her, especially when you cum. Has she ever told you how good your cock feels, pulsing deep inside her hungry wet cunt?\" \n\nShe stopped at the couch and motioned with one finger for me to come closer.\n\n\"Has she ever told you how right it feels to have your cock shooting its seed deep inside her pussy?\"\n\nShe started undoing my jeans. She continued talking in the soft, innocent voice she had conjured up but no longer referred to herself in the third person.\n\n\"Because it does. It feels so perfect to feel your cock pulsing hard each time it spurts in me.\"\n\nErin kissed me deeply as she pushed my jeans down past my hips. I had barely begun to return her kiss when she pulled away and dropped to her knees taking my jeans with her.\n\n\"So natural. So right.\"\n\nAs she pulled my underwear down exposing my hard cock, Erin half groaned and half growled at the sight. She sucked my cock deep into her mouth, taking my entire length in one swift motion. It felt so right to have her in front of me, on her knees, nursing on my cock like this. My cock just started throbbing when she started talking to it as she continued to kiss and suck it.\n\n\"Are you ... hard for ... me ... balls full ... of cum ... for me ... it's all ... for Erin ... gonna drain ... drain you dry ... milk every ... last drop ... in me ... on me.\"\n\nWith that, Erin pushed me back on the couch. She literally tore my jeans off my legs and my underwear followed seconds later. With a grace that surprised me, she took off her jacket in a single motion. Spinning around, she flung it on the couch a few feet from me. I looked up into her eyes and saw the beast in them. One hand was working her left nipple, twisting it back and forth roughly. The other had pulled her skirt up around her waist and was now working her clit. My goddess wasn't hungry. She was fucking starving.\n\n\"Fuck! I need your cock,\" she hissed.\n\nShe turned around and put her legs outside mine. The view made my cock throb as I groaned aloud. Looking up, I could see her perfect ass ... the puffy lips of pussy shiny and slick ... and her juices coating the insides of her thighs. She put one hand on my knee and began to sit down on me. Her hand reached back and grabbed my cock, guiding it to the lips of her pussy. She worked the head back and forth three times before settling back a little further. I groaned loudly as I felt the head of my cock part her sex open and slip inside her soaking pussy. In that position, I watched in awe as she slowly sank down and fed my cock into her hungry cunt. Completely mesmerized by the sight of her sex swallowing my cock, I barely registered the moans coming from her. Once I was fully rooted in her, I realized just how hot she was. My goddess, was on fire.",
        "With both hands on my knees, Erin fucked herself up and down on my shaft faster than I would have ever thought possible. She was beyond control as her lust had consumed her completely. Erin wasn't moaning. Erin wasn't even groaning. My goddess was grunting in labored breaths as she worked her cunt up and down as fast as her body would let her. I felt her leather covered feet wrap around the bottom of my calves to find more advantage. That extra bit of leverage gave Erin all she needed to slam back down on to me even harder. It felt exquisite. As if my brain needed any other stimuli, the sight before me was beyond any I had ever imagined.\n\nAs Erin was crouched before me, the position spread the cheeks of her ass open nicely. It gave me the perfect view to watch as she worked her body up and down my shaft. A shaft that was now glistening with her juices mere seconds after she had impaled herself on it. As wet as she was, her pussy kept a tight grip on my cock. As she moved up, the lips of her pussy dragged along my cock. It was as if they were stretching to keep as much of my cock inside her for as long as possible. As she moved down, those lips puffed out slightly to aid in taking my cock back into her as fast as possible. It took everything I had not to grab her hips and roar in orgasm. My goddess needed my cock hard and rigid for her pleasure, and I was determined to give her just that.\n\nErin slammed into me and her body went erect. Her head shot back and she started wailing loudly as she came. I saw her orgasm. I heard her orgasm. Most of all, I felt her orgasm. Erin's cunt was gripping my cock harder than it ever had in any of our previous encounters. It was clenching and releasing my cock in waves as her orgasm ripped through her body. On top of that, I could feel her juices running down my cock and over my balls. Fuck she was wet.\n\nAs she started to come down off that orgasm, my mind jumped on the thoughts I had earlier regarding Erin letting go. I wondered how far I might be able to push her and how hard I might make her cum in doing so. I grabbed her hips hard with both hands and held her down on my cock. She moaned in approval.\n\n\"Start rubbing your clit,\" I told her.\n\n\"What,\" she asked her breathing still heavy as she was recovering.\n\n\"Don't ask fucking questions,\" I barked at her. \"DO IT!\"\n\nI saw her body lean forward again, as her left arm moved to my knee and her right arm moved down the front of her body. When she moaned loudly and her hips tried to move against the pressure of my hands, I knew she was doing as I commanded. I increased my grip on her body to prevent her from moving as much as possible. I wanted her fully impaled on my cock for what was coming next.\n\n\"Faster Erin,\" I continued. \"Rub your hard little clit faster.\"\n\nI felt her hips try again to move up and down as she said, \"Let go. I'm not done riding you. Let me ...\"\n\nErin had turned around in an effort to help get what she wanted. When she saw the look in my eyes, I saw the resistance in hers begin to fade.\n\n\"Ungh, Ungh,\" I said shaking my head. \"No fucking way Erin. Last weekend, you told me to claim you. Do you remember that?\"\n\nAs the resistance continued to fade, I could see confusion taking its place. I pulled one hand away from her hips long enough to slap her ass. It wasn't hard enough to really hurt her, but I had cupped my hand perfectly and the slap it made was very loud.\n\n\"Answer me,\" I growled.\n\n\"Yes,\" she said meekly. \"I remember.\"\n\n\"Good because I want you to do something for me,\" I said staring hard into her eyes. \"You're going to cum again for me, and you're going to do it right fucking now.\"\n\nShe was staring at me. The look in her eyes told me that she was completely giving herself up to where I was taking her. By the motion of her right arm, she was working her clit even faster now.\n\n\"Do you remember your words Erin? I can hear them so clearly: 'Claim me as your woman ... your bitch ... your personal whore.'\"\n\n\"Yes,\" she hissed.\n\n\"Are you my woman?\"\n\n\"Yes Justin,\" she replied softly.\n\n\"Are you my bitch Erin?\"\n\n\"Yes ... yes,\" she replied as her breathing grew harder.\n\nIn almost a whisper, she said, \"I'm ... your ... bitch.\"\n\n\"And are you my personal whore Erin?\"\n\n\"For ... as ... long ... as ... you'll ... have ... me.\"\n\n\"Then you have ten seconds to cum,\" I growled at her.\n\nHer eyes darted back, I could see her pleading silently for more time.\n\n\"There will be no more time. I will count backwards from ten. If you have not cum again by the time I reach the count of one, then I swear to you Erin ... I will get up and leave you here.\"\n\n\"No,\" she pleaded.\n\n\"Oh yes. I will. If you really are my whore, you can cum in ten seconds can't you? With your pussy impaled on my cock and your fingers working your clit, ten seconds should be more than enough to fucking cum ... and prove what you say.\"\n\nErin's arm was moving even faster now as she looked at me. Now I saw determination. Now I saw that she got where I was taking her. She didn't smile and she didn't speak. My goddess didn't have to. Erin's eyes said everything.\n\n\"Ten,\" I said.\n\nErin's head turned back and tilted down. I knew her pride would not let her fail.\n\n\"Nine.\"\n\n\"Uhhgggg,\" she grunted as I watched her body shake in rhythm to the movements of her arm.\n\n\"Eight.\"\n\n\"Please,\" I heard her whisper. \n\n\"Seven.\"\n\nAgain in a whisper, I heard Erin say, \"Please let me cum.\"\n\n\"Six.\"\n\n\"Oh fuck,\" she said a bit louder. \"So close.\"\n\nI smiled as I saw her arm working feverishly. My smile grew even larger as I felt her fingers brush her lips and touch the base of my cock.\n\n\"Five.\"\n\n\"Please ... let ... me,\" I heard her say through ragged breaths.\n\n\"Four,\" I said a little louder to remind her that time was nearing an end.\n\n\"Oh fuck, I feel it,\" she said loudly.\n\nI could feel it to. Her pussy was rapidly clenching and releasing my cock, and her hips were grinding in circles as she tried to get even more of my cock inside her pussy. Erin's body was acting on instinct. Her brain was merely a passenger on this ride.\n\n\"Three,\" I said even louder.\n\n\"Yes ... yes ... yes ... YES ... YES ... YES,\" she said as her voice continued to grow.\n\nI decided to give her just a half second more before continuing.\n\n\"Gonna ... fucking ... show ... you,\" she growled. \"Gonna ... fucking ... cum ... so ... good ... for ... you.\"\n\n\"TWO,\" I said nearly yelled cutting her off.\n\nErin's hips pushed down hard and they stopped moving. I heard her take in a deep breath of air. She was there. My goddess, my Erin was there.\n\nI saw her head jerk back as I yelled, \"ONE.\"\n\n\"AAAAHHHHHHHHH,\" Erin wailed as this second orgasm ripped through her.\n\nErin's arm continued to move, and I watched as she continued to push herself. I felt her pussy clamp down hard on my cock.\n\nI heard her panting through deep hard breaths, \"Not ... fucking ... done ... gonna ... cum ... again ... gonna ...\"\n\nAnother orgasm began washing over her, this one harder than the one she had just had. Her arm stopped moving but it didn't matter. Erin's entire body started shaking as this cum hit her. \n\n\"OH FUCK ... OH YES ... YES ... YES ... AAAAAHHHHHHHHHH\"\n\nHer body slumped back against mine. I reached around her body to cup her marvelous tits. My fingers slid in from the sides until I found her very erect nipples. \n\n\"YES BABY ... PLEASE ... YES ... SQUEEZE THEM,\" Erin wailed.\n\nMy hands molded to her breasts as I let her nipples slip between my middle and ring fingers. Holding her flesh this way allowed me to squeeze her tits and pinch her nipples at the same time. The results were immediate.\n\n\"OHHHH ... FUCK ... NOT STOPPING ... IT'S NOT STOPPING ... OH FUCK,\" Erin cried as I felt her body continue to write in orgasm on top of me.\n\nI continued to work her beautiful tit-flesh with my hands as my fingers squeezed her nipples between them.\n\n\"FUCKING GOOD ... SO GOOD ... BABY ... YES ... Yes ... yes ...\"\n\nErin was sobbing as her orgasm continued in small aftershocks.\n\n\"So good ... so good ... I told you ... told you ... I was yours.\"\n\nAs strange as it sounds, I was proud of her. My goddess had given herself to me. My beautiful Erin had given herself to pleasure I wanted her to experience. She was sobbing as she continued to ride the last part of that wave. I stopped work her body and just held her in silent acknowledgement what she had given me.\n\n\"I know baby,\" I said softly into her ear. \"You were so good. So very good Erin.\"\n\n\"Please Justin,\" she said still half crying. \"Push me up. Please.\"\n\nI did as she asked and watched in awe she slowly pulled herself up off my cock. On shaking limbs, Erin turned around and lowered herself until she was kneeling before me. The front of her body had a light sheen of sweat covering it. She wore a smile that was as bright as any I had ever seen. Her bright blue eyes were soft. My goddess was glowing. Her hand wrapped around my wet cock and stroked me slowly.\n\n\"Please Justin,\" she said gently. \"Finish it.\"\n\nI looked into her eyes and I could see the need in them. In the most literal sense, Erin had let me strip her emotionally and mentally. She let me do it to prove to me beyond any doubt or thought that she was mine. Now, she needed to know that I accepted that precious gift. I held my hand out and she put her free hand in mine. Our fingers interlocked with one another and she stared into my eyes. My goddess Erin Grant looked into my soul ... and made me cum.\n\n\"Cumming,\" I whispered as my cock began to pulse in her hand.\n\nShe stroked me gently as she aimed my cock at her chest. Her strength all but gone, Erin could only stroke me slowly with her hand.\n\n\"Yes baby,\" Erin said softly. \"Give me your seed.\"\n\nI let go of holding back and my orgasm hit me hard. My hips thrust up into Erin's hand and I felt my ass tighten up.\n\n\"It's ... all ... for ... you ... uugghhh ... UUGGHHH ... UUGGHHH\"\n\nErin's hand was barely moving and her words were very soft, but the orgasm that ripped through me was one of most intense I had ever felt. My body shook and I felt my shaft pulsing against the soft grip of her hand repeatedly as I grunted and moaned through the pleasure. I finally opened my eyes and saw the results. Her tits were covered with my cum. There were a few streaks on her chin and neck. My goddess was smiling softly, quite proud of wearing my seed on her flesh again. My cock spurted a few more times as my orgasm faded, and then Erin reached out to me again. I could see what she wanted in her eyes.\n\n\"Please,\" she whispered. \"Again Justin ... again for me.\"\n\nErin's words made my balls start churning again. The look in her eyes as she pleaded with me made my cock twitch. I saw her take a deep breath as she leaned down. I felt her velvet lips wrap around my cock and take me deep. In the next instant, my cock was fully inside her mouth and her throat was milking me. She didn't suck. What Erin did was far more intimate. My goddess simply nursed on my cock with her wet mouth. She nursed on my cock to get it to cum again. The hand that held onto mine squeezed as she did so, and I could feel the affection Erin had for me in her grasp. I looked down at her even though I couldn't see her eyes. I looked down at her, squeezed my hand against hers, and felt my cock pulsing gently in her mouth as I came for her. Her throat milked me the entire time. When she knew I was finished, she pulled her head up, looked me straight in the eyes, and smiled softly. I saw a sense of accomplishment in her eyes. I leaned down and pulled her to me, eager to hold my Erin. With her last bit of strength, Erin curled up in my arms and laid her head on my chest. I held her to me.\n\nAs I stroked her hair gently, I could hear her whispering repeatedly, \"told you ... I'm yours ... for as long as you'll have me ... I'm yours.\" We stayed together like that for a long time. I knew she needed time to redress emotionally and mentally. I would have given her all night if she wanted to.\n\nSome time later, Erin stirred from her spot. As I leaned down, I took her cheek in my hand, tilted her head up, and kissed her with every ounce of passion I had. My goddess returned the kiss in kind. When our lips parted, I whispered \"water\" and she nodded. I got up and returned with two glasses of water. She drank hers quickly and smiled when I gave her the second glass.\n\nLooking at me with those incredible blue eyes, Erin softly said \"Spa please.\"\n\n\"Yes milady,\" I replied and went outside.\n\nI opened up the doors on the gazebo and turned on the spa. Before going upstairs, I refilled the empty glass and traded out with the one Erin was holding. I returned again with four towels, setting them on the edge of the Jacuzzi. I then went to the couch, swept Erin up into my arms, and carried her to the hot water that awaited us both. As she sank into the water, I dialed in a soft jazz station on the radio and then joined her. She sat on one side and I slid into the seat next to it. This allowed her to lean back and look at me while she put her feet in my lap. One at a time, I began massaging her feet. My goddess just smiled at me with her eyes. Life was good.\n\nWe were in the water for about almost an hour when a mischievous smile crept across Erin's face. I felt her feet playing with my dick, and I looked to see her smiling at me. Her eyes darted down, so mine followed them. I heard her giggle when she felt my cock jerk. Erin's tits had been near the surface of the water the entire time we were in the Jacuzzi, only now she was playing with her nipples. Erin twisted and tugged them, moaning softly the entire time. My goddess was putting on a show for me and my body was giving her the reaction she desired. Her feet continued to work my cock even after I was fully erect. Finally, her hands stopped their efforts and her feet followed suit seconds later. \n\nMoving slowly, I watched Erin stand up in the spa. As I watched the water fall down her body, I took in the sight of my goddess standing in the Jacuzzi. Erin was five-foot four-inches tall. Her body was one that men and women dream of. Her magnificent breasts stood proud upon her chest. Her body tapered nicely to her waist and then flared back out to her hips. Everything was in perfect proportion. Everything about her oozed both sensuality and sexuality. She owned me with just a look. Erin held out her hand and I scrambled out of the spa to help her step up and out. In silence, she held her arms out as I attentively dried her body. I wrapped that towel around her body and grabbed a second to begin drying her hair. As I finished wrapping her locks in that towel, she spoke.\n\n\"Dry yourself, close down the spa for the night, and come inside.\"\n\nI raced to complete the tasks and walked inside a minute later. As I approached her, Erin took the towel from my body and pointed at the recliner. When I was sitting in it, she first took the towel off her head before dropping the one around her body. She climbed up onto the recliner, placing her legs over the arms which spread her sex wide open. The lips of her sex were puffy, engorged with need. As I sat there staring at her pussy, Erin spoke to me in a hard tone I had never heard her use before.\n\n\"See that?\" she asked.\n\n\"Yes.\"\n\n\"You're going to take your cock and fuck it,\" she commanded.\n\nI moaned and she responded by leaning down to kiss me. There was little romance in this kiss. All I could feel was a need in her lips. The hunger had consumed her once more. Her mouth was still pressed against mine when she pushed her hips down, grinding her pussy against my dick. I moaned into her mouth at heat of her pussy. Erin returned the moan, matching the tempo of her kissing to the tempo of her cunt dragging along my shaft. Her mouth moved to my ear and I could feel her labored breathing as she leaned up and then grabbed my dick with her right hand. As she rubbed the head up and down her slit, I could feel her pussy respond and start leaking its lubricant in preparation for what was to come. She groaned loudly when she held my cock and pushed down just enough so that her pussy would stretch open to swallow just the head of my cock.\n\n\"Do it Justin,\" she whispered with small pants accompanying her words. \"Grip my ass ... pull me down on that meat ... I need to feel ... it stretch its way ... into my cunt.\"\n\nWhen my hands grabbed her hips, she moaned and continued her talk.\n\n\"Please Justin ... I'll be so ... fucking good to it.\"\n\nAs I pulled her down onto my cock, Erin moaned her approval, \"Oh fuck ... mmmmmmmmmmmmmmmmmm\"\n\nI held her hips fast and arched mine to drive my dick deep. Erin put her hands on my shoulders to gain more leverage and started slowly riding me. Her eyes were closed as if she were concentrating on something. It took seconds for me to figure out what and my goddess was again in my head.\n\n\"You feel it ... don't you,\" she whispered again while panting. \"My cunt loves ... being full of your ... fucking cock ... can you feel ... it milking ... sucking ... so hungry for ... your cum.\"\n\nErin was riding me with a slow determined pace. She wanted to give me the maximum pleasure she could not only by taking my dick in and out of her hot pussy, but also by sucking on my dick with her hot pussy. The feeling was almost indescribable.\n\n\"You like ... my tight pussy ... baby?\" she asked while she arched her head back.\n\n\"Fuck yes ... I do Erin,\" I replied as she now had me panting with her.\n\nI felt her lean back, one arm on my leg for support. The other managed to play with my balls which were now wet with her juices.\n\n\"You like how ... your balls ... are all sticky ... with my cunt juice?\"\n\n\"Oh fuck ... I love how ... they feel ... all sticky ... with your ... cunt juice.\"\n\nErin continued to grind up and down slowly, rolling her hips to add to the pleasure she was giving me.\n\n\"When you ... feed your hot cum ... into my ... greedy pussy ... I'm gonna ... cream it.\"\n\nI groaned as my hips shot up in an attempt to push my shaft even farther into her. Fuck, she felt exquisite riding me like this.\n\n\"Gonna cream ... your dick ... so hard,\" Erin continued her breathing deep and ragged.\n\n\"So close ... Erin,\" I replied, my breathing just as ragged. \"So fucking ... close baby.\"\n\nHer voice was barely a whisper when she said, \"Hold me ... down on ... your cock baby ... wanna feel ... that dick pulse ... inside me.\"\n\nI wrapped my arms around her back and hooked my hands over her shoulders. Pulling her down as hard as I could, Erin groaned loudly. Her legs were still over the arms of chair and it spread her pussy open perfectly. Erin moved forward again and looked down into my eyes. In those beautiful blue orbs I saw affection and desire. I saw love and lust. I saw hunger and need. I saw all those things and I felt my cock swell ever more. Erin felt it too.\n\n\"Yes baby ... fill me ... cum in me...cum in my wet pussy\"\n\nI started grunting as my hips pushed up against her.\n\n\"Oh fuck ... so close ... gonna fill ... you up.\"\n\nMy arms held Erin tight against me as I pumped up into her. I wanted to hold back until I couldn't any more. I wanted to hold back and then cum so fucking hard inside my goddess. Erin wasn't having any of that as my goddess continued her pleas.\n\n\"Come on ... you fucker ... do it\"\n\nI was so close, but I wanted to hear Erin push me over the edge. My goddess wrapped her arms tight around me. With her mouth at my ear, she snapped the last bit of resistance that was holding me back.\n\n\"Do it Justin ... cum in ... your whore,\" she said as everything went white.\n\nMy hips shot up and my arms pulled her down as hard as I could. My brain barely registered that Erin's body was shaking, that she was cumming with me. However, Erin did not stop. She kept right on pushing me.\n\n\"Fill me up ... take me ... please baby ... cumming ... with you.\"",
        "I could feel Erin's orgasm. Her pussy was clenching down hard and her fluids were soaking my cock, my balls, and my thighs. My goddess moved her head just enough to kiss me deeply. I returned her kiss and I knew I loved Erin with every fiber of my being.\n\nIt was a long time before either of us moved. It was almost one in the morning when we finally uncoupled from one another. Erin smiled at me when I picked her up and carried her upstairs. We crawled upstairs to my bedroom. With Erin curled up against me, we fell asleep in minutes.\n\n* * * * * * * *\n\nThe next morning, I awoke to find Erin staring at me. The smile she wore told me she enjoyed watching me sleep as much as I had enjoyed watching her sleep. We got up, showered, and went downstairs to have breakfast.\n\n\"I have a question,\" she said.\n\n\"Shoot.\"\n\n\"Sarah and I had lunch this week. I know you two are close ...\"\n\nBefore I could speak, she held her finger to my lips and continued.\n\n\"... I also know that I don't feel threatened by her. It's almost as if you two are family. Why?\"\n\nI took a deep breath, asked Sherman to set the Wayback Machine to four years, and started the story of Sarah.\n\nSarah didn't exactly grow up in the best home. Her mother worked nights while her father worked days. Her parents were distant but not rude. Sarah spent a lot of time over at my house, having dinner with us so often that she was a part of the family. Later we would learn that her father drank a lot when he came home, prompting him to yell at Sarah for minor things. She would always stay late at our house, often sleeping the night. My parents loved her dearly, and never said a thing. \n\nThings changed between the summer that was between her Junior and Senior years and my Freshman and Sophomore years. Sarah disappeared for nearly five weeks. No one saw her or heard from her at all. Calls to her house went unanswered and messages were not returned. I went to her house constantly but to no avail. My parents even tried to get a hold of them, but there was nothing. I had almost given up until she literally woke me up out of a dead sleep. I always left my window open and Sarah had snuck in well after midnight. Curled up on my floor, she was sleeping soundly. I took my blanket and laid it over her before returning to my bed where I watched her throughout the night. She woke up a few times, and I could hear her crying softly. As much as I wanted to reach out to her, something told me to let her be. That just coming here was taking everything she had and that if I didn't let her come to me on her terms, I might never see her again. Eventually, I fell asleep and when I woke up Sarah was gone. The blanket and pillow were folded neatly on my desk. The next night, I left the pillow and blanket out. That night, I woke up around 2AM and found her curled up sleeping once more. This continued for a week, before I finally heard her say something as she left.\n\n\"Help me,\" Sarah whispered so softly I could barely make out what she was saying.\n\nThe time had come to act. That night, I left the blanket and pillow out as before. This time though, I stayed up the entire night. When she woke up and left that morning, I followed her. Eventually, she arrived at a mobile home complex that was in the next city. If she were living here, then she would be attending a different school. James, her father, left for work, but there was no sign of Sarah. I approached the mobile home, and slowly circled around it. Although the shower was running, Sarah's sobbing could be clearly heard. Moving around the back, I found the sliding glass door unlocked. I went in and made my way to the bathroom. The door was cracked and in the mirror, I could see Sarah's back. There were bruises all over legs and arms. I quickly moved to her room and found the bed in complete disarray. The door had been broken in and was hanging by the top hinge. There was one other thing odd. Sarah's mother was nowhere to be found. My stomach was turning as I began to realize what was going on. I went to the kitchen to check on one last thing. Although I hoped and prayed against it, the garbage contained something I knew I would find: empty bottles of alcohol. Whiskey to be specific.\n\nI left the mobile home before Sarah got out of the shower. I noticed two kids a little younger than me coming out of the mobile home next to Sarah's and they waved hello. I went over to them and began chatting with them. I heard their stomachs growl so I offered to treat them to Denny's if they would tell me about their new neighbors. They hesitated, so I suggested a compromise: instead of going with a stranger to Denny's, they could meet there if they wanted to. They walked in the door three minutes after I did. During breakfast, the kids informed me that they had moved in a little over a month ago. They often heard yelling and what sounded like fighting coming from the place. They would have called the cops but that the girl who lived there assured them that everything was all right. When the brother went to the bathroom, the girl asked me if I was a friend of Sarah's. I told her I was and she immediately asked me if I was going to stop Sarah from getting hurt any more. I promised her that Sarah would be safe from now on.\n\nAfter breakfast, I called my parents to let them know I was okay and that I would be home late. I spent the day watching the place from a distance and contemplating my options. At the time, I had just achieved my 3rd Degree Brown Belt in American Kenpo as well as a green belt in Jujutsu. It's what happens when two of your friends' fathers are instructors in the martial arts. I could have probably beaten the man within an inch of his life, but sooner or later he would have gotten out. When he did, Sarah would be no better off. I didn't know where Sarah's mother was, and if Sarah had the strength to speak out she would have by now. There was only one choice. I was going to have to deal with Sarah's father permanently.\n\nEventually, her dad came home and I waited about fifteen minutes before moving back near the unit. At first, everything was quiet; too quiet. As time wore on, I could hear the old man getting louder and louder. I knew Sarah was scared and I wished I could let her know that it was going to end tonight. Unfortunately, I needed him drunk just not too drunk. By the tone of his voice, I knew he was getting closer to where I needed him. I went over to the neighbors and knocked on the door. The two kids I talked to earlier answered the door. I told them to call 911 and say that an older man was beating up a kid. The brother hesitated, but the young girl immediately ran to the phone. I moved back towards Sarah's trailer. I wanted to wait a little longer, but when I heard him call for the \"little whore\" to come take him to bed, I knew the time had come. I went to the front door and started ringing the doorbell repeatedly. The door flew open and he asked me \"what the fuck I wanted.\" I stared at him, but I didn't answer him. He repeated his question but he said it with far more volume this time. Again, I didn't say anything but I stared at him. He yelled his question, but I remained silent.\n\nFinally, he asked, \"What the fuck I was looking at?\"\n\n\"Nothing,\" I replied.\n\n\"What the fuck did you say?\" he yelled.\n\nI just smiled as I said, \"I am looking at nothing.\"\n\n\"Someone needs to knock some sense into you boy,\" he said.\n\n\"You mean a _real_ man like you?\" I asked still grinning.\n\n\"What did you just say?\"\n\n\"I asked if you meant that a real man like you should knock some sense into me. I mean after all, it takes a real man to slap Sarah around the way you do.\"\n\n\"Mind your own fucking business,\" he said taking a step towards me.\n\n\"Or what?\" I asked laughing. \"You gonna knock me around the way you do your little girl?\"\n\nThat finally pushed him far enough but I saw the swing coming. I blocked it easily and laughed at him.\n\n\"Is that it?\" I asked while laughing.\n\nI saw the next swing coming too. He put his body into this one, but it didn't matter. The men who shared their art with me had prepared me for this type of situation. Again, I blocked his blow, but this time I slapped open-palm across the face. I continued to taunt him and I could see the anger building in his eyes.\n\n\"Did all that time spent slapping a girl around made you forget how to hit like man?\"\n\nHe swung again and I deflected the blow this one final time.\n\n\"Is that it you fucking sissy? You're not even trying.\"\n\nHis eyes said it all. He was enraged. This swing was faster than the others were and harder. I moved to avoid the brunt of the blow, but let it strike my shoulder. The force it knocked me back a few feet.\n\n\"Watch your fuckin` mouth boy,\" he snarled.\n\n\"Big talk from a man that spends his time beating up girls,\" I snapped back. \"You're pathetic.\"\n\nHe screamed as he cursed at me and swung another time. So very much of me wanted to launch into this sorry excuse for a man and beat him senseless. But I had plan. I needed him to be out of control when the cops arrived. I needed him to be beating me. Therefore, I let it connect. The force of the blow knocked me to the ground. My tongue licked my wet lips and I tasted blood. He stood a few feet away and watched me stand up. There was rage in his eyes. He was almost where I needed him.\n\nAs I wiped the blood from my mouth, he said, \"That'll teach you boy. Now go home before you really get hurt.\"\n\nI just laughed.\n\n\"Is that it?\" I said incredulously. \"Is that the best you have? I know girls that can hit harder than you can.\"\n\nHe swung again and this one had his whole body behind it. It knocked me to my knees and then he shoved me off the porch. There was pain, but I couldn't stop now. He was almost there. I felt sweat running down over my left eye, blurring my vision. It wasn't sweat. It was blood. This was good, but I needed more. I got up and laughed at him. I could see the rage building.\n\nStaggering to my feet, I laughed while saying, \"You hit like a faggot.\"\n\nI saw the rage in his eyes as he pulled his arm back. This one was going to hurt. I just laughed as he swung at me. The hit knocked me back against his car. It required some effort to lean against the vehicle and stay on my feet. I looked down the driveway and could make out a police car coming down the paved road inside the trailer park. Who says there's isn't a cop around when you want one?\n\n\"You fucking homo,\" I said while continuing to laugh.\n\nThe next hit came to my gut and it dropped me to the ground. Knowing the reaction it would have, I continued to taunt him with words like 'fag' and 'homo'. I put my arms in front of my face just in time. His foot connected with my left arm and the force of the knocked me over. I looked up and saw the police car accelerating. I rolled back to my other side and tried to get back up. The pain shooting through my shoulder prevented me from getting up, but I kept my focus on the goal. I kept my focus on my friend. I managed to make a few more comments before his next kick connected with my ribs. The blow knocked the wind out of me. He didn't stop and I didn't want him to. Additional kicks came and I would have screamed out in pain if I could have drawn in any air. I heard the car doors open and I curled up into a ball as people started yelling, but the man kept kicking me. He landed additional blows to my arms and legs and I was beginning fade in and out of consciousness as the cops pulled him off me. The last thing I remember was Sarah holding me and telling me to hang on.\n\nI woke up the next day in the hospital. My parents were there and they stayed as the doctor informed me of the damage. The blow to my left arm could have broken it, but the doctor told me I was lucky. The bone was cracked, and the force of the blows had dislocated my shoulder. I was fortunate that there was no internal bleeding, but I had bruises all over my face and body. The worst of it was that I had two cracked ribs. The doctor informed us there were two detectives that wanted to talk to me. My father asked him to have them wait. My parents looked at me and I answered their unspoken question. I told them everything that had happened the day before, including the discovery of the bruises on Sarah's body and the fact that it was obvious that she was either unable or unwilling to go the police. My dad smiled and I knew he understood the rationale of my decision to goad her dad into attacking me. As a minor, no one had any say in his prosecution and Sarah wouldn't have to get involved. He would have a lot to answer for. Neither of them was particularly happy with my methods, but they both understood the logic of it.\n\nThere was a knock at the door and then Sarah walked in. She looked at me and I thought she was going to cry. Sarah started to apologize but my mom just walked over to her and hugged her. Sarah broke down completely and I had to believe everyone in the hospital could hear her crying. Eventually, she calmed down and looked at both of my parents. There was no judgment there, just acceptance. She hugged my father before coming around the bed to sit in a chair next to me. She stammered through an apology, but I cut her off. Eventually, my dad let the cops in. My parents stayed silent as I told my story. Of course, I left out the taunting. Not that it really mattered. I was 15 years old. He would be going to prison. The only question that remained was for how long. It was a question that I didn't have to ponder for long.\n\nAfter taking a deep breath and grabbing my hand, Sarah gave a statement to the detectives. It started the ball rolling. Fortunately, my father dealt with legal issues a lot. At his urging, the DA requested that the courtroom sessions be closed and all records be sealed. The judge agreed. Hell, even the Public Defender agreed and given her reaction to Sarah's testimony, it was obvious that she didn't want to handle the case at all. Sarah ended up repeating her story two more times, but the public at large would never hear her testimony.\n\nSarah's mother had gone to Europe four months earlier to help to her sick mother. She had always been the responsible one and kept her husband out of trouble, especially from Sarah's uncle Bob. Bob was her dad's younger brother, and he had spent more years in prison than out. I met the man once, and just the look of him sent chills down my spine. He reminded me a lot of Johnny Ringo from \"Tombstone\". Not one month had passed after Sarah's mother had left before Bob got his brother to back him a stupid stock market deal that ended up going south fast. Even worse, Bob got his older brother drunk and then had him sign power of attorney papers over for their house, which Bob immediately sold. Of course, Bob disappeared with the money, leaving James to relocate to the mobile home they were now living in. During all of this, Bob had threatened to kill Sarah if she tried to contact anyone for help, especially her mother. The move had such an impact on James, that he hit Sarah when she tried to contact her mother to let her know what was going on. Depressed and guilty, Sarah's father turned to alcohol.\n\nThen four weeks before Sarah showed up in my room, everything really went down hill. In a drunken stupor, he mistook Sarah for her mother. When she locked her door, he kicked it down and raped his own daughter. Sarah had told me that her father had done similar things to her mother, but since her mother never said anything, Sarah left it alone. Of course, her father apologized profusely the next morning and promised it would never happen again. Given everything that had happened, Sarah was fearful for the future of her family. For the good of her family, she decided to let this incident slide. She felt guilty over it and as much as she wanted to contact me, she didn't think she could ever face me. One week later, James got overly drunk and raped her again. By the end of the third week, he was forcing himself on Sarah every other night. The man stayed partially sober to get through his job at the docks. Outside of that, he drank constantly. Fortunately, Sarah decided to sneak out after he passed out to go to the one place she believed could feel safe: my house.\n\nWith her father in jail, Sarah was able to contact her mother. Jill immediately caught the first flight home. My parents met her at the airport and explained everything to her. Sarah's mother was a really champ. She was there for her daughter. James was sentenced to 30 years in prison, but he only served two. Once the prison population found out why he was in prison, James learned what it was like to be raped. He eventually committed suicide in prison. My uncle Mike took Jill onboard his company as a clerk in the accounting group and even sold her a car at a deeply discounted price.\n\nReturning to the present ...\n\n\"Where is Sarah's mother now?\" Erin asked.\n\n\"She died two years ago from cancer. Jill was diagnosed with ovarian cancer right after Sarah graduated from high school. She worked for Mike for two years before her health deteriorated to a point where she couldn't work any more. While Mike's company has stellar benefits, the health plan just didn't cover every medicine and treatment the doctors prescribed. Sarah worked hard to help with bills, but there was little anyone could do. She lived for almost two years before passing. The only positive thing there is that there is no history of it in her family and the doctors believe it had more to do with environmental factors, so Sarah doesn't have to worry about hereditary issues.\"\n\n\"So that's why she didn't start college right after high school,\" Erin said softly.\n\n\"There's one last thing,\" I added with a sigh. \"Sarah's relationships with men have been poor at best. Most of them see her body and just want to fuck her. She just went along with it until one guy decided to share her with his good friend before they left for college. It was right after her mom passed away and the ass took advantage of her to get her to go along with it. She hasn't dated a man since. She has had a few girlfriends though.\"\n\nErin just stared at me and said, \"The way she acts, one would never know she has been through any of that.\"\n\n\"Yup,\" I said.\n\n\"But you two never ...\"\n\n\"No, we never. In high school, I was like every other red-blooded male and found myself very much in lust with her. We became friends and it didn't take long for me to see how much it ate at her to only be seen for her body and nothing more. I promised myself I would never take advantage of someone like that. We drifted into our friendship my sophomore year, and I have viewed her like a sister ever since.\"\n\nHugging me tight, Erin said, \"Thanks for telling me.\"\n\nShe kissed me and said it was time for breakfast. Erin asked me to get her bag while she started breakfast. The conversation was light and mostly dealt with some of the tasks that were coming up that week. I did take the opportunity to ask Erin something that had been bothering me.\n\nI took the plates and started to clean up after our meal, while Erin said she would go start a shower. I finished loading the dishwasher quickly, but decided against starting it. Somehow, I believed our shower would require all the water the available. I stepped into the shower to find that Erin had the water just right. I stepped under the water and felt a slight rush of air as Erin stepped out. This shower was incredible. There were dual shower controls and each one had two height-adjustable rain showerheads. Each control had a hand shower wand but for now, I was enjoying the feeling of warm rain falling down around my body. The four showerheads could be adjusted to spray hot water down onto the central area of the shower. It was relaxing to have that water raining down on me.\n\nI felt the cold rush of air and knew Erin had rejoined me. She walked up behind me and wrapped her arms around my body, sharing the rain with me. As good as that water felt, having her arms around me with her magnificent breasts pressed against my back felt even better.",
        "\"Thank you for this,\" I said softly. \"I can't imagine a better way to have broken in the townhouse.\"\n\n\"Good,\" she said. \"But you're not done yet.\"\n\n\"Yes we are,\" I whispered while kissing her lightly on the cheek.\n\n\"No,\" she said in a soft voice. \"I said 'you're not done yet'.\"\n\nConfused, I tried to understand her meaning. The satisfied throbbing in my balls said that I was more than satisfied with the previous night's events.\n\nShe continued, but in that softer, almost innocent sounding voice.\n\n\"Cause your professor made herself promise about breaking your new place in. She promised herself she'd make you pop four times.\"\n\nDrained as I still was, the innocent sounding tone she was using was causing a reaction.\n\n\"You came all over her tits. Did she ever tell you how much she likes that Justin? Did she?\"\n\nI felt her hand reach around and find my cock. Erin moaned when she found it already growing hard.\n\n\"And she loves it when you shoot in her mouth or throat,\" she whispered with that soft innocent tone. \"Do you know that your naughty professor would drink your cum any time ... any where?\" \n\nShe felt my cock responding to her words and the touch of her fingers. Her fingers were wet. No, they were slick.\n\n\"And of course she's told you how right it feels to have your cock shooting its seed deep inside her pussy. She's never gonna tire of that. No, no, no.\"\n\nI felt her slowly stroking my cock, and although the shower was wet, there was still something I couldn't place about how slick her hand felt.\n\n\"And occasionally, when you've been a good boy,\" she said standing up on her toes. \"And you've been such a very good boy to your professor this weekend.\"\n\nThen it hit me. Her hand was coating my dick with lube.\n\nErin whispered, \"And when you've been such a really good boy, she'll look you right in the eyes and tell you ... she loves it when you take her ass.\"\n\nWith that, she stood near the wall of the shower and pointed up at the showerhead. I moved it to send the hot water down the wall of the shower and the watched Erin lean forward. Water was partially running down over her body and I could feel my dick twitching at the sight. When I saw her hand reach down between her legs, I needed no further encouragement. I stepped up and spread her cheeks. She whimpered as I slowly sank my cock into her tight hole. Even lubed, I realized this was something that was pushing her limits. She groaned when the head of my cock slid into her. Even lubed, her ass still gripped my cock harder than anything I had ever felt. Three minutes later, I was stroking in and out of her when the first orgasm hit her. When she recovered, my goddess began a lovely stream of obscenities that drove me wild. With my hands on her hips, I pounded her. With her fingers still working her clit, she built herself with me until finally I could no longer hold back. Erin screamed with me as I came with a roar. Her ass literally squeezed the cum out of me. It was glorious.\n\nWe cleaned up and then washed each other tenderly. Once we were out of the shower, we went downstairs and started working. She worked on her school work and I worked on mine. Just before one o`clock, the doorbell rang. I opened the door and Sarah walked in carrying Chinese. She and Erin exchanged hellos as if they were the best of friends. After lunch, Erin handed me a pad of paper and a pen. Sarah and I followed her to the unfinished master bedroom where Erin told Sarah that her room would be finished in early June.\n\n\"My room?\" Sarah asked.\n\n\"Yes,\" Erin replied matter-of-factly. \"I figure your rent and utilities combined will be about half of what you are paying now.\"\n\nSarah was just staring at her.\n\n\"We talked about this,\" Erin said. \"And this townhouse is going to need a woman's touch. But for now, let's start with how you would like your room to be painted.\"\n\nSarah hugged Erin tightly and looked at me while saying, \"Your girlfriend is something else.\"\n\n\"Yes she is,\" I replied.\n\nAs Erin and Sarah discussed her new room, I took notes for Erin to give to the contractors who would be performing the work. I would later learn that Erin and Sarah had discussed the possibility of Sarah moving in when they had lunch earlier in the week. Sarah had renewed her lease for another 18 months this past January, but evidently Allison was good friends with the Vice-President of the complex's management company. Sarah would be let out of her lease at the end of June. I didn't want to spoil the moment by asking, but I believed that for the first time since her mom passed away that Sarah felt as if there was someone other than me that she could call family. She loved my parents and they adored her, but there were some things she would never confide in them. There were things about Sarah that no one in our group knew save me. They didn't stop with Sarah's bedroom and two hours had passed before the two had gone over all of the unfinished rooms. Sarah was even going to help Erin choose flooring and carpeting plus the game room on the fourth floor, and what we needed for the backyard. Before she left, Erin gave me a small bag to give to Sarah. With a quick kiss, my goddess was out the door and I joined Sarah on the couch. She was just staring blankly at the wall.\n\n\"I think,\" she started. \"I finally have a place to call home.\"\n\nI opened the bag Erin gave me and found a set of keys and a garage door remote similar to mine.\n\nHanding them to Sarah, I said, \"Nope. You definitely have a place to call home.\"\n\nWhen she saw the contents of the bag, her eyes immediately started watering. Sarah curled up the couch, putting her feet up against my left thigh. Knowing she would sleep more soundly like this than in any bed, I grabbed the remote and turned on a movie. About five, she woke up and we finished the night by grabbing some pizza for dinner then working on homework.\n\n* * * * * * * *\n\nThe next week was extremely busy. In addition to my course load, many things took up my time. Somehow, I managed to find some time to run three times a week in the morning and I went to the campus gym to start working out on weights. For the job, I had to review the specifications of the some of the equipment that would be coming in and installed in the lab. We were going to be working on studying the interaction of eight different drugs on the various biomolecules within the human body. While the range of biomolecules includes many substances, the project we were assigned would focus on the interaction of these drugs with three specific groups of biomolecules: amino acids and their corresponding proteins; nucleic acids, which are more commonly known as DNA and RNA; and the various hormones within the human body. The ultimate goal of the project was to better understand these relationships in the hope of not only creating better treatments for patients, but also the improving the psychological impact of those treatments on patients. The research was going to require the expertise of a molecular biologist, a medical doctor, a psychologist or a psychiatrist, and some serious research effort.\n\nAs a bonus for me, the project would require a tremendous amount of molecular modeling. This was going to need serious computing horsepower, probably relying on a high-end multi-processor system from IBM or Silicon Graphics. My uncle Mike owned a mid-sized engineering firm that employed just over 200 engineers, utilizing a number of software packages including both the CATIA and Pro/Engineer CAD software. In addition to performing outsourced engineering work for the aerospace and automotive industries, they often provided testimony in court cases requiring expertise in various areas of engineering.\n\nIn high school, I worked part-time on evenings and weekends maintaining their Silicon Graphics workstations and file servers. My mom's brother was very good to our family, employing my older sister and me during our high school years. When I was assigned to help their full-time Unix Administrator, I received a lot of training over three years, most of which revolved around the administration of those workstations. Of course, it didn't hurt that my mom also had a cousin that worked for Silicon Graphics either. Mike's firm received great pricing on the systems, their maintenance costs, and my training.\n\nI mentioned my experience with these systems during a meeting with Professor Grant and Professor Kevin Fisher, which resulted in their leaning towards a Silicon Graphics server for the department's high-end computing needs. Professor Fisher was an experienced Unix Administrator and was in charge of all computer assets within the Chemistry Department. He was very enthusiastic over the possibility of utilizing such a system. When I stated that I had a relative who worked for Silicon Graphics, both professors asked me if I would discreetly inquire about pricing for the system. We then discussed the budget for the computer side of the equipment and we agreed to meet next week regarding what information if any I might have at that time.\n\nI called my cousin Dave at Silicon Graphics on Wednesday. Dave was the eldest son of my mom's oldest brother and he was nine years older than I was. I hadn't seen Dave since last summer when I went up for training. He was a senior sales engineer at that time, so I had some hope that he might be able to help a bit with the pricing. The conversation lasted less than five minutes, mostly due to people that kept coming into his office. I gave Dave the specifics of what we were looking to do and he said that he would stop by while he was down this upcoming weekend for the funeral for my grandmother.\n\nErin came by that night around eleven and we were up until just after one in the morning. My goddess was hungry and I did my best to keep her smiling. She came over again on Friday and I told her a great deal about my grandmother. I wished she could have met Erin before she passed and I vowed that someday I would take Erin to her grave for an introduction. Erin opened up on how the deaths of her grandparents affected her, before heading to bed. I would like to say that we just curled up and slept, but I was 19 and just being next to Erin was enough to get me hard. She made me cum twice, once with her mouth and then by riding me. She came twice on top of me, never saying a word while staring deeply into my eyes. I slept so deeply that night and Erin had to wake me up the next morning. She joined me in the shower and gave me another quick blowjob before sending me out the door. I hoped that I would never tire of seeing my goddess wet and naked.\n\nThe arrangements were nice, and I know my grandmother would have been pleased. Every one of her kids and most of their kids had shown up. There were four of us grandkids who couldn't make it: two were studying abroad and two were serving in the Navy. It was good to see family even if it wasn't for the best reasons. Even my younger brother John was in rare form. As everyone was leaving for the night, Dave informed me that he wouldn't be flying back up until late Monday night, so he asked if he could come by the school to discuss the proposal he had worked up. I agreed and we arranged to have an early lunch on Monday before meeting with Professor Fisher and Professor Grant.\n\nDave met me for lunch at the pub on campus. His title had changed since last summer and now he was in charge of all sales engineering, answering directly to the Vice President of Sales for the United States. Dave had taken the opportunity to share his proposal with his boss who liked the idea of the good press that would come with having their computer involved in the research we were doing. In the end, we were going to get 16-processor Origin supercomputer with the latest visualization system and two high-end Onyx systems for development. All of which would going to come in for over $1,000,000 under the targeted budget Professor Grant had given me. When I inquired, all Dave would tell me was that the school was getting a \"deep\" discount.\n\nProfessor Grant was extremely grateful for the generosity Dave had arranged and Professor Fisher was thrilled at the platform we were going to be receiving. In addition, Dave had managed to contact several software vendors on our behalf and got them signed onboard for similar discounts with their solutions. As I walked Dave to his car, he discussed one last thing with me. He asked what I was doing with the money my grandmother had left me. I said I was going to invest it because my job was covering my school costs.\n\n\"I would never say this in front of the boss,\" Dave said. \"But buy Dell and hold it for a year. Trust me on this. Even after taxes, you'll double your money or better.\"\n\n\"Thanks Dave,\" I replied. \"I will. And thanks for the pricing.\"\n\n\"Family comes first Justin. I'll see you in a few months for training on the new system.\"\n\nIt was no secret that Dave also played the stock market. He was very successful at it. Over the years, a few family members had asked him for investment advice. No one had ever been disappointed with his suggestions. I made mention of it to Erin that night, hoping she would know someone in the field. The next night, I had dinner with Cristina and Erin. While she was a lawyer first, Cristina also traded stocks. She agreed with Dave's advice on Dell and recommended to Erin that she should invest some as well. The next night, I got a phone call from Cristina explaining that Dell shares were at $41.00 and asked me how much I wanted to buy. Dave's comment about family coming first was something my father had always instilled into us as kids. I put my trust in what Dave said and told Cristina to buy 1,000 shares. The next day was Thursday so after my morning class, I went to the bank and withdrew $42,000 as a cashier's check to the company name Cristina had given me. Erin went with me as we both dropped off checks to her.\n\nI spent some time that week monitoring the progress of the work being done on the townhouse. A phone call to Uncle Don gave me the inside scoop on the contractor Erin had hired. Don said that she had made an excellent choice and he expected no problems. He gave me a list of things to keep watch on and told me to call him if I had any questions. Don was Dave's father and like all my mom's siblings, he was always there for family. \n\nAnother surprise came that later in that week. The general tone in the campus gym wasn't too my liking, so I looked outside the school for a place to work out. Fortunately, there was another gym located right next to campus and students received a great discount in membership dues. The proximity gave me the option of being able to go in early before school or in the evening after classes. I went for mornings because it seemed like the best option to avoid the large amounts of people. On Wednesday morning while I was doing my last set on the bench press, I heard a familiar voice.\n\n\"So how did your exam work out?\"\n\nLooking up above me, I saw the familiar face of Officer Coles.\n\n\"Officer Coles,\" I said standing up. \"It's good to see you again.\"\n\n\"You can call me Debra,\" she said extending her hand. \"Your exam?\"\n\n\"Oh yeah. Professor Grant gave me extra time to complete the exam. I ended up getting a 100 on it.\"\n\n\"Good to hear my time was well spent,\" she said with a grin. \"Think you'd mind spotting a girl?\"\n\n\"It would be the least I could after your help with my final exam,\" I replied.\n\nI spent the next hour working out with Debra Coles. Actually, I spent the next hour working hard to keep up with Debra Coles. The woman was not only strong but had quite a bit of endurance. I ended up quitting the treadmill before she did. Like me, she lived rather close to the gym and didn't bother to bring her street clothes with her. She asked me what days I worked out. I told her that I would be here Monday, Wednesday, and Friday mornings. She said she would see me on Friday morning and before I could respond, she was in her car and driving off. Sure enough, Debra was at the gym on Friday morning and I spent just over an hour going through various machines and exercises with her. We talked during our sets and I learned that she was 34 years old, separated while going through a divorce, and had three kids. One daughter who was fourteen and twins that were ten years old, with one boy and one girl. Her story was slightly different from Erin's, but when you boiled away the details it was another case of one man who wanted a younger woman. I really couldn't see why. Debra was five-foot seven-inches tall, blonde-hair, soft green eyes, a great smile, and a terrific body. She wore clothes that hid most of it in the gym, but as we walked to the car on Friday, she took off her sweatshirt that covered the sport shirt underneath. There wasn't a part of Debra's body that wasn't cut and tone: arms, abs, and legs. Filling out her sport shirt was a nice set of breasts. Debra's body was positively jaw dropping.\n\n\"Wow,\" I said before I realized I had spoken out loud. \"Sorry, I just couldn't stop myself.\"\n\n\"Thanks,\" she said spinning around 360. \"I'd like to think all that hard work might turn a head or two. Not bad for a gal who's 34.\"\n\n\"Try not bad for a gal who's 24,\" I said while admiring her.\n\n\"What a nice thing to say,\" she said before leaning up and kissing me on the cheek. \"Plus, I rather like the way you look at me. That's why I asked you to spot me. Most men leer or stare. You look at me like I'm a treasure.\"\n\n\"Well you are ...\" I started.\n\n\"Don't even try to say another word. That is the nicest thing I have heard in a long time, so I am going to keep the thought all weekend long. Have a great weekend Justin.\"\n\n\"You too Debra,\" I said as she got in her car.\n\nThat weekend was the one before the first round of midterm exams. I studied hard all weekend and Erin did her part to keep me well fed and relaxed from Friday night until Sunday morning. Sarah joined us for breakfast, showing up at just the right time. The girls revealed that they were getting together for dinner at least once a week, and I was amazed at how quickly they were acting like best friends. The inside jokes and silent communication would have been annoying if I hadn't know each of them so well. Sunday was entirely a day of study with Heidi and Tony joining Sarah and me for a day of cramming. Monday morning, I went to the gym looking forward to working out and working off some of the pre-exam stress. Debra was kind enough to work me hard but not work me to the point of exhaustion. She also recommended some protein supplement powders to add to shakes to help my recovery between workouts. I was nineteen, but I wasn't above accepting the advice of someone who clearly knew what she was doing. All of the kids were brought up not to judge a book by its cover, but Uncle Don and Uncle Mike made certain I never underestimated someone because of their appearance. That night, I stopped by a local market that specialized in healthy foods and products. I purchased a few of the items from Debra's list and tried them out when I got home. When I woke up the next morning, I was pleasantly surprised to find that the routine soreness in my muscles was not there at all.\n\nOn Wednesday, another surprise came 30 minutes before my first exam that week. I received a call from Professor Grant and she asked me to come to her office before heading over for my exam. When I got there, she was waiting for me and slowly locked the door to make certain no one in the hall heard the click. She turned and with a huge grin on her face, she undid my jeans and lowered them down my legs.\n\n\"This is for you Mr. Rhodes,\" she said in that professor tone that always drove me wild. \"I want you to be in the perfect mindset when you take your exam. Since you don't have much time Mr. Rhodes, don't hold back.\"\n\nShe pushed me back onto the same couch that we shared that first night and opened her blouse. By the time she was on her knees in front of me, I was already hard. Professor Grant went to work on my cock with that exquisite stroking-sucking technique. As if I could ever hold back against such pleasure. Only seven repetitions of her hand and mouth working me had on the verge of orgasm. As she took my dick deep into her mouth, I let my head fall back as my hips pushed up. My goddess used her mouth and throat to milk the cum from my balls. When I was done cumming, she licked and sucked me clean before pulling back to give me room to stand up. When I did, she stayed on her knees and tucked me back into my clothes. Then she stood up and kissed me deeply. ",
        "When she pulled back, she whispered, \"So long as you continue to excel in your course work, you keep getting this before every exam.\"\n\n\"Thank you Professor Grant,\" I whispered.\n\n\"You can thank me on Friday. After a week of giving you blowjobs, I am going to be so wound up that I will need you to fuck me senseless.\"\n\n\"As you wish,\" I said while bowing. \n\nErin was right and my mind was very clear during the exam. I finished with time to spare. The same thing occurred on Thursday and on Friday. I had four exams that week, but I was completely focused while I took them. Friday evening I found out that I had done very well on all four exams. Professor Grant stopped by my office to inform me that I scored over 90% on all of them, with my lowest grade being 93%. Evidently, my role on the research grant had all of my professors keeping Professor Grant informed immediately on my scholastic performance. Before leaving, she mouthed 'nine sharp and be in your bed waiting for me'. Fortunately, Heidi and Tony were going to a concert tonight so I wouldn't have to worry about coming up with a reason for not going out with them. Sarah was working the entire weekend. That left me with two nights and two days to spend with my goddess.\n\nOn the way home, I went to the store and stocked up on groceries. There was a candle store in the shopping center, so I went in and bought a large number of candles. The woman who was running the shop was very helpful. The combination of her demeanor and the scents from the candles had me completely at ease. I told her I was spending the next couple of nights with someone very special and she spent almost an hour educating me on candles. In the end, she recommended a variety of scents that all used pure essential oils. Unlike candles that used synthetic fragrances, these candles wouldn't bother my nose. The ones with perfumes always made me sneeze. Erin had been so generous to me this week; I wanted to spoil her for a couple days to show my appreciation. Upon my arrival at home, I started the barbeque and threw a steak on the grill while I put everything away. Somehow, I thought I would need the protein. I had some rice, greens, and a blueberry smoothie. \n\nAt nine o'clock sharp, I heard the garage door open and the car pulled into the garage. I had arranged eight candles around the room, emphasizing the scents of Jasmine and Ylang Ylang. I heard the door open and looked up to see Erin enter. She was wearing an outfit comprised entirely of black fishnet. There was a body suit made of a smaller mesh that covered most of her body. It had straps that went over her shoulders and the front came down to just below her waist, leaving her pussy was completely uncovered. Her legs were adorned in fishnet thigh-high stockings. Combined with the fishnet body suit, the outfit served only to highlight her exposed sex. To top it off, Erin was wearing black pumps with a four-inch heel and straps that went up her calves. I looked up to see her staring at me. There was neither grin nor smile. Her lips wore a bright red lip stick. She didn't speak, but then she didn't have to. The look in her eyes said only one thing: you're dead. I was amped up waiting for her, but the sight of my goddess in that outfit looking at me in that manner had my cock twitching.\n\nShe walked over the bed without saying a single word. Climbing onto the bed, Erin maneuvered into position over my face. Looking up, I saw that she was extremely aroused. Her pussy was already wet and her lips were full. I felt her breasts against my stomach as she leaned forward. Erin breathed out slowly and I could feel the warm air against my shaft. Slowly, she parted her legs further and sank lower to bring her pussy to my mouth. I could smell her arousal, and the musky scent of her pussy quickly drowned out the scent from the candles. Wrapping my arms around her thighs, I pulled her pussy to my mouth and buried my tongue in her. Erin moaned loudly at the touch of my tongue and began slowly grinding her sex against my mouth. Her juices were flowing freely and within seconds my mouth and chin were wet. I could feel her breathing hard against my dick as she moaned. I continued to pleasure her with my mouth. When she pushed back and put her clit at my lips, I pulled her button into my mouth and sucked gently. I wrapped my tongue around her clit and nursed on it.\n\nAfter a few minutes, she moved forward and pushed her lips to mine. I opened my mouth to accept her gift, burying my tongue inside her. The taste was intoxicating. Wrapping my lips around her entire sex, I sucked hard enough to let her feel me pull her pussy lips into my mouth. Erin was moaning loudly now. She pushed back to offer her clit to me again, and I responded by working her button as best I could. When I sucked it into my mouth, Erin took my dick into her mouth and sucked hard. I moaned into her sex, and she responded in kind. She pulled back and took a deep breath before taking me fully into her mouth. Her mouth and throat were performing that exquisite milking action she knew so well. I groaned into her pussy and sucked her clit hard into my mouth. Erin's body responded and I felt a fresh wave of juices wash over my mouth. I doubled my efforts and held her down hard against my face. Erin pulled my cock out of her mouth and I pushed her body up enough to take in a deep breath of air. I pulled her down hard against my mouth, burying my tongue into her soaking pussy. Her clit was rubbing against my chin and she groaned loudly. I sucked her pussy lips into my mouth and worked her sex hard. I knew my goddess was close to orgasm and her mouth had me close as well. She took me deep into her mouth once more and started working my cock feverishly with her sweet stroking-sucking technique. If my goddess wanted me to cum in her mouth as she came in mine, she was going to get her desire.\n\nI felt her body began to shake and I just continued working her pussy, licking and sucking. I focused everything I had onto her orgasm. I pushed my face into her sex, burying my tongue as far into her as I could while grinding my chin against her clit. My hands held her down against my mouth, which allowed me to feel her shaking grow. I felt her mouth and hand working my cock harder and harder. My balls began to tighten up and I felt my hips lift off the bed pushing into her mouth. I felt the warmth of flesh against my thighs, but knew I was mistaken. I felt sweat on my arms and realized that my goddess had me so worked up, that I my body temperature was rising. I pushed her up to take in a quick breath and my goddess continued to work my cock. Erin began humping her hips against me, causing her pussy grind down into my mouth. My body screamed for oxygen, but I would not let my goddess down. I sucked hard and felt her body begin to spasm. Then my goddess came. Her hips were thrashing about, grinding her pussy against my face and she was moaning loudly.\n\nWait, she was moaning loudly? But her mouth was still working my cock and working it hard. Two microseconds later, the realization hit me like a freight train. I had felt flesh against my thighs. As if to confirm this, I felt a pair of tits push against my thighs while two arms wrapped around my body. My dick was pushed down into a hot, wet mouth that was now milking me. My body began shaking at the thought and my goddess responded to my body's reaction. She began wailing as a second orgasm washed over her. As her pussy drenched my face, I came hard. As my body shuddered over and over, Erin's body responded in turn. She was riding one long orgasm as I came in the mouth of the mystery woman. Every time my cock pulsed in the throat of this other woman, I grunted into Erin's pussy. Each grunt elicited another cry of pleasure from my goddess. Finally, I collapsed against the bed spent.\n\n\"Close your eyes Justin,\" Erin said.\n\nI did and felt her slowly move from her position over me. At the same time, I felt the mouth pull off my cock. My brain raced trying to answer the question of who that mouth belonged to. I soon felt both women settle over my spread legs. One pussy pushed against my left thigh and a second against my right. I thought for certain I would be able to tell which one was Erin, but both ladies were positively soaking. From the position of my legs, I had to imagine both women were sitting against one another. That thought made my cock twitch and I realized I was still hard. Then again, how could I not be hard? There were two naked women here with me.\n\n\"You can open your eyes now baby,\" Erin said softly.\n\nI looked up to see Erin and Maria looking down at me. Erin sat on my right thigh and Maria on my left. My cock twitched again. My eyes drifted down their bodies. Maria was wearing an outfit identical to Erin's. As I had previously guessed at the club, Maria's tits were every bit as spectacular as Erin's. They were sitting against one another with an arm wrapped around the other. Although covered in black fishnet, Erin's right breast was pressed against Maria's left. I could feel both women grinding their very wet pussies against my thighs. As I looked down, I could see the very familiar patch of light blonde hair that adorned Erin's pussy. My eyes darted over to see a slightly thicker patch of dark brown hair adorning Maria's pussy. My balls throbbed at the sight.\n\n\"I think he's in shock,\" Maria said with a giggle.\n\n\"I ... uhhh ... wow ... uhhh,\" I said incoherently.\n\nAfter all, these two women had bodies men have wet dreams over ... and they were sitting on my thighs.\n\n\"Can you blame him though?\" Erin asked with a grin.\n\n\"I see he's not that disoriented though,\" Maria said while grasping my hard cock. \"And this is good because I have yet to cum.\"\n\n\"Now Mr. Rhodes,\" Erin said with her professor voice. \"You don't want to be rude to our guest do you?\"\n\n\"No Professor Grant,\" I replied.\n\nMaria rolled off my left thigh onto the bed next to me. Erin moved to my right and pulled me up next to her. Turning towards her friend, Erin moved to my side and reached around to grab my hard cock.\n\n\"Justin,\" Erin said softly.\n\n\"Yes Erin?\" I replied while turning to face her.\n\n\"I know you have questions and there will be time later for answers.\"\n\nI just looked into her eyes. I was 19 and this was the type of situation any man of any age would dream of being in. But I loved this woman so completely. As much as I so desperately wanted them both, I could not and would not risk what I shared with Erin.\n\n\"However, right here and now my love, you are to enjoy both us because we are certainly going to enjoy you.\"\n\n\"Are you sure?\" I asked.\n\nWith a naughty grin, my goddess looked at me and said, \"Wreck her.\"\n\nI moved between Maria's spread legs. She shared my smile as I let my cock slide up and down her slit. Her pussy lips were full and wet. They felt good against my hard shaft. I reached between us and took my cock in my hand. Maria groaned loudly as I slapped my dick against her clit. I groaned when I felt her hand wrap around my cock and push it down. We both sighed together as the mushroom tip of my cockhead sank into the soft, wet mouth of her vagina. Any hesitation I had faded when I felt Erin lean in behind me and slowly push me into her friend. Maria wrapped her legs around my waist and held me there. Her pussy felt good; really good. Her big beautiful brown eyes just stared up at me as she began to rock back and forth, starting us into a slow rhythm. I followed her lead and began stroking in and out of her hot sex, savoring the feeling of her pussy wrapped around my cock. She moved with me, matching me stroke for stroke. I noticed movement to my side and my eyes darted over to see Erin fingering her pussy while she watched Maria and I fuck. I was grateful that I had already cum earlier. If I had not, fucking Maria while having Erin watch would have made me lose it far too quickly to give Maria the orgasm she wanted.\n\nI began to give Maria long strokes, pulling back until just my head was inside her wet sex and then driving back into her as deep as I could. Maria was thrusting her hips up into me with each stroke in an attempt to get my dick even deeper into her hot sex. Again and again, I pumped in and out of Maria's wet pussy. I kept my concentration on her eyes. Staring into those beautiful brown orbs was helping to keep my focus on her pleasure instead of my own. Occasionally I saw her eyes close as I kept that measured pace. It was neither hard nor soft, but a simple yet methodical tempo that had me withdrawing almost completely from her and then driving back in. As I pulled back, I could feel her cunt tightening down on my shaft as if to hold it inside. Her breasts would rise slightly as she took in a breath of air to use when I pushed back into her. As I pushed in, that pressure she exerted when I pulled back let up just a bit as if to give me access to the depths of her pussy. As I bottomed out against her, I made certain my groin was hitting her clit and each time she whimpered in approval. I drove deep into her and leaned down to kiss her deeply. Her arms wrapped around me and I could feel her body clinging to mine.\n\nEven crushed between the bed and me, Maria was doing everything she could to stay with me. Her body was clinging so tightly to mine that I could pull back no more than an inch. That inch was more than enough to grinding against her sex again and again. I felt her body get very warm against me and she was whimpering continuously. Then as I drove into her, Maria came. Each time I pushed into her pussy, her body would tighten up and release. These waves kept hitting for what seemed like twenty or so repetitions before her arms and legs wimp limp. She collapsed against the bed, but now I could see an intense hunger in her eyes. From the light sheen of sweat that covered her body and how slick her pussy felt, it was obvious that Maria had come very hard. The look in those big brown eyes told me that she was just getting started. She pulled herself up and kissed me deeply. Although my pace was now far slower, I kept slowly stroking back and forth inside Maria.\n\n\"I needed that,\" she said as she pulled away. \"That was nice. You let me build so slowly until I found my own peak.\"\n\nShe leaned up and kissed me again.\n\n\"But now you sweet man, I want you to fuck me.\"\n\n\"And by fuck you mean ...\" I started to ask.\n\n\"By fuck I mean hard. I mean deep. I want you to pound my cunt as hard and fast as you can. Think you can manage that or do you need a break?\"\n\nMaria was taunting me and she knew it. I was not above letting this hot fucking woman push my buttons though. After all, why would I object to her request? I grabbed her right thigh and dragged her to the edge of the bed slowly. I would have gone faster, but I didn't want to pull my cock out of her pussy. As I got the edge of the bed, I slowly lowered my legs to floor. The motion finally caused my cock to temporarily withdraw from her dripping vagina. As she moaned, I looked over at Erin who was just grinning at me. Her hand was still working her pussy, but the look in her eyes was what got my attention. She knew I was about to pour everything I had into making her friend orgasm over and over. Better yet, I had her complete approval. I held her right thigh against my chest, which put Maria on display for Erin. From this angle, my goddess would have the perfect view of what I was doing to her best friend. I put the head of my cock into the warm pocket of Maria's pussy and started pumping with very short strokes. Only the head of my cock and another inch was penetrating her sex. I wasn't looking at Maria. Instead I was looking at Erin and I have to confess that being inside Maria while staring into Erin's eyes was one of the most erotic things I have ever done. After a minute, Maria finally got impatient enough to let me know she wanted more.\n\n\"Just what are you wait...,\" she started.\n\nAs soon as she spoke, I drove into Maria as hard as I could. Standing against the bed while holding her leg against me gave me a lot of leverage and I managed to drive into her steamy cunt very hard. It knocked the wind out of her and even Erin was surprised at how loud the slap of my flesh against Maria's was. I pulled back slowly, giving Maria a moment to catch her breath. Just before the bulb of my cock head stretched the opening of her pussy, I slammed back into Maria once more. I repeated these motions, pulling back slowly until I was almost out of her and then driving into her as hard as I could manage. Each time, Maria moaned loudly. Each time, her wonderful tit flesh bounced in response. Each time, the look in her eyes told me she was getting closer. After twenty such poundings, I simply held her thigh tightly and began to fuck her in earnest. A few minutes later, Maria came. I kept fucking her hot cunt. A few minutes after that, she came again and began to whimper repeatedly. I kept pounding her furnace of a pussy. My body should have tired, but there was simply too much stimulation for me to succumb to fatigue. As I fucked Maria hard and fast, her tits were rolling around so perfectly on her body. Her fingers were now playing with her hard nipples and she was mewling continuously. It was as if she was having one long continuous drawn out wave of pleasure that was softly rolling against her. Every few minutes, the wave of orgasm would crash down over her. And if that was not enough, Erin was furiously rubbing her pussy with her right hand while pinching and twisting her right nipple with her left hand.\n\nAs I felt the familiar burning in my balls, I realized that this stimulation was beginning to get the better of me. I needed to finish Maria so I could finish inside her. Leaving my left arm around her thigh, I reached down with my hand and found her clit. It was so slick that I could not pinch it. I started rubbing it and Maria responded immediately. Her mewls and whimpers turned into loud groans. I was too close to orgasm and feared that I would be able to push Maria over the edge with me.\n\n\"Let me,\" Maria said as her fingers pushed mine off of her clit.\n\nI closed my eyes and focused on that singular task. I held Maria's right leg tight against my chest for advantage and began to fuck her as fast as I could.\n\n\"Fuck yes,\" I heard Maria exclaim.\n\nMaria's pussy was having spasms and my body reacted in turn. I felt my hips begin to thrust faster. I heard her groaning with me. I was rutting Maria and she was loving it. I was at the end of the line however, and my entire body tightened up as I prepared to cum. Maria beat me there by two seconds. As my body pulled back one last time, Maria yelled for me to cum with her.\n\n\"Now Justin ... cum in me now ... PLEASE NOW ... OOOOHHHH FUCKKKK\"\n\nI did just that. I slammed back into Maria's welcoming pussy and I came hard. Her cunt squeezed down tight around me and I knew that she could feel each time my cock lurched inside her. I was grunting loudly as I filled this delicious woman with my seed. Hunched over pumping my cum into her, I saw that Maria's body was shaking. My brain was on overload, because I could barely register the feeling of her body shaking with mine. I could hear her though. Maria wailed as she came again and again. My body finally loosened up and I slumped forward. With the exception of some of the orgasms I had shared with Erin, this was the most intense one I had ever had. I looked over at my goddess to see the fire in her eyes. Erin's beautiful blue eyes revealed just how much in need she was.\n\n\"She needs you,\" Maria said and I realized Maria must have seen it too.\n\nThere was a very noticeable slurping sound as I withdrew from Maria's well fucked pussy. After those two glorious orgasms, I should have been getting soft but I wasn't. I was nineteen with two positively ravishing women in my bed. Somehow, my body decided it would get all the rest it required later. Right now, all it wanted to do was partake in the treasures my goddess and her friend were offering. I wasn't even fully on the bed when Erin pounced me. She pulled me up onto the bed and quite literally threw me onto my back. Before I could do anything, she was straddling my body and was grinding my sticky cock against her sex. Looking into her eyes, I saw the beast. The roles were a little different from those just ten minutes ago, but I decided that as Maria taunted me, I would taunt Erin.",
        "\"Are you going to fuck me or just think about it?\" I asked with a grin.\n\nThe result was immediate. Erin's eyes grew wide at my incredulous statement. I felt her hand grasp my dick and push the head against her lips. With a grace and ferocity that surprised me, my goddess slammed her hips down and took my cock into her tight pussy with one stroke. Her hands held me down against the bed as she fucked me. Given the look in her eyes, I was not surprised at how fast she managed to work her body on my cock. No matter the circumstance, Erin and I would always be making love. But right here, right now, Erin Kristine Grant was fucking me - pure and simple. Only the tiniest glimmer in her eyes told me that she actually knew who I was. The other 99% of her was pure animal. Two minutes after she started, her head shot up and she screamed in orgasm. Her body didn't stop though. With her head hunched over as she continued to work herself up and down my cock, she grunted through another orgasm a minute later. I had never felt Erin pussy as hot or tight or wet as it was right then. Her cunt was having continuous spasms and it felt as if her sex was trying to suck the cum out of me. My goddess had a single-minded goal: pleasure. She needed to cum until she was spent.\n\n\"Again,\" I barked. \"I want to feel that pussy cum again on my cock right fucking now!\"\n\nMy goddess complied. Slamming down, she rolled her hips in circles on top of me. She made it through one rotation when I felt the orgasm start. By the end of the second rotation, she was screaming obscenities at me. By the third, my fingers found her nipples and pinched them neither hard nor soft, but just enough to hit her with a new set of sensations. Erin froze and then rocked on top of me. She froze again and then rocked again on top of me. I looked up and saw her staring deep into my eyes. Her jaw was hanging open and her breaths were deep and ragged. Erin was cumming. She froze again and again rocked again on top of me. My goddess was cumming so hard she couldn't even make sounds. The sensations I had felt in the past month paled in comparison to what I was feeling right now. I had never felt Erin's pussy as slick as it was then and there. Even still, her pussy was clenching down on my shaft harder than I thought possible. Her spasms were slowing down, but in her eyes I saw what she needed. Those blue orbs were begging me to cum in her and I wanted to. With everything I had done the past hour, I needed just a little bit more to push me over the edge. Given where she was at, I knew I was not going to be able to cum with her. Then Maria lent a hand. As her hand began to gently knead my balls, Maria spoke softly to both us.\n\n\"Cum in her Justin. She wants it. She needs it. Take him Erin. Take his seed into your body where it belongs.\"\n\nAs good as Maria's hand felt, hearing Maria say that was all I needed. My hips pushed up and I came in my goddess. My balls burned as they heaved over and over, spitting their seed into Erin. Spitting their seed where it belonged. Erin's entire body convulsed with me. She might have fallen over if Maria was helping to keep her steady. Erin was sobbing as she came in one long hard orgasm. As good as the orgasm with Maria had felt, this one with Erin Grant was better. I roared as I came in her and then everything went black. \n\nA short time later, I woke up and realized I had two women sleeping beside me. I stretched to see the clock, when I heard Maria whisper that it was almost eleven. Evidently only one of them was sleeping. I heard a soft giggle and realized Erin was awake as well. Okay, so the nineteen year-old was the one who passed out and the two 40 year-olds managed to keep their heads.\n\nErin leaned up, kissed my cheek, and said, \"I passed out too.\"\n\nI turned to kiss her on the forehead.\n\n\"Spa please,\" she whispered.\n\nI slowly extracted myself from the embrace of those two ladies and went downstairs. I stopped in the kitchen before heading outside. My body needed replenishment. In addition to some orange-pineapple juice, I sliced up two apples, a passion fruit, and a banana. I threw in some of the protein powder Debra recommended and turned it on. Stepping outside, I opened the gazebo and turned the spa on. Back inside, I stopped the blender and poured the contents into a large glass and drank what remained directly from the blender. I grabbed a pitcher of water and three glasses, and set them on the corner of the spa. Ten minutes passed before I made it back upstairs. I entered the room to find Erin and Maria shedding what little remained of their fishnet outfits. They just giggled as they walked up to me.\n\n\"All clean,\" Erin said before she kissed me deeply.\n\nThen Maria kissed me deeply and said, \"If you'd hurried, you could have watched.\"\n\nMaria's comment hit me like a truck. They had cleaned up each other. As I smacked my lips and tongue, I realized that both kisses had me tasting a bit of Erin, a bit of Maria, and bit of me. They both giggled as they walked downstairs. I followed them, admiring the forms of these two walking dreams. Maria was taller than Erin, standing five-foot eight-inches to Erin's five-foot four-inch frame. Erin was a blonde while Maria was a brunette through and through. Maria's skin had more color to it than Erin's pale complexion. Both of them had marvelous tits, and now that I had seen her naked, I had to assume Maria's bust was the same size as Erin's. Their hair went halfway down their backs and just like Erin, Maria had a perfect ass. There was one other thing they had in common. Both ladies walked in that delicious way that made their ass rock subtly side-to-side. Life was good. No, life was fucking great.\n\nAs we passed through the kitchen on our way outside, Maria took a sip of the smoothie I made. She told me I should make another and since the next one was for me that I might want to put more protein powder in it. I heard Erin laughing outside at that comment. I just grinned as I pulled the ingredients together to make another smoothie. Per Maria's advice, I doubled the amount of protein powder I put in it. Putting the smoothie in another large glass, I joined the two women outside in the spa. We sat in the spa for over an hour, letting the heated water work its magic on our exhausted bodies. I learned that Maria was a doctor, 41 years-old, divorced for two years, and had three kids. We shared some stories, but mostly I listened to the two of them talking about their lives. I also learned that this wasn't the first time they had done something like this, but that the last time occurred when they were in college. Maria did compliment me on remaining focused on their needs instead of just my own. Erin told Maria to wait until the next time when the initial shock of two women wore off and I could really focus.\n\n\"Erin, you and Maria are the kind of ladies that men have fantasies about: beautiful, smart, charming, and absolutely erotic beyond words,\" I said.\n\nBoth ladies just beamed at that.\n\n\"But being with both of you at the same time is something that could never, ever stop shocking me.\"\n\nEventually, the ladies said it was time for bed, so while they went upstairs, I closed down the gazebo. After locking up, I joined them in the shower to rinse the chlorine off our bodies. Recharged from our time in the spa, we spent nearly an hour in the shower. Both ladies demanded another orgasm before going to bed and I managed to give each of them two before I surrendered to my own. When we got out, they toweled me dry and sent me to bed first. After drying their hair, the ladies joined me. They directed me to the center of the bed and took up positions on each side of me. Erin was on my right and Maria was on my left.\n\nI kissed Maria on the lips and said, \"I lust you.\"\n\n\"I lust you?\" Maria asked. \"I lust you. I like that. I lust you too Justin.\"\n\nTurning my head the other direction, I kissed Erin on the lips and said, \"I love you Erin.\"\n\n\"I love you too,\" Erin sighed in return.\n\n\"You can keep him,\" Maria said with a giggle.\n\n\"And you can borrow him from time to time,\" Erin giggled in return.\n\n'From time to time' I thought with a sigh. Life was simply amazing.\n\n* * * * * * * *\n\nI woke up with Erin staring at me. She straddled me and informed me that Maria was downstairs making breakfast. She stared deeply into my eyes and, in a soft voice, asked me to love her. I did just that, making slow love to my goddess. With her arms and legs wrapped tightly around me, we both came intensely ten minutes later. I was going to throw on some sweats, but Erin told me to just go downstairs like I was. She was grinning, so I assumed this meant Maria would want some morning loving as well. Erin was only behind me by two minutes. She rounded the corner into the kitchen to find Maria on her knees slurping on my dick. Erin surveyed the breakfast items being cooked and smiled at me.\n\n\"You have ten minutes before breakfast is served Mr. Rhodes,\" she said with a mischievous grin. \"You have that long to make her cum. And you can't cum before she does.\"\n\nI pulled Maria to her knees and led her to the French Doors that led outside. Opening the doors, I took one of the cushioned chairs from the table and placed it in front of the open doors. It was facing back into the kitchen, but Maria just grinned as if she read my mind. She got on the chair and kneeled on it, but faced towards the open doors. She had her tits pressed up against the back of the chair and was looking out over the city-view that the backyard afforded. Wrapping her arms around the back of the chair, she looked back at me and told me to 'come and get it.' I got right behind her and slid the head of my cock up and down her slit. Maria sat down on her knees until she was at the perfect height. I pulled back and pushed my cock against her labia. Maria's pussy was already soaking wet and little force was required to push into her. She moaned as her pussy stretched around my cock and sighed when I was completely in her.\n\n\"Eight minutes,\" Erin sang from the kitchen.\n\nGrabbing Maria's hips, I started fucking her with full strokes. A nice steady rhythm, the tempo was perfect, because this position was great and I wanted to enjoy taking her like this. Maria's pussy was exquisite. There was something slightly different that Erin's, but her sex felt great wrapped around my cock. Maria moaned softly as I continued this pace. I maintained that measured pace and savored the feeling of Maria's vagina sucking on my shaft until I heard Erin tell us we had six minutes left.\n\nMaria looked back at me and said, \"I'm only going to need four or five. Can you keep this tempo? In this position ... the angle ... it feels heavenly.\"\n\n\"Oh yes,\" I replied.\n\nShe smiled in response and let her cheek rest on top of the chair's back. I reached around Maria and cupped her tits. She moaned as my fingers found her hard nipples and I held them between my fingers. Every time my groin hit her ass, I pinched those nipples gently. Soon, Maria was moaning loudly and growing just a little louder with each thrust. I focused on her, and maintained the measured pace of sawing in and out of her wet pussy.\n\n\"Four minutes,\" Erin said coolly from the kitchen.\n\nMy fingers continued to manipulate Maria's nipples as I stroked in and out of her pussy with that measured pace. She kept moaning in time with my thrusts and I saw her arms holding the chair even tighter. Her pussy was beginning to flutter around my cock and the feeling was incredible. It was difficult to refrain from grabbing her hips and pounding her for all I was worth. As I continued, I could feel her getting wetter and hotter. Maria began crying out.\n\n\"Oh fuck yeah ... ohhhh ... ohhhh ... keep pumping that cock ... keep pumping me ... ohhhh ... ohhhh\"\n\nI felt like a track sprinter, nearing the finish line and trying to maintain my form.\n\n\"Don't stop ... ohhhh ... ohhh ... fuck yeah ... so good ... so fucking good ... OHHHH FUCK\"\n\nI felt the warm rush of air at my left ear.\n\n\"Two minutes,\" Erin whispered.\n\nI began to pinch Maria's nipples harder as I fucked her with that steady tempo. Maria just got louder. I kept pumping her in that measured tempo. Maria started groaning loudly and I kept pumping. Suddenly, her head shot up and announced her orgasm. I kept pumping. It washed over her and I kept pumping. I could feel her juices washing down over my cock but I kept pumping. Her pussy was clenching and releasing around my cock, but I kept pumping. From the way her body was shuddering, I was certain that her orgasm had rolled into another and then into another. But I kept pumping.\n\n\"Less than one minute,\" Erin whispered in my ear as Maria continued to ride out her orgasm. \"Are you there baby?\"\n\n\"So close Erin,\" I replied while panting. \"So ... fucking ... close ...\"\n\n\"Cum in her,\" my goddess softly commanded. \"Go ahead and cum in her pussy. Cum in Maria's cunt right now.\"\n\nMy measured pace had finally broken down and I was fucking Maria hard and fast. Erin put her mouth right next to my ear.\n\n\"I know on some level that this appeals to you,\" she whispered into my ear. \"Fucking my best friend while I stand here watching, not to mention hearing me tell you to cum in her. It's okay my love, because it appeals to me as well. It makes me wet to watch you fucking her through the wave of orgasms she is having.\"\n\nI just stared at her. There were no coherent thoughts, just a blur of images screaming through my head. I managed to focus on her eyes. My goddess looked into mine and did far more than push me over the edge. She shoved me.\n\n\"Do it,\" Erin hissed. \"Fill her up with your seed. I want it leaking out of her while she eats breakfast.\"\n\nWith that, I came. Maria's body began to shudder again. I came harder than I thought I would have. Maria shook every time my cock lurched inside her pussy. It hurt as I came, my cock pulsing so hard I could feel it. Maria's pussy squeezed and sucked on my cock as I shot into her again and again. Finally, I pulled back and slumped back into a chair. As Maria had done previously, Erin kneeled down and sucked my cock clean. She stood up and kissed me deeply. I wrapped my arms around her and returned her kiss. I staggered over to my seat at the table and sat down. I guzzled down my water and then refilled the glass from the pitcher on the table. Erin sat down with me, but it was a good ten minutes before Maria joined us. Fortunately, Erin had placed her plate on a warming pad, so her food wasn't cold. Ten minutes later, our plates were clean and I was rinsing them off before putting them in the dishwasher.\n\nThe ladies made the remainder of the day a sex-filled romp that mortal men just dream about. I don't know how I did it, but I managed another six erections with those two nymphs. Every time I was ready to call it quits, my goddess would do or say something that made me rise to the occasion. I have to confess, it was mind-blowing to watch each of them eating my cum out of the other. I'd also been in sixty-nine positions before, but they had a better spin on that idea. I ate one while the other went down on me. When engaging in mutual oral pleasures, sometimes it's difficult to concentrate on the other person while receiving pleasure. This was not the case, and whoever was blowing me made a methodical job of it. Each spent more than 30 minutes on me while I spent that time on the other. Maria went down on me first. As I approached orgasm, the Erin held my head to her sex. I ended up grunting and writhing through my orgasm with my mouth mashed against Erin's sweet pussy, which only made her cum with me. Then they switched positions. It was a blissful hour that I enjoyed as much as they did. They made certain to continue to feed me protein laced smoothies all day, but even with them I was all but shooting blanks on that last cum. We drifted off to a nap around five o'clock. Erin woke me just before eight. She and Maria were fully dressed and heading out to a late dinner with other friends in their group. I walked both women to the garage and opened the car doors for both. Maria gave me a deep kiss and told me she looked forward to seeing me again soon. Erin kissed me as only my goddess could and told me she would be back later tonight. I went back upstairs and collapsed into my bed.\n\nSometime after midnight, I felt Erin crawl into bed with me. There were no words. She curled up against me and joined me in a blissful sleep.\n\n* * * * * * * *\n\nI awoke to the smell of bacon and coffee. I don't drink coffee, but the aroma wakes me up just the same. I brushed my teeth quickly and rinsed my mouth with mouthwash before heading downstairs. After a morning kiss, we sat down to breakfast. There was idle talk regarding the day's activities and the tasks upcoming this week. When we were finished cleaning up, Erin crawled into my lap and finally broached the topic that was consuming my mind.\n\n\"You haven't asked me why,\" she said looking into my eyes.\n\n\"I figured you would tell me when you were ready.\"\n\nErin took a deep breath before beginning.\n\n\"Every part of who I am tells me that we are going to spend our lives together,\" she said.\n\nI couldn't argue her statement. In only a few weeks, I had fallen in love with this woman. Erin drew in another deep breath and continued.\n\n\"Your age doesn't matter at all to me because in my heart I know you are an old soul. However, you're also in college and there are things you need to experience. More importantly, there are things I want you to experience. As I reflect back upon my life, I can see how everything that I have done has brought me to this point with you. All of those life experiences have given me the wisdom to realize where we are at and how good we are together. So even though you are an old soul, you have yet to go through some of those things. As I thought about it this past week, I realized that you should have them.\"\n\nShe smiled at me and continued.\n\n\"With what you have planned for your life, your college days are going to be filled with work. There's nothing wrong with work, but believe me when I say that college is a time for fun as well. I worked my tail off during college, but I made certain to enjoy my time as well. I don't think I could have survived if I didn't and I know you are going to need that kind of fun in between the times when you are working your ass off.\"\n\nAs I looked at Erin, I began to realize where this was going.\n\n\"Most of all, I love you with you all my heart and I know you feel the same. If we are going to spend our lives together, it is important to me that you feel as I do: that everything you have done in your life has led you to this point with me. So with all of that said, I am going to make certain your college years are filled with fun and pleasure and that you have those key life experiences.\"\n\n\"Help me?\" I asked, trying not to sound incredulous.\n\n\"Yes silly,\" Erin said with a playful slap. \"Like yesterday with Maria, but other things as well. When I said I enjoyed my college years and had a lot of fun, I meant it. I traveled and had more than my share of wild encounters. I want you to do the same. I want you to have those memories.\"\n\nI just stared at her with my jaw hanging open.\n\n\"There is one thing though,\" she continued.\n\n\"Yes,\" I said waiting for the punchline.\n\n\"\"I have final say on anyone you sleep with,\" she said with a grin.\n\n\"So you're telling me you want me to fuck other women, but that you have to approve them first?\"\n\n\"Well ... yes and no,\" she said and laughed before continuing. \"I want to insure that the people you are with are free of the emotional baggage that would ruin this. Plus, if anyone is touching my boyfriend, she should be both beautiful and exceptional.\"\n\n\"Like Maria?\"\n\n\"Exactly,\" Erin said softly. \"And in case you missed it yesterday, I am likely to be joining you during some of these adventures.\"",
        "I heard myself gulp at that thought.\n\n\"Two more things,\" Erin added. \"First, once I approve of someone, they are fair game. Therefore, Maria gets to have at you a few times a week. And believe me, after yesterday, she wants to. So with the approved people, you can make plans with them if you like, but I want you to reserve Saturday nights for us. I want that one night a week with you all to myself.\n\n\"Kind of like a date night,\" I offered.\n\n\"Date night,\" Erin said with a smile. \"I like that. Second, I was thinking that it would be even more ... fun to have someone surprise you. So I have come up with a phrase for people to say: 'Kristine says to try the rhubarb'. If someone should say that to you, then you know that they have my blessing and you have my approval.\"\n\n\"Wow,\" I said dumbly.\n\n\"What?\"\n\n\"Well, this is a bit ... overwhelming. I mean, Erin ... I could go on for hours about what the thought of you does to me. I walk around sometimes having the most torrid thoughts about you. The images you inspire push my buttons in ways I cannot describe. I mean, there are times when I just want to walk into your office and take you on the spot. Now you tell me you're going to encourage me to ...\"\n\n\"But that is exactly why you need this Justin,\" Erin interrupted. \"At this point in your life, your body has needs. And with where we both are, I cannot always be there for you. And for now, it would be a really good idea if you were seen with other people from time to time.\"\n\nI had to agree. Sooner or later, people might put it all together. Until I graduated, we needed to keep a somewhat low profile.\n\n\"Can you give me some time to think about it?\" I asked.\n\n\"Now this is exactly the answer I knew you would give me,\" she said as she threw her arms around me. \"Most men would blindly jump at the chance, but not you. You actually have to consider it all.\"\n\n\"Well, I love you Erin and I don't want to screw that up. You are all that I need or want.\"\n\n\"I know my love. I know. But I want to do this for you and I want you to do this for me. I know you don't see it now, but trust me when I say this is important.\"\n\nI couldn't make sense of how this was important in the slightest. But I had trusted Erin to make this happen and she delivered. The base male in me wanted to just leap at this, but my heart screamed for restraint. Erin was a once in a lifetime catch and I did not want to lose her over something as trivial as this. Yes, having other women, even ones like Maria, seemed trivial to me.\n\n\"I can see you're on the fence. So why don't we put it on the shelf until Tuesday night. Dinner ... here ... 8PM sharp?\"\n\n\"Done,\" I said.\n\n\"Good. But right now Mr. Rhodes, your professor needs to be loved.\"\n\nSo I did just that. I took my professor to the bedroom and I loved her."
    ],
    "authorname": "NicholasTemplar",
    "tags": [
        "older woman",
        "milf",
        "teacher",
        "professor",
        "student",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-education-ch-03"
}