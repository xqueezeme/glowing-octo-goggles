{
    "title": "Hindsight",
    "pages": [
        "Chapter 1\n\nMary Ellen Jakowski sat in her kitchen with her good friend Dana Carter having their usual morning coffee. The two women had been friends since the Carters moved into the neighborhood five years ago. Their husbands, Richard and Drew, had become buddies as well. They were \"backyard\" friends, as their privacy fences were connected. In fact, they rarely went to one another's house through the front door. It was a one-block walk around the neighborhood to get to the front door. \n\nThe two women normally shared a lively morning conversation but today for some reason, Mary Ellen seemed quiet. She had just had her 35th birthday and was feeling a little down. However, it wasn't only the age thing that was bothering her. It seemed that her relationship with Richard was losing its spark. She knew that that wasn't unusual for a twelve-year marriage and after two kids, but it was difficult to accept nonetheless.\n\nSuddenly, as the women sat at the kitchen table, the door from the dining room flew open and the two Jakowski children came running through. \"Leslie and Brett, slow down,\" Mary Ellen yelled as they chased each other out the back door. \"Summer vacation is getting near and they will be home all day soon,\" Mary Ellen lamented, adding, \"There goes my peace and quiet.\" \n\n\"Why aren't they in school today?\"\n\n\"Some teachers conference or something like that.\"\n\nThey're getting big,\" Dana said with a smile, remembering how fast her daughter had grown. \n\n\"Brett had his tenth birthday two days ago and suddenly he thinks he is grown up,\" Mary Ellen laughed.\n\n\"Leslie is eight now?\" Dana asked. \n\n\"Yes, going on fifteen. She is quite a handful already so I don't know what I'm going to do when she becomes a teenager.\"\n\n\"I know all about it. We had a tough time with Jill at that age,\" Dana said, speaking of her 19-year-old daughter who was now away at college. Dana had gotten pregnant with Jill when she was eighteen and just barely out of high school. Sometimes she regretted having a child that early. However, the advantage was that now Jill was out of the house and she and Drew were still young. \n\nDrew was in his twenties when they met and married and he had wanted children right away. Dana had refused at first but she was young and eventually gave in to his pressure. It had all worked out for them anyway. They were financially well off now and life was good. \n\nMary Ellen sighed and gazed out the window at the children playing in the back yard. At least the kids were happy and well adjusted, she thought. \n\nRockmont was a great upper-middle class community with good public schools and plenty of public parks for kids to play. It had been a strain when they had bought the house eight years ago but it had been worth the struggle. Richard was making great money now with his PC support business and they had even joined the local country club. She knew that she should have been very happy but, unfortunately, there was a price to pay at home for Richard's success. He was rarely home since he started the business. He had promised in the beginning that the long hours and hard work was only temporary, until he got the business going. However, that was five years ago and he still worked eighty hours a week.\n\nWhile Richard's work was a big part of Mary Ellen's problem it was not the entire issue. Sometimes she thought he worked just so he didn't have to be around her. It seemed they rarely even touched anymore. Then there were the issues in the bedroom. It had been a long time since they had been intimate. For a while she thought that maybe Richard was having an affair and even considered hiring a private detective. However, deep down she knew that there was a major gap between their desires for sex. Unfortunately, the gap was about as wide as it could get now. Besides that, Richard had always been hung up about sex and refused anything but the basic missionary position. She had tried to talk to him about it but he refused to even discuss the subject. \n\n\nOn the other hand, it appeared to Mary Ellen that Dana had the perfect life. Drew seemed to be around her all the time. The fact that he worked out of the house had something to do with it, however it was more than that. She could see how loving the two of them acted around each other. They were like newlyweds, always touching and whispering little secrets to one another. They just seemed compatible. Besides that, Drew was incredibly handsome and sexy. He was in his forties but looked younger, even with his slightly graying hair around the temples. He was tall and well built as well-the rugged outdoors type. He owned some kind of marketing company and appeared to make it work by the sheer power of his personality. Mary Ellen was envious. Not because he was so handsome, but because he was so attentive to Dana.\n\nDana knew that something was bothering Mary Ellen. They had been friends too long. She knew it had something to do with Mary Ellen and Richard's relationship because there had been several strong hints. While she didn't want to pry, she was her best friend. \"What's the matter?\" Dana finally asked.\n\n\"Oh nothing.\" Mary Ellen sighed and looked into her coffee cup.\n\n\"Sure something's the matter,\" Dana responded. \"I've known you too long not to see it. We have always been able to share our problems. Come on.\"\n\nMary Ellen took a deep breath. She was dying to tell Dana but didn't want to burden her with personal problems. It was now or never she thought. \"It's... it's just that... oh I don't know, something's missing in our... in Richard and my relationship lately. He doesn't seem to pay any attention to me anymore.\" She knew that she was dramatically understating the issue.\n\n\"Have you tried sexy underwear?\" Dana laughed.\n\n\"I'm serious,\" Mary Ellen said and a little tear came to her eye.\n\nDana saw her eyes start to tear up and realized that she was indeed serious. \"I'm sorry Mary Ellen. However, I wasn't entirely joking when I said to try new underwear.\"\n\n\"It's more than that,\" Mary Ellen said and paused.\n\n\"What then? Don't tell me you're old. I'm older than you are. Besides, you have the body of a teenager.\" The older woman looked at Mary Ellen's slim form and sighed. \"I would love to have your shape. Nice sized boobs and a dynamite ass,\" she said with a wide grin. \n\n\"Nice sized boobs? They're too small, especially compared to your 36C's. And, my ass is much too big.\"\n\n\"Well, 36C aren't all they are made out to be. Gravity has a way of taking care of that. You will never have that problem. As for your ass, Drew drools over it. And, when you wear those little pink short shorts in the yard... well, I practically get raped.\" The older woman laughed loudly. \"I should buy all your clothes for you,\" she added with a coy smile.\n\n\"He does? Drew drools over my ass?\" Mary Ellen asked and then realized that she was acting a little too interested in what her friend's husband thought of her. Her face turned red with embarrassment.\n\n\"Yeah. Last week you were out back planting flowers and he saw you from his office window. I don't know how long he was watching you but when I came in to ask him if he wanted lunch... well, I thought you would have heard me scream. Boom, right over the desk.\" Now Dana's face flushed as she remembered what had happened that day. She knew that Drew was an \"ass\" man from the time that they met. In fact, they had started to have anal sex the first year they were married. Sometimes she thought that that was all they did. Not that anal sex was bad... no she loved it... sometimes it just seemed that she couldn't satisfy his lust. She worried about that.\n\n\"I never knew,\" Mary Ellen said thoughtfully. \"Sure, I see his eyes on me but every guy does that.\" Again, Mary Ellen realized what she was saying about noticing her friend's husband's admiring glances and added, \"I'm sorry.\"\n\n\"I'm sure every very guy 'does' look at that ass of yours,\" Dana laughed. \"Even I'm amazed by how trim and shapely your hips are after two kids. If I was a man...\" Dana paused and then said, \"Now I'm embarrassing myself,\" and she suddenly looked away from the younger woman and blushed. If she told her the truth, sometimes she had a difficult time keeping her eyes off of the younger woman. Dana had never had a thing for women but if she did, Mary Ellen would be on the list.\n\nMary Ellen blushed again as well. \"Well, thanks for making me feel better.\"\n\nAfter a long and somewhat uncomfortable pause, Dana took a deep breath and said, \"I still think you should consider the underwear angle. I hate to tell you this lady, but you need to spice up your wardrobe.\"\n\n\"What's wrong with my wardrobe?\" Mary Ellen said defensively.\n\nDana looked at Mary Ellen and bit her lip, trying to decide if she should go any further. This was a touchy subject, especially because she was already obviously feeling depressed. Dana didn't want to make the problem worse but she thought that if your own friends won't tell you the truth then who will. Finally she sighed and said, \"It has been getting a little shabby lately. I think some new things would do wonders for your sex life.\"\n\nAt first Mary Ellen looked shocked and hurt, but then her face showed resignation. \"I guess you're right. I have been neglecting myself lately and I'm probably in just as much of a rut as Richard. The truth is that I'm willing to try anything.\" She fell silent for a minute and then said, \"Maybe you could go shopping with me sometime and help me pick out some sexy clothes?\"\n\n\"I'd love to.\"\n\nThe back door suddenly opened and Drew came in. \"Hi sweetie,\" he said as he walked over to his wife and kissed her on the lips. Then he leaned over and kissed Mary Ellen on the cheek. \"How's my second favorite lady?\" he said and wrapped his arm around her shoulder.\n\nMary Ellen got a pretty pout on her lips and said, \"Second favorite?\"\n\n\"Well, only when my wife is in hearing distance,\" he whispered and then winked at her as he stood by her side and pulled her warmly to his hip.\n\nMary Ellen felt a little chill run through her when her shoulder touched Drew's hip. He was wearing a pair of shorts with sandals and a muscle shirt on top. His body showed the hours he spent at the gym and his bicycle riding. He was everything that Richard wasn't she thought. Mary Ellen sighed quietly. She knew that Richard wasn't a bad guy. He had provided them with a pretty good life and was never abusive to her or the children. Then, a little flash of guilt went through her. She loved Richard very much, but he was stuck in his ways. He came from a traditional Polish family and still held onto many of the old ways. Plus, he had begun to let himself go physically. Unfortunately, with his work, he didn't have time to work out and had let himself gain a good bit of weight. However, she tried not to nag him about it but she worried about his health. \n\n\"Hey, earth to Mary,\" Drew said with a laugh.\n\nMary Ellen shook her head and smiled up at Drew, admiring his handsome face and shining smile. Mary Ellen liked Drew. He was personable and funny. They had always shared good-natured kidding, often involving sexual innuendoes. Suddenly, after what Dana had said, the innuendoes took on a new dimension. That thing about him being an \"ass\" man struck a chord deep inside her. She felt a sudden pulsing in that secret place. That \"place\" that she could never mention to anyone.\n\nDrew looked at Dana and asked, \"I'm going up to Home Depot to get some things. Do you want to come along?\" \n\n\"Yes, I need a couple of things at the linen store next door,\" Dana answered and got up.\n\n\"I'll see you at the car,\" Drew said to Dana and then kissed Mary Ellen on the cheek again. \n\nWhen he pulled away, she felt his lips still on her cheek. Stop it! she scolded herself.\n\nBoth women watched the sexy older man walk out of the kitchen door. When Mary Ellen looked up, she saw Dana looking at her in a funny manner. Her face turned red again. \n\n\"Nice butt there huh?\" Dana laughed.\n\nMary Ellen didn't answer. She couldn't without embarrassing herself even more.\n\n\"Tomorrow okay to go shopping?\" Dana asked.\n\n\"That works as long as we do it before the kids softball practice at three.\"\n\n\"Let's do it at ten. I'll arrange everything and drive. See you tomorrow sweetie,\" Dana said and bent over and kissed the same spot that Drew had.\n\nMary Ellen thought she was losing her mind as her face burned with the touch of her girlfriend's lips. \"Uh... yes... yes fine,\" she stuttered and then watched the older woman leave.\n\nChapter 2\n\nMary Ellen cleaned up the dishes and looked out in the back yard to see where the kids were. They were playing with a wiffle ball and bat. Do I have time? she thought as the pulsing down below continued. Making her decision, she hurried up to her bedroom, quickly closing the door and turning the lock. Suddenly, she felt so naughty. It was the middle of the morning.\n\nAs she passed the mirror on the back of the closet door she stopped. She was wearing a pair of baggy shorts and old shirt. A frown crossed her pretty face as she saw herself in a different light. She reached down and pulled her baggy shorts tight and turned so that her buttocks were facing the mirror. The shorts outlined her shapely rear, her panty line showing through. Maybe some new clothes would help! she thought as stared at the contours of her backside. Then she turned this way and that, bending slightly forward. She could feel her vagina continue to pulse with excitement. So Drew drools at this? she thought and a chill ran down her spine. On impulse, she pulled the seat of her shorts upward until the seam buried between her cheeks. \"Ohhh!\" she moaned when she felt the material touch her \"there\". \n\nShe bit her lip and she felt embarrassed as she looked at the drawer where she hid her pleasure devices. Making her decision, she rushed over and searched in the back, behind her underwear and various other \"toys,\" to find the vibrator she had bought from a mail order catalog. It was long and tapered toward the end with a battery control device. There were rounded ridges up and down the shaft. The commercial said it was ideal for anal pleasure. It was! \n\nMary Ellen found some lubricant and rushed over to the bed. Her hands were trembling as she stripped off her clothes. She climbed onto the bed and got onto her hands and knees. When she looked back at the closet mirror she gasped. Her buttocks were pointed straight at the mirror and her tiny anal hole was almost pulsing between her cheeks. It was so obscene... but so exciting. Quickly she lubed up the shaft of the clear blue vibrator. Without touching her vagina, she placed the tip on her anus. A moan escaped her lips as she began to press the shaft into her tight hole. She pushed her hips backward and the long shaft began to slip into her. \n\n\"Oh Jesus,\" she moaned as the ridges bumped past her tight sphincter. Suddenly, she began to tremble all over and a vision of her handsome neighbor came into her mind. He was kneeling on the bed behind her and he had his long penis in his hand. It was huge with a large red head that was shining with his sex juice. \"Do you want me to lube it?\" he asked breathlessly in her fantasy.\n\n\"No, just fuck my ass! Please!\"\n\nAnother groan escaped her lips as she pressed the vibrator deep into her anal canal. She pressed the button that made it squirm. Suddenly, she could feel it vibrating and twisting deep inside her. Her eyes closed tightly as she imagined Drew sliding his large penis into her virgin ass. \"Ohhhhh God,\" she moaned as chills ran up and down her spine. She began to pump the long vibrator in and out between her spread ass cheeks as she spread her legs even wider. The tips of her naked breasts rubbed on the cover making her nipples swell with pleasure and sent ripples though her body. Suddenly every muscle in her body went stiff as waves of pleasure began to consume her. It felt like she might pass out as the long tip of the vibrator brought on spasms deep inside her bowels. It started with little shock waves in her stomach like it always did. Then they began to grow in strength until her entire groin was electrified and her anus pulsed, squeezing the invading tool. Her vagina pulsed as well and juice dripped to the bed. She squeezed her anal muscles on the squirming vibrator and her mouth opened as if to scream. Instead of screaming though, she bit her lip hard-the kids could be in the house now. She gasped and shook as a strong climax consumed her. \n\n\nFinally, the satisfied woman fell exhaustedly to the bed. The long vibrator was still humming deep inside of her. As she lay gasping for breath, the twisting device began to slip out of her rear hole. Then, she heard the kids playing in the back yard and sighed contentedly. It was always the same when she had something up her rear. The climaxes were strong, almost earth shattering. However, in the after glow, like now, she always began to feel embarrassed and guilty. It was so against everything she had been taught. After all, she was a grown woman and for her to sneak into her room and do something like this... well, mothers didn't do that. Yet, she knew that she would do it again. \n\nMary Ellen had been very young when she first realized that she got a special thrill from her anus. It had happened almost by accident. She was masturbating with her fingers one time when she touched the tiny rear hole. It brought such a shock that she had to do it again. She felt nasty but still she pushed a finger inside. The feeling was so intense that she pulled it back out right away. She did it again, leaving it inside longer. Deep inside her, the muscles of her canal reacted, squeezing down onto the invading finger. At the same time, chills of pleasure like she had never known began to ripple through her. She began to move her finger in and out slowly, building speed until her hand was a blur. Within minutes her body began to tremble with an incredible climax. It went on for a long, long time until she collapsed onto the bed. \n\nOver time Mary Ellen experimented with various means of pleasuring herself vaginally, but none equaled the times when she used her finger... or something else on her anus. She often thought that she was sick and that maybe she should see someone. However, she knew that she would be far too embarrassed to ever admit to a stranger that she loved paying with her anus. She would have to admit all of her little secrets. Like the times that she would go to the mall with Dana and walk around with those little vibrating balls up her butt. (Dana would certainly be shocked if she knew.) Or, how she fantasized about her ass being violated by a room full of men in a wild bacchanalia of anal pleasure. \n\nThe guilt that started long ago was still with her today as she lay on her bed in the afterglow of a very satisfying orgasm.\n\nChapter 3 \n\n\"I told Mary Ellen how you drool over her ass,\" Dana said out of the blue as the two of them drove to the store.\n\n\"You told her what?\" Drew asked incredulously. \n\nDana laughed. \"We were talking about how depressed she was and I was trying to cheer her up. Besides, it's the truth.\"\n\n\"Yeah, but you don't have to tell my best friend's wife that I ogle her ass,\" Drew said. However, there wasn't any anger in his voice and he had a smile on his face. \n\n\"She needed some cheering up. It seems that Richard isn't taking care of her.\"\n\n\"The man must be crazy,\" Drew said as the smile grew on his handsome face.\n\n\"I guess it's not unusual for sex to get stale.\" She reached over and took Drew's hand. \"I'm glad we're not like that anymore.\"\n\n\"Me too sweetie. I love you.\"\n\nShe squeezed his hand and said, \"I love you too.\"\n\n\"So what else did you tell her... maybe that I like anal sex?\"\n\n\"No, but she did seem to get pretty excited when I told her about you looking.\"",
        "\"Really?\"\n\n\"Don't get any ideas lover boy.\"\n\n\"Damn,\" Drew said in false disappointment. Then he looked down at his lap and said, \"Look what you've done to me now.\"\n\nDana looked down and saw a tent in her husband's slacks. She took a quick look out the window at the traffic and then reached over and caressed his penis through his pants. \"Want to go back home?\"\n\nDrew practically wrecked the car as he made a \"U\" turn in the middle of the street.\n\nThe door of their house was barely closed before the two were in an embrace. Their lips pressed together as they squirmed into one another. Seconds later both of them had their shirts off and were fumbling with their shorts.\n\nDrew couldn't wait and pulled his topless wife into his bare chest and kissed her again. \n\nDana moaned as her large breasts pressed into her husband's strong chest. She could feel his penis pushing against her groin. She pushed him away and slowly slid down his body until she was on her knees. She looked up at him as she unzipped his shorts. Then she reached inside and grasped his throbbing penis.\n\n\"Oh God sweetie,\" he moaned as he watched her struggle to pull it from the small hole.\n\nWhen she had it out in the open, a little moan escaped her lips. She loved his large penis. While she didn't have a lot to compare it to, she was sure it was much longer and wider than average. She had heard friends talk about their husband or lovers and she had seen plenty of porno movies. Not to mention her own affair, however she didn't want to think about that right now. Drew's penis was bigger than his was anyway.\n\nThe pretty woman stared at the pulsing tool in her hand. The slit in the head began to bubble with his pre-cum juice. She moaned and opened her mouth to take the dripping crown inside.\n\n\"Oh Jesus,\" Drew gasped as he watched his wife suck him. He never grew tired of the sight. His hips began to move back and forth as his excitement grew. He watched her cheeks suck inward when he pulled back and then bulge outward as his penis pressed toward her throat. His balls began to churn and his hips began to move faster with his growing excitement. However, he didn't want to cum in her mouth. He wanted something else, so he pulled her reluctantly to her feet. Then he led her over to the sofa, pushing her over the arm.\n\nDana moaned as she was bent over with her ass in the air. She knew what was coming and her heart began to pound in her chest. \n\nQuickly Drew pulled Dana's shorts down and off her feet. Then he slowly knelt behind her. A gasp escaped his lips as he stared at her panty-covered ass. The silky material barely covered her cheeks. There was a beautiful contrast of her pink panties, white cheeks and brown tan lines. He pulled the panties until they were tucked between the cheeks. He grasped the material at the top and bottom and sawed it back and forth.\n\n\"Mmmmm,\" Dana groaned as the silky material separated her cheeks and rubbed against her now tender holes. \n\nDrew teased himself and Dana as he took his time, continually moving the material up and down, staring at her now squirming cheeks. Slowly he began to pull the panties down, revealing the divide between her soft white buttocks inch by inch. He left the panties at her thighs and leaned forward and kissed first one soft cheek and then the other.\n\nDana groaned as his lips left a trail of wetness, moving slowly across her soft cheeks. She knew where this was heading and she trembled in anticipation. She also knew that he would take his time and draw out his and her pleasure. \n\nDrew chuckled as he watched his beautiful wife squirm in front of he. He loved to tease her. He would sometimes take an hour or more to build up to the final act. He had become a master at slow, sensual seduction.\n\n\"Oh God, sweetie,\" Dana moaned. \"Please!\" \n\nDrew gently bit the soft flesh, leaving teeth marks on the white skin. Then he sat back slightly and paused to take in the view. Her firm buttocks were perfect. His hands trembled as he reached out and caressed the soft skin. He saw goose bumps rise on her cheeks and then run down the back of her thighs. Slowly, he opened her cheeks. \n\nBoth of them moaned as Dana's tiny rose was exposed. He stared in amazement. He loved looking at her puckered little hole. It was wrinkled and pink with a tiny mole just to the side. He often joked that the mole was earth and her little rose was \"Uranus\". \n\nDana couldn't stop her hips from squirming as she felt her husband's adoring eyes centered on her private place. Suddenly, she could feel his breath on her pulsing hole. It was getting very warm in the room.\n\nDrew's lips were so close that he could almost taste her. His tongue came out and he touched the little mole. He felt his excited wife tremble. Then he circled his tongue around the hole in a teasing fashion. When Dana pushed back, he pulled away and chuckled teasingly again. Then he moved his tongue to the top of her buttocks before sliding it down one cheek and then the other, leaving a trail of his saliva.\n\nDana was growing impatient. \"Oh please!\" she moaned as she felt Drew begin to lick her again. \n\nThis time, his tongue started at the top of her crack and moved slowly downward, edging closer and closer.\n\nThe excitement in the room grew rapidly as Drew's tongue moved between the cheeks. Finally his tongue touched the tiny hole. \n\n\"Ohhhhh!!!\" Dana moaned and pushed her ass back toward his tongue again.\n\nDrew stiffened his tongue and pressed forward. \n\n\"Oh Goddddddd!!!\" Dana screamed and her body began to shake. Drew had done this to her countless times but every time seemed like the first. She felt his wide tongue separating her sphincter and slipping into her body. Years ago, she had thought that this act was too dirty for words. Now, it was a necessary part of their lovemaking; it was a prelude to something much bigger and much longer. \"Yes, yes, yes!\" she moaned as she felt his tongue begin to move in and out of her slowly stretching hole.\n\nSaliva began to drip down Drew's chin as his tongue plunged in and out of the tight hole. Suddenly his face was buried between her cheeks, the soft silky flesh caressing his rougher skin. He could lick his wonderful wife's ass for hours, but not today because he was too excited. When he pulled his tongue from the grasping hole, it made a little pop and snapped shut. \n\nSuddenly, Dana felt empty. Her hole pulsed, as if it had a mind of its own, like it needed something to stretch it to the limit. \n\nDrew stood up and looked down at his wife's gorgeous squirming ass. His hands were still trembling as he separated the cheeks again. He brought his now throbbing erection to the divide between her cheeks and rested at the top of her crack. Slowly, he let it slip downward and through the saliva he had left behind. That provided the necessary lubricant and it would be all that he would use. \n\nWhen the head touched the puckered rose, they both groaned.\n\nDana was going mad with desire now. She had to have it inside her. She pushed her hips up and back in desperation.\n\nDrew pulled teasingly away. Then, he let the head touch the hole again as he pulled the cheeks even further apart. He centered the large head on her anus and pushed forward, gradually increasing the pressure. The tight sphincter resisted mightily for a second before it began to relax.\n\n\"Ahhhhhhh!!!\" Dana moaned as the impossibly large head opened her hole. She concentrated, trying to relax. However, it seemed more difficult then usual in her current state of excitement. She knew that the head was always the toughest part. She held her breath and bit her lip. With a final push from her hips and Drew's, the crown slipped inside and air rushed from her lungs. The stretched muscles of her sphincter gripped the head below the crown, trapping it in a warm vise.\n\n\"Oh God baby!\" Drew moaned as he felt her anal canal opening to welcome him. Slowly he slid in, inch by inch, pausing occasionally to let her adjust until finally, his swollen testicles touched her dripping vagina. He stopped moving, waiting for Dana to get used to the length and width of his large tool. \n\nThe room was silent but for their heavy breathing. Drew's leg muscles trembled as he waited. It seemed like an eternity for both of them before he started to move.\n\n\"Fuck me! Fuck me! Fuck myyyyy assss!!!\" Dana screamed.\n\nDrew smiled at her outburst and began to move his hips faster. It always worked like this. Once she adjusted, he knew that he didn't have to be gentle any longer. He pulled his hips back and then pushed forward with a grunt, sliding all the way into her with one thrust. \n\n\"Ahhhhhheeeee!!!\" Dana screamed. It wasn't a scream of pain but rather incredible pleasure. She could feel every inch of his hot shaft as it slid past the sensitive nerve endings deep in her canal. \n\nThen Drew gradually began to move more rapidly until he was pounding into his wife's tight ass without reservation. The sofa beneath the two squeaked under the strain and the room filled with the slapping sound of skin against skin. \n\n\"Oh God baby, I'm going to cum,\" Drew moaned in warning.\n\n\"Yes, yes, yes, cum... cum in my asssss!!!\" Dana screamed as a strong climax overtook her. She could feel her anal canal pulsing and squeezing Drew's long shaft. Each of her pulses brought a return throb from his hot shaft.\n\nSuddenly, Drew bellowed in pleasure and began to pump his thick sperm deep into Dana's waiting hole. It felt like his balls were going to explode from the release of the building pressure. \n\nDana could feel it... she could actually feel the hot cum pouring into her canal. She knew that most women would say that that was not possible. However, she knew what she felt and the feeling always intensified her climax. It was almost as if a soothing balm was being pumped into her clenching hole. She gasped for breath until her climax began to wane. \n\nFinally, Drew fell across his still climaxing wife. Each convulsion made her ass muscles squeeze a little more of his dwindling cum into her hole. He sighed as the last drop was pulled into her already overflowing hole. Then he kissed her neck tenderly and whispered, \"I love you.\" \n\nShe could only groan in response.\n\nSlowly, Drew's penis lost its stiffness and slipped out of his wife. He stood up and smiled down at her still trembling form. A trickle of his sperm dribbled from her hole and ran down her leg. Then he bent over and pulled her panties back up and smacked her buttocks lovingly. \"Get up lazy bones. We have to get to the store.\"\n\nDana moaned and stood up on shaking legs. She slowly put her clothes back on. As the two of them walked out of the house, she could feel her little hole still pulsing and Drew's sperm trickling out. She smiled and felt a little shiver run through her. What would all those people at Home Depot think if they knew that I had cum running out of my ass? she thought. Then she giggled at the thought of the times she had been to the mall with Mary Ellen with Drew's sperm slowly filling her panties. She loved that feeling. \n\nChapter 4 \n\nThe following morning, Dana was in the car waiting outside when Mary Ellen stepped out of the house. It was a beautiful day and the sun was shinning in a cloudless sky. \n\n\"Good morning,\" Dana said brightly. \"Are you ready for your big adventure?\"\n\n\"Big adventure? I thought we were going shopping?\"\n\n\"We are. However, I have a couple of surprises planned.\" Dana had a strange smile on her face.\n\n\"What are you up to?\" Mary Ellen said in a mock worried tone. \"You're not going to get me into any trouble are you?\"\n\n\"You'll have to just wait and see.\"\n\nDana took them to an upscale shopping mall a few miles away. It was an outside shopping center that was reminiscent of malls before the multi-floor giants became popular. She led Mary Ellen to a fancy dress store where she talked her into buying several \"Victoria Secrets\" style dresses. They were tight and short, hugging her hips and buttocks like a second skin. Mary Ellen was very reluctant to buy the clothes. However, no matter how much she protested, Dana insisted that she purchase them. Then they went to another store to get some tight slacks, shorts and jeans. All of the clothes seemed to have a common thread; they emphasized Mary Ellen's sexy rear. Finally Dana took her to a lingerie shop.\n\nThe number and variety of underwear and sexy nightclothes astounded Mary Ellen. After buying her underwear in Wal-Mart for years, this was like a new world to her. Dana helped her pick out an arm full of various types of underwear and led her to the changing rooms in the back. She waited outside as Mary Ellen went inside to try some on.\n\nThe changing rooms had half doors where the person was covered from neck to knees.\n\nDana waited as Mary Ellen took off her clothes and put on a pair of sexy underwear. Then, she walked over and looked over the door just as Mary Ellen bent over to try another pair on. She almost gasped as she stared at the younger woman's buttocks. She had on a pair of almost see through panties that were cut high on her hips and hugged her cheeks like a glove. \n\n\"Those look great, turn around,\" Dana said to the suddenly startled woman.\n\nMary Ellen stood up quickly and gasped. She spun around, holding a flimsy pair of underwear to her naked chest. \"Dana!\" she cried as her face turned red with embarrassment at the older woman seeing her almost naked.\n\n\"My, my, you'd think you were a high school girl,\" Dana laughed at her friend's embarrassment. Then her eyes glanced down at the panties. \"That will never do,\" she said.\n\n\"What?\" \n\n\"Your pubic hair! God woman, don't you ever trim it.\" Mary Ellen's pubic hair pushed the panties out with curly hair escaping from the elastic leg band. \n\nMary Ellen's face turned redder. \"No,\" she whispered, suddenly even more self-conscious. \n\n\"Well, I'm glad I got you the appointment this afternoon.\"\n\n\"What appointment?\"\n\n\"You'll see. Now pick out a bunch of underwear just like those you have on. I'll get a couple of pair of thongs for you.\"\n\nMary Ellen was still embarrassed as Dana turned away and went to find the sales woman. She slipped the panties off and looked down at her hair growth. It had never occurred to her to cut her pubic hair. Surely in the summer she trimmed it back but only very sparingly. \n\nSome time later the two women packed the trunk of Dana's car with all the new clothes-including several pair of very high-heeled shoes. \n\n\"Where are we going now?\"\n\n\"To your appointment,\" Dana said and smiled mysteriously as she drove them to her regular beauty salon. She had called yesterday and was fortunate to get an appointment due to a cancellation. She scheduled the \"full\" treatment, including a hair styling, makeup and bikini waxing. It was going to be tricky to get Mary Ellen to go along with the waxing though. \n\nThe owner of the shop greeted Dana with a warm hug. She was a slightly heavy but pretty older woman with large breasts and a beautiful smile. The two women had known each other for years. In fact, Drew had helped her raise financing to open the shop.\n\n\"Is this the victim?\" the woman asked, turning to Mary Ellen.\n\n\"Yes,\" said Dana. \"Nancy, this is Mary Ellen. Be gentle with her, she is new at this.\" \n\nAs Nancy began to lead Mary Ellen away, Dana said, \"I have an errand to run sweetie, I'll be back in a little while.\"\n\nThe older woman led a suddenly nervous Mary Ellen over to a chair where several other women were waiting. \"She gets the full treatment ladies; hair, nails, makeup, etc.\"\n\nAn hour and a half later, Mary Ellen looked in the mirror and barely recognized the woman looking back at her. The hair stylist had cut and layered her hair and added a little frosting. It fit her pretty face perfectly. They had applied makeup, and done her fingernails and toenails as well with bright and sparkling polish.\n\nThe girls were still fussing over Mary Ellen when Dana came back. \"Wow,\" Dana said sincerely when she saw the results. \"You look gorgeous.\"\n\nMary Ellen blushed and said, \"Thank you.\" She had to agree. For the first time in years, she felt pretty and special. \n\n\"Are you ready Mrs. Jakowski?\" a lovely young girl in a white robe asked.\n\n\"For what?\"\n\n\"Your waxing.\"\n\n\"What?\" Mary Ellen asked and looked at Dana in surprise.\n\n\"Mary Ellen, this is Jennifer. Now go with her sweetie. You definitely need it.\"\n\n\"But... but...\" she stuttered and her face turned red. She knew about waxing but had never even considered it. \n\nThe young girl took Mary Ellen's hand and Dana pushed her to follow.\n\n\"The changing room is over there. Take off your shorts and underwear and put on this robe,\" the pretty girl said, handing Mary Ellen a white robe. \n\nMary Ellen had never been so embarrassed in her life. It was even worse than going to the gynecologist, she thought as she reluctantly took off her clothes and put on the robe. She came out of the room with a red face. Jennifer led her over to a chair that looked a lot like a dentist chair. However, it had stirrups like a gynecologist's examining chair. \n\nJennifer sat on a stool between her legs, placing her feet in the stirrups. \"Don't be nervous. I've done this a million times.\" The young girl adjusted the stirrups to spread Mary Ellen's closed thighs. \"Oh my, you do need a trim,\" she said when she saw the bush of hair between her legs.\n\nMary Ellen's face flushed redder.\n\n\"I'm sorry,\" Jennifer apologized, \"I didn't mean to embarrass you.\"\n\nMary Ellen wasn't listening. She was afraid to look down. However, all she would have seen would have been the top of Jennifer's head. She squeezed her eyes shut and tried to relax as the young girl started to work. Still, her body was as stiff as a board. There was no way she could relax with this girl looking at her between her legs. \n\nThe young girl worked with a pair of scissors until she had Mary Ellen's pubic hair trimmed as short as possible. Then she got the wax ready. \"Relax for a minute. I'll be right back.\" \n\nA few minutes later Mary Ellen saw Jennifer come back with something in her hand. Then she felt something warm being placed on her pubic mound. It actually felt quite good. Within a few minutes, she could feel turning cool.\n\n\"Now this will hurt a bit,\" the woman said when the wax had dried.\n\n\"Yeowwww!!!\" Mary Ellen screamed at the pain in her groin. She almost jumped off the table. \n\nJennifer quickly placed a warm towel on Mary Ellen's now smooth pubic mound and applied pressure for several minutes. \"The worst is over,\" Jennifer said as she removed the towel. She had left a small V shaped patch of hair above her vagina as Dana had instructed.\n\nMary Ellen could feel her entire pubic area throbbing. However, the warm towel had soothed the burning somewhat.\n\n\"Very nice,\" Jennifer said as she held a large mirror between Mary Ellen's legs in order for her to see.\n\n\"Oh my God,\" Mary Ellen gasped when she saw that her pubic hair was gone. Suddenly, it didn't look like her body. She had never seen her vagina so exposed. Her fat outer lips were baby smooth and the pink inner lips were squeezed between them and protruding. There was just a tuft of brown hair several inches above the beginning of her slit. Suddenly, she flushed again when she realized the obscene view the young girl between her legs now had of her most private parts. \n\n\"Here, Dana wanted you to wear these,\" the young girl said to the startled woman. \n\nMary Ellen was in a trance as she allowed the girl to begin to slide a pair of thong underwear up her thighs. She closed her eyes in mortification. However, when the girl's hands stopped before the panties were past her thighs, she looked down. Her eyes opened wide as she saw the young girl staring at her vagina again. Mary Ellen trembled as the girl's tongue came out and she licked her dry lips. It almost looked as if she wanted to kiss her between... no she couldn't even think that. However, there was definitely lust in the girl's eyes. ",
        "Suddenly, Jennifer looked up and it was her turn to flush red. \"You have a beautiful...\" she started to say vagina but she stopped. \"Sorry,\" she added shyly and then pulled the panties up until they were snug on Mary Ellen's now sensitive pubic mound. Then she helped her out of the chair and onto shaky legs so that she could get dressed. \n\nDana could see that Mary Ellen was totally flustered as she came out of the room. Her face looked red and her eyes seemed to be dazed. \"Are you okay?\" she asked.\n\n\"No! Let's get out of here,\" Mary Ellen said angrily. Then she hurried out of the shop with Dana following close behind.\n\n\"Wait for me.\" Dana walked faster. \n\n\"I've never been so embarrassed in my life,\" Mary Ellen whispered in an agitated tone as Dana caught up to her.\n\n\"Come on, loosen up,\" Dana said in frustration. \n\n\"Dana, I thought that girl was going... going to... kiss me.\"\n\n\"Kiss you?\"\n\n\"Kiss... me... you know... down there,\" Mary Ellen said as she walked rapidly ahead of her friend again.\n\n\"Oh! I've heard that Jennifer has a thing for women. I guess one couldn't do that job day in and day out if you didn't like it,\" she laughed hoping to lighten up Mary Ellen. \"See, you even turn women on.\" \n\nDana didn't bother to tell Mary Ellen that she knew very well that Jennifer had a thing for women. It was the main reason that she needed to have her own wax job done so often. She hadn't even shared that bit of information with Drew yet.\n\nMary Ellen gave Dana a dirty look. \"You should see what she did to me down there. I don't have any hair!\" she almost hissed.\n\n\"I know sweetie. I told her to do that.\" Dana paused and got a pout on her face. \"Please, don't be mad. You'll love it, I know it.\"\n\nMary Ellen glared at Dana and fumed. Then she shook her head and sighed as she looked at the older woman's worried face. Suddenly, her demeanor softened. She knew that Dana was only trying to help her. She shook her head at her friend.\n\nDana felt a little relief when she saw Mary Ellen's look. It was almost a smile. \"Let's go get a drink,\" Dana said. \"You'll feel better.\" Dana worried that she had gone too far with the rather prudish woman. Still, she believed that she needed some strong medicine or her marriage might be in jeopardy. She didn't want to see her and Richard break up.\n\nWhen they reached the bar and were settled into a booth, Dana ordered them both strong drinks. She reached over and touched Mary Ellen's hand. \"I'm truly sorry sweetheart. I don't want you to be mad at me.\"\n\n\"Dana, Richard is going to go crazy when he sees... sees what I look like down there.\"\n\n\"At least he'll look and from what you've said that's progress. Listen, take it from me, most men love women with bare crotches. Mine has been like that for ten years. When Drew first saw it, I thought he was going to rape me. Actually, he did now that I think about,\" she laughed. \n\n\"You don't know Richard,\" Mary Ellen said, ignoring her attempt at humor. \"He had some very prudish ways.\"\n\n\"And you don't?\"\n\nMary Ellen looked sharply at Dana.\n\n\"I'm sorry. That was rude. But you know that you have to do something or your marriage is in trouble. You told me that yourself. I don't want to see you two guys divorce.\"\n\n\"This might be the reason it ends.\"\n\n\"No it won't,\" Dana stated flatly. \"Besides, it will grow back if you let it.\" The waitress brought their drinks and they fell silent.\n\nA couple of minutes later Mary Ellen was calling the waitress over for another round of drinks.\n\n\"Slow down. You have to take the kids to practice,\" Dana cautioned gently.\n\nBy the time the second drink was finished, Mary Ellen had settled down. The liquor was making her relax in spite of her harrowing experience. Suddenly out of the blue she giggled.\n\n\"What?\" Dana asked with a smile of relief.\n\n\"Nothing. I was just thinking of Richard's face when he sees that my pussy is hairless,\" she said and broke into laughter again.\n\nDana was shocked at her use of the word \"pussy\" but joined her and soon they were laughing hysterically. \n\nWhen Mary Ellen caught her breath she looked at Dana and said, \"It does feel different.\" She squirmed her hips in her chair. Suddenly she could feel the tight thong panties running between her outer lips and pressing to her sensitive inner ones. A chill ran down her back.\n\n\"You don't have to tell me that!\" Dana stated. \"I think I masturbated ten times in the first two days after I got mine done. The feeling of silk on my sensitive lips was almost too much.\" Dana blushed at her revelation.\n\nMary Ellen giggled and squirmed again. \"I'm starting to see what you mean. However, I'm very sensitive in another area.\"\n\nDana thought she was talking about her breasts. \"My breasts are pretty sensitive too.\"\n\n\"I don't mean my breasts,\" Mary Ellen said nervously. She was unaccustomed to drinking very much and the liquor was starting to really loosen her tongue.\n\nDana looked at her funny. \n\n\"You know... back there.\"\n\nSuddenly Dana's face showed surprise and she said, \"Oh!\" \n\nMary Ellen blushed. \"We shouldn't be talking about this. I'm sorry.\"\n\n\"No, don't stop, please tell me more,\" Dana said excitedly.\n\nMary Ellen looked around to see if anyone could overhear her. She dropped her voice to a whisper. \"My... my... rear... you know... my anus has always been very sensitive.\"\n\n\"Oh my God!\" Dana exclaimed.\n\nSuddenly Mary Ellen thought she had said too much and dropped her head down as her face turned a deeper red. \"I know, it's sick.\" It was a whisper, barely audible. \n\n\"No... no... no...\" Dana exclaimed and reached over and grasped her hand. \"If it's sick, Drew and I must need major therapy.\"\n\n\"Huh!\"\n\n\"God, Mary Ellen, Drew and I have been into anal sex for years.\"\n\n\"Really?\"\n\n\"Really. But I'm surprised that Richard would do anything like that.\"\n\n\"I didn't say Richard was into it.\"\n\n\"Well whom do you have anal sex with?\" Dana said and paused. \"Oh! A do it yourselfer,\" Dana laughed nervously, realizing that she was stepping on risky grounds. However, there was excitement in her voice now. She couldn't believe that she and Mary Ellen had known each other for so many years and didn't know this. Finally she said, \"I told you that Drew is an \"ass\" man. I meant that literally. We must do it three or four times a week.\"\n\nMary Ellen gasped at the revelation and suddenly she could feel her vagina begin to throb. That brought on a tingling sensation in her special place. She shifted in her seat to try to relieve the tension. It only served to cause the tiny string on her thong to rub against her now sensitive anus. Mary Ellen had to know more. \"So you two do... do that... a lot?\"\n\n\"Well, if three or four 'ass fucks' a week is a lot, then we do it a lot,\" Dana said, using language she would normally reserve for the bedroom. She could see the excitement that her words brought to Mary Ellen's face. \"And, Drew's cock is so big that I have to be careful. It takes a while for him to get it all into my ass.\"\n\nMary Ellen sucked in her breath and closed her eyes. She squeezed her legs together and felt her suddenly swollen sex lips pulse. \"Did... did it hurt much the first time.\"\n\n\"Boy, that was a long time ago. We were really young and I think Drew had brought some marijuana home. I had never had 'pot' before. It was incredible though-I remember that. I think he was trying to get his cock into my pussy and it slipped,\" Dana laughed. \"Then, it just kind of popped in. I don't even know if Drew knew it at first. When he realized where his cock was... well, I think I was sore for a week from all the pounding. But it was a good sore.\"\n\n\"Oh God. I have to tell you that I am really excited right now,\" Mary Ellen admitted. \"I'm going to have to go home and find my special vibrator.\"\n\nDana smiled and felt her sex lips swell. Mary Ellen wasn't the only one getting excited. A sudden vision of the younger woman on her hands and knees with a man with a large penis forcing it into her ass rushed through her mind. She could feel her panties becoming soaked.\n\nThe two women fell silent, deep in thought. Then Mary Ellen spoke. \"Dana, you and Drew seemed to have such a good relationship. How do you do it?\"\n\n\"Truthfully, it wasn't always like that.\" Dana paused and thought about what she was about to say. \"I have a secret. But please, you can't tell anyone I told you this.\"\n\n\"I promise,\" Mary Ellen said quickly, suddenly anxious to find out what Dana's secret was.\n\n\"Well, about five years ago, I did something really stupid. Our marriage was pretty good but I got a little restless.\" The older woman paused again and she stared pensively across the room. She took a quick drink, swallowed hard and blurted, \"I had an affair!\"\n\nMary Ellen gasped and her eyes opened wide in shock.\n\n\"It didn't last long-only several months. But Drew found out.\"\n\n\"Oh my God. What happened... uh what did Drew do?\"\n\n\"You're not going to believe this but Drew was great about it. Yes, he was angry and disappointed in me. It hurt him a great deal. However, he knew that we weren't communicating like we used to and that sex was getting boring. Once he settled down, we had several very long and frank conversations. He was on the road a lot then and I got lonely. When he confronted me, I didn't lie because it was useless... he found photos.\"\n\nMary Ellen gasped. \n\n\"I immediately confessed to everything. The most amazing thing was that Drew seemed to feel as guilty as I did. Can you believe it? He blamed himself for not being there for me. We cried a lot and then made mad and passionate love.\" Dana smiled and then added, \"Basically, he fucked my brains out.\" Dana broke into laughter. \"Then we talked some more. Fortunately, we worked it out and 'the rest is history' as they say. But you know what? He said he threw the pictures away, but I know that he still has them.\"\n\n\"Wow, I can't imagine most guys being that reasonable. Certainly not Richard.\"\n\n\"The truth is, that's what made it so hard for me. He was almost too understanding and reasonable. At first I thought that it was because he didn't really love me. Then I realized that that was self-centered and frankly stupid. A woman couldn't hope for a man that was more understanding. I resolved to keep him no matter what it took. However, it's been surprisingly easy.\" Dana paused and her face flushed. \"The secret is that I give him my ass any time he wants. Truthfully, I've grown to love it as much as he does. He would disagree, but I feel like I owe him. I try to make it up to him every day.\" Tears began to fill Dana's eyes.\n\nMary Ellen had a tear in her eye as well. She reached over and grabbed the older woman's hand. It felt soft and warm and strangely comforting to Mary Ellen. She resolved that if Dana and Drew could do it, she was going to try to get the spark back into her own marriage as well.\n\n\"I guess we had better get going if you are going to get your kids to practice,\" Dana said as she stood up.\n\nMary Ellen stood up and then she swayed. \"Wow, I think I had a little too much to drink.\"\n\nDana was a little better. \"You can't take the kids to practice now.\"\n\n\"I have to.\"\n\n\"Wait, I'll call Drew. If he doesn't have an appointment, he can take them.\"\n\n\"I couldn't let him do that.\"\n\n\"Nonsense. He'll love it,\" Dana said as she dialed his number.\n\n\"Hi Hon,\" Dana said with a smile in her voice. \"No, I'm still with Mary Ellen. Listen, we have had a little... uh too much to drink.\" She giggled. \"Do you think you could take Leslie and Brett to practice? It's at 3 o'clock over at the school.\" Dana paused and listened to Drew then smiled at Mary Ellen. \"You're a doll. I owe you one tonight. I love you.\" Dana hung up and said, \"Drew will take them to practice.\"\n\n\"He is a doll,\" Mary Ellen said and smiled as she thought of the handsome man.\n\nChapter 5\n\n\"Can I get you something to drink?\" Mary Ellen said as she and Dana carried her packages into the house.\n\n\"Why not, I can just stagger through the back yard,\" Dana laughed, still feeling the effects of the drinks she had consumed at the bar.\n\nThey piled the packages in the living room and sat down at the bar. Mary Ellen stirred up a picture of Daiquiri's and poured them both a large drink. \n\nDana raised her glass to Mary Ellen and said, \"Here's to a new beginning for you and Richard.\"\n\nMary Ellen raised her glass and tapped it to Dana's. \"I hope so. The truth is though, I don't really even know where to start.\"\n\n\"Here's an idea. Since it's Memorial Day weekend, you can send the kids to your mom's and the four of us will go out to a nice dinner on Saturday night. We will get Richard relaxed, ply him with a little liquor and then when you get home you can seduce him. Simple!\"\n\n\"I like the dinner part but I don't think I know how to seduce anyone anymore... if I ever did,\" Mary Ellen said sadly.\n\n\"Well, if the shaved pussy and sexy underwear doesn't do it, he's probably dead anyway,\" Dana laughed and tapped her glass on Mary Ellen's again. \"Why don't you try some of the stuff on again and we can pick out a dress for Saturday night. I like the red one but let's look.\"\n\nMary Ellen was feeling pretty good after downing her second Daiquiri. She swayed just a bit as she got off the barstool. \"Let me carry these,\" Dana laughed as she picked up their drinks and carried them into the living room. \n\nAfter shuffling through several boxes, Mary Ellen found the dresses that she had purchased. She picked up the red one and started to leave the room.\n\n\"Come on Mary Ellen, change here. We're both girls and I'm pretty sure you don't have anything I haven't seen,\" she laughed.\n\nMary Ellen looked at Dana and thought for a second. \"Ah, what the hell,\" she said and began to unbutton her blouse. Underneath she had on a modest but lacy bra that was somewhat thin and showed the nipples of her firm breasts. She turned her back to Dana and unsnapped her shorts, wiggling a little as she slid them down her legs. She had forgotten that she had on a pair of thong panties and that her buttocks were totally bare. When she dropped the shorts, she felt the cool air on her cheeks. It was an immediate shock to her. She turned and looked over her shoulder at a smiling Dana and her face turned red.\n\n\"Very nice,\" Dana giggled as she took a sip of her drink, looking over the rim of the glass at the sexy woman with a naughty smile. \n\nAgain Mary Ellen blushed. She quickly picked up the red dress and slipped it over her head. Then she turned around to Dana. \n\n\"That's never going to do,\" Dana said when she saw her bra was showing through. \"Lose the bra.\"\n\n\"I can't go around without a bra! I'm 35 years old for heaven's sake.\"\n\n\"Come on Mary Ellen, you have great breasts. Live on the wild side a little.\"\n\nMary Ellen reluctantly slipped the dress back over her head. She turned away from Dana and unclasped the bra and threw it on the sofa. Quickly she put the dress back on and turned around.\n\n\"Oh my!\" Dana exclaimed as she stared at the pretty woman. The dress hugged every curve of her body. On top her breasts looked firm and smooth with her suddenly hard nipples poking through. \n\n\"Turn around,\" Dana said.\n\nMary Ellen turned until her back was toward Dana. Suddenly, she could feel the older woman's eyes on her backside. Her face began to flush hot. \n\n\"If Richard doesn't rape you when he sees that dress... you can give Drew a call,\" she laughed. \"Put on your high heels.\"\n\nMary Ellen slipped on a pair of black high heels. The heels emphasized her legs, shaping the curves all the way to her firm thighs. She stood tall, almost proudly, letting the older woman look at her. \n\n\"Excellent,\" Dana said. \"Now try on the others.\"\n\nAll of the dresses were a good six inches above her knees. She slipped on a bright yellow shift type dress. It hugged her in all the right places. Suddenly, she felt good about herself, almost sexy. It had been a long time since she had paid attention to her appearance. Now with her new hairstyle and professional make-up, there was a glow about her. She used her hands to smooth the dress across her waist as she walked to the dinning room mirror. \"Oh,\" she said when she saw that her nipples were poking through the top of the dress. She backed up until she could see her lower half. A sudden chill ran through her when she saw how good her legs looked. She turned around and looked over her shoulder at the mirror. I do have a pretty sexy ass! she thought and smiled.\n\nShe tried on all of the dresses, modeling them for Dana. Each one seemed to look better on her. \n\nWhen Mary Ellen finished trying on the dresses, Dana said, \"Now the underwear.\" \n\nBefore Mary Ellen could protest, Dana turned and hurried to the bar saying she would fix them another drink. \n\nThe now nervous woman bit her lip with indecision, as she stood in the living room with her mouth open. However, there was a constant chill of excitement running through her. She turned and picked up a lace \"teddy\" and then hesitated. When she glanced over her shoulder, she could see Dana at the bar fixing the drinks. Quickly she stripped off her dress and then slipped her panties off. When she pulled the teddy up, she realized that it only covered half of her breasts. The top half of her breasts and nipples were exposed. \n\n\"Let me see,\" Dana said as she walked back into the living room carrying two large drinks. \n\nAgain, Mary Ellen's face flushed as she slowly turned around. \n\nIt was Dana's turn to feel a chill rush through her as she gazed at the almost naked woman. The areolas of her breasts were almost totally exposed and the tips were as hard as pencil erasers. Without thinking, her eyes drifted down to her crotch. A little gasp involuntarily escaped her lips when she saw that the lacy crotch hid nothing. She could plainly see the tuft of hair at the top of her vagina and the fat lips of her vagina below. Suddenly, Dana's hands were trembling and in danger of spilling the drinks. She mumbled something and turned and set the drinks on a table. Her legs were getting weak so she sat down. Dana had never been attracted to women... well, except the several little episodes with Jennifer at the shop but that was just a lark. However, now she found herself getting very excited just looking at her nearly naked friend. \"That's... uh... that's very... sexy,\" she stuttered.\n\nMary Ellen felt like the room was suddenly charged with electricity. She hurried over and picked up her drink and swallowed about half of it. Then she went back to her packages and pulled out a lacy bra and panties. Suddenly, she felt very bold. She turned and stripped off the teddy in front of her friend. \n\nDana picked up her drink again and took a big gulp as she stared at the now totally naked woman. Incredibly, she could feel her vagina throbbing as her eyes ran up and down the sexy woman's body. She squeezed her legs together and tried to control her breathing as she watched her turn away from her and bend over. The older woman sucked in her breath when she saw the pouch of Mary Ellen's sex staring back at her. She could swear that it was wet.\n\nAmazingly, Mary Ellen felt her own thrill of excitement at exposing herself to the older woman. She could feel her eyes on her ass and exposed vagina as she bent over. It took her a lot longer than necessary to find the panties she wanted. She picked up a pair of thongs and pulled them up her legs. Next she wrapped a spandex corset around her waist. It had about ten stays that hooked in the back. She held it in the back and turned to her friend. The front of the corset left her breast totally bare but the under-wire bra pushed them up and out. \"Could you hook these please.\" Then she turned away again, suddenly feeling shy.\n\nDana stood up on trembling legs and walked unsteadily over to the waiting woman. She took the material in her fingers and slowly hooked each stay. When the last one was done she stopped, standing close behind the younger woman. Then she dropped her hands to Mary Ellen's waist. Almost without her control, her hands suddenly moved lower to cup the younger woman's soft buttocks. She caught her breath when she felt the warm cheeks in the palms of her hands. She had never done anything like this in her life. ",
        "Mary Ellen moaned and began to tremble. Her chest heaved up and down with her rapid breathing. Suddenly, she was leaning backward.\n\nNow Dana was shaking as her hands continued to caress the soft flesh of Mary Ellen's ass. Somehow Mary Ellen turned in Dana's arms and suddenly they were staring into each other's eyes, her bare breasts touching Dana's blouse. Their lips began to move together... \"Rinnnnggggg!!!\"\n\nThe ringing telephone startled the two women and they almost jumped apart. Both of their faces were flushed with excitement and embarrassment. \n\n\"Hel... hello!\" Mary Ellen gasped into the phone. \"Uh... yes... I guess it's okay,\" she said. She hung up and turned to Dana. \"That was the termite company. Their truck is down the street and they wanted to stop by for an inspection.\"\n\n\"Uh... well, I have... uh get back home anyway,\" Dana said, clearly flustered. \n\n\"Yes... and I need to get supper on the stove,\" Mary Ellen stammered. \n\nDana turned to leave. \n\n\"Dana,\" Mary Ellen said as she stood bare breasted staring at the older woman. \"Thanks for all your help.\"\n\n\"My pleasure,\" Dana answered, glancing at her heaving breasts. \"I'm glad you're not mad at me.\"\n\n\"I could never stay mad at you,\" she said and opened her arms. \n\nAs Dana stepped into her embrace and they hugged warmly, she could feel Mary Ellen's soft, nearly naked breasts pressing to her own chest again. A shiver went through her. Suddenly, she had to get out of there. \"We'll talk about Saturday night later okay,\" she said hurriedly.\n\n\"That sounds good,\" Mary Ellen said and kissed the older woman's cheek.\n\nThe two women parted almost reluctantly. However, there was no doubt that the events of the day had had a major impact on them. While they were embarrassed about what had almost happened, they were nonetheless excited. It was the beginning of a new direction in their friendship. \n\nChapter 6\n\n\"So you got to see her almost naked?\" Drew asked excitedly. He had just dropped Brett and Leslie off and stepped into the house.\n\n\"Completely naked! And, she is almost totally bare down below now. No hair,\" Dana answered teasingly.\n\n\"God, I would give anything to have seen that.\"\n\n\"I'll bet you would. Her butt is even nicer without clothes on... and so soft,\" Dana said almost dreamily. Suddenly, she realized what she had said and her face turned red. The alcohol she had consumed was still coursing though her veins.\n\n\"What? How do you know how soft her butt is?\" Drew asked incredulously.\n\n\"Uh... oh damn,\" Dana said and her face flushed. \n\nDrew stood staring at his wife, his eyebrows raised, waiting for an answer. \"Come on Dana, out with it!\" However, there was an excited smile on his face.\n\nDana sighed. \"Let's go sit down. I have a couple of things to tell you.\" She figured it was as good a time as any to come clean about the young girl at the beauty shop. \n\nDrew followed his wife into the living room and sat next to her on the sofa. He could feel excitement building. \"So come on, tell me.\"\n\n\"All right, all right,\" she answered nervously. \"I guess I should start with something that happened several months ago.\"\n\n\"Months ago?\" he asked. Drew's heart suddenly began beating very hard. \n\n\"Well, you know that new young girl at my beauty shop? You know the one with the pretty blue eyes.\"\n\n\"Yeah... Jennifer,\" Drew said as a vision of the pretty teenager flashed into his mind. \"What does she have to do with this?\"\n\n\"I said there were a couple of things I needed to tell you. I've wanted to tell you this for a while now, but... but I was... worried about... you know, your reaction because of what happened before.\" They both knew that she was talking about the affair. \n\n\"Come on... come on,\" Drew said quickly, ignoring the last comment, getting more interested by the minute.\n\n\"Well, I had an appointment with Jennifer. It was right after Sara retired. I needed to get a waxing really bad. Sara was really good, but not the quickest person in the world. It took her forever to get anything done. Still, I was sorry to see her go.\"\n\nDrew wanted to say, \"Just get to the good parts.\" Instead, he bit his tongue and kept quiet. He could feel his penis begin to twitch and wasn't even sure why.\n\n\"Anyway, I was in the chair, laying back with my legs spread. Jennifer was working on me but she really seemed to be taking a very long time. I started to think that she wasn't any quicker than Sara was. Not only that, but it seemed like she was touching me much more than Sara ever did.\" Dana paused and looked at Drew for his reaction. When she saw excitement on his face, she continued, \"I'm embarrassed to say this... but I started to get excited. Jennifer is such a pretty girl with those beautiful blue eyes and very sexy lips. She's just a kid really.\"\n\nDrew was on the edge of his seat. His breathing had increased and he could feel excitement coursing through him now. He wanted to scream, \"What happened?\" but still he waited as patiently as he could. His penis was throbbing in his shorts.\n\n\"For some reason, I looked down at Jennifer. She... she was staring at my... my pussy. For a second, I wondered if something was wrong. Suddenly, she looked up at me and I saw the look in her eyes. I know that look. I can see it in your eyes right now.\" Dana laughed a little nervously as she stared at her husband. \n\nDrew's could feel his pulse pounding in his temples. \"What happened?\" he said impatiently. \n\n\"Well, I know that I should have gotten out of the chair right then but I couldn't move. It was almost as if I was frozen in place. Instead, I watched as she began to rub her hands along the insides of my thighs. Her hands were so soft and her fingertips brought goose bumps to my skin. Suddenly, my legs started to tremble and I could feel myself getting wet. I couldn't believe how excited I had become.\"\n\n\"Oh Jesus!\" Drew gasped. His penis was now throbbing.\n\n\"I just watched her when she got up from her stool and walked over to the door. I heard the lock click. I must have been in shock because I didn't even try to get up as she came back over and sat between my legs again. By this time, I could feel that my juice was dripping and I know my lips were swollen. I was very embarrassed knowing that she could probably even smell me.\" \n\nWithout thinking, Dana closed her eyes and her hand came up and began to caress one of her large breasts. \n\nDrew watched in amazement.\n\nThere was fire in Dana's eyes when she opened them again. She stared at her husband and saw the same fire burning. Now, she knew that she no longer had to be concerned about his reaction. \"Drew,\" Dana almost sighed, \"she began to kiss my thigh. I started to moan as her tongue began to work toward my pussy. You know that I've never done anything with a woman before and I honestly don't know what got into me. She is just so young and cute... almost innocent. However, I found out pretty quickly that she isn't as innocent as she looks.\" \n\nDrew moaned and leaned back into the corner of the sofa. He couldn't hold back any longer. He stared at his wife as he slowly unzipped his pants.\n\nDana gasped as he pulled his long shaft from the hole in his shorts. It looked even larger than normal. The head was swollen and purple and there was a stream of clear juice running from the tip. She thought briefly of suspending her story and attacking him, but then she changed her mind. Instead, she quickly stood up and stripped off her shorts and panties. She sat back in the other corner of the sofa and spread her legs, placing one bare foot on the cushion. Incredible excitement rushed through her now. She knew that Drew loved to be teased with stories. Often she would make them up to turn him on. However, this one was true. Once, when she was very drunk, she described an episode with her lover. Drew's reaction was immediate and intense... he threw her to the floor and fucked her senseless. \n\nDrew began to stroke his penis as he watched his wife begin to move her hands down to her already wet sex lips. \"Come on, tell me,\" he gasped.\n\n\"I could feel her hair brushing against the insides of my thigh as she kissed the sensitive skin. You know the spot, right here,\" Dana said as she gently traced her finger across the inside top of her thigh. Her fingers drew closer to her swollen lips. \"My hips began to move without my control when she turned her face toward my pussy. I could feel her warm breath. Oh God Drew the girl was driving me crazy. Then, I felt her fingers touch my smooth lips.\" Dana closed her eyes as she touched her lips and moaned. \n\nDrew's fist was moving rapidly up and down the shaft of his penis as he hung on every word.\n\n\"Suddenly, she was opening me... opening my pus... pussy. God, I felt so exposed.\" Dana used her fingers to open herself like Jennifer had done that day. \"I could feel my juice literally running from my hole... like now.\" A stream of juice began to run from her vagina. She used her finger to smear it across her outer lips. \"I almost jumped out of the chair when Jennifer dipped her fingers into my juice and rubbed it all over my sex. I almost climaxed right there. Then, she opened me even wider and blew warm air on my pulsing clit.\" Dana gently rubbed the little nub at the top of her sex. \"You know how I like that.\"\n\n\"Oh God,\" Drew moaned. He had to slow down his hand movement for fear that he would climax.\n\n\"I felt something touch my lips and realized that it was her tongue.\" \n\nBoth of them moaned.\n\n\"Suddenly, I was being eaten by a woman for the first time in my life. God, she was good. Not that you aren't great at eating my pussy sweetie but she knew all of the right places. I couldn't keep my hips from moving any more. She grabbed my thighs and her mouth went wild. It was like her mouth was a vacuum, sucking my lips and my juice into her mouth. I was getting really close to a climax when the strangest thing happened-and you are going to love this-she lifted me up slightly and spread my cheeks. When her tongue touched my anus I went crazy. I couldn't help it but I screamed and I started to climax like a firecracker.\" Dana was trembling all over now and was getting close to climax.\n\nDrew stood up from the sofa on unsteady legs. He stared down at his excited wife and then knelt at her feet. Then he lifted her legs and laid them on his shoulders. \n\n\"Oh God, fuck me,\" Dana moaned and grabbed Drew's hips.\n\nDrew held back. He used his hand to direct his penis to her now throbbing sex. However, he didn't push in right away. Instead, he rubbed the head of his shaft around her swollen lips, smearing his juice and hers over her vagina. Then he moved it between the lips. A moan escaped both of their lips as he pushed his pulsing shaft slowly into her very wet vagina. A second later he could feel the contractions deep inside her vagina. They grew stronger until she was screaming in pleasure and climaxing around his slowly moving penis. However, Drew held back his own climax. He wanted something else and waited.\n\nFinally, Dana stopped trembling and looked at her patiently waiting husband. She smiled and lifted her hips and then reached down under their joined crotches to spread her ass cheeks. She knew what he wanted. \n\nA big smile grew on Drew's face. He slowly pulled his wet penis from her still clinching hole and centered it on the tiny star of her anus. He pushed firmly and felt her sphincter resist and then relax. The large head popped inside and then inch-by-inch he slid the shaft into her willing ass. When he was as deep as he could go, he paused, enjoying the tight confines of his wife's familiar anal canal. He could feel her rapid heartbeat through the thin walls. Then, he started to move.\n\nDana loved the feeling of her ass being stretched. It was familiar and comfortable, almost like his penis was meant to be there. The two body parts fit like a hand in a glove. She thought briefly about climaxing again but decided to let Drew have his pleasure. She squeezed her ass muscles around his penis. \"Yes, yes, fuck my ass hard now,\" she gasped, using words she knew he loved to hear.\n\nDrew didn't have to be told twice. He began to pound in and out of his wife's ass. Every inch of his penis was caressed by her clinching hole. It felt like two fists were squeezing his shaft, working hard to milk his sperm from his balls.\n\n\"That's it baby, fuck me. God could that little girl eat my pussy and ass,\" she continued with her story. \"Between her saliva and my pussy juice, the entire cushion of the chair got wet. When she stuck her tongue up my ass I went mad.\" She heard Drew moaning and knew what would take him over the top. \"I know you love my ass but I bet you'd love to be fucking Mary Ellen's ass right now,\" Dana said excitedly. \n\nDrew tensed and felt his balls tighten. She knew all of his buttons. \n\n\"I'll bet her ass is really tight. She's never had a penis in it you know. Yours would stretch her good. She loves to have things up her ass. She told me how she loves to use this special vibrator on her little asshole. But I bet she has never had a vibrator as big as your cock.\"\n\n\"Oh Goddddd!!!\" Drew bellowed and he pushed in as deeply as possible. His balls tightened and he began to pour his hot sperm deep into Dana's ass. \n\nDana moaned as she felt the hot juice splatter against the walls of her canal. It was exciting and hot, yet soothing. Somehow, she always felt so close to him when he finally released his load into her ass. And the feeling lasted longer than just the coupling, because it would drip out for hours. That was a strange but wonderful affirmation of his love.\n\nDrew's climax went on for a long time until finally there was nothing left. He grunted one last time before collapsed onto his smiling wife. \n\nThe room grew quiet as Dana wrapped her arms around him and they stayed like that until their breathing returned to normal.\n\nFinally, Drew felt his penis shrink and slip wetly out of his wife's still pulsing hole. He sat back and looked down at her ravaged pubic mound. There was a little shadow growth of hair. \"It looks to me like you need to see Jennifer to have your pussy waxed again.\"\n\nA broad smile crossed Dana's face. She would tell him about the other visits later. \"I love you,\" she said and pulled him down for a sweet kiss.\n\nChapter 7\n\nSaturday evening was pleasant enough but Mary Ellen was very nervous. The four of them went to their favorite restaurant downtown. \n\nMary Ellen could hardly eat. She was excited and worried. Excited about initiating sex with Richard and worried that he would reject her. In all their years of marriage she had never been the aggressive one. Her eyes constantly met Dana's, looking for support.\n\nIn the ladies room, Dana said, \"It seems to be going okay huh?\"\n\n\"I don't know. I'm so nervous, I feel like I'm on my first date.\"\n\n\"Good. Maybe you'll get lucky later,\" Dana laughed.\n\nMary Ellen smiled nervously. \n\nAs they parted for the evening, Dana whispered, \"Have fun!\"\n\nThe following morning, Dana came over early for coffee. She knew that the kids were at Mary Ellen's mother's house and that Richard got up late on Sundays, so that would afford them a little private time to discuss how the evening had gone. Dana had her fingers crossed that things had gone well. She had hardly slept at all night. \n\nWhen she walked into the kitchen, she could immediately see that something was wrong. Mary Ellen was sitting at the table in a house robe and eyes were red and wet with tears. Dana's heart sank. As she hurried over to hug the distraught woman, Mary Ellen started to sob.\n\nDana knelt on the floor with her arms around Mary Ellen and let her cry for a long time. Finally, she got up and got both of them a fresh cup of coffee and sat down at the table. \"It didn't go well, did it?\"\n\n\"That's an understatement,\" Mary Ellen said and wiped her eyes, looking down into her coffee cup, afraid to look up in fear that she would start crying again. \n\n\"I'm sorry sweetie. I shouldn't have put you up to this.\"\n\n\"It wasn't your fault,\" Mary Ellen said quickly, looking up at her worried friend.\n\n\"So, what happened?\"\n\n\"Nothing!\" Mary Ellen said with anger in her voice.\n\nDana took a sip of her coffee and waited.\n\n\"I did everything just like we planned. You saw how affectionate I was all night. However, there wasn't any affection returned. After we got home, Richard went to the bedroom and I went in and put on my lace teddy. Then, when I came out, he was in bed snoring.\" Mary Ellen broke into sobs again. \n\n\"Did you wake him up?\"\n\n\"Yes, but he just mumbled \"Some other time,\" or something like that and turned over. I cried half the night.\"\n\nDana reached over and grasped Mary Ellen's hand. \"I hate to say it but I think you two might need counseling. Have you thought about that?\"\n\n\"Yes, I suggested it to Richard some time ago. I even thought about the pastor of our church but I'd be too embarrassed to lay my problems out to him. Richard wouldn't even consider it though. He said that if we had any problems we could work them out ourselves.\"\n\nDana stood up and walked around the table and held her arms open to her friend. \n\nMary Ellen stood up and almost fell into the older woman's arms, breaking down again. She laid her head on her friend's shoulder and sobbed. \n\nIn spite of Dana's maternal instincts, the closeness of the sexy woman was having an effect on her. She could feel her soft breasts under her robe pressing to her chest. Mary Ellen's nipples were centered on her own nipples and she could feel them almost burning into her. Incredibly, she felt her vagina quiver and her panties getting wet.\n\nThe warmth and comfort of her friend made Mary Ellen feel better. She had her face buried in Dana's neck and the sweet smell of the older woman's hair surrounded her. Slowly, her sobs ceased and her breathing grew more rapid. Now, she too could feel her friend's breasts against her own and her hands gently caressing her back through her thin robe. \n\nDana's hands began to slide slowly down Mary Ellen's back. They paused at her waist in indecision. She held her breath as she moved her hands lower until they reached her thinly covered buttocks. Her heart was pounding in her chest. She had never been so bold in all her life; at least not with another woman. With Jennifer, she had been the passive one. It was easy because she had just let the young girl do things to her. This was different. She was being the aggressor. She knew it was very dangerous and could end their friendship. Still she persisted and began to squeeze her hands on the soft flesh. \n\nMary Ellen's eyes opened in shock. Yet, she didn't pull from the woman's embrace. A little, almost imperceptible, moan escaped her lips.\n\nDana heard it. Her heart felt like it was going to jump out of her chest as her fingers began to bunch up the back of the short robe. She pulled the material gradually higher with just her fingertips until she felt bare skin under her now very warm hands. A louder moan escaped her lips when she felt the soft bare flesh of her friend's naked buttocks. Boldly now, she cupped the cheeks of her ass and pulled her close.\n\nMary Ellen pulled her head back and looked into Dana's lust filled eyes. \"What are you doi...\" she started to whisper but suddenly Dana's lips cut it off.\n\nBoth women's heads were spinning as they stood in the kitchen kissing. The kiss was filled with heated passion but yet it was tender. Not at all like kissing a man. Neither woman had ever kissed another woman before in their lives. It was a unique experience. \n\nAs their passion grew, the two women kissed like horny teenagers on the first date. Their tongues dueled as their lips pressed together.\n\nMary Ellen felt Dana's tongue entered her mouth and she sucked, tasting her sweet saliva. When Dana's tongue pulled back, Mary Ellen's followed.",
        "One of Dana's hands slid down until it reached the back of Mary Ellen's thighs. Mary Ellen moaned, almost in protest, but yet, she spread her legs slightly apart.\n\nDana's hand was trembling as it slipped between her legs and her fingertips found her rapidly swelling lips. A gasp escaped her lips when she felt how wet her friend's vagina was. Her fingers were immediately covered in her juice. \n\n\"Oh Jesus,\" Mary Ellen moaned when Dana's finger began to play with her swollen inner lips. They were gentle as they moved over her sex, so unlike Richard's, she thought. Her breath caught in her throat when she felt the tip of one of her fingers touch her hole. Without a conscious thought, her legs opened a little wider, giving Dana's hand better access. \"Oh Dana!\" she moaned when she felt the finger began to worm its way into her pulsing hole.\n\nIt was a completely new experience for both women. Dana had felt the insides of her own vagina a million times but this felt very different. The tunnel of Mary Ellen's vagina was warmer and wetter then anything she had ever felt before. Her tight hole was almost sucking her finger inside. It was apparent to Dana that it had been a long time since she had felt a penis inside her hole. When she felt the younger woman tremble and heard another moan, she added a second finger. Within seconds, the room was filled with the squishing sounds of her finger moving in and out of the now sloppy hole. \n\nMary Ellen pulled away from Dana's mouth and buried her face in her shoulder. She was trembling all over. \"What are you doing to me,\" she whispered, almost to herself. Still, she gave no resistance. The events of the last several days and the frustration of last night had made her mad with excitement. She was no longer able to control her actions. \n\nSuddenly, Dana boldly removed one wet finger from her vagina and slid it back across the small sheath of skin between her vagina and anus. She hesitated for only a second before she touched the tiny puckered hole. \n\nMary Ellen tensed. \"Oh my God,\" she gasped as she felt Dana's finger on her anus. She went up on her toes as if to avoid the contact. The finger followed, pressing upward until the tip slipped into the tight hole. \n\nDana couldn't believe what she was doing. Her own body began to tremble with excitement. She pushed her finger upward; keeping the other buried in her vagina.\n\n\"Ohhhhh!!!\" Mary Ellen moaned as the finger penetrated her rectum. \"Oh Jesus, oh God,\" she gasped as she felt the digit worm its way deeply into her body. She pressed downward and took the probing finger into her as far as it would go. Her body began to shake all over and her head was spinning out of control. She gasped for breath. Suddenly she let out a long moan and began to climax.\n\nDana held on tight as Mary Ellen convulsed in her arms. She moved both fingers in and out rapidly now. It was incredibly exciting to feel the younger woman's vagina and anus clamp down on both fingers. \n\nMary Ellen's legs almost gave out as her climax reached a peak. Her arms squeezed the older woman and she muffled her cries against her shoulder. \n\nDana felt her own vagina quiver and, incredibly, a little climax went through her. Her legs trembled and her knees almost buckled but she remained standing by holding onto Mary Ellen. \n\nWhen their trembling stopped the two women moved apart. Both of their faces were red with embarrassment. \n\n\"Uh... uh... Richard... uh... will be up soon,\" Mary Ellen stuttered.\n\n\"Yes... uh, I have some... errands to run,\" Dana said. \"I'll talk to you later.\"\n\nMary Ellen rushed out of the kitchen and Dana hurried through the back door.\n\nChapter 8\n\nSeveral times during the day Mary Ellen thought of calling Dana. However, she didn't because she was too embarrassed. Richard had gone into work after church and she knew that he wouldn't be home until late. It was a pretty day so she decided to lie out by the pool and enjoy the fact that she was alone for a change. \n\nShe found an old single piece swimsuit and went into the bathroom to put it on. When she was naked, she thought about masturbating. Since the incident in the kitchen this morning with Dana there was a constant throbbing in her vagina. Still, she restrained herself. However, as she passed her special drawer, she stopped. She bit her lip in indecision. With a sigh, she opened the drawer and searched through her toys. There was one she had bought from a mail order catalog but had never used. It was a small butt plug that had a vibrator and a wireless remote control. It had been very expensive. \n\nShe picked up the package and felt a naughty thrill go through her. Her hands were trembling as she opened it. The plug was tapered to a round point at one end and grew gradually larger. At the fattest point it was about six around. It was flesh colored and six inches long with a flange at the end. \n\nMary Ellen's hands were shaking so bad that she dropped the batteries several times before she had them inside the remote. When she turned it on, the little plug jumped to life in her hand. A gasp escaped her lips as she pushed the speed control until it was literally buzzing.\n\nThe excited woman hurried into the bathroom and applied some lubricant to the plug. Quickly, before she changed her mind, she pulled the crotch of her bathing suit aside and touched the tip to her tiny anal hole. A groan escaped her lips as she began to slide it into her ass. It took a substantial push to get the largest section past her sphincter. It felt as though her sphincter snapped shut like a rubber band. She whimpered in excitement as she pulled her suit back into place, hiding the flange of the plug.\n\nShe looked at the control in her trembling hand. She hesitated for a second and then she pushed the button to turn it on. \"Ohhhhh God!\" she groaned and her knees almost buckled as the hidden plug came to life. It wasn't the first time she had had a vibrating plug up her ass but it seemed so much more naughty this time. She was going outside and lay at the pool with her ass stuffed with a vibrating plug. God, if her neighbors knew! she thought and her face flushed. \n\nMary Ellen turned the still humming device off quickly and hurried to get a towel and some tanning oil.\n\nDrew was in his office \"cave\", as Dana called it, when she came in to talk later that day. He turned away from his computer and smiled at her. \"Hi sweetie.\" He could immediately see that she was distraught. \"What's wrong?\"\n\nDana had agonized all morning over what she was going to tell Drew about her conversation with Mary Ellen, or if she were even going to tell him. Finally, she sighed and said, \"Mary Ellen didn't have a good night. Richard ignored her.\"\n\n\"Oh, that's too bad.\" Drew was genuinely concerned. He liked Richard and Mary Ellen and hated to see them have problems.\n\nDana came over, sat on his lap and kissed him. \"I'm so glad I have you,\" she said sincerely.\n\n\"The feeling is mutual,\" Drew replied as he hugged her. \"So what is Mary Ellen going to do now?\"\n\n\"I don't know.\"\n\n\"Has she thought about counseling?\" \n\n\"Richard won't do it.\"\n\n\"That man's a lot crazier than I thought. She's such a sexy woman... and with a great ass I might add,\" he said and smiled. \"I'd be fucking it every day if I were him.\"\n\n\"Would you?\"\n\nDrew looked at her and said, \"Would I fuck her ass? Of course.\" He smiled broadly.\n\n\"No, I mean would you really do something with her?\" Dana said seriously.\n\n\"Uh... well, no. I would never do anything behind your back.\"\n\nDana looked sad for a moment as she thought about his comment. She had done \"something\" behind his back. Her guilt was just below the surface at all times. She had been so stupid. And, the guy she had the affair with wasn't near as good as Drew! It was only exciting because it was different-something new-that she had done it in the first place. She had realized that doing \"new\" things were the only way to keep a marriage fresh. \n\nDana paused for a minute, thinking. Suddenly, a wild thought occurred to her. \"What if I said it was okay?\"\n\n\"What was okay?\"\n\n\"For you to do something with Mary Ellen.\"\n\nDrew looked at his wife as if he didn't understand. Then his face showed shock. \"What? You're kidding?\"\n\n\"I'm serious. Don't you see, it's perfect,\" she said with a big smile.\n\n\"Now I know you've gone crazy.\"\n\n\"No I haven't... well, maybe,\" she laughed. \"Think about it. Mary Ellen is ripe for an affair. If she goes out and finds someone it could be very dangerous-you know with all the nuts and diseases out there. You like anal sex, she likes anal sex-although she has never had it for real-and it would be relatively safe. The only danger would be if Richard found out and he is basically clueless.\"\n\n\"I can't believe that you're saying this,\" Drew said, unable to believe that she could be serious. However, he began to feel excitement. Maybe it was because she was squirming her sexy ass on his crotch now. \n\n\"Are you saying that you aren't interested?\"\n\n\"No! Uh... I mean... uh... wouldn't you be jealous?\" Suddenly, the idea was becoming very appealing to him.\n\n\"Yes, probably. But it would be very exciting too.\"\n\nDrew was silent for a long time. He gazed out the window. While he was looking calm, excitement was now coursing though him. He fought to keep his voice controlled and said, \"So if I said yes, how do you suppose I would go about it?\"\n\n\"Well, I don't think she would be a pushover but I'm sure with your charm you could manage,\" Dana smiled. She could feel Drew becoming hard under her ass. \"Besides, I could drop a few hints that I wouldn't mind.\" Dana had a wide grin on her face as she continued to move on his lap. Now Drew penis was totally stiff under her. \"If she sat on your lap like I'm doing right now, well...\" \n\n\"This is crazy.\"\n\n\"But, you want to do it,\" Dana said and pushed her ass down on his now throbbing penis. \"I can tell. Now, let me tell you what happened this morning after Mary Ellen and I talked...\"\n\nA few minutes later Drew sat with his mouth opened in shock. \"So you actually had your finger up... up her ass?\" he said in a trembling voice.\n\n\"Yep! And she almost fell to the floor as she climaxed.\"\n\n\"All right, all right, I'm convinced. So when do I start the big seduction?\" Drew said, suddenly very impatient.\n\n\"Well, I saw her go out to the pool a little while ago, so why don't you go over and talk with her.\"\n\nDrew almost threw Dana off his lap in his haste. He rushed over and looked out the window of his office. His \"cave\" overlooked Mary Ellen's backyard. Drew often watched her at the pool or gardening. He saw her lying on her stomach on a lounge chair.\n\nDana walked up behind him and peeked over his shoulder out the window. She wrapped her arms around his waist and her hands slipped to the bulge in his shorts. \"She does have a nice ass. Can you imagine that my finger was between those sweet cheeks a little while ago,\" she said as she slowly unzipped his shorts.\n\n\"Dana,\" Drew gasped as she fished inside his shorts for his throbbing tool. \n\n\"Oh my,\" she gasped as she pulled his penis out as saw the long shaft pulsing in her hand. \"God, this will split those cheeks so wide.\" \n\nDrew's hips began to move in time with Dana's stroking hand. She could feel his juice coating her fingers as she moved her hand slowly up and down the shaft. A chill ran down her spine at the thought of her husband's fat penis sliding into her friend's ass. She knew how that felt. \"Well, you had better get out there before she goes inside,\" Dana said.\n\nA moan of frustration escaped Drew's lips but he knew that if she kept stroking him he would waste his seed on the windowsill. He quickly put on a pair of swim trunks and headed outside. \n\nChapter 9\n\nDrew stepped inside the gate to the privacy fence that circled the pool. He smiled brightly as he walked over to the pretty woman. \"Wow, who's my new neighbor?\" he said when he saw her new hairstyle. \n\nMary Ellen jerked her head around and saw the good-looking man standing over her. \"Uh... thanks... uh... well... uh... no... I was...\" she stuttered. Normally she would have welcomed the company of the sexy man. However, with the plug still inside of her, it was the worst possible time. Quickly, she lifted up and quickly shut off the remote discretely. She had been very close to a climax. However, in her haste, she dropped the little device on the cement.\n\n\"I love your new look. The hair style fits you perfectly,\" Drew said sincerely as he reached down and picked up the remote. He sat down in a chair. \"What's this?\" \n\n\"Uh... uh... it's a remote to one of... of Brett's toy cars. It's... uh... around here somewhere.\"\n\n\"I love those things. Maybe if I turn it on we can find it,\" he said and pressed the on/off button excitedly as he glanced around the yard.\n\nMary Ellen's eyes grew wide as the plug started to vibrate. She sucked in her breath, hoping that Drew wouldn't notice the shocked look on her face. \n\n\"Hmm, don't see anything yet.\" Then he placed his thumb on the speed adjustment and turned it up.\n\nMary Ellen almost gasped and bit her lip as the vibrations increased. She swallowed hard and fought to keep her hips from moving. \n\nDrew turned it higher. \"Are you okay,\" he asked when he saw her face.\n\n\"Uh... yes... uh... it's just a little hot out here.\" Now she was trying desperately not to cry out. She could feel the vibrations radiating through her body. Her nipples were suddenly very hard and her clit felt like it was swollen to twice its normal size. \n\n\"So, is Richard working today?\" Drew asked casually as he toyed with the control, moving the speed control up and down.\n\nMary Ellen was about to go mad. She knew that if he kept it up she would climax right there. Sweat began to bead on her forehead. \"Uh... yes, he... uh has some big presentation Tuesday so he has to get it ready.\" Mary Ellen started to tremble. \"Jesus, I'm hot. Drew... uh... would you be a doll and get me a glass of lemonade from the refrigerator.\"\n\n\"Sure,\" Drew said. He tossed the remote onto the table and walked toward the house. \n\nThe second he was inside, Mary Ellen jumped up and rushed over to grab the remote. However, before she could turn it off, she began to climax. Suddenly, she lost strength in her legs and she grabbed the table for support. Waves of pleasure rolled over her. She felt the familiar spasms in her anal canal. Her anal climaxes were normally very strong however her attempt to prevent a climax made this one much stronger than usual. A groan escaped her lips and she squeezed her ass cheeks together. Her vagina quivered and throbbed as well. Her fingers gripped the table as wave after wave of pleasure rushed through her. \n\n\"Are you sure you're alright?\" Drew asked as he walked back out with two glasses of lemonade and saw Mary Ellen almost weaving. \n\n\"I'm... I'm just hot,\" she gasped and grabbed the glass and drank half of it. Finally, when her climax slowed, she walked unsteadily back to her lounge. A big sigh of relief came from her lips as she sat back down. However, she almost jumped back up as her weight forced the plug deep into her rectum.\n\nDrew looked at Mary Ellen with a questioning look. There was something more going on here, he thought. \n\nMary Ellen's breathing eventually returned to normal as the spasms slowed. \"That's what I needed,\" she sighed as she finished the glass. She sat back and looked at her handsome neighbor. He was staring out over the fence so she stole a closer look him. His bare chest and arms showed that he spent a good bit of time in the gym. She had seen him at the pool often so she was pretty familiar with his physique. However, her recent sexual frustration and the fact that Dana told her that he liked her ass made her look at him differently today. \n\n\"It's beautiful out here today huh?\" Drew said, staring at a flock of birds swooping in the crystal blue sky.\n\n\"Yes it is,\" Mary Ellen said as her eyes traveled across his strong chest and rippled stomach. She wasn't referring to the weather though. Her eyebrows rose when she saw the bulge in his trunks. \n\nDrew liked to wear tight swim trunks. It was a joke between he and Dana. He would always say that he was in the advertising business so he knew that it paid to advertise. \n\nMary Ellen had to agree. She could feel herself becoming excited again as she stared at the substantial bulge in his shorts. She could see that Dana wasn't lying when she said that Drew had large equipment.\n\n\"You have a great tan,\" Drew said.\n\nMary Ellen jumped and looked up. She saw Drew staring at her. Her face turned scarlet and she said, \"Thank you!\" Hoping that he hadn't noticed where her eyes had been.\n\nHe had. He slipped down lower in his chair, opening his thighs and presenting his crotch to her wide eyes.\n\n\"Could you get me another,\" Mary Ellen said as she held out her empty glass. \"Oh and maybe you can add a little Southern Comfort in there this time,\" she added with a smile. \n\n\"Sure,\" Drew responded and took her glass and walked toward the kitchen. \n\nMary Ellen watched his butt as he walked. I'm not the only one with a sexy ass! she thought.\n\nFrom the upstairs window, Dana watched her friend stare at her husband's ass as he walked out of sight. In spite of all of the dangers, or maybe because of them, she found the thought of Drew and Mary Ellen together incredibly exciting. She knew it wasn't normal but she couldn't help it. And, yes, there was a little jealously. However, somehow that felt okay. After all, she had screwed someone behind his back. She had even let her lover have her in their very own bed, not to mention the car, the kitchen and even on the back deck. \n\nAs Dana continued to stare out of the window, her hand stole down and inside her shorts. A little gasp escaped her lips when she felt her swollen sex lips under her finger. Although she had a little climax this morning with Mary Ellen, she felt excitement building again. In her mind she could see Mary Ellen on her hands and knees with Drew behind her. The swollen head of his penis poised at her tiny hole. Dana's own little hole pulsed as her finger began to move in and out of her dripping vagina. Suddenly, she stopped and looked around the room. She needed something.\n\nA naughty thrill ran thought her when she saw an object on Drew's desk. It was a trophy he had won for first place in an advertising campaign. It had a heavy wooden base and a nine-inch high brass object in the center. Dana had said that it looked like a \"dildo\" or a \"butt plug\". Drew didn't think it was funny. He was very proud of the award.\n\nDana snatched up the trophy and walked back to the window on shaking legs. She quickly unsnapped her shorts and let them fall to her ankles. Then she pushed her panties to her thighs. She knew that this was crazy, but she couldn't help herself. She placed the brass knob at the entrance to her wet vagina and slowly slipped it inside. A moan escaped her lips and she began to move it in and out. When it was dripping with her juices, she pulled it out and moved it toward her rear hole. She stared out the window at Drew and Mary Ellen as she slowly slipped it into her ass. \"Oh Jesus,\" she moaned as it went halfway in. She lifted her leg from her shorts and let the panties drop to the floor so that she could spread her legs wider. She pushed again and groaned as the long tube went all the way inside her ass.\n\nMary Ellen's eye caught movement in their upstairs window as she and Drew talked. She looked up and saw Dana looking directly at them. As their eyes met, Mary Ellen felt her face flush at the remembrance of what had transpired between the two of this morning. Then, suddenly she jumped when she felt the vibrator come to life again.\n\n\"Do you hear that?\" Drew asked as he turned up the speed on the remote control.",
        "\"Hear... what?\" Mary Ellen answered, knowing perfectly well what he was talking about.\n\n\"I thought I heard a buzzing sound.\"\n\nMary Ellen clinched her ass cheeks together and pressed down into the cushion of the lounge chair to hide the noise.\n\n\"Oh well, I thought I'd found Brett's toy. By the way, Dana wanted me to ask you and Richard over for some steaks on the grill tonight.\" He hadn't cleared it with Dana but he knew that it would be fine. He also figured that Richard wouldn't be home.\n\n\"Unfortunately, Richard won't be home until very late and since it's Memorial Day tomorrow, I'm letting the kids stay with their grandmother until tomorrow night.\"\n\n\"Well, it's no sense in you eating alone. Come on over about six okay?\"\n\n\"Uh... uh... sure,\" Mary Ellen said. Then she almost sighed as Drew put the remote down and said he would see her later. As soon as he was gone, she grabbed the remote to turn it off again and hurried into the house.\n\nUpstairs, Dana was frantically working the fake dildo in and out of her ass. Her breath was coming in great gasps. Suddenly, her knees began to buckle as throbs of pleasure began to radiate from her stretched hole. \"Ahhhh!!!\" she gasped as a strong anal climax washed through her. Within seconds, her hands were trembling so much that she couldn't hold the heavy trophy and it fell to the floor with a thud, leaving her stretched hole empty and pulsing.\n\nDana quickly composed herself, picked up the trophy, hastily cleaned it and put it back on Drew's desk. She would never look at that award the same way again.\n\nDrew was smiling when he came back to the house. Dana was coming down the stairs. \"I invited Mary Ellen over for a cook-out tonight,\" he said with a broad smile. \n\n\"Wonderful. How did your conversation go?\" Dana asked, neglecting to tell him she had watched them from the window.\n\n\"I'm not sure. She seemed to be preoccupied for some reason.\"\n\nDana wanted to say, \"I noticed,\" but caught herself. \"What time is she coming over?\"\n\n\"Six.\"\n\n\"Well, I need you to run to the store and pick up a few things.\"\n\n\"Sure,\" Drew said and kissed her. Then he looked into her eyes and asked, \"Are you sure about this?\"\n\n\"Yes. Now let me get you a list.\"\n\nChapter 10\n\nMary Ellen was having a difficult time finding something to wear from her new clothes. She finally decided on a white tube top and matching pair of stretch short shorts. When she pulled the shorts up her thighs, she quickly realized that she wouldn't be able to wear panties. They were far too short and much too tight. She found that she had the same problem with the top because it wasn't meant to be worn with anything under it either.\n\nWhen she was finally dressed, she took one last look in the mirror and almost gasped. The top and bottom were almost obscene. She could plainly see her nipples through the thin material and when she turned around, the cheeks of her ass practically hung out of the shorts. The seam of the shorts cut between the lips of her vagina and separated the cheeks of her buttocks. She could feel it rubbing on her sensitive places with each step she took. For a second she considered changing but then a little thrill of daring ran through her and she pursed her lips in determination.\n\nMary Ellen went through the back way to her neighbor's house. She found Drew on the patio by the pool, preparing the grill. \"Hi,\" she said as she approached him.\n\nDrew's eyes opened in shock when he turned and saw Mary Ellen's outfit. \n\nMary Ellen felt her face turn red and second-guessed her selection of clothes again.\n\n\"Wow,\" Drew said, almost drooling. \"You... wow... you look great.\"\n\n\"Thank you!\" she answered but her face remained hot. \"Where's Dana?\" she asked quickly.\n\n\"In the kitchen.\" \n\nShe felt Drew's eyes almost devouring her. As she turned and walked toward the kitchen she could feel Drew's eyes follow her. A smile came to her lips and she suddenly felt good about herself. It had been a long time since a man paid that much attention to her. She couldn't help swaying her hips a little more than normal as she headed for the kitchen and she felt a tremor of excitement run through her.\n\nDrew stood with his mouth open as he watched the sexy woman walk away. He couldn't believe the change in her. Sure, he had seen her wear those tiny pink shorts to work in the garden but he had never seen her out in public wearing something so tight. Drew felt his penis twitch as he watched her swing her ass. He shook his head and turned back to the grill. He could feel his penis pulsing in his shorts now.\n\nDana was standing at the sink when Mary Ellen entered. She also had on a pair of tight shorts and a halter-top. She always looks so classy, Mary Ellen thought. \"Hi!\" she said somewhat self-consciously.\n\nDana had the same look of surprise on her face as Drew had when she turned around to face the younger woman. Then her face broke into a wide smile. \"My, my,\" she said as her eyes scanned up and down the pretty woman's body. \"It looks like you want to get raped tonight,\" she laughed.\n\n\"Is it too much?\" Mary Ellen asked with concern in her voice.\n\n\"Absolutely not. I'm surprised that Drew let you off the patio though.\" She paused as she continued to scan the shapely woman's body. \"You have an amazing shape lady,\" she said sincerely.\n\n\"Thank you!\" Mary Ellen said and blushed at the older woman's appraising stare.\n\n\"Turn around.\"\n\nMary Ellen hesitated but then turned around. She felt Dana's eyes on her ass and her face grew warmer when she remembered what had happened earlier. Then the same little chill of excitement she had felt when Drew looked at her ran down her spine. Suddenly, she felt Dana step close behind her. Her heart started pounding in her chest. Then, she closed her eyes and gasped as she felt the warm hands of her friend caressing her buttocks just like this morning. Without debating whether it was right or wrong, she pushed back into the roaming hands and moaned.\n\n\"Oh God,\" Dana gasped as her hands slid down to touch the soft skin below the elastic of the legs of her shorts. Her fingers slipped under the leg band and lifted up until she held both cheeks in the palm of her hands. She felt Mary Ellen push her buttock back slightly and heard her moan. \"We had better get outside or I'll rape you,\" she whispered in warning and quickly kissed the younger woman's bare shoulder and gave her buttocks one last squeeze.\n\nMary Ellen felt goose bumps form on her shoulders and she sighed and reached down to adjust her shorts. She attempted to pull them from between her now swelling lips but it was useless. She had never had that problem when she had pubic hair. \n\n\"Fix yourself a drink and then help me take things out to the patio.\"\n\nMary Ellen composed herself and walked over to the bar. She got herself a drink and stood watching Dana. The older woman seemed so sophisticated and sexy-everything that she wanted to be. She glanced down at Dana's hands as she molded the raw hamburger. Then her face flushed hot and she could almost feel the woman's manicured finger sliding up her ass again. Suddenly she felt a little remorse at how far she had let things go and a frown came to her face.\n\nDana looked up and saw her frown. \"What's wrong?\" she asked.\n\n\"Dana... uh... about... uh this morning...\" Mary Ellen hesitated, not sure what she was going to say.\n\n\"Don't worry sweetie, that will be our little secret. Just between us girls,\" she said with a bright smile as she tried to ease the younger woman's concern. In truth, she was just as embarrassed as Mary Ellen. \"Come on and help me carry the food outside.\"\n\nThe three of them sat on the patio and ate a quiet dinner. They made small talk about the weather and kids as they finished off a pitcher of Drew's \"special\" punch. It was pretty much half fruit juice and half alcohol, so it didn't talk long for all of them to feel the affects. \n\n\"Excuse me for a second.\" Dana said and then went inside and put on some soft music. The stereo system piped the music outside through speakers around the patio. When she came back out, she reached her hand out to Drew. He got up and stepped into her arms and they danced around the patio as the sun began to set over the trees. A warm breeze made the wind chimes hanging from the patio roof jingle. \n\nWhen the song ended, Dana looked at Mary Ellen and saw a sad look on her face. Her heart went out to her friend. She knew that she was feeling like a third wheel. \"Drew, dance with Mary Ellen,\" she whispered.\n\n\"Gladly,\" Drew said and stepped over to pull the reluctant lady into his arms. \n\n\"I'll get some more of Drew's special brew,\" Dana said as she picked up the empty pitcher and went into the house.\n\nDrew held Mary Ellen tightly in his arms as he moved effortlessly around the patio. He and Dana had taken ballroom dancing lessons for years and he was quite adept. \n\nAs the two danced the sun disappeared over the horizon and the patio lights came on, giving the entire area a romantic glow. \n\nThe alcohol, the music and the warm breeze made Mary Ellen relax and she almost melted into Drew's strong arms. She barely realized that Drew's hands had slipped down to the curves of her buttocks. Suddenly, she sucked in her breath as his hands pushed her shorts up and cupped her soft cheeks just like Dana had done earlier. \"Drew,\" she whispered but didn't try to pull from his warm embrace. Instead, she let her head fall to his shoulder.\n\n\"God, you have a sexy ass,\" he whispered. \n\nMary Ellen could only moan at his surprising words, as she felt his strong hands squeezing her cheeks. Suddenly she could feel his rapidly swelling penis against her leg. \"Drew please,\" she almost whined, realizing that Dana could come out any second. \n\n\nDana smiled as she watched the two from the kitchen window. She could feel her excitement begin to grow. Instead of rushing back outside, she waited, giving Drew time to loosen her up. An excited sigh came to her lips when Drew turned the woman so that her back was facing the window. She could see her husband's hands kneading her soft ass cheeks. When she looked at his face, she saw him smile and wink. A chill of excitement ran down her spine and she picked up the pitcher of drinks and carried it back out onto the patio.\n\nThe two barely noticed her as she sat back down at the table. When the next song began, Dana stood up. \"Mind if I cut in?\"\n\nMary Ellen jumped in shock when she realized that Dana was standing behind her. She pulled quickly from Drew's arms.\n\nHowever, instead of stepping into Drew's arms, Dana pulled Mary Ellen to her.\n\nMary Ellen's mouth opened as if to protest. \n\nDana smiled and said, \"I can dance with him anytime.\" Then she pulled the surprised woman close to her.\n\nSuddenly, Mary Ellen breasts were pressed to the older woman's and she could feel her warm and soft body touching hers from breasts to thighs. A little moan escaped her lips and she again melted into her arms. Her head was light as a multitude of sensations rushed over her. She could feel excitement building as the seam of her tight shorts rubbed her between the cheeks of her buttocks as they moved slowly around the patio. She let Dana lead and her head drifted to her shoulder.\n\nWhen the song ended, Dana and Mary Ellen continued to move without the music until another song came on. Dana smiled over Mary Ellen's shoulder at Drew as he sat at the table and watched. She could see the tent in his shorts. Then, like he had done, she slipped her hands down Mary Ellen's back until they were resting on her buttocks again. Dana could feel her heart pounding in her chest as she slipped them lower and grasped the younger woman's soft ass cheeks.\n\nDrew's penis was pulsing in his shorts as he watched his wife caress Mary Ellen's ass. He was finding it hard to believe that he was actually watching his wife caress another woman. \n\nMary Ellen was very much aware of where Dana's hands were. She was embarrassed by the display, but nonetheless excited. Her conservative side was telling her to stop this but the alcohol and her newly discovered wild side was egging her on. \"Dana,\" she whispered as she felt the older woman's fingers slip under the tight shorts until they were between her cheeks. \"Oh God!\" she moaned when she realized that the tips of her fingers were just a fraction of an inch from her pulsing rear hole.\n\nDana moved her fingers that fraction of an inch and touched her little rose. \n\nMary Ellen pulled her head from Dana's shoulder and looked at her with her eyes wide. Then she realized that Dana had worked the two of them over to a dark section of the patio. Still, she knew that Drew could see them. She watched, as if hypnotized, as Dana's lips moved toward her.\n\nDrew was beside himself with excitement now. He reached down and rubbed his erection, wanting to pull it out but deciding to wait.\n\nElectric shocks ran through both women as their lips touched. As Dana's fingers teased the pulsing little hole, her tongue worked inside Mary Ellen's willing mouth. A jolt of electricity went though her when the younger woman began to suck on her tongue. Their bodies began to squirm against one another as everyone's excitement grew rapidly. \n\nFinally, Dana pulled away, gasping for breath. \"Let's get into the hot tub,\" she suggested.\n\nAt first Mary Ellen looked at her like she didn't understand. Her head was spinning wildly now. \"Uh... uh... I'll have to... uh... get my bathing suit.\"\n\n\"That's okay, we'll just take our tops off.\" With that, Dana reached down and pulled Mary Ellen's tube top up and over her head.\n\nThe younger woman gasped as her breasts were suddenly bared. Then she watched as her friend quickly did the same thing, revealing her firm breasts. Almost hypnotized, Mary Ellen let Dana lead her over to the bubbling water of the hot tub. \n\nThe two women stepped into the tub and sunk down until their breasts were under the foaming water. \n\n\"Ohhhhh!!!\" Mary Ellen moaned in pleasure as the warmth of the water surrounded her body. The steam and heat of the tub made her head spin even more.\n\n\"Come on Drew, join us,\" Dana called.\n\nAs Drew got up, he felt the alcohol going to his head and he swayed just a bit. He stood, his shorts tented from his throbbing erection, and looked at the two women. Then, he walked over to the edge of the hot tub and stopped at the edge in indecision. Does she want me to get in with my shorts on? he thought.\n\nDana anticipated his question and said teasingly, \"Come on Drew, take your shorts off. You're not embarrassed are you?\"\n\nIt was intended as a challenge and it worked. Drew reached down and unsnapped his shorts. Then he pulled the zipper down and paused. He smiled at the two women and let them drop to the ground. \n\nMary Ellen sucked in her breath. Drew had on a pair of white boxer briefs that hugged his lower half like a second skin. She could plainly see his throbbing erection straining down one leg.\n\n\"Come on,\" Dana encouraged.\n\nDrew hooked his fingers in the waistband and slowly pulled his underwear down. His hard penis sprung up and slapped his stomach bringing nervous giggles from the girls. Now his shaft was pointing directly at the two women and there was a drop of clear juice hanging from the slit in the head. Drew intentionally made his penis throb, causing the juice to drip from his penis to the water below.\n\nMary Ellen gasped and placed her hand over her mouth. She had never seen a penis so large or so beautiful. Even his testicles were huge. She felt her little rear hole quiver at the thought of something so big going in there.\n\nDana moved to give Drew room between them and waved him over.\n\nDrew slipped in between the two and placed his arms around their shoulders. He could feel Mary Ellen become tense under his arm.\n\nWhen the younger woman looked over, she saw Dana snuggled into Drew, so she relaxed and did the same. \n\nThe three of them sat quietly for a while, enjoying the warmth of the tub and the closeness of their bodies. \n\nMary Ellen closed her eyes and leaned her head onto Drew's shoulder. She barely noticed the hand that was draped over her shoulder move until it was at the side of her breast. Her eyes flew open and she looked to the side. Drew and Dana were kissing. She held her breath as the hand moved slowly over her breast until it was squeezing the soft flesh. Her body began to tremble and she closed her eyes again. She suppressed a moan of excitement.\n\nDana slid her hand under the water until she wrapped it around Drew's pulsing penis. When their lips pulled apart, she watched Drew turn to Mary Ellen and present his lips to her.\n\nMary Ellen looked at Dana and saw her nod her head up and down. \"Oh God,\" she whispered as Drew's lips met hers. Her mind was racing as they kissed passionately. It had been so long since Richard had kissed her like this and she had missed it... but this was so wrong. Yet, she couldn't bring herself to push him away. Instead her mouth opened and let his tongue enter. \n\nThe kiss went on for a long time until Dana pulled Drew's lips back to hers. Now, he had one hand on Dana's breast and the other on Mary Ellen's. Dana's hand continued to pump his penis under the bubbling water. Suddenly, he felt like he might climax. \"Wait,\" he almost screamed and pulled from between the two women. He stood up quickly and turned to sit on the edge of the tub, gasping for breath.\n\nDana smiled as she watched his penis throb with excitement. \"Two women are almost too much for you huh?\" she joked.\n\nMary Ellen's eyes were opened wide as she stared in the flickering light at Drew's throbbing penis. She squirmed her hips under the water.\n\n\"Almost,\" Drew gasped as he fought to gain control of himself.\n\nDana slid over next to Mary Ellen and put her arm around her. \n\nWith little resistance, Mary Ellen let the older woman pull her into an embrace and bring their lips together again. There was a moan from the man sitting on the side of the tub as he watched the women kiss. He had never seen anything so beautiful. \n\nWhen Dana pulled away, she giggled as she saw that her husband had his hand wrapped around his penis. She whispered something to Mary Ellen. Then she pulled away from her and waded her way over until she was standing next to Drew. She pushed his hand away and took his penis into her fist. As she held his penis up, she looked at Mary Ellen and smiled. Then she dropped her head. Her tongue came out and she began to lick Drew's pulsing shaft.\n\nMary Ellen squeezed her legs together as she watched her neighbor licking her husband's penis right in front of her. The entire night had become surreal. She watched her friend's jaws bulge with her husband's thick cock and her own mouth watered. Her hand stole under the water and drifted between her spread legs. A moan escaped her lips when her fingers found her swollen sex. Her body trembled and she felt like she could climax right there. \n\nDrew gasped when his wife sucked the large head of his penis deep inside. He could see that Mary Ellen was watching intently. He leaned back on his hands and lifted his hips, forcing his penis deeper into his wife's mouth. A moan escaped his lips as she used her tongue in a butterfly motion to tease the dripping slit at the head. Then she closed her lips around the head and used her teeth to gently nip the sensitive skin beneath the crown. \n\nFrom years of experience, Dana knew what Drew loved. Sometimes she would tease him unmercifully like this, never giving him enough pressure to get off. A smile was on her face as her hand moved up and down the shaft and her tongue laved the swollen head trapped in her sucking mouth. Eventually, Dana pulled her lips from Drew's penis with a loud pop. She smiled at Mary Ellen and motioned her over before dropping her head back to his penis. ",
        "Mary Ellen shook her head no but her body was saying yes. She felt like some unknown force was pulling her toward them. Her eyes stared at Dana's bobbing head as she sucked loudly. She had always wanted to suck Richard but he had refused. He said it was dirty and perverted. \n\nDana pulled her mouth from Drew and looked at the still seated woman. \"Come here!\" Dana said. The words sounded so harsh, almost like a command. \n\nSlowly, Mary Ellen began to wade toward the couple. If she had not been in water, she feared that her legs wouldn't carry her. A second later, she was standing inches from the two. Her naked chest was heaving up and down in excitement. Water shimmered on her breasts, reflecting in the hanging lights. Her nipples were hard pebbles.\n\nDrew could feel the blood pounding in his temples as he stared at the beautiful bare breasts of his neighbor. He looked down at this wife and then at Mary Ellen. He held his breath when he saw Dana hold his penis out to Mary Ellen and then heard her say, \"Come closer and suck it!\"\n\nMary Ellen hesitantly took one more step and reached out with a trembling hand and touched Drew's saliva wet penis. It almost felt hot enough to burn her hand. She wrapped her fingers around it, marveling at how large it looked and felt in her tiny hand. She could feel it pulsing as the blood rushed through it. She trembled. Her brain was screaming \"No!\" but her body was saying, \"Yes!\"\n\n\"Suck it Mary Ellen,\" Dana said again and reached up to push the woman's head down toward her husband's penis.\n\nA groan caught in Mary Ellen's throat as her mouth opened and she took Drew's penis into her mouth. She felt her swollen vagina pulse as the smooth and swollen head slid past her lips and into her mouth. It brought back memories of her high school days. Specifically, the night she had given her one and only blowjob to Billy Taylor. It was an exciting experience but one she had never repeated. Then, her thoughts returned to the present and about all the times that Drew's penis had been inside Dana's body. However instead of being repulsed, she felt electric shocks rush through her. She sucked even harder. A steady stream of his pre-cum juice coated her tongue and she swallowed. Another moan escaped her throat.\n\n\"That's it, suck it, suck his big cock!\" Dana whispered as she leaned close to her friend. \"You're making him so hot.\"\n\nMary Ellen moaned at Dana's nasty words. Her hand began to move faster up and down the long shaft and her lips made a sucking sound as she lost herself in the pleasurable task. She never thought oral sex could be so exciting. \n\nDrew was going mad with desire. His hips began to lift from the side of the tub and he felt his balls churning. \"Oh God,\" he moaned.\n\nDana could tell the signs and she knew that Drew was close to climaxing. She decided to warn her friend. \"Mary Ellen, Drew is going to cum,\" she whispered into her ear.\n\nMary Ellen felt a chill go down her spine at the words and she moaned deep in her throat. However, she didn't stop her movements.\n\n\"Do you want to drink his cum?\" Dana asked excitedly when she didn't pull away. \n\nAnother moan came from deep in Mary Ellen's throat. Her hand now became a blur as she began to desperately seek her reward. \n\n\"Ohhhhh!!!\" Drew moaned loudly and he lifted his hips. Suddenly, his balls pulled tight to his groin and his penis erupted.\n\nA second later, Mary Ellen's mouth was being filled with Drew's thick sperm. It shot out of the head like a cannon, splattering the back of her throat. She swallowed and moaned as his thick juice slid down her throat. Her mouth filled again and again. Each time she swallowed and then sucked for more. \n\nDana watched in amazement as Mary Ellen drank her husband's sperm like she had been doing it all her life. She knew that there was a wild women buried inside her friend. A smile came to her lips as she watched her continue to milk his softening penis until it fell wetly from her mouth. \n\nMary Ellen had lost track of where she was and what she was doing. When she looked up, she saw Dana and Drew smiling at her. Suddenly, she felt very self-conscious. With a trembling hand she wiped a drop of sperm from the corner of her mouth and her face turned red with embarrassment.\n\n\"Uh... let me get us a couple more drinks,\" Drew said, suddenly uncomfortable himself. He hurried off toward the house.\n\nDana watched his naked ass and smiled. She turned to Mary Ellen and said, \"So how did you like giving your first blow job?\"\n\nThat brought a smile to Mary Ellen's lips. \"It wasn't really my first-high school dance. But this one was much better. It was amazing.\"\n\nChapter 11\n\nWhen Drew was out of sight, Dana moved next to her still very excited friend. She smiled when she didn't resist as she pulled her into her arms. Their lips pressed together. It was Dana's turn to moan when she tasted Drew's sperm in her mouth. When she pulled away she said, \"Your mouth tastes sweet. Giving a blow job is fun isn't it?\" Her hand slipped under the water and between the younger woman's legs.\n\n\"Yes,\" Mary Ellen answered. Suddenly, her eyes opened wide and she gasped. However, she moved her legs apart for the woman's searching hand. \n\nDana worked her fingers under the crotch of her friend's wet shorts and into her willing vagina. Never in her life had she done something like this. It was hard for her to believe that she was being so aggressive. \n\n\"Oh God Dana,\" Mary Ellen moaned in excitement.\n\n\"Hmmm... hmmmmmm!!!\" Drew said, clearing his throat, as he stood over the women.\n\nBoth women jumped in surprise and they looked like kids caught with their hands in the cookie jar. \n\n\"Drinks are served,\" he said, standing unashamedly above them totally naked, holding a tray of drinks. His still long penis hung limply between his legs and there was a tiny drop of sperm at the slit.\n\nBoth Dana and Mary Ellen's eyes were drawn to his groin. A smile came to Dana's lips as she reached up and grasped his penis and said, \"I think Mary Ellen has already had her drink.\" She looked at Mary Ellen and then laughed. Then she let go of Drew's stiffening penis and took Mary Ellen's hand to lead her out of the hot tub. \n\nDrew gasped when he saw that Mary Ellen's white shorts had become totally transparent in the hot tub. They were plastered to her lower half like a second skin. He could plainly see her swollen sex lips and the tiny tuft of hair at the top. \n\nMary Ellen saw Drew's eyes and looked down. A sudden chill of naughty excitement rushed through her when she realized that she was practically naked. \n\n\"Oh my,\" Dana exclaimed and then laughed when she saw what the two were looking at. With a push of her hand she turned the younger woman around so that they could see the rear view. Like the front, Mary Ellen appeared practically naked. The white cloth clung to her buttocks showing her pale ass cheeks. The tan lines from her bathing suit were visible as well. \n\nDrew felt his penis twitch and begin to growth again.\n\nDana turned the woman back around and gave Drew another smile. Then she led Mary Ellen over to the table to sit down. \n\nThe three of them sat at the table and had another drink. Had Drew not been naked and the two women topless, it would have appeared to be three friends having a casual drink. \n\nHowever, the situation was anything but casual. \n\nDrew's eyes feasted on the two sexy women sitting across from him. It almost appeared as if they were thrusting their breasts out to him. He smiled as he first caught Dana and then Mary Ellen's eyes.\n\nDana smiled and Mary Ellen flushed. \n\nStill, Mary Ellen didn't try to cover her bare breasts. She could feel water running from her breasts and dripping onto her thighs, sending shivers of excitement through her. Her hard nipples suddenly felt burning hot. \n\nAfter a while, Dana saw that Mary Ellen was trembling and stood up, holding her hand out to her. \"The air is getting chilly out here. Let's go inside where we can be more comfortable.\"\n\nThe younger woman hesitated, suddenly looking frightened. She looked from Dana to Drew with indecision on her face.\n\nDana knew what she was thinking. \"It's okay,\" she whispered, as she pulled her to her feet, \"you don't have to do anything you don't want to do.\"\n\nMary Ellen stood uneasily and let Dana hold her hand as she was led toward the patio door with Drew following close behind. However, before they went inside Dana stopped and turned to Mary Ellen. \"Let's take off these wet shorts.\" Before Mary Ellen could stop her, she unsnapped her shorts and let them drop to the patio floor. Then Dana looked at Mary Ellen with lust in her eyes and let her own shorts fall. \n\nMary Ellen gasped, as she stood naked with Dana in front of her and Drew behind. She could feel Drew's eyes on her bare buttocks and Dana staring at her breasts. She almost felt like running. She suddenly thought of the story of the spider and the fly. However, before she could react, Dana was pulling her into the house and through the kitchen to the family room. She sat her down on the sofa and quickly sat close to her. \n\n\"Dana, I... I should... get home... uh Richard will be home soon.\"\n\n\"Shhhh!\" Dana whispered as she pushed the nervous woman back and brought her lips to hers. She heard Mary Ellen moan as her tongue entered her mouth. Her hand slowly came up and found one of her firm breasts. She squeezed the heavy orb and used her finger to run across the hard nipple. She felt the woman tremble in her arms and a moan escaped her lips.\n\n\"Dana... please,\" Mary Ellen said as she broke the kiss. Then she looked over and saw Drew sitting on a chair across from them. She gasped. He had his hand wrapped around his now very hard penis and was moving it up and down slowly. The large head was swollen again and looked almost purple. There was a steady stream of juice running from the split and across his fingers. While she felt scared, she found the sight nonetheless exciting. It amazed her that he was getting so excited from just looking at her body.\n\nDana leaned close to Mary Ellen and whispered, \"Would you like Drew to fuck you?\"\n\n\"Oh God... uh... I can't,\" she protested with excitement and fear in her voice.\n\n\"Why not? It's okay with me.\"\n\n\"Richard... I can't... uh... it's not... not right,\" she stuttered, suddenly very flustered. \n\n\"All right. I told you we wouldn't do anything that you didn't want us to do.\" Dana knew that she was on very tenuous ground now. None of them had ever been here before and she didn't want to ruin her friendship with Mary Ellen. She thought for a second and then whispered, \"How about you letting him eat you?\" Her hand continued to knead the younger woman's now heaving breast. \"I know you would like it because he's very good.\"\n\nMary Ellen gasped and opened her mouth to protest. However, no words came out. She could feel her vagina pulsing with excitement at Dana's words. She had never been eaten but she had dreamed about it a thousand times. Suddenly in her alcohol fogged brain, it didn't seem like such a bad idea. And, after all it wasn't really cheating was it? she thought. \n\nWhen she didn't respond, Dana turned to Drew and said, \"Come on Drew, show Mary Ellen what a talented tongue you have.\"\n\nDrew was up from his chair before Dana's words were out of her mouth. A second later he was kneeling in front of the trembling woman.\n\nMary Ellen's eyes were wide with fright as she looked at the man kneeling at her feet. Her conviction started to falter. She knew that this was so wrong and that she should leave. Yet, her heart was pounding in her chest and blood was rushing to her head. Again, she opened her mouth to protest but before she could get any words out, Dana placed her lips over hers and her fingers began to play with her breast again.\n\nNow Drew's hands were trembling as he touched the younger woman's knees and pressed her legs outward. At the same time, Dana's kissed down her neck and over the soft skin until she took a stiff nipple into her mouth. \n\n\"Oh Jesus,\" Mary Ellen gasped. As if she had no control over what was happening to her, she allowed her legs to be opened wide, letting her arms fall to her sides. She thought she was going to pass out when she felt Drew's lips on the inside of her thigh. \n\nDana glanced down and smiled at her husband before quickly going back to sucking Mary Ellen's hard nipple. \n\n\"Oh God... please... please,\" Mary Ellen moaned and her head began to move from side to side. However, she wasn't sure whether she was begging for them to stop or continue.\n\nIt didn't matter to the excited couple as they worked Mary Ellen to a fervor pitch. \n\nThe soft skin of Mary Ellen's upper thighs became wet with Drew's saliva as he gently licked his way higher, kissing and sucking the tender skin as he went. He could smell her excitement as he neared her swollen vagina. Almost forcefully he pressed her thighs wider apart. Suddenly his head dropped and he moved his mouth to her swollen sex lips.\n\n\"Ohhhhh myyyyyy Goddddd!!\" Mary Ellen screamed as she felt a mouth on her vagina for the first time in her life. Her hips lifted up and one hand reached for Drew's head to grasp his hair. \n\nDana let the wet nipple slip from her lips and looked down at her husband. She could see his tongue as it slipped inside the now squirming woman. She reached down and lifted one of Mary Ellen's thighs in order to give Drew better access. Her own vagina was pulsing with excitement as she watched the love of her life eat another woman. Strangely, instead of being jealous, she felt only excitement. She turned and kissed the woman's now gasping mouth.\n\nMary Ellen was going mad with desire now. At one end, Drew was pressing his tongue into her vagina and at the other Dana was doing the same thing to her mouth. Waves of pleasure rippled up and down her body. It felt as though every nerve ending was charged with electricity.\n\nDrew moaned when he tasted the copious juice flowing from the excited woman. Her response motivated him to work even harder and he used every technique he knew to bring her pleasure. The crazily excited woman's hands in his hair egged him on. He pulled back momentarily, his chin dripping with her juices, and there was a smile on his face. He used his fingers to open her swollen sex lips. With an animal like moan he dove back in, letting his tongue have access to the most sensitive places. First he pressed in as deep as he could go and then he pulled back, letting his tongue worry the little clit at the top before slipping his mouth back to the slick inner lips and sucking them inside.\n\nMary Ellen was moaning continuously and incoherently now. She gasped for breath and her hips lifted from the sofa as her excitement grew.\n\nDrew licked and sucked the sweet vagina until he felt that Mary Ellen was close to a climax. When he pulled back, a loud moan of frustration escaped from the frantic woman. He felt her fingers tighten in his hair and she tried to pull his head back. Drew quickly lifted her other leg and placed it over his shoulder and then pulled her down slightly. His mouth returned to her vagina and he began to suck her again. \n\nMary Ellen screamed in pleasure.\n\nSuddenly a naughty thought came to Drew and he pulled his mouth back again. Then, his hands opened the cheeks of her ass, exposing the tiny rose of her anus. He saw the little hole pulsing, almost beckoning him. His head bent down and he began to circle it with his tongue.\n\nMary Ellen's eyes flew open as she felt Drew's tongue on her little rear hole. \"Oh Jesus... oh God... Ohhhhh!!!\" she gasped and pushed her hips toward the tickling tongue.\n\nThat was what Drew was waiting for and he pressed his tongue into the tight hole.\n\nMary Ellen's entire body suddenly shook and her mouth opened as if to scream. However, nothing came out. Never in her life had she experienced anything quite like this. It felt as if the nerve endings in her ass were on fire as Drew's tongue forced its way into her rectum. Suddenly, fireworks started to go off in her head.\n\nDana could feel Mary Ellen tense and knew that she was close to climax. She pinched her nipple and pushed her tongue back into her mouth. Then, she pulled back and whispered, \"Is Drew tonguing your ass?\" It was a rhetorical question designed to excite. \"I love it when he does that to me. He's so talented.\" \n\n\"Oh lordddddd!!!\" Mary Ellen screamed.\n\nDana held on tight as the younger woman began to convulse in her arms. She pressed her lips to hers again. \n\nMary Ellen screamed into the older woman's searching mouth and her body stiffened. Waves of pleasure rushed up and down her body and her heart pounded in her chest as a tremendous climax overtook her. The pleasure went on and on. When one climax ended, another started until she couldn't tell when one ended and another started.\n\nDrew's sucking mouth was deluged with Mary Ellen's copious juices. He would have smiled but his mouth was filled over and over with her squirting liquid. \n\nFinally, Mary Ellen relaxed into Dana's comforting arms and her body fell suddenly limp. There were little whimpers coming from her lips but her eyes were closed.\n\nDrew pulled away and looked up at his wife. \n\nShe smiled at his juice soaked face and nodded to him that he should leave them alone. \n\nHe returned the smile and got up quietly and left the room.\n\nAfter some time, Dana quietly asked, \"Was it good?\" \n\n\"Oh Jesus,\" Mary Ellen whispered. \"I never knew that it could be like that.\"\n\nJust then, the lights of a car pulling up Mary Ellen's driveway startled the two women.\n\n\"That's Richard!\" Mary Ellen gasped in panic. \"I have to get home.\" She jumped up and looked around the room as if disoriented. \n\n\"Wait, I'll get you some dry clothes,\" Dana said calmly. \"You can tell him that you were just visiting with me. That's not a lie.\"\n\nA few minutes later, Mary Ellen was gone and Dana was rushing upstairs to Drew.\n\nChapter 12 \n\nThe following morning Dana was sitting in her kitchen, wondering if she should call Mary Ellen, when there was a light tap at her door. She looked up and saw Mary Ellen open the door and come in. She couldn't read the expression on her friend's face and felt a sudden rush of dread. \"Good morning,\" she whispered.\n\n\"Good morning,\" Mary Ellen answered in a non-committal tone as she walked over and got herself a cup of coffee. \n\nDana couldn't tell her mood from her voice or her expression. She saw that she was wearing a short bathrobe and slippers. It was almost 9 am and she was generally an early riser. \n\nMary Ellen sat at the table across from Dana. Then she glanced into the older woman's eyes before she blushed and looked down into her coffee. \n\nDana remained silent, not knowing what to say. While she tried to look relaxed, she could feel her heart beating heavily in her chest and her palms were beginning to sweat. \n\n\"Dana... uh... what we did, what happened yesterday... oh God,\" Mary Ellen started to say and stopped. Tears began to flow from her eyes.\n\nDana felt the blood run from her face. Here it comes! she thought. She hates us now.\n\n\"I... I can't believe that I... that we...\" Mary Ellen stopped again and took a deep breath. Then she said, \"It was... the most amazing thing... that has ever happened to me!\" \n\nAt first Dana didn't think she heard her correctly. Then her face was suddenly beaming. She reached over and grasped her friend's hand, her face full of relief. She suppressed a sudden urge to jump up and hug her. \"You're not mad at us then?\" she asked tentatively, her voice almost quivering.\n\n\"Oh God no. I... I felt guilty last night... but... but then this morning... well... I had these dreams about... about us... you know sex dreams. I realized this morning what I've been missing,\" she said with a slightly sad look on her face, and then added, \"I'm thirty-five years old and never had really had good sex.\" Again Mary Ellen paused as if deep in thought. Then she said, \"No, I'm not mad at anyone. I owe you and Drew so much. I feel like... like a new world has opened to me. I don't think I can go back, but... but I don't know what to do now.\"",
        "Dana squeezed her hand as tears came to her own eyes. \"I'm so relieved. I worried all night that we had gone too far. That... that... you would hate us.\"\n\n\"Actually, I feel closer to you than my own family,\" Mary Ellen said as tears streamed down her cheeks. \n\nDana got up and quickly came around the table to her friend. She pulled her up until they were standing face to face. Suddenly she pulled the younger woman to her and their lips met. \n\nBoth women moaned as their lips pressed together and their tongues dueled. Then, when they parted, they were both breathing heavily. \n\n\"I think we can help,\" Dana said with a lustful smile. As she said this, she wrapped her arms around the younger woman and boldly grabbed her buttocks and pulled her to her body. Her hands slipped down and under the short bathrobe and found that her cheeks were bare. \"Your ass cheeks are so soft,\" she whispered. Her excitement grew when she realized that Mary Ellen was back to play. \"Where's Richard?\"\n\n\"He went into work as usual,\" Mary Ellen answered with a playful smile. \"Where's Drew?\" she countered.\n\n\"Upstairs in his 'cave',\" Dana laughed and then said, \"Why? Do you want to play again?\"\n\n\"Well, maybe... I...\" she said and paused before adding with a little stutter of embarrassment, \"Uh... uh... I would like to... to... oh damn.\"\n\n\"To what?\"\n\n\"This... this is going to sound... crazy... you're going to think I'm crazy but I... I want to... to watch.\"\n\n\"Watch what?\"\n\n\"You and Drew... you know... uh... do it.\"\n\n\"You want to watch us fuck?\" Dana said too loudly.\n\nMary Ellen's face turned another shade of red and her chin dropped. \"Yes,\" she whispered. \"You know... uh... anal sex.\" There she had said it. She had dreamed about it all night long... all of her life long. She had never even seen a porno movie but she had read stories about anal sex and seen it in her mind a thousand times. \n\n\"Oh my God, Drew is going to go crazy! Wait here.\" With that Dana turned and left the woman standing in the kitchen as she practically ran upstairs.\n\nMary Ellen began to tremble as she waited for Dana's return. \"This is crazy!\" she kept telling herself. She had a sudden urge to run out of the house but she had come this far and she was pretty sure she would never get another chance like this. She steeled herself with determination and forced herself to stay put. A few minutes later Dana came back down the stairs with a wide grin on her face. \n\n\"Come on, Drew's waiting for us.\" Dana took Mary Ellen's hand but she felt her resist. When she turned to her she could see excitement but also fear on her face. \"What's the matter?\"\n\n\"Uh... I'm not ready to... to go... to go all the way. I just want to... to watch.\"\n\nAnother smile came to Dana's face. \"That's okay. Come on,\" she said and like last night added, \"we won't force you to do anything that you don't want to do.\" She pulled the pretty woman up the stairs behind her.\n\nWhen Dana brought Mary Ellen into their bedroom, they saw Drew lying in bed shirtless with the sheet pulled to his waist. He had a big smile on his face and there was a major tent in the sheet. \"Hi,\" Drew said almost sheepishly. \n\n\"Uh... hi,\" Mary Ellen answered self-consciously.\n\nDana led Mary Ellen to a comfortable chair at the end of the bed. \"You can watch from here,\" she whispered.\n\nMary Ellen pulled her robe closed around her and sat down, suddenly more nervous than she could ever remember being. A little moan escaped her lips as her buttocks pressed to the seat. What no one but her knew was that she had slipped the remote controlled vibrator up her ass before coming over. She placed her hand in her robe pocket and grasped the control tightly. \n\nIn the mean time, Dana hurried to the side of the bed and unceremoniously stripped off her clothes. A second later, she was in Drew's arms and they were kissing passionately. They could both feel Mary Ellen's excited eyes watching them. \n\nAs Dana kissed Drew, her hand slipped under the sheet and grasped his pulsing erection. She moved her hand up and down and heard him moan. Finally, she broke the kiss and looked at her friend at the end of the bed. With a devilish smile, she slowly pulled the sheet down to reveal the throbbing organ. \n\nMary Ellen gasped when she saw the large penis that Dana held in her fist. It had been fairly dark last night when she had sucked him off so she hadn't gotten a really good look. Even later in the living room, she had been too excited to study his equipment. But now, it looked much larger in the bright sun-lit bedroom. She squeezed her legs together and felt her vagina pulse at the thought of that large tool going into Dana's ass. A little spasm of pleasure went through her anus and her sphincter squeezed around the flesh like vibrator deep inside her. \n\nDana smiled at Mary Ellen and held his dripping penis up proudly for her to see, almost waving it at her friend. \"I don't think he needs to be sucked to get him ready but it's such fun,\" she said and opened her mouth to take his throbbing tool inside. She began to suck noisily as her hand moved slowly up and down the shaft. She pulled it out and smiled at the fascinated woman at the end of the bed, then quickly took it back inside her mouth again. \n\nDrew tried to remain still as he watched Mary Ellen through half-closed eyes. He could see her staring at them as Dana sucked him. A thrill of exhibitionist pleasure rushed through his body and he lifted his hips and spread his legs. His fingers twined in Dana's hair and he helped her move her mouth up and down on his penis. However, when his balls began to churn, he knew that he needed to stop her or risk climaxing in her mouth. With great willpower, he pulled her mouth from him, causing a loud pop. \"I've got to fuck you!\" he groaned, loud enough for Mary Ellen to hear.\n\nMary Ellen gasped at his words. She squirmed on the chair and then secretly turned on the vibrator in her ass. Suddenly little waves of vibration began to ripple through her anal canal, making her swollen sex lips drip.\n\nDrew pulled Dana to the end of the bed and had her get onto her hands and knees with her ass facing Mary Ellen. He knelt beside her and reached over to grasp her smooth ass cheeks. He watched Mary Ellen's eyes as he slowly opened her cheeks, revealing her swollen sex and the tiny rose of her anus. \n\nMary Ellen gasped when she saw her friend so brazenly exposed in the bright room. She had looked at herself in the mirror many times but it was always difficult to get a good view. Now she could see Dana's tiny anus just a few feet in front of her face. Her breathing grew more rapid as she stared at the tiny pulsing hole. It was pink and wrinkled and she noted that there wasn't a hair anywhere to be found. The only word that came to her mind at the moment was \"beautiful.\" \n\nDrew wet a finger and brought it to Dana's hole. He heard two moans, one from Dana and one from Mary Ellen, as he slowly slipped it inside. He watched the mesmerized woman's face as he pressed his finger inward until it was entirely buried. \n\nMary Ellen was having a difficult time catching her breath. Her head was spinning with excitement and her anus was pulsing with the vibrations of the dildo. She had never seen anything so exciting or obscene. She had to slow down the speed of the vibrator in fear that she would climax too soon. \n\nWithin seconds Drew had Dana gasping in excitement as he moved his finger in and out. When he added a second finger he got a loud moan from her and she pushed her hips back as her little hole sucked both of them inside. He looked over at Mary Ellen as he pulled the fingers out. Then he used the index finger of both hands to open her hole. A smile came to his lips when he saw Mary Ellen's eyes open wide. He could see her chest heaving up and down under the robe that had carelessly opened to reveal the soft cleavage of her breasts. \n\nThe sight of her best friend squirming on the bed as her husband held her anus open was almost more than the excited woman could take. She closed her eyes and moaned as her mouth opened to try to catch her breath. When she opened her eyes again, she was startled... Drew was standing next to her. His dripping penis was throbbing just inches from her face. She quickly looked at the bed and saw Dana staring back at her, still on her hands and knees. Her eyes were glazed over with lust. \n\n\"Get him wet for me!\" Dana gasped. \n\nWith a trembling hand, Mary Ellen reached out and wrapped her fingers around the long shaft. She almost pulled her hand away when she felt the hot flesh. However, instead, she squeezed her fingers tightly and watched as a bubble of clear juice formed at the tip. It grew larger until the bubble turned to a drip and began to fall toward the floor like a silky strand of spider's silk. Quickly her tongue came out and caught the drip and she sucked it into her mouth. Another moan escaped her lips when she tasted his sweet juice. Without hesitation she opened her mouth and sucked the head inside, bringing a moan from Drew. Her hand began to work up and down the shaft, milking more of the sweet liquid into her hungry mouth. Suddenly, she was lost in her sensual task, sucking and pumping the hot shaft in her hand. \n\nDrew reached forward and reluctantly pushed Mary Ellen back. He feared that he would squirt in her mouth if she kept it up. His penis popped from her lips and she looked up at him like she didn't understand. \n\nThen Mary Ellen's face colored when she saw her two friends looking at her. She let go of the wet shaft reluctantly and then watched as Drew climbed back onto the bed. He straddled Dana's squirming buttocks with his back facing Mary Ellen. Now she had a perfect view of both of their asses. Drew's squirming testicles hung low, almost touching Dana's buttocks. She watched as he pushed his wet penis downward until the head was almost touching the tiny rose of her anus. Mary Ellen gasped, wondering how the large head would ever fit into the tiny hole. She held her breath as the head touched the hole. The muscles in Drew's thighs bulged as he squatted lower, pressing the head into the resisting sphincter. It took several seconds before the little hole opened and swallowed the crown of the invading penis.\n\nEveryone in the room moaned and the two on the bed froze. It was like a ritual for Drew and Dana. Drew knew that Dana needed a moment to adjust, so he waited, feeling her little hole pulse around the head of his penis.\n\nFinally, Drew shifted his weight forward, pressing his penis, inch by inch, into Dana's resisting hole. Inside his wife's ass was a familiar and comfortable place for Drew, almost natural, yet tight and exciting. It was also extremely exciting to know that Mary Ellen was watching the incredibly intimate act. He fought not to spend himself prematurely as the combined pressure of her tight rectum and the exhibitionistic thrill consumed him. He bit his lip and pressed downward, his face showing a grimace of pleasure and concentration.\n\n\"Oh God, oh God, oh God,\" Dana moaned. She had never been so excited. She squirmed her buttocks from side to side and relaxed her sphincter, desperately wanting all of him inside. Gradually her tight hole relaxed, allowing the long shaft to slide deep into her. She could almost feel Mary Ellen's eyes on her and she spread her legs wider to make sure that she had a good view. \n\nThe room was charged with electricity as Drew's penis slowly disappeared into his wife. Then a loud moan escaped his lips when he felt his balls touch her swollen sex lips. He knew that he was in as far as he could go.\n\nMary Ellen's heart was pounding in her chest as she turned the remote control higher. She watched as Drew slowly pulled his penis from the tight hole. She could see the little hole resist, almost turning inside out. When only the head was inside, he pushed forward again, bringing a groan of pleasure from both him and Dana. He did it again and again until, soon, he was moving slowly in and out at a steady tempo. \n\nDana's fingers gripped the sheet as her husband began to move faster. The expression of pleasure on her face matched his now. She pressed her ass back at him to take him deeper with each thrust. Within seconds she was no longer concerned with Mary Ellen... she only wanted the large shaft to ravage her ass.\n\nThe bedsprings began to creek as the two thrashed on the bed like dogs in heat.\n\nMary Ellen was mesmerized as she watched the point where Dana's sphincter stretched to accommodate her husband. The round hole seemed impossibly stretched and the little wrinkles had turned into smooth flesh. Suddenly, a loud moan brought her back to reality.\n\n\"Oh God, I'm going to cum,\" Drew hissed. The pleasure of her tight hole was just too much for him.\n\n\"Yes, yes, yes! Cum in me! Cum in my assssss!!!\" Dana screamed as she neared her own climax.\n\nMary Ellen was nearing her peak as well. She watched in fascination as Drew's balls began to tighten. Then she heard him groan and saw the muscles between his balls and anus began to spasm and throb. Suddenly, she knew that he was cumming. Her own ass pulsed as a strong climax overtook her. She pressed her ass down in the chair, forcing the dildo as deeply as it would go, and turned the remote to the highest level. \"Oh Jesus!!!\" she groaned.\n\nAs soon as Dana felt Drew's penis hit bottom and begin to pulse, her own climax began. Her anal walls collapsed around the squirting shaft, literally sucking his cum into her willing hole. It was almost as if she could feel his juice scalding the walls of her tunnel as it hurled from the swollen head.\n\nMary Ellen fought to keep her eyes open as pleasure consumed her. Deep inside her mind she felt a moment of regret; she desperately wanted to feel what Dana was feeling right now; she wanted to feel a throbbing penis filling her with cream, instead of the cold rubber dildo. \n\nDana's hole was still throbbing on Drew's shaft when his balls were empty. It felt to him like she had sucked every ounce of his juice from his body. He held his position over her until, finally, his penis began to wilt and slowly slipped from the clinching hole. He collapsed onto the bed with a loud moan.\n\nThe woman in the chair was approaching another climax as she watched Drew's penis slip from Dana's ass. The sight of the older woman's stretched anus with cum dripping out took her over the top again. Her eyes hooded over as she watched a dribble of cream run out and down her swollen sex lips before falling to the bed. Soon, Mary Ellen's groans of pleasure turned into little whimpers and her body continued to jerk as if she were having a seizure. \n\nFinally, the room was silent but for the still heavy breathing of all three of them.\n\nDrew was gasping for breath as Dana lay on her stomach next to him squirming on the destroyed bed sheets. Mary Ellen was slumped on the chair with her legs spread carelessly and her robe half off her body baring her breasts. Her eyes were closed as she sucked air into her lungs through her mouth. A little moan escaped her lips as she found the remote control and turned off the vibrator. \n\nChapter 13\n\nIt was some time later when Drew quietly got off the bed and went into the bathroom for a shower. He took one last look at the two exhausted women and sighed before he closed the door.\n\nWhen Dana could finally open her eyes, she saw Mary Ellen at the foot of the bed looking lonely. She smiled at her and opened her arms.\n\nMary Ellen hesitated for just a second before she crawled onto the bed with her friend. \n\n\"Here, let's take this off,\" Dana said as she helped the younger woman take off her bathrobe. When she was naked, she pulled the slightly tense women into her arms. A comfortable sigh escaped her lips as their bare bodies touched. \n\nAfter the initial shock of the feel of her naked body pressing to another woman for the first time, Mary Ellen relaxed and snuggled into her friend's arms.\n\n\"So was it what you expected?\" Dana whispered.\n\n\"It was... it was so much more.\" Mary Ellen's face flushed at the memory of watching the large penis slip into Dana's little hole.\n\n\"Was yours as good as mine?\"\n\n\"I don't know, but after the third one I thought I was going to die,\" Mary Ellen giggled, her face buried shyly in Dana's shoulder.\n\nDana turned her friend's face toward her and looked into her still lust filled eyes. \"I'm glad.\" Slowly her lips descended until she touched Mary Ellen's. She felt her tense and resist for a second until a moan escaped her lips and she relaxed, opening her mouth to let her tongue inside.\n\nThe kiss went on for a long time before they parted breathlessly. \n\nDana slowly brought her hand up and cupped one of Mary Ellen's soft breasts. She began to knead the flesh idly as she asked, \"So do you want to go any further?\"\n\nThe room grew silent as Dana ran a fingernail around one of Mary Ellen's suddenly hard nipples. She saw goose bumps appear on her white skin. \n\n\"I... uh... I... don't know. Uh... did it hurt?\"\n\n\"No, not at all. He stretches me so good.\"\n\n\"Drew's penis looks so big next to... to your little hole.\"\n\n\"Don't worry, it's very flexible,\" Dana laughed.\n\nOver the years Mary Ellen had used a variety of instruments to pleasure herself anally. However, she had always been in control of how fast and how deep they went. She saw how violently Drew had thrust into Dana's ass as his excitement grew and worried that it might hurt. Still, the desire to have anal sex was overpowering. \"I want to... to know what it feels like to have... have a cock cum in my ass,\" Mary Ellen blurted.\n\n\"I can tell you that it's a wonderful feeling and that's there's nothing quite like it. And...\" Dana started and paused with a blush, \"And I love to feel Drew's cum dripping out for hours.\" She felt Mary Ellen tremble in her arms.\n\n\"Do... do you think... uh... that Drew could get it up... you know... get it hard again?\"\n\nDana felt a thrill of excitement at the woman's words. \"Yes, I'm positive, especially if we gave him a little encouragement.\"\n\nMary Ellen started to ask what she meant by \"a little encouragement\" but stopped when Dana began to kiss down her neck. She was suddenly tense as the woman gently kissed across her neck and to the swell of her breast. \"Dana... what are... are you doing?\" She knew perfectly well what Dana was doing. She held her breath as Dana's lips moved slowly across the soft white flesh toward her nipple. \"Oh Jesus,\" she moaned when her tongue found the hard nub. \n\nDana smiled at her friend's moan and opened her mouth to suck the nipple inside. She had never done anything like this in her life. But somehow, at the moment, it seemed so right. As she sucked one nipple, her hand came up to caress the other breast. When she felt Mary Ellen begin to squirm under her she pulled away and quickly straddled her waist. She looked down at the surprised woman for a second before she dropped her head and began to suck on her breasts again. She squeezed the two together and moved her mouth from one wet nipple to the other, her salvia running into the space between them.\n\n\"Dana, Dana, Dana,\" Mary Ellen moaned as she closed her eyes in pleasure.\n\nWhen both breasts were covered in her saliva she began to kiss lower. Her lips slowly traced a wet path down to her stomach, stopping to worry her ticklish bellybutton. \n\nSuddenly, Mary Ellen realized where her friend was heading. Her hands reached out to grasp her head. However, for some reason she didn't have the strength to stop her. Her fingers entwined in her hair and followed her head lower. When Dana's tongue licked the little patch of pubic hair, she lifted her hips and moaned. Unconsciously, her fingers began to push her head lower.\n\nDana would have smiled but she was suddenly too excited. In all her life she never imagined that she would be doing what she was about to do. Her lips moved lower and she felt Mary Ellen open her legs to give her room. On her knees now, her tongue moved through the soft pubic hair until it reached the top of the now squirming woman's vagina. With a guttural like moan she moved her mouth down.",
        "\"Oh Jesssssuusss!!!\" Mary Ellen screamed when she felt her swollen lips being parted by the searching tongue.\n\n\"Mmmmm!!!\" Dana moaned as her tongue found the sweet bubbling juice between her lips. Her head was spinning from the naughty excitement of what she was doing. The smell and taste of the excited woman consumed her senses. Suddenly she wondered why she hadn't done this before as her mouth was filled with the sweet taste of the younger woman. \n\nAs Dana's mouth worked on her swollen lips, her chin touched something. She pulled back briefly and saw something between the woman's cheeks. However, before she could investigate, Mary Ellen pulled her head tightly to her groin. Dana knew what she wanted and she began to suck her hole.\n\n\"Oh! Oh! Ohhhhh!\" Mary Ellen moaned as she pushed the head tightly between her legs. She raised her legs and wrapped them around Dana's neck, her heels digging into her upper back. Suddenly, she was climaxing again. \n\nIt was difficult for Dana to hold the thrashing woman on the bed as her hips bucked and her thighs twisted her head. However, she held on, sucking and chewing the swollen flesh like a mad woman now. It took quite some time before she felt the hands in her hair, and the thighs pressed to her face release her. \n\nAs soon as Mary Ellen began to relax, Dana pushed the surprised woman's legs upward until they were pressed to her breasts. She looked down and almost gasped when she saw the flange of the dildo that was still in Mary Ellen's rectum.\n\nSuddenly, Mary Ellen realized that she still had the dildo up her and groaned with mortification.\n\n\"What's this?\" Dana asked as she reached down and touched the vibrator.\n\nMary Ellen groaned again and turned her head away. \"It's... it's a little remote controlled toy. I... I didn't expect... anyone to see it.\"\n\n\"Very cute,\" Dana said with a broad smile. \"Where's the remote?\"\n\n\"In... in my robe.\"\n\nDana reached over and pulled the remote control device from the pocket of her bathrobe. She held it up and studied the little device. Then she pressed the \"on\" button. A devilish smile came to her face.\n\n\"Oh Jesus Dana,\" Mary Ellen groaned when the vibrator came to life in her ass.\n\nDana's smile broadened and she turned the speed up and watched the woman squirm. And, just like Drew had done the day before, she began to move the speed control higher and then lower, watching her friend's frantic movements. Then she reached down and placed her middle finger at the entrance to Mary Ellen's vagina. With a little push she buried her finger deep.\n\n\"Dana please,\" Mary Ellen hissed as she felt the woman's finger moving inside her. \n\nDana turned the vibrator up another notch. \"Oh wow!!!\" Dana said when she felt the vibrations through the thin wall separating her vagina from anus. She began to move the finger in and out and watched Mary Ellen's excitement grow. Finally, she turned it off and said, \"We'll have to explore that some other time. I have other plans for your little hole now.\" \n\nMary Ellen almost sighed in relief but then she realized what Dana had said and her eyes opened wide.\n\nWith that Dana reached down and gently pulled the long penis-like object from her clenching hole. \n\nMary Ellen groaned as the device slipped from her anus, leaving her suddenly feeling very empty.\n\nThe length and width of the dildo surprised Dana. If she can take this up her ass, she won't have any problem with Drew, she thought. Then she tossed the dildo aside and pushed her legs back to her chest again. Her mouth dropped to begin to kiss down her swollen vaginal lips again.\n\n\"Dannnnnaaaa!!!\" Mary Ellen moaned as she started to suck her again.\n\nSlowly Dana moved her tongue from the clenching hole of her vagina and moved lower. Her own heart was pounding in her chest at the thought of what she was about to do. It never occurred to her to try something like this, at least not to another woman. Her tongue slipped across the tiny sheath of skin separating her vagina from her anus.\n\n\"Nooooo Dana!!!\" Mary Ellen gasped but she didn't push her away. Instead her hands went back to the pretty woman's head and her fingers dug into her scalp. She felt Dana's tongue as it began to circle her stretched hole and she gasped for breath. \n\nWith a push, Dana's tongue penetrated her anus and slipped inside Mary Ellen's clenching asshole.\n\n\"Ahhhhheeeee!!!\" Mary Ellen screamed and began to tremble in climax.\n\nDana would have smiled but her mouth and tongue were busy. She kept working on the tiny hole until Mary Ellen pushed her head away. She smiled up at the exhausted woman and saw her open her arms. As soon as she was over her, their lips met.\n\nChapter 14\n\nIt was several minutes later when Mary Ellen began to stir. She sat up and looked lovingly down at her friend. Suddenly, she bent her head and licked one of Dana's nipples playfully.\n\nDana moaned and looked at her now smiling friend. She reached up and pulled her head down to her breast again, almost smothering her in her flesh. \n\nMary Ellen went willingly, allowing the older woman to direct her mouth across her heaving breast. Her heart was pounding as she suckled on another woman's breast for the first time in her life. She licked it and used her tongue like she loved to have done to her. Soon she moved to the other breast and did the same thing. Dana's moans encouraged her and she began to kiss down the slope of her breast to her stomach.\n\n\"Mary Ellen,\" Dana hissed, \"You don't have to... to...\" but her comment was interrupted when the woman began to kiss lower. She gasped as Mary Ellen's tongue slipped across her lower stomach and stopped at the top of her sex. Dana held her breath.\n\nThe younger woman hesitated. She knew she wanted to do this, yet she was worried that she wouldn't know what to do. She gathered up her courage and began to move again. Slowly, her tongue tickled ever lower until it found the swollen clit between the soft folds of skin.\n\n\"Ahhhhh!!!\" Dana groaned and bucked her hips upward. \n\nMary Ellen pulled away as if she were surprised at the older woman's reaction. She thought for a second that she had hurt her. However when she saw the pleasure on her face, she smiled and lowered her head again. A second later her tongue slipped between the swollen lips and into her warm and very wet cavern. \n\nAt that moment, Drew stepped out of the bathroom drying his hair, with a towel wrapped around his waist. He half-expected Mary Ellen to be gone. Instead, what greeted his eyes was Mary Ellen's head buried between the legs of his moaning wife. He froze and stared in amazement, his penis quickly began to tent his towel. Excitedly he moved over and sat in the same chair that Mary Ellen had used. He opened the towel around his waist and grasped his throbbing organ. A big smile covered his face as he watched the two women squirm on the bed.\n\nMary Ellen lost herself in the pleasurable task of licking Dana's little hole. She hadn't heard Drew come in because of Dana's screams. \n\nDana opened her eyes and saw her husband. \"Wait Mary Ellen,\" she said to the surprised woman. \"Get on your back.\"\n\nIn a daze, and without looking around, Mary Ellen went to her back with her head toward the foot of the bed. A second later Dana was straddling her face.\n\nDrew masturbated slowly as he watched his wife squat over the woman below. She was facing away from him but turned and smiled over her shoulder as she lowered her crotch.\n\nBoth women moaned as Dana sat her saturated vagina on the prone woman's willing face. The juice streaming from her hole deluged Mary Ellen's mouth. She swallowed and pressed her tongue in for more. \n\nWith a groan, Dana went to her hands so that she was in the \"69\" position with Mary Ellen. Her head immediately went between her legs.\n\n\"Oh Goddddd!!!\" Mary Ellen groaned as she felt a mouth on her swollen sex again. She closed her eyes and sighed then went back to licking the vagina above her mouth. Suddenly, she felt something drip on her nose. She opened her eyes and gasped. Drew's cum was running out of her still stretched rear hole. Without thinking twice, she moved her lips higher until her tongue touched the skin between her vagina and anus. She licked upward, gathering up the running sperm. \n\n\"Jesusssss!!!\" Dana screamed when she felt the tongue touch her now pulsing sphincter. Suddenly it was sliding inside and she lost control, her body shaking with a tremendous climax. Her arms and legs shook, barely able to hold her above her lover. \n\nMary Ellen had surprised even herself with her nasty act. However, it had excited her beyond belief. As she continued to lick the little hole, she saw movement above her. Her eyes opened wide when she realized that Drew was standing at the foot of the bed. His penis was rock hard and suddenly just above her face. She dropped her head to the bed and watched as he brought the swollen head to Dana's vagina. Everyone gasped as the shaft began to disappear inside the willing hole. \n\nThe position that Mary Ellen was in gave her an unobstructed view of Drew's penis as it separated the lips of Dana's vagina. The sight fascinated her. She watched as he began to saw it in and out, his balls inches above her face. She could see Dana's thick juice begin to coat the shaft. With a little whimper she stuck out her tongue and began to lick Drew's testicles.\n\n\"Oh God,\" Drew moaned. \n\nWhen Drew groaned, Dana turned her head and saw the look of pleasure on his face. She smiled at him and said, \"Mary Ellen has decided that she wants to feel you in her ass.\"\n\nDrew's eyes opened wide in shock. \"Really?\" he gasped. Unceremoniously, he pulled his penis from Dana's hole and looked down at the blushing woman. \"Are you sure?\" he asked.\n\n\"Yes!\" she whispered, her face as red as a beet. \n\nQuickly, before she could change her mind, Drew pulled away and let her get up. Dana helped the trembling woman get onto her hands and knees. Then, she knelt beside her husband and reached for his throbbing penis. \"Let me get him wet,\" she said and bent to take his penis into her mouth. \n\nDrew moaned and looked at Mary Ellen. He saw her head turned and that she was watching Dana with a combination of fear and excitement on her face. He also had his reservations about putting his large tool into her virgin ass. However, a team of wild horses couldn't stop him now. \n\n\"That should do it,\" Dana said when she pulled her mouth from Drew's now dripping penis. Then she pushed his penis down until it was at the entrance to Mary Ellen's little hole. \n\nThe room suddenly became deadly quiet as all three of them held their breath. \n\nDana positioned the head on the tiny rose. \n\nDrew fought to keep from forcing his penis into the now trembling woman. He waited and allowed Dana to push the head forward. With a little help from him, the swollen head opened the sphincter and slipped inside.\n\n\"Oh my Goddddd!!!\" Mary Ellen screamed when she felt a real penis in her ass for the first time in her life. She tried desperately to hold still but her hips began to move. She wanted more.\n\nSlowly Drew pressed forward, letting his wife's hand continue to guide him. He watched in fascination as his shaft began to disappear. He had done this many times with Dana and it was always incredibly exciting, yet this was different; this was a virgin under him. His own legs began to tremble with excitement and his heart pounded in his chest as he watched inch after inch of his long shaft disappear.\n\nMary Ellen couldn't catch her breath. Her head was spinning wildly. She could feel every inch of Drew's fat shaft as it stretched her and slipped ever deeper. It felt so different from the hard plastic or the impersonal rubber dildos she had used for years. This was a real penis, she told herself. \n\nWhen only her hand was between Mary Ellen and Drew, Dana let go of his penis.\n\nA grunt came from Mary Ellen's lips as she hunched her hips back at him, taking the remaining two inches. Suddenly, she felt his balls touch her vagina. She had all of him.\n\n\"Oh my,\" Dana moaned when she looked down at the incredible sight. Not a fraction of Drew's penis could be seen. \n\nIt took incredible willpower for the man not to begin to pound into the tight hole. He waited patiently as the tiny hole of the woman below him adjusted to his width and length. It felt as though his penis was enclosed in a slick, wet glove; one that was molded to his penis like it had been made for him alone. It was tight, yet supple, massaging every inch of his shaft. \n\nSuddenly, Mary Ellen went crazy. \"Fuck me! Fuck my ass!\" she screamed. Her hips pressed back and her hands reached for Drew's thighs as she pulled him into her. It was like nothing she had ever felt before. Yes, she had had plenty of vibrators up her ass but nothing quite this long and certainly not warm and pulsing like this. The experience was beyond her wildest dream. \n\nDrew began to move slowly at first, taking his time in order not to hurt her. However, gradually he realized that she was more than ready for him. He moved faster as the hole opened and literally sucked him inside. Soon, he was pounding into her, his hips a blur.\n\n\"Yes, yes, yes, oh God yes!\" Mary Ellen screamed as electric pulses of pleasure rippled up and down her spine. Within seconds she was climaxing wildly for what must have been the tenth time that afternoon. \n\nDrew continued to pound into her as he and Dana watched Mary Ellen climax over and over. As soon as one would end, another would start.\n\nDana reached between her own legs and began to play with her swollen sex lips as she watched the younger woman convulse in pleasure. \n\nWhen Mary Ellen's legs started to give out, Drew moved to his side, taking her with him, his penis never leaving her still clenching ass. He kept turning until he was on his back and Mary Ellen was sitting on him. There was an almost crazed look on her face and her eyes glowing with lust as she immediately began to move up and down on his shaft, hardly missing a beat in the transition. This position forced Drew's penis even deeper into her. She began to lift up until almost his entire penis was out of her and then fall back down hard. \"Fuck me! Fuck me! Fuck me!\" she screamed incoherently as her thighs slapped on his.\n\nThe two continued to ravish each other as Dana watched in amazement. \n\nFinally, Drew couldn't take anymore. \"Oh God, I'm going to cum,\" he warned.\n\n\"Yes, yes, yes, cum in my assssss!!!\" Mary Ellen screamed. Suddenly she felt the penis in her ass push as deep as it would go. She thought she could actually feel the head expand. Then there was soothing warmth deep in her bowels as Drew sent his sperm deep into her ass.\n\nIt felt to Drew like his head was going to explode. His balls pulled up into his body as he released everything he had into her warm cavern.\n\nAs the two lovers climaxed, Dana's fingers brought her to a climax as well. She watched the two of them collapse on the bed and she quickly followed, leaving all of them entwined on the bed in exhaustion.\n\nEpilog\n\nSome time later Mary Ellen and Dana slipped out of bed. They stopped at the door and looked back. Drew was sprawled on the bed asleep. His legs were spread and his now soft penis was dribbling a trickle of cum on his thigh. The women looked at each other and smiled as they left the room.\n\nDana remained naked and Mary Ellen put on her robe as they stood talking quietly at the kitchen door. \n\n\"So, are you satisfied? I mean was it as good as you imagined?\" Dana asked hopefully.\n\n\"It was better than anything I have ever experienced,\" Mary Ellen responded. Then she whispered, \"Thank you! I would have never known that pleasure if you hadn't almost dragged me.\"\n\n\"My pleasure,\" Dana said as she pulled the younger woman into her arms. Their lips met in a tender and emotional kiss. When they pulled away, Dana had a troubled look on her face.\n\n\"What's the matter?\"\n\n\"Nothing, I was just wondering where we go from here?\"\n\n\"Well, I have a lot of thinking to do,\" Mary Ellen answered. She paused as she looked into Dana's eyes. \"I know I love Richard and I'm pretty sure he loves me. I think I owe it to our marriage and the kids to try harder to work out our differences.\"\n\n\"Oh,\" Dana said in a disappointed tone. She was immediately sorry. She only wished the best for Mary Ellen, yet she couldn't deny a feeling of pending loss.\n\n\"Richard and I are going to have a long talk tonight. If he won't talk, I'm going to drag him to a counselor. One way or another we are going to work out our differences with his work hours and sex.\" \n\n\"I'm happy for you and you know I only want the best for you,\" Dana said as a little tear forced its way from her eye.\n\nMary Ellen smiled and said, \"Regardless of what we work out, I know that I can never go back. Would... would you mind if I stop by from time to time... you know... in more than a... a neighborly way?\"\n\nDana didn't understand and looked back at her curiously.\n\n\"That's only if you don't mind sharing Drew.\" \n\nSuddenly Dana's face brightened. She almost yelped and hugged the surprised woman. \"Anytime you want,\" she said excitedly. \n\n\"Watch out, or I might start sneaking over when you're away.\" They both laughed.\n\nThe two women parted after an emotional final kiss. As Mary Ellen walked across the backyard, she felt a trickle of Drew's sperm begin to dribble from her little hole and a shiver of pleasure ran through her. No, she could never go back, she thought and squeezed her cheeks together. \n\nThe End "
    ],
    "authorname": "rgjohn",
    "tags": [
        "turned dana",
        "ellen eyes",
        "drew looked",
        "separated cheeks",
        "still mary",
        "ellen jumped",
        "drew watched",
        "suddenly hard",
        "hole heard",
        "opened shock"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/hindsight-3"
}