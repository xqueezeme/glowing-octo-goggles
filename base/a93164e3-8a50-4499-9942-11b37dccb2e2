{
    "title": "Ebb Tide Ch. 04b",
    "pages": [
        "*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells*\n\n*Riptide: a strong tidal flow of water within estuaries and other enclosed tidal areas.*\n\n*This tale is an espionage fantasy under assault by reality*\n\n*The 'hero' of this tale might be considered a Libertarian, though the label means nothing to him. He is not completely sane by some people's definition of the term*\n\n*A List of the Principal Characters is provided at the end of the chapter* \n\n{It isn't having what you want, it's wanting what you have}\n\n(WHERE WE LEFT OFF)\n\nSara Patel was walking beside me, suddenly pensive.\n\n\"I never get dropped off in front of my house for security reasons ... people are out to kill me,\" I explained patiently. Right now, Sara needed a rational, if extreme, reason why she was about to jump over a concrete block fence into my back yard. I offered her my hands as a stirrup. \n\n\"Stay on top of the wall. I'll go all the way over first, then take you down from your perch. Trust me.\" \n\nShe did. She'd decided I'm an honest guy. When I say I'll catch you, I'll catch you. If I say I'm going to kick your ass, make plans to stay in the hospital for a bit.\n\nUp she went. I was immediately behind her. I didn't leap down into my backyard until my eyes were fully adjusted. There were no visible surprises, so I was down and ready to catch Sara in a few seconds. She wiggled on the edge, hesitating, until I gently took her by her thighs and lifted her off. Her hands went first on the top of my head, then dropped to my shoulders before settling on the triceps until her feet touched the ground.\n\n\"You're strong,\" she gulped.\n\n\"You are light,\" I grinned. My grin was a concession to her fears. This wasn't the first time I had been required to act more 'human', as my therapist in the Navy put it. Even if I normally felt blas\u00e9, sometimes other people needed some comfort.\n\nIt was the whole 'good lie / bad truth' ordeal that people went through a thousand times a day. I was different because I did it on purpose, not by rote.\n\n\"You are a nice guy ... if a bit odd,\" she smiled back.\n\n\"Follow me, stepping where I step and no alarms will go off in the house,\" I advised. \"That beeping will freak Dabney out.\"\n\n\"Oh ... okay. You're cautious as well.\"\n\n\"Thanks, that's better than being nice, or odd.\"\n\n\"Oh ... sorry,\" she bit her lower lip. I led her through the back yard, past the tarp I left down for the occasional unwanted guest and punched in the security code. As I opened the back door, I heard the front door open. I stepped in, ushered Sara inside, then made sure the screen and security door were secure. Funny how that works: the best way to negate a door's utility is to leave it ajar.\n\n\"Dabney, were in the back,\" I called out from the kitchen; the hall was too narrow for a three person encounter. Dabney had heard the low beep which indicated someone was 'accessing' a door, forgotten what the back door sounded like and opened the front door without looking at the TV monitor to see who was there. She had suggested she should earn a spanking whenever she made that mistake. I suspected duplicity.\n\nDabney came rushing to the back, saw Sara and put an extra flounce in her step before going into my arms. She wrapped her arms around my neck, but before we kissed, I put a finger on her lips.\n\n\"Door?\"\n\n\"Shut and double-clicked,\" she beamed as if making sure the deadbolt was engaged was a decision to be celebrated. I kissed her anyway. I'm not made of iron and there is a certain rush associated with a successful mission which leads to an active libido. \n\nThat, and Dabney was wearing a tight, white cotton t-shirt, no bra, bare-feet and hip-hugger jeans. Dabney was still needy, even if more confident around Sara.\n\n\"How did it go?\" she asked eagerly.\n\n\"Everything is clear,\" I warned her. \"That is all that ever needs to be said on the matter.\" No, it apparently wasn't. Not if you are a woman (except for female warriors \u2013 female warriors knew their craft). Operational security and 'need to know' meant nothing to far too many of the people currently in my life.\n\n\"Sara, how did it go?\"\n\nI swatted Dabney's backside for that.\n\n\"Sara, what do you know about it?\" I quizzed her while looking into Dabney's eyes.\n\n\"I showed up, didn't like my room and went back to the Wynn,\" she reiterated her cover story.\n\n\"Just tell me everyone is okay,\" Dabney pouted pleasingly.\n\n\"I didn't leave the Venetian alone,\" she happily related. \"Honestly, I was scared to death, but everything worked out just like Vance said it would.\" \n\nI groaned.\n\n\"Keep into account, we all did something which could result in severe criminal prosecutions if things ever come to light. Even in the 'Best Case' scenario, an obsessive, sadistic billionaire knows the names of some people he is going to make pay for what happened to him.\"\n\nDabney paled and Sara gulped.\n\n\"Did you hurt him badly?\" Dabney pressed up against me.\n\n\"This is not a conversation we will ever have. If Kip is smart, he'll keep his mouth shut too,\" I cautioned.\n\n\"Well ... are you okay?\" Dabney addressed Sara.\n\n\"Scared ... yes ... I don't know,\" she reached for my elbow. I untangled my left arm from Dabney and put it around Sara's waist.\n\n\"Sara came home with me because we both need to de-stress after tonight's activities,\" I told Dabney while studying Sara. Sara stiffened.\n\n\"'De-stress'?\" Dabney smirked to me. \"Is my baby hard?\" she said as she worked a hand down my side.\n\n\"I want some Sara-time,\" I winked. \"We shared a moment.\"\n\n\"Poo,\" Dabney playfully pursed her lips. \"First you sent me home, then you two got to do the fun stuff, and now you two get to have even more fun time without me.\"\n\n\"If you start behaving, Sara might need more company tonight.\"\n\n\"I've never been with a woman before,\" Sara gulped once more. Plenty of twenty-something women (excepting Dabney in current company) said that. They vocally denied it while privately wondering what it was like. A person's pulse rarely lies.\n\nThat was why I normally preferred thirty to forty year olds who hung out in Cougar Bars. They had those sort of issues resolved. If they wanted to involve their sister, sister-in-law, or a good friend, I was up for it. I was in it for the sex, not any sort of moral judgment. I did my part erotically. \n\nAnd I didn't need alcohol to get me in the mood, so only drank water at an unknown person's house. Paranoid? I had zero episodes doing things I could only vaguely remember or regretted, so I could live with the distinction. \n\n\"We did good, right?\" Sara pressed into me. I leaned in, kissed her, complete with my tongue touching her teeth, lips and tongue.\n\n\"'We' didn't do anything,\" I reminded her. I'd be repeating that mantra for the next few hours \u2013 no doubt.\n\n\"Oh,\" she smiled.\n\n\"Let's go 'not do anything' in the bedroom,\" Dabney led the way. I slipped my hand from Sara's waist to her ass to mover her in front of me. Sara's head kept switching as she tried to watch the two of us. \n\nCompared to the 'comfortable' size of the kitchen and the narrow hall, the open space of my bedroom surprised and pleased her. Honestly, I had envisioned it as the only room guests would be spending any time in, back a whole week ago when I was a confirmed bachelor.\n\nMy windbreaker went on one of the wall hooks I'd set aside for bathrobes. I'd put up one set of four ... and now it wasn't enough ... and I only had two roommates. Dabney deviated toward the top of the bed, indicating her permission for a Sara-Vance First Act. Sara, adrift again, turned fully toward me.\n\n\"Vance?\" she worried. I put a finger to her lips.\n\n'Do it \u2013 don't talk about it,' I mouthed. I could see the fear in her eyes. It was the fear of the unknown, of possible failure and of having a thousand ideas swirling around in your head, but not being able to grasp a single one as you felt yourself drowning in a sea of indecision. I kissed her very lightly on the lips.\n\nAfter I took off my gray t-shirt, I took her right hand, uncurled her trembling fist into an open palm, then placed it over my heart. She looked flummoxed. I pumped as much warmth into my smile as I could manage. Sara began to glow as the peaceful rhythm of my heart began to be transmitted by our contact. I wasn't afraid, so why should she?\n\nI took my time. My left hand touched her collarbone, then languidly finger walked up her slender neck to the crux of her jaw and ear, concluding with a massage of her earlobe between forefinger and thumb.\n\n\"Aaahhh,\" she emoted. \n\nSara was bright, energetic and creative in her own way. She shifted through her mental chaos, made a decision and stepped up her game. On her tiptoes, she propelled her body up until she kissed me. I gave a bit of tongue, she reciprocated with her left hand reaching for the back of my head and her fingers weaving into my hair.\n\nThe proximity barrier had been breached. Both my hands went down, cupped each small, tight butt cheek and then pulled her up my body. I got a little, audible gasp within the confines of our French kiss as she rose. I kept going until she was a half-head above me, looking down. Her inexperience was obvious, so I had to move my hands from her ass to her thighs to clue her into to wrapping her calves behind my back, locking me in.\n\nWhen we broke the kiss, she was radiant in her smile, pleased with how things were progressing. I tricked her by missing her lips and ending up on her chin. We reconnected with her lower lip. then I began exploring the corners of her lips, cheeks, jawline and finally, back to that earlobe. Her feline rumble was all the indication I needed in order to know I was on the right track.\n\nMore kisses fell upon her neck, under her chin and to the other side ... until that earlobe was also lavished with equal ardor. Us tumbling back onto the bed, even with her on top of me, clearly caught Sara off-guard.\n\n\"Eeep!\" she squeaked. I kept exploring her neck, her face, those sensitive earlobes with my lips as my guides while her moans and accelerated heartbeat were my erotic landmarks.\n\nIt was important to keep Sara on the cusp of sensitivity overload. If she worried about any one thing too much, she might tumble back into self-doubt, or concern over our audience of one. My strategy had my mouth being my point of focus for her attention while my hands orchestrated the movements of her body.\n\nI pulled her body up mine, then by taking her hips, pushed her back down. On the eleventh stroke, she took over and began dry-humping me of her own volition. Having trained in underwater demolition and done intestinal surgery in a pretentious pothole, slipping my left hand between us and single-handedly unbuttoning her shirt was child's play. Doing it so as not to spook her merely upped the game to a High School Musical.\n\nAfter that, it was the simple teenage act of my other hand slipping up her back and unhooking her bra. Now her breasts were accessible without the necessity of rubbing the materially roughly over her aroused teats. Undone and shirt open, it only took six assists on her humping to put a dark chocolate nipple and swollen, equally dusky areola into my mouth.\n\n\"OH! {How did he get my breast in his mouth?} ... Ooooohhhh ... {he has MY breast in his mouth and is giving it wonderful tongue action} ... Aaaaahhhh ... {and now he's adding just the right amount of suction} ... oh yesssss,\" Sara ended up purring.\n\nProviding a little bit of shifting her hips back and forth and Sara again got the hint; she began rubbing her body all over mine. She even took the initiative in giving me her other breast. She didn't give me a single hiccup when I maneuvered her hips up so I could begin pulling her panties down from under her skirt. If the other sensations from farther down bothered her, she gave no sign.\n\nThat was Dabney courteously taking off my shoes, socks, pants and underwear and finishing up with a few quick (and utterly unnecessary) hand strokes followed by a brief blow-job and the application of a prophylactic. Sure, I could have handled this on my own. By taking care of it, Dabney was easing along the moment when she could finally join in ~ after at least one Sara-orgasm and one of mine.\n\nSara would have to be well sated \u2013 otherwise she might start judging herself physically against Dabney and that would be completely unfair and unwise. Dabney was an (ex) elite sex professional after all, while Sara was a dedicated engineer.\n\nBy twisting Sara's hips sideways in my lap and having her pull up her knees, I was able to pull her panties all the way off and discard them in a visible, cavalier fashion. It was a bit of showmanship the sexual novice got off on and it was playful enough to remind her this was fun for both of us.\n\n\"Hey!\" ...as her panties went flying. \"Hey!\" ...again, as I rolled us over and her under me. \"Oh \u2013 hey,\" she murmured in a demur fashion as I placed my cock unerringly at the entrance to her love channel. I gave her a second to take in her circumstances, then began working my way in. \n\nMy left arm was on the bed, underneath her shoulder, with my hand cupping her shoulder and keeping her upper body in place. I was about to do some plowing. My right arm had snaked down and pressed her left leg up so that my hand had a strong grasp on her left buttock. Her right leg was splayed out to her side, leaving her pelvis wide open.\n\nWith a combination of my hip rotations, twisting her hips and coming at her vagina with erratic thrusts, I quickly had Sara in an ecstatic, erotic mental fog. She was panting, shaking and losing bodily control. I was pretty sure this was her first non auto-induced orgasm. \n\nI could have had mercy. I opted to power thru instead and pressed Sara into an orgasmic fugue ~ unlike anything she could have even put a name to before tonight. She arched, screamed, cried and shouted until she shook the rafters before her body gave out and she collapsed beneath me.\n\nI rolled us over so that Sara was on top, her head on my chest looking toward the new closet. I began alternating taking each hand and placing ephemeral kisses, licks and sucking lightly on each fingertip. By her stirring, I knew she was conscious, but still blissfully past all caring.\n\n\"Sara,\" Dabney curled up beside us and brushed some sweaty hair off our sated East Asian's face, \"how was it?\"\n\n\"I ... wuv ... you ...twwu,\" Sara slurred happily. \n\nMission accomplished.\n\n{BY DAWN'S EARLY LIGHT}\n\nI had four calls I needed to deal with when I woke up. I discarded all the other ones which came from various news agencies and law firms who wanted my time and attention. I was being sued \u2013 no surprises there. I'd killed a few folks. They'd been armed and aiming at me, or someone else, so the criminal's cases were dead in the water. \n\nThese legal threats were of a civil nature, also utter bullshit as I had acted in clearly defined legal boundaries, but were meant to bury me in the Nevada Civil Court system for the next few years, courtesy of Lloyd Pharris. The answer to that problem wasn't even a point of concern. \n\nIn this lethal game of chess, I was an object of unknown capabilities. Lloyd however, had to expose his pieces to get at me. Any judge who let any of these cases go to trial was clearly in Lloyd's pocket. In my mind, they'd exited the cocoon which normally protected law and order because to attack such people was to invite anarchy and anarchy was bad.\n\nNo; by proving to be corrupt, they made themselves fair game. I wasn't going to 'murder' them. No. The American Southwest had plenty of flora and fauna which was lethal in its own right. All I had to do was introduce the natives (killers) to the mobile compost heaps (people) and let nature take its course. \n\nFirst message requiring a response:\n\n\"Hey Vance ... this is Lorenz. Are you still coming over tomorrow around noon for the cookout? I've seen you've been ... ah ... caught up in other things.\" \n\nIt was my old partner (for 2 \u00bd days with MedicWest) reminding me I had promised to show up so he could introduce me to his sister-in-law ... who had some 'friends' who were probably girls as well. I had suggested I had two roommates I could bring (without mentioning they were ladies.)\n\nSecond message:\n\n\"I don't like leaving messages. I will call you promptly at 7:00 a.m. We can make breakfast plans ... oh, this is Jo ... bye,\" then she hung up. \n\nI didn't have to be even mildly acquainted with human psychology to realize the woman had issues. Still, it appeared I had promised her a date at The Lagoon Bar & Grill and standing her up wasn't wise as she was the #2 killer in the city ... and worked for the #1.\n\nThird message:\n\n\"Hello, Mr. Vardanyan \u2013 Vance. This is Kristoff Declan. Remember me? I'm in town with a few days off, saw you on the news and decided to give you a call and a 'thank you'. Let me know if you want to chat some time. It's been ... years,\" he laughed. \n\nThe 'thank you' had to do with something I'd done in the service years ago his mother and I weren't supposed to talk about for another forty-three years. He was in town. Well fuck a duck ... another 'good news/bad news' I could have lived without. On the plus side, he was someone from my distant past I actually wanted to see again, just not here and now.\n\nFourth message:\n\n\"Senior Chief Hospital Corpsman Vardanyan, it is good to see you are still alive,\" a woman stated. I didn't know that voice, but I knew she wasn't so much happy to see I was still alive as happy someone beside her hadn't killed me yet.\n\n-Recall: I had said I had done bad things to horrible people who other people cared about? She was most likely one such person.\n\n-Recall what I said about my service record being protected by the DOD and CIA ... and I not trusting them 100%?\n\n\"This is Hai Jun Shao Xiao Xi Baozhai. It is unlike you to be both so open to the public (the shootout during my short tenure with MedicWest no doubt) and to be active on your native soil. I will be coming to your hometown soon; perhaps you and I can meet and catch up on old times. Until then.\"\n\nHai Jun Shao Xiao Xi Baozhai wasn't a Chinese person with a shit-ton of middle names. No. Hai Jun was the prefix for an officer in the Chinese People's Liberation Army Navy (PLAN), Shao Xiao was the NATO equivalent of Lieutenant Commander/OF-3 and Xi Baozhai was the woman's name. I didn't recall the names of every individual who might be dumb enough to come gunning for me ~ only the names and pertinent data on the really nasty one's ~ dedicated engines of destruction like Ms. Xi.  \n\nFuck you very much, Bitch. My old SOG team had 'retired' her brother (and a few other unpleasant bastards) two years ago in Macau. It had been 'unfortunate' in that he was involved with the murder and cover up of said murder of an American researcher in Singapore. We tracked his ass back to Macau \u2013 he and his team ... to the Venetian Macau of all places. \n\nWe returned the favor, staging the scene in the precise manner in which they had staged the 'suicide' of the dead American ~ to get the message across ... to his bosses in Beijing ... because in reality he and his team were covert agents for the People's Republic of China's Ministry of Security.\n\nWe didn't stop there though \u2013 oh no. Using information we had gained from those gentlemen, we exited from existence a few prize Chinese hackers because we weren't in the 'tit for tat' business. No ... their professional intelligence people had killed a US civilian in a neutral country over a matter of civilian industrial espionage and that would not pass muster. \n\nSo, we killed two dozen of their intelligence people \u2013 the hackers worked covertly for the People's Liberation Army, so they qualified \u2013 to send that salient point home: professionals don't gak non-professionals over civilian crap. They had behaved like a criminal/terrorist syndicate and we had treated them as such \u2013 on their own home ground \u2013 fuck you very much. They got the message. ",
        "Sadly, the dead fucker had an older sister who happened to be a hotshot with the People's Liberation Army Special Forces ~ Navy actually ~ the 'Sea Dragons' ~ and she came looking for us. I was sure her own people had told her to drop the matter. She hadn't listened. She'd fucked/threatened her way through the appropriate people until she figured out who we were ... and now she was giving me a phone call. Fuck her.\n\nI was going through my normal morning workout routine when my phone let me know someone was trying to contact me. It was 7 a.m.\n\n\"Hello.\"\n\n\"So now you answer your phone?\"\n\n\"My phone leads to various cut-outs, Jo, not to any electronic device associated with my home address,\" I answered. \"You mentioned something about breakfast?\"\n\n\"I'll meet you at Snow Mountain Smoke Shop in thirty minutes,\" she stated. She was real tight with her emotions.\n\n\"I've never heard of it. What's it near?\"\n\n\"Go north up US 95. It is at the Paiute Golf Resort turn off.\"\n\n\"That's out in the middle of nowhere,\" I pointed out.\n\n\"I don't know what to make of you,\" was her response. Not helpful.\n\n\"What kind of food do they serve?\"\n\n\"It is a smoke shop ~ tobacco products. They also sell beer and snacks.\"\n\n\"Okay. I'll see you there in thirty minutes,\" I agreed. \"Bye.\" There was no need to say things like 'will you be armed?', or 'come alone'. We would both be armed and if she wasn't alone, I'd keep on going. If I showed up with company, she would take it poorly. Besides, Dabney slept late, G worked late last night and Sara didn't have to be at the Expo downtown at the Las Vegas Convention Center until 9:30.\n\nNow to deal with the third caller. I dialed up Betty Grable, my former handler at the CIA, to update her about Lieutenant Commander Xi Baozhai ~ her name meant 'stockade of treasures' which was bad all by itself ~ at Betty's home number. \n\nI'd let her tell someone else not associated with us (at the CIA) to let her bosses know I was retired in the same way I knew it wouldn't do any good \u2013 bat-shit crazy sister that she was. I followed that up with a call to my old SOG boss, Sylas, with the same news. He informed me Baozhai was also 'retired from active duty' with a valid passport and wished me luck.\n\nI then called Captain Brassard of JSOC \u2013 he was handling the case of me shooting all those folks in Vegas \u2013 and gave him the heads up as well. He was halfway through a rant about 'how the heck (wife/kids nearby apparently) I knew his home number' before he recalled what I'd been doing the past three years. I updated him on my tale of woes. \n\nYeah, a grief-stricken, ex-Chinese Special Forces chick was coming to my fair city to kill me over shit I did in the CIA, which I couldn't tell him about, ... but I figured he would want to know, since she was reported to be exceedingly lethal and we might 'break some shit' before one of us dropped dead.\n\nHe asked me if I wanted to leave town. I told him I had just moved my girlfriend's clothes into her new closet. He chuckled. He knew the score. \n\nFinally, I got to:\n\n\"Hey, Kristoff, it is Vance Vardanyan,\" I said when he answered the phone.\n\n\"V, how are you doing?\" he grunted. My guess was he'd been working out.\n\n\"Tons of stuff I can't talk about. You?\"\n\n\"Ha! Some stuff I can say and some I can't,\" he chuckled. \"You had chow yet?\"\n\n\"I'm actually meeting a professional killer in twenty-five minutes who is emotionally conflicted about how she feels about me, but if that pans out, I'm up. Where do you want to meet?\"\n\n\"Damn {amused snort} ... Buffalo Wild Wings on Hualapai?\" he suggested.\n\n\"I'll do my best,\" I replied. \"Later.\"\n\n\"Later.\"\n\nConsidering the likelihood I'd make it to see Kristoff, I gave another friend a call and arranged a rendezvous. It would be a big surprise for both of them. I had some time. I called a car dealership in Los Angeles, gave them my order, account number and address where I wanted my new car parked. I liked my Corvette, but it was built for two, so cramming an adult in the back was cruel and unusual punishment.\n\nI had considered buying a Cadillac CTS-V when I first retired. I had decided against it because it felt like a family car. Now I had a family. Of greater concern, Dabney was going to 'steal (in my eyes) / borrow (in hers)' whatever I got and I wanted to put her in something which could keep her safe. An 'up-armored', custom 2015 CTS-V fit the bill: 707 horsepower (the engine from a Dodge Charger SRT Hellcat), 0 to 60 in 4.2 seconds, 60 to 100 in 5 more, top speed of 204 mph and 2,200 lbs. of armor all around. \n\nSure, it got about 10 mpg in city and 15 highway ... which was why they added the extra 5 gallons to the fuel tank (up to 24). On the up side, you could throw a grenade under the damn thing and it would keep the driver and all four passengers safe and no one had shot at me in Vegas yet with a caliber large enough (14.7mm) to punch through an armor glass window, much less a side panel. \n\nI lucked out. I would have hated to buy a red car \u2013 they are begging for traffic tickets. I took a silver one and arranged for someone to drive it up for me with a drop off at the IHOP on Centennial Center Blvd at 3:30 pm. If they kept it off the books, I'd send the guy back in a 2007 Hyundai Sonata from the dealership up the street \u2013 paid for in cash. That taken care of, I went back to the bedroom, kissed the three sleeping ladies on their heads and departed since it's not wise to keep a killer waiting, much less stand one up.\n\n[...]\n\nOn the road, I accessed my computer and did a directory search for Y\u00edch\u0101ng Sh\u00ec, PRC and the surname Xi. It took me a minute to recall the dead bastard's father's name. Thankfully there was only one match. I would have hated to wake up the wrong guy over there \u2013 it was midnight, his time. Next, I contacted a reliable translation service out of Taipei then made the call.\n\nIt took a few rings for the old man to answer. I told him, via translator, I was an American who had met his daughter in mutual service, extended an offer to come to the US and she had taken me up on the offer. She had called me, but failed to give me her mobile number and could he please provide it. He hesitated. Lifetime communists tend to be a bit paranoid. I told him not to worry about it then dropped the idea I didn't want her harassed by 'my' Homeland Security when she got here.\n\nHe coughed up her mobile after that. Xi Baozhai's problem was she was a sailor, not a spy like her brother. I imagine she thought by calling me, she would make me suffer in anticipation. A pro would have made me suffer in anticipation after they had surprised and neutralized me. I never gloated, but if I did, I'd do the gloating after the job was done, not before I even started. I gave her a call. It went to voice mail. I left none. It was time to talk with Jo.\n\n[...]\n\nThere she was outside the Smoke Shop, leaning against her Candy Apple Red Suzuki Hayabusa ~ a damn fast motorbike. Shockingly grey-white wild hair, a red leather jacket ... red cowboy boots ...pale skin ... no makeup ... bloodless lips ... black, fingerless gloves, backless, black halter top for her tiny cone-like breasts (no bra), black butt shorts which look painted on with red chaps masquerading as leather stockings ... did I misread some clues about our get together ... or her line of work? \n\nShe was hunched up, carrying plenty of pent up aggression and unease, yet it didn't seem directed at me. Her lips were tightly pursed, her arms crossed near chest level. Though she was definitely cute and her twin shoulder-holstered, over-sized semi-automatic pistols were just out of view, no sane individual with even a smidge of self-preservation instinct would take a step toward her in this parking lot. \n\nAs a stranger to me and a woman, there was no right way to deal with her body language. As a fellow human traveler into some of the darker places ... I walked straight into her space, brushed an imaginary strand of hair off her upper left cheek, then leaned in for a gentle kiss upon her lips. A tender brush really.\n\n\"Good morning,\" I kept my facial expressions calm and unexpressive. \n\nJo had studied my approach and calculated her reactions to my every movement, but had been unable to fathom my intention because of its basic humanity. And human interaction was what she lacked and hungered for \u2013 thus her demanding a meeting here with me, a stranger, at 7:30 in the morning. \n\nI didn't smile or hug her, because that might be construed as sexual. A brief kiss on the lips only meant friendship. On the lips suggested I saw her as a female to my male ~ I was seeing her femininity without demanding to stick my dick in her. Those amber, raptor-like eyes made rapid-fire decisions, then she ponied up a minute smile.\n\n\"Good morning, Vance ... or do you prefer V?\"\n\n\"My actual name is Vardan. You can call me Vance until you get comfortable with calling me V,\" I suggested. She nodded. She was going to call me 'Vardan' because no one else did ... and I hadn't listed it as an option. Wait and see. Her eyes flashed toward the store. Wordlessly, we turned and entered together.\n\nI held the door for her \u2013 which she wasn't expecting. She headed off for some packaged tobacco. I went for a V8. On the way to reconnecting at the counter, I spotted what I hoped would be an appropriate gift. I had multiple choices, but quickly whittled them down to the turtle and the badger before settling on the badger. Their lions were male, their cats pink, dogs \u2013 puppies and the other animals made no sense considering what I knew of her personality.\n\nAt the counter, \"I got this,\" I stated.\n\nJo tilted her head slightly to let me know she was looking at me and wanting an explanation. \n\n\"First date. You picked the place, so I pay. Next time, I pick and you pay,\" I created our 'Ground Rules'. She nodded. I paid for her smokes, rolling papers, my drink and the toy.\n\n\"Here you go,\" I handed her the badger. \"Happy First Date.\"\n\n\"Oh, that's sweet,\" the congenial female counter clerk commented.\n\nJo stared for a few seconds before taking it. Then back out into the parking lot we went. Jo rolled her own cigarette, taking her time. After a few puffs,\n\n\"I've never been given a present on a date before.\"\n\n\"Me neither. I don't date much. I never did in service. Nothing serious in High School and one of my two dates since leaving was to a gun range,\" I broke the ice.\n\n\"Oh ... I'd like that. I have a private gun range I use ...\" she left the invitation hanging. I'm not the 'invite myself along' kind of guy.\n\n\"Date much in High School?\"\n\n\"I don't recall \u2013 amnesia,\" she put in an excellent effort in watching me while pretending to be looking elsewhere.\n\n\"Well,\" I opened my V8, \"here is to hoping it was fucking horrible,\" and I took a swig. I handed it her way. She took it, sniffed it then took a tiny sip. Her nose wrinkled. V8 isn't for the uninitiated.\n\n\"You get used to it.\"\n\n\"They say the same thing about these,\" she motioned with her cigarette. Another puff. \"Do you have a vice?\"\n\n\"Hand at your 4 o'clock,\" I cautioned her. I was moving to her left side and putting a hand around her waist, reaching for her ass. \"That is hard to qualify. I might be egotistical ~ well 'prideful' ~ because I'm proud of some of my accomplishments and capabilities.\"\n\n\"Like what?\"\n\n\"Bringing every teammate back alive is the biggest. The rest is mostly courses passed and certifications achieved. I like learning stuff, so that makes me prideful of my intellect.\"\n\n\"Not killing people?\"\n\n\"I've known far more kick-ass killers than me,\" I offered. \"But defending myself and others has always been a built in peripheral to the other things in my life. I grew up poor and didn't like taking shit from others, so I fought a lot. Career-wise, I didn't join the Army, or Marines \u2013 I joined the Navy. I tested pretty high. Hospital Corpsman was one of the avenues the Navy offered. I figured I could make a living post service doing medical stuff, so that was the path I took.\"\n\n\"At the start of Naval Hospital School, one of my instructors asked if any of us wanted to jump out of a fully functional aircraft. I raised my hand \u2013 the only one. He told me to chat with him after class. Four months later I was in sunny San Diego \u2013 Camp Del Mar \u2013 learning how to keep up with the Marines.\"\n\n\"Marines jump out of airplanes?\"\n\n\"That was a trick question,\" I grinned. \"That part of the training came later ~ Fleet Marine Reconnaissance Corpsman ~ which taught me the normal Army Airborne deal. While getting my Fleet Marine Force Reconnaissance Independent Duty Corpsman certification, they taught me how to HALO. That's ...\"\n\n\"High Altitude, Low Opening,\" she interrupted. \"Was it fun?\"\n\n\"The first few times \u2013 then it became work. That's how most of my life has been: I learn to do something, then it becomes the norm and I look for something new,\" I told her.\n\n\"Is that why you quit?\"\n\n\"No. The opportunity rose to exit my former employment in a respectable manner and I took it.\"\n\n\"There is a great deal you aren't saying,\" she studied me.\n\n\"Yes... Yes, there is.\"\n\n\"Is this the part where you expect me to share with you?\"\n\n\"No. You told me you have amnesia, so your 'abandoned' childhood and shit I did before I grew up is off the table. Both of us aren't talking about our current close personal friends, or our day jobs. That leaves hobbies and nightly diversions.\"\n\nShe finished off her smoke. I killed my V8 can and recycled it.\n\n\"I like you,\" she finally confided.\n\n\"Why?\"\n\n\"Don't you think you are a likeable guy?\" she asked in all seriousness.\n\n\"No. I'm purposefully difficult to deal with. I avoid singles bars, social media and smiling on a regular basis,\" I enlightened her.\n\n\"That's why I like you,\" she seemed positively ecstatic without straining a single facial muscle. \"You are no-bullshit.\"\n\n\"I consider lying to be a professional instinct, expect people to avoid telling me the truth for the most trivial reasons whenever it strikes their fancy & for no other goddamn reason, and rarely find integrity in others. I'm a dishonest fellow.\"\n\n\"The shootout ~ that old guy ...\"\n\n\"Gunrunner ...\"\n\n\"You two most likely hadn't met in years, yet when strangers began firing, he began killing the ones who were trying to retire you. That's pretty rare,\" she began to work out her conflicting emotions concerning me. \n\n\"He's an excellent judge of character and a better shot. We never served together, but some of the guys who trained me were trained by him. And we'd shared a few beers a while back. Blame him, not me.\"\n\n\"If he called you one night and asked you to show up somewhere to patch someone up, you would, wouldn't you?\" she tested me.\n\n\"Sure. The thing is, if he was desperate enough to call me, I would know he was in some deep shit and he was pretty much out of options. It is not a matter of knowing each other, it's a matter of integrity. People without a certain level of consistency and reliability don't progress far in our line of work.\"\n\n\"The other guy?\" she quizzed.\n\n\"I never met him before, didn't exchange digits and haven't seen him since.\"\n\n\"Yet you both knew who to shoot ... and not shoot. He trusted you instinctively.\"\n\n\"My guess is this wasn't his first impromptu rodeo. With his mixed luck ~ most likely not his last,\" I divined. She wanted more as in 'why didn't I shoot him'.\n\n\"You get a sixth sense about some people if you continue along my career path. Some you need to shoot right now, some you can shoot later and some, if you figure you should be shooting at them and aren't, there must be a reason, so you don't.\"\n\n\"If I had a clear shot at him at the start, I would have killed him,\" she said.\n\n\"His hip holster to your shoulder rigs ~ he'd have killed you first,\" I pointed out.\n\n\"Why didn't he?\"\n\n\"Professional inclination on his part, no doubt,\" was my suggestion.\n\n\"I notice you don't use the word 'honor' much,\" she gave the tiniest of smiles.\n\n\"It is highly overused and abused.\"\n\n\"I agree.\"\n\n\"Want to go to breakfast?\"\n\n\"I thought we were?\"\n\n\"Not really. I am meeting with an old buddy from my days here in High School and Reagan.\"\n\nJo frowned.\n\n\"I don't like Reagan.\"\n\n\"I doubt you know her.\"\n\n\"And you do?\"\n\n\"I'm not as biased as you.\"\n\nNo response.\n\n\"I knew Reagan fifteen years ago, before all her social armor was in place. I'm inviting you to breakfast because I'd like you to come. You don't have to, if you don't want to.\"\n\n\"But you made the arrangements already.\"\n\n\"I didn't tell them I was bringing a date. I didn't tell either of them about the other either. We were all friends back in the day,\" I explained.\n\n\"Where?\"\n\n\"The Buffalo Wild Wings on Hualapai. Kristoff, my guy-friend, picked it.\"\n\n\"Oh ... I'm not sure where that is.\"\n\nI bet that was because the southwest side of Las Vegas wasn't a portion of town she frequented all that often.\n\n\"Kristoff's family's home is in that neck of the woods,\" I offered. Jo mulled her choices over.\n\n\"Okay.\"\n\n\"Thanks,\" I nodded. I capped that off by reaching a little farther down and squeezing her ass while kissing her on the lips again. Nothing too heavy. Again, as I withdrew, she tried to analyze my intentions.\n\n\"Thanks?\"\n\n\"Yeah. Getting those two back together will be much easier if I have a lady-friend present, as well with the double bonus of it being you.\" Jo waited for the explanation of the 'double bonus'. It took ten seconds for her to get the message. She rubbed a hand over my chest then along my neck and chin before reciprocating the kiss.\n\n\"You meeting Kristoff will worry Reagan, so she will work extra hard to keep him close ... out of the misplaced fear you will irrationally hurt him ... and you look very sexy-hot right now ... well, especially right now and that will both draw Kristoff's eye and make Reagan even more jealous.\"\n\n\"More jealous?\"\n\n\"Reagan has insinuated there might be an 'us' ~ me and her ~ and I want to nip that in the bud as soon as possible,\" I elaborated.\n\n\"Oh.\"\n\nI fondled her ass cheeks with more generous strokes this time.\n\n\"Like taking liberties?\" she frowned. I swear to God, why did He make ladies buy into this passive-aggressive crap? Every other physical indicator showed she liked my actions, except her language and lips. She was wearing black butt-shorts and chaps which might as well be stockings and a garter belt ... and she was getting pissy I was showing some ass appreciation ...\n\n\"No, I am not treating you like any other woman in my life,\" I displayed my own annoyance. \"Historically, when I went to bars for one night stands, I picked up older women because I don't like messing with immature attitudes and hang-ups. I don't date 'girls with guns' either. If I had a type it, would be 'the one who would be gone in the morning'. Is that what you wanted to know, Ms. Grumpy?\"\n\n\"What about the other two women I saw you with?\"\n\nThere was no verbal apology. What I got was her sashaying against my hand \u2013 her version of my butt massage.\n\n\"Have I mentioned how my life has gone totally off the rails in the past week? Reference that and then we can begin to discuss my two female roommates and me sleeping by myself on a cot in my own damn living room.\"\n\n\"Because you like to sleep alone ...\"\n\n\"Correct.\"\n\n\"Breakfast?\"\n\n\"Sure,\" because I clearly wasn't getting a damn apology. Maybe I should just let Ms. Xi kill me.\n\n{REUNION}\n\nLieutenant Colonel Kristoff Declan had been a Playa during the day and becoming an Air Force jet pilot hadn't dampened his ardor down one bit. To his credit, he was suitably impressed with me showing up with Jo on my arm ... so to speak. I introduced her as a former Special Forces operator from Croatia working for a private security firm here in Vegas.\n\nHe said something to her in a language I didn't know, she responded and he nodded. I guess she knew enough Croat to get by. I lied because I couldn't tell him the truth. Telling him she was ex-Special Forces meant he could talk 'shop'. Being from another country didn't mean much since we shouldn't be talking about classified stuff anyway \u2013 me being 'retired' and all.",
        "\"You look good,\" he lead off the conversation.\n\n\"I wised up remarkably since we last met. You look older. You were always better looking.\"\n\n\"Ha,\" he laughed. \"Your choice in ladies was always esoteric.\" His remark caused Jo to arch an eyebrow my way.\n\n\"He has no idea what he's talking about,\" I looked her way \u2013 we were in a booth together \u2013 Jo on the outside. \"Back when we were teenagers, I would never bring a girlfriend around this guy.\"\n\n\"That's unkind,\" he chortled.\n\n\"Not only were you better looking, better dressed and better educated, you had a better car ... while I didn't have a car at all,\" I reminded him.\n\n\"Miss, V is not so shallow,\" Kristoff glowed warmly at Jo. \"I'm particularly honored to meet anyone he considers to be a friend.\"\n\n\"Vardan says you haven't even talked to him in fifteen years,\" Jo countered.\n\n\"He saved a life before he was ever a paramedic. And he came storming in to save my ass before either of us put on a uniform, Miss Jo. Certain characteristics people exhibit in their youth are eternal.\"\n\nHow fucking poetic of him. Jo looked my way. I shrugged. She accepted my shrug. Kristoff laughed.\n\n\"You two must be a laugh riot on Twitter,\" he snorted. \"Do you communicate with single keystrokes?\"\n\n\"We are telepathic,\" Jo responded, so smoothly I had to double-check my internal monologue to make sure I was indeed alone.\n\nReagan made it two steps through the door before she made out Jo at my side and the fact I had company (whose back was to her) in the booth across from us. She stutter-stepped. Jo caught her arrival and then let her eyes flow over the room and other possible means of egress and exit \u2013 in case this was an ambush. Kristoff, being a jet fighter pilot, had highly developed situational perception and picked up on Jo's eye movements, so looked over his shoulder.\n\nHe turned and looked at me with a 'you fuck-nut' expression on his face. That was okay. 'Him' looking at me meant he missed the reaction on Reagan's countenance when she realized Kristoff was barely a meter away from Jo, the Killer. I got the reaction I wanted. Reagan came our way.\n\n\"Hi,\" she addressed the table. Kristoff scooted over.\n\n\"Hey, Reagan,\" Kristoff replied. \"I think this is Vance's fault. This is Jo, who he's trying to pander as his Croatian, ex-Spec Ops girlfriend. Vance,\" he looked back at me, \"you nut-sack.\" Nut-sack ~ fuck-nut ... basically the same thing.\n\n\"Jo ... Vance. Kristoff,\" Reagan meandered through the introductions. \"Vance?\" to me again as she sat down next to Kristoff.\n\n\"Yeah ... I'm about to gut Lloyd Pharris like a pig on the public stage within a week's time and he's then going to go after everyone I care, or have ever cared, about. On that tiny list are some rather deadly people, people I can protect and Kristoff here. Sorry Kristoff,\" I began. \"The only thing you (Kristoff) can do is get assigned to a base on foreign soil, and even that might not be safe enough ... or start dating Reagan again. Or, if that doesn't pan out, date Jo here.\"\n\nReagan grunted as if I'd stabbed her. Kristoff soaked in the emotions of the two women sitting with us; Reagan's partially masked fear and Jo's blank stare.\n\n\"You bastard,\" Reagan whispered.\n\n\"Reagan, do you believe if someone did me a serious favor, like keeping me out of jail, no matter how long ago, I wouldn't repay that favor?\" I inquired. She didn't answer.\n\n\"Kristoff, have you ever done me a favor which kept me out of prison, or at least free of some severe legal consequences?\" I looked to him.\n\n\"Dude that was sixteen years ago,\" he muttered, \"and I never expected you to pay it back. It wasn't really your fault.\" As in my employer didn't give me any W-2's, so I didn't file any tax returns and then I got 'randomly' audited.\n\n\"What did you do?\" Reagan turned on Kristoff. He didn't get it.\n\n\"Remember when V got audited by the IRS? They were going to drop some severe fines on him he couldn't pay, so I paid them for him,\" he told her. Reagan looked from him, to me, to him and finally to me again.\n\n\"Oh shit,\" she murmured. \"This is not good.\"\n\n\"I figure Mr. Rogers will dig that up eventually,\" I prodded her along.\n\n\"Did you take the money out of a public account?\" Reagan futilely asked Kristoff.\n\n\"Public account? Yeah. What other kind of account would I have? At seventeen.\"\n\n\"Was it in the exact amount?\"\n\n\"Yes.\"\n\n\"Oh shit.\"\n\n\"Am I to understand Mr. Pharris is going to kill Lt. Colonel Declan as a retributive action against Vardan?\" Jo inquired politely.\n\n\"Excuse me? Mr. Pharris \u2013 Lloyd \u2013 Ford's dad is going to try to kill me?\" Kristoff was taking this both well (i.e. calmly) and seriously. He already knew Lloyd was a megalomaniacal, highly-vindictive, petty tyrant. So 'him' tripping over the (legal) line into having people 'offed' wasn't as farfetched as it might have appeared to some people.\n\n\"V \u2013 Vance, walk away,\" Reagan reached across the table and grabbed my hand. Her voice was urgent \u2013 pleading. \"I'll pay you whatever you want to just leave town. Take Dabney and go.\"\n\n\"I won't leave G behind and you know he won't let her leave, Reagan,\" I responded.\n\n\"We shouldn't be discussing this,\" Jo reminded Reagan. \"Here.\"\n\n\"Actually, if someone is going to kill me over a favor I did V sixteen years ago, I'd like to hear about it,\" Kristoff shook his head.\n\n\"No. Jo is right. Not here,\" Reagan agreed.\n\n\"Where then?\" Kristoff glowered.\n\n\"Let Jo pick the place,\" I suggested. Everyone was looking at me and thinking 'why Jo?' ~ even Jo. The answer for Jo was easy. If she did this, she was helping me against Lloyd. In the long game, I would need as many as possible of the Vice Lords at least ambivalent to my intentions of destroying one of them. If I casually dispatched Lloyd, I could expect their retribution as a matter of group prestige.\n\n\"On the second date you get to pick the location,\" she tossed the grenade back in my lap.\n\n\"Your gun range?\" I volleyed.\n\n\"Yours would be better,\" she countered, then looked to Reagan and Kristoff.\n\n\"Does this place have a name?\" Kristoff asked first.\n\n\"Green Valley Range in Henderson off Cassia Way,\" I told him \u2013 them.\n\n\"Reagan?\" he looked her way.\n\n\"Okay,\" she agreed reluctantly.\n\n\"That still doesn't address the main problem \u2013 you two need to be seen somewhere in public fast,\" I pressed.\n\n\"I know the precise location,\" Reagan nodded. \"Kristoff, do you want to go to an underground sporting event with me tonight?\"\n\n\"A date? Last time ...\" \n\n\"Please,\" she almost begged. That impressed upon Kristoff someone might really kill him for simply being a decent individual, plus somehow Reagan (or Jo) would provide some level of social armor.\n\n\"Okay,\" he nodded. \"Please note: if this place gets raided, it will reflect badly on my career,\" he attempted levity.\n\n\"I understand,\" Reagan softened (toward him). To me, \"You need to show up too. Someone wants to meet you, you probably won't enjoy it, so I feel this partially compensates for what you did here this morning. Are we clear?\"\n\n\"Another annoying individual entering my life \u2013 check,\" I sighed. \"How about breakfast?\"\n\nI had never had someone I considered to be a girlfriend before Dabney. Growing up I had a group of buddies, but only one Best Bud \u2013 Eric Uno \u2013 and when he got killed, I left the rest behind to join the Navy. There I found a new group of people to build my life around: the service-men and \u2013women whose unit I was assigned to. I knew them, their health records, birthdays and, as time progressed, familial details.\n\nWhy? Service-folk didn't like going to a psychiatrist over what they consider 'petty shit'. And since they have virtually no mental healthcare experience, they make poor choices where their mental health was concerned. As a hospital corpsman, I was always with my 'guys', so I was someone they could talk to about their problems. Not knowing much initially, I studied and learned. It wasn't like I would never send someone to the Base 'shrink', but if I did, I wanted to make sure I was doing the right thing by them when doing so.\n\nSo I learned about guys, girls and relationships. I learned about homosexuality and child-rearing. I learned about messy break-ups, obsessive fascinations and the price of unfaithfulness. I learned about the strengths and failings of human nature. I learned love and hate make people ignore the obvious and embrace the stupid. People could be brilliant, driven and hyper-competent, yet make blindingly obvious mistakes when emotions came into play.\n\nI was making a serious mistake staying in Las Vegas. I wasn't ready to explore the emotions keeping me here. Jo's emotional content was more trouble than I should be entertaining, yet here I was, engaging her in a positive context. Kristoff and Reagan were one of the best couples I'd ever met. They complimented each other perfectly ... if you cut away the peripherals of their careers ...\n\nJo and I started with the Chili Queso dip. Reagan and Kristoff went for the Ultimate Nachos. For breakfast, Reagan and I went for the boneless wings while Kristoff and Jo went 'Old School'. When I went to sample one of Jo's 'Blazin \u00ae' wings, I thought she was going to pin my hand to the table with her boot knife.\n\n\"Jo, you don't date much, do you?\" Kristoff chuckled. As a rule, combat pilots didn't scare easy either.\n\n\"Here you go,\" I offered Jo one of my Bourbon Honey Mustard.\n\n\"If I had wanted one of those, I would have ordered it,\" Jo scowled to me. Then, to Kristoff, \"Vardan is my first date in a very long time. My previous dates never left much of an impression.\"\n\n\"Jo, why did you ask Vance out?\" Reagan said in an accusatory manner.\n\n\"He drew a gun on me.\"\n\n\"You go, Dog,\" Kristoff smirked at me. \"Does that happen to you a lot?\" to Jo.\n\n\"Yes. But I normally kill people who do that.\"\n\n\"And making Vance go out on a date with you is a fate worse than death?\" Reagan zinged. \n\n\"Yes.\" Jo was unflappable.\n\n\"Not so,\" I reached out and around so my arm was around Jo's shoulder. Now my chicken wing was coming at her from the other side. I felt the barrel of one of her custom .50 handguns pressing against my ribs. A remotely normal woman would have simply said 'no'. Not Jo. She'd gone straight to escalation of threat of deadly force. Not to be outdone, I flicked the wing up, over her head and caught it in my teeth with a mighty chomp.\n\nI devoured the offending food item while making deep, meaningful eye contact with Jo. Nothing. The gun was still there.\n\n\"You owe me a chicken wing,\" she enlightened me. FFS! (For Fuck Sakes!)\n\n\"Hey,\" Reagan got Kristoff's attention with a sultry purr. He couldn't see Jo's firearm, but knew something was happening out of sight. He looked her way. She was tantalizing him with one of her Lemon Pepper wings.\n\nHe bit into the proffered gift, chewed it up, took another bite and another and finished up by licking her fingers. Kristoff probably thought he was being an example for Jo on proper 'guy-girl' date etiquette. I already knew Jo didn't care for normalcy. I looked around for our waitress, flagged her and, using hand signals, ordered Jo another round of 'Blazin \u00ae' wings. The gun went away.\n\n\"His other girlfriends are better looking,\" Reagan snipped. Both Kristoff and I wondered at the motivation and wisdom of her statement.\n\n\"Seriously?\" he asked me for clarification. \n\n\"I don't rate women on looks, but on utility,\" was my honest retort.\n\n\"Fearless,\" Kristoff noted ... my moronic honesty.\n\n\"Oh really?\" Reagan tilted her head slightly. \"How much utility do you find in Ms. Norquist ~ the former Mrs. Pharris and Dabney Curtiss ~ the former call girl? I can almost understand TC ~ the Internal Affairs Detective with the LVMPD. I'm not sure the other cop wants to screw you yet.\" \n\nThis was one of the key reasons I needed to aim Reagan at Kristoff. I didn't need another woman ranking the ladies in my life. The four I had were four too many in my opinion.\n\n\"What? You and G?\" Kristoff choked.\n\n\"Not way back then,\" I reassured him. \"Wild circumstance found me buying the house opposite the duplex she was being tossed out of, so I offered her a place to stay. While picking her up from work, I ran across one of my old gang's baby sister \u2013 Dabney.\"\n\n\"Curtiss ...\" Kristoff interrupted. \"Sammi Curtiss' little sister?\" \n\nI nodded. \n\n\"She's not so little anymore,\" Reagan added. \n\n\"Yeah. Her pimp made an issue of her wanting to change careers, so she moved in with me until things get sorted out. She and G get the bed. I sleep on a cot in the common room.\"\n\n\"The cop?\"\n\n\"The LO(l)E's (LOcal law Enforcement) were harassing G. I took exception. They took exception to my exception. And Internal Affairs got involved after a Sheriff's Deputy planted some meth in my car and stayed involved when I beat up two detectives and an Assistant Sheriff ... who all richly deserved it.\"\n\n\"Before, or after, you lost your job as a paramedic?\" Kristoff wondered.\n\n\"In the midst of.\"\n\n\"And that is why \u2013 after fifteen years \u2013 I knew V was still basically the same guy I knew in High School,\" Kristoff grinned at Jo. \"In the midst of a feud with the LVMPD, he still ran across an urban battlefield to save police lives in the same way he came charging across the parking lot of the In-N-Out Burger all those years ago.\"\n\n\"Where we got our asses kicked,\" I reminded him.\n\n\"We got away without being beaten into the pavement,\" he winked. \"And we should have been. Four hombres versus two rich boys and you. Ford ran... you could have, but you didn't.\" I had no good answer for that.\n\n\"I wasn't too bright back then,\" I shrugged.\n\n\"Wait!\" Reagan perked up. \"Doesn't that mean you were paying Vance back for saving your ass ...\" she hoped. It was wrong to hope.\n\n\"He didn't go running into the fight out of any sense of obligation,\" Jo corrected her. \"It is simply what friends do. It is not a matter of balancing accounts.\"\n\n\"But they weren't friends back then,\" Reagan insisted. \"He was the Pharris' pool boy.\" She wasn't fooling anybody, not even herself. Reagan didn't understand what qualified a person as someone I cared for, yet Kristoff had undoubtedly entered that sphere seventeen years ago.\n\nMind you, Lloyd Pharris might kill my mother, father, brother, sister and her whole family to get at me, too. The problem was my utter lack of communication with any of them over the past fifteen years when there should have been some contact \u2013 being my family after all. I hadn't been in touch with Kristoff Declan either, yet he had been a person I chose to hang out with, not family. Plus, he had selflessly done me a favor ... which was something I wouldn't forget.\n\nPeople in my line of work tended to recall people who did us favors. Conversely, we weren't overly vengeance-minded. If you screwed with us once, and weren't going to be a repeat problem, so be it. We got on with our lives. Only if you were persistent in your assholery did we eliminate you ~ proactively making our futures easier because you were a persistent ass.\n\nIf you did us a favor, we kept an eye and ear out. Why? People who did us a favor once were likely to do so again. Doing things to help them out was again proactively making our futures easier. We'd trained in the past for what we might need, worked in the present with whatever we had and planned for the future factoring in everything the past and present taught us \u2013 ALWAYS.\n\nIt wasn't a 'if you didn't think like that, you ended up dead' sort of thing. No ... if you didn't think like that, you didn't qualify to engage in our occupation. No one in our line of work would want to team up with someone who wasn't generally like us. A high level of competence was expected and thus assured. \n\n...\n\nMaybe I missed that aspect of my 'old life' and I was relapsing because I secretly was uncomfortable being around that vast sea of Humanity who were accustomed to mediocrity, if not downright stupidity, on a daily basis. Looking at the people at the table with me ... the #2 most directly lethal woman in the city on my left, across from me an elite jet fighter pilot (even with an Air Force Academy ring, Kristoff being a Lt. Colonel in only 11 years of service was very impressive) and next to him the chief assistant to the crime lord of the vice trade in Las Vegas, Circe.\n\nDabney? G? I was already starting to train them both physically. Both were exceedingly gifted in the looks department. I was in the process of elevating G financially and socially into a position where she could be a 'doer' and not a victim. Trixie and Soledad, the cops, both were well above par too.\n\nAbsent a team, had I created one of my own? G \u2013 Logistics core. Dabney \u2013 public relations (recruit). Jo \u2013 I'd follow her through a door any day. The cops were already established intelligence operatives. Reagan \u2013 a new 'Ms. Gray' aka pipeline into the real goings on in the Vegas Underworld. \n\nWell shit ... I had.\n\nMy ruminations were disturbed by my phone alerting me someone was trying to call me. I checked. It was a payphone. That meant it was important.\n\n\"Hey.\"\n\n\"Did you do something last night?\" It was Soledad.\n\n\"Such as?\"\n\n\"Anything to do with a certain insanely rich hotel guest getting the shit kicked out of him, his staff and his bodyguards?\" she was caught between pissed and amused.\n\n\"No comment. I find it disturbing a random crime happens and the first person you think to blame is me,\" I bantered.\n\n\"Rumor has it his bodyguards were former elite French paratroopers.\"\n\n\"Perhaps they were approached by a lone German tourist looking for the water closet and hurt themselves in the rush to surrender,\" I tossed a useless bit of poor humor out there.\n\n\"No. Someone beat and shot the shit out of them,\" she kept being a cop.\n\n\"And I would care \u2013 why?\"\n\n\"A whole lot of people are upset, Dipshit,\" she didn't sound angry.\n\n\"Was anyone killed?\"\n\n\"No.\"\n\n\"See. That doesn't sound like me. I kill people wherever I go. Just ask your Coroner-Medical Examiner's Office.\"\n\n\"Yeah ... it sounds like the perp had a partner too ...\"\n\n\"I also don't have any friends. We both know that.\"\n\n\"Yeah ... that's the damn truth. Well, watch your ass. This might get nasty.\"\n\n\"Sure and don't call me from that payphone ever again. Get a pre-paid phone you paid for in cash from a store you never frequent like any other sane conspirator.\"\n\n\"Gee thanks. Bye,\" and she hung up. By the way the two women at the table were looking at me and not asking, Kristoff felt compelled to.\n\n\"What did you do last night?\"\n\n\"Went on a date to the gun range. There I met a nice girl who was here in Vegas for a tech expo. I took her back to my place and had a three-way. Speaking of which, I need to go back in about twenty minutes and take her back to the Convention Center so she can rejoin her compadres and regale them about her 'Vegas Experience'.\" \n\n(She had BETTER NOT regale them with what really happened if she wanted to keep breathing, damn it.)\n\n\"You took a date to the gun range ...,\" Kristoff's mischievous eyes danced from me to Jo.\n\n\"That would be the former call-girl,\" Reagan pumped in.\n\n\"... then picked up a second girl?\" he continued. Well, I had just said that. \"And she's back at your place right now?\" Kristoff kept grinning. I didn't feel a response was necessary. \"With the former call-girl?\" Again, why did I bother talking at all? \"And you know about this?\" he aimed at Jo.\n\n\"I've met her,\" Jo remained dispassionate.\n\n\"Is Ms. Norquist \u2013 G in bed with them as well?\" Reagan kept getting revenge for this breakfast ambush.\n\n\"Where else would she sleep? It is hers and Dabney's bed,\" I stated deadpan.\n\n\"Because you sleep in the living room?\" Kristoff smirked.\n\n\"Yes. I prefer to sleep alone.\"\n\n\"Would you sleep with me?\" Jo asked. WTF?\n\n\"We'll see ...\" ",
        "Jo was waiting for something else, \n\n\"The cot is rated for 300 lbs. and you are right on the cusp,\" ('of being too much weight when combined with mine' was left unsaid).\n\n\"We could sleep in my bed,\" she offered.\n\n\"With you?\" spilled out of Reagan's mouth. Apparently Jo had a reputation ... as a soulless automaton. \n\n\"Of course with me,\" she frowned at Reagan.\n\n\"I didn't think you liked ... people,\" Reagan wouldn't stop.\n\n\"At least she didn't say the living,\" Kristoff muttered. So much could go wrong at this point, but I had already planned ahead. I leaned into Jo.\n\n\"Badger,\" I whispered in her ear. \n\nThere was no need to tell anyone else I'd bought her a gift. Sure, it was a cheap toy. It was also utterly unasked for and unheralded in her limited experience \u2013 her first gift on a date. As my head and torso retreated, she turned to look at me. She gave me an infinitesimal smile. The defiant glimmering in her eyes was a far greater reward.\n\n\"Don't try to get inside my head, or under my skin, Reagan,\" Jo stated calmly. \"It won't end well.\" Reagan and Kristoff's eye magic indicated they expected me to do something about the threat.\n\n\"Yeah, Reagan. I brought you here to get inside of his head,\" I jokingly pointed at Kristoff. \"Let me worry about Jo and Jo worry about me.\" My plan laid bare.\n\n\"Death threats will do that,\" Kristoff's humorous tenor belied his worry.\n\n\"Believe me,\" I told him, \"last Sunday morning ~ this was not where I thought any of us would be. I'd retired from my military life, post-military life and was going to be a nice, quiet taxpayer, minding my own business.\" \n\n\"Reagan had no intention of talking to me ever again. Jo's life and mine would have never intersected. You and I would still be chatting, because I would have still screwed up my job, but then we'd have parted ways and most likely that would have been that.\"\n\n\"So, does Ford know any of this?\" Kristoff gave a lopsided grin.\n\n\"Unlikely,\" Reagan finally answered. I doubted Lloyd would have found him criminally useful, but Reagan had kept in touch with the Pharris family dynamic for the past fifteen years, not I.\n\n\"Are he, Wynn and the latest Mrs. Pharris going to get hurt in all of this?\" Kristoff asked. It was like him to care. He'd always been the 'good guy' without being ignorant of others' moral failings, or na\u00efve about how the world really worked.\n\n\"I'm not gunning for them,\" I offered. \n\n\"If you do take Lloyd down, I want to ask Erika why the fuck she married Lloyd instead of Ford,\" Kristoff's brow furrowed. \"That was all messed up.\"\n\n\"You have no idea,\" Reagan sighed. Kristoff's eyes went from her to me.\n\n\"Nothing?\" was aimed at me.\n\n\"I didn't want to drag you into this, Kristoff,\" I met his gaze. \"The second I put your Caller ID to a Vegas address, I knew we were both screwed.\"\n\n\"Like thunder from the sky \u2013 sworn to fight and die ...\" he mused. That old damn song from our youth [* yes, the author is taking chronological liberties here].\n\n\"We're warriors, warriors of the world,\" I added to the chorus. \"The stupid shit teenage boys believe in.\"\n\n\"Many stand against us, but they will never win,\" he continued then waited. I didn't want to continue, because I'd stopped believing in any of those ideals long ago. I'd also stopped listening to metal music too; another casualty of my purposely abandoned youth.\n\n\"We said we would return and here we are again,\" my lips moved of their own accord.\n\n\"To bring them all destruction, suffering and pain,\" his bright teeth shown thru.\n\n\"We are the hammer of the gods, we are thunder, wind and rain.\"\n\n\"There they wait in fear with swords in feeble hands.\" \n\n\"With dreams to be a king, first one should be a man.\" \n\n\"I call about and charge them all with a life that is a lie.\"\n\n\"And in their final hour they shall confess before they die.\"\n\n\"Romantic nonsense,\" Reagan confirmed.\n\n\"What is it?\" Jo inquired.\n\n\"Warriors of the World by Manowar ~ a heavy metal rock group from our youth,\" I answered.\n\n\"And you recalled the lyrics?\" she aimed at Kristoff.\n\n\"Yes.\"\n\n\"You listen to them much?\"\n\n\"No. Not since I went to college ~ the Air Force Academy.\"\n\n\"Very well. I'll help. You are worth saving,\" she announced softly.\n\n\"Worth saving?\" Kristoff wondered. Reagan's interest was piqued.\n\n\"Yes. I meet dozens, if not hundreds, of people on a weekly basis who are useless as oxygen-breathers, worse as sentient beings \u2013 who deserve death. You don't.\"\n\n\"Who made you the Reaper?\" he challenged her.\n\n\"Life,\" she stated firmly.\n\n\"Kristoff, that is the best answer you are going to get,\" I cut him off. We locked gazes until he backed down. The rest was pointless chatter and Jo getting her replacement order of wings ... which she shared ... women. Kristoff picked up the check for this outing. Outside, we parted ways \u2013 first he and I, then he and Reagan and Jo and I. Before she could zip up her jacket, I made my approach. Her scrutiny was intense.\n\nMy hands went to her hips \u2013 no tensing \u2013 then around to the small of her back. I leaned in, she tilted her head up and we kissed. We exchanged a bit of tongue this time. Jo kept one hand between us, on my chest, while the other worked its way to the back of my head and a handful of my hair. She gave my hair a squeeze to let me know when to break contact.\n\n\"Nice,\" I smiled.\n\n\"Not 'thank you'?\" she examined me, cypher-like.\n\n\"I'm not tying any emotional progress we make with business,\" I said. \"With, or without you, I'm taking care of Kristoff and Reagan. We both know I have three ladies abusing my AC at home, so this isn't my dick talking. Killing folks isn't an issue for me. With you, it is just you and me ~ nothing more, Jo. Can I stop talking now? Because I really hate explaining myself.\"\n\nJo, who had been leaning against her bike, pushed up while bringing my head down so we could kiss once more. This time she gave it a great deal more passion. Yeah, she liked me for several semi-definable reasons and one crystal clear one \u2013 neither one of us liked talking all that much. \n\nShe didn't care about my family, or the ladies back home as long as they didn't interfere with 'us'.\n\n\"I prefer PANTERA,\" she confided. Of course she did. They were so loud, talking over them was a pointless effort. And they had expired violently ~ as a band. \n\nI left her happy, if not smiling. Kristoff's look told me he thought I was a 'dog' and a 'fool' for showing up with Jo and I couldn't really blame him. Since things had gone so well, I optimistically called Lorenz and informed him I could still show up if it wasn't too inconvenient. He said it 'wouldn't be a problem' in a hushed tone, which suggested his wife was angry with me, and thus a problem. \n\nWhile I was on the phone, Jo was nice enough to be obvious in tailing me back to my place. I imagined she was making sure my property address of record was actually the place I was driving to ... which I wasn't. I was driving to the place around the block, or would have, if something hadn't come up.\n\n{WHAT CAME UP}\n\nOn the way back home I was overtaken by two events. One was the benefit of my area surveillance network \u2013 I had a late model sedan with four black gentlemen in it waiting up the street from my abode. Since neither Jo nor Reagan could find me, I suspect Mr. Rogers had been 'helpful' to this group. Though slouched down, they weren't particularly even trying to hide their Playboy Blood affiliation. The second event was related to the first.\n\nThe Vice Lords of Las Vegas had only a few 'visible' rules, but one of them was a ban on open street violence. Vegas wasn't a one-trick pony, economy-wise. But anything which endangered tourism was bad for business, which was bad for the Vice Lords. And the knowledge that they frowned on such things had trickled down to all the various low-lives \u2013 gangs included. The Wednesday morning shootout had broken that rule, so the perpetrators had to pay.\n\nEach Vice Lord and Lady would exact retribution in their own way. \n\n Circe was muscling out the Playboys from the various pornography operations they profited from and steering all her girls away from venues they frequented. \n\nSycorax, the Gluttonous, was arranging to kidnap people they cared about, or valued ~ human slavery was one of her things. \n\nArchimago, the Avaricious, was freezing them out of every illegal gambling operation in the city. \n\nBaphomet, the Envious, was ramping up police efforts against them. \n\nJareth, the Slothful, was helping the others with their goals with information utilizing his city-wide network of homeless and chronically poor.\n\nOf most immediate concern to me though, was Thulsa Doom, the Wrathful. He was lining up various key Playboys for the grave. Killing people was his thing and Jo was his violent Right Hand.\n\nExcept for Baphomet, all of this was to take place behind the scenes. The dilemma for Jo was the four Playboys about to become a public spectacle trying to murder me in broad daylight in a nice, quiet residential area of the city. Violence was going to happen no matter what, so in her mind, it might as well be instructional violence.\n\nMy plan involved me NOT rolling down my home street, into my driveway and engaging in a firefight. I was going to drive around the block, park, and then sneak up behind them and screw with their car's exhaust so when they tried to follow me later, their car would inconveniently conk out. Jo, who caught my hesitation and bypassing the road leading to my dwelling, slowed down to examine the difficulty and spotted my 'problem'.\n\nHer solution was very different. She could 'help' me and do her boss's work at the same time. She rolled her precision motorcycle straight up to the Playboy's car, stopped perhaps fifteen feet from it, unzipped her jacket, quick-drew her twin hand-cannons and fired four shots from each weapon. She holstered her guns, zipped up her jacket and sped away. Elapsed time ~ nine seconds.\n\nThe four guys never knew what killed them. It wasn't like Jo was a known criminal player, much less a calculable threat. To them, she was a skinny figure on a nice ride who suddenly and accurately showered death upon them. From my after-combat analysis, Jo's first four shots incapacitated each target. The second shot made sure each guy was D-E-A-D. For me, it was a matter of taking advantage of the situation.\n\nIn my neighborhood, on a Saturday a little after 8 a.m., everyone was sleeping in, or asleep from the nightshift. While Jo's shots were loud, they were rapid-fire and she was now gone. If gunfire woke you up, you were most likely wondering what the noise was and would soon drift back to la-la land. I parked in the driveway, then walked over to the car of the deceased. From the placement of firearms, tattoos and jewelry, I figured out who was in charge and carefully searched his corpse.\n\nI rolled through the numbers on his phone, finding the one which appeared most. I made some adjustments, then dialed it.\n\n\"He there yet?\" a bleary voice inquired. Someone hadn't been to bed yet.\n\n\"Did you seriously send just four guys to kill me? Four?\"\n\n\"What? Who's this? Lil Kuku?\" \n\n\"Lil Kuku is sucking cock and taking it up the ass in Hell, Dumbass,\" I related coolly. \"He and three of his fellow Playboys had a tragic collision with technology which their purposeful neglect of our public education system left them totally unprepared for. Don't worry though. I'll be looking you up real soon so we can discuss the epic gravity of the error of their ways.\"\n\nI was abusing a thesaurus for a reason. It takes the human mind a certain number of milliseconds to process words based on their familiarity. The less familiar the word, the longer it takes to either figure out what it means, or to discover you don't know what it means. All those milliseconds do add up.\n\n\"What?\"\n\n\"Someone dumped four of your expired chumps on my doorstep and I don't fucking appreciate it, so you and I are going to have a chat about how unhappy you've made me. Clear enough?\"\n\n\"What? Who is this? Where is Lil Kuku?\"\n\n\"Listen up, Motherfucker. The previous owner of this phone is dead. Okay? Say 'okay' now.\"\n\n\"What? Okay? What?\"\n\n\"Dead as in two big fucking holes in him. I have the sneaking suspicion you sent him, and three of his friends, to kill me. Now, is your gang so big you casually misplace four members?\"\n\n\"What? No. Who the fuck are you?\"\n\n\"Do you send your boys out to kill so many people you lose track?\"\n\n\"What? No!\"\n\n\"Okay then. I'm the guy you sent Lil Kuku to kill. Now, who would that be?\"\n\n\"Mr. EMT?\"\n\n\"Right. We are on the same page.\"\n\n\"Where is Lil Kuku?\"\n\n\"He's dead. Do you want to speak to him?\"\n\n\"Yeah?\"\n\n\"Stick around. I'll make the arrangements, you dumbass.\"\n\n\"What?\"\n\n\"He's dead. You will most likely talk to him again when you see him in Hell. Clear enough? I'll be seeing you. Bye now.\"\n\nSmartass was using a burner phone. He was also at a location he parked his butt in at 8:15 in the morning, so most likely it was a place he frequented ~ like his home. Whomever he was, he had obligingly stayed on the line long enough to let me trace his call to his precise location. \n\nMoron. By cross-referencing police files (using my illegal password) and property records, I learned I was most likely dealing with a senior Playboy Blood by the name of Roy 'BB 187' Thompson. Age 23. Impressive criminal record stretching back 9 years. \n\nThe Playboys were going to be even more furious with me ... right up until the Homicide Detective began asking them why someone would be killing their boys with signature .50 caliber slugs. While the .50 was not completely unique, I was willing to bet there weren't a lot of people running around Las Vegas killing folks with something that memorable. \n\nI was also willing to bet when someone, or some bodies, ended up cooling their bones in the morgue with holes that big in them, it was a clear message to the Criminal Underworld. The corpses had crossed the Vice Lords and this was the result.\n\nAfter slipping around back to get a spare tarp and some duct tape, I returned to the unfortunate sedan and covered it up neatly. I'd buy a used tow dolly later, have this bitch dropped off at BB's house and let him deal with the fallout ~ no need to involve the LVMPD this close to my home. Back at my place, G, Dabney and Sara were all up, dressed (kind of) and talking over breakfast burritos and coffee in my living room.\n\nDabney came at me first, sexy-hungry and wanting to put her mark on me. G sent me happy, semi-domestic bliss vibes. Sara was blissfully basking in her adventurousness. \n\n\"Hey,\" Dabney sighed sleepily after she finished taking her tongue out of my mouth. \"You were gone when we woke up.\"\n\n\"I had some things to take care of,\" I patted her ass. She was still my No. 1 Girl. \"Right now, I have to take Sara to the Expo. When I get back, we can discuss what we plan to do today.\"\n\n\"Oh ...\" from Dabney.\n\n\"Oh, I was hoping we could do something tonight,\" Sara beamed hopefully.\n\n\"Let's see how last night's difficulties clear up before we make any definite plans,\" I cautioned her. She wasn't as upset as she should have been.\n\n\"Okay,\" Sara agreed as she and G stood. G dressed for going out = trouble.\n\n\"Let's go,\" Dabney grinned.\n\n\"We will go right past having Sara associated with you, Dabney, being traced back to anyone else last night and go straight to ~ Et tu, G?\" I moaned.\n\n\"You are the one who suggested we should expand our employment opportunities, V,\" G countered. \"Sara needs help on the sales side of her business. Dabney was close to completing her Hospitality degree and I've hosted numerous affairs in my day. Let us do this ... please?\"\n\n\"It is not my place to say 'yes', or 'no', G. And you are right \u2013 I do want you two to be able to stand on your own. But I want you to be careful as well, because there are some mean damn people out there,\" I wrapped up G and Dabney in my arms.\n\n\"G, didn't you work last night so you could have tonight and Sunday night off?\" I gave it one last shot.\n\n\"The Stratosphere is blocks away from the Convention Center, and it isn't like I'm collecting a pay check anyway,\" she resisted.\n\n\"I don't know,\" Sara spoke up. \"I was thinking a 3% commission for every sale you two make.\"\n\n\"Yay!\" Dabney jumped up and down with all the accompanying benefits.\n\n\"Yay,\" I mumbled. \"For my sake, pay them in cash.\" Sara just stared at me; she clearly didn't get it. \"Let's just say their finances are complicated right now and leave it at that.\"\n\n\"Okay. I'll arrange something,\" Sara happily agreed to the skullduggery and cheating the IRS. \n\n[...]\n\nWe departed for the Expo without further ado. I dropped them off without too much fuss, though Sara insisted upon a kiss on the lips since G and Dabney got one. As I pulled away, Ms. Xi gave me a call. From the background noise, she was at an airport.\n\n\"Senior Chief Hospital Corpsman Vardanyan,\" she began.\n\n\"Former-Hai Jun Shao Xiao Xi Baozhai,\" I answered. \"Call me Vance, or Mr. Vardanyan. I'm retired. I figure you already know, but I want to be absolutely sure you are aware of that fact.\"\n\n\"I don't care,\" she simmered.\n\n\"Cool. What do I call you?\"\n\n\"It doesn't matter.\"\n\n\"Fine. What do you want?\"\n\n\"I think you know.\"\n\n\"Not really. You and I have never met, yet you called me earlier this morning informing me you are going to show up at an undisclosed later date. After making a few calls of my own, I have reason to believe you've lost your damn mind and you are throwing your life away. I'm sure people you trust far more than me have already told you variations of the same thing. So, what do you want?\" I said calmly.\n\n\"You wish me to say something incriminating so your Homeland Security can arrest me?\" she spat.\n\n\"No. Engage your brain, Ms. Xi. To tip off Homeland Security, I would need a reason. What reason would I have? We have never met. Officially, our lives have never intersected. Unofficially, no one will admit our lives have ever intersected. Precisely who would be telling Homeland Security what about us which would allow them to detain you and not me?\"\n\nShe paused. From the background clutter I had been able to piece together she was at International Terminal at San Francisco International due to the BART noises. She'd wisely only called me after passing through security.\n\n\"I will see you soon,\" was what she finally came back with.\n\n\"Why?\"\n\n\"We've been down this road.\"\n\n\"Except you failed to answer me last time. What is this trip going to accomplish?\"\n\n\"If you have to ask, you wouldn't understand.\"\n\n\"What is it going to cost you to enlighten me?\"\n\n\"We will have this discussion in person,\" she shot off then hung up. Oh well ... I had other things to take care of and I doubted she understood the trouble she was in.\n\n[...]\n\nI found a tow dolly for sale at a junk yard. Paid for it in cash. Hooked it up to my Audi, drove a roundabout way to BB 187's abode and pulled up in front of his house. At the corner were a few homeboys doing the normal gang shit. I was sure they had lookouts about as well. Their problem was I wasn't a LVMPD patrol car, acting like a rival gang, or even plain clothes cops doing surveillance. I had the car unhooked, the tarp off and was stuffing it in my trunk when two finally approached me.\n\n\"What ya doing, Man?\" the mouthpiece of the two tried to look around me into the trunk.\n\n\"BB sent some guys to kill me. They are in the car. They were dead when I found them. Tell him, 'if he sends anymore and my Guardian Angels don't get to them first, I will.' I am not at war with the Playboys. I am not allied with the Florencia 13's. I am not going to waste my time hunting you fuckers down,\" I enlightened the two gangbangers. ",
        "The non-talker edged back to take a look in the car. The bodies had all slouched over in dramatic postures, though the mangling the windshield had taken was a herald of the trauma within.\n\n\"Oh shit,\" the guy muttered.\n\n\"Take heed,\" I eye-balled the closest one. \"I only kill people who come after me. Had your buddies Wednesday not tried to shoot me, or someone under my care, they would most likely be alive today.\" I shut the trunk.\n\n\"You sent four guys to kill me ... but I'm willing to let this faux pas pass, since someone else wanted them dead more than I did. You tell BB this for me, okay?\"\n\nHe looked at me from my eyes to my hip holster.\n\n\"Please note ... a holster is made for a quick-draw while your pistols are in your pants' waistbands,\" I spoke quietly. \"I will draw, shoot both of you twice and re-holster before you blink. It is what I train to do. Also note 'everyone I shot is dead'. I didn't come here to shoot anybody, just to deliver the bodies and the message.\"\n\n\"Fuck maaaannnn ... that's Lil Kuku,\" the other ganger sang out.\n\n\"Time for me to go,\" I advised the guy I was chatting with. \"My name is Vance. Are we good?\"\n\n\"Ah ...\" was all he managed. He wasn't reaching for his piece, which I took as a good sign. I backed around to my car, got in and drove off. As I sped away, the other gang members were moving from the corner to the car with the dead guys on board. No bullets came flying \u2013 mission accomplished.\n\nI gave it five minutes before making the call.\n\n\"This had better be important,\" some other chuckle-head answered the phone.\n\n\"This is Vance. Put BB 187 on the phone.\"\n\n\"What the fuck ... hold on,\" then the sound of a hand over the receiver.\n\nThen, \"Mother-fucker,\" BB hissed into the phone.\n\n\"Do you have any idea who killed your boys, because I didn't,\" I began.\n\n\"You ... fuck you!\"\n\n\"That's not helpful. Am I to assume you are going to be a repeat problem then?\"\n\n\"You talk a lot,\" he simmered.\n\n\"Words are less expensive than bullets, BB.\"\n\n\"I'll show you expensive, you fucker!\"\n\n\"Nice to know. Know this too, BB. I know you, your family, your gang and your hangouts. I am not threatening you. I am telling you. If I find any of your other boys shadowing me, I will come after the people you care about and give you a lesson on what I consider expensive.\"\n\n\"Huh? You'd ...\"\n\n\"Absolutely. I was a very evil man, BB. I gave that life up. You are asking me to revisit that life and take up my evil ways once more. Just between you and me ~ I will fucking exterminate your entire tribe ... because that is the way I think, BB. Every man, woman and child ... because I don't want to revisit our disagreement ever again.\" He said nothing. \"Or, this stops now with you giving me your word, Man to Man, the Playboy Bloods are going to accept I'm simply a crazy nut-job and not worth pursuing.\"\n\n\"Just like that?\" he murmured.\n\n\"I dropped off the car at your front door as opposed to sneaking in the back and exchanging lead with you and your houseguests,\" I reiterated. \"I didn't kill Lil Kuku and his boys either. They died on my street and I didn't want the cops annoying me with a bunch of pointless questions, so I delivered them to you. Do you think I killed them?\"\n\n\"No.\"\n\n\"Fine. I don't care who did. All I care about is that I don't have another hostile exchange with you, or anyone else in your gang, ever again. Do you give me your word, Man to Man, the Playboy Bloods will let this matter drop?\" \n\nHe had to think about it for almost a minute.\n\n\"I think so. I'll need to talk to a few other guys to make sure,\" he rumbled.\n\n\"I understand. Oh, and drop the lawsuits too. That is shit I don't need to be dealing with. The law firms, who say they are helping you, aren't helping you.\"\n\n\"Oh ... okay.\"\n\n\"I'll call you tonight around nine. If this works out, I'll owe you, BB,\" I added.\n\n\"Why?\"\n\n\"Do you think if I owe you a favor, I'll pay it back and my favor has value?\"\n\n\"Yeah,\" he answered a few seconds later.\n\n\"Take into account ... I didn't kill everyone who got in my way in the past, BB. Sometimes I made deals \u2013 like you and me right now. I'm giving you something you didn't have, and you are getting the Playboys off my back.\"\n\n\"What are you giving me exactly?\"\n\n\"The services of a seasoned combat paramedic, BB. In case you, or someone you value, ends up shot, or stabbed and going to a hospital would invite all sorts of unfortunate questions, I can patch them up and get them back on their feet \u2013 one time \u2013 free of charge.\"\n\n\"Oh ... I'll think about it,\" BB agreed. \"Oh, and it is BB 187. It means ...\"\n\n\"Blood Baron and 187 is the code for homicide. I've read your police file too. To me, the LVMPD is just another gang in this city, like your Playboys. I don't like either organization, but I will make bargains with a few members as individuals ... like you and I are doing right now,\" I lied somewhat. \"Bye.\"\n\nHe was agreeing because I wasn't immediately available to put some slugs in to avenge his gang mates and I was offering something of value. Without a doubt, he, or one of his buddies, was going to get shot one day soon and need someone capable of patching them up without the need of the hospital reporting the wounds to the proper authorities. All he had to do to gain this favor was stop his buddies from doing something he thought was stupid. I got the added bonus of not colliding with the unjust Justice system.\n\n{THE COOKOUT}\n\nKristoff shot me a wicked look. What could I say? I had promised Lorenz I would show up with a roommate, but my roommates had bailed and I had to come up with a warm body fast ... and Jo wasn't a possibility ... nor was Kip the Pimp, or Rothschild the Sheriff's Deputy ... and that was the short list of folks in Las Vegas I knew well enough to even think about asking and who might actually say 'yes'.\n\n\"So, you fly jets?\" Rosita, one of Lorenz's two sisters-in-law, preened.\n\n\"Yes, I do,\" Kristoff showered her with his machismo.\n\n\"How do you know Vance?\" Valeria, the other one, kept eyeing the both of us.\n\n\"Oh, Vance and I used to kill things when we served together,\" he nodded grimly. \n\n\"Really?\" both women cooed. I could tell; Kristoff was a pro \u2013 pro womanizer that was.\n\n\"Oh yeah,\" he kept nodding. \"Really bad people, normally in places we can't talk about. Secret Warrior ~ Special Forces kind of stuff.\"\n\n\"Oh ...\" they were eating it up.\n\n\"I thought he was a medic,\" Valeria's eyes wandered my way hungrily.\n\n\"Special Forces have medics, Valeria,\" he educated her. \"In his case, Marine Recon and SEAL Teams and Vance served with both. My side are the Combat Controller on the ground and fools like me providing Close Air Support.\"\n\n\"Isn't that dangerous?\"\n\n\"For him, or me?\" Kristoff joked.\n\n\"For both of you,\" Rosita stroked his biceps. He was wearing a blue short-sleeved polo shirt with 'Air Force Academy' on it, khaki shorts and tennis shoes with short socks. \n\nHe was an inch taller than me, slender yet compact, and tan with thick, black hair kept in a Brad Pitt style. Sure, he was a decade older than the woman fawning over him, but he didn't work out 'regularly' \u2013 he worked out every damn day \u2013 intensively \u2013 and his body showed his devotion in the same way his easy smile echoed his leadership experience and his eyes sparkled with intelligence and learning.\n\n\"Yes Ma'am,\" he focused on Rosita. \"Going Nap-of-the-Earth, exchanging 12.7 mm machinegun and RPG fire with my Vulcan, or Mavericks and SLAM-ERs ... it gets tight.\"\n\nOkay, that was utter bullshit. Kristoff didn't fly anything slow enough for any idiot to even attempt to fire an RPG at. Besides, the SLAM-ER was a Stand-off missile with a range of 270 kilometers thus not something you would use in 'close air support'. \n\n\"Did you ever save Vance's life?\" Rosita moved even more into Kristoff's space. Okay \u2013 she was about to start humping him.\n\n\"Multiple times, including right now,\" I gave a tight smile.\n\n\"Did you ever save Kristoff's life?\" Valeria was deciding me being dangerous was 'cool', and 'temporarily unemployed' wasn't a deal-breaker.\n\n\"He's never been shot down,\" I answered.\n\n\"He means the few times my life has been in danger have been times we were involved in missions neither of us can talk about,\" Kristoff elaborated \u2013 lied like a Big Dog. \"In matters of National Security and our oaths to our Nation, we are men of our words.\"\n\n\"Oh,\" they both exhaled, pushing their sweaty breasts forward.\n\n\"Why did you quit to become a paramedic at MedicWest?\" Valeria pressed.\n\n\"I mustered out of the military three years ago to work as an agronomist,\" I began. \"I still worked for our Country, just without a uniform ~ all peaceful-like. Sadly, spreading the knowledge of advanced farming techniques isn't universally appreciated. My list of enemies kept growing, my life expectancy kept decreasing, so I opted for something else.\"\n\n\"When you 'cancelled' that Pendejo who was threatening that pregnant girl ... you were so smooth,\" Valeria lauded me. Thank you Livestreaming Media.\n\n\"Well, Kristoff wasn't around with his Vulcan,\" I quipped.\n\n\"Or Maverick,\" he snorted.\n\n\"Or a B83,\" I offered an alternative. Kristoff nearly spewed the beer he'd been sipping.\n\n\"Damn,\" he choked.\n\n\"What's wrong?\" What is a B83?\" Rosita's head flipped back between the two of us.\n\n\"Something which would require some true pinpoint accuracy,\" I fibbed.\n\n\"Yeah ... considering it is a 1.2 MEGATON-yield nuclear warhead,\" he informed the ladies. \"I'd have to bounce that 'gift' off the top of La Madre Mountain just right for it to have the proper effect in Vance's latest 'close encounter'.\"\n\n\"What's a Maverick ... and a Vulcan then?\" Valeria questioned.\n\n\"A Maverick the terminology for the AGM-65 ~ an Air-to-Ground tactical missile with a 300 lbs. warhead ...\" I answered.\n\n\"And a Vulcan is the M61A1 ~ a 20 millimeter, six-barreled Gatling autocannon,\" Kristoff continued. \n\nI saw what I came here to see ~ the combination of individual and situation.\n\n\"I've got to take care of something \u2013 ladies \u2013 Kristoff,\" I untangled myself from Valeria. \n\nI sent a friendly look Lorenz's way. \n\nHe was flipping burgers and rotating hot dogs on his outdoor grill. He gave me a mock salute with his spatula then turned to respond to a guy he'd introduced as his uncle when we arrived. I went into his house. The person I was looking for was by the refrigerator, pulling out a tray of something.\n\n\"Mrs. Torrent,\" I addressed Lorenz's wife. Her name was Gabriela. She spun rapidly. I'm a quiet guy. Kristoff and I entertaining her familial relations hadn't made her like me one ounce more since my arrival. Undoubtedly it had to do with a) having her husband risk his life on the job at my request and b) him receiving a temporary suspension for doing so.\n\n\"Mr. Vardanyan,\" she clipped off every syllable. I walked passed her to the chair I'd slung my windbreaker over. I'd left it there on purpose, as soon became evident. I withdrew a thick envelope from an inside pocket and returned to her, my peace offering in hand.\n\n\"Here,\" I tried to hand it to her.\n\n\"What is it?\"\n\n\"$9,995 in random currency \u2013 mainly $20's and $50's. At $10K, you have to report it on your tax returns. Anything less and it's just a gift.\"\n\n\"What!\" she gasped. She put the Saran Wrapped food tray on the counter blindly, then gingerly took the envelope from me. She opened it up and began to rifle through the bills. \"What is this?\" she was a bit less furious with me and a tad more curious.\n\n\"I figured I inadvertently put a kink in your cash flow and Lorenz would never accept any help from me, but you might.\" I held up my hand to forestall the next part of this routine. \"This is not to make you forgive me for what I asked Lorenz to do on the job. He's a grown man. I didn't ask him to do something I didn't think he could do. If you choose to be angry with me over that, so be it. This,\" I motioned to the money, \"is simply me being aware of the difficulties my actions caused.\"\n\nShe tried to decipher my intentions. Failing that, she thumbed through a few more of the bills.\n\n\"This is real? Not counterfeit?\"\n\n\"It's real. I made some money at my previous job which I don't keep in banks.\"\n\n\"Was is something illegal?\" she sensed a trap.\n\n\"Not in this country,\" which wasn't either of the answers she was expecting. \"Listen Mrs. Torrent ...\"\n\n\"Gabriela. Lorenz likes you. Worse, he admires you,\" she scolded me. I was sure Lorenz had already been punished for his feelings toward me ... and would be again. It's a girlfriend/wife/{whose got the pussy}-thing.\n\n\"He's a nice, likeable guy. I think he tries too hard to be nice, but then I'm the type of guy who doesn't want friends,\" I shrugged.\n\n\"Why not?\" as in 'why didn't I like her husband ~ wonder-fucking-ful person that he was?'\n\n\"Gabriela, if I consider a person a friend, there is nothing I won't do for them. By that, I mean there is no law I will not break, no person outside my close personal circle I will not savage, torture and even kill if need be. Unlike Lorenz, I am not a moral individual. Call me 'gray' if you like, or a monster. I don't care. I don't live my life to make others happy \u2013 he does.\"\n\n\"If ... if this causes problems for Lorenz later, could we ...\" she attempted deep, meaningful eye-contact.\n\n\"Go to a pay phone you do not normally come across. Call my number \u2013 Lorenz has it. In as brief as possible manner, tell me about it. Never use that phone again. Never call me about that problem again.\"\n\n\"You really were a Navy SEAL, weren't you?\" she whispered.\n\n\"No. I was a Hospital Corpsman. SEAL teams use specially trained Hospital Corpsmen, as does the Marine Corps and various other organizations associated with US Special Forces, Gabriela,\" I stated.\n\n\"Were you with the CIA?\"\n\n\"Let's go back outside,\" I looked out the window to where the guests were.\n\n\"I don't know if that is a 'yes', or 'no',\" she kept studying me.\n\n\"I'll take the platter outside while you hide the money,\" I suggested. \"I wouldn't want to hurt your husband's feelings.\"\n\n\"Is your friend ...?\"\n\n\"Kristoff is completely legitimate ... except for the fact he is not my roommate,\" I grinned. \"He's a fighter-jock with all the accompanying pitfalls and tragedies.\" \n\nI left her to figure out what that meant as I scooped up the food and escaped this 'normal people' bonding moment. Fuck, I hated small talk. Sadly, I liked Lorenz as a decent human being. Since I'd made his work and domestic life difficult, I had the desire to make amends. \n\nAs we were leaving, Lorenz pulled me aside and thanked me for my little 'pep talk' with his wife. He was sure I'd won her over with my sparkling personality. I let him go with that delusion, because believing the person he loved most in life had responded to a bribe could be heartbreaking for those who underestimate the power of money to buy happiness.\n\n{CALAMITY, HONEST ACQUAINTANCES & THE TEMPEST WITCH}\n\nI had installed cameras which looked out over every angle of approach to my house, including each door and window, so if anyone tried to get in, the person or persons in the house could see who they were and respond appropriately. It wasn't like I hadn't continuously briefed both ladies on the process. I was getting dressed in my tuxedo ~ I had attended a few weddings while in Service ~ when the front doorbell rang. Dabney went for it.\n\nG and Sara were in the living room, sitting on the sofa, super-pleased with the success of the Expo. 'Low and Behold! Geeks had flocked to two gorgeous women of G's and Dabney's unobtainable (outside of actually accessing a top flight escort service) stature. Sara had coached them on the correct terminology to get the conversations started and Sara's Team's product had done the rest. Oh look ~ Record sales! I appeared to be the only one NOT surprised by this. \n\nTheir conversation turned to tonight's mysterious activities. I would have loved to leave them at home, except I had a real concern if Lloyd's people knew I was at this illegal function, they might make a run at the ladies ... so G and Dabney were coming along. Sara was tagging along 'because' ... accompanied by Dabney pouting ... and G telling me the final decision was of course mine while her body language was dictating I'd better bring Sara along, or my home life would get even shittier.\n\nI swear to God, I had the sneaking suspicion I'd gotten married in my sleep with the added bonus of me becoming a polygamist. Dabney and Sara had hugged me when I said 'okay, she can come with us \u2013 IF she obeys my every command'. I doubted they were listening. G told me 'thank you' and gave me a hug when the other two left ... which I put down to 'on the job experience' as a wife already.\n\nAnyway, the doorbell rang and Dabney answered it. \n\n\"Hello,\" came from Dabney.\n\n\"Who are you?\" was voiced by a semi-delirious Chinese-accented female.\n\n\"I am Dabney Curtiss. Who are you?\"\n\nI grabbed my Mk 18 Type 2 Close Quarter Best Friend and quickly and silently moved for the door to the hall. The outside lights were on. When I reached the hallway control panel I'd kill the inside lights, silhouetting the Chinese ex-Spec Ops lady who'd come to kill me then shoot around Dabney \u2013 neutralizing the threat. My Mk 18 had a sound and flash suppressor too.\n\n\"I'm looking for Mr. Vardanyan,\" she mumbled. Something wasn't right. I stealthed down the hall, happily realizing Dabney hadn't opened the steel mesh outer door. She had some protection.\n\n\"Wait \u2013 are you bleeding?\" Dabney gasped.\n\n\"Open the door!\" the visitor demanded.\n\n\"Fuck that!\" Dabney squawked. I heard movement and three sounds of suppressed fire and metal tearing then a body hitting the floor. \"Ow!\" from Dabney. That was a 'boo-boo', not a 'fuck, I've been shot' noise. \n\nI came to the end of the hall to see Dabney, on all fours, crawling away from the doorway, and former Lt. Commander Xi Baozhai using a standard issue Chinese subsonic QSW-06 pistol to shoot out my lock. Good luck with that. Her 5.8x21mm subsonic rounds didn't have the power to do shred my titanium alloy.\n\n\"Kick over the coffee table,\" I barked at G and Sara ... who were simply sitting there. \"It's armored.\" Like everything else in my place. By some minor miracle, they did so. I now had another problem \u2013 one of ethics. My 5.56x45mm WOULD shoot through my screen door. I had her dead to rights ... which made no sense. She knew better. Her tactical situation was beyond stupid. I took aim.\n\n\"Don't move,\" I said instead of putting a few bullets in her. Now she had a chance to move to cover. My round wouldn't penetrate my walls. Then we would have a stand-off.\n\n\"No ...\" she growled. Her gun wavered. \n\nA second problem presented itself. Professionals, whenever they could, went for a two-handed grip when using a pistol to make extra damn sure your bullets went precisely where you wanted them to go. She wasn't doing this. No, she was using her left hand to shoot while her right was inside her light jacket, pressed tightly against her left side. \n\nSomeone had already put a bullet in Ms. Xi and I was willing to bet it had been her racial compatriots in San Francisco ... probably ten hours ago ... when they realized she wasn't going to be rational and was going to keep coming to Las Vegas to kill me.\n\nBeing rational people, the Ministry of Security people at the People's Republic Consulate in San Fran had tried to kill her ... because either one of us killing the other publically might cause some pesky American investigative journalists to revisit her dead brother's 'suicide' in Macau, which might lead to that dead American researcher in Singapore. That was thirteen cases of suicide ... which was suspicious in anyone's book.\n\nNah ... they'd told her to get on a plane and go home. She'd said 'no', so they'd tried to kill her. I had to believe there were some dead Chinese diplomats back in California ~ so definitely no return trip for Baozhai. I certainly admired her familial dedication. I was also letting emotions cloud my tactical judgement, which I knew was a serious mistake.",
        "\"W\u01d2 ... W\u01d2 hu\u00ec sh\u0101le n\u01d0 de su\u01d2y\u01d2u,\" she slurred before she slumped over against the door then crashed to the ground. That wasn't promising. I approached from an oblique angle. The door was mangled. I'd planned for that. First I had the ladies exit to the bedroom before I popped the pins on the screen door, moved it aside and performed a preliminary exam on Ms. Xi.\n\nI pocketed her weapons \u2013 the pistol, two spare magazines and a ceramic, hilt-less 6\" blade. After that, I picked her up and brought her inside \u2013 to the bedroom \u2013 kicking the door shut as I did.\n\n\"Dabney, secure the deadbolt,\" I began issuing orders. \"G, go to the frig and get me a vial marked 'A' and the medical kit on top. Sara, get my ties. We are going to secure our guest to the bed.\"\n\n\"That would be wise,\" she agreed. I spared her a glance. \"She said 'I will kill you all'. I speak Mandarin.\"\n\n\"Good to know. Get to work.\"\n\nOnce the first round of chores were completed and I'd figured out she'd been shot twice \u2013 both two 'through-and-throughs' on the left side \u2013 one had been deflected off a rib (definitely fractured/possibly with fragments) and the other had passed between her kidney and urethra. How it missed her superior mesenteric artery \u2013 I didn't know. Had it been cut, she'd have been long dead by now. Same went for her spleen, kidney, liver or stomach. That still left a mess made of the small intestines to clean up. \n\nFrom the abrasions on her hands, right cheek and tears to her clothing, she'd been in a fight alright. I figured she'd taken the gun of the guy who shot her too. I'd get to ask her about it soon as well. Despite her condition, I had to give her a shot of adrenaline to revive her because I didn't know her blood type. And I'd need blood because I was going to have to poke around inside her to see if I could, in fact, save her. Dropping her off at a hospital was an effective death sentence.\n\nI gave her the shot, then waited. I sent Dabney and G from the room. I'd need Sara in case Baozhai was only semi-coherent, thus only talking in her native language.\n\n\"Hey,\" I lightly slapped her face. Her eyes fluttered a few time, then opened. It took her a few more seconds to focus on me. Then came the hate.\n\n\"What?\" she tugged on her restraints.\n\n\"You've been badly shot and lost a great deal of blood, Ms. Xi,\" I explained. \"I need to poke around inside you to see how badly your various internal organs are damaged. To do that and not kill you, I need to know your blood type.\"\n\nShe stared ... and stared ... and stared.\n\n\"Why?\"\n\n\"I don't really know. Quite frankly, we both know I should let you bleed out and bury you in the desert. I might let your government know where I buried you so they can confirm you are really dead and they can call off their own manhunt ...\"\n\nYeah, there was that personality shift ~ the loyal soldier/sailor beseeching her People for justice only to be met with murder ~ the sense of betrayal; a lifetime's devotion rendered devoid of meaning. Even after she let them know she didn't even want their help ~ she was perfectly willing to carry on alone, her side had tried to make her 'dead' instead.\n\n\"Why don't you? If I get better, I will avenge my Brother,\" she simmered.\n\n\"Don't care. What is your blood type?\"\n\n\"But why?\"\n\n\"I told you ~ I can't explain my actions. Now, I'm on a time table. Someone expects me to be somewhere in ... about two hours and I can't disappoint them. By all means, make my life easier and don't answer my question.\"\n\n\"Who are you?\" she looked to Sara.\n\n\"I'm just a tourist!\" Sara babbled nervously. \"I mean ... I'm not part ... I mean, I don't live here!\"\n\n\"She is a civilian?\" the Chinese killer sent my way.\n\n\"Yes. She also speaks Mandarin Chinese, which I thought might be useful if you were only semi-lucid,\" I clued Ms. Xi in. \"She's brave and reliable, within the scope of her abilities.\"\n\n\"I speak some Cantonese too,\" Sara added needlessly. \n\nWhy do people feel the desire to provide unsolicited information? I actually know the answer. They feel if they are found useful, they won't be hurt/killed. You would think their 'side' having the upper hand would encourage some restraint, but it doesn't.\n\n\"Who answered the door?\"\n\n\"Fine then,\" I had been sitting on the bed. I stood. \"Have it your way.\"\n\n\"A Plus.\" Thank Heavens for yet another woman making my life more difficult.\n\n\"I'm A+,\" Sara smiled at me. That wasn't too unusual. Over 30% of Americans were. I'd need more. \n\nI immediately set those two up for a compatibility test \u2013 they were \u2013 then prepared to extract a pint from Sara. I also called up Kip Churchill, the Pimp. I needed a return favor \u2013 four ladies with A+ blood. How he figured out which ladies had it and how he got the blood to me within the hour was his problem. A human of Baozhai's size would have about 10 pints (4.7 liters) of blood in her system, so having five on hand should have been enough.\n\nCalling Detective Lieutenant Trixie Crowe (TC) was next on my list. Ms. Xi would need a babysitter while the rest of us were out. As I set to work, I had G and Dabney get Xi's car and drive it around to one of my nearby properties and cover it up. Undoubtedly the Chinese would come looking for her and their best point of contact was still me.\n\nTo take care of that difficulty, I called in another favor. I called Ramone Garza, leader of the local chapter of the Florencia 13 'Sure\u00f1os'.\n\n\"Who is this?\" he said in way of a 'hello'. He probably wondered who had his private number and had no caller ID.\n\n\"The paramedic who patched up your lady. How is she doing?\"\n\n\"Not so good. They are holding her downtown on immigration charges. ICE is shipping her to Arizona on Monday.\" His pause was telling. \"A guy called me and said if you called, I should call him because if I didn't and I helped you, something bad would happen to Corazon.\"\n\n\"He wasn't lying to you. He's got the juice to do it,\" I responded. I'd only met him once, but Ramone had come across as a level-headed guy who appreciated straight talk.\n\n\"I got the same feeling. What do you want?\"\n\nTime to alter my plan a bit.\n\n\"Maybe we can help one another. I want you to send two guys to get a car, drive it someplace way out of town and leave it. I'll give you a gun, wallet and a flash drive plus a number to call when your boys are safely away. You tell these people you know where they can find those items.\" \n\n\"Tell them 'the woman's body was handled by some people from the East Coast', \u2013 no further details. Then, make your request. After you've done that, give then 15 seconds to acknowledge the call then hang up. Do not stay on the line no matter what. Clear?\"\n\n\"Clear. Who am I dealing with?\" he sanely inquired.\n\n\"The People's Republic of China's consulate in San Francisco. A Chinese national came to town to kill me over shit I did I'll never talk about. They told her to go home. She disagreed, so they tried to kill her. She got shot up, but still made it here to my door step. They are going to be looking for her and I'm sure her car has GPS, so they will be showing up soon.\"\n\n\"Is she dead?\"\n\n\"It is best if you think she is.\"\n\n\"And she came to town to kill you? Dude ... you have a fucked up life. I'll take care of it ~ personally. Me and my brother because I'm sure he won't tell a soul,\" Ramone promised. \"I'm on my way.\"\n\n\"Ramone, when you call that number, tell them this is your price \u2013 \"I want you to launch an official inquiry into the status of Corazon ~ her full name, Inmate ID and Case Number.  Make this one Human Rights Inquiry and we are done. Do this and you promise they will never hear from you again.\" \n\n\"From the People's Republic of China? Oh, Corazon's full name is Corazon Bedoya Ib\u00e1\u00f1ez.\"\n\n\"I know. Her ID is 01945793 and her Case No. is 12FN0283X. (All of that information was accessible online by anybody) That will send up all kinds of Red Flags with Homeland Security and the CIA which will make her safer and allow some of my friends to influence the system. My difficulty is I have friends in low places, so any favor I ask for will take time. The Chinese making the notification will give us that time,\" I informed him.\n\n\"That guy who was snooping around?\"\n\n\"He is going to be a problem. I'm working on it, but it is going to take time on my part before I can report any progress. Sorry.\"\n\n\"I gotchya. Fuck-ass cop-bait,\" he chuckled. \"Don't worry. I got this ... 404.\"\n\n\"404?\"\n\n\"Yeah. It is Cop-Code for ...\" Ramone chuckled.\n\n\"I know what it means,\" I grunted. To the LVMPD, it meant Unknown Trouble. \"Let's stay on target.\"\n\n\"Ha!\" he laughed. \"We'll see if this nickname sticks. Watch your back.\"\n\n\"Right ...\" I then finished up by telling him where to pick up the car, then hung up. \n\nBack with Xi Baozhai, I told her we needed to stage some brief footage of her looking very dead.\n\n\"Why?\" she muttered.\n\n\"Your people are coming to finish you off and I'm trying to convince them you are already dead.\"\n\n\"I should be dead,\" she remarked bitterly then, \"What do I do?\"\n\nHaving been down this road before, I knew the hardest part is the eye drops, because to make a convincing 'death video', the victim has to have their eyes open and not blink for at least 45 seconds. A minute is better. Proper eye drops help with that.\n\nBaozhai handled it like a pro. The Sea Dragons, her old unit, were highly disciplined. It took one take with me approaching the bed then walking around the foot. There was no dialogue, or other sounds to give away our location, or identity. I decided 53 seconds of her lifeless body, head tilted to the side, eyes wide open without a hint of pulse, or breath was good enough. I removed the new chip, placed it in a freezer bag along with her other personal effects and off it went to join the auto. I had to get to the real work after that.\n\nSome higher power, or her ancestors, must have been looking out for Xi Baozhai. There was no damage I hadn't seen before and successfully dealt with. With the five pints of blood, antibiotics and rest, she'd be up and hating me to death in a week ~ easy. She'd be feeling the pain for about a month, but professional warriors of her caliber could work through petty shit like being gut shot.\n\nAs I was wrapping up, I got a call from Ramone. G handled it for me. He'd deposited the car and had the brief conversation. He'd refused the invitation to meet, or even exchange names. He'd taken my advice and hung up after giving his lines. In the same vein, my ladies dealt with TC when she arrived. The IAB cop stopped in long enough to see I was indeed saving someone's life, then returned to G and Dabney for the explanation. \n\nIt was the bare bones: a Chinese national showed up on my step to kill me. Operatives from the PRC were coming to kill her. She wanted to kill me for shit which happed while I was working for our Government and which neither government would want either of us talking about. If the lady went to a hospital, she would eventually be sent home and murdered, because no one in my house would press charges.\n\n'Why couldn't we watch her?' \n\n~ We all had to go to a function involving Reagan ~ more stuff we really couldn't discuss. \n\n'Who was Sara and why was she going?' \n\n~ Sara know secret electronic spy stuff ... honest.\n\n'Why was she (TC) doing something clearly illegal (not reporting a gunshot victim)? \n\n~ The woman was still in danger and TC was the only one of us who could legally shoot people ... which might come in handy if Ms. Xi woke up and tried to escape.\n\nTC didn't like that last one.\n\nMy final call was to 'Betty Gable'. \n\n\"You do realize the time differential between the Pacific and East Coast?\" she yawned.\n\n\"This is a business call.\"\n\n\"Hold on,\" she muttered. After she made a few adjustments from her end. \"Things are secure from my end.\"\n\n\"Not secure enough for this.\"\n\n\"Oh crap,\" she grunted. \"Do I need to get someone in National Resources to tap a reliable somebody in the FBI's CD?\"\n\n\"This may be an Operation's issue,\" I countered. \n\nThe National Resources Division of the CIA was their domestic unit, a group which normally debriefed corporate types about industrial secrets and cultivated foreign students and diplomats in the US into becoming intelligence sources. \n\nOperations \u2013 technically the Directorate of Operations \u2013 was my old umbrella organization at Langley. They handled SOG (Special Operations Group) personnel among other things. including counter-intelligence. FBI's Counter Intelligence Division ... well to be fair, I'd never worked with them before.\n\n\"Involving 'outsiders' might be 'unfortunate' for multiple parties,\" I cautioned. Translation: I really wanted the CIA to handle this matter. Otherwise, people might end up dead and I had already killed far too many folks publically since retirement, as it was.\n\n\"Oh shit,\" she muttered darkly. \"I'll send someone we can trust. Monday?\"\n\n\"Monday works. Make it sometime past noon. Oh, and I need a favor.\"\n\n\"This has to be good,\" she muttered.\n\n\"The PRC is about to make a Human Rights Inquiry concerning a specific ICE detainee here in my home town. The person in question is an asset via a critical favor for a friend. Her identity should start clarifying a whole host of issues for you. Point some people at it because it is really important to what's going on.\"\n\n\"You are no longer an asset,\" Betty reminded me.\n\n\"Please.\"\n\nLong pause.\n\n\"ICE?\"\n\n\"Yes.\"\n\n\"It just so happens I know a gal who owes me a favor, or three, who works on Child Exploitation out of their Phoenix Field Office. Special Agent Dana Eibar. It might cost you.\"\n\nShe meant it WOULD cost me, but the individual would also come through for me. After all, when her 'friend' in the CIA's Directorate of Operations 'suggested' she look into something, it had to be worthwhile. I prayed she was married, or a lesbian.\n\n\"Thanks.\"\n\n\"You're worth it. Be careful and I expect some serious explaining when you have the opportunity. Night now,\" and she hung up. Mission accomplished.\n\n{***}\n\nThe illegal event was on the 600 block of D Street \u2013 a warehouse unit with a disarming business name and an armored gate. I didn't have an invitation, but when I told them my name, the gatekeeper smiled and waved me in. My new ride, while nice, was far from the nicest vehicle on the premises. We were late (it was past the 10 p.m. start time) so we had to walk to the only unlocked entrance.\n\n\"Hold up,\" the door guard motioned. I knew better than ask. Unfortunately ...\n\n\"Why?\" Sara inquired.\n\n\"He asked us to,\" I headed off his condescending retort. \n\nHe had sunglasses (really high-tech light amplification gear) and an ear bud. His tuxedo sheltered his shoulder holstered sidearm. By the stiffness of his right arm, I wagered he had a collapsible baton up his sleeve. Nice to know he wouldn't go straight to lethal violence.\n\nA suitable time later, the door opened for us. I noted it was steal reinforced with upper and lower brackets for bars to be slid into place in an emergency. Waiting for us were two guardians and one middle management type who smiled,\n\n\"This way, Mr. Vardanyan, Who are your lady friends?\"\n\n\"Ms.'s Norquist, Curtis and Patel,\" I made introductions based on age.\n\n\"Who are we meeting?\" Dabney broke this time.\n\n\"Your hostess for the evening,\" he grinned over his shoulder. The place was designed to foil a quick breech-entry ~ assumedly by the authorities. We immediately took a turn to the left then climbed up two sets of stairs.\n\nI got the feeling the interior of the building had been designed for three levels though I wasn't sure why. On the second story landing we passed a similarly secure door. The money invested in this site was racking up. At the third level we were escorted down the hallway thirty feet pasted two door then into the third. The hallway went on. Inside the room were five more guardian types.\n\nThe explanation was quick in coming.\n\n\"No weapons, Mr. Vardanyan,\" the mouthpiece said. I nodded congenially.\n\n\"They are unarmed,\" I stated while beginning to disarm myself. \"Shoulder holstered .45 ... .38 at my back ... knife on my wrist ... knife on my ankle,\" I pointed out before reaching for each weapon. No reason to stress out the seven armed individuals around me. Darwin Test time.\n\nTwo guardians drew their sidearms \u2013 a Glock-17 and a Glock-20 \u2013 while a third came at me with a 'wand'. He ran it up my sides, along my outstretched arms then over each leg inside and out. Nothing beeped. I had been truthful. A lesson I had learned working for the CIA was if you act like you were cooperating with your captors ~ we were definitely prisoners ~ they were more likely to be sloppy, like these assholes. \n\nWhat had they missed? My leg and arm braces. If I ended up in an unarmed fight, someone besides me was going to be very sorry.\n\n\"Only you,\" the mouthpiece motioned once they were done. The ladies were to wait.\n\n\"V?\" G worried.\n\n\"They don't look like a group who has made a suicide pact,\" I stroked her cheek. \"You'll be fine.\"\n\nOut we went.\n\n\"Suicide pact?\" the lead monkey chuckled. \"That's hilarious.\"\n\nHe had kindly only brought his two buddies along. Absent the ladies, my next moves were exceedingly easy. I drove an elbow into the Adam's apple of the chump behind me, relieved him of his firearm and leveled it at the other one's head before he could draw his piece. \n\nThere was silence broken only by the air handlers and the other guy struggling to breath. I motioned for the armed guardian to hand me his piece. \n\n\"You don't want to ...\" manager got out before I drove two fingers into his Solar Plexus, shutting him up. My weapon never wavered. The guy gave me his gun. \n\nI dropped out the magazine then worked out the chambered round. Having taken care of that, I did to same with the first firearm I'd stolen.\n\n\"Yeah \u2013 suicide pact. As in, 'I will kill all eight of you fucktards if any of those three ladies suffers so much as a scratch, or a bad dream',\" I explained. For some reason, despite me having rendered their firearms useless, the two guys didn't seem willing to rush me. I gave the talker a visibly-scarring backhand.\n\n\"We clear?\" I asked him after his head finished bouncing off the wall.\n\n\"I ... ah,\" he glanced to his two buddies. \"Ah ...\"\n\n\"Don't we have someone to see?\" I moved things along. He wanted to order the other two to jump me because he thought he was important. The guys would do what he directed out of fear of his authority and I'd kick all three of their asses. I wanted to avoid that, so I was rushing things along before he could act stupid.\n\n\"Pick up your damn guns,\" he snapped instead. He stormed off. I followed. Two more 'meat lockers' were around the corner, standing watch either side at the next door. They shot the manager an inquisitive look.\n\n\"He disarmed them,\" he groused. They looked at me. I shrugged. The door opened. Inside we went as I had no other real options since it had not been lost on me all the locks I had seen were magnetic and controlled from a remote source.\n\n[THE TEMPEST WITCH]\n\nIn I went. Right off the bat I realized this was not the Control Room, so I couldn't go all Special Ops on these ass hats and start killing them. That wouldn't save my companions. The room was dark, with plenty of low-lying chairs and sofas scattered about. \n\nIllumination was provided by four main wall monitors, each one providing an overhead view of a combat area surrounded by an elevated viewing area. The fans were in attendance. The room also had five, smaller, currently dark monitors. \n\nIn three of the four arenas, humans were fighting animals in what appeared to be a fight to the death \u2013 fucking awesome! (SARCASM) In the fourth, three rough individuals were engaged in a brawl. \n\nIn Man vs. Nature #1, a scrawny teenage girl was fighting three Dobermans with a tire iron. "
    ],
    "authorname": "FinalStand",
    "tags": [
        "violence",
        "espionage",
        "gangs",
        "assassin",
        "vice lords",
        "corpsman",
        "politics",
        "deceit"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ebb-tide-ch-04b"
}