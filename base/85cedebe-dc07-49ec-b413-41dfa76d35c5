{
    "title": "Pool Boy Ch. 36",
    "pages": [
        "So, the Bull Dogs got selected for a Bowl Game after all. Football practice is a big part of everyday again. \"Shit!\" We are heading toward finals, end of Semester and Christmas vacation. Alexis and I have had a couple trysts with Rachel, our fiftyish landlady and Alexis has had one with Mitch, Rachel's twenty-six year old daughter. Now Rachel and Mitch appear to setting us up for God-knows-what. Rachel called me to 'request a play-date' and Mitch called Alexis the same day to 'request a play-date'. The terminology, 'request a play-date', could just be a family grown turn of phrase and therefore just a coincidence. I think the two of them have some plans that they have worked out between them. To what end, I hadn't a clue.\n\nIt was our belief that our sexual escapades with Rachel were unknown to Mitch. Mitch knew her mother was having sex with someone after she found semen in her hair at the dinner table and she was certainly trying hard to figure out who the guy was. We believed that Mitch's tryst with Alexis and Jan was also a secret. \n\nIt was a mystery that I couldn't leave alone. Between classes, football practice, studying, eating, sleeping, making love to my lady whenever she wanted and whenever I wanted, there wasn't much time left in a day. Sometimes we multi-tasked by having sex while we studied, at the dining room table or when the mood struck in the middle of the night. Apparently I was working on 'the mystery' in my sleep.\n\nAs often happens when there is a problem to solve, I came up with at least a partial truth in my sleep. It was one of those \"Ah-ha\" moments when you're working subconsciously in a dream and then come wide awake. I smiled to myself and got out of bed, grabbed a pad of paper and a pen and wrote it all down in case this was all a dream and I wouldn't remember any of it in the morning. I climbed back into bed and kissed Alexis on the earlobe, which elicited a mumble of unintelligible words as she fell back to sleep.\n\nIt was pitch black when I woke in the morning a half hour before the alarm was to go off. I remembered it all and checked my notes to make sure. Alexis was already up and sitting at the breakfast nook table sipping her coffee, studying one of her textbooks when I came out with the notepad and a huge grin on my face. Alexis looked up at me and said, \"What canary have you swallowed?\" I sat down across from her and related what I had worked out in my sleep. \n\nMy theory was that since Rachel and Mitch used the same words, \"request a play-date\" they must have had some conversation between themselves about trying to include us in a sexual play-date. If only one of them had called, it wouldn't have been strange that she was just trying to line up another tryst between the two or three of us. Therefore, Rachel and Mitch must have an ongoing sexual relationship with each other but don't know the other is already having sex with us. Mitch probably figured she already had an in with Alexis, unknown to her mother, and could arrange a 'play-date' for her mother to 'crash' and join in, feigning some reluctance considering her daughter was involved. Then we would have no reason to think this wasn't their first time together.\n\nSince Rachel knew she already had an in and wasn't aware that Mitch did too, she decided to call me to make the same 'request for a play-date'. If Mitch was unsuccessful, which Rachel was sure she would be, they would have a back-up plan arranged by Rachel through me. Then Mitch would be the 'crasher' instead of the 'crashee' with the same results.\n\nWhen I finished laying this all out to Alexis she just shook her head and said, \"I worry about you sometimes, mister.\" I grinned at her. It was pretty convoluted but I was asking her to shoot holes in my theory, which she promptly did. \"If Rachel and Mitch are already having sex together, why not just invite us to join them. Mother and daughter sex isn't new to me?\"\n\nI replied, \"They aren't aware of your relationship with your mother and they probably feel secretive about theirs. It's not something you make public.\" I knew the whole theory was pretty weak but I was certain of one thing; Rachel and Mitch were having sex and probably had been for some time. The rest was speculation but right or wrong, I had a plan of my own and I summarized it for Alexis before getting dressed and hobbling out to early morning football practice. I was as lame and sore as at the beginning of practices last fall. \n\nI was at the cafeteria lunch table with Dean and some other non-football friends that had come to Alexis' Graduation party last summer. I didn't have a lot of free time so, with all of them sitting there, I called Rachel's cell phone and asked for her permission to have a party for our friends this coming Saturday to celebrate the end of the semester. Her response was what I had expected and it was that it was our apartment and we could have over whomever we wanted. I told her I thought it was only polite to ask and was about to hang up after thanking her. Before I pulled my phone off my ear, she said, \"What about our play-date?\"\n\nI didn't hesitate, \"Of course. I talked to Alexis and we are both so wrapped up in finals this week. We agreed that we could schedule something for next week before Christmas. Alexis will be going home a few days before but I have practices until the Christmas Eve day. So if you want both of us it would have to be before Tuesday or with just me it could be Tuesday or Wednesday.\"\n\nRachel was quiet for a moment and then said, \"Monday it is then. I'll come by after dinner, say seven thirty? Okay?\"\n\nI replied, \"Great; looking forward to it. I'll let Alexis know and we'll see you then. Oh, by the way; you and Mitch are invited to our party Saturday. I really hope you can make it. It should be a good time.\"\n\nRachel said, \"That sounds great. I'll clear my schedule. I don't usually party with students but it sounds like fun. Mitch would love to be around some young people for a change. She's been locked in the house for weeks.\" I hung up with a big grin on my face.\n\nDean and the others picked up on the grin and Dean said, \"What are you planning besides a party?\" The others were all ears waiting for my response.\n\nI said, \"Dean, ol' buddy. This party is going to be better than Alexis' Graduation Party.\" They all broke into huge grins. There was no doubt they remembered that party fondly. I wouldn't have been surprised to find out that most of them hadn't been laid since. I told them the schedule and reminded them that they would have to call to get through the gate. I called Alexis and told her the party for Saturday was a go and she was to get her invitations out to all her friends. We decided to include Mindy and Morgan but couldn't agree on inviting April. Alexis recommended that I invite Noah to stay for the night. I felt bad that I hadn't thought of it first. I'd call him right away. I told her Rachel and Mitch would be there too. Then she understood my plan. \n\nAlexis said, \"I never knew you had this devious side to you before. I think I like it.\" She laughed. I listened. I love her laugh.\n\nI said, \"When this party breaks out into a full-blown orgy, which we'll make sure it does, Rachel and Mitch will be in the middle of it and we'll figure out how to get them together with us and they won't ever have to reveal their on-going sexual relationship. Good for all, don't you think?\"\n\nAlexis said, \"You're a genius.\" I laughed and said, \"I love you, Babe.\" She smacked a kiss into her phone and hung up. I smiled back at the guys around the table. They were all grinning and high-fiving each other. I called Noah and asked him if he remembered Alexis' Graduation Party? He started laughing and said that he'd never forget that night. I told him about our Party on Saturday and invited him to come and stay overnight. He wasn't crazy about the three and a half hour drive but he said he wouldn't miss it.\n\nPractice that afternoon was brutal. Coach was relentless. He had to knock off early because we could hardly get off the ground. We were just lying there in the grass spread-eagled gasping for oxygen. Coach had a sneaky little smile on his face like he was thinking, 'mission accomplished' before bellowing, \"All right you bunch of pussies. Hit the showers. I expect better of you in the morning.\" We all groaned in unison and screwed ourselves up to our feet and trudged toward the locker room. I waited for Mindy to come out to her car and I invited her and Morgan to our party. She was excited and said she'd pass on the invitation to Morgan who had been ostracized from her friends by Coach Hannah's wrath. Mindy was sure Morgan would be ecstatic.\n\nI basically sat in a coma at the dinner table that night. I barely had the energy to lift my fork to my mouth. Alexis was amused by the torture I put myself through for a game. She didn't and never would understand the nature of competition. After dinner, we settled into our separate study rooms. Finals were scheduled for the next two days. Alexis was shooting for straight A's. I had a shot at the Dean's List but I had to nail a couple of the finals to make it. I hadn't accomplished that feat during my freshman year. I wondered if regular sex made the difference.\n\nI had been sitting at my desk for an hour pouring over text books when Alexis pushed open my door and walked up to the side of my desk. She had that sultry look on her face that I had become so accustomed to. She looked down at me and then, without a word, dropped to her knees and pushed herself under my desk. Her face popped up between my thighs with a huge grin on her face. She pulled my zipper down and reached in to pull my instantly hard cock out of my boxer shorts. \n\nAlexis immediately pushed her lips down on my glans and kissed it with a resounding smack when she pulled back. She jerked me off with both hands as she stared up at me. I was groaning hard and she loved the reaction. When I looked back down at her gorgeous face she was stretching her lips over the glans as she maintained eye contact with me. Even with her lips full of cock, she smiled up at me. One hand dropped off my shaft but she continued to jerk me off with the other one as her lips pushed down the shaft displacing the remaining hand as her nose pushed into my pubic hair. My shaft was in her throat but she could still flick her tongue out to tickle my balls. The pubic hair on her nose and tongue tickled her and she giggled around my shaft.\n\nMy head fell back on my shoulders as I groaned and humped up my hips. Alexis was doing her throat-job thing and I knew I couldn't hold out for long. She pulled back off my cock and said, \"Cum for me Baby. I love you,\" and she went right back down to the bottom again.\n\nIn less than a minute I mumbled, \"Oh fuck Babe. Here it comes.\" My shoulders and back slammed back against the chair as my hips surged forward. Alexis knew what was coming and she made her adjustments to handle it. She pulled back to the ridge and locked her lips as her tongue lashed the nerve bundle. She started swallowing with the first monster shot of cum. It must have been more than usual because tears burst from Alexis' eyes as they went wide and her cheeks puffed out. She gulped hard and was barely ready for the next shot. After that, she was on top of it and didn't have any more trouble.\n\nWhen I was spent, Alexis pulled her lips off my softening cock and gulped again. She pushed cum along her lower lip and into her mouth and slurped up escaped cum and saliva. She sucked my cock back onto her lips and sank her mouth back down the length of my shaft lashing it with her tongue until she was satisfied it was clean. She pulled off with a smack and pushed my cock back in my pants and zipped me up. She put her chin on my crotch and looked up at me. She smiled and said, \"Fuck Baby. That was a load. I propose an experiment for you to abstain for three weeks to see if you can fill up a water glass after.\" She giggled at my reaction.\n\nI stared down at her face in my lap and said, \"No way Babe. Three weeks? I'd fucking explode.\" She laughed and pulled herself out from under the desk and stood up. She leaned in and kissed me and snaked her tongue into my mouth. I could taste my cum on her tongue.\n\nShe pulled back and kissed me on the nose and then turned and walked back to the door saying, \"Get back to the books Engineering-Boy.\" She turned back to me and blew me an air-kiss and closed the door behind her. 'Wow. That took the edge off,'' I thought and tried to get back to where I left off. After another hour, I was getting burned out. I needed a distraction and I knew just where to get one. I went to the kitchen and fixed a 'crackers n' cheese' snack and carried the plate into Alexis' study room. She wasn't there. I continued down the hall and found her sitting on the bed propped up by a pile of pillows with her knees up reading a textbook. \n\nShe looked up and saw what I was carrying and grinned, \"Oh my God. That's perfect. I was just thinking I needed something but I didn't know what I wanted. Now I do.\" She turned her book upside down and placed it on the bedspread. I put the plate beside her and she dug in. I lay on the bed just below her feet and reached up between her thighs and lightly ran my fingertips over her panties. She mumbled around the cracker crumbs and cheese, \"I shhheeee haww ett issshhh.\" She smiled with a mouth full of food, swallowed and tried again, \"I see how it is.\" I grinned at her.\n\n\"Quid pro quo, babe,\" I said. I pulled her panties to the side exposing her hairless vagina. I sucked my finger into my mouth and pulled it back out. I dragged my saliva-slick finger over her clitoris and Alexis's hips pulsed forward in an involuntary motion. She groaned and then grinned at me.\n\n\"You're teasing me and I like it,\" she said. She reached down with both hands and pulled back her panties even further and spread her outer labia exposing her pink inner lips. Her vagina was beginning to flood with her lubrication and her clitoris became erect pushing out from its protective hood. I pushed my index finger into her pussy and she dragged her index finger over her clitoris. She moaned out, \"Make me cum Baby. I need it.\" I looked up at her face and she had that look again. She also had cracker crumbs on her lips which she discovered when she pulled her finger out of her pussy and pushed it into her mouth. She licked the crumbs off and then lashed her finger clean of her own lubrication before touching her clitoris again. \n\nI teased her with my finger and watched the litany of contortions wash over her face. She had closed her eyes and began breathing raggedly. Then I made my move. I scooched in close to her and pushed my face between her thighs. I watched her face as I pushed my lips into place. She knew what was coming and she didn't need to look. I used my broad tongue to lap her vagina from her anus upward. She sucked air into her lungs as I made my way. She held her breath until I touched her clitoris and her breath exploded from her. She moaned, \"Oh Jesus, Baby.\" \n\nI dragged my speared tongue back down through her labia and pushed into her pussy. I slowly pumped my tongue in and out of her and she was in a continuous groan and she moaned, \"I can feel it coming. Oh my gawwwddddd.\" With that, I started drilling her pussy with my tongue. She launched into her orgasm as her pussy forced my tongue out with her spasms. I kept pushing back in and she pushed it back out again. Her clenches were hard and forceful and she kept going for nearly two minutes before she started to settle down. Her pussy randomly pulsed for another couple of minutes. I lapped up her juice as it was pushed out by her clenching pussy. I had watched her face through the whole thing and when she finally opened her eyes and looked at me, my chin was resting lightly on her mons pubis grinning up at her. She slammed her thighs on my face and giggled as I tried to extract myself. She opened her legs and motioned for me to come up to her. I crawled up between her thighs and she kissed me passionately and then said, \"I love you.\"\n\nI pulled back from between her legs and moved up beside her. She reached over and picked up her textbook and closed it and set it on the nightstand. She said, \"I'm too wasted to study. I think a good night's sleep is in order. I was catching myself reading the same paragraph over and over again.\" I agreed and we did our bathroom rituals and crawled under the sheets. I was on my back with Alexis curled up on her side tucked into my body. Her head rested on my chest and I kissed her on the top of the head as she licked my nipple. I was asleep in a minute.\n\nI woke at 4:22 AM to some disturbance. I came awake slowly and noticed that nothing was resting on my body, not even a sheet. I felt a pressure on either side of my waist. It was pitch black but I could just make out a form above me. My usual morning woody had arrived early and I felt a pressure on the tip which became a pressure on my shaft as Alexis let her body descend down over it. She had her feet by my waist and she was clutching the headboard. She was sliding her pussy down my shaft and we both groaned hard as she progressed. I put my hands on her slim waist to help her maneuver. She dropped all the way down until she was sitting on my balls and just stayed there for a few moments. She muttered, \"Jesus. He's huge this morning.\" She used her grip on the headboard to pull herself up my shaft and then bounced several times on the glans. I could hear her ragged breathing but I couldn't see well enough to see her facial contortions.\n\nI didn't move a muscle and Alexis fucked me for several minutes before she softly groaned, \"Oh Fuck, Baby. I'm gonna cum. Ohhhh gggawwwdddd. Yesssss.\" She maintained her pace and as her pussy began clenching my cock I groaned, \"I'm with you. Yunnnggggg,\" as I clenched and released my load into her sex. I didn't want to interrupt her but I couldn't help but drive my hips up into her and pull her hips down with my first salvo. I released her hips as subsequent shots burst into her. She felt every one and groaned hard as they arrived.\n\nI was done well before her and she sat on my crotch with my cock deep in her pussy as she gyrated her hips and ground her sex on mine. She continued to moan and groan until her orgasm washed through her. She took her hands off the headboard and dropped them to my chest and then reached forward in search of my face. She caressed my cheeks once she found me in the dark. She leaned forward to kiss me and her hips came up off my crotch. My softening cock slid out of her soaking wet pussy and flopped down on my stomach.\n\nI wrapped my arms around her back and pulled her down so her tits were pressed into my chest. I kissed out into the dark and found her forehead. She giggled at my miss. She used my miss to adjust her trajectory and kissed me full on the lips. She was bent like a pretzel so she pushed her feet down my legs and laid her body on top of mine. I grabbed her ass cheeks and pinched them and pulled her down hard on my soft cock. She giggled and rested her head back on my upper chest and shoulder. We fell back to sleep just like that.\n\nWhen the alarm went off a short time later, I was startled. It was still pitch black but I knew what the weight on top of me was. I smiled to myself and pinched Alexis' ass again. She shook her hips and groaned, \"I'm still tired. I'm going to sleep in for another hour. Go do your practice. I'll be dreaming of you.\" She rolled off toward her side of the bed and I pushed myself to my feet. There was no point in showering. I'd have to take one after practice anyway. To avoid smelling of sex, I washed my cock in the sink. I dressed and made some peanut butter toast.\n\nPractice was a grind but at least I wasn't sore and lame anymore. I had taken one final this morning and I had one this afternoon and then two tomorrow. I was in the cafeteria when Alexis came in. She had a huge smile on her face so I figured she was happy with her two finals this morning. She has one right after lunch and one tomorrow. We used our time to eat and make plans for the party. Rachel had called her to tell her that she would assign one of her staff to the gate. That would help a lot. I asked Chuck, who is one of my friends that was at least twenty-one, to buy a couple kegs and accessories. I gave him a list of booze and gave him a few hundred bucks. Chase was going to bring a Karaoke machine. It wouldn't be my thing but someone might get a kick out of it, especially after the alcohol is flowing.",
        "Alexis went through her list of girls who had RSVP'd. Other than Rachel and Mitch; Jan, Josie, Nina, Yu-Gin, Mindy and Morgan were in. I went through the guys who said they were coming. I don't think a one of them knew what RSVP meant. Jackson, Chase, Dean and Chuck. Noah would arrive Saturday afternoon and stay overnight. That made six guys and nine girls. To my knowledge, none of the guys were bi-sexual. All nine of the women/girls were as ready to go girl on girl as straight sex. I was sure it would all work out. I didn't have many options anyway.\n\nRachel said she would contact the caterer she used all the time. I was okay with that but the caterer staff had to be gone before the party started. I didn't want loose lips causing Rachel any embarrassment. She offered to pay for it but I didn't think that would be right. I wanted to keep her name away from this as much as possible. Besides, since Las Vegas, we didn't have money issues and our rent for the 'Palace' was zero at Rachel's insistence. So, everything was in motion.\n\nThe next two days was a grind and when it was over Friday night we decided that we really needed to celebrate. The dorms would be nuts tonight so we decided to go to Josie and Nina's. Who knew where the booze ever came from but there was always plenty. \n\nThe dorm was a mine-field of drunken bodies staggering around in various level of undress. Guys were everywhere trying to take advantage of the situation. One drunken guy burst out of one of the dorm rooms swinging a bra over his head and ran right into Alexis and knocked her back against the wall. I grabbed for her but the guy kept stumbling into her and they both went down. Alexis was underneath the guy and when he saw who she was, he started chanting 'SH5, SH5,\" Then he bent down and kissed her on the lips. She tried to knee him in the balls but his legs were between hers. She tried to pull away from him. I reached down and grabbed the guy by the shirt collar and lifted him straight up in the air and held him facing against the wall with his feet a foot above the floor. Even in his state of inebriation he recognized he was in trouble. A crowd started to collect and one of the girls helped Alexis off the floor. He dropped the bra and started flailing his arms and then he went still and said, \"Uncle. Just let me down.\"\n\nTwo doors down, Nina opened the door to hers and Josie's room to see what was going on. She was wearing only gym shorts and a bra that had no chance of containing her huge tits. She came down the hall picking her way through the crowd and said to me, \"Can you drop that ass-hole outside. He's been a drunken pain in the ass all afternoon.\" She slapped the guy across the face and said, \"Hey ass-hole, I want my bra back too.\"\n\nI smiled at Nina and lowered the guy until his feet barely hit the floor and then we went down the hall together to the elevator. He was screaming bloody murder and trying to get out of my grip. When I got back up to Nina's floor, the crowd had dispersed and Nina's door was closed. I figured Alexis must have gone into Josie's and Nina's room so I knocked on the door. The door inched open and Nina's face appeared in the gap. She looked back into the room and said something to someone and then opened the door several inches and reached out and grabbed my shirt and yanked me inside. I was shocked at her strength. I looked at Nina and said, \"What the Fuck?\" She looked up at me and put her index finger to her lips and then jabbed her thumb back behind her. \n\nI looked over her head to see what she was motioning toward. There in the far corner of the room on Josie's bed was Dean sprawled on his back. Josie was riding his cock reverse-cowgirl. The only illumination in the room was a desk lamp by Nina's bed. Alexis, Jan and Yu-Gin sat on the edge of the bed watching the show. Alexis motioned for me to come over and sit down. I was going to sit on the end of the bed next to Alexis but she moved down to the end of the bed leaving a space for me between her and Jan. Nina sat in her desk chair and whispered, \"This is their third time today. I'm so horny; I'm going to explode any second.\" She spread her legs to show us all that the crotch of her gym shorts was soaking wet.\n\nAlexis reached down and unzipped my pants. Jan was watching Alexis' every move and she reached in and pulled out my granite hard cock through the gap in my boxer shorts. Alexis smiled at Jan and they both shared jerking off my cock. Yu-Gin was leaning forward so she could see what Jan and Alexis were doing. Alexis and Jan got into a rhythm with Alexis' hand near my balls and Jan's hand at the head. They watched Josie riding Dean's cock as they stroked mine.\n\nJosie had planted her feet at Dean's knees. Her arms were locked behind her with her hands on Dean's biceps. She held her hips above Dean's as he was piston-fucking her. Her head had fallen back as it lolled from side to side in a constant groan. She was mumbling out indecipherable word and whimpering at the same time.\n\nDean was wagging his head from side to side too as his facial muscles scrunched up into a mask that appeared to be one of pain. I smiled to myself as I knew that Dean was in no pain at all. He had his hands under Josie's butt-cheeks helping to hold her above him.\n\nI looked over at Nina sitting at her desk. She had one leg on the desktop and one hand shoved up the leg of her shorts furiously working her pussy. The other hand had pulled one of her monster boobs out of her bra and she was holding it as high as she could as she sucked and licked on the erect nipple. Her gaze was locked onto Dean's cock sliding in and out of Josie's pussy and she hadn't noticed me watching her.\n\nI glanced at Jan and then Alexis. They were both locked on to Dean's cock too. Jan noticed my glance at her and she smiled at me as she slid off the bed to her knees and maneuvered her body between my knees. Alexis watched her go. They both continued jerking on my cock. Jan bent forward and kissed my glans before guiding her lips over the knob and slowly down my shaft displacing her own hand and then Alexis'.\n\nAlexis watched Jan as my cock disappeared into her face. Her lips were stretched into thin white lines. Jan didn't stop until her nose pushed into my pubic hair. She stayed there for a moment and then pulled back up and in the next few seconds she was giving one hell of blow-job. Alexis looked up from Jan's face to mine and grinned. \"She's pretty good isn't she?\" I just nodded and groaned.\n\nI thought Alexis might join Jan and share my cock, or get into a sixty-nine position with Nina or Yu-Gin. She had other ideas though. She pushed herself to her feet and crossed the room and crawled, hands and knees, onto Josie's bed. Josie saw her coming and recognized the lascivious look on Alexis' face. She grinned and nodded at Alexis, who moved her face in close to the action and flicked her tongue on Josie's red and swollen clitoris. Josie let out a scream from the contact and Alexis pulled back and grinned up at Josie. She pushed her face back in again and this time she lashed her tongue along Dean's cock as he pulled out and again as he pushed back in. Dean let out a groan. Josie was watching intently and smiled constantly as Alexis' lips pressed down on either side of Dean's cock and he increased his pace causing Josie's head to fall back with open mouth. Dean was now moaning. Alexis pulled back and then dipped her tongue back onto Josie's clitoris and she was moaning too. Alexis moved her hand under Dean's scrotum and began fingering his balls and he yelled out, \"OH FUCK. I DON'T KNOW WHO THAT IS BUT FUCK, I'M GONNA CUMMMM.\"\n\nJosie suddenly screamed out, \"OH MY GAWWDDD. ME TOO.\" Alexis maneuvered her position so she could place her palm on Dean's cock as it drilled in and out of Josie's pussy while still manipulating his balls and she planted her lips on Josie's clitoris and sucked it between her lips. Alexis loves to handle a scrotum when it starts pulling up, getting ready to cum.\n\nI had been watching Alexis driving Josie and Dean crazy as Jan was driving me crazy. She was mixing up her blow-job techniques from short quick strokes to long deep-throat strokes to blow-job, hand-job combinations. She used one hand, two hands, counter-rotating hands and as I was getting close, she started just squeezing my cock in both hands as she lashed her tongue around the ridge and then flicked her tongue on the 'nerve bundle' until every muscle in my body seized as I humped up and exploded into a spastic release. \n\nJan didn't have enough experience with my huge cumloads and this was bigger than most. She prepared for the first salvo but it overwhelmed her immediately. She gagged and her eyes went wide as tears burst out onto her cheeks. I was watching Jan intently as a long guttural groan escaped from my lungs. Jan was swallowing the gooey mixture but she wasn't swallowing fast enough and she was forced to pull off. She was coughing hard as the next two pearly white ribbons of cum splattered across her face.\n\nNina's attention was pulled to Jan's coughing and gagging and she moved quickly out of her chair and down beside Jan. She was trying to time the next shot as she tried to get my cock into her mouth with getting a face full of cum. She was partially successful. Jan was still coughing as Nina took my cock in her mouth and locked her lips around the ridge. She pumped my shaft with one hand and cradled my balls with the other. Nina liked the feel of balls moving during an ejaculation too. Nina took two shots before Jan more or less pushed Nina aside and pushed her mouth back on again. Nina wasn't upset by Jan's actions because she already had as much as she could handle. She sat beside Jan trying to swallow what she had collected.\n\nI must have fired seven or eight long powerful shots of cum followed by two or three short dribbles before I was done. Alexis and Josie had watched it all and Josie said, \"Holy Shit that was a load.\" Dean just lay there like he was in a coma. Even though I had cum a ton, my cock was still hard and Jan continued to jerk me off and then Nina joined her. They were looking at each other and giggling. Jan said to Nina, \"I don't think this cock ever goes soft. I'll give you honors.\"\n\nNina grinned at Jan and stood up and peeled her shorts off. Her panties came with them. She still had one boob hanging out of her bra as Jan got behind her and released the hooks. Nina did her patented move of bouncing her tits with her hands in a counter up and down motion. Jan sat back on the vinyl floor and watched. Alexis and Josie were watching too. \n\nNina pushed her body in close between my thighs and guided my cock between her tits. She held my cock between her globes with her fingers and used her palms to slam her tits tight around it. Only the very tip stuck up into her cleavage. She started driving her tits up and down my shaft. She was trying to look down to see my cock poke out on her down stroke. After cumming only minutes earlier, there was little chance that Nina was going to get me off this way but I loved the sensation. It turns out she had other plans for getting me off anyway so after five minutes of tit-fucking, she relaxed her grip on her tits and let them fall off my cock. She smiled up at me and kissed the tip.\n\nNina got up and pulled me behind her toward Josie's bed. Nina crawled onto the bed on her hands and knees with her face in Josie's crotch. Alexis got off the bed to make room. Nina's feet hung off the bottom of the bed and she waggled her ample ass at me giving a clear invitation. I move up behind her and guided my stiff cock to her pussy. She was on her elbows try to watch between her tits but they blocked any chance of a view. She groaned hard as I penetrated to the ridge and stopped. She moaned, \"Jesus Christ. Fattest cock ever,\" as she pulled slightly forward to ease the pain. She relaxed and pushed back signaling me to proceed. I slowly pushed my entire cock into her and she groaned hard all the way in. At the bottom, I stopped moving and let her adjust. When she signaled again, I started fucking her at a slow steady pace and Nina began whimpering.\n\nNina lifted her torso on her outstretched arms and looked up at Josie. The head of Dean's cock was still buried in Josie's pussy and she was lazily dragging her fingernails up and down the length of it as she smiled down at Nina. Josie shifted her gaze up to my face and grinned as she said, \"Fuck her senseless.\" I smiled and nodded.\n\nNina's head was bobbing forward and back as I pushed my cock in and pulled it out. My momentum was pushing her closer to Josie's crotch. Nina was on her elbows with her face only inches from Dean's balls and she reached forward and pulled Dean's cock from Josie's pussy and shoved her lips over it. Dean let out a groan, \"Oh Fuck Nina. God yes.\"\n\nNina was blowing Dean's cock in full penetrating strokes. She couldn't deep-throat me but she could handle all of Dean's cock. Josie pushed herself slightly lower so that Nina's nose pushed onto her clitoris on each cycle and all of a sudden Josie was moaning too. I had a perfect view of it all. My fingers had hooked into Nina's hipbones and I was using the leverage to ramp up my pace. After several minutes Nina had to pull off Dean's cock and whimper, \"Oh Jesus. Oh Jesus. HERE IT COMES,\" as she started slamming her ass back at me indicating she wanted more cock. I gave her all I had and picked up the pace and she started screaming. \n\nJosie picked up Dean's cock after Nina pulled off and started jerking on it as she watched Nina spasm into her orgasm. She smiled at me as she fisted Dean's cock. Nina looked over her shoulder with a pleading look on her face for me to cum with her. I tried but I wasn't able to. She turned back and looked at Dean's cock in Josie's hand and apparently decided someone was going to cum in her. \n\nWith Nina's pussy clenching on my cock, she grabbed Dean's out of Josie's hand and pushed the head into her mouth. She gobbled it down, \"MMMMUUMMPPPHHH,\" and Dean let out a deep groan. Josie looked a little miffed at Nina but she let it go. With each long penetration of my cock, Nina emitted an \"UUUMMPPHHH\". She opened her mouth wide and began rapidly bobbing her head on Dean's cock as \"AAAWWWKKK AAAWWWKK,\" came from her mouth.\n\nNina's pussy stopped clenching my cock and she concentrated on extracting cum from Dean's. She was working him hard and finally she got what she wanted. Dean groaned, \"OH FUCK NINA. HERE IT COMES.\" Instead of preparing for Dean's load, she increased her pace even more. She had no intention of taking his load in her mouth. She slid forward off my cock and sat up just as she pulled her lips from Dean's cock at the last second and aimed it at her tits.\n\nDean spewed cum in several spurts on both of Nina's tits. Nina had a look on her face like she'd just climbed the last ten feet of Mount Everest. Dean shot three ropes on her tits and then Nina decided that one or two in the mouth would be okay so she bent forward and shoved his glans into her mouth. She handled what he had left and then pulled back and showed her open mouth to Josie and then swallowed with a gulp. \n\nMy cock was still bobbing at an up angle and Jan and Alexis double-teamed me again. Alexis took my hand and led me to Nina's bed and laid me down on my back and started peeling her clothes off. Jan was sucking on my cock and undressing at the same time. She wasn't sure what Alexis was going to do but she wanted my cock in her and she didn't hesitate. Alexis was content to climb up and sit on my upper chest and then drag her pussy along my face. She was sopping wet when I broad-tongued her pussy from anus to clitoris. Her hips fired involuntarily as she braced herself with a hand against the side wall. When Jan maneuvered herself into position and pushed her pussy down over my glans and kept going, I thrust my hips up and let out a low pitched guttural groan. Jan let out a scream as she felt the fattest part of my cock and she stopped instantly. She moaned, \"Oh my God. I forgot about that. Holy shit.\" Alexis giggled at Jan's dilemma.\n\nI held on to Alexis' hips as I tongue-fucked her. Jan held on to Alexis' shoulders to help her gyrate her hips and grind her pussy on my cock. She didn't last very long and she was groaning her way through a huge orgasm within five minutes. I was almost there when she screamed out that she was cumming. I started driving my cock up into her as hard as I could and still maintain contact with Alexis' pussy. That got Jan going even more and she screamed out, \"You're killing me. Jesus Christ.\" She could have got off my cock but she didn't.\n\nI was almost there when Alexis burst into her orgasm. She was grinding her pussy all around my face. I furiously sucked up her juices as she grabbed the sides of my head and went nuts driving her hips forward and back. She distracted me for a moment and I lost my orgasm. I thought it would only take a moment to get it back but Jan pulled off my cock and collapsed down on the bed beside me. \n\nMy cock was bobbing in the air above my stomach. God damn I wanted to get off. I was so close. Yu-Gin recognized the opportunity. Still fully clothed, she yanked down her panties and positioned herself over my cock facing my feet. She reached up between her legs and guided my cock into her pussy. She had watched Jan make the mistake of taking my whole cock without an adjustment. She knew from first-hand experience too. I reached past Alexis and grabbed Yu-Gin's hips and pulled her down. She wasn't ready yet and she let out a painful scream. They all had empathy for Yu-Gin but none had any sympathy for her. I could feel my orgasm building again and I made no attempt to hold off for Yu-Gin's sake. I wanted it. \n\nYu-Gin had leaned forward and placed her hands on my knees. Her knees were at my lower thighs as she started rocking her hips and grinding her pussy on my cock at a feverish pace. She knew as soon as she settled at the bottom of my shaft that I was close to cumming. She figured she couldn't get off in time before I did so she shoved her fingers into her crotch and furiously began tweaking her clitoris. \n\nMy Tsunami of an orgasm was building higher and higher. My muscles tightened and my throat seized as I moaned constantly as my head thrashed from side to side and my hips humped up and down. Then I went completely rigid for a few moments, lifting my hips and Yu-Gin's body with them and in unison I groaned out every ounce of air from my lungs and my muscles exploded in release. Yu-Gin let out a scream just as my first surge of cum pulsed into her. I was totally consumed by my own orgasm and I wasn't concerned with whether or not Yu-Gin got off too.\n\nI groaned my way through at least eight long powerful bursts of cum before I was reduced to minor pulses which dribbled out small amounts cum. Yu-Gin groaned through every one including the minor ones. When I was done, Yu-Gin's pussy was still clenching on my spent cock. I guess she had an orgasm too. I was happy about that. I hated leaving my partner high and dry. When she was done, she spun around sideways on my cock and stood up. Cum came drooling down her legs the second her pussy pulled off. She reached between her legs to catch it before it dropped to the floor.\n\nAlexis swiveled her body off the bed and pushed herself up between Yu-Gin's legs and lapped her pussy clean of cum. She scooped up escaped globs of cum on Yu-Gin's thighs and shoved her fingers into her mouth. Yu-Gin was pulsing her hips in response to Alexis' tongue in her pussy and I wasn't surprised at all to see Yu-Gin have another small orgasm. I held Yu-Gin in place so she wouldn't fall. Her legs were trembling and her knees kept collapsing. She screamed out, \"Fuck Alexis, you're making me cum again. Fuck.\" When her trembling stopped, I helped her over to the bed and sat her down. Alexis moved with us and stuffed my softening cock into her mouth to suck and lick the sticky, gooey cum and Yu-Gin's juices from my shaft.",
        "Alexis and I dressed and said our good-nights. They were all in various states of undress and they didn't look like they were going anywhere for a while. We had a busy day preparing for tomorrow night. We drove across town to the Bar-B-Q joint that Rachel had taken us to. The food was as delicious as the first time. \n\nWe were still coming down from the stress of the finals and we immediately retired to the bedroom. With the lights out we talked about our plans for Rachel and Mitch when the inevitable orgy started. I spooned in behind Alexis and cupped one of her tits in my top hand. I couldn't resist tweaking her nipple and she giggled as she pushed my hand away. I rested my hand on the gentle curve of her hip and slowly moved it back up her body to her tit again. I didn't do anything except hold it. We both fell asleep like that.\n\nThe alarm startled me awake and Alexis groaned and rolled over and buried her head under her pillow. Jesus, I'd be glad when the Bowl game was over and I could have my life back. I grabbed my clothes and staggered into the kitchen. I made a cup of coffee and pulled my clothes on. The only illumination was a nightlight beside the sink. I did my bathroom stuff and kissed Alexis. She pursed her lips but didn't wake up.\n\nWhen I got home a few hours later, Alexis was still in bed puffing away in deep sleep. She was on her back with one arm across her face. The bedclothes had been pushed down below her breasts and my cock was responding as usual to her naked body. I watched her irregular breathing for a couple minutes before I toed off my shoes, pulled my shirt over my head and pulled my sweatpants to the floor. After showering at the field house I had gone commando like usual.\n\nI stood there at the bottom of the bed with my burgeoning cock in hand. I jacked on it until it was at full size. I lifted the bedcovers hanging over the bottom of the bed and crawled in under. Alexis's legs were spread wide and I slowly moved up between them without touching her. I exhaled on her sex a couple times. I bent down a little closer and pushed the tip of my tongue out toward her pussy. I very gently touched her outer labia and got no response. I slowly ran the tip of my tongue over her pussy lips. This elicited a soft moan but didn't wake up. I pulled back when she pushed her hand down to rest on her mon pubis and her fingers dipped inside her inner labia and ran them around the perimeter. I watched for a moment to see what she was going to do next. \n\nAlexis settled back into her puffing noises and pulled her fingers back out of her sex. I pushed forward again and lightly licked my tongue along her outer labia and touched her clitoris. She moaned again and flexed her hips upward and then dropped them again. I touched her clitoris again and her hips repeated the same action. She stopped puffing and I thought she was about to come awake. With a feather touch, I dragged my tongue between her labia and pushed in gently until I could feel the folds of her inner labia. \n\nThe covers lifted and she peered down at me with a grin on her face. She said, \"Now that's a great way to wake in the morning. I was having the most delicious dream. I didn't want to wake up. I guess I know what was causing the dream now.\" I smiled up at her and pushed my tongue into her pussy. She groaned loudly. She lifted her hips wanting more. I drilled my tongue deep in her sex and fucked her with it at a furious pace. I slowed the pace and quickened the pace and pulled out and flicked on her clitoris and then went low to drill my tongue into her anus. She was screaming by the time she exploded into her orgasm. Her legs were thrashing everywhere as her hands locked into my hair and pulled me into her sex. Her teeth were clenched tight and she seethed air in and out. I sucked her outer labia between my lips and hung on as she thrashed around. \n\nAlexis stopped thrashing and settled down. Her breathing continued to be very ragged. She finally released my hair and I released her pussy lips. I pushed my body up along hers and took a breath of cool air and kissed her hard on the lips. She kissed back and threw her arms around my neck and pulled her face up into my neck and said, \"Jesus Christ. That was amazing. Save me one of those for tonight. Okay?\"\n\nI pulled back and smiled as I nodded. We jumped in the shower, which as usual, deteriorated into another fuck-fest while sitting on the marble floor under the stream of multiple shower heads. We dried each other and made ready for the day. We expected deliveries to start soon.\n\nNoah showed up around noon and we visited until things started happening. The Caterer showed up earlier than we expected but she seemed to know what she was doing so we left her to it. Chuck brought the booze and two kegs along with trash barrels and a ton of ice. I thought the better course of action was to set up the kegs in the garage and let people navigate the stairs. Alexis thought that was dumb so the kitchen was the only other logical place. Chuck, Noah and I lugged the kegs up the stairs and set them up in the trash-cans and ice in the middle of the kitchen floor. The bottles of alcohol went on the breakfast nook table along with plastic cups and other stuff. Soda cans were piled up in the refrigerator. Chase showed up with his Karaoke machine and he set it up against a wall in the Living Room. He tested it and we found out he can sing. Who knew?\n\nChase and Chuck left and Noah disappeared to his guest room. Alexis and I sat down on the sofa and surveyed the chaos as a squad of Caterers scurried everywhere. They all just appeared at the same time. I wondered if they came on a bus or something. They were mostly young, in their mid-twenties. I became aware of one young guy who kept staring at Alexis. Not that that was so unusual. It was just something about him. Alexis noticed him too and she leaned over to me and said, \"That guy over there, staring at me, looks familiar some-how. He gives me the creeps.\" I hadn't picked up on the 'looking familiar' thing, but he sure was creepy. \n\nI pulled the Head Caterer aside and asked about the 'creepy guy'. She told me that he was new. They had just hired him this past week. This was his first gig. That information didn't make me feel very good but I let it go. I kept one eye on him though.\n\nAlexis got up and said she was going to start getting ready. Her getting ready is a couple hour ordeal. Mine is fifteen minutes. I watched her go and noticed 'creepy-guy' watch her go too. When she was gone down the hallway, he looked back at me and smiled. One of his front teeth was broken and left a black gap. That smile raised the hairs on the back of my neck. 'Where do I know this guy from?' I thought. He wasn't working on anything of importance; he was just there. I figured that he, being new could account for that. \n\nRachel and Mitch showed up to see if they could help. I couldn't see how. Rachel had a ton of experience with setting up parties so she just inserted herself in the process and she went straight for the Head Caterer. They hugged and kissed. They were obviously old acquaintances. Mitch and I stood around watching people scurrying everywhere. I noticed that Mitch went rigid. She was looking past me at 'creepy-guy'. Her face morphed from a grin into look of fear. I said, \"Do you know that guy?\"\n\nShe hesitated for a moment as she tried to search her memory banks. Her facial muscles twitched like she wanted to say yes but her answer was, \"No. I don't think so. There's something that sparks a memory cell; and not in a good way either.\" I nodded my agreement. Mitch didn't want to look at him anymore so we went to the kitchen and leaned against the counter and chatted. I hadn't seen Mitch for a while. It was good to see her out of her wheelchair and with no cast on her leg. Her face was nearly healed and I thought to myself, 'She is a beautiful woman.'\n\nI thought back to that night in the parking lot. She had been beaten nearly to death and if Alexis and I hadn't interceded, she probably wouldn't be here with us today. I mentally compared the beauty before me now to the broken grotesque face then. I remembered her screaming as the two guys held her down on the hood of the car while their buddy prepared to rape her. My memory flashed to the guy pushing his cock back in his pants and stepping up to me. His buddies were ten feet away and smiling as they were sure I was going to regret interrupting them. I remembered thinking the same thing. I formed visions in my mind of that night: The leader strutting toward me. His two buddies grinning as they held Mitch down on her back. The closest guy was fishing in his pants for his knife. The guy on the far side was just grinning. He had a black gap in his grin from a broken front tooth.\n\nI shot off the counter and startled Mitch. She looked at me as I was heading full steam into the living room. Creepy-guy wasn't there. I did a three-sixty and shot down the hallway. My heart was about to explode. Mitch was running behind me. The whole world went into slow-motion. Like in those horror movies, the hallway seemed to get longer and longer the faster I tried to get to the end. Noah, alerted by Mitch yelling \"What's wrong\", threw open his door as I ran by. He was saying something but the blood pounding in my ears rendered him mute. He followed behind Mitch.\n\nI burst into the master bedroom and my worst fears were confirmed. Alexis was on the bed on her back. She wore only her bra and panties and 'creepy-guy' was on top of her between her legs trying to get his zipper down. He had a knife in his other hand which was also holding Alexis' hands against the headboard. A tee shirt was stuffed in her mouth. Our eyes locked and she had the most pitiful, terrified look in her eyes pleading for me to save her.\n\n'Creepy-guy' had heard the commotion and was trying to put the knife to Alexis' throat but as soon as he released her hands to do that she went for his eyes with her fingernails. He was forced to grab her hands to protect his face and I locked my eyes onto the knife, which was back up on the headboard again, and hurled myself through the air and grabbed his knife hand. We tumbled off the far side of the bed as Mitch and Noah burst in behind me. \n\nMy world consisted of nothing but that knife at that moment and I wrenched his wrist around and heard it snap. It was the most beautiful sound in the world. He screamed in slow-motion and the knife clattered off a leg of the nightstand. He was trying to hit me. Well, I guess he was hitting me but I didn't feel a thing. Noah ran to help and got a kick in the gut for his troubles. Mitch suddenly recognized where she knew 'creepy-guy' from and she started screaming. Alexis leaned over the bed and grabbed the knife off the floor and rolled to the other side of the bed. She was crying and screaming too. Rachel burst into the room to see what was going on and she started screaming. \n\nMost of the action was over before the Head Caterer burst into the room. She saw me sitting on top of her employee beating the crap out of him. She was confused and tried to get Rachel calmed down to explain what was going on. That turned out to be useless because Rachel didn't know. But Mitch did and she started yelling, \"He is one of the guys. Mom; he is one of the guys.\"\n\nRachel's face masked into one of fierce determination as she instantly reacted to Mitch's words. She moved quickly around the bed and with me sitting on his chest pummeling his face, Rachel kicked 'creepy-guy' as hard as she could in the balls. Noah didn't know who this crazed woman was so he tried pulling her back. She fought loose and wound up and kicked the guy again in the same spot. Every ounce of air exploded from his lungs and he tried to curl up in a fetal position but my weight on him prevented it. I could see from the horrified look on his face that the pain was building higher and higher. I chuckled to myself. I knew what he was feeling about now. Alexis was on the phone calling 9-1-1.\n\nI didn't get off the guy until the cops pulled me off. They cuffed him and led him out. The Head Caterer was apologizing profusely to Rachel and Rachel was just waving her away. She wanted Mitch and they stood there in the bedroom clutching each other. My only concern was for Alexis and I hugged her tight as she fiercely clung to me. She suddenly burst out crying; sobbing really. I was trying to examine her to see if she was hurt but didn't realize it was due to her adrenaline high. I motioned the others out of the room and sat down on the bed with Alexis in my lap. I held her tight until she stopped crying. She finally said, \"I'm okay. He was the guy who got away that night.\" I nodded. \"He said that he had been following me ever since he recognized me on TV as the girl in the Subaru that night. He got everything he needed to know from the TV station.\" As the adrenaline worked its way from her system she started trembling. I held her to me until she stopped.\n\nThe Police were interviewing Rachel and Noah and Mitch and now they wanted to talk to Alexis alone and then me. Rachel told us after that the Detective had said that his buddies hadn't given him up and they had no idea who he was. They are ecstatic that they now have that whole gang responsible for raping and murdering college girls going back to last year. Alexis shuddered at the realization that she could have been killed. Mitch and Alexis had a connection now and they huddled together and held each other as they burst into tears again.\n\nRachel got me aside and with tears in her eyes said, \"Thank you Hunter, again. Alexis said that this guy told her that the bitch that got away in the other room was next. I don't know what I can do to repay you, not just for Mitch but for this entire University and this community.\" I could feel my face getting red with embarrassment.\n\nI said, \"When I saw the terror in Alexis' eyes, all conscious thought evaporated. The guy was going down. I didn't care if he had a machine gun.\" Rachel pushed into me and held me as tears burst from my eyes. I was embarrassed again.\n\nShe pulled back and said, \"You know, the Police Commissioner is not going to let you off the hook now that the rest of the gang is in custody. He will contact you about how, when and where, but you two are heroes again; like it or not.\" She turned to walk away and then turned back to me and said, \"If you're still going to have your party tonight it would probably be best for everyone for this to remain quiet for the time being.\" She looked quickly around the room and then reached down and pinched the bulge hanging down my left pant leg. She released it immediately and said, \"I'm looking forward to the party, if it's still on. Keep me as low-key as you can. Okay?\" She started to turn away again but stopped and said, \"Oh, and remember that Mitch doesn't know anything about me and you guys.\"\n\nThe opportunity presented itself and I took it. I said, \"She may not know about you and us but we know about you two.\" Rachel eyes were all over the room searching for the right words. Her eyes widened and her lower lip trembled for a moment.\n\nRachel said, \"Well I'm sure I don't know what you mean.\" Her eyes flitted around the room so she wouldn't have to look me in the eyes.\n\nI smiled at her and said, \"It's absolutely okay. It's probably not my place to say but Alexis has a sexual relationship with her mother and it is the most beautiful thing ever.\" Rachel's eyes dropped to the floor and her shoulders dropped as if in resignation.\n\nShe was biting her lower lip when she looked back up at me. She had tears in her eyes as she quietly said, \"It started by accident when Mitch was eighteen. Jesus, that was eight years ago. I'd had a big fight with my husband. I don't even remember what it was about. He stomped out and Mitch came to console me. She was holding me as I cried. I don't even remember who made the first overture but the next thing I knew we were kissing and fondling and I was so horny. I didn't have a clue about lesbian sex. I don't think Mitch did either but it was happening and we figured it out. I knew it was wrong. She knew it was wrong too. We've known it was wrong ever since but we've needed each other, especially after my husband died.\"\n\nI pulled her to me and hugged her. \"Perhaps we can help. As you know Alexis is very good at lesbian sex. I think she loves it almost as much as she loves sex with me. I think it is so hot to see two women together. It sure spices things up.\" She pulled back and looked up at me. I said, \"Do you really think Mitch doesn't know you've had sex with us?\"\n\nShe said, \"She obviously knows I have had sex with someone from the cum in my hair.\" She giggled and went on, \"I'm sure she doesn't know it was you.\"\n\nI asked her, \"Do you want her to know? Do you want to have a four way with you and Mitch and us?\"\n\nShe said, \"I do, but I'm afraid she will be jealous if she found out about my tryst with you two and I would hate to mess with our relationship. I also would hate to never feel the touch of a man like you touched me.\"\n\nI responded, \"Would you be jealous if you found out Mitch had had sex with let's just say Alexis.\"\n\nShe responded immediately, \"Of course not.\"\n\nI said, \"I think you guys are thinking too much. We'll take care of everything tonight. Okay?\" She looked a little confused but she nodded and then turned and went back to converse with the Head Caterer. I thought, 'She may be confused now but when this party turns into an orgy tonight, all will be revealed.'\n\nI found Alexis in the master bathroom. She was wrapped in a towel with a second one wrapped around her head. I was concerned with her mental state. What she just went through was traumatic. I wondered if we should put this party off or not. I brought it up to her and she assured me that she was fine. She professed that she was looking forward to tonight. I wrapped my arms around her waist and pushed myself close. I bent down and kissed her on the side of the neck and she groaned and tipped her head away from mine encouraging me to continue. I did and she groaned as her eyes closed and her mouth hung open. Her hands put down her makeup brush and grabbed the edge of the counter to steady herself. \n\nI let my hands move up to release the towel and let it drop to the floor. Her nipples were rock hard as I ran my palms lightly over them. I kissed my way up her exposed neck to her earlobe and nibbled on it. She groaned again and a sudden spasm surged through her. Her hands covered mine urging me to be more aggressive with her tits and then they immediately dropped back to the counter as her knees buckled slightly. She steadied herself again and then she reached one hand around behind her and unzipped my pants. My cock flopped out into her hand and she stroked it with a backward hand-job motion. She was moaning constantly as she gasped a lungful of air in and then moaned it out again. \n\nAlexis dragged the tip of my cock up the crack of her ass and rubbed the head over her ass-cheeks. I flicked my tongue along the cartilage of her ear. She gasped another lungful of air and whispered, \"Baby, you're so hard. You've got me so horny.\" She leaned forward over the sink as she finished her statement. My hands followed her tits lower. She guided my cock to the top of her thighs and into her sex and then pushed back against me. I held my position and let her control the action at least until I was fully embedded in her pussy. \n\nHer face was inches from the mirror when she opened her eyes. Her face had contorted into mask that closely resembled agony as I had begun my fucking motion. She looked at her reflection and giggled along with her moan. She said, \"Oh my God. Look at me. I don't know why you like making love to someone who looks like she is in pain like I do right now.\" I was concentrating on the job at hand and didn't even open my eyes to look. ",
        "When she felt the first indications of her orgasm, she already knew that I wasn't far away either. I was drilling my cock into her and both of us were groaning and moaning constantly. I hooked my fingers into her hip-bones and used the leverage to ramp up the pace. Alexis' mouth fell open in a silent scream. One hand was on the mirror and the other was buried in her crotch. Her fingers were spread wide so that my cock slid between them. Then she let her fingers run the length of my cock and then curl under my balls as I pushed in. \n\nAlexis' legs started trembling and she humped her hips up further on the counter to take the pressure off them. After several minutes, my balls screwed up into my body and ejected a huge load of cum. I groaned out, \"Fuck Babe. I'm cummmminnngggg.\"\n\nThe first salvo erupted before I finished the sentence and Alexis pushed her forehead against the mirror and groaned, \"No Shit. Jesus. Oh fuck. Here I go. Yesssss.\" I humped my hips up into her with each rope of cum. Alexis was cumming hard too. She opened her eyes to see what contortions took over her face in the middle of an orgasm. I watched her smile at herself in the mirror. I caught the goofy look on my own face as I launched half-dozen long strong blasts of cum and then slumped forward on her back gasping for air. Her pussy clenched on my cock for a couple minutes after I was done and cum drooled down her legs to the tile floor. We slowly got our breathing back to normal.\n\nAlexis looked at me in the mirror and said, \"I guess you're ready to go for tonight. Now I have to take another shower and you aren't invited. I have to get ready and you're distracting me.\" She giggled and continued, \"It was an amazing distraction though.\"\n\nI laughed and said, \"Well I have to shower too. Don't you think we could take one together without distractions?\"\n\nShe laughed, \"I doubt it. I don't want to smell like a prostitute in a whore house when our friends start arriving.\"\n\nI kissed her and chuckled as I pushed my gooey cock back in my pants. I said, \"I'll take one after you're done.\" I left the bathroom and walked down the hallway to the living room. Rachel was still there 'managing' the Caterers. I walked past toward the kitchen. Rachel broke off her conversation and caught up with me. She took my elbow and led me to the half bathroom off the hallway. I didn't know what she was doing but I was curious to find out. She turned on the faucet and adjusted the temperature to hot. She snatched a facecloth from the towel bar and wet it under the faucet. She turned toward me and said, \"Drop your pants. You smell like a prostitute in a whore house.\" She looked down at my crotch expecting me to move. She said, \"Come on. The smell is driving me nuts.\"\n\nShe pushed me backward until my feet hit the toilet and I had to sit down. Rachel squatted and unzipped my pants. She reached in and grabbed my gooey, sticky cock and pulled it out. It was growing from her touch. She looked up at me. Her lower lip was sucked between her teeth. She lightly groaned and then wrapped the hot facecloth around my shaft and wrapped her fingers over the facecloth and started jerking me off in the guise of cleaning my cock.\n\nAfter a few dozen strokes with the facecloth I mentioned to Rachel that I was probably clean. She stopped her hand and took the facecloth off my cock. As she stared down at my cock she said, \"I should just wait until later, huh?\" Any plans she had were short-circuited by a knock on the door and a voice saying, \"Mom? Are you in there? You need to talk to John.\" I pushed my cock back in my pants and zipped up.\n\nRachel stood and looked at her reflection in the mirror. She said, \"Um, yes dear. I'll be right out.\" I moved over behind the door as she opened it and stepped out into the hallway smoothing her tight skirt over her hips. She hefted her breasts into their bra cups. \n\nMitch looked at her and giggled. \"Jesus, mother. What were you doing in there anyway?\" She followed her mother down the hallway to the doorway to the main house. \"John wants to know what to plan for dinner. I didn't know since we were going to go to Hunter and Alexis' party.\" Rachel indicated she would talk to John and they went through the door.\n\nI heard a \"hello\" coming from the garage. I looked at my watch. Our guests were arriving early. I opened the door to the garage and yelled, \"Up here.\" It was Jackson, who had arrived at the same time as Josie and Dean. Dean and Jackson were gawking over the antique cars in the garage bays. Josie couldn't care less and she came up the stairs and kissed and hugged me. The last of the Caterers pushed past us and went down the stairs. I told Josie that Alexis was getting ready and she should go down the hall to our bedroom. I went down the stairs to greet Dean and Jackson who couldn't pull themselves away from the cars. I told them what I could remember about each car. I'm sure I butchered it badly but they were impressed with my obvious knowledge.\n\nThe door opened again and Chase and Chuck held it open and waved am arm for Jan, Nina and Yu-Gin to enter. They giggled at their gallantry and Yu-Gin said, \"Why thank you kind sirs.\" Jan and Nina giggled again. Nina, being the sparkplug that she is, ran toward me and launched her short self into me wrapping her legs around my waist and threw a lip lock on me. Yu-Gin laughed and said, \"Come on Nina. Save some for the rest of us.\" Nina dropped to her feet and moved away so Yu-Gin and Jan could hug and kiss me. Chase and Chuck didn't miss a thing and they looked at each other and smirked. \n\nI should have introduced everyone but the girls ran upstairs and Chase and Chuck joined Jackson and Dean gawking at the cars. I was hoping that I could keep these guys from spending the whole party down here. Finally, I clapped my hands and jabbed my thumb toward the door upstairs. They got the message and reluctantly pulled themselves away. They all continued to gawk at the cars as they climbed the stairs.\n\nThe girls had all pounded down the hallway to our bedroom. Noah was standing in his doorway watching them go. They all waved and said 'hello' as they passed by. Yu-Gin stopped and stuck out her hand and said, \"Hi. I'm Yu-Gin, a friend of Alexis. We're all friends of Alexis'.\" \n\nNoah accepted her hand and said, \"I'm Noah. I'm a friend of Hunter's.\"\n\nYu-Gin scanned Noah from head to toe and said, \"We'll talk later. Okay?\" Noah released her hand and nodded. Yu-Gin followed the others into the Master Bedroom.\n\nNoah came out to the kitchen when he heard me talking to the other guys. I started to introduce him to the others before Dean reminded me that they had all met Noah before. They shook hands all around and because their one collective experience was at Alexis' Graduation Orgy they started reminiscing. Chuck said that he hadn't been laid since and Jackson laughed and pointed at him before confessing that he hadn't either. Chase and Dean didn't say anything and let that whole conversation die right there. \n\nDean spotted the catered food and he headed in that direction. It was a feast and Dean whistled when he scanned the table. There were platters of bacon wrapped scallops, large peeled shrimp with cocktail sauce, nachos and dip, chicken wings with honey-mustard dip and hot buffalo dip and platters of crackers and cheeses. There was even caviar. I had tried it before and didn't care for it. I figured that came from Rachel.\n\nThe guys piled plates full of food and Dean got the kegs going. One was light beer and one was not. They were each one plate and two 16 oz solo cups of beer down before the ladies made an appearance. Alexis lead the entourage into the living room. She was even more gorgeous than gorgeous. She grinned at me and stepped up to each of the guys and hugged and kissed them on the lips. They were ready for the festivities already. Alexis made the introduction between the guys and the girls. Other than Noah we were all students at the University. Everyone shook hands and everyone was sizing up the members of the opposite sex. \n\nJan had been here before but the others wanted a tour of our \"Palace\". Everyone was impressed with the size and luxury of each room. After the tour, Chase got the music going. He had already set it up to play a pre-set playlist. For now, the volume was set to background as everyone mingled and ate and drank. The ladies made themselves drinks or poured a beer. There was wine too. Rachel had brought it earlier. In the din of voices, no one heard Mindy and Morgan knocking on the door. They just pushed it open and joined the party. Alexis made the rounds of introductions again. Mindy and Morgan already knew all the girls and Dean. They went around the room shaking hands with all the guys. They checked out the guys they didn't know just as they were being checked out. \n\nMindy and Morgan spotted the food and Jackson and Chuck offered to fix them a plate. Mindy smiled and touched Jackson on the arm. Mindy moved to the alcohol table and made herself and Morgan a drink. The living room was huge and had plenty of seats for everyone to move around and mingle with whoever rang their bell. Alexis made drinks to replace empty glasses and I poured solo cups full of beer and swapped them with empty cups. Dean made a run on the food table again to Josie's annoyance. It was clear to everyone that Dean and Josie was an item. \n\nYu-Gin liked the looks of Noah, but he seemed to like the looks of Jan. She was taller than him and he and I had had discussions before about how girls taller than us turned us on. I had only ever met one. The fact that she was gorgeous didn't hurt either. I couldn't tell if Jan was interested in Noah or not. Jackson and Chuck were hitting on Mindy and Nina. Morgan was quiet and sitting off to the side. She was going to be our Madison from Alexis' Graduation Party.\n\nA third round of booze loosened things up even more and now everyone was invading personal spaces and touching the objects of their desire. Everyone knew what was going to happen but no one knew what would set things off. My money was on our sparkplug, Nina. Alexis and I had talked about boundaries. She had already had sex of some kind with all the guys here and for that matter, all of the girls too except for maybe Morgan. She couldn't remember.\n\nMorgan had helped Mindy jerk me off on the bus and I had sex of various kinds with the others, except for Mitch, who had yet to make an appearance. We decided there were no boundaries. We were free to \"strap-on\", Alexis' words, whoever we fancied. Another thing we agreed on was that she and I had to work together to get Rachel and Mitch together with us so there would be no more secrets between them.\n\nAs if on cue, Rachel and Mitch appeared in the kitchen doorway. Everyone looked and everyone wondered who the older lady was. I had never seen Rachel dressed casually. She looked great. Mitch was dressed like everyone else. I stood up and motioned them to come and sit down. I introduced Rachel and Mitch to the crowd and then went around the room with names I knew they would never remember. Rachel took one step into the living room and turned back and stuck her hand back toward the kitchen. Someone else was behind her. Rachel turned back to me and said, \"I'm sorry, I invited Crystal.\"\n\nCrystal pushed past Rachel and said, \"It's my fault. Rachel let it drop that you were having a house party and I begged her to invite me.\" She looked around the room and continued, \"If it's a problem I can go. No problem.\" I looked back into the room and every guy and most of the girls were smiling and nodding for her to stay. My cock was screaming, \"STAY\". I welcomed her and introduced her all around as well. She was dressed like she was the first time I met her; a little risqu\u00e9 for a woman of her station, but perfect for this crowd. I could tell that Alexis liked what she saw. She nodded at me and mouthed the words, \"She's beautiful.\"\n\nRachel and Mitch made themselves drinks and moved into the living room to mingle. Crystal grabbed up a solo cup and poured herself a beer. She walked past me and said, \"I grew up on beer but I never get to have any at the high society soir\u00e9es I frequent. This is going to be a treat.\" I smiled and thought, \"You have no idea.\"\n\nRachel explained to the others that she is a next door neighbor. She made it sound like she lived down the road. It was always a prudent thing to do to invite the neighbors to attend a potentially rowdy party. That way, they're not calling the Police. I smiled over at her. I thought it would be better if the students at this party didn't know she was the Chancellor of the University. It would put the clamps on this party and could be embarrassing for her at some point. She was a social person and had no problem mingling and chatting with the group.\n\nMitch explained who she was and that she presently was recuperating from an accident. Mitch didn't have a job but she was talking like she was going to get one after the holidays. She seemed right at home with a this group of her peers.\n\nCrystal eyed the crowd for a moment and apparently decided she liked the looks of Chase. I wasn't surprised. Chase is a good looking guy with long blonde hair over his ears. He looked kind of like a young blonde Paul McCartney. He's also tall at 6'2\". Crystal moved gracefully through the crowd and found a seat next to Chase. I watched them shake hands.\n\nWe were an hour into the party and everyone seemed to be settling in and getting buzzed. People were moving around mingling with other groups of three or four. Rachel mostly kept to herself. She was the odd one out, which was fine. She was really here for a purpose, which I expected to be getting into fairly soon. Crystal mingled well. She didn't look any older than the rest of us. Josie seemed more than a little possessive with Dean. He was fully engaged with conversations with Mitch and Crystal and it didn't look like Josie liked it much. \n\nNina's laughter could be heard above the din. It was an infectious laugh. She was also getting pretty drunk. I walked around the periphery of the room to meet her half-way to the food table. I bent down to say something to her and she stretched up and kissed me open mouth on the lips. Alexis noticed but the others apparently didn't. I had to peel her off me. I said, \"Nina. Go slow. You don't want to be passed out on the floor when the action starts do you?\"\n\nShe looked at me and her eyes seemed to be going in and out of focus. Maybe I was too late already. Nina screwed her eyes back into focus and said in a loud voice, \"Well, when does the action start. Do I have to start it myself?\" I glanced around the room and every eye was on us. The conversations had stopped. Other than the music playing in the background you could have heard crickets.\n\nMy glance fell on Alexis, who was grinning. She mouthed the words, \"You Win.\" The whole scan of the crowd took two or three seconds and in that time, Nina dropped to her knees, unzipped my pants and pulled out my cock. I had intentionally gone commando tonight. I suspected everyone here was too. She immediately started jerking me off with both hands as she grinned up at me. I just shook my head as she nodded hers.\n\nWhen Nina let go of my cock so she could stand up and remove her clothes, Mitch's eyes went wide when she saw the size of my cock. She muttered, \"Oh my fucking gawwdddd.\" Crystal, who was sitting beside Mitch, was as wide-eyed and she said, \"Fuck. What she said.\"\n\nNina was intent on getting the party going full speed ahead. I figured she would ease into it by giving me a blow-job and let the temperature around the room rise gradually. That was not her plan. She unhooked her bra and stripped her shorts to the floor. 'Yep, commando', I thought. She jumped up into my arms and threw her arms around my neck and attacked my lips again. I held her to me with my hands under her ass-cheeks. My cock was bobbing up and down just below her ass. She was reaching back behind her trying to grab my cock and guide it into her pussy. Jan got up and came over to assist. She knelt in front of me and took my bouncing cock and instead of guiding it up to Nina's sex, she stretched her lips over the glans and pushed herself down my shaft stopping to adjust as she had learned the hard way to do. \n\nThere had not been a sound from anyone until Jan was licking on my balls with my cock buried in her throat. A chorus of \"Oh my gawwddd,\" or \"Jesus, how does she do that,\" or \"You go girl,\" swept the room. Alexis was amused by the various reactions. She was watching Rachel who had the sultriest look on her face. Jan took several trips up and down my shaft before she pulled off and guided my glans to Nina's pussy. She was gyrating her ass all around searching for it and when she felt it, she released the grip on my neck and allowed herself to just fall onto it. She screamed hard from the girth. I took her weight in my hands and held her in place so she could adjust.\n\nI turned and pressed her back against the wall from the living room to the dining room. Her legs were still locked around me but she was losing her strength. I fucked my cock up into her and she screamed again. Between gasps of air, she moaned out, \"Oh my gawwddd. Oh my gawwddd,\" over and over again.\n\nThis seemed to get the others going. Josie had Dean's cock out and was jerking him off as she was unbuttoning her blouse. Yu-Gin stood and stripped out of her clothes as Jackson knelt between her legs and began eating her pussy. He had his cock in his hand and Morgan promptly displaced his hand with her mouth. Clothes were hitting the floor everywhere. Even Crystal shed her clothes to join the fray. Rachel and Mitch sat there looking everywhere as couples joined up and started sucking, licking and fucking. \n\nNoah was staring at Alexis with his extra long cock in his hand. Alexis wasn't in to Noah much but she liked his 9\" cock. She smiled at him and motioned him over. His grin nearly split his face in half. As he walked through the throng of bodies in various sexual positions, several hands came up and grabbed his cock. He paid no attention to anyone but Alexis. She was pulling off her clothes and she had gone commando too. Alexis maneuvered Noah into a recliner chair and knelt in front of him. I watched him cross the room heading for Alexis. I prayed that he didn't cum the second she touched him. He's a fragile person and the embarrassment would crush him. Then I remembered his multiple encounters with Olivia and Sophia this past summer and I was sure he would do fine. I scanned the room to see who was with whom. I wasn't surprised to see Mitch and Rachel just watching as they held each other's hand. They were well beyond horny though as their red-flushed faces revealed. I caught a glimpse of Crystal riding Chase's cock reverse cow-girl style as his head flailed from side to side. I went back to concentrating on fucking Nina.\n\nThe party was in full swing. It probably wouldn't stop until morning. A room full of teens and twenty year old fucking and sucking was a powerful display or raw sexual energy that fed off itself. It wouldn't dissipate any time soon."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "orgy",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-36"
}