{
    "title": "Mittens",
    "pages": [
        "Samantha leaned forward and spat, a sticky white string dangling briefly from her mouth before breaking.\n\nHumiliation, she thought, her mouth full once again, her breasts swaying with the vigorous back-and-forth motion of her right hand.\n\nLost in thought, she'd been brushing her teeth for a full six minutes.\n\nNo, not just humiliation, degradation, she reflected. Nina doesn't just want to feel embarrassed, she wants to feel less than human. She wants to feel like an animal. Absent-minded, she rinsed for the third time. How did we even get into that conversation?\n\nOh, yeah, that's right. She remembered the purple-gray froth in the sink. Red wine. Lots of it.\n\nSamantha spat, again, and grinned in the mirror. A bespectacled, bed-headed brunette, with the world's cleanest teeth and a tendency to overthink things - especially interesting rabbitholes like this one.\n\nFor a moment she wondered what she'd look like, all dressed up in leather and holding a whip - no, a riding crop. No. No, a boxing glove, big and red and shiny and exaggerated, like in a cartoon...\n\n...or not. Sexy, Samantha, think sexy. Not functional.\n\nBut why not both? You wear boxing gloves so that you can beat each other up without doing too much damage. Why aren't boxing gloves sexy?\n\nShe lifted the lid, slid down her underwear and sat down. And so now you get an intriguing, sexy idea, and give it a turn for the ridiculous - something you've been trying to avoid. Also, why are you even ruminating on this in the first place? What are you going to do, go up to Nina and say \"Hey, have you ever thought about getting a pair of big red boxing gloves and just letting someone beat you up with them?\" What's the expression, backseat quarterback?\n\nBreak it down, Sam. Why boxing gloves? I imagine more along the lines of whips and gags and stuff when I hear \"Bondage\" or \"Erotic humiliation,\" why am I thinking about boxing gloves?\n\nSamantha always found the sound of running water conducive to any sort of contemplation. Pee works too, albeit for very brief sessions. She sat and followed the thought back towards its hidden origin, brow furrowed, chin resting on her upturned fist.\n\nAn observer would have noted the resemblance to Rodin's famous sculpture \"The Thinker,\" except, you know, on a toilet.\n\nBoxing gloves.\n\nBoxing.\n\nPunching.\n\nImpact.\n\nShock wave.\n\nThe path of the shockwave from a downward-angled impact over the solar plexus. The sensation of air being forced out of your lungs, so similar to laughter that it makes you smile out of pure reflex. The shockwave rushing downwards, through your insides, your tummy, your crotch, your thighs, you don't feel it so much in your calves - but then rebounding through your feet from the floor and rushing upwards, angling strangely and dissipating, losing cohesion. The sensation of a phantom force rushing up your inner thighs, a strike now turned to a caress, maybe the slightest ghost whispering underneath your vagina, then it's gone, faded to nothing. And then you're standing there, still alive, stunned but surprised to feel fairly unhurt, knowing that you absorbed that much force, that much of an impact, without even falling over. Knowing that you're a red-blooded animal with a skeleto-muscular structure evolved to spread out incoming blows.\n\nKnowing that you're an animal. Knowing it for sure, without a shadow of a doubt. Knowing it in your bones. Being aware of it, for that moment.\n\nWipe, flush. Is that sexy? I can't even tell. Is spanking sexy? Or is it just something that they put in porno films so that you can tell if your audio is properly synced up? Like a clapboard, only made out of butts.\n\nSamantha stood up, pulling up her underwear. And I didn't answer my own question. Never mind the boxing gloves; what's the deal with this train of thought? She headed back to the bedroom, to dress for the day.\n\nIs this a purely intellectual exercise? Purely hypothetical? Purely rhetorical? Why analyze it so much, then, if nothing will ever come of my analyses?\n\n\"Because I love her, of course,\" she muttered, and paused for a moment in dressing, the realization sinking in.\n\nHuh. Of course. Silly of me not to notice. I love Nina - platonically, but very deeply, and for a long time. She opened up to me about her problems in her love life. Her happiness is essential to my own, so now I'm thinking about ways to make her happy.\n\nSamantha frowned. But am I even capable of that? Could I, Sam, do that sort of thing with Nina? Could I make her happy?\n\nCould I...\n\nSamantha stared into the wood of her dresser, seeing nothing, testing waters with an image of Nina, her freckles, her smile, her lips, parting. Eyes gently closing, Samantha pressed her mind's lips to Nina's.\n\nDetail. Detail, to be sure.\n\nThe pores of Nina's skin. Her eyelashes. Her lips. Soft lips, slipping tenderly, shy, curious, between Samantha's.\n\nSamantha breathed, deeply, and questioned herself.\n\nYes, came the reply. She smiled, feeling the beginnings of joy bloom in her, spreading out from her stomach like warm, slow sunlight. \"Yes,\" she whispered, \"yes, I could kiss Nina. And I can't believe I didn't think of it before!\"\n\nSamantha pulled her jeans up the rest of the way before realizing they were on backwards. \n\n***\n\nNina growled, cords standing out on her neck, pajamas damp with sweat. In her mind's eye, Samantha held Nina's hair tightly in one hand, grinding her cunt into Nina's face - her labia enveloping Nina's nose, leaving slick trails between her eyes and over her lips. In Nina's fantasy, Samantha gripped her hair with both hands and used her, like Nina used the Special Toy right now.\n\nAs they usually did, Nina's fantasies had started so innocently - imagining Samantha's eyes closing and moving forwards, their lips touching in a close, tender, nervous first kiss. In the buildup to her first orgasm, Nina disrobed Samantha, kissed her, held her, touched her, made love with her - now, as she approached her second, things were different. Her imagination jumped in brutal, incoherent cuts from scene to lustful scene, deepening and intensifying.\n\nNina on hands and knees, butt in the air, naked save for her collar and leash, cleaning Samantha's toilet while Samantha smokes and reads a magazine, her feet propped up on Nina's back.\n\nNina's legs spread wide by a steel bar, Samantha's eyes on her exposed genitals, while her fingers push knuckle-deep into Nina's ass.\n\nNina bent over Samantha's knee, bare-bottomed and squirming in a public park, receiving a sound spanking while strangers watch, her cheeks tanned red.\n\nNina holding Samantha's hand, a little drunk, telling her... telling her about...\n\nTelling her about wanting to be tied up... Telling Samantha about her cuffs and collars... Telling Samantha about the gags and the paddles and the chains and the files and...\n\nTelling Samantha everything except how wet she was getting telling Samantha everything...\n\nTelling Samantha...\n\n...!\n\nNina's back arched, her teeth clenched together, her thighs squeezing tight, the shockwaves flowing. After a few months, she collapsed back to the bed with a little shudder, a little squeak, and remembered to breathe again.\n\nIn her afterglow, the fantasies turned to a replay of last night.\n\nSamantha's eyes, enlarged by her glasses, watching Nina talk about the reinforced bolts in her rafters and walls, the little fasteners that hooked under her bed.\n\nSamantha's lips, grinning in something between embarrassment and curiosity, not realizing how inviting they looked.\n\nSamantha's oblivious nature, no doubt already thinking up some new contraption to help, purely as an intellectual exercise...\n\nShe'd do that, thought Nina. She'd show up with some fancy pneumatic rack or some amazing computer-controlled fucking machine, and then she'd say \"Well, have fun!\" and leave me to it. She'd go home, sit on her sofa, pet her cats and think \"Mission accomplished!\"\n\nAnd I saw her pondering it, even as I was telling her. I saw those cogs beginning to spin behind her eyes; she was already having some idea. And I wanted to say, \"Yes, that's very nice, I know that you're conjuring up some wonderful theoretical thingamajig, but Samantha, would you fuck me now, please?\"\n\nI sat there, panties soaked through and clinging to me, cheeks red as traffic lights and nipples that you could hang your coat on, and I told Samantha about my humiliation kink. And she sat there and thought \"How fascinating! I, a human, was not aware that humans engaged in such behavior! I must consider how can I help my human friend, who I love as a human, using the twin marvels of science and technology!\"\n\nNina sighed, but not unhappily. Her flirty conversations with an oblivious Samantha were par for the course these days - far more endearing than frustrating.\n\nStill a little frustrating, though.\n\nNina dialled down the Special Toy until it faded out, leaving her feeling a little numb and tingly but still comfortably full.\n\nAnd what makes the Special Toy so very Special? Samantha, of course. One throwaway remark about sex toys being so damned inconsistent and unreliable, and she sits there and sips her coffee and thinks about it for a minute, and then she comes out with all this talk about pulse width modulation and variable resistors. Next thing I know, we're at my place, to pick up my broken toys, and then we're at Radio Shack, Samantha bounding around in the drawers of Incomprehensible Doodads like a kid in a candy store, and then we're in her...\n\nNina grinned. Her laboratory. Meaning her kitchen table, piled high with the odd things she plays with - smelling of coffee and cookies and cats, and incense and solder and those weird Chinese batteries she goes on about.\n\nFor an hour, I watched her concentrate. Saw her little frowns. Heard her little tuts, pulling out inferior components, replacing them with special things from her parts boxes.\n\nI made us coffee, petted her cats, and offered the occasional bit of small talk. She responded, sometimes trailing off mid-sentence as she concentrated on the innards of one of my most intimate items. From time to time I'd ask her what she was doing, and she'd look up, her eyes bright behind her glasses, and she'd explain it to me with an excited tone and a big, silly grin. I followed as best I could, and I think I did quite well, considering. I understood about eighty per cent of what she told me.\n\nI pretended to be interested in what she was doing to my toy. I pretended to watch her hands, examine her tools, ask her what she was doing because I was interested in the mechanics.\n\nBut most of the time, I was watching her face. Watching her eyes scan this thing that had been inside of me. Watching her fingertips carefully turn it around, find its joints, open it up - not knowing whether or not it even occurred to her that she was handling something very intimate. I asked her things so that she would talk to me, in that tone of excited, mad-science exuberance. So that she would look at me with those big hazel eyes, while her delicate, careful hands touched something deeply personal.\n\nAnd I watched it change. My ratty old rabbit became something that was as much Sam's as it was mine - with little wisps of solder smoke it grew new knobs, and switches, and this big battery pack...\n\nI barely registered that she was putting it back together. Her sleeves were rolled up, showing the little light hairs on her forearms, the paleness of her wrists. It took a lot of self-restraint not to just reach out and caress her, saying \"Oh, don't mind me, I just wanted to know if your skin was as soft as it looked.\"\n\nThe time came, Samantha said, to take my new-and-improved rabbit for a test run. She grinned, and we were silent for a moment - a very tense moment. For me, at least.\n\nIn my imagination, she looked at me with narrowed eyes and a lusty smile, and told me - no, commanded me - to take off my jeans and my underwear.\n\nIn reality, she activated it right where it sat - and we laughed as it vibrated itself right off the table, jumping around like its namesake.\n\nTwo women in a kitchen that smelled of solder, laughing in the sun, on a cold March morning - both of them happy and content, one of them extremely turned on. One of my happier memories, and it was only a few months ago. The rabbit, of course, hasn't missed a beat since then.\n\nWith a sigh, Nina pulled back slowly on the Special Toy, felt it begin to move out of her, leaving behind a yearning, empty feeling.\n\nThe next week, buying a new cellphone, realizing with wonder and horror that I am now intensely turned on by the smell of Radio Shack. The salesman asked me if I was friends with the tall lady, brunette, wears glasses, always friendly, always heads straight to the hardcore stuff in the back, I think I saw you two come in together last weekend, Samantha, that's her name. Yeah, Samantha's cool.\n\nI bet he wondered why I was blushing. Thanks, Sam. As if my kinks weren't weird enough already.\n\nNina's inner labia slid wetly together as the head of the Special Toy left her empty. She turned the warm, wet shaft over in her hands, looking at the motors that were vaguely visible through its pink translucence. Her fluid streaked the toy in little random waves of clear to pale white. Was the toy made less beautiful by her glistening overcoat, or more? Did she spoil this work of art, or collaborate on it? She could never decide.\n\nThe whole time we sat at that kitchen table, Samantha never said anything like \"Yeah, I tried this on one of my toys once.\" She was doing this just to see if she could. I don't know if she even owns any toys herself - if she just thinks of sex and orgasms as things that happen to other people.\n\nNina brought the toy close - as she always did, before and after - and breathed.\n\nAnd it smells like her. Even when it smells so much like me, it smells like her. It smells of her hand lotion, and her kitchen table, with its odd scents of overheating electronics. She's touched it, and given it something of herself. Given me something of herself.\n\nShe reached into the drawer of her bedside table, for her toy-cleaning wipes.\n\nShe probably thought I was going to take it home, put it on the mantle and appreciate its engineering.\n\n***\n\nRight. Sex! Here we go!\n\nSamantha's fingers rested on the keys. They tapped once or twice, not hard enough to trigger a contact, the search bar empty.\n\nHere we go.\n\nShe bit her lip. She frowned.\n\nAny minute now.\n\nSamantha sat and thought for a second. Then she grinned, and her fingers flew.\n\n\"Sex boxing\" appeared in the search bar, and a page of very unusual links presented themselves to Samantha.\n\nA few minutes of scrolling, reading stories and looking at pictures, opening and closing tabs, while her right hand drifted absently down to her lap and began to stroke - rhythmic, comforting, warm, a little distracting.\n\nSamantha sat back in her chair. \"Well, that wasn't very useful at all, was it, Higgs?\" Higgs looked up from her lap, purring.\n\n\"You really don't give a shit, do you, Higgs?\"\n\nHiggs did not give a shit. He looked at Samantha, blinking in that slow, lazy way that only cats can get away with, as she petted him.\n\n\"You don't care one tittle about sex boxing, because you're an animal. You just want me to stroke your head.\"\n\nHiggs, indeed, just wanted Samantha to stroke his head. Something about that sparked a neuron somewhere, but where that led, Samantha didn't know. She followed the thought.\n\n\"Because you're just an animal. A cat.\"\n\nHiggs was an animal. He was, on some vague feline level, dimly aware that he was a cat.\n\n\"An animal,\" she said again, quietly, trying to jump-start the ideation process.\n\nHiggs blinked at Samantha. To a cat lover, his expression would have said \"Why have you stopped touching my head?\" To Samantha, obviously his expression said \"Yes, I suppose I am an animal. Where are you going with this?\" To any other outside observer, his expression said, quite clearly, \"I am a cat.\"\n\nShe let the thought go, aware that it would come back and tug on her sleeve when it was good and ready. Instead, she turned her attention elsewhere.\n\nWhy am I still fixated on the whole boxing-gloves thing?\n\nShe contemplated for a moment. \"Boxing gloves\" appeared in the search bar, and Samantha tabbed over to the \"Images\" link.\n\nPage after page of pictures of boxing gloves.\n\nWell, yes. What else did I expect?\n\nShe rested her chin on her hand, and frowned.\n\nThere's something in particular about boxing gloves. Something that sets them apart from other things like them.\n\nSo what are the characteristics of a boxing glove?\n\nIt's something that you put on to do a specific thing. It's clothing, that lets you accomplish a certain...\n\nHer eyes widened. She leaned forward in her chair.\n\nIt's an article of clothing that you put on to do a certain rough, animalistic thing, that prevents you from doing other things! That's why it's different - it makes your thumb useless! It focuses you entirely on the one thing that you're doing, reducing you - or maybe elevating you - to a perfectly-tuned tool for doing that one very specific thing!\n\nIf the subject is unskilled at that given thing, I bet I could turn that very easily into a feeling of degradation. For those purposes, all you'd have to do is duct-tape the thumb so it couldn't move. Hell, you could probably do it with an oven mitt.\n\nSamantha sat and thought for a moment. Our thumbs are one of the very big, very fundamental things that set us apart from animals. To thoroughly degrade someone, take away those differences. You want someone to feel like a lower creature, make their thumbs useless. Language is right up there on the list too, so arrange things so that the subject can't talk. Or can only talk when spoken to, if I'm feeling generous.\n\nSamantha smiled. I'm having good ideas. But I need some context to put them in.\n\nCTRL-Tab over to her email. Apprehensive, tummy full of warmth and light, Samantha pressed a single key and Nina's email address autocompleted immediately - as though the machine were saying \"Well, who the hell else would you email right now?\"\n\nTab down to the composition box. Samantha's fingers did all the thinking for her. Halfway through, she realized she was blushing, a pleasant aching below her bellybutton.\n\nShe shifted her thighs. Higgs complained, then jumped off.\n\n\"Go on, Higgs. Sam-time, now. Go play with Boson.\"\n\nHiggs stalked off, grumbling.\n\nHer cursor hovered over the \"Send\" button. She read the message through one more time, took a deep breath, and hesitated.\n\nDetail. Check the detail. How sure am I, that this is something I actually want to do?\n\nNina's breath, hot and wet, in her ear. Samantha's teeth, applying gentle pressure to Nina's neck. Samantha's hands, running down Nina's back, finding her curves, feeling her warmth, lower, lower, one soft buttock in either hand, squeeze- click.\n\nBreathing hard, Samantha sat back in her chair, squeezing her thighs together and squirming.\n\n\"Platonic\" my ass.\n\n***\n\nNina pressed the Power button on her laptop, then headed into the kitchen to put on a pot of coffee. The task accomplished, she came back to the couch, closed all the popup windows, dismissed the nagging update thingies, waited a few minutes as the little light on the front flashed at her and the computer made its pointless grinding sounds, then double-clicked on the Internet icon. Then she got up to pour and adulterate her coffee, as the machine lurched into a waking state and started re-downloading all forty-seven tabs.",
        "She took the opportunity to clean up the kitchen a little, so by the time she came back the machine had woken up to the point where it took less than a minute to register her click on the tab that contained her email.\n\nA message from Samantha - subject, \"Can we talk about this?\"\n\nOminous.\n\nIgnoring her other email, Nina clicked the message from Samantha. As the little orange light flashed and the laptop made its silly grinding sounds, she had enough time to be worried.\n\nDid I offend her? Oh God, did I say too much, and frighten her? Nina tried to distract herself by closing some of the popup windows that had since opened themselves. It did little to take her mind off the situation. She seemed interested, but we were drunk - I always think people are interested in what I have to say when I'm drunk. Oh, God...\n\nFinally the page loaded, and Nina read Samantha's message.\n\n***\n\nHey, Nina!\n\nSo this is a little embarrassing, but I've been thinking a lot about the things you said last night. I'm really fascinated by it all!\n\nDoes this sort of thing come with documentation? Is there a newbie's guide to erotic humiliation? Do you have any links you can send to me?\n\nThanks! \n\n***\n\nNina stared at the message.\n\nWhat?\n\nShe stared some more.\n\nOf course I've got links. I've got blogs open in these tabs. I've got negotiation forms actually printed out! I've got so much material you'll be reading all day.\n\nWhy do you want it? Do you want to study me or proposition me?\n\nAnd am I only considering this because I'm still all happy and damp from this morning?\n\nNina looked to her list of online friends. The little icon next to Samantha's name was green.\n\nI could ask her right now. I could go on chat and talk with her.\n\nNina opened a chat window, put her mouse in the box, clicked, and typed \"Hey, Samantha!\"\n\nShe hesitated, her finger over the Enter key. She bit her lip, took a deep breath, and pressed it.\n\n***\n\nSamantha moaned softly, hearing the blood in her ears, her right hand nestled in the warm, damp pocket of her panties, her left hand stroking her nipple, her mind full of naughty thoughts. Thoughts of Nina, lying on the bed - naked and smiling, freckled pale skin all soft and inviting, contrasted with the delightfully ridiculous bright-red cartoon boxing gloves. Trying to beckon Sam, but her fingers don't work - \"Oh dear, whatever shall I do, I want to be sexy yet these boxing gloves are so silly, this is a delicious paradox that you have put me in.\" Sam shivered, imagining Nina biting at the straps.\n\nDetail, to be sure - and to have fun - scan her, her shiny red hair, her gorgeous green eyes, her smiling lips, that bit at the front of her neck that goes all inny-ridgey, her soft-looking breasts, her nipples all pointy and ding...\n\nDing?\n\nSamantha opened her eyes. A chat window had appeared, with Nina's name in it.\n\n\"Oh,\" said Samantha, and \"Shit, hang on...\" She grabbed her desk with her left hand, pulling her chair closer so that she could reach the mouse with her other hand, her other hand which was all - \"Oh, fuck, no, oh shit.\" She stood up, stumbled, pulled up her jeans and left.\n\nThe notification window blinked at the empty room. Higgs peeked his head in, mewling.\n\nSamantha entered, red-cheeked, wiping down the fingers of her right hand and carrying a box of tissues under her arm. \"Out,\" she said to Higgs, who ignored her. She picked up her mouse and ran the tissue around it, soaking up the worst of her mistake, hoping that none of it would get into the internals.\n\nI wonder just how conductive my fluids are? Must find out someday. Write a blog post: Fun times with an Ohmmeter, sex toys for nerds.\n\nShe set the mouse back down again, sat down heavily in the chair, dropped the damp tissue to the floor, told Higgs to once again leave this place, was ignored, took a deep breath, said \"Yes, right. Hello,\" and began to type.\n\nNina: Hey, Samantha!\n\nSamantha: Hi! :)\n\nSamantha took a few deep breaths while Nina pecked out her reply. I wasn't expecting this. I was supposed to do this by email. Email, where you've got time to think about what you want to say, and it's nice and easy to catch yourself before you say something silly.\n\nNina: So you want to know about my kinkier side, huh? :)\n\nSamantha smiled. Yes. Yes, I do.\n\nSamantha: Yes, yes I do. :o\n\nThere, that's suitably noncommittal. Play it cool, Sam, keep your escape hatch open. You're on dangerous ground, here - you've known Nina for, what, ten years now? It's a lovely friendship at stake. Be careful. Also use lots of smilies, she likes those.\n\nThe indicator said that Nina was typing. Then, it said \"Nina has entered text,\" meaning that her chat box had text in it but that she was no longer adding text to it.\n\nThe indicator stayed in that status, for a long time. So long that Samantha's heart started to race.\n\nNina's sat there with the message in the chat box, going back and forth between sending it and erasing it. You'd think that excitement and fear would cancel each other out, not build each other up.\n\nCareful, Samantha, careful - don't get your hopes up too high, and don't weird her out, whatever you do. Stay cool. Talk so that she doesn't know whether you just want to learn, or whether you want to do naughty things to her.\n\nNina: Do you want to learn from the internet, or were you thinking of doing naughty things to poor little Nina? ;) \n\nFuck.\n\nSamantha stared.\n\n...fuck.\n\nShe started to type. Honesty. Flirtiness. I can do that, right? Gonna be honest and intimate, but still leaving the escape hatch a little bit open...\n\nSamantha: Be careful asking me things like that right now! ;) You caught me at an... inopportune moment. :o \n\nHer finger rested on the Enter key.\n\nRight now, Nina is seeing me having entered text, assuming her wreck of a computer has caught up that far. She's in that same torture as I was a moment ago.\n\nSamantha closed her eyes, breathed in for a count of four, breathed out for a count of four, looked at the window.\n\nDon't keep her there too long, Sam. You know that predicament. You love her, don't do that to her. Make your mind up.\n\nThe status indicator flickered - Nina had begun to type.\n\nNo. She thinks she's shocked me. She's going to say \"Just joking,\" or \"Wait! I didn't mean that,\" or \"Oh God I haven't offended you have I?\" and she'll feel awful and embarrassed, stop her, cut her off, release her from this torture...\n\nSamantha struck the Enter key, a little harder than she had to.\n\nThis delicious torture...\n\nImmediately the indicator went blank, stayed there for a second, and came back with \"Nina is typing...\"\n\nSamantha sat and waited.\n\nNina: You mean, I caught you while you were, uh... \n\nNina: Um... \n\nSamantha grinned.\n\nSamantha: Um. \n\nNina: Um? \n\nSamantha: Just about to um. \n\nNina: lol \n\nShe's lol'ing! I love it when I make her lol.\n\nSamantha: You made me get my mouse all sticky! :o \n\nAnd she's still typing. Probably chuckling away. I love her chuckles.\n\nSamantha frowned. Wait, was that too much information? Am I being creepy? I mean, saying I was masturbating, all right, that's one thing, but... actually, no, that's super-duper extra-special creepy, isn't it, fuck. And then I told her all about getting my squelchiness everywhere. She's lol'ing nervously, about to say \"Well I'll leave you to it, then,\" and close the window and lock the door and then take the sort of shower where you spend most of the time huddled up and rocking on your ankles in a corner and then she's gonna pack up and move to another city...\n\nSomething rustled quietly by her feet. She looked down, to see Higgs sniffing at the tissue by her chair. Her eyes widened.\n\n\"Fuck off, Higgs, you little pervert!\"\n\nHiggs bolted. Samantha reached down to pick up the tissue, placed it carefully in the bin, and returned her eyes to the screen.\n\nNina: Thinking of anyone I know? ;) \n\nOh God.\n\nSamantha stared.\n\nWhat the hell do those winky smilies even mean? Who winks at people mid-conversation? Who does that?\n\nShe typed out \"You, you big tease,\" erased it, typed \"Oh, a certain someone,\" erased it, then noticed that Nina was still typing.\n\nGood thing Nina hunts and pecks. She'll be looking at her hands, not the typing indicator. She won't have seen me cyber-stammering.\n\nNina: I had an enjoyable um myself this morning. \n\nNina: Gotta thank you again for the extra volts. \n\nSamantha: Watts. \n\nGOD DAMN IT FINGERS WHY DID YOU TYPE THAT. Damn things responding for me before I have a chance to even...\n\n...she masturbates with the toy I fixed for her.\n\nShe puts it inside herself.\n\n...goodness.\n\n...well, what the hell did I think she was going to do with it?\n\nNina: Wattever. \n\nSamantha: :P \n\nSamantha: Well, you know me. Always willing to lend a hand, however I can. :) \n\nShe can just take that however she wants. Noncommittal, escape hatch still open in case of emergencies. Good.\n\nNina: However you can? ;) \n\nSHIT! NINA, STOP DOING THAT!\n\nBe brave, Samantha. All lamps are green. She wouldn't tease you. She's your best friend. She wouldn't tease you about this sort of thing, unless she figured that you were just joking around, and she probably does think that you're just joking around, and let's face it she damn well would tease you anyway, so fuck it, joke around, why the hell not.\n\nSamantha: However I can. ;) \n\nNina: You big flirt. \n\nSamantha: Said the pot to the kettle. \n\nAgain, the typing indicator switched to \"Nina is typing,\" and then stalled at \"Nina has entered text.\"\n\nNow, here's another wrinkle - does that mean that she's deciding whether or not to send the message, or does it mean that she's been distracted by something, or does it mean she's got her hands down her pants, or does it mean her hard drive's thrashing again?\n\nNina: You know who I was thinking of, this morning? \n\nSamantha's breath stopped dead mid-inhale.\n\nThis is it.\n\nSamantha: No, who? \n\nThis is really it.\n\nSamantha sat and stared at the indicator, jammed on \"Nina has entered text,\" feeling the warmth rise up inside her - feeling the ice in her spine, the fire in her cheeks, beginning to suspect that she was right about something wonderful.\n\nThis is when I find out that my dreams are coming true.\n\nNina: My best friend. \n\nSamantha paused.\n\nSamantha: ...you mean me, right? \n\nNina: ...maybe \n\nSamantha's chair hit the floor. Her glasses bounced on her nose. Samantha's mouse cable ran a swirling ribbon from her upraised hand. Higgs, in the process of creeping back into the room, bolted again.\n\n\"YES! Oh hell, yes!\"\n\nNina is typing...\n\nSamantha's fingers flew over the keys.\n\nSamantha: You're not joking, right? \n\nNina: ...no... \n\nSamantha: Who the hell do you think I was thinking of? \n\nNina: ... \n\nNina: ...I'm scared to guess. I don't know what you're feeling right now, Sam. Text sucks. \n\nSamantha: I was thinking about my best friend too. :D \n\nNina: ... \n\nNina: :D \n\nThe two best friends grinned at each other over the Internet on a warm Sunday morning, both aware that the next little while was going to be very, very interesting.\n\nAfter a few seconds, they remembered to breathe, and to talk.\n\nSamantha: Shall I come over? \n\nNina: I'll come to you. I like the way your place smells. :) \n\nNina: Give me an hour? \n\nSamantha grinned.\n\nSamantha: That's going to be a tense hour. :s \n\nNina: I bet you can think of something to do. ;) \n\nNina: I interrupted you, after all... \n\nSamantha stared. Bit her lip. Nina was still typing.\n\nNina: You can give me a running commentary if you like. :) \n\nSamantha: You mean... one-handed typing? \n\nNina: You wanna? :D \n\nSamantha hesitated. She sat back down.\n\nSamantha: Tell me what to do. \n\nNina: Tell me what you're doing. \n\nSamantha: Waiting for you to tell me what to do. ;) \n\nNina: Alright then, put your hand down your pants and then tell me what you're doing. \n\nSamantha, breathing hard and blushing, wriggled her jeans and panties down to her knees.\n\nSamantha: I pulled them down. \n\nNina: And what treasures did you find? \n\nSamantha: My pussy. :) \n\nNina: Yay! \n\nSamantha: I found it! :D \n\nNina: Right there in your pants, this whole time! \n\nSamantha: But what should I do with it? :o \n\nNina: Say hello. \n\nSamantha: Hello, pussy. \n\nNina: Shake its hand. \n\nSamantha: It has no hands to shake. :s \n\nNina: Pet its head, then. \n\nSamantha: ...mmm. \n\nSamantha: still all wet from earlier. \n\nSamantha: from thinking about... you. :D \n\nNina: Now you type as slowly as me. \n\nNina: Maybe I should join in too. \n\nNina: Or maybe that would be too slow. Maybe I'll just watch and enjoy. :) \n\nNina: You still there? \n\nSamantha: thinking about your lips on mine \n\nNina: Ooh. Tell me about that. \n\nSamantha: feeling your heartbeat \n\nSamantha: touching your neck \n\nSamantha: oh god \n\nNina: Go lower than my neck. \n\nSamantha: yes \n\nSamantha: thinking of biting your neck \n\nSamantha: and stroking your breast \n\nNina: Naughty Samantha. Are you touching yourself right now? \n\nSamantha: yes \n\nNina: What does your pussy feel like? \n\nSamantha: v hot \n\nSamantha: v wet \n\nSamantha: soft and wet and aching for u \n\nSamantha: Now look, you've made me talk in text-speak. \n\nSamantha: And now my keyboard has Sam-goo on it, thanks for that. \n\nNina: My pleasure. :) Put your hand back where it was happy. \n\nSamantha: ok \n\nNina: You don't have to type, just read and make yourself come for me. \n\nNina: I love you, Samantha. \n\nNina: And I want you to fuck me. \n\nNina: God I've wanted to say that to you for years. \n\nNina: Fuck me, Samantha. \n\nNina: Please. \n\nNina: Fuck me. \n\nSamantha: i love you too \n\nNina: I want to feel your hot breath on my tits, your fingers inside me. I want to squeeze them and let you feel my heartbeat in my pussy. I want you to suck on my nipples, and make me come, and feel me coming around your fingers. \n\nNina: More than that I want you to kiss me. I want to feel your lips against mine, your tongue in my mouth, forceful. \n\nNina: More than that, I want you to pull my hair. Could you pull my hair, Samantha? Pull my hair back so my throat's exposed, and bite me while you fuck me? \n\nSamantha: yes \n\nNina: Would you be rough with me? \n\nSamantha: yes \n\nNina: Mmm. Would you hurt me, if I asked you politely? \n\nSamantha: yes \n\nNina: Would you slap me, please? Maybe we can start with a little spank on my butt and work up from there? \n\nSamantha: yes \n\nNina: Ooh. The thought is getting me very wet. I want you to leave little red marks on me. \n\nSamantha: close already \n\nNina: Come, then. \n\nSamantha: close \n\nNina: In an hour I'm going to come to your house and kiss you, Samantha. \n\nNina: I'll ring the doorbell, and when you answer it, you can wrap your arms around me and kiss me, and I'll kiss you right back. \n\nNina: And I'll squeeze you close. \n\nNina: And then I want you to take me into your bedroom and fuck me. \n\nNina: Fuck me. \n\nNina: Please, please fuck me. \n\nSamantha:! \n\nNina: Come for me, Sam. \n\nSamantha: o god \n\nNina: Come for me. \n\nSamantha:!!!!! \n\nNina: Nice? \n\nSamantha:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! \n\nNina: Yay! :D \n\nSamantha: still \n\nNina: Still going?! \n\nSamantha:!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! \n\nNina: Holy shit! \n\nNina: ...hello? \n\nNina: ...you there? \n\nNina: Did you pass out? \n\nSamantha: I'm here \n\nNina: Did you enjoy that? :) \n\nSamantha: chair fell over \n\nNina: Shit, are you all right? \n\nNina: Hello? \n\nNina: You okay, Sam? \n\nSamantha: Just had to find my glasses. \n\nSamantha: Get your luscious little butt over here so I can fuck you like you want me to, Nina. \n\nNina: Yes, ma'am! \n\nNina has logged out. \n\n***\n\nSamantha, distracted, sat in her living room and watched television, legs crossed, her left foot jiggling in midair.\n\nAfter Nina logged out, Samantha had bathed in the joyous afterglow of her first orgasm brought on deliberately by her best friend. She had felt elated, content, and giddily excited. Then, after ten or fifteen seconds of pure, unalloyed joy, a little voice had told her that Nina would be here shortly, and that it was imperative that Samantha now clean the entire house, immediately, at top speed.\n\nShe'd showered in a heartbeat, performed the fastest pubic trim she'd ever attempted, struggled into her special-occasion underwear and a nice sweater and pants, and began to feverishly tidy up. Halfway through the tidying process, Samantha had caught herself hyperventilating, and forced herself to stop. Better, she reasoned, that Nina see her house in its usual lived-in state, than see Samantha nervous and frazzled.\n\nSo, she had spent a few minutes performing her standard thinking-and-calming ritual: eating toast. And yet, not merely eating toast; eating toast as a meditative practice. A comforting set of motions for her hands and mouth and mind. Two slices in the toaster, one on her plate, one in her mouth, alternating butter and jam and marmalade. The secret was to keep the motions flowing as a perfect assembly-line process timed to the second, so that Samantha's mouth was never empty and her toast was always warm. This careful balancing act demanded just enough of Samantha's attention that it cleared her mind effectively, and she was able to calm down quite satisfactorily.\n\nThen she ran out of bread.\n\nNow she sat, and stared at the television as it told her a story on which she couldn't concentrate, and tried to sell her things that she didn't need or want.\n\nThis is a cornflakes commercial. I can't masturbate to this.\n\nEyes unfocused, she looked through the machine and into herself, and her desires. She saw Nina's cool green eyes, her cute little nose, her pubic hair of unknown color...\n\nDetail. Detail, to be sure, to be certain that I can do this.\n\nWhat will she taste like, when she kisses me? Will she taste like me? How will her breath smell? How will her breasts feel, in my hands? Could I be naked around her? Will she touch me... down there? Will I let her?\n\nHer fingers, stroking down my tummy, through my pubic hair, finding my labia, touching me in my most intimate places...\n\n...yup, that's hot as hell. Silly question, really.\n\nBut it feels so good to ask.\n\nThe doorbell. Samantha jumped, startled. She turned off the television, took a deep breath, checked her lips for crumbs, and headed out of the living room and into the hall.\n\nShe stood at her front door, knowing that Nina was right there on the other side, warm and solid and real, waiting to kiss her.\n\nThe handle felt cold. Samantha swallowed, her mouth dry, her pulse pounding in her ears.\n\nFor a moment Samantha had the clearest image of the postman waiting on the other side, delivering a parcel.\n\nShe turned the handle.\n\nNina stood in Samantha's doorway, wearing jeans and a white T-shirt, smiling nervously.\n\n\"Hel -\" Samantha hiccuped, and tried again. \"Hello.\"\n\n\"Hello,\" said Nina.\n\nThe two stared at each other, grinning, both red-cheeked, Samantha looking down at Nina, Nina looking up at Samantha.\n\nAfter seconds that felt like minutes, Samantha realized that they were just grinning at each other, and that perhaps something ought to happen. \"Come in,\" she said, hurriedly.\n\nNina stepped over Samantha's threshold.\n\nWhy does that feel big? Why does that little step feel so significant? She's been in my house hundreds of times. Thousands, maybe.",
        "Samantha closed the door.\n\nDifferent now, though.\n\nThe hallway was narrow. Samantha stood just inches from Nina - she felt almost close enough to feel Nina's body heat.\n\nThey looked at each other's eyes, for a long time.\n\n\"You're so beautiful,\" said Nina, quietly.\n\nIt's really happening, thought Samantha. She wasn't saying that in a casual way.\n\n\"Thank you,\" said Samantha, so quietly she almost didn't hear herself, her voice breaking.\n\nThen Nina was stepping forward, looping her arm around Samantha's waist, coming close, touching, chest to chest and hip to hip, Samantha's arms knowing what to do without Samantha herself needing to.\n\nThe two hugged. Not their typical letter-A, hips-apart hug - this hug was shaped like an I. Samantha noticed, clearly, that Nina's face didn't go against her shoulder like it normally did; Nina stood on tiptoe, her eyes an inch away, her lips even closer.\n\nI must have hugged Nina thousands of times, thought Samantha, and never noticed her curves.\n\nThat's because she's not just hugging me. She's pressing herself against me. There's a big difference.\n\n\"You're shaking,\" said Nina, her breath warm and damp on Samantha's lips, smelling of mint - smelling of a Nina who knew that she was about to be kissed by her best friend, and had prepared.\n\n\"You too,\" said Samantha, conscious of her arms full of warm Nina and squeezing, bending her knees a little so that they were roughly eye-level.\n\n\"Please kiss me, now, Samantha,\" whispered Nina, her nose touching Samantha's.\n\nYes.\n\n\"Yes,\" whispered Samantha, turning to let her nose slip past Nina's, watching Nina's eyes close as her own pupils widened.\n\nI'm about to kiss Nina.\n\nSamantha's lips brushed against Nina's. Their breath stopped, and Samantha became still, as if electrified, for just a moment - then life, breath, movement resumed. Lips slipped gently, tenderly together, warm, wet, quiet. Two bodies, aware of each others' heat, pressed against each other as close as clothing will allow.\n\nI love her, thought Samantha, slowly closing her eyes. I love Nina. I want to know every inch of her, and give her all the pleasure and happiness I know how.\n\nSamantha felt Nina's breath, warm on her top lip. She felt Nina's accelerated heartbeat, through her back. Samantha's fingers found their way into Nina's hair, and across her scalp, and her shoulders, and across her upper back, her mid back and waist, lower... Samantha's hands, just as in her fantasy, found the soft curves of Nina's behind, and gave a gentle squeeze.\n\nNina sighed happily, and squeezed Samantha, close and tight.\n\nI'm touching Nina's butt, thought Samantha, with something like wonder. And she feels... wonderful.\n\nHer lips are so soft... Should I...?\n\nSamantha parted her lips and, cautiously, slipped her tongue into Nina's mouth. Nina made a tiny noise, like how a moan or a sigh would sound if your mouth was full of someone else's tongue - little vibrations running through Samantha's mouth, a rush of warm breath on her top lip - and ran a hand up into Samantha's hair, gentle pressure on the back of her head.\n\nShe really wants me to kiss her. Samantha tightened her grip on Nina's buttocks, then released, sliding upwards. Her left hand found the back of Nina's head, her right hand tightly gripping Nina's left hip, feeling the pockets and belt loops and warm, soft Nina underneath, as Nina's tongue, hot and wet and moving, gently slid against her own.\n\nSamantha opened her eyes, just a fraction, to peek at Nina. Her eyes were closed, and held an expression of joyous relief and disbelief - the same expression Samantha wore now. Samantha's image of Nina shifted slightly as Nina bumped her glasses, moving them around on Samantha's nose. Samantha held Nina tightly, and tasted deeply.\n\nSlowly, as it must, the kiss ended, and Nina opened her eyes.\n\nHazel looked longingly into green. Green looked longingly back.\n\n\"Do you know,\" whispered Nina, every syllable pronounced close enough for Samantha to feel - the exhalation on her lips, the soft, heaving movement of Nina's chest - \"how many hours I've spent, just aching for you to do that to me?\"\n\nThe words sent a warm thrill up Samantha's spine. \"No,\" breathed Samantha, a little dizzy now, conscious of her own thumping heartbeat - \"how many hours?\"\n\n\"Hundrefph,\" said Nina, touching her lips to Samantha's, eyes open. They kissed, briefly, sweetly. \"Hundreds of hours,\" said Nina, her face easing to Samantha's left, \"thinking about you kissing me.\" Her breath, hot and damp on the left side of Samantha's neck, ticklish, tingling. \"Thinking about you touching me.\" Her lips, barely touching Samantha's neck, little sensitive kisses upwards, behind Samantha's earlobe.\n\nA whisper, hot and breathy and secret, in Samantha's ear. \"Thinking,\" said Nina, slowly and distinctly, \"about you fucking me.\"\n\nSamantha moaned.\n\nNina gently closed her lips around Samantha's earlobe, sucked, and let go. \"Would you like to fuck me, Samantha?\"\n\n\"Yes,\" breathed Samantha.\n\n\"Would you like to make love to me?\" asked Nina, as Samantha felt a warm hand on her cheek.\n\n\"Y-yes,\" said Samantha, feeling Nina's hair in her fingers as Nina's face came back into view.\n\nAnd then Nina was grinning, her eyes just slightly narrowed. \"Would you like to make love to me,\" she asked, quietly, and licked Samantha's lips - \"and then fuck me?\"\n\n\"That,\" said Samantha, and swallowed - \"that sounds wonderful.\" She took a ragged breath. \"I love you, Nina.\"\n\nNina smiled. \"I love you too, Sam.\"\n\n\"And I want to do all those things,\" said Samantha, her hands sliding down Nina's back. \"All those things that make you excited. All the naughty things.\"\n\nOne of Nina's eyebrows raised. \"What sort of naughty things?\"\n\nSamantha cleared her throat. \"Well,\" she said, her hands at Nina's lower back, \"If you'd like me to... slap you, and such, well... I can do that. But...\" Samantha looked at Nina's lips. \"You might have to be patient with me, because I've never done that before. I want to learn it from you.\"\n\n\"I can teach you.\" Nina's lips touched Samantha's. \"What would you like to do to me?\"\n\nSamantha smiled. \"Anything you want.\"\n\n\"What do you want to do to me?\"\n\nSamantha swallowed. \"Um.\"\n\nNina stroked Samantha's cheek. \"Listen. Sam, I've seen you do your thing, and I know that you think about a hundred things at once, and that's just what you do.\"\n\nShe knows me so well.\n\nAnd it was true. She knows me so well was just at the forefront of Samantha's remarkable mind - beneath the surface, scores of other tiny trains of thought ran their course. Some were heading nowhere in particular. Others were on track to a realization or an idea that was yet days or weeks in the future. At the present time, nearly all of them concerned Nina - thoughts of boxing gloves, mittens, humiliation, thumbs, engineering, sewing, psychology, biology.\n\n\"But this is important,\" continued Nina. \"You know how you can quiet all those little thoughts and just concentrate on one thing? Can you do that for me, now?\"\n\nWith a practiced mental flex, Samantha brought herself to the immediate present and focused every ounce of power she had on paying attention to Nina. Every other train of thought ran down and stopped, discarded, forgotten.\n\nSamantha took a deep breath, and locked eyes with Nina. She saw Nina watch her, saw the tiny widening of the eyes that told Samantha that Nina had seen her focus and was maybe a little unnerved to see it happen up close.\n\nI hope I don't scare her.\n\nNina leaned in. \"I will never think ill of you for experimenting, or telling me about what makes you excited.\" She squeezed Samantha. \"Never, Sam. If you suggest something, and I'm not all that into it, then I'll most likely give it a go because I know it makes you happy. I'll try nearly anything once. But even if what you say shocks me, Sam, which it won't - but even if it does, I will never, ever laugh at you. And I won't go away and think \"What a weirdo,\" Sam. I love you.\"\n\n\"I love you too, Nina.\" Samantha grinned. \"Doesn't it feel wonderful to say that?\"\n\nNina grinned back. \"Yes, it does. I love you, I love you, I love you. And do you understand what I'm saying to you?\"\n\nSamantha nodded. \"I understand.\" She kissed Nina on the cheek, relaxing, letting the hundreds of thoughts return to the background of her mind - most of them now having to do with Nina. \"And I want to make you come.\"\n\nNina gave Samantha a tight squeeze and a happy sigh. \"That sounds nice. May I make you come, too?\"\n\nHere's your opportunity, Sam. Here's where you let her know how you can make her happy.\n\nSamantha narrowed her eyes, and placed a finger on Nina's lips. \"Maybe. But only if you ask me very politely.\"\n\nNina smiled. \"Would that be okay? If I were to, just...\" She shrugged, blushing. \"Ask you things? Ask for your permission to do things?\"\n\nSamantha grinned. \"Yeah. Should I make you beg me, Nina?\"\n\nSamantha felt Nina shiver in her arms.\n\nI did that. Just with words, I made her shiver.\n\n\"Yes,\" breathed Nina. \"Maybe a little. Shall we leave it at that, for today? Take it slow?\"\n\nSamantha leaned into Nina's neck. \"I bet there's lots of talking involved,\" she whispered, her lips close to Nina's skin. \"Lots of negotiation and such, talking out each others' limits.\" She bit Nina, gently, on her neck.\n\nNina shuddered. \"Yes, there is.\"\n\nShow her, Sam. Show her you can do this. Show yourself that you can do this.\n\n\"That sounds like it'll take a lot of time,\" said Samantha, leaving little kisses up to Nina's ear. \"But if you're okay with vanilla,\" she breathed, sliding her right hand up Nina's side, \"maybe with just a few extra sprinkles -\" her hand settled on the soft warmth of Nina's left breast - \"perhaps a marshmallow or two...\" She gripped, gently. \"Then I can take you into my bedroom and fuck you right now.\"\n\nSqueeze.\n\n\"Oh, God...\" moaned Nina.\n\n\"Shall I take you upstairs, Nina?\"\n\n\"Yes please...\"\n\nSamantha grinned, and gripped Nina's wrist, tightly.\n\n***\n\nSamantha's bedroom smelt of incense and fresh laundry. Nina allowed Samantha to pull her in. She looked past Samantha to the bed.\n\nShe's going to put me on her bed and fuck me, thought Nina. Just like she said she would. It's actually happening.\n\nSamantha looked at her with narrowed eyes and a grin. Nina watched Samantha reach up to her glasses, take them off, fold them carefully, place them on her dresser, step out of her shoes.\n\nSamantha turned to smile at Nina. \"No ropes, no whips, no pain - not until we've had time to talk about it. But for now...\" she stepped closer. \"Would it make you happy if I say some very impolite things to you?\"\n\nNina grinned, blushing. \"Yes, ma'am. Thank you, ma'am.\"\n\nSamantha curled a hand around Nina's waist. \"Can I move you around, and maybe restrict your own movements a little bit? Pull your hair, like you said on chat?\"\n\nNina nodded. \"A little bit,\" she said, nervously.\n\n\"C'mere,\" said Samantha, in a low, lusty voice Nina had never heard before - she had no time to reflect on this new sound, because hands gripped her and the world spun and she landed, breathless, on soft sheets.\n\nSamantha stood over her, grinning down.\n\n\"Look at what I've caught,\" she said, quietly, almost a growl.\n\nNina shivered. Oh God.\n\n\"If you want me to dominate you, then that's exactly what I'll do,\" murmured Samantha, leaning down to Nina's feet. \"I'm going to have such fun with you, little Nina.\" Nina's right shoe left her, and she heard the thump as it hit the floor. \"I'm going to learn all about your buttons and switches.\" Her left foot was tugged on, exposed to the sock, the same little thump. \"I'm going to play with them all, and see what happens.\"\n\nWith a ghostly, fleeting rush of cotton on skin, her feet were suddenly bare. \"Cute little cotton socks,\" said Samantha, grinning, the articles in mention dangling from her fingers. \"You won't need those.\" The socks dropped to the floor, and the bed shifted and creaked as Samantha's knee crept onto it.\n\n\"Do you realize, little Nina, that you're on my territory?\" asked Samantha, her eyes locked on Nina's as she crawled up the bed, her face approaching Nina's thighs. \"You didn't know what you were doing, and now you've wandered into my domain like a silly little rabbit.\" She reached Nina's shivering belly, one arm ahead of the other, creeping, the bed groaning under her muscular weight. \"Didn't you notice how this place smells of me? Of something much, much bigger and stronger than you?\" She passed Nina's heart, her teeth edging close to Nina's throat. \"What on Earth were you thinking? This is my lair. Do you know, little one,\" she said, and suddenly she was right there, her face a thumbnail away from Nina's, her wet breath hot on Nina's lips, her weight settling in, pressing Nina into the bed - \"what happens to silly little rabbits, in this place?\"\n\nNina gasped as Samantha's weight immobilized her, Samantha's nose touching hers. \"What will happen to me, ma'am?\"\n\nSamantha's left hand moved behind Nina's head, and Samantha gripped Nina's hair in her right. The pillow disappeared and Nina's head hit the mattress, her throat exposed. Samantha leaned down, slowly, tension on Nina's hair, and growled. That was the only word Nina had to describe the sound - the hot, wet, vibrating breath on her vulnerable throat. She shivered, again, and gripped the bed.\n\n\"Awful things,\" whispered Samantha, and licked Nina's throat, from collarbone to chin, along the left side. \"Cruelthings,\" she said, and then another long, wet, sensuous lick up the right side, as Samantha's saliva cooled on her left. Then, before the lick was quite completed, she moved with sudden, frightening speed and her teeth were on either side of Nina's throat, little points of gentle pressure.\n\nNina's breath stopped.\n\nSamantha breathed, heavily, growling, into Nina's throat. They stayed like that for a moment, then the bite melted into a kiss, the pressure receding, Samantha's tongue gently stroking.\n\nThe kiss ended, and Nina realized, as her breathing resumed, that Samantha's hands were pinning her wrists to the bed. When did that happen?\n\n\"But mostly,\" said Samantha, looking into Nina's eyes, \"what happens to little rabbits is whatever I damn well please.You are mine, now, to deal with in whatever manner my whims take me. You're helpless, and completely at my mercy.\" She smiled, a threatening, condescending smile - and Nina felt shockingly at home with being condescended to. \"Do you understand what I'm telling you?\"\n\n\"Y-yes, ma'am,\" squeaked Nina.\n\n\"Then repeat it to me, little one, so I'm sure it's sunk in.\"\n\nNina swallowed, took a breath. \"I'm helpless. You're stronger and faster and cleverer than me and I can't overpower you or outsmart you. No one will come and save me.\" A warm, insistent glow from beneath her navel. \"I'm yours to do with as you wish.\"\n\nSamantha smiled, her eyes narrowing. \"You're amusing. I like that. But it's early in the day, yet. If you're to survive this boring Sunday afternoon, here in my domain, you'll have to remain amusing for quite some time.\" She knelt up, straddling Nina's hips, her hands gripping Nina's shoulders.\n\nShe's going to be good, thought Nina, gazing into Samantha's expression of mild, casual ownership. \"What are you going to do to me?\" whimpered Nina, overjoyed.\n\nSamantha's expression suddenly changed. \"Oh God, I'm sorry -\" she stammered. \"Did I really scare you? Did - am I doing it wrong?\"\n\n\"No!\" Nina said, \"no, you're doing it right! Sam, you're doing it so right, believe me! Was I too convincing?\"\n\nSamantha exhaled, her smile slowly returning. \"I've got a lot to learn, haven't I?\"\n\nProbably time to talk about safe words, thought Nina. Well, this serves me right for thinking that we wouldn't need them so soon. She smiled back. \"Samantha, you've got me this hot just from talking to me.\"\n\n\"You know I'm only pretending to be scary, don't you?\"\n\nNina nodded, smiling. \"Yes, Sam, and that's exactly what I want. That's perfect. And I'm only pretending to be scared. Well,\" she added, \"mostly, anyway.\"\n\nSamantha's eyes widened. \"Did I really scare you?\"\n\nNina reached up and took gentle hold of Samantha's hips. \"A little bit. Good scared, though. Rollercoaster-scared, not dark-alley-scared. That's good, Sam, that's kind of the point. I know in my heart that you'd never deliberately hurt me.\"\n\nSamantha looked confused for a moment. \"But I would, though, Nina. If that's what you wanted. If that's what would make you happy.\"\n\nNina shook her head. \"Even then, you'd never deliberately hurt me more than I wanted to be hurt. I meant that you'd never hurt me in my heart.\"\n\nSamantha smiled. \"I love you, Nina, and I hope you're right.\"\n\nNina smiled back. \"I love you too, Sam. I love you so much, and you're going to be so good at this, and I am so turned on right now.\"\n\nSamantha's smile spread wider. \"Good!\"\n\n\"So here's what we'll do,\" said Nina. \"Your scene, with the scary-Sam, we can continue that, or you can just kiss me and take off all my clothes and make love to me.\" She grinned. \"If we continue, then assume I'm pretending or acting unless I say \"Redden,\" or give you two squeezes like this -\" she squeezed Samantha's hips, twice, in rapid succession - \"in which case, we stop right there, and talk about what happened and what happens next, okay?\"\n\nSamantha nodded, grinning. \"Redden or two squeezes and we take a break straight away, gotcha.\" Then, her expression changed again. \"Damn it, I'm already fucking up, aren't I? I held your hands down so you couldn't squeeze me.\"\n\n\"But you didn't cover my mouth. That's why we have the squeezes and the word, so you can cover my mouth or pin me down sometimes, just not both at once.\" She looked carefully at Samantha. \"And Sam, if I'd have said \"stop\" right then, you'd have stopped.\" Nina saw Samantha angle her head and begin to think about it. \"No, really, Sam, you'd have stopped, safe word or no. You stopped the moment you thought I was frightened.\"\n\nSamantha nodded. \"You're right. I'll try to keep it in mind. So I'm really doing okay?\"\n\nNina grinned. \"Sam, you're doing better than okay.\"\n\n\"Do you want scary-Sam, or kissy-Sam?\" Nina took a breath - \"And before you answer,\" interrupted Samantha, \"I really,honestly just want to do whatever will make you happy.\" Samantha smiled. \"Whatever will make you come.\" She laughed, joyous, her eyes wrinkling. \"God, I want to make you come, Nina.\"\n\nNina smiled. \"Frighten me, Sam. Tell me what happens to silly rabbits.\"\n\nSamantha leaned in and kissed Nina, tenderly, on the lips. \"I love you so much, Nina.\"\n\n\"I love you too, Sam. And after this, I want to make you happy, okay? I like giving too.\"\n\nSamantha's nose crinkled up in an almost-laugh. \"I love meta-selfishness.\" Then she pulled back from Nina, and her expression changed - it was like watching a cat suddenly turn malicious. \"Now, where were we?\"\n\n\"What are you going to do to me?\" asked Nina. \"Are you going to do horrible things to me?\"\n\nSamantha grinned, slowly, teeth peeking out, her fingernails sliding down Nina's T-shirt like claws. \"I'm going to do whatever I feel like, little Nina. I might not even tell you what I'm going to do to you. But right now, I will, because it might be entertaining to watch your face, knowing what's going to happen. I won't even punish you for asking silly questions.\"",
        "\"Yes, ma'am.\"\n\n\"I'm going to do to you what I do to all the little wanderers who don't know what they're doing.\" She took hold of the bottom of Nina's T-shirt. \"I'm going to skin you alive, little rabbit, and watch you hop around denuded.\"\n\nNina grinned. \"No, please, don't!\"\n\nSamantha looked up into Nina's eyes, suddenly startled - then her face went through a series of expressions. First, shock and shame - then, confusion. Then, Nina saw the realization blossoming in Samantha's head as clear as day. Her mischievous grin returned. \"Does it amuse you, little rabbit, to play Simon Says with me? I know you didn't use your special word, so I'm just going to go ahead and -\"\n\n\"No! Please, ma'am, don't take my clothes!\"\n\n\"I'm going to take your clothes, Nina,\" said Samantha, pushing the T-shirt up and over Nina's head. \"And if you really wanted to, you'd say the word, or try to stop me, but you certainly wouldn't be helping me to get that shirt off, like you're doing now, naughty bunny.\"\n\nNina grinned, her hair ruffled, and dropped the T-shirt to the floor. \"Just trying to ease you into it slowly, Sam.\"\n\n\"That's ma'am, to you, little rabbit,\" breathed Sam, her eyes on Nina's chest. Nina looked down too.\n\nShe saw her best friend looking at her breasts, encased in the lacy white special-occasion bra. \"Are you going to take my bra too, ma'am?\"\n\nSamantha swallowed. \"Yes,\" she said, breathily. \"Yes, little rabbit, I'm going to take your bra too.\"\n\n\"But whatever shall I do without it?\"\n\nSamantha's hands slid up Nina's sides, settled on her shoulders. \"You'll do,\" murmured Samantha, stroking downwards, \"whatever pleases me.\"\n\nNina watched Samantha's fingers trace across her breasts. Her hands were warm, her fingers slender - the skin was a little dry. A tiny imperfection.\n\nHer hands are so beautiful. \"What pleases you, ma'am?\"\n\nSamantha's hands stroked down Nina's belly, settled on the button of Nina's jeans. \"Taking your clothes,\" she said, quietly, manipulating button and zip - Nina saw her eyes widening as she realized what she was doing - \"that's what pleases me.\"\n\nNina arched her hips. Her jeans slid down and off. Matching panties.\n\nNina watched her best friend, kneeling on the bed, look up and down her body. She saw naked desire, constrained only by Samantha's dwindling efforts to stay in character. She saw Samantha's eyes settle between her legs. She knew that Samantha would be able to see a soft crease through her underwear, dampened with her excitement.\n\nShe saw the pulse in Samantha's throat. Samantha, her eyes between Nina's legs, slowly let the jeans drop to the floor.\n\nNina squirmed, letting her left thigh come up, revealing just a little more. \"Can you see my pussy, ma'am?\"\n\nSamantha swallowed, and took a deep breath. \"Yes,\" she whispered. \"A little bit. You're very wet.\"\n\n\"Oh no!\" said Nina, bringing her hands up to her mouth, squirming a little more, revealing a little more. \"Please don't look, ma'am! I'm shy!\"\n\n\"You shouldn't try to tell me what to do, little rabbit,\" said Samantha, but distractedly, her arm shifting, putting gentle pressure on Nina's left knee, pushing her legs further open. \"I might just do the opposite.\"\n\n\"I'm sorry, ma'am. How wet am I, ma'am?\"\n\nNina felt the tip of Samantha's index finger against the soft bump of her mons. Samantha applied just the gentlest of pressure, and ran her finger in a long, slow line down the crotch of Nina's underwear, between her labia. Nina squirmed and moaned, breathy and low.\n\nShe watched Samantha bring her finger up to her face. \"You're soaking through your underwear,\" said Samantha, breathlessly, almost in disbelief.\n\nNina watched her friend breathe, knowing that she was breathing Nina's scent from her fingers. \"Do I smell, ma'am?\"\n\n\"Like prey,\" whispered Samantha. \"Like scared, excited prey, with a hot, wet cunt.\"\n\nNina shivered, thrills of arousal running through her, from below her bellybutton out over her thighs, racing up her back, a wet aching between her legs.\n\nTell her. Tell her, and make her understand.\n\n\"I'm wet for you, ma'am.\"\n\nSamantha looked up at Nina. \"I think I prefer \"Mistress,\" Nina.\"\n\n\"Yes, mistress.\"\n\n\"Whatever will I do with you, little rabbit?\" murmured Samantha.\n\n\"Are you going to eat me up?\" whimpered Nina, wriggling.\n\nSamantha smiled, eyes narrow, incisors visible and glistening. \"Yes,\" she whispered. \"First, I'm going to strip you bare.\" She began crawling up the bed. \"Then, I'm going to touch you, in all of your secret places.\" She reached Nina's chest, and settled a hand on her left breast. Nina felt her trembling - a betrayal to her cool, malicious air. \"And then,\" said Samantha, squeezing gently, \"I'm going to have a little taste of you. And perhaps,\" she said, her right hand sliding behind Nina's back, her mouth descending to Nina's neck, a quiet thump against the bed and a sudden release of tension around Nina's chest - \"I'll eat you alive, little Nina.\"\n\nTeeth, hot and breathy, on Nina's neck. Weight, pressing on Nina's body. Nina shrugged, and her bra dangled from Samantha's right hand - a trophy, stripped from Samantha's prey. Samantha held it for a moment, regarded it - then it fell, forgotten.\n\nSamantha's lips against Nina's, forceful, pressed her head into the pillow. Samantha's tongue, slippery and soft, pushed into her mouth. Nina felt a hand grip her bare right breast, stroke upwards over her nipple. She felt one of Samantha's thighs, between her own. Her knees raised, almost unconsciously - the sensation of Samantha's warm, firm body between her legs.\n\nNina's tongue found Samantha's, and stroked. She wrapped her arms around Samantha and squeezed, and moaned into Samantha's mouth. Samantha closed the kiss, pulled back, looked down.\n\nNina watched. Samantha was looking at her naked breasts. She watched Samantha slowly run a finger across her right breast, pausing to circle her areola.\n\n\"Look at you,\" murmured Samantha. \"With your little freckles.\"\n\nNina moaned as Samantha stroked gently over her firm, pert right nipple.\n\n\"Do you like that?\" asked Samantha, smiling.\n\n\"Yes,\" said Nina, breathlessly.\n\nSamantha's fingers shifted, and she tugged gently on Nina's nipple. \"Yes what?\"\n\n\"Ah! Y-yes, mistress!\"\n\n\"Are your nipples sensitive, Nina?\"\n\n\"Yes, mistress!\"\n\n\"Would you like me to play with them some more?\"\n\n\"Yes, mistress!\"\n\nSamantha grinned, loosening her pinch. \"Beg me, Nina.\"\n\n\"Please!\" moaned Nina. \"Please, mistress, I beg of you, please touch me! Please!\"\n\nNina looked into Samantha's eyes. Samantha looked back, and said, quietly, calmly, the sweetest word Nina had ever heard from her lips.\n\n\"No,\" she said, smiling, her pinch loosening to nothing, leaving Nina's nipple hard and cold and sensitive. \"No, I think I'm going to torture you instead.\"\n\n\"Please!\"\n\n\"Absolutely not.\" Samantha stood up on the bed, one foot on either side of Nina's waist. Nina looked up at Samantha, grinning down at her as her hands went to her waistband, unbuttoning. \"No, you've had your five seconds of slutty little thrills,\" said Samantha, sliding down her pants, revealing turquoise panties and long, pale, muscular thighs. Samantha's pants puddled around Nina's tummy; she stepped out and flicked them off the bed with her foot.\n\n\"Five seconds for you,\" said Samantha, kneeling down, her bare inner thighs brushing Nina's sides, \"and then as long as I like for me.\" Samantha shuffled upwards, her thighs sliding up Nina's ribcage, pressing against the sides of her breasts, Samantha's crotch approaching closer and closer - \"That's fair, isn't it, Nina?\"\n\nNina's gaze fixated between Samantha's legs, her crotch over Nina's heart - she could swear she could feel its heat. As Samantha shuffled upwards, detail came into view - the weave of her underwear, the shape of her pubis, the visible muscles of her thighs.\n\n\"Look at me,\" said Samantha. Nina looked up, to see Samantha looking down at her, head bowed. She spoke slowly.\n\n\"Listen carefully, Nina,\" said Samantha, \"because I could give a little squeeze and put you in the hospital.\"\n\nNina shivered, thrills running down her spine, because it was true. Samantha had her pinned, helpless, and she contemplated the muscles on her friend - as if on cue, Samantha's thighs twitched, tensed for just a moment.\n\nThey turned from soft, warm, hugging pillows to iron girders, and back again, in a heartbeat.\n\nI never thought of that, thought Nina. She mentioned what she does on Monday and Thursday nights, but the karate or aikido or whatever it is she does... she never really spoke of it, so I never thought of what it'd do to her body. I never made that connection.\n\nI didn't see this coming.\n\n\"You've been very stupid and let me pin you, now,\" said Samantha, watching Nina's eyes. \"So, while I have you like this, I'm going to use your face like a cheap sex toy, and I don't particularly care whether you like it or not.\"\n\nOh, God. She really is. She's going to use me...\n\n\"Now pay close attention, Nina, and do exactly as I say without question or hesitation. Do you think you can do that?\"\n\nNina, shuddering, looked into Samantha's eyes. \"Yes, mistress.\"\n\n\"Your right arm is outside of my left thigh. When I tell you, I want you to put your right hand, Nina, on my left buttock, applying respectful pressure. Do you understand?\"\n\n\"Yes, mistress.\"\n\n\"Good. Go ahead, Nina.\"\n\nNina did as she was told, gripping gently. Samantha's butt was warm and unexpectedly firm.\n\n\"Good girl,\" murmured Samantha, inching closer, so that her gusset was directly in Nina's view as she looked up into Samantha's deep hazel eyes and breathed in Samantha's warm, dark musk. \"Keep your eyes on mine, Nina. You may look between my legs in a moment, so that you can see what's going to happen to you. But only when I give you permission. Do you understand?\"\n\n\"Yes, mistress,\" breathed Nina.\n\n\"Now, put your left hand on my right buttock.\"\n\nNina did as she was instructed, warmth in her stomach, her hands full of Samantha.\n\n\"What do I smell like, Nina?\" asked Samantha, her crotch an inch from Nina's mouth and nose. \"You smell like scared, delicious prey, shivering and terrified and waiting to be eaten. What do I smell like, to you?\"\n\nNina closed her eyes and breathed deeply.\n\nLike heaven. Like a warm summer's day spent with my best friend and my new lover. Like the hottest, wettest, most intimate part of a sexy, excited woman who is as in love with me as I am with her. Like realizing that someone you love deeply is willing to do everything in her power to press your buttons and give you everything you've ever dreamed of, and what's more, she's good at it. Like my fantasies coming true so fast that I can't believe any of this is happening.\n\n\"Like my predator,\" whispered Nina, opening her eyes again and looking up into Samantha's. \"Like a huge, powerful beast who can do with me whatever she pleases, and I'd be powerless to resist.\"\n\nSamantha smiled down at Nina. \"You have a good sense of smell, Nina. And you're right - I could do anything to you, right now.\" She slid a hand behind Nina's head. \"I could be nice to you, if I wanted to. I could play with your nipples, suck on them a little, make your silly little cooch all wet and happy. I could lie down next to you and kiss you for hours, hold you tight, have you fall asleep in my arms. Make you feel loved.\"\n\nSamantha's grip tightened painfully in Nina's hair. Nina gasped, did not cry out. \"Or,\" continued Samantha, \"I could be very cruel indeed. I could skip treating you like an animal and go straight to treating you like an object. I could grind myself against your face until I come, not caring at all about your pleasure.\" Samantha hesitated. \"I... could be even crueler than that, Nina. It all depends on my whims.\"\n\nNina looked up at Samantha, unsure. Samantha was clearly struggling with something for a moment, just then. She looked as though she thought she was testing a limit.\n\nBut what limit could she test? She's just told me that she could put me in the hospital, and it got me even hotter, and that was true. She knows we're limited to talking and gentle restraint, this first time with each other - what fiction could she come up with that would push my boundaries?\n\nKnife play? Blood? Guns? Does she have a collection of weapons stashed somewhere, from her fighting class? Does she want to bring them out and show them to me?\n\nDo I ask?\n\n...I do.\n\n\"But mistress,\" said Nina, timidly, \"What could possibly be crueler than that?\"\n\nSamantha hesitated. Then, she appeared to reach a decision. She looked down at Nina, smiled evilly, and whispered \"I have to visit the little predator's room.\"\n\nNina shivered, her grip tightening on Samantha's buttocks, her breath ragged, warm pulses flowing from her vagina through her abdomen, her nipples standing on end.\n\n\"Does that scare you, Nina? Being drenched in my scent? Being marked as mine? Being so utterly humiliated?\"\n\nNina, keeping her eyes on Samantha so that they didn't roll around in her head, shivered uncontrollably. HOW DOES SHE KNOW?! Even after three bottles of wine I wouldn't have told her that!\n\n\"Yes, mistress,\" panted Nina, \"that terrifies me!\"\n\nSamantha grinned. \"Look between my legs, Nina.\"\n\nNina looked down. Samantha's pussy was barely far away enough for her to focus on - she saw the damp crease in her panties, the dark pubic hair peeking from the edges, a little mole right where her thigh met her crotch.\n\n\"Can you see that I'm just as wet as you are?\"\n\n\"Yes, mistress,\" breathed Nina, enthralled.\n\n\"Listen carefully, Nina,\" said Samantha, bucking her hips like a slow pendulum, her grip tight in Nina's hair, her panties just beginning to brush against Nina's nose - \"I'm wet because you're terrified. That's the sort of situation you're in, now. The more you whimper, the more you beg me to stop, the wetter I'll get,\" continued Samantha, as Nina felt Samantha's left hand join her right, cradling the back of her head, \"so please feel free to voice your fear of me. Nobody will come and save you. You're mine.\"\n\n\"Please, mistress!\" begged Nina, breathing Samantha's intoxicating musk, her spine tingling, her belly glowing, her pussy wet and tensing - \"Please don't pee on me!\"\n\n\"Ask me nicely,\" said Samantha, her breath unsteady.\n\nDoes she think that genuinely scares me, or does she suspect the truth? Is she trying to frighten me, or trying to drive me insane with lust?\n\nNina tightened her grip on Samantha's bottom, feeling the muscles shift as she moved her hips back and forth, the damp crotch of her underwear gently touching the tip of Nina's nose with every stroke. \"Mistress, I'm so scared. I beg of you,\" she breathed, \"from the bottom of my heart - please, please, find it in your heart to relieve yourself somewhere, anywhere other than in my silly little face. Please, just hold it for a few minutes while you use me to make yourself come.\"\n\n\"Hmm.\" Samantha stroked Nina's hair gently, running her fingers along Nina's scalp. \"It really would be unspeakably cruel of me, wouldn't it?\"\n\n\"Yes, mistress,\" said Nina, her eyes on the damp fabric slowly moving back and forth over her and in front of her. \"I wouldn't be able to stop you, and I'd be humiliated and your lair would get all soggy.\"\n\n\"No, little rabbit, you wouldn't be able to stop me,\" murmured Samantha. \"But you raise a valid point. Humiliating you sounds like fun, but I am rather fond of my lair. So, if you do your job as my sex object sufficiently and get me off in good time, then I probably won't let go when I come.\" With that, she descended, Nina suddenly engulfed in her heat, her softness, her scent.\n\nSamantha let out a low, quiet moan, and began to rock back and forth. Nina took breaths where she could, her lips parted, her thighs pressed together and tensing, watching Samantha's eyes, her pussy, her eyes, her pussy, squeezing Samantha's bottom tightly, marvelling at her firmness. Stray pubic hairs tickled her nose, fabric wettened further over her lips, Samantha's moans coming faster and louder now, the soft pressure increasing, the grip on her hair tightening.\n\n\"I really have to go,\" murmured Samantha, in between moans.\n\nNina, waves of pleasure ebbing and flowing inside her, squeezed her thighs tightly together, watching the fabric dampen as Samantha's legs began to shudder.\n\nWas Samantha having an orgasm already? Nina tightened her grip on Samantha's bottom, tried to raise her head a little, pressing her nose and mouth deeper between Samantha's legs. Come, my love. Use me and come for me.\n\nNot yet. The tension on Nina's hair relaxed a little, Samantha running her fingers across Nina's scalp, stroking her - then, suddenly, painfully, a hard tug on Nina's hair, upwards towards Samantha's crotch.\n\nSamantha spoke, her voice light and breathless and uneven. \"I can't hold it in anymore, Nina.\"\n\nSamantha looked down at the squirming Nina, smiled, and spoke slowly and deliberately.\n\n\"Open your mouth.\"\n\nNina had her first orgasm at age twenty-three. They had never been easy.\n\nFor years, Nina had wondered at the reasons why. Ultimately she decided that there didn't have to be a reason - some people come more easily than others, and sometimes it really is just as simple as that.\n\nAt some point she couldn't remember, she'd begun to visualize her orgasm as a knocking on her front door - it seemed at once both absurdly silly and oddly helpful.\n\nFeel the knocking, tentative, gentle, shy. Notice that tiny knock or scratch at the door, and let it in, or it'll go away - and then it's a frustrating exercise in tempting it back again. Then, tense here, relax there, squeeze just like this, and that's how you open the door.\n\nCounter-intuitively, a different process for getting warmed up, a different process for coming down afterwards. Always conscious. Always, the mantra is \"I could be about to have an orgasm, so here are the things I do to let that happen.\" Nothing involuntary about it - always controlled and deliberate.\n\nWith three words, Samantha kicked Nina's door off its hinges.\n\nThe orgasm came all at once, suddenly, and was like nothing that Nina had ever felt before - it came in waves, yes, but at the center was not a pulse but something more, something almost cyclic, just below her bellybutton; as though some massive engine was turning over, throwing ripples of heaven outwards from the sunfire at her center, beating, expanding, contracting, spinning.\n\nAccelerating. Nina realized with something approaching fear that it was just starting. She was blasted into incoherence, she was utterly out of control of her own body, and it was just getting warmed up.\n\nThe engine became a Catherine wheel, throwing tingling sparks all the way to her toes. It grew, became a nuclear whirlwind, warmed her.\n\nThe room became lighter as Nina's pupils dilated. Light bloomed, Samantha's thighs turning golden white, a triangle of bright cyan between them. Nina was dimly aware of something hot in her mouth, cotton shivering against her tongue. She squeezed tighter on whatever was in her hands, and it shuddered, and there were noises, a woman moaning, squeaking, crying out.\n\nThen Nina's eyes crossed, and everything got a little blurry and vague.\n\n***\n\nCoherence returned, slowly. The memory of the orgasm, making no sense to the waking mind, went into the same mental recycling bin where all of Nina's dreams went, leaving a gap that felt oddly like waking up after a brief nap. Nina hadn't lost consciousness, but she still felt a roughly similar sensation to waking as continuity returned, her eyes reconverging and focusing on Samantha's.",
        "\"Are you okay?\" said Samantha, breathlessly, her crotch hovering above Nina's mouth. \"Your eyes went funny, there.\"\n\nNina laughed. It was too absurd not to. \"I - heh - you...\" she grinned, and gave Samantha's butt a playful squeeze. \"You know what you did?\"\n\nSamantha's smile faded. \"Again? I'm making so many mistakes...\"\n\n\"You made me come so hard I went cross-eyed, Sam.\" Nina stroked her hands up Samantha's sides, below her sweater. \"Without even touching me.\"\n\nSamantha grinned. \"We must have come at about the same time, then.\"\n\n\"You came too?\" Nina laughed. \"I was so blissed-out I didn't even notice! Oh, that's awful.\" She looked up at Samantha with narrowed eyes, her palms reaching Samantha's underarms. \"I'll have to make damn sure to pay attention next time.\" Nina ran her fingers around to Samantha's breasts, feeling the lace, the softness, the pert nipples in the center of her palms. \"Wouldn't want to miss a thing like that.\" Squeeze.\n\n\"Mmm. Indeed.\" Samantha set one palm upon Nina's. \"But now I really do have to pee.\" With that, she wriggled over Nina to the edge of the bed, stood up, and moved shakily towards the ensuite.\n\nNina watched the turquoise fabric hugging Samantha's behind as she walked, reflected on how firm those perfect buttocks had felt in her hands. \"Did you really have to go, all that time?\" asked Nina, feeling a warm thrill of excitement in her belly.\n\n\"No, it just came on,\" said Samantha, over her shoulder, closing the door. \"I wouldn't have risked that for real,\" she called, muffled.\n\nMild disappointment - but it didn't make anything any different about the experience, or about how hard Nina had come, or about just how much that orgasm had taken out of her.\n\nNina breathed deeply, exhausted, Samantha's scent clinging to her. Idly, she reached down and felt between her legs.\n\nHot. Soaked. She parted her legs - a wet little sound - and laid a hand gently on her mons. Sensitive.\n\nShe heard a trickle in the next room.\n\nSamantha is in there. Panties around her ankles. Exhaling. Feeling sweet relief.\n\nNina's hand began to move almost of its own accord, the fabric of her underwear squelching.\n\nMaybe she's secretly into that too. Maybe... if I ask her nicely...\n\nImages flashed through Nina's mind. Samantha, grinding her pussy against Nina's mouth; but this time the panties grew wetter, this time something warm trickled through the fabric and over Nina's lips and down Samantha's thighs, this time Samantha shuddered with relief as well as ecstasy. This time, the floodgates opened.\n\nA flush from the ensuite. Nina's fingers crept under her panties, stroked through her pubic hair, made the briefest and most gentle contact with her clitoral hood - and the door opened.\n\nSamantha emerged, her sweater gone, and stood leaning against the door frame, smiling down at Nina.\n\n\"Get your hand out of your panties, Nina.\"\n\nNina drank her in, reluctantly withdrawing her hand. She let her eyes travel slowly up her friend's body; the inward curves and subtle ridges of her abdomen, her shallow navel, the just-about-visible line of her floating ribs...\n\nHer breasts, nestled in turquoise lace.\n\nNina had seen Samantha in her underwear before. Shopping trips with comfortably large changing rooms. Last-minute what-do-I-wear decisions. Samantha, oblivious of course, had been topless in front of Nina a few times - for a moment, her back turned, keeping up conversation while Nina reddened and looked at the floor, stealing occasional peeks at Samantha's muscular back, a glimpsed movement of breast, leaving her thrilled and guilty.\n\nThis was very, very different.\n\nNina watched as Samantha slowly brought her right hand up - that bicep! - and gave her right breast a slow, meaningful squeeze, watching Nina closely, her eyes narrowed, her pose casual.\n\nShe's enjoying this. She knows she has power over me, and she's enjoying flaunting it.\n\n\"Do you want me?\" asked Samantha, quietly.\n\n\"Yes,\" breathed Nina.\n\nSamantha smiled. \"You've seen me in my underwear before. Little peeks, here and there, naughty bunny.\" Her finger circled her nipple - pert, erect, just visible through the lace. \"But it wasn't like this, was it?\"\n\nNina felt light-headed. \"No, mistress.\"\n\nSamantha walked slowly towards Nina. \"Look at me, Nina.\" She tucked an errant lock of brown hair behind her ear as she walked. \"Look at me properly. You have permission, now. Take your time. There's no rush.\" She came to a stop, maybe two feet from the edge of the bed.\n\nSamantha placed the index finger of her right hand on her throat, and began to run it slowly down her chest. Nina followed its course.\n\n\"Do you like my neck, Nina?\"\n\n\"Yes, mistress...\"\n\n\"And my collarbone?\"\n\n\"It's magnificent, mistress...\"\n\nSamantha smiled. \"And my breasts?\"\n\nNina watched the way Samantha's fingertip slid smoothly over the soft flesh above her bra. She swallowed. \"Beautiful.\"\n\nSamantha paused to circle her areola, and continued down beneath her right breast. \"And what of my tummy?\" Her finger ran downwards, between the lines of her abdominal muscles.\n\nNina shivered. \"Lickable.\"\n\n\"I've put a lot of work into this tummy, Nina.\"\n\n\"It shows, mistress. You're very beautiful.\" Nina's voice lowered to barely more than a whisper. \"You're very strong.\"\n\n\"You'd better appreciate it,\" murmured Samantha. \"I want you to be properly appreciative of my belly, Nina. And I also want to reward you for being a satisfactory sex object. I won't have you thinking of me as unfair. So, you say you find my abdomen lickable. You may lick it once, now, if you please.\"\n\nNina looked up into Samantha's eyes. Samantha nodded, downwards.\n\nNina shuffled to the edge of the bed, and put out her hands - \"Stop right where you are, immediately,\" said Samantha, quietly. \"I didn't say you could touch me. Listen to my instructions, Nina, or I will punish you.\"\n\nNina felt an icy chill up her spine, and withdrew her hands. \"I'm sorry, mistress.\"\n\n\"Now, Nina, pay attention. You haven't lost your privilege of one lick, but I'm going to spell it out for you, so there won't be any more mistakes.\" Samantha pointed to just above her panties. \"You may lick me in one straight, vertical line, from here - \" her finger travelled to just below her breasts - \"to here. If you would like to explore, I will allow you to linger at my navel for two or three seconds. Do you understand?\"\n\nNina's breathing was becoming heavier, the anticipation building. \"Yes, mistress.\"\n\n\"Good.\" Samantha gently placed her hand on the back of Nina's head. \"Go ahead, Nina.\"\n\nNina shuffled forward, being careful to keep her hands behind her back.\n\n\"You'll find it easier,\" muttered Samantha, \"if you're not lying on your side, you silly girl.\"\n\n\"I'm sorry, mistress. Would you like me on my hands and knees?\"\n\nSamantha took her hand off Nina's head. \"That would be an improvement, yes.\"\n\nNina got onto all fours on the bed, conscious of her bare breasts swaying beneath her, her face an inch away from Samantha's abdomen. She felt Samantha's hand settle in on her head again.\n\n\"Very good, Nina. Now, wet your tongue, and take your lick.\"\n\n\"Thank you, mistress,\" murmured Nina, struggling to find enough saliva for the long journey ahead of her.\n\nShe stuck out her tongue, and let it touch Samantha, just at the very tip. As she slowly crept upwards, she allowed her tongue to flatten - as she passed Samantha's navel, she gently slid into the crevice, probing as much as she dared, for as long as Samantha had given her permission. She travelled upwards, feeling Samantha's hard abdominal muscles under her soft skin. Samantha's grip tightened in Nina's hair, pulling her back a little so that the top of her head wouldn't bump up against Samantha's breasts. At the prescribed stopping point, Nina leaned back and looked up, into Samantha's eyes.\n\nSamantha looked back. \"Did you enjoy that?\"\n\nMore than I thought I would.\n\n\"Yes, mistress. Thank you, mistress.\"\n\nSamantha grinned. \"Lie down again, Nina. When we left off, you were admiring me. I quite enjoy being admired, Nina. Let's continue, shall we?\" The finger drifted down. \"I noticed you lingering at my navel, Nina. Did you find it pleasant?\"\n\nNina looked at the stripe of her own saliva, shining on Samantha's skin. \"Yes, mistress.\"\n\nNina watched as Samantha dipped her fingertip into her moist navel. \"You left a lot of fluid in there, Nina.\" Samantha brought the fingertip to her lips, and touched the very tip of her tongue to Nina's saliva. \"I must say, what I've sampled of you so far has been quite tasty.\" She narrowed her eyes. \"If you're not careful, I might have to eat you alive after all. Now, where were we?\" Her fingertip travelled to the line of her panties. \"Do you like my underwear, Nina?\"\n\n\"Yes, mistress.\" Yes mistress indeed. The color is perfect against her pale skin.\n\n\"Then look closely, Nina. Follow my fingertip.\" It travelled downwards, over Samantha's pubic mound. \"Do you like this bump, here?\"\n\nNina smiled. \"Very much so, mistress.\"\n\n\"And further down...\" Samantha smiled back, tracing her finger around the curve and underneath her. \"This little damp patch on my panties. You did that, with your helpless squirming.\" Samantha lifted her left knee, and placed her foot on the bed. \"See the little wet line here, Nina?\" She ran the finger downwards, over her clitoris, between her labia. Then, she put the finger just beneath Nina's nose. \"And what of my scent?\"\n\n\"You're so beautiful,\" said Nina, breathing Samantha's musk, eyes on the soft, damp crease between Samantha's thighs.\n\nSamantha grinned. \"Yes, I am, aren't I? And if you're very good, Nina, I'll take off my underwear and let you lick me down there, too. And I love the way you shivered, just then. But first,\" the finger travelled further down, \"what do you think of my thighs?\"\n\nNina watched as Samantha gave her the tour. \"See the adductor, here? And the vastus medialis?\" Samantha's thigh seemed to change shape as Nina watched, different muscle groups shifting and tensing. \"Feel my thigh, Nina.\"\n\nNina did as she was told. Samantha's skin was warm and soft - she performed some complex series of tiny movements, and powerful muscles shifted beneath Nina's grip, turning from marshmallows to stone and back again. \"Do you feel that?\" asked Samantha. \"I had these around your neck, just a couple of minutes ago. Doesn't that frighten you, Nina?\"\n\n\"Yes, mistress.\" A comfortable truth.\n\nSamantha smiled. \"Good.\" She traced the line down to her calves, showing off each individual muscle in turn, and paused at her ankle. \"I never understood the fascination that some people have with feet.\" She raised her foot, so Nina could see her sole. \"Are you one of those strange little perverts who would be reduced to orgasmic delirium if I did this, Nina?\" With that, her big toe contacted, very gently, with Nina's lips.\n\n\"No, mistress,\" said Nina, Samantha's toe descending between her lips as she opened them. \"But your feet are so beautiful I may change my mind.\"\n\n\"Lick my sole, Nina,\" said Samantha, quietly. \"I want to know what all the fuss is about.\"\n\nNina did as she was told, her tongue moving in one slow line from Samantha's heel to between her second and third toes.\n\n\"Well, that was pleasant,\" murmured Samantha, \"but I can't say it made me any wetter. A little ticklish, if anything. Nonetheless, I may ask you for a foot massage sometime in the near future.\" She grinned. \"Did I just say 'ask?' What on Earth am I thinking of?\"\n\nHer foot left Nina's face and settled into the carpet. \"Shall we continue the tour from behind, Nina?\" She turned around, slowly. \"I know I've got you properly trained, or I wouldn't turn my back on you like this. I'm a sly, wily creature, you know. Now, do you like my hair?\"\n\nNina examined the chestnut waterfall. \"Very much so, mistress.\"\n\n\"Smell it, if you like.\"\n\nNina knelt up on the bed, nestled her nose into the warmth of Samantha's hair and breathed. She was surrounded by Samantha's scent - shampoo mostly, but deep, dark, rich Samantha beneath. She felt a powerful stirring in her tummy.\n\n\"I love you, Samantha.\" Her words were quiet, but meaningful.\n\nNina could tell from the sound of Samantha's voice that she was smiling. \"I love you too, Nina. Very much so.\"\n\nNina felt warmed by the way Samantha told her; a quiet, modest, everyday declaration. She found herself imagining the sofa on a rainy day, curled up with Samantha in front of a movie, hearing those words said so casually. As though it were a simple thing: \"I love you.\"\n\nSamantha looked back over her shoulder, eyes sparkling. \"It won't be a terribly effective tour of my back if this bra is in the way, will it? Unfasten it for me, Nina.\"\n\nYes. Oh God, yes please.\n\nNina reached up, took the clasp in her hands, and struggled awkwardly.\n\n\"Having trouble, little rabbit?\"\n\n\"My hands are shaking, mistress - there.\"\n\n\"Good girl. Lie back down again.\" Samantha shrugged her bra off. Nina saw the edges of her breasts sway as they were released. \"Now, observe what I've done to this body.\" She raised her arms, letting Nina watch the movement in her shoulder blades, the motions of bands of muscle far down to her lower back. \"What of my shoulders? See how they move when I do this?\" She rotated her left arm, bent it at the elbow, showed off her range of motion.\n\nNina watched, enthralled, her eyes travelling from shoulder to back to bicep. And I thought I'd already realized how strong she was - how deliciously frightening and thrilling that could be.\n\nI've never made love with a \"strong person\" before. Just normal people.\n\nShe's not a normal person.\n\n\"My back, and my shoulders and arms, are like this, Nina, so that I can pick up people who for whatever reason just won't calm down, and hit them with the biggest and heaviest thing I have available to me, which is quite often the planet Earth.\" She looked back over her shoulder. \"My tummy is like that so that I can laugh when people try to knock the breath out of me. But my breasts, Nina...\" she reached up and squeezed - Nina saw just the very edge - \"they're different. They're like this - big and soft and round - so that you can feel them, and squeeze them, and suck on them, and tell me that you love me.\"\n\n\"I love you.\"\n\nSamantha smiled. \"All in good time. We haven't finished my back, yet. And we're just getting to the best part.\" She looked forward, bent over just the tiniest measure, reached her hands behind her, and gripped her firm, toned bottom. \"A set of three muscles per buttock, with the largest being, of course, the famous gluteus maximus.\" She slid her left hand up to her lower back, and tensed her left buttock. \"See?\"\n\n\"Magnificent, mistress.\"\n\n\"But what am I thinking?\" Samantha looked back over her shoulder. \"Not much of a tour if everything's wrapped up in these panties, is it?\" She grinned, eyes narrow and sly, and parted her legs slightly. \"Pull them down for me, Nina.\"\n\nNina hesitated, ran the words through her head again, made sure she'd heard correctly - and shivered. She knelt up, and placed her hands on Samantha's hips.\n\n\"Slowly,\" said Samantha.\n\nNina took a deep breath, let it out, began to edge the fabric down. Inch by tortured inch she revealed her best friend's bare behind, the panties sliding smoothly over soft skin. She reached the fold where Samantha's buttock met her thigh, and continued down to halfway down her thighs before letting go. The panties fell and puddled around Samantha's ankles, and Samantha stood breathtakingly naked in front of Nina, grinning back down over her shoulder.\n\n\"Do you like my ass?\"\n\nNina swallowed. \"Yes, mistress.\"\n\n\"Good,\" said Samantha, \"because I don't show it off to just anyone, you know.\" She raised her right leg outwards, pivoting her torso slowly around her hips to the left, as she spoke. \"Not a lot of people appreciate the mechanical perfection of my bottom, Nina. And by the way, if I catch you trying to sneak a look at my genitals while I'm doing this, I'll spend some time appreciating your bottom in a way you won't enjoy.\" Samantha's body described a T-shape, her left foot on the floor, her right leg at ninety degrees to her left, aligned with her torso. \"Just look at my glutes, that's enough for now.\"\n\nBut I could move one inch and see your pussy, moaned Nina inwardly. \"Yes, mistress,\" she said, reluctantly.\n\n\"See how the three different muscles interact?\" Samantha let her foot down, became upright, legs apart, the Eiffel tower. \"See what happens when I do this?\" She brought her feet together, raised a knee, placed one foot in front of the other, her muscular buttocks shifting, making new curves. \"Everything is more interesting if it's moving, don't you think?\"\n\n\"True, mistress.\"\n\nSamantha looked over her shoulder, and smiled. \"Am I being exceedingly cruel, Nina? Showing you my bare bottom like this, not letting you touch me, not letting you touch yourself, not moving just that one degree more so that you can finally see my pussy, like you've fantasized about? Is it not the most exquisite torture?\"\n\nNina shuddered. \"Yes, mistress. I am in such agony.\"\n\n\"Lovely,\" said Samantha, softly. She lowered her voice. \"Would you like me to lean forward and touch my toes?\"\n\n\"Yes, mistress!\"\n\nSamantha's smile grew broader. \"Beg me, then. I like it when you beg me, Nina.\"\n\n\"Please, mistress!\" Nina brought her hands together, laced her fingers. \"Please! Please show me, please touch me, please let me touch you! I beg of you!\"\n\nSamantha looked at the ceiling, pouted, an exaggerated expression of contemplation. \"That's some good begging. It's making me even wetter. But, you know...\" she looked back over her shoulder. \"I hear you say those words, but what I think you really mean is, 'Please, Sam, don't give me what I want. I love to be tortured, I love to be deprived, I love to be frustrated. I love the power you have over me.'\" She locked eyes with Nina. \"Isn't that true?\"\n\nNina looked up at Sam, opened her mouth, closed it again, looked down, and whispered \"Yes.\"\n\nSamantha scowled. \"Yes what, you little bitch?\"\n\nNina recoiled from the words, a shiver running through her. \"Yes, mistress,\" she whimpered.\n\n\"You'll have to be punished, for that,\" murmured Samantha. \"But you've put me in an awkward situation. If I turn around to punish you, you'll see what you want to see. If I kick backwards and pin your neck with my foot so that I can shout at you while you're truly helpless, you'll just spend the whole time gazing at my beautiful crotch until you pass out from oxygen deprivation.\"\n\nThe image flashed across Nina's mind - Sam pinning her helplessly to the bed, her foot putting pressure on her throat, and Nina smiling, gazing at her best friend's glistening pussy and the delicious curves of the underside of her butt, the world going grey, while said best friend stood with hands on hips, ranting over her shoulder about how she really mustn't be so disrespectful - and her lips curled up into a grin of their own accord, her diaphragm began moving by itself, and trying to fight the laughter only made it stronger...\n\nShocked at herself, terrified, she screwed her eyes shut and lowered her face and tried to stop, but the image lodged in her head as clear as day, and she knew that if she didn't stop soon she'd blow it, she'd be left sitting alone on Samantha's bed with her promise to never laugh at her lying shattered...\n\nAnd then she heard Samantha snorting, snerking, struggling not to laugh herself.\n\nShe opened her eyes, and Samantha stood facing her, nude and glorious, laughing with her, and Nina felt no more need to hold back.",
        "They laughed together until Samantha put a hand on her belly and Nina's eyes started to stream.\n\n\"Talk about - hnk-\" said Samantha, in between fits of giggles, her breasts jiggling deliciously with every exhale - \"talk about a release of tension!\"\n\nOf course, this was the funniest thing that Nina had ever heard, and it set the two of them off again.\n\nAt one point, Samantha managed to get out \"It wasn't even that funny!\" before dissolving back into joyous giggles.\n\nFinally the laughter died down - after one or two flare-ups caused by Samantha and Nina looking at each other - and Samantha stood naked in front of Nina, teeth visible, eyes wrinkled.\n\nShe glanced down, then looked at Nina again. She raised an eyebrow, and held up one breast, bigger than Nina had expected, her nipple soft and tan.\n\n\"Like my boobs?\"\n\nNina laughed. \"Yep.\"\n\nSamantha stroked a finger through neatly-trimmed, dark brown pubic hair. \"Like my cooch?\"\n\nNina grinned, and winked. \"Best damn cooch in town, Sam.\"\n\n\"Good. C'mere.\"\n\nWith that, she pounced, shaking the bed as she landed on top of Nina, taking her own weight on her toes and fingertips, and pressed her lips to Nina's.\n\nNina kissed back, wrapped her arms around Samantha as Samantha settled in, letting her weight down bit by bit - first her breasts touched Nina's, then they pressed softly against her, then Samantha's belly made contact and her hips slid between Nina's thighs. Nina parted her lips and pushed her tongue urgently into Samantha's mouth, sliding her right hand down to Samantha's smooth, firm left buttock and giving it a hard, meaningful squeeze.\n\nSamantha moaned appreciatively into Nina's mouth - delicious little vibrations - and drew back, deep smiling hazel eyes looking brightly into Nina's.\n\n\"God I love you, Nina.\"\n\nNina smiled back, and ran a finger through Samantha's hair, down her soft, smiling cheek, under her gorgeous chin. \"Make love to me, Sam.\"\n\n\"Get those undies off right now, Nina.\"\n\n\"Faster if you do it.\"\n\n\"Right you are,\" said Samantha, and within one second she was tugging on Nina's underwear.\n\nNina arched her back, watched Samantha's greedy eyes as they scanned her, took her in - a tug, and her panties were around her knees, her genitals exposed to her best friend and new lover. Another tug, and they were gone, Nina shaking them off her ankle and into Samantha's fingers like a farewell.\n\nSamantha locked eyes with Nina, grinned, and tossed the underwear over her shoulder.\n\n\"No more waiting,\" she murmured, sliding up Nina's body, her breasts soft against Nina's belly. Their noses touched, slid to the side, Samantha's lips pressed against Nina's, and then Nina felt a hand on her breast.\n\n\"Mmmph,\" said Nina.\n\n\"Mmm-hmm,\" said Samantha, and pulled back. \"God, do you have any idea how hard it was for me not to do that?\" Her splayed fingers stroked across Nina's nipple, making her cry out. \"I had to stand there and be all 'No, can't touch your boobs because you'll like that,' and there they were, being all...\" she grinned, looking at Nina's chest. \"Mmm.\"\n\nNina smiled, feeling Samantha's fingers stroke firmly over her left breast. \"All 'mmm?'\"\n\n\"All...\" Samantha leaned down. Nina felt hot breath, sudden wetness, her nipple sucked into Samantha's mouth. \"Mmm.\"\n\n\"Oh God...\" Nina slid her fingers into Samantha's hair as Samantha's hand settled on her right breast, stroking, squeezing gently, her fingertips finding Nina's pert nipple. She felt Samantha's tongue slither around her left areola, flick across the very tip of her nipple, suck more of her breast upwards, pressure, gentle teeth on her breast. With a quiet, wet sound, the seal broke, and Samantha licked Nina's left breast, once, from her ribcage over her nipple to her collarbone to her neck to behind her ear.\n\nNina's thighs rose of their own accord, her hand slid downwards without her conscious knowledge, and smooth, bare Sam-butt touched Nina's palm. She gripped. She squeezed. She moaned.\n\n\"As if I could stand there and not make you come,\" murmured Samantha into Nina's ear, her grip tight on Nina's right breast. \"I was born to make you come.\" She kissed Nina, forcefully. \"God your hand feels good on my ass. Squeeze, love, I like being squeezed...\"\n\nNina took hold of Samantha's bottom in both hands, and tightened her grip; soft skin over firm muscle, toned, undeniably sensual.\n\n\"Mmm, yes... Harder...\" Samantha's hands were on Nina's face, her eyebrows arched upwards in the center, her eyes closed, moaning, stroking Nina's cheeks, her hair, her grip tightening. Another urgent, pleading kiss, her tongue pushing deep into Nina's mouth.\n\nNina squeezed as tightly as she could, feeling Samantha's hips slide backwards so that her bottom pressed firmly against Nina's grip, Nina's fingers delving into the warm place between Samantha's buttocks. Samantha pulled back, moaning.\n\n\"Give me your tits,\" breathed Nina, Samantha's saliva trickling from her lips.\n\n\"Okay...\" said Samantha, similarly breathy, shifting onto her shoulders, arching her back.\n\nNina's hands left Samantha's bottom and slid up her sides. Samantha's full, round breasts swayed three inches from Nina's eyes and lips, Samantha's nipples pert and wrinkled. Nina gripped with her right hand - soft, heavy, warm, shaking in time to a racing heartbeat - and opened her mouth. Samantha, obligingly, lowered - Nina took a deep breath and felt Samantha's warmth and softness envelop her face, lie heavy on her nose. She sucked, greedy and urgent and indulgent, feeling Samantha's labored breathing, hearing her moans of unabashed pleasure. She found Samantha's nipple - Sam's nipple is in my mouth! - and slid her tongue over it, around it, gave her other nipple a playful tweak between her fingertips, felt Samantha shudder, heard her squeak.\n\nSuddenly this is all happening so fast.\n\nAlso, I can't breathe. I am literally drowning in Sam's boobs.\n\nNina chuckled - the beautiful sound of laughter through a mouthful of breast.\n\nSamantha pulled back. A droplet of Nina's saliva dripped from the tip of her nipple onto Nina's lips. \"Are you choking?\"\n\nNina laughed. \"What is it with me today? Why is suffocation so funny?\"\n\nSamantha smiled, and rolled onto Nina's right side. Nina rolled to meet her, Sam's left hand under her waist and gently gripping her left buttock, her right lying across her hips.\n\n\"I'll choke you sometime, if it'd do anything for you,\" murmured Samantha. \"I know some people like that. Once you show me how, I mean.\"\n\n\"If today's anything to go by, it'd probably just make me laugh,\" said Nina. They kissed - tender, this time, Samantha's hand gently stroking Nina's ass. Through some complicated physical negotiation, Nina got her right arm around Samantha's shoulders, leaving her left hand to fondle and caress Samantha's chest.\n\nNina pulled back from the kiss, and looked down. Samantha's glorious breasts, of which she had one overflowing handful. Samantha's tummy, still lickable. An inverted triangle of dark pubic hair. Samantha's thighs - her right thigh rising.\n\nNina looked up, into Samantha's eyes. They were wrinkled at the edges, full of joy and dawning love. \"Touch me?\" asked Samantha.\n\n\"Yeah,\" agreed Nina, stroking her left hand down Samantha's belly.\n\nHer fingertips touched Samantha's pubic hair - already she felt the heat, the humidity. She slowed, felt the inward curve of Samantha's vulva, the softness of it. She slid her hand underneath her best friend, and cupped Samantha's pussy. Her palm wettened against a hot, slippery inward fold.\n\n\"Oh...\" moaned Samantha.\n\nNina curled her middle finger, just the slightest touch - she put pressure just behind Samantha's vulva. She brought her hand upwards and her finger slipped in between Samantha's labia, instantly soaked in warm, slick fluid. Samantha jumped and shivered in Nina's arms. Nina applied pressure with the inward joint of her mid knuckle, burying her middle finger vertically in between Samantha's wet, aching lips, slithering slowly upwards until she felt Samantha's clitoris slide over her finger.\n\n\"Ah!\" cried Samantha, her eyes closing, her grip tightening almost painfully on Nina's bottom.\n\n\"You're so wet,\" murmured Nina.\n\n\"F-f-\" Samantha screwed her eyes shut, looked down, bit her lip, held Nina close. \"For you, m-my love...\"\n\nNina smiled, and began to move her hand back and forth, coating it in Samantha's wetness. She watched Samantha squirm and wriggle, listened to her moans and cries. Samantha's pussy was hot, slick, intimate. She fondled Samantha's clitoris, ran her fingers through her labia, stroked gently around her vagina - not yet penetrating her, just teasing, saying hello. Within a very few strokes, Samantha was incoherent, her cries growing louder and higher.\n\nNina continued stroking between Samantha's lips, the soft bump of Sam's clitoris on her palm. Samantha opened her eyes, her eyebrows raised in agonizing pleasure, and locked eyes with Nina.\n\n\"Yes,\" said Nina, looking deep into Samantha's eyes, \"watch me. Watch me watch you. I want to make you come. I want to watch you come, this time.\"\n\nSamantha bucked, her head moving back and forth, her teeth visible and shining, her eyes wet. \"Djh!\" she said. \"Nnn - s-so c-c-\"\n\nNina smiled. \"Come for me.\"\n\nSamantha's eyes widened. Her grip on Nina's buttock tightened, her fingers digging in between. Her thighs shook, her tummy trembled, and still she did not close her eyes or look away. \"Oh!\" she cried, her eyes glistening, her thigh closing and tightening on Nina's hand. \"O-o-OH!\" Her breasts shook, swayed, trembled with her convulsion. Nina's hand wettened. \"Oh! M-my! Goodness!\"\n\n\"Oh my goodness?\" She says \"Oh my goodness\" when she comes?\n\nAwesome!\n\nNina watched her best friend orgasm in her arms. And it was a big one. Samantha shook and trembled in waves, her whole gorgeous body rhythmically spasming, still looking earnestly into Nina's eyes.\n\n\"Hunuh!\" said Samantha. \"Nuhnuhnuhnuhnuh!\"\n\n\"Really?\"\n\n\"Hebene!\"\n\nNina grinned. \"That so?\"\n\nSamantha's teeth clenched, her buttocks tensed, her thighs clamped painfully onto Nina's hand, encasing it in hot woman - Nina felt the ring of slippery muscle at the entrance to Samantha's vagina clenching, almost trying to envelope Nina's fingertip.\n\nIn there, next, thought Nina, as Sam said something like \"Jhst!\" and sprayed Nina's lips with a fine mist of hot saliva. Inside Sam. All the way inside.\n\nNina watched, looking deeply into Samantha's eyes, feeling touched deeply herself.\n\n\"I love the noises you make, Sam.\"\n\n\"Hurrurrurr... rrr...\"\n\nFinally the convulsions spread out, faded, leaving behind only little tremors and aftershocks. Samantha exhaled, still looking into Nina's eyes.\n\n\"Than-\" her hips spasmed, and she tried again. \"Thank you.\"\n\nNina grinned. \"Any time, Sam.\" She closed her eyes, leaned in, touched Samantha's lips with her own, bringing up her wet left hand and hugging as close as she could, pressing herself deeply against Samantha, warm and supple and damp with sweat.\n\nThe kiss broke, and Nina felt Samantha's head go to the side of her own, Samantha's embrace tight, almost painful. \"I haven't come like that since...\" Samantha laughed - Nina felt every chuckle as though they were her own. \"Oh God, I don't even know how long!\"\n\nNina grinned. \"Want another?\"\n\nSamantha pulled back, looked into Nina's eyes, grinning herself. \"Definitely. But I want to make you come, too.\"\n\nNina freed her right hand from underneath Samantha, and with it, took hold of Samantha's left breast. \"Together?\"\n\nSamantha smiled. \"If I can concentrate, while you're doing that to me.\"\n\nNina parted her thighs. Samantha looked down.\n\n\"Door's open,\" said Nina, and kissed Samantha, briefly, tenderly. \"Come on in.\"\n\nSamantha's hand found Nina's abdomen, between her navel and her pubic hair. \"I - Nina, this...\"\n\n\"What is it, Sam?\"\n\n\"This may not be the best time to mention it, but...\" she looked up, into Nina's eyes. \"Well, I...\" she looked down. \"You might have to be patient with me. I'm...\"\n\nNina looked into Samantha's eyes. \"Is this your first time with another woman, Sam?\"\n\nSamantha chuckled - to Nina, it seemed a little nervous. \"Well... yes.\"\n\nNina hesitated. Careful, Nina. She's made herself very vulnerable to you. Don't screw this up.\n\n\"And you made me come that hard?\" said Nina. \"And you'd never done this before?\"\n\nSamantha smiled - a little modestly, perhaps.\n\nShe's smiling. Keep it up.\n\n\"My God, Sam,\" said Nina, playfully squeezing Samantha's left breast, \"what're you going to be like once you've figured out my buttons?! That was the baseline, without any practice?\"\n\nSamantha's cheeks, already reddened, began to flare. \"Really, though, I wasn't even trying to make you come, that time...\"\n\nNina laughed. \"'I wasn't even trying,' she says!\"\n\nSamantha chuckled. \"You know what I mean. It's hard sometimes to repeat something you did by accident. I don't know how to... y'know, how to touch you.\"\n\n\"Then don't worry about making me come, Sam,\" said Nina, quietly, stroking her left hand downwards over Samantha's tummy. \"Explore me. Get to know me, down there, and if I come, I come - and if not, then I'll come later.\" She touched her lips to Samantha's. \"Even if you don't know what you're doing, you'll get the idea and I'll come sooner or later. Are you in any huge hurry?\"\n\nSamantha giggled. \"It is only midday.\"\n\n\"Wanna make love to me for hours, Sam?\"\n\nSamantha looked at Nina, lovingly, her eyes softened. \"As long as either of us has the strength to move.\"\n\n\"Touch me, Sam.\" With that, Nina slid her fingers through Samantha's pubic hair, and buried her middle finger between Samantha's labia.\n\n\"Oh...\" breathed Samantha, and moved her fingers downward, slowly. Nina raised her knee a little higher, languorously moving her hand back and forth from Samantha's vagina to her clitoris and back again, watching her face.\n\n\"Feel me,\" breathed Nina, tingling, as Samantha's finger stroked delicately over her clitoral hood. \"Every inch.\"\n\nSamantha's fingertip slid between Nina's labia, gentle, cautious. Nina's breath caught - \"Mm. Yes...\" she closed her eyes, moving her finger back and forth in Samantha's wetness. \"That feels good, Sam. Keep going.\"\n\n\"You're so wet,\" murmured Samantha, her fingertip circling the entrance to Nina's vagina. \"Can I go inside a little?\"\n\nNina opened her eyes, stroking a finger over Samantha's erect nipple, watching her tremble. \"Yes.\" She slipped her own fingertip a little lower, pushed gently against Samantha's opening. \"May I touch you inside too, mistress?\"\n\nSamantha shivered. \"Together.\"\n\n\"Mmm...\" Nina pressed her lips to Samantha, straightened her index finger, and pushed slowly into Samantha's vagina. Samantha let out a happy sigh into Nina's mouth, and Nina felt herself penetrated, Samantha's finger sliding through her opening and deep inside her, delightfully full.\n\nTwo quiet squelches, two soft moans.\n\n\"Oh...\" breathed Samantha.\n\n\"That feels wonderful,\" said Nina, dreamlike.\n\n\"You're all... You're...\"\n\n\"Tell me, Sam. What do I feel like?\" Nina felt Samantha's finger begin to move inside her, timid but curious.\n\n\"Warm, and...\" Samantha let out a funny little squeak, and Nina felt Samantha tighten around her finger. \"And soft, and slippery, and, and alive...\"\n\nNina clenched. \"Feel that?\"\n\nSamantha only moaned in response, and clenched down herself, tightening and gripping around Nina's finger. Nina curled her hand around Samantha and pushed in deeper, up to her knuckle. She felt Samantha do the same, feeling slippery friction inside and out, tingling, warming.\n\nSamantha looked down. She smiled. \"I'm up to my knuckle in you... I've never been inside someone like this.\" She looked into Nina's eyes. \"I can feel your heartbeat.\"\n\nNina grinned. \"Isn't it awesome?\" She slid backwards inside Samantha, felt her smoothness and her textures, then curled her fingertip towards Samantha's navel.\n\nSamantha's eyes widened. \"Ah!\"\n\nNina laughed, kissing Samantha's smooth neck, her fragrant hair tickling Nina's cheeks. \"Nice?\"\n\nSamantha giggled into Nina's ear. \"Very. Where's yours...\"\n\nNina felt Samantha's finger wriggle around inside her, searching, probing. She moaned, and began to buck her hips, the glow intensifying inside her. \"It's somewhere in there... Back out a little...\"\n\nWith a tiny sucking sound, Nina felt herself empty.\n\n\"Whoops,\" said Samantha. \"Too far... but what's this?\"\n\nThe sun rising inside Nina gave way to sparks as Samantha's fingertip slid upwards over her urethra to touch her clitoris. She cried out, and squeezed Samantha's breast.\n\n\"A button!\" said Samantha, ecstatic, her fingertip moving.\n\nNina's eyes closed as she moaned, her hips writhing, something building inside her. \"Oh God, Sam...\" Her left hand curled, her finger inside hot, pulsing Samantha, the knuckle of her thumb gentle on the nubbin of Samantha's clitoris, her thumbtip touching moist pubic hair, her palm slick and warm.\n\n\"Am I doing it right?\" asked Samantha, her breathing fast and heavy.\n\n\"Yes!\" cried Nina.\n\nSamantha's fingertip accelerated - and Nina felt the wet lips of her pussy gently pushed apart, and two fingers sliding up inside her, a third finger gently gripping between her buttocks.\n\n\"It's like a little joystick!\" cried Samantha.\n\nNina burst into laughter - which tightened her around Samantha's fingers, brought a rush of oxygen into her lungs, threw the first wave of her orgasm against her like a tsunami of rocket fuel, and hurled her merrily into orbit.\n\nBlast off.\n\n***\n\nShe's coming! thought Samantha. I'm making her come!\n\nSamantha gazed lovingly into Nina's closed eyes, watched her writhe and jerk, listened to her joyous cries.\n\nI did that! On purpose this time!\n\nSamantha watched a droplet of sweat run between Nina's shaking breasts. Her vision blurred a little.\n\nThis is so beautiful. Look at the redness in her cheeks. Look at the way she's moving. Look at her eyes, closed in ecstasy...\n\nNina's eyes opened, her hips bucking, and she gazed back at Samantha as she rode her orgasm.\n\nOh!\n\nSay something! Say it sexily, too!\n\n\"Come for me, love,\" purred Samantha.\n\nNina screwed her eyes shut, threw back her head, and let out an inhaling yell - her grip tightened on Samantha's left breast, and Samantha felt her finger moving inside, deep and firm.\n\nSamantha clenched around Nina's finger, remembering how good it felt when Nina did the same to her. She squeezed Nina's buttock tightly, hoping that she liked that too.\n\nKeep up the stimulation, Sam - keep touching her like that, that's good, no need to vary right now. She's happy.\n\nI'm happy.\n\nSlowly, the spasms faded out, decreased in both intensity and frequency, and Nina panted against Samantha. She twitched, around Samantha's fingers. Samantha kissed her tenderly on the top of her head.\n\n\"Wow,\" panted Nina, and swallowed.\n\nSamantha rested her face on top of Nina's head, and breathed in the scent of her hair. She gave Nina's finger a little squeeze - feeling deliciously full and content.\n\nShe sniffed.\n\nNina moved against her, looked up. Her expression changed.\n\n\"You okay, Sam?\"\n\nSamantha sniffled some more. Oh, don't be silly now, Sam...\n\n\"I'm better than okay,\" she said, her voice unsteady. \"That was the most beautiful thing I've ever seen.\"\n\nNina smiled. Her hair was messy, her cheeks were red, and she was sweating. It was a good smile. She leaned towards Samantha and kissed her tenderly just below her left eye, removing the tear before it went further. Then her lips were against Samantha's - soft, tender, slow.",
        "Meaningful.\n\n\"You did that, Sam.\"\n\nTell her. Tell her, because it feels so good when you tell her, and it feels so good when she tells you.\n\n\"I love you, Nina.\"\n\nNina's finger resumed its movement - slowly, lovingly stroking inside of Samantha. \"I love you too, Samantha. Deeply. I've loved you for a long time, now.\"\n\n\"So have I,\" said Samantha. She sniffled. \"Conned myself into thinking it was platonic, until very recently. Maybe it was, for a little while.\"\n\nNina grinned. \"That's where we differ, me being a horny little animal and all.\" She touched Samantha's clitoris, softly, with the palm of her hand. An intimate, and yet - counter-intuitively - calming touch. \"I've pretty much always wanted to pounce you.\"\n\nSamantha laughed, gently sliding her fingers out of Nina. Her vagina made a wet little sound that sounded to Samantha like longing. Her fingers felt cold, outside of Nina. \"I promise this won't happen every time,\" she said, wiping around her eyes with the back of her hand. \"Just... got a little overwhelmed, there, when I saw you have your orgasm.\"\n\n\"It's okay,\" said Nina, her finger slowing, coming to a stop. \"We can cuddle for a while, if you'd like.\"\n\nSamantha heard Nina, and understood - a break for a lazy cuddle did sound nice, and they could always have more intimate fun later. But...\n\nLook at the way it moves on my fingers.\n\n\"Maybe...\" said Samantha, indecisive. She parted the two fingers close to her eyes, watched Nina's fluid briefly web between her fingers, sticky and slippery at once. The scent had a familiar theme - like Samantha's own genitals, but with subtly different notes. Lighter. Sweeter, almost.\n\nShe was suddenly conscious of Nina watching her. She refocused, looking through her fingers at Nina.\n\nIs this strange? To smell you, and not be coy about it?\n\nSamantha grinned, opened her mouth, and touched her wet fingertips to her tongue. She looked into Nina's eyes as she tasted her juices - the flavor was subtle, tangy, organic. She gave up any pretense at subtlety and closed her mouth around her knuckles, sucking unashamedly, watching Nina's pupils widen, feeling her finger begin to move again.\n\nI'm tasting Nina's pussy.\n\nIt's not too bad.\n\nThe flavor diminished, Samantha slowly brought her fingers out of her mouth, sucking to the tip. She smiled, licked her lips, and clenched her pussy around Nina's finger, and squeezed Nina's buttock in her left hand.\n\nI can be sexy. Even ten seconds after being all teary, I can totally be sexy. Even when my left hand's been under Nina's butt for so long that it's completely fallen asleep, I can still be sexy.\n\nNina swallowed. \"You, Sam, are sexy.\"\n\nSamantha smiled, proud and vain. \"I know.\"\n\n\"Do I taste okay?\"\n\n\"You taste like happiness.\" Samantha hesitated. \"Also pussy. You taste like pussy. Your pussy, I mean, not you in general. Your pussy tastes like pussy, is what I'm saying.\"\n\nOh, Sam, that was smooth.\n\nNina grinned. \"It's an acquired taste.\" Samantha felt Nina's finger slide out of her - a sudden empty feeling. \"Takes some getting used to, that first time, huh?\" Nina brought her hand up to her lips.\n\nSamantha moved, her mouth open, and ambushed Nina's finger. It had a flavor.\n\n\"That's not fair,\" said Nina. \"Mmm. And it's especially unfair of you to make me enjoy it,\" she murmured, as Samantha rolled her tongue around Nina's fingertip, tasting herself - richer and darker than Nina, more flavorful, contrasting, bitter.\n\nOdd that my own taste should be more objectionable.\n\n\"Easy prey,\" muttered Samantha, as Nina reluctantly withdrew her finger.\n\nSamantha locked eyes with Nina, and leaned forward until they touched noses. She grinned, wide and hungry.\n\n\"I want more.\"\n\nNina touched her lips to Samantha's, briefly. Then, she rolled over onto her back. \"Are you sure?\"\n\nSamantha looked down the length of Nina's body - scanning over her breasts, her tummy, settling on her crotch. \"I want to try.\"\n\n\"Take your time,\" said Nina, quietly, and parted her legs.\n\nSamantha mounted Nina.\n\nPress your boobs against her, she seems to like that.\n\nSamantha lowered herself, and slipped her tongue into Nina's mouth.\n\n\"Mmmph,\" said Nina, and she gave Samantha's bottom a gentle squeeze.\n\nGonna have to tell her I like my butt-squeezings a lot harder than that. Maybe I should ask her for a spanking. Samantha smiled, which made it hard to continue kissing. That'd be a turnaround. We could be spanking buddies! She turned her attention to Nina's neck, licking and nibbling. We could bicker about whose turn it is to get spanked. She breathed, hot, onto Nina's collarbone, listening to her contented, lustful sighs. We could get paddles and such. I'd be her dominatrix, but every now and then she'd give me a spanking - that works, doesn't it? Is that against the rules?\n\nShe proceeded lower.\n\nI love Nina's boobs. Samantha took one breast in her hand, squeezed gently, and slowly dragged her teeth across the soft flesh. Nina wriggled pleasingly below her. She sucked, briefly, on Nina's nipple, swirling her tongue around the areola - but we've got business elsewhere. Note to self; just suck on Nina's tits for like half an hour, later.\n\nShe travelled impatiently down Nina's abdomen - Note to self; lick every inch of her for like half an hour per square half-foot, later - until Nina's pussy was in sight.\n\nSamantha stared.\n\nOnly really caught a glimpse before. I was so impatient to get back to hugs and kisses and touching.\n\n\"Like what you see?\" asked Nina.\n\nSamantha looked up - because she knew Nina would be smiling, didn't want to miss any smiles. She wasn't disappointed, and she returned the smile with one of her own. \"You're so beautiful, Nina.\"\n\n\"Thank you. Sam, take your time. Really. You don't have to jump straight into making me come again.\"\n\nSamantha nodded, turning her gaze back between Nina's legs. \"Oh, I plan to have a good look round first, if that's okay with you.\"\n\n\"More than okay - ah!\"\n\nWhat was that? Oh, breathing on her. Right. Samantha grinned.\n\nNina's vulva described a glistening vertical line, soft-looking outer lips, the slick inner lips just barely peeking between, a pert swelling above. Samantha gazed happily at her best friend's most intimate place, and reached out a finger - almost reverently - to stroke gently between Nina's labia and her thigh. The entire area was slick.\n\nSamantha closed her eyes and breathed deeply. That's her scent. Stronger, down here. This is what Nina smells like when she's in the throes of ecstasy.\n\nI should look. She's letting me look at her. She's letting me take all the time I want to explore her.\n\nSamantha reopened her eyes, touched Nina's labia with the index and middle fingers of her right hand, and carefully, delicately opened Nina up. There was a warm, slippery sound, and a contented exhale from Nina.\n\nSamantha felt her breath catch in her throat. I'm looking right into Nina's open pussy. Right inside her.\n\nNina's insides were champagne pink, and shining. Lighter and richer in color than the rest of her crotch - her inner labia were small, interestingly textured.\n\n\"You're dripping,\" said Samantha, breathless.\n\n\"This surprises you?\" said Nina.\n\n\"I suppose it shouldn't...\" Samantha ran a careful finger over Nina's inner labia, first the left and then the right - so soft and pliant that they were hard to even feel. She dipped her fingertip into the well of warm, pale juices collecting at Nina's vagina, and pulled back, watching a strand of fluid form between their bodies, sparkling before breaking.\n\nShe looked up, to see Nina watching her. She grinned at Nina, then looked down, to her fingertip - she pushed it gently inside Nina, to the second knuckle, watching the way Nina's lips slipped inwards to caress Samantha on her way in. Nina wriggled, and squeezed Samantha's fingertip. Samantha slithered backwards and out, brought her fingertip to her mouth, sucked. Looked at Nina.\n\nSamantha smiled, let Nina's labia slip back together, and closed her eyes, feeling the warmth of Nina's pussy on her nose, her lips. She took hold of Nina's hips and slowly lowered her face until she felt pubic hair tickle underneath her nose, something wet and soft barely touching her top lip, the warmth of Nina's thighs covering her ears. She took a long, deep breath, inhaling Nina's musk, taking her in.\n\nTenderly, languorously, Samantha kissed Nina's vulva.\n\nNina moaned - it sounded relieved and content. Samantha kissed Nina's pussy as though it were her lips, Nina's juices flowing onto her skin.\n\nSuch a strange quality to Nina's wetness. Neither thick nor thin, almost oily.\n\nShe parted her lips a little, angling just slightly to the left, and gently sucked Nina's right outer labia. The tip of her nose wettened as Nina sighed happily. Samantha half-opened her eyes, to watch Nina through the blur of her pubic hair.\n\nThe things she does with her eyebrows!\n\nSamantha brought her tongue forward.\n\nLet me taste you... from the very source...\n\nSamantha opened her mouth a little wider and, tentatively, cautiously, slid her tongue in one soft, long, wet upward stroke. She felt the tip of her tongue sinking into the deep, hot, flavorful opening of Nina's vagina, then the slick folds of her labia on either side, then - with an accompanying \"Ah!\" from Nina - the tiny bump of her clitoris.\n\nSlow, slow, slow. Like she said, take your time.\n\nShe watched Nina's face as she moved her tongue in a tiny circle, running her tongue first leftwards between Nina's labia and her clitoral hood, then over the top and down the other side, through those sweet, fragrant folds - then, with an impish grin, Samantha flicked her tongue upwards, just once, directly against the sensitive nubbin of Nina's clitoris.\n\nNina gripped the bed, her back arching.\n\nFuck \"slow.\"\n\nSamantha grinned, closed her eyes, and buried her face in Nina's pussy.\n\n\"Oh, God!\" cried Nina, her hands suddenly in Samantha's hair.\n\nSamantha frolicked in Nina, slithering an insatiably curious tongue between every fold, across every crevice and protuberance, relishing the differences in texture, heat and flavor between one area and the next. She licked the smooth, slick softness between Nina's lips; she licked the warm, hairy coarseness to the sides and above. She felt the resistance of her most sensitive point; she tasted shallowly at the entrance to her inner depths.\n\nAnd why shallowly?\n\nSamantha straightened her tongue, opened her mouth wide, settled her teeth on Nina's pubis and pushed her tongue through a circle of tightness and inside Nina, as deeply as she could.\n\n\"Oh, Sam!\"\n\nSamantha tightened her grip on Nina's hips, swirling her tongue around inside her, divided equally between exploration and pleasuregiving. She felt Nina's movements around her tongue; little shifts and squeezes. Her light, tangy flavor brightened and intensified as Samantha pushed deeper, determined to taste every inch of her friend. New flavors emerged; musky, dark, intimate, deep Nina flavors, that Samantha unconsciously regarded as Nina's true taste. So lost was Samantha in her own world of Nina's heat and womanly wetness that she almost didn't notice Nina's moans coming faster and louder, her vagina tensing, her hips writhing.\n\nShe opened her eyes and watched Nina, writhing on the bed, her breasts shaking.\n\nThis is what she truthfully looks like, without those silly clothes that the law says we have to wear.\n\nSamantha pushed her face against Nina, pressed her nose into her pubic hair, slid her tongue deeper until it began to hurt.\n\nThis is what she truthfully tastes like, deep inside where she keeps hidden.\n\nSamantha slid her hands upwards, taking Nina's nipples between her fingers, stroking them, tugging gently.\n\nThis is what she truthfully feels like, in the hands of someone she can show herself to.\n\nNina's eyes shot open, her voice became higher, she looked down at Samantha rolling her nipples between her fingers, squeezing, twisting - and she cried out, one long howl of surprised ecstasy.\n\nThis is what she truthfully sounds like, when the world isn't forcing her to do silly things that inexplicably don't involve orgasms.\n\nNina shook, and became suddenly hotter and wetter in Samantha's mouth. The flavor was potent, and Samantha felt Nina clench around her tongue. She held on, tasting Nina's orgasm as it rushed through her in rolling, crashing waves.\n\nNina is coming in my mouth!\n\nSamantha listened to her cries, the sounds muffled and distorted by Nina's thighs tensing and releasing around her ears. She tried to match the rhythms of her stroking and licking to the intensity of Nina's convulsions, until they began to lessen, the world slowly returning to its normal calm, everyday self, albeit maybe a watt or two brighter.\n\nFinally Nina lay still and panting. Samantha gave her one last long, slow lick, from perineum to pubic hair, and climbed up her sweaty body to her face.\n\nNina's eyes, sparkling, opened. \"Hey,\" she panted, with a crimson-cheeked smile.\n\nSamantha grinned back with wet lips. \"Hello, there.\"\n\nNina wrapped her arms around Samantha in a weak, trembly embrace. \"You've gotta let me taste you too, Sam,\" she breathed. \"But I need a few minutes to recover, first.\"\n\n\"Take all the time you need, love,\" said Samantha. \"C'mere.\" She took hold of Nina and rolled over so that she was on her back, Nina nestled comfortably against her breast.\n\nNina laughed. \"You toss me around like I barely weigh an ounce.\" She closed her eyes and sucked casually on Samantha's nipple.\n\nSamantha touched the back of Nina's head, feeling her nipple gently sucked and licked, Nina's mouth warm and loving.\n\nSamantha's tummy was warm. Nina nestled in the crook of her arm, her hips against Samantha's. \"I love you, Nina.\"\n\nNina broke contact with Samantha's breast, leaving it wet and shining in the afternoon sun. \"I love you too, Sam.\"\n\nAlready it becomes the normal. It still makes me shiver - and it makes me shiver more to think that this might just be forever.\n\n\"Rest your eyes a few minutes, love.\"\n\n\"Mmm.\" Nina laid her head on Samantha's chest.\n\nSamantha stroked Nina's hair. She licked her lips - marked with Nina's scent.\n\nBirds sang outside the window. Nina rose and lowered on Samantha's chest, her eyes closed, her breath gradually slowing.\n\nSamantha regarded her, watched the way her eyelids fluttered.\n\nShe can hear my heartbeat.\n\nMy hand feels good on her head.\n\nThis is very relaxing.\n\nSamantha settled, tiny movements, making herself comfortable in case Nina fell asleep, which was starting to look likely.\n\nThis room smells strongly of lesbian sex.\n\nSamantha grinned to herself.\n\nNow I know what lesbian sex smells like.\n\nHer head sank slowly into the pillow. Does this mean I'm a lesbian?\n\n...maybe. Girls taste funny, but boobs are great. I like men, but I like Nina more.\n\nAm I comfortable being bisexual?\n\n...okay. Sure. Better question, am I comfortable being Sam?\n\nShe sighed happily.\n\nYup.\n\nAnd what of the whips and gags and stuff? Nina says I was good at being Scary-Sam, but that was hard. Also strange. Also exciting.\n\nSamantha pondered for a moment, then smiled.\n\nWho am I kidding? Everything I do is hard, strange and exciting.\n\nI've just gotta think things through, that's all.\n\nEspecially that stuff I've got in mind about the mittens.\n\nSamantha kissed Nina on the top of her head - her hair smelt like love.\n\n\"We're in no rush,\" whispered Samantha. \"We're just getting started.\"\n\nShe let her head sink back against the pillow.\n\nI might just close my eyes for a few minutes myself.\n\nSamantha matched her breathing to Nina's, feeling her heartbeat.\n\nA car passed outside the house. The world went by.\n\nSamantha and Nina stayed exactly where they were.\n\n***\n\nSamantha: Are you joking? It can't end there!\n\nNina: You're damn straight, Sam! For Heaven's sake, it's called \"Mittens,\" and we haven't gotten to the mittens yet! I'll have to write faster if I'm going to finish this thing before Christmas.\n\nSamantha: Nina, it's February.\n\nNina: I know. :-/\n\nSamantha: Guess I'll have to edit faster, then. We'll both just have to keep on going, but this is getting long already. It was fifteen thousand words before you finally got to the part with my panties down - that's no sort of pace for a porno short. People want to get off faster than that!\n\nNina: You have a bad habit of inviting me over for a quickie and having it turn into a novel-length affair, Sam.\n\nSamantha: You're as guilty as I am, love. So what do we do?\n\nNina: We'll do it in episodes. Let's cut it there, and paste this chatlog in so people know it's not over, and they get a taste for what's coming next.\n\nSamantha: What, like a preview of the next episode, sort of thing?\n\nNina: Yeah, something like that.\n\nSamantha: What DID happen next?\n\nNina: Some of it was honestly pretty unremarkable. The minutia of daily life. We both played hookie and had Sexy Antics the following day, but really we both had jobs to go to, circuits to make, toast to eat. But we'll gloss over that, and get straight to the two sexy ladies having lots of sexy sex. Also relationship stuff, and blossoming love and all that sappiness. But mostly sexy sex. WEIRD sexy sex, the sort people like to read about when no-one's looking, this is going on the internet after all.\n\nSamantha: Coming up soon!\n\nNina: Yes, coming up soon on \"Mittens!\"\n\nSamantha: Shy discussion of various secret fantasies, followed almost immediately by not-so-shy exploration of said fantasies, and the sometimes unexpected ways in which reality doesn't measure up - and the other ways in which it's even better!\n\nNina: And butt stuff!\n\nSamantha: Yes, butt stuff. And here's me trying to lure the reader in with the more romantic, cerebral aspects of the beginnings of our relationship. The stuff about the heart and the head, not so much the asshole.\n\nNina: You've gotta cast a wide net here, Sam. When we publish this, people won't be reading it expecting to see a bunch of diary entries and circuit diagrams. They'll want to Jill off while they read about you torturing my ass until I come with the force of a nuclear blast.\n\nSamantha: All right. You do have a really cute little asterisk.\n\nNina: Sam shows me a really, really impractical and even somewhat dangerous sex toy she's invented herself!\n\nNina: AND IT'S FUCKING TERRIFYING\n\nSamantha: Yet strangely alluring!\n\nNina: Only to perverts like me.\n\nSamantha: And me.\n\nNina: And our theoretical readers. Hopefully.\n\nSamantha: Nina wallows in delightful mental and emotional torment, not knowing when or whether to confess to me her filthy little pee-related kinks!\n\nNina: Sam, if you say that then it's kinda obvious you know about them. Spoilers.\n\nSamantha: And if I don't, then they'll think all that stuff about the little predator's room wasn't going to go anywhere.\n\nNina: Sam researches erotic humiliation, both from myself and on her own, exploring her own fetish for learning! We try out the basics, I come to a new appreciation of just how remarkable my new lover really is, and then Sam, BEING SAM, takes it to some truly BIZARRE but LOVELY places!\n\nSamantha: Like right now! Nina, type more gently, you're jiggling my keyboard.\n\nNina: For the benefit of the readers at home (on on the bus, or crossing their legs guiltily and blushing in the dentist's waiting room, hooray for e-readers! It means that people can't see you're reading porn. Except when you're crossing your legs and blushing, of course...",
        "Samantha: Close your parentheses and get to the point before we go off on another fifteen-minute tangent.\n\nNina: okay mistress jeez) I'm currently naked on my hands and knees, being Sam's desk.\n\nSamantha: Don't worry, gentle reader, Nina is in no immediate physical danger; we're both using laptops.\n\nNina: Only because my back wouldn't support those big old-school tube-style monitors of yours. BOTH OF THEM. As it is, I'm typing with my forearms against the carpet. I hope you appreciate it, future theoretical reader!\n\nSamantha: Quit complaining, or I'll fire up the Coil-O-Tron and then you'll REALLY have problems typing.\n\nNina: Oh shit wait until we tell them about the Coil-O-Tron they'll fucking love that...\n\nSamantha: It's called Mittens because the thing with the mittens was the first really big turning point in our relationship. If it were about the Coil-O-Tron, we'd have called it \"Sam's Marvelous Machine\" or something. The Coil-O-Tron is awesome, but we should be psyching them up about the mittens.\n\nNina: Coming soon: we get to the fucking MITTENS!\n\nSamantha: MITTENS!\n\nNina: MMMMIIIITTTTEEEEENNNNSSSS!!!\n\nSamantha: Reader, Nina sang \"Mmmiittteeennnsss!\" aloud as she typed it. She's really quite excited to tell you all about the mittens.\n\nNina: They are my favorite mittens. We keep them safe because they are an important memento.\n\nSamantha: You are my favorite mitten, Nina. All warm and tight.\n\nNina: Gotta say, this was a fantastic idea. Ooh. Writing this all out. It's like going back in time, almost. Mmm. Re-living all those sexy moments almost like it's for the first time oh god sam that feels good\n\nSamantha: Dear reader, Nina is forbidden from vocalizing any sexual pleasure, on pain of being spanked with a hairbrush until her bottom glows like a flare, and then roughly and brutally penetrated. Hooray for butt stuff. That's why she's typing out her whimpers while I finger her.\n\nNina: Ah!\n\nSamantha: So, come back and see us again for the next episode; a happy ending guaranteed!\n\nNina: Happy, wet, shaky, squelchy endings! Multiple ones! AAAH\n\nSamantha: Look at that, the adorable little dripping fuckslave is biting her hand. It's really quite precious.\n\nSamantha: And now I'm going to be REALLY cruel.\n\nSamantha: And unplug her laptop.\n\nNina: please no mistress its the only way i can ooooooohhhhhh godddd\n\nSamantha: Oh yes, Mistress. Yes indeed.\n\nSamantha: Hairbrush at the ready.\n\nSamantha: You're MINE.\n\nNina has disconnected.\n\n***\n\nThank you for reading! Mittens is available in ebook form on Amazon (for your Kindle) and Smashwords (in any format you like), under the author name Phoenix Baker. If you use Smashwords, you can pay however much you want (including \"zero dollars and zero cents, please!\").\n\nThe story continues in , right here on Literotica! But before you click through to continue, if you enjoyed this story, please don't forget to rate it - it only takes a second! "
    ],
    "authorname": "FeatherWatt",
    "tags": [
        "pee",
        "authority kink",
        "short redhead lesbian",
        "tall brunette lesbian",
        "strength",
        "mad science",
        "saliva",
        "oral sex",
        "radio shack",
        "vibrators"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/mittens-1"
}