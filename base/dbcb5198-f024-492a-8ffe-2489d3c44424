{
    "title": "Like a Daughter to Me Ch. 03",
    "pages": [
        " Disclaimer: All the usual, all the people portrayed herein are at least 18 years of age at the time of portrayed sexual congress, blah blah blah bling bling blah. If you're looking for something younger, you're using the wrong interwebz. Scram.\n\nChapter 3- About Effing Time\n\nI had been asleep so I didn't really hear my door open. I was vaguely aware of someone crawling gently onto my bed and kneeling by my thighs. I smiled to myself, still not really awake, but this was far from the worst time that Anita had crept into my room in the morning to wake me up with a blowjob. I slept naked and above my covers most of the year, so she could see all of me.\n\nI could feel her lean in and her warm breath over my cock and dreamily looked forward to delightful wake-up sex.\n\nMaybe not.\n\nThe mouth over my pressed down suddenly and blew a very loud and jarring raspberry on me. Every synapse in my body exploded and I jolted upright, shouting in shock and panic, my arms almost flailing and my unseeing eyes wider than dinner plates.\n\nMy head was still spinning as the sound of cackling reached my ears. My eyes snapped into focus and in the dim light of my bedroom, I could see Cait lying on her side on my bed, laughing her ass off about what she'd done. I gaped at her, my mouth moving, but no sound coming out.\n\n\"Omigod,\" she sighed, wiping a tear or mirth from her eye as she saw me looking at her. If she couldn't hear my heart thundering in my chest, I'd be amazed. \"Oh, the look on your face, Trekkie...\"\n\n\"Why?\" I asked in a voice rife with hurt and betrayal, none of which fazed her, seemingly. I finally noticed that she was nude, having left her clothes in a puddle at the door.\n\n\"Oh, you know you love me,\" she said in a somehow cutesy-yet-smug tone as she knelt and sidled into me, her breasts pressed to my ribcage while her arms went around my shoulders. \"You know you do.\"\n\n\"I must,\" I sighed, finally composing myself. \"That's why you're still breathing.\"\n\n\"It's your fault, really,\" she pointed out, wiggling her tits against my chest to distract me while she straddled my thigh. \"If you didn't leave your door unlocked, people wouldn't be able to just wander in and raspberry your dick at will.\"\n\n\"I can leave it unlocked because everyone else in the neighbourhood is terrified of me,\" I grumbled. \"They all know I have swords, Chinese halberds and bat'leths lining the walls of my house, so they don't dare.\"\n\n\"Well, first, I'm not from your neighbourhood,\" she stated, smiling at me. \"Second, you'd never hurt me, you love me too much.\"\n\n\"Gnnnrrrrrrr, you insufferable wench,\" I grumbled, putting my arms around Cait to hug her. She squeaked in giddy joy at my acceptance of her and she nuzzled my neck, as if she was leaving her scent on me. \"Why in God's name are you here at this ungodly hour anyway?\"\n\n\"I was driving by, thought I'd wake you,\" she replied, smiling at me. \"Mission accomplished.\"\n\nShe then unstraddled me and sauntered back toward my door, a little wiggle in her step. At that moment, Anita came out of her room, clad only in skimpy panties, rubbing her eyes sleepily- probably to see what all the yelping on my part was about.\n\n\"Boob smoosh!\" Cait cheered as she grabbed Anita by the waist and pulled her close and began squirming their tits together. Anita's eyes widened in shock and she stared dumbly while Cait violated her for several seconds before letting go, picking up her clothes and skipping downstairs. My roomie turned her head to look at me in confusion, but I was already laying on my back, staring at the ceiling and trying to calm my heart.\n\n\"Not sure I'm gonna survive you two not fucking for much longer...\" she muttered before turning around and heading back to her own room.\n\n***\n\n\"Hey, everyone,\" Anita said to her webcam as she sat on her knees with her hands in her lap, perched atop her plush bed. She was naked but her arms covered her most treasured assets teasingly. \"So, I've got a special treat for you today! I brought along a helper! Wanna meet him?\"\n\nShe beckoned to me and I stepped into the view of her camera. I was already naked, as she had insisted I be, and the only thing I was wearing was the demonic mempo mask from my set of Japanese armour, specifically a somen-variety mask that covered my whole face, rather than just the bottom half. Taking my hand, she turned me toward the camera and introduced me.\n\n\"Just my way of keeping things funky-fresh, he's going to fuck me,\" she announced, smiling to her audience and caressing her hand over my washboard abs. \"Or I'll be fucking him, depending on how you like to look at it. But the important thing is that I'm doing what you requested and you'll get to see me fuck a live dick.\"\n\nShe then trailed her hand down to my cock and began stroking it slowly, making sure that I was starting to get aroused. My member began to swell. I'd fucked in front of a camera before, and I was wearing a mask that concealed my identity, so there was no embarrassment on my part. I stood still and looked down at my roomie, who went about her business readily.\n\nAnita and I had discussed this a few days earlier while at a seafood restaurant, allowing her to fuck me on her webcam as a way of boosting her viewing numbers. I thought it might be counter-intuitive, a cam-girl fucking in front of a mostly male audience, since one would think stupid jealousies would arise, but she seemed confident that this was a good idea, so I readily went with it. Who was I to object? I was already fucking her and Anita always met her rent and utilities obligations. How could her making more money be a bad thing? I enjoyed having her as a roomie, so making sure she stayed by becoming an indispensable part of her shows was logical.\n\n\"Just remember, folks,\" she said as she wrapped her dainty hand around my member and began massaging it in earnest. \"My mouth might be full, so I might not always get to thank you immediately if you hit the donation button. But afterward, I'll be going through the session script and thanking everyone who donates to me.\"\n\nAs if in response, her laptop began chiming intermittently- people were already donating to express their approval of this idea. She smiled slyly as she looked at my swelling cock. \"Mmmm, guess you guys like my idea, hm? How about this?\"\n\nShe now leaned in and swirled her tongue around my cockhead as she held it up while her free hand used a tiny remote to zoom her webcam in on the action. I'd seen the little device on her desk before and knew what it was, but clearly it came in very handy for gonzo shots during her sessions.\n\nShe pushed her mouth down the length of my member and seconds later, her laptop was chiming nearly constantly as donations kept coming. I felt her shiver in delight, probably not because my cock was in her mouth but because of the money rolling in. She moaned around me, sucking a little harder before she began to bob back and forth, her eyes looking up at my face, which was off-camera. She was the focus, after all.\n\nI closed my eyes and listened to the wet noises her warm mouth was making as she sucked on my cock eagerly. Her hand pumped along behind her lips, making a gentle twisting motion on my soft skin. I noticed she had put down the remote and her free hand was now massaging her breasts, teasing her audience. She moaned audibly around my dick and I could feel her skin getting warmer as she pressed against my thigh.\n\n\"Mmmmm, I'm getting so horny, guys,\" she murmured, pulling her mouth back and squirming while she kept pumping her hand on my throbbing cock. She then sat on the edge of the bed, spread her legs wide and zoomed the camera in on her wet, pink pussy, which she parted the thick lips of with two fingers. \"See?\"\n\nHer laptop was ringing nonstop now, and she turned to look up at me, smiling slyly. Still sitting, she pushed her mouth back onto me and continued sucking while she masturbated for the camera. A sheen of sweat glistened on her skin, and I could feel the heat of her body and smell the scent of her arousal.\n\n\"Mmmmm, is it time to let him fuck me, folks?\" she asked her audience. \"Do I put this big dick inside me now?\"\n\nThe comment section of her window was a scrolling blur of messages, doubtless asking her to do more. Thirsty motherfuckers out there.\n\n\"The masses have spoken,\" she said breathily, looking at her camera again. \"So, I'll fuck him, and you guys decide where I let him cum, okay? When I give the word, the biggest donation gets to choose where he cums- in me, on me, whatever. Let's get this party started!\"\n\nAnd with that, my scene girl roomie gently lowered me onto my back on the bed, my legs over the edge so I was close to the camera. She then clambered over me, straddling my hips and facing down my body. Her hand massaged my pulsing member and she teased it along her glistening slit, shivering and whimpering. Her computer continued to chime incessantly.\n\n\"Ease him in, guys?\" she asked, her voice betraying her need. \"Or just spike myself on him in one brutal push? Uh-huh, okay. And full body shot or zoom in for the money shot when he penetrates me?\"\n\nI could no longer see the screen, of course, since Anita was straddling me and blocking my view. Not that I cared, mind, because all I could see was her slender body and my hands caressing her shapely ass. Her pale skin shone with sweat as she squirmed on me, awaiting her audience's decision. Clearly, she was really excited about the results of the experiment and playing it up for them.\n\nShe held my cock steady for half a second before she sank down onto me swiftly, letting out a loud groan as she did so. I moaned myself, suddenly rocked by the pleasure of being deep inside her tight, slippery pussy. My fingers gripped her ass cheeks as we became one and I bottomed out in her.\n\nI felt her shiver and brace herself on my thighs. I'd fucked Anita so often that I knew the routine now. She would rely on me to not cum until she was ready, which was whenever her audience was ready. I'd quite happily do whatever it took to make this work for her, so long as she didn't try to put anything in my butt.\n\n\"Fuck, guys,\" she rasped. \"He's really in there. Enjoy the show...\"\n\nShe began sinking slowly up and down on my cock, and I tried to picture what it was the audience was seeing- depending on the zoom of the camera, they could be watching her lovely, pale body as she squirmed on me, or they might be getting treated to an up-close shot of her pussy greedily swallowing my member while she massaged her clit with her fingers. My hands squeezed her ass and massaged her lower back and she groaned in pleasure.\n\nShe was riding faster and faster, and I could see her ass cheeks flexing as she squeezed on me. It felt amazing, because she was so turned on, but I steeled my will, not allowing myself to go over the edge or even engaging in brinksmandship- I pushed my hips beneath her while she undulated and writhed. Aside from her moans and panting, and the sticky noises her pussy made, all I could hear was the constant barrage of donations she was receiving on her laptop. I was guess this was an extra-good night for her.\n\nAnita leaned back now, her hands beside my flanks, doubtless giving her viewers a rather shameless shot of how she was impaled on my cock. She squirmed on me and squeezed me, her body growing warmer with each passing moment. I could feel her trembling and knew what was about to happen.\n\n\"Gnnnn, he's about to make me cum, guys!\" she keened before her back arched and she groaned loudly, her black hair cascading over my chest. I felt her pussy clench around me fiercely as she came, bathing me in her sticky warmth. The laptop just kept ringing.\n\nFinally, she calmed down and was sitting up, watching her screen again as she caressed her body and massaged her breasts, enjoying her post-orgasm glow. She read something on her screen and nodded. \"You got it!\" she said breathily before pulling herself off my cock and spinning around to look down at me. She smiled down at me as my hands found her ass cheeks and steadied her while she lined her wet slit up with my still-throbbing dick. She then pushed down onto me, sighing in pure pleasure. She leaned down more, pressing her breasts to my chest and whispering in my ear.\n\n\"They can't see you, I'm lifting your mask so I can kiss you as a thank you for doing this. I've already made over a grand since we started...\"\n\nShe pushed my sonen mask up and pressed her lips to mine, humming quietly in secret delight. We didn't kiss often, because Anita generally thought of it as a great emotional intimacy, but sometimes she just felt it completed sexuality and went for it- our tongues tangled as she sank up and down on me, my hands holding her ass cheeks and pulling them apart so that her audience could really get a good view of the action.\n\nI kinda pictured it looking to them like that one threesome scene out of Sex Asylum II from 1986 where Amber Lynn was boffing Tom Byron on the kitchen counter, except this was a hot scene girl instead of a plastic blonde. But you get the idea, right?\n\nShe kissed me for a considerable length of time, meaning she really appreciated what I was doing for her. I'm pretty sure being balls-deep inside her might have been playing a factor, but why quibble at a moment like this? We kissed heatedly while she fucked me and the donations kept rolling in.\n\n\"You just might have to become my semi-regular silent co-star,\" she purred as she kissed me. \"Hope this doesn't bump me into a higher tax bracket...\"\n\nShe now sat up and kept humping, her spine making an erotic snaking motion to keep her viewers enthralled. Her fingernails grazed my chest and she was breathing heavily, her eyes glazed with lust as she looked down at me. She was trembling and realized she was about to cum again. Making sure I was in control of myself, I smiled evilly, reached up and squeezed her tits and thrust deep inside her without warning.\n\nAnita shuddered and cried out, her body seizing up as she started cumming, thrashing about on top of me. She was squeezing me so hard I nearly lost control of myself and came, but somehow, I held on. She heaved and thrashed above me until she sagged forward, breathing heavily, her body steaming.\n\n\"Don't stop,\" she breathed, her forehead against mine. \"Put me on my back and fuck me again, I don't want their attention to wander. Please...\"\n\nI nodded, replaced my mask and sat up, keeping her pinned on my cock and laying her on her back, both of us now facing the camera. She groaned loudly as I began spearing in and out of her pussy, her breasts wobbling beneath me. Her head was craned over the bottom edge of the bed, her black hair cascading down and everyone could see her face- her eyes were closed in rapture as I fucked her, and her mouth was wide open as she moaned and gasped.\n\n\"Gnnn gnnn gnnnnnn!\" she groaned, wrapping her legs around my waist as she rocked against me. \"Holy fuck!\" Her fingernails dug into the sides of my biceps and she pumped her wanton pussy up against my hips. She was trembling again before long and then screamed, shaking almost convulsively through another orgasm.\n\nHer body felt like a warm, wet dishrag beneath me, but her creamy pussy still held me in its velvety vise. Her eyes were barely focused as she opened them and whispered the word 'doggy' at me. I nodded and turned her over, hauling her onto her hands and knees, still facing the camera. I allowed her to steady herself before I pushed inside her, eliciting a guttural groan. Her screen was still a blur of messages and the contributions kept coming in.\n\n\"I think... this is the final round for now,\" she panted as she looked wearily at the camera, her lovely, pale breasts swaying underneath her with our motion. \"I'm about to fuckin' die. I'm gonna cum, let him cum, answer the messages and pass the fuck out, folks. So... how- gnnnnn! Goddamn it! How do you want him to cum? Highest donation... starting now... wins...\"\n\nI regulated my pumping to let her watch her screen, but also decided to improvise to keep it interesting. After all, I didn't want her show to get stale, did I?\n\nSo, I smacked her across the ass. Anita stiffened and squeaked in surprise, looking back at me for a moment in shock before returning her attention to the screen. She had steeled herself now for the occasional smack, moaning when my palm cracked over her cheeks, leaving them a delicate pink shade.\n\nAnita was gasping now, driving herself back against me urgently, needing to have one last, massive climax for her viewers before she let me cum. I thumped my hips against her strongly, driving myself deeper inside her until she was almost screeching, actually tearing at the light blanket of her bed with her teeth to keep from being heard across the neighbourhood. She churned and ground desperately on my cock, squeezing me harder than ever. She was so wet.\n\n\"Uh-huh!\" she mewled, shaking. \"Mulligan wins! I'm taking the cum shot in the face!\"\n\nShe looked back at me now, her eyes pleading. \"Make me cum one last time!\"\n\nI nodded and rammed inside her, my body overpowering hers and she shook violently and cried out, arching her back. She came so hard, her pussy almost squeezed me right out of its confines, in spite of my strength and position over her. She massaged me with her tight, slick channel until I was about to burst, my own body stiffening. Anita scrambled off my cock and sat on the edge of the bed, plunging her mouth down onto my throbbing rod while she massaged her breasts. She bobbed back and forth with a dreadful eagerness, humming around me. She skillfully used one hand to find the remote and zoom it in again on her face and my cock.\n\nI groaned and pressed forward with my hips, letting her know I was about to cum. She pulled her mouth off me and pumped my shaft with her hand, placing her face right next to my pulsing head. My cum shot out in thick, pearly ropes, plastering her face. Anita moaned loudly for the benefit of her audience. I knew she wasn't all that crazy about getting her face napalmed, but if it made lots of money, she'd overlook the inconvenience.\n\nShe massaged my cock deftly, milking me of my creamy essence, most of it on her face, but also aiming a few shots at her lovely breasts, smearing my cockhead around on her silken skin and making me shudder.\n\nWe finally both relaxed, and I sank back onto the bed, my chest heaving. I looked down wearily and saw Anita zooming in the camera on her face, which I had just glazed so thoroughly. I think it was a testament to her how pretty she was and her innate attractiveness that she still looked so damn sexy, even though she'd just endured a bukkake routine. I could hear her giggling.\n\n\"So I think that's about it for now, guys,\" she breathed. \"I'm gonna clean my face off before this stuff gets in my eyes and then start my thank-you correspondence to everyone who made a donation. Did you all like the show? If you did, maybe I'll invite him back, hm? Maybe next time he can take my ass? Love you all!\"\n\nShe blew a kiss to the camera and turned it off before flopping back on the bed and sighing loudly. I gave her some time to recover. She reached over the side of her bed and pulled a conveniently-placed towel from between her mattresses. She began carefully wiping my cum off her face and chest before coming up and snuggling into me tiredly.\n\n\"Thank you so much,\" she mumbled. \"I don't know the exact figure, but I'm pretty sure I made well over two grand for that session. Hope you're up for more of them on occasion.\"\n\n\"I'll happily help you out,\" I said cheerfully, putting my arms around her. \"You just tell me when.\"\n\n\"Mmmm, I'm glad,\" Anita murmured, wiggling against me. \"So what should your cut be for those? Twenty-five percent of my take-home?\"",
        "\"I don't need any of it,\" I assured her. \"I'm fucking an insanely hot scene girl, what else would I want?\"\n\nShe giggled and kissed my nose. \"That's very kind, but I'd feel guilty if you didn't get some of it. Besides, it's just for the sessions you're involved in, not like it's a regular gig. Let me give you twenty-five, assuage my guilt, okay?\"\n\n\"Fine, fine,\" I sighed, reaching down and caressing her soft ass cheeks. \"The sacrifices I make for you.\"\n\nShe snickered and shook her head. \"Besides, you'll probably end up just spending it on dates with me or Cait anyway.\"\n\n\"Well, I do like wining and dining you.\" I agreed, moving her on top of me and nestling my still-hard cock against her tired, gooey pussy before sliding it inside her and making her sigh.\n\nShe smiled tiredly and shook her head. \"I should charge that money back as rent for using my cunt as a parking space for this dick of yours, mister.\"\n\n\"Best tenant you've ever had.\" I replied, smiling.\n\n\"On that point we agree.\" Anita purred as she pressed her lips to mine and kissed me tenderly.\n\n***\n\nAnita had made over two thousand dollars from that one session and, true to her word, had given me five hundred of it. I hadn't really given any thought as to what I'd spend the money on, while she had gone out to purchase some silk sheets for her bed. I'd offered to go with her, but she wasn't sure she'd be right back, so she set out alone.\n\nI was sitting in my living room in my big Love-Sac chair and reading a book while listening to music when Cait came into the living room. She walked up to me and eased into my lap while I set my book aside. She looked up at me while she snuggled into my chest, giving me puppy dog eyes.\n\n\"Love me?\" she asked in a tiny voice.\n\n\"Of course,\" I replied, wondering what was up. It was as if something was bothering her, but I couldn't tell what.\n\n\"Good,\" she said quietly, nuzzling her cheek on my pec.\n\n\"You alright, babygirl?\" I asked, putting my arms around her.\n\n\"Yeah,\" she said, not looking at me. \"I'm just dumb sometimes. I was worried you were ignoring me.\"\n\n\"Why would I be ignoring you?\" I chuckled. \"Did you put the albino squirrel in my tree outside into a wood chipper?\"\n\n\"No, I wouldn't do that to Thunderhorse,\" she said, shaking her head, her head still buried between my pecs. \"I'm just weird.\"\n\n\"Well, yes, but that's not a bad thing.\" I said as I kissed the top of her head and let her snuggle closer into me. \"I love your weird self. Weird is good. Normal people frighten me.\"\n\n\"Nothing frightens you, you ridiculously oversized battle-mammoth,\" she almost grumbled. I was still no closer to ascertaining what was wrong, so I just held her. \"I... was just worried I'd pissed you off somehow the other day when I texted you and you didn't get back to me all that quickly.\"\n\n\"When was that?\" I asked.\n\n\"Last Wednesday afternoon.\" Cait replied.\n\n\"Oh,\" I answered, remembering exactly what I'd been doing at that time. \"I was a little pre-occupied.\"\n\n\"I know,\" she moped. \"When you didn't respond and I turned on Anita's webcam and-\"\n\n\"Wait, what?\" I interrupted, looking down at her in surprise. She realized what she'd said and I could feel her cringe and almost grow smaller in my lap. \"Did you just say you were watching Anita's webcam show?\"\n\n\"Yes...\" she admitted in the tiniest voice. \"I'm... I'm one of her regular viewers. I even donate a little bit sometimes.\"\n\n\"Well I'll be damned,\" I laughed. \"Does she know?\"\n\n\"Oh, no,\" Cait said, shaking her head. \"No no no, and please don't tell her. Please?\"\n\n\"I won't,\" I assured her, caressing her strawberry-blonde hair lovingly and making her relax. \"So why do you watch her at all?\"\n\nCait shrugged, still not looking at me. \"She puts on a hot show,\" she offered as an explanation. \"And you know I'm bi.\"\n\n\"Do you have the hots for my roomie?\" I inquired, trying to keep the amusement out of my voice. It wasn't like my Cait to be this insecure-sounding.\n\n\"I mean, she's hot, yeah,\" Cait admitted. \"But I'm not lusting after her. I have gotten off to a few of her shows, but it's not like I'm desperate to fuck her.\"\n\nI focused back on her original statement, where she'd originally outed herself about watching. She'd been watching the webcam show where Anita was fucking me. I hadn't touched my phone for some time before or after that event. Cait had apparently text me and then found out why I hadn't responded by turning on Anita's webcam to pass the time. Lo and behold, she saw Anita and I, horizontal and superimposed.\n\nBut so what? She knew Anita and I were casual lovers. Had this made it real for her somehow and was she getting jealous?\n\nI didn't pry any further but just held her, caressing her hair and kissing the top of her head. She sighed and snuggled, not feeling the need to say anything else for some time. Maybe ten minutes passed before she looked at me.\n\n\"Can we cuddle naked?\" she asked. \"I'm just feeling insecure for some reason and want some comfort from my Ludo.\"\n\nI nodded and helped her strip out of her t-shirt and capris, leaving her clad only in a frilly blue bra and matching panties. I used one hand to unclasp her bra and she giggled and called me a man-whore under her breath while she slipped off her panties. She then pulled my shirt over my chest and then made me lift my hips so she could undo my belt and pants, pulling them off. Lastly, she removed my boxer shorts, smiling up at me.\n\n\"I promise not to raspberry you this time,\" she said, winking. \"I'll be good.\"\n\nNow that we were both fully naked, she clambered back into my lap, her arms around my shoulders. Her smooth pussy pressed against my cock and we looked into one another's eyes, smiling. We'd been naked together often enough now that I didn't get an instant hard-on every time our genitals touched. Mind you, if she squirmed even a little bit, I'd be swelling up like a water balloon. She sighed happily and snuggled into me, enjoying the warmth of our skin meeting.\n\nWe didn't really say anything, just snuggling together, her forehead pressed to mine softly. My hands caressed her sides gently and held her in place. Finally, she moved her face to my neck, nuzzling me and giving me a small kiss. Some minutes passed before she looked into my eyes.\n\n\"Can we go snuggle in your room?\" she asked. \"I know this is plenty private, it just feels more private and safe up there.\"\n\nI nodded and she got off my lap and led me upstairs, holding my hand. She kept looking back and me and smiling. I'd never seen her quite like this before, seeming demure and almost tentative. We made our way into my room and got onto the bed, stretching out and then embracing one another, our naked forms entwining. She sighed contentedly, as if something was right now.\n\n\"Mmmmm, I love you, Trekkie...\" she mumbled, snuggling her head against my chest.\n\n\"Good to know, since you're willingly forming a naked pretzel with me.\" I replied, caressing her back and finally reaching down to give her cheeks a gentle squeeze, making her giggle. She wriggled around until she was on top of me, her lovely breasts squashed to my chest and her pussy pressed down on my cock. She rubbed her nose against mine as she smirked.\n\n\"Admit it, you love it.\"\n\nI squeezed her butt cheeks again and rotated them a little, making her shiver involuntarily. Her hands gripped my arms a little more tightly. Cait began to squirm ever so subtly, saying nothing but looking down into my eyes. Not surprisingly, my cock pulsed slightly and began to slowly grow. She said nothing, but also did not stop her gentle undulating. I could also feel her pussy starting to get wet.\n\nWe still said nothing, looking at one another intently. Soon enough, I was hard, my manhood pulsing beneath her wetness. She was breathing as if she was trying to control herself, her fingers flexing on my arms. My hands were still on her butt and she squirmed back against them. The tension between us was now palpable.\n\nHer face moved closer to mine, her blue eyes smouldering with a barely-contained intensity. Her lips hovered right above mine and her sweet breath caressed my senses, turning me on even more. My fingers gripped her ass cheeks even tighter and she shivered, letting out a subtle gasp. Her pussylips were now sliding wetly up and down my shaft- slowly, almost imperceptibly, but it was deliberate, no doubt. I could even feel her clit throbbing.\n\n\"Michael...\" she whispered. She almost never used my actual name. It sent a shudder through me.\n\nI rolled over on top of her and her eyes were glazed with desire. I began moving my hard cock against her sticky pussy, sliding it up and down between her netherlips, splitting them. The head kept dragging over her clit and she shivered with each stroke. Her hips began squirming back against me while her hands rested on my back, holding me to her.\n\nWe said nothing, just looking into one another's eyes. Our squirming rhythm intensified, both of us getting more aroused by the moment. We were both breathing heavily, waiting to see if she indeed was ready for me to fuck her- so very close, but waiting for that last sign.\n\nShe spread her legs wider slowly, my hips sinking between them and making her shudder as my cock pressed against her public bone. Her fingers were flexing on my arms again, her skin warm and damp and her face flushed. I still slid my member up and down her slit, which got wetter and wetter with each passing moment. Then her legs slowly hooked around behind my waist while she looked up into my eyes.\n\nI could feel her subtly push her hips up, the head of my cock now pressing against her tight entrance, about to penetrate her...\n\nMy phone buzzed on the night table beside us. Both our heads snapped over to see what the interruption was. It was my younger brother. He never called long-distance. Ever.\n\nWell, our mother was nearly eighty.\n\n\"It's my brother,\" I panted, trembling with the effort of not sliding deep inside her. \"I gotta take this, babygirl.\"\n\nCait watched in utter shock as I pulled myself off from on top of her and picked up my phone, heading out into the hallway and then to the bathroom. I didn't look back at her, I could feel her goggling at me from the bed in disbelief. I couldn't believe how difficult that was. If it had been Anita, neither of us would have blinked. Our coitus was casual and for fun, and it could be interrupted if necessary.\n\nThe call turned out to be an update on our mother, yes, but nothing too urgent, just my brother telling me about knee replacement surgeries she was going to be having soon. I guess my mother had been on him about keeping in touch.\n\nIn my bedroom, I could hear an urgent panting and gasping, along with decidedly slick and wet noises of a pussy being thoroughly ravaged. I drew out the conversation until I heard Cait moan languidly for several seconds and then the sound of a body flopping back onto a bed. The call ended and I steeled my nerve and went back into my bedroom, ready to have my head ripped off my body by my spinal column.\n\nCait was lying on the bed and smiled at me tiredly, giving me a little wave.\n\n\"Hey, Trekkie...\" she purred. I guess I wasn't about to die?\n\n\"I'm so sorry about that,\" I said, going back onto the bed and joining her. Without any hesitation, she snuggled back into me, her incredibly sticky pussy nestled against my swollen, but mostly calm cock. \"It was my brother, he never calls.\"\n\nShe nodded, her eyes still closed. \"No worries, you can make it up to me later. And I know how.\"\n\n\"Oh? Do tell.\"\n\n\"I'm auditioning tomorrow out at the Peninsula Players, they have an opening for an alto for the summer. Wanna come with me into NorDoor and make a day of it? I'm kinda nervous and you cheer me up like no other.\"\n\nI considered for a moment and then nodded. \"I can certainly do that. I'll treat you to one of my favourite places to eat in Fish Creek after you're done.\"\n\n\"That sounds wonderful,\" she sighed, nodding as she snuggled me. \"I wubs you, Ludo.\"\n\n\"Will you be spending the night here, or do you need to go home and prep?\" I asked, caressing her back.\n\n\"Unfortunately, home,\" she said somewhat glumly. \"My parents know I'm auditioning and they'll wanna spend time with me. But if you are gonna go with me, I'll come by and pick you up early. Sound good?\"\n\n\"Of course it does,\" I said, smiling and caressing her face. \"Time spent with you is always the best thing ever. Tomorrow's going to be wonderful and you'll knock 'em dead.\"\n\nShe looked like she might just melt on the spot at my words. She took my face in her hands and pressed her lips to mine, kissing me while her body melded into me. She kissed me for several seconds before she sat up and sighed. \"I suppose I'd better get back home and prepare some stuff. I'll swing by about eight tomorrow, but I'll be texting you a lot tonight in case I get nervous.\"\n\nShe was supposed to be getting ready to go, but instead she just hugged herself to me for several minutes. I let her snuggle a while longer, stroking my hands from her neck, down her back to her butt. Finally, I kissed her forehead and told her to scram, before I did something to her. She giggled and kissed my nose before gathering up her clothes and getting dressed. I escorted her down to my door and gave her a final kiss on the forehead before she left. I rubbed my hands over my face and went back upstairs for a very badly-needed cold shower.\n\n***\n\nCait texted me only a few times that night and showed up just before eight the following morning. I was waiting outside my door as she pulled up and she squealed in delight as I clambered into her car, throwing herself against me and hugging me tight. She gave me a big, wet kiss on the cheek and grinned at me as she crawled into my lap in the passenger's seat. She was wearing a light, flouncy summer skirt and a cheerful halter top.\n\n\"I am so stoked!\" she said excitedly. \"Not only about the audition but spending the day with you! Spending time together is one of my favourite things!\"\n\n\"Mine too.\" I said, rubbing my nose against hers, which seemed to be a thing of ours now. \"Spending the whole day with you and not having anyone else around is perfect.\"\n\n\"Mmmm, but can you drive?\" she asked, pressing her boobs to my chest and squirmed them back and forth to coax me into doing what she wanted. It was her standard go-to move to gain my compliance. \"I want to be rested and focused for the audition. Is that okay?\"\n\n\"Of course,\" I said cheerfully. I attempted to move into the driver's seat but Cait giggled and pinned me down with her body, wiggling her butt as she smirked at me in amusement. She seemed intent on not letting me move, so I reached up and pinched her nipples through her halter-top. She squealed in shock and thrashed, trying to escape, but I held on to her until the material of her bra slipped out of my grasp. She clutched her hands across her chest and looked at me in shock while I grinned at her.\n\n\"Perv!\" she hissed, trying not to laugh. I pulled her to me and hugged her tight, kissing her cheek before moving myself over to the driver's seat while she settled into the passenger's. She settled back into the seat and sighed as I pulled out and began the drive to our destination. I knew she wanted to rest, so I kept metal off the playlist, settling for light jazz. It was a beautiful, sunny day out and perfect weather for a trip into NorDoor.\n\nThe county was a collection of small towns, the largest of which, Sister Bay numbered a mere eight hundred year-round residents. Fish Creek, my favourite, barely cleared two hundred, while others such as Egg Harbor, Bailey's Harbor and Ephraim numbered even less. By county by-law, no large corporate chains were allowed within its borders, to protect the small artisan communities and shops from being run out of business. You wouldn't see a Wal-Mart or a McDonalds anywhere once you crossed the bridges over the river through Sturgeon Bay. Yes, it was a little bit tourist-trappy, but still inexpensive and lots of fun. I'd worked a season as a server in a few of the resorts some years earlier with my ex-wife and made a lot of money. Good memories, except for her plentiful psychodramas.\n\nCait was quiet as we drove, rarely talking and simply keeping her eyes closed. I knew she was getting ready for her audition, so I did as little as I could to bother her. The trip into the county took maybe two hours, so I drove casually and let her rest.\n\nEventually, I heard her hum and her hand started to pull her skirt hem up, finally exposing her light blue panties. I had to make sure to keep my eyes on the road, but sighed inwardly as her hand began playing with her pussy beneath the fabric. Her eyes fluttered open and she turned her head to look at me.\n\n\"Mind if I?\" she asked almost sleepily. \"It'll help me relax and you're pretty much the only person I could do this around.\"\n\nI nodded and she smiled in gratitude before sinking down lower in her seat and started to play with herself in earnest. I could only spare a few glances, since there was just enough traffic to warrant caution. Cait moaned and squirmed, her hand now down inside her panties, her fingers sliding in and out of her increasingly wet slit. The scent of her desire began to permeate the air, giving me a raging hard-on.\n\nShe made little whimpering and moaning sounds until she strained, pressing her hips off the seat and against her hand, finally cumming. She then collapsed back into the seat, breathing slowly. She kissed her fingers and sucked on them before smiling over at me.\n\n\"God, I needed that,\" she purred. \"I'll be good and ready for my audition now.\"\n\n\"At least one of us is relaxed now.\" I muttered, making Cait giggle and reach over to place her hand on my crotch and give it a gentle squeeze through my jeans. She then wiggled around and stripped her soaking panties off, tossing them in the back seat and slipping on a replacement pair, purple in colour this time.\n\n\"Good thing I thought to bring a spare set, right?\" she said cheerfully, stretching now.\n\n\"As long as you're convinced a single spare set will suffice for the rest of the day.\" I replied.\n\n\"Oh, no worries there,\" she assured me. \"As soon as I'm done with the audition, I'm going commando for the rest of the day.\"\n\nI said nothing, keeping my eyes on the road, but nodded. Cait giggled and settled in again, relaxing for the rest of the journey. Concentrating on driving allowed my cock to finally subside and not strain awkwardly against my pants. We passed through Sturgeon Bay, a city technically part of the county, but not subject to the corporate by-laws I'd mentioned earlier. At some ten thousand people, it was by far the largest settlement in the county. We zipped through and passed over the bridges, into NorDoor.\n\nPretty much everything changed, then- the highways were narrower, meaning that traffic was not overwhelming the tiny peninsula. Beautiful rock formations and walls, carved out by the recession of glaciers during the last Ice Age, guided us northeast into the county. Small settlements, little more than hamlets, dotted our route.\n\nWe passed through Egg Harbor and Cait made me promise to take her shopping in several of the quaint little shops the town was famous for (as were all the other towns in the county). Lake Michigan now surrounded us on two sides as we went farther into the ever-narrowing peninsula, heading to our destination.\n\nThe Players' property she was auditioning at required a turn down a small road off the highway- it wound and snaked through the towering deciduous trees that the county was famous for. Sunlight pierced the almost solid canopy of green to touch the car as we drove and I could tell Cait was getting nervous and excited.\n\nAs out of the way and counter-intuitive a route as this seemed, the Peninsula Players' locale made it a destination for tourists, who loved turning off the highway and winding and twisting their way into the forest to arrive at the venue. The parking lot was little more than a huge sward of flat land, covered in worn grass. A prominent wooden building and several smaller satellite buildings stood off to the side, consisting of a large theatre, two smaller ones and several rehearsal spaces. I parked in visitor parking and turned off the car. Cait fidgeted and got out of the vehicle.",
        "\"Well, here we go,\" she said, taking a deep breath as I joined her. She paused awkwardly, looking down at the ground. \"Wish me luck?\"\n\nI took her chin gently in my fingers and made her look up at me- her eyes were lost in mine as I leaned down and pressed my lips to hers, kissing her lovingly. Less than a second passed before she melted into my kiss, returning it with great passion. I held her close and the kiss lasted several seconds before I finally let her go. She sighed and smiled at me, her expression grateful.\n\n\"Thanks,\" she said quietly. \"Trust me, our afternoon'll only get better from there. Love you, Trekkie.\"\n\nShe then spun and trotted off toward the buildings, turning to wave and blow me a kiss. She then disappeared through some doors. I sighed and leaned back against the car, thinking about the kiss we'd shared- certainly our truest kiss to date. How on earth was I going to keep from tearing this girl's clothes off and savaging her before she gave me the all-clear?\n\nThere is little or no cellphone reception in the county. Come to think of it, I'm pretty sure they hadn't even finished transitioning to digital from analogue at this time. Analogue had ceased being a thing anywhere else on the planet ages ago, but the Door was a little behind the times, since the permanent population hovered around only two thousand people, so it wasn't exactly a high priority on the cellphone companies' list of places to build new towers. That being said, I pulled an old, dog-eared copy of Dune out of my backpack and read for the next hour while leaning back against the car. The day was warm, but the sun was not beating down on me, due to the trees which towered over our parking spot.\n\nOut of my peripheral vision I spotted the doors open and out skipped my beloved Cait. I closed my book and looked up at her smiling while she trotted back to me, her eyes glinting with excitement. Before I could say anything, she threw herself into my arms and kissed me deeply, her arms wrapped around my shoulders and her legs wrapped around my waist. I tried not to moan in amazement as she pushed her tongue into my mouth, her taste sweet from some candy she'd been sucking on earlier.\n\n\"Mmmm, God, I love you...\" she said, finally breaking the kiss and beaming at me.\n\n\"Audition went well, I take it?\" I asked, my hands now reaching down and clasping her backside to support her. I was suddenly aware that she'd already removed her panties, my hands on her bare ass. Not that I objected.\n\n\"Really well,\" she answered, her eyes alight. \"They'll be calling me back, but I'm not even sure I wanna do any of their shows, now that I've seen them. I just wanted to knock their socks off, more than anything, to make sure I still had it.\"\n\n\"I can attest to that.\" I chuckled, squeezing her butt cheeks and making her squirm. \"Everything about you is amazing, after all.\"\n\nShe giggled in delight and kissed me again, her tongue tangling with mine as her body squirmed in my grip. Cait finally ended the kiss and looked up at me. \"Time to go celebrate and enjoy our day?\"\n\n\"As milady wishes,\" I said easily, putting her down and starting to escort her around to the passenger side. \"Where to?\"\n\n\"I know where we're going,\" she announced, stopping me from taking her around her car. \"So I'll drive.\"\n\n\"By all means.\" I said agreeably, getting into the passenger's seat while she took the driver's. \"So, where are we headed?\"\n\n\"You'll see!\" she replied, surprising me by sliding her tank-top over her head and wiggling out of her skirt, leaving her fully naked in the driver's seat. I recovered quickly and began removing my clothes as she turned on the vehicle and pulled out of the parking lot.\n\nDid she know about some nude beach I wasn't aware of? Toft Point was on the other side of the peninsula. We were likely to raise a few eyebrows on the highway in our current state of undress, especially if we had to slow down for traffic when passing through any of the towns.\n\nBut Cait didn't turn right to go back up to the highway, she actually took a left and proceeded to rumble down a small path that barely qualified as a trail. It angled down an incline and wound through the endless trees for nearly three minutes, until we finally arrived at a small clearing, barely big enough for four cars. She stopped in the middle of the clearing, turned off her car and got out, looking excited.\n\nI had barely gotten out of my side and closed the door before she leaped into my arms again, kissing me hard, her limbs wrapped around me. I held her tight and kissed her back, shivering as I felt her wet pussy pressed to my cock. I couldn't have stopped the raging erection if I wanted to, and believe me, I didn't. I was soon hard as a rock and Cait moaned into my mouth as she squirmed her wet womanhood against me, pressing and pushing and sliding in great need.\n\nI took the hint and positioned myself until my cockhead was at the entrance of her pussy, splitting her slippery lips. She adjusted her legs behind me and leveraged herself down onto my stiff rod, taking me deep inside her with a loud groan.\n\nMy God. Finally. Cait and I were fucking. We kissed fiercely as I held her tight, the two of us revelling in the sensation of my cock buried deep within her. The kiss ended and she kept her forehead pressed to mine, her eyes closed.\n\n\"Worth the wait?\" she asked in a breathless voice.\n\n\"Always, babygirl.\" I replied, nodding. I held her steady, my hands clamped onto her butt cheeks and she began to squirm and push her hips back and forth, sliding my cock in and out of her wanton pussy.\n\n\"Gnnnnn, it feels so good,\" she moaned, her mouth next to my ear. \"Why did I make us wait so long?\"\n\nI didn't answer but simply held her tight, moving my own hips in time to meet her measured thrusts, sinking myself deep inside and then almost all the way back out before sliding in again. Cait shuddered and gasped, her fingers clutching at my back.\n\n\"Maybe I was just afraid,\" she panted, continuing to fuck me. \"You know I've always had a crush on you, right?\"\n\n\"Feeling's been mutual,\" I murmured, kissing her neck and making her shiver in pleasure. \"You know I've always been crazy about you.\"\n\n\"'n you were so good and patient, waiting instead of just taking me up to your room and raping me,\" she hissed as she picked up the pace. \"I would've loved that an' not objected a bit... but you- gnnnnnnn- you waited, you were so considerate of me...\"\n\n\"I always will be,\" I replied, pressing my lips to hers and kissing her. \"I love you, after all.\"\n\n\"I love you too,\" she said almost feverishly as she returned the kiss, her fingers now snaking into my hair, knotting in it. \"Mmmmm, fuck me...\"\n\nI couldn't believe we were really finally doing this. I mean, yes, it was perfectly obvious to everyone around us that Cait and I were crazy about one another and the sexual tension between us had been palpable almost since Day One, but this still seemed like something of a fantasy to both of us at that very moment. Fucking one another, kissing hungrily, doing our best to make one another cum...\n\nI turned around and pressed Cait against the side of the car and relaxing my grip on her, letting nature take over and she sank even deeper down onto my cock. She broke the kiss and groaned loudly before biting at my shoulder.\n\n\"Oh my God, I've wanted this...\" she gasped as she squeezed her pussy around me. \"Oh, you have no idea.\"\n\n\"Pretty sure I do, actually...\" I grunted as I pumped myself against her, my cock spearing deep inside her pussy. \"You feel so good, Cait!\"\n\nWe writhed and ground against each other lustily, sweat shining on our bodies now. The warm summer mid-morning kissed our skin, while the tall canopy of trees protected us from the sun's rays. I couldn't believe we were finally fucking, making love even, since we knew we loved one another.\n\n\"I want you... every which way...\" she panted, arching her back and shuddering. \"Gnnnn, please fuck me from behind...\"\n\nI put her down now, realizing that our sweaty bodies were making it hard to keep her boosted, even if she had been pinned against the car. I took her hand and pulled her around to the hood of her car and bent her over it. The engine hadn't been running long enough to make the metal hood hot and she whimpered in delight as her opulent breasts squashed against the cool steel. I positioned myself behind her and spread her pert ass cheeks apart while sliding my dick up and down her sopping netherlips.\n\nAhhhhh!\" Cait cried as I speared myself deep inside her with one strong motion. She pushed back on her hands, taking me as deep inside as she could, while my hands gripped her hips and pinned her in place. I began thumping against her, driving into her pussy with a will. She gasped and whimpered in pleasure, flexing herself around me as she enjoyed the power of my body. The slapping noises our skin made drove us both wild. My hand reached forward and clutched her hair, causing her to groan shamelessly and crane her neck, her body now hovering above the car hood. Her breasts swayed hypnotically as her body rocked back and forth.\n\nI fucked her harder and harder until she was shaking and finally bit her knuckle to keep from screeching. She spasmed beneath me as she came, her pussy bathing my groin with her wet pleasure. Determined to make her cum again before allowing myself release, I kept hammering into her while she panted and gasped loudly. Her body had sunk back down to rest on the car hood, trembling as she tried to recover from her orgasm.\n\nI pulled out suddenly, making her mewl in protest, but then I turned her over, so that she was still arched over the hood of the car, but facing up. I pushed her legs apart with my own and stood between them. Her eyes were wide as she looked up at me while I loomed over her. I took hold of my sticky cock and tapped it against her pussy and clit, teasing her. She whimpered pleadingly, desperate to feel me inside her again. I leaned in and pressed my cockhead through her lips and then slid home, making her shudder and sigh loudly, her arms reaching up to grip my shoulders.\n\nHer eyes opened and we stared at one another as I began a strong, slow sawing motion with my hips, sliding back on forth inside her. Cait sighed as she squirmed her hips against me, fondling her breasts while I fucked her. The incline of the hood meant she was slowly sinking onto me again, each thrust going a little deeper, making her gasp and moan while she massaged my cock with her tight tunnel. She felt like heaven around me.\n\n\"I'm so sorry I made you wait,\" she breathed, her hands kneading her breasts. \"I just...\"\n\n\"Shhhhh,\" I said gently, smiling down at her, even as I fucked her. \"It doesn't matter. We're here now and I love you.\"\n\n\"I love you too,\" she said, smiling up at me. \"You gonna cum in me, Ludo? It's safe to.\"\n\n\"If that's what you want,\" I replied, feeling a tingle of delight at the prospect. \"I would love to. I didn't cum last night after you left, so you're gonna be pretty full.\"\n\n\"That sounds... wonderful...\" she panted, squirming harder now, her skin pink with her arousal. \"Gnnnnn, can't wait to feel your cum in me...\"\n\nI fucked her harder and faster, knowing she wanted us to cum together, finally. My hands gently pushed hers off her breasts and I began massaging them strongly, making her writhe and groan lustily. I could feel her pussy tightening around me and the warm, tingling sensation building in my balls. Any second now, I'd be past the point of no return and cumming inside my darling Cait.\n\nI pulled her up so that she was almost folded in a v, perched on her ass cheeks with her legs now wrapped around my waist and her chest pressed to mine. I was deeper inside her than ever and she whimpered and gasped as she looked up into my face. I wanted her against me when we came together, I craved the feeling of her skin.\n\nShe was shaking now and my hips smacked against her desperately, long past the point of no return. I crushed her to me and kissed her savagely, biting her lower lip and making her wail in need. Our kiss was a desperate one and we both groaned, almost shouted, as we came together, her greedy pussy milking the pearly cum from my throbbing cock. Thick creamy ropes lashed her insides and never seemed to end, because I was so desperate and pent up.\n\nWe kissed as we writhed and pumped against each other, my cum now trickling out of her around my shaft and balls. Cait moaned as she felt it sliding down over her taint and between her cheeks, her pussy unable to hold any more. I could even feel the stickiness of it against my thighs. Her head was now buried against my shoulder, fingers clutching reflexively on my back, her nails digging in. Cait churned against me, moaning into my shoulder and biting it.\n\n\"Uhhhhhhh...\" I heard her sigh, feeling her heart thundering against me, as she could no doubt feel mine. Her head finally came up and her blue eyes were crystalline, tears on her cheeks. She smiled at me warmly and then pressed her lips to mine. We kissed one another lovingly for some time, just enjoying the sensation of being bound to one another like this. An eternity could have passed, I wouldn't have noticed.\n\nI lifted her gently, feeling her shudder as she sank once again onto my still-hard cock and brought her around the side of the vehicle. She slowly lowered her legs and tried to touch the ground, but couldn't, because she was still impaled on me and I was significantly taller than her. She giggled and I held her still while I bent my knees slightly and then withdrew from her, making us both shiver.\n\nThere was a ridiculous squishing noise as my cock left her pussy and she shuddered and giggled as my cum began to seep out of her. Without a word, she dropped to her knees and had my cock in her hand, stroking it before slipping the head inside her mouth, moaning as she tasted our mingled cum. Then she slid her mouth slowly down my length, humming quietly. I stood still, my eyes closed as I reveled in the feel of her hot, wet mouth enveloping me.\n\nShe moved her head back and forth slowly, enjoying herself as she cleaned our cum from my still-hard dick. Her hands were on my hips and her breasts were pressed against my thighs while she cleaned me lovingly. Finally, she pulled her mouth off me off smiled up at me, her hand now gently pumping along the shaft.\n\n\"You're still hard,\" she mused. \"Want some more? I'm hoping my girl can take it, because I want to feel you in me again.\"\n\nI nodded and she stood, hugging me and sighing contentedly. She then opened the back door of her car and pulled out a large blanket she'd stored back there, probably for this occasion. She spread it out on the ground, in an area where the sun's warm rays just peeked through the trees and then lay on her back, with her legs spread wide and her arms reaching out for me.\n\nI came down onto the blanket and took her in my arms, kissing her lovingly and without delay, slipped my cock back inside her gooey pussy. She sighed in rapture and held herself to me tightly before opening her eyes, smiling at me and booping my nose.\n\n\"You don't need to cum again, Trekkie,\" she cooed, her slick walls holding me tight. \"I just wanted to keep you inside me a while longer, y'know?\"\n\nI nodded and we kissed some more. She sighed and stretched her body, noticeably pressing her breasts up close enough to be kissed. \"Can you believe we're lovers now?\"\n\n\"I think we're both thankful for that.\" I answered, gently sliding myself in and out of her. I leaned my head down and kissed her breasts and swirled my tongue around her nipples. There were no artificial barriers between us anymore, no vague proxies for intimacy. We could fuck and make love freely now. For the most part.\n\nShe must have sensed my thoughts, because she smiled. \"Yeah, we'll be a secret from my parents, of course. And while most of our friends won't give a shit if we're fucking, we'll have to be careful there, too, because some of them talk and things have this disturbing habit of finding their way back to my mom and dad. They'd make my life a living Hell before you finally had to kill them on my behalf.\"\n\n\"Anita's gonna be thrilled that we've finally done it,\" I pointed out. \"She's been so exasperated that we've been holding off on fucking for absolutely no good reason as far as she's concerned.\"\n\nCait nodded. \"That does bring up another point, though. I'm glad we're doing this, I've wanted to for a long time, but... it's really okay with me that you have sex with Anita, Mike. I know it's casual. And society'll never let us date properly because... well...\"\n\n\"Because I'm pretty much twice your age?\" I asked, grinning and pushing my cock as far inside her as possible, making her shudder and gasp uncontrollably.\n\n\"Yeah, that,\" she breathed, finally adjusting and then gently thwapping my shoulder. \"Bastard, tell me next time you're gonna do that.\"\n\n\"Nope,\" I said cheerfully. \"But the same holds for you, Cait. You can date other people if you feel the need.\"\n\n\"I probably will date casually, just so my parents don't get suspicious,\" she mused, caressing my back. \"You're really okay with me dating?\"\n\n\"It's not like I own you.\" I reasoned.\n\n\"It sure feels like it at the moment,\" she purred, smirking and undulating beneath me, squeezing her pussy around me. \"An' I likes it.\"\n\n\"I love it too,\" I said, nodding. \"We can be lovers all you like, Cait. We both want it. If our relationship status changes, we just tell one another, alright?\"\n\nShe nodded. \"And unless it's something super-serious, I'll probably keep fucking you on the side. You okay with being my side-Trekkie?\"\n\n\"Perfectly.\" I replied, pushing deep inside her and making her shudder and cry out as she came.\n\n***\n\nTrue to my word, I took her to one of my favourite places to eat in all the county, a little upstairs place that served amazing crepes, of both the main course and dessert variety. Cait teased my about my 'old man' choice of swiss cheese and asparagus, while I prodded her about her Millennial aversion to real food.\n\nHer response was to reach under the table, coat her finger in her pussy juice, slink around to my side and then wipe her hand on my crepe when no one was looking.\n\n\"At least now it's interesting and edible...\" she said airily as she sat down and resumed eating.\n\nLater, we were walking hand-in-hand along the beach, just enjoying being together. We had removed our shoes, leaving them back at the car while we sauntered around on the warm sand. The wind off the lake was stiff enough to make her nipples harden beneath her tank-top and she giggled as she hugged my arm, pressing her breasts into me to let me feel them.\n\n\"Y'know what's great about us fucking now?\" she asked, squirming her tits against me subtly.\n\n\"Aside from everything?\" I quipped, grinning at her. \"Please elucidate.\"\n\nShe giggled. \"Because we'll still have fun like we did before, too. Same silliness and shenanigans, but there's another level to it now. We can be around our friends and be like we always have been, but the minute they're gone, you can tear my clothes off and rape me, y'know?\"\n\nI nodded. \"Well, I do love raping you, no argument there.\"\n\n\"You haven't raped me yet, silly,\" she pointed out, giving my arm a thwap. \"Not gonna make me wait too long, are you?\"\n\nMy response was to grip her wrist and alter our course, walking her over to a thick stand of trees that bordered the beach. She clued in what I hand in mind once we were inside the stand, her eyes going wide.\n\n\"Are you serious?\" she breathed, looking nervous. \"I mean, there aren't that many people around, but...\"\n\n\"I've passed this stand of trees before and mused that it would be perfect to fuck in,\" I replied, pushing her up against the trunk of the largest tree and lifting her skirt before reaching under to fondle her suspiciously moist pussy. \"So my question to you is, are you gonna chicken out here, the first day of our new, glorious understanding?\"",
        "She thought about that as she squirmed on my fingers, her skin already going pink. She bit her lip as she considered my words. \"No one is gonna see us?\"\n\n\"Probably not,\" I replied, massaging her clit with a finger and making her shudder. \"But we'll both regret it if we don't fuck in public today.\"\n\n\"Gnnn, true,\" she sighed. \"Let's have a quickie then. Knowing us, there'll be endless marathon sessions, so it's good to have some variety.\"\n\nI let her undo my belt and slide down my pants and boxers, my cock springing free. I was already hardening in anticipation of being inside her again. She looked up into my eye as her hand wrapped around my thickening shaft and stroked me eagerly.\n\n\"Gonna fuck me with this thing?\" she asked quietly, her eyes glinting in desire. \"Get it deep in me and cum in me?\"\n\n\"That's the plan, little girl...\" I whispered back, nestling between her legs as she released her grip on me and began sliding my cock against her gooey slit. I took her by the wrists and pinned them over her head with one hand. She shuddered as my strength overpowered her. One leg slug around my hip.\n\n\"Oh, God...\" she whispered, almost too quietly to hear.\n\nI gripped her waist with my free hand and pushed myself inside her. She was already so wet that I didn't need to prepare her entrance. My cock slid through the tight ring of muscle and she sighed as loud as she dared. We both completely ignored the outside world as we lost ourselves in one another.\n\n\"That feels so good,\" she sighed in a tiny voice. \"You feel so good...\"\n\nWe looked into one another's eyes as we pushed our hips together rhythmically, her wet pussy squeezing me with each thrust. We weren't looking to prolong climax, we just wanted to cum together. We were so into our mutual lust that we didn't even need to fuck quickly in a frenzy, making noise. Just churning against one another had the desired effect.\n\nWithin two minutes, Cait sighed and pressed to me with all her might, taking me deep inside as I came in her. We kissed deeply and hungrily while we climaxed together. We were both panting heavily as our fucking ended, foreheads pressed together.\n\n\"God, I love you...\" she whispered, her hands coming down to caress my shoulders and through my hair.\n\n\"I love you too, squirt,\" I replied, my hands on her waist, my cock still buried in her. \"See? We didn't get arrested.\"\n\n\"More good luck than good management, I'm sure,\" she giggled, shivering as I pulled myself out of her. My cum was already trickling down her leg and just plain dripping out of her pussy onto the grass below. \"Lookit the mess you've made of me, Ludo. Can't take you anywhere, can I?\"\n\n\"That didn't exactly sound like a complaint,\" I said, grinning as we walked out of the knot of trees, holding hands again. \"And I'm really glad we did that.\"\n\n\"Me too,\" she said cheerfully, hugging my arm. \"And just think, now we can make porn of ourselves and not have to use Joaquin and Solitaire as proxies.\"\n\n\"I love that sound of that, too,\" I agreed. \"We can use them when you like, of course. It'd be fun for Joaquin fuck you at the same time I do.\"\n\n\"Oh, you mean DP me?\" she almost exclaimed, her eyes widening as she looked at me. \"Jeebus, I might die.\"\n\n\"A chance I'm willing to take, babygirl.\" I laughed.\n\n***\n\nCait was asleep on me in the living room as I sat in my big Love-Sac chair. She was facing out, her legs resting on mine while my hands sat contentedly on her breasts. A light coverlet was thrown over us. I smiled as I looked at her face, which seemed so angelic in the dim light. I kissed her temple and she murmured contentedly, nestling into me a little more while still sound asleep.\n\nI heard the door to the foyer open and in came Anita, returning from who-knows-where. She glanced into the living room, seeing us sunk into the chair. She gave me a suspicious look before walking over quietly, still staring at Cait and I. With one hand, she pulled the coverlet away, exposing our bodies- she could now see that my cock was deep inside Cait, her pussylips split wide by my shaft.\n\nShe looked at the ceiling, crossed herself and mouthed the words 'Thank you, Jesus' before replacing the coverlet and heading upstairs without another word. I tried not to chuckle, lest I wake up my beloved Cait.\n\nShe stirred and returned to consciousness some half hour later, turning around and kissing me, whispering about what she had planned for us. I knew then we were going to be pretty inseparable.\n\nThus began the Summer of Love.\n\n***\n\nAuthor's Notes: The story ain't over, so please no PMs and whinemail about wanting more. I'm having a hard-enough time sticking to my publishing schedule as is, since people keep throwing it out of whack by donating to my fiduciary well-being (#nocomplaintshere).\n\nI'll just clear this up, since many people seem strangely confused- our narrator's name is Michael (well, duh). Cait calls him Trekkie (after the perverted Avenue Q muppet) and Ludo (after the oversized and terrifying but lovable monster-muppet from Labyrinth). She will use them interchangeably, please try not to fall behind.\n\nWell, Season One of the show I'm working on is wrapping very shortly, so I'm hoping the interim will give me plenty of uninterrupted time to write. This shouldn't be an issue, except that the studios, like my hometown in general, are overrun with trash pandas, and they really know how to make a mess of things. More than a few times, the lot has run out with my infuriated battle-cry of \"OI! YOU!!! GET THE FUCK OUT OF MY SET, YOU FUZZY LITTLE BASTARD!!!\", much to the amusement of other members of the production.\n\nThe circle of friends will grow, some of whom will know, others of whom will remain comically ignorant. Anita will still figure prominently in the narrative, I promise you. A lot of people seem to like her. Solitaire and Joaquin will make intermittent cameos. Not surprisingly, the format of the chapters to follow will fall between sitcom and slice-of-life stories, as we follow the progress of our characters.\n\nNote- some cam sites do indeed allow unauthorized personnel on-camera for sex, even males. Not every site has MFC rules. Don't bother whining, anonymously or otherwise, it's just boring.\n\nNote- quit whining about what you consider to be the extraneous 'u' in the way I spell things. It's the correct way and you Americans aren't saving neurons by dropping it out, you're just lazy. Colour, armour, glamour, flavour, humour, honour... I have faith in your ability to withstand this assault on your senses. I've received at least ten tantrum PMs on the subject, enough is enough.\n\nProbably not much in the way of publishing for a bit, at least through the weekend, because I have a few Nazi-punching events to go to. I love writing, but important things are important. Why should Bethesda and their Castle Wolfenstein franchise have all the fun?\n\nI'm should sign off before I go on an ethics or political rant. I have the WORST luck with editors, so I'm'a proof-read do this chapter myself and submit it. Hopefully I can be attentive enough to catch any mistakes, because I couldn't do worse than my last batch of editors. Pity I'm so bad at self-editing. :/\n\nKeep your stick on the ice!\n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "age difference",
        "may-december romance",
        "humour",
        "male-female",
        "public sex",
        "oral"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/like-a-daughter-to-me-ch-03"
}