{
    "title": "How To Get People to Read Your Story",
    "pages": [
        "What makes a Literotica reader click on a story? Many people choose from favorite categories or authors. Still others rely on the little \u201cH\u201d (for Hot) and \u201cE\u201d (for Editor\u2019s Pick) designations. Often, I\u2019m sure it\u2019s just random impulse. \n\nIf you\u2019re like most of us authors, you aren\u2019t just writing for yourself. You want other people to read your work. Here at Literotica, the competition is fierce. I\u2019m going to explain how you can push the odds in your favor. \n\nWhen a reader looks at the New Stories page, he finds a list of titles and one-line blurbs describing the stories. As a writer, this is your first chance to hook a reader\u2019s interest. Laurel, the webmistress, writes the one-liners, and luckily for all of us, she\u2019s damn good at it. You, however, choose the title of your story. Be smart and take advantage of this. Here are some do\u2019s and don\u2019t\u2019s.\n\n1. Take some time to think. Really! Don't settle for the first title that flits into your head. Let\u2019s say your story revolves around a wife and a poker party orgy. Linda and the Poker Party seems bland and unimaginative. (Plus, it\u2019s kind of a clich\u00e9 plot anyway.) At least challenge yourself to think of a clever title. Personally, if I don't get that That\u2019s it! That\u2019s THE TITLE! feeling, I keep thinking. Pay attention to your intuition. Choose a title that resonates with the story you've written. \n\n2. Often catchy titles are plays on words. Luckily the subject of sex lends itself to that very well. For example, my non-consent novella is about a girl whose father sells her to a corporate pirate to use as he pleases for one week. I named that tale Hostile Takeover. You can see the double-meaning.\n\nTry looking for a pivotal theme, idea, or scene from your story and brainstorm words and phrases around it. Taking the poker example, I might think of bets, wagers, chips, laying cards down, bluffing, full house, four of a kind, dealers, winning the pot, antes, raises, etc. Then I might try to associate one of those thoughts with some aspect of the story. These examples aren\u2019t the best, but hopefully you get the idea.\n\nBetting on My Wife \nAss, Mouth, and Pussy: Three of A Kind \nCalling Her Bluff \nBluff or Muff? \nBluffs and Muffs \nThe Jack-Off-Pot\n\n3. Another method for choosing a title is to quote a phrase in your story that jumps out at you. While writing a story set on a golf course, I gave it the working title, By the Water Trap. I knew that was a stupid title, so after finishing the first draft, I looked for a catchy, engaging phrase that somehow captured the fun, romantic mood I was trying to create. I ended up calling it A Hint of Gorgonzola, which is something one of the characters says in the story.\n\n4. In general, I\u2019d stay away from The (fill-in-the-blank) titles, such as The Pool, The Apple, The Stripper, etc. Stories with these types of titles may indeed be titillating, but as a reader, I\u2019ll be more likely to pass and go to another with a more intriguing title. Remember, the goal here is to get them to click on your story. All the wonderful writing in the world won\u2019t help unless you get them to choose your story above the others on the list.\n\nHowever, this type of simple title can be effective if a word is unusual or thought-provoking,. My second erotic novella is called The Artifact. Despite the fact that I generally dislike The (fill-in-the-blank) titles, I\u2019m happy with this title because the word \u201cartifact,\u201d conjures an ancient mystique that I want.\n\n5. Titles that revolve around the female character\u2019s name are so common, they\u2019ve become clich\u00e9 (Candy\u2019s Hot Adventure, All About Kimmy or Cindy Gets Laid) If you go this route, there\u2019s a danger that your story will get lost among the other name titles. This isn\u2019t to say names have no place in a title. If you can incorporate the name in a unique way, then do it. Just don\u2019t be boring. For example, I\u2019ll probably ignore Nina\u2019s First Time, but I may click on Nina and the Man from the KGB, just because I\u2019m curious about the spy aspect.\n\n6. Some people swear by alliteration (using words that repeat the first letter, as in \"Hot, Hefty, Humongous Hooters.\") Be careful about forcing alliteration just for its own sake. You run the risk of having your title sound contrived. Tawny T. maintains alliteration is one of the reasons for her popularity, but at this point, I think her consistent use of alliterative titles is more of a trademark for her, rather than a practice that all authors should put into use.\n\n7. Because the categories at Literotica are set up alphabetically, some authors try to gain an advantage by adding asterisks or numerals to their titles. (*The Birthday Party*, or 16 Ways to Fuck Mommy) This way their story will be at the top of the list, even before the A\u2019s. Or they are a little less blatant about it and just use a title that starts with A. I think this is less than admirable behavior. It\u2019s tantamount to admitting your story can\u2019t stand on its own, so you have to try to manipulate the lists to give it an edge.\n\n8. Beware of \u201ctricking\u201d the reader with a title that doesn\u2019t fit your story. If you wrote a romantic, erotic interlude between two loving people, and you name it My Endless Fuckorama you\u2019re misleading the readers into thinking your story is something it\u2019s not. And they\u2019ll get annoyed. On the other hand, if your story is just about sex, pure and simple, wet and wicked, you might want to say so with your title. \n\nNo matter what type of story it is, I personally prefer understated titles that don't have an obvious sexual connotation. Then I have the opportunity to figure out the double-meaning myself, and it's not pushed into my face like a foul-smelling cock. That\u2019s just my opinion. Not everyone feels the way I do. Some people looking for masturbatory fuel appreciate being able to recognize the pure porn from the XXX title.\n\nNow, I\u2019ve gone on and on about titles, because it\u2019s the first thing readers see, but there are a couple of other things you can do to increase the number of people clicking on your stories.\n\nWhen you submit work to Laurel, you are asked to identify some key words because many readers use the \u201csearch\u201d function to find stories they want to read. When making your list of key words, think like a reader. What key words would you use to search with? If you create a comprehensive list, you may grab more readers than you otherwise would have. However, don\u2019t cheat by using popular words like \u201cincest,\u201d if there is no incest in your story. Again, you\u2019ll just end up making people mad.\n\nLastly, the most difficult (but the most fulfilling) method to get people to read your stories is to build a readership. There are many well-known, good writers here at Literotica. People know they can rely upon these authors to provide them with a well-written, hot story. If you have only just begun dabbling in erotic fiction, don\u2019t fret. Just keep this in mind as a goal. \n\nTo summarize, the simplest way to get people to read your story is to choose a solid title. Avoid the commonplace and strive for the intriguing. Choose your key words carefully; some people choose stories based on them. Finally, write your best and keep posting. Readers will be loyal to authors who faithfully deliver excellence."
    ],
    "authorname": "Whispersecret",
    "tags": [
        "people read",
        "poker party",
        "title",
        "read story",
        "reader",
        "story",
        "people"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-get-people-to-read-your-story"
}