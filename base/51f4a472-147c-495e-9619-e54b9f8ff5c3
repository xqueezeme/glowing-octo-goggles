{
    "title": "Runaway Pt. 04",
    "pages": [
        "Authour's Note:\n\nThis is the finale of Runaway. After a romantic evening in Toronto, Lacey and Noah reach Montreal to discover her family has fallen apart while she's been gone. \n\nChapters have been marked throughout the story.\n\nSpecial thanks to the team of people who beta-read and edited this story: BarryJames1952, Bebop3, norafares, OneAuthor, and Steve M. This story would not be possible without them. Any remaining errors\u2014factual, grammatical, or otherwise\u2014are my own.\n\n**\n\n<center>Chapter Ten</center>\n\n\"So, Noah. Where are you from, exactly?\" \n\nI looked up from cutting my steak at Sean. Noah swallowed the bite of food he'd taken.\n\n\"I grew up in the Kootenays. Cranbrook, BC, mostly.\" \n\n\"And now?\"\n\nI tried not to glare at Sean.\n\n\"A little bit of everywhere. Going back to Toronto in the fall for work.\"\n\n\"Oh, what do you do?\" \n\n\"Got a carpentry background. Gonna be working on a construction site downtown, I think.\" \n\nIt probably shouldn't have surprised me how easily Noah could talk around those questions without specifically lying. I knew he didn't like talking about his past, so answering the way he had still afforded him some privacy while satisfying Sean's curiosity. My mom, on the other hand, wasn't so easily pleased.\n\n\"Do you still have family in Cranbrook?\" she asked.\n\n\"A few aunts and uncles, I think.\" \n\n\"What about your parents?\"\n\n\"My dad died when I was a kid. My mom and I aren't close.\" \n\nMom had the decency to look slightly ashamed. \"I'm so sorry to hear that.\"\n\n\"Thank you.\" \n\nI thought that was it for the conversation and took another bite. As usual, I was wrong.\n\n\"So what were you doing on the train when you met my daughter?\" \n\n\"Heading up north. Figured I'd work on the patch or something for a few months.\"\n\n\"Do you switch jobs often?\"\n\nNoah smiled politely. \"I've been trying a few different things out.\"\n\n\"You must have been doing well to be able to drop everything and help Lacey. What did you do before?\"\n\nI swallowed my bite of steak barely chewed, almost choking on it. \"Mom, come on.\"\n\n\"I'm just trying to get to know Noah,\" she said smoothly.\n\n\"Was out east working on a boat. Figured I'd try fishing.\" Noah smiled tightly. \"Wasn't for me.\" \n\n\"So you just up and left without something else lined up? Or did they let you go?\"\n\n\"Mom!\" \n\n\"What, Lacey? It's a fair question!\" \n\n\"You're interrogating him.\" \n\n\"Noah doesn't mind, does he?\" She raised her eyebrows at him.\n\n\"No, ma'am.\" He clearly didn't mean it, given that his tight smile grew even more tense as he clenched his jaw.\n\n\"Well, I personally would hate working on a fishing boat,\" Rick cut in. \"I mean, I'm sure being surrounded by hunky fishermen all day would be just dreamy, but I can't imagine the smell.\" \n\n\"That's where your mind goes?\" Sean laughed. \"Being surrounded by a bunch of seamen?\" \n\nI nearly choked on my wine as everyone burst out laughing. \n\n\"How did you two meet?\" I asked Sean when I managed to stop coughing. \n\n\"My boss was designing a house with Sean's firm,\" said Rick. \"Damn guy has more money than he knows what to do with but couldn't care less what his house looks like. All, 'whatever, Rick, ask Aspen what she wants in the house.' And she's all, 'I don't care, Rick, I'm barely home. Make sure the bedroom has a bed in it.' So of course, I had to step in and decide how to spend their money.\" \n\n\"He was a nightmare to work with,\" said Sean. \"Doesn't know a thing about architecture but wanted everything laid out just so. I think he was secretly doing it so he had an excuse to spend more time with me.\"\n\n\"Oh, it wasn't a secret, everyone fucking knew that except you,\" Rick said to another round of laughter. \"Theo was so pissed when he found out I'd added two extra rooms and a pool just so I had more excuses to talk to you.\" \n\n\"We finally finish the project and Rick goes, 'Hmm. Maybe you could design a house for me now.'\" Sean rolled his eyes. \"A year later, we moved into it together.\" \n\nI was itching to ask how Sean had managed to get a degree in architecture and pay for it after being kicked out at 17, but didn't want to risk the light-heartedness that Rick had so thankfully provided. Instead, I smiled at Sean.\n\n\"You guys are so great together. I'm so happy for you.\" \n\nHe blushed, beaming proudly as he patted Rick's hand. \"Thanks, sis.\" \n\n\"So, sorry Rick, you mentioned something about being a glorified servant. What is it that you do?\" I asked. \n\n\"His best friend's famous and Rick's his assistant,\" Sean answered for him. \"He's a professional best friend.\" \n\nRick rolled his eyes but took the comment in stride. \"He didn't hire me to be his best friend, he's just paying me for all the years I was his best friend for free.\" \n\n\"I swear, I'm going to get you business cards with 'Professional Best Friend' on them.\"\n\n\"Don't seem to mind so much when it keeps you rolling in steaks and bottles of wine.\"\n\n\"You said those were gifts!\"\n\nI couldn't stop laughing as they teased each other, sharing a quick kiss before going back to their plates. Noah listened quietly, and I realized the conversation was making him uncomfortable. There didn't seem to be anything we could talk about that everyone was all right with. \n\nI apologized to him after dinner, going to his room under the guise of looking through the rest of the boxes. \n\n\"It's fine,\" he said. \n\n\"You were uncomfortable.\"\n\n\"Lacey.\" He stopped what he was doing, looking at me intently. \"I'm not gonna pretend like this is what I'm used to, but it's fine. I just don't know what to say to them that won't cause issues for you.\"\n\n\"I don't want you to think you have to hide who you are.\"\n\n\"We come from different places.\" He returned to his backpack, digging for his soap and toothbrush. \"Never stayed in a house like this before. Dunno what to do or what to say. Your family wants to judge me for my background, that wouldn't bother me. I'm used to it.\" He looked up again. \"You're not. You've gone through enough this week, you don't need more drama because of me.\"\n\n\"Don't leave.\"\n\n\"Promised you I wouldn't.\" \n\nI bit my lip. \"They just... we all just need time, I think.\"\n\n\"You don't trust me? I promised I wouldn't go, I won't go.\" \n\n\"That's not what I meant.\" I glared at him. \"And you know damn well that I trust you.\"\n\nHe shook his head and laughed.\n\n\"Careful, Lacey. That's the third or fourth time you've sworn today. Gonna have a mouth like a trucker soon.\" He crossed the room and kissed me. \"Gonna take a shower, clean up a little. Rick said I could use their washing machine so I'm taking him up on it. Can't leave without my clothes, you know.\"\n\n**\n\nEveryone turned in relatively early that night.\n\nBetween the travelling, emotional breakdowns, and startling revelations, all of us were fairly tired.\n\nI put on fresh pyjamas after showering, grateful for the feel of clean, fresh clothing against my skin. When I finished, the upstairs was quiet and the rest of the house was dark, so I went into Sean's office, said my nightly prayers, and laid on the futon. It was extremely uncomfortable, hard metal bars jutting through the thin cushion, and I made a mental note to tell Sean his futon sucked. \n\nI tried for a long time to get comfortable. My body was tired, my mind numbly exhausted. If it weren't for the discomfort of the futon, I might have fallen asleep before the thoughts of worry and frustration invaded my mind, but that wasn't the case. Soon, not only was there a metal bar running across my kidneys, but I was staring at the dark ceiling with annoyance as the day's events played over and over in my head.\n\nWhen I finally had enough, I told myself to go try sleeping on the sofa. Honestly, I did. I rolled off the futon, my body aching like I was in The Princess and the Pea, and went to the door. Cracking it open, I checked the hallway. There were no lights on, and no cracks of light under any of the door frames. Silently, I crept from Sean's office and down the stairs, thankful the house was new enough that nothing seemed to creak yet.\n\nAnd then I walked by the sofa and continued towards the basement.\n\nA golden line of light glowed under the door frame to Noah's room. Quietly, I tapped on the door, then turned the knob and let myself in.\n\n\"Was wondering if you'd do that,\" Noah said quietly. \n\n\"I couldn't sleep. That futon is terrible.\" \n\nHe was lying in bed shirtless, a few pages away from finishing the tattered novel. Putting it on the table next to the bed, he reached towards me as I scurried across the room.\n\n\"I'm glad you're still up.\"\n\n\"Couldn't sleep. Got used to having you close by. It felt weird.\" \n\nI crawled in next to him as he turned out the light. Moments later, he was hugging me close to him, powerful arms that made me feel so small, so infinite, and so safe all at once. \n\n\"Should we talk about this now?\" he asked softly.\n\n\"Probably.\"\n\nQuiet moments passed as neither of us were willing to actually talk about it.\n\n\"I don't want to lose you,\" I finally whispered.\n\nHis lips found my forehead. \"Me either.\" \n\nA long time passed without either of us speaking. Whether intentional or not, we both fell asleep. \n\n**\n\n\"I figured you'd end up hating the futon.\"\n\nI froze in the doorway to the kitchen. Sean was sitting at the table, a steaming coffee in front of him as he grinned at me.\n\n\"Um... don't tell Mom?\" \n\nHe chuckled quietly. \"I won't.\"\n\n\"I didn't think anyone would be up yet.\"\n\n\"Rick's a late sleeper. Habit from working with an entertainer. Mom was probably up late crying again. And Noah...\"\n\n\"We didn't do anything.\" I walked into the kitchen and sat across from him, helping myself to the coffee in the French press on the table. \"That futon just really sucks.\" \n\n\"I know. Rick hates it, too.\"\n\nI poured enough sugar in the coffee to make Sean wince. \"Why don't you get rid of it?\" \n\n\"Jesus, does it even taste like coffee once you're done with it?\" he asked, watching as I added a healthy amount of cream.\n\n\"I don't know. I don't really drink coffee on its own.\" \n\nHe rolled his eyes. \"Rick tries to throw it out, I bring it back inside. It was the first piece of furniture I ever bought. Can't bring myself to get rid of it.\" \n\n\"Oh.\" \n\nSean smiled. \"It's weird to hold onto it, I know. But it reminds me how far I've come.\"\n\n\"You've done incredibly well. I'm so proud of you.\"\n\n\"I'm proud of you, too. You've grown up a hell of a lot since I left. I missed so much.\" \n\n\"If it makes you feel better, most of that has been in the past week.\" \n\nWe sat quietly, sipping our coffee.\n\n\"Why don't you like Noah?\" I asked suddenly.\n\nSean sighed. \"I do like him. It's just overprotective big-brother mode turning on.\"\n\n\"Why?\"\n\n\"He didn't seem like... he seemed kind of rough, you know?\" Sean stared down at his hands. \"I shouldn't judge, especially not just by sight. I know that. Rick and I talked about it last night after we went to bed. He said Noah's a smart guy, really down to earth. And he clearly cares a lot about you. How something like that happens in a week, well... I guess weirder shit has happened. I prayed about it last night.\" \n\n\"You still pray?\"\n\nSean laughed. \"Yeah. And I've been going to church again. Rick's even coming with me these days.\" \n\n\"Even after...\"\n\n\"Yes, even after Dad.\" Sean took another sip of coffee before proceeding. \"He took something beautiful and made it into something terrifying. What Dad does isn't religion. It's to control people through fear.\" He looked at me steadily, eyes earnest and searching. \"If you feel like you're a little lost, I understand. I went through it, too.\"\n\n\"It's very confusing,\" I whispered. \"I just don't know how... how to follow the rules anymore.\"\n\n\"You know the important rules. The rest is just humans thinking they understand God's plan.\" Sean smiled encouragingly. \"Come to church with me and Rick on Sunday. Noah, too, if he wants.\" \n\n\"I don't know if Noah would.\"\n\n\"That's okay. Church-goer or not, he's still a good person.\"\n\nI bit my lip. Sean's words should have made me feel better, but he didn't know about Noah's past.\n\n\"Can I tell you how we really met?\" I asked softly.\n\n\"Please.\"\n\n\"And you won't judge?\"\n\n\"Of course not.\"\n\nDrawing a breath for strength, I told him about the drugged drink on the train and how Noah had stepped in. Then I told him about how Noah had refused to leave me on my own because he was certain I'd end up dead in a ditch if he did, about him being there after my father's first phone call, and how he talked me through the panic attack in BC when we realized we were going the wrong way. \n\n\"And there's more, but...\" I stopped, staring at my coffee cup. \n\n\"But you're about to tell me he's a convicted criminal.\"\n\nMy eyes shot up. \"How did you know?\"\n\nSean's face faltered and his eyes went wide. \"Shit, Lacey, I was joking! Are you fucking serious?\" \n\nI felt my face going red as my mouth dropped open. \n\n\"You're not joking. Holy shit, you're not... what... please tell me he's not a murderer.\" \n\n\"He's not!\" I hissed. \"He... he used to...\"\n\n\"Assault? Rape? I'll kick his fucking ass if he hurt you.\"\n\n\"Sean! I just told you about all the selfless things he did for me and that's where your mind goes?\"\n\nSean stopped, his face red, breathing unsteadily. \"You're right. You... this is why you didn't want to tell me.\" He took a deep breath. \"Sorry. I'm sorry, Lace. Really.\"\n\nI took another sip of coffee, trying to calm myself down. \n\n\"He used to be into drugs,\" I said softly. \"A long time ago. Six years, I think he said. He got in with a bad crowd of people, got caught stealing someone's truck, and hasn't stopped paying for it since.\"\n\n\"And then he stole a car last week.\"\n\n\"Sean\u2014\"\n\n\"I know. Fuck.\" He shook his head. \n\n\"He knew the guy he took the car from. He did ask to borrow it... just not for how long he ended up having it.\" \n\n\"And you were okay with that?\"\n\n\"No. After they confronted us, I gave them my necklace to make them go away. The girl, she... she just wanted to do something to hurt Noah. So that was good enough for her.\"\n\nMy coffee was almost gone. Sean poured more while I continued talking, adding cream and sugar without needing to ask. \n\n\"I left him in Hinton. Took the bus to Edmonton by myself to catch the train there. And you want to know what happened?\"\n\n\"What?\"\n\n\"My backpack got stolen.\" \n\n\"What?!\" \n\n\"Between the bus and the train station. I left it with the shuttle driver and someone stole it. I didn't even know until we were at the train station and it wasn't there.\" \n\n\"Shit, Lacey. What did you do?\"\n\n\"Sat on a bench and cried.\" \n\nHe snorted. \"Really?\"\n\n\"Yeah. My phone, my wallet, everything was in there. I couldn't even call you. I would have had to call home for help.\" \n\n\"Oh.\" \n\n\"Noah found it.\"\n\n\"I thought you left Noah in Hinton.\"\n\n\"He was on the bus. He saw me, I didn't see him. He left me alone and would have respected me not wanting to see him, except he saw the kids who stole my backpack and got it back from them. Then he got over to the train station, gave it back, and went to leave again.\"\n\nSean's face was stoic, watching me carefully.\n\n\"I asked him to stay. I asked him to promise he wouldn't keep any more secrets or do anything like that again. He promised.\"\n\n\"And you trust that?\"\n\n\"Completely.\"\n\nHe considered me for a long moment.\n\n\"Okay. If you trust him, I trust him.\" \n\n\"Thank\u2014\"\n\n\"Just answer one thing.\"\n\nI stopped, looking nervously at him. Sean leaned forward, lowering his voice so much I had to lean forward to hear him.\n\n\"Are you two fucking?\"\n\n\"Sean!\"\n\nHe laughed. \"You are?\"\n\nMy face was burning as I sipped my coffee. Sean continued to stare at me, waiting for an answer.\n\n\"Yes,\" I growled miserably. \"But that was my choice.\"\n\n\"Was he... you know, your first?\"\n\n\"I can't believe you're asking me this.\" \n\n\"I know for a fact there was no way you got a sex talk from Mom and Dad. So yeah, I'm asking you this.\" \n\nI stared at the wall behind him, willing the floor to open up, a meteor to hit, anything to get me out of that conversation.\n\n\"Yes.\" \n\n\"You were safe?\"\n\n\"Yes.\"\n\n\"Was he good?\"\n\n\"Sean!\" \n\nHe nearly fell out of the chair laughing. \"What? It's not my fault your boyfriend is hot. All dark and mysterious with that killer jean jacket.\"\n\n\"He's not... I don't know if he's my boyfriend.\" \n\nSean raised an eyebrow at me.\n\n\"I don't know,\" I repeated. \"I... I didn't want to talk about it.\" \n\n\"I understand.\"\n\n\"He was really sweet, Sean.\" I couldn't look at him as I spoke. \"We got... well, things kind of happened, but not like, totally happened when we were on the train. When he found out I hadn't... he was so concerned. And in Toronto, he... the night I called Daddy, I wasn't... I embarrassed myself. I left in the morning without saying anything. He committed to going back to Toronto to work that job like he said, even though he hates Toronto, and came to find me. He took me on a real, actual date, and to dinner and a hotel and... He got me a new necklace because I gave mine up in Hinton.\" \n\nI finally looked up at Sean. \"I can't even tell you how much his past doesn't matter. That's not who he is.\"\n\nThere was a mix of emotions on Sean's face. Worry was certainly there. But so was something else, something warmer. \n\n\"You really like him, huh?\" \n\nI nodded. \n\n\"You're pretty special, Lacey.\" He smiled and got up to make more coffee. \"Noah's lucky to have you. And you're lucky to have him.\"\n\n\"So you approve?\"\n\n\"I can think of a million reasons not to.\" Once he had refilled the French press, he came over to set it on the table while it was brewing. \"Most of them revolve around you being my baby sister and me not wanting to accept that you aren't the kid I left behind at home. Some of them are because you've known him for a week and he's your first... whatever you want to qualify him as. But that would make me a huge hypocrite. Rick was my first boyfriend.\"\n\n\"Really?\"\n\nSean nodded. \"I did nothing but focus on school and work after I left home. Didn't have time for guys. Then Rick waltzed into the firm one day. I knew he was the one the day I met him. I just missed all the signs he was throwing at me saying he thought I was the one, too.\" \n\n\"Did he really add two rooms just to keep talking to you?\"\n\n\"No. It was three rooms, a pool, and he made me redesign the entire second floor.\" \n\nWe laughed quietly. \n\n\"How did you afford to go to school on your own?\"\n\n\"I had some help from Mom,\" Sean admitted. \"She sent some money. The rest was loans.\" \n\nThe little flare of anger I'd felt the previous day when Mom had talked about seeing her children pushed away returned. I realized very suddenly that it was because it shouldn't have taken both of us being disowned for her to leave. Seeing Sean kicked out should have been enough. \n\nI didn't say anything about it, just nodded. \n\n\"Now, what are you going to do?\" Sean asked.\n\n\"I still don't know.\"\n\n\"You know you can stay as long as you like.\"\n\n\"I feel like you'll have your hands full with Mom.\"\n\nSean snorted. \"Yeah, I don't know what her plans are. Maybe you two can settle here somewhere. Mom said you want to be a teacher. There's lots of teaching jobs around here.\" \n\n\"Maybe.\"\n\n\"Give yourself a couple days to recover. I'm sure whatever the next step is, it'll come to you.\" \n\nI nodded. From above, we heard someone begin walking around.\n\n\"Sounds like we're about to get company,\" Sean said.\n\n\"Sean?\"\n\n\"Yeah?\"\n\n\"Thank you.\"\n\nI stood up and hugged him tightly, much to his surprise. He hugged me back.\n\n\"Any time, sis.\" \n\n**\n\nThe day was going so well.\n\nAfter coffee with Sean, I'd gone back upstairs and gotten dressed. When I returned, Rick was in the kitchen making breakfast, Mom was at the table drinking coffee, and Noah was just coming up from the basement.",
        "\"Morning,\" I said to everyone.\n\n\"Good morning,\" Rick responded. \"How about that futon, Lacey? Comfortable, eh?\"\n\n\"Oh, it was perfect,\" I said. Rick raised his eyebrows. \"Who doesn't love having metal bars jab into their body every time they move?\"\n\n\"See, Sean? It's terrible. We need a new futon.\"\n\n\"We'll see,\" Sean said, exchanging a knowing grin with me. \n\n\"Good morning, Noah!\" Rick said cheerfully. \"Have a good sleep?\"\n\n\"Great, thanks.\" Noah looked longingly at the coffee on the table. \"Mind if I help myself to a cup?\"\n\n\"Only if you don't abuse it the way Lacey does,\" Sean replied, passing him a mug. \"Should've just heated up a cup of cream and sugar, skipped the coffee.\"\n\nI stuck my tongue out at him. \n\n\"Noah, I'm not sure if you know this, but we generally don't wear jackets inside the house,\" Mom said, eyeing Noah's jacket coldly. \n\nNoah smiled tightly. \"Force of habit, I guess.\" \n\n\"We don't enforce that rule,\" Sean said. \"It's fine, Noah.\" \n\nAside from Mom's comment, the morning went well. Sean had booked the week off from work, Rick was on a temporary hiatus since his boss was apparently back home visiting family, and we spent most of the day relaxing and catching up. Rick insisted on taking us to lunch at a lovely restaurant that served hearty Quebecois cuisine, then driving through the neighbourhood his boss lived in so he could point out the house Sean had designed. \n\nSean had warmed up to Noah quite a bit and they were getting along incredibly well. Even Mom seemed to be lightening up later in the afternoon as Noah shared a story about a face off with a moose he had in the mountains.\n\nWe didn't make any decisions. I still didn't know what was next or how Noah fit into it. It didn't seem to matter, though. A day of precariously building up a small sense of normality seemed right. It felt freeing, like we could go just a little while without something going wrong.\n\nYes, the whole day was going perfectly fine, until I fucked it up.\n\nWe had just finished eating dinner and I had gotten up to clear the dishes. \n\n\"Lacey, could I have some more wine?\" Mom asked.\n\n\"Sure. Red or white?\"\n\n\"Red, sweetie. Thank you.\" \n\nI took her glass to the counter and refilled it, walked back to the table, and stubbed my toe on the leg of Noah's chair. The glass jostled and almost the entirety of it ended up on the arm of his jean jacket.\n\n\"Shit!\" I cried.\n\n\"Lacey!\" my mom gasped, horrified at my language.\n\n\"Oh, your jacket,\" I whimpered, ignoring her. \"Noah, I'm so sorry.\"\n\n\"Not the first drink that's been spilled on it,\" he said. \"Don't worry about it.\" \n\nHe grabbed a napkin and rubbed it on the stain.\n\n\"That's not how... oh, give it here,\" Mom said, standing up and reaching for the jacket.\n\nIf it wasn't for what happened next, it would have been a sweet gesture of her slowly coming to terms with Noah's presence. \n\nNoah resisted. \"It's fine, I can just wash it.\"\n\n\"I insist.\"\n\n\"Really\u2014\"\n\n\"Come on, off with the jacket.\" She held her hand out for it.\n\nUncomfortably, Noah took his jean jacket off. \n\n\"Wow, that is a lot of tattoos,\" Rick commented.\n\nNoah chuckled awkwardly. \"Yeah, I guess.\" \n\nMom's lips were set in a thin line, so tight that the skin around her mouth paled. \n\n\"My, that's certainly... something,\" she said, taking the jacket. \n\n\"Don't be prudish,\" Sean said. \"Lots of people have tattoos.\"\n\nMom took the jacket to the sink. \"I didn't say anything.\"\n\n\"It's fine,\" Noah said quietly.\n\n\"No, it's not.\" Sean frowned. \"Mom, please don't talk to my guests like that.\"\n\n\"I was just surprised,\" she said. \"I just haven't seen anyone with tattoos like that who wasn't in a gang or in prison or something.\"\n\nMy face was red. Noah's face was stony. Sean's eyes bounced from me to Noah to Mom. \n\n\"That would be a story!\" Rick laughed, oblivious to the three of us. \"You've never been to prison, have you, Noah?\" \n\nThe silence in the room was deafening. Noah looked at me, uncertain of what to do. \n\n\"It's up to you,\" I mouthed at him.\n\n\"Uh, have you, Noah?\" Rick said awkwardly. \n\nMom turned slowly from the sink.\n\n\"Uh, yeah, actually,\" Noah said quietly.\n\n\"Oh shit,\" Rick said. \"Man, I'm sorry, that was\u2014\"\n\n\"Did you know about this?\" Mom's face was scarily cold as she met my eye. \n\nMy throat seemed to be swollen shut. My head jerked forward as I nodded.\n\n\"You... you brought...\" She composed herself. \"Lacey, don't you think you should have maybe discussed that with the owners of the home you were bringing him to?\"\n\n\"I knew,\" Sean said immediately. \n\n\"You knew?\" \n\n\"I knew and I don't care.\" Sean stood up, ever my protector, and moved between Noah and Mom. \"Lacey trusts him. I trust him. Look at everything he did to take care of her.\"\n\n\"What did you do?\" she spat at Noah.\n\n\"It doesn't matter\u2014\"\n\n\"I wasn't talking to you, Sean.\" \n\n\"I had some trouble with drugs.\" Noah's voice was steady, so quiet that it almost got lost in the tense electricity in the kitchen.\n\n\"Drugs.\" Mom made a strange, choked sound. \"Anything else?\"\n\n\"Some theft.\"\n\n\"Theft! Just like the car!\"\n\n\"You need to back off,\" Sean said. \"We are not fighting right now. Let's just walk away, cool down.\" \n\n\"He's a... he went to... he committed a crime! Lord, I have patience, but this... Lacey, he is bad news!\"\n\n\"Mom, stop it.\" Sean looked at me, frantically shaking his head as he saw my face turning redder and redder. \n\n\"It's about safety. Just because he hasn't done anything yet doesn't mean he won't.\"\n\n\"That's not fair, at all.\"\n\n\"I can't believe you would bring a criminal into your own brother's home!\" She spat the word like it was a piece of gristle.\n\n\"Enough!\" I screeched.\n\nSean raised his hand towards me. \"Lacey, don't\u2014\"\n\n\"You are out of line!\" I stood up, jostling Noah out of the way as I glared at my mom. \"If we all got judged based on actions in our past, you'd be just as guilty as anyone else.\"\n\n\"Excuse me?\"\n\n\"You let Daddy kick Sean out.\"\n\n\"What could I\u2014\"\n\n\"You could have told him no!\" I yelled. \"You could have left him back then. Why didn't you go before he hit you? Why did it take him disowning me for you to do something about it? Why wasn't it enough the first time?\"\n\n\"That's not the same.\" \n\n\"It's worse.\"\n\n\"Lacey, don't...\" Noah's hand was on my shoulder.\n\n\"Don't touch her,\" snapped Mom.\n\n\"Don't tell him what to do!\" I snapped back. \n\n\"I'm just trying to protect you!\"\n\n\"From what?\"\n\n\"From being involved with the wrong type of people!\" \n\n\"How is he the 'wrong' type of people?\"\n\n\"He... Good Lord, Lacey, how can you defend this? What were you thinking? You run away and meet a... a...\" She waved her hand at Noah, unsure of what to call him. \"And just trust that he's changed because he didn't have a chance to try anything?\"\n\n\"How can you be so horrible?\" My chest felt like it was going to explode as my hands shook. \"What happened to forgiveness? To not fucking judging people?\"\n\n\"Language!\"\n\n\"I'm a goddamn adult, I'll speak however I want!\"\n\n\"I'm your mother. It's my job to take care of you. I'm just trying to protect you.\"\n\n\"How can you say that when you never even tried to protect us from Daddy?\"\n\nI didn't know when it happened, but she had started crying. \n\n\"He never hurt you.\"\n\n\"Sure, not physically. Neither has Noah.\"\n\n\"I did the best I could.\"\n\nI didn't know when the tears started streaming down my cheeks, either. \n\n\"You stayed with him even after he made Sean leave. You stayed with him even though he terrified us. You let him think... you let him make us think that was normal. You didn't do anything at all until I finally got out. Why wasn't it enough when he kicked out Sean? Why?\"\n\n\"So you'll forgive him, but you won't forgive me?\" Mom said quietly.\n\n\"You expect forgiveness when you judge Noah like that?\" \n\n\"Lacey.\" Noah's voice was soft, but firm. \"That's enough.\" \n\n\"Yeah,\" I said. \"You're right. I'm leaving.\" \n\nI whirled around and stormed past everyone, shaking with the strength of emotions that couldn't be controlled. \n\n**\n\n<center>Chapter Eleven</center>\n\n\"What are you doing?\"\n\nThe sounds of people yelling at each other slithered into the room as the door opened. Noah had followed me upstairs, entering the office just in time to see me shoving as much as I could into my backpack.\n\n\"Leaving.\"\n\n\"You're not leaving.\"\n\n\"Yes I am.\"\n\n\"Lacey, stop.\" He strode forward and took hold of my backpack.\n\n\"Give it back.\"\n\n\"Talk to me.\"\n\n\"About what? You were there!\" I wiped my face furiously on my sleeve. \"I'm leaving.\"\n\n\"You're not running away from this.\"\n\n\"Yes I am.\"\n\n\"Please don't.\"\n\nThe words were small, beggingly quiet. It was only then that I looked up at Noah's pained eyes and realized they were glistening. \n\n\"Noah...\"\n\n\"Take a breath. Talk to me.\" \n\nI sank down on the futon, ignoring the metal bars that dug into my ass, and put my head in my hands. Noah sat beside me, an arm around my shoulders as I tried not to sob.\n\n\"You weren't joking. This futon is awful.\"\n\nI choked on a wet laugh, sniffling. \n\n\"I'm sorry,\" I said. \"What she said... I'm so angry.\" \n\n\"I told you, I'm used to it. You're not.\"\n\n\"You shouldn't have to be used to it.\"\n\nHis hand made gentle circles on my back. \"You're one of the only people that wasn't freaked out by it.\"\n\n\"I almost never saw you again because of it.\"\n\n\"No, you almost never saw me again because I lied about it. Then, like the unreasonable gem of a person you are, you forgave me.\"\n\n\"Because I didn't want you to leave. It was selfish.\"\n\n\"Doesn't matter. I didn't deserve it, and you did it anyway. Besides, that's not the point.\"\n\n\"It's not fair.\"\n\n\"Life's not fair. We move on.\" His hand trailed off my back and to my hand, gently enveloping it. \"Don't leave. We came all this way.\"\n\n\"We came all this way to find Sean. Not to find my mom.\"\n\n\"She's here, so make the best of it. Get some closure.\" \n\n\"Last time I got closure, my father disowned me over the phone.\" \n\nThe door to the office opened. Noah and I both looked up to see Sean standing there.\n\n\"Don't go,\" he said. \"Please.\"\n\n\"I can't stay,\" I replied.\n\nHis eyes were red, tears still drying on his face. \n\n\"Lacey, she...\" He sighed, pulling the computer chair away from his desk and sitting in it to face us. \"I know why you're pissed. I get it. But I forgave Mom a long time ago for not leaving when Dad kicked me out. You need to as well.\"\n\n\"But\u2014\"\n\n\"I know it's hard to see it right now, but... Mom was... Lace, she was getting the same shit from Dad that we were. It's not easy to get out of situations like that. She's a victim here, too. We all were. Don't let him pit us against each other.\"\n\n\"She...\" My face reddened as I realized I had just screamed at a woman who was as terrified and broken as I had been. \n\n\"If you want to be chained to your anger, then don't. If you want freedom from your past, you need to forgive.\" Sean smiled, his eyes far away. \"Rick told me that, actually. Way back when.\" \n\n\"But what she said...\"\n\n\"It'll be best if I go,\" Noah said softly.\n\n\"No.\" Sean and I spoke in unison.\n\n\"What she said was out of line. You're right about that.\" Sean turned to Noah. \"You're welcome here. I can't ever repay you for being there for Lacey and protecting her from all the shit you did. I meant what I said. I don't care what happened in your past, you have a place here.\"\n\n\"I'm just causing problems,\" Noah argued.\n\n\"No,\" I said again. \"Noah, please. Don't go.\"\n\n\"You need to figure out what your next steps are and you need to figure out what's happening with your family. I'm causing issues with that.\"\n\nThe tears I'd fought so hard to control spilled over again.\n\n\"I need you,\" I whispered.\n\nNoah looked at me. He opened his mouth, but nothing came out.\n\n\"Stay tonight,\" Sean said, interrupting the tension. \"Both of you. Stay for the night, we'll all calm down. Tomorrow we'll figure out a solution.\" \n\nHe wouldn't leave the office until we both promised to stay the night. After he did, Noah turned to me, touching my cheek tenderly.\n\n\"You're a good person,\" he said. \n\n\"I feel like sh-shit right now.\"\n\n\"I know.\" He kissed my forehead, wiping tears off my face with his thumb. \"Look, I'm gonna go back downstairs\u2014\"\n\n\"You just promised you wouldn't leave.\"\n\n\"I'm not.\" He kissed me again, tilting my lips up to meet his. \"I'm not leaving tonight. You know I keep my promises.\"\n\nI nodded. \"Sorry.\"\n\n\"I'm gonna go downstairs. They've stopped fighting. I'm gonna talk to Sean, apologize to Rick. Dunno when you told Sean but\u2014\"\n\n\"This morning.\"\n\n\"This morning?\"\n\nI nodded. \"After I snuck out of your room. He was already up.\"\n\nNoah made a soft noise. \n\n\"Sorry. You said\u2014\"\n\n\"Don't be sorry. I don't want you to lie for me. Ended up working out in the end.\"\n\nHe kissed me again, then again, taking a bit of my sadness away with him each time. \n\n\"Relax a bit. Take a shower, calm down, whatever. Come down to the basement when you want.\"\n\n**\n\nI took Noah's advice and took a very long, very calming shower.\n\nThe water was running cold by the time I got out and I shivered, the thick steam in the air not enough to warm the spots that the stream of water had hit once it went cold. I took my time brushing and drying my hair, praying as I dressed.\n\nI asked every Saint I could think of for help. Saint Jude and Saint Rita, since everything felt impossible. Saint Therese for guidance. A general call-out to the rest of them for help, just because.\n\nI prayed for forgiveness. Whatever I was feeling, I had certainly not approached it in the best way. \n\nI prayed for strength. God knew I needed it as much as I did. \n\nI prayed for help. I prayed that Noah wouldn't leave. I prayed for things to become easier, for the trials to be finished. \n\nWhen I was done praying, I left the bathroom.\n\nSoft voices floated up from the kitchen, too quiet for me to make out words, but all masculine in nature. Whatever had happened while I was in the shower, Noah was still talking with Sean and Rick. Light pricked through the doorframe of the guestroom. I assumed Mom had retired for the night. \n\nI didn't want to see anyone quite yet. I needed a few more moments, just a few. Tiptoeing down the hallway, I turned the door handle of the office and slipped in quietly, facing the door as I gently closed it behind me. \n\nMaybe it was some intrinsic sixth sense, or a subtle change in the air, or an imperceptible trace of perfume. Maybe it was just that children could sense their parents the way parents could sense their children. Whatever it was, I knew she was in the room before the latch had settled in the jamb.\n\n\"I'm not ready to talk to you yet,\" I said softly, not turning around.\n\n\"Please just listen, then.\" \n\nHer voice was hoarse, cracking as she spoke. I didn't want to look at her but I couldn't bear not to. Turning, I saw Mom sitting back against the futon, eyes bloodshot and pleading. She had changed into pyjamas, a housecoat wrapped around her tightly. Everything about her spoke hurt, from the way she held her head to the trembling of her jaw. \n\nI couldn't look at her. Folding my arms in front of me, I nodded, staring down at the floor.\n\n\"I'm sorry,\" she said. \"I... I have a lot of work to do on myself.\"\n\n\"It's not me you need to apologize to.\" \n\n\"I know. Noah deserves more than an apology from me.\"\n\nI looked up at her warily. \n\n\"You were right,\" she said. \"You see the good in people. And he is good, I know that. I don't have an excuse for the way I acted, and I don't think either of you want one. I hope he can forgive me. I hope God can forgive me. I don't deserve a bit of it. I have a long way to go to be a better person. I don't know how you...\"\n\nHer voice cracked again and she cleared her throat. \"Somehow, despite having horrendous role models in me and your father, you turned out the way you did. You are so wonderful, Lacey. I don't know who shaped that in you, but it wasn't me, and I'm sorry it wasn't.\"\n\nI wanted to cry, to rush across the room and collapse into my mother's arms, sobbing and begging her to forgive me for hurting her. I fought against it, letting my eyes water but not spill as I hugged my arms around myself for strength.\n\n\"I shouldn't have said those horrible things,\" I whispered. \"You weren't... you weren't a bad mom. You did shape things for me. It's n-not your fault that D-Daddy was the way he was. You tried your best.\"\n\n\"I did,\" she said. \"It wasn't enough. I know that, and I'm sorry for it.\"\n\n\"It's okay.\" The words squeaked out of my throat as it tensed, a lump of heartache clogging my mouth. \n\n\"The rest of the world is very different from what I know,\" she said. \"It doesn't excuse my actions but I hope it can help explain them.\"\n\n\"It does.\"\n\nShe looked at me fiercely, a fire behind the same brown eyes that I shared with her. \"I'm going to be better,\" she said. \"I am going to do better. It isn't right for me to ask your patience while I learn, but\u2014\"\n\n\"I forgive you.\"\n\nHer words ended in a soft squeak.\n\n\"I forgive you,\" I repeated. \"And I'll be patient. And I'm sorry. Please forgive me.\"\n\nMy voice broke and so did my resolve. Mom extended her arms and I ran to her.\n\n\"There is nothing to forgive,\" she murmured. \"You don't need to be sorry. I do.\"\n\nWe sat that way for some time. \n\nNothing was truly resolved, not really. It was a step, of course, but there was a long journey up a steep mountain of trials before things could even begin to be fixed. It wouldn't have seemed so bad, except I didn't know which direction the next step was. Each option had its own trials, its own pot of gold at the end, but only if I were to give up so many other treasures along the way.\n\n\"Everything has changed,\" I whispered. \n\n\"I know, sweetie.\" \n\n\"I don't know what to do.\"\n\n\"What are your choices?\"\n\n\"Stay here. Find a job. Try to build something.\"\n\n\"Or?\"\n\nI hesitated. Mom's arms tightened around me.\n\n\"Or you're not sure, but it involves Noah.\"\n\n\"Yeah.\"\n\n\"If nothing was standing in your way, not money or obligation or fear or anything, what would you do?\"\n\nThe last time someone had asked me that question, it had set this whole ridiculous thing in motion. I flashed back to a simpler time, when a man with a crooked nose asked me where I would go if I could travel anywhere.\n\nWe'd agreed on Montreal. Somehow, despite getting on a train in the wrong direction, I'd ended up there anyway.\n\nI knew what I would do, but I couldn't bring myself to say it. The silence was answer enough.\n\nMom shifted, releasing her grip on me. \"Telling you to follow your heart breaks mine, because I know your heart isn't leading you here.\" Her hand went in the pocket of her housecoat, withdrawing something as she smiled. \"You've done pretty well following it so far, though.\"\n\n\"I don't know what my heart is telling me to do.\"\n\nShe laughed as she pressed the item into my hand. \n\n\"You're a goddamn adult, Lacey. You'll figure it out.\" \n\n**\n\nNoah was lying on the bed, still fully dressed, when I made my way to the basement guest room.\n\n\"Hey,\" he said as I closed the door.\n\n\"Hi.\"\n\n\"Hell of a night.\"\n\n\"I'm sorry.\"\n\nHe stretched before sitting up, his legs dangling off the end of the bed.\n\n\"Your mom doing better?\"\n\n\"How did you know I talked to her?\"\n\n\"Could hear you two. Didn't seem like you were about to start screaming at each other again, so left you to it. Sean was itching to run upstairs though. Think he was scared he'd lose some stuff if you started attacking each other.\"\n\nI snorted as I sat down beside him. \"No, it was... it was good. She's sorry for what she said.\"\n\nHe made a soft noise.\n\n\"I know it doesn't mean much coming from me.\"\n\n\"You forgive her?\"\n\n\"Will you be mad if I did?\"",
        "His lips were all the answer I needed as they brushed against mine. \n\n\"You okay?\"\n\nI nodded. \"You?\"\n\n\"Yeah.\" His fingers found the back of my hand, tracing small patterns on it. \"I'm sorry.\"\n\n\"For what?\"\n\n\"All the shit I've stirred up by being here.\"\n\n\"Noah, don't\u2014\"\n\n\"None of this would have happened if\u2014\"\n\n\"You're right, I wouldn't have even made it here if you weren't here.\"\n\nHe sighed. \"I don't belong here.\"\n\n\"If you don't, then neither do I.\" \n\nHe tried to say something more, but I brought my hands to his neck and pulled him towards me.\n\n\"I've had enough talking tonight,\" I said firmly, kissing him as I finished speaking.\n\nHe hesitated, silently protesting before kissing me back. His hand moved to my side as I twisted towards him, his lips relaxing against mine, his breath warm against my mouth. \n\nMy body began responding insistently. A warm feeling spread from my chest to my stomach, needing him, wanting him more than I wanted anything in the world. Not really sure what I was doing but following what my heart was telling me, I crawled onto his lap. Noah sighed against my mouth, his other arm wrapping around me as he pulled my torso close to his.\n\nThe denim of his jacket was rough under my palms as I ran my hands along it. They found the opened edges of the jacket and slipped inside. I caressed his chest, strong and firm beneath his T-shirt, before pushing the jacket off his shoulders. He let go of me just long enough to let the jacket slide off his arms. Before it had even hit the bed, his arms were back around me, hugging me tightly to him as we kissed.\n\nMy mind may not have known what I wanted, but my body did. I trailed my fingers along Noah's neck, tickling a spot behind his ear that made him shiver, then ran them through his hair. He made a quiet noise as I lightly tensed my fingers around the thick, dark strands of his hair, my fingers moving lightly against his scalp as I touched him. \n\nI wanted every bit of him and more. The things Noah did to me, the way he made me feel, was like nothing I had ever experienced. I refused to consider what my feelings meant, not when I didn't know how long Noah would be in my life or if he even felt the same way. For the moment, though, I was content with just experiencing those feelings, letting them run through me as the rush of passion for him consumed me. \n\nNoah's fingers spread against my back, his hands working down to the hem of my shirt. Cool fingers slid beneath the fabric, making me shiver as they met the scorching tenderness of my skin. I sighed, letting his hair fall from my hands as I continued to let my fingers wander. The next place they stopped was his face, gently caressing his cheek, before trickling down his neck to his chest, then down to his stomach.\n\nWe didn't speak as I pulled at his shirt, his arms leaving me once again so I could tug it over his head. Before he could embrace me again, I was working the button on his jeans, unbuttoning it swiftly before sliding off his lap and to my knees in front of him. \n\n\"Lacey, you don't have to...\"\n\n\"Shh.\"\n\nI hoped my eyes showed the seriousness of my intent, the absolute and urgent desire I had to taste him. They must have, because Noah nodded slightly before helping me pull his jeans and boxers off.\n\nHe wasn't completely hard yet, but I was certain I could get him there. Settling between his legs, I lightly ran my fingers along his cock, stroking him gently before leaning forward to kiss it. \n\nI worshiped his cock, exploring every spot between his legs, running my fingers along his shaft and cupping his balls lightly. I watched as he grew, his arousal becoming more prominent, taking him into my mouth so I could feel him thicken against my tongue.\n\nNoah groaned as I bobbed my head, my mouth watering as his cock lengthened. My lips stretched wider as his erection swelled, his cock throbbing in my mouth as I worked my tongue against it. Once he was fully hard, I began to slowly push him further and further down my throat, embracing the feeling of his tip pressing against me, leaning into him as I choked on his cock.\n\nAs I pulled back, I glanced up. Noah was watching me, his face serious, dark eyes filled with something that I couldn't identify. When our eyes met, his lips turned up slightly, something mournful hidden by his smile as he looked at me.\n\n\"You're so beautiful,\" he murmured. \n\nI couldn't respond, not with him deep in my mouth, and I wasn't ready to stop sucking him. I looked back at his cock, tasting the first drops of the sticky fluid that dripped from his head as I swallowed him again and again, slowly and deliberately, savoring the feel and the taste. \n\nWhatever tension Noah had been carrying seemed to slip from his body as I sucked him. His hands rested against my head as he breathed deeply. Fingers gently stroked my hair, strands twirling between his fingers as I focused on his cock. Something deep in my subconscious told me to embrace the moment, to try to memorize each ridge and curve of his cock. My tongue studied him, my lips learning each inch of skin.\n\nI knew he was enjoying what I was doing, but I didn't intend to have Noah finish in my mouth. I wanted him inside me, wanted that feeling of fullness and completeness that he brought me. Even with that desire, though, I was reluctant to stop sucking him. It was a few moments before I took his cock from my mouth.\n\nNoah didn't say anything, just looked up at me as I stood. My hands were on the hem of my shirt when he reached out to stop me.\n\n\"Let me.\" \n\nI dropped my hands back to my side as he stood. He kissed me lightly before delicately lifting my shirt. He didn't just undress me; he unwrapped me, unravelled me, memorized me as he removed my clothing. My bra straps were pushed down my shoulders, his fingertips following their path down to my wrists. His lips met the tops of my breasts, dragging along my skin as he replaced the cups of my bra with his mouth. \n\nNoah fell to his knees as he worked my pants down my hips. His hands gripped my legs, working their way down past my knees as he pushed my pants towards my ankles. Once they were gone, his fingers hooked in the sides of my panties, and again his mouth began to trace the path they left. That time, though, he stopped when he reached the drenched lips at my center, his tongue dipping out to taste me.\n\nI watched, entranced, as he pushed his face against my pussy, licking my juices and circling his tongue around my clit. I gasped as he brought his hand between my legs, his fingers trailblazing a path of their own as he pushed them inside of me. \n\nFlutters of pleasure quivered through me as he made love to me with his mouth, his fingers gentle but intense inside of me. I sighed, my head tilting back as his other hand moved to my ass, pulling me closer against him. His ministrations grew stronger, quicker, and as much as I wanted to feel his cock inside me, I couldn't bring myself to stop him.\n\nThe flutters turned to pulses, and the pulses to a raging need. My hands found Noah's head out of necessity, my knees threatening to give way as every nerve in my body began to tingle in anticipation. He kissed me intimately, his tongue dancing, twirling, rolling against my clit. I shivered, unable to stop the small noises that escaped from my throat, tiny whimpers of pleasure and need and yearning. I was so focused on staying quiet that I barely noticed as my body began to shake, closer and closer to release. \n\nI peaked with him gripping my ass, face buried in my pussy, biting my lip as I tried not to cry out. A low, choked moan was the compromise as the overpowering rush of my orgasm took me, a heavenly thundering of fire washing through me. My body shuddered, my pussy clenching around Noah's fingers as he moved them inside of me.\n\nWhen he pulled away and stood up, I nearly fell. He caught me, strong arms holding me closely as I willed my knees to bear my weight. His cock was hard against my skin, and despite having just came, I needed it.\n\nI needed him.\n\n\"Lie down,\" I said.\n\nHe obeyed silently, moving back on the bed. I made to join him, but stopped.\n\n\"Condoms?\"\n\n\"My bag,\" he said. \"Front pocket.\" \n\nI found them quickly, taking one of the small packets from his bag and bringing it to him. I knelt on the bed as he sat up to put it on. Once he was done, he looked at me, patiently yielding to my control. Suddenly nervous, I bit my lip.\n\n\"I know what I want. I just... I don't know... how.\"\n\n\"What do you want?\"\n\n\"To be on top of you. Like when we were on the train, but with you... inside.\" \n\nHe guided me on top of him, showing me where to put my legs. Once there, he reached down, gripping his cock with one hand as I positioned myself over him.\n\n\"Now just lower yourself down,\" he directed.\n\nI did, feeling the tip of him pressing against my entrance. Bit by bit, I sunk onto his cock, focusing intently as his head moved past my entrance. I impaled myself on him slowly, groaning softly as his shaft stretched me, the walls of my pussy tight around him.\n\n\"Fuck,\" Noah murmured as he entered me completely. He had taken his hand from between us and rested it on my thigh, his other hand clenched on the blanket beneath him. \n\nI breathed shallowly, adjusting to the feel of his cock sheathed inside me. For a moment, all was still, and the only thing I could hear was our breathing and the rushing sound of blood in my veins.\n\n\"Ready?\" Noah said, his voice hoarse.\n\nI nodded. He moved his hands to my hips.\n\n\"Now you just... move your hips... like...\" He stifled a groan as I rolled my hips experimentally. \n\n\"Like that?\" I asked.\n\n\"Mm-hmm.\"\n\nHis response was choked. I did it again.\n\n\"Fuck. Yeah, keep... keep doing that.\" \n\nI couldn't have stopped if I wanted to, and I most certainly didn't want to. I tried different things, shifting my hips one way or another, lifting myself on my knees before sinking back down on him, each experiment more thrilling and more satisfying than the last. Noah watched my body, his eyes glued to my breasts as I bounced on top of him, finally choosing a rhythm and letting myself fall into that pattern.\n\nAs much as I trusted Noah, I had never been entirely certain that he was right about being able to orgasm more than once each time. It seemed almost insane to me until that moment, when I was on top of him. Something about the spot his cock was hitting inside of me, paired with the way my clit seemed to brush against him each time I sank back down, was bringing me there again. \n\nI tried not to think too much. I tried to let my body tell me what to do, to listen to its needs, to let it control what I was doing. One of Noah's hands left my hip and moved up to my breast, his fingers closing around my nipple and tweaking it as I rode him. I used his cock as I pleased, letting my inhibitions go free as a pulsing wave took over my body. \n\nIt built up, stronger and stronger. I was panting, trying to maintain the smallest semblance of command over my body so I didn't cry out and wake up everyone in the house. When the second orgasm hit, my hand crashed against Noah's chest, a high-pitched squeal escaping my throat as I failed miserably at keeping quiet. My pussy was bearing down on his cock and I shook, trembling as my eyes squeezed shut and my back arched. \n\nAs soon as my orgasm faded, Noah sat up, his cock still inside me. I whimpered at the sudden change, an aftershock of the tidal wave shuddering through me as his cock changed position. His arms wrapped around me and he shifted back and forth slightly as our bodies pressed together, his knees bent as he supported my weight.\n\n\"You're amazing,\" he whispered as he kissed me. \"You are so amazing.\"\n\nHe didn't let me respond, just held me as he re-positioned us, his cock sliding out of me as he guided me onto my back. Once I was there, he moved back between my legs, burrowing inside me as I wrapped my legs around his waist and my arms around his neck.\n\nHis pace was slower than mine, but powerfully consuming. Noah's lips didn't leave mine as he moved inside me, his weight heavy against my body as he made love to me. I was exhausted, completely spent, but addicted to the feel of him inside of me. I didn't come a third time\u2014I didn't even know if that was possible, though something in me was eager to find out\u2014but those little aftershocks kept trembling through me, making me shiver and gasp as he penetrated me again and again.\n\nI had never felt so desirable, so safe and so content, as that moment with Noah. His body consumed me, the safety net of his arms pinning me against the bed. I gasped, inhaling his breath as he exhaled, filling me with life and power and complete oneness. If I had to pick one moment to live over and over for the rest of my life, it would have been that one, with Noah buried inside me as he clung to me like a life preserver. \n\nWhen he came, he groaned against my mouth, stilling inside of me as he finished. Nothing outside of us mattered; the entire world existed within the confines of our bodies, in the tangle of limbs and sweat and pleasure. Noah clung to me, breathing hard, and I never wanted to let go of him.\n\nI had to eventually, of course. And I had to get dressed, to go back upstairs to clean up. I'm sure he expected me to come back down, to spend the night next to him, but I told him I'd stay upstairs. He didn't argue, just nodded and kissed my forehead, unspoken words lingering in the air, waiting to be freed but never finding that fate. \n\nI lay on the futon for a long time, awake not because of the discomfort, but because I knew.\n\nSomehow, I knew. Maybe it was from the way he had clutched me or the moments where he just watched. Maybe it was the way he traced every curve of my body under his fingers and lips. Maybe it was what we hadn't said, words unheard before I cut him off, words neither of us would say at the end of the night.\n\nWhatever it was, I knew Noah intended to leave in the morning.\n\n**\n\n<center>Chapter Twelve</center>\n\nNoah sat in bed for a long time, staring at the door I closed behind me. He wondered why I had left, wondered if he should have stopped me. One more night together would have been enough, he thought. One more night feeling the breath puff past my lips as I lay next to him. One more night watching my eyelids flutter as I slept, feeling things he didn't think he was capable of feeling, fighting against them only to let himself relax and enjoy just one more night next to me. \n\nHe didn't get that, and he thought it was probably a good thing that I had walked away. He felt selfish, taking something that wasn't his to take, keeping me near him when he felt I deserved to be free.\n\nHe thought about all the years I'd spent in that small town, under the thumb of a man who had a backwards, tyrannical way of thinking. I wasn't his to keep, Noah had decided. I had just spread my wings, just finally learned about the world that waited outside. He thought keeping me with him would make him no better than my father. \n\nIt hurt him more than he could handle. He had tried\u2014valiantly, I might add\u2014to keep me at an arm's length. For my protection, he had told himself, but it was really for his. But things didn't go as he planned. That arm's length shortened as his arm bent, and fell, and soon embraced me. He told himself it was just for one night... and then it was two. After two, he said that was it, and then he found that he couldn't stop. \n\nHe started justifying it. It would hurt when I left him, he knew that. It would be heartbreaking, an ache that he wouldn't be able to shake off like he did with so many other things. Wouldn't it be awful to be in such pain for only a few days' worth of time?\n\nIt would, he decided. And it would be wonderful. It would be worth it. \n\nBut he hadn't expected to face it that night. He had expected the pain to start in the morning when he had to peel his body away from mine, shivering in the cool air as he dressed silently, wondering if he should risk kissing my forehead before stealing out the door. \n\nHe set an alarm on his phone, eighteen minutes after sunrise and only five hours away. When he turned the light out, he tried not to think about how lonely the bed was, how he wanted to be watching me breathe instead of staring at the ceiling, and eventually, fitfully, Noah dozed off. \n\nThe alarm wasn't necessary; he was awake as the sun rose at twelve minutes after five, his hand instinctively reaching out to find me before he remembered. He lay there a little longer, then rolled over to turn off the alarm before it rang. \n\nHe dressed slowly, his mind telling him to hurry while his heart told him to stop. After shrugging on his jean jacket, he messily made the bed, though he tried to straighten the sheets as best he could. He tidied the room, taking every trace of himself that he would have left behind, before finally telling himself to stop procrastinating and go. \n\nNot a single footstep echoed through the house as he stole up the stairs. His backpack didn't even rustle against his shoulder as he slipped his shoes on. Noah wasn't a thief; he wasn't an addict, he didn't do that anymore. But even when he had\u2014even when he was sitting in a courtroom, telling a judge that he was guilty\u2014he had never felt as ashamed as he did sneaking out the door of Sean's house.\n\nMaybe it was because he knew he was still a thief. Maybe it was because he knew he had stolen my heart, but he thought it was better to break it than to keep what should never have been his. \n\nHe turned the door handle carefully, silently shaking his head as he realized it was unlocked. He made a mental note to tell Sean to be more careful before remembering he wasn't going to talk to Sean again. The only sound he made from the moment he'd left the guest room to then was a soft, almost inaudible creak as the door opened.\n\nWithout pulling it fully open, he slipped through the door, turning as he went to carefully pull it closed behind him. The second sound he made was the soft click as the latch fell into the jamb.\n\nThe third was when he turned around, tripped on me, and swore.\n\n\"Jesus-fucking-Christ-holy-shit-what-the-fuck,\" he rambled, catching himself before toppling off the step.\n\n\"Good morning to you, too.\" \n\n\"What the fuck, Lacey?\" he gasped. \n\n\"I could ask the same.\" \n\n\"What are you doing out here?\"\n\n\"You're not the only one who can figure out a thing or two.\" \n\nIt was the first time I really surprised him. He was truly, honestly shocked that I was sitting on Sean's front step, patiently waiting for the moment he would try to walk out of my life. \n\nHe recovered from it quickly, catching his breath before regaining that serious, stoic look I knew so well. Sighing, he sat beside me on the step. \n\n\"Why?\" I asked. \n\n\"Thought it'd be better this way.\"\n\n\"For me or for you?\"\n\n\"Both.\" \n\nHis voice was quiet, but he couldn't fully hide the pain. \n\n\"Where are you going?\"\n\n\"Don't know yet.\"\n\n\"I would hope you'd at least let me say goodbye.\" \n\n\"You'd try to talk me out of it.\"\n\nI smiled, laughing softly. \"Yeah, I would've.\" \n\n\"I'm still going, Lacey.\"\n\n\"I know.\"\n\nHe paused. \"I just... I can't... I can't be what you deserve. Fucked up that chance before I even knew you.\" \n\n\"Have you ever forgiven yourself for that?\" I waited, but he didn't respond. \"You should. You deserve it.\" \n\n\"I can't stay here,\" he said. \"And you... you deserve to be happy.\" \n\n\"Can you tell me one thing? Just... whatever the answer is, tell me honestly.\"\n\n\"I will.\"\n\n\"Promise?\"\n\n\"I promise.\" \n\nI took a breath, steadying my resolve. \n\n\"If nothing was standing in your way... not money or fear or what you think I deserve or anything... what would you do?\"\n\nHe shook his head. \"I can't. I can't do that to you.\"\n\n\"You promised.\" ",
        "Noah sighed, a miserable, forlorn sound.\n\n\"Would still leave.\"\n\nMy heart fell, a Bible page's thickness away from shattering.\n\n\"But I'd beg you to come with me.\" \n\nI looked at him. He was staring down the driveway, more vulnerable than I had ever seen him. \n\n\"I don't want to stay here,\" I whispered. \n\nHe finally looked at me, his forehead creasing into a pained expression. \n\n\"I don't even know where I'm going.\"\n\nI shrugged. \"Let's go to the train station and find out.\"\n\nHe laughed, a sharp bark of surprise. \"And how're you gonna get a train ticket, huh? Neither of us are working.\"\n\nI didn't know how to tell him about the deposit receipt my mom had given me, the one that put the entirety of the wedding fund she'd been saving since the day I was born into my account. I had protested, pushed the receipt back at her and told her I didn't need it, but she had shoved her hands back into the pocket of her housecoat.\n\n\"I gave Sean the same when he was... when he left,\" she said. \"He went to school. You've already been. So, follow your heart. Go find out what's out there. Just... maybe save a little of it for an apartment or something when you're done running.\" \n\nEven after spending half the night trying to figure out how to tell Noah about it, I still didn't have an answer.\n\nThe silence was apparently answer enough.\n\n\"I can't,\" he said.\n\n\"Can't what?\"\n\n\"Let you do that. You got money, put that shit towards something important. Get your life together. You got enough for a fresh start, you don't piss that away following some guy to the train station.\"\n\n\"If it's enough for a fresh start, why wouldn't I go somewhere where I can actually get a fresh start?\" \n\nHe fell silent.\n\n\"Run away with me.\"\n\n\"Lacey...\"\n\nI stood up without warning. My backpack was beside the step and I picked it up, pulling it over my shoulder in a fluid movement as I walked away from Sean's house. \n\nFor the second time, I surprised Noah. I heard him stand and rush after me, though I was already on the sidewalk by the time he caught up.\n\n\"What are you doing?\"\n\n\"Leaving.\"\n\n\"But\u2014\"\n\n\"I'm leaving with or without you,\" I said, still striding confidently down the street. \n\n\"What?!\"\n\nI had left a note for Sean. He would understand. \n\nMy mom had hugged me the night before.\n\n\"Just call, let me know you're safe. That's all.\" She kissed my head and I didn't hear her start crying until she had gone back to her room.\n\nI had packed my bag that morning, knowing Noah would try to leave before I was awake, knowing damn well that I could be up earlier than he could. The sun rose as I sat on the step, the sky orange and pink and open. I hadn't expected him quite so early, but someone up there must have been watching to make sure we didn't miss each other. \n\nSmiling as he fell in stride alongside me, I glanced over at him.\n\n\"I said I'm leaving. Wanna come?\"\n\nNoah stared for a moment before a smile started, flickering lightly on his lips before growing into a grin.\n\n\"Well, shit. Someone's gotta make sure you don't end up dead in a ditch somewhere.\"\n\n**\n\nWe could have travelled a different way.\n\nWe could have taken a bus, or walked, or flown somewhere.\n\nBut the train had laid the rails for us, and the train was where we felt at home.\n\nIt was as busy as it had been the day we'd arrived, but we sidestepped the people as we made our way into the station.\n\n\"Where do you want to go?\" Noah asked.\n\nI shrugged. There was a rack of brochures near the entrance and I grabbed one, a map of all the routes the company provided. There was a free table at the Tim Horton's inside and I opened it, studying the inked lines as Noah got us breakfast.\n\n\"I don't know any of these places,\" I said, sliding the map towards him as he sat down. \"You pick.\"\n\n\"Nah. You're the one running away. You decide.\" \n\nI glanced back down, then back up at Noah.\n\n\"Give me a piece of your bagel.\"\n\nHe frowned. \"What?\"\n\n\"Just a small piece.\" I reached over and ripped a small chunk off, making sure to get some of the cream cheese on it. \n\n\"What are you doing?\"\n\n\"Close your eyes and spin the map around in front of me. Tell me when to drop the bagel.\"\n\nHe burst out laughing. \"Seriously?\"\n\n\"Just do it!\"\n\nWe both closed our eyes and Noah moved the map around, shifting it back and forth, spinning it on the table. I held my hand over it, waiting patiently for his cue.\n\n\"Okay. Now.\"\n\nOur eyes opened at the same time, following the bagel chunk as it dropped through the air. With a quiet splat, it landed on the map.\n\nWinnipeg.\n\n\"Oh, fuck no!\" I blurted.\n\nNoah's laughter echoed through the station. People looked at us sidelong, wondering why the tall man with shaggy, dark hair was wiping his eyes on the sleeve of his jean jacket as a freckled woman hastily wiped cream cheese off a map.\n\n\"Let's try again,\" he finally choked. \"You move the map this time, I'll bagel it.\" \n\nStill giggling, we closed our eyes again. I flipped the map around, shifting it around the table, and spun it a few times.\n\n\"You ready yet?\" Noah asked.\n\nMore than ready.\n\n\"Okay... now.\"\n\nThe bagel dropped, and we opened our eyes.\n\n**\n\nSome artistic license has been taken with this story: \n\nCanada does have a national passenger train, but to my knowledge, it is not used nearly as often as I have indicated in this story. In addition, a trip like Lacey and Noah's would be relatively expensive, and the infrastructure of ticket sales and carriage classes were invented to assist with the story's plot.\n\nThe train stops, lengths of stops, and locations of stations and bus terminals are based in reality, but were occasionally extended or removed to help the flow of the story.\n\nThe cities mentioned are all real, but some of the geography is altered. While each place does indeed have a Tim Horton's, it may not be geographically located where I indicated it was. \n\nI have purposely not named the sect of Christianity Lacey and her family practice. My own background comes from Catholicism but I have mashed those practices up with some others for the purpose of this story.\n\nThe least believable part of this story was when Noah could find a parking spot in downtown Toronto just off Yonge Street. I know, I invented a parking lot where one doesn't exist and pushed the realism boundary a little far there, but I hope you can forgive me.\n\nIf you enjoyed this story, consider reading the epilogue Waking Up and sequel called Finding Home. Both can be found by going to my profile."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "canada",
        "coming of age",
        "first love",
        "girl on top",
        "highway song story",
        "montreal",
        "oral sex",
        "road trip",
        "romance",
        "small town girl"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/runaway-pt-04"
}