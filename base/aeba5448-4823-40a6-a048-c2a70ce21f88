{
    "title": "Requited Ch. 07",
    "pages": [
        "\"Are you sure you have to go?\" He asks. We're already standing at the door, so the situation feels distinctly like an exit.\n\n\"Yeah, I should go, you need to study.\"\n\n\"You know it wouldn't hurt you to study either?\"\n\nI laugh, \"I don't know, it sounds painful as fuck.\"\n\nHe rolls his eyes and smiles as he starts closing the door, \"Okay, see you.\"\n\nJust before it closes, I put my hand in the way, stopping it and pushing it open again.\n\n\"Did you forget something?\"\n\n\"Nah, I just wanted to get one last look at you, you know, before you go all cold on me and forget my number, or something.\"\n\nI mean it as a joke. Kind of. I'm feeling nervous suddenly. So much has changed between us in the last thirty-six hours. Other than knowing for a fact that we're both horny as hell, we haven't spelled out what's happening between us. Now that I'm leaving, I'm suddenly uneasy about how things are going to play out.\n\n\"I won't forget your number,\" he says, then he adds quietly, \"I can't. Believe me, I've tried.\"\n\n\"I bet you say that to all the guys.\"\n\n\"I really don't.\" He's serious when he says it, \"You'll see.\"\n\nWith that, I close the door and head off. By the time I get to my place, I have a message from him:\n\nSee?\n\nBy the time I get up the stairs, there's another one:\n\nTold you.\n\nI can hardly stop the smile that takes over my face. Okay, I can't stop the smile. I can't even come close. I stand there, in my hallway, grinning like the biggest fool in the world.\n\nI stand corrected, I reply.\n\nI study a bit. I'm not trying to sound big headed, but truly, I don't need to. I spend the rest of the day packing up. Mark and Riley took all their stuff, but I clear out the fridge and the kitchen cupboards and I pack up most of my clothes and take the painting Andy gave me down off the wall. For good measure, I give the place a once-over. An end-of-tenancy cleaning company are coming in later in the week, but no-one else should have to deal with what I find under our sofa. No-one. I have a shower and then sit on my bed, looking at my phone, willing it to buzz.\n\nGod, it's been a long day.\n\nFinally, at around six in the evening:\n\nHungry?\n\nI type as quickly as I can, Hell yes.\n\n* * * * *\n\n\"Did you study?\" He says, after dinner. We're sitting on the sofa. His legs are folded up underneath him.\n\n\"I did actually. I did study a little.\"\n\n\"Hmm,\" he says, \"I find that hard to believe. Maybe, I should quiz you.\"\n\n\"Alright, go ahead.\"\n\nHe picks up one of the textbooks I brought with me and starts flicking through it. He makes a face, \"My God, I can't even think of a question. It's like it's written in another language.\"\n\n\"I'll explain it to you in simple terms,\" I say, \"there are various theories, which each use the term, \"Quantum Geometry,\" in different ways. String theory, for example, uses the term to describe exotic phenomena such as T-duality, mirror symmetry, minimal possible distance scale, topology-changing transitions and other effects that challenge intuition.\"\n\n\"Oh, God.\" He says, grimacing slightly.\n\n\"More technically,\" I continue, \"quantum geometry refers to the shape of a spacetime manifold as experienced by D-branes which include quantum corrections to the metric tensor.\"\n\n\"Stop,\" he says, \"you're hurting my brain.\"\n\n\"That's not the brane I'm talking about.\" I say, tapping the side of his head, \"For example, the distance between two quantum mechanical particles can be expressed in terms of the Lukaszyk-Karmowski metric.\"\n\n\"Please stop,\" he says, \"I'm begging you.\"\n\n\"Wait,\" I say, I'm showing off now. I'm showing off, and I'm thoroughly enjoying it, \"I haven't even told you about loop quantum gravity or started on the Hilbert space...\"\n\nHe cuts me off, \"If you stop now, I'll blow you.\"\n\nThat does stop me. It stops me dead in my tracks. I take my textbook from him and I snap it shut sharply. I put it down next to me and I get my jeans round my ankles as fast as it's possible for a human being to do so.\n\nHe's shaking his head at me, but he's laughing. I'm laughing, too. His eyes are dancing. He keeps them on me. I keep on laughing, but after a while, I'm not laughing anymore. I'm not laughing at all. I'm running my hands through his hair. I'm tracing his eyebrows with my thumbs and I'm watching as my dick disappears into the most beautiful face I've ever seen. He makes a slight, low groan when he sinks down onto me, and when he pulls back, his cheeks hollow a little. I've never seen anything like it. I've never seen anything I like more. I have his face in my hands. Both hands. I'm drunk from the sight of him like this.\n\n\"You're so beautiful, Andy.\"\n\nHe raises his glorious head, cocking it slightly, \"You're one to talk.\"\n\n* * * * *\n\nThe next morning, we wake up and discuss how best to get through the day.\n\n\"I can go back to my place,\" I say, \"so you can get some work done.\"\n\nHe makes a face. \"I don't know, I kind of think that was worse.\"\n\n\"It was definitely worse for me. Way worse.\"\n\n\"Why don't we just do blocks of study and take breaks when we need to.\" He suggests reasonably. \"We just have to get through these exams. That's all. We just have to get through them.\"\n\n\"Sounds like a plan.\"\n\nHe sits down at his desk and gets to work. I get my books from the living room and then kick back on his bed, reading and generally doing what I think someone would do, if they were committed to academia.\n\nHe keeps looking around. I can feel his eyes on me, but I pretend not to notice.\n\n\"Uh, West, I think you're going to need to put your shirt on.\"\n\n\"Why?\" I say, feigning innocence, \"This is how I study.\"\n\nHe rolls his eyes, \"It is not.\"\n\n\"Is too. When have you ever seen me study?\"\n\n\"Jesus,\" he says, looking up at the ceiling, \"what am I going to do with you?\"\n\n\"I've always found I respond well to incentives.\" I say, helpfully.\n\n\"I'll bet you do.\" He chuckles softly, \"Okay, tell you what, if you're good and let me study, I'll give you a reward.\"\n\nI raise my eyebrows and smile in delight.\n\n\"Come to think of it,\" he says, his voice going lower, \"I can't imagine you being very good, so maybe, I'll just let you give me a reward.\"\n\nOh, fuck. I love hearing him talk like this.\n\n\"I'll make that deal.\" I say and pick up my books and close the door on my way out.\n\nI study and watch the clock, with unequal intensity. He finally comes out after midday. I do give him a reward. I give him one before he even makes it half-way across the room. He gives me one, too. He gives me a reward that makes a mess all over the floor.\n\n\"Ah,\" I say afterwards, \"I think this is where I've been going wrong. I think if we'd been doing this all along, I'd have been a much, much more diligent student.\"\n\nAfter lunch, he gets up and heads back into his room.\n\n\"Are you sure I can't watch you study?\" I call.\n\n\"Definitely not.\"\n\n\"Ooh,\" I grumble, \"In that case, I'm not sure I can guarantee my best behaviour.\"\n\nHe turns and looks over at me. He leans against the frame of his bedroom door thoughtfully, \"Tell you what,\" he says, \"if you let me study for four hours, I'll rim you.\"\n\nMy throat goes dry instantly. The wind has been sucked out of my sails. I had a big smile before he said it, now, it's frozen on my face. I can't do anything about it. Any command I may have had of my person, is now focussed solely on one, rigid part of my body.\n\nI swallow and try to think of something to say, \"Two hours.\" I manage.\n\n\"Three.\" He says.\n\n\"Deal.\"\n\nHe smiles and runs his eyes slowly up and down my body. He turns to head into his room, but looks back, over his shoulder, \"Hey, West. I'd have settled for two hours.\"\n\n\"I'd have waited for four.\"\n\n* * * * *\n\nI may have spoken hastily, when I said I'd have waited for four hours. I'm not finding the waiting easy. I'm finding it hard. Very, very hard. The shock of what's happening with Andy seems to have worn off. I find myself thinking a little more clearly than I have for the past few days. The shock has given way to a deep sense of amazement. Amazement and wonder. I can't believe that after all this time, after all these years, something is happening with Andy. My Andy. The Andy I've wanted for so long. The Andy I love more than anyone else.\n\nI can't believe it. I honestly, can't believe it.\n\nI pass a good amount of time, just sitting, staring off into space, thinking about the astonishing turn of events that the last few days have given rise to. Andy and I are messing around. As unbelievable as that seems, it's true. He definitely wants me. Any fool can see that. He's clearly horny for me. He's just as horny for me as I am for him. I heard the change in his voice when he said he loved me. I heard it. I know I heard it. No doubt about that.\n\nI just wonder if this is a new thing for him? Or if it's something he's wanted for a long time, like I have? Is it a case of giving it a go and seeing what happens, for him? Or is this something big for him, like it is for me? Is it humungous for him? Is it as life altering for him, as it feels for me?\n\nDoes he love me, as much as I love him? Is that even possible?\n\nI cast my eyes up to the kitchen clock. I have one more hour to wait. Sixty minutes. Three thousand six hundred seconds. Any other day, an hour is pretty easy to pass. A lot of the time, it happens without you even noticing. Not so today. Now that I'm on the home stretch, I've developed a fluttery sense of unease. Nerves. I can't help thinking about what I'm waiting for. I think about the way he looked when he said, \"I'll rim you.\"\n\nHis eyes were smiling, but his mouth wasn't quite there. His lips were curled up slightly, but it looked a little more like a snarl than a smile. Waiting like this, is torture. The sweetest, most agonising form of torture I could ever imagine.\n\nIt would be so much better, if I didn't know what I was waiting for. \n\nIt's awful to think we both know what we're going to do. He knows what he's going to do to me, and he knows I want it. I think of his mouth. His lips. His tongue. I think of him in first year, I think of how he looked when he said, \"I'm more of a top, but for the right guy, I like bottoming too.\"\n\nI think of the way his lips moved to form the words. I think of how it made me feel. Wild. It made me feel wild. I feel wild now, too. I think of his mouth and his hands and I think of his beautiful dick. I think of all the things I want him to do to me. I think of the things I want to do to him. I think of them, on repeat. Over and over. I can't stop. It's like some sort of hell loop. Only, it's not hellish. It's not hellish, at all.\n\nThe sound of the door opening startles me so, I physically jump.\n\n\"You're early.\" I say, \"Five minutes early.\"\n\nTechnically, he's four minutes and forty-seven seconds early, but I don't think he needs to know the extent to which I've been watching the clock.\n\n\"I know. I finished studying. I guess you could say, I was highly motivated, or something.\"\n\nHe's standing at the doorway, just looking at me. It's unnerving me more than a little.\n\n\"S-should we have a shower?\" I stammer.\n\n\"Sure.\"\n\nWe undress in the bathroom. We each undress ourselves. It feels strange and intimate. Strangely intimate. It's the first time we've undressed slowly, not in a frenzy. I watch him as he removes each piece of clothing and he watches me. He runs the water until it's hot and then we step in.\n\nHe steps under the water first and then I do, when we switch places, our bodies brush up against each other. Slick and warm. He wraps an arm around my waist and pulls me toward him. We soap ourselves and each other. Our hands are everywhere. Everywhere. There's water and hands and soap everywhere.\n\n\"Lean your head back.\" He says, as he takes the shower nozzle down from its hook and carefully starts rinsing my hair.\n\nHe holds his hand on my forehead, shielding my eyes. I'm instantly transported to the last time we were in this shower together. I remember the dream-like agony of it. It's different this time, but the agony of being close to him and not touching all of him, is the same. I take his hand in mine and bring his palm to my lips. I kiss it and rub my face against it. He stands behind me, dropping the shower nozzle and wrapping his arm around me, pulling me close as he leans his cheek against the back of my head. His belly is pressed up against my back. His hard dick is rubbing against my butt.\n\n\"Let's get out.\" He says.\n\nWe dry ourselves. It's slow and deliberate. The mood is heavy. Both of us are horny. We're both so horny, we're breathing heavily. I can hear it. I can see it, too. His chest it is rising and falling longer and deeper than usual. We're watching each other and we're not trying to hide it.\n\nHe reaches for me when we get to his room. He puts his hand on my side and pulls me towards him. He's still behind me. \"Get on your hands and knees.\" He says quietly.\n\nMy throat is instantly dry. Bone dry. I feel like I need to swallow, but I can't. The weirdness of doing this with Andy is suddenly hitting me and I feel a strong urge to laugh. I'm overcome by nervous embarrassment, but when he nudges me to the bed, I crawl onto it meekly. He runs his hand up my thigh. Gently. Stroking the hair on my leg with the palm of his hand. He taps my thigh firmly. I know what he wants. I spread my legs and I wait. His hands are all over me. They're hot from the shower, or else, they're just hot because they're part of Andy.\n\n\"Uh, Andy,\" I whimper, \"don't take a big run-up, okay?\"\n\n\"Hmm?\"\n\n\"I, uh, I can't take it. I can't wait, okay?\"\n\nHe laughs softly and runs his hand up my spine. When he gets to my neck, he grips it firmly. He leans down, close to me. So close I can smell him.\n\n\"I don't think you're in the best position to be making demands.\" He says softly. With that, he pushes my head down into the pillow.\n\nI can hear him laughing. I'm filled with a feeling I've never felt before. I feel it in my bones. I feel it in my bone marrow. I don't know it it's a feeling or an urge, but I know what it is. I know what it means. I'm submissive to Andy. I am. And I want to be. It's exactly what I want.\n\n\"Please.\" I say, when he lets go of my neck. He's kissing my back. Running his hands and his tongue down my sides. He has his hands on my ass. He's holding it gently. He's holding it like its his.\n\nMy dick is so hard, and my balls are so heavy, I'm finding it hard to focus. I feel agitated. It's impossible for me to stay still. He has my hips firmly in his grasp, but I can't stop squirming. His stubble is scraping my skin. Rubbing. Scratching. His mouth is lower now, but still not where it needs to be. Not where I want it.\n\n\"I'm not kidding,\" I pant, \"I'm getting blue balls.\"\n\nHe makes a sympathetic, tutting sound. He's kissing and biting my cheeks. Grating my skin softly with his teeth and his face.\n\n\"Mhhhh,\" I moan, looking back at him, \"I'm serious, my balls are aching. I'm aching, Andy. Please.\"\n\nHe looks up at me. His eyes are dark. So dark, they're almost black. He's horny and hard. He's not the same person I've been friends with for years. He holds my gaze for a second and then his eyes soften. They temper. They change.\n\n\"How could I ever deny you?\" He murmurs, against my ass cheek, \"Even if I wanted to, I can't. I can't because it's you.\"\n\nHe runs his broad tongue up my balls. His licks them. Bathes them. Soothes them. He holds my dick in his hand. Circled. Secure. He doesn't stroke. He just lets me know, he has me. He works his way up my body. Past my balls. Past my taint. I'm whimpering in anticipation. I'm whimpering before his tongue makes contact. My whimpers change the second he does. My head arches back and I feel my spine stiffen in pleasure. His tongue is warm and electric. Shooting waves of pleasure into me. Around me. Everywhere. There's pleasure everywhere.\n\nHe's moving his hand up and down my shaft and using his mouth and his tongue on my hole. After a while, I don't know exactly how he's doing what he's doing, I only know it feels good. I've lost reason and logic. I feel like I'm melting. I'm moaning like nothing I've ever heard. Long, consistent lowing that follows the pattern of my breath.\n\nMy orgasm sneaks up on me. It attacks from behind. I hardly have a moment to prepare. One second, I'm moaning and the next second I'm roaring. I'm arching and spraying. Shooting ropes and ropes of come out in front of me. I collapse onto the bed. Into the mattress. Into the wet patch. I can't feel where I end, and it starts. I feel liquid. Hot. Runny. Relaxed in a way I've never even imagined.\n\nAndy moves his legs, so he's sitting astride me. He pins me down. His dick finds the trough of my ass cheeks and makes its home there. He thrusts his hips back and forth. Rubbing himself in my crack. Kneading my cheeks. Grabbing and pinching. Squeezing them together to get himself off. I lie there and I let him. I arch my back and rub myself against him. I love the feeling of letting him use me like this. I love knowing the sight and the feel of my body is giving him pleasure. I love it more than I ever thought I could love such a thing.\n\nHe quickens his pace. I feel his movements grow jerky and his thighs lock tightly against mine. He roars too, when he comes. He roars over and over and each time he does, he spurts another load of piping hot semen all over my back.\n\n* * * * *\n\nThat night, once we've eaten and gone to bed and worn each other out again, we lie there in the dark. Everything is quiet. I can hear him breathing. I know his breath. I've always known his breath. It just sounds so much better, listening to it with my head on his chest.\n\n\"Did you know that right before you come, a second or two before you let go, your whole body breaks out into gooseflesh?\" I say.\n\nI feel him smiling, \"I did know that, Dumbass.\"\n\n\"I never knew that about you, Andy Montgomery.\"\n\nHe circles me tightly in both arms. I'm soft in his arms. My breathing slows. I feel myself drift off. I'm in that vague place right between sleep and wakefulness when he whispers into my hair. His voice is so soft, it's no more than a sigh, but I hear him say, \"I can't believe it's you.\"\n\n* * * * *\n\n\"Can you believe this is the last time you'll ever do this?\" He says, as I get ready to leave for my exam.\n\n\"Not a moment too soon. I can't wait to be done with this shit.\"\n\n\"Yeah,\" he says thoughtfully, \"I know how you feel.\"\n\nHis words are pretty innocent, but they're loaded. We haven't said so exactly, but I get the feeling that both of us are waiting for our exams to be over before we take things any further. The thought of it causes a quick knot of angst and excitement in my belly.\n\n\"Aren't you a little early?\" He asks.\n\n\"Uh, yeah, I thought I'd go grab a bite and run some errands. My exam doesn't start until two o'clock this afternoon.\"\n\n\"I can make you something to eat.\"\n\n\"Thanks, but uh, I should probably get going. I should get out of your hair so you can get some work done.\"\n\nI look at his face when I speak and then I remember, for me, a lie of omission, is a lie none-the-less.\n\n\"A-actually,\" I say, \"I was kind of thinking about dropping in at the clinic to get tested.\"\n\nHis mouth drops open briefly but quickly turns into a smile. \"Is that a fact?\" He drawls, \"Geez, you're just full of good ideas lately, aren't you?\"\n\nI smile and shrug.\n\n\"Are you sure you should go today? Shouldn't you be focussing on your exam?\" He asks.\n\n\"Nah,\" I say, \"fuck my exam.\"\n\n\"West! For God's sake, you've hardly studied. If you fail this, you're going to be stuck here for another year.\"\n\nIt's sweet how he worries about me.\n\n\"I don't need to study,\" I say. I've never told him this before. I haven't wanted to sound like a show-off, but now, I do want to show off for him, \"Andy, if I understand something, I don't forget it. I never forget it. That's how my brain works. And, I understand this stuff. It just makes sense to me.\"",
        "\"Quantum geometry just makes sense to you, huh? Must be weird to be in your head.\"\n\n\"It has its moments.\"\n\nI pick up my bag and double check to make sure I have my student card and everything else I'll need for the exam. As I head out the door, he says, \"Hey, West, I'll go too. I'll go for a test when I take my break.\"\n\nThe flurry of excitement that hits me when I hear his words, nearly knocks me clean over.\n\n* * * * *\n\nAs expected, the exam goes without a hitch. As I walk out the hall, I feel a wave of elation. I've imagined this moment so many times. Over the last few months, every time I've thought of it, it's been clouded with uncertainty and dread. Worry about leaving. Worry about what the future holds. Worry about the course my life was set on with Ash. Now, I walk out into the late afternoon sun and I feel nothing but free.\n\nFree. \n\nI go out with The Nerds. A lot of them are staying on next year, to advance their degrees. Careers in academia call to most of these guys. We head out for a bite and then we go to a bar. It's a little quiet. There isn't a great vibe, so after a while, someone suggests we head to The Pardon.\n\nMy chest clenches a little at the suggestion. Ash loves that place. She wrote her last exam today, too. I have a bad feeling about it, but when I try to suggest calling it a night, I'm thwarted by at least five or six guys. Believe me, given the right circumstances, these math geeks like to let their hair down and tonight, the circumstances just are right.\n\nAs soon as I walk in, I feel a change in the weather. I feel mild tremors, but they quickly grow stronger. I cast my eye around the room, and I see the cause. A tiny tornado is blowing a gale. She's causing one hell of a raucous. She's dancing on a table. She's wearing skin-tight black leather pants and a black tank top that shows her mid-rift. Her eyes are heavily made up. It's not make-up. It's war paint. She has a bottle of vodka in one hand and tequila in the other. There are a sea of guys moving around her. Heaving. Breathing. She's dancing like gravity means nothing to her. Like it's just one of the many laws that don't apply to her.\n\nShe looks up and for a second, our eyes meet. I smile and raise my hand to wave. She raises her eyebrows and smiles ever so slightly. She acknowledges me politely. The way you react to a person you hardly know. She says something to the guy in front of her. I'm too far away to hear what she says, but he falls to his knees, so I have a feeling I know what she said.\n\nI say my good-byes decisively this time and head out. I leave alone and walk down the quiet street, playing the scene I just witnessed over in my head.\n\nI'm glad I saw her. \n\nIf that's the last time I ever see Ashleigh McKinnon, I'm glad I saw her like that. In her natural habitat. Majestic. All kinds of crazy and totally out of control. About to unleash a trail of untold destruction on someone else's life.\n\nI walk down the street. It's noiseless and peaceful. It's perfect. It's calm. I feel my heart in my ribcage. Beating steadily. I feel Andy, too. I feel him in my chest. He's waiting for me. I can feel it. Nothing has ever felt better. Nothing has ever made me happier, than knowing that.\n\n* * * * *\n\n\"How did the exam go?\" He asks.\n\n\"Eh, good.\"\n\n\"Just good, or did you ace it?\"\n\nI grin. I knew he was going to say this, before he said it. I knew, because it's exactly what he always says. \"I aced it.\"\n\n\"Well, congratulations, West. You've just earned a degree at one of the most prestigious universities in the country, without applying yourself once.\"\n\nI take a smug little bow and laugh. He smiles back. He's smiles one of those smiles, I feel in my balls.\n\n\"Did you get all your work done?\" I ask.\n\n\"Yeah, I got a lot done today. I'm ready for tomorrow.\"\n\n\"Oh,\" I say, nodding slowly, \"is there anything else you'd like to do, if you don't need to study?\"\n\n\"Yeah, there is.\"\n\n\"What's that?\" I ask hopefully.\n\n\"I want to talk.\" His voice lowers when he says it. He tilts his head down slightly. He's close to me, it feels warm. I feel him turning up the heat.\n\n\"What do you want to talk about?\"\n\nHe smiles a smile that is nothing short of pure evil, \"I guess, I want to talk about whether you've ever put stuff up your butt.\"\n\n\"What?\" I exclaim, I'm so shocked I can't help laughing.\n\n\"You asked,\" he says reasonably, \"and that's what I want to talk about.\" He's standing closer to me now. He's leaning in. His mouth is so close, I can feel his breath on the side of my face, \"Well?\"\n\nEven though I feel a little parched and I'm still giggling nervously, I nod. He smiles slowly. A slow, sexy smile. He's pleased. \"What?\" He asks.\n\nI don't feel terribly sure I can talk without squeaking, so I hold up two fingers. He takes my fingers in his hand. He holds them firmly. Possessively.\n\n\"Ashleigh's?\" When he says her name, I see a flicker. Maybe a flicker of jealousy, or concern. I'm not sure, but I don't dwell on it because I like where this conversation is headed.\n\nI nod, and then I pull him towards me, and whisper, \"Mine, too.\"\n\nHis eyes light up and he smiles a smile I know now, but one I had no idea existed less than a week ago.\n\n\"Go to my room.\" He says, and I do."
    ],
    "authorname": "herdirtymind",
    "tags": [
        "gay romance",
        "rimming",
        "oral sex",
        "straight to gay",
        "blowjob"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/requited-ch-07"
}