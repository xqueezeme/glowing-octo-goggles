{
    "title": "I was Gonna Learn to Fly",
    "pages": [
        "Copyright \u00a9 2020\n\nFORWARD: First, I want to thank blackrandI1958 for inviting me to join this fun project and for her editing skills. \n\nI chose a traveling song as the template for my story, \"Taxi,\" by Harry Chapin. It's a sad song that I think, probably stirs a small feeling of regret in all of us. No matter how our lives turn out, I would almost bet most of us have wondered about a failed relationship in our life. \n\nOf course this is \"Loving Wives,\" so although I've followed the song to a degree, I've had to change the premise of its story some. I hope you like it. As always, I enjoy reading your comments, so please keep'em coming, and if you're not familiar with the song, I encourage you to take a listen.\n\nI Was Gonna Learn to Fly \n\nIt had been a rotten night. The rain was coming down in sheets, so those who didn't have to go out, stayed home. I was pulled over to the curb, counting my money. I made enough to barely break even for the night, but it was getting late and I knew my lovely wife would be waiting with a steaming cup of hot chocolate, which made the situation much more tolerable. \n\nI was just about to turn my roof light off when I saw a lady exiting the Custom House Theater just ahead. San Francisco is full of small play houses where up and coming script writers, directors, and actors cut their teeth on the way to Hollywood. Of course the odds of actually making it to the top in that town are about the same as being struck by lightning, but that doesn't stop them from dreaming.\n\nI had assumed she was going to flag me down, so I was already pulling out by the time she raised her arm. It took me only a few seconds to reach the traffic light at the corner, but she already looked like a drowned rag doll as she climbed into the back seat. Her expensive evening gown was soaked and looked more like a blue potato sack. \n\n\"Where to, ma'am?\"\n\n\"Sixteen, Parkside Lane,\" she responded.\n\nHer voice was familiar. It reminded me of the night my high school girlfriend and I first experienced making love in the back seat of my old Dodge. I wanted to hear it again. \"It's a shame your dress got all wet. I hope it's not ruined.\" \n\nShe didn't reply, only looked out the side window at the bright reflections in the wet, empty sidewalks. \n\nI made another attempt. \"You look familiar. I think I know you from somewhere.\"\n\n\"I'm sure you're mistaken,\" she flatly stated. \n\nYou could tell her hair started the evening elegantly styled on top of her head, but now hung down in a shiny, tangled mess. I glanced in the mirror as she pulled a few wet strands away from her face. It took me thirty years back in time when we stood on the platform of the Jack London train station, in Oakland. It was raining then too. She pulled her wet hair from her face just before our lips met. \n\n*****\n\n\"I'll call you every night,\" I promised.\n\n\"And I'll wait for your call every night, Harry. I'm going to miss you so much.\"\n\n\"Honey, you'll be so busy becoming a star, I doubt you'll miss me at all.\"\n\n\"Yeah\u2014right,\" she chuckled. \"I'm in three scenes, and none of them are very big. With my luck, they'll probably all wind up on the cutting room floor.\"\n\n\"They wouldn't dare. They'll have to deal with me. You tell them that,\" I said with a smile. \n\n\"Yeah, I'm sure that'll scare the hell out of them,\" she laughed back. \"When do you get your pilot's license? Maybe you can fly out there for a weekend or something. Wouldn't that be neat; you and me, parked up on Mullholland Drive under a full moon?\"\n\n\"It sounds like heaven. Unfortunately, it'll be a while before I get my license. Besides, even when I get it, I'd need a plane to fly, honey.\"\n\n\"Details, details,\" she said. \"Well, I won't be gone that long anyway. I know they can't shoot the scenes around my schedule, but I can't imagine having to be down there more than a couple of weeks or so...a month at the most.\"\n\nJust then we heard the conductor call, \"All aboard!\"\n\nThere were tears in her eyes as she looked at me. She reached behind my head and pulled me into one last kiss. \"I love you, Harry.\"\n\n\"I love you too, Sue...with all my heart and soul.\"\n\nWe heard the train making noises, so she ran to hop on just before the conductor pulled the steps up. \n\n\"I love you,\" she shouted one more time while waving. \n\nI threw her a kiss. \"I love you too,\" I shouted back, as the southbound Amtrak pulled away. I still remember the excruciating feeling of loneliness I felt while walking back to my car. A couple of times, I had to wipe tears from my eyes. I told myself I'd have to get used to watching her leave like that. That's what I get for falling in love with someone who wanted to become a movie star. \n\nIt'd been her dream since we first met in high school. She starred in all the school plays and was accepted into the Meisner Technique Actor's Studio, after graduation. It wasn't long before she rose to the top of her class there too. \n\nShe was only in her second local theater production when a producer who was sitting in the audience sent word after the play that he wanted to see her. I was back stage with Sue when he told her he was looking for new faces and thought she'd be perfect for a small role in an upcoming movie. Of course she jumped at the chance.\n\nTo tell you the truth, I had mixed emotions. I loved her. I wanted to see her succeed and be happy, but at the same time I knew it was the start of something I'd have no control over. Up till then, Sue's acting career hadn't affected us at all. I was always at her plays and got back stage to give her flowers and congratulate her on a great performance. I sometimes helped her learn her lines. We'd always been together, ever since high school. I knew that was about to change. \n\nI wasn't against moving to L.A. With a commercial pilot's license, I could pretty much work anywhere, but it still didn't mean we'd be together all the time. Movies were filmed all over the world. I was simply going to have to get used to being separated for extended periods of time; there was no getting around it. \n\nI was still in somewhat of a fog as I made my way back across the Bay Bridge toward work. I pulled into the garage right on time and walked up to the dispatcher's office.\n\n\"I was beginning to think you weren't going to make it, Harry.\"\n\n\"What do you mean, Sal? I'm right on time.\"\n\n\"Yeah, but you're usually twenty minutes early,\" he said with a smile. \"You've got number twenty-three tonight.\"\n\n\"That's not the one the guy puked in, is it? I heard all about it when I pulled in last night.\" \n\n\"No, that was twenty-one. I pulled it out of service and sent it out to get shampooed. That thing reeked to high heaven.\"\n\n\"You're a good man, Sal. I don't care what the other guys say about you,\" I told him with a smile. \n\n\"Go on, get out of here and make us some money, slacker,\" he joked back. \n\nI knew he was kidding because I was always in the top five money producers. I loved driving a cab, not as much as I loved flying, but it wasn't a bad way to make a living\u2014at least for the time being. Every night, I met people from all walks of life, some rich, some poor, some powerful, and some meek. Sometimes, a passenger wouldn't say a word during the whole trip, other times they'd tell me their whole life story in twenty minutes. It was interesting, that's for sure. \n\nI got the job right out of high school. It was perfect. First, the money was better than any entre-level job they were offering to high school graduates. Flight school isn't cheap and even though driving a cab paid well, it still took me a year to save the money I needed to start. In addition to the money, I could work nights, which meant I could go to school during the day. \n\nLike I said, it was perfect. Flight school was Monday through Friday, and unlike a lot of the other guys, I never missed a day. I had already passed ground school and after only ten hours of actual flying, impressed as hell out of Carl, my instructor, with the way I performed emergency maneuvers. \n\nBy the time Sue left for her movie debut, I was well on my way to soloing. That was a must before getting my private pilot's license. I was proud of what I'd accomplished up till then, but still had a long way to go. To get an actual job as a pilot, I had to have my commercial license. To do that, I had to first get my PPL. After that I had to get my instrument rating to show I could fly in all kinds of weather using the instruments in the plane in case I couldn't see where I was going. That was a lot harder than getting my private pilot's license, but it was mandatory before I could even think about getting my commercial license.\n\nMy shift was over at eleven. That night I didn't even stop to talk to the guys. As soon as she got settled, Sue was going to leave a number where she could be reached on my answering machine, so I was in a hurry to get home. It was eleven-twenty when I dialed the number. \n\n\"Hello,\" giggled a female's voice on the other end, but it wasn't Sue.\n\n\"Ah, hi,\" I said, thinking I might have dialed wrong. \"I'm calling for Sue Bennet, is she...\"\n\n\"Oh yeah, you must be Harry, hold on.\"\n\nThe line was silent for a few seconds before Sue picked up. \"Hi, honey.\" \n\nMy heart pounded with joy as I heard the happiness in her voice. \"Hi, gorgeous, how is it?\"\n\n\"Oh, honey, I'm so excited. The studio is just marvelous; they're putting us up in a hotel on Sunset Boulevard. They say it used to be a brothel in the thirties and forties. Clark Gable and Spencer Tracy were regulars, can you believe that?\" she laughed. \"Oh, and your favorite actor, Errol Flynn used to come here, too,\" she gushed. \n\n\"Flynn?\" I questioned. \"Hell, he got practically any woman he wanted. I'm surprised he'd pay for it, but then maybe not. I guess he was pretty insatiable when it came to sex.\" \n\n\"Kind of like you,\" She chuckled. \"Are you behaving yourself?\" \n\n\"I haven't had a chance to do much else, Hon. I went right into work from dropping you off, and rushed home afterward, so I could call you. Who answered the phone?\"\n\n\"Oh, that was Jenny. She's my roommate. She's going to be in the same movie so we can help each other with our lines, although I really don't have many. She's got a lot more than I do.\"\n\n\"Is it her first movie, too?\"\n\n\"No, she's been in five or six. I know,\" she said, anticipating my reply. \"She has more experience so she gets more lines, I know. You don't have to tell me,\" she said with a chuckle. \"We have to be at the studio for our first reading tomorrow morning. We're going to explore the studio together when we're done.\"\n\n\"That sounds like fun, honey. I wish I could be down there with you. I miss you already.\"\n\n\"I miss you too. I've already told Jenny all about you. She's jealous,\" she again chuckled. \n\nWe talked for another ten minutes, but she had to be at the studio and I had to be at flight school by eight the next morning so we said our goodnights. The next night, I called her at the same time, but something seemed off.\n\n\"Hello.\"\n\nI knew immediately something was amiss. \"Hi babe, what's wrong?\"\n\n\"Nothing's wrong, why?\"\n\nI tried to keep my voice from sounding accusatory or harsh. \"Something's wrong, I can hear it in your voice, honey. You know you can't keep anything from me, now spill it,\" I said in a lighthearted way.\n\n\"Harry, nothing is wrong. I'm just tired, I guess. It's been a long day.\"\n\nI still had the sense that something wasn't right. She'd been through long days of rehearsals before, but I didn't want to push her too far so I slacked off. \"So how many lines do have?\"\n\n\"Not many,\" she replied. \"I have four lines in the first scene, one in the second, and nine in the third.\"\n\n\"Hey, that's not bad at all, honey. Rock Hudson only had one line in his first movie,\" I told her, trying to sound upbeat to see if I could get her out of her funk.\n\n\"Yeah, I know. I'm actually pretty lucky. Jenny says she only had two lines in her first movie. Honey, I'm really tired and I have to report to wardrobe at eight o'clock tomorrow morning, so I'm going to say goodnight.\"\n\n\"Okay, honey. You get a good night's sleep and I'll call you tomorrow night about the same time.\"\n\n\"Okay, hon, good night.\"\n\nAnd with that, the line went dead. She could deny it all she wanted but I knew something was wrong. She had pretty high expectations. I figured that maybe things just didn't live up to what she was expecting. I was tired as well so I hit the sack and was out like a light. \n\nShe sounded better when I called the following night. She told me she got a look at the shooting schedule and all her scenes would be shot in the first couple of weeks. That was great news. I really missed her. I think that was the longest two weeks of my life. There would be more separations, of course, but that first one was really hard.\n\nFor the first time since I started, I took a day off from flight school on her return. Her train was due in at ten in the morning. Her parents offered to pick her up, but I couldn't wait to wrap my arms around her. We drove straight to my apartment.\n\nAs we walked in, Sue started tearing at my clothes before I even shut the door. Once she had my shirt open, she threw her arms around my neck and hopped up, wrapping her legs around my waist and locking her ankles behind me. A flurry of kisses followed. I braced her butt with my hands, leaned slightly back for balance, and walked us to the bedroom. She started grinding her pussy into my crotch as I sat down on the edge of the bed. \n\nUnlocking her ankles, Sue stood up and pushed me down, onto the mattress. Within seconds she had my pants around my knees. My cock literally leaped out of my shorts as she pulled them down. I could think of nothing that came closer to heaven than the feeling of her warm, moist mouth as it encased my straining cock. I could do nothing more in the moment than close my eyes and enjoy the sensations. \n\nSue's tongue flickered, swirled, and surrounded my tightly stretched flesh, sometimes at the very tip, and other times with her lips buried in my pubic hair. It didn't take long for the urge to build.\n\n\"I...I going to cum...\"\n\n\"Oh, no you don't,\" she said, pulling her head away. \"I want you inside me.\" She immediately stood up, pulled her jeans and panties down in one quick stroke, then sat on the bed next to me and kicked her feet wildly until both garments went flying. She swung her legs over me and scooted to the middle of the bed. \n\nI snuggled up with the intention to start my love making with gentle kisses to her neck. \n\n\"Save that for later,\" she told me. \"My pussy is soaking. Can you hear it? It's calling for a hard cock...now!\"\n\nWho was I to argue with a soaking pussy? I got in position and slowly slid right in. I had the feeling everybody on my floor of the apartment building was going to know what we were doing. She was moaning before I even hit bottom. \n\nI was a little worried I would be able to keep going long enough for her to come, but luckily, she was as excited as I was and within a few minutes we both broke out in rapturous harmony. Sue reached up, wrapped her arms around my neck and pulled down tightly against her breasts. Somewhere in my brain I was afraid I was too heavy. I felt our hearts pounding in unison and her hot breath in my ear. \n\nAs our breathing began to calm, Sue let me go and threw her arms out to each side like a post coital iron cross. I raised my head and looked into her smiling, contented face. I whispered that I loved her before gently kissing her lips. I knew I'd be ready again in no time so I continued kissing, her cheek, her forehead, behind her ear, down her neck. \n\nStill with her eyes closed, Sue moaned as I worked my way to her nipples, sucking, biting, and swirling my tongue around each one before continuing south. By the time I reached her navel, I could feel her body twitching with a series of euphoric tremors. \n\nLuckily for men, God in his infinite wisdom put a woman's clit above the entrance to her magnificent pussy for such occasions. I felt her hand on the top of my head as started teaching her clit with my tongue while inserting my finger below. In just moments, I felt her walls tightening around my finger. She cried out to the almighty again and again as her body wreathed with another climax. I gave her just a moment before entering her again. Her back arched in response, she grabbed the sheets with both hands and screamed. I changed my pace as I continued to make love to my girl. Finally, once again we came together, falling into a sweaty embrace of pure pleasure. \n\nAfter a little longer recoup time than before, we continued for a third time. I was ready to call Sal and take the night off, but Sue said she was already going to have trouble walking for the next couple of days and told me to go to work. I asked if she'd be there when I got home. She kissed me before telling me no, she hadn't seen her folks in over two weeks and she was going to spend the night with them.\n\nSue's parents were cool. She was bouncing back and forth between their house and my apartment. Sometimes she'd spend a whole week with me before going home for a couple of nights, but they never gave her any flack about us practically living together. I was a little disappointed she wouldn't be spending the night, but I understood. \n\nAfter two grueling weeks without my baby, I was flying high in the cab that night. Not even rush hour traffic could break the mood I was in. A couple passengers even commented on how the grin never left my face during the whole drive. \n\nThe following day was Saturday. Since I didn't have flight school, Sal would let me work the day shift, seven to three. It was considerably less money, but it gave me Saturday nights with my baby. \n\nDuring Sue's two weeks in Hollywood, I put some money aside each night so I could take her out for a nice celebratory dinner when she got home. I was sure she'd be at the apartment when I got there, so I stopped off at a party shop and bought her some helium filled balloons saying congratulations. I wanted to surprise her so I was disappointed when I came home to an empty flat.\n\nI was sure she wouldn't be long so I let the balloons bounce off the ceiling just inside the entrance and ran to grab a quick shower. I thought I heard the phone while I was under the water but I wasn't sure. I was so looking forward to seeing Sue that I actually forgot about the phone until I got dressed and walked out to the living room. I was hoping to see her, but I saw the red flashing light on my answering machine instead. I hit the play button...\n\n\"Hi, honey. I hope you won't be upset, but I'm going to spend the night with mom and dad, again. We just have so much to talk about and they asked for another night so I said yes. I'll be over tomorrow morning. Maybe we can go out for a late breakfast. Love you, good night honey.\"\n\nAfter listening, I wasn't angry, but I was bummed out. We always spent Saturday nights together. If I had known, I'd have worked my regular shift. The night-life crowd always tipped a lot better than the Saturday afternoon shoppers. \n\nI figured I couldn't complain too much. She spent the last four days and nights with me before she left for Hollywood, so they hadn't seen her in two and half weeks. I can't blame her for wanting to spend some time with her folks. \n\nSince I wasn't planning on cooking anything that night, I went to Applebee's for dinner, then watched some TV before going to bed early. I was disappointed to see the balloons were already starting to lose altitude and wondered if they'd be completely deflated by morning. \n\nEvidently, my impatience to see Sue had penetrated my sleep because I was awake at dawn. I really didn't want to get up. I was hoping she'd come in, see me in bed, and climb in next to me, so I just laid there...and laid there. Finally, at nine-thirty, I gave up. I grabbed a shower, got dressed, and was on my second cup of coffee when I heard her key in the door. I'll admit to being a little aggravated by that time, but that lasted as long as it took her to walk over and give me a hello kiss that curled my toes. ",
        "\"Thank you for the balloons,\" she said. \"I'm guessing you bought those yesterday.\"\n\n\"Yeah, I stopped after work. They were actually filled with Helium and went all the way up to the ceiling. Now they're just kind of floating around at waist level.\"\n\n\"I'm sorry,\" she chuckled. \"I really do appreciate the thought. You're not mad, are you? Mom and Dad kept asking me questions about Hollywood and I couldn't just cut them off.\"\n\n\"No, I'm not mad. I saved up some money and was going to take you out to dinner, but I guess we can do that tonight.\"\n\n\"That sounds fantastic,\" she said, leaning over and giving me another kiss. \"You haven't eaten yet, have you?\"\n\n\"No, I was waiting for you.\"\n\n\"Good, because I'm taking us out for breakfast. What's the sense of becoming a movie star if I can't treat the man I love?\"\n\nAll through breakfast, I was getting that feeling again, the feeling that something was wrong. She did most of the talking, which is usually a sign that she's nervous about something. It wasn't until we got back to the apartment that I finally learned what was bothering Sue.\n\nWe were sitting on the couch wrapped in each other's arms. She started nervously playing with the buttons on my shirt before looking up at me. \"I...I have something to tell you and I'm afraid you're going to be mad,\" she said, apprehensively.\n\n\"I knew something's been bothering you, ever since we talked that night on the phone.\"\n\n\"Yeah, that morning was the first time I'd seen the script,\" she explained. \"I talked with Mom and Dad the other night. Mom kind of took it in stride, but Dad wasn't too pleased. I can only image how you're going to take it.\"\n\n\"Take what, honey?\" She was starting to worry me.\n\n\"Well, I...have to kiss a guy, and it's not just a peck on the cheek, it's a passionate kiss.\"\n\n\"That's it? Honey, I've seen you kiss guys on the stage before. I know it's only acting.\"\n\n\"Yeah, but...well, I'm topless when I'm doing it.\"\n\nAt first I was stunned. I was not expecting anything like that, certainly not in her first film. \"You're topless...as in naked from the waist up?\"\n\nShe nodded her head. \"There's more,\" she said, sheepishly. \"He reaches around from behind me and undoes the buttons of my shirt. I'm not wearing a bra. After the shirt falls open he starts playing with my tits. That's when I turn around and kiss him.\"\n\nI have no idea what contorted mess my face must have been in, but she took one look and got scared. \n\n\"Honey, it's a pretty short scene and we only kissed for a few seconds before they yelled cut.\"\n\nMy mind was split between two trains of thought. Acting or not, I didn't like the idea of some guy playing with Sue's tits, but I was even more concerned about her career. \n\n\"Honey, I'm not going to say I'm happy about some guy fondling your tits, but I think before accepting anymore roles, you should ask more questions. You and I have both read about actors who got typecast early in their careers. You certainly don't want to get hired just because they know you'll take your clothes off. You're far too good an actress for that.\"\n\n\"Harry, they didn't hire me simply because they thought I'd take my clothes off,\" she replied sharply, \"and as far as being a good actress\u2014shit, that town is crawling with good actresses, most of them are waiting tables at some greasy spoon. They'd kill for a part like I had.\"\n\nMy head was swimming. Somehow I hadn't given much thought to this aspect of Sue's career, or at least I didn't think I'd be dealing with it so soon. \"So what are you saying, that you'll take any part no matter what?\" \n\n\"No!\" she said angrily. \"You know me better than that. I'm not going to be doing porn, for Pete's sake. That was a mean thing to say. \n\n\"Look, all I'm saying is that I'm not going to turn down a good part simply because it might entail some nudity, I can't. Hell, honey, there's a lot of well-known actresses that do nude scenes.\"\n\nShe was right. At that moment, I remembered watching a very hot sex scene in a movie with Julie Christie and Donald Sutherland. They were both naked as Jay birds. I was trying to be mature and not seem jealous or insecure, but I wasn't sure how I was going to handle it if she took parts like that. I tried to push the thought out of my mind. I'd just have to deal with it, if and when it came up.\n\n\"I'm not trying to be mean, honey, it's just...it's just that I hope you'll take parts that show your acting ability and not just your sex appeal, that's all. I love you, babe, and I have all the confidence in the world that you can make it on talent.\" I saw a small smile. \n\n\"You maybe a little prejudiced in that department, honey.\" Her smile widened as she leaned over and gave me a kiss. \"Don't worry, honey, if I don't think a part will be good for my career, I won't take it. \n\n\"Mike, the director, told me I should get an agent. He even gave me the name of one to call, Jerry Lundawahl. He said some agents won't even take on a new actress until she's been in several movies, but Jerry will take someone brand new if he thinks they have a future. Mike even said he'd call him and give me a recommendation. If he's my agent, I'm sure he can help me pick the right parts, as well.\"\n\nThe agent sounded like a good idea to me. I smiled and felt much better. She wasted no time and called him the next day. He had already received the call from Mike so I'm guessing it was just a technicality, but he wanted to see her later that week. I really didn't want to take more time away from my flying lessons, so I agreed to let her parents take her to the train station. \n\nShe was only supposed to be down there for the day, but after accepting her as a client, Jerry wanted her to get professional pictures taken for her comp cards. The earliest appointment she could get was in two days, so instead of going back and forth again, she just stayed in a cheap motel down there. \n\nThe day after she came back, the local repertory company approached her with the lead in a new production. She accepted, but was up front and told them they might need a stand-in if a movie role came up. They agreed, and for a while, between her schedule and mine, we barely got a chance to say hi to one another. \n\nFinally, after about three weeks, things were starting to calm down. Cold readings for the new play were over and Sue was learning her lines. Rehearsals weren't to start for another two weeks, and to her disappointment, she hadn't heard anything from Jerry. \n\nOver the next couple months, things fell into a regular routine. Sue was a smash in the play and had been written up in several of the local paper's theater sections. I had my private pilot's license, but that's when the real work began. \n\nFor Sue, the timing couldn't have been better. She really enjoyed her part in the play and was sorry to see it end, but two days later her agent called. That brightened her spirits immediately. I'd have given anything to fly her down there, but renting a plane wasn't in my budget. She didn't really seem too keen on the idea anyway, so once again, I drove her to the train station in Oakland. \n\nThis time it was just to read for a part so she was back that night. From there it was a waiting game. They had more actresses to test and who knew how long before the powers that be made up their minds. After three weeks, she still hadn't heard, but in the meantime, she tested for two more parts. \n\nThis went on for months. Sue turned down a role for another play because she didn't want to abandon them midway in if Hollywood called. \n\nI think those months were as hard on me as they were on Sue. All I could do was sit there and watch her get her hopes up after testing for a part, only to have them dashed to pieces every time they gave it to someone else. I still had confidence in her talent and knew that if she just hung in there, she'd eventually make it. In spite of my encouragement and rah, rah speeches, however, Sue's self-confidence was deteriorating. \n\nShe was deciding whether or not to decline the next part offered by the playhouse when her agent called again. I could see her eyes lighting up as she talked. It was good to see some new enthusiasm as she hung up.\n\n\"I have to go to L.A. again tomorrow for another reading,\" she said with excitement. \"Jerry says I'm perfect for the part and thinks I have a great chance at getting it this time. He says it's a break out part. That means it could really boost my career.\" \n\n\"Honey, that's fantastic. What time do you have to be there?\"\n\n\"Ten,\" she replied. \"I'll have to grab the six o'clock train, honey. Will you be able to take me?\"\n\n\"Of course,\" I answered with a big grin. It was good to see her smiling again. \n\nSince we had to be up at four-thirty the next morning, we made an early night of it, but we still took the time for a good-luck quickie. \n\nShe was back that night again. I could tell she did well by the restoration of her confidence level. She never stopped talking as we drove home. She told me her character was smart, brassy, and sarcastic. It was a part she could play to the hilt. She was sure that if she could just land that one part it would skyrocket her career.\n\nThat night she was my Sue again. We made love until dawn while she told me over and over again, how much she loved me. A few days later she got called back, this time for a screen test in full wardrobe. Things were starting to look very promising. I expected her home that night again, but she called and said she might have to do a third reading the following morning so she was going to stay down there. When I got home that night, the light on my answering machine was flashing. She asked that I not call her. She was going to bed early because she had to be at the studio at seven the following morning. Not being able to hear how everything went was disappointing, but I assumed they must have liked her if they wanted to see her again in the morning. \n\nWhile all this was going on with Sue, I was working toward my instrument rating. It's kind of like going from grade school into high school, although I still had Carl as my instructor. I really liked him. I knew he liked me too. From the very start he could see how determined I was to become a commercial pilot. So many students drop out once they see how hard it is, and even if they get their private pilot's license, rarely do they go any further.\n\nIf Carl had time we'd sit in the airport coffee shop and talk, after my lesson. He was a good looking guy in his early forties, and in addition to teaching, he owned, Sky Blue Charter, his own one man chartering service. He had a sweet little twin engine Cessna, three-ten that he used to fly corporate big-wigs all around. I sometimes joked about us being in the same business, except he didn't have to deal with rush hour traffic. \n\nThe more we talked, the more I realized that even though he wore a wedding ring, he never spoke of his wife or family. One day I ask his wife's name. I'd never seen him look as sad as he told me his story. \n\nHer name was Lisa. They fell in love while they were high school seniors. They shared an apartment together all through college and committed to getting married soon after graduation. Carl said he'd never seen her so happy and excited as she and her mother started planning the wedding. They ran around together, making arrangements for the church, the flowers, catering...everything needed for a proper wedding.\n\nAfter a while, Lisa was starting to feel rundown. At first they all thought it was due to the grueling schedule she was keeping, but they got worried after a couple weeks passed without her feeling any better. Carl insisted she see a doctor. That's where they both learned of her breast cancer. \n\nIn spite of two operations and the usual treatments, Lisa's health declined more and more. Carl had tears in his eyes when he told me they had the wedding ceremony in the hospital room with just immediate family members attending. Less than a week later, she passed. \n\nHe told me the last time he saw her was after the church service. He stayed behind as everyone else left for the burial site. He kissed her one last time and made sure she was wearing her wedding rings as they closed the casket. \n\n\"I was totally lost after that,\" he told me. \"I had no idea what I was going to do with the rest of my life. A couple weeks later I just happened to be walking past a Navy recruiting office. I didn't even think about it. I just walked in and signed up. That's where I learned to fly. Over ten years, they taught me that, and they taught me self-reliance. I'd probably still be in the service if my dad hadn't gotten sick. I applied for my discharge and came home to help him out. When he got better, I bought the three-ten, opened Sky Blue, and started teaching. \n\n\"As far as a wife and kids are concerned...\" he paused a moment and just stared into space, \"I'm not sure if it's because I'm afraid or I simply don't have it in me anymore, but I've never fallen in love again. She was my one and only.\" \n\nHe took a sip of coffee then looked up at me. \"Are you a believer, Harry?\"\n\n\"Ah, not really, Carl. I don't deny the existence of a God, but I can't really say I'm a believer either.\"\n\n\"I am,\" he replied. \"I truly believe that someday Lisa and I will be together again. It's that thought that gets me up in the morning.\"\n\nAfter our talk, I appreciated what I had with Sue that much more. That's probably why I expected to see her doing cartwheels when I later picked her up at the train station, but instead she seemed a little subdued. I drove her home and had a little time before having to report in for work so I poured us both a cup of coffee.\n\n\"So tell me, how'd it go?\"\n\n\"Okay,\" she said after taking a sip of java. \"I'm pretty sure I've got the part.\"\n\nI was surprised to hear that because of her demeanor. I thought sure she was going to tell me they gave it to somebody else. \"That's great, honey. You don't seem very excited. Is there something wrong?\"\n\n\"No, hon, just tired, I guess. I was nervous and didn't get a lot of sleep last night. I met with the casting director this morning. He said he'd be in touch but I stopped by Jerry's afterward, and he said I was in.\"\n\n\"Honey, that's fantastic. Do you know anything more about the movie?\"\n\n\"No, I don't take off my clothes, if that's what you're asking,\" she barked with a snotty attitude.\n\nThat surprised me. \"No, that's NOT what I was asking,\" I replied in kind. \"I didn't even think about that. I was just wondering if you knew what kind of movie it was; a comedy, an adventure flick, a mystery...?\" \n\n\"I'm sorry, honey. I guess I'm more tired than I realized. It's kind of a half murder mystery, half comedy I guess you'd say. I play a smart-ass rookie cop,\" she said before taking another sip. \n\n\"Honey, I'm sorry to do this to you, but I'm going to spend the night with my folks again. I want to tell them the news and you know Mom and Dad; they'll beg me to spend the night. I'll be back tomorrow night though, I promise.\"\n\nI remembered the last time she did that. She went over there to talk to her mom about being topless. I was getting that feeling again but she assured me nothing was wrong, so I let it go. \n\nWe only had a week together before she got the call from Jerry, telling her she officially had the job. She was one of the last actors hired, so they wanted her down at the studio right away. Shooting was to start in two weeks, and there was a lot to do. There were wardrobe fittings, experiments with hair and make-up, not to mention rehearsals and learning her lines. On a movie set, a lot of the rehearsing and learning lines was done during the filming, but it was still appreciated by the director if the actors were prepared going in, and Sue was determined to show everyone that she was a professional.\n\nThis was it. This was the part I had been dreading-being separated for so long. When I dropped her off at the train station, we had no idea how long it would be until we saw each other again. That night the phone started to ring as soon as I walked in the door from work. She was the only one who'd call that late so I ran to the phone and picked up on the third ring.\n\n\"Hi, babe.\" \n\nI heard her giggle. \"How'd you know it was me?\"\n\n\"Because out of all my girlfriends, you're the only one who would call me this late,\" I joked.\n\n\"Uh, huh, I better be your only girlfriend there, buster.\" \n\nI laughed. \"So...how is it?\"\n\n\"Exciting,\" she replied. \"Everybody's so nice.\"\n\n\"Where are you staying?\" \n\n\"Ah, I'm sharing another apartment with one of the other actresses again. There's just one problem...\"\n\n\"What's that?\"\n\n\"Well, the phone goes through a switch and it closes at eight. I can still call out but I can't get incoming calls after that. I doubt we'll be done shooting by that soon anyway, so I'll have to call you.\"\n\n\"Okay, that's no problem. You know my schedule. Your timing was perfect tonight. I was just walking in when the phone started to ring.\"\n\nWe talked a little longer, but we were both tired after getting up at four-thirty that morning, so we called it a night. \n\nOver the next three months, she was able to make it home for a weekend only twice. Her parents missed her, I missed her, even the theater group missed her. A couple of times I wanted to come down and spend the weekend there, but she told me they shot most weekends, as well, so it would be a wasted trip. \n\nSome nights I'd sit alone and try to imagine our future. What kind of life were we going to have between her off making movies somewhere, and me off flying to who knows where? The thought was depressing as hell. \n\nTo stay as sane as possible, I was trying my best to keep busy. I was starting to see the light at the end of the tunnel as far as my instrument rating was concerned. Since I worked in the evenings, my biggest problem was getting air time at night\u2014still, things were progressing. Of course, just when you think everything's going smoothly, that's when the devil jumps up and bites you in the ass.\n\nI needed a few items from the grocery store so I grabbed one of those hand baskets and found what I needed. As I was approaching the check out, something caught my eye...Sue! \n\nHer picture was on the front cover of one of those Hollywood scandal sheets. In denial, I snatched it up from the rack to take a better look. It was her, alright. She was dressed in a flashy red evening gown with a plunging neckline that went almost to her navel, but what really had my blood boiling was the hot-shot she was with. They both had their arms around each other, and the caption above the picture read... \n\n\"Hollywood producer, Derek Jones and his new squeeze, actress Susan Bennet step out for a night on the town. Do we hear wedding bells?\" \n\nI have no idea how I got home without plowing the car into a light pole. I would have been crying if I hadn't been so damn angry. I knew I couldn't get a hold of her, and it was probably for the best, but I had to call somebody. Her folks were the next most logical to talk to. Mrs. Bennet answered.\n\n\"Hi, Mrs. Bennet. I was wondering if you've talked to Sue lately. It's been a couple days since I've heard from her.\"\n\n\"Ah, I talked to her night before last. Why? Is something wrong, Harry? You sound stressed.\"\n\n\"Evidently, you haven't been to the grocery store lately. She's splattered all over the front page of the tabloids with her arms around some Hollywood producer.\"\n\n\"What? No, I haven't seen that.\"\n\n\"The paper is talking about them getting married,\" I croaked.\n\n\"Oh, Harry, that's ridiculous. That girls loves you to death, you know that. I wouldn't get upset. Those tabloids are full of salacious lies. They'll say anything to sell their rags.\"\n\nI wasn't sure I was buying it. Was Sue sleeping with that guy? She knew my view on fidelity, one strike and you're out. We talked about it. She felt the same way. I guess my silence alerted Sue's mom.",
        "\"Harry, please calm down. Since she can't get hold of you until after eleven, we probably talk longer than you guys do because she calls me earlier in the evening. She hasn't said anything to me about meeting another man. In fact, she's been complaining about some of the other cast and how they treat her because she's a rookie.\"\n\n\"You can't tell she's a rookie from the picture. She looks like a clich\u00e9 of a Hollywood starlet,\" I grumbled.\n\n\"Harry, please wait until you have a chance to talk to her before getting all upset. I'm sure there's a logical explanation.\"\n\nI was starting to calm down a little, but that didn't mean I wasn't still fuming, I was just fuming a little less. \"I'll try,\" I told Mrs. Bennet. \"Do me a favor though. If you talk to her tonight, tell her to call me. I don't care how late it is.\"\n\n\"I will, Harry, but please calm down and try not to yell at her. That'll only cause her more stress and she doesn't need that right now.\"\n\n\"I'll do my best,\" I replied, while not making any promises. \n\n\"Okay, I guess that's all I can ask.\"\n\nAnd with that, we hung up. \n\nThat night, I wasn't as talkative with my fairs as I usually was. I couldn't get that damn photo out of my head. The phone was ringing as I walked into the apartment after work. I picked it up but didn't even get a chance to say hi.\n\n\"It was publicity picture, Harry, nothing more. Jerry set it up. The whole thing was faked.\"\n\nWell, that pretty much took the wind out of my sails. \"So you're not going out with that guy?\"\n\n\"No, of course not, I only met him the other day. He's going to be producing a new movie. He's actually the one getting the publicity, but Jerry heard about it somehow and talked them into letting me be his supposed date.\"\n\n\"What about that dress? Where'd you get that?\"\n\n\"From the wardrobe department at the studio. The whole thing was made to look like we were caught by the paparazzi, but the picture was taken by one of the studio photographers. I had to take the dress back right after they took the shot.\"\n\nI was breathing a lot easier. \"Well they sure did a good job. It looked real to me,\" I chuckled, trying to lighten things up a little. \n\n\"Mom told me how upset you were. I had no idea they were going to give it to the tabloids or I would have warned you in advance, I'm sorry.\"\n\n\"Me too. I should have known better, it's just that I haven't heard from you in the last few nights, and...\"\n\n\"I know. We've been shooting on location the last few nights and by the time we're done and I get back, it's too late to call.\"\n\n\"I understand,\" I replied.\n\n\"Do you? Do you understand that I love you?\"\n\n\"Yes, honey. I'm sorry for jumping to conclusions. I should have listened to your mother. She said there'd be a logical explanation.\"\n\n\"Mother knows best,\" she giggled. \n\nWe talked longer than we ever had. I guess we both needed to confirm our love for the other. It was almost one in the morning before we said good night. \n\nFour days later, I was hanging around the airport when Carl spotted me. \"Hey Harry, just the person I'm looking for. How'd you like to clock some hours toward your instrument certs? It'd be about four hours of IFR, the last hour of which, it'll be dark. The problem is, it's an overnight flight so you'd miss work.\"\n\nI hated to miss a night's work, but I needed all the \"instrument flying rules\" air time I could get. \"Yeah, Carl, I can't turn it down, where we going?\"\n\n\"That's the best part, at least for you. I've got to take a couple of corporate big-wigs to L.A. tomorrow, layover for the night, then bring them back the next day. \n\nI figure it'll give you some time with your sweetheart and we'll be back well before three, so you'll only miss one night of work.\"\n\nThat made my day. \"Carl, you are a god, I mean it, man, an absolute god.\"\n\nHe chuckled. \"Cupid maybe, a god I doubt.\"\n\n\"What time tomorrow?\" I asked.\n\n\"They're going to meet us in the flight office at four. We'll take off at four-thirty. It's about a two hour flight in the Cessna, so I figure it'll be dark for the last hour.\"\n\n\"I'll be here. Thanks, Carl. I owe you big time.\"\n\n\"No problem, Harry.\"\n\n\"I have to get home and get ready. I'll see you tomorrow,\" I said as I trotted back to my car. While driving home, I realized I was so excited, I'd forgotten something, I didn't have Sue's address. I was hoping to surprise her but if I had to ask her address... then I thought of something. I wondered if her mom knew it. \n\nI still had a couple hours before I had to be at work, so I gave Mrs. Bennet a call as soon as I got home. I asked her if she had Sue's address.\n\n\"Yes, Harry. I had to send her some warmer clothes. She didn't think it would be that chilly down there, but it gets cold at night.\"\n\nI told her of my plan. She thought it was a great idea and gave me the address. I thanked her and asked that she not tell Sue I was coming. She agreed and we said our goodbyes so I could pack an overnight bag. That night, I was happier than I'd been in a long time. I was just praying that they wouldn't be shooting on location again, but I figured even if they were, her roommate would let me in to wait for her. If that didn't work, I'd just camp out on her doorstep until she came home. \n\nThe next day, I got to the airport at three. Carl was already in the office, filing our flight plan when I walked in.\n\nHe glanced at his watch and chuckled. \"Not anxious to see your girl or anything, are you?\" \n\n\"Just a little,\" I replied with a big grin. \n\nHe looked down at the small overnight bag I was carrying. \"Here,\" he said while tossing me a set of keys. \"Store that in the boot with mine. Our passengers will just have their briefcases with them.\"\n\nWhen I came back and tried to return the keys he told me to hang on to them. He said I'd be pulling it out of the hanger in a little while anyway. While waiting for our passengers, we sat and talked over a cup of coffee. He told me he was giving me complete control of the aircraft, but cautioned me about landing at Van Nuys Airport. He said it was one of the busiest light aircraft airports in the world and even he paid extra attention when approaching at night. He told me he was confident I could handle it, but if I had any doubts, to just let him know and he'd take over. \n\nOur passengers were right on time so we were airborne by four-thirty five. One of them got a little nervous right after takeoff. We were still climbing when Carl gave me instructions.\n\n\"Level off at seventy-five hundred feet and maintain airspeed of a hundred and eighty knots,\" he told me.\n\nThe distinguished gentleman sitting behind Carl leaned forward so he could be heard. \"Excuse me, Carl, but may I ask why you have to give him instructions? Is he not an experienced pilot?\" \n\nCarl could hear the apprehension in his voice. \"Relax, Mr. Henson. Harry's an excellent pilot, but I'm the one who filed the flight plan so I have to let him know what was in it.\"\n\n\"Oh, I see.\" He turned his head toward me. \"Nothing personal, young man, you just look a little young to be a pilot.\"\n\n\"No problem, Mr. Henson.\" He looked relieved and sat back in his seat. I looked over at Carl who gave me a wink. \n\nThe entire flight went as smooth as silk and at six-fifteen we made contact with the tower at Van Nuys who gave us landing instructions. As much as I loved to fly, I couldn't wait to touch down so I could see my baby. Our landing was so soft, Carl looked over and gave me big grin. Ground control gave us clear taxiing instructions, and before we knew it, our feet were hitting the tarmac. Our passengers thanked us for a smooth flight and confirmed our return flight arrangements. Once they left, Carl and I grabbed our bags from the boot.\n\nCarl looked at his watch. \"Six-thirty-five, Harry, you'd better get going. Meet me in the flight office at ten-thirty tomorrow morning. In the meantime, have fun,\" he said with a big grin. \n\nI rushed through the airport and grabbed the first cab in line. I handed him a paper with the address on it, but told him we had to first find a florist that was still open. \n\n\"No problem,\" he told me. \"Sunset Florist is only a couple blocks from where you're going. I'm pretty sure they stay open till eight or nine.\"\n\nWe struck up a conversation right away. I told him I did what he did for a living and why I was in L.A. He turned out to be a really nice guy. We stopped at the florist and I bought a dozen yellow roses, Sue's favorites. The driver wished me a life-time of happiness when he dropped me off and I gave him a good tip. \n\nThe apartment building had an elevator but I knew I could run up three flights of stairs quicker. Within a few seconds I was standing in front of her door. My heart was beating like Buddy Rich was playing it with his drumsticks. The door had a peep hole so in keeping with my surprise, I raised the flowers in front of my face and rung the bell. \n\nIt turned out to be me who was surprised when I heard a man's voice through the door. \"Who is it?\"\n\nFor an instant, my heart fell. Then I remember my promise not to jump to conclusions. For all I knew it could be someone helping her with her lines, or it could even be her roommate's boyfriend, there were a thousand innocent scenarios. \n\nI wanted to maintain my surprise so I answered, \"deliver boy. I have flowers for Miss Sue Bennet.\" \n\nI saw a shadow behind the peephole. I still had the flowers in front of my face when the door opened. It was the same guy I saw in the picture, only this time he was dressed much more casually. His bare feet and hairy legs disappear into nothing more than a white bathrobe. My mind was having a hard time processing what I was seeing. I lowered the flowers, but couldn't speak. \n\n\"Who is it, hon...\" Sue appeared from what I assumed was the bedroom while tying the sash of her own robe. Her words stuck in her throat when she saw me.\n\n\"It's a deliver boy with flowers for you, babe,\" he said, before seeing the look on her face.\n\n\"Harry.\" It was almost a whisper.\n\nMr. Dapper-Dan looked almost as surprised as she did. \"Harry--your Harry?\"\n\n\"Not anymore,\" I stated, finally finding my voice. I had never felt rage like that before or since. I'm lucky I didn't have a gun. Instead, I threw the flowers in his face while hauling back to hit him as hard as I could. He was a little bigger than me but I nailed him good. He went down and stayed there. \n\nI took one last look at Sue. The look of regret on her face couldn't have been plainer if she'd had it tattooed across her forehead. Tears had already streaked her cheeks. I didn't say anything; I simply turned and walked down the stairs. I heard Sue crying as I left. \n\nNeither was dressed to come after me, but I wasn't taking any chances. I was in no mood to listen to any bullshit. As soon as I got outside, I walked to the nearest corner and turned. I did the same at the next corner. I spotted a cab and told him to take me to the cheapest hotel in town. It was the last time I saw her until she climbed into the back seat of my cab.\n\n*****\n\nI was stealing glances of her in the rear view mirror as I drove. Even wet, she was still gorgeous. She caught me looking and our eyes locked on each other's reflection. She looked at my license on the back of the seat and saw my name. Her eyes flashed back up to mirror and I saw a small smile. \"How have been, Harry?\"\n\n\"Not bad, Sue; how about yourself?\"\n\nShe didn't answer me, just turned her face back to the side window with a sad expression. I wondered if it was the look of regret. I'd heard that she had married Derek, but I didn't know if they were still together. I admit to being curious. \"How come you're out alone, tonight? Where's your hubby?\"\n\n\"Huh,\" she chuckled, \"probably out fucking his newest starlet.\"\n\nI know it sounds childish, but I did get a small sense of satisfaction from her answer. I wanted to ask her more, but instead my mind turned back to that night in Hollywood.\n\n*****\n\nMy cab driver did just what I'd requested. I should have probably asked for the second cheapest hotel in town. The closet in my apartment was bigger than my room, but I didn't really care. I laid in bed that night, trying hard not to cry. I wasn't going to give her the satisfaction, but after fighting the tears back for hours, I finally gave up and let it out. \n\nIt was almost dawn before I regained my manhood. After running out of tears, I lied there just staring at the ceiling for a while. I'd never thought of my future without her in it until then. \"Fuck her,\" I finally said out loud. \"She chose her career over our life together. There's nothing I can do about it now, so fuck her.\"\n\nI got up and went into the small dingy bathroom to wash my face, but I looked so bad I decided a shower was more in order. The faucets squeaked as I turned them. The water was warm, at best, and came out in more of a trickle than a shower, but any port in a storm, as they say. \n\nCarl did a double-take when I met him at the airport. \"Jesus, Harry, you look like hell; everything okay?\"\n\n\"Let's just say things didn't go as planned,\" I replied. \n\n\"Oh hell, I'm sorry to hear that; you going to be okay to fly?\"\n\n\"Yeah, I'll be fine. I'll go in the washroom and wash up a little more so I look presentable when they get here.\"\n\nI looked and felt better by the time our passengers arrived. The flight back turned out to be therapeutic. Flying had always been my second love, right behind Sue. After that night it moved up to the forefront. I would no longer concern myself with her. From that time on, I would dedicate myself to one goal, getting my commercial pilot's license. \n\nWe got back to Frisco a little after one that day. I went right home to grab a real shower and change clothes. That night, I tried to keep my mind off Sue but mental images of her kept floating through my brain. Later, my phone started ringing five minutes after I walked in the door. It must have rung twenty times before she gave up. Ten minutes later, it started again. I walked over and disconnect the phone jack from the back. \n\nThe next morning, I plugged the phone back in. Twenty minutes later it started ringing again. I knew Sue would be filming at that time of day, so I answered it, after all, it could have been Carl with another flight. \"Hello.\"\n\nFor several moments, I heard nothing on the other end, then... \"Ah, I...sh...she wanted me to call you, but I don't know what to say, Harry.\"\n\n\"There's nothing TO say, Mrs. Bennet. Did you know?\"\n\n\"Harry, don't you think I would have warned her, if I'd known?\"\n\n\"Yeah, of course, I guess I'm still not thinking right,\" I replied.\n\n\"I...to be honest, when she came back after her audition, she...she told me she had to sleep with somebody to get the part...but she said it was the one and only time she'd ever do that. She told me the role was so perfect for her that she knew she'd be getting offers from then on with no strings. \n\n\"That night she was here, she asked me about telling you. I told her she'd lose you if she did. She bawled for twenty minutes at just the thought. I honestly had no idea she was still sleeping with the guy. I'm so sorry, Harry. She knows you'll never take her back. I listened to her cry over the phone until two o'clock this morning.\"\n\nI should have guessed about her fucking some guy to get that part in the first place. I remembered how funny she was acting when she came back and told me she got it. Now I was pissed at her mother, too, although the deed had already been done, so I guess there wasn't much she could do.\n\n\"She's right about me never taking her back, Mrs. Bennet. She traded me for her career. I'd say I hope it works out for her, but I'd be lying. Goodbye, Mrs. Bennet.\"\n\nNever did I think I'd ever say or think anything like that about my Sue, but it's true what they say about love and hate. There's a very thin line between the two and I had crossed it. For a while after that, I bounced between despair and anger. It took a good month before I could talk myself out of dwelling on my feelings of loss and betrayal. I finally realized I was doing myself no good. I needed to leave it in the past and go on with my life.\n\nFour months later, with Carl's help, I had enough hours in the air to get my instrument rating. It was making a dent in my wallet because I was taking time off from work, but if I ever wanted to get my commercial license, it had to be done. \n\nI think Carl was almost as proud as I was. Not many student pilots go on to get their commercial license, so Carl admired my fortitude and was convinced I'd make it. He even talked me up to others at the airport who might want a flying companion. Even so, it took me just under two years to become a full-fledged commercial pilot, but I did it. \n\nBy that time Carl and I were best friends. He took me out to his favorite watering hole to celebrate. I'm not much of a drinker, but we shared a couple of beers over some interesting conversation. \n\n\"So, Harry, what now? Still thinking about moving to L.A.?\"\n\n\"No, that was because of Sue. No, I'll probably stay here in Frisco unless I get a good offer somewhere else.\"\n\nCarl sat back in his chair and stared at the beer bottle he was turning around in his hand. \"I'm thinking about expanding the business,\" he finally said. \"I've had my eye on a Golden Eagle, Executive, for a couple of weeks now. It's one of the later models and carries ten passengers. She's absolutely gorgeous. I can get it on a two year lease with an option to buy. \n\n\"There's plenty of business out there. I have no doubt I could easily make the nut on the plane, especially if I can keep the three-ten in the air at the same time.\" \n\nHe looked up at me. \"That's where you come in, if you'd like. Would you like to come work for me?\"\n\nHe saw my eyes open wide. \"I want you to think about it, Harry. You'd of course have to quit your other job. I...\n\n\"Yes,\" I said, cutting him off. \"I don't have to think about it, Carl, the answer is yes.\"\n\n\"Harry, you haven't even heard what I can pay yet.\"\n\n\"I don't care. I'll live in a tent if I have to.\"\n\nHe smiled. \"Well, let's hope it doesn't come to that. I can start you out at three-fifty a week. Once I get the Golden Eagle pulling her own weight, I'll be able to give you considerably more. Does that sound workable?\"\n\n\"Carl, it sounds like heaven to me,\" I exuberantly told him.\n\n\"Okay, I imagine you'll want to give the cab company notice. I have to get you registered with FAA and get all the insurance and tax forms done anyway. Would you be able to start two weeks from Monday?\"\n\n\"Sure.\"\n\n\"Okay, it's a done deal,\" he said, stretching his arm across the table for a handshake. \n\nHe was right. In six months both planes were in the air a lot more than they in the hanger. By the end of my first year, I was making twice what I did as a cab driver while doing what I always dreamed of. I even bought a new bedroom set for the apartment. \n\nThe only drawback to the job was the solitude on some of the longer flights. It wasn't like driving a cab. In the plane you had to talk over the sound of the engines so passengers weren't very talkative. As a result, I had plenty of time to think...sometimes fantasize...sometimes remember. \n\nAt times I wondered how Sue was doing. I really hadn't heard much at all. I didn't know if that movie she was making ever came out in the theaters; nor did I hear anything about the first movie, the one where she was topless. About the only thing I knew for sure, even after all that time, the hole she put in my heart was still there. Sometimes, on a long night flight, I'd close my eyes and remember some of the good times we had. Of course, then the anger would come back to life and I'd curse her again for destroying what we had together.\n\nCarl bought the Golden Eagle as soon as the two year lease was up. By that time our feet hardly ever touched the ground anymore, and he was starting to think about buying a third aircraft. ",
        "We were taking advantage of the little free time we had one night, by grabbing a bite to eat at Plato's. \"I saw on the roster, you're taking Senator Hayes to Tucson tomorrow morning. Ever met him?\" Carl asked.\n\n\"No, have you?\"\n\n\"Oh yeah, he's a jackass with capital ass,\" he replied. \"I sometimes fly him and his buddies to Vegas. He likes playing Mr. Bigshot by chartering the flight, himself.\"\n\n\"How can he afford to do that? Fricken state senators don't make that much, do they?\"\n\nCarl chuckled, \"No, his family has money. I'll say this for him, though; he has excellent taste in secretaries. I've seen him with two or three different ones and every one of them was a knock out. My guess is he hires them to bang. I doubt if any of them can take dictation.\"\n\n\"He's not married?\" \n\n\"Oh, I'm pretty sure he is, but that never stops men like him. Hell, not having a beautiful mistress would be bad for his bigshot image,\" Carl chuckled again.\n\nThe next morning, I met Senator Hayes for the first time. I'll say one thing for Carl, when he's right, he's right. Accompanying the senator was one of the most beautiful women I'd ever seen. She had raven black hair with sparkling, deep blue eyes. She stood about five-eight, but she was wearing three inch heels, and even with the conservative business suit she was wearing, it was easy to see her figure was that of a goddess. When I introduced myself, she gave me a smile that would melt the polar ice cap.\n\n\"Hi,\" she said, shaking my hand. \"I'm Lori.\"\n\n\"Nice to meet you, Lori.\" She looked a little scared. \"Have you flown in a light aircraft before,\" I asked her.\n\n\"No, I'm a little nervous.\"\n\n\"I assure you the plane is in excellent condition and I'm about the best pilot in the world,\" I said, trying to keep a straight face.\n\n\"Oh, you are?\" She laughed. \"Are you as good as you are humble?\"\n\nBefore I could answer, the senator joined the conversation. \"Yeah, yeah, come on, I have to be at that meeting by eleven. Let's get going,\" \n\nLori looked like she didn't want to go but put her head down and followed her boss outside. Hayes, obviously having no idea what it was to be a gentleman, was the first one in the plane. I helped Lori in before taking the pilot's seat. As we buckled up, I told her we'd be flying over the Sequoia National Park and the tip of Death Valley during our trip. It seemed to relax her a little, at least until take off. I heard her as our wheels left the ground.\n\n\"Oh God!\"\n\nOnce I got to cruising altitude I looked over my left shoulder. She seemed to have calmed down and was gazing out the window. It was a beautiful day, just as clear as it could be. I turned the other way and saw Hayes. His briefcase was sitting open on his lap and he was reading some papers. I assumed they were notes for his meeting. \n\nWe'd been in the air for about an hour. Up to that point, the flight had been smooth as glass...then all hell broke loose. \n\nA Gulf Stream overtook us from above and dropped down in front of us while descending. I didn't even have time to react before flying right into his vortex. The little Cessna rapidly lost altitude and was forced into a violent, hundred and eighty degree role to the left. I heard all kinds of commotion behind me, including a defining scream from Lori, but I was too busy fighting to get the plane stable again, to be able to do anything about it. \n\nIt was the kind of thing I trained for in flight school, but never thought I'd have to use. I forced myself to stay calm and pushed the yoke forward to relieve some of the drag and get the nose up, then applied full ailerons to complete the roll and upright the plane again. Once I saw a level horizon line, I eased the yoke back to gain some altitude and banked until I knew for sure I was above the vortex. As soon as I knew it was safe, I levelled off and engaged the autopilot so I could check on my passengers. \n\n\"What the fuck happened,\" Hayes yelled. \n\nI ignored him to check on Lori. She was out cold and had a nasty cut above her right eye. The senator's briefcase was lying on the floor and papers were scattered all over. It wasn't hard to determine what happened. The briefcase went flying and hit Lori just above her right temple. It also looked like she hit the other side of her head against the fuselage. \n\nI grabbed the first aid kit and dressed the wound as good as I could. She still hadn't awakened.\n\n\"She'll be okay,\" stated Hayes. \"I'll make sure she sees a doctor when we get to Tucson.\"\n\nAgain, I ignored him. I got back in my seat and took stock of where we were. Bakersfield was nearest airport. I radioed their tower and reported the Gulf Stream and the resulting wake turbulence. I told them I had an injured passenger aboard and needed a new heading. I was going to divert our course for an emergency landing. I also requested an ambulance be waiting for us when we touched down. \n\n\"What are you doing?\"\n\n\"Senator, I'm sorry, but I'm not flying for another two hours with an injured passenger aboard. We're going to land at Bakersfield and get her to a hospital. I also have to get the plane thoroughly checked out to make sure it wasn't damaged.\"\n\n\"You listen to me, I paid you to get me to Tucson, and that's where we're going or I'll sue you and your partner for every fucking penny you've got,\" he bellowed. \n\n\"I'm sure that'll look great in the headlines. Senator sues pilot for making emergency landing with the senator's injured secretary aboard.\" \n\nI dialed in our new heading. Ten minutes later Bakersfield had a cleared runway and a couple of fire trucks waiting for us, just in case. I held my breath the whole way down and didn't exhale until we were safely on the ground. Two guys approached with a gurney. \n\n\"Where are you taking her?\" I asked. \n\n\"Memorial,\" one of them answered. She was still unconscious as they put her in the ambulance. \n\n\"You can kiss your pilot's license goodbye,\" yelled the prick. \"I'll make sure you never fly again.\" \n\nBy then, ignoring him was becoming a habit. I walked into the flight office to make arrangements to have the plane checked out. I was also trying to remember Carl's schedule. I had to call him and let him know what was going on. \n\nI finally tracked him down in Portland and gave him the whole scoop. He told me I did the right thing and not to worry about Hayes. When I was done with the call, Peg, the girl behind the desk told me asshole was able to talk another pilot into taking him to Tucson for the right price. I have to say, I was relieved I didn't have him to deal with any longer. \n\nWhen I got back outside, I was informed by the maintenance crew that they wouldn't be able to check my plane out until the following day. I asked one of them how far the hospital was and grabbed a cab. \n\nWhen I got there they asked if I was a relative. I told them no, but I was there when the accident happened. The next question was if I knew who her insurance was with. I told them she worked for the state and that her boss was a state senator. That seemed to appease them. When I asked about her condition, they told me that the cut above her right eye took five stitches and she had a concussion. They were admitting her overnight to keep an eye on her. If there were no complications they'd release her the next day. They said I could see her if I wanted to wait until they got her situated.\n\nIt was almost an hour before they said I could go up to her room. That beautiful face had taken a beating. She had a big bandage on the right side of her head but I could still see the shiner she had. Her eye was almost swollen closed and was an angry color of purple. I just gave her a big smile. \"Hi, how're you feeling?\"\n\nShe looked surprised to see me. \"Okay, I guess. What happened? Where's Senator Hayes?\"\n\n\"Ah, he found another ride,\" I replied.\n\nShe looked a little stunned. \"He just left me here? How am I supposed to get home?\"\n\nI wondered how well she knew him. \"How long have you worked for him, Lori?\"\n\n\"Two months,\" she grumbled, \"two long aggravating months.\" \n\n\"It sounds like you're not a fan of the good senator,\" I commented.\n\n\"He's a pig,\" she retorted. \"I hadn't been there a week before he started hitting on me. He's a married man with two kids, for Pete's sake.\"\n\nI pulled a chair up to the bed and took a seat. \"I, ah...I know your maiden voyage was anything but reassuring, but I'm going to be stuck here overnight as well. I'd be happy to take you home.\"\n\nShe looked like she was thinking it over. \"What happened anyway?\"\n\n\"Ah, another plane\u2014a jet, cut right in front of us. When a plane is flying, it causes wind turbulence at the wingtips called a vortex,\" I told her, moving my fingers in a rotating motion to simulate the air current. \"They call it 'wake turbulence.' When our plane hit it, it threw us into a roll. Hayes had his briefcase sitting on his lap. It flew across and hit you. I don't know if you hit the other side of your head from that or the roll of the plane, but either way you got a double whammy.\" \n\n\"Does that happen often, this turbulence thing?\" \n\n\"No, no...it should never happen. I have no idea what that other pilot was thinking, but I'm pretty sure he'll be grounded for a while.\"\n\nShe just lay there staring at me for a few moments. She finally made up her mind. \"Okay, if it's no trouble to take me home, I'll go with you tomorrow.\"\n\n\"No you won't,\" we heard from a third voice behind me. \"If you're talking about going home in a plane, I'd highly advise against it. You have a concussion, young lady. Flying can aggravate it. You need to stay out of airplanes for at least a couple of weeks.\"\n\n\"Doctor, I live in San Francisco. How am I supposed to get home?\" \n\n\"There are plenty of trains and busses,\" he replied. \"They'll take you anywhere you want to go.\"\n\nThat was disappointing, but I certainly didn't want to jeopardize her health. \"They probably have Amtrak here. I'll check the schedule and let you know tomorrow. Don't worry, Lori, we'll get you home,\" I told her. \n\n\"Doctor, do you know what time you'll be releasing her?\"\n\n\"If there're no overnight complications, we'll let her go at eleven tomorrow morning,\" he replied.\n\nThe next day, I was up early. I called the airport to see what time they were planning to check out my plane. Peg told me they were already on it, but she hadn't heard if they found anything yet.\n\nNext I walked to a little family restaurant for some breakfast. I asked the waitress about trains and she pointed me in the direction of the Amtrak. I took a cab over and got a schedule. It was a little past ten when I got to the hospital. I didn't see her when I walked into her room, but she heard me enter and poked her head out from bathroom door. She was all dressed and just putting on the finishing touches of makeup. \n\n\"Hi, Harry. You didn't have to come by. One of the nurses told me there's an Amtrak station not far from here. I'm just going to grab a cab and wait for the next train.\"\n\n\"Hey, you're my responsibility until you're safely home,\" I said with a smile. \"I've got a schedule right here. The next train leaves a little after noon. That gives me time to buy you lunch. It's four hours to Oakland and I don't think they offer food.\"\n\nShe finished with her lipstick and joined me in the room. \"You really want to be seen with me in public?\"\n\n\"I would be honored,\" I said. \"If anyone says anything about your shiner, we'll blame it on the senator.\"\n\nThat gave her a good laugh. \"Now that sounds like a plan,\" she chuckled. \"Okay, but I should be the one buying lunch.\"\n\n\"No way, like I said, you're my responsibility until you walk through your own door.\"\n\nAs I got to know her better over a couple of hamburgers, I really liked her. She was funny and cheery, kind and thoughtful. For the first time since my break up with Sue, I found myself wanting to spend time with a woman. \n\nAfter lunch, I ran her to the train station and stayed with her until she left. As soon as the train was out of sight, I high-tailed it to the airport. I saw the head of maintenance who told me everything checked out fine. I gave the billing info to the office and by one-fifteen I was in the air. I was bucking a head wind during the whole trip, but I still made it in plenty of time to get to the train station. \n\nIt was the first time I'd been there since dropping off Sue. It felt a little strange as I walked in. A sudden sadness hit me like a hammer. I checked my watch and saw I still had fifteen minutes, so I walked into the washroom and rinsed my face. I remember looking up into the mirror and imagining Sue standing behind me...a ghost from the past. I closed my eyes and took a deep breath. When I opened them again she was gone. \n\nThrough the door, I could hear them announcing the trains as they pulled into the station. Number seven-fifteen, that was Lori's. It had only been a few hours, but I felt my heart start to beat faster as I thought about seeing her again. I was waiting for her as she stepped off the train. She was genuinely startled to see me.\n\n\"Harry! How...I mean what...I mean...I wasn't expecting to see you here. What are you doing here? How did you get here so quick?\"\n\n\"I have an airplane, remember?\"\n\n\"Yes, but...I just didn't expect...\"\n\n\"Lori, please believe me, I'm not stalking you or trying to crowd you, but I do feel responsible for what happened and I just want to make sure you get home safe and sound.\"\n\nShe looked at me a little hesitantly, but then came that gorgeous smile of hers. \"Okay, and for the record, I didn't think you were stalking me. I just don't want to put you out like this. I know what happened wasn't your fault.\" \n\nIt was my turn to smile, but I think mine was more of a big, goofy grin. \"Let me help you with your briefcase. My car is right around the corner.\"\n\nWe talked some more in the car. She told me she was going to start job hunting again, because she was giving Hayes her two week notice as soon as she got back to the office. I told her I flew a bunch of corporate big-wigs around all the time, so I'd ask around for her. When we pulled into the parking lot of her apartment complex, I turned and gave her a big smile.\n\n\"Can I help you with your briefcase?\"\n\n\"No, I think I can handle it from here,\" she replied, while returning my smile. \"I really do appreciate everything you've done. You're very kind. Your wife is a lucky lady.\"\n\nAh ha, I thought, she's fishing. That must mean she's at least a little interested. \"No wife,\" I explained. \"How about you, you got a big handsome guy waiting for you inside?\" \n\n\"Not unless you count my cat.\"\n\n\"In that case, I still owe you a flight.\"\n\n\"I'm sorry?\"\n\n\"A flight--your boss paid for a flight and we can't really count yesterday, so I still owe you. The doc said two weeks, so how about three weeks from Sunday. I'll pick you up here and take you on a sightseeing tour of the bay area like you've never seen. How about it?\"\n\n\"I don't know, Harry, I'll have to think about it,\" she said with some reluctance in her voice...and just when I thought she really liked me, but I wasn't going to give up that easily.\n\n\"Okay, then, let me take you out to dinner between now and then and try to convince you.\"\n\nAgain, she hesitated, but finally brought her briefcase to her lap, opened it, and took out a business card and a pen. She wrote on the back of the card and handed it to me. \"Here's my home number, Harry, call me.\"\n\nThat's how it started, a little bumpy in the beginning but what a ride. We actually went out to dinner twice in the following two weeks. Getting her up in the plane again was a little more challenging. She was extremely nervous. I couldn't blame her after what happened. \n\n\"Promise no more of those whirlybird things, right?\"\n\nI had to chuckle. \"You mean wake turbulence?\"\n\n\"Whatever, just keep this thing level this time.\"\n\n\"I'll do my best,\" I said as I started pulling back on the yoke. It was a beautiful day and within minutes we were surrounded by nothing but blue sky. She was in awe as we flew over the Golden Gate. From there we headed south along the mountain ranges. \n\nI felt her tap me on my shoulder and leaned back to be able to hear her better.\n\n\"It really is beautiful down there. Where are we?\"\n\n\"We're about a hundred and twenty miles southeast of Frisco,\" I informed her. \"In a few more minutes we'll turn west. Have you ever seen the Monterey coast line?\"\n\n\"Once,\" she answered. \n\n\"Well, you're about to see it from a whole new perspective,\" I told her. A few minutes later I made an easy bank and headed for the Pacific. Once we cleared land, I banked north and followed the coastline at an altitude of five hundred feet almost all the way back home. I kept hearing ooh's and ah's as we passed along the rocky shores. Once I got close to the city, I had to gain altitude again. \n\nAfter touching down and taxiing to a stop, I exited the plane first so I could help Lori down. As soon as her feet hit the tarmac she wrapped her arms around my neck and gave me a kiss. Up to that point, she'd given me a couple pecks on the cheek after dinner, so this was a total surprise. \n\n\"Oh, I have to take you for rides more often,\" I said, with a big grin. \n\n\"Harry, that was amazing. Thank you so much. I'll never be afraid to go up with you again.\" And she wasn't. \n\nWe also started dating on a regular basis. It was strange, at no time since breaking up with Sue, had I felt anything for another woman, but Lori had rekindled feelings that I hadn't felt in years. From the moment I laid eyes on her, I was infatuated. The more I was in her company the harder it was when we were apart. \n\nThe first time we made love was incredible. Before Lori, I dated some and even got laid now and then. I agreed with the old adage that even bad sex is good sex, but sex isn't the same as making love. I'd almost forgotten what that felt like.\n\nJust seeing her undressed made my heart pound. She stood before me, bared in body and soul. The touch of her skin was like the dawn of new day. Every kiss burned my lips with passion. I wanted to explore every inch, discover every secret her body possessed. I wanted to make her my own. I wanted to show her she needed no other lovers. \n\nWith each gentle kiss, each caress of my fingers tips, Lori shook with passion. Her nipples stood proudly at my touch. My cock was hardened steel as I entered her. Cries of ecstasy echoed from the bedroom walls over and over again. By the end of the night we both knew we would spend the rest of our lives together. \n\nWhen the lease on my apartment was up for renewal, Lori asked me to move in with her. Six months later we made it legal. It was a small wedding; friends and family totaled about thirty-five people. Carl was my best man and Elsa, Lori's best friend, acted as her maid of honor. As a wedding present, Carl gassed up the three-ten and told us it was ours to use for the honeymoon so we flew out to Catalina Island for ten glorious days.\n\nAs the years marched on, we had a son, Kyle, and a daughter, Jeanine. Thank God, they both took after their mother in looks and intelligence. Kyle, however, was interested in flying almost before he could walk. He was most definitely a chip off his old man's block. \n\nCarl was their godfather, but they both called him Uncle Carl from the time they could speak. He became a staple in our home and we became the family he never had. It was a shame he never had kids of his own because he would have made a wonderful father. \n\nOver time, Carl added two more planes to the fleet and asked me to interview pilots. When I gave him my recommendations he hired them on the spot without even interviewing them first. Throughout the following years he gave me more and more responsibility, along with more money. As long as I could stay in the air, I had no problem with it. \n",
        "I saw Carl almost every day so I didn't notice it until Lori said something. \"Honey, Carl's looking awful peaked lately, is he okay?\"\n\n\"He is?\"\n\n\"You haven't noticed? He looks pale and he's definitely losing weight.\"\n\n\"Now that you mention it, yeah, he is looking a little scrawny these days. I guess I just figured he's getting older. He's getting up there, honey. He's going to be sixty-three in another couple of months.\"\n\n\"No,\" she said, shaking her head. \"It's more than that. There's something wrong.\"\n\n\"I'll see him tomorrow morning before I take off for Portland. I'll ask him if he's feeling okay.\"\n\n\"I think you should insist he sees a doctor, honey. I have a bad feeling.\"\n\nI confronted him the next morning but he put me off, saying we'd discuss it later. I brought it up a couple more times during the week, but he kept stalling. Lori was getting on my case, saying I should throw him in the car and drive him to the doc's myself. Then, one night he called, said he checked the roster and saw I had nothing up the following Thursday afternoon and told me to meet him at his lawyer's. I'd been there with him on several occasions for various things so I knew where it was.\n\nThat Thursday, I walked into Jim Castner's office and joined Carl who was already there. I took a seat beside him and waited to find out what it was all about. It turned out to be the furthest thing from my mind. \n\nCarl turned toward me. \"Harry, I'm retiring.\" \n\nI was so shocked it took me a minute to process what he'd just said. \"Carl, I...what do mean retiring? You're not even sixty-five yet. You've got a lot of good years ahead of you...You...\"\n\n\"It's no use trying to talk me out of it, Harry. I've made up my mind.\"\n\nI was dumbfounded and just sat there staring at him.\n\n\"I'm selling the whole kit and caboodle to you...\"\n\n\"Carl, there's no way I can afford to buy...\"\n\n\"...for one dollar,\" he said, finishing what he was saying before I interrupted him.\n\nThis whole thing didn't make any sense. \"What do you mean a dollar? We're talking about four airplanes and the business you've built up over decades of hard work. There's no way you can sell all that for a dollar.\"\n\n\"Actually, there is. That's why we're here. Mr. Castner has drawn up a contract to make it all nice and legal.\" He slid the document over to my side of the lawyer's desk. \"He and his secretary have already signed as witnesses. All you have to do is sign on the dotted line, give me a dollar, and you'll be the new owner of Sky Blue Charter.\"\n\nI just sat there without even reaching for the contract. It was absurd. There was no way I was going to take advantage of him like that. I wondered if he'd lost his mind; maybe his problem was more mental than physical. \n\n\"Carl, I'm not signing. If I can't talk you out retiring then I'll find some way to buy the business for what it's worth. I'll see about taking out a loan. If worse comes to worse, we can work out a deal where I pay you from the profits.\"\n\nHe looked at his lawyer. Castner just shrugged his shoulders. \"I told you he wouldn't go for it. You've got tell him, Carl. He deserves to know anyway.\"\n\nNow I was alarmed. \"Know what?\" \n\nCarl sighed. Whatever it was, he really didn't want to tell me. \n\n\"I...I'm dying.\"\n\nTalk about being stunned. I froze in my chair. I couldn't move, couldn't talk, I just sat there staring at him. \n\n\"I have pancreatic cancer. The doctor gives me four months on the outside. You've been like a son to me, Harry. For almost twenty years, your family has been my family. Everything I have, I've left to you, Lori, and the kids. It's all in my will. \n\n\"The business, however, I want to sell to you outright. I don't want you to have any legal hassles or problems with inheritance taxes. Hopefully, you won't anyway, my will is pretty well spelled out, but I don't want to take any chances. Jim says this is the easiest and most sure fire way to make sure you get the business free and clear.\"\n\nMy mind was going two-forty. It was hard to think. I could feel tears welling up in my eyes. \"I'll do it under one condition,\" I finally said.\n\n\"What's that?\"\n\n\"You buy it back for the same price once you beat this thing. If anyone can beat it, Carl, it's you. I know you can do it, and when you do I'll sell Blue Sky back to you for the same dollar.\"\n\n\"You got it,\" he said with a smile. \n\nI signed the contract then took a dollar out of my pocket. I wrote on the back of it, This dollar to be held in trust for the purchase of Blue Sky Charter.\n\nOn the drive home that day, I wondered how I was going to tell Lori and the kids. He was part of the family. I decided to tell Lori first, then we'd all get together and I'd tell the kids. Everyone took it about how I had expected, we all bawled our eyes out.\n\nOver the next couple of months, Carl spent as much time with us as he could. He was always upbeat and never let the smile leave his face. Then one day Lori called me to the phone.\n\n\"Honey, it's Eileen from the flight office. She sounds worried.\"\n\nI took the phone and said hello.\n\n\"Harry, I need you down here right away,\" she gasped.\n\n\"Where, the flight office? Why, what's going on?\"\n\n\"I don't want to say anything over the phone. Please, I need you.\"\n\n\"Okay, I'm on my way,\" I replied. I told Lori where I was going but had no idea what time I'd be back. I jumped in the car and was walking into the flight office twenty minutes later. \"Now, Eileen, what's going on?\"\n\n\"It's Carl, I...he took off a little while ago and...Harry, I...I don't think he's coming back.\"\n\n\"What do you mean he's not coming back? Where's he headed?\"\n\n\"I don't know. He showed up about an hour ago in an old beat up Piper Cub. It didn't even look like it was airworthy. When I asked him about it, he said it was good enough for what he needed it for. We talked about old times for a little while then I got busy. The next thing I knew he was taking off in that rattle trap.\"\n\nThat didn't sound like Carl. He was always a stickler for maintaining his aircraft. \"Let me see his flight plan.\"\n\n\"He didn't file one, Harry. I've been trying to reach him on the radio but he won't answer me.\"\n\nOkay, now she really had my attention. Carl would never take off without filing a flight plan. I grabbed the radio mic and Eileen started trying different frequencies as I yelled out his name. I finally heard his voice.\n\n\"Hi, Harry.\"\n\n\"Carl, where are you?\" I asked in a panicky voice. \"I need you to get back here, now!\"\n\n\"Sorry, old buddy, no can do.\" \n\nI knew Eileen was right. I could hear it in his voice. He wasn't planning on coming back. \"Carl, please don't do this. Don't rob your family of what time we have left together. For me and Lori, for the kids, please, please turn that thing around and come back.\"\n\n\"She's here, Harry. Lisa, she's sitting right beside me. I can feel her presence.\"\n\nBy then I was crying so hard I could barely talk. \"Please, please Carl, come back.\"\n\n\"I love you, Harry. I love you and Lori and the kids with all my heart, but now I want to be with my Lisa. Please tell everyone I said goodbye.\"\n\nThe radio went silent. I knew he had to be headed out to sea. There was no way he'd chance going down in a populated area. I called the Coast Guard, but without Carl filing a flight plan I had no idea of his altitude, how much gas he had, or even in what direction he was headed. \n\nAfter hanging up, there was no way we could keep it together. Eileen and I broke down in each other's arms. It was an hour before I felt I could drive home. Lori took one look at me when I walked in.\n\n\"Is it Carl?\" she asked. \n\nI still couldn't talk. I just nodded my head. She threw her arms around me and sobbed into my chest while I held her. \n\nThe Coast Guard launched a search but gave up after a week with no sign of the wreckage. I arranged a memorial service about a month later. A couple hundred people showed up, some told stories and gave tribute to a man they liked and admired. I had gone over to his house and found an old photo of him and Lisa together. I had it blown up and displayed it with a note saying, \"Together again.\" Somehow it made things a little easier. \n\nLater that year, my son, Kyle, got his private pilot's license just before graduating high school. He had a head on his shoulders and had a clear cut plan for his future. He wanted to go to a college that offered a good business curriculum so he could help his old man run the charter service. Since Carl had left education trust funds for both the kids, I thought it would be a fitting tribute to him.\n\nJeanine was no dummy either. She wanted to be a teacher and the trust fund from Carl would insure it. She was only a grade behind Kyle in school, so within a year of each other, both kids had left the nest for college. Of course, they both returned for the summers. Kyle got in enough flying time that he had his commercial pilot's license before getting his MBA. \n\nJeanine met a guy in her sophomore year and it appeared I was going to be popping for a wedding soon after she graduated. \n\nA couple years later, with both kids out of the nest for good, Lori spoke the five words that strikes fear in the hearts of married men everywhere, \"honey, we have to talk.\" I followed her into the den where she already had a bottle of wine and two glasses waiting for us. She was smiling when we sat on the love seat together, but looked more serious after we both took a sip of wine. \n\n\"Honey, have you given any thought to retiring?\" \n\n\"Retiring? Honey, I'm still in my fifties, why would I think of retiring?\"\n\n\"For me, Harry, or I should say, for us. The kids are gone, half the time your trips are overnighters...I'm lonely, honey. We have plenty of money. You're always bragging about how well Kyle is running the business\u2014fine, let him run it. I want to enjoy the rest of our lives together while we still can. Honey, none of us have any guarantees for tomorrow. Our silver anniversary is coming up. Let's use it as a launching pad for the rest of our lives.\"\n\nIt actually sounded pretty good. I'd never retire from flying, but the business... I named myself as CEO and my son as the president. I took a moderate salary but the rest was his. \n\nFor our anniversary, Lori and I took a two week cruise. We dined on gourmet food, danced till our feet hurt, and made love till dawn every night. It was literally heaven on earth...or should I say-sea. \n\nFrom there we saw Paris and London. Copenhagen was next, damn what a beautiful city. A couple months after that, I borrowed the three-ten, and we puddle-jumped our way across the country on our way to Nova Scotia. There we rented a car and just drove, stopping when we got tired, and eating when we got hungry. What an incredible piece of real estate. \n\nAs it turned out, after seeing what she wanted to see, Lori wanted to cut down on our travel. We had only been home five months in the last two years. She said she still wanted to take a nice vacation now and then, but she missed the kids and our own bed. That was all right with me, but I needed something to do. I couldn't just stay home and watch daytime TV. I had to be busy doing something. \n\nI tried going into work at Blue Sky. Kyle had a beautiful down town office set up for me but everything was so different. While I was gallivanting around the globe, he was busy at work. We now had fifteen planes and he was in the process of buying the whole damn airport. Even with his encouragement to become involved again, the kind of management decisions he was making were way over my head. I couldn't help but feel I was just in the way. \n\nI was just leaving my office when I spotted an old friend I hadn't seen in decades, Sal, the dispatcher from my cab driving days. He was, of course, much older looking. His Italian black hair was now snow-white, he had a few more wrinkles here and there, and he was slightly hunched over, but there was no doubt it was him. I called his name and he turned to look. I saw him smile.\n\n\"Well I'll be, if it isn't the flying cab driver, how the hell have you been?\"\n\n\"I've been good, Sal, you look good.\"\n\nHe laughed. \"Sure, for an old man.\"\n\n\"Hey, you got time for a cup of coffee? There's a Starbucks right around the corner. It's on me.\"\n\nAfter getting our coffees, we sat and talked. He was retired, but like me, was looking for something to do. Unlike me, his motivation wasn't boredom, it was money. I gave him my card and told him to ask for Kyle. I was sure he could find something for an old friend of his dad's. \n\nAs we talked, I told him I, too, was looking for something to do, nothing big, just something to occupy some of my free time. \n\n\"Why not drive a cab?\" he said. \"You always loved it when you were young. In fact, out of all my drivers, you were the only one I knew who really enjoyed it.\"\n\n\"I did enjoy it,\" I admitted, \"but I'm not looking for a full-time job. I need something where I can set my own hours and leave for an extended vacation when the wife gets the wanderlust bug again.\"\n\n\"So buy your own cab. From what you tell me, you can certainly afford it.\"\n\n\"Sal, a quarter of a million bucks for a medallion is a little more than I'm willing to pay for a part time job,\" I joked.\n\n\"That was in the old days,\" he replied. \"Uber killed the market. You can buy a medallion these days for a song, and I know for a fact that you can buy a used cab for next to nothing.\"\n\nI remembered the fun I used to have talking to people from all walks of life. I talked it over with Lori and a month later we were making room in the garage for my very own cab. \n\n*****\n\nI turned in at the gate and pulled up the drive of sixteen Parkside Lane. Sue leaned forward and reached over the seat with a twenty in her hand. \"We have to get together for coffee sometime, Harry.\" \n\n\"Absolutely,\" I agreed as I started to make change.\n\n\"Keep it,\" she said as she started to get out. I watched as she made a mad dash for her front door. She turned with a sad smile and waved before going inside. \n\nI hadn't thought of Sue in decades but couldn't get her off my mind for the entire ride home. The comment she made about Derek was very telling. She was not a happy lady. I never did see any of her films, although I do know from scuttlebutt that she was in a few. She sure never became the star she wanted to be. I had no idea why, she was a talented actress. I imagine it had to do with the roles she took. From what I'd heard, she showed a lot of skin on the silver screen.\n\nLori took one look at me when I walked in and thought better of greeting me by throwing her arms around my neck like she usually did. \"You are soaked,\" she said as she stretched up for a peck on the lips. \"Why did you even bother staying out there on a night like this? How much did you make?\"\n\n\"Ah, forty-two dollars,\" I told her, \"but those people were really glad to see me.\"\n\n\"I'll bet...and how many homeless people did you pick up and drive to shelters for free?\"\n\nI had to smile. This woman knew me so well. \"Ah...a few,\" I replied.\n\nThe smile on her face stretched even wider. \"Why don't you run up and grab a quick shower while I get your hot chocolate ready.\"\n\nThat sounded like a pretty good plan to me, but I wasn't long. About ten minutes later I came back down to join my lovely wife in the kitchen. There was something on the table where I usually sat. \"What's this?\"\n\nLori had just poured us both a steaming cup of rich hot chocolate. It was always my favorite on a cold, rainy night like that. \"Oh, did I leave that travel brochure for Monte Carlo laying there? Silly me,\" she said with grin. \n\nDamn, I loved that woman.\n\nThe End."
    ],
    "authorname": "laptopwriter",
    "tags": [
        "actress",
        "cessna",
        "fly",
        "highway song story",
        "movie",
        "plane",
        "theater"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/i-was-gonna-learn-to-fly"
}