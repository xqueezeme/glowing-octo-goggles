{
    "title": "A Tale of Revenge Ch. 16: Epilogue",
    "pages": [
        "Epilogue\n\n Anna twisted in the uncomfortable garments. The ceremonial robes were layer upon layer of heavy material designed, she'd decided, to make it impossible for a nervous bride to make a run for it. \n\n \"Like I'd make it more than two steps running in this mess,\" she muttered to herself. She tried, ineffectively, to untie the laces at her back. After hours in the heavy garments she desperately wanted to be free of the weight. \"No wonder ladies do not but sit on their bums, how can you last more than a moment walking in all this frippery?\" When she reached her hand up and back, the whisk collar and shoulders laden in embroidery and gems kept her from actually reaching the braided ropes that held the robe in place.\n\n With an unladylike groan she gave up, resigned to waiting for her maids to come and help her. At least the crown on her head was only supported by the intricate braided pattern of her hair and she made short work of extricating it from the nest her clever servants had made to keep it on her head throughout the day. She tried to stretch her neck but again was foiled by the stiff golden collar. She uttered one of the worst curses her soldiers had taught her and sank down onto a divan that would allow her to perch her tired body on her side\u2014wooden frame beneath her skirts be damned. She rested her forehead on her arms while she waited for someone to help her out of her wedding clothes. \n\n \"For a queen you have a terrible mouth,\" Leonid's voice came from behind her. Anna smiled into her arms.\n\n \"You have never known the appalling fate of being tied into enough fabric for a year's worth of clothing all at once,\" she said, trying to turn her head towards him but again brought up short by her clothing. \"Please help,\" she said piteously. He chuckled and she felt the laces of the floor-length outer robe sliding through the multitude of islets that marched down her spine.\n\n With a sigh she stood up and he helped her remove the heavy thing with all its adornments. He raised an eyebrow at her when he felt its weight. The sleeveless outermost garb offered the most heft but by no means the most fabric. Leonid placed the jewel-encrusted coat on the divan and turned back to Anna. \n\n She gave him a smile and turned around again, giving him her back. \"They all fasten in the back to make sure the wearer can't mount an escape.\" Leonid laughed and got to work on the next item, a heavy golden surcote with voluminous sleeves lined in deep blue satin that hung to the floor from her elbows and the support for the stiff collar that kept her head regally high and pointed forward at all costs. \"I don't know who decided to let a blacksmith design a dress, there's more metal than cloth.\" she said when he offered no further conversation, the tension in her mounting. \n\n The third layer was a champagne silk undergown that was sown into pleats and embroidered with delicate birds flitting between winding vines. Anna actually thought it a pity that it had been so covered up by all the gaudiness of the outer layers. Leonid made quick work of the tiny laces, which marched all the way down the fitted sleeves to her wrists. \n\n \"Could you not just wave your hands and make it all disappear?\" she said while he undid the intricate knots of silk ribbon at her wrist. \n\n \"This is so much more fun,\" he said with a mischievous smile, placing a small kiss on the inside of her newly exposed wrist, \"Like unwrapping a present.\"\n\n She blushed as he helped pull the undergown off, no easy feat given the amount of structural supports underneath. \"But all the jewels are on the outside.\"\n\n She stood still as he circled back around her, considering the wood and bone inlays that maintained her posture and the desired shape of the dresses. The frame for the skirts came off easily but the heavy outer corset was much trickier as it held up the ornate whisk collar that rested its weight on her shoulders before flaring up behind her in a wave of lace and pearls. She actually groaned when he lifted it off her, her shoulders loosening instantly. \n\n \"I'm sure we can find something to play with underneath it all,\" he whispered in her ear. She inhaled sharply, heat stirring in her belly.\n\n Beneath the heavy frame was the biggest source of her misery and one she was most eager to be rid of\u2014the dreaded corset, this one in deep red silk hiding the insidious boning. But Leonid's hands did not return and she twisted to look where he might have gone. She found his gaze and gave him a plaintive look. \"Please,\" she murmured, desperate to draw a deep breath again.\n\n \"I can't decide if you begging is more attractive than the sight of you in this devious contraption,\" he came around to face her, his fingers tracing the lines of the delicate lace at the swell of her breasts which were pushed up and held high. Anna's breathing picked up as his clever fingers danced along the scandalous neckline, making her ribs ache against the garment.\n\n \"Unless you like your women unconscious, I dare say the corset will have to come off,\" she said with a small smile. \"But, I promise to keep begging even once it's removed.\"\n\n Leonid laughed, low and promising, \"Of that I have little doubt.\" She twisted again, offering him the laces at her back and he complied. She moaned as the laces came undone and the constricting garment fell away. Leonid's hands came to her back and his thumbs rubbed the marked skin through her shift. \"My, the things they dream up to keep you sitting like a queen.\" She just gave another little moan in reply and sank into his soothing hands. \n\n \"Rupi says I walk like a woodsman,\" she said referring to her favorite maid. She made small sounds of encouragement as he rubbed out the worst of the ache from her compressed skin. \"So they bundled me up so no one would see.\"\n\n He chuckled again and his arms came around her body and pulled her close, her back flush to his chest, her bottom sitting enticingly over his groin. His hands came to her lower belly, pulling her hard against him and eliciting a gasp from her. Her hands covered his and she tilted her head, giving his lips free rein over her bared neck. \n\n \"I suppose my husband won't miss me tonight,\" she said, waiting to gauge his response. She knew he had approved the marriage but he had been acting more possessive of late.\n\n \"Rafia is busy with Serena and won't miss you at all,\" Leonid said. \n\n Anna smiled. \"So you have come to make sure I don't suffer from loneliness? That's very considerate.\" She felt him smile as he kissed the column of her neck. \n\n Leonid ignored her and his hands began to stroke her body over the silky shift. She arched her back as he cupped one of her breasts, pushing the sensitive mound into his hand insistently. \"Eventually,\" she began before his fingers found her nipple making her voice catch, \"there will be some duties attached to this marriage.\" His fingers clamped down on her nipple sending a slice of pain through her breast and into the rapidly building fire under her skin. She whimpered as her arousal grew. \n\n \"Are you trying to provoke me?\" Leonid whispered, his lips against the hard shell of her ear. \"Because that would seem unwise.\" He released the hold on her nipple and stroked the hard nub to soothe the pinch. \n\n \"To the casual observer, perhaps,\" Anna started again and Leonid began a coordinated attack, his lips on her neck while his hand descended across her ribs, down her flat stomach and came to cup her mound. His other hand came across her torso and pulled her against his hard body. She lost her train of thought as she melted into him, her hands clutching his as his fingers slipped between her legs, finding her heat underneath the thin fabric. \n\n \"You were saying?\" he said wickedly, his nose sliding against her cheek and she turned her face towards his, waiting for his lips to claim hers. \"Hmm?\" \n\n \"You are teasing me,\" she sighed. \"On my wedding night no less.\" The corners of her lips curled when he let out a small growl into her ear. Then his mouth found hers as she twisted her neck to meet him. His kiss was heated and demanding, she raised her hand to his neck and pulled him deeper, enjoying how his tongue tangled with her own, his hands rougher as they held her body.\n\n He turned her around, his lips never leaving hers as he pulled her tightly against him. She brought her hands up into his hair, pulling herself up to his demanding kiss. She moaned into his mouth as his hands smoothed over the curve of her back onto her bottom and picked her up. She brought her knees up, unable to untangle her legs from the long shift, and clasped them at his waist. Her fingers tangled in his hair and she pressed against him, his hand traveling up her side, dwarfing her torso in his palm.\n\n He pulled back from the kiss, his eyes raking over her flushed face and lips swollen from his attentions. The kohl on her eyes accented their size and the sweeping line of her eyelids. The pale powder that had dusted her skin was long since brushed away and her skin was pink with arousal. She looked at him with such hunger that he found it hard not to throw her down on the bed and take her now. But they had plans tonight, ones he shouldn't rush.\n\n Slowly he lowered her to her feet, smiling at the flash of disappointment he saw in her face.\n\n \"Don't fret,\" he said with a smile that was not entirely friendly, \"but we do have to get to the begging portion of the evening.\" Anna brought her hands to his chest but he grasped them in his hand and pulled them behind her back in one smooth motion, drawing the most delicious moan from her.\n\n \"Please,\" she whispered, her voice husky and eyes sincere.\n\n \"Please what?\" he said, shifting both her wrists to one hand and plucking at her nipple once again with his free hand , making her voice catch when she tried to answer.\n\n \"Anything,\" she said as she twisted in his grip. \n\n \"Good girl,\" he smiled down at her. He let go of her hands but she didn't raise them again to touch him, knowing he wouldn't want her to. He unwound the ribbons at her shoulders and let her shift fall to the floor, leaving her bare but for the silver chain around her neck, its blue bead resting between her breasts, shining the same color as his eyes. \n\n He pulled her from her cabinet into the bedchamber, which was lit by dozens of candles. She spared a moment to glance at the display before turning back to him, a soft smile on her lips. The rug under her toes was warmed by the lit fireplace, chasing away the cool night air. He stopped her in the center of the rug and broke contact, standing before her, his arms at his sides, his eyes fixed on hers. \n\n For a moment they stayed this way, letting silence fill the room, anticipation building in their spines as they enjoyed the simple act of beginning. He stepped towards her and touched his fingers to her hairline softly, her eyes closing as his fingertips made contact. The intricate plaits came apart at his command, parting as his fingers ran through her hair, releasing the dark waves down her back. She opened her eyes again as his gentle fingers ran through the strands, the pull on her scalp comforting.\n\n When his fingers reached the ends of her waves, he brought his hands forward, catching her wrists against and bringing them to his chest. He took one hand and placed a kiss in the center of her palm, then on her wrist. She bit her lip, stifling a moan as he did it to the other one, sending more waves of sensation along her body despite barely touching her. \n\n His hands closed around her wrists and she felt cuffs appear beneath his fingers. He pulled her bound hands up over her head until she was stretched on the balls of her feet, staring up into his face, her body pulled tight. When he released her hands they stayed in place, held by a cord from the ceiling that hadn't been there a moment ago. Having her thus restrained Leonid proceeded to run his hands along her body, stoking the swirling heat inside her. His fingers and lips sought out every sensitive patch of skin, every weak spot he'd ever discovered during their time together, until she was panting, arching into him, desperate for him to start in earnest. \n\n She whimpered, her eyes closed as she twisted towards him. His fingers brushed the hair over her mound and she felt weak, dizzy with need, desperate to feel him touch her more solidly. \n\n \"All in good time, Anna,\" he stepped back and she made a distressed sound in the back of her throat. \"We have plans tonight,\" he said and she opened her eyes. She saw the desire in his face but also a question. She looked down at his hand and saw the multi-stranded whip dangling from his fingertips. She pressed her lips together, a wave of something close to fear ran through her, or was it anticipation? \n\n After recovering all her memories it had taken years to reclaim her pleasure from pain; there had just been too many triggers. But slowly she had taken back her experiences, learning to enjoy the pain again instead of fear it, and finding pure pleasure at Leonid's hands as the trauma grew more distant. Whipping had been a sticking point though, and she had lost her nerve every time. \n\n But here, on this night, she would face it. She needed it and she knew he did as well. Her marriage to Rafia was political, though the two were good friends. They'd fought together for five years, stabilizing their borders, bringing wayward nobles and their armies to heel. But it had begun to chafe with the court and the population that there were two equal but unattached heads of state. Serena had given her blessing to the match in private, promising to remain a secret lover to the king, but this was not easy on anyone.\n\n Marriage was marriage and she would be expected to produce heirs, especially given the suspicions around their relationship. Rafia knew, more or less, that she was engaged in her own personal matters, but did not understand the details as they were. Leonid was her private affair, not even Serena or Alona knew of him. And though both Leonid and Anna knew their bond transcended the earthly matters she dealt in during the day, there was an undercurrent of apprehension at the newest development. \n\n Anna needed to get past this last barrier, to give him the power over all of her pleasure. She wanted to submit to Leonid, to truly trust him completely. And she sensed it from him as well, the desire to cross this last bridge, to claim her entirely as his own even as she was married to another. And so here she found herself, strung up before him, looking at the whip in his hand and teetering on the edge of the decision.\n\n \"Anna,\" he said softly, bringing her eyes up to his. She saw in his look that he would stop now if she said the word, that he would be happy just to take her as she was. \n\n But she wouldn't be.\n\n \"Yes, Leonid,\" she said, her voice husky with anticipation, \"Please, I want it.\" She twisted her body towards him, offering her lithe form to his desire. His eyes lit up and he came up against her, his lips capturing hers again, his hand and the leather straps pressing her back and holding her against him. She softened under his assault, letting him dominate the kiss. \n\n He stepped back and running his fingers over her pebbled nipples, he stepped behind her, his hand never losing contact with her skin. He pushed her long hair over her shoulder, exposing her back. His fingertips drifted lazily along her spine and then his hand flattened as he descended, curving over her bottom and grabbing a handful of flesh. She groaned and arched her already curved spine further into him. His fingers slipped between her legs, dipping into the dampness he found. She was wet and his fingers slid across her plump lips, parting them and seeking his prize. \n\n She could feel his clothing against her back as he kissed her shoulder, penetrating her with his thick finger at the same time, making her gasp prettily. His other finger slid forward circling her engorged nub without actually touching it. The room filled with her soft desperate sounds as he worked her towards her peak, pulling back every time she got too close. His teeth nibbled at her shoulder and neck as her head fell back to rest on his shoulder. Another finger entered her, stretching her further, and then his thumb pressed against her bumhole. \n\n Anna shuddered as the sensations coursed through her, as if heat rose from her core to fill her skin almost painfully. A great pressure was growing inside her, one that both tempted and frightened her with its intensity. She reveled in the slick feeling of his fingers, the burn of his thumb against her tight muscles. \"Oh yes,\" she called out as his thumb sank further, plunging in and out of her. She was so close, all thought focused on the building sensations about to burst inside her. \n\n But then he slowed, and withdrew his hand cruelly. She whimpered but didn't protest, agonized as his hands moved over her overly sensitive skin, her whole body perched on the edge. He stepped back and she tried to steady her breath. \n\n The first blow with the flogger felt like crackles of lightning across her back. Her skin was so primed, her body humming in arousal, that the soft slap of the leather strands enhanced the sensation to those affected strips of skin. The second blow was harder and stung. The third fell on her ass and flicked across her sit spot making her moan. The pain was delicious, the pressure and sting of the whip made her intensely aware of each inch of skin begging for attention. \n\n There was no fear, no panic anymore. She was single-mindedly focused on the present, the man at her back and the feeling of his whip against her flesh. The next two strokes were harder still and she cried out, the burning sting working its way inside her, stoking the fire that was already too hot. His hand returned between her legs, teasing and stimulating her soaked slit, her arousal already wetting her inner thighs. She so desperately wanted to climax. Anna tried to push herself further onto his hand only to have him withdraw it again.\n\n Soft leather cracked across her back at her shoulder, and then again at the other, and again across her ass and thighs. The strands fell against ever more sensitive flesh until she felt as if her entire upper back was one great burn, calling out for another blow to localize it, draw the pain to sharp points and let it sink back into the sensation as a whole. Tears worked their way from her eyes though she couldn't tell if they were from the pain or the desperation to climax. \n\n He landed a hard blow that cracked against the tortured skin of her ass, and she cried out, so close but unable to finish. She heard the whip fall to the floor and Leonid's hands met her back making her hiss and moan as he stroked the pink flesh. The slide of his hands was painful but so welcome, the smooth coolness of his skin comforting. His hands came around to the front of her body and pulled her into him again, her back flush against his chest, head falling back to his shoulder, his fingers stimulating her slippery clit. The fiery sensations on her back amplified with the brush of his shirt against her reddened skin making her moan. \n\n \"Would you like to finish, Anna?\" he said softly, his lips against her ear as she made desperate sounds that couldn't be considered words. \n\n \"Oh, please,\" she begged, feeling his lips stretch into a smile against her skin. \"Yes, please,\" she gasped as his fingers continued. She was so close. \n\n He hooked his other hand behind her knee and drew it up, opening her lewdly. His thick cock lined up with her weeping slit and he pushed himself into her, stretching the tight channel as he thrust inside her. Anna called out, the rough entry burned despite how wet she was. He didn't slow, knowing how much it excited her further. When he was fitted inside her up to the hilt she could feel him pulsing against her, his skin pressing to the inflamed globes of her bottom. ",
        "Then he began to move, drawing out of her and pushing in with excruciating slowness, dragging his cock along her sensitive opening. She was almost mindless with her need, barely aware of his hand reaching up to toy with her breast as he slid home once more.\n\n \"What do you want, Anna?\" he whispered, his lips against her ear, his breath not as steady as it had been.\n\n She couldn't think to speak and groaned at his pace, frantic for release, tortured by the slow filling of her needy core. \"Please,\" she begged again, \"Leonid!\" her voice was desperate, pleading, just as he wanted her to be.\n\n \"Yes, Anna,\" he growled, thrusting into her in earnest, his fingers finding her clit again, he began to move faster, jolting her body against his. \"Come for me,\" he said, shoving her over the edge into her orgasm. The pleasure burst under her skin, sending bolts of it sweeping over her body. Her lips tingled and her head swam as she was sucked under a great wave, his pace keeping her overloaded and climaxing. It was as though every tiny hair on her body, every inch of her skin was excited at once, her body more alive than ever before. He continued to pound her as her channel rippled over his cock, tightening down over and over as she came. \n\n When her climax subsided so did his pace until he stopped, pulling out of her. His hands moved slowly up her sides, up to her arms and finally to her wrists where he released the cuffs. She slumped against him, allowing him to scoop up her languid body as he bore her over to the bed. She rested her head on his chest as he carried her, reveling at how small she felt compared to his greater form. She kept her hands still though she longed to run them over his skin. He would tell her when she could. \n\n He placed her on the rich quilts, quickly covering her body with his own. The back of her body protested the sensations but it only encouraged her arousal. He kissed her skin once more, drawing her magic to surface wherever his lips touched, leaving behind lingering points of fire all over her body. She groaned as he made his way down, the power inside her rippling as he moved, drawn to him. It seemed stoked by the excitement in her skin, the chorus of sensations from her back and core. \n\n When his lips found her wet slit she was sure the fire of her magic burned too hot for him to continue teasing her. But so it was every time they coupled, each time she was sure there was no new height or new sensation for her to discover. And every time she was wrong. \n\n His mouth teased her sensitive flesh, his tongue stroking her as the fire answered, lapping underneath the surface as she writhed, unable to hold still as the sensations overtook her. She clutched the covers beneath her to keep from sinking her hands into his hair. He hadn't told her she could touch him again and she shuddered, trying to keep a semblance of control while he continued to lavish her pink flesh with attention.\n\n Her back arched as his tongue penetrated her. She gritted her teeth, turning her plea into a whimper. Two fingers pushed where his tongue vacated and he pressed his lips against her sensitive bud, humming as sank his digits further into her. Her entire body was trembling as she held the massive waves at bay, the magic she felt pulling inside her towards him testing her resolve mightily. \n\n Leonid was unperturbed by her struggles and continued his masterful manipulations of her body. His free hand hooked around her thigh, pulling her leg out while holding her against the bed, keeping her still when she found she couldn't stop moving. His tongue circled her clit, coming closer and closer until she quieted, her entire focus on the millimeter of skin between his tongue and her most sensitive spot. \n\n \"Please,\" the word was barely a whisper as all her breath seemed to have left her body. She was supposed to wait for him to ask her, to tell her. But it was too much, the rising tide would overwhelm her and she needed him to release it, to tell her to feel what he was willing to give her. \n\n His response was a growl that vibrated up from her core. His magic reached in and unleashed her power igniting every point in her body with a firestorm of energy. She cried out, the release finally permitted ripped through her, her body writhing against his tongue as he laved her nub, sending wave after wave of pleasure across her body. Her cry was wordless, her mind overcome by the combined attacks both inside and outside her skin. Her magic snapped at the ends of her fingers as she clutched the bed, spilling out of her as the pressure inside her exploded over and over again.\n\n He kissed his way back up her body as she drew in desperate breaths of air. He took her hands and placed them on his shoulders. She managed to draw her shaky lips into a smile as he came to rest over her once more, the weight of his body comforting after the intensity of her orgasm. She wrapped her arms around his neck, relieved to be touching him again and he dipped his head to meet her lips. She felt like she couldn't stop trembling, her body shaking from her release but also from something much deeper, something she hadn't fully resolved.\n\n Tears slid back from the corners of her eyes as he kissed her and he drew away, sensing her distress. \n\n \"Anna,\" he said softly, \"what is it?\" his thumb ran along the path of her tears, pushing them away. \n\n She shook her head, momentarily unable to speak. She looked up into his piercing eyes, wishing she didn't have to try to put it into words. And then she realized she didn't have to. Anna's hands went to his cheeks as she pulled at her magic, feeling the answering pull of his own. There was a channel between them, a thread of power that he could follow into her body or mind if he chose to. She reached for that thread, watching as his face changed from concerned to surprised. \n\n Anna persisted, reaching up along his power back into him where she could feel him all around her, his energy far greater and more powerful than what she could possibly imagine. It was terrible and overwhelming to be inside his mind. But her intention was not to occupy his thoughts or being. Instead she took what she cherished most and placed it inside him, leaving behind what she felt as she pulled herself back and away from his energies. \n\n Her eyes met his in understanding. Her hand traveled to his chest where he no doubt felt what she had given to him. He smiled back at her, lowering his lips to hers again, tangling the emotional with the magical and the physical. \n\n When he breached her once more she moved with him, their bodies caught in a dance of mutual pleasure. His body above hers surging powerfully, her hips and legs working in tandem to maximize the sensations for both of them as her hands clutched the hard flesh of his back. He poured those shared feeling into his touches, his kisses and the drag of his hardness inside her. Her lips never left his even as they pitched over the edge together, delirious in the mix of their connections to one another. \n\n They spent much of the night wrapped up together this way, decadent in their hunger for each other. It was only with the grey light of morning that Anna finally fell asleep in his arms, a small smile touching her lips even in sleep. Leonid stayed with her, enjoying the rise and fall of her chest against him, until the prickling awareness of another deity in the next room troubled him from the bed.\n\n He dressed as he moved, removing his physical presence from the plane as he went so that no mortal could see or hear him. He did not want to wake Anna and he was sure this confrontation would not be a quiet one. He entered the large drawing room of the royal suit and sought out the presence he felt. A bird flitted from the window sill, drawing his attention for a moment. \n\n \"Leonid,\" a silky voice called out behind him. He turned, his body tensed. She should not be here.\n\n \"Sister,\" he said shortly. \"You assured me you would not tempt my control in this sphere by appearing here.\"\n\n Emera shrugged, stones glistening on her shoulders as they moved. \"I felt the need to discuss an urgent matter.\" \n\n \"That could not wait till I returned to the First Level?\" Leonid asked impatiently. He did not appreciate the intrusion.\n\n \"Well given the events of this sphere I thought you might be down here for some time and I wanted to be sure we spoke before any...consummation...took place.\"\n\n Leonid bristled but did his best not to show it. She knew, of course, that he would not easily share Anna with another. Despite the fact that Anna had healed well from her experiences, Leonid still bore a weight of regret he had not set aside, and the thought of her with another set him off perhaps more than it should have.\n\n \"Is there something specific, Emera?\" he growled, \"or did you just come to rub my face in the political marriage between my ward and yours?\"\n\n \"No, Leonid nothing so crude. This is a matter of the heart.\" she said, settling on one of the pale blue couches by the silent fireplace. Her emphasis on the last word made his hands clench reflexively. She knew. \"You are keeping something from all of them, something that affects them all, and me as well.\"\n\n Leonid's face grew cold. \"You cannot possibly tell her. I forbid it.\"\n\n Emera's mouth twitched. \"Of course. But I will have to tell Rafia, and I cannot force him to keep it a secret.\"\n\n Leonid practically shook in anger. \"You cannot leave her in peace? Let her enjoy her life and what she has left of it without thinking only of her worth to you as a royal procreator?\" His voice was rising despite his intentions to hold his tongue.\n\n Emera fixed his gaze with a smooth one of her own. \"What she has left of it is exactly the issue here. How could you keep this from them? From me?\"\n\n \"Easily,\" he shot back, \"I want her to be happy. She doesn't need to know that she could never recover from what they did, that no matter how much she fought to piece herself back together after everything she suffered she would never truly be whole again.\" His anger faltered. \"Don't tell him, Emera. Anna doesn't need to know that they killed her all those years ago.\" The pleading in his voice stung but he could not hide it, his own grief and guilt were a weight on his words.\n\n Emera had no such qualms as she studied her brother with a studious detachment so easy for a goddess who would never know what any of this truly felt like. \"Will she survive a pregnancy?\" she asked flatly. \n\n Leonid was unsurprised that she remained indifferent. He could barely dredge up any frustration at her coldness. It was her nature, and had been his. \"I believe she will.\"\n\n \"That's not good enough,\" Emera snapped back. \n\n Leonid sneered at her. \"I have kept her alive this long through all of your progress wars, reclaiming your empire of old, bringing your interests back under your control. I can keep her alive through a pregnancy. Please, Emera,\" he did not like begging, \"leave her in peace a bit longer.\"\n\n \"You cannot beat a heart with sheer force of will. Your interference is only delaying the inevitable march towards death that began when she first came here,\" Emera's face softened slightly despite her words. \n\n \"By your design,\" Leonid shot back, unable to help himself.\n\n \"Don't, Leonid, you know I will not feel bad for it.\" That much was true.\n\n \"I have managed it this far,\" Leonid pressed on. \"I will continue until her heart cannot manage anymore.\"\n\n \"Then stop interfering and let the royal couple conceive. This is a matter of urgency, Leonid, put aside your possessiveness and allow her to contribute her legacy in this life before it is too late.\"\n\n Leonid stared at her, looking back into eyes that reflected his own and seeing no real understanding in them. She was a goddess after all, one who was bound to further her own interests. Why should she see Anna as anything more than a tool to her own ends? Hadn't he done the same all those years ago? And still his anger and incredulity demanded he not acquiesce so easily. \n\n \"Leave us, Emera. Leave her alone if you wish to keep your kingdom intact.\" He did not make the threat lightly. \n\n Emera's eyes widened in surprise. \"Are you threatening me with the destruction of this sphere if I don't do as you ask?\" now it was her turn to be incredulous. \n\n Leonid did not confirm or deny it. She always feared the most extreme possibilities, he would play on that. He knew, deep in his core, that he would do whatever it took to keep Anna safe. For years he had watched her flourish and grow, healing and moving on to so many better things. And all the while he'd kept this secret from her, reaching into her body and using his own magic to bolster the fraying fibers of her heart. He would not stop now, and he would not let Emera sour what little time Anna had left in this life. \n\n \"Keep your peace,\" he repeated, his voice studiously controlled. \"You have my assurances and my intentions are clear. Do not make an enemy of me, Emera.\"\n\n The goddess gave him a stern look but she nodded finally. \"We will see if you can keep your word, brother.\" And with that she was gone. \n\n Leonid sighed, feeling suddenly drained and tired, another new experience. Sleep was not something that gods did after all. He turned back to the bedchamber, drawn back to Anna despite his turbulent thoughts, or perhaps because of them. From the edge of the bed he admired her long legs tangled in the sheets, the inky tendrils of hair that spilled across the pale sheets. \n\n\nHe crawled back into bed, pleased that she sought him out as he drew close even in her sleep. He pulled her in, fitting their bodies together tightly even as he relaxed into the deep rhythm of her breathing. For a moment he stayed there, feeling her warmth radiate from her to him, her soft supple skin against his harder flesh. In these moments he found a sense of peace he had never truly known before, the type of emotion that can only be had when the opposite one has been experienced as well. The relief spread throughout his body, loosening his muscles and settling deep inside him. And he too closed his eyes and joined her in her dreams.\n\n\n\n\n\n***\n\n\n\nSo this is the end. It's been quite a trip since I started thinking about this story in a pathology lecture two years ago. I really did start with intentions of keeping it short and sweet. But here we are. I hope you've enjoyed yourselves. I've got a few things in the works, check my bio and message me if you have a favorite. \n\nSpecial thanks, once again, to Lee and Lethicia for their amazing beta reading and editing skills. They helped me gather so many loose ends. And also to Masterfuljim for looking over my rewrites in all his free time and introducing me to the time-suck that is social media. \n\nAnd thank you guys for reading this far. Your comments and feedback were so helpful and encouraging. It's been tons of fun."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "wedding",
        "leonid",
        "god",
        "bdsm",
        "submissive",
        "whip",
        "flogger",
        "consent",
        "healing"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-16-epilogue"
}