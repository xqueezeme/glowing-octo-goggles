{
    "title": "Silent Vigil",
    "pages": [
        "Author's note: I wanted to do something special for Halloween this year, so I thought I'd let my readers vote on a theme. This is what they chose, I hope you enjoy it, and have a spooky Samhain! \n\n***** \n\nCHAPTER 1: HIGH-RISE \n\nThe angry beeping of car horns filled the air as Ethan weaved through the bustling crowds of pedestrians that clogged the sidewalk, the sea of gridlocked vehicles peppered with the signature yellow of New York taxi cabs. It was early in the morning, but the city was already waking up. Its inhabitants were pouring into the streets, clutching coffee cups and briefcases in their hands. The sunrise stained the sky in shades of red and orange, its light reflected in the innumerable windows of the towering buildings, rising up to either side of him like monoliths of glass and steel. Wisps of steam rose from manhole covers and subway vents, flocks of fluttering pigeons cooing as they scattered at his approach. The familiar chorus of a thousand muddled conversations was oddly relaxing to him, like a kind of white noise. \n\nHe was glad that he didn't have to brave the heavy traffic, his new job was within walking distance of his apartment, only a couple of blocks away. The pristine, modern architecture slowly gave way to older, more traditional styles as he proceeded deeper into the city's old financial district. Red brick and Romanesque pillars dominated, the stonework stained by ages of weathering and wear. He might have thought that he was taking a step backwards in time, was it not for the abundance of people talking on cellphones as they passed him by. \n\nUnlike many of his fellow citizens, Ethan was not on his way to a cubicle. He wasn't a businessman or a financier, nor was he a lawyer or a stockbroker. He was a facility manager, or perhaps caretaker would be a more fitting title. He specialized in maintaining old buildings of historical value. He had recently aced an interview with the owners of the Abbott and Schutzman building, a high-rise that had been erected by a now-defunct law firm in the late nineteen-twenties, during the age of Swing music and prohibition. These days, the building was leased to many different tenants, the seventy-seven floors occupied by everything from upscale loft apartments to office spaces. \n\nEthan's new position would see him at the head of a team of janitors and repairmen, he would be responsible for coordinating with the staff and keeping the aged structure from falling into disrepair. He had a lot of experience in the field, and rather than seeing the work as a simple paycheck, he felt an almost sacred duty to keep these historic buildings intact. They were a piece of the city's cultural heritage, a window into the past. \n\nBefore long, he found himself standing in front of the grand old building, shielding his eyes from the sun as he craned his neck to see its towering spire a thousand feet above him. It was very much a product of its time. Construction had begun when Art Deco was all the rage, its architecture acting as a kind of timestamp. It was made from grey stone and steel, the decorative, metal cladding on the upper floors catching the sunlight to make it gleam. There were two wings to the building that extended to either side of the central tower, which got progressively slimmer as it reached high into the air, before tapering into a sharp needle that almost made it seem to dissolve into the sky above. The innumerable window frames were decorated with stainless steel, and the facades of the building were adorned with bands of white marble, stone gargoyles peering down at him from its corners. \n\nHe made his way through one of the revolving glass doors, emerging into a spacious and finely furnished lobby. Massive slabs of red marble covered the walls, and the floor was made up of interlocking, wooden panels that had been varnished to a sheen. There were a series of support pillars hewn from the same red stone, inlaid with vertical bars that emitted fluorescent light, softened and diffused by a covering of amber onyx that gave the room a subdued feel. As he gazed up at the ceiling, easily twenty feet above his head, he noted that it was decorated with the overlapping, geometric patterns in shades of red and gold that were typical of the era. \n\nHis shoes squeaking on the varnished floor, Ethan made his way over to the main desk, the wall above it adorned with an ornate sunburst pattern cast from bronze. Behind it was standing a security guard and a concierge, the latter of which was looking him up and down as he adjusted a pair of glasses with round frames that were perched on the end of his crooked nose. Age had hunched the man, and what hair he had left was greying, but the perfect fit of his suit gave him an air of dignity. The security guard was an especially large African-American man with broad shoulders and a neatly-trimmed beard, his hands clasped in front of him as he scrutinized the newcomer. His clothing gave away his profession. He wore a checkered tie over a baby-blue shirt with epaulets, a name badge pinned to his breast, and a black cap on his head. Ethan was starting to feel a little under-dressed in his simple shirt and slacks. \n\n\"You must be the new facility manager,\" the concierge said. \n\n\"Ethan Lewis is the name,\" he replied jovially. He extended a hand in greeting but soon retracted it when the concierge didn't reciprocate. \n\n\"We've been expecting you,\" the man continued, stepping out from behind the mahogany counter. \"You may refer to me as Mister Spencer, and this is our head of security, Mister West.\" \n\nThe security guard gave him a silent nod, Ethan glancing between the two men in a state of mild confusion. This wasn't the kind of reception that he was accustomed to. \n\n\"Uh...pleased to meet you,\" he mumbled. \n\n\"Mister Lewis, was it? Walk with me, the owners have tasked me with making sure that you understand the full scope of your duties here.\" \n\nEthan followed behind Spencer as he made his way over to one of the elevators, the concierge pushing a button and waiting patiently as the dial on the antique floor indicator ticked down. Ethan glanced over his shoulder, noting that Mister West was still watching him like a hawk. \n\n\"Have you much experience working with buildings this old?\" the man asked, keeping his eyes fixed on the dial. \n\n\"I have, yes,\" Ethan replied. \"I specialize in maintaining historic buildings, in fact. I've worked in colleges, museums, I was even responsible for an old prison for a few years. Each one poses different challenges, but they also have a lot in common. I read up on the Abbott and Schutzman building before applying for the position, and I have to say, I'm very excited to work here. I've always been fond of Art Deco, and as I understand it, the building has undergone relatively few renovations compared to most structures of its era. It almost seems to be frozen in time.\" \n\n\"The owners place a great deal of value in its authenticity,\" Spencer continued dryly. \"If they can avoid renovations, they do. I will expect you and your staff to adhere to the same standards, Mister Lewis.\" \n\n\"Absolutely. If you don't mind my asking, what happened to my predecessor? It's unusual to find such a position on the open job market.\" \n\nThe arrival of the elevator was announced by the ringing of a bell, and the two stepped inside as the doors parted. It was an antique model, manually operated, Spencer pressing one of the many numbered buttons with a bony finger as he moved a lever. The doors slid shut, Ethan feeling a sensation of upward motion as they began to climb. \n\n\"The previous manager was with us for many years,\" Spencer finally replied, \"but his failing mental health resulted in him being let go at a rather inopportune time. There are several systems in the building that need urgent maintenance, and truth be told, we've been having trouble holding onto contractors lately.\" \n\n\"Why's that?\" Ethan asked, giving him a frown. \n\n\"The building has a rather...storied history,\" Spencer admitted, shifting his weight as though the subject made him uncomfortable. \"It's not unusual, many old buildings do. The Cecil Hotel in Los Angeles, for example, is plagued by superstitions surrounding its checkered past. Of course, over the many decades that the Abbott and Schutzman has stood, it stands to reason that a few unfortunate events would have taken place on the premises.\" \n\n\"I read about a few murders and suicides,\" Ethan suggested, \"but nothing that stood out as unusual. Then again, I'm not a believer in the supernatural. If ghosts were real, I think I would have seen a few by now, considering my line of work.\" \n\n\"Indeed,\" Spencer replied. \"The contractors complain of hearing noises on the upper floors, and no amount of explaining seems to assuage their fears. Old buildings creak and groan, and that high up, the very structure can sway as the wind buffets it. They don't want to hear it. Your predecessor's declining mental state was the straw that broke the camel's back, as it were.\" \n\n\"How so?\" \n\n\"Hallucinations,\" the concierge replied solemnly. \"The man claimed to see demons and apparitions stalking the upper levels, likely inspired by the rumors that were circulating among the staff. I'm not sure which came first, but it resulted in a lot of people quitting, and the former facility manager being admitted to a psychiatric hospital.\" \n\n\"And here I was thinking that he might have opted for an early retirement,\" Ethan muttered. \n\n\"There are several different branches that see to the upkeep of the building,\" Spencer added, ignoring his comment. \"You'll be tasked with coordinating the different staff members and assigning them to the most pertinent tasks. Janitorial, maintenance, plumbers, electricians. I won't beat around the bush, many of the Abbott and Schutzman's older systems are close to failure. We have an elevator that has been out of service for weeks, the ventilation and air conditioning systems on several floors are in dire need of repairs, and the water treatment plant in the basement has been acting up lately. We need someone to take charge and get everything running smoothly again.\" \n\n\"The situation does sound rather dire,\" Ethan said with a nod. \"I see now why you needed a new manager so urgently.\" \n\n\"You seem like a level-headed fellow,\" Spencer added as he spared Ethan a glance, \"perhaps you can talk some sense into these people.\" \n\nThey arrived at the right floor, and the doors once again parted, Ethan following the concierge out into a carpeted hallway. This area almost resembled a hotel, and Spencer hadn't been exaggerating when he had said that the owners valued authenticity above all else. The same dull, yellow lighting that had been present in the lobby illuminated the long corridor, cast from stylized lamps that hung from the ceiling at intervals like miniature chandeliers. The carpet beneath his feet was appropriate for the period, the same red and brown motif present in its geometric patterns. \n\nThe concierge led him up to a nondescript door, inlaid with brass numbers that read two-six-five. Spencer fished in the pocket of his jacket for a large key ring, leafing through the keys that were attached to it as one might leaf through the pages of a book. He seemed to find the correct one, inserting it into the lock and turning it, Ethan hearing a mechanical clunk from the aged mechanism. \n\nThe door swung open, and they stepped inside, emerging into what looked like an old hotel suite that had been converted into an office. It was rather spacious, with an adjoining bedroom and bathroom, the main living area occupied by a large bank of black and white CRT monitors that were showing various views from what must be security cameras. There was also a desk nearby with a more modern computer setup, a generic, flat LCD display with one of those pre-built slim PCs. Ethan could even see the discoloration in the carpet where couches and coffee tables had once been. There were windows towards the back of the room that must have looked out over the city in ages past, but they were boarded up now. The only light in the room came from the monitors, along with a solitary chandelier hanging from the ceiling above, the bulbs dusty and dim. \n\n\"This will be your nerve center, if you will,\" Spencer said as he waved a liver-spotted hand at the bank of CRTs. \"You're hooked up to the building's security system, it's a little dated, but it works well enough. This way, you'll be able to keep an eye on things and coordinate with Mister West if you need to. To your left is a computer terminal that lets you monitor many of the building's systems, and which you can use to keep track of the different staff. You will be doing most of your work from inside this room.\" \n\n\"It's...a little unusual, to say the least,\" Ethan muttered as he wandered over to the flickering monitors. There was a shallow desk in front of them, upon which was an old rotary telephone that had seen better days. He lifted it experimentally, turning to Spencer and raising an eyebrow as if to ask if he was really expected to use it. \n\n\"I'm assuming that you have a cellphone?\" the concierge asked, as if it should have been obvious. \"This floor and several others were leased out as part of a hotel for a short time, but these suites are largely unoccupied now. You will find all of the amenities that you need here, should you need to stay overnight, or make use of the facilities.\" \n\n\"I only live a couple of blocks away,\" Ethan said, but he quickly stopped himself. It wouldn't do to show any reservations about working long hours on his first day on the job. \"But I can stay as long as is required of me,\" he added. That seemed to satisfy the concierge, and he nodded approvingly. \n\n\"You will find many things about this building unusual,\" Spencer continued. \"Over the years, the different floors have been leased out to a variety of individuals and companies. There are seventy-seven levels, seventy of which are accessible, including several mechanical floors that can only be reached via the service elevator. Each one has been used for radically different purposes at one point or another, and if said floor was never leased again, then it has likely remained in the same state in which it was left when the prior tenants moved out.\" \n\n\"So, you have seven mechanical levels?\" Ethan asked. \"That sounds about right, there's usually one every ten floors or so.\" \n\nMechanical levels were sections of a high-rise building dedicated solely to utilities, such as plumbing or central heating, usually sectioned off behind their own elevator shafts so as not to be accessible to the public. \n\n\"We have six mechanical floors, and I included those in the count,\" Spencer replied. \"The seven unused floors are the highest in the building, located in the crown, just beneath the spire. They have been closed off for some time, as years of neglect has made them rather unsafe. They mostly consist of a bar area known as the Sky Lounge that was sectioned off after a patron was killed there, the observation deck, and loft areas with a lot of exposed structural supports.\" \n\n\"Someone was killed in the Sky Lounge?\" Ethan asked. \"I didn't read anything about that. I know that the observation deck was shut down after someone fell over the railings.\" \n\n\"During prohibition in the twenties and thirties, a lot of these buildings were designed with a hidden speakeasy,\" Spencer explained. \"The Cloud Club in the Chrysler Building or the Mystery Room in the Arizona Baltimore Hotel being prime examples. Executives and other high-society types would gather to partake in illegal drinking and gambling, out of sight of the authorities. There's a wall in the Sky Lounge that opens up when a hidden lever is pulled to reveal shelves that would have been stocked with bottles of liquor and wine. Someone tipped off the police, and they raided the building. This was back in...thirty-three, I believe. One of the patrons resisted arrest and was severely beaten, the NYPD was rather ruthless at the time. He succumbed to his injuries before help could arrive, and the lounge has been closed to the public ever since.\" \n\n\"Grizzly,\" Ethan muttered. \n\n\"I'll call the heads of staff and have them come up here,\" Spencer said, \"you'll need to meet them before your first shift starts.\" \n\nHe moved over to the rotary phone and picked it up, holding the receiver to his ear as he began to dial in a number, Ethan watching with mild amusement. \n\n*** \n\nA short while later, three people entered the converted suite. One of them was Mister West, the man so tall and wide that Ethan could have sworn that his shoulders had scuffed the door frame on his way in. Following behind him was a man wearing a blue boiler suit, a tool belt hanging around his waist, and a middle-aged woman wearing a grey jumpsuit with several pairs of latex gloves dangling from one of the breast pockets. They lined up in front of Spencer like soldiers standing to attention, the old man gesturing to them. \n\n\"You've met Mister West already, he's our head of security. We place a great deal of trust in him, and as such, he'll be responsible for many of the security concerns that you may have become accustomed to dealing with personally in your prior positions. Please allow him a certain degree of independence.\" \n\nNext, he waved to the man in the boiler suit. He was in his forties at least, with a weatherbeaten face and a mop of black hair that protruded from beneath a beanie that had seen better days. He was a little overweight, but he carried himself with confidence. \n\n\"This is Mister Rodriguez, he's our head engineer. His department is responsible for hiring the contractors who deal with repairs and maintenance. He's worked in the building long enough to know it inside and out. You'll be relying on him a great deal, as many of the systems in the Abbott and Schutzman are poorly documented at best, and arcane at worst. When you need something fixed, you go through him.\" \n\nRodriguez gave Ethan a nod as Spencer moved on to the last person in the line. She was a stout woman with chiseled features, her lack of makeup informing him that she was focused on her job above all else. She had unkempt, brown hair was tied back in a tight bun to keep it out of her face. \n\n\"This is Miss Nelson, she's our head custodian. It's her department's job to coordinate the janitorial staff. She directs the cleaners, window washers, sanitation. This building is full of antiques, some of the carpets and pieces of furniture haven't been replaced since it was constructed, and she's one of the few people alive who knows how to maintain them.\" \n\n\"Pleased to meet you all,\" Ethan said. \n\n\"This is Mister Lewis,\" Spencer continued, addressing the three department heads. \"He's replacing Mister Fairfax as the new facility manager. We all grew accustomed to working with Mister Fairfax over the years, and I realize that the...distress caused by his recent departure may still be fresh in your minds. His replacement comes highly recommended, and his employment history is impressive, so I would ask that you afford him the same respect that you would his predecessor.\" \n\nThere was a chorus of murmured affirmations, but the mere mention of Fairfax's name seemed to make everyone uncomfortable. Ethan couldn't help but wonder what exactly had happened to the man. Had he tried to throw himself out of a window or something? \n\n\"I look forward to working with you all,\" Ethan said, glancing at Spencer as he waited for further instructions. \n\n\"Very well,\" the concierge continued with a clap of his hands. \"Now that the introductions are out of the way, things can finally start returning to normal around here. I'll leave the building in your capable hands, Mister Lewis. Mister West, would you accompany me back to the lobby?\" ",
        "West nodded, Ethan watching as the giant of a man held the door open for his frail counterpart, the two of them disappearing into the corridor beyond. He was left standing alone with Rodriguez and Nelson. Ethan cleared his throat, putting on a friendly smile as he tried to ignore the bizarre setting. \n\n\"Well, we might as well get an early start,\" he began. \"I'm told that the state of the building has deteriorated quite dramatically recently. Mister Rodriguez, if you'd be so kind as to deliver me a list of the repairs that you deem most urgent and what resources you'll require, I'll see that you get whatever you need. Let's get that elevator back up and running, too. Miss Nelson, if you'd let me know if you have any special requirements, I'll see to them.\" \n\n\"Very good, Sir,\" Rodriguez replied, Nelson giving him a silent nod. \n\n\"I should warn you,\" Ethan added, \"I may be a little more hands-on than my predecessor. I like to inspect major repairs myself, and I'd like you to keep me abreast of the goings-on inside the building. It's my intention to learn the layout of this place, and all of its quirks, so that I can be just as familiar with it as you are. If we all work together, I see no reason why we can't restore this place to its prime.\" \n\nCHAPTER 2: GHOST STORIES \n\nThe first day passed by without any noteworthy holdups or problems. The staff were experienced, and the heads of the departments knew how to coordinate them. Rodriguez delivered his list of suggested repairs, and it was extensive. Just as Spencer had said, many of the building's old systems were nearing the point of failure. The ventilation system wasn't operating on several levels, the water treatment plant needed urgent attention, and the elevator required special contractors to get it running again. There was a litany of other small, less critical repairs that were required too. Under normal circumstances, even Ethan might have advised simply tearing out the old systems and installing modern equivalents, but the owners were particular about preserving the building's character. He had to respect their dedication, as much as it made his job more difficult. \n\nThe first real bump in the road happened when some of the janitorial staff were tasked with cleaning the higher floors. They were refusing to go beyond the fiftieth level, and it seemed as though Miss Nelson couldn't handle the situation. That was surprising to Ethan, she had looked like a tough woman. Why was she not able to keep her staff under control? \n\nHe rode the working elevator up to the fiftieth floor, stepping out into an open-plan area that differed a lot from the hotel-like environment that he had just left. Each level was like an entirely different building, trapped in a different decade. This one was packed with office cubicles, and all of the walls that weren't structural had been knocked out to make room for them. A few yellowed keyboards and CRT monitors remained on the desks, putting the time period around the late eighties or early nineties. There was no carpet, and the prohibition era Art Deco had been replaced with clean and spartan furnishings. Even the lamps and chandeliers were gone, replaced with strips of halogen lighting. The windows here weren't boarded up, and Ethan could see clear across the city's skyline. \n\nThere was a gaggle of janitors wearing grey jumpsuits, wielding mops and vacuum cleaners, standing around as Miss Nelson appeared to argue with them. They stopped, turning to glance at Ethan as he made his way over to them. \n\n\"Miss Nelson,\" he began, stopping beside them and crossing his arms over his dress shirt. \"What's the problem here?\" \n\n\"I'm just trying to explain to them that cleaning the upper floors is part of their contract,\" she grumbled. \n\n\"They're refusing to do the work that's been assigned to them?\" Ethan asked, his brow furrowing as he looked to the janitors. \"Why?\" \n\nMany of these people looked like immigrant workers, they couldn't be making more than ten dollars an hour or thereabouts. Why on Earth would they jeopardize their jobs like this? \n\n\"They're afraid,\" Nelson replied. She wasn't being dismissive, she said it with a certain gravitas, as though their fears might not be totally unfounded. He had to stop himself from rolling his eyes in exasperation. Was this more nonsense about Fairfax and his mental breakdown? \n\n\"What on Earth do they have to be afraid of?\" Ethan demanded, planting his hands on his hips. \n\n\"We hear noises on the higher floors,\" one of the janitors explained. She was a short woman with long, curly hair, her accent perhaps Cuban or Puerto Rican. \n\n\"This is a very old building,\" Ethan explained, \"it's bound to make noises. Creaking floors, rattling vents, gurgling pipes. Some of the systems are nearly a hundred years old. High-rises like this one are actually designed to sway a little in the wind,\" he added, holding up a hand to mime the motion. \"They have a certain amount of flexibility because if they were as rigid as most people assume, they would collapse under the stress.\" \n\n\"We know that,\" one of her colleagues added. He was in his mid-twenties, sporting a ragged baseball cap, his accent that of a Brooklyn native. \"She's sayin' that we hear other things when we're up there. Spooky shit happens on the floors above this one, Sir,\" he added as he gestured to the ceiling with the handle of his mop. \"We've all seen things, heard things, and after what happened to Mister Fairfax...we don't wanna go up there anymore.\" \n\n\"Listen,\" Ethan sighed, \"I'm new around here. I don't know anything about what happened to my predecessor, and I've avoided asking about him because it seemed to make everyone uncomfortable. But now, it looks like I need to know, so is somebody going to fill me in?\" \n\nHe waited as the janitors exchanged nervous looks, then the Brooklynite spoke up again, removing his cap and holding it against his chest as though paying his respects to someone who had passed away. \n\n\"Mister Fairfax was a good guy, he'd worked here for a long time, knew the old place like the back of his hand. We all liked him, he never gave us any crap. When people started complainin' about hearin' things, he took it real serious. He knew us, you see, knew we wouldn't make stuff up to get out of work. We thought it was rats at first, maybe pigeons gettin' in, or the building makin' weird noises like you said. But there's somethin' up there, Sir. He saw it.\" \n\n\"I was told that Mister Fairfax's mental state was deteriorating,\" Ethan replied, \"that he was hallucinating. Why would you take anything that he said at face value?\" \n\n\"You got it backwards,\" the man added ominously, \"it was what he saw that drove him crazy.\" \n\n\"That's enough, Jeff,\" Miss Nelson grumbled. \"You know that Mister Spencer doesn't like you spreading rumors while you're on the job.\" \n\n\"And what was he supposed to have seen?\" Ethan asked skeptically. \n\nThe janitor looked to Nelson as if asking for permission, one of the women covering her ears preemptively. It was ridiculous, these people were terrified. It was no wonder that they weren't getting anything done. \n\n\"He didn't get a good look at it, but he said that it was big,\" Jeff began. \"He was inspectin' the elevator shaft up on the seventieth floor, just beneath the area of the building that's off-limits. Mister Rodriguez probably didn't tell you, but the elevator ain't just broken, it was damaged. While he was in there, somethin' came after him, chased him outta the shaft. One of the engineers could hear him screamin' from a couple of floors down, and when he finally arrived, Fairfax was rantin' about a monster. The guy said that he'd never seen someone so pale, like all the blood had drained from his face. When they asked him what he saw in the shaft, all that he could remember was a pair of red eyes that glowed in the dark, and wings like a giant bat.\" \n\nEthan had to stop himself from laughing. What was it supposed to be, a vampire? Mothman? \n\n\"So...you're telling me that the upper floors are haunted by a giant bat?\" he asked. \n\n\"More like a demon,\" another of the janitors suggested. \"Lotta people died here in bad ways over the years, that kinda thing attracts them, like sharks smellin' blood in the water. We've all heard noises, some of us have seen things. Sometimes it's just a shadow out of the corner of your eye when you're cleanin' a room on your own. Sometimes you can just...feel it, y'know? Eyes on your back, makes the hairs on your arms stand on end, like there's somethin' watchin' you.\" \n\n\"And this only happens on floors fifty-one and up?\" Ethan added, the janitors nodding their heads. \"I want to clarify, nobody is asking you to go into the sealed-off sections of the building. The seven top floors are off-limits because they're dangerous and poorly maintained. But if you're going to work here, then you can't just ignore twenty whole floors and pretend they don't exist. They need to be cleaned and maintained, or they'll fall into disrepair just as the top seven did.\" \n\n\"He means he's gonna fire us if we don't go up there,\" Jeff grumbled, addressing his fellow workers. \n\n\"I didn't say that I was going to fire anybody,\" Ethan clarified, \"but you have to do your jobs. If you can't find a way to perform your duties that makes you feel comfortable, then I'm afraid that yes, I will have to replace you. Work in pairs, maybe, groups of three.\" \n\nCall the goddamned Ghost Busters if it makes you happy, he neglected to add. The janitors looked to Miss Nelson, and she nodded her head. \n\n\"Mister Lewis is the new facility manager, he makes the rules now. We'll work in groups of two. It will reduce the area that we can cover, but nobody will be left alone. Alright?\" \n\nThere was a series of very unenthusiastic nods, but the janitors began to disperse all the same, some continuing their work on this floor while the others moved to the elevator. Ethan sidled up beside Nelson, keeping his voice low. \n\n\"Do you buy any of this?\" he asked. \n\n\"Like he said, we've all heard things,\" she replied cryptically. \"What happened to Mister Fairfax spooked everyone.\" \n\n\"It's important to have a good relationship with one's colleagues, I don't want to give them the impression that I'm a hardass who's going to drive them like slaves, but this can't continue. I want you to start reprimanding people who spread these rumors, they're working everyone up into a frenzy. Worst case scenario, we'll have to start letting people go. My job is to get this place in working order as quickly as possible, and I don't have time for ghost stories.\" \n\n\"Yes, Sir,\" she replied. \"I'll see to it that the job gets done.\" \n\n\"Great, I'm counting on you, Miss Nelson.\" \n\nBefore turning back to the elevator, he wandered over to the large windows that looked out over the city. It was a warm summer's day, and there was a heat haze on the horizon that made the towering buildings seem to waver. He never got tired of seeing the Manhattan skyline, the clusters of jutting skyscrapers in the nearby financial district rising into the air, their many windows gleaming as they caught the sun. In the distance, he could make out the East River, its surface reflecting the light in a way that made it seem to glisten. The spire of the One World Trade Center rose above it all like a silver needle, the marvel of modern engineering near twice the height of the Abbott and Schutzman. \n\nEven now, it still gave him a kind of vertigo, knowing that there was only a pane of glass protecting him from the near thousand-foot drop to the streets below. \n\nAfter a minute of sightseeing, he made his way back to the elevator, lamenting that the windows in his converted office were boarded up. \n\n*** \n\nIt wasn't long before Ethan was once again called out of his office. He rode the elevator up to the seventieth level, the doors opening to reveal one of the building's machine floors. It was another open-plan space, with only structural walls made from naked brickwork, the polished concrete beneath his feet reflecting the harsh glare from the naked bulbs above. The ceiling was exposed, revealing hundreds of snaking tubes and pipes. He recognized the silver, segmented ventilation tubes, and the bunches of copper wires that wound their way through the mess like vines through a jungle canopy. The plumbing system that carried water throughout the building like lifeblood was comprised of matte white tubes, the bends all right-angles, more copper pipes from the ancient central heating system crisscrossing alongside them. It reminded him of that old screensaver that would draw networks of colorful pipes on his computer monitor. \n\nMore color-coded tubes extended from the floor to the ceiling like pillars, along with networks of electrical cables that ran along the walls in bafflingly complex patterns. Some of them led to large breaker boxes, others to round canisters that he knew to be boilers. It was such an odd blend of modern and nineteen-twenties technology. The noise of nondescript machinery and the whine of electronics were deafening. \n\nHe weaved his way through the maze of pipes and machinery, finally locating Rodriguez. The head engineer was standing beside a colleague clad in similar attire as they examined what looked like some kind of industrial machinery mounted on raised supports. They resembled cylindrical turbines made from green metal, but Ethan soon realized that these were the motors that drove the elevators, the lengths of spooled cable visible inside the housing. \n\n\"Mister Rodriguez,\" Ethan yelled over the noise, \"what's the problem?\" \n\nHe waved Ethan over to a side-room that was a little quieter, packed with more electrical equipment, closing the door so that they could hear themselves think. \n\n\"Is there a problem with the elevator repair?\" Ethan asked again, the two men glancing at each other before Rodriguez replied. \n\n\"Elevator number two is mis-leveled, which means that it's not stopping level with the floors in the way that it should. These are AC brake-controlled elevators that were installed in the thirties, antique Otis Signal Control models, they depend on a braking system to make sure that the elevator car lines up with the hallway. The modern ones use hydraulic braking, puts a lot less strain on the system. We upgraded them to bring them up to code a while back, they're supposed to stop within one-eighth of an inch of the floor, but this one is almost two feet off. We've checked the brake linings, the springs, and the brake drums. They all show signs of stress, along with the cables themselves, so we're going to need to pull out and replace all of those components to be on the safe side. It's going to be a big job.\" \n\n\"What could have caused that?\" Ethan asked. \"Is it just wear? I know that these old systems can be sensitive to temperature and moisture.\" \n\n\"Near as we can tell, it was caused by an...overload,\" Rodriguez replied with another nervous glance at his counterpart. \n\n\"An overload?\" Ethan repeated. \"So, someone tried to use it to carry heavy goods instead of the freight elevator or something like that? Must have been one hell of a heavy load, a couple of thousand pounds at least.\" \n\n\"It's more likely that debris of some sort has fallen onto the car from the shaft above it,\" his colleague added, \"someone's going to have to get in there and clear it.\" \n\n\"How could that have happened?\" Ethan asked skeptically. \"I know that the top seven floors are in pretty bad shape, but this elevator doesn't go that high. The building needs repairs, yeah, but it's not literally falling apart.\" \n\n\"Mister Fairfax must have knocked something loose when he was last in there,\" Rodriguez suggested. \"That, or there's been some kind of structural collapse on one of the floors above where it last stopped, but that doesn't seem likely.\" \n\n\"I don't want to hear that there may have been a structural collapse,\" Ethan continued, \"it's your job to know. I want you to get someone into that shaft right away, and I want to know what's going on in there by tomorrow morning. Is that understood?\" \n\nThe two men glanced at one another again, Ethan loosing an exasperated sigh. \n\n\"What's the problem?\" he snapped, failing to conceal his frustration. \"I don't want to hear anything about ghosts or monsters, do your jobs, or I'll find someone else who will.\" \n\n\"Yes, Sir,\" Rodriguez replied reluctantly. \n\nEthan left them muttering to each other, returning to the elevator with a scowl on his face. At this point, he was about ready to replace the entire staff if it meant stopping these ridiculous rumors. The only other person in the building with any sense was Spencer, and perhaps West. At least they weren't jumping at shadows like frightened children. \n\n*** \n\nEthan stepped out of the elevator on the floor where his office was located, making his way along the carpeted hallway. His mind was elsewhere, the endless numbered doors passing him by one by one, but then a strange sound jolted him back to reality. It was like metal scraping on leather. He stopped in his tracks, turning around to see that one of the Art Deco chandeliers that hung from the ceiling was swaying gently, the dusty bulbs flickering, casting that area of the corridor into deep shadow for brief moments. \n\nHe had just passed beneath it, why was it moving? There were no windows here, and there was no way that he could have brushed against it, it was about a foot higher than his head. The hairs on the back of his neck began to stand on end, the air in the empty hallway seeming to cool, as though someone had turned down the thermostat. As the chandelier swung back and forth, the electric light bulbs fading in and out intermittently, his eyes picked out a shape. It was only visible in the scant moments that the lights were off, a shadow given form, the indistinct outline of a person. His instincts warned him that there was someone leaning against the door that was situated directly beneath the chandelier, on the left side of the hallway, their hands in their pockets. Ethan's heart started to quicken as he focused on the area intently, waiting for the lights to snuff out. When they did, his eyes once again picked out a vaguely human shape, but it was gone before they could adjust. It was almost like watching the flickering image through the slat of an old zootrope, a toy from the pre-film era that mimicked animation by spinning a cylinder, the frames that were displayed on its inner surface creating the illusion of motion. \n\nThe slow rocking of the chandelier gradually ceased, the bulbs remaining lit now. Ethan continued to stare at the spot until he realized what he was doing, shaking his head and releasing the breath that he had been subconsciously holding in. \n\n\"What the hell is wrong with me?\" he mumbled to himself. He couldn't let the frivolous rumors of the hired help get to him as well. Of course there was nothing there, the shadows of this old place were playing tricks on his eyes. The swaying of the chandelier must have been putting stress on the old wires, that was why they had been flickering. Maybe a draft had come in under one of the doors, that would explain the drop in temperature too. \n\nFrustrated with himself, he made his way towards the door, stopping just outside to examine the brass numbers. Two-five-three. This floor had once been a hotel, there were a lot of unoccupied rooms here besides his office. He reached out and took the brass doorknob in his hand, turning it, and feeling resistance. It was locked. \n\nHe shrugged, giving the door one last glance before he resumed his walk to his office. \n\n*** \n\nThe remainder of the day went by without any further incidents. Ethan spent the majority of the time going over the building's finances, ensuring that they were budgeting for the necessary repairs and the salaries of the staff and contractors. Maintaining the building was prohibitively expensive, to say the least. He had to admire the dedication of the owners, they weren't making a profit from running this place, it was a massive money sink. That kind of dedication only came from a genuine appreciation of its singular history. ",
        "It was impossible to tell the time of day inside his suite due to the boarded up windows, but his phone eventually alerted him that it was the end of the workday. Spencer hadn't asked him to stay any later, and so he shut down his computer and the bank of CRT monitors, then made his way down to the lobby. \n\nThe old man was waiting for him as he left the elevator, walking along beside him with his hands clasped behind his back, his posture hunched. \n\n\"So tell me, Mister Lewis,\" he began. \"How did you find your first day with us?\" \n\n\"Eventful,\" Ethan replied, the concierge chuckling to himself. \"I've sent a report to your email server with all the details, but Mister Rodriguez and his engineers should be inspecting elevator two's shaft and getting it up and running again soon. I've sent off a list of replacement parts for approval. Miss Nelson and I convinced the janitors to clean the upper levels, and I'll have someone inspect the main boiler room in the basement tomorrow.\" \n\n\"Very good,\" Spencer muttered, \"it seems that you're living up to our expectations. The staff have been in disarray since the unfortunate incident with Mister Fairfax, I'm glad to see that you've been able to rally them.\" \n\n\"Thank you, Sir.\" \n\n\"I would ask that you bring a change of clothes and a few essentials with you when you return to start your next shift in the morning,\" the concierge added as they neared the door. \"At this critical juncture, many of the staff will be working night shifts, and the owners would appreciate having you on call if the need should arise.\" \n\n\"Not a problem,\" he replied, bidding the old man good evening before leaving the lobby. He took in a lungful of the cool night air, the familiar scents and sounds of the city setting him at ease. Something about the atmosphere in that place was oppressive, as though the very air around him had been somehow weighted. It felt good to be out on the streets again, oddly relieving. \n\nHe headed home, intending to get a good night's rest. \n\n*** \n\nRed eyes in the dark. \n\nEthan was running through shadowy corridors, his blood pounding in his ears, his labored breath rasping in his throat. Something was chasing him, heavy footsteps pounding on the carpeted floor behind him, adrenaline surging through his veins. \n\nThe layout of this place didn't make sense, it was like an Escher painting, hallways that looped back on each other and doors that led to nowhere. Desperation drove him, he had to get away. There was no context for what was happening, he didn't know why or how, but he knew that he was going to die if that thing caught him. \n\nAs he turned a corner into another long, featureless hallway that was lined with numbered doors, he stopped in his tracks. Leaning idly against the wall beside one of them was a man dressed in a waistcoat and slacks, a pair of dark eyes looking up at him from beneath a tattered newsboy cap. There was a cigarette in his hand, and he took a long drag before lowering it, letting a wisp of grey smoke escape his lips. There was something odd about the way that he moved, his motions were jerky, like they were running at a different framerate from the rest of the scene. \n\n\"It won't let us leave, pal,\" the stranger muttered. He took another drag from his cigarette as Ethan watched, then flicked it away. \n\nEthan wanted to warn him that the thing was coming. He could hear it somewhere behind him, its heavy footsteps shaking the floor. Yet when he opened his mouth, nothing came out, it was like he was trying to speak underwater. \n\nThe stranger drew an old-fashioned straight razor from his pocket, flipping it open with practiced speed, the silver blade flashing under the dim light of the swinging chandelier above him. He produced a barber's strop too, a strip of leather used for sharpening, then began to run the blade across it slowly. \n\nHow could he be so nonchalant? That thing was coming, it would kill the both of them if they didn't hurry. \n\n\"You don't know your onions, that's your problem,\" the stranger continued. \"Don't take any wooden nickels, now.\" \n\nEthan had no idea what the stranger was talking about, it was gibberish. He tried to wave his hands, he wanted to warn the man, but the very air around him seemed to thicken. It was like trying to move through molasses, he couldn't run anymore, he couldn't do anything. Panic overwhelmed him, but no matter how much he tried, he couldn't so much as lift a finger. \n\n\"I gotta dust out,\" the man said, Ethan's eyes widening as he brought the razor to his wrist. \"Promise me you'll play house dick, savvy? Put the screws on 'em.\" \n\nHe pressed down, the shining blade piercing his skin, blood so dark that it was almost black welling. Without a shred of hesitation, he drew the blade up his forearm, opening his veins. He switched hands, the wooden handle of his razor now stained crimson, repeating the gesture on the other side. When the deed was done, he casually folded the implement and slid it back into his pocket. He lifted a bloody hand to his cap and tilted it towards Ethan, the man's face seeming to grow ashen as he watched. \n\n\"Go chase yourself, you mug.\" \n\nEthan tried to yell, but he could scarcely breathe now, it felt like there was an elephant standing on his chest. The pounding footsteps grew ever louder, Ethan realizing with a pang of terror that his pursuer was coming up behind him, and he couldn't even turn his head to see what was about to tear him apart. He saw its shadow loom, a pair of bat-like wings unfolding... \n\n*** \n\nEthan took in a gasp of air, jolting upright, his knuckles white as he gripped his bedsheets. He was soaked in cold sweat, his wet hair sticking to his forehead, his heart hammering in his chest like a drum. As his eyes adjusted to the gloom, he remembered that he was in his bedroom, the beginnings of a sunrise just starting to bleed in through the blinds that covered the windows in his apartment. \n\nHe wiped his brow with the back of his hand, finding that it was wet, his sudor stinging his eyes. What a nightmare, he'd never had such a vivid dream before. The man with the razor...it was the figure that he'd seen in the corridor outside his office. That he thought he'd seen. And the thing on his heels, it fit the description of what Fairfax had supposedly encountered in the elevator shaft. A great bat with a pair of glowing, red eyes. \n\nPerhaps he was not as immune to the ghost stories as he had initially thought, the rumors that the superstitious staff insisted on spreading were turning the place into a fucking madhouse. What had the man in his dream been trying to tell him? He'd said that he couldn't leave, and then he had spouted a bunch of nonsense words. \n\nNo, he hadn't been trying to tell Ethan anything. The man was just a shadow that he had seen in the hallway, the monster a description fed to him by one of the janitors. His brain was regurgitating things that he had seen before, there was nothing prophetic about it. \n\nStill a little shaken, he threw off his sheets and dropped to the carpet. He needed to take a shower before work, and he should pack some things as Spencer had suggested. It was entirely possible that he would have to stay the night in his converted office. \n\nCHAPTER 3: JUMPING AT SHADOWS \n\nWest greeted Ethan at the door as he made his way into the lobby of the Abbott and Schutzman with a duffle bag slung over his shoulder, walking beside him as he headed for the elevator at the back of the room. Their footsteps echoed in the great, empty space, the amber glow of the lighting strips in the red marble pillars reflecting off the polished floor. \n\n\"You don't look very well rested,\" the towering security guard commented. Ethan very nearly did a double-take. It was the first time that he had heard the man speak. His voice was deep and gravelly, befitting his imposing stature. \n\n\"It's true, Mister West,\" Ethan replied with a dry chuckle. \"I had some trouble sleeping last night.\" \n\n\"Nightmares?\" the security guard asked, Ethan raising an eyebrow. \n\n\"Yes...how did you guess?\" \n\n\"Don't let them bother you, we all get them,\" he replied cryptically. He saw Ethan over to the elevator, watching as the doors closed on him. \n\nAs the car began to rise, Ethan felt a pang of dread. Everyone gets nightmares? What was that supposed to mean? It was becoming increasingly obvious that the problems that plagued the Abbott and Schutzman were more a result of its terrorized staff than its advanced age. Entire floors of the building were being neglected because the cleaners feared that they were haunted, elevator shafts were collapsing due to a lack of maintenance because the engineers thought that they would encounter monsters in them. The constant tension and stress were even starting to affect him, as much of a staunch skeptic as he was. The working environment needed an overhaul if he was going to stand any chance of getting this place into ship shape. \n\n*** \n\nThe staff filed into the room one after another, perhaps fifty in all, their eyes darting about as they entered the dining hall. The expressions on their faces ranged from nervous, perhaps expecting to be reprimanded, to irritated at being called away from their work. \n\nThis had once been a grand ballroom, entertaining guests with Jazz and later Swing music from an elevated stage. It was situated on the East Wing of the ground floor, an area of the building that saw little use these days. The same Art Deco style that had characterized the building's early history was present here. The walls, floor, and ceiling were styled in dark browns and reds that were crisscrossed by geometric patterns in shining gold. They radiated outwards from a crystal chandelier, which served as the room's centerpiece. Ornate pillars hewn from the same red marble that was present in the lobby held up the roof, each one artfully decorated with more patterns, and the stage was framed by a giant sunburst that brought to mind the flared feathers of a peacock. \n\nThe kitchens were no longer operating, and the bar was long closed, but the furniture remained. The dozens of tables that were strewn about the space were carved from dark mahogany that blended seamlessly with the mellow environment, the chairs padded with comfortable cushions made from red silk. It was the perfect venue for what Ethan had in mind. \n\n\"Please, take a seat,\" he said as he addressed them from the elevated stage. Confused, everyone dispersed and sat down, the three department heads included. Spencer and West were attending too, at his request, of course. He couldn't compel them to do anything that they didn't want to do, and he wouldn't dare try. \n\n\"I'm sure that you're all wondering why I brought you here,\" Ethan began, starting to pace back and forth as they watched. \"My job as the facility manager isn't merely to maintain the building, but also to maintain...you,\" he said as he gestured to his skeptical audience. \"I've only been here for a short time, but what stands out to me right now is a profound lack of morale. But what does morale mean?\" he continued, steepling his fingers. \"Confidence, enthusiasm, discipline. Recent events have created a culture of fear and stress, and that isn't conducive to a productive workplace or a happy staff. The happier and more at ease you are, the more you enjoy spending time in the workplace, the more work will get done.\" \n\nHe could see a few of them sagging in their chairs, having just figured out that they had been duped into attending a motivational seminar. \n\n\"This morning, we're going to be addressing a few points that I think can help raise spirits and get everyone in the mood to be at their best again,\" he continued cheerfully. \"We're going to explore what it means to build confidence, to destroy fear, ways that we can all help each other to beat stress and depression. It's my position that positive thinking produces positive results.\" \n\nThere was a chorus of groans that were soon silenced by Spencer's angry stare. \n\n\"We have to learn how to recognize when we're reacting emotionally,\" he continued, undeterred. \"We have to identify the negative thought processes that stop us from performing at our best, find ways to minimize unwanted thoughts and emotions, and we need to work on a roadmap for resolving our anxieties.\" \n\n*** \n\nThe seminar went about as well as a seminar with a disinterested, irritated audience could go. As the staff filed out of the room to return to their posts, Ethan could only hope that he had imparted some useful information, that his two-hour talk about positive thinking and motivation had rubbed off on at least a handful of the employees. The alternative was firing people, but that wasn't the kind of thing one announces at a seminar intended to alleviate stress and depression in the workplace. He was confident that the ghost stories were the source of the staff's ills, as working conditions were otherwise very good, and the department heads all had amicable relationships with their charges. \n\nHe rode the elevator back up to the floor where his office was, giving the door from his dream a wide berth as he walked past it. There was still a cold draft coming in from the gap beneath it, perhaps there was a broken window in that room. \n\nAs he entered his office, movement on one of the CRTs caught his eye. The black and white feeds cycled randomly through cameras spread throughout the building, as there were far more of them than even the bank of sixteen monitors could display at once. He marched over to the control board and switched the view back to the previous camera, watching as the figure of a woman entered one of the rooms, closing the door behind her. The number in the corner of the display indicated that she was in a corridor on the sixty-third floor, the stenciled door number large enough to be visible even at such low fidelity. \n\nNobody could have gone from the dining room to the sixty-third floor in such a short amount of time, as Ethan had just got off the only working elevator. One of the employees must have decided to skip the seminar. Fuming, Ethan wheeled around, heading back to the elevator. He grumbled to himself as he turned the lever and pushed the button a little harder than was necessary, the car rumbling as it began to climb. Who the hell did she think she was, ignoring a mandatory summons from the facility manager? Perhaps she had a male employee in there with her, and they had decided to have a little honeymoon on their employer's dime. It wouldn't be the first time that he had broken up an affair while on the job. \n\nThese old cars were slow, and it took a good minute before he reached the right floor, stepping off into another strange area of the building. This one had also been leased out as a hotel, but the style was different from that of the prior floor. Instead of twenties era d\u00e9cor, this one looked like something straight out of the seventies. Everything was an ugly shade of beige or brown. The carpet that lined the hallway was brown with red and gold patterns, the wallpaper striped with brown and white lines, the lights casting everything in an unpleasant shade of yellow. \n\nHe located the correct door, turning the handle and finding that it was unlocked. It creaked open as he stepped inside, the hinges squeaking as though they hadn't seen any use in a great deal of time. The lights were currently off, so he located a switch on the nearby wall, flicking it on. The hotel room was just like the hallway, a throwback to the seventies, the moody lighting illuminating a modest suite with an attached bathroom. \n\nThe walls were a shade of cream, skirted with dark, wood paneling. The carpet was brown, and the spread on the double bed was patterned with a suitably garish plaid in matching tones. There was a wooden dresser upon which an aged black and white television set was perched, along with a couple of leather chairs that were situated beside a reading lamp. \n\nThe bed was unoccupied, the sheets undisturbed, there was no sign of his fugitive. The air had a musty quality, and there was a layer of dust on every surface. If he'd had to guess, Ethan would have assumed that nobody had set foot in this room for a long period of time. It was clear that this floor had been neglected by the cleaning staff, who had previously refused to work above the fiftieth level. That said, someone had the keys, because the door was unlocked. The culprit must be in the bathroom on the far side of the suite. \n\nHe made his way over there, the room becoming colder as he went, the sound of rushing wind reaching his ears. \n\n\"I know there's someone in there,\" he announced, rapping his knuckles on the door. \"You're going to have to explain to your department head why you thought it was necessary to skip a mandatory staff meeting.\" \n\nAfter waiting a moment for a reply, none came, so he knocked more loudly. \n\n\"Hello?\" \n\nScrew it. Finding the door unlocked, he pulled it open and was hit by a blast of wind such that he had to grip the frame to stop himself from stumbling. The large window between the bathtub and the sink was open, providing just enough room for a woman to crouch on the sill no more than six feet away from him. The gale was blowing the long, tangled strands of her black hair, whipping at the frilly hem of the silk nightgown that she was wearing. \n\n\"What the-\" \n\nThe woman turned her head to look back at him, her eyes red and puffy, her mascara running down her cheeks. She looked like she had been crying for hours. He didn't know what to do, she was obviously about to jump, but he feared that he might alarm her if he made to grab her. Was the morale among the staff truly this bad? \n\n\"I can't stay here,\" she moaned, the strain in her voice setting him on edge. \n\n\"C-come down from there,\" he stammered, extending a hand towards her. \"Whatever's going on, this isn't the solution.\" \n\nBefore he could utter another word, she leaned out of the window, Ethan's eyes widening in horror as he watched her drop out of sight. He raced across the bathroom, his shoes slipping on the brown tiles, planting his hands on the sill. He leaned over the edge, expecting to see her ruined body crumpled on the sidewalk below, but he couldn't make out a thing. From this high up, even a bus was scarcely visible. \n\nHe wheeled around and raced to the elevator, his cellphone already to his ear as he darted out of the hotel room. By the time he was pressing the ground floor button, Mister West was answering his frantic call. \n\n\"Slow down, speak clearly,\" the security guard complained. \"What happened?\" \n\n\"A woman!\" Ethan gasped, out of breath from his sprint. \"A woman has fallen out of a window on the sixty-third floor, North face!\" \n\n\"What?\" West replied incredulously, \"who was it?\" \n\n\"I don't know all of the staff by name yet,\" Ethan continued hurriedly. \"I saw someone on the security cameras, so I came up here to check. They must have skipped the seminar. I watched them jump, there was nothing I could do to stop them!\" \n\n\"But-\" \n\n\"Just call a damned ambulance!\" Ethan snapped. \n\nA minute later, he was racing through the lobby, pushing through one of the revolving glass doors to find West and Spencer waiting for him on the sidewalk. They seemed confused, and the other pedestrians showed no sign of panic or distress, a passing woman giving him a strange look as he doubled over to catch his breath. \n\n\"Where is she?\" Ethan demanded. West's brow furrowed with concern, and he shared a glance with Spencer before the old concierge gave a hesitant reply. \n\n\"There's nobody here.\" \n\n\"That's impossible,\" Ethan muttered, looking left and right along the street beneath the building. She had fallen from the North face, she must have landed somewhere nearby. Yet there was nothing, no screaming onlookers, no body lying ruined upon the asphalt. He jogged along the sidewalk, trying to locate the window from which the woman had plunged, but he couldn't make anything out from this angle. ",
        "\"Damn it, maybe I got turned around in there,\" he yelled as he waved for West and Spencer to follow him. \"She must have fallen on the other side!\" \n\nHe weaved through the crowds of pedestrians as he ran around the corner of the building, but no matter where he looked, there was no indication that anything was wrong. There was nothing on the sidewalks, nothing on the roads, no sign of an accident whatsoever. \n\n\"Could she have landed on a terrace, or on top of one of the wings?\" he wondered aloud. \"That has to be it. Damn it, West, where's that ambulance?\" \n\nThe security guard sidled up beside him, Ethan lurching as he felt the man's heavy hand on his shoulder, a gesture that he had probably intended to be reassuring. \n\n\"You alright?\" he asked. \"When you arrived this morning, you told me that you hadn't slept much.\" \n\n\"Maybe your mind was playing tricks on you,\" Spencer suggested as he finally caught up with them, \"that happens a lot around here.\" \n\n\"I didn't hallucinate,\" Ethan said, brushing the hand off his shoulder and turning to glare at the pair. \"I saw her as plain as I see you, I watched her fall. She just...dropped. God, I've never seen anything so horrible. How can you be so calm?\"  \n\n\"Come back inside and collect your thoughts,\" Spencer insisted, \"calm your nerves.\" \n\nIt wasn't a suggestion, West steering him back in the direction of the lobby. Once he was inside and seated on one of the padded benches, he started to mull over the events of the last few minutes, trying to slow the racing of his heart. The adrenaline was wearing off now, leaving him feeling drained. \n\n\"I saw her,\" he insisted, West and Spencer watching him with that same expression of concern. \"Sixty-third floor, room seventeen, North face. I'm not hallucinating, damn it! Come with me, I'll show you the open window.\" \n\n\"Mister Lewis,\" Spencer began, his tone apologetic. \"The windows don't open.\" \n\n\"What do you mean?\" Ethan asked, glancing up at him. \n\n\"The windows in this building don't open, they haven't done for years. It's for liability reasons, you see. We had to seal them up to bring them up to code, to prevent precisely what you describe from happening. The only way to get through them now would be to break them.\" \n\n\"She got it open somehow,\" Ethan replied, \"I was just there. Come on, I'll show you.\" \n\nHe rose from his seat unsteadily, still in a state of shock, the two men following him over to the elevator. The ride up was quiet and tense. Ethan wasn't stupid, it was obvious that they thought he was losing his marbles, but he knew what he had seen. When they arrived at the correct floor, he led his skeptical companions to the right door, gesturing to it. \n\n\"In here,\" he said, reaching down to grip the handle. When he turned it, he met resistance, a mechanical clunk informing him that the door was now locked. He looked down at it in disbelief, then back at West, who was standing behind him with his arms crossed. \n\n\"I was just here,\" he insisted, \"it wasn't locked!\" \n\nThinking that he had perhaps misremembered the room number, he tried the doors to the left and right of it, finding that those were locked too. \n\n\"Mister West,\" Spencer said after a moment of awkward silence. \"If you would be so kind as to open the door for us.\" \n\nWest eased Ethan back, then positioned himself in front of it, raising a boot and bring it down beside the lock. After a couple of kicks, the mechanism broke, the door swinging open on its creaking hinges. Ethan followed after him, finding the room exactly as he had left it. There were the two beds, the black and white television on the dresser, the pair of leather recliners beneath the reading lamp. \n\n\"You'll see,\" he insisted, \"the window in the bathroom was open.\" \n\nHe led them over to it, opening the bathroom door, his heart sinking as he saw that the pane of glass was now lowered. He ran his hands across it in disbelief, hooked his fingers beneath it and tried to lift it, but it was stuck fast. In desperation, he checked the dusty floor for footprints, but there were none besides those that he had just left. \n\nEthan turned to look back at Spencer and West, not knowing what to say. \n\n\"It...it was real,\" he muttered. \"This place isn't getting to me like it did the others, I saw it.\" \n\n\"I have no doubt that you saw something,\" Spencer replied hesitantly. \"Everyone here has seen or heard something that they couldn't explain. That being said, your account is a little more...vivid than most.\" \n\nEthan looked to West, the burly security guard giving him a nod in silent agreement with the concierge. \n\n\"I don't know what exactly is going on in this building,\" Ethan continued, \"but there's no such thing as ghosts. Are we just supposed to accept that the place is haunted? Shall we just stand by while the staff becomes less and less able to do their jobs? Either someone is playing elaborate pranks, or there's something in the building that's causing this. Mold or fungus that causes hallucinations, some kind of building material like asbestos, lead in the water. Something.\" \n\n\"It has been getting worse lately,\" Spencer admitted, glancing at West. \"It all seems to have culminated in Mister Fairfax's episode in the elevator shaft. Before that, the reports were limited to someone hearing odd noises that sounded like footsteps or whispers, figures glimpsed out of the corner of one's eye for a brief moment. People said that they felt uncomfortable in certain parts of the building, that they felt like someone was watching them, all things that could be easily dismissed.\" \n\n\"And now?\" Ethan asked. \n\n\"I had written it off as a kind of group hysteria brought on by the stories that circulate about the building's past,\" Spencer continued. \"You said it yourself, the rumor-mongering is a self-fulfilling prophecy. Someone tells a ghost story, another person becomes frightened, and that's taken as further proof that the story is true. But you've only been here for a couple of days, you've not been exposed to the culture of fear that has slowly been developing.\" \n\n\"If someone had mentioned this during my interview, I might have been better prepared,\" Ethan complained. \n\n\"Wanted: facility manager for haunted building with superstitious staff,\" Spencer added jokingly. \"Nobody would have applied.\" \n\n\"Fair point,\" Ethan grumbled, \"but I'm not about to be deterred. Every problem has a solution, and I'll be damned if I'm going to fail in my task here. Mister West,\" he continued, trying to collect himself as he addressed the tight-lipped guard. \"You're certain that there would be no way for bad actors to get in and out of the building without your knowledge? Have you reviewed any security footage in order to determine the legitimacy of the complaints from the staff?\" \n\n\"Reasonably certain,\" he replied. \"The building is old, and it was built during prohibition. There may be hidden tunnels that lead in and out, perhaps even ways to reach the subway system, but there are none in the plans, and I've never come across any. As for the tapes, I have reviewed them. I've caught reactions from staff, but nothing that I'd call evidence.\" \n\n\"Very good,\" Ethan replied. \"I would like you to start taking reports when people say that they've seen or heard something. Include the time, date, and the area of the building where the incident occurred. Even if we don't find anything, it will at least let the employees know that they're being taken seriously.\" \n\n\"You got it,\" West replied. The idea of doing actual security work seemed to invigorate the man. \n\n\"I'm going to review some footage myself,\" Ethan added. \"I saw someone on the monitor bank, that's what brought me up here in the first place. That footage must exist, and if it doesn't, then it will at least show me entering and leaving the room.\" \n\nIt felt good to take charge of the situation, to have a plan of action, and it seemed to make his colleagues more confident too. When they returned to the elevator, it was with the hope that they would be able to find a solution to the problems that plagued the building. \n\n*** \n\nEthan went over the footage again, his eyes fixed on the flickering screen, casting his face in its pale glow. It didn't make any sense. The camera feed was recorded on old VHS tapes, which were wiped and reused after a period of time had passed, so he had footage of the hallway in question going back at least sixteen hours. He knew what time of day it had been when he had seen the woman enter room seventeen, yet the video showed an empty corridor. The only activity was when he had gone up there to investigate. It showed him proceeding down the hallway from below right of the frame, then standing in front of the door, completely motionless. A chill ran down his spine as he watched himself, as still as a statue, his nose an inch from the wood. It was an eerie and unsettling feeling, watching himself do something that he had no memory of, like he had been black-out drunk. \n\nAfter a couple of minutes, he abruptly sprang back to life, sprinting to the elevator with his phone in his hand. \n\nIf the footage was to be believed, then he had never entered the room at all. That would explain the lack of footprints on the dusty bathroom floor, and why the door had been locked when he had returned with Spencer and West. \n\nYet he knew the layout of the room, despite having never set foot inside. It was exactly as he remembered it, down to the awful carpet and the plaid bedspread. How could that be possible? \n\nHe leaned back in his chair, trying to gather his thoughts as he scratched his chin pensively. Should he doubt his own faculties? The figure in the hallway, the strange dream, the jumper in room seventeen. Could it be some kind of environmental poisoning, as he had suggested to Spencer? This building was old, it was probably full of lead paint, and mercury poisoning certainly fit the symptoms. Acute exposure could give rise to delirium, hallucinations, and psychosis. \n\nThe problem with that theory was that he hadn't been working in the Abbott and Schutzman long enough to be exposed to such contaminants. If that was the case, then the longer a person remained in the building, the crazier they'd become. Still, better call in some health inspectors and have them check for mold and heavy metals, just to be sure. \n\nEthan considered whether he wanted to share the chilling footage with his peers. It might be counterproductive, they might call his mental state into question. No, he would wait until he had more to go on. \n\nA text message jolted him back to reality, and he pulled up his phone, swiping through his alerts. Good, Rodriguez had finished clearing the damaged elevator shaft. Maybe he had been able to figure out what exactly had happened in there. After taking one last glance at the bank of monitors, Ethan stowed his phone in his pocket and got up from his seat. \n\nOn his way to the elevator, he passed the door where he had seen the leaning figure. A chill came over him all of a sudden, like a cold draft, the hairs on the back of his neck rising. He spun around, getting the distinct feeling that he was being watched, but there was nobody there. He approached the door, frigid air pouring out from beneath it, gripping the handle and testing it again. Still locked. The aged wood creaked as he pressed an ear against it, listening intently. There was something on the other side, like a whisper barely heard, or a conversation happening a great distance away. It was barely audible over the sound of his own blood rushing in his ears. \n\nNo, it was gone. \n\nHe stepped back, resolving to return with a key that would finally let him sate his curiosity. \n\n*** \n\n\"What do you mean, there was no debris?\" Ethan demanded. He was standing outside of an open elevator shaft, Rodriguez and his colleague packing away their tools and equipment. \n\n\"You can take a look for yourself, Sir,\" the engineer replied as he gestured to the parted elevator doors. Ethan gave it a tentative glance, then resolved to do as he suggested, trying to dispel the images of winged bat monsters from his mind. He leaned over the edge, peering down into the yawning shaft. It was hard to see much of anything, it was far too dark, but Rodriguez soon produced a flashlight from his belt. Ethan took it, the bright beam cutting through the gloom, illuminating the car a few floors below them. \n\nThere was nothing, no fallen rubble, so signs of any structural collapse. The metal was pretty scuffed up and dirty, but he had no way of telling if that was how it was supposed to look. The thing was three times older than he was. \n\n\"Then, you were wrong about what caused the mis-leveling?\" Ethan asked. \n\n\"No, that was definitely caused by an overload,\" Rodriguez replied. \n\n\"So you're saying that enough weight was put on the car to damage the cables and the braking system, but that it was then removed? How?\" \n\n\"I can't give you an answer that you'll like,\" the engineer replied. \n\nRather than get frustrated, Ethan closed his eyes for a moment, taking a breath and composing himself. \n\n\"Let's get this fixed,\" he said. \"Let me know if you need anything that wasn't on the list of tools and replacement parts that you sent me, and I'll see that you get it.\" \n\nRodriguez seemed surprised that he wasn't being chewed out, giving Ethan an appreciative nod. \n\n\"We'll get it done, Sir.\" \n\n*** \n\nIt wasn't long before Ethan was once again called away, this time by Mister West. He headed to the security office on the ground floor, a small room with a few computers that more resembled the office of a school headmaster than the head of security. There were a few members of the female janitorial staff milling around inside as Ethan approached, giving him a half-hearted greeting when he opened the door. One of them was sitting on the chair in front of West's desk, a couple of her colleagues patting her on the back as they tried to calm her. She was sobbing, her hunched back rising and falling with the effort. \n\n\"What on Earth has happened here?\" Ethan asked, West looking up from his computer monitor. \n\n\"You asked me to start taking reports if anyone witnessed anything...unusual, Sir,\" West replied. \"This is the first, I thought that you might want to be here in person.\" \n\nEthan nodded his approval, taking up a position beside the desk so that he could observe. \n\n\"Tell us what happened from the top,\" West said, the sobbing woman catching her breath and drying her eyes on her sleeve. West rummaged in one of his desk drawers for a moment, locating a pocket-sized packet of tissues and passing it to her. The two men waited as she blew her nose, trying to compose herself. \n\n\"I...I was cleaning one of the rooms on the fifty-third floor,\" she replied, her voice cracking as one of her colleagues rubbed her back sympathetically. \n\n\"What's on fifty-three?\" Ethan asked, his question directed towards West. \"Sorry to interrupt.\" \n\n\"More hotel rooms,\" West replied. \"The majority of the building was leased out either as office space or as a hotel.\" \n\nHe gestured for the woman to go on. \n\n\"I was v-vacuuming the carpet,\" she continued, dabbing her eyes with a balled-up tissue. \"It was so dusty, hadn't been c-cleaned in years. We haven't been up past the fiftieth floor in a long time. Helen was with me,\" she added, gesturing to one of her colleagues. \"Miss Nelson told us that we were to work in teams of two so that we wouldn't have to be alone up there. Helen went into the bathroom to mop the tiles, she was only out of sight for a m-minute...\" \n\nShe began to break down again, Ethan sparing West a worried glance as they waited for her to get herself back under control. Whatever she had seen, it had frightened her out of her wits. \n\n\"I was focused on the carpet,\" she said, her voice wavering. \"And when I looked up, there was a...a man sitting in the armchair across from me. He was...\" \n\nShe hesitated, as though struggling to find the words. \n\n\"Take all the time you need,\" West said, trying to be encouraging. \n\n\"He had a gun in his hand,\" she finally said, starting to sob again. \"I thought it was a burglar or some kind of vagrant who had somehow gotten inside and had been living in the abandoned room. I wanted to scream, but...I couldn't, it was like I had lost my voice.\" \n\n\"What did he look like?\" West asked, tapping at his keyboard as he took down her report. \n\n\"He was in his late thirties, early forties maybe,\" she replied tearfully. \"A big guy, double chin, balding. He was wearing a white undershirt, a pair of shorts, and black socks with those old-timey garters on them.\" \n\n\"What kind of gun?\" West added. \n\n\"I don't know,\" she muttered, \"it was silver. One of those ones with a spinning part for the bullets, like from a Cowboy movie.\" \n\n\"A revolver,\" Ethan suggested, and she nodded her head. \n\n\"What happened next?\" West asked. \n\n\"He put the barrel under his chin and...\" \n\nShe didn't need to elaborate, what she had seen next was obvious enough. Her colleague, Helen, chimed in next. \n\n\"I heard her scream,\" she said, \"and I came running out of the bathroom to find Maria covering her face with her hands.\" \n\n\"And did you see this man too?\" West asked. \n\n\"No,\" she replied with a shake of her head. \"There was just an empty chair.\" \n\n\"I saw it,\" Maria insisted, her lip starting to tremble again. \n\n\"I believe you,\" Ethan said, all eyes in the office turning to him. \"I saw something similar up on the sixty-third floor, a person who was there one minute, but gone the next. I've asked Mister West to start taking statements from people who report any unusual happenings. We're taking this matter seriously from now on, and we're going to get to the bottom of it.\" \n\n\"Do you know what's happening?\" Helen asked. \n\n\"Not yet,\" he admitted, \"but we have some theories. Heavy metal poisoning is one of them, perhaps mercury, the symptoms of which line up perfectly with what has been happening to the staff. Delirium, hallucinations, psychosis. There's no need to be alarmed, we've already arranged for city safety inspectors to survey the property for any contaminants.\" \n\nThat seemed to alleviate some of the tension in the room. As he had suspected, taking the complaints of the employees seriously, and offering them more reasonable alternatives to ghosts and goblins did a world of good by itself. \n\n\"I think a few days of paid leave should do Maria some good,\" Ethan added. \"I was on my way to see Mister Spencer anyway, so I'll talk to him about it.\" \n\nCHAPTER 4: TWO-FIVE-THREE \n\n\"Two-five-three?\" Spencer asked, rising from his seat at the front desk and hobbling into a back room. There was a massive rack of old keys hanging from a wooden board in there, and he began to search through them, adjusting his spectacles as he read off the floor numbers. \"The same floor as your office, yes?\" \n\n\"That's right,\" Ethan replied. \n\n\"Whatever do you want to get into that room for?\" Spencer asked as he pulled down the correct key ring. \"Most of the suites on that floor have been vacant for decades.\" \n\n\"I'm just going to check something out,\" he replied. \"There's a cold draft that comes in from under that door, I wanted to make sure that there wasn't a broken window in there or something.\" \n\n\"Very well,\" the old man replied, handing him the key ring. It was surprisingly heavy, all made from iron, it seemed. \"Just return it when you're done.\" \n\n*** \n\nEthan stood before the door outside his converted office, the correct key in hand, staring at the bronze room number as he tried to drum up the nerve to unlock it. Supposing he entered the room, and saw something horrifying or unexplainable, would it really be happening? Or would he just be standing in front of the door like a motionless mannequin again? \n\nThere was only one way to find out. ",
        "He reached down and inserted the key into the lock, hearing the mechanical clunk as he turned it. This floor had been practically untouched since the thirties, so he expected the interior of the room to resemble the hallway. \n\nAs he stepped inside, that same chill came over him again, like he was entering a walk-in freezer. It was so cold that he half expected his breath to mist, or for there to be frost on the walls, but everything seemed outwardly normal. It was about what he had anticipated, your average, nineteen-thirties era hotel room. It was laid out similarly to the one that the phantom woman had jumped from, albeit with different d\u00e9cor, and no television on the dresser. \n\nShivering, Ethan wandered about, inspecting the twin beds and the dresser. There was nothing here that stood out as unusual to him. There was indeed a window on the far wall that would have looked out over the city in ages past, but was now boarded up. There was no draft, so what was the source of the cold? A malfunctioning A/C unit, perhaps? \n\nHe decided to check the bathroom, opening the door and stepping through. There was little of note in here, just an old-fashioned bathtub, a porcelain sink, and a toilet. As his eyes scanned the room, he noticed something out of place, Ethan walking over to the sink. Beneath a dusty mirror in which he could barely make out his own reflection was a straight razor, sitting between the faucets. His blood ran cold as he recognized the wooden handle. \n\nIt was the one from his dream. \n\nWith trembling fingers, he reached down and picked it up, turning it over in his hand. The blade was coated in what looked like rust, but Ethan knew better. \n\n\"Am I really seeing this?\" he muttered to himself. \n\n\"You don't disappoint, house dick.\" \n\nEthan froze, staring intently into the sink, too afraid to raise his eyes for fear of what he might see. The voice was coming from behind him, immediately recognizable, the smell of cigarette smoke wafting on the air. \n\n\"What is this?\" he demanded, his mouth suddenly bone dry. He could feel eyes on his back, he knew instinctively that someone or something was standing just a few feet away, but he dared not look. \n\n\"It's not about you seein' us,\" the voice continued, \"it's about us seein' you. Oh, we all see you, like a candle in the dark. You got that glow, pal, brighter than the rest. You got the nerve to play house dick.\" \n\n\"What are you talking about?\" Ethan asked, a shiver running down his spine like icy fingers. \"What do you mean by that? What's a house dick?\" \n\n\"A house dick,\" the man replied, frustration creeping into his voice. \"A hotel flatfoot, a P.I, you mug. I ain't got all day, so listen good. We want to check out of this joint, but it won't let us. You gotta fix it so's we can leave.\" \n\n\"Who are you?\" Ethan asked. \n\n\"Who am I?\" the stranger scoffed. \"I'm the only guy who knows the scoop, the only patsy who's in on the joke. Just when you think you've found an easy way out of the frying pan, bam, you're dropped right into the fire. Some of 'em get stuck in a loop, living out their despair over and over, like a clockwork toy. Me, I can appreciate a good pratfall, always did like a little Keaton.\" \n\n\"What is it that you want from me?\" Ethan continued, trying to control the wavering in his voice. \"What is this it that you keep referring to?\" \n\n\"I ain't got all the answers, that's your job, shamus. I gotta bow out, so keep sniffin'.\" \n\n\"Wait!\" Ethan said, daring to look up for the first time. In the clouded mirror, he saw an indistinct reflection, the silhouette of a man wearing a newsboy cap. \"Can't you give me anything to go on?\" \n\n\"Red eyes in the dark,\" he replied. His voice seemed to grow distant, as though he was calling out from the far end of a long tunnel, his reflection fading like a wisp of smoke. \n\nEthan gave it a minute longer, leaning over the sink, feeling light-headed. This wasn't a fucking hallucination or a dream, it was real, visceral. Unless he had developed full-blown schizophrenia overnight, there was no logical explanation for what was happening to him. \n\n\"Heavy metals in the water my ass,\" he muttered to himself, \"more like DMT.\" \n\nWhatever the man in the newsboy cap was, he was trying to get a message out, he wanted something. No, they wanted something, something that only Ethan could give them. \n\nSomething was preventing them from checking out, as the man had said, stopping them from moving on. Was that it, then? Was he accepting the existence of ghosts? Maybe he really had gone fucking crazy... \n\nEthan turned around once he had steadied himself, and immediately let out a muffled exclamation of surprise and disgust, turning his head away from the old bathtub. It was full to the brim with water that was clouded with dark blood, crimson fingerprints trailing over its edge, staining the porcelain. He gave it a few more moments, waiting for his nausea to abate, then opened one eye hesitantly. \n\nThe tub was empty, returned to the state in which he had found it. \n\n\"Red eyes in the dark,\" he muttered under his breath. What could it mean? \n\n*** \n\nNight had fallen, and it was time to turn in. The events of the day had left Ethan exhausted, both physically and emotionally, but he wasn't looking forward to sleeping within the walls of the building. Whatever was trapped in here alongside the man with the cap would no doubt be drawn to him, like moths to a flame. That said, it wasn't as though he was any safer in his own apartment, not after the night terror that he'd had involving the bat creature. \n\nRed eyes in the dark. The apparition's last, fading words had stuck in his head. Was it a clue that could help him find a solution to their mutual problem, or was he describing it, the thing that was preventing them from checking out? The creature that Fairfax had reported seeing in the elevator shaft, the monster that had pursued Ethan in his nightmare, both of them had red eyes. \n\nHe had no idea where to start. The man in the cap spoke in what must be archaic slang, for the most part, layered on top of vague metaphors. Without direction, what was he supposed to do? Should he enlist the help of his colleagues, or would they immediately have him committed? \n\nMaybe he'd sleep on it, tackle the problem with a fresh perspective in the morning. He began to undress, then slipped on his pajamas, avoiding looking in the bathroom mirror as he brushed his teeth for fear of ghosts appearing behind him. \n\nAs soon as he had slipped beneath the sheets and the lights were off, a wave of unease washed over him. According to the man in the cap, the ghosts that haunted the building were watching him. They were drawn to his glow, whatever that meant. Were they watching him right now? \n\nThere was no point dwelling on it, there was nothing that he could do to stop them. Ethan closed his eyes, almost glad of his fatigue, letting it carry him off into blissful unconsciousness. \n\n*** \n\nEthan was jolted awake by the sound of heavy footsteps. He looked around the bedroom of the converted suite groggily, his eyes seemingly already adjusted to the pitch blackness such that he could make out the closed door and the dresser adjacent to his bed. \n\nThe noise was getting louder, the slow, methodical thudding making the floor beneath him shake. Vibrations traveled up through the wooden frame of his bed, making his headboard bump against the wall behind him, the wilted potted plant on the bedside table clattering as it was bounced around. \n\nThe same fear that he had felt in his nightmare came over him, a deep, primal dread. Even though the bedroom was completely enclosed, the door bolted shut, his instincts warned him that a hungry gaze was fixed on him, that he was being stalked. He began to tremble as whatever was making that terrible sound paused outside of the door to his suite. After a brief delay, he heard a crash as it was wrenched from its hinges, sent toppling to the floor by something with far more strength than any mortal man. \n\nThe thudding footsteps neared, the sound of loud, bestial huffing emanating from beyond his bedroom door. It sounded like a giant bloodhound tracking a scent, or a hog sniffing for truffles, more footsteps alerting him that it was searching for him. \n\nHe prayed that it wouldn't find him, that it wouldn't pick up his scent, that the frenzied beating of his heart wouldn't alert it to his presence. He stifled a whimper as he heard it bring its nose down to the gap beneath his door, taking in lungfuls of air as it tried to sniff him out, red light bleeding through into the room. It knew that he was there. \n\nA sound like knives scraping on wood filled the room as it raked what sounded like claws on the other side of the door, a rumbling growl chilling his blood, deep and menacing like that of a lion or a bear. He wanted so badly to hide his face beneath the sheets like a frightened child, to take some measure to protect himself, but he couldn't move. It was like there was a weight pressing down on his chest, like his entire body was limp, his muscles not responding to the signals that he sent them. \n\n\"I...see...you...\" \n\nA deep, gravelly voice emanated from the other side of the door, more like that of an animal than a person. It sounded like a grizzly bear trying to imitate human speech. \n\nThe door creaked as it put more weight on the barrier, Ethan's eyes drawn to the metal bolt that held it shut, which was now straining against its housing. The wood around it began to splinter, a screw falling to the floor, the sound as loud as a pin dropping in an empty auditorium. \n\n\"I...see...you...\" \n\nHe wanted to scream, but he couldn't even inflate his lungs, he felt like he was suffocating. \n\nThe lock finally broke, the door swinging open, a flood of red light spilling through the breach. Two ruby-red eyes peered back at him, like a pair of lasers, so blindingly bright that they completely obscured the features of the intruder. All he knew was that it was huge, its head skirting the ceiling, which must be seven feet high at least. His eyes couldn't adjust, and he couldn't look away. All that he could see were those red eyes in the darkness. \n\nIt took a couple of steps closer, its weight making the floorboards creak, the plant pot toppling from the dresser to shatter on the carpet. As the thing loomed over his bed, a pair of great, leathery wings unfurled. Their tips were far enough from the red glare that he could make them out. They were like those of a bat, wide enough to span the bedroom, coated in leathery skin that was a granite-grey in color. \n\nA hand reached down towards him, seeming to emerge from the crimson glare, its five fingers tipped with sharp claws. Ethan could only lie there in silent terror, helpless as it neared his face. It was pallid and grey, and as those long fingers closed around his throat, he felt its frigid touch against his skin. It was like a corpse or a statue, as cold as the grave. \n\nHis breathing stopped completely, those red eyes all that he could focus on. \n\n\"Seventy...seven...\" \n\n*** \n\nEthan lurched upright, taking in a desperate gasp of air, his eyes darting about the bedroom. There was no sign of the creature, the room was empty and dark, and he was once again drenched in cold sweat. Another night terror? What was this, sleep paralysis? \n\nHe threw off his sheets and stood up unsteadily, then made his way to the far wall, fumbling for the light switch. The bedroom door was still locked, the metal bolt just as he had left it, the potted plant still resting atop his bedside table. None of it had been real, and yet he knew now that his nightmares could become manifest, that they were more than simple dreams. \n\n\"Seventy-seven,\" he mumbled to himself. That could only mean the seventy-seventh floor, the highest point in the building. What was the significance of that? That floor had been closed off for decades if what Spencer had told him was to be believed. It was unsafe, poorly maintained, yet the seven topmost floors of the Abbott and Schutzman held many mysteries. The observation deck, the Sky Lounge, and who knew what else. The men who had built this place had been eccentric, and they were motivated by the paranoia of the prohibition era, hiding secret passages and compartments all over the place. \n\nIf the other apparitions that he had seen thus far were real, then did that mean that this bat-creature was too? Was it the force that was trapping the spirits here, preventing them from moving on? The man in the cap had a clear agenda, at least. He wanted Ethan to somehow help him and the other ghosts find a way to leave, but why would Ethan be visited by that...demonic entity? Those red eyes, that growling voice, he could scarcely think about it without shivering. Perhaps it was trying to intimidate him, and it had successfully done the same to Fairfax? If that was the case, then why give him a lead? Was it baiting him into a trap? \n\nThe idea of simply leaving all of this madness far behind him and moving to another state crossed his mind. This wasn't what he had signed up for, he had no obligation to these spirits, and he didn't appreciate being terrorized for the sake of delivering a message. But even if he took the first flight out of New York, could he go anywhere that the nightmares wouldn't follow? As the man in the cap had said, the entities were somehow drawn to him. Ethan couldn't shake the feeling that this was now as much his problem as it was theirs. \n\nRealizing that he had no idea what time it was, he retrieved his phone, seeing that it was only fifteen minutes before his alarm had been set to wake him. So much for tackling the day with a fresh outlook... \n\nCHAPTER 5: SLEUTHING \n\n\"Did you find what you were looking for in that locked room?\" Spencer asked as Ethan handed the heavy key ring back to him. The old man doddered into the office behind the main desk, returning the keys to their place on the wooden board, Ethan following after him. \n\n\"I satisfied my curiosity,\" he replied, a lie of omission. He wasn't sure if anyone would understand what he had been through in that suite, it was better to keep his mouth shut for the time being. It was quite a leap to go from seeing phantoms, to being recruited to fight a demon by a deceased Buster Keaton fan. \n\n\"I was wondering if there was a way that I could access the top seven floors of the building?\" he continued, Spencer turning to raise an eyebrow at him. \n\n\"Whatever for, Mister Lewis? Those areas are closed to the public for a good reason, they're no longer safe, they've been left to deteriorate for decades.\" \n\n\"That's exactly my concern,\" Ethan replied. \"When the owners hired me to manage the building, they weren't just talking about the first seventy floors. I have no intention of opening those levels up to the public or of leasing them out, but I believe that we have an obligation to ensure that the building is at least structurally sound. I'd like to go up there and survey those floors, just to get an idea of what kind of state they're in, and what kinds of repairs could potentially be made. I think that if we continue to ignore the problem, the entire spire might one day collapse in on itself. It's not outside the realm of possibility if there are structural beams up there that are being exposed to the elements.\" \n\n\"I'm afraid that I will have to forbid it,\" Spencer replied, \"the owners are very particular about keeping people out of those areas. If you wish, I will arrange for the top seven floors to be surveyed myself, in close coordination with the owners.\" \n\nThat struck Ethan as rather odd, and he cocked an eyebrow at the old man. \n\n\"But I'm the facility manager,\" he replied hesitantly, \"I wasn't given any instructions to keep out of the top floors. I can't be reasonably expected to perform my duties if I'm locked out of crucial areas of the building, can I? What if I took Mister Rodriguez up there with me?\" \n\n\"I can't allow it,\" Spencer replied with finality. \"I will speak to the owners on your behalf.\" \n\n\"Very well,\" Ethan replied, confused by his refusal. Spencer had always seemed like a reasonable man. Perhaps he knew more about what was going on up there than he was telling? \n\n*** \n\n\"The top seven floors?\" Rodriguez asked, affixing his tool belt about his waist. Ethan had caught him just before the start of his shift, and they were alone in a locker room on the ground floor, out of earshot of Spencer. \"What do you want to go up there for?\" \n\n\"I want to see what kind of state it's in,\" Ethan replied, \"I feel like leaving it closed off and unattended is an accident waiting to happen.\" \n\n\"I'd be inclined to agree, but we're not allowed to work above the seventieth floor,\" the engineer added as he buttoned up his overalls. \"My predecessor wrote it off as being too dangerous, and Mister Spencer has made sure that everyone knows it.\" \n\n\"But why?\" Ethan continued, \"what would supposedly happen up there to make it so dangerous?\" \n\n\"It's probably more for liability reasons than any real expectation of injuries happening. If management was to send an employee up there knowing that they couldn't absolutely guarantee their safety, and an accident happened, there would be lawsuits out the wazoo.\" \n\n\"How would someone even get up there?\" Ethan wondered, \"do any of the elevators go that high?\" \n\n\"Not the public elevators or the service elevator, no,\" Rodriguez replied. \"The top floors are where the Sky Lounge and the old speakeasy were built, it was intended to be a very private area only accessible to the original owners and their high-society friends. The only way to get up there is by using the executive elevator, which requires a key.\" \n\n\"Let me guess, Mister Spencer has it?\" \n\n\"Most likely. Better to do as he says,\" Rodriguez added as he straightened his collar and headed for the door. \"He may look like he's got one foot in the grave, but he's been working in this place longer than we've been alive. The only people who know it better than he does are the ones who built it.\" \n\n\"I'll keep that in mind,\" Ethan replied. \n\n*** \n\nNow the question Ethan had to ask himself was how he was going to get his hands on the key for the executive elevator without Spencer knowing about it. The old man meant well, but Ethan couldn't ignore the message that had been delivered to him by the demon in his nightmare, it was the only clue that he had to go on. Who knew what he would encounter up there, but he had to find out. \n\nBoth Spencer and West were on the day shift, and so it was a simple matter to wait until they left their posts. Ethan volunteering to work into the night would be seen as a sign of dedication, rather than the ruse that it was. \n\nA couple of hours after they were slated to leave the lobby, Ethan made his way down there, finding it empty and silent. The building was closed during the night, and so there was no danger of running into anybody. If he should meet one of the patrolling security guards, it would hardly matter, as the facility manager was generally allowed to go where he pleased. \n\nHe found the office unlocked, probably so that the guards on the night shift could access any keys that they needed, and he made his way inside. The wooden board was mounted on the wall to his left, laden with dozens of heavy key rings, Ethan's eyes darting about as he searched for the right ones. Fortunately, they were numbered by their respective floors, and it wasn't long before he located the ones that held the keys for the upper levels. They weren't as packed with keys as the others, there must be fewer rooms up there. \n\nThere was no sign of the key for the executive elevator, however. Cursing under his breath, he turned to the office, trying to think of where it might be hidden. There were two stacks of old-fashioned filing cabinets up against the far wall, and there were a couple of drawers in Spencer's desk. If the key was locked away in a drawer or a wall safe, then he was screwed. ",
        "He began to rifle through the filing cabinets first, finding the usual records and documents that one would expect to see in an administrator's office. As he moved along the row, however, he came across something decidedly more unusual. The files in this drawer were listed by name, with only the surname scribbled in pen, not at all what one would expect for staff records or something of the like. Most of that stuff would be handled by computer anyway, there was no reason to keep physical files on employees... \n\nEthan pulled one from the drawer, opening the folder. There was a form inside with an NYPD emblem on the top, it looked like a police report. It was old, the paper yellowed and cracked in places, the text written in looping cursive. His eyes began to widen as he read from the aged document. It was a police report from the nineteen-fifties, detailing a fight between two patrons over a card game, which had resulted in one of them being stabbed. The man had died on the scene before an ambulance could arrive. As he flipped through the pages, he almost dropped the folder in alarm. There were crime scene photos, black and white, depicting a man sprawled on a carpet. His vest was stained with what was presumably blood, his eyes open, glassy and vacant. \n\nHe set the folder down on the table and pulled out another. It was similar to the first, a surname written on it in pen, its contents detailing another wrongful death. This one described a suicide by gunshot, Ethan's heart beginning to beat faster with every turn of the page. It seemed to stop dead in his chest as he came across more photos, this one showing a portly man in his underwear who was slumped in a leather armchair, most of his head...missing. It perfectly fit the description of the apparition that the tearful janitor had described. \n\nAfter pulling out a few more folders, it became clear that this was a record of every murder and suicide that had taken place on the premises going back almost to when it was built. A storied history indeed, Spencer had downplayed how many deaths had occurred in the Abbott and Schutzman over the decades, there must be two dozen or more. It wasn't too unusual for a building like this one to see accidents and suicides, especially one so old, but this was excessive. More importantly, why were these records being kept? Who could possibly need access to this information? \n\nHe returned the folders to the filing cabinet, and moved over to the desk, searching through one of the drawers. After rummaging for a minute, he found a key, holding it up to the light. He couldn't be sure that it was the key to the elevator, there was no tag on it, but it was clearly very old. It was ornate too, made from gold, or at least plated with it. What else would the key to an executive elevator look like? \n\nWith the key in hand, he made his way back out of the office, heading for the elevator. There were three of them in a row towards the back wall of the lobby, the two public elevators, and the larger freight elevator. So, where was this executive elevator? With a little searching, he located it, situated on a wall to the left of the main shafts. It was more decorative than its counterparts, but it was out of view behind one of the luminous marble pillars, hard to spot if one wasn't looking for it. \n\nHoping that he had found the right key, Ethan pushed it into the lock and turned it. The creak of aged machinery greeted him as the two gold-plated doors slowly parted, their gears grinding, revealing an interior that was lined with crimson padding. Ritzy... \n\nHe stepped inside, praying that the damned thing even worked after so long and that he wouldn't end up pancaked on the basement floor. These old elevators required manual operation, so he moved the lever and pushed the appropriate button, the car lurching worryingly as it began to rise. \n\nIt was a tense ride to the seventy-first floor, but he eventually arrived, glad to be free of the gilded death trap as he emerged onto the first of the forbidden levels. Dilapidated was right. The carpet was covered in a layer of dust so thick that it almost looked like ash after a fire. The Art Deco wallpaper was peeling off the walls in strips, and the plaster on the ceiling had flaked off over the decades, raining to the floor below. There was damp everywhere, the danger of mold was real, and the ceiling was sagging in places. The musty smell was overpowering, Ethan wrinkling his nose as he began to walk, wishing that he'd had the foresight to bring a dust mask and maybe a hardhat. \n\nThis floor looked like it had served as some kind of high-class apartment complex, maybe for friends and colleagues of the owners. It wasn't too different from the hotel floors of the same era, albeit far more spacious, the suites here more akin to penthouses. As he peered into one of the suites, the door so swollen with damp that it could no longer close, he saw that there were windows up here. They were full-length, glass from floor to ceiling, not so grimy that he couldn't get a wonderful view of the city's sparkling lights. \n\nHe stepped inside, noting the crystal chandelier that was hanging from the flaking ceiling above, now draped in a thick covering of cobwebs. The leather furniture had mostly rotted away, exposing white puffs of stuffing, every surface coated in dust. What a shame, if these floors had been maintained, they could have been leased out to the city's wealthy denizens for inordinate sums of money. \n\nAs much as he wanted to explore these relics of the past, he shouldn't linger. He had to return the keys before morning, and being here was dangerous for reasons other than mold. The less time he spent on these levels, the better. \n\nHe pressed onward, mounting a spiral staircase that led up through the center of the building, its banisters decorated with lavish gold leaf. It creaked worryingly, but it seemed sturdy enough to hold his weight. He passed by more penthouses, eventually emerging into an open space that took up most of the floor. It was decorated much like the lobby, with an Art Deco flair, deep reds and browns accented by shining gold. There was more red marble, the structural pillars that were spaced out at intervals sporting those same inlays of amber onyx that had once softened the light strips that illuminated the room. They were dark now, there was no power being delivered to these levels. The ceiling was maybe eight or nine feet above his head, the maze of geometric patterns flaking away, the carpet beneath his feet impregnated with damp and mold. \n\nEthan began to wander, his head on a swivel. It was like exploring the abandoned stronghold of some Middle Eastern dictator, or a super-villain from a spy movie. It was so impossibly lavish, yet at the same time, in such an advanced state of decay. There were red leather armchairs all over the place, usually sitting around tables of dark mahogany, the varnish having long since lost its luster. The furniture was all exquisitely carved, the legs of the tables and chairs sporting intricate reliefs, their feet fashioned into the hooves and paws of various animals. Speaking of which, the walls were adorned with hunting trophies, dozens of glassy eyes staring back at him vacantly. There was a whole African Savannah's worth of exotic creatures here, from lions and tigers to ibex and buffalo. Much like the crystal chandeliers that dangled from the high ceiling, they too were draped in cobwebs, so thick that they almost looked like bridal veils. There were blank spaces where artwork had once hung from the walls, too, but those at the very least had been salvaged at some point. \n\nThe most striking part of the room was the row of windows that occupied the entire North face of the floor. They extended from carpet to ceiling, designed to look like one uninterrupted pane, now caked in several decades worth of dirt. Ethan walked up to them, peering through the grimy glass. No wonder they had called it the Sky Lounge. When these windows had been clean, it would have seemed like the occupants could reach out and touch the clouds... \n\nTo the right of him was a section of the floor that was conspicuously clear of furniture, the wall behind it devoid of any decorations. As Ethan walked over to examine it more closely, he noted that there was a clear break in the carpet, only visible because it had rotted away to reveal the wood beneath it over the years. It was crescent-shaped, and there were clear indents in the wall behind the peeling wallpaper. Could this be the secret speakeasy that Spencer had described? \n\nHe began to search for the lever, finding an almost comically out of place candelabra and giving it a tentative tug. A grinding sound filled the room, machinery that hadn't seen use in nearly a hundred years coming to life, making the floor vibrate. The crescent-shaped section of flooring slid back, revealing what must once have been a varnished countertop. There were bar stools arranged along its curve, their stainless steel supports still gleaming, while the red leather that had once padded their seats had been eaten away in places. \n\nThe whole assembly began to rise from the floor, Ethan watching in fascination as a bar materialized before his eyes, locking into place with a mechanical clunk. On the wall behind it, more wooden panels began to slide back, revealing shelves and compartments that had once held liquor bottles. They were empty now, no doubt cleared out after the fateful police raid that had resulted in the death of that unfortunate man. \n\nEthan was a facility manager before he was a ghost hunter, and his heart sank when he considered that few other people would ever get to see this place. If Spencer would let them clean up this area of the building and bring it up to code, it would put the Abbott and Schutzman on the map, the place would become a tourist hotspot. \n\nAs he turned to leave, he was stopped in his tracks by the prone figure of a man. He was wearing a tailored suit, the fine fabric stained with blood, one of his loafers lying on the carpet a short distance away. His body was twisted, broken, as though he had been thrown from a car wreck. Ethan couldn't see his face, the man's head was turned away from him, but it was easy to imagine how broken and bruised it must be. This must be the patron who had been beaten to death by the overzealous police all those years ago. \n\nAs much as the sight filled Ethan with dread, he knew what these ghosts were now, echoes of the past that were forced to relive their final moments over and over again. Fear of the unknown was one thing, but he understood this phenomenon, at least enough to know that he wasn't in any immediate danger. \n\nThe crumpled figure began to move, crawling towards the bar with shattered limbs, a baleful moan echoing in the empty room. \n\n\"Nope,\" Ethan muttered, walking briskly around the apparition and refusing to look at it. \"Fuck that.\" \n\nHe made his way back to the spiral staircase and ascended, leaving the harrowing sight behind him. \n\n*** \n\nThe next floor was the observation deck, all four of its walls made up of windows. The building was starting to narrow now as Ethan made his way deeper into the crown. There were a few comfortable chairs arranged by them, but the main event was happening outside. There was a walkway that ringed the building, open to the air, with nothing but an insubstantial railing to prevent curious tourists from plunging to their deaths. That might have been sufficient in the twenties, but this was one floor that Ethan could completely agree with closing off to the public. \n\nIt must have been breathtaking back in the day, but the windows hadn't been cleaned in an age, so he couldn't make out much. Knowing that he was probably asking for trouble, he walked over to the door that led out onto the balcony, finding that it was unlocked. He pushed it open and was immediately hit by a gust of frigid wind, the familiar scents of the city rising to his nose. This floor was nearing the thousand-foot height of the building, an altitude more suited to small planes and helicopters than people. He walked cautiously out onto the balcony, gripping the freezing railing in his hands as he peered out over the cityscape. It was the dead of night, but the moon was full, just peeking out from behind the dark clouds. The glittering lights of the city greeted him, the traffic on the roads far below seeming to make them glow, bleeding up to illuminate the buildings from beneath. \n\nThe railing at least seemed sturdy. There were old floodlights that were no longer operational, pointing back up at the facade of the Abbott and Schutzman, which must have lit it up beautifully back in the day. There were four stone brackets that projected out from the balcony, one on each corner, and sitting atop them were four massive gargoyles. \n\nThey were carved from the same stone as the rest of the building, their sculpted wings folded across their backs, their devilish tails trailing behind them. Each one had a slightly different pose, leering out over the city, crouched as though preparing to pounce. Ethan edged his way closer to one of them, admiring its craftsmanship. They must have weighed a ton, and they were exquisitely carved, far moreso than one would expect from such a piece. The original owners really had spared no expense. Gargoyles were often fairly crude and stylized, but these were intricately detailed, bulging muscles visible beneath their lifeless skin. He could even make out trailing veins in places, along with the indent of their ribs. Their proportions too were more human than most, almost like the sculptor had sought a middle ground between a gargoyle and a Romanesque statue, giving them a far more unnerving appearance that they might otherwise have had. The one that Ethan was inspecting had twisted, swept-back horns that jutted from an otherwise bald head, its lips pulled back in a snarl to expose rows of sharp teeth. A long tongue jutted from between them, its brow furrowed, its nose more like that of a lion or a bear than a person. The elements had not been kind to it, it was cracked in places, patches of green lichen clinging to its rocky skin. Another shameful display of neglect. \n\nWhatever he was looking for, he wasn't going to find it here, so he made his way back inside. \n\n*** \n\nThere was only one floor left, the interior of the spire, situated at the very top of the building. It was a place never intended to be visited, never meant to be seen by the public. Ethan had never actually set foot in one before, but he knew what to expect, a hollow tower that was crisscrossed with exposed structural beams. He reached a point where the spiral staircase ended, giving way to naked metal and brickwork, the walls further narrowing around him until there was only maybe twenty feet of clearance. \n\nThe only way to get any higher now was to mount a long ladder that led to a hatch in the ceiling above him, so he began to climb. The higher he went, the warmer it seemed to get. There wouldn't be A/C up here even if it had electricity, because it wasn't supposed to be inhabited. He arrived at the hatch, the floor here made from bare iron, and lifted it with his shoulder. The hinges creaked, then it fell open with a loud bang, Ethan pulling himself through an opening that was scarcely wider than the breadth of his shoulders. \n\nAs he struggled to his feet and brushed himself off, he looked up, seeing something that he could never have anticipated. He spun on the spot as he tried to take it all in, his footsteps echoing on the metal, his confusion gradually turning to realization. Above him was the mess of steel beams that he had expected to find, the spire towering two hundred feet into the air, motes of dust dancing in the shafts of moonlight that bled in through its windows. There was another ladder leading higher, fading into the shadows above. \n\nAll of the supports in sight were covered with rows of candles, great masses of them, their wax dripping down the naked I-beams. They came in all shapes, colors, and sizes, blending together as though they had been lit and re-lit hundreds of times. There must be a thousand of them at least, completely surrounding him. Those same beams were also engraved with symbols that had been etched into the metal seemingly by hand, strange runes, and elaborate seals. The most ubiquitous of them was a circular symbol surrounded by Latin letters, within which was contained a strange pictogram that made no sense to him. He wasn't sure what it was supposed to represent, perhaps a crude drawing of a bull. The letters too were nonsense, Ethan frowning as he tried to read them off. O-N-S-B-I-F-R. It was meaningless. \n\nThere were charms and trinkets hanging from the supports too, wooden amulets carved with the same strange symbols that dangled from lengths of string. They were joined by more lavish necklaces, encrusted with various jewels, the pendants glinting as they caught the light. \n\nWhen his eyes turned to the floor beneath his feet, he saw something that he recognized. Spanning the entire room was a massive pentagram, a five-pointed star, encircled with flowing script that looked like Hebrew to Ethan. It was incredibly intricate and detailed, drawn onto the rusted metal with white paint, the runes and geometric patterns intertwining and flowing into one another. \n\n\"What the hell is all this?\" he muttered to himself, beginning to walk around the circumference of the pentagram. Some kind of devil worship? He was already starting to accept the existence of ghosts, so it wasn't like much could surprise him at this point. There was a small table against the far wall, and he made his way over to it. It was stacked with old books that were bound in faded leather, strewn with strange trinkets, more pendants engraved with different runes. There were the remnants of incense burners, along with what looked suspiciously like a magic wand whittled from dark wood. He didn't dare touch anything, not wanting to leave any trace of his presence. \n\n\"Now what?\" he wondered aloud, as though the ghosts that were purported to be watching could hear him. \"I'm here, what the hell am I expected to do?\" \n\nWhy couldn't the man in the cap just say precisely what he wanted from Ethan? He didn't know anything about the occult, or whatever all this shit was. This didn't tell him how he could stop what was happening. Maybe he should trash the place, pull down all of the charms, cover up the pentagram on the floor? But if that didn't work, then whoever was responsible would know that someone had been here. Should he call the police and tell them that there was a wizard keeping ghosts captive in the roof? \n\n\"Tell me what I'm supposed to do,\" he said, a little louder this time. He waited with bated breath, his voice echoing through the spire, but no specters materialized to answer him. \n\nA clap of thunder almost made him jump out of his skin, reverberating inside the spire. A storm had rolled in while he had been exploring, the rain beginning to pound against the exterior of the building. He peered through one of the narrow, triangular windows, the night sky now obscured by rolling clouds in shades of ominous grey. Fuck it, it was time to leave. \n\nFrustrated that his expedition into the upper floors had not resulted in a solution to his problem, he returned to the hatch and began to climb back down the ladder. As he neared the top of the spiral staircase that led back down into the building, he heard a loud thud, not thunder this time. His heart seemed to stop dead in his chest, Ethan holding his breath as he listened intently. Had someone followed him up here? Could it be that the person who was responsible for the strange shrine in the spire had come to continue their occult work? When else would they do it if not in the dead of night? "
    ],
    "authorname": "Snekguy",
    "tags": [
        "gargoyle",
        "ghosts",
        "large breasts",
        "long tongue",
        "muscle",
        "oral",
        "size difference",
        "vaginal"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/silent-vigil"
}