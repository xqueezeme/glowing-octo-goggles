{
    "title": "Surefoot 06: Grey Matters",
    "pages": [
        "\"USS Surefoot, Captain's Personal Log, Stardate 36299.93, Captain Esek Hrelle, Commanding: Our ship has stopped just outside the Malbruk System, where a Federation archaeological operation was established on the second planet. Our cadets believe we are here to run diagnostic tests on the Sensor Buoys on the system's outer perimeter.\n\nIn fact, we will also be engaging in a mandatory Grey Alert test. I'm sure that when the cadets hear about it they'll treat it as some Great Adventure. For those of us who have undergone many Grey Alert scenarios before and prefer our creature comforts... not so much.\n\nWe are also taking the opportunity to collect our latest cadet, a Caitian male, who is replacing Giles Arrington as Alpha Squad's pilot, now that Giles has been promoted to Beta Squad Leader. Hrelle out.\"\n\nSitting across from him, cleaning her claws, Kami looked up and smirked. \"Seven Hells, that's what you call a 'Personal Log'? Are they all that boring?\"\n\n\"No, some get exceptionally filthy. Especially when detailing the fantasies I have of you.\"\n\n\"Oh, I wish that were true,\" she smiled. \"I'd loved to think of historians in the distant future imagining what I was like in real life to warrant such dirty thoughts.\"\n\n\"Do you really think historians in the distant future are going to care about the personal musings of a man in charge of ferrying supplies and training cadets?\"\n\n\"And rescuing Malurian children from slavery?\" she reminded him.\n\nHrelle stopped grousing, unable to do anything but silently concede that point. It had been almost two weeks since the incident with the freighter and the slave trafficking operation they had stumbled upon and stopped, but it was still fresh in his mind. Not just the children they had rescued, but the Nausicaans he had killed with his bare hands, to protect his stepdaughter and the rest of Alpha Squad. Kami had been helping him face what he had seen and done.\n\nNow he looked over at the drawing that had been transmitted to him from Starbase 154, where the children had been transferred for their eventual reunion with their families: a colourful depiction of himself and Kami as the popular children's characters Fat Cat and Lil' Kitten, done by one of the children he had helped rescue. It reminded him of the drawings Sasha used to do of him, a lifetime ago-\n\nThen he looked away, reaching up and swiping back the fur behind his left ear again. Too many memories he wasn't prepared to deal with. Too much introspection.\n\nHe snapped out of it as Kami rose from her chair and leaned over his desk, her fur-tipped tail rising behind her, swaying as if from an errant breeze, her honey eyes fixed on him as she rested her muzzle on her fist and regarded him. \"I just saw a whole wave of something flash before your eyes, Captain. What was it?\"\n\n\"Nothing.\"\n\n\"Come on, talk.\" She smiled again. \"If you do, I'll show you my boobs.\"\n\n\"I've seen your boobs.\"\n\n\"And aren't they worth looking at again?\"\n\nHrelle leaned back in his chair, turning it to keep his left side away from her as he nodded at the picture. \"I remember when Sasha used to do pictures like these for me, and I'd frame them and put them on the bridge of the Furyk. It wasn't that long ago - was it? Now she's all grown up, out here doing her mother and me proud. What in the Seven Hells happened?\"\n\nShe smiled. \"I know. It felt like yesterday when I was chasing my cub around to put him in the bath. Now I've heard from him: he's getting married later this year.\"\n\n\"Congratulations!\" he beamed. \"When is it? Is it corresponding with the Academy break? If not, I'll make arrangements for a substitute Counselor-\"\n\n\"Never mind that now, we're talking about you.\"\n\n\"There's nothing to talk about. I was merely contemplating the passage of time.\"\n\n\"Oh? And what about that grey fur behind your left ear?\"\n\nHe started, glaring at her. \"I was trying to keep you from noticing that.\"\n\nShe smiled. \"I've noticed it for days now. Is that what's bothering you? Signs of age finally appearing?\"\n\nHrelle didn't answer - because she was right. Since that fight on the freighter, which had left him more winded and aching than any previous fight had done, he had felt a creeping realisation suffusing him that he was not the young man he once was.\n\nHe had been a physical wreck when he had escaped slavery, but medical science had dealt with most of the issues that had arisen all those years. But now it was like time was conspiring to compensate for what science had given him back. He began seeing all the other signs: the skin creases under the fur indicative of wrinkles, the aches in his muscles, the decrease in the sharpness of his hearing and other senses. And, of course, the greying fur.\n\nThe chirp from his combadge pulled him from his thoughts, and he responded gratefully. \"Hrelle here.\"\n\n\"Commander T'Varik, Sir. The shuttle with the new cadet has arrived, and as our shuttlebay is full, it is currently docking at Airlock 1.\"\n\n\"On our way.\" He tapped the combadge again, not trying too hard to look disappointed. \"Oh dear, duty calls. We'll have to reschedule this another time. I am so sorry, Counselor.\"\n\nShe sneered. \"Like you weren't waiting for that.\" She straightened up, her expression growing more sober. \"Don't think this is finished, Mister Grey.\"\n\n\"Of course it isn't - you still owe me a look at your boobs.\"\n\n*\n\nShuttlebay Airlock 1:\n\nSquad Leader Sasha Hrelle tugged at the sleeves and hem of her uniform, feeling nervous and not knowing why. Maybe it was the official nature of this occasion; she had arrived with the other cadets to the Surefoot, none of them knowing who would be made Squad Leader until they were actually onboard, allowing them to socialise and get to know each other better first and break the ice. This was the first time she was going to meet another cadet from the outside, and in her formal capacity.\n\nOr maybe it was just the First Officer watching her curiously. \"Are you the victim of what humans call a 'practical joke'?\"\n\n\"Practical joke? What do you mean?\"\n\n\"I once disciplined an upperclassman at the Academy who had a penchant for reprogramming synthesisers to produce freshmen uniforms that were too small, lined with irritants - or would fall apart during parades.\" But there was something in T'Varik's expression that told Sasha it was just her dry attempt at humour.\n\nSasha stopped fidgeting. \"Sorry, Commander. I just want to make a good impression on the New Kid. I'm going in blind here, metaphorically speaking, since you've chosen not to reveal anything about our new Flight Conn Specialist for some illogical reason.\"\n\nThe Vulcan raised an eyebrow. \"Ms Hrelle, I can assure you that there is nothing that I do that does not have at least some logical rationalisation behind it. And I chose to keep the details about Cadet Rrori from you to prevent any preconceptions being formed about him. I would remind you about the preconceptions you and Mr Arrington held about each other, before your relationship... evolved?\"\n\nSasha blushed, finding something else to look at besides her superior officer. It was an open secret onboard that her relationship with Giles had become physical, helped by the fact that with his promotion, he was no longer under her command and thus risking accusations of favouritism. But while their subsequent... meetings... were infrequent, the same could not be said for the rumours and jokes now circulating. Fortunately, T'Varik's Vulcan decorum minimised the ridicule-\n\n\"Morning, Runt of the Litter!\" Hrelle declared as he strode up to them, frowning at Sasha's resumed fidgeting. \"What's wrong? Giles give you crabs?\"\n\nShe gasped, feeling herself turn seven shades of red. \"Fuck off, Dad!\"\n\nHe laughed at her response, ignoring Kami scowl as he looked at T'Varik. \"That's very unprofessional talk from the Squad Leader, is it not, Commander?\"\n\n\"Indeed it is, Captain. I will, however, allow it, given the unrelenting provocation from someone who should be the more mature of the two.\"\n\n\"Thank you, Ma'am.\" Still blushing, Sasha added, \"I believe you were about to tell me about my latest Squad member?\"\n\n\"Of course. Cadet Rrori is a Caitian male from a region called the M'Restir Province-\"\n\n\"Oooh,\" Kami purred, while Hrelle just cursed.\n\nSasha looked to them. \"Something I should know?\"\n\n\"Ooh, we're about to be blessed with the presence of someone from M'Restir,\" Kami teased. \"Where only the oldest, wealthiest clans reside. Bet he has solid gold tail bands and bracelets, and plays the frettercast.\"\n\n\"The what?\"\n\n\"A pretentious acoustic instrument pretty rich boys like to learn to play to impress others,\" Hrelle grumbled. \"M'Restir Province. Big fat furry deal.\"\n\nT'Varik continued regardless. \"Cadet Rrori possesses high scores in Flight Control, Astrogation and Subspace Geometry, with an equally impressive secondary speciality in Engineering. It was only because he was incapacitated with Rigellian Kassaba Fever that he hadn't participated in the Program sooner. He is highly talented.\"\n\n\"Oh, is he?\" Hrelle sneered. \"But can he do this?\" He then proceeded to rapidly drum on his belly.\n\nThe women stared at him, T'Varik responding with, \"It is not indicated in his records.\"\n\n\"I bet he can, though,\" Kami mocked him. \"And being so young and virile, I bet he could keep it going for hours and hours without stopping-\"\n\n\"Kiss my furry ass.\"\n\n\"Any time, you sexy jealous bastard.\"\n\nSasha looked to T'Varik. \"May I be excused, please? I'm feeling nauseated.\"\n\n\"Unfortunately, Cadet, I require someone with me to compensate for their behaviour.\"\n\nSuddenly the airlock alert lights flashed, and seconds later, the door slid open, revealing a young, tall Caitian male with fur of shimmering gold-white speckled with black, chocolate-brown eyes, short pointed ears, and a short, slim tail tipped with a healthy patch of fur - along with a couple of the aforementioned gold tail bands. His muscular, wide-shouldered frame hugged his uniform, and he quickly set down his two bags and stood to attention, his voice young and strong as he faced Hrelle. \"Cadet Rrori reporting, Sir. Permission to come aboard?\"\n\nSasha stared, the breath caught in her throat. Oh my...\n\n\"Permission granted, Mr Rrori,\" Hrelle nodded, his earlier grousing set aside, offering his hand and indicating each of the women in turn. \"Allow me to introduce our First Officer, Commander T'Varik, our Ship's Counselor, Kami Shall, and your Squad Leader, Sasha Hrelle.\"\n\nRrori nodded politely to T'Varik and Kami in turn, before turning to Sasha, looking between the Captain and her. \"Hrelle? Excuse me, but are you two... related?\"\n\n\"Can't you tell, Cadet?\" Hrelle joked. \"She's got my child-bearing hips.\"\n\nSasha bit back her initial retort, her heart racing inexplicably at the sight of this... incredibly attractive-looking specimen of Caitianhood. She held out her own hand, her words a little too fast and loud and wrong as they left her mouth. \"Actually, I'm his stepfather. Welcome aboard, Cadet! A pleasure to have you!\"\n\n\"Cadet,\" T'Varik proceeded, more calmly, \"Ms Hrelle will escort you to your mutual quarters where you can store your possessions and meet the other members of your Squad, before providing a tour of the ship. You are scheduled for a formal briefing with myself at 1200 Hours, and then an initial Counseling session at 1400. Your first duty shift as part of Alpha Squad commences at 1600.\"\n\n\"Understood, Commander.\" Rrori looked back at Sasha, and then down at their hands - Sasha was still shaking his, until she finally let go. Then he focused on Hrelle. \"Sir, may I say what a pleasure it will be to serve under you? I have read so much about your career; you have been an inspiration for our people.\"\n\nHrelle beamed, feeling himself blush under his fur. \"Why, thank you, Mr Rrori. I hope meeting me in the flesh hasn't been too disappointing.\"\n\nThe newcomer smiled back. \"No, Sir. I mean, you *do* look much older than I had imagined, but that's to be expected, I suppose.\"\n\nHrelle's smile remained fixed. \"Yes, I suppose, Cadet. Dismissed.\"\n\nOblivious, Rrori retrieved his possessions as an eager-looking Sasha motioned for him to follow her. The three officers waited several seconds, before Hrelle muttered, \"Commander, recall the shuttle and send him home. I don't think he'll work out here.\" He looked to a snickering Kami. \"And you can shut up, too.\"\n\n\"I do not believe he meant to be insulting,\" T'Varik noted mildly. \"It would seem a waste of time and resources to return him to the Academy at this point.\"\n\nKami chuckled. \"Besides, I think Sasha might object. Did you catch her scent change when she shook his hand?\"\n\n\"That's enough,\" Hrelle growled.\n\n\"Vulcans are not as discerning about subtle scent changes as Caitians,\" T'Varik admitted. \"Although she did appear unusually flustered. Do you believe she found him sexually attractive?\"\n\n\"Oh, most definitely, helped with her libido being awakened by the rampant carnal fun she's regularly having now with Giles-\"\n\n\"I'm sure there's room on that shuttle for the two of you as well,\" Hrelle warned.\n\n\"Then I shall change the subject slightly,\" T'Varik promised, \"I am aware of your people's custom of shortening your lengthy clan titles into manageable surnames, but I am unaware of any similar customs regarding withholding your forenames.\"\n\nHe frowned. \"There are none, T'Varik. Why?\"\n\n\"Mr Rrori broke with Starfleet protocol by not providing his full name when first addressing you. It seems an unusual affectation, and I did not wish to address it with him if there were cultural restrictions.\"\n\n\"What is his forename, anyway?\" Kami asked.\n\nT'Varik responded.\n\nThe Caitians looked at each other. And smiled.\n\n\"Is there a significance to it?\" the Vulcan enquired.\n\n\"Not to Caitians,\" Hrelle admitted, looking a little more satisfied now, \"But we can see why he wouldn't volunteer it.\"\n\n*\n\nDeck 2, Alpha Squad Quarters:\n\nJonas and Kitirik stared down at the Durotta game board sitting between them, wearing identical pained, pensive expressions. Until Jonas looked up and noticed, muttering, \"Why are you looking like that? You're not the one who's losing.\"\n\nKit looked back, his round reptilian eyes a bright red contrast to his mottled olive-green skin. He muttered back, \"Forgive me, Friend Jonas. I assumed the facial expression was a requirement of the game, given how often you've worn it.\"\n\nOn the floor of the common area nearby, Neraxis was chuckling, in between struggling to lift her big blue bare foot high enough to trim her toenails. \"If you need a good strategy, Scrappy, try the Jonas Ostrow Gambit.\"\n\nJonas knew he shouldn't take the bait. He did anyway. \"And what's that?\"\n\nThe Bolian lifted up her bald, bisected head and grinned. \"You stop trying to get good enough to beat me, and go straight to taking the forfeits and doing my squad chores.\" She ran the laser trimmer over the nail of her big toe, burning away the excess. \"Our bathroom isn't gonna clean itself.\"\n\nReclining in an adjacent chair, Eydiir never took her eyes away from her PADD, trying and failing to stay focused on the latest issue of the Starfleet Medical Journal. \"It is honourable that Jonas is seeking to better himself in order to challenge you. You are becoming arrogant. Perhaps I should assist him in his quest?\"\n\nNeraxis made an amused sound. \"You looking to spank me, girl?\"\n\nThe dark-skinned Capellan woman turned and narrowed her gaze at her friend. \"If I thought you wouldn't enjoy it, then, yes.\"\n\nThe door slid open, Sasha and Rrori entering, Sasha waiting until the others rose before saying, \"Guys, I'd like to introduce you to our new Flight Conn Specialist, Rrori. Rrori, this is Jonas Ostrow, Engineering Specialist, Kitirik, Science Specialist, Eydiir Daughter-of-Kaas, Medical Specialist, and Neraxis Nemm, Security Specialist.\"\n\nThe Caitian nodded formerly to each of them in turn as they greeted him. \"Thank you for your welcome. Illness prevented me from being here with you from the start; it is a pleasure to finally arrive and help improve things.\"\n\n\"Oh?\" Neraxis responded mildly, folding her arms across her chest. \"I didn't know we needed improvement.\"\n\n\"Yes,\" he countered without hesitation or irony. \"Starfleet Academy has been kept continually appraised of the results of the squads in the Advanced Work Experience Program. Surefoot's Alpha Squad has impressive scores, but clearly you can do better.\" He smiled. \"Now that I'm here, you will. I have compiled many suggestions towards that end.\"\n\nNeraxis looked to Eydiir. \"Wow! However did we survive without him around?\"\n\nRrori noticed the Durotta board on the table, looking to Jonas. \"You play?\"\n\nJonas nodded glumly. \"Not very well, I'm afraid. You?\"\n\nThe Caitian made a sound of confirmation, before reaching out, moving a cylindrical piece forward and knocking over another of a different colour. \"I was Grandmaster on the Academy's Team. Pity, I was hoping to find some challenging opponents onboard.\"\n\nJonas frowned, looking at the others before suggesting, \"Maybe you should go up against Neraxis? She's our best player.\"\n\nRrori looked over at the Bolian, appearing pleased. \"Excellent news! I love playing against Bolians, they're brilliant at Durotta. Back on Cait when I was twelve I was fortunate enough to have engaged in a match with Traxx Arag.\"\n\nNeraxis turned a lighter shade of blue. \"You've played against Traxx Arag? The Traxx Arag?\"\n\nHe nodded, shrugging. \"To be fair, he hadn't been Federation Champion for that long, and I was only twelve. It took almost ninety-six moves to beat him. I felt like such an idiot.\"\n\n\"Friend Cadet Rrori, I-\" Kitirik began, before stopping and asking, \"Forgive my ignorance, but do you have a forename I may employ? I do not recall Friend Sasha telling us.\"\n\nHis brow furrowed. \"It is not easily pronounceable by off-worlders. I will answer simply as 'Rrori'.\"\n\n\"Of course. Friend Rrori, I am currently working on a paper on subspace geometry, and would appreciate any input you might provide.\"\n\nThe Caitian smiled. \"Then you've come to the right male. I am exceedingly gifted in that area of expertise.\"\n\nSasha frowned, looking at Eydiir. \"Do you have your medical tricorder with you?\"\n\nThe Capellan nodded. \"Why?\"\n\n\"Get it and follow me, I need you to check on something. Rrori? Jonas, Kit and Neraxis can show you which is your bed and where to stow your possessions. We have a chores rota, so ignore any attempts by Neraxis to trick you into doing hers.\" She ignored Neraxis' middle finger as she motioned for Eydiir to follow her into the bathroom and closed the door, calming down some.\n\n\"What is it?\" Eydiir finally asked.\n\nSasha breathed in. \"Scan me. See if there's anything wrong.\"\n\nHer friend frowned, but flipped open the tricorder and passed it over Sasha, her eyes examining the readout panel. \"Your temperature, pulse and blood pressure are all slightly elevated. There's also increased neural activity. I take it you didn't run all the way here?\"\n\n\"No. Is there any sign of infection or poisoning?\"\n\n\"No viral or bacterial infections detected, no traces of alcohol or narcotics. Are you sexually aroused?\"\n\nSasha flushed. \"I'm not answering that.\"\n\n\"Of course not.\" She snapped the tricorder lid shut. \"You appear to be acutely attracted to our Caitian braggart.\"\n\n\"I can't be. I can't be attracted to some insufferable jerk!\"\n\n\"To be fair, it wouldn't be the first time.\"\n\n\"He's not even human!\" Quickly she elaborated, \"Not that that makes a difference, of course! I've just never been attracted to Caitian males before!\"\n\n\"Have you ever met any before? Except for your father, who has been a major influence in your life?\"\n\nSasha eyed her now. \"You're not saying I have some sort of Oedipus Complex going on here, are you?\"",
        "\"I think you mean an Elektra Complex. And, no, I'm not. But one's past does influence one's present, for good or ill.\"\n\nSasha rubbed her eyes.\"What the hell am I gonna do?\"\n\nEydiir sighed. \"Take a quick, cold shower now. Then I will accompany you on the tour as chaperone, and prevent you from making a fool of yourself. At least, not a bigger one than usual.\"\n\n\"Thanks. We'll make it quick, he has a briefing with T'Varik at 1100, and I have one with Giles at the same time.\"\n\nHer friend smiled. \"Isn't yours more like a de-briefing?\"\n\nSasha glared. \"I'll have you know that when Giles and I are together, it's not always about sex.\"\n\nDeck 4, Holodeck, 1115 Hours:\n\nSasha rolled off of Giles and lay back on the blankets, staring up at a night sky filled with stars in unfamiliar patterns, as desert insects made sizzling sounds and the warm air caressed her naked skin. Wanting to ignore the guilt gnawing at her, she asked, \"Where are we?\"\n\nBeside her, Giles stared up, allowing the grin on his face to spread wide. \"Cestus III.\"\n\n\"Never heard of it.\"\n\n\"It was a Federation outpost attacked by the Gorn on Stardate 3045. All the personnel were killed.\"\n\n\"Oh, you're a romantic, aren't you?\"\n\nHe chuckled. \"Hey, at least I deleted the Gorn and the outpost personnel so we wouldn't be interrupted! Have you seen how limited our holodeck library is? It's mostly bridge and tactical simulations. And the last time we engaged that beach party simulation, you ended up with sand in your-\"\n\n\"Never mind.\" The guilt was building up inside her. The longer she had spent time with Rrori as they toured the ship, the more... distracted she got. Even with Eydiir acting as chaperone, and with the Caitian offering more reasons to be annoyed with him - his casual references to his family's influence and the people he knew, all his achievements at the Academy - she was still flustered by the time she dropped him off outside of T'Varik's office and raced down to meet up with Giles in the holodeck.\n\nShe had been halfway through having sex with Giles before realising that Rrori had... fluffed her. She'd hardly given Giles a chance to get his clothes off, or to question his choice of holodeck environment. Not that he complained much... \"I love you.\"\n\nHe chuckled again. \"All you girls are alike, always throwing around words of love after you get what you want-\"\n\n\"No.\" She rolled back and half-lay on him, her breasts pressed against his chest, looking into his eyes, wanting him to know how sincere she was. She drew the honey-blonde hair away from her face. \"I mean it.\"\n\nGiles looked bemused at first, before smiling and replying, \"I love you too.\" After they kissed, he asked, \"Hey, what's the new guy like-\"\n\n\"No replacement for you, I promise.\" Then she was back on top of him, relishing the feel of his body against hers...\n\n*\n\nDeck 2, Gymnasium, 1345 Hours:\n\nHrelle shifted on the padded bench and flexed his fingers, before gripping the barbell once more, glancing at the readouts on the side, ensuring the gravitic clamps didn't provide too much simulated weight. Satisfied, he returned to his set, grunting as he resumed, before picking up the pace, aware that the gym was busy this time of day and he didn't want to waste time. His muscles were aching.\n\nAs was his belly, after a pathetic number of sit-ups. He hated them, wishing Dr Ling would just give him a course of fat-eating nanobots. But of course, that went against Starfleet policy, which insisted that their people earned their good health the hard way. And besides, Dr Ling was a sadistic bi-\n\n\"Captain!\"\n\nHe looked up to an upside-down image of Rrori staring down at him. \"Cadet, good to see you again. What brings you here?\"\n\n\"I've just finished my briefing with Commander T'Varik, I've had some lunch, and now I'm waiting to see the Counselor.\"\n\n\"And how was your tour of the Surefoot with Sasha?\"\n\n\"Yes, Sir. Quite impressive - for her age.\"\n\n\"I assume you're talking about the ship and not my daughter.\"\n\nThe cub laughed politely. \"Yes, Sir. I'm curious, though: why do you call Sasha your daughter and not your stepdaughter? Wouldn't that be more accurate?\"\n\n\"More accurate, maybe, but I couldn't love her any more if she was my flesh and blood-\" He stopped and looked up at him. \"What do you mean, 'for her age'? What's wrong with my ship?\"\n\nRrori smiled again. \"Really, Sir? You still use duotronic circuits in some of your systems! And then there's the scarring on the hull-\"\n\nHrelle grunted. \"There's nothing wrong with having a little wear and tear. It demonstrates character.\"\n\nRrori smirked. \"A bit like yourself, Sir?\"\n\n\"Excuse me?\"\n\nRrori nodded down at him. \"Yourself, Sir. Your lack of tail and claws, the scars on your face-\"\n\nHrelle's head was pounding, from more than his exertions. \"There's a reason I look like this, Cadet.\"\n\n\"Of course, Sir, of course. I was just wondering what the Counselor thought of them. Your scents are mingled, so you're obviously bonded. I was just wondering if all those flaws of yours were... off-putting to her-\"\n\nHrelle stopped and set the barbell back on its support, before helping himself up off the bench to his feet, relishing in his slight advantages of several centimetres of height over Rrori. \"None of that is your damn business either, Cadet! Is that clear?\"\n\nRrori stood his ground. \"Of course, Sir. You look tired. Maybe you need a nap before you start your shift?\"\n\nHrelle's hackles had raised, and his whole body tensed. \"And maybe you need to spend your first day in the brig? Because that can be arranged, Mister!\"\n\nHe stopped as he became aware of the others in the gym, looking in their direction. He stormed out, returning to his quarters to try and centre himself. What was wrong with him? Letting himself get angry like that?\n\n*\n\nDeck 2, Counselor's Office, 1400 Hours:\n\nKami sat in a chair facing the new arrival, smiling as she crossed her legs and folded her hands on her lips, letting her tail slip down through the hole in the back of her chair to swish along the floor. \"As this will be your first deep-space mission, with a smaller number of cadets than at the Academy, we will have more frequent one-to-one sessions than you might be accustomed to.\"\n\nRrori sat facing her, his posture... different. As was his expression. \"I look forward to it, Counselor. I wouldn't mind doing anything... one-to-one with you.\"\n\nShe felt the hairs rise on the back of her neck, wondering if she was misinterpreting the signals she was getting from him. Determined to press on and keep things cordial, she continued. \"There will also be group sessions involving your Squad, getting the chance to air any grievances you might have about each other, and all within a non-judgemental environment-\"\n\nShe stopped as she felt the tip of his tail stroke along her shin, and felt him purring, a deliberate reach to her on... intimate levels. \"Rrori, that's not appropriate. Please stop it.\"\n\nHe stopped. \"Counselor? What's wrong?\"\n\n\"You're in Starfleet. You know how to behave.\"\n\n\"Of course, Counselor, no offence was intended. I was merely expressing my appreciation for an attractive female. And I thought someone like you might be interested-\"\n\n\"If you were as discerning of my scent as you are appreciative, you might have picked up that I'm unavailable.\"\n\n\"Yes,\" he leered now, \"A pity, really; I am a most accomplished lover. I've had praise from many partners. A woman of your age would enjoy my attentions immensely.\"\n\nShe tried to keep a straight face; he was old enough to have had sex, either back home or on Earth at the Academy, despite the restrictions. But such brash boasts were usually only heard from much younger cubs who hadn't yet learned from their female clan members how to properly behave. \"Well, that sounds absolutely adorable, Cadet. But I'm quite satisfied with what I have.\"\n\nHe made an amused sound. \"What, with the Captain? Because I have to say, meeting him in the flesh has been quite a disappointment.\"\n\nKami's claws drew out of her fingertips, though the cub didn't seem to notice it, or the change in the tone of her voice as she leaned forward. \"Mr Rrori, you need to stop this behaviour, now.\"\n\nHe leaned forward too, his tail returning to her leg. \"Tell me, Kami, can he even get it in you with that huge belly of his in the way-\"\n\nHe never saw the hand as it rose and swiped him across the snout, sending him and his chair to the floor.\n\nKami rose and stood over him, her voice still calm, the claws at her fingertips still extended, but her tail displaying the agitation she otherwise kept from her voice as she spoke with bared teeth. \"You made unwanted advances to a female. She told you No, but you persisted. You were rude and disrespectful. And you repeatedly touched her without her permission.\n\nI'll contact Cait and make an official complaint to your clan's Matriarch. Then when she recalls you home, you can explain your disrespectful behaviour to her, your mother, your aunts and your sisters.\"\n\nHe looked up at her his hand over his muzzle where she had scratched him, his eyes widened with fear. \"N-No! Kami, I-\"\n\n\"Did I give you permission to use my first name?\" she snapped.\n\n\"I-I mean Counselor! Please! I- I... apologise. It won't happen again.\"\n\n\"Good. And if there are any working grey cells in that pretty little head of yours, you won't insult me, and you especially won't insult Captain Hrelle, again.\" She bent down and helped him and the chair back up. \"Now, shall we stick to Starfleet protocol and move on?\"\n\nHe nodded shakily, his breath quickened, his tail still. \"Y-Yes, Counselor. Thank you.\"\n\n\"Sit down.\" She went to her desk and retrieved an autosuture, returning and standing beside him, bringing the medical tool to life and drawing it along the scratches. \"Now, where was I? Oh, yes. Our programmers have managed to improve the Caitian dishes in the replicators, to the point where they can produce a decent Ch'urash Stew, but you might want to add some Terran sauce called Tabasco, to give it a proper kick...\"\n\n*\n\nDeck 1, Briefing Room, 1550 Hours:\n\nSasha and the other Squad Leaders were in attendance, as were the senior officers, everyone at ease while Hrelle sat and T'Varik stood at the other side of the room, flanking a display screen detailing a star system with numerous points just inside its outer circumference.\n\nHrelle spoke first. \"You were all initially briefed that we were here in the Malbruk system to inspect the Sensor Buoy network set up in the system's Oort Belt. This is not entirely the case; in addition to this, we will also be running a mandatory Grey Alert test.\"\n\nSome of the more experienced officers made grumbling sounds, though the cadets looked more bemused by such a response.\n\nHrelle looked to T'Varik. \"If you would continue, Commander?\"\n\nThe Vulcan nodded. \"For the following 72 standard hours, the Surefoot will be running in Grey Alert. For those less familiar, this is an alert status allowing for maximum power conservation and minimum power output while still maintaining an operating status, such as might be required during a critical fuel shortage, or when the tactical situation requires a reduction in discretionary energy usage.\n\nAt this time, the warp core will be brought to a cold shutdown, and we will rely on impulse engines running at under ten percent power. Weapons will be off-line, and only passive sensors will be employed. Deflectors, Inertial Dampening and Structural Integrity systems will operate at minimum output, as will Life Support and Environmental Support, which will be shut down in non-essential areas.\n\nUse of shuttlecraft, transporters, holodecks and turbolifts are suspended. Rations will be available in place of replicated food, and emergency blankets and cold-weather suits and portable heaters will be supplied to all quarters, as the internal temperature will drop significantly during the course of the mission.\"\n\nShe indicated the ring of dots circling the disc-shaped system on the screen. \"The Malbruk system's Oort cloud contains debris, dust and ice particles left over from the formation of the system, and has caused navigational hazards and subspace communications interference, thus necessitating the deployment of these automated Sensor Buoys. The Surefoot will approach and scan the Buoys. But we in turn will also be scanned; in order to meet Grey Alert standards and pass muster, our energy signature must remain below a required level. Should we fail-\"\n\n\"Then... we will all be put to death,\" Hrelle intoned with mock gravity.\n\nSome of their audience laughed at that, until T'Varik clarified soberly, \"Should we fail, Captain Hrelle will receive a permanent note on his record. Should you not wish this to occur, your full and active participation is required. I realise that this will not be a comfortable period for any of us - but I do not believe comfort was ever guaranteed to you as part of a life in Starfleet. Dismissed.\"\n\nAs the Squad Leaders and senior officers departed, T'Varik turned to Hrelle. \"Captain, I have accepted by this point in our relationship that you are facetious by nature. But perhaps you could endeavour to restrain your more inappropriate jokes on certain occasions? I was not lying about the consequences of failing the Grey Alert status check.\"\n\nHe rested his hands on his belly, smiling. \"Well, at this stage in my career, what's a permanent note or two on my record?\"\n\n\"May I speak freely, Sir?\"\n\n\"Always.\"\n\nShe hesitated; for a moment, Hrelle imagined she was reluctant to speak despite having his leave. \"The cadets look up to you. They emulate your attitudes, both positive and negative. A permanent note on one's record is perhaps a minor inconvenience... for someone closer to the end of his career than the beginning. But for these cadets, their lives in Starfleet are only just starting. They need to appreciate how serious such a note could affect their future career opportunities.\"\n\nHis smile dropped. As did his good humour. \"Point taken.\"\n\n\"I apologise for my bluntness, Sir.\"\n\n\"Never apologise for that. As the Counselor will confirm, sometimes I need a smack across the snout.\"\n\n\"Yes... though I suspect hers are more literal than metaphorical.\"\n\nHe grunted. \"You got that right.\" He sighed. \"I'm not looking forward to this. I hate the cold.\"\n\nShe breathed out. \"For what it is worth, I am not sanguine about the imminent experience, either.\"\n\nHe nodded in understanding. \"You should know before the rumours begin that Kami and I plan on sleeping together for the duration of the Grey Alert - strictly for sharing body heat.\"\n\n\"A logical idea.\"\n\n\"Am I allowed an inappropriate joke at this juncture?\"\n\n\"If you must.\"\n\nHe grinned. \"Care to join us? Think of the body heat we could share together.\"\n\nShe raised an eyebrow. \"I believe in this instance there is an apropos human expression: 'Two's company, three's a crowd'.\"\n\n*\n\nDeck 1, Bridge, 1615 Hours:\n\nIt was dark, and quieter than usual, with the bright ashen light strip running the upper circumference of the bridge indicating Grey Alert, and the secondary stations shut down; Hrelle could even feel the difference with the ship running on minimal impulse power instead of the warp engines.\n\nAnd perhaps it was also helped by the attitude everyone had adopted, even the cadets of Alpha Squad, manning their stations and performing professionally under the unusual circumstances.\n\nWith one notable exception. \"Keep her steady, Mr Rrori, make sure you don't exceed Point Ten Impulse-\"\n\n\"I understand the required parameters, Sir,\" Rrori informed him, without looking away from his display panels. \"I achieved perfect scores in five of the Grey Alert simulations I undertook at the Academy.\"\n\n\"Really?\" Hrelle let his sarcasm drip from his words. \"How impressive. And how many simulations did you have to do to get those five perfect scores?\"\n\n\"Just the five, Sir.\"\n\nHrelle frowned. \"Steady as she goes, Mr Rrori.\" He didn't like this. He didn't like how this cub was behaving openly towards him. Worse, he didn't like his own reactions, so aggressive and confrontational. It wasn't like him. Was it all those jibes about his age? His appearance? How Kami could be interested in someone like Hrelle? He had to get a hold of himself.\n\nNow the younger Caitian turned in his chair to face him again, his tail hanging down through the hole in the base of the back of his chair, and swishing with some anticipation. \"Sir, this system's Oort Belt contains large asteroids and planetoids, many near the Buoys we will be approaching-\"\n\n\"I know what composes Oort clouds, Cadet-\"\n\n\"Yes, Sir, but I'm suggesting we can use the local bodies' gravity fields to slingshot ourselves closer to the sensors and shut down our impulses engines completely, thus reducing our power signature even further.\"\n\nHrelle frowned in thought. It was an interesting idea, with some ostensible merit. But... \"Perhaps another time, Cadet.\"\n\n\"Sir, I did perform an identical manoeuvre in my last simulation, and received a note of commendation from the instructor. She was most impressed by my ingenuity-\"\n\n\"Oh?\" Hrelle raised his voice. \"And would you like to be sent back to get another pat on the head from her? Because that can be arranged.\"\n\nRrori paled. \"Excuse me, Sir, I was merely-\"\n\n\"Cadet,\" T'Varik, standing behind Sasha at Operations, interjected. \"The Captain has already responded to your suggestion. It is not your place to argue further.\"\n\nRrori visibly bit back another reply, before settling for, \"Yes, Commander.\" Then he faced forward again, his tail on total droop.\n\nHrelle felt himself gripping the arms of his chair, more tense than he expected, more dismissive of Rrori's suggestion, and not quite knowing why. Would he have been so negative about the cub's suggestion if it had come from Lieutenant Velkovsky, or Giles, or Rina Chaudri? Yes, Rrori was annoyingly full of himself. But that could be tempered with time and experience.\n\nHrelle grunted, wondering if he was getting soft in his old age.\n\n* Deck 1, Mess Hall, 2000 Hours:\n\nThe lights were out, but portable lanterns sat on the various tables, and though the replicators were off-line, there were stacks of ration trays waiting those coming in for their mid-shift meal, including Alpha Squad.\n\nJonas picked at his, easily distracted by talking about his experiences in Engineering. \"It's the eeriest thing, walking around the warp core while it's off-line. I don't think I've ever seen it completely shut down since boarding.\"\n\nAcross from him, Kit asked eagerly, \"Is it like a slumbering giant, still and silent as a starry night, its soft breath a whisper to the soul, with promises of the roar of warp speed?\"\n\n\"Huh?\"\n\nKit's eyes widened. \"That's poetry!\"\n\n\"Is it?\" Neraxis grinned.\n\n\"Yes! Poetry is exclusive to the Artist gender on my world, but I feel I might master it!\"\n\nSitting nearby with Eydiir between them, Rrori was focused on working out something on a PADD, but offered, \"It needs improvement, Kit, but I will be more than pleased to assist you. I won several awards in Creative Writing back on Cait, and had my work published in my first school's journals, to great acclaim.\"\n\nSitting opposite Eydiir, Neraxis swallowed the food in her mouth and noted, \"And yet despite all your achievements, you still manage to remain humble and unassuming. Are you working on an ode to yourself now?\"\n\nHe never looked up. \"No, I am completing the calculations on my slingshot suggestion.\"\n\n\"I thought Captain Hrelle turned you down?\"\n\n\"Yes, but I'll pass on my proposal to Commander T'Varik.\"\n\nSitting across from him, Sasha had been silent and distracted through the meal, staring down at her food or looking anywhere else but directly at him. Now that changed. \"That's not how things work in Starfleet, Cadet.\"",
        "\"But my ideas might someday be incorporated into subsequent Grey Alert operations.\"\n\n\"Yes, but will you still be around to appreciate it? Going to the First Officer after being turned down by the Captain goes against ship protocol.\"\n\n\"Perhaps, but clearly I should have gone to her first about it, given the situation onboard.\"\n\n\"What situation?\"\n\nHe looked at her with those big warm... patronising chocolate-brown eyes of his. \"Sasha, with all due respect to your father, it's clear who's really running this ship. You only have to look at the state of him, to listen to him, to understand that his best years are behind him. Little wonder they assigned him something safe like this ship to wile away his final days in Starfleet.\"\n\nThe table went quiet.\n\nThen Kit spoke up, his normally placid demeanour now laced with consternation. \"Friend Rrori, for someone who professes respect to our Captain, you show precious little of it with your words.\"\n\n\"Hear, hear,\" Eydiir agreed coldly. \"How dare you speak about him that way? You've not been here a day, and you think you're fit to pass judgement on him?\"\n\n\"Yes,\" he replied without irony. \"I have compared our records. I am his superior physically, mentally, academically-\"\n\n\"Oh, I'll bet, Furball,\" Neraxis sneered, her cobalt-blue skin darkening with anger, \"But you know what? If my family were in trouble, I'd tell them to call on the Captain for help, not you. You know why? 'Coz I know he'd take on the Galaxy to save them. You'd be too busy staring in the mirror and stroking yourself off.\"\n\nThe Caitian looked up in confusion at the surrounding faces, all sporting varying amounts of censure. \"I don't understand your reactions. Surely it's obvious that he's past his prime and-\"\n\nSasha reached across and took the PADD from his hand, capturing his attention once more, her voice as cold as the breath which was now ghosting from their mouths as the temperature continued to drop. \"Listen up, Prince Myshkin: my father chose this ship. It wasn't assigned to him. He could have had his choice of command of an explorer, frigate, escort vessel, border patrol. Any ship. But he chose this ship, because it was part of the AWE Program, and he wanted to be near me, after being separated from me for nearly seven years.\n\nAs for him being past his prime... he may not be the man he once was, but I think even now he could outfight you, outsmart you, out-anything you. And I don't care how many gold-plated polo ponies your family have given you, or how many awards or achievements you've got under your belt, or how immensely handsome and attractive you are.\"\n\nRrori looked around him now. \"This hostility is not necessary, I was merely-\"\n\n\"I don't think you're capable of doing anything 'merely',\" Sasha told him. \"The way you strut around here, I'm frankly amazed you can get your head through doorways without scraping your perfect little ear tips.\" She handed him back his PADD. \"If you're done eating, perhaps you should return to the Bridge and your duties?\"\n\n\"As a matter of fact-\"\n\n\"It wasn't a suggestion, Cadet,\" she told him blankly.\n\nRrori stared at her for a moment, before acceding, \"As you wish, Squad Leader.\" He rose, lifted up his PADD and the tray with the remains of his food, and departed the table.\n\nThe rest of the squad remained silent and still for a few seconds, before Eydiir noted, \"Well said, Sasha.\"\n\n\"Yeah,\" Neraxis agreed. \"He had that coming to him.\"\n\nThey went silent again.\n\nThen Jonas asked, \"You really think he's immensely handsome and attractive?\"\n\nSasha looked at him. \"I never said that.\"\n\n\"Forgive me, Friend Sasha,\" Kit countered, \"But you did. You also mentioned his perfect little ear tips-\"\n\n\"Didn't say that either,\" she insisted calmly. \"Now finish your meal.\"\n\n\"But Sash-\" Jonas insisted mildly.\n\n\"Both of you,\" she replied firmly.\n\n\"You heard your mother,\" Neraxis joked.\n\n*\n\nDeck 1, Captain's Office, 2120 Hours:\n\nT'Varik held out a PADD. \"Cadet Rrori presented me with the details of his proposal.\"\n\nHrelle looked up from his desk. \"After I rejected him?\" He rose to his feet, baring his teeth. \"I'll pummel the little brat!\"\n\nThe Vulcan looked at him curiously. \"Pummelling will not be necessary. I have given him an official reprimand for his breach of protocol. However, to be fair, I have examined his proposal; it *is* viable.\"\n\n\"Really?\" He took the PADD and stared at the display without really looking at it.\n\n\"Yes. Although the Rrori Manoeuvre is on average 12% slower-\"\n\n\"Excuse me? The What Manoeuvre?\"\n\n\"The Rrori Manoeuvre.\" She raised an eyebrow to his reaction. \"Needless to say I did not provide that nomenclature. To continue, while it is 12% slower than utilising the impulse engines, the resulting decrease in our energy signature will average at 18.5%, which could provide a vessel with a significant tactical advantage under the right circumstances.\"\n\n\"So, no logical reason to not let him try it out?\"\n\n\"No, Sir.\"\n\nHe nodded - then dropped the PADD on his desk. \"Fortunately, I'm not required to give a logical reason for refusing him.\"\n\nHer brow furrowed. \"I understand that he broke with protocol, but you have been known to be more... forgiving... of your 'cubs'.\"\n\nHe sat down behind his desk, hating how the cold seemed to seep into his bones, despite the cold-weather gear. He rubbed his eye sockets. \"He's so full of himself, so sure of his brilliance.\"\n\n\"Youth rarely possesses objectivity - Vulcans being an obvious exception, of course. But they all share the desire to want to prove themselves. Were you not like that yourself at that age?\"\n\n\"I don't remember. It was that long ago.\" He stared down at his hands, imagining more than seeing the wrinkles beneath the fur. \"You were right, in the briefing today: I am closer to the end of my career than the beginning. The same could be said for my life.\"\n\n\"It was not intended to be an insult, Captain. Vulcans honour those with age and experience - yourself included. And I believe you have many years of service ahead of you. And life.\"\n\nHe dropped back into his seat again. \"Not that many, T'Varik. It's different for Vulcans; you and I are roughly the same age, but you could live to be 200. Caitians don't even live as long as humans. And my experiences have shaved a lot of years off the tail end of my life. I'm greying. I'm greying and I'm cold and I don't move as fast or as easy as I used to. But don't worry, Commander, if I should drop dead along the way, there'll always be talented young cubs like Rrori to replace me.\"\n\nThey went silent for a heartbeat.\n\nThen she replied softly, \"Captain... our mortality defines us, whether we live to be 2, 20 or 200. And the wisest of us keeps this in constant reminder, but not at the expense of wasting our precious time in moribund obsession.\n\nAnd for the record: you can never be replaced. At best, you can only be succeeded. And only by someone who could only aspire to be a fraction as good a commander as you.\"\n\nHe looked up at her, smiling now. \"Thank you, T'Varik. You know, you're really quite emotional when you want to be.\"\n\nThe Vulcan's brow furrowed. \"I do not believe there is any reason to be insulting, Sir.\"\n\n\"Of course not, my apologies.\" He tapped the side of his head. \"Senility.\"\n\n*\n\nDeck 2, Gymnasium, 0015 Hours:\n\nThe ship had grown colder, particularly along the outer perimeters, but most of the crew had changed into cold weather gear, or stayed deeper within the interior of the vessel.\n\nThere was only two people in the gym, clad in more traditional, comfortable exercise clothes, including Hrelle, though he still shivered despite his fur, and despite the exercise he underwent with Sasha, practising their K'Gresirr moves on the mats, their breath misty from their mouths and nostrils, lent an eerie glow from the portable lanterns laid about. \"You're crouching too low.\"\n\n\"Sorry.\" She drew back her elbows, pausing to twist her head around and hearing it creak. \"K'Nill!\"\n\nShe charged forward, striking out, while Hrelle countered, deflecting her strikes and countering with his own, drawing closer to each other before finally grappling, Sasha twisting around and using Hrelle's weight against him, sending him to the mat.\n\n\"K'Nuran!\" he called out, stopping the match and catching his breath as he added, \"That was a good move, cub.\"\n\nShe nodded, catching her own breath. \"Got lucky. And got lots of pent-up energy because of the new guy.\"\n\n\"Me too.\"\n\nShe stopped and stared at him. \"Really?\"\n\nNow he stopped, feeling himself blush. \"It's probably not the same type of energy.\"\n\n\"I would hope not.\"\n\nHrelle shook his head. \"I don't understand it. I feel perfectly rational when he's not around. But the moment he's with me, I want to smack him down, chew him up and spit him out.\"\n\n\"Me too,\" she echoed, blushing as she added, \"Sort of.\"\n\nHrelle regarded her, then drew closer and dropped his voice to a whisper in her ear. \"I know I can embarrass you with my jokes and my teasing, and I'm sorry for that... sometimes. And I understand if you don't want to talk to your old man about certain adult matters.\n\nSo I advise you, as your Captain as well as your father, to go talk to Kami about it, and now. Because it's affecting your job. And because I have a feeling she's gonna be busy counseling me about that little jerk as well before too long.\"\n\n\"It's not... It...\" Then she stopped. \"Fine.\"\n\nHrelle patted her on the shoulder and moved aside - just as he caught an approaching scent, and tensed a little, as Rrori entered, wearing exercise clothes like the rest of them. \"Ahh, Captain, good to see you here. Do you practice K'Gresirr?\"\n\nSasha said nothing but gave him a nasty look as she departed, leaving Hrelle to answer. \"Yes. Are you looking to learn?\"\n\n\"No need, Sir - I'm a Tier Five.\"\n\n\"So am I.\"\n\n\"Yes,\" Rrori conceded, adding, \"But when was that? Thirty years ago?\" He laughed. \"Amazing! That was before I was even born!\"\n\nHrelle drew in closer, growling. \"I can still send you to the mat without breaking a sweat, cub!\" He cracked the knuckles in his hands and adopted the introductory pose. \"K'Nill!\"\n\nRrori responded, dropping, arms wide, fingers extended but claws remaining sheathed, tail low and still, eyes fixed on his opponent as they circled, each one of them offering swipes, waiting for the other to follow through. Occasionally they connected, knocking each other's arms away, before shifting to leg kicks.\n\nHrelle's anger rose, as Rrori connected, again and again, leaving bruises along his shins and forearms. The little brat was going to beat him. On his own vessel. Some snot-posed punk was going to show him up!\n\nTo the Seven Hells with that.\n\nHe feinted to the left, making a sound like he was in pain, distracting Rrori and allowing Hrelle to deliver a blow to the cub's midsection. Rrori doubled over, and Hrelle took advantage, leaping on him and using his weight to pin his opponent down, ready to sink his teeth into the waiting neck-\n\n-Like another neck he had once torn into, another captive like himself, the warm flesh waiting to be ripped apart, while around them, the cheers of his Orion captors and their customers, who had come to watch two slaves fight to the death. His heart pounded, driven by more than the aggression drugs the Orion forced into him, threatening to burst from his chest with sheer excitement at the imminent kill-\n\nHrelle drew back in horror, staring down in disbelief at what he had wanted to do. What the- he looked down at Rrori, now curled up, gasping, eyes screwed shut. Mother's Cubs, he assaulted a cadet...\n\nHe dropped down to one knee beside him again, his voice softer. \"Just keep still, breathe in slowly. Relax your stomach muscles, they'll only hurt worse if you tense up.\"\n\nRrori nodded weakly, gasping as he admitted, \"That was- I never saw that coming-\"\n\nHrelle collapsed beside him. \"Neither did I; nice to know I still have some moves. I think you were on the road to beating me anyway. Come on, let's get you to Sickbay. Something's wrong... with both of us.\" Gently he reached under and helped the cadet back to his feet, guiding him out.\n\n*\n\nDeck 1, Counselor's Office:\n\n\"It's your nose,\" Kami concluded, walking around in her cold-weather clothes, rubbing her gloved hands together. \"You've got a stronger sense of smell than most humans. And this, coupled with growing up around a Caitian, helped you develop a sensitivity to our natural scents. Your mother was probably the same way.\"\n\nSasha frowned to herself. \"Well, I prefer that explanation, to the idea that I'm in love with some egotistical tool.\" Her gaze dropped. \"I felt like I was... I was being unfaithful to Giles-\"\n\nKami smiled at her. \"I know, but don't worry, you weren't. It's just biochemistry, your grey matter, all your synapses and axons reacting instinctively. And it'll ebb as you get used to his presence in close quarters.\" She gave Sasha a sly smile. \"If he does still get... distracting, just remind yourself what his first name is, that'll shake you out of it.\"\n\n\"He never said it. He claimed it was unpronounceable to humans.\"\n\n\"Ooh, the little liar.\"\n\n\"Liar? Why would he lie about his name?\"\n\n\"Well, he's quite thin-furred about it. Maybe I shouldn't say...\" Then she added, \"On the other hand, it's not technically confidential information, so...\"\n\nShe told Sasha.\n\nThe cadet blinked and asked, \"Really? Are you serious?\"\n\nKami nodded. \"It's an old Caitian name, and obviously doesn't have the same meaning as it does to humans. No doubt he came up with that 'unpronounceable' crap the first time he introduced himself to non-Caitians.\" She pointed a finger at Sasha. \"Now I'm trusting you not to abuse this information.\"\n\nSasha smiled back. \"I promise, I'll only use it in case of emergency.\" Then her smile dropped. \"What about Dad? He seems really angry with Rrori.\"\n\n\"Really?\"\n\n\"Yes. Not just annoyed, but confrontational. Like he'd been with Giles that first night, only worse.\"\n\nKami frowned, then tapped her combadge. \"Computer: where's Captain Hrelle and Cadet Rrori?\"\n\n\"Both individuals are in Sickbay.\"\n\nSasha's pulse raced. \"Why?\"\n\n\"Unknown,\" the computer replied as expected.\n\nBoth women looked at each other, before wordlessly departing.\n\n*\n\nThey entered to find T'Varik standing there behind a transparent wall; beyond it, Dr Ling was standing beside Rrori, who was sitting up on a biobed, with Hrelle standing beside him. The two males appeared to be on friendly terms, with Hrelle clasping the cub's shoulder.\n\n\"What happened?\" Kami asked immediately.\n\n\"I believe an explanation has been discovered for the recent behaviour between the Captain and the Cadet,\" T'Varik explained. \"According to the doctor, when the cadet had contracted Rigellian Kassaba Fever at the Academy, it triggered a hormonal pheromone resurgence that Caitian males typically only experience once or twice at a younger age. The doctor referred to it as-\"\n\n\"Sh'esirrik,\" Kami finished, nodding in understanding. \"It means 'Rude Male'. Females will go into Season several times a year for most of their adult lives, producing pheromones to attract males, but males typically only undergo that once or twice, and only as they enter puberty. During Sh'esirrik, they begin emitting pheromones that trigger competition and contention among themselves... and attraction in certain females.\" She glanced teasingly at Sasha, who chose to find something else to catch her attention. \"And it explains the Captain's behaviour towards him as well.\"\n\n\"It does not explain why the Captain did not recognise this happening himself at the time.\"\n\n\"It does when you consider he hasn't been around his own kind in decades, and that you expect those type of pheromones when the male cubs are thirteen or fourteen instead of eighteen; had this happened back home, it would have been recognised and dealt with immediately. Here, however... Is that why they're down here? To get pheromone suppressants?\"\n\n\"Indeed, as well as treating minor injuries resulting from what I suspect was some typical masculine display. May I assume that these mitigating factors will allow me to drop the disciplinary action against Mr Rrori? And not file charges of assault on a cadet against Captain Hrelle?\"\n\nKami smiled. \"You assume correctly.\" As Hrelle and Rrori entered, she asked, \"Can we not leave you two males unsupervised for one minute?\"\n\nThey looked to each other, Hrelle replying with, \"Don't know what you're talking about, Counselor. We settled our differences quite amicably. Isn't that right, Cadet?\"\n\nRrori nodded, looking and sounding less arrogant than before. \"Yes, Sir. No problems here, Sir.\"\n\n\"Then, Cadet, perhaps you and the Squad Leader can repair to your quarters for the evening?\" T'Varik suggested.\n\n\"Yes,\" Kami agreed, \"It's been a long day. Go to bed.\"\n\n\"Separate beds,\" Hrelle clarified.\n\nSasha gave him a dirty look as she and Rrori departed.\n\nHrelle yawned now. \"You know, bed sounds like a good idea right now.\" He looked to Kami. \"Not separate, though.\"\n\n\"No.\" She grinned at T'Varik. \"Care to make it a threesome?\"\n\n\"Forget it, Counselor, I asked already, and got turned down. The woman doesn't know what she's missing.\"\n\n\"On the contrary,\" the Vulcan corrected dryly, \"I am fully aware that your combined penchant for burlesque behaviour and sexual innuendo would guarantee me a sleepless evening. And not for the right reasons. Good night.\"\n\n*\n\nDeck 2, Alpha Squad Quarters:\n\nSasha and Rrori walked into the room, the group sitting on the floor around the portable heater, some wearing blankets wrapped around them, all of them looking up at the arrivals, giving Rrori various looks.\n\n\"Guys,\" Sasha started before anyone can add anything to the looks. \"Rrori has something to say.\"\n\nThe Caitian dipped his gaze to the floor, his tail hanging still behind him. \"I... I apologise for being such a disrespectful ass. To the Captain, and to the rest of you. I had... an illness. The details are not important-\"\n\n\"He had hormones,\" Sasha informed them loudly, enjoying his reaction. \"Clearly something that we females wouldn't understand. Anyway, my Dad has forgiven him. I expect the rest of us to do the same. Agreed?\"\n\nEveryone made noises of agreement. Rrori looked relieved. \"Thank you, all. I guess- I guess I'm not as smart as I thought I was.\"\n\n\"Yes, you are,\" Sasha assured him. \"You're smart, gifted, talented, hard-working - just like everyone else here. You're proud of who you are and how you've gotten to this place - just like everyone else here. But getting here's not the end of your journey, but the beginning. You have a long way to go still, but you won't do it alone. But you have to stow your ego in your quarters - just like everyone else here.\"\n\nThey went quiet, until Kitirik broke the silence with, \"I would still appreciate your assistance with my paper on Spatial Geometry, Friend Rrori.\"\n\nThe newcomer smiled. \"I would be delighted! I have received many notes of commendation for-\"\n\nSasha smacked his snout.\n\nRrori caught himself, continuing with, \"I would be delighted.\" He looked around. \"One moment, I have something to share with all of you.\"\n\nRrori returned with a small bag. \"I have a little libation from home, perhaps you could do me the honour of sharing it?\" He made a place for himself on the floor and set the bag in his lap, opening it and producing a dark bottle with a webbed sheath and a cork in the narrow neck. \"It's from my clan's vineyards. It has received rather favourable reviews, although the alcohol content is considered quite strong.\" He looked around them. \"Unless there are any biological or cultural restrictions you are observing?\"\n\n\"Hell, no!\" Neraxis exclaimed. \"Bring it on, Furball! It'll get us warmed up!\"\n\n\"That is a misconception,\" Eydiir corrected. \"Alcohol in reasonable amounts is a vasodilator, opening blood vessels and encouraging warm blood to reach the surface of the skin, but does not in itself provide warmth.\"",
        "\"Shall I have your share, then?\" Sasha suggested.\n\n\"Only if you want me to disembowel you.\"\n\nSasha smiled. \"I'll get some glasses.\"\n\n*\n\nDeck 1, Captain's Quarters:\n\nThey stood near the heater in his bedroom, removing their boots, Kami asking, \"So, how did you snap yourself out of it?\"\n\n\"I don't want to discuss it.\"\n\n\"Why not?\"\n\nHe sighed. \"You do understand that by having me discuss why I don't want to discuss it, I'm just discussing it anyway?\"\n\n\"Ooh, such a silver tongue, wasted on trying to put me off.\" She drew closer. \"Come on, talk.\"\n\nHe frowned, hating having to face it again. \"I got in a lucky shot, Rrori went down, I was over him, wanting to make him beg for mercy, to have him confirm who was the First Male here... And then suddenly I had a flashback to my time in the Orion fighting pits... all those bodies I left behind on the arena floor. I remembered how quickly and easily I killed back then. How quickly and easily I could have done that again now-\"\n\n\"No.\"\n\nHe looked up to see Kami draw up to him. \"No. You weren't really going to hurt Rrori. You're not the same man who was driven by hunger and drugs and pain all those years ago. Because that man wouldn't have stopped himself. You're good, decent, stable, loving. Understand?\"\n\nHe didn't want to respond. He didn't want to even think about it.\n\nShe smacked the side of his head. \"Well?\"\n\n\"Yes!\"\n\nShe smiled. \"Good. Now let's get to bed.\"\n\nThey continued to undress, Kami kicking aside her uniform and underwear. \"Sasha was telling me that Giles and she were getting a suite when we get to Starbase 154, and make a weekend of it. Maybe we could do the same?\"\n\n\"Sure - maybe they have a Seniors Discount?\" He yelped as she smacked him again. \"Mother's Cubs, stop that!\"\n\nExasperation tightened her face. \"That's it, I've had it with that crap!\" She stood naked in front of him, her hands on her hips, her tail swishing behind her. \"Look at me, Esek Hrelle.\"\n\n\"I am-\"\n\n\"I mean really look at me.\" She glanced down at herself. \"My breasts are beginning to sag. My fur is greying in places. My tail isn't as prehensile as it once was. My nose and ears don't pick up as much as they used to. Does any of that bother you?\"\n\n\"What? No-\"\n\n\"And will you care in years to come when the grey increases? When I'm aching more when I get up in the morning, and you can feel the wrinkles beneath my fur?\"\n\n\"Of course not-\"\n\nHer tone became less challenging, more intimate, vulnerable, her voice dropping as she approached him, looking up into his eyes. \"Will it bother you when my Seasons ebb, and finally fade away?\"\n\n\"No,\" he answered softly.\n\nKami reached up and rested her hands on his chest. \"There's a line from an old Terran poem that's stuck me ever since I heard it: 'Grow old along with me; the best is yet to be'. That's what I want for us. You will face your own signs of ageing: your greying, your wrinkles, the loss of acuity in your senses and reflexes...\" She smiled. \"And for the record, I will adore you throughout these Golden Years.\n\nWe will diet and we will exercise, and we will call on medical science as and when required. And it will all help. But it won't stave off the inevitable, not indefinitely.\" She smiled. \"And I wouldn't want it to. I've lived, done so much, and I'm proud of myself. And you definitely should be proud of yourself too. \"\n\nShe wrapped her arms around his neck now. \"I for one do not intend spending the rest of my life counting my grey furs or wrinkles or wondering when my claws will fall out or my boobs will start dragging along the floor. I'm spending that time keeping you and everyone else onboard safe and sane, being there when my cub gets married and has cubs of his own, eating fried shuris sticks... and having so much sex.\" She smiled. \"Maybe not all of that at once. How about you? What are you gonna do with the rest of your life?\"\n\nHe seemed to consider the question, his own arms snaking around to embrace her, moving over her shoulder blades to stroke the fur on her back. \"I'm spending that time commanding this ship, protecting this crew, watching over our cubs, teasing T'Varik, being proud of my daughter.\" He gazed into her eyes. \"And helping you have so much sex.\"\n\nShe raised an eyebrow, grinning. \"I look forward to that, someday...\"\n\n\"Why someday?\" He drew into her neck and purred against her skin.\n\nShe clutched onto him tighter, shivering. \"Ohhh, Esek, that's- that's not fair-\"\n\n\"You want me to stop?\" he murmured teasingly, his hands moving down to cup her cheeks, his own arousal rising unignorable between them. \"Just say.\"\n\n\"That's- That's not fair either- Don't ask me to stop this- You know we shouldn't do this- not while you're under my care-\"\n\n\"Then sign me off,\" he whispered, one of his hands stroking the base of her tail. \"You said yourself I'm not the same man I was years ago, and that's thanks to you. If I'm well enough to handle a starship and crew, I can handle sex with the woman I love. And our scents have already changed enough that other Caitians think we're bonded and unavailable to others anyway. Why not go all the way?\"\n\n\"Esek...\"\n\nHis hand moved around between them. Between her legs.\n\nShe surged against his touch. \"Get your ass on that bed...\"\n\n*\n\nDeck 2, Alpha Squad Quarters, 0115 Hours:\n\nSasha stood in the open doorway. \"You're gonna be late for your shift, schmuck.\"\n\nGiles was standing close to her, holding her hand and gazing into her eyes, his smile bright. \"I'm technically conferring with a fellow Squad Leader. So, as long as you don't leave any love bites on me-\"\n\n\"No promises.\" She drew him in for another kiss. Their lips met, ground together as their tongues entwined-\n\nThen separated as Sasha was hit with a small cushion from within her quarters, followed by Neraxis' demanding, \"Take it elsewhere, you dirty Bumpers, or come in and share some of that lip sugar with the rest of us!\"\n\nGiles did his best not to chuckle. And failed.\n\n\"When we get to Starbase 154,\" she said to him, \"And you book that room, make sure it's equipped with force fields to keep these assholes out.\"\n\n\"We can hear you, Bumpers!\"\n\nThey kissed again - until a second cushion struck Giles.\n\n\"Good night,\" Giles muttered, smiling as he pecked her on the cheek and departed.\n\nSasha stepped back and let the door slide shut, before joining the others in the main room, all still sitting in a circle on the floor drinking the wine from Rrori's clan's vineyard. Sasha plumped down again. \"I hate all of you.\"\n\nKit was hiccuping from the wine, his hiccups strange-sounding, like a duck being hugged. \"You do not really hate us, Friend Sasha, do you?\"\n\nSasha finished the wine in her glass. \"No, of course not.\"\n\nBeside Kit, Eydiir stared into her own cup. \"She is merely sexually frustrated.\"\n\nSasha stuck her middle finger up at her friend.\n\n\"That's a solution,\" Neraxis commented. \"Though I prefer two fingers. And sometimes my thumb when I'm feeling adventurous.\"\n\n\"Of course, we could always partner up,\" Eydiir observed. \"It would certainly help generate body heat better than the alcohol.\"\n\nThey looked at each other.\n\n\"Fortunately it's not that cold that we have to worry about doing that,\" Sasha declared.\n\n\"Says the woman getting some on a regular basis,\" Neraxis groused.\n\n\"Still,\" Eydiir continued, displaying an uncharacteristically-mischievous glint in her expression, courtesy of the wine, \"A situation may arise in the future, perhaps on some Away Mission on a frozen planet, where we may need to partner up for sex.\" She looked around. \"Anyone have any preferences?\"\n\nThey were silent.\n\nThen Jonas finally spoke up, loudly affirming, \"I'll be Bumpers with any of you!\"\n\nThat hung in the air for a moment, before they all burst out laughing.\n\nSasha recovered first to lean forward and gaze at him, asking, \"How many of those has he had?\"\n\n\"He hasn't even finished his first!\" Neraxis guffawed. \"Fricking Lightweight!\"\n\nWhen they settled down again, Sasha noted. \"Another two days and a night without our entertainment systems, and that's gonna look like a viable option. I can't believe we can't keep ourselves occupied without it.\"\n\n\"Would anyone like to hear some music?\" Rrori asked.\n\n\"You have a player?\"\n\n\"Better.\" At their sounds of approval he retrieved from his bag a rod-shaped stringed instrument that produced a sound like an acoustic guitar. He was adjusting the controls at one end. \"I, ah, know a few Caitian songs, of course, and human and Klingon classical pieces. I'm sorry, but I don't know any Capellan, Bolian or Qarari music, but I'll be happy to learn some if you have any favourites.\"\n\nSasha regarded him, smiling. \"I'm sure we'll be quite happy with whatever you can play, Rrori. If you're any good, that is.\"\n\nHe looked up, momentarily aghast and ready to argue - but then shrugged. \"I'm... not too bad.\"\n\nThen he started playing.\n\nHe was brilliant, of course.\n\n*\n\nDeck 1, Captain's Quarters, 0330 Hours:\n\nThey lay together in the dark, their combined scents mingling under the covers. Hrelle nuzzled closer. \"Are you okay?\"\n\nShe made pleasing sounds in response, breathing in slowly and deeply. But then she murmured, \"Oh, Esek... what happened between us just now?\"\n\n\"Therapy.\"\n\n\"That's not funny.\"\n\n\"It's not meant to be.\"\n\n\"I mean it, Captain. I'm your Counselor, this is a serious breach of ethics. If anyone found out-\"\n\nHe sighed, brushing up against her.\n\n\"What am I gonna do with you?\" she asked.\n\nFor a moment, there was only the soft hum of the nearby heater.\n\nThen he replied, \"Marry me.\"\n\n*\n\nDeck 2, Alpha Squad Quarters, 0330 Hours:\n\nThey had listened to an impressive number of songs from Rrori, and of course he even proved to have a beautiful singing voice - and remained modest about it, gratefully accepting their words of appreciation.\n\nThey had retired after a while to their beds. Sasha watched from the corner of her eye as Rrori undressed, admiring his body... but not feeling the level of arousal she had felt before from him. Perhaps it had been his change of character following his fight with her Dad.\n\nOr perhaps it was the knowledge that Kami had imparted to her about the Caitian's name, which changed how she saw him now.\n\nShe pulled the covers up, making shivering sounds that the others mocked and emulated from their own beds. \"Shut up, you brats, or I'll leave you here and go sleep with Giles.\"\n\n\"As if you two Bumpers would be doing any sleeping,\" Neraxis chuckled. \"Hey, New Kid, we have a rule in here: try not to make too much noise if you're thinking of Treating Yourself.\"\n\n\"Treating myself?\" Rrori asked.\n\n\"Yeah: Polishing the Phaser, Tapping the Warp Core, M\u00e9nage \u00e0 Moi-\"\n\n\"Ahh, I understand. I will do my best, Neraxis. Good night, Alpha Squad. Thank you for welcoming me into your group.\"\n\nThe others made their own good nights.\n\nSmiling to herself in the dark, Sasha added, \"Good night... Meow Rrori.\"\n\nThe room went silent.\n\nThen Neraxis exclaimed, \"Wait... WHAT'S HIS NAME?\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... THE UNCERTAINTY PRINCIPLE"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "caitians",
        "furry",
        "fanfic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-grey-matters"
}