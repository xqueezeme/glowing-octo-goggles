{
    "title": "My Little Ventrue Pt. 04 Ch. 11",
    "pages": [
        "~~Beatrice~~\n\nNearing Azamel's hole in the ground, back in a place she very much didn't want to be. But this was how the magic happened, throwing yourself into the deep end and seeing if you could swim. She had Jacob with her, so at least he'd help her out if she started drowning. Hopefully. Maybe.\n\nAzamel's place was still maybe a quarter mile ahead, and each step down the abandoned tunnel sent larger and larger chills up Triss's spine. She could feel it, her, the old woman, feel the oppression the monster radiated, like something thick in the air. Felt like trying to swim through some sort of sludge, something that made you not want to be there.\n\nAnd it wasn't like that the first time she'd come here. It was there, but it wasn't like this, not like this.\n\nIt wasn't just a feeling either. The tunnel was flickering, fading in and out, and the moving shadows weren't rare anymore. They were everywhere. And to make it even creepier, they weren't always black. Sometimes, bits of purple or red sneaked into the waves of shadow, and sometimes bits of gold.\n\nIt only got worse the closer they got to Azamel's place. Sometimes the tunnel faded out, pitch blackness swallowing them, only for a brief flash of something to appear. White pillars with golden platforms circling their contours every twenty feet or so, with small lighthouse-like shapes on the top, and red drapes with gold embroidery hanging from them. And then they were gone, and the two vampires were again walking in a long, boring, abandoned subway tunnel.\n\nThen again it flashed, back in a dream, back in some sort of madness of long stretches of green grass, trimmed, tall, weird bushes, and a river that flowed. Again, gone, replaced with dirty train tracks, concave walls of concrete brick, and the old, dusty floor around them.\n\nAgain, more flashes, except now puddles of blood lined white stone floor. Guillotines beneath a red sky, a dozen of them, each with a fresh body to bleed red into the puddles. The pools of red connected into a small, carved ravine in the white floor, and followed its twisting snake-like shape into the river, where the blood flowed away. Then they were back to the tunnel, and its curve at the end where it opened up into Azamel's home.\n\nA big, empty room of concrete, with a stage a foot or two high off the floor. Here, Azamel had set up Grandma's place, rocking chair and shitty furniture included.\n\nBut it wasn't Grandma's place. Holy fucking shit. Beatrice gasped and stepped back as she looked up, gulping down nothing and eyes widening until her new eye started to hurt. A blood moon, literally. A giant red moon far far far too close to the planet, so big it filled half the sky. It bled red, thick, a liquid that fell upon the palace that stood before her, some sort of palace made of white stone, smooth, carved, ornate, with tall pillars surrounding it, and multiples domes on its roof topped with gold spears.\n\nGuillotines were spread around the palace courtyard, and they bled into the twisting, turning man-made stream of red that leaked out into the river beside the palace. More than just guillotines added to the death show, but spears with corpses mounted on them, skin flayed or backs split open from what had to be a hundred strikes from a whip. And then gone again, back to the concrete, the shitty old lights that were somehow still working, and the god awful lamp plugged into an extension cord on granny's stage.\n\nHer, sitting in her chair, rocking back and forth and smoking a cigarette, an old book in hand. Triss tried to hide her trembling.\n\n\"What are you doing here, old man?\" she said.\n\nJacob laughed, predictably. \"Pot calling kettle.\"\n\n\"And you have an eye. You looked better with the bandage.\"\n\n\"Yeah well, I couldn't see you all too well without the eye.\"\n\n\"See me?\" Azamel coughed, coughed, and coughed a few more times until Triss was sure she'd cough up a lung. But it passed, and she tapped her slippers on the stage floor twice as she took another drag of her cig. \"I had always assumed you could see without eyes.\"\n\n\"I can, but now, I can see you.\"\n\n\"You... can see me?\" She leaned forward, set an elbow against the chair arm, and her chin in the palm, cigarette between her fingers. Her eyes, old, worn, stared into Jacob with a piercing gaze Triss didn't expect from an old woman.\n\nAnd then the world changed around her again. The guillotines, the spears, and other devices of torture were set about, some with people still in them. Screams filled the air, and Beatrice raised her hands to cover her ears to block them out. But they were constant, rising and falling in volume like waves in a sea of torture. The palace was closer now, and the blood that poured from the moon above dripped down its shiny white walls like slime.\n\nBut now there was something in front of the palace, and Triss backed away again until she felt her butt hit the concrete behind her. An elephant? No, some sort of person with an elephant head, but from head to toe they had the skin of an elephant. Four arms, human, but each hand held a chain, and from each chain dangled something Triss did not want to see. A corpse from one. A giant net filled with fresh skulls in the other. And finally, a sword in both of the remaining hands, scimitars. They were coated in blood, and dripped of it, unending, as if they themselves were bleeding.\n\nThe size was impossible. No way, there was no fucking way something this big was real, no way it could have existed. It towered over them, fifty feet tall sitting down, with legs folded in front of it crossed at the ankle, knees apart.\n\nShe recognized that figure. She knew absolutely shit all about religions or Hinduism, but she recognized an iconic figure when she saw one, looming over her like a god ready to squash a buzzing insect.\n\nThe image faded away, replaced with the sobering world of concrete and tunnels, electricity and shitty green chair that should have been burned for its crime against eyes everywhere.\n\n\"... you can see me.\" Azamel blew smoke toward them, but it dispersed long before reaching them. \"No, silly girl, I am not who you think I am.\" Another deep drag of her cig, and she shrugged as she leaned back in her shitty, creaking recliner. \"I'm not even from the East.\"\n\n\"I... I... uh... I\u2014\"\n\n\"And I do not appreciate prying eyes!\" She slammed one of her slippers down. Not a slipper, not a fucking slipper at all. As the images of the two realities overlapped, the giant elephant thing raised a leg, and slammed it against the white, bloodied stone that it sat upon.\n\nAnd the world began to quake. The rivers of blood began to boil, rippling with the vibrating world, and the blood moon cried out its agony, a deep bellowing sound like a great whale speared through its side. The corpses began to moan, the heads that sat about their prostrated or pinned bodies crying out to the sky. Blood leaked from their nostrils, ears, their mouths, and their eyes. It flowed into the twisting blood river, and the edges of the small stream splashed up, over, and onto the white that surrounded Triss.\n\nBack to the real world, back to old granny sitting in her chair, glaring at the two vampires who had the audacity to enter her shitty home.\n\nOh good fucking god they were going to die.\n\n\"A big girl, aren't you?\" Jacob said.\n\nTriss grabbed him by the arm and started to shake the damn bastard. \"I'm sorry, did you not see the giant monster woman. Did you not see the fucking corpses? Don't piss off the giant monster woman!\" she said, listening in close to whisper.\n\nJacob snickered, and kept his eye on the granny in the chair. \"So you old bat, I have some questions for you.\"\n\nShe snorted, and flicked the cigarette his way. He dodged. Even a lit cigarette could be nasty painful to a vampire.\n\n\"You bring your blood magic to my home so you can pry into my world, sneak a peek at my true self, and now you have questions for me? The nerve.\"\n\n\"That I do. Turns out you've been busy in the time you were gone. I'd heard you'd destroyed villages before your first arrival in the city, but even after you left Dolareido, you destroyed some towns. Why oh why would a nice old lady like you do such a thing.\"\n\nPoking the bear with a hot iron poker. Dead. Yeap, they were dead.\n\n\"I pursue my inheritance.\"\n\n\"So I heard, but you'll have to forgive me. I've no idea what that means.\"\n\n\"... and how did you hear that this was my goal?\"\n\nJacob shrugged, laughed, and did a small spin in place. \"My secret.\"\n\nThe old woman snarled, and reached into her god awful sweater vest to pull out a pack of cigarettes. Trembling hands struggled to retrieve another cancer stick, and she growled down at the package as it fought against her. But with time, one succumbed to her assault, and she set it on her lips and lit it like it was the most natural thing to her, like someone putting on their glasses that they'd been wearing for a hundred years.\n\nIt was probably Black Blood that told Jacob about this, but then how did that freak show know? And what the fuck was inheritance, if even Jacob and Black Blood didn't know what it meant?\n\n\"Mark. Get rid of these two.\"\n\nTriss almost squeaked as a man stepped out from behind a four panel room divider on the stage, some shoddy piece of hazel crap that she could probably buy at a flea market for a dollar. The man looked entirely forgettable, dark skin, a bit overweight, clean shaven with short, curly hair. Some jeans and a worn out gray shirt covered what she guessed was a fair amount of muscle to go with that fair amount of fat.\n\nHow had she not sensed him? Jacob didn't look surprised, but she was, and she snarled as the unknown man started to walk toward them.\n\n\"I'm not leaving,\" Jacob said. \"Jack's disappeared.\"\n\n\"... has he?\" Azamel said.\n\n\"As if you didn't know.\"\n\n\"Perhaps I didn't?\"\n\n\"Well, you know now. And I bet you know what's happened to him.\"\n\nAzamel raised a hand, and blocked Mark's forward march. \"What does a witch care for the Invictus boy?\"\n\nJacob shrugged. \"Kid's great, isn't he? Has this nasty habit of getting to the truth of things, and opening his mouth about it when he should probably just keep his lips sealed.\" Old Joker started to pace, and put his hands against the small of his back as he walked around. Fucking Sherlock Homes being a jackass. \"Avery asked for his help in being an intermediary with her and the Kindred here. Makes perfect sense, given this is a vampire's city, and the werewolves are just guests. Given your recent strifes with the Invictus, Athalia's talk with Jack at the ball was probably you asking him to be the same thing, wasn't it?\"\n\nWell. Damn, she should have realized that. Or maybe she shouldn't have, cause Azamel's frown was only growing, and she lowered her hand once more.\n\nMark jumped down from the stage, and walked toward Jacob. The flickering realities struck Beatrice once again, and she sneered at the sight of Mark, at the weird, worm-like entities crawling on the man's skin. Big, slimy, gross worm things, all over him.\n\nNot all over him. Him. They were him. The worms worked into his flesh, and out again, out through his nostrils and where eyeballs should have been, then back into his ears. One worked up the jaw, the exposed bone letting it wriggle up into the man's skull, and then down into his rib cage. A skeleton, but not. A cloak of something like dark, leathery, wet skin was draped over his shoulders, but the chest was undone, and the skeleton inside was visible as Triss's eye exposed the hidden nightmare's form.\n\nShe could smell rotting flesh. Jacob's eye was doing a lot more than letting her see the nightmares these monsters brought with them. It was letting her experience them.\n\n\"You don't want none of this, Mark.\" Jacob raised a hand, index finger pointed down, and twirled it around. \"Just turn around and walk away before I put you in the ground.\"\n\nMark sneered, raised his hands, and cracked his knuckles. Not a word from him though, the silent lackey type. If he'd been wearing some brass knuckles, it would have fit the motif perfectly. But not the rotting motif, the corpse walking around motif, the disgusting stench and stomach-turning display motif. As he came closer, Triss took another step back, hand raised to cover her nose.\n\n\"Hey, don't say I didn't warn you.\" And out came Jacob's fist. At first Triss thought her boss might give the Begotten a warning punch, something to let him know the man meant business. Surely something to let the idiot know what it meant to fuck with an elder Kindred, especially one as old at Jacob.\n\nBut, no, Jacob didn't do things the way you'd expect. He gave Mark a proper punch, the sort of punch he used on Antoinette, the sort of punch that destroyed jaws to the point they ripped off the face. This Mark fellow was going to die.\n\nMark fell apart. His body shattered around Jacob's fist, but didn't get sent flying backward. Instead, he fell to the ground, and him, his clothes, everything just fell away into a giant pile of really big worms. Like, foot long worms, an inch thick and shiny with their slimy, wriggling bodies. And not in the weird nightmare world either that Beatrice could see, or at least not only there. It was in both worlds, a big mess of gross.\n\n\"Couldn't hold together, heh.\" Jacob marched over to the pile of worms, and glared down at its writhing mass. \"You're not the first Begotten to try this trick.\"\n\n\"Oh?\" Azamel said. \"I think you underestimate my companion.\"\n\nJacob shrugged, and dusted off his shoulder. \"We don't have to fight. I came here for information, about you, and Jack. Just tell me\u2014\"\n\nThe old man jumped back, and frowned at the mess of worms. It was rebuilding itself, but coming for Jacob at the same time, spreading out over the floor. One-eye snorted and kicked at the pile, and a dozen of the giant slimy bodies splattered, guts and such landing around the concrete beneath them. But, the guts, the gooey skin, the slime, they started to pool back together, until the worms were whole once again.\n\n\"Ooh, impressive,\" her boss said.\n\nYeah, she was going to stay out of this and just watch for a little bit. Cause, gross.\n\nThere were more worms though. Triss raised a brow as she looked around, and grit her teeth as the flickering realities fought to break her mind. A trail of worms, of big, fat, juicy worms were mixed into the nightmare world. She didn't understand it, didn't get it, but was pretty sure she wasn't in the nightmare so it wasn't like she had to worry about all the crazy shit she was getting glimpses of. They weren't in the nightmare, right? Fiona said you had to go into it, that you couldn't be in both at the same time. But, also, the beast and horror kind of were? Didn't make any fucking sense.\n\nBut that's what the eyes were for, to try and figure out how these Begotten things worked. And so far they worked really fucking scary like. She took another step back as more worms started to appear, and more, and more, until she could feel them pressing up against the toes of her boots and she had to jump back again to get away from them.\n\nJacob felt no such compulsion. He folded his arms across his chest, and watched the sea of worms begin to grow around them. Deeper, more of them, until it was up over the ankles.\n\nTime to nope the fuck out. Triss jumped, a good twenty feet through the air, to land on Azamel's stage. \"Yeah, uh... I'm just gonna watch if that's ok with you.\"\n\nThe old monster shrugged, and kept her eyes on the sea of gross surrounding her home. It was getting darker too, and Triss had to cover her new eye with a hand to make sure it was something actually happening, not more fake nightmare shit. It was real.\n\nMark's hand shot out of pile of worms, near Jacob's leg, and grabbed his ankle.\n\n\"The fu\u2014\" The old man went down, yanked and yanked hard. The teeming pile of worms was a foot deep, and it surrounded Jacob for thirty feet on all sides of him. More than enough space for Mark to hide and strike out. When he did, Triss covered her normal eye, and watched a skeleton draped in a cloak of old flesh strike out from the foul mound, bony fingers clutching the Nosferatu's leg and yanking on him to the side.\n\nLike watching a shark thrash around, some helpless seal in its mouth getting torn to bits. Jacob didn't tear, but the comparison was apt. Mark's hand moved left and right through the ocean of worms, his form hidden underneath the surface, and Jacob's body was dragged along at speeds fast enough to break bone. Left, right, each thrash crashing Jacob's limbs against the worms, whiplash causing the sorts of sounds that made Triss wince and groan. Dislocating limbs.\n\nJacob reached down, wrapped his fingers around the hand, and returned the unwanted yank. Up came Mark, out of the mountain of death, and out into the open. Dislocated limbs or not, Jacob stared at the man, growled at him, raised him up by the collar of his shirt, and shook him.\n\n\"You're annoying me, pest. You think you know nightmares? Think you understand nightmares? You're just a fucking child, someone given a gift, and you didn't earn it.\" Jacob threw the man down into the worms, and glared at him as Jacob's limbs, his knees, his elbows, all snapped back into their proper orientations, each with a crunch. \"Want a nightmare? Here's a fucking nightmare.\"\n\nMark was unfazed by all of this. Didn't say a word, didn't grumble or groan, and his facial expressions seemed just as bored, as if none of this was a threat. If Jacob took another swing at him, Triss figured he'd just melt apart into more worms.\n\nBut then he started to grumble. Squirm, groan, and then the Begotten raised his hands to cover his eyes. His voice started to come out, a normal, a perfectly normal sounding voice, except it was getting louder, more pained, filled with rasped screams, until the screams were ringing off the walls.\n\nThe worms vanished, faded away, some melting into goo that dispersed into nothing, and others vanishing like dust in the wind. The poor man fell forward onto his elbows and knees, clutching his face, screaming into his palms as he was trapped between a sob and a death cry.\n\nJacob stood beside him, grinned down at him, and let out a long, warm sigh, the sort of sigh Triss made after she'd had great sex with Julias. Fucker was happy with himself, for what he just did, for forcing a nightmare on a nightmare. He was a Nosferatu, it was in their blood to make people fear, fear on a level they wouldn't understand until the deformed vampire burrowed into their brain, ripped open a hole, and dropped in a nightmare that could literally drive kine to commit suicide to escape it.\n\nIt was horrible. It was truly, utterly fucking horrible, and Triss hated doing it. She rarely did, and only to people who deserved it. A nasty kine who needed to die, or that Joe fuckwad. But Jacob took things to a new level.\n\nThe skeleton, the man, fell forward, and screamed into the floor.\n\n\"You really think I came here for a brawl with your buddy here, Azamel?\" One-eye shrugged, and started to pace again. Chin in hand, he used his other to wag a finger around, Joker smile growing bigger.\n\n\"No... I suppose not. Release Mark.\"\n\n\"In a bit. Gotta let the bastard soak in the juices a minute, you know?\"\n\nFucker thought he was on a cooking show. Beatrice winced again, and again, as Mark cried into the floor, screamed bloody murder, and fell onto his side. Poor guy curled up into the fetal position, and screamed. And screamed. And screamed.\n\n\"Dude, please,\" Triss said. \"Pretty sure point's made.\"\n\nJacob stopped pacing, raised the brow of his new eye as he looked at her, and shrugged. A snap of the fingers later, and the screaming stopped.\n\nMark sat up with a jolt, and turned over to look at Jacob. He was sweating, his eyes were wide, and his body was trembling. Triss covered her normal eye to get a glimpse of the other side, to see the nightmare inside this disgusting thing, to see what sort of shit Jacob's nightmare discipline had done to the wretched soul. The skeleton thing was trembling as well, to the point its bones rattled, and worms and insects fell from it and the skin cloak it wore, onto the bloodied white floor of the palace courtyard.",
        "Beatrice had gotten the impression Begotten and Werewolves considered themselves stronger than vampires. And it was true for the most part. Elders were the exception to that rule.\n\nTriss could tell she wouldn't be able to handle Mark in a fight, not easily. She was a young vampire, and that was to be expected, especially when up against major freak shows like these Begotten. But Jacob was a different story, a whole different story. So damn easy to forget when he started acting like a juvenile jackass, that Jacob was fucking ancient, and for a vamp, that meant fucking strong.\n\nShe had to raise a clawed hand to her face to hide how a grin was coming through. Proud, maybe, that her boss was that much of a fucking powerhouse? Yeah, she could be a little proud of that.\n\nThe man wasn't screaming anymore at least, but his eyes refused to blink, locked onto Jacob. No one said anything, moved, did anything, and soon Triss could hear the panicked man's heart beating up a storm in the silence. Fucker was still terrified, despite Jacob having released him.\n\nTriss hopped down onto the floor, and stood beside her boss. Still moans and groans happening behind them as Mark continued to back away, sliding his ass on the floor until his back was against the concrete bricks.\n\nJacob winked at her. With the eye. Fucking gross.\n\n\"I think I may have overestimated Mark's abilities,\" Granny said.\n\n\"Underestimated mine, more like it.\" One-eye shrugged and resumed his pacing. A fedora or deerstalker hat with a pipe between his lips would have been a good fit. \"I've been here, in this place, since you were just an idiot child, Azamel. Antoinette and I let you stay because you are more trouble than you're worth to expel, not because we can't. Don't forget that.\"\n\nShe snorted, blew some smoke his way, and leaned back to begin gently rocking her chair. \"So what do you want to know?\"\n\n\"I want to know who you're running from.\"\n\nThe old woman snorted again, and slammed her foot. And again, the flickering images of the great beast she was, and the temple of blood she guarded awoke before Triss. Again, the room shook, and the alien monster trumpeted its annoyance. An elephant's trumpet noise, but thunderous, booming and layered with growling roars.\n\n\"I run from no one. I am the conqueror, idiot vampire. I am\u2014\"\n\n\"On the run from someone. Or something. Or maybe a group of people. How many did you piss off to make you want to return here and hide away in my city's underground?\" Apparently giant elephant monster and her temple of torture didn't faze Jacob. It wouldn't surprise Triss if the old man had created a similar landscape in his youth.\n\n\"... and why should I tell you?\"\n\n\"Because if you don't, I'll beat you up.\"\n\nAnother puff of smoke, and the old woman growled at the scary bastard threatening her. \"Is this how it's going to be between us, Jacob?\"\n\n\"Looks like. I got a good thing going in Dolareido these days and I don't want you spoiling it.\"\n\nShe tossed aside her cigarette, and lit another. The missing piece of herself, cigarettes. Triss had never suffered a true chemical addiction before, and she could only imagine what that must have been like if you'd been smoking your whole life. Would probably have had an easier time convincing the woman to try metal music.\n\n\"It was spoiling when I arrived, old man.\"\n\nBoth Nosferatu raised a brow, looked at each other, then at her. \"How?\" they said, in unison.\n\n\"Viktor, Rebecca, and Tony's death did not go unnoticed. Hunters spread word of the change, so I hear. They came, and watched Dolareido tear itself apart with Lucas's madness. Then he was dead, by the Prince's hand, and a host of Kindred with him.\"\n\nOne-eye sighed, but nodded, and walked over to Azamel. Cause, yeah, that was a good idea. He hopped up onto the stage, and started rooting around through the old lady's things. Dresser, back of the chair, bed \u2014 she'd added a bed since the last time Beatrice visited \u2014 and some of her other things. Like a nosy kid.\n\n\"Dolareido's a peaceful place these days,\" he said. \"Like I said, I got a good thing going.\"\n\n\"You want peace? Don't lie to me Jacob.\"\n\n\"... What I want is a little more complicated than that.\"\n\n\"Isn't it for everyone?\"\n\nTriss shook her head and raised a hand. \"No. Think I'd be happy with a regular source of blood, fucking, and a safe place to sleep. Call me simple.\"\n\nThe two old farts glared at her. Yeah, not a good time for jokes.\n\n\"Hunters have come,\" Azamel said, \"and were coming all along. They have been silent, content to take their time in planning the downfall of Kindred in the city. Four of them of particular skill have been here since Lucas's death, and they have begun working with... an old enemy, that followed me here.\"\n\n\"An old enemy?\" Triss said.\n\n\"Yes little girl, an old enemy. A killer of my kind. Jeremiah is human, but more, and he has recruited a host of hunters to join him in his crusade against me.\"\n\n\"So if I get rid of you, they'll leave?\" Jacob said. Not really a question, given the huge smirk on his face.\n\n\"Not until every Begotten, Uratha, and Kindred are dead, I imagine.\"\n\n\"... so now your problem is our problem. Unless of course you're lying, and this Jeremiah fellow will leave once you're dead.\" One-eye came up beside the old monster, and frowned at her. Smirking, frowning, smiling, sneering, man was all over the place, and each expression was accompanied by a one-eyed gaze that kept... looking at things. This whole night was filled with grossness.\n\n\"Or he stays, and you would be killing a powerful ally in this little battle that is now, as you say, your problem.\" Granny turned her head, looked up at the Nosferatu glaring down at her, and breathed smoke into his face. \"If you can kill me, that is.\"\n\nAnd, again, silence fell upon the room and everyone in it until all that could be heard was the breathing of the two living creatures, and their heartbeats. Mark's, loud, panicked, and Azamel's, steady, and soft. The two old monsters stared at each other on the stage, until Triss was sure a spaghetti western song would start playing. Or, maybe, some Japanese drums\n\nFootsteps down the tunnel. Everyone turned, watched, and waited, for the source to make itself known. Athalia came out of the darkness, a grocery bag in each hand, and an eyebrow raised to match their's.\n\n\"Um... what the fuck is going on here?\" she said.\n\n\"An interrogation.\" Jacob smirked, hopped off the platform, and started to walk toward Athalia. \"Jack's missing. The elephant woman here says a mad fucker called Jeremiah is in town. Connection?\"\n\nAthalia set down her groceries, but didn't get to do much else as Jacob came in closer. Poor girl had no choice but to back up a few steps, and lean back as she noticed the bastard had an eye.\n\n\"Jack's missing?\"\n\nTriss nodded, and jogged up to stand beside Jacob. And maybe stop him if the man got a little violent, or nightmare-y. She was starting to think that maybe the man took it personally, that these nightmare monsters thought they could be scarier than a Nosferatu and his unique ability to bestow hallucinogenic nightmares. Jacob probably considered himself the scariest thing Dolareido had to offer, and these Begotten thought themselves the same thing.\n\nProfessional rivalry? Heh.\n\n\"Jack is missing,\" she said. \"And we were hoping you'd know where.\"\n\n\"I... I don't know where. Didn't even know he was missing.\"\n\nTriss almost said something, but stopped herself as the eye in her skull did its magic. A flickering image, a momentary glimpse of the other side, of the realm these nightmare creatures called home. And more importantly, a glimpse at Athalia, at true Athalia.\n\nTall, dark, waving bits of shadow as a backdrop, and a massive skull in the foreground of this monster, this entity that filled the tunnel. It had horns. Spiked, jagged and sharp. Arms too, like a skeleton's, but massive and black, dripping a black fog too, like a toxic cloud. The arms were covered in the same spikes, serrated, and they reached out from the blackness that surrounded the monster, blackness that she wore like a cloak.\n\nTriss looked up and up, and stared at it, her, the thing, skin so tight and gaunt she didn't notice it wasn't a skeleton at first. It had no legs; instead, a dangling spinal cord hung from a partly exposed rib cage in the waving shadow. Two enormous, black wings joined the darkness that surrounded it, as if someone had taken an angel and burned it to char.\n\nThe only thing that didn't scream darkness was the two, white, glowing dots in the center of its empty, black eye sockets. Like staring into the eyes of death itself.\n\nFuck, that was happening a lot lately.\n\nJacob must have noticed it too, cause he whistled and folded his arms across his chest. \"You look like a bigger threat than that Mark jackass.\"\n\n\"Mark? What? Wait, the fuck did you do to him?\" She looked past him, to where the man was sitting, and her shocked expression faded into a blatant I'm-going-to-kill-you face. Marched right up to Jacob, and jammed her finger against his chest. \"The fuck did you do to him, fucking leech?\"\n\nNot a good idea, not a good idea at all. Triss winced as Jacob raised a hand and backhanded the girl. If it'd been a normal backhand, like a dramatic scene in a movie, enough to sting, maybe even knock the girl down, that'd have been one thing. But you never knew with Jacob, and apparently the old man felt like being a colossal asshole tonight. Athalia half spun, half flew through the air, blood decorating the tunnel wall as it spewed from her lip, and she collided against the concrete bricks of where the tunnel opened up into Azamel's home.\n\nMan had no issue making enemies; hell, he enjoyed it. Antoinette definitely had the softer hand, despite the reputation of her steel will. Pros and cons to both approaches, Triss supposed.\n\n\"Jack is missing, and everyone saw you talking with him at the ball. Any idea where he went?\" One-eye walked up to her, a small hop to his step and a grin on his Joker face, before he reached down and picked the girl up.\n\n\"Jacob,\" Azamel said, \"release her.\"\n\n\"You're not giving orders here, hag. Now, you,\" Jacob said as he picked Athalia up by her throat with one hand, and pointed a finger at her with the other, \"are annoying. You're loud, you piss people off, you piss Kindred off who haven't done a damn fucking thing to you. Just cause Viktor and his sick fetishes royally fucked you over, you feel the need to shit on everyone? Man's dead, get over it.\"\n\n\"I\u2014\"\n\n\"Oh shut the fuck up.\" He threw her aside and into the main room. A vampire would have handled the physical violence better, but these monsters seemed perfectly human out in the real world. Sort of. They ate and drank, they breathed, they bled and they broke. Athalia crashed against the concrete with an audible crunch, and rolled a few times to stop on her back beside Mark.\n\nSighing, Triss leaned in toward her boss. \"Dude, seriously, you're going to burn some bridges here.\"\n\n\"And if I do?\"\n\n\"I want to find Jack alive, you know?\" She really hadn't expected Jacob to get this physical.\n\nAzamel sighed, took another puff, and waved a slow hand. \"Enough. I sense a disturbance in the dream... in one of Fiona's chambers.\"\n\nAthalia sat up, groaned a few times, and forced herself back to her feet. \"Anything to do with these fuckers?\" Woman was bleeding hate, and blood, and Jacob wasn't making it any better.\n\n\"No. Humans.\"\n\nEveryone frozen. Humans probably meant hunters. Shit shit shit.\n\n\"Mark, go home. Athalia, take Beatrice here to Fiona. I suspect the girl has run into some of Jeremiah's troupe, and they may know a thing or two about Jack's disappearance.\"\n\n\"You can't seriously\u2014\"\n\n\"Now, Athalia.\" Azamel's voice was rough, grit and age and old as dirt. But solid, and Triss could see how Grandma's words hit Athalia with more weight than the tone carried. Must have earned her role as leader of these freaks then.\n\n\"... fine. Come on leech.\" Without bothering to look Triss in the eye, Athalia started walking in the other direction, toward a tunnel on the opposite end of the room. The lights weren't working over there, so only darkness awaited them. And of course, the damn bitch didn't even wait for Triss before she rounded the corner.\n\n\"Fucking hell, wait! God damn it.\" She jogged after the monster, sighing the whole time. Jacob just had to make things worse. Now this Athalia woman hated Triss, and it wouldn't surprise her if she'd leave Triss to die given the opportunity.\n\nAt least Azamel was extending an olive branch. A flimsy one bound to break the moment Triss put her weight on it, but it was better than nothing.\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\n\"Now it's just us adults,\" Jacob said.\n\n\"Indeed.\"\n\n\"So, this Jeremiah man, got a description for me?\"\n\n\"A bit tall, appears to be in his fifties, short gray hair, with many scars. Tattoos from the neck down.\"\n\n\"I guess you've seen him in person then?\"\n\n\"He has been a thorn in my side for decades.\" The old woman shrugged, and blew another puff of smoke out to fill the room with more of the disgusting smell. \"And has nearly killed me on two occasions.\"\n\nJacob laughed, and started to pace in place, some fingers to his chin. Seeing the elder pretend to be a detective was odd, and off putting. The psycho did love to play games, keep people on their toes, Natasha included.\n\n\"A human nearly killing you, old monster?\"\n\n\"... how is it that you are able to see me, Jacob? Where did you get that eye?\"\n\n\"Think I'll tell you just because my girl isn't here anymore?\"\n\n\"Yes.\"\n\nAgain the elder laughed, and walked up to the stage to lean in against it with one foot raised to press on its edge.\n\n\"It was a gift from the other side.\"\n\n\"... the other side? What would the world of spirits want with me?\" Azamel blew smoke down at the man's face, and tapped on the cigarette so more ashes fell into the ashtray. She didn't bother to look either. Must have been smoking her whole life, however long that was.\n\n\"It's all connected, isn't it? This physical world of ours seems to be at the center of a lot of shit. You fuck with it, and they notice.\"\n\n\"There is something special about this city though, isn't there? For spirits to take notice as they do,\" she said.\n\n\"Oh there is.\"\n\n\"And that would be?\"\n\n\"Like I'd tell you, old hag.\"\n\nAzamel snorted, and again blew smoke down at him. \"You're infuriating.\"\n\n\"And you're unwanted. But, now that the problem is here, I'm going to have to ask for your help in dealing with it, with Jeremiah and whoever the fuck else he's got working for him.\"\n\n\"How quickly you change tunes.\"\n\n\"Oh, I'm sorry, let me rephrase that. Help undo this mess you've caused, or I'll rip out your fucking spine and let Jeremiah have his way with your saggy, shit-filled corpse.\"\n\nAzamel laughed. A croaking, raspy sound that made Natasha wince with each gargle of phlegm.\n\n\"Come into my home, my real home, and you'll find circumstances quite different, vampire.\"\n\nThey both sneered at each other. Natasha crouched in the shadow as low as she could, half hidden around the curving tunnel, every possible ounce of vitae she had pouring into her cloak of night. Getting caught now could easily mean she was dead, but she needed this info, needed to know what the fuck was going on. Antoinette had asked her to find out the weakness of the Begotten, and this wasn't exactly that, but it was a step in that direction. And, she needed to know, because these two old bastards knew what was going on in the city, knew about shit they didn't want others knowing. Information that could save Jack. Hell, information that could keep anything else from going to hell.\n\nOr she was completely wrong and was wasting her time. The sad truth about espionage was that it often led nowhere.\n\n\"So this Jeremiah. Think he'll go after Kindred or Uratha himself?\"\n\n\"Probably. His goal is to kill Begotten, but he has killed others, and often brings hunters with him, or attracts them to his cause. They will no doubt jump at the opportunity.\" She chuckled, another hoarse, disgusting sound, and rubbed her leg with one hand while smoking with the other. \"Could be fifty of those fanatics in the city by now. And more to come, surely.\"\n\nOh no. Natasha had no real experience dealing with hunters. The few times an incident had ever occurred in her comparatively short life, older Kindred had taken care of it. She knew Dolareido had it far better than most cities with Kindred, but now Azamel's presence ruined that. No wonder Antoinette and Jacob were so upset. Azamel said the city was already spoiled, but that could have been a lie.\n\n\"... I'll be back, Azamel. You and I are going to have a chat, a proper, lengthy chat someday. In your lair.\"\n\nShe snorted, and flicked some of the fresh ash of her cigarette at him. \"You'll find I'm not so friendly there, Jacob.\"\n\n\"Yeah well, private, right? Good place to get away from prying eyes.\"\n\nAnd then the man looked at her. Looked at her, with his new eye. She froze, stared at the man in the distance, and became stone. Don't move don't move don't move. He can't see you, your cloak of night is strong, and Jacob was no Mekhet, he didn't have auspex to see you. Or maybe he did? She knew there were ways to learn the bloodclan-specific disciplines of a bloodclan different to your own, but as far as she knew, Kindred rarely engaged in such pursuits. But then, Jacob was ancient; who knew what sort of crazy shit he did when he was younger. He might be able to see her?\n\nOr she greatly underestimated his normal senses, and he could see her without auspex.\n\nBut the man looked back to Azamel, shrugged, and turned to start walking down the tunnel, toward Natasha. His hands were in his pockets, and his gaze was downcast, a small smirk on his lips.\n\n\"See you later old hag. Don't bring my city down on my head while I'm sleeping, k?\"\n\n\"... my desire isn't to destroy Kindred, Malachi.\"\n\nHe stopped, grit his teeth hard enough Natasha could hear the bone grind. Smirk gone, shoulders shaking, the one-eyed beast squeezed his fists at his sides until they were trembling. But he moved on. With some time to calm down, he wiped his shoulder clean, as if he was dusting his sandals free of the dirt of Azamel's presence, and continued on down the tunnel. Toward Natasha.\n\nNatasha slipped back around the curve of the tunnel, and faded into the darkness of a doorway. No lights in this small section of the tunnel worked, and the doorway, though locked, had flat walls carved into the tunnel side. She sat down on her ass and feet in the corner of it, her side pressed to the wall, and her cloak of night dialed to the point she was struggling to maintain it. Draining, so very draining to keep it up this strong, but she wanted to know more. Really, really wanted to know more.\n\nWhat was it about Mekhet that they just couldn't help but be drawn to secrets? Stupid. Stupid stupid stupid. She should have just bolted the moment Jacob turned around. Run like a smart person. She was a young ancilla, and Jacob \u2014 or Malachi apparently \u2014 was very old even by elder standards. Vampires got stronger as they got older, and everyone knew Jacob, Antoinette, and Daniel were ancient.\n\nSo she should have been smart enough to just run away when she noticed Jacob had turned around. But, nope, here she sat in the corner of an alcove in the subway tunnel wall, in the pitch black, doing her best to not let two old monsters realize she was spying on them.\n\nJacob came closer. Came closer. And then, passed her. Further, and further. She tensed every muscle in her body, stared at him from her pocket of darkness, and waited. He might still turn around, might still notice her, might still chase her down and tear her a new one for eavesdropping. Hell, he could kill her if he wanted to, and no one would know, no one would be around to report it. She'd be another disappearance, like Barry, like Jack.",
        "She crept along after the terrifying, horrible, nasty man, and chewed on her bottom lip as she kept him at the edge of her sight, where the tunnels turned. Face against the concrete brick, she inched forward, each step soft and perfect. Not a sound, not a breath, not anything, just pure silence as she followed after him for another ten minutes. Ten minutes of walking, ten minutes of her draining her vitae until she was starting to feel the hunger of it absence, ten minutes of quiet stalking in darkness.\n\nAt least it wasn't like the last time she was stalking in the tunnels, when it turned pitch black and she'd run into all those spider webs. Ugh. She shivered with the memory, and dusted her shoulders free. No webs, but it still felt like they were on her. Spiders were nasty, and gross, and she didn't care if that sounded horribly juvenile and girly, because it was completely true.\n\nShe rounded the next bend of the tunnel, and petrified. Gone. Jacob was gone.\n\nShe put one hand on her sword, and stared. Where was he? He couldn't have just vanished. Did he use his cloak of night to hide? She could\u2014\n\nTightness grabbed her neck, and lifted her into the air. She tried to scream, but the grip on her throat was too tight to let air through. She tried to kick, to punch, but her assault bounced off the bastard's body as he held her at arm's length. She reached for her sword, but his other hand found her wrist, squeezed it hard enough it forced her grip to deadlock too loose on the sword grip. Helpless, in a split second.\n\n\"You're probably wondering how I noticed you. Mmm?\" He pulled her in closer, and grinned a psycho's grin as he eyed her with his weird one eye. \"Mmm?\"\n\n\"G... g...\" Couldn't talk, couldn't say anything, couldn't even argue that he shouldn't be doing this. She kicked at him again, and again, and again, but her shoes bounced off his legs and stomach. She considered kicking him in the balls for a second, but even if that did manage to loosen his grip, it would surely spell her death.\n\nThe psycho witch chuckled, and began walking down the tunnel again, away from Azamel. Still holding her by her throat, and her wrist, and grinning his crazy grin between insidious chuckles. Please please please don't kill me.\n\n\"Too bad for you, I won't tell you. Hmmm, hear anything interesting while you were spying?\"\n\n\"G... g...\"\n\n\"No? Well I thought perhaps my mention of where I got this eye, the talk of spirits, or perhaps this Jeremiah fellow, that all of it would be interesting to a little sneak like you.\"\n\n\"G...\" She couldn't talk! He refused to let her breathe, to use the air to speak. If anything, his grip was only getting tighter, and she stared wide-eyed as his grip started to do more than just block her windpipe. It started to hurt, a lot, muscle and cartilage crushing under his fingers until she felt things bend that shouldn't bend. Pain came a moment later, and she squeezed the wrist of the offending hand with both of hers, desperate to get him to let her go.\n\n\"Yes, I knew you were following me from the onset, little Vola. I have more tricks up my sleeve than a young creature like even knows exist. Don't try and spy on me, or I will rip your arm off.\" His other hand let go of hers, took her arm near the shoulder, and began to squeeze. Nosferatu were strong, like Daeva, capable of punching through rock, concrete, even steel if they had enough age and power to back it up. Jacob had it in spades, and she squeezed her eyes shut as the man started to crush her shoulder all the harder.\n\n\"P... P...\"\n\n\"And unlike your two boyfriends, I don't think you're cute. I think you're weak. Typical Mekhet, sneaky little fuck, with prying eyes and a fast step, useless without a sword and more useless when someone shines a light on you.\" He brought her in closer, closer, until his face was only an inch from hers. \"Think you'll survive when a true veteran like this Jeremiah fuck starts hunting us, starts burning us out of our little hidey-holes, starts finding our hideouts in the day while we're asleep, starts laying traps with fire and shotguns, and silver for your fuck buddies?\"\n\nAt last he let her neck go. Or not really, but he did relax his grip enough she could use her lungs again.\n\n\"I... I was j-j-j-j-just... I um... w-w-was...\" Ok, she could talk now but didn't know what to say. Uh oh.\n\n\"You might survive, now that I think about it. Sneaky types do have a habit of doing that, surviving, where others perish. So, Natasha Vola of the Ordo Dracul, you and Annie stumble onto anything interesting lately? Perhaps some spirits of note or renown have visited your tower?\"\n\nThis bastard knew everything. How did he always know everything?\n\n\"M... m-maybe?\"\n\n\"Well aren't you a cheeky little shit.\" Jacob brought her so close their noses were touching. Gross gross gross, staring into his eye and his empty eye socket. No eyelids on the empty one, just destroyed flesh.\n\n\"You... you shouldn't d-do this.\"\n\n\"Do what? Haven't hurt you yet.\"\n\n\"B-But you're going to.\"\n\n\"Am I? Not exactly sure what I'm going to do with you yet. I don't like being spied on.\"\n\n\"You... must have known I w-w-was spying on you... b-before you started talking to Azamel though.\"\n\nHe nodded, smiling and nodding as he held her out at full arm's length, and started walking. \"Smart little fucker.\"\n\n\"Th... thank you.\"\n\n\"You're welcome.\" A chuckle or two later, he did a few hops, some of them landing on train tracks, some on the ground, each random and way too much like a young ballerina being silly. \"We don't talk much, you and I,\" he said, her still dangling from his hand.\n\n\"... yeah.\" Elders generally only talked to elders, or their subordinates. She was neither.\n\n\"Your dainty, weak shtick grinds my gears. Really makes me want to slap some sense into you. Fucking half a century of being a vampire, and you still can't take anyone in a straight fight. And probably never try.\"\n\nOw.\n\n\"I... it d-d-doesn't... there's usually a w-way to\u2014\"\n\n\"Oh good god, get a spine, you worthless little mouse. You can't always solve everything by being smart, or quick, or sneaky. When push comes to shove, it's often the strongest who comes out on top, and you? You can't even form a sentence. You're so weak you\u2014\"\n\nShe shot him.\n\nSomewhere along the line, her hand had snapped to her pistol instead of holding his wrist. Being insulted like that burned, and after a few of them, she didn't want anymore. Art and Matt told her to be more aggressive, or people were forever going to tread on her, to steal away opportunities from her, or maybe even get her into danger. It'd do her some good, they told her, to run on instinct for a second here or there and see where it took her.\n\nProbably a bad time to do that. \n\nShe landed on her feet once Jacob dropped her, and took out her sword with her other hand. Definitely a bad time to do that, as Jacob snarled in pain and stepped back several times. One of his hands came up to his face, to his neck where she'd put the hole, and covered the wound for a moment, only to pull his hand away and look at the Kindred blood that coated his palm.\n\n\"You shot me.\"\n\n\"D-D-Don't... think just cause I hold my t-tongue, or use my... b-brain, that... that I'm weak, Jacob.\" There was flirting with death, and then there was pissing on its face and seeing if it decided to retaliate.\n\n\"Well, color me surprised. Those wolves rubbing off on you? Well, rubbing and getting off, for sure.\" The psycho licked his lips, and leaned his head to the side. In mere seconds, his neck healed, a wound that would take her a day to restore.\n\n\"And st-stop making fun of my relationship with them! It... it's private, and... and least I have one!\"\n\nJacob's lips settled on a snarl, and he started to walk toward her. She really should have been running, or maybe shooting him a whole bunch and running at the same time. Yeah, running was actually a pretty good idea, she should be able to outrun him.\n\n\"You got bite, Vola. I like it!\" He stopped walking toward her, shrugged, and licked one of his fangs in obvious, dramatic fashion. \"Been a while since a Mekhet has surprised me. Damien did, at least for a little while, before he replaced you as that bitch's slave.\" Wiping his thumb on his lips, he motioned for Tasha to stand beside him.\n\nShe gulped, and with trembling hands, put away her sword and pistol. If he wanted her dead, she'd be dead, sooner or later. Even if she hid in the Prince's tower, she couldn't hide in there for forever, and eventually the man would find a way to kill her. But if aggression was how to appeal to Jacob, maybe she could work with that.\n\n\"I'm... I-I'm looking for Jack,\" she said as she stood beside him. Kept him in the corner of her eye, ready to bolt, but he did start walking again just like before, along the tunnel toward wherever he was planning to go. Maybe he was genuine. So damn hard to read him, this Malachi.\n\n\"You and everyone else. Triss has gone to lala nightmare land with that bitch Athalia, in hopes she may find some clue as to his disappearance. Want me to ask Azamel if you can go in with her?\"\n\n\"Um... n-no, I think uh... think I'll d-d-do better out here, with my feet firmly on the ground.\"\n\nHe chuckled, and faced her as he raised a hand to the cheek of his new eye. Pulling down on his cheek, his smile grew, and he stared at her with the strange, normal looking, but very weird eye.\n\n\"You work for Annie now, so get used to seeing some strange shit.\"\n\n\"I... there has been... strange things, y-yeah.\"\n\nAnother laugh. Man just loved to laugh, and each time he did, he put a different angle on it, a twist, each with its own personality. This one sounded intrigued almost, like she imagined Hannibal the Cannibal would sound when having a delightful conversation at tea time.\n\n\"How goes your search for Jack?\"\n\n\"I c-can't find him. He's gone, and the P-Prince is furious, and I thought maybe Azamel would know something... b-b-but then I saw you and Beatrice, and...\" And she decided to sneak sneak, because like Jacob said, she was a sneaky person. Apparently, a ballsy sneaky person.\n\nWhen did that happen? Used to be a time she would timidly obey Maria's orders, and nothing more. She became a right hand to the Invictus because she was smart, and fast, good at sneaking, and had a talent for auspex most Mekhet did not. Maria gave her an order, and Natasha could get it done, quietly, with no traces and no suspicions.\n\nThen, she'd asked Julias to kill Viktor. A scary request to say the least, and from then on, each month had been pushing her just a little further into making rash, dangerous moves that were liable to get her killed. Shooting Jacob in the neck was the culmination of a lot of changes, and it could have easily ended her second life. Except, it seemed to be exactly what the man wanted, for someone to show some spine and have the guts to challenge him on things. Dangerous, so very dangerous.\n\n\"It'd be a shame if the kid's dead,\" Jacob said. \"Hopefully Triss and that cunt learn something.\"\n\n\"... do... d-do you think this Jeremiah person has Jack?\"\n\n\"Probably. Or he's killed him already.\"\n\nShe shivered, rubbed her arms, and looked up at the elder. \"Sorry... for shooting you.\"\n\n\"No you're not. Don't be a bitch now and ruin what goodwill you just earned.\"\n\n\"S\u2014\" No, wait, not sorry. \"... you deserved it.\"\n\n\"Heh, damn right.\"\n\nOh god trying to get along with this man was like trying to get along with a volatile explosive. Perfectly content to sit there, quiet, not exploding, as long as she treated it just right, and how it liked to be treated was a gamble to figure out.\n\n\"And J-Jeremiah is hunting Azamel?\"\n\n\"Yeah. Probably a Moby Dick situation if I'm guessing right.\"\n\n\"... so Jeremiah is Ahab? And Azamel is the w-whale?\"\n\n\"Correct. It's just a hunch, but a good one, if this human has been hunting Azamel all this time.\"\n\nNot good. Ahab got his crew slaughtered on a futile quest to kill something that had hurt him. An insane man willing to get other people killed in order to reach his goals. And he was a captain at that. If Jeremiah was of that disposition, then Natasha could understand Azamel's retreat to Dolareido. Putting a bunch of vampires between her and Jeremiah was a smart plan.\n\nFor someone like Azamel to fear a human had Natasha shivering again, and she rubbed her arms a few times more as she and the scariest vampire in Dolareido walked the abandoned tunnels. She could run from a vampire, could sense him, spot him, or at least rely on the political situation of the covenants to hopefully not get killed by them. With Jeremiah or his hunters, she wouldn't be able to do any of that.\n\nA few seconds of silence went by. She was waiting for Jacob to talk, to offer information; but, that was dumb. He liked aggression, so be aggressive. Ask questions.\n\n\"You have an eye n-now.\"\n\n\"Yeap.\"\n\n\"H-How?\"\n\n\"Blood magic.\"\n\nOh god.\n\n\"W-Why di\u2014\"\n\n\"Begotten are nasty fucks, and they hide all sorts of surprises. Eye let me get a better look at them, at what they are; for the night at least.\" He laughed, leaned in toward her, and pulled down on the cheek with the eye to expose the white of its sphere. \"Sexy?\"\n\n\"Um... it-t might have been... if you had two.\"\n\n\"True. Triss took the other one.\"\n\nOh god oh god. Ok yeah, no more asking about the blood magic. If Triss had a new eye, that meant she had to get rid of the old eye somehow. She winced just thinking about it.\n\n\"... w-want to tell me anything about them, the Begotten?\"\n\n\"Ha! Want to know how to knock them down a notch, don't you? I'll give you one hint, Mekhet, just because you've impressed me.\" Jacob hopped up onto an abandoned subway platform, and walked over to the ladder, used by repairmen back when the tunnel was used. \"Begotten are like vampires, in a way. We're killed by fire, and sunlight. Werewolves, silver rips them a new one. What are Begotten weak to?\"\n\n\"I... d-don't know.\"\n\n\"The problem isn't so much that we don't know, but rather, Begotten are each unique in a way. That Mark fellow is some sort of corpse, a skeleton, and he's also the insects inside it. His weakness will have something to do with that, I'm sure. \"\n\n\"Unique...\" Oh. Well, damn. Finding out the weakness of the whole race wouldn't be possible then, but rather, she'd have to learn about each individual Begotten and figure out their weakness that way.\n\n\"Fiona's your friend, ask her if she knows much about Azamel or Athalia. Don't let her know why you're asking of course, but keep an ear open. Azamel herself is a very old monster, and I'm sure her weakness is rooted in the nightmare that she is.\"\n\n\"... w-w-what nightmare is that?\" she said. Didn't bother to ask why he was being so helpful, gift horse and all that.\n\n\"Oh, a very old nightmare, a twisted thing from a twisted mind, surely. People, many of them, somewhere, hundreds and hundreds of years ago must have dreamed up that monstrosity. What horrible history could have led to such a horrible thing, I don't know. A butcher maybe, a king or queen, who abused a godly image? Who knows. Certainly wouldn't be the first time someone's used the image of a god to fuel their own, blood-soaked agenda.\" The elder tapped his nose twice, and winked. \"Some poor soul dreamed a nightmare, and now this woman looks like a giant with an elephant head and four arms, some sort of twisted, horrible abomination of the original.\"\n\n\"Ganesha? Hinduism?\"\n\nJacob shrugged, and began his climb up the ladder. \"Ganesha, before an ancient, Eastern temple, surrounded by tortured kine. Granny has quite the eye for decor.\" Laughing all the way up, Jacob gave her a tiny, finger-wagging wave, and disappeared. No goodbye or stereotypical parting words elders often had.\n\nThat description didn't sound like what Natasha knew of Ganesha, not at all. But, it was a lot more than she knew about Azamel five minutes ago.\n\nTriss was in a nightmare world now, apparently. Natasha wasn't able to watch Triss's departure from her hiding spot, but Triss was indeed gone, and she too was looking for Jack. So, Natasha pulled out her phone, and\u2014shit, no reception in the tunnel. She almost followed Jacob out, then, decided against it. Better to find her own exit. \n\nBack on the surface, she again tried to call Triss. No answer. Either she was still deep in the tunnels, or she was in, as Jacob put it, nightmare lala land.\n\nUgh, she was never going to find Jack at this rate.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nThe prisoner main lobby. Two floors, with some stairways rising from the tile floor to balconies, where more gates were half opened into more hallways. The lobby was also blocked off by a gate, that lead to a proper lobby where civilians could come and go. An old fashioned building to say the least, old, run down, with decades of use under its belt.\n\nThe room had a large counter in the middle, circular, with several shitty old chairs in its center. In a newer prison, computer terminals would have been set up there to control all the gates electronically. But in this prison, everything was old, and the keys were nowhere to be found; which meant the gate to the civilian lobby was unlocked. Good thing, cause Jack wasn't strong enough to break open gates made of metal bars and locked in with steel.\n\nDid the hunters have more chains and locks? It'd have been smart to lock the place down somehow at least, but after looking around, he found no chains on the gates. Or, maybe one of the five hunters now dead or brainwashed had been responsible for managing padlocks and chains. In either circumstance, it was obvious his escape was unexpected, something they hadn't planned for because the idea of young, little him escaping seemed absurd to them. He had an advantage, and he was going to take it.\n\nHe stood at the gate before the prison lobby, and looked around. His two guards stood in front of him, each with shotguns raised and checking out the million places the enemy could shoot at him from. The circular counter in the center was obvious, and Jack couldn't see into it to be sure it was empty. It looked like the balcony around and above him was empty too, though the gates they held were all unlocked, and more hunters could have been waiting for him in there.\n\nHe looked down at his army. \"You, check the counter. You, check the hallways down here. And you, check the hallways below. Report back if you see any humans.\"\n\nA host of the tiny bundles of fur nodded, and ran out onto the dingy tile of the prison floor. Twenty for each command, more than enough to survive any potential gunfire. And Jack braced for it, for the explosive sound of guns unloading bullets upon his army as they scouted the area. But none came.\n\nNo way the hunters just left him to his devices. No way they'd just let him escape. But the rats eventually returned, and each of them reported no one.\n\nBut, they could smell something. Hell, he could smell something. A chemical?\n\nHe raised the corner of his mouth in a snarl, and motioned for his two guards to go forward. \"Stay near me, ahead of me, and protect me with your lives.\"\n\nThe two tools nodded, and stayed at his side as he walked out into the exposed position of the prisoner lobby. No one behind the counter. No one above him, at the dozen perfect positions for someone to shoot at him. The lights were on, but no one was home.\n\nNo way it was this easy.\n\n\"Jack.\"\n\nHe spun around. In the distance, past the lobby, past the gate, past the civilian lobby, and at the open front door of the prison, stood Angela. Five hunters stood with her, weapons at the ready.\n\n\"Angela.\" He stared at her in the distance, and his two guards sprinted forward. \"No, wait. I want to hear this.\" Without skipping a beat, the two tools came back to his side, and waited.",
        "\"You killed three of my men.\"\n\n\"You were going to kill me. You honestly think I care?\" The concrete walls and the empty hallways did wonders for carrying the voice, and the two of them talked as if only a few feet from each other.\n\n\"Your life is worthless, vamp. Fuck, you're already dead, and you have the fucking nerve to compare yourself to the lives of the living?\"\n\n\"... I am what I am, human.\"\n\n\"Yeah, a cancer.\"\n\n\"I don't blame you for hating me. The mouse hates the cat that kills it.\" He snarled again as he stepped forward. The distant humans took a step back despite the range, except for Angela.\n\n\"You don't get to kill me.\"\n\n\"... you are different from your hunter friends, aren't you? You and Jeremiah, not entirely normal.\"\n\n\"Fuck you, I'm human.\"\n\nJack took another step forward, and again the hunters stepped back, except for Angela. The humans were retreating, she wasn't. What was she? What was so different about her and Jeremiah? Christ she looked familiar.\n\n\"I'll say it again, get out of my way, and you get to live.\" And he knew that wouldn't happen. Empty words, meaningless, and he wasn't sure he'd let them live even if they let him go. Way too dangerous to keep them alive. And, he really wanted to inflict pain on that woman, grind her face into a bloody mess under his heel, break her limbs, and drink her dead.\n\nHe licked his fangs as he came closer still, his two guards in front of him at each shoulder, and his rats flooding over him. Many climbed up his pants, some settling on his knees with claws digging into the fabric, while others poured over his ankles, and several took anchor on his shoes. Others poured around his two guards, and of their own volition, climbed up their bodies to perch on their shoulders, their heads, all their limbs, scurrying and squeaking.\n\nEventually Jack and his bodyguards stood at the gate between the prisoner lobby and the civilian lobby. \n\nAngela took out a lighter, one of those larger ones with the flip top. She flicked it on, then closed it. Opened it, flicked it on, closed it. Her smile grew as she did, and she took a step closer to meet his gaze as she played with his bane. And then, grin growing so big she'd have given Jacob a run for his money, she lit the lighter, then dropped it.\n\nAs it fell to the floor, he realized what that smell was.\n\nIt spiraled around the lobby ahead of him, flicking left and right, snapping at the air and whipping through the only exit to the prison available to him. Red, scorching, the searing death, vampire's bane, engulfed the room, up and down the walls in zigzags, and racing across the floor in swirling spirals. Fire, dancing across the trails of gasoline.\n\nHe jumped back, threw himself back, every Kindred reflex taking over and shoving him away from the red death as it sped at him. No idea, he had no idea fire could run across gasoline this quickly, and it licked at his shoes as he flew through the air, back and away ten feet. The fire stopped short of him, its wicked flame not passing the gate. Angela must not have had time to coat the prison lobby, thank god.\n\nIt didn't stop there. Laughing, maniacally at that, Angela held out a hand to one of her fellow hunters. He set a glass bottle in it, with a white piece of fabric jammed into its mouth, on fire. A molotov cocktail.\n\nShe threw it. She had a really, really good arm, and with the front entrance of the building opened, she had a clear shot across the lobby to the gate that separated him. The glass flew straight, like a fucking professional pitcher, and smashed against the bars near Jack.\n\nFire. Everywhere. It exploded around him, engulfed everything in the red death, blanketed his eyes and screamed its fury at an undead thing in its presence. Dead, so very very dead.\n\nExcept, not dead. In a fair bit of pain from many claws digging into his skin, but not dead. He could not say the same for many of his army, his loyal subjects now screaming shrill squeaks and squeals as they burned. The smell of burning rat fur and flesh curled his nose, and he jumped back from the shrieking chorus, arm raised to cover his eyes from the wave of heat. So close, so very close to the fire hitting him, every vampire instinct he had was shrieking right along with the hundreds of dying rats.\n\nBut, sad as it was, it was only the rats who were damaged. They worked as a carpet and had covered him and his two hunter tools, some leaping out to block the flammable liquid as it splashed through the air from the bottle's impact against the bars. The only reason he was alive was the sheer amount of rats that had come to him, to block death for him. So very close to dead, and so very close to his two hunter tools being set on fire right along with him.\n\nHe snarled as he stared on, through the flames ahead of him, through the flames that flicked across the bars of the unlocked gate before him; except, now the hallway was barred with flame, and flame was a better barrier than steel. Another growl escaped him, its inhuman sound alien to his ears, but another again came, until the hunters in the distance took another step back, their eyes widening. The psychopath, on the other hand, barely noticed.\n\n\"You don't get to leave,\" Angela said. \"You get to burn.\"\n\n\"It's a concrete building! The fuck do you expect it to do, melt?\"\n\nShe laughed. Her fellow hunters laughed as well, nervously, and seconds later. Girl reeked of a super villain, with the dramatic poses and pompous speeches to go with it.\n\n\"You're mind controlling a bunch of shit right now, stupid vamp. You can't keep this up for forever, and this exit's the only way out of the prison. Sunrise will get here eventually, and we have all the time in the world. You on the other hand, are running out of it.\"\n\n\"Did you read that speech on the back of a cereal box?\"\n\n\"Ha ha. Fucking joke all you want, fucking Ventrue, but you're not getting out of here. Trapped, like a rat. Fitting, huh?\"\n\nHe grit his teeth until his fangs came out again. She was right. This insane, ridiculous nutjob of a woman was correct, and that boiled his blood almost as much as the fire covering all his exits.\n\nHe backed up until the counter of the prisoner lobby was against his back, and looked around. Above him were the catwalks that led to other hallways, probably of the exact same style as the one he came from. To the side, similar hallways. Behind him, another big gate that opened up into what looked like an outdoor area of some sort, some place where the prisoners went to do their allotted exercise. It had no ceiling, but there was no way he was going to be able to climb out of there, with its smooth, high walls and barbed wire.\n\n\"Panicking yet?\" Angela yelled out. She was maybe a hundred feet away, and yelling super loud wasn't really necessary. Or at least, it wasn't, until one of the hunters threw another molotov down the lobby again. Glass shattered, gasoline went everywhere, and Jack stepped back again as he watched the flame snatch up the liquid. Bits of fire flew through the air like evil fireflies, and they landed on his escape path with reckless abandon.\n\nAnd just as the fire was starting to die down, things only started getting worse. There were still a few hunters around Angela, but some others had disappeared, only to return with torches. How the fuck they had torches, he didn't know. They were hunters, and if there was any paranormal creature hunters were used to dealing with, it was probably vampires, which meant they had the means to burn him alive. Lots of different ways to burn him alive, probably. Considering the amount of people he'd already dealt with, and the amount of people he still had to go through at a minimum, there was probably a lot of tools they had at their disposal.\n\nHis one advantage: they hadn't expected him to get out of his cell. Their tools weren't on them, and they had to fetch them; at least, fetch the fancier tools. Except, one of them did just that, and Jack's heart sank as one of them handed Angela a large gun-shaped tool. A blowtorch was bad, but a flamethrower? That was not something any vampire could handle easily, free of shackles or not.\n\nHe stepped back again, or tried, but the counter was behind him, and going further back was pointless. Every path he could take was a dead end. It was a fucking prison after all.\n\n\"Henry, Stacey, either of you know another way out of this prison?\"\n\n\"No, master,\" they said. He knew they'd say that too, god damn it.\n\nAngela, armed with a flamethrower, stepped ahead of the hunters behind her. They had molotovs, pistols, torches, and god only knew what else. He was sure they'd tie him up and burn him at the stake if they weren't afraid he'd brainwash them first. Angela was laughing, each step she took marked with more laughter, and every so often she shot the flamethrower. The spewing beam of liquid carried the red death on its wings, and the flame whipped the air into a hazed frenzy of blurry chaos as fire marked the walls, and the floors around Angela's path, but not in front of her path. Whenever her and her hunters came upon a patch of burning, they hopped around it or over it, except Angela. Angela stepped on it and kept walking. As long as she walked quickly, the fire would not catch to her, and no doubt she did it because she thought it would intimidate him.\n\nShe was right. She could get close to fire, have it touch her, tickle her boots or pants, brush against her skin, but for a human it was as simple as not standing in the fire for more than a second to prevent skin or hard fabrics from burning. For a vampire, each second in a flame would have meant serious damage, and the agony to go with it. Fucking hunters knew his weakness, knew how to exploit it, knew how to embrace flame and its fickle nature, knew how to wrap it around themselves and protect themselves with it.\n\nIt wasn't him using a surprise advantage to take down a few hunters anymore. Now it was him, trapped inside a rabbit hole, and the hunters were after him. So close to getting out, but he'd underestimated how quickly they'd have reacted to his escape. He'd stirred the hornets' nest.\n\nWhatever happened to those action movie scenes, where the hero, once captured, manages to escape, and then proceeds to slaughter everyone in the facility that held them? Why wasn't it that easy? Why couldn't these hunters just be really dumb, and stand around waiting for him to come to them, so he could kill them one by one, or in pairs? Reality wasn't so kind. These hunters had brains, and once they'd realized what was happening, they'd retreated to a bottleneck and reestablished the offensive using the one weapon he couldn't fight.\n\nThe one weapon he couldn't fight directly, at least.\n\n\"Stacey, Henry, march forward. Fire at will. We're leaving.\" The longer he sat back, being defensive, the more they'd box him in. Now or never.\n\n\"Yes, master.\"\n\nTheir minds crashed against the shackles he'd placed upon them, pushed against the boot crushing them beneath him, and cried out for mercy. But as each tool glanced at him, he gave them a glance back, and offered a quiet, rumbling growl. Their tiny minds broke once again, silenced beneath his boot, and they began their march of death.\n\nThey weren't going to survive. And that was fine.\n\n\"Hey, guys! Come on, you still in there? You keep doing this and I'm sorry but you'll have to die to get to the kid.\" Angela stood in the center of the civilian lobby, fire surrounding her, fire on the main, large desk in the center of the room, fire on the walls, fire trickling from her flamethrower. There was a grin there, mixed with a touch of concern maybe. Maybe she did actually care about these hunters she was going to get killed, but if she did, she cared about killing him more.\n\nIt was a half-ass attempt to break through his mind control, and token, futile, and she knew it. Not the hero she was pretending to be, not the hero she probably convinced these hunters she was. The hunters weren't nearly as quick to kill their friends, he could see it in their eyes, in their movements, in their everything. They wanted to save Henry and Stacey, save their friends from the horrible vampire that had taken their minds and already killed three others.\n\nFuck them.\n\nJack's tools raised their pistols, and began their assault. He followed after them, and as the two tools stepped over the fire, gunshots started to fill the air. \n\n\"Don't make us kill you!\" One of the hunters said, a man, tears in his eyes and on his cheeks reflecting the flickering flames that surrounded him. Their original plan had gone so wrong, usurped by the monster they hadn't suspected capable of this madness. Just a simple catch-and-kill job for them probably, just another day breaking a demon, learning what they could from the soulless monster before dusting him.\n\nThe drama would have been overwhelmingly sad, if he wasn't the monster on the other end of that plan. Instead, the sight of the man in tears over the inevitable death of his friends was frustrating, and infuriating. How dare they, how dare these fucking ingrates be upset over this outcome. They started this, this was on them. Fucking insects.\n\nAgain, his tools hesitated as they aimed their pistols. They paused, each casting a glance at Jack. He returned it, and offered them each a soul crushing word.\n\n\"Now.\"\n\nHenry and Stacey stepped forward once again, and began firing.\n\n\"Henry don't!\"\n\nThe hunters jumped out of the way, each diving behind various tables, chairs, and Angela herself jumped back to get into the circular desk in the center of the civilian lobby. She was still too far to attack him with the flamethrower, but the others had pistols, and molotovs. They seemed hesitant to use them. Their loss.\n\nJack pointed his hands forward. \"Go. Kill them.\"\n\nThe army of claw and fur ran before him, and all was brown and flame. Many rats succumbed to the fire they ran over, and some were no longer enslaved as the fire took them. They shrieked their death cries and ran against the wall, while others ran forward, bodies of writhing flame entering the second lobby, only to die to the flame's power.\n\nEach rat that died so horribly hurt him, made him wince, made him grit his teeth all the more. The beast in him identified with these little scavengers, scurriers in the dark and hiding from humanity, more than it ever could with the humans trying to burn him alive.\n\nHis tools took advantage of the chaos, stepped into the second lobby, and fired. Their bullets tore into the furniture and the desk, ripping shards of wood up into the air, only for it to join the fire that surrounded them. It kept the enemy hidden behind furniture, and an opportunity for rats to pour out into the frenzy. The hunters were quick to use torches to fight off the rats at their feet, but it kept them pinned down, as planned.\n\nJack followed the rats, slow steps, many soaking his shoes in the blood of his dead servants. No time to pity them anymore, he had hunters to kill. The hallway of fire could not be escaped, it surrounded him, covered the floor ahead of him, and as he approached the flame, more rats threw their bodies onto the red death. Their fur burned for only moments before only their corpses remained, and he again stepped on them, spreading their blood and soaking his steps in death.\n\n\"Forgive me!\" One of the hunters popped up from behind a nearby overturned table, and fired. Stacey went down, a splatter of blood coating Jack's body as God apparently thought the situation needed to be more horrible. Jack stared at the shooter, only for the offending hunter to point his pistol at Jack, and begin firing.\n\nBullets hit him, tore through him, ripped apart his insides and got lodged against his bones. Two ribs cracked as the hollow-point rounds collided with them. Another bullet hit him in the stomach, and he stumbled back several feet as it lodged into his guts. And yet another slammed him in his leg, and he fell to a knee as the muscle gave way.\n\nHe glared at the offending hunter, and watched as karma reaped its vengeance. Bullets slammed into their shoulder, their chest, and their neck. The blood sprayed, followed by the bits of tearing flesh, and the screams. Jack's remaining guard had adjusted his aim, fired upon his comrade, and didn't stop firing until the offending human fell back, clutching their neck with their only good arm.\n\nFool would have been fine if they had ducked behind their table more quickly. Shooting their friend Stacey had no doubt given them pause, a pause Jack's tool did not reciprocate.\n\n\"Fuck you! Fuck you!\" Another one of the hunters unloaded their ammo, poking out from behind the same desk Angela was hiding within. Bullets whizzed past Jack, slamming into the wall, into the metal bars behind him, chunks of concrete showering over the fire and dead that surrounded him.\n\nNot just one hunter shooting at him now, three of them were. They poked out from behind their chairs and overturned tables, eyes locked on him, wide, glaring. They were shooting at him, but not at their friend Henry, who slid down onto a knee beside Stacey, picked up her pistol while tossing his aside, and began firing that one instead. \n\nMore bullets flew past Henry, aimed at Jack, many going wide as the hunters were forced back into their hiding spots by Jack's only remaining guard. No time to set up good shots on him, not as Henry continued to shoot at them, and not as the rats continued to pour over the floor, earning their ire. Half the time, the hunters were tossing molotovs at the floor or waving their torches at it, blocking the path of the rats as best they could, then resumed shooting at Jack.\n\nThey were good shots. Jack forced himself back to his feet, only for another bullet to slam into his shoulder and force him back a foot. In the chaos, in the flames and the screams, dodging bullets and holding an army of rats at bay, the hunters continued to shoot at him. Another bullet sank into his other leg, and he screamed as his body tried to stumble with it. Tensing muscles and aching bones kept him upright. Another bullet caught him in the waist, tore through his obliques, and created a hole to his insides. Another again caught him in the neck, took a chunk of the side out, exposing the throat within.\n\nHe stayed standing, and pointed with one of his stumps. \"Get him first.\"\n\nThe army of rats picked a new objective. Instead of swarming randomly, they changed to his target. No longer rapids of random brown joined by burning fur, the rats pooled together, piling high until they flowed over the table the hunter was hiding behind. His army met fire, met gasoline, met bullets, but there were simply too many of them, and they flooded over the man.\n\nHis screams joined the inferno as a thousand rats began to tear into his body. Jack had hoped he might stand up, so Henry could shoot him, and Jack could guide the rats to a new target. But the man fell behind the table, rolling, screaming, but out of sight.\n\nAngela stood up from behind the counter, and unleashed hell upon the dying man. Somehow, she held the flamethrower in one arm, and unleashed the river of fire on her doomed comrade. At the same time, she fired her pistol at him with her other hand. No need to see the carnage to know what was happening. Angela was killing the hunter and his rats at the same time, putting her follower out of his misery while destroying hordes of the little scavengers while they were vulnerable.\n\nHenry was still standing. They didn't want to shoot their comrade. Or at least, the hunters didn't. But once Angela was done with the man covered in rats, she turned to face Henry. The tool had been shooting at another hunter, and Angela took the opportunity, firing the flamethrower around the desk, while at the same time firing the pistol through the flames at Henry. One hit the man in the shoulder, and he went down.",
        "Too much chaos, too much insanity. Jack could barely see through the flames anymore, as the bodies piled high and the thick smell of burning flesh filled the room. It was a horrible smell, sizzling fat and blood and muscle and skin, not too dissimilar to pork, but pork or not, none of it appealed to a vampire's nose. It joined the maelstrom of death surrounding him, crackling fire and licking flames on the walls, and the air around them bending and twisting with the fumes and growing heat.\n\nHis mom used to cook chicken wings in the oven, and he liked to stare into the oven through the glass window as they baked. The sounds and sights that surrounded the chicken wings, the glowing heat, the wavering air, the crackling of flesh, it sometimes made him wonder how horrible a torture it'd be to be in that oven. He didn't wonder anymore.\n\nMore bullets came for him, but they went wide again as Henry got up on a knee, began firing more to keep enemy heads down, rather than trying to pick his shots and go for kills. But, even in the scorching inferno and roars of hundreds of rats, Jack recognized the sound of an empty magazine.\n\nHenry dropped the gun, took out his knife, and ran for the side of the counter where a woman hunter was standing up and aiming for Jack again. The tool jumped at her, knifed raised, and the woman had no choice but to turn to him, raise her hands, and catch him. An opportunity for Jack then. The hunters would probably all come to the same conclusion: if they could get Henry's knife away from him, they could save him.\n\nBingo. The three other hunters ran over to Henry, and jumped him. A brawl, arms and legs kicking out, and Henry slashing at his friends as they did their best to catch his wrists. A perfect opportunity for an observant Ventrue to get in close, and break them to his will.\n\nOr at least it would have been. Angela didn't turn, didn't try and save Henry, didn't even so much as throw the man a glance. Angela slid over the counter, and started shooting at Jack.\n\nSurrounded by fire, its whispering curves along the walls and tile floor, he could do nothing but send more of his rats forward. Angela waited for them, a big grin on her face as she unloaded bullet after bullet after bullet through the haze and dancing fire, while at the same time, spreading more of the fire around the floor. He was still too far away, a good forty feet, for her handmade flamethrower to reach him directly, but each bullet she shot landed against his chest, some skimming along his face, and one ripping the side of his cheek bone off.\n\nThe pain was excruciating, but its claws could not sink into his mind, not now, not as the beast in his gut roared its anger. Angela would not be able to hear it, feel it, human as she was, but that didn't change that the beast in Jack's hole-ridden corpse was screaming bloody murder at her. Every muscle, every fiber of his undead being wanted to sink his teeth into her, and end her.\n\nHe stood there, growling, arms dangling at his sides and Kindred blood dripping from the handless stumps as the thick liquid trickled down the wounds in his neck, his face, and the copious holes now filling his chest and shredded insides. Angela was laughing, loudly, her cackles breaking through the yelling hunters behind her, the roaring fires around her, and the burning shrieks of hundreds of rats yet again dying horrible deaths to hungry flame.\n\n\"Thought you could get out? Thought you had us beat just because you caught us off guard?\" She laughed again, louder, enough so her voice boomed through the hall between the two lobbies, where Jack stood. \"Or maybe you thought you scared us off, that your hat trick kills overwhelmed us? Kid, you're just an idiot vamp who got lucky.\" At first she laughed again, then roared, and so too did the flamethrower as she aimed upward, and blasted the ceiling with the liquid flames. Where her roars ended and the fire's began, Jack could no longer tell.\n\nJack looked down at himself. Belly full of fresh kine blood also meant some of that was leaking out of him, and he snarled at the sight of his meal's lifeblood trickling down his abs and pants. Holes, everywhere in his flesh. Still not as bad as that night Antoinette had fought Damien, but he was getting closer to that point. And closer again, as Angela sank a couple more bullets into his chest, each forcing him back a step, each forcing his muscles to tense, to fight the need to fall over.\n\nJust keep distracting her for a little bit longer. Look for an opportunity, any opportunity.\n\nHe found no opportunities, only bullets. Again and again they crashed into him, until Angela aimed lower, and another bullet slammed into one of his knees. The distinct sensation of a hollow-point round shattering his kneecap was a very unique feeling, followed by a very unique pain, enough to pierce the numbing of his bloodlust. He screamed as he fell back, no longer able to stay standing, and writhed on the ground as the joint ceased to function. Kindred blood flooded the wound quickly, prioritizing it above all others. Heal the knee or you can't move, and if you can't move all the other wounds were meaningless.\n\nAngela got closer, and closer. Laughing all the more, she fired the flamethrower into the air again, decorating the walls with living flame. But once she entered the hallway between the two lobbies, where Jack was currently lying prostrated, she let the flamethrower be, and held it to her side while her pistol was out, pointed at him. She took a step, and fired, slamming her foot down as she did, sinking the bullet into his guts. Another step, another bullet, tearing through his arm. Another step, another bullet, ripping into his other leg's quadriceps, this one joined by chuckles far, far darker than the earlier ones.\n\nShe was right over him.\n\nHe stared up at her, snarled, growled, bared his fangs, did all the things a vampire about to frenzy would do. Pain was back, and worse than when he had his hands cut off, but the roaring in his gut buried it once again. Pain could be ignored. Pain didn't stop an animal from chewing their leg off if they were in a trap, just like he'd done with his hands, and pain wouldn't stop him from trying to kill this woman with the gun pointed at him.\n\nShe got in closer, and closer, and once she was over him, she slammed her shoe down against his gut. Boots, hard boots. She twisted her heel, tore his skin, and forced another scream out of him as the agony stabbed him. Seconds into the scream, more of his snarls came back, but they were weak, pathetic, and worthless. He could try and hit her with his legs, but both of them were barely working. It was taking every ounce of effort he had to force his vitae to heal his legs as fast as possible, and ignore the growing wounds in his torso.\n\n\"Thought you had us, fucking leech? Christ you caused a lot of fucking damage.\" Her heel ground harder, hard enough he could feel his punctured guts squash against his spine. \"Almost got out. You're a real fucking Viktor, aren't you? Killing cause you like it, brainwashing people, using rats like... like this.\" She nodded to his left and his right. Dead rats were everywhere, many still on fire, while others had been crushed in the mayhem, their blood and guts coating the floor. \"Regular fucking animal, a hungry animal, a monster.\"\n\nOh god if she didn't kill him soon he was going to do it himself, or at least vomit his guts out at the the sound of her juvenile bullshit. What person could possibly think it was ok to give this child a gun? Let alone a flamethrower.\n\n\"Fuck... you.\"\n\n\"Ha! Say it again, cause damn that's music to my ears.\" She got in closer again, put the pistol to his jaw snug up underneath it, pointed upward, and she smiled a big Jacob smile. \"Lost good people today because of you, leech. Bunch of my hunters down, but there's plenty more here, and more coming. And you didn't get Henry.\"\n\nHenry, Jack's last remaining tool. Jack could still hear his yelling, his hollering, as the man fought against the several hunters trying to keep him down.\n\n\"You... deserve to die. I never... did anything... to you.\"\n\n\"You're a vampire. Isn't that enough?\" Laughing, always with the laughing, she got even closer again, and put her nose to his. Her glass eye was tame compared to the real one, and it glared into him, cut through his soul, as she pulled the trigger.\n\nClick. Empty.\n\nThis woman was a fucking nutjob, a sadist, and fucking deadly. But she was young, probably his age, and really, really full of herself. And that meant liable to make mistakes, like not paying attention to her pistol, and how the slide was open, indicating the magazine was empty.\n\nShe laughed, rolled her eyes, and tossed it to the side. \"Wanted to see your brains splatter. Ah well. I'll just\u2014\"\n\nShe stopped. The world stopped. The fire went silent, and the squealing rats faded away, as Jack stared up at the woman. She forced herself to stand, the flamethrower falling from her hands and clanking against the prison tile floor.\n\nA knife, coated in blood, stuck out from her stomach, a few inches to the side. She put her hand to it, felt the blood, stared at how it coated her hand, and then turned around.\n\nHenry was standing there, but only for a few moments before three hunters jumped him. He must have gotten away.\n\n\"You... stabbed... me...\"\n\nGo. Now!\n\nJack stood up, forced his vitae into his knees, his legs, forced his power through him, forced his limbs to heal faster, forced his body to obey. Forced it, controlled it, dominated it like a Ventrue should. And, as Angela turned around, the sight of her wide eyes was the sickeningly sweet dessert to join the crunching sound of his shoe colliding with the other side of her stomach, hard enough to break ribs. She fell, hard, and the knife skidded along the floor from the impact.\n\nHe ran toward the exit, and ignored the fire as it turned his skin to ash."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "suspense",
        "thriller",
        "vampire",
        "violence",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-04-ch-11"
}