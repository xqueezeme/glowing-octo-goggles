{
    "title": "Love Knows No Color Pt. 15",
    "pages": [
        "With Christmas finally over, it was time to celebrate the new year. We decided to have our own New Year's Eve celebration at the house, and friends and family were invited. I did my normal DuBois-Punxsutawney run that day, and didn't get home until about 7pm. The guests were already starting to arrive when I got home, but Shavonda decided to join me in the tub anyway. She washed the road grime from my back, and we kept things from getting too overheated, though we did linger when we washed the private areas. She'd been taking baths lately so she wouldn't mess up the haircut Shaunice had paid so much for. I had to admit, it was beautiful, but Shavonda told me she wasn't going to get that cut again. She'd rather have something easy to take care of, like her natural curls. Honestly, whatever she wore I would love, but I liked the feel of those natural curls the best. \n\n Having our own bathroom, between our room and the kids' room in the extension was a godsend. We could lock the door to the hallway from the inside, and the only other way in was our private entrance from our room, so we were guaranteed privacy. I watched her dress in front of the African queen painting, once again noticing how much she resembled the painting. No wonder Kenny had thought it was Shavonda on the wall.\n\n She slipped into the gold dress I'd bought her last Christmas. Her weight had stabilized around 150, so she was able to fit in her old clothes even if they were tight, especially in the bust. We attributed most of the increased weight to her larger, milk laden breasts. Personally, I was happy with the way she'd recovered from childbirth so quickly. And I told her as we dressed just how beautiful she was. She remained my ebony goddess, the woman of my dreams.\n\n After I dressed, in khakis and a flannel shirt, we returned to the living room to mingle with the guests. Ziggy was among them with his wife, and their two children. The kids had hit it off with mine, and they were in the backyard playing in the snow. Ziggy pulled us aside, and we went into Shavonda's old bedroom to talk.\n\n \"I wanted to thank you two for agreeing to testify in the case,\" he said. \"The commander really wants this guy bad. He's pissed that Zone 5 chose to shove him off on us rather than deal with him. Von, it's because of you there is even going to be a trial.\"\n\n \"Me?\" she asked incredulously. \"What did I do? You guys got him in a sting. I had nothing to do with that.\"\n\n \"You're wrong there,\" Ziggy told her. \"If he hadn't done what he did to you, there would have been no sting to catch him. The fact that you are a well-respected member of the community raised some eyebrows. I know often the police circle the wagons around our own, but officers like him give us all a black eye, and make our jobs harder.\"\n\n \"The defense is going to try their hardest to discredit you, I have to warn you. But your testimony, along with Jason's and mine, are going to go a long way toward buttressing your credibility. Many of the things you say can be corroborated by others testimony. But we needed you to tell your story. It's a brave thing you're doing, Von. The press will be all over this case. Usually they don't report the names of victims in cases like these, so you should be okay there.\"\n\n \"When she does this,\" I insisted, \"I need to be there in the courtroom with her. She needs to know I am there.\"\n\n \"If we do that, you may not be able to testify,\" Ziggy said. \"Maybe if we put your testimony first, you can sit in while Von is on the stand. But the DA won't like it, because it means he can't recall you to the stand if he needs to.\"\n\n \"I'm not going to let Von up there on the stand by herself. If I'm not allowed in the courtroom, I won't let her testify. Tell the DA that.\" I was adamant. My queen was going to put herself in a very vulnerable position, and they'd try to rip her to shreds on the stand. There was no way in hell she was going to face that alone.\n\n We'd also talked to an attorney, and on his advice, we would have our own court reporter taking a transcript of the trial. That way, if we decided on a civil suit, we'd have our own copy of the trial to base our case upon. And personally, I felt that if my wife was going to have to relive the emotional trauma of that night, somebody was going to pay her for her trouble.\n\n After we'd fed the guests pizza Shavonda had picked up earlier from Salvatore's, I led the guests downstairs to the game room. Shavonda and I had been working on a new song to perform. I was getting a lot better on the bass now that I was playing regularly, and one night when we were listening to Genesis's The Lamb lies down on Broadway, the song In the Cage caught our attention. It was an intricate song, especially on bass, that was mostly bass and keyboards. We thought we could do it justice once we learned our parts. Shavonda was pretty good on her synthesizer, certainly a lot better than I was on bass guitar, so I knew she could handle her part. \n\n We started off with In the Cage, apologizing. \"This is what we've been working on lately. It's a bit more complex than what we normally perform, but we hope you'll forgive any mistakes we make and just enjoy the song.\"\n\n I started playing on the bass, a heartbeat pattern, ba bump, ba bump, as Shavonda let the keyboards wash over me. I started the song:\n\nI got sunshine in my stomach\n\nLike I just rocked my baby to sleep.\n\nI got sunshine in my stomach\n\nBut I can't keep me from creeping sleep,\n\nSleep, deep in the deep.\n\n Shavonda started an intricate little phrase, repeated over and over as I picked up the tempo on the bass. The chords I played were all over and definitely different progressions than what I was used to, but I kept my concentration and started the next verse:\n\nRockface moves to press my skin\n\nWhite liquid turn sour within\n\nTurn fast - turn sour\n\nTurn sweat - turn sour.\n\nMust tell myself that I'm not here.\n\nI'm drowning in a liquid fear.\n\nBottled in a strong compression,\n\nMy distortion shows obsession\n\nIn the cave.\n\nGet me out of this cave!\n\n And so we went through the rest of the song. The recorded version ran over 8 minutes, and our version probably ran closer to ten, but we pulled it off. I was exhausted afterward, so we took a little break while I caught my breath. Playing prog took a lot out of me. I had gained a new respect for the virtuoso musicians that made it seem so effortless.\n\n \"That was fun,\" Shavonda said. \"I really enjoyed learning that solo in the middle.\"\n\n I laughed. \"I never thought I'd see a black lady playing prog and enjoying it. You know you're not supposed to even like that music.\"\n\n \"Since when did I ever do what I was supposed to do?\" Shavonda asked. \"That's why we're so good together. You're the black sheep of your family too. We make our own rules as we go. The only people we have to please are each other.\"\n\n When we started up again, we went straight to reggae with our Bob Marley songs. They were much easier to play, because all I had to do was follow the same chords and feel the rhythm. I was becoming more and more comfortable with my voice as well, and wound up doing most of the singing that night. We later performed some of Shavonda's favorites, the ones where she could let her voice shine soulfully. Macy Gray, Angie Stone. We were constantly learning new songs, working on one until we got it right, then choosing another to try. But we never attempted anything new the first time with guests. We wanted to entertain them with the songs we were competent at.\n\n After a couple hours in the game room, we went back upstairs with the guests. Miracle had been asleep the whole time wrapped in her sling, sitting in the baby carrier. I strapped my princess to my body and took her upstairs with me. Shavonda was going to be busy playing the hostess tonight, a role she loved. The least I could do was look after our bundle of joy. \n\n Eventually, I gathered everybody in the living room for an impromptu new year's toast. \"Here's to 2013,\" I said. \"It hasn't been the easiest year, but it has brought me happiness on a grand scale. I have a new wife, and a new baby. And my own children have come to live with me permanently. What more could I ask? And here's to 2014. May the new year be a safe and prosperous one for everybody here. May all of you find the happiness Shavonda has brought to my life.\"\n\n A little before midnight, we got out the leftover fireworks we had from the fourth of July. Every year, we made the trek to Ohio to get the good stuff, and we always bought more than we needed. It was easy to get carried away and spend $300 in the store we went to. Then, with the store right on the border where the PA state police could watch who came and went, we'd take the safe route home. Turning left out of the parking lot, we'd continue deeper into Ohio, then circle back and cross the border on the back roads. \n\n This year, we had a pretty decent assortment left, and at midnight, we lit up the neighborhood. Evidently, a couple others in the area had done the same thing, and with still others firing their guns in the air, it sounded like the battle of Fallujah. Somewhere, somebody else had a couple sticks of dynamite, and those blasts rocked the neighborhood, lighting up the night sky. The thought crossed my mind that if I had a stick of dynamite, I'd have made a snowman in the backyard and blown him up at midnight. I told Shavonda about that, and she said. \"Jason! That is SO wrong!\" But she was laughing all the same, probably picturing Frosty disintegrating in a blizzard of powder snow.\n\n The party continued into the wee hours, with most of us quite tipsy by that time. Somebody got the bright idea to bring in the new year on the railroad, and we drunkenly attempted to run trains on a single-track line with all six controllers in use. We had a few sideswipe accidents where trains tried to pass each other before one of them was fully pulled off in the siding. But we only had one head on collision, when Ziggy forgot to go into the siding and ran into Brian coming the other way. I immediately found a couple of empty solo cups, and handed each one. \"I need to inveshtigate this acshident,\" I slurred. \"I heard there are drunksh running my trainsh.\" Everybody laughed. We'd pay for this in the morning.\n\n Those who didn't feel like driving and couldn't get a cab were invited to stay the night. Next morning, Althea whipped us up some bacon and eggs for breakfast. I also had plenty of tomato juice on hand to help with the hangovers. I let Shavonda sleep in, changing and feeding Miracle while she slept. When she got up, she seemed none the worse for wear, and insisted on wearing the baby. It was midafternoon before all the guests left, and we finally had the house to ourselves. \n\n The next Saturday was Miracle's baptism at the church, and afterward everybody gathered at our house for the christening party. We didn't have the church people over to the house much, but they were good house guests, and really made the day special. And it was amazing how they treated me as one of their own. I was almost completely accepted by those around me, and it occurred to me that had I packed Shavonda off to live with me in Appalachia, I doubt she'd have been welcomed like this. We were far better off where we were, only visiting the place I once called home. That didn't mean I didn't still, after 13 years, miss living in the mountains. At least if I had to live in the city, I was fortunate enough to live on 2 acres of land on a dead-end street, with nothing but woods on the other side. Shavonda's home was quiet and private, unlike my old house. \n\n That week, we had to take Wednesday off so we could attend our deposition before the trial. Our attorney accompanied us to the site, along with a representative from the DA's office. In the deposition room, we were met with the defense attorney. Each of us was interviewed in a small room while the other waited outside. Our attorney advised us to tell the truth, but not to volunteer any information.\n\n The depositions were rough, with a lot of questions asked in several different ways to try and trip us up. But since we were both telling the truth, there were few places where they could confuse us. Both our attorney and the DA's representative had told us to stand our ground, and not let the defense put words in our mouth. We had the right to correct any misstatements they attributed to us. And we did hold our ground and correct them when we felt their restatement of what we said was misleading. \n\n Afterward, we were emotionally exhausted, and we headed straight home where Althea was awaiting the school bus dropping Brittany off. It was a nice enough day that she could wait on the porch. Just before we pulled up to the house, I noticed a police car with its lights on behind us. As I pulled up in front of the house, he pulled in behind us and told me to get back in the car when I got out. \"I thought I told you I didn't want to see you in this neighborhood again,\" he said. \"Get back in the car.\"\n\n \"Jason, is anything wrong?\" Althea called down from the porch.\n\n \"What do you mean I can't be in this neighborhood,\" I said, realizing this was the same cop that had pulled me over last year when I was on my way to Shavonda's house. \"I live here.\" I handed him my driver's license, with the updated address. \"Althea,\" I called up to the porch. \"Call 9-1-1 and tell them I'm being harassed.\"\n\n \"Tell her to go inside the house,\" the cop said. \n\n \"Why?\" I asked. \"None of us has done anything wrong. She's my mother in law and she's concerned about me and my wife and baby.\"\n\n I half expected him to try and handcuff me, and arrest me for disorderly conduct. But he didn't. Evidently when he looked at my license and the address he thought better of it. For whatever reason, I was glad he backed off. He returned to his car and ran my ID, and, finding nothing on me, returned and gave me my license back.\n\n Meanwhile, Shavonda had gotten out of the Jeep, and was asking the cop what we had done.\n\n \"Nothing,\" he said. \"It's all a misunderstanding.\"\n\n \"Then would you mind coming up on the porch with me?\" I asked. \"I have something to show you.\"\n\n He followed me up the steps, where Shavonda and Althea stood. I pointed to the window pane in the front door, where we'd mounted the stained-glass window I'd made. \"Would you care to read that window?\" I asked. \n\n \"Shavonda and Jason forever,\" he read. \"Is Shavonda your wife?\"\n\n \"I certainly am,\" she replied proudly. \"And I've lived here for years. Matter of fact, you pulled Jason over last year not far from here, correct?\"\n\n \"Yes, I did. I recognized the car and plate.\" The officer stated this uneasily. \n\n \"Jason was following me home that night. I pulled over and watched you stop him,\" Shavonda was a little perturbed. \"He has every right to be here, because he's with me. And I am a well-respected business owner. We're not the sort of people you want to drive out of this neighborhood. Do you really want us to move and rent this house to a crackhead?\"\n\n \"No, ma'am.\" The officer seemed apologetic now. \n\n \"If you want I can call the mayor's office and complain,\" Shavonda had him on the defensive and they both knew it. \"Now if Jason's broken any traffic laws, he'll gladly pay the ticket. Is that what you stopped us for?\"\n\n \"No, ma'am.\" The officer said.\n\n \"Then you admit this stop was purely to intimidate us?\"\n\n \"I'm not answering that, ma'am.\"\n\n \"You don't have to. If your stop had been legitimate, you'd have cited Jason. You haven't because he did nothing wrong. And you are violating our constitutional rights to freedom of movement.\" Shavonda was playing lawyer now, and clearly had the officer disoriented. He couldn't use force against us because of Althea. Plus, we had a security camera on the house, which Althea had tripped when she went in the house earlier. But he didn't know that.\n\n It occurred to me that it was a shame we had to resort to tactics like this to protect ourselves. All we wanted was to be left alone to live our lives. But one never knew when things would turn bad for an interracial couple in a city that still hadn't fully accepted us. We had no illusions as to why I was being pulled over. I was a white man in a predominately black neighborhood, and thus viewed with suspicion. The fact that I had a black woman in the car with me was even more suspicious to some. Never mind that she was my wife.\n\n We had painted the officer into a corner. He couldn't act against us, and he had no defense against our charge of harassment. So, he got back in the car. I rubbed it in a little. \"Next time you're in the neighborhood, stop by for some Kool aid,\" I said as he drove off. \n\n Shavonda and Althea both breathed a sigh of relief as I came in the front door. \"I am so sick of this,\" I said. \"Where can we go that nobody will bother us?\" \n\n \"There is nowhere, Jason,\" Althea said sadly. \"We've dealt with it all our lives. It's a lot better now than it was. But as long as you're with us, it'll happen to you too.\"\n\n \"I ain't going anywhere. I've got my family here,\" I was livid. \"How dare they harass us because they don't think we should be together. I don't meddle in their private lives.\"\n\n \"Jason, boo,\" Shavonda said soothingly. \"You know how it is. We've been through this many times before. You have to let it go or it will eat you alive. And we need you here. We need the gentle, loving man I've come to rely on. I don't need a bitter man who hates the world.\"\n\n \"Speaking of which,\" Althea said, \"This came in the mail for you.\" She handed me a letter addressed to Mr. and Mrs. Jason Waite, with a California postmark. I opened the letter and read it out loud.\n\n \"Dear Jason and Von, \n\nI am truly sorry about the way I acted at your house Christmas day. I didn't want to see Von hurt, and I overreacted before I knew you, Jason. Tina told me how the first thing you did after our argument was to pick up and feed Miracle so Von didn't have to. She also told me how you helped cook the meal. She said she watched you the whole time, and that you put concern about Von and the baby above everything else. I know my parents and Shaunice think the world of you, to the point where they took your side instead of mine. I also noticed the way Von looks at you like you are her world. I am glad she has found true love with a man who obviously worships the ground she walks on. So please accept my apology for the way I treated you, and I hope we can get beyond that and be friendly toward each other in the future. Know that if you two ever get to Stockton, you are welcome in our house.\n\nLove,\n\nMarcus and Tina Jenkins\"\n\n \"See, I told you he'd come around,\" Althea said proudly. \"We didn't raise him like that. He's a good kid, who's made a good living for himself out west. We're hoping he'll give us grandbabies, but you beat him to it. Honestly, I never thought my first would be from Von.\"\n\n \"That's not the point,\" I said sadly. \"Althea, you know I love you like my own mother. In fact, you're kinda her surrogate since I can't be with her that often. And you had every right to question my motives when we first met. But after all we've been through it hurts that I still have to prove myself every time I meet another member of the family. Where does it all end?\"\n\n \"Marcus was the only one you hadn't met yet, in the immediate family,\" Althea told me, trying to comfort me. \"You passed every test put to you. Nobody questions the love you and Von have. Not anymore.\" She continued, \"I only saw love like yours one time before. That was James' parents. The ones who lived in this very house. They loved each other so much that when he died, a part of her died with him, and she wasted away in her grief. That's what I see with you two. You so much a part of each other that neither would last long without the other. She the air you breathe. You the water she drink. You don't just love each other, you need each other to survive. And that means that when something threatens her, you fight for her. And she do the same for you. I've seen it. It happened with Rose where she put her freedom at risk to defend you. It happened with you too, with Marcus. And with your Grandma. Von's also told me about the times you two were stopped by the police, and how she hoped you wouldn't do anything stupid on her behalf. I saw it just now, outside. Marcus ain't been here. He never met you. He didn't know what we know. And he was wrong. He has admitted it. You wait. Next time he sees you, you be the brother he never had.\"",
        "\"You don't realize it, but you been one of us for a while now,\" Althea was having the motherly talk with me. \"That day when you first came to our cookout, James talked music to you. He had you pick out the cd's and took over the DJ table for you. That wasn't about him. It was about you and Von, so you could dance and be close. Do you think he let just anybody rub up on her like that? We like you from the start. You have a good heart. You made Von happy, and that made us happy. That made you family. And that means we got your back.\"\n\n Althea had a way of putting things into perspective. Shavonda had stood there the whole time, nodding her head in agreement. It was true. Once I proved my love for Shavonda, I was immediately, with few exceptions, a fully accepted member of the family. \n\n We held Ethan's replacement birthday party the third weekend in January. Patty's kids as well as Ziggy's and some friends from the church joined us at Chuck-E-Cheese for a pizza party. I spent a lot of the party playing air hockey with Ethan. He was surprisingly good for a 5-year-old, and actually beat my best a couple of times. I quickly learned not to go easy on him or he'd clean my clock.\n\n So far, Ethan had been behaving a lot better toward Miracle. I think he was afraid Brittany would kick his ass. She was very protective of her little sister, and always told us if we were in another room when Miracle started to cry. In return, I often let her hold the bottle when I fed Miracle. She watched Shavonda breastfeed the baby, and once said, \"I can't wait until I get those so I can feed the baby too.\" I thought it was so cute.\n\n January had turned bitter cold, the coldest it had been in years, with temps well below zero in the mornings, rising to just above zero during the day. This made roads treacherous, as it was too cold for salt to melt the ice. In addition, what snow was on the ground didn't melt, but turned into a fine powder that made for low visibility every time the wind blew. Luckily, January was a slow time of year for our company, and with fewer stops on my runs, I was able to at least get them completed most days even with the cautious driving I had to do. I ran along I-80 two days a week, and always went by somebody else in the ditch. One Thursday, on my way to Clearfield for my first stop, I was caught in the traffic jam behind a 50-car pileup. I sat in subzero weather for well over an hour before they turned us back west. I had to go back a couple exits and take 322 east to start my run. Normally, I would have loved the scenic drive, but 322 was in no better shape than the interstate, with blowing snow causing limited visibility and ice patches. I made it through about half my run before Nick pulled the plug on me and ordered me to return home. \n\n The cold weather caused no end of problems on the job. Our trucks were plugged into the building at night so that the block heaters could keep the engine warm. One Monday I came in and found that whoever had plugged my truck in had tripped the circuit breaker. The truck had sat over the weekend without heat and the engine was frozen. I had to wait for a service truck to come and get me started. In addition, the bitter cold caused things like the side curtain on the trailer, and the load straps to freeze. It took a lot longer to get everything ready in the subzero temps, at the same time the cold was life threatening. All of this made for long, exhausting days. \n\n On the home front, it soon became apparent how wise a decision adding extra insulation to the walls of the extension was. That part of the house was always warm, while even with the furnace running hot, you still needed to sit under a blanket in the living room. Thus, we bought another big screen TV and put it in the bedroom. Not that we watched much TV, but it was nice to have when we felt the need. Most of the time, we watched dvds or the news. Neither of us felt there was much on TV worth watching.\n\n In early February, just before the trial, the weather finally broke, and we got back to seasonal normal temperatures, which were about 35 during the day and 20 at night. It felt like a heat wave. Luckily, as Shavonda's body healed even more and she got used to caring for the baby, we became intimate more often. And even on the nights we didn't make love, at least we still slept naked and I could run my hands over her beautiful chocolate skin. I was addicted to touching her, even my hand on her hip was enough to turn me on. \n\n We approached the trial date with some trepidation. We both knew they were going to tear Shavonda apart on the stand, knowing her credibility would affect the outcome of the trial. The defense was going to try everything they could to drag her name through the mud. In a sense, she'd be victimized all over again. And yet, she never told me, \"Jason, I can't do this.\" My queen was brave. More than that, she was still pissed over what had been done to her, and leery because of what almost happened to her. We both knew that if Ziggy hadn't been our friend, things would have turned out very differently. \n\n The day of the trial, we waited in the hallway outside the courtroom to be called to testify. When we'd first arrived, the prosecutor had taken us individually into a small office to go over our testimony, and to try to put us at ease about the ordeal to come. He had intended to call me to the stand first, and knowing I was Shavonda's rock he decided that it would be better if I were there in the courtroom for moral support while my queen gave her testimony. He had an inkling what she was going to be up against, and made me promise not to interrupt the proceedings. He knew they were going to put Shavonda through the ringer. \"Just be there and smile at her no matter what happens,\" he said. \"Let her see how much you love her, and that you'll be there for her after the trial no matter what they throw at her. She's lucky. The other women testifying do not have somebody to support them like that.\"\n\n Soon it was my turn to be called to the stand. After I was sworn in the ordeal began. I testified as to the events of the night, how we were driving down the alley to my house coming home from the engagement party, when we were followed by the cop on trial. How he circled the block and pulled up on us as I kissed my fianc\u00e9 in my parking spot on my own property. How he cuffed her and insisted she was a prostitute even though we showed him her engagement ring and the leftover cake from the engagement party on the back seat. How he then issued me 3 bogus tickets before driving off with an innocent woman. How I'd thrown him off my land, citing private property. How distraught she was when I picked her up at the police station after she'd been released. How her ordeal had contributed to the mood swings and stress she went through in the next couple of months.\n\n When I was done, the defense attorney grilled me.\n\n \"How long have you known Shavonda Jenkins?\"\n\n \"A little over two years. And her name is no longer Jenkins, it's Waite.\"\n\n \"Have you ever picked up a prostitute?\"\n\n No, I never needed to.\"\n\n \"To your knowledge has Shavonda Jenkins ever been a prostitute?\"\n\n \"No. She has her own business, making jewelry.\"\n\n \"Are you aware she once posed nude for a magazine?\"\n\n \"She had mentioned something about a photo shoot long ago.\"\n\n The defense attorney entered a magazine into evidence, then handed it to me. \"Cab you identify the woman in the photo spread under the name 'Marie?'\" The magazine was called Black and Beautiful, the issue date was May 2003.\n\n \"That would appear to be my wife, Shavonda.\" I was trying to control my anger. Not at Shavonda for posing, she was young and we've all done things we regret in our youth. I was angry that they'd stoop so low as to dig up an old magazine to discredit her, in the defense of the indefensible. \"Why are you digging up a magazine over ten years old?\"\n\n The prosecutor objected, citing relevance. The defense argued that the photos showed her character. The judge sustained the objection. \n\n \"No further questions,\" the defense said, and I was free to step down. I took a seat in the spectators' area as they called Shavonda to the stand. She entered the courtroom from the hallway, head held high. I silently prayed for her.\n\n Once sworn in, the initial questions were about who she was. They established her place in the community, her two stores, her activity in the church. She also testified how that night started out with my proposing to her, and how we happily made our way back to my house intending to continue our celebration in private. How we were followed by the defendant, who snuck up on us as we made out in my Jeep on my property. How she was detained but not charged. How the cop took her to a dead-end road in the woods, and told her he'd let her go if she performed oral sex on him. How he said he'd just take it anyway when she objected, telling her she couldn't stop him with her hands cuffed behind her back. How she told him she'd bite his little 4 1/2\" pecker if he tried, and then he'd have to explain how he got teeth marks there if he wanted to file assault charges. The courtroom laughed at the reference to Shoemacher's size, and I watched him turn red, enjoying his discomfort. \n\n The defense asked Shavonda the same questions they asked me, culminating in the magazine.\n\n \"Yes,\" Shavonda said. \"Those photos were me when I was 20 years old. I had no idea they'd end up in a magazine. It was a quick way to make a little money while I was in school. I only did the one shoot, and felt bad about it afterwards.\"\n\n \"Is it true you offered to have sex with Officer Shoemacher in order to gain your freedom?\"\n\n \"No, I did not.\" I could see her anger rising. I prayed she would keep her cool. \"And that does not explain why the officer took me to that secluded place in the first place instead of to the station.\" Nice shot across the bow, baby. Make me proud.\n\n \"Did you threaten to bite Officer Shoemacher?\"\n\n \"Yes, I did. And it wouldn't have been assault on an officer. It would have been self-defense against rape.\"\n\n \"Did you see Officer Shoemacher expose himself to you?\"\n\n \"How do you think I know how tiny he is? Oh, and he has a mole halfway down his shaft as well.\" The courtroom laughed again while the officer on trial buried his head in his hands. She was emasculating him every chance she got. \"Maybe you should make him drop his pants and show the court.\" Even the judge was laughing now.\n\n \"So, if he was about to rape you, why did he stop?\"\n\n \"He was called to the station by the dispatcher. He was questioned why he had a prisoner who was supposed to be transported to jail on an out of the way dead end street. They knew by GPS exactly where he was. I heard it all on the police radio.\"\n\n The defense gave up on questioning Shavonda after that. She'd held her own, and her sarcasm had inflicted serious damage on the defendant while she hopefully kept her reputation intact.\n\n The prosecutor had her testify some more on redirect. She clarified her answers so that they were unambiguous. Then they let her step down. Ziggy was the next witness called. But the DA told us we were free to leave, so we did. On the way out of the courtroom, I noticed a black lady officer who looked a lot like Shavonda. I asked her, \"Are you the undercover cop?\"\n\n \"Yes,\" she replied.\n\n \"Thank you,\" Shavonda said. \"We're glad you got him.\"\n\n \"No,\" the officer said, \"Thank you for coming in. I know who you are. And without you he would still be out on the streets. You put your reputation on the line to come testify. All I did was my job.\"\n\n In the elevator, Shavonda broke down and sobbed into my shoulder as I held her tight. \"You did fine, baby. I'm proud of you.\"\n\n We retrieved the Cruze from one of the parking garages, and made our way home. Althea offered to take the kids for the night when she saw how emotionally drained Shavonda was. We had the house to ourselves. I ran her a hot bath, and lovingly washed her body. I told her how much I loved her. I told her I thought she looked beautiful in the magazine, and that I wasn't ashamed of her for letting them take those photos of her. Drying her off, I carried her to the bed, where I lotioned her entire body, giving her a massage that got all the tension out of her muscles. And after that, I held her and rocked her as she cried her way to sleep. It was the least I could do. \n\n The next morning I called in sick. I felt Shavonda needed my comfort. I was right. She seemed surprised to see me still in bed when she woke up. \"Jason, you're late for work,\" she said, shaking me by the shoulder. \n\n \"I have the day off,\" I said. \n\n Shavonda was still upset about the trial, and it showed in the slump in her shoulders, and the way she avoided my eye. \n\n \"Von, baby, what's wrong?\" I asked.\n\n \"I let you down,\" she said. \"I wanted to be perfect for you, and my past caught up to me. Now you probably hate me for that magazine.\"\n\n \"No, I don't. You're my queen. And we're both very sexual people. I knew from the get go you had a past. I could tell by the way you made love to me the first time. I don't know or care who you were with before me, other than to thank them for training the perfect woman how to be the perfect lover. And you know what went through my mind when I saw that magazine? Damn, my boo still looks this good. And, so what if other people can look at the photos. I have the real thing in my bed every night.\"\n\n \"Von, what you did when you were 20, I might have done as well if the opportunity had presented itself. Seriously, a well-hung man would be a porn star no matter what he looked like. Ron Jeremy is proof. At 20, I'd have jumped at the chance to get paid to get laid. All you did was take some nude photos. And like the magazine you are black AND beautiful. You still are. Honestly, I wouldn't mind having my own personal copy of that magazine. Autographed, of course.\" Shavonda smiled when I said that.\n\n \"You're not mad at me?\" she asked.\n\n \"No baby. Not at all. I am mad at those idiots for digging up the past when it had no bearing on the present. They only did that to try and rattle us. They sprung those photos on me to see if I'd turn on you. But you'd told me something about them a long time ago, so I knew they were out there. But I couldn't warn you about them because I couldn't affect your testimony or they'd have called a mistrial. I worried about you, but you handled yourself well. You shot them down every chance you got, and I think you won the jury over by fighting back. You made me proud in there.\"\n\n Shavonda hugged me tight, kissing me over and over. Her eyes were filled with tears, but they were tears of relief. I meant the world to her, and my opinion mattered more than she liked to admit. If I'd been mad about the photos, it would have been devastating to her. \n\n That was the Shavonda I had come to know and love. To the outside world, she was a strong, proud, even defiant black woman. But once she'd made her stand, and in private, she would cry the stress out of her system. She'd be a wreck, a quivering mass of tears for a while. During that time, I tried my best to just hold her and comfort her. Once she was done crying, she'd wipe away the tears and continue on with her life like nothing had happened. She was an amazing, resilient woman.\n\n Two days later, the DA stopped by the house in the evening after the trial. He thanked us for our testimony, and told us that the jury had come back with a conviction on the sting operation, and on the incident with Shavonda. They acquitted him of all other charges. \"Off the record,\" he said, \"I'm not allowed to offer to pay you for your testimony. But if you file a civil suit against the city, I will try to get them to offer you a generous settlement. I know you had a court reporter there taking a transcript. You should have everything you need there to prove your case. And I'm sure the city does not want to rehash this in another public trial. They know civil suits are easier to prove than criminal ones, and he's been convicted in criminal court. By the way, Mrs. Waite, nice job insulting his manhood during the trial. We don't normally get a laugh like that in court. Even the judge couldn't help himself. It really boosted your credibility. But what really did it for the jury was seeing them try to use those photos against you, and both you and Jason defied them. They saw you two as a loving couple that was being victimized again in court.\"\n\n We called our attorney, and had him transcribe the court reporter's notes. We met with him a few days later to review the transcript, then allowed him to draw up the civil suit which he filed later in the week. The city came back with a settlement offer a week later. $50,000 for Shavonda and $10,000 for me. Our attorney made a counter offer, and in the end I got $15,000 and Shavonda got $65,000, plus attorney's fees. It was an expensive lesson for the city. \n\n Don't get me wrong. Neither Shavonda nor I had anything against the police per se. Most of them did a very difficult job with low pay and very little thanks. But there were a few who let their power go to their head. Those were the ones who harassed people, because they could. Or in extreme cases, they were themselves criminals hiding behind a badge. Neither of us understood who the police force tended to circle the wagons around the bad apples and try to protect them. It made more sense to weed out the bad apples and give the force as a whole a bit more respect and credibility in the community at large. IN the case of Officer Shoemacher, getting rid of him when they started getting complaints back in Zone 5 would have saved the city so much wasted time and money in the long run. Instead, a loose cannon was let to roam the streets, passed from Zone to Zone until he messed with the wrong black woman. Shavonda.\n\n I'd been brought up to think that the police were heroes, a noble occupation. I still felt that way about most of them, but Shavonda had opened my eyes to the combination of racial prejudice and abuse of power that could rear its ugly head unexpectedly. If things were still like this 50 years after the civil rights struggle, I wondered how bad it must have been back in the day. Certainly, it had been bad enough for people to flee their homes in search of a better life in a place where they were a little more respected. Shavonda's family heritage was proof of that, both her parents had roots in the deep south.\n\n We had a nice little candlelight dinner for us and Brian and Tamika at the house for Valentine's Day. At least this year we could celebrate. Nobody was around to harass us. We had pork steaks with mashed potatoes and gravy. There was a marble cake for dessert. Barbara had the kids that weekend so it was perfect for the romantic evening the ladies had planned. After dessert, we put on the music and slow danced in the living room. Miracle fussed a little, but once she was fed and changed, she sat in her carrier and cooed until she fell asleep. It was amazing how much I enjoyed dancing with Shavonda. I'd never been much of a dancer before I met her. But once she taught me how to move, it became another way to be close to her. \n\n We let Brian and Tamika stay the night in Shavonda's old room while we made love in our room. Since it was a Friday night, nobody had to work the next day. We made them a nice breakfast and discussed their plans for the future. They were planning a wedding in the summer just before the Ren Fests, and they planned to take a honeymoon holed up in a remote cabin in the mountains. Brian apologized to me about the house, saying, \"Sorry we won't be able to buy it from you this year. But we have a wedding to pay for.\"\n\n \"Don't worry,\" I replied. \"As long as you cover my mortgage and any repairs on the house, you can rent it until you can buy it.\" It seemed like a fair deal to me.",
        "Toward the end of February, we started getting some warm days, and on weekends, we'd take the kids for walks along the bike paths outside of the city. Most of them were former railroad grades, so they were level and followed the rivers. That meant they went into some pretty remote places where the roads cut up over the hills rather than follow the bends in the river valleys. I taught the kids about budding leaves and where to look for them, and how other plants would send shoots up from underground. Shavonda shared her love of birds with them, teaching them about the migratory species that returned each spring, starting with the robins. \n\n The Youghiogheny River valley below McKeesport, in particular, became a favorite spot of ours. Unlike the other area rivers, the Yough was not industrialized. Once you got upstream of the Boston bridge, a couple of miles from its mouth, the river valley itself was quite uninhabited. There were a few towns scattered along its length, but there were also long stretches of wilderness as well. \n\n We had a system that kept the baby safe on our outings. One of us would ride Shavonda's bike with the kids, while the other started walking along behind on the trail, wearing Miracle in her sling. Eventually, the person on the bike would turn back with the kids, and when the bike got to where Miracle was, we'd switch places. The other person would ride the bike, while Miracle and her sling would accompany the parent who'd just got off the bike, back to where we'd parked the car.\n\n As spring progressed, we started going out in the evenings. On those trips, we'd leave the bikes home and just walk in to an area with a pond or other still water like a swamp. We were out to listen to the spring peepers, a small frog that peeped instead of croaked. They were everywhere in the spring, and listening to them was one of the things I'd loved since childhood. Spring was my favorite time of year, because everything was coming back to life after a long, depressing winter. To us, it represented a fresh start, a rebirth. It was only fitting that Easter was in the spring, since it also celebrated rebirth on a spiritual level.\n\n Freed from her worries about the trial, and with seasonal depression on the wane, Shavonda was back to her playful self again. It was perfect timing, as Miracle was becoming more alert and playful herself. Sometimes I would come home from work to find Miracle in the carrier sitting on the coffee table while Shavonda sat on the couch leaning over her. They would coo and laugh at each other. Miracle would grab Shavonda's finger and try to put it in her mouth. It was heartwarming, and I took photos of the two of them bonding. \n\n Shavonda also seemed less exhausted, and that translated into some playful times in bed as well. She had a new tactic. She liked to stimulate me while I was asleep, to see how long it would take me to wake, and what she could do to me while I was still asleep. After I awoke, she'd ask me about my dreams. Honestly, you get some weird dreams when your queen takes you into her mouth while you are still asleep. One night I dreamed my dick was being used as a joystick controller in a game. I awoke to find Shavonda straddling me, rocking her hips back and forth while I was buried balls deep inside her grasping coochie. \"Hey, baby boy. How was your dream?\" she asked. \"I am living mine.\" I lost control at that point, and grabbing her by the shoulders I pulled her down on top of me and pounded into her from below. We were soon both in the throes of an orgasm that left us both a sticky quivering mess. That was the night I started to keep a dream journal, describing each one, while Shavonda added a footnote describing how she was stimulating me during that dream. \n\n At this point, we were getting close to Easter. I'd promised my parents we'd be down to see them, and we made plans for the holiday. Kenny had come up to visit Edie in late March, and after we played In The Cage for him, he was impressed with the progress I'd made playing bass. \"Honestly, I think you should bring your bass guitar and synth down with you next time you visit your parents. We can set everything up in the backyard. Calvin will probably feel left out, but I have an electric guitar we can use as well. Maybe I can get Calvin to play bongos or something.\"\n\n It turned out Edie was a pretty good singer as well, with a voice just a bit higher than Von's. We had worked on some songs where they could both sing, wither as a duet, or as harmony with Kenny or me. She was riding down with us for Easter. It was going to be an interesting trip with six people in the Jeep. Somebody would have to ride in the very back where we normally stored our luggage. Since we were also taking our musical instruments and amps this time, I ended up renting a small storage trailer for the trip. \n\n And so, on Thursday morning, April 17 we started our trek to Appalachia. We stopped at Aunt Baby's for brunch on the way down. We had fried chicken and Kool aid. The employees remembered us from our previous visits, and they made a big fuss over Miracle, who they'd never seen before. The last time we'd made the trip south was in October, when Von was about 34 or 35 weeks pregnant. Edie was impressed with both the food and the friendliness of the staff. We promised her that we'd stop again on the way back Monday afternoon.\n\n Since the back of the Jeep was so uncomfortable, we took turns riding there. The front seat passenger got to set up the music on the iPod. I had driven from Pittsburgh to Aunt Baby's in Fairmont, with Edie in the back. Edie drove from there to the New River Bridge, with Shavonda in the back. We took our customary rest stop there, and Shavonda breastfed the baby while I showed Edie the bridge. With Miracle fed and changed, we continued on with Shavonda driving while I curled up in the back and went to sleep. I tended to get carsick riding if I couldn't see out the front windows, and sleep was the best way to prevent that from happening. Finally, I took over driving at White Sulphur Springs. That was where we left the main roads behind, and I felt it best if I drove because I knew the way. Shavonda might have been able to find her way to the farm without getting lost, but Edie had never been there and couldn't help if Shavonda got lost. Me, I would have been still curled up in the back on those winding mountain roads. \n\n As expected, the family was out on the front porch waiting on us. The surprise was Kenny being there. Edie's eyes lit up when she saw him coming down the front steps. The hugged like they hadn't seen each other in a year. It was heartwarming to see. Kenny was good for Edie, and vice versa. We opened the trailer, and he grabbed Edie's bags and put them in his pickup truck. We took our bags and the kids upstairs, Miracle bundled against my chest. When we came down, Mom herded us all in the kitchen, including Kenny and Edie, where she had the traditional pot roast with boiled potatoes waiting. It was good to be home."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-15"
}