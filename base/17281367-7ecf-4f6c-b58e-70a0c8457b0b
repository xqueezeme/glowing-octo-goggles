{
    "title": "The Mystic Adventure",
    "pages": [
        "The alarm clock went off at 4:30 am sharp, dragging me back to consciousness from a sleep that I thought, last night, would never come. Things are usually better in the morning right? Let's see. Nope, this still sucks. I set the alarm last night because, well, what else am I going to do? I reserved the boat, bought the plane tickets, stopped the mail, all that stuff. Maybe a week in a tropical paradise will help me to forget her but, at this point, it's not looking good. \n\nI got up, showered, dressed, and had a light breakfast - all in haze. I loaded the car and headed to the airport, analyzing the situation as best I could. OK, honestly, I knew this was coming. We had been drifting apart for a while now. She was hell bent on the race up the corporate ladder and I was trying to get away from all that. I was trying to simplify and she was trying to do everything, and have everything. At first, it was exciting to see her put so much of herself into it and to see her succeed. But little by little, she began to be consumed by it. Everything else took second place to \"The Plan\", as she called it. \n\nThe Plan called for her to make her way to the top of the firm in three years and then take over the division in New York City. We'd \"get\" to move to the city and get out of this \"boring\" little bedroom community on the lake. \"Gee honey, that sounds great.\" I booked this trip to see if I could show her the beauty of simplicity and the magic of clean ocean air. I figured that once she was on that boat, disconnected from her Blackberry, unable to check email, she would relax and loosen up a little. I was also hoping she would unwind a little too. Get a little crazy. The sex we had was good but it just wasn't - oh hell, the sex really wasn't that good. It should have been. She was stunningly attractive. She turned me on visually but in bed, she had no, I don't know, adventure. No recklessness. I'm not looking for a slut (well not too much) but I want someone who is into it. Not someone who is thinking about what they are going to do when it's over. \n\nHoly shit! I just about missed the exit for the airport! I must have been on autopilot the whole way, reflecting on the relationship and how we had gotten to where we were. Having re-analyzed the entire picture, I suddenly realized that I'm actually lucky to be rid of her. When she called last night to say she wasn't coming and that she wanted to be apart for a while, I was crushed, angry, and hurt. But now, it was like a giant weight had been lifted off my shoulders. I suddenly felt better than I had in probably over a year. I was heading to St. Thomas for a fabulous week of sailing in the Virgin Islands. I'd be alone but hey, it's better than Winter in Hartford right?\n\nI headed to the long-term parking lot to begin the arduous process of boarding my flight to St. Thomas. As I shuffled through the security lines trying to hang on to my license, boarding pass, shoes, and carry-on, I was trying to figure out how I would convince the charter company to let me take the boat by myself. Chartering a bareboat in the Caribbean is ridiculously easy. From my past observation of other charterers, they will let practically anyone take a boat out. Of course, I had plenty of experience from years of sailing everything from tiny racing boats to large, ocean-going yachts so I was confident of my abilities. I just wasn't so sure they would see things the same way. A 43 foot boat is big and, while you can do it, they really aren't designed to be sailed by one person. Hmm, this could take some fast talking...\n\nThey finally called the flight and I made my way down the jetway and found seat 18A, a window seat that would provide a great view of the islands when we landed. Of course seat 18B was unoccupied but I don't care about that, remember? Seat 18C was empty so I had the whole row to myself. Please, oh please, don't let some motormouth take that seat. Or some large woman with way too much perfume. Or, please God, not a mom with a baby. I love kids but not on a 5 hour flight.\n\nPerson by person, they passed by the empty seat and I started to hope against hope that I'd escape the agony. Oh God, here comes a woman in a muumuu. Please, please, please... She passed by, loudly wondering where row 28 was. Then, I catch a glimpse of blond hair up ahead. An instant later, a flash of blue eyes. Then, I see a face that causes my breath to catch in my throat. All of a sudden, I'm hoping, praying, begging whomever might be up there calling the shots (not that I've ever thought there was) to let her have a boarding pass that says seat 18C. As she gets close, I try not to stare. I casually look around like I'm just taking in the crowd in general, but all the time, I'm stealing tiny glances at her, taking in the details, absorbing her features, learning her from a hundred photos in my mind's eye. \n\nThere are two kinds of beautiful women. The first kind is the model type - stunningly beautiful, perfect hair, perfect skin, what most people would classify as \"hot\". These women know they are beautiful and they know that every guy is looking at them and wondering if they have a chance. The other kind is the \"girl next door\" variety. Pretty, but in an \"I would actually talk to you\" kind of way. This girl, approaching seat 18C with the force of every known or imaginary deity being brought to bear to will her into that seat, was the second kind. Actually, she seemed to be some kind of impossible mix between the two. She had blond hair and crystal blue eyes that seemed unnaturally bright. Her face seemed - \"fresh\" is the only way I can describe it. She gave off the kind of vibe that seemed to say she was just happy to be alive and off on adventure. And, perhaps more importantly, she seemed to be traveling alone.\n\nAs she got to my row, I saw her scan the number above my head, double check here boarding pass and give that little \"I found it\" look. Yesss! Then, as time slowed to a crawl from her looking at her pass and then shifting her eyes to me, I found myself wondering - is she really the girl next door type who will actually be as nice as she looks or will she turn out to be a stuck up snob. Should I try to start a conversation with her? What would I say? Does she have a boyfriend who's just behind her? Will she suck my dick in the lavatory at 30,000 feet? OK, that last one shouldn't have gotten in there just yet. All right, dream time is over, look at her. I slowly looked directly at her and as our eyes met, she smiled the most sincere, and therefore dazzling and wonderful smile I'd ever seen and said \"Hi, I'm Kelly and I think I'm in 18C\". \n\nYesss!\n\n\"Yup, this is row 18. Hey, I'm Brad.\"\n\nIt sounds cliche, but when our eyes met, there was a \"spark\", or whatever you call it when the connection lasts a fraction of a second longer than it would normally in a casual encounter. I don't know, maybe I imagined the whole \"moment\" but it sure boosted my mood and, I have to say, boosted the firmness of my cock ever so slightly. This stirring in my groin wasn't slowed when I got a look at her body either. She was wearing a light blue tank top and a pair of khaki shorts that were rolled up to become short-shorts. It was a perfect combination of casualness mixed with a hint of sexiness that is so hard to pull off. It's the kind where you can enjoy the beautiful view but not be embarrassed for her that she's out in public like that. \n\nShe set her purse on the seat and looked up at the overhead bin to find a place to stash her carry-on. As she reached up to put the bag up top, her tank top raised up to expose a perfectly flat, trim stomach. What's more, her shorts gapped away from her just enough to accentuate the view. I quickly looked away so as not to be the creepy seatmate that she was probably dreading sitting next to just as much as I was hoping not to get the muumuu lady. It was all I could do though. My heart was practically beating out of my chest. Did she do that on purpose? Did she spend a second or two extra adjusting her bag in the overhead? I had to will myself to calm down and not let my imagination run away with me. In all likelihood, she was just moving things around up there. She was probably going to visit a boyfriend or something and I was getting all fired up for nothing. \n\nWhatever, there was one more physical attribute I had to get a look at though so I timed my look back from the window just as she was turning sideways to sit down so I could checkout her ass. Yup, perfect as I suspected. Perfectly round, firm looking, and no visible panty lines. I like thongs...\n\nShe popped down on the seat like you do when you have been on your feet dealing with getting through the airport and are finally able to sit down.\n\n\"Hi Brad, nice to meet you. How's life treating you today?\"\n\nI wasn't expecting that last question. It wasn't the typical \"How are you\" that nobody really wants to know the answer to. It was like she was actually asking me how my life was going on this particular day and was interested in the answer. \n\n\"Um, hey, nice to me you too Kelly. Well, to be honest, I'm on a bit of a rollercoaster today. It's been down, and then up and well, I'm not really sure where it's going.\"\n\n\"Well, I hope it's going up. Are you kidding, we are on a flight to St. Thomas in the Virgin Islands. The weather will be fantastic, we won't be working - you're going down there for play, not work right? What could be more perfect? I'd say life is treating us pretty good right now.\"\n\n\"That's a good point. I like your perspective on things.\" Yeah, that's the way I've always looked at things - the bright side. I have to get back to that.\n\n\"So Brad, are you on the cruise from St. Thomas? I'm meeting a friend down there. We've been planning to get away for this cruise for ages and we finally did it. I can't wait.\n\nCrap! She's meeting her boyfriend after all. Oh well, that was certainly the likely scenario so I can't say I was surprised. Just a little disappointed. At least she'll be fun to look at and talk to for the 5 hour flight. It could have been muumuu woman.\n\n\"Yeah, my girlfriend Kim and I decided we needed to get out of the city and the hustle and bustle and just go for a little alone time. From what I've heard, this cruise is the way to do it. It's kind of a party boat and less of a senior citizen center than other ships.\"\n\n\"Oh, your girlfriend. That sounds great. I'm sure you two will love it. It's good to get away from the 'real world' and reconnect with each other.\" Hmm, so it's not a boyfriend but a girlfriend. How is it that my cock can go from totally let down to contemplating a kinky fantasy faster than my brain can? Hold it there buster, she's still getting on a ship when she gets there and you'll never see her again. Nothing has changed. Just enjoy the ride and try not to load yourself up.\n\nI don't think I conveyed any of those thoughts in my head with my response but she paused for a second like I'd said something that confused her.\n\n\"Oh, I don't mean my girlfriend-girlfriend\" she laughed as she air-quoted \"girlfriend-girlfriend\". \"Nah, she's just my best friend since grade school. Of course, if I was going to have a 'girlfriend-girlfriend', she would be the one. She's so funny and has the most beautiful... Oops! That's probably too much information. Sorry! So, are you going to be on the cruise?\"\n\n\"No, I'm actually renting a sailboat and I'm going to sail around the islands for 10 days. It's called a bareboat charter.\"\n\nShe did a sort of double take. \"Really? I've never heard of that. So how many people are on the boat? Do they have a crew that helps you sail it?\"\n\n\"No, it's just me. Bareboat means that you sail it yourself - no captain or anything. I've been sailing all my life and I've done this before so it's not a big deal. I had a crew member but she backed out at the last minute. Now I have to convince them to let me still take the boat by myself. Otherwise, I'm going down there for nothing.\"\n\n\"Oh man, that's sounds really cool! But wait, your crew - was it your girlfriend? - just decided not to come? What's up with that?\"\n\n\"I guess she decided that now was the right time to tell me that she didn't want to spend time in a sailboat, away from her email and the amenities of city life. I'm not actually surprised but the timing sure sucks. That's why I said it had been a rollercoaster of a day. I was feeling sorry for myself earlier but when you said hello and just seemed so happy - looking forward to whatever came your way, it put me in a much better mood. So thanks for that.\"\n\nShe reached over and put her hand on my arm. I swear I felt a tiny jolt of electricity race from my arm directly to my dick. \"Hey, I'm sorry she did that to you. I can't imagine turning down an adventure like that in favor of more time on my Blackberry but I guess some people just don't think the way we do, do they?\"\n\n\"Thanks, I guess not.\"\n\nWe continued talking as the rest of the passengers came aboard and got settled in. I asked about the cruise itinerary and the islands she would visit and gave her some recommendations for things to see on each one. She wanted to know more about the bareboat charter and how that worked - how do I know where to go, where do I sleep, all that stuff. I found myself just gazing into her eyes as she talked. I was hearing what she was saying but I was also just drinking her in. She was so comfortable and easy to talk to. She just seemed to enjoy life and look forward to anything that might come her way. Of course, that attitude, coupled with the way she looked and smelled - I think I caught a whiff of some sort of light perfume or soap that was again, in keeping with her \"fresh\" vibe - was slowly intoxicating me. \n\nAfter a while, I came back to reality and realized that we had been sitting there for a long time. The passengers were all seated and nothing was happening. Just then, the Captain came over the loudspeaker.\n\n\"Ladies and Gentlemen, this the Captain. I'm afraid there is going to be a slight delay. There have been severe thunderstorms across the country today and many flights have been redirected to this airport. In order to let those planes land, we will not be able to take off for about an hour or so. Since this is a direct flight to St. Thomas, hopefully, you don't have connecting flights that you would be in danger of missing. We'll try to get you to St. Thomas as quickly as we can.\"\n\nThere were a few groans from the other passengers but when I looked over at Kelly to give her an \"Oh well\" smile, she looked very concerned. \n\n\"Looks like we might get to St. Thomas a little later than planned huh? You're catching the ship tomorrow right?\"\n\nShe turned to me with a pained expression. \"No, it's leaving today! We didn't want to spend the extra money on a hotel room so we timed our flights to get there by 1:00. The ship leaves at 5:00 so we figured we would have plenty of time.\"\n\n\"No problem. The airport is not far from the cruise docks. Even if you are a few hours late, you'll be able to make it. Don't worry\". \n\nShe visibly relaxed a bit. \"Yeah, you're right. It's only going to be an hour. I'll text Kim and tell her I'm going to be a little late.\"\n\nOur conversation continued, like we were old friends catching up on each other's lives after a long time apart. About 45 minutes later, the Captain came on the speaker again.\n\n\"Ladies and Gentlemen, I'm afraid there's going to be another delay. The weather pattern that affected all the other flights is now affecting our departure. It's hard to tell but it looks like it's going to be at least another hour before we can leave. Our estimated arrival time in St. Thomas is now 3:15 pm. We do apologize for the inconvenience and we'll do everything we can to get you to St. Thomas as quickly as we can.\"\n\nMore groans from the other passengers, a bit louder this time. I looked over at Kelly and saw the worry creep back into her expression. \n\n\"Don't worry Kelly. You'll make it. Besides, if worse comes to worse, and you don't make it there in time, you can catch a flight to, where is the first stop, Cayman?, and get on the ship there. People do it all the time.\"\n\n\"Really? Oh that's a relief.\" Again, her face shifted back to her \"everything's an adventure\" expression and her concern was over. I looked down at the empty seat between us and thought of the person who would have been there and how she would have reacted. She would have been demanding to speak with the pilot or the president of the airlines, wanting to know what they were going to do to get her to her destination. Didn't they know that she had a printed itinerary for god's sake? Ugh. \n\nI looked up to see Kelly looking at me. \"Will you have a problem getting your boat if we get there late?\"\n\nThis time it was my turn for a little double take. Here she is, faced with potentially missing her ship but not so self-centered that she can't still be concerned with how the delay might affect me. It was so refreshing to see someone who doesn't assume the world revolves around them - you know who you are 18B. \"No, I'm picking up the boat tomorrow. I booked a hotel room for tonight. These kinds of delays happen enough that I wanted to be on the safe side. Besides, it's fun to hit the nightlife in Charlotte Amolie... Hmm, might not be so fun alone.\"\n\n\"Aww, I'd hit the bars with you. We'd have a great time wouldn't we?\"\n\n\"Yeah, I think we would.\" Oh man, this girl is killing me. Does she even know what effect she is having on me? My mind drifts to thoughts of her in a crowed bar with me being pressed up close to her. The dance floor is so packed that people are jammed together barely able to move except for the rhythmic pumping in time with the beat. I'm trying desperately to think of muumuu woman to keep my cock from jabbing her in the stomach as she grinds into me. It's not working though is it? I picture her looking up at me with a sly grin as she grinds a little harder. \n\nI'm snapped back to reality by the Captain's voice again. \"Ladies and Gentlemen, we've been cleared to depart for St. Thomas.\" The passengers clap and cheer but quickly quiet as the Captain keeps speaking. \"But we are going to have to re-route around the weather which will result in a further delay in reaching our destination. We should arrive in St. Thomas at around 4:30 pm.\" \n\nMore groans from the passengers. \n\n\"I guess I'll be trying to get a flight to Cayman,\" Kelly says but she doesn't look that happy about it. \n\n\"It'll be easy,\" I say. \n\n\"The only problem is that I don't know if I have enough money. This trip just about maxed me out. If it's more than about a hundred dollars, I may not be able to afford it.\"\n\n\"Listen,\" I said as I contemplated if I should really be making this offer. \"If it comes to that, I'd be happy to loan you the money. I know how much this trip means to you and I'd hate for a weather delay to ruin it all for you. Let's not worry about things until they happen. Until then, let's just enjoy the flight.\"\n\n\"That's so sweet of you Brad. I'm not sure I could accept your offer but you know you're right. Let's not think of it right now. Let's just have fun on the way down there and see what happens when it happens. I like the way you think.\"\n\nAs the plane taxied away from the terminal, Kelly looked over with a sheepish grin. \"Do you think I could switch over to the middle seat? It'd be so much easier to talk and I just love looking out the window.\"\n\n\"Absolutely,\" I stammered. Yes, I feel you down there buddy. No, she didn't just offer to give you a blow job, she's just sitting a little closer. Relax man. Everyone else has these conversations with their dick right?\n\nShe unbuckled, raised the arm of the seat, and slid over next to me. I could smell her much better now and god, did she smell good. I don't know what it was, either some sort of body cream or just some kind of fresh smelling soap but it was absolutely wonderful and sent new waves of sparks to my head and my cock. Muumuu lady, where are you? What did you look like? How much did you weigh? Come on think about that. Just that. ",
        "We were rolling down the runway, gathering speed for the climactic launch into the air. Building, building. None of this symbolism being lost on my cock, now straining to squeeze past my clenched legs trying to hold him down. As we lifted off, Kelly leaned over me to look out the window to watch the ground fall away. I leaned back in my seat to let her look and looked right down her top. I could see the edges of a lacy bra that kind of pushed her breasts together. They were medium sized and silky smooth looking. Her scent wafted over me even stronger now. I looked up at her neck and the wisps of her hair that came down from her neck and ponytail. Oh man, this is too much. I tried to stop myself but I couldn't. \n\nMy eyes traveled down her perfect back, snugly wrapped in the tank top. The bottom of her tank had pulled away from the top of her shorts as she leaned over and I could just barely see the top of her thong and the beginning of the crack of her ass. It was a light blue thong with a small triangle at the top, disappearing... Oh fuck, this is bad. \n\nThe plane hit some small turbulence and she let out a quick \"Oh!\" and put her hand down on my thigh to steady herself. My mind is spinning at this point. Did she put her hand closer to my crotch than she needed to? Am I letting my mind run away with me? Is she going to reach down, pull my cock out of my shorts and blow me? \n\nIf I let my legs relax right now, my cock would spring up, rip through my pants, and hit her in the face so hard she'd probably get a black eye. Of course, you wouldn't be able to see it because I would blow my load all over her face (which she would happily lap up). Muumuu lady! Help!\n\nSomehow, I keep my legs together and my cock doesn't rip through my pants. She finally leans back in her seat and looks at me with my eyes closed, presumably looking like I'm in some sort of pain.\n\n\"Do takeoffs scare you?\" she asks, surprised. \n\n\"Uh, something like that.\"\n\n\"Aww. Big strong guy like you. Afraid of flying?\" She pats my chest. \"Don't worry. If we ditch in the ocean, I'll save you. I was a lifeguard in college. I know CPR, mouth to mouth, all that stuff.\" She leans her head against my shoulder for a second to finish the act and then giggles and sits back. She reaches for the in flight magazine and starts to browse as I slowly come down from the brink. I don't think I've ever been so close to coming from a totally non-physical encounter like what just happened. I realize that my heart rate is coming down and my breathing is slowing. My god, I feel like I've just finished a marathon. I don't know if I can survive 5 hours of this.\n\nThe rest of the flight is relatively uneventful. That is, if you consider trying to contain my animal lust in the face of a relentless assault of beauty with a hint of does-she-know-it sexiness, conversation where I try to analyze everything she says trying to decide if I'm reading too much into it or not, and that smell that makes me want to bury my nose in her tits and inhale her into my lungs. Yeah, other than that it was pretty boring really. Fuck.\n\nAt about 4:00, the fasten seat belt light comes on and the captain tells us we are getting ready to land. It's not looking good for her to make her boat at this point. As we taxi to the terminal, I tell her to get up quick and get to the cruise line desk that's just down from the gate. Maybe the ship will wait since there are surely other passengers on this flight who need to make the boat as well. We quickly exchange email addresses and phone numbers and she leans over and kisses me on the cheek. \n\n\"Brad, this has been so fun. I wish we had a ten hour flight so we could talk more. I hope you'll call me when you get back to the States. I'd really like to keep in touch.\"\n\n\"I will Kelly. Have a great time on the cruise. I'm sure everything will work out.\" With that, she hopped up, grabbed her carry-on from the overhead and disappeared down the aisle. \n\nI'm totally drained. The whole flight has been like some sort of Tantric sex act. I've been to the brink so many times, I'm seriously thinking that I'm going to need to go the restroom and relieve the pressure. I'm also thinking that I should have made some sort of more obvious indication that I was totally taken by her. Maybe I didn't give her a sign that I was into her. God, I should have just told her what I felt. Fuck.\n\nI sit there as the other passengers gather their stuff and get off the plane. Finally, I get up and amble into the terminal thinking about the should-haves and could-haves of the last five hours. I feel like I'm in a movie where two strangers meet and fate is trying to push them together but for some reason, it doesn't happen. I'm hoping that, in this movie, the two strangers somehow get together in the end but I can't spot any cameras recording this action so this is probably real life. As I walk through the terminal, I glance over at the cruise line desk. \n\nAt the desk I see two women with their backs to me, talking to the agent. I guess I'll probably have the image of that ass in my mind for the rest of my life. It's made all that much more perfect because she's on her tiptoes against the high desk. This is, of course, why somebody invented high heels; the shape it imparts on the legs and ass - especially one that is already perfect - is just - wow. Thanks Dude. \n\nRight then, she drops down and the two girls look at each other, crestfallen. The other one, it must be Kim, puts her arm around Kelly and pulls her into her chest. I can imagine what just happened and, if it wasn't so sad, the scene would be hot as hell. Kim has got bigger tits, but not huge, dark hair, dark skin, long legs and another excellent ass. In my mind, I see them look into each other's eyes and start a long, slow kiss as their hands explore their bodies. The people in the terminal all stop what they are doing, entranced in the scene that is unfolding in front of them. \n\nBut of course, Kim and Kelly don't start a full on lesbo scene and the people don't stop what they are doing. The world moves on as these two come to the apparent realization that their vacation is ruined. I hesitate for a second, unsure of what I should do. Just then, Kelly looks up and sees me. I start over to them and she gives me a pained smile that confirms my suspicion.\n\n\"We missed it,\" she says with a sigh. \"There's no way to make the ship before the boarding is closed and they won't let people board in Cayman. Some sort of change in policy after nine-eleven.\"\n\n\"Oh man that sucks. I'm really sorry. Are you sure there's nothing they can do?\"\n\n\"Yeah, we tried everything. I even offered him my body but I think he's gay so that didn't work either. We are screwed.\" \n\nI chuckled at her joke and she even giggled too but I could tell it was hard. She was devastated. \n\n\"Hi, I'm Brad. You must be Kim,\" I said, turning to the other stunning creature in the terminal. \n\n\"Oh Brad, I'm sorry. Yes, this is Kim. I think you practically know her as well as I do at this point.\"\n\n\"Hi Brad. Nice to meet you. Kell, your text messages didn't do him justice - he's adorable.\"\n\n\"Kim! You're terrible! That was girl-talk. Don't you know the girl-talk rules?\"\n\n\"Yeah, well, rules need to be broken sometimes and I'm usually the one to do it aren't I?\" \n\n\"Yeah, I guess you are.\"\n\nI was kind of embarrassed but also intrigued by the secret texts that had evidently gone back and forth between the girls. I gave a little laugh and looked at Kelly who was looking down with what looked like a guilty grin on her face. Hmm.\n\n\"You know, you can probably get a hotel for the week. There is still lots to do in the Virgin Islands. You don't need a cruise ship.\"\n\nThe grin disappeared from Kelly's face. \"The only problem is that the cruise line can't refund our deposit for a week. We don't really have enough money to stay here and our return flight isn't until next week. I think we are stranded in paradise.\" \n\nI swear my dick twitched even before the beginnings of a plan started to hatch in my head. I don't think that that is physically possible but it sure felt like it. \n\n\"Listen, I know this may sound crazy but, you know, I've got my boat chartered for 10 days and I was going to have a tough time convincing the charter company to let me take it with no crew. It wouldn't be the same kind of vacation you had planned but if you wanted to come along, there's plenty of room.\"\n\nKelly's head lifted up and her face seemed to brighten. \"You mean, all that stuff you talked about - sailing between the islands, the beaches, the moonlit nights at anchor in a secluded cove. We could do that?\"\n\n\"Well, yeah, but umm, I probably painted a more romantic picture than it really is. It can be hard work. Trimming the sails, tending the lines, it's not easy. Plus, we have to cook our own meals, there's no air-conditioning, very little electricity. It's not a cruise ship by any means.\n\n\"You girls should probably talk it over. It's not fair to put Kim on the spot since she didn't even hear about the glamorous part. I'm going to head down to baggage claim. You two discuss it and see what you think. I'll tell you what. I'll even loan you the money for a week's stay at a hotel here on St. Thomas so there's no pressure by needing some place to stay. Okay?\"\n\nI turned around and started walking towards the baggage claim area. Two seconds later I heard the clap, clap, clap of flip-flops getting closer and then almost got knocked over when Kelly jumped up on my back. \n\n\"We're in!\" she said as she wrapped her arms around my neck and her legs around my waist. \"We have no idea how to sail but it sounds like such a cool thing. If you'll have us, we are definitely down for this. Are you sure you don't mind?\"\n\n\"Hmm,\" I said as I pretended to ponder the question. \"Let's see, being by myself or sailing around the Virgin Islands with two beautiful women. I think I'll go with option two.\" They both laughed and we headed down towards baggage claim. \n\nI couldn't believe what was happening. I wasn't in some extended daydream and still on the plane was I? This was really working out? My cock stiffened again at the thought of those two babes sunning themselves on the deck of the boat as we cruised around. Oh man. Oh man.\n\nWe got to baggage claim and most everyone was already gone. There were just two pieces of luggage still circling the carousel. I spotted my duffle bag right away and grabbed it off the line. Kelly grabbed the other small bag but there were no more pieces of luggage to be seen. Great, I thought. Now we've got to try and find her lost luggage. It was a direct flight. How could they lose it?\n\n\"OK, let's go,\" said Kelly as she picked up her carry-on, purse, and the small bag she had just gotten. \n\n\"That's it? Don't you have a suitcase or something?\" I then noticed that Kim also only had a small bag, what looked like a laptop case, and her purse. \"Wait, this is all you brought?\"\n\n\"Hey Brad, bikinis don't take up much room and we really didn't plan on attending the formal parties on the ship. We figured we would buy t-shirts and souvenir clothes while we were here so we didn't bring much.\"\n\nDid she just say bikinis? Did my cock just get that much harder when she said it? \n\n\"Okay, hold on just a minute girls. There is one condition for bringing you on this trip. You can't wear bikinis while you are on the boat. If I end up steering us into the rocks somewhere because you two distracted me by wearing bikinis on deck, it would cost me a fortune to pay for the damage. You're just going to have to wear muumuus for safety's sake.\" They laughed and Kelly playfully slapped my chest. \n\n\"Muumuus! Oh my god Brad. Did you see that woman on the plane!? That's hysterical!\" Kelly described muumuu woman to Kim and they both laughed.\n\n\"Okay Brad. We promise. We won't wear our bikinis. We'll take them off while we are on the deck.\" She gave me a wink and then they both laughed again. \n\n\"Well, that backfired on me I guess,\" I bent down to pick up my stuff. Man, to think how this day started and how I was feeling. And now to be here, with these two women, on the edge of something that was looking like it was going to go somewhere I could have only imagined before. If I am dreaming, I hope I don't wake up for a few more days.\n\nWe walked outside and into the glorious tropical day that was just starting to fade into early evening. It's like stepping through a portal to another dimension. \n\nPeople talk about the rhythm of the islands and it sounds corny but it really does exist. As soon as you get there, things slow down. Schedules don't seem to matter quite as much. If it doesn't happen today, tomorrow will be just as glorious and we'll see if we get to it then. That attitude seeps into everyone. It can be frustrating to some people, people who can't relax and who have the need to keep pushing and pushing. Those people look at this place and try and think of ways to fix it. Other people, people who are able to slow down and appreciate this new pace of life, are almost instantly transformed into it. I looked at these two girls, who had, at some point, each taken an arm, and saw that they were of the latter category. The ocean, the mountains, the sunshine, the cool breeze, all came together and basically took their breath away. \n\n\"Oh my god, it's beautiful. Kim, can you believe this?\"\n\n\"Fuck, Kell.\" she said quietly. \n\nI'm working on that, I thought to myself.\n\nWe grabbed a cab and headed to the hotel I had reserved for the night. It's part of the whole charter marina so tomorrow, we would be right there ready to get the boat. I checked in while the girls explored the grounds. There was a pool with a swim up bar and a newly built outdoor nightclub that the brochure had said was the new happening place. \n\nI took the bags to the room and then walked back to the main area to find them. I finally tracked them down in the boutique. \n\n\"We're trying on muumuus Brad!\" Kelly said and busted out laughing. Kim practically fell over. The sales lady in the store, who was actually wearing a muumuu, failed to see any humor in her comment. \"Go away Brad. We're buying you a thank you gift and we don't want you to see. We'll meet you at the bar Okay?\"\n\n\"Okay fine. Just remember. Big honkin' muumuus are best. A bright green floral print should keep us off the rocks.\" They both giggled again and the sales lady looked even more confused. I left the store and headed to the bar. \n\nI ordered a pitcher of Margaritas and settled at a patio table to watch the pool activity. The new nightclub seemed to have attracted a younger, more hip crowd than had been here last time I was there. There were a bevy of smokin' women and chiseled guys and things were getting pretty rambunctious. The hot tub was crowded and a couple of the girls were sitting on their guys' laps. One girl was leaning back on her guy with her head next to his. Every once in a while, his hands would come up, brush against her tits, and then go back under water again. By the look on her face, his hands were being a bit more adventurous below the water line. \n\nI heard a commotion over in the pool and looked over to two girls on their guy's shoulders having a chicken fight. They were each trying to topple the other and as one girl went over, she grabbed onto the other girl's top and pulled it off. The spectators in the pool all cheered. The girl, who was now topless, tried to cover up at first but then just gave a \"fuck it\" shrug and held up her arms. The crowd went wild. The girl who pulled off the top popped to the surface and held up the top thinking they were cheering for her. When she realized they were cheering for the girl without her top, she pulled off hers as well and the crowd went crazier still. Pretty soon, more girls were pulling off their tops to try and get a bigger cheer going. An impromptu exhibition show just formed out of nothing and the place went wild. \n\nSuddenly, lights started swirling from what seemed to be a thousand lasers and a synth started slowly building with the beginnings of a house/trance song. The pan built to a peak and then exploded into a driving beat that shook the ground. The crowd just erupted into a frenzy of dancing, grooving, and cheering. \n\nHoly Shit! I said to myself as I sat up in my chair. I'd never seen anything like it before and was mesmerized by the transformation. \n\n\"Jesus Christ Brad! This place is off the hook!\" I was jolted again by Kelly and Kim as they pulled up chairs next to me. \n\n\"I know!\" I shouted over the throbbing beat. \"It wasn't like this last time I was here!\"\n\n\"Are these for us?\" Kim asked, pointing to the Margaritas. \n\n\"Yeah. If you want something else, just let the waitress know.\"\n\n\"I think this will do fine,\" she said as she poured a drink for Kelly too. They slammed down the drinks and then popped up from their seats. \n\n\"Where are you two going?\" I shouted. \n\n\"Dancing, where else? Come on! Let's go!\" \n\nThey each grabbed an arm and dragged me out by the pool. The atmosphere was electric as the crowd surged onto the patio and gyrated to the beat. We had a little room at first but we quickly got pressed together and wound up smashed together in a mass of bodies. Any notion of personal space was thrown out the window at this point. It was all one big throbbing organism that seemed to take on a life of it's own. \n\nI looked down at Kelly who was pressed up against me with her arms up in the air and her body moving sensually against mine. I flashed back to my fantasy in the plane and couldn't believe it. Of course my cock flashed back quicker than I did and started to stir as well. She looked up at me, smiled at me, put her arms around my neck, and pulled me closer. \n\nAt that point, I had reached the limit of my ability to hold back and appear unaffected. I let myself go and pulled her into me. We moved like that for a while and then she turned around and backed her ass into my crotch. Just then, I felt a pair of hands from around my back. Kim had moved behind me and was grinding from the other side. I could feel her tits on my back as she stroked my chest and then moved her hands to Kelly's tits. We continued grinding each other in various positions until we were soaking wet and exhausted. We made our way back to our table and flopped down into our chairs. \n\n\"Fuck,\" I said as I sat down. \n\n\"Just about,\" said Kelly as she sat and let out a laugh. \"Tell me Brad, do you always carry a flashlight in your pants when you go dancing?\"\n\nKim did a spit-take on her drink and busted out laughing. The two girls just about fell out of their chairs. \n\n\"Very funny you two,\" I said.\n\n\"What's very funny?\" The waitress put down a couple of plates of sliders, clams, and shrimp that I had ordered just before the girls got there and the earth started shaking. \n\n\"Brad! You ordered food! You're the best! I'm starving!\n\n\"Brad has a big flashlight and he was using it on the dance floor. It was getting banged around though and I think it almost exploded from the pressure,\" Kelly explained to the waitress who looked thoroughly confused. Kim meanwhile, had Margarita coming out of her nose at this point and basically couldn't breathe she was laughing so hard. Kelly kept up the story unfazed as she loaded her plate with food. \n\n\"I think it's a Maglite or something but Brad won't show it to us. It's the kind that supposedly lasts a long time. We tried to grab a hold of it but it seemed so big. I'm not sure I could even get my hands around it if I did grab it.\" \n\nKelly looked over at me with a sly grin. Kim was hyperventilating. \n\n\"Did you lose it on the dance floor,\" the waitress said to me. \"I can ask the other waitresses to look for it.\" \n\nNow I was laughing. \"No, I've still got it. Thanks. I'll show it to them back at the room.\" I looked back at Kelly with a \"right back at you\" wink.",
        "\"Well, Okay. Let me know if you need anything else.\" She walked away shaking her head as we all cracked up again. \n\n\"You are bad Kelly,\" I said, handing another napkin to Kim. \n\n\"I know. I'm sorry to tease you like that. I just can't help it sometimes. God, this shrimp is fantastic!\"\n\nIt was a long night of drinking, dancing and teasing back and forth. We finally stumbled back to the room at about 2:30. We were all so totally spent from the flight, the booze, and the dancing that we just collapsed on the bed and fell instantly to sleep. My last thought as my eyes closed was \"Fuck, I thought I was going to get some tonight...\"\n\nI woke up the next morning with two girls snuggled up on each side of me. Kim, on the right, had her hand on my chest while Kelly, on the left, had her hand on the waistband of my shorts. As I stirred, Kelly also came awake and bumped her hand against my cock. She felt around for a second and then said in a sing-song voice \"Who's got morning woo-ood?\"\n\nKim reached over and grabbed Kelly's hand on my cock and said \"I guess Kell does\", and they both started laughing. \n\n\"It's a Maglite,\" I said and they laughed even harder.\n\n\"You haven't had that since last night have you Brad? You know, erections lasting longer than four hours can have serious medical side effects. You should see your doctor.\" Both girls giggled again and then got out of bed, leaving me there with a raging hard-on. \n\n\"First dibs on the shower!\" yelled Kelly as she headed for the bathroom. \n\n\"Fuck that Kell,\" said Kim. \"I've got Margarita all over me. I'm coming in there with you like it or not.\" She closed the door and they both started giggling and hooting playfully. My cock stiffened even further as I tried to turn on my x-ray vision to see what was happening in that room. \n\nI got up to start some coffee and noticed that their banter had suddenly become quiet. All I could hear was the water running - for a long time.\n\n\"You girls alright in there?\" I yelled against the closed door.\n\n\"Yeah...we're, umm, fine,\" came Kelly's voice, sounding like she was out of breath. \n\n\"Umm, hmm,\" was all I could hear from Kim. \n\nHell, I didn't need x-ray vision. My mind could paint a perfectly good picture of what was going on. Yeah, Kelly is pressed up against the side of the shower and Kim is kneeling in front of her. Kelly has one leg up with her foot on the Kim's shoulder while Kim licks the slit of Kelly's cunt with the tip of her tongue. Because of the angle though, she can't quite get at it very well. \n\nKelly's breathing was quickening, \"I can't believe we are doing this Kim. You are so teasing me.\"\n\nKim doesn't say anything but turns over so her head is facing up between Kelly's legs. Kelly gets the message and puts her foot outside the tub on the floor. She leans forward, grabs the soap dish on the wall, and squats down over Kim's eager mouth. Kim lightly flicks her tongue along the smooth, slippery edge of Kelly's cunt. It's a slow, sensuous lick that sends shivers and shudders through Kelly's body. It's not like she hasn't had her cunt licked before but not by another girl. She is caught between the incredible sensations and the line that she didn't think she would be interested in crossing. She lifts her pussy just slightly away from Kim's languid tongue but can't help but ease back down a little to keep the feelings coming. The conflicting emotions are waging a battle in her brain when all of a sudden, the lust sweeps over her and she jams her cunt down on Kim's face letting out a low, guttural moan as she does. \n\n\"You made coffee! You are amazing!\" Kelly, wrapped in a towel, had come up alongside me at the counter. \n\nShit, back to reality. \"Here. Take these cups. Cream and sugar are on the table. Bagels are toasting and I'll have some eggs done in a minute.\" She looked up at me and slowly poked me in the side and on my arm.\n\n\"Are you for real?\" she asked. \n\n\"Yes. Now go get some clothes on so I can focus on these eggs.\"\n\n\"Eggs! And coffee! I'm starving,\" Kim said as she came out of the bedrooom. She was wearing shorts and a gauzy blue shirt - the kind that you can't tell if it's really see-through or not. The kind that you have to look for an extra second or two to decide if that's her nipple you can see or just a pattern in the fabric. The kind that she doesn't wear a bra under so you get that subtle little jiggle as she walks and moves around. Yeah, that kind.\n\n\"Oh, that's so pretty!\" Kelly ran her hand along the fabric, feeling the smoothness. \n\n\"I know, I love it! Umm, Brad, this was on the bed in the other bedroom along with a bunch of other clothes and stuff. It's not mine but I couldn't help by try it on. Are we in the right room?\"\n\nIt took me a second to register what she was saying and stop trying to catch a glimpse of her breast from the gape between the buttons of the shirt. I was perplexed and then I remembered. \"Oh shit, that's right! The boutique has a Vacation Package where they will deliver assorted clothes to the room so you don't have to bring as much. It's kind of like a Honey... Well, you know.\" \n\n\"Wow! This stuff is amazing!\" Kelly yelled from inside the bedroom. \n\nKim had seen the change in my face as I remembered who I had bought that stuff for. \"I'm sorry Brad. I shouldn't have put this on. Kell, package that stuff up. We need to send it back.\"\n\nWhat the Hell am I doing? Pining for her? Fuck that. \n\n\"No, no. Leave it out. Let's see what they brought us,\" I said as I finished putting the eggs on the plates and walked into the bedroom. \n\nOn the bed was practically an entire wardrobe. There were 5 sets of fabric that I assumed were bikinis since they seemed to consist of virtually nothing at all; assorted shorts and shirts ranging from t-shirts to the type that Kim was wearing; two mini dresses - one in black and one in blue; and a decorative box of lingerie tied up in a bow. \n\n\"Well, they do it right don't they,\" I said as I surveyed the scene. \n\n\"I saw some of this stuff in the boutique yesterday,\" Kelly said. \n\n\"Kell, let's wrap this back up. You should be able to get your money back Brad. I just got out of the shower so I can fold this top back up and nobody will know.\"\n\n\"Listen, why don't you two look through the stuff and decide if you like anything. I know you didn't bring much with you so if you need anything just grab it. If it doesn't fit, we can exchange it for a different size. That's part of the package deal.\"\n\n'That's so sweet Brad but we couldn't.\"\n\nLooking at the sexy clothes and lingerie, and thinking of those two in it had my cock twitching again. \"No, really. You guys need clothes and this stuff is already paid for.\" And I really want to see you two in those bikinis and mini-dresses and see-through shirts I said to myself as I walked back to the kitchen. \"Now come and eat some breakfast. I've got to go get checked in for the boat. Meet me on the dock with all your stuff when you are done.\"\n\nI grabbed a bagel and my coffee mug and headed out to the office. I just about ran into an older woman who was coming around the corner. She looked down at my tented shorts, gave a \"humph\", and scurried away.\n\nAt this point, my mind was spinning. Yeah, I just spent the night with two women (OK, I slept in the same bed with two women) who absolutely take my breath away. I've pretty much fallen in love with Kelly just when I had decided it wouldn't happen again. She seems like she's into me but I really can't tell if she's just nice that way and enjoys the teasing or if this could really go somewhere. Then there's the whole threesome possibility thing that keeps pushing its way into my brain anytime I see them together. Tie it all off with the visions of those two picking up the bikinis and holding them up to see if they would fit...\n\nI'm going with the fact that all these things spinning around in my head was the reason I didn't see the milk crate on the dock. Luckily, I was able to tuck my head and roll instead of crashing face first onto the dock. That's a hell of a way to lose a hard on. \n\nThe Dockmaster was the first to rush over to me to see if I was all right. I assured him that I was and that it was no big deal. \"It's my fault. I should have been looking where I was going.\"\n\n\"Nonsense. That crate should not have been left there. I'm so sorry sir. Let me help you up.\"\n\n\"I'm Okay, really,\" I said as I rubbed my toe. \n\n\"Are you staying at the Hotel,\" he asked.\n\n\"I stayed last night but I'm picking up a boat today. I was just heading to the office to sign in.\"\n\n\"Let me make it up to you. If you have your reservation papers, I'll get you signed in and you can just head down to the boat. Do you know the yacht name?\"\n\n\"Um, yeah; Mystic Adventure. That's really not necessary though. I'm not hurt.\"\n\n\"It's my pleasure sir. I'm going to talk to the Hotel manager and remove the charge for your room as well. Mystic is on Dock 3, toward the end. Please, accept my apologies and enjoy your charter.\"\n\n\"Look, you really don't...\" but he had snatched my reservation paper, whirled around, and headed off to the office. \n\nI felt a little guilty getting this treatment since it was my day dreaming about threesomes that caused the whole thing but he was not taking no for an answer so what the hell. I found Dock 3 and headed off in search of my Mystic Adventure. \n\nThe place was a buzz of activity. On any given day, there are boats coming in, boats going out, and all manner of maintenance being performed on the ones that aren't. I found Mystic at the end of the dock and my jaw dropped. It can be a bit of a crap-shoot picking up a charter boat. You can really only specify the size of the boat you want and you get whatever they happen to have available in that size when you get there. They are always relatively new but Mystic was brand-new! It was the latest model Beneteau 43.3, which meant it was 43 feet long and had 3 cabins. It was way overkill for what I needed but, at the time I reserved it, I wanted to make sure it had as much of the comforts of home as I could get so that \"The Princess\" wouldn't be too inconvenienced. \n\nThere was actually a crowd of people on the dock surrounding her. Some were workers cleaning her up and checking out all the systems. Others were other charterers I guess, checking out the new boat and marveling at her lines. \n\nAs I walked up, one guy looked over at me. \"She's a beauty huh? I think she's going out for her first charter today. Can you imagine sailing that thing?\"\n\n\"Yup, I've been imagining it for about six months.\"\n\nHe did a double take on me. \"It's yours! You dog! That is one sweet looking ride.\" He slapped me on the back and offered his hand. \"I'm Steve.\"\n\n\"Brad. Nice to meet you Steve.\" \n\n\"How long is your charter?\"\n\n\"Ten days. Are you coming in or going out?\" I asked. \n\n\"We're getting ready to go out,\" he said. \"I'm here with a college buddy. I pried him away from his wife for a week to come down and do some partying before he totally succumbs to that shrew of a woman.\" \n\nI laughed, \"Well, you should have a good time. I'm sure we'll run into you on one of the islands. We'll get together and have a drink.\"\n\n\"Sounds good. How many people are sailing with you? That thing looks like it could sleep 20.\"\n\n\"Brad! We found you!\" All the people on the dock turned to look at the source of the shout. The collective jaws of everyone on the dock dropped as they saw Kelly and Kim approaching. \n\n\"Just two,\" I said.\n\nKim was still wearing that shirt that I had wondered if it was really see-through or not. In the bright light of the tropical sun, I had my confirmation. Okay, it wasn't really see-through but it was just gauzy enough to let enough light through that the shapes and shadows of her two pert breasts jiggling slightly as she walked, were visible. Close enough for me. \n\nKelly, was wearing short-shorts and a crop-top that exposed her perfect midriff. It looked like she was wearing a bikini top underneath with straps that went around her neck. On her shirt was the age-old sailor's slogan of the tropics - \"Drink, Stink, and Go-Naked\". I had told her about that on the plane and I was tickled that she had picked up a shirt with it in the boutique. She was stunning in that outfit but what was even more dazzling was here smile and her unabashed, unconstrained, just happy to be alive attitude that flowed from her and seemed to infect everyone. The girls dropped their bags, threw their arms out and headed towards me in a run.\n\nDeep down, I know that time didn't actually slow down and that the sunlight didn't focus solely on her as she approached but it certainly did in my head. I could see Steve from the corner of my eye as he turned slowly to me with a look on his face that could only be described as \"You have got to be fucking kidding me\". \n\nAt that moment, despite having virtually fallen in to this heavenly arraignment, I had to admit, I was feeling pretty smug. \n\n\"What, doesn't everyone charter a bareboat in the tropics with two stunning women?\" I smiled just as they crashed into me and hugged me like they hadn't seen me in ages. \n\n\"Is this the boat?\" Kelly asked as she unlocked her arms from around my neck. \"Oh my god, it's beautiful! It looks so sleek and, I don't know, it just looks beautiful!\" She turned and looked up at me with a huge smile on her face and her eyes wide and gleaming. \n\nI thought back six months ago, to when I was looking at the charter catalog and I had seen the picture of this new boat. I mentioned that I hoped we could get that one. She had looked up from her Blackberry and commented that it looks like it would be slow and why couldn't we get a power boat instead so we wouldn't have to \"work\" during vacation. \n\nThe fact that Kelly could see the beauty of this boat and was excited by the prospect of learning to sail it and just be on it kind of kicked me into a different dimension with my thoughts of her. Up until now, I was basically just lusting after her and my dick brain was muscling out every other thought that might have been trying to wedge it's way in. Now however, in that instant of seeing something deeper inside her, that connection on a more emotional level than just playful sex-talk and teasing, something shifted. I still didn't want to over analyze the feeling but I knew it was different at that point. \n\n\"Brad, we've got you all checked in and the boat will be ready in just a few more minutes.\" It was the Dockmaster coming up behind us as we looked at the boat. He was holding my papers and was being followed by couple of guys wheeling hand trucks with milk crates full of food and provisions. \"Zeke, let's get Brad and his party aboard and help him with the provisions,\" he yelled up to one of the guys on deck. \n\nZeke, a huge black man who had been supervising some of the work, came back to the stern of the boat and extended his hand to me. \"Welcome aboard Mahn.\" he said in a thick Jamaican accent. \n\nI shook his hand and stepped onto the swim platform that forms the back of the boat and then into the cockpit. \n\n\"Ah dese lovely ladies with you mahn?\" he said as he looked up at Kim and Kelly. \n\n\"Yeah, let's help them onboard.\" I moved back to show them how to step onto the platform from the dock. \n\n\"No mahn, I got it\" and with that he reached up and grabbed both girls - one in each arm - and deposited them on the swim platform in one smooth motion. I'm pretty sure all three of them enjoyed the ride and Zeke gave me a knowing look as he set them down.\n\n\"Thanks Zeke,\" both girls said in unison. Kim gave him a kiss on the cheek and then they stepped into the cockpit.\n\n\"What do we have to do Brad? We don't really know anything about this.\"\n\n\"Okay, we have to get all the food stowed onboard so you two start putting things below as the guys put the crates onboard? Just get the cold stuff in the fridge as quick as you can and then put the other stuff wherever you can find a spot for it. I've got to go over the boat with Zeke.\"\n\n\"Okay, we're on it.\" The girls headed down below. \n\nI just started to talk with Zeke when I heard \"Holy shit! This is amazing!\" from down below. \"Brad, have you seen it down here? It's huge!\"\n\n\"I'll be down in a minute Kelly. Check it all out so you can give me the tour.\"\n\nI looked over at the dock and there were still tons of people just milling around and admiring the views. It wasn't just guys either. I swear I detected a new sexual undercurrent that had started when the girls arrived. The wives and girlfriends who were on the dock were just a little more clingy on their guys. There were a few shirts that were unbuttoned a little farther than I had noticed when I first got there. One couple were in a full embrace and the guy had his hands down the back of his girl's shorts exposing the top of her thong swimsuit bottom. She pulled his hands away but grabbed him by the arm and led him off quickly. What the hell man? It's like these girls give off some kind of electrical field that turns people into sex junkies! It's weird but I'm not complaining.\n\nThe girls busied themselves with packing away the food and drink and exploring the cabin below while I went over all the yacht systems with Zeke. Regardless of their size, all the charter boats are pretty much the same and I was familiar with all the controls and gizmos on the boat. Zeke asked me if the girls knew anything about sailing and I had to confess that they didn't and I was going to be pretty much single-handing this boat the whole time. I knew they would be happy to pitch in but some things, you just don't learn in a week. \n\n\"You're in luck mahn,\" he said as he took me back to the cockpit to show me some fancy new equipment. Sailboats, even big ones, are very easy to steer. The hard part, the part you need a crew for, is trimming the sails. The sails have to be positioned just right depending on the wind direction and the direction you want to go so it can involve a lot of letting out and pulling in on the ropes that control them. On a big boat, with big sails, that can be back breaking. This boat, Zeke showed me, had a new system that trimmed the sails automatically if you wanted it to. Having grown up on the water, racing all kinds of boats, that seemed sacrilegious to me but, under the circumstances, it was going to be a godsend. Zeke explained how it all worked and said I'd have \"no problem mahn\" taking this boat wherever I wanted to go. \n\nAs I signed off on the checkout checklist and Zeke stepped onto the dock, he winked and called out \"Don't do anyting I wouldn't do mahn.\"\n\n\"What wouldn't you do?\"\n\n\"Noting that I can tink of,\" he laughed as he walked down the dock.\n\nI hear ya bro. \n\nOkay, time to see what the girls had figured out below decks. I climbed down the companionway steps into the main salon and immediately saw why Kelly was so blown away. \n\nThe galley was immediately to the left - port - at the bottom of the stairs and then it opened up into a center table with plush seats along each side. Kim was busy putting things into cabinets and compartments so that they wouldn't bash around when we were under way. To the right - starboard - there was a navigation station with radios, GPS systems, and a weather plotter - not that you'd really need any of that stuff in the Virgins where the weather was pretty much always clear and you could see everywhere you needed to go. To the rear of the boat were two master staterooms with a large bed in each. I poked my head into each of them. Each room had a private head - bathroom with included shower. Very nice but I was hoping to find Kelly and was disappointed when I didn't see her. \n\n\"Where's Kelly,\" I said as I came back into the galley. \n\nKim nodded her head towards the forward cabin so I went up and knocked on the door. \"Kelly?\"\n\nI heard her say \"Don't come in,\" but it sounded like she was crying. ",
        "\"Are you Okay?\" I cracked opened the door slowly and saw her lying on the bed with her face buried in a pillow, obviously sobbing. \n\n\"What's wrong,\" I said as I hurried over to the bed. \"Are you hurt?\" She didn't seem to be in pain but she was definitely crying.\n\n\"Oh Brad. This is all so wonderful and so beautiful. It's just too much. I started thinking about the fact that it's going to be over in 10 days and I just started crying.\" \n\n\"Hey, that's not like you. You take every day one at a time and enjoy them all to the fullest. Don't start worrying about things that haven't happened yet. Let's just have some fun and worry about tomorrow, tomorrow.\"\n\nShe rolled over and wiped her eyes and smiled. \"I know. I'm so stupid. I never do this but all of a sudden, the thought of this being over and going back to the real world just hit me and I started balling!\" She sniffled and wiped her hair from her face. \"God, I'm a wreck.\" Then she looked up at me and into my eyes. She sat up and wrapped her arms around my neck and buried her head in my chest. God she smelled good. \n\n\"Brad, I know we've been joking around and having fun like this is just a big party but I want you to know how much this means to me. And Kim too.\" She pulled back and looked up at me, \"to think how close we were to having a real problem down here and then to have it transformed into something like this is just, well, I just can't believe it.\"\n\n\"Hey Kelly,\"\n\n\"My friends call me Kell.\"\n\n\"Oh, okay...Kell.\" Shit, there goes another shift in this \"relationship\" that seems to be forming. I don't really want to think about that right now. \"Look, it's me who should be thanking you. I was wallowing in my own self-pity when I got on that plane. But when you sat down in 18C and looked at me with those beautiful blue eyes and infected me with your every-day-is-an-adventure outlook, you snapped me out of it right then. You basically saved this vacation for me when I thought it couldn't be saved, just on the flight down. Now that you are going to be with me for the whole week, I think that's probably fixed me for the rest of my life.\"\n\n\"Oh Brad, that's the nicest thing...,\" she started sobbing again and clung to me harder. I held her until she calmed down and hit me in the chest. \"Get out of here. I've got to get myself together so I can get back to having fun!\" \n\nI got up and headed out, \"Make it snappy, we've got to be heading out pretty soon. I don't want to be anchoring at Marinas Cay at night.\"\n\nKim looked up as I came out of the forward cabin, \"Is she alright?\" \n\n\"Yeah, I think she got a little overwhelmed by it all. She's fine.\"\n\nKim took a more serious tone. \"Listen Brad, I really want to thank you for all this. This is more than we could have ever wished for. I can't believe we are going to be sailing around this paradise for 10 days. When I think of what that snobby cruise ship would have been. With smarmy assholes who would be hitting on us from the second we stepped on the ship. Ugh! Thank you for saving us from all that.\" She leaned in to me and kissed me on the cheek and as she did, her shirt gaped open a little giving me a quick glimpse of the perfect inside curve of her breast. No, thank you my dear.\n\n\"Kim, I just told Kelly that it's you two who I want to thank - for saving my vacation. I've got a whole different outlook on life from when I started and it's because of you two.\" My dick was urging me to rip her shirt open and bury my face in her breasts but I resisted and kissed her forehead instead. As much as I wanted to bone the shit out of these two, and frankly, that was seeming like it was going to be more and more of a possibility, this seemed like a connection moment that I didn't want to ruin.  \n\n\"When you guys are ready, come on up on deck so we can go over some things about the boat.\"\n\nI headed up the companionway stairs back out into the sunshine and the bustle of the dock. The crowd had thinned out by now and several boats had left or were in the process of leaving. I saw Steve on the other side of the dock, casting off the lines from his boat while his nervous looking buddy/crew tried to figure out where to stand and not be in the way. Oh man, I had a wave of worry wash over me when I saw that. I've taken people sailing before who, for some reason, just didn't mesh with the boat. They were nervous, uncomfortable, and just had a terrible time. Sometimes, you don't know until you actually do it if this thing is for you. For all their enthusiasm, either of these girls could wind up hating this and that would be a predicament. \n\nSteve looked up and I pushed that thought out of my mind. \"Hey man, we'll see you out there!\" I yelled as he threw off the last line. \n\n\"You suck!\" he yelled back as he busted into a big smile. He glanced over at his buddy who was in white shorts and freaking cardigan; looking like he was afraid he was going to catch something if he sat down, and looked back at me. He shook his head and turned to his wheel to guide the boat away from the dock. \n\nI chuckled and turned back to see Kim and Kelly coming up from below.\n\n\"Who sucks?\" Kelly asked, looking fully composed and as radiant as ever. \n\n\"That was Steve. I met him just before you got here. I'm pretty sure he thinks the gods had some sort of mix-up and you two were supposed to go with him on his boat instead of his buddy.\" I pointed to Steve's boat as it moved slowly down the row of docked boats heading out to the harbor. \n\n\"Does he have a captain for his boat?\" Kim asked, looking at the spiffily dressed man on board.\n\n\"No, that's his buddy. He's dressed up like some kind of yacht club officer or something.\" \n\n\"Oh my god, that's too funny! He looks like he has a corn cob up his butt!\" Kim burst out laughing at her own comment and Kelly punched her playfully in the arm. \n\n\"That's not nice!\" she laughed. \"But god, you're right. He looks like he really doesn't want to be there. That'll be a fun time for your buddy Steve.\" \n\nJust then, Steve looked back towards us and obviously now saw the girls on deck with me. He flipped a finger at us but I knew he was just giving me shit and I knew I deserved it. Kelly started waving back so I waved too. \n\n\"Bye Steve!\" I heard Kim yell and I looked over at her expecting her to have joined in playfully rubbing it in his face. She was rubbing it in all right. She had her shirt pulled open and was full on flashing him and everyone else who happened to be looking.\n\n\"Kim!\" Kelly screamed and then burst out laughing. \n\nI don't know how I managed to pull my eyes from Kim's perfect chest but I looked back at Steve just in time to seem him turn away shaking his head. He looked up to the sky and raised his hands in a \"Why me God\" kind of gesture. \n\nA few seconds later, the radio on the wheel pedestal crackled to life. \n\n\"Mystic Adventure, Mystic Adventure; this is Razor,\" I knew it was Steve calling for one more parting shot.\n\n\"Razor, this is Mystic. Switch to channel 3.\" Everyone leaves their radio on channel 16 but you can't carry on a conversation on that channel so the normal protocol is to agree to an alternate channel for your chat. I showed Kelly how to switch the radio to channel 3 and raised the mic. \"Razor, this is Mystic. Copy?\"\n\n\"Hey man, tell whoever that was; thanks for the lovely parting gift. And, did I mention; You suck!\"\n\nI laughed and raised the mic to answer him back but Kim grabbed it out of my hand. \n\n\"Ooh! I want to talk to him. Do I press here?\"\n\n\"Yup. Just let go when you are done talking or you won't hear him.\"\n\n\"Hi Steve! This is Kim. I'm sorry I did that to you. I hope it didn't scar you for life or stunt your growth.\" She looked at me, \"Do I have to say 'Over'?\"\n\n\"No,\" I chuckled.\n\n\"Darlin', I can assure you that my growth is not stunted by that display.\" We all laughed at the stupid double entendres that were flying. \"You made my day Kim. Thanks for that. I don't even want to know which islands you are heading to. I don't think my heart could take it but if we run into each other, you are all invited over for rum punch and cheese.\"\n\n\"It's a deal,\" Kim said. \n\n\"Razor, out.\"\n\n\"Do you think we'll run into him out there Brad?\" Kim asked as she handed me the mic. \n\n\"It's a pretty good bet. There are a pretty well established set of ports in the islands so it's a good chance we'll see them again. I hope we do. He's a nice guy.\"\n\nKelly punched me in the arm, \"You just want to see Kim's tits again.\"\n\n\"No way. Didn't you know? I'm gay. That stuff doesn't interest me in the least.\" I tried to give my best disinterested look.\n\n\"I know a maglite that says different,\" Kelly said and we all broke out laughing at the memory of last night at the bar.\n\nWe spent the next hour or so going over the boat and how the various lines and winches worked. I showed them how to raise the mainsail and unfurl the jib and we talked about how we would anchor when the time came. They picked it up very quickly and seemed to have a good sense of what they would be doing. I reminded them that while there would be time for sunning and relaxing once we were anchored, while we were sailing, there would be some work, especially when going upwind. They said they were ready for anything so I started getting ready to get going. \n\nJust then, I realized that I had not brought my gear from the hotel room. Shit! I hadn't even checked out! I told the girls to sit tight and I would run back to the room to get my stuff. I stepped onto the dock and saw the Dockmaster coming towards me with my bag on a cart. \n\n\"I thought you might be needing this Brad,\" he said as he approached. \n\n\"Oh thanks! I got so caught up in getting the boat ready, I forgot about the room!\"\n\n\"No worries Brad. We've got all your things right here. I've squared your account with the Hotel manager and you are all set.\"\n\n\"You really didn't have to do that. It was my stupid mistake for not looking where I was going.\"\n\n\"Case closed Brad. It's done and it's our pleasure. There is one more thing however. Your guests wanted to return the Boutique package that you bought and credit it back to your account. Since I had settled your account with the manager beforehand, there really wasn't any reason to return the items so I've brought them with me. Would you still like to have them? \n\nI looked back at the girls. I knew how excited they were when they first saw the clothes.\n\n\"We just felt bad and thought if we can't actually pay you for this wonderful trip, we could at least try to save you some money.\"\n\nI was touched by their thoughtfulness. And Kim's shirt was still unbuttoned. It was just open a little bit and I couldn't actually see anything but frankly, that's even more sexy than if she just had the whole thing open. The tease; the hint of what you can't see but know is there just around the corner; that's the shit.\n\nFocus. I looked back at the Dockmaster and then back at the girls.\n\n\"I guess it's not coming out of my wallet so what do you say? Do you want this stuff?\"\n\nThey looked at each other and then smiled, \"Okay!\" They shouted in unison. They jumped up and reached for the packages that the Dockmaster was handing over. Each time Kim reached for a package, her shirt opened up and I got a flash of her breast. God, they were perfect. They weren't big but they were perfectly shaped and so smooth looking. \n\nWhat the hell is it about the curve of a woman's breast that is so mesmerizing? Why do guys, who've already seen a hundred of them, still want to see more? I'm sure it's related to some sort of evolutionary procreation selection that promotes the species or something. Whatever it is, I'm glad we have it.\n\n\"Earth to Brad.\"\n\nKelly's voice snaped me out of my Darwinian daydream and I realize that I'm staring at Kim's right breast as she takes the last of the packages from the Dockmaster. \n\nKim looks over at me, \"Oops!\" she says with a sly grin. She turns to carry the clothes down below and I look back at the Dockmaster.\n\n\"You have a good trip Brad. Call us on channel 16 if you need anything or have any problems.\"\n\n\"Will do sir and thanks again for all you've already done.\"\n\nWith that, I fired up the engine and got ready to shove off. The dockhands helped untie the lines and guide the big boat out from its spot between two other boats as I slowly kicked it into gear and got underway. As I got clear, two smaller boats approached us from the side. One was our dinghy. It was a small, inflatable boat with a little outboard engine on the back. The guy in it brought it alongside, tied its long bowline to the boat and then jumped in the other boat for a ride back to the dock. Our dinghy fell back behind us and would follow in our wake, ready to take us to shore when we anchored. \n\nThe yacht basin was not very crowded but I still moved with care out to the main harbor. From there, I headed out to the Sir Francis Drake Channel - the main sailing area of the Virgin Islands. The girls were on deck, just taking in all the scenery and tidying up various lines as I had shown them earlier. As we got closer to the mouth of the harbor, I could feel the wind picking up. This was going to be a good sail up to Marinas Cay. \n\n\"All right girls. Let's get ready to raise the main,\" I yelled over the sound of the engine and the waves. They got to their places as I had explained and found the right line to use to raise the sail. They wrapped it around an electric winch and held on to the end.\n\n\"Ready!\" they said.\n\nI turned the boat straight into the wind. \"Do it!\"\n\nThey started pulling on the line and the winch kicked in and \"assisted\" their efforts. This is the first time I'd seen one of these new assist winches and I was instantly sold. Normally, someone has to put a handle into the top of the winch and hand crank the thing around and around as someone else pulls on the end. It's a tough, tedious process - especially on a big boat. The assist winch senses someone pulling on the rope that is wrapped around it and its electric motor turns on and helps. The harder you pull, the faster the winch will turn until it has to gear down as the load gets high. The girls had no trouble raising the mainsail so we were quickly ready for the jib.\n\nThe jib is the sail in the front of the boat and it is stowed by wrapping it around and around itself like a window blind while it's attached to the wire going up to the top of the mast. To deploy the jib, you don't raise it, you just unfurl it like you would pull down a blind. The jib is an even bigger sail than the mainsail oddly enough and it has to be controlled with its own set of winches - one on each side of the boat. These were also assist winches and the girls set them up as I had shown them. \n\n\"Ready!\" they yelled.\n\n\"Do it!\"\n\nLike the curve of a woman's breast that I never get tired of, there's a moment in big boat sailing when three things come together that is similarly wonderful. As the girls pulled the jib out, I slowly eased the boat off of the eye of the wind. This put the wind to one side of the boat. Here's the moment. The sails filled, the boat heeled over, and I cut the engine off. \n\nTo the newbie, the silence is startling. You go from a rumbling diesel engine and its associated vibration that has blended into the background to just the sound of the wind and waves. Then, as the boat gets its side rail down and it starts driving forward through the waves, it produces one of the true \"sweet spots\" in sailing. To new sailors, it's either an epiphany or a \"Holy shit, get me off of this thing!\" moment and I was desperately hoping it would be the former with these two girls. \n\nKim and Kelly tied off the jib and scrambled up to the high side of the boat as I had explained to them earlier. They each grabbed hold of the lifelines that form a kind of fence around the boat and looked out over the ocean. I could see them taking it all in; looking down at the low side that seemed to be straight down and practically under water. I saw them look up at the sails and all the way up to the top of the mast. I could see them soaking it all up but I didn't hear anything from them. On the one hand, this could be a good thing. Of course, hearing nothing meant that they were not screaming in terror. That would have been bad. Really bad. \n\nThe fact that they weren't saying anything still had me a little worried though. I quickly found out why they were silent. Kelly slowly looked back at me and her mouth was open - jaw dropped style - and her eyes were wide and gleaming. \n\nGotcha.\n\n\"Oh my God! This is fantastic!\"\n\n\"I'm glad you like it. I was a little worried that you might make me take you back to dry land.\"\n\n\"Never! I never want to get off!\"\n\nI called up to Kim who hadn't said a word yet, \"Kim, you okay up there?\"\n\nKim turned back towards us with a somber look on her face. Uh, oh.\n\n\"Two words,\" Kim said. \"Fuck. Me.\"\n\n\"Um, is that good?\" I stammered.\n\n\"Let me get this straight,\" she said. \"Your girlfriend didn't want to come on this vacation? She knew what this was like and decided not to come?\"\n\nSo I guess that was good. What a relief. \"Yeah, I'd taken her out before. She said it was too tippy and didn't like the salty air. She said it ruined her perm.\"\n\n\"Fuck her. You're good to be rid of her. Anybody who doesn't see the beauty in this is a nut job.\"\n\n\"No shit,\" I said as I released a huge sigh. I realized I had been tensed up like a spring this whole time, praying to the gods that this would work out. It was the make or break point basically. Everything from here on would be smooth sailing... \n\nThe trip to Marinas Cay was easy and smooth. I pointed out the different islands and told them how the sails worked. I even let Kelly steer for a little while. She picked it up almost instantly and was even able to read the sails and adjust her course when the wind shifted slightly. It was hard to believe but it was like she was a natural. \n\nWhen we got to the island, we dropped the mainsail, furled up the jib, and motored into the cove. We dropped anchor, relaxed with some drinks, and watched a few other boats come in. Kelly went below, apparently figured out how to work the stove, and came back with a delicious meal of broiled shrimp and stir-fried veggies. Kim and I just looked at each other. \n\n\"How did you do that!\" I asked in amazement.\n\n\"When we were loading the food this morning, I saw the shrimp and knew we had to have it for dinner tonight. One of the guys showed me how to work the stove so I just whipped it up. It was easy!\"\n\n\"Well it's fantastic Kell. I love you.\"\n\n\"I love you too Kim.\"\n\nI watched frozen, with a shrimp poised at my mouth, while the girls looked into each other's eyes and leaned in to kiss. It wasn't a tongue thrashing make out session like my dick was hoping for but it was just a little longer than a casual, best girlfriends kiss. I remembered back to the time they were in the bathroom together this morning and how it was just a little too quiet in there. Of course, I also thought back to my vividly wicked, prematurely interrupted fantasy of them in that bathroom and my cock started to twitch again. Down boy. Patience Grasshopper. Easy big fella. I swear I heard him say, \"Fuck you asshole! I need to bone these bitches or I'm gonna explode!\"\n\nWe finished the last of the shrimp and refilled our glasses with rum punch. It was dark and I leaned back on the cockpit cushions and looked up at the sky. The stars were in full splendor tonight. \n\n\"Do you guys know the constellations?\"\n\nThey followed my gaze upward and gasped together. \n\n\"Oh my God.\"\n\n\"Fuck. Me.\"\n\nI now knew that these responses meant that they liked what they saw. \n\n\"Do you know what they all are?\" Kim asked as they both slid up on either side of me and laid back. \n\n\"Some of them. Not all.\" I showed them the ones I knew told them what I knew about celestial navigation - using the sun and the stars to navigate a ship. I told them I'd never really used the stars to navigate, I just knew the theory but they still thought it was cool and I enjoyed sharing it with them. ",
        "Kelly was the first one to shift her position so that she was turned into me rather than looking straight up. She put her hand on my chest and traced lazy circles in my chest hair. Every once in awhile, her hand would graze my nipple and shoot electric sparks directly down to my cock. I soon felt Kim's hand join in as she nestled in as well. \n\nThe sound of the water gently lapping at the side of the boat, the warm breeze softly playing over us, and the Moon reflecting on the water were all working together; starting us on a journey that was quite a bit different than the one to Marinas Cay. \n\nI looked over at Kelly snuggling in my arm and she looked up at me. I felt like I needed to say something but before I could, she moved up and kissed me. It was a sweet, gentle kiss at first but it quickly went to critical mass and before I knew it, our tongues were twisting over each other and I was running out of breath. I pulled back and looked at her. We both caught our breath, and then smashed our faces together again. \n\nI vaguely became aware of something warm and soft on my left nipple and then realized that it was Kim lightly licking and flicking her tongue all over it. I broke off of the kiss with Kelly and looked over at Kim. She stopped what she was doing, looked up at me and then attacked my mouth with hers. \n\nHoly Fuck! Okay, yeah, I had thought about the possibility of this but it was always just that - a possibility. I didn't really want to think about it too hard because it just seemed like in reality, it would be weird. \n\nYeah, so, I'm okay with weird if this is what weird is. Kelly was now licking my right nipple and her hand had moved down to my right leg. She was brushing her hand along my thigh, just teasing me with her proximity to my now raging erection. I turned back toward Kelly and Kim, instead of going back to work on my nipple, followed my mouth over to Kelly's, pulling herself over my chest to do it. She had managed to wriggle out of her shirt as well so her bare tits were smashed on my chest. All three of our tongues were engaged in a fierce battle for some kind of domination. Just then, Kelly's hand grabbed my cock and her tongue stopped. Kim's stopped as well and we all kind of froze there with our tongues still in each other's mouths, but not moving. \n\nWithout moving her mouth from where it was, Kelly mumbled, \"I found the maglite.\"\n\nAll three of us exploded into laughter. The girls were giggling hysterically and I was laughing so hard I had tears in my eyes. Our faces were still pressed together though and we would each alternately stop laughing long enough to have a quick lick or tongue battle with one of the others before cracking up again. Through it all, Kelly's hand never left my cock. She wasn't pumping it, just caressing it and giving it a squeeze every once in a while. We finally stopped laughing and began to kiss in earnest again. I felt Kim's hand slide down my chest and dig beneath the waistband of my swim trunks. The tie was still tied which made it a tight fit for her hand. She fumbled around for the tie, pulled it apart, and whipped my trunks down in one motion. Damn!\n\nKelly's hand re-grabbed my cock as well so both girls had a handful. As if on cue, both girls started sliding their tongues down my chest. They lingered a bit around each nipple and then continued lower. With my face now free, I looked down to take in the view. Kim had gotten on her knees next to me with her mouth still licking its way south. Her tits were hanging down and would rub on my chest if she reached over to the far side to kiss Kelly. I now noticed that she was also out of her shorts and had on only a G-string or thong bottom. I moved my left hand up and caressed her breasts. They were every bit as good as I had expected. Firm and smooth with small, dark nipples that were begging to be sucked. I pulled my hand up and moved it out to her ass, which was out to the side of me. It was every bit as smooth and firm as it looked to be under her shorts. I caressed her butt and ran my hand around the inside of her thigh, slowly bringing it up to her cunt. I could feel her wetness through the thin fabric of her thong and she let out a low moan as my fingers played over the outside of her pussy. \n\nWith my left hand exploring the wonders of Kim's slippery slit, my right hand found Kelly and I caressed her back as she slid down my side. All of a sudden, she stopped and slid back up my side and nuzzled her face in my neck. She licked up to my ear and whispered softly. \"God, I'm on fire. I'm pretty drunk but you are driving me crazy.\"\n\n\"Mmm. Me too,\" I whispered back. I wasn't really sure if she was making an excuse for this or what.\n\nShe seemed to get a little more serious but still whispered, \"I can't keep my hands off you but I still feel a little weird.\"\n\n\"What's wrong.\" I slid my hand over her ass and felt her bikini bottoms bunched up into a wedgie under her shorts. \n\n\"I don't know. I guess I just don't want you to think I'm a slut. I totally want to make out with you, and Kim too, but I also don't want you to think less of me if we do. I just don't want you to think that Kim and I just go around tag-teaming every guy we meet.\"\n\nMy hand stopped groping her ass. God, what is happening here? How is this girl connecting so completely with my head? I knew exactly what she was conflicted over because I was thinking the same kind of thing. I desperately wanted to have a threesome with these two but I was starting to have more than just lustful feelings for Kelly. I didn't want her to think of me as just some guy out to bag some chicks and toss them away in the morning. Can you mix no-holds-barred debauchery with serious emotions, respect, and... I didn't want to say that word but I knew what I was thinking.\n\nMy left hand had stopped fingering Kim and she had eased up on the hand job she was administering to my cock. She seemed to be part of the conversation without actually joining and I had the sense that she felt some of the same feelings. She laid back down beside me and put her head on my chest, listening.\n\n\"If you can believe it, I know exactly what you mean. You guys are so amazing that any guy would give his left nut to have animal sex with you.\" Kim twiddled my left nut and I squeezed her ass. \"Obviously, this is a fantasy that I'd only ever dreamed about but there's something more here that I don't want to lose either.\n\n\"Like I told you on the plane Kell, this place is different and you get to suspend the normal rules while you're here. I think we should just go with it and concentrate on having the most fun we can have while we are here. That should be the number one goal - our pact. If it feels good, do it. What happens in Vegass, all that stuff. When the trip is over, and we are back to being real people, we will rejoin the real world where you have to consider a few more things. Until then, all that matters is the pact. What do you think?\"\n\nKelly responded by squeezing me tighter and then lifting up and giving me one of the softest, sweetest kisses I've ever had. Its message was clear. She looked over at Kim. I don't think Kim was quite so conflicted but I'm sure she could sense Kelly's feelings and angst. Kelly reached over and drew her in for another kiss that was equally touching. I think the pact was sealed.\n\nThe girls broke off the kiss and smiled at each other. \"Works for me,\" Kim said. She squeezed my slightly softened cock, pushed herself up to turn around, and wrapped her lips around me. Fuck. Me.\n\n\"So you want to have animal sex huh?\" Kelly said as she looked down at Kim licking the head of my now stiffening cock. Quite a rollercoaster huh buddy? \"Do you have fantasy about making it with two girls?\"\n\n\"Oh no Kell. I never think about that,\" I said in my most sarcastic voice. \n\n\"Honestly, I've never dreamed of two girls sucking my cock - almost fighting over it to get more licks than the other. I've never wished that it was my cock in the porno movie that the girls would kiss from opposite sides, sliding up and down, ending with them kissing each other as they came off the end and then the cock pushing them apart again as they went back down the sides. Nope, never, ever thought of that.\n\n\"I've never even remotely entertained the idea of.\"\n\n\"Okay, I get it fantasy boy,\" she laughed. \"So, you're saying that if I moved down here with Kim and pulled your cock out of her mouth like this, that would be good?\"\n\n\"Uh, yeah.\"\n\n\"And if I slowly licked up the side of it like this,\" she slid her tongue teasingly along the underside as she looked me in the eyes, \"that would be good too?\"\n\n\"Mmm.\"\n\n\"I should probably suck it like this right?\" She licked the tip and then sucked it into her mouth, still looking straight into my eyes.\n\n\"Shit.\"\n\nShe popped it out of her mouth and looked at Kim and then back at me. \"Should I make Kim suck it now? Would that be good?\"\n\n\"Yeah, that'll work.\" I could barely speak.\n\n\"Maybe I should just rub it all over her face first. Like this.\" Kelly smeared the head of my cock all over Kim's face while Kim's tongue tried to catch a lick as it went by her mouth. \n\nKelly then moved closer to Kim and followed the head around with her tongue as well. This, of course, resulted in the two of them alternately kissing each other and kissing and licking my cock. It then just fell into an out an out sucking frenzy with both girls taking turns licking and sucking. When one girl had my dick in her mouth, the other would move down to my balls and lick them. She would move back up to my cock, lick the other girl's mouth as my cock disappeared into it, meaning \"my turn\", and they would switch. \n\nI had tried at first to fondle the girls as best I could but they had shifted so far down that I couldn't really reach them. After a few minutes of this onslaught, I was so focused on what they were doing to my cock that I just gave up. I fell into that mode where all you can do is just give yourself over to it and concentrate on the pleasure. \n\nMy breathing was quickening and I could feel myself getting close the edge as these two temporary sluts worked me over. Kelly could feel it and upped the ante. She popped my cock out of her mouth and looked me straight in the eyes again. \"So, in your fantasy, do you shoot your load on these two girls?\" She stroked my spit-soaked cock with her hand and smiled. I hadn't gotten to that part in my fantasy description, nor to the part where the girls talk nasty as they suck me either but she had hit on them both. Fuck.\n\n\"Do you think I should just jack you off into Kim's face? What do you think Kimmy? Would you like that?\"\n\nKim answered by following Kelly's hand up and down my shaft with her mouth. \n\n\"You probably have a lot of cum stored for all the teasing you've been getting. It would probably make a mess if you blasted her.\" \n\nOh god. \n\n\"I might have to lick it off of Kim's face too. You think?\"\n\nIt started in my toes I think. It actually started kind of slowly. It built in my toes and feet but then quickly gained power and raced up my legs. Kelly could see the change coming over me. I needed to close my eyes but I couldn't look away from her as she took my cock from Kim, sucked it, and put it back in Kim's mouth. \n\n\"Maybe I'll spray both of us so that -\"\n\nI lost it. My balls clenched and then let loose. The first shot happened when I was still in Kim's mouth and she let out an \"Umm\" as it hit. Kelly quickly pulled me out to put me in her own mouth but as Kim's mouth came off, the second shot fired and hit Kim in the lips. Kelly held my cock there as it spurted and she smashed her face on my pulsing dick. This drove me ever further over the edge and I shot even harder. The two girls were getting blasted by my cum and were eagerly licking each other's faces and my cock as I spurted. It was the hottest thing I had ever seen and I came harder than I ever had in my life. \n\nThe smut stories and letters to Penthouse all have descriptions where the guy says something like \"My cock shot gallons of cum on her pretty face.\" Then all the scientists say something humbling like \" Ahem, the average male ejaculate is approximately two tablespoons.\" Yeah, fuck that. I came gallons. \n\nOk, not gallons but those girls were fucking plastered. They never skipped a beat though. As much as they tried to maintain the \"gimmie all you got big boy\" attitude, I think they were a little surprised too. \n\nKim was the first to break out of the Superslut persona. \"Holy shit Brad!\" She ran her finger along Kelly's upper lip and sucked off the cum. \"How long have you been storing that? I didn't think one guy could have that much cum.\" \n\nKelly handed her a shirt to wipe off her face - at least what hadn't already been licked off.\n\nI was so out of breath that I couldn't answer. It was at this point that I realized that I had also basically been in a crunch position for that last fifteen minutes. In order to watch all the action happening in my crotch, I had picked my head up and been in a sit-up position with my abs tensed. My abs had now decided that they had had enough and let go. I fell back against the cockpit cushions exhausted. My legs were numb, my toes were curled and I was absolutely drained - both literally and figuratively. \n\nThe girls' faces appeared over me as the lights were going out. I groggily said something like \"I want to do you now,\" but I knew that wasn't going to happen. The girls smiled at me, looked at each other, and back at me. My eyelids were fluttering now and I was desperately trying to keep them open. Each girl bent down and kissed me. \n\n\"You are delicious lover,\" Kelly whispered in my ear between kisses on my neck, nose, forehead, and lips. \"Sweet dreams.\"\n\nMy last conscious thought was me wondering if it was possible I was falling in love with this girl. \n\nThen everything went dark."
    ],
    "authorname": "smugmug",
    "tags": [
        "threesome",
        "sailing",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-mystic-adventure"
}