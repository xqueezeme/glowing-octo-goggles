{
    "title": "Immortal Gift of Beauty Ch. 02",
    "pages": [
        "Hank is back from Greece, awaiting the return of his mature lover, Ambrosia. \n\nYou asked for it, so here it is. I hope you enjoy it. \n\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n You know that saying about dog years? How one real year equals seven years of a dog's life? \n\nDogs got it easy. I found that one week away from my luscious Ambrosia was an absolute eternity. I swear, time stood still. It was torture. \n\nThe torture was further compounded by the fact that the source of my pain had to remain secret. Hiding my emotional agony from Dad was easy; he wouldn't notice if I had a screaming tantrum on the floor, but Mom and my sister were a bit tougher. They had typically attuned female emotional radar, and would pick up on things I thought were invisible. \n\nThe only saving grace was that it was only one week. Right, only seven days. Just one hundred sixty-eight hours, a little over ten thousand minutes, or six hundred thousand seconds, all of it in the presence of a clock that seemed determined not to move, and gave up those seconds grudgingly. \n\nLike I said.... eternity. I could still taste that last kiss, the night before we left. No amount of time and stale airline peanuts could erase it. \n\nTick. \n\nTick. \n\nTick. \n\nWas this fate's way of punishing me for getting involved with a woman who was old enough to be my mother? If so, then fate was cruel to have brought us together, and to have made a longer relationship even possible. No, I chose to believe it was merely a test of my patience. Good things are worth waiting for. \n\nOnly a little more than half a million seconds to go. \n\nSigh. \n\n ***\n\n The app on my phone told me that Brosie's flight would be landing within the hour. If only she was arriving alone, I would meet her at the airport, and show her how much I missed her. Alas, Marina was travelling with her mother, and she already didn't like me. If she knew what we had done already, her attitude would most certainly not improve. \n\nSo, I would have to wait, as patiently as possible, at home in my room. At last, my phone buzzed. A text. Five words from heaven. \n\nJust landed. Call you later, I read. \n\nIf the clock wasn't moving slowly enough before, it now seemed to stop altogether. I was in agony. \n\n ***\n\n At last, later arrived. My phone rang softly. The display said Callie. \n\n\"I am just about to go crazy here,\" I said quietly. \n\n\"Hello to you, too,\" she purred. \"I know it's been a long week, honey. I wish I could have been in your arms the whole time, but....\" \n\n\"I know,\" I replied. \"I know. God, I missed you. You're going to get the hug to end all hugs when I see you!\"\n\n\"Ooooo! I like that!\" she giggled. \"Do I get more than a hug?\" \n\n\"Well, let's start with a hug,\" I laughed. \"Then we'll see where the mood takes us.\" \n\n\"Mmmmm, my mood will take us right here,\" she growled. \n\n\"You're in bed?\" I asked \n\n\"Yes. Long flight. I'm pooped, but I wanted to talk to you,\" she said softly. \"Now that I'm alone though, I find myself in need of your touch. Would you tell me what you'd do to me if we were together? Please?\" \n\nIt was my first experience with phone sex. It sounded like fun, and I must have been reasonably good at it, because as I described what my hands and lips would do all over her body, I could hear the quiver of excitement in her breathing. \n\n\"Take your cock out,\" she directed. \n\n\"Already did,\" I told her. \"You're masturbating too, aren't you?\" \n\n\"Mmmmm hmmm,\" she moaned. \"Three fingers. God, I'm so wet. I want your cock so bad. Stroke it for me, baby. Tell me how hard it is, and how much you want to fuck me.\"\n\n\"Oh, it's hard alright. It's like stone. I'd give anything to be with you right now,\" I growled. \"I want you. I need you. I can't live without your body, in my arms.\" \n\nI caught myself before I added 'I love you' to the list. I might be jumping the gun, and I didn't want to scare her. Besides, I wasn't really sure if it was love, or just a terminal case of lust. \n\n\"Hank, I'm cumming,\" she moaned. I heard her shudder, gasping for air as it hit her. There was silence on her end. I stroked myself slowly, but I was planning to save it for her anyway. \n\n\"Brosie?\" I asked. \n\n\"Mmmmm?\" she moaned. \n\n\"You okay?\" I whispered. \n\n\"Yes,\" she sniffed. \"I just miss you. Tomorrow. Tomorrow, Marina will be catching up with her friends after the trip, and she'll be with her boyfriend. Tomorrow, we can be together. I'll message you when she leaves. Okay?\" \n\n\"I'll be waiting,\" I smiled. \n\n\"Goodnight,\" she said softly, and hung up. \n\n ***\n\n The next day, I killed some time doing chores around the house. I figured it would grease the wheels with my parents, and get me the car for the day. It didn't matter if I had to take three buses and hitchhike, I wasn't missing this chance. \n\nAs it turns out, my sister had no plans, so the second family car was mine for the taking. I decided to take preemptive action, and got out of the house before they could change their minds. I headed toward Brosie's address, planning on waiting nearby. \n\nThe traffic seemed to be saying it wanted us to be together, as there was almost none, and I made it to her neighbourhood in record time. I pulled into a conveniently placed convenience store, and bought a drink, then sat in the car to wait as patiently as possible. \n\nPatient is a relative term, of course. I may have been consciously patient, but my imagination and memory were not being cooperative. They kept flashing back to Greece. Brosie sucking my cock. Brosie on her back, huge breasts wobbling while I fucked her hard. Her ass absorbing the impact of my furious strokes as I pounded her from behind. The buzzing of my phone interrupted the slideshow. \n\nI grabbed the device, and saw 'Callie' on the screen. \n\n\"Hi baby,\" I smiled. \n\n\"She's gone. The house is ours for the whole afternoon at least,\" Brosie said, her voice resonating with desire. \n\n\"I'll be there in five,\" I replied, starting the car. \n\nIt actually took me six minutes, by the time I parked a few houses away and walked to her door. I rang the bell. I heard her footsteps from inside, and the door opened wide. Almost as wide as her smile when she saw me. \n\n\"Shit! You weren't kidding!\" she gasped, and grabbed my hand. \"Get in here!\" \n\nAs soon as I was in and the door closed, she leapt on me, giggling like a schoolgirl. Her arms went around my neck, and her legs around my waist, as she smothered me with kisses. I grabbed her ass with both hands, and steered us into a corner for stability, returning her kisses with equal ardour. \n\n\"I missed you so much!\" she gasped, as she tipped her head back and I nibbled on her neck. Her hair smelled wonderful, and she felt like an angel in my arms. Her legs released their hold, and I lowered her onto her feet. \"Let me show you around.\"\n\nAs she led away, I noticed her attire for the first time. I'd only seen her in bathing suits, or vacation wear, but she was home now, and relaxed, in her safe environment. \n\nI liked the safe, relaxed Ambrosia Callidora Castellanos. She was wearing cut-off jeans, not quite in the Daisy Duke range of shortness, but the frayed edges would retreat with every wash, so eventually they would get there. They gripped her shapely ass quite nicely, and made her already long and elegant legs look even longer. Up top, her breasts were unencumbered under a cropped, wrap-style top, heather grey in colour. It bared her trim midsection, and also formed a deep V to display her cleavage. \n\nI followed her around the house, taking the tour of the lower level, that ended in the kitchen. She stopped, and turned to face me, catching me drinking in her beauty with my eyes. \n\n\"Can I offer you anything?\" she asked, with a wide smile. \"A drink? A snack? Are you hungry?\" \n\n\"Famished,\" I growled. \"What about a tour of your bedroom?\" \n\n\"Oh god, I'm so glad you said that!\" she giggled. \"I didn't want to assume anything.\" \n\n\"Well, you're a good hostess,\" I laughed. \"The 'anything' you can offer me is you.\"\n\nShe sauntered the few steps over to me, and tiptoed up, as though to kiss me. \n\n\"Race you!\" she gasped, and darted away, amid more giggles. \n\n\"No fair!\" I smiled, chasing her. She had several steps on me, and knew where she was going, so by the time I reached the foot of the stairs, she was nearly at the top. I gained a little by taking the stairs in twos, but her long, dark hair disappeared around the corner into what I assumed was her bedroom. \n\nI arrived in the room, and found.... No one! Where the hell did she go?\n\nTwo soft hands covered my eyes from behind. \n\n\"Guess who?\" the feminine voice asked, with a sultry purr. \n\n\"Well, can you give me a hint?\" I joked. \n\n\"Hmmm,\" she giggled, giving it some thought. \"How about this?\" Two soft, round points of contact pressed against my back. \"Does that help?\" \n\n\"Brosie!\" I laughed. \"I wondered where you went.\" I turned, and wrapped her in a tight embrace. \"Gotcha!\" \n\nHer lips were moist when they met mine, and I gently guided us in the direction of her huge bed. We sat, and laid on our sides, facing each other and kissing passionately. My hand rested on her waist, and I noticed the bow that tied her top in place, under my fingers. I plucked it, and the soft fabric unwrapped, baring her chest. \n\n\"Oops,\" she sighed, rolling back to fully display her breasts. \"Whatever will I do, half naked in my bedroom, with a big, strong, young man taking advantage of me?\" She smiled, and closed her eyes, waiting for me to ravish her. \n\nI scooted closer, and caressed her breasts. They were so full, soft and round, just as I remembered them, and she moaned softly in response. My lips were drawn to the tightly puckered, excited nipples, and I sucked each of them gently in turn. I rested my hand on her smooth, flat belly while I nursed her breasts. It was Brosie's hand that pushed mine lower, sliding my fingers under her jeans after she had unsnapped them. There were no panties covering her bare pussy, and my fingers hooked into her moist opening. \n\n\"Mmmmm hmmm, your fingers feel so good, Hank,\" she groaned. \"Mine don't have the same effect.\" She was running her fingers through my hair, and holding me in place, not that I had any intention of leaving. Her nipples were responding to my mouth, growing tall and stiff as I sucked them. \n\nI don't know how long we were here like this. Several minutes at least. Her pussy was growing wetter every second, and she finally grabbed my hair and pulled my lips away from her breast. \n\n\"I love what you're doing, baby,\" she purred, \"but I've had enough preliminaries. I need your big cock, right now.\" She lifted her hips, and slid the frayed denim off, down her legs. She spread wide, and used two fingers to gape her pussy lips open. \"Please? Fill me with your hard shaft? I need it so bad!\"\n\nWhile I was wearing more than she was, it didn't take me long to catch up. Within seconds, I was kneeling between her long legs, while she guided my cock into the warm embrace of her pussy. \n\n\"Oh god, Brosie,\" I sighed, returning to heaven at last, \"I missed this. You know you've got me hooked now, don't you?\" \n\n\"So, we're both addicted now,\" she smiled, as I pressed in all the way. \"You're the only man I need in my life, or my bed. You satisfy needs I'd forgotten I even had.\" She pulled my lips to hers, and I could feel the emotions pouring out of her. \n\nYou might have expected us to be in a frenzy of need, after a week apart, but that wasn't the case. The need was certainly there, but in a different, deeper way. Frenzy was replaced by a gentler emotion, one that I was unfamiliar with. \n\nLove. \n\nYeah. How could we be in love? We'd only known each other a couple of weeks, and our sum total of commonalities amounted to a desire to have sex with each other. She was my mother's age. It couldn't be love, could it? \n\nAs I said, I'd never felt this way before, but I had also never had a woman before.... any woman, let alone one of Brosie's remarkable attributes. My limited experience before her had been with girls my age, and they paled in comparison, both physically and emotionally. She may have been more like my mother on the outside, but inside, no pun intended, she was perfect for me. Playful. Caring. Adventurous. Loyal. \n\nI only hoped she felt the same way about me. \n\nAnyway, what could have been a purely physical act, fucking for the sake of fucking alone, had become making love. \n\nI stroked into her smoothly, watching the light of desire flicker in her beautiful eyes as I did. Our kisses were full of emotion, making up for lost time. I rolled us over, pulling her up on top, hoping she would dangle her magnificent breasts in my face. Instead, she remained cuddled on my chest, and looked deep into my eyes. \n\n\"Honey, I've had a lot of time to think in the past week,\" she smiled. \n\nSo had I. Although most of my thoughts had been about her luscious body, and all the fun we had together, there had been others. Maybe I was growing up, but I had spent a lot of time contemplating a long-term relationship. Would we get along, outside the bedroom? Were we truly compatible? How would we deal with being public knowledge, especially with my parents? \n\n\"I hope you know how wonderful you make me feel physically,\" she smiled. \"I don't think I've ever been so happy, but it did make me examine my feelings. I had to question my motivation. Do you understand what I'm saying?\" \n\n\"Yes, I do,\" I said softly. \n\n\"Well, I'm not sure I do,\" she giggled. \"I tried so hard to figure it out, but I guess I was just missing you too much. We're very good together, and I found my thoughts getting hung up on that fact. So, I came up with a plan.\"\n\nUh oh, I thought. A former girlfriend had done this to me, and her plan had involved the old clich\u00e9 about 'letting it go, and if it comes back, it's yours'. Since we weren't together, I guess we never were, so it seemed to be the right course, but at the time, it felt like a cop out. \n\n\"I've decided not to decide,\" she smiled, giving my still ensconced cock a squeeze with her snug pussy. \"We don't have to sort this out right now. Maybe what we have is only physical, and maybe it's something much, much more. The point I'm trying to make is that there's no time limit for us. I want us to have fun, and let this tangle of emotions figure itself out. Okay?\"\n\n\"Okay,\" I smiled. She was right. I had been trying to be very adult about it, but I didn't have the experience to go with that adulthood. \n\n\"Good,\" she giggled, kissing me softly. She sat up now, and pressed her soft breasts in my face. Her hips lifted, and she began to fuck herself on my stiff shaft. I grabbed her breasts, and directed one hard nipple into my mouth. \"Mmmmm, that's it. Feels like fun to me.\" \n\nUntil the emotions untangled, we would probably be spending nearly every moment together in bed, having fun like this. Going out in public would be problematic, as we didn't need the attention, which would increase the risk of Marina or my family finding out. Oh well. Such is life. \n\nBrosie gasped and shook in my grasp. It was a nice gentle orgasm, but I wanted to hear her scream. I rolled on top of her again, and started giving it to her with more energy. \n\n\"UHNNN! Yes, baby! Fuck me harder!\" she groaned.\n\n\"You want it, honey? You want to cum again?\" I grunted, slamming my hips forward briskly. \"Tell me what you want. Tell me how it feels.\"\n\nI really wasn't asking for any ulterior motives. Yes, I knew how to fuck, and I'd seen enough porn to know what worked for me, but I genuinely wanted to know what turned her crank. Being a better lover for her had no downside, even if we didn't stay together. She could teach me more about women than any girl my age, by virtue of her own experiences. \n\nWhat I got was a bonus. What man doesn't love to hear his lady begging for it, in language that would make a sailor blush? Coming from a woman old enough to be my mother made it even hotter. Her eyes spoke volumes of her pleasure, but she voiced it anyway. \n\n\"God, yes! I love it! I need it! Your cock stretches me so perfectly, all the way deep into my hot, horny cunt! Fuck me, darling. Fuck me with that big, perfect staff. Make me cum, like the bad girl I am. Take my body, for your pleasure. I give it to you freely. Fuck my pussy, with your hard cock, and make me scream in ecstasy!\"\n\nHer eyes were locked on mine, while I pounded into her vagina furiously. I could see the pleasure building in her expression, until her lips drew into a snarl of lust, and she tossed her head back, unleashing a stream of descriptives. \n\n\"Fuck! I'm cumming! Don't stop, baby! Fuck me! Fuck my cunt! Oh god, it feels so good! Gimme more of that big cock! Deeper! Harder! Fuck me, baby, and shoot your hot cum inside me! Do it! Do it! Ahnnn! YES!\"\n\nBrosie's pussy clutched my cock tight, and she shuddered through her orgasm while I filled her with my own blissful discharge. She pulled me closer and wrapped her body around mine, moaning happily as we came together. It was everything I remembered and more. \n\nBefore I left, later in the afternoon, I fucked her to another two climaxes, and she finished me off with her mouth, urging me on while I basted her tonsils. We talked about different ways we could continue to meet like this, and how much we wanted to do so. \n\nWe were together again, albeit still in secret, and with the added complications of schedules and prying eyes. We would find a way to make it work. \n\n ***\n\n When I arrived at home, I had to remind myself to play it cool, and scrape the giddy smile off my face. I had washed my face well, so hopefully Brosie's pussy scent wasn't going to give us away. \n\n\"Just relax. You were only spending time with friends, and telling them all about the trip,\" I said to myself. \"It's easy. Just leave out the part where you were fucking a gorgeous woman for hours. Piece of cake.\"\n\nWalking through the front door, the first person I saw was Dad, who merely grunted and waved at me, before going back to his college football game. From Dad this constituted high acknowledgement, but I wasn't expecting much more from him. \n\nMy sister, Sharon, was next, and while I was concerned a little bit that she, as a woman, might sense something, I had the advantage of knowing that I was way down the list of things she found worthy of her interest. She barely even looked in my direction, but I gave her my best poker face anyway. It was good practice for the main event. \n\nMom. \n\nShe was in the kitchen, prepping for our dinner tonight. Happy to see I was home safely, she greeted me with a hug. \n\n\"Hi honey!\" she smiled, holding me a little longer than usual. \"How'd it go? Get all reconnected with your friends?\" \n\nReconnected? Hmmm. Yes, I guess that's one way to put it. \n\n\"Yeah. We're all good,\" I replied, suppressing the urge to grin. \"I told them all about the trip.... the sights, that sort of stuff.\" \n\n\"Lots of people there? Girls?\" she asked. \n\n\"A couple,\" I admitted. Only one that mattered. \n\n\"That must be the perfume I smell,\" she giggled, turning away at last. \"Someone new?\" \n\nHow the hell?.... I thought, sniffing my sleeves. She always did have the family's most sensitive nose, but I thought I'd dealt with that issue. \n\n\"Yeah, I guess it must be,\" I laughed back, trying to mask my nervousness. If she smelled the same perfume on me in Greece, she might put two and two together, and come up with a question I desperately wanted to avoid. \"I think you've met all my friends, though.\" \n\nIt was a desperate attempt to confuse her, but also true. She had met all my friends, including the one I'd just spent the afternoon having incredibly satisfying sex with, although she didn't know that aspect of things. \n",
        "\"Well, thank you for making it home in time for dinner, as promised,\" she smiled, pecking my cheek. \"It's about a half hour from being ready.\" \n\n\"Smells great, Mom,\" I replied. \"I'll be in my room.\"\n\nOn my way upstairs, I wasn't sure if our secret was safe or not. Mom was going to be dangerous. \n\n ***\n\n As the weeks passed, I began to feel a little more secure in my ability to keep my activities unknown to my mother. She seemed content with the explanation for my more frequent absence, which was partly the truth. I had told her that I was spending more time with a female friend, which she took as trying to persuade someone to go out on a date with me. That she approved of. \n\nI just left out the part about her age, and that we had long since passed the dating stage. \n\nWhile I was busy trying to keep my Mom off the scent, I didn't see that my Dad, of all people, had started to notice what was going on. He popped in on me, in my room one afternoon. \n\n\"Hi Henry. Got a minute?\" he asked, sticking his head in the doorway. \n\n\"Sure Dad,\" I replied, putting my book down. \"What's up?\" \n\n\"That,\" he said softly as he closed the door, \"is exactly what I wanted to ask you. What's new in your life?\"\n\n\"Huh? Why, nothing,\" I lied, trying to hide my discomfort at the question. \n\n\"Okay.... Let's not play that game, son,\" Dad said. \"I'm not here to give you a hard time, as a father. Consider me just another guy. I've noticed that you seem to be in a better mood lately. You haven't fought with your sister in quite a while.\" \n\n\"Wasn't that the whole point of grounding us?\" I laughed. \"Now you say it's suspicious that I haven't had a fight with Sharon?\" Just before our trip to Greece, my sister and I had really gone at it, and neither of us was willing to back off, so our parents had grounded both of us for a week. \n\n\"No, if that's the reason why, then I'm glad you learned the lesson so quickly,\" Dad smiled. \"I just can't help thinking there's another reason. Don't forget.... I was your age once, and going through the same things you are. You're sure there isn't another reason for your change in attitude?\" His expression led me to believe he was not going to let this go without an answer. \n\nStill, I wasn't about to volunteer the truth. I don't know what you're talking about, I thought, unless you mean it's because I'm fucking the most beautiful woman I've ever met. Yeah, that might explain it, but I don't think you're ready to hear about it. I decided a little misdirection was the best course. \n\n\"Well, I suppose....\" I smiled, confirming his assumption, without admitting anything. \n\n\"Uh huh. A girl. I thought so,\" he nodded. \"I remember when I started to get lucky. I probably had the same look on my face. Better be careful around your Mother. She might not be as understanding as I am.\" \n\nOf that I'm sure. Part of me almost wants to tell you the whole story, just to see the look on your face, but.... \n\n\"I'll keep that in mind. Thanks Dad,\" I smiled. \n\n\"Is she pretty?\" he asked, obviously getting a vicarious thrill out of our new brotherhood. \n\n\"Oh yes. Very beautiful,\" I laughed. \n\n\"Built?\" he gestured, holding his hands in front of him in the universal 'big tits' position. \n\n\"Um, yeah,\" I blushed. \n\n\"That's my boy!\" he grinned. \"Just be careful. I'm not looking to be a grandfather just yet.\"\n\n\"Right. I'll be careful,\" I nodded. \"No, um, mistakes.\" \n\n\"Okay. Well,\" he said, standing, and opening the door, \"Carry on. Good luck.\" \n\nCarry on. Yes. I think I will. \n\nAs often as possible. \n\n ***\n\n I woke up alone. My sex-addled brain had a brief moment of confusion, trying to identify the ceiling, which wasn't mine. It was, as I said, a very brief moment. This was far from my first time in this room. Brosie had welcomed me into her bed often in the last four weeks, since she had made it home from Greece. \n\nWe had grown much closer over that time. It turns out we had much more in common than a mere lust for each other's bodies. We had differences, of course, as you would expect given our age difference, but relatively few. Perhaps having a daughter close to my age played a part in Brosie's youthful outlook. Whatever the reason, spending time with her was not a hardship. It wasn't like spending time with my Mother, and not only because my Mother had never let me sample her feminine charms as Brosie had. \n\nBrosie was fun, and had resisted the urge to impose her will on me when we had decisions to make. It would have been so easy for her to 'parent' me, and flex her seniority, but she didn't. She treated me as a partner, with an equal voice. \n\nIt was her voice, however, that caught my attention today. Music wafted into the bedroom from below, accompanied by vocals from my Greek goddess. Curiosity made me follow the sound. \n\nI quietly found my way to the top of the stairs, just as a new song began with a sharp beat and a blare of trumpets. The volume level immediately ramped up, indicating her opinion of the song. Even if it was a few years before my time, it wasn't unfamiliar to me: one-hit wonders Katrina and the Waves, with 'Walking On Sunshine'. \n\nI paused midway down the staircase, and smiled, as Brosie belted out the lyrics happily. I crept down the rest of the way while she sang. \n\n\"Oh!...... Ohhhh yeeeaaaah!...... I used to think maybe you loved me, now baby I\u00b4m sure...... And I just can't wait till the day when you knock on my door....... Now every time I go for the mailbox, gotta hold myself down....... 'cause I just can\u00b4t wait till you write me you\u00b4re coming around!\"\n\nI peeked carefully around the doorway into the kitchen, and found her, dancing and cooking, stark naked. It was quite a sight, and she didn't see me as she continued. \n\n\"I'm walking on sunshine, wooah.... I'm walking on sunshine, woooah.... I'm walking on sunshine, woooah..... And don't it feel good!.... Hey, alright now.... And don't it feel good!..... Hey yeah!\" Her dancing made her spin happily, and she saw me, at last. A slight blush bloomed on her cheeks, but she didn't hesitate, extending her hand to me, and dancing away for my benefit. Her eyes locked on mine as the lyrics told her feelings. \n\n\"I used to think maybe you loved me, now I know that it's true,\" she sang, as I caught her hand. \"And I don't want to spend my whole life, just waiting for you....... Now I don't want you back for the weekend, not back for a day, no no no,\" she smiled. \"I said baby I just want you back and I want you to stay! Woah yeh!\"\n\nI was fully involved now, as her joy was contagious. It was also a great deal of fun to watch her body, particularly her breasts, bounce, shake and wobble wildly from such close proximity. \n\n\"I'm walking on sunshine, wooah........ I'm walking on sunshine, woooah........ I'm walking on sunshine, woooah........ And don't it feel good!\" we sang, together. I'll admit, dancing naked in her kitchen felt strange, but we were alone in the house. \n\n\"Hey, alright now...... And don't it feel good!...... Hey yeah...... And don't it feel good!...... Walking on sunshine...... Walking on sunshine...... \"\n\nAs we danced through the guitar interlude, my eyes were drawn to her bouncing boobs, especially when she ran on the spot excitedly. I saw her glance more than once at my cock, which was growing harder by the minute, and standing out from my body, swaying in wide circles. \n\n\"I feel alive, I feel the love, I feel the love that's really real...... I feel alive, I feel the love, I feel the love that's really real...... I'm on sunshine baby, whoa, oh yeah, I'm on sunshine baby.... woah!.... I'm walking on sunshine, wooah..... I'm walking on sunshine, wooah...... I'm walking on sunshine, wooah...... And don't it feel good!\" we harmonized, swinging each other by the arms. \n\n\"I'll say it, I'll say it, I'll say it again now..... And don't it f-.\" \n\nThe music stopped abruptly, but we didn't, finishing the song awkwardly. \n\n\".... Feel good!\" we stumbled, looking for the reason for the truncated tune. It was a reason clearly identified when I turned to see Marina, staring at us with the remote control in her hand. The look on her face spoke to her surprise, and disapproval. Her eyes dropped momentarily to my bobbing erection. \n\n\"Oh shit,\" Brosie cursed softly, and stepped in front of me, shielding my penis from her daughter's scathing view. \"Hello, Marina. What brings you home so early?\" \n\nI cowered behind Brosie, although there was little point in doing so. The list of plausible explanations for our naked escapades was pretty short. There's no way Marina hadn't figured it out already. \n\nFor her part, Brosie stood defiantly nude, making no effort to cover herself, and waiting for her answer. \n\n\"You ask ME what brings me home?\" Marina scoffed, gesturing in frustration. \"What the hell is going on here, Mother?\"\n\n\"Oh, Marina, you're an adult, aren't you? Do you really need me to explain it?\" Brosie shook her head. \n\n\"No, Mother, you don't need to explain sex to me. I'm not an idiot,\" Marina snarled sarcastically. \"What are you doing with someone my age?\" \n\n\"Hi Marina,\" I waved. It was a lame gesture, but I was nervous, and couldn't hide behind her Mother anymore. \n\n\"Yes, Henry, I recognize you,\" she spat. \"Why are you here, in my house, naked, with my Mother?\" \n\n\"I thought you said you didn't need me to explain sex?\" Brosie laughed, pressing herself back against me, and wrapping my arms around her. My hands fell naturally on her breasts. Marina's gaze shifted briefly to her Mother's chest, and my uneasy hands. \n\n\"Could you stop that, please? Stop groping my Mother? Would it be too much to ask for you to put some clothes on?\" Marina asked, desperation in her voice. She tried to avert her eyes somewhat, but not completely. \n\n\"Not at all,\" Brosie said smoothly, and took my hand, pulling me out of the kitchen behind her. \"Our clothes are in my bedroom. We'll be back in a few minutes.\"\n\n\"I'm really only interested in talking to you, Mother,\" Marina explained. \"Henry can just leave. So nice to see you again, Henry.\"\n\nThe sarcasm dripping off those words led me to believe she might not be quite as thrilled as she sounded. I followed Brosie's sexy ass up the stairs, and into the bedroom, where she closed the door behind us. She sat on the bed heavily, and put her hands over her face. \n\n\"Shit! Shit, shit shit, shit, SHIT! Why did she have to come home early, today of all days!\" Brosie sighed. I sat beside her, and wrapped an arm around her. \n\n\"Sorry, honey,\" I said softly. \n\n\"Don't be.... It's my fault,\" she corrected. \"I shouldn't have been dancing naked in the kitchen. I just felt so good, today; so warm, and happy. Come to think of it maybe it is your fault, after all. If you didn't make me love you so much, I wouldn't have been dancing.\" The second part was delivered with a smile, so my guilt was very short lived. \n\n\"Um, sorry?\" I laughed. \"I'll get dressed and get out of here, so you can deal with her.\"\n\nBrosie glanced at her watch, and shook her head. \n\n\"Oh no, you don't! We've got time left today, and I'm hungry for lunch, so you just stay up here, and ignore the fireworks. I'll be back, soon,\" she pointed at the bed. She was putting her robe on as she left the room, and I crawled into her big bed dutifully. \n\nPart of me wanted to give them some privacy to work it out, but another part wanted to listen in. I guess privacy isn't really necessary when someone has already seen you naked.... with an erection.... dancing in the kitchen.... with her mother. \n\nI thought women were supposed to scream at each other when they fight? I thought, straining to hear their words, unsuccessfully. Finally, emotions erupted, and with them the volume level, as well. \n\n\"Mother! How could you?! Was this going on in Greece, too?!\" Obviously Marina, I awaited Brosie's reply. \n\n\"Watch your tone, young lady! I will not be treated with disrespect, no matter how upset you are!\" \n\n\"Deny it! It was happening! That's why you were parading around in that ridiculous bikini, showing your tits to everyone! How could you do that? Have you no shame?\" \n\n\"This is your last warning about your tone! Who do you think you're talking to? I'm your mother!\" \n\n\"Exactly!\" Marina snarled. \"Thank you for making my fucking point for me! You're my mother, who shouldn't be carrying on with a guy young enough to be my brother! How could you! It makes you look like a slut! Worse.... A cougar slut!\" \n\n\"Enough!\" Brosie screamed, putting her foot down. \"Marina.... You're my daughter, and I love you, but you're treading on thin ice here! Back off! What I do in the privacy of my own home, and who I do it with, are none of anyone's business! That includes you. Now, I'm sorry that you found out the hard way. That was never my intention. I apologize for shocking you, but I will not apologize for being a woman who knows what she wants. Am I supposed to mourn your father forever?\"\n\nI moved to the upper hallway, so I could hear better, as they stopped yelling. \n\n\"Of course not, Mother,\" Marina replied. \"But he's so young. It almost looks disrespectful, to his memory.\"\n\n\"Honey, I loved your father, with all my heart. This is not a mid-life crisis, or an affair. Your father is gone. I'm not cheating on him by finally getting on with my life. Do you honestly expect me to ask for his approval?\" \n\nA lull in the conversation nearly made me move closer, but I was still naked, and that would probably be like waving a red flag at a bull. Marina finally answered. \n\n\"No, I don't, and I'm not a kid anymore, so I have no parental requirements for whomever you choose to be your partner. Still, why him? Why not someone at least closer to your age? Aren't you at all concerned how it looks.\"\n\nMy ears perked up. This, I really wanted to hear. I'd asked the same question. \n\n\"Marina, it's not the fifties anymore. Thankfully, appearances are fleeting, and it seems that most people have their own laundry to attend to, so no, I don't care. Now, as for the other question.... that's a good one, honey. Why him? Why him? Do you know how long it's been since I felt.... anything.... from a date? How long since I trusted anyone's motives for being with me? Most of the other men I met were only looking at me as a piece of meat, with a potential big payday attached. I could just feel it in their eyes. Believe me, when we were on vacation, I didn't go hunting for a man, but when Hank looked at me.... well, there it was. You know, he was watching you first? It's true. I caught him checking out your ass, as you got out of the pool. He saw me, and stopped. You should have seen him blush.\"\n\n\"That's not a reason, Mom. You should have been pissed at him for leering at me,\" Marina complained. \n\n\"I didn't say 'leered', so stop making him into some pervert, and if I recall, you were hardly wearing a nun's habit that day. You can't put yourself on display on purpose, then complain about eyes on you. Anyway, later, when he looked at me that way, it was very flattering. It's nice to feel wanted. Desired. Even lusted after.\"\n\n\"So you fucked him. That I get. A vacation fling, with some stud who made your toes curl. I would have done the same thing,\" Marina dismissed. \"Not with him, but I get that reasoning. Why now?\" \n\n\"We really must have a chat about your dating life,\" Brosie laughed. \"Vacation fling? Yes, I suppose it did start out that way. Just a quick, purely physical romp, but I soon found out there was more to Hank than what was hanging between his legs. I'm sure you saw it, didn't you, young lady? Oh, what he does to me with that long, hard.... \"\n\n\"Ewww! TMI, Mother! Way too much information!\" Marina gasped. I pictured her covering her ears. \n\n\"Fine. Let's just say I found that he cared more about me and my feelings than I expected, and I didn't want it to end so fast, especially since I didn't have to. Fortune smiles, on occasion. Since we got home, he and I have been working through some of those feelings, and today.... well, I was just very, very happy.\"\n\n\"So I gathered. I heard the song, and saw the dance. I'm not gonna like this, am I?\" Marina asked. \n\n\"Probably not,\" Brosie giggled. \"We're way past a purely physical fling now, honey. Appearances be damned, I think I'm in love.\"\n\nMore silence, while Marina digested that bit of news. It was news to me, as well. Not the feelings, but the words. I guess we had untangled things, without even trying. I felt happy, and warm. \n\n\"Okay, Mother, what do you need me to do?\" Marina finally sighed. \n\n\"Keep this to yourself, okay? Beyond that, simply tolerate him being here. Acceptance can come later.\"\n\n\"Good, because tolerance is going to be enough of a stretch!\" Marina snorted. \"Acceptance might take decades!\" \n\n\"I know how you feel. I've felt the same way about every one of your boyfriends. Welcome to my world,\" Brosie laughed. \"So, why did you come home early, today, anyway?\" \n\n\"I have no fucking idea! I suppose you'd like me to leave you alone, so you can, um, uh.....\" Marina stammered. \n\n\"Yes, please. Text me before you come back? I'd really like to, 'um, uh'.... a little more,\" Brosie suggested. \n\n\"God, I need a drink!\" Marina groaned. \n\n\"Not while you're driving, please. I hope you know better than that?\" Brosie added, with parental care. \n\n\"Yeah, yeah.... not while I'm driving. See you later, Mom. Have.... um.... fun.\"\n\nFrom my position, laying on the floor of the upper hallway, I could see the edge of the front door as it opened and closed. \n\n\"Hank, honey?! You can come down, now!\" Brosie called to me. \n\nI grabbed my jeans off the floor and stepped into them, carefully tucking everything important inside before zipping them up. Seconds later, I was peeking around the edge of the door frame, into the kitchen. \n\n\"Come in honey, it's safe,\" Brosie laughed. \"Aww, you're half dressed! Now I'll have to strip you all over again. Although, you do look good like that. Very sexy, bare chested, with those big shoulders of yours. I'm afraid that Marina's arrival was poorly timed, on another level; the lunch I had started for us is now in the garbage can, so we'll go with plan B. Take a seat, please,\" she directed. \n\nI sat, and watched her deliver a tray of sandwiches to the table. Her robe was royal blue satin, and reached mid-thigh, but because she was naked beneath it, my attention was on the smooth thigh that peeked out as she walked. That is, that was my point of attention when I wasn't already watching her chest, which jiggled unrestrained under the silky fabric. She playfully made a point of leaning over as she put the tray down, showing me her devastating cleavage. When she went to the fridge to retrieve drinks for us, she bent from the hips, letting my eyes caress her barely covered ass. Despite the fact that Marina now knew about us, my luscious Brosie hadn't changed her attitude one bit. \n\nShe took her seat across from me, and rested her chin on her interlaced fingers. Her eyes scanned my face for several seconds before she spoke. \n\n\"Would I be correct in assuming you were listening?\" she asked, adding a wry smile. \"It's fine if you were. I'm sure I would have, given the chance.\"\n\nHappy she was letting me off the hook, I nodded, and picked up a sandwich. \n\n\"Do you have anything to add?\" she giggled, adjusting her robe nervously. \n\n\"Just one thing,\" I smiled, putting my freshly nibbled sandwich on my plate, and gazing at her. \"I love you, too. I'm really glad the emotions worked themselves out, because I don't think I can picture my life without you in it.\"\n\n\"I'm glad to hear you say that,\" she smiled. \"I had intended to tell you properly, but, well, Marina buggered that plan when she came home early. You're not mad about the way you found out?\" \n\n\"No,\" I laughed, \"but I don't have much experience with women telling me they love me.\" ",
        "\"Yes, well, about that....\" she giggled, rising smoothly from her chair, and extending a long, smooth leg over my lap. She settled gently, facing me, with her smile tinged by desire. \"I'm hoping you won't be getting any more experience with women saying that they love you. Your r\u00e9sum\u00e9 is closed in that respect. I'll be happy to help you with any other experience you'd like.\"\n\nHer arms came around my neck, and she kissed me with a loving gentleness that confirmed her feelings. \n\n\"You're okay that she knows?\" Brosie asked softly, after the kiss. \n\n\"Well, I guess I'll have to be. Not like we have a choice,\" I replied, then dismissed the thought. \"It had to happen eventually, didn't it? We can trust her not to gossip?\" \n\n\"Yeah, I think we are safe, there,\" she answered, with a chuckle. \"She's too embarrassed to blab about it, and she'd like to have my cooperation with her own boyfriend, whom I've told her I don't like. She'll keep her mouth shut.\" \n\n\"So, we just need to tell my family,\" I said, trying to imagine that scenario. \n\n\"Yes,\" she sighed. \"How do you feel about dancing naked in your kitchen?\"\n\nI burst out laughing, as the image appeared in my head. \n\n\"You know,\" I smiled, \"I don't think that works more than once in a lifetime. We may need to come up with a different approach. As least there's no rush.\"\n\n\"Mmmmm, no rush,\" she smiled, rising off me. Her hands reached down, and freed my cock from its denim prison. I helped, dragging the jeans off my hips. The kisses had awoken my dick, and her hands brought it to attention quickly. Now that it was ready, she lowered herself, guiding my shaft into her juicy cunt. \"Oh, fuck.... No rush.\"\n\nAs she settled, fully impaling herself, my hands caressed her hips. The satiny fabric felt wonderful under my fingers, but I was more interested in what was under it. I eased my hands inside, parting the front of her robe, and letting her luscious body out for my eyes to devour. She smiled, and let it slide off her shoulders to the floor. \n\n\"Marina didn't care for naked dancing. I wonder how she'd take walking in on this?\" I moaned. \n\n\"She promised to message me before she came home,\" Brosie breathed, slowly rising and falling on my cock. \"At this point, I couldn't care less if she sat right at the table next to us. Just as long as I get to fuck you, and be in your arms. You're so good for me, in every way possible. I Love You, Hank.\"\n\nOver the last few weeks, even though it had not been spoken by either of us, there had been palpable changes in our feelings toward each other. \n\nThat first day back together had been a whirlwind of desires being satisfied after our forced separation. We had fucked each other unconscious, and parted that afternoon with primal appetites both quelled and aroused further. \n\nEarlier today, we had started out in a similar fashion, ripping each other's clothes off and falling into bed with urgency, despite having been together only two days ago. Sexual excitement ruled, but as we kissed and rolled about on the bed, caressing and petting, another emotion surfaced. It didn't replace the excitement, merely augmenting it, and making it run deeper. \n\nIt was love that fuelled us, and led to nearly two hours of the most mind-blowing, deeply satisfying, physically draining sex ever. I know.... my opinion may not carry much weight, given my vast experience of three women and my right hand, but since I was the one in bed with her, my opinion is the only one that matters. She absolutely wore me out. \n\nI'm not really sure how many orgasms she had. They weren't those of the screaming variety, but I was looking into her eyes during most of them, and could see her pupils dilate as the pleasure surged through her. It was very satisfying for me to know that the cock providing that pleasure was mine, and the emotions she was feeling were directed at me. \n\nOn a selfish note, the orgasm I had, after such a long session of experiencing the best her pussy and mouth had to give, was the most earth shattering I had ever felt. Un-fucking-believable. She wanted it on her, so I pumped my hand furiously along the length of hard, pussy-slicked cock, and grunted as more cum than I had ever seen shot out of my spigot, painting her with long lines of thick, white glop. Brosie had moaned happily, and gasped as each rope jumped out at her. Her smile grew wider with each spurt, and her fingers played with the icing, even as more was being applied. When at last I was spent, I had toppled over, and listened to her licking her fingers over and over. \n\nNow, here in the kitchen, one might expect us to be fucking with urgency, but that wasn't the case. Rising and falling slowly on my lap, Brosie was calm, and grinning at me, enjoying the intimate closeness of the situation. She clenched her vaginal muscles around my cock, and tugged on it on the up-stroke, then let out a quivering breath of excitement as she drove herself down onto me again. There was, as she said so eloquently, no rush from either of us. She even managed to turn, and retrieve sandwiches for each of us, letting us multi-task in the most exquisite way. I was even able to perform napkin services, licking up stray crumbs from her lips, chest, and nipples. \n\nOkay, the nipple cleaning was purely my idea, crumbs or no crumbs. If you had those big, soft breasts so conveniently positioned mere inches from your lips, you would have done the same thing. So thick, stiff, and delicious looking, those nipples called to me, and I was powerless to resist. \n\n\"Mmmmm, yes.... Good boy,\" she moaned softly as I maintained my contact, latched on to her nipple attentively. She undulated her hips. \"So damn good.\"\n\nShe put her sandwich down, and rested her arms around my neck, watching me closely while I nibbled and gnawed gently on her nipples. Her strokes were short, and she concentrated on stimulating her clit by grinding her clit firmly against the base of my cock. I could feel her pussy gripping my shaft tighter, and knew she was enjoying herself. \n\nNearly as much as I was enjoying it, I'm sure. Her pussy was so warm, and wet, and the sensation of it surrounding my hard cock was delightful, especially when coupled with her position, and those big, soft breasts in my face. \n\nBrosie's breathing was coming in short, quivering gasps, as her excitement built to the point of critical mass. At last, it pushed her over the edge. \n\n\"Mnnnaahhhn! Oh fuck... Oh FUCK.... FUCK! FUCK! GOD, I'M CUMMING!\" she screeched, crushing her body tight against me, and furiously bucking her cunt over my cock. Not simply content with one orgasm, she kept at it, grinding herself into the onset of another, and another. At last, her screams of joy petered out, and she wilted in my arms, overcome by pleasure. \n\n\"Oh fuck.... Oh fuck.... That was.... Oh fuck...\" she panted quietly. \n\nThe phone sitting on the table buzzed, sounding unusually loud in the quiet room. \n\nTiming-wise, the text came at just the right time, for Brosie at least. She had just cum, and was very relaxed, resting her head on my shoulder. I was just able to reach it, and handed it to her. \n\n\"It's Marina,\" she sighed, still cuddled against me contentedly. My cock was still inside her warm sheath. \"She's requesting permission to return home. I guess we really should let her. She has had a very emotional day.\" Her fingers began to type a response. \"I assume you would like to finish. Ten minutes okay?\" she asked. \n\nTen minutes? Yeah, I can do ten minutes. Prepare to get seriously fucked. \n\nShe hit the 'send' key, and put the phone aside, lifting off me as she did. My cock was wet and slippery with her frothy pussy juice, and the air tickled me as it tried to evaporate the coating. Brosie arranged herself on the kitchen countertop, legs held up and wide apart, ready to accept my cock again. \n\n\"Come on, baby,\" she smiled. \"Fuck the shit out of me! Get yourself off! I'm sure I'll cum too.\" \n\nWithin seconds, I was balls deep, getting a grip on her hips while she wrapped herself around me. Her long legs encircled my waist, pulling me tight against her, while her arms did the same to my shoulders. I felt her big breasts squashed between us, and her warm breath on my neck. \n\n\"Just think.... she might have walked in on us doing this,\" she whispered. \"Instead of naked dancing, she might have seen us fucking.\" \n\nMy first thought was that her words were a warning of sorts, meant to remind me that Marina would be walking back through the door in ten minutes. I stroked into her faster, then felt her reactions. It wasn't a warning. It was exciting her. \n\n\"Oh fuck, baby, imagine that,\" she moaned, clawing at my back. \"My little girl, watching your big cock hammering my juicy pussy, splitting me wide open, making me cum. Fuck! I hadn't thought it would be so exciting!\" \n\nNeither had I. You know.... you normally try to avoid getting caught doing something naked, especially something as personal as sex. Somehow, I'd never thought of getting caught on purpose, but now that she had mentioned it, and was nearly ready to orgasm at the mere thought of Marina watching us fuck, I could see the appeal. My hips went into overdrive, and the kitchen filled with the sounds of bodies crashing together, grunts, and moans of pleasure. \n\n\"Yes baby! Fuck me! Fuck me! Pound my cunt with your big cock! Do it! Shoot that hot cum inside me! I want it! I need it!\"\n\nI imagined Marina behind me, silently watching me slam my cock into her mother's pussy. That was all it took. \n\n\"Oh god! I'm cumming!\" I groaned, and spurted deep inside her, over and over. Through my orgasm, I could feel my luscious Greek lover gasping as her own pleasure hit her. We held tight, as waves of ecstasy rolled over us. \n\n\"I love you,\" I panted, caressing her gently. She rested in my arms, and sighed. \n\n\"Mmmmm, I love you, too. If only you didn't have to go,\" she pouted. \"We have to find a way to solve that.\"\n\n\"Agreed, but I don't think it will be today,\" I smiled. \"I'd better get out of here, before she gets back, or we may test her understanding.\" I pulled out, and grabbed my jeans off the floor. \n\n\"Crap. You're right,\" she smiled coyly. Her legs were still up, letting me see the trickle of semen, dripping slowly out of her vagina. \"I suppose I should cover up, as well. I'm sure the smell is enough of a reminder that we've been busy. This may be the beginning of a new aspect to my relationship with my daughter. I know she's not a virgin. Maybe we can compare men.\"\n\n\"I don't think I want to be around for that conversation,\" I laughed, kissing her softly. \"The rest of my clothes are upstairs.\" \n\n\"Go,\" she smiled, easing off the counter. \n\nBy the time I made it back down, Brosie was waiting at the bottom of the stairs, cinching her robe tight. She took a stance one step up, making our goodbye kiss easier. \n\nWe held each other. I tried not to lose track of the important fact of the day. Yes, Marina now knew about us, and that was a complication of major proportions, but that wasn't the part I chose to focus on. Instead, I heard those three words we all live to hear. \n\n\"I love you,\" she breathed, repeating them appropriately. \n\n\"I love you too,\" I smiled. \n\n\"Now get out of here. I'll call you later.\" \n\n ***\n\n \"Surprise!\" the person at our front door laughed, as I opened it and nearly had an apoplectic fit. My heart stopped cold, then jumped into high gear, pounding in my ears. \n\n\"Marina! What, um.... what are you....?\" I babbled, looking around for dangerous eyes. \n\n\"Relax, numbnuts,\" she smiled, as she stepped in. Her voice dropped to a conspiratorial level. \"I'm not here to blow your cover. Just to see your sister.\"\n\n\"Thank God,\" I sighed, and rested my forehead against the edge of the open door. \"You scared the shit out of me.\" \n\n\"Yes, well, I recall the feeling,\" she snarled. \"Sometimes, life gives you the chance to return the favour. I wouldn't have missed it for the world.\"\n\n\"Right. I'll get Sharon,\" I nodded, and closed the door. \n\nA minute later, after stopping by my sister's room to inform her of her visitor's presence, I flopped on my bed, face down. \n\nThis situation was going to kill me. \n\nEither I'd have a heart attack, or my Mother would find out, and murder me in my sleep. \n\nWas love really worth it? \n\n ***\n\n The following Saturday, I returned from another day of carnal pleasure in Brosie's bed. A shower had made sure perfume would not again be an issue, and I was feeling pretty good about things. \n\nThat is, until I ran into Marina and my sister, talking to my Mother in our kitchen. \n\nDanger, Will Robinson! Danger! my subconscious screamed, waving it's arms wildly. \n\n\"Mom.... Sis.... Marina,\" I nodded in greeting, praying my face didn't give my shock away. Sharon and Marina had become good friends, but Marina had promised not to spill our secret, saying it was more embarrassing than she was willing to risk. I hoped that still applied. \n\nMom didn't look mad. In fact, she was smiling, and laughing, as the three hens cackled happily. Marina's face showed nothing unusual, and Sharon's held only it's normal level of sibling distaste. I found it difficult to believe the three of them could possess such perfect poker faces, so I relaxed a little. \n\nProbably shouldn't have. \n\n\"Hi, honey,\" my Mom giggled, waving at me. \"You don't have any plans for tomorrow afternoon, do you?\" \n\n\"None at all,\" I replied, without thinking. I could just go over to Brosie's a little earlier, for our Sunday session, if I needed to be somewhere else later in the afternoon. \n\n\"That's great. We're all going to Marina's house for the afternoon, to use the pool, and have dinner later,\" Mom explained. \"You remember Mrs. Castellanos, don't you?\" \n\nGulp. \n\nI looked at Marina, who was grinning. My Mother and sister were looking at me, and didn't see her stick her tongue out at me, then wink. She promised not to rat on us, but not to take it well. My pause made Mom repeat herself. \n\n\"Honey? I said, you remember Mrs. Castellanos, don't you?\" \n\nUm, yeah. Brunette, statuesque, big tits? Loves it when I suck her nipples, and really likes it doggy style? Gives a mean blowjob? Yeah, that rings a bell. \n\n\"Yes of course, Mom,\" I answered, at last. \"I remember.\" \n\nHaving Marina know about us was bad enough. Having her constantly visiting my sister was worse, like I never knew when the hand grenade was going to explode. \n\nNow, I was going to have to spend a whole day in the company of both Marina and Brosie, as well as my family. The potential for discovery was off the charts. \n\nDamn you, Marina. \n\nBitch. \n\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n So, Hank and Brosie thought they were good to go? \n\nI'm sure you want to see how this works out, so I'll get to it shortly. \n\nThanks for reading, and please don't forget to vote."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "brunette",
        "big tits",
        "older woman",
        "younger man",
        "secret love"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/immortal-gift-of-beauty-ch-02"
}