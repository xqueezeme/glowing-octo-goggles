{
    "title": "Love Long Gone",
    "pages": [
        "<center>For those unaware, All Saints' Day is a Christian festival celebrated the first day of November each year in honour of all the saints, both those known and those unknown. It is sometimes referred to as 'All Hallows' Day'. \n\nThe night before, All Hallows Evening or All Hallows' Eve, is better known these days as Hallowe'en.\n\nWhat follows is a story of old loss, new love and timeless redemption. It is also my entry for the 2019 Hallowe'en contest.\n\nPlease enjoy.\n\n+</center>\n\nJ.L. sat in the shade of his widow's walk. The shady roof-top platform towered over the surrounding trees and offered a 360-degree view of the ocean, coast and mainland. The house had been built by his great-great-grandfather, Lazarus Townes, a shrewd sea captain who'd parlayed his savings into an extended shipping and mercantile line based in the town across the bay. Along with the shipping empire, he'd built the house with its widow's walk - a platform for him to watch for, quite literally, his ships to come in. \n\nA century later, all that remained of that lucrative commercial kingdom was the old house and the island it sat on.\n\nTownes Island stretched about three-quarters of a mile from end to end. The island was connected to the mainland by a long, narrow neck of land. There was a drivable path across the shingle most low tides; when the tide was high, water could be neck-deep, with nasty cross-currents. The tides helped to keep visitors and tourists away, which suited J.L. just fine.\n\nJ.L. leaned back, took a sip from the mug of home-brew and swivelled around with his binoculars. From where he sat, he could see a fair length of the eastern beach. There'd been a bobcat there an hour ago and he had hopes of seeing it again. J.L. respected predators and had an unstated agreement with them: We both hunt what we choose -- excepting each other.&hairsp; Each fall, he filled his larder with a whitetail or two from the island and was satisfied. For the rest, he knew Mother Nature would refill the island by next year and was pleased to watch the foxes, bobcats -- once even a very lost cougar -- live out their lives.\n\nGranddaddy Townes had built an expansive place for his wife, progeny and numerous servants. It was, by modern standards, far too large to be sustainable. J.L. had closed off most of the place when he moved in, opening the spare rooms every so often only to air out the shrouded furniture they still held. He himself lived in a bedroom with adjacent toilet and bath. The only other rooms he spent any time in were the two kitchens, the library and the widow's walk.\n\nSomeday, he thought, in the absence of any heirs, the government would reclaim it and the island would eventually become a high-end tourist resort, a conference centre or a public campground, complete with shower buildings, a concession stand and public Wi-Fi. With Sandy gone, he no longer cared, one way or the other.\n\nIn the meantime, as the population of the nearby town grew, the island had slowly become a popular, if illicit, hangout spot, a place for surreptitious picnics and private al fresco&hairsp; trysts, a forbidden place where adolescent boys dared each other to go. \n\nJ.L.'s reclusive nature had only stimulated interest.\n\nA gate on the landside point and prominent  No Trespassing&hairsp; signs had failed to keep out unwanted visitors. Now, the signs merely read:\n\n<center> PRIVATE PROPERTY\n\nALL TRESPASSERS WILL BE FILMED.\n\nENTRY IMPLIES AGREEMENT TO ALL SUCH\n\nVIDEOS BEING AIRED ON INTERNET\n\nWITHOUT NOTICE OR COMPENSATION. </center>\n\nOddly enough, it had been the least bothersome visitors, those out simply for a hike or picnic, who had been most discouraged by the signs. The nudists and daring lovers, the ones who might be thought to have the most to lose by being posted online, almost seemed to take it as a challenge. \n\nWhile J.L. had posted a few lurid videos on line, he had not yet had anyone charged for trespass. An encounter with the irascible island hermit and his dogs was generally enough to discourage return visits, but the possibility of being caught seemed to add spice to the game for some. \n\nHe'd grown accustomed to being alone since he moved back to the island five years ago. Such little shopping as he needed was mostly done by the old couple who came around once a fortnight to clean. Truth was that his face was by now mostly unknown in the town. He no longer resembled the last photos taken of him and he could, with but little effort, wander the town streets without being recognized, especially after dark.\n\nHe rarely did, wanted no contact, had no desire to mingle. The world had passed him by and he was content for it to be so. It hurt less.\n\n35 acres of forest provided wood for heating in the colder months. Shunning chain saws, he took pleasure in using a double-bitted ax and crosscut saw. The ones in the shed were of an old design with the patina of age. J.L. liked to believe they had once been owned by his great-grandfather.\n\nHe had his own garden, a patch of raspberry canes, some fruit trees. His autumns were kept busy with canning. He fished a bit, hunted some, kept half a dozen hens and did his own butchering and brewing. What the assorted layers of uniformed aardvarks on the mainland didn't know about the small still at the foot of his garden was none of their business. They had their place, he thought with a quiet smile, just not here.\n\nHis grandfather had broken with tradition by installing electricity from the state system. That allowed him what he thought the best of both worlds -- things like freezers, a washing machine and a computer with a satellite upload.  And hot running water,&hairsp; he thought.  Best invention ever. &hairsp; Flush toilets got high marks on his list, too, but hot water took the ribbon. \n\nHe was reclusive, not daft.\n\nHis father, on the other hand, had&hairsp; been daft -- or at least possessed of very poor judgement. It was primarily his mismanagement that had sent Townes Lines down the path to bankruptcy. By the time his bungling had come to a sudden end, there were hardly any pieces, business-wise, left to pick up.\n\nThe local paper had carried a front-page story about J.L.'s return to his long-empty ancestral home, with the implied hope that the Townes heir would somehow revitalize the sagging town economy. The article had been written without his input as he'd ignored repeated requests for an interview. Its publication had brought more invitations to join this, support that, act as... Those too he had ignored. Eventually, the requests had trickled off, then stopped.\n\nSocial media, to the small extent he followed them, mentioned his name once in a while. Of late, 'J.L.' (his lifelong preference over either 'Jacob' or 'Lazarus') had begun to be misspelled as 'Jael'. He found a perverse humour in it. Some, taking it from there, had even gone Biblical and begun claiming he was female. That was even funnier.\n\nHe sat up, leaned forward, peered over the railing at the beach. The bobcat had returned, evidently having found something washed up at the waterline. J.L. had thrown away his watch shortly after his return to the island. He looked at the sun, did a mental calculation and figured that Kitty had another quarter hour before the rising tide chased her out.\n\nJ.L. spent his days reading, working his garden, doing household chores. He spent a lot of time walking the island paths, learning the ways of his furred and feathered neighbours. In the evenings, he surfed the web, wrote a bit, checked the cameras. He'd half-completed a Free University philosophy degree online. The contents of an extensive, if somewhat dated, library filled in any remaining empty hours.\n\nHe was about to turn away to watch the harbor traffic when the bobcat suddenly bounded away from the water and into the woods, clearly spooked by something nearby. He swung the glasses around and back, could see nothing. Probably a dog off the mainland. They came around from time to time. Looking down, he could see Bonnie, one of his own two Alsatians, lounging in the shade by the garden from what was still hot sun. He could see no sign of her partner, Clyde, but that wasn't unusual.\n\nLocal boats had begun to head for the harbor at the sight of the black line of clouds sweeping in.  Better find your lair, Kitty,&hairsp; he grinned to himself. The house was closed up; J.L. rarely worried about the weather in any case. \n\nHe enjoyed watching storms from his private perch. Twice, he'd been there when the row of old-fashioned copper lightning rods just yards away had streamed thunder and ozone hellfire to the sky. Both times had been hair-raising -- literally -- but he was determined not to allow the sky to frighten him anymore, however much it sounded like something else.\n\nHe stumped downstairs, returning shortly with a glass of something more suitable to storm-watching. Looking down, he noticed that Bonnie had vanished from her place.\n\nThe storm was moving in quickly now. The winds were picking up and the sun was cut off by looming grey-black clouds. It looked to be a dandy gale inbound. \n\nHe propped his chair back against the brick chimney behind him, put his feet up on the rail and awaited the imminent return of his companions. While the dogs would take on a grizzly for him, he smiled to himself, thunder was their kryptonite; they'd be back at the door below at the first crash, tails between their legs. Off in the far distance, he could see the first strikes of lightning far out on the water. He started as another massive strike hit somewhere behind him on his island.\n\nHe had been so focussed on the storm that he'd overlooked the dogs barking. Most unusually, both of them were calling their excitement, ignoring the thunder. He shifted and looked to the east, towards the beach where the sound was coming from. The shoreline was empty, what he could see of it, but rapidly being submerged by the rising tide. Yet something was driving the dogs mad.\n\nShrugging, he got to his feet and, finishing his tumbler, started down the stairs. The dogs were pretty smart, but they were his partners and this kind of commotion indicated something they couldn't handle. A bear, perhaps? Unlikely. Another damned porcupine?\n\nWalking down the hall, he pulled on an old rain slicker, picked up a flashlight and, as an afterthought, tucked his father's old double-barreled shotgun under his arm, making sure it was loaded on his way out the door. \n\nDark as it was, black as the sky was, the rain had not yet started as he started down the path leading to the east beach. The wind was blowing the trees hard and leaves were whipped up in his face. He followed the sound of the dogs as he headed down between the trees.\n\nRain still hadn't started falling, but J.L. could smell its approach, its tang becoming apparent over the smell of shore and woods. The sky rapidly became much darker. Even knowing the path as he did, he stumbled once or twice. He began to smell wood smoke and ozone, no doubt from the lightning strike. From experience, he doubted there was much danger of a serious fire, especially with heavy rain inbound.\n\nThe last bit of the trail was a steep drop down onto the beach, itself already ankle-deep in seawater. He sloshed through it, hearing the dogs just ahead. He turned the flashlight on to help with the gloom, swung it back and forth.\n\nBonnie was suddenly at his knees, shivering with excitement. She barked, darted forward, stopped and turned around to look at him before barking again.  Good girl, Lassie!&hairsp; he grinned to himself. Has that idiot Timmy fallen down the well again? \n\nThe dog sprinted forward. J.L. could now see Clyde, his tail straight out behind him, barking furiously at him as the first few grape-sized drops of rain started to fall. Holding the shotgun by the grip in one hand, finger carefully out of the trigger guard, he turned on the flashlight to discover, not a porcupine or a bear, but a naked human form huddling under a bush, arms around its legs and long hair covering its head.\n\nHe lifted the shotgun away. \"Hello?\" he called. Then, \"Bonnie, Clyde, heel!\" \n\nThe two dogs stopped barking, came to his feet, shivering. The figure lifted its face, covered its eyes with one hand. \"Please!\" it called in a very feminine voice. \"Please help me.\"\n\nJ.L. lowered the flashlight so the beam was no longer in her eyes.\n\n\"Are you all right?\" he said. At that moment, the heavens opened with a blast of lightning and explosion of thunder. Rain began coming down in buckets.\n\nLooking at the figure under the tree, J.L. held out his hand. Wide eyes stared at him for a moment, then a slender hand came out. He took it -- how cold!&hairsp; -- and tried to pull her to her feet. The girl stumbled, fell towards him. \"I hurt my ankle,\" he could hear her cry over the storm.\n\nHe thought for just a second before resting the shotgun up high in tree branches. It would keep there until the morning, no matter how high the storm surge proved to be. There was oil on it, he thought; it would last out the night. Not good, but no worse than a damp morning in a duck blind or a rainy night patrol.\n\nThe woman was shivering violently. He shrugged out of the slicker, wrapped it around her and picked her up, one arm under her knees and the other under her back. The girl was substantial, solid in his arms, but hardly impossibly heavy. The rain was cold and he could feel it lashing his hair, running down his back. \n\nThe tide was up over his shins by the time he left the beach. He could hear the dogs splashing through the water ahead of him. \n\nIt was a steep climb, but the years of solid exercise had tightened his muscles and, in any case, she was no heavier than other loads he had routinely carried in the Sandbox. The trail was turning slippery with the rain, but he managed to avoid falling until almost back at the house. There his ankle slid out from under him on a patch of mud and he landed heavily. The woman gave a shriek before scrambling to her hands and knees. The dogs crisscrossed between them, their uncertainty clear.\n\n\"Sorry,\" he puffed. \"Almost there.\" He was by now shivering himself. He pulled her to her one serviceable foot, put her arm over his shoulder and his around her waist before lurching towards the door. Inside and out of the rain, he fumbled for the light, shoving the heavy door closed behind them with a foot. Leaving the girl by herself for a moment, he returned with a pair of heavy towels and passed her one.\n\nThe house was still warm from the afternoon sun, but his shivering didn't stop. Leaving her again, he went into the main kitchen and put on a kettle before stripping off his wet clothes and toweling himself off. He wrapped the towel around his waist.\n\nWhen he returned to the hallway, the girl was sitting on the floor, towel wrapped around her and his discarded slicker in a puddle on the floor beside her. One slender leg was held straight out in front of her. \n\nThe dogs, having shaken off the rainwater from their fur, lay beside her, quiet, watching intently, almost protectively now. The tip of Clyde's tail thumped lightly on the floor as J.L. approached.\n\n\"C'mon, darlin',\" he said. \"Let's get you someplace warm.\" As he helped her up again, his towel fell off. Dammit,&hairsp; he thought to himself, not the time for this! &hairsp; Ignoring the fallen towel, he half-carried her into the library. Putting her on a couch, he knelt in front of the fireplace and lit the firewood already laid there. The logs soon blazed up into healthy flames.\n\nHe rose to his feet, turned around. The girl was watching him. Her eyes dipped to his nudity. He grimaced in apology, covered himself with two hands. \n\n\"Sorry,\" he said. \"Back in a minute.\" He returned in a minute with his towel back in place and another dry one for her. Handing it to her, he went to the kitchen, spooned brown sugar, cloves, cinnamon sticks and respectable shots of whiskey into two mugs, pouring boiling water over them before taking the drinks back into the library. \n\nThe young woman -- definitely young, definitely a woman -- was attempting to dry the long red hair stretching almost to her waist. The other towel had slid down her body, exposing shapely breasts topped with small, dark areolae and prominent nipples. Firm hips led down to strong-looking legs.\n\nShe hadn't heard him enter and looked up, blushing, her hands dragging her towel up to cover her near-nakedness.\n\nHe turned his head. \"I keep having to apologize. I brought you something warm to drink.\"\n\nHer voice was a clear alto. \"You've nothing to apologize for. Without you, I'd be swimming by now.\"\n\n\"Maybe,\" he replied, \"but I'm sorry to have embarrassed you. I'm going to warm up some soup. Call me when you are ready. I'll try and find you something to wear.\"\n\n\"Thank you.\"\n\nJ.L. put some stew from the refrigerator onto the stove, then went into to his bedroom and dressed. He selected a spare set of sweats for the girl, old but clean and warm, and added a pair of wool socks. This time he knocked before entering.\n\nThe young woman was sitting with her ankle propped up on one end of the sofa.\n\n\"Let me take a look at that,\" he said. He waited, watching her heart-shaped face. It occurred to him that she was remarkably pretty.\n\nWhen she nodded, he knelt beside the sofa. He prodded here and there, wincing with her as he did so. He looked up at her strained face. As he sat up, he noticed between the folds of towel that she was indeed a real redhead.  Shame on you, J.L.,&hairsp; he thought to himself.\n\n\"Doesn't look like it's broken,\" he said. He went to the kitchen, brought back a large porcelain bowl half-full of ice and water. \"Put your foot in there,\" he said. \"It will help. The toddy will keep you warm and I can fetch a blanket if need be.\"\n\nThe girl hissed as her foot entered the icy water. J.L. stirred up the fire and tossed another log on, as much to make the room look&hairsp; warmer as anything else.\n\nHe pointed to the clothes. \"You can put those on if you want,\" he offered. \"Not your size, but they should be warm enough. When you get that done, if you want, I'll tape up your ankle. I think I have some crutches around here someplace.\"\n\nThe girl looked at him. \"Thank you, but could I ask you to call me a cab, please? I need to get home.\"\n\n\"Well,\" he replied, smiling slightly, \"there are two problems with that. The first is that I don't have a phone. The second is that the tide is coming in and the road will be impassable by now. I have a computer you can use if you want to notify somebody.\"\n\n\"So I'm stuck here? Is that what you're saying?\"\n\nHis smile vanished at the tone of her challenge. \"What I'm saying is that you were trespassing on clearly posted land. What I'm saying is that I rescued you, carried you half a mile in the rain and that you're wearing my clothes, drinking my liquor. What are you saying?\"\n\nThe woman blushed, lowered her eyes to the floor. \"I'm sorry,\" she said softly. \"I am grateful, truly. I...\"\n\nShe paused. \"May I take my foot out now? It's really aching from the cold.\"\n\nStooping, he removed the bowl and stood up.\n\nShe looked at him in the flickering light, as if for the first time. She saw a slim man a generation older than herself, not tall, with well-defined muscles but carrying too little fat to be truly healthy. His hair was close-cropped, as stylessly as if he had cut it himself. His red-brown beard reached to his collarbones; close to his chin, the whiskers were threaded with grey. Dark, deep-set eyes framed a prominent, beaky nose. J.L. couldn't be called an imposing or handsome man by any conventional standard.\n\nHe left the room, returning shortly afterwards. The girl had donned his sweats and one sock. They actually fit her well enough. He lifted her injured leg, sat on the sofa beneath it and started wrapping it expertly with an elastic bandage.",
        "\"The tide will be down tomorrow morning,\" he said. \"We can see if there's a storm surge or if we can get you to land then. And yes, that means you're stuck here for the night. What's your name?\"\n\n\"Iris. Iris Mackenzie.\"\n\n\"Well, Iris-Iris-Mackenzie, I'm J.L. Townes. I'll try to make you comfortable until then.\"\n\nHer hand flew up to cover her mouth and her eyes widened. \"Ohmygod!\" she whispered, \"You're her!\"&hairsp; Then, instantly, \"I mean,  him.\"\n\n\"Yep,\" he replied thinly. \"Boo Radley in person.\"\n\nThe girl didn't smile. Either she hadn't done much reading or didn't think much of his sense of humor. \n\n\"The stew should be warm by now,\" he said. \"I'll look for those crutches later. For right now, you can eat where you are or I can help you into the kitchen.\"\n\n\"Um, I think I'd like a table, please.\" She rose, stood swaying on one foot, tried a little weight on the other. She winced but managed to take a few hesitant steps.\n\nJ.L. came to her side, put his arm around her waist, felt her arm around his own. It was a comfortable weight. As they limped their way into the kitchen, he was aware of their hips against each other. It had been a long time since he had last felt anything like that.\n\nThe kitchen was big and airy, but obviously no newer than the house. A central island dominated the room, crenellated with a row of copper pots hanging over it. There were two old-style commercial ovens. There might have been a third at one time, but the space was now filled with a modern stainless-steel upright freezer. A large pine table surrounded by matching chairs stood at one end of the room. Everything was spotless, but obviously little-used. There were some framed photographs, a faded world map and a couple of shadow boxes on the wall. \n\nJ.L. helped her sit down. The smell of stew had filled the room. He ladled some into two bowls, placed one on the table in front of her, placed the other across from her. He filled two glasses of cider before sitting down. A half loaf of corn bread already lay on the table between them.\n\n\"This is really good!\" Iris said, spooning stew into her mouth. \"What is it?\"\n\n\"Venison,\" he replied. \"Home grown potatoes, parsnip, carrots, kale. Some other stuff.\"\n\nThe girl stopped, looked at her spoon.\n\n\"'Venison'? Deer meat?\"\n\n\"Yes.\"\n\n\"Oh. I've never had that before.\" She looked down at her spoon. She took another hesitant taste, resumed eating. \"You're a good cook.\"\n\n\"Thank you.\" He put down his spoon, rested his head on his hands and looked at her. \"Now would you like to tell me why you were so keen on getting yourself on the Net?\"\n\nShe blushed. \"You mean that's for real? They said it was all a joke.\"\n\n\"Nothing funny about it. I treasure my privacy. I don't want to press charges unless I have to and landmines are illegal hereabouts. So, yeah.\"\n\nThe blush deepened. \"Ohmygod,\" she said again. \"I'm so embarrassed. Nobody has seen you in like forever. It's like you're just a fable, some sort of a joke.\"\n\n\"I'm real enough. What were you looking for in the first place?\"\n\n\"It was just a dare, some girls at the sorority dared me to... go sunbathing here. They said lots of people do it. But I tripped on the beach and hurt myself and then the storm started.\"\n\n\"You're a student at the college?\"\n\nShe nodded. \"Second year marketing.\"\n\n\"Where are your clothes?\"\n\n\"I dropped them on the beach when I tripped.\"\n\n\"Mmmph. Washed 'way down the coast by now.\"\n\n\"No! My phone, my ID. Oh, hell! And my keys!\"\n\n\"Well, I'll take a walk down there tomorrow morning and see if I can find anything. It's all underwater now.\"\n\n\"But what am I going to do if I can't find them?\"\n\n\"You'll do what's needful, I guess. Worry about it in the morning.\"\n\nJ.L. looked at her. The storm was in full cry outside and the house creaked with the wind. He saw sudden unease in her eyes at the sound.\n\n\"The house was built over 125 years ago,\" he reassured her. \"I think it's likely to be here tomorrow.\"\n\nShe tried to smile, running her fingers through her damp hair.\n\n\"I don't suppose you have a hair dryer?\" she asked. \"This is going to be one long tangle otherwise.\"\n\n\"Probably not.\" He ran his hand over his close-cropped scalp, grinned. \"I have a comb though.\"\n\n\"May I? Please?\"\n\nJ.L. thought for a second, went upstairs into one of the disused rooms. He returned carrying a matching set of silver-handled brush and horn comb. They were engraved with the name Evelyn&hairsp; in ornate script. He put them on the table in front of her. \"I'd forgotten about these,\" he said. \"They were my mother's. I didn't want to throw them out.\"\n\nHe walked around behind her and looked down at her hair. \"Yep, pretty much a mess. May I help?\"\n\nShe paused for a second, then nodded, He began at the bottom, gently but firmly taking the snarls out.\n\n\"May I ask you a question?\" she asked.\n\n\"Yes.\"\n\n\"Your mother...?\"\n\n\"She and my father died in a car accident five years ago.\"\n\n\"I'm sorry to hear that.\" She pointed at one of the photos on the wall, a newer one. \"That looks like you -- without the beard I mean.\"\n\n\"Yes.\"\n\n\"Who's the woman with you? She looks much too young to be your mother.\"\n\n\"That's Sandy. My wife.\"\n\n\"Oh. Is she here with you?\"\n\nThere was a very long pause.\n\n\"She's with me every day, Iris. But she died in the same crash.\"\n\n\"Oh,\" the girl said. \"I'm so sorry. I didn't mean to hurt.\"\n\n\"It's all right.\"\n\n\"May I ask what happened?\"\n\n\"I'd been... away. They were coming to pick me up at the airport,\" he said quietly. \"A wheel came loose from a semi on the highway, crossed the median and hit them full on in the other lane. It was quick, at least.\"\n\nShe spun around, almost dragging the comb from his hand. Blue eyes were filling with tears in sympathy.\n\n\"That's horrible! I'm so sorry.\"\n\n\"It is what it is. I prefer to think about the good times we had before then.\"\n\n\"How long had you been married?\"\n\n\"Almost four years. It was a good time, even if I was away a lot.\"\n\n\"Away? Where, if you don't mind my asking?\"\n\n\"I was in the Army. They were coming to pick me up after my last tour.\" He shrugged. He'd obviously thought about it many times.\n\n\"But what about you?\" he asked. \"Your sorority sisters -- am I going to have to deal with the Coast Guard prowling around looking for you when you don't come home tonight?\" \n\nShe thought for a second. \"I don't think so.\"\n\n\"Again, do you want to use my computer to let them know?\"\n\n\"Not right now.\"\n\n\"No irate boyfriend?\" \n\n\"Nobody steady.\"\n\n+\n\n\"You have a choice,\" he stated. \"The library is the warmest room in the house; you could sleep on the sofa in there. Or I could open up a bedroom upstairs for you. More private, a better bed, but maybe not as warm.\"\n\n\"Where's your bedroom?\" Iris asked, impishly, then noticed the look on his face. Woah!&hairsp; she thought. \n\n\"I'm sorry,\" she said hastily. \"Just trying to make a joke. I'm really grateful, J.L. Thank you for your kindness.\"\n\nThe bleak look faded, turned into a thin smile. \"Other side of the pantry,\" he said, pointing. \"And the door'll be locked.\"\n\nNow the look was on her face, at least until she saw the growing grin.\n\n\"I'll take the library, thank you.\" She hopped around the table, bent down and gave him a kiss on the cheek. \"You've been really good to me, J.L. I do appreciate it.\"\n\nHe helped her back to the couch, fetched sheets, a pillow and blanket and a clean towel. \n\n\"You can leave the door open or shut,\" he said. \"If you shut it, the dogs might scratch on the door to be let in. This is where they normally sleep.\"\n\nIris nodded solemnly. \"Oh. Would it be better if I was in another room?\"\n\n\"Naw. They're big sissies, actually. If you let them in, they'll just curl up in front of the fire.\"\n\nAs if on cue, Bonnie stuck her head into the room, pushed by J.L. and did precisely that.\n\n\"If there's nothing else you need, Iris, I'm going to turn in.\"\n\n\"I'll be fine, J.L. You can leave the door open. Both of them.\"\n\n+\n\nThe storm had broken by the time J.L. woke up the next morning. He padded into the kitchen, stopped half-way and returned to his bedroom to put on some clothes. He put coffee on before tiptoeing to the library door. Without going in, he listened, heard deep breathing. The two dogs emerged quietly, wagging their tails. Kneeling, he patted both of them, scratched behind their ears.\n\nLeaving Iris to sleep, he let the dogs out the kitchen door before making and pouring a mug of coffee and taking it outside. The woods were dripping but the day promised to be a fine one. After a bit, he took a mesh bag and started back along the beach path. The dogs followed, then bounded ahead of him.\n\nThe shotgun, although beaded with rainwater, was still in place. J.L. opened it, ejected the shells and checked the barrels for obstructions before reloading it.\n\nHe strolled along the beach in search of Iris' belongings, but found only a red pair of panties snagged on a low bush. He was about to give up when Bonnie gave a low 'Woof' and scratched at the sand. Barely visible was a thin leather strap which, when pulled on, proved to be fastened to small purse. \n\n\"Good girl!\" he said, scratching her head again. More tail-wagging.\n\nWith purse and panties stuffed in the bag and his shotgun over one shoulder, he returned to the house. Iris was still asleep and didn't appear on the porch until he was just about finished oiling the shotgun. She looked uneasily at it.\n\nSeeing her expression, he smiled a bit. \"It's just a tool, Iris,\" he said. \"When the dogs started barking last night, I thought it might be a porcupine. I could carry either you or it home from the beach last night, so it spent the storm outside and needed oiling.\"\n\nShe nodded, obviously still a bit nervous, then sat down.\n\n\"How's your ankle? Would you like a coffee?\"\n\n\"I... um, my ankle's some better, thanks and, yes, I would die for a coffee.\"\n\nHe went inside, filled his own cup and brought her one. \"I hope you like it black.\"\n\n\"Perfect, thanks.\"\n\n\"Um, Iris... OK, let's do this traditionally. I have good news, some not-so-good news and some really bad news.\"\n\n\"Oh!\" the girl replied. \"How about you do them in that order?\"\n\n\"OK,\" he said. \"Here's the good news.\" He swung around on his seat, found the mesh bag. Digging into it, he fished out the purse and handed it to her. \"Is this yours?\"\n\nWhat an amazing smile!&hairsp; he thought to himself. \n\n\"Oh, yes! Thank you, J.L.!\" She paused, then, \"What's the not-so-good news?\" \n\n\"The tide is still way up -- it happens a lot with big storms. The only way for you to get to the mainland for the next while is going to be by swimming.\"\n\n\"Oh. Oh, poop!\" She then thought for a moment. \"What's the really bad news?\"\n\n\"I found your clothes.\" He reached into his pocket and pulled out the panties. Handing them to her, he gave a wry grin. \"That's it.\"\n\n\"Oh, crap!\"\n\n\"Not sure what else I have that might fit you. The island is mainly sand, so you can probably get by without shoes. We can go back and look again after breakfast.\"\n\nThe girl looked despondent, then shrugged. \"Purse and keys. That's something at least. I guess I can live with that.\"\n\nThe two sat, sipping their coffee.\n\n\"J.L.?\"\n\n\"Mmm?\"\n\n\"It's so peaceful here, but don't you ever get lonely?\"\n\n\"Not really. I keep busy. There's Bonnie and Clyde. And it seems like Sandy is always right beside me.\"\n\n\"I'm starting to think that she was pretty special.\"\n\n\"I was more blessed than I knew at the time, Iris. The thought of her has kept me going -- kept me alive -- at times.\"\n\n\"Was she a gardener, too? The one out back is pretty impressive.\"\n\n\"No, she was mainly into flowers. I started a working garden when I moved back here.\"\n\n\"Did you grow up here?\"\n\n\"Mainly, but I got sent away to school once I got old enough. I missed the island then.\"\n\n\"What else do you do here, asides from gardening?\"\n\n\"Cutting wood for the winter, doing some online courses, play with the dogs - there's never a shortage of things to do. I walk the paths a lot, visit with the birds and animals, check my cameras each morning, work in the garden. Busy enough. I spend a lot of time on the widow's walk, just watching the ocean. Sandy liked it up there.\" \n\nIris was quiet in thought, then suddenly colored. \"J.L. Those cameras...\"\n\n\"Mmm?\"\n\n\"Do they show more than just the causeway to the island?\"\n\n\"Oh, yeah. I've got 17 of them all over the island. I spend a fair bit of time watching the wildlife. It's fun to see them going about their lives. When we get a minute, remind me to show you the feed from one I put beside the osprey nest on the west side. I had to climb the tree at night to mount it so Mama Bird didn't attack me, but the take is amazing, like you're right in the nest with the chicks.\"\n\n\"I'd like to see that,\" she said. \"You can watch the cameras in real time?\"\n\n\"Yep, but it all gets taped, too. I don't spend all my time watching. They're motion activated.\"\n\n\"Oh.\" The girl seemed subdued, but the blush was slow in fading.\n\nShe paused, then, \"Is there one...?\" Her voice trailed off.\n\n\"Pardon me?\"\n\n\"Nothing. Um, you made dinner last night. May I make breakfast?\"\n\n\"Sure. Help yourself to whatever's in the fridge. All the tools are under the island.\"\n\nAs Iris limped back into the house, J.L. reassembled the shotgun and followed. Leaving it in its usual place, he listened to the unaccustomed domestic sounds in the kitchen, then moved quietly to his office.\n\nSitting down at his computer, he began the process of reviewing the previous day's take from the cameras. Most showed deer, racoons and squirrels, with last night's bobcat presenting very well on the east beach camera. It was toying with something it had found by the waterline, probably a dead fish, when its head suddenly went up, looking off to one side. A moment later, it bounded into the treeline. \n\nCurious, he spun the video forward, then slowed as Iris Mackenzie emerged from the trees, wearing a pair of cut-off jeans and a pale blouse with its shirttails tucked and knotted under her bosom to leave her stomach bare. Her red hair showed up well in the afternoon sunshine. Her small purse hung over one shoulder and a large beach towel over the other.\n\nShe paused as she emerged onto the open beach. Her head turned back and forth as if checking for the presence of others. Apparently satisfied, she resumed her advance, stopping again by a warm patch of sunlit sand.\n\nLooking around again, Iris' image on the monitor shrugged, laid out the towel and started to disrobe, neatly folding each garment as it came off. Under the blouse and jeans, the girl wore the red panties and a matching bra. With another look around, she pulled those off, folded them and put them on the other clothes beside the towel.\n\nAt last, fully nude but for her sandals, she sat down, tossing them off her feet as she did. She lay on her stomach in the sun. J.L. examined her image as dispassionately as he could manage, but he was increasingly aware that the naked woman he was watching on his screen was cooking in the next room. \n\nThe high-definition image was amazingly clear. The girl's slender, athletic figure stopped just short of having visible abs, but every muscle was toned. Her breasts sat high on her chest, firm and, to him, entrancing. Her legs were long, with lean muscles clearly evident. J.L. fancied himself as a connoisseur of feminine posteriors; Iris's rated very well to his mind.\n\nHad he been peering over a fence or through a window, J.L. would have been ashamed of his voyeurism. As it was, this was his land, clearly posted, well beyond signs warning that videos would be made; he felt but little unease.\n\nOn the screen, Iris rolled over and raised herself on her elbows before turning her head back and forth, as if looking again for intruders. She lay back down, tucked her clothes under her neck for a pillow. Her head turned back and forth, as if trying to get comfortable. When she settled in, she made one last head-turning check before one hand came up to gently stroke the underside of one breast.\n\nJ.L.'s breath caught. He reached to stop the video, then withdrew his hand. \n\nIris' fingers ran lightly over her body, as if in celebration of beauty and the sun's warmth, before she tucked her hands behind her head and relaxed. \n\nIt was a lovely sequence, touching and gentle. J.L. sat for some minutes, watching as the girl's breathing slowed. She appeared to nap, her breasts rising and falling gently.\n\nGradually, the leading edge of the rising tide appeared at the bottom of the screen. Shortly after, a low wave slopped across the bottom of her foot and the girl awoke with a jerk, scrambling to her feet to escape she clearly didn't know quite what.\n\nAt that moment, the screen went almost totally white as it registered the nearby lightning strike. Startled, the naked figure tripped, fell backwards and scrambled out of sight, leaving clothes and towel behind.\n\nWith nothing in its sensors, the feed stopped. J.L. shrugged, erased the sequence and turned the computer off. He knew what happened next. \n\nHe sat there, staring at the blank monitor, until Iris announced from the next room that breakfast was ready.\n\nIris had prepared berry muffins and scrambled eggs. It had been a long time, J.L. reflected, since anybody had prepared his breakfast for him. At his suggestion, they carried the meal on trays up to the widow's walk.\n\n\"This is amazing!\" Iris exclaimed. I guess I've seen the roof from the town, but I never thought it would be so lovely over here.\"\n\nJ.L. smiled. \n\n\"It seems like we can see forever!\"\n\n\"I figured it out once -- the horizon is just under 12 miles away at high tide, a bit lower when the tide's out.\"\n\n\"Wow.\" The girl pointed at something on the horizon. \"What's that, the tall thing over there?\"\n\n\"Um, the university spire?\" he suggested.\n\n\"Oh. It looks really different from up here.\"\n\n\"Most things do, Iris.\"\n\n.\n\nAfter they had cleaned up the dishes, J.L. asked Iris if she would like to go beach-combing. \"Up for that? It might be that we find some more of your clothes, Iris.\"\n\n\"Uh, but I... it's humid and it's getting warmer. I think I'll die in these sweats of yours.\"\n\n\"Ah. Let me see what I can find.\"\n\nIt turned out to be not that much, J.L. having discarded all feminine apparel in the house years before. Sheepishly he produced a pair of black shorts bearing the label ARMY in reflective letters and a selection of t-shirts.\n\n\"That's about it, I'm afraid. I have sweaters and jackets you could wear on top, but, again, they'd be warm. Your call. I might have a housecoat somewhere, but it'd be a warm one I wear in winter.\"\n\nIris poked through the clothing in some embarrassment, finally settling on a plain brown issue t-shirt. With a slight blush, she went into the library, emerging a minute later wearing shorts and t-shirt and carrying the sweat suit over one arm. \n\n\"I guess these will have to do, J.L. Thanks for trying.\"\n\nJ.L. tried to keep his eyes above her shoulders. The young woman had a very good figure and the bra-less t-shirt did very little to hide her female attributes. Her long nipples challenged the thin cotton. The image of her on the beach kept echoing in his mind. \n\n\"How's the ankle?\" he asked. \"If you'd prefer to rest it, I can go looking by myself.\"\n\n\"It's OK,\" she replied. \"It was just twisted. I should be OK if I'm careful and things aren't too uneven. The bandage helps.\"\n\nHe pointed towards the edge of the forest, where several paths opened up. \"If we're going to look for your clothes, I think we should go up to the peninsula and start on the west side. The currents flow clockwise around the island and, if your stuff is anywhere, it's most likely there.\"\n\nThe girl nodded and then waited for him to lead. Instead, he bowed slightly and motioned her forward. ",
        "\"After you. Take the middle path.\"\n\nWith Iris leading and Bonnie and Clyde criss-crossing the woods in front of them, the pair made their way. With the exception of eradicating any poison ivy he could find, J.L. had left the island essentially wild, and under the canopy of maples, birches, beeches, pine and hemlock it was as peaceful as it was beautiful.\n\nAs the sandy path passed through one clearing, J.L. paused and pointed at a high tree. \"There's one of the cameras,\" he said. \n\nIt took Iris a few seconds to perceive the small box and solar panel mounted high up on one tree. \"Oh,\" she said. \"It's almost invisible.\"\n\n\"I put it there because the deer like to feed here. As far as I can tell, there are about 23 of them on the island.\"\n\n\"That's pretty exact. Did you see them all at once?\"\n\nHe touched her shoulder, indicated a turn on the path. \n\n\"No. They're all distinctive, once you get to know them. Each one looks a bit different in size, color and pattern and they move on a fairly regular track each day. \n\n\"Actually,\" he said, estimating the height of the sun in the sky, \"if you can be really quiet and not talk, there's a group which should be visible in a couple of minutes.\"\n\nIris turned to look at him and he took the opportunity to motion her to sit down beside him behind some low bushes. He pointed at his bare wrist as if to indicate a watch and held up his other hand with splayed fingers twice: 10 minutes.&hairsp; He held his finger to his lips to stress the need for silence.\n\nHe took Clyde's collar in one hand and put Iris' hand on Bonnie's. The dogs were well-trained, well-behaved, but they were still dogs.\n\nIris settled down on the soft vegetation and tried to relax. The sun warmed the little meadow, groups of mayflies glittered in the bright light. After some time, she turned her head to look at J.L. He seemed to be so still as to have become part of the tree he was leaning against.\n\nSensing her movement, his head slowly turned towards her. Equally slowly, he lifted one hand, again raised a finger for silence. He turned his head just slightly towards the open area and a smile crossed his face. The finger on his lips, very slowly, turned and pointed.\n\nIris shifted her gaze past him and gasped softly. Where there had been only empty grass a few seconds ago, there were now, just 50 feet away, four white-tail deer -- a large doe, a smaller doe and two spotted fawns.\n\n\"Oh!\" she breathed in wonder. \n\nThe older doe's head turned towards her. Without hesitation, the four bounded for the treeline, white tails waving behind them. \n\nBoth dogs started to rise, lay back down when caught by the firm grips on their collars.\n\n\"Oh! J.L. -- I'm so sorry. I didn't mean to scare them off. They just surprised me!\"\n\n\"I think we surprised each other, Iris. Not a problem.\"\n\n\"I've... I've never seen one so close. They're beautiful!\"\n\n\"They are that, aren't they?\"\n\nIris was quiet for a moment, sitting still and looking at the empty space where the deer has been.\n\n\"But...\"\n\nJ.L. smiled. \"But how can we eat something so lovely?\"\n\n\"Yes. I guess.\"\n\n\"Iris,\" he said gently. \"This island can support about two dozen deer. Think it through. Each spring, each doe will have a fawn. Some will have two, some will have none, but one is a fair average, a good working figure. With me so far?\"\n\n\"Yes.\"\n\n\"So, each summer, after the fawns are born, there will be 36 of them here. And next year over 50, the year after that, well over 75. What happens then?\"\n\nIris was silent.\n\n\"You know what would happen, Iris. They'd eat every plant within reach. They'd eat the bark off trees, try to dig up roots. In the end, most of them would starve to death. Incidentally, after that, the island would take years to recover to the point where it could support more than a handful of deer. For them, it would be a disaster.\"\n\n\"But couldn't they just leave?\"\n\n\"And go where? Sending a bunch of excess deer from here to somewhere else would only shift the problem. And it wouldn't actually solve the problem either, just delay it. \n\n\"In the real world, Iris, whether or not J.L. Townes goes hunting here, by next spring the island will be down to about two dozen deer, half of them pregnant. It may be 20 or 27, but it always hovers around two dozen.\n\n\"But remember, Iris, 12 fawns are born every spring, meaning that the island has surplus of them -- a dozen deer above the carrying capacity, the ability of the island to support them.\"\n\nHe turned to the girl. His expression was firm but not unkind. \"What happens to that surplus, Iris?\"\n\nThe young woman just looked at him, so he continued.\n\n\"Some will die of disease, some will break a leg and die slowly, a couple may drown, some will freeze to death, some will be chased down and eaten by predators. But the excess will die, one way or another. Mother Nature almost always wins, Iris -- and she's not a nice lady.\"\n\n\"Predators? Here?\"\n\n\"Oh, yes. Coyotes, a lynx maybe. Had a cougar a couple of years ago. I wouldn't have minded except she and the dogs didn't get along.\"\n\nIris, silent, stared at the ground near her feet.\n\n\"Oh, some will leave, Iris, but others drift in from elsewhere. It balances out. But the good news is that there will be another generation of fawns born next year. And the year after that.\"\n\n\"So, you're saying that hunting doesn't make any difference?\"\n\n\"Not if it's properly managed. It's all part of that 'circle of life' thing, Iris. I never take more than I can eat, never more than can be replaced within the year. Mother Nature has been doing it this way since Creation. I'm just another agent for her. And someday I will be buried and feed the flowers and trees. It all works out, the way I look at it.\"\n\nIris turned to face him. \"You have a very calm way of looking at something so harsh, J.L.\"\n\n\"Ms Mackenzie,\" he replied, looking her in the eyes, \"I like to think I'm closer to Mother Gaia than a lot of people carrying protest banners or writing strident letters about things they really don't understand. Life goes on here with minimal impact. Were I to live another hundred years as I live today, I would hope that there'd be almost no change to the island. Oh, and there'd still be two dozen deer here.\"\n\n\"Now,\" he said, rising to his feet and holding out a hand for her, \"let's see if we can find you some more clothes.\"\n\nTheir expedition, while a pleasant outing, located nothing more of the girl's garments. Taking his cue from her, J.L. himself said little.\n\n\"The water should be down by late afternoon,\" J.L. said as they approached the house. \"I can order a taxi on the net.\"\n\nIris nodded. \"Thank you,\" she said softly. But for the rest of the morning, she was silent.\n\nJ.L. let her be, spent his time re-establishing his normal routine. Eventually, his stomach growled. J.L. didn't wear a watch, but tolerated the clock on his computer.\n\n\"Iris,\" he called as he headed for the kitchen. \"Would you like some lunch?\"\n\nWhen the young woman didn't reply, he went looking for her, found her curled up outside with a book. She looked up as he approached.\n\n\"Some lunch?\" he repeated.\n\nThe girl shook her head, sadly. \"J.L.,\" she said, \"I'm sorry to have been a bother.\"\n\n\"No bother, Iris,\" he said. He looked at her for a moment, sat down on the grass beside her. \"What's upsetting you?\"\n\n\"I'm not entirely sure,\" she said. \"Just confused, I guess. But you've been very hospitable and I do appreciate it.\"\n\n\"You're welcome,\" he said with a small smile. \"Just do me a favor and keep your mouth shut about how I live here. I really don't want a whole bunch of...\"\n\n\"I promise,\" she said, cutting him off. \"What time is the taxi coming?\"\n\n\"It'll be at the other side at five. We should leave here at 4:30.\"\n\nThe girl blushed. \"Um, J.L., could I push my luck and return these clothes later?\"\n\nJ.L. grinned. His laugh boomed out across the island. \"We could hardly send you home without them, could we?\"\n\n\"I promise to get them back tomorrow or the next day.\"\n\n\"No hurry. Actually, don't bother. They're a bit small for me anyway.\"\n\n+\n\nJ.L. watched the outgoing boats from the widow's walk. The promise of fair weather on a Saturday morning was too much for any sailor to miss, he thought. He sipped his coffee, watched it steam in the morning air. \n\nHis thoughts drifted back to the day spent with Iris. He'd grown accustomed to his own company; her presence, while not entirely unwelcome, had changed things. Even the dogs sensed his altered mood; Bonnie had begun following him everywhere. Normally she would never come upstairs, but now she lay at his feet, the tip of her tail beating slowly against the floor as she watched him.\n\n\"There's a good girl,\" he said softly. He reached down and scratched her fur. The tail-beat sped up.\n\nJ.L. had spent a long time thinking about Iris. Though he knew that keeping a recording of the beach scene would have been wrong under the circumstances, he still regretted deleting it. \n\nBonnie's tail suddenly stopped beating. Her head came up off the floor, looked inland towards the island. She rose, walked to the railing and gave a low 'woof!'\n\nJ.L. leaned deeper into his chair. Bonnie hadn't growled the way she would for an intruder, two or four-legged. It was probably just her announcement of Clyde's return from some top-secret canine expedition.\n\nSure enough, the sound of the big dog's paws could be heard on the stairs below. Clyde soon emerged and came over to J.L, wagging his tail. The man stretched out his hand in greeting, them jumped as Iris' voice spoke from behind him.\n\n\"Good morning, J.L.\"\n\nThe lean man spun out of his chair in surprise.\n\nIris giggled, her hands over her mouth.\n\nIt was a warm morning and, in the casual custom of one living alone, J.L. hadn't bothered getting dressed. He covered his groin with his hands.\n\n\"I'm sorry,\" she said, pointedly turning away to stare out over the harbour, \"but you don't have a phone and I didn't get your email address or I would have asked. I just wanted, well, first, to return these.\" Without turning towards him, she held out a shopping bag.\n\nInside were the clothes J.L. had loaned her last week. Not particularly embarrassed himself but not wanting to embarrass his visitor, J.L. pulled out the old Army shorts and stepped into them.\n\n\"Thanks,\" he said, \"but I did say you could keep them.\"\n\nIris turned to face him again.\n\n\"Well, you did say that, but I wasn't happy about it. And...\"\n\nThe girl looked embarrassed in any case.\n\n\"And?\" he repeated.\n\n\"J.L., I wanted to apologize again. I came here, onto your private property. And then I got all judgemental on you and we didn't exactly part on good terms. I'm sorry for that.\n\n\"And I wanted to say thank you again, face to face. You saved me from what would have at best been a very unpleasant night and you treated me very generously. So...\"\n\nJ.L. raised a palm, cut her off.\n\n\"It's OK, Iris. You're welcome. Anybody would have done it.\"\n\n\"I don't think so, J.L. Not to that degree.\"\n\nOn impulse, she leaned down, kissed him on the cheek before sitting down in another chair. \n\n\"Have you eaten?\" she asked.\n\n\"Hmm?\"\n\n\"Have you had breakfast?\" She held up a second bag. \"I brought you a loaf of banana bread, Mom's special recipe.\" She reached inside the bag with one slim hand. \"It's still warm.\"\n\nJ.L. was torn. His privacy was in many ways his greatest treasure and in one sense he objected to anybody, however nice, intruding into his private little world. On the other hand, Iris had obviously gone to a lot of trouble on his behalf. She must have been up very early to have baked and got all the way here from the university by now. \n\nAnd, he had to admit it, deep down inside, her presence made him realize that he had been lonely, more lonely than he wished to admit. \n\nAnd, yes, she was definitely easy on the eyes.\n\nHe smiled. \"Sounds good, Iris. I accept.\"\n\nHe led the way down to the kitchen. \"The coffee's fairly fresh. Would you like a cup?\"\n\n\"Yes, please.\"\n\n\"Unless you brought something else, Iris, how about some applesauce to go with the bread? I just put up a big batch this week.\"\n\nThe girl's eyebrows raised in mock surprise. \"He cans, too? Perfect.\"\n\nThe two made minor talk over the meal. J.L. found himself looking at Iris across the table when he thought she wouldn't notice. To his disappointment, she was wearing a bra. She had a sprinkling of freckles on her cheekbones, something he hadn't noticed. And he could smell her, a flowery scent -- shampoo, perhaps?\n\nThe man found himself relaxing. The deep-down ache which had weighed down his heart for five years seemed to be just a little lighter.\n\nShe looked up suddenly, caught him looking at her. \"What?\"\n\nAt least she didn't catch me staring at her chest!&hairsp; he thought to himself. \n\n\"Nothing, Iris. Just thinking. How long are you here for this time?\"\n\nStay here forever?&hairsp; The thought popped up in his mind from nowhere, amazing him. He quickly pushed it aside.\n\n\"I've nothing planned for the day, J.L. Can I help you in the garden? Is there more canning to do? Can we go back and see the deer again?\"\n\nHer smile was light, young, completely innocent of the emptiness so weighing on his soul.\n\n\"No canning right now, Iris, but I could do with some help picking raspberries, if you wouldn't mind. I can loan you a long-sleeved shirt or something. And, yes, we can go and see the deer.\"\n\nThe woman beamed. Again she leaned in and kissed his cheek.\n\n\"Thank you, J.L.\"\n\nHe wondered at how nice her lips had felt on his cheek.\n\n.\n\nThe morning passed easily. The girl's easy chatter gave him no chance to brood. The day became quite warm and, despite the thorns on the raspberry canes, Iris elected to wear a pair of very short cut-offs. J.L's eyes kept flicking to her long, tanned legs.\n\n\"I think that's about it for now,\" he said. \"Pretty much two gallons of berries. I appreciate your help.\"\n\n\"You're welcome! Can we go see the deer now?\"\n\nJ.L. looked up at the sun, made a judgement. \n\n\"Sorry, I forgot about that. It's too late to see them in the same spot, but, sure, let's find another place.\"\n\nCarrying the bowls of berries into his kitchen, he covered them with a cloth to keep out fruit flies. \n\n\"Would you like something to eat before we go, Iris?\"\n\n\"Just a drink of water, I think, J.L. It was hot out there.\" Without formality, she turned on the tap, bent over to take a sip. \n\nJ.L. watched her; his eyes caught a glimpse of her bra -- today, a blue one. This time, he didn't turn away. The tops of her breasts had a rash of freckles, too. He turned his head away hurriedly as she straightened up.\n\nAgain, he let Iris go first as they headed into the woods. It wasn't entirely being mannerly; her bottom in the worn cut-offs was entrancing. His eyes followed its movements, its side-to-side sway as she walked. \n\nIt was however obvious that Iris had not spent a lot of time in the wild, at least not a lot of time in search of easily-spooked wildlife. Her cheerful voice was pleasant, cheery, but they were after all looking for easily-startled animals.\n\nEventually, he stepped forward, put a hand on her shoulder. She stopped, turned to see him with a finger over his lips. Her eyes opened and she nodded silently.\n\nJ.L. took the lead. After another few minutes, he stopped by the side of the trail. He put his arm around the girl's waist, pulled her in so that her ear rested beside his lips.\n\nHis arm feels good,&hairsp; Iris thought.\n\n\"Here's where we have to get really careful,\" he whispered. \"There's an old apple tree around that bend and, if we are very, very quiet, we might be able to see something.\"\n\nEyes wide, she nodded again.\n\n\"We're going to move very slowly. Watch where you put your foot down. Don't step on any sticks.\"\n\nAgain the girl nodded.\n\nJ.L. stepped off again. Iris thought his movements were indeed very slow; it seemed to take a minute for each step, with a large pause between each pace. The man, she realized, was putting a foot down, toes first, then slowly shifting his weight and pausing before beginning to move his other foot. Watching, she realized how very silent he was and tried to emulate him.\n\nWhere did he learn that? she wondered.\n\nIt seemed like forever, but as they neared the bend, J.L. began to crouch as he moved. Periodically, he turned to see if Iris was still there. She tried to smile, although in truth she felt rather silly.\n\nThen J.L. sank silently to his knees. Slowly, he turned his body to the girl some paces behind him. Again he held his finger to his lips. Then the finger pointed around the bend, towards something Iris could not see. His finger pointed again in emphasis, then he cupped his hand and gestured her to move forward.\n\nHer heart beating, Iris eased forward to beside him. There was indeed a crabbed old fruit tree ahead, but she saw nothing else. She was about to look towards the man with a questioning look when a handsome head, complete with an impressive rack of antlers, raised itself from the ground and Iris suddenly realized she was looking at a large whitetail buck.\n\nThe animal seemed completely oblivious to their presence. They were close enough that Iris could see the individual white hairs in its ears and the rough pattern on the surface of its antlers. Its jaws moved as she watched.\n\nIt was, especially for a city girl, an amazing sight. The buck looked around unconcernedly before it dropped its head again to feed.\n\nShe turned to see J.L. smiling broadly at her. Her smile in response was amazing, he thought, truly entrancing.\n\nSuddenly the buck's head came up, staring past them. Iris heard soft but heavy footsteps behind her, then J.L.'s hand snapped out to catch Clyde by the collar. The buck, white tail flying behind it, bounded off into the brush.\n\nAs the two stood up, Iris turned to J.L. and locked him into a fierce hug.\n\n\"Oh, thank you, J.L.\" she said, that was just amazing!\" \n\nWithout thinking about it, her arms came up around his neck, pulled his head down to hers, brought their lips together in a solid kiss.\n\nSurprised, but not at all objecting, J.L. kissed back. To his delight, Iris' lips opened beneath his and her tongue swept over his own. He followed and their two tongues teased and explored. J.L. felt her hands moving over his back and shoulder. Uncertain both of Iris' reaction and his own feelings, he allowed his own free hand to move, holding the young woman by the waist. To his delight, he felt the girl pull him in against her in a strong embrace.\n\nThe moment ended when Clyde shifted. The dog, while well-behaved, still had his lapses and the sight of a fleeing deer was definitely one of them. And not even the combined weights of two adults can ignore being pulled by a 100-pound Alsatian. \n\nIris broke away from the kiss, her eyes wide and her face flushed. \n\n\"Wow!\" she said, taking in a great gasp of air. She gave an amused smile. \"Thank you again, sir. There's another skill you hadn't told me about.\"\n\nThe man smiled back, squeezed her waist. It felt firm and warm, but it had been so long and he was uncertain where to go with this. \n\nIris wiggled out from under his arm, knelt beside the big dog, his collar still being held firmly by J.L. \"But you were a very bad doggie,\" she said, waving her finger in front of Clyde.\n\nThe dog licked her nose and she broke into gales of laughter.\n\nThe two walked back to the house holding hands. J.L. realized that he hadn't felt this good in a very long time.\n\nWhen they got back to the house, Iris stopped, took both his hands in hers, looked up at him. In truth, they were much the same height. \n\n\"J.L., I have to go. I really enjoyed this, but I'd only planned to come over long enough to drop off your clothes and the bread. I have a major project due Monday and if I miss the tide, I'm in a lot of trouble.\"",
        "\"Iris...\" he started to say, paused.\n\nShe darted in, cut him off with a palm over his mouth. \"J.L. You're a good man, a nice man. I think I understand why you're so shy, but, please...\"\n\nShe took a deep breath, dropped her eyes, as if summoning up her courage. After a second, she raised them to stare into his. \"Please, might I be somebody you don't feel you have to be shy around?\"\n\nHer blue eyes seemed to J.L. to be growing in size, expanding to fill all his consciousness.\n\nHe went to reply, realized her hand was still on his mouth. Instead, he just nodded.\n\nSurprised, she snatched her hand away. \"I'm sorry. I didn't mean...\"\n\n\"Let's see how it goes, Iris.\" His words were sombre, but he was smiling and her heart jumped a little at that.\n\nIris smiled back, looked at her watch. \"The tide's coming in, J.L. Much as I would like to stay, I either leave now or I'll blow the assignment.\"\n\nHe nodded.\n\n\"May I come back, please? I'm asking this time.\" Iris said softly.\n\n\"Of course. Anytime.\"\n\nShe pulled him into another kiss. This time, her hands slid down from his waist to his behind. Encouraged, he allowed his own hands to roam up and down her back, lingering on her bum.\n\nAfter a long, long time, she broke away, smiling.\n\n\"See you to your car, miss?\" he asked.\n\nShe giggled, nodded and the two walked, hand in hand, back to the mainland. There was time for one last kiss before he had to turn around or be cut off from the island. The water was over his knees by the time he got ashore. When he turned around, Iris was gone.\n\n+\n\nShe appeared next when J.L. was harvesting his year's crop of carrots.\n\nThis time, she got a welcoming kiss, one which had her tingling all the way down to her toes. She tried to return it in kind, but noticed the man's hands had not touched her.\n\nWhen she pulled back to look, he gave an embarrassed grin and held up two very dirty hands.\n\n\"Sorry,\" he smiled. \"That's a very pretty dress.\" \n\nIris had already made up her mind where this relationship was going, even if J.L. clearly hadn't.\n\n\"Well,\" she said. \"That's thoughtful of you, but I could say 'go ahead anyway'.\n\n\"Or,\" she said solemnly, \"I could use those shorts you loaned me originally, J.L.\n\n\"Or,\" she grinned, \"I suppose I could just take it off.\" His eyebrows went up at her own audaciousness and he smiled back. \n\nIris was surprised at how disappointed she was to see him go back to the house, returning with shorts and t-shirt.\n\nThe two spent the day digging carrots.\n\n\"I'm sorry,\" he said as they were finishing. \"Not much fun for you, Iris.\"\n\nThe girl smiled, wiped perspiration from either brow. \n\n\"It's OK, J.L.\" she smiled. \"I'm enjoying myself, truly.\" She rolled her shoulders back, as if to relieve sore shoulders. As she did, her breasts rolled upwards against her t-shirt. \n\nHe suddenly had a vision of her breasts on the beach and felt both a little stiffening and a lot of longing.\n\n Down, boy!&hairsp; he thought to himself.  'Waaay too young for you. \n\n\"Well, I do appreciate your help, Iris,\" he replied. \"It's a lot more pleasant with two.\"\n\n\"Most things are, J.L.,\" she smiled.\n\n&hairsp;\n\nAgain unannounced on her next visit except for a welcoming 'Woof!'&hairsp; from the two dogs, Iris found him with a hoe in his garden. \n\nNaked in the sun.\n\n\"Damn it, Iris!\" he said to her back as she pointedly stared out to sea. \"It's been really good to see you these times, but maybe you could call ahead or something?\"\n\n\"You don't have a phone, J.L.\" she smiled.\n\n\"Well, I'm almost finished this row,\" he said, pointedly ignoring her logic. \"You can admire that sailboat out there or something until I'm done and can get some clothes on.\"\n\nTen minutes later, he finished the weeding. He stood up to see Iris studying him. \n\n\"Iris!\"\n\n\"The boat sailed out of sight,\" she giggled. \"And you said I had to admire something until you were finished. A girl's got to take her chances when she can, J.L.\"\n\nJ.L. shrugged. It was her choice and he was not easily embarrassed. Without making a big deal of it, he simply turned, put the hoe over his shoulder and headed back to the house, Iris following. She admired the play of his muscles under his tanned skin as he walked. He seemed to her to be almost perfectly-coordinated, moving with a feline grace. \n\nIt was not often, she realized, that anybody these days got a chance to actually see how a body moves. She found herself regretting society's insistence on clothing.\n\nWhile J.L. was hardly buff or chiseled, he led a fairly active life, using his muscles as they had been intended, with regular hard, physical work. The result would not have won any prizes among bodybuilders, but the young woman found herself both impressed and intrigued. To her surprise, for Iris was not normally much of a voyeur, she also found herself just a little turned on by the solidly masculine figure moving ahead of her. She had a flash, a momentary vision of herself being permitted to run her hands over that hard, lean body.\n\nBlushing herself now, she tried to push that thought away.\n\n\"What time do you have to leave today?\" he asked over his shoulder as they neared the building.\n\nIris knew he knew the tide tables.\n\n\"No deadlines, J.L. Not this time.\" \n\nHalf-turning, he smiled over his shoulder and the girl felt a heaviness in her loins. It lasted a long time after J.L. had emerged from his bedroom wearing jeans and a shirt.\n\nThe two spent their day in fairly routine activities -- routine for Townes Island, of course.\n\nThey walked the beaches. Autumn inevitably to be followed by winter, J.L. showed Iris how to split kindling; her results were added to the growing pile in his wood shed. Bonnie and Clyde each had their claws trimmed. Iris learned to use the camera system. \n\nAfter some thought, J.L. had given Iris access to his video files from the trail cameras. She spent quite some time going through videos -- and, yes, the osprey nest was one of her favorites.\n\n\"I notice there's that one folder still locked,\" she observed impishly after a couple of hours exploring the take. \"'Trespassers'.\" \n\n\"Nothing fit for an innocent young lady in there,\" he said, half-seriously.\n\n\"So that's where you keep your video of me on the beach?\" she said, teasing.\n\nJ.L. looked solemnly at her, but his mind replayed that sequence, as it had many times.\n\n\"I deleted it, Iris.\"\n\nHer eyes grew wide. \"You mean, I...\"\n\n\"Yes, you were. And yes, I deleted it. Hardly proper to keep it under the circumstances.\"\n\nIris wasn't sure how she felt about that. She blushed, then, summoning up her courage, asked the obvious question.\n\nJ.L. looked out to sea through a window. \n\n\"Of course I enjoyed it, Iris. I'm a pretty normal man; you're a very pretty young woman. But some things just aren't right.\"\n\nHer blush fading, she kissed him on the cheek. \"You're a gentleman, J.L.\"\n\n\"Naw. No hope for that, Iris.\"\n\n\"Well, J.L., I still think it's a gentlemanly thing for you to do. I just wish I could have seen it.\"\n\nHe grinned. \"You could always try to recreate it for me. Less twisting an ankle and losing your clothes, of course.\"\n\nThe girl blushed scarlet now, but J.L. could see the interest in her eyes.\n\n\"So who else is still on file, J.L.?\"\n\nHe thought for a moment, entered a quick password to open the folder. \"Feel free, Iris.\" He left the room; when he returned with two cups of tea, Iris was avidly exploring the file.\n\nIris skimmed through countless shots of human visitors, many unclothed. One or two individuals she casually recognized from campus or in town. Many of them, she realized, were engaged in pretty normal activities, even given the lack of clothes for some.\n\nSome were warmly touching, such as a undressed young couple merely walking the forest paths together. Iris could tell they were deeply, deeply in love, their hands never leaving each other's bodies. There was a lot of contact, but none of it was sexual. The boy, for instance, never even approached an erection. The stream of soft caresses, it seemed to Iris, were expressions of love rather than anything erotic.\n\nIt was just two loving people comfortable with their bodies.\n\n\"Did you post that one on the Net?\" Iris asked, dryly.\n\n\"No. It was too nice, Iris. They were in love, not in lust.\"\n\nA number of videos showed individuals and couples engaged in fairly normal sexual acts. Others...\n\n\"Oh my God, J.L.!\" Iris's eyes were wide open in shock at the sights on the screen in front of her, her hands covering her open mouth. \"How could they even think&hairsp; of doing that? Especially where they were?\" \n\nStunned though she might have been at what she was seeing, Iris didn't stop the video. J.L. smiled to himself at that.\n\n\"In answer to your next question, Iris, yes I did post it online. It got a hundred thousand hits and a threatened lawsuit, later dropped.\"\n\n\"Oh my god!\" Iris repeated, her stunned eyes flipping back and forth from the screen to J.L.'s face.\n\nEventually the girl pushed herself away from the screen, took a deep breath.\n\n\"Well, that was educational, but it's my turn to make dinner,\" Iris said. \n\n\"Erm, OK?\" \n\n\"Nothing planned?\"\n\n\"No.\"\n\nShe moved to the kitchen. From her rather full backpack, she started pulling out ingredients -- mushrooms, thinly-sliced prosciutto ham, a package of puff pastry and a long package wrapped in brown butcher's paper. And a bottle of red wine.\n\n\"Here,\" she said, passing that last to her host. \"There's something about cooking with wine. Would you open that, please?\"\n\nIris took out a large iron frypan, set it on the stove to heat. \n\nJ.L. handed her a glass of wine, which got him another kiss.\n\nThe brown package proved to hold a cut of meat. \"Beef tenderloin!\" she announced, setting J.L. to mince a pound of mushrooms as finely as possible. \n\nPutting some butter in the pan, she rapidly browned the surface of the meat before setting it aside. \n\nShe added more butter to the pan and began to cook the mushrooms. \"Just keep stirring those,\" she said. \"We want the excess water to boil off.\"\n\nWatery juices did in fact appear quickly, began boiling under low heat. Iris kept stirring, pressing down on the mushrooms with a flipper. In perhaps 10 minutes, the mushrooms were becoming more of a paste.\n\n\"It's working!\" she grinned.\n\nLeaving J.L. with his task, Iris swiftly grated three large carrots from the recent harvest.\n\nPutting that aside and passing by the stove, she gave J.L. a kiss. \"Doing OK?\"\n\n\"Oh, yes.\"\n\n\"Do you have any cling film?\"\n\nJ.L. thought. It wasn't something he used a lot of, but he found a roll tucked away somewhere.\n\n\"Goody! Now stand back and watch some magic happen, J.L.!\"\n\nShe spread out a piece of the plastic on the counter and laid out the sliced ham on top of it to form a rough rectangle one layer thick. Over this she spread the mushrooms, now almost a fairly dry pur\u00e9e.\n\n\"I forgot mustard, J.L.\" she said. \"Do you have any? Like Dijon, by preference?\"\n\nA search of his refrigerator showed only standard yellow mustard.\n\n\"It'll do,\" she said, taking from him. A heavy blob of mustard was squeezed into one of her palms. Iris spread the yellow goo over the beef before carefully placing it on top of the ham and mushroom layer. Swiftly, she rolled everything up to form a cling film-covered log, mustard-coated beef in the centre, a layer of mushroom pur\u00e9e outside that and finally the outside layer of ham.\n\nPutting that in the refrigerator, she pulled a double sheet of thawed puff pastry from the package. \"It's a cheat,\" she acknowledged, \"but I'm not that hard-core.\"\n\nThe girl obviously knew something about cooking, for her motions in rolling out the thawed pastry were swift, certain. \n\nOver the rectangle of pastry, she put the roll of beef, less the cling film. Slim fingers tucked in the pastry around the log, arranged it in a roasting pan with the seam down and hidden. She beat an egg yolk and spread it over the surface of the pastry before popping it into the oven beside quartered potatoes already cooking. She set the timer.\n\n\"Whew!\" she remarked. \"Intense, but fun. Thanks for your help, J.L.\" Iris rolled her shoulders, as if stiff.\n\nWordlessly, he moved behind her. The girl sighed as strong fingers massaged the stiffness from her shoulders and neck.\n\n\"Mmmm,\" she breathed softly. \"That's so good, J.L! Where did you learn that?\"\n\nThe massage paused. \"Sandy taught me,\" he said in a low voice.\n\nIris spun in place, put her arms around his waist and rested her head on his shoulder.\n\n\"I'm sorry, J.L.\" she whispered. \"I didn't mean to hurt, to call up bad memories.\"\n\nHis hand slid slowly over her hair, down her back.\n\n\"It's OK,\" he replied softly, \"they're good memories.\"\n\nIris wasn't sure if he was addressing her, himself or Sandy's ghost.\n\n\"It still hurts though, doesn't it?\" she said. \"But I'm not trying to rob her, J.L. Really I'm not!\" She turned her head to look at his face.\n\nJ.L. froze, his hands motionless on her. After a moment, they began moving again.\n\n\"It's OK, Iris,\" he said. \"It's OK.\"\n\nJ.L. was in fact very conflicted. To his shame, he found he was having trouble remembering Sandy's face. \n\nThe girl pulled him into a deep hug, released him. \n\n\"Promise me, J.L., that you won't ever allow me to do that, to steal you from her. You loved her, still do and I know that. It's something that makes you you.\"\n\nHis eyes locked on hers, closed silently. Then his lips came down on hers, softly, almost in need. He broke the kiss, turned his head. Iris thought she could see a tear in one eye as his head turned past hers.\n\n\"It's OK, baby,\" the girl said very softly. \"It's OK.\"\n\nHer hands began to gently stroke J.L.'s body, almost in comfort. It took a minute before he responded with caresses of his own.\n\nJ.L.'s lips came back to hers, harder, more demanding now. He pulled her body against his in a tight embrace, so tight the girl had trouble breathing. Instinctively, she hugged back with all her strength.\n\nTheir hands began to sweep over each other, their kisses got deeper. Iris mewed with pleasure as his hand touched her breast for the first time. There was a heaviness in her, an ache. Her own hands ran over his bum, his back and were moving from there when the timer went off.\n\n\"Oh, damn!&hairsp; the girl said. \n\n\"It's OK, Iris. It's always OK.\"\n\nThey broke apart. Iris wiped out the frypan, added a thumb-sized piece of butter and put it on a burner. Over it she dumped the grated carrots, sprinkled them with salt and put a lid on.\n\n\"Three minutes,\" she said.\n\nHer finger came up and ran lightly over the man's chest.\n\n\"J.L.?\"\n\nA finger of his came up to her lips, silencing her.\n\n\"It's OK, Iris,\" he repeated. \"Whatever will be will still be later on.\"\n\nThe bell went a minute later and Iris pulled the pan off the burner, turned the stove off, pulled the two roasting pans out of the stove.\n\n\"There you go, J.L.,\" she said. \"Beef Wellington, carrots \u00e1 la Iris and oven-roasted potatoes.\"\n\nThe meal was excellent, J.L. thought, far better than he would have made for himself. The beef as juicy, tender and exploding with flavor. The carrots were as sweet as anything he'd ever tasted.\n\nIt seemed far too short a time before he sat back, his plate empty.\n\n\"Thank you, Iris-Iris Mackenzie. That was wonderful.\"\n\nThe two did the dishes together. Once in a while, their hips or elbows touched. Their light chatter slowly faded into silence.\n\n\"Iris...\" the man said at last.\n\nThe woman knew what he would say and cut him off.\n\n\"It's OK, J.L.,\" she said, a sad smile on her face. \"I understand.\"\n\nIris spent the night, although it was again in the library kept company only by the dogs. She had a hard time falling asleep and the couple's earlier fondling had not made it any easier.\n\n+\n\nThe October mornings had become a bit chilly to sit on the widow's walk without getting dressed. Instead, J.L. sat at his desk inside, treasuring his first cup of coffee.\n\nOn impulse, he opened his e-mail. There was a note from Iris.\n\n\"There's a Halloween party at the sorority day after tomorrow. Would you like to come?\" \n\nHe thought about that for a long time, sitting there. From time to time, he looked at a framed picture on the wall beside his chair.\n\n\"I'm sorry, Sandy,\" he whispered. \"I'm trying as hard as I can, hon, but it's been so long. I'm kind of out of practice.\"\n\nSensing his mood, the dogs quietly appeared. Bonnie sat beside him, laid her muzzle on his lap. J.L. scratched behind her ears with one hand.\n\nHe took a deep breath, brushed a tear from one eye, turned to the keyboard.\n\n \"Thank you, Iris, but I think I'm going to have to pass on this one. Rain check?\" \n\nThere was no reply.\n\nMaybe she's angry at being turned down?&hairsp; he wondered. \n\nThere was no reply the next day, the day of the party, either. J.L. tried to shrug it off. It doesn't matter anyway,&hairsp; he told himself. Nothing has changed. Ships passing in the night, right? \n\nIt hurt though and the hole Sandy's death had left in him seemed for some reason suddenly much, much bigger.\n\nHalloween night was cool, with intermittent rain. J.L. made a frugal meal for himself, retired to his library to read. His thoughts kept drifting to Iris, to the party he had evaded.\n\nSuddenly the dogs dozing by the fire came alert, ears up. He listened, heard nothing but the sound of drizzle outside.\n\nClyde gave a low growl, then a lower 'Woof!'&hairsp; Bonnie got up and went to the back door.\n\nCurious, J.L. got up from his place and was heading to the door when he was startled by a loud knocking.\n\nWho in hell?\n\nJ.L. was wary, but noticed the dogs' tails were wagging.\n\nHe turned on the outside light, opened the door.\n\nOutside, dripping in the rain, stood a figure in a long raincoat, its face hidden beneath a raised hood.\n\n\"Trick or treat!\" Iris said loudly.\n\n\"Iris? What in hell? Isn't this a school night! How...\"\n\n\"Are you going to let me in out of the rain, J.L. or should I find a tree to hide under?\"\n\nEmbarrassed, he stepped back, held the door open for her.\n\n\"I couldn't stand the thought of you spending one more night out here by yourself, J.L. And you were too darned stubborn to come to the party, so I brought the party to you. And, yes, thanks, I'd love a drink, something strong or something hot -- preferably both.\" \n\nJ.L. simply stood staring at her. He hadn't been this flustered in years.\n\nThe girl turned away from him and crouched down, water pooling at her feet from her long coat. The two dogs crowded in on her, eagerly wagging their tails in greeting.\n\n\"Hello, Bonnie. Hello, Clyde.\" She ruffed the fur on their heads, looked up at the man. \"At least they&hairsp; seem happy to see me.\"\n\nJ.L. came to his senses. \n\n\"Oh, but I'm more than glad to see you, Iris! You just surprised the hell out of me is all.\" \n\nSurprise turned to shock when she stood again and shrugged out of the coat, revealing her Halloween costume.\n\nWhat there was of it.\n\nIris' belly-dancer get-up was made almost entirely of a filmy kelly-green chiffon - not quite transparent, but far short of opaque. Her thin bra cups clearly showed the areolae inside; her nipples made small, firm tents in the soft fabric.\n\nA gold lam\u00e9 hip scarf circled the girl's firm hips, just long enough in front to cover her sex. From under that, front and rear, descended two strips of green fabric perhaps eight inches wide and ending just above her ankles. The thin cloth served only to emphasize her legs, which were in any case entirely bare on her sides. Another square of translucent chiffon was worn as a nose-to-chin veil, again serving more to emphasize than conceal. \n\nThe girl's only jewellery consisted of a gold circlet around the top of her head, supporting a gold starburst pennant in the middle of her forehead. Her makeup was bold, confident.",
        "\"Trick or treat!\" she repeated. Seeing the stunned look on the man's face, she giggled and did a pirouette in front of him, her skirts twirling as she turned.\n\nJ.L. noticed that the hip scarf was if anything cut much higher in back, emphasizing the perfect buttocks he'd watched on the camera outfeed weeks before.\n\nIris had been slow to realize how attracted she was to the man. Indeed, she knew now, it had taken her much too long to realize that she loved him. She could also see how deeply J.L. was hurt, sensed that he would never move out of his hole unless pressed. When J.L. had declined her invitation, she knew with that most pragmatic female logic that the ball was in her court. \n\nThe result of her considerations was a Halloween costume owing much to boudoir lingerie. It had taken her very little time to make up her mind and not much longer to actually make the costume. Once she had contemplated herself in the mirror wearing it, however, it had taken her considerably longer to work up the courage to go ahead.\n\nIris stopped turning and, her eyes fixed on his, walked slowly, gracefully towards him. She stopped just in front of him. Her arms came up, took his head and pulled it towards hers, stopping when it was a hand's-breadth away.\n\nStaring at her blue eyes, J.L. thought he could smell her youth.\n\n\"I couldn't stand the thought of you being out here alone, J.L.,\" she said again. \n\nThe girl led him into the library, gently pushed him into a chair and knelt in front of him.\n\n\"Here's the problem, J.L.\" she said softly. \"I need your advice, a man's point of view. I think... I think I've fallen in love with a good man.\"\n\n\"Iris...\" he tried to break in.\n\n\"Hush!\" Her finger came up to his lips, rested for a moment.\n\n\"I've fallen for somebody, J.L. He's a good man, a very good man, even if he won't let himself think about himself that way. And he's wrapped himself up in his grief, hiding himself away from the world because it might hurt him again. \n\n\"It breaks my heart, J.L. He's kind and wise and gentle and handsome and patient and I dream of him at night.\"\n\n\"Iris...\"\n\n\"Let me finish. He saved my life once and has been gracious enough to allow me to intrude my presence inside the only things he thinks he has left -- his isolation and his memories. And it's such a waste, J.L. Because I love him and I'd give anything for him to love me, but I don't think he does.\n\n\"So, J.L., I decided that, if I couldn't have him love&hairsp; me, then maybe at least I could have him want&hairsp; me. So, give me some credit for trying, J.L. I've spent two days making myself looking like somebody his body might fancy on Halloween in hopes that I might get his attention that way. And you still haven't even touched me.\n\n\"What's a girl have to do, J.L.?\"\n\nThe girl stopped, clearly awaiting a response.\n\nJ.L. could smell some sort of a perfume on her now, subtle but dark and spicy. The scent was touching him deep inside and he seemed to be falling into a lake of blue eyes. Without thinking, he brought his face closer to hers, brushed his lips against hers.\n\n\"I love you, J.L.\" she whispered. \"Tonight isn't about us; it's about you. Let me be good to you, J.L., just for one night. Please?\"\n\nWordlessly, J.L. surrendered. Unbidden, he rose, pulled her to her feet in front of him. His hands took her by the hips, ran slowly up bare skin, over the hip scarf until they came to rest around her bare waist, not quite touching her breasts. At the same time, he leaned into Iris, his kiss turning more passionate. Her tongue flowed against his teeth as his lips opened.\n\nIris's hands on his head pulled him against hers, hard, then slid down over his body, pulled him into her. She was not surprised to feel his hardness against her belly; that's what the costume was for. \n\nJ.L.'s hands swept up and down her flanks, again returning to rest just under her arms. Iris gave a little gasp when his thumbs first brushed slowly over her nipples. She pulled back, looked up at him with wide eyes.\n\n\"Oh, god, J.L., you have no idea how often I've dreamed of you doing that!\"\n\nHis hands slipped inwards to cover her breasts with his palms. He squeezed gently and the girl moaned. Her hands slid between them, began to unbutton his shirt.\n\n\"I want to feel you against me,\" she said softly.\n\nThe tails of his shirt were caught inside his trousers. In frustration, she grabbed the garment by the shoulders and pulled it down. With a shrug of his arms, it fell loose, hanging down from his beltline. His hands came back up towards her, but the girl moved faster, pulling them together in a hug.\n\n\"I want to feel you against me, J.L.\" she said again. His left hand pulled them together; his right swept slowly through her hair. The two stood that way for a long minute before the girl slipped out of the hug.\n\n\"Thank you, J.L.\" she said. \"I needed that.\"\n\nThe sound of the storm outside increased. He suddenly looked at her body and its almost non-existent costume. Her raincoat was hanging by the door, a puddle of water under it and a line of wet, bare footprints leading to there from the door. \"How...? I mean, did you come all that way dressed in...\"\n\nIris laughed. her hands now moving over his chest, tugging lightly at his chest hair, caressing his own nipples. \"No, silly! I changed in your shed!\"\n\nHe laughed with her, pulled her back in for another kiss, then squeezed her as tight as he could.\n\n\"It's a wonderful surprise, Iris, and an amazing costume,\" he said, his hand holding her head on his shoulder. \"I'm sorry I'm not prepared for Halloween. No candy or pumpkins, sorry.\"\n\nShe pulled his head to hers again for a firm kiss.\n\n\"That's all the sweet candy I want for tonight, J.L.\" \n\nShe kissed him again, slid out of his arms and knelt gracefully in front of him. Slim fingers traced the length of his manhood inside his clothes. J.L. hissed as her fingertips lingered over his bulbous, swollen head.\n\nShe looked up at him, smiled brightly. \"And here's the pumpkin!\"\n\nShe deftly undid his belt, fumbled an instant to find his zipper tab. Once she had it in her fingers, she pulled it very slowly down towards his feet, thrilled at the warmth, the expectancy in his eyes.\n\nThe trousers slid down his legs, fell to the floor, exposing a pair of quite utilitarian boxer shorts. They followed the trousers in a second, leaving J.L.'s rigid cock waving in front of Iris' face.\n\nThe girl cupped her hands around his low-hanging sack, slid them lightly up his length, bent forward and gave his head a light kiss. His cock twitched at her touch.\n\nThe young woman laughed delightedly, but knelt back on her heels, seized the pile of clothing around one of J.L.'s legs in her hands. \"Up,\" she commanded and J.L. obediently lifted one leg free of the clothing. The other leg followed.\n\n\"That's better,\" she laughed, tossing the pile to one side admiring his nudity. \"Now you have a proper costume, too!\" \n\n\"Proper?\"\n\nHer bright, smiling eyes were locked on his. \"For the party, silly.\"\n\nShe moved towards him and gently began stroking his shaft with her hands.\n\n\"I've dreamed of this, too, J.L.\" she said.\n\n\"Should we move, Iris?\" he asked.\n\n\"Not yet.\" She began licking him, light tongue strokes up and down his length, around his swollen head, behind his sack. Her hand took his shaft more firmly, doeskin softness over ironwood core, and began to pump it lightly as, one by one, she sucked his fragile eggs into her mouth. Keeping her teeth hidden behind her lips, she slowly pulled her head back, stretching his sack, before they slid out of her mouth with a small pop! \n\nAnd again.\n\nAnd again.\n\nJ.L. closed his eyes, tucked his hands into her hair. His breath became ragged as the girl in front of him began to lick his length with broad, hard strokes, over and over. \n\nIris switched, began pumping his shaft more rapidly while taking his engorged head into her mouth and running a firm tongue around and around it. J.L. could feel a heavy heat building inside him. He opened his eyes to see hers locked on his face.\n\nShe pulled off for a second, smiled broadly at him, her thumb gently massaging his slit, before again bending to her efforts. Her eyes remained on his as her head bobbed up and down on his member.\n\nIris stopped, backed away. Again there was a slight pop!&hairsp; as J.L.'s cock emerged from between her lips. \"I love you, J.L.\" she whispered and, for the first time in years, the man felt something within him other than emptiness and pain.\n\nAgain she bent down to his organ, sucking it into her mouth and moving down on it until J.L. felt it start to probe the back of her throat. The girl coughed a little, backed out just a bit and began working him, her cheeks hollow with suction, bobbing up and down as quickly as she could. He brushed away the mass of red hair so that he could watch.\n\nFeeling his orgasm approaching, J.L. tried to pull away. \"Iris, I'm going...\"\n\nThe woman resisted, continued her ministrations. As her head dipped up and down on his length, she fondled his balls with her hands.\n\nJ.L. felt a tightening, a burning pressure and then his orgasm hit him. The girl kept him in her mouth but slowed down, stopped teasing with her tongue and simply let him empty himself into her throat. She smiled to herself as his organ pulsed over and over, swallowed again and again until his passion had ended.\n\n\"Trick or treat, J.L.!\" she said, a loving smile on her face.\n\nShe rose gracefully, rested her head on his shoulder and pulled in for a firm hug.\n\n\"Now take me to bed,\" she whispered.\n\nWordlessly, her man bent down, picked her up effortlessly and strode down the hall.\n\nThis is the second time he's carried me.&hairsp; Iris thought to herself. \n\nHe gave a half-turn, easing her feet-first through the door into his bedroom. The girl looked around as she was carried in, for despite repeated visits, she had always respected J.L.'s last refuge of privacy.\n\nThe room was clean and neat and definitely a man's bedroom. It was dominated by a massive old four-poster bed, complete with an ornate brocaded canopy. It and the other matching pieces in the room were clearly antiques, possibly left over from when the house was first built.\n\nA framed picture of Sandy stood on the bureau.\n\nJ.L. dropped her gently on the bed. She shifted over towards the centre, held out her arms to him. He slid in beside her, half-lying across her chest. Their lips met as her arms closed around behind him.\n\nIris's heart soared as she felt J.L.'s hands sweep over her shoulders and along one flank, dragging the soft fabric of her costume over her body. His hand came to rest first on one breast, then on the other. His gentle squeeze brought a moan of pleasure from the girl, but his fingers kept moving over the fabric and she suddenly wanted more than anything to feel then on her bare skin.\n\n\"Stop!\" she gasped, wiggling out from under him. \"Just for a moment!\"\n\nShe sat part-way up. Her hands went behind her back, seeking her bra clasp.\n\nHis hands shot out, grasping her arms gently. \"You stop,\" he said.\n\nHer eyes widened.\n\n\"Let me look at you, Iris,\" he whispered. \"You went to so much trouble. Let me unwrap my own present.\"\n\nSmiling, Iris complied. She felt his hands sweep again over her back, one moving down to caress her bum, lingering, and squeezing and fondling her buttock. She felt herself begin to tingle.\n\nThe man's hands rose again to her back, paused over the catch for her bra. It parted.\n\nIris, her eyes sparkling, caught the two cups in her hands, covering her nipples. Smiling, she leaned her face towards his. Their lips met and their tongues began to caress each other.\n\nIris felt J.L. seize her wrists. Gently, but firmly, he pulled her hands away from her chest. The bra slithered off her body, slid to the bed between them. His hands released hers, came up to pull her face harder into what became a lingering, blazing kiss.\n\nIris felt her heart pounding, felt her nipples grow hard, then harder still as J.L. moved his lips from her face to her breasts. \n\nSlowly, gently, his tongue traced out the fullness of her boobs -- around and around, back and forth. His hands supported and squeezed them gently as he did so.\n\nIris began to pant. She reached down, searching for his manhood. She found it, still only half-erect again. Her slim fingers flowed over its shaft; her thumbs teased its head. J.L. found himself rapidly becoming hard again.\n\nHe began to gently play with her nipples, first with his lips, then with soft, teasing nips with his teeth.\n\nThe girl began to moan now. She felt a wetness between her legs, gave a low cry when a strong finger swept along the length of her now-swollen labia.\n\n\"Oh, J.L.!\" she cried softly.\n\nHe stopped his exploration for a moment, pulled her waist scarf down over her hips, let it and the green loincloths fall, leaving her utterly bare under his eyes. He paused to admire her beauty; Iris glowed at the awe and the open desire on his face. He returned to pleasing the girl, his fingertip spreading her sweet juices along the length of her sex. Lust building within her, she reciprocated by stroking and pumping his length and smiled to herself at the look of pleasure in his eyes.\n\nHis weight came down on her, pinning her to the bed. It seemed to be at once and the same time the weightiest, most protective thing she could imagine and also totally delightful, something as light as a suntan. \n\nTheir lips danced on each others'. Hands swept over each other's body. \n\nJ.L. gave a groan, rose off her body. Strong arms seized her hips, lifted and turned. \n\nIris came to rest on her hands and knees, her feet over the edge of the bed. J.L. moved quickly to kneel behind her on the floor. She cried out as the roughness of his beard brushed her inner thighs, cried again at the first stroke of his tongue on her sex. \n\nWordlessly, he pushed her knees apart to give him better access. His tongue now stroked her, front to back, in broad, firm strokes. It lingered, probing with its tip as it passed over her opening, danced lightly over her button on its return.\n\nIris could feel her arousal soar higher and higher with each stroke. She began calling his name again as her orgasm broke.\n\nIt burned through her, sharp as the lightning outside the house, fiery as her hair, leaving her gasping for breath.\n\nAgain without warning, J.L. pulled away, stood up behind her. The girl felt a slight fumbling as his hands guided his cock into her now-drenched sex. With a long, steady thrust, he pulled her over him.\n\nWanting to watch her lovers' faces as they penetrated her, Iris had never tried the position before. To her surprise, she was experiencing the act of love in a very different way. As J.L.'s cock slowly eased back and forth within her, she found the stimulation very different from what she was used to. Never had she felt so absolutely filled, especially to this depth.\n\nIt felt, in other words, very good. No, it felt exceptionally good. She could feel another orgasm building with amazing speed.\n\nJ.L. seized her hips with his hands and began drive home his strokes with all his force. The girl's full breasts swung beneath her as his stomach slammed again and again into her bottom. She again began to utter wordless cries.\n\nJ.L. stopped, shuddering, his hands clenching Iris' hips in a rigid grip. Within her, the girl could feel his organ begin to pulse and throb. With that, Iris came again, a deep, round orgasm which left her breathless and quivering.\n\nJ.L. restarted his strokes, but much, much slower, far more gently. To the girl's surprise, his pleasure strokes hit her with a totally unexpected third orgasm. With a soft cry of joy, her head dropped to the mattress; she would have fallen completely had not J.L.'s strong hands on her hips held her upright.\n\nThe slim man leaned down on top of her back, panting. After a few moments, he withdrew, picked up the girl and positioned the two of them in the centre of the bed, drawing the covers over them.\n\n+\n\nIris woke the next morning. She felt a solid, loving arm over her waist, a gentle hand cupped over one breast and J.L.'s deep breath behind her.\n\nYawning, she opened her eyes, only to jerk back in surprise. Staring into her eyes from no more than a foot away, Bonnie yawned back, her long tongue sweeping over her muzzle.\n\n\"Good morning, girl,\" Iris chuckled softly, her hand sweeping lightly over the dog's head, scratching behind her ears. In response, the big dog leaned forward, her tongue stretching out to lick Iris' nose.\n\nGiggling, Iris rolled over slowly. J.L. was still in a deep sleep.\n\nQuietly, the girl disengaged herself from his arms and slipped out of the bedroom, the dog following. Iris closed the door behind her and let the two dogs out the back door before putting the coffee pot on.\n\nCoffee in hand, she stuck her nose outside and discovered that this first of November was going to be an unseasonably fine day. Already it was warm enough to go out without trying to find something to wear. Her feet sinking into the wet grass, she followed the dogs outside, found a chair and settled down to watch the boats below.\n\nA few minutes later, Bonnie and Clyde joined her, lay down beside her.\n\nIt was there J.L. found them half an hour later and it is there that we will leave them all, for loss and loneliness can sometimes be just tricks and saints come in all forms. \n\nSome of them - some of them - even bring treats on dark and stormy nights.\n\n<center>+\n\nI hope you have enjoyed this. \n\nPlease remember to vote, if not for this story, then for one you think is better.</center>"
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "deer",
        "dogs",
        "halloween",
        "isolation",
        "lost love",
        "new love",
        "redhead",
        "seduction",
        "trick or treat"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/love-long-gone"
}