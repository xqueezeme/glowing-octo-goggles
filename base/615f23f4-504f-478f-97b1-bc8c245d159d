{
    "title": "My Way Ch. 05",
    "pages": [
        "You may want to read the previous chapters first to better understand this story. This is the final chapter to this story. Thank you to those who stayed with me through all five chapters. Hope it was worth your time. Again I want to thank Mistress Lynn for editing this very difficult story.\n\n*\n\n\"Moose, did you see or talk to Jerome, Mel or Terri after that day?\" I asked.\n\n\"I saw Jerome at work, but we never talked about me fucking Terri. He thanked me for the money many times and told me about his kids and their braces. He also mentions that Terri now had a decent vehicle.\n\n\"Something else I noticed was that he no longer went out with other women. A couple times he rode by the shop with Terri on his bike, but I guess he didn't want to lose a good woman. And I can tell you from experience, that Terri was damn fine chocolate.\"\n\n\"What about Mel? Ever see her again?\"\n\n\"No, but I did get a call from her one day shortly after our last time together. She said the owner of the caf\u00e9 where we met had called her at home. He figured out she was cheating on her husband and said if she wouldn't put out for him he felt obligated to talk to her husband. She was worried sick and asked me what she should do. I told her to forget about it and I would talk with the gentleman so she wouldn't be hearing from him again.\"\n\n\"Did you talk with him?\" I asked.\n\n\"Yeah, the same way I talked to the other assholes. I went to the caf\u00e9 in my truck at closing. When he saw me in the parking lot he asked me what the fuck I wanted. When I asked him if it was him who was trying to blackmail Mel, he said he figured if she could put out for me, she could fuck him. Then he pulled a gun on me. Pulling a handgun at short range is useless. I backhanded him and made sure he knew I was there as a reminder he couldn't mess with people before I broke his neck. \n\n\"That night I called Mel and told her she wouldn't be bothered by the asshole again. Just so you know, he's number twenty-two on your list. Now I want to tell you the truth about Marsha and her lover and my story will be over. Plus I'll give you the rest of the information you asked for.\"\n\n\"Thanks, Moose. I wouldn't be in a rush for the information but the AG is after me,\" I said, shrugging my shoulders and looking toward the cameras. \n\n\"It's all right, Joe. I understand. After Mel and Terri, I felt like I completed my assignment to fuck Marsha's friends. I began to drink more and got down in the dumps. I even told Marsha her number could come up any time. I hated what she did to me and never forgave her, but I could never kill her. Hell, I even bought an insurance policy off some broad and made Marsha the beneficiary. Of course, I laid the agent too.\n\n\"I thought about ending my own life since I didn't care anymore. My daughters were growing up and all my affairs were in order. All I wanted to do was leave this hell-hole of a world. I figured one day my luck would run out and I would end up in prison for the crimes I committed. I realized the insurance policy wouldn't pay if I took my own life so I figured I would let someone else do it for me. That was when I got the idea of having Marsha do it. I had threatened her years before and I knew she kept the gun in the nightstand.\"\n\n\"People move things or get rid of them, Moose.\" I had to make my point even before I knew what he planned to do.\n\n\"I was still pretty sure Marsha had the gun still. Remember she pulled it on that one guy. I was fairly sure she would still have it.\n\n\"I was drunk the day I broke into her house. I didn't expect anyone to be there. The guy jumped up when he saw me and I reacted on impulse. As he came at me, I broke his neck. Marsha was screaming. I could have killed her ten times by the time she got the gun out of the nightstand. She pointed it at me but wouldn't shoot the damn thing. I finally got on the bed and put my hand around her throat to scare her into thinking I would choke her. To be honest, snapping her neck would have only taken a second. Instead, I kept applying pressure till she finally decided to pull the trigger. \n\n\"She shot me three times before I let go of her. The next thing I remember was waking up in the hospital with guards inside and outside of my room. I didn't die as I hoped would happen. I ended up going to prison. All I wanted was for it to be over, so I pleaded guilty because I really did kill the asshole. He was unlucky. Wrong place at the wrong time. From there I figure you know the rest of the story. I've been here over two years waiting to die. When I decided to tell my story, I asked for you.\" \n\n\"I appreciate it, Moose. I'm still shocked at some of what you told me though.\" So much of his story seemed as if someone else committed the crimes. The Moose I knew back in high school wouldn't have killed anyone, I knew that for sure. \n\nMoose asked if I found the wallets and other IDs. I explained they were right where he told me to look. Of course, I had them for a couple weeks already, even though I never told the AG or Mike. The following day, I turned the IDs over to the Attorney General. I had already made copies for future reference. Then I went to see Moose. \n\n****\n\n\"Moose, I turned the ID's over to the Attorney General and he made photo copies to show you.\"\n\nThe guard came in and passed a set to Moose along with the ledger copies he asked for. He looked at them for a few minutes and put them in some kind of order.\n\n\"Okay, Joe, half the bodies are buried in the pet cemetery.\"\n\n\"They dug up some of the graves and all they found were animal's remains,\" I replied.\n\n\"The stupid fucks! It's because they didn't know where to look or how far to dig. I had a small backhoe. I dug a hole at least six feet deep and put the body in the hole covered by an old tarp. I threw more dirt on it and then later buried a small animal about two to three feet deep. Once they found animal remains they stopped digging. Only problem now is did they put things back the way they found them? On each ID is written a name or number corresponding with the name of the marker on the pet.\n\n\"For example, on the Bryant ID I wrote 'Fluffy'. It means he is buried under Fluffy, a pet dog. On Joe Morris's ID is written 'Tiger'. You'll find his remains under Tiger, a cat. The ones marked unk-1 is an unknown pet. That person will be buried under him.\"\n\n\"If the diggers messed up the plots you'll have a much harder time determining who is who.\"\n\n\"What about the rest of the bodies. Where are they buried?\"\n\n\"The ones marked CKB-1 through CKB-11 are buried at the creek bed. There is a line of pine trees, maybe twenty of them there. Starting on the left is CKB-1. Match up the IDs to the trees. You'll need to go down about five feet. Well Joe, that's about it. I don't know if I'll be seeing you again. Take care and don't forget everything we talked about. I really want that story written.\"\n\nI left the prison and headed to the state house to give the information to the Attorney General. I asked if I might be able to see Moose one more time if the information checked out.\n\n\"You did good, Mr. Ritter. If all this checks out, I don't see why not.\"\n\nIt was two weeks later when I got a call from Mike. \"Every bit of information you got from Jeff Daniels was accurate. The Attorney General and I owe you a debt of gratitude.\"\n\n\"Will I be able to see Jeff one more time?\" I asked.\n\n\"Yes, you can. You can be the one to tell him we will be prosecuting him on all his crimes. For him, it will be a stay of execution. God knows how long he'll sit on death row even though his ultimate fate has already been determined.\"\n\nI told Julie about it when I got home. How they planned on trying Moose on all these counts of murder just to make themselves look good.\n\n\"What a waste of taxpayer money. Why can't they just execute him and get it over with?\" said Julie.\n\n\"Power hungry bastards are what they are. I'm going to go see Moose one last time.\"\n\n****\n\nMoose smiled at me as I walked in. It was hard for me to smile back.\n\n\"Moose, the AG said he plans to file charges on all these counts of murder. The procedure could drag out for quite some time. I'm sorry, but he also said I would be forced to testify.\"\n\nMoose just grinned at me. \"Stupid asses! I'm already going to be put to death. What the fuck do they want? More name recognition and pats on the back for doing jack shit. Don't worry Joe, you won't have to testify.\"\n\n\"You don't understand. I don't have a choice. They are going to prosecute you for these criminal acts, and they have all the proof you gave them on a silver platter.\"\n\nHe just smiled again. Now I had to wonder what he was up to. When the prison officials found out what Moose had said, they put him on a suicide watch. Hell, he didn't have anything left, so what could they possibly take away? He told me to go see his attorney who had some papers for me to sign, giving me the sole rights to his story. \n\n\"I guess I'll see you in court,\" I stated sadly. \n\nHe just looked down at the floor. It was the last time they allowed me to see him.\n\n****\n\nI went to see his attorney, Mr. Harold Zimmerman. I was surprised when I read on his office door that he was a tax planner and investment attorney. That made me wonder why Moose had an investment lawyer represent him in a criminal suit. It didn't make sense. Maybe he had a different lawyer for the murder trial, but I was almost sure his trial lawyer had been Harold Zimmerman.\n\nI entered his office and his secretary said he would be right with me. The firm was quite large and Harold was one of the many partners. He came over to me and gave me a solid handshake.\n\n\"Glad you could make it, Mr. Ritter. I have some papers for you to sign.\" \n\n\"Please, just call me Joe.\"\n\n\"And you can call me Harold. I've always liked dealing with people on a first name basis. It's a lot more comfortable.\"\n\nHe pulled out a file with a lot of legal documents in it. \"If you like, you can have your attorney look these over. They give you the sole rights and privileges to write the story of Jeff's life. He even allowed you the freedom to write whatever you want. The only exclusion is that you aren't to mention the names of any of his personal contacts. I think you know what I mean.\"\n\n\"Yes, Jeff and I discussed it at length. He stated I could substitute names as long as people wouldn't know who they really are.\" I glanced through the file.\n\n\"I don't see any reason to have another attorney see this. It seems pretty straightforward and to the point.\"\n\n\"You can go to any publisher you choose, but Jeff did add one request.\"\n\nHe handed me a envelope with a check for fifty thousand dollars and another sealed envelope inside.\n\n\"Joe, the check is from Jeff for writing his story. It's completely separate from anything you get from a publisher. The money was his way of saying thanks. The sealed envelope is a favor he's asking of you.\"\n\n\"What kind of favor?\"\n\n\"It's in the envelope. Don't worry, it's nothing illegal. Well, I guess that covers most everything. If you have any questions, feel free to call me any time.\"\n\n\"Harold, I know it's none of my business, but why did Jeff ask a tax attorney to handle his criminal case?\"\n\nHarold smiled and waited a few seconds before answering. \"Jeff was guilty and he knew it. He just wanted it over as quickly as possible. He pleaded guilty and wanted to make sure that, whoever his attorney was, he could get rid of all the appeals quickly.\n\n\"I had many discussions with Jeff and consulted with our criminal attorneys during the entire trial. There are so many groups out there who are against capital punishment and would file numerous appeals, which holds up the final process of putting Jeff to death. He didn't want to spend the rest of his life in a prison. Some appeals last ten years or even longer. We did our best to reduce that time to two years. You've talked to him. You know his story. He tried to end his life but ended up living and standing trial.\"\n\n\"But, why you? I don't mean it to be disrespectful, but did you know him before the trial.\"\n\n\"Jeff and I served in the armed forces together. He was a great friend and saved my life more than once. After I was discharged, I finished taking my courses to become a tax planner attorney. Jeff hired me to handle all his affairs. Believe me, he was worth millions.\"\n\n\"Was?\" I asked.\n\n\"He had most all his funds transferred to his daughters, except what he put aside for his defense, debts and other obligations. You were given money out of that fund. Jeff is now broke. His daughters received some money, but their inheritance will come after his death. Needless to say, it has all been postponed. By the way, his daughters are not aware of it. Please leave it that way. I will be notifying them after Jeff is put to rest.\"\n\n\"So, you were in the service with him. Can you tell me anything about it?\"\n\n\"Look, the service is in my past and I want to leave it that way. It's not something I discuss with anyone. Jeff was and still is my friend, and I would do anything he asks of me. No, I don't want to see him die but it was his choice. I'm sorry, but that's all I'm going to say about our past. If Jeff wanted you to know more, he would have told you so himself.\"\n\n\"I'm sorry for prying, but it's like there's the Jeff I knew before and then this new Jeff with secrets. They told me I wouldn't be able to talk to him again. I guess you know they're making me a witness against him. I'm not doing it by choice.\"\n\n\"I know that and so does Jeff. He holds no grudges against you. Just make sure his story gets told.\" \n\nWith that said I left the office. When I got home Julie asked me how it went.\n\n\"I got full and exclusive rights to Jeff's story. They also gave me a check for fifty thousand dollars.\"\n\n\"My god, I can't believe it.\" \n\n\"Yes, although I would write his story even without that check. I just wish I knew more about his service career. I know most everything about the missing people and the murders, but there's also a very personal side to Jeff I would like to tell a little about.\"\n\n\"Joe, what's this other envelope?\"\n\n\"I haven't opened it yet. Harold, his attorney, said it was a request from Jeff. A favor he wants me to do for him.\"\n\n\"Aren't you going to open it?\" \n\nI opened the envelope and read the contents out loud. \n\nThanks for taking the time to hear my story, Joe. As one last favor I would like you to call this number\u2014(555)333-1212. You'll get an answering machine. All you have to say is you're calling on behalf Jeff Daniels and that it's over. Thanks for everything.\n\nYour old friend, Moose\n\n\"What does it mean? Are you going to do it?\"\n\n\"I have no idea what it means. Harold told me it wasn't illegal. I see no reason not to do it.\"\n\nI dialed the phone and got an anonymous message. After the beep, I followed what the paper said to do. \n\n\"I'm calling on behalf of Jeff Daniels. He wanted me to leave this message stating it's over.\" \n\nI hung up the phone and looked over at Julie, not having any idea what the call was about. I saved the letter with the number on it with the idea that someday I might try to find out whose number it was.\n\n****\n\nDuring the day I wrote my standard daily articles for the papers. I spent my evenings working on Jeff's story. I tried making an outline of all the different conversations we had. He was one complex individual.\n\nI got a call from Mike at the Attorney General's office. He said that on the following Monday they were having a pretrial at the courthouse for the twenty-three counts of murder against Jeff. They were taking Jeff to the courthouse two hours early because of all the publicity. They wanted to make sure he was secured in a cell before the pretrial began. He mentioned there would be tight security near and in the courthouse. \n\nI also received a call from Harold, Jeff's attorney. He repeated what Mike had said and also told me Jeff didn't want his daughters in court under any circumstances. I figured he felt they suffered enough. He always tried to protect them, even though they didn't know it.\n\nWord of the trial must have gotten out, because when I arrived at the courthouse there were crowds of people being held back by barricades. Most of the people were holding signs, calling Jeff a murderer among other things. They must have had half the police force out on security. Because I was testifying as a witness, I was able to park in the parking garage across from the courthouse. No one but the security team came within a couple hundred feet of the courthouse steps.\n\nA number of police cars pulled up to the steps of the courthouse. There were two vehicles, then a van, and then two more vehicles. Security guards got out of four of the vehicles and looked around. The van door opened, and two more officers got out, and then I saw Moose get out. He had on leg irons and hand cuffs. Two more security officers got out of the van.\n\nI thought the security was a little much for Moose. I guess the big shots wanted him to look even more dangerous than he was.\n\nBut through it all, when there was doubt I ate it up and spit it out I faced it all and I stood tall And did it my way \n\nThere were six uniformed officers surrounding Moose as he slowly walked up the steps of the courthouse. Many other security officers stood stationary in front of the courthouse steps. Moose stood tall among the officers. When he arrived on the top step, a shot rang out.\n\nThere was screaming and shouting and all the officers had their guns drawn. It was then I noticed Moose had fallen to the ground. A sniper would have somehow had to have been able to shoot past all the officers and I wondered if he had been hit and just crouched at the sound of shooting. Who could even be able to hit a target that far away?\n\nPeople were running everywhere. The police were trying to control the crowds and at the same time trying to figure where the shot came from. \n\nA few minutes later, Harold came up to me. \"Someone shot at Jeff, didn't they? I was coming out of the parking garage when I heard the shot and saw all the commotion. Did you see anything?\"\n\n\"Just Jeff going up the stairs, hearing the gunshot, and then seeing him fall to the ground. I don't know if he's dead or alive.\"\n\n\"Come with me. Because I'm his lawyer, they have to let me see him.\"\n\nHarold showed his pass and the police let us through. Another car arrived, as well as an ambulance, while we were making our way up the stairs. It was the Attorney General and Mike Keffer.\n\n\"What the hell happened?\" the Attorney General asked a security officer.\n\n\"Jeff Daniels was fatally shot through the back of the head,\" said the lead officer.\n\n\"How could you let this happen?\" said the AG.\n\n\"Sir, we had him totally surrounded. To make a shot like that would almost be impossible. We did everything we could to protect him.\"\n\n\"I want you to find that sniper,\" said the AG.\n\n\"We're working on it, Sir. We figure the shot may have come from that parking garage across the street but I can't believe anyone could be accurate from that distance.\"\n\nWe managed to see Jeff for a few seconds. His face was nearly blown off. Harold had tears in his eyes as we walked away. The AG said he wanted to talk to us before we left.\n\n\"I'm letting you know that all the charges are still filed. We want all these cases closed. We have all the evidence we need, including Jeff's personal statement that he committed those horrendous acts.\"\n\n\"That's fine,\" said Harold. \"Jeff gave me a form stating it was all true. He had no estate money left. He was going out in life the way he came into it. He had nothing.\"\n\n\"Well, Mr. Ritter, I guess your services are no longer needed. You are formally taken off the payroll as of right now. Thank you for your assistance in the closing of the cases.\"",
        "It was his way of telling me to go fuck myself, the self-righteous bastard. Damn, I hated politicians. As Harold and I left the office. He told me that the body would be released in a couple of days after they do an autopsy. How fucking stupid. The man doesn't have a face. I could save them money and tell them the cause of death. Some of the stupidest things really piss me off. Harold called me the next day and told me there would be a private graveside service for Jeff a few days later and wanted to know whether I would like to attend. I told him yes.\n\nWith my loving Julie on my arm, we attended the service. Harold, Christy, and Cheryl were there as well as his brother Ray and a few other family members. It was a closed casket service, and there were a few police officers there to turn away anyone not invited. \n\nI was surprised to see Jeff's ex-wife Marsha show up. I thought what a fucked up situation it all was. Moose might have been a serial killer, but there were people who were crying because he was gone. I was one of them. How did his life ever arrive at such a point? That was something we would never know.\n\nAfter the service, Harold asked the daughters as well as Marsha if they would meet him at his office. He mentioned I wasn't in the will, although I might need some of the information for my book, so I could attend if I chose to. \n\nAt the office, Harold explained to the daughters about their inheritance. They were totally taken aback to find out their father had left them nearly two million dollars each.\n\n\"Why am I here?\" asked Marsha.\n\n\"Marsha, Jeff hated what you did to him. But deep in his heart, I believe he still loved you. About six months before he killed your lover and attacked you, he bought an insurance policy for a million dollars. He made you the beneficiary.\"\n\n\"What? I don't understand. Why would he do such a thing?\"\n\n\"He dated a woman who was selling insurance. He wanted to help her out, so he purchased this policy. I think I've explained why he made you the beneficiary.\" \n\nMarsha broke down and started crying. Even my Julie was crying. I guess women are like that. Later, Harold told me that the insurance company was one of the groups that kept the appeal process open on Jeff while they fought to nullify his policy. They lost.\n\nFor some strange reason, Moose's death brought Julie and me closer together. We realized how fragile life really was and decided to make the best of it. A week after the funeral I got a call from Cheryl. She said she had all the stuff in her father's chest if I would like to look through it, but she wanted it returned after I finished.\n\nThe chest contained a lot of personal information that Moose kept. He had pictures of the girls growing up. I guess his father had sent them to him. The girls were in his life, but they never knew it. How sad.\n\nI came across some papers that had the actual names of some of his brothers in combat on them. There were even pictures. I stared at the one that was of Moose and Harold Zimmerman in it. On the back were two words: Snipe and Snap.\n\nThen it struck me. Harold Zimmerman was the one person capable of shooting Moose from such a distance. He also made a point of telling me there was nothing he wouldn't do for Moose. Could he have put him out of his misery?\n\nI questioned why Harold gave me that phone number to call. I thought after the shooting it was all right for someone to finish the job and kill Moose. Now I wondered if it was to make me part of the plan somehow. Harold could have called that number himself. Did it implicate me in any way at all?\n\nOf course, that was all conjecture on my part, but it also made sense. Harold was Moose's best friend, and he came out of the parking garage minutes after the shooting. He handled all of Moose's personal affairs. Plus Moose had promised me during the interviews that I wouldn't have to testify.\n\nI thought about telling the attorney general about my hunch. The papers said the police still had no suspects In the shooting death of Moose. But I kept thinking about how Moose always took care of things his way. He hadn't relied on others to take care of what he saw as injustice and wrong-doings. Everything I discovered about him showed the man left nothing to chance\u2014not even his death. No, Moose died his way. I would tell his story, but it too would be his way. \n\nFor what is a man, what has he got? <br> If not himself, then he has naught <br> To say the things he truly feels <br> And not the words of one who kneels <br> The record shows I took the blows <br> And did it my way! <br> Yes, it was my way.\n\n*\n\nI hope you enjoyed reading this story.\n\nComments are welcome and appreciated.\n\nDG Hear"
    ],
    "authorname": "DG Hear",
    "tags": [
        "trial",
        "family",
        "friends",
        "funeral"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/my-way-ch-05"
}