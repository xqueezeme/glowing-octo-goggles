{
    "title": "Jack's Daily Grind",
    "pages": [
        "Author's Notes:\n\n'Jack's Daily Grind' is the third story in the saga of Jack Danner. Minimal effort is made in this tale to explain the backstory so it is highly recommended you read the previous stories in the following order:\n\n<ul> <li> Jack's New Job</li>\n\n<li> Jack's New Position</li>\n\n<li> Jack's Daily Grind</li> </ul>\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\nJack Danner flopped back on the pillows of his sleep platform as he tried to catch his breath. He felt his mind returning to his body and he was still tingling. As he tried to recuperate he threw his arm over his eyes to hide the wincing from his oversensitivity as Leffera 'cleaned' him after their latest romp. This was a new post-sex behavior Leffera had recently adopted. She was rather insistent and Jack decided he could handle a few jolts with the wonderful sensations her prehensile tongue gave him.\n\nWhile the more xenophobic members of Earth might find what he'd just spent the better part of an hour doing with the alien female highly offensive, Jack found Altarians to be one of the most beautiful races to inhabit the known universe. They were certainly one of the most sexually adventurous having no real issues with cross species attraction. Cultured, inquisitive, gentle, friendly, and optimistic were also excellent terms to describe them.\n\nPhysically, they weren't imposing like the hulking armor skinned Grellians (dull racists) or the tall black robed and hooded Allsa Komanae (menacing bastards). Altarians were generally slim and petite in stature, adult females ranged in height between 4' 10\" and 5' 8\" at their tallest. Adult males were typically at the lower end of that scale. Their bodies were covered with a felt like fur which ranged in color from blond to chocolate brown. They resembled Satyrs of ancient Greek mythology with cloven hooved feet and hands with two strong fingers and opposable thumbs on both sides. Their heads were humanoid but their eyes were twice as large as a human's, had diagonal pupils, and the lids had long lashes.\n\nJack had a fondness for their ears which were long, pointed, expressively mobile, and typically projected horizontally. They had slim noses, wide, black lipped mouths with amazingly dexterous tongues like Leffera's which was doing amazing things to him at the moment.\n\nThere was a definite sweetness to her musk which Jack now understood to mean she was fertile. That was something new he'd learned about Altarian females. When the hot spicy musk turned sweet, they were ready to make little Altarians. As most females took contraceptives Jack hadn't been exposed to this second 'flavor' of the musk until Karrel, the Altarian Trade Commissioner he worked with, had sex with him several months before. The outcome of that liaison was a son, the first ever between a Human and an Altarian.\n\nTechnically that shouldn't have been possible. Humans and Altarians were not genetically compatible. End of story. Complete stop.\n\nHowever, there had been extenuating circumstances involving extended exposure to female musk over time, ingesting certain hormone laden fluids from fertile females, a rare and normally innocuous Altarian virus, and Jack's unique genetic reaction to all of the above. Jack's genetics had been altered and compatibility for fertilization was just one of the 'gifts' he'd received.\n\nKarrel had explained to him that she'd stopped taking her contraceptives on her doctor's orders due to some routine medical tests she was having done. She'd been told not to have unprotected sex with Altarian males until she returned to using the contraceptives. She had no concern with having sex with Jack because, well, Humans weren't compatible. When she'd discovered she was pregnant, which for Altarians is only moments after conceiving, she made immediate travel plans to go home and be under the care of the royal physician.\n\nThat was the other little detail Karrel had kept from Jack. She was the daughter of Queen Elissa, head of the royal family which ruled over the entire Altarian Empire. Surprise!\n\nJack hadn't seen Karrel for the two month gestation period and she only returned after the birth of their healthy and completely Altarian child. The only genetic contribution Jack seemed to be responsible for was a resurgence of an ancient and normally dormant gene. Their son was born with the tiny beginnings of horns on his forehead.\n\nKarrel had agreed to let him name their son and he had chosen 'Alex' after his late father. Karrel found the name to be very suitable as it didn't match the sound of any existing Altarian words and felt unique, which they both agreed their son was. When she discovered that Alex was short for Alexander she was overjoyed by this 'hidden expansion'.\n\nJack was drawn back to the present as Leffera had finished her cleaning and had begun kissing him down there in the hopes of inspiring a third tumble in the sheets. Jack pulled her up onto his chest and she gave him a sweet moan of disappointment. She immediately looked up at him impishly and reached up to run her hands over the second genetic 'gift' he'd received.\n\nLarge black horns protruded from his forehead and curled ten inches back over his head. They were now three inches wide at their base and arced up to sharp points. Initially they'd been black with wide white streaks but they'd grown an additional two inches since their initial growth and the white lines had thinned into fine veins. His Altarian doctors insisted that their growth had finally stopped.\n\nThe horns were from dormant Altarian genes. Modern day Altarian males had no horns but at one time in the distant past they did. When his body fully integrated with the genetic changes the virus had triggered, the dormant gene activated and he'd grown his set over the course of a month while he remained unconscious. Altarian females found them to be very attractive. He was lucky that the gene also triggered growth in the muscles and underlying support structures needed to carry the heavy horns. His neck, shoulder, back and chest muscles had all bulked up to carry this extra mass. The doctors informed him that in fact his entire skeleton had altered to support the extra load. He didn't really feel the extra weight of the horns but the inertia was another matter. Quick movements of his head made their presence known.\n\nLying in bed with a frisky Altarian female on his chest presented no physical strain for him to look into her happy eyes. Leffera had gone off her contraceptives the moment Jack agreed to have a child with her. That had been the night Karrel's mother Queen Elissa, who was a dead ringer for her daughter, tricked him into impregnating her. Two months had passed since that night. That time was necessary for a safe waiting period for her system to clear of the contraceptive and for her first fertility cycle to fully engage.\n\nLeffera had dominated his nightly schedule for the past week as they worked on giving her a child. Based on Altarian female norms their efforts of three times a night and at least twice each morning was overkill for conceiving a child but they were on day six with no success. By day three Jack had seriously begun to worry but Leffera showed no such anxiety. This morning she was as relaxed as he'd ever seen her. He was starting to suspect he'd been bamboozled.\n\n\"I think it's time to see the doctor,\" Jack said, a look of concern on his face.\n\nLeffera stretched languorously across Jack's body and smiled in satisfaction. \"No, I'm sure we'll get it done tonight.\"\n\n\"Actually I've booked an appointment with Karrel's doctor for first thing this morning. I don't want your health to be at risk. We have to take every step to ensure you are healthy,\" Jack insisted.\n\nNow, Leffera's eye's showed some concern. \"This morning?\"\n\n\"Yes, and Karrel insisted on joining us as she's also worried that it's taking this long. You've shown no other signs of ill health so she said we shouldn't wait,\" Jack said.\n\nLeffera pushed herself up on her elbows and looked at Jack in alarm. \"Karrel will be there?\"\n\n\"Yes and she mentioned it to her mother and you know how emotional she's become with her own imminent delivery. I wouldn't be surprised if she was there too!\" he said with wide eyes.\n\nLeffera bleated in dismay. \"The Queen? You have to call it off! Call the doctor and cancel!\"\n\n\"What!?! I can't do that! Your health is far too important to me! And to Karrel and Queen Elissa as well it seems!\"\n\nLeffera bleated again.\n\nShe began to beat gently on his chest. \"You have to call them and cancel! I, uh, I just felt it happen! I'm pregnant! That last time must have done it!\" she exclaimed.\n\nJack smiled knowingly and looked her in the eye as she continued to gasp. Then she went still. \"You tricked me!\"\n\n\"You tricked me first,\" Jack said. He sat up suddenly and dumped her off onto the bed and she bleated with surprise. He got off the platform and made his way to the shower. This time he closed and locked the door behind him.\n\nThe door beeped indicating she was trying to enter. \"Jack?\" he heard through the door.\n\nHe stepped into the shower and got the water running.\n\n\"Jack?\"\n\nHe took his time cleaning himself. He was especially careful washing his hair as he'd scratched his arms pretty badly on the points of his horns on a couple of occasions from being a little careless. The buggers were sharp!\n\nOnce he'd stepped out and dried himself off he opened the door and saw Leffera kneeling on the bedroom floor facing the door. She had a remorseful look on her beautiful face. \"I'm sorry I didn't tell you.\"\n\n\"When did you know?\" he asked sternly.\n\n\"The second night,\" she mumbled.\n\nJack stood in front of her with a disappointed look on his face.\n\n\"Do you hate me?\" she squeaked.\n\nHe sighed and pulled her to her hooves. \"No of course I don't hate you. I'm really upset you lied to me though. That hurts! You've damaged my trust in you. Go home and get ready for work. I'll see you at the office.\"\n\nLeffera slipped her gown on and left his apartment with a final sad look over her shoulder.\n\nJack didn't have time to go for a run as Leffera had used up his time exercising her way as she'd done all week. He was really jonesing for a run. He sighed and just got dressed for work. While all Altarians wore gossamer robes Jack maintained his Earth style of dress shirts (no ties!), slacks, and dress shoes. Altaria was a very civilized planet and he lived in a very temperate climate so classy but comfortable was the way to go for his work.\n\nThe exception to that dress code had been during his first week back after his transformation. He'd returned to the office to attend the Trade meetings wearing his hoodie. The applicants from Earth who'd scheduled appointments to present their products and services were distracted by his barely visible horns. These meetings hadn't been as effective as they should have been. He had his staff restart the schedule so any of the previous week's applicants who'd been rejected could come back for a second try the following week if they wished. They also sent his apologies to everyone on the schedule for the delay. That weekend he came to grips with the fact that the horns weren't going away. He began the second week with his head fully uncovered. By being direct and getting the curiosity factor out of the way he was able to get the presenters back on track after just a short period of gawking. He still maintained his tight quality control standards and only beneficial products and services were accepted. But he no longer pretended that the decisions came from anyone other than himself. He discovered that while the rejected applicants were still upset, they were less comfortable with confronting someone with dangerous looking horns no matter how gracious and polite they behaved. There really weren't too many uncomfortable scenes.\n\nHis hair had become an issue. He still wasn't keen on long hair but his staff in both the Trade Commission office and the Embassy insisted he keep it long. His sandy blond hair was only slightly wavy and it now reached the middle of his shoulder blades. Every morning one of his staff would braid his freshly washed hair into a single braid down his back, tied with a ribbon. Every morning the 'honor' would go to a different staff member and, like the attendance for his hosted movie nights at his apartment, he had no idea how they chose who got to do it.\n\nThat took care of most of his hair but he still had to get his bangs trimmed. When he could take it no more the braider got the 'sad duty' of trimming the excess from his bangs and over his ears. Where the clippings went he had no idea. Frankly, he found that a little creepy but he couldn't really complain.\n\nHe headed off to the Embassy as he had duties there first thing today and would spend the afternoon in the Trade Commission offices.\n\nWalking into the lovely space they had in the Embassy he saw faces turn in his direction with bright smiles. He smiled back and greeted his staff with a formal bow. That boosted the smiles and more than a few began to fidget. He was told after his change that his body now emitted a musk that Altarian females read as a kind of mating suitability report card. Strengths, weaknesses, and health were all present in that chemical mix and while he couldn't smell it personally Karrel told him it presented him as a VERY agreeable mate. However, it didn't help that he distracted his staff more than he did before.\n\nHe made his way over to his personal assistant, Denee. She tracked his Ambassador duty schedule for him.\n\n\"Good morning, Denee. You're looking particularly happy this morning! Did you get a visit from that suitor again?\" he asked with a smile.\n\nThe light tan furred female grinned up at Jack from her workstation. \"Lunnae dropped by last night and spent the evening with me. He was so energetic at first but he couldn't perform as often or as forcefully as you. Still it was a nice enough night.\"\n\nJack's experience with most Altarian males proved them to be self-absorbed fools but some of them made an effort to prove their worth beyond being sperm donors. He was getting the impression that Lunnae might be one of those. He actually had a job, unheard of amongst most males. He was the head of some committee or something. Jack had to admit he hadn't caught all the details.\n\nDenee was undressing him with her eyes again. He sighed. It was such a role reversal living and working in a female dominated culture. If they weren't so polite and cultured about appreciating his male attributes he might have taken offence. Besides he'd been the one to start the conversation about her suitor.\n\nLunnae wouldn't be marrying Denee. Altarians didn't form long term relationships as the ratio of females to males was 10 to 1. If he convinced her of his suitability she might agree to mate with him to produce a child. Male children were raised by the males in male run schools and in Jack's opinion learned to become lazy flakes. Female children went to female run schools and became skilled and valuable members of society.\n\nJack and Karrel had already had a few discussions about their son's education. It wouldn't be time to send him to school for a couple of years apparently but when it happened Jack insisted he would be going to a female run school. No son of his would fail to grasp the importance of a good day's work and contributing to the health, safety, prosperity, and happiness of those around him and himself. Karrel was coming around to his way of thinking but it was going to shake up Altarian society when it happened.\n\n\"You didn't compare Lunnae's performance to mine did you?\" he said, suddenly worried she had been less than discrete. Denee wasn't known for holding her tongue when it came to her opinions.\n\n\"Well, I might have told him that he needed to work on his stamina... because you'd lasted three times longer than him,\" she winced.\n\nAnd that expression told him how her opinion had been received.\n\n\"So Lunnae won't be returning to ask you to mate,\" he sighed.\n\nDenee's eyes brightened. \"No, but if you know of anyone who might be interested in taking is place...\"\n\nJack's eyes snapped to Denee's face. He hadn't told anyone he was able to make Altarian's pregnant. The Queen promised to keep silent at least until she'd given birth and Karrel hadn't informed anyone she'd had a child outside of Leffera. That left Leffera as a possible leak, if that's what Denee was hinting at.\n\n\"Taking his place?\" he said carefully.\n\n\"Between my legs!\" she grinned and licked her lips.\n\nJack breathed a sigh of relief. She was just horny. He grinned and shook his finger at her for her boldness. That got him a wistful sigh from the female.\n\n\"Do I have actual work scheduled for me this morning?\" he asked.\n\nShe smiled and pulled up his calendar.\n\n\"In ten minutes you will be meeting with a delegation from Phem Kalos. They are here for the annual renewal of the non-aggression treaty. The initial meeting is always with the Ambassador to announce who from their group will be attending the banquet two days from today in the evening, you'll be attending that, and listing other issues that might be brought up at the formal meeting which is also two days from today. This gives you time to prepare answers for the issues raised.\"\n\n\"OK, so do I call them the Phem Kalosians?\" he asked.\n\n\"Only if you wish to immediately end the treaty and send us into another generation of war. They are the Phem Kalos. That is the singular and plural term. For this meeting you just listen primarily. Have you met the Phem Kalos before?\" Denee asked.\n\n\"No.\"\n\n\"Furred like us but generally a little taller and stronger. Close to your size. Carnivores.\" She shuddered at this. \"Fierce warriors but headstrong and prone to use force where intelligence is better suited. Patriarchal society and you never see their females as they are confined to their planets. This is the first time they will be meeting a male Altarian Ambassador. Should be interesting.\"\n\n\"This banquet, it isn't formal dress is it?\" he asked carefully.\n\n\"Of course it is!\"\n\n\"Damn. I'm going to need to buy a tuxedo. That means a quick trip to Earth because there are NO Human shaped tuxedo shops on Altaria and I'm not wearing an Altarian gown. I don't have the fur for it,\" he growled as he saw Denee begin to fantasize about him in one of the translucent, gossamer gowns. \"I will have to do that this afternoon once I see my last Trade applicant. Who is braiding my hair this morning?\"\n\n\"For the Phem Kalos you should leave your hair unbraided. Long manes are symbols of power to them. Yours is longer than they can grow so you'll be in a power position with them. Greeting room one. Enjoy.\"\n\nGreeting room one was his favorite. It opened on a garden and the scent of the flowers was so refreshing. It also covered any personal odors the beings he met with had. He wondered if the Phem Kalos had a scent that needed covering.\n\nAt the exact time for the meeting he opened the door and stepped into the room. Three broad shouldered beings turned to face him. They wore ceremonial armor made of some hardened and polished leather. Mostly just shoulder plates and red capes. They were indeed furred. It was longer than the felt like fur of the Altarians, deep brown and striped with black. Each of the three males facing him had distinct patterns of the black striping. Wide, pointed dish-like ears twitched and pointed at him. He got the distinct impression that the one in the center was younger than the other two. Denee was right as well. They seemed just a little bit intimidated by his long hair. Jack thought that was hilarious but kept this from his face.\n\n\"Greetings. I'm Jack Danner, the Altarian Ambassador.\"",
        "The young one in the center looked to his companions and made a chuffing sound like he was clearing his throat. \"What is it?\" it said to its companion who made some gesture that Jack couldn't read. It turned back to Jack.\n\n\"Altarian Ambassador? You aren't even Altarian!\" the brash one barked.\n\n\"And yet they were so impressed with me that they made me their ambassador. I'm originally from Earth but the horns were an unintentional gift from the Altarians.\"\n\nEyes widened. \"You're Human?!?!\"\n\n\"And part Altarian too, it seems,\" Jack admitted. He was glad the Phem Kalos had heard of Humans. That saved him a little time in explaining.\n\nThe three seemed unsure how to proceed so Jack fell back on the instructions Denee had given him. \"It is my understanding that you will be informing me of the members of your group who will be attending the banquet two days from now in the evening?\"\n\nThe older Phem Kalos on the right took a step forward and dipped his head.\n\n\"I am FennHark De Kurk, Councillor of Long Sight. It is my privilege to speak the names of the honored. You are graced to be in the presence of FennLann De Jark, Prince Regent of Phem Kalos.\" The young Prince nodded to Jack who returned it. \"Next is FennDurr De Dent, Councillor of the Fist.\"\n\nJack quickly suppressed a snort as his mind latched onto 'Dent Fender'. He solemnly nodded to the third male who showed significant scarring under his fur. Then Jack noted the sharp retractable claws on their three fingered hands. Probably deadly in hand to hand combat.\n\n\"The greatest honor to the Altarian people is the final member of our party. Princess SennLann Du Kess, cousin of the Prince Regent will also attend the Banquet.\"\n\nJack recalled Denee's words about how Phem Kalos females were not allowed to travel. He took a chance with his next words. \"This will be a historic banquet indeed. We are greatly honored.\"\n\nThe Prince Regent looked very pleased but the two Councillors stiffened and glanced sharply at Jack, eyes filled with suspicion. When they saw him look back curiously they looked away quickly and tried to affect a casual air. The hairs on the back of Jack's neck prickled. He pushed onto the next item in the agenda.\n\n\"It is also my understanding I may receive a listing of additional issues you might be bringing up in the formal meeting?\n\n\"No issues at this time,\" FennHark stated tersely.\n\n\"Excellent. Did you have any questions?\"\n\n\"No questions at this time,\" FennHark said.\n\n\"Alright. Well, I suppose I will see you at the Treaty Signing.\"\n\n\"It was refreshing dealing with a male,\" the Prince blurted and his Councillors scowled.\n\n\"Have you been responsible for attending these treaty signings for long?\" Jack asked him, ignoring the other two.\n\n\"Fark yes! This is my tenth journey to Altaria. The same things happen every time. The Ambassador visit, the Asset Disclosure meeting, the Treaty Reading and Signing, the Banquet with endless dancing, then back to Phem Kalos. This is the first change in that pattern in ten years. I mean aside from the last minute inclusion of my cousin,\" the youth growled. His councillors looked especially agitated when he mentioned the cousin. Jack filed that away.\n\n\"The nature of diplomacy takes comfort in repeating traditions as change often brings unexpected consequences,\" Jack said and the Councillors stared at him again. \"I'll try to think of something fun we can do at the Banquet. Something Earth based.\"\n\nThe Prince's eyes lit up. \"Yes! That would be welcome!\"\n\n\"Until then?\" Jack said. They shared nods and the two councillors hustled their ward away with quiet growls he responded to with snarls.\n\nJack made his way back to the office pondering the odd behavior of the two councillors. The Prince's behavior was much easier to understand. He was bored! Young, brash and far more comfortable in the presence of males, sticking him with diplomacy duties for Altaria must seem like a punishment to him.\n\nDenee was sitting at her workstation watching him approach with half lidded eyes. He could imagine where her thoughts were taking her.\n\n\"Hello? Denee? Altaria to Denee, time to get your mind out of the bedroom and back to your work.\" Jack tapped her on the forehead and she jumped guiltily.\n\n\"Do I have any other Ambassador duties today?\" he asked.\n\n\"Nothing on the schedule. What were the secondary issues the Phem Kalos will bring up at the meeting?\" she asked preparing her notation device.\n\n\"Nothing.\"\n\nShe looked up sharply. \"Nothing?\"\n\n\"They said they had no issues to bring up at this time. Is that unusual?\" he asked.\n\n\"It's never happened before. They always push for access to our outlying territories at least. Any more unusual behavior?\" she asked.\n\n\"Well, at the banquet we are going to have a special guest from Phem Kalos. The Prince Regent's cousin Princess SennLann Du Kess will be attending.\"\n\nThe office went quiet. Jack looked at their shocked faces.\n\n\"A Phem Kalos female is on Altaria?\" Denee gasped.\n\n\"We'll see in a couple days' time,\" Jack said wondering what all the fuss was about. Denee picked up the phone to contact someone immediately and ignored Jack. Having been dismissed he left the office and walked across the broad courtyard to the Trade Commission building. When he reached his office he received smiles from his staff there.\n\nPetite Mella rushed up to him with a wide smile and a twinkle in her eyes. She was a honey gold Altarian who fell just an inch below baseline for standard adult height. He once mistook her for a young teen but now he realized she was an enormous ball of energy, happiness, and lustiness in a compact package. She crushed herself up against him in a hug... and grabbed his ass. He was used to this so he just peeled her off of his body and gave her butt a little pat to send her on her way. She blew him a kiss then suddenly stopped to look at him.\n\n\"Your hair isn't braided!\" she squeaked.\n\nJoe caught the sudden attention he received from all of the staff within hearing of Mella's voice.\n\n\"Yes, I had a meeting with several Phem Kalos this morning and apparently having my hair loose was a tactical advantage. It seemed to be,\" he suggested.\n\nMella's eye went wide at the mention of his visitors. \"Phem Kalos! They frighten me! They eat meat!\" she shuddered.\n\n\"Mella, you know Humans are omnivorous, right? I've eaten meat too,\" he confessed looking her in the eye.\n\nHer twinkle came back. \"I know what meat you like to eat best!\" she gushed.\n\n\"MELLA!\" he yelped.\n\nShe giggled as she ran back to him. She leaned in close to whisper. \"You like eating us!\"\n\nJack blushed as he looked at the others who were watching him with interest and smiles.\n\n\"Why I oughta eat you right up to teach you a lesson!\" he growled playfully.\n\nMella's expression flushed with wanton lust as she leaned against him. \"Oh yes! Do it! Please!\" she panted.\n\nHis tease had backfired and a blush rushed over his face. \"Off you go!\" he said as he set the female back on her hooves and gave her butt a little goose to send her squealing back to her desk. She grinned lustfully over her shoulder.\n\nHe walked up to Leffera who was trying to look cool and professional while she trembled with worry over how he was going to react.\n\nHe stood before her with a stern expression and saw her lips begin to tremble. He hadn't realized she was this upset. \"Come with me.\" He turned and walked into his office without looking back. He knew she'd be right behind him.\n\nHe stepped in the door and gestured for her to enter. She did and he closed the door. Then he locked it.\n\nLeffera's eyes were wide as she watched him walk to the front of his desk and turn around.\n\n\"Come here.\"\n\nShe approached.\n\n\"Kneel down, here.\"\n\nLeffera knelt and looked up at him confused and tried to decipher his strict expression.\n\n\"Take my pants down.\"\n\nLeffera smiled but his frown made her stop and quickly do as he said.\n\nShe glanced at his semi erect cock then up at his face. She unconsciously licked her lips.\n\n\"You lied to me Leffera. You broke my trust. By all that's fair you shouldn't have access to what's in front of you for a long time. What do you think about that idea?\"\n\nTears were welling up in her lovely eyes as she looked at him beseechingly. She couldn't speak so she shook her head to indicate she didn't like the idea.\n\nJack struggled to maintain his strict expression. He hated to see Leffera sad but she needed to learn that it was never a good idea to lie to him. This was as close as he could get to tough love.\n\n\"Go stand by the door.\"\n\nLeffera jumped to her hooves with a final glance at his cock and ran to the door. She turned back to him.\n\nJack picked up his phone and spoke quietly to someone. He hung up and a second later there was a gentle tap on the door.\n\n\"Let her in then lock the door and return to kneel here,\" Jack instructed.\n\nShe opened the door and Kaluna entered. She had a rare mix of golden tan and chocolate brown fur and was one of the taller females in the office. She'd been his overnight guest after movie night a few weeks back and Jack had discovered her rather extreme appetite for oral sex. Namely her obsession with swallowing his cock as deep down her throat as she could. She wasn't the most skilled at it but her enthusiasm was tremendously exciting.\n\nWhen she saw Jack standing with his pants off, she rushed up to him, dropped to her knees and immediately sucked his cock into her mouth. He groaned in pleasure. Leffera knelt beside them and watched Kaluna take his hardening cock deeper and deeper into her mouth. Leffera's eyes grew wide as she realized her co-worker must be taking Jack into the back of her throat to get as much of him into her as she was.\n\nKaluna began to make long deep strokes from head to root and Jack knew he wasn't going to be able to last long with such attention. He looked over at Leffera and saw the female was watching so intently she was forgetting to swallow and drool was tracking down her chin. He reached over with a tissue from his desk and tapped her chin. Leffera jolted. She realized what she was doing and took the tissue to dry her chin off. He could see she was tremendously excited as her hands slowly slid down her body.\n\n\"No touching yourself,\" he growled. Leffera gave him a desperate look but went back to watching.\n\nJack was getting really close and Kaluna's eyes were rolling back in her head as she spent longer and longer periods with his cock lodged at the back of her throat. She was trembling so Jack rubbed the muscles behind her ears and felt her relax completely allowing his cock to slip that last inch into her throat. Jack began to pump himself into her mouth. Kaluna moaned and quaked through her own orgasm as her fingers delved deeply into herself. Jack felt his balls tighten then he was shooting stream after stream into Kaluna's mouth with a groan. She squealed and her suction increased as she clung to his ass. Her dextrous tongue squeezed every drop from him as he eased his softening cock from her mouth.\n\nLeffera moaned in need but refrained from touching herself.\n\nJack relaxed back against the edge of his desk and smiled down at Kaluna who was rocking on her knees with her eyes closed. She had a satisfied grin on her face as she rolled her tongue around in her mouth. She finally opened her eyes to look up at Jack then over to Leffera who was looking at her desperately. Kaluna looked to Jack for permission and he just raised his eyebrows in question. She took that for permission and leaned towards Leffera who swept forward and kissed her co-worker deeply, sharing in Jack's seed. He was surprised and more than a little turned on by the display. Kaluna pulled back with an impish smile and left Leffera moaning in need again.\n\nKaluna stood and smiled to Jack as she strutted back to his door. She slipped out of the door and shut it behind herself with a final heat filled look into Jack's eyes.\n\nJack pulled his clothes back on and checked to make sure he hadn't got them dirty. He was good. Kaluna had done an excellent job of cleaning him and catching every drop.\n\n\"Stand up,\" he said.\n\nLeffera jumped up and stood before him.\n\n\"No more lies. Is that understood?\" he growled.\n\nShe nodded rapidly as she rubbed her thighs together.\n\n\"No touching yourself. You call me at ten and I will watch you give yourself release then. Understood!\" Jack said sternly.\n\nLeffera's eyes went wide and she almost came at the idea of masturbating on camera while he watched. She'd never heard of that before. It was so HOT! She squirmed and nodded.\n\n\"Out you go!\" he commanded and she went.\n\nHe sat behind his desk and grinned. He knew that call tonight was going to be a short one. She wouldn't last a minute. He still had to think of a way for her to make amends to the staff in the two offices who missed out on movie night for a full week. Without disclosing why.\n\nHe looked at his schedule and saw that Denee had contacted Leffera and she had pushed his schedule to the following day so he'd have time to go to Earth to get his tuxedo. She'd also contacted the Security Ministry and arranged to have his escort meet him at the Gate terminal. He wondered if it was going to be Bal and Gee again.\n\nHe did have a little time so he left his office and went down to the consultation room to see if any of the applicants were still there. He found only one. An older black gentleman in a wrinkled suit with a selling kit at his feet. He was sitting on a chair looking like life had just given him a beating. He was holding a handkerchief in his bony fist.\n\n\"Are you alright sir?\" Jack asked.\n\n\"No, I'm not alright. This was my last chance. I spent everything I had to be here today and Lucifer's too busy to see anyone,\" the man growled with a shaky voice.\n\nLucifer?!? That nickname was a new one to him. It kind of shook him a little to know people thought of him that way. He knew he wasn't going to make everyone love him, but Lucifer? Really? He sighed.\n\n\"My dad used to tell me that everyone deserves a second chance. Maybe I could have mine?\" Jack asked and old eyes finally turned to him. They widened when they saw his horns. \"Oh Lord. It's true!\"\n\n\"Sir? I'm not the devil. I'm just a man... with horns. But I'm here and I have time for one applicant. Would you like to make your pitch?\" he gestured towards the meeting room. He saw the old man gather his wits and stand. He picked up his kit and followed Jack into the room.\n\nOnce they got inside he turned to the man and held out his hand. \"I'm Jack Danner, Earth's Trade Representative for Altaria.\"\n\n\"Douglas Stanfield.\" The man had an excellent grip.\n\nHis eyes looked up then back to Jack's eyes.\n\nTime to address the elephant in the room.\n\n\"I'm just a Human who had a one in a zillion reaction to a stupid little Altarian virus. Bonded some old Altarian genes with mine and now I have these. Could have been worse. Like I said, the chances of it happening were astronomical but lucky me for being there when all the stars aligned,\" he smiled.\n\nDouglas just looked away from the horns and nodded. Jack gestured to the table for him to set his kit down and begin.\n\nSometimes Jack would sit behind the desk while the applicants made their presentation. But this one had gone to seemingly extreme lengths to get to Altaria to make his pitch so Jack stayed on the man's side of the desk to give him that little extra attention. He leaned back against the desk and watched the man open the display and prepare. The sales kit was old and threadbare, held together by rubber bands and paperclips. But it did hold the small hand tools he was showing.\n\nJack watched attentively as the pitch unrolled and felt his heart ache when he realized the product wasn't suitable for the Altarian's due to the anatomy of their hands. They wouldn't be able to hold the tools properly. Even if they could there really wouldn't be a market for them anyway. Then his mind made a leap as something he'd seen triggered a memory of a frustration he'd had since he'd been on Altaria. He waited politely for the man to finish.\n\nDouglas looked at him nervously. He hadn't been kidding when he said this was his last chance. His family was relying on him to pull this off. They'd pooled their savings into this business and the ticket to get him all the way here. Now it was up to the man with the horns to make or break him.\n\n\"That was an excellent presentation. I want you to bear with me until I'm finished talking, ok?\" Jack paused until the confused man nodded. \"First off the craftsmanship of your product is very high. Quality stuff! I'm going to recommend this product to a market... but not the Altarians. You should have researched your target market better as Altarian hands have two strong fingers and two strong opposed thumbs which would make working with these tools rather difficult and uncomfortable. Additionally they don't really have a need for the function these tools provide.\" The man began to slump. \"It's not all bad news. There's a race of people I've met called the Greeluan Harn who would love these but you should know they are terribly cheap and you'll need to use every ounce of your bargaining skills to get a fair price from them. My estimation is that their market might top out at 10,000 units but I could be wrong. Like I said if you want I'll give you a letter of introduction that will get you in their door.\" He saw the man was still deflating as he realized his access to the vast Altarian market had just passed him by.\n\n\"Now for some better news,\" Jack smiled and the man looked hopefully at him.\n\n\"Something that Altarians don't have and there would be a market for are these!\" Jack reached forward and plucked at the rubber bands holding the kit together.\n\n\"Rubber bands?\" the old man mumbled.\n\n\"Yes! It's crazy but they have nothing like them here and while they seem so innocuous they're very useful as your trade case proves! If you could find a good source for quality rubber bands I'll set you up as the importer,\" Jack said.\n\nThe old man looked at the case and then back at Jack to see if he was trying some elaborate and cruel joke. Jack saw his doubt and felt it in his heart.\n\n\"I'm not kidding. No one has approached me for selling them yet. It wasn't until I saw your kit that I realized what was missing. We need an importer. Do you think you could do that?\" Jack simply said.\n\n\"Yeah, I could do that,\" Douglas said with a slow grin.\n\n\"Do you have any samples?\" Jack asked. The old man chuckled and opened a compartment in the kit full of odds and ends and pulled out a bag of rubber bands in various sizes. He handed it to Jack.\n\nHe also handed Jack an old fashioned business card with his contact details on it. Jack smiled and tucked it in his pocket.\n\n\"I'll show these to my people and we will send you an order. Remember you need to find a source for good quality rubber bands, not those cheap ones that dry out quickly and break. I'll find out the specs for which sizes will be most popular and we will go from there, ok? If they're as popular as I expect they'll be you should be good,\" Jack explained. He held up a small silver rod and indicated Douglas should press his thumb to the round pad at the end. Jack then pressed his thumb to the pad.\n\n\"Jack Danner, Earth's Trade Representative for Altaria. Douglas Stanfield, Rubber Bands,\" Jack said towards the device. It beeped then he handed it to the man. \"This is proof that we have an initial contract and that should get you started. My team will contact you and you will deal with them from this point on.\" He held out his hand to the man again.\n\nThe old man suddenly hugged Jack and he felt him trembling. \"Easy now,\" Jack gently pushed him back so he could look in the man's eyes. \"You still have some work ahead of you finding the supplier. Also, you should seriously show these tools to the Greeluan Harn. They will love them! Don't settle for less than $2500 a set though. Would you like the introduction letter?\"",
        "Douglas smiled and nodded, not trusting his voice.\n\n\"OK, I'll have my office write it up and send it to your address,\" Jack said patting his pocket where the business card was. \"It was nice meeting you, Mr. Stanfield!\"\n\nJack left the room and made his way back to his office. He plucked a wide blue rubber band from the bag and used it to tie his hair back. Then he tucked the bag into his pocket. His neck already felt cooler.\n\nHe filled in Leffera about the meeting so she could take Mr. Stanfield off the appointment list and add him to the acceptance list. She'd also take care of the recommendation letter. Jack handed her the business card as she'd enter all of his information into their system. He pulled the bag of rubber bands from his pocket and looked at it. He dumped half of the contents on her desk then put the bag back into his pocket.\n\nHe went to his office to catch up on his paperwork. Ugh.\n\nChapter 2\n\nWhen it was time to go buy a tuxedo he grabbed his hoodie from the hook behind his office door, went downstairs and grabbed a cab over to the Gate terminal. He saw Bal and Gee waiting for him but they were looking the other way. Feeling playful he decided to play a little prank on them. He reached into his pocket and pulled out two rubber bands. He snuck a little closer and hooked the two bands over two fingers, pulled back and let them fly.\n\nSnap! Right in the back for both of them!\n\nThey jumped and instantly had some kind of weapon drawn and pointed at him. He raised his hands, suddenly realizing how stupid it was to even pretend attack trained and armed agents.\n\nThey sighed and tucked the devices away. Gee looked down and picked up the rubber bands. She passed one to Bal. They were both fascinated. Gee walked over and stood close to him.\n\n\"Where did you get this weapon?\" she asked sternly.\n\n\"It's not a weapon. It's a rubber band. From Earth. They come in all colors and sizes.\"\n\nGee forced her hands into his front pockets and found the bag of samples while he yelped at her intrusion.\n\n\"I'm confiscating these weapons,\" she said looking up at his face.\n\n\"Hey! I need those... to, uh, show the Trade Commission staff so we can make an order.\" Bal scowled at him then she and Gee walked into the terminal. He hustled after them. They made their arrangements with the customs and security agent and walked towards their Gate to Earth. Bal was still scowling at him.\n\n\"What!\" he barked.\n\n\"You cut your hair,\" she said disapprovingly.\n\nHe was a little surprised that she cared. \"No, I didn't. See?\" He turned so she could see his hair was actually bundled in a ponytail. She'd just missed it due to the angle she'd been looking at him from.\n\n\"How is your hair staying like that?\" she dropped the scowl and looked at him curiously.\n\n\"With a thing that ISN'T a weapon! And no you can't have it,\" he said to block Gee from retrieving it. She just gave him an annoyed look. Jack pulled the hoodie on and covered his head. Bal's scowl came back and he rolled his eyes. They walked through the gate. They got through the customs and security station with less fuss this time though both Bal and Gee had to carry the tracer bands as his Diplomatic status required. They still refused to wear them which was fine with him.\n\nOnce they were in the limo he asked the map to display options for purchasing a tuxedo. The screen showed him many options but he narrowed it down to those that offered onsite and immediate tailoring. He selected a shop in an expensive shopping district as he recalled the shop in question had an excellent reputation. Then they were on their way.\n\nGee and Bal were going through the different sized rubber bands in the little bag.\n\n\"I do need that back,\" Jack said but Gee ignored him with just a glance.\n\nJack sat quietly fuming for a bit then he thought of another tack. \"I used to get into all kinds of mischief with rubber bands when I was younger. Much like I did with you two. I got into a lot of trouble in school and spent a lot of time in detention.\" He peeled a little piece of paper from a business card someone had left in the limo. He folded it over a few times to make a narrow strip. The two ebony Altarians were now taking turns watching him while the other scanned the vehicles passing and following them.\n\nJack held out his hand. \"Give me one of the rubber bands.\"\n\nGee frowned at him suspiciously then reluctantly handed him a red one.\n\nJack's grin grew as he saw the band was perfect for his needs. He stretched it between his thumb and index finger. With his other hand he folded the paper strip in half and put the little V over the rubber band then pinched it closed and pulled it back aiming at the floor.\n\n\"We used this method for exchanging notes across the classroom. The fun part was trying to make your friend make a noise when you'd painfully bean him on the arm. Then he'd get in trouble with the teacher and you'd pretend to be doing your school work,\" Jack chuckled at the memory. He had the attention of both agents now.\n\nHe pulled back and fired the paper at the window expecting it to bounce back but the window was just a low energy shield meant to block the wind. The paper projectile shot through and crossed into the next lane of flying vehicles.\n\nInto the open window of a passing police cruiser and off the nose of the officer. The man had his window open to release the noxious smoke of an old school cigar he was illicitly smoking while on patrol. He dropped the smouldering thing into his lap and struggled to get it back as it burned the fabric of his pants and the seat.\n\nBack in the limo the two agents looked at Jack with wide eyes as he stared back at the wobbling police cruiser. \"Shit!\" he cursed.\n\n\"Give me the weapon. It is too dangerous in your hands,\" Gee said and Jack dropped the band onto her open palm.\n\nThe cruiser dropped below the flow of traffic as it went on manual and they saw it swing back to catch up to them. The limo beeped as it went under the control of the cruiser and it slowly descended. It stopped in a park and the cruiser parked behind it. The engine shut down.\n\nBal and Gee prepared for a fight and Jack gestured for them to stand down. \"This is a police officer. I need to speak with him as I think I might have hit him with that paper.\"\n\nThe officer stepped out of his cruiser, its door expanding to serve as a shield. He stood behind its protection with his weapon drawn.\n\n\"EXIT FROM THE VEHICLE SLOWLY WITH YOUR HANDS IN PLAIN SIGHT!\" his amplified voice called out. One of the limo's doors opened. Bal stepped out first, followed by Jack then Gee.\n\n\"YOU IN THE MIDDLE, PUSH THE HOOD BACK, SLOWLY.\"\n\nJack lifted his hands deliberately and slid the hood back.\n\n\"Oh shit,\" the officer's voice growled. The shield dropped and the red faced cop stomped over to the limo.\n\n\"I'm terribly sorry Officer... Truman!\" he read from the man's badge. \"I had no idea it would get through the window. I thought it would bounce back so I didn't even consider looking at what might be passing by!\"\n\n\"What the FUCK did you hit me with?\" Truman growled.\n\n\"Just a little piece of folded paper fired with a rubber band. Like kids do in school. Like I used to,\" Jack finished weakly.\n\nThe man's face was still an unhealthy shade of red and Jack picked up the stink of cigar on the man's uniform then he smelled something else. He looked at Gee and Bal who were both trying to get his attention. He started to turn to them.\n\n\"Never mind the alien bitches, you look me in the eye here,\" Truman growled catching Jack's full attention. NO ONE called his friends 'bitches'.\n\n\"I oughta run you in for assaulting an officer but we both know you'd just walk away spotless because of some political protection bullshit!\"\n\nGee and Bal were both quite agitated by this point and Officer Truman turned on them. \"Settle the fuck down while I talk with your master!\"\n\nWhile he turned his head Jack got to see what the two Altarians were upset about.\n\n\"OFFICER TRUMAN! You will NOT speak to my security escort in this manner. Yes, I have diplomatic immunity so it would be pointless to arrest me. I understand you are upset but before this gets any uglier you should know your cruiser is on fire.\"\n\nThe man's face went from anger to shock in a flash and he spun back to see flames begin to lick at the combustible materials on the vehicle's dash. Jack and his escorts moved a safe distance away.\n\nA Fire Truck descended and blasted the vehicle with foam. Truman was too close and got doused as well. A smaller vehicle with Fire Chief emblazoned on its side settled down a distance away and a large man stepped out to cross over to them. Truman was looking a little panicky.\n\n\"What are you doing here?\" the officer blustered.\n\n\"We were contacted by your cruiser saying it had detected fire but its suppression systems had been disabled. That's something I can't ignore Officer Truman,\" the Fire Chief said bluntly. He turned to face Jack.\n\n\"And you would be the Altarian Ambassador Jack Danner?\" he said with a smile.\n\n\"Yes,\" Jack smiled.\n\n\"Fire Chief Malcolm O'Dwyer. Would it be okay if I took a picture of us together? My wife would kill me if I didn't,\" the big man asked.\n\n\"Glad to,\" Jack grinned.\n\n\"Officer Truman, make yourself useful and take our picture! Take a few,\" O'Dwyer barked handing the miserable cop his device.\n\nJack, Bal, and Gee posed for a few pictures with the Fire Chief then O'Dwyer took his phone back and reviewed them. He looked very pleased.\n\n\"Thanks! She'll be delighted! I suppose you should be on your way. I'm sure Officer Truman is finished.\" Jack and Truman both caught O'Dwyer's double meaning.\n\n\"Is our limo still under the control of the cruiser?\" Jack asked and they all looked at the foam filled carcass of the dead cruiser.\n\n\"Oh, probably. I'll call you another,\" O'Dwyer glared at Truman and made a call.\n\nThirty minutes later Jack was following Bal into the men's dress apparel shop, his hood back in place covering his horns. Gee followed him in and quickly assessed the solitary customer standing at the counter and the two shop staff. She dismissed them as threats and took up station a distance from the door. Bal was off to the side of the back door.\n\nA distinguished gentleman in a finely tailored suit moved to intercept the hooligan in the hoodie. Jack pushed the hood back and the man came to an abrupt stop, his eyes widening in surprise.\n\n\"Ambassador Danner! Welcome to Fitzhenry's! I am the proprietor, Walter Fitzhenry. How may I be of service today!\" the man said breathlessly. The other staff member who was cashing out the woman gasped and dropped something on the glass counter causing a loud clatter.\n\nThe woman turned and Jack looked into emerald eyes and took in the lustrous black hair hanging to her shoulders. She was his height and wore an incredibly beautiful smile.\n\n\"Diana?\" he croaked.\n\n\"Jack!\" she blurted in surprise and rushed over to give him a hug. Gee and Bal tensed but it was just a hug. To Jack it was a few seconds of heaven. Diana smelled incredible and she felt even better. To have that soft flesh pressed up against him was absolute bliss and he felt himself respond. Luckily she pulled back before she could notice.\n\n\"Jack, you didn't call!\" she admonished him with a pout. God those lips! He struggled to pull his mind back to the conversation.\n\n\"Well, at that time this was happening,\" he said pointing up at his horns. \"My brain wasn't functioning too well.\" He cast a shamed look at his security team but they studiously avoided his gaze. \"Once I came out of the transformation I really didn't think you'd be still interested in hearing from me.\"\n\nHe was suddenly aware of the rapt attention of the two gentlemen. \"I'm sorry Diana, please excuse me for a minute. Hello Mr. Fitzhenry. I am interested in a tuxedo for a banquet in two days' time. I'd prefer to be able to take the tuxedo with me today if possible or at the latest I'd send someone to pick it up tomorrow.\"\n\n\"Certainly sir! Any particular kind of tuxedo you had in mind?\" Walter asked.\n\n\"I have to look my absolute best as it will be a rather historic event I understand. I leave the choice to you.\"\n\nThe man was absolutely overcome with the honor being bestowed to him. \"Roland! Close the shop and lock the door! We have a special customer to serve! Miss Haven, will you be staying?\"\n\nDiana looked at Jack with a smile and a raised eyebrow so he nodded. Her smile grew broader and Jack was once more drawn to her lovely lips. He gave himself a shake.\n\nRoland locked the door and placed a sign in the window indicating they had closed early.\n\nJack took his hoodie off and the two men swarmed over him taking quick measurements. Then they moved off to make their selections.\n\nOnce they were alone again Diana turned to him. \"Back to what you were saying. You didn't think I'd want to see you again because of these?\" She reached up and slid a finger along one of his horns.\n\nHe was still a little uncomfortable with strangers touching his horns and he didn't know Diana no matter how attracted he was to her. He pulled back gently.\n\n\"I'm sorry, I meant no offense,\" she said looking contrite.\n\n\"No, it's ok. I'm just not used to people touching them,\" he explained.\n\nWalter had returned with a classic tuxedo jacket and pant set. \"These should fit but we may need to take the jacket's waist in as your shoulders are so wide and your chest and back are well muscled.\" He glanced up briefly guessing what Jack needed the extra muscle for. Jack tried the jacket on over his dress shirt which he always wore open at the neck due to how wide his neck had become. He looked at himself in the mirror and smiled. He liked the tuxedo jacket quite a bit.\n\n\"You have excellent taste Mr. Fitzhenry! This jacket is gorgeous! I look amazing in it already!\" Jack told Walter who glowed with pride.\n\n\"I am going to suggest something rather audacious,\" Walter said with a daring look in his eye. Jack just looked at him curiously. Roland also perked up.\n\n\"Wear the tuxedo with the shirt open at the collar as your shirt is now. Add a bow tie under the collar but left undone. To find a standard shirt that fits your neck's dimensions isn't possible. You'll need a custom shirt made for you. We can do that but it will take more time than you have. However, a nice crisp white shirt worn open and suggesting the formality of a bow tie will present an image of class yet showcase your rebellious nature!\"\n\nJack faced the mirror and grinned at the man standing behind him.\n\n\"Yes, that sounds like me. Can I get the work done today?\" he asked.\n\nFrom the pained look on Walter's face he had his answer. \"Ah, I see. Will I be able to have it for tomorrow?\" Walter smiled and nodded. Jack relaxed and nodded back.\n\nThe man rushed off the get things started. Jack turned to Diana.\n\n\"What brings you to the store? Gift for a significant other perhaps?\" he said, attempting to sound nonchalant.\n\nShe grinned at him. \"You ARE out of practice with smooth talking the ladies.\" At his blush she chuckled. \"No, I'm just arranging to pick up a new suit for my daddy. A present. He dresses terribly. We haven't spoken for a while as we had a real blow out a while back. I'm trying this as a peace offering.\"\n\n\"Wow! That's quite the effort for a peace offering. Were you on the wrong side of the argument?\" he asked.\n\n\"No! I- it's just that he's all the family I have and I don't want to leave this fight between us.\" Diana looked upset.\n\n\"I'm sorry, I shouldn't have said that. It's a wonderful gift. Truly,\" Jack apologized. \"If you believe he deserves this much effort I'd love to meet the man someday.\"\n\nDiana snorted then blushed in embarrassment at her outburst while Jack looked at her with eyebrows raised. \"I'm sorry. It's just, you're exactly the kind of man my daddy would disapprove of. He disapproves of anyone who supports the interaction of Humans and Aliens. I think I can honestly say daddy would tell me to stay away from you.\"\n\nJack was becoming uneasy with her constant references to her father as 'daddy'. It rang his alarm bells and helped cool his ardor for this lovely woman. She seemed to pick up his change in attitude and her eyes widened in alarm.\n\n\"Not that I've ever listened to his opinion when it comes to who I choose to associate with! Honestly, daddy doesn't control me. I have my own criteria for selecting suitable companions,\" she said touching his arm with a sultry smile on her lips.\n\n\"If we are being completely honest, your use of the term 'daddy' is setting off my alarm bells. A past experience that didn't end well for me. Something involving shotguns and first kin,\" he explained looking her straight in the eye. She pulled her hand back.\n\n\"Queen Elissa! She's on television and SHE'S PREGNANT!\" Roland squealed excitedly. Walter rushed out from the back room to watch with a huge smile on his face too. They were obviously fans! They looked at him as Roland gestured towards a screen he'd just turned on. The scene was of the royal palace on Altaria where the Queen was giving a press conference for the upcoming Treaty signing. Though it looked like she was trying to disguise it she could not hide the little bump on her tummy and the news casters had quickly switched stories from the treaty to the surprise pregnancy. This was HUGE news and overshadowed a mere annual signing of a boring old Treaty with ancient enemies. The normally proper and civil press were knocked off their game by this sudden excitement and barked questions at the Queen.\n\nIn her state of imminent birth a regular press conference would have been a strain but now that it had turned into a feeding frenzy she quickly lost her composure and shrank back from the yelling. Karrel was standing next to her with a look of concern on her face.\n\nThen the Queen's water broke.\n\nThere was sudden stillness and silence as the entire press core went into shock. Then all hell broke loose as the medical team that had been waiting on the sidelines rushed in to collect their patient. The cameras pushed in close and Jack was watching Karrel help her mother to lie down on the stretcher. Elissa was becoming emotionally agitated and was crying out. The quality of the Altarian camera equipment proved its excellent audio capture technology when it picked up her next words to her daughter.\n\n\"Find Jack! Tell him our baby is arriving!\"\n\nOnce more stillness and silence descended upon the press. This gave the medicos time to snatch the Queen to safety while Karrel stayed behind to deflect their questions.\n\nThe headlines under the image on the screen were frightening. The worst of them was 'Queen carrying Mutant Earthling Baby'.\n\nJack must have groaned as everyone in the shop turned to face him including Bal and Gee but he only had eyes for the drama unfolding on the screen.\n\nThe press exploded and Karrel showed her regal fortitude when she stared them all down into silence. \"I will give a statement then I will take questions in a civilized manner. Yes, my mother is pregnant and yes our Trade Representative and Ambassador is the father but there is NO need to be concerned for the mother or the child. It will be born healthy and completely Altarian. How do I know?\" Karrel wore a huge smile on her face now but Jack was mumbling 'No, no, no' as she prepared to speak. \"I know because I had his first child. 'Alex' is a beautiful male baby, completely healthy and completely Altarian.\" She did something on her personal device and looked back at the press. \"If you look at my social network page you will see the first publicly available images of our son.\"\n\nJack groaned again.\n\n\"You had sex with an Altarian?\" Diana gasped. Fortunately, she didn't appear horrified by the idea.\n\n\"At least two,\" Roland said. \"WAIT! You had sex with a Queen and she's giving birth to your CHILD! Does that make you the KING?\" The man's eyes were threatening to pop right out of his head. Yeah, this guy was a monarchist for sure.",
        "\"NO! No, I'm sure it doesn't mean that,\" Jack said looking at Gee and Bal for confirmation as did the rest.\n\n\"Jack is not King. He is... the Queen's Consort,\" Gee said with a subdued voice.\n\n\"Consort?!? But that means he's married to the Queen!\" Roland continued to hyperventilate.\n\n\"Altarians don't have the concept of marriage or even boyfriend girlfriend. I have no idea what being an Altarian Consort means,\" Jack growled. \"Regardless, I have to get back to Altaria. I'm a 'daddy'... again. See, here it's appropriate to use that term. They're babies.\"\n\nDiana squirmed. \"On Earth it's a term of endearment and has no age restrictions,\" she pouted.\n\nJack went still and looked at the woman. \"You know I'm from Earth, right?\"\n\nHer pout just got deeper.\n\nJack looked back to Walter. \"Do you have everything you need to finish the tuxedo?\" The man nodded, still looking a little awestruck to be clothing the Queen's Consort. \"OK, add to that order eight dress shirts and four pairs of dress slacks, you select the colors and patterns. You have impeccable taste and you have the sizes. I'll settle the bill now so my order can just be picked up tomorrow,\" he explained.\n\nWalter entered his order into his sales terminal and Jack's eyes widened at the total but he knew his account would cover it so he authorized the transfer.\n\n\"May we claim to have dressed the Altarian Queen's Consort in our marketing materials?\" Walter asked.\n\n\"Sure, but you might want to hold off for a short time to see how the winds blow. I have a feeling not everyone will be as controlled in their reaction as Diana here.\" Glancing at the woman in question he was surprised to see she was looking back with desire in her eyes. Hadn't he just accused her of acting childish?\n\nThere was a series of heavy thumps on the front door and Gee made her way over to Jack's side.\n\n\"There is a group of angry looking men at the door and I don't believe they are annoyed at not being able to purchase clothing. I believe we were seen entering this establishment which is no longer a safe place for you. We should leave,\" she insisted.\n\nBal arrived at his side. \"Someone is pounding on the back door as well. They sound angry.\"\n\nThere was a loud rattling sound and they turned their eyes to the front windows where riot guards were rolling down to protect the glass. This covered the front and rear doors as well. Walter stepped out of the backroom where he'd triggered the protection.\n\n\"How are we supposed to leave now?\" Jack asked him.\n\n\"I can fly you out,\" Diana said. \"If we are going to leave I suggest we do it now before someone thinks to go to the roof parking lot.\" Gee and Bal nodded to her and they set off at a trot.\n\nJack quickly shook Walter's and Roland's hands then raced after the ladies. When he stepped out onto the roof Diana was already behind the controls powering up the sleek vehicle and Bal had the rear door open. Gee grabbed his arm as he came out onto the roof deck and the two agents practically tossed him in the back door as they followed him in. He fell into the foot well on his back and the two Altarians climbed on top of him, hiding him from view. They'd pulled their gowns off and used their black fur to make the back seat look like it was in deep shadow. It was a very convincing illusion. The only problem being the fact that Jack now had two naked Altarian females pressing their bodies over his and he began to respond.\n\n\"Can you two get off of me?\" Jack pleaded.\n\n\"Lie still and be quiet!\" Bal hissed and squished him deeper into the well.\n\nThat just pressed her lower breasts harder against his chest and her upper ones against his chin. Gee's stomach was bearing the brunt of his growth. \"That is uncomfortable. Stop it,\" Gee grunted.\n\n\"I would if you two would get off of me!\" he growled. His arm was trapped beneath him and began to cramp so he had to move it. He tugged it out from under his body and felt something wet.\n\n\"Remove your hand, NOW!\" Bal growled.\n\nHe jerked his hand away from her inner thighs. \"Oh god! I'm sorry, my arm was cramping. No offense meant.\" Desperate to get his mind off of the sensations he was feeling with Bal's breasts rubbing him and Gee squirming against his erection he called out to Diana.\n\n\"Are you taking us to the Gate terminal?\" he said.\n\n\"I was but there was a huge crowd of people in front of the building. There was nowhere safe to land and you would never have made it to the entrance. I'm taking you to my place until we can think of another idea. It's secure,\" she answered.\n\nJack struggled to remain calm but his body was heating up. He was sure his musk must be reaching saturation in the closed interior of the vehicle. While they were remarkably disciplined, he was beginning to scent a spicy heat coming from the agents.\n\nBal shifted suddenly and a stiff nipple was pressing against his lips. He gasped involuntarily and it was in his mouth. She clutched his head to hold him still but his tongue stroked the fleshy nub pinched between his lips. Bal made a sound much like a whimper and pressed her tit harder against his mouth. He opened his mouth a little wider and sucked more of her tit inside while his tongue stroked across her nipple feeling it swell.\n\nThis had the effect of making his cock stand at full attention and Gee squirmed to find a more comfortable position for her poked stomach.\n\nBal began trembling and twitching. She was moaning with need so Jack moved his hand back to the wetness and felt her tense up as his fingers slid inside. She didn't say anything this time but just opened her legs slightly to allow him better access. He pumped two fingers deeply into her and he heard her breath gust out in deep panting. Ten strokes later he gently tugged at her nipple with his teeth and her thighs snapped together pinning his hand in place. Bal gushed her orgasm over his hand and unfortunately over Gee's chest.\n\nGee sputtered her indignation then the light in the vehicle dropped suddenly as it swept under the cover of a garage.\n\n\"We're here,\" Diana said over the seat.\n\nGee was immediately moving. She opened the door and slipped out to ensure they were secure. Bal disengaged from Jack and wobbled as she tried to follow her partner. She glanced back at Jack with a troubled look then was outside. He pulled himself out of the foot well, picked up the Altarian's gowns, and climbed out into the interior of a private garage. There was a space next to Diana's for another vehicle but otherwise the space was empty. A door to the house was off to their left.\n\n\"This is a private dwelling?\" Gee asked Diana.\n\n\"Yes, it's just me,\" she replied and Jack noticed her face was flushed. She moved forward and palmed the door open and Gee was inside. Moments later Bal indicated they could enter.\n\n\"We must... clean ourselves Do not leave the house and stay away from the windows,\" Bal said as the two Altarians took their gowns from Jack and stepped into the guest washroom.\n\nAs soon as they were alone Diana crushed herself up against Jack's chest and her tongue was in his mouth.\n\nJack reeled with the incredible sensation of her large tits pressing against him. It had been a long time since he'd felt that. He kissed her back, tangling his tongue around hers as she ground her mound against his cock. His hands dropped to grab her ass and he pulled her tight against himself.\n\nDiana pulled back as suddenly as she'd kissed him and grabbed his hand. She pulled him down the hall and across the house through the door to her bedroom. They frantically took their clothes off as they drank in each other's bodies. She grinned appreciatively when he threw off his shirt.\n\nDiana was all lush curves and smooth skin. She kept fit but not to the point where her softness was replaced by hard planes of her underlying muscles. Her breasts were large and she supported them with a sexy black lace bra which she was just removing. Jack smiled when he saw her large areola and thick nipples. So different from the Altarians. His last article of clothing dropped and she pulled him onto the bed. She slid her body over his and kissed him again.\n\nIt was heaven! Diana was so soft and so much heavier than an Altarian, not that he'd be so stupid to tell her that.\n\nHe rolled her over onto her back and kissed his way down her neck. She moaned and he made note to return to her sensitive neck later.\n\nJack squeezed her breasts in his hands, marvelling at their weight and softness then he took as much of one in his mouth as he could. He teased her nipple with his tongue as he gently scraped his teeth across the areola. Diana grabbed his head and pulled it tighter against her breast. He finally had to push himself away as he was at risk of suffocating in her flesh. He paid equal attention to her other tit and barely escaped losing his life to that one as well. He made his way down her smooth torso.\n\nHe noticed she had a bit of jewellery dangling from her belly button and moved on to the small patch of hair she'd left above her pussy. He pressed his lips to it and Diana moaned and thrust her hips up as her eyes closed.\n\nHe could scent that she was ready and needed no further teasing. He stroked her from bottom to top once with the flat of his tongue and she arched once more as she cried out her pleasure.\n\nJack remembered his female anatomy lessons and brought her to heights she'd never experienced before. Her swollen clit tingled madly as he returned to it again and again only to stop to allow the sensations to calm.\n\n\"Fuck me Jack! Oh God! Fuck me!\" she cried as she clawed at him to climb back up her body.\n\nHe froze, his brain returning to him. \"I don't have a condom!\"\n\n\"I'm on the pill. Get up here and fuck me!\" she growled.\n\nWithout further delay Jack moved up on the bed and slipped his hard cock deep into her wet pussy. He didn't stop until their bodies slapped together.\n\n\"AAAAaaaaaaaaah! Fuck! That felt so good!\" Diana screamed.\n\nJack started up a rhythm as she cried out and pulled at his ass. Then he accelerated until he was hammering her into the mattress.\n\n\"FFFFFUUUUUUUCCCCCKKKKK MMMEEEEE!!!!!\" Diana screamed, her legs flung wide. She looked up at him with a strange expression then she reached up and grabbed his horns. Her smile went crooked and her eyes rolled back in her head. Jack snorted in surprise but unconsciously increased his pace and force until the slamming impacts were becoming brutal and both of them were bathed in sweat.\n\n\"I- I- I'M CU- CUUUUUMMMMMMIIIIIINNNNNGGG! AAAAAAAAIIIIIIIIIEEEEE!\" Diana screamed as her body spasmed under Jack's. He finally allowed himself to release and his orgasm crashed over his senses as he ground against Diana.\n\n\"FuckFuckFuckFuckFuckFuckFuck!\" she squealed as the extra sensation against her clit drove her up and over another precipice.\n\nFinally they were both spent and Diana's hands released their grip on his horns. Jack flopped to the bed beside her.\n\n\"Oh my god! What you did to me! It was so hot!\" she gasped.\n\n\"Yeah, that was pretty intense,\" Jack gasped as he tried to catch his breath.\n\nShe rolled onto her side to watch him. \"That was just what I needed after that drive!\" Diana gushed. \"What were you doing behind the seat? I just got more and more fired up!\"\n\nJack was a little uncomfortable talking about that so he shrugged.\n\n\"Daddy was right, you are the wrong kind of man for me which makes you all the more delicious!\" she giggled.\n\nJack's alarm bells were ringing at maximum volume now. Diana was a rebellious daddy's girl looking for depraved sex tales she could torture her father with. What was more depraved than having sex with a man who had sex with aliens? Who was her 'daddy' anyway?\n\n\"You said your father doesn't like Human-Alien relations. This would likely hurt him greatly. I thought you were trying to mend fences with him!\" Jack exclaimed.\n\n\"Daddy's such a hypocrite! He works on Earth's Security Council Force, deals with Human-Alien relations all day playing the protector yet all he really wants to do is to force every Alien off the planet! He'd gun them all down if he could. He makes me so angry! Why does he have to be like that!\" she began to cry.\n\nJack realized he was in a very bad place. He rolled off of the bed and grabbed his clothes. His pants were coated in Bal's spray. He'd need to clean them but first he needed to clean himself, quick. He smelled of sex!\n\nHe handed Diana a box of tissues then ducked into the bedroom's bathroom and jumped in the shower. He washed the scent of sex from his body and dried off quickly. At the sink he washed the leg of his pants to clean most of the spray off. He dressed and stepped back out into the bedroom.\n\nDiana was sitting on the edge of her bed. She'd slipped her panties and bra on and looked incredible except for the sad look on her face. Jack needed to hide her body from his sight so he brought her the silk dressing gown he saw hanging on the back of the bathroom door. She saw him holding it and stood up so he could help her put it on. She smiled, took his arms and wrapped them around her under her breasts. This pressed her ass against his groin and his cock immediately woke up.\n\n\"Mmmm! Looks like someone is glad to see me!\" Diana moaned.\n\nJack pulled himself away. \"We don't have time right now, Diana. I have to get back to Altaria.\"\n\n\"That's it? You seduce me, make love to me and toss me aside?\" she pouted.\n\n\"Seduce you?!? You were the one who dragged me across your house to have sex!\" Jack exclaimed.\n\nHer pout got deeper. \"OK, but, it was the best I've ever had and I don't want you to disappear from my life!\"\n\n\"It was really great sex and I think you are incredibly beautiful and sexy but I'll be honest. I'm worried you're just using me to punish your father.\"\n\nHer expression went from angry denial to confusion to embarrassed acceptance in quick succession. Jack saw that for all her 'daddy' talk, the woman had a brain in that beautiful head and could use it. He relaxed a little.\n\n\"Earth Council Security Forces have arrived to take us to the Gate terminal,\" Gee said, standing in the open doorway. \"Are you finished having sex? May we leave?\"\n\n\"DIANA!\" came a shout from down the hall.\n\n\"Daddy?\" she replied.\n\nJack looked at Diana in shock. \"YOU CALLED HIM?!?\"\n\n\"No!\"\n\n\"Bal contacted the Earth Council to get us secure transport to the Gate terminal. They said they'd be here in twenty minutes but they arrived in fifteen.\"\n\nThere was a loud bang. A gunshot! Gee spun and saw a man holding his eye running towards the bedroom. Her hands moved too fast for Jack to follow them but he heard a scream of rage. Gee shot out of the bedroom and Jack surge forward after her.\n\nOnce he got to the door the scene burned into his mind.\n\nFar down the hall Bal lay crumpled on the floor.\n\nGee was fighting a man with body armor whose eyes were tearing badly. His ability to see must have been impaired by something.\n\nThe man wasn't going down under Gee's kicks and punches. His body armor was too strong.\n\nGee kept doing something with her hands and the man kept his hands up to protect his eyes.\n\nJack wasn't even aware he was racing down the hall at the man until the scream of rage burst from his throat.\n\nThe man was fast. He snatched a gun from his hip and fired it in the direction of the scream but Jack had dipped his head down. The bullet deflected off his horn and screamed off into the ceiling as he charged forward.\n\nJack hit the man's face with his horns and there was a sickening crack as bones broke. He collapsed like a rag doll with Jack falling over him. Once they both landed Jack scrambled away from him and rushed down the hall to see Bal. She was breathing but there was a bullet wound through her side. Two more Security Forces troops rushed into the house and yelled for everyone to freeze.\n\nJack yelled for them to get a stretcher.\n\nThe first man through the door turned to him and recognized him. \"Ambassador Danner! What is the situation sir?\"\n\n\"That man is the father of the home's owner. He's also a xenophobe. He shot Bal here and attacked Gee. He also shot at me but I knocked him down. I need to get my friend back to Altaria NOW!\"\n\nDiana came out of the bedroom and saw her father. She screamed and ran to his side. Gee didn't block her as she'd already removed and disarmed all of his weapons.\n\n\"I'm sorry about your father Diana but he was going to kill us,\" Jack said gently as he waited for the stretcher for Bal. His last sight of the beautiful woman was her crying on her father's chest.\n\nThe trooper returned and Jack and Gee secured her to the floating platform. They rushed out of the house and into the back of the large truck. They flew with emergency priority over all other traffic back to the Gate terminal. Jack saw the large angry mob waiting outside of a security barricade that had been set up around the building. He was sickened by the small minded reactions of these fearful people.\n\nThey had called ahead so once they parked directly in front of the terminal they went straight to the Gate room and through to Altaria. An Altarian security team was waiting on the other side and exchanged stretchers with the Earth Forces who went back through the gate to Earth.\n\nThe next minutes were a chaotic blur as the group was rushed to the hospital. Bal was rushed off to an operating theatre and Gee and Jack were moved to separate treatment rooms where they were attended to. Gee just had bruising so she came to find Jack. Three doctors were inspecting the point where the bullet had deflected. They passed some devices over the spot until Jack had had enough.\n\n\"What?\" he finally growled.\n\n\"The underlying structure of your horns is very resilient. It is healing and will be back to full strength likely in a few days. The outer surface is exceptionally dense. The silver streak the bullet left behind appears to be residue torn from the bullet. It's pure silver!\"\n\n\"He had his handgun loaded with silver bullets?!?\" Jack exclaimed.\n\nGee looked at him closely. \"Is the choice of that metal significant?\"\n\n\"It proves his xenophobia at the very least. At most he was a fucking lunatic! On Earth silver bullets were supposed to be the only way to kill mythological monsters called Werewolves. They don't exist and the whole thing is based on a make believe story. You and Bal should join me for movie night and we can watch some old classic horror stories like 'The Werewolf' or 'Frankenstein'.\" Gee gave him a rare smile.\n\nThinking of Bal Jack turned to the doctor. \"Can we leave now? We need to check on Bal.\"\n\nThe doctors nodded so Jack and Gee went looking for her. They found a doctor outside of the operating rooms who said Bal was currently in surgery and they'd need to take a seat. They sat side by side and waited. Jack suddenly remembered Gee's rapid hand motions during the fight.\n\n\"Gee, what were you doing with your hands that was causing that guys eyes to water so badly?\" he asked quietly.\n\nShe held open her palm and in it were three translucent rubber bands.\n\n\"You were shooting him in the eyes with rubber bands?!?\" he gasped.\n\n\"Very effective eye irritant!\" she said quietly.\n\n\"Sure if you are as accurate with them as you seem to be.\" He picked one of them up and examined it. He didn't recall seeing this kind of rubber band in the bag. \"Where did you get these?\"\n\n\"Tailor shop, back room. Bal got them,\" Gee said looking towards the doors.\n\n\"You only have three left?\" he asked. She nodded looking up at him.\n\nJack realized how close that fight had been.\n\nGee reached up and rubbed the silver streak on his horn. It seemed to be permanent. \"I like your accessorizing. Looks good against the black of the horn,\" she said with another rare smile. He smiled back and nodded.\n\nThe doors opened and a doctor came out looking for them. They immediately stood and walked to her.",
        "\"Hello, I'm Maurra. I worked on Bal. She's going to be fine. She's lost some blood but the bullet missed her internal organs and only broke a rib. We got all the pieces and bonded them back in place. She's going to need to take it easy for a month but she'll fully recover.\"\n\n\"Can we see her?\" Jack asked.\n\n\"In a few hours. She's still sedated and needs to recover from her blood loss. If you'll excuse me,\" Maurra smiled and moved away.\n\n\"Thank you doctor!\" Jack called out and received a smile as she went back behind the doors.\n\nThere was a commotion from down the hall near the elevators and they watched two ebony furred agents moving in their direction followed by the Minister of Security Hellna, a light tan furred female he didn't recognize, and three male Altarians.\n\nJack was surprised as he'd never seen more than one male at a time. Aside from the male schools he didn't think they liked to be near each other. It was some kind of competitive instinct. He noticed they were each wearing a necklace with a small metal ball containing what looked like leaves. To Jack they looked like those tea leaves infuser you dunked in a cup of hot water. Maybe the smell let them tolerate other males.\n\nThe group stopped before Jack and Gee and he saw Hellna looked uneasy.\n\n\"Hello Jack.\"\n\n\"Hi Hellna, what's up?\"\n\nShe glanced at the three males who were looking rather smug.\n\n\"These three males represent 'The Enlightened Consortium of Male Altarians' also known as TECOMA and in light of the fact that the Queen has announced you as her Consort-\"\n\n\"OH MY GOD! I forgot Elissa was having our child! How is she? How is the baby?\" Jack interrupted.\n\nHellna held up her hands to calm Jack and smiled. The three males lost their smug expressions and were beginning to look indignant at being ignored.\n\n\"Queen Elissa is well and blissfully happy. Your... second son is doing very well. Perfectly healthy and absolutely beautiful!\"\n\nThe males made impatient sounds to get her back to their point.\n\n\"Don't get your panties in a bunch boys, Hellna and I are discussing important stuff here. We'll get back to your COMA party soon enough. When can I see her?\" Jack was looking away so he missed the look of outrage on their faces.\n\nThe woman he didn't know stepped forward. \"Hello, Ambassador Danner. I'm Narelle, Minister of Justice. That's actually what we're here to discuss. Your right to be Queen's Consort has been challenged. It's an ancient law but the challenge has been legally registered and we must follow it to the letter.\" She gestured to the male in front to step forward.\n\n\"I am Lunnae, lead speaker for 'The Enlightened Consortium of Male Altarians'. We do hereby serve notice of challenge to one Jack Danner of Earth that he must defeat us in unarmed combat to prove he is worthy of being the Queen's Consort.\"\n\nNarelle nodded. \"The challenge has been properly issued.\"\n\nGee took that moment to step forward and stare down the males. \"Do you realize we've just returned from Earth where Jack challenged an armed and battle trained Human soldier in body armor and Jack defeated him? That streak of silver on his horn? The remains of a silver bullet, the fabled ammunition used against Earth's most feared monsters! Jack. Will. CRUSH. YOU!\" Gee screamed and Jack reached over to pull her back to his side. He was stunned by her rage. He'd never seen an angry Altarian and it was just a little bit frightening... and strangely endearing. Gee breathed in pants as she glared at the males who all looked like they desperately wanted to be somewhere else right now.\n\nLunnae finally got control over his flight impulse and turned a weak smile towards Gee. \"His brutish size is not being disputed. He must complete the challenge or face the consequence.\"\n\nJack was getting impatient. He wanted to go see Elissa. \"OK, fine. Line up and I will knock you three down and we can be done with this.\"\n\nNarelle had an uncomfortable look on her face. Jack looked to her. \"What?\"\n\n\"I'm sorry Jack. It doesn't work that way. The challenge was registered by TECOMA. You must defeat all of their members.\"\n\n\"How many is that?\" he asked.\n\n\"We are 245 members strong,\" Lunnae grinned.\n\nJack looked at him incredulously. \"You managed to get 245 males to join your little boys club? Wow! Good for you!\"\n\nLunnae smiled with pride then he heard the insult. His smile turned to a look of anger. \"How I loath you!\"\n\nJack grinned then his grin got really wide. \"Wait a minute! You're Denee's Lunnae, aren't you! You already have an axe to grind with me, don't you!\"\n\nHellna stepped forward with an outraged look at Lunnae. \"Axes are NOT allowed in this challenge! Seize it!\" she told the guards.\n\n\"What?\" Lunnae squeaked.\n\nThe two ebony guards moved to him and roughly searched his person while he screeched and yelped.\n\n\"Sorry, 'axe to grind' is just an Earth phrase that means he has an ulterior motive. He has an issue with me because he didn't meet Denee's... sexual expectations. I mean after she'd been with me. Denee was indiscrete and told him this.\"\n\nHellna smirked and looked back at Jack. \"His reasons for filing the challenge do not matter in this instance. The challenge was legally registered and issued.\"\n\n\"Fine! Let's do this!\" Jack barked. He stood a ways from the group and gestured for Lunnae to come at him.\n\n\"First Challenger?\" Narelle called out.\n\nThe male hiding behind Lunnae was pushed forward until he stood facing Jack.\n\n\"State your name for the record,\" Narelle said.\n\n\"Liolla\" he squeaked, trembling. Jack dropped his fighting stance. This was pathetic.\n\nNarelle looked at both of them. \"Begin.\"\n\n\"FORFEIT!\" Liolla screamed and dropped to the ground in a ball.\n\nJack looked at him incredulously then looked over at Hellna.\n\n\"First battle goes to Jack Danner of Earth,\" Narelle intoned officially.\n\n\"Well... that was easy,\" Jack mumbled. Liolla was still trembling on the floor. \"Next,\" Jack said.\n\nNarelle's expression became pained again. Jack rolled his eyes. \"Now what?\"\n\n\"The challenge was registered for each battle to be scheduled on their own day,\" she stated.\n\n\"One a day?!? That's 244 more days!\" Jack growled.\n\n\"On behalf of the remaining 244 combatants I hereby register the requirement of the Abstinence Clause,\" Lunnae said springing his trap. His face split into a wide evil grin.\n\nJack looked at the male in confusion. Then he looked over at Hellna whose face was going through a series of emotions. Shock, dread, rage, and finally despair. She looked over at Jack with sad eyes.\n\n\"I'm sorry Jack. He's legally able to request this and it must be complied with. She looked at Narelle who continued the point.\n\n\"I will assign you a Judge who will remain with you during the remaining 244 days. They are never to be outside of your immediate vicinity. If you are separated from your Judge you will forfeit. The clause which has been enacted requires you to remain on Altaria and refrain from sexual congress. Should you have relations of a sexual nature with a female, you will default and forfeit.\"\n\n\"What exactly is the penalty of forfeiting?\" Jack asked. He had no idea what being a Consort was so maybe it wouldn't be so bad to lose it.\n\n\"Banishment from the lands owned by the female the challenge was issued for,\" Hellna uttered.\n\n\"You MONSTER!\" Gee leapt at Lunnae but Jack caught her.\n\nHellna nodded sadly. \"Yes Gee, in this case the female is the Queen so Jack would be banished from Altaria and all Altarian worlds. To return would mean his death.\"\n\n\"You didn't see the mob on Earth wanting Jack to be killed just because he'd had sex with an Altarian. Earth is no longer a safe place for Jack either,\" Gee growled. Jack was really starting to worry about her state of mind. Gee pulled away from his hands but she remained by his side.\n\n\"Hey! I don't know why there are so many gloomy faces. It's just 244 days. I've gone without sex for longer than that before. It wasn't fun but I did it!\" Jack grinned.\n\nHellna walked up to him and took his hands. \"Jack, were you told that you're emitting male musk? It tells us how healthy you are, how you rate as a mating companion, and sometimes as in your case it's a score card. We know you've been very, very... very popular. Going from that to nothing is... well, it's not possible.\"\n\nJack looked at Lunnae and saw his vicious glee.\n\nHe pulled his hands back from Hellna's and walked over to the male who looked up at him in defiance.\n\n\"Go ahead, strike me. Forfeit now!\" Lunnae said with a tremor in his voice.\n\nJack grinned at Lunnae. \"I'm not going to hit you. I'm going to outlast you... again.\" He grinned at the look of suppressed rage on the male's face. He turned his back on the male and walked back to Narelle. \"Hook me up with a Judge and let the games begin.\"\n\nNarelle spoke with someone on her phone and once she hung up she turned to Jack. \"Judge Aaros will meet you at your apartment tonight.\"\n\nJack snorted. \"Did you say Judge Eros?\"\n\n\"That sounds similar but I said Aaros. What is Eros?\" Narelle asked.\n\n\"It's a word from an ancient language on Earth that means the expression of sexual love. Seems kind of contrary to have a Judge named that considering her job will be to ensure that the expression of sexual love doesn't happen.\"\n\nHellna looked like she was ready to leave. \"Gee, you need to be debriefed about today's activities. You will come back to headquarters with me,\" she said. Gee frowned then nodded and walked over to her boss. Jack shared Hellna's look of concern about Gee.\n\nThen her worried look was for him but she shook his hand and headed back to the elevators with Gee.\n\nNarelle got Jack's attention. \"These agents will be your chaperones back to your apartment. They will ensure you do not default. They will also be your protection detail until Gee and Bal are both able to return to service.\" She hesitated. \"Whenever that will be.\"\n\n\"I want to see Queen Elissa,\" Jack said.\n\n\"That won't be possible tonight. She is back at her residence and you need to go to your apartment to meet the Judge. You should call her when you get home.\"\n\nJack looked at the three males. \"I don't have to bring these wankers with me do I?\"\n\n\"Why did he call us wankers?\" Liolla whined at Lunnae.\n\n\"What's a wanker?\" the quiet male finally spoke.\n\n\"Shut up fools! Don't give him the satisfaction! I don't know what a wanker is... but it can't be good!\" Lunnae spat.\n\nNarelle ignored the bickering males. \"No, their business with you today is almost done. They must announce to you the time and place for the next battle and it must be within a day. If they fail to provide an opponent within that time they forfeit. If their opponent does not appear and they do not replace him with someone else from the list then they forfeit.\n\n\"We will meet Jack Danner at 10AM in the courtyard in front of the Embassy,\" Lunnae sneered.\n\n\"See you then, Tinkles,\" Jack said hearing an angry growl in response. With a nod to Narelle he made his way to the elevator. He had some calls to make.\n\nChapter 3\n\n\"What do you mean you can't come to see your son?\" Elissa said using her monarch voice.\n\n\"I'm kind of under house arrest at the moment. I'm waiting for a Judge to come to my apartment to begin her babysitting session. Which will last 244 more days apparently.\"\n\n\"I don't understand why you need a Judge to watch you. What have you done?\" she asked with a pout.\n\n\"It's actually what we did. We had a child which apparently made me your Consort. This pissed off a certain group of Altarian males but especially one who filed a challenge against me as Consort. Unarmed combat against all 245 of them, one a day for 245 days.\"\n\n\"Jack, Altarian males are no match for you!\" she purred.\n\n\"That's what got me in this trouble. They also filed an Abstinence Clause. No sex with females until the end of the challenge.\"\n\n\"WHAT!?!\"\n\nJack leaned back from the screen. The Queen's outburst was a little more emotional than he expected.\n\n\"THAT WON'T DO! Jack, I want another baby!\" she cried.\n\n\"What? But you just had one!\" Jack exclaimed.\n\n\"Yes, but to keep the ages close I want to immediately get started on having a girl like Leffera is having!\" the Queen complained.\n\n\"Leffera's having a girl? I'm having a daughter?\" Jack asked, stunned.\n\n\"Oh! I'm sorry, maybe I wasn't supposed to say anything until Leffera mentioned it,\" she said, looking contrite.\n\n\"I'll be speaking with her shortly,\" Jack said, pulling himself together. \"Listen, I don't think there is any way out of this challenge but to play it out. The next time I get to have sex is 244 days from now.\"\n\n\"244?!? I heard 24 days which would have been tortuous enough. Oh Jack, you're not going to last!\" she gasped.\n\n\"Wow! Thanks for the vote of confidence!\" he growled.\n\n\"It's not a lack of confidence in you Jack. It's simple biochemistry,\" she tried to explain.\n\n\"Yeah, whatever. Listen I will try to visit as soon as I can. I want to see my son. Have you named him?\" he asked.\n\nElissa looked a little bashful. \"Actually, I was hoping you would have a good name for him, like you did for my grandson.\"\n\n\"I do have a name but I need to see him to see if the name fits him,\" Jack explained.\n\n\"Wait! I'll get him!\" Elissa jumped up and rushed from the room. Jack was left looking at the empty room. He heard a cooing sound as Elissa walked back into the room with a bundle in her arms. \"Jack, may I present to you, our son.\" She held the tiny baby up to the camera.\n\nOnce more he couldn't get over how tiny Altarian babies were. He was squirming a little and made a cranky face. Jack started to cry silent tears as he smiled at the little miracle.\n\n\"Jack? Are you sad?\" Elissa asked, surprised.\n\n\"No. These are tears of happiness. He's perfect! He just made a face that reminded me of my grandfather. If you wouldn't mind I'd be honored if we could name him Max,\" Jack explained.\n\n\"Such a short name!\" she said and Jack could hear the question and hope in her tone.\n\n\"Yes, that's the version friends and family use. The formal, full version is Maximilian,\" he said and smiled at the look of surprise and excitement on her face.\n\n\"Maximilian! That is a perfect name for our son! So grand and proper for a Prince! It has that unique sound in the middle yet rolls off the tongue!\" Elissa gushed. \"Oh thank you Jack! You've made me so happy! I cannot begin to tell you!\"\n\n\"I'm glad I could give you this as that other happiness is going to have to wait,\" Jack said.\n\n\"We will see!\" the Queen said, her regal voice back. \"I will speak with you tomorrow. Sleep well!\"\n\nJack was left looking at the blank screen as she hung up.\n\n\"Good night, Max,\" he whispered to himself.\n\nHe ran his fingers back through his hair and realized he still had the rubber band tying it back. He tugged it off and shook his hair out. God! It was getting long! He dropped the band on his dresser.\n\nHe walked out of the bedroom to see the two agents sitting comfortably in his living room.\n\n\"No sign of the Judge yet?\" he asked.\n\n\"Five minutes out.\" The one sitting in the chair by the window said. They hadn't offered their names and when asked they just stared at him. He recalled Gee and Bal's stiffness at first but they showed some personality at least.\n\nIt was getting close to 10PM and Jack had a special call to make with Leffera. He'd need his privacy for that one but he needed to be sure that he wasn't going to default based on a technicality.\n\nJack found himself needlessly tidying his tidy apartment and realized he was doing it because of the judge who was going to be there any second.\n\nThe two agents got to their hooves and went to the front door. Jack hadn't heard anything but they opened the door. The judge was standing in the doorway framed by the two ebony agents which may have been why her white fur seemed to shine. Or it could have been the fact that she was standing under the ceiling light. Regardless of the cause the brilliance of her white fur was jarring. He knew intellectually that the monochromatism genetic mutation which caused the agents to be entirely black from their fur to their eyes also produced the opposite, a completely white Altarian. He just hadn't been prepared to see one in person. She stood in the doorway staring at Jack with the same look of surprise.\n\n\"Horns!\" she said.\n\nThis was enough to jar Jack out of his stupor. He moved closer. \"Yes, hi! I'm Jack Danner, the human with horns.\"\n\nShe squeezed her eyes closed. When she reopened them she seemed calmer, more controlled. \"My apologies Ambassador Danner. Of course. Please forgive my rudeness in staring and blurting out the obvious. I was caught unprepared.\"\n\n\"As long as you forgive my rudeness at staring. I also wasn't prepared to meet someone with your unique coloration. It's quite beautiful! I mean you're quite beautiful!\" he stumbled.\n\nHer eyes snapped to his and he could see she was looking for something in his expression or tone. When she saw he was just giving his honest opinion she smiled sweetly then shook the expression from her face.\n\n\"I am Judge Aaros. It will be my duty to ensure you abstain from sexual contact with females for the next 244 days or until the challenge is withdrawn by the applicants.\"\n\nJack nodded.\n\nThe agents nodded to the judge and looked at Jack. \"We will be back in the morning to take you to work.\"\n\n\"Uh, I want to get back to my morning exercise routine. I run a few miles at a pretty brutal pace for Altarians.\" He looked at the judge. \"Apparently I have to keep you in my vicinity. How is that going to work?\"\n\n\"I can follow you on my personal skimmer. I rode it to get here tonight,\" she replied.\n\nJack turned back to the agents. They were giving him smug looks. \"We can keep up.\"\n\n\"OK, but don't say I didn't warn you. You may want to talk to Gee about it. I start at 7AM,\" he said. With matching smirks the agents left.\n\nJack glanced at the time. Just about time for the call. He walked into the apartment with Aaros following.\n\n\"I need a point of clarification. When the rule states I cannot have sex with females may I assume this means sex where both partners are within physical proximity and are able to touch each other?\" he asked carefully.\n\nThe judge looked at him askance. \"Of course! What else could it have meant?\"\n\nA tone from the bedroom announced an incoming call. \"That would be a friend of mine calling. We were going to have phone sex.\" He began to blush.\n\n\"Phone sex?\" she said, confused.\n\n\"Hold that thought.\" Jack walked into the bedroom and answered the call.\n\n\"OH THANK GOODNESS! I thought you were going to make me wait until the morning! I'm going crazy here!\" Leffera gushed.\n\n\"Hi Leffera! Hold that thought a minute. I have a court assigned roommate I have to confer with before we can proceed,\" Jack said and watched her eyes go wide as Aaros walked into the camera's view. \"Leffera, this is Judge Aaros. Judge Aaros, this is Leffera.\"\n\nThey exchanged hellos and the judge turned back to Jack. \"How do you intend to have sex with your communication device?\"\n\n\"Well, first off I don't intend to have sex with the device. We will touch ourselves while watching each other.\"\n\n\"Ooooohhhhh Jack! You're going to be naked too!?! This is going to be better than I thought. I may have to come over there afterwards to clean you though!\" Leffera moaned.\n\n\"Actually you can't. Long story short, my role as Queen's Consort is being legally challenged by a group of males and one of the conditions is I must abstain from sex with females until the challenge ends. 244 days from now,\" Jack explained.\n\n\"OH MY GOD! JACK, YOU'LL NEVER MAKE IT!\" Leffera yelled in dismay.\n\n\"What the hell is it with everyone having such a low estimate of my willpower to resist sex?\" Jack growled.\n\nLeffera began to cry.\n\n\"Ah, please don't cry! It's going to be ok! I swear it will,\" Jack pleaded.",
        "Leffera just cried harder, shook her head and the call ended.\n\nJack looked at the blank screen in surprise. \"At this point I would normally go to her apartment and cuddle her until her tears stopped then we'd make love for an hour. Or two.\"\n\nThe judge scented Jack and looked at him. \"I fear she may be right.\"\n\n\"What? Not you too! I've gone without sex for extended periods before,\" he complained.\n\n\"It will be easier for you to understand by experience so let's just wait to see how you feel in the morning. Is this where you sleep?\" she asked.\n\n\"Yes.\"\n\n\"The platform is very large. There is room for us both,\" she said inspecting his bed.\n\n\"WHAT?\" he yelped.\n\n\"I must keep a close eye on you. If you leave the bed I will know. If you attempt to have sex with me you will default,\" she said in a matter of fact tone.\n\nJack just looked at her. \"You're here to make sure I don't sneak away to have sex. So you'll have to be with me 24 hours a day, always within sight, including bathroom breaks?\"\n\n\"If there is an alternate egress in the bathroom I will have to be inside the room to make sure you do not avail yourself of it or have a female join you through it,\" she explained.\n\n\"OK, fine. I just think it's cruel and unusual punishment to make me sleep next to a stunningly beautiful female whose job is to ensure I'm not having sex.\n\nShe squirmed then looked sternly at him. \"DO NOT think of me in those terms!\"\n\n\"I'm sorry. I'm just saying you're making this very hard for me,\" he apologized.\n\nShe mistook his meaning and glanced down and saw he was in fact very hard. She froze. He caught the motion of her eyes and realized what he'd said.\n\n\"No! I mean the situation, the situation is very hard,\" he stumbled then sighed.\n\n\"Listen, I'm sorry about how all this got started. I, uh, have to go take care of this. I guess my body was expecting a little excitement with Leffera tonight. I'm allowed to touch myself, right?\" he asked.\n\nShe nodded stiffly.\n\nHe moved towards his bathroom.\n\n\"Is there a window to the outside in that bathroom?\" he heard over his shoulder.\n\nHe stopped. \"Yes.\"\n\n\"Then I must be in the room,\" she said with finality.\n\n\"OK. Maybe I'll take a hot shower. The steam will give me a little privacy at least.\"\n\nHe took his clothes off with his back to her and grabbed a pair of clean boxers for after his shower. He dumped his dirty clothes into the hamper, placed the boxers on the counter then stepped into the shower. He got the water running and saw Aaros was sitting on the toilet seat facing away. Once the water was at the temperature he needed he turned his back and washed the days sweat and dirt from his body.\n\nOnce he was clean he turned his attention to his straining erection. It was hard as rock and he was overly aware of the beautiful Altarian sitting a short distance away. He lathered himself up and slid his hands over his cock. He wobbled on his feet and flung a hand out to catch himself. He thumped the glass of the shower with a dull thud. Jeez! He was a little more excited than he thought. A few more strokes and he achieved his release. He leaned back and let the water cascade over his head and chest washing away the suds. The edge was off and his erection subsided but there was still a background pressure, like he could easily get another erection. He pushed it from his mind and opened his eyes... to see Aaros standing next to the glass. He yelped and turned his back on her.\n\n\"What the hell are you doing there?\" he yelled.\n\n\"I- I'm sorry! You looked like you were falling and- and I got up to see- if you were ok,\" she stumbled through her explanation as she turned her back on him as well.\n\n\"When you saw I wasn't falling why didn't you go back to your seat?\" he growled.\n\n\"I- I don't know! I'm sorry! I guess I've never seen a male do that!\" she growled back.\n\n\"That does NOT count against me! I wasn't even aware you were there until afterwards!\" Jack barked.\n\n\"Of course it doesn't!\" she barked back.\n\n\"I'd like to dry off now,\" he said.\n\n\"Go ahead,\" she replied.\n\n\"You're in front of my towel,\" he growled.\n\nAaros pulled the towel from the hook and threw it on the floor next to the shower. He scowled and bent to pick it up. He dried himself quickly and snatched up his boxers and pulled them on. He was dismayed to see he was tenting them. He looked over and saw her sleek legs, delicate hands and fine features...\n\n\"Dammit! That's not fair!\" he growled.\n\n\"What?\" she said as she looked at him and noticed his condition.\n\nJack opened his mouth but realized there was just nothing he could say. \"Never mind. I'm going to bed.\"\n\nThey went back into the bedroom and Jack climbed into bed. He pulled the covers up over himself and turned his back on Aaros. He felt her settle gently on the bed and did his best to put her from his mind. He turned his mind to the run he was going to do the following morning. Constraining his thoughts to this he was able to calm himself enough to let sleep take him under.\n\nJudge Aaros wasn't so fortunate.\n\nWhen Jack woke the following morning he felt the delicious softness of a female form squeezed up against his back. His morning wood was epic and he grinned thinking of Leffera. Then it all came crashing back on him. The female currently spooning him was not only off limits she was supposed to be ensuring he didn't do this.\n\n\"Judge!\" he barked loudly.\n\nShe snorted on his neck as she jolted awake. She stretched sleepily, pressing her stiff nipples against his back. Then she came to her senses and realized where she was and what she was doing. She frantically pushed against Jack's broad back to get back to her side of the bed. She saw Jack was right up against the edge on his side having been pushed there by her. She was terribly embarrassed.\n\n\"I'm so sorry Jack! I had trouble falling asleep last night. I feel remarkably good this morning though! How are you?\" she babbled nervously.\n\n\"How do you think I feel?\" he growled and threw off the sheet. He was sticking through the fly on his boxers and she got a good view of it before he noticed and tucked himself away. \"It's almost time for my run. The talkative twins will be here soon.\"\n\nJack pulled his running shorts out of the drawer and took a deep breath. He gave himself a few personal mantras to settle himself. Make the best of it. You can do this! For my kids! That last one was the most effective.\n\nHe dropped his boxers and stepped into his shorts. The elasticized pocket to hold himself in place was helpful but his erection was very obvious in the shorts. He pushed that from his mind and finished getting dressed.\n\nHe walked out into the living room and Aaros followed him out. He headed into the kitchen and pulled a shake out of the fridge. Aaros looked at him curiously. \"This is energy food for my run. We can get breakfast afterwards,\" he explained and quickly drank the shake. He tied his runners on and did his stretches. Soon he was feeling limber and ready to go. He pulled his music player on his arm and put his earphones in. He pressed a button on the player and turned to Aaros.\n\n\"Judge, say a few words to train my player to recognize your voice.\"\n\n\"Hello, I am Judge Aaros. I work for the Ministry of Justice,\" she said and Jack nodded.\n\n\"OK, if you talk to me the earphones will allow your voice to override my music.\" He looked at the clock. It was past 7AM. \"I'm not waiting any longer. I have a schedule to keep.\" He headed downstairs with Judge Aaros at his heels. Jack waved to the concierge and the building's security team who gave him some curious looks.\n\nAaros' personal skimmer was parked on a small pad next to the front door, charging. Jack waited for her to get it started. It rose a foot off of the ground as she stood on it and gripped the controls. She spun it skillfully and faced Jack with a smile. She paused and Jack looked to see what she was seeing. The two security agents had finally arrived and they were riding their own skimmers. Jack waited for them to park them but they just gestured for him to begin. So they were going to ride too. Jack walked over and recorded their voiced on his player as well. Then he started jogging.\n\nAfter a few minutes Jack could feel his muscles loosen and he picked up the pace from a jog to a run. He had so much energy. He realized it was sexual tension. He used that in his run and drew from it. Pretty soon he was running at a ground eating pace. When the return tone chimed in his ear he became aware of his surroundings again and realized he'd lost track of his route and was deeply into unfamiliar territory. He looked back at Aaros and she pulled up beside him.\n\n\"What is wrong?\" she asked curiously.\n\n\"I wasn't... paying attention... to where I... was running... I have no... idea how to... get back... I've never... run this far... before,\" he gasped chagrined.\n\nHer eyebrows rose in surprise. \"Follow me then.\" She swept her skimmer in a circle and headed back. Jack ran behind her but this time his mind wasn't roaming free. His eyes took in her graceful curves and her beautiful white fur. Unconsciously he was picking up his pace as he chased the female. She glanced back and was surprised to see him catching up. She took in the play of his powerful muscles and noticed the grin on his face showing his sharp white teeth. Teeth of a predator. She subconsciously started to increase her pace to escape her chaser but he just ran faster.\n\nPersonal skimmers weren't meant to be pushed that fast for this long and the power consumption was eating into the battery quickly. Unknown to Aaros there was a fault in the power coupling of her skimmer and it began to superheat the battery.\n\nJack suddenly scooped Aaros into his arms right from the deck of the skimmer with a bark of wild laughter. She bleated in fright as she released the controls. The skimmer accelerated then suddenly veered off the trail and the battery blew explosively. The lower half of the skimmer's base shot downwards to shatter against the ground while the foot platform and controls were launched skywards. Jack and Aaros watched the section of the skimmer that would have carried Aaros up into the sky fly in a fatal ballistic arc. Jack slowed and stopped as the foot platform crashed down onto the path up ahead. He noticed Aaros was staring at him in shock.\n\nHe gently set her down on her hooves but she was a little wobbly so he kept a hold on her arm.\n\n\"I'm terribly sorry. I don't know what came over me there when I was chasing you,\" Jack said, embarrassed. \"Are skimmers supposed to explode like that?\"\n\n\"They aren't supposed to go that fast for that long. That said it should have just run out of power not explode,\" she answered.\n\nA Ministry of Security van landed beside them on the path. The two agents jumped out of the side door. \"What happened?\"\n\n\"My skimmer's battery exploded. Luckily Ambassador Danner collected me from it seconds before it did,\" Aaros explained. Jack looked at her as that story skipped over the part about how he was chasing her and caught her.\n\n\"What happened to you two?\" Aaros asked, changing the subject.\n\nThe two agents looked frustrated. \"Our skimmers ran out of power and we couldn't keep up. We called headquarters and they dispatched the van to collect us and follow you. Looks like your run is over.\" One of the agents remarked.\n\n\"But I still need to run back!\" Jack barked.\n\n\"Judge Aaros doesn't have a skimmer and you mustn't be separated,\" the agent remarked.\n\nAaros nodded and Jack's shoulders slumped. He followed her into the van as the agents collected the bits of her skimmer to find out why it exploded. Once everyone and everything was in the van they flew back to his apartment in silence.\n\nJack and Aaros went up to his apartment while the agent waited downstairs. Once inside Jack turned to her. \"Thank you for not mentioning how I was chasing you. I can't really explain why I was doing that. It just felt... instinctual.\"\n\n\"Please try to control your instincts,\" she admonished.\n\nHe nodded. \"I'm going to take a shower.\" She made to follow him and he abruptly stopped. \"You know this makes no sense. How could there be a law to keep a male from having sex yet a female judge is assigned to follow him so closely!\" he said in frustration.\n\n\"At the time this law was written and was practiced our society had male judges and you would have been assigned one. Back then males took a greater role in our society and were represented to some extent in almost every occupation but there was a change in the ratio of males to females and society changed in reaction. Males just stopped taking on these roles,\" Aaros explained.\n\n\"What was the ratio before the change?\" he asked.\n\n\"I believe it was 8 to 1 and it moved to 10 to 1 over a few generations. There was some debate over the cause but the most popular theory was that it was due to a temporary change in solar radiation that altered the genetics of a generation causing fewer male births. That's not really my field so I'm not sure if I got that right,\" she smiled.\n\nJack proceeded into the bedroom and grabbed some tighter briefs. He needed more support with his damn constant erection.\n\nHe did his best to put Aaros' presence out of his mind and just got ready for work. He dropped his workout clothes into the hamper and climbed into the shower. He spotted her sitting on the toilet lid again and he just got the water running. A few minutes later he was clean. He skipped relieving his erection as it hadn't really helped much the day before.\n\n\"You are unable to release that pressure, aren't you,\" she said as he passed by, tenting his tight underwear.\n\n\"I don't want to talk about that with you, please,\" he said.\n\n\"I need to shower as well. You need to stay in here,\" she insisted.\n\nJack reached into the linen closet and brought out one of his larger towels he kept on hand for the ladies who stayed overnight. With their fur, it took more towel to dry themselves. He handed it to Aaros who had already disrobed. He sat on the toilet and looked out the bathroom door. He did his best not to imagine her naked wet body in the shower but by the time the water shut off his cock was like iron and his balls ached. He had to get control over his sex drive. Mind over matter, DAMMIT!\n\nWhen she was ready they entered the bedroom and Jack got dressed. He led her to the kitchen where he made them both breakfast. He cleaned up afterwards and they headed downstairs. They walked to the Trade Commission building as he had his morning appointments to cover, with the short interruption at 10AM. He'd have to bump a few presentations around that 10AM nuisance.\n\nThe agents once more remained outside while they went up to the office. The Judge insisted on entering the office first but he had to stand at her back. When the all-white female stood in the entrance of the office activity suddenly stopped. She had their full attention. They didn't initially notice Jack standing behind her. Jack noticed that Leffera's desk was unoccupied. He worried about that.\n\n\"I am Judge Aaros. I was appointed by the Ministry of Justice to ensure Earth Trade Representative Jack Danner abides by the rules of the legally filed and issued Challenge against him. If he defaults on this the penalty is permanent banishment from Altaria and all Altarian worlds. I trust we will have your full support in ensuring Jack Danner does NOT default!\" she said firmly looking each of them in the eye.\n\nMella stepped forward. \"What is the Challenge and who filed it?\" she said fiercely. Jack smiled.\n\n\"As Jack has been named Queen's Consort, a group of 245 males calling themselves 'The Enlightened Consortium of Male Altarians' or TECOMA for short, claim he is unworthy of the title and has filed a Challenge of Unarmed Combat against Jack Danner.\"\n\nThe office erupted into laughter.\n\nAaros held up her hands. \"Yes, we are aware that no Altarian males could possibly defeat Jack in unarmed combat. However, the Challenge has been filed in such a way that there will only be one challenger per day and there are 244 challengers left to go. An Abstinence Clause has been invoked which means no sexual relations until the Challenge concludes.\"\n\nNow the office erupted in cries of dismay.\n\nJack held up his hands to get the staff to be quiet. \"Please calm down. I'm fine. We will get through this. The Queen is looking into a solution to this as well. In the meantime it's business as usual. Where is Leffera?\"\n\n\"She's taking some vacation days,\" Mella said.\n\n\"Has someone updated my calendar for this morning?\" he asked.\n\n\"I did. You have a full schedule this morning,\" Kaluna replied with a sad expression. Then she noticed Jack was showing against the front of his pants quite a bit. Her eyes went wide then had a desperate look as she hustled over to Aaros. \"Um, is oral sex included in the forbidden sex?\" she whispered to the Judge.\n\n\"Oral sex?\" Aaros turned to Jack. \"Oral sex. Is that like 'phone sex'?\"\n\nKaluna's expression brightened as she saw the Judge wasn't aware of her favorite kind of sex. \"Jack, may I show her?\"\n\n\"No Kaluna, sorry.\" Jack turned to the judge. \"Phone sex as I described it last night involves two people in different locations pleasuring themselves while they watch and speak to each other. Oral sex needs both participants to be in the same location and involves using your mouth on your partner's external sexual organs.\"\n\n\"You do that?!?!\" Aaros gasped looking at Jack.\n\n\"Incredibly well!\" Mella sighed from Aaros' side.\n\n\"And females do it in return for me,\" Jack explained with a blush.\n\n\"Yes, that would be one of the forbidden sex activities,\" the Judge stated, her eyes still on Jack with an odd look in them.\n\nKaluna's sad expression came back.\n\n\"I have my next 'battle' at 10AM so I will need the appointments from that point on moved 30 minutes later. Can you arrange that please?\" he asked Kaluna, trying to ignore her despair. He turned to the group which hadn't stopped looking at him.\n\n\"Dharma!\" he gestured for the young runner who was a recent addition to the office. She rushed up to his side and looked up at him with hero worship in her eyes. Her fur was an amazing blend of chocolate and caramel coloration and Jack thought she looked delicious but he did his best to push those thoughts aside.\n\nJack quickly tapped out a letter of introduction on his device and sent it to a nearby hardcopy machine. He snatched it out of the tray, folded it over, and activated the sheet's official Trade Commission seal.\n\n\"I have a very important mission for you. I need you to go to Earth and pick up an order I made at a tailor shop called Fitzhenry's. Speak with the proprietor. His name is Walter Fitzhenry. Give him this note. Tell them I also left my hoodie in their shop. They will know what that means. The order is paid for so you just need to get it and go. Contact the Ministry of Security before you head over to the Gate Terminal and tell them you need to visit the shop I went to yesterday and they are to assign you security personnel. Earth is having some issues with me and I want you to be safe. They will get you through the right Gate, to the right city, to the right shop, and back.\"\n\nShe nodded looking up at him then rushed off with the letter in her hand to make the call.\n\n\"Alright people! Let's get moving!\" he said clapping his hands to break their paralysis. They finally got back to their tasks with only the occasional mournful looks in his direction.\n\nMella remained at their side. \"You need your hair braided,\" she said.\n\nAaros saw the small female's eyes were locked on the bulge in Jack's pants. \"I will do it,\" she said taking the small strip of ribbon from Mella's fingers.\n\nJack walked into his office and sat in his chair. Aaros walked behind him and pulled his hair free of the chair. She quickly and efficiently braided his hair and used the ribbon to tie the end."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "nonhuman",
        "harem",
        "science fiction",
        "humor",
        "anal",
        "tits"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/jacks-daily-grind"
}