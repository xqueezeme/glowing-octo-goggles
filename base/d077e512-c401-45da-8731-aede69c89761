{
    "title": "Miss Callahan Ch. 03-04",
    "pages": [
        "Chapter 3\n\nIt's usually pretty easy to tell how a pitch is going once you start. Sometimes you know how it's going to go just based on how the clients greet you and what room they put you in. If they've come into the meeting with a preexisting idea of their agency of choice, the pitch doesn't even really matter. And that can be really fucking maddening.\n\nThis is one of those cases where it's obvious how it's going. The moment we walked into the lobby of the building, a young, 20-something woman came hurrying over to us and immediately went to shake Lauren's hand. She acted almost as if Lauren was the client and this place was the agency.\n\nI guess I'm not that surprised. She's well known in various industries due to her role within this agency and her past experience. She speaks regularly at conferences and big events like SXSW and she's frequently interviewed.\n\nNot to mention, it's hard to not to be enamored with that face. It's a really good face.\n\nWe're ushered into a beautiful conference room that overlooks the Puget Sound. Well this is a good sign. The five clients we're presenting to are already seated at the table. I recognize each of them from the briefing doc the development team sent all of us. I know who they are, what they do, and what I need to say to each.\n\nAfter the normal round of handshakes, we sit down and begin. Lauren is just as spectacular as she was in rehearsals and it's not hard to see that the clients agree. Usually clients try to maintain somewhat of a neutral mask during pitches. These clients were eating up every word\u2014 I even saw some rare head nods.\n\nShe expertly tells them what they want to hear about themselves but also dangles some competitive carrots in front of them to showcase who they can be.\n\nUnlike in rehearsal, I keep my eyes on her, so I know when it's my turn to begin presenting. I'm not flustered in this environment. She has no power over me in here. I give her a small smile and nod and turn my attention to the men across the table.\n\nThankfully, I'm met with the same enthusiasm as Lauren, and actually, maybe even more from some of them when I start digging into the analytics slides.\n\n\"Every company believes that they are 'data driven'. But most don't really leverage all the data sources and insights they have at their disposal. We never recommend any strategy without the data to back up that idea. And we believe we can reach your audiences with the right mix of that research, channel expertise, and targeted content.\"\n\nI finish my section and look back to Lauren for the final statement.\n\n\"In your brief, you asked us why you should choose Altitude as your agency of record,\" she states. \"We're not coming in here to tell you that you're doing things the wrong way. Quite frankly, you're not. You have a successful, globally recognized brand for a reason. We don't want to reinvent the wheel for you. We want to enhance the best things about your company. By mixing old school media relations strategies, with new world amplification and targeting, I know we can move the needle for you. And we're excited to dig in.\"\n\nThe Q&amp;A at the end goes as smoothly as the presentation. Lauren fields most of them and I chime in when necessary. The final question comes from the youngest man in the room.\n\n\"I think it's safe to say that Altitude is one of our top choices. We really appreciate everything you've presented today, and I'm impressed, to say the least. Another agency has also showed promise. So, I guess my final question is, what differentiates you the most from your competition?\"\n\nI don't give Lauren the chance to respond. I jump in without even looking at her.\n\n\"I know the agency that is in the running with us, Will,\" I start. \"I actually worked for them for almost a decade. And there's a reason I'm with Altitude. I chose the best. As should you.\"\n\nLauren turns her head to me, and a flash of surprise crosses her face before she schools it into its normal, neutral position. I can almost see heat radiating off her.\n\nAs we leave the building after the pitch, I feel the normal sense of adrenaline I always feel after these things. It's the same feeling you get the moment you step off a roller coaster. The tension and excitement are still there, but it's mixed with a sense of relief.\n\nThe team is conscious not to say anything or even give each other significant looks until we're out of the client's building and in the parking lot. Pitches are an audition and that audition starts the minute the receptionist sees you until he or she sees you go.\n\nOnce we're out of ear shot of the building, Lauren gathers us in to a circle. Most pitch leads like to do this so the team can come together and quickly process what just happened in the room.\n\n\"That was fantastic team. You all did really amazing,\" she says looking at me on that final word.\n\nShe then went around and complimented each person for their role. And these weren't canned compliments, she really thought about each person, their value, and gave them validation. That's so rare in a leader that I feel my heart clench a bit. I tell myself its professional respect for Lauren and nothing more. At least I think it is? Real convincing, idiot.\n\nI'm the last person of the group she calls out.\n\n\"Ems. This is your win. Your strategy, your vision, your closing statement. Thanks for making me look so good.\"\n\nShe says it with such sincerity, and without any hint of flirtation, that I'm suddenly realizing how much I wanted this woman to be impressed with me. Not just because of the intimate moments we've shared, but I want her to think I'm valuable at Altitude.\n\n\"Thank you, Lauren. I speak for the group when I say we're incredibly grateful for your time and advisement,\" I say as I give her a small smile.\n\nShe gives me her signature smirk for a second too long before moving her gaze back to the group.\n\n\"I know you all have a lot of work to get through this week, but given that it's after 3:00, anyone who wants to join me for a little happy hour, I think a toast is in order.\"\n\nThe comment is mainly for the few people here who are more junior in their positions. The ones who feel pressure to stay at the office until 6:00pm even after a grueling pitch week. After my years in the agency world, I feel no such pressure. I usually pick up work once I'm home anyway.\n\nI inwardly smile at the wonderment on the group's collective face. It's clear Lauren has a strong effect on everyone, not just me.\n\n\"My hotel is right next to the office and there's a beautiful bar in it. Shall we plan to head there? I can drive a few people if you want to come with me,\" she says, looking at me on the word come.\n\nI can see memories flashing behind her eyes. My moans, her fingers dipping into her pussy, the faint taste that's still on my tongue...\n\nI look away because by this point, I'm sure people have started to notice. I look around at my co-workers, but their eyes are trained on Lauren in a kind of star struck way.\n\nThe few who can't fit into Lauren's car break off to order Ubers while three of us head to her rental across the street. I can't help but wonder if the two other women wonder why she parked in the lot next door to the client's building.\n\nBefore we enter the garage, I quickly shoot Jackie a text telling her to meet us there since she's technically part of the pitch team. Being a senior designer at Altitude, she has a pretty relaxed in-office schedule and she's also never one to miss a happy hour. It's one of the reasons she's my best friend in Seattle. She has a fun, care-free attitude and an amazing eye for design. Jackie is no drama and I love that about her.\n\nWhen we get to Lauren's car, Alana Spears, a Senior VP on the PR side, is distracted by her phone and automatically pulls one of the back doors open. The other two women with us follow her lead and pile into the back of the car.\n\nI'm painfully aware of how close I'm going to have to be to Lauren for the next 15 minutes by being in the front seat. Thankfully rush hour hasn't started yet and we should be there soon.\n\nAs I slide into the front seat, I keep my eyes ahead, trying to ignore the heat that's starting to rise around me.\n\nI have no idea what we discuss on our way there. Sarah, a mid-level strategist, rambles on about the Seattle office from the back seat and Lauren engages with her like she cares. Maybe she does. I'm reminded again of how little I know about this woman.\n\nAs we pull into The Four Seasons valet, I see Jackie walking in. Thank god. I need a fucking buffer here. Not that I'll tell her anything that happened with Lauren. But at least I'll have a friend who's not just a co-worker to talk to.\n\nJackie is the first woman I dated when I first moved back to Seattle after a stint in New York City. I'm also how she landed her job at Altitude. But once we became co-workers, it didn't seem wise to continue that part of our relationship and we easily moved into friendship.\n\nEven so, I don't feel compelled to tell her that our boss fucked me in my office. Or what happened right before the pitch. Or every thought I've had for the past 24 hours. And maybe part of me feels hypocritical for ending it with Jackie when I so easily gave in to Lauren.\n\nAs we enter the bar area of the hotel, I see Jackie standing at the bar. And somehow, she already has a drink in hand. Typical.\n\nLauren heads to the hostess and I hang back a moment to see if she's grabbing a table or if we're doing the stand-at-the-bar thing.\n\nThankfully, it appears as if she was able to grab us a table because I can't stand in these heels for very much longer. My mind is instantly distracted from my throbbing toes though when I notice that the hostess is a little too enthusiastic, never taking her eyes off Lauren.\n\nI try to ignore knot that suddenly pulls in my stomach as she engages Lauren in small talk on the walk to the table. I have an irrational dislike for this hostess.\n\nIt's hard to tell if Lauren actually likes the attention people bestow on her or if she's just polite. She is Texan after all. But I have to do everything I can not to roll my eyes as she easily laughs with the girl.\n\nAs we approach the table, I've had my limit of the young hostess now not even trying to hide the flirtatiousness of her tone. Lauren sits down and I intentionally choose the seat on the opposite side of the table and one down.\n\n\"Can we please get some waters?\" I ask the hostess, before I even fully sit, successfully interrupting their banter. The hostess pauses like she wants to finish her thought to Lauren, but instead gives me a small, tight smile and walks away.\n\nI can tell Lauren is looking at me, but I avoid her gaze. I don't need to see her knowing smirk. I'm not the girl who gets jealous. I'm not. I don't even know this woman. She doesn't even live here!\n\nJackie moves over to our table with a Manhattan and glass of champagne. She hands me the flute as she sits.\n\n\"The server is coming over. I didn't know what you order,\" she says to Lauren and the others now gathering around the table in various seats.\n\n\"No problem. I see you know Ems' order though,\" she says as she smiles warmly at Jackie. \"Champagne? How classy of you,\" she teases me.\n\nI look to Jackie and swear I can see a moment of confusion cross her face. She may have missed the casual use of my nickname from earlier this morning during our design review, but she certainly didn't miss it this time. She knows none of our co-workers call me that, but before I can even register it, the look is gone.\n\nThe sever comes over soon to grab everyone else's order. Lauren orders the same as Jackie and soon the conversation gravitates back towards the pitch, which Jackie seems to appreciate since she wasn't there but is the sole reason the presentation looked as good as it did.\n\nThough she's as senior as a designer can get in the agency, they don't usually come into pitches. Sometimes a creative director will, but this pitch didn't need that.\n\nAs the group continues to rehash the specifics of the pitch, I feel my phone buzz. I have a text from an area code I don't recognize, but the moment I see what was sent, I know who it is. I wonder how she got my personal cell number.\n\nLauren: You're cute when you're jealous.\n\nI quickly glance up at her, but her phone is already on the table and she's laughing at something Sarah and Alana are discussing.\n\nI turn back to my phone, making sure the screen is shielded from Jackie and Sarah's view.\n\nMe: I wasn't jealous.\n\nI see her look at the text and then place her phone back down without texting back. Her face is neutral and completely unreadable.\n\nAfter another 10 minutes, I see her pick up her phone again, and soon after can feel mine buzz. I don't look at it immediately. It's obvious that she likes a power play, but I can't make it too easy on her even though my hand is itching to pick up my device. Play it cool, Emma. \n\nAs I pick it up, I have to remind myself to school my features as I read her next text.\n\nLauren: You look so sexy in that dress. But I want to see more. Open your top button.\n\nSarah immediately asks me a question which makes me jump a bit.\n\n\"Jesus, what's wrong with you?\" Jackie asks after seeing my unusual jumpiness.\n\n\"Nothing. I'm fine, just thinking about the pitch,\" I lie back.\n\nI turn and answer Sarah's question and chastise myself for acting so crazy. It's just a woman texting me. A co-worker woman. Who's my superior. And so, so hot. Not helping.\n\nMy phone buzzes again with another text.\n\nLauren: Now.\n\nI look up at her and her eyes are calmly trained on me. To others it would appear as if she's just listening to the conversation, but I can see the demand in her eyes. I subtly move my hand up to the top button of my dress and undo it. Luckily, it's warm in here and the move doesn't look that odd.\n\nJust this action alone makes me wet and I'm not even trying to listen to the conversation anymore. I'm patiently waiting her next text, deciding to just relax into this game with her. Buzz.\n\nLauren: Open the next one. Now.\n\nI do as I'm told, as subtly as I can. By this point the group is on their second round, getting louder and aren't paying attention to my small movements. Even Jackie seems to have forgotten about my weird moment from before.\n\nI look up at Lauren and see her eyes move to the exposed skin of my chest. She licks her lips as her eyes flick up to mine before looking away again. I see her pick up her phone and I squeeze my legs together in anticipation of the next demand. Buzz.\n\nLauren: Go to the bathroom and remove your underwear. Leave it for me under the vanity.\n\nHoly shit this is hot. The professional in me screams that there's no way I'm going to do that. But I know I can't deny this woman. And I don't want to. I want her to see how wet she's made me this whole happy hour, and these panties will certainly show that.\n\n\"I'm going to go use the bathroom, anyone need something at the bar while I'm up?\"\n\nNobody needs anything and as I stand up, I'm suddenly praying Jackie or someone else won't decide to join me. That would make this significantly harder.\n\nI know exactly what Lauren means when she says \"vanity\". I've been to this bar many times before and the bathroom is beautiful. There's a long vanity bench with shining mirrors in a room before you get to the stalls. As I enter the bathroom, I mentally note the place I'll put them, right behind the last stool.\n\nThis would be a lot more difficult if I had pants on, but luckily, I can easily slip the silk down my legs and over my heels without taking off my dress. As I feel the light fabric hit my legs, I tremble a bit. This just feels so...dirty.\n\nThe excitement of putting them behind the stool makes me momentarily forget that it's going to be hard to hide how wet I am without underwear on. Lauren knew that of course when she made the demand.\n\nAs I sit back down at the table, I can feel that my face is slightly flushed. That's not rare with my pale, Irish complexion, but upon seeing it, I can see Lauren smile into her drink as she takes a sip.\n\n\"Please excuse me ladies, I think I'll follow Lauren's lead,\" she says as she stands up and strides to the bathroom without looking at me.\n\nJackie takes this moment to gossip with me, which under normal circumstances I would jump at. We both love dissecting the senior leadership of Altitude, but right now I'm solely focused on the sexy brunette who's currently fishing out my panties from behind the stool in the bathroom.\n\n\"So, how's it been working with a celebrity?\" she asks, emphasizing the last word.\n\n\"Do you not like her?\" I ask, slightly taken aback by the bite in her tone.\n\n\"She seems fine. I just think it's funny the way Altitude treats her. Like the sun shines out of her ass 24/7.\"\n\n\"Maybe it does,\" I joke back, trying to act more blas\u00e9 than I feel about Lauren's ass.\n\n\"Oh, I'm sure you'd like to find out.\"\n\nI'm thankfully taking a sip of my champagne so have a moment to school my features before responding to her comment.\n\n\"Whatever could you mean darling?\" I tease back, knowing that Jackie will see right through me if I get defensive.\n\n\"Come on, Ems. Even the straight girls in the office think she's hot. And she's 100% your type.\"\n\n\"She's older than I am.\"\n\n\"Not by that much. Plus, she looks like a Greek goddess, which I know you like. All high cheekbones and perfect, olive skin.\"\n\n\"I'm not denying she's hot. She's just not my type.\"\n\nWe both see Lauren coming back to the table and stop the conversation about her. I can see an arrogant smirk on her face as she walks with one hand in a pocket. She must be holding the underwear.\n\nShe sits down and addresses the group.\n\n\"I just saw my reflection and I'm reminded how tired I am.\"\n\nJackie lets out something close to a snort at her comment.\n\n\"Right, like you could ever look bad, Lauren.\"\n\nLauren flashes her a wide smile and a wink.\n\n\"Well thank you, Jackie.\"\n\nThat feeling is back in my stomach. Like hot elastic that's going to snap against my insides. I'm irrationally annoyed with Jackie for flirting with Lauren, which isn't fair since it's not like she knows what's happened between us.\n\nI have no claim on Lauren and yet I can't rid myself of that jealous pang she so aptly called out earlier.\n\n\"But even so, I'm going to retire to my room. I have an early meeting tomorrow at the office before I head back to Austin tomorrow night.\"\n\nBecause she's going back to Texas. Of course she is. I remind myself to remember that \u2014 this may be fun, but I can't get attached to her.\n\n\"Thank you all again for today. I'm so happy we got the chance to work together. Please continue without me. Alana or Ems, you have company cards you can put down for this?\"\n\nWe both nod. Everybody over VP level has a corporate card. It doesn't matter whose card we use, it all gets billed back to the same place.\n\nLauren gets up from the table and heads to the elevators, without even a glance at me.\n\nAfter the wink to Jackie and the fact that I took off my underwear for her at a company happy hour, I'm bristling slightly at her abrupt departure. What the fuck am I supposed to do now?\n\nThe conversation at the table continues but it's clear things are winding down. Alana waves to the server for the check and uses her card to pay.\n\n\"You done for the night or do you want to go to the bar and have one more glass?\" Jackie asks me as everyone else starts gathering their belongings.\n\nBuzz.\n\nI see a text from Lauren across my phone and feel a sense of excitement, and relief, that our game isn't actually over.",
        "\"I think I'm just gonna head home. This week killed me,\" I reply.\n\n\"No problem. Alana, are you taking an Uber back to the Hill I can jump in?\"\n\nI make up an excuse about needing the bathroom again and encourage them to go ahead since Alana already ordered the Uber.\n\nAs I head to the bathroom, I open the text.\n\nHoly fuck.\n\nLauren, in all her sexy glory, is naked on her bed. She's sitting up with her legs spread and there must be a mirror across from the bed, because it's a mirror image I'm looking at.\n\nI can see her signature smirk in place, but my eyes are drawn to her pussy, which I have a full view of due to her position.\n\nEven in the low-quality phone image I can see how wet she is. One of her hands is holding the phone up while the other is resting close to her pussy. My panties are across her leg.\n\nThe text under the image reads:\n\nYou better get here soon or I'll take care of this myself.\n\nI don't even open the bathroom door, instead turning around and going immediately to the elevators, not even bothering to check if Jackie and the others are gone. I'm sure they are, but quite frankly I can't bring myself to care right now.\n\nAs I head up to the seventh floor, I feel a rare sense of nervousness I don't usually feel when sleeping with someone new. This woman is just so disarming. I never feel like I'm my confident self around her. And somehow that makes me want to know more about her.\n\nThe elevator doors open and as I step off, I realize that I have no way of stopping the wetness building in my pussy from spreading across my thighs as I walk.\n\nI can feel my heart hitting against my chest as I reach her door.\n\nRoom 720.\n\nI think about knocking but I know that's not what she wants so I pull the keycard out of my bag.\n\nAs I walk into the room, I see her in the same position. Her head is back and she's moaning as she touches herself. Jesus.\n\nAs she hears the door open, she barely glances over at me before she continues touching herself.\n\n\"You might want to grab a pillow, baby. I want you on your knees,\" she breathes out.\n\n\"I don't need a pillow,\" I reply. \"I want to feel it.\"\n\n\"Good girl. Now come and fuck me already.\"\n\n\"Yes, Miss Callahan.\"\n\n \n\nChapter 4\n\nThe room is dark as I move closer to the bed, the only lights on by now are the soft backlights illuminating off the headboard. Lauren looks even sexier in person than she did in the photo as she pushes two fingers deeper into her folds and lets out a soft moan. She's looking at me with darkened eyes as she pushes them in and out.\n\nAs much as I want to move on to the bed, I wait at the end for her to move down it so I can get on my knees. She slows her hand as she continues to look at me.\n\n\"Take off your dress and bra. I want to see those pretty tits as you lick my pussy,\" she commands.\n\nWith two buttons already undone, my dress slips easily off my head and I instantly feel my skin break out in goose bumps. My nipples harden against my bra and I'm sure she can see the slight wetness that is already coating my thighs.\n\nKnowing what will make her happy, I carefully fold the dress while looking into her eyes. As I do, her lips part slightly and she lets out a longer moan. I move over to the chair by the bed and place the dress on it. I quickly remove my bra, fold it and add it to the pile before moving back to the end of the bed.\n\n\"Isn't it nice not having to also remove your panties baby girl?\" She pants out the question as she continues to fuck herself. I notice her hands aren't working as fast as they were when I came in. Maybe she was getting too close to an orgasm.\n\n\"Yes, Miss Callahan,\" I whisper back as I slowly get down on my knees.\n\n\"Shouldn't you thank me for making things easier for you?\"\n\n\"Thank you, miss,\" I say as I put my hands behind my back and keep them clasped there. I can see a flash of heat cross her eyes as she notices the submissive gesture.\n\nLauren removes her hand from her pussy and scoots to the end of the bed, keeping her darkened eyes trained on mine. I'm starting to get an addictive rush every time I submit to her and she gives me that look of hunger. I want her to always look at me like that.\n\nAs she moves herself so she has a leg on each side of me, I can already smell how aroused she is. I close my eyes so I can inhale deeper, suddenly more nervous than I was a moment ago. As I let out the breath I was holding, I know I'm not able to mask the slight shake.\n\nLauren puts her fingers gently under my chin and pushes my head up so I'm forced to make eye contact.\n\n\"Ems, I need you to talk to me. If you don't enjoy this, you need to tell me before we go further.\"\n\nThe last thing I want is for this to end. I reach out and put my hands on her bare thighs and squeeze lightly, trying to showcase what my mouth doesn't seem capable of right now.\n\n\"I do enjoy this. I'm just...I don't know. I think I'm just a little nervous. You are the sexiest woman I've ever met,\" I say quietly, trying to steel my voice.\n\nInstead of giving me her signature smirk, she simply smiles softly and I'm grateful I went for honesty and didn't try to play it cool. Because she is the sexiest woman I've ever met. And while I've never been in a dynamic with a woman with such strict submissive and dominant roles, I can't lie to myself, or Lauren, and say I don't enjoy it. I do enjoy it. More and more with each moment.\n\nWithout saying anything, Lauren gently takes one of my hands and plays with my fingers with her own.\n\n\"And you're not used to being submissive.\"\n\nIt wasn't a question. She already knows based on our conversation last night that I'm probably not used to this dynamic. But the way she reads me so easily, stating what she knows to be true with such sexy confidence, has me throbbing while on my knees.\n\n\"No,\" I whisper back, not really trusting my voice right now.\n\n\"Yet you like being submissive. My submissive.\"\n\nAs she talks, she pulls my hand up and places it on her bare nipple, allowing me to pull gently on her bud with my fingers. She doesn't move her hand from mine but allows me to just play with her.\n\n\"Yes, miss. I like it.\"\n\nShe closes her eyes as I put my whole palm over her tit and lets out a sigh before opening them. Her eyes are the same dark color thy were last night in my office and I can feel a new wave of wetness drip down my legs.\n\nI have to move closer as she brings my hand up to her mouth while maintaining her intense stare.\n\n\"Good. Because I find you very..\" she stops midsentence to slide her tongue up my index finger, \"...very, sexy too.\"\n\nShe brings that finger and my middle finger into her mouth. She closes her eyes, hums quietly and sucks and all I can do is sit there on my knees staring dumbly up at her as a fire hits my crotch. She brings my hand out of her mouth and leans in for a kiss.\n\nBut this kiss feels so different than last night's kiss. This isn't the fast-paced wrestling match of lips and tongues I felt the moment we kissed last night. This kiss is slow as she gently parts my lips with her tongue, holding my face in her hands so carefully that it feels romantic.\n\nAs sexy as it is, I need more than these innocent licks and nibbles on my lip. I push up into her, moving my body onto her so I'm straddling her lap. I take her mouth more fully and for a moment, she allows me to take control of the kiss, bringing her hand around my head to place it on the back of my hair. We both moan into the kiss as our tongues slide against each other in a passionate embrace.\n\nI'm in such a trance kissing her that I almost don't feel her hand pushing against my heaving chest. As I open my eyes though, I can see that I'm not the only one out of breath.\n\n\"Easy tiger,\" she says breathily as she smiles at me. \"Lay down, Ems.\"\n\nI want to protest, grab her and kiss her again, be damned with her need for control. Or get back down on my knees and devour her pussy. But the powerful look in her eyes lets me know that arguing wouldn't be wise. She may have allowed me to deepen that kiss, but she is now back in control. I lay back down and scoot up, so my head is against the pillows on the bed.\n\nLauren moves towards me until she's straddling me, and I can feel a sudden wetness on my stomach from her pussy resting on me.\n\n\"One day, I will have you on your knees, but for now, I want to talk.\"\n\nMy mind if a jumble of conflicting thoughts and questions. Part of me is still reeling from the promise of another night with her, but my unbelievable arousal overrides any other thought.\n\n\"You want to talk?\" I breathe out. \"Now?\"\n\nLauren simply lets out a low laugh as she takes both my hands and puts them over my head. She pushes down on my hands, making her pussy slide against my stomach. She closes her eyes as she grinds down again before opening them and smiling down at me.\n\n\"Yes, baby. I want to talk. If you're going to submit to me, we need to establish some rules. I want you to nod for consent. Do you understand?\"\n\nWith all my strength going to not squirming under her, all I can do is nod anyway, so I do.\n\n\"Good girl.\"\n\nShe leans down towards my face, so her lips are close to mine and her hands are pushing down on my hands even more. I can feel her breath as she whispers and all I want to do is kiss those lips again.\n\n\"We won't doing anything you will need a safe word for tonight, but I need to know you'll stop me if you're not comfortable with anything. Understand?\"\n\nI nod.\n\n\"You won't come unless you have permission from me. Understand?\"\n\nI nod.\n\n\"You won't touch me without permission.\"\n\nI nod.\n\n\"You will call me miss, or Miss Callahan, unless we are at work.\"\n\nI nod.\n\nShe moves closer to my ear and rolls her tongue around my lobe. I can't keep in the moan I've been holding back since she began setting her rules.\n\n\"You are so beautiful when you submit, I can't believe you've never done this before.\"\n\nShe licks up my ear again and down my neck, sucking her way to my collar bone. She moves my hands into one hand and takes her other hand to push my left tit into her mouth. She sucks hard on my nipple before she flicks it lightly with her tongue. My back arches off the bed, pushing my tits into her face.\n\n\"Miss, that feels so good,\" I pant out.\n\nLauren looks up at me, her mouth wet from her sloppy work on my tit.\n\n\"I'm going to let go of your hands. I want you to keep them there. Do not move them.\"\n\n\"Yes, miss,\" I say, desperate for her mouth to continue its assault of my tits.\n\nBut she doesn't go back to them. Once her hands release mine, she moves them down to cup my face and kisses me with the same fervor as she used on my chest.\n\nI can barely breathe as she pushes her tongue all the way into my mouth and slides it against my own. It's not until she comes up for air that I can take in a breath of my own.\n\n\"I love how your body responds to mine. I'm going to make you come before I allow you to touch me.\"\n\n\"Thank you miss,\" I try to say back but my own moan cuts me off as she moves quickly down between my legs, spreads them, and latches her mouth unceremoniously on my clit. My body lifts of the bed automatically, greedily trying to get more of her mouth on me.\n\nPart of me is screaming to push her head away and get back on my knees so I can make her come on my tongue, but the woman's talented mouth is making me forget about that. Lauren's clearly on a mission and I'm not going to stop her.\n\nBefore I can even get used to her mouth on me, she brings her hand to my opening and circles it, brining two fingers inside, but not pushing in deep.\n\nI try to move my hips so her fingers will go deeper but she presses down on my pelvis.\n\n\"What do you need baby girl?\"\n\nI lift my hips up again trying to communicate without having to speak, but that just makes her remove her mouth from my pussy and look up at me.\n\nI'm a panting mess above her and know nothing about my current state must look very elegant. But I know she won't continue unless I ask for what I need.\n\n\"Please Miss Callahan. Fuck me.\"\n\nLauren gives me a slow, sexy smile as she pushes her fingers into my wet opening so her hand is as far as it will go. But she doesn't pump them in and out like I'm craving. She just holds them inside me, staring up at me.\n\n\"Fuck my fingers baby,\" she demands.\n\nI move my hips up and down in quick succession and I can feel her fingers sliding in and out of my pussy. It feels so dirty fucking her fingers while she's staring up at me that I close my eyes and push my hips up and down faster and faster.\n\n\"Mmm that's it baby. You are so wet for me.\"\n\nAs she speaks, she expertly adds another finger making me moan even out louder.\n\n\"Oh god miss, yes. You feel so good.\"\n\n\"So do you baby. Fuck my fingers like my good girl. Faster.\"\n\nI'm pushing my hips up so hard now that may body comes down hard on the mattress with every thrust. I can't imagine what I look like now, panting out swear words as I hump Lauren's fingers.\n\nAs soon as I can feel my walls starting to clench around her fingers, she adds one more in. My hips slow slightly as she fills me and my thrusts become longer, allowing her to fill me.\n\n\"You are so open for me baby. One day you'll take my whole hand.\"\n\nI've never been fisted but at her words I can feel a new wave of wetness drip out from my pussy and onto her fingers.\n\n\"Yes, miss. Please. Now. I'm ready.\"\n\nI can hear the neediness in my own voice, but I don't care. I just want to feel full of Lauren. I want to remember this moment tomorrow. I need to.\n\nBefore she speaks, she gives a low laugh.\n\n\"I know you are darling. But not tonight. Tonight, I don't want you to feel any pain.\"\n\nMy sex clouded mind is too close to orgasm to argue and tell her that I want to feel some pain. That's something I need to process anyway since I've never had such a desire for that until this moment.\n\n\"Faster,\" she commands.\n\nI push my hips up into the air and don't bring them down this time. I move up and down on her fingers, desperately trying to push her as deep as I can.\n\n\"Fuck miss, I'm going to come.\"\n\n\"Not without my permission you're not.\"\n\n\"Please miss, may I come? Please? Please?\"\n\nI'm basically shouting at this point. I can feel myself tumbling towards climax as I hear her say, \"come, darling.\"\n\n\"Mmm fuck miss, I'm coming, I'm coming, fuck!\"\n\nI push my hands into the bed so I won't be tempted to move them as I feel an intense orgasm roll through my body, making me see white as I slam my eyes shut.\n\nThe orgasm is so intense that I don't even feel her fingers leave my body. All I can feel is the slight jerks my whole body gives as I come down from the high.\n\nI open my eyes when I feel her climb up my body so she's straddling me again. She pushes down on my hands above my head and looks down at me with a serious expression.\n\n\"You are absolutely delicious when you come for me like that. And you were such a good girl for keeping your hands up here like I asked. Would you like your reward?\"\n\nI don't have much energy to do more than give her a lazy smile.\n\n\"Isn't that what I just got?\" I ask.\n\nShe takes one hand off mine and very lightly slaps under my jaw.\n\n\"Don't sass back. Would you like your reward?\"\n\n\"Yes, miss,\" I say back more seriously.\n\nLauren leans down over my face, so her tits are right above me. If I move my nose, I'd hit her nipple with the end of it.\n\nAll feeling of exhaustion is gone and I can feel my mouth start to water at the anticipation of getting to touch her finally.\n\nWith one hand still pressed into my hands, she takes the other and grabs a fistful of my hair so she can guide my mouth to her left tit.\n\n\"You may taste,\" she says in a breathless voice, betraying her own arousal.\n\nI swirl around her nipple with my tongue, careful not to touch the bud yet. As soon as I hear her moan out, I move my tongue over her nipple so I can flick it back and forth over the hard bud.\n\nHer grip on my hair loosens as she lets my mouth have free reign of her tits. I move my head back and forth between each, sliding my tongue all over her chest so she's wet everywhere. She's moaning and moving her tits up and down to get as much of my tongue as she can get.\n\nI love how sensitive Lauren's tits are and I could do this until she comes from just my tongue on her nipples. Which, based on the sounds she's marking, might not be far off.\n\nBut Lauren moves up so I can't reach her tits with my mouth and I can't help but let out a sound of protest at the loss.\n\n\"Don't worry baby,\" she says, \"if you enjoyed that, you're going to love the next dish.\"\n\nMy pussy is throbbing again, but I focus on her body moving up my own, spreading her wetness on as much of my naked chest as she can.\n\n\"You may bring your hands down baby,\" she commands and my arms tingle slightly as I move them down from their raised position.\n\nLauren moves her pussy closer to my head and her arousal is even more potent than when I first entered the room. It's intoxicating.\n\n\"I'm going to let you taste me now. Bring your hands up to my ass.\"\n\nI do as she says slowly, trying not to betray how much I've been thinking of touching her sexy ass since I saw her walk into the office in that first pencil skirt.\n\nAnd I'm not disappointed. Firm and soft at the same time, I can't help but squeeze them as I moan out in appreciation.\n\nLauren brings one finger under my chin and I'm forced to open the eyes that I hadn't even realized I closed.\n\n\"That felt good. But don't get carried away,\" she says sternly and all I can do is nod.\n\nShe moves so she's directly above me and puts her hands-on top of the headboard before she slowly lowers herself down to my mouth.\n\nShe's so wet, the first thing I do is lick and suck around her folds so I can get more friction with my tongue. I lap up as much of her juices as I can, but the way my own mouth is watering doesn't help control just how wet everything is.\n\nLauren lets out a low moan as my tongue begins to lick up and down her length.\n\n\"Mmm good girl. Your tongue feels amazing,\" she says in a low voice.\n\nMy eyes are closed as I allow myself to have what I've been craving. She tastes better than anyone I've ever been with. As if I took the freshest spring and mixed it with a splash of the ocean.\n\nShe holds her pussy still over my mouth as I circle her clit with my tongue before flicking it up and down in fast progression. As I do, she begins to moan louder, and I can feel her clit begin to harden.\n\n\"Baby. Yes,\" she says in a whisper as she throws her head back.\n\nI don't want this to end knowing I may never get to taste her again and already feeling starved for what I'll be missing. I move my tongue off her throbbing clit, down her length to circle the outside of her entrance, which is still dripping wet.\n\nShe brings her pussy off my face and I try to chase it with my tongue to no avail. I open my eyes to see her looking down at me, slightly too high for my mouth to reach her.\n\nHer face is completely flushed and her normally well-kept hair looks wild and free. It's the sexiest she's ever looked.\n\n\"You've had your fun. But now I'm going to get myself off on your tongue.\"\n\n\"Yes, miss. thank you, miss,\" I say as I nod.\n\nLauren takes one finger and gently moves it down my face in a soft caress.\n\n\"Good girl.\"\n\nShe moves back so both hands are on the headboard and I instinctively know what to do. As she brings her pussy back down to my face, I stick out my tongue so she can slide her opening on it.\n\nShe moves up and down, fucking my face with slow, deliberate strokes. Each time she comes down, my tongue plunges deep into her opening.\n\nAs her moans get louder, I can tell she's close to coming. She starts to bring her pussy down onto my tongue faster and faster.",
        "\"Baby, fuck. I'm so close.\"\n\n\"She pushes up on her knees so she can let go of the headboard. Her hands find their way back into my hair and she grips it as she brings her pussy down onto my face more forcefully.\n\n\"Do you love me fucking your face like this?\"\n\nShe pushes down on my tongue so it's as deep as it will go and she stays like that, pushing into my face in slow, methodical thrusts.\n\nI can barely breathe, with my tongue all the way inside her and the rest of my face against her pussy. I simply nod and let out a sound of consent in the form of a moan.\n\n\"Good girl. Yes, yes, yes, baby I'm going to come on you.\"\n\nI simply moan and nod again, squeezing her ass a little harder so I can push her into me more. Breathing is overrated anyway.\n\nJust when I think I'll have to come up for air, I hear her let out a long moan and squeeze her thighs against my head.\n\nSound and air gone, it's not until Lauren is sliding off me that I'm sure she's ridden out as much of her orgasm as she could.\n\nShe moves her body so she's right next to me and rests her head on my shoulder, breathing heavy. Slowly she moves herself, so she's propped up on her elbow and is looking down at me. Her eyes are still dark, and her lips look red and swollen. It's just so sexy.\n\n\"That was amazing baby,\" she says as she smiles down at me.\n\nMy body is now spent and all I can do is smile back at her. Her fingers move to my hair and she lightly plays with it through her fingers as her breathing begins to calm. The room is quiet for a few minutes, the only sound coming from our collective breathing, which is gradually getting quieter.\n\n\"Ems, have you ever thought about having a dom? You're a natural submissive.\"\n\n\"Are you offering?\" I ask, sounding bolder than I feel in that moment.\n\nShe studies my face before answering, seeming to be thinking carefully about how to answer.\n\n\"Perhaps if that's where this led. We'd need more time to explore that, see what you're comfortable with.\"\n\nLauren mentioning the future again like we have one is what I want but have already convinced myself isn't a possibility. Even if she did live here, I'm not dumb. I know that what we've been doing is probably pretty vanilla on Lauren's scale of sex. It's hard to wrap my head around the idea that this is as exciting for her as it is for me. I know she can see the war of emotions crossing my face as I process the turn of this conversation.\n\n\"But not if that's not something you want,\" she says.\n\n\"It's just that you talk like we'll be seeing each other like this again,\" I say. \"I assumed this was a one-time thing for you. That we wouldn't really talk once you go back.\"\n\n<br >\"Why do you think we have to stop talking after tonight?\"\n\nI suddenly feel like a little girl. I want to tell her that I don't want to be just some pitch fling. I want her more than I've ever wanted anyone, and the distance doesn't bother me. But all that would probably just scare her off.\n\n\"I figured this was just a quick fling,\" I say instead.\n\n\"Do you want it to be?\" She asks while twirling my hair between her fingers.\n\n\"No.\"\n\n\"I don't either, Ems.\"\n\nShe's looking at my hair between her fingers with a small crease between her eyes I haven't seen yet. If I didn't know better, I'd almost say she looks uncertain. I stay quiet and wait in case she has more to say.\n\n\"I don't do this on every trip,\" she says quietly. She opens her mouth to continue but promptly closes it, opting instead for a small smile.\n\n\"Go to sleep baby, we have an early day tomorrow,\" is all she says instead.\n\nI wanted to say more. This felt like the first real conversation we've had that isn't laced in desire or flirtation. But Lauren doesn't seem like the type to push to open up and I'm still reeling over what she just said.\n\nLauren pulls me into her body, and I shouldn't be surprised she's the big spoon in this arrangement. I scoot back into her and it's amazing how well we fit together. She must sense it too as she sighs into my hair.\n\n\"You smell so good,\" she says sleepily before kissing the back of my head.\n\nThe gentle kiss and intimate embrace make my heart clench. This isn't the controlling, dominant woman that just fucked me. This Lauren is soft, and sweet and...adorable.\n\n\"I have to be in with senior leadership early tomorrow. Sleep in. Order room service. Enjoy the room while I still have it.\"\n\nI let out a sigh as I push myself back into her body. I don't want to admit how good this feels to have someone wrapped around me, ordering me to stay in bed the next morning to luxuriate in the hotel's amenities.\n\n\"I'm ordering chocolate chip pancakes on your card,\" I say sleepily back.\n\n\"Ah. So, you have sophisticated taste in drinks and childish taste in food then.\"\n\n\"Chocolate chip pancakes aren't childish. They're universally accepted as the best breakfast food. It's science.\"\n\nShe lets out a low laugh into my hair and I wish I had the energy to keep making her laugh like that.\n\n\"Go to sleep Bill Nye. I'll see you in the office tomorrow morning.\"\n\n\"Goodnight, miss,\" I say and I can already feel myself falling into sleep, my body completely satisfied and relaxed. The last thing I remember before sleep takes over are thoughts of pancakes and bright green eyes.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nI'm always disoriented when I wake up in a room that's not my own and it takes me a few moments of groggy confusion before I remember that I'm in Lauren's hotel room.\n\nIt's only once I open my eyes that I realize why I woke up so abruptly. The phone on the bedside table is ringing. I have a second of indecision before I decide to answer it. Whoever is calling is annoyingly persistent.\n\n\"Hello?\" I say and my voice is thick with sleep.\n\n\"Ms. King?\"\n\n\"Yes?\" I say in more of a question than a confirmation.\n\n\"Good morning, Ms. King. Ms. Callahan asked us to set a wake-up call for you. She has also ordered breakfast and a package that will be sent up shortly. Would you like coffee with your food ma'am?\"\n\n\"Um, yes please, thank you.\"\n\nI hang up the phone and can't help the smile that spreads on my face. Lauren already ordered me breakfast. And she's sending up a package? I don't think a woman has ever done that for me, but Lauren checks off a lot of firsts.\n\nI look at the clock on the table and note that it's already 8am and I'm grateful she thought to wake me up before I missed the whole day at the office luxuriating in my boss's bed.\n\nI shower as quickly as I can knowing that I can't show up at the office much later than 10am on a Thursday or my team will wonder why I'm not at our daily stand up meeting. Given Jackie's presence in that meeting and her ability to read me so well, I don't want to set off any unnecessary suspicions.\n\nThe knock on the door comes quicker than I expect and soon a large cart has been wheeled into the room, full of covered silver trays and a hot pot of coffee. A large, white package is placed on the bed.\n\nI can't see myself, but I know I'm now smiling like an enamored teenager who was just asked out to prom. The bell boy must be wondering why I'm acting like Julia Roberts a la Pretty Woman.\n\nOnce he leaves, the coffee hits my nose and my stomach responds with a low grumble, but I'm desperate to open the box. I move over to the bed and lift the lid. Inside is a small white note resting on top of some tissue paper. I pick up the note and read Lauren's handwriting for the first time.\n\nEms,\n\nYou're far too sophisticated and elegant to be doing a walk of shame. This should fit you.\n\nI took the liberty of asking the hotel to make your breakfast extra special. I hope you enjoy.\n\nSee you at the office gorgeous girl.\n\n-L\n\nMy hands shake slightly as I put the note aside and quickly move the tissue off whatever garment is under it. I feel like a kid on Christmas and my insides are a ball of butterflies.\n\nInside the tissue is a simple yet beautiful dress that almost exactly matches the blue of my eyes. On top of the dress is a slim black belt, evidently meant to go with the dress at the waist. While simple, the dress is obviously expensive, and I let out a small gasp when I look at the tag.\n\nDior.\n\nI can't help but let out a loud laugh as I think about Lauren's cheeky confidence. How this woman had time this morning to order me an outfit, breakfast and set my wakeup call is beyond me. I also can't believe that she probably spent thousands on this dress just to make a joke.\n\nBut as I put the dress on after carefully applying some of the extra make-up I always take with me to a pitch, it's not funny anymore. It fits me so perfectly it feels as if it was made just for my body. I'm again astonished by Lauren's talent for knowing me so well and what I'm beginning to see as a deep sense of kindness and generosity.\n\nAs I'm standing at the mirror, I realize that she didn't send a fresh pair of panties with the dress. I look around the hotel room, but it doesn't take long to confirm my underwear is gone. And there aren't any in the box she sent up. I can feel a blush creep up my neck and face as I think about walking into my office after a night at her hotel room, pantie-less. I'm sure Lauren knew exactly what she was leaving out.\n\nLuckily my heels from the pitch work perfect with this dress. Once I'm satisfied with my look, I note that I'm pushing it with my time. I know I don't have time for a full breakfast, but I lift the lid on the tray so I can at least take a couple bites.\n\nI let out another loud laugh as I look down at what's in the tray. Beside a bowl of fruit, is a plate full of chocolate chip pancakes, all cut into the shape of Mickey Mouse's head.\n\nAs I dig into the pancakes, I feel the same sensation in my chest that I did when I was falling asleep last night, and I know I could easily fall for this woman.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nI've only just sat down in my office chair when Jackie gives my door a quick knock and comes into the entryway holding a mug of coffee.\n\n \n\n\"Guy wants to see all of us in the kitchen for some company-wide announcement.\"\n\n\"Well that's never a good thing,\" I say as I stand up and move towards the door.\n\nI can see Jackie's eyes appraise my outfit as she looks me up and down with a frown. For a moment my heart begins to race, and I can feel a persistent blush forming on my face and chest. But once she speaks, I relax a little.\n\n\"I can't believe you went shopping without me,\" she says in an accusing tone.\n\n\"You know my wardrobe too well. It's kind of creepy,\" I deadpan back to her.\n\n\"Or you just don't own that many outfits,\" she teases as we head towards the kitchen.\n\nApparently, my team stand-up meeting will have to wait, but I'm even more grateful now that Lauren had thought to wake me up before I missed some big announcement.\n\nI try not to make it obvious as I scan the room for Lauren's face. I don't know when she's flying back to Austin, but I want to see her again before she does. Maybe have a quickie in her rental car. Stop it. You. Are. A. Vice. President. \n\n \n\nMy thoughts don't have time to turn back to a safe PG rating as my eyes lock on green ones across the room. Eyes that have been possessed my every thought this week. I see Lauren's gaze roam up my body, finally resting on the small buttons at the top of the dress.\n\nA small smile settles on her plump lips before she averts her gaze away to Guy Adams, our head of office. He's whispering something in her ear and for a moment it almost looks like surprise crosses her beautiful features. She looks over at me again, this time with concern in her eyes and my stomach tightens for reasons I can't even place.\n\nApparently, this exchange wasn't subtle because Jackie leans into me so she can whisper in my ear without any of the close bodies near us hearing.\n\n\"Ems, why is she looking at you like you just killed her cat?\"\n\n\"I don't know,\" I say back.\n\nAnd I don't. She's looking back at Guy, talking to him about something, but I can't shake off the look of dread she had in her eyes a moment before.\n\nJackie doesn't have a chance to ask any more questions though as Guy quiets the room with a raised hand.\n\n\"Thank you all for stopping what you were doing for this impromptu meeting. But I promise, this is good news!\"\n\nAs he speaks, two of the office admins open up a couple boxes of pastries and begin pouring champagne and orange juice into small cups.\n\n\"We found out this morning that we won the Interplay contract our team pitched for just yesterday.\"\n\nThe office breaks out into loud applause and I can feel a few people around me clapping me on the shoulder. But I can't take my eyes off of Lauren who doesn't seem pleased at all.\n\n\"Congratulations to the team. The client said they knew what their decision was before the team even left their conference room. I'd like to specifically call out Lauren Callahan from our Austin office for leading the charge,\" he motions to Lauren and the applause around the office picks up. Lauren gives a small smile that doesn't reach her eyes.\n\n\"And Emma King, who led the strategy and was hugely instrumental in the win.\"\n\nHe pauses again with his hand outstretched to me so the office can continue their applause. I smile at the few people around me and Jackie pinches my side in a playful way.\n\n\"This win makes Interplay one of our top technology clients, with a monthly budget bigger than our tier three client retainers combined. It's a big win for our office, hence the alcohol being offered before lunch.\"\n\nPeople around the room laugh and give another round of applause. Guy lifts his hand again, apparently not finished.\n\n\"Just one more bit of good news as well. With the rush of new business we've won this fiscal year, Altitude's global leadership are eyeing Seattle as our next hub of West Coast growth. For that, we need a leader who can come in and help us scale and grow. I am beyond pleased to announce that Lauren Callahan has graciously accepted the role of West Coast Head of Development, sitting right here with us in Seattle.\"\n\nThere was a sudden rustling of noise from people in the room, most of which sounded excited. Guy put his hand back up to quiet everyone.\n\n\"Your direct managers will speak with all of you on how this will impact your workflow. But all strategists and creatives will now report directly into Lauren. We can't wait to see what she'll do here. I'm sure you'd rather hear from her than me and I'm eyeing one of those bear claws, so Lauren, the stage is yours.\"\n\nGuy bows dramatically and Lauren moves into his space before turning her attention back to the office. Whatever she felt right before Guy began his presentation is no longer visible. In its place is the same confident, cool executive that I've come to associate with her professional demeanor.\n\n\"Thank you, Guy. I have to be honest, I didn't know this announcement was going to be made so soon and I didn't prepare a speech. But as you all know, Guy is a kid in a candy shop and can't be controlled.\"\n\nShe gives Guy a teasing smile as the group gathered around the room give her an appreciative laugh. But I feel like my mind is working in slow motion. Lauren is moving here. Seattle. Is that why she was so confident that we'd be able to continue whatever it is we started? And if I understood what Guy was saying, Lauren is going to be managing all members of the development team. That's both me and Jackie.\n\n\"Last time I was in this office, I was so impressed with the talent and passion that I knew I needed to be here in the action. The way this office has been able to grow business while retaining the culture of a family led agency is almost unheard of in this industry. Being here to help with the Interplay pitch only solidified my decision to make this move. I've never worked with a smarter, more strategically minded team and that win was all on them.\"\n\nOn that last sentence her eyes rested solely on me and as we maintain eye contact, I have no sense for anyone else in the room.\n\nThe trance is broken when Guy stands back up and claps Lauren on the back.\n\n\"We are the lucky ones, Lauren. Congratulations. And all those foodies in the office\u2014 I expect you'll be emailing Lauren all the recommendations for where to go once she's here. She may be missing Texan BBQ, but I'm sure we can show she and her wife some classic Seattle spots.\"\n\nJackie says the word that is rolling around my head like a pinball, not able to stick to any tangible thought.\n\n\"Wife?\" she asks curiously. \"Didn't know she was married. No ring.\"\n\nI think back to Lauren's hand. No, there was no ring. But there was also no mention of a wife. My eyes find hers and she's staring right at me. I will my legs to move my body back to my office so I can get my coat and get the hell out of there. But all I can do is stare and look at her.\n\nBecause even if I tried not to let it happen, I've started to fall for this woman. And everything she made me feel and want and desire for the future.\n\nAnd she has a wife.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "bdsm",
        "dominant",
        "erotica",
        "lesbian",
        "lgbt",
        "office",
        "oral",
        "romance",
        "sex",
        "submissive"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/miss-callahan-ch-03-04"
}