{
    "title": "Elephant",
    "pages": [
        "The following story is based on the Jason Isbell song of the same name. The plot undoubtedly deviates from the intent of Mr. Isbell's song, though his lyrics in their entirety are included here. They are denoted by italics at various places within the story.\n\n* \n\nJenn Ryan was the best thing that ever happened to me. But she would be the first to admit, she was also the worst thing that ever happened to me. Most of the time -- after the elephant first entered our lives up and up until the day that it and Jenn disappeared -- things were bad... for both of us. Still, in the long run, the good totally overwhelmed the bad, no matter how bad that bad got, and it did get pretty bad... at times.\n\nWe just encouraged each other's worst excesses. But as Jenn so often reminded me, claiming with a wink of her eye that William Blake's proverb -- \"The road of excess leads to the palace of wisdom\" -- just made so much sense. It was her mantra she said -- her life's highest ideal. She wasn't serious, not really, but she lived her life like she was.\n\nIf Blake was right, then Jenn Ryan was probably the wisest person I ever knew. But wisdom is not really what comes to mind first when I think of Jenn -- and that happens pretty much nonstop nowadays. I'm not sure what does come to mind first: beauty perhaps, humor maybe, almost certainly bravery.\n\nI guess the real truth -- and Jenn always claimed that I, above all others, could always find the real truth -- was that too many things come to mind when I think of her. It would be as futile to try to pick out one as it would be to select your favorite star from the vast pantheon of the firmament -- \"the heavens\", as Jenn preferred to call them.\n\nSpeaking of heaven, Jenn told me twice that she didn't think she'd go there -- said she was pretty sure she couldn't find her way -- too many stars in the way, she claimed. It wasn't that she thought she was a bad person, or that her sins would prevent her entrance into those pearly gates. It was just that she thought she'd get sidetracked along the way -- too many beautiful things to distract her. She thought she'd get lost.\n\nI first met her about a year and half ago at this place outside of Athens where we were playing -- The House of Booze, a hole in the wall really, certainly not the kind of establishment that I would have taken her to if I had had the choice. But who am I fooling? Both of us belonged in that rat's nest anyway -- we were made for the damn place.\n\nI was playing in a band that Luke, the owner, thought fit the \"ambiance\" of THOB to a fucking T. That we did. Our band was made for the place, too. In consequence, Luke had hired us as a sort of house band -- we played there almost every Saturday night when we weren't touring. We were just alt country shit-kickers whose stuff was distilled through a filter of Southern blues and R&amp;B boogie, and, as every member of the band was either a promising, full-fledged, or recovering alcoholic, Luke couldn't really have found musicians that looked the part of the house band at The House of Booze any better than we did.\n\nI fell into the latter category, or at least I was trying to, and as such, I was understandably wary of a woman who looked like she was born with a glass of bourbon in her hand. Hell, playing with a bunch of miscreants, like the other members of New South, and gigging regularly at dens of debauchery like THOB, it was hard enough staying clear of the demon rum without falling under the spell of some Georgia Jezebel.\n\nI suppose in most ways, though, she didn't look the part. She was too pretty; too fucking educated, too. But when I first saw her on that cool spring night, sitting cross-legged on a barstool, like nobody sits anymore, I thought she looked at home.\n\nIt was around 7:00, about two hours before we were scheduled to go on, and we'd been hauling our gear in from the van for the past 45 minutes. I had stopped at the bar to get some seltzer water, and I was just standing there waiting to get the bartender's attention. Unlike me, she had apparently already gotten his attention -- several times over.\n\n\"Hey, you're the singer in New South, aren't you?\" She flashed me this beatific grin, the cherub smirk of a drunken angel in a denim skirt. I could tell -- I don't know how, but even after hearing only a single sentence, I could tell that she was a Georgia girl, even though she was very careful to conceal any tiny, residual hints of a Southern drawl.\n\nI stared back at her. \"Well, the answer to that question depends on whether you're a cop, a bar owner who's banned me from his place, or any number of bankers whose loans I've defaulted on. Which one are you?\"\n\nShe giggled. \"None of the above, just a girl who likes your music.\" She winked at me and drained her glass. \"I'm Jenn, by the way; what's your name?\" She reached out her soft, white hand with the palm down like she expected me to kiss the top of it, and though I accepted it, I didn't shake it, just touched its petite, soft whiteness momentarily before releasing it.\n\nShe told me later that she actually already knew my name, but that she didn't want to admit that at the time. She thought that I would think that she was kind of weird and creepy if she was following our band on Facebook or on our website. The truth was really quite the opposite; that was precisely what we wanted people to do.\n\nI somehow instinctively knew that answering her question was almost certain to get me into trouble that I should have known enough to avoid. \"I'm not sure I should say\", I answered, grinning just enough to prove that I posed no real threat, but not too much to suggest that I had any designs on something more. I was going to tell her later, but I thought it might be fun to tease her just a bit.\n\n\"Well, if you're gonna play hard to get, I'll just invent a name for you. I think you should be... 'Mike.' So, Mike, did you go to UGA? You look really familiar, like you might have been in a class I took at one time or another.\"\n\nI tried my best not to show my surprise, but what she'd just said stunned me. My actual first name is Michael, though no one has called me that since I was a child. How in the fuck did she guess that? Instead of acknowledging the coincidence, I was trying to convey nonchalance so I went ahead and answered her question.\n\n\"Nah, I went to school in Memphis, until they kicked me out or I dropped out -- I can't remember which.\"\n\n\"Oh, a serious scholar, huh?\" She smiled at her sarcasm.\n\n\"I can't spell 'scholar,' so I sure as hell can't be described as one.\" I said it in as jaded a tone as I could muster, while the bartender, who'd been stocking the side liquor well in advance of the real crowd's arrival, approached us. He hadn't heard a word of our conversation.\n\n\"What can I gitcha, Andy?\" When he drawled the question, she smiled at me again, that same cherubic grin I'd seen previously.\n\n\"Just some seltzer, Jake.\" He nodded, and with stunning efficiency, grabbed a pint glass, filled it with ice, sprayed it with the soda gun, squeezed in a lemon slice, threw it in the glass, and slid it across the bar to me.\n\nThen, he turned to her. \"Can I get you another, Jenn?\" She didn't say anything, just looked at him like he'd just asked the dumbest question ever uttered. He grabbed her rocks glass from the bar, and a bottle of Maker's Mark from the well and poured her a double neat. He went back to his work.\n\n\"Oh, I see you're a big drinker, huh, Andy?\" I could tell she liked saying it, like it gave her comfort somehow to be able to call me by my given name. Besides, she thought she was real clever to have found out so quickly. \"By the way, you didn't really look like a 'Mike,' anyway.\"\n\n\"That I am\", I said, defiantly in response to her question, \"that's why I drink seltzer water now.\" I gave her a sardonic toast and took a drink.\n\n\"Trying to walk the straight and narrow, Andy?\"\n\n\"Trying\", I answered, \"sometimes the walking turns to stumbling, but....\"\n\n\"Been there, done that.\" She said. She wasn't smiling.\n\n\"Looks like you're done 'trying'\", I said. I wasn't smiling either.\n\n\"I'm trying... I'm just not sure what exactly I'm trying for. But, I hope you make it, Andy. You've got a lot of talent; I don't want you to waste it.\"\n\n\"How do you know?\" I asked inquisitively. I wasn't trying to come off as standoffish or aloof, I just wondered how she knew anything about me. And then, for the first time, I sized her up. She really was incredibly pretty -- long, straight, light brunette hair, these sad, hazel-green eyes, nice body. It wasn't like she was trying to conceal it, but there was a modesty to her that suggested that she was a good girl, no matter how many bourbons she'd had.\n\nShe had this really beautiful skin, perfectly smooth and just a little bit pale, though somehow fresh and vibrant, like she spent a fair amount of time outdoors. She looked, ironically, healthy and happy. Her facial features were delicate and perfectly proportional -- thin, arching eyebrows that hung above her almond-shaped eyes, high cheekbones from which her slender face tapered downward, a long, straight, slim nose, and soft, thin lips that formed a perfect pout.\n\nShe was wearing this white, satin halter with spaghetti straps. It kind of billowed out around her midriff to expose a slender waist. A denim skirt was neatly wrapped around her hips. On her feet, she wore black, strapped pumps. Her leather jacket was slung over the back of her bar stool.\n\n\"I've seen you guys a few times. But I figured out something about you the very first time I saw you. You're a helluva songwriter, Andy. You may try to play the dumb, redneck rocker, but you don't fool me. Either you studied creative writing somewhere or you're some kind of freak fucking natural -- you know, some Georgia fucking Faulkner, or some damn thing.\"\n\nShe sat back and took a drink of her bourbon, apparently pleased with her creepy reading of me. What the fuck, I thought to myself. I don't know this girl. What makes her think she knows me? The scary part was that she had been right about a lot of it, but I wasn't going to mention that. I decided to set her straight on what she got wrong. \"I'm from Northwest Alabama.\"\n\n\"Well, then I was right. You're closer to Faulkner than I could have imagined. I'll bet I'm right on both counts. I've got you sussed, Andy!\"\n\n\"Sussed? You've got me sussed?\" I laughed out loud at that word. Two can play this fuckin' game, I thought. \"Who the hell are you? Pete Townsend? Paul Weller? You don't fool me either, Jenn.\" I said, emphasizing her name, with particular derision. \"You've got a degree or two in English lit hidden under there somewhere, or I'm not a fucking drunkard!\" I leaned back against the bar and took a greedy sip from my glass.\n\nShe laughed, not just a little chortle, but a hearty, full-throated, belly laugh. \"You got me there, Andy! You got me there!\" she said as she continued giggling. It might have been fun to keep this playful banter going, but we needed to do a sound check.\n\n\"Well, it was nice to meet you, Jenn, but I've got a gig to play, and we need to finish setting up, so...\" I guzzled more of my seltzer.\n\n\"So you do, Andy. Well, I hope you come back to see me later. I'll be sittin' right here all night long.\"\n\n\"Not planning on moving, huh, Jenn?\"\n\n\"Nope.\" I gave her that same smile from earlier -- the one that said I understood exactly where she was coming from without a promise of anything, and then I went back to the stage and helped the rest of the guys finish setting up.\n\nWe did two sets that night, and despite a big crowd, from my vantage point I could see her throughout the evening, sitting there cross-legged, watching, drinking. I made a point not to approach her during our break, even though I wanted to; there were plenty of other people I needed to talk to, and I was a little afraid of her already. Maybe more importantly, I was afraid of myself. But when we finished, I made my way back there with my empty seltzer glass.\n\nI could tell how drunk she was from a mile off, and I could tell by the way she sat there looking at me when I approached that she knew damn well I was coming back. She said, \"Andy, you're taking me home.\" I should have known. As much as I had tried to project a non-committal attitude, she was right, she had me sussed.\n\n\"It looks like somebody better\", I answered, as Jake slid another glass of seltzer water across the bar to me. I nodded my thanks.\n\n\"Right again, Andy. Right again. You're a real astute problem-solver.\"\n\n\"Okay, Jenn, but you're gonna have to sit tight while I help the guys tear down. I'll come back for you as soon as we're finished. \"\n\n\"Sitting and being tight -- two things I do extremely well, Andy. You know where to find me when you're done.\"\n\nWe finished tearing down and loading up, and I went back to the bar and found her sitting in exactly the same position on that bar stool that she'd maintained the entire night. \"Well, Jenn, you ready to go?\"\n\n\"Ready as I'll ever be, Andy.\" I helped her put her jacket on, and then got her to her feet, and as she took her first steps on her unsteady legs, I reached for her hand. \"You can do better than that, Andy\", she said with another wink of her eye. The place was nearly empty now, and it was 1:45 a.m. I put my arm around her waist, and she put hers around my shoulder, and we walked out of that hell hole bound together.\n\nI had driven with Ken, our pedal steel player, in the van, so I didn't have a vehicle. \"Where's your car, Jenn?\" I asked when we reached the parking lot.\n\n\"Over there, the Honda\", she said pointing to a red, mid-sized sedan parked in the corner of the lot.\n\n\"Where are your keys, Jenn? Better hand them over now, before you start have delusions of grandeur about driving.\"\n\n\"Delusions of grandeur? Hell, Andy, I can barely keep that car on the road when I'm sober! Besides, what the hell do you think you're here for, your good looks?\" I laughed, long and hard, as she handed me the keys with a drunken grin. When we got closer, I unlocked the doors with the electronic key fob and helped her into the passenger side. I walked around to the driver's side and got in.\n\n\"Where to, Jenn? Where's the ol' homestead?\"\n\n\"The ol' homestead. I like that, Andy. Well, the ol' homestead's just down the highway toward Athens. Just get on 29, and then I'll direct you from there. I started the engine and pulled out of the parking lot slowly. I wasn't sure that she wasn't going to lean over at any moment and start yackin' in my lap, so I was particularly cautious about inciting the least bit of motion sickness by driving too fast.\n\nAfter we were a mile or so down the highway, she turned to me and said sarcastically, \"I hope you don't mind my saying this, Andy, but you drive like my fucking granmama! I'll probably be sober by the time you get me home!\"\n\nI marveled at one thing about Jenn -- even when she was really drunk, and I would go on to see her really drunk many, many more times, she never slurred her words, never sounded the least bit intoxicated. Four sheets to the wind or stone-cold sober, she sounded exactly the same whenever she spoke.\n\nThe other thing was, she had this wit. I swear it was sharp as a tack, and it, too, was totally unaffected by her drinking. The drunker she got, the quicker she could land a zinger. I learned later that that was the way that Jenn Ryan kept her emotions in check, under control. It was her defense mechanism, so that people couldn't tell how fucking depressed or sad or insecure she felt at any given time. So, if she was drinking heavily, people just thought she was this really, funny drunk lady, when the truth was she was so much more complicated than that.\n\n\"Just trying to keep that bourbon where you put it\", I said.\n\n\"Shit, I'm not gonna puke, Andy. I usually only do that in the morning and when I'm sober. That's been happening a fair amount lately, for some reason, but I'm not gonna puke when I'm drinking. I'll pass out before that happens.\"\n\n\"Oh, that's great! Start puking after you pass out. That'll get you to heaven, Jenn! Haven't you ever heard of Jimi Hendrix?\"\n\nShe ignored my question. Then, she did something curious. She leaned as far forward in the passenger seat as she possibly could and looked up through the top of the front windshield at the sky. That was when she first told me what she thought about heaven. \"I don't think I'll go to heaven, Andy.\" she said, looking up with a smile. \"I don't think I could find my way there. Too many stars in the way!\"\n\nIt was a really interesting comment, and one so laden with psychological implications that, had I known her better, I would definitely have asked her about it, but I didn't know her, and so, at this point, it seemed best to ignore it. I changed the subject.\n\n\"You have a roommate, Jenn? Somebody you live with?\" I don't know why I asked that question. Maybe I was nervous about what she'd just said, maybe even a little afraid.\n\n\"Nah, just me, myself, and I.\" Now, I was sure that I was afraid.\n\nWe went three or four miles east on 29, until she told me to turn south onto Georgia 330. Almost immediately, we merged onto Tallassee Road and then onto John Collier Road. After a quarter of a mile or so, she told me to pull into a driveway that led to this small Cape Cod tucked into the edge of the woods. It was pretty far out, still sort of in the country, but it was a nice house, and I couldn't believe she lived there all alone.\n\nI went around to the passenger side, and just as I had in getting her out of The House of Booze, I put my arm around her waist, pulled her out of the car, and led her to the side door. She managed to get the key out of her purse, and unlocked the door, and we went inside, first to the kitchen and then to the living room.\n\nShe seemed drunker now that at any time in the entire evening, and she wasn't talking to me anymore. It was like the moment I got her through the door of her house, she gave up even trying to maintain any last hold on consciousness. It seemed to me that all of a sudden she felt safe, so she could relax.\n\nI instinctively knew two things. One, I needed to get her into bed as soon as possible, and two, she planned to sleep alone. Not that that mattered. I'm not that kind of guy -- the creepy, fucking dude who goes around hitting on drunken women, so he can crawl into bed with them when they're unconscious. I had been that drunk so many times in my life, that I knew better than anybody how easy it was to fuck with someone when they were that soused. It's not some fucking badge of honor, but I just wasn't going there.\n\nAt that point, I started thinking about my own situation. I figured as far as finding a place to sleep, I could fend for myself. It wasn't like she was going to make up a bed for me, for god sakes. Besides, once I had agreed to drive her home, I pretty much knew that this was how I'd cast my lot.\n\nI led her into the hallway and opened the first bedroom door I came to and determined that it had to be hers. I pulled back the covers and helped her sit up on the edge of the bed. I took off her leather jacket and her heels, and then laid her down. I purposely propped two pillows under her head. I wasn't taking any chances on her getting sick in the middle of the night and then suffocating to death \u00e0 la Jimi. Then, I pulled the covers over her, and just as I was closing the door of her room, she whispered, \"You're a regular prince, Andy.\"\n\nI went back out to the living room. It seemed that there was probably another bed somewhere in that house, but I didn't feel like snooping around in a place I'd never been before that belonged to a woman I didn't know.",
        "I went to the kitchen, found a clean glass, and got a drink of water from the tap. Then, I walked back into the living room, and as I took my time drinking the water, I found a huge bookshelf that, through a picture window, was illuminated enough by a street light just down John Collier Road so that I could explore its contents. It held hundreds of books and, on the top shelf, displayed a dozen or so framed photographs. I didn't intend to pry into her life, but the pictures were just sitting there, so I didn't think it would hurt to take a quick look at them. Besides, she was a real interesting person, and she already had me intrigued. I wanted to know more.\n\nMost showed a younger, smiling Jenn posing, sometimes with other people. I guessed that most of them captured her with her parents, grandparents, and siblings. One was of her alone, wearing a graduation gown and hood. I also looked at some of the titles of the books stacked carelessly on the shelves, in a way that convinced me that these were books that she actually read -- a lot of classical works of literature, but a whole lot of criticism as well. And though she'd already told me as much, I realized that I was probably right when I told Jenn that I knew she had a few degrees in lit.\n\nAfter I finished the water, I took the glass back to the kitchen, and used the bathroom. When I came back into the living room, I found a blanket folded over one arm of the couch. I took off my boots, put a pillow under my head, lay down, pulled the blanket over the top of me, and went to sleep.\n\nWhen I awoke the next morning, someone was singing. It was beautiful. As consciousness slowly crept through my brain, I recognized the cheerful sound of Jenn's a cappella voice wafting delicately into the living room from somewhere else in the house.\n\n\"Busted flat in Baton Rouge/Waitin' for the train/Feelin' nearly faded as my jeans/Bobby thumbed a diesel down/Just before it rained/Rode us all the way to New Orleans/I pulled my harpoon out of my dirty red bandanna/And I was playing soft/While Bobby sang the blues/With them windshield wipers slappin' time/I was holdin' Bobby's hand in mine/We sang every song that driver knew/Freedom's just another word for nothing left to lose/Nothin' ain't worth nothin' but it's free/Feelin' good was easy, Lord/When he sang the blues/And feelin' good was good enough for me/Good enough for me and Bobby McGee.\"\n\nHer sweet, girlish voice swirled around, infusing song into air that was already saturated with the heavy aromas of pancakes, bacon, and hash browns. She was a really good singer, a total natural -- clearly someone who had no idea how beautifully simple and expressive her voice really was.\n\nI sat up, pulled the blanket off me, laced up my boots, and then followed that voice into the kitchen. She'd changed her clothes -- was wearing a pair of shorts and a flowered blouse -- and she'd gotten herself cleaned up, and though I expected to see something resembling \"Sunday morning comin' down\", what greeted me instead was a vibrant, happy woman who looked years younger than the lady from the bar the night before. God, she was pretty!\n\nShe finished the last few bars of \"Bobby McGee\" as I entered the room, though she kept busy with her cooking even after she stopped singing. \"Mornin,' Andy\", she said when she saw me come in. \"How you feelin' today?\"\n\nI laughed. \"I'm supposed to ask you that\", I said sort of sullenly. She was up hours before I expected her to be. I figured that after she had slept in, she'd be able to give me a ride into town, and then I could spend the rest of the day patting myself on the back for having done my good deed for the year. But I could tell right away, she had other ideas.\n\n\"Well, thank you for asking, Andy. I feel wonderful -- tip top. Why don't you set yourself down at that table there, and I'll load you up with breakfast. We got a big day ahead of us.\"\n\n\"We do?\" I asked, as I took a seat at a small, round table in the corner of the kitchen. Sitting invitingly atop the table were plastic containers of syrup and ketchup, a plate adorned with a stick of butter, and two glasses of orange juice.\n\n\"We sure do, Andy. You didn't think I was gonna let you walk out of my life that quickly, did you? If you did, you don't know Jenn Ryan.\" It was the first time she'd told me her surname.\n\n\"And, Andy, I'd kind of like it if you'd get to know me a little better. I already feel like I know you real well.\" She was just finishing up putting all of three of the things she'd just cooked onto a serving platter.\n\n\"How's that, Jenn?\"\n\nShe walked over to the table carrying the platter and a spatula and flopped a couple of pancakes onto the plate in front of me, then slid several strips of bacon from the platter, and scooped a spatula full of hash browns into the remaining empty corner of my plate. I nodded my thanks.\n\n\"You don't think you bared your soul to me last night, Andy?\" she said, staring at me really intently.\n\n\"Not exactly, we talked for, what, a grand total of 15 minutes?\"\n\n\"Andy, I listened to your songs for hours last night. There's a lot to unpack there. For instance, are you really afraid of dying in a cheap motel, like you talk about in that one song?\"\n\n\"Jesus, Jenn! I'm just a songwriter. It's just a song.\"\n\n\"Just a song!\" she scoffed. \"Bullshit, Andy! Good songwriters pride themselves on telling the truth, and honesty is more important to you than almost any other songwriter I've ever heard.\"\n\n\"Okay, Jenn, but as long as we're 'unpacking' things, ya' mind telling me what the hell you were doing last night? Nobody gets that drunk without having a damn good reason, and usually that reason involves somethin' unpleasant, at least in my experiences.\"\n\n\"Wow, Andy! You're a pretty shrewd observer of people. I guess you have to be to be a good songwriter, and you're a damn good songwriter, Andy.\"\n\n\"Well, I may or may not be a good songwriter, Jenn, but however good I am, you're an even better question dodger.\"\n\nShe got this glum look on her face, like she knew that I had somehow cornered her, and then she plated her own breakfast and sat down in the chair next to me. \"I was kind of hoping that I would get to know you a little bit better before I unloaded all of my garbage on you, Andy, but I guess you've already seen me at my worst, so maybe it doesn't matter now.\"\n\n\"You don't have to tell me, Jenn -- you don't know me from Adam, and you sure as hell have no reason to trust me -- but maybe you want to tell me anyway. I find it usually helps, especially if you tell somebody who's been down that road -- you know, whiskey road.\"\n\n\"You know, Andy, like I said, I feel like I do know you, and more than that, I've decided that I absolutely trust you. Not many guys would have taken care of me like you did last night, Andy. They would have tried to fuck me or worse, and considering how gone I was, they would have succeeded, and then, I would have felt even worse than I already did. Most guys are fucking assholes. By the way, I haven't said it yet -- thank you for what you did. You know, Andy, I figured out one other thing about you last night -- you're a really good guy.\"\n\n\"You sure do like saying my name, don't ya', Jenn?\"\n\n\"It's a nice name, better than 'Mike'!\" she winked at me again.\n\nI ignored the small talk. If Jenn Ryan was going to talk to me, I was damn well going to listen. I had already decided that I liked her, and beyond her obvious skills as a conversationalist, it was hard not to like looking at her. \"So, what's going on?\"\n\n\"It's family, Andy. I've got an entire family that has no idea who I am, and what they do know about me, they don't like. I'm a goddamn pariah in the house I grew up in, and that's just too hard to take sometimes, especially when you feel like you're the one that hasn't changed. So when I have a particularly bad day, like I did yesterday, I try to wash it away with bourbon. It usually doesn't help, and it sure as hell doesn't last long enough, but, you know, Andy, today I feel a lot better than I did yesterday, and do you want to know why, Andy?\"\n\n\"Yeah, sure. Tell me why, Jenn. What, are you oblivious to hangovers?\"\n\n\"I don't get hangovers when I'm happy, and I'm happy because I like you, Andy. I'm happy because I had the courage to talk to you yesterday, and, more importantly, because you listened to me. Not many people do; certainly not my family.\"\n\n\"So, let me take a guess\", I said, piling a forkful of pancakes into my mouth. I paused to chew, and then proceeded to present my theory to Jenn. \"You come from an old, Southern, Irish family that made its money from the land, somehow, and you, Jenn, are the first of the Ryan clan to go to college, and the rest of your kin doesn't much appreciate that -- you being more educated than the rest of them and, in their minds, sort of rejecting their way of life -- sort of a clash of cultures -- the New South versus the Old South.\"\n\n\"Jesus Christ, Andy!\" She looked at me in disbelief. \"Am I that obvious -- that easy to read? I can't believe how close you got! My parents didn't farm, and we don't own land, but they ran a farm implement dealership down in Fort Valley, and so you're right, they made their money from the land... indirectly.\"\n\n\"And more importantly, you're spot on about the education part. That's pretty poor country down there -- mostly just small, peach farmers -- and even though we weren't poor, nobody from around there goes to college, unless you count the guys that got football scholarships, and, as we all know, they don't really go to college! So my parents were suspicious enough when I came to Athens as an undergrad -- you know 'all them damn liberal elites'\" -- she said, mimicking someone, her father maybe, but I couldn't be sure.\n\n\"But then I graduated and went on to graduate school, and then they -- my mama and papa and all my siblings -- just freaked. In their evangelical zeal, they thought I was pretending to be better than God or something. They also acted like I thought I was better than they were 'cause I read shit they'd never heard of. My god, were they wrong about that one. Spend a week inside a bourbon bottle and see what that does to your self-esteem.\" I winced -- the understandable reaction of someone who has done exactly what she was describing. I changed the subject.\n\n\"What do you do, Jenn? For a living, I mean?\"\n\n\"I work for the University's literary magazine -- The Georgia Review. I'm an assistant to the editors.\" She stared at me intently again, and this time, she changed the subject. \"But how did you know all that, Andy?\"\n\n\"That sounds interesting, Jenn.\" I said, avoiding her question, at least at first. \"But as for 'knowing all that,' I'm only trying catch up with you anyway. I may have gotten lucky guessing about your family, but you saw me comin' long before I saw you. You were right -- I did study creative writing back in Memphis, so I guess we're even on the creepy observing and reading people front.\"\n\nShe laughed. \"Yeah, that was a guess, too, Andy. But you know something, I don't care if you did study writing, I think my other theory makes more sense -- I think you were born a writer. And that comes from someone who works with writers all day long.\" She smiled at me, a smile that was comfortable and natural, and that was the first moment that I felt something for Jenn Ryan, felt it as powerfully as if I was the one who had drunk a whole bottle of Maker's Mark.\n\nI smiled as I finished the last bite of my breakfast. I changed the subject again. \"Well, Jenn, what have you got planned for us today?\"\n\n\"You mean you'll spend the rest of the day with me?\" I could tell she was genuinely excited. \"I know that's asking a lot, Andy, and I've already asked too much of you. If you've got something you have to do, I'll take you home right now. But I sure am enjoying talking to you, and I would love it if we could do somethin' together!\"\n\nI smiled meekly. \"Sure, I got nothin' to do. I'm at your mercy, Jenn Ryan! But take it easy on me! I'm not as young as I used to be!\"\n\n\"Andy, you crack me up!\" she said pleasantly, and she leaned over and gave me a hug. When she broke the embrace, she asked, \"Would you like to go for a hike somewhere -- someplace pretty?\"\n\n\"Sure, that sounds nice.\"\n\n\"How about Sandy Creek Park, north of town? You ever been?\"\n\n\"Nah, I don't think so.\"\n\n\"They've got this great, little lake there -- Lake Chapman, with a nice beach, and all. But to be honest with you, I just like to walk the trail around the lake. It's real pretty in the woods there. Real peaceful.\"\n\nI stood up. \"Well, let's go then!\" I said. But then the moment the words left my lips, I caught a reflection of myself in a mirror hanging in the hallway. Instantly, my vanity kicked in. I liked this girl; she was really pretty, and I looked like shit. After you reach the age of 35, looking like shit is a natural consequence of sleeping on other people's couches. I decided to ask her a favor. \"But first, do you have an extra toothbrush I can use? I need a shower -- it's kind of amazing how much I sweat up there on that stage -- but without any clean clothes to change into, I'll settle for brushing my teeth.\"\n\nShe smiled at me and shook her head. \"Take a shower, Andy. You'll feel better, even if you have to put your dirty clothes back on!\"\n\nShe found me a brand new brush, a tube of Colgate, and a wash cloth and towel. I used the shower, and cleaned myself up just a bit. And then, a few minutes later, we got back into Jenn's Honda, and she drove this time, wending her way north and east until after 15 or 20 minutes, we found ourselves in a parking lot overlooking Lake Chapman. We spent the afternoon walking the Lakeside Trail and talking.\n\nAbout three quarters of the way around the trail, we stopped and sat on a park bench overlooking the lake. Jenn decided to use the pause to ask me more about myself. \"Did you live in Europe, Andy, like you talk about in that song -- the one about wanting to come back home?\"\n\n\"It all depends on what you call living, Jenn. But, yeah, I spent some time there -- a long time ago. I didn't have any money, and I was kind of out on the streets -- in Brussels, Amsterdam, Hamburg, Copenhagen, Stockholm. I'd get these jobs every once in a while, working on the docks or in train yards, anything to make some money to buy a ticket home. It took a long a time -- over a year -- but finally I stopped drinking long enough to save up enough money, and I got out.\"\n\n\"How did you end up in Europe, Andy? Did you go there for a reason -- to see the antiquities, the sights, maybe, or were you just another college kid bumming around the continent, looking for parties?\"\n\nI looked at her really seriously. She was asking me to truly bare my soul, and I wasn't sure I should, but she sat there with such an angelic look on her face, like she really wanted to know more, so after a few seconds, I relented. Something about her made me want to tell her the truth, or at least some of it.\n\n\"I was escaping, and that's where I decided to escape to. It was a long way away from home, and so, it fit the bill.\"\n\n\"Okay, but now you're dodging, Andy. What were you trying to escape?\"\n\n\"Failure, I guess. I had just gotten divorced, and I didn't have a real high opinion of myself. I guess, I thought I could hide there.\"\n\n\"Divorce... that must be really painful\", she remarked empathetically.\n\n\"Yeah, especially when you know that you're 100% to blame.\"\n\n\"If you don't mind my asking, what happened, Andy? Between you and your ex-wife?\"\n\n\"Well, that's pretty simple -- she decided she didn't want to be married to a drunkard. Anyway, it didn't take me too long to figure out that it really doesn't matter which continent you happen to be occupying when you're drunk. And no matter which continent it is, after a while, all you really want to do is to get out.\"\n\n\"That's a great, great song, Andy! Last night it made me cry. I didn't know the whole story, but I could feel your struggle in it. That's what I mean about you and honesty. I knew last night that there was more truth in that four-minute long song than there would be in reading the entire Journal-Constitution cover to cover this morning.\"\n\n\"Well, thank you, Jenn! I think that's about the nicest thing anybody has ever said to me.\"\n\n\"What?\" She looked really confused. \"About the Journal-Constitution? About being honest and truthful? What I said about it being a great song? What do you mean?\"\n\n\"No\", I paused, \"about it making you cry. I guess that's what I consider the songwriter's job to be -- to make other people feel what they were feeling when they wrote the song. That song made me cry a dozen times, before I was done writing it. And it made me cry a hundred times when I was living it.\"\n\nShe smiled at me, almost as if she was proud of me. \"Andy, you're better than your past. I hope you know that.\"\n\n\"I'm better than when I was living that past. That's for sure.\" I didn't say anything more, and we sat there silently for a minute or two, kind of mesmerized by the sun shimmering off the water. All of a sudden, Jenn leaned over and kissed me on the cheek.\n\n\"What was that for?\" I asked her smiling sheepishly.\n\n\"I already told you. You make me happy.\" It was pretty clear that Jenn had some feelings for me, too, but I was afraid, afraid about rushing into anything that might just ruin a good thing, and in the end, I guess I was afraid of her and afraid of myself, so I didn't do anything, just sat there with that stupid grin on my face.\n\nWe finished our walk, and then Jenn drove me back into town to my loft apartment downtown. When I got out of the car, she leaned over to the passenger side and looked up at me through the open car door. \"I had a real nice time, Andy! Thank you, and thank you for taking care of me last night. I hope I can see you again sometime.\"\n\n\"We're headed to Atlanta tomorrow, Jenn. We're playing a handful of clubs around there this week, but we'll be back at The House of Booze on Saturday night. Why don't you come to see us again?\"\n\n\"I think I'd like that, Andy.\"\n\n\"Oh, and Jenn, if you do come to see us, try not to drink so much bourbon this time, okay?\"\n\n\"I'll do my best, Andy, but you know how it is!\" she smiled at me. She had a really pretty smile, and I knew then that whether or not Jenn Ryan was trouble, really didn't matter. I was smitten.\n\n\"Bye, Jenn.\"\n\n\"Bye, Andy.\"\n\nI closed the door, and climbed the steps to my loft. When I got to my apartment, I grabbed my HD-28, and I sat down on the couch and started fooling around. Then, I got serious. I found my notebook and started writing.\n\nWords come first, not music. I had a few thoughts in my head, and by the time I took a break to make myself something to eat, I had a pretty good start on the lyrics. Sometimes those thoughts flow pretty well; other times I can't write a line to save my life. That's just the way it goes. But that night Jenn Ryan was my muse, and Jenn was good material to start with, so that evening was one of the more productive ones I had had in a while.\n\nWe had four good nights in three venues in the Atlanta area that week and returned to Athens on Saturday for our gig at THOB, and when I arrived there at six o'clock that night, Jenn was waiting for me at the bar. She was drunk again.\n\nThat night was very nearly a reprise of the previous week. Jenn and I engaged in playful banter, and when we were done with our last set, she informed me again that I was to drive her home. There wasn't much doubt about it. Considering how I already felt about her, I was all prepared to do as I was told.",
        "Ken had driven me to the gig again, this time in his pickup truck, instead of the band's van, which needed a new fan belt, and because his truck was a little smaller than the van, I had to carry my Martin with me when I left THOB that night.\n\nI put it in Jenn's trunk, and we headed back down the highway to her place on John Collier Road. I got her inside. I had no expectations for sex -- as drunk as Jenn was, it just wasn't going to happen, and, more importantly, I didn't think she wanted it to. But I did resist a junior high school urge to snuggle with her when I put her to bed again.\n\nI suspected that Jenn wouldn't have minded if I would have shared her bed, but I would have felt a lot worse if I had, even if it didn't bother her. She'd already told me more than once that she trusted me more than almost anybody she knew. But in one of those rare instances when we male ogres prove to be a little bit better than most people expect us to be -- including ourselves -- I chose instead to be a Southern gentleman.\n\nThis time I slept in a second bedroom, and when I awoke on Sunday morning, Jenn was again preparing breakfast, and that morning she was even a little more chipper than she'd been the previous week. She told me several weeks later that the reason she was in such a good mood that morning was because she was falling in love. She wasn't the only one.\n\nAfter breakfast, she asked me again if I wanted to go hiking with her, and when I said yes, she broke out some weed and rolled up a couple of joints, one for her living room and one for the trail. I resisted the urge to partake. Weed just made it harder for me to avoid drinking, so I passed.\n\nWhen we got back to her place after the hike, she made us a huge plate of nachos, and then asked me to play some music for her. I got out my guitar and sang a few old ones, and then I tried to play her the new song I was working on. She knew right away that it was about her.\n\nThen, right before I asked her to give me a ride back to my place, she asked what I was doing the next day. We didn't have another gig again until Tuesday, and that was in Columbia, so I had a day off on Monday. When I told her I was probably just going to write for a bit, she asked me if I had enough time to go with her to her doctor's appointment. She mentioned that the doctor's office was right by my place.\n\nShe didn't seem terribly concerned about it, though she mentioned that she'd had several appointments that month, and that they'd already done some tests, a biopsy, and a series of MRIs during her earlier visits. She said it was all just routine, but clearly something must have been wrong. She asked me if I would go with her to talk to the doctor about the results.\n\nI didn't think much of it. I just thought that she enjoyed my company, and that it was something for us to do together. Besides, I pretty much would have followed her anywhere at that point. Stupid mistake. Maybe I should have thought a little harder. Nonetheless, I said yes, and Jenn gave me a ride home that night.\n\nI realize now that she probably knew, or at least had some inkling of what was happening. She'd mentioned to me about getting sick in the morning, though it was always when she was sober, so I think subconsciously she must have known something.\n\nThe Athens Neighborhood Health Center is only about a half mile north of my loft in the downtown district, so when Jenn came over that next morning, she parked her car on the street, and we walked there. Jenn had the morning off, and it was a nice, spring day, so it seemed like a pretty good idea. Again, big mistake.\n\nEven though the appointment was scheduled for 9:30 a.m., we sat in a waiting room for over an hour before the nurse got us in. Once we did talk to the doctor, I realized that Jenn would have been better off if she would have had to wait a whole lot longer to see him -- like forever.\n\nFirst, the doctor -- a guy named Weber -- thought I was her husband. Then, when she told him she wasn't married, he assumed I was her boyfriend. By the time she made it clear to him that I was just a friend who she'd asked to accompany her to her appointment, it was already too late -- his demeanor had given him away. I knew something was wrong, seriously wrong, and so did Jenn. He told her he couldn't discuss the test results with her while I was in the room, without her first signing a waiver. She said she'd sign any damn thing he wanted signed, and he relented.\n\nThe cancer, he said, had metastasized. It had started in her pancreas and had already spread to nearby lymph nodes. I remember hearing the words: \"Stage 4\", \"exocrine\", \"adenocarcinoma\", \"resection\", \"the Whipple procedure\", \"chemotherapy\", \"radiation\", but quite honestly, I don't think much of anything registered with either one of us after we heard the \"C\" word for the first time.\n\nFrom that moment forward, we hardly ever talked about it. Jenn didn't want to, and pretty soon, if I tried to get her to share her feelings, she crawled inside a bottle and wouldn't come out. I realize now that she was repressing the subject because of me. She was trying to spare my feelings -- like my feelings were the most important consideration. But that was Jenn. So it became the elephant in the room. It was there all the time. We'd just try to ignore the elephant... somehow.\n\nI don't know shit about medicine, so I'm not going to be able to explain many details about what went on after that day. I know that Weber said he wanted the Whipple done as soon as possible -- considering that even though Jenn had cancerous cells in her lymph nodes, they were still localized. That along with her age, and the fact that she was, in all other ways, a healthy person made surgery an option in her case. He said that he had already contacted the best surgical oncologist at Emory University Hospital -- a Dr. Mayer, and that he had scheduled the resection for Friday morning in Atlanta.\n\nThe rest of the time at the clinic was just a lot of processing of insurance forms, during which the clinic's nurses pointed out the good news -- that Jenn's insurance through the University was probably the best coverage anyone could possibly have. I don't know how that could be considered good news, but I suppose if whatever puts you in the hospital doesn't also put you in the poor house, there is some silver lining.\n\nI do remember the doctor saying one other thing -- that it was quite rare for someone her age, her weight, and her general state of good health to have developed pancreatic cancer, and having apparently already asked her about her drinking in earlier visits to the clinic, he concluded that there were two potential causes -- first, the amount of alcohol that she regularly consumed, and secondly, a genetic predisposition that very possibly existed on her father's side.\n\nI don't know why he said that -- like knowing why she was sick would somehow make being sick better. He said that she couldn't do anything about the latter, but the former? That was up to her. He told her to stop drinking immediately. I probably rolled my eyes when he said it. Fat chance of that!\n\nWe didn't make it back to my place until fairly late that night. There were just too many bars on that half mile walk. By the time she'd called in to The Georgia Review to say she wouldn't be in that afternoon, we were already on our second round.\n\nIf I'd fucked her before she got sick, I'd never have heard the end of it, so maybe my chivalry the previous two weekends had saved me some unpleasantness at some unforeseen moment in the future. Jenn had this uncanny sense about when people did things for selfish reasons -- her family, for instance -- and so she would have known, and though I suspected that she already loved me, I think she would have held it against me. So I'm glad I didn't.\n\nBut that night, she needed me -- really needed me, and no matter what lie I might have tried to convince myself of, the truth was I needed her, too. We were just two incredibly vulnerable people, and we were way more vulnerable together than either one of us would have been by ourselves. It was like our helplessness increased exponentially when we were together.\n\nIt's a miracle that we could even have figured out what the hell we were doing in bed that night, considering how drunk we were, but for some reason, both of us have absolutely crystal clear recollections of everything, and after an undeniably ugly, horrible day, it became the most beautiful memory that either one of us owned. Before midnight called an end to the second worst day of my fucking life, I was in love with a dying woman.\n\nI don't know why she did this so quickly, but the next morning, Jenn left my place early and drove over to her office on campus, and told her bosses -- the editor and managing editor -- about her illness.\n\nShe asked to take a leave of absence immediately, and they tearfully agreed that that was probably a really good idea. She had long-term disability insurance, so she would continue to be paid when she wasn't working -- at least for a while. When she came back to my loft after meeting with them, she told me that she was coming to Columbia with us that day.\n\nI was both delighted and terrified by that revelation. I wanted and needed her by me, almost as much as she wanted and needed me at her side, so we both decided that if it could be arranged -- what with all of my gigs and her doctors' appointments -- we would try our best not to spend another night apart from each other. Considering that New South was on the road a lot, and was about to begin a tour and Jenn had the surgery scheduled on Friday, and chemo and radiation planned for as soon after as the oncologist thought safe, staying together was going to be a challenge.\n\nI was all ready to scrap the tour entirely, even leave New South so I could stay with her, but Jenn wouldn't let me. Our latest record had gotten really good reviews, and we were starting to play bigger venues -- the way things were looking, in a month or two there would be no more Saturday night gigs at THOB -- it seemed like everything might be starting to take off for us.\n\nBut the truth was I didn't care. And the even bigger truth was that that rocket launch was about to become the most pathetic take off in alt country history. Our rocket to success didn't even get off the launching pad -- just sort fell over and fizzled for a while.\n\nBut if I didn't care, Jenn, on the other hand, did. She said that sticking with my music -- really trying to make it -- was her first wish, and over the next year, I was committed to granting her wishes, one by one, until she was done wishing, so I was going to keep trying. In the end, I guess I was really happy that she wanted come to Columbia with us.\n\nThe problem was that I considered my fall from the proverbial wagon on that Monday an anomaly, an understandable slip-up, considering the fucking bombshell that the doctor had dropped on both of us. I really wanted to try to pursue sobriety, and I was convinced that it was the only way that I could ever make good music.\n\nBut Jenn, how in God's name could she avoid drinking and smoking weed now? If there was ever a time she needed bourbon and herb, it was then. And somehow I knew, knew it as clearly and as certainly as I knew my own name -- if Jenn was using, I was, too. And if we were going to be together, and if I was going to try to make it, we had a problem, a big, big problem for which there were no simple solutions. Something had to give, and it turned out to be New South.\n\nBut that next day, she rode with us up to Columbia. We played two nights in a concert venue there, and the crowds were huge, the biggest we'd ever had -- it seemed like every student in South Carolina was at one of those two shows.\n\nBy the time we came back on Thursday, every one of the guys in New South considered Jenn Ryan a part of the band. That was a way she had. She could talk to anybody -- make anybody feel at home, talk to them in this unassuming way, so that they never wanted to stop talking to her. Anybody, that is, except every member of her fucking family.\n\nUnbeknownst to me, she had called her parents to tell them about the surgery, and so when I drove her to the hospital in Atlanta to check in on that Thursday night, her whole family showed up -- her mama and papa, her two brothers, and her sister and her husband -- all of them having driven up from Fort Valley.\n\nI don't know why they came. They acted like they really didn't want to be there, and if I thought that they all treated me like shit, that was pure kindness compared to the way that they treated her. It was almost as if they were convinced that her education and its attendant snooty ways had brought on the cancer -- some kind of Old Testament retribution for the sin of thinking she was better than God -- a plague just as surely as if water had been turned to blood, or frogs or lice or locust had descended from above.\n\nThe next day when she came out of surgery and the nurses brought her back to her room, I sat in a chair next to her bed holding her hand, while all six of them stood around it and then wandered in and out of the post-surgical wing, not saying anything to her or to me. Then, for the first time I saw it, saw the future -- though she was surrounded by her family, I saw that she was dying alone.\n\nBoth Dr. Weber and Dr. Mayer thought the surgery went well, and we only had to wait a couple of weeks before Jenn could begin chemoradiation therapy. And then, once the chemo and radiation started, and she could barely keep any food down, the only thing that helped was smoking pot.\n\nA month or two later, against our manager's advice, we kind of cut back on our gigging. That was because of me -- or rather, because of my desire to spend as much time as possible with Jenn. We did an abbreviated tour of Midwestern college towns, then skipped the rest of the tour we'd planned for Texas, the Southwest, and the West Coast. In all, we only did about two weeks' worth of shows, and then we came back to Athens so I could be with her. After that, we went back to doing our regular gigs in the area. That allowed me to spend a lot of my time with her.\n\nI'd bring my guitar over to her place, and play her the songs I was working on. But since all of them were about her, after a while they only added to the size of the elephant in the room, and it was all better left alone, and so, pretty soon I stopped that.\n\nWe didn't talk about the elephant. It was a classic case of repression. It was always there, but the bigger it got -- as more and more disappointing test results came back -- the more we would try to forget and would talk about something, anything else, and try to ignore the elephant somehow... somehow.\n\nMusic became the best distraction, though when we were together, I stopped playing all of my own stuff in front of her. Instead, we started doing tunes together. I'd sing her classic country songs, and she'd get high and sing along, and once that happened, it only seemed natural -- if Jenn was going to join in with me, I would join in with her as well -- joints are sort of made for sharing.\n\nThe first one was \"Bobby McGee.\" It seemed oh so appropriate. When we first started doing it, I'd do the original version -- the Kris Kristofferson one from the guy's perspective, singing about \"Bobbie\", instead of \"Bobby\" McGee, but then once Jenn started singing along in that incredibly evocative, but absolutely simple vocal style she had, we changed it back to the Janis Joplin cover, talking about \"he\" and \"him.\" Again, we didn't discuss it, but it was better if the guy, rather than the girl, died.\n\nFor fairly obvious reasons, her favorite songs were all of these really sad country tunes -- you know, the \"tear in my beer\" canon: \"I'm So Lonesome I Could Cry\", \"Blue Eyes Cryin' in the Rain\", Sunday Morning Coming Down\", \"Green, Green Grass of Home\", \"Long, Black Veil\", and \"From Boulder to Birmingham\" among others.\n\nBut her absolute favorite was the Jimmie Rodgers song, \"Peach Picking Time in Georgia\", which ultimately, was exactly the opposite sort of song. She said it reminded her of happier times, when she was a child, and her family was a whole lot more cohesive than it was now. She really got a kick out of that line about Alabama, since I was from there -- you know, where Jimmie goes through what time it is in all those states -- Georgia, Tennessee, Mississippi, and Texas, and then ends with \"Then down in old Alabama/It's gal pickin' time to me.\"\n\nShe was kind of funny about some things like that -- she really liked the idea of her being \"my gal.\" It was kind of old-fashioned, despite the fact that Jenn was an unrepentant feminist at heart. As much as I had guessed correctly about the New South versus Old South conflict in her family, there were times when she clearly identified with the old. She was pretty nostalgic when it came right down to it. It became a kind of inside joke between us -- I was \"the New South\" for obvious reasons, and she was \"the Old South\", the antebellum melodrama, minus the racism, sexism, and classism.\n\nBut old or new, it didn't take long before the weed we were smoking, ostensibly to relieve her nausea, led me down a familiar path, and then it took even less time before my trips to the liquor store became a daily occurrence.\n\nAfter a few months, it started to get worse and worse, and the more depressed we both got watching the debilitating effects the therapy had on her body and how badly all the test results came back, the earlier in the day the drinking got started. Pretty soon, the mornings were all the same: for me, Seagram's in a coffee cup, and for her Maker's Mark in a juice glass -- she always did have more expensive tastes than I did! Then, once we had a couple under our belts, a joint to help her keep her breakfast down.\n\nAnd then the nights became just as predictable: we'd get drunk, and then I'd carry her to bed, and if she was up for it, we'd make love. But then after a while, it started to register with me: she don't have the spirit for that now. Once she went to sleep, I'd try to clean up -- sweep up the hair from her floor and shit like that. Still, it's hard to sweep up after the elephant. It makes a pretty damn big mess.\n\nOn the surface, the booze and the weed made things better -- sometimes almost bearable. If she had a particularly good day, she'd come to see us play, usually at THOB, but occasionally, if she was doing really well, at some more far-flung location. And though she didn't really talk about the elephant, there was one exception.\n\nWhen she was drunk, she made cancer jokes, and for some reason, she always did it when other people were around, and no one laughed, and then the people would get up from the table, uncomfortably, and make some excuse why they had to leave. Occasionally, some people, our closest friends, would started crying, and then she felt bad, and so after a while, she stopped making the jokes. They really weren't funny anyway.\n\nBut when she did come out, and wasn't being morbid, we had fun. Those are some of my fonder memories. During breaks between sets or after we finished playing, we'd just drink our drinks and laugh out loud, and bitch about the weekend crowd. They never seemed to get the music exactly. Then again, nobody seemed to be getting it anymore.\n\nAnd then it became obvious to just about everyone -- the crowds were smaller, and pretty soon so was the press we'd been receiving. We had a deal to do another record with the label that had released our last two, but then they cancelled that. I wasn't writing very many songs any more, and the ones I was writing weren't very good.",
        "Pretty soon, with the hair almost all gone, Jenn started wearing this Rasta hat that I had given her. You know, one of those black, yellow, green, and red knit Jamaican berets from which your dreadlocks are supposed to dangle, unless, that is, you decide to tuck them underneath. You see, that was one of her cancer jokes -- she told everybody she was going to start growing dreadlocks! That's why I bought her the hat.\n\nI got it for her when we were playing Charlotte. I found it in this, like, hippie gift store, and I was real pleased that she liked it. She had such a pretty face that, even without hair, she was just so fucking beautiful. God, I loved seeing her in that hat!\n\nIt brought out, what I told her were her sharecropper eyes, those hazel-green orbs from which the life was slowly, almost imperceptively, draining. They always looked sad, even before she got sick, and even when she was the happiest. They just struck me as the kind of eyes that you'd see in those Dorothea Lange photographs of Dust Bowl victims, albeit in black and white, not hazel-green.\n\nAs she got weaker and weaker, it became harder for her to drink. It seemed to take a lot more out of her. So she just smoked more, and when she did, so did I. And for some reason, the pot made us even more nostalgic, and probably more philosophical. One night, I remember Jenn raising the last big spliff of the night in a sardonic toast, \"We burn these joints in effigy\", she said wryly. Even though it was the only thing that kept Jenn from being sick, we ultimately knew it wasn't good for either one of us. Besides, we both felt like we'd gone backwards.\n\nAt the end of last year, Georgia legalized medical weed for certain patients, and Jenn went straight down to Dr. Weber's office on the very first day to get her prescription. Georgia wasn't like some of the more progressive states where medical and even recreational pot was legal. You could only get cannabis oil, which didn't bother Jenn at all. She just mixed it with the pot I was already buying for her. It just made it that much stronger.\n\nYou were supposed to get the prescriptions refilled by the doctor, like, every few months, but Jenn was fucking sick of doctors, so instead of going in, she made up her own doctors' notes for the scrips. She said she was pretty sure that sooner or later she was going to get caught, but she reasoned, \"What the hell are they gonna do to me?\" Besides she didn't think she'd last that long. She was right.\n\nNine months ago, I quit New South so I could take care of Jenn. I was dragging them down, and I knew it was my fault that our fortunes had turned. Every guy in the band, as well as our publisher, told me I was wrong, that we'd only gone as far as we had because of me -- that it was my songs that people related to in the first place -- but that was little consolation for the fact that we'd missed our opportunity.\n\nThe only exception was Jason, our manager. He pretty much blamed it all on me, and I could hardly argue otherwise. Everybody knew that my drinking had fucked me up... we all assumed, for good. That's when I decided to quit again.\n\nJenn couldn't drink anyway, and it was really her wish that I stop. She reminded me of something that she'd said to me all those months ago, that first morning we spent together having breakfast, \"Andy, you're better than your past.\" She said that our using was ultimately just a lame way to \"cry about what we used to be.\" And that's what finally did it. I just quit cold turkey, and for several days, I was as sick as Jenn was.\n\nUnfortunately, after a couple more months, even the pot didn't help her. It was all just pain medication now. So I completely stopped using, too. I was too busy trying to take care of her; that was pretty much a full-time job.\n\nJenn was so weak now that she couldn't go out anymore. But one final time, in one of her very last wishes, I took her out to Sandy Creek Park, at night, so she could look at the blanket of stars that filled the night sky.\n\nI had to push her in a wheelchair, and we could only make it into the parking lot next to the lake, but considering it was her last visit anywhere, I could tell that it was really important to her. No one else was around, and so that was when she told me her theory about the heavens. It was the one and only time in the year we were together that she cried.\n\nIt was a crisp spring evening, so I had about ten blankets wrapped snuggly around her as she stared up into the crystal clear darkness. We were far enough out of town that the artificial light from the city, light that normally hopelessly dilutes the brilliance of the stars, was non-existent. For a long time, she just gazed up, not saying anything.\n\nFinally, after 10 minutes or so, she started to wax poetic. She told me that to her \"heaven\" and \"the heavens\" were indistinguishable. She used those words interchangeably. She said the reason that writers and thinkers had long called the night sky \"the heavens\" was because it was the closest thing to perfection that any of them had ever imagined, and, therefore, it had to be named for eternal paradise.\n\nAnd then she reminded me again, that she didn't think that she would go to heaven. She said that the world was too close to perfect, and that she couldn't find her way out of it because there were too many beautiful things to distract her. \"I'm afraid, Andy, afraid I'll get lost on my way.\"\n\nThat's when she started crying. I just held her and cried with her. But even then, and so many times since, I have marveled at how someone whose own family wouldn't speak to her, whose hair had fallen out, and who had lost at least 40 pounds. Someone who was so weak that she could barely sing, which was what she loved to do more than anything else. Someone who had spent so many of her days and nights shackled to a bottle of bourbon and a joint that she couldn't even recognize her own beauty. How could that person think of the world as such a beautiful, perfect place? But that was Jenn, and even though I loved everything about her, I think that was the thing I loved the most.\n\nThat night in the parking lot, even though her voice was raspy, and she had to warble through her tears, and it took every ounce of energy she had, she sang for me one last time, while I sobbed like a baby.\n\nThe song was one of her favorites -- The Carter Family. \"Well, there's a dark and a troubled side of life/There's a bright and a sunny side too/But if you meet with the darkness and strife/The sunny side we also may view/Keep on the sunny side/Always on the sunny side/Keep on the sunny side of life/ It will help us every day/It will brighten all the way/If we keep on the sunny side of life.\" Another bit of irony -- she sat in that wheelchair and sang that whole song in the darkness, looking up not at the sun, but at the stars.\n\nThe next day I had to call home hospice. They sent over a middle-aged woman, Mary Beth, who proved to be nothing short of a saint. I don't know what I would have done without her. Jenn was in bad shape, but even through all the pain, I could tell she appreciated having Mary Beth there. Jenn couldn't get out of bed now, and she could barely talk, and someone had to administer the opiates nonstop. It was better that it wasn't me.\n\nI also called her parents. Maybe I shouldn't have, but family is family. They came. The whole lot of them came, just like back in Atlanta. They even brought Jenn's \"granmama.\" But I don't know why they did. Their being there didn't help, with the exception of granmama.\n\nI thought they might stay until the end. It was pretty clear that that was close, but they left that afternoon, only staying for a couple of hours. It guessed that they didn't want to check into a hotel. Maybe I was wrong about their motivation, but they acted as if it was Jenn's fault for inconveniencing them by dying, costing them money that they didn't really want to spend.\n\nThe only good thing that happened in all of the time they were there was when I was first introduced to Jenn's granmama. Her granmama was the only person in her family that she thought really loved her still, and so she was real happy that I got to meet her. Jenn told me when they left, that her granmama liked me. She said she could tell.\n\nHer granmama was pretty old, by that time, and she clearly didn't really understand what was happening to Jenn. She knew Jenn was sick, but couldn't comprehend the seriousness of her illness. So I don't know how granmama remembered this, but she told me, with absolute seriousness, that Jenn had once mentioned to her that I drove even slower than she did!\n\nIt was the last time I saw Jenn laugh -- it was only a big grin, because she was too weak to actually chuckle, but I knew she got a real kick out of it. On the other hand, her granmama took the whole matter quite seriously and told the assembled group that my driving made me at least somewhat palatable as boyfriends go -- at least I was careful, she reasoned. Now that was funny.\n\nBut that was the best thing. The rest of the time they were there, they didn't talk to Jenn, and she didn't have the strength to talk to them. And watching it all was just insufferable. I was reminded of my premonition in the hospital back last year when Jenn had the resection. Now the premonition had come to fruition. There was Jenn lying there, so weak that she couldn't even say goodbye to her own family, and now it was all real -- except for me and Mary Beth -- she was dying alone.\n\nThat next week, the second week in May and almost a year to the day after I met her that night at THOB, it became clear that it would be her last, but she was hanging on for something, I didn't understand what until that Friday. It got pretty bad, and when it did, I came to absolutely marvel at Mary Beth and the other people that do the work that she does. I can't bring myself to talk about the things that happened, but there's one thing that's real clear to me: no one dies with dignity. I wish Jenn could have been the exception, but she wasn't.\n\nBut on that Friday morning, Jenn spoke her last words to me. There were only a little more than 25 of them, but it was all she could do to get them out. I leaned over her bed to kiss her that morning, and when she awoke, she smiled and whispered painfully slowly and almost inaudibly in my ear, \"Wish me... happy... birthday... Andy! I'm... so... glad... you could... be here... with me... to celebrate. I can... make it... now... Andy! I know... I won't... get lost. I... love you, Andy!\" She was 33.\n\nI didn't know what to do afterwards. Mary Beth held me for a good a long time while I cried, but when I was finally able to extricate myself from her empathetic embrace, she said quietly, \"Andy, Jenn wanted me to give something to you.\" She found her purse, reached into it, pulled out a plain, white envelope, and handed it to me. I could tell by the graceful swirl of cursive script on the front that it was Mary Beth who had transcribed its contents. It said simply, \"Andy.\"\n\n\"I'll call the mortuary, Andy, and then, I'm going to leave, and let you read what she wanted to tell you. It's all explained in the letter. Jenn's asked me to take care of everything. She didn't want you to have to worry. But Andy, you should know, she loved you very, very much. I thank God you were here for her.\"\n\nI'm not going to tell what was in that letter, or at least not very much of it. That's between Jenn and me, but a few days later, I fulfilled her last wishes, she was buried in a little country cemetery outside of Fort Valley. The truth is I've buried her a thousand times since then.\n\nIt was a simple ceremony, held in the family's small country church next to the cemetery, but it was nice, and besides all of her family and their people, her colleagues at The Georgia Review, all of our friends and the guys in the band were there. Jenn would have been pleased with it all.\n\nShe asked me to play a particular song for the congregation. I really didn't want to, didn't think I could do it for the others and wasn't sure I could make it through the whole thing without breaking down. Finally, I convinced myself that it was possible so long as I thought of it in the right way. I would just play one last song for Jenn. Believe it or not, I think even her family approved. At least, they told me they did.\n\nI smiled when I read about that song in the letter, because it was so ironic considering what she'd told me on two different occasions. Jenn liked irony, so I suppose it wasn't that unusual that she picked that song. Then, again, she knew that it was absolutely sincere -- the honest-to-God truth. Jenn never wanted to be sad or depressed.\n\nIt was another Carter Family tune from the 30s, when the country was neck deep in the Great Depression, but for those of us in the alt country community, Uncle Tupelo had turned it into something of an anthem -- even the name for our \"movement.\" It was a song we sometimes played at New South shows.\n\nI tried to do it as well as Jenn would have if she was singing it herself while she made us breakfast or rolled us up a joint. I was never as good a singer as Jenn, even though she don't have a voice to sing with now. Still, she'll always my favorite singer. Even though I fell far short of the goal, I tried to perform it as simply and as beautifully as if she herself had sung it.\n\n\"Fear the hearts of men are failing/These our latter days we know/The great depression now is spreading/God's word declared it would be so/I'm going where there's no depression/To a better land that's free from care/I'll leave this world of toil and trouble/My home's in heaven/I'm going there.\"\n\n\"In this dark hour, midnight nearing/The tribulation time will come/The storms will hurl the midnight fear/And sweep lost millions to their doom/I'm going where there's no depression/\n\nTo a better land that's free from care/I'll leave this world of toil and trouble/My home's in heaven/I'm going there/I'm going where there's no depression/To a better land that's free from care/I'll leave this world of toil and trouble/My home's in heaven/I'm going there.\"\n\nThree months after Jenn died, I went solo. I've got a new band now, and we're touring big time. That's what she wanted. Things are going better than anybody, including any of us -- especially me -- could ever have expected.\n\nI just released my first album two months ago, and it's doing real well. In my humble opinion, it's the best shit I've ever done. It's titled Dying on the Day You Were Born, and Jenn's in every word, every melody, every instrument, every nuance of the whole goddamn thing. As far as I'm concerned, she produced it.\n\nI know I said I wasn't going to tell what was in her letter to me. But I will mention this. It was the only thing she said in that letter that I disagreed with -- vehemently. She claimed that it was her fault that I had \"given up my place in line\" -- that she was to blame for the fact that New South didn't make it.\n\nFuck success! All it really is anyway is someone else's idea about what you should accomplish. I don't give a damn about that now. I'm done caring about what some fucking record company wants. But I do care about what Jenn wanted, care about it more than anything in this world and beyond, except for her, and I know she would have appreciated this irony. It's funny; once you stop trying, it gets so much easier."
    ],
    "authorname": "stfloyd56",
    "tags": [
        "pretty, intellectual brunette",
        "country singer/songwriter",
        "recovering alcoholic",
        "alcohol and drug use",
        "family problems",
        "illness",
        "tragedy",
        "redemption"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/elephant"
}