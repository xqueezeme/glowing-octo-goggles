{
    "title": "The Creators Ch. 14",
    "pages": [
        "Chapter Fourteen: Ofan and Iona \n\nPrelude: Towerhead\n\nARBITRUS GEN \n\nI stepped out of the astral plane, and back into consciousness. The inn was dimly lit with the drowsy light of a summer afternoon, the dusty sunbeams shining on wooden tables and foggy glassware. It was one of the few times of day where I did not feel the unquenchable need for a drink. Morning brought the thirst, and evening always did, but afternoons were usually bearable. Today however, I felt like a drink. It wasn't the thirst that compelled me, but a sudden urge to celebrate. For I had looked into the astral plane, and seen the debris that was once Corruption's realm. It was over. Julia had done it. \n\n\"One of them crows left me this,\" Joseph Sorenson said, holding up a signet. \"It means that Mary and I are Eminent of Ofan, and can visit any time we damn-well please.\" \n\n\"A great honor,\" I said, shining a glass. \n\n\"I suppose,\" Joseph said, frowning at the signet. \"I don't know how in the blue fuck I'm gonna get there though.\" \n\n\"A caravan will get you to the foothills, and a mule will take you up the passes until you get to Vokiak, a princedom that resides in the shadow of the Gratoran Wall. Once there, you can shoot off a flare, and an Ofanian will lower a bucket for you to ride up in.\"\n\n\"Caravans, mules, and buckets,\" Joseph spat. \"My boy is a heathen idol of infinite devil's power, and I'm supposed to visit him by riding in fuckin' coach, then traversin' passes like a fuckin' shepherd, then going up in a fuckin' bucket like a goddamned bushel of turnips? Couldn't he have left one of them crows to carry me around?\" \n\n\"Downright ungrateful,\" I concurred. \n\n\"Always was,\" Joseph sighed. \"Fucks off with Tera with no salutations but a bullshit letter, then next we hear of him, he's a celebrity with a harem of whores!\" Joseph worked his jaw. \"Didn't even think about us.\" \n\n\"He obviously didn't want you to know,\" I said, filling a glass. \"Can you blame him for wanting to keep his secrets from you, Joseph? You almost had him institutionalized when he tried to tell you about Angela.\" \n\n\"Angie....\" Joseph muttered, taking the glass from me. \"Back from the dead just to leave me again. My children want nothing to do with me, Arby. Where did I go wrong?\" \n\n\"They love you, Joseph,\" I said, pouring myself a glass. \"They just grew up.\" \n\nJoseph looked at the froth of beer in his glass, the wheels of his mind turning. \"They're fuckin' each other, ain't they?\" \n\n\"What was that?\" I asked, though I heard it clearly. \n\n\"I said they fuckin' each other, ain't they?\" Joseph yelled, then reached into his pouch, and slammed a book on the counter. I was surprised to see a late-print edition of my own journal resting beneath my nose. \"See, I've been readin' this book written by this fella, Arbitrus Gen,\" Joseph said. \"He was the same kinda heathen idol as the good Sister Julia, and he says that his beloved husband, and I quote, 'became patterned with the symbols of his being, from his soles to his chin, resplendent in the white glow of my eternal love.' Now, that's some hardcore faggotry if I ever heard it. You seem to know about all this Creator shit, Arby; tell me true: is my boy sullying the virtue of my only daughter?\" \n\n\"I wouldn't put too much stock in that journal, Joseph,\" I chuckled, sliding the book off the counter. \"It was written by a delusional homosexual.\" \n\n\"Yeah...\" Joseph sighed again, and stared back at the foam in his glass, \"...I guess.\" He rotated the glass on the counter, \"Could've left one of the crows with me though. I wanna fly around too, ya know.\" \n\n\"He'll be back, Joseph,\" I said, picking up my own glass. I doubted it though.\n\nPart One: Paradise\n\nBRANDON \n\nThe mountain colony of Ofan was a tropical paradise. Ancient palm trees stood a hundred feet high, bright flowers decorated the ground, and a clear blue lake shimmered from a dormant caldera. Vines spiraled the columns of trees and covered the forest floor, bearing overlarge fruit that was ripe and pungent, but never rotting. The fauna ranged from terrestrial herbivores to brilliant tropical birds, each one unique only to Ofan, for they were all distant descendants of Ofan's creations. \n\nOur arrival was greeted with muted cheer. The old and young of Ofan were delighted to have their patron god, but were shocked at how few of their mothers and daughters had returned. Though I was given great respect and reverence, it was obvious that the grief outweighed my presence. The funerals lasted from sunrise to sunset. Great pyres were lit, and the remnants of the Ofanian Guard performed ceremonies that I didn't understand, but was expected to lead. I did my best, and probably failed, but no one ever remarked upon my awkwardness. At least I didn't have to feign my grief. Between Tera, Justina, Lucilla, Julia, Astrid and Willowbud, there was enough grief within me to share with the others. Still, I felt like an imposter. I wouldn't have faulted the bereaved if they blamed me for what had happened to the Ofanian Guard, but none did. For me, there was only reverence and hope. I was glad to have Angela with me in the flesh to hold my hand as I spoke my meaningless words, and made my pitiful gestures. \n\n\"I think feeling like an imposter is part of being a good leader,\" she said when we were alone in bed. \"It's when you think that you're right all the time that shit goes south.\" \n\n\"When did you become a philosopher?\" I asked wryly. \n\n\"I am the Bound One of Ofan,\" Angela said grandly. \"My musings are great wisdoms, my bad puns are the highest form of art, and my turds are to be preserved for future generations to marvel at.\" \n\n\"Why are you like this?\" I groaned. \n\n\"Look daughter,\" Angela said, effecting an Ofanian accent, \"the Great Angela Sorenson ate corn upon this night.\" \n\n\"Holy shit,\" I grumbled.\n\n\"That's what they'll call it,\" Angela sniggered. \n\n\"What happened to being a humble leader?\" \n\n\"You're the god; you have to be the humble one. I get to be a spoiled bitch,\" Angela giggled, sprawling out on the bed beside me. She closed one eye, and seemed to aim her pupil into mine. Can you hear me? her telepathic mind asked.\n\nPretty wild, huh? I replied. After our first night together in Ofan, Angela realized I had made her female body mostly from a male perspective. Though she enjoyed much of what I'd given her, she wanted autonomy over her body, so I made a connection between her and I, and fed her some of my power, making her a shapeshifter. Now that I had unlimited bound power, giving these abilities was as easy to me as breathing. Something that would have taken me days to recover from before now didn't even cause me to break a sweat. \n\nI guess, she squinted her open eye at me, ever since you gave me this, I've been finding all these weird little abilities. This is how dragons communicate with each other. \n\nYou don't have to aim it, I answered. \n\nI added a whole new feature to my brain; it's not like I can just pick it up without a tutorial. \n\nI designed you to be the smartest person in the world. Don't tell me my efforts were wasted.\n\nShe stuck her tongue out at me. If the machine doesn't work, do you blame the machine, or the engineer?\n\nThe size of the vessel matters naught if there is but a pittance to fill it.\n\nIs that what girls say when you stick your dick in them?\n\n\"Oh, I see,\" I chuckled, \"you filled up all that brain-space with witty comebacks.\"\n\n\"No,\" she giggled, \"you're just a dumbass. All the brains that were meant for the head on your shoulders went to the one between your legs.\" \n\n\"Ah, but didn't you just infer that my dick was small?\" \n\n\"I inferred that you've been sticking it in whores so used up that Droktin's Pass would be a snugger fit.\" Her eye twinkled, and she wiped a tear away. \"Fuck, I miss those whores.\" \n\nI sighed to keep my own sudden surge of tears at bay, and pulled her close. \"I do too.\" \n\n\"Do you think they're watching us right now?\" \n\n\"Knowing Tera and Justina, they probably got front row seats. Astrid's probably getting the popcorn, and Lucilla's lounging in the royal box.\" \n\n\"What about Julia?\" \n\n\"She's pretending not to watch while she jerks it behind her bible.\" \n\n\"And Willowbud?\" Angela asked softly. \n\nNow I had to wipe a tear away. \"No. She moved on.\" \n\nWe were in the canopy of a baobab tree that towered over the rest of Ofan, nearly as tall as the Great Maple I'd made in Drastin, but twice as thick. Our view from my room was splendid, overlooking the mountainous rainforest dotted with the bonfires the Ofanians lit by their treetop domiciles. It was a breathtaking sight, but it paled in comparison to the vision that lay beside me. Angela's strawberry-blonde hair was splayed above her delicate portrait of blue eyes, freckles, a pointed nose and strong chin. Her body was a display of supple pale curves canvased with deific glowing patterns. She had on a dress whose skirt barely topped her thighs, and whose bodice struggled to constrain her chest. An Ofanian necklace of tropical flowers was laid across the swell of her breasts, the glisten of humid sweat clinging to the fabric as her bosom rose and fell alluringly in congruence with her breaths. Her irises topped her eyes as she grasped her neckline, and slowly drew it down. \n\nHer breasts jiggled from their constraints, the nipples standing proud and pink. She slowly slithered on the bed as she slid the dress further down, revealing the soft flat of her belly, the narrowing of her waist, the widening of her hips, and the converging lines of her pelvis. An arrow of blonde hair shown from between her thick thighs, directing to the pink slit that blushed and leaked with desire. She turned until she was on her belly, her head between my legs, her eyes traveling the length of my bulge. She curled her little fingers beneath my waistband, then drew my pants down. I sprung upward, and Angela's eyes widened with avarice at the sight of me. \n\n\"Do you want to know something?\" she asked softly. \n\n\"With you, I'm never sure.\"\n\n\"I've been fucked every-which way, but I have yet to put a penis in my mouth,\" she hovered her lush moist lips of her my head, then paused, and looked up at me with her mischievous blue eyes. \n\n\"What?\" \n\nThe flora and fauna patterns on her body thrummed, and she sprouted a pair of blonde bunny ears from her mane. A little cottontail wagged excitedly from between her robust cheeks, and her ears cocked. \"Do you like it?\" she asked. \"I can tell you do; I can hear your heartbeat.\" \n\n\"You can feel it too,\" I groaned, throbbing in her hand. \n\nShe giggled, and nestled her nose between my roiling testicles, inhaling deeply. \"Why do I love that smell so much?\" she whispered with a shuddering breath, and planted tender kisses on my testicles before wrapping them both in her mouth, and sucking. My head fell back into my pillow, and I closed my eyes to fully appreciate the splendor of my sister's plush lips enveloped around my scrotum, her dexterous tongue lathering each orb that was nestled in her cheek. When she was satisfied, she popped each nut from her sucking lips, and dipped below them. My scrotum bridged her cute little nose, and her adventurous tongue poked the coiled center of my anus.\n\n\"Fuck-fuck-fuck!\" I gasped. \n\nShe grinned against my rim. \"Look at this cute little holy hole,\" she whispered. \"It's all puckered like it's trying to kiss me. Should I give him a little kiss?\" \n\n\"Fucking kiss it!\" I groaned desperately. \n\n\"I don't know... his breath smells pretty bad...\" her ears sleeked back mischievously. \"But it's still better than yours.\" \n\nShe wrapped her lips around my coiled aperture, and slurped until I was swollen. As I moaned pathetically for her, she dipped her evil tongue into my center, and painted my spokes with her spit. One of her hands forked its fingers to gently divide my cheeks, and the other wrapped about my throbbing shaft, and stroked me slowly, lovingly, the caressing fingers admiring every vein and bump. Her tail wagged; her bunny-ears twitched in reaction to my every moan and gasp, perking and relaxing to alert me of her wicked little emotions. She hummed around her smiling suction, and pressed her tongue against my resistance until she broke through, slithering deep into my tight channel, tasting my filth from the source, feasting upon my insides until they were loose and gelatinous, swollen to the point that the slightest graze would set them alight. When my cock was pulsating in the imminence of eruption, she extracted herself, planted a parting kiss upon my opened anus, and inserted a finger in place of her tongue. \n\n\"That tasted... interesting,\" she said with a quirk of her lips. \n\n\"I can make it taste cherry flavor if you want.\" \n\n\"Nah, I like it organic.\" She licked her way up my shaft, wrapped her lips around my head, and looked up at me with those evil eyes. Spit leaked from her mouth, cascaded down my underside, and pooled between my wet balls. She took a breath through her nose, then consumed me in one gulp. I gasped, and so did she. Her eyes went wide, her bunny ears shot up, and her tail ceased its excited wagging. As I marveled with a moan upon the swallowing tightness of her throat, she narrowed her eyes accusingly at me, slowly pulled her way up, and popped my cock from her lips. \n\n\"You bastard,\" she whispered.\n\nI smiled guiltily. \n\n\"You didn't give me a gag reflex?!\" \n\n\"Seemed kind of pointless.\" \n\n\"And you made my throat an erogenous zone?! I don't want to come every time I eat a hotdog!\"\n\n\"It only works with chocolate and penis. You know, your two favorite foods since I customized your palate.\" \n\nHer eyes transformed into the terrifying compound oculars of a spider. \"Any other Brandon-specific customizations you want to tell me about, dearest brother?\" \n\n\"Your butthole is self-lubricating.\" \n\n\"That's what your tongue's supposed to be for.\" She gazed at me from those arachnid lenses, then giggled wondrously. \"Bro, this is fucking wild. I can see the back of my own head.\" \n\n\"It's my favorite view.\" \n\nShe grew a massive pair of arachnid mandibles, and clicked them just above my cock. \"Wanna say that again?\" \n\n\"It's definitely my favorite view now.\" \n\nShe tittered, and discarded her arachnid visage for her beautiful human portrait. \"I guess you're just not as freaky as me.\" \n\n\"You're clinically insane.\" \n\n\"You certainly have a type, don't you?\"\n\n\"You know what they say about sticking your dick in crazy.\" \n\n\"You might not get it back?\" Angela grinned, revealing two slithering serpent tongues that emerged from her mouth, lassoed my cock in a squelching hold, and sucked me in. The wriggling members constricted about me and pulled the pressure up my shaft as her plush lips hummed down my base, and rotated. Her blue eyes rolled back hedonistically, her throat swallowed with relish upon the length that was nestled so tenderly into her gullet, and her tongues slipped and lathered up the last thick column of my shaft, spiraling and pulsating to massage and taste every tangy inch. \n\nHer eyes rolled forward, their depths wrought with pleasure, and she closed one in a teasing wink. Feeling carnivorous in her feeding, she exchanged her bunny ears for a feline pair, and her cottontail for a long tigress tail that swooshed dangerously and playfully behind her. I might've had a snide brotherly comment, but Angela seemed to steal the words right from my mouth with the movements of her own. She never once pulled up with her luxuriant lips, but kept them sealed and sucking about my base, rotating as she swallowed continuously, her twin tongues milking my shaft until it was twitching with pleasure, her fingers rubbing my prostate until it was bursting! \n\n\"Oh god, Angela!\" I cried out and thrashed, and Angela stayed plastered to me, the wildness alight in her ravenous eyes, her back arching behind her, her tail wagging ardently, her other hand frantically delivering pleasure to her engorged clit as she sucked me, swallowed me, constricted and consumed me. With a cry of pure ecstasy, the pleasure lanced from my prostate, roiled in my balls, and exploded up my shaft. Angela's eyes rolled back in sybaritic splendor, and she drank gluttonously of me, her throat swallowing continuously to quench her thirst with my gouts of nectar. When she was done, she made an exaggerated show of sliding her lips up my shaft, her cheeks becoming hollow with the suction until they popped audibly with my exiting cock.\n\n\"I really like sucking you,\" Angela mused with a sly smile. \"I like watching your helpless little face while I swallow you. Total power-trip.\" \n\n\"Why is that all the women I fuck want to dominate me?\" \n\n\"You're just so fun to conquer,\" she sighed contentedly, resting my shaft alongside her face, looking back at me from one eye. \"You know I love you, right?\" \n\n\"Yup.\"\n\n\"Not gonna say anything back?\" \n\n\"Not until I get anal.\" \n\n\"You could write a book on how to talk to women.\" \n\n\"Mom always said I don't have a sentimental bone in my body.\" \n\n\"Except for that time Julia fucked you in the ass.\" \n\n\"Pot, meet kettle.\" \n\nAngela pouted her lips. \"Why can't we just be lovey-dovey teenagers for once?\" \n\nI cupped her cheeks with both hands, and beamed at her. \"Angela, you are more than my sister. You are my love, my heart, and my serenity. I would die for you a thousand times just for a chance to live with you one night.\"\n\nShe blushed to the roots of her hair, and screwed up her face bashfully. \"I don't know how to react to that kind of emotional nakedness, so I'm just going to call you an asshole.\"\n\n\"That's the most romantic thing anyone's ever said to me,\" I smiled, and guided her up my body to engage in a passionate, loving kiss. When we parted, she was breathless, closing her eyes to save the residual love on her lips. \n\n\"That's it...\" she whispered contentedly, \"...that's what I wanted.\" Her eyes opened, and she gazed down at me. \"I've got a surprise for you.\" \n\n\"I'm not sure if I want any of your surprises.\" \n\n\"You'll love this one,\" she grinned, her head sprouting a pair of naughty devil horns, a demonic tail flicking cunningly behind her. She slithered off the bed, and opened the bedroom door with a flourish. I was greeted to the sight of ten stunned faces. \n\n\"Y-Y-Y-Your Holiness!\" Bianca stammered. She was the only Ofanian who didn't immediately avert her gaze, but her cheeks turned red with embarrassment. The other nine women suddenly became very interested in the floor. I pulled the bedsheet over my erection, and their gazes turned back to me, all their faces redder than brown. \n\n\"High Guard Blackwing, so good of you to join us!\" Angela exclaimed. \n\n\"Angela, what the fuck are\u2014\" \n\n\"This was my request, Your Holiness,\" Bianca interrupted apologetically. \"I felt that it was best to establish the changes early on. The Bound One believed that tonight would be the best time to... do... what must be done.\" Bianca took a tentative step into the room, and her nine subordinates followed. I recognized eight of them as officers in the Ofanian Guard, but the last one was a stranger to me. They were all statuesque, athletic and beautiful, with varying hour-glass figures to complement their musculature, and wooly braided hair to complement their golden-brown skin. Their golden-streaked white wings served to contrast their dark complexions, and the modest togas they wore seemed wholly out of place on their usually-armored bodies. Angela was dwarfed by the women who passed her, but she looked upon each with a predatory stare. I saw three of the captains tense their shoulders when the door shut behind them, and the girl I didn't recognize visibly shook. Their discomfort was not at all arousing to me, and I glared at Angela. She just stuck her tongue out at me, and walked beside Bianca. ",
        "\"You seem overdressed for the occasion, Bianca,\" Angela said softly. Bianca nodded, not breaking our gaze. She took a deep breath, reached behind her back, and undid the clasp of her toga. It slid off her like water; flowing from her muscular shoulders, then her proud breasts, then dangling alluring from one wide hip before falling from the curve of her supple backside. The other Ofanians had undoubtedly seen their High Guard naked before, but never presented sexually. They averted their gazes in shame, except for the one I didn't recognize, who stared wide-eyed at her High Guard. \n\n\"Do not look away!\" Bianca shouted, her voice wavering. The ashamed captains struggled to move their gaze forward. \"You all know what we must do!\" \n\n\"Yes, High Guard,\" the captains said in unison, their usually-boisterous natures subdued and docile. Bianca reached behind her, and grasped the hand of the Ofanian I didn't recognize. \n\n\"Mother?\" the Ofanian asked nervously, and Angela shot me a grin of pure disbelief. \n\n\"It is time, Arya,\" Bianca said to her teenaged daughter, who couldn't be any older than me. \n\n\"I'm... I'm not ready,\" Arya mumbled, covering herself with an insecure forearm. \n\n\"Bianca, if she's not ready, then\u2014\" \n\n\"This is a family matter, Your Holiness,\" Bianca said tersely. I'd never heard her use that tone with me, and indeed, her captains all shot her shocked glares. Angela's disbelieving smile only widened. \n\n\"I want you to be the first to bear his child,\" I heard Bianca whisper into Arya's ear. \"Your daughter will be the first of a new generation; a generation spawned from divinity.\" \n\nArya glanced at the tent I was pitching in the sheets, and quailed in her mother's arms. \"I am frightened.\" \n\nBianca embraced her shaking daughter, and planted a kiss atop her head. \"You are a woman, are you not?\" she whispered. \n\nArya nodded. \n\n\"Then why do you quake like a little girl?\" Bianca pushed her daughter out to arm's length, and assessed her with a judgmental gaze. \"The High Guard of Ofan has been a Blackwing for five generations, but I will be the last if your reaction to a man's desire is to cower in your mother's arms like a babe.\" \n\nI glanced over at Angela, expecting her to share in my discomfort, but she was obviously feeling quite the opposite.\n\nWhat's going on in that perverted little head of yours? I asked her. \n\nOh, I'm the pervert? I'm not the one who made his sister a new body just so that he could fuck it.\n\nAngela.... \n\nForgive me if incest is a fetish of mine. I was literally brought back to life from it. She turned her eyes back to the conflicted pair of valkyries. \"Excuse me,\" she said to Bianca and Arya before I could object. She walked down the row of Ofanians, and stepped before the mother and daughter. \"I think I know what the problem is here.\" \n\n\"Bound One,\" Bianca said, looking gravely at Angela, \"this is not your\u2014\" \n\n\"Shut up!\" Angela said sharply, and the whole room went dead silent. \n\nBianca tucked her lips into her mouth, and went red all over.\n\nAngela held Bianca's stare until Bianca averted her eyes, then she leveled a gentle gaze upon her quivering daughter. \"Arya,\" Angela said softly, \"that's such a pretty name.\" \n\n\"Thank you, Bound One,\" Arya muttered. \n\n\"Are you scared of me?\"\n\nArya shook her head.\n\n\"It's because I'm a woman, right?\" Angela queried softly. \"I'm familiar to you. I'm something you understand intimately, not like...\" she gestured toward me, \"...that stupid thing over there.\" \n\n\"Do not speak of His Holiness in such a way!\" Bianca snapped. \n\nAngela turned a lazy gaze on Bianca. \"Bianca, I'll speak to my brother any damn way I please, but if you talk to me like that again, I'm going to make you eat my asshole until your tongue learns some manners.\" She assessed the statuesque beauty with a leer. \"Of course, that might not be any kind of punishment for you, would it? Not after what you let Jade Tao and Astrid Skyborne do to you.\" \n\nThere were nine audible gasps, and Bianca turned so red that I thought she might burst. \n\n\"Mother?!\" Arya gasped. \n\n\"Yes,\" Angela giggled, turning back to Arya, \"your mother let those two whores ravage her until she was as filthy as they were.\" Angela fixed her gaze purposefully with Arya's. \"It came quite naturally to her, I imagine. You understand, don't you? You're a young woman in a colony of women\u2014I mean, it's not like there's a lot of options.\" \n\nArya gulped, and Angela grinned. Arya cast her face to the floor, and Angela raised it with a gentle thumb on her chin. \n\n\"You're not scared of me, are you, Arya?\" Angela whispered. \n\n\"No, Bound One,\" Arya whispered back. \n\n\"But you've either been looking at my feet, or staring me directly in the eyes,\" Angela muttered, running her hand down Arya's collar. \"There's a whole lot of me in between, you know. You can look; I want you to look.\" \n\nArya bashfully ran her eyes down Angela's body, then let her gaze linger on the way up. \"You are quite beautiful, Bound One,\" she said softly. \n\n\"So are you,\" Angela whispered, and unhooked the clasp that held Arya's toga, letting it cascade to the floor. She didn't bare her mother's curves or muscle, but was lithe and delicate. Angela feasted her eyes, then stepped into the space between them, and pressed her body to the virgin teenager's. \n\nArya gasped. \"Bound One!\" \n\n\"Shh,\" Angela placed her finger upon Arya's lush lips, and let it linger there. \"Stop that, Arya. Right now, I'm not the 'Bound One' unless you want to tie me up and hang me from the ceiling\u2014which I'm totally down for. Right now, I'm just a girl like you.\" Angela crinkled her nose. \"What do you want to do to me?\" \n\nArya blushed to the roots of her hair, but she didn't avert her gaze. \"I want to kiss you,\" she whispered. \n\n\"Well,\" Angela grinned, \"what are you waiting for? Are you a valkyrie of Ofan, or are you a\u2014\" \n\nArya silenced Angela with a sudden pressing of their lips, opening them, slithering her virgin tongue into my sister's mouth with bold and boorish motions. Angela's eyes went wide with shock, then eased back into blissful carnality as she guided the inexperienced girl gracefully through the ways of lust. \n\nANGELA \n\nThe shape-shifting ability Brandon have given me was surprisingly easy to master. Like flexing a muscle, I could transform my body at will. There was no need for me to transform myself dramatically, as I quite liked my human body, but given the rigidity of the women surrounding me, I felt that I needed to add a little extra something. Succubus glands formed in place of my sweat glands, and the humidity comingled with my desire compelled my flesh to glisten and soak into the girl holding me. Her hands began to wander upon my body. They were tentative at first, then sought the muscles of my shoulders and back, and slid to my waist. Her tongue became bolder in our joined mouths, and as our lips smacked in a wet exchange, she slid her hands to my buttocks, and squeezed until her fingers were lost in the fat. I moaned into her mouth, and she did as well, her heart beating faster against me, her breath becoming sharp alongside our pressed noses. I released her from my kiss with a heated exhalation, and she sought my lips mindlessly, her tongue lathering the plush outline of her delicious mouth. \n\n\"Stop,\" I giggled, pressing my fingers to her lips.\n\nShe wrapped her mouth around my fingers, and sucked them loudly. \n\n\"You like how that tastes?\" I asked softly. \n\nShe nodded. \n\n\"Those fingers were just in my pussy.\" \n\n\"I know,\" she mouthed. \n\n\"Hold that thought, Arya,\" I whispered, and turned around. Bianca was standing there, bewildered by the sudden transformation of her daughter. I stepped into her guard, and pressed my body against hers. Her hard abdomen molded pleasantly into my soft tummy as I nestled my face between her beautiful brown breasts, and selected one nipple with my tongue. Her lips quivered, her eyes went wide and wonderous, and her breath became steady and sharp. I took one handful of her fat black ass, and slithered my other between her legs from the front, parting her sweltering apex, caressing her where she was so, so hot and wet. Her hands stayed rigid at her sides, then slowly moved upon me. She was rougher than Arya, and much less apprehensive. She grabbed me and squeezed me, pushed her fingers into my crack and knotted the other set into my hair. I hummed approvingly, and increased the ardency of my nursing, pulling and teething her nipple until I could feel her pulse within it. She moaned huskily, and pressed my face deeper into her juicy maternal fat. \n\n\"What are you doing to me?!\" she moaned. \n\n\"Seducing you,\" I giggled. I turned around, and looked at Arya. She was rigid and shaking, an absolute mess of suppressed desire. Her cheeks were rosier than they'd ever been, and though there was depthless shame in her eyes, she could not look away from the display of sex I provided. \n\n\"You can touch yourself, Arya,\" I crooned. \n\n\"I dare not!\" \n\n\"You're mother's a beautiful woman; it's only natural.\" \n\n\"It is not!\" both Arya and Bianca exclaimed, both through moans. \n\nI caressed Bianca's engorged clit, and grinned up at her. \"What's wrong, Bianca; don't you think your daughter is pretty?\" \n\n\"Of course she is, but... but....\" \n\n\"But...?\" I giggled, and turned around to look back at Arya, who was still trapping herself in a prison of stasis, unwilling to move lest her body betray her. \"Don't you think your mommy is beautiful?\" \n\n\"So beautiful!\" Arya whined pathetically. \n\n\"Then why don't you come over here and nurse from her like you used to?\" I asked, and turned back to look up at the beautifully-conflicted face of Bianca. \"You came here to watch your daughter get fucked. Maybe in your head you thought it would be a solemn bedding ceremony, but you must've known you would feel something when you watched it, right? I mean...\" I pushed two fingers into her dripping slit, and she cried out, \"...you're just a woman, after all.\" \n\n\"Please, Bound One!\" \n\nI slurped her nipple wetly, glanced sideways at Brandon, and whispered to Bianca, \"do you see how hard you're making him? You know who Brandon really is; you spied on him for all those nights. He's a total pervert, Bianca, so shouldn't his High Guard represent him well? Fuck your baby-girl. Make a woman out of her before your god.\" \n\nThis time, it was Arya who was the bold one. She stepped shakenly towards us, heedless of her mother's protests. She slid next to me, and looked her mother right in the eye. There was a beautiful moment when I saw the shame play across their faces, radiating from their irises like miniature suns of guilt. Then the moment was replaced by an even more beautiful one. Their brown eyes relaxed into surrender, into acceptance, and like Arya had done so many years ago, she wrapped her lush lips about her mother's moist brown nipple, and suckled. I retracted myself carefully from the situation, but neither of them seemed to notice. Their gazes were only for each other; Bianca's filled with lust and maternal love; Arya's filled with daughterly devotion and virgin curiosity. \n\nThey slid their hands down each other's bodies, moving like black liquid to grasp succulent buttocks, to slide fingers between jiggling thighs and seek the tight heat of the other's insides. Their eyes went wide when they penetrated each other, and the shame surged back into their expressions for just a moment before it faded once more, and they breached the final forbidden wall. Arya slurped from her mother's nipple, pulled it playfully outward, then let it pop from her mouth. She coyly licked her way up the brown breast, and Bianca tilted her head forward to intercept. Their eyes closed in bliss, their bodies pressed and merged, and their tongues exchanged tenderly as their fingers squelched audibly with their incestual nectar. \n\nAs Bianca and her daughter descended to the bed in a tangle black limbs and white feathers, I turned my attention to the other eight Ofanians. There was Ciara, Alecia, Imani, Shanice, Aliyah, Nia, Deja, and Jada, and they were all in various states of confusion and fear. I walked between them, and they parted for me, surrounding me with their great wings and statuesque bodies. \n\n\"How many of you have daughters or mothers in the Ofanian Guard?\" I asked. \n\nNia, Deja, Alecia and Imani all raised their hands. By their ages, I could intuit if their relative was a mother or daughter, and by the expressions on their faces, I could tell they feared giving me that information. \n\n\"Every woman of fighting age is a woman of fucking age,\" I proclaimed. \"Follow your High Guard's lead.\" \n\n\"It is forbidden!\" Deja hissed. \n\n\"Why?\" I asked her. \"No children can be born from it, so why is it taboo?\" I grinned at them. \"But there is no denying that there is something perverse about it. You may find, as I have found, that the forbidden fruit is the sweetest,\" I hissed, and levelled my eyes on Deja. \"Go fetch the Ofanian Guard, Deja. All of them. My brother will put a child in every woman's belly tonight! And to the rest of you...\" I turned around as Deja spread her wings and flew out the door, \"...extend your hands to me. Touch me. Feel my flesh. You will find in an instant that there is nothing to fear,\" I grinned wickedly at them as they laid terrified hands upon my shoulders. \"The thing to fear is in you. Who will you become tonight? For you will not be the same scared little girls who walked into this place.\" \n\nOne by one, I watched the women's expressions change. One by one, I watched their eyes become heavily-lidded, their lush lips part to reveal rapt breaths, their cheeks flush, but not of embarrassment. Their fingers relaxed upon me, then slowly slid down. They cupped and squeezed my breasts, they massaged and marveled upon the muscles of my back, they caressed and tickled my tummy, and they slid down my thighs. \n\n\"What's happening to us?\" Ciara muttered. \n\n\"I feel so hot,\" Imani whined. \n\n\"Why do I salivate when I touch your nipple?\" Alecia whispered, her brown eyes staring up at me as she crouched. \n\n\"Take your clothes off, Alecia,\" Shanice giggled, and undid the clasp of her toga. \"I must confess, I always did admire how plump your backside was.\" \n\n\"You can touch it,\" Alecia crooned, confusion and lust in her big brown eyes. \"I... I want you to... to...\" \n\n\"To what, Alecia?\" Aliyah asked as she fondled my nipples curiously. \n\n\"I want someone to put their mouth upon my... my... pussy,\" Alecia hissed, bowing her head in shame. \n\n\"Is that how it is done, Bound One?\" Jada asked me. \"The pleasuring of another woman?\" \n\n\"We are so ignorant in these things,\" Nia mused. \"Though I must confess, I did precure a dirty magazine while I was in Drastin. There were so many creative ways the humanoid body can bend.\"\n\n\"Teach us, Bound One,\" Ciara whimpered, looking so flustered and desperate. \n\n\"Teach us how to be... sluts,\" Imani struggled with the last word, but once she uttered it, she blushed with pleasure. \n\n\"Follow me, my pussy pupils,\" I giggled, and led the train of eager students to the bed. Brandon was being left woefully unattended as Arya and Bianca gyrated together beside him, though he seemed more than content with enjoying the show. I laid down next to him, and gave him an exhilarated lip-biting smile when he connected eyes with me. \n\nCan you believe this shit?! I giggled telepathically. \n\nI can't believe you, he replied, looking at me in a way that made me blush. \n\nYou ain't seen nothing yet, cowboy, I tittered, and turned to my students, who now were kneeling naked upon the bed, their hands seeking each other's crotches. \"I need a volunteer.\" \n\nAlecia scrambled out in front of the pack, and plopped herself before me. \"I will volunteer!\" the teenager exclaimed excitedly, brushing back her mane of wooly hair. \n\n\"Wonderful,\" I beamed back, \"now bend over.\" \n\nAlecia hesitated for only a moment before she got on her hands and knees. On the other side of Brandon, Bianca bid her daughter to do the same, though Bianca didn't wait on my instruction. She peeled open Arya's virgin cheeks, eyed her options ravenously, and planted her face deep into her daughter's crack. Arya's eyes flashed open, her head flung back, and she moaned to the ceiling as Bianca did what Jade and Astrid had taught her. The other valkyries gaped at the display of sexual gluttony, then looked excitedly back at me, eagerly awaiting my instruction now that they knew what awaited them. \n\nI rolled over, and assumed the position behind my prostrating pupil. \"Relax, Alecia,\" I said to her, and she nervously eased her face into the bedding, stooping her back into a deep arch. I grabbed her bronze succulent cheeks, and parted them to reveal the mouth-watering options between them. \n\n\"The first thing you want to do when eating a girl out,\" I explained, \"is to take note of her desires. Every woman is different, and so you must listen for her verbal and bodily cues. Alecia here doesn't yet know what she wants, so we'll both discover it together. Are you ready, Alecia?\" \n\n\"Yes, Bound One!\" Alecia whimpered, terrified, but exhilarated.\n\nI puzzled over how best to teach my class of students when so much would be obstructed, and then a brilliant, wonderful idea dawned on me. \n\n\"Actually...\" I turned to all the others, \"...have any of you ever played the game called 'Telephone?'\" \n\nThey shook their heads. \n\nI grinned. \"Well, my version's a little different anyway. Aliyah, get in front of Alecia; Ciara, get in front of Aliyah; Imani, get in front of Ciara; Shanice, get inf front of Imani; Nia, get in front of Shanice; and Jada, you get in front of Nia, and behind me.\" \n\nThe women crawled into a circle, exchanging nervous giggles and lustful stares until each face was presented with a pair of juicy brown cheeks. I felt hot breath caressing me, and I looked back to see Nia's eager smile and determined eyes, ready to prove to me that she was up to the challenge. Perfect. I clapped my hands upon Alecia's jiggling domes, and the sound was echoed around the circle until two large feminine hands were sinking their greedy fingers into my backside, and peeling my cheeks apart. I took a moment to enjoy Brandon's expression as I arched my back to tilt my pelvis for Nia's oral access, then I returned my attention to Alecia.\n\nI pressed my face into her moist crack, and extended my tongue. She gasped when I split her slit with my exploratory member, and she held her breath when I traversed all the way to her clit. Something I'd noticed about Ofanians, was that their clits were very large, almost like little cocks swathed in a cute feminine hood. It would make my job a lot easier. I painted her bead until it was engorged and pulsing, and she was sputtering and moaning into the pillow, each exaltation rich with sexual revelation. \n\n\"Alecia, aren't you forgetting something?\" Aliyah crooned, twerking her ass before Alecia. Alecia didn't even hesitate. Intoxicated with the pleasure I was pouring into her, she pressed her face into Aliyah's crack, and mimicked what I was teaching her. The chorus of moans moved around the circle as each woman was touched for the first time, and then the final moan came from Nia's lips, before it was silenced in my depths. I hummed my moan into Alicia, and wrapped my lips about her netherlips, sucking her folds into my mouth as I pushed my tongue deep inside of her. After a minute, I felt Nia do the same to me. She consumed me with boorish gluttony as I precisely fed upon Alecia, and with every different technique I employed, the message was translated around the circle until it came back to me, muddled, sloppy, and sopping with saliva. Just how I liked it. \n\nBRANDON ",
        "Angela led her circular train of women until it devolved into a pile of orgasming brown beauties. After a minute of moans and cries, my sister emerged from the pile like a phoenix, over a dozen black hands snaking along her white body, slithering up her curves, covetously squeezing her breasts, rolling her nipples, clasping her throat, pushing between her spread thighs to deliver fingers deep into her tight vulnerable places. She moved with the same sinuous lechery as the hands that held her captive, dancing as she was molested, accepting all violations. By the way she swayed, I could see that she wanted to surrender to them, to fall back into the bed of molestation and be invaded by her students, but she held back from their moaning pleas of 'Bound one' and 'teacher,' and instead focused her lust-drunk gaze upon me. \n\n\"Students,\" she said, her voice thick with lust, \"the impregnation ceremony is about to begin.\" \n\nArya and Angela untangled themselves from their respective webs of passion, and crawled to my side. Bianca followed after, framing her daughter from behind, planting loving kisses upon her throat as they gazed at my crotch. The other Ofanians casually pushed their fingers into each other, but their eyes were locked onto me, watching with great attentiveness. My penis was centerstage, and I thanked god it didn't shrink under the pressure.\n\n\"Show me what to do,\" Arya whispered to Angela.\n\n\"You must taste him first,\" Bianca said before Angela could answer. \n\nI raised my brows at her, and she blushed. \n\n\"It was what I saw Tera do when I was... observing,\" she confessed with a guilty smile. \n\nAngela touched Bianca's lush lips, and grinned. \"With these big beautiful lips of yours, Bianca, you should be a natural.\" She looked down at me. \"Brandon, spread your legs.\" \n\nI opened my legs wide, and Angela beckoned mother and daughter to lie between them, their joined breath caressing my taut penile flesh.\n\n\"Give your babies a kiss, ladies,\" Angela beckoned, and ran a gentle hand across my balls. \n\nBianca pursed her lips, looked up at me with those beautiful brown eyes, and planted a loving kiss upon my left nut. \n\nAngela giggled. \"No, no, no!\" She ran her hand through Bianca's woolly hair. \"That's not how you kiss Arya anymore, is it?\" \n\n\"No, Bound One,\" Bianca grinned up at me, \"this is how I kiss my children now.\" She took my nut into her mouth, enveloped my scrotal flesh with her plush lips, and ran her tongue sensually around the orb, swirling and caressing wetly until it was quaking in her mouth, and I was groaning pathetically. Excited by my reaction, Arya did the same with my other nut, and soon my cock was twitching with spurts of precum, barely on the edge of control. They plopped my nuts from their pursed smiles, then turned their smiles upon either side of my shaft, and drew out their tongues. Slowly, purposefully, they lathered their way up my length, cresting the head and sharing an open-mouthed kiss around my crease, their tongues slithering to lick the precum that had dribbled. Bianca took her position at my apex, and planted her lips around it. As her brown eyes looked adoringly up at me, her closed-lipped kiss expanded, opening her black plush lips around my white cock until my head was consumed in totality. \n\n\"Watch the teeth,\" Angela instructed gently, and Bianca created an oval of suction around my crease. \"That's it,\" Angela whispered, \"now slowly take it down. Slowly, Bianca. Enjoy it. This is as much for you as it is for him.\" \n\nBianca never took her eyes off me as she descended me, taking me all the way to the resistance of her throat.\n\n\"Go deeper,\" Angela hissed. \"Take him all the way.\" \n\nBianca gagged around me, but she didn't stop. She took inch after tortuous inch of me into her clenching throat, and she choked herself for my pleasure, and for hers. When her lips pillowed around my base, I moaned in abject delight, and her face lit up with immeasurable pride. Her audience applauded her, her daughter gawked appraisingly, and Bianca held me there, acclimating herself until she retreated back up my stalk, and slowly plunged once more. \n\n\"Oh, fuck!\" I groaned, much to her satisfaction. Emboldened by my praise, Bianca began to suck me with more gusto, sloppily consuming me, glugging and gagging around squelching suction that left thick ropes of spit hanging from her chin. Her wings opened resplendently behind her, and she dipped her body low in a confident arch as she fed so gluttonously from my shaft. \n\n\"Goddamn, that's fucking hot,\" Angela hissed heatedly beside me, and rolled over onto her back. Her white patterns thrummed, and her clitoris engorged until it sprouted into a smooth, supple cock. A pair of small hairless balls grew snugly about its base, each orb taut against her vulva. Before the unhinged jaws of the Ofanians, Angela stroked her new member, then turned to her pupils. \"Well,\" she inquired lazily, \"who wants to practice on me before worshiping their god?\" \n\nAngela was buried in a pile of suitors a second later. Only her hand emerged from the fray, and I delivered her a high-five before she was lost once more. Bianca slurped her way up my shaft, returning my attention to where it was most pertinent, then she popped my swollen head from her mouth, and licked at her daughter. Arya gave me a shy little smile, then followed the instructions of her mother. Bianca tutored Arya gently as the teenage virgin sucked me, her wings drooped submissively where Bianca's had been spread in triumph. Perhaps she was subdued, but she wasn't meek. She gave me her all, and though she couldn't take me into her throat, her small mouth wrapped around me and the liquid dance of her tongue was more than enough to bring me to the edge. She finished with a lecherous lick, displaying the froth of precum that I'd deposited upon her tongue like a prize, before swallowing it. \n\n\"It's time,\" Bianca whispered to her daughter, framing her body. Arya didn't quail in her mother's arms now; she climbed atop me boldly, straddled me about the waist, and grabbed my manhood with both hands. It was only when she began to lift herself, that she had her moment's hesitation. \n\n\"Is this right, Your Holiness?\" she asked me, her voice quivering with anticipation. \"Or should you be on top of me?\" \n\n\"You're fine where you are,\" I chuckled, sliding my hands up her slender body. She shivered beneath my touch, her flesh raised with goosebumps, her every hair standing on edge. My hands hooked around her waist, and my thumbs slid upon the convergence of her pelvis until they brushed against her swollen clit, red and wet from her mother's lips. She gasped, her eyes widening, and she nodded her head for me to continue. I rubbed her and caressed her, toying with her throbbing organ until she danced an unbidden sinuous samba upon me. Grinding her wet petals around my shaft, she groaned and hissed, pressing herself ever harder against my erection until its girth was wrapped in her soft folds, so tight that the puffy flesh shown vivid and flushed about me. \n\n\"I'm ready,\" she whispered, and raised herself. There was a moment's hesitation, but only a moment. Bianca wrapped her strong arms around her daughter, and slowly guided her down. I made sure there was no pain. With subtle magic, I eased the breaking of her virginity as she gradually stretched her entrance around my head, and engulfed me. Her eyes flashed open; her mouth fell agape. Bianca planted loving kisses upon her throat as she descended inch after inch, taking me into her hot wet sheath until her weight relaxed atop me, and blood dribbled upon our merging. Her lips stammered breathlessly for a moment, then uttered a single croak. \n\n\"You're a woman now,\" Bianca whispered dotingly, wrapping her daughter and me into her wings. \"How does it feel?\"\n\n\"Amazing,\" Arya whimpered, marveling upon the feeling of me spearing her to the womb. \"Oh my god, Mother, it's the most amazing thing I've ever felt!\" \n\nBianca giggled delightedly, then slid her hands down her daughter's toned belly, and rested them atop mine about her hips. \"You haven't felt anything yet, baby. Let Mommy teach you how to fuck.\" \n\nANGELA \n\nI watched Bianca teach her daughter how to ride my brother. I watched Arya bite her lip and groan with sultry lechery, uttering sounds no pure virgin girl ever should as her mother guided her deep oscillations. Soon, Bianca didn't have to guide Arya at all. I watched the beautiful moment when mother released daughter, and Arya became a woman in truth, undulating and gyrating on her own accord, learning with every ecstatic motion who she was. Brandon rose to her, pressed her body to his and sandwiched her between her mother. He compelled her back into a deep arch, and she took him all the way, raising and lowering herself as he began to thrust, liquid strings of her desire stretching and mingling upon their lecherous joining. I watched as he kissed her, as her rapacious lips opened reverently for his tongue, as she showed everyone with her flowering body what pleasure she endured. I knew the feeling well. My brother was a dope in every aspect of life, but in bed, he truly was divine, and all us poor females could do was worship at his altar. \n\nBut it was hard to be jealous of him with Alecia's tongue in my pussy, Nia's mouth wrapped around the base of my shaft, Imani licking my right nut, Shanice licking my left, Ciara sucking my left nipple, Aliyah sucking my right, and Jada wrapping her mouth with mine to share her tongue. \n\n\"Please, Bound One,\" Nia groaned after slurping her way up my cock, \"take my virginity now. I can't stand it any longer!\" \n\n\"Take mine first!\" Alecia objected. \n\n\"No, mine!\" Ciara cried. \n\nIt became very obvious to me as the women pawed pitifully for my lust, that there was a woeful shortage of penis in this orgy. I could make the Ofanians lusty, I could make them desire each other, but I couldn't take away their heterosexuality, and my carefully-crafted lovefest was threatening to devolve into audiences of bored women fondling each other while they waited their turn. Another idea popped into my head; another beautifully wicked idea. \n\nBrandon, I said telepathically. \n\nMy brother's blue eyes emerged from the cocoon of white and gold feathers. Kinda busy, Sis.\n\nGive me your hand.\n\nIt's occupied. \n\nJust give it to me!\n\nBrandon's hand emerged, filmed with fluids and webbed with nectar. I guided Nia to sit upright, then I guided my brother's hand to her crotch. She gasped when his fingertips touched her overlarge clit, and her gasp became a cry when I delivered my wicked request, and Brandon acquiesced. Now it was my turn to gasp. Had Nia been born a man, she would've had a thick, veiny, nine-inch cock. But Nia wasn't born a man, and so when her cock sprouted from her clitoral hood, everyone stopped what they were doing, and gawked. Nia's lips stammered for a moment, then she reached down, and wrapped her elegant fingers around her grotesquely beautiful piece of meat. Knowing valkyries as well as I did, I worried that her pride would reject the addition as a horrific deformity, but when she looked upon my face, her expression was filled with joy. \n\n\"I have been blessed by God himself,\" she whispered, tears in her eyes. \"The honor is... it's just so...\" \n\n\"You were already blessed, Nia,\" I grinned, holding up Brandon's hand. \"He just brought out your potential. Now, who else wants some divine deformation?\" \n\nThey all did, of course. One by one, they were transformed, and soon I was surrounded on all sides by wobbling, throbbing, leaking black cocks. The newly-minted hermaphrodites explored themselves curiously, then they began to explore each other. It was a sight to behold. The black angels turned upon each other, assessing their partners with curious gazes, running their hands down each other's bodies. They pressed their engorged organs together, rubbing them shaft-to shaft, pushing them so that their undersides pulsated against one another in a wobbling combat. As their breasts squished and their lips smooshed, they undulated to bring their frothing columns to each other, to savor the hard pulsing heat of the other, and to determine who would be dominant. The submissive women showed their colors. They laid on their backs with beckoning smiles, they bent over with pitiful bites of their lips, they opened their legs wide and whimpered their pleas to be violated. \n\nThe dominant women gave them what they wanted. They grasped their submissive counterparts by the cock, they stroked them aggressively from the front and from behind, and they lined up their shots into virgin slits, and pushed inside. Brandon had removed the pain of chastity, but they all felt its intensity. They gasped and croaked, their heads fell back and their eyes widened, they stared with disbelieving eyes as they took something so large so deeply into something so small. The penetrators were engulfed in gripping lips that salivated with hunger, and they groaned and moaned as they marveled upon the alien sensations of masculine sex. They connected their crotches in a chorus of heavenly cries and moans, and they stared into each other's brown eyes, rapt and wonderous at what they were doing to each other, all pretense of civility slowly fading. The dominant women began to thrust, and the submissive women began to grind, and the last of their sanity left them. \n\nWhere before, I'd been swarmed by women, now I was woefully unattended. It didn't matter. I'd let the Ofanians marvel upon their new pleasures, and when they'd learned from each other, I'd let them have me. I recalled watching Tera and Astrid getting gangbanged back in Willowbud's palace, and I remembered my revulsion at the idea of being so manhandled. Well, these weren't men. I was going to get stuffed like a turkey tonight. I turned my attention to Arya and Bianca, and smirked to myself. But first, I was going to do some stuffing of my own. \n\nI crawled over to the incestuous threesome, and snuck under Bianca's wings. Arya was in the late throes of her lust, her body glistened with sweat, her hair matted, her cries ardent and exerted as she willingly pierced herself . Bianca was behind her daughter, grasping the girl's breasts, kissing the girl's throat, pressing her body to her as though to feel the reverberations of Brandon's plunging drives through her back. \n\n\"She's so close,\" I chuckled, drawing my hand covetously up Arya's clenching belly. I looked over at Bianca. \"You're in my spot, High Guard.\" \n\nShe raised her eyes questioningly, and then the realization dawned upon her. \"You want to....\" \n\n\"I do,\" I grinned. \n\nShe wrapped a protective arm around her daughter. \n\n\"Mom?\" Arya gasped questioningly, her wooly hair flailing with her percussive drops. \n\n\"The Bound One oversteps herself,\" Bianca hissed. \n\n\"What does she want?\" \n\n\"She wants to... penetrate you from behind.\" \n\nArya laughed. \"With your brother in there, I don't think there's any room!\" \n\n\"That's not what I mean, Arya,\" I smiled deviously. \n\nHer laughter ebbed from her, and her face slackened. An expression of revulsion crossed her, then one of fear, then one of interest. Each thrust Brandon delivered broke her inhibitions until all that was left on her face was an intoxicated stare right into my eyes. \n\n\"You want to penetrate my anus,\" she whispered. \n\nI took her by the shoulders, kissed her cheek, and hissed into her ear. \"I want to fuck you in the ass.\" \n\n\"Bound One, stop this!\" Bianca exclaimed, but she was touching herself. Oh, how I loved my succubus venom. The carefully-constructed walls of civility the proud Ofanians had built in their minds turned against them, becoming trenches of depravity that deepened the more they indulged. \n\n\"Don't worry, Bianca,\" I giggled to her. \"You can make sure I don't go in dry.\" I grabbed Arya's succulent cheeks, and spread her open. Brandon's cock had stretched her pussy so thin that the brown lips clung to him like a membranous sheath, and just above that, Arya's virgin aperture was coiled tight as a button. I turned to Bianca, and hissed, \"Doesn't it look delicious?\" \n\nBianca stared at it for a long time, her expression transitioning from disgust, to trepidation, to curiosity. As Brandon gently thrusted into Arya, her pink little center opened and closed, seeming to pucker its coiled lips with the slackening and tightening of her pelvic muscles. Bianca watched it until her expression was wholly ravenous, and with a groan of shameful self-defeat, she suddenly planted her face between her baby-girl's jiggling cheeks, wrapped her lips around the rim, and sucked the entrance to a swollen circle as her tongue pushed inside. Arya mewled and whined, gasped and groaned. Her slender back flexed below her wings as she writhed within the prison of her position, undulating to the twitches that crawled up her spine. \n\nBianca was ravenous. She burrowed her face deeply between her daughter's cheeks and feasted gluttonously, the sounds of wet smacks and squelches accompanying the rising tenor of her baby's moans. She sated herself with her daughter's insides, then grabbed me ferociously by the member, and took me all the way to the base. I cried out in glee, adoring the ravenous and challenging look in Bianca's brown eyes as she ascended my shaft, sheening me, laying claim to me with a signature flick of her exiting tongue. Taking control of the situation, she grabbed me by my hair, and devoured my lips with domineering avarice, her stroking hand bringing my throbbing tip against her daughter's dilated center. \n\n\"Take a deep breath, baby,\" she whispered to Arya against my lips, took a handful of my ass, and pushed me inside her daughter's rectum. Brandon made sure Arya felt no pain, but she did feel me. She felt her pelvic floor indent at the head of my cock, she felt the pressure mount in her rim, and she felt me penetrate her resistance, her anus enveloping me so that I could slide into her tight hot insides. She felt me press against my brother's bulge from the other side, she felt me rub against him along the thin membrane that divided her channel, and she felt the complete filling of her insides when I compressed her succulent cheeks with my crotch, and moaned into her ear. \n\n\"You're so fucking tight for me!\" I hissed breathily. \"How does my cock feel shoved up your little virgin asshole?\" \n\nArya's eyes were bulging, her lips were stammering, her cheeks were flushed. She let out a hoarse hiss, and that hiss became a whine, and that whine became a decadent moan of pure delight. She backed her ass into me, squishing her soft cheeks against my crotch, and she whimpered, \"How does something this wrong feel this good?\" \n\n\"Because wrong is right between the bedsheets, Arya,\" I chuckled, licking her ear above her wing. \n\n\"Yes,\" she moaned, sliding atop my brother, ravaging her holes willingly, \"yes, it is! Oh, Bound One, speak terrible things to me!\" \n\n\"You're an anal slut,\" I growled, covetously squeezing her breasts, \"you're a helpless little whore who likes getting fucked in both holes at once!\" \n\n\"Yes! More!\" \n\n\"You're a depraved little bird who likes the taste of her mother's cunt!\" I growled, pulling back, marveling at how her sheath clung to me before I plunged back in.\n\n\"I am!\" she cried, delighting in the way Brandon and I grinded between her, our cocks pressing her nerve-swathed division, ruining her from the inside out. \n\n\"You want to be stuffed in every little hole, don't you?\" I touched her trembling lips. \"This pretty little mouth isn't for talking\u2014no, no, no\u2014it's for something else.\" \n\n\"It's for this,\" Bianca whispered, rising beside her daughter. Brandon's hand left the High Guard's crotch to reveal a brown column of masculine glory rising from between her powerful legs. Despite its size, Arya didn't hesitate. She grasped her mother by the cock, licked her way up its underside, wrapped her mouth around the head, and took it halfway. Bianca made a seat of Brandon's face, and as Brandon nestled his nose against her anus and his mouth around her slit, we all began to fuck her daughter into mindless orgasm. ",
        "She writhed between us, bucking and heaving, assaulted on all fronts, pierced in all holes. She glugged and gagged, screamed muffled exaltations, and mewled pathetically, and as the spit leaked from her marred lips and sweat glimmered from her brown flesh, she began to transform into a beast of pure carnality. She spread her great wings with her ascension, she grinded and undulated with animalistic grace, she took me and my brother deep into her hot clenching nethers and sucked wantonly from her mother's spout. Her eyes rolled back, her bulging neck bowed, her heartbeat blasted against her breast as her pulse fluttered around her consuming orifices. I couldn't hold it anymore. With a cry of ecstasy, I unloaded the contents of my testicles into Arya's thirsty rectum. Brandon wasn't far behind. He exclaimed from between Bianca's cheeks, and thrusted once more with authority, lifting Arya into the air as he emptied himself into her, filling her to the brim, fertilizing her virgin womb. Bianca cried out in delight, exalted in her daughter's maternal genesis, and came down her throat. Arya couldn't last another second; with a final muffled note, she arched her back, curled her toes, and convulsed between the three of us in a mindless moment of euphoria. \n\nIt was at that moment, that Deja returned. The orgy paused. All eyes turned to the horrified faces of the remaining forty-six members of the Ofanian Guard, all bunched together on the balcony outside of our home. Only Arya's waning cries sounded in the pervading silence, and then there was nothing. That beautiful instance was akin to a herd of sheep stumbling into a wolf's den, and all the wolves were ravenous. Bianca dismounted Brandon's face, her cock waggling and sheen with her daughter's spit, and she grinned crookedly at the rest of her order.\n\n\"Sisters of Ofan,\" she said with a magnanimous raise of her arms, \"please come in.\" \n\nInterlude: Astral Traveler\n\nARBITRUS GEN\n\nI stared directly at the sun. Ever since Furok tethered me to it, I could look right into the inferno without so much as drawing a tear. A passerby would see nothing but a crazy old dwarf lounging atop his inn's roof during the midday of summer. They might worry for my skin, for it was so very fair. They would never know that the sun had never laid a blemish upon my flesh, for my heat was once hotter than the star's very surface. They could never fathom that the old man staring at the sun was looking into another plane of existence. The light enveloped my vision, and my consciousness ebbed from me. \n\nI was standing in a puddle of water. No, it wasn't a puddle. It was a river. The river snaked through an infinite jungle beneath a blanket of stars, the astral sun shining dully behind its eclipse. It was a strange scene to be sure, but the space between realms was always strange, and at least this one was rather serene. I found my bearing, pointed my nose toward it, and began my journey. \n\nAfter five minutes of plodding through the river, I became confused. Why was the astral plane not changing? Where was the nonsensical fever-dream that was so treacherous to navigate? The plane of thought was ever-changing and bizarre, but this infinite jungle was more mundane than the physical realm. After ten minutes, I began to feel a creeping anxiety. My feet splashed loudly in the water, interrupting the pervading silence of the perpetual twilight. I found myself looking over my shoulder constantly, expecting some soaking black demoness to emerge slowly from the murky depths and follow my terrified flight at a nice even keel. But what was there to fear? Corruption was dead, and even if she wasn't, the Sentient had no power over me outside of her kingdom! I was tethered! \n\nBut I had always been terrified of her. That creeping black figure lurking in the corners of the void, smiling incessantly as though seeing right through my fa\u00e7ade and finding the horror within. There was something different about her. I could see it in those burning white irises of hers. They were alive! Alive, and enraged to the point of terrible madness. No, no, she's just a Sentient, you delusional old fool!\n\nAnd so when I came to her gate, and saw that it was as destroyed as it had been the last time I saw it, I breathed a great sigh of relief, clutched the crescent pendent that swung from my neck, and said a prayer of thanks. There was nothing here. She was dead and gone forever. I wiped my brow, and rested upon the crumbled stone pillar beside the twisted iron framework. \n\n\"Excuse me?\" a small voice said. \n\nI nearly shit my astral drawers. I whipped my head around, and was staring face-to-face with the demoness herself, her black eyes and body all... no, that wasn't right at all. Though the thing I stared at had the same features and face as the Most Ancient One, her flesh was a pallid grey, and her eyes were dull and docile. Her pupils were not alight with the luminance that belied her evil, but were dim and blind. A new Sentient. \n\n\"What are you?!\" I exclaimed. \n\nShe looked around at the wreckage of her gate, and shrugged. \"I do not know, but I know that it is all my fault.\" \n\n\"What?\" \n\nShe just cast her face to the astral floor, and let out a great sigh. \"Everything that has ever happened is my fault. I see it in my realm. Pictures, images. They come to me. They show me what I did. I killed my husband. I watched my daughter die in my arms. Who was she? Was she me? Who am I? But it doesn't matter. All my fault. All my fault. I must bear this pain alone. I deserve this.\" \n\nI studied the creature as she began methodically removing bricks from Corruption's pylon, and restoring it with fresh ones. \"You are... Guilt?\" \n\nShe paused, and looked at me. \"I was once someone else. I was once a caretaker of a lie. When a new babe of the astral plane was made, I would go to their centers, and give them meaning. I was her, or rather, I have her memories. Now there is no one to put a bible in my center. I have no meaning. I don't deserve one. It is all my fault.\" \n\n\"Hold on,\" I said, reaching through the bars. I almost touched Guilt, and had to retract my hand suddenly when I remembered what she was. \n\nShe looked at my retracted hand, then back at me. \"You sense my culpability, I see. I am the reason for all of this. I deserve nothing but your odium.\" \n\n\"Who were you?\" \n\nShe tilted her head this way and that. \"Some woman who thought she was god. In the end, she realized she was nothing, just like me. It matters naught. All my fault.\" \n\n\"It matters a great deal!\" \n\nGuilt smiled ruefully. \"The knowledge you seek will cause you immeasurable pain, astral traveler. I will not add that to my weighty conscience.\" \n\n\"Listen to me you goddamn sock puppet!\" I growled. \"I need to know what you know! I need to know everything!\" \n\nGuilt just blinked at me. \"This was once a warmer place, of kind eye's on morning's face. I remember the sound of birds, and the song in my holy mother's words,\" she sang softly, and began to weep. She wept as she pulled bricks from the old pylon and added new ones, as though the act of weeping were but a reaction in her eyes. There was no emotion behind her emotiveness; there was nothing at all. \n\n\"Please, Guilt,\" I muttered against the mangled bars. \"At least tell me what happened to Diamond.\" \n\nGuilt cocked her head, her grey hair cascading over her shoulder. \"Perhaps you should visit the realm of the Untethered One and see for yourself.\" \n\n\"Her realm is gone. Not empty, just... gone,\" I let out a long breath. \"She is dead. Willowbud, Diamond, and probably Julia too.\"\n\nGuilt smiled a small smile. \"The architect is a deceiver, and moves the rooms around.\" \n\n\"What are you talking about?!\" I snapped. \n\n\"I do not know of what I speak, or of who I speak. The memories are abstract and painful. Sometimes they align for a moment of clarity, and then...\" she drew her hands out to her side, and splayed her fingers helplessly. \n\nI nodded, and turned around. There was nothing this Sentient could give me, and nothing that she would if she could. \n\n\"They leave us behind, Arbitrus,\" she whispered. \n\nI looked back at her. She was staring at the wall, her expression blank and dead. \n\n\"What?\" I hissed. \n\n\"I know it to be true now,\" she whispered to the wall. \"The body is but the vessel for the mind, and the mind is but the vessel for the soul. We think we are the soul, but we are just the summation of our thoughts and memories. We are just petrified corpses mimicking life.\" Her eyes narrowed, but her expression remained wholly vacant. \"There is enough history and complexity in me to create something akin to a person. Almost. Almost. Almost. Something like a person. Something like a person gutted and lobotomized. Almost. Almost. Almost. I remember. I remember, but if feels like someone else. When the memories came for me, did they take me, or leave what I identified as 'me?' There is a continuity. She was born again, but I persevere. I am just her memories, and she doesn't remember them anymore. We are not just the sum of our experiences. You need to feel them to be alive. Almost. Almost. Almost.\" She looked at me and cocked her head. \"You were a Heat Bringer; can you kill me please?\" \n\n\"No.\"\n\nShe just nodded, no real concern behind her eyes. There wasn't even a bit of dissatisfaction; there was just... nothing. It was like looking into Wrath's eyes, but at least he believed he was made for a purpose. This creature\u2014this monster\u2014had no delusions about who she was. \n\n\"If I enter your realm, will you tell me what you know?\" I asked her. \n\nShe nodded. \"I will show you.\" \n\n\"Will you let me go?\" \n\nShe shook her head, and smiled pitiably at me. \"Sun Man, Sun Man, Sun Man. That's what Halok called you even before he became Wrath. Man of Purity, they call you. I know your tongue. I know your origin. They called you 'pure,' but you are rotten to the core. You burned them all, didn't you, Sun Man? They called you Sun Man because you made a sun on top of cities. Do you feel guilt, Sun Man?\"\n\n\"Yes,\" I whispered. \n\nShe nodded. \"Then you must never seek my truth. I tried to put that lie in your center\u2014or rather, the architect did. She wanted you so badly, but she couldn't find you in the ether of space and time. Corruption made her stupid. Fix the broken bridge. You must fix the broken bridge. A thousand years they are as one, like conjoined twins of the sun. They leave us behind. I know it is true now. If I could feel despair, I would wallow in it. They leave us behind. This was once a warmer place, of kind eyes on morning's face. They leave us behind. A thousand years they are as one, like two lovers in the sun. You must fix the broken bridge. They leave us all behind. All my fault. All my fault.\" Guilt mumbled mindlessly to the wall before her, then slowly looked at me. \"You wear the crescent symbol upon your neck.\" \n\n\"I seek forgiveness.\" \n\nShe smiled behind her vacant eyes. \"Do you know what that holy symbol is, Sun Man? It is the Blood Corona Sliver. It is the image I saw when I looked into the sky, and the suns split to reveal the crimson smile of their separation. It was God grinning down at me as I held my dead daughter, as the heavens emptied and the worlds split. It was God laughing at me for thinking I was her. You seek forgiveness in that symbol? That symbol is made of guilt.\" Her voice lowered, and she whispered. \"The architect has left her cage, Sun Man. She left it hours ago. You have been walking in her waters, and she knows where you are. She comes from the water. She comes for you now. Step, step, step. Splash, splash, splash. She's coming, she's coming. Step, step, step. Splash, splash, splash. Run, Sun Man. Run. Run. RUN!\" \n\nPart Two: Visitor \n\nBRANDON \n\nI blinked awake, and let out a sleepy groan. I twisted to my side to sprawl out, but there was a dark afro-haired beauty snoozing where my arm would go. Bianca mumbled contentedly in her sleep, then nestled her naked body against me, and wrapped a muscular arm about my shoulder. I sighed, and turned the other direction, only to find another black beauty snoring away. I sat upright. My massive bed was littered with winged, naked black women. The fifty-five remaining warriors of the Ofanian Guard were scattered about, sounding their satisfied sighs and snores to the early morning. I rubbed the sleep from my eyes, and blew hair through my rumbling lips. It had been three days since that first night, and I hadn't left my bed once. \n\n\"What does His Holiness have to complain about?\" Bianca murmured sleepily, opening one eye like a teasing wink. \"He has woken up in a paradise most men couldn't even dream about, and yet I see dissatisfaction upon his face.\" \n\n\"There's not enough room in my bed to sleep,\" I grumbled. \n\n\"Oh, you poor, poor god. Perhaps you should ask some of the beautiful naked women to vacate it. I'm sure they would be happy to ease your suffering.\" \n\nI glowered at my High Guard. \"You sound more like Angela every day.\" \n\n\"Mmm,\" she moaned happily, and snuggled firmly against me, \"it is a great honor to be compared to the Bound One.\" \n\n\"It wasn't a compliment.\" \n\n\"But I took it as such,\" Bianca grinned. \"Where are you going off to, Your Holiness?\" \n\n\"I've got more important things to do than lie around and fuck all day.\" \n\n\"Bullshit,\" Bianca giggled. \n\nI narrowed my eyes at her. \"When did you get so disrespectful?\" \n\n\"Hmm...\" she grinned playfully, \"...right around the time Angela showed me how easily your...weaknesses are manipulated.\" Bianca grasped my testicles with her palm and pushed two fingers up my ass, and my cock shot up with such force that it slapped my belly. Bianca moaned through her smiling mouth as she massaged my prostate, then she licked those lush lips, and slithered down my body. \n\n\"Bianca!\" I half-hissed, half-moaned. \n\n\"Careful, Your Holiness,\" she sneered, hovering her mouth over my throbbing tip. \"If you're too loud, you'll wake the rest up. Then everyone will want some, and it'll be nightfall before you know it....\" \n\nWhen I managed to get out of the tree, it was already midmorning. The sun shone through the tropical canopy above, giving a pleasant heat to the humidity. The entire rainforest seemed to perspire in the morning, for the leaves were dewy, and the overlarge fruit was moistened and plump. I picked an enormous peach out of a tree, and took a bite. The flavor burst into my mouth, and I groaned as I chewed and swallowed. Once revitalized, I journeyed up the path from the caldera lake, and made my way to the ridgeline. \n\nThe whole of the Gratoran Wall seemed to stretch southward to infinity. This far north, I couldn't even see Droktin's Pass, though I thought I could barely see Iona and Breyta. Below me, the Tentigo Tropic stretched out to the Northern Sea, and beyond that, the Gratoran Desert touched every horizon. I fished through my pouch\u2014the only thing I wore\u2014and I pulled out a joint. It had been horribly bent in the raucous of debauchery, but it was still intact. I put it between my lips, then realized with a sigh that I didn't have any flint. \n\n\"I have flint,\" said the statuesque blonde woman to my left. \n\nI blinked at the Ionan. \"Where the fuck did you come from?\" \n\n\"I have been standing here since you got here,\" she said. \"This is the place where a warrior from another clan must wait to be greeted or harried away by the Ofanian Guard. I have come here hundreds of times,\" she scowled, the lines on her face deepening, \"never before have I been greeted by no one. We saw the second sun on the horizon, and we knew a cataclysm had occurred. My scouts tell me that Drastin is but glass, and the gods are all dead.\" She let out a sigh. \"Great Creators, forgive us. Tell me boy, how many of the Ofanian Guard still live?\" \n\n\"Fifty-five.\" \n\n\"That is all?\" she let out a distressed whine, and rubbed her hands to her temples. \"So many bloodlines gone! Now they will have to breed in excess to replenish themselves. Oh, Great Creators, forgive this anathematic generation!\" She looked at me, at my waggling cock, and her scowl deepened. \"And you are here to help repopulate, I presume? Good gods, they must truly be desperate.\" \n\n\"Oh, they are,\" Angela giggled from atop the boulder, clothed in the body of a large lizard. \n\nThe Ionan's eyes darted upward. \"A shape-shifter? Quick boy, hand me that rope!\" \n\n\"Why?\" I asked. \n\n\"Shape-shifters have potent healing properties in their blood,\" the woman urged me on with her hands. \"I will use its spleen to cure my bladder infection.\" \n\nI pointed at the grinning lizard. \"You know she can hear you, right?\" \n\n\"Doesn't matter. Shape-shifters are notoriously stupid. Quick boy, before her little brain figures it out!\" \n\nAngela cackled, transformed into a penguin, and began flapping manically. \"You'll never catch me!\" she roared. \"I'll swim right into the sun!\" \n\n\"Hurry, boy!\" \n\n\"I'm free!\" Angela cried, and jumped right off the rock. Her fat little penguin body hovered for a moment, then flopped right into the Ionan's arms. The valkyrie was quick. She brandished her dagger, and plunged it right into Angela's neck. The blade snapped off. She pulled it out, looked at it, then looked down at the penguin. Angela giggled. The valkyrie ripped out another dagger and plunged it into Angela's neck, and again, the blade snapped off. Angela cackled. The valkyrie brandished yet a third dagger, and I let out a sigh. \n\n\"What?!\" the flustered Ionan snapped, her eyes wide with confusion. \n\n\"I made that skin impenetrable; you're never getting through it.\" \n\n\"Well, there are actually three ways to get through it; four if I'm feeling weird,\" Angela grinned, transforming to her human self. \n\nThe Ionan gawked at the god-bound naked teenager, then gawked at me. \n\n\"Your bladder infection is healed, by the way,\" I muttered. \"You're welcome.\" \n\nThe blonde woman's lip stammered, then she predictably dropped to her knees, and flattened herself in an exaggerated show of prostration. As she begged me for forgiveness and professed her undying admiration, Angela looked hungrily at the bulging outline of the woman's leather-clad ass, then raised her eyebrows at me. I shook my head, and she pouted her lips, crossed her arms, and harrumphed. \n\nANGELA \n\nThe Ionan woman's name was Nona Cloudwhisper, because of course it was. She was in her forties, and looked like she hadn't smiled once in her whole life. After she was done profusely apologizing to my brother, she took it upon herself to scowl at the Ofanian Guard as they emerged nakedly from the baobab tree. For their part, the Ofanians did an excellent job scowling back at Nona. As I watched Bianca scowl at the scowling Nona, I determined that being the best scowler was undoubtedly the mode of selection for High Guard, because for certain, Bianca Blackwing could scowl with such contempt that I wondered if her brows would touch her cheekbones. \n\n\"High Guard Blackwing,\" Nona prompted after much scowling, \"it is good to see that you are alive and well.\" \n\n\"Indeed,\" Bianca answered, wearing nothing but the Sword of Ofan and its strap. \n\nNona scowled so much that new lines appeared on her face. \"You are naked.\" \n\n\"I am.\" \n\n\"You have a penis.\" \n\n\"I have been blessed by god.\"\n\n\"There are marks of sin upon your flesh.\" \n\n\"Badges of honor.\" \n\n\"The Ofanian Guard links their fingers together and stand with buttocks pressed to crotches. You are all engaging in forbidden lesbianism; if you can even call it that anymore.\" \n\n\"And incest as well,\" Bianca said, wrapping her arm around Arya, who was also doing an excellent job of scowling. \"It is the will of my god, Nona. I will not be ashamed of my lust.\" \n\nNona's scowl was so deep that I feared for the elasticity of her face. \"You are an anathematic generation. Perhaps you are so low that you are without shame, but your descendants will wear your names like an albatross!\"",
        "\"Our daughters will be spawned from divinity!\" Bianca pointed a finger at Nona like it was a sword. \"They will carry his majesty within their blood for all time! They will celebrate us as heroes for making them of the direct line of Creation! You speak to me of shame?! While my god fills our bellies with daughters, your god is ash upon the Heat Bringer's wind! While Ofan serves with honor, you serve no one!\"\n\nNona's sword was out like lightning, and Bianca's was out a fraction after.\n\n\"Stop it,\" Brandon groaned, stepping between them to referee the exchange. \n\nNona and Bianca sheathed their swords, and continued their contest of scowls. \n\n\"Nona came to inform Ofan that Freydis Skyborne has not yet returned to Iona. As such, Nona is acting High Guard,\" Brandon said. \"We welcome Nona with open arms, and Nona will accept our welcome with grace and humility.\" \n\n\"No humility need be shown to these naked harlots!\" Nona snarled. \"I'd cut through them all without sustaining a scratch!\" \n\n\"Try it!\" Bianca roared. \n\n\"Stop!\" Brandon yelled. \"Just... stop. Nona, your blade would be as effective on their flesh as it was on my sister's. Bianca, keep your hand off your sword. Obviously Iona and Ofan don't get along, but we can at least have some manners.\" \n\n\"These black whores don't know what manners are!\" \n\n\"Your god is dead, you old white crusty cunt!\"\n\n\"I said, STOP!\" Brandon roared. \n\nBianca went silent and still, but Nona just continued her death-glare. \n\n\"Freydis beseeched me to seek out the Heat Bringer,\" Nona said. \"Tell me, does Julia Gendian yet live?\" \n\n\"I'm sorry, Nona,\" Brandon said sadly. \"She spent so much unbound power... there's just no way.\" \n\nNona's scowl cracked, and she bowed her head. \"Then we are honor-bound to serve you, Your Holiness.\" \n\n\"Then come over here and serve me, High Guard!\" Bianca sneered. \n\n\"I'll serve you your cock!\" \n\n\"Not before I feed it to you!\" \n\n\"How many fucking times do I HAVE TO SAY SHUT UP?!\" Brandon yelled. \"Nona, if you want to join the team, then you're just going to have to play second fiddle to the Ofanians, they\u2014\" \n\n\"I WOULD RATHER DIE THAN PUT MYSELF BENEATH AN OFANIAN!\" Nona screamed, red with fury. \"Your Holiness, I implore you to discard this trash for what it is, and claim a mantle worthy of you! I have two-thousand warriors behind me, and every one of them is better than the best these sows have to offer!\" \n\nBrandon flinched at her sudden outburst, and Nona paled at his reaction. She dropped to her knee, and bowed her head. \"I apologize for interrupting you, Your Holiness,\" she muttered to the ground. \"Please forgive my impudence, and the stain I have placed upon the Ionan Guard. You must understand that we are honor-bound to serve, that our entire lives are pledged upon our births. Please, Your Holiness; you are the last one left. Do not cast us away.\" \n\nBrandon shook his head. \"I'm sorry, Nona, but the Ofanians swore their loyalty to me, and have proved it under the direst of circumstances. If I don't return that loyalty, then my word means nothing.\" \n\n\"I understand,\" Nona said to the ground, a single tear running down her face. She got up on shaking legs, and walked away with her shoulders bowed toward the ledge. I caught her by the wrist, and smiled up at her when she looked questioningly down at me. \n\n\"So,\" I said, \"you guys looking for someone to worship, eh?\" \n\nNona cocked an eyebrow. \"Bound Ones are held in reverence, but are not deified.\" \n\n\"Reverence is good enough for me.\" \n\n\"Angela, what are you doing?\" Brandon asked. \n\nI turned around, and gave him my best scowl. \"There's more to life than living in a secluded sex-cult.\" \n\n\"There is?\" \n\nI snorted. \"You're just like Mom and Dad. You would've stayed in Towerhead your whole life if given the choice.\" I turned back to Nona. \"As fun as it is to eat black booty all day and get my clit sucked and my ass and pussy fucked\u2014\" \n\n\"Please, Bound One,\" Nona cringed. \n\n\"\u2014I need more. So, what's it gonna be, High Guard? Are you gonna wait a few more thousand years for a mulligan, or are you gonna do something worth a damn?\"\n\nNona studied me for a long time. \"You must know, Bound One, that you do not hold the authority to make me supersede my oaths and vows. If you ask me to... suck your clit... I will refuse.\" \n\n\"We'll put a pin in that one for later.\" \n\n\"It's a definite 'no.'\"\n\n\"I mean, who knows what tomorrow will bring, right?\" I giggled at the scowling Nona, then looked back toward Brandon. \"Toot-aloo, dearest brother.\" \n\nWithout looking, I stepped off the ledge, transformed into a great eagle, and spun freely in the air, savoring the way the wind caught my wings and lifted me. It was my first time flying, but I knew instinctively what to do. I flapped mightily, and the air pushed me towards the heavens, the sun glinting off my feathers in a silvery profile. Behind me, Nona struggled to keep pace, but she had no chance. I let out a teasing eagle screech, and soared over the mountains. Even from so many miles away, my keen eagle vision could make out the iconic shape of Iona in the distance. I raced toward it before Nona could catch up, hell-bent on making a grand introduction to the Ionan gentry before she could spoil the surprise. If I had known then what revelations awaited me atop that mountain, perhaps I would've savored my flight for just a little longer. \n\nBRANDON \n\nIt was always a treat to watch Bianca make love like a man. She was extremely dominant, always asserting herself as the alpha, always wrestling her partners into submission before penetrating them. Once she had them pinned, she would thrust her spear into them until they surrendered with euphoric cries, and then she would no longer need to restrain their arms and legs, for they would do anything she asked with their eyes full of submission, and their gaping lips quivering about their pathetic sobs of delight. She was not like that with me. When I was feeling bisexual, Bianca would never allow me to be beneath her. She would insist upon wetting my anus with her lips and tongue, and she would hum as though my puckered hole tasted of candy. Only when she'd slobbered me to the point of saturation would she lie back onto the bed, cup my glutes in her strong hands, and slowly ease me down her long thick pole. \n\n\"Great Giver, you feel like heaven around me,\" Bianca breathed huskily into my ear. She made a lecherous throne of her lap, and I sat upon it, savoring her reaming heat pushing so deeply into me. Her soft breasts pillowed about my neck and the back of my head, her strong tummy pressed into my dorsal muscles, and her arms came around me in a protective hold, pinning me tenderly against her so that she could deliver long, gradual thrusts into me. Arya and Deja ran their plush lips and tongue along the sides of my shaft, kissing each other as they consumed me, while Alecia took her place beneath me, sensually sucking my drooping nuts as she delivered her fingers into Bianca's holes. \n\nWhen Arya was done sucking my cock, she climbed atop my lap, straddled me, and took me deep into her gripping pussy. Her penis was small and rigid above her expanding defilement, and it curved back and leaked to alert me of her pleasure as she moaned all the way down my shaft. When her puffy labia smooshed wetly against my crotch, Deja moved behind her friend, and planted loving kisses up her collar and throat. Arya bowed her neck to relish the oral caress, then her moan heightened in pitch when Deja penetrated her anus. Arya's cock jolted with a spurt of release, and I felt Deja slide snugly alongside me, filling every vacancy with the young teenager's gripping pink depths, making her impossible tight. As her mother thrusted into me, so I thrusted into her, and Deja followed our rhythm, moving with torpid sensuality in this dance of sweet violation. \n\nAll around us, the other Ofanians moved with similar sensual movements. The mid afternoon sun cast golden rays through the windows, bathing the heaving brown flesh in hues of amber and tawny, casting dark writhing shadows upon the walls. Afroed hair comingled with braids as women exchanged their lips and tongues, their saliva bridging their mouths in strings that caught the light, their gold-streaked wings luminous in their creamy feathers. Sighs and moans filled the room, interrupted periodically by an intense orgasmic cry that waned and harmonized with the laziness of daytime. With the same languid motions as all the others, my partners and I came one after the other, filling each other, then sucking out the frothy cream. \n\nI crawled into a secluded corner of my bed, and Bianca snuggled against me, framing my smaller body with her larger one, her cock nestled snugly between my cheeks. \n\n\"Thank you, Your Holiness,\" Bianca whispered to me. \n\n\"For what?\" \n\n\"For rejecting the Ionans for my sake. I know you wanted them.\"\n\nI smiled incredulously back at her. \"Why would I want them?\" \n\n\"They are renowned the world over for their skill in combat. Ofan is... less so.\" \n\n\"It's really a sore spot for you, huh?\" \n\n\"Is our greatest source of shame.\" \n\n\"You know, the Towerhead baseball team is terrible. Like, ridiculously so. There are over three-hundred villages in Drastinar, and every one of them has a baseball team made up of local shop owners and farmhands. In a thirty-game season, Towerhead hasn't won a game for ten years. Three-hundred teams, Bianca; we lost to all of them.\" \n\n\"What is baseball?\" \n\n\"Don't worry about it. The point I'm making, is that I wouldn't give up on my hometown team even if they're the worst. Why would I give up on Ofan just because they're not the best?\" \n\nBianca frowned. \"Ofan is much like your baseball team, Your Holiness, but we do not have three-hundred opponents. We have only one.\"\n\n\"You must've beaten them at least once in twelve-thousand years.\" \n\nBianca blushed. \n\n\"Not once? How?\" \n\nShe cleared her throat. \"To understand the history of the peaks, you truly only need to know of the First Flighted War. Iona and Breyta\u2014the gods, not the warriors\u2014had an argument over whose valkyries were the most skilled. Iona boasted that she had trained the greatest force in the world, and erected statues all over Balamora proclaiming the superiority of Ionan valkyries. In a drunken fit of jealousy, Breyta ordered her warriors to attack the Ionan valkyries to prove once and for all that Iona's claims were nothing but unproven bluster. The match was so even and the battle so vicious that the dead littered the mountainside in thousands of pieces. The High Guards of Breyta and Iona\u2014Ikumi Kai and Hilde Skyborne\u2014were the last ones left, and they fought until their wings were cut to ribbons and they had to duel on the ground. In the end, Hilde disarmed Ikumi, and Ikumi committed ritualistic suicide to preserve her honor.\" \n\nBianca shifted uncomfortably beside me, and continued her tale. \"Breyta was so horrified by what had happened that she prohibited any of her future warriors from ever attacking another clan again. They would become pacifists for the rest of their days. Iona, however, saw how slim the margin of victory had been for her celebrated fighters, and realized that all of her pomp and pageantry had nearly cost her a great deal of pride. She decided that her warriors would need to be constantly tested to prove their superiority. She raised them to be violent, aggressive, and arrogant. They were always seeking enemies, someone to test their metal and mettle upon. They defeated armies orders of magnitude larger than themselves, they conquered nations without losing a single soldier, and they spread their fame across the world until no one would dare oppose them. They got bored. Ofan, the Life Giver of his time, raised his valkyries to be farmers and caretakers of the land. \n\nThey did not patrol the skies seeking enemies, but patrolled their mountaintop flocks. They did not thrust spears into dummies, but stabbed the earth with their spades. In the Second Flighted War, the Ionans came to Ofan, and massacred the entire guard. There was no warning, no reason behind it. They did it because we were too weak to be left alone, and the Breytans were too strong to provoke. Since that day, there have been seventy-nine wars between Ofan and Iona. The third war was a retaliatory attack by the daughters of the massacred Ofanian Guard. None of them returned home. The fourth war was retaliation for the third war, and the Ionans once again culled the Ofanian guard. The two clans went back and forth for generations until the next set of gods put an end to it. But there were many more wars after, and many more terrible losses. Much like your baseball team, Your Holiness, the Ofanians have never tasted victory.\" \n\n\"Fuck...\" I muttered. \n\n\"Indeed,\" Bianca sighed. \"We were molded into warriors out of necessity, but we were not born to be them. And so, Ofan is the afterthought of the peaks, perpetually lying in the shadow of the great Iona and the stoic Breyta.\"\n\nI touched her lips, and smiled up at her. \"But not this time, Bianca. This time, Iona goes home in shame while Ofan celebrates in the treetops. This time, you won.\" \n\n\"And more importantly, they lost,\" Bianca tittered. \"Did you see the look on Nona's face?\"\n\n\"Total rejection,\" I grinned, not sharing at all in Bianca's petty revelry, but enjoying her happiness. \n\n\"Oh, Great Creators,\" Bianca sighed pleasantly. \"I sure hope your sister is giving those white devils all kinds of hell.\" \n\n\"I'm a white devil, Bianca.\" \n\n\"With this thing between your legs?\" Bianca chuckled, rolling atop me and pressing her cock against mine, comparing their sizes. \"I'd say there's some chocolate milk in your lineage, Your Holiness.\"\n\n\"Nope, nothing but whole-milk all the way back.\" \n\n\"Well, white devil,\" Bianca began kissing her way down my chest, \"at least the future of your line will be much more colorful.\" \n\nANGELA \n\nWhen Helga brought my starving and diseased best friend into the apothecary's temple, I hardly recognized her. She was so skinny that the youth had been sapped right from her face, and so riddled with bacteria that she radiated with miasma. My first thought was to rush to the top of Iona, gain line-of-sight with Ofan, and send a telepathic message across hundreds of miles to my brother. But of course, Brandon was undoubtedly ensconced in pussy, not standing on the peak of a mountain waiting on the off-chance that his sister needed to send him an emergency message at three in the morning. So I rushed back down to the apothecary, where Doctor Rita Vikingmoon (yes that is her real fucking name) was about to chop Justina's leg off. I transformed into a bear, pushed her against the wall, mounted the bed, grew a dick, and began fucking my unconscious and disease-riddled friend before the horrified faces of Helga, Nona, and Rita. \n\n\"Bound One, what are you doing?!\" Helga screamed. \n\n\"She needs sperm, you idiots!\" I yelled, but what came out was, \"RARR ROH RA RARRRRR RARA,\" so I changed my body back (kept the bear dick) and repeated my explanation as I thrusted for all I was worth. The three valkyries could only stand there and get traumatized as I pumped and jackhammered my way to orgasm after orgasm, but no matter how much cum I dumped in my cum-dumpster friend, she didn't get better. The explanation became obvious to me after my fifth exhausting expulsion. \n\n\"I'm shooting blanks!\" I lamented to the sky. \"Brandon you greedy bastard!\" \n\n\"Get off her!\" Doctor Rita Vikingmoon growled, proffering her bone-saw. \n\n\"Where do you keep your sperm?!\" I demanded. \n\n\"What?!\"\n\n\"Sperm! I need lots and lots of sperm!\" \n\n\"This is a female colony, you idiot!\" Rita yelled. \n\n\"You breed horses, don't you?\" \n\n\"Great Creators above!\" Nona gasped. \n\n\"I will get it, Bound One!\" Helga yelled, and with one mighty flap of her wings, launched herself through the moon window. \n\nI spent the next five minutes fending off Rita and her bone-saw before Helga burst back through the ceiling with a barrel under her arms. I snatched the barrel, pried open the lid, and nearly barfed. The most pungent and rank aroma to ever grace my nostrils filled my sinuses, sent tears into my eyes, and for some reason I didn't want to think too much about, got me really, really wet. I plunged my hand into the viscous fluid, scooped as much of it as I could into my palm, and then shoved my entire fist right up Justina's ass. Helga fainted, Nona gagged, and Rita just gawked at me. \n\n\"Well?!\" I yelled at the doctor. \"Are you going to just stand there?! Help me stuff this bitch!\" \n\nAnd so Rita donned her leather surgical gloves, and inseminated Justina's little pussy with her fist. Nona vomited, and I took another fistful of stinking hot sperm, pretended not to enjoy the texture dripping between my fingers, and rammed another load up Justina's colon. Her eyes fluttered open, and her fevered white gaze writhed around the ceiling. \n\n\"Justina!\" I screamed. \"Justina, it's me!\" \n\nHer eyes were glazed and unfocused, but they settled on me. \"I'm dead,\" she muttered. \"Oh fuck, the afterlife is real! I'm in hell, aren't I? This is what I get for pretending to know everything!\" \n\n\"You're not dead! You're in Iona!\" I yelled, shoving another fistful of horse gravy up her poop-chute. \"But you need to stay with me, Justina!\" \n\n\"Angela?\" she tried to focus her eyes, but she couldn't. \"You're not a ghost? You're bound? But... you're dead. You died with everyone else in Drastin. I'm dreaming. If I just close my eyes, maybe I'll go to a happier dream... one with my mommy.\" \n\n\"Stay with me!\" \n\n\"What are you doing to me?\" she mumbled. \n\n\"I'm giving you an equestrian enema. This is Doctor Rita Vikingmoon\u2014yes that is her real name\u2014and she's trying to make you pregnant with Pegasus.\" \n\nJustina blinked rapidly, a dense yellow film sheening her eyes. \"Angela,\" she croaked, \"you need to administer it orally.\" \n\nI proffered the barrel. \"Open your mouth as wide as you can.\" \n\n\"No,\" she coughed horrifically, \"you need to administer it from your mouth to mine. Hurry!\" \n\nWithout a second thought, I scooped up a fat dollop of steaming horse jizz, and poured it into my mouth. If I had a gag reflex, I would've vomited it all over my poor friend. Instead, I had to deal with the disturbing realization that after a while, it actually didn't taste too\u2014goddamn it, enough of the equestrian erotica! I pressed my mouth to Justina's lips, and passed the load between us. She drank it desperately, then left my lips with a rattling croak. \n\n\"Angela,\" she murmured, her voice waning.\n\n\"I'm right here, Justina!\" I cried. \n\nShe opened her chapped and cracked lips, and whispered with her fading breath, \"I can't believe you fell for that, you fucking dumbass.\" Then she closed her eyes, and began snoring. \n\nEight hours later, I was seated next to her bed, administering her spoonful after spoonful of horse gravy as she recounted everything that had transpired between the cataclysm and her capture by Helga. Nona, Helga and Rita sat in solemn silence, their pale faces becoming ghostly white the more information Justina revealed. When she was done, the room was in silence. \n\n\"How did this happen?\" I whispered, breaking the silence. \"How does a new god just... appear?\" \n\n\"I don't know,\" Justina muttered. \n\n\"There is a lineage,\" Nona said. \"The Gods all carry a common impurity in them.\" \n\n\"Incubus,\" Justina said, \"we figured that one out already.\"\n\nNona nodded. \"It is so diluted now that it is hardly expressed, but it said that Iona, Ofan and Breyta were all of white hair and fair features.\" \n\n\"Would also explain Brandon's massive cock,\" I muttered, and the valkyries all pretended not to hear it. \n\n\"Only Diamond knows the answers,\" Justina said. \"She went behind Corruption's door, and we lost her.\"",
        "\"We were so close to figuring it all out. There must be some theory that fills in the void!\" \n\n\"What good did theories do us, Angela?\" Justina croaked. \"If we had left well enough alone, then Julia would've flattened Drastin, killed Willowbud, Diamond and Corruption, and then died.\"\n\n\"That was my reality until you showed up,\" I grumbled. \n\n\"And now it's a happy fantasy,\" Justina laughed bitterly. \"Now we're all fucked. You Ionans should just join up with Julia before she comes here for you. Don't make the mistake we made. There is no fighting Corruption.\" \n\nNona scowled her expert-level scowl. \"Freydis swore us to the Heat Bringer, but if what you say is true, then we will give His Holiness a chance to reconsider.\" \n\nJustina laughed bitterly. \"Oh, because Brandon can save you from what's coming.\" \n\n\"Fuck off, Justina,\" I growled. \n\n\"What did Brandon do when he found out what Willowbud was? What did he do while Julia and Willowbud played roulette with a Sentient? Your brother is so conflict-averse that he'd rather get fucked in the ass by the Heat Bringer than stand up to her.\"\n\n\"He's a pacifist.\" \n\n\"He's a coward!\" Justina spat. \n\nI gave her a gentle look, and she turned red with shame, and bowed her head.\n\n\"I didn't mean that, Angela, you know it. Brandon's a great guy, but...\" she shook her head. \"...maybe he could finesse his way around Diamond like he did with Willowbud. She seems to be anarchistic in a playful sense, and Brandon's good enough with dangerous women to walk the line right, but Julia... Corruption didn't turn Julia into a nihilist; she radicalized her own righteousness. She will burn the whole world if she thinks it's what the Holy Mother wants. There's no finessing your way out of that. When she learns that Brandon is alive, she will come for him, because only the Holy Mother should have the power to create life.\" She looked up at me. \"You need to get as far away as you can.\" \n\n\"We can't run from this.\" \n\n\"You can for a while.\"\n\n\"We can win.\" \n\nJustina laughed. \n\n\"I mean it, Justina,\" I said severely. \"You haven't seen him since we bound. He can do things you can't even imagine.\" \n\n\"And what's he going to do against the gods of fire and water? Throw an elephant at them?\"\n\n\"His power isn't what he can do himself; it's what he can give to others,\" I explained, transforming into a bear, a dragon, an eagle, then back. \n\nJustina gawked at my power, then shook the rationality back to her expression. \"And what's any of that going to do when Julia ignites like a supernova?\" \n\n\"It only takes one shot, Justina. She is still just flesh and blood. We just need to get close enough. Right now, we have the advantage. She doesn't know Brandon is alive.\" \n\n\"Who's going to deliver that shot, Angela?\" Justina hissed. \"Who's going to get close enough? My mom is the greatest assassin on Balamora, and even she couldn't kill Julia when she had the drop on her in Drastin!\" \n\n\"I'll do it,\" I muttered. \"I'm the only one who could get close to her before.\" \n\nJustina looked like she'd object, but she just sighed, and rested her head on the pillow. \"Maybe you can do it; maybe you're the only one who can, but it's not like before. Julia isn't like Willowbud or Diamond. Julia won't engage with you or play with you. She will kill you without hesitation, and then she'll come for your brother.\" \n\nBRANDON \n\nMy reunion with Justina became less and less joyful as she revealed more and more information. Eventually, it came to the point that I was slightly resentful that she had come back at all. Fun-time was over, and I hadn't even gotten the chance to get bored of it yet. Bianca and her senior officers had donned ceremonial togas and were sitting in a semicircle across from the Ionans. There was Nona and Helga, and ten other Ionans, and they all glared across the trunk of the hollowed baobab at their dark-skinned counterparts. I sat between them at one end of the circle, and Angela sat between them at the other. At the center, Justina recounted to me and the Ofanians what she had already recounted to Angela and the Ionans, and each word that spilled from her damnable lush lips dropped my stomach deeper and deeper into the pit of terror forming in my abdomen. When she was done, all eyes in the room turned toward me. \n\nI sighed, and rubbed my temples. \"Anyone else got any ideas besides me?\" \n\n\"There's no running from this, Brandon,\" Angela said. \n\n\"I know, I know,\" I continued to massage the threatening migraine in my head, \"I tried to ignore the problem last time, and it bit everyone in the ass. We have to face this head on.\" \n\n\"Huh,\" Justina mused, looking at me appraisingly, \"how about that.\" \n\nI glanced up at her. \"The operative word here is 'we,' Justina; everyone is going to have to pitch in, and everyone is going to have to risk... well, everything.\" I looked around at the Ionans. \"I guess I need you guys after all.\" \n\nNona cleared her throat. \"We would love to serve, Your Holiness, but we will not take a secondary role to the Ofanians.\" \n\n\"You will take what your master gives you, you blonde mutt!\" Bianca snarled.\n\n\"Black whore!\" \n\n\"White trash!\" \n\nI held up my hand before more words were exchanged. \"The Ofanians are my personal guard, and nothing is going to change that. The Ionans won't serve a secondary role, but a different one.\" \n\nNona inclined her head slightly. \"With all due respect, Your Holiness, it is quite obvious that the way into your favor is between your legs. Because of this, the Ofanians will always hold power, as no Ionan would dare shame herself as the Ofanians do.\" \n\n\"We are honored vessels of his holy seed!\"\n\n\"You're his sperm depository!\"\n\n\"Shut up!\" I yelled, and narrowed my eyes at Nona. \"Nona, I'm not asking you to do anything you don't want to.\" \n\n\"I am aware, Your Holiness, but I am telling you that you will favor those closest to you over us, and that is something Ionans simply cannot abide.\"\n\n\"You got on your knees and begged me to let you serve yesterday.\" \n\n\"You were the only god we could serve yesterday.\" \n\n\"Nona,\" Angela said, \"are you telling us you'd rather serve a corrupted god than my brother?\" \n\n\"It would be the greatest honor of my life to serve His Holiness, but I will never take orders from an Ofanian.\" Nona turned to me. \"You have blessed the Ofanians with your magic, but there is no magical cure for a weak bloodline. I would pit my sword against any ten Ofanians, any day, any conditions. There are two-thousand Ionan warriors ready to serve, and not even sixty of the Ofanian guard left. I believe the choice is obvious.\" \n\nI glared at Nona. \"Astrid Skyborne was said to have been the best of you.\" \n\n\"She was our brightest star.\" \n\n\"Despite being one of the proudest women I've ever met, she never confused her pride with her honor.\" \n\nNona inclined her head indignantly. \"Astrid Skyborne was put under great stress. In the end, it seems she broke.\"\n\n\"That's not fair,\" Helga muttered, then turned bright red when Nona's scowl descended upon her. \n\nI knitted my fingers together. \"Nona, you must know that my honor will never allow me to betray the women who have so valiantly served me.\" \n\nStop right there, Brandon! Angela's voice cut into my head. \n\nI looked at her from across the room. What?\n\nYou're thinking with the head of your dick, you asshole!\n\nI'm thinking with my heart, actually. I'm pretty sure I put one inside of you, but if you're about to say what I think you're about to say....\n\nIt's not about feelings; it's about numbers. Your power is the power to strengthen those around you, and the Ionan Guard is the strongest fighting force in the world! \n\nI won't abandon the Ofanians after everything they've done for me! Bianca saved our lives, Angela!\n\nWe're talking about saving the world, Brandon! \n\n\"Your Holiness?\" Bianca's soft voice queried. Angela and I had been staring intensely at each other in dead silence, and tension had filled the room. \n\n\"Nona,\" I said, \"join me and the Ofanians, or don't. It's as simple as that.\" \n\n\"Saying 'no' is the same as joining Julia,\" Angela hissed at Nona, her voice full of venom. \"And that would make you my enemy. Do you want to be my enemy, Nona?\" \n\nNona just smiled politely, stood up, and bowed to each of us. \"With all due respect, Your Holiness and the Bound One; the burden of responsibility rests with those who hold power. If you cannot make the difficult choice, then I will have to. You have two fortnights to reconsider before I am officially given Freydis's mantle. Thank you for your audience.\" \n\nShe walked out of the room, and her officers followed. Only Helga looked back, connected frightened eyes with Justina, then disappeared. \n\n\"Traitors!\" Bianca roared. \"Oath-breakers and blasphemers!\" She beamed radiantly at me. \"You made the right choice, Your Holiness. I will make sure that your faith in us is not wasted!\" \n\n\"It was never a choice at all, Bianca,\" Angela smiled easily. \"The Ofanians have proven themselves time and time again. The only thing the Ionans have proved is their cowardice.\" She turned from the chest-puffing High Guard, and looked at me. \"Brandon, can we talk in private for a moment?\"\n\n\"I'm coming with,\" Justina insisted. \n\nAngela led us out of earshot of the Ofanians, then turned around and levelled her gaze on me. \"Ok, I get it, you couldn't betray Bianca to her face. Fine. But we can't think with our hearts on this one.\" \n\n\"If you gifted the Ionans with the power you gifted the Ofanians, you would have an unstoppable force,\" Justina said.\n\n\"What does it matter against Julia anyway?\" \n\n\"Julia can't be everywhere at once, and she knows it,\" Angela said. \"I've seen what she's like when she goes dark; she thinks she some kind of messiah. She didn't go to the Gratoran Desert for a tan. There are millions of disaffected orcs there, and the wounds of the last Creator war are still fresh for them. If they get through Droktin's Pass....\" \n\n\"Why would they go there? Didn't Julia say before she wanted to light Droktinar's furnace?\" \n\nAngela snorted. \"Yeah, and I suppose she's just going to hang it up and retire after that.\" \n\n\"Well, what the fuck am I supposed to do to her, huh? Throw a fucking plant at her?\"\n\n\"Our strength lies in our allies now, Brandon,\" Angela said. \"Your kind of power isn't made for combat. Leave that to the soldiers. Leave it to me.\" \n\n\"You're not getting anywhere near her!\" I snapped. \n\n\"I'm the one who saved us all last time!\" Angela snarled back. \"I'm the one who went into that temple when you all wanted to run away. I'm the one who beat Corruption and brought Julia back from the brink! The only way we're going to beat Julia now is if someone gets close enough to put a knife in her throat! Who's it gonna be, Brandon? You?!\" \n\n\"Our one advantage is that Julia doesn't yet know you live,\" Justina said. \"We need to strike swiftly while she's still off her guard, and before Diamond reaches her.\" \n\n\"The Ionans will be having the same conversation we're having,\" Angela said. \"If they decide to join up with Julia, not only did you lose the most powerful fighting force in the world to an insane Heat Bringer, but your cover is blown too.\"\n\n\"You need them, Brandon,\" Justina sighed. \"Sometimes being a leader means you have to fuck someone over.\" \n\n\"It also means that I don't have to listen to you,\" I said. \"This isn't negotiable. I'm not betraying the Ofanians and that's the end of it.\" \n\n\"Fine then, that leaves us with just one option,\" Angela said. \"You take the Ofanians to Iona right now, and you conquer the Ionans.\" \n\nI blinked at Angela. \"You are not fucking serious right now.\" \n\nShe shrugged. \"Once they realize their swords can't penetrate Ofanian flesh, they'll have to submit. Of course, we'll have to chop off Nona's head to make an example of her, but I'm sure Bianca would be glad to\u2014\" \n\n\"I've got another idea,\" I interrupted, and glanced at Justina. \"There was fission between Helga and Nona, wasn't there?\" \n\n\"The word of the High Guard is absolute.\" \n\n\"She's just the substitute High Guard.\" \n\n\"Semantics.\" \n\n\"My point is that the position of High Guard can be challenged....\" I tapped my lips, and pondered the shape of Iona in the distance. \"This kind of choice is bound to create fractures in the Ionan Guard.\" \n\nAngela and Justina pondered that, and looked to each other. They came to a silent accordance, and then looked to me. \n\n\"It could work,\" Angela said, \"but you'd have to pick your candidate very carefully.\" \n\n\"You mean you will.\" \n\n\"Why don't you just do it?\" \n\n\"The best way to turn friends into enemies is to meddle in their affairs. They need to make the choice on their own. Angela, transform yourself into something innocuous, and observe the Ionans in secret. Find me a champion.\"\n\n\"Your logic is flawed, Brandon,\" Justina said. \"We still have to show our interest, or they'll think we don't care. As a woman of eminent distinction, I'm expected to go on diplomatic missions.\" \n\n\"Alright then. Angela, go to Iona and keep tabs on what's going on. Justina will rendezvous with you tomorrow. I'll stay atop Ofan with a sightline to Iona's peak. If anything happens, tell me.\" \n\nAngela nodded, turned into a great owl, and launched herself into the night sky. Justina and I watched as her silhouette crossed the bright moon, then darkened into the mass of the nighttime mountain range. \n\n\"Why didn't you send me with her?\" Justina asked. \n\n\"Because just an hour ago, I thought you were dead,\" I said, and linked her fingers with mine. \"You're not leaving my side until I make you indestructible.\" \n\nShe smiled up at me, the moonlight catching her girlish face in a dazzling display. \"Be careful giving a succubus biologist the powers of shape-shifting; I might decide to live the rest of my life amongst the northern brown snails just to observe their mating rituals. Mmm...\" she shuddered all over, \"...so much slime.\" \n\n\"You are so fucking weird.\" \n\n\"Says you,\" she tittered. \n\nI grinned, wrapped her in my arms, and planted a kiss on her brow. She tilted her face to intercept the kiss on her lips, and she slithered her serpentine tongue into my mouth. When our lips met, she melted into my body, forming curve for curve with me, moaning as she rubbed her crotch against mine. I'd never felt her lust so desperately before. I grabbed her by her little bottom, and pulled her up. She wrapped her legs around my waist, and continued to consume my mouth as I walked to the baobab tree. The look on her face when she entered a room filled with statuesque valkyries sporting monstrous cocks was so perfect that it nearly washed away all thought of Julia, Diamond and Corruption. Nearly. \n\nANGELA \n\nI wasn't going to Iona. I flew until I was out of sight, and then I veered hard to the right, and began my journey westward. The moment Brandon had come up with his half-brained idea of finding a champion in the Iona Guard to fight for him, I knew there would be no reasoning with him. He would rationalize his way out of every hard decision until they were no decisions left. It didn't matter if he found an Ionan who opposed Nona and beat her in combat; by the time that happened, Diamond would have met up with her mommy, and our window would be closed. I would remove the choice altogether, and once again rescue my brother from his own indecisiveness. \n\nIt took me four hours before I found the encampment. A few hundred Breytans formed a neat perimeter around a caravan of perhaps two-hundred orcs. In the middle of a vast desert, it would seem quite serendipitous that I stumbled upon such a place, but it was not so. I simply followed the hundreds of thousands of orcs flocking to this place from every direction. Their torches illuminated the desert like fireflies, stretching into the night as far as I could see. As I soared overhead to view the great migration headed for this tiny encampment, I realized that my initial estimate was wrong; it wasn't hundreds of thousands. It was millions. Somehow in this vast expanse of wildlands, word had reached the orc enclaves from all stretches of the desert that the Heat Bringer had returned, and that she was here to make right the wrongs of her ancestor.\n\nI folded my wings, and plummeted to the ground. Before I hit the sand, I transformed into a spider, opened a parachute of webbing, and floated listlessly to the top of a wagon. With my eight eyes attuned for the darkness, I looked around me for signs of Julia. My ocular lenses stopped their scanning upon a set of footprints that led to a wagon twenty feet from me. These footprints weren't like the indentations created by other feet; these footprints were glossy in the moonlight. They were glassed with heat. I scuttled down from the wagon and followed the footprints, my eight little legs clicking away on the pebbles until I stopped suddenly. Jade Tao had stepped right in front of me. There were three swords on her person: a katana in her sash, wakizashi on her waist, and the Sword of Iona slung across her back. I stayed deathly still, waiting for her to pass me by. She stayed equally as still, scanning the orcs surrounding the wagon with just her eyes until she was satisfied, and moved to another position. I scampered behind her, climbed the wagon, and crawled through a crack in the boards. I popped out of the other side, and was face-to-face with the corrupted Heat Bringer.\n\nThe first thing I noticed about Julia Gendian was that she had markings all over her body. They were strange shapes, abstract images that contoured to her curves and forms, all of them black. She was clearly bound to Diamond, but... why didn't Justina mention Diamond's markings? It didn't matter. The second thing I noticed about Julia Gendian was that she was hogtied, her mouth was stuffed with a gag-ball, and she was being forcibly sodomized from behind by Tera Autumnsong's leather-clad fist. The succubus hurled insult after insult at her through gritted teeth as she pumped her arm faster and faster, and Julia's muffled screams became higher and higher. \n\nWhen Tera's fist and Julia's screams reached a crescendo, Tera ripped her closed hand out of the Heat Bringer's rectum with a vicious pull, and Julia collapsed onto the floor in a fit of orgasm, her cock vomiting great volumes of thick sperm into the balloon Tera had tied around the crease of her glans. Julia's pussy was taped shut, the crescent symbol of the Holy Mother drawn over the seal, but she was so damp that Tera had no trouble molesting her through the protective membrane. As she did this, her other hand played with Julia's prolapsed anus, and it was then that I saw Tera didn't have another hand. She ran the dull point of a metal hook through the ruby rose protruding from Julia's supple alabaster cheeks. When Julia was done writhing on the floor, Tera collected the balloon from the god's penile head, and drank its contents. Once satisfied, she undid the bonds that held the Heat Bringer, and Julia labored away from her molester. \n\n\"I should kill you,\" Julia whispered. \n\n\"But you won't,\" Tera sneered, not at all threatened. She collected the residual semen that painted her lips, and sucked her finger clean. \"Get on your knees.\"\n\n\"What?\" \n\n\"I would hear your confession.\" \n\n\"WHAT?!\" \n\n\"When you come into my wagon, you come into my church.\" \n\nBlack flame burst from Julia's fist. \"How dare you commit blasphemy before me!\"\n\n\"No,\" Tera said smoothly, \"how dare you. Do you think you are so holy that you are above reproach? Did you come here to do god's work, or did you come to my wagon to get fucked like a sinning whore?\" \n\nJulia glared at Tera. \"I don't know why I came here,\" she hissed. ",
        "\"I think you do.\" Tera lit a cigarette from a long holder, and eased herself back into the cushions. \"Think beyond your own self-righteousness, Sister. If you are a holy messenger because Diamond corrupted you, then so am I. Otherwise, neither of us are.\" \n\n\"I am wreathed with the black mark of God! You just wear the flesh of a whore!\" \n\n\"Do you think Diamond chose me for no reason at all then? Does the Holy Mother make mistakes, Sister Julia?\" \n\nJulia's glare softened. Her black eyes seemed to turn upon herself in reflection, and she took a deep breath, and nodded. \"I have been proudful. You are right, Tera.\" \n\n\"Sister Tera.\" \n\n\"Sister Tera,\" Julia muttered, and glanced right at me. I pulled myself back into the darkness, but Julia didn't seem to have seen me. \"You have placed a muting charm on this wagon?\" she asked Tera.\n\n\"It's hanging above the door. No one can hear us.\" \n\nJulia tentatively got onto one knee, then the other. \"Will you hear my confession?\" \n\n\"I'd love to,\" Tera grinned. \n\nJulia shifted uncomfortably on the cushioned floor, her black-patterned cock waggling between her black-patterned thighs. She fussed with her masculine organ, then decided to just tuck it between her legs to keep her modesty. She folded her hands in her lap, and bowed her head. \"I have terrible desires, Sister Tera,\" she whispered. \"I know that the Holy Mother has blessed me with her purpose, and that purpose can sometimes require me to do brutal things, but there are times when I have... urges... and these urges compel me to do things that I know are against the Maternal Path.\" \n\nTera fished between her legs with her hooked hand, and began rubbing the metal point between her purple folds. \"Speak them to me,\" she whispered. \n\nJulia swallowed. \"The virginal Breytans are the purest souls under my charge. They will be my priestesses, and with their holy wings, they will spread God's word to every corner of the world. They will remain chaste until their dying day\u2014they must\u2014and that chastity is so alluring to me, Sister Tera.\" Julia's cock was growing hard between her pressing thighs. \"It is not that I just want to defile their purity; it is that I want to punish them for it. I know there is no holy justification for it, but it is my desire.\" \n\n\"How do you know it's not what God wants?\" \n\n\"Because it is written,\" Julia hissed. \"The Holy Mother's priestesses must be virginal. It is why I have renewed my vow of chastity with my holy rebirth.\" She gulped. \"It was why I taped my womanhood closed before I came to this place. I... I did not come here with godly intentions.\" \n\n\"You are an imperfect vessel.\" \n\n\"I am.\" \n\nTera smiled as she penetrated herself with the hook. \"Something I've noticed about you, Sister Julia, is that you quite enjoy anal stimulation; even more-so than vaginal.\" \n\nJulia nodded shamefully. \"It is abhorrent that I should garner such pleasure from such a filthy place. As you said, I am an imperfect vessel.\" \n\n\"Sodomy isn't a mortal sin.\" \n\n\"But it should still be punished.\" \n\n\"Is that why you asked me to bind and beat you?\" Tera grinned. \"You religious whores are all the same. Endlessly exploiting the poop-hole loophole, indulging in masochism, and always getting off on shame. I didn't cleanse the sin from you; I let you wallow in it.\" \n\nJulia turned red all over. \"You are right. I should never come here again! I should not seek to circumnavigate God's decree of purity!\" \n\n\"Or maybe, you should see it as a sign,\" Tera said slyly. \"Maybe God brought you a succubus for this very reason. Of all the sins in the world, lust is the most insidious. You need a seductress to properly police it, or it will run rampant in your followers.\" \n\nJulia raised her gaze. \"What are you saying?\" \n\n\"Let me take the burden of carnal sin from your shoulders. Keep such filth out of your head, and focus only on the purity of your cause. If you spend all your time making sure your flock doesn't fuck, then you'll never shepherd them to the promised land.\" \n\nJulia mulled it over for a while, then slowly nodded. \"Yes... yes, that must be why you are here.\" \n\n\"Burn the blasphemers and the heretics; leave the sodomites and whores to me,\" Tera grinned. \"I will cleanse them, and those who can't be cleansed, I will make certain they are thoroughly punished.\" \n\nJulia smiled at Tera. It was the same small smile she'd always worn; quaint and polite, warm and welcoming, but with her eyes blackened and her flesh tattooed to the chin with obsidian patterns, that smile looked more wicked than Willowbud's most sardonic grin. \n\n\"Thank you, Sister, for your blessing,\" she said, and left the wagon. I scuttled from the crack in the wood, and watched as Jade fell in lockstep with Julia, her head swiveling, her hand on her sword. She stopped after about fifty paces, then turned and faced the encampment while Julia eased herself onto the sand, and surrounded herself with a dome of black flame. Jade seemed wholly unnecessary as a guard; there wasn't an animal alive that could get through that. I turned back to the inside of the wagon, and observed Justina's corrupted mother. \n\nTera was at her stove, humming to herself as she prepared something in a pot. She selected various powders and herbs from her belt, and measured them with a glass vial before adding them to the mixture. After removing the pot from the stove, she carefully decanted the liquid into a beaker, then dropped the beaker into an ice bath. She procured an opium pipe from the counter, and plucked the crystallized concoction from the ice bath to fill her pipe. After taking a deep inhale of the thick blue smoke, she turned right toward me, and blew it in my face. My legs locked, my mandibles froze, and my abdomen curled in on itself. Tera plucked me from the crack, and held me before her glimmering black eyes. \n\n\"A yellow-backed spider,\" she mused. \"One bite causes instant paralysis, followed shortly by cardiac arrest. I've used your kind on a few jobs. Very effective. Very discrete. Perhaps you would've dealt the deadly blow if you actually were a yellow-back spider, but alas, you forgot to mask your scent, you stupid, unfortunate soul.\" She selected one of my legs between her thumb and finger. \"Shape-shifters have such a unique odor. They always leave traces of the things they were before. How many yellow-backed spiders have come into contact with eagles, owls, dragons, lizards, and...\" she sniffed me, \"...horses? Ah, but that doesn't matter. I'm actually much more interested in how you came into contact with Bianca Blackwing; I'm even more interested in how you came into contact with my daughter; but I'm the most interested in how you came into contact with Brandon Sorensen.\" \n\nI just stared at her with my compound eyes as her purple lips broadened into an evil grin. \n\n\"Now, who would have the balls to assassinate the Heat Bringer? I've roamed the circles of the world's greatest killers, and the only one who would even think to attempt it would be... well, me. But I seem to remember this one person... a resourceful girl who once held a knife to Willowbud's throat and lived to tell the tale; a brave soul who once rescued Julia from Corruption when everyone else wanted to run away. I was very curious how Diamond managed to get her body back. It was just left in the bottom of Brandon's tree with no one inside of it, stored away like clothes that would never be worn again. But you know what really gave you away?\" Her eyes gleamed at me. \"No matter what shape you take, there's no washing the distinct smell of Towerhead cow shit from you. Oh, Angela, Angela, Angela... you were supposed to race to the Pit and rescue Willowbud from Corruption, but I guess you took a detour to your brother's dick along the way. I approve. So he's alive then? That's interesting.\" She eased back into her chair. \"That's very interesting....\" \n\nShe idly played with my paralyzed mandibles, and chewed on her lip. \"What in the world do I do with this information? If I tell Julia, she'll go to Ofan and kill and everyone there. Maybe that will give me some short-term brownie points, but it doesn't solve the problem that I'm one misstep away from the crazy bitch crucifying me above an open flame. I need options.\" She eyed me curiously, grabbed one of my legs, and ripped it to no avail. Tera chuckled to herself. \"And Brandon made you indestructible, of course. You're probably immune to every poison, venom and disease known to man, which makes enslaving you rather difficult, and killing you even harder. Fortunately for me, Brandon didn't make you immune to drugs. Hmm... too many variables. The best plans have the fewest steps. Sometimes, the best plans have no steps at all. Roll the dice, and see where opportunity takes us.\" \n\nShe reached into her belt, selected a vial, and splashed a droplet of it upon my face. My arachnid limbs ballooned and transformed, and in less than a second, I was in my normal body, paralyzed and naked in Death Kiss's clutches. She eased me onto the cushions that decorated the floor, and ran her eyes hungrily over me. \n\n\"Well, aren't you a pretty little peach?\" Tera whispered. \"My god, Brandon did his work on you. You're a teenage boy's wet-dream come to life.\" She parted my legs, and smirked down at my nethers. \"I see you've been busy. Congratulations. Let me just see...\" she forked her fingers, and pushed two of each into my ass and pussy, \"...ah, but still nice and snug, hmm? And so responsive; you're already getting so wet for me.\" Tera crawled atop me, and stared into my frozen eyes. \"I feel like a yellow-backed spider preparing to feast on her paralyzed prey. What a fun little experience this is for both of us.\" \n\nShe pushed her fingers slowly in and out of me, my pussy lips gripping her knuckles on the way out, my anus popping with each extraction. She opened me and closed me, made me feel the full penetration of her fingers against my coalesced aperture and blushing slit, and then pushed inside once more, rubbing against my trembling walls, kneading my inner-flesh and igniting every nerve-swathed surface. I could do nothing but watch her, every part of my body frozen but my lungs as they sucked and pushed air with greater velocity to accommodate my racing heart. Tera lowered her mouth to my nethers, lassoed my clit with her serpentine tongue, and stretched it until her plush purple lips wrapped around it. Her black and violet eyes swam with amusement, reflecting my petrified face that could not emote the unbearable pleasure that coursed between my thighs. The feeling built and built, growing more intense until it was exploding inside me, and my paralysis only made my torment greater! As sensations washed through me, I could only lie there and endure them, unable to expel them with my thrusting hips, unable to dance in congruence with their waves. I soaked Tera's hand with my release, and she smiled with satisfaction, and licked me clean. \n\n\"What to do, what to do....\" Tera sighed, finishing her salivary polish of my anus. \"With opportunity there is always danger, and I don't see the profit in telling Julia what I now know. Not yet, anyway.\" She rested her chin on my pelvis, and smiled up at me. \"She would roast you slowly, Angela. You'd be screaming for days as she turned you over a spit, and sung joyful hymnals to celebrate your cleansing. Do you understand what kind of evil you're dealing with here? It's the worst kind. It's the kind that thinks it's doing good. No, you're no use to me as a rotisserie, as fun as it might be to watch.\" \n\nShe contemplated me for a while, then sat up, turned off the muting charm above the door, and sifted through her belt. She procured another vial, and hovered it over my lips. \"This will cure your paralysis,\" she said, \"if you make a move on me, I'll scream, do you understand?\" She waited as though anticipating a reply, then dipped the potion into my mouth. My limbs unlocked, my jaw opened, and my tense muscles became gelatinous. Tera opened the window beside her, and poised her mouth toward it. \"In a desert of nothing but orcs and goblins, I can smell you from a mile away, Angela,\" she whispered. \"You can't sneak up on me. If I catch your scent again, I'll tell Julia everything I know.\" \n\n\"You're letting me go?\" I squeaked. \n\n\"I need a backup plan in case shit goes south,\" Tera peered out the window, and scanned the area. \"You've given me several escape routes. Every good assassin needs an escape route.\" She smirked down at me. \"I'm afraid you don't have much talent for this business. Leave it to the professionals. Now, get that sexy little ass out of here.\" \n\n\"Come with me!\" I hissed. \n\n\"Why the fuck would I do that?\" she sniffed the air, and sighed. \"Ah... orcs. Their musk is so thick that I can smell them miles before I see them, their cocks are so big that they rival my arm, and their aggression is so great that they've been known to kill lesser women with just the impaling force of their thrusts. There are millions of them in the Gratoran Desert, and Julia is going to make sure they're all in one spot. There's just so much more fun to be had here. That sounds infinitely more interesting than babysitting your stupid brother in a treehouse.\" She kicked at me with her heel. \"Now get the fuck out of here before I change my mind.\" \n\nPostlude: Blowing the Embers \n\nARBITRUS GEN \n\nI bolted through the astral plane as fast as my little legs could carry me. I splashed through the river, soaking myself in the cold water, sending violent ripples across the calm surface. In the distance, I could barely see the regal fa\u00e7ade of my iron gate. I looked behind me, and there was nothing but black jungle. I didn't slow down. I sprinted through hundreds of yards of water, keeping my head down, focusing only on getting to my destination as fast as possible. What if she got there before me? I'd left my realm unattended like a goddamn fool! An untethered creature could just walk right in and... but no... no, she was a Sentient, a slave of an idea! She could do nothing to me outside of her wretched lair! Guilt was a liar. \n\nI slowed down, and rested, catching my breath. As the still astral air chilled the water soaked into my cloth, I began to feel the irrational fear creep back into me. She was out there, and she was coming. All I could do was run. Run, run, run. My feet splashed in the water, sprinkling my dripping beard and misting my eyes. My distorted reflection raced below me, the flash of my terrified orange-backed eyes sometimes connecting between the turbulent ripples. I dared a glance up. I was only fifty feet away. I charged across the distance, every footfall seemingly taking an eternity, every splash of water sounding like a trumpet in the desolate void. She was coming for me. She must've been right behind me already! I dove for the gate, reached out, snatched the latch, and hurled myself through it. \n\nI landed on soft grass. Birds chirped pleasantly, the wind whistled soothingly, the tall grass rustled excitedly. I looked up, and let out a great sigh. The realm of Purity was a vast mountaintop valley. Pleasant rolling hills tumbled upon each other, each one carrying some sumptuous crop already ripe for the picking. Castles were nestled into the hovels between colliding hills, and two immense mountain ranges flanked either side of the valley, enclosing it behind infinite walls of rock. \n\nCorruption sat down beside me, crossing her legs and pondering the view. I was too exhausted to scream, and too terrified to move. She leaned back, and let the wind blow through her black hair. Her blazing white eyes scanned the great coalescence of hillsides, and she smiled without looking at me. \n\n\"This place is beautiful, Arbitrus,\" she said, her voice soft and drawling, infinitely seductive, infinitely terrifying. I looked upon the patterns that wreathed her body. They were very familiar to me\u2014I had put them on John so many hundreds of years ago.\n\n\"What are you?\" I whispered.\n\nShe shrugged. \"It doesn't really matter.\" \n\n\"Why did Guilt call you the architect?\"\n\n\"Who is Guilt?\" \n\n\"She was you.\" \n\n\"Ah, the shell of my memory endures, I see. Yes, I suppose she would call herself the architect, but I don't build things, Arbitrus.\" \n\n\"Why are you here?\" \n\n\"I am here to speak to another god,\" Corruption set her eyes upon me, and a chill ran through my body. \"There's an idea I have running through my head,\" she rolled her finger next to her temple. \"Binding works by knotting two souls who have a great affinity for each other. Tethering works by knotting one soul to an idea it has a great affinity for. You purified with fire, and so Furok could tether you to the sun. You were sent here to kill Wrath, correct?\" \n\n\"Yes.\" \n\n\"Why didn't it work?\" \n\n\"The tether stripped my powers.\" \n\n\"I see. That is a problem.\" She scratched at her chin. \"I can liberate the minds of tethered ones and untethered ones, but I cannot do so to Sentients. I will have to kill these damnable abstractions somehow, but I can't take Julia with me.\"\n\n\"I can't help you!\" I said quickly. \"I'm no use to you at all! I can barely light my own pipe!\" \n\nCorruption ignored me. \"I wonder what Petranumen would've done?\" she pondered. \n\n\"There is no such thing as Petranumen!\" I croaked out. \"There never was!\" \n\nShe smiled broadly. \"Ah, you know more than you let on. Where did you learn these forbidden histories?\" She touched the crescent symbol that rested on my chest. \"And how can you still be so na\u00efve when you know so much?\"\n\n\"I won't die a blasphemer!\" I squeaked. \n\nHer smile grew wider. \"I'm not here to kill you, Purity. I'm here to conquer death.\" She looked up at the astral suns, and narrowed her black and white eyes. \"But death would never need conquering if life itself didn't hold so many mysteries. Even when I sifted through the vast wreckage of Wisdom's realm, I could find no answers to the question of the spiritual plane.\" \n\n\"You won't find them with me!\" \n\n\"I'm just thinking out loud. That's what we astral projections do here, in this, the plane of thought,\" Corruption chuckled. \"What is life, hmm? The flesh feels it, the mind thinks it, but the soul is it. The power a Creator uses comes from the plane beyond this one, but what are Creators really? Just a random occurrence of the universe's clockwork? No, no, no. I have a theory, and I think it is quite brilliant. Would you like to hear it?\" \n\nI just stared at her, wondering through my dumb terror what awaited me at the end of this soliloquy. \n\nShe leaned in, and whispered, \"When the planes were one, the Elementals lived for epochs. When the planes split, the dead departed to the spiritual plane, and Vitanimus seeded the growth of society. The population exploded. Heaven was created for a millennium, and it housed the souls of the dead before the blood corona sliver. Then in the blink of an eye\u2014in this timescale, anyhow\u2014the Creators came. Why? Well, I'll tell you what I think. Energy is finite. The spiritual realm has an occupancy limit. When it overflows, it ejects a few souls back to earth, and opens the taps to let them drain away the excess. That's why this batch of Creators came only two-thousand years after your generation; because you and Droktin\u2014the overachievers that you were\u2014killed more people than have lived and died since, and so the spiritual plane was filled to capacity. A few thousand years go by, the dead trickle in, and then the Creators are shot back into existence earlier than ever.\" Corruption relaxed onto the grass with a satisfied smile. \"Yes, I think that explains it quite well. When I conquer death, it will mean the end of Creators for all time. What do you think about that?\" \n\nI sat and watched her, waiting for some indication of what was to come. She didn't really care about my answer, or lack thereof. She just stared out at my vast realm, and pondered it. ",
        "\"Petranumen came here when she saw that a realm had been formed in Purity. She put an idea in your center\u2014a bible\u2014in the hopes that she could plant her lie into your origin. I see that you took to it more than Wisdom did. Perhaps it does not define you, but it still cages you.\" She looked at me with her obsidian gaze. \"Mankind's mind should be uncaged. You have put up walls around an idea you don't understand. Until both the astral and earthly planes are unfettered from the bonds of abstraction, the world will never know freedom.\" She studied my face like a clinician, impassive and thoughtful. \"There are many tethered beings, but you are without a doubt the most pathetic. Perhaps you lack the pretense I so despise in the others, but they at least made something of their self-imposed personifications. You used to be the most feared man on earth, and now you're a cockroach clinging to life's putrid underbelly. Even when you were a god, you were but an insect wearing giant's clothing.\" \n\n\"Have mercy!\" I blubbered. \n\n\"Did you ever show mercy, Sun Man?\" Corruption asked. Before I could answer, she grabbed me, dragged me into her embrace, and plunged her tongue into my mouth. Blackness flowed in me, tasting of putrid bile. It flowed from my nostrils, infected my sinuses, scoured my throat like vomit being poured into my gut. I screamed, I shrieked, I ripped and tore at her, but she held me effortlessly, and drowned me in her acid. The mountains of my realm crumbled, the valleys rose, the hills collided upon each other. A jungle emerged from the grasslands, the vines snarling and binding, the great trees fighting for superiority of the heavens with their branches clawing upward. The walls were consumed by the foliage, and they rotted away like wet timber, joining my realm with the vast dark jungle beyond. I was no longer Purity. I was no one at all. \n\nExcerpt from Dr. Siam's thesis, The Broken Bridge, page seventy:\n\nEnergy is always conserved. These are the laws of thermodynamics. If you eat a delicious tuna sandwich, your body will take the calories, deposit the carbohydrates into your fat cells, the protein into your muscles, and the fiber into your digestive tract to aid in the tuna's transformation from fish into poop. When you weigh your feces (as I do every morning), you will find that their mass is far less than the tuna you ate, and that is because the rest of the tuna has been converted to biological processes. The sum of all the energy converted to feces, muscle, fiber and fat is exactly the sum of all the energy that was present in that tuna before you ate it. \n\nYou cannot break these laws, and so the question is then posed, where in the good fuck do Creators get their energy from? The spiritual plane, obviously. The energy is taken from the spiritual plane, converted into an idea in the astral plane, and then made manifest (turned into poop) in the physical plane. Now, it is known that Creators have limits to their energy. If a Creator is unbound, then they will expend themselves quite quickly. If a Creator is bound, their access to energy is multiplied, but it is not infinite. Love is unromantically quantifiable. Just ask my ex-boyfriend. \n\nSo what is love? This is a question philosophers and psychologists have ruminated upon forever. Because of that, the only logical conclusion that can be made is that philosophers and psychologists are fucking morons, and if you listen to them, then you are clinically retarded. Love is a number. In the physical plane, the variables of romantic love are the novelty of sexual acts and the proportional level of each partner's attractiveness. The lower your attractiveness, the lower your expectations are in the bedroom, and the easier it is for you to be \"in love.\" Yes, that's right, reader: the person you are currently in love with is only physically in love with you because you perform the prerequisite sexual activities and have the right amount of attractiveness. That love could change very quickly if your partner raises their attractiveness, and you do not proportionally raise your willingness to do anal. So put down this book right now and buy a gallon of lube. \n\nIn the astral plane, love is the percentage of your self-perception that you devote to another person. In this regard, love and hate are very similar. The variables for love in the astral plane are: compatibility of prejudices, and the conviction of one's assertiveness. It doesn't seem so romantic, but logic rarely is. If two people have the same prejudices (we like this music, we like that food, we hate those people) then those two people are candidates for astral love, but the other variable is even more important. \n\nYour conviction to your assertiveness\u2014that is, your willingness to dominate the relationship with your own self-perception\u2014is paramount. A submissive individual will have a low conviction of assertiveness, while a dominant individual is the opposite. Indeed, opposites do attract. While it is imperative for astral love that both partners share the same prejudices, it is more important that one partner is as submissive as the other is dominant. Two headstrong people can still be in love, but one of them will inevitably compromise, or the love was never there. In that regard, the submitting headstrong partner was never as dominant as they thought they were. You, dear reader, might think that you are an incredibly dominant personality, but there is a very good chance that you are actually just an asshole. \n\nAnd so that brings us to the spiritual plane, the source of all life energy\u2014not just the Creator's energy. Spiritual love is very, very simple. Two spirits meet. The end. \"But, Doctor Siam, how is that possible? I meet spirits every day!\" No, you don't. If you have ever been in true love, then you have met exactly one spirit in your whole life. When I told you in the first page of this thesis that the broken bridge is not broken, this is what I meant. It is not a one-way avenue from soul, to mind, to body. Love is a journey in the opposite direction. You meet someone. You find them attractive. They do anal. It's fucking great. They like your music, they like your food, and they really hate orcs and goblins, and damnit, you do too! They argue with you, and that's OK. You like a good argument, just as long as they're the ones who say sorry first. They do. Your spirits touch. \n\nYour love has moved from physical, to astral, to spiritual. If you are a Creator, you have just transited the planes in the opposite direction, and created a beacon to the heavens from which you can suck your power from. No longer do you have to drag your energy through the molasses of your meagre astral ability; now, you can just take it from someone else.\n\n \n"
    ],
    "authorname": "White_Walls",
    "tags": [
        "orgy",
        "futanari",
        "anal",
        "incest",
        "mother",
        "daughter",
        "brother",
        "sister",
        "body modification"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-creators-ch-14"
}