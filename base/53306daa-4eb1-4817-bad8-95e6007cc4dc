{
    "title": "Mom's Home Movies Ch. 06",
    "pages": [
        "Thanks to Literotica member, Smoothed for his help with editing.\n\n*****\n\nBen and Tiffany were eating their breakfast at the table thinking about the shoot that day. Tiffany spooned yogurt into her mouth, holding it there, her mind was still preoccupied with the words Ben said the night before: \"I can't wait to fuck you tomorrow, Mom.\"\n\nShe swallowed the cold, thick mouthful of yogurt. 'Ben's cum was tastier,' she thought absently. Her face turned red and she made eye contact with Ben. As if he could read her thoughts, he quickly looked down. The mother and son were unusually silent this morning. A quiet excitement filled the air.\n\nTiffany refocused on their video project; a hobby that she now realized was rapidly becoming less of a project and more of a profession. She thought of Taylor's role in not just the recording process, but in scenes involving Ben. She decided having her as a part of their team was necessary. Although she was a little jealous of her and the relationship she had with Ben, Tiffany realized that having regular sex with her son would be taxing on her forty-two-year-old body, and she wanted more for him than to be sexually dependent on his mother. She envisioned a plan that would take some of the pressure off of her role as the exclusive female in his videos. This would free her up to write, direct, and publish more of their work from behind the scenes, at least part of the time. Not to mention giving her body a break, which she would definitely need, given the size of Ben's endowment and his sexual energy.\n\nAfter cleaning up from breakfast, the two went to their respective rooms to get ready for the scene they would shoot that day.\n\nTaylor was fifteen minutes early when she rang the doorbell. \n\nBen was already showered and ready for the scene when he answered the door. He greeted Taylor who was standing with her legs together, her arms clutching her white, leather bag in front of her causing her large breasts to push out away from her chest. She was smiling.\n\n\"Hey, stud! Are you ready?\" Taylor was vibrating enthusiasm for the work she would be doing with the mother and son.\n\n\"I am. Are you?\" Ben opened the door wide.\n\n\"You know it!\" Taylor grinned. \n\nBen gave the beautiful blonde a big hug as she stepped into the foyer, then took a moment to scan her gorgeous body. She was wearing a thin, red summer dress that rose to her mid-thighs with tan, leather sandals. Her toenails were a vibrant, deep-crimson color. She wasn't wearing a bra which gave Ben a clear view of the shape of her breasts as they seemed to burst out from her chest. She also sported prominent, hard nipples that poked out the fabric of her dress, which Ben appreciated greatly.\n\n\"How's mommy?\" She smiled.\n\nBen blinked, looking at Taylor, \"She's great! We were waiting until you came over to write the dialog.\"\n\n\"Sounds fun! Thanks for waiting.\"\n\nTiffany came out from her room and greeted Taylor with a hug, looking her over as she stood talking with the buxom twenty-two-year-old.\n\n\"Would you like some coffee, or something to eat, Taylor?\"\n\n\"Coffee would be great!\" \n\nTiffany poured coffee for them then sat down, anxious to get started.\n\nThe three sat at the kitchen table, drank coffee, and wrote the dialog for \"Annoying Neighbor Part 3.\" Soon after, they began getting the set ready. Most of the video would take place in the living room so Taylor and Ben were busy rearranging the furniture, checking the lighting, and getting the camera ready. \n\n\"Where's the tripod?\" Ben looked around the room. \n\n\"It's in the kitchen, but we won't need it. I'm the camera guy, remember?\" Taylor held up the camera, smiling. \"Let's see what having one hand-held camera can do on its own, what do you say?\" \n\n\"Okay by me.\" Ben was excited. He realized what a luxury it will be to focus only on the acting in this first video where he wouldn't be constantly wondering about camera angle and keeping his mom's face out of the shot.\n\n\"It will be a huge improvement not to have to worry about starting and stopping when we record won't it Ben?\"\n\nBen looked over at his mom. She was smiling as she watched Taylor walk around the leather chaise lounge they were going to film on.\n\n\"God, yes,\" he agreed.\n\nThe three walked through the scene before Tiffany disappeared to her bathroom to get in place for her first shot. \n\n\"Is everyone ready?\" Taylor was also the director for this scene, something else Ben had to get used to.\n\n\"Here we go!\" Tiffany entered the large, tiled shower and let the warm water pour over her naked body. Her excitement was building to a fever pitch as she imagined having her son's thick cock buried deep inside her again. Ben and Taylor walked outside. The scene would begin at the usual location, at the side gate of the house.\n\nBen held the camera for the first setting as Taylor followed behind. \n\nHe began to record.\n\n\"Wonder what that hot bitch is doing today?\" Ned's scratchy voice started the dialog.\n\nHis hand opened the latch, then the camera recorded his feet. Ben was wearing a white T-shirt, an old pair of khaki pants, and some worn-out sneakers; clothes that his mom had thought would be appropriate for the old man's character.\n\nThe camera recorded Ned going through the patio door that entered into the master bedroom. \n\nNed's voice became slightly softer as if trying to keep quiet. \"Ah, shower time for my sweet, big-tit vixen. How lovely.\"\n\nThe camera recorded footage of the hardwood floor and decorative rug in front of the bed. Ben intentionally made the camera a little jerky and unfocused. He centered the camera's blurry view to something that looked like a pink blob on screen, then slowly adjusted the focus.\n\nHe was perfectly zoomed in on Tiffany's soapy breasts. Her hands glided over them, spreading the bubbles all over. Her bare skin looked porcelain and wet. She turned from side to side, swiping her pointy nipples back and forth. She hefted her weighty tits up into her slippery hands and let each drop down with a jiggle. The see-through glass door provided a perfect view of Tiffany's voluptuous body. \n\n\"Damn, look at that,\" Ned whispered.\n\nHe zoomed out, careful to keep her face out of frame as he shot several minutes of her naked, soapy body. Tiffany made a show of getting her tits all slippery, then doing the same to her sexy, round ass. She made sure to bend and give the camera a good view of her pussy between her thighs. \n\nBen and Taylor looked on. Taylor reached for Ben's crotch as he filmed his mom showering, playing with his growing erection over his pants as she stood next to him. \n\nTaylor stepped away from Ben, as they needed the scene to continue.\n\n\"Shit. I've got to hide.\" Ned whispered, then turned around, causing the recording to jiggle, the focus returning to the floor as it filmed the hasty retreat. Rather than go outside, the camera showed Ned's feet and his bobbing erection as he walked quickly to the other side of the house, approaching the living room. \n\nAs Ned entered the living room, the camera showed the edge of one of the French doors that was open about halfway. Ben was still operating the camera, when Taylor, following close behind, slammed her hand on the wall behind him making a loud -BANG-.\n\nBen grunted as Ned. He spun the camera around then rocked it from the floor to the ceiling, suggesting that Ned had knocked himself unconscious by slamming his head into the edge of the door.\n\nBen paused the camera and handed it to Taylor. He stepped back through the French doors and Taylor filmed him from his chest down as he fell backward onto the chaise lounge.\n\nAs he flopped into place, his hard-on could be seen poking up beneath his khakis.\n\nTaylor left Ben on the chaise and returned to the bathroom to record Tiffany's part.\n\nTiffany had resumed her place in the shower, naked.\n\n\"Is he 'out cold'?\" Tiffany made air quotes with her fingers.\n\n\"Yep, now don't forget your pauses,\" Taylor reminded her, taking a spot in the corner of the bathroom.\n\nFrom the new angle, Taylor shot Tiffany, repeating her actions. She hummed softly as she rinsed herself, then toweled herself dry. Taylor held the camera steady and reached back to replicate the thud of Ned running into the door.\n\nTiffany was showing off her body as she put her red hair up into a bun when the sudden -BANG- of Ned hitting his head on the door in the other room surprised her. She grabbed a towel and held it to her chest.\n\n\"Heeelllooo? Is someone there?\" she called out.\n\nClutching the towel, Tiffany cautiously tip-toed from the bathroom into the living room, followed closely by Taylor as she recorded Tiffany's bare ass from behind. \n\n\"Oh my God. You've got to be kidding me!\" she spoke with a loud voice. She wrapped her towel loosely around her torso.\n\n\"Ned, you need to leave immediately or I'm calling the police.\" Her hands were resting on her hips in an expression of disappointment.\n\nTaylor was able to film Ben as he reclined on the chaise, focusing on the deep, restful breaths that he was creating to give the impression that Ned was asleep. \n\nShe panned the camera over to Tiffany's bosom as she moved closer to the unconscious man.\n\n\"Ned?\" As Tiffany moved closer, the towel slipped off her body leaving her naked. She left it on the floor as she moved to get a look at the unconscious old man.\n\n\"Hmm.\" Tiffany bent over as Taylor recorded her dangling breasts. She shook his arms as they lay sprawled out to his side, off the wide, flat chair. \n\n\"He's out cold,\" she said softly. \n\nTiffany's hand reached out to touch the prodigious bulge that had formed under Ned's khakis, then paused just before she made contact with it. \n\n\"I'd better not.\" She pulled her hand back. \"Ned? NED!\" She shook him by the arms again, no response. \n\n\"I wonder if he can feel this?\" She reached her hand out cautiously, this time pressing and rubbing his bulge with minimal force.\n\n\"Ned, wake up!\" she yelled. She slapped his erection trying to get his attention. Still, nothing from Ned.\n\nShe gripped his stiff pole with both hands through the fabric, this time forcefully. She continued to squeeze, rub, and shake him as if testing his hardness. \n\n\"God, he's so thick.\" Tiffany held his cloth-covered cock with her hands, staring as if in awe.\n\nTaylor wasn't sure that Tiffany was acting at all in that moment. She recorded Tiffany playing with Ben from an angle that gave the viewer an excellent shot of both her swaying tits and her hand fondling Ben's appendage. She was easily able to keep each of their faces out of view of the camera.\n\nTiffany moved her hands to the waistband of the khakis, unbuttoned and unzipped them, then started to ease them down Ned's body. She paused, clenching her hands together anxiously as if in fear she would wake him, then resumed her work until the top half of his cock was revealed. His shaft strained, thick and rigid in his shorts.\n\n\"Why is such an obnoxious man blessed with such a gift?\" she pondered aloud.\n\nHer grip tightened on the waistband as she continued to pull the trousers down, followed by his boxer shorts. Taylor recorded her tits shaking and rippling with her effort. Finally, Ben's heavy cock swung free of the waistband and arched to stand at an angle, throbbing a few inches off his stomach.\n\nTiffany finally got his pants down his legs, then carefully removed the old shoes off of his feet until his shoes and clothes were laying on the floor. \n\n\"I'm sure he won't mind if I...\" \n\nTaylor moved the camera from the side view to an angle looking down Ben's body from his head. Tiffany moved her body up the chaise so that her knees were to the sides of Ben's outstretched legs, facing him. Her throbbing wet pussy was pressed against her son at the meeting of his cock and his balls. She placed both hands around his thick shaft. \n\nTiffany settled her curvaceous, smooth, white body, now naked, above Ned's. Her spread pussy sat just behind the erect pole, gripped in her hands. She pulled the heavy beast up to where its base stood erect against her crotch and tummy. The top of his cock was situated just below the bottom of her hanging breasts.\n\nHolding him there, she felt her wetness spread over the bottom part of his dick and down his balls. She realized how deep his long member would poke inside her. Tiffany slapped his hard cock against her body a few times for effect. Taylor captured this erotic image from above Ben's shoulder.\n\nBen looked up to his mom who was making loud slapping noises using his cock to whack her stomach. She was looking at him with heavy, sexy eyes. Ben's cock throbbed and shiny precum spilled out slowly from his tip. He wanted to be deep inside her at that moment.\n\nTaylor loved how Tiffany moved on her son. There was a natural progression to her actions, as if she wasn't acting at all. She always seemed to know what she was going to do next, as if she had been thinking about her actions well before she executed them. Taylor realized that her arousal was becoming a serious distraction as she filmed the mother and son on the flat, leather chaise.\n\nTiffany lifted her body over her son's cock holding the shaft at the center as she ran its head back and forth against her engorged lips. She moaned as she combined her wetness with the precum that was trickling out.\n\nTaylor zoomed-in to Ben's thick, slightly pointed head as it separated his mother's labia. The reddish-pink glans now shiny and wet looking, quickly disappeared as Tiffany sat upon the staff. The camera recorded Ben's wide cock as it slowly penetrated his mother's body. 'My God, that's so sexy!' Taylor thought as she steadied the camera.\n\n\"Ooohhh!\" Tiffany cooed. \"So good!\"\n\nInch, by hard, thick inch, she lowered herself onto Ben.\n\nOnce she had settled herself down near the base of her son's cock, Tiffany began to focus, thinking, 'I'm fucking Ben again. I love fucking my son.' Her thoughts were out of character now, as she consciously used the pretense of making a movie as an excuse to give her son a good fucking.\n\nTiffany's naked body eased down, then back up on her son's dick, in awe of how full it made her feel. Since his head was off camera for the duration of the video, he was able to make eye contact with his mother. Tiffany met his stare and never looked away. 'I'm fucking you, Ben. I love fucking you.' At that moment, she wished he could read her thoughts.\n\nBen quickly discovered that the anticipation of having his cock planted deeply into his mom was making it difficult for him to hold back his orgasm. Her tight, but welcoming pussy was enveloping his dick in a way that gripped his shaft and intensified each penetration. She had him pinned down under the weight of her body and began fucking him on top for the first time. Now he was finally able to feel what it was like for her to be on top. He was getting fucked by his sexy mom.\n\n\"Oh, God. So deep,\" Tiffany sighed. \n\nIn that moment, Ben was reminded of the image, moments before, when his mom held his hard cock against her tummy. He imagined his cock, imbedded deep within her. The idea was so erotic for him that he almost came right then, deep inside his mother.\n\nLuckily for Ben, movement from behind distracted him.\n\nTaylor was gradually making her way around to Tiffany's back. As she moved, she paused to record extensive footage of her breasts as they swung away from her body in Tiffany's slow, but deliberate grinding rhythm. 'This is making me insanely horny!' Taylor thought as she captured every movement of Tiffany's sexy body.\n\nFinally, at the back, Tiffany remembered the plot and leaned toward Ben's head, lifting her hips for a better camera angle. This was Taylor's idea to get a more graphic visual of Ben's cock penetrating his mom in long, full strokes.\n\nThis striking image is exactly what Taylor caught on film. Tiffany's usually thick labia were stretch thin around her son's, wide shaft. Her strokes were slow and shallow with Ben's cock visibly churning in and out of her strained pussy. His length was streaked with Tiffany's shiny wetness.\n\nStill pumping Ben slowly, Tiffany became wetter in the realization that her expanded pussy was surrounding her son's wide cock in high-definition detail for the camera. A wet, squelching noise squished out of her with each down-stroke.\n\nKnowing the camera would be focused on his dick as he fucked his mom, Ben lifted his head up as Tiffany moved toward him, his face coming into contact with her soft, heavenly tits. Tiffany hadn't anticipated the position allowing for this exchange and enthusiastically swung her breasts into her son's face, lifting her body up and forward just enough for Ben's hungry mouth to suckle on one of her sensitive, extended nipples.\n\nTiffany's body jolted with Ben's aggressive mouth on her nipple. She was approaching climax faster than she'd expected and her mind wandered from the bounds of her character. \n\nForgetting the scene, and the recording, Ben lifted his hands up and grabbed his mom's tits, smashing them together in his face to enjoy the feeling of her abundant, soft cleavage. He moved his head back and returned to her nipples sucking on her left, then her right, with the force of a powerful vacuum. Pulling and coaxing each nipple from the areola, Ben ran his tongue around the tight flesh enjoying the way they felt. Sucking and smacking sounds came from his ravenous mouth as his tongue and lips surrounded the hard protuberances.\n\n\"OH, FUCK! BEN!\" Tiffany was instantly gushing wetness all over her son's cock. Her sensitive nipples seemed to connect directly to the sensations she felt in her pussy. \n\n\"Suck Mommy's tits, Benny!\" she yelled.\n\nTaylor looked up from the camera in utter shock as she heard Tiffany's dialog depart dramatically from the script. 'Oh. Oh! They're off the script...and the plot! What happened to Ned?'\n\n\"MmmmnnnnnMMMnnnmmmm,\" Ben moaned, his mouth full, as he happily complied with Tiffany's demands.\n\nTaylor watched Ben's head and arms come to life and maul his mom's heaving breasts. Tiffany was looking down, watching as she offered herself to her son. \n\n'That's not the unconscious Ned,' Taylor thought with a smile.\n\nRather than stop the scene, Taylor chose to take advantage of the opportunity. 'I'm getting this on video.'\n\nTaylor noticed a change in Tiffany's pace and posture. She was leaning into Ben and letting him suck her tits, humming and moaning at the treatment she was receiving. Her body was moving fluently, in erotic waves of pleasure. \n\nIgnoring the positioning of the camera, Taylor shot close-up footage of Ben's hungry, drooling mouth latching on to his mother's tits, noticing that her own were aching for attention as well. \n\n\"AHH!\" Tiffany sat up straight to give her breasts some relief from Ben's sucking. \n\nShe rolled her hips forward then back grinding her pelvis against the bottom her son's wide shaft. Ben's hands gripped her hips and encouraged her rhythmic grinding. Taylor slowly moved the camera's attention to their hips as Tiffany gyrated on her son's cock.\n\n\"Oh, yessss. Yes, baby. YES!\" Tiffany's rhythmic grinding became faster. Her body's movement concentrated on a forward spot where her clit made contact with his skin.\n\n\"YES! BEN! OH FUCK!\" Tiffany screamed as her pussy let loose a flood of wetness that poured down the length of Ben's shaft embedded in her hotness. \n\nTaylor circled back behind to record Tiffany's quivering cunt as she climaxed on Ben's cock again. Tiffany's ass flexed and relaxed repeatedly, as her pussy throbbed on Ben's shaft. Her cum ran continuously down his dick to a thin puddle forming between Ben's legs. \n\nTiffany wasn't done.\n\nBen's hands lifted her tits up on her chest and squeezed them rigorously as Tiffany moaned and began rising up and down onto his thick rod. \n\n\"Oh, Yes.\" Her voice lower and preoccupied, as if she was concentrating on the new movement. She was using her thighs to lift her body up as her weight remained on her knees straddling her son. ",
        "Tiffany fucked Ben, rising and falling on about half his length for a good while, looking down into her son's eyes the entire time. Her eyes then closed, and her brow furrowed through another wet orgasm followed by a faster pounding.\n\nTiffany's body slowed and was now sliding up and down nearly the full length of her son's cock. She was really working it. Loud, skin-on-skin slapping sounds filled the room; like someone clapping very slowly. \n\n\"UNG! UNN! AHH!\" She was riding the entire length of Ben's cock now as she gushed her hot cum onto his hard tool.\n\n\"OHH, GODDD! OHH, SHIT!\" Tiffany closed her eyes, paused, then increased the pace again. \n\nBen held his mom's breasts as her upward motion lifted her body higher up his shaft. Tiffany had her arms on the outside of her tits, straight down, with her hands planted on Ben's chest, bracing herself so she could drive her hips with her legs.\n\nTaylor couldn't believe the scene. Tiffany was fucking Ben hard and without reservation. There were times when she felt as though she were intruding in a private event, as if she wasn't supposed to be there at all. \n\nShe alternated shots of Tiffany's front as his thick cock disappeared, then reappeared into Tiffany's pussy, then moved around back to watch her ass bear-down on him from behind.\n\nAfter several minutes of fucking, and growing increasingly tired, Tiffany leaned forward with Ben's cock still embedded deep within her and kissed her son passionately. \n\nTaylor went back to record her ass as her cheeks separated and exposed her tight sphincter, Ben's cock was angled forward, trapped as if in a vise inside his mom. Her round cheeks visibly flexed and released as she moved.\n\nTaylor was waiting for the scene to wind down, moving back to catch the two lovers in their embrace, but was surprised to see Tiffany get up and flip a leg over into a reverse cowgirl position while keeping Ben buried inside. \n\nTiffany crouched over Ben, facing away from him, her hands now on his knees for support. She began rising and lowering her hips again while Ben's hands clamped onto her ass. Taylor moved beside the two for an optimal view of the new position. She loved how Ben's thick shaft connected their two bodies as Tiffany pumped up and down.\n\n\"FUCK ME NED!\" Tiffany yelled. \n\n'Ned? Is she trying to get back into character?' Taylor's thoughts reeled as she tried to imagine what Tiffany must be thinking and feeling.\n\n\"Take that dick, sweetheart!\" Ben used Ned's voice in reaction to his mom returning to character. \n\nTaylor continued to film thinking about how difficult this will be to edit later. \n\nBen thrusted his hips upward, synchronized with his mom's hopping body- his hands on her ass, then on the flat of her lower back as he pulled her down with each of his upward heaves. \n\n\"Keep that up young lady!\" Ned's scratchy voice rose above the din of Tiffany's slapping body.\n\nDespite her tired thighs and sore pussy, Tiffany increased her pace, slapping against her son's hips. \n\n\"OH LORD! HERE IT IS!\" Ned announced.\n\nTiffany could feel Ben was ready. She lifted her body from his cock and pushed her ass cheeks back so that his dick wedged between them, right down the middle. \n\nBen put his hands on the outside of Tiffany's cheeks and pressed them in around his thick shaft. He used his thumbs to press his cock further into her ass cleavage. This money-shot was Taylor's idea, as she knew from her angle beside them, she'd be able maximize the camera's exposure to Ben's cock.\n\n\"GAH!\" Ned grunted and trembled.\n\nHis arched cock stiffened and issued a thick cum-blast up the left side of Tiffany's back. The rich stream striped up to her shoulder blade, landing in a line, like a thin, white suspender.\n\n\"Ooooh, Ned!\" Tiffany cried out, feeling the warm cum on her back.\n\nBen pumped his hips and fired again, spurting semen up into the air. It landed in a thick splotch on her ass cheek, only to be joined by his next stream, then the next. He ground the base of his dick against his mom's body as cum continued to jet out of him. The thick liquid launched in arcs from Ben's tip, splattering onto Tiffany's back and coating her crack between her cheeks and both sides of her round ass. A miniature river of cum ran down her crack, smeared between Ben's throbbing shaft and her tight, pink asshole.\n\nTiffany wiggled her butt all around the spurting cock creating a sexy scene for the camera.\n\n\"MMMmmm, so warm,\" she cooed.\n\nTiffany leaned forward on all fours and Ned sat up, slapping her ass with his cock. He took the liberty of sliding his thick tool up and down her tight asshole wondering what it would feel like to penetrate her anally. He slapped her ass again and splashed the cum that had collected between her cheeks in a graphic, final shot.\n\n\"You're a naughty girl, Tiffany!\" He collected his clothes and the camera shows him quickly scurrying away.\n\nTiffany huffed in faux-irritation. \"Aren't you going to at least clean me off?\" She was standing with cum running down the length of her back and down her legs. \"You better hope my husband doesn't catch me like this!\" she yelled after Ned.\n\nWith that, Taylor stopped the recording and lowered the camera in both hands down at her waist.\n\n\"That was...just...wow. I've never seen anything like that before.\" Taylor's eyes were wide as she looked at Ben, who had just returned from exiting the scene from around the corner.\n\nTiffany was reaching around wiping the cum off of her butt. She arched her back and moved the towel as far up as she could to be sure she swabbed it all.\n\nShe looked over to Taylor, \"How do you think it turned out?\" \n\n\"How hard was it to keep her face out of the shot?\" Ben followed immediately before Taylor could speak. He grabbed the towel from his mom and finished wiping his cum off her back.\n\nTaylor blinked wide at the two, both standing naked and still breathing fairly heavily before her. \n\n\"Seriously? You don't remember totally breaking away from the script? You guys were all over the place, like you were just making it up as you went along.\"\n\nTiffany looked at the ground, her face red with embarrassment. \"Yes, come to think of it, there were a couple of times when I think I was saying Ben's name.\"\n\n\"That's not like you, Tiffany! You're normally so professional. I mean, don't get me wrong, the scene was ridiculously hot. Everything about it, but whatever it was, the dialog wasn't part of the 'Annoying Neighbor' series.\"\n\nTiffany looked over at Ben. \"Ben, would you mind giving us a moment?\"\n\nBen looked at Taylor, then his mom and shrugged his shoulders. \"Sure.\" He had a difficult time understanding exactly what Taylor was saying, his head was still spinning from the orgasm he had just moments before.\n\nBen took the camera and his clothes and went up to his room. 'I might as well start editing.'\n\n\"Let's sit down on the couch, Taylor.\" Tiffany wrapped herself in the towel that was now spotted and blotched with her son's cum.\n\nThe two women sat and turned to face each other. \n\n\"Taylor, I think you know enough about Ben and my situation to understand the uniqueness of the circumstances we are now in.\"\n\nTaylor tried her best to listen attentively, her pussy was gushing wetness, causing her to squirm. \n\n\"Absolutely, Tiffany. I've never seen anything so erotic and taboo as watching the two of you have sex... it's just so...hot!\" Taylor had a difficult time focusing on what the sexy woman was saying. She felt deprived after the graphic scene. Her body was aching for an orgasm.\n\n\"Well, it's a little difficult for me to control my impulses once the scene starts. What initially began as a way to help Ben out by being a part-time participant in his movies has now turned into something I can't control. I think we definitely need your help.\"\n\n\"What do you want me to do?\" Taylor separated her legs a little in an effort to calm her quivering pussy.\n\n\"Maybe, sometime in the future, you could begin recording a few scenes with Ben while I hold the camera? I have a few ideas in mind. This would help to keep things more professional and give me a chance to contribute to the project without acting in every video.\"\n\nTaylor held back a smirk, 'I don't think there's too much acting going on, sweetie!' She kept that thought to herself.\n\nTaylor reached out to Tiffany and placed her hand on Tiffany's smooth thigh in a sort of reassuring way. She felt a strange tingling in her stomach upon touching her skin and wanted to run her palm against the soft flesh all the way up to her crotch. This reaction caught Taylor off guard as she had never really had any sexual experiences with a woman before- but Tiffany wasn't your average woman and Taylor found her almost irresistible at that point. \n\nTiffany looked down at Taylor's hand and smiled awkwardly. \n\n\"Sorry.\" Taylor blushed, then reluctantly removed her hand. \"Tiffany, I would love to record some scenes with Ben, but I wanted to talk to Alex before I made any new videos. I just feel Alex needs to hear it from me and not see it on the website.\" \n\n\"Alex? You mean the one who cheated on you in Las Vegas? The one who took advantage of your skills and professional talent and drank himself into a stupor every day...the one who abandoned you?\" Tiffany cut herself short. \"I'm sorry. I have seen Alex's influence on Ben and I know what he's like.\"\n\nTaylor looked away. She knew that everything Tiffany was saying was true. \n\n\"Regardless, I would feel better if I spoke to him first.\" Taylor knew Tiffany had a point. Alex was a letch, but it didn't change the fact that she needed to talk to him, if for no other reason than to ease her own conscience.\n\nTiffany regretting saying what she did about Alex after seeing Taylor's reaction. She decided to change the subject.\n\n\"Why don't we see how Ben is coming along with the editing?\" Tiffany got up and re-wrapped the towel around her torso. \"I'll be up right after I rinse off and change clothes.\"\n\nTaylor was anxious to see the video. She knew she was good with a camera, that part didn't worry her so much, but she was concerned whether there was enough of the recording to salvage after the edits. She had never experienced a thrill quite so intense as to see Ben and his mom having sex. She wondered if there was a way to have her own collection of the pre-edited footage from their videos, so she would be able to see Tiffany's face.\n\nTaylor knocked on Ben's open door and entered his room. \"How does it look?\" \n\nBen gave Taylor a wide-eyed, shocked look. \"Jesus.\"\n\n\"What?\" Taylor plopped down next to Ben on the love seat and looked at the screen.\n\n\"It's just... I don't know. It's good. It's really good.\" Ben was reviewing the movie in 2x speed as he continued.\n\n\"I thought it would have to be scrapped. That there would be too much out of character dialog, accidental footage of mom's face, you know, that sort of thing. But this is incredible, Taylor.\" Ben looked at her with a new sense of awe. \"You're an excellent camerawoman!\"\n\n\"Oh good!\" Taylor was delighted, \"Thank you! So, you think we'll be able to edit without hurting the scene too much?\"\n\n\"There are a few parts where my mom goes off script and calls me by my name. I can just mute the audio here and there without much problem. You did such a great job with the camera work that mom's face is out of nearly every shot. There's not all that much editing to do, really.\"\n\nTiffany had walked in the room listening to the conversation. \"How wonderful! Good job, Taylor! I thought we would have to re-shoot that video.\" Tiffany held up both hands for a high-five. \"Go team!\" They all laughed.\n\nBen finished preparing the video and uploaded it to Hot Amateurs. While on the site, he saw that their videos had made them a little over thirty thousand dollars. He would wait until he was alone with his mom before announcing the good news. \n\n\"Okay, you two. I'm going downstairs and lay down for a bit. Feel free to fix yourself something to eat when you get hungry.\" Tiffany smiled and ruffled Ben's hair, then leaned down and kissed Taylor on the cheek and whispered, \"Don't do anything I wouldn't do.\"\n\nTaylor laughed and was immediately reminded how horny she was after filming the hot scene. \"Okay, Tiffany, I won't!\" She winked.\n\nThe moment Tiffany was downstairs, Taylor moved on Ben.\n\n\"I'm so horny,\" she whispered. She took Ben's hand and guided it between her legs. Ben became excited when he discovered that she was panty-less. \n\n\"Wow! You're wet!\" Ben rubbed the first three fingers of his hand over Taylor's mound causing her to chirp with excitement.\n\n\"Of course, I am! I just watched your mom give you the fucking of a lifetime right before my eyes.\" Taylor giggled, thinking back to the hot scene.\n\nShe shook her head as if to refocus on Ben. \n\n\"I need you inside of me.\" Taylor got up and pulled her dress over her head. The look on her face made it clear to Ben that he had little choice in the matter. \"It won't take long. Just take your pants off and sit back.\"\n\nHe quickly complied and sat bare-assed on the love seat. Taylor wasted no time moving to straddle him. She reached her hand under her body and lined his cock up to her wet pussy.\n\n\"God, I need this, Ben,\" she whispered.\n\nTaylor let out a gasp, then a moan as she slotted Ben inside her and lowered herself down onto his long, wide shaft. She felt her pussy stretch wide to accommodate him.\n\n\"Ohhh. Mmmm. Yessss.\" She closed her eyes as she filled herself with Ben's cock. \"You're hard as a rock!\" \n\n\"I'm ready again. It was hot having you film Mom and me, Taylor.\" Ben surrounded the outside of her breasts with his large hands and pressed them together causing her hard nipples to pop out and point forward.\n\nTaylor pulled Ben's head in to her neck and began grinding on his erection. She closed her eyes and thought, 'Tiffany had this cock in her just thirty minutes ago.' \n\nBen was surprised at how wet she was. He realized how difficult it must have been for Taylor to have watched the scene without being able to satisfy herself.\n\nTaylor was smashing herself onto Ben's cock in a hard, grinding motion. She knew he had already had more than enough stimulation earlier, so she focused on satisfying her own needs. \n\n\"Nnnnn! Oh, Bennnn!\" Taylor's voice was high-pitched and needy, a sign to Ben that she was already getting close.\n\nAs if on cue, a warm gush flooded Ben's groin, the evidence of Taylor's climax.\n\nBen tried to lean back and penetrate her with more control, but Taylor pulled his face back into her bosom. \n\n\"Just...wait, Ben.\" Taylor slammed her pussy down onto Ben's stiff rod repeatedly\n\nTaylor's sex pulsed around Ben as she trembled through another orgasm.\n\nWhen Taylor relaxed slightly, Ben took the opportunity to thrust himself upward causing Taylor's body to shake. He gave her several, deep, spearing thrusts, and pulled her down to get himself deeper.\n\n\"AAAAHHH!\" Taylor's body tensed, and she slapped her hands weakly against his chest, unable to speak for a few moments.\n\nThen her body went limp as she panted into his ear, resting her arms on his shoulders.\n\n\"Oh God. Thank you! There's no way I could go home without having an orgasm after that shoot.\"\n\n\"I'm glad. There's no way I can cum yet, so...\" Ben made a straight-lipped pout.\n\n\"Yeah, well, I don't exactly feel sorry for you!\" Taylor teased. \"You completely covered your mom's ass with that huge load,\" she tickled his ribs, \"you little motherfucker!\"\n\nBen laughed thinking how accurate the crude nickname actually was.\n\nTaylor dismounted Ben and dressed. \"I'll just keep my camera here. No use bringing it back with me. I have more to pack back at the condo. Alex's mom is going to call later, and I should probably be home for that.\" \n\nBen and Taylor said their good-byes and Ben returned to his room and jacked off to the video that they had recorded that day. He noted the small amount of ejaculate that he produced after his epic orgasm earlier. Looking down at his leg where he deposited his trickle of semen he said aloud, \"This is why I need to rest between scenes.\" He wiped the semen with a tissue and tumbled onto his bed for a short nap.\n\nThe mother and son spent the rest of the day by the pool, Tiffany writing in her purple notebook, and Ben listening to music and responding to messages and emails from the website on his laptop. He looked up from his screen. \n\n\"Hey, Mom? How should we pay Taylor? I was thinking that you and I have too many videos online to just do a three-way split. What do you think we should do?\"\n\n\"Maybe pay her per movie? Or split the revenue from the movies she's in?\" Tiffany looked up from her notebook and paused. \"I don't know, Ben. Now that I think about it, it sounds like it could get complicated.\"\n\n\"We may be better off paying her a one-time fee. Having a different fee for camera work than for acting.\" Ben decided he needed to speak with Taylor before giving the matter any more serious thought.\n\nBen watched his mom write in her notebook. \"Any new ideas?\"\n\nTiffany smiled an impish smile. The expression on her face was something Ben was only now getting used to. Growing up as Tiffany's son, he never saw the expression she now wore. It was the sexy, naughty smile reserved for a lover. \n\n\"Maybe.\" She giggled.\n\nBen was relieved his mom had taken over so much of the conceptual part of their videos. It was a relief not to have to think of ways to get his mom naked or persuade her to participate. The opposite was now true. Tiffany seemed to truly enjoy the entire process: developing the story, writing the dialog, thinking of the camera angles, participating. It was more than he could have ever hoped for.\n\n\"Well?\" Ben wanted to know what she had in mind. He noticed a pattern in his mom's sexual arousal. She was rarely ready for recording twice in one day where intercourse was concerned, so he knew that whatever idea she had would most likely be reserved for another day.\n\n\"I do have something in mind.\" She looked up, her eyes scanning her son as he sat under the veranda.\n\n\"Hmmm. You look like you have a good one. What is it?\" Ben walked over to the pool chair his mom was reclining upon and sat on the edge.\n\n\"It's not a series, but it is more of a full-length video; a lot longer than the others. Want to hear it?\"\n\nBen pretended to grab her notebook. \"Give me that thing!\" he teased.\n\n\"Okay, but wait until I tell you the entire plot before you say anything. Agreed?\"\n\n\"You got it. Go ahead, Mom.\"\n\n\"Before we talk about the plot, I wanted to explain the process. Instead of shooting three videos with three intercourse scenes, we shoot all the scenes as part of a single movie. We can shoot one part with you having an orgasm, then the next day, shoot another part, and so on until all the scenes have been shot. In some cases, we will record at the same time each day wearing the same clothes to make it look like a real-time sequence.\"\n\n\"That sounds interesting, but do you think we'll get more money from the single, longer video rather than releasing it as separate parts?\" Ben was thinking that it would be easier to sell three, twenty-minute videos for twenty dollars each than a one-hour video for sixty dollars. He also knew there was definitely a limit to what people would spend on a single video. \n\n\"That's not why we're doing it this way, Ben. I want to try this new approach as an experiment. It's not all about money, you know.\" \n\nTiffany looked up from her book to gauge Ben's reaction. His comment made her realize that this was not about selling videos for her. This was Tiffany's sex life. This was where her sexuality had taken her. Her train of thought wandered further to the realization that her writing the plot and script, her visualizing the scenes, then watching her fantasies come to life before the camera was driving her desire to make more movies. Tiffany became excited in the knowledge that any sexual thought she found arousing could make its way into her notebook and eventually take to life with her son. No, this wasn't about money. This was far more complex than just selling videos. This was who she was now. ",
        "Tiffany forced herself back from her thoughts to listen to her son's reaction.\n\n\"...Experiment. Okay. Sure, Mom. That sounds good. So, what's it about? Will we need Taylor?\" \n\n\"Yes, and it's a bit complicated. Ready to hear the idea?\"\n\n\"Yeah! Go ahead. I won't interrupt.\" Ben moved, sitting in the chair next to his mom to get more comfortable. He wanted to take his bathing suit off but decided against it. In fact, he chose to look away from his sexy mom in her miniscule white bikini, so he could better concentrate on her idea.\n\n\"It's a mother and son video called 'The Jealous Mother'. The story is about a mother who hasn't had a romantic relationship with another man in years and becomes overly protective and subconsciously attracted to her son.\"\n\nBen listened carefully. \"Okay.\"\n\n\"It's a different sort of story that progresses slowly. The camera briefly shows the mom catching glimpses of her son as a man, she notices bulges and new muscles, that sort of thing. Anyway, one day, she catches him making out with his girlfriend...\"\n\n\"Taylor?\" Ben asked.\n\n\"Right,\" Tiffany continued, \"and she confronts him that night claiming that a nineteen-year-old girl doesn't know how to kiss properly and that she doubts his girlfriend knew what she was doing. So, she convinces her son to let her teach him how to kiss.\" \n\nBen liked the idea. He didn't feel like he could ever kiss his mom as often, or as passionately as he wanted to. This would be the perfect opportunity for more kissing. \n\n\"Interesting. So, what do we do about hiding your face, Mom? You can't have a blurred-out face on a make-out scene like that. It would look...\"\n\n\"I know, I know, it would look weird. And I'm proud to say that I think I have a solution to the whole blurred-out face problem.\"\n\nBen was completely enthralled by his mom's claim. Not being able to show her face was becoming a real pain in the ass.\n\nShe continued. \"I was thinking a high-quality blonde wig and a pair of designer glasses with clear lenses. I could also wear my makeup differently.\"\n\nBen thought about the idea. He liked it. In fact, it was brilliant, but he needed to see his mom in her costume before he would feel comfortable about recording scenes that showed her face.\n\n\"Do you even have a wig or glasses for that matter?\"\n\n\"Not yet, but we can research them online and order a couple of wigs to be delivered. We can go to the eyewear store and pick out a pair of glasses.\" \n\n\"Okay. So far so good. Continue.\" Ben leaned back in his chair and crossed his hands over his stomach.\n\n\"A couple of days later, she comes home from work and catches the girlfriend giving her son a blowjob. Again, she watches from the safety of the other room and later confronts her son. This time she claims that a girl that young doesn't have enough experience to perform fellatio properly on a man so well endowed.\"\n\n\"Okay. I see where this is going. I like it.\" Ben smiled, getting excited at the thought of being serviced by both Taylor and his mom in the same video.\n\n\"We will need to space-out the scenes to allow for your semen to build-up for the...\" Tiffany's eyes moved to Ben's crotch.\n\nBen couldn't help but smile. His cock throbbed in his shorts.\n\n\"...you know,\" Tiffany continued, \"the 'money shot'.\" She moved her eyes back to meet Ben's, reluctantly.\n\n\"So, the recording will take several days.\" Ben observed.\n\n\"Yes. It will have to. I think maybe four days.\"\n\n\"Okay, keep going.\"\n\n\"She gives her son a very enthusiastic and verbally narrative blowjob. The son begins to see his mom has a point but is feeling torn because he loves being with his girlfriend too. The jealous mother is trying to split the two up in order to have him all to herself, but the son won't go for it. So, she has to try harder.\"\n\n\"Like a sexual competition?\" Ben asked.\n\n\"Exactly. A couple of days pass, and she hears them having sex in his room.\"\n\nBen could see where his mom got the idea for the story from. He surmised it was the product of her own first-hand experience watching he and Taylor the other night in his bedroom. 'Could mom be jealous of Taylor?' he wondered.\n\n\"The next night, she wears some incredibly sexy clothes after dinner...\" \n\nTiffany paused as Ben interjected, \"She should probably increase the sexy clothes as the video goes on, don't you think? Starting off conservative and gradually revealing more skin, and tighter clothing day-by-day?\" Ben could see how this could be a full-length porn movie. In fact, it would have to be for the idea to work at all.\n\nTiffany scribbled in her notebook, then looked up and off into the distance. \n\n\"Great idea! The story could track the mother's transformation from a stuffy, sexual conservative to a total slut for her son.\"\n\nA twinge of arousal swelled inside Tiffany in that moment. The words, \"total slut for her son\", echoed in her mind. Even if her story idea was an embellishment, her real-life sexual situation with her son was running on the same course. Was she becoming a total slut for her son? She didn't let herself answer that question. So, she thought it best to stop with her description of the rest of the video for the time being.\n\n\"That's, um...that's all for now. Let's research wigs when we get inside.\"\n\nBen sensed Tiffany's reluctance to continue with her description of the story. Their own very recent personal story was wrapped up in this new video idea in a huge way. He could only hope she wouldn't back out of this new project as he thought it was an excellent idea.\n\nBen and Tiffany looked together at several websites that sold wigs while at the kitchen table.\n\n\"I think blonde, don't you?\" Tiffany looked over at Ben.\n\n\"Yes, blonde. That's more like your personality than black or brunette. But I think it should be a style that is different from how you normally wear your hair,\" Ben offered.\n\nThey finally agreed on two wigs. One was a short, blonde bob style with light brown accents. The other was lighter blonde, longer, and layered in a style that looked very natural.\n\n\"Those are expensive! Over two-grand for a couple of wigs?\" Ben had never given a thought as to the cost of a wig.\n\n\"They're natural, human hair, so actually these are a pretty good deal. And if they work out, we can use these for all our future scenes and eliminate the need to blur or crop-out my face. We'll just need to be careful. You can make quite a mess and they are hard to clean, Tiffany half-kid her son, her eyes drawing down to his crotch once again.\n\n\"I'm messy? Did you see what you did to the chaise lounge this morning?\" Ben joked right back.\n\n\"Fair enough,\" Tiffany conceded.\n\nTiffany retrieved her pocket book then returned to purchase the wigs.\n\n\"Scheduled delivery is in two days. That should give Taylor enough time to talk to Alex about recording in our video. Why don't we go out for tacos at the taco stand? We can stop by the eyeglass store and see about frames.\"\n\nTiffany and Ben dressed and left for the evening. She let Ben drive. It was a beautiful night. A cooler breeze had moved through the area and Tiffany was reminded of a time when she and his father would take long drives in one of his sports cars from his dealership. She didn't miss Larry, but she missed the companionship they once shared. She looked over at Ben wondering if he could fill that role someday.\n\nAs they neared the store, Tiffany forced herself out of her reminiscing. \n\n\"I thought I would get more prominent frames, like dark black plastic or tortoise shell. What do you think?\"\n\nBen nodded. \"Yes. That would be a good way to disguise your face a bit. Good idea.\"\n\nIn the eyeglass store, Tiffany noticed that they had non-prescription, colored contact lenses.\n\n\"Hey, Benny. What do you think of these?\" She pointed to the case.\n\n\"Wow! Awesome idea! Get the brown ones.\" \n\nTiffany picked out some dark brown contacts and two eyeglass frames, one pair was black and rectangular shaped and the other was a tortoise shell color that were in a horn-rim style.\n\nThe technician would fit the non-prescription lenses into the frames while Ben and his mom went to get something to eat. \n\nAfter dinner, Tiffany was trying on the new glasses in the store's mirror.\n\n\"Wow!\" Ben looked carefully at his mother's face. \"I'm surprised how drastically they change your appearance. You've got a hot librarian thing going on.\" Ben could feel blood flowing into his penis and wondered if there would be a way to have sex with his mom later in the night.\n\n\"I do look different, don't I? We should have thought of this before.\" Tiffany turned her head from side-to-side trying to look at every angle of her face. \n\n\"I like the black frames better,\" Ben added. \n\n\"Me too, but the tortoise shell frames give a totally different shape to my face. I want those as well.\" Tiffany smiled.\n\nLater that night, Ben stretched out on his bed, tossing from one side to the other. He fantasized about going into his mom's room naked and getting into bed with her but decided she would probably refuse him. \n\nTiffany sat up writing in her purple notebook, laying out the scenes for the second half of the video. She desperately wanted to feel her son's cock deep inside her again, but felt she should hold off on having sex with him until later. What she and Ben had was special. She couldn't stop thinking about his cock, his body, his energetic and sexual nature. She never wanted it to become routine or have the exciting feelings she carried with her all day to dull in any way. \n\nBen and Tiffany went to bed that night horny for each other, despite having just had sex that morning. \n\nBen awoke the next morning to a text from Taylor.\n\n-HEY- IS THE VIDEO POSTED YET? -\n\n-I HAVN'T CHECKED-\n\n-OH-\n\n-HEY, MOM AND I HAVE A NEW VIDEO PLANNED. WE NEED YOU IN IT- \n\nBen hoped Taylor was serious about acting in their videos. There was a pause in the texting for a couple of minutes.\n\n-I TOLD ALEX LAST NIGHT. CALL ME.\n\nBen anxiously pressed Taylor's contact number. Hoping all was well.\n\n\"Hey, Tay. So, how did it go?\"\n\nTaylor cleared her throat, \"It was, okay. He's not wanting to be there, you know, in rehab. He thinks all he needed was to sober up and that he's fine to come back home.\"\n\nBen felt strangely nervous. He hadn't thought of the possibility that Taylor would go back to Alex.\n\n\"Ben?\" \n\nIn that moment he realized that he had been silently going over in his mind thoughts of Alex returning and Taylor giving him another chance.\n\n\"Yeah. I'm here.\" Ben paused again, not having anything else to say.\n\n\"I told him that I'm moving out and that I don't want to see him again. I also said I was going to keep doing videos on my own.\" \n\nBen smiled, then let out a loud sigh as he held the phone against his chest. He felt instant relief.\n\n\"How did he take the news?\"\n\n\"He didn't seem to care. He just wanted to be sure he was going to get half of our income from the videos we already made.\" Taylor sighed.\n\n\"How is that going to work exactly?\" \n\n\"I told him I would keep our bank account active so that he would have access to the money, but I already changed the Hot Amateur account password so that I have control over the videos. If he empties the account or takes more than his half, I will remove our bank information from the site and he'll get nothing.\"\n\n\"Wow. That's smart. Good thinking.\" Ben was impressed with Taylor's solution.\n\n\"I will set up a new video account if I want to do anything on my own so he gets nothing from anything I do in the future.\" \n\nBen nodded approvingly on his end of the phone.\n\n\"It feels great to have this off my back, Ben.\"\n\n\"I bet. Hey, I know this must be a lot to go through so if you want to take a break from recording videos...\"\n\n\"Are you kidding? Ben, I can't wait to move on and get started on my new life! Tell me about the new idea.\"\n\n\"It would be best if you came over. Can you?\"\n\n\"I can be there in about an hour.\"\n\n\"Great! See you in an hour.\"\n\nBen smiled looking at his phone. He felt this was the beginning of an exciting new chapter in his life. He couldn't wait to tell his mom.\n\n\"How about some coffee and oatmeal?\" Ben was sitting in his room at his desk, about to look at the website and the status of their latest video when he turned to see his mom in her kimono robe holding a tray. She smiled, looking full of energy, with her red hair in a bun and her deep, exposed cleavage.\n\n\"Awesome! Thanks, Mom.\" Ben closed his laptop and cleared a space for the tray. \"I spoke to Taylor just now. She broke up with Alex and can start appearing in our videos.\"\n\n\"That's great news, Ben!\" Tiffany felt relieved that Taylor followed-through on her promise.\n\n\"She'll be here in an hour.\" Ben began eating his oatmeal.\n\nTiffany sat on the love seat and watched Ben eat.\n\n\"Today, we can review the idea and if Taylor is up for it, record the first scene.\" Tiffany was still horny from the night before but decided not to act on her urges.\n\n\"Sounds good Mom.\"\n\nTiffany waited for Ben to finish and cleared his tray. She busied herself taking a shower and getting ready for the day.\n\nTiffany took the full hour to make her transformation to her new identity as the jealous mother. She took her time to brush her hair under the wig and attach it to the back with bobby pins. She applied her makeup, feeling herself growing more excited with anticipation and fighting the temptation to masturbate ahead of the scene. She wanted to be fresh for the camera.\n\nNext, she got into her outfit. The goal was to appear as a professional woman. Her top was a short-sleeved teal-colored blouse with one of her most supportive and conservative bras. She had a white skirt that came just above the knee and a pair of teal pumps that matched her top. As she adjusted her clothing in the mirror, she noticed how completely different she looked. The longer blonde wig she wore looked natural and her glasses and colored contacts gave her a completely different appearance.\n\n\"I'm unrecognizable as Tiffany,\" she remarked to herself. \n\nTiffany rounded the corner of her bedroom and sauntered into the kitchen where Ben and Taylor were making small talk.\n\n\"Good God, Mom! You look amazing!\" Ben stood up immediately and began circling his mom looking her up and down. \"The wig, the glasses, your makeup- you look completely different.\"\n\n\"I know! I can't believe it myself,\" Tiffany agreed.\n\n\"You nailed the conservative clothing, hell, you could go to church dressed like that,\" Taylor offered.\n\nWanting to get on with the filming, Tiffany reached for the camera. \"Are we ready?\" Tiffany held the camera up. \"Remember, Taylor, your name is Amanda for this movie.\"\n\nTaylor raised a thumbs-up to Tiffany.\n\nBen and Taylor would be in the seldom-used den sitting on the couch. Ben wore a pair of white soccer shorts and a blue V-neck T-shirt and Taylor was dressed in her red shorts and white tank top. The shot would be from Tiffany's point of view, walking in the house from their garage. Her dialog would provide the necessary background to the first scene. \n\n\"Ready!\"\n\nTiffany handed the camera to Taylor who recorded Tiffany closing the door of her SUV and walked into the kitchen door from the garage. Once inside, Taylor handed the camera over to Tiffany and got into place on the couch next to Ben.\n\nAfter closing the garage door, Tiffany recorded her path from the kitchen door to the garage, through the kitchen, and down the hall to where she could see the couch in the den.\n\nShe narrated the scene as she recorded. \"I'm about at my wits end. No sex in three years. I can't take it anymore. I'm wet almost all the time. It's all I can do not to jump the plumber or the cable guy when they come to service my house. I feel like a hormone-riddled teenage boy.\"\n\nThe camera recorded Tiffany placing her purse and the mail on the kitchen counter and removing her heels. She began sorting through the mail as she stood in the kitchen.\n\n\"Junk...junk...bill...\" Tiffany looked up as something caught her attention, raising the camera.\n\nOn the couch in the den, Ben and Taylor were passionately kissing.\n\n\"What in the heck?\" Tiffany held the camera steady as she crept across the hallway toward the den.\n\nShe zoomed-in on the couple from a distance of about twenty feet and shot. They were intertwined like familiar lovers, tongues appearing as their heads twisted alternately from side-to-side. In a sloppy, noisy kissing session.\n\n'No, this is no good.' Tiffany thought.\n\n\"Cut. Stop.\" Tiffany paused the camera and walked into the room.\n\nBen and Taylor looked up puzzled.\n\n\"What's up, Mom?\" Ben was just getting into it and was a little put off by the interruption. He was already showing a small bulge.\n\n\"I guess I didn't convey what I had in mind very clearly. You two need to show a little less experience. You can't be French kissing with such obvious expertise. You need to be more awkward.\"\n\n\"I don't get it.\" Taylor had a difficult time understanding what Tiffany was trying to say.\n\nTiffany explained, \"I need to approach Benny with advice and show him how much better his mom is at kissing than his girlfriend. For this to work on camera, there needs to be more of a contrast between Amanda's kissing and Benny's mother's.\"\n\nBen looked toward Taylor who was sitting with one leg straddled over his lap and arms hanging around his neck. \"I think I get it. Let's cool off on the making out a little. No tongue and try to be stiffer.\"\n\n\"Okay. I'll act like I'm not a good kisser.\" Taylor winked at Ben.\n\nBen and Taylor sat side-by side angled awkwardly toward each other. Taylor's hands were on her legs as if afraid to put them anywhere else.\n\nTiffany began recording at the point where she looked up while sorting through the mail.\n\nShe stopped suddenly, whispering, \"Oh my God. Benny and Amanda are making out.\" The camera focused on the couple sitting on the couch in the den. \n\nTiffany approached slowly as she walked down the hall to film the two. Ben had his hand on Taylor's knee and was kissing her with pursed lips. The two looked exactly how Tiffany had envisioned: inexperienced, awkward, experimenting nineteen-year-old teens kissing when mom was out of the house.\n\nTaylor was having a difficult time refraining from laughing. She found it silly and fun to pretend to not know how to kiss.\n\nIt was Tiffany's cue. \n\n\"Benny and Amanda! That'll be enough of that!\" she said with a booming voice.\n\nThe two lovers broke their labored embrace and Benny stood up as a reaction to being caught. Tiffany noticed Ben's small bulge had grown significantly in his pants. He didn't look fully hard, but his erection was visible.\n\n\"Mom! We were just kissing...I was...\"\n\n\"Sorry, Mrs. Johnson.\" Amanda stood and looked down, then after a pause, looked over to Benny.\n\n\"I have to get home anyway, Benny.\" Amanda took a step away from Benny and walked quickly around the corner to the front door.\n\nTiffany followed her out to the hallway, then turned back and trained the camera on Benny. \n\nTaylor moved behind Tiffany out of the shot. She snuck around to a position behind her back and watched the scene as Tiffany continued to film.\n\n\"So, Benny. How long have you and your little neighbor friend been together?\"\n\nTiffany held the camera recording Benny and his reaction. She moved it down to his crotch to highlight his large tented bulge, then focused on his face after catching the erection on camera.\n\n\"Uh. Well, it just sort of happened. I don't know, about a month?\"\n\n\"A month. And how long have you been sneaking around?\"\n\n\"Mom, we're not sneaking around. We're both over eighteen and it's none of your business. Okay? I can have a girlfriend.\"\n\n\"I'm sorry, you're right. You can have a girlfriend, if that's what she is. She doesn't kiss like a girlfriend, but she seems sweet enough.\"",
        "At this point, Taylor came up behind Tiffany and carefully took control of the camera. Tiffany passed the camera off and Taylor resumed the filming. \n\nTiffany walked into the frame and sat where Amanda was previously kissing Benny. She sat with her legs closed together, her knees pointed to her right side where Benny would sit.\n\nTiffany reached up and took hold of Benny's hand, careful not to brush his jutting bulge. She guided him down to his seat on the couch.\n\n\"Come sit down, Benny.\"\n\nSeeing Tiffany in her disguise was a surreal experience for Ben. He knew it was his mom, but she didn't look like her. She was a hot, big-titted MILF, no doubt about it. No matter what get-up she wore, there was simply no hiding that body.\n\n\"A strong, young man like yourself needs a real woman, one who knows how to treat you, one who knows how to stand up for you, and one who knows how to please you.\" \n\nTiffany sat with a straight posture, her lower back curved, her chest pushed out prominently. Even in her most appropriate clothing, she gave off a sexual energy that was hard to ignore. Her nipples felt hard enough to show right through the conservative shirt and the supportive bra she was wearing.\n\n\"I think Amanda does all those things. She's real nice to me, Mom. You'd like her.\"\n\nTiffany looked to the side, then right at Benny, \"I'm sure I will, son. I must admit she's cute. Even if she doesn't know how to... well... uh, never mind.\"\n\n\"Never mind what, Mom? Wait, what do you mean she doesn't know how to...?\"\n\n\"Well, Benny, I mean come on! She obviously doesn't know how to kiss. That's not exactly hard to see.\"\n\n\"Oh.\" Benny looked away from Tiffany.\n\n\"Maybe, there's someone more experienced you can practice on, you know, so you can show Amanda how to do it?\"\n\n\"Are you saying I don't know how to kiss?\" \n\n\"I'm just suggesting that from what I saw, neither one of you know how to kiss very well, but Amanda didn't seem into it at all.\" \n\nTiffany slowly rubbed her skirt-covered thighs as if petting her legs. She was going crazy with lust for Ben but couldn't let this show to the camera.\n\nBut Taylor caught it all: Tiffany's nervous fidgeting and the small bumps of her stiffening nipples as they became barely visible. It was clear that Tiffany's character was caught in a bit of a conflict. \n\n\"Gosh, Mom. I have no idea who I could practice on. It wasn't easy finding a girlfriend.\" \n\n\"Benny. I'll tell you what. As long as you promise not to tell a soul, including Amanda, maybe I could teach you a few pointers.\" Tiffany smiled, her eyebrows rose enthusiastically.\n\n\"Geeze, Mom. That would be great! Would you?\"\n\n\"Yes, I think that would be okay. You need to see what it's like to kiss a real woman.\"\n\n\"Wait, you mean actually kiss? Seriously, Mom? I thought you were just going to give me a few pointers.\" Benny pulled back slightly from his mom.\n\n\"How about a little of both?\" Tiffany said.\n\nBenny paused. \"Okay...I guess. What do you want me to do?\"\n\n\"Just sit back and try to copy what I'm doing. Match what I'm doing with my mouth.\"\n\nBenny turned toward his mom and moved his head closer to hers trying to remember to act like he had no idea how to kiss. He would let his mom lead in the kiss. \n\nBen was very excited to be able to have a kissing session with his mom. For some reason, he never tried to kiss her like a lover would. Even though he was having regular sex with her, he still felt that would be too intimate for her. \n\nAs Tiffany moved her upper body closer to Ben's she began her instructions.\n\n\"When you kiss a woman, the first thing you need to do is lick your lips and get them moist.\"\n\nTaylor took full advantage of the new freedom she had recording Tiffany's face and zoomed in to her full, red lips. Tiffany licked the top lip slowly, leaving them wet and shiny.\n\n\"Relax them so that they are not rigid and tight. Let your mouth open just a bit like this.\" She demonstrated for her son.\n\n\"Do you think you can do that? Let me see you try.\"\n\nBen sat entranced by his mother's hypnotic, sexual voice and the sight of her soft lips. 'This is better than sex,' he thought.\n\nAs per her instructions, he ran his tongue over his lips imagining how good it will feel to kiss his mom.\n\n\"That's it Benny. Now, lean toward me and gently press your lips against mine. Move them so they are in full contact, but don't tense them up in any way.\"\n\nBen moved his mouth toward his mother's and pressed his lips softly against hers. The feeling was sublime. So passionate, yet so restrained. The energy between them developed instantaneously. He kissed his lips against hers innocently for a few minutes as she returned his soft pressure.\n\nTiffany backed away. \"That was wonderful! Now, as we kiss, begin to move your mouth open a little more and slowly and gently search for my tongue. Your tongue shouldn't be too hard. Don't flex it. It should be wet and a little soft.\"\n\nAgain, Ben met his mother's lips and kissed her, open-mouthed, for a couple of minutes before gently French kissing her. The feeling of her tongue was exciting, the slower pace was building his arousal to an intoxicating level. Tiffany and Ben tongue-kissed gently for far longer than Taylor thought was necessary. 'We'll have to cut some of this,' she thought.\n\n\"Benny, you're really catching on! Let's increase the effort a bit. Let me show you.\"\n\nTiffany moved in like a panther on its prey. Her lips parted- desirous of Ben's lips and tongue. The anticipation of kissing her son without any restrictions was killing her, and her crotch was becoming hot and wet as the dialog progressed.\n\nBen felt his mom's soft, full lips surround his own and was surprised by how aggressive she kissed from the very first moment their lips locked together in this new kiss. \n\nTiffany's butt rose off the couch as her body surged toward Ben. She forced her tongue deep into his mouth and wrapped it around his, spiraling and twisting in a slippery grapple. The saliva was building up between them, which she swallowed as she backed off. She was breathing hard, almost panting.\n\n\"You see how my tongue was playing with yours? Did you feel my lips press a little more tightly as I opened my mouth?\"\n\nBefore Ben could deliver his lines, Tiffany was latched onto his mouth again, this time, she was moving her head and lips around frantically. She was obviously turned on. In a moment of pure lust, she lost her character completely and instinctively grabbed Ben's pulsing cock over his shorts. \n\n\"Mmmm!\" She could be heard moaning on camera. \n\nTaylor decided to stop the recording this time as it strayed too far from the storyline.\n\n\"CUT.\" Taylor lowered the camera and paused it. \"Okay, Tiffany. Grabbing Ben's dick is not in the scene. Didn't we all agree this first scene was going to be tame?\"\n\nTaylor raised the camera and rested it on her shoulder. She stood with one leg off to the side, obviously annoyed.\n\nTiffany sat back onto the couch and let out a loud sigh. At that moment, she despised the fact that Taylor was in the room. 'Damned if I wouldn't fuck Ben right here and now if it weren't for Taylor.'\n\nTiffany adjusted her wig in the back and straightened her blouse.\n\n\"No, you're right. I was on autopilot, I guess. Sorry. Let's continue.\"\n\nThe camera recorded as Tiffany resumed kissing Ben passionately, but without any out-of-character touching. She broke away after a minute. \n\n\"I can feel you returning my kiss. Can you tell the difference between how I kiss you and how Amanda kisses?\"\n\n\"Oh, yes, Mom. You're a much better kisser. At least now I can show her a few things.\" Ben was fully hard and wanted nothing more than to fuck the shit out of his mom, to unload deep inside her. He too had the thought that were it not for Taylor, the two of them would be in the middle of some of the best sex of his life.\n\n\"Great! Why don't we get ready for dinner now?\"\n\n\"CUT.\" Taylor said loudly. \"Okay. That was good. It was a solid start that didn't take up too much time. Our viewers aren't paying to see you two kiss, you know.\"\n\nThe day was not over. Tiffany had two more wardrobe changes that put her into a sexier outfit for dinner, then a neglig\u00e9e with a plunging neckline for the final shot.\n\nBen held the camera part of the time for these in order to narrate his thoughts about his mom's wardrobe changes. Taylor recorded a few shots of Tiffany ogling her son's crotch and arms to show her attraction to her son.\n\nThe dinner scene had Benny at one end of the table and his mom at the other. Taylor set the table, made salads and even placed a few dinner rolls in a basket to make the scene more authentic. She was now recording.\n\n\"You know, Benny, it's been three years since your dad left us.\"\n\n\"I know, Mom. Almost to the day.\" Benny ate his salad, staring at his plate.\n\n\"That's right, it was in the summer, wasn't it? Anyway, I just wanted to let you know what a help you've been filling his role as man of the house. Thank you.\"\n\n\"It's okay, Mom. I kind of like it just being the two of us.\" Ben remembered his lines perfectly, but it wasn't until his speaking them in front of the camera that he realized they were a reflection of his mom's thoughts, her innermost thoughts about their real-life circumstances. The story in the video was slightly different, but the meaning, the sincerity, was carried in her tone of voice in a way that simply reading lines would not have conveyed. After several more lines to set the story, they were done recording.\n\nTiffany went to change, and Taylor set up Ben's bedroom for the final shoot of the day. \n\n\"Help me close the blinds, will you, Ben? This room needs to be dark, like night time dark.\" Taylor was setting up their makeshift lights and looking into the camera to check how it looked.\n\nBen closed the shades. \"I think it's good enough. The camera won't be focused on the windows anyway. This should do.\"\n\nTiffany came in wearing a black, full length neglig\u00e9e. Although it was revealing, it was nothing close to what she would normally wear. Ben could see her inviting cleavage and was reminded how horny he had been all day. \n\nTaylor began filming once Ben and Tiffany were in place. Ben was tucked into bed, Taylor was at the foot of the bed sitting on her knees. Tiffany approached from the side.\n\n\"Would you like to practice a little more before bed, Benny?\" She leaned over Ben, then took a seat on the edge of the bed.\n\nHer blonde hair looked freshly brushed and natural. Enough of her breasts shown under the lingerie to be sexy and suggestive. By now, her stiff nipples could be seen under the lacey, black fabric. She leaned on her elbow getting close to Ben's face.\n\nBenny sat up eagerly, bare chested. \"Yeah, sure, Mom. That would be great!\"\n\nThey began kissing, tentatively at first, but with growing passion and intensity. Soon, Ben's persistent erection bulged up from under his sheets. Tiffany struggled to keep her hands off of Ben as their make out became steamier, but this time she was able to stay in character. Taylor filmed a good five minutes of romantic kissing before Tiffany broke free.\n\n\"Whew,\" she fanned her flushed face. \"You're getting good at this, Benny! If you ever need to practice, just let me know.\" \n\n\"I will, Mom. Thanks.\"\n\nWith a gentle smile, Tiffany rose off the bed and the camera shot her leaving the bedroom. \n\n\"Cut. Great! That's the first day. Three hours of work for about fifteen minutes of footage. Not exactly what we're used to, but we'll have to see how it plays out.\" \n\nBen was thinking about the set up for the next scenes. 'Why did this have to be the end of the shoot? It was only three o'clock, after all,' he wondered. He suspected the blowjob scene would be next and badly needed to unload his heavy balls after being turned on for so long.\n\n\"Why can't we keep filming? The only reason we have to record on more than one day is because of my being able to regenerate for big finishes and to match the same hour of day in terms of lighting, right? Or am I wrong?\"\n\nTiffany looked at Taylor and shrugged her shoulders, \"I guess we could video the next scene.\" \n\n\"The awkward blowjob scene?\" Taylor asked.\n\n\"Yes.\" Tiffany had a hand against her chin, thinking deeply.\n\n\"Do I get to cum in that scene?\" Ben was rubbing his cock over the sheets. The formality of the day's filming made him wonder if the three of them had regressed to a less-sexual approach to their filming. At that moment, he hated the story and its slow start. \n\nTiffany was more than a little flustered herself knowing that Taylor was going to suck Ben's beautiful cock while she had to film their fun. She was hoping to get Ben into bed somehow after Taylor had left, but that was far less likely if he was going to get a blowjob from Taylor within the next hour. \n\nTiffany responded. \"Actually, no, you don't cum. Remember, I interrupt you two.\"\n\n\"Actually, I think your mom is right, Ben. She walks in and Amanda has to leave. But we don't have to go by the script completely.\" \n\nTiffany scowled at Taylor as she got up from the bed to put the camera down on Ben's desk. 'She wants to suck his cock, I know she does,' she thought. \n\nTaylor's eyes suddenly lit up. \"I know! Let's do a dry-run and see how the entire scene is going to play out?\"\n\nTiffany's heart raced at the idea.\n\n\"Yes. Good idea, Taylor. We can rehearse your blowjob, pretending to be inexperienced of course.\"\n\n\"Of course,\" Taylor concurred.\n\n\"Then, I can come in and rehearse a better blow job. Taylor, you can give me behind the scene tips.\"\n\nBen cast aside his reservations and threw the covers back on his bed. He peeled his underwear down to his knees and started stroking his cock. Listening to his mom and Taylor go back and forth about how they would both suck his cock, one after the other, was too much for him to take without touching himself.\n\n\"Well, looks like Benny's ready to go, Amanda!\" Tiffany said, laughing.\n\nTaylor had her eyes locked on Ben's cock as he stroked it and immediately crossed the room and sank to her knees. She was about to start on Ben right there. Tiffany felt she needed more control over the situation.\n\nJust as Taylor's mouth was about to close over Ben's head, Tiffany blurted out, \"Why don't we go down to the living room where this is going to be filmed tomorrow?\"\n\nTaylor and Ben looked over at Tiffany. Ben's hands were already on Taylor's head.\n\n\"Taylor, bring the camera just in case we need to record anything.\"\n\nTaylor shrugged and got up from the floor. She collected the camera, turned the extra lights off, and led Ben downstairs. He followed, naked. His hard cock bounced with each stair as he wound his way down and around to the living room.\n\nTiffany came in with a large, white quilt and spread it over the couch and part of the floor as they stood awaiting her direction.\n\n\"Okay. Taylor is sitting on the couch, then Ben is next to her,\" Tiffany directed.\n\nTaylor already had Ben's thick cock in her hand and was stroking it without thinking as they stood next to each other listening to Tiffany. She was ready.\n\nBen sat on the quilt-covered couch, followed shortly by Taylor. She never broke her stroke on Ben as they got into place. \n\n\"Okay, the scene will start with the camera slowly approaching. So as soon as you hear me in the kitchen when we shoot for real tomorrow, you can start the bad blowjob,\" Tiffany explained.\n\nTaylor lowered her head and Ben aimed his cock toward her mouth as he put a hand on her head. They were both eager for Taylor to get her lips around Ben's dick when she paused and lifted her eyes to Tiffany.\n\n\"How does a 'bad blowjob' look?\" \n\nTiffany looked over to Ben. \"Well?\" \n\n\"Actually, I have some experience here,\" he confirmed, smiling.\n\nTaylor lifted her head and gave a short chortle loud enough that Tiffany shot a quick glance her way.\n\n\"Okay, well?\" Tiffany prodded.\n\nBen grabbed Taylor gently by the back of the neck and eased her face back down toward his groin. It was an awkward position. She was sitting with her butt on the cushion, her feet together on the floor, and her torso wrenched sideways in order to access Ben's cock. \n\nShe began to move from the strange angle when Ben stopped her.\n\n\"No, don't move, that's part of it. That position you're in...it's like you don't know how to be comfortable in the situation and you have just done the bare minimum to give me head. It's perfect.\"\n\nTaylor grunted. \"Ugh. Okay, now what?\"\n\n\"Open your mouth just enough to get about two inches in. Wrap your lips tightly around your teeth like you're afraid they're going to scrape me.\"\n\nTaylor made an awkward face, covering her teeth with her lips, and put Ben's head in her mouth.\n\nTiffany started to laugh at the sight. It clearly looked like Taylor didn't have a clue as to what she was doing.\n\nBen continued, \"Okay, now move your upper body and keep your neck straight so that you're only taking a couple of inches into your mouth. Don't try to take any more.\"\n\nTaylor practiced a bit to get the action just right. It was far from what she had in mind when she suggested a dry-run earlier. She bobbed her head shallowly and awkwardly, groaning, obviously uncomfortable.\n\n\"Great. Let's be clear that this is not a good blowjob,\" Ben clarified snidely.\n\nTaylor popped her mouth off. \"Where should I place my hands?\"\n\n\"Put one at your side helping you balance yourself and use your thumb and index finger to hold my dick, as if you don't really want to touch it, so you provide the least amount of contact that is required to steady it.\"\n\nTaylor went through the motions, performing her worst blowjob ever for a few minutes. \n\nBoth Ben and Tiffany winced at the purposely awful oral Taylor was performing on Ben.\n\nWhen she began to giggle, all three started to bust out laughing. \n\n\"Okay, okay, I got it.\" Taylor got up laughing. Her desire to suck Ben's cock had somehow diminished.\n\nTiffany immediately sat next to Ben, where Taylor had been. Her hand instantly wrapped around Ben's shaft and she began stroking him. It felt slightly wet from Taylor's mouth.\n\n\"I'll start with the 'I caught you' dialog we wrote, then I'll change positions.\" Tiffany's hand continued stroking Ben as she explained the gist of the scene with the other two. The trio was becoming noticeably aroused. After the laughter subsided, they were reminded just how turned on they had become as a result of their sexless recording that day.\n\nBen sat, watching his mom stroke him. He wanted to cum on her face right then, but something was off. Her disguise! They weren't filming, so it served no purpose. If he was going to cum on her face, he wanted to see Tiffany, his mom, splattered with cum, not just the facsimile.\n\n\"Mom, can you take the wig and glasses off?\" \n\nTiffany smiled and slowed her strokes. 'He wants to see his mom suck his cock,' she thought. The idea sent shivers over her whole body and she immediately became gushing-wet knowing her son was turned on by her natural appearance.\n\n\"Of course.\" Tiffany carefully unfastened the wig and removed the glasses, handing them to Taylor, who placed them carefully on the end table. She shook her lustrous, red hair and gathered it behind her shoulders loosely. \n\n\"How's that?\" she asked.\n\n\"Much better, Mom, thanks.\"\n\nTiffany knelt on the floor between her son's legs and slowly spread them a little wider. Ben's aching, red-hot colossus raged at her firm grasp as she wrapped her fingers as far as they could go around the monster. \n\n\"You are so fucking big, Ben.\" Tiffany almost whispered as she shot a look to her son that said, 'I need this cock.' \n\nBen sat back and was finally able to receive some sexual satisfaction after an entire day of being teased. \n\nTiffany pulled his cock toward her steamy, wet, lips and ran them closed over the glans and underside. She loved how smooth and satiny it felt against her.",
        "\"That feels great, Mom,\" Ben commented, placing an encouraging hand on her shoulder.\n\nShe opened her mouth and extended her tongue, lapping at the hard meat in front of her. She kept her tongue stuck out and wet the long, wide sides, making it shiny and plastic looking.\n\n\"Mmmm, Ben.\" She opened her mouth wider and engulfed the heated knob circling her tongue around its girth.\n\n\"Damn, Mom. I love that.\"\n\nTaylor was flush. She felt slighted by Tiffany's role that she wrote for herself. 'Tiffany's the heroine in this story. She comes in and saves the day from the horrible teenager that doesn't know what she's doing. Well, I'm not getting sidelined that easily.'\n\nTaylor got on her knees next to Tiffany and lifted Ben's leg over her head. The lucky young man now had two hot women between his legs.\n\n\"Oh shit...\" he remarked quietly.\n\n\"That's good, Tiffany, but let me try to go deeper than the first time you put your mouth around him.\" Taylor put her hand around Ben's base and gently pulled his dick toward her.\n\nTiffany felt Taylor's pull and reluctantly removed her mouth. She relented to Taylor's example as the younger woman shifted the cock to her side.\n\nIn one smooth action, Taylor slid the swollen member into her mouth, tilted her head down, and put half of Ben's length down her throat. She took a deep breath through her nose, then reversed and stopped at the head and moaned, \"Nnnnn\". \n\nShe tilted her head and slid her throat down again expanding it for the thick tool as she took over half the cock into her. Taylor blinked up at Ben first, then angled her head toward Tiffany, looking at her as if to say, 'See, take it deep like this.'\n\nTiffany thought Taylor was trying to show off, even though she looked like some kind of animal with a distended jaw, taking so much of Ben's thick member down her throat. \n\nAs she watched, Tiffany was flustered at first, but became more aroused by the second. Without planning it, she and Taylor were sharing her son's massive cock between them in a sort of blowjob duel. She still wore her neglig\u00e9e and didn't want to get it messy, so she stood up and removed it, placing it out of the way. As she shuffled back into position next to Taylor and between Ben's legs, she felt how sopping wet she'd become. She knelt, watching Taylor fellate her son with her right hand now rubbing her enormous and extended clit.\n\n\"Here, you try.\" Taylor handed Ben's cock to Tiffany.\n\nNot wanting to be shown up, and feeling heady from the growing sexual energy, she eagerly stuffed as much of Ben's thick pole as she could into her wet mouth and down her throat.\n\n'Taylor's good, but I am built for Ben's big dick,' she thought.\n\nShe let up, coughed a little, then began seriously sucking on half of her son's penis as Taylor took her shorts and panties off, throwing them to the other side of the couch.\n\nSlurping, sucking, gagging, and soft moans were the backdrop for the best blowjob Ben had ever had. His gaze was fixed on whomever had his cock in her mouth at the moment. He soon became overstimulated watching his mom bob on half of his meat down her throat with each penetration, then Taylor do the same, almost as if to match abilities.\n\nOn her turn, Taylor wedged Ben's head and several inches between her teeth and the side of her mouth. The thick cock bulged obscenely out the side of her face. Then \"POP\" she extracted it from the side and offered it to Tiffany, \"Here, you're turn.\"\n\nNot to be out done or interfere with the sexual rhythm the three had developed, Tiffany did the same, placing the enormous dick under her cheek only to pop it out with the sound of a small champagne bottle being uncorked. \n\n\"That sounds so nasty!\" Tiffany looked at Ben smiling. \n\nThe two women worked Ben thoroughly and energetically. Gradually, the blowjob began to change from a competitive bout to more of a collaboration. Tiffany and Taylor soon had both of their mouths on Ben at the same time. One would mouth his head while the other kissed, licked, and rubbed his shaft, or sucked his balls, then they'd switch. Their mouths and tongues touched on more than a few occasions as they worked on pleasing him. Ben's entire crotch became wet from their efforts.\n\nThis prolonged, double-sucking went on for what Ben thought was a good twenty minutes before he began to hear Taylor moaning. She had moaned as she sucked his cock before, but this was out of sync with her movements. Tiffany was sucking on Ben using a combined mouth-throat-mouth approach on his shaft, watching Ben's reaction to her efforts. She held his cock in her right hand as Taylor was next to her on her left. Taylor's face was resting on his thigh and she was sucking loudly on his right nut as she moaned. He adjusted his view by sitting up straighter to get a better line of sight.\n\nIt was then that Ben noticed Tiffany's left hand was between Taylor's legs cupping and playing with her shaved pussy as Taylor wiggled and writhed upon it. \n\n\"Oh fuck!\" Ben felt a spritz of precum slip out of his dick. He almost blasted his load down his mom's throat at the sudden realization that his mom and Taylor were playing with each other. Time seemed to slow as he looked at his mom's hand giving Taylor a ride. He had to grab his dick and squeeze it, wrenching it from Tiffany's mouth and grip.\n\nTiffany smiled at her sexual prowess, tasting Ben's precum and feeling Taylor's clenching pussy around her fingers. She'd almost gotten them both off simultaneously by herself. \n\nTaylor's brow was furrowed as she looked desperately at Tiffany. Ben watched in utter disbelief as his mom removed Taylor's shirt exposing her huge, firm tits, jiggling from the release of the tank top. Taylor moaned loudly in anticipation. \n\n\"Lie down on the floor, Ben,\" his mom commanded urgently. \n\nBen stood up and stepped away from the women, then nearly threw himself down at the request. Taylor crouched over him, her mouth closing over his cock. She resumed her work, bobbing and sucking, drooling copiously and moaning. She got onto her elbows and knees between Ben's legs, her head bobbing on much of his full length slowly with one hand caressing his heavy balls. \n\nTiffany moved behind Taylor, who seemed drunk with lust as she moaned and bobbed. She positioned herself on her knees behind her. Taylor felt Tiffany's hands on her ass and shifted, spreading her legs wider and arching her back to push her butt upwards. Suddenly, her eyes flew open and she moaned loudly, looking at Ben.\n\nTiffany's eyes smiled at Ben, her tongue inside Taylor's tight wet pussy. Ben's mom was working on Taylor from behind. \n\n\"Jesus.\" Ben exclaimed quietly. 'This is far better than any porn I've ever seen,' he thought. He was more than a little surprised by the turn of events.\n\nTaylor could no longer suck on Ben's cock with Tiffany's mouth and hands working their magic. Her head spinning with pleasure and an approaching orgasm, she throated Ben to her limit one more time, gagged herself, then slowly removed her mouth from his cock.\n\n\"OOohhh Gooood!\" she panted.\n\nTaylor shook violently and grunted. All she could manage was to keep a firm grip around the base of the Ben's towering erection, like some thick handle, as her hips thrust back and wiggled all over Tiffany's face. \n\nBen could only see his mom's face buried at the rear of the nubile blonde. From that angle, his view of the action between his mom and Taylor was terrible. \n\nAfter several minutes and growing tired of his role as Taylor's handle, Ben got up from the couch.\n\n\"Fuck it.\"\n\nHe walked around to the back of his mom who had looked up at him with her face shiny from Taylor's cum, and settled down on his knees behind her round, white ass.\n\nTaylor clutched the cushion of the couch tightly, suddenly noticing the lack of Ben's cock. She'd been cumming too hard to fully realize he had moved and finally snapped back to reality. She took the pause to flip onto her back and settled with Tiffany's face on her bare pussy mound as she watched Ben move to mount his mother from behind.\n\nBen stroked his cock a couple of times for good measure, then waved it between his mother's thick labia, separating the lips to clear a path. He smeared his fat cock head over her sloppy wet pussy, then placed it at her entrance.\n\n\"Get ready, Mom.\"\n\n\"Ohhhh, yes!\" Tiffany panted, clearly overwhelmed with arousal. She lowered her head and flicked her long tongue against Taylor's nubby clit as she spread her legs, anticipating Ben's cock easing into her.\n\nBen did not 'ease' into her. He instead drove into her in one forceful penetration.\n\n\"Ooooh...GODDD!\" Tiffany's upper body collapsed to the rug-covered floor, her tits smashed out in white, sexy bulges from the sides.\n\n\"Fuck yes!\" he hollered as he grabbed the sides of her hips and held himself at full depth, flexing and enjoying the warmth of Tiffany's snug, hot cunt.\n\nTiffany's hands bunched the quilt as she endured Ben's deep spearing. She couldn't believe she'd taken his whole dick, even as she felt his hips meet hers. She felt like she had a silo stuffed inside her as she looked up at Taylor, her face scrunched with effort as her pussy adjusted.\n\n\"Fuck!\" Ben exclaimed sharply, with a loud slap on his mother's ass. He drew back and sawed forward again to full depth. Discarding all abandon, he began pounding into Tiffany in full, rapid strokes.\n\nTiffany winced and her whole body shook with each powerful thrust from her virile son. She managed to get up onto her elbows through the animal-like assault Ben was giving her pussy.\n\n\"Ggoooooddd, Ben!\" she screamed. \"Ah! Ah! Ah!\" she cried with each thrusting jolt. \"Fuck, that's deep...\" Tiffany began panting.\n\nBen's hips slapped hard and loud against his mom's ass as he pummeled her with his enormous cock. His full, heavy balls slapped her loudly, sometimes swinging fully up against Tiffany's lower stomach. He held nothing back for the next ten minutes as he vented all the day's frustrations out and into his mother. Taylor, now forced to play with herself, cursed aloud as she saw how far away the camera was. She urgently wanted to capture the slamming Tiffany was receiving from her son. \n\nBen's cock had been hard for so long it was numb. He discovered that slowing his pace and utilizing a more steady, rhythmic tempo would be best for all. He slowed and maintained his full-penetrations in a deliberate, slower speed.\n\n\"Oh, yes, Ben. Nice and slow and deep,\" Tiffany said, better able to take his cock this way. Her pussy began making sloshy sounds as Ben drew in and out.\n\n\"That's it baby. Mommy's going to cum.\" Tiffany reported calmly. She lowered her face back between Taylor's legs and moved her head from side-to-side as if she enjoyed feeling the soft, shaven pussy against her mouth, nose, and chin. \n\nTaylor loved how Tiffany's soft lips and gentle tongue felt against her pussy; although she was more than a little surprised at how turned on she was to have Tiffany give her oral. Tiffany's face pressed into her more firmly with each forward stroke Ben made giving a rhythm to her sucking and licking. Taylor looked down at her face as Tiffany worked on her clit, her eyes slowly following the line of her body down her sexy, white back and round ass to where Ben was gripping and fucking her doggy style. Taylor was close to cumming again.\n\nBen continued his pace through the familiar yet luxurious warmth of his mom's approaching orgasm. He couldn't believe how wet she was getting. He kept his rhythm steady and prepared for another wet rush.\n\nTiffany's climax came over her powerfully, more like a swelling wave than a sudden shock.\n\n\"Mmmmmm... MMMMMmm... Nnnnggg! BEN!\" she wailed deeply.\n\nHer hips rolled gently back and forth with Ben's motions as her mouth fell open, overwhelmed. She squeaked and murmured unintelligibly with her face straight ahead as if addressing Taylor's pussy. Ben's cock was soothed by the warm fluids that washed over its length as his stroke continued without pause, even as his mother's pussy tightened and pulsed around his shaft. He watched in a sexual trance as Tiffany's full, white tits swung outward from her sides, then together back and forth, slowing as her nipples dragged against the rug.\n\n'Damn, this is good,' he thought. \n\nTiffany wound down from her climax and enjoyed Ben's steady pace. With his fucking toned-down to a constant deep drive in and out, Tiffany was free to explore Taylor's sex. It occurred to her that while the experience was entirely new to her, she felt as though she knew exactly what she was doing. Tiffany did to Taylor what she enjoyed having done to herself. It was quite simple to Tiffany's mind, and obviously, it was having the desired effect. \n\nTaylor was huffing and squirming against Tiffany's face. Her thin fingers laced into the strands of Tiffany's red hair for leverage. She wanted more and ground herself against Ben's mom's face, wanting to see how far she could push herself. And how far Ben and Tiffany would go.\n\nTiffany adeptly brought Taylor to three back-to-back orgasms. At the end of the third, Taylor lifted her head, her blonde hair flopping over her face in a frazzled tangle. She laughed but didn't pull back from Tiffany's continued attention. Tiffany was in awe of Taylor's stamina, as she still seemed incredibly turned on.\n\nThis filled Tiffany with a spark of sexual energy and she moved a hand under her body to her own clit. She rubbed it as Ben drove into her in his steady pace. Occasionally, his balls would nudge her fingers and she reached further down to gently grab his sack.\n\n\"Oh, fuck yes Ben!\" Tiffany cried out, her body seemed to spark electrical jolts of sexual energy. Ben felt his mom close her hand over his balls, squeezing them. He also felt the backward movement of her ass toward his forward motions deep into her cunt. He briefly closed his eyes, 'God, I love this.'\n\nTaylor was discovering that she loved the soft, smooth feel of a woman's face between her legs very much. It was quite different from that of a man. Tiffany's firm but feminine tongue flipped and twirled against Taylor's sensitive clit as her full lips surrounded her upper labia. Taylor could make out Tiffany's moans and could distinguish the ones caused by Ben's cock and the ones she made as a result of her sucking and licking her clit and pussy. Approaching another orgasm, Taylor grabbed the back of Tiffany's head again and forced her face against her hot snatch.\n\n\"NNNGAHHH! Oh shit! Oh God, Tiffany!\" Taylor felt the room spin on her final orgasm.\n\nShe ground her sloppy pussy into Tiffany's face and felt her legs shake around Tiffany's head. She climaxed hard and the orgasm seemed to go on forever. Finally, her pussy became too sensitive for any more stimulation and she had to pull back.\n\n\"I can't...I just...I can't take anymore, Tiffany.\" Taylor propped herself up onto her arms and slid her hips away from Tiffany's face.\n\nTiffany looked up, smiling and whispered, \"I love your pussy.\"\n\nTaylor was officially done. Too many orgasms and too much stimulation caused her to feel like she was intoxicated. She sat back up on the couch and watched Ben and Tiffany go at it in a post-orgasmic bliss. \n\nBen's slower pace had allowed for more feeling to return to the tip of his cock. He felt he could finally cum. \n\nHe moved each of his hands from Tiffany's hip to grip her ass cheeks. He squeezed roughly, looking down and drawing his hips back. Her ass parted, and he looked down at her tight asshole. Ben bore down, tightening his grip. He began his hard-fucking pace again.\n\n\"Fuck yes, Mom. I love fucking you!\" he snarled as his orgasm was building deep within his core.\n\n\"Oh, Ben I love fucking you!\" Tiffany was rubbing her clit under her body as Ben continued to fuck his mom from behind. \n\nHe focused on his mom's tight little asshole. It was small, puckered, and pink, winking at him. He used his thumb to lightly feel the outer ring, knowing better than to penetrate.\n\n\"Oh God, Ben!\"\n\nShe seemed to perk up when he touched her asshole, so he tapped it gently with his thumb as he plowed into her.\n\nThat was it for Tiffany. This orgasm hit her suddenly, and her body clenched as she was wracked with pleasure. Ben felt more cum envelop his cock as he felt the hot semen rise from his balls. He gritted his teeth and continued pounding into Tiffany's gushing pussy.\n\n\"Fuck, MOM!\"\n\nBen plunged deeply into his mom, feeling his cock throbbing and about to unload. Images of how deep inside her his cock must be filled his mind. He stared at her tight sphincter as it clenched and relaxed in time with her clenching pussy. His balls felt searing hot.\n\nUsing the technique he'd learned from Taylor, he held himself still, breathing hard, blood pumping in his temples. Tiffany's body clenched around him, but he held fast. Would he cum in his mom? One more pump, and he knew he'd spout a fountain of semen.\n\nHearing Ben yell, Taylor stirred. She realized what was about to happen as she sat up. Ben was holding himself at full depth inside Tiffany, panting and sweating. She recognized that look. Ben was about to explode.\n\nTiffany was clamping her entire body around Ben's fat shaft. She was practically pumping his cum out of him as she continued to orgasm shamelessly, clutching the quilt with both hands.\n\nIn the throes of her orgasm, Tiffany felt Ben's cock swell inside her. She knew the feeling: he was going to cum. Would he pull out? Would she make him pull out? Did she even want him to pull out? The waves of pleasure washed over her and it was all she could do to grip the quilt tightly.\n\nTaylor had the sudden desire to taste Ben and Tiffany together. She wanted his cock in her mouth.\n\n\"Yes, Ben, YES!\" she said out of nowhere, surprising both Ben and Tiffany.\n\nIn one quick bound, Taylor moved next to Tiffany as she was on all fours, impaled on Ben's cock. Taylor put her cheek against the small of Tiffany's back, just on top of her plump ass cheeks.\n\n\"I wanna taste it,\" Taylor said, staring intently up at Ben.\n\nTiffany felt Taylor sidle up to her and turned back toward Ben, her body still shaking weakly.\n\n\"Give it to her, baby,\" she offered. As much as she wanted to feel Ben's cum deep inside her, Tiffany's pussy was worked over and spent and needed a break.\n\nTaylor placed her face closer to Ben's cock and looked up at him. Her face was just inches from where Ben's cock and Tiffany's pussy embraced.\n\nIn one motion, Ben flung his hips back, withdrawing from his mother. Taylor watched Ben's club-like cock spring free and opened her mouth wide, her gaze rising back to Ben as she stuck her tongue out.\n\nBefore he could align himself with Taylor's mouth, Ben began cumming. His stiff erection lurched, and he couldn't hold back his suppressed ejaculation any longer.\n\n\"Gah!\" Ben shot a volley of spunk across Taylor's face and Tiffany's ass then back before he managed to dock his surging dick inside Taylor's waiting mouth.\n\nTaylor closed her eyes as the spray hit her face. Ben pushed his hips forward and entered Taylor's gaping mouth. She felt his fat head hit her tongue and closed her lips tightly around it. She relished the distinct flavor of Tiffany's cum as she prepared to receive Ben's deluge. He brought his hands up to hold Taylor's head, letting her control the depth. His body trembled and his shaft leapt between Taylor's closed lips as they stretched around him.\n\nTiffany moved to crouch next to Taylor, watching Ben stuff his cock into Taylor's mouth. She wanted a front-row seat to the action.\n\n\"Ahhh,\" Ben sighed, as he continued to release.\n\nTaylor felt a steamy stream of cum splatter against the back of her throat powerfully. She swallowed, but the thick fluid clung to the back of her throat stubbornly. Before she could swallow again, Ben shook and released another sticky spurt onto the roof of her mouth.",
        "\"Godddd, Taylor,\" Ben said hoarsely as he unloaded. He watched her swallow and struggle to keep up.\n\nTaylor blinked her eyes open and wondered if she'd be able to manage the cum pouring out of Ben. She brought a hand to Ben's bucking shaft and the other to his balls. She swirled her tongue around the thick tube jammed in her mouth and did her best to gather the cum from the roof of her mouth before swallowing again, this time harder.\n\nBut Ben's rapid jets continued firing as he grunted through his pent-up orgasm. Taylor's cheeks billowed out, teeming with Ben's expelling load, but she took it, blinking briskly. A pearly strand burst from the interface of Ben's shaft and Taylor's lips, drawing into a long drip from her chin.\n\n\"Fuck-\" Ben said haltingly, watching Tiffany move next to Taylor. He unloaded a weaker stream.\n\nAs it spilled into Taylor's mouth, she paused, as if considering something. Her body lurched abruptly and she coughed, spraying a mist of cum against Ben's heavy balls.\n\nTiffany recognized Taylor's struggle and gently pet her hair.\n\nShe swallowed the last of it with a loud gulp.\n\nBen trembled violently, depositing his last few drops inside Taylor.\n\n\"Uhhh, uhhh, god,\" he croaked.\n\n\"All done, baby?\" Tiffany asked, looking up at Ben.\n\nHe nodded dumbly, his mouth gaping open.\n\n\"Ooooh, wow, Ben!\" Tiffany chirped, tingling again with sexual energy but too worn out to act on it.\n\nBen stepped back, physically drained, and fell onto the couch to watch Taylor and Tiffany recover from their impromptu sexual adventure. The two turned toward the couch. Taylor was panting from the ordeal.\n\nTiffany sat next to Taylor on her butt as they now faced Ben. Her legs spread slightly and she was absently playing with her sloppy pussy. It gaped visibly and was clearly worked-out, swollen, and red.\n\nTiffany slowly rose to her feet and looked at Taylor squatting on the floor. \"Well, I guess we all liked that!\" She smiled looking over to Taylor down at her side.\n\nTaylor seemed to blush and broke out in a big smile. \"Yeah, you could say that.\" Taylor was thoroughly satisfied, but she couldn't seem to shake her nagging curiosity about Tiffany's pussy. She had tasted it from Ben's cock and considered what it would feel like- wet, slippery and pressed lustfully against her own lips and tongue.\n\nBen shook his head, still in disbelief that his life had become a wild sexual fantasy- the envy of any straight man the world over. He sat comfortably on the couch and rested, thinking about the blowjob scene they would shoot the very next day.\n\n\"I think we can safely call that a successful dry-run!\" Tiffany declared as she stood looking back and forth between her two lovers. Taylor laughed adding, \"There was nothing dry about that!\"\n\n(CONTINUED IN CHAPTER 7)"
    ],
    "authorname": "Cockhole",
    "tags": [
        "mom and son",
        "incest",
        "milf",
        "red hair",
        "oral sex",
        "big tits",
        "big cock",
        "mother",
        "son",
        "cum play"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/moms-home-movies-ch-06"
}